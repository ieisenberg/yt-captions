[
  {
    "text": "um hello so we are at the Witt maintainer talk um today we're going to",
    "start": "160",
    "end": "6400"
  },
  {
    "text": "deep dive into one of the most important uh one of the very important module of",
    "start": "6400",
    "end": "11440"
  },
  {
    "text": "uh wittus initially I'm going to u start with a very quick intro um to what is",
    "start": "11440",
    "end": "19359"
  },
  {
    "text": "and u my name is Rohit Mak i'm a maintainer i work at planet scale i've been maintaining witness for about 5",
    "start": "19359",
    "end": "24880"
  },
  {
    "text": "years and I'm Schlomi with planet scale uh also maintaining for five years and",
    "start": "24880",
    "end": "30560"
  },
  {
    "text": "uh contributed in the my scale community i authored ghost orchestrator and other open source",
    "start": "30560",
    "end": "37000"
  },
  {
    "text": "tools yeah so originally uh Deepti Siger who was a tech lead was supposed to",
    "start": "37000",
    "end": "42280"
  },
  {
    "text": "uh do whatever I'm talking about now but she had some personal issues you can land the last minute",
    "start": "42280",
    "end": "48600"
  },
  {
    "text": "um",
    "start": "48600",
    "end": "51600"
  },
  {
    "text": "so what is Vitus right so that's a question that many people have been coming and asking and we find it a",
    "start": "54120",
    "end": "60160"
  },
  {
    "text": "little surprising because uh if you use slack every message of yours is actually",
    "start": "60160",
    "end": "65439"
  },
  {
    "text": "being stored in a vit cluster if you use uh if you use u git create PRs issues",
    "start": "65439",
    "end": "74000"
  },
  {
    "text": "they all going into vit play u activation games every bullet",
    "start": "74000",
    "end": "80000"
  },
  {
    "text": "is going into vit uh vented",
    "start": "80000",
    "end": "85640"
  },
  {
    "text": "shopify many of these uh hubspot right so cash app if you're uh from the US",
    "start": "85640",
    "end": "93840"
  },
  {
    "text": "that's entirely in witness uh we run like Slack runs uh over three million",
    "start": "93840",
    "end": "99520"
  },
  {
    "text": "queries a second um Vitest was one of the reasons they survived COVID very well when suddenly",
    "start": "99520",
    "end": "105920"
  },
  {
    "text": "everybody is working remote um so so it's proven at level but all of",
    "start": "105920",
    "end": "114640"
  },
  {
    "text": "you are probably indirectly using it but you don't know about it so that's why I wanted to make a point here of talking",
    "start": "114640",
    "end": "120640"
  },
  {
    "text": "about this so it originated in uh Google in YouTube uh and it was serving all the",
    "start": "120640",
    "end": "129200"
  },
  {
    "text": "metadata for YouTube for a long time um until Google finally when they bought it",
    "start": "129200",
    "end": "134239"
  },
  {
    "text": "moved it over to Spanner and then they open sourced it so it's got Apache 2 license um there",
    "start": "134239",
    "end": "140800"
  },
  {
    "text": "a lot of contributors from all over um one of the key decisions that was",
    "start": "140800",
    "end": "146400"
  },
  {
    "text": "made because they were already running MySQL servers that to make continue to use MySQL as a storage layer so unlike",
    "start": "146400",
    "end": "152000"
  },
  {
    "text": "many uh systems who invent uh database not that they're bad but you here you",
    "start": "152000",
    "end": "158720"
  },
  {
    "text": "already get something that you know especially if you have used MySQL and we don't have to worry about that part of it what we do is we take multiple of",
    "start": "158720",
    "end": "168239"
  },
  {
    "text": "MySQL clusters uh give you a distributed option uh make it distributed and uh so it's massively",
    "start": "168239",
    "end": "175760"
  },
  {
    "text": "scalable i mean you can just see if all these um users are using it [Music]",
    "start": "175760",
    "end": "183490"
  },
  {
    "text": "um high availability is also really important um so there are three things",
    "start": "184519",
    "end": "190159"
  },
  {
    "text": "that make it highly available yeah what I forgot to mention earlier was it was",
    "start": "190159",
    "end": "195200"
  },
  {
    "text": "uh Google when they bought it they ported it over to Bog Google Borg which",
    "start": "195200",
    "end": "200400"
  },
  {
    "text": "is a cluster management system which actually is the inspiration for Kubernetes uh and Docker so this is been",
    "start": "200400",
    "end": "207840"
  },
  {
    "text": "cloud native from like very early days so you get Kubernetes scaling um",
    "start": "207840",
    "end": "215040"
  },
  {
    "text": "the architecture is there's a lot of microservices you can scale them separately depending on your uh",
    "start": "215040",
    "end": "220239"
  },
  {
    "text": "requirement mysql of course already has replication so you can use that and Vitus adds",
    "start": "220239",
    "end": "228560"
  },
  {
    "text": "something really important which is very special uh to Vitus is sharding horizontal sharding there's also you can",
    "start": "228560",
    "end": "233840"
  },
  {
    "text": "do vertical sharding but that's easy horizontal sharding where a table sits across multiple um MySQL servers right",
    "start": "233840",
    "end": "241599"
  },
  {
    "text": "parts of it one row isn't only one shard and Wis provides configurable sharding",
    "start": "241599",
    "end": "247599"
  },
  {
    "text": "right so many databases talk about auto sharding it it that works for some workloads no problem but for many of our",
    "start": "247599",
    "end": "254080"
  },
  {
    "text": "customers for many workloads as you scale you need depending on your work uh",
    "start": "254080",
    "end": "259359"
  },
  {
    "text": "load patterns and the kind of queries you run and the kind of apps you build",
    "start": "259359",
    "end": "264400"
  },
  {
    "text": "developers you have you need uh to configure how you shard your data and",
    "start": "264400",
    "end": "270479"
  },
  {
    "text": "Vitis does that very well you can change your sharding at any time there is zero time downtime cut over built in through",
    "start": "270479",
    "end": "276880"
  },
  {
    "text": "various complex mechanisms you don't really have time to go into that but uh we are going to be at booth 1B in the",
    "start": "276880",
    "end": "283600"
  },
  {
    "text": "north um for some time maybe today and uh tomorrow so",
    "start": "283600",
    "end": "289479"
  },
  {
    "text": "um meet us up there um there's also a lot of things operability that is there for backups uh maintenance if you want",
    "start": "289479",
    "end": "296560"
  },
  {
    "text": "to upgrade your versions etc um yeah so a lot of people use w move to",
    "start": "296560",
    "end": "306320"
  },
  {
    "text": "witness for scalability performance but there are also users who",
    "start": "306320",
    "end": "312720"
  },
  {
    "text": "just use it for the module is going to talk about which is doing schema changes",
    "start": "312720",
    "end": "318080"
  },
  {
    "text": "at scale so this a huge problem I'll let him uh talk more about it so over to",
    "start": "318080",
    "end": "324880"
  },
  {
    "text": "thank you all right So we want to talk about",
    "start": "324880",
    "end": "330800"
  },
  {
    "text": "how Vest manages schema changes at scale to do that we need to discuss a little bit about the VitS architecture so I'm",
    "start": "330800",
    "end": "337360"
  },
  {
    "text": "going to do a bottoms up real quick walk through about the architecture so consider a normal MySQL replication",
    "start": "337360",
    "end": "344400"
  },
  {
    "text": "topology in this picture you have one primary three replicas the first thing we're going to do is to add a tablet",
    "start": "344400",
    "end": "351120"
  },
  {
    "text": "which is kind of a sidecar or a demon attached to each of the MySQL nodes so",
    "start": "351120",
    "end": "356960"
  },
  {
    "text": "this tablet has control over the MySQL server it can bring it down bring it up restore from backup but most importantly",
    "start": "356960",
    "end": "363199"
  },
  {
    "text": "for our discussion is that it controls all the traffic that is going into the MySQL server the MySQL otherwise does",
    "start": "363199",
    "end": "370479"
  },
  {
    "text": "not allow incoming connections so the app never talks directly to the MySQL server in production you will have",
    "start": "370479",
    "end": "378080"
  },
  {
    "text": "multiple clusters maybe it's a different database for whatever uh reason you have",
    "start": "378080",
    "end": "384240"
  },
  {
    "text": "multiple clusters and what we're going to put in front of them is Vitigate which is a query engine and loan",
    "start": "384240",
    "end": "391600"
  },
  {
    "text": "balancer and query routter and uh uh firewall like all combined into one and",
    "start": "391600",
    "end": "399120"
  },
  {
    "text": "vitigate is a component that masquerades as a monolith my server so it can speak",
    "start": "399120",
    "end": "404479"
  },
  {
    "text": "to my protocol your app connects to that talks to it and thinks that this is",
    "start": "404479",
    "end": "410000"
  },
  {
    "text": "actually the database where behind the scene vitigate really talks to the all the all of the underlying uh",
    "start": "410000",
    "end": "418440"
  },
  {
    "text": "clusters so in reality we have many vitigates both for high availability and",
    "start": "418440",
    "end": "424080"
  },
  {
    "text": "for uh throughput of queries just to have enough capacity to serve everyone rohit mentioned that Vita Vitz",
    "start": "424080",
    "end": "432080"
  },
  {
    "text": "is a sharding framework and this is something we're going to discuss in length today so you you might have some",
    "start": "432080",
    "end": "438800"
  },
  {
    "text": "databases that are unsharded but some databases just too large and you shard them so there will be multiple",
    "start": "438800",
    "end": "447240"
  },
  {
    "text": "shards and for different databases and some databases are unsharded and the",
    "start": "447240",
    "end": "452560"
  },
  {
    "text": "question is okay so how does the how does my query go from here to there how does Vitigate know if I'm going to query",
    "start": "452560",
    "end": "460720"
  },
  {
    "text": "use commerce select star from orders using customer ID equals 4 how does it",
    "start": "460720",
    "end": "465919"
  },
  {
    "text": "know that it needs to go to this specific database on this specific shard",
    "start": "465919",
    "end": "471759"
  },
  {
    "text": "and the answer is that we have a sharding scheme right a sharding",
    "start": "471759",
    "end": "477160"
  },
  {
    "text": "configuration it's stored on a non-data path uh topology server as we call it",
    "start": "477160",
    "end": "483520"
  },
  {
    "text": "it's basically anc footprint in memory just to define",
    "start": "483520",
    "end": "488879"
  },
  {
    "text": "the routing rules for the entire cluster and once vitigate starts it loads the",
    "start": "488879",
    "end": "494160"
  },
  {
    "text": "data into memory and from there like it's not in the data path of your queries okay so",
    "start": "494160",
    "end": "500120"
  },
  {
    "text": "far okay so schema changes is a big problem",
    "start": "500120",
    "end": "506319"
  },
  {
    "text": "in the myl world if you're not familiar if you have",
    "start": "506319",
    "end": "511560"
  },
  {
    "text": "a table that is really large you have a gazillion rows like a billion or",
    "start": "511560",
    "end": "517800"
  },
  {
    "text": "more altering a table like adding a column or modifying an index is a",
    "start": "517800",
    "end": "524399"
  },
  {
    "text": "process that could potentially take hours or even days during that time the",
    "start": "524399",
    "end": "529600"
  },
  {
    "text": "table will be locked locked such that you cannot read and you cannot write to it so it's kind of an outage situation",
    "start": "529600",
    "end": "536399"
  },
  {
    "text": "now my scale does support some online operations and some instant DDL which is really fantastic but it's limited it's a",
    "start": "536399",
    "end": "543360"
  },
  {
    "text": "subset of all the operations that can be done on the table and this is the reason",
    "start": "543360",
    "end": "548560"
  },
  {
    "text": "why you will find online schema change tools in the MySQL landscape such as",
    "start": "548560",
    "end": "554880"
  },
  {
    "text": "ghost py online schema change spirit and others vest also implements an online",
    "start": "554880",
    "end": "561440"
  },
  {
    "text": "schema change mechanism and all of these tools kind of work in the same way the idea is this you have this huge massive",
    "start": "561440",
    "end": "568800"
  },
  {
    "text": "table there's millions and millions and millions of rows in that table now you want to modify it but we know that this",
    "start": "568800",
    "end": "574800"
  },
  {
    "text": "is a blocking operation so what these tools do they create a new table we call it the shadow table in the likeness of",
    "start": "574800",
    "end": "582240"
  },
  {
    "text": "your original table but it's empty now we alter the shadow table which is a",
    "start": "582240",
    "end": "587839"
  },
  {
    "text": "cheap operation because the table is empty so it's no time then we start",
    "start": "587839",
    "end": "593200"
  },
  {
    "text": "populating the shadow table from the original table we both copy the millions and millions and millions and rows as",
    "start": "593200",
    "end": "600800"
  },
  {
    "text": "well as apply all the incoming traffic all the chain log that is ongoing while we copy those millions of rows people",
    "start": "600800",
    "end": "607360"
  },
  {
    "text": "are still using the table inserting deleting updating we capture all that and apply that as well on the shadow",
    "start": "607360",
    "end": "614760"
  },
  {
    "text": "table until the two tables are in sync or in in almost sync and this is",
    "start": "614760",
    "end": "620560"
  },
  {
    "text": "basically where most tools differ but eventually they all do kind of the same",
    "start": "620560",
    "end": "626480"
  },
  {
    "text": "thing they make sure that the tables are in sync they do a short stop the world",
    "start": "626480",
    "end": "632000"
  },
  {
    "text": "they lock the tables right now it's a situation where you cannot read or write from the table and then they flip them",
    "start": "632000",
    "end": "639040"
  },
  {
    "text": "they they just exchange one with another so the app was just a second ago writing",
    "start": "639040",
    "end": "645440"
  },
  {
    "text": "to your original table but all of a sudden it writes to the new uh schema",
    "start": "645440",
    "end": "652480"
  },
  {
    "text": "right the new table and after a while you can throw the old table to the garbage okay so far so this is a big",
    "start": "652480",
    "end": "661240"
  },
  {
    "text": "problem just for a single large table just for an unsharded database",
    "start": "661240",
    "end": "667279"
  },
  {
    "text": "just for a normal my skill setup now we want to discuss how this problem becomes",
    "start": "667279",
    "end": "673360"
  },
  {
    "text": "even more complex when you want to manage multi-sheded",
    "start": "673360",
    "end": "678480"
  },
  {
    "text": "uh uh databases so as a quick reminder to the",
    "start": "678480",
    "end": "683880"
  },
  {
    "text": "architecture one of the most important attributes of this architecture is that",
    "start": "683880",
    "end": "690800"
  },
  {
    "text": "the different clusters that you see them there's three in this picture they know nothing about each other",
    "start": "690800",
    "end": "698160"
  },
  {
    "text": "the two shards above they don't even know that they are shards like the my skills server that",
    "start": "698160",
    "end": "705279"
  },
  {
    "text": "has tables and rows it doesn't know that it's a it's part of a greater game it's",
    "start": "705279",
    "end": "711600"
  },
  {
    "text": "not aware that there's another complementing server that has the rest of the rows as far as MySQL is concerned",
    "start": "711600",
    "end": "718079"
  },
  {
    "text": "that's that's the data it's up to VES to juggle and operate all this",
    "start": "718079",
    "end": "724200"
  },
  {
    "text": "data all right so let's begin uh with a few aspects of",
    "start": "724200",
    "end": "732000"
  },
  {
    "text": "um what it means to apply changes to a sharded setup we begin with item potency",
    "start": "732000",
    "end": "737680"
  },
  {
    "text": "so let's say I I have this table i want to add an index i set a DDL strategy to say VS",
    "start": "737680",
    "end": "745200"
  },
  {
    "text": "which kind of means do it the Vest way don't do it the MySQL way do it the online schema change",
    "start": "745200",
    "end": "751320"
  },
  {
    "text": "way and I issue an alter table ad key previously we saw that vitigate uh when",
    "start": "751320",
    "end": "759680"
  },
  {
    "text": "I do an update table or insert or delete we saw that vitigate would send a query",
    "start": "759680",
    "end": "765839"
  },
  {
    "text": "to the appropriate shard only but now we really wanted to send to the all of the",
    "start": "765839",
    "end": "772000"
  },
  {
    "text": "relevant shards so if I have 64 shards if my table is so big that I split it into 64 we need to inform all 64 shards",
    "start": "772000",
    "end": "780560"
  },
  {
    "text": "that we want to update this table to alter this table quite the task what I get in response in",
    "start": "780560",
    "end": "788079"
  },
  {
    "text": "reality is a job ID but that table is not yet modified vitigate merely",
    "start": "788079",
    "end": "794320"
  },
  {
    "text": "announced to the tablets that here is a request each tablet on the primary shard",
    "start": "794320",
    "end": "801200"
  },
  {
    "text": "on the primary of each shard uh took note said \"Oh okay i received a",
    "start": "801200",
    "end": "806639"
  },
  {
    "text": "request.\" They each in their own good time and independently of one",
    "start": "806639",
    "end": "813480"
  },
  {
    "text": "another spin up this online schema change mechanism that we illustrated later",
    "start": "813480",
    "end": "820120"
  },
  {
    "text": "on so for me as a user I just issued one query but there's now 64 different",
    "start": "820120",
    "end": "827120"
  },
  {
    "text": "shards who are operating it so the first thing I can do or I want to do is to get",
    "start": "827120",
    "end": "833680"
  },
  {
    "text": "visibility like okay what's going on like it's the problem times 64 so I can",
    "start": "833680",
    "end": "840320"
  },
  {
    "text": "issue a show v test migrations command that command again gets sent by vitigate",
    "start": "840320",
    "end": "846160"
  },
  {
    "text": "to all shards and they each return one row what's the status of the migration",
    "start": "846160",
    "end": "852560"
  },
  {
    "text": "on me this is I am shard 0408 and there yeah the migration is",
    "start": "852560",
    "end": "860079"
  },
  {
    "text": "completed as of 12:21 each shard will report a status",
    "start": "860079",
    "end": "865440"
  },
  {
    "text": "hopefully they will all complete i as the user am happy and we can continue uh",
    "start": "865440",
    "end": "872240"
  },
  {
    "text": "with our life but what happens if two of the",
    "start": "872240",
    "end": "877760"
  },
  {
    "text": "shards were unavailable for some reason because uh because computers right life",
    "start": "877760",
    "end": "883440"
  },
  {
    "text": "is tough and I've sent a request to alter a table 62 shards received the",
    "start": "883440",
    "end": "889079"
  },
  {
    "text": "request began the work maybe even completed it but two of the shards never got the request in the first place now",
    "start": "889079",
    "end": "896560"
  },
  {
    "text": "if if I only have one table one cluster or one server no problem i would run the",
    "start": "896560",
    "end": "902959"
  },
  {
    "text": "command again but I I can't run the command again now because 62 shots already have that index it will either",
    "start": "902959",
    "end": "909760"
  },
  {
    "text": "be a syntax error to or an error to read that index or it will add a second index",
    "start": "909760",
    "end": "916399"
  },
  {
    "text": "it's crazy right so this is where ident item potency comes in i could there's",
    "start": "916399",
    "end": "924079"
  },
  {
    "text": "it's nuance there's several ways to do that but essentially if I if I could",
    "start": "924079",
    "end": "929639"
  },
  {
    "text": "take this UU ID that I got earlier this job ID and resupplied it then any shard that",
    "start": "929639",
    "end": "938639"
  },
  {
    "text": "receives this command says \"Oh wait wait wait that's a job ID I've already processed i know this job ID i don't",
    "start": "938639",
    "end": "945199"
  },
  {
    "text": "need to start it again this is right this is a no op i'm giving up i'm saying \"Okay I'm done i'm happy you don't need",
    "start": "945199",
    "end": "952560"
  },
  {
    "text": "to ask me anymore.\" But the two shards that previously never got the the request they will see that as new and",
    "start": "952560",
    "end": "960000"
  },
  {
    "text": "we'll start processing it there's another technique it's designed to solve something else",
    "start": "960000",
    "end": "967120"
  },
  {
    "text": "but it's very useful uh in this scenario as well and it's called declarative migrations so Vit supports the idea of a",
    "start": "967120",
    "end": "973279"
  },
  {
    "text": "declarative migration where you never specify you never say alter table all",
    "start": "973279",
    "end": "979040"
  },
  {
    "text": "you say is create table and drop table now if a shard receives this create",
    "start": "979040",
    "end": "985600"
  },
  {
    "text": "table statement and the table does not exist on that shard it's created it creates it no",
    "start": "985600",
    "end": "991800"
  },
  {
    "text": "problem if the table exists and looks exactly like this okay it's a no up",
    "start": "991800",
    "end": "997920"
  },
  {
    "text": "everything is good but if the table exists and has a different schema maybe the index is different the column is",
    "start": "997920",
    "end": "1004160"
  },
  {
    "text": "different then that shard each shard independently computes what would it",
    "start": "1004160",
    "end": "1010720"
  },
  {
    "text": "take to get from the existing schema into the new schema so it will devise",
    "start": "1010720",
    "end": "1016639"
  },
  {
    "text": "the alter table statement which you can see at the bottom here each ad will devise the correct statement that will",
    "start": "1016639",
    "end": "1024720"
  },
  {
    "text": "get you to the new state and it's kind of the K Kubernetes way right it's a you",
    "start": "1024720",
    "end": "1030798"
  },
  {
    "text": "don't deploy a change you deploy a state so even if you get into this weird limbo",
    "start": "1030799",
    "end": "1036558"
  },
  {
    "text": "situation which you shouldn't but even if you are and you you're not sure and",
    "start": "1036559",
    "end": "1041760"
  },
  {
    "text": "different shards are different schemas okay that's still that's still okay you can deploy a declarative migration in",
    "start": "1041760",
    "end": "1048799"
  },
  {
    "text": "and each shot will independently make sure that it goes into the desired state",
    "start": "1048799",
    "end": "1056600"
  },
  {
    "text": "all right our next problem is consistency if a migration takes hours",
    "start": "1056960",
    "end": "1063120"
  },
  {
    "text": "to complete different servers have different workloads serve different traffic run on different hardware have",
    "start": "1063120",
    "end": "1070720"
  },
  {
    "text": "different noisy neighbors they will complete the migration at different times it's certainly possible that",
    "start": "1070720",
    "end": "1077840"
  },
  {
    "text": "different MySQL servers will complete this migration even hours apart",
    "start": "1077840",
    "end": "1084600"
  },
  {
    "text": "and it's okay but it's undesired it's undesired because it's confusing because",
    "start": "1084600",
    "end": "1090960"
  },
  {
    "text": "at any point in time different shades will present different schemas it's confusing to some scripts which are not",
    "start": "1090960",
    "end": "1098080"
  },
  {
    "text": "you know the most sophisticated ones it can be confusing to an engineer a developer that goes into the database",
    "start": "1098080",
    "end": "1104320"
  },
  {
    "text": "they see oh there's the schema there's the the new column I can start using it great but no because on another shot",
    "start": "1104320",
    "end": "1110720"
  },
  {
    "text": "that column still does not exist so it's unhealthy",
    "start": "1110720",
    "end": "1116520"
  },
  {
    "text": "ideally we want all the schema to be the same all the time across all the shots",
    "start": "1116520",
    "end": "1123120"
  },
  {
    "text": "and there's a way to do that not atomically that's not possible at least with my skill it's impossible to change",
    "start": "1123120",
    "end": "1130080"
  },
  {
    "text": "the schema atomically at all the shards at the exact same time but we can get",
    "start": "1130080",
    "end": "1135360"
  },
  {
    "text": "pretty close and the idea is to postpone completion so I set",
    "start": "1135360",
    "end": "1140960"
  },
  {
    "text": "that as a detail strategy and if we get back to the the way online only schema",
    "start": "1140960",
    "end": "1146480"
  },
  {
    "text": "change works I copied the millions and millions of rows i've tracked the change",
    "start": "1146480",
    "end": "1153679"
  },
  {
    "text": "log the incoming traffic i brought the tables up to sync nothing really compels me to cut",
    "start": "1153679",
    "end": "1161240"
  },
  {
    "text": "over at that particular time it's okay if I stall a little bit more if I",
    "start": "1161240",
    "end": "1168000"
  },
  {
    "text": "continue to track the ongoing changes and continue to keep the tables in sync",
    "start": "1168000",
    "end": "1173720"
  },
  {
    "text": "live make sense all right so it's possible that one completes",
    "start": "1173720",
    "end": "1180360"
  },
  {
    "text": "first or one of the shards uh backfills the table first but it will not cut over",
    "start": "1180360",
    "end": "1187600"
  },
  {
    "text": "automatically it will continue to apply the changes and I will make it so that it",
    "start": "1187600",
    "end": "1195520"
  },
  {
    "text": "only completes when all the rest are complete so the way this works is I will issue a show with test migrations one of",
    "start": "1195520",
    "end": "1202400"
  },
  {
    "text": "the columns that they return is ready to complete which will be either zero like",
    "start": "1202400",
    "end": "1208080"
  },
  {
    "text": "oh man I I have many more rows to copy I'm I'm not there yet or one meaning",
    "start": "1208080",
    "end": "1213520"
  },
  {
    "text": "yeah I'm I'm generally up to date I'm I'm okay I'm can cut over whenever you tell me to so again if I have these uh",
    "start": "1213520",
    "end": "1220720"
  },
  {
    "text": "16 shards in this example I will issue this query if all shards respond with",
    "start": "1220720",
    "end": "1227120"
  },
  {
    "text": "ready to complete equals one then I can issue an alter test migration",
    "start": "1227120",
    "end": "1234679"
  },
  {
    "text": "complete this statement again gets pushed to all the shards at the same",
    "start": "1234679",
    "end": "1240320"
  },
  {
    "text": "time concurrently and they will each do their best to cut over as soon as",
    "start": "1240320",
    "end": "1246679"
  },
  {
    "text": "possible and in effect in production in our experience this",
    "start": "1246679",
    "end": "1252760"
  },
  {
    "text": "means up to a few seconds between the first child that that actually completes",
    "start": "1252760",
    "end": "1258720"
  },
  {
    "text": "to the last one which is not bad at all uh in terms of you know relational",
    "start": "1258720",
    "end": "1265120"
  },
  {
    "text": "databases and the behavior of applications um some shots can be",
    "start": "1265120",
    "end": "1274159"
  },
  {
    "text": "uh victims to an abusive query that maybe an ETL or something heavyweight",
    "start": "1274159",
    "end": "1280080"
  },
  {
    "text": "that is inserting tons of rows or selecting tons of rows is and is kind of preventing them from cutting over that",
    "start": "1280080",
    "end": "1286880"
  },
  {
    "text": "can happen which can create a gap a time gap for that child um there is another",
    "start": "1286880",
    "end": "1293200"
  },
  {
    "text": "way to uh ask Vest to be more uh brutal about it so it will forcibly terminate",
    "start": "1293200",
    "end": "1300640"
  },
  {
    "text": "any queries or transactions that are holding locks on the migrated table just",
    "start": "1300640",
    "end": "1306559"
  },
  {
    "text": "ahead of the cut over so in a way paving the way for a successful cut over okay so far",
    "start": "1306559",
    "end": "1315760"
  },
  {
    "text": "uh we mind blow this when we explode in another dimension first we exploded the",
    "start": "1315760",
    "end": "1322360"
  },
  {
    "text": "dimension of shards but now we we also say we can apply the same logic for",
    "start": "1322360",
    "end": "1329440"
  },
  {
    "text": "multiple concurrent migrations across all shards so VS allows you to run",
    "start": "1329440",
    "end": "1335280"
  },
  {
    "text": "multiple migrations concurrently and some of the stuff will be truly concurrent some will have some",
    "start": "1335280",
    "end": "1342200"
  },
  {
    "text": "sequentialization or serialization between them for performance reasons but essentially the same logic",
    "start": "1342200",
    "end": "1349280"
  },
  {
    "text": "applies you will run all these changes together this is",
    "start": "1349280",
    "end": "1356039"
  },
  {
    "text": "uh it's like a user is doing a pull request and they're doing multiple changes in multiple files but those",
    "start": "1356039",
    "end": "1362320"
  },
  {
    "text": "changes make sense together the same way some changes to tables make sense",
    "start": "1362320",
    "end": "1368720"
  },
  {
    "text": "together right so you deploy all these changes this query will go in parallel",
    "start": "1368720",
    "end": "1374720"
  },
  {
    "text": "to all shards each shard will say \"Oh I received request four five six seven eight uh",
    "start": "1374720",
    "end": "1381880"
  },
  {
    "text": "migrations we'll apply them all at the same time i will provide a postpone migration and then I will issue a show v",
    "start": "1381880",
    "end": "1389840"
  },
  {
    "text": "test migrations and wait for all shots to say ready to complete for all",
    "start": "1389840",
    "end": "1395640"
  },
  {
    "text": "migrations and then I will issue a complete all command boom all shots will",
    "start": "1395640",
    "end": "1401120"
  },
  {
    "text": "start f previously cut over cut over one after another again our experience shows",
    "start": "1401120",
    "end": "1409760"
  },
  {
    "text": "I mean don't overdo this don't do like 30 massive tables at the same time on",
    "start": "1409760",
    "end": "1416080"
  },
  {
    "text": "128 shots but if you don't overdo it you can still expect a difference of seconds",
    "start": "1416080",
    "end": "1421760"
  },
  {
    "text": "maybe 10 maybe 20 seconds from the first table completed on one shot to the last",
    "start": "1421760",
    "end": "1427360"
  },
  {
    "text": "table completed on a different shot okay last I want to talk about",
    "start": "1427360",
    "end": "1434720"
  },
  {
    "text": "resiliency so question I have two systems one in one system I have five",
    "start": "1434720",
    "end": "1440400"
  },
  {
    "text": "servers in another system I have 50 servers which of these two systems is",
    "start": "1440400",
    "end": "1445679"
  },
  {
    "text": "more likely to see a server failure five or 50",
    "start": "1445679",
    "end": "1453279"
  },
  {
    "text": "50 correct a lot of people would get confused the more servers we have the",
    "start": "1453279",
    "end": "1460240"
  },
  {
    "text": "more likely it is that any single server will exhibit a failure of course it's up",
    "start": "1460240",
    "end": "1466320"
  },
  {
    "text": "to a good infrastructure to make a failure in a 50 service setup less of an",
    "start": "1466320",
    "end": "1473679"
  },
  {
    "text": "impact as compared to a failure in a five server setup",
    "start": "1473679",
    "end": "1478760"
  },
  {
    "text": "right now let's look at schema migrations if you use uh an existing",
    "start": "1478760",
    "end": "1484559"
  },
  {
    "text": "online schema change tool and let's say the migration takes five",
    "start": "1484559",
    "end": "1489640"
  },
  {
    "text": "days but after two days the MySQL primary",
    "start": "1489640",
    "end": "1495240"
  },
  {
    "text": "crashes you have just lost two days of work you will fail over do whatever it",
    "start": "1495240",
    "end": "1500880"
  },
  {
    "text": "takes to fix the MySQL fine but you will have to restart a migration and redo all",
    "start": "1500880",
    "end": "1506720"
  },
  {
    "text": "of these two days uh worth of work this is with one server what",
    "start": "1506720",
    "end": "1512720"
  },
  {
    "text": "happens when you have 64 shards 64 different servers running the",
    "start": "1512720",
    "end": "1519159"
  },
  {
    "text": "migration 63 of them are happy but after two days one of them",
    "start": "1519159",
    "end": "1526440"
  },
  {
    "text": "fails now technically it's only that one that needs to be restarted right but",
    "start": "1526440",
    "end": "1534000"
  },
  {
    "text": "remember I really like to cut over all of my shots together",
    "start": "1534000",
    "end": "1539120"
  },
  {
    "text": "so what happens is that 63 shards will have to stall for two extra days all",
    "start": "1539120",
    "end": "1545760"
  },
  {
    "text": "waiting for that one to catch up and the more shards I have the more probable it",
    "start": "1545760",
    "end": "1551679"
  },
  {
    "text": "is that I will be in this situation so Vest doesn't fall for that",
    "start": "1551679",
    "end": "1556880"
  },
  {
    "text": "trap vitz uses V replication like one of the most important key components of",
    "start": "1556880",
    "end": "1564200"
  },
  {
    "text": "VS which is an auditor of data transfer so",
    "start": "1564200",
    "end": "1570000"
  },
  {
    "text": "to speak so when it copies rows either through either like uh the millions and",
    "start": "1570000",
    "end": "1575840"
  },
  {
    "text": "millions of rows that it copies from the original table or when it applies the change log using the same transaction where it",
    "start": "1575840",
    "end": "1584000"
  },
  {
    "text": "applies the change it also audits the metadata of the change like the range of",
    "start": "1584000",
    "end": "1590960"
  },
  {
    "text": "queries the range of rows that it just copied or the position in the MySQL binary log it's a journaline system",
    "start": "1590960",
    "end": "1598960"
  },
  {
    "text": "which means the migration is stateful if a primary dies vess promotes a new",
    "start": "1598960",
    "end": "1607279"
  },
  {
    "text": "primary that primary looks looks at its own database and says \"Oh I recognize",
    "start": "1607279",
    "end": "1613120"
  },
  {
    "text": "there's an interrupted migration this is the state of the migration this is the precise point where it was terminated.\"",
    "start": "1613120",
    "end": "1621200"
  },
  {
    "text": "it is able to adopt the migration and pick up from the very same point of",
    "start": "1621200",
    "end": "1627240"
  },
  {
    "text": "interruption which means you haven't lost two days you've lost less than one",
    "start": "1627240",
    "end": "1632400"
  },
  {
    "text": "minute the time it takes from the moment of failure to the failover to the point where it adopts a migration to the point",
    "start": "1632400",
    "end": "1638559"
  },
  {
    "text": "where it resumes operation and so to summarize the schema",
    "start": "1638559",
    "end": "1645279"
  },
  {
    "text": "migration story in VS frankly I think it's better than the",
    "start": "1645279",
    "end": "1650880"
  },
  {
    "text": "non nonshed scenario vitz automates so much on your",
    "start": "1650880",
    "end": "1656320"
  },
  {
    "text": "behalf you can run as many changes as you want you don't need to run them one by one you can run them together you",
    "start": "1656320",
    "end": "1663120"
  },
  {
    "text": "don't need to worry about failures because they self-reover you don't need to worry about schema",
    "start": "1663120",
    "end": "1669360"
  },
  {
    "text": "changes being different because you can control the cut over you can decide to cut over not during the weekend but by",
    "start": "1669360",
    "end": "1675760"
  },
  {
    "text": "the time you're back at the office on Monday after you've had your coffee so you're a lot more relaxed about how the",
    "start": "1675760",
    "end": "1683440"
  },
  {
    "text": "migration is going to behave in this multi-sharded uh environment and uh we",
    "start": "1683440",
    "end": "1691520"
  },
  {
    "text": "and our the users the Vitas users are like so able to migrate tables that are",
    "start": "1691520",
    "end": "1699679"
  },
  {
    "text": "terabytes of data and which serves uh serve millions",
    "start": "1699679",
    "end": "1706320"
  },
  {
    "text": "of queries per second part of them reads of course but many many of them are",
    "start": "1706320",
    "end": "1712360"
  },
  {
    "text": "rights without having to worry about it vest manages all these takes the traffic",
    "start": "1712360",
    "end": "1718720"
  },
  {
    "text": "into consideration takes replication lag the load on the service into configuration and just smoothers the",
    "start": "1718720",
    "end": "1725120"
  },
  {
    "text": "entire operation all right",
    "start": "1725120",
    "end": "1732840"
  },
  {
    "text": "um on the topic of road mapap so vit is an open source project we maintain it we",
    "start": "1732840",
    "end": "1738720"
  },
  {
    "text": "have thoughts for the future there's always things to do and",
    "start": "1738720",
    "end": "1744320"
  },
  {
    "text": "uh to the large part of it this is affected by the community or just you know as a user you need a particular",
    "start": "1744320",
    "end": "1751120"
  },
  {
    "text": "thing you find that schema change requires something we just had great ideas from",
    "start": "1751120",
    "end": "1757279"
  },
  {
    "text": "some users dur during this conference um we always have a road map ahead ahead of",
    "start": "1757279",
    "end": "1762320"
  },
  {
    "text": "us we do uh uh two releases per year and uh you are very welcome to join us in",
    "start": "1762320",
    "end": "1769919"
  },
  {
    "text": "the Vit Slack to ask questions to make suggestions open issues on",
    "start": "1769919",
    "end": "1777240"
  },
  {
    "text": "GitHub read the code read the uh uh the documents read our blog",
    "start": "1777240",
    "end": "1783960"
  },
  {
    "text": "posts i'm happy to answer questions if I have the",
    "start": "1783960",
    "end": "1789039"
  },
  {
    "text": "time right uh we will be here tomorrow the Vitess booth will be open in the",
    "start": "1789399",
    "end": "1794880"
  },
  {
    "text": "project pavilion between the hours of 12:30 to 2",
    "start": "1794880",
    "end": "1800720"
  },
  {
    "text": "okay so again the hours 12:30 to 12:30 to 2 p.m uh the project",
    "start": "1800720",
    "end": "1807320"
  },
  {
    "text": "pavilion questions sir yes thank you very much for the presentation i think",
    "start": "1807320",
    "end": "1812799"
  },
  {
    "text": "you did a fantastic job explaining all the complexity of running schema changes at the scale thank you uh I have two",
    "start": "1812799",
    "end": "1818720"
  },
  {
    "text": "questions if I may the first one is about safety of the safety checks so there are certain situations where doing",
    "start": "1818720",
    "end": "1825679"
  },
  {
    "text": "an online schema change may lead to data loss a common example is having a unique index deleting one of the rows that was",
    "start": "1825679",
    "end": "1833039"
  },
  {
    "text": "part of the unique index and now once you are inserting rows into the shadow table some of the rows are dropped",
    "start": "1833039",
    "end": "1839279"
  },
  {
    "text": "because those rows are not unique any anymore another example is changing a column that is part of a unique index",
    "start": "1839279",
    "end": "1846000"
  },
  {
    "text": "and so on so is there any plans to add these safety validations into bet test themsel itself or is it the",
    "start": "1846000",
    "end": "1853360"
  },
  {
    "text": "responsibility of the whoever is using bet to run the safety checks this is an",
    "start": "1853360",
    "end": "1858480"
  },
  {
    "text": "excellent question thank you so much um so this is being",
    "start": "1858480",
    "end": "1865039"
  },
  {
    "text": "addressed there's multi-layers answer multilayers to the answer so Vitas works",
    "start": "1865880",
    "end": "1871039"
  },
  {
    "text": "in the Unix philos Unix philosophy right we give you the building blocks you write the commands you run the command",
    "start": "1871039",
    "end": "1876720"
  },
  {
    "text": "lines the the the flags and you're responsible to manage this and if you do",
    "start": "1876720",
    "end": "1882480"
  },
  {
    "text": "then there are answers for you now if you remove a column from a unique index",
    "start": "1882480",
    "end": "1887840"
  },
  {
    "text": "then indeed as you say on the target table there is less uniqueness right you",
    "start": "1887840",
    "end": "1892960"
  },
  {
    "text": "can insert something that you couldn't insert originally but how would it get there it would only get there if you",
    "start": "1892960",
    "end": "1900080"
  },
  {
    "text": "insert the row originally on the original table right the problem is",
    "start": "1900080",
    "end": "1905720"
  },
  {
    "text": "different after you cut over then suddenly on the new table you're able to insert two rows where previously there",
    "start": "1905720",
    "end": "1912720"
  },
  {
    "text": "could only be one is that correct let's put it a different way if",
    "start": "1912720",
    "end": "1920320"
  },
  {
    "text": "you have a table with no unique index and you add a new unique index and the",
    "start": "1920320",
    "end": "1925360"
  },
  {
    "text": "constraint fails because on the original table you have two conflicting rows the entire migration will",
    "start": "1925360",
    "end": "1931799"
  },
  {
    "text": "fail however I want to add to that vest offers a mechanism that is called",
    "start": "1931799",
    "end": "1939640"
  },
  {
    "text": "reverts revert says once we cut over at the time of cut over if you remember we",
    "start": "1939640",
    "end": "1945039"
  },
  {
    "text": "do a stop the world we record the position where we cut over after cut over if you're unhappy",
    "start": "1945039",
    "end": "1953440"
  },
  {
    "text": "with the new table you can issue a revert migration and what we do is you",
    "start": "1953440",
    "end": "1958799"
  },
  {
    "text": "we use the same VR replication mechanism to propagate the changes back from the",
    "start": "1958799",
    "end": "1964159"
  },
  {
    "text": "new table to the original table so that you can cut over back to",
    "start": "1964159",
    "end": "1970559"
  },
  {
    "text": "the original table but still maintain all the new rows you inserted or updated",
    "start": "1970559",
    "end": "1976559"
  },
  {
    "text": "or deleted right so you can go back to safety",
    "start": "1976559",
    "end": "1981760"
  },
  {
    "text": "the issue of unique is is that is the point where maybe you're now you know",
    "start": "1981760",
    "end": "1988000"
  },
  {
    "text": "you messed up your data you're not it's not applicable anymore because",
    "start": "1988000",
    "end": "1994240"
  },
  {
    "text": "you messed it up maybe you incremented okay you incremented from a tiny int to a big int and now you insert a gazillion",
    "start": "1994240",
    "end": "2001840"
  },
  {
    "text": "right a billion you cannot move back to the original table because that number cannot be applied to a tiny int column",
    "start": "2001840",
    "end": "2009200"
  },
  {
    "text": "so there is indeed a measure of",
    "start": "2009200",
    "end": "2015080"
  },
  {
    "text": "uh you need you need to own that change there is a measure of that uh part of Vest is uh there's a library called",
    "start": "2015080",
    "end": "2024360"
  },
  {
    "text": "schema and uh there's actually a blog post on both the vitest blog as well as the planet scale blog that describe how",
    "start": "2024360",
    "end": "2031039"
  },
  {
    "text": "you can use it to find out about risks when comparing two schemas so it can be",
    "start": "2031039",
    "end": "2037919"
  },
  {
    "text": "it's an advisor that tells you oh just for you know you can lose data during",
    "start": "2037919",
    "end": "2044240"
  },
  {
    "text": "this migration because I don't know you dropped a column or reduced the scope of a column or you can lose data because",
    "start": "2044240",
    "end": "2051040"
  },
  {
    "text": "you reduce uniqueness or introduced uniqueness so this is another tool that you can use thank you very much my",
    "start": "2051040",
    "end": "2058000"
  },
  {
    "text": "second question really fast is um so you show show an example of particular MySQL",
    "start": "2058000",
    "end": "2063839"
  },
  {
    "text": "syntax that could be applied the alter table and all that is there any particular MySQL native syntax that",
    "start": "2063839",
    "end": "2069760"
  },
  {
    "text": "cannot be applied to be test like for keys or something like that right foreign keys is is is the example um the",
    "start": "2069760",
    "end": "2079118"
  },
  {
    "text": "problem is with how my skill manages foreign keys uh in particular my skill does not know",
    "start": "2079119",
    "end": "2086398"
  },
  {
    "text": "how to manage foreign keys the only element in my scale that knows about foreign keys is InnoDB and the way this",
    "start": "2086399",
    "end": "2093200"
  },
  {
    "text": "works with InnoDB is that it is impossible for you to replace a table",
    "start": "2093200",
    "end": "2100400"
  },
  {
    "text": "without touching the foreign keys like and keeping them in place so we do have",
    "start": "2100400",
    "end": "2106000"
  },
  {
    "text": "a public fork of MySQL where we fix that but you will need to use that particular",
    "start": "2106000",
    "end": "2111440"
  },
  {
    "text": "version of MySQL and then there's a d- unsafe uh allow foreign keys flag which",
    "start": "2111440",
    "end": "2117359"
  },
  {
    "text": "allows you to do that without this foreign keys are not possible yes hello thank you for the talk i have",
    "start": "2117359",
    "end": "2124640"
  },
  {
    "text": "a small question i think I missed it when you explained how is the migration",
    "start": "2124640",
    "end": "2130240"
  },
  {
    "text": "completed so the swap the synchronized swap is it a command run by engineers or",
    "start": "2130240",
    "end": "2136800"
  },
  {
    "text": "tooling so it's run by the tooling you don't need to worry about it i mean you",
    "start": "2136800",
    "end": "2142079"
  },
  {
    "text": "need to worry about it because it's a bit of the risky or dangerous last moment uh change the command is",
    "start": "2142079",
    "end": "2149920"
  },
  {
    "text": "basically merely a rename table A to B and B to A except it involves table C in",
    "start": "2149920",
    "end": "2155760"
  },
  {
    "text": "between because you need to re rename table A to C B to A C to B right that's",
    "start": "2155760",
    "end": "2163680"
  },
  {
    "text": "the command and the challenge for the tool is to make sure that one before",
    "start": "2163680",
    "end": "2170400"
  },
  {
    "text": "running this command the tables are actually in complete sync or else this is wrong right",
    "start": "2170400",
    "end": "2177359"
  },
  {
    "text": "and two that it is able to acquire and complete the cut over uh uh to acquire",
    "start": "2177359",
    "end": "2184880"
  },
  {
    "text": "and complete uh the locking of the tables so there are safety mechanism",
    "start": "2184880",
    "end": "2190880"
  },
  {
    "text": "that say uh InnoDB lock weight timeout so that if the tables cannot be locked",
    "start": "2190880",
    "end": "2197119"
  },
  {
    "text": "for the rename the entire the entire process of the swap fails and you roll back and v test",
    "start": "2197119",
    "end": "2204079"
  },
  {
    "text": "tries again in a few minutes and again in a few minutes but it maintains integrity and consistency of the data",
    "start": "2204079",
    "end": "2210400"
  },
  {
    "text": "and so it's always vest that triggers it it's never an external command i I thought",
    "start": "2210400",
    "end": "2216359"
  },
  {
    "text": "you mentioned or didn't say I understood that like engineers chooses the moment",
    "start": "2216359",
    "end": "2223359"
  },
  {
    "text": "where it's completed you you can choose the moment but Vest does it for you so",
    "start": "2223359",
    "end": "2228560"
  },
  {
    "text": "you choose the moment you what you can say is postpone completion right dash postpone start the migration but don't",
    "start": "2228560",
    "end": "2235680"
  },
  {
    "text": "ever cut over automatically and then at some point you will show vit migration",
    "start": "2235680",
    "end": "2241200"
  },
  {
    "text": "you will see that vit is generally speaking ready to complete you can decide to go on a vacation during that",
    "start": "2241200",
    "end": "2248160"
  },
  {
    "text": "time and say no keep running please I'm busy I'm skiing right now but once you're back from your uh ski vacation",
    "start": "2248160",
    "end": "2256240"
  },
  {
    "text": "you sit at your desk and you say \"Well you know what i'm ready cut over now please.\" And then we test will say \"Okay",
    "start": "2256240",
    "end": "2262400"
  },
  {
    "text": "yeah I've been keeping keeping up now I'm ready to cut over i'm doing this.\"",
    "start": "2262400",
    "end": "2268760"
  },
  {
    "text": "Sure there's more questions but no time so I'm happy to take questions outside and give the room to the next speaker",
    "start": "2269079",
    "end": "2275520"
  },
  {
    "text": "thank you so much [Applause]",
    "start": "2275520",
    "end": "2280109"
  }
]