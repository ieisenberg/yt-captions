[
  {
    "text": "cluster API works very well in private",
    "start": "179",
    "end": "3780"
  },
  {
    "text": "cloud-like environments in this session",
    "start": "3780",
    "end": "6720"
  },
  {
    "text": "we'll be sharing about our experience",
    "start": "6720",
    "end": "9900"
  },
  {
    "text": "about how to get this cluster API fit",
    "start": "9900",
    "end": "14099"
  },
  {
    "text": "into multi-tenant Cloud environments and",
    "start": "14099",
    "end": "16680"
  },
  {
    "text": "how we have modified",
    "start": "16680",
    "end": "18740"
  },
  {
    "text": "the standard cluster API usage pattern",
    "start": "18740",
    "end": "21840"
  },
  {
    "text": "to fit into our Cloud environment and",
    "start": "21840",
    "end": "25080"
  },
  {
    "text": "lastly",
    "start": "25080",
    "end": "26760"
  },
  {
    "text": "we'll also share the details on how we",
    "start": "26760",
    "end": "28920"
  },
  {
    "text": "built a kubernetes engine that delivers",
    "start": "28920",
    "end": "31080"
  },
  {
    "text": "self-managing clusters in a self-service",
    "start": "31080",
    "end": "33660"
  },
  {
    "text": "manner in multi-tenant Cloud",
    "start": "33660",
    "end": "35460"
  },
  {
    "text": "environments with cluster API at its",
    "start": "35460",
    "end": "38579"
  },
  {
    "text": "core",
    "start": "38579",
    "end": "40739"
  },
  {
    "text": "with that let's get started",
    "start": "40739",
    "end": "42840"
  },
  {
    "text": "so the agenda for the first one third of",
    "start": "42840",
    "end": "44940"
  },
  {
    "text": "the session",
    "start": "44940",
    "end": "46079"
  },
  {
    "text": "um",
    "start": "46079",
    "end": "47040"
  },
  {
    "text": "we'll be talking about current usage",
    "start": "47040",
    "end": "49140"
  },
  {
    "text": "patterns of cluster API and some of the",
    "start": "49140",
    "end": "51660"
  },
  {
    "text": "issues that we saw in",
    "start": "51660",
    "end": "54440"
  },
  {
    "text": "multi-tenant Cloud environments Arun",
    "start": "54440",
    "end": "56640"
  },
  {
    "text": "will be going through that so basically",
    "start": "56640",
    "end": "58320"
  },
  {
    "text": "we set the problem statement and then I",
    "start": "58320",
    "end": "60840"
  },
  {
    "text": "will be covering on building kubernetes",
    "start": "60840",
    "end": "63780"
  },
  {
    "text": "Engine with self-managing clusters and",
    "start": "63780",
    "end": "65760"
  },
  {
    "text": "lastly we'll be touching on Fleet",
    "start": "65760",
    "end": "67200"
  },
  {
    "text": "Management operations",
    "start": "67200",
    "end": "68820"
  },
  {
    "text": "before we delve into any of the details",
    "start": "68820",
    "end": "71220"
  },
  {
    "text": "I would like to give you all an overview",
    "start": "71220",
    "end": "73020"
  },
  {
    "text": "on",
    "start": "73020",
    "end": "74159"
  },
  {
    "text": "what multi-tenant cloud environment that",
    "start": "74159",
    "end": "77159"
  },
  {
    "text": "we are tackling here which is our",
    "start": "77159",
    "end": "79200"
  },
  {
    "text": "product VMware Cloud director",
    "start": "79200",
    "end": "81299"
  },
  {
    "text": "so this this is the cloud",
    "start": "81299",
    "end": "83880"
  },
  {
    "text": "and this is basically this is an",
    "start": "83880",
    "end": "85920"
  },
  {
    "text": "infrastructure as a service platform",
    "start": "85920",
    "end": "88680"
  },
  {
    "text": "the cloud provider here is supposed to",
    "start": "88680",
    "end": "90960"
  },
  {
    "text": "uh",
    "start": "90960",
    "end": "93180"
  },
  {
    "text": "sell the infrastructure resources to",
    "start": "93180",
    "end": "96000"
  },
  {
    "text": "their tenants and the tenants here are",
    "start": "96000",
    "end": "99479"
  },
  {
    "text": "not end individual users but tenants",
    "start": "99479",
    "end": "102240"
  },
  {
    "text": "here are Enterprise level tenant",
    "start": "102240",
    "end": "104159"
  },
  {
    "text": "organizations and there could be",
    "start": "104159",
    "end": "106979"
  },
  {
    "text": "thousands of tarent organizations in our",
    "start": "106979",
    "end": "110399"
  },
  {
    "text": "Cloud environment like this and these",
    "start": "110399",
    "end": "112799"
  },
  {
    "text": "tenant organizations are strictly",
    "start": "112799",
    "end": "115740"
  },
  {
    "text": "isolated from each other in terms of",
    "start": "115740",
    "end": "118200"
  },
  {
    "text": "compute storage and networking",
    "start": "118200",
    "end": "121680"
  },
  {
    "text": "so",
    "start": "121680",
    "end": "122880"
  },
  {
    "text": "they have very strict tenant boundaries",
    "start": "122880",
    "end": "125939"
  },
  {
    "text": "and now the expectation here is that",
    "start": "125939",
    "end": "128819"
  },
  {
    "text": "users from one of these organizations",
    "start": "128819",
    "end": "131220"
  },
  {
    "text": "would come in and request for a",
    "start": "131220",
    "end": "133440"
  },
  {
    "text": "kubernetes cluster",
    "start": "133440",
    "end": "135239"
  },
  {
    "text": "and somehow this club kubernetes",
    "start": "135239",
    "end": "137340"
  },
  {
    "text": "clusters need to be manufactured and",
    "start": "137340",
    "end": "139980"
  },
  {
    "text": "delivered to them in a self-service",
    "start": "139980",
    "end": "141599"
  },
  {
    "text": "manner",
    "start": "141599",
    "end": "143040"
  },
  {
    "text": "so that is what that's the goal at Large",
    "start": "143040",
    "end": "148140"
  },
  {
    "text": "and the personas that we are dealing",
    "start": "148140",
    "end": "150060"
  },
  {
    "text": "with for this session will be mentioning",
    "start": "150060",
    "end": "152700"
  },
  {
    "text": "few of these personas in the next",
    "start": "152700",
    "end": "154319"
  },
  {
    "text": "upcoming slides cloud provider is the",
    "start": "154319",
    "end": "156840"
  },
  {
    "text": "one that oversees the entire cloud and",
    "start": "156840",
    "end": "159239"
  },
  {
    "text": "tenant or Goodman is the one that um",
    "start": "159239",
    "end": "163860"
  },
  {
    "text": "oversist the the tenant organization and",
    "start": "163860",
    "end": "167220"
  },
  {
    "text": "tenant org users or the end users who",
    "start": "167220",
    "end": "169920"
  },
  {
    "text": "would want the kubernetes Clusters",
    "start": "169920",
    "end": "173099"
  },
  {
    "text": "with that context set as I've mentioned",
    "start": "173099",
    "end": "176280"
  },
  {
    "text": "before the goal here is to deliver",
    "start": "176280",
    "end": "178680"
  },
  {
    "text": "kubernetes clusters in a self-service",
    "start": "178680",
    "end": "180959"
  },
  {
    "text": "manner in this kind of multi-tenant",
    "start": "180959",
    "end": "183000"
  },
  {
    "text": "cloud environment and with a cluster API",
    "start": "183000",
    "end": "186959"
  },
  {
    "text": "as its underlying technology",
    "start": "186959",
    "end": "189720"
  },
  {
    "text": "and one of the early observations that",
    "start": "189720",
    "end": "192120"
  },
  {
    "text": "we have made",
    "start": "192120",
    "end": "193920"
  },
  {
    "text": "while investigating this was few of the",
    "start": "193920",
    "end": "196860"
  },
  {
    "text": "personas that we just described like",
    "start": "196860",
    "end": "199980"
  },
  {
    "text": "cloud provider tenant organization",
    "start": "199980",
    "end": "202440"
  },
  {
    "text": "administrator they need not be",
    "start": "202440",
    "end": "204959"
  },
  {
    "text": "necessarily cluster API savvy",
    "start": "204959",
    "end": "207420"
  },
  {
    "text": "so we had to keep this in mind when we",
    "start": "207420",
    "end": "211200"
  },
  {
    "text": "were actually com coming up with",
    "start": "211200",
    "end": "213060"
  },
  {
    "text": "proposals and evaluating pros and cons",
    "start": "213060",
    "end": "217200"
  },
  {
    "text": "a quick background on cluster API we",
    "start": "217200",
    "end": "219599"
  },
  {
    "text": "expect audience to have a fair",
    "start": "219599",
    "end": "221879"
  },
  {
    "text": "understanding on what cluster API is for",
    "start": "221879",
    "end": "224700"
  },
  {
    "text": "this session I'm gonna quickly go",
    "start": "224700",
    "end": "226500"
  },
  {
    "text": "through this cluster API is a kubernetes",
    "start": "226500",
    "end": "228780"
  },
  {
    "text": "6 project that simplifies life cycle",
    "start": "228780",
    "end": "230879"
  },
  {
    "text": "management of clusters",
    "start": "230879",
    "end": "233459"
  },
  {
    "text": "and it offers a lot of benefits in terms",
    "start": "233459",
    "end": "236940"
  },
  {
    "text": "of simplified usage ease of development",
    "start": "236940",
    "end": "239220"
  },
  {
    "text": "faster feature develop the delivery rate",
    "start": "239220",
    "end": "243120"
  },
  {
    "text": "and most importantly the ecosystem",
    "start": "243120",
    "end": "245220"
  },
  {
    "text": "behind it",
    "start": "245220",
    "end": "246599"
  },
  {
    "text": "so yeah we love cluster API",
    "start": "246599",
    "end": "249540"
  },
  {
    "text": "and",
    "start": "249540",
    "end": "251340"
  },
  {
    "text": "the clustery pay expects a parent",
    "start": "251340",
    "end": "253319"
  },
  {
    "text": "cluster to be already present in order",
    "start": "253319",
    "end": "255480"
  },
  {
    "text": "for end users to create and manage",
    "start": "255480",
    "end": "257880"
  },
  {
    "text": "workload clusters",
    "start": "257880",
    "end": "259739"
  },
  {
    "text": "so a kubernetes cluster with cluster API",
    "start": "259739",
    "end": "262440"
  },
  {
    "text": "components installed is called a",
    "start": "262440",
    "end": "264120"
  },
  {
    "text": "management cluster the idea here is that",
    "start": "264120",
    "end": "266340"
  },
  {
    "text": "user would come in and run comments",
    "start": "266340",
    "end": "268380"
  },
  {
    "text": "commands against it to create workload",
    "start": "268380",
    "end": "270479"
  },
  {
    "text": "clusters",
    "start": "270479",
    "end": "271740"
  },
  {
    "text": "so I want to highlight two points on",
    "start": "271740",
    "end": "274380"
  },
  {
    "text": "this slide number one",
    "start": "274380",
    "end": "277940"
  },
  {
    "text": "this user",
    "start": "278340",
    "end": "281540"
  },
  {
    "text": "so this user",
    "start": "281940",
    "end": "285199"
  },
  {
    "text": "okay so this user is expected to have",
    "start": "286500",
    "end": "289800"
  },
  {
    "text": "access to the management cluster",
    "start": "289800",
    "end": "292199"
  },
  {
    "text": "it could be a low privileged access but",
    "start": "292199",
    "end": "295320"
  },
  {
    "text": "the user needs access to the management",
    "start": "295320",
    "end": "297479"
  },
  {
    "text": "cluster",
    "start": "297479",
    "end": "299160"
  },
  {
    "text": "and another Point here is that the",
    "start": "299160",
    "end": "301680"
  },
  {
    "text": "cluster API",
    "start": "301680",
    "end": "303419"
  },
  {
    "text": "here in this management cluster needs to",
    "start": "303419",
    "end": "306240"
  },
  {
    "text": "have access to the control plane",
    "start": "306240",
    "end": "309180"
  },
  {
    "text": "endpoint of these workload clusters for",
    "start": "309180",
    "end": "311280"
  },
  {
    "text": "it to manage",
    "start": "311280",
    "end": "312840"
  },
  {
    "text": "so just keep these two points in mind",
    "start": "312840",
    "end": "315600"
  },
  {
    "text": "um",
    "start": "315600",
    "end": "316139"
  },
  {
    "text": "next Arun actually will be going over a",
    "start": "316139",
    "end": "320100"
  },
  {
    "text": "few of the cluster API usage patterns",
    "start": "320100",
    "end": "322620"
  },
  {
    "text": "and we'll see how these two points can",
    "start": "322620",
    "end": "324780"
  },
  {
    "text": "become challenge in multi-tenant Cloud",
    "start": "324780",
    "end": "327479"
  },
  {
    "text": "environment",
    "start": "327479",
    "end": "330020"
  },
  {
    "text": "okay so with that I'm gonna play the",
    "start": "332100",
    "end": "334020"
  },
  {
    "text": "recording that's about cluster API",
    "start": "334020",
    "end": "337199"
  },
  {
    "text": "patterns",
    "start": "337199",
    "end": "339740"
  },
  {
    "text": "in this section of the talk we'll talk",
    "start": "352520",
    "end": "354720"
  },
  {
    "text": "about cluster API patterns used in the",
    "start": "354720",
    "end": "356699"
  },
  {
    "text": "industry and how do we actually uh ship",
    "start": "356699",
    "end": "359639"
  },
  {
    "text": "kubernetes cluster creation as a service",
    "start": "359639",
    "end": "361979"
  },
  {
    "text": "using just repair one of the simplest",
    "start": "361979",
    "end": "364320"
  },
  {
    "text": "patterns is the cluster API usage in a",
    "start": "364320",
    "end": "366000"
  },
  {
    "text": "private Cloud so suppose you have a team",
    "start": "366000",
    "end": "368160"
  },
  {
    "text": "of 10 Engineers who want to create",
    "start": "368160",
    "end": "369539"
  },
  {
    "text": "workload clusters and they want to share",
    "start": "369539",
    "end": "371400"
  },
  {
    "text": "one management cluster so what they will",
    "start": "371400",
    "end": "373199"
  },
  {
    "text": "do is they would essentially assign one",
    "start": "373199",
    "end": "375180"
  },
  {
    "text": "of the engineers as the management",
    "start": "375180",
    "end": "376440"
  },
  {
    "text": "cluster administrator and each of the",
    "start": "376440",
    "end": "378539"
  },
  {
    "text": "engineers who want to create a who want",
    "start": "378539",
    "end": "380340"
  },
  {
    "text": "to so create a cluster will actually get",
    "start": "380340",
    "end": "383639"
  },
  {
    "text": "a namespace access to this particular",
    "start": "383639",
    "end": "385380"
  },
  {
    "text": "management cluster so they issue a",
    "start": "385380",
    "end": "387240"
  },
  {
    "text": "request for their workflow cluster they",
    "start": "387240",
    "end": "388560"
  },
  {
    "text": "get a workload cluster the management",
    "start": "388560",
    "end": "390419"
  },
  {
    "text": "cluster administrator will actually",
    "start": "390419",
    "end": "393020"
  },
  {
    "text": "ensure that the management cluster is",
    "start": "393020",
    "end": "395639"
  },
  {
    "text": "upgraded updated with the cve fixes and",
    "start": "395639",
    "end": "398699"
  },
  {
    "text": "so on so it's a simple collaborative",
    "start": "398699",
    "end": "400560"
  },
  {
    "text": "exercise how does cluster creation work",
    "start": "400560",
    "end": "403319"
  },
  {
    "text": "in the case of a private Cloud so this",
    "start": "403319",
    "end": "407340"
  },
  {
    "text": "is something which can work in the case",
    "start": "407340",
    "end": "408600"
  },
  {
    "text": "in the general case as well this is a",
    "start": "408600",
    "end": "410039"
  },
  {
    "text": "class in cluster API use case so there's",
    "start": "410039",
    "end": "412139"
  },
  {
    "text": "an org management cluster there's our",
    "start": "412139",
    "end": "413940"
  },
  {
    "text": "management cluster administrator a user",
    "start": "413940",
    "end": "415800"
  },
  {
    "text": "wants to create a cluster they ask for",
    "start": "415800",
    "end": "417780"
  },
  {
    "text": "access to the management cluster the",
    "start": "417780",
    "end": "419460"
  },
  {
    "text": "getter namespace then they issue a",
    "start": "419460",
    "end": "421440"
  },
  {
    "text": "cluster creation request with the infra",
    "start": "421440",
    "end": "423120"
  },
  {
    "text": "token they get a workload cluster then",
    "start": "423120",
    "end": "425940"
  },
  {
    "text": "they actually try to get the cube config",
    "start": "425940",
    "end": "428039"
  },
  {
    "text": "the admin Cube config of the workflow",
    "start": "428039",
    "end": "429720"
  },
  {
    "text": "cluster using the same namespace and",
    "start": "429720",
    "end": "431280"
  },
  {
    "text": "they get the admin Cube so now they are",
    "start": "431280",
    "end": "433440"
  },
  {
    "text": "set and ready to go",
    "start": "433440",
    "end": "436100"
  },
  {
    "text": "that said however the problem statement",
    "start": "436100",
    "end": "439139"
  },
  {
    "text": "gets expanded in the case of a",
    "start": "439139",
    "end": "441060"
  },
  {
    "text": "multi-trainment cloud so in the case of",
    "start": "441060",
    "end": "442979"
  },
  {
    "text": "multi-tenant cloud you could have",
    "start": "442979",
    "end": "444120"
  },
  {
    "text": "multiple organizations say R1 and R2 and",
    "start": "444120",
    "end": "447120"
  },
  {
    "text": "each organization has multiple users now",
    "start": "447120",
    "end": "449520"
  },
  {
    "text": "each set of users wants to use a set of",
    "start": "449520",
    "end": "451919"
  },
  {
    "text": "management clusters which create",
    "start": "451919",
    "end": "453780"
  },
  {
    "text": "workload clusters in their own tenant",
    "start": "453780",
    "end": "455880"
  },
  {
    "text": "org so tenant.com users would actually",
    "start": "455880",
    "end": "457979"
  },
  {
    "text": "try to use management clusters to create",
    "start": "457979",
    "end": "459840"
  },
  {
    "text": "virtual clusters in Oracle likewise all",
    "start": "459840",
    "end": "462240"
  },
  {
    "text": "two will use the management clusters",
    "start": "462240",
    "end": "464099"
  },
  {
    "text": "only for R2 and create clear virtual",
    "start": "464099",
    "end": "465960"
  },
  {
    "text": "clusters in all clue there needs to be a",
    "start": "465960",
    "end": "468360"
  },
  {
    "text": "management cluster administrator who",
    "start": "468360",
    "end": "470280"
  },
  {
    "text": "ensures that the two sets of management",
    "start": "470280",
    "end": "472620"
  },
  {
    "text": "clusters are isolated so you can see",
    "start": "472620",
    "end": "475020"
  },
  {
    "text": "that there's a amorphous cloud of",
    "start": "475020",
    "end": "477060"
  },
  {
    "text": "management clusters and this",
    "start": "477060",
    "end": "478199"
  },
  {
    "text": "administrator ensures that there is",
    "start": "478199",
    "end": "480180"
  },
  {
    "text": "isolation there is fairness also that I",
    "start": "480180",
    "end": "484319"
  },
  {
    "text": "mean one of the the requests of our gun",
    "start": "484319",
    "end": "486660"
  },
  {
    "text": "should not form the request of all two",
    "start": "486660",
    "end": "488280"
  },
  {
    "text": "and that these management clusters are",
    "start": "488280",
    "end": "490380"
  },
  {
    "text": "always available so there needs to be a",
    "start": "490380",
    "end": "492240"
  },
  {
    "text": "one or more management cluster",
    "start": "492240",
    "end": "493680"
  },
  {
    "text": "administrator personas who maintains all",
    "start": "493680",
    "end": "496440"
  },
  {
    "text": "of these management clusters and ensures",
    "start": "496440",
    "end": "498000"
  },
  {
    "text": "that they are highly available backed up",
    "start": "498000",
    "end": "500460"
  },
  {
    "text": "and restored in case of failures and",
    "start": "500460",
    "end": "502620"
  },
  {
    "text": "they are always isolated and the other",
    "start": "502620",
    "end": "506460"
  },
  {
    "text": "common aspects of distributed computing",
    "start": "506460",
    "end": "510000"
  },
  {
    "text": "um no if you take any management cluster",
    "start": "510000",
    "end": "511979"
  },
  {
    "text": "which is used by multiple workflow",
    "start": "511979",
    "end": "513180"
  },
  {
    "text": "clusters the management cluster can be",
    "start": "513180",
    "end": "515159"
  },
  {
    "text": "considered as a single point of failure",
    "start": "515159",
    "end": "516959"
  },
  {
    "text": "from a distributed computing perspective",
    "start": "516959",
    "end": "518520"
  },
  {
    "text": "uh likewise uh currently we are talking",
    "start": "518520",
    "end": "521039"
  },
  {
    "text": "about isolating management clusters uh",
    "start": "521039",
    "end": "522779"
  },
  {
    "text": "using namespaces which is good for some",
    "start": "522779",
    "end": "525000"
  },
  {
    "text": "sufficient some set of use cases but let",
    "start": "525000",
    "end": "526980"
  },
  {
    "text": "us consider what happens if there's a",
    "start": "526980",
    "end": "529620"
  },
  {
    "text": "network partition in the case of cluster",
    "start": "529620",
    "end": "531300"
  },
  {
    "text": "API networking is king So essentially",
    "start": "531300",
    "end": "533700"
  },
  {
    "text": "management clusters and workload cluster",
    "start": "533700",
    "end": "535860"
  },
  {
    "text": "need to have a networking connection all",
    "start": "535860",
    "end": "538320"
  },
  {
    "text": "of the time if the network if there is a",
    "start": "538320",
    "end": "540899"
  },
  {
    "text": "network partition the workload cluster",
    "start": "540899",
    "end": "542399"
  },
  {
    "text": "cannot be upgraded or updated or patched",
    "start": "542399",
    "end": "544800"
  },
  {
    "text": "so it actually essentially is not",
    "start": "544800",
    "end": "546959"
  },
  {
    "text": "serviceable anymore likewise what",
    "start": "546959",
    "end": "548940"
  },
  {
    "text": "happens if the management cluster is",
    "start": "548940",
    "end": "550320"
  },
  {
    "text": "compromised in that case every single",
    "start": "550320",
    "end": "552899"
  },
  {
    "text": "workload cluster which is attached to",
    "start": "552899",
    "end": "554519"
  },
  {
    "text": "the management cluster is compromised so",
    "start": "554519",
    "end": "556320"
  },
  {
    "text": "all of the secrets all of the tokens",
    "start": "556320",
    "end": "557940"
  },
  {
    "text": "which were actually in every single one",
    "start": "557940",
    "end": "559680"
  },
  {
    "text": "of the workload clusters is lost and",
    "start": "559680",
    "end": "561600"
  },
  {
    "text": "they need to be",
    "start": "561600",
    "end": "562920"
  },
  {
    "text": "recovered in not an easy way we can say",
    "start": "562920",
    "end": "566760"
  },
  {
    "text": "so that said now let us actually look at",
    "start": "566760",
    "end": "569220"
  },
  {
    "text": "two patterns and see how they could fit",
    "start": "569220",
    "end": "571560"
  },
  {
    "text": "into here these use cases in the",
    "start": "571560",
    "end": "573720"
  },
  {
    "text": "multi-term cloud one simple pattern is",
    "start": "573720",
    "end": "576060"
  },
  {
    "text": "that there is one Global Management",
    "start": "576060",
    "end": "577080"
  },
  {
    "text": "cluster all of the workload clusters",
    "start": "577080",
    "end": "578940"
  },
  {
    "text": "actually talk to this Global Management",
    "start": "578940",
    "end": "580440"
  },
  {
    "text": "cluster likewise all of the users get",
    "start": "580440",
    "end": "582480"
  },
  {
    "text": "workload clusters using this simple",
    "start": "582480",
    "end": "584160"
  },
  {
    "text": "pattern one management cluster to rule",
    "start": "584160",
    "end": "586019"
  },
  {
    "text": "them all there is a single overhead of",
    "start": "586019",
    "end": "587760"
  },
  {
    "text": "one Global Management cluster",
    "start": "587760",
    "end": "589740"
  },
  {
    "text": "however",
    "start": "589740",
    "end": "591019"
  },
  {
    "text": "we have we cannot have strict Network",
    "start": "591019",
    "end": "593220"
  },
  {
    "text": "isolation which is required by many",
    "start": "593220",
    "end": "594779"
  },
  {
    "text": "customers of VMware Cloud director so",
    "start": "594779",
    "end": "597180"
  },
  {
    "text": "for example uh suppose uh so there it",
    "start": "597180",
    "end": "601980"
  },
  {
    "text": "needs to be one local Bill management",
    "start": "601980",
    "end": "603120"
  },
  {
    "text": "cluster which has cross tenant access to",
    "start": "603120",
    "end": "605880"
  },
  {
    "text": "all of the workload clusters and that is",
    "start": "605880",
    "end": "607500"
  },
  {
    "text": "something which is not easy to do",
    "start": "607500",
    "end": "609600"
  },
  {
    "text": "however it is doable with a lot of infra",
    "start": "609600",
    "end": "612660"
  },
  {
    "text": "help like with sphere and fairness",
    "start": "612660",
    "end": "615000"
  },
  {
    "text": "encoder what if R1 has 1000 clusters and",
    "start": "615000",
    "end": "617580"
  },
  {
    "text": "all two has five clusters how will",
    "start": "617580",
    "end": "619320"
  },
  {
    "text": "cluster API ensure that a requests are",
    "start": "619320",
    "end": "621180"
  },
  {
    "text": "made to the same management cluster will",
    "start": "621180",
    "end": "623339"
  },
  {
    "text": "be fair and one of them will not swamp",
    "start": "623339",
    "end": "625200"
  },
  {
    "text": "the other note that organ anode can be",
    "start": "625200",
    "end": "627180"
  },
  {
    "text": "competitors Resources management suppose",
    "start": "627180",
    "end": "629339"
  },
  {
    "text": "Oregon has 10 class cluster Auto scalers",
    "start": "629339",
    "end": "632220"
  },
  {
    "text": "and all two has one how do we ensure",
    "start": "632220",
    "end": "634380"
  },
  {
    "text": "that Oregon gets the right Bill and or",
    "start": "634380",
    "end": "636300"
  },
  {
    "text": "to get the right bill how do we ensure",
    "start": "636300",
    "end": "638940"
  },
  {
    "text": "that this management cluster is always",
    "start": "638940",
    "end": "640500"
  },
  {
    "text": "highly available to all of the",
    "start": "640500",
    "end": "642180"
  },
  {
    "text": "organizations",
    "start": "642180",
    "end": "643320"
  },
  {
    "text": "and the final thing which is a problem",
    "start": "643320",
    "end": "645600"
  },
  {
    "text": "is that many of the tenants do not like",
    "start": "645600",
    "end": "648720"
  },
  {
    "text": "to trust our infrastructure component",
    "start": "648720",
    "end": "650279"
  },
  {
    "text": "which is outside their tenancy which can",
    "start": "650279",
    "end": "652680"
  },
  {
    "text": "be trusted by other competitors as well",
    "start": "652680",
    "end": "656779"
  },
  {
    "text": "so the obvious the next extension to",
    "start": "656779",
    "end": "660120"
  },
  {
    "text": "this is uh have one organization",
    "start": "660120",
    "end": "662820"
  },
  {
    "text": "management cluster per organization so",
    "start": "662820",
    "end": "665040"
  },
  {
    "text": "you orgon has its own management cluster",
    "start": "665040",
    "end": "667140"
  },
  {
    "text": "or two has its own management cluster uh",
    "start": "667140",
    "end": "669420"
  },
  {
    "text": "this is a good solution tenants don't",
    "start": "669420",
    "end": "671820"
  },
  {
    "text": "need to trust an external management",
    "start": "671820",
    "end": "673140"
  },
  {
    "text": "cluster there is more flexibility in the",
    "start": "673140",
    "end": "675600"
  },
  {
    "text": "shape of the cluster so you can each",
    "start": "675600",
    "end": "678300"
  },
  {
    "text": "user can talk to their own management",
    "start": "678300",
    "end": "680160"
  },
  {
    "text": "cluster administrator and actually get a",
    "start": "680160",
    "end": "683300"
  },
  {
    "text": "decent term",
    "start": "683300",
    "end": "685079"
  },
  {
    "text": "I mean they can say that they want Celia",
    "start": "685079",
    "end": "687000"
  },
  {
    "text": "minority and these users can say they",
    "start": "687000",
    "end": "688740"
  },
  {
    "text": "want a Calico and they can actually",
    "start": "688740",
    "end": "690420"
  },
  {
    "text": "begin to get clusters with their own CNA",
    "start": "690420",
    "end": "692579"
  },
  {
    "text": "and things like that the overhead of",
    "start": "692579",
    "end": "694560"
  },
  {
    "text": "management cluster is delegated to the",
    "start": "694560",
    "end": "696000"
  },
  {
    "text": "org itself so it's very easy to do",
    "start": "696000",
    "end": "698100"
  },
  {
    "text": "Resource Management strict isolation is",
    "start": "698100",
    "end": "700079"
  },
  {
    "text": "available at your tenancy level uh so",
    "start": "700079",
    "end": "702600"
  },
  {
    "text": "because there's a tenant boundary and we",
    "start": "702600",
    "end": "703980"
  },
  {
    "text": "are all obviously within the internet",
    "start": "703980",
    "end": "705140"
  },
  {
    "text": "however uh we run into the issue of",
    "start": "705140",
    "end": "708240"
  },
  {
    "text": "scale so there can be thousands of",
    "start": "708240",
    "end": "709620"
  },
  {
    "text": "organizations in VMware Cloud director",
    "start": "709620",
    "end": "711420"
  },
  {
    "text": "and we are saying that addition of new",
    "start": "711420",
    "end": "713279"
  },
  {
    "text": "organization means creation of a new",
    "start": "713279",
    "end": "714899"
  },
  {
    "text": "management cluster and creation of a new",
    "start": "714899",
    "end": "717660"
  },
  {
    "text": "management cluster administrator who",
    "start": "717660",
    "end": "719579"
  },
  {
    "text": "manages that within that organization so",
    "start": "719579",
    "end": "721920"
  },
  {
    "text": "there needs to be one management cluster",
    "start": "721920",
    "end": "723600"
  },
  {
    "text": "administrator per org so we are scaling",
    "start": "723600",
    "end": "726300"
  },
  {
    "text": "the personas as well along with the",
    "start": "726300",
    "end": "728040"
  },
  {
    "text": "infrastructure we don't get strict",
    "start": "728040",
    "end": "730440"
  },
  {
    "text": "isolation at a user level which is not a",
    "start": "730440",
    "end": "733440"
  },
  {
    "text": "big problem but it's a problem for some",
    "start": "733440",
    "end": "735120"
  },
  {
    "text": "use cases and as you can see management",
    "start": "735120",
    "end": "736920"
  },
  {
    "text": "cluster is still a single point of",
    "start": "736920",
    "end": "738660"
  },
  {
    "text": "failure",
    "start": "738660",
    "end": "739620"
  },
  {
    "text": "so in the remainder of the talk sahity",
    "start": "739620",
    "end": "742860"
  },
  {
    "text": "will actually discuss about various",
    "start": "742860",
    "end": "744600"
  },
  {
    "text": "Solutions we have actually thought about",
    "start": "744600",
    "end": "746820"
  },
  {
    "text": "for this structure for this problem and",
    "start": "746820",
    "end": "749760"
  },
  {
    "text": "how it fits into our infrastructure",
    "start": "749760",
    "end": "751500"
  },
  {
    "text": "thanks folks",
    "start": "751500",
    "end": "754579"
  },
  {
    "text": "okay so let's do a quick recap on what",
    "start": "757019",
    "end": "760140"
  },
  {
    "text": "Arun has actually went over so basically",
    "start": "760140",
    "end": "763500"
  },
  {
    "text": "he went over the couple of cluster API",
    "start": "763500",
    "end": "766740"
  },
  {
    "text": "usage patterns and out of those two",
    "start": "766740",
    "end": "769860"
  },
  {
    "text": "Stand Out number one cluster API usage",
    "start": "769860",
    "end": "773579"
  },
  {
    "text": "in a private cloud-like environment",
    "start": "773579",
    "end": "775320"
  },
  {
    "text": "where we have a single management",
    "start": "775320",
    "end": "776639"
  },
  {
    "text": "cluster and we have multiple workload",
    "start": "776639",
    "end": "779339"
  },
  {
    "text": "clusters and under it that pattern",
    "start": "779339",
    "end": "782040"
  },
  {
    "text": "mostly works very well especially in",
    "start": "782040",
    "end": "785240"
  },
  {
    "text": "clouds which are of smaller size and",
    "start": "785240",
    "end": "787860"
  },
  {
    "text": "teams which are of smaller size and the",
    "start": "787860",
    "end": "790620"
  },
  {
    "text": "next one is cluster API usage in",
    "start": "790620",
    "end": "792480"
  },
  {
    "text": "multi-tenant Cloud platform where",
    "start": "792480",
    "end": "795060"
  },
  {
    "text": "management dedicated management cluster",
    "start": "795060",
    "end": "797720"
  },
  {
    "text": "is expected to be present in each tenant",
    "start": "797720",
    "end": "800940"
  },
  {
    "text": "organization",
    "start": "800940",
    "end": "802320"
  },
  {
    "text": "in which case all of the issues that uh",
    "start": "802320",
    "end": "805440"
  },
  {
    "text": "with just Arun went over",
    "start": "805440",
    "end": "808079"
  },
  {
    "text": "the the problems the all those seemingly",
    "start": "808079",
    "end": "811079"
  },
  {
    "text": "minor issues now begin to look much",
    "start": "811079",
    "end": "813540"
  },
  {
    "text": "bigger and and that's because of the",
    "start": "813540",
    "end": "815519"
  },
  {
    "text": "scale that we are talking few of the",
    "start": "815519",
    "end": "817680"
  },
  {
    "text": "challenges here are user level",
    "start": "817680",
    "end": "819180"
  },
  {
    "text": "multi-tenancy within a management",
    "start": "819180",
    "end": "820800"
  },
  {
    "text": "cluster so this issue is a challenge",
    "start": "820800",
    "end": "824160"
  },
  {
    "text": "within itself even with single",
    "start": "824160",
    "end": "825779"
  },
  {
    "text": "management cluster now imagine for",
    "start": "825779",
    "end": "828420"
  },
  {
    "text": "thousand organizations having thousand",
    "start": "828420",
    "end": "830339"
  },
  {
    "text": "management clusters and if admins are",
    "start": "830339",
    "end": "832380"
  },
  {
    "text": "supposed to do this user level",
    "start": "832380",
    "end": "833639"
  },
  {
    "text": "multi-tenancy for each management",
    "start": "833639",
    "end": "835260"
  },
  {
    "text": "cluster",
    "start": "835260",
    "end": "836519"
  },
  {
    "text": "it's it's going to be a challenge and",
    "start": "836519",
    "end": "839279"
  },
  {
    "text": "similarly",
    "start": "839279",
    "end": "840360"
  },
  {
    "text": "for the production grade workload",
    "start": "840360",
    "end": "842160"
  },
  {
    "text": "clusters we want the we want to somehow",
    "start": "842160",
    "end": "844740"
  },
  {
    "text": "guard the management cluster at all",
    "start": "844740",
    "end": "846480"
  },
  {
    "text": "times so we need to worry about backup",
    "start": "846480",
    "end": "848639"
  },
  {
    "text": "restore and bunch of other issues that",
    "start": "848639",
    "end": "852720"
  },
  {
    "text": "we have already seen now so with all",
    "start": "852720",
    "end": "855300"
  },
  {
    "text": "these in mind we have revised our",
    "start": "855300",
    "end": "857040"
  },
  {
    "text": "problem statement",
    "start": "857040",
    "end": "858420"
  },
  {
    "text": "so original problem statement was bullet",
    "start": "858420",
    "end": "860519"
  },
  {
    "text": "number one here which is to build",
    "start": "860519",
    "end": "862740"
  },
  {
    "text": "kubernetes engine that delivers",
    "start": "862740",
    "end": "864420"
  },
  {
    "text": "kubernetes clusters in a self-service",
    "start": "864420",
    "end": "866339"
  },
  {
    "text": "manner with cluster API",
    "start": "866339",
    "end": "868380"
  },
  {
    "text": "now number two and number three we have",
    "start": "868380",
    "end": "871380"
  },
  {
    "text": "added those conditions to ensure there",
    "start": "871380",
    "end": "873839"
  },
  {
    "text": "is not much",
    "start": "873839",
    "end": "876180"
  },
  {
    "text": "cost for the providers and also to the",
    "start": "876180",
    "end": "878940"
  },
  {
    "text": "tenant organizations that is to avoid",
    "start": "878940",
    "end": "881279"
  },
  {
    "text": "the burden of managing management",
    "start": "881279",
    "end": "882899"
  },
  {
    "text": "clusters and number three is reduce the",
    "start": "882899",
    "end": "886199"
  },
  {
    "text": "need for cloud admin and tenant admins",
    "start": "886199",
    "end": "888240"
  },
  {
    "text": "to be cluster API savvy so usually the",
    "start": "888240",
    "end": "891420"
  },
  {
    "text": "primary responsibility of these Cloud",
    "start": "891420",
    "end": "893760"
  },
  {
    "text": "providers and tenant administrators is",
    "start": "893760",
    "end": "895860"
  },
  {
    "text": "to provide infrastructure as a service",
    "start": "895860",
    "end": "897660"
  },
  {
    "text": "platform",
    "start": "897660",
    "end": "898800"
  },
  {
    "text": "and not necessarily the platform as a",
    "start": "898800",
    "end": "901199"
  },
  {
    "text": "service like kubernetes engine",
    "start": "901199",
    "end": "904199"
  },
  {
    "text": "okay so now let's let's say no",
    "start": "904199",
    "end": "907320"
  },
  {
    "text": "management clusters let's imagine",
    "start": "907320",
    "end": "909320"
  },
  {
    "text": "there's no management cluster layer",
    "start": "909320",
    "end": "911760"
  },
  {
    "text": "neither at a cloud layer nor at",
    "start": "911760",
    "end": "914519"
  },
  {
    "text": "individual tenant organization layer",
    "start": "914519",
    "end": "916639"
  },
  {
    "text": "instead write a program simple program",
    "start": "916639",
    "end": "919800"
  },
  {
    "text": "which we call it lightweight stateless",
    "start": "919800",
    "end": "922199"
  },
  {
    "text": "kubernetes engine",
    "start": "922199",
    "end": "924420"
  },
  {
    "text": "that manufactures these kubernetes",
    "start": "924420",
    "end": "926579"
  },
  {
    "text": "clusters somehow",
    "start": "926579",
    "end": "928860"
  },
  {
    "text": "and then make these kubernetes clusters",
    "start": "928860",
    "end": "931560"
  },
  {
    "text": "a bit more capable",
    "start": "931560",
    "end": "933600"
  },
  {
    "text": "so that they can manage themselves which",
    "start": "933600",
    "end": "936899"
  },
  {
    "text": "we are calling self-managing clusters",
    "start": "936899",
    "end": "940199"
  },
  {
    "text": "so so in this slide so we just talked",
    "start": "940199",
    "end": "943800"
  },
  {
    "text": "about two things one kubernetes engine",
    "start": "943800",
    "end": "945720"
  },
  {
    "text": "and then self-managing clusters so first",
    "start": "945720",
    "end": "948240"
  },
  {
    "text": "let's look at what self-managing cluster",
    "start": "948240",
    "end": "950220"
  },
  {
    "text": "is then I'll double click on the",
    "start": "950220",
    "end": "951959"
  },
  {
    "text": "kubernetes engine part as well",
    "start": "951959",
    "end": "954120"
  },
  {
    "text": "so what is a self-managing cluster so",
    "start": "954120",
    "end": "956820"
  },
  {
    "text": "this diagram represents the traditional",
    "start": "956820",
    "end": "958680"
  },
  {
    "text": "hierarchical structure between",
    "start": "958680",
    "end": "960060"
  },
  {
    "text": "management and workload cluster",
    "start": "960060",
    "end": "962579"
  },
  {
    "text": "so the idea here is that user would come",
    "start": "962579",
    "end": "965279"
  },
  {
    "text": "in and run a command against management",
    "start": "965279",
    "end": "967980"
  },
  {
    "text": "cluster",
    "start": "967980",
    "end": "970079"
  },
  {
    "text": "as a result workload cluster gets",
    "start": "970079",
    "end": "971940"
  },
  {
    "text": "created and Associated workload cluster",
    "start": "971940",
    "end": "974220"
  },
  {
    "text": "records are created in hcd database of",
    "start": "974220",
    "end": "977639"
  },
  {
    "text": "the management cluster",
    "start": "977639",
    "end": "979320"
  },
  {
    "text": "now in order for this workload cluster",
    "start": "979320",
    "end": "981660"
  },
  {
    "text": "to make it self-managing we need two",
    "start": "981660",
    "end": "984120"
  },
  {
    "text": "steps number one install cluster API in",
    "start": "984120",
    "end": "987420"
  },
  {
    "text": "it",
    "start": "987420",
    "end": "988139"
  },
  {
    "text": "and then number two is move these",
    "start": "988139",
    "end": "990899"
  },
  {
    "text": "records from the parent to the child",
    "start": "990899",
    "end": "995100"
  },
  {
    "text": "and for that we can leverage cluster",
    "start": "995100",
    "end": "996959"
  },
  {
    "text": "Kettle move command and once we do that",
    "start": "996959",
    "end": "1000800"
  },
  {
    "text": "once these records are moved from parent",
    "start": "1000800",
    "end": "1002720"
  },
  {
    "text": "to the child so the cluster API sitting",
    "start": "1002720",
    "end": "1005779"
  },
  {
    "text": "in the workload cluster can see its own",
    "start": "1005779",
    "end": "1008600"
  },
  {
    "text": "records and that's what actually makes",
    "start": "1008600",
    "end": "1011000"
  },
  {
    "text": "it",
    "start": "1011000",
    "end": "1012399"
  },
  {
    "text": "operate on itself",
    "start": "1012399",
    "end": "1015740"
  },
  {
    "text": "and basically that makes it",
    "start": "1015740",
    "end": "1017600"
  },
  {
    "text": "self-managing cluster at this point and",
    "start": "1017600",
    "end": "1019579"
  },
  {
    "text": "the parent-to-child relationship is",
    "start": "1019579",
    "end": "1021320"
  },
  {
    "text": "broken and now user can directly access",
    "start": "1021320",
    "end": "1024140"
  },
  {
    "text": "this workload cluster to run commands",
    "start": "1024140",
    "end": "1027140"
  },
  {
    "text": "against it to resize upgrade and any",
    "start": "1027140",
    "end": "1029660"
  },
  {
    "text": "kind of update operations",
    "start": "1029660",
    "end": "1033280"
  },
  {
    "text": "foreign",
    "start": "1033679",
    "end": "1035918"
  },
  {
    "text": "aging cluster now and we can get rid of",
    "start": "1036579",
    "end": "1039380"
  },
  {
    "text": "the management cluster",
    "start": "1039380",
    "end": "1041058"
  },
  {
    "text": "and the concept of self-managing cluster",
    "start": "1041059",
    "end": "1043339"
  },
  {
    "text": "is not something new or we we have not",
    "start": "1043339",
    "end": "1046760"
  },
  {
    "text": "invented it it has been there and",
    "start": "1046760",
    "end": "1048500"
  },
  {
    "text": "cluster API supported it",
    "start": "1048500",
    "end": "1050660"
  },
  {
    "text": "the novelty here lies in the fact that",
    "start": "1050660",
    "end": "1053720"
  },
  {
    "text": "we have productized this concept of",
    "start": "1053720",
    "end": "1056059"
  },
  {
    "text": "self-managing clusters",
    "start": "1056059",
    "end": "1058100"
  },
  {
    "text": "to deliver",
    "start": "1058100",
    "end": "1059679"
  },
  {
    "text": "uh to build a kubernetes engine that",
    "start": "1059679",
    "end": "1062360"
  },
  {
    "text": "delivers these clusters in a",
    "start": "1062360",
    "end": "1063980"
  },
  {
    "text": "self-service manner",
    "start": "1063980",
    "end": "1066559"
  },
  {
    "text": "okay now let's put all of this together",
    "start": "1066559",
    "end": "1068900"
  },
  {
    "text": "and see end-to-end workflow in action",
    "start": "1068900",
    "end": "1071000"
  },
  {
    "text": "yeah in in other words what we are",
    "start": "1071000",
    "end": "1074000"
  },
  {
    "text": "trying to do here is a cluster API as a",
    "start": "1074000",
    "end": "1076160"
  },
  {
    "text": "service on multi-tenant cloud",
    "start": "1076160",
    "end": "1078200"
  },
  {
    "text": "so let's go back to the original picture",
    "start": "1078200",
    "end": "1080299"
  },
  {
    "text": "and we have this thin layer kubernetes",
    "start": "1080299",
    "end": "1082700"
  },
  {
    "text": "engine",
    "start": "1082700",
    "end": "1085059"
  },
  {
    "text": "and the idea here is that uh one of the",
    "start": "1085580",
    "end": "1088340"
  },
  {
    "text": "users from this tenant organ would come",
    "start": "1088340",
    "end": "1090440"
  },
  {
    "text": "in and request for a cluster",
    "start": "1090440",
    "end": "1093260"
  },
  {
    "text": "and now this case engine processes the",
    "start": "1093260",
    "end": "1095600"
  },
  {
    "text": "request and the first thing that it does",
    "start": "1095600",
    "end": "1097220"
  },
  {
    "text": "is it creates a bootstrap cluster",
    "start": "1097220",
    "end": "1099919"
  },
  {
    "text": "basically it creates a lightweight",
    "start": "1099919",
    "end": "1101600"
  },
  {
    "text": "virtual machine inside the tenant org",
    "start": "1101600",
    "end": "1104299"
  },
  {
    "text": "space and then install cluster API on it",
    "start": "1104299",
    "end": "1107780"
  },
  {
    "text": "and then sorry first install kind",
    "start": "1107780",
    "end": "1110120"
  },
  {
    "text": "software which is used to create the",
    "start": "1110120",
    "end": "1113660"
  },
  {
    "text": "bootstrap cluster",
    "start": "1113660",
    "end": "1116120"
  },
  {
    "text": "um and then install cluster API on it",
    "start": "1116120",
    "end": "1118640"
  },
  {
    "text": "and then create the workload cluster by",
    "start": "1118640",
    "end": "1121100"
  },
  {
    "text": "applying the copy amml and then",
    "start": "1121100",
    "end": "1124460"
  },
  {
    "text": "install cluster API on the workload",
    "start": "1124460",
    "end": "1126320"
  },
  {
    "text": "cluster and then move the records from",
    "start": "1126320",
    "end": "1128240"
  },
  {
    "text": "the management cluster to workload",
    "start": "1128240",
    "end": "1129679"
  },
  {
    "text": "cluster so all of this is being",
    "start": "1129679",
    "end": "1131600"
  },
  {
    "text": "orchestrated by this uh",
    "start": "1131600",
    "end": "1134360"
  },
  {
    "text": "this kubernetes engine",
    "start": "1134360",
    "end": "1137419"
  },
  {
    "text": "and once we make this workload cluster",
    "start": "1137419",
    "end": "1140360"
  },
  {
    "text": "self managing we this kubernetes engine",
    "start": "1140360",
    "end": "1143539"
  },
  {
    "text": "gets rid of the bootstrap cluster so",
    "start": "1143539",
    "end": "1145940"
  },
  {
    "text": "that's why we called it ephemeral",
    "start": "1145940",
    "end": "1147380"
  },
  {
    "text": "management cluster",
    "start": "1147380",
    "end": "1149960"
  },
  {
    "text": "so at this point we have got the",
    "start": "1149960",
    "end": "1151820"
  },
  {
    "text": "self-managing cluster ready and that's",
    "start": "1151820",
    "end": "1153799"
  },
  {
    "text": "delivered to the end user and likewise",
    "start": "1153799",
    "end": "1155780"
  },
  {
    "text": "other users can request for more",
    "start": "1155780",
    "end": "1158200"
  },
  {
    "text": "clusters and these self-managing",
    "start": "1158200",
    "end": "1160400"
  },
  {
    "text": "clusters are delivered to them in a",
    "start": "1160400",
    "end": "1162140"
  },
  {
    "text": "self-service manner",
    "start": "1162140",
    "end": "1164419"
  },
  {
    "text": "okay now let us take a deeper lick uh",
    "start": "1164419",
    "end": "1169340"
  },
  {
    "text": "okay so sorry before we go to the next",
    "start": "1169340",
    "end": "1172220"
  },
  {
    "text": "slide I have one more point to share",
    "start": "1172220",
    "end": "1174500"
  },
  {
    "text": "here",
    "start": "1174500",
    "end": "1175460"
  },
  {
    "text": "so this is a composition of the self",
    "start": "1175460",
    "end": "1177440"
  },
  {
    "text": "managing cluster so this kubernetes",
    "start": "1177440",
    "end": "1179660"
  },
  {
    "text": "engine also ensures that",
    "start": "1179660",
    "end": "1181640"
  },
  {
    "text": "a few of the essential packages like cni",
    "start": "1181640",
    "end": "1184520"
  },
  {
    "text": "CPI csir installed on it and then there",
    "start": "1184520",
    "end": "1187880"
  },
  {
    "text": "is this custom operator which I'll be",
    "start": "1187880",
    "end": "1189620"
  },
  {
    "text": "mentioning uh in a bit",
    "start": "1189620",
    "end": "1192020"
  },
  {
    "text": "and another Point here is that for",
    "start": "1192020",
    "end": "1194240"
  },
  {
    "text": "cluster deletion the same process as",
    "start": "1194240",
    "end": "1196700"
  },
  {
    "text": "cluster creation needs to be repeated as",
    "start": "1196700",
    "end": "1200059"
  },
  {
    "text": "in the creation of the bootstrap cluster",
    "start": "1200059",
    "end": "1203120"
  },
  {
    "text": "and moving so this time around we need",
    "start": "1203120",
    "end": "1205460"
  },
  {
    "text": "to move the records back from child to",
    "start": "1205460",
    "end": "1207140"
  },
  {
    "text": "the parent and the reason being",
    "start": "1207140",
    "end": "1210880"
  },
  {
    "text": "the cluster cannot delete itself in a",
    "start": "1211039",
    "end": "1214160"
  },
  {
    "text": "clean manner so if we if user goes and",
    "start": "1214160",
    "end": "1216679"
  },
  {
    "text": "directly issues a command to the",
    "start": "1216679",
    "end": "1218900"
  },
  {
    "text": "self-managing cluster okay delete",
    "start": "1218900",
    "end": "1221360"
  },
  {
    "text": "so then um",
    "start": "1221360",
    "end": "1223460"
  },
  {
    "text": "things may not work properly so that's",
    "start": "1223460",
    "end": "1225380"
  },
  {
    "text": "why we have opted for this option",
    "start": "1225380",
    "end": "1228380"
  },
  {
    "text": "okay with that now let's go ahead and",
    "start": "1228380",
    "end": "1231260"
  },
  {
    "text": "discuss updates upgrades and Fleet",
    "start": "1231260",
    "end": "1233360"
  },
  {
    "text": "Management on how how all of these",
    "start": "1233360",
    "end": "1236120"
  },
  {
    "text": "operations would work on self-managing",
    "start": "1236120",
    "end": "1237860"
  },
  {
    "text": "clusters",
    "start": "1237860",
    "end": "1239539"
  },
  {
    "text": "okay so the one a we have already just",
    "start": "1239539",
    "end": "1242660"
  },
  {
    "text": "discussed this once we have this",
    "start": "1242660",
    "end": "1244640"
  },
  {
    "text": "self-managing cluster",
    "start": "1244640",
    "end": "1246799"
  },
  {
    "text": "if the user is cluster API is heavy",
    "start": "1246799",
    "end": "1249020"
  },
  {
    "text": "enough they can directly go to the",
    "start": "1249020",
    "end": "1251000"
  },
  {
    "text": "cluster and run Cube cuddle apply and do",
    "start": "1251000",
    "end": "1255200"
  },
  {
    "text": "whatever they want resize update upgrade",
    "start": "1255200",
    "end": "1258200"
  },
  {
    "text": "and now in our cloud and my environment",
    "start": "1258200",
    "end": "1260900"
  },
  {
    "text": "there are several other use cases that",
    "start": "1260900",
    "end": "1263120"
  },
  {
    "text": "we had to handle like as a novice",
    "start": "1263120",
    "end": "1265160"
  },
  {
    "text": "kubernetes user all I want to do is",
    "start": "1265160",
    "end": "1267919"
  },
  {
    "text": "Click bunch of UI buttons to resize or",
    "start": "1267919",
    "end": "1269900"
  },
  {
    "text": "upgrade the cluster",
    "start": "1269900",
    "end": "1271400"
  },
  {
    "text": "so there there can exist such person",
    "start": "1271400",
    "end": "1273620"
  },
  {
    "text": "asked where",
    "start": "1273620",
    "end": "1274940"
  },
  {
    "text": "um somebody just creates kubernetes",
    "start": "1274940",
    "end": "1276620"
  },
  {
    "text": "cluster and hands them over to someone",
    "start": "1276620",
    "end": "1278179"
  },
  {
    "text": "else who does not have enough privileges",
    "start": "1278179",
    "end": "1280039"
  },
  {
    "text": "to create kubernetes clusters so this",
    "start": "1280039",
    "end": "1282260"
  },
  {
    "text": "use case is an valid and important for",
    "start": "1282260",
    "end": "1284960"
  },
  {
    "text": "us",
    "start": "1284960",
    "end": "1285860"
  },
  {
    "text": "and that's one and",
    "start": "1285860",
    "end": "1288559"
  },
  {
    "text": "as a now let's imagine we have a",
    "start": "1288559",
    "end": "1291020"
  },
  {
    "text": "management cluster and 100 sorry let's",
    "start": "1291020",
    "end": "1294260"
  },
  {
    "text": "say we have 100 self-managing clusters",
    "start": "1294260",
    "end": "1296600"
  },
  {
    "text": "floating in the cloud environment",
    "start": "1296600",
    "end": "1299059"
  },
  {
    "text": "now as a cloud provider how do I upgrade",
    "start": "1299059",
    "end": "1302780"
  },
  {
    "text": "uh for example cluster API version on",
    "start": "1302780",
    "end": "1305120"
  },
  {
    "text": "all of these self-managing clusters we",
    "start": "1305120",
    "end": "1306860"
  },
  {
    "text": "cannot go he we cannot expect the cloud",
    "start": "1306860",
    "end": "1308720"
  },
  {
    "text": "provider to go to individual kubernetes",
    "start": "1308720",
    "end": "1310700"
  },
  {
    "text": "cluster to upgrade these",
    "start": "1310700",
    "end": "1313659"
  },
  {
    "text": "cluster API versions or for that matter",
    "start": "1313659",
    "end": "1316220"
  },
  {
    "text": "any application",
    "start": "1316220",
    "end": "1317840"
  },
  {
    "text": "and as a cloud provider or a tenant user",
    "start": "1317840",
    "end": "1320179"
  },
  {
    "text": "how do I install my own applications if",
    "start": "1320179",
    "end": "1322280"
  },
  {
    "text": "I want to without accessing the",
    "start": "1322280",
    "end": "1323780"
  },
  {
    "text": "kubernetes cluster and how do I apply",
    "start": "1323780",
    "end": "1326179"
  },
  {
    "text": "Network policies or set a container",
    "start": "1326179",
    "end": "1327980"
  },
  {
    "text": "registry on this group of clusters",
    "start": "1327980",
    "end": "1330860"
  },
  {
    "text": "so for all of these use cases for except",
    "start": "1330860",
    "end": "1333740"
  },
  {
    "text": "for one a",
    "start": "1333740",
    "end": "1335780"
  },
  {
    "text": "so the user wants to just Express the",
    "start": "1335780",
    "end": "1338179"
  },
  {
    "text": "user intent and somehow this user intent",
    "start": "1338179",
    "end": "1341900"
  },
  {
    "text": "is supposed to be propagated down to the",
    "start": "1341900",
    "end": "1343940"
  },
  {
    "text": "kubernetes cluster",
    "start": "1343940",
    "end": "1346340"
  },
  {
    "text": "so let's see how we can do that how to",
    "start": "1346340",
    "end": "1349039"
  },
  {
    "text": "propagate the user intent to the Target",
    "start": "1349039",
    "end": "1350720"
  },
  {
    "text": "cluster",
    "start": "1350720",
    "end": "1351919"
  },
  {
    "text": "so two conventional models push model or",
    "start": "1351919",
    "end": "1354620"
  },
  {
    "text": "pull model let's see how push model",
    "start": "1354620",
    "end": "1356539"
  },
  {
    "text": "works",
    "start": "1356539",
    "end": "1358400"
  },
  {
    "text": "so we have already written a simple",
    "start": "1358400",
    "end": "1360320"
  },
  {
    "text": "program and we call it kubernetes engine",
    "start": "1360320",
    "end": "1362299"
  },
  {
    "text": "now we can we might as well leverage",
    "start": "1362299",
    "end": "1364520"
  },
  {
    "text": "that",
    "start": "1364520",
    "end": "1365840"
  },
  {
    "text": "so we can have this kubernetes engine",
    "start": "1365840",
    "end": "1368539"
  },
  {
    "text": "push the user intent to all the",
    "start": "1368539",
    "end": "1370820"
  },
  {
    "text": "kubernetes Clusters",
    "start": "1370820",
    "end": "1372559"
  },
  {
    "text": "this might actually work well in uh most",
    "start": "1372559",
    "end": "1375799"
  },
  {
    "text": "of the cloud environments but in our",
    "start": "1375799",
    "end": "1378799"
  },
  {
    "text": "case this tenant organizations here are",
    "start": "1378799",
    "end": "1381679"
  },
  {
    "text": "have strict tenant boundaries networking",
    "start": "1381679",
    "end": "1384080"
  },
  {
    "text": "boundaries and it's not that easy for us",
    "start": "1384080",
    "end": "1385880"
  },
  {
    "text": "to punch firewall holes there",
    "start": "1385880",
    "end": "1388580"
  },
  {
    "text": "so in order to push basically this",
    "start": "1388580",
    "end": "1390740"
  },
  {
    "text": "kubernetes engine needs access to the",
    "start": "1390740",
    "end": "1392960"
  },
  {
    "text": "control plane and point of these",
    "start": "1392960",
    "end": "1394580"
  },
  {
    "text": "workload clusters which may not be",
    "start": "1394580",
    "end": "1397280"
  },
  {
    "text": "necessarily the case",
    "start": "1397280",
    "end": "1399020"
  },
  {
    "text": "so",
    "start": "1399020",
    "end": "1400580"
  },
  {
    "text": "this this doesn't work for us but this",
    "start": "1400580",
    "end": "1404120"
  },
  {
    "text": "may actually work in other Cloud",
    "start": "1404120",
    "end": "1405440"
  },
  {
    "text": "environments",
    "start": "1405440",
    "end": "1407120"
  },
  {
    "text": "so now let's see other options that we",
    "start": "1407120",
    "end": "1408919"
  },
  {
    "text": "have pull model",
    "start": "1408919",
    "end": "1410179"
  },
  {
    "text": "so the idea here is that",
    "start": "1410179",
    "end": "1413059"
  },
  {
    "text": "we write a simple operator that",
    "start": "1413059",
    "end": "1415700"
  },
  {
    "text": "subscribes to",
    "start": "1415700",
    "end": "1417260"
  },
  {
    "text": "bunch of various forms of user intent",
    "start": "1417260",
    "end": "1420440"
  },
  {
    "text": "and periodically pulls and applies them",
    "start": "1420440",
    "end": "1423320"
  },
  {
    "text": "onto itself",
    "start": "1423320",
    "end": "1426639"
  },
  {
    "text": "so this actually works out well for us",
    "start": "1426799",
    "end": "1430900"
  },
  {
    "text": "even in strictly isolated multi-tenant",
    "start": "1430900",
    "end": "1433940"
  },
  {
    "text": "Town environments and we went actually",
    "start": "1433940",
    "end": "1436460"
  },
  {
    "text": "with this option for to build our",
    "start": "1436460",
    "end": "1438799"
  },
  {
    "text": "kubernetes engine",
    "start": "1438799",
    "end": "1441760"
  },
  {
    "text": "and this operator can be installed at",
    "start": "1442880",
    "end": "1445039"
  },
  {
    "text": "the time of cluster creation process",
    "start": "1445039",
    "end": "1447500"
  },
  {
    "text": "so the kubernetes engine we can have",
    "start": "1447500",
    "end": "1451000"
  },
  {
    "text": "that install this custom operator while",
    "start": "1451000",
    "end": "1454940"
  },
  {
    "text": "creating the self-managing cluster",
    "start": "1454940",
    "end": "1459020"
  },
  {
    "text": "okay all that said now we are at a stage",
    "start": "1459020",
    "end": "1463100"
  },
  {
    "text": "where",
    "start": "1463100",
    "end": "1464360"
  },
  {
    "text": "we have built a kubernetes engine",
    "start": "1464360",
    "end": "1467360"
  },
  {
    "text": "that delivers these self-managing",
    "start": "1467360",
    "end": "1469280"
  },
  {
    "text": "clusters in a self-service manner",
    "start": "1469280",
    "end": "1472220"
  },
  {
    "text": "and we have also addressed the Fleet",
    "start": "1472220",
    "end": "1473840"
  },
  {
    "text": "Management problem",
    "start": "1473840",
    "end": "1475880"
  },
  {
    "text": "now let's quickly evaluate the pros and",
    "start": "1475880",
    "end": "1478159"
  },
  {
    "text": "cons of having this management to child",
    "start": "1478159",
    "end": "1481640"
  },
  {
    "text": "workload cluster hierarchy versus just",
    "start": "1481640",
    "end": "1484580"
  },
  {
    "text": "self-managing clusters",
    "start": "1484580",
    "end": "1486320"
  },
  {
    "text": "reduced infrastructure costs so first",
    "start": "1486320",
    "end": "1488780"
  },
  {
    "text": "thing is we know we need not worry about",
    "start": "1488780",
    "end": "1490400"
  },
  {
    "text": "the infrastructure resource management",
    "start": "1490400",
    "end": "1491900"
  },
  {
    "text": "for the management clusters at all less",
    "start": "1491900",
    "end": "1494840"
  },
  {
    "text": "cost to the tenant organizations",
    "start": "1494840",
    "end": "1497059"
  },
  {
    "text": "we don't have to hear from tenant",
    "start": "1497059",
    "end": "1498980"
  },
  {
    "text": "organizations saying hey",
    "start": "1498980",
    "end": "1501799"
  },
  {
    "text": "um why why is there a map why is there",
    "start": "1501799",
    "end": "1504620"
  },
  {
    "text": "some cluster which is non-functional for",
    "start": "1504620",
    "end": "1506720"
  },
  {
    "text": "me where I cannot host my modern",
    "start": "1506720",
    "end": "1509059"
  },
  {
    "text": "applications",
    "start": "1509059",
    "end": "1511159"
  },
  {
    "text": "so and why do I have to pay for those",
    "start": "1511159",
    "end": "1513620"
  },
  {
    "text": "management clusters so that question",
    "start": "1513620",
    "end": "1516260"
  },
  {
    "text": "will not even arise another thing is",
    "start": "1516260",
    "end": "1518659"
  },
  {
    "text": "there is no need to worry about h a",
    "start": "1518659",
    "end": "1520460"
  },
  {
    "text": "backup restore of these multiple",
    "start": "1520460",
    "end": "1522080"
  },
  {
    "text": "management clusters the moment we have",
    "start": "1522080",
    "end": "1524179"
  },
  {
    "text": "production grade workload clusters we",
    "start": "1524179",
    "end": "1525980"
  },
  {
    "text": "definitely need to worry about these uh",
    "start": "1525980",
    "end": "1528740"
  },
  {
    "text": "we need to guard those management",
    "start": "1528740",
    "end": "1530120"
  },
  {
    "text": "clusters so we need to worry about high",
    "start": "1530120",
    "end": "1532159"
  },
  {
    "text": "availability backup restore so this is",
    "start": "1532159",
    "end": "1534200"
  },
  {
    "text": "all extra infrastructure costs and",
    "start": "1534200",
    "end": "1537080"
  },
  {
    "text": "operational costs as well so",
    "start": "1537080",
    "end": "1540140"
  },
  {
    "text": "the moment we have these management",
    "start": "1540140",
    "end": "1541580"
  },
  {
    "text": "clusters",
    "start": "1541580",
    "end": "1543380"
  },
  {
    "text": "there is a need for cluster API Savvy",
    "start": "1543380",
    "end": "1546440"
  },
  {
    "text": "Persona to manage",
    "start": "1546440",
    "end": "1549020"
  },
  {
    "text": "and there is no need for us to worry",
    "start": "1549020",
    "end": "1551120"
  },
  {
    "text": "about user level multi-tenancy within a",
    "start": "1551120",
    "end": "1553279"
  },
  {
    "text": "given management cluster because we",
    "start": "1553279",
    "end": "1555559"
  },
  {
    "text": "don't that that problem doesn't exist",
    "start": "1555559",
    "end": "1557840"
  },
  {
    "text": "anymore and every user gets their own",
    "start": "1557840",
    "end": "1560299"
  },
  {
    "text": "workload cluster and we need not worry",
    "start": "1560299",
    "end": "1562700"
  },
  {
    "text": "about kubernetes versions queue between",
    "start": "1562700",
    "end": "1564500"
  },
  {
    "text": "management and workload clusters and and",
    "start": "1564500",
    "end": "1566960"
  },
  {
    "text": "more and another Point here is user has",
    "start": "1566960",
    "end": "1568880"
  },
  {
    "text": "a choice of not being part of the fleet",
    "start": "1568880",
    "end": "1571520"
  },
  {
    "text": "and they have more granularity to work",
    "start": "1571520",
    "end": "1574460"
  },
  {
    "text": "on their clusters",
    "start": "1574460",
    "end": "1577159"
  },
  {
    "text": "and multi-tenant clogging this is one of",
    "start": "1577159",
    "end": "1579200"
  },
  {
    "text": "the sweet hidden benefits that we got",
    "start": "1579200",
    "end": "1580940"
  },
  {
    "text": "from this approach of self-managing",
    "start": "1580940",
    "end": "1582860"
  },
  {
    "text": "clusters",
    "start": "1582860",
    "end": "1584000"
  },
  {
    "text": "so let's say we have the management",
    "start": "1584000",
    "end": "1586100"
  },
  {
    "text": "cluster and there are 100 workload",
    "start": "1586100",
    "end": "1588200"
  },
  {
    "text": "clusters under it",
    "start": "1588200",
    "end": "1589760"
  },
  {
    "text": "it's if there is a problem with someone",
    "start": "1589760",
    "end": "1591679"
  },
  {
    "text": "single workload cluster",
    "start": "1591679",
    "end": "1593539"
  },
  {
    "text": "the owner of that workload cluster has",
    "start": "1593539",
    "end": "1595700"
  },
  {
    "text": "to go to the management cluster uh owner",
    "start": "1595700",
    "end": "1598340"
  },
  {
    "text": "and have to say that okay so something",
    "start": "1598340",
    "end": "1600620"
  },
  {
    "text": "is wrong with my cluster please analyze",
    "start": "1600620",
    "end": "1602419"
  },
  {
    "text": "the logs and fix it",
    "start": "1602419",
    "end": "1604520"
  },
  {
    "text": "so now",
    "start": "1604520",
    "end": "1606200"
  },
  {
    "text": "in addition to the res the hierarchical",
    "start": "1606200",
    "end": "1608779"
  },
  {
    "text": "structure between management and",
    "start": "1608779",
    "end": "1610640"
  },
  {
    "text": "workload cluster now we also have the",
    "start": "1610640",
    "end": "1612320"
  },
  {
    "text": "hierarchical structure between the",
    "start": "1612320",
    "end": "1613820"
  },
  {
    "text": "personas and that would all add up to",
    "start": "1613820",
    "end": "1617020"
  },
  {
    "text": "more operational costs",
    "start": "1617020",
    "end": "1619820"
  },
  {
    "text": "so",
    "start": "1619820",
    "end": "1621080"
  },
  {
    "text": "so now with this where user can access",
    "start": "1621080",
    "end": "1624320"
  },
  {
    "text": "their own logs the debuggability becomes",
    "start": "1624320",
    "end": "1627140"
  },
  {
    "text": "much easier",
    "start": "1627140",
    "end": "1628760"
  },
  {
    "text": "and this actually tremendously helped us",
    "start": "1628760",
    "end": "1632179"
  },
  {
    "text": "to troubleshoot and debug our",
    "start": "1632179",
    "end": "1634400"
  },
  {
    "text": "environments and we have already",
    "start": "1634400",
    "end": "1636440"
  },
  {
    "text": "addressed the Fleet Management",
    "start": "1636440",
    "end": "1638559"
  },
  {
    "text": "problem where by actually having the",
    "start": "1638559",
    "end": "1642020"
  },
  {
    "text": "custom operator to subscribe to various",
    "start": "1642020",
    "end": "1645620"
  },
  {
    "text": "forms of user intent pull them and apply",
    "start": "1645620",
    "end": "1647960"
  },
  {
    "text": "it and this user intent can be captured",
    "start": "1647960",
    "end": "1650500"
  },
  {
    "text": "in the in it could be either as an API",
    "start": "1650500",
    "end": "1653900"
  },
  {
    "text": "resource or S3 endpoint or a simple",
    "start": "1653900",
    "end": "1657200"
  },
  {
    "text": "configuration file that is sitting in",
    "start": "1657200",
    "end": "1659240"
  },
  {
    "text": "NFS share",
    "start": "1659240",
    "end": "1662080"
  },
  {
    "text": "um it's it I mean there are a lot of",
    "start": "1662120",
    "end": "1665779"
  },
  {
    "text": "options that we can choose and this",
    "start": "1665779",
    "end": "1668600"
  },
  {
    "text": "operator can be customized to suit our",
    "start": "1668600",
    "end": "1670820"
  },
  {
    "text": "Cloud environments",
    "start": "1670820",
    "end": "1673039"
  },
  {
    "text": "personas no need for multiple personas",
    "start": "1673039",
    "end": "1675740"
  },
  {
    "text": "to keep themselves up to date on the",
    "start": "1675740",
    "end": "1677840"
  },
  {
    "text": "internals of cluster API as the Cappy",
    "start": "1677840",
    "end": "1680480"
  },
  {
    "text": "knowledge is built into the kubernetes",
    "start": "1680480",
    "end": "1682640"
  },
  {
    "text": "engine",
    "start": "1682640",
    "end": "1684500"
  },
  {
    "text": "and this is important for us because we",
    "start": "1684500",
    "end": "1687380"
  },
  {
    "text": "have many uh personas like that like",
    "start": "1687380",
    "end": "1690080"
  },
  {
    "text": "cloud provider and tenant org",
    "start": "1690080",
    "end": "1691820"
  },
  {
    "text": "administrator the moment we introduce",
    "start": "1691820",
    "end": "1694100"
  },
  {
    "text": "this learning curve that means some",
    "start": "1694100",
    "end": "1696380"
  },
  {
    "text": "reluctance and resistance for the",
    "start": "1696380",
    "end": "1699140"
  },
  {
    "text": "product adoption and time to Market",
    "start": "1699140",
    "end": "1704900"
  },
  {
    "text": "Okay so",
    "start": "1704900",
    "end": "1707240"
  },
  {
    "text": "so this is what we have accomplished",
    "start": "1707240",
    "end": "1708919"
  },
  {
    "text": "this is how and we satisfied all of our",
    "start": "1708919",
    "end": "1710900"
  },
  {
    "text": "requirements there is no management",
    "start": "1710900",
    "end": "1712820"
  },
  {
    "text": "layer and all the baggage it brings",
    "start": "1712820",
    "end": "1714740"
  },
  {
    "text": "every cluster here is a standalone",
    "start": "1714740",
    "end": "1716960"
  },
  {
    "text": "independent and self-managing cluster",
    "start": "1716960",
    "end": "1719840"
  },
  {
    "text": "there are no Cappy admin Savvy personas",
    "start": "1719840",
    "end": "1722299"
  },
  {
    "text": "scale and security issues are solved",
    "start": "1722299",
    "end": "1724820"
  },
  {
    "text": "Fleet Management is figured out so we",
    "start": "1724820",
    "end": "1727580"
  },
  {
    "text": "built a kubernetes engine that delivers",
    "start": "1727580",
    "end": "1730220"
  },
  {
    "text": "self-managing clusters",
    "start": "1730220",
    "end": "1732260"
  },
  {
    "text": "in a self-service manner on multi-tenant",
    "start": "1732260",
    "end": "1735020"
  },
  {
    "text": "cloud environments with cluster API at",
    "start": "1735020",
    "end": "1737659"
  },
  {
    "text": "its core",
    "start": "1737659",
    "end": "1738679"
  },
  {
    "text": "and the cost we had to pay to do this is",
    "start": "1738679",
    "end": "1741919"
  },
  {
    "text": "to write a program that automates the",
    "start": "1741919",
    "end": "1744799"
  },
  {
    "text": "manufacturing process of self-managing",
    "start": "1744799",
    "end": "1746720"
  },
  {
    "text": "clusters and an another operator to act",
    "start": "1746720",
    "end": "1749840"
  },
  {
    "text": "upon Fleet Management operations and if",
    "start": "1749840",
    "end": "1753140"
  },
  {
    "text": "we have to compare this cost that we",
    "start": "1753140",
    "end": "1756020"
  },
  {
    "text": "would incur with the long-term",
    "start": "1756020",
    "end": "1758059"
  },
  {
    "text": "maintenance of numerous management",
    "start": "1758059",
    "end": "1759980"
  },
  {
    "text": "clusters in this gigantic Cloud",
    "start": "1759980",
    "end": "1762760"
  },
  {
    "text": "environments and all the baggage it",
    "start": "1762760",
    "end": "1765440"
  },
  {
    "text": "comes with the cost of developing this",
    "start": "1765440",
    "end": "1767840"
  },
  {
    "text": "design for once is almost nothing",
    "start": "1767840",
    "end": "1772100"
  },
  {
    "text": "and we have productized this and our",
    "start": "1772100",
    "end": "1774500"
  },
  {
    "text": "customers are using this solution to",
    "start": "1774500",
    "end": "1777020"
  },
  {
    "text": "spin up production grade clusters",
    "start": "1777020",
    "end": "1780220"
  },
  {
    "text": "yeah that's the power of self-managing",
    "start": "1780220",
    "end": "1783440"
  },
  {
    "text": "clusters",
    "start": "1783440",
    "end": "1784880"
  },
  {
    "text": "thank you",
    "start": "1784880",
    "end": "1787539"
  },
  {
    "text": "[Applause]",
    "start": "1788290",
    "end": "1794029"
  },
  {
    "text": "please feel free to ask",
    "start": "1795980",
    "end": "1799480"
  }
]