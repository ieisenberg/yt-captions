[
  {
    "start": "0",
    "end": "12000"
  },
  {
    "text": "good morning everyone buenos dias i hope",
    "start": "80",
    "end": "2480"
  },
  {
    "text": "everyone has a great time",
    "start": "2480",
    "end": "4799"
  },
  {
    "text": "um today i do a first lightning talk",
    "start": "4799",
    "end": "7200"
  },
  {
    "text": "about connecting kubernetes clusters on",
    "start": "7200",
    "end": "9519"
  },
  {
    "text": "the edge using psyllium cluster mesh",
    "start": "9519",
    "end": "13280"
  },
  {
    "text": "and the agenda for today starting with",
    "start": "13280",
    "end": "15599"
  },
  {
    "text": "an introduction about psyllium and ebpf",
    "start": "15599",
    "end": "18800"
  },
  {
    "text": "to understand how it works and how",
    "start": "18800",
    "end": "21039"
  },
  {
    "text": "psyllium uses it to",
    "start": "21039",
    "end": "23680"
  },
  {
    "text": "publish services across clusters or to",
    "start": "23680",
    "end": "26400"
  },
  {
    "text": "have identity based security across",
    "start": "26400",
    "end": "29039"
  },
  {
    "text": "clusters using cluster mesh",
    "start": "29039",
    "end": "31359"
  },
  {
    "text": "and then i want to do an overview and",
    "start": "31359",
    "end": "33280"
  },
  {
    "text": "deep dive on cluster mesh use cases",
    "start": "33280",
    "end": "36239"
  },
  {
    "text": "and i'll talk a little bit about",
    "start": "36239",
    "end": "38160"
  },
  {
    "text": "how for example customers can be used on",
    "start": "38160",
    "end": "40719"
  },
  {
    "text": "the edge to support edge workloads in a",
    "start": "40719",
    "end": "43840"
  },
  {
    "text": "design or topology",
    "start": "43840",
    "end": "46000"
  },
  {
    "text": "which extends clusters across multiple",
    "start": "46000",
    "end": "49520"
  },
  {
    "text": "kubernetes clusters",
    "start": "49520",
    "end": "51840"
  },
  {
    "text": "my name is raymond dion i'm a solution",
    "start": "51840",
    "end": "54160"
  },
  {
    "text": "architect working at isovalent the",
    "start": "54160",
    "end": "56079"
  },
  {
    "text": "company behind psyllium",
    "start": "56079",
    "end": "59680"
  },
  {
    "start": "59000",
    "end": "89000"
  },
  {
    "text": "so let's start with ebpf what's ebpf it",
    "start": "59680",
    "end": "62960"
  },
  {
    "text": "stands for extended berkeley packet",
    "start": "62960",
    "end": "64640"
  },
  {
    "text": "filter that doesn't tell you a lot",
    "start": "64640",
    "end": "67360"
  },
  {
    "text": "what it basically is it provides",
    "start": "67360",
    "end": "68960"
  },
  {
    "text": "technology software for",
    "start": "68960",
    "end": "70960"
  },
  {
    "text": "having a base sandbox virtual machine",
    "start": "70960",
    "end": "73439"
  },
  {
    "text": "to run custom code in your kernel based",
    "start": "73439",
    "end": "76479"
  },
  {
    "text": "on events",
    "start": "76479",
    "end": "77680"
  },
  {
    "text": "without actually updating or changing",
    "start": "77680",
    "end": "79840"
  },
  {
    "text": "the kernel what it means is that if you",
    "start": "79840",
    "end": "81360"
  },
  {
    "text": "have a recent enough kernel you can",
    "start": "81360",
    "end": "83360"
  },
  {
    "text": "leverage evpf to do a number of things",
    "start": "83360",
    "end": "85680"
  },
  {
    "text": "based on events",
    "start": "85680",
    "end": "88479"
  },
  {
    "start": "89000",
    "end": "112000"
  },
  {
    "text": "so like i said ebpf runs custom code in",
    "start": "89840",
    "end": "92880"
  },
  {
    "text": "the kernel based on events so it has",
    "start": "92880",
    "end": "95119"
  },
  {
    "text": "user space in a kernel space",
    "start": "95119",
    "end": "98320"
  },
  {
    "text": "so when an event for example a packet",
    "start": "98320",
    "end": "100479"
  },
  {
    "text": "arises it arrives at the network",
    "start": "100479",
    "end": "102079"
  },
  {
    "text": "interface",
    "start": "102079",
    "end": "103119"
  },
  {
    "text": "an ebp pro ebpf program can be triggered",
    "start": "103119",
    "end": "106399"
  },
  {
    "text": "on that event and do custom code or",
    "start": "106399",
    "end": "108799"
  },
  {
    "text": "logic with it",
    "start": "108799",
    "end": "112000"
  },
  {
    "start": "112000",
    "end": "137000"
  },
  {
    "text": "so it runs ebpf programs on events and",
    "start": "113360",
    "end": "115360"
  },
  {
    "text": "today we're talking about networking so",
    "start": "115360",
    "end": "116960"
  },
  {
    "text": "what that means is that every time a",
    "start": "116960",
    "end": "118560"
  },
  {
    "text": "process connects or tcp retransmit",
    "start": "118560",
    "end": "121600"
  },
  {
    "text": "happens or a packet leaves or arrives at",
    "start": "121600",
    "end": "124159"
  },
  {
    "text": "the network interface",
    "start": "124159",
    "end": "126320"
  },
  {
    "text": "psyllium with ebpf can do things with it",
    "start": "126320",
    "end": "128879"
  },
  {
    "text": "and inspect that traffic to provide rich",
    "start": "128879",
    "end": "131440"
  },
  {
    "text": "observability or to provide services",
    "start": "131440",
    "end": "133680"
  },
  {
    "text": "across clusters",
    "start": "133680",
    "end": "136560"
  },
  {
    "text": "now psyllium is obviously software for",
    "start": "137680",
    "end": "140319"
  },
  {
    "text": "providing connectivity across kubernetes",
    "start": "140319",
    "end": "142640"
  },
  {
    "text": "clusters and it provides security",
    "start": "142640",
    "end": "145440"
  },
  {
    "text": "connectivity services",
    "start": "145440",
    "end": "147840"
  },
  {
    "text": "and observability for your container",
    "start": "147840",
    "end": "149520"
  },
  {
    "text": "workloads",
    "start": "149520",
    "end": "150720"
  },
  {
    "text": "and it uses ebpf technology under the",
    "start": "150720",
    "end": "152959"
  },
  {
    "text": "hood and it abstracts",
    "start": "152959",
    "end": "155519"
  },
  {
    "text": "ppf for you as an engineer interacting",
    "start": "155519",
    "end": "158640"
  },
  {
    "text": "with the kubernetes cluster so you don't",
    "start": "158640",
    "end": "160640"
  },
  {
    "text": "have to know ebpf or program ebpf it",
    "start": "160640",
    "end": "163680"
  },
  {
    "text": "just leverages ebpf under the hood to",
    "start": "163680",
    "end": "166319"
  },
  {
    "text": "provide network connectivity or rich",
    "start": "166319",
    "end": "168000"
  },
  {
    "text": "observability",
    "start": "168000",
    "end": "171000"
  },
  {
    "start": "171000",
    "end": "215000"
  },
  {
    "text": "so a number of things we are currently",
    "start": "172400",
    "end": "174239"
  },
  {
    "text": "doing with cerium",
    "start": "174239",
    "end": "175680"
  },
  {
    "text": "and especially cluster mesh so we",
    "start": "175680",
    "end": "177440"
  },
  {
    "text": "provide network policies identity aware",
    "start": "177440",
    "end": "179680"
  },
  {
    "text": "network policies across clusters so we",
    "start": "179680",
    "end": "182720"
  },
  {
    "text": "can see identity from other clusters and",
    "start": "182720",
    "end": "184720"
  },
  {
    "text": "secure that kind of workloads based on",
    "start": "184720",
    "end": "186319"
  },
  {
    "text": "their metadata so their labels",
    "start": "186319",
    "end": "189519"
  },
  {
    "text": "providing services and load balancing",
    "start": "189519",
    "end": "191519"
  },
  {
    "text": "and in terms of cluster mesh that means",
    "start": "191519",
    "end": "193280"
  },
  {
    "text": "that we can provide services across",
    "start": "193280",
    "end": "195360"
  },
  {
    "text": "clusters",
    "start": "195360",
    "end": "196800"
  },
  {
    "text": "bandwidth management flow policy logging",
    "start": "196800",
    "end": "199519"
  },
  {
    "text": "and operation operational and security",
    "start": "199519",
    "end": "201599"
  },
  {
    "text": "metrics so also we use hubble as a",
    "start": "201599",
    "end": "204799"
  },
  {
    "text": "component which talks to the zillion",
    "start": "204799",
    "end": "206560"
  },
  {
    "text": "agent to inspect and show traffic",
    "start": "206560",
    "end": "209840"
  },
  {
    "text": "leaving and arriving your workloads",
    "start": "209840",
    "end": "213840"
  },
  {
    "start": "215000",
    "end": "292000"
  },
  {
    "text": "so in terms of cluster mesh you can use",
    "start": "215840",
    "end": "218080"
  },
  {
    "text": "psyllium for availability security and",
    "start": "218080",
    "end": "220959"
  },
  {
    "text": "manageability use cases",
    "start": "220959",
    "end": "223200"
  },
  {
    "text": "first of all you can run services across",
    "start": "223200",
    "end": "225840"
  },
  {
    "text": "your kubernetes clusters",
    "start": "225840",
    "end": "227840"
  },
  {
    "text": "so you can connect on-prem or in the",
    "start": "227840",
    "end": "230720"
  },
  {
    "text": "cloud or a hybrid kind of combination of",
    "start": "230720",
    "end": "233360"
  },
  {
    "text": "clusters using psilium cluster mesh and",
    "start": "233360",
    "end": "236239"
  },
  {
    "text": "you can have global services defined",
    "start": "236239",
    "end": "238640"
  },
  {
    "text": "which are may basically make a surface",
    "start": "238640",
    "end": "240720"
  },
  {
    "text": "and their endpoints available across",
    "start": "240720",
    "end": "242159"
  },
  {
    "text": "clusters",
    "start": "242159",
    "end": "243519"
  },
  {
    "text": "but you can also do centralized services",
    "start": "243519",
    "end": "245360"
  },
  {
    "text": "kind of topologies which i will show a",
    "start": "245360",
    "end": "246879"
  },
  {
    "text": "bit later",
    "start": "246879",
    "end": "248400"
  },
  {
    "text": "and while you're doing so you can also",
    "start": "248400",
    "end": "249920"
  },
  {
    "text": "enforce security using serium network",
    "start": "249920",
    "end": "251840"
  },
  {
    "text": "policies so like i said each",
    "start": "251840",
    "end": "254560"
  },
  {
    "text": "set of unique labels from a port",
    "start": "254560",
    "end": "256720"
  },
  {
    "text": "creates an identity a unique identity",
    "start": "256720",
    "end": "259199"
  },
  {
    "text": "and using psyllium you can create",
    "start": "259199",
    "end": "261199"
  },
  {
    "text": "cellular network policies or cluster",
    "start": "261199",
    "end": "262800"
  },
  {
    "text": "network policies",
    "start": "262800",
    "end": "264240"
  },
  {
    "text": "to enforce that security across your",
    "start": "264240",
    "end": "266000"
  },
  {
    "text": "clusters",
    "start": "266000",
    "end": "268240"
  },
  {
    "text": "and then finally manageability using",
    "start": "268240",
    "end": "270000"
  },
  {
    "text": "hubble we can provide visibility for the",
    "start": "270000",
    "end": "272400"
  },
  {
    "text": "workloads across your clusters so you",
    "start": "272400",
    "end": "274720"
  },
  {
    "text": "can inspect traffic across your cluster",
    "start": "274720",
    "end": "277280"
  },
  {
    "text": "so",
    "start": "277280",
    "end": "278160"
  },
  {
    "text": "for example when a",
    "start": "278160",
    "end": "280320"
  },
  {
    "text": "given port in a given cluster reach",
    "start": "280320",
    "end": "282400"
  },
  {
    "text": "another endpoint in another cluster you",
    "start": "282400",
    "end": "284240"
  },
  {
    "text": "can inspect the traffic and how the ui",
    "start": "284240",
    "end": "286320"
  },
  {
    "text": "understands where it comes from and",
    "start": "286320",
    "end": "288160"
  },
  {
    "text": "which identity it has",
    "start": "288160",
    "end": "291360"
  },
  {
    "start": "292000",
    "end": "353000"
  },
  {
    "text": "so let's talk about let's dive a bit",
    "start": "292720",
    "end": "295199"
  },
  {
    "text": "deeper on customers use cases so first",
    "start": "295199",
    "end": "298000"
  },
  {
    "text": "use case is obviously the high",
    "start": "298000",
    "end": "299360"
  },
  {
    "text": "availability use case",
    "start": "299360",
    "end": "301600"
  },
  {
    "text": "where you have one or when you have two",
    "start": "301600",
    "end": "303440"
  },
  {
    "text": "or more clusters connected with cilium",
    "start": "303440",
    "end": "305360"
  },
  {
    "text": "cluster mesh",
    "start": "305360",
    "end": "306960"
  },
  {
    "text": "how it works is that in each cluster you",
    "start": "306960",
    "end": "308800"
  },
  {
    "text": "will create a namespace",
    "start": "308800",
    "end": "310639"
  },
  {
    "text": "and you create a surface",
    "start": "310639",
    "end": "312800"
  },
  {
    "text": "and then you annotate a service with a",
    "start": "312800",
    "end": "314800"
  },
  {
    "text": "global and cmio global surface to enable",
    "start": "314800",
    "end": "318240"
  },
  {
    "text": "it to be available across clusters",
    "start": "318240",
    "end": "320479"
  },
  {
    "text": "and what happens using ebpf is that",
    "start": "320479",
    "end": "322240"
  },
  {
    "text": "obviously psyllium understands endpoints",
    "start": "322240",
    "end": "324639"
  },
  {
    "text": "in each cluster",
    "start": "324639",
    "end": "326160"
  },
  {
    "text": "and it will advertise those endpoints",
    "start": "326160",
    "end": "328000"
  },
  {
    "text": "across clusters so in each cluster you",
    "start": "328000",
    "end": "330639"
  },
  {
    "text": "will see endpoints from both clusters",
    "start": "330639",
    "end": "333120"
  },
  {
    "text": "being available",
    "start": "333120",
    "end": "335039"
  },
  {
    "text": "that means that for example",
    "start": "335039",
    "end": "337199"
  },
  {
    "text": "if you have",
    "start": "337199",
    "end": "338400"
  },
  {
    "text": "pods in some kind of cluster which has a",
    "start": "338400",
    "end": "340280"
  },
  {
    "text": "mis-configuration or being redeployed or",
    "start": "340280",
    "end": "343199"
  },
  {
    "text": "there's something wrong with that",
    "start": "343199",
    "end": "344479"
  },
  {
    "text": "actually the service can fail over",
    "start": "344479",
    "end": "346160"
  },
  {
    "text": "connectivity to the other cluster",
    "start": "346160",
    "end": "349759"
  },
  {
    "text": "um",
    "start": "350000",
    "end": "353000"
  },
  {
    "start": "353000",
    "end": "439000"
  },
  {
    "text": "another use case is shared services",
    "start": "354320",
    "end": "357440"
  },
  {
    "text": "which means that you're basically want",
    "start": "357440",
    "end": "359759"
  },
  {
    "text": "to abstract",
    "start": "359759",
    "end": "361520"
  },
  {
    "text": "centrally configured servers in a given",
    "start": "361520",
    "end": "363199"
  },
  {
    "text": "cluster and have",
    "start": "363199",
    "end": "364720"
  },
  {
    "text": "you know smaller clusters across uh for",
    "start": "364720",
    "end": "367919"
  },
  {
    "text": "example on the edge",
    "start": "367919",
    "end": "369440"
  },
  {
    "text": "so what this means is that",
    "start": "369440",
    "end": "371440"
  },
  {
    "text": "you most likely have things like dns or",
    "start": "371440",
    "end": "373840"
  },
  {
    "text": "logging or some kind of storage where",
    "start": "373840",
    "end": "376080"
  },
  {
    "text": "you need to find configure and store the",
    "start": "376080",
    "end": "378319"
  },
  {
    "text": "state of your workloads in a shared",
    "start": "378319",
    "end": "380479"
  },
  {
    "text": "services cluster",
    "start": "380479",
    "end": "381919"
  },
  {
    "text": "and you don't necessarily want those to",
    "start": "381919",
    "end": "383919"
  },
  {
    "text": "manage them in",
    "start": "383919",
    "end": "385280"
  },
  {
    "text": "your edge clusters in other clusters",
    "start": "385280",
    "end": "387120"
  },
  {
    "text": "because you want to be flexible in the",
    "start": "387120",
    "end": "389039"
  },
  {
    "text": "life cycle of those clusters or you want",
    "start": "389039",
    "end": "391440"
  },
  {
    "text": "to keep those clusters as small and as",
    "start": "391440",
    "end": "393199"
  },
  {
    "text": "agile as possible",
    "start": "393199",
    "end": "395600"
  },
  {
    "text": "so what you can do then is just you just",
    "start": "395600",
    "end": "398240"
  },
  {
    "text": "expose that surface in the front-end",
    "start": "398240",
    "end": "400639"
  },
  {
    "text": "clusters",
    "start": "400639",
    "end": "402000"
  },
  {
    "text": "and then have a shared service in a",
    "start": "402000",
    "end": "404400"
  },
  {
    "text": "single shared service cluster so each",
    "start": "404400",
    "end": "407039"
  },
  {
    "text": "front end in this example will",
    "start": "407039",
    "end": "409599"
  },
  {
    "text": "connect for example to a vault service",
    "start": "409599",
    "end": "411280"
  },
  {
    "text": "in their own cluster and get redirected",
    "start": "411280",
    "end": "412960"
  },
  {
    "text": "and connected to the shared services",
    "start": "412960",
    "end": "414479"
  },
  {
    "text": "cluster",
    "start": "414479",
    "end": "416000"
  },
  {
    "text": "and",
    "start": "416000",
    "end": "417199"
  },
  {
    "text": "this also works very well for",
    "start": "417199",
    "end": "419919"
  },
  {
    "text": "providing segmentation for example",
    "start": "419919",
    "end": "422240"
  },
  {
    "text": "between tenants",
    "start": "422240",
    "end": "423680"
  },
  {
    "text": "or",
    "start": "423680",
    "end": "425120"
  },
  {
    "text": "separation between security levels so",
    "start": "425120",
    "end": "427039"
  },
  {
    "text": "for example if you're high secure you",
    "start": "427039",
    "end": "429680"
  },
  {
    "text": "don't want to expose necessarily in that",
    "start": "429680",
    "end": "432160"
  },
  {
    "text": "cluster",
    "start": "432160",
    "end": "433440"
  },
  {
    "text": "that given a services workload",
    "start": "433440",
    "end": "437840"
  },
  {
    "start": "439000",
    "end": "502000"
  },
  {
    "text": "and then finally a very useful use case",
    "start": "440160",
    "end": "442400"
  },
  {
    "text": "i believe for x classes is splitting",
    "start": "442400",
    "end": "444160"
  },
  {
    "text": "services and this is about creating",
    "start": "444160",
    "end": "446639"
  },
  {
    "text": "stateless versus stateful clusters so",
    "start": "446639",
    "end": "450319"
  },
  {
    "text": "obviously on edge and",
    "start": "450319",
    "end": "451680"
  },
  {
    "text": "some kubernetes other topologies as well",
    "start": "451680",
    "end": "454080"
  },
  {
    "text": "is",
    "start": "454080",
    "end": "455680"
  },
  {
    "text": "stateless clusters creates the",
    "start": "455680",
    "end": "458560"
  },
  {
    "text": "option to have more flexible workloads",
    "start": "458560",
    "end": "461840"
  },
  {
    "text": "on the front end",
    "start": "461840",
    "end": "463440"
  },
  {
    "text": "also better performing because you're",
    "start": "463440",
    "end": "465039"
  },
  {
    "text": "not storing state on that front end you",
    "start": "465039",
    "end": "467199"
  },
  {
    "text": "want low latency quick response but if",
    "start": "467199",
    "end": "470639"
  },
  {
    "text": "you need to store or consult data stores",
    "start": "470639",
    "end": "473360"
  },
  {
    "text": "in another cluster you can create a",
    "start": "473360",
    "end": "475039"
  },
  {
    "text": "stateful cluster expose that service",
    "start": "475039",
    "end": "477759"
  },
  {
    "text": "across your front-end clusters and make",
    "start": "477759",
    "end": "480240"
  },
  {
    "text": "that connectivity",
    "start": "480240",
    "end": "481919"
  },
  {
    "text": "available that also makes it easier to",
    "start": "481919",
    "end": "484800"
  },
  {
    "text": "life cycle your front-end edge clusters",
    "start": "484800",
    "end": "487919"
  },
  {
    "text": "and just maintain a single stateful",
    "start": "487919",
    "end": "490479"
  },
  {
    "text": "cluster",
    "start": "490479",
    "end": "491599"
  },
  {
    "text": "which obviously needs more",
    "start": "491599",
    "end": "493840"
  },
  {
    "text": "configuration and care in terms of",
    "start": "493840",
    "end": "496000"
  },
  {
    "text": "making that available",
    "start": "496000",
    "end": "499039"
  },
  {
    "start": "502000",
    "end": "583000"
  },
  {
    "text": "so",
    "start": "503360",
    "end": "504560"
  },
  {
    "text": "if you want to know more about psyllium",
    "start": "504560",
    "end": "506479"
  },
  {
    "text": "cluster mesh",
    "start": "506479",
    "end": "508319"
  },
  {
    "text": "i recommend to go to cilium.io and learn",
    "start": "508319",
    "end": "511520"
  },
  {
    "text": "and there's a lot of documentation on",
    "start": "511520",
    "end": "513120"
  },
  {
    "text": "the psyllium io website to get started",
    "start": "513120",
    "end": "514959"
  },
  {
    "text": "with cluster mesh it has a lot of",
    "start": "514959",
    "end": "517039"
  },
  {
    "text": "examples to",
    "start": "517039",
    "end": "518479"
  },
  {
    "text": "create a a a surface a global surface",
    "start": "518479",
    "end": "521760"
  },
  {
    "text": "and to show how it will fell over across",
    "start": "521760",
    "end": "524320"
  },
  {
    "text": "a cluster",
    "start": "524320",
    "end": "525920"
  },
  {
    "text": "what's also coming is that we're close",
    "start": "525920",
    "end": "527839"
  },
  {
    "text": "to releasing a feature that you can have",
    "start": "527839",
    "end": "529920"
  },
  {
    "text": "an affinity so for example you want only",
    "start": "529920",
    "end": "532640"
  },
  {
    "text": "the local endpoints to respond when it's",
    "start": "532640",
    "end": "535279"
  },
  {
    "text": "available and when the local endpoints",
    "start": "535279",
    "end": "537519"
  },
  {
    "text": "are not available it will fill over to",
    "start": "537519",
    "end": "540000"
  },
  {
    "text": "another cluster",
    "start": "540000",
    "end": "542080"
  },
  {
    "text": "or the option to only expose remote",
    "start": "542080",
    "end": "546160"
  },
  {
    "text": "endpoints which make sure that once when",
    "start": "546160",
    "end": "548560"
  },
  {
    "text": "a front end is hitting a surface",
    "start": "548560",
    "end": "551200"
  },
  {
    "text": "it will get redirected to another",
    "start": "551200",
    "end": "552720"
  },
  {
    "text": "cluster and have the workloads running",
    "start": "552720",
    "end": "554720"
  },
  {
    "text": "there this also gives a lot of",
    "start": "554720",
    "end": "556720"
  },
  {
    "text": "flexibility if you do some kind of",
    "start": "556720",
    "end": "558240"
  },
  {
    "text": "maintenance in a specific cluster to",
    "start": "558240",
    "end": "560320"
  },
  {
    "text": "have that surface redirecting traffic to",
    "start": "560320",
    "end": "562320"
  },
  {
    "text": "another cluster",
    "start": "562320",
    "end": "564320"
  },
  {
    "text": "there are also weekly interactive",
    "start": "564320",
    "end": "565839"
  },
  {
    "text": "psyllium introduction and live q and a's",
    "start": "565839",
    "end": "568080"
  },
  {
    "text": "with",
    "start": "568080",
    "end": "568880"
  },
  {
    "text": "thomas graf our celium co-creator",
    "start": "568880",
    "end": "571279"
  },
  {
    "text": "and we have also installed this if you",
    "start": "571279",
    "end": "573120"
  },
  {
    "text": "get started with cilium where some of us",
    "start": "573120",
    "end": "576240"
  },
  {
    "text": "is walking you through installing",
    "start": "576240",
    "end": "578320"
  },
  {
    "text": "psilium on a kind they set up for",
    "start": "578320",
    "end": "580000"
  },
  {
    "text": "example",
    "start": "580000",
    "end": "582399"
  },
  {
    "start": "583000",
    "end": "620000"
  },
  {
    "text": "that's what i had for today we also have",
    "start": "583360",
    "end": "585920"
  },
  {
    "text": "slack github websites and obviously",
    "start": "585920",
    "end": "587920"
  },
  {
    "text": "twitter to follow and to know more about",
    "start": "587920",
    "end": "589920"
  },
  {
    "text": "psyllium",
    "start": "589920",
    "end": "590880"
  },
  {
    "text": "if you have specific questions about",
    "start": "590880",
    "end": "592640"
  },
  {
    "text": "psyllium cluster mesh i will be outside",
    "start": "592640",
    "end": "595040"
  },
  {
    "text": "and please ask me",
    "start": "595040",
    "end": "597200"
  },
  {
    "text": "i'm happy to help we also have a",
    "start": "597200",
    "end": "598720"
  },
  {
    "text": "psyllium boof in the in the expo",
    "start": "598720",
    "end": "600959"
  },
  {
    "text": "starting tomorrow so myself and other",
    "start": "600959",
    "end": "603440"
  },
  {
    "text": "contributors of psyllium will be there",
    "start": "603440",
    "end": "605200"
  },
  {
    "text": "to",
    "start": "605200",
    "end": "606160"
  },
  {
    "text": "answer any questions",
    "start": "606160",
    "end": "607920"
  },
  {
    "text": "um thank you for",
    "start": "607920",
    "end": "609680"
  },
  {
    "text": "spending time with me and there will be",
    "start": "609680",
    "end": "612160"
  },
  {
    "text": "another tech talk",
    "start": "612160",
    "end": "613760"
  },
  {
    "text": "right after this so thank you very much",
    "start": "613760",
    "end": "616710"
  },
  {
    "text": "[Applause]",
    "start": "616710",
    "end": "621450"
  }
]