[
  {
    "start": "0",
    "end": "44000"
  },
  {
    "text": "hello oh it's on good morning everyone I'm Rita and I work on an open source",
    "start": "410",
    "end": "7859"
  },
  {
    "text": "service mesh called linker T and I'm here to introduce our next speaker Lucas",
    "start": "7859",
    "end": "13139"
  },
  {
    "text": "servin marine is an engineer at Red Hat and he works on one of my favorite",
    "start": "13139",
    "end": "18420"
  },
  {
    "text": "open-source projects Prometheus and there's many cool facts about him including that he has a master's in",
    "start": "18420",
    "end": "25170"
  },
  {
    "text": "robotics an interest in deep learning and a twin brother and he is here to",
    "start": "25170",
    "end": "30720"
  },
  {
    "text": "talk to us about how we can build high availability multi-cloud clusters using",
    "start": "30720",
    "end": "36390"
  },
  {
    "text": "wire guard let's welcome Lucas",
    "start": "36390",
    "end": "40309"
  },
  {
    "start": "44000",
    "end": "90000"
  },
  {
    "text": "thank you very much Risa all right so my twin brother doesn't come until tomorrow",
    "start": "44440",
    "end": "50180"
  },
  {
    "text": "to Barcelona so I promise you I'm Lucas",
    "start": "50180",
    "end": "55480"
  },
  {
    "text": "yeah so today we're gonna be talking about building multi-cloud clusters with wire guard these are clusters that can",
    "start": "56320",
    "end": "62239"
  },
  {
    "text": "span different cloud providers like I can have some nodes in DCP so I'm an AWS or it's also clusters that can span",
    "start": "62239",
    "end": "69229"
  },
  {
    "text": "across multiple regions we're also going to be seeing how we can use standard wire guard tooling to add peers to the",
    "start": "69229",
    "end": "77240"
  },
  {
    "text": "wire guard cluster that may be at the edge like IOT devices and finally we're gonna see how we can actually create",
    "start": "77240",
    "end": "82970"
  },
  {
    "text": "multi cluster services using wire guard essentially for free just using all these standard wire guard things Rijo",
    "start": "82970",
    "end": "90530"
  },
  {
    "start": "90000",
    "end": "120000"
  },
  {
    "text": "introduced me so I'm really from Spain",
    "start": "90530",
    "end": "95590"
  },
  {
    "text": "you can't tell that from my avatar I'm working in Berlin with a prometheus",
    "start": "95590",
    "end": "102259"
  },
  {
    "text": "operator team but for the last six or seven months I've been spending most of my time working and obsessing and",
    "start": "102259",
    "end": "109579"
  },
  {
    "text": "spending all my free time on building these multi cloud clusters with wire guard so I'm happy to see a lot of",
    "start": "109579",
    "end": "115219"
  },
  {
    "text": "people here are also interested and share my obsession so I wanted to a",
    "start": "115219",
    "end": "120770"
  },
  {
    "start": "120000",
    "end": "260000"
  },
  {
    "text": "really quick poll who here is using wire guard at all oh cool a lot of people and",
    "start": "120770",
    "end": "126350"
  },
  {
    "text": "who is using wire guard with kubernetes already oh wow that's like more people than I expected I think we can probably",
    "start": "126350",
    "end": "132680"
  },
  {
    "text": "just end the talk now and you can talk to each other or something but please don't do that so for the uninitiated",
    "start": "132680",
    "end": "140209"
  },
  {
    "text": "wire guard is a very modern and secure VPN it's particularly performant and no",
    "start": "140209",
    "end": "147650"
  },
  {
    "text": "small mean because actually runs in the kernel the configuration for wire guard",
    "start": "147650",
    "end": "152870"
  },
  {
    "text": "is also really simple which makes it very appealing to use unlike some other VPN projects the code base for wire",
    "start": "152870",
    "end": "160459"
  },
  {
    "text": "guard is particularly small it's like orders of magnitude smaller than Open VPN for example which makes it auditable and also it's possible to do formal",
    "start": "160459",
    "end": "168019"
  },
  {
    "text": "verification of the protocol so this is what a sample wire guard configuration might look like if I'm configuring a",
    "start": "168019",
    "end": "174409"
  },
  {
    "text": "wire guard interface on my local like my laptop I'll have to configure a private key and a public key",
    "start": "174409",
    "end": "180770"
  },
  {
    "text": "pair a bunch like I would do an SSH once I want to peer with other wire guard nodes I'll exchange this public key out",
    "start": "180770",
    "end": "187130"
  },
  {
    "text": "of bounds right the other important thing to note here is that every wire guard peer when you appear with each",
    "start": "187130",
    "end": "192890"
  },
  {
    "text": "other you have to specify a white list of allowed IPs and these are the allowed IPs that when I want to send encrypt",
    "start": "192890",
    "end": "201530"
  },
  {
    "text": "some wire guard pack it to my peer mmm XYZ it'll only accept it will only",
    "start": "201530",
    "end": "209600"
  },
  {
    "text": "accept packets that are from an allowed IP that I configured for myself so for example I want to send a wire guard",
    "start": "209600",
    "end": "216680"
  },
  {
    "text": "packet to ten 402 I'll look it up in my wire guard configuration I'll say okay this is supposed to be using encryption",
    "start": "216680",
    "end": "223790"
  },
  {
    "text": "key XYZ I'll encrypt the pocket with this key and I'll send it to the last recorded endpoint this is the actual",
    "start": "223790",
    "end": "229610"
  },
  {
    "text": "public IP address of this host when that host receives the the wire got packet it'll decrypt it using my public key and",
    "start": "229610",
    "end": "236000"
  },
  {
    "text": "I'll say okay is the source IP of this packet one of the allowed IPs for Lucas",
    "start": "236000",
    "end": "241040"
  },
  {
    "text": "if not I'll throw it away and if it is one of the lot of pieces then we'll receive it anyways you can see that",
    "start": "241040",
    "end": "247580"
  },
  {
    "text": "configuring this is actually pretty straightforward and really flat compared to some of the really complex configuration for Open VPN and like",
    "start": "247580",
    "end": "254239"
  },
  {
    "text": "creating all these certificate and stuff so that's very much more in line with doing things like SSH if you were",
    "start": "254239",
    "end": "261859"
  },
  {
    "start": "260000",
    "end": "291000"
  },
  {
    "text": "interested more and more guard please look at the white paper online it's super easy to read it has a lot of really cool detail so without further",
    "start": "261859",
    "end": "266960"
  },
  {
    "text": "ado I want to make a really quick disclaimer like I said I've been working on building multi-cloud wire guard",
    "start": "266960",
    "end": "272150"
  },
  {
    "text": "culture for the last few months I'm doing this in a project called kilo you can find it on github a lot of the examples that we're gonna",
    "start": "272150",
    "end": "278120"
  },
  {
    "text": "be talking about today are gonna use this because it's what I'm familiar with but also all the things we're gonna be",
    "start": "278120",
    "end": "283669"
  },
  {
    "text": "talking about are things that I research and developed while working on this project so it's the stuff that I'm I'm",
    "start": "283669",
    "end": "289880"
  },
  {
    "text": "most familiar with without further ado let's talk about how does this actually work so if I launch a normal kubernetes",
    "start": "289880",
    "end": "297830"
  },
  {
    "start": "291000",
    "end": "363000"
  },
  {
    "text": "cluster on AWS normally all node to node communication and all part of our communication will",
    "start": "297830",
    "end": "304010"
  },
  {
    "text": "take place over some private somewhere right so that might be 1000 one if I later want to add some node to this",
    "start": "304010",
    "end": "311450"
  },
  {
    "text": "cluster for some reason from another cloud provider I can no longer use private networking right I can't route",
    "start": "311450",
    "end": "316700"
  },
  {
    "text": "to my DCP private network from AWS it just doesn't work so the obvious solution here is why don't we take some",
    "start": "316700",
    "end": "323450"
  },
  {
    "text": "public IP addresses this is obviously routable over the Internet but totally insecure right I don't want to be",
    "start": "323450",
    "end": "329000"
  },
  {
    "text": "sending my node to node communication mypod stuff directly over the open Internet so this is just out of the question the solution that we've always",
    "start": "329000",
    "end": "338180"
  },
  {
    "text": "done is let's just create a VPN what I'm gonna try to convince you of today is that using wire guard we can efficiently",
    "start": "338180",
    "end": "345160"
  },
  {
    "text": "secure part of our communication and no to no communication so that we can extend our private subnets and route",
    "start": "345160",
    "end": "352880"
  },
  {
    "text": "packet and what we can do is create a fully routable pod and network and fully routable subnet first service subnet",
    "start": "352880",
    "end": "360710"
  },
  {
    "text": "that spans across cloud providers we can skip this and come back later we have",
    "start": "360710",
    "end": "365720"
  },
  {
    "start": "363000",
    "end": "439000"
  },
  {
    "text": "time all right so why do we want to do this at all let's say that I'm deploying some kubernetes cluster to us West if",
    "start": "365720",
    "end": "373160"
  },
  {
    "text": "I'm lucky and I'm using a really cool distribution or kubernetes installer I might get multiple availability zones",
    "start": "373160",
    "end": "378290"
  },
  {
    "text": "but if I'm not or if maybe the whole cloud provider is down for some reason",
    "start": "378290",
    "end": "384260"
  },
  {
    "text": "or maybe I'm the I'm relying on some cloud service like s3 and s3 is just",
    "start": "384260",
    "end": "389930"
  },
  {
    "text": "down like it was last year in that case all of my clients here that are trying",
    "start": "389930",
    "end": "395090"
  },
  {
    "text": "to access my service are gonna be out of luck um one thing we can do to address",
    "start": "395090",
    "end": "400520"
  },
  {
    "text": "this is we can say okay how about in the same region I deploy clusters both in AWS and GCP in this case they're both",
    "start": "400520",
    "end": "408620"
  },
  {
    "text": "serving clients in the same region and providing low latency responses but this",
    "start": "408620",
    "end": "415250"
  },
  {
    "text": "way if AWS is down I can fall over to all my services running on GCP and the",
    "start": "415250",
    "end": "420710"
  },
  {
    "text": "benefit of doing this is that we can deploy only one pod can like only one",
    "start": "420710",
    "end": "425990"
  },
  {
    "text": "deployment and distribute pods automatically two nodes running in both clusters obviously another traditional",
    "start": "425990",
    "end": "431690"
  },
  {
    "text": "solution to this is using Federation but today we're talking about how we can do this solve these problems a different",
    "start": "431690",
    "end": "437690"
  },
  {
    "text": "way using why regard up topology for this cluster my look something like this maybe I have",
    "start": "437690",
    "end": "443990"
  },
  {
    "start": "439000",
    "end": "472000"
  },
  {
    "text": "one gateway in AWS and one gateway in DCP that are providing the cross cloud",
    "start": "443990",
    "end": "450500"
  },
  {
    "text": "communication so all crosscut communication from A to F to DCP goes over one link if that link for some",
    "start": "450500",
    "end": "456349"
  },
  {
    "text": "reason goes down it automatically falls over to another link but the thing that's interesting is that I can keep all all communication within one cloud",
    "start": "456349",
    "end": "463759"
  },
  {
    "text": "fast and unencrypted and not using wire guard and just use direct routing and I",
    "start": "463759",
    "end": "469130"
  },
  {
    "text": "can only have to encrypt cross cloud communication another good use cases",
    "start": "469130",
    "end": "474319"
  },
  {
    "start": "472000",
    "end": "552000"
  },
  {
    "text": "let's imagine that because of reasons we're working at some company and we have our own private cloud and we are in",
    "start": "474319",
    "end": "481669"
  },
  {
    "text": "the unfortunate situation of providing a service it's too popular and now we have to scale elastically and add a lot more",
    "start": "481669",
    "end": "487699"
  },
  {
    "text": "nodes how do we do this I don't want to have to buy a bunch more nodes and install them for traffic that we might",
    "start": "487699",
    "end": "495380"
  },
  {
    "text": "not be having tomorrow it might just take us too much time to do that a good",
    "start": "495380",
    "end": "500599"
  },
  {
    "text": "solution that we can do is say ok I'll spin up a hundred nodes in AWS and join them with my cluster in my private space",
    "start": "500599",
    "end": "507849"
  },
  {
    "text": "and now I can elastically scale my cluster without having to create two kubernetes clusters or installing you",
    "start": "507849",
    "end": "513320"
  },
  {
    "text": "nodes probably in my private cluster or anything like this the same thing happens for what if my private cluster",
    "start": "513320",
    "end": "519940"
  },
  {
    "text": "my cluster in my private cloud doesn't have some resources like GPUs what I can",
    "start": "519940",
    "end": "526820"
  },
  {
    "text": "do now is I can say I'll have all of my regular cluster stuff running in our private cloud and I can launch a bunch",
    "start": "526820",
    "end": "532850"
  },
  {
    "text": "of GP you know than AWS to complement the features that I don't have in my private cloud or if we're running in",
    "start": "532850",
    "end": "539660"
  },
  {
    "text": "some private clutter and some public cloud like digitalocean or anything else like heads McCloud or something in",
    "start": "539660",
    "end": "544850"
  },
  {
    "text": "Germany that doesn't have DP use either or any other accelerator we can mix and match that features we want by creating",
    "start": "544850",
    "end": "551450"
  },
  {
    "text": "multi-cloud clusters we can come back to this later as well",
    "start": "551450",
    "end": "557950"
  },
  {
    "start": "552000",
    "end": "606000"
  },
  {
    "text": "another good valid use case for creating clusters using my regard is who's ever",
    "start": "557950",
    "end": "565970"
  },
  {
    "text": "run a cluster in some cloud provider that didn't actually provide isolated private networking like who's ever run",
    "start": "565970",
    "end": "572779"
  },
  {
    "text": "in digitalocean before 2018 exactly so if we're running in some top",
    "start": "572779",
    "end": "579010"
  },
  {
    "text": "provider with shared layer two between tenants note to note communication might",
    "start": "579010",
    "end": "584290"
  },
  {
    "text": "actually not be secure and this means that other tenants can read our can read our Ethernet frames and stuff so one",
    "start": "584290",
    "end": "590710"
  },
  {
    "text": "thing that we can do to secure this is we can say let's mesh all of our nodes",
    "start": "590710",
    "end": "596890"
  },
  {
    "text": "in our cloud using wire guard and now we can encrypt all node to node communication and make sure that no one",
    "start": "596890",
    "end": "603220"
  },
  {
    "text": "else can sync our traffic we can do this later as well in this case we'd be creating a full mesh routine all of our",
    "start": "603220",
    "end": "609340"
  },
  {
    "start": "606000",
    "end": "645000"
  },
  {
    "text": "nodes this is one really trivial solution or one really trivial topology for wire guard but we can actually",
    "start": "609340",
    "end": "615280"
  },
  {
    "text": "create much more exotic topologies if we're running a multi cloud cluster that has some nodes in a private cloud that",
    "start": "615280",
    "end": "621460"
  },
  {
    "text": "has to be fully meshed and some nodes in GCP for example that don't need to be fully mesh because they actually have secure private networking then we can",
    "start": "621460",
    "end": "628180"
  },
  {
    "text": "say all right let's keep that stuff unencrypted and let's mesh everything here fully so we'd end up what the",
    "start": "628180",
    "end": "634000"
  },
  {
    "text": "topology looks something like this by the way all of these graphs are being generated using the kilo command line",
    "start": "634000",
    "end": "640690"
  },
  {
    "text": "tool and we can talk about that later of anyone hasn't any interest okay I've",
    "start": "640690",
    "end": "647440"
  },
  {
    "start": "645000",
    "end": "798000"
  },
  {
    "text": "talked to you a little bit about the motivation for why we want to create multi cloud clusters and now we're getting into some of the consequences of",
    "start": "647440",
    "end": "653650"
  },
  {
    "text": "this decision it turns out that we can actually do really interesting things with standard wire guard tooling like we",
    "start": "653650",
    "end": "659260"
  },
  {
    "text": "can add peers from IOT that are IOT devices or nodes that are at the edge to",
    "start": "659260",
    "end": "664780"
  },
  {
    "text": "our wire guard cluster to provide a either services that we don't have or maybe just to give them access to our private services so here's an example",
    "start": "664780",
    "end": "671770"
  },
  {
    "text": "use case let's say that I'm a corporation and I'm providing some",
    "start": "671770",
    "end": "679080"
  },
  {
    "text": "enterprise service that shouldn't be available on the public internet and I want my clients to be able to VPN into",
    "start": "679080",
    "end": "684580"
  },
  {
    "text": "my cluster if our cluster is already wire guard enabled we can trivially say",
    "start": "684580",
    "end": "689710"
  },
  {
    "text": "let's make this client a wire guard peer of our cluster and they can access all of our cluster services securely the",
    "start": "689710",
    "end": "696070"
  },
  {
    "text": "thing that's even more interesting though is that the pod subnet of our cluster is fully routable from our",
    "start": "696070",
    "end": "701290"
  },
  {
    "text": "client so is the service of net that means that let's go back to this",
    "start": "701290",
    "end": "706390"
  },
  {
    "text": "actually that means that from the command line I can see say curl 10201 from my laptop and access any pot or whatever that's running with",
    "start": "706390",
    "end": "713050"
  },
  {
    "text": "pot IP 10201 the same thing happens in",
    "start": "713050",
    "end": "718750"
  },
  {
    "text": "Reverse actually so if I have a kubernetes cluster that wants to access another service that's behind a",
    "start": "718750",
    "end": "724630"
  },
  {
    "text": "corporate firewall it may be running on like some bare metal machines like some legacy machines that I haven't moved to the cloud yet and I don't want to have",
    "start": "724630",
    "end": "731440"
  },
  {
    "text": "publicly available I can say alright let's make all of these bare-metal services appears on my wire guard",
    "start": "731440",
    "end": "737200"
  },
  {
    "text": "cluster and now any pod that's running in my cluster can say all right I want",
    "start": "737200",
    "end": "743080"
  },
  {
    "text": "to make an HTTP request against 10101 which is the bare metal service this works perfectly well for us except it's",
    "start": "743080",
    "end": "750250"
  },
  {
    "text": "not really kubernetes native right like in kubernetes we want to be able to do service discovery maybe you want to be",
    "start": "750250",
    "end": "755680"
  },
  {
    "text": "able to address services using VMs but luckily there's a really cool trick that we can do for that we can create a set",
    "start": "755680",
    "end": "762250"
  },
  {
    "text": "of endpoints to mirror the service that we have running outside of our kubernetes cluster and then we can",
    "start": "762250",
    "end": "768040"
  },
  {
    "text": "create an actual service as well with the same name and the end result is that from any pot inside of our cluster we",
    "start": "768040",
    "end": "774430"
  },
  {
    "text": "can use standard kubernetes DNS to resolve the IP of the things running out of the out of the cluster and access",
    "start": "774430",
    "end": "780670"
  },
  {
    "text": "those services and the same thing is",
    "start": "780670",
    "end": "785830"
  },
  {
    "text": "true for IOT devices like if I'm running some things at the edge and I want to be",
    "start": "785830",
    "end": "790990"
  },
  {
    "text": "able to collect maybe some data securely from IOT devices I can also connect them to my cluster using VPN cool this is the",
    "start": "790990",
    "end": "801540"
  },
  {
    "start": "798000",
    "end": "980000"
  },
  {
    "text": "third and final act of this talk which is multi cloud services so somebody",
    "start": "801540",
    "end": "808440"
  },
  {
    "text": "might say to me Lucas all this multi class stuff sounds really cool but I",
    "start": "808440",
    "end": "814180"
  },
  {
    "text": "don't want to put all my eggs proverbially in the same control plane this sounds like a really bad idea I",
    "start": "814180",
    "end": "819610"
  },
  {
    "text": "want to have some resiliency in case one of my CDs gets hosed and and I no longer",
    "start": "819610",
    "end": "824890"
  },
  {
    "text": "have this cluster available what can I do again traditionally we solve this using Federation but one of the",
    "start": "824890",
    "end": "831610"
  },
  {
    "text": "consequences of using wire guard is that we can actually create these kind of like federated services pretty much for",
    "start": "831610",
    "end": "838300"
  },
  {
    "text": "free the same way that we said we wanted to peer one WaterGuard cluster with a node like",
    "start": "838300",
    "end": "844640"
  },
  {
    "text": "an IOT device or maybe a laptop we can trivially say I want to peer one cluster with another cluster at the end of the",
    "start": "844640",
    "end": "850280"
  },
  {
    "text": "day they're both just wire Guard endpoints wire guard doesn't know anything about kubernetes think the Lord so it keeps it really simple this means",
    "start": "850280",
    "end": "858890"
  },
  {
    "text": "that if I'm running one kubernetes cluster an AWS and I want to access a service there from a kubernetes cluster",
    "start": "858890",
    "end": "864530"
  },
  {
    "text": "running in GCP I can peer the two clusters and then I can use the same",
    "start": "864530",
    "end": "871100"
  },
  {
    "text": "trick where I mirror the endpoints and the services in the two clusters and and",
    "start": "871100",
    "end": "876890"
  },
  {
    "text": "then I can once again from my pod in Edo us I can access the I can access the",
    "start": "876890",
    "end": "883160"
  },
  {
    "text": "service in sorry I'd work from my pod in TCP I can act as a service in a do yes just using regular community discovery",
    "start": "883160",
    "end": "888490"
  },
  {
    "text": "or DNS plus or DNS or anything like this so without further ado let's get to the",
    "start": "888490",
    "end": "896570"
  },
  {
    "text": "interesting part which is the demo so for this demo I'm gonna try to propose",
    "start": "896570",
    "end": "903560"
  },
  {
    "text": "like some motivation for what we're gonna do let's imagine that all of us here there's a bunch of us we're working",
    "start": "903560",
    "end": "908630"
  },
  {
    "text": "for a company like nest or something and one of the things we're trying to do is we want to provide some security cameras",
    "start": "908630",
    "end": "915830"
  },
  {
    "text": "to our customers one of the parts of this service is that we want to let customers be able to stream this webcam",
    "start": "915830",
    "end": "922160"
  },
  {
    "text": "feed the security camera feed from a web service like anywhere that they may be if they're not at home or something so",
    "start": "922160",
    "end": "928370"
  },
  {
    "text": "in order to do this we want to be able to securely connect to the IOT device and be able to pull the stream but it",
    "start": "928370",
    "end": "937040"
  },
  {
    "text": "occurs to us our product team is like hey you know what would be a really cool idea it'd be really cool that we could",
    "start": "937040",
    "end": "942470"
  },
  {
    "text": "do object detection on this service as well if we could do automatic object",
    "start": "942470",
    "end": "947930"
  },
  {
    "text": "detection and labeling of everything that's happening in the stream I think our customers would really like that unfortunately because of reasons again",
    "start": "947930",
    "end": "955030"
  },
  {
    "text": "the cloud that we're deploying our web service and doesn't have GPUs to accelerate this object detection so what",
    "start": "955030",
    "end": "961190"
  },
  {
    "text": "do we do we can create another gun multi-cloud cluster with some nodes in AWS that are GPU powered nodes and",
    "start": "961190",
    "end": "968000"
  },
  {
    "text": "connect them to our existing cloud provider because we don't have an actual IOT device here I'm going to be using my",
    "start": "968000",
    "end": "974840"
  },
  {
    "text": "laptop as if it were the security-camera and Jessie the webcam feed directly so for anybody",
    "start": "974840",
    "end": "981980"
  },
  {
    "start": "980000",
    "end": "1326000"
  },
  {
    "text": "following along or that wants to try this again later there's a github repo with all the instructions I'll be",
    "start": "981980",
    "end": "989030"
  },
  {
    "text": "copying things from here actually so if the demo gods are generous with us today",
    "start": "989030",
    "end": "994790"
  },
  {
    "text": "we will have fun let us see alright so",
    "start": "994790",
    "end": "1003570"
  },
  {
    "text": "this is using typhoon to spin up a bunch of nodes I've already created the infrastructure just to save us some time",
    "start": "1004530",
    "end": "1010450"
  },
  {
    "text": "I've created some nodes in digital ocean and some AWS and now we're going to connect them using wire guard so let's",
    "start": "1010450",
    "end": "1015730"
  },
  {
    "text": "take a look I'm going to install the manifest that I have in this repo let's",
    "start": "1015730",
    "end": "1023140"
  },
  {
    "text": "try this cool let's take a really quick",
    "start": "1023140",
    "end": "1030040"
  },
  {
    "text": "look at what we have in this repo alright we have this thing called maybe",
    "start": "1030040",
    "end": "1035140"
  },
  {
    "text": "you guys can't see this I might be better all right we have this thing",
    "start": "1035140",
    "end": "1040240"
  },
  {
    "text": "called dark API this is just providing an API for a yellow object detection neural network we have a coop Connie au",
    "start": "1040240",
    "end": "1047319"
  },
  {
    "text": "pod this is the actual web service that's doing the streaming to our client we have an M JPEG thing we'll take a",
    "start": "1047320",
    "end": "1053230"
  },
  {
    "text": "look at that in a second we have a wire guard kernel module installer again this is running on typhoon so it's all container Linux and we don't have any",
    "start": "1053230",
    "end": "1060040"
  },
  {
    "text": "package manager or package manager to install kernel modules but we can actually use a daemon set to do that for",
    "start": "1060040",
    "end": "1065110"
  },
  {
    "text": "us we have an Nvidia device plug-in we have kilo to do the wire guard",
    "start": "1065110",
    "end": "1070270"
  },
  {
    "text": "networking and we have an Nvidia kernel module installer let's take a quick look at the mjpeg thing this looks familiar",
    "start": "1070270",
    "end": "1076540"
  },
  {
    "text": "this is just the mirrored service and endpoints that we are talking about earlier so we're going to be mirroring the service that's being provided by the",
    "start": "1076540",
    "end": "1082720"
  },
  {
    "text": "IOT device so that we can access it like a native service from our other daemon",
    "start": "1082720",
    "end": "1087790"
  },
  {
    "text": "set here so here towards the bottom",
    "start": "1087790",
    "end": "1094740"
  },
  {
    "text": "towards the bottom oh my god whatever towards the bottom we have this thing that says stream mjpeg default",
    "start": "1094770",
    "end": "1101230"
  },
  {
    "text": "this is just using the cluster DNS to resolve the IP of our endpoint that's",
    "start": "1101230",
    "end": "1106930"
  },
  {
    "text": "providing the webcam stream okay let's go back to the interesting part now what we're gonna do is we're",
    "start": "1106930",
    "end": "1113630"
  },
  {
    "text": "going to actually create a wire guard interface on our local machine",
    "start": "1113630",
    "end": "1118480"
  },
  {
    "text": "mmm we won't get part of it let's do this again sometime okay great let's see",
    "start": "1126320",
    "end": "1135450"
  },
  {
    "text": "IPA so we have a wire guard interface here perfect now we're gonna generate a",
    "start": "1135450",
    "end": "1141030"
  },
  {
    "text": "public and private key pair for this interface a come on oh sorry wrong thing",
    "start": "1141030",
    "end": "1152030"
  },
  {
    "text": "this is again we're gonna generate this puppy cool so we have here private key",
    "start": "1152030",
    "end": "1163530"
  },
  {
    "text": "public key perfect now what we need to do is we need to we need to actually",
    "start": "1163530",
    "end": "1170190"
  },
  {
    "text": "peer our local wire on interface with our cluster that's running wire guard Kela provides a CR D that you can use to",
    "start": "1170190",
    "end": "1178200"
  },
  {
    "text": "define a wire guard peer you can just list your allowed IPs and your public key and this will automatically generate",
    "start": "1178200",
    "end": "1183840"
  },
  {
    "text": "the actual any configure for a wire guard on the cluster nodes so let's do that okay so now our cluster knows how",
    "start": "1183840",
    "end": "1195180"
  },
  {
    "text": "to contact our local node but our local node doesn't yet know how to contact the cluster so this is what we have to do here we'll use the kilo command-line",
    "start": "1195180",
    "end": "1202020"
  },
  {
    "text": "tool to generate the configuration and then apply it to our local node alright",
    "start": "1202020",
    "end": "1211160"
  },
  {
    "text": "the last step here of setup is that we need to actually add routes to the pod",
    "start": "1211160",
    "end": "1218100"
  },
  {
    "text": "subnet and the service subnet so that I know that when I want to send a request to one or 10201 I have to route it",
    "start": "1218100",
    "end": "1224130"
  },
  {
    "text": "through my kilo interface my wire got interface so let's do this really quickly all right we created a bunch of",
    "start": "1224130",
    "end": "1233940"
  },
  {
    "text": "IP routes let's see this cool so you can see now that I have ten too low this",
    "start": "1233940",
    "end": "1240450"
  },
  {
    "text": "slash 24 via wire guard same thing here the wire guard ip's and also the private",
    "start": "1240450",
    "end": "1247290"
  },
  {
    "text": "IP addresses okay finally what we're gonna do now is we're gonna actually run",
    "start": "1247290",
    "end": "1253800"
  },
  {
    "text": "the webcam service that's providing the stream I'm gonna run it in another terminal",
    "start": "1253800",
    "end": "1259139"
  },
  {
    "text": "here we can send it alright cool so this",
    "start": "1259139",
    "end": "1264840"
  },
  {
    "text": "is just using the this just running a dock container that's providing the stream I'm gonna move it back out of the way so we have more room and the last",
    "start": "1264840",
    "end": "1272639"
  },
  {
    "text": "step is that we're actually gonna open up the IP address of this of this pod",
    "start": "1272639",
    "end": "1279120"
  },
  {
    "text": "that we have running in our cluster alright cool so this is doing object",
    "start": "1279120",
    "end": "1284309"
  },
  {
    "text": "detection on me again notice that what this is doing is we have a service running in digital ocean that's reaching",
    "start": "1284309",
    "end": "1290309"
  },
  {
    "text": "out to my laptop pulling images from my webcam sending it to AWS for GPU object",
    "start": "1290309",
    "end": "1296399"
  },
  {
    "text": "detection and then sending it back to me alright this is all powered by wire guard and made possible this way okay",
    "start": "1296399",
    "end": "1303139"
  },
  {
    "text": "this is happening on our [Applause]",
    "start": "1303139",
    "end": "1311940"
  },
  {
    "text": "all right that's really the end of our demo here and it's pretty much the end",
    "start": "1312309",
    "end": "1318920"
  },
  {
    "text": "of our talk as well we have some time for questions otherwise if you want to",
    "start": "1318920",
    "end": "1326390"
  },
  {
    "start": "1326000",
    "end": "1664000"
  },
  {
    "text": "talk to me later in private about anything else I'm really happy to answer any questions either and yeah thanks a lot for coming",
    "start": "1326390",
    "end": "1333429"
  },
  {
    "text": "it looks like we have some people here",
    "start": "1340419",
    "end": "1344919"
  },
  {
    "text": "yes gentlemen a really great demo thanks",
    "start": "1347169",
    "end": "1353179"
  },
  {
    "text": "a lot can you tell us a little bit more about security concept service mesh integration storage replication I mean",
    "start": "1353179",
    "end": "1360980"
  },
  {
    "text": "what's the use of pots without storage well the the other things that actually make up the complete working application",
    "start": "1360980",
    "end": "1369220"
  },
  {
    "text": "okay so the question is how can we how can we complete the picture right and do",
    "start": "1369220",
    "end": "1374990"
  },
  {
    "text": "provide things like storage and stuff also across multiple clusters or well your scenario was having a failover",
    "start": "1374990",
    "end": "1381260"
  },
  {
    "text": "scenario between cloud providers so obviously some user data needs to be",
    "start": "1381260",
    "end": "1386750"
  },
  {
    "text": "replicated there right Nintendo totally you didn't talk about that I assume you have an idea how to solve that in my",
    "start": "1386750",
    "end": "1393230"
  },
  {
    "text": "opinion that's the bigger problem than actually connecting pots to each other yeah for sure it's also load balancing",
    "start": "1393230",
    "end": "1399260"
  },
  {
    "text": "like global of balancing is a big challenge actually yeah absolutely specifically for for providing data so",
    "start": "1399260",
    "end": "1407240"
  },
  {
    "text": "if we have like some database we have a service that's running on multiple clouds we don't want I mean there's",
    "start": "1407240",
    "end": "1413120"
  },
  {
    "text": "actually a couple concerns right number one if we're concerned about latency we probably don't want to be making",
    "start": "1413120",
    "end": "1418610"
  },
  {
    "text": "requests for database across multiple clouds or across different reasons either so we're definitely gonna have to replicate data if this is an issue for",
    "start": "1418610",
    "end": "1426200"
  },
  {
    "text": "you if you're running these staple applications and you're running across multiple cloud providers it's probably going to be very important for you to",
    "start": "1426200",
    "end": "1431870"
  },
  {
    "text": "either have like mmm like some replication for your database or some",
    "start": "1431870",
    "end": "1439539"
  },
  {
    "text": "just mash to some other you're on gonna have like some other database nodes that",
    "start": "1439539",
    "end": "1445580"
  },
  {
    "text": "are ready for reads maybe some like masters that are ready to be swapped out",
    "start": "1445580",
    "end": "1450950"
  },
  {
    "text": "if the other one fails or something like this is very much an open problem but I mean database replication is it's kind",
    "start": "1450950",
    "end": "1456320"
  },
  {
    "text": "of an entire field of study that I don't think we really have to talk about here like I'm happy to talk about it with you later but I think it's a general concern",
    "start": "1456320",
    "end": "1463850"
  },
  {
    "text": "with running stateful applications and highly available applications in general right like even if I'm not running a",
    "start": "1463850",
    "end": "1469220"
  },
  {
    "text": "multi cloud setup and I'm running just an H a database across multiple ability zones and one of my nodes dies I",
    "start": "1469220",
    "end": "1474680"
  },
  {
    "text": "have the same problem right it's not really particular to this hi sometimes",
    "start": "1474680",
    "end": "1489290"
  },
  {
    "text": "you need you may need to run appear in an environment that is behind a firewall",
    "start": "1489290",
    "end": "1494780"
  },
  {
    "text": "or requires accessing the internet through a proxy can't tell me about how",
    "start": "1494780",
    "end": "1503420"
  },
  {
    "text": "compatible this would be with proxies and firewalls okay well one thing you should notice is",
    "start": "1503420",
    "end": "1509810"
  },
  {
    "text": "that for this example we're running this laptop right is connecting to our",
    "start": "1509810",
    "end": "1515840"
  },
  {
    "text": "cluster is being matted right through our like IP so what like this doesn't have a public IP address right so we're",
    "start": "1515840",
    "end": "1522050"
  },
  {
    "text": "being matted and still I'm being able to connect to my I'm still be able to",
    "start": "1522050",
    "end": "1528860"
  },
  {
    "text": "connect for my cluster to my laptop obviously wire guard is not like a layer",
    "start": "1528860",
    "end": "1535400"
  },
  {
    "text": "seven protocol right this is like happening at UDP level we're encapsulating all of our encrypted IP",
    "start": "1535400",
    "end": "1541490"
  },
  {
    "text": "packets inside of UDP so you're gonna have to have some UDP port available and open this is one important thing but one",
    "start": "1541490",
    "end": "1548690"
  },
  {
    "text": "of the things that's interesting is that bar guard has built in roaming enabled so like the IP addresses for all these",
    "start": "1548690",
    "end": "1553940"
  },
  {
    "text": "things can change and they'll update automatically and kind of transparently and this does work behind not another",
    "start": "1553940",
    "end": "1560360"
  },
  {
    "text": "kind of like standard gateway things",
    "start": "1560360",
    "end": "1565240"
  },
  {
    "text": "hi so I noticed you put some static routes in your laptop so how does routing work in a cloud and also can you",
    "start": "1572000",
    "end": "1579200"
  },
  {
    "text": "do this with managed communities like DKE and stuff I'm sorry can you repeat the question I didn't quite get the",
    "start": "1579200",
    "end": "1584480"
  },
  {
    "text": "first part you edit static routes on your laptop during the demo so we'll kilo add routes to the notes inside the",
    "start": "1584480",
    "end": "1591620"
  },
  {
    "text": "cow clusters or yeah so the nodes I add a node that was running in AWS and",
    "start": "1591620",
    "end": "1597530"
  },
  {
    "text": "another one that was running on digitalocean all of the routes to route packets across the two cloud providers were",
    "start": "1597530",
    "end": "1604790"
  },
  {
    "text": "automatically generated right like those were our math generated and applied it",
    "start": "1604790",
    "end": "1609800"
  },
  {
    "text": "also automatically applied a route to route packets to my local machine as well yeah this doesn't work today on gke",
    "start": "1609800",
    "end": "1620470"
  },
  {
    "text": "because they have their own networking provider but I mean there's definitely ways there's a lot of projects out there",
    "start": "1620470",
    "end": "1626690"
  },
  {
    "text": "actually they're doing there's a lot of projects out there that are doing wire",
    "start": "1626690",
    "end": "1634250"
  },
  {
    "text": "guard for multi cloud stuff and there's a lot of other projects that might actually be able to support gke directly",
    "start": "1634250",
    "end": "1639440"
  },
  {
    "text": "but you can definitely do this on GCP I've done the same thing on Google Cloud like I said there was like Google closers with a double yes clusters for",
    "start": "1639440",
    "end": "1645200"
  },
  {
    "text": "example so is this like us like a CNI  noise yeah absolutely",
    "start": "1645200",
    "end": "1650270"
  },
  {
    "text": "yeah it's a networking provider one thing that's interesting is that this project has some compatibility with",
    "start": "1650270",
    "end": "1657590"
  },
  {
    "text": "other CNI packages so one thing that we saw here let me show you really quickly",
    "start": "1657590",
    "end": "1665770"
  },
  {
    "text": "you see that our Damon said here is called kilo typhoon flannel so this is",
    "start": "1667180",
    "end": "1672860"
  },
  {
    "text": "running kilo on typhoon on top of flannel you can also run it without flannel and just do all the networking",
    "start": "1672860",
    "end": "1678260"
  },
  {
    "text": "itself this means that kilo will do like the cross cloud communication and flannel takes care of like the local if you're",
    "start": "1678260",
    "end": "1684800"
  },
  {
    "text": "running flannel if you don't care then you can just use kilo entirely and the same thing is true for like any wire",
    "start": "1684800",
    "end": "1690380"
  },
  {
    "text": "guard cloud networking provider yeah we",
    "start": "1690380",
    "end": "1695840"
  },
  {
    "text": "have someone up front here I think that's have their hand for a second",
    "start": "1695840",
    "end": "1699940"
  },
  {
    "text": "hi thanks for your talk and I would like to ask about the purpose of the talk was",
    "start": "1701110",
    "end": "1708170"
  },
  {
    "text": "how to be in HHA blasters but how can you build a say links between two",
    "start": "1708170",
    "end": "1715580"
  },
  {
    "text": "clusters for example it will support adding to the objects of peers how it",
    "start": "1715580",
    "end": "1721520"
  },
  {
    "text": "will fall back from one another or how it will be used yeah so in general or by design wire guard",
    "start": "1721520",
    "end": "1733760"
  },
  {
    "text": "doesn't allow you to have two routes to the same allowed IP yeah but that",
    "start": "1733760",
    "end": "1739580"
  },
  {
    "text": "doesn't mean that we can't have two routes of the same cluster so one of the",
    "start": "1739580",
    "end": "1747140"
  },
  {
    "text": "examples we saw earlier is that we can create a full mesh between all the nodes in our clusters right so that way if one",
    "start": "1747140",
    "end": "1753530"
  },
  {
    "text": "of the nodes that's providing some pod cider goes down that pot cider is down but all the other pod ciders are still",
    "start": "1753530",
    "end": "1760340"
  },
  {
    "text": "available the other thing is that the today the way that like this works on",
    "start": "1760340",
    "end": "1765950"
  },
  {
    "text": "Kela for example is that if any of the nodes there's like a keepalive mechanism",
    "start": "1765950",
    "end": "1770960"
  },
  {
    "text": "if any of the nodes you can stop responding it just is taken out of the mesh and another leader is elected to be the",
    "start": "1770960",
    "end": "1776090"
  },
  {
    "text": "gateway for example so we can do things like this to automatically as long as the kubernetes api is available mmm the",
    "start": "1776090",
    "end": "1782480"
  },
  {
    "text": "kilo mesh well like we configure itself ok and second question will be if you",
    "start": "1782480",
    "end": "1789740"
  },
  {
    "text": "have for example let's say four clusters but it's the topology will be like a",
    "start": "1789740",
    "end": "1796130"
  },
  {
    "text": "central cluster connected to all three but the remaining three doesn't connect between each other can you do multi hop",
    "start": "1796130",
    "end": "1802720"
  },
  {
    "text": "with guarded or it will need to be updated the central cluster continually",
    "start": "1802720",
    "end": "1810530"
  },
  {
    "text": "being synced with all the roads or how it will be that possible do you want that clusters to be separate clusters or",
    "start": "1810530",
    "end": "1817070"
  },
  {
    "text": "yeah for simple three clusters and one of them connect to all three but the remaining three the synchronous between",
    "start": "1817070",
    "end": "1823520"
  },
  {
    "text": "each other so for example that there one of the single clusters that connect to a",
    "start": "1823520",
    "end": "1828650"
  },
  {
    "text": "central how it could be our whole table to the they're plaster that this is not",
    "start": "1828650",
    "end": "1835140"
  },
  {
    "text": "possible today I even implemented this today is definitely possible to do something we're you to find your own",
    "start": "1835140",
    "end": "1840450"
  },
  {
    "text": "routes and stuff like this this is an interesting use case I can't think of right now like an example that I would",
    "start": "1840450",
    "end": "1845850"
  },
  {
    "text": "do this for but yeah I'm sure that you could figure this out like it's at the end of the day you're just applying routes and we need to have some",
    "start": "1845850",
    "end": "1852059"
  },
  {
    "text": "configuration mechanism to say this IPO via this route I think we have time for",
    "start": "1852059",
    "end": "1859440"
  },
  {
    "text": "maybe one last question thank you for",
    "start": "1859440",
    "end": "1870809"
  },
  {
    "text": "the talk can I ask do you think with something like wire guard go and network name spaces might be possible to have",
    "start": "1870809",
    "end": "1876840"
  },
  {
    "text": "pods that only have a wire garden phase in them and therefore don't need any routing configuration or special",
    "start": "1876840",
    "end": "1882059"
  },
  {
    "text": "privileges on the underlying node alright so maybe using like using wire",
    "start": "1882059",
    "end": "1888030"
  },
  {
    "text": "guard as actually like have RC and I plugin only provision wire it interfaces for all of our pods I'm thinking you",
    "start": "1888030",
    "end": "1895380"
  },
  {
    "text": "create these namespaces create the interface outside of the pod yeah and move it in so that the pod can only ever",
    "start": "1895380",
    "end": "1900929"
  },
  {
    "text": "speak wire guard and if possible to avoid having to load the kernel module use the user space implementation",
    "start": "1900929",
    "end": "1907230"
  },
  {
    "text": "yeah this doesn't get us around having to load a kernel module we're not",
    "start": "1907230",
    "end": "1913409"
  },
  {
    "text": "loading the kernel module into our our pod that was running this web streaming service that's just installing it on the",
    "start": "1913409",
    "end": "1919650"
  },
  {
    "text": "host by the way so we never have to install it at any pause like this is just provided by the host um you can",
    "start": "1919650",
    "end": "1926460"
  },
  {
    "text": "definitely do this like you'd have to just write a new CNI plugin that takes care of this or instead of like an IP an",
    "start": "1926460",
    "end": "1931830"
  },
  {
    "text": "IP something or like a VX LAN see and I plug-in just do one that does it for wire garden interfaces it's definitely",
    "start": "1931830",
    "end": "1938159"
  },
  {
    "text": "possible it's just some work but this would provide really secure encryption between every single pod thank you all",
    "start": "1938159",
    "end": "1946559"
  },
  {
    "text": "right I think we're out of time I'm really happy to talk to anybody else if you have any questions and thinks about first thing or listening",
    "start": "1946559",
    "end": "1951760"
  },
  {
    "text": "[Applause]",
    "start": "1951760",
    "end": "1958189"
  }
]