[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "so my name is roman uh this is james and we both work at cruz cruz is a",
    "start": "80",
    "end": "5359"
  },
  {
    "text": "self-driving car technology company uh that works on a lot of different things but one of the main ones is trying to",
    "start": "5359",
    "end": "11679"
  },
  {
    "text": "make a car drive by itself so today we're going to talk to you about um",
    "start": "11679",
    "end": "16720"
  },
  {
    "text": "our journey through authentication and authorization and crews so james",
    "start": "16720",
    "end": "23359"
  },
  {
    "text": "all right thanks roman um so just to sort of set the stage for",
    "start": "23359",
    "end": "28640"
  },
  {
    "text": "the problem space that we'll be talking about here i'll just start by saying that cruz currently has about 2 000 employees",
    "start": "28640",
    "end": "36320"
  },
  {
    "text": "of those employees approximately 1 500 of them are engineers and we've got about 150 services running",
    "start": "36320",
    "end": "43200"
  },
  {
    "text": "at any given time the majority of our services are running in kubernetes with the mix of both my",
    "start": "43200",
    "end": "49840"
  },
  {
    "text": "microservice and monolith architectures that span multiple clusters and most of",
    "start": "49840",
    "end": "55039"
  },
  {
    "text": "the traffic that's passed around is http based as for storing and managing secrets we",
    "start": "55039",
    "end": "61840"
  },
  {
    "text": "use hashicorp vault and we use a typical cloud-based identity provider for managing employee",
    "start": "61840",
    "end": "67600"
  },
  {
    "text": "and contractor identity um and so when talking about authen and",
    "start": "67600",
    "end": "73119"
  },
  {
    "start": "70000",
    "end": "89000"
  },
  {
    "text": "odyssey at cruz um we really have three different types of callers or clients that we have to take into consideration",
    "start": "73119",
    "end": "79840"
  },
  {
    "text": "um and of the uh those callers are browser clients cli clients",
    "start": "79840",
    "end": "85200"
  },
  {
    "text": "and service to service or application clients",
    "start": "85200",
    "end": "89520"
  },
  {
    "start": "89000",
    "end": "142000"
  },
  {
    "text": "um and so i'll just start at the beginning you know this is more of like uh you know",
    "start": "90400",
    "end": "96079"
  },
  {
    "text": "handling often an aussie at cruz to be honest during the early days was sort of like the wild west",
    "start": "96079",
    "end": "102079"
  },
  {
    "text": "and this was really more you know our talk is called crawl walk run i'll say this is more of like the embryonic stage",
    "start": "102079",
    "end": "107600"
  },
  {
    "text": "but it's worth mentioning nonetheless um so in this in this early stage",
    "start": "107600",
    "end": "113360"
  },
  {
    "text": "you know we had for example engineers they're building services for example on top of our pas gke clusters",
    "start": "113360",
    "end": "121119"
  },
  {
    "text": "and then in terms of how they handled authentication and authorization they're basically on their own",
    "start": "121119",
    "end": "128640"
  },
  {
    "text": "the security team may have implemented policies or standards which required service owners to implement",
    "start": "128640",
    "end": "134879"
  },
  {
    "text": "these controls but we didn't really have a whole lot in the way of tooling or standardization",
    "start": "134879",
    "end": "142440"
  },
  {
    "start": "142000",
    "end": "194000"
  },
  {
    "text": "so i'll affectionately refer to these as the bad old days um and uh you know despite my initial",
    "start": "143040",
    "end": "149120"
  },
  {
    "text": "impression this ban sounds absolutely nothing like kiss but",
    "start": "149120",
    "end": "154400"
  },
  {
    "text": "nonetheless um i'll say that at this early stage we had authentication and",
    "start": "154400",
    "end": "159519"
  },
  {
    "text": "authorization sprawl teams were handling often and obviously entirely differently",
    "start": "159519",
    "end": "164640"
  },
  {
    "text": "for example you know one might be doing oidc with idp one and another might be",
    "start": "164640",
    "end": "169840"
  },
  {
    "text": "doing oidc or saml with a different identity provider altogether",
    "start": "169840",
    "end": "175519"
  },
  {
    "text": "we also had naive implementations using static or shared credentials",
    "start": "175519",
    "end": "181360"
  },
  {
    "text": "and there may have been one or two services that had no authentication at all",
    "start": "181360",
    "end": "186720"
  },
  {
    "text": "and so we realized that that was problematic and we had to start somewhere to fix it and that's where we reached the crawl phase",
    "start": "186720",
    "end": "193760"
  },
  {
    "start": "194000",
    "end": "223000"
  },
  {
    "text": "and the crawl in the crawl phase the first thing we did was we just built a saml authenticating proxy sidecar and",
    "start": "194959",
    "end": "200640"
  },
  {
    "text": "just sort of hoped that people would use it in in this case the service owner would add the sidecar",
    "start": "200640",
    "end": "207760"
  },
  {
    "text": "to their pod and then every http request that hits the the service will eventually or you know would uh if we",
    "start": "207760",
    "end": "216000"
  },
  {
    "text": "would enforce authentication via a saml flow before uh proxying the request",
    "start": "216000",
    "end": "223519"
  },
  {
    "start": "223000",
    "end": "326000"
  },
  {
    "text": "and so to give you an idea of what that might look like um we'll take a look at this diagram um",
    "start": "224879",
    "end": "230400"
  },
  {
    "text": "and we'll actually use a similar diagram throughout the rest of the talk as we introduce new systems and concepts",
    "start": "230400",
    "end": "236480"
  },
  {
    "text": "and by the way this person isn't praying they're crawling but it was the best crawl i kind of could find",
    "start": "236480",
    "end": "242640"
  },
  {
    "text": "but in this case we have you know these different types of clients that i mentioned earlier they're making requests from outside of",
    "start": "242640",
    "end": "249120"
  },
  {
    "text": "our you know cluster and they come in and pass through this nginx ingress gateway and eventually we'll end up",
    "start": "249120",
    "end": "254640"
  },
  {
    "text": "hitting the the service um in the case of uh you know this early",
    "start": "254640",
    "end": "259759"
  },
  {
    "text": "stage where we're using a sample authenticating proxy um you know",
    "start": "259759",
    "end": "264960"
  },
  {
    "text": "once the request would reach the service this the authenticating proxy would check to see if the user is",
    "start": "264960",
    "end": "270720"
  },
  {
    "text": "authenticated and if not just bounce them over to the identity provider to complete authentication",
    "start": "270720",
    "end": "276479"
  },
  {
    "text": "and then once the user is logged in the sample sidecar would set an http header that contained the subject which",
    "start": "276479",
    "end": "282880"
  },
  {
    "text": "was a user or application and then it would sort of be up to the service owner to figure out what to do",
    "start": "282880",
    "end": "287919"
  },
  {
    "text": "with that in terms of authorization this also required a fair deal of setup",
    "start": "287919",
    "end": "293120"
  },
  {
    "text": "for our users first of all they needed to like set up the sidecar they also needed to talk to",
    "start": "293120",
    "end": "298400"
  },
  {
    "text": "it to get like a saml integration set up with our identity provider um or to have",
    "start": "298400",
    "end": "303680"
  },
  {
    "text": "groups created for example and another problem here is that saml as",
    "start": "303680",
    "end": "310320"
  },
  {
    "text": "a protocol for the most part isn't really friendly to non-browser clients um so when people needed to provide like",
    "start": "310320",
    "end": "317120"
  },
  {
    "text": "api access for example they just passed like a bypass header to circumvent authen",
    "start": "317120",
    "end": "322320"
  },
  {
    "text": "entirely which you know obviously isn't good",
    "start": "322320",
    "end": "326319"
  },
  {
    "start": "326000",
    "end": "351000"
  },
  {
    "text": "and so obviously there were a lot of problems at this crawl stage as i mentioned earlier creating these often integrations",
    "start": "327680",
    "end": "334240"
  },
  {
    "text": "was still a request driven process that involved users reaching out to it or opening a ticket with them to have",
    "start": "334240",
    "end": "340880"
  },
  {
    "text": "that done also creating and modifying groups in our identity provider was still like a request driven process as well as",
    "start": "340880",
    "end": "347360"
  },
  {
    "text": "assigning access to these authentication integrations um so now i'll talk about the next stage",
    "start": "347360",
    "end": "353600"
  },
  {
    "text": "which i'll say is the walk phase and um you know since i met you know i",
    "start": "353600",
    "end": "358800"
  },
  {
    "start": "356000",
    "end": "481000"
  },
  {
    "text": "mentioned that you know we realized there were a lot of problems in the the crawl stage you know to solve them and",
    "start": "358800",
    "end": "364400"
  },
  {
    "text": "uh you know we sort of set out to uh to do a couple of things um and",
    "start": "364400",
    "end": "370160"
  },
  {
    "text": "starting uh you know starting by choosing an authentication and authorization standard",
    "start": "370160",
    "end": "375680"
  },
  {
    "text": "um so for for humans like human to service authentication we kind of settled on oidc which is open",
    "start": "375680",
    "end": "382080"
  },
  {
    "text": "id connect which is like an authentication extension to oauth 2.",
    "start": "382080",
    "end": "388479"
  },
  {
    "text": "we also built a custom entitlement based authorization broker that we'll call c z",
    "start": "388479",
    "end": "395199"
  },
  {
    "text": "we also set out to build self-service tools to promote use of this standard one of those such tools is something",
    "start": "395199",
    "end": "401919"
  },
  {
    "text": "called identity orchestration platform or iop and iop has a lot of functionality but",
    "start": "401919",
    "end": "407840"
  },
  {
    "text": "one thing in particular that's worth noting here is that rather than users having to create",
    "start": "407840",
    "end": "413440"
  },
  {
    "text": "a saml or oidc integration directly with an identity provider or like askit to do it",
    "start": "413440",
    "end": "419360"
  },
  {
    "text": "we built a web a web app that allowed them to do that was like a self-service as a self-service option",
    "start": "419360",
    "end": "426160"
  },
  {
    "text": "um we also wanted to build frameworks and libraries to foster implementation of these standards",
    "start": "426160",
    "end": "431599"
  },
  {
    "text": "this included things like opinionated often and off z libraries and commonly uh used languages at cruz",
    "start": "431599",
    "end": "437520"
  },
  {
    "text": "um an auth another auth proxy that used oidc rather than saml",
    "start": "437520",
    "end": "443039"
  },
  {
    "text": "and also was able to validate tokens coming from ciatzy",
    "start": "443039",
    "end": "448560"
  },
  {
    "text": "as well as an authentication cli tool um that was used for like retrieving and",
    "start": "448560",
    "end": "453680"
  },
  {
    "text": "storing uh non-browser client credentials for humans um we also sort of settled on offline",
    "start": "453680",
    "end": "460400"
  },
  {
    "text": "tokens or jwts that were minted by ciatze and for those that aren't like already",
    "start": "460400",
    "end": "466800"
  },
  {
    "text": "familiar with jwts or jots um they're basically usually the payload of the json web signature",
    "start": "466800",
    "end": "472560"
  },
  {
    "text": "um which is like an in our json blobs containing like structured data or claims that can be cryptographically",
    "start": "472560",
    "end": "478960"
  },
  {
    "text": "verified um okay so oh boy now we're now we're at this diagram",
    "start": "478960",
    "end": "485120"
  },
  {
    "text": "it's a lot going on but and you know you can also tell that uh you know roman made it in my case",
    "start": "485120",
    "end": "490319"
  },
  {
    "text": "because he you know he worked for microsoft for a long time and he put the dll icon on here so",
    "start": "490319",
    "end": "495599"
  },
  {
    "text": "but uh nonetheless um moving on so yeah we'll go ahead and break it down so",
    "start": "495599",
    "end": "501680"
  },
  {
    "text": "um so we'll start with ciaz which i mentioned earlier and i also said that it you know has to mint tokens",
    "start": "501680",
    "end": "507840"
  },
  {
    "text": "um but um you know how does it go you know how how does autism this authorization broker meant these tokens",
    "start": "507840",
    "end": "514399"
  },
  {
    "text": "and what do they contain um so firstly um seattleze would need to know about or be",
    "start": "514399",
    "end": "520640"
  },
  {
    "text": "able to reason about what users and groups exist at cruz and like what you know users are you know what um groups",
    "start": "520640",
    "end": "526800"
  },
  {
    "text": "users are members of um",
    "start": "526800",
    "end": "532480"
  },
  {
    "text": "once the you know see autistic system is able to like talk to the idp in order to figure out like what users and groups",
    "start": "532480",
    "end": "538399"
  },
  {
    "text": "are are present um it's then able uh you know or like service owners at that point are able to create um applications",
    "start": "538399",
    "end": "545920"
  },
  {
    "text": "um in this system um and that allows um this authorization broker to you know um",
    "start": "545920",
    "end": "552800"
  },
  {
    "text": "uh assign or allow service owners rather the ability to assign various permissions i mentioned entitlements",
    "start": "552800",
    "end": "558240"
  },
  {
    "text": "earlier um it is not you know they can assign permissions to various users groups or even other applications so",
    "start": "558240",
    "end": "564000"
  },
  {
    "text": "it's sort of like a cert like a record of like internal applications at cruz um that we you know that is used for",
    "start": "564000",
    "end": "570880"
  },
  {
    "text": "authorization so with this information autism is able",
    "start": "570880",
    "end": "576160"
  },
  {
    "text": "to create these tokens which are you know contain claims um that can be verified um",
    "start": "576160",
    "end": "581680"
  },
  {
    "text": "and the claim you know speaking of verification you know the the tokens themselves are cryptographically signed",
    "start": "581680",
    "end": "586959"
  },
  {
    "text": "like i mentioned but how do you go about verifying them so in this case we gave service owners two options basically",
    "start": "586959",
    "end": "593680"
  },
  {
    "text": "um in one case they're you know they could use a library like the opinionated often and nazi library that i mentioned",
    "start": "593680",
    "end": "600240"
  },
  {
    "text": "earlier to validate tokens as well as to handle the oidc authentication with our",
    "start": "600240",
    "end": "605600"
  },
  {
    "text": "identity provider the other option is the sidecar which also does oidc authentication and",
    "start": "605600",
    "end": "612320"
  },
  {
    "text": "and is able to validate these tokens directly from ciauthc and the reason why some service owners",
    "start": "612320",
    "end": "618160"
  },
  {
    "text": "may choose to use a library over a sidecar um is for example if they needed more finely grained authorization",
    "start": "618160",
    "end": "624000"
  },
  {
    "text": "controls um for example to be able to authorize based on application state which is something that like the sidecar",
    "start": "624000",
    "end": "629680"
  },
  {
    "text": "would have no context of and only be able to authorize things based on like the work like the um",
    "start": "629680",
    "end": "635920"
  },
  {
    "text": "the http like request or like the path route rather",
    "start": "635920",
    "end": "642320"
  },
  {
    "text": "also astute observers may notice that hey what about oidc like how do you get a ciat z token then and in this case we",
    "start": "642320",
    "end": "649200"
  },
  {
    "text": "don't actually get a c out z like a jwt token um what happens in that case is",
    "start": "649200",
    "end": "654560"
  },
  {
    "text": "the after the user authenticates um the we do like a real time api call with clc",
    "start": "654560",
    "end": "660640"
  },
  {
    "text": "to see what actions or you know or operations they're entitled to perform",
    "start": "660640",
    "end": "666720"
  },
  {
    "text": "and now i'm going to pass it off to roman to actually talk about some of the problems with this approach and then how we you know",
    "start": "666720",
    "end": "672959"
  },
  {
    "text": "how we built the next stage of it to address them",
    "start": "672959",
    "end": "677279"
  },
  {
    "start": "678000",
    "end": "911000"
  },
  {
    "text": "all right so um [Music] james talked about the walk stage which you know was definitely an improvement",
    "start": "678560",
    "end": "684480"
  },
  {
    "text": "over the crawl stage no doubt about that um but it's lots of problems that we didn't uh like so much especially in",
    "start": "684480",
    "end": "690880"
  },
  {
    "text": "security so you know the first most obvious problem is there's like no enforcement of any of the stuff right",
    "start": "690880",
    "end": "695920"
  },
  {
    "text": "like yeah we're providing some libraries and some side cars and people can use them but they don't have to uh we",
    "start": "695920",
    "end": "701440"
  },
  {
    "text": "recommend that they do but you know coming from a kind of a security side right we definitely don't",
    "start": "701440",
    "end": "706720"
  },
  {
    "text": "want to be in a position where this is an optional thing um so",
    "start": "706720",
    "end": "711760"
  },
  {
    "text": "you know if you're going to choose the the library that frankly a lot of folks have um you know you need to",
    "start": "711760",
    "end": "717839"
  },
  {
    "text": "change your code right you need to pull in this library you need to change a bunch of code you need to call it uh you",
    "start": "717839",
    "end": "723040"
  },
  {
    "text": "need to put in the right path you need to also you know as this library is changing right like as we fix it up find bugs fix them you have to go",
    "start": "723040",
    "end": "730160"
  },
  {
    "text": "and update it right so there's a whole cycle there um and you know james mentioned that your",
    "start": "730160",
    "end": "737040"
  },
  {
    "text": "permissions or entitlements are actually encoded into this jwt right which is",
    "start": "737040",
    "end": "742320"
  },
  {
    "text": "great but you know as these applications evolve they become bigger and as they become bigger a user has",
    "start": "742320",
    "end": "748160"
  },
  {
    "text": "more permissions to various aspects of you know this application and all those permissions need to be shoehorned into",
    "start": "748160",
    "end": "753519"
  },
  {
    "text": "the token so now the token's growing and growing um in these tokens jwts uh are",
    "start": "753519",
    "end": "759040"
  },
  {
    "text": "sent as headers right and then that means the header size is growing and as that grows more and more right then",
    "start": "759040",
    "end": "764880"
  },
  {
    "text": "you'll hit the dreaded i think it's http 431 or something like that",
    "start": "764880",
    "end": "770320"
  },
  {
    "text": "for 24.29 for 29. sorry um and uh you know that's really hard to",
    "start": "770320",
    "end": "775440"
  },
  {
    "text": "debug right because depending on the state of your headers at any given time this will fail or succeed so it's just",
    "start": "775440",
    "end": "781120"
  },
  {
    "text": "not great um you know for us in security right that's great that we're providing all these libraries and side cars for",
    "start": "781120",
    "end": "786959"
  },
  {
    "text": "folks but you know maintaining them is really hard you know at the end of the day we're kind of a security team we're not just like a development team uh but",
    "start": "786959",
    "end": "793360"
  },
  {
    "text": "we have to not only support these libraries but support them in like four or five different languages right uh with their own like weird gotchas",
    "start": "793360",
    "end": "799519"
  },
  {
    "text": "without really a common core um and you know as these languages languages change you know the libraries",
    "start": "799519",
    "end": "804880"
  },
  {
    "text": "that they require change and we have to like figure all that out and then you know build them for every different like",
    "start": "804880",
    "end": "810639"
  },
  {
    "text": "every language has its own package manager so it's pretty difficult but even then you know when we build it",
    "start": "810639",
    "end": "816720"
  },
  {
    "text": "let's say we figured all that out and we kind of did for a while um",
    "start": "816720",
    "end": "822240"
  },
  {
    "text": "to get folks to use the latest version is very difficult as you know you might imagine so uh you know we'll what what",
    "start": "822240",
    "end": "828800"
  },
  {
    "text": "ends up happening to us a lot of the time is you know we'll release a new version and you know maybe it'll have a bug in it uh but nobody",
    "start": "828800",
    "end": "835760"
  },
  {
    "text": "uses it until like four or five months pass and then somebody starts using it and they're like oh my god everything's broken and we have to remember what we",
    "start": "835760",
    "end": "841680"
  },
  {
    "text": "did five months ago which you know we're really bad at um and you know lastly one of the other big",
    "start": "841680",
    "end": "848240"
  },
  {
    "text": "problems of this whole solution is that all the policies all the you know this user has access to these things that all",
    "start": "848240",
    "end": "853680"
  },
  {
    "text": "lives like deep deep inside the application you know so in order to like figure that out you would have to",
    "start": "853680",
    "end": "859040"
  },
  {
    "text": "go to the repo of the application understand the code figure out the language they're using you know dig around try to figure out the call paths",
    "start": "859040",
    "end": "866079"
  },
  {
    "text": "um super difficult to do especially in a scenario where security team you know maybe needs to audit",
    "start": "866079",
    "end": "872399"
  },
  {
    "text": "you know hundreds of these right not really scalable and lastly you know kind of a high level problem here is",
    "start": "872399",
    "end": "879040"
  },
  {
    "text": "that we we being the security team in this case uh you know we don't really control",
    "start": "879040",
    "end": "884480"
  },
  {
    "text": "both ends of this equation what i mean by that is we control you know we have the broker that's minting the tokens but",
    "start": "884480",
    "end": "889600"
  },
  {
    "text": "we don't control the code that's validating them and the reason that's a problem is that it doesn't really allow us to iterate",
    "start": "889600",
    "end": "894880"
  },
  {
    "text": "and make this n10 experience better by using you know maybe different tokens uh",
    "start": "894880",
    "end": "899920"
  },
  {
    "text": "using maybe tokens that don't have some of these limitations uh we the only way we could do that is then we have to go",
    "start": "899920",
    "end": "906079"
  },
  {
    "text": "to every service and say hey you need a bunch of code changes you need a bunch of code changes right that's again not scalable so to move on to the uh",
    "start": "906079",
    "end": "914959"
  },
  {
    "start": "914000",
    "end": "1030000"
  },
  {
    "text": "run phase well i know we initially said run phase but it's more of a speed walking phase for us",
    "start": "914959",
    "end": "921120"
  },
  {
    "text": "a little presumptuous to say that we're at the run phase but there's a bunch of things that we kind of want to improve here right so",
    "start": "921120",
    "end": "927360"
  },
  {
    "text": "the first thing is we want to be able to move authentication and authorization um",
    "start": "927360",
    "end": "932800"
  },
  {
    "text": "to opt out as opposed to an opt-in what that means kind of in simple terms is that",
    "start": "932800",
    "end": "937920"
  },
  {
    "text": "we want to just make this secure by default so that if you have a service you deploy a service as a developer you",
    "start": "937920",
    "end": "942959"
  },
  {
    "text": "know it has authentication it has authorization right just from the get go and then for some reason you want to do something custom then maybe you don't",
    "start": "942959",
    "end": "949279"
  },
  {
    "text": "want our authentication authorization that's cool too but then you have to opt out of that right whereas you know kind",
    "start": "949279",
    "end": "955920"
  },
  {
    "text": "of in this state uh you have to specifically add authentication authorization to your",
    "start": "955920",
    "end": "962079"
  },
  {
    "text": "application so um the next thing is you know we want to you notice we built a lot of libraries and site cars and stuff",
    "start": "962079",
    "end": "968639"
  },
  {
    "text": "you know which is great you know gave us something to do for a while uh but ideally you know we don't really want to",
    "start": "968639",
    "end": "974639"
  },
  {
    "text": "support all that stuff going forward as i mentioned all the problems around it so we want to you know participate in this amazing open source",
    "start": "974639",
    "end": "980839"
  },
  {
    "text": "ecosystem um and you know both use the fruits of other people's labor obviously but also you know contribute our own",
    "start": "980839",
    "end": "987360"
  },
  {
    "text": "right so that we we submit uh when we solve solutions for our company we're actually solving it for others as well",
    "start": "987360",
    "end": "993440"
  },
  {
    "text": "um and uh you know also we want to move this policy code from just being buried deep within the application we're going",
    "start": "993440",
    "end": "999759"
  },
  {
    "text": "to move it out move it somewhere where it's a standardized place where security teams can review it other people can",
    "start": "999759",
    "end": "1005920"
  },
  {
    "text": "review it and you know verify it and make sure it's okay",
    "start": "1005920",
    "end": "1010959"
  },
  {
    "text": "without having to dive into the application itself um and you know obviously right as if that wasn't tough",
    "start": "1010959",
    "end": "1016399"
  },
  {
    "text": "enough we want to do all this without going to every service and saying you got to change a bunch of code right because you know frankly anybody got",
    "start": "1016399",
    "end": "1022959"
  },
  {
    "text": "time for that so next diagram right so a bunch of new components here i'll go through them",
    "start": "1022959",
    "end": "1029839"
  },
  {
    "text": "don't worry uh so let's start here right so the first move that we wanted to make is uh",
    "start": "1029839",
    "end": "1037360"
  },
  {
    "start": "1030000",
    "end": "1151000"
  },
  {
    "text": "from using the nginx ingress uh to using an ister ingress uh now why would we",
    "start": "1037360",
    "end": "1043038"
  },
  {
    "text": "want to do that well the ester ingress yeah it is actually powered by envoy",
    "start": "1043039",
    "end": "1048160"
  },
  {
    "text": "and envoy has a lot of a lot of cool things outside of this but one cool thing that",
    "start": "1048160",
    "end": "1053360"
  },
  {
    "text": "we wanted to leverage um was its uh extensibility mechanisms it's",
    "start": "1053360",
    "end": "1058799"
  },
  {
    "text": "got a bunch of those one of them is called external authorization what external authorization does is it basically lets you define another",
    "start": "1058799",
    "end": "1066640"
  },
  {
    "text": "service that envoy will call for every request and it will basically let that service",
    "start": "1066640",
    "end": "1072160"
  },
  {
    "text": "either approve the request or deny the request so that's very helpful but in addition",
    "start": "1072160",
    "end": "1078320"
  },
  {
    "text": "if you deny the request you can actually uh mutate it as well right so we leverage that by having another",
    "start": "1078320",
    "end": "1085360"
  },
  {
    "text": "service live alongside the ingress and hooking into the ingress via this external authorization mechanism that i",
    "start": "1085360",
    "end": "1091919"
  },
  {
    "text": "described and for every request this other service called cappy basically takes a request",
    "start": "1091919",
    "end": "1097919"
  },
  {
    "text": "and says hey is this request authenticated and if it's not it denies the request",
    "start": "1097919",
    "end": "1103760"
  },
  {
    "text": "but it actually denies it by overwriting the response and sends the user 302 to the idp",
    "start": "1103760",
    "end": "1111760"
  },
  {
    "text": "now the user completes the idp flow right logs in and because we when we do that 302 we",
    "start": "1111760",
    "end": "1118000"
  },
  {
    "text": "actually set a redirect url for the idp um the user gets bounced all the way back to where they came from to",
    "start": "1118000",
    "end": "1124640"
  },
  {
    "text": "their original request this time you know cappy looks at the request and says okay you've already authenticated with the idp i'm happy",
    "start": "1124640",
    "end": "1131039"
  },
  {
    "text": "with that i'm gonna actually just set a cookie just so you don't have to go through this flow again",
    "start": "1131039",
    "end": "1136320"
  },
  {
    "text": "and then it lets the request through right so what this allows us to ensure is that any request that is coming from",
    "start": "1136320",
    "end": "1141919"
  },
  {
    "text": "outside the cluster to inside the cluster has been authenticated right just",
    "start": "1141919",
    "end": "1147440"
  },
  {
    "text": "there's no way to do it otherwise right it doesn't matter which service you deploy so",
    "start": "1147440",
    "end": "1153200"
  },
  {
    "start": "1151000",
    "end": "1329000"
  },
  {
    "text": "requests been authenticated that's great but you know we also want authorization obviously so how do we do that well",
    "start": "1153200",
    "end": "1159200"
  },
  {
    "text": "we decided to move to a different site car you'll notice they're different from the one on the",
    "start": "1159200",
    "end": "1166240"
  },
  {
    "text": "right um um and this is an istio proxy sidecar right because now we're living in the",
    "start": "1166240",
    "end": "1171600"
  },
  {
    "text": "esteo ecosystem um now istio proxy what's really cool about the esto proxy sidecar is guess what it's also envoy",
    "start": "1171600",
    "end": "1178320"
  },
  {
    "text": "it's the same envoy um but this time instead of living uh kind of globally in the cluster it's living inside of the",
    "start": "1178320",
    "end": "1185840"
  },
  {
    "text": "the context of the service itself right uh basically but doing the same thing right so it",
    "start": "1185840",
    "end": "1191440"
  },
  {
    "text": "takes every request and proxies it through now because it's envoy guess what extensibility mechanism it has",
    "start": "1191440",
    "end": "1197600"
  },
  {
    "text": "external authorization right so let's use that again uh but this time slightly more appropriately by actually allowing or",
    "start": "1197600",
    "end": "1204720"
  },
  {
    "text": "disallowing the request right so we need something else to hook into",
    "start": "1204720",
    "end": "1211280"
  },
  {
    "text": "uh this envoy right to allow or disallow the request we had capi uh globally right so what are we gonna",
    "start": "1211280",
    "end": "1217280"
  },
  {
    "text": "do here well there's another really cool project called uh open policy agent right so open policy agent what it",
    "start": "1217280",
    "end": "1223360"
  },
  {
    "text": "allows you to do is it allows you to hook it up to your sidecar via external",
    "start": "1223360",
    "end": "1228799"
  },
  {
    "text": "authorization and then for every request open policy agent basically lets you write a policy in this language called",
    "start": "1228799",
    "end": "1235600"
  },
  {
    "text": "rego and basically the policy is if you think about it as as implementing a function",
    "start": "1235600",
    "end": "1242080"
  },
  {
    "text": "that always you know returns true or false right so you can have kind of a big flow of things that you can do but",
    "start": "1242080",
    "end": "1247120"
  },
  {
    "text": "at the end of the day you're returning true or false you're either letting those requests through or you're not um",
    "start": "1247120",
    "end": "1252640"
  },
  {
    "text": "and in our case what we did was we actually used the same exact policy",
    "start": "1252640",
    "end": "1258799"
  },
  {
    "text": "for every service in our cluster we were able to do that because open policy agent also lets this policy",
    "start": "1258799",
    "end": "1265120"
  },
  {
    "text": "um be augmented with additional data you can think of it as like parameters to a function right so the actual",
    "start": "1265120",
    "end": "1271679"
  },
  {
    "text": "implementation of the rego policy really all it does is it says okay like give me the",
    "start": "1271679",
    "end": "1276799"
  },
  {
    "text": "the routes that uh give me the the route that the uh request is trying to access like the",
    "start": "1276799",
    "end": "1282799"
  },
  {
    "text": "path right let's say the request is trying to access my application slash admin um so it says okay you're trying to",
    "start": "1282799",
    "end": "1288880"
  },
  {
    "text": "access slash admin so it gets that from the request and then it says okay this is additional data that it has",
    "start": "1288880",
    "end": "1294240"
  },
  {
    "text": "specific to the application so it's the access admin which permissions do you need so it looks at that information and then",
    "start": "1294240",
    "end": "1300400"
  },
  {
    "text": "it looks at the request again to look at the incoming token the jwt right that's attached as a header as we said",
    "start": "1300400",
    "end": "1306240"
  },
  {
    "text": "um and says okay does this token have those permissions right and that operation of",
    "start": "1306240",
    "end": "1312080"
  },
  {
    "text": "matching the routes and their permissions to the token permissions is the same across all",
    "start": "1312080",
    "end": "1317679"
  },
  {
    "text": "applications right the only thing that's different is that those two lists right the lists of",
    "start": "1317679",
    "end": "1322720"
  },
  {
    "text": "you know which routes need which permissions and you know the actual token itself right",
    "start": "1322720",
    "end": "1330159"
  },
  {
    "start": "1329000",
    "end": "1410000"
  },
  {
    "text": "so you might be wondering okay that's cool and everything but uh you know as i mentioned right like the open policy",
    "start": "1330159",
    "end": "1335919"
  },
  {
    "text": "agent actually needs to have some data that's specific to every application like these extra files right",
    "start": "1335919",
    "end": "1341200"
  },
  {
    "text": "so where does that come from well the other cool thing that it has is uh it supports something called a bundle api",
    "start": "1341200",
    "end": "1346799"
  },
  {
    "text": "so bundle api is is really just a polling mechanism using http uh that it",
    "start": "1346799",
    "end": "1352640"
  },
  {
    "text": "can pull various cloud providers uh so it already supports polling uh like his three buckets you know gcs buckets like",
    "start": "1352640",
    "end": "1359360"
  },
  {
    "text": "all that kind of stuff so we leverage that so we basically tell it to pull a bucket that's specific to the application and in its polling mechanism",
    "start": "1359360",
    "end": "1366559"
  },
  {
    "text": "it already supports caching as well right so it knows it just uses basic http caching using e-tags",
    "start": "1366559",
    "end": "1373360"
  },
  {
    "text": "so it knows if there's a change and if there is it downloads it loads the new policy the new brego in our case it's always the same just loads the",
    "start": "1373360",
    "end": "1379919"
  },
  {
    "text": "additional files and it's good to go um now how does this bucket get populated well remember james talked",
    "start": "1379919",
    "end": "1386240"
  },
  {
    "text": "about clz having all this context right having the users their groups",
    "start": "1386240",
    "end": "1391520"
  },
  {
    "text": "the various permissions that users are allowed to you know action on a given",
    "start": "1391520",
    "end": "1396799"
  },
  {
    "text": "application well all we did was we took all the clz right we serialize all that data on a regular cadence",
    "start": "1396799",
    "end": "1404159"
  },
  {
    "text": "and we write it to each application's bucket basically",
    "start": "1404159",
    "end": "1410880"
  },
  {
    "start": "1410000",
    "end": "1423000"
  },
  {
    "text": "so you know that's great and all but you know it can be possibly that simple so it wasn't and it isn't",
    "start": "1410960",
    "end": "1417280"
  },
  {
    "text": "um so you know let's kind of go step by step to see what the challenges were so and kind of how we dealt with some of",
    "start": "1417280",
    "end": "1423120"
  },
  {
    "start": "1423000",
    "end": "1578000"
  },
  {
    "text": "them so um basically moving from nginx to envoy you know that pretty much involves for",
    "start": "1423120",
    "end": "1429600"
  },
  {
    "text": "the most part taking an ingress resources defined in each service and converting it to kind",
    "start": "1429600",
    "end": "1435120"
  },
  {
    "text": "of a matching virtual service resource they're kind of analogous not exactly but kind of",
    "start": "1435120",
    "end": "1441440"
  },
  {
    "text": "and istio has a utility that lets you kind of convert from one to the other but it doesn't always work uh you know",
    "start": "1441440",
    "end": "1447279"
  },
  {
    "text": "depending on the complexity of your ingress resource and the routing rules that you set up so you know that required some",
    "start": "1447279",
    "end": "1453919"
  },
  {
    "text": "hand-holding and kind of doing some things by hand one thing that i want to mention that we did there which",
    "start": "1453919",
    "end": "1459600"
  },
  {
    "text": "was a good idea and i think it helped folks is we actually ran both side by side for every cluster",
    "start": "1459600",
    "end": "1465360"
  },
  {
    "text": "and the way we decided you know which uh like when you do a request to a service which ingress to use is just",
    "start": "1465360",
    "end": "1471520"
  },
  {
    "text": "simply by the dns so the dns of every application was mapped to the cname to",
    "start": "1471520",
    "end": "1476880"
  },
  {
    "text": "the dns of whichever ingress they were using so in the beginning they were all cnamed to the nginx ingress",
    "start": "1476880",
    "end": "1482400"
  },
  {
    "text": "and as folks you know made changes right they could actually create a new dns that uh c name",
    "start": "1482400",
    "end": "1489440"
  },
  {
    "text": "to the envoy ingress to the steering grass um and then just test that out on their own you know mucking around with a",
    "start": "1489440",
    "end": "1495279"
  },
  {
    "text": "virtual service but while they're doing all that nobody you know the ingress the nginx ingress doesn't look in that data",
    "start": "1495279",
    "end": "1500320"
  },
  {
    "text": "so it doesn't break anything so they can iterate they can make sure it works um and then when they're happy with it they",
    "start": "1500320",
    "end": "1505600"
  },
  {
    "text": "just switch over the dns to the environments and off they go",
    "start": "1505600",
    "end": "1510799"
  },
  {
    "text": "so that's kind of how we are handling the nginx envoy uh ingress migration so with capi uh you",
    "start": "1510799",
    "end": "1518559"
  },
  {
    "text": "know we obviously want to enable it globally on the whole cluster but you know we got to start with still an opt-in model make sure you know things",
    "start": "1518559",
    "end": "1525200"
  },
  {
    "text": "don't break and the way we did that is we basically um",
    "start": "1525200",
    "end": "1530559"
  },
  {
    "text": "had people add an annotation in the virtual service uh and then we have cappy basically scanning the cluster and",
    "start": "1530559",
    "end": "1536559"
  },
  {
    "text": "saying hey if i see a service with this annotation i'm gonna authenticate traffic routing to it if i don't see",
    "start": "1536559",
    "end": "1542080"
  },
  {
    "text": "that annotation i'm just going to step out of the way i mean this is kind of like a solution uh for the migration now",
    "start": "1542080",
    "end": "1548559"
  },
  {
    "text": "that code is going to get completely removed you know once everybody's migrated uh so you might be wondering like a lot of these applications you",
    "start": "1548559",
    "end": "1554320"
  },
  {
    "text": "know as services as james said you know are using these libraries these legacy",
    "start": "1554320",
    "end": "1559600"
  },
  {
    "text": "site cars legacy libraries maybe doing things on their own so how do we handle that well the good news is that's totally",
    "start": "1559600",
    "end": "1564720"
  },
  {
    "text": "cool like we can have multiple we can do authentication multiple times and that still achieves their goals so for",
    "start": "1564720",
    "end": "1570640"
  },
  {
    "text": "example what can what can happen is you'll get a request into the cluster cappy will do that whole magic of",
    "start": "1570640",
    "end": "1576799"
  },
  {
    "text": "authenticating the request uh the request will go to the the actual service and the service will",
    "start": "1576799",
    "end": "1582000"
  },
  {
    "start": "1578000",
    "end": "1652000"
  },
  {
    "text": "authenticate it again right um sorry authenticate it again",
    "start": "1582000",
    "end": "1588880"
  },
  {
    "text": "yeah security people don't install their updates um anyways uh but the good news is that our idp",
    "start": "1589039",
    "end": "1595840"
  },
  {
    "text": "already has a session for that user and so really it'll just be an additional redirect so from a user",
    "start": "1595840",
    "end": "1601360"
  },
  {
    "text": "perspective it's not a perceivable difference even though authentication is technically happening twice right",
    "start": "1601360",
    "end": "1608159"
  },
  {
    "text": "and that like kind of latency of that additional redirect is only present while you have this two authentication",
    "start": "1608159",
    "end": "1613679"
  },
  {
    "text": "mechanism uh so once that's removed you know you don't have to do that but the cool thing is you know we can we can",
    "start": "1613679",
    "end": "1619600"
  },
  {
    "text": "still enable it and say the entire cluster has authentication some folks have it twice but none have it zero times right so",
    "start": "1619600",
    "end": "1626720"
  },
  {
    "text": "that's the goal um and then uh we can also integrate with some of these libraries and site cars",
    "start": "1626720",
    "end": "1632720"
  },
  {
    "text": "that we provided previously because you know we do own them um so we can you know add some code there to make cappy",
    "start": "1632720",
    "end": "1639120"
  },
  {
    "text": "kind of more intelligently reason about some of these services yes it requires folks to upgrade to the latest versions",
    "start": "1639120",
    "end": "1644640"
  },
  {
    "text": "and i mentioned some of the problems with that but that's kind of another option so moving on uh to enable the steel proxy stu makes it relatively",
    "start": "1644640",
    "end": "1651760"
  },
  {
    "text": "simple you just need to set this annotation and the istio proxy will be injected",
    "start": "1651760",
    "end": "1656960"
  },
  {
    "start": "1652000",
    "end": "1713000"
  },
  {
    "text": "into the pod you can set the sanitation at you know the name space level the pod level a bunch of different levels",
    "start": "1656960",
    "end": "1662799"
  },
  {
    "text": "um once you have that you can actually start working with the opa agent the open policy agent um",
    "start": "1662799",
    "end": "1669440"
  },
  {
    "text": "and uh that's again opt-in so you uh set the soapy agent enabled annotation and",
    "start": "1669440",
    "end": "1674799"
  },
  {
    "text": "then you get this additional sidecar now we're up to two you can see how many sidecars you can",
    "start": "1674799",
    "end": "1680080"
  },
  {
    "text": "shove into every pod um and as i mentioned you know there's a single",
    "start": "1680080",
    "end": "1685679"
  },
  {
    "text": "regular implementation of the policy in every for every service and really that's doing",
    "start": "1685679",
    "end": "1691919"
  },
  {
    "text": "what we like to call stateless authorization so basically it's just looking at the request just looking at the token just looking",
    "start": "1691919",
    "end": "1697679"
  },
  {
    "text": "at the local data that it has to decide if that request should be authorized or not now if a service needs to do finer",
    "start": "1697679",
    "end": "1704000"
  },
  {
    "text": "grain authorization so for example it's maybe it has a matching database that it needs to look up a user in and kind of",
    "start": "1704000",
    "end": "1709120"
  },
  {
    "text": "augment this this uh authorization data um it can still do that right so the",
    "start": "1709120",
    "end": "1716320"
  },
  {
    "start": "1713000",
    "end": "1732000"
  },
  {
    "text": "idea is that you know the ob agent does one authorization step right and then it",
    "start": "1716320",
    "end": "1721600"
  },
  {
    "text": "can be authorized further by the application itself if they so choose to do that right so",
    "start": "1721600",
    "end": "1727520"
  },
  {
    "text": "again you're doing kind of authorization twice but one is coarse grain one is fine grain",
    "start": "1727520",
    "end": "1733440"
  },
  {
    "text": "and then lastly our clz broker right needs some new ui so that you can go and",
    "start": "1733440",
    "end": "1738640"
  },
  {
    "start": "1736000",
    "end": "1769000"
  },
  {
    "text": "define some of these policies uh you can define you know different routes as i mentioned like you have an admin route and these are the permissions that are",
    "start": "1738640",
    "end": "1744720"
  },
  {
    "text": "required to access it um and you know obviously folks don't just want to use the ui they want to use",
    "start": "1744720",
    "end": "1750880"
  },
  {
    "text": "the ci you know the current ci pipeline to deploy some of the stuff so we also have that as well for them",
    "start": "1750880",
    "end": "1757360"
  },
  {
    "text": "um and then lastly you know as i mentioned uh we want to in the background serialize all this information including the group",
    "start": "1757360",
    "end": "1763600"
  },
  {
    "text": "memberships and push all that to those buckets then the opa agents can read",
    "start": "1763600",
    "end": "1770960"
  },
  {
    "start": "1769000",
    "end": "1856000"
  },
  {
    "text": "so kind of what have we achieved here at the end of the day well i think we can finally make this",
    "start": "1771520",
    "end": "1777360"
  },
  {
    "text": "statement that all services in our cluster have authentication authorization uh that's not something we've been able",
    "start": "1777360",
    "end": "1783600"
  },
  {
    "text": "to say before before it was kind of like maybe they do maybe they don't um",
    "start": "1783600",
    "end": "1788799"
  },
  {
    "text": "authorization policy now does not live in the depths of every service it actually lives",
    "start": "1788799",
    "end": "1794480"
  },
  {
    "text": "in our broker right that can be reviewed can be exported uh our clc broker i mean",
    "start": "1794480",
    "end": "1799760"
  },
  {
    "text": "it could be audited centrally right um we're no longer using you know custom tools that we've built and have to",
    "start": "1799760",
    "end": "1806240"
  },
  {
    "text": "support right we're using open source tooling and the best part of this is actually",
    "start": "1806240",
    "end": "1811520"
  },
  {
    "text": "you know we're not proxying the traffic ourselves right we're using envoy which is you know kind of a battle tested",
    "start": "1811520",
    "end": "1817360"
  },
  {
    "text": "piece of software to do all the proxying and traffic management and all the cool stuff that it does uh we're just kind of",
    "start": "1817360",
    "end": "1822640"
  },
  {
    "text": "hooking into it to provide to augment some of its capabilities a little bit right but we're not doing it ourselves",
    "start": "1822640",
    "end": "1828880"
  },
  {
    "text": "um and best of all you know now we kind of control both the minting part of this equation",
    "start": "1828880",
    "end": "1835600"
  },
  {
    "text": "right the creation of these tokens and also the validation right and all the way through the entire channel this",
    "start": "1835600",
    "end": "1840880"
  },
  {
    "text": "means that you know if tomorrow we like say hey some new standard comes out we don't want to use jwts anymore or we",
    "start": "1840880",
    "end": "1846720"
  },
  {
    "text": "want to sign them differently or something right we can actually change all that without every service having to",
    "start": "1846720",
    "end": "1853679"
  },
  {
    "text": "modify a bunch of code so that's pretty cool um",
    "start": "1853679",
    "end": "1860320"
  },
  {
    "start": "1856000",
    "end": "2021000"
  },
  {
    "text": "but there's more right there's more that's the image i should have used um so there's more that we can do here uh",
    "start": "1860320",
    "end": "1866799"
  },
  {
    "text": "we because we have these osteocyte cars uh we can actually",
    "start": "1866799",
    "end": "1872640"
  },
  {
    "text": "do transparent mtls between services right why can we do that all of a sudden well remember that uh those istio proxy",
    "start": "1872640",
    "end": "1880880"
  },
  {
    "text": "site cards are doing both ingress and egress filtering for each service so now really you can have these two sidecars",
    "start": "1880880",
    "end": "1886799"
  },
  {
    "text": "establish an mtls channel between themselves and so whenever an application wants to talk a service wants to talk to another",
    "start": "1886799",
    "end": "1893120"
  },
  {
    "text": "service it actually funnels through those side cars right so it goes uh egresses out of its internal sidecar and",
    "start": "1893120",
    "end": "1899360"
  },
  {
    "text": "ingresses into the destination services sidecar and that's even cooler because now you",
    "start": "1899360",
    "end": "1905760"
  },
  {
    "text": "can actually have uh mtls between the ingress itself and the service right so",
    "start": "1905760",
    "end": "1911120"
  },
  {
    "text": "that channel is usually not secured right so like for example if the ingress were to add any headers",
    "start": "1911120",
    "end": "1916640"
  },
  {
    "text": "right as part of that request technically speaking you can't trust those headers right because that channel is not secured but if you have mtls",
    "start": "1916640",
    "end": "1923440"
  },
  {
    "text": "between those two endpoints those headers can now be trusted also",
    "start": "1923440",
    "end": "1930399"
  },
  {
    "text": "mtls you know brings you certificates certificates usually bring some form of identity that can be used here and you",
    "start": "1930399",
    "end": "1936880"
  },
  {
    "text": "know we have that now and so now instead of using something like api keys for services to",
    "start": "1936880",
    "end": "1941919"
  },
  {
    "text": "um authenticate and authorize themselves to like say the clc broker or other other systems um they actually they can",
    "start": "1941919",
    "end": "1949039"
  },
  {
    "text": "use their own service identity that is actually rooted in the uh the cloud provider's identity right",
    "start": "1949039",
    "end": "1956640"
  },
  {
    "text": "in terms of the rego uh you know we've had i'll give you one example of a request that we had um so you know",
    "start": "1956640",
    "end": "1964399"
  },
  {
    "text": "somebody wanted to authorize based on the method of the of the http request so as i mentioned you know you can only",
    "start": "1964399",
    "end": "1970320"
  },
  {
    "text": "right now authorize based on the route right so choose admin right sorry but if you wanted to say hey you can",
    "start": "1970320",
    "end": "1976559"
  },
  {
    "text": "access this route but only as a get in this other route only if it's a post you know that's not",
    "start": "1976559",
    "end": "1981919"
  },
  {
    "text": "possible in our uh the regular that everybody uses today right but it'd be really cool it'd be trivial to add this",
    "start": "1981919",
    "end": "1987519"
  },
  {
    "text": "functionality right so um we want to move to a world where this rego is actually it can be modified by",
    "start": "1987519",
    "end": "1994720"
  },
  {
    "text": "services service owners themselves to fit their needs uh but we don't really want to just unleash rego on them as is",
    "start": "1994720",
    "end": "2002159"
  },
  {
    "text": "it's very complicated um so what we're thinking is uh we want to provide some libraries um",
    "start": "2002159",
    "end": "2008399"
  },
  {
    "text": "as well as kind of like a ci pipeline with some linting validation and various you know approvals and various other",
    "start": "2008399",
    "end": "2014399"
  },
  {
    "text": "things so that when they make a change you know we can have some confidence that it is doing what they're intending",
    "start": "2014399",
    "end": "2019919"
  },
  {
    "text": "that it would do so you know if this is uh interesting to you um",
    "start": "2019919",
    "end": "2026720"
  },
  {
    "start": "2021000",
    "end": "2034000"
  },
  {
    "text": "come join us we're hiring uh yeah we also work on self-driving cars",
    "start": "2026720",
    "end": "2032559"
  },
  {
    "text": "um okay and uh so i'd like to uh",
    "start": "2032559",
    "end": "2037919"
  },
  {
    "start": "2034000",
    "end": "2360000"
  },
  {
    "text": "a special thanks to nitish uh at the top there that he couldn't be here today um and it's also actually his birthday",
    "start": "2037919",
    "end": "2044080"
  },
  {
    "text": "today so happy birthday to dish [Applause]",
    "start": "2044080",
    "end": "2049679"
  },
  {
    "text": "cool all right awesome questions",
    "start": "2049679",
    "end": "2057638"
  },
  {
    "text": "yeah so the question was um how do you do service to service authentication and uh in authorization i guess and uh do we",
    "start": "2073200",
    "end": "2079440"
  },
  {
    "text": "use jwts or mtls um so right now we're still using jwts because we're not fully",
    "start": "2079440",
    "end": "2085679"
  },
  {
    "text": "in the istio model of having mtls available now we do when we do have mtls available what we're thinking is we",
    "start": "2085679",
    "end": "2091839"
  },
  {
    "text": "would use mtls again use the same coarse grain fine-grain method right so use coarse-grained uh authorization to say",
    "start": "2091839",
    "end": "2098800"
  },
  {
    "text": "like hey this service can maybe talk to these three other services but nothing else but then layer the jwt on top as the",
    "start": "2098800",
    "end": "2105520"
  },
  {
    "text": "user identity that's actually making that request so kind of use both yeah",
    "start": "2105520",
    "end": "2111599"
  },
  {
    "text": "yeah that's a really good point you know right now we're just simply scale it and and use kubernetes kind of to handle",
    "start": "2135599",
    "end": "2141040"
  },
  {
    "text": "that you know if it blows up we you know have more instances of instances of it available um and we also",
    "start": "2141040",
    "end": "2147680"
  },
  {
    "text": "have multiple clusters so we have cappy kind of one per cluster so we don't have one like globally right so one is kind",
    "start": "2147680",
    "end": "2154400"
  },
  {
    "text": "of matched up with an uh istio ingress and you have you know one is here ingress per cluster",
    "start": "2154400",
    "end": "2159760"
  },
  {
    "text": "so uh i think we just have maybe more clusters in that scenario maybe you folks have",
    "start": "2159760",
    "end": "2165520"
  },
  {
    "text": "less but yeah that's possibly something that we'll have to consider in the future for sure",
    "start": "2165520",
    "end": "2172760"
  },
  {
    "text": "that's a good question good question it was sort of it it predated both of us but i think that yeah i think um sort of",
    "start": "2183359",
    "end": "2189599"
  },
  {
    "text": "like the idea was like to oh i'm sorry yeah yeah so the question was basically that",
    "start": "2189599",
    "end": "2195280"
  },
  {
    "text": "clc broker you know why did we decide to build it and why you know we didn't use something off the",
    "start": "2195280",
    "end": "2200800"
  },
  {
    "text": "shelf yeah so yeah i think it it it did like predate both roman and i at cruz but i think like it was it was",
    "start": "2200800",
    "end": "2207119"
  },
  {
    "text": "originally something that was built um by like a product team for things to do with with like our our product and the",
    "start": "2207119",
    "end": "2214160"
  },
  {
    "text": "car and and sort of like we inherited it because um it was responsible for like dealing with you know making",
    "start": "2214160",
    "end": "2220320"
  },
  {
    "text": "authorization decisions i think it also like provided um you know quite a bit of flexibility in terms of",
    "start": "2220320",
    "end": "2226320"
  },
  {
    "text": "giving um these like service owners that are like registering their applications with this ciat system the ability to",
    "start": "2226320",
    "end": "2232880"
  },
  {
    "text": "like define like i mentioned entitlements so basically like um",
    "start": "2232880",
    "end": "2238079"
  },
  {
    "text": "being able to express um like what what operations are able to be",
    "start": "2238079",
    "end": "2244480"
  },
  {
    "text": "performed by different human and non-human uh subjects um in like a really flexible way um i don't really",
    "start": "2244480",
    "end": "2251440"
  },
  {
    "text": "know of anything like like there are a handful of other like i guess maybe my follow-up question",
    "start": "2251440",
    "end": "2256960"
  },
  {
    "text": "would be like what uh like what alternatives are there like we did also like um at a later point kind",
    "start": "2256960",
    "end": "2262240"
  },
  {
    "text": "of investigate using like oauth for authorization um but it really isn't the same type of",
    "start": "2262240",
    "end": "2268480"
  },
  {
    "text": "you know it didn't really work very well for us in terms of uh yeah you know it's like handling like a delegated",
    "start": "2268480",
    "end": "2273680"
  },
  {
    "text": "authorization but",
    "start": "2273680",
    "end": "2276559"
  },
  {
    "text": "um i don't know we'll go i think you in the back were first yeah",
    "start": "2279680",
    "end": "2287720"
  },
  {
    "text": "so the question was if you have uh like automated testing is that",
    "start": "2300560",
    "end": "2306079"
  },
  {
    "text": "so like if you have like you're trying to do like load testing or something like that um",
    "start": "2306079",
    "end": "2312400"
  },
  {
    "text": "yeah yeah so we uh right now honestly we don't have a great solution for that right now uh we",
    "start": "2312400",
    "end": "2318480"
  },
  {
    "text": "use um but that's a problem that's existed in the past with basically all our other solutions as well and so you",
    "start": "2318480",
    "end": "2324079"
  },
  {
    "text": "know sometimes people will have like test accounts that they'll use in a different dev environment as opposed to",
    "start": "2324079",
    "end": "2329119"
  },
  {
    "text": "using the production environment um and then have a cluster that's specific for for that use case",
    "start": "2329119",
    "end": "2334960"
  },
  {
    "text": "if they need complete end to end right there's nothing like if they're already in the cluster right then they can do that without ever interacting with cappy",
    "start": "2334960",
    "end": "2343520"
  },
  {
    "text": "we're at the end of this session so if anyone has questions you can bring them to the speakers the live stream is going to end now",
    "start": "2343520",
    "end": "2349920"
  },
  {
    "text": "there are additional questions from our virtual attendees that will be placed in the",
    "start": "2349920",
    "end": "2355359"
  },
  {
    "text": "slack channel for y'all to answer thank you [Applause]",
    "start": "2355359",
    "end": "2362219"
  }
]