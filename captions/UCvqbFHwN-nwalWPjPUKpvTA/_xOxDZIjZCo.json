[
  {
    "start": "0",
    "end": "81000"
  },
  {
    "text": "all right I think we're ready to go I've got 3:40 so we're gonna get started hopefully you're here to hear something",
    "start": "30",
    "end": "7109"
  },
  {
    "text": "about container D this is the maintainer z-- track so in this room all those CNC have projects get a chance to do an",
    "start": "7109",
    "end": "13830"
  },
  {
    "text": "intro and then a deep dive there's only two names up here and actually it might",
    "start": "13830",
    "end": "21449"
  },
  {
    "text": "be a bait-and-switch if you're looking at your schedule you thought you'd see Derek McGowan from docker up here Derek's here on the front row he will be",
    "start": "21449",
    "end": "28980"
  },
  {
    "text": "he and I will do the deep dive tomorrow afternoon so if you feel cheated come",
    "start": "28980",
    "end": "34200"
  },
  {
    "text": "back for the deep dive but this is like a a container d family project",
    "start": "34200",
    "end": "42739"
  },
  {
    "text": "we have several the maintainer down here Mike Brown's going to take the second half of this talk and talk through the",
    "start": "42739",
    "end": "49559"
  },
  {
    "text": "CRI plugin akka heroes here he's not speaking but he's one of our maintainer",
    "start": "49559",
    "end": "54870"
  },
  {
    "text": "x' and steven day is here as well so if",
    "start": "54870",
    "end": "60989"
  },
  {
    "text": "you don't get what you wanted out of the talk we're all here we'd be happy to talk to you but we're going to jump in",
    "start": "60989",
    "end": "66900"
  },
  {
    "text": "and take you through container d and again today more of an intro will stay a little bit",
    "start": "66900",
    "end": "72000"
  },
  {
    "text": "higher level and then tomorrow also I think it's also at 3:40 so again 3:40",
    "start": "72000",
    "end": "78750"
  },
  {
    "text": "tomorrow's the deep dive so let's get started a little bit of history who came",
    "start": "78750",
    "end": "85590"
  },
  {
    "start": "81000",
    "end": "192000"
  },
  {
    "text": "here and has never heard of container D alright just a very few hands so",
    "start": "85590",
    "end": "92070"
  },
  {
    "text": "container D started life in 2016 just after the OC I had been formed in 2015",
    "start": "92070",
    "end": "99630"
  },
  {
    "text": "run C was this default implementation and so container D was created within",
    "start": "99630",
    "end": "105600"
  },
  {
    "text": "the docker community specifically Michael Crosby one of our maintainer",
    "start": "105600",
    "end": "110640"
  },
  {
    "text": "'he's creating container d is the simple kind of runtime manager over run C processes so in docker 1.11 you now had",
    "start": "110640",
    "end": "119520"
  },
  {
    "text": "container D running and you can actually restart the docker engine and he would have your containers didn't have to stop",
    "start": "119520",
    "end": "126119"
  },
  {
    "text": "container D would manage those processes that were being executed through OC eyes run C so that was the fair",
    "start": "126119",
    "end": "132819"
  },
  {
    "text": "start again in that same year kubernetes",
    "start": "132819",
    "end": "137939"
  },
  {
    "text": "trying to both handle docker as a runtime but also rocket which was",
    "start": "137939",
    "end": "143739"
  },
  {
    "text": "available at the time created this abstraction called the CRI that contained a runtime interface so that",
    "start": "143739",
    "end": "150909"
  },
  {
    "text": "happened in later in 2016 it was really late 2016 and then early 2017 the",
    "start": "150909",
    "end": "158650"
  },
  {
    "text": "container D was promised to be contributed it was given to the CN CF officially in March of 2017 and it was",
    "start": "158650",
    "end": "166540"
  },
  {
    "text": "really this goal of not just being this run seed manager for the docker engine",
    "start": "166540",
    "end": "172480"
  },
  {
    "text": "but to be a complete sort of core container runtime that supported the OCI image format they used those here",
    "start": "172480",
    "end": "179980"
  },
  {
    "text": "runtime and that would implement the CRI so it was useful for kubernetes as well",
    "start": "179980",
    "end": "186579"
  },
  {
    "text": "and at that time we also added a plug-in architecture that we'll talk about a little bit more so fast-forward to late",
    "start": "186579",
    "end": "194680"
  },
  {
    "text": "last year around coop con in Austin last fall last November I believe we released",
    "start": "194680",
    "end": "201579"
  },
  {
    "text": "container D 1.0 at that time we also stabilized the API and again in the same",
    "start": "201579",
    "end": "209439"
  },
  {
    "text": "kind of timeframe the CRI implementation had an alpha release and so that's where",
    "start": "209439",
    "end": "215889"
  },
  {
    "text": "we were last coop con North America since then early this earlier this year",
    "start": "215889",
    "end": "221650"
  },
  {
    "text": "we did a 1.1 release CRI continued to",
    "start": "221650",
    "end": "226659"
  },
  {
    "text": "progress and had a beta release but more importantly we talked to the CRI plugin",
    "start": "226659",
    "end": "232449"
  },
  {
    "text": "team that was folks at Google folks at IBM Mike Brown here was part of that we",
    "start": "232449",
    "end": "239500"
  },
  {
    "text": "said why don't we just have a single project the the CRI plugin can come into the container d github project we can",
    "start": "239500",
    "end": "246849"
  },
  {
    "text": "work on it together and integrate those projects so container d11 was the culmination of that work in that release",
    "start": "246849",
    "end": "254319"
  },
  {
    "text": "you actually had the CRI plug-in within container D and we'll talk again about",
    "start": "254319",
    "end": "259989"
  },
  {
    "text": "how that looks architectural e as the years progressed we did a 1.2 release",
    "start": "259989",
    "end": "266770"
  },
  {
    "text": "just a few months ago we stabilized the Shem API so now you have other runtimes",
    "start": "266770",
    "end": "272979"
  },
  {
    "text": "other than just run C so if you've heard of G Weiser kind of containers",
    "start": "272979",
    "end": "278379"
  },
  {
    "text": "maybe you recently heard about AWS is firecracker project they're all able to",
    "start": "278379",
    "end": "284199"
  },
  {
    "text": "use this runtime plug ability within container DS so that you can use",
    "start": "284199",
    "end": "289449"
  },
  {
    "text": "container D from a higher layer but drive different runtimes underneath and",
    "start": "289449",
    "end": "294610"
  },
  {
    "text": "so again a lot of the work went into 1.2 as well as I don't think we listed here but the Microsoft folks got a lot of the",
    "start": "294610",
    "end": "302770"
  },
  {
    "text": "windows support into container D 1 dot 2 as well and as we have from the",
    "start": "302770",
    "end": "308020"
  },
  {
    "text": "beginning have had a significant focus on stability so lots of testing and lots",
    "start": "308020",
    "end": "315880"
  },
  {
    "text": "of eyes on the code and using it in different use cases and that's also led",
    "start": "315880",
    "end": "321460"
  },
  {
    "text": "to more extensibility which we'll talk about as well so a little bit about the",
    "start": "321460",
    "end": "327400"
  },
  {
    "start": "324000",
    "end": "478000"
  },
  {
    "text": "why I just kind of walked you through all that history you know docker which again many of you",
    "start": "327400",
    "end": "334360"
  },
  {
    "text": "if you're using kubernetes you continue to use the docker engine as the runtime underneath your kubernetes cluster but",
    "start": "334360",
    "end": "341889"
  },
  {
    "text": "over time the entire docker project and the engine that scope is increased and",
    "start": "341889",
    "end": "348279"
  },
  {
    "text": "it docker does way more things than maybe you need underneath or kubernetes cluster and again you know certain use",
    "start": "348279",
    "end": "357099"
  },
  {
    "text": "cases certain models wanted a a runtime that had smaller footprint or or even",
    "start": "357099",
    "end": "364539"
  },
  {
    "text": "replace certain capabilities the docker provided in-house so you know out of",
    "start": "364539",
    "end": "371289"
  },
  {
    "text": "that really came this idea of a common runtime container D could be valuable to",
    "start": "371289",
    "end": "377199"
  },
  {
    "text": "the kubernetes community it can continue to be valuable as a core runtime underneath the docker engine and now we",
    "start": "377199",
    "end": "384969"
  },
  {
    "text": "have use cases from Alibaba has the pouch container runtime which uses",
    "start": "384969",
    "end": "390940"
  },
  {
    "text": "container D the Cloud Foundry garden engine is all has been written around",
    "start": "390940",
    "end": "396759"
  },
  {
    "text": "run C with our management code they're also moving to container D and so again this idea of just a core",
    "start": "396759",
    "end": "403780"
  },
  {
    "text": "runtime that just supported OCI image OCR runtime spec could be used by many",
    "start": "403780",
    "end": "410000"
  },
  {
    "text": "many use cases it's just a common core runtime and then for cloud providers",
    "start": "410000",
    "end": "415280"
  },
  {
    "text": "will talk through adopters of container D in a few minutes but allowing cloud",
    "start": "415280",
    "end": "421250"
  },
  {
    "text": "providers to have a simpler runtime you know less opinionated than the full",
    "start": "421250",
    "end": "428060"
  },
  {
    "text": "docker engine more extensible so that they could use it within their cloud environment so today IBM cloud and gke",
    "start": "428060",
    "end": "435849"
  },
  {
    "text": "both have the option to use container D and obviously as as that's tested and",
    "start": "435849",
    "end": "442070"
  },
  {
    "text": "stabilizes you can expect that'll be the default at some point in the near future",
    "start": "442070",
    "end": "447220"
  },
  {
    "text": "as I said in March of 2017 container D was contributed to the CN CF and so",
    "start": "447220",
    "end": "453620"
  },
  {
    "text": "again the the parentage of the project that's obviously been important for",
    "start": "453620",
    "end": "459440"
  },
  {
    "text": "certain folks who didn't want to see a single vendor point of control around",
    "start": "459440",
    "end": "466580"
  },
  {
    "text": "the common runtime they wanted to use and then like I've said you know OCI image back runtime spec compliance you",
    "start": "466580",
    "end": "474800"
  },
  {
    "text": "know that that would be a focus of container D as well I'm going to not",
    "start": "474800",
    "end": "480710"
  },
  {
    "start": "478000",
    "end": "555000"
  },
  {
    "text": "read every word on this slide because again when we get into the deep dive if you come back tomorrow we'll talk a lot",
    "start": "480710",
    "end": "487009"
  },
  {
    "text": "more about these components but again there were there were a set of design principles that as we came to to expand",
    "start": "487009",
    "end": "495469"
  },
  {
    "text": "container D from that initial manager of run C to a more complete container",
    "start": "495469",
    "end": "501169"
  },
  {
    "text": "runtime extensibility having loosely coupled components that could be used",
    "start": "501169",
    "end": "506449"
  },
  {
    "text": "separately or together and we'll see how that how that works having stable API is we have a very",
    "start": "506449",
    "end": "512360"
  },
  {
    "text": "clear support policy on the canoe within the container D project you can clearly",
    "start": "512360",
    "end": "517550"
  },
  {
    "text": "see you know there's no breaking API changes between point releases all",
    "start": "517550",
    "end": "523430"
  },
  {
    "text": "that's very clearly stated with clear end dates for support and then unup enya",
    "start": "523430",
    "end": "529820"
  },
  {
    "text": "nated so the fact that that there are definitely defaults within container D but they're all",
    "start": "529820",
    "end": "535709"
  },
  {
    "text": "they're all possibly can be overwritten and each plug-in gets to define their",
    "start": "535709",
    "end": "541720"
  },
  {
    "text": "own configuration and then we have a go client library that allows you to basically bring all these disparate",
    "start": "541720",
    "end": "548950"
  },
  {
    "text": "components together in sort of a common way which you can use that or you can write directly to the services so that's",
    "start": "548950",
    "end": "556149"
  },
  {
    "text": "kind of where we started in this gives you not too busy of a picture but kind",
    "start": "556149",
    "end": "563380"
  },
  {
    "text": "of a complete picture of that architecture and I'm going to walk through just in the next five minutes a",
    "start": "563380",
    "end": "569709"
  },
  {
    "text": "few of the highlights but again I want to reiterate that that tomorrow we'll have more time to kind of dig down into",
    "start": "569709",
    "end": "576550"
  },
  {
    "text": "these components so again you can see that there's a set of services there's",
    "start": "576550",
    "end": "582880"
  },
  {
    "text": "that client API with users above it like kubernetes like talker like pouch or",
    "start": "582880",
    "end": "588160"
  },
  {
    "text": "other runtimes and then there's there's those common services that then drive a",
    "start": "588160",
    "end": "594190"
  },
  {
    "text": "set of runtimes whether we're talking about run C count of containers run HCS",
    "start": "594190",
    "end": "600100"
  },
  {
    "text": "on Windows and then the snapshot errs which I'll talk about in a minute as well so again we have a GU client",
    "start": "600100",
    "end": "608380"
  },
  {
    "text": "library probably one of the most positive things we continue to hear around container D is how great this",
    "start": "608380",
    "end": "616000"
  },
  {
    "text": "library is to use how easy it is to to compose on top of container D using the",
    "start": "616000",
    "end": "622270"
  },
  {
    "text": "go library interface it's it's sort of a smart or a heavy client in that a lot of",
    "start": "622270",
    "end": "629020"
  },
  {
    "text": "the functionality is implemented at that level so unlike the docker engine where push and pull are something that you you",
    "start": "629020",
    "end": "636880"
  },
  {
    "text": "ask the engine to do on your behalf push and pull are implemented here within the go client library you do within this",
    "start": "636880",
    "end": "645339"
  },
  {
    "text": "library that have access to those those low-level resources like snapshots and",
    "start": "645339",
    "end": "651010"
  },
  {
    "text": "really the main goal of course is to get a container running and that means that the main job of the library is to put",
    "start": "651010",
    "end": "658660"
  },
  {
    "text": "together that OCR configuration with your specific you know if you're calling it the API",
    "start": "658660",
    "end": "665090"
  },
  {
    "text": "you know what programmer are we going to run how are we setting up the namespaces all the knobs and switches that the OCI",
    "start": "665090",
    "end": "672820"
  },
  {
    "text": "config gives you and so again we're we're passing that through to run see we",
    "start": "672820",
    "end": "677930"
  },
  {
    "text": "don't have an intermediate representation so that means if new features come about and run see then we",
    "start": "677930",
    "end": "683900"
  },
  {
    "text": "don't have to modify container D to handle those new capabilities you can simply pass through an entire OSI ice",
    "start": "683900",
    "end": "690620"
  },
  {
    "text": "pack if you'd like again if if you were running and go or you didn't want to",
    "start": "690620",
    "end": "696860"
  },
  {
    "start": "692000",
    "end": "748000"
  },
  {
    "text": "interact with the client library all of the services in container D are available over G RPC interfaces and it",
    "start": "696860",
    "end": "704210"
  },
  {
    "text": "mirrors those those internal interfaces of each of the components so things like snapshots which if you know the docker",
    "start": "704210",
    "end": "711830"
  },
  {
    "text": "engine if you know what graph drivers are you know the back ends of overlay or",
    "start": "711830",
    "end": "717320"
  },
  {
    "text": "a OFS in container D we call those snapchatters so again the high level",
    "start": "717320",
    "end": "724820"
  },
  {
    "text": "components snapshots content which is the blobs like from an image the",
    "start": "724820",
    "end": "730220"
  },
  {
    "text": "manifest the layers and then containers themselves and tasks which are the",
    "start": "730220",
    "end": "736910"
  },
  {
    "text": "obviously the pins the actual process running with within a container and then a an entire event structure around that",
    "start": "736910",
    "end": "744860"
  },
  {
    "text": "so you know start containers top container eventing metrics are exposed",
    "start": "744860",
    "end": "750650"
  },
  {
    "start": "748000",
    "end": "767000"
  },
  {
    "text": "to Prometheus you can get metrics about container D itself and also you get",
    "start": "750650",
    "end": "756920"
  },
  {
    "text": "container level metrics from this end point so you can simply enable that in the container d config and have access",
    "start": "756920",
    "end": "763760"
  },
  {
    "text": "to two metrics as I said we have the CRI",
    "start": "763760",
    "end": "769790"
  },
  {
    "start": "767000",
    "end": "851000"
  },
  {
    "text": "plugin which is now part of the container D github project",
    "start": "769790",
    "end": "775250"
  },
  {
    "text": "so obviously kubernetes defines the CRI API for a specific level obviously the",
    "start": "775250",
    "end": "782870"
  },
  {
    "text": "CRI has been changing over time so the CRI plug-in supports a specific version",
    "start": "782870",
    "end": "790060"
  },
  {
    "text": "CRI API and then it simply uses that go client library that I talked about to",
    "start": "790060",
    "end": "796670"
  },
  {
    "text": "calling the container D and do those opera raishin so your workload gets scheduled",
    "start": "796670",
    "end": "802350"
  },
  {
    "text": "to a node the Kubla wants to start a pod that calls into the CRI API which will",
    "start": "802350",
    "end": "809250"
  },
  {
    "text": "then call in a container d to actually start containers and Michael will show",
    "start": "809250",
    "end": "815520"
  },
  {
    "text": "that in more detail in a few minutes as",
    "start": "815520",
    "end": "820560"
  },
  {
    "text": "I said container D we focused on extensibility being able to have plugins and obviously one of the most",
    "start": "820560",
    "end": "827700"
  },
  {
    "text": "interesting plugins that exists today is the CRI itself - CRI implementation within container D that is a plugin it",
    "start": "827700",
    "end": "837300"
  },
  {
    "text": "is built-in to container DS binary by default so again it's not a separate",
    "start": "837300",
    "end": "842600"
  },
  {
    "text": "process that calls over G RPC but it it listens for the CRI API and then calls",
    "start": "842600",
    "end": "849510"
  },
  {
    "text": "into container D we have built in snapshot or plugins for overlay butter",
    "start": "849510",
    "end": "855870"
  },
  {
    "start": "851000",
    "end": "882000"
  },
  {
    "text": "fest and a OFS we have some other out of tree implementations I think we have ZFS",
    "start": "855870",
    "end": "863510"
  },
  {
    "text": "today and you can actually do custom plugins as well and so one interesting",
    "start": "863510",
    "end": "870390"
  },
  {
    "text": "thing that the AWS firecracker team has done is written a proxy plug-in of their",
    "start": "870390",
    "end": "875670"
  },
  {
    "text": "own to write their own snapshot or for their own filesystem use I also",
    "start": "875670",
    "end": "883770"
  },
  {
    "start": "882000",
    "end": "930000"
  },
  {
    "text": "mentioned runtime plugins and so this is obviously interesting to those who want to do some other kind of",
    "start": "883770",
    "end": "890070"
  },
  {
    "text": "containerization other than what run c provides for example using the standard linux c groups and namespaces so you can",
    "start": "890070",
    "end": "899430"
  },
  {
    "text": "write your own shim and again we as i mentioned in container d 1.2 that api",
    "start": "899430",
    "end": "905820"
  },
  {
    "text": "has been clarified and solidified and we have people like the cata team and",
    "start": "905820",
    "end": "912300"
  },
  {
    "text": "others who are who have been happy with that api and found it to be useful for",
    "start": "912300",
    "end": "918150"
  },
  {
    "text": "their use cases and we also have a CTR install command where you can actually",
    "start": "918150",
    "end": "923790"
  },
  {
    "text": "add these runtime plug-ins on the fly to your container d installation",
    "start": "923790",
    "end": "931010"
  },
  {
    "start": "930000",
    "end": "980000"
  },
  {
    "text": "so again a lot of our recent work has been focused around this extensibility",
    "start": "931509",
    "end": "936899"
  },
  {
    "text": "you can do interesting things like have your in resolve our interface so if you",
    "start": "936899",
    "end": "942189"
  },
  {
    "text": "have a custom po flow with a registry again because you're in this code client",
    "start": "942189",
    "end": "948279"
  },
  {
    "text": "library context you have direct access to the rest of the container d interfaces Mike's going to talk about",
    "start": "948279",
    "end": "956049"
  },
  {
    "text": "CRI but again the plug-in model is very very flexible in that you can self",
    "start": "956049",
    "end": "961359"
  },
  {
    "text": "register and plug in to do whatever you wanted to do and even have custom G RPC",
    "start": "961359",
    "end": "966419"
  },
  {
    "text": "services that way so again I think at",
    "start": "966419",
    "end": "972100"
  },
  {
    "text": "this point a lot of people are finding container d2 to have all those core features that you'd like in a runtime",
    "start": "972100",
    "end": "977799"
  },
  {
    "text": "but also be extremely flexible so based on that you know here's a here's a few",
    "start": "977799",
    "end": "983679"
  },
  {
    "start": "980000",
    "end": "1119000"
  },
  {
    "text": "use cases where we see people using container D today obviously we talked",
    "start": "983679",
    "end": "989619"
  },
  {
    "text": "about kubernetes and docker I mentioned alibaba's Pausch container which is",
    "start": "989619",
    "end": "996459"
  },
  {
    "text": "actually an open source project you can go look at on github they are using container D I just mentioned AWS",
    "start": "996459",
    "end": "1004499"
  },
  {
    "text": "firecracker who implemented their own snapshot or snapshot or and runtime shim",
    "start": "1004499",
    "end": "1010679"
  },
  {
    "text": "for their firecracker vmm project there's a couple I Oh T use cases",
    "start": "1010679",
    "end": "1016019"
  },
  {
    "text": "ballina and Elliott using container D in the IOT space I mentioned the garden runtime",
    "start": "1016019",
    "end": "1023759"
  },
  {
    "text": "underneath cloud foundry using container D again cata another VM based isolation",
    "start": "1023759",
    "end": "1031860"
  },
  {
    "text": "runtime a couple other projects Linux kit from docker the mobi project uses",
    "start": "1031860",
    "end": "1038850"
  },
  {
    "text": "container D to run its services Rancher has a project on github using container",
    "start": "1038850",
    "end": "1045959"
  },
  {
    "text": "D and then I mentioned the two public clouds IBM cloud and GK he both have",
    "start": "1045959",
    "end": "1051899"
  },
  {
    "text": "container D available in clusters that you can deploy today in their public",
    "start": "1051899",
    "end": "1057299"
  },
  {
    "text": "clouds and IBM also has container D in tech preview in our private on Prem",
    "start": "1057299",
    "end": "1062789"
  },
  {
    "text": "cloud also Ashur has it in their ACS engine",
    "start": "1062789",
    "end": "1069479"
  },
  {
    "text": "open-source clustered deployer and I believe at some point aks will also be",
    "start": "1069479",
    "end": "1076499"
  },
  {
    "text": "potentially moving the container d so again we've and if you have ever",
    "start": "1076499",
    "end": "1081749"
  },
  {
    "text": "followed Kelsie's kubernetes the hard way that also uses container D as the",
    "start": "1081749",
    "end": "1087139"
  },
  {
    "text": "cubelet runtime so again in the last year we've seen a lot of interesting",
    "start": "1087139",
    "end": "1093090"
  },
  {
    "text": "uptake in interest in container D a lot of use cases and so we're happy with the",
    "start": "1093090",
    "end": "1100109"
  },
  {
    "text": "feedback we've got and of course if anyone has further use cases where you're finding some aspect of container",
    "start": "1100109",
    "end": "1107219"
  },
  {
    "text": "D doesn't work in your use case we'd love to hear about it but this is kind of an easy transition point to Mike to",
    "start": "1107219",
    "end": "1113969"
  },
  {
    "text": "talk a little more about the CRI and how that's implemented thanks Phil how's",
    "start": "1113969",
    "end": "1125099"
  },
  {
    "start": "1119000",
    "end": "1381000"
  },
  {
    "text": "everybody doing after lunch retired pretty good yeah so I'm like Brown I've",
    "start": "1125099",
    "end": "1131279"
  },
  {
    "text": "been with IBM for a long time I left and came back again to work on open source my os/2 programmer das programmer you",
    "start": "1131279",
    "end": "1139769"
  },
  {
    "text": "know pretty much done everything from telecom servers to session management",
    "start": "1139769",
    "end": "1145529"
  },
  {
    "text": "and set operating systems so they said Mike it won't work on docker I said yeah",
    "start": "1145529",
    "end": "1150570"
  },
  {
    "text": "that sounds like fun so I've been working on open source projects for a while then they about a year and a half",
    "start": "1150570",
    "end": "1157559"
  },
  {
    "text": "ago two years ago they said about container D we need a shim to hook up",
    "start": "1157559",
    "end": "1163499"
  },
  {
    "text": "between cubelet and container D if you know today there's a dr. shim that's",
    "start": "1163499",
    "end": "1170820"
  },
  {
    "text": "using the CRI interface that's how you get containers today by default well now",
    "start": "1170820",
    "end": "1176729"
  },
  {
    "text": "if you want you can change the the defaults to use container D as long as",
    "start": "1176729",
    "end": "1182039"
  },
  {
    "text": "it's installed and running and it works pretty good we we test everything gets",
    "start": "1182039",
    "end": "1190349"
  },
  {
    "text": "tested for docker is well on container T on every PR that we push we're done",
    "start": "1190349",
    "end": "1196229"
  },
  {
    "text": "millions of tests and it actually runs with less flakes we think then no offense",
    "start": "1196229",
    "end": "1202110"
  },
  {
    "text": "then docker that does it seems you're pretty clean okay and it runs a little",
    "start": "1202110",
    "end": "1207750"
  },
  {
    "text": "runs a little faster it's a little smaller and I think that's one of the points to why we we did container DB's",
    "start": "1207750",
    "end": "1214320"
  },
  {
    "text": "container the the kubernetes guys they were a little disappointed with every",
    "start": "1214320",
    "end": "1219389"
  },
  {
    "text": "time docker came out there wasn't a lot of talk about how would how it was gonna",
    "start": "1219389",
    "end": "1226080"
  },
  {
    "text": "affect kubernetes okay so when when the CRI interface came out it was okay we're",
    "start": "1226080",
    "end": "1231779"
  },
  {
    "text": "gonna have a very official API and if you implement these services correctly we'll test for it container speech",
    "start": "1231779",
    "end": "1239190"
  },
  {
    "text": "slipped in that slot okay so you see this little boxer called cubelet it is",
    "start": "1239190",
    "end": "1245570"
  },
  {
    "text": "you met Phil mentioned earlier we have a gr PC API it go we have a daemon that",
    "start": "1245570",
    "end": "1252200"
  },
  {
    "text": "runs that receives the requests we have registered to through the GRP see that",
    "start": "1252200",
    "end": "1258659"
  },
  {
    "text": "we're gonna service the CRA API and we typically only talk to couplet unless",
    "start": "1258659",
    "end": "1264120"
  },
  {
    "text": "you're you're using one of the tools like cry CTL cry see tell will be",
    "start": "1264120",
    "end": "1269669"
  },
  {
    "text": "another customer of this GRP capi christ you can create a pod with it or just",
    "start": "1269669",
    "end": "1275610"
  },
  {
    "text": "inspect usually just inspect because if you create a pod with some other tool",
    "start": "1275610",
    "end": "1280620"
  },
  {
    "text": "besides couplet then it's not gonna tell the rest of the cluster what's what's going on so that's sort of an",
    "start": "1280620",
    "end": "1286260"
  },
  {
    "text": "interesting point see as you're showing here every time we on the right every",
    "start": "1286260",
    "end": "1294090"
  },
  {
    "text": "time we create a pod we we create a a",
    "start": "1294090",
    "end": "1299240"
  },
  {
    "text": "place place where we put the resources and and that's going to be in a",
    "start": "1299240",
    "end": "1304350"
  },
  {
    "text": "namespace but so pod it's a um its own right is is really just a logical",
    "start": "1304350",
    "end": "1310110"
  },
  {
    "text": "concept we call it a lot sandbox and what we'll do is create one additional",
    "start": "1310110",
    "end": "1315480"
  },
  {
    "text": "container just for that pot so that when it exits we get a final result from the",
    "start": "1315480",
    "end": "1320700"
  },
  {
    "text": "pot and also that we can host the the network namespace for all the containers",
    "start": "1320700",
    "end": "1327149"
  },
  {
    "text": "in the pod as configured by Larry Hammel for the plot we use shown we see an eye",
    "start": "1327149",
    "end": "1334560"
  },
  {
    "text": "to do all of our networking after we create the pod we'll go ahead and",
    "start": "1334560",
    "end": "1340110"
  },
  {
    "text": "created a namespace for it a network name size and we'll use the CI plugins to execute your whatever however you've",
    "start": "1340110",
    "end": "1347640"
  },
  {
    "text": "configured it be a flannel or or whatever weave they're all supported as shown we're",
    "start": "1347640",
    "end": "1356310"
  },
  {
    "text": "using run C as our default runtime but there's a new way to configure per pod",
    "start": "1356310",
    "end": "1364350"
  },
  {
    "text": "be the ability to to switch runtime suit caddy containers or some other runtime",
    "start": "1364350",
    "end": "1370020"
  },
  {
    "text": "so it's just a little spec so you can say I want this pod to be default or I",
    "start": "1370020",
    "end": "1376230"
  },
  {
    "text": "want it to be a VM or whatever okay a",
    "start": "1376230",
    "end": "1382370"
  },
  {
    "text": "little more detail on the c9 integration again",
    "start": "1382760",
    "end": "1388350"
  },
  {
    "text": "all the plugins are supported we can I've got a PRI just pushed last weekend",
    "start": "1388350",
    "end": "1395340"
  },
  {
    "text": "we're if you do an inspect on the pod you'll actually get the cni results if there is some kind of error in your",
    "start": "1395340",
    "end": "1401760"
  },
  {
    "text": "configuration of CN I will we're gonna be showing you that result as well and and we show the where the config",
    "start": "1401760",
    "end": "1408690"
  },
  {
    "text": "password felt like I saw so what another thing you're gonna get from container D",
    "start": "1408690",
    "end": "1414090"
  },
  {
    "text": "is a little little more help in the debug area you know is my networking",
    "start": "1414090",
    "end": "1419580"
  },
  {
    "text": "that kind of stuff we're gonna try to work with those guys and these are a set",
    "start": "1419580",
    "end": "1427920"
  },
  {
    "start": "1424000",
    "end": "1450000"
  },
  {
    "text": "of the CRI services that we support which form all and one of the interesting ones on here is that we",
    "start": "1427920",
    "end": "1434850"
  },
  {
    "text": "create your streams for stereo that goes from the containers you launch all the",
    "start": "1434850",
    "end": "1441180"
  },
  {
    "text": "way back up through API server and then subsequently the coop cuddle okay so if you're attached see that the two tools",
    "start": "1441180",
    "end": "1453470"
  },
  {
    "start": "1450000",
    "end": "1513000"
  },
  {
    "text": "and you got CTR and Craig cuddle or a crisis he'll want to name these things",
    "start": "1453470",
    "end": "1460370"
  },
  {
    "text": "the CTR tool ships with container D and the crisi tail tool is a it used to be incubator and",
    "start": "1460370",
    "end": "1467610"
  },
  {
    "text": "now it's moved over to some other repo so you can also help help on that tool",
    "start": "1467610",
    "end": "1474180"
  },
  {
    "text": "if you want cry see tell it's the other side of CRI for for debugging and",
    "start": "1474180",
    "end": "1481700"
  },
  {
    "text": "analyzing what CRI employee container runtime integrations have built we",
    "start": "1481700",
    "end": "1487830"
  },
  {
    "text": "actually have test cases that are written in the chrysotile repo whole bunch of cry tests so it's",
    "start": "1487830",
    "end": "1495810"
  },
  {
    "text": "sort of interesting if you want to look at if you want help on debugging over writing test cases it's a little easier",
    "start": "1495810",
    "end": "1501690"
  },
  {
    "text": "to write the test cases that go here and in Christ's ETL than it is to do the end",
    "start": "1501690",
    "end": "1506970"
  },
  {
    "text": "end tests and kubernetes okay and it's focused just on the cry site in my",
    "start": "1506970",
    "end": "1518190"
  },
  {
    "text": "particular host here just you know running on my laptop I'm just using cube ATM but again you could use just about",
    "start": "1518190",
    "end": "1525150"
  },
  {
    "text": "anything like kubernetes start wick to launch I guess will bring up a little",
    "start": "1525150",
    "end": "1531450"
  },
  {
    "text": "demo",
    "start": "1531450",
    "end": "1533690"
  },
  {
    "text": "probably not yours",
    "start": "1541149",
    "end": "1544379"
  },
  {
    "text": "okay so in on this particular host again it's",
    "start": "1554320",
    "end": "1561240"
  },
  {
    "text": "just a virtual machine VirtualBox any ATP I'm or any host will work fine",
    "start": "1561240",
    "end": "1567150"
  },
  {
    "text": "running a boot to and showing here with",
    "start": "1567150",
    "end": "1572340"
  },
  {
    "text": "we launched it so we was asking earlier how do you how do you configure Kubb ATM",
    "start": "1572340",
    "end": "1579270"
  },
  {
    "text": "to use well there's some some parameters over here in see it's at City default",
    "start": "1579270",
    "end": "1589530"
  },
  {
    "text": "sorry that's a default couplet you can configure your extra-large basically",
    "start": "1589530",
    "end": "1594840"
  },
  {
    "start": "1592000",
    "end": "1716000"
  },
  {
    "text": "just tell couplet that you're gonna want to run a remote runtime whatever kind of",
    "start": "1594840",
    "end": "1599850"
  },
  {
    "text": "timeout you want and where the sock is and this is the default sock that we use for communicating over to your PC okay",
    "start": "1599850",
    "end": "1612470"
  },
  {
    "text": "and what do you have any questions so far I think we're yeah we're good okay so",
    "start": "1612470",
    "end": "1621780"
  },
  {
    "text": "let's see what we got here",
    "start": "1621780",
    "end": "1625370"
  },
  {
    "text": "so as you can see with on coop cuddle we have one pod not sure why it's curly",
    "start": "1642730",
    "end": "1654620"
  },
  {
    "text": "riding in Gen X it runs pretty quick but for the demo purses I just want to make",
    "start": "1654620",
    "end": "1659810"
  },
  {
    "text": "sure he's already up and running so so this is the coop CTL command for take a",
    "start": "1659810",
    "end": "1667010"
  },
  {
    "text": "look at what pod we currently have running let's go look a little bit deeper I'm using cry CTL and here we're",
    "start": "1667010",
    "end": "1681050"
  },
  {
    "text": "showing not just that pod but also the the pods that are that were created for",
    "start": "1681050",
    "end": "1688730"
  },
  {
    "text": "the cluster as well as the networking",
    "start": "1688730",
    "end": "1694330"
  },
  {
    "text": "which is flannel in this case okay and",
    "start": "1694330",
    "end": "1701180"
  },
  {
    "text": "if we want to get a little more information on it we could we could look at some of these pods like doing inspect",
    "start": "1701180",
    "end": "1708490"
  },
  {
    "text": "485 less and you can see some you know",
    "start": "1710080",
    "end": "1720230"
  },
  {
    "start": "1716000",
    "end": "1965000"
  },
  {
    "text": "some details about the pod itself for example what the IP address is we might",
    "start": "1720230",
    "end": "1726650"
  },
  {
    "text": "need that later I mentioned before that",
    "start": "1726650",
    "end": "1733340"
  },
  {
    "text": "we we create a pause container and and this is going to show the details for",
    "start": "1733340",
    "end": "1739100"
  },
  {
    "text": "that as well if you're familiar with OCI specification we we support lucy ice",
    "start": "1739100",
    "end": "1745130"
  },
  {
    "text": "pack both the runtime and the in respect and and this is a runtime spec for a",
    "start": "1745130",
    "end": "1752330"
  },
  {
    "text": "pause container alright showing the command arguments ooh man",
    "start": "1752330",
    "end": "1761740"
  },
  {
    "text": "caps you can see what security permissions the deep these are the default security permissions the docker",
    "start": "1761740",
    "end": "1767600"
  },
  {
    "text": "uses the same use the same default security permissions and container D and stalker does you'll find it we try to",
    "start": "1767600",
    "end": "1775070"
  },
  {
    "text": "use all of the doctor defaults so that when Shearer pots go from running on docker they're running on a container",
    "start": "1775070",
    "end": "1781279"
  },
  {
    "text": "date just work okay you can modify the defaults if you want to be more secure",
    "start": "1781279",
    "end": "1787370"
  },
  {
    "text": "ELISA cure as well as you can in docker and we're showing the the mounts that we",
    "start": "1787370",
    "end": "1792649"
  },
  {
    "text": "set these mounts are in the OCI spec format not in the Kuban Hades format",
    "start": "1792649",
    "end": "1798909"
  },
  {
    "text": "okay so now we are the IP address we can we can probably curl that guy so genex",
    "start": "1798909",
    "end": "1815029"
  },
  {
    "text": "is up we the inspect work to give us the right IP address we can we can also I",
    "start": "1815029",
    "end": "1821870"
  },
  {
    "text": "think look at some logs for the sky let's see",
    "start": "1821870",
    "end": "1828100"
  },
  {
    "text": "yeah that girl earlier too just to make sure it works okay",
    "start": "1835690",
    "end": "1842740"
  },
  {
    "text": "there's also I mentioned the yes we can look at stats here so here's the all the",
    "start": "1842740",
    "end": "1853840"
  },
  {
    "text": "different commands we can get so your stats command",
    "start": "1853840",
    "end": "1860370"
  },
  {
    "text": "and you can also scope that to a pot or whatever",
    "start": "1868710",
    "end": "1873768"
  },
  {
    "text": "see what was that was that shortcut ID and all this whoa Fox Charlie",
    "start": "1884870",
    "end": "1891330"
  },
  {
    "text": "six let's just see what he's up to nothing I need I need a pod",
    "start": "1891330",
    "end": "1898620"
  },
  {
    "text": "so get pods it's hard to remember the",
    "start": "1898620",
    "end": "1907590"
  },
  {
    "text": "different command syntax it's close you can guess the different committee we tried to use the same commands between",
    "start": "1907590",
    "end": "1913890"
  },
  {
    "text": "cry CTL and and docker so if I'd if I wanted to do a PS all like doctor does",
    "start": "1913890",
    "end": "1919080"
  },
  {
    "text": "that also works here if I just want to listen containers so yeah I'm just trying to give you a feel for the you",
    "start": "1919080",
    "end": "1924690"
  },
  {
    "text": "know the tools the tool side and but they're there and they're pretty easy and we take issues and PRS to extend an",
    "start": "1924690",
    "end": "1933090"
  },
  {
    "text": "answer we make them better okay so again",
    "start": "1933090",
    "end": "1940140"
  },
  {
    "text": "if we want to do stats on that particular we're back to 485 you know",
    "start": "1940140",
    "end": "1951750"
  },
  {
    "text": "show you how long it took Ingenix to get that those those curls wasn't a whole",
    "start": "1951750",
    "end": "1957240"
  },
  {
    "text": "lot work to do okay we also have to see this CD or commands this is the command",
    "start": "1957240",
    "end": "1967230"
  },
  {
    "text": "I mentioned earlier that chips with container D they like to say it's an",
    "start": "1967230",
    "end": "1973380"
  },
  {
    "text": "unsupported command with what it really means is that it works but we don't want",
    "start": "1973380",
    "end": "1979860"
  },
  {
    "text": "this to be a docker replacement API you know command line tool all right not",
    "start": "1979860",
    "end": "1985049"
  },
  {
    "text": "meant to be and they the commands might change the syntax might change I can tell you a couple that moved in moved",
    "start": "1985049",
    "end": "1991290"
  },
  {
    "text": "and we don't worry about they're moving it much because we're not expecting anybody write scripts to use when they're using these okay if you want to",
    "start": "1991290",
    "end": "1999120"
  },
  {
    "text": "if you want to use scripts and things like that you know you use the docker tools or some other higher-level to like",
    "start": "1999120",
    "end": "2004700"
  },
  {
    "text": "code you know kubernetes where they support their eight guys I mentioned docker and just for a second it lets",
    "start": "2004700",
    "end": "2010580"
  },
  {
    "text": "suit so we got going over here so this is docker running busybox well",
    "start": "2010580",
    "end": "2021460"
  },
  {
    "text": "it's using its using the same container d so three weeks ago I installed an",
    "start": "2021460",
    "end": "2029290"
  },
  {
    "text": "update on inventor and it automatically updated the container d that was on my computer so in what that really meant",
    "start": "2029290",
    "end": "2038350"
  },
  {
    "text": "was container doctor is using the same version of container D that I was using",
    "start": "2038350",
    "end": "2043660"
  },
  {
    "text": "in development and it everything just works so we've got this concept of",
    "start": "2043660",
    "end": "2049330"
  },
  {
    "text": "namespaces container name chases it's not the same as a kubernetes namespace",
    "start": "2049330",
    "end": "2054429"
  },
  {
    "text": "or Linux namespaces but you can actually have a one tool using container D like",
    "start": "2054429",
    "end": "2061960"
  },
  {
    "text": "docker and it's gonna have its own set of containers and and they're separate isolated from the kubernetes containers",
    "start": "2061960",
    "end": "2070300"
  },
  {
    "text": "that are in pods okay so if I were to do a CTR namespaces one of the commands",
    "start": "2070300",
    "end": "2077070"
  },
  {
    "text": "seats you're probably list LS she go",
    "start": "2077070",
    "end": "2088919"
  },
  {
    "text": "Thanks",
    "start": "2088919",
    "end": "2091919"
  },
  {
    "text": "so the ksi dot IO is the default namespace that CRI uses Creole",
    "start": "2098250",
    "end": "2103980"
  },
  {
    "text": "containers and Moby is the one that docker Ducker is using so you can even",
    "start": "2103980",
    "end": "2109800"
  },
  {
    "text": "list out within CTR the different containers by namespace place just by supplying a dash at so if I say CTR the",
    "start": "2109800",
    "end": "2119640"
  },
  {
    "text": "Shang will be and then container and I",
    "start": "2119640",
    "end": "2126090"
  },
  {
    "text": "believe it's LS and I get a pseudo again least I'm consistent",
    "start": "2126090",
    "end": "2132830"
  },
  {
    "text": "yeah sensually taxi cool",
    "start": "2132830",
    "end": "2138720"
  },
  {
    "text": "I'll try that actually I love coming to Lily's conferences everybody gives me the hint that time okay all right so I",
    "start": "2138720",
    "end": "2150060"
  },
  {
    "text": "think we're pretty sure we're out of time I think we had a 4:15 we're minute over but if anyone has questions or",
    "start": "2150060",
    "end": "2156869"
  },
  {
    "text": "other there's a whole group of container D folks up here happy to talk or even step outside but thanks a lot I don't",
    "start": "2156869",
    "end": "2164220"
  },
  {
    "text": "think we have time for open questions but we'll be happy to answer some things",
    "start": "2164220",
    "end": "2170510"
  }
]