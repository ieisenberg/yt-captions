[
  {
    "text": "or we works I'm a flux city maintainer and today I want to give you an",
    "start": "0",
    "end": "6480"
  },
  {
    "text": "introduction to get ops flux and the helm operator which is a sub project of",
    "start": "6480",
    "end": "12509"
  },
  {
    "text": "the flux CD adventure that we now have",
    "start": "12509",
    "end": "17970"
  },
  {
    "text": "brought from weworks and now it's into the CNC F sandbox and we planning to",
    "start": "17970",
    "end": "23130"
  },
  {
    "text": "give it even further away so what's key",
    "start": "23130",
    "end": "28800"
  },
  {
    "text": "tops in my opinion so in one opinion you'll be you are probably using all these tools right all these commands to",
    "start": "28800",
    "end": "34649"
  },
  {
    "text": "change things in your cluster to deployments to to roll bags and so on",
    "start": "34649",
    "end": "41090"
  },
  {
    "text": "that means you have to share your cluster credentials to everybody that has must have access to the git repo it",
    "start": "41090",
    "end": "49050"
  },
  {
    "text": "also means that your CI pipelines will probably shell out to DC Allies right",
    "start": "49050",
    "end": "55699"
  },
  {
    "text": "this is how most people do deployments on kubernetes with the get-ups model we",
    "start": "55699",
    "end": "63290"
  },
  {
    "text": "just you know ignore all these tools and we only use git push to interact with",
    "start": "63290",
    "end": "69119"
  },
  {
    "text": "your with our clusters what that means is that someone else is running all",
    "start": "69119",
    "end": "74880"
  },
  {
    "text": "these commands for us what we do is just we describe our desired state we say we",
    "start": "74880",
    "end": "80430"
  },
  {
    "text": "have a git repo and we say this is how I want my cluster to look like and it's up",
    "start": "80430",
    "end": "85619"
  },
  {
    "text": "to the tools some automation the runs inside your cluster to make sure that what you have described in your git repo",
    "start": "85619",
    "end": "92610"
  },
  {
    "text": "it's apply these reconcile on your cluster so white what gift Ops brings to",
    "start": "92610",
    "end": "102540"
  },
  {
    "text": "the table some an obvious advantages are that from a devil's perspective both",
    "start": "102540",
    "end": "111079"
  },
  {
    "text": "engineers both developers and operations people can work together on how the",
    "start": "111079",
    "end": "117840"
  },
  {
    "text": "infrastructure looks and how the applications are deployed on it so if you have a git repository that shared",
    "start": "117840",
    "end": "124380"
  },
  {
    "text": "between your teams then you can work with to request reviews you can sign",
    "start": "124380",
    "end": "129929"
  },
  {
    "text": "your commits so you know who did what and you can also get these audit log for",
    "start": "129929",
    "end": "135900"
  },
  {
    "text": "free like many companies out there must be soaked to compliant or other",
    "start": "135900",
    "end": "141870"
  },
  {
    "text": "compliances and get gives you that without any kind of effort if you switch",
    "start": "141870",
    "end": "148769"
  },
  {
    "text": "from a CI model to a detox model then every single change it's you know get",
    "start": "148769",
    "end": "154950"
  },
  {
    "text": "blog and if you'd sign with GPG let's say then you can ensure that whatever",
    "start": "154950",
    "end": "160980"
  },
  {
    "text": "happens is there and you can trace it very easily this is one of the advantages another advantage is recovery",
    "start": "160980",
    "end": "169500"
  },
  {
    "text": "time so let's say your cluster happens",
    "start": "169500",
    "end": "175230"
  },
  {
    "text": "something happens really bad in your infrastructure that you don't control yards on some cloud something really",
    "start": "175230",
    "end": "180750"
  },
  {
    "text": "happens with let's say your etcd cluster that everything is in there all your",
    "start": "180750",
    "end": "185760"
  },
  {
    "text": "configuration and you want to start new and a new cluster right with the same",
    "start": "185760",
    "end": "190890"
  },
  {
    "text": "stuff that was running on the previous one if you use CI pipelines and this is",
    "start": "190890",
    "end": "197310"
  },
  {
    "text": "how you drive deployments what that means is you have to go into a system and trigger all the jobs that are making",
    "start": "197310",
    "end": "203849"
  },
  {
    "text": "up your cluster you have to redeploy all your applications and so on right so",
    "start": "203849",
    "end": "208970"
  },
  {
    "text": "this is our problem because you don't really know what's running right now on your cluster you",
    "start": "208970",
    "end": "214590"
  },
  {
    "text": "know that okay there are some have to look on on your ta system get all those",
    "start": "214590",
    "end": "220109"
  },
  {
    "text": "logs out of there see what was last applied and rerun every single job this",
    "start": "220109",
    "end": "226739"
  },
  {
    "text": "can take a lot of time if you have many many apps now you also have cluster",
    "start": "226739",
    "end": "234569"
  },
  {
    "text": "objects maybe you have users and so on and maybe those objects are not deployed by CI every time you do an app change so",
    "start": "234569",
    "end": "242239"
  },
  {
    "text": "with with D tops you just say okay I have a new cluster I install the get ops",
    "start": "242239",
    "end": "248549"
  },
  {
    "text": "operator there and you point that operator to the git repository that the",
    "start": "248549",
    "end": "255449"
  },
  {
    "text": "previous cluster was both retro and on the first run everything should be the",
    "start": "255449",
    "end": "261539"
  },
  {
    "text": "same as the previous one because the desired state of the previous one is now",
    "start": "261539",
    "end": "266710"
  },
  {
    "text": "on the new cluster so in in.we words we've had a major incident some years",
    "start": "266710",
    "end": "273699"
  },
  {
    "text": "ago and this is how we we managed to recover the whole thing in 15 minutes",
    "start": "273699",
    "end": "278979"
  },
  {
    "text": "and this is when we realized that okay maybe detox is not something that we should keep only for ourselves and you",
    "start": "278979",
    "end": "285370"
  },
  {
    "text": "should make this public and try to advocate for this kind of driving",
    "start": "285370",
    "end": "291550"
  },
  {
    "text": "operations of our kubernetes and how do you implement detox there are some",
    "start": "291550",
    "end": "299349"
  },
  {
    "text": "things here of course you need a get request arrived so you need a a get",
    "start": "299349",
    "end": "305380"
  },
  {
    "text": "provider now choosing a good provider means that you have to trust that",
    "start": "305380",
    "end": "313380"
  },
  {
    "text": "provider for uptime right if your question goes down and the good provider",
    "start": "313380",
    "end": "318940"
  },
  {
    "text": "goes down we're surprised there is nothing how can you restore something when your",
    "start": "318940",
    "end": "323949"
  },
  {
    "text": "source of truth is gone so be careful when you choose this one because it's a",
    "start": "323949",
    "end": "330550"
  },
  {
    "text": "single point of failure right for the get up stoney of course you have to have",
    "start": "330550",
    "end": "335590"
  },
  {
    "text": "a container registry and what I specified here you should push only immutable images and I will get back to",
    "start": "335590",
    "end": "342520"
  },
  {
    "text": "that but the idea is don't use latest I mean latest is not something that you",
    "start": "342520",
    "end": "349000"
  },
  {
    "text": "can describe as the state of your app its latest of what right so don't do it",
    "start": "349000",
    "end": "357449"
  },
  {
    "text": "and the same thing can be applied to two hand charts you can use a hen repository",
    "start": "357449",
    "end": "364030"
  },
  {
    "text": "if you don't want to keep your charts on indeed I will show you both options of course",
    "start": "364030",
    "end": "369840"
  },
  {
    "text": "hermits is way better than a container registry because heme enforces semantic",
    "start": "369840",
    "end": "376419"
  },
  {
    "text": "versions for your hand chart so use semantic versions and don't push the",
    "start": "376419",
    "end": "381940"
  },
  {
    "text": "same version twice right this is something you should not do because you are going back to the latest problem",
    "start": "381940",
    "end": "390150"
  },
  {
    "text": "okay so when you have all this infrastructure set up or get provider container registry maybe a heme",
    "start": "390150",
    "end": "396599"
  },
  {
    "text": "repository service what you need next is a you need to",
    "start": "396599",
    "end": "402870"
  },
  {
    "text": "build a continuous deployment process that has some properties it can watch",
    "start": "402870",
    "end": "407970"
  },
  {
    "text": "for changes in it so it doesn't only rely on the get",
    "start": "407970",
    "end": "414720"
  },
  {
    "text": "provider calling that operator right so it can do this kind of watching on its",
    "start": "414720",
    "end": "420630"
  },
  {
    "text": "own so let's say if a get hook is not succeeded that doesn't mean you",
    "start": "420630",
    "end": "427169"
  },
  {
    "text": "shouldn't change the cluster state because if it's changing if he's changed indeed the operator should react to it",
    "start": "427169",
    "end": "434069"
  },
  {
    "text": "so that's why here we rely on watches and not only get web hooks it also can",
    "start": "434069",
    "end": "442169"
  },
  {
    "text": "watch your container registry and detect if there are new images and take decisions based on that",
    "start": "442169",
    "end": "447419"
  },
  {
    "text": "for example flux can upgrade your containers based on some expressions",
    "start": "447419",
    "end": "453740"
  },
  {
    "text": "some rules that you can define for upgrading the in cluster workloads and",
    "start": "453740",
    "end": "460370"
  },
  {
    "text": "another thing you should be able to detect drift like drift is something",
    "start": "460370",
    "end": "466500"
  },
  {
    "text": "that happens right even if let's say your SR 18 says okay we only use the git",
    "start": "466500",
    "end": "472889"
  },
  {
    "text": "repo to drive changes maybe someone has access someone definitely has access to",
    "start": "472889",
    "end": "478500"
  },
  {
    "text": "that question and can do some modifications inside the cluster without going through the get process right so",
    "start": "478500",
    "end": "484820"
  },
  {
    "text": "your CI CD system should detect that the desired state is no longer there because",
    "start": "484820",
    "end": "491159"
  },
  {
    "text": "someone changed something inside the cluster and also the continuous",
    "start": "491159",
    "end": "496469"
  },
  {
    "text": "deployment system should try to correct the drift and of course should alert on",
    "start": "496469",
    "end": "504719"
  },
  {
    "text": "Miss configurations and Miss configuration for me here is let's say",
    "start": "504719",
    "end": "510650"
  },
  {
    "text": "multimode yellow maybe if you don't have something like on each pull request on",
    "start": "510650",
    "end": "516089"
  },
  {
    "text": "your git repo maybe you don't have something like cube eval or other tools that are validating your mo and then the",
    "start": "516089",
    "end": "524219"
  },
  {
    "text": "continuous deployment system should say I cannot accept this model for demo and it shouldn't apply anything else so",
    "start": "524219",
    "end": "532770"
  },
  {
    "text": "for detox to work everything must be all or nothing if you are doing a commit in",
    "start": "532770",
    "end": "537930"
  },
  {
    "text": "your Guidry point you are changing like a dozen Yama files and the single Yama file is malformed at it then nothing",
    "start": "537930",
    "end": "544709"
  },
  {
    "text": "else should be applied we shouldn't apply half of a commit or we should",
    "start": "544709",
    "end": "550320"
  },
  {
    "text": "apply 100% of the commit or nothing and this is how these flux does this the",
    "start": "550320",
    "end": "556350"
  },
  {
    "text": "right way okay so how we we implement",
    "start": "556350",
    "end": "561630"
  },
  {
    "text": "this continuous deployment process we works has started the flux project some",
    "start": "561630",
    "end": "570420"
  },
  {
    "text": "years ago and this is how we we implemented key tops for ourselves and",
    "start": "570420",
    "end": "576870"
  },
  {
    "text": "afterwards make it open source and now a lot of companies and freelancers and other people are using it for business",
    "start": "576870",
    "end": "584940"
  },
  {
    "text": "needs or you know just at home maintaining the cluster to play with the",
    "start": "584940",
    "end": "591510"
  },
  {
    "text": "whole idea is very simple you put all these Yama files in a git repo flux is",
    "start": "591510",
    "end": "596640"
  },
  {
    "text": "the flux watch is the git repo and how it does that for example on github or github you when flux starts up it",
    "start": "596640",
    "end": "603270"
  },
  {
    "text": "generates deploy key it's an SSH key you give the public key to github or github",
    "start": "603270",
    "end": "609750"
  },
  {
    "text": "and afterwards flux is able to connect to the cluster to the git repo clone the",
    "start": "609750",
    "end": "614760"
  },
  {
    "text": "git repo and apply the changes to the cluster so this is how how it works is",
    "start": "614760",
    "end": "621329"
  },
  {
    "text": "not not magical at all what flux does it monitors whatever runs",
    "start": "621329",
    "end": "628860"
  },
  {
    "text": "in your cluster and it it uses add notations to keep track of what what",
    "start": "628860",
    "end": "636240"
  },
  {
    "text": "objects are indeed and what objects got applied on the cluster so this makes",
    "start": "636240",
    "end": "641790"
  },
  {
    "text": "flux ideal for also doing garbage collection what that means is you add a",
    "start": "641790",
    "end": "648120"
  },
  {
    "text": "deployment or cluster that deployment gets materialized in the you are the",
    "start": "648120",
    "end": "653760"
  },
  {
    "text": "deployment Herget repo that one gets deployed on a cluster then with another commit you remove that deployment from",
    "start": "653760",
    "end": "659670"
  },
  {
    "text": "git and flux will will detect that ok on the previous commit a heavy subject now",
    "start": "659670",
    "end": "665400"
  },
  {
    "text": "it's gone so it will do a cube cut' will delete on that object so you don't have to clean",
    "start": "665400",
    "end": "671019"
  },
  {
    "text": "up things in the cluster ending it and",
    "start": "671019",
    "end": "676870"
  },
  {
    "text": "this is like this was a future request for about one year and a half and we managed to pull it off this year so we",
    "start": "676870",
    "end": "683529"
  },
  {
    "text": "are very happy about garbage collection in flux this is why I mention here let's",
    "start": "683529",
    "end": "692920"
  },
  {
    "text": "go on to the helm operator hands on it right so what the helm operator does hem",
    "start": "692920",
    "end": "698230"
  },
  {
    "text": "operator exposes a custom resource of type release you can keep these home",
    "start": "698230",
    "end": "705160"
  },
  {
    "text": "release these Hamleys definitions inside your git repo flux will synchronize them",
    "start": "705160",
    "end": "710499"
  },
  {
    "text": "so those home release files will get applied the objects will be created",
    "start": "710499",
    "end": "716439"
  },
  {
    "text": "hello operator detects that and transforms the hem release object into",
    "start": "716439",
    "end": "721839"
  },
  {
    "text": "an actual hand release simple and also does install update and delete using the",
    "start": "721839",
    "end": "729610"
  },
  {
    "text": "flux garbage collector collection you can also run hello operator",
    "start": "729610",
    "end": "734920"
  },
  {
    "text": "on its own we made big efforts to so hello operator was developed inside the",
    "start": "734920",
    "end": "742089"
  },
  {
    "text": "flux repository and was part of flux itself the source code now if we pulled",
    "start": "742089",
    "end": "747639"
  },
  {
    "text": "hello operator into its own dedicated git repository it has its own dedicated help chart so you",
    "start": "747639",
    "end": "753639"
  },
  {
    "text": "can if you don't use flux you just want to play with helm operator we can deploy it like any other operators and when you",
    "start": "753639",
    "end": "760149"
  },
  {
    "text": "create hem release easy to just work but I'm what I'm showcasing here is the full",
    "start": "760149",
    "end": "765850"
  },
  {
    "text": "ETOPS pipeline that i'll try to demo if I have time some features that Homo",
    "start": "765850",
    "end": "774399"
  },
  {
    "text": "Prater has so it makes all the helm operations Beggs and declarative it can",
    "start": "774399",
    "end": "781990"
  },
  {
    "text": "pull charts from home repositories like the stable hand chart it also can pull charge from private",
    "start": "781990",
    "end": "789189"
  },
  {
    "text": "home repositories if you have basic auth or other things and you can also pull",
    "start": "789189",
    "end": "795309"
  },
  {
    "text": "charge from git repositories so you if you don't want helm repository server and maintain that",
    "start": "795309",
    "end": "803080"
  },
  {
    "text": "you can just keep your charts in give and point helm operator to those git",
    "start": "803080",
    "end": "808750"
  },
  {
    "text": "repo stories what I mean here what are those raposo is usually those are app deploy systems where you have",
    "start": "808750",
    "end": "814420"
  },
  {
    "text": "your source code and you also have your chart source code can tell ahem operator there is my chart definition and here is",
    "start": "814420",
    "end": "822940"
  },
  {
    "text": "the helm release and with the two files with the two specifications it will create the install also for the values",
    "start": "822940",
    "end": "832570"
  },
  {
    "text": "how we can provide values to the tool release the couple of options here you",
    "start": "832570",
    "end": "840130"
  },
  {
    "text": "can point to secrets in your cluster config maps or even external URLs like",
    "start": "840130",
    "end": "847029"
  },
  {
    "text": "an s3 bucket or something maybe you want to keep their your value files and the",
    "start": "847029",
    "end": "853720"
  },
  {
    "text": "helm operator will pull them off if you use hello operator together with flux you can do automatic",
    "start": "853720",
    "end": "860830"
  },
  {
    "text": "upgrades of hand charts based on image tag policies when let's say this is more",
    "start": "860830",
    "end": "871209"
  },
  {
    "text": "of a hand two features so helm operator works with hand two and three since today for him to there was a problem if",
    "start": "871209",
    "end": "879520"
  },
  {
    "text": "you first install a chart and that install fails you cannot install it again because tiller will just you know",
    "start": "879520",
    "end": "887709"
  },
  {
    "text": "reserve that name as a fail chart what helm operator does when it sees the",
    "start": "887709",
    "end": "893770"
  },
  {
    "text": "first time he'll release it will try to install it if that fails it does a delete and purge so at the next",
    "start": "893770",
    "end": "900970"
  },
  {
    "text": "iteration at the next time it does a reconciliation it will not air out and if you fix your chart in the meantime it",
    "start": "900970",
    "end": "908470"
  },
  {
    "text": "will just get installed so this is something that we did to make this easier with him to until our and it also",
    "start": "908470",
    "end": "915940"
  },
  {
    "text": "does automaker rollback on chart upgrade failures so let's say you describe something your git repo you want to",
    "start": "915940",
    "end": "922089"
  },
  {
    "text": "upgrade something your chart that fails and maybe you don't want to leave it in",
    "start": "922089",
    "end": "927220"
  },
  {
    "text": "a failed state but you want to know that that one fails old home operator will of",
    "start": "927220",
    "end": "933010"
  },
  {
    "text": "will some events that okayed the rollback failed by the upgrade failed and it does",
    "start": "933010",
    "end": "939850"
  },
  {
    "text": "a rollback fall so your stake is no always the last good version of your",
    "start": "939850",
    "end": "945610"
  },
  {
    "text": "chart installed this is how ahem release",
    "start": "945610",
    "end": "951339"
  },
  {
    "text": "looks like nothing complicated we have this chart section here where we say",
    "start": "951339",
    "end": "959350"
  },
  {
    "text": "okay my chart comes from the stable repository and this is the URL for the",
    "start": "959350",
    "end": "965860"
  },
  {
    "text": "repository that's the name of the chart and that's the version of the chart I want to stop here what if you apply this",
    "start": "965860",
    "end": "971949"
  },
  {
    "text": "thing on your cluster it will install shield secrets in the default namespace because we didn't specify the any",
    "start": "971949",
    "end": "978190"
  },
  {
    "text": "namespace here on that Virgie with the values document from the chart right",
    "start": "978190",
    "end": "985000"
  },
  {
    "text": "this is the equivalent of helm install shield secret why why I have seen",
    "start": "985000",
    "end": "991839"
  },
  {
    "text": "secrets here it's an example because here secrets is the controller made by bitNami",
    "start": "991839",
    "end": "996970"
  },
  {
    "text": "which is now VMware and few secrets allows you to store secrets in your get",
    "start": "996970",
    "end": "1002760"
  },
  {
    "text": "reposted those are encrypted with the public key so anyone from your team can",
    "start": "1002760",
    "end": "1008610"
  },
  {
    "text": "encrypt that those secrets put them in a git repository and no one can decrypt them except for the silly secrets",
    "start": "1008610",
    "end": "1014550"
  },
  {
    "text": "controller which runs in your cluster and this is how you can build get-ups pipelines without sharing your API keys",
    "start": "1014550",
    "end": "1022459"
  },
  {
    "text": "database passwords and so on you cannot you'll not just put them in clear in in",
    "start": "1022459",
    "end": "1028380"
  },
  {
    "text": "the git repo you'll put them encrypted and they only get decrypted on the on the cluster side so here we've seen how",
    "start": "1028380",
    "end": "1039630"
  },
  {
    "text": "you can get a can tell her my operator to install a chart from from helm",
    "start": "1039630",
    "end": "1046949"
  },
  {
    "text": "repository and here is how you can tell it to install a chart from a git",
    "start": "1046949",
    "end": "1052290"
  },
  {
    "text": "repository so that's it github URL it's is not it's not the highway so it's",
    "start": "1052290",
    "end": "1058679"
  },
  {
    "text": "actually the git repo and you can use the ref key to point to a release in",
    "start": "1058679",
    "end": "1064500"
  },
  {
    "text": "give up or to a branch so instead of ref 2.1 you can do laughs master",
    "start": "1064500",
    "end": "1070020"
  },
  {
    "text": "wrench and what whenever you you put a change in in master then he'll know crate will detect it and will upgrade",
    "start": "1070020",
    "end": "1076559"
  },
  {
    "text": "your chart so while you are doing development for your deaf cluster is",
    "start": "1076559",
    "end": "1081780"
  },
  {
    "text": "very easy to just tell her my operator please synchronize every time with this branch but when you are doing production",
    "start": "1081780",
    "end": "1088440"
  },
  {
    "text": "releases then you should point to get release assembler that doesn't change",
    "start": "1088440",
    "end": "1094110"
  },
  {
    "text": "and it's yes yes it's branch attack and",
    "start": "1094110",
    "end": "1105200"
  },
  {
    "text": "[Music] the various part down below its so you",
    "start": "1105200",
    "end": "1111000"
  },
  {
    "text": "can override the default values from valve is jamming in here in line in the Hurley's",
    "start": "1111000",
    "end": "1116159"
  },
  {
    "text": "so this is how instead of modifying charts all the time to fine-tune them",
    "start": "1116159",
    "end": "1121919"
  },
  {
    "text": "for I don't know different clusters different namespaces different environments you can specify your values",
    "start": "1121919",
    "end": "1128280"
  },
  {
    "text": "inside the custom resource definition ham release so instead of copy pasting charts and stuff like that we'll just",
    "start": "1128280",
    "end": "1133950"
  },
  {
    "text": "create more ham release is based on plain space environment and so on and so",
    "start": "1133950",
    "end": "1145230"
  },
  {
    "text": "you can specify values in line but you can also specify values from config Maps",
    "start": "1145230",
    "end": "1150289"
  },
  {
    "text": "secret and also files that are inside your charts like it's very common if you",
    "start": "1150289",
    "end": "1156510"
  },
  {
    "text": "look at the stable chart repo there are values URL and production values for",
    "start": "1156510",
    "end": "1164340"
  },
  {
    "text": "example right so if you decide to not put all your settings inside the helm",
    "start": "1164340",
    "end": "1170340"
  },
  {
    "text": "release and you want to keep your settings like you used to do for example in your actual chart you can reference",
    "start": "1170340",
    "end": "1176159"
  },
  {
    "text": "here a path inside your chart directory where are the values that you want to",
    "start": "1176159",
    "end": "1183390"
  },
  {
    "text": "apply then you can mix them all together you can put some values in line here your API keys should come from a secret",
    "start": "1183390",
    "end": "1191429"
  },
  {
    "text": "and maybe you have something like generic values for clusters in a region",
    "start": "1191429",
    "end": "1198240"
  },
  {
    "text": "yes yes yes so we use with we don't use the",
    "start": "1198240",
    "end": "1208989"
  },
  {
    "text": "helm common line in hello operator hello operator uses the helm go packages but",
    "start": "1208989",
    "end": "1214899"
  },
  {
    "text": "we try really hard to be compliant everything Han does and if we do it",
    "start": "1214899",
    "end": "1221679"
  },
  {
    "text": "differently we'll get like an issue instant someone will notice so this",
    "start": "1221679",
    "end": "1226899"
  },
  {
    "text": "actually works pretty well and we have it for sometime I think more than half a",
    "start": "1226899",
    "end": "1231970"
  },
  {
    "text": "year like hello operator started like one year ago or maybe more than one year",
    "start": "1231970",
    "end": "1237820"
  },
  {
    "text": "he didn't know about the year so we launched helm operator alpha one at the",
    "start": "1237820",
    "end": "1245289"
  },
  {
    "text": "first hands on it and hopefully today we can launch 1.0.0",
    "start": "1245289",
    "end": "1250749"
  },
  {
    "text": "the first release candidate with mp3 support okay so this is how you can",
    "start": "1250749",
    "end": "1256659"
  },
  {
    "text": "provide values from all kinds of sources and from here is missing the example",
    "start": "1256659",
    "end": "1263409"
  },
  {
    "text": "because I spaced missing the example and can reference a various file from",
    "start": "1263409",
    "end": "1270039"
  },
  {
    "text": "something like an s3 bucket and why would you do that let's say you have a bucket for each region and you have some",
    "start": "1270039",
    "end": "1277210"
  },
  {
    "text": "values for all your charts that are that must change based on region so instead",
    "start": "1277210",
    "end": "1283539"
  },
  {
    "text": "of putting those in a secret or something I can just use some external URL that points to your bucket we didn't",
    "start": "1283539",
    "end": "1291970"
  },
  {
    "text": "talk about this use case it was some hello operator user that really insisted that his use case is good and we should",
    "start": "1291970",
    "end": "1298989"
  },
  {
    "text": "we should deal with the s3 packet so one",
    "start": "1298989",
    "end": "1306340"
  },
  {
    "text": "feature that works together reflux so do this you have to have flux on your",
    "start": "1306340",
    "end": "1312039"
  },
  {
    "text": "cluster not only the hem operator so flux has using annotations you have a",
    "start": "1312039",
    "end": "1319239"
  },
  {
    "text": "way to define how you want to upgrade your values spec so here in in my values",
    "start": "1319239",
    "end": "1326139"
  },
  {
    "text": "I have an imagery poison attack and I'm telling flux please upgrade my hell",
    "start": "1326139",
    "end": "1332470"
  },
  {
    "text": "release for a new 3.0 version is published so what I'm doing here what I'm saying",
    "start": "1332470",
    "end": "1339369"
  },
  {
    "text": "I'm not going to change my chart for patch releases of my application right",
    "start": "1339369",
    "end": "1345309"
  },
  {
    "text": "these are let's say small bug fixes that don't require infrastructure change in any way so instead of going in to get",
    "start": "1345309",
    "end": "1352659"
  },
  {
    "text": "every time when I do a 3.0 point well release 4.2 4.3 or whatever I'm trusting",
    "start": "1352659",
    "end": "1359379"
  },
  {
    "text": "myself that I will respect somewhere and I will not do breaking changes in patch",
    "start": "1359379",
    "end": "1364629"
  },
  {
    "text": "releases and I can tell flux automate this stuff for me so every time I am pushing to the docker registry in my",
    "start": "1364629",
    "end": "1371679"
  },
  {
    "text": "case a new version flux will apply the same work filter will detect okay 30.1",
    "start": "1371679",
    "end": "1377889"
  },
  {
    "text": "it's there on the docker hub it will modify the hell release file it will",
    "start": "1377889",
    "end": "1383200"
  },
  {
    "text": "commit the ham release file to my git repository and afterwards it will apply it so even if I'm doing the",
    "start": "1383200",
    "end": "1390669"
  },
  {
    "text": "modifications manually with git commit and git push flux does the same thing so",
    "start": "1390669",
    "end": "1396489"
  },
  {
    "text": "every everything that flux changes in your cluster is not directly in your class and it changes it first in the kit",
    "start": "1396489",
    "end": "1402099"
  },
  {
    "text": "and afterwards it applies it so it doesn't break the the get ops pattern in",
    "start": "1402099",
    "end": "1407769"
  },
  {
    "text": "any way and also flux can deal with GPG signing and stuff like that so if you",
    "start": "1407769",
    "end": "1414279"
  },
  {
    "text": "can issue encryption key for class if you are using the signing for git repos",
    "start": "1414279",
    "end": "1421049"
  },
  {
    "text": "and this is how it looks like so what flux does it scans your cluster",
    "start": "1421049",
    "end": "1427419"
  },
  {
    "text": "for all containers that are running in your cluster then it uses the container",
    "start": "1427419",
    "end": "1432489"
  },
  {
    "text": "pool secrets from from the kubernetes api it gets that secret and connects to",
    "start": "1432489",
    "end": "1437589"
  },
  {
    "text": "the docker registry it works with with the docker hub with quai with all sorts",
    "start": "1437589",
    "end": "1445509"
  },
  {
    "text": "of registries out there so because it uses the double secret from community so it connects there and it doesn't pull",
    "start": "1445509",
    "end": "1452440"
  },
  {
    "text": "the image itself it only pulls the metadata of the image like how many tags",
    "start": "1452440",
    "end": "1457809"
  },
  {
    "text": "are out there and for from those tags how many are sample okay from all those",
    "start": "1457809",
    "end": "1463539"
  },
  {
    "text": "same work types how many apply to my filter this one only then it will do a git push yes yes",
    "start": "1463539",
    "end": "1473820"
  },
  {
    "text": "what is your age your AWS Google cloud",
    "start": "1473820",
    "end": "1480419"
  },
  {
    "text": "yes yes so we we use the AWS and aja SDK",
    "start": "1480419",
    "end": "1488559"
  },
  {
    "text": "inside flux so we refresh the keys and so on so don't lose your credentials and",
    "start": "1488559",
    "end": "1495629"
  },
  {
    "text": "use this memcache here just to store these images metadata like the container",
    "start": "1495899",
    "end": "1503200"
  },
  {
    "text": "name and all the tags that are in the registry so we don't store here like real images it's this memcache is very",
    "start": "1503200",
    "end": "1509950"
  },
  {
    "text": "light you can kill it and fog so just refresh it okay another future that we",
    "start": "1509950",
    "end": "1518230"
  },
  {
    "text": "shipped recently it's its namespace delegation so you can create ahem",
    "start": "1518230",
    "end": "1525100"
  },
  {
    "text": "release so this file gets created in the admin namespace but you want to install",
    "start": "1525100",
    "end": "1532090"
  },
  {
    "text": "MongoDB in the dev namespace right so in",
    "start": "1532090",
    "end": "1537759"
  },
  {
    "text": "the specification next to the release name you can specify a target instance if you don't specify then it's the same",
    "start": "1537759",
    "end": "1543970"
  },
  {
    "text": "namespace as the hammerless why is this useful maybe you don't want to allow",
    "start": "1543970",
    "end": "1549059"
  },
  {
    "text": "your dev teams to install hammer releases maybe you want to control the",
    "start": "1549059",
    "end": "1556359"
  },
  {
    "text": "ham release process only from an admin perspective so if you put the ham",
    "start": "1556359",
    "end": "1562450"
  },
  {
    "text": "release file inside let's say the deafness place then someone could get to this ham release file and modify it",
    "start": "1562450",
    "end": "1568690"
  },
  {
    "text": "right or delete it or whatever also if you use something like this like",
    "start": "1568690",
    "end": "1575470"
  },
  {
    "text": "multi-tenancy then you can delegate things from the cluster level to the",
    "start": "1575470",
    "end": "1581799"
  },
  {
    "text": "namespace level how we do multi-tenancy with flux and helm operator is like this",
    "start": "1581799",
    "end": "1588489"
  },
  {
    "text": "we have a cluster git repo that's controlled by the cluster admins and what's there in the cluster git repo is",
    "start": "1588489",
    "end": "1596259"
  },
  {
    "text": "the definitions of global cluster resources stuff like main species stuff like",
    "start": "1596259",
    "end": "1603550"
  },
  {
    "text": "clustering or bindings custom resource definitions right and then we can say",
    "start": "1603550",
    "end": "1608700"
  },
  {
    "text": "from the cluster git repository we can provision a flux instance and ham",
    "start": "1608700",
    "end": "1614530"
  },
  {
    "text": "operator instance per namespace and we can connect this instance to the team",
    "start": "1614530",
    "end": "1619810"
  },
  {
    "text": "git repository so each of your dev team can have its own get report you don't",
    "start": "1619810",
    "end": "1625210"
  },
  {
    "text": "have to if you don't want to merge everything under a single git repo and all your teams have to share this one",
    "start": "1625210",
    "end": "1631840"
  },
  {
    "text": "you can still use git ops and have a dedicated get per team with with this",
    "start": "1631840",
    "end": "1639190"
  },
  {
    "text": "kind of setup and I've made the inside the flux CD organization on github there is a special repository where I showcase",
    "start": "1639190",
    "end": "1647290"
  },
  {
    "text": "how I can bootstrap all these things up with customizing its give it a try is",
    "start": "1647290",
    "end": "1652810"
  },
  {
    "text": "very easy it's not complicated what what this means is the cluster admin could",
    "start": "1652810",
    "end": "1658570"
  },
  {
    "text": "have could use the namespace delegation to install help charts in the team one",
    "start": "1658570",
    "end": "1664720"
  },
  {
    "text": "in space without putting those hand charts those hand release definitions inside team one get people that that's",
    "start": "1664720",
    "end": "1671740"
  },
  {
    "text": "why we did it so how pipeline looks very easy if you",
    "start": "1671740",
    "end": "1680050"
  },
  {
    "text": "keep in your git repo in a space because helm v3 will not create a namespace for you anymore so this was a requirement",
    "start": "1680050",
    "end": "1689070"
  },
  {
    "text": "before even if helm v2 because we want to have all our objects in it so you put",
    "start": "1689070",
    "end": "1694510"
  },
  {
    "text": "a namespace there you'll not just use helm install - namespace like hello",
    "start": "1694510",
    "end": "1699640"
  },
  {
    "text": "operator is not able to create namespaces it will not do help install -",
    "start": "1699640",
    "end": "1704740"
  },
  {
    "text": "namespace it expects for the namespace to be their pre provision and how we do that flux when it detects your git repo",
    "start": "1704740",
    "end": "1712330"
  },
  {
    "text": "it will order all the objects inside your git repo in a certain order for",
    "start": "1712330",
    "end": "1717880"
  },
  {
    "text": "example to create a namespace before let's say",
    "start": "1717880",
    "end": "1722920"
  },
  {
    "text": "custom resource definition before a custom resource so a namespace before",
    "start": "1722920",
    "end": "1728410"
  },
  {
    "text": "the deployment and so on so it does apply in a certain order so all these",
    "start": "1728410",
    "end": "1734810"
  },
  {
    "text": "things can work together do I have time",
    "start": "1734810",
    "end": "1741820"
  },
  {
    "text": "no okay so I don't have more time",
    "start": "1741820",
    "end": "1748700"
  },
  {
    "text": "so tomorrow we'll run a workshop or tutorial and we'll showcase all this",
    "start": "1748700",
    "end": "1754790"
  },
  {
    "text": "pipeline model if you can come tomorrow we'll see first and how we can build key",
    "start": "1754790",
    "end": "1761960"
  },
  {
    "text": "tops pipelines with flux ham operator and tomorrow we'll also use flagger and",
    "start": "1761960",
    "end": "1768230"
  },
  {
    "text": "linker D to do the ham release while measuring things like error rates",
    "start": "1768230",
    "end": "1775210"
  },
  {
    "text": "latency and so on if something fails we'll roll back the ham release based on other stuff than just health checks and",
    "start": "1775210",
    "end": "1782180"
  },
  {
    "text": "lift nurse checks please give it a try",
    "start": "1782180",
    "end": "1787270"
  },
  {
    "text": "these are the repositories and the flux CD we also have published on on the Wii",
    "start": "1787270",
    "end": "1794240"
  },
  {
    "text": "Works website key tops ebook that has a nice example with a lot of micro",
    "start": "1794240",
    "end": "1800960"
  },
  {
    "text": "services I can build key tops pipelines and here is our pull request that we",
    "start": "1800960",
    "end": "1812570"
  },
  {
    "text": "worked last night and today at it it's",
    "start": "1812570",
    "end": "1818330"
  },
  {
    "text": "ready we have here the install command from the v3 support so you install the",
    "start": "1818330",
    "end": "1827030"
  },
  {
    "text": "custom resource you deploy hello operator will healthy three and if you set this environment variable hello",
    "start": "1827030",
    "end": "1833330"
  },
  {
    "text": "operator will only transform he'll releases into v3 ham releases if you",
    "start": "1833330",
    "end": "1838640"
  },
  {
    "text": "don't set this environment very well then you have to specify what helm",
    "start": "1838640",
    "end": "1844160"
  },
  {
    "text": "version you want inside the custom result definition so ham operator is able right now to manage both tiller",
    "start": "1844160",
    "end": "1852080"
  },
  {
    "text": "deployments and on tiller deployments with Han v3 and in our roadmap hopefully",
    "start": "1852080",
    "end": "1859310"
  },
  {
    "text": "soon we'll have a way for you to upgrade so when you change your git repo from v2",
    "start": "1859310",
    "end": "1865430"
  },
  {
    "text": "III will try to upgrade the helm chart in place so you don't have to you know",
    "start": "1865430",
    "end": "1872750"
  },
  {
    "text": "have downtime or something like that when you want to switch from one version to another so I think this is it yes now",
    "start": "1872750",
    "end": "1889270"
  },
  {
    "text": "if you use hello operator we'll make it smooth for you don't have to care about it hopefully thank you",
    "start": "1889900",
    "end": "1899180"
  },
  {
    "text": "[Applause]",
    "start": "1899180",
    "end": "1906309"
  }
]