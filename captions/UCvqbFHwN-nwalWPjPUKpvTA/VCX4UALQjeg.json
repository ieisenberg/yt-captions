[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "about the internal developer platform at",
    "start": "0",
    "end": "2040"
  },
  {
    "text": "the New York Times",
    "start": "2040",
    "end": "3179"
  },
  {
    "text": "from there we'll dive into feedback and",
    "start": "3179",
    "end": "5220"
  },
  {
    "text": "how it impacts developer productivity",
    "start": "5220",
    "end": "6960"
  },
  {
    "text": "before going through an open comp test",
    "start": "6960",
    "end": "8820"
  },
  {
    "text": "demo",
    "start": "8820",
    "end": "9780"
  },
  {
    "text": "we'll talk about how we've implemented",
    "start": "9780",
    "end": "11519"
  },
  {
    "start": "10000",
    "end": "29000"
  },
  {
    "text": "comp tests at the New York Times and how",
    "start": "11519",
    "end": "13380"
  },
  {
    "text": "this has allowed us to take a trust but",
    "start": "13380",
    "end": "15240"
  },
  {
    "text": "verify approach to application",
    "start": "15240",
    "end": "17100"
  },
  {
    "text": "deployment including moving toward",
    "start": "17100",
    "end": "19619"
  },
  {
    "text": "automatic merging of automatically",
    "start": "19619",
    "end": "21359"
  },
  {
    "text": "generated files",
    "start": "21359",
    "end": "23520"
  },
  {
    "text": "finally we'll take a peek into what",
    "start": "23520",
    "end": "25140"
  },
  {
    "text": "we're doing next with schema validation",
    "start": "25140",
    "end": "27000"
  },
  {
    "text": "using cubeconform",
    "start": "27000",
    "end": "29820"
  },
  {
    "start": "29000",
    "end": "109000"
  },
  {
    "text": "so I want to start with some background",
    "start": "29820",
    "end": "31380"
  },
  {
    "text": "and definitions just to make sure we're",
    "start": "31380",
    "end": "33180"
  },
  {
    "text": "all on the same page and the first of",
    "start": "33180",
    "end": "34860"
  },
  {
    "text": "those is get Ops get Ops is an",
    "start": "34860",
    "end": "37500"
  },
  {
    "text": "operational framework that uses that",
    "start": "37500",
    "end": "39540"
  },
  {
    "text": "utilizes git as a single source of Truth",
    "start": "39540",
    "end": "42300"
  },
  {
    "text": "this is to manage infrastructure and",
    "start": "42300",
    "end": "44219"
  },
  {
    "text": "application deployments and prevent",
    "start": "44219",
    "end": "45899"
  },
  {
    "text": "configuration drift which occurs when",
    "start": "45899",
    "end": "48120"
  },
  {
    "text": "the actual state of an application's",
    "start": "48120",
    "end": "49860"
  },
  {
    "text": "infrastructure gradually diverges from",
    "start": "49860",
    "end": "52200"
  },
  {
    "text": "its declarative state",
    "start": "52200",
    "end": "54480"
  },
  {
    "text": "the next term is Argo CD a declarative",
    "start": "54480",
    "end": "56820"
  },
  {
    "text": "continuous delivery tool that utilizes",
    "start": "56820",
    "end": "58920"
  },
  {
    "text": "git Ops principles to simplify",
    "start": "58920",
    "end": "60600"
  },
  {
    "text": "application deployment to a kubernetes",
    "start": "60600",
    "end": "62579"
  },
  {
    "text": "cluster",
    "start": "62579",
    "end": "64440"
  },
  {
    "text": "the next term I want to talk about is",
    "start": "64440",
    "end": "66119"
  },
  {
    "text": "policy which refers to a set of rules",
    "start": "66119",
    "end": "68340"
  },
  {
    "text": "that govern how a system operates in a",
    "start": "68340",
    "end": "70320"
  },
  {
    "text": "specific scenario an example of a policy",
    "start": "70320",
    "end": "73200"
  },
  {
    "text": "might be prohibiting the use of latest",
    "start": "73200",
    "end": "74760"
  },
  {
    "text": "tags on container images or restricting",
    "start": "74760",
    "end": "77040"
  },
  {
    "text": "a kubernetes container's ability to run",
    "start": "77040",
    "end": "79020"
  },
  {
    "text": "as root",
    "start": "79020",
    "end": "80640"
  },
  {
    "text": "and lastly I want to give you some",
    "start": "80640",
    "end": "82259"
  },
  {
    "text": "background on Opa the open policy agent",
    "start": "82259",
    "end": "84479"
  },
  {
    "text": "this is an open source general purpose",
    "start": "84479",
    "end": "86759"
  },
  {
    "text": "policy engine that unifies policy",
    "start": "86759",
    "end": "89040"
  },
  {
    "text": "enforcement across the cloud native",
    "start": "89040",
    "end": "90659"
  },
  {
    "text": "stack",
    "start": "90659",
    "end": "91619"
  },
  {
    "text": "our talk today pertains to a utility",
    "start": "91619",
    "end": "93420"
  },
  {
    "text": "from Oppa which is conf test that allows",
    "start": "93420",
    "end": "95939"
  },
  {
    "text": "you to write policy tests against",
    "start": "95939",
    "end": "97259"
  },
  {
    "text": "structured configuration data",
    "start": "97259",
    "end": "99540"
  },
  {
    "text": "this in turn allows you to offer fast",
    "start": "99540",
    "end": "101400"
  },
  {
    "text": "feedback by enabling policy enforcement",
    "start": "101400",
    "end": "103500"
  },
  {
    "text": "locally or in the CI process without",
    "start": "103500",
    "end": "105479"
  },
  {
    "text": "ever needing to connect to a kubernetes",
    "start": "105479",
    "end": "107400"
  },
  {
    "text": "cluster",
    "start": "107400",
    "end": "109380"
  },
  {
    "start": "109000",
    "end": "324000"
  },
  {
    "text": "now I want to tell you a little bit more",
    "start": "109380",
    "end": "111000"
  },
  {
    "text": "about the internal developer platform at",
    "start": "111000",
    "end": "112680"
  },
  {
    "text": "the New York Times why we needed it what",
    "start": "112680",
    "end": "115020"
  },
  {
    "text": "our mindset was with respect to",
    "start": "115020",
    "end": "116460"
  },
  {
    "text": "governance and how the platform has",
    "start": "116460",
    "end": "118200"
  },
  {
    "text": "improved developer productivity",
    "start": "118200",
    "end": "121439"
  },
  {
    "text": "so as technology changes and evolves",
    "start": "121439",
    "end": "123600"
  },
  {
    "text": "application developers need to learn",
    "start": "123600",
    "end": "125399"
  },
  {
    "text": "more tools to keep up application",
    "start": "125399",
    "end": "127500"
  },
  {
    "text": "developers spend less time developing",
    "start": "127500",
    "end": "129300"
  },
  {
    "text": "features as they also integrate and",
    "start": "129300",
    "end": "131280"
  },
  {
    "text": "manage containerization infrastructure",
    "start": "131280",
    "end": "133440"
  },
  {
    "text": "as code testing building monitoring and",
    "start": "133440",
    "end": "136319"
  },
  {
    "text": "more",
    "start": "136319",
    "end": "137040"
  },
  {
    "text": "and seeing as these Technologies can be",
    "start": "137040",
    "end": "139080"
  },
  {
    "text": "broken down even further",
    "start": "139080",
    "end": "141120"
  },
  {
    "text": "you can understand that this quickly",
    "start": "141120",
    "end": "142800"
  },
  {
    "text": "piles up and even if it were reasonable",
    "start": "142800",
    "end": "145020"
  },
  {
    "text": "to expect an application developer to",
    "start": "145020",
    "end": "146940"
  },
  {
    "text": "learn all of these on their own they're",
    "start": "146940",
    "end": "148800"
  },
  {
    "text": "doing so would almost certainly impact",
    "start": "148800",
    "end": "150480"
  },
  {
    "text": "their productivity and their ability to",
    "start": "150480",
    "end": "152220"
  },
  {
    "text": "develop futures",
    "start": "152220",
    "end": "154800"
  },
  {
    "text": "before the IDP the internal developer",
    "start": "154800",
    "end": "157500"
  },
  {
    "text": "platform teams manage their own cloud",
    "start": "157500",
    "end": "159540"
  },
  {
    "text": "environments and infrastructure there",
    "start": "159540",
    "end": "161640"
  },
  {
    "text": "was little standardization with",
    "start": "161640",
    "end": "163140"
  },
  {
    "text": "individual teams taking different",
    "start": "163140",
    "end": "164519"
  },
  {
    "text": "approaches to infrastructure and cluster",
    "start": "164519",
    "end": "166379"
  },
  {
    "text": "architecture",
    "start": "166379",
    "end": "167640"
  },
  {
    "text": "and while this gave developers broad",
    "start": "167640",
    "end": "169200"
  },
  {
    "text": "freedom in how they designed and",
    "start": "169200",
    "end": "170879"
  },
  {
    "text": "implemented their systems at scale this",
    "start": "170879",
    "end": "173160"
  },
  {
    "text": "led to infrastructure sprawl that was",
    "start": "173160",
    "end": "175019"
  },
  {
    "text": "untenable to manage with too much",
    "start": "175019",
    "end": "177120"
  },
  {
    "text": "overhead decreased efficiency and",
    "start": "177120",
    "end": "179280"
  },
  {
    "text": "increased costs",
    "start": "179280",
    "end": "182300"
  },
  {
    "text": "so to tackle the issue of sprawling",
    "start": "182400",
    "end": "184260"
  },
  {
    "text": "infrastructure we adopted a shared",
    "start": "184260",
    "end": "186060"
  },
  {
    "text": "centralized kubernetes architecture",
    "start": "186060",
    "end": "187879"
  },
  {
    "text": "developers no longer had to manage or",
    "start": "187879",
    "end": "190200"
  },
  {
    "text": "maintain their own kubernetes clusters",
    "start": "190200",
    "end": "191940"
  },
  {
    "text": "and routine infrastructure tasks are",
    "start": "191940",
    "end": "193860"
  },
  {
    "text": "handled by dedicated operations and",
    "start": "193860",
    "end": "195780"
  },
  {
    "text": "platform teams that make up the New York",
    "start": "195780",
    "end": "197879"
  },
  {
    "text": "Times delivery engineering mission",
    "start": "197879",
    "end": "200640"
  },
  {
    "text": "distinct application developer teams",
    "start": "200640",
    "end": "202620"
  },
  {
    "text": "which are known as tenants are given",
    "start": "202620",
    "end": "204659"
  },
  {
    "text": "isolated spaces on these shared clusters",
    "start": "204659",
    "end": "206640"
  },
  {
    "text": "and this abstraction has improved",
    "start": "206640",
    "end": "208800"
  },
  {
    "text": "developer productivity by allowing",
    "start": "208800",
    "end": "210420"
  },
  {
    "text": "developers to focus on features instead",
    "start": "210420",
    "end": "212459"
  },
  {
    "text": "of operations",
    "start": "212459",
    "end": "214800"
  },
  {
    "text": "so to use these shared clusters teams",
    "start": "214800",
    "end": "216840"
  },
  {
    "text": "were invited to onboard using the IDP",
    "start": "216840",
    "end": "218940"
  },
  {
    "text": "the IDP abstracts away much of the",
    "start": "218940",
    "end": "221220"
  },
  {
    "text": "deployment and operations processes by",
    "start": "221220",
    "end": "223560"
  },
  {
    "text": "handling certain repository creation crd",
    "start": "223560",
    "end": "225959"
  },
  {
    "text": "creation and configuration related to",
    "start": "225959",
    "end": "228000"
  },
  {
    "text": "running and routing applications",
    "start": "228000",
    "end": "230040"
  },
  {
    "text": "those of us on the cicd team wanted",
    "start": "230040",
    "end": "232200"
  },
  {
    "text": "deployment to be easy and relatively",
    "start": "232200",
    "end": "234060"
  },
  {
    "text": "painless because we wanted feature",
    "start": "234060",
    "end": "235680"
  },
  {
    "text": "developers to get to spend more time",
    "start": "235680",
    "end": "237239"
  },
  {
    "text": "developing features and less time",
    "start": "237239",
    "end": "239340"
  },
  {
    "text": "learning a new Ci or CD tool",
    "start": "239340",
    "end": "242879"
  },
  {
    "text": "but while using a shared infrastructure",
    "start": "242879",
    "end": "244980"
  },
  {
    "text": "has many benefits there are also",
    "start": "244980",
    "end": "246480"
  },
  {
    "text": "important considerations that we had to",
    "start": "246480",
    "end": "248220"
  },
  {
    "text": "keep in mind and the first of those was",
    "start": "248220",
    "end": "249900"
  },
  {
    "text": "security",
    "start": "249900",
    "end": "251040"
  },
  {
    "text": "ensuring that all teams adhered to the",
    "start": "251040",
    "end": "253080"
  },
  {
    "text": "same security policies and regulations",
    "start": "253080",
    "end": "254879"
  },
  {
    "text": "was critical to preventing potential",
    "start": "254879",
    "end": "256739"
  },
  {
    "text": "vulnerabilities especially when multiple",
    "start": "256739",
    "end": "259019"
  },
  {
    "text": "teams are working on the same",
    "start": "259019",
    "end": "260160"
  },
  {
    "text": "infrastructure even if those teams are",
    "start": "260160",
    "end": "262320"
  },
  {
    "text": "isolated from one another",
    "start": "262320",
    "end": "264600"
  },
  {
    "text": "it's also critical to consider how",
    "start": "264600",
    "end": "266280"
  },
  {
    "text": "moving to a shared infrastructure and",
    "start": "266280",
    "end": "268080"
  },
  {
    "text": "how over governance or over",
    "start": "268080",
    "end": "269400"
  },
  {
    "text": "prescriptiveness in our policy writing",
    "start": "269400",
    "end": "271320"
  },
  {
    "text": "could lead to decreased developer",
    "start": "271320",
    "end": "273120"
  },
  {
    "text": "autonomy",
    "start": "273120",
    "end": "274320"
  },
  {
    "text": "since devs had to rely on others to set",
    "start": "274320",
    "end": "276600"
  },
  {
    "text": "up and manage their shared resources",
    "start": "276600",
    "end": "278220"
  },
  {
    "text": "they might have had to make changes to",
    "start": "278220",
    "end": "280560"
  },
  {
    "text": "the way that they implemented or",
    "start": "280560",
    "end": "281759"
  },
  {
    "text": "designed their systems in adopting a",
    "start": "281759",
    "end": "283860"
  },
  {
    "text": "shared infrastructure should be a",
    "start": "283860",
    "end": "285120"
  },
  {
    "text": "balance and deployment should always be",
    "start": "285120",
    "end": "286979"
  },
  {
    "text": "a collaboration",
    "start": "286979",
    "end": "289440"
  },
  {
    "text": "feedback was another crucial",
    "start": "289440",
    "end": "290759"
  },
  {
    "text": "consideration on our live shared",
    "start": "290759",
    "end": "293520"
  },
  {
    "text": "kubernetes clusters we're using oppa",
    "start": "293520",
    "end": "296400"
  },
  {
    "text": "gatekeeper to govern them and open",
    "start": "296400",
    "end": "298380"
  },
  {
    "text": "gatekeeper is an admissions controller",
    "start": "298380",
    "end": "300300"
  },
  {
    "text": "that intercepts API requests persisting",
    "start": "300300",
    "end": "302639"
  },
  {
    "text": "them according to your declarative",
    "start": "302639",
    "end": "304020"
  },
  {
    "text": "policy",
    "start": "304020",
    "end": "305160"
  },
  {
    "text": "while this tool is important in a robust",
    "start": "305160",
    "end": "307199"
  },
  {
    "text": "policy system it provides late feedback",
    "start": "307199",
    "end": "309419"
  },
  {
    "text": "to developers on whether their",
    "start": "309419",
    "end": "310800"
  },
  {
    "text": "kubernetes objects comply with policy",
    "start": "310800",
    "end": "313380"
  },
  {
    "text": "and if policies and requirements aren't",
    "start": "313380",
    "end": "315180"
  },
  {
    "text": "clearly communicated to developers early",
    "start": "315180",
    "end": "317220"
  },
  {
    "text": "and often this slower feedback cycle can",
    "start": "317220",
    "end": "319800"
  },
  {
    "text": "lead to increased frustration and",
    "start": "319800",
    "end": "321419"
  },
  {
    "text": "increased time to problem resolution",
    "start": "321419",
    "end": "324960"
  },
  {
    "start": "324000",
    "end": "549000"
  },
  {
    "text": "so I want to talk more about feedback",
    "start": "324960",
    "end": "326820"
  },
  {
    "text": "how it interacts with Git Ops how it",
    "start": "326820",
    "end": "328979"
  },
  {
    "text": "impacts developer productivity and how",
    "start": "328979",
    "end": "330900"
  },
  {
    "text": "we can leverage open comp tests as a",
    "start": "330900",
    "end": "332639"
  },
  {
    "text": "feedback tool in a centralized policy",
    "start": "332639",
    "end": "334380"
  },
  {
    "text": "hub",
    "start": "334380",
    "end": "335699"
  },
  {
    "text": "and this starts with pop quiz so raise",
    "start": "335699",
    "end": "338580"
  },
  {
    "text": "your hand when you think it is the",
    "start": "338580",
    "end": "340320"
  },
  {
    "text": "answer to when is the ideal time for",
    "start": "340320",
    "end": "342600"
  },
  {
    "text": "developers to begin getting feedback in",
    "start": "342600",
    "end": "344400"
  },
  {
    "text": "a good Ops operational framework a",
    "start": "344400",
    "end": "346620"
  },
  {
    "text": "during the pr process before merging to",
    "start": "346620",
    "end": "348780"
  },
  {
    "text": "a main branch B during automated testing",
    "start": "348780",
    "end": "351600"
  },
  {
    "text": "in a CI process",
    "start": "351600",
    "end": "353340"
  },
  {
    "text": "see after emerge to the main branch",
    "start": "353340",
    "end": "355380"
  },
  {
    "text": "during the sync process D while",
    "start": "355380",
    "end": "357840"
  },
  {
    "text": "developing locally",
    "start": "357840",
    "end": "359699"
  },
  {
    "text": "thank you to the one person who's raised",
    "start": "359699",
    "end": "361440"
  },
  {
    "text": "his hand so far",
    "start": "361440",
    "end": "362639"
  },
  {
    "text": "e after any user or stakeholder testing",
    "start": "362639",
    "end": "365520"
  },
  {
    "text": "or F developers should get feedback as",
    "start": "365520",
    "end": "368160"
  },
  {
    "text": "frequently as possible throughout the",
    "start": "368160",
    "end": "369600"
  },
  {
    "text": "development life cycle",
    "start": "369600",
    "end": "372440"
  },
  {
    "text": "thanks Marco",
    "start": "373380",
    "end": "375360"
  },
  {
    "text": "so it was a bit of a trick question and",
    "start": "375360",
    "end": "377759"
  },
  {
    "text": "D is correct for when should it begin",
    "start": "377759",
    "end": "380060"
  },
  {
    "text": "but F that it should be as frequently as",
    "start": "380060",
    "end": "383460"
  },
  {
    "text": "possible feedback should be continuous",
    "start": "383460",
    "end": "385440"
  },
  {
    "text": "in a git Ops operational framework but",
    "start": "385440",
    "end": "387960"
  },
  {
    "text": "it should start locally before you've",
    "start": "387960",
    "end": "390539"
  },
  {
    "text": "even pushed any code",
    "start": "390539",
    "end": "392759"
  },
  {
    "text": "from a get op standpoint the later you",
    "start": "392759",
    "end": "394680"
  },
  {
    "text": "receive feedback the worse off you are",
    "start": "394680",
    "end": "396600"
  },
  {
    "text": "if a developer is receiving their first",
    "start": "396600",
    "end": "398880"
  },
  {
    "text": "compliance feedback at the time of",
    "start": "398880",
    "end": "400560"
  },
  {
    "text": "deployment their code is already merged",
    "start": "400560",
    "end": "402240"
  },
  {
    "text": "into that single source of Truth git",
    "start": "402240",
    "end": "403919"
  },
  {
    "text": "repository and since this code can't be",
    "start": "403919",
    "end": "406380"
  },
  {
    "text": "applied to the live cluster the",
    "start": "406380",
    "end": "408000"
  },
  {
    "text": "application state has drifted from the",
    "start": "408000",
    "end": "409680"
  },
  {
    "text": "declarative state so feedback needs to",
    "start": "409680",
    "end": "411900"
  },
  {
    "text": "come much sooner than this",
    "start": "411900",
    "end": "414419"
  },
  {
    "text": "but we also have to be realistic",
    "start": "414419",
    "end": "416759"
  },
  {
    "text": "when you have an organization with tens",
    "start": "416759",
    "end": "418919"
  },
  {
    "text": "or hundreds or thousands of developers",
    "start": "418919",
    "end": "420600"
  },
  {
    "text": "how do you communicate your policies to",
    "start": "420600",
    "end": "423000"
  },
  {
    "text": "them",
    "start": "423000",
    "end": "423660"
  },
  {
    "text": "a common practice is to have policies",
    "start": "423660",
    "end": "425639"
  },
  {
    "text": "passed down by security teams in",
    "start": "425639",
    "end": "427800"
  },
  {
    "text": "Internal Documentation or ticketing",
    "start": "427800",
    "end": "429660"
  },
  {
    "text": "systems or pin slack messages or emails",
    "start": "429660",
    "end": "432419"
  },
  {
    "text": "or some other like carrier pigeons I",
    "start": "432419",
    "end": "434639"
  },
  {
    "text": "don't know and the truth is developers",
    "start": "434639",
    "end": "436979"
  },
  {
    "text": "don't know where to find those if they",
    "start": "436979",
    "end": "438720"
  },
  {
    "text": "do know where to find them they might be",
    "start": "438720",
    "end": "440280"
  },
  {
    "text": "doubtful that they're up to date and",
    "start": "440280",
    "end": "442139"
  },
  {
    "text": "reliable",
    "start": "442139",
    "end": "443580"
  },
  {
    "text": "if they're new they might not know where",
    "start": "443580",
    "end": "445139"
  },
  {
    "text": "to look and while alerting tools are",
    "start": "445139",
    "end": "446880"
  },
  {
    "text": "great they are also late feedback",
    "start": "446880",
    "end": "448560"
  },
  {
    "text": "informing security teams of",
    "start": "448560",
    "end": "450360"
  },
  {
    "text": "non-compliance only after resource",
    "start": "450360",
    "end": "452280"
  },
  {
    "text": "creation or application deployment",
    "start": "452280",
    "end": "455160"
  },
  {
    "text": "the later you receive feedback and the",
    "start": "455160",
    "end": "457259"
  },
  {
    "text": "more policies you put in place that",
    "start": "457259",
    "end": "458759"
  },
  {
    "text": "developers need to remember and",
    "start": "458759",
    "end": "460139"
  },
  {
    "text": "implement the more it is going to impact",
    "start": "460139",
    "end": "461819"
  },
  {
    "text": "their productivity",
    "start": "461819",
    "end": "463440"
  },
  {
    "text": "and remember that prior to the internal",
    "start": "463440",
    "end": "465360"
  },
  {
    "text": "developer platform at the New York Times",
    "start": "465360",
    "end": "467160"
  },
  {
    "text": "teams were deploying to and managing",
    "start": "467160",
    "end": "469199"
  },
  {
    "text": "their own infrastructure and so if we",
    "start": "469199",
    "end": "471180"
  },
  {
    "text": "made the process much more difficult and",
    "start": "471180",
    "end": "473220"
  },
  {
    "text": "complicated than it had to be it was",
    "start": "473220",
    "end": "475199"
  },
  {
    "text": "going to be harder to convince them to",
    "start": "475199",
    "end": "476940"
  },
  {
    "text": "onboard and give the shared cluster a",
    "start": "476940",
    "end": "478680"
  },
  {
    "text": "shot",
    "start": "478680",
    "end": "480500"
  },
  {
    "text": "so we should focus on making policies",
    "start": "480500",
    "end": "483300"
  },
  {
    "text": "easy to access and start giving feedback",
    "start": "483300",
    "end": "485280"
  },
  {
    "text": "early and after that feedback",
    "start": "485280",
    "end": "486840"
  },
  {
    "text": "continuously so how can we do this",
    "start": "486840",
    "end": "490139"
  },
  {
    "text": "we can use openconf test we can write",
    "start": "490139",
    "end": "493080"
  },
  {
    "text": "policies package them into signed open",
    "start": "493080",
    "end": "495300"
  },
  {
    "text": "bundles and make them available to an",
    "start": "495300",
    "end": "497220"
  },
  {
    "text": "organization we can set any policies",
    "start": "497220",
    "end": "499620"
  },
  {
    "text": "that we want from high level to deeply",
    "start": "499620",
    "end": "501539"
  },
  {
    "text": "detailed or technical we can write",
    "start": "501539",
    "end": "503460"
  },
  {
    "text": "warnings for upcoming policy changes and",
    "start": "503460",
    "end": "506280"
  },
  {
    "text": "we might not be able to force developers",
    "start": "506280",
    "end": "508020"
  },
  {
    "text": "to leverage the tools for their local",
    "start": "508020",
    "end": "509699"
  },
  {
    "text": "development but we can integrate",
    "start": "509699",
    "end": "511500"
  },
  {
    "text": "confestest into CI and we can make sure",
    "start": "511500",
    "end": "513839"
  },
  {
    "text": "that non-compliant configuration can't",
    "start": "513839",
    "end": "515880"
  },
  {
    "text": "pass to the next phase of development",
    "start": "515880",
    "end": "517680"
  },
  {
    "text": "this feedback is fast and continuous and",
    "start": "517680",
    "end": "520620"
  },
  {
    "text": "gives operations teams some peace of",
    "start": "520620",
    "end": "522599"
  },
  {
    "text": "mind especially when we're dealing with",
    "start": "522599",
    "end": "525060"
  },
  {
    "text": "configuration files that are automated",
    "start": "525060",
    "end": "526920"
  },
  {
    "text": "and automatically created we can know",
    "start": "526920",
    "end": "529380"
  },
  {
    "text": "that those automatically created files",
    "start": "529380",
    "end": "531120"
  },
  {
    "text": "meet a minimum level of compliance and",
    "start": "531120",
    "end": "533459"
  },
  {
    "text": "with time and attention to detail we can",
    "start": "533459",
    "end": "535380"
  },
  {
    "text": "turn this into automatic merging making",
    "start": "535380",
    "end": "537600"
  },
  {
    "text": "these systems more scalable no longer",
    "start": "537600",
    "end": "540000"
  },
  {
    "text": "does every Argo app project spec need to",
    "start": "540000",
    "end": "542399"
  },
  {
    "text": "be reviewed manually by a CI CD engineer",
    "start": "542399",
    "end": "544680"
  },
  {
    "text": "we write the policies we need and we let",
    "start": "544680",
    "end": "546959"
  },
  {
    "text": "confess do the rest",
    "start": "546959",
    "end": "549300"
  },
  {
    "start": "549000",
    "end": "846000"
  },
  {
    "text": "so with that I want to move into a demo",
    "start": "549300",
    "end": "551100"
  },
  {
    "text": "of actually writing policies for open",
    "start": "551100",
    "end": "553200"
  },
  {
    "text": "comp test so I'll show you the anatomy",
    "start": "553200",
    "end": "555480"
  },
  {
    "text": "of a regular policy I'll teach you a",
    "start": "555480",
    "end": "557220"
  },
  {
    "text": "little bit of regologic and then we'll",
    "start": "557220",
    "end": "559080"
  },
  {
    "text": "write some Progressive policies for an",
    "start": "559080",
    "end": "560760"
  },
  {
    "text": "example that I'll lay out",
    "start": "560760",
    "end": "563160"
  },
  {
    "text": "and we'll look at some kubernetes specs",
    "start": "563160",
    "end": "565260"
  },
  {
    "text": "we're also going to look at policies",
    "start": "565260",
    "end": "566640"
  },
  {
    "text": "that govern a drone pipeline which is a",
    "start": "566640",
    "end": "568800"
  },
  {
    "text": "continuous integration tool that we use",
    "start": "568800",
    "end": "570300"
  },
  {
    "text": "at New York Times and finally I'll show",
    "start": "570300",
    "end": "572399"
  },
  {
    "text": "you a policy that can be used to govern",
    "start": "572399",
    "end": "573959"
  },
  {
    "text": "namespace resources in an Argo app",
    "start": "573959",
    "end": "576120"
  },
  {
    "text": "project",
    "start": "576120",
    "end": "577200"
  },
  {
    "text": "and just as an aside if you'd like",
    "start": "577200",
    "end": "578820"
  },
  {
    "text": "access to the code I'm about to go over",
    "start": "578820",
    "end": "580500"
  },
  {
    "text": "there's a public GitHub repository of",
    "start": "580500",
    "end": "582540"
  },
  {
    "text": "examples that are used in this",
    "start": "582540",
    "end": "583860"
  },
  {
    "text": "presentation",
    "start": "583860",
    "end": "585060"
  },
  {
    "text": "you can scan this QR code these slides",
    "start": "585060",
    "end": "587700"
  },
  {
    "text": "are also already available and will be",
    "start": "587700",
    "end": "589620"
  },
  {
    "text": "available after the talk",
    "start": "589620",
    "end": "591540"
  },
  {
    "text": "so you can look at them and there's this",
    "start": "591540",
    "end": "593760"
  },
  {
    "text": "command at the bottom that if you have",
    "start": "593760",
    "end": "595860"
  },
  {
    "text": "conf test on your machine you can pull",
    "start": "595860",
    "end": "597600"
  },
  {
    "text": "down the policies now",
    "start": "597600",
    "end": "600540"
  },
  {
    "text": "and I also want to talk a little bit",
    "start": "600540",
    "end": "601740"
  },
  {
    "text": "about Rego which in its documentation",
    "start": "601740",
    "end": "603980"
  },
  {
    "text": "describes itself as easy to read write",
    "start": "603980",
    "end": "606480"
  },
  {
    "text": "and understand",
    "start": "606480",
    "end": "608519"
  },
  {
    "text": "which is not true",
    "start": "608519",
    "end": "610980"
  },
  {
    "text": "um there is a learning curve I think",
    "start": "610980",
    "end": "613260"
  },
  {
    "text": "once you get over the learning curve",
    "start": "613260",
    "end": "615300"
  },
  {
    "text": "it's fine and it is these things but the",
    "start": "615300",
    "end": "618540"
  },
  {
    "text": "logic can be a little unintuitive",
    "start": "618540",
    "end": "621000"
  },
  {
    "text": "but within comptest we can really write",
    "start": "621000",
    "end": "623519"
  },
  {
    "text": "two kinds of tests a warning or a",
    "start": "623519",
    "end": "625680"
  },
  {
    "text": "failure and within failures we can write",
    "start": "625680",
    "end": "627660"
  },
  {
    "text": "deny policies that return a string",
    "start": "627660",
    "end": "629519"
  },
  {
    "text": "message or violation failures which",
    "start": "629519",
    "end": "631740"
  },
  {
    "text": "returns structured data into structured",
    "start": "631740",
    "end": "633720"
  },
  {
    "text": "data errors",
    "start": "633720",
    "end": "635760"
  },
  {
    "text": "so to write our policies we're going to",
    "start": "635760",
    "end": "637620"
  },
  {
    "text": "use this example scenario of prohibiting",
    "start": "637620",
    "end": "639660"
  },
  {
    "text": "the use of latest tags for container",
    "start": "639660",
    "end": "641519"
  },
  {
    "text": "images in non-dev environments using the",
    "start": "641519",
    "end": "644700"
  },
  {
    "text": "latest tag can lead to unexpected and",
    "start": "644700",
    "end": "646440"
  },
  {
    "text": "potentially harmful changes because it",
    "start": "646440",
    "end": "648300"
  },
  {
    "text": "can point to a newer version of the",
    "start": "648300",
    "end": "649980"
  },
  {
    "text": "compiled software without any explicit",
    "start": "649980",
    "end": "651959"
  },
  {
    "text": "action on the user's part and we all",
    "start": "651959",
    "end": "654120"
  },
  {
    "text": "know that every time you use a latest",
    "start": "654120",
    "end": "656279"
  },
  {
    "text": "tag in production a security engineer",
    "start": "656279",
    "end": "658560"
  },
  {
    "text": "gets very sad and a hacker gets very",
    "start": "658560",
    "end": "660899"
  },
  {
    "text": "happy",
    "start": "660899",
    "end": "662640"
  },
  {
    "text": "so we're going to write a regular policy",
    "start": "662640",
    "end": "664380"
  },
  {
    "text": "that governs the kubernetes deployment",
    "start": "664380",
    "end": "666120"
  },
  {
    "text": "spec that you see here the spec may",
    "start": "666120",
    "end": "668220"
  },
  {
    "text": "contain multiple containers which are",
    "start": "668220",
    "end": "669839"
  },
  {
    "text": "defined in a list that's in the red box",
    "start": "669839",
    "end": "671820"
  },
  {
    "text": "and to write this policy we first need",
    "start": "671820",
    "end": "674100"
  },
  {
    "text": "to decide what kind of rule we need so",
    "start": "674100",
    "end": "676500"
  },
  {
    "text": "in this case we want to deny the use of",
    "start": "676500",
    "end": "678420"
  },
  {
    "text": "latest image tags so we're going to",
    "start": "678420",
    "end": "680279"
  },
  {
    "text": "write a deny rule",
    "start": "680279",
    "end": "682380"
  },
  {
    "text": "so to Define our rule we're going to",
    "start": "682380",
    "end": "684060"
  },
  {
    "text": "create a variable called image",
    "start": "684060",
    "end": "686160"
  },
  {
    "text": "which specifies the path to the",
    "start": "686160",
    "end": "687959"
  },
  {
    "text": "container images in the kubernetes",
    "start": "687959",
    "end": "689640"
  },
  {
    "text": "deployment spec",
    "start": "689640",
    "end": "690959"
  },
  {
    "text": "this path is prefixed with the word",
    "start": "690959",
    "end": "692880"
  },
  {
    "text": "input which refers to the input data",
    "start": "692880",
    "end": "695399"
  },
  {
    "text": "that is provided at runtime",
    "start": "695399",
    "end": "697560"
  },
  {
    "text": "since there can be multiple containers",
    "start": "697560",
    "end": "699240"
  },
  {
    "text": "defined in a single kubernetes",
    "start": "699240",
    "end": "700980"
  },
  {
    "text": "deployment spec we need to iterate",
    "start": "700980",
    "end": "702600"
  },
  {
    "text": "through the images of each container in",
    "start": "702600",
    "end": "704640"
  },
  {
    "text": "the list and we're going to use a",
    "start": "704640",
    "end": "706980"
  },
  {
    "text": "special iterator character underscore",
    "start": "706980",
    "end": "708779"
  },
  {
    "text": "instead of a variable like I",
    "start": "708779",
    "end": "711000"
  },
  {
    "text": "this is a best practice in Rego since",
    "start": "711000",
    "end": "713160"
  },
  {
    "text": "the iterator variable has a local scope",
    "start": "713160",
    "end": "715200"
  },
  {
    "text": "and is not referenced elsewhere I will",
    "start": "715200",
    "end": "717420"
  },
  {
    "text": "come back to this later",
    "start": "717420",
    "end": "719040"
  },
  {
    "text": "and next we'll use rego's built-in ends",
    "start": "719040",
    "end": "721440"
  },
  {
    "text": "with function to check if the image ends",
    "start": "721440",
    "end": "723540"
  },
  {
    "text": "with the tag latest and if it does we'll",
    "start": "723540",
    "end": "725279"
  },
  {
    "text": "return this message",
    "start": "725279",
    "end": "727800"
  },
  {
    "text": "so we can test our configuration against",
    "start": "727800",
    "end": "729839"
  },
  {
    "text": "this policy with the command comp test",
    "start": "729839",
    "end": "731760"
  },
  {
    "text": "test and the result as you can see and",
    "start": "731760",
    "end": "733800"
  },
  {
    "text": "as we expected is a failure and so the",
    "start": "733800",
    "end": "737160"
  },
  {
    "text": "example that I originally laid out was",
    "start": "737160",
    "end": "739200"
  },
  {
    "text": "that latest tags can't be used in",
    "start": "739200",
    "end": "740760"
  },
  {
    "text": "production or staging environments so",
    "start": "740760",
    "end": "742980"
  },
  {
    "text": "how can we update our policies to",
    "start": "742980",
    "end": "744540"
  },
  {
    "text": "reflect that these latest image tags can",
    "start": "744540",
    "end": "746459"
  },
  {
    "text": "be used in a Dev environment just not",
    "start": "746459",
    "end": "748320"
  },
  {
    "text": "staging your production",
    "start": "748320",
    "end": "750540"
  },
  {
    "text": "once again we're going to start by",
    "start": "750540",
    "end": "752040"
  },
  {
    "text": "looking at two deployment specs one is",
    "start": "752040",
    "end": "754079"
  },
  {
    "text": "for a Dev environment and one is for a",
    "start": "754079",
    "end": "755820"
  },
  {
    "text": "staging environment and both have one",
    "start": "755820",
    "end": "757560"
  },
  {
    "text": "container with one image that is tagged",
    "start": "757560",
    "end": "759600"
  },
  {
    "text": "latest",
    "start": "759600",
    "end": "760680"
  },
  {
    "text": "we want to write a deny rule for the",
    "start": "760680",
    "end": "762720"
  },
  {
    "text": "staging deployment but for the dev",
    "start": "762720",
    "end": "764279"
  },
  {
    "text": "environment let's write a warning",
    "start": "764279",
    "end": "765959"
  },
  {
    "text": "message that just conveys the",
    "start": "765959",
    "end": "767459"
  },
  {
    "text": "information that hey this is okay now",
    "start": "767459",
    "end": "770220"
  },
  {
    "text": "but not in higher",
    "start": "770220",
    "end": "772399"
  },
  {
    "text": "environments so let's go through how we",
    "start": "772399",
    "end": "774899"
  },
  {
    "text": "would write these policies and I'm going",
    "start": "774899",
    "end": "776399"
  },
  {
    "text": "to show you each part one at a time and",
    "start": "776399",
    "end": "778079"
  },
  {
    "text": "then I'll show you all of them together",
    "start": "778079",
    "end": "779339"
  },
  {
    "text": "at the end",
    "start": "779339",
    "end": "781320"
  },
  {
    "text": "first we'll Define a rule that requires",
    "start": "781320",
    "end": "783779"
  },
  {
    "text": "the use of these EnV labels and then",
    "start": "783779",
    "end": "786360"
  },
  {
    "text": "we'll have another rule that enforces",
    "start": "786360",
    "end": "788100"
  },
  {
    "text": "the label to be equal to one of the",
    "start": "788100",
    "end": "790200"
  },
  {
    "text": "three values that is in this set and",
    "start": "790200",
    "end": "792540"
  },
  {
    "text": "you'll notice that in these examples",
    "start": "792540",
    "end": "794160"
  },
  {
    "text": "instead of just using the term deny or",
    "start": "794160",
    "end": "796440"
  },
  {
    "text": "warn I'm suffixing the policies to give",
    "start": "796440",
    "end": "798839"
  },
  {
    "text": "them more descriptive names",
    "start": "798839",
    "end": "801300"
  },
  {
    "text": "next we're going to write a very simple",
    "start": "801300",
    "end": "802980"
  },
  {
    "text": "function is Dev and all this does is",
    "start": "802980",
    "end": "805079"
  },
  {
    "text": "compare the E and V label to the string",
    "start": "805079",
    "end": "806820"
  },
  {
    "text": "Dev",
    "start": "806820",
    "end": "808620"
  },
  {
    "text": "next we have this denialatis tags rule",
    "start": "808620",
    "end": "811139"
  },
  {
    "text": "so what this rule is really saying is if",
    "start": "811139",
    "end": "813540"
  },
  {
    "text": "the image is tagged latest or ends with",
    "start": "813540",
    "end": "815459"
  },
  {
    "text": "latest and the label indicates this is a",
    "start": "815459",
    "end": "817860"
  },
  {
    "text": "non-dev environment deny it",
    "start": "817860",
    "end": "820800"
  },
  {
    "text": "and finally if the image is tagged",
    "start": "820800",
    "end": "823079"
  },
  {
    "text": "latest and it is a Dev environment we'll",
    "start": "823079",
    "end": "825660"
  },
  {
    "text": "return this warning message as a heads",
    "start": "825660",
    "end": "827579"
  },
  {
    "text": "up to Developers",
    "start": "827579",
    "end": "829740"
  },
  {
    "text": "here's that entire policy together minus",
    "start": "829740",
    "end": "832320"
  },
  {
    "text": "the set that enforces the EnV values",
    "start": "832320",
    "end": "835380"
  },
  {
    "text": "because that was just too much code to",
    "start": "835380",
    "end": "837000"
  },
  {
    "text": "fit on one slide but it is in that",
    "start": "837000",
    "end": "838260"
  },
  {
    "text": "GitHub repository",
    "start": "838260",
    "end": "839880"
  },
  {
    "text": "and here are the outputs of those rules",
    "start": "839880",
    "end": "841800"
  },
  {
    "text": "a warning and a failure as we would",
    "start": "841800",
    "end": "843480"
  },
  {
    "text": "expect",
    "start": "843480",
    "end": "845660"
  },
  {
    "text": "so what if you want to allow a certain",
    "start": "845820",
    "end": "847380"
  },
  {
    "start": "846000",
    "end": "1191000"
  },
  {
    "text": "image to be tagged latest in this case",
    "start": "847380",
    "end": "849600"
  },
  {
    "text": "you can use an exception to define the",
    "start": "849600",
    "end": "851459"
  },
  {
    "text": "images that you would like to allow and",
    "start": "851459",
    "end": "853200"
  },
  {
    "text": "you can see that in the upper right",
    "start": "853200",
    "end": "854820"
  },
  {
    "text": "quadrant of this slide this defines a",
    "start": "854820",
    "end": "857760"
  },
  {
    "text": "set of allowed images and creates an",
    "start": "857760",
    "end": "859860"
  },
  {
    "text": "exception to the rule latest tags if the",
    "start": "859860",
    "end": "862800"
  },
  {
    "text": "container image is in that set and these",
    "start": "862800",
    "end": "865260"
  },
  {
    "text": "exceptions are reflected in the testing",
    "start": "865260",
    "end": "867060"
  },
  {
    "text": "output",
    "start": "867060",
    "end": "869100"
  },
  {
    "text": "so all of our examples thus far have",
    "start": "869100",
    "end": "871019"
  },
  {
    "text": "have used the image path for deployments",
    "start": "871019",
    "end": "873240"
  },
  {
    "text": "and replica sets in kubernetes if we",
    "start": "873240",
    "end": "875399"
  },
  {
    "text": "wanted to capture pods as well we could",
    "start": "875399",
    "end": "877260"
  },
  {
    "text": "write a different deny rule to check for",
    "start": "877260",
    "end": "879060"
  },
  {
    "text": "that specific input path and this gives",
    "start": "879060",
    "end": "881820"
  },
  {
    "text": "me a chance to talk a little bit more",
    "start": "881820",
    "end": "883199"
  },
  {
    "text": "about logic in Rego",
    "start": "883199",
    "end": "885360"
  },
  {
    "text": "so a policy is essentially a collection",
    "start": "885360",
    "end": "887339"
  },
  {
    "text": "of Boolean conditions in order for a",
    "start": "887339",
    "end": "889800"
  },
  {
    "text": "policy to be true all of the conditions",
    "start": "889800",
    "end": "891720"
  },
  {
    "text": "defined within that policy have to be",
    "start": "891720",
    "end": "893639"
  },
  {
    "text": "true",
    "start": "893639",
    "end": "894420"
  },
  {
    "text": "so in this case the denino EnV label",
    "start": "894420",
    "end": "896940"
  },
  {
    "text": "will be true if metadata's metadata",
    "start": "896940",
    "end": "899760"
  },
  {
    "text": "labels EnV does not exist but I also",
    "start": "899760",
    "end": "902399"
  },
  {
    "text": "want to pay special attention to the",
    "start": "902399",
    "end": "903899"
  },
  {
    "text": "message as well because if the kind and",
    "start": "903899",
    "end": "906180"
  },
  {
    "text": "the metadata name aren't defined the",
    "start": "906180",
    "end": "908519"
  },
  {
    "text": "message will not evaluate to true and",
    "start": "908519",
    "end": "910560"
  },
  {
    "text": "the deny policy won't be triggered",
    "start": "910560",
    "end": "912899"
  },
  {
    "text": "this has happened to me before",
    "start": "912899",
    "end": "914940"
  },
  {
    "text": "if we add other conditions into the deny",
    "start": "914940",
    "end": "917459"
  },
  {
    "text": "policy all of those conditions must be",
    "start": "917459",
    "end": "919440"
  },
  {
    "text": "true for the deny to be triggered so",
    "start": "919440",
    "end": "921779"
  },
  {
    "text": "joining multiple Expressions together in",
    "start": "921779",
    "end": "923459"
  },
  {
    "text": "a single rule is a logical and between",
    "start": "923459",
    "end": "925680"
  },
  {
    "text": "those conditions which might make you",
    "start": "925680",
    "end": "927839"
  },
  {
    "text": "think what about a logical or",
    "start": "927839",
    "end": "930899"
  },
  {
    "text": "to express a logical or in Rego you",
    "start": "930899",
    "end": "932880"
  },
  {
    "text": "define multiple rules with the same name",
    "start": "932880",
    "end": "934740"
  },
  {
    "text": "so in this example the deny latest tags",
    "start": "934740",
    "end": "937320"
  },
  {
    "text": "rule is defined twice once for pods and",
    "start": "937320",
    "end": "939779"
  },
  {
    "text": "once for deployments and replica sets",
    "start": "939779",
    "end": "942000"
  },
  {
    "text": "as in earlier examples it's completely",
    "start": "942000",
    "end": "944399"
  },
  {
    "text": "fine to just name your rules deny",
    "start": "944399",
    "end": "946800"
  },
  {
    "text": "but",
    "start": "946800",
    "end": "948060"
  },
  {
    "text": "that could be viewed as deny this or",
    "start": "948060",
    "end": "950459"
  },
  {
    "text": "this or this or this if you have a",
    "start": "950459",
    "end": "952860"
  },
  {
    "text": "desire to suffix your policy names for",
    "start": "952860",
    "end": "954660"
  },
  {
    "text": "clarity you can do that too",
    "start": "954660",
    "end": "957240"
  },
  {
    "text": "oppa also provides a framework that",
    "start": "957240",
    "end": "959100"
  },
  {
    "text": "allows you to write unit tests for your",
    "start": "959100",
    "end": "960600"
  },
  {
    "text": "policy because I bet everyone in this",
    "start": "960600",
    "end": "962459"
  },
  {
    "text": "room loves writing tests for their tests",
    "start": "962459",
    "end": "965420"
  },
  {
    "text": "in this test written on the left is",
    "start": "965420",
    "end": "967980"
  },
  {
    "text": "testing our denial latest tags rule this",
    "start": "967980",
    "end": "970139"
  },
  {
    "text": "with input as language overrides the",
    "start": "970139",
    "end": "972540"
  },
  {
    "text": "input data with the testing input on the",
    "start": "972540",
    "end": "975000"
  },
  {
    "text": "right which is just a kubernetes",
    "start": "975000",
    "end": "976740"
  },
  {
    "text": "deployment emo that I've translated into",
    "start": "976740",
    "end": "979019"
  },
  {
    "text": "Json",
    "start": "979019",
    "end": "980519"
  },
  {
    "text": "you can also use the OPA CLI to check",
    "start": "980519",
    "end": "982440"
  },
  {
    "text": "your code coverage and it will give you",
    "start": "982440",
    "end": "983940"
  },
  {
    "text": "a detailed output of which lines are",
    "start": "983940",
    "end": "985680"
  },
  {
    "text": "covered and the total code coverage as",
    "start": "985680",
    "end": "987660"
  },
  {
    "text": "well as code coverage of specific policy",
    "start": "987660",
    "end": "989699"
  },
  {
    "text": "files",
    "start": "989699",
    "end": "990720"
  },
  {
    "text": "overall writing unit tests helps ensure",
    "start": "990720",
    "end": "993000"
  },
  {
    "text": "their correctness and reliability and",
    "start": "993000",
    "end": "994800"
  },
  {
    "text": "enables more confident decision making",
    "start": "994800",
    "end": "996360"
  },
  {
    "text": "in your system",
    "start": "996360",
    "end": "998940"
  },
  {
    "text": "so that's the basic anatomy of orego",
    "start": "998940",
    "end": "1001040"
  },
  {
    "text": "policy and some basic information about",
    "start": "1001040",
    "end": "1002779"
  },
  {
    "text": "how to write policies that govern",
    "start": "1002779",
    "end": "1004160"
  },
  {
    "text": "kubernetes objects but confess isn't",
    "start": "1004160",
    "end": "1007100"
  },
  {
    "text": "limited to kubernetes manifests comptest",
    "start": "1007100",
    "end": "1009920"
  },
  {
    "text": "supports governance of any kind of",
    "start": "1009920",
    "end": "1011300"
  },
  {
    "text": "structured configuration data for",
    "start": "1011300",
    "end": "1013160"
  },
  {
    "text": "example you can write policies that",
    "start": "1013160",
    "end": "1014839"
  },
  {
    "text": "govern terraform configurations Helm",
    "start": "1014839",
    "end": "1017240"
  },
  {
    "text": "templates Docker files Argo crds CI",
    "start": "1017240",
    "end": "1020300"
  },
  {
    "text": "pipeline configuration the list goes on",
    "start": "1020300",
    "end": "1022459"
  },
  {
    "text": "so we'll look at a few additional",
    "start": "1022459",
    "end": "1024260"
  },
  {
    "text": "examples of just how you can implement",
    "start": "1024260",
    "end": "1026120"
  },
  {
    "text": "it",
    "start": "1026120",
    "end": "1027438"
  },
  {
    "text": "here's an example of some policies that",
    "start": "1027439",
    "end": "1029540"
  },
  {
    "text": "can be written for a drone pipeline in",
    "start": "1029540",
    "end": "1031220"
  },
  {
    "text": "yaml formatting these policies follow",
    "start": "1031220",
    "end": "1033500"
  },
  {
    "text": "our example scenario of latest tags",
    "start": "1033500",
    "end": "1035480"
  },
  {
    "text": "however you will notice the syntax is a",
    "start": "1035480",
    "end": "1037699"
  },
  {
    "text": "little bit different these rules were",
    "start": "1037699",
    "end": "1039620"
  },
  {
    "text": "written using future keywords to give",
    "start": "1039620",
    "end": "1041660"
  },
  {
    "text": "you an example of different ways to",
    "start": "1041660",
    "end": "1043100"
  },
  {
    "text": "draft Rego policies",
    "start": "1043100",
    "end": "1044780"
  },
  {
    "text": "I also want to bring attention to the",
    "start": "1044780",
    "end": "1046760"
  },
  {
    "text": "use of the every keyword in this last",
    "start": "1046760",
    "end": "1048500"
  },
  {
    "text": "block of code this keyword is used and",
    "start": "1048500",
    "end": "1050840"
  },
  {
    "text": "will return true if all items meet the",
    "start": "1050840",
    "end": "1052640"
  },
  {
    "text": "condition so this is useful if you need",
    "start": "1052640",
    "end": "1054799"
  },
  {
    "text": "everything in a list to have a uniform",
    "start": "1054799",
    "end": "1056419"
  },
  {
    "text": "conformity",
    "start": "1056419",
    "end": "1058640"
  },
  {
    "text": "and finally I want to look at an example",
    "start": "1058640",
    "end": "1060620"
  },
  {
    "text": "of governing namespace resources for an",
    "start": "1060620",
    "end": "1063020"
  },
  {
    "text": "Argo crd app project",
    "start": "1063020",
    "end": "1066020"
  },
  {
    "text": "I want to look at this namespace",
    "start": "1066020",
    "end": "1067700"
  },
  {
    "text": "resource whitelist portion of the spec",
    "start": "1067700",
    "end": "1069320"
  },
  {
    "text": "we want to be able to check that these",
    "start": "1069320",
    "end": "1071480"
  },
  {
    "text": "lists of mappings are a pair and what I",
    "start": "1071480",
    "end": "1073820"
  },
  {
    "text": "mean by that is instead of just checking",
    "start": "1073820",
    "end": "1075500"
  },
  {
    "text": "the groups or instead of just checking",
    "start": "1075500",
    "end": "1077000"
  },
  {
    "text": "the kind I want to say here are our",
    "start": "1077000",
    "end": "1079039"
  },
  {
    "text": "allowed groups and here are the allowed",
    "start": "1079039",
    "end": "1080900"
  },
  {
    "text": "kinds within that group",
    "start": "1080900",
    "end": "1082760"
  },
  {
    "text": "so to do that we're going to use a map",
    "start": "1082760",
    "end": "1084679"
  },
  {
    "text": "and two rules",
    "start": "1084679",
    "end": "1087640"
  },
  {
    "text": "one that checks the correct groups and",
    "start": "1088760",
    "end": "1090980"
  },
  {
    "text": "one that enforces the kinds belonging to",
    "start": "1090980",
    "end": "1093020"
  },
  {
    "text": "each group",
    "start": "1093020",
    "end": "1094340"
  },
  {
    "text": "so first I've set up this allowed",
    "start": "1094340",
    "end": "1096440"
  },
  {
    "text": "namespace resources map that tells us",
    "start": "1096440",
    "end": "1098480"
  },
  {
    "text": "the group and what kinds are allowed to",
    "start": "1098480",
    "end": "1100220"
  },
  {
    "text": "belong to that group",
    "start": "1100220",
    "end": "1101900"
  },
  {
    "text": "this deny namespace groups is pretty",
    "start": "1101900",
    "end": "1104179"
  },
  {
    "text": "simple and just checks the keys in our",
    "start": "1104179",
    "end": "1106039"
  },
  {
    "text": "map",
    "start": "1106039",
    "end": "1107179"
  },
  {
    "text": "this deny namespace kind rule then takes",
    "start": "1107179",
    "end": "1109700"
  },
  {
    "text": "the groups creates a smaller list of the",
    "start": "1109700",
    "end": "1111679"
  },
  {
    "text": "allowed values and then compares the",
    "start": "1111679",
    "end": "1113480"
  },
  {
    "text": "input kind to that list",
    "start": "1113480",
    "end": "1115520"
  },
  {
    "text": "and now quickly you'll notice that here",
    "start": "1115520",
    "end": "1117440"
  },
  {
    "text": "I have used some i instead of the",
    "start": "1117440",
    "end": "1120020"
  },
  {
    "text": "underscore value and that's because an",
    "start": "1120020",
    "end": "1123559"
  },
  {
    "text": "underscore value instantiates a separate",
    "start": "1123559",
    "end": "1125600"
  },
  {
    "text": "iterator each time it's called so if you",
    "start": "1125600",
    "end": "1127880"
  },
  {
    "text": "use the underscore in this case you're",
    "start": "1127880",
    "end": "1129440"
  },
  {
    "text": "going to end up comparing each kind to",
    "start": "1129440",
    "end": "1131360"
  },
  {
    "text": "each group independently which isn't",
    "start": "1131360",
    "end": "1133340"
  },
  {
    "text": "what we want and if you don't believe me",
    "start": "1133340",
    "end": "1135380"
  },
  {
    "text": "Rego provides a handy print function",
    "start": "1135380",
    "end": "1137360"
  },
  {
    "text": "which is my favorite way of debugging",
    "start": "1137360",
    "end": "1139940"
  },
  {
    "text": "so I've added a print command to the",
    "start": "1139940",
    "end": "1141740"
  },
  {
    "text": "exact rule we were just looking at to",
    "start": "1141740",
    "end": "1143539"
  },
  {
    "text": "compare the group the kind and that",
    "start": "1143539",
    "end": "1145340"
  },
  {
    "text": "smaller allowed kind set and this is the",
    "start": "1145340",
    "end": "1147860"
  },
  {
    "text": "behavior that we would expect using some",
    "start": "1147860",
    "end": "1149720"
  },
  {
    "text": "I where we to use an underscore this",
    "start": "1149720",
    "end": "1152660"
  },
  {
    "text": "would be the behavior",
    "start": "1152660",
    "end": "1154340"
  },
  {
    "text": "so each time an underscore is specified",
    "start": "1154340",
    "end": "1156380"
  },
  {
    "text": "a new iterator is instantiated and under",
    "start": "1156380",
    "end": "1158960"
  },
  {
    "text": "the hood Opa translates this character",
    "start": "1158960",
    "end": "1161000"
  },
  {
    "text": "to a unique variable name that doesn't",
    "start": "1161000",
    "end": "1162980"
  },
  {
    "text": "conflict with variables and rules in",
    "start": "1162980",
    "end": "1164780"
  },
  {
    "text": "scope therefore when you're calling it",
    "start": "1164780",
    "end": "1166940"
  },
  {
    "text": "twice in this manner it would be",
    "start": "1166940",
    "end": "1168260"
  },
  {
    "text": "equivalent to instantiating two",
    "start": "1168260",
    "end": "1169820"
  },
  {
    "text": "iterators I and J and you'll end up",
    "start": "1169820",
    "end": "1172100"
  },
  {
    "text": "comparing every kind against every Group",
    "start": "1172100",
    "end": "1174020"
  },
  {
    "text": "which will lead to unexpected Behavior",
    "start": "1174020",
    "end": "1176000"
  },
  {
    "text": "if you don't like using the print",
    "start": "1176000",
    "end": "1177860"
  },
  {
    "text": "function you can also do a query Trace",
    "start": "1177860",
    "end": "1181820"
  },
  {
    "text": "um for which is useful for debugging",
    "start": "1181820",
    "end": "1183380"
  },
  {
    "text": "purposes sometimes and these rules and",
    "start": "1183380",
    "end": "1186140"
  },
  {
    "text": "these tools together can help you",
    "start": "1186140",
    "end": "1187400"
  },
  {
    "text": "understand the underlying logic of your",
    "start": "1187400",
    "end": "1189080"
  },
  {
    "text": "Rego policies and rules",
    "start": "1189080",
    "end": "1191179"
  },
  {
    "start": "1191000",
    "end": "1333000"
  },
  {
    "text": "so now that we've gone over how to write",
    "start": "1191179",
    "end": "1192740"
  },
  {
    "text": "comp test policies I want to bring",
    "start": "1192740",
    "end": "1194600"
  },
  {
    "text": "everything we've talked about together",
    "start": "1194600",
    "end": "1195860"
  },
  {
    "text": "and tell you about how we've implemented",
    "start": "1195860",
    "end": "1197660"
  },
  {
    "text": "confest and where we're going next",
    "start": "1197660",
    "end": "1200240"
  },
  {
    "text": "so my team started by writing specific",
    "start": "1200240",
    "end": "1202160"
  },
  {
    "text": "high-level rules that governed basic",
    "start": "1202160",
    "end": "1204140"
  },
  {
    "text": "aspects of our Argo CD Source repository",
    "start": "1204140",
    "end": "1206660"
  },
  {
    "text": "as well as our shared repositories for",
    "start": "1206660",
    "end": "1208880"
  },
  {
    "text": "projects and applications these policies",
    "start": "1208880",
    "end": "1211340"
  },
  {
    "text": "were initially very Bare Bones with the",
    "start": "1211340",
    "end": "1213200"
  },
  {
    "text": "hope of checking agreement and",
    "start": "1213200",
    "end": "1214640"
  },
  {
    "text": "preventing silly mistakes and to help us",
    "start": "1214640",
    "end": "1216559"
  },
  {
    "text": "Streamlight streamline code reviews",
    "start": "1216559",
    "end": "1220039"
  },
  {
    "text": "while we own the app in Project",
    "start": "1220039",
    "end": "1221539"
  },
  {
    "text": "repositories that Argo syncs to the live",
    "start": "1221539",
    "end": "1224059"
  },
  {
    "text": "clusters there are multiple sources that",
    "start": "1224059",
    "end": "1226100"
  },
  {
    "text": "might commit or merge to those repos so",
    "start": "1226100",
    "end": "1228380"
  },
  {
    "text": "we set up minimal and then more",
    "start": "1228380",
    "end": "1229880"
  },
  {
    "text": "exhaustive levels of policy these help",
    "start": "1229880",
    "end": "1232340"
  },
  {
    "text": "ensure some simple checks on the",
    "start": "1232340",
    "end": "1233780"
  },
  {
    "text": "configuration code being checked into",
    "start": "1233780",
    "end": "1235280"
  },
  {
    "text": "the repositories before they are merged",
    "start": "1235280",
    "end": "1237260"
  },
  {
    "text": "and synced to the live clusters",
    "start": "1237260",
    "end": "1240080"
  },
  {
    "text": "when onboarding new applications to our",
    "start": "1240080",
    "end": "1242179"
  },
  {
    "text": "shared infrastructure our internal",
    "start": "1242179",
    "end": "1243919"
  },
  {
    "text": "platform handles the creation of certain",
    "start": "1243919",
    "end": "1245600"
  },
  {
    "text": "git repositories and configuration part",
    "start": "1245600",
    "end": "1248360"
  },
  {
    "text": "of this includes Argo objects like",
    "start": "1248360",
    "end": "1250160"
  },
  {
    "text": "projects and applications our IDP opens",
    "start": "1250160",
    "end": "1253039"
  },
  {
    "text": "PRS against these repositories and with",
    "start": "1253039",
    "end": "1255080"
  },
  {
    "text": "the policies that we have in place for",
    "start": "1255080",
    "end": "1256580"
  },
  {
    "text": "those repositories we feel comfortable",
    "start": "1256580",
    "end": "1258320"
  },
  {
    "text": "allowing those PRS to automatically",
    "start": "1258320",
    "end": "1260179"
  },
  {
    "text": "merge if they can pass our policy tests",
    "start": "1260179",
    "end": "1262820"
  },
  {
    "text": "this allows us to scale deployment since",
    "start": "1262820",
    "end": "1265340"
  },
  {
    "text": "there are many more Engineers generally",
    "start": "1265340",
    "end": "1266960"
  },
  {
    "text": "at the New York Times who are deploying",
    "start": "1266960",
    "end": "1268700"
  },
  {
    "text": "applications than there are Engineers on",
    "start": "1268700",
    "end": "1270620"
  },
  {
    "text": "the CI CD team we've been able to avoid",
    "start": "1270620",
    "end": "1273080"
  },
  {
    "text": "bottlenecks because we don't need an",
    "start": "1273080",
    "end": "1274880"
  },
  {
    "text": "engineer to review every PR or review",
    "start": "1274880",
    "end": "1276980"
  },
  {
    "text": "them as comprehensively",
    "start": "1276980",
    "end": "1279440"
  },
  {
    "text": "policies can be shared by packaging them",
    "start": "1279440",
    "end": "1281600"
  },
  {
    "text": "into an Opa bundle and using that bundle",
    "start": "1281600",
    "end": "1283700"
  },
  {
    "text": "on an Opa server these bundles can be",
    "start": "1283700",
    "end": "1286220"
  },
  {
    "text": "signed they can also be pulled via the",
    "start": "1286220",
    "end": "1288740"
  },
  {
    "text": "conf test CLI using a URL or a specific",
    "start": "1288740",
    "end": "1291260"
  },
  {
    "text": "protocol a git",
    "start": "1291260",
    "end": "1292880"
  },
  {
    "text": "and this has allowed us to govern",
    "start": "1292880",
    "end": "1294320"
  },
  {
    "text": "multiple kinds of configuration data as",
    "start": "1294320",
    "end": "1296539"
  },
  {
    "text": "they come through our CI tool",
    "start": "1296539",
    "end": "1298520"
  },
  {
    "text": "policies can also be used to help new",
    "start": "1298520",
    "end": "1300380"
  },
  {
    "text": "Engineers on board more quickly by",
    "start": "1300380",
    "end": "1302120"
  },
  {
    "text": "giving them fast and continuous feedback",
    "start": "1302120",
    "end": "1303980"
  },
  {
    "text": "while they're developing about our",
    "start": "1303980",
    "end": "1305960"
  },
  {
    "text": "organizational-wide policies",
    "start": "1305960",
    "end": "1308120"
  },
  {
    "text": "kind of like guard rails at bowling",
    "start": "1308120",
    "end": "1311419"
  },
  {
    "text": "so that's how we've used opecomp test to",
    "start": "1311419",
    "end": "1313400"
  },
  {
    "text": "automate configuration and permissions",
    "start": "1313400",
    "end": "1314960"
  },
  {
    "text": "testing within the git Ops operational",
    "start": "1314960",
    "end": "1317179"
  },
  {
    "text": "framework",
    "start": "1317179",
    "end": "1318440"
  },
  {
    "text": "and now I'm going to turn this talk over",
    "start": "1318440",
    "end": "1321200"
  },
  {
    "text": "to Mike so he can tell you a little bit",
    "start": "1321200",
    "end": "1322940"
  },
  {
    "text": "about our next steps of delving into",
    "start": "1322940",
    "end": "1324740"
  },
  {
    "text": "schema validation with cubeconform",
    "start": "1324740",
    "end": "1328480"
  },
  {
    "text": "thanks Eve",
    "start": "1330620",
    "end": "1332440"
  },
  {
    "text": "I'm going to wrap this up with something",
    "start": "1332440",
    "end": "1334340"
  },
  {
    "start": "1333000",
    "end": "1708000"
  },
  {
    "text": "a little bit more dry which is",
    "start": "1334340",
    "end": "1335840"
  },
  {
    "text": "manifesting the validation uh validation",
    "start": "1335840",
    "end": "1338539"
  },
  {
    "text": "is a critical aspect of ensuring that",
    "start": "1338539",
    "end": "1340220"
  },
  {
    "text": "our kubernetes clusters behave as",
    "start": "1340220",
    "end": "1341900"
  },
  {
    "text": "expected and delivered the functionality",
    "start": "1341900",
    "end": "1343280"
  },
  {
    "text": "that we intend I have this diagram to",
    "start": "1343280",
    "end": "1345740"
  },
  {
    "text": "sort of illustrate the separations of",
    "start": "1345740",
    "end": "1347600"
  },
  {
    "text": "concern unlike governance which focuses",
    "start": "1347600",
    "end": "1350120"
  },
  {
    "text": "on ensuring your application conforms to",
    "start": "1350120",
    "end": "1351919"
  },
  {
    "text": "specific policies and rules as a whole",
    "start": "1351919",
    "end": "1354280"
  },
  {
    "text": "validation is focused on ensuring that",
    "start": "1354280",
    "end": "1356720"
  },
  {
    "text": "individual individual kubernetes objects",
    "start": "1356720",
    "end": "1358760"
  },
  {
    "text": "are defined correctly",
    "start": "1358760",
    "end": "1360799"
  },
  {
    "text": "um and configured you know just the same",
    "start": "1360799",
    "end": "1363679"
  },
  {
    "text": "when we talk about a manifest being",
    "start": "1363679",
    "end": "1365299"
  },
  {
    "text": "valid we mean that it conforms to an",
    "start": "1365299",
    "end": "1367580"
  },
  {
    "text": "expected structure and syntax and can be",
    "start": "1367580",
    "end": "1369740"
  },
  {
    "text": "safely deployed to your kubernetes",
    "start": "1369740",
    "end": "1371659"
  },
  {
    "text": "cluster without this",
    "start": "1371659",
    "end": "1374080"
  },
  {
    "text": "misconfigured manifest can lead to",
    "start": "1374080",
    "end": "1375860"
  },
  {
    "text": "unintended behaviors this is the key",
    "start": "1375860",
    "end": "1377780"
  },
  {
    "text": "reason why validation is so important",
    "start": "1377780",
    "end": "1379880"
  },
  {
    "text": "for example if we Define a kubernetes",
    "start": "1379880",
    "end": "1382340"
  },
  {
    "text": "manifest with incorrect syntax or values",
    "start": "1382340",
    "end": "1384260"
  },
  {
    "text": "we can",
    "start": "1384260",
    "end": "1386240"
  },
  {
    "text": "encounter unexpected behaviors like when",
    "start": "1386240",
    "end": "1389360"
  },
  {
    "text": "we try to deploy it things like resource",
    "start": "1389360",
    "end": "1391640"
  },
  {
    "text": "deletion or",
    "start": "1391640",
    "end": "1393280"
  },
  {
    "text": "applications not coming up",
    "start": "1393280",
    "end": "1395659"
  },
  {
    "text": "yaml is really simple but it is all too",
    "start": "1395659",
    "end": "1397760"
  },
  {
    "text": "easy to make mistakes when writing",
    "start": "1397760",
    "end": "1399140"
  },
  {
    "text": "manifests by hand",
    "start": "1399140",
    "end": "1400760"
  },
  {
    "text": "so I'm going to give some specific",
    "start": "1400760",
    "end": "1402559"
  },
  {
    "text": "manifest examples but this still applies",
    "start": "1402559",
    "end": "1405440"
  },
  {
    "text": "when you're using templating tools to",
    "start": "1405440",
    "end": "1407360"
  },
  {
    "text": "generate manifests",
    "start": "1407360",
    "end": "1409580"
  },
  {
    "text": "so and to help mitigate these risks and",
    "start": "1409580",
    "end": "1412880"
  },
  {
    "text": "um",
    "start": "1412880",
    "end": "1413480"
  },
  {
    "text": "I've misconfigured manifest we use a",
    "start": "1413480",
    "end": "1416000"
  },
  {
    "text": "tool called cubeconform uh cubeconform",
    "start": "1416000",
    "end": "1418820"
  },
  {
    "text": "is an open source tool developed by John",
    "start": "1418820",
    "end": "1420320"
  },
  {
    "text": "Hammond I hope I'm saying that right but",
    "start": "1420320",
    "end": "1423620"
  },
  {
    "text": "thank you for this tool it's designed",
    "start": "1423620",
    "end": "1426080"
  },
  {
    "text": "specifically validating for validating",
    "start": "1426080",
    "end": "1427880"
  },
  {
    "text": "it manifests and can easily integrate",
    "start": "1427880",
    "end": "1430220"
  },
  {
    "text": "into your RCI Pipelines",
    "start": "1430220",
    "end": "1432440"
  },
  {
    "text": "it's just a one-liner that you can throw",
    "start": "1432440",
    "end": "1434179"
  },
  {
    "text": "into all",
    "start": "1434179",
    "end": "1435340"
  },
  {
    "text": "that you can throw all your generated",
    "start": "1435340",
    "end": "1437360"
  },
  {
    "text": "manifests at",
    "start": "1437360",
    "end": "1438980"
  },
  {
    "text": "it allows us to validate our definite",
    "start": "1438980",
    "end": "1442159"
  },
  {
    "text": "manifest",
    "start": "1442159",
    "end": "1443360"
  },
  {
    "text": "um",
    "start": "1443360",
    "end": "1443960"
  },
  {
    "text": "it allows us to validate our manifests",
    "start": "1443960",
    "end": "1446000"
  },
  {
    "text": "against a source of schemas that get",
    "start": "1446000",
    "end": "1447860"
  },
  {
    "text": "matched up to their definitions and",
    "start": "1447860",
    "end": "1449299"
  },
  {
    "text": "ensure that they meet unexpected syntax",
    "start": "1449299",
    "end": "1452000"
  },
  {
    "text": "and structure",
    "start": "1452000",
    "end": "1453440"
  },
  {
    "text": "and we do this again because shifting",
    "start": "1453440",
    "end": "1454940"
  },
  {
    "text": "this left to developers gives faster",
    "start": "1454940",
    "end": "1456799"
  },
  {
    "text": "feedback to the developers on",
    "start": "1456799",
    "end": "1458659"
  },
  {
    "text": "misconfigured manifests earlier in the",
    "start": "1458659",
    "end": "1460940"
  },
  {
    "text": "development process this can reduce the",
    "start": "1460940",
    "end": "1463100"
  },
  {
    "text": "risk of errors and minimize the time and",
    "start": "1463100",
    "end": "1465140"
  },
  {
    "text": "effort required to troubleshoot and fix",
    "start": "1465140",
    "end": "1467480"
  },
  {
    "text": "issues",
    "start": "1467480",
    "end": "1469520"
  },
  {
    "text": "I also want to know in addition to",
    "start": "1469520",
    "end": "1471140"
  },
  {
    "text": "kubernetes Primitives we also have",
    "start": "1471140",
    "end": "1472580"
  },
  {
    "text": "custom resource definitions which allow",
    "start": "1472580",
    "end": "1474260"
  },
  {
    "text": "us to Define our custom Uh custom",
    "start": "1474260",
    "end": "1478039"
  },
  {
    "text": "resource objects within kubernetes",
    "start": "1478039",
    "end": "1479960"
  },
  {
    "text": "unlike kubernetes Primitives which are",
    "start": "1479960",
    "end": "1482539"
  },
  {
    "text": "included out of the box with kubernetes",
    "start": "1482539",
    "end": "1484659"
  },
  {
    "text": "crds must be defined explicitly",
    "start": "1484659",
    "end": "1487340"
  },
  {
    "text": "explicitly and are not a part of the",
    "start": "1487340",
    "end": "1489020"
  },
  {
    "text": "kubernetes core",
    "start": "1489020",
    "end": "1490280"
  },
  {
    "text": "and because they are not a part of the",
    "start": "1490280",
    "end": "1492620"
  },
  {
    "text": "kubernetes core",
    "start": "1492620",
    "end": "1493940"
  },
  {
    "text": "they require a little extra detail",
    "start": "1493940",
    "end": "1495620"
  },
  {
    "text": "attention and detail for validating uh",
    "start": "1495620",
    "end": "1498860"
  },
  {
    "text": "to ensure that they are defined",
    "start": "1498860",
    "end": "1500179"
  },
  {
    "text": "correctly and we'll get a little bit",
    "start": "1500179",
    "end": "1501740"
  },
  {
    "text": "into this later",
    "start": "1501740",
    "end": "1503900"
  },
  {
    "text": "so now that we've explained why",
    "start": "1503900",
    "end": "1505460"
  },
  {
    "text": "validation is important let's look at",
    "start": "1505460",
    "end": "1507380"
  },
  {
    "text": "some invalid manifests",
    "start": "1507380",
    "end": "1509000"
  },
  {
    "text": "for instance in a recent or not so",
    "start": "1509000",
    "end": "1511520"
  },
  {
    "text": "recent update to kubernetes release of",
    "start": "1511520",
    "end": "1514460"
  },
  {
    "text": "1.22 that involves a complete",
    "start": "1514460",
    "end": "1517280"
  },
  {
    "text": "deprecation of the V1 beta1 Ingress API",
    "start": "1517280",
    "end": "1520159"
  },
  {
    "text": "and that's kind of very specific but it",
    "start": "1520159",
    "end": "1522440"
  },
  {
    "text": "meant that you had to uh update all your",
    "start": "1522440",
    "end": "1524659"
  },
  {
    "text": "Ingress manifest to the new version",
    "start": "1524659",
    "end": "1526700"
  },
  {
    "text": "because the older version was no longer",
    "start": "1526700",
    "end": "1529520"
  },
  {
    "text": "supported",
    "start": "1529520",
    "end": "1531500"
  },
  {
    "text": "so this happened to us in fact we had a",
    "start": "1531500",
    "end": "1534080"
  },
  {
    "text": "lingering cluster in sandbox and when we",
    "start": "1534080",
    "end": "1536900"
  },
  {
    "text": "upgraded the cluster many of the",
    "start": "1536900",
    "end": "1538159"
  },
  {
    "text": "services just didn't come up this was",
    "start": "1538159",
    "end": "1539900"
  },
  {
    "text": "fine because it was sandbox but it was",
    "start": "1539900",
    "end": "1541400"
  },
  {
    "text": "it did take our developers some time to",
    "start": "1541400",
    "end": "1543679"
  },
  {
    "text": "understand what wasn't working adding",
    "start": "1543679",
    "end": "1546500"
  },
  {
    "text": "this one liner to the one to one of our",
    "start": "1546500",
    "end": "1548539"
  },
  {
    "text": "projects immediately serves the issue",
    "start": "1548539",
    "end": "1552020"
  },
  {
    "text": "so following up on our earlier example",
    "start": "1552020",
    "end": "1553640"
  },
  {
    "text": "of the deprecated Ingress version",
    "start": "1553640",
    "end": "1556220"
  },
  {
    "text": "a developer may take a stab at just like",
    "start": "1556220",
    "end": "1559220"
  },
  {
    "text": "updating the API version and cubeconform",
    "start": "1559220",
    "end": "1562039"
  },
  {
    "text": "can help identify these issues by",
    "start": "1562039",
    "end": "1564020"
  },
  {
    "text": "flagging any errors in the Manifest",
    "start": "1564020",
    "end": "1565779"
  },
  {
    "text": "allowing us to address them before",
    "start": "1565779",
    "end": "1568159"
  },
  {
    "text": "deploying to our kubernetes clusters so",
    "start": "1568159",
    "end": "1571220"
  },
  {
    "text": "here's an example of what that error",
    "start": "1571220",
    "end": "1572840"
  },
  {
    "text": "message would look like using",
    "start": "1572840",
    "end": "1574820"
  },
  {
    "text": "cubicconform to validate the Manifest",
    "start": "1574820",
    "end": "1577340"
  },
  {
    "text": "when we we can see that the path type",
    "start": "1577340",
    "end": "1580760"
  },
  {
    "text": "it doesn't exist in the newer version",
    "start": "1580760",
    "end": "1582919"
  },
  {
    "text": "and we can make the necessary editing to",
    "start": "1582919",
    "end": "1586400"
  },
  {
    "text": "continue iterating on this manifest",
    "start": "1586400",
    "end": "1588020"
  },
  {
    "text": "until cubeconform reports zero errors",
    "start": "1588020",
    "end": "1591980"
  },
  {
    "text": "so here's another example of an",
    "start": "1591980",
    "end": "1595220"
  },
  {
    "text": "incorrect manifest if raise your hand if",
    "start": "1595220",
    "end": "1598279"
  },
  {
    "text": "you can spot an error",
    "start": "1598279",
    "end": "1600580"
  },
  {
    "text": "that's cool",
    "start": "1600580",
    "end": "1602679"
  },
  {
    "text": "so it's just a really small thing it's",
    "start": "1602679",
    "end": "1604940"
  },
  {
    "text": "like a sync policy is not under dot spec",
    "start": "1604940",
    "end": "1607220"
  },
  {
    "text": "if you don't spot that it's fine this is",
    "start": "1607220",
    "end": "1610279"
  },
  {
    "text": "really a job for Ci or your IDE",
    "start": "1610279",
    "end": "1612020"
  },
  {
    "text": "cubicconform",
    "start": "1612020",
    "end": "1614659"
  },
  {
    "text": "can easily validate custom resource",
    "start": "1614659",
    "end": "1617059"
  },
  {
    "text": "definitions",
    "start": "1617059",
    "end": "1618679"
  },
  {
    "text": "to Val so to validate an application crd",
    "start": "1618679",
    "end": "1622039"
  },
  {
    "text": "such as the one from Argo CD",
    "start": "1622039",
    "end": "1625179"
  },
  {
    "text": "you're allowed to provide a catalog of",
    "start": "1625179",
    "end": "1627980"
  },
  {
    "text": "crds that we like stored in a repository",
    "start": "1627980",
    "end": "1631659"
  },
  {
    "text": "remotely day tree for instance offers a",
    "start": "1631659",
    "end": "1634940"
  },
  {
    "text": "public repo with a collection of popular",
    "start": "1634940",
    "end": "1637220"
  },
  {
    "text": "cids",
    "start": "1637220",
    "end": "1638900"
  },
  {
    "text": "from kubernetes controllers like cert",
    "start": "1638900",
    "end": "1641659"
  },
  {
    "text": "manager and AWS Carpenter",
    "start": "1641659",
    "end": "1644299"
  },
  {
    "text": "you can see that we add just the schema",
    "start": "1644299",
    "end": "1647419"
  },
  {
    "text": "location flag",
    "start": "1647419",
    "end": "1649220"
  },
  {
    "text": "followed by your url to the raw file",
    "start": "1649220",
    "end": "1651559"
  },
  {
    "text": "with some placeholders that tell",
    "start": "1651559",
    "end": "1653120"
  },
  {
    "text": "cubeconform how to build the URL for the",
    "start": "1653120",
    "end": "1654980"
  },
  {
    "text": "custom resource definition",
    "start": "1654980",
    "end": "1657200"
  },
  {
    "text": "the New York Times also runs a number of",
    "start": "1657200",
    "end": "1659360"
  },
  {
    "text": "In-House kubernetes controllers this",
    "start": "1659360",
    "end": "1660679"
  },
  {
    "text": "handles certain operations that are",
    "start": "1660679",
    "end": "1662120"
  },
  {
    "text": "specific to our kubernetes architecture",
    "start": "1662120",
    "end": "1664940"
  },
  {
    "text": "using cubeconform we can host our",
    "start": "1664940",
    "end": "1667640"
  },
  {
    "text": "private crds and reference them in CI",
    "start": "1667640",
    "end": "1669440"
  },
  {
    "text": "allowing developers to validate in-house",
    "start": "1669440",
    "end": "1671480"
  },
  {
    "text": "crds so once again we use we find using",
    "start": "1671480",
    "end": "1675020"
  },
  {
    "text": "cubeconform really easy to validate both",
    "start": "1675020",
    "end": "1677720"
  },
  {
    "text": "kubernetes Primitives and crds whether",
    "start": "1677720",
    "end": "1680480"
  },
  {
    "text": "they're public or private this problem",
    "start": "1680480",
    "end": "1682940"
  },
  {
    "text": "is a really small but powerful",
    "start": "1682940",
    "end": "1685760"
  },
  {
    "text": "um",
    "start": "1685760",
    "end": "1686299"
  },
  {
    "text": "it's just a one-liner to add to your CI",
    "start": "1686299",
    "end": "1688279"
  },
  {
    "text": "and you can ensure that all your",
    "start": "1688279",
    "end": "1689659"
  },
  {
    "text": "manifests are correctly defined and",
    "start": "1689659",
    "end": "1691940"
  },
  {
    "text": "structured reducing the risk of",
    "start": "1691940",
    "end": "1693740"
  },
  {
    "text": "misconfigured misconfigurations and",
    "start": "1693740",
    "end": "1696320"
  },
  {
    "text": "errors when deploying to your cluster",
    "start": "1696320",
    "end": "1697880"
  },
  {
    "text": "and with that I'm going to bring it back",
    "start": "1697880",
    "end": "1699980"
  },
  {
    "text": "to you",
    "start": "1699980",
    "end": "1702278"
  },
  {
    "text": "thank you",
    "start": "1703580",
    "end": "1705559"
  },
  {
    "text": "okay",
    "start": "1705559",
    "end": "1707000"
  },
  {
    "text": "so as Tech evolves and as we find",
    "start": "1707000",
    "end": "1709460"
  },
  {
    "start": "1708000",
    "end": "1776000"
  },
  {
    "text": "ourselves moving toward these",
    "start": "1709460",
    "end": "1710720"
  },
  {
    "text": "centralized architectures and as we find",
    "start": "1710720",
    "end": "1712700"
  },
  {
    "text": "ourselves moving towards using more",
    "start": "1712700",
    "end": "1715039"
  },
  {
    "text": "automatically generated manifests or",
    "start": "1715039",
    "end": "1717080"
  },
  {
    "text": "configs it's more and more important to",
    "start": "1717080",
    "end": "1718940"
  },
  {
    "text": "have robust governance and validation in",
    "start": "1718940",
    "end": "1720860"
  },
  {
    "text": "place tools like cubeconform and open",
    "start": "1720860",
    "end": "1723080"
  },
  {
    "text": "conf test and validation and governance",
    "start": "1723080",
    "end": "1725000"
  },
  {
    "text": "more generally have allowed those of us",
    "start": "1725000",
    "end": "1726980"
  },
  {
    "text": "in the delivery engineering Mission at",
    "start": "1726980",
    "end": "1728840"
  },
  {
    "text": "the New York Times to take more of a",
    "start": "1728840",
    "end": "1730520"
  },
  {
    "text": "trust but verify approach to deployment",
    "start": "1730520",
    "end": "1732980"
  },
  {
    "text": "these tools also shift the feedback",
    "start": "1732980",
    "end": "1734840"
  },
  {
    "text": "timeline providing clear guidelines and",
    "start": "1734840",
    "end": "1737120"
  },
  {
    "text": "guardrails for future developers early",
    "start": "1737120",
    "end": "1739039"
  },
  {
    "text": "in the development process",
    "start": "1739039",
    "end": "1740960"
  },
  {
    "text": "feature devs get to implement more",
    "start": "1740960",
    "end": "1742640"
  },
  {
    "text": "quickly and with fewer roadblocks and",
    "start": "1742640",
    "end": "1744740"
  },
  {
    "text": "when they do deploy they can feel",
    "start": "1744740",
    "end": "1746179"
  },
  {
    "text": "confident that their code is compliant",
    "start": "1746179",
    "end": "1747860"
  },
  {
    "text": "and valid",
    "start": "1747860",
    "end": "1749179"
  },
  {
    "text": "the use of these Technologies creates a",
    "start": "1749179",
    "end": "1751159"
  },
  {
    "text": "more robust collaborative ecosystem of",
    "start": "1751159",
    "end": "1753200"
  },
  {
    "text": "software development and keeps the",
    "start": "1753200",
    "end": "1754640"
  },
  {
    "text": "relationship between Dev and Ops cordial",
    "start": "1754640",
    "end": "1756860"
  },
  {
    "text": "and transparent",
    "start": "1756860",
    "end": "1758539"
  },
  {
    "text": "so thank you for coming to our talk if",
    "start": "1758539",
    "end": "1760520"
  },
  {
    "text": "you're interested in other talks about",
    "start": "1760520",
    "end": "1762380"
  },
  {
    "text": "the internal developer platform these",
    "start": "1762380",
    "end": "1764419"
  },
  {
    "text": "happened earlier in the week but you",
    "start": "1764419",
    "end": "1765919"
  },
  {
    "text": "should be able to catch them on video in",
    "start": "1765919",
    "end": "1767720"
  },
  {
    "text": "a few weeks and if you'll be at cdcon",
    "start": "1767720",
    "end": "1769820"
  },
  {
    "text": "and get opscom next month my colleague",
    "start": "1769820",
    "end": "1771679"
  },
  {
    "text": "and I will be giving a keynote there and",
    "start": "1771679",
    "end": "1773179"
  },
  {
    "text": "we hope you'll attend thank you",
    "start": "1773179",
    "end": "1775530"
  },
  {
    "text": "[Applause]",
    "start": "1775530",
    "end": "1778829"
  }
]