[
  {
    "start": "0",
    "end": "412000"
  },
  {
    "text": "Hey good afternoon Delhi apologize about",
    "start": "30",
    "end": "2820"
  },
  {
    "text": "the delay there were some technical",
    "start": "2820",
    "end": "4020"
  },
  {
    "text": "issues as it always happens in",
    "start": "4020",
    "end": "5339"
  },
  {
    "text": "conferences so we are here to talk about",
    "start": "5339",
    "end": "8639"
  },
  {
    "text": "how a curated scheduler works and I am",
    "start": "8639",
    "end": "11610"
  },
  {
    "text": "Mahindra she is my colleague Himani both",
    "start": "11610",
    "end": "13830"
  },
  {
    "text": "of us work for guzik most of you would",
    "start": "13830",
    "end": "16080"
  },
  {
    "text": "have heard about go-jek but just a quick",
    "start": "16080",
    "end": "17490"
  },
  {
    "text": "intro we are one of the first deca corns",
    "start": "17490",
    "end": "20400"
  },
  {
    "text": "of Indonesia and we are into ride",
    "start": "20400",
    "end": "22230"
  },
  {
    "text": "hailing payments food delivery and a",
    "start": "22230",
    "end": "23970"
  },
  {
    "text": "whole bunch of utilitarian services so",
    "start": "23970",
    "end": "26279"
  },
  {
    "text": "rather than talking about go-jek let's",
    "start": "26279",
    "end": "28590"
  },
  {
    "text": "actually dig into how a Cuban and a",
    "start": "28590",
    "end": "30720"
  },
  {
    "text": "scheduler actually works so I'll",
    "start": "30720",
    "end": "33420"
  },
  {
    "text": "basically be covering these five topics",
    "start": "33420",
    "end": "35370"
  },
  {
    "text": "at a high level we will talk about",
    "start": "35370",
    "end": "37140"
  },
  {
    "text": "scheduling in Cuba notice it's use cases",
    "start": "37140",
    "end": "39120"
  },
  {
    "text": "how it works will give a short demo and",
    "start": "39120",
    "end": "42090"
  },
  {
    "text": "will briefly cover what is new in",
    "start": "42090",
    "end": "44070"
  },
  {
    "text": "scheduler so scheduling is something",
    "start": "44070",
    "end": "47640"
  },
  {
    "text": "that's not new to the computer science",
    "start": "47640",
    "end": "49469"
  },
  {
    "text": "community like probably most of us would",
    "start": "49469",
    "end": "51899"
  },
  {
    "text": "have heard about scheduling the first",
    "start": "51899",
    "end": "53219"
  },
  {
    "text": "time we studied computer science about",
    "start": "53219",
    "end": "54960"
  },
  {
    "text": "the CPU scheduling in Cuba and is it's",
    "start": "54960",
    "end": "57840"
  },
  {
    "text": "something similar although a bit",
    "start": "57840",
    "end": "59670"
  },
  {
    "text": "different so when it comes to Cuban it",
    "start": "59670",
    "end": "62309"
  },
  {
    "text": "is scheduling is basically figuring out",
    "start": "62309",
    "end": "64549"
  },
  {
    "text": "how a pod is matched to a node for that",
    "start": "64549",
    "end": "67770"
  },
  {
    "text": "thing the cubelet can actually start the",
    "start": "67770",
    "end": "69270"
  },
  {
    "text": "pod and run it on the node so that is",
    "start": "69270",
    "end": "72869"
  },
  {
    "text": "what we'll be focusing on for this half",
    "start": "72869",
    "end": "74580"
  },
  {
    "text": "an hour just high-level use case is",
    "start": "74580",
    "end": "78390"
  },
  {
    "text": "about what we can achieve through the",
    "start": "78390",
    "end": "79950"
  },
  {
    "text": "scheduler so one thing is that you can",
    "start": "79950",
    "end": "82080"
  },
  {
    "text": "ensure that the pods get the required",
    "start": "82080",
    "end": "83580"
  },
  {
    "text": "resources so for example there are",
    "start": "83580",
    "end": "85259"
  },
  {
    "text": "certain ports they should have memory",
    "start": "85259",
    "end": "86670"
  },
  {
    "text": "requirements or it might need a certain",
    "start": "86670",
    "end": "89220"
  },
  {
    "text": "volume to be mounted or you know you",
    "start": "89220",
    "end": "91500"
  },
  {
    "text": "might have some machine learning",
    "start": "91500",
    "end": "92369"
  },
  {
    "text": "workloads which needs GPU for example so",
    "start": "92369",
    "end": "95100"
  },
  {
    "text": "you can specify all these things through",
    "start": "95100",
    "end": "97530"
  },
  {
    "text": "scheduler you can prioritize workloads",
    "start": "97530",
    "end": "99600"
  },
  {
    "text": "so say for example your to services a",
    "start": "99600",
    "end": "101700"
  },
  {
    "text": "and B and your service a love a higher",
    "start": "101700",
    "end": "104610"
  },
  {
    "text": "priority now what happens if your",
    "start": "104610",
    "end": "106740"
  },
  {
    "text": "cluster is running out of resources the",
    "start": "106740",
    "end": "109649"
  },
  {
    "text": "parts of service B will automatically",
    "start": "109649",
    "end": "111270"
  },
  {
    "text": "get terminated some of them and the pods",
    "start": "111270",
    "end": "114119"
  },
  {
    "text": "for service a will get started or it",
    "start": "114119",
    "end": "117570"
  },
  {
    "text": "would auto scale based on your settings",
    "start": "117570",
    "end": "119100"
  },
  {
    "text": "so you can do workload prioritization",
    "start": "119100",
    "end": "121170"
  },
  {
    "text": "you can configure geographical distance",
    "start": "121170",
    "end": "123060"
  },
  {
    "text": "again let's go back to service a and B",
    "start": "123060",
    "end": "125250"
  },
  {
    "text": "now say for example these two services",
    "start": "125250",
    "end": "126810"
  },
  {
    "text": "that talk very often and if services",
    "start": "126810",
    "end": "129330"
  },
  {
    "text": "deployed in say us zone",
    "start": "129330",
    "end": "131599"
  },
  {
    "text": "service B is somewhere in you the",
    "start": "131599",
    "end": "133549"
  },
  {
    "text": "round-trip latency would be very high so",
    "start": "133549",
    "end": "135109"
  },
  {
    "text": "you might want service a and B both",
    "start": "135109",
    "end": "136819"
  },
  {
    "text": "deployed in a particular zone which are",
    "start": "136819",
    "end": "138859"
  },
  {
    "text": "clique geographically nearer you can do",
    "start": "138859",
    "end": "140930"
  },
  {
    "text": "that you can resume nodes for specific",
    "start": "140930",
    "end": "142609"
  },
  {
    "text": "pods so again coming back to the machine",
    "start": "142609",
    "end": "145040"
  },
  {
    "text": "learning example like you want only",
    "start": "145040",
    "end": "146810"
  },
  {
    "text": "machine learning workload to run on GPU",
    "start": "146810",
    "end": "148909"
  },
  {
    "text": "enabled nodes so you can do all these",
    "start": "148909",
    "end": "150799"
  },
  {
    "text": "things through scheduler and much more",
    "start": "150799",
    "end": "153939"
  },
  {
    "text": "so what exactly does the scheduler need",
    "start": "153939",
    "end": "156650"
  },
  {
    "text": "to run so number one it has to know",
    "start": "156650",
    "end": "161060"
  },
  {
    "text": "whenever a new quad has come up okay",
    "start": "161060",
    "end": "163569"
  },
  {
    "text": "next it has to figure out that okay",
    "start": "163569",
    "end": "166370"
  },
  {
    "text": "there are so many nodes out of all these",
    "start": "166370",
    "end": "167989"
  },
  {
    "text": "nodes which one is the best node on",
    "start": "167989",
    "end": "170150"
  },
  {
    "text": "which my pod can run it has to figure",
    "start": "170150",
    "end": "172129"
  },
  {
    "text": "that thing out and finally once it has",
    "start": "172129",
    "end": "175459"
  },
  {
    "text": "figured it out it has to assign the pod",
    "start": "175459",
    "end": "177349"
  },
  {
    "text": "to the node so we'll go into each of",
    "start": "177349",
    "end": "180049"
  },
  {
    "text": "these things like how these things work",
    "start": "180049",
    "end": "181400"
  },
  {
    "text": "so starting with number 1 cube iratus",
    "start": "181400",
    "end": "185599"
  },
  {
    "text": "sorry scheduler is nothing but a cube or",
    "start": "185599",
    "end": "187849"
  },
  {
    "text": "a disk controller so in the background",
    "start": "187849",
    "end": "190400"
  },
  {
    "text": "the scheduler is constantly running and",
    "start": "190400",
    "end": "192319"
  },
  {
    "text": "it is listening to this event well pod",
    "start": "192319",
    "end": "193909"
  },
  {
    "text": "creation so every time a pod is created",
    "start": "193909",
    "end": "196129"
  },
  {
    "text": "the scheduler gets notified that hey",
    "start": "196129",
    "end": "197659"
  },
  {
    "text": "there is a new pod and that is all she",
    "start": "197659",
    "end": "199609"
  },
  {
    "text": "did or gets to know that ok this is",
    "start": "199609",
    "end": "200870"
  },
  {
    "text": "something that I need to schedule on a",
    "start": "200870",
    "end": "202400"
  },
  {
    "text": "node the next thing it has to figure out",
    "start": "202400",
    "end": "205699"
  },
  {
    "text": "which is the right node so this is the",
    "start": "205699",
    "end": "208579"
  },
  {
    "text": "two-phase process part one is filtering",
    "start": "208579",
    "end": "211060"
  },
  {
    "text": "and part two is scoring so what happens",
    "start": "211060",
    "end": "213769"
  },
  {
    "text": "in filtering is that your pods that have",
    "start": "213769",
    "end": "216259"
  },
  {
    "text": "certain requirements about beat memory",
    "start": "216259",
    "end": "218659"
  },
  {
    "text": "need CPU volumes and whatnot so the",
    "start": "218659",
    "end": "222620"
  },
  {
    "text": "scheduler has to analyze each nodes",
    "start": "222620",
    "end": "224419"
  },
  {
    "text": "whether it meets the requirements or not",
    "start": "224419",
    "end": "226609"
  },
  {
    "text": "if it doesn't meet the requirement the",
    "start": "226609",
    "end": "228349"
  },
  {
    "text": "node is filtered out if it meets the",
    "start": "228349",
    "end": "230509"
  },
  {
    "text": "requirement it is filtered in so this is",
    "start": "230509",
    "end": "232669"
  },
  {
    "text": "a very simple cluster that you see on",
    "start": "232669",
    "end": "234139"
  },
  {
    "text": "the screen and one single geographical",
    "start": "234139",
    "end": "236419"
  },
  {
    "text": "zone there are six nodes and whenever it",
    "start": "236419",
    "end": "239030"
  },
  {
    "text": "touch to schedule a pod that would loop",
    "start": "239030",
    "end": "241370"
  },
  {
    "text": "through each of these things in a linear",
    "start": "241370",
    "end": "243019"
  },
  {
    "text": "fashion so this is the pod manifest a",
    "start": "243019",
    "end": "245840"
  },
  {
    "text": "new pod has been created okay so we look",
    "start": "245840",
    "end": "248209"
  },
  {
    "text": "at pod number one sorry node number one",
    "start": "248209",
    "end": "250789"
  },
  {
    "text": "if it meets the requirements great it's",
    "start": "250789",
    "end": "253129"
  },
  {
    "text": "filtered in the ROI that's filtered out",
    "start": "253129",
    "end": "255009"
  },
  {
    "text": "now in most cases like in most",
    "start": "255009",
    "end": "257690"
  },
  {
    "text": "production workloads your cluster would",
    "start": "257690",
    "end": "259430"
  },
  {
    "text": "be across multiple geographical zones",
    "start": "259430",
    "end": "261049"
  },
  {
    "text": "and not in the same zone",
    "start": "261049",
    "end": "262790"
  },
  {
    "text": "so for the sake of example let's say",
    "start": "262790",
    "end": "265710"
  },
  {
    "text": "there are two zones there is Winterfell",
    "start": "265710",
    "end": "267660"
  },
  {
    "text": "in the north King's Landing somewhere in",
    "start": "267660",
    "end": "269760"
  },
  {
    "text": "the center and in this setting we have",
    "start": "269760",
    "end": "272730"
  },
  {
    "text": "six nodes in Winterfell four nodes in",
    "start": "272730",
    "end": "274980"
  },
  {
    "text": "King's Landing",
    "start": "274980",
    "end": "275730"
  },
  {
    "text": "so the scheduler it tries to balance out",
    "start": "275730",
    "end": "277919"
  },
  {
    "text": "between these geographical zones when",
    "start": "277919",
    "end": "279510"
  },
  {
    "text": "it's doing the filtering the so it would",
    "start": "279510",
    "end": "282000"
  },
  {
    "text": "go one by one first it would look at",
    "start": "282000",
    "end": "283650"
  },
  {
    "text": "Winterfell one node in Winterfell one",
    "start": "283650",
    "end": "286050"
  },
  {
    "text": "node in King's Landing one node in",
    "start": "286050",
    "end": "287700"
  },
  {
    "text": "Winterfell King's Landing and so on so",
    "start": "287700",
    "end": "291210"
  },
  {
    "text": "for a particular pod it will look at",
    "start": "291210",
    "end": "292919"
  },
  {
    "text": "node number one does it match the",
    "start": "292919",
    "end": "294780"
  },
  {
    "text": "criteria or the fit predicates matching",
    "start": "294780",
    "end": "296730"
  },
  {
    "text": "yes filter in it moves on to load number",
    "start": "296730",
    "end": "299280"
  },
  {
    "text": "seven in King's Landing or the fit",
    "start": "299280",
    "end": "301560"
  },
  {
    "text": "predicates matching no move on to node",
    "start": "301560",
    "end": "303870"
  },
  {
    "text": "number two matching yes move on to node",
    "start": "303870",
    "end": "307050"
  },
  {
    "text": "number eight matching yes node number",
    "start": "307050",
    "end": "309690"
  },
  {
    "text": "three so it goes on and on like this but",
    "start": "309690",
    "end": "312570"
  },
  {
    "text": "how long will it go on like this so say",
    "start": "312570",
    "end": "314790"
  },
  {
    "text": "for example if you have a large cluster",
    "start": "314790",
    "end": "316050"
  },
  {
    "text": "if it's a thousand node cluster every",
    "start": "316050",
    "end": "318180"
  },
  {
    "text": "time a pod has to be scheduled the",
    "start": "318180",
    "end": "320490"
  },
  {
    "text": "scheduler can actually go through all",
    "start": "320490",
    "end": "321780"
  },
  {
    "text": "the nodes but then that would be",
    "start": "321780",
    "end": "322889"
  },
  {
    "text": "time-consuming so there is a setting and",
    "start": "322889",
    "end": "325500"
  },
  {
    "text": "kubera the scheduler called percentage",
    "start": "325500",
    "end": "327270"
  },
  {
    "text": "of nodes to score now by default this is",
    "start": "327270",
    "end": "330090"
  },
  {
    "text": "set as 40 percent so in our 10 node",
    "start": "330090",
    "end": "332310"
  },
  {
    "text": "cluster that will look at four nodes and",
    "start": "332310",
    "end": "334590"
  },
  {
    "text": "once those four nodes are filtered in it",
    "start": "334590",
    "end": "336630"
  },
  {
    "text": "would stop the process and it would",
    "start": "336630",
    "end": "338430"
  },
  {
    "text": "figure out which of these four nodes is",
    "start": "338430",
    "end": "340680"
  },
  {
    "text": "the best fit for scheduling so in our",
    "start": "340680",
    "end": "342750"
  },
  {
    "text": "case we have four nodes one two three",
    "start": "342750",
    "end": "344669"
  },
  {
    "text": "and eight the process of analyzing the",
    "start": "344669",
    "end": "347250"
  },
  {
    "text": "nodes will stop here the next part is",
    "start": "347250",
    "end": "350390"
  },
  {
    "text": "scoring so there are four nodes all",
    "start": "350390",
    "end": "353490"
  },
  {
    "text": "these four nodes can match the criteria",
    "start": "353490",
    "end": "355050"
  },
  {
    "text": "part can be scheduled on any one of",
    "start": "355050",
    "end": "356729"
  },
  {
    "text": "these but we have to shortlist any one",
    "start": "356729",
    "end": "359100"
  },
  {
    "text": "particular node so this is where the",
    "start": "359100",
    "end": "360900"
  },
  {
    "text": "scoring comes in it looks at a bunch of",
    "start": "360900",
    "end": "362940"
  },
  {
    "text": "different functions and it actually",
    "start": "362940",
    "end": "364979"
  },
  {
    "text": "score so over here you can see like node",
    "start": "364979",
    "end": "368460"
  },
  {
    "text": "one here is the least code node node",
    "start": "368460",
    "end": "370890"
  },
  {
    "text": "eight is the highest code node so the",
    "start": "370890",
    "end": "373470"
  },
  {
    "text": "pod will be scheduled on node eight and",
    "start": "373470",
    "end": "377090"
  },
  {
    "text": "finally now that the scheduler has",
    "start": "377090",
    "end": "379620"
  },
  {
    "text": "decided that okay my new part is",
    "start": "379620",
    "end": "381330"
  },
  {
    "text": "supposed to go to node a it has to",
    "start": "381330",
    "end": "383610"
  },
  {
    "text": "assign it for that that creates",
    "start": "383610",
    "end": "386070"
  },
  {
    "text": "something called binding object and if",
    "start": "386070",
    "end": "389940"
  },
  {
    "text": "you look at this flow diagram you can",
    "start": "389940",
    "end": "392280"
  },
  {
    "text": "see that once the pod is created the",
    "start": "392280",
    "end": "394650"
  },
  {
    "text": "create part event",
    "start": "394650",
    "end": "395930"
  },
  {
    "text": "Keller watches it figures out that okay",
    "start": "395930",
    "end": "397970"
  },
  {
    "text": "this node is there on which I have to",
    "start": "397970",
    "end": "400130"
  },
  {
    "text": "schedule so it creates a binding on the",
    "start": "400130",
    "end": "401690"
  },
  {
    "text": "API server and the cubelet is actually",
    "start": "401690",
    "end": "404090"
  },
  {
    "text": "watching this create bind event and as",
    "start": "404090",
    "end": "406310"
  },
  {
    "text": "soon as that event is triggered could",
    "start": "406310",
    "end": "408080"
  },
  {
    "text": "actually go the cubelet would go and",
    "start": "408080",
    "end": "409699"
  },
  {
    "text": "create the pod on the right node so",
    "start": "409699",
    "end": "413780"
  },
  {
    "start": "412000",
    "end": "618000"
  },
  {
    "text": "let's take off let's take a look at the",
    "start": "413780",
    "end": "415460"
  },
  {
    "text": "let's take a look at few features of",
    "start": "415460",
    "end": "417350"
  },
  {
    "text": "scheduler so over to him money",
    "start": "417350",
    "end": "421750"
  },
  {
    "text": "so for the sake of",
    "start": "429260",
    "end": "433120"
  },
  {
    "text": "so for the sake of the demo we have",
    "start": "436430",
    "end": "438629"
  },
  {
    "text": "created our kubernetes cluster with two",
    "start": "438629",
    "end": "441030"
  },
  {
    "text": "notes and the version of this cluster is",
    "start": "441030",
    "end": "443520"
  },
  {
    "text": "version 1.16 as you can see here and it",
    "start": "443520",
    "end": "446789"
  },
  {
    "text": "has two notes one named Lannister and",
    "start": "446789",
    "end": "448680"
  },
  {
    "text": "star so we are using her Game of Thrones",
    "start": "448680",
    "end": "453240"
  },
  {
    "text": "analogy and going by that the nodes",
    "start": "453240",
    "end": "456449"
  },
  {
    "text": "represent the of Thrones house and the",
    "start": "456449",
    "end": "459270"
  },
  {
    "text": "characters were renting the pods so",
    "start": "459270",
    "end": "462180"
  },
  {
    "text": "going forward so here first we have a",
    "start": "462180",
    "end": "467490"
  },
  {
    "text": "deployment called a permanent has name",
    "start": "467490",
    "end": "471960"
  },
  {
    "text": "metadata and the match label is",
    "start": "471960",
    "end": "474000"
  },
  {
    "text": "character Nick the replica of this",
    "start": "474000",
    "end": "476189"
  },
  {
    "text": "deployment would be one similarly we",
    "start": "476189",
    "end": "478949"
  },
  {
    "text": "have one more deployment called or",
    "start": "478949",
    "end": "481050"
  },
  {
    "text": "Cersei which has match label character",
    "start": "481050",
    "end": "484349"
  },
  {
    "text": "Cersei and replica one now let's apply",
    "start": "484349",
    "end": "488039"
  },
  {
    "text": "both of these deployment manifests and",
    "start": "488039",
    "end": "489960"
  },
  {
    "text": "see how the pods are being deployed",
    "start": "489960",
    "end": "493669"
  },
  {
    "text": "so here net deployment and surfy",
    "start": "493669",
    "end": "496740"
  },
  {
    "text": "deployment are applied on this cluster",
    "start": "496740",
    "end": "499740"
  },
  {
    "text": "and we can see that Cersei port is",
    "start": "499740",
    "end": "503520"
  },
  {
    "text": "currently deploy scheduled on stock node",
    "start": "503520",
    "end": "506490"
  },
  {
    "text": "whereas the Ned pod is currently",
    "start": "506490",
    "end": "508860"
  },
  {
    "text": "scheduled on the Lannister node clearly",
    "start": "508860",
    "end": "511560"
  },
  {
    "text": "saw she belongs to the Lannister house",
    "start": "511560",
    "end": "514110"
  },
  {
    "text": "so we would like to change this let's",
    "start": "514110",
    "end": "516268"
  },
  {
    "text": "see how we can achieve this so in order",
    "start": "516269",
    "end": "519149"
  },
  {
    "text": "to achieve this what I'm going to do is",
    "start": "519149",
    "end": "521430"
  },
  {
    "text": "I'm going to label our nodes currently",
    "start": "521430",
    "end": "523969"
  },
  {
    "text": "so the label that I'm adding is house",
    "start": "523970",
    "end": "526410"
  },
  {
    "text": "and the value would be as per the house",
    "start": "526410",
    "end": "528959"
  },
  {
    "text": "value so here the start node is how is",
    "start": "528959",
    "end": "532290"
  },
  {
    "text": "equal to star and the label for",
    "start": "532290",
    "end": "535079"
  },
  {
    "text": "Lannister node would be house equal to",
    "start": "535079",
    "end": "537029"
  },
  {
    "text": "Lannister now let's see how we can",
    "start": "537029",
    "end": "539850"
  },
  {
    "text": "utilize this and enforce that Cersei",
    "start": "539850",
    "end": "543360"
  },
  {
    "text": "pods are scheduled only on null",
    "start": "543360",
    "end": "545430"
  },
  {
    "text": "standards so I'm using here something",
    "start": "545430",
    "end": "547680"
  },
  {
    "text": "called node selector and the value key",
    "start": "547680",
    "end": "551190"
  },
  {
    "text": "value pair that we are using here is",
    "start": "551190",
    "end": "552779"
  },
  {
    "text": "House Lannister",
    "start": "552779",
    "end": "553829"
  },
  {
    "text": "so whenever the schedule gets this pot",
    "start": "553829",
    "end": "557100"
  },
  {
    "text": "the job to schedule the spot",
    "start": "557100",
    "end": "559890"
  },
  {
    "text": "we'll take what all nodes are present",
    "start": "559890",
    "end": "562560"
  },
  {
    "text": "with satisfy this House Lannister and",
    "start": "562560",
    "end": "565050"
  },
  {
    "text": "accordingly it will schedule the pods so",
    "start": "565050",
    "end": "568860"
  },
  {
    "text": "let's apply this and see where the",
    "start": "568860",
    "end": "572399"
  },
  {
    "text": "Cersei pods are being deployed so here",
    "start": "572399",
    "end": "574649"
  },
  {
    "text": "we can see the first quad of Cersei",
    "start": "574649",
    "end": "578490"
  },
  {
    "text": "which was deployed on stock is currently",
    "start": "578490",
    "end": "580560"
  },
  {
    "text": "dominating and the second one which is",
    "start": "580560",
    "end": "582570"
  },
  {
    "text": "11 seconds ago is scheduled on Lannister",
    "start": "582570",
    "end": "585300"
  },
  {
    "text": "node so using no selector we can have a",
    "start": "585300",
    "end": "589250"
  },
  {
    "text": "hard requirement that this requirement",
    "start": "589250",
    "end": "592529"
  },
  {
    "text": "needs to be fulfilled only then the pod",
    "start": "592529",
    "end": "594480"
  },
  {
    "text": "would be scheduled now let's see if I",
    "start": "594480",
    "end": "597480"
  },
  {
    "text": "create a new deployment called John",
    "start": "597480",
    "end": "599490"
  },
  {
    "text": "where I want this node where I want this",
    "start": "599490",
    "end": "604230"
  },
  {
    "text": "deployment John to be deployed on House",
    "start": "604230",
    "end": "606089"
  },
  {
    "text": "Targaryen currently we have only two",
    "start": "606089",
    "end": "609290"
  },
  {
    "text": "worker nodes and cluster which is one is",
    "start": "609290",
    "end": "612660"
  },
  {
    "text": "labeled as Stark load and the another",
    "start": "612660",
    "end": "614640"
  },
  {
    "text": "one is labeled as the Lannister would so",
    "start": "614640",
    "end": "618870"
  },
  {
    "text": "on applying this John deployment let's",
    "start": "618870",
    "end": "621870"
  },
  {
    "text": "see where is this going to be scheduled",
    "start": "621870",
    "end": "628440"
  },
  {
    "text": "so we say we see her John is currently",
    "start": "628440",
    "end": "631589"
  },
  {
    "text": "in pending State and let's figure out",
    "start": "631589",
    "end": "633570"
  },
  {
    "text": "what is the reason for it to be in",
    "start": "633570",
    "end": "635940"
  },
  {
    "text": "pending state by doing a described on",
    "start": "635940",
    "end": "637620"
  },
  {
    "text": "the spot so here we see at the end it",
    "start": "637620",
    "end": "640589"
  },
  {
    "text": "says us failed scheduling zero out of",
    "start": "640589",
    "end": "643620"
  },
  {
    "text": "two nodes are available but any of the",
    "start": "643620",
    "end": "646589"
  },
  {
    "text": "node selector didn't match so no",
    "start": "646589",
    "end": "649350"
  },
  {
    "text": "selector is a hard requirement if the",
    "start": "649350",
    "end": "652380"
  },
  {
    "text": "requirement is not met this part is not",
    "start": "652380",
    "end": "655410"
  },
  {
    "text": "scheduled let's see if we want to see a",
    "start": "655410",
    "end": "659910"
  },
  {
    "text": "case where we want opposed to be",
    "start": "659910",
    "end": "661709"
  },
  {
    "text": "preferably deployed on or preferably",
    "start": "661709",
    "end": "664440"
  },
  {
    "text": "satisfy some requirements but if those",
    "start": "664440",
    "end": "666690"
  },
  {
    "text": "requirements are not satisfied we would",
    "start": "666690",
    "end": "668519"
  },
  {
    "text": "rather prefer it to be scheduled",
    "start": "668519",
    "end": "670980"
  },
  {
    "text": "somewhere else",
    "start": "670980",
    "end": "671820"
  },
  {
    "text": "unless",
    "start": "671820",
    "end": "673220"
  },
  {
    "text": "apart from being in pending state so",
    "start": "673220",
    "end": "676790"
  },
  {
    "text": "here I am creating a new deployment",
    "start": "676790",
    "end": "679220"
  },
  {
    "text": "called santa-san so I'm creating two",
    "start": "679220",
    "end": "682220"
  },
  {
    "text": "replicas and here we are using speck",
    "start": "682220",
    "end": "686810"
  },
  {
    "text": "affinity and here we are defining pod",
    "start": "686810",
    "end": "689360"
  },
  {
    "text": "affinity as preferred during scheduling",
    "start": "689360",
    "end": "692090"
  },
  {
    "text": "and the match preference here would be",
    "start": "692090",
    "end": "694280"
  },
  {
    "text": "key house and the value is Lannister so",
    "start": "694280",
    "end": "698240"
  },
  {
    "text": "let's apply this sand saw deployment and",
    "start": "698240",
    "end": "701930"
  },
  {
    "text": "see where it gets deployed so the Sansa",
    "start": "701930",
    "end": "705680"
  },
  {
    "text": "port is current one of it is deployed on",
    "start": "705680",
    "end": "708620"
  },
  {
    "text": "the lannister node and one of it is",
    "start": "708620",
    "end": "710930"
  },
  {
    "text": "deployed on this shark node so it",
    "start": "710930",
    "end": "712640"
  },
  {
    "text": "depends on the resource used usage and",
    "start": "712640",
    "end": "715130"
  },
  {
    "text": "the other fit predicates which Mahindra",
    "start": "715130",
    "end": "717470"
  },
  {
    "text": "talked about earlier depending on that",
    "start": "717470",
    "end": "719540"
  },
  {
    "text": "the Sansa node has being deployed so",
    "start": "719540",
    "end": "722720"
  },
  {
    "text": "this is provides a soft requirement",
    "start": "722720",
    "end": "727850"
  },
  {
    "text": "whereas the node selector was providing",
    "start": "727850",
    "end": "730550"
  },
  {
    "text": "Hart requirements now let's if I want a",
    "start": "730550",
    "end": "738290"
  },
  {
    "text": "static particular kind of workload to",
    "start": "738290",
    "end": "740720"
  },
  {
    "text": "bid to be deployed closer to another set",
    "start": "740720",
    "end": "745280"
  },
  {
    "text": "of how can I achieve that so to achieve",
    "start": "745280",
    "end": "747650"
  },
  {
    "text": "that first I'm adding a new node to a",
    "start": "747650",
    "end": "750920"
  },
  {
    "text": "cluster called Targaryen node and I'm",
    "start": "750920",
    "end": "753380"
  },
  {
    "text": "labeling this Targaryen node will house",
    "start": "753380",
    "end": "755540"
  },
  {
    "text": "equal to Targaryen we can see how what",
    "start": "755540",
    "end": "758390"
  },
  {
    "text": "all our labels it has added so Lannister",
    "start": "758390",
    "end": "762170"
  },
  {
    "text": "has House Lannister stark has talked and",
    "start": "762170",
    "end": "764540"
  },
  {
    "text": "Targaryen has House Targaryen value",
    "start": "764540",
    "end": "766720"
  },
  {
    "text": "moving forward let's see how the I'm",
    "start": "766720",
    "end": "770150"
  },
  {
    "text": "creating a new deployment now called",
    "start": "770150",
    "end": "771680"
  },
  {
    "text": "Danny deployment how does this look like",
    "start": "771680",
    "end": "773570"
  },
  {
    "text": "so here the Danny deploy has character",
    "start": "773570",
    "end": "777140"
  },
  {
    "text": "Danny value said and the replicas would",
    "start": "777140",
    "end": "780200"
  },
  {
    "text": "be too and here we are saying no",
    "start": "780200",
    "end": "782570"
  },
  {
    "text": "Definity here for Danny is required",
    "start": "782570",
    "end": "786170"
  },
  {
    "text": "during scheduling which is a hard",
    "start": "786170",
    "end": "788270"
  },
  {
    "text": "requirement again that it should belong",
    "start": "788270",
    "end": "790640"
  },
  {
    "text": "be scheduled on nodes which fulfill",
    "start": "790640",
    "end": "793910"
  },
  {
    "text": "house or equal to Targaryen value let's",
    "start": "793910",
    "end": "797480"
  },
  {
    "text": "deploy this",
    "start": "797480",
    "end": "799610"
  },
  {
    "text": "apply these changes so we see Danny has",
    "start": "799610",
    "end": "802740"
  },
  {
    "text": "been scheduled on targaryen notes now we",
    "start": "802740",
    "end": "808680"
  },
  {
    "text": "have Serge aura and we want him to be",
    "start": "808680",
    "end": "811320"
  },
  {
    "text": "he always prefers to be somewhere closer",
    "start": "811320",
    "end": "813120"
  },
  {
    "text": "to Danny how we can do this so for this",
    "start": "813120",
    "end": "817650"
  },
  {
    "text": "there is a new deployment with the",
    "start": "817650",
    "end": "820200"
  },
  {
    "text": "replicas of three and here instead of",
    "start": "820200",
    "end": "823200"
  },
  {
    "text": "using no definitely we are using pod",
    "start": "823200",
    "end": "825480"
  },
  {
    "text": "affinity which basically means it would",
    "start": "825480",
    "end": "828690"
  },
  {
    "text": "have a lightness towards the pod instead",
    "start": "828690",
    "end": "830670"
  },
  {
    "text": "of the node as we have seen earlier so",
    "start": "830670",
    "end": "833610"
  },
  {
    "text": "here the character values character",
    "start": "833610",
    "end": "836160"
  },
  {
    "text": "value we have setters Danny let's apply",
    "start": "836160",
    "end": "839340"
  },
  {
    "text": "this manifest so here we are seeing that",
    "start": "839340",
    "end": "845190"
  },
  {
    "text": "Serge aura our pods are deployed on the",
    "start": "845190",
    "end": "847350"
  },
  {
    "text": "targaryen on which the Danny no Denny",
    "start": "847350",
    "end": "851040"
  },
  {
    "text": "pods were scheduled so using node",
    "start": "851040",
    "end": "853470"
  },
  {
    "text": "selected or node affinity and port",
    "start": "853470",
    "end": "855330"
  },
  {
    "text": "affinity we can control or we can",
    "start": "855330",
    "end": "858810"
  },
  {
    "text": "specify how we want a pulse to be",
    "start": "858810",
    "end": "860910"
  },
  {
    "text": "scheduled on which worker nodes moving",
    "start": "860910",
    "end": "864480"
  },
  {
    "text": "forward let's say if we want us our",
    "start": "864480",
    "end": "867410"
  },
  {
    "text": "nodes to decide what kind of workload",
    "start": "867410",
    "end": "869880"
  },
  {
    "text": "they want to be scheduled on themselves",
    "start": "869880",
    "end": "873180"
  },
  {
    "text": "so for this we have something called",
    "start": "873180",
    "end": "875910"
  },
  {
    "text": "tails and tolerance here I am creating a",
    "start": "875910",
    "end": "880140"
  },
  {
    "text": "new tail on house targaryen",
    "start": "880140",
    "end": "881820"
  },
  {
    "text": "which says white Walker equal to behind",
    "start": "881820",
    "end": "884550"
  },
  {
    "text": "the wall and no schedule so the key is",
    "start": "884550",
    "end": "886980"
  },
  {
    "text": "white Walker and no schedule means if",
    "start": "886980",
    "end": "889880"
  },
  {
    "text": "does not have a toleration for this kind",
    "start": "889880",
    "end": "892680"
  },
  {
    "text": "of pain the pod would not be scheduled",
    "start": "892680",
    "end": "895470"
  },
  {
    "text": "on this node so here I'm creating a",
    "start": "895470",
    "end": "899670"
  },
  {
    "text": "simple white Walker deployment which has",
    "start": "899670",
    "end": "902940"
  },
  {
    "text": "character white Walker replicas are",
    "start": "902940",
    "end": "904620"
  },
  {
    "text": "three let's apply this manifest",
    "start": "904620",
    "end": "908600"
  },
  {
    "text": "so here we see that the white Walker",
    "start": "908600",
    "end": "913610"
  },
  {
    "text": "Falls are scheduled on lannister and",
    "start": "913610",
    "end": "915870"
  },
  {
    "text": "stock notes it is not scheduled on the",
    "start": "915870",
    "end": "918750"
  },
  {
    "text": "Targaryen notes because it doesn't have",
    "start": "918750",
    "end": "920550"
  },
  {
    "text": "a toleration for the pin we apply down",
    "start": "920550",
    "end": "923160"
  },
  {
    "text": "here now let's say if I add a taint for",
    "start": "923160",
    "end": "928700"
  },
  {
    "text": "execution by this I mean that currently",
    "start": "928700",
    "end": "932040"
  },
  {
    "text": "we have seen how we can decide the",
    "start": "932040",
    "end": "934680"
  },
  {
    "text": "schedule would be controlled but now",
    "start": "934680",
    "end": "936510"
  },
  {
    "text": "let's say I want later on when apart is",
    "start": "936510",
    "end": "940920"
  },
  {
    "text": "already scheduled we don't want it we",
    "start": "940920",
    "end": "944010"
  },
  {
    "text": "still wanted to follow some sort of",
    "start": "944010",
    "end": "946020"
  },
  {
    "text": "affinity or Labour's how we can do that",
    "start": "946020",
    "end": "948480"
  },
  {
    "text": "so for this I am creating a taint on",
    "start": "948480",
    "end": "951420"
  },
  {
    "text": "House Lannister and stock notes that is",
    "start": "951420",
    "end": "955680"
  },
  {
    "text": "wai-kwok behind the wall no execute and",
    "start": "955680",
    "end": "958230"
  },
  {
    "text": "let's see thing does so we see here a",
    "start": "958230",
    "end": "962280"
  },
  {
    "text": "white Walker pause there are three in",
    "start": "962280",
    "end": "965640"
  },
  {
    "text": "terminating state which were earlier",
    "start": "965640",
    "end": "968010"
  },
  {
    "text": "deployed and the rest of the three are",
    "start": "968010",
    "end": "971370"
  },
  {
    "text": "in pending State so now all of our three",
    "start": "971370",
    "end": "974430"
  },
  {
    "text": "nodes have three things one has no",
    "start": "974430",
    "end": "977070"
  },
  {
    "text": "schedule and the other has no execute",
    "start": "977070",
    "end": "980960"
  },
  {
    "text": "now let's see the reason behind why a",
    "start": "980960",
    "end": "983930"
  },
  {
    "text": "one of a white Walker quads is in",
    "start": "983930",
    "end": "986190"
  },
  {
    "text": "pending state so it says that the",
    "start": "986190",
    "end": "987990"
  },
  {
    "text": "scheduling failed because three knows",
    "start": "987990",
    "end": "989970"
  },
  {
    "text": "hard things that the pod didn't tolerate",
    "start": "989970",
    "end": "991830"
  },
  {
    "text": "now let's try add a toleration for one",
    "start": "991830",
    "end": "995010"
  },
  {
    "text": "of these pods and see how it would",
    "start": "995010",
    "end": "997410"
  },
  {
    "text": "behave so for doing that I am adding",
    "start": "997410",
    "end": "1000620"
  },
  {
    "text": "toleration for a white Walker exists no",
    "start": "1000620",
    "end": "1003170"
  },
  {
    "text": "schedule which basically means even if a",
    "start": "1003170",
    "end": "1006230"
  },
  {
    "text": "node has attained regarding this the pod",
    "start": "1006230",
    "end": "1010040"
  },
  {
    "text": "will tolerated and the node will allow",
    "start": "1010040",
    "end": "1012200"
  },
  {
    "text": "the pod to be deployed also I am adding",
    "start": "1012200",
    "end": "1015290"
  },
  {
    "text": "word toleration for white Walker exist",
    "start": "1015290",
    "end": "1017780"
  },
  {
    "text": "no execute and let's apply this",
    "start": "1017780",
    "end": "1022300"
  },
  {
    "text": "so we see here also I increase the",
    "start": "1025740",
    "end": "1028410"
  },
  {
    "text": "number of replicas for the sake of demo",
    "start": "1028410",
    "end": "1031890"
  },
  {
    "text": "to 5 her and we say why cocoapods are",
    "start": "1031890",
    "end": "1035670"
  },
  {
    "text": "scheduled at stock Lannister Targaryen",
    "start": "1035670",
    "end": "1037650"
  },
  {
    "text": "notes so this is the demo i showcase how",
    "start": "1037650",
    "end": "1042180"
  },
  {
    "text": "we can use pod affinity and pains and",
    "start": "1042180",
    "end": "1045510"
  },
  {
    "text": "tolerance to decide where the we want",
    "start": "1045510",
    "end": "1047760"
  },
  {
    "text": "the pods to be deployed moving forward",
    "start": "1047760",
    "end": "1054530"
  },
  {
    "start": "1050000",
    "end": "1175000"
  },
  {
    "text": "okay so what else is new in kubernetes",
    "start": "1059790",
    "end": "1064170"
  },
  {
    "text": "scheduler or what else could poop and it",
    "start": "1064170",
    "end": "1066460"
  },
  {
    "text": "is scheduler to do so the kubernetes",
    "start": "1066460",
    "end": "1069070"
  },
  {
    "text": "scheduler is quite extensible we have a",
    "start": "1069070",
    "end": "1072340"
  },
  {
    "text": "link here which gives more detail",
    "start": "1072340",
    "end": "1074620"
  },
  {
    "text": "extensibility features that you can do",
    "start": "1074620",
    "end": "1076690"
  },
  {
    "text": "use if you have more customizations and",
    "start": "1076690",
    "end": "1080410"
  },
  {
    "text": "the extensibility features of cube",
    "start": "1080410",
    "end": "1082630"
  },
  {
    "text": "scheduler are not sufficient you could",
    "start": "1082630",
    "end": "1084520"
  },
  {
    "text": "probably write your own cube scheduler",
    "start": "1084520",
    "end": "1086320"
  },
  {
    "text": "and in the quad manifest we can specify",
    "start": "1086320",
    "end": "1088780"
  },
  {
    "text": "what scheduler do we want to use for the",
    "start": "1088780",
    "end": "1092050"
  },
  {
    "text": "pod to be scheduled coming further we",
    "start": "1092050",
    "end": "1095440"
  },
  {
    "text": "have even fought spreading so let's say",
    "start": "1095440",
    "end": "1098290"
  },
  {
    "text": "we have two zones and we would want our",
    "start": "1098290",
    "end": "1101050"
  },
  {
    "text": "pods to be deployed or scheduled on both",
    "start": "1101050",
    "end": "1103750"
  },
  {
    "text": "the zones so that even if one zone goes",
    "start": "1103750",
    "end": "1106210"
  },
  {
    "text": "down the traffic is still serving then",
    "start": "1106210",
    "end": "1110320"
  },
  {
    "text": "we have a scheduling framework which is",
    "start": "1110320",
    "end": "1112780"
  },
  {
    "text": "an alpha state in v1 15 and because",
    "start": "1112780",
    "end": "1119460"
  },
  {
    "text": "skiddy is a very vast project in itself",
    "start": "1119460",
    "end": "1123190"
  },
  {
    "text": "in coconut right now six",
    "start": "1123190",
    "end": "1125290"
  },
  {
    "text": "scheduling is working towards creating a",
    "start": "1125290",
    "end": "1128260"
  },
  {
    "text": "scheduling framework which would provide",
    "start": "1128260",
    "end": "1129730"
  },
  {
    "text": "more customizations for the users to",
    "start": "1129730",
    "end": "1132490"
  },
  {
    "text": "decide how they want the scheduling to",
    "start": "1132490",
    "end": "1134320"
  },
  {
    "text": "be done and it also put the scheduling",
    "start": "1134320",
    "end": "1138190"
  },
  {
    "text": "and the binding of bhindi covered now",
    "start": "1138190",
    "end": "1141430"
  },
  {
    "text": "moving forward we have bad scheduling",
    "start": "1141430",
    "end": "1143350"
  },
  {
    "text": "currently only one pod could be",
    "start": "1143350",
    "end": "1145330"
  },
  {
    "text": "scheduled at a time but using batch",
    "start": "1145330",
    "end": "1147610"
  },
  {
    "text": "scheduling multiple pods could be",
    "start": "1147610",
    "end": "1149230"
  },
  {
    "text": "scheduled in one go these are the",
    "start": "1149230",
    "end": "1153130"
  },
  {
    "text": "references that we used for this talk if",
    "start": "1153130",
    "end": "1157720"
  },
  {
    "text": "you are interested in knowing more about",
    "start": "1157720",
    "end": "1159730"
  },
  {
    "text": "the scheduling and you can join a slack",
    "start": "1159730",
    "end": "1163180"
  },
  {
    "text": "scheduling channel you can check out the",
    "start": "1163180",
    "end": "1165340"
  },
  {
    "text": "github repo and maybe join the mailing",
    "start": "1165340",
    "end": "1167740"
  },
  {
    "text": "list that's it guys thank you for",
    "start": "1167740",
    "end": "1170680"
  },
  {
    "text": "listening to us",
    "start": "1170680",
    "end": "1172760"
  },
  {
    "text": "[Applause]",
    "start": "1172760",
    "end": "1177559"
  }
]