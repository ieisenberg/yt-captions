[
  {
    "text": "so hello hi I'm here to talk about TS DB",
    "start": "30",
    "end": "5279"
  },
  {
    "text": "but what is TS DB THD V is the storage",
    "start": "5279",
    "end": "8940"
  },
  {
    "text": "engine of Prometheus can I know how many",
    "start": "8940",
    "end": "11700"
  },
  {
    "text": "of you here are running Prometheus in",
    "start": "11700",
    "end": "13230"
  },
  {
    "text": "production and how many of you are",
    "start": "13230",
    "end": "15570"
  },
  {
    "text": "running from atheist 2.0 yep you're all",
    "start": "15570",
    "end": "18810"
  },
  {
    "text": "using TSD be the internal storage engine",
    "start": "18810",
    "end": "21119"
  },
  {
    "text": "of Prometheus so I am Gautham I'm now a",
    "start": "21119",
    "end": "24810"
  },
  {
    "text": "developer at the fauna labs I was quite",
    "start": "24810",
    "end": "26340"
  },
  {
    "text": "recently a student I contributed to TS",
    "start": "26340",
    "end": "30060"
  },
  {
    "text": "DB and this talk is about the past",
    "start": "30060",
    "end": "33899"
  },
  {
    "text": "present and the future it's actually",
    "start": "33899",
    "end": "35880"
  },
  {
    "text": "quite funny I just submitted a talk",
    "start": "35880",
    "end": "37350"
  },
  {
    "text": "hoping I'll figure it out when I when it",
    "start": "37350",
    "end": "39360"
  },
  {
    "text": "gets accepted and it did get accepted so",
    "start": "39360",
    "end": "42360"
  },
  {
    "text": "I think I put together a fun talk so",
    "start": "42360",
    "end": "45390"
  },
  {
    "text": "let's see so before we talk about TS DB",
    "start": "45390",
    "end": "49260"
  },
  {
    "text": "let's see why it came like ye we doubt",
    "start": "49260",
    "end": "51629"
  },
  {
    "text": "it",
    "start": "51629",
    "end": "51960"
  },
  {
    "text": "so Prometheus first started in 2012 when",
    "start": "51960",
    "end": "54809"
  },
  {
    "text": "a bunch of soundcloud engineers felt it",
    "start": "54809",
    "end": "56489"
  },
  {
    "text": "wasn't a good monitoring system the",
    "start": "56489",
    "end": "59460"
  },
  {
    "text": "first version of the storage engine for",
    "start": "59460",
    "end": "61559"
  },
  {
    "text": "that time series database or the",
    "start": "61559",
    "end": "63180"
  },
  {
    "text": "monitoring system was actually",
    "start": "63180",
    "end": "64799"
  },
  {
    "text": "completely level DB the data was in",
    "start": "64799",
    "end": "67049"
  },
  {
    "text": "leveldb the index was in leveldb it",
    "start": "67049",
    "end": "69630"
  },
  {
    "text": "didn't quite scale well so they went",
    "start": "69630",
    "end": "72330"
  },
  {
    "text": "they actually went ahead and rewrote the",
    "start": "72330",
    "end": "74189"
  },
  {
    "text": "data which is which was the bottleneck",
    "start": "74189",
    "end": "76619"
  },
  {
    "text": "and the second version had a level DB",
    "start": "76619",
    "end": "79380"
  },
  {
    "text": "index with the custom data stores where",
    "start": "79380",
    "end": "81570"
  },
  {
    "text": "they were compressing time series very",
    "start": "81570",
    "end": "83009"
  },
  {
    "text": "well now this was what made Prometheus",
    "start": "83009",
    "end": "85799"
  },
  {
    "text": "1.0 and how many of you ran from me",
    "start": "85799",
    "end": "89369"
  },
  {
    "text": "theists one point text some version of",
    "start": "89369",
    "end": "90900"
  },
  {
    "text": "one point X and how many of you were",
    "start": "90900",
    "end": "92880"
  },
  {
    "text": "quite happy with it",
    "start": "92880",
    "end": "94189"
  },
  {
    "text": "yep like we it worked really really well",
    "start": "94189",
    "end": "97829"
  },
  {
    "text": "it could handle millions of time-series",
    "start": "97829",
    "end": "99479"
  },
  {
    "text": "SoundCloud was like having millions of",
    "start": "99479",
    "end": "101790"
  },
  {
    "text": "time series and what Searle does 1.0",
    "start": "101790",
    "end": "104670"
  },
  {
    "text": "went through a lot of improvements in",
    "start": "104670",
    "end": "106409"
  },
  {
    "text": "terms of performance in terms of issues",
    "start": "106409",
    "end": "108119"
  },
  {
    "text": "and there was like more than one enough",
    "start": "108119",
    "end": "110790"
  },
  {
    "text": "year of development into 1.0 into the",
    "start": "110790",
    "end": "113250"
  },
  {
    "text": "level DB index in the custom storage",
    "start": "113250",
    "end": "115649"
  },
  {
    "text": "engine but then came cuban it is like",
    "start": "115649",
    "end": "119340"
  },
  {
    "text": "actually wrote the stock and the nests",
    "start": "119340",
    "end": "121170"
  },
  {
    "text": "of abeyance keynote yesterday and I was",
    "start": "121170",
    "end": "122820"
  },
  {
    "text": "like",
    "start": "122820",
    "end": "123420"
  },
  {
    "text": "he talked half the stuff I wanted to",
    "start": "123420",
    "end": "126180"
  },
  {
    "text": "anyways with kubernetes there was a lot",
    "start": "126180",
    "end": "129160"
  },
  {
    "text": "more series like there's a lot more",
    "start": "129160",
    "end": "130420"
  },
  {
    "text": "dynamic environments there's a lot more",
    "start": "130420",
    "end": "132310"
  },
  {
    "text": "things happening and this kind of wasn't",
    "start": "132310",
    "end": "134650"
  },
  {
    "text": "working out",
    "start": "134650",
    "end": "135430"
  },
  {
    "text": "like even SoundCloud was facing issues",
    "start": "135430",
    "end": "137470"
  },
  {
    "text": "so Fabian the main author of DSD B he",
    "start": "137470",
    "end": "142599"
  },
  {
    "text": "actually started experimenting on the",
    "start": "142599",
    "end": "143830"
  },
  {
    "text": "side and he came up with tin decks which",
    "start": "143830",
    "end": "146290"
  },
  {
    "text": "sounds like tinder but it's not yeah",
    "start": "146290",
    "end": "149410"
  },
  {
    "text": "it's a time indexed index oh it's to",
    "start": "149410",
    "end": "153160"
  },
  {
    "text": "index time series data and actually that",
    "start": "153160",
    "end": "155739"
  },
  {
    "text": "experiment went quite well but based on",
    "start": "155739",
    "end": "158260"
  },
  {
    "text": "that experiment he went ahead and",
    "start": "158260",
    "end": "159700"
  },
  {
    "text": "rewrote the complete thing not just the",
    "start": "159700",
    "end": "161319"
  },
  {
    "text": "index and that was TS DB and as he was",
    "start": "161319",
    "end": "164140"
  },
  {
    "text": "rewriting this a funny story so I in my",
    "start": "164140",
    "end": "167380"
  },
  {
    "text": "internship deployed prometheus",
    "start": "167380",
    "end": "169599"
  },
  {
    "text": "and I wanted to contribute so I started",
    "start": "169599",
    "end": "171069"
  },
  {
    "text": "bringing people and Fabian pointed me",
    "start": "171069",
    "end": "173140"
  },
  {
    "text": "through to index then I lost like most",
    "start": "173140",
    "end": "175330"
  },
  {
    "text": "contour open-source enthusiasts I lost",
    "start": "175330",
    "end": "177640"
  },
  {
    "text": "interest but six months later I come",
    "start": "177640",
    "end": "180130"
  },
  {
    "text": "back to the project and boom index",
    "start": "180130",
    "end": "182410"
  },
  {
    "text": "became TS DB and I was like now I have",
    "start": "182410",
    "end": "184209"
  },
  {
    "text": "to contribute and that's where I come in",
    "start": "184209",
    "end": "187120"
  },
  {
    "text": "a mid-weight of TS DB development and",
    "start": "187120",
    "end": "189640"
  },
  {
    "text": "now I'm one of the maintainer yep TSD B",
    "start": "189640",
    "end": "194230"
  },
  {
    "text": "stands for time series database but what",
    "start": "194230",
    "end": "195940"
  },
  {
    "text": "is a time series time series is just a",
    "start": "195940",
    "end": "197950"
  },
  {
    "text": "set of values each marked by time like",
    "start": "197950",
    "end": "200920"
  },
  {
    "text": "weather in Copenhagen at 10 o clock it's",
    "start": "200920",
    "end": "203380"
  },
  {
    "text": "11 degrees at 12 o'clock it's 15 degrees",
    "start": "203380",
    "end": "206230"
  },
  {
    "text": "and so on and yeah like the number of",
    "start": "206230",
    "end": "209530"
  },
  {
    "text": "people in this room probably the",
    "start": "209530",
    "end": "210940"
  },
  {
    "text": "previous talk had more people this talk",
    "start": "210940",
    "end": "212799"
  },
  {
    "text": "has less people and so on yeah and you",
    "start": "212799",
    "end": "215530"
  },
  {
    "text": "just don't want to measure a single time",
    "start": "215530",
    "end": "217060"
  },
  {
    "text": "series do you want to measure everything",
    "start": "217060",
    "end": "218410"
  },
  {
    "text": "like CPU memory ram in case of",
    "start": "218410",
    "end": "220690"
  },
  {
    "text": "operational metrics the number of",
    "start": "220690",
    "end": "222310"
  },
  {
    "text": "requests and you want to measure it by",
    "start": "222310",
    "end": "225010"
  },
  {
    "text": "instance but like it's it's a bunch of",
    "start": "225010",
    "end": "227620"
  },
  {
    "text": "time series like weather in Copenhagen",
    "start": "227620",
    "end": "229720"
  },
  {
    "text": "and weather in Hyderabad stock market",
    "start": "229720",
    "end": "231100"
  },
  {
    "text": "prices and all this they're like not",
    "start": "231100",
    "end": "232840"
  },
  {
    "text": "just one but millions of them but how do",
    "start": "232840",
    "end": "235269"
  },
  {
    "text": "you name them like how do you name the",
    "start": "235269",
    "end": "237310"
  },
  {
    "text": "number of people in Halton you just have",
    "start": "237310",
    "end": "239980"
  },
  {
    "text": "a metric name and a bunch of key value",
    "start": "239980",
    "end": "241660"
  },
  {
    "text": "pairs quantifying it like for example",
    "start": "241660",
    "end": "243400"
  },
  {
    "text": "take the stock price of Apple you just",
    "start": "243400",
    "end": "246040"
  },
  {
    "text": "say stock price ticker and exchange and",
    "start": "246040",
    "end": "248560"
  },
  {
    "text": "you can have you can have thousands of",
    "start": "248560",
    "end": "250630"
  },
  {
    "text": "series of the name stock price because",
    "start": "250630",
    "end": "252160"
  },
  {
    "text": "there's like thousands of tickets",
    "start": "252160",
    "end": "254940"
  },
  {
    "text": "anyways now that we know how to name all",
    "start": "254940",
    "end": "257320"
  },
  {
    "text": "these millions of time series we",
    "start": "257320",
    "end": "259250"
  },
  {
    "text": "to query them essentially we we have a",
    "start": "259250",
    "end": "263180"
  },
  {
    "text": "you just select them you just say you",
    "start": "263180",
    "end": "265550"
  },
  {
    "text": "specify the name of this earth metric",
    "start": "265550",
    "end": "268850"
  },
  {
    "text": "and boom you get all the series that",
    "start": "268850",
    "end": "270200"
  },
  {
    "text": "have that name you can say stock price",
    "start": "270200",
    "end": "272090"
  },
  {
    "text": "and you have all your stock price data",
    "start": "272090",
    "end": "273530"
  },
  {
    "text": "and then you if you want to have the",
    "start": "273530",
    "end": "275600"
  },
  {
    "text": "specific price or specific thing you",
    "start": "275600",
    "end": "277700"
  },
  {
    "text": "just add conditions on the labels like",
    "start": "277700",
    "end": "280010"
  },
  {
    "text": "you can say see T equals Berlin and you",
    "start": "280010",
    "end": "282620"
  },
  {
    "text": "get only the Berlin's data or you can",
    "start": "282620",
    "end": "285080"
  },
  {
    "text": "say city equal to be a city should look",
    "start": "285080",
    "end": "288200"
  },
  {
    "text": "like BER star like regular expressions",
    "start": "288200",
    "end": "289880"
  },
  {
    "text": "like you can select all kinds of data so",
    "start": "289880",
    "end": "292910"
  },
  {
    "text": "this is kind of the the data structure",
    "start": "292910",
    "end": "297590"
  },
  {
    "text": "of the time series database you just",
    "start": "297590",
    "end": "298940"
  },
  {
    "text": "have millions of samples marked by time",
    "start": "298940",
    "end": "301850"
  },
  {
    "text": "and millions of time series anyways so",
    "start": "301850",
    "end": "306110"
  },
  {
    "text": "tht be the new engine in Prometheus 2.0",
    "start": "306110",
    "end": "308630"
  },
  {
    "text": "is actually an embedded time series",
    "start": "308630",
    "end": "309980"
  },
  {
    "text": "database so Prometheus imports it if you",
    "start": "309980",
    "end": "312770"
  },
  {
    "text": "right go and if you want to do some",
    "start": "312770",
    "end": "314540"
  },
  {
    "text": "number crunching that like requires you",
    "start": "314540",
    "end": "317390"
  },
  {
    "text": "to handle time series data you can",
    "start": "317390",
    "end": "318770"
  },
  {
    "text": "probably go ahead and import Prometheus",
    "start": "318770",
    "end": "321169"
  },
  {
    "text": "TS DB it's actually very simple",
    "start": "321169",
    "end": "323840"
  },
  {
    "text": "interface like I really like the",
    "start": "323840",
    "end": "325669"
  },
  {
    "text": "interface it's just like I mean I'm just",
    "start": "325669",
    "end": "329390"
  },
  {
    "text": "going to go through the basics so that",
    "start": "329390",
    "end": "330620"
  },
  {
    "text": "you know next time someone wants to try",
    "start": "330620",
    "end": "331880"
  },
  {
    "text": "it it's easy so you open the database by",
    "start": "331880",
    "end": "335330"
  },
  {
    "text": "giving the logger we're like we don't",
    "start": "335330",
    "end": "337100"
  },
  {
    "text": "have a global logger we you pass in the",
    "start": "337100",
    "end": "338990"
  },
  {
    "text": "logger every time and you pass in the",
    "start": "338990",
    "end": "343040"
  },
  {
    "text": "directory and a bunch of options cool",
    "start": "343040",
    "end": "345770"
  },
  {
    "text": "now that you have a database you want to",
    "start": "345770",
    "end": "347690"
  },
  {
    "text": "insert data into it so we have some sort",
    "start": "347690",
    "end": "350780"
  },
  {
    "text": "of transactions but we will talk about",
    "start": "350780",
    "end": "352790"
  },
  {
    "text": "them later so you create an offender and",
    "start": "352790",
    "end": "354890"
  },
  {
    "text": "you put all the data you want like you",
    "start": "354890",
    "end": "357260"
  },
  {
    "text": "just add all the data you want to that",
    "start": "357260",
    "end": "359540"
  },
  {
    "text": "offender and then you commit it boom the",
    "start": "359540",
    "end": "362870"
  },
  {
    "text": "database will have your data and if you",
    "start": "362870",
    "end": "365720"
  },
  {
    "text": "want to query it you give the timestamps",
    "start": "365720",
    "end": "367790"
  },
  {
    "text": "the minimum time and maximum time for",
    "start": "367790",
    "end": "370250"
  },
  {
    "text": "what like for the samples you are",
    "start": "370250",
    "end": "372860"
  },
  {
    "text": "interested in and then you give the",
    "start": "372860",
    "end": "374060"
  },
  {
    "text": "matches I said you know you have to give",
    "start": "374060",
    "end": "376040"
  },
  {
    "text": "city equals Berlin or name equals this",
    "start": "376040",
    "end": "378680"
  },
  {
    "text": "so you give the matchups and you get all",
    "start": "378680",
    "end": "381350"
  },
  {
    "text": "the time series that you want and if you",
    "start": "381350",
    "end": "383390"
  },
  {
    "text": "you like how many of you write prompt QL",
    "start": "383390",
    "end": "386140"
  },
  {
    "text": "how many like for how many of you is",
    "start": "386140",
    "end": "388729"
  },
  {
    "text": "this obvious like it should be for",
    "start": "388729",
    "end": "391610"
  },
  {
    "text": "everyone because essential",
    "start": "391610",
    "end": "392930"
  },
  {
    "text": "that's what we do and the matches can be",
    "start": "392930",
    "end": "395180"
  },
  {
    "text": "anything actually so it's an interface",
    "start": "395180",
    "end": "396860"
  },
  {
    "text": "we don't specify what kind of matches it",
    "start": "396860",
    "end": "398660"
  },
  {
    "text": "should be like it could be equality",
    "start": "398660",
    "end": "400160"
  },
  {
    "text": "regulated situation it could be some",
    "start": "400160",
    "end": "401810"
  },
  {
    "text": "magic that you're writing it's an",
    "start": "401810",
    "end": "404030"
  },
  {
    "text": "interface and that kind of allows you to",
    "start": "404030",
    "end": "406009"
  },
  {
    "text": "select all kinds of data at once anyways",
    "start": "406009",
    "end": "409400"
  },
  {
    "text": "this is not an internal stock Fabian",
    "start": "409400",
    "end": "412490"
  },
  {
    "text": "gave an amazing talk on the internals of",
    "start": "412490",
    "end": "414650"
  },
  {
    "text": "the database in prom con you just",
    "start": "414650",
    "end": "416660"
  },
  {
    "text": "googled prom corn Fabiana and you will",
    "start": "416660",
    "end": "419330"
  },
  {
    "text": "get the talk this is about what is great",
    "start": "419330",
    "end": "424240"
  },
  {
    "text": "like and what are the issues that we",
    "start": "424240",
    "end": "426979"
  },
  {
    "text": "faced and what is the future of THD be",
    "start": "426979",
    "end": "430419"
  },
  {
    "text": "like performance trust me everybody",
    "start": "430419",
    "end": "434630"
  },
  {
    "text": "loves the graphs yeah so we actually",
    "start": "434630",
    "end": "438470"
  },
  {
    "text": "benchmarked Prometheus with the new",
    "start": "438470",
    "end": "440720"
  },
  {
    "text": "database and the old one and essentially",
    "start": "440720",
    "end": "443900"
  },
  {
    "text": "one thing we did is we had a lot of load",
    "start": "443900",
    "end": "445849"
  },
  {
    "text": "but also on top of the load we used to",
    "start": "445849",
    "end": "448099"
  },
  {
    "text": "Reese restart half of the pods every 10",
    "start": "448099",
    "end": "451370"
  },
  {
    "text": "minutes",
    "start": "451370",
    "end": "451910"
  },
  {
    "text": "like that's a lot of churn it's as if",
    "start": "451910",
    "end": "453410"
  },
  {
    "text": "you are deploying half your services",
    "start": "453410",
    "end": "455389"
  },
  {
    "text": "every 10 minutes and that creates a lot",
    "start": "455389",
    "end": "458090"
  },
  {
    "text": "more time series that adds a lot of",
    "start": "458090",
    "end": "459470"
  },
  {
    "text": "pressure and yeah like because I say",
    "start": "459470",
    "end": "464389"
  },
  {
    "text": "it's better people should be able to",
    "start": "464389",
    "end": "466070"
  },
  {
    "text": "guess which is one point X and which is",
    "start": "466070",
    "end": "468320"
  },
  {
    "text": "two point oh yeah like in terms of",
    "start": "468320",
    "end": "471380"
  },
  {
    "text": "memory we do like three to four X better",
    "start": "471380",
    "end": "475070"
  },
  {
    "text": "than Prometheus 1.0 CPU we do the same",
    "start": "475070",
    "end": "479120"
  },
  {
    "text": "so we actually run for Prometheus to one",
    "start": "479120",
    "end": "481699"
  },
  {
    "text": "point Texas which one both of them are",
    "start": "481699",
    "end": "484610"
  },
  {
    "text": "scraping but one of them is being",
    "start": "484610",
    "end": "485780"
  },
  {
    "text": "queried because we want to measure the",
    "start": "485780",
    "end": "487039"
  },
  {
    "text": "query load separately and the same thing",
    "start": "487039",
    "end": "488870"
  },
  {
    "text": "for 2.0 and if you can see again",
    "start": "488870",
    "end": "493090"
  },
  {
    "text": "prometheus 1.0 takes like six CPU cores",
    "start": "493090",
    "end": "495770"
  },
  {
    "text": "but through this 2.0 takes like one and",
    "start": "495770",
    "end": "499039"
  },
  {
    "text": "off if it's being queried literally",
    "start": "499039",
    "end": "501080"
  },
  {
    "text": "nothing very little if it's not being",
    "start": "501080",
    "end": "502789"
  },
  {
    "text": "queried which is great yeah the disk",
    "start": "502789",
    "end": "506539"
  },
  {
    "text": "writes so this is something that is",
    "start": "506539",
    "end": "508930"
  },
  {
    "text": "literal that literally blew us away",
    "start": "508930",
    "end": "510919"
  },
  {
    "text": "because if you can see prometheus 2.0",
    "start": "510919",
    "end": "513320"
  },
  {
    "text": "writes very little but like Prometheus",
    "start": "513320",
    "end": "515390"
  },
  {
    "text": "one point or it's like 80 MB per second",
    "start": "515390",
    "end": "517190"
  },
  {
    "text": "but they're scraping the same data why",
    "start": "517190",
    "end": "519200"
  },
  {
    "text": "is that so we want per crash resiliency",
    "start": "519200",
    "end": "521990"
  },
  {
    "text": "in Prometheus so what what one point or",
    "start": "521990",
    "end": "524660"
  },
  {
    "text": "does this",
    "start": "524660",
    "end": "525740"
  },
  {
    "text": "if periodically it just checkpoints all",
    "start": "525740",
    "end": "528080"
  },
  {
    "text": "the data it has in memory to disk and if",
    "start": "528080",
    "end": "530420"
  },
  {
    "text": "it crashes it restores from the",
    "start": "530420",
    "end": "531830"
  },
  {
    "text": "checkpoint now that essentially means",
    "start": "531830",
    "end": "533720"
  },
  {
    "text": "you're writing the same data again and",
    "start": "533720",
    "end": "535160"
  },
  {
    "text": "again and again to disk and that",
    "start": "535160",
    "end": "536960"
  },
  {
    "text": "actually has a lot of rights but what we",
    "start": "536960",
    "end": "539780"
  },
  {
    "text": "do here is we have a right ahead lock",
    "start": "539780",
    "end": "541520"
  },
  {
    "text": "which we will also see has a lot of",
    "start": "541520",
    "end": "543470"
  },
  {
    "text": "other uses we own the moment a sample",
    "start": "543470",
    "end": "546650"
  },
  {
    "text": "comes in we write it to disk and that's",
    "start": "546650",
    "end": "547910"
  },
  {
    "text": "the only thing we write only time we",
    "start": "547910",
    "end": "549620"
  },
  {
    "text": "write that sample to disk like if we",
    "start": "549620",
    "end": "551750"
  },
  {
    "text": "crash and we restart we just read the",
    "start": "551750",
    "end": "554150"
  },
  {
    "text": "whole write a head lock instead of a",
    "start": "554150",
    "end": "555950"
  },
  {
    "text": "checkpoint it worked",
    "start": "555950",
    "end": "557950"
  },
  {
    "text": "yep the other thing is the on disk size",
    "start": "557950",
    "end": "561380"
  },
  {
    "text": "again as fabian explained explained on",
    "start": "561380",
    "end": "563540"
  },
  {
    "text": "prometheus 1.0 the per series overhead",
    "start": "563540",
    "end": "565760"
  },
  {
    "text": "is a lot here it's like very little so",
    "start": "565760",
    "end": "569030"
  },
  {
    "text": "what we were doing is every 10 minutes",
    "start": "569030",
    "end": "570620"
  },
  {
    "text": "we were restarting the pods right which",
    "start": "570620",
    "end": "573260"
  },
  {
    "text": "means a city slash only for 10 minutes",
    "start": "573260",
    "end": "575360"
  },
  {
    "text": "and in 10 minutes it turns out the",
    "start": "575360",
    "end": "577820"
  },
  {
    "text": "amount of data we store is less than the",
    "start": "577820",
    "end": "579560"
  },
  {
    "text": "data required to have a single series in",
    "start": "579560",
    "end": "581900"
  },
  {
    "text": "1.0 so that adds a lot of on disk size",
    "start": "581900",
    "end": "584600"
  },
  {
    "text": "but if you are having longer series it",
    "start": "584600",
    "end": "586910"
  },
  {
    "text": "shouldn't make a difference yep coming",
    "start": "586910",
    "end": "590630"
  },
  {
    "text": "to query latency yeah one of the things",
    "start": "590630",
    "end": "594110"
  },
  {
    "text": "you should observe about the previous",
    "start": "594110",
    "end": "595220"
  },
  {
    "text": "graphs is that all of them are",
    "start": "595220",
    "end": "596630"
  },
  {
    "text": "consistent while one point was flaky and",
    "start": "596630",
    "end": "599080"
  },
  {
    "text": "that is really important for queries we",
    "start": "599080",
    "end": "602510"
  },
  {
    "text": "want consistent consistent queries and",
    "start": "602510",
    "end": "604580"
  },
  {
    "text": "that actually turns out to be very good",
    "start": "604580",
    "end": "606740"
  },
  {
    "text": "in 2.0 anyways now comes snapshots how",
    "start": "606740",
    "end": "613370"
  },
  {
    "text": "many of you ran 1.0 in production and",
    "start": "613370",
    "end": "615500"
  },
  {
    "text": "wanted backups and how many of you were",
    "start": "615500",
    "end": "618890"
  },
  {
    "text": "frustrated by the reply stop Prometheus",
    "start": "618890",
    "end": "620750"
  },
  {
    "text": "back up back up the disk and restart",
    "start": "620750",
    "end": "622970"
  },
  {
    "text": "Prometheus yeah that was the like that",
    "start": "622970",
    "end": "626180"
  },
  {
    "text": "was the problem we had in 1.0 we",
    "start": "626180",
    "end": "627710"
  },
  {
    "text": "couldn't support backups and again with",
    "start": "627710",
    "end": "630620"
  },
  {
    "text": "the structure of th DB we could easily",
    "start": "630620",
    "end": "632360"
  },
  {
    "text": "support ultra-fast back backups like",
    "start": "632360",
    "end": "634790"
  },
  {
    "text": "snapshots it's like literally taking a",
    "start": "634790",
    "end": "637310"
  },
  {
    "text": "picture so what we do is so what we have",
    "start": "637310",
    "end": "640310"
  },
  {
    "text": "is essentially we have a lot of",
    "start": "640310",
    "end": "641600"
  },
  {
    "text": "immutable blocks",
    "start": "641600",
    "end": "642560"
  },
  {
    "text": "it's like SS tables you write the recent",
    "start": "642560",
    "end": "644930"
  },
  {
    "text": "data into memory and once the data is",
    "start": "644930",
    "end": "646610"
  },
  {
    "text": "old enough you flush it to disk now",
    "start": "646610",
    "end": "648440"
  },
  {
    "text": "these blocks are immutable now we use",
    "start": "648440",
    "end": "650510"
  },
  {
    "text": "that property what we do is we have a we",
    "start": "650510",
    "end": "653570"
  },
  {
    "text": "take the data directory and all these",
    "start": "653570",
    "end": "655610"
  },
  {
    "text": "immutable blocks we just do a sim card",
    "start": "655610",
    "end": "657230"
  },
  {
    "text": "link which is a sis call",
    "start": "657230",
    "end": "659059"
  },
  {
    "text": "and then the data we just write it to",
    "start": "659059",
    "end": "661519"
  },
  {
    "text": "disk turns out the SIS calls take like",
    "start": "661519",
    "end": "664069"
  },
  {
    "text": "milliseconds and right into disk of the",
    "start": "664069",
    "end": "666679"
  },
  {
    "text": "in-memory data takes like maybe 10",
    "start": "666679",
    "end": "669139"
  },
  {
    "text": "seconds on a very loaded server like you",
    "start": "669139",
    "end": "671269"
  },
  {
    "text": "have ultra-fast backups which are online",
    "start": "671269",
    "end": "673959"
  },
  {
    "text": "and then the other thing is how many of",
    "start": "673959",
    "end": "677449"
  },
  {
    "text": "you deleted data in 1.0 so essentially",
    "start": "677449",
    "end": "681259"
  },
  {
    "text": "some of the use cases we had was",
    "start": "681259",
    "end": "682899"
  },
  {
    "text": "somebody wrote some somebody wrote like",
    "start": "682899",
    "end": "688039"
  },
  {
    "text": "had a bug and then you had like a",
    "start": "688039",
    "end": "689419"
  },
  {
    "text": "million time series with a user ID",
    "start": "689419",
    "end": "691189"
  },
  {
    "text": "somewhere and suddenly you you would",
    "start": "691189",
    "end": "693619"
  },
  {
    "text": "Prometheus is not usable anymore you fix",
    "start": "693619",
    "end": "695839"
  },
  {
    "text": "that bug but your Prometheus is still",
    "start": "695839",
    "end": "697459"
  },
  {
    "text": "not usable anymore because you have too",
    "start": "697459",
    "end": "699379"
  },
  {
    "text": "many series you want to delete those and",
    "start": "699379",
    "end": "702099"
  },
  {
    "text": "now the thing is 4/5 like for five days",
    "start": "702099",
    "end": "705349"
  },
  {
    "text": "you have the right data for one hour you",
    "start": "705349",
    "end": "707359"
  },
  {
    "text": "have the bad data and then for five more",
    "start": "707359",
    "end": "709219"
  },
  {
    "text": "days you have the right data",
    "start": "709219",
    "end": "710209"
  },
  {
    "text": "you just can't clean up only the part",
    "start": "710209",
    "end": "712489"
  },
  {
    "text": "you want you just have to throw away the",
    "start": "712489",
    "end": "713989"
  },
  {
    "text": "whole thing in 1.0 and 2.0 we have",
    "start": "713989",
    "end": "716749"
  },
  {
    "text": "granular deletes you can just specify I",
    "start": "716749",
    "end": "718909"
  },
  {
    "text": "just want to delete this one point in",
    "start": "718909",
    "end": "720649"
  },
  {
    "text": "this one series and you will be able to",
    "start": "720649",
    "end": "722389"
  },
  {
    "text": "do that so yeah so how do we do that we",
    "start": "722389",
    "end": "726319"
  },
  {
    "text": "just actually instead of modifying the",
    "start": "726319",
    "end": "729559"
  },
  {
    "text": "immutable blocks we write tombstones and",
    "start": "729559",
    "end": "731509"
  },
  {
    "text": "tombstones just say hey for this series",
    "start": "731509",
    "end": "733909"
  },
  {
    "text": "just don't look at that it look at the",
    "start": "733909",
    "end": "736009"
  },
  {
    "text": "data from x time 102 times from 200 and",
    "start": "736009",
    "end": "738679"
  },
  {
    "text": "then when the query ax runs it just",
    "start": "738679",
    "end": "740689"
  },
  {
    "text": "picks up these ranges and just doesn't",
    "start": "740689",
    "end": "742039"
  },
  {
    "text": "query them and we do periodic cleanup in",
    "start": "742039",
    "end": "744889"
  },
  {
    "text": "terms of compaction where we clean up",
    "start": "744889",
    "end": "746569"
  },
  {
    "text": "the tombstones and actual data so you",
    "start": "746569",
    "end": "748339"
  },
  {
    "text": "trust me it just works out and now how",
    "start": "748339",
    "end": "752329"
  },
  {
    "text": "many of you understand what is isolation",
    "start": "752329",
    "end": "754759"
  },
  {
    "text": "in acid so like this is a very rare case",
    "start": "754759",
    "end": "758929"
  },
  {
    "text": "in Prometheus so we have histograms in",
    "start": "758929",
    "end": "761479"
  },
  {
    "text": "Prometheus and essentially when you",
    "start": "761479",
    "end": "763819"
  },
  {
    "text": "scrape a histogram is like 50 different",
    "start": "763819",
    "end": "766129"
  },
  {
    "text": "series and you have to update all of",
    "start": "766129",
    "end": "768469"
  },
  {
    "text": "them at once",
    "start": "768469",
    "end": "769449"
  },
  {
    "text": "but sometimes that doesn't happen let us",
    "start": "769449",
    "end": "772189"
  },
  {
    "text": "see why so this is a time series we have",
    "start": "772189",
    "end": "775309"
  },
  {
    "text": "like several time series and we have a",
    "start": "775309",
    "end": "777409"
  },
  {
    "text": "we have a scrape that is writing data to",
    "start": "777409",
    "end": "779929"
  },
  {
    "text": "all these time series and so far the goo",
    "start": "779929",
    "end": "782659"
  },
  {
    "text": "routine that is writing the data has",
    "start": "782659",
    "end": "783949"
  },
  {
    "text": "written to these time series you can",
    "start": "783949",
    "end": "786169"
  },
  {
    "text": "have a reader you can have a courier",
    "start": "786169",
    "end": "788059"
  },
  {
    "text": "that goes from below and it it just",
    "start": "788059",
    "end": "790369"
  },
  {
    "text": "slowly reads back and suddenly",
    "start": "790369",
    "end": "792860"
  },
  {
    "text": "you see a partial rate boom like half",
    "start": "792860",
    "end": "796610"
  },
  {
    "text": "the buckets in the histogram are updated",
    "start": "796610",
    "end": "798320"
  },
  {
    "text": "but half of them are not updated",
    "start": "798320",
    "end": "799580"
  },
  {
    "text": "sometimes breaking your alerts now this",
    "start": "799580",
    "end": "802310"
  },
  {
    "text": "is a hard problem to solve but because",
    "start": "802310",
    "end": "804940"
  },
  {
    "text": "we have a lot of like we kind of rewrote",
    "start": "804940",
    "end": "808280"
  },
  {
    "text": "it from scratch it kind of became much",
    "start": "808280",
    "end": "810020"
  },
  {
    "text": "easier to solve it and yeah",
    "start": "810020",
    "end": "813230"
  },
  {
    "text": "the PR is open and confidence driven",
    "start": "813230",
    "end": "816530"
  },
  {
    "text": "development",
    "start": "816530",
    "end": "817250"
  },
  {
    "text": "so essentially Brian Brazil he",
    "start": "817250",
    "end": "819560"
  },
  {
    "text": "essentially went ahead and wrote the",
    "start": "819560",
    "end": "821060"
  },
  {
    "text": "whole thing in July 2016 2017 yeah July",
    "start": "821060",
    "end": "824600"
  },
  {
    "text": "16 2017 and it's been it's just there",
    "start": "824600",
    "end": "828980"
  },
  {
    "text": "and yeah I just wanted to talk about it",
    "start": "828980",
    "end": "831980"
  },
  {
    "text": "so I went ahead and rebased the whole",
    "start": "831980",
    "end": "833330"
  },
  {
    "text": "thing and hopefully soon we'll have",
    "start": "833330",
    "end": "835160"
  },
  {
    "text": "isolate isolation now some of the",
    "start": "835160",
    "end": "839060"
  },
  {
    "text": "gotchas of be building a database how",
    "start": "839060",
    "end": "842120"
  },
  {
    "text": "many of you here have built a database",
    "start": "842120",
    "end": "843980"
  },
  {
    "text": "or a high-performance service yeah he",
    "start": "843980",
    "end": "846950"
  },
  {
    "text": "probably knows the issue so Alex what",
    "start": "846950",
    "end": "850580"
  },
  {
    "text": "are a locks so essentially whenever you",
    "start": "850580",
    "end": "852770"
  },
  {
    "text": "create a new struct or whenever you",
    "start": "852770",
    "end": "854690"
  },
  {
    "text": "create anything like a new variable you",
    "start": "854690",
    "end": "856790"
  },
  {
    "text": "allocate memory to it yeah true you",
    "start": "856790",
    "end": "859580"
  },
  {
    "text": "might throw away the struct or the",
    "start": "859580",
    "end": "861290"
  },
  {
    "text": "variable later and garbage collection",
    "start": "861290",
    "end": "862670"
  },
  {
    "text": "kicks in so you're not to worry but what",
    "start": "862670",
    "end": "867170"
  },
  {
    "text": "is this thing that is happening so these",
    "start": "867170",
    "end": "868760"
  },
  {
    "text": "are all compactions that are happening",
    "start": "868760",
    "end": "870110"
  },
  {
    "text": "so we are essentially merging two",
    "start": "870110",
    "end": "871700"
  },
  {
    "text": "different blocks into a bigger block and",
    "start": "871700",
    "end": "873350"
  },
  {
    "text": "suddenly there's a shoot up of memory",
    "start": "873350",
    "end": "875900"
  },
  {
    "text": "that that is being used and that",
    "start": "875900",
    "end": "877910"
  },
  {
    "text": "shouldn't happen now why is that",
    "start": "877910",
    "end": "879590"
  },
  {
    "text": "happening we went in and we saw turns",
    "start": "879590",
    "end": "882650"
  },
  {
    "text": "out structs taking memory like several",
    "start": "882650",
    "end": "885020"
  },
  {
    "text": "bites and we have millions of chunks",
    "start": "885020",
    "end": "887950"
  },
  {
    "text": "essentially we have millions of structs",
    "start": "887950",
    "end": "890000"
  },
  {
    "text": "and we are compacting we allocate all",
    "start": "890000",
    "end": "891800"
  },
  {
    "text": "these drops and suddenly for a few",
    "start": "891800",
    "end": "894800"
  },
  {
    "text": "seconds we allocate gigabits of data and",
    "start": "894800",
    "end": "897850"
  },
  {
    "text": "suddenly yeah GC will kick in but it if",
    "start": "897850",
    "end": "900680"
  },
  {
    "text": "it kicks in too late the oom killer will",
    "start": "900680",
    "end": "902900"
  },
  {
    "text": "kill us kill the service and also",
    "start": "902900",
    "end": "904850"
  },
  {
    "text": "allocating memory is very CPU intensive",
    "start": "904850",
    "end": "907600"
  },
  {
    "text": "and it just slows this whole thing down",
    "start": "907600",
    "end": "910460"
  },
  {
    "text": "and yeah and turns out we were doing",
    "start": "910460",
    "end": "913790"
  },
  {
    "text": "this all over the place so we wrote the",
    "start": "913790",
    "end": "916520"
  },
  {
    "text": "database it works so we went back and we",
    "start": "916520",
    "end": "918740"
  },
  {
    "text": "profiled it like we profile it using",
    "start": "918740",
    "end": "920750"
  },
  {
    "text": "Prometheus again and we looked at all",
    "start": "920750",
    "end": "922670"
  },
  {
    "text": "the kinds of things and we slowly",
    "start": "922670",
    "end": "923900"
  },
  {
    "text": "started",
    "start": "923900",
    "end": "925089"
  },
  {
    "text": "saving a lot of allocations but how do",
    "start": "925089",
    "end": "926979"
  },
  {
    "text": "you save on allocations any guesses yeah",
    "start": "926979",
    "end": "932489"
  },
  {
    "text": "hmm okay yeah something like that so yes",
    "start": "932489",
    "end": "940779"
  },
  {
    "text": "essentially you have a struct you which",
    "start": "940779",
    "end": "943029"
  },
  {
    "text": "you allocated you store it somewhere",
    "start": "943029",
    "end": "944889"
  },
  {
    "text": "like you you don't throw it away you",
    "start": "944889",
    "end": "946659"
  },
  {
    "text": "store it somewhere and if you want a new",
    "start": "946659",
    "end": "948249"
  },
  {
    "text": "struct in use the previous one in stop",
    "start": "948249",
    "end": "949989"
  },
  {
    "text": "allocating it again and again I think it",
    "start": "949989",
    "end": "952359"
  },
  {
    "text": "is similar to that but I am Not sure",
    "start": "952359",
    "end": "953969"
  },
  {
    "text": "yeah essentially what we had was we have",
    "start": "953969",
    "end": "957309"
  },
  {
    "text": "something called chunk meta we store",
    "start": "957309",
    "end": "958659"
  },
  {
    "text": "data in chunks and we have millions of",
    "start": "958659",
    "end": "960369"
  },
  {
    "text": "when you have millions of CDs you'll",
    "start": "960369",
    "end": "961869"
  },
  {
    "text": "have millions of chunks and the chunks",
    "start": "961869",
    "end": "964269"
  },
  {
    "text": "don't store much they just store the",
    "start": "964269",
    "end": "965829"
  },
  {
    "text": "reference which is a int the mean time",
    "start": "965829",
    "end": "968259"
  },
  {
    "text": "and max time it is an n64 again 64 bytes",
    "start": "968259",
    "end": "970929"
  },
  {
    "text": "and a pointer to a chunk again not much",
    "start": "970929",
    "end": "973989"
  },
  {
    "text": "but when you add it up into millions",
    "start": "973989",
    "end": "976349"
  },
  {
    "text": "boom suddenly you have a big GC spike",
    "start": "976349",
    "end": "980609"
  },
  {
    "text": "yeah so you use something called sink",
    "start": "980609",
    "end": "983439"
  },
  {
    "text": "pool in golang so essentially you have a",
    "start": "983439",
    "end": "986229"
  },
  {
    "text": "pool of structs like yeah sink pool is",
    "start": "986229",
    "end": "989979"
  },
  {
    "text": "very nice you just have a pool of",
    "start": "989979",
    "end": "991389"
  },
  {
    "text": "structs and whenever you want a new one",
    "start": "991389",
    "end": "993369"
  },
  {
    "text": "you try to pick it from the pool if you",
    "start": "993369",
    "end": "994749"
  },
  {
    "text": "if it's not there you create it but once",
    "start": "994749",
    "end": "996939"
  },
  {
    "text": "you want to throw it away",
    "start": "996939",
    "end": "998259"
  },
  {
    "text": "you don't let the GC eat it you give it",
    "start": "998259",
    "end": "1000509"
  },
  {
    "text": "back to the pool and you kind of reuse",
    "start": "1000509",
    "end": "1002579"
  },
  {
    "text": "the same thing and we were creating a",
    "start": "1002579",
    "end": "1004469"
  },
  {
    "text": "lot of these chunks very fast but we're",
    "start": "1004469",
    "end": "1006509"
  },
  {
    "text": "also throwing them away very fast but by",
    "start": "1006509",
    "end": "1009029"
  },
  {
    "text": "using sink dot pool by using by pooling",
    "start": "1009029",
    "end": "1011159"
  },
  {
    "text": "we saved a lot of this Alex yes so this",
    "start": "1011159",
    "end": "1013649"
  },
  {
    "text": "is some of the example a small example",
    "start": "1013649",
    "end": "1015179"
  },
  {
    "text": "of the simple and golang if you want to",
    "start": "1015179",
    "end": "1017939"
  },
  {
    "text": "use bytes for example this is what you",
    "start": "1017939",
    "end": "1020309"
  },
  {
    "text": "do so essentially you create a pool and",
    "start": "1020309",
    "end": "1023039"
  },
  {
    "text": "then you get a bite from the pool if",
    "start": "1023039",
    "end": "1024899"
  },
  {
    "text": "it's not there it creates a it creates",
    "start": "1024899",
    "end": "1027600"
  },
  {
    "text": "that bite and once you are done with",
    "start": "1027600",
    "end": "1029129"
  },
  {
    "text": "that bite you put it back yeah it turns",
    "start": "1029129",
    "end": "1033449"
  },
  {
    "text": "out yeah we had to fix airlocks at a",
    "start": "1033449",
    "end": "1036959"
  },
  {
    "text": "bunch of places yeah you can see all",
    "start": "1036959",
    "end": "1039480"
  },
  {
    "text": "this Alex a nice PR name and yes we are",
    "start": "1039480",
    "end": "1044730"
  },
  {
    "text": "still not done yep we are trying to",
    "start": "1044730",
    "end": "1048119"
  },
  {
    "text": "reuse memory wherever possible and this",
    "start": "1048119",
    "end": "1050249"
  },
  {
    "text": "is again an open PR that is there yep",
    "start": "1050249",
    "end": "1054720"
  },
  {
    "text": "this is a funny one this is an",
    "start": "1054720",
    "end": "1056190"
  },
  {
    "text": "interesting one it's called Yolo string",
    "start": "1056190",
    "end": "1059620"
  },
  {
    "text": "so what happened is now you have this",
    "start": "1059620",
    "end": "1062390"
  },
  {
    "text": "persisted blocks you're trying to read",
    "start": "1062390",
    "end": "1063860"
  },
  {
    "text": "the data from the blocks now a date data",
    "start": "1063860",
    "end": "1067970"
  },
  {
    "text": "has a lot of these strings the metric",
    "start": "1067970",
    "end": "1069500"
  },
  {
    "text": "names we don't want to allocate those",
    "start": "1069500",
    "end": "1070790"
  },
  {
    "text": "strings like we thought okay too many",
    "start": "1070790",
    "end": "1072680"
  },
  {
    "text": "are locks we don't want to allocate",
    "start": "1072680",
    "end": "1073910"
  },
  {
    "text": "these strings so we did something called",
    "start": "1073910",
    "end": "1075680"
  },
  {
    "text": "Yolo string we used golang unsafe and so",
    "start": "1075680",
    "end": "1082700"
  },
  {
    "text": "how many of you can understand the",
    "start": "1082700",
    "end": "1083780"
  },
  {
    "text": "function that is here yeah",
    "start": "1083780",
    "end": "1086240"
  },
  {
    "text": "I'm sorry for you yeah",
    "start": "1086240",
    "end": "1090650"
  },
  {
    "text": "so essentially it says hey take this",
    "start": "1090650",
    "end": "1093920"
  },
  {
    "text": "byte slice is a string please assume",
    "start": "1093920",
    "end": "1095360"
  },
  {
    "text": "it's a string and yeah it's great it is",
    "start": "1095360",
    "end": "1099080"
  },
  {
    "text": "a string for us great but only as long",
    "start": "1099080",
    "end": "1101690"
  },
  {
    "text": "as as long as the bytes slice is there",
    "start": "1101690",
    "end": "1103910"
  },
  {
    "text": "what if the bytes flash goes away what",
    "start": "1103910",
    "end": "1105620"
  },
  {
    "text": "if GC the garbage collector takes away",
    "start": "1105620",
    "end": "1107660"
  },
  {
    "text": "the bytes list boom if you try to use",
    "start": "1107660",
    "end": "1110060"
  },
  {
    "text": "the string you're dead so that is what",
    "start": "1110060",
    "end": "1112040"
  },
  {
    "text": "happened when we tried to use your low",
    "start": "1112040",
    "end": "1114020"
  },
  {
    "text": "string yeah so what we do is we a map",
    "start": "1114020",
    "end": "1116810"
  },
  {
    "text": "the data so we actually use a map for",
    "start": "1116810",
    "end": "1119060"
  },
  {
    "text": "these persistent blocks and later 30",
    "start": "1119060",
    "end": "1122150"
  },
  {
    "text": "days later or whenever you hit your",
    "start": "1122150",
    "end": "1123650"
  },
  {
    "text": "attention we delete the block but then",
    "start": "1123650",
    "end": "1125990"
  },
  {
    "text": "you are deleting the block and you have",
    "start": "1125990",
    "end": "1127520"
  },
  {
    "text": "a courier that has the string and yeah",
    "start": "1127520",
    "end": "1130880"
  },
  {
    "text": "if you delete the file we lose the bytes",
    "start": "1130880",
    "end": "1132650"
  },
  {
    "text": "and the moment we lose the bytes we axe",
    "start": "1132650",
    "end": "1134810"
  },
  {
    "text": "try to access the string and it used to",
    "start": "1134810",
    "end": "1136850"
  },
  {
    "text": "crash we're like okay this error should",
    "start": "1136850",
    "end": "1139760"
  },
  {
    "text": "not be there and go like why is this",
    "start": "1139760",
    "end": "1142310"
  },
  {
    "text": "even happening in gogo is supposed to",
    "start": "1142310",
    "end": "1145130"
  },
  {
    "text": "make sure that you never hit this but we",
    "start": "1145130",
    "end": "1147260"
  },
  {
    "text": "hit this because we were stupid enough",
    "start": "1147260",
    "end": "1148490"
  },
  {
    "text": "to use unsafe yeah yeah and then there",
    "start": "1148490",
    "end": "1153200"
  },
  {
    "text": "was this PR allocate and cash strings",
    "start": "1153200",
    "end": "1155450"
  },
  {
    "text": "for persistent blocks turns out we did",
    "start": "1155450",
    "end": "1157850"
  },
  {
    "text": "something called premature optimizations",
    "start": "1157850",
    "end": "1160160"
  },
  {
    "text": "we try to we thought allocation of",
    "start": "1160160",
    "end": "1162890"
  },
  {
    "text": "shrinks is too much but turns out it is",
    "start": "1162890",
    "end": "1164570"
  },
  {
    "text": "not yep files and windows so we are all",
    "start": "1164570",
    "end": "1169670"
  },
  {
    "text": "Mac or Linux developers and we go to 2.0",
    "start": "1169670",
    "end": "1173360"
  },
  {
    "text": "we had a bunch of our CSV toss",
    "start": "1173360",
    "end": "1175690"
  },
  {
    "text": "everything was working we finally",
    "start": "1175690",
    "end": "1177740"
  },
  {
    "text": "launched 2.0 and somebody comes and says",
    "start": "1177740",
    "end": "1179450"
  },
  {
    "text": "it doesn't work on Windows and you're",
    "start": "1179450",
    "end": "1182000"
  },
  {
    "text": "like ok we have no clue why it doesn't",
    "start": "1182000",
    "end": "1184850"
  },
  {
    "text": "work on Windows but again it being an",
    "start": "1184850",
    "end": "1187700"
  },
  {
    "text": "open source project a bunch of people",
    "start": "1187700",
    "end": "1189260"
  },
  {
    "text": "went head debugged it and turns out",
    "start": "1189260",
    "end": "1191990"
  },
  {
    "text": "Windows doesn't let you delete a file",
    "start": "1191990",
    "end": "1194270"
  },
  {
    "text": "before you close it and we were doing it",
    "start": "1194270",
    "end": "1196370"
  },
  {
    "text": "in a bunch of places we like yeah we",
    "start": "1196370",
    "end": "1199940"
  },
  {
    "text": "were deleting a file before we closed it",
    "start": "1199940",
    "end": "1201740"
  },
  {
    "text": "and we are also having a lot of these",
    "start": "1201740",
    "end": "1204410"
  },
  {
    "text": "file descriptor leaks and stuff but yeah",
    "start": "1204410",
    "end": "1209050"
  },
  {
    "text": "windows development is a pain as I've",
    "start": "1209050",
    "end": "1211730"
  },
  {
    "text": "learned when I set up my own Windows",
    "start": "1211730",
    "end": "1213410"
  },
  {
    "text": "system to debug this I was like I gave",
    "start": "1213410",
    "end": "1215330"
  },
  {
    "text": "up halfway I don't care about Windows",
    "start": "1215330",
    "end": "1217810"
  },
  {
    "text": "yep yep now I'm done with the gorches",
    "start": "1217810",
    "end": "1222860"
  },
  {
    "text": "coming to the future what is the left to",
    "start": "1222860",
    "end": "1227870"
  },
  {
    "text": "do in TS DB like th DV is being used in",
    "start": "1227870",
    "end": "1230000"
  },
  {
    "text": "2.0 we've done everything we wanted to",
    "start": "1230000",
    "end": "1232520"
  },
  {
    "text": "do like we fixed isolation which is one",
    "start": "1232520",
    "end": "1234740"
  },
  {
    "text": "of the rarest bugs ever and stuff like",
    "start": "1234740",
    "end": "1237530"
  },
  {
    "text": "that but I think I'm like I'm really",
    "start": "1237530",
    "end": "1240950"
  },
  {
    "text": "excited about what's coming for the next",
    "start": "1240950",
    "end": "1242810"
  },
  {
    "text": "six months and TSD be one of them is",
    "start": "1242810",
    "end": "1246020"
  },
  {
    "text": "backfilling how many of you wanted to",
    "start": "1246020",
    "end": "1247820"
  },
  {
    "text": "backfill into prometheus oh that's a lot",
    "start": "1247820",
    "end": "1251450"
  },
  {
    "text": "of people and what was the answer yeah",
    "start": "1251450",
    "end": "1254600"
  },
  {
    "text": "we said nope sometime in the future but",
    "start": "1254600",
    "end": "1257270"
  },
  {
    "text": "not now and it will be soon and again",
    "start": "1257270",
    "end": "1260300"
  },
  {
    "text": "the reason we didn't want you to let you",
    "start": "1260300",
    "end": "1263060"
  },
  {
    "text": "backfill your data is because each",
    "start": "1263060",
    "end": "1264620"
  },
  {
    "text": "series was a file and if you're back",
    "start": "1264620",
    "end": "1266540"
  },
  {
    "text": "filling into millions of series you're",
    "start": "1266540",
    "end": "1269390"
  },
  {
    "text": "touching millions of files it just",
    "start": "1269390",
    "end": "1270830"
  },
  {
    "text": "doesn't scale in 1.0 but in 2.0 we can",
    "start": "1270830",
    "end": "1273830"
  },
  {
    "text": "do something very clever so we say these",
    "start": "1273830",
    "end": "1275600"
  },
  {
    "text": "are the immutable blocks like we say the",
    "start": "1275600",
    "end": "1278060"
  },
  {
    "text": "first block has data from t0 to t1 t1 to",
    "start": "1278060",
    "end": "1281150"
  },
  {
    "text": "t2 t2 has the second block we just do",
    "start": "1281150",
    "end": "1283970"
  },
  {
    "text": "something very clever we just say hey",
    "start": "1283970",
    "end": "1285710"
  },
  {
    "text": "you take your backfill data and plop a",
    "start": "1285710",
    "end": "1287600"
  },
  {
    "text": "block in and then we reuse so a block is",
    "start": "1287600",
    "end": "1291890"
  },
  {
    "text": "an interface it's not an actual thing so",
    "start": "1291890",
    "end": "1293510"
  },
  {
    "text": "you can have anything as a block so what",
    "start": "1293510",
    "end": "1295670"
  },
  {
    "text": "we do is we have a big block that",
    "start": "1295670",
    "end": "1297530"
  },
  {
    "text": "encapsulate all this and merges all the",
    "start": "1297530",
    "end": "1299660"
  },
  {
    "text": "data so this is something that I want to",
    "start": "1299660",
    "end": "1302870"
  },
  {
    "text": "work on next it has a little got just",
    "start": "1302870",
    "end": "1304880"
  },
  {
    "text": "how do you d do placate and stuff but I",
    "start": "1304880",
    "end": "1307460"
  },
  {
    "text": "would love to see someone else do this",
    "start": "1307460",
    "end": "1309860"
  },
  {
    "text": "because come on community yeah I wish",
    "start": "1309860",
    "end": "1314960"
  },
  {
    "text": "too many things to do and the other",
    "start": "1314960",
    "end": "1317420"
  },
  {
    "text": "things right ahead log base replication",
    "start": "1317420",
    "end": "1320690"
  },
  {
    "text": "so we have a right ahead log and it's",
    "start": "1320690",
    "end": "1322640"
  },
  {
    "text": "one of the one of the things that gave",
    "start": "1322640",
    "end": "1324800"
  },
  {
    "text": "us a lot of benefit",
    "start": "1324800",
    "end": "1325670"
  },
  {
    "text": "it's like the startup times are",
    "start": "1325670",
    "end": "1327890"
  },
  {
    "text": "instantaneous like it's very fast to",
    "start": "1327890",
    "end": "1329600"
  },
  {
    "text": "restart a Prometheus in 1.0 you had to",
    "start": "1329600",
    "end": "1332120"
  },
  {
    "text": "go through the checkpoint and a lot of",
    "start": "1332120",
    "end": "1333380"
  },
  {
    "text": "other things and the other thing that",
    "start": "1333380",
    "end": "1336200"
  },
  {
    "text": "the right ahead lock will let us do is",
    "start": "1336200",
    "end": "1339460"
  },
  {
    "text": "replication but why do you why do we",
    "start": "1339460",
    "end": "1341720"
  },
  {
    "text": "want replication so how many of you",
    "start": "1341720",
    "end": "1343580"
  },
  {
    "text": "heard of remote storage in Prometheus I",
    "start": "1343580",
    "end": "1345590"
  },
  {
    "text": "mean if you use remote storage in",
    "start": "1345590",
    "end": "1347240"
  },
  {
    "text": "Prometheus so yeah so I'll tell you how",
    "start": "1347240",
    "end": "1349730"
  },
  {
    "text": "remote storage in Prometheus works so",
    "start": "1349730",
    "end": "1352490"
  },
  {
    "text": "you get a sample",
    "start": "1352490",
    "end": "1353240"
  },
  {
    "text": "Prometheus scripts a sample you sent the",
    "start": "1353240",
    "end": "1354800"
  },
  {
    "text": "sample to remote storage now a sample is",
    "start": "1354800",
    "end": "1356660"
  },
  {
    "text": "six eight bytes and eight bytes but then",
    "start": "1356660",
    "end": "1358700"
  },
  {
    "text": "with that you send also all the strings",
    "start": "1358700",
    "end": "1361010"
  },
  {
    "text": "all the labels everything with that so",
    "start": "1361010",
    "end": "1363530"
  },
  {
    "text": "essentially you might send a lot more",
    "start": "1363530",
    "end": "1365180"
  },
  {
    "text": "data than you're supposed to yeah but",
    "start": "1365180",
    "end": "1368900"
  },
  {
    "text": "with the right ahead log we just",
    "start": "1368900",
    "end": "1370250"
  },
  {
    "text": "replicate the right ahead lock we'll",
    "start": "1370250",
    "end": "1371390"
  },
  {
    "text": "make it an interface we'll make a",
    "start": "1371390",
    "end": "1372620"
  },
  {
    "text": "library around it so that anybody can",
    "start": "1372620",
    "end": "1374570"
  },
  {
    "text": "integrate with the right ahead log and",
    "start": "1374570",
    "end": "1376010"
  },
  {
    "text": "it's much more efficient that way yep",
    "start": "1376010",
    "end": "1378470"
  },
  {
    "text": "there's a proposal open on Prometheus",
    "start": "1378470",
    "end": "1380240"
  },
  {
    "text": "dev mailing list just Google from",
    "start": "1380240",
    "end": "1381830"
  },
  {
    "text": "easiest dev right ahead lock replication",
    "start": "1381830",
    "end": "1383720"
  },
  {
    "text": "and it would be if you're interested in",
    "start": "1383720",
    "end": "1386330"
  },
  {
    "text": "it I would love your thoughts on that",
    "start": "1386330",
    "end": "1388510"
  },
  {
    "text": "yep the future is bright I don't have",
    "start": "1388510",
    "end": "1392240"
  },
  {
    "text": "the goggles but yeah there's a lot more",
    "start": "1392240",
    "end": "1395300"
  },
  {
    "text": "things happening it's a library we have",
    "start": "1395300",
    "end": "1397850"
  },
  {
    "text": "a lot of users using using th DB like",
    "start": "1397850",
    "end": "1402320"
  },
  {
    "text": "people who are trying to do their own",
    "start": "1402320",
    "end": "1403640"
  },
  {
    "text": "analytic stuff people are building",
    "start": "1403640",
    "end": "1405020"
  },
  {
    "text": "databases on top and that is one of the",
    "start": "1405020",
    "end": "1407690"
  },
  {
    "text": "reasons we rebuild th DB and I want you",
    "start": "1407690",
    "end": "1410300"
  },
  {
    "text": "guys to look into th DB C if it's",
    "start": "1410300",
    "end": "1412430"
  },
  {
    "text": "applicable for your use case if your if",
    "start": "1412430",
    "end": "1414650"
  },
  {
    "text": "you're touching time series data you",
    "start": "1414650",
    "end": "1416810"
  },
  {
    "text": "probably want to look at this a little",
    "start": "1416810",
    "end": "1420050"
  },
  {
    "text": "gotcha this is in process and it's a",
    "start": "1420050",
    "end": "1422480"
  },
  {
    "text": "single node one it's not a replicated",
    "start": "1422480",
    "end": "1423980"
  },
  {
    "text": "one if you want to know if you're okay",
    "start": "1423980",
    "end": "1425480"
  },
  {
    "text": "with an out of process with a little",
    "start": "1425480",
    "end": "1427040"
  },
  {
    "text": "latency influx is much better",
    "start": "1427040",
    "end": "1428750"
  },
  {
    "text": "or maybe just use Prometheus and one",
    "start": "1428750",
    "end": "1432500"
  },
  {
    "text": "more thing",
    "start": "1432500",
    "end": "1433610"
  },
  {
    "text": "one of the use cases of this being a",
    "start": "1433610",
    "end": "1436070"
  },
  {
    "text": "library is tano's how many of you saw",
    "start": "1436070",
    "end": "1439370"
  },
  {
    "text": "Avengers here Thanos is the good guy",
    "start": "1439370",
    "end": "1443680"
  },
  {
    "text": "yeah so Thanos is a long-term storage",
    "start": "1443680",
    "end": "1447290"
  },
  {
    "text": "for prometheus so what it actually so",
    "start": "1447290",
    "end": "1449300"
  },
  {
    "text": "what every other remote storage solution",
    "start": "1449300",
    "end": "1451340"
  },
  {
    "text": "now does is it reads from this remote",
    "start": "1451340",
    "end": "1453680"
  },
  {
    "text": "remote storage data that Prometheus",
    "start": "1453680",
    "end": "1455480"
  },
  {
    "text": "sends to that thing",
    "start": "1455480",
    "end": "1457470"
  },
  {
    "text": "but because th TV is a library anybody",
    "start": "1457470",
    "end": "1460200"
  },
  {
    "text": "can write us a thing that manipulates",
    "start": "1460200",
    "end": "1462059"
  },
  {
    "text": "the data",
    "start": "1462059",
    "end": "1462659"
  },
  {
    "text": "so what Tanis does is it has Prometheus",
    "start": "1462659",
    "end": "1465480"
  },
  {
    "text": "it has a sidecar and it has these blocks",
    "start": "1465480",
    "end": "1467909"
  },
  {
    "text": "immutable blocks so what Tanner says is",
    "start": "1467909",
    "end": "1470159"
  },
  {
    "text": "it is a sidecar to ship all these blocks",
    "start": "1470159",
    "end": "1471900"
  },
  {
    "text": "to object storage like s3 GCS and then",
    "start": "1471900",
    "end": "1475860"
  },
  {
    "text": "it uses a library again the PSDB to read",
    "start": "1475860",
    "end": "1480210"
  },
  {
    "text": "the data back from so it has a square",
    "start": "1480210",
    "end": "1482130"
  },
  {
    "text": "here and it has a store the store reads",
    "start": "1482130",
    "end": "1484200"
  },
  {
    "text": "the data back from the object storage to",
    "start": "1484200",
    "end": "1486870"
  },
  {
    "text": "give you a long-term storage so",
    "start": "1486870",
    "end": "1487860"
  },
  {
    "text": "essentially you don't need to care about",
    "start": "1487860",
    "end": "1488940"
  },
  {
    "text": "replication XYZ because you have your s3",
    "start": "1488940",
    "end": "1492600"
  },
  {
    "text": "or GCS caring about all that and one of",
    "start": "1492600",
    "end": "1495750"
  },
  {
    "text": "the wins of th DB is the store which is",
    "start": "1495750",
    "end": "1499409"
  },
  {
    "text": "essentially written because th DB was a",
    "start": "1499409",
    "end": "1501570"
  },
  {
    "text": "library if it was like a custom format",
    "start": "1501570",
    "end": "1503429"
  },
  {
    "text": "in built into promises it would have",
    "start": "1503429",
    "end": "1504720"
  },
  {
    "text": "been very hard to implement this yep",
    "start": "1504720",
    "end": "1508409"
  },
  {
    "text": "also a gentle reminder we have Brom Khan",
    "start": "1508409",
    "end": "1510840"
  },
  {
    "text": "coming up itself is actually the one",
    "start": "1510840",
    "end": "1513539"
  },
  {
    "text": "conference I'm looking forward to",
    "start": "1513539",
    "end": "1515130"
  },
  {
    "text": "because it's just so small it's like 220",
    "start": "1515130",
    "end": "1518610"
  },
  {
    "text": "people very cozy very dev very like and",
    "start": "1518610",
    "end": "1522210"
  },
  {
    "text": "it's in Munich it's very nice if you are",
    "start": "1522210",
    "end": "1525120"
  },
  {
    "text": "users of Prometheus if you have use",
    "start": "1525120",
    "end": "1526559"
  },
  {
    "text": "cases for th DB if you are already using",
    "start": "1526559",
    "end": "1528330"
  },
  {
    "text": "PSD be thinking of using th DB come talk",
    "start": "1528330",
    "end": "1530820"
  },
  {
    "text": "to me submit talks we have the CFP open",
    "start": "1530820",
    "end": "1534510"
  },
  {
    "text": "for another two weeks or so it's in",
    "start": "1534510",
    "end": "1536370"
  },
  {
    "text": "August it's sunny and it's in Munich",
    "start": "1536370",
    "end": "1538140"
  },
  {
    "text": "it's there's good beer yep any questions",
    "start": "1538140",
    "end": "1544429"
  },
  {
    "text": "yep yes so so now we have th DB and it's",
    "start": "1544610",
    "end": "1567240"
  },
  {
    "text": "library so we have this block size",
    "start": "1567240",
    "end": "1568799"
  },
  {
    "text": "options turns out there are advanced",
    "start": "1568799",
    "end": "1571770"
  },
  {
    "text": "user options and we don't want people to",
    "start": "1571770",
    "end": "1573659"
  },
  {
    "text": "meddle with them because that breaks",
    "start": "1573659",
    "end": "1574919"
  },
  {
    "text": "setups and that actually broke setups",
    "start": "1574919",
    "end": "1576510"
  },
  {
    "text": "those options are there because we",
    "start": "1576510",
    "end": "1579260"
  },
  {
    "text": "wanted to do some testing locally",
    "start": "1579260",
    "end": "1582230"
  },
  {
    "text": "essentially we scrape every point every",
    "start": "1582230",
    "end": "1584460"
  },
  {
    "text": "point two milliseconds and we have like",
    "start": "1584460",
    "end": "1586470"
  },
  {
    "text": "a 10-minute block size because we want",
    "start": "1586470",
    "end": "1588899"
  },
  {
    "text": "to hit compaction so you want to have",
    "start": "1588899",
    "end": "1590250"
  },
  {
    "text": "the same amount of",
    "start": "1590250",
    "end": "1591070"
  },
  {
    "text": "and stuff but it's the defaults work",
    "start": "1591070",
    "end": "1593919"
  },
  {
    "text": "really well which is why we hit them but",
    "start": "1593919",
    "end": "1596950"
  },
  {
    "text": "the funny thing is if you try to use",
    "start": "1596950",
    "end": "1598720"
  },
  {
    "text": "them they still work",
    "start": "1598720",
    "end": "1599590"
  },
  {
    "text": "they just hidden they're not visible huh",
    "start": "1599590",
    "end": "1608580"
  },
  {
    "text": "funny because that shouldn't be the case",
    "start": "1608580",
    "end": "1611820"
  },
  {
    "text": "probably in the initial days but now",
    "start": "1611820",
    "end": "1613899"
  },
  {
    "text": "it's like defaults okay any other",
    "start": "1613899",
    "end": "1619000"
  },
  {
    "text": "questions yep so that's one of the parts",
    "start": "1619000",
    "end": "1631690"
  },
  {
    "text": "of the few the controversial part of the",
    "start": "1631690",
    "end": "1633309"
  },
  {
    "text": "future that I want to see because so",
    "start": "1633309",
    "end": "1636159"
  },
  {
    "text": "essentially I want to have the time",
    "start": "1636159",
    "end": "1638019"
  },
  {
    "text": "series to be an interface like right now",
    "start": "1638019",
    "end": "1639879"
  },
  {
    "text": "the time series values are only floats",
    "start": "1639879",
    "end": "1641860"
  },
  {
    "text": "but in the future I want to put strings",
    "start": "1641860",
    "end": "1643840"
  },
  {
    "text": "in there maybe logs and stuff but it's",
    "start": "1643840",
    "end": "1647350"
  },
  {
    "text": "all like well first thing is if you put",
    "start": "1647350",
    "end": "1651370"
  },
  {
    "text": "it if you make it an interface you kind",
    "start": "1651370",
    "end": "1653710"
  },
  {
    "text": "of have a big performance finality and",
    "start": "1653710",
    "end": "1656200"
  },
  {
    "text": "we don't want that the first thing is th",
    "start": "1656200",
    "end": "1659590"
  },
  {
    "text": "DB was built for Prometheus oops oops",
    "start": "1659590",
    "end": "1663509"
  },
  {
    "text": "yeah ts DB was built for Prometheus and",
    "start": "1663509",
    "end": "1666429"
  },
  {
    "text": "it should work for Prometheus primarily",
    "start": "1666429",
    "end": "1667779"
  },
  {
    "text": "and if that I'm still experimenting like",
    "start": "1667779",
    "end": "1671320"
  },
  {
    "text": "trust me I'm going to do this at some",
    "start": "1671320",
    "end": "1673240"
  },
  {
    "text": "point but if it turns out that you can",
    "start": "1673240",
    "end": "1675700"
  },
  {
    "text": "have interfaces for values rather than",
    "start": "1675700",
    "end": "1678789"
  },
  {
    "text": "just floats I would have to I would do",
    "start": "1678789",
    "end": "1680559"
  },
  {
    "text": "it in the future but sometime in the",
    "start": "1680559",
    "end": "1682059"
  },
  {
    "text": "future I can't guarantee it you're",
    "start": "1682059",
    "end": "1684850"
  },
  {
    "text": "welcome to talk to me if you want to",
    "start": "1684850",
    "end": "1686470"
  },
  {
    "text": "experiment with that it is definitely",
    "start": "1686470",
    "end": "1688299"
  },
  {
    "text": "possible yep",
    "start": "1688299",
    "end": "1692460"
  },
  {
    "text": "yes only if the blocks are an s3 and it",
    "start": "1719350",
    "end": "1722510"
  },
  {
    "text": "takes some time yeah so one of the",
    "start": "1722510",
    "end": "1725870"
  },
  {
    "text": "things is we reduced Alex we reduced",
    "start": "1725870",
    "end": "1728600"
  },
  {
    "text": "memory usage and everything before the",
    "start": "1728600",
    "end": "1731360"
  },
  {
    "text": "storage used to show up in the profiles",
    "start": "1731360",
    "end": "1732799"
  },
  {
    "text": "now the query engine is showing up in",
    "start": "1732799",
    "end": "1734630"
  },
  {
    "text": "the profiles and the first the thing",
    "start": "1734630",
    "end": "1737000"
  },
  {
    "text": "that is that's another open PR is",
    "start": "1737000",
    "end": "1738770"
  },
  {
    "text": "optimizing the query engine now going",
    "start": "1738770",
    "end": "1741320"
  },
  {
    "text": "back to Thanos Thanos puts the blocks in",
    "start": "1741320",
    "end": "1743600"
  },
  {
    "text": "s3 and the block only goes thereafter to",
    "start": "1743600",
    "end": "1745970"
  },
  {
    "text": "ours so essentially like yes you can",
    "start": "1745970",
    "end": "1751850"
  },
  {
    "text": "have a horizontally horizontally",
    "start": "1751850",
    "end": "1753590"
  },
  {
    "text": "scalable stateless Quarrier that just",
    "start": "1753590",
    "end": "1755240"
  },
  {
    "text": "reads from the blocks but that has a",
    "start": "1755240",
    "end": "1756590"
  },
  {
    "text": "delay of two R's and if you want to",
    "start": "1756590",
    "end": "1758299"
  },
  {
    "text": "bridge that there's a way you can make",
    "start": "1758299",
    "end": "1760010"
  },
  {
    "text": "tano's query or local prometheus but the",
    "start": "1760010",
    "end": "1762169"
  },
  {
    "text": "local Prometheus will still have that",
    "start": "1762169",
    "end": "1763490"
  },
  {
    "text": "query overhead but it's getting better",
    "start": "1763490",
    "end": "1767240"
  },
  {
    "text": "probably in 2.3 or maybe two point three",
    "start": "1767240",
    "end": "1769940"
  },
  {
    "text": "point one we will have a much better",
    "start": "1769940",
    "end": "1771919"
  },
  {
    "text": "query engine",
    "start": "1771919",
    "end": "1774580"
  }
]