[
  {
    "start": "0",
    "end": "164000"
  },
  {
    "text": "good afternoon everybody my name is pervy in about few years back I was",
    "start": "30",
    "end": "7140"
  },
  {
    "text": "given an honor to run kubernetes networking on TCP and I was literally new I'm still little II knew it was out",
    "start": "7140",
    "end": "14610"
  },
  {
    "text": "of selfish interest that I wanted to understand the evolution of cop√°n it isn't working and GCP networking and",
    "start": "14610",
    "end": "21869"
  },
  {
    "text": "extract the principles that we could use to shape at our future and a thought",
    "start": "21869",
    "end": "27150"
  },
  {
    "text": "occurred to share this with larger community hence this stock the intention of this talk is to go over the evolution",
    "start": "27150",
    "end": "33750"
  },
  {
    "text": "as the titles of describes of kubernetes and she spent working for kubernetes",
    "start": "33750",
    "end": "39510"
  },
  {
    "text": "starting from beginning the foundations the abstractions that allowed us to pick off the abstractions that had to be",
    "start": "39510",
    "end": "45989"
  },
  {
    "text": "adopted on both sides to create a playbook for the right future to kick",
    "start": "45989",
    "end": "52469"
  },
  {
    "text": "this off I'm going to introduce my co-speaker Tim Hakan as many of you know he is one of the first engineers working",
    "start": "52469",
    "end": "59160"
  },
  {
    "text": "on kubernetes and he has not only witnessed the sku evolution firsthand but he helped shape",
    "start": "59160",
    "end": "65128"
  },
  {
    "text": "that along with TCP networking team Thank You Purvi so I want to talk first",
    "start": "65129",
    "end": "74729"
  },
  {
    "text": "just a little bit of background like why why communities why is it exciting to people and you know why did it catch",
    "start": "74729",
    "end": "82080"
  },
  {
    "text": "hold why are we here in Spain with 8,000 of my best friends talking about this",
    "start": "82080",
    "end": "88080"
  },
  {
    "text": "this thing and so from my perspective I think there's there's a few really main points I think kubernetes is is",
    "start": "88080",
    "end": "95640"
  },
  {
    "text": "successful because we are ruthlessly focused on the application and we didn't",
    "start": "95640",
    "end": "100799"
  },
  {
    "text": "really want to conflate infrastructure with applications and so you can see this in a bunch of different places in",
    "start": "100799",
    "end": "106259"
  },
  {
    "text": "our API and I think this gives us an opportunity to talk to application owners and application developers in a",
    "start": "106259",
    "end": "112380"
  },
  {
    "text": "way that maybe other systems couldn't at the same time we had to be opinionated enough we had to take certain opinions",
    "start": "112380",
    "end": "119369"
  },
  {
    "text": "and positions on how we wanted things to work in order to derive the user experiences that we really wanted also",
    "start": "119369",
    "end": "126060"
  },
  {
    "text": "you know we accept from the beginning that platforms are going to vary right",
    "start": "126060",
    "end": "131849"
  },
  {
    "text": "the clouds that we're going to build on top of are going to have different capabilities and kubernetes accepts that from the beginning and plans for it",
    "start": "131849",
    "end": "140390"
  },
  {
    "text": "we've designed this system obviously to work with popular open source apps and I",
    "start": "140390",
    "end": "145650"
  },
  {
    "text": "think this is really the driving force that makes adoption of communities possible we wanted to focus on patterns",
    "start": "145650",
    "end": "152010"
  },
  {
    "text": "that people already know how to do right how to run my sequel we didn't require you to change your applications but we",
    "start": "152010",
    "end": "158190"
  },
  {
    "text": "wanted to open new doors and and change the way people think about how these sorts of applications would be run",
    "start": "158190",
    "end": "164420"
  },
  {
    "start": "164000",
    "end": "206000"
  },
  {
    "text": "you can't build you can't build a distributed cloud native system without networking right networking is really at",
    "start": "164420",
    "end": "170400"
  },
  {
    "text": "the heart of communities but it can be really hard like I'm not gonna do a show of hands but like everybody struggles",
    "start": "170400",
    "end": "177150"
  },
  {
    "text": "with networking at some point or another and kubernetes doesn't make it any easier if you don't know what you're",
    "start": "177150",
    "end": "182430"
  },
  {
    "text": "doing at the beginning so we will really wanted to to try to break through that and networking varies between",
    "start": "182430",
    "end": "188040"
  },
  {
    "text": "environments if you get stuck with your on-premises around a cloud you have to learn about what's capable what's possible in those environments but",
    "start": "188040",
    "end": "195600"
  },
  {
    "text": "application developers are not networking experts and they shouldn't have to be it's kind of ridiculous the",
    "start": "195600",
    "end": "200880"
  },
  {
    "text": "idea that if you want to build a full stack app you need to understand layer 3 networking so let's take a step back and",
    "start": "200880",
    "end": "209040"
  },
  {
    "start": "206000",
    "end": "237000"
  },
  {
    "text": "maybe do a quick survey of where we came from where we were at the beginning of kubernetes and what was going on so",
    "start": "209040",
    "end": "215750"
  },
  {
    "text": "kubernetes started with this system called borg internally and borg successor as omega we took the ideas",
    "start": "215750",
    "end": "223020"
  },
  {
    "text": "from Borgan omega we really wanted to to build on this idea of containerization and as we started we had to take a look",
    "start": "223020",
    "end": "229920"
  },
  {
    "text": "around what else was going on in the world when it came to networking because you know borg had some opinions but",
    "start": "229920",
    "end": "236280"
  },
  {
    "text": "maybe they weren't the best opinions so let me start and I'll tell you just a little bit about how borg works with",
    "start": "236280",
    "end": "242430"
  },
  {
    "text": "networking borg is all about shared machines and they have a shared nic",
    "start": "242430",
    "end": "247740"
  },
  {
    "text": "everybody shares the the resources on the machine we didn't have namespaces we didn't have virtual interfaces we didn't",
    "start": "247740",
    "end": "253590"
  },
  {
    "text": "have an overlay we had the network and so all the apps on a Borg machine have",
    "start": "253590",
    "end": "259709"
  },
  {
    "text": "to cooperatively share the port's if you want to open port 80 and you want to open port 80 you are both going to be",
    "start": "259710",
    "end": "266010"
  },
  {
    "text": "a world of hurt as life goes on one of you would get it one of you would not",
    "start": "266010",
    "end": "271290"
  },
  {
    "start": "268000",
    "end": "330000"
  },
  {
    "text": "get it one of you would crash and then the other person would get it it would be it was a nightmare and so the end",
    "start": "271290",
    "end": "277170"
  },
  {
    "text": "result was all ports were allocated by the Borg system right so part of the",
    "start": "277170",
    "end": "282360"
  },
  {
    "text": "scheduling pass was you tell us how many ports you need we would decide that the ports for you and then we would do variable expansion into your config",
    "start": "282360",
    "end": "289530"
  },
  {
    "text": "language so you could pass a dash dash port flag to your application and then you had to use the port in the URL of",
    "start": "289530",
    "end": "296460"
  },
  {
    "text": "your monitoring server so that you could find it and the ports were going to change all the time because they were dynamic and so if you took a URL and you",
    "start": "296460",
    "end": "302850"
  },
  {
    "text": "sent it over Hangouts to your friends so they could go look at a bug report or something well the port might have",
    "start": "302850",
    "end": "308070"
  },
  {
    "text": "changed by the time it got there it was it was a mess at the end of it we needed our own naming system because DNS wasn't",
    "start": "308070",
    "end": "314010"
  },
  {
    "text": "gonna work for this anymore and so you can sort of see how this design point",
    "start": "314010",
    "end": "319080"
  },
  {
    "text": "propagates through the system even to the extent that we wrote a kernel namespace to govern which ports are",
    "start": "319080",
    "end": "325560"
  },
  {
    "text": "allowed to open so that we could stop people from stepping on each other's toes so 2013 what happened docker docker",
    "start": "325560",
    "end": "334920"
  },
  {
    "start": "330000",
    "end": "393000"
  },
  {
    "text": "happened we took a look at at what doctor was doing docker took this idea",
    "start": "334920",
    "end": "340650"
  },
  {
    "text": "of sharing a machine and they added namespaces and man namespaces Liffe I had a ton of things right it gave you",
    "start": "340650",
    "end": "346050"
  },
  {
    "text": "this really nice user experience you've got a pretend machine with your own interface but fundamentally it was still",
    "start": "346050",
    "end": "352050"
  },
  {
    "text": "a machine based model every machine is its own Island they get the same IPS they're gonna allocate IPS to the",
    "start": "352050",
    "end": "357840"
  },
  {
    "text": "containers running on that machine and if you want to talk between two different machines you've got to come up with some sort of port mapping on the",
    "start": "357840",
    "end": "363810"
  },
  {
    "text": "host which will forward to your containers and the packet gets translated at the edges so you actually",
    "start": "363810",
    "end": "369060"
  },
  {
    "text": "lose the source IP and you can't figure out the destination or so the source port and and yes report end IP sorry and",
    "start": "369060",
    "end": "377480"
  },
  {
    "text": "it gets it's complicated and entirely different way and we didn't really like it at the end of the day how an app sees",
    "start": "377480",
    "end": "383760"
  },
  {
    "text": "itself was not at all how other apps see it right I couldn't get my own IP address and tell you about it and expect",
    "start": "383760",
    "end": "389580"
  },
  {
    "text": "you to be able to reach me it was it was inconsistent so from looking at these",
    "start": "389580",
    "end": "395460"
  },
  {
    "start": "393000",
    "end": "435000"
  },
  {
    "text": "things we sort of derived a cup the principles that we wanted to follow through as we're looking at kubernetes",
    "start": "395460",
    "end": "400650"
  },
  {
    "text": "and networking fundamentally have this idea that voluntary cooperative sharing",
    "start": "400650",
    "end": "407220"
  },
  {
    "text": "of anything is a terrible idea and it doesn't work at scale and if you start",
    "start": "407220",
    "end": "412470"
  },
  {
    "text": "with the assumption that everybody will be a good neighbor you're going to have a bad time users should just not have to",
    "start": "412470",
    "end": "419250"
  },
  {
    "text": "worry about collisions that they didn't cause I want to listen on port 80 I don't care if somebody else wants to listen on port 80 I want to listen on",
    "start": "419250",
    "end": "425880"
  },
  {
    "text": "port 80 it shouldn't be my problem if somebody else wants to and so this is evident in the design of kubernetes in a",
    "start": "425880",
    "end": "432270"
  },
  {
    "text": "bunch of places but probably nowhere more than networking so we started with the kubernetes model let's not share",
    "start": "432270",
    "end": "438840"
  },
  {
    "start": "435000",
    "end": "511000"
  },
  {
    "text": "ports let's start with this assumption we're not gonna share forts we're gonna give every pod or every container an IP",
    "start": "438840",
    "end": "443880"
  },
  {
    "text": "address and not just an IP address but a real IP address the IP address that is reachable from other pods in the same",
    "start": "443880",
    "end": "451080"
  },
  {
    "text": "cluster so we don't have to fiddle with ports or mappings or - - port flags we",
    "start": "451080",
    "end": "456990"
  },
  {
    "text": "actually proposed this idea for Borg in about 2011 and given the scale of Borg",
    "start": "456990",
    "end": "462180"
  },
  {
    "text": "and the equipment that we have running our network we're told you're crazy get out of here that's not feasible so we",
    "start": "462180",
    "end": "469710"
  },
  {
    "text": "put it on the shelf and we let it cook for a while and when kubernetes came out I pulled this idea back off the shelf",
    "start": "469710",
    "end": "474930"
  },
  {
    "text": "and said what if we can do this so we had to go take a look at what was available in the clouds what the cloud",
    "start": "474930",
    "end": "480300"
  },
  {
    "text": "providers could actually offer here and frankly it was pretty limited cloud networking is circa 2013 was not very",
    "start": "480300",
    "end": "487710"
  },
  {
    "text": "friendly not very programmable but we took another principle here is",
    "start": "487710",
    "end": "493110"
  },
  {
    "text": "kubernetes willing to be limited by what we can achieve today no we decided early",
    "start": "493110",
    "end": "499200"
  },
  {
    "text": "on that we were not going to be limited by that we were gonna take some strategic bets on future technology so we bet on Sdn and programmable networks",
    "start": "499200",
    "end": "506550"
  },
  {
    "text": "and we said we're going to figure out the UX that we want our developers to have so we took up this model everything",
    "start": "506550",
    "end": "513719"
  },
  {
    "start": "511000",
    "end": "521000"
  },
  {
    "text": "is direct flat network no need for NAT no need to manage port collisions it works the way you would expect it to",
    "start": "513720",
    "end": "519180"
  },
  {
    "text": "work that was the idea now can I actually make this work right so we",
    "start": "519180",
    "end": "525570"
  },
  {
    "start": "521000",
    "end": "528000"
  },
  {
    "text": "started to do some prototyping some experimenting on Google Cloud we did this proof-of-concept",
    "start": "525570",
    "end": "531260"
  },
  {
    "start": "528000",
    "end": "561000"
  },
  {
    "text": "out to our networking team a wonderful GCP networking team and they said who are you go away we were nobody",
    "start": "531260",
    "end": "539240"
  },
  {
    "text": "kubernetes was not a thing yet and so we didn't have any leverage we didn't have any ability to ask for changes to the",
    "start": "539240",
    "end": "544940"
  },
  {
    "text": "networking stack they said this is what we have live with it okay so we we did we took a step back I said",
    "start": "544940",
    "end": "552740"
  },
  {
    "text": "the networking api's are very VM centric not surprising given that it was an infrastructure platform what we were",
    "start": "552740",
    "end": "558800"
  },
  {
    "text": "asking for is not part of the design space so what are we going to do with that well we found this little crack it's",
    "start": "558800",
    "end": "565970"
  },
  {
    "start": "561000",
    "end": "655000"
  },
  {
    "text": "called a routes API in Google cloud and it led us coax the network into carrying",
    "start": "565970",
    "end": "572360"
  },
  {
    "text": "IP addresses to a VM that weren't specifically assigned to that VM in",
    "start": "572360",
    "end": "578030"
  },
  {
    "text": "order to do that we had to disable things like IP spoofing protections which is you know probably not a great idea and we had to go out and configure",
    "start": "578030",
    "end": "585740"
  },
  {
    "text": "we kind of hear one static route per kubernetes node we had to do IP address management this really did not scale",
    "start": "585740",
    "end": "592550"
  },
  {
    "text": "well at the initial limit that we ran into was about 50 nodes we can only get",
    "start": "592550",
    "end": "598460"
  },
  {
    "text": "to about 50 all right so the fact that",
    "start": "598460",
    "end": "604670"
  },
  {
    "text": "this world basically was encouraging in the RUS to press this issue forward and",
    "start": "604670",
    "end": "611770"
  },
  {
    "text": "the UX was really good the IP / part actually worked and not only did work it",
    "start": "611770",
    "end": "617510"
  },
  {
    "text": "looks simple and all the things look buttoned up but the 50 routes were not going to scale that well we knew it",
    "start": "617510",
    "end": "623840"
  },
  {
    "text": "somehow last long so there was a lot of persuasion which hippie networking team and the route limits were posted 200 and",
    "start": "623840",
    "end": "631480"
  },
  {
    "text": "that is kubernetes 1.0 which was shipped now a question does anybody know how",
    "start": "631480",
    "end": "637490"
  },
  {
    "text": "many nodes kubernetes 1.2 support it can I give the answer 100 so fact basically",
    "start": "637490",
    "end": "647630"
  },
  {
    "text": "is that here is where the coevolution of kubernetes networking and cheese peanut working starts and in the next few",
    "start": "647630",
    "end": "655190"
  },
  {
    "text": "slides in the next few minutes we will go over how this evolution has gone",
    "start": "655190",
    "end": "660260"
  },
  {
    "text": "through in terms of cluster networking in terms of services and the Lord balancers they had followed balancers",
    "start": "660260",
    "end": "666510"
  },
  {
    "text": "and the l7 or balancers beginning with the cluster networking the cluster and",
    "start": "666510",
    "end": "673050"
  },
  {
    "text": "working work based on model and it worked very well and this drove the GCP",
    "start": "673050",
    "end": "678690"
  },
  {
    "text": "networking team to scale this scale the routes even more we went from 50 to 5,000 in less than",
    "start": "678690",
    "end": "685770"
  },
  {
    "text": "two years and that drove major architectural changes within in within",
    "start": "685770",
    "end": "691320"
  },
  {
    "text": "the g-sync networking team and it worked well but there's a catch and what's the",
    "start": "691320",
    "end": "697770"
  },
  {
    "start": "696000",
    "end": "747000"
  },
  {
    "text": "catch here there are few issues that we just talked about like IP spoofing disable we don't want that but then",
    "start": "697770",
    "end": "703560"
  },
  {
    "text": "there was there was something more than that which is the IP for the pod ranges",
    "start": "703560",
    "end": "708720"
  },
  {
    "text": "were not visible on the Sdn of network fabric so she's the Google clouds Sdn",
    "start": "708720",
    "end": "714690"
  },
  {
    "text": "had no way to reason what are the part I piece now if I want to do deeper integration with load balancer or",
    "start": "714690",
    "end": "720779"
  },
  {
    "text": "telemetry I have to infer from routes which is not really the right way of going forward it's not going to work",
    "start": "720779",
    "end": "726350"
  },
  {
    "text": "also since this ranges were not this libanon PSTN you could imagine there",
    "start": "726350",
    "end": "732000"
  },
  {
    "text": "could be future use of the same range and that causes the collision and last but not the least they even if nothing",
    "start": "732000",
    "end": "739140"
  },
  {
    "text": "of this was a problem the fact that could be overlapping ranges causes confusion and it was hard to",
    "start": "739140",
    "end": "744959"
  },
  {
    "text": "debug all in all we knew we can do better so why we were scaling the routes",
    "start": "744959",
    "end": "752490"
  },
  {
    "text": "there was another angle which was going on in terms of how do we really get a",
    "start": "752490",
    "end": "758040"
  },
  {
    "text": "better integration going in terms of different TCP networking products and kubernetes and the second which you will",
    "start": "758040",
    "end": "766350"
  },
  {
    "text": "see a pattern that will reoccur how do we make it easy to reason intuitive and",
    "start": "766350",
    "end": "771540"
  },
  {
    "text": "easy to debug so the alias IPS actually were designed to begin some to address some of these",
    "start": "771540",
    "end": "778230"
  },
  {
    "text": "issues deeper integration and easy to debug and easy to maintain and intuitive",
    "start": "778230",
    "end": "784190"
  },
  {
    "start": "784000",
    "end": "798000"
  },
  {
    "text": "okay so here is a GK cluster in this illustration there are two nodes",
    "start": "784190",
    "end": "791190"
  },
  {
    "text": "Nords get their range from VPC just like before even they're out more it caught the same thing and then now the next",
    "start": "791190",
    "end": "800279"
  },
  {
    "start": "798000",
    "end": "812000"
  },
  {
    "text": "thing which is the pod Rangers the pod Rangers and a service ranger is now I allocated from VP Singh so ABC knows",
    "start": "800279",
    "end": "807329"
  },
  {
    "text": "that this is going to be a special use of this rangers by GK when the VM gets",
    "start": "807329",
    "end": "812939"
  },
  {
    "start": "812000",
    "end": "839000"
  },
  {
    "text": "created at that point the per node pod range is also allocated in form of alias",
    "start": "812939",
    "end": "820230"
  },
  {
    "text": "IPs by the SDM so now the network fabric actually understands the real IPS for",
    "start": "820230",
    "end": "826230"
  },
  {
    "text": "the part and that is actually game-changing because up until now this",
    "start": "826230",
    "end": "831300"
  },
  {
    "text": "TN had no way than if a fabric had no way to know the real power eyepiece now it knows another the simplicity of this",
    "start": "831300",
    "end": "841079"
  },
  {
    "text": "is that perd nord i Pam went to Sdn so earlier if the node had to node was",
    "start": "841079",
    "end": "848550"
  },
  {
    "text": "started the kubernetes had to stop is scheduling get the per node range give",
    "start": "848550",
    "end": "853980"
  },
  {
    "text": "the note that range then travel would be programmed after which the scheduling would be unblocked all of this is gone",
    "start": "853980",
    "end": "860579"
  },
  {
    "text": "and now they are exactly the same as any other instance groups in cloud networking and the purport the purple",
    "start": "860579",
    "end": "870240"
  },
  {
    "text": "dye Pam is still within the node just like in the kubernetes using CNI this",
    "start": "870240",
    "end": "876720"
  },
  {
    "text": "solves the all the earth problems that we talked about future IP uses is no",
    "start": "876720",
    "end": "881759"
  },
  {
    "text": "problem as there knows about it routes are not there to reason with and things just work this is where we basically",
    "start": "881759",
    "end": "889730"
  },
  {
    "text": "integrated the container as a first-class end point in the network",
    "start": "889730",
    "end": "894779"
  },
  {
    "text": "fabric of a physically",
    "start": "894779",
    "end": "898579"
  },
  {
    "start": "902000",
    "end": "956000"
  },
  {
    "text": "so we've now got pod networking and pod networking is now deeply integrated with",
    "start": "903470",
    "end": "909690"
  },
  {
    "text": "the rest of the GCP network which is fantastic pods are not the only networking construct that we need to deal with kubernetes services is a very",
    "start": "909690",
    "end": "917399"
  },
  {
    "text": "fundamental part of the surface area and part of the model I want to take a moment to look at the design of services",
    "start": "917399",
    "end": "923459"
  },
  {
    "text": "so services specifically service type equals load balancer was designed from",
    "start": "923459",
    "end": "929160"
  },
  {
    "text": "the beginning to be centered on clouds to make sure that we understood and adapted to clouds before I get too deep",
    "start": "929160",
    "end": "936480"
  },
  {
    "text": "in that I won't take a step back and highlight a key difference that sort of drove some of the design there's two",
    "start": "936480",
    "end": "941790"
  },
  {
    "text": "basic types of load balancers that you'll find in the various cloud products there's virtual IP VIP like",
    "start": "941790",
    "end": "948240"
  },
  {
    "text": "proxy VIP like load balancers and proxy like load balancers and I'll talk a little bit about the difference between",
    "start": "948240",
    "end": "953910"
  },
  {
    "text": "the two and and hopefully you'll see why it's important so a VIP like load",
    "start": "953910",
    "end": "959459"
  },
  {
    "start": "956000",
    "end": "1077000"
  },
  {
    "text": "balancer is always going to deliver packets to the end machine as if they came directly to the machine and not",
    "start": "959459",
    "end": "965880"
  },
  {
    "text": "through the load balancer the packet contains the destination IP of the VIP and the source IP of the original client",
    "start": "965880",
    "end": "972779"
  },
  {
    "text": "that the load bouncer has effectively transparent and the assumption here is that the VM or the machine itself can",
    "start": "972779",
    "end": "978930"
  },
  {
    "text": "respond directly to that client IP and you don't need to go back through the load bouncer I call this direct server return or direct server response and",
    "start": "978930",
    "end": "985680"
  },
  {
    "text": "it's a very powerful system now when you look at this is how Google clouds",
    "start": "985680",
    "end": "991470"
  },
  {
    "text": "Network load balancer is implemented when you look at this the load balancer again it only understands VMs just like",
    "start": "991470",
    "end": "998550"
  },
  {
    "text": "the network in the Sdn only understood vm's the load balancer only understands VMs so we have to convert between a VM",
    "start": "998550",
    "end": "1006140"
  },
  {
    "text": "zip and a pod endpoint by running it through IP tables so we have a set of IP tables rules anybody who's dealt with",
    "start": "1006140",
    "end": "1012500"
  },
  {
    "text": "kubernetes long enough has bumped their head against IP tables I'm sure and we use those IP tables to translate from a",
    "start": "1012500",
    "end": "1019550"
  },
  {
    "text": "virtual IP into a particular service and then into a particular pod a nice thing is it's implanted with you basically the",
    "start": "1019550",
    "end": "1025760"
  },
  {
    "text": "same set of rules that you use to implement the in cluster Service IPS so it wasn't particularly onerous to",
    "start": "1025760",
    "end": "1032270"
  },
  {
    "text": "implement this but this is how the load balancers work",
    "start": "1032270",
    "end": "1037798"
  },
  {
    "text": "so now we talk to our friends at other cloud and other clouds don't have a fit",
    "start": "1037799",
    "end": "1045040"
  },
  {
    "text": "like load bounce or didn't at the time anyway they had a proxy like load balancer and a proxy like load balancer",
    "start": "1045040",
    "end": "1051250"
  },
  {
    "text": "is very different it terminates that TCP connection and it opens a new connection on the back so what you see at the end",
    "start": "1051250",
    "end": "1056830"
  },
  {
    "text": "is a packet that's from the load balancer to the the VM right so I can",
    "start": "1056830",
    "end": "1064330"
  },
  {
    "text": "now deliver the packet to the VM but I have no idea which service you are actually trying to target the the VIP is",
    "start": "1064330",
    "end": "1072130"
  },
  {
    "text": "gone so we enter the Noda port idea node",
    "start": "1072130",
    "end": "1078190"
  },
  {
    "start": "1077000",
    "end": "1109000"
  },
  {
    "text": "port allocate support from our reserve pool in kubernetes and opens that port on all the machines in your cluster all",
    "start": "1078190",
    "end": "1085030"
  },
  {
    "text": "of them and whenever you access that port on any machine it's going to forward it into your service and now you",
    "start": "1085030",
    "end": "1090549"
  },
  {
    "text": "can tell based on that port number that you're destined for a specific service and this is a simple simple primitive",
    "start": "1090549",
    "end": "1097390"
  },
  {
    "text": "which we can then use then we can use to to build these proxy like load balancers",
    "start": "1097390",
    "end": "1103000"
  },
  {
    "text": "we can now target the VMS on a specific port and now we have enough information to figure out which service you are",
    "start": "1103000",
    "end": "1108429"
  },
  {
    "text": "talking to now you can sort of see the difference between these two models right they require very different IP",
    "start": "1108429",
    "end": "1115270"
  },
  {
    "start": "1109000",
    "end": "1138000"
  },
  {
    "text": "tables rules are very different on node processing to set them up fit like load balancers there the handles the same as",
    "start": "1115270",
    "end": "1121000"
  },
  {
    "text": "in cluster VIPs proxy like load balancers handle by node ports I don't want users to experience that",
    "start": "1121000",
    "end": "1127720"
  },
  {
    "text": "that is not the UX that I wanted I if you have to write different yamo for different clouds I have failed so how do",
    "start": "1127720",
    "end": "1136990"
  },
  {
    "text": "we get past that so the design of the communities service model is we call it",
    "start": "1136990",
    "end": "1142870"
  },
  {
    "start": "1138000",
    "end": "1209000"
  },
  {
    "text": "concentric when you allocate a service a plain old service you're going to get a cluster IP if you want a node port",
    "start": "1142870",
    "end": "1149740"
  },
  {
    "text": "allocated to your service you're going to get a cluster IP and a node port and if you want a load balancer you're going",
    "start": "1149740",
    "end": "1154780"
  },
  {
    "text": "to get a cluster IP and a node port and a and s Aria and a load balancer what",
    "start": "1154780",
    "end": "1160750"
  },
  {
    "text": "this lets us do is to translate your llamo in to a consistent form so now if you're",
    "start": "1160750",
    "end": "1168190"
  },
  {
    "text": "using a VIP if you're using a VP load balancer I can tell from the status load",
    "start": "1168190",
    "end": "1174190"
  },
  {
    "text": "balancer ingress IP I can inspect any packet until you're going for the particular service in this case",
    "start": "1174190",
    "end": "1179850"
  },
  {
    "text": "front-end I can also tell if I'm receiving traffic on a local IP address",
    "start": "1179850",
    "end": "1184990"
  },
  {
    "text": "and it's aimed at port 306 69 which is allocated by the server so you don't",
    "start": "1184990",
    "end": "1191289"
  },
  {
    "text": "have to step on each other's toes again I can also tell that you're going to the front end service so as an average user",
    "start": "1191289",
    "end": "1197049"
  },
  {
    "text": "I can write that really simple amyl and I don't need to worry about the difference between the different cloud",
    "start": "1197049",
    "end": "1202600"
  },
  {
    "text": "providers and different environments I'm going to get something that looks like this after all the defaulting has been applied and it's gonna work on the",
    "start": "1202600",
    "end": "1208509"
  },
  {
    "text": "different providers all right so we just went over the services and how services",
    "start": "1208509",
    "end": "1215470"
  },
  {
    "start": "1209000",
    "end": "1256000"
  },
  {
    "text": "abstraction evolved to meet the load balancers now we'll go over the l7 load",
    "start": "1215470",
    "end": "1221019"
  },
  {
    "text": "balancers the kubernetes introduced the ingress resource to solve the Lord Balon",
    "start": "1221019",
    "end": "1227200"
  },
  {
    "text": "else to actually support l7 load balancers and in those days in the early days of companies the most of the road",
    "start": "1227200",
    "end": "1234820"
  },
  {
    "text": "is targeted virtual machines or bare metal but not the containers and I would say most of the road bands even today",
    "start": "1234820",
    "end": "1241509"
  },
  {
    "text": "are proxy are based so if you were to then get back or learn from the previous",
    "start": "1241509",
    "end": "1246909"
  },
  {
    "text": "few minutes where we talked about proxy targeting a cluster use node port so",
    "start": "1246909",
    "end": "1253509"
  },
  {
    "text": "north port was a good starting point here and let's start with that let's",
    "start": "1253509",
    "end": "1260139"
  },
  {
    "start": "1256000",
    "end": "1320000"
  },
  {
    "text": "double click on ingress so in the interest resource as we can see it's pretty intuitive it actually gives you a",
    "start": "1260139",
    "end": "1265899"
  },
  {
    "text": "seven functionality as in description of s1 functionality TLS termination URL path match and then forward to service",
    "start": "1265899",
    "end": "1273240"
  },
  {
    "text": "in when the ingress API was introduced I believe almost immediately there were",
    "start": "1273240",
    "end": "1278590"
  },
  {
    "text": "many implementation that had shown up and it's pretty much in the Covenant is there it's just an API and",
    "start": "1278590",
    "end": "1283690"
  },
  {
    "text": "implementations are different for each proxies in Google's kubernetes engine be",
    "start": "1283690",
    "end": "1289149"
  },
  {
    "text": "back hit by GCL B which is cloud load balancer and the way it works is",
    "start": "1289149",
    "end": "1294650"
  },
  {
    "text": "that conceptually the traffic and hates the ingress layer which is not balancer once it hits the road balancer then is",
    "start": "1294650",
    "end": "1302660"
  },
  {
    "text": "unfortunately kicks in after that services under defied that is the community service to send the traffic",
    "start": "1302660",
    "end": "1308110"
  },
  {
    "text": "which is type Northport if you actually tie back in to previous discussion and then the surface type Northport on the",
    "start": "1308110",
    "end": "1314960"
  },
  {
    "text": "node will forward it to the right part things look pretty simple and intuitive however when you start looking at the",
    "start": "1314960",
    "end": "1322460"
  },
  {
    "start": "1320000",
    "end": "1431000"
  },
  {
    "text": "data path underneath it's pretty complex the most of the implementation on the",
    "start": "1322460",
    "end": "1328580"
  },
  {
    "text": "node for for all this reports and all are is the IP table based or they PVS we",
    "start": "1328580",
    "end": "1335120"
  },
  {
    "text": "have it based on IP tables we had it based on IP tables and we still have it for this mode in this case you can see",
    "start": "1335120",
    "end": "1341720"
  },
  {
    "text": "that the traffic which is a blue dot it goes from decline to load balancer",
    "start": "1341720",
    "end": "1347780"
  },
  {
    "text": "from load balancer to the one of the nodes and antinodes the IP table based random lookup happens one of the pod",
    "start": "1347780",
    "end": "1354950"
  },
  {
    "text": "gets picked up which could be any of the node in the cluster and then traffic hits support so in order to make this",
    "start": "1354950",
    "end": "1362900"
  },
  {
    "text": "happen the wait wait it is done is gke when it creates the when ingress resources",
    "start": "1362900",
    "end": "1368270"
  },
  {
    "text": "created it actually creates an instance of GCL B which is Google cloud load balancer and takes all the instances all",
    "start": "1368270",
    "end": "1375470"
  },
  {
    "text": "the nodes in the cluster puts them into the instance group behind that load balancer it is how conceptually it gets",
    "start": "1375470",
    "end": "1382130"
  },
  {
    "text": "done as you can see here that you could argue the balances balancing is good",
    "start": "1382130",
    "end": "1387380"
  },
  {
    "text": "because what if the board distribution was asymmetrical some nodes have more",
    "start": "1387380",
    "end": "1392510"
  },
  {
    "text": "pod support some nodes a less so you kind of Chiva better or balancing by having this IP tables spraying the",
    "start": "1392510",
    "end": "1399820"
  },
  {
    "text": "traffic but then what happened it came at a cost the cost is performance as you",
    "start": "1399820",
    "end": "1406880"
  },
  {
    "text": "can see here there's a double hop you can assume latency you can expect latency to go up there is a network hop",
    "start": "1406880",
    "end": "1412490"
  },
  {
    "text": "that comes in between and it's again going back to the theme easy to debug",
    "start": "1412490",
    "end": "1418970"
  },
  {
    "text": "and easy to understand eventually for the customers and then the last but not the least some of the elbe features are",
    "start": "1418970",
    "end": "1425390"
  },
  {
    "text": "just incompatible with this mode double-click on one of this feature which is not compatible example cookie",
    "start": "1425390",
    "end": "1433560"
  },
  {
    "start": "1431000",
    "end": "1456000"
  },
  {
    "text": "base definitely load balancer GCL me supports cookie based or cookie based",
    "start": "1433560",
    "end": "1439020"
  },
  {
    "text": "affinity that's a very powerful feature for you developers and users who would",
    "start": "1439020",
    "end": "1444480"
  },
  {
    "text": "like to maximize the caching in the application or they want to make sure",
    "start": "1444480",
    "end": "1449490"
  },
  {
    "text": "that for the stateful application client connection end up on the same back end to make that happen",
    "start": "1449490",
    "end": "1455730"
  },
  {
    "text": "let's see how it how the packet flow goes through the client sends a request",
    "start": "1455730",
    "end": "1461400"
  },
  {
    "start": "1456000",
    "end": "1508000"
  },
  {
    "text": "to lb lb does his load balancing sensor to a node and then iptables on the node",
    "start": "1461400",
    "end": "1467880"
  },
  {
    "text": "wooden dummy pick one part you standard response back lb is going to insert the",
    "start": "1467880",
    "end": "1474360"
  },
  {
    "text": "cookie in the response which is going to mention we just gonna specify the node",
    "start": "1474360",
    "end": "1479660"
  },
  {
    "text": "next connection when a client which is back to the lb that cookie is there lb looks up the cookie and says oh this is",
    "start": "1479660",
    "end": "1486630"
  },
  {
    "text": "for node a and the traffic then the request is forwarded to note a the IP",
    "start": "1486630",
    "end": "1493560"
  },
  {
    "text": "tables or node a is not cookie aware so it does a random look up again and in",
    "start": "1493560",
    "end": "1498570"
  },
  {
    "text": "the random look up what it comes is a pod or node a so that feature is practically broken at this point right",
    "start": "1498570",
    "end": "1505620"
  },
  {
    "text": "so while we were going through the alias IP based container becoming the first",
    "start": "1505620",
    "end": "1512610"
  },
  {
    "start": "1508000",
    "end": "1526000"
  },
  {
    "text": "class and point on Sdn there was also a second heart which was how do we really make this the first class endpoint on",
    "start": "1512610",
    "end": "1519900"
  },
  {
    "text": "the other products to like load balancer why can't me load balance to the realities next were introduced exactly",
    "start": "1519900",
    "end": "1527730"
  },
  {
    "start": "1526000",
    "end": "1584000"
  },
  {
    "text": "for this next is network and one groups basically it's a grouping of the parts",
    "start": "1527730",
    "end": "1532920"
  },
  {
    "text": "that can be then inserted into different products for example in this case it's or balancer actually this the",
    "start": "1532920",
    "end": "1539670"
  },
  {
    "text": "illustration is so boring they don't even talk about it they the Lord balancer Center traffic and it goes",
    "start": "1539670",
    "end": "1545700"
  },
  {
    "text": "directly to the pods if I have to make it interesting I can say now see there is no that there is no confusion there",
    "start": "1545700",
    "end": "1553460"
  },
  {
    "text": "no debugging hassles and all the features like cookie-based affinity work which is one thing which I",
    "start": "1553460",
    "end": "1560929"
  },
  {
    "text": "didn't mention earlier is that cloud would ban so in in the previous pattern",
    "start": "1560929",
    "end": "1566419"
  },
  {
    "text": "was not able to raise reason the load very well because we're sending to the",
    "start": "1566419",
    "end": "1571820"
  },
  {
    "text": "nodes and the nodes would do something else under on the second half so it was not very accurate in load balancing now",
    "start": "1571820",
    "end": "1578570"
  },
  {
    "text": "the road balancing is also accurate so traffic shipping is right and all the features work see in the summary in what",
    "start": "1578570",
    "end": "1587120"
  },
  {
    "start": "1584000",
    "end": "1602000"
  },
  {
    "text": "we are seeing from the early kubernetes to now TCP networking evolved it's a",
    "start": "1587120",
    "end": "1592549"
  },
  {
    "text": "it's support to make containers a first-class endpoint on the Sdn and also",
    "start": "1592549",
    "end": "1597740"
  },
  {
    "text": "on many other products like telemetry and load balancers so that sounds all",
    "start": "1597740",
    "end": "1606740"
  },
  {
    "start": "1602000",
    "end": "1653000"
  },
  {
    "text": "amazing right this is this is a wonderful improvement and for all of us sort of infrastructure nerds it's a",
    "start": "1606740",
    "end": "1612559"
  },
  {
    "text": "wonderful thing friend users it's a wonderful thing because now your features just work but of course it",
    "start": "1612559",
    "end": "1619039"
  },
  {
    "text": "doesn't actually just work it turns out that programming external load balancers",
    "start": "1619039",
    "end": "1624380"
  },
  {
    "text": "is a little bit a lot slower than programming iptables",
    "start": "1624380",
    "end": "1629450"
  },
  {
    "text": "what I can do in sub one second and IP tables might take ten or fifteen seconds to program an external load balancer we",
    "start": "1629450",
    "end": "1637100"
  },
  {
    "text": "didn't really think of that when we were pushing pods and doing things in this super fast in cluster mode we need some",
    "start": "1637100",
    "end": "1645049"
  },
  {
    "text": "way for the load balancer to check in with kubernetes so we're talking about the coevolution here right that means",
    "start": "1645049",
    "end": "1651110"
  },
  {
    "text": "both of us are going to evolve so what do we need to do to make kubernetes",
    "start": "1651110",
    "end": "1656570"
  },
  {
    "text": "aware of these load balancers so let's look at a real quick example of just sort of what could go wrong imagine now",
    "start": "1656570",
    "end": "1663169"
  },
  {
    "text": "I've got my my read deployment up and I've got all my load balancer point into my read deployment pods",
    "start": "1663169",
    "end": "1668179"
  },
  {
    "text": "and everything's going great and I decide I'm gonna do a rolling update of my deployment and I bring up a new pod",
    "start": "1668179",
    "end": "1675080"
  },
  {
    "text": "right so we've got probes on our pods as I'm sure all of you well behaved kubernetes users are using the pod is",
    "start": "1675080",
    "end": "1682039"
  },
  {
    "text": "alive and the pod is in fact ready it's ready to receive traffic right what do we know about the infrastructure",
    "start": "1682039",
    "end": "1688440"
  },
  {
    "text": "at this point what do we know about the load balancer we know nothing so if I'm a poorly",
    "start": "1688440",
    "end": "1693929"
  },
  {
    "text": "behaved application controller what I'm gonna do is delete the old pod and I'm gonna start the process again and I'm",
    "start": "1693929",
    "end": "1699690"
  },
  {
    "text": "gonna do the next pod and then I'm gonna do the next pod all of those read load balancer links are gonna go down before",
    "start": "1699690",
    "end": "1705570"
  },
  {
    "text": "any of the green ones are going to come up you've just experienced the total outage of your application by pushing a",
    "start": "1705570",
    "end": "1712169"
  },
  {
    "text": "rolling update this is exactly what kubernetes is supposed to not do so we",
    "start": "1712169",
    "end": "1720389"
  },
  {
    "text": "have now a feature in kubernetes that we call readiness gates or pod ready plus plus it allows arbitrary infrastructure",
    "start": "1720389",
    "end": "1727649"
  },
  {
    "text": "to extend the definition of readiness so that you can feed back into these",
    "start": "1727649",
    "end": "1733919"
  },
  {
    "text": "application controllers the workload controllers like deployment and tell them hey hold on a second let me wait",
    "start": "1733919",
    "end": "1739859"
  },
  {
    "text": "for the load balancer to check in and I'm not gonna get into the details of the API right now but if anybody wants",
    "start": "1739859",
    "end": "1745259"
  },
  {
    "text": "to talk about it we'd be happy to talk about the details and the whys and wherefores but now I can actually say",
    "start": "1745259",
    "end": "1751889"
  },
  {
    "text": "hey this infrastructure is not ready wait and now all of my work load controllers without actually being aware of the fact that there's a load balancer",
    "start": "1751889",
    "end": "1757769"
  },
  {
    "text": "now right I've totally decoupled this they are not-- they know that they have to wait until these load balancers are",
    "start": "1757769",
    "end": "1764159"
  },
  {
    "text": "up to date and it's funny we put this in front of our network sig and we said we've got this problem we need to",
    "start": "1764159",
    "end": "1769259"
  },
  {
    "text": "introduce this feature and everybody in this segment oh yeah we know that problem why did nobody yell at me before",
    "start": "1769259",
    "end": "1775190"
  },
  {
    "text": "yeah please people yell at me so now you",
    "start": "1775190",
    "end": "1783719"
  },
  {
    "text": "know we've got this and we've got the synchronization point between the infrastructure and the pods but it's all",
    "start": "1783719",
    "end": "1789959"
  },
  {
    "text": "abstract which I'm super happy about all right so we went or now have TCP",
    "start": "1789959",
    "end": "1801509"
  },
  {
    "start": "1795000",
    "end": "1836000"
  },
  {
    "text": "networking evolved to meet some of many of the abstractions and then have kubernetes abstraction has evolved to",
    "start": "1801509",
    "end": "1808440"
  },
  {
    "text": "meet the cloud providers let's talk about one of the very key problem how do",
    "start": "1808440",
    "end": "1814229"
  },
  {
    "text": "we extend kubernetes resources to express something that is very cloud",
    "start": "1814229",
    "end": "1820649"
  },
  {
    "text": "provider centric so most of the load balancers they have features right now",
    "start": "1820649",
    "end": "1826529"
  },
  {
    "text": "which are above and beyond what kubernetes synchronous can specify and as you go back to principle of",
    "start": "1826529",
    "end": "1832589"
  },
  {
    "text": "portability the main thing is if most implementation cannot support the or most implementation should be able to",
    "start": "1832589",
    "end": "1838679"
  },
  {
    "text": "support the most features so with that we were struggling in the beginning on how do we really specify the features of",
    "start": "1838679",
    "end": "1845700"
  },
  {
    "text": "GCL B which is I the identity of a proxy CDN for caching security and earlier we",
    "start": "1845700",
    "end": "1853649"
  },
  {
    "text": "began with the notations it very soon became bulky and hard to understand going back to the theme how do we make",
    "start": "1853649",
    "end": "1860279"
  },
  {
    "text": "it easy to understand and easy to manage Cid came to the rescue CR ds1 introduced",
    "start": "1860279",
    "end": "1865440"
  },
  {
    "text": "in 1.7 and that was a great way to extend an API the users can now add a",
    "start": "1865440",
    "end": "1871139"
  },
  {
    "text": "custom object and make it behave like a native resource and that's exactly what we did we introduced back in conflict as",
    "start": "1871139",
    "end": "1877679"
  },
  {
    "text": "a CR D the services were now point to back-end conflict in the backend config",
    "start": "1877679",
    "end": "1883799"
  },
  {
    "start": "1878000",
    "end": "1916000"
  },
  {
    "text": "then you use the customers can go ahead and expand extend and Express the features of GCL B which were poor",
    "start": "1883799",
    "end": "1889950"
  },
  {
    "text": "services and now they can be referenced by egress we have a load balancer features now expressed in in the CR D",
    "start": "1889950",
    "end": "1898799"
  },
  {
    "text": "without affecting the portability of the ingress so that is one of the key theme how do we really extend without",
    "start": "1898799",
    "end": "1905579"
  },
  {
    "text": "affecting the portability how can customer take the same yeah more poor to put it somewhere else and things should just work so we achieved it Society has",
    "start": "1905579",
    "end": "1913229"
  },
  {
    "text": "been great in that phase all right so",
    "start": "1913229",
    "end": "1918539"
  },
  {
    "start": "1916000",
    "end": "1937000"
  },
  {
    "text": "now we went over abstractions on both sides but there were few things that we",
    "start": "1918539",
    "end": "1923669"
  },
  {
    "text": "really found it difficult to overcome or maybe fail there may be something done better here so let's go over some of the",
    "start": "1923669",
    "end": "1931109"
  },
  {
    "text": "abstractions where we found either they were too flexible or not flexible enough",
    "start": "1931109",
    "end": "1936589"
  },
  {
    "text": "in terms of dope flexible the services has extremely powerful features of poetry",
    "start": "1936589",
    "end": "1942730"
  },
  {
    "start": "1937000",
    "end": "2003000"
  },
  {
    "text": "mapping you can have target port and the name port and then the name port would then allow the ports to have their own",
    "start": "1942730",
    "end": "1948670"
  },
  {
    "text": "ports which would now give you enough lot of power to change the ports and stuff with each Rev but then that really",
    "start": "1948670",
    "end": "1956140"
  },
  {
    "text": "puts it odd with some of the network fabrics see many of the load balancers they would use TSR which is direct",
    "start": "1956140",
    "end": "1963160"
  },
  {
    "text": "server server return mcpadden this pattern is specifically made so that the",
    "start": "1963160",
    "end": "1968950"
  },
  {
    "text": "high performance application sticks they go through lease latency the response",
    "start": "1968950",
    "end": "1974110"
  },
  {
    "text": "goes direct to the server well the request is going through the proxy so there is no space for port",
    "start": "1974110",
    "end": "1979960"
  },
  {
    "text": "remapping in that with port remapping and the dsr there is incompatibility vile this port remapping wood is a",
    "start": "1979960",
    "end": "1987580"
  },
  {
    "text": "powerful feature inspired from docker in the early days if we go back and apply the filter off of our portability",
    "start": "1987580",
    "end": "1994540"
  },
  {
    "text": "principle that most implementations should be able to support the features then this probably would not cut it in",
    "start": "1994540",
    "end": "2000930"
  },
  {
    "text": "the main construct now what are the things they were not flexible enough we",
    "start": "2000930",
    "end": "2006030"
  },
  {
    "start": "2003000",
    "end": "2029000"
  },
  {
    "text": "have seen use cases where customers wanted to want to forward traffic directly to the IP addresses or maybe",
    "start": "2006030",
    "end": "2012390"
  },
  {
    "text": "they have use cases where the rangers are wide and they want to express the range in their services or the range is",
    "start": "2012390",
    "end": "2018480"
  },
  {
    "text": "a dynamic web applications are great here as an example and service abstraction today doesn't have the",
    "start": "2018480",
    "end": "2024780"
  },
  {
    "text": "flexibility to describe this and then",
    "start": "2024780",
    "end": "2030720"
  },
  {
    "start": "2029000",
    "end": "2066000"
  },
  {
    "text": "service abstraction is very intuitive when you are working with cluster IP and",
    "start": "2030720",
    "end": "2035910"
  },
  {
    "text": "load balancer and moment you start going into okay how do I do the headless well you have cluster IPA type and then you",
    "start": "2035910",
    "end": "2042570"
  },
  {
    "text": "may cluster IP none things start becoming interesting when the same type starts behaving differently depending",
    "start": "2042570",
    "end": "2048570"
  },
  {
    "text": "upon how different things are there's a room for a refactoring and then we",
    "start": "2048570",
    "end": "2053580"
  },
  {
    "text": "should have done the elbe check in a bit back there'll be primitives are not that",
    "start": "2053580",
    "end": "2059010"
  },
  {
    "text": "defined right now and the quadratic 8 pod readiness who have been done long back so we're coming to the end of our",
    "start": "2059010",
    "end": "2070620"
  },
  {
    "start": "2066000",
    "end": "2131000"
  },
  {
    "text": "time here looking looking at what we've talked about here you can see sort of how",
    "start": "2070620",
    "end": "2077190"
  },
  {
    "text": "kubernetes has changed over time how the design of kubernetes was influenced by what the cloud providers could provide",
    "start": "2077190",
    "end": "2082648"
  },
  {
    "text": "but but maybe not so limited by that and how we at Google cloud have tried to",
    "start": "2082649",
    "end": "2089010"
  },
  {
    "text": "adapt to the things that kubernetes offers to people to give better experiences with kubernetes I hope this",
    "start": "2089010",
    "end": "2095040"
  },
  {
    "text": "gives you a little bit of insight into sort of where we were and where we are but if you take away just one thing",
    "start": "2095040",
    "end": "2101430"
  },
  {
    "text": "today I would like it to be this networking is hard it can be tricky but",
    "start": "2101430",
    "end": "2108030"
  },
  {
    "text": "it's getting better and all the problems that you had last year hopefully will",
    "start": "2108030",
    "end": "2113040"
  },
  {
    "text": "take away half of them this year and next year we'll get a half of what's left we have a huge community of people",
    "start": "2113040",
    "end": "2119940"
  },
  {
    "text": "in the open-source community and at Google who are working their butts off to make networking easier to use easier",
    "start": "2119940",
    "end": "2127230"
  },
  {
    "text": "to understand easier to reason about for communities users we have a cig network",
    "start": "2127230",
    "end": "2134690"
  },
  {
    "start": "2131000",
    "end": "2160000"
  },
  {
    "text": "introduction and deep dive tomorrow afternoon anybody who wants to learn a little bit more about how networking kubernetes works please come to the",
    "start": "2134690",
    "end": "2141240"
  },
  {
    "text": "intro and if you want to get into the thorns and brambles of what's actually happening in the coming year within the",
    "start": "2141240",
    "end": "2147510"
  },
  {
    "text": "network space come for the deep dive section we'll be happy to roll up our sleeves and get into it",
    "start": "2147510",
    "end": "2153030"
  },
  {
    "text": "elbow-deep thank you very much for your time today",
    "start": "2153030",
    "end": "2159440"
  },
  {
    "start": "2160000",
    "end": "2507000"
  },
  {
    "text": "we'll hang out here and do some questions if people want to do questions you can we have do we have time to do",
    "start": "2164130",
    "end": "2170950"
  },
  {
    "text": "questions on mics let's do a few and then we'll take it out in the hallway afterwards let me just pick up a couple",
    "start": "2170950",
    "end": "2176500"
  },
  {
    "text": "from the front and then we'll move back so let's start with you what about ipv6 come to the deep dive",
    "start": "2176500",
    "end": "2183340"
  },
  {
    "text": "tomorrow other questions in the in the",
    "start": "2183340",
    "end": "2188560"
  },
  {
    "text": "aisle I'm sorry I didn't hear em TLS TLS",
    "start": "2188560",
    "end": "2198850"
  },
  {
    "text": "ot LSE's is a feature of the ingress resource so you can ask ingress whatever",
    "start": "2198850",
    "end": "2204100"
  },
  {
    "text": "load-balanced are using for ingress to terminate TLS one of the we talked about here is backside TLS or backside",
    "start": "2204100",
    "end": "2211360"
  },
  {
    "text": "protocol we actually have a some annotation right now to do backside protocol that's the sort of thing that",
    "start": "2211360",
    "end": "2217030"
  },
  {
    "text": "should be moving into back-end config and do a you know CRD if it's cloud",
    "start": "2217030",
    "end": "2222250"
  },
  {
    "text": "specific that one in particular we're looking at maybe making a first-class feature of the API",
    "start": "2222250",
    "end": "2229290"
  },
  {
    "text": "I'm sorry yeah so there's a unfortunate",
    "start": "2236140",
    "end": "2242300"
  },
  {
    "text": "reality that the networking infrastructure from old gke clusters and the VPC native networking infrastructure",
    "start": "2242300",
    "end": "2248750"
  },
  {
    "text": "are very difficult to automatically migrate between and we've looked at how",
    "start": "2248750",
    "end": "2254840"
  },
  {
    "text": "to do the automatic migration it's incredibly thorny and dangerous without understanding what's going on in your",
    "start": "2254840",
    "end": "2260900"
  },
  {
    "text": "cluster so so far the best recommendation we have for you is learn how to bring up a new cluster and move",
    "start": "2260900",
    "end": "2267740"
  },
  {
    "text": "your workloads between them it's actually a good skill and you know if you get if you get too crystallized into",
    "start": "2267740",
    "end": "2274820"
  },
  {
    "text": "one cluster it becomes very difficult to recover from a disaster so it's probably actually a really good thing for every",
    "start": "2274820",
    "end": "2280160"
  },
  {
    "text": "organization to understand what happens if my cluster goes away how do I bring up a new one right so I don't have a",
    "start": "2280160",
    "end": "2286370"
  },
  {
    "text": "better answer than that also and we can talk offline too on this topic further that's poor via steam is doing that work",
    "start": "2286370",
    "end": "2293710"
  },
  {
    "text": "any other questions I went down here",
    "start": "2293710",
    "end": "2298510"
  },
  {
    "text": "so service mash is coo Brandis gonna deal with it I do not want kubernetes to",
    "start": "2306460",
    "end": "2312289"
  },
  {
    "text": "become a service mesh I want to understand what service meshes need so that we can they can use kubernetes",
    "start": "2312289",
    "end": "2318500"
  },
  {
    "text": "better so like I talked with the sto team fairly frequently and understanding what primitives they're building and why",
    "start": "2318500",
    "end": "2324020"
  },
  {
    "text": "it turns out they're working around things in kubernetes so we're gonna see if we can find some colors and four",
    "start": "2324020",
    "end": "2329510"
  },
  {
    "text": "primitives between sto and linker D and all the other options and service mesh so that we can make those things easier",
    "start": "2329510",
    "end": "2334970"
  },
  {
    "text": "to build those obviously been some service mesh announcements already this week we're talking all the time but I",
    "start": "2334970",
    "end": "2340339"
  },
  {
    "text": "want to draw the line at the single cluster for kubernetes and I don't want to build the mesh into kubernetes itself",
    "start": "2340339",
    "end": "2347588"
  },
  {
    "text": "so is there planning to release this stuff so if using kubernetes on GCP but",
    "start": "2354810",
    "end": "2360760"
  },
  {
    "text": "not gke right this already works you can you can use VPC native already if you if you",
    "start": "2360760",
    "end": "2367119"
  },
  {
    "text": "when you set up your BBC subnet you can turn on you can use IP aliases you can",
    "start": "2367119",
    "end": "2372610"
  },
  {
    "text": "create your instance group with the alias configuration it'll automatically there's nothing we're doing here that's private ap is or secret this is all",
    "start": "2372610",
    "end": "2379030"
  },
  {
    "text": "building on public GC PAP is that's a it's a core principle of the way we build kubernetes at GC p is we don't",
    "start": "2379030",
    "end": "2386230"
  },
  {
    "text": "have private API s-- maybe the documentation could be better yeah could",
    "start": "2386230",
    "end": "2392770"
  },
  {
    "text": "be okay that's it that's something we can look into valid point the open source kubernetes on GC on GC would actually work you can",
    "start": "2392770",
    "end": "2400270"
  },
  {
    "text": "it's actually part of I know it's not pleasant to say but if you look at cube up and you can dig through the shell",
    "start": "2400270",
    "end": "2406450"
  },
  {
    "text": "script there it'll actually turn on V PC native networks via flag to other",
    "start": "2406450",
    "end": "2412450"
  },
  {
    "text": "questions oh there's one",
    "start": "2412450",
    "end": "2417630"
  },
  {
    "text": "are there any CNI plug-ins for vanilla kubernetes doing the same I'm not sure",
    "start": "2419509",
    "end": "2425069"
  },
  {
    "text": "that C&I has the scope to handle this you need your load balancers to be aware of endpoints directly which not all load",
    "start": "2425069",
    "end": "2432660"
  },
  {
    "text": "balancer products are happy about for example we have to program the network end point group like during a rolling",
    "start": "2432660",
    "end": "2438599"
  },
  {
    "text": "update and for every new pod we go out and we change the network endpoint group and we resynchronize some load balancers",
    "start": "2438599",
    "end": "2444630"
  },
  {
    "text": "are fine with this and I know some folks like I think it was eBay has been doing this to the the neg sort of idea for",
    "start": "2444630",
    "end": "2452849"
  },
  {
    "text": "literally years like they never even did the VM thing their load balancer doesn't automatically there are others that are",
    "start": "2452849",
    "end": "2458640"
  },
  {
    "text": "not as flexible or happy about being programmed dynamically so it's it's more",
    "start": "2458640",
    "end": "2464130"
  },
  {
    "text": "than just what C and I can do and they do feature which is the container on the Sdn it's actually the function of Sdn",
    "start": "2464130",
    "end": "2471180"
  },
  {
    "text": "which is a function of fabrics a large part of cluster networking is taken into the platform within the network fabric",
    "start": "2471180",
    "end": "2476729"
  },
  {
    "text": "and not in the cni then I would love to see other platforms and other networking infrastructure sort of take on the same",
    "start": "2476729",
    "end": "2482609"
  },
  {
    "text": "ideas because I think it's a net good for users even though I love you all thinking that GCP is better than",
    "start": "2482609",
    "end": "2487949"
  },
  {
    "text": "everybody else this is a good thing for end-users like making the system better",
    "start": "2487949",
    "end": "2493229"
  },
  {
    "text": "and more robust overall and integrating more deeply with the with underlying systems so we'll take the rest out in",
    "start": "2493229",
    "end": "2500849"
  },
  {
    "text": "the hall of fame buddy wants to talk thank you [Applause]",
    "start": "2500849",
    "end": "2507179"
  }
]