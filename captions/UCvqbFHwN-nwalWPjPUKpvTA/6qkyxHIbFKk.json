[
  {
    "text": "hey everybody thank you for coming today the attire with my talk is stop hitting yourself I was just talking to a",
    "start": "1350",
    "end": "7930"
  },
  {
    "text": "gentleman in the back on my way in and you came here pretty much just for the title so I promised a few people I'll at",
    "start": "7930",
    "end": "13300"
  },
  {
    "text": "least hit myself at least once just to make sure everybody got what they came for so let's get started I've got a pretty",
    "start": "13300",
    "end": "19240"
  },
  {
    "text": "packed slide deck today okay two quotes to start off with computers do what you say so far should do what you mean I'm",
    "start": "19240",
    "end": "26769"
  },
  {
    "text": "not going to explain it too much now but keep this in mind as I continue on second one software is easy to use but",
    "start": "26769",
    "end": "34239"
  },
  {
    "text": "hard to run so this is me my name is Michael Russell",
    "start": "34239",
    "end": "40210"
  },
  {
    "text": "I'm an Australian living in the Netherlands a new tract I work at elastic as a software I'm a software",
    "start": "40210",
    "end": "46390"
  },
  {
    "text": "engineer for the infrastructure team I currently respond to Michael Mick Mickey Mike Mikey Russell rusty crazy",
    "start": "46390",
    "end": "53020"
  },
  {
    "text": "boss and I'm looking for new nicknames potentially a Chinese one would also be great to add to the list so if anyone",
    "start": "53020",
    "end": "59290"
  },
  {
    "text": "has anything just find me out for the conference or at the booth for the elastic stuff and I enjoy food",
    "start": "59290",
    "end": "64628"
  },
  {
    "text": "travelling gaming and also I forgot that I left this in but photoshopping myself into ridiculous situations like that",
    "start": "64629",
    "end": "71729"
  },
  {
    "text": "okay so the title of the talk is stop hitting yourself if anyone not familiar at the reference",
    "start": "71729",
    "end": "76960"
  },
  {
    "text": "this is from a TV show called The Simpsons and in The Simpsons the the guy on the left here his name is Nelson who was a",
    "start": "76960",
    "end": "83410"
  },
  {
    "text": "school bully and the guy in the ride is a bit of a nerd so the kind of guy he writes software and what he's doing is",
    "start": "83410",
    "end": "89560"
  },
  {
    "text": "he's filming him and he's grabbed his arm and he's saying stop hitting yourself stop hitting yourself stop hitting yourself",
    "start": "89560",
    "end": "94630"
  },
  {
    "text": "and the be sort of connection to this is this is how I feel that the experience is a lot with modern software where you",
    "start": "94630",
    "end": "101140"
  },
  {
    "text": "go to deploy something and you immediately get an arrow oh you need to set this configuration setting you fix",
    "start": "101140",
    "end": "106479"
  },
  {
    "text": "that you deploy something else and then you run into the next problem and this is a pattern that I've seen throughout throughout the years of my career which",
    "start": "106479",
    "end": "113260"
  },
  {
    "text": "just keeps coming back even with newer technology so after writing this speech and reading it back I realized it was",
    "start": "113260",
    "end": "120369"
  },
  {
    "text": "pretty negative because I'm pretty much complaining about software the whole time and showing the negative side of things but I just wanted to say that I",
    "start": "120369",
    "end": "127330"
  },
  {
    "text": "really enjoy what I do I really like kubernetes I didn't get paid to say that and they didn't actually pay me at all",
    "start": "127330",
    "end": "133090"
  },
  {
    "text": "so you can believe what I say okay so it's gonna be a sort of storytelling",
    "start": "133090",
    "end": "138580"
  },
  {
    "text": "format I've got a few different stories working from the older age of technology right up until modern day with",
    "start": "138580",
    "end": "144310"
  },
  {
    "text": "kubernetes so we're gonna start where everyone was around five years ago writing bash scripts so one day a",
    "start": "144310",
    "end": "150670"
  },
  {
    "text": "developer came up to me and he said I need you to do a production I need you to do a restore of our production",
    "start": "150670",
    "end": "157030"
  },
  {
    "text": "database I've been working the company for a few months I didn't know that we had a backup sir apparently we did which",
    "start": "157030",
    "end": "163209"
  },
  {
    "text": "was good to know and when I asked him about it or he could tell me was there's a bash script and a cron job somewhere so this was off to a good",
    "start": "163209",
    "end": "170239"
  },
  {
    "text": "start we at least had some form of backup method the question then was will it actually work so to go back even",
    "start": "170239",
    "end": "177409"
  },
  {
    "text": "further in time this is what the script looked like 20 years ago the original version so at this point it's not too",
    "start": "177409",
    "end": "184549"
  },
  {
    "text": "bad it's just a my single dumb command it's putting that into a backup directory which is hopefully somewhere",
    "start": "184549",
    "end": "189829"
  },
  {
    "text": "that's gonna lost and you know this is not too bad this was okay but after this",
    "start": "189829",
    "end": "194840"
  },
  {
    "text": "is how the changelog worked when I opened it up I removed a few of the change logs but over the years lots of",
    "start": "194840",
    "end": "200510"
  },
  {
    "text": "advancements have been made once the changes have been done little optimizations and things and you know this script had history I thought if",
    "start": "200510",
    "end": "207200"
  },
  {
    "text": "this has been running for 20 years now it must be a pretty good script right this has been doing it production backups for 20 years I can trust this so",
    "start": "207200",
    "end": "215000"
  },
  {
    "text": "this is what the script looked like from memory I just had to make it up a bit and at first glance this looks pretty",
    "start": "215000",
    "end": "220400"
  },
  {
    "text": "good particularly the the top line up there the important do not remove warning and",
    "start": "220400",
    "end": "225669"
  },
  {
    "text": "set - II so if anyone who hasn't done much bash flip ting said - he is really",
    "start": "225669",
    "end": "231500"
  },
  {
    "text": "really important so this is the first example of stop hitting yourself and luckily someone else had already run into it so what's that - II does is it",
    "start": "231500",
    "end": "239030"
  },
  {
    "text": "says that if any of the lines fail I need the commands I want you to actually exit and say it failed otherwise the",
    "start": "239030",
    "end": "245540"
  },
  {
    "text": "only thing needed for successful backup was this line so before the guy out of this five years ago the script was",
    "start": "245540",
    "end": "251720"
  },
  {
    "text": "always successful because the echo backup successful always worked so let's keep going so some of the other problems",
    "start": "251720",
    "end": "259340"
  },
  {
    "text": "that were in the script we're not going to go into detail because it's not a talk about bash scripting or my sequel backups --is there's no table walking",
    "start": "259340",
    "end": "266210"
  },
  {
    "text": "and they were lucky they were doing the dumper table so that was already a bit of a concern and then I would then need",
    "start": "266210",
    "end": "271970"
  },
  {
    "text": "to do the restore in reverse order which isn't too bad definitely possible and the other thing",
    "start": "271970",
    "end": "277250"
  },
  {
    "text": "is that a cron job which sends an email when it fails is pretty much the the lowest level of monitoring you can imagine if you don't get an email every",
    "start": "277250",
    "end": "284150"
  },
  {
    "text": "day you're just basically assuming hey my backup must have what you don't know if it actually ran if your email server",
    "start": "284150",
    "end": "290240"
  },
  {
    "text": "is broken you don't really know anything so there's actually only a or things that I think email is actually",
    "start": "290240",
    "end": "295770"
  },
  {
    "text": "useful for so one of those things is a human sending a message to another human when they already know that human so",
    "start": "295770",
    "end": "302640"
  },
  {
    "text": "that's one of the things and the other thing is saving any articles for yourself or cat photos that you want to send to your girlfriend later that's",
    "start": "302640",
    "end": "308880"
  },
  {
    "text": "pretty much the two things I find email useful for something that's not so good for is any kind of monitoring alerts",
    "start": "308880",
    "end": "315440"
  },
  {
    "text": "computers automated systems needing to contact humans and finally alerting the fire brigade that's from the IT Crowd",
    "start": "315440",
    "end": "322290"
  },
  {
    "text": "it's a real scene so if you haven't watched it I highly recommend the show so the surprising thing was is that it",
    "start": "322290",
    "end": "329130"
  },
  {
    "text": "was a backup script with a lot of history in around for 20 years I really was stole script and it actually worked",
    "start": "329130",
    "end": "334530"
  },
  {
    "text": "and I was pretty surprised and the site was working it was up when I searched for a job it was a job website back she",
    "start": "334530",
    "end": "341940"
  },
  {
    "text": "seemed to be some stuff in the database so I was pretty happy with that and I was quite surprised so we now had a backup that was restorable which was a",
    "start": "341940",
    "end": "348720"
  },
  {
    "text": "pretty good upgrade from earlier in the morning when I didn't even know we had backups so that's when you actually",
    "start": "348720",
    "end": "354810"
  },
  {
    "text": "start to look into it and find out oh actually it may have restored but is all",
    "start": "354810",
    "end": "360240"
  },
  {
    "text": "the data there so the interesting part here was that the search index that I was looking at was a search engine so",
    "start": "360240",
    "end": "367170"
  },
  {
    "text": "not the my sequel database itself so that one was okay but the actual database was more or less completely",
    "start": "367170",
    "end": "372990"
  },
  {
    "text": "empty and then we had a look there was only eight jobs online when they should have been around 25,000 so at this stage",
    "start": "372990",
    "end": "380130"
  },
  {
    "text": "I thought maybe it was just a bad backup maybe something happened this morning maybe yesterday's backup was actually",
    "start": "380130",
    "end": "386400"
  },
  {
    "text": "fine all the week before let's let's see what we have and what I did is I had a look at the size of the backup for the",
    "start": "386400",
    "end": "392880"
  },
  {
    "text": "previous so this was a daily backup I think so for the previous week and I saw this which was pretty horrifying because",
    "start": "392880",
    "end": "399420"
  },
  {
    "text": "you've got imagine this is a script that's been running for 20 years and what you would expect to see is that the",
    "start": "399420",
    "end": "405060"
  },
  {
    "text": "jobs table was append-only so every job from the whole history of the company was in there so you would expect to see",
    "start": "405060",
    "end": "411030"
  },
  {
    "text": "a five megabyte backup approximately and then everyday getting a tiny bit bigger so as",
    "start": "411030",
    "end": "416250"
  },
  {
    "text": "soon as you see no backup so they're even remotely similar to each other you pretty much can conclude this was one",
    "start": "416250",
    "end": "422520"
  },
  {
    "text": "table as well you could conclude okay we don't have a single valid backup for our job site in probably 20 years since the",
    "start": "422520",
    "end": "429660"
  },
  {
    "text": "first version so that was a fun discovery so now to show you what",
    "start": "429660",
    "end": "434850"
  },
  {
    "text": "actually happened in this case is that five years ago someone had found this set - II and you can see in the change",
    "start": "434850",
    "end": "441810"
  },
  {
    "text": "look here in 2010 I've set - II to make sure backup actually fails so it's quite",
    "start": "441810",
    "end": "447030"
  },
  {
    "text": "a good feature request and the interesting part is this next change log so someone else came along and once the",
    "start": "447030",
    "end": "454229"
  },
  {
    "text": "backups were actually failing Baria would have fixed the reason that was failing and this meant that all of a sudden there was a greater use of data",
    "start": "454229",
    "end": "461550"
  },
  {
    "text": "for the backups so suddenly this was filling up so someone thought we need to have a way to compress the backups to",
    "start": "461550",
    "end": "467130"
  },
  {
    "text": "save some space and the line that got added in it's very hard to do a change log and dipping in slides that I'm doing",
    "start": "467130",
    "end": "472830"
  },
  {
    "text": "my best but the important part that came in was this part here the pipe in the my",
    "start": "472830",
    "end": "477960"
  },
  {
    "text": "secret dump command into gzip and what's interesting here is that as we said",
    "start": "477960",
    "end": "483570"
  },
  {
    "text": "before the default for a bash script is that as long as the loss line works that's okay and everything else can fail",
    "start": "483570",
    "end": "489690"
  },
  {
    "text": "so that's fixed by the set - EE and then the new feature here which is needed is",
    "start": "489690",
    "end": "495389"
  },
  {
    "text": "set a pipe fail and what this command means is that any command on the line",
    "start": "495389",
    "end": "501060"
  },
  {
    "text": "sorry this one the only important command in whole script if that fails that's okay as long as the pipe into",
    "start": "501060",
    "end": "507599"
  },
  {
    "text": "gzip which could be piping nothing is successful and that tends to be always successful it will still consider it to",
    "start": "507599",
    "end": "513959"
  },
  {
    "text": "be success so what was happening is the moment someone added that compression into it we were back into the situation where",
    "start": "513959",
    "end": "520140"
  },
  {
    "text": "every single backup was successful again so in total looking at the dates there was a good 12 days of valid backups but",
    "start": "520140",
    "end": "527250"
  },
  {
    "text": "we didn't have them anymore but it could have been nice so to get back to what I said earlier software is easy to use but",
    "start": "527250",
    "end": "534420"
  },
  {
    "text": "hard to run data is easy to backup but hard to restore hard to restore and verify okay let's",
    "start": "534420",
    "end": "542900"
  },
  {
    "text": "let's talk about something a bit more modern hopefully we've improved from our bash scripting days so let's start with",
    "start": "542900",
    "end": "549440"
  },
  {
    "text": "docker so everyone has used docker is probably done this at some stage or probably multiple times at us at docker",
    "start": "549440",
    "end": "555560"
  },
  {
    "text": "is working this is the helloworld tutorial for dhoka dhoka one hello world and not only",
    "start": "555560",
    "end": "561110"
  },
  {
    "text": "do you get a hello world message but you also get a nice bit of output about what actually happened to make all of that",
    "start": "561110",
    "end": "566720"
  },
  {
    "text": "magic work there's one particularly number two is what's very interesting here so the docker daemon pulled the",
    "start": "566720",
    "end": "573320"
  },
  {
    "text": "hello world image from the docker hub that happens to be a haiku and it's been verified by our own haiku block called",
    "start": "573320",
    "end": "579740"
  },
  {
    "text": "mbaku you can ask me about that later but what's interesting about this is that none of that sentence is actually",
    "start": "579740",
    "end": "586550"
  },
  {
    "text": "true pretty much every part of it can be picked apart and shown to be something who's gonna set people up to hurt",
    "start": "586550",
    "end": "592970"
  },
  {
    "text": "themselves later on so the first part is that the purple writing should be the doctor daemon checked if the image hello",
    "start": "592970",
    "end": "599210"
  },
  {
    "text": "world with the tag latest was already downloaded and available locally if it already existed it did nothing the next",
    "start": "599210",
    "end": "606920"
  },
  {
    "text": "part is that it doesn't actually check if it's the right hello world image from the docker hub if you happen to have",
    "start": "606920",
    "end": "612830"
  },
  {
    "text": "another image called hello world with the tag latest it would also use that as well so then another layer on top of",
    "start": "612830",
    "end": "620930"
  },
  {
    "text": "this is that the latest tag doesn't even have to exist latest does not mean latest it's just a name it's just a word",
    "start": "620930",
    "end": "627650"
  },
  {
    "text": "it doesn't mean anything and just because you have the latest tag locally doesn't even mean exist in the registry",
    "start": "627650",
    "end": "634160"
  },
  {
    "text": "and for anyone who hasn't run into this before the the complication of this is",
    "start": "634160",
    "end": "639470"
  },
  {
    "text": "that if today you on docker on hello world and then someone else runs it next",
    "start": "639470",
    "end": "644480"
  },
  {
    "text": "week and then you run it again you might get completely different outputs in different versions of the same container",
    "start": "644480",
    "end": "651070"
  },
  {
    "text": "so here an example of whether I can go wrong luckily we knew about the latest hard",
    "start": "651160",
    "end": "656630"
  },
  {
    "text": "going into this and when you let's not use the latest tag I wrote a blog post it's a bad idea let's not do that so at",
    "start": "656630",
    "end": "663260"
  },
  {
    "text": "the start this is what our Daka file looks like so phone and sent our 6.66 sent to us is our base image and then",
    "start": "663260",
    "end": "670460"
  },
  {
    "text": "there was a bunch of business logic that I haven't included and in the end adding in the source code for our application and the reason that I'm showing this and",
    "start": "670460",
    "end": "678320"
  },
  {
    "text": "the tile the slide is someone came to us and said you haven't patched a production in around six months which",
    "start": "678320",
    "end": "683630"
  },
  {
    "text": "happened to be the amount of time we've been running application for so pretty much translated to you have an ever",
    "start": "683630",
    "end": "689089"
  },
  {
    "text": "pouch reduction so when they looked into we found out exactly what I was explaining before it's only going to",
    "start": "689089",
    "end": "695810"
  },
  {
    "text": "connect and pull in the latest tag if that tag doesn't exist locally so the build server already had the six point",
    "start": "695810",
    "end": "702170"
  },
  {
    "text": "six tag so it never will ever it will never ever update it again so we look this up that was an open issue and",
    "start": "702170",
    "end": "708470"
  },
  {
    "text": "docker note it's now called mobi of course and they said you need to pull the image first so like that's a pretty",
    "start": "708470",
    "end": "715220"
  },
  {
    "text": "easy fix we updated our deployment build scripts to include docker pools sent to our six point six first and then we",
    "start": "715220",
    "end": "721670"
  },
  {
    "text": "could go to our application and that should work just fine right nope not yeah so the next problem that we ran",
    "start": "721670",
    "end": "727820"
  },
  {
    "text": "into is that a version tag is completely up to the owner of the image of how they want to implement this so this is the",
    "start": "727820",
    "end": "734360"
  },
  {
    "text": "current documentation for the center Wes image and the short version is basically if you use that 6.6 version they're",
    "start": "734360",
    "end": "741290"
  },
  {
    "text": "going to match that to the ISO release all sent to us so back in the days when you used to download a CD in Burnet",
    "start": "741290",
    "end": "747290"
  },
  {
    "text": "that's a unpatched version of sent to us which they've done on purpose and their recommendation is to run run my update",
    "start": "747290",
    "end": "755060"
  },
  {
    "text": "and yum clean all in Davo so this was good news we found out",
    "start": "755060",
    "end": "760310"
  },
  {
    "text": "okay here's the reason why it's clearly documented we just need to add this in so we added with him and everybody",
    "start": "760310",
    "end": "767720"
  },
  {
    "text": "celebrated we actually did a deploy and confirmed yep it's updated now this is perfect so",
    "start": "767720",
    "end": "773780"
  },
  {
    "text": "that's why we're very surprised when one month later I'll hit myself again why are you hitting yourself",
    "start": "773780",
    "end": "779270"
  },
  {
    "text": "why having a batch production so we don't learn about the dockable cache sorry for anyone who doesn't know yep",
    "start": "779270",
    "end": "785900"
  },
  {
    "text": "any of those commands that you add inside like this one the way darker determines whether or not to run these",
    "start": "785900",
    "end": "792530"
  },
  {
    "text": "is based on the actual command itself so the first time you run this it is actually gonna do an update and update",
    "start": "792530",
    "end": "799400"
  },
  {
    "text": "everything if you then run it again with directly after it's gonna go though you didn't change the update command so this",
    "start": "799400",
    "end": "806420"
  },
  {
    "text": "there's no need for me to run that again right and to make it even worse we actually checked it twice but on those",
    "start": "806420",
    "end": "812780"
  },
  {
    "text": "two example times that hit different build servers so each time we saw it updating so we really thought we'd",
    "start": "812780",
    "end": "817820"
  },
  {
    "text": "solved it so once again the solution here is to add yet and over I get",
    "start": "817820",
    "end": "824540"
  },
  {
    "text": "another default so this is that you now need to pull the image first to make sure you've gotten any changes that are",
    "start": "824540",
    "end": "830270"
  },
  {
    "text": "in there and then build the image with the node cache and the sad part about this is that one of the main reasons we",
    "start": "830270",
    "end": "836420"
  },
  {
    "text": "won for docker was all of the caching technology that we got that we could build our images very quickly and deploy",
    "start": "836420",
    "end": "841790"
  },
  {
    "text": "them and now we need to download every thing on every application deploy again",
    "start": "841790",
    "end": "846900"
  },
  {
    "text": "well making these slides when I went to the documentation for docker to look at",
    "start": "846900",
    "end": "852880"
  },
  {
    "text": "the hello world example I noticed something very interesting if you look at the output of this command here let's",
    "start": "852880",
    "end": "858580"
  },
  {
    "text": "see if I can get back quickly that's a long way back okay sorry to give",
    "start": "858580",
    "end": "867460"
  },
  {
    "text": "everyone a seize you about but the interesting thing here is that the output is actually different from the current version and when I first server",
    "start": "867460",
    "end": "874390"
  },
  {
    "text": "I was really hoping that it was because they hadn't pulled the latest tiger young but it turns out the docs are just",
    "start": "874390",
    "end": "879460"
  },
  {
    "text": "out of date because you can see it pulling the image but that would have been quite a nice finding so let's get",
    "start": "879460",
    "end": "885130"
  },
  {
    "text": "on to kubernetes that's what everyone came here for not to talk about bash scripting is there a bash corn that",
    "start": "885130",
    "end": "891100"
  },
  {
    "text": "would be pretty nice I can talk about so I was hoping that kubernetes had taken a",
    "start": "891100",
    "end": "896320"
  },
  {
    "text": "big step and actually tried to fix some of this tagging behavior that Dockers heart which is cause I'm gonna guess at",
    "start": "896320",
    "end": "903339"
  },
  {
    "text": "least some people here also the same pain that I've run through a few times but unfortunately kubernetes maintains",
    "start": "903339",
    "end": "908830"
  },
  {
    "text": "to try to be compatible with the docker way of doing things so the imageable policy is also set to",
    "start": "908830",
    "end": "914709"
  },
  {
    "text": "the default of docker but luckily you do have a nice option immutable policy always so you can pull in the latest tag",
    "start": "914709",
    "end": "921220"
  },
  {
    "text": "if there are depending on your tagging strategy so let's now look at a hello world example for kubernetes this is a",
    "start": "921220",
    "end": "928330"
  },
  {
    "text": "very basic one that a lot of people should have done so just starting an engine x container and then we're going",
    "start": "928330",
    "end": "933850"
  },
  {
    "text": "to expose the deployment with a load balancer well it's really nice about",
    "start": "933850",
    "end": "938860"
  },
  {
    "text": "kubernetes is that when you want to come on like that you can actually take a look and see what has kubernetes",
    "start": "938860",
    "end": "944500"
  },
  {
    "text": "generated for me and when you take a look at the emma file you look through this and go yeah this this looks good",
    "start": "944500",
    "end": "950200"
  },
  {
    "text": "it's it's figured out rolling updates as a setting for replicas that I can tweak so I can make it highly available",
    "start": "950200",
    "end": "956280"
  },
  {
    "text": "in Tripoli seams are always by default even though it says it's not when you use it keep co2 wrong come on and",
    "start": "956280",
    "end": "962030"
  },
  {
    "text": "resources no I don't have any resources so I guess that's empty so that's sort of the default experience that people",
    "start": "962030",
    "end": "968040"
  },
  {
    "text": "will get when deploying an application they might take this and tweak it slightly to their needs but that sort of",
    "start": "968040",
    "end": "973770"
  },
  {
    "text": "where this goes wrong again here's a few questions that kubernetes did not ask you and did not fill out in the template",
    "start": "973770",
    "end": "980220"
  },
  {
    "text": "and as I'm saying let's just think how you would answer these yourself and don't just listen to my answer so much",
    "start": "980220",
    "end": "985800"
  },
  {
    "text": "for deploying your application is it okay if all of the containers are running on the same Hurst no you'd",
    "start": "985800",
    "end": "991410"
  },
  {
    "text": "rather spread them out right that's why using kubernetes is it okay if all the containers go down during a rolling upgrade of conveys",
    "start": "991410",
    "end": "997860"
  },
  {
    "text": "itself no I I don't want that either I'll turn that off please should these containers always run or",
    "start": "997860",
    "end": "1003770"
  },
  {
    "text": "just sometimes no okay should I check if the containers healthy hopefully that's",
    "start": "1003770",
    "end": "1009380"
  },
  {
    "text": "an easy one you asked for three replicas do you really want that many or do you just like that number a lot how about two is",
    "start": "1009380",
    "end": "1016130"
  },
  {
    "text": "two okay so let's let's get into those with a few practical examples so firstly",
    "start": "1016130",
    "end": "1021410"
  },
  {
    "text": "the update strategy like I said before at first glance this looks pretty good you see it's a rolling update not surge",
    "start": "1021410",
    "end": "1027319"
  },
  {
    "text": "is one max unavailable is one so you think to yourself what will that actually do when I do an update so this",
    "start": "1027319",
    "end": "1033620"
  },
  {
    "text": "is what I would expect to happen I would expect I deploy a new version that new version will actually get deployed and",
    "start": "1033620",
    "end": "1039500"
  },
  {
    "text": "the moment the version is deployed its then going to remove the old one that's the standard way of doing rolling",
    "start": "1039500",
    "end": "1044870"
  },
  {
    "text": "updates you don't want to take one down and have any downtime but here's what actually happens once again I'll hit",
    "start": "1044870",
    "end": "1050660"
  },
  {
    "text": "myself just for the guy up the back there you're welcome and what actually happens is you're going to deploy the new version at the",
    "start": "1050660",
    "end": "1057080"
  },
  {
    "text": "same time that that new version is being deployed kubernetes is gonna say I'm",
    "start": "1057080",
    "end": "1062150"
  },
  {
    "text": "allowed to have max edge of one so it's gonna have two containers running at once and max unavailable at one so as",
    "start": "1062150",
    "end": "1068750"
  },
  {
    "text": "soon as the first one launches it goes I'm allowed to have one unavailable I'm only supposed to have one let's kill",
    "start": "1068750",
    "end": "1074559"
  },
  {
    "text": "the old one so at the same time that is being launched and starting the other one gets removed and what actually",
    "start": "1074559",
    "end": "1080590"
  },
  {
    "text": "happens here is that if your new version has a docker image that was missing or a tag that's gone it's actually just gonna",
    "start": "1080590",
    "end": "1087250"
  },
  {
    "text": "take down your application which is is pretty unexpected I would assume and for an engine X example people are thinking",
    "start": "1087250",
    "end": "1093909"
  },
  {
    "text": "you should probably have more than one replica but there's definitely lot of kubernetes use cases where you are just doing a single replica well deploying a",
    "start": "1093909",
    "end": "1100480"
  },
  {
    "text": "new version should not cause your application to go down for a controlled change so what you actually want of",
    "start": "1100480",
    "end": "1106929"
  },
  {
    "text": "course is this not Mac's unavailable to zero and there's actually a couple of reasons for that and the other reason is",
    "start": "1106929",
    "end": "1113289"
  },
  {
    "text": "that if you were to set things to three replicas if you remember before one of the questions was do you really want",
    "start": "1113289",
    "end": "1119590"
  },
  {
    "text": "three or D just like that number and that's the example this also fixes is that once you say max unavailable zero",
    "start": "1119590",
    "end": "1125860"
  },
  {
    "text": "it's gonna always keep three during it up rolling upgrade with max unavailable of one what's gonna happen is it's gonna",
    "start": "1125860",
    "end": "1132340"
  },
  {
    "text": "start a new one and at the same time remove one so during an upgrade you're gonna go from three replicas down to two",
    "start": "1132340",
    "end": "1138400"
  },
  {
    "text": "so you're just willingly giving up a third of your capacity during an update and then you know you're still open to",
    "start": "1138400",
    "end": "1143980"
  },
  {
    "text": "node failures and everything else so that's that's where that do you really want three or do you like the number comes from so here's the the next thing",
    "start": "1143980",
    "end": "1151720"
  },
  {
    "text": "by this stage you're probably thinking I fixed the rolling update strategy I've got an application that just can't be",
    "start": "1151720",
    "end": "1157690"
  },
  {
    "text": "taken down it's pretty much invincible at this stage so let's see what happens",
    "start": "1157690",
    "end": "1162700"
  },
  {
    "text": "if Nettie's upgrade so quite often this is",
    "start": "1162700",
    "end": "1168910"
  },
  {
    "text": "not being done by the users of the application which makes it even more surprising but imagine we've got our",
    "start": "1168910",
    "end": "1173950"
  },
  {
    "text": "nginx deployment running we've got three replicas we've got everything configured properly we've tested it all nicely and",
    "start": "1173950",
    "end": "1179710"
  },
  {
    "text": "all of a sudden our application goes down and we're logged into a kubernetes cluster and we have a look and we see",
    "start": "1179710",
    "end": "1186040"
  },
  {
    "text": "three containers not running and you think okay that's that's not ideal and the defaults if you remember question",
    "start": "1186040",
    "end": "1192280"
  },
  {
    "text": "before is it okay if all the containers start working that's exactly what happens out of the box if you do a well",
    "start": "1192280",
    "end": "1197920"
  },
  {
    "text": "and restart of each node and the container fails to stop again somewhere else it's actually gonna just keep going",
    "start": "1197920",
    "end": "1203260"
  },
  {
    "text": "but luckily there is a solution that you do need to configure it so that's where port disruption budgets come in with a",
    "start": "1203260",
    "end": "1209760"
  },
  {
    "text": "pod disruption budget you're actually able to define tell kubernetes from a",
    "start": "1209760",
    "end": "1215620"
  },
  {
    "text": "user point of view this application can only have one container unavailable at any one time so what's gonna happen in",
    "start": "1215620",
    "end": "1222400"
  },
  {
    "text": "this case is kubernetes is going to try and upgrade a node it's gonna drain it move the container somewhere else if the",
    "start": "1222400",
    "end": "1228070"
  },
  {
    "text": "container fails to startup kubernetes gonna stop the whole cluster upgrade just for you because you're special and",
    "start": "1228070",
    "end": "1233410"
  },
  {
    "text": "it's gonna annoy everyone else until you fix it but you know you've at least prevented some outages for something",
    "start": "1233410",
    "end": "1238870"
  },
  {
    "text": "that you may not control next example if a kubernetes no crashes everyone here is",
    "start": "1238870",
    "end": "1244960"
  },
  {
    "text": "probably using some form of cloud in some way probably AWS or GCP and have at",
    "start": "1244960",
    "end": "1250120"
  },
  {
    "text": "some stage in their lives had a virtual machine actually crash or die or just fill up or something else happened to it",
    "start": "1250120",
    "end": "1256690"
  },
  {
    "text": "and what's interesting about this is that by default if you deploy something on kubernetes there is no guarantees",
    "start": "1256690",
    "end": "1263110"
  },
  {
    "text": "about where those containers will run if you're running a three node kubernetes cluster it's very possible that all of",
    "start": "1263110",
    "end": "1268990"
  },
  {
    "text": "those containers will end up on a single kubernetes node a single virtual machine and if that machine does actually crash",
    "start": "1268990",
    "end": "1276010"
  },
  {
    "text": "and is unable to connect to kubernetes the default waiting time is 5 minutes after 5 minutes kubernetes will go I",
    "start": "1276010",
    "end": "1282490"
  },
  {
    "text": "think the nodes not coming back now let's start those containers somewhere else so 5 minutes of downtime just",
    "start": "1282490",
    "end": "1288370"
  },
  {
    "text": "because you haven't set up your pod ante affinity what are these are very hard to say so",
    "start": "1288370",
    "end": "1293860"
  },
  {
    "text": "the way pod anteye a finiti works is that this is a way to define where your containers can and can't run",
    "start": "1293860",
    "end": "1300150"
  },
  {
    "text": "there's also affinity and anti affinity and in this example here the the only really important line is this one here",
    "start": "1300150",
    "end": "1306510"
  },
  {
    "text": "the topology key and with this you're able to say for this nginx deployment I want to make sure that all of them are",
    "start": "1306510",
    "end": "1313440"
  },
  {
    "text": "running on a different host so this is going to guarantee that they don't end up on the same node it's then also possible to divide this",
    "start": "1313440",
    "end": "1320460"
  },
  {
    "text": "up by zone or on any other labels that you might have on your nodes but just by adding this in you can simply now say",
    "start": "1320460",
    "end": "1326490"
  },
  {
    "text": "make sure the containers separated and running on different hosts so that I can actually survive a failure feels like",
    "start": "1326490",
    "end": "1332250"
  },
  {
    "text": "something that should be a default but it's just not so at this stage things are pretty battle-hardened and you think",
    "start": "1332250",
    "end": "1338370"
  },
  {
    "text": "there is no way something could take this down that we could fix by adding in some configuration and you'd be pretty",
    "start": "1338370",
    "end": "1344700"
  },
  {
    "text": "much right we're nearly there and because you're doing so well some other people in your company say hey that",
    "start": "1344700",
    "end": "1350520"
  },
  {
    "text": "kubernetes thing actually seems to work and you guys are now getting work done can we have some of that kubernetes and",
    "start": "1350520",
    "end": "1356090"
  },
  {
    "text": "of course you want them to use it as well so you help them out you show them how it works but you know they've come",
    "start": "1356090",
    "end": "1362070"
  },
  {
    "text": "into it later than you and they've seen updated documentation and they've also seen this resources thing so I thought",
    "start": "1362070",
    "end": "1368280"
  },
  {
    "text": "let's let's configure resources because someone actually read the docs and understands what it does so at this stage they've deployed a few",
    "start": "1368280",
    "end": "1374460"
  },
  {
    "text": "applications they've asked for some CPU and memory requests and now your application has gone down and you can't",
    "start": "1374460",
    "end": "1380340"
  },
  {
    "text": "figure out why until you actually have a look at what the resources do so out of the box in kubernetes if you have if you",
    "start": "1380340",
    "end": "1387630"
  },
  {
    "text": "use no resource definitions it's considered to be best effort so in a world where all resources and kubernetes",
    "start": "1387630",
    "end": "1395130"
  },
  {
    "text": "are best effort it actually turns out pretty ok because if you have two containers running on a host and they",
    "start": "1395130",
    "end": "1400500"
  },
  {
    "text": "both want to use all the CPU they'll get half each if you add a third one in they're now going to get a third each",
    "start": "1400500",
    "end": "1406350"
  },
  {
    "text": "and this works great but then what happens is someone comes along and does things properly and actually says hey I",
    "start": "1406350",
    "end": "1412440"
  },
  {
    "text": "want some CPU kubernetes is gonna go oh that's ok no one else wanted any I'm just gonna give all of that to you",
    "start": "1412440",
    "end": "1418740"
  },
  {
    "text": "instead and it's gonna starve the containers of any resources and it was actually just completely delete them",
    "start": "1418740",
    "end": "1424500"
  },
  {
    "text": "because their best effort you didn't tell me they were important you said you wanted me to run them but you didn't",
    "start": "1424500",
    "end": "1429570"
  },
  {
    "text": "really say they all that important so this is what the resources stuff looks like hopefully everyone seen it",
    "start": "1429570",
    "end": "1434670"
  },
  {
    "text": "before the the quick explanation of how it works because a lot of people get confused between limits and CPUs is",
    "start": "1434670",
    "end": "1440690"
  },
  {
    "text": "limits and requests sorry so limits is what it sounds like that's a hard limit so if you set the CPU limit",
    "start": "1440690",
    "end": "1447120"
  },
  {
    "text": "to 1,000 million CPU it's gonna just limit your process to that speed the",
    "start": "1447120",
    "end": "1453330"
  },
  {
    "text": "memory limit at 500 megabytes when you hit that it's gonna do an out of memory kill a bit like Linux does and actually",
    "start": "1453330",
    "end": "1459090"
  },
  {
    "text": "restart the container the request is actually going to reserve these amounts so if you don't add any requests in",
    "start": "1459090",
    "end": "1465300"
  },
  {
    "text": "you're gonna run into the same problem before it's kind of like best effort with a limit it's almost worse and not",
    "start": "1465300",
    "end": "1470460"
  },
  {
    "text": "having anything at all but a request is gonna guarantee that at any time your container is going to be on a node that",
    "start": "1470460",
    "end": "1476940"
  },
  {
    "text": "has at least one CPU and ha and 500 megabytes of memory for you",
    "start": "1476940",
    "end": "1482580"
  },
  {
    "text": "and then of course you're gonna want to set these as well so if everyone starts setting how much memory they want",
    "start": "1482580",
    "end": "1488580"
  },
  {
    "text": "everyone's just gonna say I want 20 CPUs and all the memory so what you can also set up is you've got resource quotas",
    "start": "1488580",
    "end": "1494279"
  },
  {
    "text": "we're on a namespace level you can say this team or this namespace has access to 50 gigabytes of memory and 20 CPUs",
    "start": "1494279",
    "end": "1501450"
  },
  {
    "text": "and then you're gonna find out it's very painful to keep telling every single developer every single pull request",
    "start": "1501450",
    "end": "1507360"
  },
  {
    "text": "don't forget to add in resources so you also have default resource limits where you can define a default setting for",
    "start": "1507360",
    "end": "1514110"
  },
  {
    "text": "anyone who doesn't set it so if you deploy an application don't set any resource limits you're gonna get a",
    "start": "1514110",
    "end": "1519510"
  },
  {
    "text": "certain amount by default which is probably not going to be enough but enough for them to realize that they need to actually do it so it's a good",
    "start": "1519510",
    "end": "1526139"
  },
  {
    "text": "way to hit them back I guess is a better way of putting it so I think this is the final one and all of these are based on",
    "start": "1526139",
    "end": "1533070"
  },
  {
    "text": "a true story of constantly trying to get an application working running into problem after problem so in this case",
    "start": "1533070",
    "end": "1538679"
  },
  {
    "text": "your website is functioning but someone has a look at the logs and you're losing about one in ten requests and you have",
    "start": "1538679",
    "end": "1545130"
  },
  {
    "text": "no idea which one it is of what's going on and after taking a good look you do find out that one container has got",
    "start": "1545130",
    "end": "1550230"
  },
  {
    "text": "itself into a bad state and probably shouldn't be receiving any traffic so the nice answer to this is you have",
    "start": "1550230",
    "end": "1555899"
  },
  {
    "text": "readiness verbs and liveness verbs both of these support doing HTTP calls but",
    "start": "1555899",
    "end": "1561090"
  },
  {
    "text": "also just running a shell command and once again it's another thing that people get very confused I would urge",
    "start": "1561090",
    "end": "1567029"
  },
  {
    "text": "everyone to at least go for a readiness probe readiness probe is used for a whole bunch of different use cases in",
    "start": "1567029",
    "end": "1572100"
  },
  {
    "text": "kubernetes so when you're doing an upgrade it waits for the readiness probe to be going when you have a service with",
    "start": "1572100",
    "end": "1577409"
  },
  {
    "text": "a load balancer the readiness probe defines whether or not it's actually inside of the service when you're doing",
    "start": "1577409",
    "end": "1582419"
  },
  {
    "text": "kubernetes upgrade the port disruption budget uses this ready in this probe to decide yes this container is actually",
    "start": "1582419",
    "end": "1587909"
  },
  {
    "text": "healthy again the liveness probe functions the same way but this one is only used to restart the container if",
    "start": "1587909",
    "end": "1593760"
  },
  {
    "text": "it's failing so this should be something normally a bit simpler where if you know the HTTP server is not responding at all",
    "start": "1593760",
    "end": "1599519"
  },
  {
    "text": "let's try restarting it and see if that helps so here's the thing that you guys should take a photo of to summarize all",
    "start": "1599519",
    "end": "1605429"
  },
  {
    "text": "this if you don't want to remember it but this is just all of the things that I've gone through that if you're not",
    "start": "1605429",
    "end": "1610590"
  },
  {
    "text": "setting these for production already you really should be so just once again resource requests limiting quotas too",
    "start": "1610590",
    "end": "1616410"
  },
  {
    "text": "sure that you've actually got some resources for your containers liveness and readiness probes to make sure that",
    "start": "1616410",
    "end": "1621750"
  },
  {
    "text": "when they are failing that it doesn't take down your whole application and that requests aren't set into a bad service or disruption budgets to make",
    "start": "1621750",
    "end": "1628590"
  },
  {
    "text": "sure that kubernetes upgrades doesn't take down your application ante Finiti rules to make sure a node failure or",
    "start": "1628590",
    "end": "1634050"
  },
  {
    "text": "zone failure is not going to take down your application upgrade strategy to make sure that a normal deployment is",
    "start": "1634050",
    "end": "1639630"
  },
  {
    "text": "not going to take down your application and then the things which I haven't covered which I won't have time for today is to make sure that you have",
    "start": "1639630",
    "end": "1645630"
  },
  {
    "text": "proper logging monitoring and alerting alerting as we saw before with the email example cron jobs is way more important",
    "start": "1645630",
    "end": "1652500"
  },
  {
    "text": "than actually having the monitoring in the first place actually being aware being able to trace back see what happened and finally once again another",
    "start": "1652500",
    "end": "1659970"
  },
  {
    "text": "true story a way to restore your applications if someone accidentally deletes the kubernetes cluster luckily",
    "start": "1659970",
    "end": "1665940"
  },
  {
    "text": "we keep all of our configuration under version control and our secrets have persisted outside of the cluster in hushka vault so it is possible but it's",
    "start": "1665940",
    "end": "1672870"
  },
  {
    "text": "something you need to think about in case you ever have to do it it can be quite difficult when you have services dependent on each other as well how to",
    "start": "1672870",
    "end": "1679140"
  },
  {
    "text": "restore stuff in the right order so after writing this talk how long have I",
    "start": "1679140",
    "end": "1684780"
  },
  {
    "text": "got ok so after writing this talk I had to actually start questioning why is software like this why do we do this to",
    "start": "1684780",
    "end": "1691650"
  },
  {
    "text": "ourselves why do we make us hit ourselves so part of the reason here is",
    "start": "1691650",
    "end": "1697050"
  },
  {
    "text": "that it's really about those first impressions if you wanted to use kubernetes and you first had to listen",
    "start": "1697050",
    "end": "1702270"
  },
  {
    "text": "to my talk before you could get an application running I don't think that'd be many people at the conference here today it raises a barrier of entry",
    "start": "1702270",
    "end": "1708240"
  },
  {
    "text": "people can't just play around and try it out and there's also a lot of use cases for people where it's completely fine",
    "start": "1708240",
    "end": "1714300"
  },
  {
    "text": "that if an application is down that they can just talk to someone and someone can log in and fix it and the final one",
    "start": "1714300",
    "end": "1720780"
  },
  {
    "text": "which is I think is the main reason for this is purely backwards compatibility when some of us were first using",
    "start": "1720780",
    "end": "1725940"
  },
  {
    "text": "kubernetes none of these features existed yet if you suddenly upgrade it to a new kubernetes version and it",
    "start": "1725940",
    "end": "1731460"
  },
  {
    "text": "started spreading your pods around when they used to all run on one host that could be pretty unexpected and that would be breaking backwards",
    "start": "1731460",
    "end": "1737280"
  },
  {
    "text": "compatibility so here's a few ideas I have to try and prove stuff one is actually talking about it making sure",
    "start": "1737280",
    "end": "1743760"
  },
  {
    "text": "that people aware and this doesn't apply to kubernetes this is about all software reading the documentation actually",
    "start": "1743760",
    "end": "1749580"
  },
  {
    "text": "testing appears of how does failover happen what happens if I do something silly like breaking the configuration how does it respond",
    "start": "1749580",
    "end": "1756380"
  },
  {
    "text": "maybe you're so creating some documentation for these here's an example of a battle-tested application",
    "start": "1756380",
    "end": "1761909"
  },
  {
    "text": "using all of these features maybe it's even possible to start thinking about changing some of the defaults and maybe",
    "start": "1761909",
    "end": "1767130"
  },
  {
    "text": "somebody should become default settings a bit like the rolling upgrade strategy another potential idea is to go even",
    "start": "1767130",
    "end": "1773490"
  },
  {
    "text": "further and have a code level implementation of this a way to actually say this namespace this cluster is in",
    "start": "1773490",
    "end": "1779399"
  },
  {
    "text": "production mode and it's not possible to deploy it without these things being configured and finally it could also be",
    "start": "1779399",
    "end": "1785460"
  },
  {
    "text": "something potentially added to a home chart template so another quick final thing for me deploying to production is",
    "start": "1785460",
    "end": "1791669"
  },
  {
    "text": "easy running tests locally is hard this is a little plug for a tool that I've been working on lately which focuses on",
    "start": "1791669",
    "end": "1798450"
  },
  {
    "text": "the opposite end of this problem so right now I say thank you that it's actually too easy to deploy something",
    "start": "1798450",
    "end": "1804990"
  },
  {
    "text": "into production currently I'm working on home charts for elasticsearch and the biggest concern that we have is that",
    "start": "1804990",
    "end": "1810570"
  },
  {
    "text": "people can now deploy quite a complex application with a single command and that's gonna lead to a lot of people",
    "start": "1810570",
    "end": "1816210"
  },
  {
    "text": "making mistakes who don't know elasticsearch who don't know kubernetes who don't know how to run a cluster and it's sort of setting them up for failure",
    "start": "1816210",
    "end": "1822210"
  },
  {
    "text": "a bit where you're worried about this so this tool is about approaching things from the opposite angle that while I",
    "start": "1822210",
    "end": "1827789"
  },
  {
    "text": "find it so easy to install a persistent highly available cluster on kubernetes",
    "start": "1827789",
    "end": "1833039"
  },
  {
    "text": "and not understand it I find that the opposite end of the spectrum actually running tests in a development",
    "start": "1833039",
    "end": "1838080"
  },
  {
    "text": "environment is way too hard and difficult a lot of my effort and time my job goes into actually making sure that",
    "start": "1838080",
    "end": "1844679"
  },
  {
    "text": "something that I write will work on Windows Mac Linux in the CI environment on Jenkins on Travis CI and everywhere",
    "start": "1844679",
    "end": "1851880"
  },
  {
    "text": "else so the way that loop works is if anyone's ever done the trick with a docker run command where you mount the",
    "start": "1851880",
    "end": "1857490"
  },
  {
    "text": "current directory inside of the container and put on - RM and Ti and run a command this is kind of that but on",
    "start": "1857490",
    "end": "1864570"
  },
  {
    "text": "steroids so it's also going to forward your SSH agent in the into the container even for",
    "start": "1864570",
    "end": "1869669"
  },
  {
    "text": "Windows and Mac OS so that you can run ansible from Windows Mac or Linux or in your CIO environment using the exact",
    "start": "1869669",
    "end": "1875880"
  },
  {
    "text": "same versions exact same system libraries it's also going to forward environment variables attach the dock at",
    "start": "1875880",
    "end": "1881279"
  },
  {
    "text": "Saco it also supports proc seeing any commands host for any specific tooling like key",
    "start": "1881279",
    "end": "1886510"
  },
  {
    "text": "base where we have like a use case where we need to decrypt something from key base to unseal vault so it's got a the",
    "start": "1886510",
    "end": "1893260"
  },
  {
    "text": "idea is that there should be a single way for everyone to run a command and have it just work but also for CI and",
    "start": "1893260",
    "end": "1899520"
  },
  {
    "text": "that was it thank you everyone so much for coming",
    "start": "1899520",
    "end": "1904350"
  },
  {
    "text": "do we have any questions yes",
    "start": "1906470",
    "end": "1910330"
  },
  {
    "text": "so the question was can you go back to the samurai slide I'll leave that one up",
    "start": "1912810",
    "end": "1917850"
  },
  {
    "text": "the slides are also online okay I have a couple questions first one the first of",
    "start": "1917850",
    "end": "1923910"
  },
  {
    "text": "all a ratio request and result limits so what is your recommendation on this point so we",
    "start": "1923910",
    "end": "1931350"
  },
  {
    "text": "always need to settle soap request the same as resource limits oh we should set",
    "start": "1931350",
    "end": "1938160"
  },
  {
    "text": "it just messy for possible and as second questions is the last point a way to",
    "start": "1938160",
    "end": "1944280"
  },
  {
    "text": "restore your application if kübra they get a little version control a problem",
    "start": "1944280",
    "end": "1949410"
  },
  {
    "text": "so how do you do it right now in and that's like use him now you just use",
    "start": "1949410",
    "end": "1956580"
  },
  {
    "text": "plain Kubrat the objec keep it and get worse the control and the second policy",
    "start": "1956580",
    "end": "1963120"
  },
  {
    "text": "with no assistance how do you achieve the secret power system okay so the",
    "start": "1963120",
    "end": "1970650"
  },
  {
    "text": "first question was with resource requests and limits what you recommend for doing that for most of our applications we tend to set the request",
    "start": "1970650",
    "end": "1977580"
  },
  {
    "text": "and the limit to the same amount because there's nothing more frustrating than finding an application that's performing",
    "start": "1977580",
    "end": "1982620"
  },
  {
    "text": "worst and that's because it's no longer able to burst anymore it's a cool feature to have and it sounds great but",
    "start": "1982620",
    "end": "1987840"
  },
  {
    "text": "once you get used to it and have a quiet cluster you don't want someone else deploying a new application to take away",
    "start": "1987840",
    "end": "1993480"
  },
  {
    "text": "performance from the first one so I would really recommend depending on your use case like if it's something that's user facing that needs to serve a",
    "start": "1993480",
    "end": "1999870"
  },
  {
    "text": "request in real time to really consider setting those the same if you're running like batch processing where you really",
    "start": "1999870",
    "end": "2005000"
  },
  {
    "text": "do want to use every last CPU and you're not worried about being slower and faster during periods then yeah not",
    "start": "2005000",
    "end": "2010760"
  },
  {
    "text": "setting limits could make sense and the second question was how we do actually",
    "start": "2010760",
    "end": "2015950"
  },
  {
    "text": "managing our configuration at elastic so right now we use helm charts and we then use the terraform helm provider to",
    "start": "2015950",
    "end": "2022520"
  },
  {
    "text": "manage the helm charts and the main reason for that is that we can guarantee the state of that so you don't need to",
    "start": "2022520",
    "end": "2028640"
  },
  {
    "text": "make sure that everyone is running home upgrade and that they have the latest version deployed there's nothing worse than going to deploy something and then",
    "start": "2028640",
    "end": "2035690"
  },
  {
    "text": "finding out the current version is a couple of versions older than what's currently and get and the other",
    "start": "2035690",
    "end": "2040880"
  },
  {
    "text": "advantage that you get using terraform for that is that you can also define dependencies so like I said",
    "start": "2040880",
    "end": "2046130"
  },
  {
    "text": "before when we had to restore our cluster from nothing we weren't using terraform at the time so we had to figure out what was the correct order to",
    "start": "2046130",
    "end": "2052638"
  },
  {
    "text": "install stuff so like okay elasticsearch needs to be installed because metric beat talks to elasticsearch and then",
    "start": "2052639",
    "end": "2057919"
  },
  {
    "text": "bolt needs to be installed first because that's where the secrets come from so it also allows you encode to define all the",
    "start": "2057919",
    "end": "2063950"
  },
  {
    "text": "relationships you have so for secret persistence we're storing that inside of Hasek or bolt which runs in kubernetes",
    "start": "2063950",
    "end": "2070460"
  },
  {
    "text": "which is a nice chicken and egg problem and there's a really great tool called the cube vault controller and what this",
    "start": "2070460",
    "end": "2077030"
  },
  {
    "text": "one does is it lets you in a kubernetes native way synchronize bolts from synchronized secrets from vult to",
    "start": "2077030",
    "end": "2083540"
  },
  {
    "text": "kubernetes without needing to have your application be Cuban Eddie's aware so it will just create them as secrets which",
    "start": "2083540",
    "end": "2089840"
  },
  {
    "text": "you can use as environment config Maps answers your question okay thank you",
    "start": "2089840",
    "end": "2096070"
  },
  {
    "text": "anyone else",
    "start": "2096070",
    "end": "2099220"
  },
  {
    "text": "you no there's one over there",
    "start": "2103500",
    "end": "2109380"
  },
  {
    "text": "so I have a question that and so how can we make the consistency for the test",
    "start": "2111990",
    "end": "2118720"
  },
  {
    "text": "environment and the production environment so because I think it's a big headache for forcings online because",
    "start": "2118720",
    "end": "2126970"
  },
  {
    "text": "always when we have a production environment and the staging environment and something of the staging environment",
    "start": "2126970",
    "end": "2134110"
  },
  {
    "text": "is also not exactly the same as a production environment how we build the",
    "start": "2134110",
    "end": "2140800"
  },
  {
    "text": "consistency between these two environment yeah so you're talking about",
    "start": "2140800",
    "end": "2146410"
  },
  {
    "text": "having two separate kubernetes clusters yeah of staging a production yeah so I don't work for Hachiko but I've been",
    "start": "2146410",
    "end": "2151570"
  },
  {
    "text": "plugging their products but we also use terraform for this and the reason of having a staging kubernetes cluster and",
    "start": "2151570",
    "end": "2157660"
  },
  {
    "text": "a production one allows us to test kubernetes changes on the staging environment and if you're not familiar with terraform you define the state that",
    "start": "2157660",
    "end": "2164650"
  },
  {
    "text": "you want so you have much better guarantees that is actually the same environment as you have in production but that's always a difficult problem",
    "start": "2164650",
    "end": "2171160"
  },
  {
    "text": "but at least with kubernetes it's made it a lot easier to get something that's very very close",
    "start": "2171160",
    "end": "2177450"
  },
  {
    "text": "one minute left",
    "start": "2177900",
    "end": "2181010"
  },
  {
    "text": "okay I think we're good thanks everyone",
    "start": "2186150",
    "end": "2190289"
  }
]