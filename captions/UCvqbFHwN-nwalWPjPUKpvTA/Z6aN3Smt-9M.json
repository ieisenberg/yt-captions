[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "text": "all right so hi everyone my name is Rita",
    "start": "60",
    "end": "5160"
  },
  {
    "text": "I'm the truck host for this session so I just want to say before the session",
    "start": "5160",
    "end": "10320"
  },
  {
    "text": "starts that if you have any feedback comments concerns questions please feel",
    "start": "10320",
    "end": "15599"
  },
  {
    "text": "free to reach out to me I have a very physical shirt and also to remind you to",
    "start": "15599",
    "end": "22439"
  },
  {
    "text": "fill out the surveys at the end of the session so the next session combines a",
    "start": "22439",
    "end": "30390"
  },
  {
    "text": "few of the most hot buzz words you will hear in this conference service smash",
    "start": "30390",
    "end": "37710"
  },
  {
    "text": "and envoy and OPA and whatnot so I think it's going to be very interesting please welcome to the stage",
    "start": "37710",
    "end": "44239"
  },
  {
    "text": "danielle Popescu from Yelp and Ben Plotnik from Cruz thank you now before",
    "start": "44239",
    "end": "57059"
  },
  {
    "text": "we begin we'd like to extend a huge thank you to the cloud native computing Foundation and Kubb Khan for the",
    "start": "57059",
    "end": "62219"
  },
  {
    "text": "opportunity for us to share our story and our experiences with all of you who",
    "start": "62219",
    "end": "68670"
  },
  {
    "text": "are we I'm Daniel Papa skew this is the most professional picture of myself I have on file I am an infrastructure",
    "start": "68670",
    "end": "75689"
  },
  {
    "text": "security engineer at Yelp in my free time I enjoy yoga flow arts and for some",
    "start": "75689",
    "end": "80909"
  },
  {
    "text": "reason reading AWS I am policy Docs and one of those not like the others and",
    "start": "80909",
    "end": "85950"
  },
  {
    "text": "this has been he's a senior platform engineer at cruise automation and at the",
    "start": "85950",
    "end": "91049"
  },
  {
    "text": "time that we submitted this talk we were both working at Yelp together now the",
    "start": "91049",
    "end": "98280"
  },
  {
    "text": "intention of this talk is not to tell you how to make your environment more secure there is no one-size-fits-all",
    "start": "98280",
    "end": "103850"
  },
  {
    "text": "security solution that will work for any one person or organization rather it's a",
    "start": "103850",
    "end": "109140"
  },
  {
    "text": "never-ending exercise in trying to strike a balance between security productivity and costs we are here to",
    "start": "109140",
    "end": "116460"
  },
  {
    "text": "share our experiences and lessons learned as we evolve the security features of our infrastructure service",
    "start": "116460",
    "end": "121950"
  },
  {
    "text": "infrastructure at Yelp now what's Yelp in case anyone is unfamiliar with Yelp let me fill you in",
    "start": "121950",
    "end": "128879"
  },
  {
    "start": "125000",
    "end": "125000"
  },
  {
    "text": "Yelp is a company that connects people with great local business Yelp has been providing this priceless",
    "start": "128879",
    "end": "134760"
  },
  {
    "text": "service to business owners and consumers for the past 15 years 15 years Wow 15",
    "start": "134760",
    "end": "141720"
  },
  {
    "text": "years is a really really long time a lot can change in 15 years right Yelp",
    "start": "141720",
    "end": "146730"
  },
  {
    "text": "certainly has so has the Internet as a whole this is Yelp",
    "start": "146730",
    "end": "152010"
  },
  {
    "text": "15 years ago in 2015 think about it back then things were so simple single",
    "start": "152010",
    "end": "158220"
  },
  {
    "text": "codebase single database a couple of front-end web servers handful of",
    "start": "158220",
    "end": "163230"
  },
  {
    "text": "developers to build deploy and maintain the website reviews and all other user-generated content are publicly",
    "start": "163230",
    "end": "170130"
  },
  {
    "text": "visible on the site for all visitors to see there's not really a whole lot of interesting stuff here from a security",
    "start": "170130",
    "end": "175830"
  },
  {
    "text": "perspective but if we fast forward to the present day 2019 things get a little",
    "start": "175830",
    "end": "183480"
  },
  {
    "text": "more interesting the internet has changed dramatically with the introduction of social media",
    "start": "183480",
    "end": "188540"
  },
  {
    "text": "personalization background location tracking etc etc it's now the norm for",
    "start": "188540",
    "end": "193950"
  },
  {
    "text": "users to exchange their personal data in exchange for awesome features to provide",
    "start": "193950",
    "end": "199130"
  },
  {
    "text": "happiness and convenience such as private messages to business owners GPS",
    "start": "199130",
    "end": "205050"
  },
  {
    "text": "location-based check-ins credit cards for purchasing food the list kind of",
    "start": "205050",
    "end": "210360"
  },
  {
    "text": "goes on and on and on and Yelp takes the security and privacy of our end users very seriously as such we have to ensure",
    "start": "210360",
    "end": "218430"
  },
  {
    "text": "that we handle this sensitive data appropriately right so how would we do that well a common solution to this",
    "start": "218430",
    "end": "225870"
  },
  {
    "start": "224000",
    "end": "224000"
  },
  {
    "text": "problem is the walled garden approach this intuitively makes sense especially when there's only one special service",
    "start": "225870",
    "end": "232470"
  },
  {
    "text": "that needs to be secured let's say we have a monolith application called Yelp",
    "start": "232470",
    "end": "237690"
  },
  {
    "text": "main and it has a bunch of functionality such as handling reviews and search requests and stuff like that but we also",
    "start": "237690",
    "end": "244680"
  },
  {
    "text": "want to start handling credit cards well we could put that in the monolith but",
    "start": "244680",
    "end": "250739"
  },
  {
    "text": "maybe that's not necessarily appropriate so this is something that sounds really sensitive we want to secure it somehow so we can extract the code that handles",
    "start": "250739",
    "end": "258030"
  },
  {
    "text": "the payments into its own separate service and then introduce a bunch of bespoke infrastructure components",
    "start": "258030",
    "end": "264650"
  },
  {
    "text": "makes this service difficult to access firewalls bastions V pcs special access",
    "start": "264650",
    "end": "271370"
  },
  {
    "text": "deployment considerations etc etc this is not exactly an elegant or lightweight",
    "start": "271370",
    "end": "276800"
  },
  {
    "text": "solution but it kind of meets the requirement of securing the sensitive data such as this credit card information so then as additional",
    "start": "276800",
    "end": "285590"
  },
  {
    "text": "scenarios arise that involve sensitive data it becomes apparent that this solution won't just like work for all",
    "start": "285590",
    "end": "292190"
  },
  {
    "text": "the other sensitive services that come up the sensitivity and access control",
    "start": "292190",
    "end": "297740"
  },
  {
    "text": "requirements are likely to be unique for each of these different services as such we have to implement similar same same",
    "start": "297740",
    "end": "305960"
  },
  {
    "text": "but different independent solutions for each one and recall the solution was not exactly lightweight or straightforward",
    "start": "305960",
    "end": "312169"
  },
  {
    "text": "or cost effective so now we have a problem given that we have an increasing number",
    "start": "312169",
    "end": "318889"
  },
  {
    "text": "of sensitive services how do we generalize our security features I'll hand it over to Ben to explain the",
    "start": "318889",
    "end": "325610"
  },
  {
    "text": "answer to this Sto we have like 30",
    "start": "325610",
    "end": "330650"
  },
  {
    "text": "minutes for questions anybody yeah if we",
    "start": "330650",
    "end": "339710"
  },
  {
    "text": "were starting Yelp today yeah maybe we would go with SEO but again this is kind",
    "start": "339710",
    "end": "344900"
  },
  {
    "text": "of what Yelp looks like we have our own platform as a service called pasta it's got kubernetes Amazo suite of smart",
    "start": "344900",
    "end": "352220"
  },
  {
    "text": "stack we have multi-tenancy I mean it's it's really really complicated and we",
    "start": "352220",
    "end": "357260"
  },
  {
    "text": "have a lot of developers that are constantly working on it so like how do we make this more secure without disrupting developers like but another",
    "start": "357260",
    "end": "365060"
  },
  {
    "text": "way how do we incremental e build security into this system so how do we",
    "start": "365060",
    "end": "371720"
  },
  {
    "text": "change the wings while we're flying is one way to put it and to answer this we",
    "start": "371720",
    "end": "378710"
  },
  {
    "text": "have to kind of take a step back and look at this holistically so there's two parts of security authentication and",
    "start": "378710",
    "end": "385639"
  },
  {
    "text": "authorization",
    "start": "385639",
    "end": "387849"
  },
  {
    "text": "[Applause] yeah authentication refers to who you",
    "start": "393010",
    "end": "401470"
  },
  {
    "text": "are and authorization refers to what you're permitted to do so we can't",
    "start": "401470",
    "end": "406480"
  },
  {
    "text": "determine what you can do unless we know who you are so that's why we're going to start with authentication as I said it's",
    "start": "406480",
    "end": "413740"
  },
  {
    "text": "who you are and kind of prove it some examples are like username password API",
    "start": "413740",
    "end": "418840"
  },
  {
    "text": "keys x.509 certificate to come up with",
    "start": "418840",
    "end": "423880"
  },
  {
    "start": "423000",
    "end": "423000"
  },
  {
    "text": "our own kind of specific requirements so these three are kind of generally what",
    "start": "423880",
    "end": "429070"
  },
  {
    "text": "we came up with authentication has to handle the identity resolution of computers in humans which I'll get into",
    "start": "429070",
    "end": "434620"
  },
  {
    "text": "in a second the identity should be unforgeable and we really want to avoid",
    "start": "434620",
    "end": "439900"
  },
  {
    "text": "impacting developer velocity it's it's very common for you know security to come in and say like you can't do this",
    "start": "439900",
    "end": "445890"
  },
  {
    "text": "but that puts a huge damper on developer productivity so yeah huge disclaimer",
    "start": "445890",
    "end": "452110"
  },
  {
    "text": "this you're you're gonna do this for your own organization you're gonna come up with a different set of requirements these are the ones that we came up with",
    "start": "452110",
    "end": "459870"
  },
  {
    "text": "to make things a little bit more concrete the the way a computer talks to another computer is something like this",
    "start": "459870",
    "end": "466450"
  },
  {
    "text": "you know you have some code you make a request to some other service and the human case is somebody just curls a an",
    "start": "466450",
    "end": "473680"
  },
  {
    "text": "endpoint and we use this to kind of figure out a metric for how much we're",
    "start": "473680",
    "end": "479260"
  },
  {
    "text": "impacting developers like how far away from this really simple use case or are we going to make it and that can kind of",
    "start": "479260",
    "end": "486040"
  },
  {
    "text": "determine how painful we're making it for developers what not to do is to say",
    "start": "486040",
    "end": "491380"
  },
  {
    "text": "like please read this really long os RFC and like become a security expert and",
    "start": "491380",
    "end": "496810"
  },
  {
    "text": "migrate all your clients and follow a separate process for workflow and authentication that human authentication",
    "start": "496810",
    "end": "502030"
  },
  {
    "text": "it's like nobody's got time for that",
    "start": "502030",
    "end": "506010"
  },
  {
    "text": "okay let's build some context I showed this diagram earlier it may seem",
    "start": "507660",
    "end": "512890"
  },
  {
    "start": "508000",
    "end": "508000"
  },
  {
    "text": "complicated but we can simplify it with some block diagrams basically we have a",
    "start": "512890",
    "end": "519339"
  },
  {
    "text": "bunch of containers running on a bunch of hosts we have a single what we called egress envoy used to be HT approach",
    "start": "519339",
    "end": "526329"
  },
  {
    "text": "a chia proxies swapped out for Anglais check out my own boycott talk from last year for if you wanna know how that runs",
    "start": "526329",
    "end": "532509"
  },
  {
    "text": "locally one per host and services use that to proxy their connections directly",
    "start": "532509",
    "end": "537610"
  },
  {
    "text": "to a service we don't support sidecar containers for historical reasons mais us which makes things more complicated",
    "start": "537610",
    "end": "546329"
  },
  {
    "text": "I lost my mic oh there we go let's see",
    "start": "546869",
    "end": "553239"
  },
  {
    "text": "what it takes to add authentication in a way that meets our requirements ok let's start with services authentication",
    "start": "553239",
    "end": "560470"
  },
  {
    "text": "authenticating no we don't think that we came up with an optimal solution from the start and we definitely didn't and",
    "start": "560470",
    "end": "566709"
  },
  {
    "text": "nor do we think that we have an optimal solution now it's an iterative process so here's kind of our iteration so the",
    "start": "566709",
    "end": "574360"
  },
  {
    "text": "first thing that we can do is nothing that's kind of the easiest thing to do you see our simplified view of a service",
    "start": "574360",
    "end": "581679"
  },
  {
    "text": "mesh here maybe you do some network segmentation create some walled gardens but inevitably somebody comes in and",
    "start": "581679",
    "end": "589360"
  },
  {
    "text": "they you know make a request and maybe get some of your data and maybe that's fine if you don't have any sensitive",
    "start": "589360",
    "end": "596230"
  },
  {
    "text": "data then by all means let your data flow free that's that's one option",
    "start": "596230",
    "end": "603429"
  },
  {
    "text": "unfortunately that's not a viable option for us so the next thing you might do is",
    "start": "603429",
    "end": "609669"
  },
  {
    "text": "come up with an ad-hoc solution for applications one solution we had was to pass a client identifier in the client",
    "start": "609669",
    "end": "616600"
  },
  {
    "text": "libraries we we had a common set of client libraries so this was a relatively easy solution the server can",
    "start": "616600",
    "end": "623799"
  },
  {
    "text": "look at the client identifier and say ok I know who you are you're what I call it service a here in some header but not",
    "start": "623799",
    "end": "633369"
  },
  {
    "text": "only is this easy to forge it was inconsistently implemented across different languages and frameworks we",
    "start": "633369",
    "end": "639759"
  },
  {
    "text": "did have common client libraries but we also had different client libraries for different languages we could sell solve",
    "start": "639759",
    "end": "645999"
  },
  {
    "text": "the forge ability problem by doing something like signing that would require extensive client and server",
    "start": "645999",
    "end": "653410"
  },
  {
    "text": "library support that doesn't really solve our satisfier and developer velocity requirement",
    "start": "653410",
    "end": "659700"
  },
  {
    "text": "okay let's now not trust the application to do anything we'll pull it out of the",
    "start": "659700",
    "end": "665680"
  },
  {
    "start": "660000",
    "end": "660000"
  },
  {
    "text": "application and put it into the proxy here we have like this workload identity",
    "start": "665680",
    "end": "671050"
  },
  {
    "text": "map it basically maps the IP of the workload to some identity and we could",
    "start": "671050",
    "end": "678550"
  },
  {
    "text": "put in some checks in our proxy to make sure that only the proxy can inject this",
    "start": "678550",
    "end": "684640"
  },
  {
    "text": "workload workload identity this actually kind of looks pretty familiar this looks",
    "start": "684640",
    "end": "690130"
  },
  {
    "text": "a lot like spiffy spire if you're familiar with it we kind of backed into that but yeah this is what we came up",
    "start": "690130",
    "end": "696400"
  },
  {
    "text": "with again to follow a theme we have a",
    "start": "696400",
    "end": "701920"
  },
  {
    "text": "slight problem if we look at our threat model it's still spoof able and the",
    "start": "701920",
    "end": "707170"
  },
  {
    "text": "server needs to validate it so so we we don't satisfy our unforgeable 'ti",
    "start": "707170",
    "end": "712360"
  },
  {
    "text": "requirement and we still need developers to do something that's fine one problem",
    "start": "712360",
    "end": "717700"
  },
  {
    "text": "at a time okay let's stick another envoy on the other side this is starting to",
    "start": "717700",
    "end": "724780"
  },
  {
    "text": "look like a service mesh buzzword check this is now what we call full mesh and",
    "start": "724780",
    "end": "734950"
  },
  {
    "text": "it's able to handle authentication on both sides without the application being involved at all that's great but you can",
    "start": "734950",
    "end": "743260"
  },
  {
    "text": "probably guess what's coming next devil emoji guy can just spoof the",
    "start": "743260",
    "end": "748330"
  },
  {
    "text": "identity of one service but the last step is really really easy",
    "start": "748330",
    "end": "753540"
  },
  {
    "text": "we put locks on our diagram and things are secure yeah we can we can add em TLS",
    "start": "753540",
    "end": "762220"
  },
  {
    "text": "to to make sure that we're only trusting this identity if it comes from an envoy that we trust the envoy proxies",
    "start": "762220",
    "end": "769780"
  },
  {
    "text": "authenticate against each other and glossed over time details but we're",
    "start": "769780",
    "end": "776260"
  },
  {
    "text": "multi-tenant so this is really important that we have that we have this on board that we can trust and makes the it puts",
    "start": "776260",
    "end": "782830"
  },
  {
    "text": "the identity in for us okay looking back",
    "start": "782830",
    "end": "788380"
  },
  {
    "text": "at our requirements we can handle identity for computers we'll see human second within our service mesh the",
    "start": "788380",
    "end": "794510"
  },
  {
    "text": "identity is not for chable because it's only trusted from envoy and we've done this without having developers do",
    "start": "794510",
    "end": "800390"
  },
  {
    "text": "anything so great job okay now on to",
    "start": "800390",
    "end": "805790"
  },
  {
    "text": "humans the story is very very similar similar starting from the beginning again",
    "start": "805790",
    "end": "811970"
  },
  {
    "text": "humans are curling services directly we had a walled garden to reduce the attack",
    "start": "811970",
    "end": "818360"
  },
  {
    "text": "surface but it was coarse-grained and kind of clunky so devil emoji guy comes",
    "start": "818360",
    "end": "823579"
  },
  {
    "text": "in he can hit the surfaces the first thing we did was again try to go with",
    "start": "823579",
    "end": "829850"
  },
  {
    "start": "826000",
    "end": "826000"
  },
  {
    "text": "the application so we had an application library that allows users to send their",
    "start": "829850",
    "end": "835730"
  },
  {
    "text": "credentials we wanted a way to provide an identity for a human user since we're",
    "start": "835730",
    "end": "841579"
  },
  {
    "text": "already using vault use what you know vault provided a token for the user that",
    "start": "841579",
    "end": "847910"
  },
  {
    "text": "we then sent to the service which used a library to validate that which it the way it did that as I talked to vault to",
    "start": "847910",
    "end": "854000"
  },
  {
    "text": "validate that token one interesting thing here is that we wrapped curl so",
    "start": "854000",
    "end": "860060"
  },
  {
    "text": "you'll notice like down there we have yelp curl which is our version and this",
    "start": "860060",
    "end": "866540"
  },
  {
    "text": "is nice actually because this abstracts away all of the details of like getting a token and passing it in the headers",
    "start": "866540",
    "end": "872930"
  },
  {
    "text": "and we'll see in a second that that that's kind of important one problem",
    "start": "872930",
    "end": "879230"
  },
  {
    "text": "with this solution is again it requires the service owners to do work and that doesn't satisfy our developer velocity",
    "start": "879230",
    "end": "887450"
  },
  {
    "text": "requirement so you should have guessed well I was going to say next we pulled",
    "start": "887450",
    "end": "893209"
  },
  {
    "start": "889000",
    "end": "889000"
  },
  {
    "text": "it out of the application and stuck it in envoy envoy has native support for",
    "start": "893209",
    "end": "899020"
  },
  {
    "text": "for JSON web tokens we hooked into our existing SSO which was octa so op what",
    "start": "899020",
    "end": "906470"
  },
  {
    "text": "octa does is it distributes short-lived tokens that envoy can then verify envoy",
    "start": "906470",
    "end": "913490"
  },
  {
    "text": "yeah natively supports this it grabs the jwk from octa and can verify the the",
    "start": "913490",
    "end": "920540"
  },
  {
    "text": "validity of the token and service a can not worry about this at all and they can",
    "start": "920540",
    "end": "928079"
  },
  {
    "text": "spend its request budget on things that it actually needs to do like business logic and again developers didn't even",
    "start": "928079",
    "end": "934379"
  },
  {
    "text": "know that we did this because we swapped out the implementation in this yelled curl abstraction so this was really nice",
    "start": "934379",
    "end": "940170"
  },
  {
    "text": "in terms of a migration path okay now we",
    "start": "940170",
    "end": "945990"
  },
  {
    "text": "have identity for humans the identity is unforgeable it has a short TTL so if it",
    "start": "945990",
    "end": "951899"
  },
  {
    "text": "gets stolen it can only be used for a short period of time and because of the",
    "start": "951899",
    "end": "957029"
  },
  {
    "text": "wrapper on the client side and envoy on the server side developers don't need to do anything and overall what do we have",
    "start": "957029",
    "end": "966990"
  },
  {
    "start": "964000",
    "end": "964000"
  },
  {
    "text": "we have authentication that's out of the application code so it will work with",
    "start": "966990",
    "end": "973620"
  },
  {
    "text": "any language or framework we have em TLS and we have an identity okay now what we",
    "start": "973620",
    "end": "980579"
  },
  {
    "text": "need to do something with the identity and that's what Daniel is going to talk about Thank You Ben for covering the",
    "start": "980579",
    "end": "988529"
  },
  {
    "text": "nuances and complexities of authentication so now that we know who you are with a strong degree of",
    "start": "988529",
    "end": "993630"
  },
  {
    "text": "confidence let's move on to the next piece of the puzzle which is are you actually allowed to do whatever it is you're trying to do let's look at the",
    "start": "993630",
    "end": "1000980"
  },
  {
    "text": "requirement the primary goal obviously is to prevent unauthorized access to our services we want to abide by the",
    "start": "1000980",
    "end": "1006350"
  },
  {
    "text": "principle of least privilege for sensitive services we don't want to forget about new endpoints and have them",
    "start": "1006350",
    "end": "1012110"
  },
  {
    "text": "be accidentally exposed the security features that we're going to build should be available for all services in",
    "start": "1012110",
    "end": "1018589"
  },
  {
    "text": "our service mesh we can't impact developer to productivity this is super",
    "start": "1018589",
    "end": "1023779"
  },
  {
    "text": "super important whatever we build won't be successful if it ends up being a burden on our engineering team and we",
    "start": "1023779",
    "end": "1030530"
  },
  {
    "text": "have to make sure that the policies are simple and easy to understand and easy to update so let's take a look at the",
    "start": "1030530",
    "end": "1037308"
  },
  {
    "text": "evolution much like authentication we didn't come upon the optimal solution from the get-go nor do we think we have",
    "start": "1037309",
    "end": "1042890"
  },
  {
    "text": "an optimal solution now it's super super iterative so let's talk about it",
    "start": "1042890",
    "end": "1048880"
  },
  {
    "text": "mmm where should I start let's do nothing first yeah so we could do nothing let's see",
    "start": "1048880",
    "end": "1056159"
  },
  {
    "text": "what that looks like service a wants data from service B that's fine",
    "start": "1056159",
    "end": "1061460"
  },
  {
    "text": "definitely moji person wants data from service B also fine devil emoji person",
    "start": "1061460",
    "end": "1068279"
  },
  {
    "text": "wants to bypass the infrastructure entirely and go straight to service B also fine that doesn't really sound fine",
    "start": "1068279",
    "end": "1075210"
  },
  {
    "text": "to me but this is pretty self-explanatory and also obviously unacceptable for sensitive workloads in",
    "start": "1075210",
    "end": "1081929"
  },
  {
    "text": "this scenario our friend the little devil emoji person can obtain serveth data from service B even if it's really",
    "start": "1081929",
    "end": "1087149"
  },
  {
    "text": "not appropriate for them to do that so let's look at how we did on our",
    "start": "1087149",
    "end": "1092549"
  },
  {
    "text": "requirements didn't do that one or that one or that one we didn't impact developer productivity cuz we didn't do",
    "start": "1092549",
    "end": "1099450"
  },
  {
    "text": "anything and the policies are non-existent so yeah that's pretty hard",
    "start": "1099450",
    "end": "1108869"
  },
  {
    "text": "fail let's try something else well the next logical progression is to put authorization into the application but",
    "start": "1108869",
    "end": "1117149"
  },
  {
    "start": "1112000",
    "end": "1112000"
  },
  {
    "text": "we can't exactly federate this out to all the other engineering teams not",
    "start": "1117149",
    "end": "1123299"
  },
  {
    "text": "everyone is a security fixture not oh and even if they were we don't really want to each team to reinvent the wheel",
    "start": "1123299",
    "end": "1129450"
  },
  {
    "text": "and we don't worse we don't want to leave room for user error in these re",
    "start": "1129450",
    "end": "1135110"
  },
  {
    "text": "implementations so let's come up with our own framework for authorization we'll design our own policy language",
    "start": "1135110",
    "end": "1142909"
  },
  {
    "text": "this policy language will be super simple and it will cover authorization semantics for HTTP requests we'll",
    "start": "1142909",
    "end": "1150690"
  },
  {
    "text": "provide a Python library that services can use to evaluate authorization decisions based on the incoming requests",
    "start": "1150690",
    "end": "1156600"
  },
  {
    "text": "and the policy data authorized request should be allowed on authorize requests",
    "start": "1156600",
    "end": "1162899"
  },
  {
    "text": "will be rejected it sounds like a slam dunk but let's talk about that custom",
    "start": "1162899",
    "end": "1170249"
  },
  {
    "start": "1169000",
    "end": "1169000"
  },
  {
    "text": "policy language super super simple for HTTP requests right so that's kind of",
    "start": "1170249",
    "end": "1175769"
  },
  {
    "text": "how it started and then someone came to us and said oh you guys are handling authorization for things can this handle",
    "start": "1175769",
    "end": "1182820"
  },
  {
    "text": "authorization for like our get a light servers to like yeah okay that makes sense fine",
    "start": "1182820",
    "end": "1189520"
  },
  {
    "text": "we're doing this sure another team then came around and said asked us about Cassandra clusters like hey we have Cassandra clusters we want we want",
    "start": "1189520",
    "end": "1195820"
  },
  {
    "text": "authorization semantics for that too like okay I mean I guess we're well we're at it sure fine yeah let's do that",
    "start": "1195820",
    "end": "1202000"
  },
  {
    "text": "and then someone was like yo dawg i heard you like policies we have a bunch of these AWS IAM policies that we keep",
    "start": "1202000",
    "end": "1209170"
  },
  {
    "text": "copy pasting all over the place like could we maybe use your new authorization framework as like a",
    "start": "1209170",
    "end": "1214780"
  },
  {
    "text": "solution to that problem and we're like hmm wait maybe this could be the end-all",
    "start": "1214780",
    "end": "1220720"
  },
  {
    "text": "be-all policy language and like baby we basically let's go creep get the best of",
    "start": "1220720",
    "end": "1226900"
  },
  {
    "text": "us and we kind of like nerd sniped ourselves basically and like in the end",
    "start": "1226900",
    "end": "1233380"
  },
  {
    "text": "it's so ironic because the the policy language ended up being too complex for the primary use case that we set out to",
    "start": "1233380",
    "end": "1239500"
  },
  {
    "text": "solve and feedback from all the users of this policy language was that it was",
    "start": "1239500",
    "end": "1245679"
  },
  {
    "text": "super confusing and like the best part about this story is that we never actually ended up flushing out any of",
    "start": "1245679",
    "end": "1251260"
  },
  {
    "text": "those use cases so like it didn't actually work very well for for anything",
    "start": "1251260",
    "end": "1256500"
  },
  {
    "text": "so let's see how we did on our requirements this time we achieved the primary goal of preventing unauthorized",
    "start": "1256500",
    "end": "1262570"
  },
  {
    "start": "1257000",
    "end": "1257000"
  },
  {
    "text": "access to services sweet least privilege maybe so the policy language was",
    "start": "1262570",
    "end": "1269770"
  },
  {
    "text": "designed in a way to support lease privilege however since service developers are on the hook to make code changes and",
    "start": "1269770",
    "end": "1276690"
  },
  {
    "text": "incorporate this library into their application code we leave room for user",
    "start": "1276690",
    "end": "1281800"
  },
  {
    "text": "error where they could make mistakes such as misinterpreting or ignoring the policy decisions and i mean we knew this",
    "start": "1281800",
    "end": "1290200"
  },
  {
    "text": "at the time but not every service is written in python and so therefore these authorization features are not going to be available for every service in our",
    "start": "1290200",
    "end": "1296800"
  },
  {
    "text": "service match we kind of justified this at the time saying that's fine we're",
    "start": "1296800",
    "end": "1301900"
  },
  {
    "text": "mostly Python shop we can we can just like do it on a case-by-case basis for which whichever other languages come up",
    "start": "1301900",
    "end": "1307650"
  },
  {
    "text": "but in reality like that doesn't really work you almost certainly end up with",
    "start": "1307650",
    "end": "1313030"
  },
  {
    "text": "subtle bugs and unavoidable maintenance overhead",
    "start": "1313030",
    "end": "1318270"
  },
  {
    "text": "so with this approach developers are required to make code changes to their services and they would actually have to",
    "start": "1318340",
    "end": "1326530"
  },
  {
    "text": "be on the hook to make ongoing updates so like if there's a new feature in this",
    "start": "1326530",
    "end": "1332830"
  },
  {
    "text": "authorization library they'd have to update their dependencies if there was a security patch they'd have to update",
    "start": "1332830",
    "end": "1338590"
  },
  {
    "text": "this dependency has anyone here ever tried to get a bunch of other teams to update even just like a minor patch",
    "start": "1338590",
    "end": "1343870"
  },
  {
    "text": "version of one of their dependencies yeah it's it's no fun it's just like a",
    "start": "1343870",
    "end": "1349090"
  },
  {
    "text": "cat herding yak shaving whichever analogy like kind of exercise and then",
    "start": "1349090",
    "end": "1354640"
  },
  {
    "text": "of course these developers had to ramp up on the complex policy language semantics so if I'm feeling generous I'm",
    "start": "1354640",
    "end": "1360820"
  },
  {
    "text": "gonna give us a b-minus on this whole approach and I think we can do better",
    "start": "1360820",
    "end": "1366510"
  },
  {
    "text": "where do you think we're gonna go next well so what if we put an envoy on the",
    "start": "1366510",
    "end": "1371710"
  },
  {
    "start": "1369000",
    "end": "1369000"
  },
  {
    "text": "other side on voice supports deferring authorization decisions to an external",
    "start": "1371710",
    "end": "1378130"
  },
  {
    "text": "entity via the X table z plug in the caller and identity request details are",
    "start": "1378130",
    "end": "1384460"
  },
  {
    "text": "passed along to this external entity and if the call should be authorized the requests will be routed to the target",
    "start": "1384460",
    "end": "1389710"
  },
  {
    "text": "service otherwise unauthorized callers would be rejected and never reached the",
    "start": "1389710",
    "end": "1395170"
  },
  {
    "text": "target service additionally my favorite part we can now update the network configuration so that requests can only",
    "start": "1395170",
    "end": "1401890"
  },
  {
    "text": "route through envoy and we can no longer go directly to services themselves so",
    "start": "1401890",
    "end": "1408040"
  },
  {
    "text": "now we have a very important decision to make do we extend our homegrown policy language solution to fit into this",
    "start": "1408040",
    "end": "1413410"
  },
  {
    "text": "environment or do we leverage some other open source technologies that might already do a lot of the heavy lifting for us since we already have a homegrown",
    "start": "1413410",
    "end": "1423760"
  },
  {
    "text": "policy framework it might sound really tempting to just use it here we could move the Python",
    "start": "1423760",
    "end": "1429460"
  },
  {
    "text": "library logic into its own standalone service and implement on boys ext off ze",
    "start": "1429460",
    "end": "1436300"
  },
  {
    "text": "interface besides if it ain't broke don't fix it and we invested a bunch of time and energy and cost into this this",
    "start": "1436300",
    "end": "1445660"
  },
  {
    "text": "custom solution of ours sunk cost fallacy and all that but it was broken we knew that there",
    "start": "1445660",
    "end": "1453570"
  },
  {
    "text": "were usability and scalability issues with our policy language additionally we knew that there were",
    "start": "1453570",
    "end": "1458580"
  },
  {
    "text": "other open-source general-purpose policy engines and it seemed worthwhile to shop",
    "start": "1458580",
    "end": "1463590"
  },
  {
    "text": "around and see what else was out there and in doing so we came upon the open",
    "start": "1463590",
    "end": "1468870"
  },
  {
    "text": "policy agent or OPA spoiler alert in case you didn't see the title of this talk we ended up using OPA",
    "start": "1468870",
    "end": "1476270"
  },
  {
    "text": "and why did we end up using OPA hope is a general-purpose high the general",
    "start": "1476270",
    "end": "1482490"
  },
  {
    "text": "purpose policy engine it has a high-level declarative language called reg oh I'm not gonna go into any details",
    "start": "1482490",
    "end": "1490320"
  },
  {
    "text": "about rigor I think there's been many many talks that have explained a lot of the policy semantics for OPA but",
    "start": "1490320",
    "end": "1495800"
  },
  {
    "text": "additionally there's tons of documentation and details and examples about the policy language semantics and",
    "start": "1495800",
    "end": "1501870"
  },
  {
    "text": "different types of applications and what I thought was really neat about it is that it OPA provides the ability to unit",
    "start": "1501870",
    "end": "1508890"
  },
  {
    "text": "test your policies so this is really great for functional verification of your authorization policies or",
    "start": "1508890",
    "end": "1514410"
  },
  {
    "text": "reproducing bugs that happen in production stuff like that and most importantly unlike our prior solution",
    "start": "1514410",
    "end": "1521130"
  },
  {
    "text": "OPA is open-source so there are forums for discussing policy design with other",
    "start": "1521130",
    "end": "1526380"
  },
  {
    "text": "folks who are solving the same problems that was really powerful for us but",
    "start": "1526380",
    "end": "1532110"
  },
  {
    "text": "there were also arguments against using policy the open policy agent not only did we write a bunch of code for that",
    "start": "1532110",
    "end": "1537930"
  },
  {
    "text": "for that policy engine that we've built we also have a bunch of policies that would mean to be migrated over to the",
    "start": "1537930",
    "end": "1544020"
  },
  {
    "text": "new OPA to work with OPA and now well opus policy language is really powerful",
    "start": "1544020",
    "end": "1549860"
  },
  {
    "text": "there's kind of a steep learning curve associated with the Rago language semantics and recall that a big",
    "start": "1549860",
    "end": "1557640"
  },
  {
    "text": "complaint from users of our custom solution was that it was a bit too complex so long story shorter we went",
    "start": "1557640",
    "end": "1565500"
  },
  {
    "text": "with OPA but we had to make sure that we could address these concerns and how did we do that we did that by building a",
    "start": "1565500",
    "end": "1571980"
  },
  {
    "text": "service that we call the OPA policy manager so one big problem we know that",
    "start": "1571980",
    "end": "1579270"
  },
  {
    "start": "1575000",
    "end": "1575000"
  },
  {
    "text": "Reger has a steep learning curve so we built an abstraction layer to express basic HTTP semantics and we",
    "start": "1579270",
    "end": "1586140"
  },
  {
    "text": "stuck to the scope and created a basic service called the OPA policy manager the OPA policy manager takes these basic",
    "start": "1586140",
    "end": "1592560"
  },
  {
    "text": "high-level HTTP rules from the extraction layer and it transpiled them",
    "start": "1592560",
    "end": "1597630"
  },
  {
    "text": "down to a format that's optimized for fast look ups in OPA with this approach",
    "start": "1597630",
    "end": "1603630"
  },
  {
    "text": "most engineers don't actually have to learn reg oh I mean I did Ben did a",
    "start": "1603630",
    "end": "1610260"
  },
  {
    "text": "couple of other folks on the infrastructure team did but hundreds of developers that write services don't",
    "start": "1610260",
    "end": "1615480"
  },
  {
    "text": "need to learn about the details or even know what over reggae is at the same",
    "start": "1615480",
    "end": "1622950"
  },
  {
    "text": "time our design allows for teams to write custom Borrego if they really want",
    "start": "1622950",
    "end": "1628230"
  },
  {
    "text": "to or if they really need to if there's some kind of scenario that's outside of that basic HTTP rule abstraction that we",
    "start": "1628230",
    "end": "1636000"
  },
  {
    "text": "built to cover 90% of their use cases so",
    "start": "1636000",
    "end": "1642720"
  },
  {
    "text": "what else is the policy manager do for us we didn't want to force developers to",
    "start": "1642720",
    "end": "1647730"
  },
  {
    "text": "migrate their policies from the old system to the new system nobody wants to do that so we realized that we could",
    "start": "1647730",
    "end": "1654810"
  },
  {
    "text": "have the OPA policy manager also trans pile these legacy policies down to the",
    "start": "1654810",
    "end": "1660810"
  },
  {
    "text": "same data structures because our new policies and that way we could kind of replace the wings in-flight behind the",
    "start": "1660810",
    "end": "1667200"
  },
  {
    "text": "scenes and the end users would be none the wiser they could continue to make updates in the in the confusing custom",
    "start": "1667200",
    "end": "1675630"
  },
  {
    "text": "policy language semantics Wow we worked on replacing the back end",
    "start": "1675630",
    "end": "1681000"
  },
  {
    "text": "and expose and bringing up the new the new HTTP rule in abstraction so where",
    "start": "1681000",
    "end": "1690180"
  },
  {
    "text": "does the OPA policy manager fit into our diagrams the OPA policy manager is down",
    "start": "1690180",
    "end": "1696210"
  },
  {
    "text": "there it basically runs every couple of minutes compile it combines these transpiled HTTP rules regular date about",
    "start": "1696210",
    "end": "1703890"
  },
  {
    "text": "users and services in our system these are combined into an archive file known",
    "start": "1703890",
    "end": "1709530"
  },
  {
    "text": "as a bundle and uploaded to an s3 bucket which we use as our bundle server",
    "start": "1709530",
    "end": "1715030"
  },
  {
    "text": "each open instance is configured to download this bundle when new versions are available so how did we do this time",
    "start": "1715030",
    "end": "1726700"
  },
  {
    "text": "I think we actually met all of our requirements we prevented our throws access to services we're doing lease",
    "start": "1726700",
    "end": "1734110"
  },
  {
    "text": "privilege we deny by default this is available for all services in our surface mesh regardless of what language those services are written in developers",
    "start": "1734110",
    "end": "1742270"
  },
  {
    "text": "productivity is not impacted and the policies are easy to use and easy to",
    "start": "1742270",
    "end": "1747430"
  },
  {
    "text": "understand developers are stoked so putting this all together",
    "start": "1747430",
    "end": "1752440"
  },
  {
    "start": "1751000",
    "end": "1751000"
  },
  {
    "text": "the authentication layer gives us a strong guarantee of the caller identity and the authorization layer powered by",
    "start": "1752440",
    "end": "1759250"
  },
  {
    "text": "OPA decides whether the caller is allowed to hit a certain service endpoint now every service gets this",
    "start": "1759250",
    "end": "1766120"
  },
  {
    "text": "essentially for free this makes Yelp Services secure by default which is awesome I think that's",
    "start": "1766120",
    "end": "1773050"
  },
  {
    "text": "a buzzword too buzz phrase so where are we now OPA is deployed to all hosts in",
    "start": "1773050",
    "end": "1781270"
  },
  {
    "text": "our service mesh sensitive services are protected by authorization rules that are simple to express and understand and",
    "start": "1781270",
    "end": "1788670"
  },
  {
    "text": "we have ample monitoring and alerting solutions on this data so we aggregate",
    "start": "1788670",
    "end": "1795850"
  },
  {
    "text": "decision logs from each OPA instance stream that data into Splunk which enables us to monitor and alert so that",
    "start": "1795850",
    "end": "1801970"
  },
  {
    "text": "we can detect malicious activity or miss configurations and here's a screenshot",
    "start": "1801970",
    "end": "1810490"
  },
  {
    "start": "1809000",
    "end": "1809000"
  },
  {
    "text": "of one of those dashboards this is the authorization results dashboard it allows us to pivot and filter on various",
    "start": "1810490",
    "end": "1817270"
  },
  {
    "text": "dimensions so that we can see the distribution of authorization results we'd probably want to keep a close eye",
    "start": "1817270",
    "end": "1823630"
  },
  {
    "text": "on this when we roll out a new service or a new versions of our policies or do like major refactoring to the OPA policy",
    "start": "1823630",
    "end": "1829900"
  },
  {
    "text": "manager something like that so future",
    "start": "1829900",
    "end": "1838000"
  },
  {
    "start": "1835000",
    "end": "1835000"
  },
  {
    "text": "ideas that's where we are today so for future ideas in our service mesh we",
    "start": "1838000",
    "end": "1844360"
  },
  {
    "text": "think it'd be really really cool to do some kind of phased policy rollouts where like the when policy updates are made they first",
    "start": "1844360",
    "end": "1851570"
  },
  {
    "text": "rollout to a small percentage of canary open instances and then we could have",
    "start": "1851570",
    "end": "1857450"
  },
  {
    "text": "you know the service mash dude to smart 1% load-balancing to those new open",
    "start": "1857450",
    "end": "1863629"
  },
  {
    "text": "instances and then we can you know evaluate what was the impact of those",
    "start": "1863629",
    "end": "1868700"
  },
  {
    "text": "policy changes this would be especially useful for major Rico or policy refactoring a lot of the pieces are kind",
    "start": "1868700",
    "end": "1876169"
  },
  {
    "text": "of there OPA supports like a configurable prefix and path for where to load its bundle file from envoy can",
    "start": "1876169",
    "end": "1883700"
  },
  {
    "text": "pretty much easily support it to I think with some minor updates or to control playing really a hard part it would be",
    "start": "1883700",
    "end": "1890210"
  },
  {
    "text": "the automatic promotion logic like how are you sure that the increase in denies",
    "start": "1890210",
    "end": "1896289"
  },
  {
    "text": "was good or bad kind of depends on and who you're asking and you can actually",
    "start": "1896289",
    "end": "1901519"
  },
  {
    "text": "kind of have to have the context and look at the logs to know what's going on to know if you know 5% increase in",
    "start": "1901519",
    "end": "1907279"
  },
  {
    "text": "denies is a good thing or a bad thing so for authentication in the future we",
    "start": "1907279",
    "end": "1915409"
  },
  {
    "text": "would like to improve our identity attestation and do something more sophisticated than that IP based",
    "start": "1915409",
    "end": "1921169"
  },
  {
    "text": "identity map there are some problems with that and race conditions another other things about fixing that problem",
    "start": "1921169",
    "end": "1929779"
  },
  {
    "text": "will probably require major changes to our infrastructure identity at the station is really hard when you're in a multi-tenancy environment",
    "start": "1929779",
    "end": "1938350"
  },
  {
    "start": "1938000",
    "end": "1938000"
  },
  {
    "text": "those were the future ideas for within the context of our service mesh we have",
    "start": "1941289",
    "end": "1946850"
  },
  {
    "text": "other future ideas for additional use cases for using OPA so we use all these",
    "start": "1946850",
    "end": "1953210"
  },
  {
    "text": "different technologies which I'm sure a lot of you do to kubernetes docker SSH",
    "start": "1953210",
    "end": "1958519"
  },
  {
    "text": "you know terraform Kafka all these all these different technologies that we use on a day to day basis",
    "start": "1958519",
    "end": "1963980"
  },
  {
    "text": "they all have pluggable authorization components and if essentially any system",
    "start": "1963980",
    "end": "1971029"
  },
  {
    "text": "that has a pluggable authorization component can leverage the power of OPA as the backend for doing this",
    "start": "1971029",
    "end": "1976950"
  },
  {
    "text": "making those authorization decisions and we think that's really neat and we can't wait to you know explore more of these",
    "start": "1976950",
    "end": "1983190"
  },
  {
    "text": "use cases and since OPA is lightweight and each operationally and each use case",
    "start": "1983190",
    "end": "1990150"
  },
  {
    "text": "likely calls for unique regular policy and customer facing obstruction layers we can evaluate all of these on a",
    "start": "1990150",
    "end": "1997680"
  },
  {
    "text": "case-by-case basis and we don't have to boil the ocean and come up with like one huge crazy policy semantics that covers",
    "start": "1997680",
    "end": "2006110"
  },
  {
    "text": "all those different use cases and we think that's really cool so let's",
    "start": "2006110",
    "end": "2012290"
  },
  {
    "start": "2010000",
    "end": "2010000"
  },
  {
    "text": "summarize some of the key takeaways by moving security to the service mesh and providing a clean and simple API for",
    "start": "2012290",
    "end": "2018440"
  },
  {
    "text": "developers to express access control semantics our security posture is dramatically improved because we took",
    "start": "2018440",
    "end": "2024380"
  },
  {
    "text": "out most of the effort for developers we could not have done any of this without incremental changes incremental changes",
    "start": "2024380",
    "end": "2030650"
  },
  {
    "text": "worth the key to making progress towards the end goal we couldn't introduce a bunch of huge changes and force",
    "start": "2030650",
    "end": "2036020"
  },
  {
    "text": "developers to react to the major infrastructure ellipse however do note and be careful that with incremental",
    "start": "2036020",
    "end": "2042620"
  },
  {
    "text": "changes sometimes they're associated with migrations and so to the extent",
    "start": "2042620",
    "end": "2048560"
  },
  {
    "text": "that you can try to automate those migrations so that your end users don't have to incremental fast iterative",
    "start": "2048560",
    "end": "2056360"
  },
  {
    "text": "deployment but if you're if your engineers have to migrate things of every month or so they're just gonna not",
    "start": "2056360",
    "end": "2062300"
  },
  {
    "text": "listen to you or take any new versions of your stuff they're gonna stay on that classic policy language forever",
    "start": "2062300",
    "end": "2070220"
  },
  {
    "text": "so really important build your use case on top of a platform rather than building a platform for your use case",
    "start": "2070220",
    "end": "2076790"
  },
  {
    "text": "remember that we had a very simple use case and we prematurely try to generalize it ultimately building",
    "start": "2076790",
    "end": "2081800"
  },
  {
    "text": "something that didn't really fit for any of the use cases to that effect we feel",
    "start": "2081800",
    "end": "2086929"
  },
  {
    "text": "that OPA is a really powerful building block and we'll be building a lot more use cases on top of it that's the end",
    "start": "2086929",
    "end": "2096239"
  },
  {
    "text": "[Applause]",
    "start": "2096239",
    "end": "2105209"
  },
  {
    "text": "quick question you mentioned about Cassandra how did you get on Z for Cassandra - envoy and second question",
    "start": "2106230",
    "end": "2113050"
  },
  {
    "text": "the long way how did it get the certificate to begin with yeah so for",
    "start": "2113050",
    "end": "2119650"
  },
  {
    "text": "Cassandra to answer your question we did not use Envoy for authorization for",
    "start": "2119650",
    "end": "2125920"
  },
  {
    "text": "Cassandra it's a it's using its own separate bespoke infrastructure for that the",
    "start": "2125920",
    "end": "2131530"
  },
  {
    "text": "second question was about the certificate we we have a that's kind of",
    "start": "2131530",
    "end": "2137950"
  },
  {
    "text": "the hard part is the PKI back-end that to distribute the certificates but our",
    "start": "2137950",
    "end": "2143560"
  },
  {
    "text": "control plane can distribute these certificates we're not currently using SD s the secret discovery service in in",
    "start": "2143560",
    "end": "2150250"
  },
  {
    "text": "Envoy but that is one kind of pretty straightforward way to distribute those",
    "start": "2150250",
    "end": "2155860"
  },
  {
    "text": "certificates hey I wonder about the opal",
    "start": "2155860",
    "end": "2161560"
  },
  {
    "text": "bundle is this like one bundle to rule them all or each server has its own bond",
    "start": "2161560",
    "end": "2167080"
  },
  {
    "text": "oh and how do you decide which bother you get from s3 yeah so the the OPA",
    "start": "2167080",
    "end": "2176410"
  },
  {
    "text": "instances themselves are configurable for which like where they download a bundle from and so we have environment",
    "start": "2176410",
    "end": "2185080"
  },
  {
    "text": "specific bundles basically like we have like a non prod and a prod yeah does",
    "start": "2185080",
    "end": "2192760"
  },
  {
    "text": "that does that answer the question yeah hey so you use the my extra Sheen I",
    "start": "2192760",
    "end": "2199930"
  },
  {
    "text": "guess we all introduced another network or request so what's a QP is and how do",
    "start": "2199930",
    "end": "2206650"
  },
  {
    "text": "you handle the extra ananthan see here gotcha I don't have numbers we didn't load test",
    "start": "2206650",
    "end": "2214810"
  },
  {
    "text": "it but it the OPA runs right alongside on voice so it's not it's not making an",
    "start": "2214810",
    "end": "2221020"
  },
  {
    "text": "external network request it's it's making a request locally to the instance of OPA that's running yeah didn't check",
    "start": "2221020",
    "end": "2229480"
  },
  {
    "text": "the the QPS I didn't really detect any latency degradation is at least on our kind of",
    "start": "2229480",
    "end": "2236700"
  },
  {
    "text": "an order of magnitude related see yeah so it's not it's not a centralized OPA somewhere else there's a there's an open",
    "start": "2236700",
    "end": "2243869"
  },
  {
    "text": "on each server so that hop is going through the local host I have a question",
    "start": "2243869",
    "end": "2249510"
  },
  {
    "text": "the OPA policy manager the policy manager it's basically migrating the",
    "start": "2249510",
    "end": "2257819"
  },
  {
    "text": "policies you know sort of like those",
    "start": "2257819",
    "end": "2263069"
  },
  {
    "text": "people who doesn't know reco you know it's doing this so how do you validate like once it's doing this migration if",
    "start": "2263069",
    "end": "2269849"
  },
  {
    "text": "it's successful or it's done successfully does it any validation process to it secondly what is an OPA",
    "start": "2269849",
    "end": "2275670"
  },
  {
    "text": "instance if you can define that and also",
    "start": "2275670",
    "end": "2281250"
  },
  {
    "text": "lastly is this open policy manager that you guys are not it's going to be open sourced or something I'll go backwards",
    "start": "2281250",
    "end": "2289559"
  },
  {
    "text": "it's not gonna be open source most likely I mean it's it's it's like a handful of lines of Python that just do",
    "start": "2289559",
    "end": "2296369"
  },
  {
    "text": "like some basic translation from one yeah Moe syntax that made sense for us",
    "start": "2296369",
    "end": "2302549"
  },
  {
    "text": "into something that makes sense for our regular policy so we don't have plans to open source it I'm happy to share like",
    "start": "2302549",
    "end": "2308309"
  },
  {
    "text": "what the code looks like it's it's really straightforward what is an open",
    "start": "2308309",
    "end": "2313319"
  },
  {
    "text": "instance so you can install so open",
    "start": "2313319",
    "end": "2319680"
  },
  {
    "text": "written and go so opens just a single binary and OPA has a server mode so you can just run the OPA binary - Jeff",
    "start": "2319680",
    "end": "2326069"
  },
  {
    "text": "server and it runs as a as a server and it has a config file that can pull you",
    "start": "2326069",
    "end": "2331170"
  },
  {
    "text": "know it's config it's bundles and everything so that is an open instance so there's a there's a separate instance",
    "start": "2331170",
    "end": "2336750"
  },
  {
    "text": "of OPA running on each host in our service mesh the first question was",
    "start": "2336750",
    "end": "2342720"
  },
  {
    "text": "about the policy management how do we validate the policy we we currently",
    "start": "2342720",
    "end": "2351270"
  },
  {
    "text": "don't I believe I think we we usually just rolled them out to - dev the dev",
    "start": "2351270",
    "end": "2356549"
  },
  {
    "text": "environment before we roll them out to prod but we did have a design for for",
    "start": "2356549",
    "end": "2363000"
  },
  {
    "text": "running unit tests against it mainly for regression tests we actually do have regression tests in",
    "start": "2363000",
    "end": "2370130"
  },
  {
    "text": "the control plane testing but that does not include real policies but that was",
    "start": "2370130",
    "end": "2377390"
  },
  {
    "text": "definitely something that was very attractive about APA is the unit testing framework yeah and that that dashboard",
    "start": "2377390",
    "end": "2382760"
  },
  {
    "text": "that shows the distribution of denies or the distribution of authorization",
    "start": "2382760",
    "end": "2388520"
  },
  {
    "text": "results that was definitely instrumental in like invalidating some of some of the",
    "start": "2388520",
    "end": "2393800"
  },
  {
    "text": "semantics of the legacy policy stuff to the new policy stuff and making sure that we got similar results across like",
    "start": "2393800",
    "end": "2400430"
  },
  {
    "text": "different environments one of which was using the old stuff and one that was using the new stuff fellas I'm sorry but",
    "start": "2400430",
    "end": "2409550"
  },
  {
    "text": "it's time to wrap wait we'll take your question go down here thanks everybody thank you",
    "start": "2409550",
    "end": "2416890"
  }
]