[
  {
    "text": "hey good morning uh I am Tamil Mani so",
    "start": "160",
    "end": "3360"
  },
  {
    "text": "I'm an engineering manager in Azure",
    "start": "3360",
    "end": "5040"
  },
  {
    "text": "container networking team and uh this is",
    "start": "5040",
    "end": "7600"
  },
  {
    "text": "my colleague Will and I will let him",
    "start": "7600",
    "end": "9280"
  },
  {
    "text": "introduce himself",
    "start": "9280",
    "end": "12000"
  },
  {
    "text": "hey I'm Will from the Azure Kubernetes",
    "start": "12000",
    "end": "14240"
  },
  {
    "text": "team",
    "start": "14240",
    "end": "17119"
  },
  {
    "text": "hey let's get",
    "start": "17119",
    "end": "18439"
  },
  {
    "text": "started so let's first look at how pod",
    "start": "18439",
    "end": "22240"
  },
  {
    "text": "routing works in a Kubernetes",
    "start": "22240",
    "end": "23920"
  },
  {
    "text": "environment so consider part A running",
    "start": "23920",
    "end": "26720"
  },
  {
    "text": "in node A and there is a part B running",
    "start": "26720",
    "end": "29119"
  },
  {
    "text": "in node B and uh if pod A wants to talk",
    "start": "29119",
    "end": "32000"
  },
  {
    "text": "to part B then the traffic has to leave",
    "start": "32000",
    "end": "34800"
  },
  {
    "text": "through the pod nick first and then it",
    "start": "34800",
    "end": "37120"
  },
  {
    "text": "has to leave the node eress through the",
    "start": "37120",
    "end": "39280"
  },
  {
    "text": "node nick and something happens in the",
    "start": "39280",
    "end": "42719"
  },
  {
    "text": "host the packet gets delivered to the",
    "start": "42719",
    "end": "44800"
  },
  {
    "text": "destination node and then to the",
    "start": "44800",
    "end": "47039"
  },
  {
    "text": "destination part so Celium supports two",
    "start": "47039",
    "end": "50320"
  },
  {
    "text": "routing modes today one is tunnel",
    "start": "50320",
    "end": "52559"
  },
  {
    "text": "routing and other is native routing so",
    "start": "52559",
    "end": "54960"
  },
  {
    "text": "in case of tunnel routing so the",
    "start": "54960",
    "end": "57199"
  },
  {
    "text": "underlying host doesn't need to know how",
    "start": "57199",
    "end": "60079"
  },
  {
    "text": "to route the I mean it doesn't know how",
    "start": "60079",
    "end": "62160"
  },
  {
    "text": "to route the part traffic so in this",
    "start": "62160",
    "end": "64158"
  },
  {
    "text": "case CLA manages an IPAM and it knows",
    "start": "64159",
    "end": "67040"
  },
  {
    "text": "which part resides on which node so it",
    "start": "67040",
    "end": "69360"
  },
  {
    "text": "has this mapping so when a packet leaves",
    "start": "69360",
    "end": "71600"
  },
  {
    "text": "a VM it adds this header corresponding",
    "start": "71600",
    "end": "74080"
  },
  {
    "text": "header of node ips source IP and",
    "start": "74080",
    "end": "76159"
  },
  {
    "text": "destination IP wherever the destination",
    "start": "76159",
    "end": "77680"
  },
  {
    "text": "part is and then uh the inner packet",
    "start": "77680",
    "end": "80080"
  },
  {
    "text": "will be the actual part source with the",
    "start": "80080",
    "end": "82320"
  },
  {
    "text": "part destination IP so to the host it",
    "start": "82320",
    "end": "85600"
  },
  {
    "text": "appears like node to node traffic so the",
    "start": "85600",
    "end": "89600"
  },
  {
    "text": "packet gets delivered to the node and",
    "start": "89600",
    "end": "92079"
  },
  {
    "text": "then it will get decapsulated on the",
    "start": "92079",
    "end": "93840"
  },
  {
    "text": "destination node meaning the outer",
    "start": "93840",
    "end": "96079"
  },
  {
    "text": "header will be removed like the node",
    "start": "96079",
    "end": "98000"
  },
  {
    "text": "source node destination IP will be",
    "start": "98000",
    "end": "99600"
  },
  {
    "text": "removed and then the inner packet will",
    "start": "99600",
    "end": "101119"
  },
  {
    "text": "be delivered to the the destination part",
    "start": "101119",
    "end": "103600"
  },
  {
    "text": "so if you look at the packet metadata",
    "start": "103600",
    "end": "106159"
  },
  {
    "text": "below that that's what it depicts so the",
    "start": "106159",
    "end": "108880"
  },
  {
    "text": "outer header will be the node source",
    "start": "108880",
    "end": "110640"
  },
  {
    "text": "node destination IP and there's a vxlan",
    "start": "110640",
    "end": "112720"
  },
  {
    "text": "header and then the inner packet will",
    "start": "112720",
    "end": "114960"
  },
  {
    "text": "have the part source and part",
    "start": "114960",
    "end": "116479"
  },
  {
    "text": "destination IP and then the actual data",
    "start": "116479",
    "end": "118799"
  },
  {
    "text": "so in tunnel mode there is an overhead",
    "start": "118799",
    "end": "121119"
  },
  {
    "text": "of encapsulation and decapsulation",
    "start": "121119",
    "end": "123960"
  },
  {
    "text": "packet and if you look at native routing",
    "start": "123960",
    "end": "126799"
  },
  {
    "text": "so the pod ips are routable so the",
    "start": "126799",
    "end": "128879"
  },
  {
    "text": "underlying host knows how to route the",
    "start": "128879",
    "end": "131039"
  },
  {
    "text": "pod traffic so there is no encap or",
    "start": "131039",
    "end": "134319"
  },
  {
    "text": "decap required here so most of the cloud",
    "start": "134319",
    "end": "136080"
  },
  {
    "text": "providers use native routing because the",
    "start": "136080",
    "end": "138480"
  },
  {
    "text": "IPs are assigned from the cloud provider",
    "start": "138480",
    "end": "140319"
  },
  {
    "text": "network so the host knows how to route",
    "start": "140319",
    "end": "142239"
  },
  {
    "text": "the pod IPs so in this case it's just",
    "start": "142239",
    "end": "144720"
  },
  {
    "text": "direct routing from part A to part B and",
    "start": "144720",
    "end": "147040"
  },
  {
    "text": "there is no encap or decap required and",
    "start": "147040",
    "end": "149520"
  },
  {
    "text": "if you look at the packet metadata again",
    "start": "149520",
    "end": "152400"
  },
  {
    "text": "so the outrider is missing it's just the",
    "start": "152400",
    "end": "154480"
  },
  {
    "text": "plane the regular packet with the part",
    "start": "154480",
    "end": "156800"
  },
  {
    "text": "source and the part destination here so",
    "start": "156800",
    "end": "159760"
  },
  {
    "text": "now let's just look at the performance",
    "start": "159760",
    "end": "161519"
  },
  {
    "text": "numbers here which we did with the",
    "start": "161519",
    "end": "163200"
  },
  {
    "text": "tunnel routing versus native routing in",
    "start": "163200",
    "end": "164720"
  },
  {
    "text": "Azure so Azure overlay is running in",
    "start": "164720",
    "end": "167040"
  },
  {
    "text": "native routing and VXLAN based overlay",
    "start": "167040",
    "end": "169040"
  },
  {
    "text": "is just the tunnel mode and we could see",
    "start": "169040",
    "end": "171360"
  },
  {
    "text": "like there is 20% improvement in through",
    "start": "171360",
    "end": "173920"
  },
  {
    "text": "portut and also the the CPU cycles where",
    "start": "173920",
    "end": "178000"
  },
  {
    "text": "you the the usage of CPU is very less in",
    "start": "178000",
    "end": "180239"
  },
  {
    "text": "case of native routing here and um for",
    "start": "180239",
    "end": "183040"
  },
  {
    "text": "for and it's obviously like higher in",
    "start": "183040",
    "end": "185440"
  },
  {
    "text": "case of tunnel because of the cycles",
    "start": "185440",
    "end": "187680"
  },
  {
    "text": "involved in encapping and decapping the",
    "start": "187680",
    "end": "189400"
  },
  {
    "text": "packet so clearly the native routing is",
    "start": "189400",
    "end": "192560"
  },
  {
    "text": "the winner here so now comes the problem",
    "start": "192560",
    "end": "195360"
  },
  {
    "text": "of how we integrate so the benefits of",
    "start": "195360",
    "end": "199040"
  },
  {
    "text": "both worlds right so we see H routing is",
    "start": "199040",
    "end": "201280"
  },
  {
    "text": "performing better in previous and we and",
    "start": "201280",
    "end": "204319"
  },
  {
    "text": "there are ton of features that Celium",
    "start": "204319",
    "end": "205920"
  },
  {
    "text": "supports too so how can we bring this",
    "start": "205920",
    "end": "208239"
  },
  {
    "text": "cloud provider network to the Celium and",
    "start": "208239",
    "end": "210640"
  },
  {
    "text": "have the benefits of both the worlds",
    "start": "210640",
    "end": "212480"
  },
  {
    "text": "here so let's now look at the existing",
    "start": "212480",
    "end": "214720"
  },
  {
    "text": "IPA modes and see like if we can",
    "start": "214720",
    "end": "216560"
  },
  {
    "text": "leverage anything out of it so Celium",
    "start": "216560",
    "end": "220159"
  },
  {
    "text": "supports these IPM modes today and if",
    "start": "220159",
    "end": "222239"
  },
  {
    "text": "you look at Kubernetes host scope it may",
    "start": "222239",
    "end": "224959"
  },
  {
    "text": "help us but the problem is it doesn't",
    "start": "224959",
    "end": "226879"
  },
  {
    "text": "support dynamic IP allocation which is",
    "start": "226879",
    "end": "228799"
  },
  {
    "text": "one of our scenarios if it's just C",
    "start": "228799",
    "end": "231280"
  },
  {
    "text": "based scenarios we can just configure",
    "start": "231280",
    "end": "233360"
  },
  {
    "text": "the node cedar in the node object and",
    "start": "233360",
    "end": "236879"
  },
  {
    "text": "have unique prefix for each node and",
    "start": "236879",
    "end": "238480"
  },
  {
    "text": "then get done with it but we also have a",
    "start": "238480",
    "end": "240560"
  },
  {
    "text": "scenario where we need to support",
    "start": "240560",
    "end": "241680"
  },
  {
    "text": "dynamic IP allocation and if you look at",
    "start": "241680",
    "end": "244400"
  },
  {
    "text": "the external IPAM so this IPAM is like",
    "start": "244400",
    "end": "248959"
  },
  {
    "text": "uh because IPs are coming from the cloud",
    "start": "248959",
    "end": "250720"
  },
  {
    "text": "network we have to give it give through",
    "start": "250720",
    "end": "252239"
  },
  {
    "text": "the external external IPAM",
    "start": "252239",
    "end": "255320"
  },
  {
    "text": "so and you can see there is an Azure IPM",
    "start": "255320",
    "end": "258079"
  },
  {
    "text": "already so this should work for our case",
    "start": "258079",
    "end": "260239"
  },
  {
    "text": "right like we just need to integrate",
    "start": "260239",
    "end": "261440"
  },
  {
    "text": "Azure IPM here but this uh let's let's",
    "start": "261440",
    "end": "265680"
  },
  {
    "text": "look at in the next upcoming slides what",
    "start": "265680",
    "end": "268160"
  },
  {
    "text": "this a how azure IPM is managed in",
    "start": "268160",
    "end": "270400"
  },
  {
    "text": "Celium and why it doesn't work in our",
    "start": "270400",
    "end": "272720"
  },
  {
    "text": "case",
    "start": "272720",
    "end": "274720"
  },
  {
    "text": "so this is just thing I borrowed from",
    "start": "274720",
    "end": "277120"
  },
  {
    "text": "the Celium docs thanks for whoever done",
    "start": "277120",
    "end": "279120"
  },
  {
    "text": "this",
    "start": "279120",
    "end": "280840"
  },
  {
    "text": "ah so so if you look at the right side",
    "start": "280840",
    "end": "284000"
  },
  {
    "text": "of the picture the CM operator the CM",
    "start": "284000",
    "end": "286960"
  },
  {
    "text": "operator one which interacts with the",
    "start": "286960",
    "end": "288720"
  },
  {
    "text": "Azure and gets the list of IPs from the",
    "start": "288720",
    "end": "291360"
  },
  {
    "text": "cloud provider network so it uses",
    "start": "291360",
    "end": "294000"
  },
  {
    "text": "leverages the Azure SDK and then it gets",
    "start": "294000",
    "end": "296800"
  },
  {
    "text": "the IPS like whatever the IPs we have to",
    "start": "296800",
    "end": "298639"
  },
  {
    "text": "assign for the part from the um from the",
    "start": "298639",
    "end": "301840"
  },
  {
    "text": "Azure from the Azure network so once the",
    "start": "301840",
    "end": "304720"
  },
  {
    "text": "operator Celmium operator gets a list of",
    "start": "304720",
    "end": "306240"
  },
  {
    "text": "IPs it creates a Celium node object and",
    "start": "306240",
    "end": "309680"
  },
  {
    "text": "if you look at Celium node object it has",
    "start": "309680",
    "end": "311280"
  },
  {
    "text": "a list of all the available IPs and uh",
    "start": "311280",
    "end": "314800"
  },
  {
    "text": "it publishes this CRD to uh uh to each",
    "start": "314800",
    "end": "319280"
  },
  {
    "text": "agent right so each agent watching on",
    "start": "319280",
    "end": "321120"
  },
  {
    "text": "the specific Celium node CRD gets this",
    "start": "321120",
    "end": "323199"
  },
  {
    "text": "list of IPs and then assign these IPs to",
    "start": "323199",
    "end": "325680"
  },
  {
    "text": "the patch so it uses the Celium Node CD",
    "start": "325680",
    "end": "328000"
  },
  {
    "text": "object itself to keep track of what are",
    "start": "328000",
    "end": "329680"
  },
  {
    "text": "the IPs available and what are the IPs",
    "start": "329680",
    "end": "331600"
  },
  {
    "text": "assigned to the patch so let's look at",
    "start": "331600",
    "end": "334080"
  },
  {
    "text": "why this this like uh this doesn't work",
    "start": "334080",
    "end": "337120"
  },
  {
    "text": "for us uh when we integrate with CM with",
    "start": "337120",
    "end": "339280"
  },
  {
    "text": "Azure here so this corresponding stack",
    "start": "339280",
    "end": "342720"
  },
  {
    "text": "which the CM operator uses is a legacy",
    "start": "342720",
    "end": "344800"
  },
  {
    "text": "stack and it's not a scalable one for",
    "start": "344800",
    "end": "346880"
  },
  {
    "text": "container networking so initially those",
    "start": "346880",
    "end": "349280"
  },
  {
    "text": "things were created for a different",
    "start": "349280",
    "end": "350560"
  },
  {
    "text": "purpose but it got repurposed for",
    "start": "350560",
    "end": "352000"
  },
  {
    "text": "container networking this is not a",
    "start": "352000",
    "end": "353840"
  },
  {
    "text": "scalable",
    "start": "353840",
    "end": "355000"
  },
  {
    "text": "solution and uh so it's vendor specific",
    "start": "355000",
    "end": "358800"
  },
  {
    "text": "code now right so now the operator has",
    "start": "358800",
    "end": "360960"
  },
  {
    "text": "this Azure SDK dependency and it's get",
    "start": "360960",
    "end": "363840"
  },
  {
    "text": "out into the CDM codebase and it becomes",
    "start": "363840",
    "end": "365680"
  },
  {
    "text": "the burden on the CDM side to maintain",
    "start": "365680",
    "end": "368400"
  },
  {
    "text": "this code so now if anybody wants to",
    "start": "368400",
    "end": "371199"
  },
  {
    "text": "bring their own IPAM or their own",
    "start": "371199",
    "end": "374240"
  },
  {
    "text": "integrate cloud provider specific code",
    "start": "374240",
    "end": "376080"
  },
  {
    "text": "then each cloud provider will have their",
    "start": "376080",
    "end": "378000"
  },
  {
    "text": "own version of rendering into the CM",
    "start": "378000",
    "end": "379520"
  },
  {
    "text": "code base which will make maintaining",
    "start": "379520",
    "end": "381360"
  },
  {
    "text": "this code bit harder right on the",
    "start": "381360",
    "end": "384400"
  },
  {
    "text": "support cost right so if any issues",
    "start": "384400",
    "end": "386000"
  },
  {
    "text": "comes due to this Azure SDK it's always",
    "start": "386000",
    "end": "389120"
  },
  {
    "text": "raised in the Celium side but Celium",
    "start": "389120",
    "end": "391600"
  },
  {
    "text": "doesn't need to worry about the issues",
    "start": "391600",
    "end": "393600"
  },
  {
    "text": "with the cloud provider specific code at",
    "start": "393600",
    "end": "395120"
  },
  {
    "text": "all it becomes a maintenance",
    "start": "395120",
    "end": "396319"
  },
  {
    "text": "responsibility of Celium to keep the",
    "start": "396319",
    "end": "398319"
  },
  {
    "text": "SDKs updated",
    "start": "398319",
    "end": "399680"
  },
  {
    "text": "make sure it's CVs are addressed and",
    "start": "399680",
    "end": "401840"
  },
  {
    "text": "makes sure it's compliant so it's",
    "start": "401840",
    "end": "403680"
  },
  {
    "text": "additional operational complexity for CM",
    "start": "403680",
    "end": "405960"
  },
  {
    "text": "side and even if I bring the",
    "start": "405960",
    "end": "408080"
  },
  {
    "text": "best-in-class of stack even if I bring a",
    "start": "408080",
    "end": "411360"
  },
  {
    "text": "new stack which is scalable it will go",
    "start": "411360",
    "end": "414880"
  },
  {
    "text": "outdated right we we can't say like in",
    "start": "414880",
    "end": "417199"
  },
  {
    "text": "two years of span or like in few years",
    "start": "417199",
    "end": "419440"
  },
  {
    "text": "that code becomes outdated and we have",
    "start": "419440",
    "end": "421440"
  },
  {
    "text": "to worry about deprecating that code and",
    "start": "421440",
    "end": "424080"
  },
  {
    "text": "uh how long we have to support that code",
    "start": "424080",
    "end": "425919"
  },
  {
    "text": "it becomes again a complicated thing so",
    "start": "425919",
    "end": "429440"
  },
  {
    "text": "so what's the solution here so we wanted",
    "start": "429440",
    "end": "432080"
  },
  {
    "text": "IPs from cloud private network but we",
    "start": "432080",
    "end": "435520"
  },
  {
    "text": "don't want to clm maintain this with",
    "start": "435520",
    "end": "437440"
  },
  {
    "text": "zero maintenance in Celium right is",
    "start": "437440",
    "end": "439440"
  },
  {
    "text": "there a way where I can get an IP from",
    "start": "439440",
    "end": "441360"
  },
  {
    "text": "the cloud private network but I don't",
    "start": "441360",
    "end": "442800"
  },
  {
    "text": "need to render this code our cloud",
    "start": "442800",
    "end": "444639"
  },
  {
    "text": "private specific code into the CM",
    "start": "444639",
    "end": "446000"
  },
  {
    "text": "codebase and make it",
    "start": "446000",
    "end": "447960"
  },
  {
    "text": "complicated so the title says is",
    "start": "447960",
    "end": "450160"
  },
  {
    "text": "obviously so it's delegated IPAM so we",
    "start": "450160",
    "end": "454000"
  },
  {
    "text": "are just leveraging the existing CNI",
    "start": "454000",
    "end": "456000"
  },
  {
    "text": "standard to integrate CM into the Ashure",
    "start": "456000",
    "end": "458960"
  },
  {
    "text": "so this delegated IPAM is not specific",
    "start": "458960",
    "end": "460800"
  },
  {
    "text": "to Azure here any cloud provider can",
    "start": "460800",
    "end": "463360"
  },
  {
    "text": "extend this and then integrate their own",
    "start": "463360",
    "end": "465599"
  },
  {
    "text": "IPM here not just cloud provider anyone",
    "start": "465599",
    "end": "467360"
  },
  {
    "text": "who wants to bring their network wanted",
    "start": "467360",
    "end": "469440"
  },
  {
    "text": "to see like wanted to bring their thing",
    "start": "469440",
    "end": "471280"
  },
  {
    "text": "they can use this delegated IPAM and",
    "start": "471280",
    "end": "473039"
  },
  {
    "text": "then integrate with Celium so with that",
    "start": "473039",
    "end": "475919"
  },
  {
    "text": "I will give it to Will he will talk",
    "start": "475919",
    "end": "477680"
  },
  {
    "text": "about more about delegated IPM IPAM and",
    "start": "477680",
    "end": "479759"
  },
  {
    "text": "how it's integrated in CM today thank",
    "start": "479759",
    "end": "482400"
  },
  {
    "text": "you thanks",
    "start": "482400",
    "end": "484599"
  },
  {
    "text": "Salmani so in a lot of ways we got",
    "start": "484599",
    "end": "487039"
  },
  {
    "text": "really lucky because what we wanted was",
    "start": "487039",
    "end": "489840"
  },
  {
    "text": "some standard API that Psyllium could",
    "start": "489840",
    "end": "492400"
  },
  {
    "text": "implement and then we could plug into to",
    "start": "492400",
    "end": "494639"
  },
  {
    "text": "get our custom IPAM integration for all",
    "start": "494639",
    "end": "497120"
  },
  {
    "text": "the native routing performance",
    "start": "497120",
    "end": "498639"
  },
  {
    "text": "improvements that he mentioned earlier",
    "start": "498639",
    "end": "500800"
  },
  {
    "text": "and fortunately for us the CNI spec",
    "start": "500800",
    "end": "503440"
  },
  {
    "text": "already had a mechanism to do this in",
    "start": "503440",
    "end": "506160"
  },
  {
    "text": "section four it talks about this plug-in",
    "start": "506160",
    "end": "508240"
  },
  {
    "text": "delegation mechanism where a CNI plugin",
    "start": "508240",
    "end": "511120"
  },
  {
    "text": "like Psyllium can invoke another CNI um",
    "start": "511120",
    "end": "514880"
  },
  {
    "text": "specifically to handle the IP address",
    "start": "514880",
    "end": "516640"
  },
  {
    "text": "management piece and the interface here",
    "start": "516640",
    "end": "519120"
  },
  {
    "text": "is really really simple it's basically",
    "start": "519120",
    "end": "521760"
  },
  {
    "text": "give me an IP address so I can assign it",
    "start": "521760",
    "end": "523839"
  },
  {
    "text": "to the pod that's being created and then",
    "start": "523839",
    "end": "525920"
  },
  {
    "text": "when I'm deleting the pod release that",
    "start": "525920",
    "end": "528320"
  },
  {
    "text": "IP address so two calls we need to",
    "start": "528320",
    "end": "530320"
  },
  {
    "text": "implement and everything else is",
    "start": "530320",
    "end": "532720"
  },
  {
    "text": "selium's responsibility for handling the",
    "start": "532720",
    "end": "534560"
  },
  {
    "text": "actual container",
    "start": "534560",
    "end": "536360"
  },
  {
    "text": "networking so to look at a bit more",
    "start": "536360",
    "end": "538880"
  },
  {
    "text": "detail about how this works in practice",
    "start": "538880",
    "end": "541120"
  },
  {
    "text": "in Kubernetes when it comes time to run",
    "start": "541120",
    "end": "543600"
  },
  {
    "text": "a pod on a node the Kubernetes control",
    "start": "543600",
    "end": "545519"
  },
  {
    "text": "plane is going to communicate with",
    "start": "545519",
    "end": "547480"
  },
  {
    "text": "cublet and tell it that it needs to run",
    "start": "547480",
    "end": "550320"
  },
  {
    "text": "that pod cublet needs to talk to the",
    "start": "550320",
    "end": "552800"
  },
  {
    "text": "container runtime uh which in an AKS",
    "start": "552800",
    "end": "555279"
  },
  {
    "text": "cluster is always",
    "start": "555279",
    "end": "556839"
  },
  {
    "text": "containerd and then the CNI",
    "start": "556839",
    "end": "558800"
  },
  {
    "text": "specification is what um defines how the",
    "start": "558800",
    "end": "561440"
  },
  {
    "text": "container runtime talks to a CNI plugin",
    "start": "561440",
    "end": "563360"
  },
  {
    "text": "to actually create and set up the",
    "start": "563360",
    "end": "564720"
  },
  {
    "text": "container networking for that pod and in",
    "start": "564720",
    "end": "566720"
  },
  {
    "text": "a psyllium cluster of course that's",
    "start": "566720",
    "end": "568080"
  },
  {
    "text": "going to be the psyllium",
    "start": "568080",
    "end": "569720"
  },
  {
    "text": "CNI now in most IPM modes that selium",
    "start": "569720",
    "end": "572959"
  },
  {
    "text": "supports this is the part where psyllium",
    "start": "572959",
    "end": "574560"
  },
  {
    "text": "would handle choosing the IP address and",
    "start": "574560",
    "end": "576560"
  },
  {
    "text": "in tunnel mode that's really easy",
    "start": "576560",
    "end": "577839"
  },
  {
    "text": "because it just chooses it from its own",
    "start": "577839",
    "end": "579279"
  },
  {
    "text": "space um but for the native integration",
    "start": "579279",
    "end": "581519"
  },
  {
    "text": "we need another way to plug in and",
    "start": "581519",
    "end": "583680"
  },
  {
    "text": "here's where delegated IPM comes in at",
    "start": "583680",
    "end": "586959"
  },
  {
    "text": "runtime we can configure the psyllium",
    "start": "586959",
    "end": "589120"
  },
  {
    "text": "CNI to invoke some other plugin which is",
    "start": "589120",
    "end": "592880"
  },
  {
    "text": "just a binary living on the node and",
    "start": "592880",
    "end": "594959"
  },
  {
    "text": "that can handle those two requests that",
    "start": "594959",
    "end": "596880"
  },
  {
    "text": "I mentioned earlier um adding or",
    "start": "596880",
    "end": "598640"
  },
  {
    "text": "deleting a pod uh allocating or",
    "start": "598640",
    "end": "601120"
  },
  {
    "text": "releasing an IP",
    "start": "601120",
    "end": "603000"
  },
  {
    "text": "address i'm going to touch just on what",
    "start": "603000",
    "end": "605519"
  },
  {
    "text": "this looks like on the Azure side to",
    "start": "605519",
    "end": "607200"
  },
  {
    "text": "show you how much complexity this is",
    "start": "607200",
    "end": "609040"
  },
  {
    "text": "hiding so our implementation of",
    "start": "609040",
    "end": "611200"
  },
  {
    "text": "delegated IPAM is this binary that we",
    "start": "611200",
    "end": "613279"
  },
  {
    "text": "call Azure IPAM um this was actually",
    "start": "613279",
    "end": "615920"
  },
  {
    "text": "implemented by an intern over the summer",
    "start": "615920",
    "end": "617680"
  },
  {
    "text": "um so it gives you a sense of kind of",
    "start": "617680",
    "end": "619120"
  },
  {
    "text": "how simple it was to implement this",
    "start": "619120",
    "end": "620760"
  },
  {
    "text": "interface and that's really just a shim",
    "start": "620760",
    "end": "623279"
  },
  {
    "text": "that calls into a demon set we run known",
    "start": "623279",
    "end": "625360"
  },
  {
    "text": "as Azure CNS uh CNS stands for container",
    "start": "625360",
    "end": "628079"
  },
  {
    "text": "network",
    "start": "628079",
    "end": "630120"
  },
  {
    "text": "service that needs some communication",
    "start": "630120",
    "end": "632560"
  },
  {
    "text": "mechanism back to the Azure network and",
    "start": "632560",
    "end": "634399"
  },
  {
    "text": "control plane to choose IP addresses and",
    "start": "634399",
    "end": "637200"
  },
  {
    "text": "make sure that they're routable in the",
    "start": "637200",
    "end": "638640"
  },
  {
    "text": "cloud network that requires some",
    "start": "638640",
    "end": "641200"
  },
  {
    "text": "communication channel back to the um the",
    "start": "641200",
    "end": "643040"
  },
  {
    "text": "the networking control plane and the way",
    "start": "643040",
    "end": "644560"
  },
  {
    "text": "we do that is actually through a",
    "start": "644560",
    "end": "645680"
  },
  {
    "text": "Kubernetes custom resource um so CNS",
    "start": "645680",
    "end": "648640"
  },
  {
    "text": "reads and writes to this resource called",
    "start": "648640",
    "end": "650079"
  },
  {
    "text": "a node network config delegated network",
    "start": "650079",
    "end": "652079"
  },
  {
    "text": "controller runs in our control plane and",
    "start": "652079",
    "end": "653600"
  },
  {
    "text": "reads and writes back um to kind of",
    "start": "653600",
    "end": "655760"
  },
  {
    "text": "coordinate the allocation and release of",
    "start": "655760",
    "end": "657680"
  },
  {
    "text": "those",
    "start": "657680",
    "end": "658760"
  },
  {
    "text": "IPs if you're thinking hey this diagram",
    "start": "658760",
    "end": "661279"
  },
  {
    "text": "actually looks kind of simple um know",
    "start": "661279",
    "end": "662959"
  },
  {
    "text": "that we're hiding a lot of complexity",
    "start": "662959",
    "end": "664560"
  },
  {
    "text": "here and that this has evolved over time",
    "start": "664560",
    "end": "666959"
  },
  {
    "text": "um so in particular we support many",
    "start": "666959",
    "end": "669200"
  },
  {
    "text": "different kind of IP allocation modes um",
    "start": "669200",
    "end": "671839"
  },
  {
    "text": "you can allocate IPs from an overlay",
    "start": "671839",
    "end": "673360"
  },
  {
    "text": "address space um from specific subnets",
    "start": "673360",
    "end": "676800"
  },
  {
    "text": "um and using different algorithms to",
    "start": "676800",
    "end": "678399"
  },
  {
    "text": "meet the needs that our our various",
    "start": "678399",
    "end": "679680"
  },
  {
    "text": "customers have around IP",
    "start": "679680",
    "end": "681880"
  },
  {
    "text": "allocation the important thing here is",
    "start": "681880",
    "end": "683920"
  },
  {
    "text": "that Psyllium doesn't need to know about",
    "start": "683920",
    "end": "685839"
  },
  {
    "text": "any of that um it just calls this IPAM",
    "start": "685839",
    "end": "688399"
  },
  {
    "text": "plugin and everything just works under",
    "start": "688399",
    "end": "689920"
  },
  {
    "text": "the hood we can add capabilities without",
    "start": "689920",
    "end": "691680"
  },
  {
    "text": "any changes upstream of the codebase",
    "start": "691680",
    "end": "696160"
  },
  {
    "text": "um so if you've installed Selium before",
    "start": "696160",
    "end": "698240"
  },
  {
    "text": "you know that it's configured um using",
    "start": "698240",
    "end": "700160"
  },
  {
    "text": "Helm and in this case the relevant Helm",
    "start": "700160",
    "end": "702800"
  },
  {
    "text": "value is IPAM if you set that to",
    "start": "702800",
    "end": "705120"
  },
  {
    "text": "delegated plugin um that's what turns on",
    "start": "705120",
    "end": "707200"
  },
  {
    "text": "all this delegated IPAM stuff um you",
    "start": "707200",
    "end": "710079"
  },
  {
    "text": "really want to use this with routing",
    "start": "710079",
    "end": "711279"
  },
  {
    "text": "mode native because that's how you get",
    "start": "711279",
    "end": "712800"
  },
  {
    "text": "those performance benefits that Tommani",
    "start": "712800",
    "end": "714480"
  },
  {
    "text": "mentioned",
    "start": "714480",
    "end": "714930"
  },
  {
    "text": "[Music]",
    "start": "714930",
    "end": "716519"
  },
  {
    "text": "earlier um sadly there are a few",
    "start": "716519",
    "end": "719279"
  },
  {
    "text": "features that are not compatible with",
    "start": "719279",
    "end": "720640"
  },
  {
    "text": "delegated IPAM um there's only a few",
    "start": "720640",
    "end": "722480"
  },
  {
    "text": "that we found these are cases where a",
    "start": "722480",
    "end": "724079"
  },
  {
    "text": "psyllium agent sort of assumes that it",
    "start": "724079",
    "end": "726320"
  },
  {
    "text": "can assign itself a routable IP um",
    "start": "726320",
    "end": "728880"
  },
  {
    "text": "that's not possible with delegated IPAM",
    "start": "728880",
    "end": "730800"
  },
  {
    "text": "since this IP allocation happens outside",
    "start": "730800",
    "end": "733040"
  },
  {
    "text": "of the context of a CNI invocation um so",
    "start": "733040",
    "end": "736079"
  },
  {
    "text": "you do need to turn off things like",
    "start": "736079",
    "end": "737279"
  },
  {
    "text": "endpoint health checking ingress",
    "start": "737279",
    "end": "739000"
  },
  {
    "text": "controller and um as kind of an",
    "start": "739000",
    "end": "741200"
  },
  {
    "text": "implementation detail this local router",
    "start": "741200",
    "end": "742959"
  },
  {
    "text": "IP needs to be a link local address um",
    "start": "742959",
    "end": "745440"
  },
  {
    "text": "but apart from that everything else",
    "start": "745440",
    "end": "746880"
  },
  {
    "text": "we've tested and everything else we",
    "start": "746880",
    "end": "748480"
  },
  {
    "text": "support in Azure managed um psyllium",
    "start": "748480",
    "end": "751200"
  },
  {
    "text": "works just fine with delegated",
    "start": "751200",
    "end": "753880"
  },
  {
    "text": "IPAM and the last piece of the puzzle is",
    "start": "753880",
    "end": "756639"
  },
  {
    "text": "you know no nowhere so far have I said",
    "start": "756639",
    "end": "759200"
  },
  {
    "text": "how psyllium knows which IPAM plugin to",
    "start": "759200",
    "end": "761600"
  },
  {
    "text": "invoke um because that's configured",
    "start": "761600",
    "end": "764079"
  },
  {
    "text": "using the CNI configuration um CNI is",
    "start": "764079",
    "end": "767519"
  },
  {
    "text": "configured just using a JSON file on the",
    "start": "767519",
    "end": "769920"
  },
  {
    "text": "node that's known as a conf list um and",
    "start": "769920",
    "end": "772240"
  },
  {
    "text": "the one that selium installs doesn't",
    "start": "772240",
    "end": "773839"
  },
  {
    "text": "know which IPM plugin to call so you",
    "start": "773839",
    "end": "775760"
  },
  {
    "text": "have to set CNI.custom comp equals true",
    "start": "775760",
    "end": "778720"
  },
  {
    "text": "and manage that part yourself um in AKS",
    "start": "778720",
    "end": "782000"
  },
  {
    "text": "that's installed by the the Azure CNS",
    "start": "782000",
    "end": "784000"
  },
  {
    "text": "demon set that I mentioned",
    "start": "784000",
    "end": "786839"
  },
  {
    "text": "earlier so what does that conflict look",
    "start": "786839",
    "end": "789200"
  },
  {
    "text": "like um it's actually very very similar",
    "start": "789200",
    "end": "790959"
  },
  {
    "text": "to the one that psyllium installs by",
    "start": "790959",
    "end": "792480"
  },
  {
    "text": "default um per the CNI spec there's",
    "start": "792480",
    "end": "795120"
  },
  {
    "text": "going to be a type that says what the",
    "start": "795120",
    "end": "796560"
  },
  {
    "text": "main CNI plugin is um and so this is",
    "start": "796560",
    "end": "798959"
  },
  {
    "text": "psyllium CNI to configure psyllium um",
    "start": "798959",
    "end": "801519"
  },
  {
    "text": "the binary that selium installs opi bin",
    "start": "801519",
    "end": "803839"
  },
  {
    "text": "selium",
    "start": "803839",
    "end": "805079"
  },
  {
    "text": "CNI the thing that's new with delegated",
    "start": "805079",
    "end": "807279"
  },
  {
    "text": "IPM is we now have this IPAM section um",
    "start": "807279",
    "end": "810160"
  },
  {
    "text": "and this is what tells psyllium CNI how",
    "start": "810160",
    "end": "812480"
  },
  {
    "text": "to invoke the IPM plugin just to do the",
    "start": "812480",
    "end": "814639"
  },
  {
    "text": "IP address allocation",
    "start": "814639",
    "end": "816680"
  },
  {
    "text": "release here we're using um the",
    "start": "816680",
    "end": "819279"
  },
  {
    "text": "reference plugin from the CNI project",
    "start": "819279",
    "end": "821040"
  },
  {
    "text": "known as host local and you can see",
    "start": "821040",
    "end": "823040"
  },
  {
    "text": "we're passing some configuration in",
    "start": "823040",
    "end": "824720"
  },
  {
    "text": "about um a subnet in which IPs can be",
    "start": "824720",
    "end": "827040"
  },
  {
    "text": "allocated um but the cool thing here is",
    "start": "827040",
    "end": "829440"
  },
  {
    "text": "that you can put anything you want there",
    "start": "829440",
    "end": "831200"
  },
  {
    "text": "as long as you implement the spec and so",
    "start": "831200",
    "end": "833360"
  },
  {
    "text": "in an AKS cluster using manage psyllium",
    "start": "833360",
    "end": "835519"
  },
  {
    "text": "you're going to see Azure IPAM there um",
    "start": "835519",
    "end": "838160"
  },
  {
    "text": "and we can hook into that and everything",
    "start": "838160",
    "end": "839839"
  },
  {
    "text": "works just fine without Selium needing",
    "start": "839839",
    "end": "841360"
  },
  {
    "text": "to know any of the specifics about how",
    "start": "841360",
    "end": "842800"
  },
  {
    "text": "the IP allocation",
    "start": "842800",
    "end": "845560"
  },
  {
    "text": "happens um I'm going to close with just",
    "start": "845560",
    "end": "848000"
  },
  {
    "text": "a um a quick uh overview of how this",
    "start": "848000",
    "end": "851120"
  },
  {
    "text": "feature was developed in open source",
    "start": "851120",
    "end": "852639"
  },
  {
    "text": "because I think it's really a win for",
    "start": "852639",
    "end": "854160"
  },
  {
    "text": "Psyllium as an open source project um",
    "start": "854160",
    "end": "856880"
  },
  {
    "text": "Microsoft contributed the initial",
    "start": "856880",
    "end": "858399"
  },
  {
    "text": "implementation of delegated IPAM all the",
    "start": "858399",
    "end": "860320"
  },
  {
    "text": "way back in June of 2022 um so it's been",
    "start": "860320",
    "end": "863519"
  },
  {
    "text": "a few years now and one way to kind of",
    "start": "863519",
    "end": "866399"
  },
  {
    "text": "measure the success of this is how much",
    "start": "866399",
    "end": "868320"
  },
  {
    "text": "changes on the psyllium side have been",
    "start": "868320",
    "end": "869839"
  },
  {
    "text": "necessary since then and the answer is",
    "start": "869839",
    "end": "872160"
  },
  {
    "text": "really not that much um so we had um one",
    "start": "872160",
    "end": "875600"
  },
  {
    "text": "small bug with IPv6 that we found when",
    "start": "875600",
    "end": "877600"
  },
  {
    "text": "we started testing dual stack um our",
    "start": "877600",
    "end": "879839"
  },
  {
    "text": "colleague Vipple went ahead and fixed",
    "start": "879839",
    "end": "881199"
  },
  {
    "text": "that insilia",
    "start": "881199",
    "end": "883120"
  },
  {
    "text": "and apart from that the only other real",
    "start": "883120",
    "end": "884880"
  },
  {
    "text": "change that we've seen has been um a",
    "start": "884880",
    "end": "886639"
  },
  {
    "text": "contribution from some developers over",
    "start": "886639",
    "end": "888399"
  },
  {
    "text": "at Vulk Engine uh who wanted to support",
    "start": "888399",
    "end": "891360"
  },
  {
    "text": "u multiple uplink interfaces where they",
    "start": "891360",
    "end": "893360"
  },
  {
    "text": "direct pod traffic through um specific",
    "start": "893360",
    "end": "895519"
  },
  {
    "text": "nicks on the host um they used delegated",
    "start": "895519",
    "end": "898160"
  },
  {
    "text": "IPM for their integration and they had",
    "start": "898160",
    "end": "899760"
  },
  {
    "text": "to add a little bit of functionality to",
    "start": "899760",
    "end": "901040"
  },
  {
    "text": "make that work um coincidentally we also",
    "start": "901040",
    "end": "903360"
  },
  {
    "text": "had the same need in Azure so it was a",
    "start": "903360",
    "end": "905199"
  },
  {
    "text": "it was a nice kind of confluence of of",
    "start": "905199",
    "end": "906800"
  },
  {
    "text": "people in the community um needing a",
    "start": "906800",
    "end": "909199"
  },
  {
    "text": "certain thing and then kind of",
    "start": "909199",
    "end": "910000"
  },
  {
    "text": "developing it in psyllium",
    "start": "910000",
    "end": "912800"
  },
  {
    "text": "and the really neat thing about that is",
    "start": "912800",
    "end": "914320"
  },
  {
    "text": "that our story started with the CNI spec",
    "start": "914320",
    "end": "916959"
  },
  {
    "text": "um went through the implementation in",
    "start": "916959",
    "end": "919399"
  },
  {
    "text": "silium and then as part of that um",
    "start": "919399",
    "end": "921920"
  },
  {
    "text": "uplink interface functionality there was",
    "start": "921920",
    "end": "923920"
  },
  {
    "text": "actually a change proposed back to the",
    "start": "923920",
    "end": "925360"
  },
  {
    "text": "CNI spec itself to support and clarify",
    "start": "925360",
    "end": "927560"
  },
  {
    "text": "that um so it's kind of a virtuous cycle",
    "start": "927560",
    "end": "930399"
  },
  {
    "text": "full circle from spec to implementation",
    "start": "930399",
    "end": "932240"
  },
  {
    "text": "and then back to spec in a way that",
    "start": "932240",
    "end": "933760"
  },
  {
    "text": "hopefully um supports not only folks",
    "start": "933760",
    "end": "936480"
  },
  {
    "text": "using psyllium and wanting to do this",
    "start": "936480",
    "end": "937920"
  },
  {
    "text": "kind of native integration but also",
    "start": "937920",
    "end": "939839"
  },
  {
    "text": "other CNIs that may want to do something",
    "start": "939839",
    "end": "942600"
  },
  {
    "text": "similar um so that's all we have for the",
    "start": "942600",
    "end": "944880"
  },
  {
    "text": "slides i want to thank you for for",
    "start": "944880",
    "end": "946079"
  },
  {
    "text": "attending the talk and we're happy to",
    "start": "946079",
    "end": "948079"
  },
  {
    "text": "take any questions that you folks may",
    "start": "948079",
    "end": "949360"
  },
  {
    "text": "have",
    "start": "949360",
    "end": "951550"
  },
  {
    "text": "[Applause]",
    "start": "951550",
    "end": "956250"
  }
]