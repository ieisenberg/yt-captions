[
  {
    "start": "0",
    "end": "110000"
  },
  {
    "text": "good afternoon so I want to talk about some of the decisions you have to make about along",
    "start": "719",
    "end": "8040"
  },
  {
    "text": "the way of your good Ops journey and some of the consequences of those so I'm not going to talk about any particular",
    "start": "8040",
    "end": "13559"
  },
  {
    "text": "products I'm not going to talk about any particular platforms so the first thing I want to do is I want to talk about you know hey what all",
    "start": "13559",
    "end": "20220"
  },
  {
    "text": "these terms mean like let's level set on what I'm going to actually talk about um so you know there's two different",
    "start": "20220",
    "end": "25740"
  },
  {
    "text": "things CD means continuous delivery and continuous deployment there's CI there's get Ops they're all a little different",
    "start": "25740",
    "end": "31260"
  },
  {
    "text": "so you know for the purposes of this talk when I'm talking CI I'm talking about building your code to gain it in",
    "start": "31260",
    "end": "37260"
  },
  {
    "text": "an artifact repo unit tests test automation Etc and I'm talking continuous deployment",
    "start": "37260",
    "end": "43200"
  },
  {
    "text": "hey this requires continuous integration but um it's not the same thing so this",
    "start": "43200",
    "end": "48660"
  },
  {
    "text": "is all about how do we get it the rest of the way into production how do we actually get it on the right clusters make sure everything deploys safely in",
    "start": "48660",
    "end": "55860"
  },
  {
    "text": "the expected way and when I talk git Ops I'm talking about how do we make sure that people aren't doing this by hand",
    "start": "55860",
    "end": "61680"
  },
  {
    "text": "how do we make sure all this lives in Change Control we can audit who did what we can easily roll back",
    "start": "61680",
    "end": "67560"
  },
  {
    "text": "so if you think about it you can't do continuous deployment without doing continuous integration you can",
    "start": "67560",
    "end": "72840"
  },
  {
    "text": "technically do get Ops without doing either of them so you know I the very first time I saw a team doing something",
    "start": "72840",
    "end": "78600"
  },
  {
    "text": "I would classify as get Ops um except for the fact that I do predated git they were they were maintaining all of",
    "start": "78600",
    "end": "85920"
  },
  {
    "text": "the the deployments in Source control but you know they had customer specific",
    "start": "85920",
    "end": "91740"
  },
  {
    "text": "deployments it was a per tenant you know pretended application and someone went",
    "start": "91740",
    "end": "97619"
  },
  {
    "text": "in and modified a file and git when a customer needed an upgrade was it continuous deployment were",
    "start": "97619",
    "end": "103380"
  },
  {
    "text": "customers upgrading and getting features immediately no but it was get Ops so these things are all related but they're",
    "start": "103380",
    "end": "108840"
  },
  {
    "text": "not the same um personally I think that there is a happy",
    "start": "108840",
    "end": "114299"
  },
  {
    "text": "path a lot of companies want to get to where they're doing both continuous deployment and get Ops some examples of",
    "start": "114299",
    "end": "121560"
  },
  {
    "text": "where you might be doing one but not the other hey git Ops has the word get in it in its name if you're not using it you're not doing gitups so if you're on",
    "start": "121560",
    "end": "127380"
  },
  {
    "text": "Mercurial not doing git Ops um it also uh a lot of people uh",
    "start": "127380",
    "end": "133080"
  },
  {
    "text": "consider get Ops 2 require that your configuration is declarative this is something I happen to be a big believer",
    "start": "133080",
    "end": "138300"
  },
  {
    "text": "in um you know if you're checking in a script and if you modify that script everything breaks you're",
    "start": "138300",
    "end": "144900"
  },
  {
    "text": "probably not really doing get Ops the way you want to be doing it so your your configuration of what you are deploying",
    "start": "144900",
    "end": "150060"
  },
  {
    "text": "should be in a declarative fashion um and you know similarly you might be",
    "start": "150060",
    "end": "155640"
  },
  {
    "text": "doing git Ops and not be doing continuous deployment if you're doing you know a bunch of manual processes in the middle you're you know doing",
    "start": "155640",
    "end": "162660"
  },
  {
    "text": "different repos and you know it's three months in between the original feature",
    "start": "162660",
    "end": "167879"
  },
  {
    "text": "being committed and it actually being deployed to some some environment um in the happy middle ground",
    "start": "167879",
    "end": "176040"
  },
  {
    "text": "um you know all your configuration and source code isn't get and I mean everything your infrastructure's manages code too your deployments are managers",
    "start": "176040",
    "end": "182099"
  },
  {
    "text": "code everything is and it's all declarative um",
    "start": "182099",
    "end": "188099"
  },
  {
    "text": "if you're in the middle when you check in a feature it gets everywhere it doesn't just update your Dev environment doesn't update staging it updates",
    "start": "188099",
    "end": "194819"
  },
  {
    "text": "staging runs your integration tests updates production updates all of your regions",
    "start": "194819",
    "end": "199920"
  },
  {
    "text": "so that's kind of the the middle ground that uh from what I've seen a lot of",
    "start": "199920",
    "end": "205140"
  },
  {
    "text": "people want to be trying to reach so we're going to talk about some of the problems I see people encountering along",
    "start": "205140",
    "end": "212099"
  },
  {
    "text": "the way when they're trying to get there so the first thing I want to talk about",
    "start": "212099",
    "end": "217200"
  },
  {
    "start": "215000",
    "end": "334000"
  },
  {
    "text": "is repository structure and the reason I want to talk about this one is I can't tell you how many people I have talked",
    "start": "217200",
    "end": "224760"
  },
  {
    "text": "to who are like I dislike XYZ tool and you start talking about why and it's not",
    "start": "224760",
    "end": "230700"
  },
  {
    "text": "actually a problem with the tool it's how they configured the tool so back before get Ops was a thing back",
    "start": "230700",
    "end": "237060"
  },
  {
    "text": "before devops was a thing we came up with a branch management pattern called git flow and it was originally developed",
    "start": "237060",
    "end": "242760"
  },
  {
    "text": "for long running uh long-running releases you need to maintain so you",
    "start": "242760",
    "end": "248940"
  },
  {
    "text": "know if you have five versions you need to maintain for two years in parallel it's a phenomenal way to manage your",
    "start": "248940",
    "end": "255599"
  },
  {
    "text": "branches and when when devops came around everyone was familiar with this way of managing branches so they started",
    "start": "255599",
    "end": "262019"
  },
  {
    "text": "going well I can do a branch per environment and it looks really really good on paper if",
    "start": "262019",
    "end": "268680"
  },
  {
    "text": "you're a small team everything's simple it works okay bigger you get the more P the more the",
    "start": "268680",
    "end": "274560"
  },
  {
    "text": "more Cooks you got in the kitchen the more likely it breaks some some examples of how it breaks uh",
    "start": "274560",
    "end": "280919"
  },
  {
    "text": "imagine that you're using branches and you want to run different number of replicas in the staging environment",
    "start": "280919",
    "end": "286560"
  },
  {
    "text": "versus a production environment okay someone changes the image version",
    "start": "286560",
    "end": "291918"
  },
  {
    "text": "when you go and you merge it to production it goes and picks up the replica set the replica count change",
    "start": "292560",
    "end": "298380"
  },
  {
    "text": "another person made and you didn't even realize it so you know when you start doing",
    "start": "298380",
    "end": "304800"
  },
  {
    "text": "branches per environment it can cause a lot of pain it causes so much pain the creator of get flow actually went back",
    "start": "304800",
    "end": "311160"
  },
  {
    "text": "to the original blog where they published it and they wrote a disclaimer saying don't use this pattern for this",
    "start": "311160",
    "end": "316740"
  },
  {
    "text": "it's not what it was intended for uh personally I'm a big fan of trunk based development there's a few other",
    "start": "316740",
    "end": "322199"
  },
  {
    "text": "Alternatives out there as well but you know checking your build on feature branches check them into main when you",
    "start": "322199",
    "end": "329639"
  },
  {
    "text": "get to Maine go ahead and ship that off to all the environments",
    "start": "329639",
    "end": "335160"
  },
  {
    "start": "334000",
    "end": "410000"
  },
  {
    "text": "uh so hey what's the alternative to a branch per environment my personal recommendation is make a folder per",
    "start": "335160",
    "end": "342000"
  },
  {
    "text": "environment in in your repo I say a folder not a file for a very specific reason you don't know what the future",
    "start": "342000",
    "end": "348780"
  },
  {
    "text": "holds so you know if you're using Helm you might be like hey I've I can just",
    "start": "348780",
    "end": "354180"
  },
  {
    "text": "you know I've got a values file per environment I can have one name prod one name staging two years from now if you",
    "start": "354180",
    "end": "360600"
  },
  {
    "text": "suddenly have another file that you need you're going to have two files with Dash staging it gets you don't know how it's",
    "start": "360600",
    "end": "366360"
  },
  {
    "text": "going to grow up just make it a folder it's easy grows better and uh you know the other thing I'd recommend is there",
    "start": "366360",
    "end": "372660"
  },
  {
    "text": "are a whole bunch of really good tools out there for doing templating for yaml",
    "start": "372660",
    "end": "378000"
  },
  {
    "text": "templating for Json templating for XML um these two are really common in",
    "start": "378000",
    "end": "383460"
  },
  {
    "text": "kubernetes if you're using something else I guarantee there's a template a a template generator for it so you know use tools like Hellman",
    "start": "383460",
    "end": "390720"
  },
  {
    "text": "customize they allow you typically to have all of the definition of the",
    "start": "390720",
    "end": "395819"
  },
  {
    "text": "application be shared but then have parameters per environment so you can go and you can have a file in those folders",
    "start": "395819",
    "end": "403680"
  },
  {
    "text": "for each of those environments and suddenly everything's going to be a lot easier to manage",
    "start": "403680",
    "end": "410720"
  },
  {
    "start": "410000",
    "end": "505000"
  },
  {
    "text": "the other the other one I see a lot of people uh struggle with and sometimes wind up regretting their decision on",
    "start": "411060",
    "end": "418319"
  },
  {
    "text": "doesn't have nearly as kind of dry of a a versus B trade-off in my opinion and",
    "start": "418319",
    "end": "425100"
  },
  {
    "text": "that's how you structure your git repositories so you know some people go and they put their applications their",
    "start": "425100",
    "end": "430800"
  },
  {
    "text": "infrastructure code all in one repository some of them do a separate repo per app or an app repo and an info",
    "start": "430800",
    "end": "437400"
  },
  {
    "text": "repo and my best piece of advice here is ask",
    "start": "437400",
    "end": "442500"
  },
  {
    "text": "yourself how your company works if you're a small team you expect to stay a",
    "start": "442500",
    "end": "447960"
  },
  {
    "text": "small team the same people are doing infrastructure who are doing the app Dev one repo actually works really really",
    "start": "447960",
    "end": "453000"
  },
  {
    "text": "well for that you know you you don't have as much you know cognitive overload if you're a 2 000 person company and you",
    "start": "453000",
    "end": "461400"
  },
  {
    "text": "have controls on who's allowed to touch the AWS account configuration doing",
    "start": "461400",
    "end": "466680"
  },
  {
    "text": "multiple repos helps you enforce the separation of Duty you can more easily set up different permissions per",
    "start": "466680",
    "end": "472500"
  },
  {
    "text": "so ask yourself where you are now but then",
    "start": "472500",
    "end": "477960"
  },
  {
    "text": "also ask yourself where you think you're going to be in three to five years because restructuring repos kind of",
    "start": "477960",
    "end": "483720"
  },
  {
    "text": "sucks don't want to have to do it you know you know your company's growth trajectory if you're you know building a",
    "start": "483720",
    "end": "490919"
  },
  {
    "text": "consumer cell phone app you're probably not going to wind up having a bunch of heavy infoseconds if you're a 10 person",
    "start": "490919",
    "end": "496259"
  },
  {
    "text": "fintech startup probably are going to wind up needing those those separation of concerns in",
    "start": "496259",
    "end": "501960"
  },
  {
    "text": "the not too distant future the next pattern that's out there that I",
    "start": "501960",
    "end": "508319"
  },
  {
    "start": "505000",
    "end": "758000"
  },
  {
    "text": "want to talk about a little bit is push versus pull so um the difference here is when I check in",
    "start": "508319",
    "end": "515820"
  },
  {
    "text": "that configuration change to get how does it get applied is there an external system somewhere",
    "start": "515820",
    "end": "522419"
  },
  {
    "text": "that's like monitoring my git repo or is like you know my CI system kicking",
    "start": "522419",
    "end": "529080"
  },
  {
    "text": "off a deployment job these are two fundamentally different patterns um",
    "start": "529080",
    "end": "534420"
  },
  {
    "text": "some of you may not be familiar with both so if you use kubernetes there's a",
    "start": "534420",
    "end": "539519"
  },
  {
    "text": "bunch of kubernetes tools that use pull but there's very little that uses the",
    "start": "539519",
    "end": "544680"
  },
  {
    "text": "pull model outside of kubernetes today it's kind of the newer one so some of the advantages of uh of push is it's",
    "start": "544680",
    "end": "551940"
  },
  {
    "text": "been around longer it's a little bit simpler more people understand it and",
    "start": "551940",
    "end": "558300"
  },
  {
    "text": "one of the things I really like about it is it leaves you with the full power of your CI system so you know if you are",
    "start": "558300",
    "end": "564779"
  },
  {
    "text": "deploying something and you need to run like yq to like change one thing as part of",
    "start": "564779",
    "end": "570180"
  },
  {
    "text": "your build script you can and it's it's really easy when you're doing a pull model oftentimes going and doing",
    "start": "570180",
    "end": "576060"
  },
  {
    "text": "scripted changes to config can become more complicated um the other thing I like that is it's",
    "start": "576060",
    "end": "581459"
  },
  {
    "text": "cross Target so if you're only deploying to kubernetes hey poll is not a problem if you're deploying to five or six different things",
    "start": "581459",
    "end": "587820"
  },
  {
    "text": "and one of your tools is pulling everything else is push that suddenly means your app devs every time they have",
    "start": "587820",
    "end": "593700"
  },
  {
    "text": "to touch one of these tools having to completely changed their mental model and you know the more",
    "start": "593700",
    "end": "600360"
  },
  {
    "text": "things work in the same way the easier it is to get your job done I suspect a",
    "start": "600360",
    "end": "605700"
  },
  {
    "text": "lot of people in this room are you know on SRE teams think if the app devs as as your customers and you know",
    "start": "605700",
    "end": "612540"
  },
  {
    "text": "the more familiar things are to them the more productive they're going to be the happier your customer will be",
    "start": "612540",
    "end": "618839"
  },
  {
    "text": "um there are some disadvantages of uh of push so there are push systems out there",
    "start": "618839",
    "end": "626279"
  },
  {
    "text": "that require things like you load external secrets into GitHub",
    "start": "626279",
    "end": "631800"
  },
  {
    "text": "they require internet access to like a kubernetes cluster that's a problem",
    "start": "631800",
    "end": "637019"
  },
  {
    "text": "if you need external Secrets use the secrets manager don't check it into your git repo everyone should know that but",
    "start": "637019",
    "end": "642480"
  },
  {
    "text": "um also take a look at how it connects to your cluster because you know a lot of companies when they start when they're",
    "start": "642480",
    "end": "648360"
  },
  {
    "text": "10 people maybe you can get away with having your kubernetes clusters API endpoints internet accessible but like",
    "start": "648360",
    "end": "653880"
  },
  {
    "text": "it's not going to last and you don't want to be poking holes in your firewalls for it so like how you",
    "start": "653880",
    "end": "659220"
  },
  {
    "text": "actually connect the apis you're deploying to back to your git repo is a",
    "start": "659220",
    "end": "664320"
  },
  {
    "text": "meaningful problem and whatever tool you're using make sure it's got an answer for that you know on the push",
    "start": "664320",
    "end": "670860"
  },
  {
    "text": "model there are tools that you know run in the cluster connect back and then you",
    "start": "670860",
    "end": "677880"
  },
  {
    "text": "know have Frameworks where you can trigger it on the pull model hey they're they're connecting to your git repo and",
    "start": "677880",
    "end": "683459"
  },
  {
    "text": "pulling from it so as long as your git repos internet accessible you're usually fine um",
    "start": "683459",
    "end": "688740"
  },
  {
    "text": "some of the other disadvantages of the pull model um it",
    "start": "688740",
    "end": "695420"
  },
  {
    "text": "tends to have a large amount of uh business logic that you need to manage",
    "start": "695420",
    "end": "702660"
  },
  {
    "text": "on the system that is applying your configuration so uh one of one of the uh",
    "start": "702660",
    "end": "711000"
  },
  {
    "text": "one one of the interactions I had with customer once that kind of opened my eyes on on one of the pro on this",
    "start": "711000",
    "end": "716220"
  },
  {
    "text": "problem it was um a large bank and they were trying to upgrade a a pull model",
    "start": "716220",
    "end": "723060"
  },
  {
    "text": "based deployment system for four months and",
    "start": "723060",
    "end": "728279"
  },
  {
    "text": "like that sounds conceptually easy but the problem was they had 400 clusters they had four different",
    "start": "728279",
    "end": "736260"
  },
  {
    "text": "versions of this thing running and all of the versions treated the configuration slightly differently so",
    "start": "736260",
    "end": "742079"
  },
  {
    "text": "anytime they tried upgrading any cluster it broke someone else's configure so they couldn't get all the different",
    "start": "742079",
    "end": "747240"
  },
  {
    "text": "teams on a single version that actually worked the same across everything so",
    "start": "747240",
    "end": "754440"
  },
  {
    "text": "make make sure you think about that",
    "start": "754440",
    "end": "758779"
  },
  {
    "start": "758000",
    "end": "887000"
  },
  {
    "text": "so the next thing I want to talk about is automated validation so we talked a little bit about git Ops versus continuous deployment a lot of the tools",
    "start": "759660",
    "end": "767279"
  },
  {
    "text": "in the space support both my advice if you want to get to where you're doing full continuous deployment",
    "start": "767279",
    "end": "773459"
  },
  {
    "text": "everything fully automated and not just get Ops you want to make sure that the tool you are the tool chain you are",
    "start": "773459",
    "end": "780360"
  },
  {
    "text": "using has an easy answer for how it orchestrates uh deployments and testing",
    "start": "780360",
    "end": "786540"
  },
  {
    "text": "across multiple environments you know very few people deploy to production immediately when someone checks in they",
    "start": "786540",
    "end": "792839"
  },
  {
    "text": "tend to deploy to you know pre-production environments they tend to run integration tests they run to potential Run Security scanners they",
    "start": "792839",
    "end": "798540"
  },
  {
    "text": "only go to production of those pass there are a lot of tools that",
    "start": "798540",
    "end": "805860"
  },
  {
    "text": "how do you know when it finished updating so like if you're on that pull-based model and it went and it",
    "start": "805860",
    "end": "811560"
  },
  {
    "text": "updated staging how do you know when it's time to go run the integration tests that need that environment to be deployed",
    "start": "811560",
    "end": "817560"
  },
  {
    "text": "you know some of the tools have answers for that some of them don't if it doesn't have an answer you're gonna have to build it yourself",
    "start": "817560",
    "end": "823200"
  },
  {
    "text": "so make sure you think through that some of the push-based uh systems you're",
    "start": "823200",
    "end": "828720"
  },
  {
    "text": "having to go and like Monitor and wait for that deployment to finish you know pulling constantly GitHub actions if",
    "start": "828720",
    "end": "836459"
  },
  {
    "text": "you're if anyone's using it you know charge Z by the minute of execution time you don't really want to be pulling and waiting so you know make sure that you",
    "start": "836459",
    "end": "843660"
  },
  {
    "text": "know not only can it tell but it can tell in a way that's like reasonable and not going to cost you an armor like",
    "start": "843660",
    "end": "850200"
  },
  {
    "text": "um some examples of uh of of the classes of tests you want to run some of the security scanners so you know I assume",
    "start": "850200",
    "end": "856860"
  },
  {
    "text": "everyone uses like you know Docker image scanners and static code analyzers that's not what I'm talking about when I",
    "start": "856860",
    "end": "862019"
  },
  {
    "text": "say security scanners if you look at like the uh the oauth scanners a lot of them need a deployed environment to run",
    "start": "862019",
    "end": "868019"
  },
  {
    "text": "um and basically just like scan even even the full web server so those are the ones that that you tend to need to",
    "start": "868019",
    "end": "874019"
  },
  {
    "text": "mix in to your deployment pipeline um there's also end-to-end tests smoke tests you know selenium",
    "start": "874019",
    "end": "879899"
  },
  {
    "text": "and all of that stuff tends to need everything deployed talking together",
    "start": "879899",
    "end": "885500"
  },
  {
    "text": "um another thing that is in my opinion at least extremely important if you want to get all the way to CD at least if",
    "start": "889800",
    "end": "896940"
  },
  {
    "text": "your product like if stability is truly important to you for production and it should be",
    "start": "896940",
    "end": "901980"
  },
  {
    "text": "should it really should be important to everyone who's here is when you are deploying to production how",
    "start": "901980",
    "end": "909180"
  },
  {
    "text": "do you make sure that if there's a bug you haven't found yet you can detect it and automatically roll",
    "start": "909180",
    "end": "914880"
  },
  {
    "text": "back so a decent percentage of tools but not all of them",
    "start": "914880",
    "end": "920459"
  },
  {
    "text": "have things Beyond just you know hey shut down all of production install the",
    "start": "920459",
    "end": "926279"
  },
  {
    "text": "new version turn it on or an all at once update and a decent percentage also have",
    "start": "926279",
    "end": "931860"
  },
  {
    "text": "things Beyond Like a Rolling update which is uh the default strategy for for kubernetes um you know rolling update basically",
    "start": "931860",
    "end": "938220"
  },
  {
    "text": "like updates one POD at a time and their strategies beyond that",
    "start": "938220",
    "end": "944339"
  },
  {
    "text": "um so I'm going to talk about two of them the ones I'm going to talk about are Canary deployments and blue green deployments which are basically",
    "start": "944339",
    "end": "951720"
  },
  {
    "text": "strategies that help you both uh in the case of canary deployments decrease the blast radius of how many users are going",
    "start": "951720",
    "end": "959399"
  },
  {
    "text": "to be affected by your deployment and in the case of blue green deployments lets you actually validate that the specific",
    "start": "959399",
    "end": "964980"
  },
  {
    "text": "copy of the application in production is working as expected before you send it traffic and provides you the benefit of",
    "start": "964980",
    "end": "971880"
  },
  {
    "text": "instant rollback it does have one downside which is you're running multiple copies of the app so costs slightly more but you know",
    "start": "971880",
    "end": "979500"
  },
  {
    "start": "975000",
    "end": "1095000"
  },
  {
    "text": "if you're running this for 20 minutes it's usually not a huge deal so blue green deployment the the core",
    "start": "979500",
    "end": "986160"
  },
  {
    "text": "concept here is stand up two versions in parallel so in",
    "start": "986160",
    "end": "991800"
  },
  {
    "text": "addition to the old version you stand up the new version but you don't send it any traffic you validate it depending on where you",
    "start": "991800",
    "end": "998040"
  },
  {
    "text": "are in your get Ops and CD Journey if you're really early you might be validating it by hand there's a lot of",
    "start": "998040",
    "end": "1004699"
  },
  {
    "text": "people who are going I can't do I can't do CD I can't do get Ops like everything's manual well you know what",
    "start": "1004699",
    "end": "1010940"
  },
  {
    "text": "if it's manual go put together the building block have a manual approval like it it gets moving in the right",
    "start": "1010940",
    "end": "1017000"
  },
  {
    "text": "direction and then automate the manual approvals um so you know stand up the new version",
    "start": "1017000",
    "end": "1023240"
  },
  {
    "text": "run some tests against it look at it make sure everything looks good then send it traffic",
    "start": "1023240",
    "end": "1028579"
  },
  {
    "text": "then continue monitoring check your monitoring look at it and make sure it doesn't fall over",
    "start": "1028579",
    "end": "1033678"
  },
  {
    "text": "and you know keep that old version around for a while once you shut that old version down how quickly you can",
    "start": "1033679",
    "end": "1039980"
  },
  {
    "text": "roll back is limited by how long it takes your application to start you know if you're if your application",
    "start": "1039980",
    "end": "1045438"
  },
  {
    "text": "is cloud native hey hopefully it starts in sub 30 seconds if your application's some Legacy thing that was built on VMS",
    "start": "1045439",
    "end": "1051679"
  },
  {
    "text": "it might take four or five hours and uh you know that's a problem so",
    "start": "1051679",
    "end": "1056840"
  },
  {
    "text": "so run them in parallel for a while make sure everything's healthy that's that's the core concept um",
    "start": "1056840",
    "end": "1063580"
  },
  {
    "text": "there are some applications that this is not suitable for um it's it's not usually the cloud native ones but there",
    "start": "1063580",
    "end": "1070760"
  },
  {
    "text": "are applications out there that uh you cannot run multiple copies of they",
    "start": "1070760",
    "end": "1076039"
  },
  {
    "text": "usually have like an exclusive database Locker an exclusive file lock so if you have an application like that you might",
    "start": "1076039",
    "end": "1082520"
  },
  {
    "text": "not be able to do this but I would highly recommend making sure any CD tooling you are choosing and any get Ops",
    "start": "1082520",
    "end": "1088460"
  },
  {
    "text": "tooling you are choosing has a reasonable way to get here when you're ready for it because it will help you ship faster",
    "start": "1088460",
    "end": "1095740"
  },
  {
    "start": "1095000",
    "end": "1230000"
  },
  {
    "text": "the other Advanced deployment strategy I want to talk about is Canary deployments so",
    "start": "1095740",
    "end": "1101120"
  },
  {
    "text": "to give you an idea for why this one matters um there's a there's a company I know of",
    "start": "1101120",
    "end": "1106580"
  },
  {
    "text": "who uses these whose a payment processor so they uh",
    "start": "1106580",
    "end": "1112760"
  },
  {
    "text": "you know they're they're like a square they they run credit card transactions if they ship broken code and their",
    "start": "1112760",
    "end": "1119480"
  },
  {
    "text": "payments stop running that suddenly means literally every single payment that doesn't run is",
    "start": "1119480",
    "end": "1124760"
  },
  {
    "text": "costing the money and is frustrating their customers and losing them customers like if that's your business",
    "start": "1124760",
    "end": "1131240"
  },
  {
    "text": "you don't want a new version of code to go to everyone immediately so you know",
    "start": "1131240",
    "end": "1137059"
  },
  {
    "text": "they send one percent of their transactions through a new version of code for a while I want to say it's",
    "start": "1137059",
    "end": "1143299"
  },
  {
    "text": "something like two or three minutes and then they increase it to two percent go all the way up to 100. and what that",
    "start": "1143299",
    "end": "1148820"
  },
  {
    "text": "does is it decreases the risk of shipping so the whole reason why we're why we're at",
    "start": "1148820",
    "end": "1155120"
  },
  {
    "text": "cdcon the whole reason we're trying to ship continuously is the smaller changes are lower risk these strategies also",
    "start": "1155120",
    "end": "1161720"
  },
  {
    "text": "help you lower risk so there's various ways of implementing a canary strategy but the basic idea is",
    "start": "1161720",
    "end": "1167720"
  },
  {
    "text": "incrementally increase how much traffic is reaching the new version some people implement this at you know a load",
    "start": "1167720",
    "end": "1173780"
  },
  {
    "text": "balancer some people implement this by like dynamically scaling how many servers are running the application",
    "start": "1173780",
    "end": "1180200"
  },
  {
    "text": "there's a lot of options when you're choosing a tool set make sure that it has the same option here",
    "start": "1180200",
    "end": "1187179"
  },
  {
    "text": "you can build it yourself if you have to you can start combining four or five different tools but the more of that",
    "start": "1187179",
    "end": "1193640"
  },
  {
    "text": "you're doing the the harder your final solution is going to be to maintain you know a lot of",
    "start": "1193640",
    "end": "1201980"
  },
  {
    "text": "people a lot of companies build really really great in-house CD systems then",
    "start": "1201980",
    "end": "1207440"
  },
  {
    "text": "the guy who built them leaves and no one else knows how it works and then something changes and it's changed",
    "start": "1207440",
    "end": "1214160"
  },
  {
    "text": "breaks a little okay it's fine for another few months someone changes it again breaks a little",
    "start": "1214160",
    "end": "1219440"
  },
  {
    "text": "more so when you when you're looking at this stuff ask what's it going to be like when you leave how do you make sure",
    "start": "1219440",
    "end": "1225260"
  },
  {
    "text": "it's going to survive you and how's your company going to grow in that time",
    "start": "1225260",
    "end": "1230799"
  },
  {
    "start": "1230000",
    "end": "1270000"
  },
  {
    "text": "anyone have any uh any questions they wanted to ask about uh get Ops CD Etc",
    "start": "1231020",
    "end": "1239620"
  },
  {
    "text": "yes you in the back oh sorry I thought I thought you raised your hand guess guess you were not",
    "start": "1246380",
    "end": "1254200"
  },
  {
    "text": "reconcine right right time that the first deployment get",
    "start": "1256340",
    "end": "1261799"
  },
  {
    "text": "the change to the last one that get that change how do I make that time",
    "start": "1261799",
    "end": "1267140"
  },
  {
    "text": "how do you make that time small yes yes so the the the best secret I have to making",
    "start": "1267140",
    "end": "1273440"
  },
  {
    "start": "1270000",
    "end": "1427000"
  },
  {
    "text": "that time small is to automate every step which tends to be hard and run as",
    "start": "1273440",
    "end": "1279200"
  },
  {
    "text": "many steps as you can in parallel so a lot of companies have multiple different pre-production environments so like",
    "start": "1279200",
    "end": "1285440"
  },
  {
    "text": "integration tests and security scanners are often not in the same environment um I've worked for multiple companies where",
    "start": "1285440",
    "end": "1292340"
  },
  {
    "text": "it's like the security scanners must run in this environment and you can't even have full control as an app team to this",
    "start": "1292340",
    "end": "1297380"
  },
  {
    "text": "like we own this you can't touch it but you know if you could run your integration test",
    "start": "1297380",
    "end": "1302900"
  },
  {
    "text": "and your security tests in parallel hey if either of them fail you don't go on to prod but suddenly you're not waiting",
    "start": "1302900",
    "end": "1309559"
  },
  {
    "text": "so you know if you're doing one then the other it's going to be slower um",
    "start": "1309559",
    "end": "1314600"
  },
  {
    "text": "when you hit production there are a lot of people who deploy multiple regions in",
    "start": "1314600",
    "end": "1321620"
  },
  {
    "text": "parallel I have mixed feelings on this it really depends on your application the reason I have mixed feelings on this",
    "start": "1321620",
    "end": "1328220"
  },
  {
    "text": "is like making changes is not without with zero risk and when your application",
    "start": "1328220",
    "end": "1334159"
  },
  {
    "text": "is multi-region there tend to be periods of time where different regions are",
    "start": "1334159",
    "end": "1339559"
  },
  {
    "text": "lower have lower usage so there's also companies who do you know maintenance windows and will you know update the the",
    "start": "1339559",
    "end": "1347120"
  },
  {
    "text": "EU servers at midnight Europe time update the the US servers at midnight",
    "start": "1347120",
    "end": "1352280"
  },
  {
    "text": "U.S time so if you want to be all the way to production as fast as possible you do it in parallel you can decrease",
    "start": "1352280",
    "end": "1358880"
  },
  {
    "text": "risk farther by going hey the production environments update on uh you know",
    "start": "1358880",
    "end": "1364400"
  },
  {
    "text": "basically once a day during a maintenance window um and since I said the first the first",
    "start": "1364400",
    "end": "1370760"
  },
  {
    "text": "thing I said was fully automate everything if you're not there yet get the entire end to end flow working even",
    "start": "1370760",
    "end": "1376039"
  },
  {
    "text": "if it's got manual approvals look at how long each manual approval step takes and then prioritize automating those steps",
    "start": "1376039",
    "end": "1382100"
  },
  {
    "text": "based off how long they take does that does that answer your question it does",
    "start": "1382100",
    "end": "1388780"
  },
  {
    "text": "yes",
    "start": "1390740",
    "end": "1393158"
  },
  {
    "text": "hi um I have a question in regards to like the approval",
    "start": "1396500",
    "end": "1401900"
  },
  {
    "text": "um of of a commit in the github's way um so the the the friction I have is",
    "start": "1401900",
    "end": "1409220"
  },
  {
    "text": "between like do we do approvals to go production on the pr level and let the branch do whatever it wants to or do we",
    "start": "1409220",
    "end": "1416659"
  },
  {
    "text": "let the commit go through into the main branch and then whatever CD pipeline we use Argo whatever have a button say",
    "start": "1416659",
    "end": "1423140"
  },
  {
    "text": "approved go ahead yeah what what what's your view on that so my opinion is that",
    "start": "1423140",
    "end": "1429799"
  },
  {
    "start": "1427000",
    "end": "1520000"
  },
  {
    "text": "your PR review process should be having the code reviewers go I believe this can",
    "start": "1429799",
    "end": "1436640"
  },
  {
    "text": "go fully to production so like when I when I review a PR",
    "start": "1436640",
    "end": "1442039"
  },
  {
    "text": "if I see anything that I think would keep it from running I won't approve that PR there may be automated tests",
    "start": "1442039",
    "end": "1448820"
  },
  {
    "text": "that should always pass that haven't been run yet um so you know anything you're doing",
    "start": "1448820",
    "end": "1455059"
  },
  {
    "text": "from like a code a code review level when that PR merges you believe it's ready to go to production",
    "start": "1455059",
    "end": "1461120"
  },
  {
    "text": "um I'm a firm believer that you don't ask people to review your code until you believe your code will work in",
    "start": "1461120",
    "end": "1466700"
  },
  {
    "text": "production if there's tests that you need to run that need a deployed environment in production it's a lot of",
    "start": "1466700",
    "end": "1471860"
  },
  {
    "text": "companies who uh uh can use some of the get Ops and CD tools to you know stand up like a",
    "start": "1471860",
    "end": "1478700"
  },
  {
    "text": "namespace in a kubernetes cluster for a particular Branch spin it up hey you can run your test Suite there before it ever",
    "start": "1478700",
    "end": "1484880"
  },
  {
    "text": "merges um so PR that should be ready to go to production",
    "start": "1484880",
    "end": "1490520"
  },
  {
    "text": "sometimes your scanners find something you didn't expect so you may after merging to production",
    "start": "1490520",
    "end": "1496039"
  },
  {
    "text": "have those things running and if they detect a problem they'll fail it hey suddenly you need to go and fix that",
    "start": "1496039",
    "end": "1503480"
  },
  {
    "text": "problem I've got two questions uh first question",
    "start": "1503480",
    "end": "1509720"
  },
  {
    "text": "is uh are there any implications to doing both the get push and the get pull model",
    "start": "1509720",
    "end": "1518860"
  },
  {
    "start": "1520000",
    "end": "1583000"
  },
  {
    "text": "a lot of setups that do both the vast majority of the time people are doing one or the other I",
    "start": "1521419",
    "end": "1528740"
  },
  {
    "text": "so my product does um does the get the get push model and I've talked to",
    "start": "1528740",
    "end": "1534440"
  },
  {
    "text": "multiple people about like hey we can we can push back so that you can have",
    "start": "1534440",
    "end": "1539840"
  },
  {
    "text": "something else that's using to get the get pull model at the same time I haven't found a huge amount of interest",
    "start": "1539840",
    "end": "1546740"
  },
  {
    "text": "there there are a couple tools that are beginning to do that where they're doing",
    "start": "1546740",
    "end": "1551960"
  },
  {
    "text": "like a orchestration layer that writes back to get um but it isn't widely adopted yet",
    "start": "1551960",
    "end": "1559400"
  },
  {
    "text": "and I haven't seen enough of it in the wild that I think we know what its problems are yet if that makes any sense",
    "start": "1559400",
    "end": "1565520"
  },
  {
    "text": "thank you my second question would be uh on maintenance Windows is IT industry",
    "start": "1565520",
    "end": "1572299"
  },
  {
    "text": "standard to run the maintenance Windows just uh off work hours or off uh I guess",
    "start": "1572299",
    "end": "1578900"
  },
  {
    "text": "where most customers are online on the application so I'm not sure it's fair to call it an",
    "start": "1578900",
    "end": "1585740"
  },
  {
    "start": "1583000",
    "end": "1671000"
  },
  {
    "text": "industry standard it really depends on which industry you're in um",
    "start": "1585740",
    "end": "1591200"
  },
  {
    "text": "some Industries do maintenance Windows some don'ts like a lot of enterprise software does where your companies are",
    "start": "1591200",
    "end": "1598220"
  },
  {
    "text": "other software companies or and where you're doing a SAS solution does maintenance windows",
    "start": "1598220",
    "end": "1603559"
  },
  {
    "text": "I've talked to a decent amount of like consumer Tech that doesn't when you are doing maintenance Windows",
    "start": "1603559",
    "end": "1609020"
  },
  {
    "text": "there's two ways people do it and I have I happen to have a very strong opinion of which way is the right way so the two",
    "start": "1609020",
    "end": "1615080"
  },
  {
    "text": "ways I see people do it is we do it at a time that works well for our engine our internal engineering team that is in 5",
    "start": "1615080",
    "end": "1621440"
  },
  {
    "text": "PM on a Friday because hey this is this is a time that like fits in our schedule we can block it off easily it's in our",
    "start": "1621440",
    "end": "1627380"
  },
  {
    "text": "normal workday and then the other one that I see is this is a time when not most of our customers are not using it",
    "start": "1627380",
    "end": "1633080"
  },
  {
    "text": "so it's lower risk personally I believe the latter is what you should do it's far and away what I see most people",
    "start": "1633080",
    "end": "1638539"
  },
  {
    "text": "doing but I do occasionally see people who are who try and schedule maintenance Windows not around",
    "start": "1638539",
    "end": "1644600"
  },
  {
    "text": "what's right for their customer but about what's right for them internally and I don't think you should do that",
    "start": "1644600",
    "end": "1650600"
  },
  {
    "text": "does that answer your question yeah thank you yeah no problem",
    "start": "1650600",
    "end": "1656140"
  },
  {
    "text": "uh you know many traditional system we have a git Branch strategy such as the",
    "start": "1658279",
    "end": "1664880"
  },
  {
    "text": "git flow and how do you manage your git French with a city",
    "start": "1664880",
    "end": "1671059"
  },
  {
    "text": "so I uh you might have walked in after I talked about it but I am very adamantly",
    "start": "1671059",
    "end": "1677120"
  },
  {
    "text": "against using gitflow for uh like environments um",
    "start": "1677120",
    "end": "1682580"
  },
  {
    "text": "I am of the opinion that if you are doing a single repo you should basically",
    "start": "1682580",
    "end": "1688640"
  },
  {
    "text": "have feature branches they merge to trunk and then once it's on trunk your change the the goal of your trunk Branch",
    "start": "1688640",
    "end": "1695779"
  },
  {
    "text": "or your main branch depends on which repo you're on sorry I'm old uh is get",
    "start": "1695779",
    "end": "1701299"
  },
  {
    "text": "it out to all environments um when I see people doing a branch per environment that's like the single",
    "start": "1701299",
    "end": "1707120"
  },
  {
    "text": "biggest thing that I see people do where half the time the tool that they're going this tool",
    "start": "1707120",
    "end": "1714440"
  },
  {
    "text": "doesn't work for me it's forcing me to do these branches this way and it's bad like half the time they're saying that",
    "start": "1714440",
    "end": "1719600"
  },
  {
    "text": "about tool and the tool doesn't actually force it on them it's how someone configured years ago um so git flow is wonderful for managing",
    "start": "1719600",
    "end": "1726980"
  },
  {
    "text": "long-running versions I would strongly advise not using it for uh like a branch per environment I would use Mainline for",
    "start": "1726980",
    "end": "1734240"
  },
  {
    "text": "this is staging and production does that answer your question yeah but",
    "start": "1734240",
    "end": "1740059"
  },
  {
    "text": "it reminds me of another questions uh still generally in in our company we",
    "start": "1740059",
    "end": "1746659"
  },
  {
    "text": "have dedicated QA teams and generally it takes more than a week or months to",
    "start": "1746659",
    "end": "1753640"
  },
  {
    "text": "verify a certain version so the developer team should they should add a",
    "start": "1753640",
    "end": "1759860"
  },
  {
    "text": "new functionality or new features while the previous version is being verified so in this case this is where we require",
    "start": "1759860",
    "end": "1768140"
  },
  {
    "text": "the branch strategy so in case uh CC CD",
    "start": "1768140",
    "end": "1773299"
  },
  {
    "text": "how do you manage such cases so the best pattern I've seen for long-running QA",
    "start": "1773299",
    "end": "1779360"
  },
  {
    "start": "1775000",
    "end": "1920000"
  },
  {
    "text": "and a form a former employer of mine we had a monolithic code base that we wound",
    "start": "1779360",
    "end": "1785539"
  },
  {
    "text": "up ultimately migrating to kubernetes but um to give you an idea of uh just how",
    "start": "1785539",
    "end": "1792140"
  },
  {
    "text": "customizable was it had four different proprietary programming languages in",
    "start": "1792140",
    "end": "1797720"
  },
  {
    "text": "um the place we found bugs was literally stand up every customer's configuration",
    "start": "1797720",
    "end": "1805100"
  },
  {
    "text": "calculate it and make sure all the numbers are the same and we had customers who took two days to calculate for a single customer",
    "start": "1805100",
    "end": "1811399"
  },
  {
    "text": "uh so we what we wound up instituting was we had a kind of a",
    "start": "1811399",
    "end": "1818960"
  },
  {
    "text": "like basically two Mains so we had this is the main that is currently in the",
    "start": "1818960",
    "end": "1825020"
  },
  {
    "text": "process of trying to ship and then we had a main I forget what we called it that was this is the next one so",
    "start": "1825020",
    "end": "1830480"
  },
  {
    "text": "everyone merged their features into that this is the next one and the ultimate main",
    "start": "1830480",
    "end": "1836559"
  },
  {
    "text": "branch was updated on a schedule from the next main branch and if you missed the day when that cut your feature",
    "start": "1836559",
    "end": "1843200"
  },
  {
    "text": "didn't make the next release um and you know at that point in order to ship faster it",
    "start": "1843200",
    "end": "1849799"
  },
  {
    "text": "was okay how much Hardware are we willing to throw at the problem to run customers in parallel through this",
    "start": "1849799",
    "end": "1854960"
  },
  {
    "text": "really really slow testing process so you know if you have to run that slow",
    "start": "1854960",
    "end": "1862039"
  },
  {
    "text": "I would say have kind of a branch before main that you merged to cut off Main",
    "start": "1862039",
    "end": "1867080"
  },
  {
    "text": "when you're ready to start the the large um the large testing process and manage",
    "start": "1867080",
    "end": "1872779"
  },
  {
    "text": "it via VIA schedule make sure everyone knows the date this is when it moves if you miss the state you miss the release",
    "start": "1872779",
    "end": "1878720"
  },
  {
    "text": "and then you have your hardening period but I would also strongly recommend do everything you possibly can to make that",
    "start": "1878720",
    "end": "1884899"
  },
  {
    "text": "hardening period shorter okay thank you yeah no problem",
    "start": "1884899",
    "end": "1890720"
  },
  {
    "text": "any uh anyone else have anything",
    "start": "1890720",
    "end": "1894700"
  },
  {
    "text": "hi uh just another question um what is your recommendation in terms",
    "start": "1898399",
    "end": "1903500"
  },
  {
    "text": "of the triggers for promotions of deployments when you move from Dev Stage uat production like the teams I work",
    "start": "1903500",
    "end": "1910640"
  },
  {
    "text": "with they love the whole do a huge GHA Pipeline and automatically promote have it pause and so on like what's your",
    "start": "1910640",
    "end": "1916940"
  },
  {
    "text": "recommendation for the triggering to promote that artifact so in an ideal situation your sdlc should have a set of",
    "start": "1916940",
    "end": "1926240"
  },
  {
    "start": "1920000",
    "end": "2050000"
  },
  {
    "text": "things which need to happen in each environment before the code can move on so we need these tests to pass as an",
    "start": "1926240",
    "end": "1932539"
  },
  {
    "text": "example we need these people to sign off you should be able to Define kind of",
    "start": "1932539",
    "end": "1938059"
  },
  {
    "text": "that list of constraints of what needs to happen in a declarative way and once that list of constraints has happened it",
    "start": "1938059",
    "end": "1944240"
  },
  {
    "text": "can move on if you think about things like maintenance windows conceptually it's",
    "start": "1944240",
    "end": "1949399"
  },
  {
    "text": "just a constraint that says hey this environment can only update in this time of day so you know my personal opinion is",
    "start": "1949399",
    "end": "1956299"
  },
  {
    "text": "um like if you haven't solved that yet go okay what's the goal of this environment what needs to happen before",
    "start": "1956299",
    "end": "1962059"
  },
  {
    "text": "it can move on figure out your environment order hey this environment it can't start till this environment's",
    "start": "1962059",
    "end": "1967520"
  },
  {
    "text": "done and after you've defined that list of constraints um you basically defined everything you",
    "start": "1967520",
    "end": "1974360"
  },
  {
    "text": "need to do to deploy and personally I like the constraints model",
    "start": "1974360",
    "end": "1979760"
  },
  {
    "text": "where you're going like this needs to happen significantly more than like scripting",
    "start": "1979760",
    "end": "1986179"
  },
  {
    "text": "because it's more change resilient so some of the some of the tools out there you can actually Implement things as",
    "start": "1986179",
    "end": "1992179"
  },
  {
    "text": "these this list of things needs to happen as opposed to like you're writing a shell script",
    "start": "1992179",
    "end": "1997700"
  },
  {
    "text": "and they are a lot more change resilient to my experience",
    "start": "1997700",
    "end": "2002100"
  },
  {
    "text": "any other questions",
    "start": "2003880",
    "end": "2006720"
  },
  {
    "text": "are you seeing um in your experience are you seeing people when they are doing something",
    "start": "2011919",
    "end": "2017679"
  },
  {
    "text": "like a canary deployment um or or even blue green but just in general when something goes wrong do you",
    "start": "2017679",
    "end": "2025419"
  },
  {
    "text": "see um people rolling forward versus rolling",
    "start": "2025419",
    "end": "2030760"
  },
  {
    "text": "rolling back I mean in a kubernetes native environment it's always um uh you know the the natural thing",
    "start": "2030760",
    "end": "2038919"
  },
  {
    "text": "would be well let's just point to the older version of the image or are you seeing more okay let's fix the problem",
    "start": "2038919",
    "end": "2044440"
  },
  {
    "text": "rebuild it and redeploy um which which one are you seeing more I",
    "start": "2044440",
    "end": "2049658"
  },
  {
    "text": "so I see both so in when did when when automated deployment tooling",
    "start": "2049659",
    "end": "2056858"
  },
  {
    "text": "detects the problem you usually roll back and good if you're",
    "start": "2056859",
    "end": "2061960"
  },
  {
    "text": "using any good get Ops tooling any good CD tooling it should have like a one-click automated way to roll back",
    "start": "2061960",
    "end": "2069580"
  },
  {
    "text": "um on the roll forward okay cool you roll you rolled back prod",
    "start": "2069580",
    "end": "2075658"
  },
  {
    "text": "how do you go go about fixing it where I tend to see the roll forward is okay cool we've mitigated the risk enough",
    "start": "2075879",
    "end": "2081638"
  },
  {
    "text": "it's not a problem we're actually going and and looking at the bug let's go ahead and fix the bug it's drop",
    "start": "2081639",
    "end": "2087220"
  },
  {
    "text": "everything like we're not just abandoning that Branch we're not rolling back main it's all hands on deck let's",
    "start": "2087220",
    "end": "2092440"
  },
  {
    "text": "fix Maine and then you roll forward that change so it tends to actually be a hybrid most of the time like the per",
    "start": "2092440",
    "end": "2098320"
  },
  {
    "text": "environment tends to be a roll back but the the get side of it tends to be",
    "start": "2098320",
    "end": "2103720"
  },
  {
    "text": "managed as a roll forward did that answer your question okay",
    "start": "2103720",
    "end": "2109780"
  },
  {
    "text": "anyone else have anything awesome well thank you everyone for for coming uh if you have any questions or",
    "start": "2109780",
    "end": "2116380"
  },
  {
    "text": "want to talk more later I'll be out at the uh Armory Booth happy to talk more",
    "start": "2116380",
    "end": "2122220"
  }
]