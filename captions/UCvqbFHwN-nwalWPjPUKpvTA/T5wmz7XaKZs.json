[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "all right we're gonna go ahead and get started I'd like to thank everyone who is joining us today welcome to today's",
    "start": "30",
    "end": "6060"
  },
  {
    "text": "the ncf webinar deploying complex stateful applications on kubernetes with Cube director I'm Caitlin Varner",
    "start": "6060",
    "end": "12960"
  },
  {
    "text": "marketing manager at CNCs and I'll be helping to moderate today's webinar I'd also like to welcome today's presenters",
    "start": "12960",
    "end": "19260"
  },
  {
    "text": "Tom Phelan and Joel Baxter from new data so just a few housekeeping items before",
    "start": "19260",
    "end": "24630"
  },
  {
    "start": "24000",
    "end": "24000"
  },
  {
    "text": "we get started during the webinar you are not able to talk as an attendee so",
    "start": "24630",
    "end": "29699"
  },
  {
    "text": "there is a Q&A box at the bottom of your screen if you have any questions throughout the webinar please feel free",
    "start": "29699",
    "end": "35430"
  },
  {
    "text": "to drop them in there and then we'll get to as many as we can at the end the session is also being recorded and will",
    "start": "35430",
    "end": "41700"
  },
  {
    "text": "be sent out afterwards and available online along with a link to the presentation so with that I'll hand it",
    "start": "41700",
    "end": "48629"
  },
  {
    "text": "over to Tom to kick off today's presentation thanks Caitlin a scaley",
    "start": "48629",
    "end": "53940"
  },
  {
    "text": "points out Joel and myself are from blue data blue day has spent the last six",
    "start": "53940",
    "end": "59190"
  },
  {
    "text": "years deploying AI machine learning deep",
    "start": "59190",
    "end": "64290"
  },
  {
    "text": "learning clusters in the enterprise in full disclosure we were recently acquired by Hewlett Packard enterprise",
    "start": "64290",
    "end": "71070"
  },
  {
    "text": "so we are now part of the HPD family so today we'll be speaking about kubernetes",
    "start": "71070",
    "end": "77130"
  },
  {
    "text": "and on the first part I'll review a little bit talk about stateful versus stateless applications we'll talk about",
    "start": "77130",
    "end": "84420"
  },
  {
    "text": "how AI and ml and deep learning are complex stateful applications and how",
    "start": "84420",
    "end": "90570"
  },
  {
    "text": "that has some challenges on kubernetes well then don't dig into what what cube director actually is a deep dive of the",
    "start": "90570",
    "end": "97290"
  },
  {
    "text": "technology technology itself a demonstration in some takeaways at the end so to begin with I'm young I know",
    "start": "97290",
    "end": "105479"
  },
  {
    "start": "104000",
    "end": "104000"
  },
  {
    "text": "this audience knows a lot about kubernetes but just kind of do a level set what is kubernetes it's an open",
    "start": "105479",
    "end": "112020"
  },
  {
    "text": "source platform for container orchestration what this means is it's a",
    "start": "112020",
    "end": "117030"
  },
  {
    "text": "collection of building blocks and services that allow containers to be",
    "start": "117030",
    "end": "122520"
  },
  {
    "text": "placed on individual hosts following a set of rules we say host we mean either",
    "start": "122520",
    "end": "128700"
  },
  {
    "text": "a virtual machine or a bare metal a physical host some are a virtual",
    "start": "128700",
    "end": "134680"
  },
  {
    "text": "machine in the public cloud top use cases for kubernetes up to this point",
    "start": "134680",
    "end": "139840"
  },
  {
    "text": "has been the deployment of stateless applications these are also known as",
    "start": "139840",
    "end": "145120"
  },
  {
    "text": "micro services it's a still in the evolving platform for stateful",
    "start": "145120",
    "end": "150640"
  },
  {
    "text": "applications that we'll be talking about that today we say stateless application",
    "start": "150640",
    "end": "157299"
  },
  {
    "start": "155000",
    "end": "155000"
  },
  {
    "text": "what we mean is each application service instance is identical so each container",
    "start": "157299",
    "end": "163959"
  },
  {
    "text": "running an instance of a stateless service is identical to any other",
    "start": "163959",
    "end": "170260"
  },
  {
    "text": "instance running that same service they don't have a persistence or a configuration that is unique any",
    "start": "170260",
    "end": "177670"
  },
  {
    "text": "information that they need to store and access is stored remotely and when we",
    "start": "177670",
    "end": "184000"
  },
  {
    "text": "say remotely we mean that the persistent storage has a life span different than that of the container if the container",
    "start": "184000",
    "end": "191349"
  },
  {
    "text": "were to exit and restart it could connect to the same persistent storage",
    "start": "191349",
    "end": "196959"
  },
  {
    "text": "the remote persistent storage without loss of context typically these sorts of",
    "start": "196959",
    "end": "202930"
  },
  {
    "text": "applications are referred to as cattle because each instance is like every other instance of that application this",
    "start": "202930",
    "end": "211720"
  },
  {
    "start": "211000",
    "end": "211000"
  },
  {
    "text": "is in contrast to stateful applications in a stateful application there is some",
    "start": "211720",
    "end": "217840"
  },
  {
    "text": "intrinsic difference to each instance of the application that's instantiated",
    "start": "217840",
    "end": "223209"
  },
  {
    "text": "within the container it may be as simple as a an IP address or may be more",
    "start": "223209",
    "end": "228220"
  },
  {
    "text": "complex and this critical information is stored locally locally means it's part",
    "start": "228220",
    "end": "235540"
  },
  {
    "text": "of the storage that's associated with the container when a container starts",
    "start": "235540",
    "end": "241109"
  },
  {
    "text": "the reason this is the case is that these applications that are considered stateful are not written in a cloud",
    "start": "241109",
    "end": "248470"
  },
  {
    "text": "native manner cloud native architecture where the service as the running code is",
    "start": "248470",
    "end": "254139"
  },
  {
    "text": "separate from the storage itself in the case of stateful applications they are",
    "start": "254139",
    "end": "259150"
  },
  {
    "text": "combined such applications are completely referred to as pets since each instance",
    "start": "259150",
    "end": "265570"
  },
  {
    "text": "is different and the loss of one such instance is a loss now we look at",
    "start": "265570",
    "end": "273250"
  },
  {
    "start": "272000",
    "end": "272000"
  },
  {
    "text": "stateful applications such as AI machine learning deep learning these are some of the most stateful applications we have",
    "start": "273250",
    "end": "280300"
  },
  {
    "text": "in the enterprise today what about all these applications have in common they",
    "start": "280300",
    "end": "285370"
  },
  {
    "text": "require large amounts of data and that's okay that data is typically remote it's in a de Lake external from the",
    "start": "285370",
    "end": "291510"
  },
  {
    "text": "containers themselves but these are complex distributed processing solutions",
    "start": "291510",
    "end": "297070"
  },
  {
    "text": "they are not written into cloud native architecture they are typically deployed",
    "start": "297070",
    "end": "303640"
  },
  {
    "text": "as collections of services running on a bare metal host or in a virtual machine",
    "start": "303640",
    "end": "308860"
  },
  {
    "text": "and those services have inter dependencies they are not a cloud native",
    "start": "308860",
    "end": "314590"
  },
  {
    "text": "architecture there's no micro services and there is an application state so",
    "start": "314590",
    "end": "319840"
  },
  {
    "text": "these are some of the most complex stateful applications in existence than they require special treatment",
    "start": "319840",
    "end": "326190"
  },
  {
    "start": "326000",
    "end": "326000"
  },
  {
    "text": "to step back for a moment when we say we're running a Hadoop or an AI or a",
    "start": "326190",
    "end": "331630"
  },
  {
    "text": "machine learning cluster like spark or tensor flow in containers what we're",
    "start": "331630",
    "end": "338020"
  },
  {
    "text": "talking about is deploying it the same way it's deployed on bare metal this is not re-architecting or rewriting the AI",
    "start": "338020",
    "end": "346870"
  },
  {
    "text": "or ml application what I'm showing here are four boxes which are the Primo",
    "start": "346870",
    "end": "354160"
  },
  {
    "text": "typical deployment strategies for Hadoop there's a resource manager as a",
    "start": "354160",
    "end": "360130"
  },
  {
    "text": "collection of node managers they run different services with containers what",
    "start": "360130",
    "end": "365320"
  },
  {
    "text": "we're talking about is putting each of those nodes into a container or potentially a pod with with kubernetes",
    "start": "365320",
    "end": "372820"
  },
  {
    "text": "and this entire set of containers what's referred to as a cluster so we're going",
    "start": "372820",
    "end": "379150"
  },
  {
    "text": "forward with the remainder of this presentation this is what we're talking about what we're saying we're deploying a cluster of containers running one of",
    "start": "379150",
    "end": "386590"
  },
  {
    "text": "these machine learning artificial intelligence or deep learning applications",
    "start": "386590",
    "end": "392820"
  },
  {
    "text": "with kubernetes we have a number of tools and building blocks to work from these are called objects pods are a",
    "start": "392820",
    "end": "400660"
  },
  {
    "start": "393000",
    "end": "393000"
  },
  {
    "text": "collection of containers that are deployed on an individual host we have a",
    "start": "400660",
    "end": "405970"
  },
  {
    "text": "concept of a stateful set stateful set refers to a set of features associated",
    "start": "405970",
    "end": "412690"
  },
  {
    "text": "with the kubernetes container that are necessary for running a stateful application they order the service is in",
    "start": "412690",
    "end": "419800"
  },
  {
    "text": "the pod that are brought up they preserve some state of the container itself that should be done with the use",
    "start": "419800",
    "end": "427960"
  },
  {
    "text": "of persistent volumes and each application that's deployed are we have",
    "start": "427960",
    "end": "434830"
  },
  {
    "text": "via a stateful set it's done via an operator and operators the collection of actions they can be performed on a per",
    "start": "434830",
    "end": "441940"
  },
  {
    "text": "application basis typically operators are constructed from the use of a custom",
    "start": "441940",
    "end": "447880"
  },
  {
    "text": "resource definition you'll also hear the term CRD kubernetes operators are a",
    "start": "447880",
    "end": "455889"
  },
  {
    "start": "452000",
    "end": "452000"
  },
  {
    "text": "basic API is way of packaging deploying and managing an application now that open source community has created an",
    "start": "455889",
    "end": "462550"
  },
  {
    "text": "operator framework it makes it easier to develop an application specific operator",
    "start": "462550",
    "end": "468550"
  },
  {
    "text": "and finally there's another tool on top of that called the operator SDK these are layers of abstraction which make it",
    "start": "468550",
    "end": "475900"
  },
  {
    "text": "easier to develop an application specific operator but still we require a",
    "start": "475900",
    "end": "483010"
  },
  {
    "text": "different operator for each application to be deployed on kubernetes and with",
    "start": "483010",
    "end": "489190"
  },
  {
    "text": "the plethora of AI and ml application is in the marketplace today this would be quite a few operators this is very",
    "start": "489190",
    "end": "496150"
  },
  {
    "text": "challenging for the enterprise to do so what do we need to do there's got to be",
    "start": "496150",
    "end": "502030"
  },
  {
    "text": "an easier way and this is what blue data has done we've used our knowledge we're helping the community with an easier",
    "start": "502030",
    "end": "509530"
  },
  {
    "text": "tool bluh KS you might hear that term this is a an umbrella Apache project started by",
    "start": "509530",
    "end": "517270"
  },
  {
    "text": "a blue data but now open to the open-source community focused solely on",
    "start": "517270",
    "end": "522599"
  },
  {
    "text": "bringing enterprise support for complex stateful applications to kubernetes",
    "start": "522599",
    "end": "528390"
  },
  {
    "text": "there'll be a series of open source projects in this case and the first thing would roll out is cube director",
    "start": "528390",
    "end": "534339"
  },
  {
    "text": "this is the URL for the cube director site on github",
    "start": "534339",
    "end": "540190"
  },
  {
    "text": "at this point I'd like to turn it over to Joel for a deep dive into Cupid director",
    "start": "540190",
    "end": "547319"
  },
  {
    "text": "you jool you might be on mute yeah I'm off",
    "start": "553699",
    "end": "558960"
  },
  {
    "text": "mute now okay so I'm going to start with the background that Tom laid there and dig a little bit more into the design of",
    "start": "558960",
    "end": "566340"
  },
  {
    "text": "cube director the specific things that we're doing with it and tempt fate somewhat with a live demo it's a lot to",
    "start": "566340",
    "end": "573270"
  },
  {
    "text": "get through but I'll try to leave us some room for questions at the end as well so if we're going to start talking",
    "start": "573270",
    "end": "580410"
  },
  {
    "start": "580000",
    "end": "580000"
  },
  {
    "text": "about the specifics of what we're implementing the cube director project one thing to get out of the way is our",
    "start": "580410",
    "end": "588930"
  },
  {
    "text": "motivation of this project now why would we want to create it why would someone want to use it and maybe you know as an",
    "start": "588930",
    "end": "595500"
  },
  {
    "text": "open source project why would someone want to contribute to it because there",
    "start": "595500",
    "end": "600960"
  },
  {
    "text": "are a lot of ways to deploy things on kubernetes there's a lot of solutions for getting applications to run on",
    "start": "600960",
    "end": "606060"
  },
  {
    "text": "kubernetes tom mentioned app specific operators there's also sort of client-side template management",
    "start": "606060",
    "end": "613290"
  },
  {
    "text": "solutions like helm and cube flow and if you're looking for a solution to deploy a particular thing maybe in a production",
    "start": "613290",
    "end": "620190"
  },
  {
    "text": "environment you're probably just going to do a a bullet point comparison of features you know does this solution do",
    "start": "620190",
    "end": "626040"
  },
  {
    "text": "but I wanted to do right now but from our perspective as developers and looking for you know open source",
    "start": "626040",
    "end": "631860"
  },
  {
    "text": "contributors and the direction of the project in the future we're also interested in asking what does the",
    "start": "631860",
    "end": "638580"
  },
  {
    "text": "design enable us to do as we go forward what things does our architecture of our solution make easy to do or hard to do",
    "start": "638580",
    "end": "644970"
  },
  {
    "text": "and there's not going to be a best solution for all you know possible purposes but we do want to find sort of",
    "start": "644970",
    "end": "652410"
  },
  {
    "text": "a sweet spot between two extremes of deploying applications on kubernetes you know at the one end there's a very low",
    "start": "652410",
    "end": "658710"
  },
  {
    "text": "level the use of the kubernetes api is and kind of making a bespoke solution",
    "start": "658710",
    "end": "664710"
  },
  {
    "text": "for every application when you figure out that you need to deploy that application and on the other end and this is where for example app specific",
    "start": "664710",
    "end": "671430"
  },
  {
    "text": "operators come in some other person who's an expert in the application and in kubernetes has put together a",
    "start": "671430",
    "end": "677730"
  },
  {
    "text": "solution for you kind of as a black box and it handles this application very well but if you want to tweak it or if",
    "start": "677730",
    "end": "683250"
  },
  {
    "text": "you want to manage other applications then it's not the best solution",
    "start": "683250",
    "end": "689260"
  },
  {
    "text": "so if we're going to aim for a spot between these two extremes you know we we don't want to just use the low level",
    "start": "689260",
    "end": "695690"
  },
  {
    "text": "make our end-users use the low level kubernetes api eyes directly so we need to build some abstractions on top of",
    "start": "695690",
    "end": "700880"
  },
  {
    "text": "those to guide these abstractions you know to pick what features and what data",
    "start": "700880",
    "end": "707240"
  },
  {
    "text": "model and what operations we support we need a focus you know we don't want to go all the way towards just supporting a",
    "start": "707240",
    "end": "712880"
  },
  {
    "text": "specific application but we do want to focus on this domain of big data AI machine learning data hungry these",
    "start": "712880",
    "end": "719270"
  },
  {
    "text": "stateful applications that Tom described and so if we look at you know what these",
    "start": "719270",
    "end": "725810"
  },
  {
    "text": "apps have in common from the point of view of what sort of behaviors we want to support on what sort of workflows are",
    "start": "725810",
    "end": "732380"
  },
  {
    "text": "interesting there's there's a lot of things that can guide our design and so that's what we're shooting forth cube",
    "start": "732380",
    "end": "738140"
  },
  {
    "text": "director and that's what I'm going to try to demonstrate as we go forward here so coop director itself is what's called",
    "start": "738140",
    "end": "746900"
  },
  {
    "start": "743000",
    "end": "743000"
  },
  {
    "text": "a custom controller this is a process that watches the kubernetes api for",
    "start": "746900",
    "end": "753100"
  },
  {
    "text": "resources to appear so someone else uses the cuba Nettie's api to submit a",
    "start": "753100",
    "end": "758839"
  },
  {
    "text": "resource to create or change or delete a resource in kubernetes persistence store",
    "start": "758839",
    "end": "763910"
  },
  {
    "text": "and then the controller notices that that has happened and does something and",
    "start": "763910",
    "end": "769820"
  },
  {
    "text": "in our case we're actually watching among other things for custom resources",
    "start": "769820",
    "end": "775070"
  },
  {
    "text": "to appear so we're not just interested in observing the the pods and the services and things like that that are",
    "start": "775070",
    "end": "780140"
  },
  {
    "text": "the sort of native kubernetes objects we've also provided some schemas to kubernetes to define some custom objects",
    "start": "780140",
    "end": "786560"
  },
  {
    "text": "that our coop director is specific and we'll talk a lot more about those in just a minute and these are essentially",
    "start": "786560",
    "end": "793459"
  },
  {
    "text": "the requests that end-users provide to kubernetes that are requesting cube",
    "start": "793459",
    "end": "799100"
  },
  {
    "text": "director to do something on their behalf and so when cube director sees this request it's going to again start using",
    "start": "799100",
    "end": "805400"
  },
  {
    "text": "the kubernetes api to create stateful sets cradle these other objects that Tom mentioned to sort of try to bring the",
    "start": "805400",
    "end": "812270"
  },
  {
    "text": "world into accordance with users requests now everything I've mentioned so far in this slide",
    "start": "812270",
    "end": "819640"
  },
  {
    "text": "this is pretty much what an app specific operator does so the way cube director",
    "start": "819640",
    "end": "825339"
  },
  {
    "text": "diverges from that is that the logic for determining how to respond to these",
    "start": "825339",
    "end": "830890"
  },
  {
    "text": "requests there's no app specific semantics coded into cube director itself cube director works with",
    "start": "830890",
    "end": "838140"
  },
  {
    "text": "data-driven descriptions of application types how you deploy these applications",
    "start": "838140",
    "end": "843490"
  },
  {
    "text": "how you manage them after they're deployed and then it uses those descriptions which can be provided by",
    "start": "843490",
    "end": "849430"
  },
  {
    "text": "the end user they don't have to be created by the cube director team or anybody outside the users organization",
    "start": "849430",
    "end": "855630"
  },
  {
    "text": "those descriptions completely Drive cube director through a state machine of deploying then managing these",
    "start": "855630",
    "end": "861700"
  },
  {
    "text": "applications so one obvious benefit to that is that it is some there's a",
    "start": "861700",
    "end": "868839"
  },
  {
    "text": "somewhat natural and easier process for bringing new applications into the fold of being deployable and manageable on",
    "start": "868839",
    "end": "875380"
  },
  {
    "text": "kubernetes especially if you have an existing application definition and you just maybe want to roll to a new version",
    "start": "875380",
    "end": "881470"
  },
  {
    "text": "of that application I use some different packages set it up in a slightly different way it's quite easy to make",
    "start": "881470",
    "end": "886600"
  },
  {
    "text": "that modification in these metadata files that describe the deployment but if you want to just bring a completely",
    "start": "886600",
    "end": "892120"
  },
  {
    "text": "new say open source application and that maybe hasn't had an operator written for it yet you can do that as well you can",
    "start": "892120",
    "end": "899709"
  },
  {
    "text": "create a new set of metadata and a container image for that application and give it to cube director and cube",
    "start": "899709",
    "end": "905140"
  },
  {
    "text": "director will know how to manage it there's also a slightly more subtle benefit from this which is that there's",
    "start": "905140",
    "end": "910899"
  },
  {
    "text": "other objects and features that cube director currently and especially in the future will support which are cross",
    "start": "910899",
    "end": "918430"
  },
  {
    "text": "cluster and cross application features things like how do you access data sources how do you authenticate users",
    "start": "918430",
    "end": "925839"
  },
  {
    "text": "inside your applications maybe integrating with your Enterprise ad server how do you hook clusters together",
    "start": "925839",
    "end": "933100"
  },
  {
    "text": "into processing pipelines and where make clusters where up other objects you defined once these features are",
    "start": "933100",
    "end": "939160"
  },
  {
    "text": "implemented in cube director then by virtue of providing the metadata for a new application type to cube director it",
    "start": "939160",
    "end": "945550"
  },
  {
    "text": "participates in those features automatically and different applications even from different developers can participate in these features together",
    "start": "945550",
    "end": "951459"
  },
  {
    "text": "without any knowledge of each other",
    "start": "951459",
    "end": "955230"
  },
  {
    "text": "so concretely speaking cube director is just a process that runs likely on the",
    "start": "956730",
    "end": "965350"
  },
  {
    "start": "957000",
    "end": "957000"
  },
  {
    "text": "same kubernetes platform that it's managing typically when you deploy a controller you're just going to have",
    "start": "965350",
    "end": "970810"
  },
  {
    "text": "some sort of deployment yamo or JSON file that describes hey you",
    "start": "970810",
    "end": "975850"
  },
  {
    "text": "know here's the container image to use you know maybe pull an image from docker hub or from your own internal image",
    "start": "975850",
    "end": "981760"
  },
  {
    "text": "repository and just to play this on kubernetes it starts up starts listening",
    "start": "981760",
    "end": "988810"
  },
  {
    "text": "to the kubernetes api and it's basically ready to go at that point then an end",
    "start": "988810",
    "end": "994120"
  },
  {
    "text": "user who wants to actually deploy a virtual cluster comes along and provides",
    "start": "994120",
    "end": "999180"
  },
  {
    "text": "this custom resource that I mentioned earlier this specification of the users intentions they provide a document to",
    "start": "999180",
    "end": "1007320"
  },
  {
    "text": "the kubernetes api that says i'd like a spark cluster for example and here's a description of the resources it needs to",
    "start": "1007320",
    "end": "1012630"
  },
  {
    "text": "use and kubernetes takes that document and just stores it into its persistent",
    "start": "1012630",
    "end": "1018840"
  },
  {
    "text": "store and Etsy D so even though kubernetes has been told about the",
    "start": "1018840",
    "end": "1024870"
  },
  {
    "text": "schema for these resources it doesn't treat them as having any implied actions",
    "start": "1024870",
    "end": "1031020"
  },
  {
    "text": "it's just a document that kubernetes is managing so the you use a standard kubernetes api client to create this",
    "start": "1031020",
    "end": "1036959"
  },
  {
    "text": "resource cube director then notices that the resource has been created and that",
    "start": "1036959",
    "end": "1042030"
  },
  {
    "text": "it represents a request to create say maybe a Hadoop cluster or spark cluster and then it enters what we call the",
    "start": "1042030",
    "end": "1047550"
  },
  {
    "text": "reconciliation loop the reconciliation loop is is basically just working its",
    "start": "1047550",
    "end": "1054930"
  },
  {
    "text": "way through a state machine where it instantiates some objects in kubernetes",
    "start": "1054930",
    "end": "1061560"
  },
  {
    "text": "it takes some actions on the kubernetes api maybe it creates a stateful set maybe it creates a service and then it",
    "start": "1061560",
    "end": "1067770"
  },
  {
    "text": "goes away and then it comes back in a little while to check to see has this been completed if so it'll go to the",
    "start": "1067770",
    "end": "1073230"
  },
  {
    "text": "next part of the state machine so maybe it has to set up a pod wait until the containers are ready in that pod then",
    "start": "1073230",
    "end": "1079290"
  },
  {
    "text": "configure the application inside the pod so there's a set of steps that has to work through and meanwhile it's updating",
    "start": "1079290",
    "end": "1085440"
  },
  {
    "text": "this resource that are provided to say what the status of this process is and then once cube",
    "start": "1085440",
    "end": "1091890"
  },
  {
    "text": "director is finished working its way through the reconciliation loop the cluster is up and ready to go by using",
    "start": "1091890",
    "end": "1102780"
  },
  {
    "start": "1099000",
    "end": "1099000"
  },
  {
    "text": "this custom controller approach and also by taking a data-driven approach to implementing support for different",
    "start": "1102780",
    "end": "1109200"
  },
  {
    "text": "applications one of the good things about the coop director design is that it supports it doesn't require but it",
    "start": "1109200",
    "end": "1115200"
  },
  {
    "text": "supports the separation of concerns among different user types so if you have people in your organization that",
    "start": "1115200",
    "end": "1121260"
  },
  {
    "text": "have different knowledge sets maybe different privileges to do different things by virtue of the fact that",
    "start": "1121260",
    "end": "1129060"
  },
  {
    "text": "everything we do runs through the kubernetes API uses custom resources and is controllable by all the",
    "start": "1129060",
    "end": "1135030"
  },
  {
    "text": "authentication and authorization methods that kubernetes provides so for example you can say these users in this",
    "start": "1135030",
    "end": "1140910"
  },
  {
    "text": "namespace have privilege to create or modify these custom resources and these",
    "start": "1140910",
    "end": "1146190"
  },
  {
    "text": "users in this other namespace had these different privileges you can have this separation of concerns you can have",
    "start": "1146190",
    "end": "1151200"
  },
  {
    "text": "application experts who are entirely responsible for figuring out how to create the container image and the",
    "start": "1151200",
    "end": "1157050"
  },
  {
    "text": "metadata for the application but they don't have to have the privilege to install this application in kubernetes",
    "start": "1157050",
    "end": "1162300"
  },
  {
    "text": "they don't have to understand how kubernetes operators work they don't have to write go code they just have to",
    "start": "1162300",
    "end": "1168060"
  },
  {
    "text": "know how to write to this metadata format and make a container image then they can supply that to an administrator",
    "start": "1168060",
    "end": "1174390"
  },
  {
    "text": "either like an IT kind of administrator or maybe a project manager who can take",
    "start": "1174390",
    "end": "1179970"
  },
  {
    "text": "this metadata and import it into coop director and determine which users have privileged to make instances of this",
    "start": "1179970",
    "end": "1186570"
  },
  {
    "text": "application so essentially they're setting up a policy or a template for different sets of users and then the end",
    "start": "1186570",
    "end": "1191910"
  },
  {
    "text": "users can come on and again they don't have to understand how operators work they don't have to know the details of",
    "start": "1191910",
    "end": "1198750"
  },
  {
    "text": "the application or even which container image it's using they just know that here's a kind of application that's available to me I can submit a request",
    "start": "1198750",
    "end": "1206340"
  },
  {
    "text": "to kubernetes to instantiate that application that application and you know maybe there's various knobs and",
    "start": "1206340",
    "end": "1212190"
  },
  {
    "text": "controls available to the end-user like selecting the amounts of resources it's going to consume or selecting which",
    "start": "1212190",
    "end": "1217410"
  },
  {
    "text": "services it's going to run but whoever designs the application for an",
    "start": "1217410",
    "end": "1222510"
  },
  {
    "text": "appointment at this particular site can dial that complexity up and down they can decide how much complexity is",
    "start": "1222510",
    "end": "1227549"
  },
  {
    "text": "actually put onto the end user and from our perspective as Cube director we just",
    "start": "1227549",
    "end": "1233850"
  },
  {
    "text": "want this this custom resource from the end-user this request to instantiate an application to come to the kubernetes",
    "start": "1233850",
    "end": "1239100"
  },
  {
    "text": "api and then we'll tackle it we don't really care where it comes from this is probably a very rich area of development",
    "start": "1239100",
    "end": "1245669"
  },
  {
    "text": "for putting a nice user interface on top of this part of the workflow so thinking",
    "start": "1245669",
    "end": "1253679"
  },
  {
    "start": "1251000",
    "end": "1251000"
  },
  {
    "text": "about that that design that architecture for cube director let's call back a minute to the motivation slide you know",
    "start": "1253679",
    "end": "1259169"
  },
  {
    "text": "why would we want to have a solution architect alight cube director as opposed to some of these other things",
    "start": "1259169",
    "end": "1264960"
  },
  {
    "text": "that are available to us currently and again these other things are are very",
    "start": "1264960",
    "end": "1270149"
  },
  {
    "text": "good solutions for many use cases but coop director we're trying to make it strong for some particular use cases in this domain of applications so one thing",
    "start": "1270149",
    "end": "1277529"
  },
  {
    "text": "as I mentioned is that we support these distinctions between user roles you don't have to have a power user who",
    "start": "1277529",
    "end": "1283950"
  },
  {
    "text": "knows a lot about kubernetes and the application or someone who has privileges to do very high level",
    "start": "1283950",
    "end": "1291269"
  },
  {
    "text": "privilege things in kubernetes as well as deploy the clusters for the data scientists you can separate out these",
    "start": "1291269",
    "end": "1296760"
  },
  {
    "text": "roles and if you're using a more client-side templatized approach this is",
    "start": "1296760",
    "end": "1302610"
  },
  {
    "text": "harder to do it's not impossible but there's a lot more work to make it happen correctly because we're sort of",
    "start": "1302610",
    "end": "1310320"
  },
  {
    "text": "sitting behind the kubernetes api because we wait for documents to come through the kubernetes api before we",
    "start": "1310320",
    "end": "1316080"
  },
  {
    "text": "react to them we get the benefit of all the authentication and authorization methods that kubernetes provides and we",
    "start": "1316080",
    "end": "1322649"
  },
  {
    "text": "don't have to worry about having maybe two different sources of authority about users that might you know have to be",
    "start": "1322649",
    "end": "1328919"
  },
  {
    "text": "kept in sync with each other if you're using a solution like helm two with tiller that sits out in front of the API",
    "start": "1328919",
    "end": "1335010"
  },
  {
    "text": "where you ought indicate to that other solution first and then it sort of acts like a super user to kubernetes then you",
    "start": "1335010",
    "end": "1342179"
  },
  {
    "text": "don't have that benefit now there may be there may be reasons you want to do that approach but in many cases it's it's",
    "start": "1342179",
    "end": "1348740"
  },
  {
    "text": "more natural and more easy to keep secure if you just have this one authority of user",
    "start": "1348740",
    "end": "1355759"
  },
  {
    "text": "also because we have this process that runs that is long-lived sitting in",
    "start": "1356370",
    "end": "1361929"
  },
  {
    "text": "kubernetes watching these deployments after they're created we're not just intervening at deployment time after to",
    "start": "1361929",
    "end": "1368380"
  },
  {
    "text": "the cluster comes up we can watch it to respond to further user requests to scale it up and down we can respond to",
    "start": "1368380",
    "end": "1375669"
  },
  {
    "text": "auto scale policies to scale the cluster according to load we can auto remediate when there's errors you know when a when",
    "start": "1375669",
    "end": "1382299"
  },
  {
    "text": "a stateful node goes down there may be applications specific things that have to be done to bring it back up again all",
    "start": "1382299",
    "end": "1387700"
  },
  {
    "text": "these things require having a long-lived manager process there to watch it because these are semantics above and",
    "start": "1387700",
    "end": "1393580"
  },
  {
    "text": "beyond what kubernetes can understand or can be can be made to deal with and so",
    "start": "1393580",
    "end": "1398880"
  },
  {
    "text": "again if you're using just a a purely client-side sort of template driven approach you don't have this long-lived",
    "start": "1398880",
    "end": "1404410"
  },
  {
    "text": "manager process to take care of these things now all those things on the",
    "start": "1404410",
    "end": "1412330"
  },
  {
    "text": "previous slide all those benefits also apply to application specific operators there's a couple of other ways in which",
    "start": "1412330",
    "end": "1419770"
  },
  {
    "text": "Cube director is different from application specific operators and we've really either explicitly or implicitly",
    "start": "1419770",
    "end": "1425950"
  },
  {
    "text": "hit this point a lot up until now and that's because we are data driven by",
    "start": "1425950",
    "end": "1432000"
  },
  {
    "text": "metadata by documents that describe application types it's easier to import",
    "start": "1432000",
    "end": "1438070"
  },
  {
    "text": "new applications to be supported by this solution and you can have common features that apply across multiple",
    "start": "1438070",
    "end": "1443530"
  },
  {
    "text": "application types now if you are a single application shop or if you you",
    "start": "1443530",
    "end": "1449559"
  },
  {
    "text": "know have small number of applications that already have well-developed operators for them this may not matter to you but otherwise it might okay so",
    "start": "1449559",
    "end": "1459220"
  },
  {
    "start": "1458000",
    "end": "1458000"
  },
  {
    "text": "the rest of the talk we're going to be actually looking at queue director in action and talking about some details of",
    "start": "1459220",
    "end": "1465460"
  },
  {
    "text": "the way it does the things it does just to make sure that we have everybody on the same page I'm going to cover a few",
    "start": "1465460",
    "end": "1471780"
  },
  {
    "text": "bits of concepts and terminology here",
    "start": "1471780",
    "end": "1476250"
  },
  {
    "text": "this orange cloud in the middle of the of the picture we may get some other",
    "start": "1477570",
    "end": "1483130"
  },
  {
    "text": "slides later on that use this same sort of iconography that's that represents just all the resources that",
    "start": "1483130",
    "end": "1489700"
  },
  {
    "text": "have been created in kubernetes site so all the documents all the Native",
    "start": "1489700",
    "end": "1496750"
  },
  {
    "text": "communities resources as well as the custom resources that we've defined when someone asks a cube director to create a",
    "start": "1496750",
    "end": "1505180"
  },
  {
    "text": "virtual cluster by submitting this custom resource that asks to instantiate an application type cube director is",
    "start": "1505180",
    "end": "1513190"
  },
  {
    "text": "going to start creating objects in kubernetes and one of the important things too that you'll see when we when",
    "start": "1513190",
    "end": "1522070"
  },
  {
    "text": "we get into actual cube director activities is the concept of rolls these",
    "start": "1522070",
    "end": "1527340"
  },
  {
    "text": "squares inside the deployed virtual cluster there those are each a container acting as a virtual host like Tom",
    "start": "1527340",
    "end": "1534850"
  },
  {
    "text": "mentioned our approach to to deploying these stateful applications kind of a model that we're able to fit on a large",
    "start": "1534850",
    "end": "1540970"
  },
  {
    "text": "group of applications is to treat each container as an entire virtual host it has a file system it has a network",
    "start": "1540970",
    "end": "1546700"
  },
  {
    "text": "identity it has services running in it on the standard service ports multiple services inside each container and",
    "start": "1546700",
    "end": "1554400"
  },
  {
    "text": "within this virtual cluster among these virtual hosts we use the role concept to",
    "start": "1554400",
    "end": "1560110"
  },
  {
    "text": "distinguish different cluster members different virtual hosts that have different personalities so for a",
    "start": "1560110",
    "end": "1567940"
  },
  {
    "text": "particular role in the cluster that determines which container images used to deploy the container it determines",
    "start": "1567940",
    "end": "1574830"
  },
  {
    "text": "how many how much CPU and memory and GPU and other resources are used by the container it determines which services",
    "start": "1574830",
    "end": "1581470"
  },
  {
    "text": "are running inside this container so that's kind of our leverage point for dealing with the fact that different members inside the cluster may have",
    "start": "1581470",
    "end": "1588580"
  },
  {
    "text": "different personalities and in this particular case we've deployed a cluster that has role with one member and maybe",
    "start": "1588580",
    "end": "1595870"
  },
  {
    "text": "that's some sort of controller or manager host inside the cluster and then we have another role with three members",
    "start": "1595870",
    "end": "1601450"
  },
  {
    "text": "running different services than the previous role maybe these are some sort",
    "start": "1601450",
    "end": "1606550"
  },
  {
    "text": "of scale out worker task processing sort of role it's a common common set up in this sort of cluster",
    "start": "1606550",
    "end": "1612930"
  },
  {
    "text": "so all of these containers and they come up they're pulling a container image from some repository that's accessible to kubernetes and they may also be",
    "start": "1612930",
    "end": "1619410"
  },
  {
    "text": "pulling in some what we call configuration artifacts there's a set of",
    "start": "1619410",
    "end": "1624480"
  },
  {
    "text": "things that is convenient to pull into the container at launch time rather than",
    "start": "1624480",
    "end": "1629940"
  },
  {
    "text": "they can get into the container image either because you want to share these among being used by different container",
    "start": "1629940",
    "end": "1636360"
  },
  {
    "text": "images or just because in the in the course of development or your usual processes you revise these things and",
    "start": "1636360",
    "end": "1642750"
  },
  {
    "text": "it's kind of tedious to have to bake it back into the container image each time so when the container comes up the",
    "start": "1642750",
    "end": "1648180"
  },
  {
    "text": "application metadata may tell us that we need to pull in these extra configuration artifacts these can be",
    "start": "1648180",
    "end": "1653730"
  },
  {
    "text": "scripts that respond to lifecycle events that cube directory triggers these can",
    "start": "1653730",
    "end": "1659280"
  },
  {
    "text": "be things like application configuration file templates that the scripts use to help set up the application it could be",
    "start": "1659280",
    "end": "1665130"
  },
  {
    "text": "software licenses it could be host certificates there could be you know anything you want to put in this it's just a tar file that we inject into the",
    "start": "1665130",
    "end": "1671250"
  },
  {
    "text": "application at launch time so finally",
    "start": "1671250",
    "end": "1677400"
  },
  {
    "start": "1675000",
    "end": "1675000"
  },
  {
    "text": "before we get into some demonstrations and details the customer resources are",
    "start": "1677400",
    "end": "1683010"
  },
  {
    "text": "really the heart of what we work with and what any custom controller works with and there's a few custom resources",
    "start": "1683010",
    "end": "1691470"
  },
  {
    "text": "already present if you check out the the cube director github repo today and we're talking internally and with with",
    "start": "1691470",
    "end": "1697860"
  },
  {
    "text": "some other people about future features that are going to use many more custom resources basically anytime you have",
    "start": "1697860",
    "end": "1704820"
  },
  {
    "text": "some user provided information that you want to be persisted that's going to be represented in a custom resource but to",
    "start": "1704820",
    "end": "1712650"
  },
  {
    "text": "keep this this particular talk focused and to try to keep us on track for allowing some questions here we're just",
    "start": "1712650",
    "end": "1717930"
  },
  {
    "text": "going to talk about the two main custom resources that cube director will react",
    "start": "1717930",
    "end": "1723360"
  },
  {
    "text": "to when it sees those created or changed in the kubernetes resource cloud",
    "start": "1723360",
    "end": "1729830"
  },
  {
    "text": "the first one is cube director cluster and this is what represents that",
    "start": "1729830",
    "end": "1735420"
  },
  {
    "text": "incoming request by an end user by or made by a data scientist that says I",
    "start": "1735420",
    "end": "1740610"
  },
  {
    "text": "want to instantiate this application type so that's the cube director cluster resource the cube director cluster itself",
    "start": "1740610",
    "end": "1747870"
  },
  {
    "text": "references a different type of ceará called the cube director app and the",
    "start": "1747870",
    "end": "1753210"
  },
  {
    "text": "cube director app is that application type description that application metadata that I've been talking about so",
    "start": "1753210",
    "end": "1761850"
  },
  {
    "text": "typically when you're setting up the cube director you would provide it with some initial set of cube director apps",
    "start": "1761850",
    "end": "1767400"
  },
  {
    "text": "some initial catalog of application types that can respond to and maybe",
    "start": "1767400",
    "end": "1772710"
  },
  {
    "text": "those will get revised or or added to over time but they don't they don't churn a lot the the resources that come",
    "start": "1772710",
    "end": "1779640"
  },
  {
    "text": "and go are instead going to be the cube director cluster resources as people create and delete and modify these",
    "start": "1779640",
    "end": "1786360"
  },
  {
    "text": "virtual clusters so to talk about the",
    "start": "1786360",
    "end": "1791910"
  },
  {
    "text": "details here and to to demonstrate cube director in action we're going to use as a framework some of these user roles",
    "start": "1791910",
    "end": "1798600"
  },
  {
    "text": "we've been talking about this also kind of help demonstrate if you want to set",
    "start": "1798600",
    "end": "1805470"
  },
  {
    "text": "up and test out try out cube director yourself this is kind of the set of steps you would have to go through personally to get it to get it running",
    "start": "1805470",
    "end": "1810860"
  },
  {
    "text": "so the first user role we're going to go through really briefly because there's not not a whole lot to that is the",
    "start": "1810860",
    "end": "1816090"
  },
  {
    "start": "1816000",
    "end": "1816000"
  },
  {
    "text": "administration role basically what do you have to do to make you director run",
    "start": "1816090",
    "end": "1821820"
  },
  {
    "text": "on your kubernetes platform you have to create those custom resource definitions provide those schemas to kubernetes so",
    "start": "1821820",
    "end": "1828120"
  },
  {
    "text": "it will know to be able to accept those resources through its API you need to set up a service account for cube",
    "start": "1828120",
    "end": "1834420"
  },
  {
    "text": "director to use to interact with the kubernetes api and then deploy cube director itself and cube director can",
    "start": "1834420",
    "end": "1841680"
  },
  {
    "text": "could technically run anywhere but it's easy just to deploy it into a pod in the same kubernetes cluster that it's going",
    "start": "1841680",
    "end": "1847620"
  },
  {
    "text": "to be managing and then there may be some configuration to do of cube",
    "start": "1847620",
    "end": "1852630"
  },
  {
    "text": "director itself there's a few different global settings you can tweak like which class of persistent storage should be",
    "start": "1852630",
    "end": "1857850"
  },
  {
    "text": "used for the applications but that's about it so once you've done that then",
    "start": "1857850",
    "end": "1864030"
  },
  {
    "text": "cube director is almost ready to go you just have to make sure that then it has at least one application type specified",
    "start": "1864030",
    "end": "1871280"
  },
  {
    "text": "that people can instantiate and we'll get to that when we talk about the next user role so let's flip over to my terminal here",
    "start": "1871280",
    "end": "1882119"
  },
  {
    "text": "so here I've got just our cube director repo from github actually just checked",
    "start": "1882119",
    "end": "1887580"
  },
  {
    "text": "out I've checked it out from the the latest version tag which is version 0.2",
    "start": "1887580",
    "end": "1893730"
  },
  {
    "text": "and I've got cube CTL also installed here and my cube CTL client is",
    "start": "1893730",
    "end": "1899070"
  },
  {
    "text": "configured to talk to a kubernetes cluster this group nice cluster happens to be in Google cloud but we've run a",
    "start": "1899070",
    "end": "1906509"
  },
  {
    "text": "cube Director on Amazon on digitalocean on local hosts kubernetes installed on",
    "start": "1906509",
    "end": "1912059"
  },
  {
    "text": "bare metal there's a couple of requirements that our documentation discusses that if you want to try it out",
    "start": "1912059",
    "end": "1920009"
  },
  {
    "text": "really quickly and easily yourself I would really recommend using one of these cloud services so anyway I've got",
    "start": "1920009",
    "end": "1925379"
  },
  {
    "text": "cube CTL set up here to talk to my kubernetes cluster and I'm going to use this make file target that we have this",
    "start": "1925379",
    "end": "1931409"
  },
  {
    "text": "is a shortcut just to help do all those administrative tasks that I mentioned in the slide so",
    "start": "1931409",
    "end": "1939779"
  },
  {
    "text": "this sets up the service account for cube director it creates those custom resource definitions that I mentioned cube director cluster cube director app",
    "start": "1939779",
    "end": "1946259"
  },
  {
    "text": "and then cube director config is actually a custom resource used to manage those global settings that I",
    "start": "1946259",
    "end": "1952350"
  },
  {
    "text": "talked about then it creates that sends a deployment to accumulate A's that",
    "start": "1952350",
    "end": "1957629"
  },
  {
    "text": "mentions the container image for cube director and we just have a container image out on docker hub and my my",
    "start": "1957629",
    "end": "1963539"
  },
  {
    "text": "kubernetes deployment has access over the Internet to docker hub so it just pulls it down and cube director is now",
    "start": "1963539",
    "end": "1969059"
  },
  {
    "text": "running if we look at the pod where cube director has been deployed we can see",
    "start": "1969059",
    "end": "1980730"
  },
  {
    "text": "that it's now waiting on a particular application particular a P I namespace to see if",
    "start": "1980730",
    "end": "1988320"
  },
  {
    "text": "there's anything it needs to do so it's it's almost ready to go as I mentioned we need to now tackle the next user role",
    "start": "1988320",
    "end": "1996119"
  },
  {
    "text": "which is the application expert so there's basically two possibly three",
    "start": "1996119",
    "end": "2003940"
  },
  {
    "start": "1997000",
    "end": "1997000"
  },
  {
    "text": "things that you need to provide to cube director so that it knows how to deploy and manage an application first of all",
    "start": "2003940",
    "end": "2011169"
  },
  {
    "text": "you need a container image that has the packages already installed on it you want to have this container image as ready to go as possible you know you",
    "start": "2011169",
    "end": "2018129"
  },
  {
    "text": "don't want to be downloading packages after it comes up just have it pre-configured as much as possible so",
    "start": "2018129",
    "end": "2024070"
  },
  {
    "text": "that just once the container is launched you can grab the final bits of runtime only information like what's my fqdn",
    "start": "2024070",
    "end": "2031539"
  },
  {
    "text": "or what you know if the user made some choices when deploying the application what were those choices and just apply",
    "start": "2031539",
    "end": "2038320"
  },
  {
    "text": "those final choices once the container is launched so you need to create that container image make it available on a repository that's you know network",
    "start": "2038320",
    "end": "2045009"
  },
  {
    "text": "accessible to your kubernetes and then you need to create some metadata that describes it",
    "start": "2045009",
    "end": "2051059"
  },
  {
    "text": "so obviously the metadata will have some things like an identifier and a version bookkeeping stuff like that more",
    "start": "2051059",
    "end": "2058419"
  },
  {
    "text": "importantly it's going to describe what services are provided by the application these don't necessarily have to be all",
    "start": "2058419",
    "end": "2065169"
  },
  {
    "text": "services that are running inside these virtual hosts in the application but anything that the external world will be",
    "start": "2065169",
    "end": "2070720"
  },
  {
    "text": "interested in either an end-user or maybe other clusters or you know any",
    "start": "2070720",
    "end": "2076329"
  },
  {
    "text": "any service that we might have to you know hook up to let in this example I'm",
    "start": "2076329",
    "end": "2082780"
  },
  {
    "text": "using Google so I want to hook the service up to one of Google's load balancers so it'll be externally accessible from my network so any",
    "start": "2082780",
    "end": "2090819"
  },
  {
    "text": "service that fits any of those criteria it needs to be described in this metadata it needs ten you know have a unique label a description importantly",
    "start": "2090819",
    "end": "2098650"
  },
  {
    "text": "what port it's running on and a few other things the metadata needs to describe what roles are available in",
    "start": "2098650",
    "end": "2105520"
  },
  {
    "text": "this application and anything that is per role specific like what container",
    "start": "2105520",
    "end": "2110589"
  },
  {
    "text": "image is this rule using maybe what what services are running on the virtual",
    "start": "2110589",
    "end": "2115930"
  },
  {
    "text": "hosts in this role and if you're going to use this this configuration artifacts",
    "start": "2115930",
    "end": "2123130"
  },
  {
    "text": "package as I mentioned earlier there also needs to be a URL for where that can be downloaded",
    "start": "2123130",
    "end": "2129390"
  },
  {
    "start": "2130000",
    "end": "2130000"
  },
  {
    "text": "this is a sort of cut down example of a",
    "start": "2130449",
    "end": "2135890"
  },
  {
    "text": "metadata file for spark this is taken from our github repo so if you go look",
    "start": "2135890",
    "end": "2141680"
  },
  {
    "text": "in the deploy directory and then under that there's an example catalog directory and you'll see a lot of",
    "start": "2141680",
    "end": "2148959"
  },
  {
    "text": "example application types in there for things like cloud era spark tensorflow Cassandra there's a plain vanilla just",
    "start": "2148959",
    "end": "2156499"
  },
  {
    "text": "sent to s image to use to play around with this is the spark one I've removed a few things just to make it fit on the",
    "start": "2156499",
    "end": "2162499"
  },
  {
    "text": "PowerPoint a little bit easier but you'll see that at the at the top level of the spec there's a couple of properties that say here's the container",
    "start": "2162499",
    "end": "2169309"
  },
  {
    "text": "image to use and also here's a package of configuration artifacts to inject into every container and these are kind",
    "start": "2169309",
    "end": "2176900"
  },
  {
    "text": "of global specifications for this application they could also be overridden at the role level although we",
    "start": "2176900",
    "end": "2183769"
  },
  {
    "text": "don't do that in this example here so in the next page here we define just two",
    "start": "2183769",
    "end": "2190699"
  },
  {
    "text": "roles and there's various things that could be defined here along with overriding container image you could",
    "start": "2190699",
    "end": "2196369"
  },
  {
    "text": "specify things like minimum resources and a few other things but the most",
    "start": "2196369",
    "end": "2201859"
  },
  {
    "text": "important bits are giving the role an ID and specifying how many of the cluster",
    "start": "2201859",
    "end": "2207619"
  },
  {
    "text": "members can take up this role so in this case we have a controller role and there's always going to be one only one",
    "start": "2207619",
    "end": "2213019"
  },
  {
    "text": "of these in the cluster and we have a worker role and there can be zero or more of those so those are valid",
    "start": "2213019",
    "end": "2219949"
  },
  {
    "text": "requests by the user the user could not ask for two controllers but they could ask for 0 or 10 workers we don't care",
    "start": "2219949",
    "end": "2228099"
  },
  {
    "text": "then here's the section that describes the services are available and particularly which port each service is",
    "start": "2228099",
    "end": "2234559"
  },
  {
    "text": "running on and finally a config section that ties all this together among the",
    "start": "2234559",
    "end": "2241130"
  },
  {
    "text": "defined roles which roles are we actually going to deploy by default and",
    "start": "2241130",
    "end": "2246430"
  },
  {
    "text": "also which services then are going to be present on each of those roles so when cube director gets a request to",
    "start": "2246430",
    "end": "2253400"
  },
  {
    "text": "instantiate this application it'll use this information to",
    "start": "2253400",
    "end": "2258489"
  },
  {
    "text": "configure the network access to the different virtual hosts in the cluster and it will also send in information",
    "start": "2258860",
    "end": "2265580"
  },
  {
    "text": "about the selected role the selected personality for each of these virtual hosts into the container itself so that",
    "start": "2265580",
    "end": "2271790"
  },
  {
    "text": "if there are scripts inside the container that are doing runtime setup they can see which personality they've been assigned and they may need to make",
    "start": "2271790",
    "end": "2277970"
  },
  {
    "text": "decisions based on that information so",
    "start": "2277970",
    "end": "2284540"
  },
  {
    "start": "2282000",
    "end": "2282000"
  },
  {
    "text": "last thing to mention here and I'm not really gonna be able to do this justice this is something that is potentially has a lot of interesting stuff going on",
    "start": "2284540",
    "end": "2292130"
  },
  {
    "text": "that's kind of hard to to describe and the time we have available is the configuration artifacts these are you",
    "start": "2292130",
    "end": "2299600"
  },
  {
    "text": "know like I mentioned there could be anything you want here that you want to inject into the container after it's been launched but the thing that we most",
    "start": "2299600",
    "end": "2305630"
  },
  {
    "text": "typically have in this tar file is a set of scripts that react to lifecycle",
    "start": "2305630",
    "end": "2311960"
  },
  {
    "text": "events that cube director will trigger so these are life cycle events like hey you have just appeared as a new",
    "start": "2311960",
    "end": "2317750"
  },
  {
    "text": "container do whatever you need to do on startup they can also be life cycle events like another container has appeared inside",
    "start": "2317750",
    "end": "2324500"
  },
  {
    "text": "your cluster in this role do you need to react to that for example if you're",
    "start": "2324500",
    "end": "2330140"
  },
  {
    "text": "doing a Cassandra cluster every Cassandra host has a config file that lists the fqt ends of other peers and",
    "start": "2330140",
    "end": "2337580"
  },
  {
    "text": "seeds inside the same cluster so if you add another host into this virtual",
    "start": "2337580",
    "end": "2342650"
  },
  {
    "text": "cluster you need to reconfigure all of the existing hosts to add its fqd and their config files and this sort of",
    "start": "2342650",
    "end": "2347960"
  },
  {
    "text": "application specific semantics is handled by these lifecycle hooks that cube director triggers and that runs a",
    "start": "2347960",
    "end": "2355520"
  },
  {
    "text": "script that the application expert has provided when they were importing this",
    "start": "2355520",
    "end": "2361190"
  },
  {
    "text": "application and these scripts especially the the initial scripts to set things up can get pretty interesting but I I think",
    "start": "2361190",
    "end": "2369830"
  },
  {
    "text": "I'll just have to direct you to our example applications and packages and our are a github repo if you want to",
    "start": "2369830",
    "end": "2375980"
  },
  {
    "text": "learn more about that but that's the gist of what happens with this package so let's go ahead and because time is is",
    "start": "2375980",
    "end": "2385280"
  },
  {
    "start": "2382000",
    "end": "2382000"
  },
  {
    "text": "moving along let's go ahead and actually do that here let's go into the deploy",
    "start": "2385280",
    "end": "2390940"
  },
  {
    "text": "example catalog directory and so we have these example application type",
    "start": "2390940",
    "end": "2397370"
  },
  {
    "text": "definitions here I'm going to send this one to kubernetes",
    "start": "2397370",
    "end": "2404690"
  },
  {
    "text": "and then it will exist there to be referenceable by cube director when",
    "start": "2404690",
    "end": "2409790"
  },
  {
    "text": "someone asks to instantiate this kind of application so finally we come to the",
    "start": "2409790",
    "end": "2421460"
  },
  {
    "text": "end user and the end users job is by design pretty simple we want to give the",
    "start": "2421460",
    "end": "2427760"
  },
  {
    "text": "tools as much as possible to let the administrators and the application experts bacon all the complexity into a",
    "start": "2427760",
    "end": "2434090"
  },
  {
    "text": "policy that the the end user can just say give me one of those and not have to",
    "start": "2434090",
    "end": "2439400"
  },
  {
    "text": "like decide what container image to use or how many resources to apply in this",
    "start": "2439400",
    "end": "2445910"
  },
  {
    "text": "case this is a completely valid request document for instantiate again spark cluster there are other things you could",
    "start": "2445910",
    "end": "2451730"
  },
  {
    "text": "add to this request to make it more complex but this this sort of request here will work and all this is saying is that for the controller role I I do want",
    "start": "2451730",
    "end": "2460160"
  },
  {
    "text": "to limit the memory to four gigs I'm adding that into the request and then for the worker role I want to so that's",
    "start": "2460160",
    "end": "2465890"
  },
  {
    "text": "all I'm really saying is the end user rather than spend time talking through",
    "start": "2465890",
    "end": "2471380"
  },
  {
    "start": "2470000",
    "end": "2470000"
  },
  {
    "text": "these diagrams here I'm just going to see if I can sort of do a",
    "start": "2471380",
    "end": "2479810"
  },
  {
    "text": "by play of what cube director is doing when we try this out in practice so",
    "start": "2479810",
    "end": "2485270"
  },
  {
    "text": "again in the deployed directory we have this example clusters subdirectory which",
    "start": "2485270",
    "end": "2490460"
  },
  {
    "text": "has a bunch of example instantiation",
    "start": "2490460",
    "end": "2496460"
  },
  {
    "text": "requests that you could use to throw a cube director I'm going to do this is a slightly simpler version of the example",
    "start": "2496460",
    "end": "2502970"
  },
  {
    "text": "spark cluster it's pretty similar to what we saw on the PowerPoint slide",
    "start": "2502970",
    "end": "2508640"
  },
  {
    "text": "except that it's being a little more restrictive about the CPU and memory resources that it's asking for so I'm",
    "start": "2508640",
    "end": "2513950"
  },
  {
    "text": "going to give this to kubernetes and",
    "start": "2513950",
    "end": "2522220"
  },
  {
    "text": "once this document has been persisted in the kubernetes datastore cube director",
    "start": "2522220",
    "end": "2528170"
  },
  {
    "text": "will notice it and will start doing things so let's go back and look at the",
    "start": "2528170",
    "end": "2533570"
  },
  {
    "text": "cube director logs so if we start here",
    "start": "2533570",
    "end": "2542510"
  },
  {
    "text": "at this line I'm highlighting we can see that it's notice there's a new document that's requesting an application of this",
    "start": "2542510",
    "end": "2549530"
  },
  {
    "text": "spark type that we defined earlier and this document says we have a controller",
    "start": "2549530",
    "end": "2555920"
  },
  {
    "text": "in worker role and we validated those as you know valid roles for the spark type and we've created a stateful set to",
    "start": "2555920",
    "end": "2562970"
  },
  {
    "text": "represent each of these roles and set its replica account for the stateful set to the number of members that have been",
    "start": "2562970",
    "end": "2568400"
  },
  {
    "text": "requested for each of the roles then we have gone into the containers and",
    "start": "2568400",
    "end": "2575260"
  },
  {
    "text": "injected a just JSON file that completely describes the request and",
    "start": "2575260",
    "end": "2581270"
  },
  {
    "text": "kind of the current state of the cluster the fqdn x' the services anything that a",
    "start": "2581270",
    "end": "2586400"
  },
  {
    "text": "setup script one of these lifecycle reaction scripts inside the cluster might need to know in order to do its",
    "start": "2586400",
    "end": "2591620"
  },
  {
    "text": "job so we've injected that file into the cluster and then because there was this",
    "start": "2591620",
    "end": "2597790"
  },
  {
    "text": "configuration artifacts package mentioned in the application metadata we've pulled that down over the web",
    "start": "2597790",
    "end": "2605120"
  },
  {
    "text": "injected that into each container and run the script for new container your",
    "start": "2605120",
    "end": "2611840"
  },
  {
    "text": "starting up is a new container do whatever you have to do and so that script has the like spark specific knowledge in there that",
    "start": "2611840",
    "end": "2618060"
  },
  {
    "text": "are our spark application expert provided to take this cluster configuration information and do final",
    "start": "2618060",
    "end": "2624180"
  },
  {
    "text": "setup whatever is necessary to make sure that the the spark master knows what",
    "start": "2624180",
    "end": "2629250"
  },
  {
    "text": "it's doing and the spark workers are connected to spark master so that's what",
    "start": "2629250",
    "end": "2634650"
  },
  {
    "text": "you see where it says running app config setup and running app config in these pods it's creating and then as part of",
    "start": "2634650",
    "end": "2642540"
  },
  {
    "text": "this state machine this reconciliation loop it is trigger this configuration then it goes away and then it comes back later and says are you done with the",
    "start": "2642540",
    "end": "2648660"
  },
  {
    "text": "configuration yet in this case no the initial configuration is still ongoing",
    "start": "2648660",
    "end": "2654620"
  },
  {
    "text": "one other thing I probably should mention here is our our requests",
    "start": "2656750",
    "end": "2664460"
  },
  {
    "text": "mentioned some persistent storage for the controller role so it asked for 40",
    "start": "2664460",
    "end": "2669960"
  },
  {
    "text": "gigs of storage one of the things that cube director will do in this case is it",
    "start": "2669960",
    "end": "2675120"
  },
  {
    "text": "will bring up a persistent volume attached to this particular container and depending on the application",
    "start": "2675120",
    "end": "2683190"
  },
  {
    "text": "metadata that application type will specify which directories in the file",
    "start": "2683190",
    "end": "2688470"
  },
  {
    "text": "system of the container image actually need to be persisted and so we will copy",
    "start": "2688470",
    "end": "2693570"
  },
  {
    "text": "the initial state of those directories like maybe it's /opt or maybe slash data you know you don't",
    "start": "2693570",
    "end": "2698880"
  },
  {
    "text": "care about all your binaries and /bin those aren't going to change if your container goes down and comes back up",
    "start": "2698880",
    "end": "2704640"
  },
  {
    "text": "you can just start fresh from the container image but there may be other directories that you really do care",
    "start": "2704640",
    "end": "2709980"
  },
  {
    "text": "about any changes and persisting them and so we will copy the initial state of those directories over into the persistent volume and mount those back",
    "start": "2709980",
    "end": "2716550"
  },
  {
    "text": "at their usual location inside the container and then any changes those directories will be written to the",
    "start": "2716550",
    "end": "2722280"
  },
  {
    "text": "persistent volume and so we'll we'll see that here in just a second let me need",
    "start": "2722280",
    "end": "2728550"
  },
  {
    "text": "to see if so cube director is done doing all the things that's going to do if we do",
    "start": "2728550",
    "end": "2735140"
  },
  {
    "text": "whoops and let me actually do describe rather than get because if you do a",
    "start": "2739759",
    "end": "2746039"
  },
  {
    "text": "describe you'll get the events that have been posted as well so this is the the",
    "start": "2746039",
    "end": "2752519"
  },
  {
    "text": "type of object that we created and there's only one of them so it's only going to list this one object and so",
    "start": "2752519",
    "end": "2758039"
  },
  {
    "text": "this is the this is our custom resource this is the request we sent to kubernetes so if we look at the spec",
    "start": "2758039",
    "end": "2765140"
  },
  {
    "text": "this spec is essentially the document we passed in it just persisted what we",
    "start": "2765140",
    "end": "2770279"
  },
  {
    "text": "asked for you'll notice that there's a few other things have been populated that we're not included in our initial spec there's like the storage class name",
    "start": "2770279",
    "end": "2777469"
  },
  {
    "text": "there's the service type these are some defaults that got filled in because we didn't specify something different so",
    "start": "2777469",
    "end": "2785249"
  },
  {
    "text": "the spec part is not that interesting that's not going to change until we change it the maybe the more interesting",
    "start": "2785249",
    "end": "2790619"
  },
  {
    "text": "part is the status section and the status section really communicates two",
    "start": "2790619",
    "end": "2796380"
  },
  {
    "text": "things one is the overall state of the cluster like is it in some sort of transitional change or is it ready to go and the other is all the different",
    "start": "2796380",
    "end": "2803729"
  },
  {
    "text": "objects that have been created on behalf of this custom resource so for example",
    "start": "2803729",
    "end": "2809009"
  },
  {
    "text": "the controller here has a persistent volume claim if we wanted to inspect that we could see now what what",
    "start": "2809009",
    "end": "2814650"
  },
  {
    "text": "kubernetes object was set up there I'm gonna skip ahead kind of to the",
    "start": "2814650",
    "end": "2820049"
  },
  {
    "text": "punchline here in the interest of time and look at this service for the controller so a service object in",
    "start": "2820049",
    "end": "2825299"
  },
  {
    "text": "kubernetes is a representation of a collection of",
    "start": "2825299",
    "end": "2831960"
  },
  {
    "text": "ports and we use it to say for this particular virtual host what are all the",
    "start": "2831960",
    "end": "2838440"
  },
  {
    "text": "externally accessible service ports that that we need to deal with so we've",
    "start": "2838440",
    "end": "2844259"
  },
  {
    "text": "defined like port 22 for SSH port 8080 for the SPARC master web UI actually",
    "start": "2844259",
    "end": "2851729"
  },
  {
    "text": "let's let's look at that one so this service is telling us that for our controller node if we were to go to and",
    "start": "2851729",
    "end": "2859920"
  },
  {
    "text": "this is the virtual controller of our virtual spark cluster that we just created if we were to go to this IP of a",
    "start": "2859920",
    "end": "2865710"
  },
  {
    "text": "Google load balancer and look at port 8080 we should see our spark master web UI so let's go",
    "start": "2865710",
    "end": "2872589"
  },
  {
    "text": "ahead and try that out so yeah there it",
    "start": "2872589",
    "end": "2877839"
  },
  {
    "text": "is you can see that we've got it's reporting three workers that's because and this particular setup we have put a",
    "start": "2877839",
    "end": "2883690"
  },
  {
    "text": "spark worker on the controller as well so there's the spark worker on the controller and then the two extra workers we asked for if we go back to",
    "start": "2883690",
    "end": "2891640"
  },
  {
    "text": "our request let's edit our requests a little bit and remember we're just",
    "start": "2891640",
    "end": "2900869"
  },
  {
    "text": "sending a change in a document to kubernetes and then cube director is responding to that change and",
    "start": "2900869",
    "end": "2907509"
  },
  {
    "text": "interpreting our change document as a request to change the cluster so we've increased the worker count from two to",
    "start": "2907509",
    "end": "2913059"
  },
  {
    "text": "four I'm going to apply that change and",
    "start": "2913059",
    "end": "2922589"
  },
  {
    "text": "then we can let's describe our object again to look at the events so we can",
    "start": "2922589",
    "end": "2927849"
  },
  {
    "text": "see on the events that are being posted to our cluster object it notices that we're expanding the role from two to",
    "start": "2927849",
    "end": "2933279"
  },
  {
    "text": "four and so it's reconfigured the stateful set to have more replicas it's",
    "start": "2933279",
    "end": "2938529"
  },
  {
    "text": "waiting for those pods to come up when those pods do come up it's not only",
    "start": "2938529",
    "end": "2943779"
  },
  {
    "text": "going to trigger the lifecycle event for new container inside those pods it's going to go into all the existing",
    "start": "2943779",
    "end": "2949719"
  },
  {
    "text": "containers and trigger the lifecycle event for there's been a new member",
    "start": "2949719",
    "end": "2954819"
  },
  {
    "text": "added to your cluster and so if this application has a script that reacts to that it can do that as well at this time",
    "start": "2954819",
    "end": "2962369"
  },
  {
    "text": "so the containers have come up it's running those lifecycle event scripts",
    "start": "2963059",
    "end": "2968950"
  },
  {
    "text": "and now it's stable again so if we were to go to this user interface and reload",
    "start": "2968950",
    "end": "2975160"
  },
  {
    "text": "it we can see we have two more spark workers that have come up",
    "start": "2975160",
    "end": "2979979"
  },
  {
    "text": "so let me skip past these guys these are images and also with a lot more descriptive text on our wiki I think",
    "start": "2981940",
    "end": "2989950"
  },
  {
    "start": "2982000",
    "end": "2982000"
  },
  {
    "text": "we're pretty much done at this point I really I hope we've Illustrated these",
    "start": "2989950",
    "end": "2996010"
  },
  {
    "start": "2992000",
    "end": "2992000"
  },
  {
    "text": "these first two key takeaways and I really encourage people to you know have",
    "start": "2996010",
    "end": "3001109"
  },
  {
    "text": "a look at our github repo not only the wiki but also the other documentation there there's I think a pretty good",
    "start": "3001109",
    "end": "3006950"
  },
  {
    "text": "QuickStart document for how you can just close the repo and instantly run Kubb",
    "start": "3006950",
    "end": "3012240"
  },
  {
    "text": "director I I did see out of the corner of my eye another question about whether we can use cube director with AWS or GCP",
    "start": "3012240",
    "end": "3019650"
  },
  {
    "text": "and the answer is almost certainly yes you know we've tried it with AWS Google",
    "start": "3019650",
    "end": "3025290"
  },
  {
    "text": "digitalocean I think some other cloud service there's just a few requirements",
    "start": "3025290",
    "end": "3030690"
  },
  {
    "text": "for what sort of kubernetes you want to deploy to and once those are met we",
    "start": "3030690",
    "end": "3036390"
  },
  {
    "text": "should work anywhere but I think I'll I'll call it this point wait see if tom has any closing remarks he wants to make",
    "start": "3036390",
    "end": "3042569"
  },
  {
    "text": "and then we can squeeze in a few more questions thanks Joel I've been answering some of the questions that",
    "start": "3042569",
    "end": "3048510"
  },
  {
    "start": "3047000",
    "end": "3047000"
  },
  {
    "text": "we've been going along with there are two questions I think we could probably address live here there's a question",
    "start": "3048510",
    "end": "3055650"
  },
  {
    "text": "about monitoring the application running within the cube director so the",
    "start": "3055650",
    "end": "3063450"
  },
  {
    "text": "application that's being deployed is there any functionality that we have",
    "start": "3063450",
    "end": "3068940"
  },
  {
    "text": "available that determines whether the application has failed and how it can be restarted that sort of thing yeah so not",
    "start": "3068940",
    "end": "3075990"
  },
  {
    "text": "currently there this is the category of things where we want to make sure we have the architecture to address this",
    "start": "3075990",
    "end": "3081180"
  },
  {
    "text": "going forwards so you know kubernetes has the idea of health checks that you can define for containers and that may",
    "start": "3081180",
    "end": "3088290"
  },
  {
    "text": "be sufficient for a lot of cases but if you want you know if you need a more detailed set of examinations that need",
    "start": "3088290",
    "end": "3095280"
  },
  {
    "text": "to be done in order to determine exactly what's you know what's up and what's down and what's going wrong then you",
    "start": "3095280",
    "end": "3101849"
  },
  {
    "text": "know that again is some application-specific semantics that would have to be provided in this",
    "start": "3101849",
    "end": "3106910"
  },
  {
    "text": "package that of importing the application to cube director and I think",
    "start": "3106910",
    "end": "3112290"
  },
  {
    "text": "the way we're talking about approaching this a lot of the concepts that we're doing with coop director are things that we",
    "start": "3112290",
    "end": "3117760"
  },
  {
    "text": "kind of test vetted with our with our application called epic our management",
    "start": "3117760",
    "end": "3124990"
  },
  {
    "text": "platform where we do a lot of this same sort of data-driven application",
    "start": "3124990",
    "end": "3130210"
  },
  {
    "text": "deployment and one of the things we have there is we have an agent that we can",
    "start": "3130210",
    "end": "3135460"
  },
  {
    "text": "insert into the clusters that can watchdog the defined services you know these services that are presented in the",
    "start": "3135460",
    "end": "3141700"
  },
  {
    "text": "metadata and reports service status all the way back into the the management for",
    "start": "3141700",
    "end": "3147750"
  },
  {
    "text": "what we're talking about doing for kube director is not injecting agents into",
    "start": "3147750",
    "end": "3154060"
  },
  {
    "text": "the containers but rather having like a sidecar container inside the same pod that can do all sorts of things really",
    "start": "3154060",
    "end": "3161260"
  },
  {
    "text": "one of one of the things though that could be good for is monitoring status and reporting status back to cube",
    "start": "3161260",
    "end": "3168070"
  },
  {
    "text": "director where it can then be written into the status section of the custom resource but it doesn't it doesn't do",
    "start": "3168070",
    "end": "3173859"
  },
  {
    "text": "that right now that's just things I'm talking about for the future all right thanks Joe all the other thing",
    "start": "3173859",
    "end": "3180280"
  },
  {
    "text": "I want to talk about a little bit is the use of existing application operators so does this require the use of cube",
    "start": "3180280",
    "end": "3187660"
  },
  {
    "text": "directory just wire a complete rewrite my answer is no you can you can take the existing application operators and wrap",
    "start": "3187660",
    "end": "3194650"
  },
  {
    "text": "them with the additional functionality of cube director is that correct oh yeah",
    "start": "3194650",
    "end": "3199930"
  },
  {
    "text": "you could it would really be a case-by-case right you know question of whether that would be the way you'd want",
    "start": "3199930",
    "end": "3205420"
  },
  {
    "text": "to approach it it might be easier just to start with just the normal packages for installing the application and write",
    "start": "3205420",
    "end": "3212829"
  },
  {
    "text": "the cube director metadata directly okay good and from the final question before",
    "start": "3212829",
    "end": "3219190"
  },
  {
    "text": "you turn it back to to Kaitlin is there was a question around K needed okay so I",
    "start": "3219190",
    "end": "3226050"
  },
  {
    "text": "can ativ is a kind of a tool that Google is released they allows stateless",
    "start": "3226050",
    "end": "3232030"
  },
  {
    "text": "applications to inherit some common functionality is there anything equivalent tonight in in cube director",
    "start": "3232030",
    "end": "3240060"
  },
  {
    "text": "stateless applications to inherit common functionality well I saw iPhone for example you know if with key you need if",
    "start": "3240060",
    "end": "3247270"
  },
  {
    "text": "you have a stateless application you automatically inherit the ability to auto scale for example and another source of functionality like that okay",
    "start": "3247270",
    "end": "3254890"
  },
  {
    "text": "got it yeah yeah so this comes back to what I was talking about about the the",
    "start": "3254890",
    "end": "3261730"
  },
  {
    "text": "benefit of having a single manager with a a data model in an Operations model",
    "start": "3261730",
    "end": "3268360"
  },
  {
    "text": "that encompasses not only how to deploy manage application types but also other features like there's an there's an auto",
    "start": "3268360",
    "end": "3278410"
  },
  {
    "text": "scale feature that we're working on in epic right now that we like many things",
    "start": "3278410",
    "end": "3284950"
  },
  {
    "text": "we'll be thinking about how to represent that in cube director that allows you to",
    "start": "3284950",
    "end": "3292150"
  },
  {
    "text": "specify you know load based policies for particular roles for hosts for",
    "start": "3292150",
    "end": "3299590"
  },
  {
    "text": "particular hosts and particular roles within a cluster and so it's a kind of an application agnostic way of",
    "start": "3299590",
    "end": "3304990"
  },
  {
    "text": "specifying an auto scale policy that interacts with the way the application is modeled to Kubb director so you know",
    "start": "3304990",
    "end": "3313300"
  },
  {
    "text": "for example and that's for the regime if you've modeled the application correctly if you've given cube director of valid application metadata then it",
    "start": "3313300",
    "end": "3319630"
  },
  {
    "text": "automatically gets the benefit of being able to work with an auto scale policy like that so again I'm kind of hand",
    "start": "3319630",
    "end": "3325420"
  },
  {
    "text": "waving that because this is this is future work but it's it's definitely the sort of thing that we're trying to",
    "start": "3325420",
    "end": "3331000"
  },
  {
    "text": "enable through this approach is you know get all the goodness of having this these data-driven ways of talking about",
    "start": "3331000",
    "end": "3340990"
  },
  {
    "text": "these applications and that lets us build you know processing pipelines and",
    "start": "3340990",
    "end": "3347430"
  },
  {
    "text": "interactions with corporate services like Active Directory in ways that can",
    "start": "3347430",
    "end": "3352480"
  },
  {
    "text": "then automatically apply to any application that's imported into cube director thanks Joel I think that's",
    "start": "3352480",
    "end": "3359380"
  },
  {
    "text": "about all the time we have for questions I know there's a few more we'll try - we'll try to get back to you on those",
    "start": "3359380",
    "end": "3364720"
  },
  {
    "text": "Katelyn back to you for a wrap-up yeah we are coming right on the top of the",
    "start": "3364720",
    "end": "3370780"
  },
  {
    "text": "hour here so thank you so much tom and Joel for the great presentation and everybody who joined us today and asked those great questions the webinar",
    "start": "3370780",
    "end": "3378430"
  },
  {
    "text": "recording and slides will be online later today so look out for those and look forward to seeing you at a future",
    "start": "3378430",
    "end": "3383800"
  },
  {
    "text": "CNC webinar have a great day everyone",
    "start": "3383800",
    "end": "3387600"
  }
]