[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "all right so welcome to my talk here guys thanks for showing up in the afternoon appreciate it on the last day",
    "start": "0",
    "end": "5520"
  },
  {
    "text": "of the conference especially so the title of the talk here is that kubernetes runs anywhere but does your",
    "start": "5520",
    "end": "12480"
  },
  {
    "text": "data and my name is Jared watts maintainer on our project called Brook and I'm also a founding engineer and I",
    "start": "12480",
    "end": "20340"
  },
  {
    "text": "start up called up bound so you know as you've already got from the title of the",
    "start": "20340",
    "end": "27090"
  },
  {
    "start": "23000",
    "end": "23000"
  },
  {
    "text": "talk kubernetes runs everywhere and it's pretty amazing actually what got accomplished to make that happen so you",
    "start": "27090",
    "end": "34050"
  },
  {
    "text": "know in terms of container orchestrators kubernetes is the minute it's the de facto CEO it's the lingua franca right",
    "start": "34050",
    "end": "40739"
  },
  {
    "text": "it's really really is supported by everyone now it runs in all the cloud providers you know Google Amazon",
    "start": "40739",
    "end": "47730"
  },
  {
    "text": "Microsoft Digital OSHA and all those guys you can run it on bare metal on-premise hybrid environments",
    "start": "47730",
    "end": "54780"
  },
  {
    "text": "kubernetes really runs everywhere even by you know a developer laptop which is what I'm going to be using showing some",
    "start": "54780",
    "end": "60510"
  },
  {
    "text": "demos later on here so even more important than that though that kubernetes itself runs anywhere it also",
    "start": "60510",
    "end": "67110"
  },
  {
    "text": "allows all of your apps to run anywhere to you can deploy your apps to any of these environments that we just talked",
    "start": "67110",
    "end": "72990"
  },
  {
    "text": "about and so what that means is that applications can be portable and so why",
    "start": "72990",
    "end": "79890"
  },
  {
    "start": "75000",
    "end": "75000"
  },
  {
    "text": "is portability important though so a portable solution as we've kind of talked about can be run in diverse",
    "start": "79890",
    "end": "85530"
  },
  {
    "text": "environments it can be run anywhere but what that gives us though is the power of choice so if you have an application",
    "start": "85530",
    "end": "92549"
  },
  {
    "text": "that's portable can run anywhere then at deployment time when you want to get",
    "start": "92549",
    "end": "98520"
  },
  {
    "text": "that application running somewhere you're able to take advantage of the best environment for the job at that point so you can do things like for",
    "start": "98520",
    "end": "105210"
  },
  {
    "text": "costs you can optimize go the cheapest route or you can go for you know the best quality of service maybe some",
    "start": "105210",
    "end": "111270"
  },
  {
    "text": "environments or have some particular features that you're depending on and you have to go to certain environments",
    "start": "111270",
    "end": "117210"
  },
  {
    "text": "that way you know multi-cloud stuff is getting pretty interesting as well where you know you can have some resiliency if",
    "start": "117210",
    "end": "122969"
  },
  {
    "text": "you deploy your app across multiple environments multiple clouds you know if one major outage happens it happens and",
    "start": "122969",
    "end": "129030"
  },
  {
    "text": "say Amazon but you're also deployed in Google then you know you have resiliency against there's also interesting things like",
    "start": "129030",
    "end": "135810"
  },
  {
    "text": "compliance you know certain governments have certain requirements for where data can be stored and so that can influence",
    "start": "135810",
    "end": "141780"
  },
  {
    "text": "you know your choice of where you're going to deploy your application so you",
    "start": "141780",
    "end": "147239"
  },
  {
    "start": "145000",
    "end": "145000"
  },
  {
    "text": "know how did kubernetes do that though how did kubernetes enable this incredibly portable application",
    "start": "147239",
    "end": "152790"
  },
  {
    "text": "deployment ability so what it did is it defined a common set of abstractions and",
    "start": "152790",
    "end": "157830"
  },
  {
    "text": "primitives for the kind of capture application deployment concepts so things like pods services deployments",
    "start": "157830",
    "end": "166170"
  },
  {
    "text": "although what those really are doing are capturing in an abstract way what it",
    "start": "166170",
    "end": "171720"
  },
  {
    "text": "means to deploy an application so a pot is a pot is a pod anywhere you're gonna go right if you want to deploy your",
    "start": "171720",
    "end": "178019"
  },
  {
    "text": "application somewhere like in one of the cloud providers that pod you can you have the same expectation that your app",
    "start": "178019",
    "end": "184530"
  },
  {
    "text": "is going to run the same way no matter where it's being deployed so it brings up this concept of you know write one",
    "start": "184530",
    "end": "190920"
  },
  {
    "text": "white excuse me write once run mini where you write a single manifest single resource the yam will file let's say and",
    "start": "190920",
    "end": "197160"
  },
  {
    "text": "that one n will file unchanged should be able to run any worker but Nettie's runs",
    "start": "197160",
    "end": "202310"
  },
  {
    "text": "and then that gives us the developers a bit more freedom to focus only on their application and not worry about the the",
    "start": "202310",
    "end": "209459"
  },
  {
    "text": "details of the environment that that application is going to get deployed into they've written the manifest once",
    "start": "209459",
    "end": "214889"
  },
  {
    "text": "and it will run many times many places so in addition to the abstractions for",
    "start": "214889",
    "end": "222169"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "application deployment concepts there's also some storage abstractions that kubernetes is defined because real some",
    "start": "222169",
    "end": "229650"
  },
  {
    "text": "real world applications they're stateful they need to participate you know the",
    "start": "229650",
    "end": "235919"
  },
  {
    "text": "abstractions the acrimony this is defined are incredibly useful for helping you know kind of abstract these",
    "start": "235919",
    "end": "242310"
  },
  {
    "text": "sources these concepts of storage and we have things like persistent volumes and purses volume claims storage classes is",
    "start": "242310",
    "end": "249629"
  },
  {
    "text": "another one you know there's plugins I think the talk just before this one was about CSI so if you're there for that you've learned a little bit about the",
    "start": "249629",
    "end": "255930"
  },
  {
    "text": "evolution of where volume plugins are going industry-wide that is but basically all of these different storage",
    "start": "255930",
    "end": "262049"
  },
  {
    "text": "abstractions help support the portability of stateful applications",
    "start": "262049",
    "end": "267270"
  },
  {
    "text": "so let's go into a little bit more detail about what those abstractions are right so a persistent volume PV and PVCs",
    "start": "267270",
    "end": "275210"
  },
  {
    "text": "storage for applications is normalized on this concept of a volume so if you have a pod and it has a storage",
    "start": "275210",
    "end": "282150"
  },
  {
    "text": "requirement it's done in a abstract way through a volume and that volume is",
    "start": "282150",
    "end": "287190"
  },
  {
    "text": "independent of the backing storage right aware that a storage is actually coming from so a pod could have a volume that",
    "start": "287190",
    "end": "294870"
  },
  {
    "text": "is maybe being backed by a googol persistent disk or maybe by a SEF Redis",
    "start": "294870",
    "end": "300330"
  },
  {
    "text": "block device it's the volume is the abstract concept that's very powerful because then that enables the",
    "start": "300330",
    "end": "306599"
  },
  {
    "text": "application to not have to worry about where the storage is coming from it says",
    "start": "306599",
    "end": "311940"
  },
  {
    "text": "I need storage give me a volume I don't care where it comes from necessarily that definitely enables portability so storage classes",
    "start": "311940",
    "end": "320490"
  },
  {
    "text": "that's another abstraction in kubernetes for storage and you can think of those as blueprints that abstract away the",
    "start": "320490",
    "end": "327210"
  },
  {
    "text": "details of how a particular storage request is going to get fulfilled so these are normally defined by",
    "start": "327210",
    "end": "334080"
  },
  {
    "text": "administrators so administrator who has setup details of the storage in the cluster you know they'll kind of fill in",
    "start": "334080",
    "end": "340889"
  },
  {
    "text": "the details about how storage of requests will be fulfilled we know where this so we're just going to come from and there's different sort of parameters",
    "start": "340889",
    "end": "348360"
  },
  {
    "text": "that you can get from those as well such as a we know the provider of this storage where is it going to come from but then you have other things too like",
    "start": "348360",
    "end": "354960"
  },
  {
    "text": "the quality of service different policies for backup you know various",
    "start": "354960",
    "end": "361050"
  },
  {
    "text": "parameters for this storage that kind of define where it's going to be fulfilled from and the really really good thing",
    "start": "361050",
    "end": "368460"
  },
  {
    "start": "362000",
    "end": "362000"
  },
  {
    "text": "about storage classes in particular is that those lay the foundation for dynamic volume provisioning and",
    "start": "368460",
    "end": "375300"
  },
  {
    "text": "kubernetes so I'm not sure you know how the experience in this room is with",
    "start": "375300",
    "end": "380969"
  },
  {
    "text": "kubernetes versions going a little bit further back but if any of you all remember before dynamic provisioning was",
    "start": "380969",
    "end": "386940"
  },
  {
    "text": "a thing and you could only do static provisioning of volumes dynamic provisioning goes very far beyond that",
    "start": "386940",
    "end": "393930"
  },
  {
    "text": "because with static provisioning only basically you ended up with an administrator having to manually create",
    "start": "393930",
    "end": "400349"
  },
  {
    "text": "some storage we're from wherever the backing storage is probably somewhere external to the kubernetes cluster right and then they",
    "start": "400349",
    "end": "406710"
  },
  {
    "text": "would have to go in kubernetes and manually create a persistent volume that mirrors or represents that storage that",
    "start": "406710",
    "end": "413460"
  },
  {
    "text": "they manually created which is kind of a pain in the butt right you have a human getting in the way or having to come",
    "start": "413460",
    "end": "419610"
  },
  {
    "text": "into the process of providing storage to your application pods so with dynamic provisioning you know it's that takes",
    "start": "419610",
    "end": "426180"
  },
  {
    "text": "away that step where on demand you can have an application or a pod that's saying I need storage and then",
    "start": "426180",
    "end": "432360"
  },
  {
    "text": "programmatically from running code in the cluster that storage request will be provisioned fulfilled",
    "start": "432360",
    "end": "438480"
  },
  {
    "text": "you know mounted attached all those sort of things so that no human has to get in the way of an application getting its",
    "start": "438480",
    "end": "444720"
  },
  {
    "text": "storage and then the final abstraction here is volume plugins which is the the",
    "start": "444720",
    "end": "451350"
  },
  {
    "start": "446000",
    "end": "446000"
  },
  {
    "text": "means by which external storage solutions can be integrated in throwing",
    "start": "451350",
    "end": "457800"
  },
  {
    "text": "stickers around oh that reminds we do have a bunch of stickers up here if you want any at the end so you know that's",
    "start": "457800",
    "end": "463380"
  },
  {
    "text": "the means by which these external storage solutions can get integrated into kubernetes the interesting thing",
    "start": "463380",
    "end": "470160"
  },
  {
    "text": "though is that these volume plugins may enable that integration but it doesn't",
    "start": "470160",
    "end": "475440"
  },
  {
    "text": "solve the deploying that storage solution are managing that storage solution that's kind of an exercise left",
    "start": "475440",
    "end": "480600"
  },
  {
    "text": "up to the admin and you also get into the situations here where the applications are going to end up relying",
    "start": "480600",
    "end": "486990"
  },
  {
    "text": "on provider particular cloud provider specific managed services like Google persistent disk and Amazon EBS and",
    "start": "486990",
    "end": "493680"
  },
  {
    "text": "things like that so let's talk a bit real quick about these abstractions that",
    "start": "493680",
    "end": "498960"
  },
  {
    "start": "495000",
    "end": "495000"
  },
  {
    "text": "exist in kubernetes that and you know have some aspects of a name in abling portability let's talk about where they",
    "start": "498960",
    "end": "504750"
  },
  {
    "text": "fall short so one thing is that the focus is really on the consumption side",
    "start": "504750",
    "end": "510360"
  },
  {
    "text": "of storage it's not on the provider side of storage so it's really dealing with when an application needs storage needs",
    "start": "510360",
    "end": "517140"
  },
  {
    "text": "to consume it lets get that request fulfilled and it's doing a great job of that but it doesn't really have a strong",
    "start": "517140",
    "end": "522990"
  },
  {
    "text": "story for what's happening on getting that storage to exist in the first place say you have a blank kubernetes cluster",
    "start": "522990",
    "end": "529290"
  },
  {
    "text": "with nothing in it you know where's the storage gonna come from well something's got to get set up for that",
    "start": "529290",
    "end": "535020"
  },
  {
    "text": "and there's nothing really that kind of enables that very very easily in",
    "start": "535020",
    "end": "540270"
  },
  {
    "text": "kubernetes right now so these are the external storage solutions that applications are relying on they need to",
    "start": "540270",
    "end": "546660"
  },
  {
    "text": "be accessible somebody's got to deploy them somebody's got to manage them that creates a burden now also we talked",
    "start": "546660",
    "end": "555390"
  },
  {
    "text": "earlier about how storage and kubernetes is normalized on the concept of a volume but not all data behaves like a volume",
    "start": "555390",
    "end": "561930"
  },
  {
    "text": "now there are many data intensive workloads that you may want to run in kubernetes and they have needs for a",
    "start": "561930",
    "end": "568110"
  },
  {
    "text": "higher level of storage than just a volume things like databases key value",
    "start": "568110",
    "end": "573990"
  },
  {
    "text": "stores caches message queues all these different types of storage the applications rely on there's no real",
    "start": "573990",
    "end": "581330"
  },
  {
    "text": "abstraction of those right now that defines or describes the need for that type of storage it's pretty basic",
    "start": "581330",
    "end": "587370"
  },
  {
    "text": "Eligius volumes so what you end up with once again is that a lot of applications",
    "start": "587370",
    "end": "593250"
  },
  {
    "text": "end up relying on proprietary cloud provider managed services a good example",
    "start": "593250",
    "end": "598830"
  },
  {
    "text": "here is you know Amazon's relational database service RDS and so when you're taking a specific dependency on a",
    "start": "598830",
    "end": "605399"
  },
  {
    "text": "specific storage solution instead of having an abstraction then you're going to end up with vendor lock-in right so a",
    "start": "605399",
    "end": "614190"
  },
  {
    "start": "612000",
    "end": "612000"
  },
  {
    "text": "portable storage solution that's what this talk is supposed to be about right so let's start let's start talking about what that might look like so we need",
    "start": "614190",
    "end": "620640"
  },
  {
    "text": "something that is going to help us make stateful apps be more portable and be is",
    "start": "620640",
    "end": "626640"
  },
  {
    "text": "just as environment agnostic as kubernetes itself which has done a fantastic job of that so a couple ideas",
    "start": "626640",
    "end": "633630"
  },
  {
    "text": "what about storage that itself runs inside at the curb radius cluster so if",
    "start": "633630",
    "end": "638940"
  },
  {
    "text": "you're deploying a storage solution inside kubernetes you can start taking advantage of some of those built-in",
    "start": "638940",
    "end": "644040"
  },
  {
    "text": "powerful abstractions that it has like pods and you know replica sets daemon",
    "start": "644040",
    "end": "649170"
  },
  {
    "text": "sets things like that and another idea you know what about expanding making it a set of Sorge objects abstractions",
    "start": "649170",
    "end": "655890"
  },
  {
    "text": "broader they can Center to kind of start describing these data needs that applications have that don't just fit",
    "start": "655890",
    "end": "662430"
  },
  {
    "text": "into a volume so this is kind of a hypothetical here of",
    "start": "662430",
    "end": "668430"
  },
  {
    "start": "665000",
    "end": "665000"
  },
  {
    "text": "what a stateful application may look like if it was truly portable so we're",
    "start": "668430",
    "end": "674160"
  },
  {
    "text": "gonna take the example of wordpress so WordPress is stateful in them in the sense that it needs a bad database to",
    "start": "674160",
    "end": "681480"
  },
  {
    "text": "store its data so you know all the cloud providers they have their version of a",
    "start": "681480",
    "end": "686490"
  },
  {
    "text": "managed database service as we just talked about amazon has RDS and Google",
    "start": "686490",
    "end": "692100"
  },
  {
    "text": "has cloud sequel so there's solutions out there you know so WordPress",
    "start": "692100",
    "end": "697560"
  },
  {
    "text": "describing the application of WordPress in the top right here and then describing its need for data and the",
    "start": "697560",
    "end": "703890"
  },
  {
    "text": "bottom right that could be done in one single llamó file and so with that one yellow file we're basically describing",
    "start": "703890",
    "end": "711600"
  },
  {
    "text": "that our application and how it needs to be deployed for while also describing its need for data and how that might be",
    "start": "711600",
    "end": "717990"
  },
  {
    "text": "deployed as well in an environment agnostic portable way so it's in a situation like this what would happen is",
    "start": "717990",
    "end": "725040"
  },
  {
    "text": "that whatever environment you're running in the need for a database the general need for a database will be fulfilled by",
    "start": "725040",
    "end": "731850"
  },
  {
    "text": "whatever environment that is if it's the cloud sequel or if it's RDS that'll happen WordPress gets its database or Bres is",
    "start": "731850",
    "end": "739529"
  },
  {
    "text": "portable now ok so now we're gonna get into how one could build this so let's",
    "start": "739529",
    "end": "746459"
  },
  {
    "text": "go for a couple concepts quickly that I've heard people talking about this week so they're probably not brand new",
    "start": "746459",
    "end": "752970"
  },
  {
    "text": "concepts to a lot of people but let's go over them in many ways so when we're talking about extending kubernetes",
    "start": "752970",
    "end": "758660"
  },
  {
    "text": "there's a couple different ways to do that one of them that is a very powerful concept is custom resource definitions",
    "start": "758660",
    "end": "766350"
  },
  {
    "text": "and so what those enable you to do is to basically you know teach kubernetes",
    "start": "766350",
    "end": "771660"
  },
  {
    "text": "about a new first class object type so you know we have things like pods and config maps and things like that but see",
    "start": "771660",
    "end": "779880"
  },
  {
    "text": "RDS allow us to define our own arbitrary types that look just like a pot or you know just like a daemon set and you know",
    "start": "779880",
    "end": "786360"
  },
  {
    "text": "just like any other first class API object now since their API objects they",
    "start": "786360",
    "end": "794010"
  },
  {
    "text": "get persisted in at CD also so what this does is this these CR DS they allow a",
    "start": "794010",
    "end": "799800"
  },
  {
    "text": "native management expiry it's through cube control I've been calling it cube cuddle for the longest",
    "start": "799800",
    "end": "805130"
  },
  {
    "text": "time and to speaker lounge I overheard somebody saying that only noobs call it that and cube control is the right way",
    "start": "805130",
    "end": "810920"
  },
  {
    "text": "to call it so I'm trying to correct myself now I will assimilate so you know",
    "start": "810920",
    "end": "818120"
  },
  {
    "text": "when when you get to be able to start managing you know arbitrary types or",
    "start": "818120",
    "end": "824630"
  },
  {
    "text": "user-defined types in your kubernetes cluster with the built-in kubernetes tools it starts looking like you know a",
    "start": "824630",
    "end": "831290"
  },
  {
    "text": "first-class citizen of kubernetes you know that whole very consistent cohesive",
    "start": "831290",
    "end": "836570"
  },
  {
    "text": "experience is a powerful thing so these CR DS they don't have any functionality by themselves they're basically a type",
    "start": "836570",
    "end": "842210"
  },
  {
    "text": "declaration of you know this is a type and these are the type of the properties that belong on it but it doesn't have",
    "start": "842210",
    "end": "847580"
  },
  {
    "text": "logic or features inside of it in itself but with those types we can define these",
    "start": "847580",
    "end": "853580"
  },
  {
    "text": "abstractions we've been talking about here so this is what a CRT declaration looks like you know in yam all you're",
    "start": "853580",
    "end": "860960"
  },
  {
    "start": "860000",
    "end": "860000"
  },
  {
    "text": "basically saying that this is a customer research definition you give it your API group information you know what group it",
    "start": "860960",
    "end": "866960"
  },
  {
    "text": "belongs to the version of it and that what we're looking at here is a kind of a data base this is what it would look",
    "start": "866960",
    "end": "873590"
  },
  {
    "text": "like to define a sort of an abstract portable concept of a data base now the",
    "start": "873590",
    "end": "879410"
  },
  {
    "text": "other way that we extend kubernetes is through a concept called operators core",
    "start": "879410",
    "end": "884990"
  },
  {
    "text": "OS I think it was yesterday morning talked about their new operator SDK and",
    "start": "884990",
    "end": "890030"
  },
  {
    "text": "they're actually it's at least to my knowledge the ones that first came up with this operator pattern or started evangelizing it and it's really really",
    "start": "890030",
    "end": "897140"
  },
  {
    "text": "really powerful we're you know an operator is a special type of controller a kubernetes controller that were all",
    "start": "897140",
    "end": "903320"
  },
  {
    "text": "familiar with like a node controller pod controller things like that but what it does is that it codifies the domain",
    "start": "903320",
    "end": "909950"
  },
  {
    "text": "expertise or subject matter expertise that it takes to run a complicated application especially over time to you",
    "start": "909950",
    "end": "917630"
  },
  {
    "text": "know not just the initial deployments of it but also the management of it too so basically you know any actions that a",
    "start": "917630",
    "end": "924080"
  },
  {
    "text": "human would need to do to manage a cluster you can automate that with operators so that you know the software",
    "start": "924080",
    "end": "930950"
  },
  {
    "text": "will do this for you and one of the examples that really made me personally see the power",
    "start": "930950",
    "end": "937399"
  },
  {
    "text": "of operators was the Prometheus operator because I wanted I had a need for you",
    "start": "937399",
    "end": "943970"
  },
  {
    "text": "know monitoring in my cluster and I don't personally know how to set up for me theose but with a cube control create",
    "start": "943970",
    "end": "951350"
  },
  {
    "text": "the operator and a few control create Prometheus without really no asthma myself having no idea of how the",
    "start": "951350",
    "end": "957709"
  },
  {
    "text": "software is gonna get managed and deployed underneath the covers the permeate this operator did it for me so",
    "start": "957709",
    "end": "963439"
  },
  {
    "text": "it allows users to start using or consuming software systems that they don't need you know without the",
    "start": "963439",
    "end": "968660"
  },
  {
    "text": "operational experience to manage it so let's offer do the job right so the real",
    "start": "968660",
    "end": "974839"
  },
  {
    "start": "973000",
    "end": "973000"
  },
  {
    "text": "way that operators work is through a control loop just like any other controller so what they do is they sit",
    "start": "974839",
    "end": "980179"
  },
  {
    "text": "in the loop and they'll watch for events on the CR DS that you've defined like a create a database or update a database",
    "start": "980179",
    "end": "987169"
  },
  {
    "text": "and they also watch for changes to the cluster itself so the core part here is",
    "start": "987169",
    "end": "993259"
  },
  {
    "text": "that they'll reconcile the users desired state with what the actual state in the",
    "start": "993259",
    "end": "998299"
  },
  {
    "text": "cluster is so for instance you know you have a actual state is no database but the users desired state is yes please",
    "start": "998299",
    "end": "1004989"
  },
  {
    "text": "database it'll reconciled it to and make that you know a reality and it does that through a kind of a three-step process",
    "start": "1004989",
    "end": "1011309"
  },
  {
    "text": "one is observe you know first discover what the actual state of the cluster is and then analyze determine the",
    "start": "1011309",
    "end": "1018759"
  },
  {
    "text": "differences between the actual state of the cluster and what the users desired state is and then act on that you know",
    "start": "1018759",
    "end": "1025149"
  },
  {
    "text": "perform operations or do we know whatever calls you need to do to make sure that the desired state is made a",
    "start": "1025149",
    "end": "1032230"
  },
  {
    "text": "reality so continuously in this loop the operator will be driving towards that",
    "start": "1032230",
    "end": "1037418"
  },
  {
    "text": "desired state and as we kind of alluded",
    "start": "1037419",
    "end": "1043538"
  },
  {
    "text": "to earlier you know once the software system gets deployed it's got to be",
    "start": "1043539",
    "end": "1049419"
  },
  {
    "text": "managed think about day two operations you've deployed it but on day two you've got to support it right so there's a",
    "start": "1049419",
    "end": "1055269"
  },
  {
    "text": "whole bunch of things that operators can do that we can teach them to do and automate with software like ensuring",
    "start": "1055269",
    "end": "1060759"
  },
  {
    "text": "they're healthy scaling it you know making sure that if there's a failover or sorry failure you can you know fail",
    "start": "1060759",
    "end": "1066909"
  },
  {
    "text": "components over he'll the the system backups restorations one of them that's",
    "start": "1066909",
    "end": "1072950"
  },
  {
    "text": "particularly interesting to me is upgrades or across versions of a piece of software you may have breaking",
    "start": "1072950",
    "end": "1079010"
  },
  {
    "text": "changes or you may need to do some sort of migration right and the operator could do that for you as opposed to having to have a human go in there and",
    "start": "1079010",
    "end": "1085789"
  },
  {
    "text": "you know do things manually let's make software do it so just let the operator manage it it's very",
    "start": "1085789",
    "end": "1091700"
  },
  {
    "text": "powerful to have automation doing things for you now a key aspect when we're",
    "start": "1091700",
    "end": "1098360"
  },
  {
    "text": "getting down into the code of what an operator would look like is that to be able to talk to the kerbin ADIS api you",
    "start": "1098360",
    "end": "1105289"
  },
  {
    "text": "can't do much in a kubernetes cluster without being able to talk to the api server and you know making requests",
    "start": "1105289",
    "end": "1111649"
  },
  {
    "text": "performing operations getting information so the way that's done in an",
    "start": "1111649",
    "end": "1116809"
  },
  {
    "text": "operators often is with the client set and so a client set is is a collection",
    "start": "1116809",
    "end": "1122419"
  },
  {
    "text": "of various clients that can talk to the crew brandies api to get work done and",
    "start": "1122419",
    "end": "1127970"
  },
  {
    "text": "so from your controller your operator and your go code you don't have a client set there that you can start making",
    "start": "1127970",
    "end": "1134000"
  },
  {
    "text": "these calls with so you can see some examples at the bottom here where we have a client set and then we're asking",
    "start": "1134000",
    "end": "1140630"
  },
  {
    "text": "for you know the core the core API v1 of the core API you know I want to do",
    "start": "1140630",
    "end": "1146149"
  },
  {
    "text": "something with pods so I call the pods function and the default namespace and I want to list these pods so",
    "start": "1146149",
    "end": "1152409"
  },
  {
    "text": "programmatically with code U and a client set here you're getting all the pods in the system and that's part of",
    "start": "1152409",
    "end": "1158779"
  },
  {
    "text": "that observing step of operators of I need to know what the system is doing before I can analyze it and start making",
    "start": "1158779",
    "end": "1165860"
  },
  {
    "text": "changes you know similarly we can do things like in the storage the v1 of the storage API we can create storage",
    "start": "1165860",
    "end": "1172039"
  },
  {
    "text": "classes so all this we can do programmatically from our operators so it's not only important for you know",
    "start": "1172039",
    "end": "1178070"
  },
  {
    "text": "discovering system State it's also important for you know performing operations to drive towards that desired",
    "start": "1178070",
    "end": "1184460"
  },
  {
    "text": "State in the cluster another key aspect of of operators here is Informer's so an",
    "start": "1184460",
    "end": "1192649"
  },
  {
    "start": "1186000",
    "end": "1186000"
  },
  {
    "text": "informed so we once we have the need in our operators to be able to tell when an event happens so the way we can do that",
    "start": "1192649",
    "end": "1199399"
  },
  {
    "text": "one way a naive way would just be to keep asking the API server hey is there an object I",
    "start": "1199399",
    "end": "1204710"
  },
  {
    "text": "care about ask again ask again but if you're polling the API server like that if everyone's doing that in the cluster",
    "start": "1204710",
    "end": "1210550"
  },
  {
    "text": "especially considering how many components can run in a kubernetes cluster at once that gets expensive",
    "start": "1210550",
    "end": "1216710"
  },
  {
    "text": "really quickly it's incredibly wasteful - so an informer is a way to efficiently",
    "start": "1216710",
    "end": "1222050"
  },
  {
    "text": "watch for events from the API server and get a notification about it informers",
    "start": "1222050",
    "end": "1227120"
  },
  {
    "text": "off also have a very nice property of caching objects locally so that if you",
    "start": "1227120",
    "end": "1233180"
  },
  {
    "text": "have a client that's asking for hey give me the pods give me the pods give me the pods it won't continue to hit the API",
    "start": "1233180",
    "end": "1239630"
  },
  {
    "text": "server with that request it'll fulfill that request from its local in-memory cache of objects to be",
    "start": "1239630",
    "end": "1245180"
  },
  {
    "text": "even more performance and there's also a concept of shared performers where if you have multiple controllers all",
    "start": "1245180",
    "end": "1250910"
  },
  {
    "text": "running in the same process they can share information in an efficient way so",
    "start": "1250910",
    "end": "1257750"
  },
  {
    "text": "it's gonna move through this pretty quickly so you know in your operator you know to start implementing these systems",
    "start": "1257750",
    "end": "1263090"
  },
  {
    "text": "here to be creating an informer you need a source of where the information is going to be or you know that's the",
    "start": "1263090",
    "end": "1268580"
  },
  {
    "text": "kubernetes api server you say hey i want to i'm going to learn about pods every 30 seconds so I want you to refresh that",
    "start": "1268580",
    "end": "1274550"
  },
  {
    "text": "cache for me so it doesn't go too stale but here's the important part to me when you're asking for events on objects and",
    "start": "1274550",
    "end": "1282560"
  },
  {
    "text": "the kubernetes api server you're also giving it these function handlers these function pointers to handle errors to",
    "start": "1282560",
    "end": "1288800"
  },
  {
    "text": "say okay here's a function I want you to call when some a pod has been added here's one for update and here's one for",
    "start": "1288800",
    "end": "1295010"
  },
  {
    "text": "delete so basically we're defining behavior that we want to have happen when events",
    "start": "1295010",
    "end": "1301160"
  },
  {
    "text": "happen in the system that we care about and the last part here is about event",
    "start": "1301160",
    "end": "1306950"
  },
  {
    "start": "1303000",
    "end": "1303000"
  },
  {
    "text": "triggers so you want your when you're watching for events you want it to be a level driven not edge driven so what",
    "start": "1306950",
    "end": "1312800"
  },
  {
    "text": "that means is that you can't always assume that you're going to see when a transition happens you have to make",
    "start": "1312800",
    "end": "1317840"
  },
  {
    "text": "decisions on level driven not edge driven for when you see a state in the system you may have missed when that",
    "start": "1317840",
    "end": "1324500"
  },
  {
    "text": "transition happened but perform the reconciliation do the operation anyways when you see the state of the system in",
    "start": "1324500",
    "end": "1330980"
  },
  {
    "text": "a state that you care about all right so back to the beginning here finally",
    "start": "1330980",
    "end": "1336290"
  },
  {
    "text": "running your data anywhere so we've kind of talked through a bunch of concepts here and this is pulling it all together",
    "start": "1336290",
    "end": "1341930"
  },
  {
    "text": "so by extending kubernetes we can start defining these new useful portable",
    "start": "1341930",
    "end": "1347630"
  },
  {
    "text": "abstractions so a you know users and apps they can describe what they're not",
    "start": "1347630",
    "end": "1353900"
  },
  {
    "text": "only how do they want to be deployed but also what their storage needs are as well and as soon as we've described both",
    "start": "1353900",
    "end": "1360860"
  },
  {
    "text": "the storage needs and the deployment needs of an application what we're getting there is true portability of I",
    "start": "1360860",
    "end": "1366800"
  },
  {
    "text": "can now take this application even though it's stateful and has a requirement for storage it can go anywhere now and then at the final part",
    "start": "1366800",
    "end": "1374510"
  },
  {
    "text": "there is how operators can make that desire for data it just happened because of their you know automated domain",
    "start": "1374510",
    "end": "1382370"
  },
  {
    "text": "knowledge of how to operate excuse me how to run a cluster and it does that in two ways with either deploying storage",
    "start": "1382370",
    "end": "1389150"
  },
  {
    "text": "solutions into your kubernetes cluster or having the smarts to talk to whatever cloud provider you're running in and",
    "start": "1389150",
    "end": "1395390"
  },
  {
    "text": "getting the manage services up and running and provisioned all right so now",
    "start": "1395390",
    "end": "1401000"
  },
  {
    "text": "I'm going to show a few things here so we were in this talk here we were",
    "start": "1401000",
    "end": "1406670"
  },
  {
    "text": "talking about you know how we can have portable storage solutions or how we can",
    "start": "1406670",
    "end": "1411680"
  },
  {
    "text": "bring storage into pure vanity the cluster itself so it can run a bare metal hybrid solutions cloud providers",
    "start": "1411680",
    "end": "1418310"
  },
  {
    "text": "all that sort of stuff so we're going to show a few operators from the Rooke project that I mentioned I'm a",
    "start": "1418310",
    "end": "1424400"
  },
  {
    "text": "maintainer on and we're gonna show how a lot of different storage can come right on into our kubernetes cluster and it's",
    "start": "1424400",
    "end": "1430460"
  },
  {
    "text": "all my laptop right now but this could be bare metal this could be cloud provider doesn't matter so I'm gonna use",
    "start": "1430460",
    "end": "1436370"
  },
  {
    "text": "some aliases when I'm typing and I apologize for that but it makes for less mistakes I hope so right now SEF is a",
    "start": "1436370",
    "end": "1444380"
  },
  {
    "text": "distributed storage system that Brooks supports and I'm creating an operator for it I'm also going to do the same",
    "start": "1444380",
    "end": "1452780"
  },
  {
    "text": "thing for cockroach DB and I'm also going to do the same thing for Mineo and",
    "start": "1452780",
    "end": "1459830"
  },
  {
    "text": "so what we're going to see here is hope that's big enough but there's a lot of",
    "start": "1459830",
    "end": "1465440"
  },
  {
    "text": "information to kind of fit on the screen here so we'll make it make it work but we're showing here is did I three different types of operators out",
    "start": "1465440",
    "end": "1471830"
  },
  {
    "text": "to this kubernetes cluster one from Mineo cockroach DB and one force F and so these operators are sitting there",
    "start": "1471830",
    "end": "1477980"
  },
  {
    "text": "they've defined their own custom resources that capture the concepts of what asset cluster is and how its",
    "start": "1477980",
    "end": "1484100"
  },
  {
    "text": "deployed what a cockroach DB database is how its deployed all those sort of things are captured by these operators and they're waiting there for us to do",
    "start": "1484100",
    "end": "1491630"
  },
  {
    "text": "something useful so now that we have created these operate these three different operators let's go ahead and",
    "start": "1491630",
    "end": "1498409"
  },
  {
    "text": "start making some storage too so I'm asking the Ceph operator now to create a",
    "start": "1498409",
    "end": "1504890"
  },
  {
    "text": "cluster a SEF cluster specifically so when I created that using cube control",
    "start": "1504890",
    "end": "1511809"
  },
  {
    "text": "it created an API an instance of our customer resource definition SEF cluster",
    "start": "1511809",
    "end": "1517370"
  },
  {
    "text": "in with the kubernetes api server which triggered an event to our SEF operator",
    "start": "1517370",
    "end": "1524000"
  },
  {
    "text": "which says oh cool somebody's added a set cluster so I'm gonna go ahead and I",
    "start": "1524000",
    "end": "1529399"
  },
  {
    "text": "know the specifics I've got the domain expertise of what it means to be a safe cluster with distributed storage so I'm",
    "start": "1529399",
    "end": "1534679"
  },
  {
    "text": "gonna make that happen so we see here the multiple pods start coming up and you know start the",
    "start": "1534679",
    "end": "1542020"
  },
  {
    "text": "operators going through the steps that it takes to build a scepter for us directly in kubernetes oops we are also",
    "start": "1542020",
    "end": "1551539"
  },
  {
    "text": "going to do the same thing or similar thing for cockroach DB and we're gonna",
    "start": "1551539",
    "end": "1558559"
  },
  {
    "text": "do the same thing for Mineo - and we'll",
    "start": "1558559",
    "end": "1563960"
  },
  {
    "text": "go back over to this view here so very similar to SEF we asked for an instance",
    "start": "1563960",
    "end": "1569120"
  },
  {
    "text": "of a cockroach DB database we asked for an instance of a Mineo objects server and those operators knew what we're",
    "start": "1569120",
    "end": "1576169"
  },
  {
    "text": "asking for because they got an event on it to add so add that to the cluster and then they're using client sets and the",
    "start": "1576169",
    "end": "1582559"
  },
  {
    "text": "kubernetes api to build these storage solutions for us directly in our cluster",
    "start": "1582559",
    "end": "1588039"
  },
  {
    "text": "so it looks like most all that's running now so we have SEF we've got cockroach we've got mini oh let's use this stuff",
    "start": "1588039",
    "end": "1596360"
  },
  {
    "text": "now that we've actually got a storage solution deployed in a portable way and our kubernetes cluster let's let's use",
    "start": "1596360",
    "end": "1602240"
  },
  {
    "text": "it I'm gonna start do some copy thing here sorry this is not meant to be readable what do I want to do so I've",
    "start": "1602240",
    "end": "1619940"
  },
  {
    "text": "defined a storage class for for the SEF provisioner so that when an application",
    "start": "1619940",
    "end": "1627070"
  },
  {
    "text": "requests storage then that can be fulfilled because the storage class is the blueprint right fir that defines how",
    "start": "1627070",
    "end": "1634730"
  },
  {
    "text": "a storage request can be fulfilled and then I've also gone ahead and deployed",
    "start": "1634730",
    "end": "1640390"
  },
  {
    "text": "to other as a stateful application I've deployed WordPress and I've deployed a data base underneath WordPress to serve",
    "start": "1640390",
    "end": "1646670"
  },
  {
    "text": "as this persistent storage that WordPress sorry the my sequel database that's going to sort of handle the",
    "start": "1646670",
    "end": "1653300"
  },
  {
    "text": "storage for WordPress is actually going to be served underneath by that SEF distributed storage system that we",
    "start": "1653300",
    "end": "1659240"
  },
  {
    "text": "deployed out to the cluster so it looks like those are running now and let's do",
    "start": "1659240",
    "end": "1665300"
  },
  {
    "text": "something similar for cockroach DB and Mineo also",
    "start": "1665300",
    "end": "1671200"
  },
  {
    "text": "oh yeah this guy yes so let's do",
    "start": "1677180",
    "end": "1682880"
  },
  {
    "text": "something useful for cockroach so I've",
    "start": "1682880",
    "end": "1689480"
  },
  {
    "text": "got what I've done here now is I've gone ahead and created a kind of a load generation app for cockroach it's gonna",
    "start": "1689480",
    "end": "1696590"
  },
  {
    "text": "do a lot of random writes and kind of you know benchmark and things like that so we're kind of looking at it's logs",
    "start": "1696590",
    "end": "1702830"
  },
  {
    "text": "here of all the rights that it's doing to the database to the cockroach DB database so we know that the the",
    "start": "1702830",
    "end": "1708320"
  },
  {
    "text": "cockroach DB instance that we deployed is up and running and functional and you can do rights and things on it we can",
    "start": "1708320",
    "end": "1713780"
  },
  {
    "text": "also do a select to look at the dead random data that it's writing to it also but let's also take a look at Mineo - so",
    "start": "1713780",
    "end": "1726890"
  },
  {
    "text": "this is just asking for you know what URL you know IP address did the Mineo object server end up on its yeah there",
    "start": "1726890",
    "end": "1736760"
  },
  {
    "text": "we go and and so now we're seeing the the Mineo object server",
    "start": "1736760",
    "end": "1742280"
  },
  {
    "text": "you know log in page up and running and",
    "start": "1742280",
    "end": "1749060"
  },
  {
    "text": "now we have you know an s3 compatible object server up and running in our kubernetes cluster so let's just create",
    "start": "1749060",
    "end": "1754640"
  },
  {
    "text": "a bucket and let's add some files to it from the desktop",
    "start": "1754640",
    "end": "1760100"
  },
  {
    "text": "I don't want those PDFs",
    "start": "1760100",
    "end": "1765429"
  },
  {
    "text": "and so you know in our cluster we have object storage that's up and running in a portable way and we can start using it",
    "start": "1768130",
    "end": "1774730"
  },
  {
    "text": "for you know storing files in our object server we've in addition to that we've got you know a database instance up and",
    "start": "1774730",
    "end": "1781360"
  },
  {
    "text": "running that we could consume your cockroach DB we also have a distributed storage cluster of Ceph running that",
    "start": "1781360",
    "end": "1787390"
  },
  {
    "text": "also services block storage file storage object storage so basically what we have here is you know in a portable way we",
    "start": "1787390",
    "end": "1795910"
  },
  {
    "text": "have a set of operators and a set of you know custom resources that have extended kubernetes to be able to bring storage",
    "start": "1795910",
    "end": "1803200"
  },
  {
    "text": "that your applications require into kubernetes in a portable way anywhere",
    "start": "1803200",
    "end": "1809140"
  },
  {
    "text": "you deploy cloud providers on-premise laptop whatever it's let's go back to",
    "start": "1809140",
    "end": "1815320"
  },
  {
    "text": "the sides real quick alright and that is",
    "start": "1815320",
    "end": "1825340"
  },
  {
    "start": "1824000",
    "end": "1824000"
  },
  {
    "text": "all so thank you very much for attending this talk to dead any questions [Applause]",
    "start": "1825340",
    "end": "1833049"
  },
  {
    "text": "it's a question oh yeah I have the guy",
    "start": "1833310",
    "end": "1838680"
  },
  {
    "text": "one here I don't know if it's not yeah there you go could you maybe show us",
    "start": "1838680",
    "end": "1845370"
  },
  {
    "text": "real quick how you do the configuration for where the data stored especially in",
    "start": "1845370",
    "end": "1850890"
  },
  {
    "text": "safe you have the possibility to have an SSD cache on the very top of it so",
    "start": "1850890",
    "end": "1856010"
  },
  {
    "text": "what's how does look how do I configure in work that should be saved on SSD and",
    "start": "1856010",
    "end": "1865230"
  },
  {
    "text": "how do I configure the flash times and things like that yeah sure so you know",
    "start": "1865230",
    "end": "1871680"
  },
  {
    "text": "you were clearly familiar with Seth you've used it before obviously you know and as you're mentioning there you know",
    "start": "1871680",
    "end": "1878040"
  },
  {
    "text": "Seth has this ability to kind of define the topology of your storage cluster of",
    "start": "1878040",
    "end": "1884850"
  },
  {
    "text": "of you know where data lives you know classes of it to put you know certain",
    "start": "1884850",
    "end": "1890100"
  },
  {
    "text": "information on you know faster in me and me SSD devices things like that right so",
    "start": "1890100",
    "end": "1897259"
  },
  {
    "text": "in the example demo we had here just running on my laptop you know I don't have a set of SSDs and in VMI's and",
    "start": "1898250",
    "end": "1904920"
  },
  {
    "text": "stuff to use like that so I'll make this bigger don't worry",
    "start": "1904920",
    "end": "1910340"
  },
  {
    "text": "and that's try to bring it up as quick as possible there we go",
    "start": "1910340",
    "end": "1920150"
  },
  {
    "text": "so in this is this is what is this safe",
    "start": "1921470",
    "end": "1926730"
  },
  {
    "text": "cluster CRD is right here defined and so this is where you get some of those configuration options to start saying",
    "start": "1926730",
    "end": "1932610"
  },
  {
    "text": "how you want the operator to deploy the store the Ceph storage for you so this particular field here like metadata",
    "start": "1932610",
    "end": "1938430"
  },
  {
    "text": "advice this is where you would say hey this is my SSD that i want you to use and then you can start defining you know",
    "start": "1938430",
    "end": "1945030"
  },
  {
    "text": "other aspects of the cluster like you know what particular nodes you want it running on what devices those are you",
    "start": "1945030",
    "end": "1952860"
  },
  {
    "text": "know the spinning platter devices where you want data to end up if you want it to use file store a boost or you know a",
    "start": "1952860",
    "end": "1959760"
  },
  {
    "text": "bunch of various constructs of how you want to deploy the storage now since these are some some of these are",
    "start": "1959760",
    "end": "1965010"
  },
  {
    "text": "abstractions over what Seth provides there's gonna be some simplicity or some things that staff may do that you know isn't necessarily",
    "start": "1965010",
    "end": "1971250"
  },
  {
    "text": "directly supported by rook but you do have the ability availability to specify",
    "start": "1971250",
    "end": "1976830"
  },
  {
    "text": "how the storage resources in your cluster you know what hard drives and devices you have in your cluster should",
    "start": "1976830",
    "end": "1982770"
  },
  {
    "text": "be used by SEF and now it's important to note too that with rook since you know",
    "start": "1982770",
    "end": "1987780"
  },
  {
    "text": "there's more support than just force F this can be done in a common way now because all storage providers need to",
    "start": "1987780",
    "end": "1993930"
  },
  {
    "text": "know what storage they can use in the cluster to make something useful right like even mini oh cockroach DB so in a",
    "start": "1993930",
    "end": "2000050"
  },
  {
    "text": "consistent way you know using rook and these operators you can say hey I want you to use these devices for what the",
    "start": "2000050",
    "end": "2007340"
  },
  {
    "text": "specific storage solution on top of it is be that cockroach or next Center staff or whatever it may be yes",
    "start": "2007340",
    "end": "2017560"
  },
  {
    "text": "yeah so the question was you know what do you do if you have an existing SEF cluster and you want to use it in",
    "start": "2024140",
    "end": "2030059"
  },
  {
    "text": "different SEF clusters so there isn't there isn't a specific you know",
    "start": "2030059",
    "end": "2035670"
  },
  {
    "text": "migration path or you know full support with rook to bring it into kubernetes if you already have it existing there are",
    "start": "2035670",
    "end": "2042330"
  },
  {
    "text": "things you can do such as you know set up replication with the SEF cluster that you've created in kubernetes and start",
    "start": "2042330",
    "end": "2049050"
  },
  {
    "text": "replicating the data over or snapshots and move them over things like that but there's not a specific way that that's",
    "start": "2049050",
    "end": "2054388"
  },
  {
    "text": "supported so it's you know mostly for starting with new SEF clusters not sure",
    "start": "2054389",
    "end": "2068100"
  },
  {
    "text": "if I have found that if oh it like in",
    "start": "2068100",
    "end": "2074760"
  },
  {
    "text": "the demo I was doing here Oh in your hyper",
    "start": "2074760",
    "end": "2079490"
  },
  {
    "text": "yeah I believe like a decade since our you know Federation between the Cooper dandies Custer's and that's kind of a",
    "start": "2091090",
    "end": "2097420"
  },
  {
    "text": "hot topic right now actually with you know this whole multi-cloud story too and so there's actually some some thing",
    "start": "2097420",
    "end": "2103960"
  },
  {
    "text": "you know thinking right now that's being done on that to how to make that management story of multi clusters and",
    "start": "2103960",
    "end": "2109180"
  },
  {
    "text": "multiple clouds look more like managing a single cluster and so you know they don't have a story for their eggs you",
    "start": "2109180",
    "end": "2115150"
  },
  {
    "text": "know a solution for that right now that's actually something that we're thinking up and working on right now to support that better that's a good",
    "start": "2115150",
    "end": "2121030"
  },
  {
    "text": "question you see it's time check I think that's all the time we have here if it",
    "start": "2121030",
    "end": "2126820"
  },
  {
    "text": "so thank you very much everyone appreciate it [Applause]",
    "start": "2126820",
    "end": "2132650"
  }
]