[
  {
    "text": "all right welcome everyone Hi thank you for coming This is the uh linkery",
    "start": "80",
    "end": "5600"
  },
  {
    "text": "project update Um my name is Link My name is Linkerty My name is Alex Leang I'm a project maintainer on linkerty I'm",
    "start": "5600",
    "end": "12320"
  },
  {
    "text": "a software engineer at Buoyant and I'm happy to be giving this update on kind of all the things that are new and going on with the link project It's been a",
    "start": "12320",
    "end": "19439"
  },
  {
    "text": "really busy year for us Uh the pace of execution on this project has just been like through the roof So there's a lot",
    "start": "19439",
    "end": "25039"
  },
  {
    "text": "to talk about Um there have been in fact a lot of",
    "start": "25039",
    "end": "30400"
  },
  {
    "text": "things uh going on with linker at this uh KubeCon So we're kind of towards the",
    "start": "30400",
    "end": "35600"
  },
  {
    "text": "end of the week now but we've had a whole bunch of talks all through the week We had a great uh linker day uh",
    "start": "35600",
    "end": "42000"
  },
  {
    "text": "back on Tuesday Uh a lot of really really cool talks there Um on Wednesday",
    "start": "42000",
    "end": "47280"
  },
  {
    "text": "there were a couple of talks I gave one Uh William Morgan gave the other Uh those recordings if you weren't able to",
    "start": "47280",
    "end": "52800"
  },
  {
    "text": "make it to those I highly recommend you check those out when the recordings are available Um and then here we are on",
    "start": "52800",
    "end": "57920"
  },
  {
    "text": "Thursday This is the linkery update where I'm just going to give kind of a overview of where the project is at what's new what's going on what's coming",
    "start": "57920",
    "end": "64478"
  },
  {
    "text": "up Um of course we're also in the uh the expo hall So if you have more questions",
    "start": "64479",
    "end": "69840"
  },
  {
    "text": "about LinkerDert come find us there and uh happy to chat about all all things",
    "start": "69840",
    "end": "75119"
  },
  {
    "text": "service mesh Um if you don't already know what link is um it is a service mesh So it's",
    "start": "75119",
    "end": "83360"
  },
  {
    "text": "ultra light ultra fast security first is our positioning Um it's built specifically for Kubernetes So it's",
    "start": "83360",
    "end": "89280"
  },
  {
    "text": "Kubernetes native Um it's been in production for eight years now at a variety of different companies at",
    "start": "89280",
    "end": "95040"
  },
  {
    "text": "various different scales and in various different environments Um so it's it's definitely battle tested and battle",
    "start": "95040",
    "end": "100400"
  },
  {
    "text": "hardened Um we're a CNCF project We're graduated and uh I'm really proud of the",
    "start": "100400",
    "end": "106320"
  },
  {
    "text": "work that we do on it Um and to kind of summarize like in a",
    "start": "106320",
    "end": "111960"
  },
  {
    "text": "nutshell where we think uh linkd is positioned as a service mesh we wanted",
    "start": "111960",
    "end": "117040"
  },
  {
    "text": "to give every platform engineer in the world the tools they need to create a secure reliable and observable",
    "start": "117040",
    "end": "123520"
  },
  {
    "text": "cloudnative platform And all three of those pieces are kind of critical You can't compromise on one uh to get",
    "start": "123520",
    "end": "131920"
  },
  {
    "text": "another So the design philosophy for link is that it should just work um you should just be able to install it",
    "start": "132040",
    "end": "138239"
  },
  {
    "text": "without using your brain and uh and it should just kind of work right right away Um there's a lot of tools out there",
    "start": "138239",
    "end": "146080"
  },
  {
    "text": "that require a lot of configuration and licority can be one of them Uh but you should kind of have to scale up the",
    "start": "146080",
    "end": "151599"
  },
  {
    "text": "config that you uh is required based on what your needs are and easy things should be easy More complex things are",
    "start": "151599",
    "end": "158560"
  },
  {
    "text": "there when you're ready for them Um another philosophy is to not be greedy right when we're talking about a service",
    "start": "158560",
    "end": "165280"
  },
  {
    "text": "mesh uh in the case of linkerty we have a sidecar proxy And that means that proxy is in every single pod in your",
    "start": "165280",
    "end": "172080"
  },
  {
    "text": "application in your cluster And so you know at that scale it's very easy you",
    "start": "172080",
    "end": "177120"
  },
  {
    "text": "know as software developers to be like well computers are powerful memory is cheap you know who cares let's just do",
    "start": "177120",
    "end": "182959"
  },
  {
    "text": "whatever But in the sidecar environment every bite matters And when you're",
    "start": "182959",
    "end": "188159"
  },
  {
    "text": "talking about intercepting uh traffic and all your requests are flowing through that proxy then every",
    "start": "188159",
    "end": "194319"
  },
  {
    "text": "millisecond every microscond matters So we really are always conscious of that and trying to uh use the minimum amount",
    "start": "194319",
    "end": "201519"
  },
  {
    "text": "of resources that we possibly possibly can Um I think maybe the most important",
    "start": "201519",
    "end": "206720"
  },
  {
    "text": "of these is is removing operational complexity So any kind of cloudnative",
    "start": "206720",
    "end": "211760"
  },
  {
    "text": "application is you know certainly going to be complex There are a lot of moving pieces There are a lot of different",
    "start": "211760",
    "end": "217200"
  },
  {
    "text": "technologies in play There's a lot for you as a developer or as an operator to",
    "start": "217200",
    "end": "223200"
  },
  {
    "text": "to be aware of And we don't want linkd to be kind of an extra thing that makes your life harder We want it to be something that makes your life easier So",
    "start": "223200",
    "end": "229920"
  },
  {
    "text": "to whatever degree possible we want to make that easy to operate have it just",
    "start": "229920",
    "end": "235360"
  },
  {
    "text": "kind of uh do what you expect and be predictable Um and security has to be",
    "start": "235360",
    "end": "242000"
  },
  {
    "text": "there out of the box That's non-negotiable you know we don't want insecure traffic out there and we don't",
    "start": "242000",
    "end": "248239"
  },
  {
    "text": "want it to be difficult to secure your traffic So if you install linkerd you get MTLS by default No configuration",
    "start": "248239",
    "end": "254239"
  },
  {
    "text": "necessary Um it it's just there Um and so what kind of makes linkd",
    "start": "254239",
    "end": "262079"
  },
  {
    "text": "unique in this space is that we have our own proxy that we wrote specifically for linkd So this was written in Rust Uh we",
    "start": "262079",
    "end": "268800"
  },
  {
    "text": "call it a micro proxy because it is designed to be as lightweight and out of the way as possible Um so we don't use",
    "start": "268800",
    "end": "275360"
  },
  {
    "text": "Envoy Um we use this this Rust proxy Um and it was written to be security first",
    "start": "275360",
    "end": "280800"
  },
  {
    "text": "That was the reason or one of the reasons we chose Rust as the implementation language is because we wanted to make sure uh to whatever",
    "start": "280800",
    "end": "286800"
  },
  {
    "text": "degree possible that we didn't have uh memory safety issues that we could be really uh deliberate about the memory we",
    "start": "286800",
    "end": "294000"
  },
  {
    "text": "were using and and using it in a safe and efficient way Um this is built on state-of-the-art",
    "start": "294000",
    "end": "301120"
  },
  {
    "text": "networking stack So we use libraries from Rust like Tokyo Hyper H2 and Tower We use state-of-the-art crypto libraries",
    "start": "301120",
    "end": "307520"
  },
  {
    "text": "to do a MTLS and uh it's a very uh it's a very modern and um I think cutting",
    "start": "307520",
    "end": "314639"
  },
  {
    "text": "edge project Um but this is all to say the proxy isn't something that anyone",
    "start": "314639",
    "end": "319759"
  },
  {
    "text": "who uses link should ever have to worry about You know this should be an implementation detail The service mesh",
    "start": "319759",
    "end": "325199"
  },
  {
    "text": "should do its thing and you shouldn't have to care that the proxy is written in Rust or written in Go or written in C",
    "start": "325199",
    "end": "331840"
  },
  {
    "text": "or written in whatever It should just get out of the way consume minimal resources and do its",
    "start": "331840",
    "end": "338000"
  },
  {
    "text": "job Okay so linkerty year in review what has happened in the last year since KubeCon Paris it's a",
    "start": "338680",
    "end": "345000"
  },
  {
    "text": "lot Uh so we released linkerd 216 Um this release had a bunch of stuff in it",
    "start": "345000",
    "end": "351520"
  },
  {
    "text": "Uh maybe most notable was that we took a lot of the functionality that was in linkerd for per routeout behavior uh",
    "start": "351520",
    "end": "358720"
  },
  {
    "text": "like per routeout retries per route timeouts per route metrics um all of the stuff that was previously configured in",
    "start": "358720",
    "end": "365680"
  },
  {
    "text": "linkd using something called service profiles Those were trying to deprecate and move away from and move everything",
    "start": "365680",
    "end": "371440"
  },
  {
    "text": "onto uh a more commonly used API which is the gateway API So we want the",
    "start": "371440",
    "end": "377440"
  },
  {
    "text": "gateway AP API to be the common way to configure a lot of these things in linkerd so that you can get per HTTP",
    "start": "377440",
    "end": "384319"
  },
  {
    "text": "route per gpc route or even TCP TLS routes um and have all that",
    "start": "384319",
    "end": "389919"
  },
  {
    "text": "configuration live on the gateway API so we can kind of integrate with the rest of the ecosystem Uh so that was added in",
    "start": "389919",
    "end": "396479"
  },
  {
    "text": "in 216 We also added support for IPv6 So that's uh part of linkery Now um we",
    "start": "396479",
    "end": "402880"
  },
  {
    "text": "added a policy audit mode So linkerd has authorization policies So you can",
    "start": "402880",
    "end": "408400"
  },
  {
    "text": "configure traffic to be allowed or denied But these are very scary to implement because if you you know want",
    "start": "408400",
    "end": "414479"
  },
  {
    "text": "to switch your default policy to default deny which is a good thing to do from a security posture position uh it's very",
    "start": "414479",
    "end": "421599"
  },
  {
    "text": "scary because you haven't set up those policies correctly you're going to start denying traffic that you shouldn't be denying Your application will break Um",
    "start": "421599",
    "end": "428720"
  },
  {
    "text": "so we've added this uh audit policy mode where you can say \"Well let me set up my",
    "start": "428720",
    "end": "433919"
  },
  {
    "text": "audit my my my policy my security policy but instead of denying things instead",
    "start": "433919",
    "end": "440000"
  },
  {
    "text": "just let them through but tell me about it so that you can make sure that your authorization policies are configured",
    "start": "440000",
    "end": "445680"
  },
  {
    "text": "correctly Once you're satisfied with that then you can go ahead and switch to default deny and you'll have confidence",
    "start": "445680",
    "end": "451840"
  },
  {
    "text": "that you're not going to break your application in doing so.\" Um and since we were moving retries over",
    "start": "451840",
    "end": "458720"
  },
  {
    "text": "onto HTTP route and gRPC route anyway we kind of did a little bit of clean up and restructured the way that's configured",
    "start": "458720",
    "end": "464960"
  },
  {
    "text": "to make it more in line with with how the proxy is",
    "start": "464960",
    "end": "469599"
  },
  {
    "text": "architected Um in linkd 217 we added egress rate limiting and federated",
    "start": "470840",
    "end": "476560"
  },
  {
    "text": "services So this is a big release with three very large features Um so we and I'm so I'm going to spend",
    "start": "476560",
    "end": "483199"
  },
  {
    "text": "some more time in in later slides talking about each of these in more detail but each one of these is is is very",
    "start": "483199",
    "end": "489680"
  },
  {
    "text": "large Uh linkerd 218 is not released yet We're we're still putting the finishing",
    "start": "489960",
    "end": "495039"
  },
  {
    "text": "touches on this but it should be released very very soon We kind of had to put some of the the work here on hold",
    "start": "495039",
    "end": "500879"
  },
  {
    "text": "in order to come to KubeCon and talk here So as soon as as soon as I'm back home this is this is going to go out",
    "start": "500879",
    "end": "506240"
  },
  {
    "text": "very quickly Um but linkerty 218 added uh a more githops friendly to way to do",
    "start": "506240",
    "end": "511840"
  },
  {
    "text": "linkerty multicluster So there were some aspects of linkerty multicluster that were not uh compatible with githops and",
    "start": "511840",
    "end": "517919"
  },
  {
    "text": "we wanted to remedy that Um we did some more work on the way that linkd",
    "start": "517919",
    "end": "522959"
  },
  {
    "text": "interacts with the gateway API and I'll talk more about that uh in a moment and we added protocol declarations to linkd",
    "start": "522959",
    "end": "529680"
  },
  {
    "text": "so that you can annotate your traffic as a specific protocol in order to avoid protocol detection I'll talk more about",
    "start": "529680",
    "end": "535040"
  },
  {
    "text": "that too Um so this this release will be out very very",
    "start": "535040",
    "end": "540880"
  },
  {
    "text": "soon Okay So to dive a little bit deeper into egress metrics uh so we added this",
    "start": "541160",
    "end": "548320"
  },
  {
    "text": "new resource type to capture traffic which is leaving the mesh which is going from inside the your meshed workloads to",
    "start": "548320",
    "end": "554959"
  },
  {
    "text": "uh something outside And so we have this new CRD this new resource type called egress network And this uh allows you to",
    "start": "554959",
    "end": "561680"
  },
  {
    "text": "to describe that traffic And so uh with an egress network you can attach routes",
    "start": "561680",
    "end": "567680"
  },
  {
    "text": "to it and you can get metrics on all the traffic that's leaving your cluster right so this is uh a degree of",
    "start": "567680",
    "end": "573040"
  },
  {
    "text": "observability that you didn't have before and you can capture um for example like TLS host names in those",
    "start": "573040",
    "end": "579600"
  },
  {
    "text": "metrics you can see which host names which TLS names is my application talking to outside the mesh and you can",
    "start": "579600",
    "end": "585600"
  },
  {
    "text": "do an audit of that for example um it also allows you to control that",
    "start": "585600",
    "end": "591680"
  },
  {
    "text": "traffic that's leaving the mesh so you can disallow certain traffic Um so you can have this for example in this examp",
    "start": "591680",
    "end": "597360"
  },
  {
    "text": "or here we have traffic policy deny which means we're going to deny all of the traffic leaving the mesh but then we",
    "start": "597360",
    "end": "603120"
  },
  {
    "text": "can add exceptions to that So we added a TLS route here on the right hand side that allows traffic to httpbin.org if",
    "start": "603120",
    "end": "610000"
  },
  {
    "text": "it's TLS for example So it gives you that egress access control um and so for",
    "start": "610000",
    "end": "615279"
  },
  {
    "text": "traffic leaving the mesh you can decide what's allowed to go out and what's not",
    "start": "615279",
    "end": "620839"
  },
  {
    "text": "Um we added some uh serverside rate limiting So uh this is a new resource",
    "start": "622560",
    "end": "627920"
  },
  {
    "text": "type called the HTTP local rate limit policy These policies let you uh specify",
    "start": "627920",
    "end": "633279"
  },
  {
    "text": "rate limits either global rate limits or per client rate limits that let you uh protect your service from from undue",
    "start": "633279",
    "end": "640000"
  },
  {
    "text": "load by saying hey this is the maximum amount of requests per second that we want to let in And if more than that",
    "start": "640000",
    "end": "645519"
  },
  {
    "text": "come in then linkerd can kind of act as a barrier there and and reject those requests before they get to your",
    "start": "645519",
    "end": "650640"
  },
  {
    "text": "application and protect you from that that heavy",
    "start": "650640",
    "end": "655199"
  },
  {
    "text": "load Um we also added these things called federated services Uh I gave a talk about federated services doing a",
    "start": "656839",
    "end": "663600"
  },
  {
    "text": "deep dive on this on uh Tuesday at linker day So if you want more details about this well there's lots of docs",
    "start": "663600",
    "end": "669120"
  },
  {
    "text": "online but you can also go and find that recording um where I kind of dive really deep into this feature and exactly how",
    "start": "669120",
    "end": "674640"
  },
  {
    "text": "it works and why uh why why it was necessary what motivated it Uh but the",
    "start": "674640",
    "end": "680480"
  },
  {
    "text": "basic idea here is that if you've got a service that's deployed to multiple different clusters multiple different",
    "start": "680480",
    "end": "685839"
  },
  {
    "text": "Kubernetes clusters Um and that service has the same name and the same name space across all of those clusters you",
    "start": "685839",
    "end": "692000"
  },
  {
    "text": "can merge those together into what's called a federated service Uh and a federated service is then just going to",
    "start": "692000",
    "end": "698240"
  },
  {
    "text": "simply load balance over all of the endpoints of all of those services in all of those remote clusters So this is",
    "start": "698240",
    "end": "703920"
  },
  {
    "text": "a multicluster feature that lets you uh kind of interact with the service in a cluster agnostic way So you're saying I",
    "start": "703920",
    "end": "710640"
  },
  {
    "text": "want to talk to this service I don't care which cluster is running in in fact it's running in multiple clusters and I just want to access that service as a",
    "start": "710640",
    "end": "717360"
  },
  {
    "text": "whole And then if you know one of those clusters goes down or if one of those clusters is slow that load balancing",
    "start": "717360",
    "end": "723040"
  },
  {
    "text": "will kick in and that service will remain available even if clusters join clusters leave Um it's it's dynamic in",
    "start": "723040",
    "end": "729600"
  },
  {
    "text": "that way",
    "start": "729600",
    "end": "732759"
  },
  {
    "text": "uh and we added protocol declarations So this is actually really cool So one of the things that linkerd uh needs to know",
    "start": "734959",
    "end": "741519"
  },
  {
    "text": "when it's routing traffic is it needs to know what protocol the traffic is And so typically it does this with something",
    "start": "741519",
    "end": "746720"
  },
  {
    "text": "called protocol detection where it will just look at the uh bytes that are coming in on that connection and say hey",
    "start": "746720",
    "end": "752959"
  },
  {
    "text": "do these bytes look like HTTP because HTTP requests always start a certain way",
    "start": "752959",
    "end": "758000"
  },
  {
    "text": "Um and if they do then okay it's HTTP we'll treat it as such We'll do HTTP based routing We'll collect HTTP based",
    "start": "758000",
    "end": "763839"
  },
  {
    "text": "metrics We'll do all that layer 7 good stuff Um and if it's not then we'll treat it as TCP We'll say okay well this",
    "start": "763839",
    "end": "769600"
  },
  {
    "text": "is some other protocol It's not HTTP So we're going to instead just gather more basic L4 type of uh metrics So just",
    "start": "769600",
    "end": "777200"
  },
  {
    "text": "bytes and so on Um and this is really great It works very well",
    "start": "777200",
    "end": "782600"
  },
  {
    "text": "97% of the time Uh but there are a bunch of edge cases where this this doesn't And if you've ever been if you've ever",
    "start": "782600",
    "end": "788880"
  },
  {
    "text": "run into protocol detection timeouts and seen weirdness as a result of that you know what I'm talking about Um and so",
    "start": "788880",
    "end": "794880"
  },
  {
    "text": "one of the ways that people have worked around this issue is we have this feature called opaque ports And so",
    "start": "794880",
    "end": "800399"
  },
  {
    "text": "there's a configuration where you can say you know this port here uh just treat it as opaque Don't try and do",
    "start": "800399",
    "end": "806480"
  },
  {
    "text": "protocol detection on it Don't worry about what protocol it is Just just forward it through Just treat it as TCP Don't worry about it Don't don't do all",
    "start": "806480",
    "end": "813360"
  },
  {
    "text": "that stuff Um and that works really great But until now we didn't have any way to do the opposite of that We didn't",
    "start": "813360",
    "end": "819760"
  },
  {
    "text": "have a way to mark a port as hey this is HTTP Don't try and detect it Just believe me Um I'm telling you Uh and and",
    "start": "819760",
    "end": "828160"
  },
  {
    "text": "so please do all that layer 7 stuff for this connection It's HTTP Um don't do the detection Um so that's what we've",
    "start": "828160",
    "end": "835200"
  },
  {
    "text": "added here We've added protocol declarations These are uh they make use of the app protocol field in the service",
    "start": "835200",
    "end": "840720"
  },
  {
    "text": "resource So for any Kubernetes service there is a app protocol field and now you can specify in that field what the",
    "start": "840720",
    "end": "846880"
  },
  {
    "text": "protocol is and if you specify HTTP or opaque then we will not do protocol",
    "start": "846880",
    "end": "852079"
  },
  {
    "text": "detection We'll just use whatever's in that field Uh and so this is especially useful for uh workloads that run right",
    "start": "852079",
    "end": "859680"
  },
  {
    "text": "at the edge of your resource limits because uh when resources are very constrained is kind of one of the common",
    "start": "859680",
    "end": "866000"
  },
  {
    "text": "cases that protocol detection can fail",
    "start": "866000",
    "end": "870680"
  },
  {
    "text": "Uh we also added GitOps compatible multicluster linking So if you've used the linkd multicluster the way that it",
    "start": "873920",
    "end": "880560"
  },
  {
    "text": "works is that step one is you install the linkerd multicluster extension and then step two is you have to link",
    "start": "880560",
    "end": "886160"
  },
  {
    "text": "together all the clusters that you want to be able to talk to each other Um and this is very straightforward but it involves running this command linkerd",
    "start": "886160",
    "end": "892399"
  },
  {
    "text": "multicluster link And so you have to establish all these links if you have three different clusters that all talk",
    "start": "892399",
    "end": "897440"
  },
  {
    "text": "to each other that's you know one link in each direction between all the different clusters",
    "start": "897440",
    "end": "902480"
  },
  {
    "text": "um and you know if you're just doing this it works great it's fine but if you",
    "start": "902480",
    "end": "907760"
  },
  {
    "text": "want a git ops compatible setup then you want to somehow specify that declaratively you don't want to have to",
    "start": "907760",
    "end": "913199"
  },
  {
    "text": "run the install and then this separate uh linking",
    "start": "913199",
    "end": "918440"
  },
  {
    "text": "step and um it's kind of even worse than that because when you upgrade linkerd",
    "start": "918440",
    "end": "924079"
  },
  {
    "text": "you also have to upgrade the linkery multicluster extension and then you also have to upgrade each one of these links",
    "start": "924079",
    "end": "930040"
  },
  {
    "text": "individually So we've rearranged the way that this is structured so that those links are now part of the linker",
    "start": "930040",
    "end": "936000"
  },
  {
    "text": "multicluster chart itself Uh so you have to specify those links as values in the",
    "start": "936000",
    "end": "941519"
  },
  {
    "text": "linkery multicluster Helm chart Um but now that's all kind of uh part of that",
    "start": "941519",
    "end": "946639"
  },
  {
    "text": "chart and so when that chart gets upgraded all of the links get upgraded uh it's much more git ops friendly So",
    "start": "946639",
    "end": "952079"
  },
  {
    "text": "it's going to work with with whatever git ops workflow you have Um so we we",
    "start": "952079",
    "end": "958000"
  },
  {
    "text": "think about this as being declarative instead of instead of imperative So instead of doing the second step of",
    "start": "958000",
    "end": "963120"
  },
  {
    "text": "linking that's just all specified in the",
    "start": "963120",
    "end": "967279"
  },
  {
    "text": "values Um and we've done a lot of work on the gateway API to bring it up to a",
    "start": "969079",
    "end": "974959"
  },
  {
    "text": "modern version So previously we were um reading fairly old versions of the",
    "start": "974959",
    "end": "980240"
  },
  {
    "text": "gateway API resources Uh I think we were using like the v0.7 release of of",
    "start": "980240",
    "end": "985920"
  },
  {
    "text": "gateway API Um and whatever resource uh versions were in that We've upgraded to",
    "start": "985920",
    "end": "992240"
  },
  {
    "text": "now read the v1 versions of HTTP route and gRPC route Um so that's compatible",
    "start": "992240",
    "end": "998639"
  },
  {
    "text": "with a wider range of more modern versions of the gateway API So if you have anywhere between version one and",
    "start": "998639",
    "end": "1003839"
  },
  {
    "text": "version 121 of gateway API that's now going to be compatible with linkerty Um",
    "start": "1003839",
    "end": "1008880"
  },
  {
    "text": "and we're also compatible with both the standard and the experimental channels The experimental channels have TCP route",
    "start": "1008880",
    "end": "1015120"
  },
  {
    "text": "and TLS route uh in them So if you want to make use of those types you need to use the experimental channel Otherwise",
    "start": "1015120",
    "end": "1021920"
  },
  {
    "text": "you can use standard Um and we're also kind of shifting our philosophy on how",
    "start": "1021920",
    "end": "1027678"
  },
  {
    "text": "the gateway API is installed So previously uh whenever you install linkerty by default it would come with",
    "start": "1027679",
    "end": "1034240"
  },
  {
    "text": "the gateway API CRDs we would bring those along uh and install them for you Um and increasingly we've heard feedback",
    "start": "1034240",
    "end": "1041038"
  },
  {
    "text": "that that's not what people want because they either already have these CRDs installed on their cluster or they're",
    "start": "1041039",
    "end": "1046558"
  },
  {
    "text": "being provided by some other project by their by their ingress or by their gateway or by something else Um and so",
    "start": "1046559",
    "end": "1053360"
  },
  {
    "text": "we really are kind of moving to this world where the gateway APIs are a uh",
    "start": "1053360",
    "end": "1058400"
  },
  {
    "text": "prerequisite they're something that already exists on the cluster and and we can just interact with them and and we",
    "start": "1058400",
    "end": "1064320"
  },
  {
    "text": "don't have different projects kind of fighting over who should be installing these and and making sure they're there So we're kind of going through this",
    "start": "1064320",
    "end": "1071120"
  },
  {
    "text": "transition period right now where we want those to be provided already We're just going to kind of assume they exist",
    "start": "1071120",
    "end": "1077200"
  },
  {
    "text": "We'll do some checks to make sure and warn you if they're not Um but we want to treat those as a as an external",
    "start": "1077200",
    "end": "1082919"
  },
  {
    "text": "dependency Um and we can like kind of help you through that process and and and give some helpful error messages",
    "start": "1082919",
    "end": "1088880"
  },
  {
    "text": "that say \"Hey we detected the gateway API resources that we need are not available Here's how you install them",
    "start": "1088880",
    "end": "1093919"
  },
  {
    "text": "Here's where you get them from.\" Um and so by the next version of Linkerty which is Linkerty 219 we're no longer going to",
    "start": "1093919",
    "end": "1100080"
  },
  {
    "text": "be installing those by default So we want to kind of roll this out in a way that is safe and is not going to break anyone on upgrade Um but that's kind of",
    "start": "1100080",
    "end": "1107440"
  },
  {
    "text": "what we're moving towards",
    "start": "1107440",
    "end": "1111159"
  },
  {
    "text": "Um and then just kind of talking about the Linkerty project as a whole on a on",
    "start": "1112720",
    "end": "1118080"
  },
  {
    "text": "a somewhat more meta level Um what's really exciting is that Linkerty is now we say is a sustainable project So",
    "start": "1118080",
    "end": "1125360"
  },
  {
    "text": "Linkerty is developed primarily by one company which is Buoyant That is who signs my paychecks and funds all of my",
    "start": "1125360",
    "end": "1131600"
  },
  {
    "text": "work on Lingard Uh and Buoyant is now as of fairly recently a profitable company",
    "start": "1131600",
    "end": "1137039"
  },
  {
    "text": "Um and so I think that gives the project a lot more confidence in its",
    "start": "1137039",
    "end": "1142240"
  },
  {
    "text": "sustainability and its longevity uh because there's a sustainable company funding it Um and I think we've already",
    "start": "1142240",
    "end": "1149919"
  },
  {
    "text": "seen like dividends on that We've seen the pace of execution on liquidity really really increase as a result Buy",
    "start": "1149919",
    "end": "1155600"
  },
  {
    "text": "it has had more resources in order to hire maintainers and increase project output Um and so it's really great to",
    "start": "1155600",
    "end": "1161520"
  },
  {
    "text": "have uh a project that has dollars and cents behind it Um you know linkert has",
    "start": "1161520",
    "end": "1167280"
  },
  {
    "text": "been around for almost 10 years I think this was uh William Morgan our CEO added this line We're aiming for another 90 Um",
    "start": "1167280",
    "end": "1175120"
  },
  {
    "text": "so yeah I mean I think it's it's uh a project that we want people to have confidence is going to be around It's",
    "start": "1175120",
    "end": "1180880"
  },
  {
    "text": "not going to go away tomorrow when uh all of the funding goes away or all of the maintainers don't have a job anymore",
    "start": "1180880",
    "end": "1186720"
  },
  {
    "text": "You know that's not a situation we're in and I'm really grateful for that",
    "start": "1186720",
    "end": "1193159"
  },
  {
    "text": "Um Linkerd does weekly releases So if you've uh ever seen this kind of format",
    "start": "1193679",
    "end": "1201320"
  },
  {
    "text": "edge-25-.4.1 this is our uh release naming format for our weekly edges Uh",
    "start": "1201320",
    "end": "1206960"
  },
  {
    "text": "that means the 25th year the fourth month and the first release of that month This would be the first release in",
    "start": "1206960",
    "end": "1212559"
  },
  {
    "text": "April 2025 Um when we release these edges they're released off of Maine So all of",
    "start": "1212559",
    "end": "1219679"
  },
  {
    "text": "the latest bug fixes all of the latest features all of the latest security patches everything that's uh kind of on",
    "start": "1219679",
    "end": "1225280"
  },
  {
    "text": "main at that point in time is is released in those edges Uh and the idea is that every edge release is intended",
    "start": "1225280",
    "end": "1230720"
  },
  {
    "text": "to be production ready These are not kind of experimental releases or or or or beta or you know unstable Um",
    "start": "1230720",
    "end": "1238559"
  },
  {
    "text": "everything that gets merged to main is supposed to be of production level quality So this is all code that has been battle tested and and we're",
    "start": "1238559",
    "end": "1245520"
  },
  {
    "text": "confident in we stand behind Um we also kind of bundle up features into these",
    "start": "1245520",
    "end": "1251440"
  },
  {
    "text": "releases So we have these 2 uh whatever releases 2.18 for example that kind of represents a finished feature or not",
    "start": "1251440",
    "end": "1258799"
  },
  {
    "text": "finished but a cohesive uh feature and we kind of iterate on these as you saw in uh the examples Sometimes we'll",
    "start": "1258799",
    "end": "1266480"
  },
  {
    "text": "release a feature in one release and kind of iterate and improve it in the next Um but each of these is meant to be",
    "start": "1266480",
    "end": "1271520"
  },
  {
    "text": "somewhat self-contained and cohesive Um and that's also kind of the the time",
    "start": "1271520",
    "end": "1276880"
  },
  {
    "text": "when we take a pause on on future work in order to document what we have and make sure that you know it's usable and",
    "start": "1276880",
    "end": "1282799"
  },
  {
    "text": "that it uh is documented and and um and people know how to how to consume it Um",
    "start": "1282799",
    "end": "1289840"
  },
  {
    "text": "so every version has a corresponding edge release and also has a git tag So there's uh kind of a record through the",
    "start": "1289840",
    "end": "1295280"
  },
  {
    "text": "git history of of where all the releases are and and what edges they correspond",
    "start": "1295280",
    "end": "1301200"
  },
  {
    "text": "to Okay Okay So what's coming next for linking that's that's where we are now That's all the million things we did in",
    "start": "1302039",
    "end": "1308159"
  },
  {
    "text": "the last year Um and like there's there's so much on the horizon Uh and",
    "start": "1308159",
    "end": "1314640"
  },
  {
    "text": "there's so much work to do Um so uh one of the biggest things on our road map is",
    "start": "1314640",
    "end": "1320960"
  },
  {
    "text": "to to continue to flesh out Windows support So right now uh this has been in progress for a little while The link",
    "start": "1320960",
    "end": "1327200"
  },
  {
    "text": "proxy uh runs on Windows Uh that took some doing Um but of course the proxy is",
    "start": "1327200",
    "end": "1332320"
  },
  {
    "text": "not the entire service mesh There's more to the service mesh than just the proxy So there's still more work to do to make sure that we can say confidently linkerd",
    "start": "1332320",
    "end": "1339120"
  },
  {
    "text": "the service mesh will run in Windows environments Um so that's in progress Uh",
    "start": "1339120",
    "end": "1344559"
  },
  {
    "text": "we uh want linkerd to do more uh with the ingress use case So right now for",
    "start": "1344559",
    "end": "1350400"
  },
  {
    "text": "ingress what a lot of people do is they'll have some kind of ingress controller like engine x or something else Um and then they'll also have uh",
    "start": "1350400",
    "end": "1357120"
  },
  {
    "text": "that is a meshed workload So they'll also have a linkery proxy running alongside it and so incoming connections",
    "start": "1357120",
    "end": "1364080"
  },
  {
    "text": "into that ingress get you know have TLS terminated by engine X or whatever and",
    "start": "1364080",
    "end": "1369679"
  },
  {
    "text": "then uh for the east west traffic going out of there uh linkerty kind of takes over and does like workload based MTLS",
    "start": "1369679",
    "end": "1376559"
  },
  {
    "text": "from there on out and so the question is well why do you need two proxies there that one hands off to the other why can't linkerty do everything um so",
    "start": "1376559",
    "end": "1384799"
  },
  {
    "text": "moving more into that ingress use case is definitely something on our road map that we would like to explore Uh we want to do egress TLS",
    "start": "1384799",
    "end": "1393919"
  },
  {
    "text": "origination So whenever you have uh a workload that's talking to some kind of",
    "start": "1393919",
    "end": "1399039"
  },
  {
    "text": "external egress um TLS uh identity so say you're talking to you know get https",
    "start": "1399039",
    "end": "1406880"
  },
  {
    "text": "uh github.com or whatever Um that is TLS that's originated by your application",
    "start": "1406880",
    "end": "1412880"
  },
  {
    "text": "And so when the linker proxy intercepts that connection it's encrypted right and it should be because that's how DLS",
    "start": "1412880",
    "end": "1418400"
  },
  {
    "text": "works Um which means we can't read the specifics of those those bytes We don't know what's going on there We can't do",
    "start": "1418400",
    "end": "1425039"
  },
  {
    "text": "layer 7 um metrics collection layer 7 load balancing or or anything really",
    "start": "1425039",
    "end": "1430240"
  },
  {
    "text": "intelligent with that traffic Um so we kind of want the ability to say well if",
    "start": "1430240",
    "end": "1435919"
  },
  {
    "text": "you just send a plain unencrypted request to us we will originate the TLS",
    "start": "1435919",
    "end": "1441440"
  },
  {
    "text": "to to that external uh host And then we kind of because we can see those requests we can see that traffic we can",
    "start": "1441440",
    "end": "1447919"
  },
  {
    "text": "do all that layer 7 load balancing layer 7 metrics layer 7 um routing all of that",
    "start": "1447919",
    "end": "1453520"
  },
  {
    "text": "good stuff Um and then but it's still you know encrypted to to the",
    "start": "1453520",
    "end": "1459320"
  },
  {
    "text": "destination Um we have a feature called mesh expansion um which I didn't talk",
    "start": "1459320",
    "end": "1464480"
  },
  {
    "text": "about because it was uh not added this year uh which allows you to have workloads that run outside of Kubernetes",
    "start": "1464480",
    "end": "1470400"
  },
  {
    "text": "be part of the mesh Um that's a very exciting piece of work that we're continuing to improve and iterate on Um",
    "start": "1470400",
    "end": "1476320"
  },
  {
    "text": "we want to add support for private networks to that so that if you've got workloads that are running on private networks outside of Kubernetes those can",
    "start": "1476320",
    "end": "1482400"
  },
  {
    "text": "be part of the mesh too Um there's still more to do on link management I think you know in in 218",
    "start": "1482400",
    "end": "1489440"
  },
  {
    "text": "we're doing a lot to make that more GitOps friendly There's still more to do to make that even easier to work with",
    "start": "1489440",
    "end": "1495559"
  },
  {
    "text": "Um we want to do more with using Spiffy for identity inside the cluster So if",
    "start": "1495559",
    "end": "1501919"
  },
  {
    "text": "you're using mesh expansion uh Spiffy is the identity provider we use for those",
    "start": "1501919",
    "end": "1507120"
  },
  {
    "text": "workloads that are running outside of Kubernetes Uh but we also want to explore if we can use Spiffy for identity inside the cluster as well and",
    "start": "1507120",
    "end": "1513919"
  },
  {
    "text": "kind of bring bring those together Um and then to kind of uh add",
    "start": "1513919",
    "end": "1519520"
  },
  {
    "text": "more flexibility and configuration to the way federated services work So federated services are very powerful but",
    "start": "1519520",
    "end": "1525279"
  },
  {
    "text": "they're also a little bit rigid in uh the way that they operate Every service",
    "start": "1525279",
    "end": "1530400"
  },
  {
    "text": "that joins the federated service has to have the same name and namespace in order to be merged together They uh when",
    "start": "1530400",
    "end": "1537200"
  },
  {
    "text": "they do that the service that's created the federated service that's created as a result of that is called that service",
    "start": "1537200",
    "end": "1543240"
  },
  {
    "text": "name-federated Um and that's kind of hard-coded uh name So we want to add a little bit more flexibility there so you",
    "start": "1543240",
    "end": "1549360"
  },
  {
    "text": "can kind of control how that works and and make sure that it suits your use",
    "start": "1549360",
    "end": "1555600"
  },
  {
    "text": "case Um so that's kind of the the things that are immediately on our road map but",
    "start": "1556520",
    "end": "1561600"
  },
  {
    "text": "of course you know that road map is very dynamic It's always in flux and it's always uh adapted to what users are",
    "start": "1561600",
    "end": "1569039"
  },
  {
    "text": "telling us they want So this is you know definitely uh a two-way street where we're always interested in hearing what",
    "start": "1569039",
    "end": "1574240"
  },
  {
    "text": "people are doing with linking what they want to do with linking that they can't Uh and that definitely informs and",
    "start": "1574240",
    "end": "1580000"
  },
  {
    "text": "adjusts our road map as time goes on So if there's anything on this slide or anything at all that is of interest to",
    "start": "1580000",
    "end": "1585039"
  },
  {
    "text": "you that you really want to come talk about please come to the link booth come to the buoyant booth come tell us what",
    "start": "1585039",
    "end": "1591600"
  },
  {
    "text": "your use case is uh so we can have that information when we're planning our roadmap or you know open a ticket on on",
    "start": "1591600",
    "end": "1599120"
  },
  {
    "text": "GitHub come to the link slack uh just get in touch with us anyway you can and and be part of this project",
    "start": "1599120",
    "end": "1606880"
  },
  {
    "text": "um if you want more uh information about uh linkerd we have a service mesh",
    "start": "1606880",
    "end": "1613840"
  },
  {
    "text": "academy which is a self-paced online course you can get certified in linkard uh there's some really good educational",
    "start": "1613840",
    "end": "1620240"
  },
  {
    "text": "materials there it's a really nice course Um you'll definitely learn a lot no matter where you are in your service",
    "start": "1620240",
    "end": "1626320"
  },
  {
    "text": "match journey If you go to buoyant.iosma you can sign up",
    "start": "1626320",
    "end": "1632159"
  },
  {
    "text": "And uh I'm happy to take any questions you might have right now",
    "start": "1632159",
    "end": "1638278"
  },
  {
    "text": "Yeah there's a mic there If you can repeat Yeah",
    "start": "1642400",
    "end": "1647240"
  },
  {
    "text": "Okay I I heard you so I'll repeat your question The question is is there a performance advantage to using protocol",
    "start": "1653600",
    "end": "1660400"
  },
  {
    "text": "sorry it's all thanks",
    "start": "1660400",
    "end": "1665880"
  },
  {
    "text": "Yeah essentially you know can we shave like five milliseconds off of every request across the cluster if we enable",
    "start": "1666000",
    "end": "1671039"
  },
  {
    "text": "protocol declarations or is the the trade-off with the complexity not worthwhile uh yeah this is a great",
    "start": "1671039",
    "end": "1677760"
  },
  {
    "text": "question I think the answer is it it depends a little bit So in the in the good case in the ideal case uh no",
    "start": "1677760",
    "end": "1684559"
  },
  {
    "text": "because protocol um detection happens basically instantly as as we read those bites we immediately know that what the",
    "start": "1684559",
    "end": "1690960"
  },
  {
    "text": "protocol is So in the in the golden path uh there's no difference Where things start to matter is is where things are",
    "start": "1690960",
    "end": "1696720"
  },
  {
    "text": "not in that golden path And so where uh for whatever reason those bytes don't get written to the connection",
    "start": "1696720",
    "end": "1702320"
  },
  {
    "text": "immediately We're not able to detect that connection Um and so linky will actually have a 10-second timeout where",
    "start": "1702320",
    "end": "1707520"
  },
  {
    "text": "we wait for bytes so that we know what this protocol is And if we don't get anything in those 10 seconds we'll give",
    "start": "1707520",
    "end": "1712559"
  },
  {
    "text": "up and say \"Okay well it's just TCP I guess.\" Um and so when we're in those cases we actually incur a 10-second",
    "start": "1712559",
    "end": "1718880"
  },
  {
    "text": "delay on connection establishment Um and so that that delay is what we can avoid by just saying \"Hey don't try and do",
    "start": "1718880",
    "end": "1725600"
  },
  {
    "text": "detection on this Just believe me it's you know it's this protocol.\" Got it Okay Thanks Thanks",
    "start": "1725600",
    "end": "1734360"
  },
  {
    "text": "Thank you Great talk I have a question related to multicluster and federated services So in our case uh we would have",
    "start": "1738960",
    "end": "1746320"
  },
  {
    "text": "up to hundreds of devices and each device is a m is a cluster and how you",
    "start": "1746320",
    "end": "1751840"
  },
  {
    "text": "ensure that this functionality is backward compatible because if we",
    "start": "1751840",
    "end": "1757039"
  },
  {
    "text": "combine all of these clusters and have we cannot update them all at once Yeah So they have different versions of",
    "start": "1757039",
    "end": "1764039"
  },
  {
    "text": "linkadia and um that means this multicluster still has to work Yeah",
    "start": "1764039",
    "end": "1770640"
  },
  {
    "text": "that's that's a great question So and it's something that we always think about when we're adding features uh that",
    "start": "1770640",
    "end": "1776000"
  },
  {
    "text": "exist in one version and don't exist in in another is kind of what is the upgrade story between those and in",
    "start": "1776000",
    "end": "1781039"
  },
  {
    "text": "particular like what happens when some of those clusters have been upgraded and some have not Sorry",
    "start": "1781039",
    "end": "1787960"
  },
  {
    "text": "Um so so yes that's something that's that's always on our mind We know that uh people will be running in these um",
    "start": "1787960",
    "end": "1796159"
  },
  {
    "text": "transitory states where where part some clusters are up and some are not and they have to be able to continue to work together",
    "start": "1796159",
    "end": "1803880"
  },
  {
    "text": "Anyone",
    "start": "1806880",
    "end": "1809279"
  },
  {
    "text": "else all right Thank you very much",
    "start": "1812039",
    "end": "1817080"
  }
]