[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "hi there welcome to our talk",
    "start": "799",
    "end": "4080"
  },
  {
    "text": "kubernetes is experiencing an",
    "start": "4080",
    "end": "6799"
  },
  {
    "text": "exponential growth",
    "start": "6799",
    "end": "8639"
  },
  {
    "text": "but the benchmark tools to evaluate",
    "start": "8639",
    "end": "11440"
  },
  {
    "text": "kubernetes infrastructures",
    "start": "11440",
    "end": "13200"
  },
  {
    "text": "are still catching up do you wonder",
    "start": "13200",
    "end": "16240"
  },
  {
    "text": "how to evaluate and compare the",
    "start": "16240",
    "end": "18400"
  },
  {
    "text": "performance of two kubernetes platforms",
    "start": "18400",
    "end": "20800"
  },
  {
    "text": "for a target use case do you wish there",
    "start": "20800",
    "end": "24240"
  },
  {
    "text": "was",
    "start": "24240",
    "end": "24800"
  },
  {
    "text": "one tool that can you know point and",
    "start": "24800",
    "end": "26960"
  },
  {
    "text": "shoot at a kubernetes cluster",
    "start": "26960",
    "end": "28960"
  },
  {
    "text": "and get you all the key performance",
    "start": "28960",
    "end": "31599"
  },
  {
    "text": "metrics summarized in a nutshell",
    "start": "31599",
    "end": "34399"
  },
  {
    "text": "well then you are at the right place in",
    "start": "34399",
    "end": "37120"
  },
  {
    "text": "this talk we present",
    "start": "37120",
    "end": "38640"
  },
  {
    "text": "k bench which is a framework to",
    "start": "38640",
    "end": "41440"
  },
  {
    "text": "prescriptively benchmark a kubernetes",
    "start": "41440",
    "end": "43600"
  },
  {
    "text": "platform",
    "start": "43600",
    "end": "44719"
  },
  {
    "text": "i am karthik ganeshan and my cooper",
    "start": "44719",
    "end": "47039"
  },
  {
    "text": "center is yongli",
    "start": "47039",
    "end": "50160"
  },
  {
    "start": "50000",
    "end": "192000"
  },
  {
    "text": "so when it comes to performance",
    "start": "51520",
    "end": "54559"
  },
  {
    "text": "there are multiple aspects to look at",
    "start": "54559",
    "end": "58320"
  },
  {
    "text": "some aspects related to the control",
    "start": "58320",
    "end": "60640"
  },
  {
    "text": "plane include",
    "start": "60640",
    "end": "62559"
  },
  {
    "text": "responsiveness meaning how long does",
    "start": "62559",
    "end": "65840"
  },
  {
    "text": "a target platform take to respond to my",
    "start": "65840",
    "end": "68799"
  },
  {
    "text": "change request",
    "start": "68799",
    "end": "70640"
  },
  {
    "text": "next is scalability how well does the",
    "start": "70640",
    "end": "74080"
  },
  {
    "text": "control plane",
    "start": "74080",
    "end": "75119"
  },
  {
    "text": "of this particular platform scale",
    "start": "75119",
    "end": "78479"
  },
  {
    "text": "say i want to deploy thousand parts",
    "start": "78479",
    "end": "80640"
  },
  {
    "text": "concurrently can this",
    "start": "80640",
    "end": "82479"
  },
  {
    "text": "particular platform handle that and then",
    "start": "82479",
    "end": "85600"
  },
  {
    "text": "how resilient is this platform to",
    "start": "85600",
    "end": "88000"
  },
  {
    "text": "require from failures",
    "start": "88000",
    "end": "90400"
  },
  {
    "text": "on the other hand when it comes to the",
    "start": "90400",
    "end": "92560"
  },
  {
    "text": "data plane",
    "start": "92560",
    "end": "93520"
  },
  {
    "text": "or application performance there are",
    "start": "93520",
    "end": "95920"
  },
  {
    "text": "basic things like",
    "start": "95920",
    "end": "97439"
  },
  {
    "text": "the core infrastructure capabilities",
    "start": "97439",
    "end": "100079"
  },
  {
    "text": "like how powerful are the cpus",
    "start": "100079",
    "end": "102320"
  },
  {
    "text": "or you know what are the i o and the",
    "start": "102320",
    "end": "104799"
  },
  {
    "text": "network capabilities of the underlying",
    "start": "104799",
    "end": "106640"
  },
  {
    "text": "infrastructure",
    "start": "106640",
    "end": "107759"
  },
  {
    "text": "as these things can have a significant",
    "start": "107759",
    "end": "110479"
  },
  {
    "text": "impact on the application performance",
    "start": "110479",
    "end": "113920"
  },
  {
    "text": "say",
    "start": "113920",
    "end": "114240"
  },
  {
    "text": "one has a network intensive application",
    "start": "114240",
    "end": "116479"
  },
  {
    "text": "and want to know",
    "start": "116479",
    "end": "117600"
  },
  {
    "text": "how it is expected to perform on a",
    "start": "117600",
    "end": "120000"
  },
  {
    "text": "particular platform",
    "start": "120000",
    "end": "121360"
  },
  {
    "text": "or compare multiple platforms for this",
    "start": "121360",
    "end": "124560"
  },
  {
    "text": "particular case to",
    "start": "124560",
    "end": "125920"
  },
  {
    "text": "choose one",
    "start": "125920",
    "end": "129200"
  },
  {
    "text": "and then comes aspects like resource",
    "start": "129200",
    "end": "131520"
  },
  {
    "text": "efficiency",
    "start": "131520",
    "end": "132720"
  },
  {
    "text": "right hey can i pack more more pods",
    "start": "132720",
    "end": "136480"
  },
  {
    "text": "on one platform over another without",
    "start": "136480",
    "end": "139040"
  },
  {
    "text": "having a performance impact",
    "start": "139040",
    "end": "142000"
  },
  {
    "text": "and lastly performance isolation",
    "start": "142000",
    "end": "144480"
  },
  {
    "text": "characteristics are becoming",
    "start": "144480",
    "end": "146160"
  },
  {
    "text": "more and more important how will my",
    "start": "146160",
    "end": "148239"
  },
  {
    "text": "performance be affected",
    "start": "148239",
    "end": "149680"
  },
  {
    "text": "when there are noisy neighbors",
    "start": "149680",
    "end": "153360"
  },
  {
    "text": "there are a multitude of small tools to",
    "start": "153360",
    "end": "156400"
  },
  {
    "text": "evaluate some of these",
    "start": "156400",
    "end": "157680"
  },
  {
    "text": "aspects specifically some are reliable",
    "start": "157680",
    "end": "160879"
  },
  {
    "text": "some are not",
    "start": "160879",
    "end": "161840"
  },
  {
    "text": "some are accurate some only provide a",
    "start": "161840",
    "end": "164640"
  },
  {
    "text": "very coarse grained picture",
    "start": "164640",
    "end": "166959"
  },
  {
    "text": "and you can get quite tedious if one",
    "start": "166959",
    "end": "169040"
  },
  {
    "text": "wants to get the full performance",
    "start": "169040",
    "end": "170640"
  },
  {
    "text": "picture",
    "start": "170640",
    "end": "171360"
  },
  {
    "text": "you know for a particular platform",
    "start": "171360",
    "end": "174160"
  },
  {
    "text": "having gone through you know some of",
    "start": "174160",
    "end": "176000"
  },
  {
    "text": "these pain points",
    "start": "176000",
    "end": "177519"
  },
  {
    "text": "we rolled up our sleeves and started",
    "start": "177519",
    "end": "179840"
  },
  {
    "text": "putting a versatile",
    "start": "179840",
    "end": "181440"
  },
  {
    "text": "framework together so that we can get",
    "start": "181440",
    "end": "184640"
  },
  {
    "text": "all we can benchmark all these various",
    "start": "184640",
    "end": "186800"
  },
  {
    "text": "aspects you know with ease",
    "start": "186800",
    "end": "188720"
  },
  {
    "text": "that is how we got to k bench",
    "start": "188720",
    "end": "192560"
  },
  {
    "start": "192000",
    "end": "274000"
  },
  {
    "text": "so what is k bench cabbage is",
    "start": "193280",
    "end": "196800"
  },
  {
    "text": "a configurable framework to",
    "start": "196800",
    "end": "198720"
  },
  {
    "text": "prescriptively deploy",
    "start": "198720",
    "end": "200560"
  },
  {
    "text": "and manipulate kubernetes objects and in",
    "start": "200560",
    "end": "203680"
  },
  {
    "text": "this process",
    "start": "203680",
    "end": "204560"
  },
  {
    "text": "it lets us benchmark both the control",
    "start": "204560",
    "end": "207360"
  },
  {
    "text": "and the data plane performance aspects",
    "start": "207360",
    "end": "209519"
  },
  {
    "text": "with ease example on the control plane",
    "start": "209519",
    "end": "213360"
  },
  {
    "text": "side",
    "start": "213360",
    "end": "214080"
  },
  {
    "text": "you can ask k bench to deploy 1000",
    "start": "214080",
    "end": "216640"
  },
  {
    "text": "engine x pods",
    "start": "216640",
    "end": "217840"
  },
  {
    "text": "concurrently and observe part startup",
    "start": "217840",
    "end": "220480"
  },
  {
    "text": "latencies at millisecond ground library",
    "start": "220480",
    "end": "223760"
  },
  {
    "text": "say for data plane you can deploy a",
    "start": "223760",
    "end": "226640"
  },
  {
    "text": "persistent volume",
    "start": "226640",
    "end": "227920"
  },
  {
    "text": "and record asynchronous rewrite",
    "start": "227920",
    "end": "229680"
  },
  {
    "text": "bandwidth to it from",
    "start": "229680",
    "end": "230959"
  },
  {
    "text": "a pod kbench has",
    "start": "230959",
    "end": "234480"
  },
  {
    "text": "an extensible design and provides a",
    "start": "234480",
    "end": "237280"
  },
  {
    "text": "multitude of configuration options for",
    "start": "237280",
    "end": "239360"
  },
  {
    "text": "the end user",
    "start": "239360",
    "end": "241200"
  },
  {
    "text": "so using these options one can",
    "start": "241200",
    "end": "244080"
  },
  {
    "text": "orchestrate",
    "start": "244080",
    "end": "245040"
  },
  {
    "text": "pretty much any workflow with ease using",
    "start": "245040",
    "end": "248239"
  },
  {
    "text": "your target workloads each use case",
    "start": "248239",
    "end": "252319"
  },
  {
    "text": "in kbench is represented by a simple",
    "start": "252319",
    "end": "255920"
  },
  {
    "text": "and a prescriptive configuration file",
    "start": "255920",
    "end": "259280"
  },
  {
    "text": "at the end of your runs kbench provides",
    "start": "259280",
    "end": "261680"
  },
  {
    "text": "an intuitive set of performance metrics",
    "start": "261680",
    "end": "264400"
  },
  {
    "text": "and a lot of detailed diagnostic data",
    "start": "264400",
    "end": "267600"
  },
  {
    "text": "that can be very useful to you know go",
    "start": "267600",
    "end": "270320"
  },
  {
    "text": "ahead and resolve some of these",
    "start": "270320",
    "end": "271759"
  },
  {
    "text": "performance issues",
    "start": "271759",
    "end": "274639"
  },
  {
    "start": "274000",
    "end": "471000"
  },
  {
    "text": "so let's take a closer look at the",
    "start": "275759",
    "end": "279280"
  },
  {
    "text": "features",
    "start": "279280",
    "end": "279919"
  },
  {
    "text": "offered by kbench separately for the",
    "start": "279919",
    "end": "282320"
  },
  {
    "text": "control and the data plane aspects again",
    "start": "282320",
    "end": "284880"
  },
  {
    "text": "for the control pin k bench provides",
    "start": "284880",
    "end": "287840"
  },
  {
    "text": "accurate",
    "start": "287840",
    "end": "288720"
  },
  {
    "text": "and fine-grained critical path latencies",
    "start": "288720",
    "end": "290960"
  },
  {
    "text": "for your workloads",
    "start": "290960",
    "end": "292720"
  },
  {
    "text": "you know when you think about some of",
    "start": "292720",
    "end": "294800"
  },
  {
    "text": "these latencies you can think of like",
    "start": "294800",
    "end": "296320"
  },
  {
    "text": "you know hey what is the part scheduling",
    "start": "296320",
    "end": "297919"
  },
  {
    "text": "latency body initialization latency",
    "start": "297919",
    "end": "300800"
  },
  {
    "text": "you know startup latencies etc",
    "start": "300800",
    "end": "304638"
  },
  {
    "text": "but if you think about it right",
    "start": "304720",
    "end": "307919"
  },
  {
    "text": "kubernetes is a declarative system where",
    "start": "307919",
    "end": "310960"
  },
  {
    "text": "you specify the target state of the",
    "start": "310960",
    "end": "313680"
  },
  {
    "text": "cluster",
    "start": "313680",
    "end": "314639"
  },
  {
    "text": "and the cluster eventually gets to this",
    "start": "314639",
    "end": "316800"
  },
  {
    "text": "target state",
    "start": "316800",
    "end": "317840"
  },
  {
    "text": "via a bunch of asynchronous events that",
    "start": "317840",
    "end": "320320"
  },
  {
    "text": "happen in the system",
    "start": "320320",
    "end": "322080"
  },
  {
    "text": "so what is the latency for my trigger",
    "start": "322080",
    "end": "324800"
  },
  {
    "text": "change",
    "start": "324800",
    "end": "326400"
  },
  {
    "text": "well it is certainly not how long coupe",
    "start": "326400",
    "end": "328240"
  },
  {
    "text": "cuddle took to you know say submit a",
    "start": "328240",
    "end": "330400"
  },
  {
    "text": "request",
    "start": "330400",
    "end": "331039"
  },
  {
    "text": "right it is actually how long the",
    "start": "331039",
    "end": "333520"
  },
  {
    "text": "cluster",
    "start": "333520",
    "end": "334080"
  },
  {
    "text": "took to get to this final state that i",
    "start": "334080",
    "end": "336840"
  },
  {
    "text": "desired",
    "start": "336840",
    "end": "338240"
  },
  {
    "text": "so when it comes to measuring these",
    "start": "338240",
    "end": "339919"
  },
  {
    "text": "latencies of triggered changes we need",
    "start": "339919",
    "end": "342160"
  },
  {
    "text": "to keep track of the various events in",
    "start": "342160",
    "end": "343919"
  },
  {
    "text": "the system",
    "start": "343919",
    "end": "344880"
  },
  {
    "text": "until the cluster reaches the target",
    "start": "344880",
    "end": "347360"
  },
  {
    "text": "state",
    "start": "347360",
    "end": "349120"
  },
  {
    "text": "in k-bench we use a novel methodology to",
    "start": "349120",
    "end": "351680"
  },
  {
    "text": "keep track of both the client and the",
    "start": "351680",
    "end": "353919"
  },
  {
    "text": "server side timestamps of all these",
    "start": "353919",
    "end": "355840"
  },
  {
    "text": "different events",
    "start": "355840",
    "end": "356960"
  },
  {
    "text": "to tackle this problem and provide",
    "start": "356960",
    "end": "359360"
  },
  {
    "text": "meaningful control path latencies for",
    "start": "359360",
    "end": "361120"
  },
  {
    "text": "you",
    "start": "361120",
    "end": "363280"
  },
  {
    "text": "for the data plane one can evaluate",
    "start": "364960",
    "end": "367759"
  },
  {
    "text": "application performance",
    "start": "367759",
    "end": "368960"
  },
  {
    "text": "using real containerized benchmarks in",
    "start": "368960",
    "end": "371520"
  },
  {
    "text": "kubernetes parts",
    "start": "371520",
    "end": "374160"
  },
  {
    "text": "while one can use their own workloads",
    "start": "374160",
    "end": "376479"
  },
  {
    "text": "they can also leverage",
    "start": "376479",
    "end": "378240"
  },
  {
    "text": "built-in workloads provided by kbench to",
    "start": "378240",
    "end": "381440"
  },
  {
    "text": "stress",
    "start": "381440",
    "end": "382080"
  },
  {
    "text": "specific infrastructure resources",
    "start": "382080",
    "end": "385680"
  },
  {
    "text": "for instance you can use redis memphia",
    "start": "385680",
    "end": "389039"
  },
  {
    "text": "that comes pre-built in k-bench to",
    "start": "389039",
    "end": "390800"
  },
  {
    "text": "stress the compute and the memory",
    "start": "390800",
    "end": "392720"
  },
  {
    "text": "aspects",
    "start": "392720",
    "end": "393600"
  },
  {
    "text": "or say the fio benchmark to you know",
    "start": "393600",
    "end": "397120"
  },
  {
    "text": "stress the i o aspects etc",
    "start": "397120",
    "end": "400560"
  },
  {
    "text": "so using these artifacts one can you",
    "start": "400560",
    "end": "403360"
  },
  {
    "text": "know scale up",
    "start": "403360",
    "end": "404479"
  },
  {
    "text": "or scale out resource usage to study",
    "start": "404479",
    "end": "407120"
  },
  {
    "text": "infrastructure performance",
    "start": "407120",
    "end": "409199"
  },
  {
    "text": "scale up meaning you know use a single",
    "start": "409199",
    "end": "411680"
  },
  {
    "text": "part",
    "start": "411680",
    "end": "412400"
  },
  {
    "text": "to increasingly stress a particular",
    "start": "412400",
    "end": "414400"
  },
  {
    "text": "resource category",
    "start": "414400",
    "end": "415840"
  },
  {
    "text": "or scale out meaning you know add more",
    "start": "415840",
    "end": "418479"
  },
  {
    "text": "parts to the system",
    "start": "418479",
    "end": "419919"
  },
  {
    "text": "to consume resources you know in a",
    "start": "419919",
    "end": "421919"
  },
  {
    "text": "particular category",
    "start": "421919",
    "end": "424240"
  },
  {
    "text": "k-bench also includes built-in",
    "start": "424240",
    "end": "427120"
  },
  {
    "text": "blueprints",
    "start": "427120",
    "end": "428240"
  },
  {
    "text": "of workloads that take advantage of",
    "start": "428240",
    "end": "430560"
  },
  {
    "text": "these benchmarks",
    "start": "430560",
    "end": "431759"
  },
  {
    "text": "to evaluate you know different",
    "start": "431759",
    "end": "434800"
  },
  {
    "text": "aspects of data plane performance",
    "start": "434800",
    "end": "437919"
  },
  {
    "text": "these aspects can include things like",
    "start": "437919",
    "end": "439759"
  },
  {
    "text": "hey uh can i",
    "start": "439759",
    "end": "441199"
  },
  {
    "text": "you know can i get a uh and for some",
    "start": "441199",
    "end": "443360"
  },
  {
    "text": "information on what is the part density",
    "start": "443360",
    "end": "445680"
  },
  {
    "text": "that this particular um you know",
    "start": "445680",
    "end": "447759"
  },
  {
    "text": "framework and i mean this particular",
    "start": "447759",
    "end": "449360"
  },
  {
    "text": "platform can",
    "start": "449360",
    "end": "450000"
  },
  {
    "text": "achieve etc",
    "start": "450000",
    "end": "453120"
  },
  {
    "text": "so now that i know having given a",
    "start": "453120",
    "end": "455520"
  },
  {
    "text": "overview of k bench",
    "start": "455520",
    "end": "457440"
  },
  {
    "text": "yong will discuss the different elements",
    "start": "457440",
    "end": "459840"
  },
  {
    "text": "of k bench to construct a workload",
    "start": "459840",
    "end": "462479"
  },
  {
    "text": "to evaluate the different control plane",
    "start": "462479",
    "end": "464639"
  },
  {
    "text": "aspects",
    "start": "464639",
    "end": "466080"
  },
  {
    "text": "to you young",
    "start": "466080",
    "end": "468720"
  },
  {
    "start": "471000",
    "end": "630000"
  },
  {
    "text": "i'm happy to be here presenting k bench",
    "start": "472160",
    "end": "474240"
  },
  {
    "text": "control plane",
    "start": "474240",
    "end": "476319"
  },
  {
    "text": "first let's start with some basic",
    "start": "476319",
    "end": "477919"
  },
  {
    "text": "terminology",
    "start": "477919",
    "end": "480479"
  },
  {
    "text": "when we're talking about cable",
    "start": "480479",
    "end": "481440"
  },
  {
    "text": "interactions we're referring to the",
    "start": "481440",
    "end": "483759"
  },
  {
    "text": "kubernetes",
    "start": "483759",
    "end": "484479"
  },
  {
    "text": "object lifecycle and devops operations",
    "start": "484479",
    "end": "487280"
  },
  {
    "text": "such as create",
    "start": "487280",
    "end": "488960"
  },
  {
    "text": "delete list scale",
    "start": "488960",
    "end": "493280"
  },
  {
    "text": "actions can be specific to resource",
    "start": "493280",
    "end": "495680"
  },
  {
    "text": "types",
    "start": "495680",
    "end": "496400"
  },
  {
    "text": "for example you can create any type of",
    "start": "496400",
    "end": "498240"
  },
  {
    "text": "resource but you can only scale certain",
    "start": "498240",
    "end": "500879"
  },
  {
    "text": "type of object like",
    "start": "500879",
    "end": "502560"
  },
  {
    "text": "deep line actions run with action and",
    "start": "502560",
    "end": "506960"
  },
  {
    "text": "resource",
    "start": "506960",
    "end": "507599"
  },
  {
    "text": "type specific options for example if you",
    "start": "507599",
    "end": "510879"
  },
  {
    "text": "are creating a service",
    "start": "510879",
    "end": "512399"
  },
  {
    "text": "you can specify service type and ports",
    "start": "512399",
    "end": "515518"
  },
  {
    "text": "as",
    "start": "515519",
    "end": "515839"
  },
  {
    "text": "options on the other hand if you are",
    "start": "515839",
    "end": "518560"
  },
  {
    "text": "skating",
    "start": "518560",
    "end": "519440"
  },
  {
    "text": "a deployment you can specify a number of",
    "start": "519440",
    "end": "522159"
  },
  {
    "text": "replica as an option",
    "start": "522159",
    "end": "525360"
  },
  {
    "text": "multiple actions run one after another",
    "start": "525440",
    "end": "527600"
  },
  {
    "text": "for the same resource object",
    "start": "527600",
    "end": "529680"
  },
  {
    "text": "from an action chain action chain is",
    "start": "529680",
    "end": "532880"
  },
  {
    "text": "useful when you want to define a list of",
    "start": "532880",
    "end": "535279"
  },
  {
    "text": "actions",
    "start": "535279",
    "end": "536240"
  },
  {
    "text": "that depend on each other for example",
    "start": "536240",
    "end": "538959"
  },
  {
    "text": "you want to create a list of pod",
    "start": "538959",
    "end": "541040"
  },
  {
    "text": "before updating and deleting them",
    "start": "541040",
    "end": "544959"
  },
  {
    "text": "based on actions we define operation",
    "start": "546640",
    "end": "550480"
  },
  {
    "text": "an operation in k bench contain a",
    "start": "550480",
    "end": "552800"
  },
  {
    "text": "collection of",
    "start": "552800",
    "end": "553839"
  },
  {
    "text": "action chains and each action chain",
    "start": "553839",
    "end": "557360"
  },
  {
    "text": "is executed for one particular resource",
    "start": "557360",
    "end": "560839"
  },
  {
    "text": "type",
    "start": "560839",
    "end": "562480"
  },
  {
    "text": "action chains for different resource",
    "start": "562480",
    "end": "564080"
  },
  {
    "text": "types in one operation will run in",
    "start": "564080",
    "end": "566720"
  },
  {
    "text": "parallel",
    "start": "566720",
    "end": "569199"
  },
  {
    "text": "we also define predicates in k bench",
    "start": "570160",
    "end": "572399"
  },
  {
    "text": "which are conditions under which",
    "start": "572399",
    "end": "574640"
  },
  {
    "text": "a particular operation will be triggered",
    "start": "574640",
    "end": "577200"
  },
  {
    "text": "there are many different type of",
    "start": "577200",
    "end": "578560"
  },
  {
    "text": "predicates for example you can define a",
    "start": "578560",
    "end": "581920"
  },
  {
    "text": "particle",
    "start": "581920",
    "end": "582480"
  },
  {
    "text": "that check status of your running object",
    "start": "582480",
    "end": "586399"
  },
  {
    "text": "you can also define a predicate that",
    "start": "586399",
    "end": "588640"
  },
  {
    "text": "wrong command and check the return",
    "start": "588640",
    "end": "590240"
  },
  {
    "text": "status of the command",
    "start": "590240",
    "end": "591519"
  },
  {
    "text": "and the only wrong operation under",
    "start": "591519",
    "end": "593680"
  },
  {
    "text": "certain scenario",
    "start": "593680",
    "end": "594959"
  },
  {
    "text": "you can even define predicates that are",
    "start": "594959",
    "end": "597440"
  },
  {
    "text": "examine a runtime",
    "start": "597440",
    "end": "598560"
  },
  {
    "text": "environment inside a container",
    "start": "598560",
    "end": "604160"
  },
  {
    "text": "people define a set of metadata",
    "start": "604160",
    "end": "608320"
  },
  {
    "text": "before running your workload and attach",
    "start": "608320",
    "end": "611200"
  },
  {
    "text": "operation thread id",
    "start": "611200",
    "end": "612880"
  },
  {
    "text": "that manipulate a certain set of object",
    "start": "612880",
    "end": "616240"
  },
  {
    "text": "and later you can refer those metadata",
    "start": "616240",
    "end": "618640"
  },
  {
    "text": "labels for filtering and selection",
    "start": "618640",
    "end": "620640"
  },
  {
    "text": "purpose",
    "start": "620640",
    "end": "622240"
  },
  {
    "text": "of course you can pass your customized",
    "start": "622240",
    "end": "624399"
  },
  {
    "text": "defined user labels",
    "start": "624399",
    "end": "626160"
  },
  {
    "text": "and use your use for selection purpose",
    "start": "626160",
    "end": "630839"
  },
  {
    "start": "630000",
    "end": "807000"
  },
  {
    "text": "later",
    "start": "630839",
    "end": "632160"
  },
  {
    "text": "now let's look at the overall",
    "start": "632160",
    "end": "635200"
  },
  {
    "text": "design framework here is a running",
    "start": "635200",
    "end": "638800"
  },
  {
    "text": "kubernetes cluster",
    "start": "638800",
    "end": "640399"
  },
  {
    "text": "with a bunch of objects",
    "start": "640399",
    "end": "643600"
  },
  {
    "text": "capable to accept a k-bench config file",
    "start": "643760",
    "end": "647120"
  },
  {
    "text": "along with standard kubernetes yummy",
    "start": "647120",
    "end": "649120"
  },
  {
    "text": "files",
    "start": "649120",
    "end": "650640"
  },
  {
    "text": "the kubernetes config password and",
    "start": "650640",
    "end": "652720"
  },
  {
    "text": "dispatcher logic",
    "start": "652720",
    "end": "653839"
  },
  {
    "text": "is responsible for parsing those config",
    "start": "653839",
    "end": "656720"
  },
  {
    "text": "files",
    "start": "656720",
    "end": "657920"
  },
  {
    "text": "it depends on what type of resources you",
    "start": "657920",
    "end": "660320"
  },
  {
    "text": "configure to measure and",
    "start": "660320",
    "end": "661680"
  },
  {
    "text": "benchmark it generates a list of",
    "start": "661680",
    "end": "664240"
  },
  {
    "text": "resource managers",
    "start": "664240",
    "end": "666160"
  },
  {
    "text": "each resource manager is responsible for",
    "start": "666160",
    "end": "668959"
  },
  {
    "text": "managing the life cycle",
    "start": "668959",
    "end": "670720"
  },
  {
    "text": "and events and resource",
    "start": "670720",
    "end": "673760"
  },
  {
    "text": "metric collection for a particular",
    "start": "673760",
    "end": "676000"
  },
  {
    "text": "resource type",
    "start": "676000",
    "end": "677200"
  },
  {
    "text": "for example a pod will be responsible",
    "start": "677200",
    "end": "679760"
  },
  {
    "text": "for managing pod resources",
    "start": "679760",
    "end": "683600"
  },
  {
    "text": "and you can specify for each resource",
    "start": "684240",
    "end": "686560"
  },
  {
    "text": "type",
    "start": "686560",
    "end": "687279"
  },
  {
    "text": "what actions and operations you want to",
    "start": "687279",
    "end": "689600"
  },
  {
    "text": "run",
    "start": "689600",
    "end": "690800"
  },
  {
    "text": "here for example for pod you define a",
    "start": "690800",
    "end": "693680"
  },
  {
    "text": "list of",
    "start": "693680",
    "end": "694399"
  },
  {
    "text": "i actions to create a part first and",
    "start": "694399",
    "end": "697200"
  },
  {
    "text": "then",
    "start": "697200",
    "end": "697600"
  },
  {
    "text": "update and run command inside a pod",
    "start": "697600",
    "end": "701279"
  },
  {
    "text": "and for other type of resources you can",
    "start": "701279",
    "end": "703360"
  },
  {
    "text": "define totally different action list",
    "start": "703360",
    "end": "705760"
  },
  {
    "text": "you can put all them together in one",
    "start": "705760",
    "end": "708160"
  },
  {
    "text": "operation",
    "start": "708160",
    "end": "709600"
  },
  {
    "text": "and those actions for different resource",
    "start": "709600",
    "end": "712240"
  },
  {
    "text": "type will",
    "start": "712240",
    "end": "713279"
  },
  {
    "text": "run in parallel but action chain for one",
    "start": "713279",
    "end": "716079"
  },
  {
    "text": "particular resource type",
    "start": "716079",
    "end": "717279"
  },
  {
    "text": "will run sequentially",
    "start": "717279",
    "end": "720880"
  },
  {
    "text": "and you can specify concurrency and",
    "start": "720959",
    "end": "723440"
  },
  {
    "text": "resource manager",
    "start": "723440",
    "end": "725040"
  },
  {
    "text": "will track your concurrency",
    "start": "725040",
    "end": "726639"
  },
  {
    "text": "configuration and maintain",
    "start": "726639",
    "end": "728320"
  },
  {
    "text": "a thread pool of appropriate size for",
    "start": "728320",
    "end": "730720"
  },
  {
    "text": "that resource type",
    "start": "730720",
    "end": "733680"
  },
  {
    "text": "so you can use the key labels keybench",
    "start": "735519",
    "end": "738079"
  },
  {
    "text": "pre-attached labels and",
    "start": "738079",
    "end": "739600"
  },
  {
    "text": "your customized defined labels",
    "start": "739600",
    "end": "742639"
  },
  {
    "text": "for resource selection purpose",
    "start": "742639",
    "end": "746480"
  },
  {
    "text": "you can define predicates to guard your",
    "start": "746480",
    "end": "749120"
  },
  {
    "text": "operations",
    "start": "749120",
    "end": "751360"
  },
  {
    "text": "so all of those come together to form a",
    "start": "751360",
    "end": "753519"
  },
  {
    "text": "very flexible",
    "start": "753519",
    "end": "754480"
  },
  {
    "text": "execution plan where you can define your",
    "start": "754480",
    "end": "758079"
  },
  {
    "text": "workflow",
    "start": "758079",
    "end": "759440"
  },
  {
    "text": "to be executed uh on certain type of",
    "start": "759440",
    "end": "762160"
  },
  {
    "text": "resource",
    "start": "762160",
    "end": "762800"
  },
  {
    "text": "at a certain concurrency under a given",
    "start": "762800",
    "end": "766160"
  },
  {
    "text": "condition",
    "start": "766160",
    "end": "767839"
  },
  {
    "text": "against a pre-selected uh resources",
    "start": "767839",
    "end": "773839"
  },
  {
    "text": "in addition k bench exposed container",
    "start": "774720",
    "end": "777519"
  },
  {
    "text": "interface",
    "start": "777519",
    "end": "778160"
  },
  {
    "text": "to all side users so users can run",
    "start": "778160",
    "end": "780720"
  },
  {
    "text": "command",
    "start": "780720",
    "end": "781600"
  },
  {
    "text": "micro benchmark inside the container and",
    "start": "781600",
    "end": "783839"
  },
  {
    "text": "mail performance accordingly",
    "start": "783839",
    "end": "787839"
  },
  {
    "text": "we also integrate promises and real",
    "start": "788320",
    "end": "791360"
  },
  {
    "text": "front",
    "start": "791360",
    "end": "792160"
  },
  {
    "text": "for resource monitoring and triage",
    "start": "792160",
    "end": "794240"
  },
  {
    "text": "purpose",
    "start": "794240",
    "end": "796639"
  },
  {
    "text": "the framework is based on client goal",
    "start": "796639",
    "end": "798959"
  },
  {
    "text": "and can run on different platforms such",
    "start": "798959",
    "end": "801440"
  },
  {
    "text": "as vsphere",
    "start": "801440",
    "end": "802399"
  },
  {
    "text": "openshift and gke kubernetes offerings",
    "start": "802399",
    "end": "807360"
  },
  {
    "text": "let's look at a list of example",
    "start": "808880",
    "end": "810880"
  },
  {
    "text": "resources actions and configuration",
    "start": "810880",
    "end": "813120"
  },
  {
    "text": "options",
    "start": "813120",
    "end": "815440"
  },
  {
    "text": "for pod you can create list get run copy",
    "start": "815440",
    "end": "819519"
  },
  {
    "text": "update and delete perform those actions",
    "start": "819519",
    "end": "823040"
  },
  {
    "text": "and for different actions as we",
    "start": "823040",
    "end": "824720"
  },
  {
    "text": "mentioned you can configure",
    "start": "824720",
    "end": "826720"
  },
  {
    "text": "to run with different options for",
    "start": "826720",
    "end": "829360"
  },
  {
    "text": "example",
    "start": "829360",
    "end": "830480"
  },
  {
    "text": "all the options actions you can specify",
    "start": "830480",
    "end": "832959"
  },
  {
    "text": "concurrency",
    "start": "832959",
    "end": "834240"
  },
  {
    "text": "and the sleep time which is the time in",
    "start": "834240",
    "end": "836240"
  },
  {
    "text": "seconds",
    "start": "836240",
    "end": "837760"
  },
  {
    "text": "you want to sleep after each action",
    "start": "837760",
    "end": "841120"
  },
  {
    "text": "for create you can specify image point",
    "start": "841120",
    "end": "843680"
  },
  {
    "text": "policy",
    "start": "843680",
    "end": "844399"
  },
  {
    "text": "image to use and yummy spec",
    "start": "844399",
    "end": "848000"
  },
  {
    "text": "and run for run action you can specify",
    "start": "848000",
    "end": "850399"
  },
  {
    "text": "the command to run",
    "start": "850399",
    "end": "851519"
  },
  {
    "text": "and for copy you can specify the passes",
    "start": "851519",
    "end": "854000"
  },
  {
    "text": "local paths on container paths etc",
    "start": "854000",
    "end": "856639"
  },
  {
    "text": "and for other actions you can specify",
    "start": "856639",
    "end": "859040"
  },
  {
    "text": "you know labels",
    "start": "859040",
    "end": "860240"
  },
  {
    "text": "label key and label values etc",
    "start": "860240",
    "end": "864160"
  },
  {
    "text": "for deployment in addition to the all",
    "start": "864480",
    "end": "867279"
  },
  {
    "text": "the above actions",
    "start": "867279",
    "end": "868639"
  },
  {
    "text": "it also supports skill action",
    "start": "868639",
    "end": "871760"
  },
  {
    "text": "skill uh and a cr is create action has",
    "start": "871760",
    "end": "874639"
  },
  {
    "text": "some additional options like a number of",
    "start": "874639",
    "end": "876560"
  },
  {
    "text": "replicas",
    "start": "876560",
    "end": "879199"
  },
  {
    "text": "for replication controller and state set",
    "start": "879760",
    "end": "883920"
  },
  {
    "text": "will provide a similar set of actions",
    "start": "883920",
    "end": "886240"
  },
  {
    "text": "and configuration options",
    "start": "886240",
    "end": "889440"
  },
  {
    "text": "cabinet also support some other type of",
    "start": "889440",
    "end": "891760"
  },
  {
    "text": "resources like name spaces service",
    "start": "891760",
    "end": "894000"
  },
  {
    "text": "config map etc",
    "start": "894000",
    "end": "899040"
  },
  {
    "text": "here's a use case example layout as a",
    "start": "899040",
    "end": "901760"
  },
  {
    "text": "configuration",
    "start": "901760",
    "end": "902560"
  },
  {
    "text": "file you want to define your",
    "start": "902560",
    "end": "906240"
  },
  {
    "text": "workflow to run no more than six seconds",
    "start": "906240",
    "end": "908720"
  },
  {
    "text": "that's a timeout",
    "start": "908720",
    "end": "909760"
  },
  {
    "text": "on the top and here",
    "start": "909760",
    "end": "912800"
  },
  {
    "text": "you define a list of operations and your",
    "start": "912800",
    "end": "916000"
  },
  {
    "text": "first",
    "start": "916000",
    "end": "916399"
  },
  {
    "text": "operation will be guarded by a predicate",
    "start": "916399",
    "end": "919519"
  },
  {
    "text": "that checks the running status of pods",
    "start": "919519",
    "end": "922240"
  },
  {
    "text": "initializer",
    "start": "922240",
    "end": "924959"
  },
  {
    "text": "and after that you define the body of",
    "start": "925839",
    "end": "928639"
  },
  {
    "text": "your",
    "start": "928639",
    "end": "929199"
  },
  {
    "text": "first operation you want to",
    "start": "929199",
    "end": "932240"
  },
  {
    "text": "here you want to create deployment using",
    "start": "932240",
    "end": "934560"
  },
  {
    "text": "this given yummy file at a concurrency",
    "start": "934560",
    "end": "936880"
  },
  {
    "text": "four",
    "start": "936880",
    "end": "938079"
  },
  {
    "text": "and in parallel with that you want to",
    "start": "938079",
    "end": "940880"
  },
  {
    "text": "create",
    "start": "940880",
    "end": "941680"
  },
  {
    "text": "parts and run a search script",
    "start": "941680",
    "end": "945440"
  },
  {
    "text": "and attach these labels at a concurrency",
    "start": "945440",
    "end": "948000"
  },
  {
    "text": "of two",
    "start": "948000",
    "end": "950399"
  },
  {
    "text": "and after your first operation you can",
    "start": "950880",
    "end": "952880"
  },
  {
    "text": "define",
    "start": "952880",
    "end": "954079"
  },
  {
    "text": "more operations which will run after one",
    "start": "954079",
    "end": "957040"
  },
  {
    "text": "after another",
    "start": "957040",
    "end": "959759"
  },
  {
    "start": "960000",
    "end": "1074000"
  },
  {
    "text": "cabbage produce c compliant api matrix",
    "start": "961120",
    "end": "963920"
  },
  {
    "text": "it reports a 50",
    "start": "963920",
    "end": "965680"
  },
  {
    "text": "90 99 api latency uh",
    "start": "965680",
    "end": "969199"
  },
  {
    "text": "latencies and uh api responsible time",
    "start": "969199",
    "end": "973920"
  },
  {
    "text": "for certain operations also breakdown",
    "start": "974399",
    "end": "976800"
  },
  {
    "text": "report fine grain",
    "start": "976800",
    "end": "978000"
  },
  {
    "text": "critical pass components for example for",
    "start": "978000",
    "end": "981440"
  },
  {
    "text": "paul creation",
    "start": "981440",
    "end": "982800"
  },
  {
    "text": "it will report scheduling initialization",
    "start": "982800",
    "end": "985759"
  },
  {
    "text": "image point",
    "start": "985759",
    "end": "986800"
  },
  {
    "text": "and startup or latency on the node",
    "start": "986800",
    "end": "991120"
  },
  {
    "text": "it has improved accuracy compared to",
    "start": "991839",
    "end": "994320"
  },
  {
    "text": "some existing benchmark",
    "start": "994320",
    "end": "997519"
  },
  {
    "text": "current currently uh kubernetes server",
    "start": "997519",
    "end": "1000160"
  },
  {
    "text": "side",
    "start": "1000160",
    "end": "1000800"
  },
  {
    "text": "only give where course grained",
    "start": "1000800",
    "end": "1003839"
  },
  {
    "text": "timing information runs to second",
    "start": "1003839",
    "end": "1007040"
  },
  {
    "text": "so we want to study some metrics",
    "start": "1007040",
    "end": "1010079"
  },
  {
    "text": "it's mid-second level this is not",
    "start": "1010079",
    "end": "1012240"
  },
  {
    "text": "surfacing",
    "start": "1012240",
    "end": "1013440"
  },
  {
    "text": "so we rely both server and client-side",
    "start": "1013440",
    "end": "1016160"
  },
  {
    "text": "timing information",
    "start": "1016160",
    "end": "1017759"
  },
  {
    "text": "and we use even the callback mechanism",
    "start": "1017759",
    "end": "1020639"
  },
  {
    "text": "and it checks the triggering reason",
    "start": "1020639",
    "end": "1022959"
  },
  {
    "text": "and condition under which the inventory",
    "start": "1022959",
    "end": "1025438"
  },
  {
    "text": "trigger",
    "start": "1025439",
    "end": "1026400"
  },
  {
    "text": "and measure and record timing",
    "start": "1026400",
    "end": "1028798"
  },
  {
    "text": "information accordingly",
    "start": "1028799",
    "end": "1032079"
  },
  {
    "text": "so for example here we want to start a",
    "start": "1032559",
    "end": "1035038"
  },
  {
    "text": "uh the",
    "start": "1035039",
    "end": "1036319"
  },
  {
    "text": "pod initialization scheduling latency",
    "start": "1036319",
    "end": "1039438"
  },
  {
    "text": "at a different concurrency using an",
    "start": "1039439",
    "end": "1042240"
  },
  {
    "text": "existing benchmark",
    "start": "1042240",
    "end": "1043678"
  },
  {
    "text": "it just gives us all zeros because the",
    "start": "1043679",
    "end": "1046640"
  },
  {
    "text": "pod scheduling",
    "start": "1046640",
    "end": "1047760"
  },
  {
    "text": "is very short running operation",
    "start": "1047760",
    "end": "1051039"
  },
  {
    "text": "on the other hand using kbench allows us",
    "start": "1051039",
    "end": "1054240"
  },
  {
    "text": "to",
    "start": "1054240",
    "end": "1054640"
  },
  {
    "text": "report the detailed client side metrics",
    "start": "1054640",
    "end": "1057200"
  },
  {
    "text": "as",
    "start": "1057200",
    "end": "1057760"
  },
  {
    "text": "millisecond level uh for different",
    "start": "1057760",
    "end": "1059760"
  },
  {
    "text": "concurrency",
    "start": "1059760",
    "end": "1062480"
  },
  {
    "text": "this is pretty much about the keyboard",
    "start": "1063840",
    "end": "1065520"
  },
  {
    "text": "control point features",
    "start": "1065520",
    "end": "1067440"
  },
  {
    "text": "and now i'm going to hand it over to",
    "start": "1067440",
    "end": "1069840"
  },
  {
    "text": "carsick talk about data point features",
    "start": "1069840",
    "end": "1072480"
  },
  {
    "text": "thank you",
    "start": "1072480",
    "end": "1074880"
  },
  {
    "start": "1074000",
    "end": "1202000"
  },
  {
    "text": "thanks john let's take a closer look at",
    "start": "1076640",
    "end": "1079520"
  },
  {
    "text": "benchmarking that",
    "start": "1079520",
    "end": "1080640"
  },
  {
    "text": "data plane using kbench with the rich",
    "start": "1080640",
    "end": "1083200"
  },
  {
    "text": "container interface",
    "start": "1083200",
    "end": "1084320"
  },
  {
    "text": "that kbench offers one can orchestrate",
    "start": "1084320",
    "end": "1086799"
  },
  {
    "text": "pretty much",
    "start": "1086799",
    "end": "1087600"
  },
  {
    "text": "any workflow say you have a use case in",
    "start": "1087600",
    "end": "1090240"
  },
  {
    "text": "mind",
    "start": "1090240",
    "end": "1090960"
  },
  {
    "text": "and you want to evaluate how your use",
    "start": "1090960",
    "end": "1092880"
  },
  {
    "text": "case will perform",
    "start": "1092880",
    "end": "1094160"
  },
  {
    "text": "on a target kubernetes cluster k bench",
    "start": "1094160",
    "end": "1096880"
  },
  {
    "text": "can help you with that",
    "start": "1096880",
    "end": "1098559"
  },
  {
    "text": "you can start with the create operation",
    "start": "1098559",
    "end": "1101679"
  },
  {
    "text": "using which you can deploy your",
    "start": "1101679",
    "end": "1103600"
  },
  {
    "text": "kubernetes resources with your target",
    "start": "1103600",
    "end": "1105919"
  },
  {
    "text": "containers",
    "start": "1105919",
    "end": "1106960"
  },
  {
    "text": "and assign them some labels you can just",
    "start": "1106960",
    "end": "1110480"
  },
  {
    "text": "reuse the yaml spec of any kubernetes",
    "start": "1110480",
    "end": "1113440"
  },
  {
    "text": "artifacts that you might have",
    "start": "1113440",
    "end": "1116160"
  },
  {
    "text": "labeling these resources helps us filter",
    "start": "1116160",
    "end": "1119039"
  },
  {
    "text": "and select specific resources on which",
    "start": "1119039",
    "end": "1121520"
  },
  {
    "text": "we want particular actions to be",
    "start": "1121520",
    "end": "1123360"
  },
  {
    "text": "performed",
    "start": "1123360",
    "end": "1124880"
  },
  {
    "text": "that way we can orchestrate different",
    "start": "1124880",
    "end": "1127360"
  },
  {
    "text": "workflows with ease",
    "start": "1127360",
    "end": "1129520"
  },
  {
    "text": "next you can copy any workload artifacts",
    "start": "1129520",
    "end": "1132400"
  },
  {
    "text": "or",
    "start": "1132400",
    "end": "1132720"
  },
  {
    "text": "workload specific configuration files",
    "start": "1132720",
    "end": "1134880"
  },
  {
    "text": "for current run",
    "start": "1134880",
    "end": "1136000"
  },
  {
    "text": "into your containers again you can use",
    "start": "1136000",
    "end": "1138720"
  },
  {
    "text": "these labels",
    "start": "1138720",
    "end": "1139679"
  },
  {
    "text": "to selectively you know choose those",
    "start": "1139679",
    "end": "1142880"
  },
  {
    "text": "kubernetes or objects to which you want",
    "start": "1142880",
    "end": "1144799"
  },
  {
    "text": "to apply this action",
    "start": "1144799",
    "end": "1147120"
  },
  {
    "text": "then you can run commands inside the",
    "start": "1147120",
    "end": "1149520"
  },
  {
    "text": "pause to trigger your workflows",
    "start": "1149520",
    "end": "1151760"
  },
  {
    "text": "one of my favorite features of k bench",
    "start": "1151760",
    "end": "1154320"
  },
  {
    "text": "is the ability",
    "start": "1154320",
    "end": "1155360"
  },
  {
    "text": "to trigger actions using conditional",
    "start": "1155360",
    "end": "1157679"
  },
  {
    "text": "predicates",
    "start": "1157679",
    "end": "1159039"
  },
  {
    "text": "these predicates can be kubernetes",
    "start": "1159039",
    "end": "1161200"
  },
  {
    "text": "system based",
    "start": "1161200",
    "end": "1162559"
  },
  {
    "text": "or something that is evaluated inside a",
    "start": "1162559",
    "end": "1165360"
  },
  {
    "text": "container",
    "start": "1165360",
    "end": "1166640"
  },
  {
    "text": "say you have a particular server plot",
    "start": "1166640",
    "end": "1168480"
  },
  {
    "text": "deployed and want to generate",
    "start": "1168480",
    "end": "1170640"
  },
  {
    "text": "load from a client part against this",
    "start": "1170640",
    "end": "1172960"
  },
  {
    "text": "particular server part",
    "start": "1172960",
    "end": "1174559"
  },
  {
    "text": "you can wait until the server pod gets",
    "start": "1174559",
    "end": "1176880"
  },
  {
    "text": "to running",
    "start": "1176880",
    "end": "1177600"
  },
  {
    "text": "or even better you can wait until the",
    "start": "1177600",
    "end": "1180080"
  },
  {
    "text": "server process",
    "start": "1180080",
    "end": "1181120"
  },
  {
    "text": "inside the container gets to a",
    "start": "1181120",
    "end": "1183440"
  },
  {
    "text": "particular state",
    "start": "1183440",
    "end": "1184799"
  },
  {
    "text": "using these predicates now maybe again",
    "start": "1184799",
    "end": "1188559"
  },
  {
    "text": "you want to copy",
    "start": "1188559",
    "end": "1189840"
  },
  {
    "text": "you know your results out of these",
    "start": "1189840",
    "end": "1191760"
  },
  {
    "text": "containers",
    "start": "1191760",
    "end": "1192880"
  },
  {
    "text": "and to enter the client from which you",
    "start": "1192880",
    "end": "1194720"
  },
  {
    "text": "are orchestrating all this",
    "start": "1194720",
    "end": "1196640"
  },
  {
    "text": "and then you can go ahead and use the",
    "start": "1196640",
    "end": "1198480"
  },
  {
    "text": "delete action to clean up your cluster",
    "start": "1198480",
    "end": "1202320"
  },
  {
    "start": "1202000",
    "end": "1289000"
  },
  {
    "text": "now having looked at you know how to",
    "start": "1202720",
    "end": "1204559"
  },
  {
    "text": "orchestrate a workflow",
    "start": "1204559",
    "end": "1206559"
  },
  {
    "text": "using your workloads in kbench",
    "start": "1206559",
    "end": "1210000"
  },
  {
    "text": "let's take a look at some of the",
    "start": "1210000",
    "end": "1211600"
  },
  {
    "text": "pre-integrated workloads",
    "start": "1211600",
    "end": "1213280"
  },
  {
    "text": "that come with kbench to stress",
    "start": "1213280",
    "end": "1215280"
  },
  {
    "text": "different infrastructure dimensions",
    "start": "1215280",
    "end": "1217520"
  },
  {
    "text": "these pre-integrated workloads are ready",
    "start": "1217520",
    "end": "1219679"
  },
  {
    "text": "to be used out of the box",
    "start": "1219679",
    "end": "1223279"
  },
  {
    "text": "as you can see on this particular table",
    "start": "1224240",
    "end": "1226880"
  },
  {
    "text": "you know",
    "start": "1226880",
    "end": "1227360"
  },
  {
    "text": "you have workloads redis memphia that",
    "start": "1227360",
    "end": "1229760"
  },
  {
    "text": "can be used to",
    "start": "1229760",
    "end": "1230880"
  },
  {
    "text": "stress cpu and the memory aspects you",
    "start": "1230880",
    "end": "1233919"
  },
  {
    "text": "can get",
    "start": "1233919",
    "end": "1234320"
  },
  {
    "text": "aggregate transaction throughput across",
    "start": "1234320",
    "end": "1236080"
  },
  {
    "text": "all the different parts in a particular",
    "start": "1236080",
    "end": "1237840"
  },
  {
    "text": "cluster",
    "start": "1237840",
    "end": "1238640"
  },
  {
    "text": "and you can also get transaction",
    "start": "1238640",
    "end": "1240159"
  },
  {
    "text": "latencies for you know your",
    "start": "1240159",
    "end": "1242640"
  },
  {
    "text": "deployments and with fio you can",
    "start": "1242640",
    "end": "1246640"
  },
  {
    "text": "get read write bandwidth for various",
    "start": "1246640",
    "end": "1248880"
  },
  {
    "text": "data ratios",
    "start": "1248880",
    "end": "1250159"
  },
  {
    "text": "block sizes on ephemeral and",
    "start": "1250159",
    "end": "1253919"
  },
  {
    "text": "for system volumes io ping is integrated",
    "start": "1253919",
    "end": "1257120"
  },
  {
    "text": "with k",
    "start": "1257120",
    "end": "1257520"
  },
  {
    "text": "bench to get io latency on fml and",
    "start": "1257520",
    "end": "1260640"
  },
  {
    "text": "persistent volumes you have iperf3",
    "start": "1260640",
    "end": "1263600"
  },
  {
    "text": "which can provide you interpod tcp udp",
    "start": "1263600",
    "end": "1266159"
  },
  {
    "text": "bandwidth information",
    "start": "1266159",
    "end": "1267520"
  },
  {
    "text": "and there are blueprints with varying",
    "start": "1267520",
    "end": "1269760"
  },
  {
    "text": "pot placements on nodes zones regions",
    "start": "1269760",
    "end": "1272400"
  },
  {
    "text": "etc",
    "start": "1272400",
    "end": "1273200"
  },
  {
    "text": "to get you you know more specific",
    "start": "1273200",
    "end": "1274960"
  },
  {
    "text": "information",
    "start": "1274960",
    "end": "1276480"
  },
  {
    "text": "uh and that is q puff integrated into k",
    "start": "1276480",
    "end": "1279120"
  },
  {
    "text": "bench and it can provide",
    "start": "1279120",
    "end": "1280559"
  },
  {
    "text": "you know interpod network latency and",
    "start": "1280559",
    "end": "1283039"
  },
  {
    "text": "again there are blueprints with varying",
    "start": "1283039",
    "end": "1284880"
  },
  {
    "text": "port placement",
    "start": "1284880",
    "end": "1285760"
  },
  {
    "text": "that can orchestrate you know keeper for",
    "start": "1285760",
    "end": "1288840"
  },
  {
    "text": "you",
    "start": "1288840",
    "end": "1291360"
  },
  {
    "start": "1289000",
    "end": "1351000"
  },
  {
    "text": "typically the end results or you know",
    "start": "1291360",
    "end": "1294080"
  },
  {
    "text": "the generated",
    "start": "1294080",
    "end": "1294960"
  },
  {
    "text": "performance metrics only paint you know",
    "start": "1294960",
    "end": "1297919"
  },
  {
    "text": "the final picture",
    "start": "1297919",
    "end": "1299280"
  },
  {
    "text": "right if you notice an anomaly",
    "start": "1299280",
    "end": "1302640"
  },
  {
    "text": "or a performance issue just this data is",
    "start": "1302640",
    "end": "1305520"
  },
  {
    "text": "not enough",
    "start": "1305520",
    "end": "1307200"
  },
  {
    "text": "analysis and iterative improvements need",
    "start": "1307200",
    "end": "1309679"
  },
  {
    "text": "deep infrastructure diagnostics",
    "start": "1309679",
    "end": "1313039"
  },
  {
    "text": "kbench provides support to inject",
    "start": "1313039",
    "end": "1315039"
  },
  {
    "text": "performance and diagnostic data",
    "start": "1315039",
    "end": "1317440"
  },
  {
    "text": "to dashboarding services like wavefront",
    "start": "1317440",
    "end": "1319919"
  },
  {
    "text": "and rafana",
    "start": "1319919",
    "end": "1321440"
  },
  {
    "text": "these are done by using distributed",
    "start": "1321440",
    "end": "1323440"
  },
  {
    "text": "telegraph data collectors",
    "start": "1323440",
    "end": "1325679"
  },
  {
    "text": "and they can be configured with you know",
    "start": "1325679",
    "end": "1328000"
  },
  {
    "text": "supported output plug-in to view results",
    "start": "1328000",
    "end": "1330240"
  },
  {
    "text": "on your dashboarding platform of choice",
    "start": "1330240",
    "end": "1333679"
  },
  {
    "text": "these telegraph collectors are fed with",
    "start": "1333679",
    "end": "1336240"
  },
  {
    "text": "thousands of handcrafted",
    "start": "1336240",
    "end": "1337840"
  },
  {
    "text": "performance metrics that can be",
    "start": "1337840",
    "end": "1339679"
  },
  {
    "text": "monitored for linux and esx hosts",
    "start": "1339679",
    "end": "1343280"
  },
  {
    "text": "this data can be valuable when",
    "start": "1343280",
    "end": "1345280"
  },
  {
    "text": "correlated with",
    "start": "1345280",
    "end": "1346480"
  },
  {
    "text": "actual performance results to deep dive",
    "start": "1346480",
    "end": "1349039"
  },
  {
    "text": "performance issues",
    "start": "1349039",
    "end": "1350080"
  },
  {
    "text": "and resolve them having talked about the",
    "start": "1350080",
    "end": "1354159"
  },
  {
    "start": "1351000",
    "end": "1418000"
  },
  {
    "text": "data plane features of cabins let's take",
    "start": "1354159",
    "end": "1356240"
  },
  {
    "text": "a look at some example use cases",
    "start": "1356240",
    "end": "1358400"
  },
  {
    "text": "where we have put k bench to good use k",
    "start": "1358400",
    "end": "1361440"
  },
  {
    "text": "bench was used extensively in evaluating",
    "start": "1361440",
    "end": "1364400"
  },
  {
    "text": "and improving vmware's kubernetes",
    "start": "1364400",
    "end": "1366320"
  },
  {
    "text": "products",
    "start": "1366320",
    "end": "1367679"
  },
  {
    "text": "in this use case we deploy a standard",
    "start": "1367679",
    "end": "1369760"
  },
  {
    "text": "java benchmark inside multiple",
    "start": "1369760",
    "end": "1371520"
  },
  {
    "text": "kubernetes parts",
    "start": "1371520",
    "end": "1372960"
  },
  {
    "text": "we use kbench to find the maximum",
    "start": "1372960",
    "end": "1375440"
  },
  {
    "text": "cluster",
    "start": "1375440",
    "end": "1376720"
  },
  {
    "text": "level aggregate transaction throughput",
    "start": "1376720",
    "end": "1380240"
  },
  {
    "text": "for these java workload that can be",
    "start": "1380240",
    "end": "1383600"
  },
  {
    "text": "achieved on you know different",
    "start": "1383600",
    "end": "1384880"
  },
  {
    "text": "kubernetes clusters",
    "start": "1384880",
    "end": "1386480"
  },
  {
    "text": "but with the same hardware resources",
    "start": "1386480",
    "end": "1389280"
  },
  {
    "text": "cabin showed",
    "start": "1389280",
    "end": "1390240"
  },
  {
    "text": "how a virtualized kubernetes cluster can",
    "start": "1390240",
    "end": "1392720"
  },
  {
    "text": "actually beat the performance",
    "start": "1392720",
    "end": "1394240"
  },
  {
    "text": "of a bare metal cluster both using the",
    "start": "1394240",
    "end": "1397120"
  },
  {
    "text": "same hardware",
    "start": "1397120",
    "end": "1398240"
  },
  {
    "text": "it also enabled us to get deep insights",
    "start": "1398240",
    "end": "1401039"
  },
  {
    "text": "into what was the root cause",
    "start": "1401039",
    "end": "1402640"
  },
  {
    "text": "for some of these performance",
    "start": "1402640",
    "end": "1403840"
  },
  {
    "text": "differences some of the results",
    "start": "1403840",
    "end": "1405919"
  },
  {
    "text": "generated by k bench were so impactful",
    "start": "1405919",
    "end": "1408159"
  },
  {
    "text": "that they were used by vmware ceo pat",
    "start": "1408159",
    "end": "1410480"
  },
  {
    "text": "gelsinger",
    "start": "1410480",
    "end": "1411440"
  },
  {
    "text": "for kubernetes product announcements in",
    "start": "1411440",
    "end": "1414000"
  },
  {
    "text": "the opening keynote",
    "start": "1414000",
    "end": "1415120"
  },
  {
    "text": "of our annual conference",
    "start": "1415120",
    "end": "1418480"
  },
  {
    "start": "1418000",
    "end": "1456000"
  },
  {
    "text": "here is another example of a data plane",
    "start": "1418880",
    "end": "1421840"
  },
  {
    "text": "pre-integrated blueprint",
    "start": "1421840",
    "end": "1423360"
  },
  {
    "text": "called dp internode this blueprint",
    "start": "1423360",
    "end": "1427279"
  },
  {
    "text": "automatically deploys two parts on two",
    "start": "1427279",
    "end": "1429919"
  },
  {
    "text": "nodes",
    "start": "1429919",
    "end": "1430480"
  },
  {
    "text": "using anti-affinity rules it uses a",
    "start": "1430480",
    "end": "1433760"
  },
  {
    "text": "headless service to run iperf3",
    "start": "1433760",
    "end": "1435840"
  },
  {
    "text": "across the parts to provide tcp udp",
    "start": "1435840",
    "end": "1438720"
  },
  {
    "text": "bandwidth information",
    "start": "1438720",
    "end": "1440240"
  },
  {
    "text": "and qperf3 to provide the network",
    "start": "1440240",
    "end": "1442240"
  },
  {
    "text": "latency information",
    "start": "1442240",
    "end": "1444559"
  },
  {
    "text": "these blueprints can be run all these",
    "start": "1444559",
    "end": "1447600"
  },
  {
    "text": "different blueprints for both control",
    "start": "1447600",
    "end": "1449279"
  },
  {
    "text": "and the data plane can be run",
    "start": "1449279",
    "end": "1451039"
  },
  {
    "text": "as a suite to get all these key metrics",
    "start": "1451039",
    "end": "1453919"
  },
  {
    "text": "just in a nutshell",
    "start": "1453919",
    "end": "1456880"
  },
  {
    "start": "1456000",
    "end": "1494000"
  },
  {
    "text": "in summary we presented k bench which is",
    "start": "1457440",
    "end": "1460559"
  },
  {
    "text": "a",
    "start": "1460559",
    "end": "1460960"
  },
  {
    "text": "highly configurable and easy to use",
    "start": "1460960",
    "end": "1463520"
  },
  {
    "text": "benchmark framework to evaluate",
    "start": "1463520",
    "end": "1465200"
  },
  {
    "text": "kubernetes performance",
    "start": "1465200",
    "end": "1466880"
  },
  {
    "text": "can be valuable for competitive",
    "start": "1466880",
    "end": "1469120"
  },
  {
    "text": "benchmarking across multiple platforms",
    "start": "1469120",
    "end": "1471600"
  },
  {
    "text": "to identify performance issues root",
    "start": "1471600",
    "end": "1474000"
  },
  {
    "text": "cause them using diagnostics",
    "start": "1474000",
    "end": "1475919"
  },
  {
    "text": "and iteratively improve your platform",
    "start": "1475919",
    "end": "1478000"
  },
  {
    "text": "performance",
    "start": "1478000",
    "end": "1479200"
  },
  {
    "text": "k bench is open source and we would like",
    "start": "1479200",
    "end": "1481440"
  },
  {
    "text": "to welcome everyone to use the tool",
    "start": "1481440",
    "end": "1484080"
  },
  {
    "text": "if you have a need provide us feedback",
    "start": "1484080",
    "end": "1486240"
  },
  {
    "text": "and to contribute to the project",
    "start": "1486240",
    "end": "1488880"
  },
  {
    "text": "we thank you for your time and we are",
    "start": "1488880",
    "end": "1490720"
  },
  {
    "text": "happy to answer any questions you might",
    "start": "1490720",
    "end": "1493640"
  },
  {
    "text": "have",
    "start": "1493640",
    "end": "1496640"
  }
]