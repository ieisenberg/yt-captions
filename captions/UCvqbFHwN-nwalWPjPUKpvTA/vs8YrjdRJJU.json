[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "hi i'm mark church product manager from",
    "start": "80",
    "end": "2639"
  },
  {
    "text": "google cloud",
    "start": "2639",
    "end": "3439"
  },
  {
    "text": "and i'm here to talk to you about the",
    "start": "3439",
    "end": "4640"
  },
  {
    "text": "kubernetes gateway api the koreans",
    "start": "4640",
    "end": "6720"
  },
  {
    "text": "gateway api",
    "start": "6720",
    "end": "7600"
  },
  {
    "text": "is a open source specification uh",
    "start": "7600",
    "end": "10800"
  },
  {
    "text": "created in the sig network group",
    "start": "10800",
    "end": "13120"
  },
  {
    "text": "for modeling service networking in",
    "start": "13120",
    "end": "14920"
  },
  {
    "text": "kubernetes",
    "start": "14920",
    "end": "16400"
  },
  {
    "start": "16000",
    "end": "168000"
  },
  {
    "text": "so very much like ingress or service",
    "start": "16400",
    "end": "18720"
  },
  {
    "text": "resources",
    "start": "18720",
    "end": "19760"
  },
  {
    "text": "it's intended to up level and be an",
    "start": "19760",
    "end": "21680"
  },
  {
    "text": "evolution for service networking",
    "start": "21680",
    "end": "23519"
  },
  {
    "text": "kubernetes that is still a generic",
    "start": "23519",
    "end": "25199"
  },
  {
    "text": "standard",
    "start": "25199",
    "end": "25680"
  },
  {
    "text": "supported by a variety of different",
    "start": "25680",
    "end": "27519"
  },
  {
    "text": "companies projects and implementations",
    "start": "27519",
    "end": "30400"
  },
  {
    "text": "there have been a variety of different",
    "start": "30400",
    "end": "33040"
  },
  {
    "text": "contributors that have been",
    "start": "33040",
    "end": "34480"
  },
  {
    "text": "um contributing to and and helping",
    "start": "34480",
    "end": "36719"
  },
  {
    "text": "design the gateway api",
    "start": "36719",
    "end": "38239"
  },
  {
    "text": "over the last year since it was first",
    "start": "38239",
    "end": "40399"
  },
  {
    "text": "proposed kubecon",
    "start": "40399",
    "end": "41760"
  },
  {
    "text": "san diego and they're already beginning",
    "start": "41760",
    "end": "44640"
  },
  {
    "text": "starting to begin a couple different",
    "start": "44640",
    "end": "46399"
  },
  {
    "text": "implementations",
    "start": "46399",
    "end": "47520"
  },
  {
    "text": "of this gateway of the gateway api that",
    "start": "47520",
    "end": "50000"
  },
  {
    "text": "already exist",
    "start": "50000",
    "end": "51280"
  },
  {
    "text": "including ones that model cloud load",
    "start": "51280",
    "end": "54160"
  },
  {
    "text": "balancing",
    "start": "54160",
    "end": "56000"
  },
  {
    "text": "cluster hosted proxies and more don't",
    "start": "56000",
    "end": "59120"
  },
  {
    "text": "forget to check out the gateway api",
    "start": "59120",
    "end": "61920"
  },
  {
    "text": "sig's website where you can see more",
    "start": "61920",
    "end": "64239"
  },
  {
    "text": "information about the gateway api",
    "start": "64239",
    "end": "66720"
  },
  {
    "text": "including how to get involved with the",
    "start": "66720",
    "end": "69680"
  },
  {
    "text": "community",
    "start": "69680",
    "end": "70640"
  },
  {
    "text": "attending one of the meetings joining",
    "start": "70640",
    "end": "72720"
  },
  {
    "text": "the slack",
    "start": "72720",
    "end": "74000"
  },
  {
    "text": "um seeing how to use the gateway api",
    "start": "74000",
    "end": "77840"
  },
  {
    "text": "in one of the available guides that we",
    "start": "77840",
    "end": "79920"
  },
  {
    "text": "have",
    "start": "79920",
    "end": "81040"
  },
  {
    "text": "or just checking out the implementations",
    "start": "81040",
    "end": "83040"
  },
  {
    "text": "that currently exist that's",
    "start": "83040",
    "end": "84720"
  },
  {
    "text": "growing every day so",
    "start": "84720",
    "end": "87759"
  },
  {
    "text": "you might be asking what's wrong with",
    "start": "87759",
    "end": "90000"
  },
  {
    "text": "ingress",
    "start": "90000",
    "end": "91600"
  },
  {
    "text": "what what does it not do for us and why",
    "start": "91600",
    "end": "93280"
  },
  {
    "text": "do we need another new api",
    "start": "93280",
    "end": "95040"
  },
  {
    "text": "resource it's a very valid question",
    "start": "95040",
    "end": "98000"
  },
  {
    "text": "ingress had a lot",
    "start": "98000",
    "end": "99040"
  },
  {
    "text": "has a lot of good things going for it",
    "start": "99040",
    "end": "100880"
  },
  {
    "text": "well it's very widely adopted there's",
    "start": "100880",
    "end": "102720"
  },
  {
    "text": "many implementations that ingress",
    "start": "102720",
    "end": "104159"
  },
  {
    "text": "controllers that exist out there",
    "start": "104159",
    "end": "106000"
  },
  {
    "text": "it's easy to use and understand it does",
    "start": "106000",
    "end": "108399"
  },
  {
    "text": "basic host and path routing",
    "start": "108399",
    "end": "110880"
  },
  {
    "text": "along with tls and the ability to",
    "start": "110880",
    "end": "113280"
  },
  {
    "text": "reference services",
    "start": "113280",
    "end": "114720"
  },
  {
    "text": "but it's very basic and so ultimately",
    "start": "114720",
    "end": "117200"
  },
  {
    "text": "ingress became a lowest common",
    "start": "117200",
    "end": "118880"
  },
  {
    "text": "honor and denominator api it was not",
    "start": "118880",
    "end": "120960"
  },
  {
    "text": "very expressive",
    "start": "120960",
    "end": "122399"
  },
  {
    "text": "it was not extensible other than in",
    "start": "122399",
    "end": "125200"
  },
  {
    "text": "through annotations",
    "start": "125200",
    "end": "126719"
  },
  {
    "text": "and as a result it's become not very",
    "start": "126719",
    "end": "129119"
  },
  {
    "text": "portable",
    "start": "129119",
    "end": "130160"
  },
  {
    "text": "and partly this is because it's it's a",
    "start": "130160",
    "end": "132560"
  },
  {
    "text": "it's a tough challenge",
    "start": "132560",
    "end": "133680"
  },
  {
    "text": "there's diverse implementations between",
    "start": "133680",
    "end": "136000"
  },
  {
    "text": "hardware load balancers",
    "start": "136000",
    "end": "137840"
  },
  {
    "text": "cloud load balancers and in-cluster",
    "start": "137840",
    "end": "139760"
  },
  {
    "text": "proxies that all have different",
    "start": "139760",
    "end": "141680"
  },
  {
    "text": "capabilities",
    "start": "141680",
    "end": "142879"
  },
  {
    "text": "constraints and ways that they operate",
    "start": "142879",
    "end": "145920"
  },
  {
    "text": "and there's also diverse models in which",
    "start": "145920",
    "end": "147760"
  },
  {
    "text": "load balancing really occurs",
    "start": "147760",
    "end": "149920"
  },
  {
    "text": "for instance there are middle proxy",
    "start": "149920",
    "end": "152160"
  },
  {
    "text": "service mesh",
    "start": "152160",
    "end": "153360"
  },
  {
    "text": "grpc all that can do what",
    "start": "153360",
    "end": "156480"
  },
  {
    "text": "one might call load balancing in",
    "start": "156480",
    "end": "158720"
  },
  {
    "text": "slightly different models but",
    "start": "158720",
    "end": "160560"
  },
  {
    "text": "they have a lot of similarities and",
    "start": "160560",
    "end": "162080"
  },
  {
    "text": "overlap between them and so this is",
    "start": "162080",
    "end": "164080"
  },
  {
    "text": "really the challenge of modeling",
    "start": "164080",
    "end": "165920"
  },
  {
    "text": "service networking in a generic way and",
    "start": "165920",
    "end": "168800"
  },
  {
    "start": "168000",
    "end": "481000"
  },
  {
    "text": "so that's where gateway really came",
    "start": "168800",
    "end": "170400"
  },
  {
    "text": "about",
    "start": "170400",
    "end": "171680"
  },
  {
    "text": "it improves upon ingress in four major",
    "start": "171680",
    "end": "173680"
  },
  {
    "text": "ways and the first is that it's role",
    "start": "173680",
    "end": "176319"
  },
  {
    "text": "oriented",
    "start": "176319",
    "end": "177040"
  },
  {
    "text": "and what this means is that different",
    "start": "177040",
    "end": "179200"
  },
  {
    "text": "personas or roles that use load",
    "start": "179200",
    "end": "181360"
  },
  {
    "text": "balancing within a kubernetes cluster",
    "start": "181360",
    "end": "183760"
  },
  {
    "text": "can have resources that align to the",
    "start": "183760",
    "end": "187760"
  },
  {
    "text": "roles and responsibilities that that",
    "start": "187760",
    "end": "190239"
  },
  {
    "text": "role needs",
    "start": "190239",
    "end": "191360"
  },
  {
    "text": "that persona needs it's also expressive",
    "start": "191360",
    "end": "194319"
  },
  {
    "text": "in that it provides",
    "start": "194319",
    "end": "195519"
  },
  {
    "text": "more features and capabilities than",
    "start": "195519",
    "end": "197360"
  },
  {
    "text": "ingress does things like header based",
    "start": "197360",
    "end": "199519"
  },
  {
    "text": "matching or weight based load balancing",
    "start": "199519",
    "end": "202400"
  },
  {
    "text": "there's simply more things within the",
    "start": "202400",
    "end": "204239"
  },
  {
    "text": "core api",
    "start": "204239",
    "end": "206000"
  },
  {
    "text": "to do what modern load balancers are",
    "start": "206000",
    "end": "208560"
  },
  {
    "text": "expected to do",
    "start": "208560",
    "end": "210000"
  },
  {
    "text": "it's also much more extensible",
    "start": "210000",
    "end": "212480"
  },
  {
    "text": "extensible in that it",
    "start": "212480",
    "end": "213920"
  },
  {
    "text": "it has more extension points within the",
    "start": "213920",
    "end": "216080"
  },
  {
    "text": "api for",
    "start": "216080",
    "end": "218000"
  },
  {
    "text": "projects and vendors and implementations",
    "start": "218000",
    "end": "221200"
  },
  {
    "text": "to put their their proprietary or",
    "start": "221200",
    "end": "224640"
  },
  {
    "text": "custom capabilities to layer it on the",
    "start": "224640",
    "end": "227040"
  },
  {
    "text": "api",
    "start": "227040",
    "end": "227840"
  },
  {
    "text": "which allows them to use it without",
    "start": "227840",
    "end": "229920"
  },
  {
    "text": "without having to fork or rely on their",
    "start": "229920",
    "end": "232159"
  },
  {
    "text": "own",
    "start": "232159",
    "end": "232720"
  },
  {
    "text": "custom resources to get this done so",
    "start": "232720",
    "end": "235040"
  },
  {
    "text": "that that allows",
    "start": "235040",
    "end": "236400"
  },
  {
    "text": "load balancing and service networking to",
    "start": "236400",
    "end": "238319"
  },
  {
    "text": "continue using a core",
    "start": "238319",
    "end": "239760"
  },
  {
    "text": "api while having some of the",
    "start": "239760",
    "end": "242480"
  },
  {
    "text": "implementation specific capabilities lie",
    "start": "242480",
    "end": "244720"
  },
  {
    "text": "within the extensions",
    "start": "244720",
    "end": "245920"
  },
  {
    "text": "so let's take a look at the resources",
    "start": "245920",
    "end": "247680"
  },
  {
    "text": "that the gateway api",
    "start": "247680",
    "end": "249439"
  },
  {
    "text": "has so there's a couple new ones that",
    "start": "249439",
    "end": "251599"
  },
  {
    "text": "you might see",
    "start": "251599",
    "end": "252560"
  },
  {
    "text": "gateway class gateway and http route",
    "start": "252560",
    "end": "256079"
  },
  {
    "text": "and so these are all different resources",
    "start": "256079",
    "end": "258239"
  },
  {
    "text": "that make up",
    "start": "258239",
    "end": "259440"
  },
  {
    "text": "pieces of what used to be ingress where",
    "start": "259440",
    "end": "262720"
  },
  {
    "text": "gateway",
    "start": "262720",
    "end": "263280"
  },
  {
    "text": "models the actual underlying data plane",
    "start": "263280",
    "end": "265440"
  },
  {
    "text": "or load balancing that's performing the",
    "start": "265440",
    "end": "267520"
  },
  {
    "text": "routing",
    "start": "267520",
    "end": "268320"
  },
  {
    "text": "the http route models the actual",
    "start": "268320",
    "end": "271199"
  },
  {
    "text": "configuration of the routes",
    "start": "271199",
    "end": "273040"
  },
  {
    "text": "and the gateway class is a template kind",
    "start": "273040",
    "end": "275120"
  },
  {
    "text": "of like a storage class",
    "start": "275120",
    "end": "276400"
  },
  {
    "text": "for defining what kind of gateways can",
    "start": "276400",
    "end": "278560"
  },
  {
    "text": "be instantiated",
    "start": "278560",
    "end": "280240"
  },
  {
    "text": "so let's take a look at these so in my",
    "start": "280240",
    "end": "282240"
  },
  {
    "text": "cluster here i have uh",
    "start": "282240",
    "end": "284720"
  },
  {
    "text": "a fuvi one and a fuvi ii uh deployment",
    "start": "284720",
    "end": "288479"
  },
  {
    "text": "running",
    "start": "288479",
    "end": "289120"
  },
  {
    "text": "what i'm going to do is i'm going to",
    "start": "289120",
    "end": "290320"
  },
  {
    "text": "show you some of the resources that i've",
    "start": "290320",
    "end": "292720"
  },
  {
    "text": "deployed in my cluster",
    "start": "292720",
    "end": "294639"
  },
  {
    "text": "so one let's take a look at the http",
    "start": "294639",
    "end": "297280"
  },
  {
    "text": "routes i have",
    "start": "297280",
    "end": "298479"
  },
  {
    "text": "and it looks like i have one foo route",
    "start": "298479",
    "end": "301759"
  },
  {
    "text": "that matches for food.com so let me just",
    "start": "301759",
    "end": "304560"
  },
  {
    "text": "show you what i've deployed earlier",
    "start": "304560",
    "end": "308160"
  },
  {
    "text": "and it looks like this and so uh at",
    "start": "308479",
    "end": "311520"
  },
  {
    "text": "first blush this might look a lot like",
    "start": "311520",
    "end": "313280"
  },
  {
    "text": "ingress right so",
    "start": "313280",
    "end": "314400"
  },
  {
    "text": "it matches for the hostname food.com",
    "start": "314400",
    "end": "317680"
  },
  {
    "text": "and it looks like it's forwarding it to",
    "start": "317680",
    "end": "319840"
  },
  {
    "text": "actually two services here",
    "start": "319840",
    "end": "321360"
  },
  {
    "text": "fuvi one fuvi two and it's using a",
    "start": "321360",
    "end": "324320"
  },
  {
    "text": "weight of 50. so this is one of the",
    "start": "324320",
    "end": "325919"
  },
  {
    "text": "aspects where",
    "start": "325919",
    "end": "327039"
  },
  {
    "text": "it's more expressive it has more",
    "start": "327039",
    "end": "329520"
  },
  {
    "text": "capabilities built into the core api",
    "start": "329520",
    "end": "332800"
  },
  {
    "text": "weights is one example that's something",
    "start": "332800",
    "end": "334400"
  },
  {
    "text": "that wasn't possible in ingress",
    "start": "334400",
    "end": "337199"
  },
  {
    "text": "and there's some other things here one",
    "start": "337199",
    "end": "338960"
  },
  {
    "text": "thing that we will notice so let's go",
    "start": "338960",
    "end": "340960"
  },
  {
    "text": "ahead and just describe this hp",
    "start": "340960",
    "end": "343039"
  },
  {
    "text": "route and we'll realize that well",
    "start": "343039",
    "end": "346160"
  },
  {
    "text": "there's no",
    "start": "346160",
    "end": "346639"
  },
  {
    "text": "vip anywhere and that might be kind of",
    "start": "346639",
    "end": "348720"
  },
  {
    "text": "interesting because an ingress has a vip",
    "start": "348720",
    "end": "350960"
  },
  {
    "text": "and a port that's actually exposing",
    "start": "350960",
    "end": "352800"
  },
  {
    "text": "traffic on",
    "start": "352800",
    "end": "354639"
  },
  {
    "text": "so where might that bit be well i'm",
    "start": "354639",
    "end": "357120"
  },
  {
    "text": "going to go ahead and let's look at the",
    "start": "357120",
    "end": "360880"
  },
  {
    "text": "infra name space that i have and let's",
    "start": "360880",
    "end": "364160"
  },
  {
    "text": "look at our gateway resource",
    "start": "364160",
    "end": "366639"
  },
  {
    "text": "so we have one gateway here describe",
    "start": "366639",
    "end": "369759"
  },
  {
    "text": "gateway internal hp",
    "start": "369759",
    "end": "374479"
  },
  {
    "text": "and so this gateway resource is what",
    "start": "374479",
    "end": "376479"
  },
  {
    "text": "actually represents the load balancer",
    "start": "376479",
    "end": "378560"
  },
  {
    "text": "and it references a gateway class it has",
    "start": "378560",
    "end": "381840"
  },
  {
    "text": "listeners that",
    "start": "381840",
    "end": "383039"
  },
  {
    "text": "describe exactly what port protocol are",
    "start": "383039",
    "end": "386000"
  },
  {
    "text": "being listened to",
    "start": "386000",
    "end": "387199"
  },
  {
    "text": "and it also has an address field with a",
    "start": "387199",
    "end": "389199"
  },
  {
    "text": "value so this is actually the ip address",
    "start": "389199",
    "end": "392000"
  },
  {
    "text": "of of our of our load balancer and where",
    "start": "392000",
    "end": "394240"
  },
  {
    "text": "the traffic uh will go to",
    "start": "394240",
    "end": "396000"
  },
  {
    "text": "to get into the load balancer and so we",
    "start": "396000",
    "end": "398880"
  },
  {
    "text": "have split up ingress into a couple",
    "start": "398880",
    "end": "400800"
  },
  {
    "text": "different resources and this actually",
    "start": "400800",
    "end": "402240"
  },
  {
    "text": "has a lot of power",
    "start": "402240",
    "end": "403600"
  },
  {
    "text": "so let me go back to here so if we can",
    "start": "403600",
    "end": "405680"
  },
  {
    "text": "see here because we're allowing a",
    "start": "405680",
    "end": "408720"
  },
  {
    "text": "load balancer to be split up or at least",
    "start": "408720",
    "end": "411199"
  },
  {
    "text": "to be shared by different teams through",
    "start": "411199",
    "end": "412880"
  },
  {
    "text": "configuration",
    "start": "412880",
    "end": "414160"
  },
  {
    "text": "it allows teams to share underlying",
    "start": "414160",
    "end": "416160"
  },
  {
    "text": "infrastructure more easily",
    "start": "416160",
    "end": "417680"
  },
  {
    "text": "and also allows platform administrators",
    "start": "417680",
    "end": "420160"
  },
  {
    "text": "to",
    "start": "420160",
    "end": "420880"
  },
  {
    "text": "apply policy and centralize certain",
    "start": "420880",
    "end": "423360"
  },
  {
    "text": "aspects of the operations of that load",
    "start": "423360",
    "end": "425360"
  },
  {
    "text": "balancer",
    "start": "425360",
    "end": "426240"
  },
  {
    "text": "in a way that suits their role more",
    "start": "426240",
    "end": "428160"
  },
  {
    "text": "better uh better",
    "start": "428160",
    "end": "429680"
  },
  {
    "text": "so this is really the role oriented",
    "start": "429680",
    "end": "431759"
  },
  {
    "text": "aspect of the api is that some of these",
    "start": "431759",
    "end": "434800"
  },
  {
    "text": "separation responsibilities can be done",
    "start": "434800",
    "end": "436720"
  },
  {
    "text": "because the api resources are separated",
    "start": "436720",
    "end": "439680"
  },
  {
    "text": "so if we go go back to our cluster and",
    "start": "439680",
    "end": "442800"
  },
  {
    "text": "i'm going to go into the",
    "start": "442800",
    "end": "445680"
  },
  {
    "text": "bar namespace and i could see that",
    "start": "445680",
    "end": "449599"
  },
  {
    "text": "here is my bar",
    "start": "449599",
    "end": "452880"
  },
  {
    "text": "route with a match for bar.com that's",
    "start": "452880",
    "end": "455120"
  },
  {
    "text": "probably sending it to the bar service",
    "start": "455120",
    "end": "457039"
  },
  {
    "text": "so let's just look really quick bar out",
    "start": "457039",
    "end": "459680"
  },
  {
    "text": "yes so",
    "start": "459680",
    "end": "460400"
  },
  {
    "text": "it's it's doing so these routes are",
    "start": "460400",
    "end": "462560"
  },
  {
    "text": "getting",
    "start": "462560",
    "end": "463520"
  },
  {
    "text": "aggregated and then applied to the same",
    "start": "463520",
    "end": "465759"
  },
  {
    "text": "underlying load balancer",
    "start": "465759",
    "end": "467360"
  },
  {
    "text": "using standardized",
    "start": "467360",
    "end": "470479"
  },
  {
    "text": "merging and conflict logic between the",
    "start": "470479",
    "end": "473280"
  },
  {
    "text": "routes",
    "start": "473280",
    "end": "474400"
  },
  {
    "text": "and so this allows the sharing of",
    "start": "474400",
    "end": "475919"
  },
  {
    "text": "infrastructure to be much more easily",
    "start": "475919",
    "end": "477680"
  },
  {
    "text": "done",
    "start": "477680",
    "end": "478160"
  },
  {
    "text": "in a multi-tenant and shared cluster",
    "start": "478160",
    "end": "482160"
  },
  {
    "start": "481000",
    "end": "832000"
  },
  {
    "text": "so now i'll show you how the gateway api",
    "start": "482160",
    "end": "484080"
  },
  {
    "text": "can also be used for multi-cluster load",
    "start": "484080",
    "end": "486160"
  },
  {
    "text": "balancing",
    "start": "486160",
    "end": "487360"
  },
  {
    "text": "so in gke's implementation of the",
    "start": "487360",
    "end": "489440"
  },
  {
    "text": "gateway api we have been working on a",
    "start": "489440",
    "end": "491440"
  },
  {
    "text": "multi-cluster",
    "start": "491440",
    "end": "492479"
  },
  {
    "text": "controller that allows multi-cluster",
    "start": "492479",
    "end": "494560"
  },
  {
    "text": "gateways to exist",
    "start": "494560",
    "end": "496000"
  },
  {
    "text": "effectively what this does is it",
    "start": "496000",
    "end": "497759"
  },
  {
    "text": "programs the",
    "start": "497759",
    "end": "499039"
  },
  {
    "text": "google the google cloud global load",
    "start": "499039",
    "end": "502080"
  },
  {
    "text": "balancer",
    "start": "502080",
    "end": "503039"
  },
  {
    "text": "to be able to load balance at multiple",
    "start": "503039",
    "end": "505199"
  },
  {
    "text": "gke clusters around the globe that live",
    "start": "505199",
    "end": "507759"
  },
  {
    "text": "across different regions and different",
    "start": "507759",
    "end": "509199"
  },
  {
    "text": "data centers",
    "start": "509199",
    "end": "510720"
  },
  {
    "text": "but this is all done through a",
    "start": "510720",
    "end": "511840"
  },
  {
    "text": "centralized configuration model",
    "start": "511840",
    "end": "514080"
  },
  {
    "text": "using gateway resources so this",
    "start": "514080",
    "end": "517440"
  },
  {
    "text": "this supports both multi-cluster load",
    "start": "517440",
    "end": "519760"
  },
  {
    "text": "balancing for internal load balancing",
    "start": "519760",
    "end": "522080"
  },
  {
    "text": "external load balancing and also all the",
    "start": "522080",
    "end": "524720"
  },
  {
    "text": "features that come along with gateway",
    "start": "524720",
    "end": "526160"
  },
  {
    "text": "such as traffic splitting",
    "start": "526160",
    "end": "527519"
  },
  {
    "text": "traffic capacity traffic mirroring and",
    "start": "527519",
    "end": "530320"
  },
  {
    "text": "advanced routing between clusters",
    "start": "530320",
    "end": "532320"
  },
  {
    "text": "which enables a lot of very powerful use",
    "start": "532320",
    "end": "534480"
  },
  {
    "text": "cases and so in this",
    "start": "534480",
    "end": "536080"
  },
  {
    "text": "example that i'm about to show you i'm",
    "start": "536080",
    "end": "538080"
  },
  {
    "text": "going to show three different common use",
    "start": "538080",
    "end": "539920"
  },
  {
    "text": "cases that might be very useful",
    "start": "539920",
    "end": "542080"
  },
  {
    "text": "when you are onboarding a new cluster so",
    "start": "542080",
    "end": "544959"
  },
  {
    "text": "let's say you have",
    "start": "544959",
    "end": "546080"
  },
  {
    "text": "a gke2 cluster that is already serving",
    "start": "546080",
    "end": "548640"
  },
  {
    "text": "production",
    "start": "548640",
    "end": "549440"
  },
  {
    "text": "traffic and you want to onboard a new",
    "start": "549440",
    "end": "552000"
  },
  {
    "text": "gke cluster maybe because you want to",
    "start": "552000",
    "end": "554880"
  },
  {
    "text": "scale more or you just want to have",
    "start": "554880",
    "end": "556640"
  },
  {
    "text": "disaster recovery",
    "start": "556640",
    "end": "557920"
  },
  {
    "text": "in any case you need to onboard this new",
    "start": "557920",
    "end": "559920"
  },
  {
    "text": "cluster so",
    "start": "559920",
    "end": "561600"
  },
  {
    "text": "at first to de-risk the migration or you",
    "start": "561600",
    "end": "564080"
  },
  {
    "text": "might want to send some synthetic",
    "start": "564080",
    "end": "565680"
  },
  {
    "text": "traffic to gk3 and so for that you might",
    "start": "565680",
    "end": "568160"
  },
  {
    "text": "just want to use some header-based",
    "start": "568160",
    "end": "569440"
  },
  {
    "text": "matching",
    "start": "569440",
    "end": "570320"
  },
  {
    "text": "to send some specific requests that are",
    "start": "570320",
    "end": "572080"
  },
  {
    "text": "targeted to gke3",
    "start": "572080",
    "end": "574640"
  },
  {
    "text": "and then you would want to maybe mirror",
    "start": "574640",
    "end": "576880"
  },
  {
    "text": "production traffic",
    "start": "576880",
    "end": "578640"
  },
  {
    "text": "from the production cluster or from the",
    "start": "578640",
    "end": "580640"
  },
  {
    "text": "gk2 cluster to the gk3",
    "start": "580640",
    "end": "582560"
  },
  {
    "text": "cluster so this would allow you to do",
    "start": "582560",
    "end": "584640"
  },
  {
    "text": "capacity testing because you're",
    "start": "584640",
    "end": "586399"
  },
  {
    "text": "mirroring real traffic to the gk3",
    "start": "586399",
    "end": "588640"
  },
  {
    "text": "cluster",
    "start": "588640",
    "end": "589440"
  },
  {
    "text": "without actually responding to the",
    "start": "589440",
    "end": "591600"
  },
  {
    "text": "clients with that traffic",
    "start": "591600",
    "end": "593200"
  },
  {
    "text": "and then lastly you're going to want to",
    "start": "593200",
    "end": "594480"
  },
  {
    "text": "do blue-green traffic splitting so you",
    "start": "594480",
    "end": "596480"
  },
  {
    "text": "can",
    "start": "596480",
    "end": "597120"
  },
  {
    "text": "canary a percentage of the actual",
    "start": "597120",
    "end": "598959"
  },
  {
    "text": "production traffic to the new cluster",
    "start": "598959",
    "end": "601839"
  },
  {
    "text": "until you've validated that everything",
    "start": "601839",
    "end": "603519"
  },
  {
    "text": "works fine and then you can put them",
    "start": "603519",
    "end": "605120"
  },
  {
    "text": "both at full capacity",
    "start": "605120",
    "end": "608160"
  },
  {
    "text": "so this looks a little complicated but",
    "start": "608160",
    "end": "610800"
  },
  {
    "text": "i'll explain it",
    "start": "610800",
    "end": "612399"
  },
  {
    "text": "we're using the service export api and",
    "start": "612399",
    "end": "614560"
  },
  {
    "text": "if you remember the service export api",
    "start": "614560",
    "end": "616800"
  },
  {
    "text": "both aggregates and exports endpoints",
    "start": "616800",
    "end": "620240"
  },
  {
    "text": "outside of the cluster and it makes",
    "start": "620240",
    "end": "622640"
  },
  {
    "text": "those available as",
    "start": "622640",
    "end": "623920"
  },
  {
    "text": "service imports and all the other",
    "start": "623920",
    "end": "625279"
  },
  {
    "text": "clusters so we have a service export foo",
    "start": "625279",
    "end": "628959"
  },
  {
    "text": "that represents all four pots and then",
    "start": "628959",
    "end": "631360"
  },
  {
    "text": "we have a",
    "start": "631360",
    "end": "632079"
  },
  {
    "text": "service export food gke2 that represents",
    "start": "632079",
    "end": "635440"
  },
  {
    "text": "just the pods",
    "start": "635440",
    "end": "636720"
  },
  {
    "text": "on the gk2 cluster and then we have a",
    "start": "636720",
    "end": "639200"
  },
  {
    "text": "service export food",
    "start": "639200",
    "end": "640959"
  },
  {
    "text": "gk3 that represents just the pods on",
    "start": "640959",
    "end": "643360"
  },
  {
    "text": "that cluster",
    "start": "643360",
    "end": "644320"
  },
  {
    "text": "and so let's go ahead to cli and show",
    "start": "644320",
    "end": "646640"
  },
  {
    "text": "you how this works",
    "start": "646640",
    "end": "648399"
  },
  {
    "text": "we're now sitting on my kubernetes",
    "start": "648399",
    "end": "650160"
  },
  {
    "text": "cluster we can see on the right hand",
    "start": "650160",
    "end": "651519"
  },
  {
    "text": "side i've got kubernetes cluster",
    "start": "651519",
    "end": "653440"
  },
  {
    "text": "i've got three running um i'm gonna look",
    "start": "653440",
    "end": "655760"
  },
  {
    "text": "across all of them and see all the pods",
    "start": "655760",
    "end": "657680"
  },
  {
    "text": "i've got",
    "start": "657680",
    "end": "658320"
  },
  {
    "text": "fuvi one pods running on clusters gke2",
    "start": "658320",
    "end": "661279"
  },
  {
    "text": "and gk3",
    "start": "661279",
    "end": "662800"
  },
  {
    "text": "i'm currently on gk1 where i have my",
    "start": "662800",
    "end": "665920"
  },
  {
    "text": "gateway resource so it's a multi-cluster",
    "start": "665920",
    "end": "667839"
  },
  {
    "text": "gateway of the class",
    "start": "667839",
    "end": "669200"
  },
  {
    "text": "gk layer 7 rilb so this is a layer 7",
    "start": "669200",
    "end": "672399"
  },
  {
    "text": "load balancer running in gcp",
    "start": "672399",
    "end": "675360"
  },
  {
    "text": "i'm going to look at my service exports",
    "start": "675360",
    "end": "677120"
  },
  {
    "text": "which again is the resource that's used",
    "start": "677120",
    "end": "679040"
  },
  {
    "text": "to",
    "start": "679040",
    "end": "679360"
  },
  {
    "text": "export services across all the clusters",
    "start": "679360",
    "end": "683040"
  },
  {
    "text": "so i could see that foo exists on both",
    "start": "683040",
    "end": "685680"
  },
  {
    "text": "and so it's being aggregated while gk3",
    "start": "685680",
    "end": "688000"
  },
  {
    "text": "and gk2 are just specific to those",
    "start": "688000",
    "end": "689680"
  },
  {
    "text": "clusters we can see the service imports",
    "start": "689680",
    "end": "692640"
  },
  {
    "text": "exist everywhere which means that the",
    "start": "692640",
    "end": "694240"
  },
  {
    "text": "exports were successful they've",
    "start": "694240",
    "end": "696240"
  },
  {
    "text": "successfully exported those pods across",
    "start": "696240",
    "end": "699279"
  },
  {
    "text": "all of the clusters",
    "start": "699279",
    "end": "700640"
  },
  {
    "text": "so let's look at the first route that i",
    "start": "700640",
    "end": "702399"
  },
  {
    "text": "have deployed it's simply matching",
    "start": "702399",
    "end": "704720"
  },
  {
    "text": "on hostnamefu.com and sending it to the",
    "start": "704720",
    "end": "707839"
  },
  {
    "text": "service import",
    "start": "707839",
    "end": "708880"
  },
  {
    "text": "foo dash gke2 so what this means is",
    "start": "708880",
    "end": "712560"
  },
  {
    "text": "we're going to send traffic just to the",
    "start": "712560",
    "end": "714320"
  },
  {
    "text": "fuji k2 which represents the pods just",
    "start": "714320",
    "end": "716880"
  },
  {
    "text": "on that cluster",
    "start": "716880",
    "end": "718399"
  },
  {
    "text": "as expected traffic is only being",
    "start": "718399",
    "end": "720880"
  },
  {
    "text": "received from gk2 which proves that",
    "start": "720880",
    "end": "723680"
  },
  {
    "text": "the routing rule does work so let's go",
    "start": "723680",
    "end": "726160"
  },
  {
    "text": "ahead and apply",
    "start": "726160",
    "end": "727040"
  },
  {
    "text": "a second routing rule now so that's",
    "start": "727040",
    "end": "729920"
  },
  {
    "text": "configured",
    "start": "729920",
    "end": "730720"
  },
  {
    "text": "and i'll show you what this looks like",
    "start": "730720",
    "end": "734560"
  },
  {
    "text": "okay so here we have again matching of",
    "start": "736000",
    "end": "738399"
  },
  {
    "text": "food.com except we're using this",
    "start": "738399",
    "end": "740399"
  },
  {
    "text": "this header m canary and sending that",
    "start": "740399",
    "end": "743279"
  },
  {
    "text": "traffic to just",
    "start": "743279",
    "end": "744240"
  },
  {
    "text": "food gk3 while the remainder of the",
    "start": "744240",
    "end": "746240"
  },
  {
    "text": "traffic goes to food gk2",
    "start": "746240",
    "end": "748399"
  },
  {
    "text": "note that we're referencing the service",
    "start": "748399",
    "end": "750000"
  },
  {
    "text": "import resources here we're not actually",
    "start": "750000",
    "end": "751839"
  },
  {
    "text": "addressing this",
    "start": "751839",
    "end": "753120"
  },
  {
    "text": "to services we're using the service",
    "start": "753120",
    "end": "755120"
  },
  {
    "text": "imports as those represent",
    "start": "755120",
    "end": "756720"
  },
  {
    "text": "multi-cluster services that we can point",
    "start": "756720",
    "end": "759920"
  },
  {
    "text": "to across",
    "start": "759920",
    "end": "760800"
  },
  {
    "text": "cluster boundaries so we add the",
    "start": "760800",
    "end": "764240"
  },
  {
    "text": "canary header here and the m header and",
    "start": "764240",
    "end": "767120"
  },
  {
    "text": "it does look like we're getting routed",
    "start": "767120",
    "end": "769040"
  },
  {
    "text": "only to cluster gk3",
    "start": "769040",
    "end": "771279"
  },
  {
    "text": "so that proves that the header-based",
    "start": "771279",
    "end": "774079"
  },
  {
    "text": "routing across clusters",
    "start": "774079",
    "end": "775519"
  },
  {
    "text": "does in fact work let's go ahead and",
    "start": "775519",
    "end": "778079"
  },
  {
    "text": "apply",
    "start": "778079",
    "end": "778639"
  },
  {
    "text": "our final route here which is going to",
    "start": "778639",
    "end": "780639"
  },
  {
    "text": "do the weight-based",
    "start": "780639",
    "end": "782320"
  },
  {
    "text": "traffic splitting between clusters",
    "start": "782320",
    "end": "786000"
  },
  {
    "text": "so that's deployed now i'll show you",
    "start": "786000",
    "end": "788079"
  },
  {
    "text": "what it looks like",
    "start": "788079",
    "end": "790880"
  },
  {
    "text": "and i'm referencing three service",
    "start": "792560",
    "end": "794320"
  },
  {
    "text": "imports here too i've got",
    "start": "794320",
    "end": "795600"
  },
  {
    "text": "a weight of 70 percent against cluster",
    "start": "795600",
    "end": "798480"
  },
  {
    "text": "gk2 and a weight of 30",
    "start": "798480",
    "end": "800959"
  },
  {
    "text": "against cluster gke3 let's see if it",
    "start": "800959",
    "end": "804639"
  },
  {
    "text": "works",
    "start": "804639",
    "end": "806480"
  },
  {
    "text": "and we're going to send traffic to",
    "start": "806480",
    "end": "807760"
  },
  {
    "text": "food.com again and it does look like",
    "start": "807760",
    "end": "810399"
  },
  {
    "text": "we're hitting gk3",
    "start": "810399",
    "end": "811839"
  },
  {
    "text": "and gk2 looks like a little bit more gk2",
    "start": "811839",
    "end": "815360"
  },
  {
    "text": "than gk3 which is expected",
    "start": "815360",
    "end": "818000"
  },
  {
    "text": "so great success it does look like",
    "start": "818000",
    "end": "820639"
  },
  {
    "text": "multi-cluster load balancing",
    "start": "820639",
    "end": "822240"
  },
  {
    "text": "using cloud load balancers is possible",
    "start": "822240",
    "end": "825040"
  },
  {
    "text": "through a",
    "start": "825040",
    "end": "825600"
  },
  {
    "text": "kubernetes native way thank you for",
    "start": "825600",
    "end": "828000"
  },
  {
    "text": "watching",
    "start": "828000",
    "end": "828800"
  },
  {
    "text": "and i hope you learned something",
    "start": "828800",
    "end": "834399"
  }
]