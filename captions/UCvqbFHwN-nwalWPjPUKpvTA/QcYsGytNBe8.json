[
  {
    "text": "is our talk about what if kubernetes was a compiler Target um I'm pretty excited",
    "start": "80",
    "end": "5680"
  },
  {
    "text": "about this um I think it's kind of a Nifty novel idea um so hopefully we can",
    "start": "5680",
    "end": "11120"
  },
  {
    "text": "kind of show off some of these ideas and uh influence the uh direction of",
    "start": "11120",
    "end": "16840"
  },
  {
    "text": "distributed computing uh for the next decade or so um so first off who are we uh my name is David um I'm a founder and",
    "start": "16840",
    "end": "24480"
  },
  {
    "text": "research scientist at applied Computing research Labs uh previously I was at Yelp and at Airbnb doing uh Cloud",
    "start": "24480",
    "end": "31640"
  },
  {
    "text": "operations uh kubernetes MOS All That Jazz um I'm a contributor to Cluster a",
    "start": "31640",
    "end": "37399"
  },
  {
    "text": "scaler and to Carpenter I'm also the maintainer of the simcube project um we're not talking about any of that",
    "start": "37399",
    "end": "43039"
  },
  {
    "text": "today um you can find me on slack or on hacky uh or on Blue Sky um my GitHub",
    "start": "43039",
    "end": "49559"
  },
  {
    "text": "handles slightly different um I do want to point out uh so this is my colleague Tim I'll let him introduce himself but",
    "start": "49559",
    "end": "55760"
  },
  {
    "text": "uh he's on the job market for internships so uh if you want to hire him he's really great I also have a team",
    "start": "55760",
    "end": "61760"
  },
  {
    "text": "of undergrads that I'm working with out there uh who are also all fantastic and on the job market so uh if you're hiring",
    "start": "61760",
    "end": "68759"
  },
  {
    "text": "come talk to me and I'll point you to good people okay cool yeah so as David said I'm Tim um I'm currently a PhD",
    "start": "68759",
    "end": "75000"
  },
  {
    "text": "student at UC Santa Cruz um and my current research is on the controller programming model focusing on how to",
    "start": "75000",
    "end": "81079"
  },
  {
    "text": "make it easier to debug and ultimately a little more developer friendly um and",
    "start": "81079",
    "end": "86280"
  },
  {
    "text": "online or on Mastadon in GitHub you can find me at T goodwi um so let's get into it so we all know",
    "start": "86280",
    "end": "93880"
  },
  {
    "text": "that programming distributed systems is hard and of course part of this stems from the challenges that are inherent to",
    "start": "93880",
    "end": "99920"
  },
  {
    "text": "the nature of distribution so things like partial failure and asynchrony um but a lot of it also comes from the way",
    "start": "99920",
    "end": "106000"
  },
  {
    "text": "that we typically write these applications so consider some really conventional user facing application",
    "start": "106000",
    "end": "113240"
  },
  {
    "text": "that has a structure that looks something like this diagram over here we have a presentation layer some data",
    "start": "113240",
    "end": "119360"
  },
  {
    "text": "layer and um Core Business logic connecting the two to go about implementing such an application a",
    "start": "119360",
    "end": "126159"
  },
  {
    "text": "developer typically has to spread application logic across some front end",
    "start": "126159",
    "end": "131200"
  },
  {
    "text": "um they have to write some serers side code and then some additional code to handle interactions with a",
    "start": "131200",
    "end": "137959"
  },
  {
    "text": "database um so there's a lot of components here to keep track of um and to get these components working together",
    "start": "137959",
    "end": "144280"
  },
  {
    "text": "correctly a developer has to handle things like network communication um",
    "start": "144280",
    "end": "149920"
  },
  {
    "text": "data serialization and format conversion and in this process they may have to develop or sorry use multiple",
    "start": "149920",
    "end": "156519"
  },
  {
    "text": "programming languages and environments so it'd be great if we could abstract away some of this",
    "start": "156519",
    "end": "163519"
  },
  {
    "text": "complexity and today or there have been a variety of approaches to this question over the years um but today I want to",
    "start": "163519",
    "end": "170480"
  },
  {
    "text": "talk about one approach that focuses on allowing developers to write their application as a single",
    "start": "170480",
    "end": "177440"
  },
  {
    "text": "program so this is a paradigm called multi-tier programming and it originates",
    "start": "177440",
    "end": "182720"
  },
  {
    "text": "from the programming languages community so in multi-tier programming a developer writes the replication as one",
    "start": "182720",
    "end": "190120"
  },
  {
    "text": "program that then gets compiled into a distributed system and in a multi-tier program the",
    "start": "190120",
    "end": "197360"
  },
  {
    "text": "application logic is typically expressed in terms of The Logical layers or tiers within the application um and then a",
    "start": "197360",
    "end": "204640"
  },
  {
    "text": "compiler will use this tier information to produce a set of independently Deployable compilation units that",
    "start": "204640",
    "end": "211439"
  },
  {
    "text": "together make a distributed system so to illustrate what this multi-tier programming process looks",
    "start": "211439",
    "end": "218280"
  },
  {
    "text": "like let's consider some simple distributed chat application where clients can submit messages to some",
    "start": "218280",
    "end": "224720"
  },
  {
    "text": "public Message Board I'm going to walk through what it looks like to program this application in a language called",
    "start": "224720",
    "end": "230599"
  },
  {
    "text": "Scala Loki which is a modern multi-tier language um based on",
    "start": "230599",
    "end": "236400"
  },
  {
    "text": "Scola so to write our Scola Loki chat app the first thing that we'll do is declare The Logical server part of our",
    "start": "236400",
    "end": "244000"
  },
  {
    "text": "application um for the client part we'll do the same thing using what's called a peer type in scholar Loki so this is",
    "start": "244000",
    "end": "250720"
  },
  {
    "text": "scholar Loki's concept for The Logical tiers of an application and in this language we can also specify how these",
    "start": "250720",
    "end": "256959"
  },
  {
    "text": "tiers relate to each other architecturally so here we're specifying that there's a many toone relationship",
    "start": "256959",
    "end": "262479"
  },
  {
    "text": "between client and server and then to handle clients",
    "start": "262479",
    "end": "267840"
  },
  {
    "text": "submitting messages to the public message board we can use what's called a placement type in Scala Loki so in this language",
    "start": "267840",
    "end": "275680"
  },
  {
    "text": "both data and functions can be declared with respect to a tier so here we're",
    "start": "275680",
    "end": "281400"
  },
  {
    "text": "working under a reactive programming Paradigm and declaring um an event type",
    "start": "281400",
    "end": "286440"
  },
  {
    "text": "that we're calling message and it's been declared with respect to the client here and then we're also writing a main",
    "start": "286440",
    "end": "293600"
  },
  {
    "text": "routine that's similarly placed on the client in which we're going to be reading lines from standard in and",
    "start": "293600",
    "end": "298800"
  },
  {
    "text": "firing off these message events now to handle collecting these messages into a public message board",
    "start": "298800",
    "end": "306120"
  },
  {
    "text": "we're going to use another placement type but this time on the server and we're calling this one public message",
    "start": "306120",
    "end": "312039"
  },
  {
    "text": "and note how in the definition of the public message placement type we're referencing the message placement type",
    "start": "312039",
    "end": "318759"
  },
  {
    "text": "which is on the client so in doing so we're implicitly defining the communication protocol between the",
    "start": "318759",
    "end": "324440"
  },
  {
    "text": "client part of our application and the server part so we have one more step to take",
    "start": "324440",
    "end": "330240"
  },
  {
    "text": "care of which is serving these public message the public Message Board back to each client and we're going to follow",
    "start": "330240",
    "end": "335520"
  },
  {
    "text": "the same pattern here we're going to make a reference to the public message placement type from within that main",
    "start": "335520",
    "end": "341800"
  },
  {
    "text": "routine that we defined on the client and this is defining how data flows back from the server to the client and this",
    "start": "341800",
    "end": "349880"
  },
  {
    "text": "is our full program we're done implementing our distributed chat app in Scala Loki and about a dozen lines of",
    "start": "349880",
    "end": "356639"
  },
  {
    "text": "code so this is pretty great we're operating at a much higher level of abstraction um than we would be if we",
    "start": "356639",
    "end": "362880"
  },
  {
    "text": "were doing this the microservices way and throughout this process we were able to entirely avoid any plumbing code",
    "start": "362880",
    "end": "370080"
  },
  {
    "text": "there's no RPC boiler plate in here all of that stuff is taken care of for us by the",
    "start": "370080",
    "end": "375919"
  },
  {
    "text": "compiler so pretty cool right I should say this is just one example demo app",
    "start": "375919",
    "end": "382120"
  },
  {
    "text": "this is one multi-tier language the things that we see here won't necessarily generalize to the types of",
    "start": "382120",
    "end": "388039"
  },
  {
    "text": "applications that we're writing say at our day jobs um and part of this is due",
    "start": "388039",
    "end": "393280"
  },
  {
    "text": "to one of the limitations of the multi-tier approach in that the approach is pretty reliant on tiers already being",
    "start": "393280",
    "end": "401160"
  },
  {
    "text": "evident in the structure of your application so this Paradigm doesn't work as well for more General",
    "start": "401160",
    "end": "407080"
  },
  {
    "text": "applications where the inherent structure can be a little bit more arbitrary um but I do want to call out a",
    "start": "407080",
    "end": "414400"
  },
  {
    "text": "style of framework that shares a lot of similar goals to multi-tier programming but have typic been targeted more",
    "start": "414400",
    "end": "420520"
  },
  {
    "text": "towards Enterprise use cases so I guess you could call the style of framework a framework for",
    "start": "420520",
    "end": "427199"
  },
  {
    "text": "building distributed component applications where here the idea is that developers encapsulate their application",
    "start": "427199",
    "end": "434280"
  },
  {
    "text": "logic into some pre-defined Frameworks and then some runtime is going to figure out how to deploy and ultimately",
    "start": "434280",
    "end": "440479"
  },
  {
    "text": "integrate those components as a distributed system so some notable examples of this",
    "start": "440479",
    "end": "446639"
  },
  {
    "text": "style of framework were developed in the 9s Microsoft soft's distributed component object model you may have",
    "start": "446639",
    "end": "452160"
  },
  {
    "text": "heard of Enterprise Java beans um and even just last year Google announced a framework in the style called service",
    "start": "452160",
    "end": "460680"
  },
  {
    "text": "Weaver but this style of framework does come with its own set of challenges one of the big ones is that it imposes a",
    "start": "460680",
    "end": "466639"
  },
  {
    "text": "pretty rigid application um structure um on the types of apps that it's that you",
    "start": "466639",
    "end": "472039"
  },
  {
    "text": "can um build with it and also using a framework like this typically requires",
    "start": "472039",
    "end": "477599"
  },
  {
    "text": "committing to a certain uh ecosystem or some set of apis that can make it",
    "start": "477599",
    "end": "482759"
  },
  {
    "text": "otherwise pretty challenging to integrate apps built this way with the services that you're already running or",
    "start": "482759",
    "end": "488440"
  },
  {
    "text": "the code that you already have um and historically these types of Frameworks haven't really seen super",
    "start": "488440",
    "end": "494960"
  },
  {
    "text": "widespread adoption but I still think it's interesting to think about some of these",
    "start": "494960",
    "end": "501319"
  },
  {
    "text": "ideas we've just reviewed and contemplate how we might apply them to the apps that we're already writing in",
    "start": "501319",
    "end": "507639"
  },
  {
    "text": "our day-to-day lives or the apps that we're currently using kubernetes to um",
    "start": "507639",
    "end": "513919"
  },
  {
    "text": "manage how might we use some of these ideas to make it so that we don't even have to worry about the microservices",
    "start": "513919",
    "end": "520479"
  },
  {
    "text": "part of the applications that we're writing or rather what if some of these ideas could be used to allow us to keep",
    "start": "520479",
    "end": "527360"
  },
  {
    "text": "the architectural benefits of microservices but preserve the Simplicity of writing our applications",
    "start": "527360",
    "end": "533279"
  },
  {
    "text": "as if they were monoliths so these questions lead me to the title question of our talk what if",
    "start": "533279",
    "end": "540240"
  },
  {
    "text": "kubernetes was a compiler Target and for an answer to that question I'm now going",
    "start": "540240",
    "end": "546120"
  },
  {
    "text": "to pass it off to my colleague David um who has a live demo prepared for us cool",
    "start": "546120",
    "end": "551880"
  },
  {
    "text": "um thanks for the overview there um before I go into the demo um I just want",
    "start": "551880",
    "end": "557920"
  },
  {
    "text": "to uh talk to you about what you're about to see so you might recall this",
    "start": "557920",
    "end": "563120"
  },
  {
    "text": "diagram uh from a few slides ago um where our multi-tier program gets",
    "start": "563120",
    "end": "568640"
  },
  {
    "text": "converted in into separate binaries by a multi-tier compiler um and these run in",
    "start": "568640",
    "end": "574200"
  },
  {
    "text": "different locations so you might run in the browser or on the jvm um more generally uh we think of like your",
    "start": "574200",
    "end": "581160"
  },
  {
    "text": "presentation tier your business logic tier and your data tier um what we find",
    "start": "581160",
    "end": "586800"
  },
  {
    "text": "is that uh companies that are running on top of kubernetes still mentally are",
    "start": "586800",
    "end": "593120"
  },
  {
    "text": "architecting or thinking about their application in terms of these three tiers but the microservice that they're",
    "start": "593120",
    "end": "600000"
  },
  {
    "text": "actually writing uh don't necessarily fall into those like cleanly defined buckets um you just have a whole bunch",
    "start": "600000",
    "end": "606600"
  },
  {
    "text": "of PODS that are running on your cluster somewhere so the idea is uh let's throw",
    "start": "606600",
    "end": "612519"
  },
  {
    "text": "that out and let's use this diagram instead so here you've got your program",
    "start": "612519",
    "end": "617800"
  },
  {
    "text": "um we've got some sort of compiler that's going to take our program and it's going to turn it into kubernetes",
    "start": "617800",
    "end": "625320"
  },
  {
    "text": "applications and so the unit of execution for multi-tier programming is",
    "start": "625320",
    "end": "631519"
  },
  {
    "text": "the binary like the application binary that gets run somewhere uh and you can think of for kubernetes the unit of",
    "start": "631519",
    "end": "638160"
  },
  {
    "text": "execution is your container and so our kubernetes compiler is going to take a single code base and it's going to",
    "start": "638160",
    "end": "644360"
  },
  {
    "text": "convert it into container images that can be deployed onto your kubernetes",
    "start": "644360",
    "end": "650480"
  },
  {
    "text": "cluster so there's a whole bunch of different ways that you can do this um I'm not the first to have this idea I'm",
    "start": "650519",
    "end": "657680"
  },
  {
    "text": "definitely not going to be the last uh what I'm doing in this demo is targeting goang specifically um goang is a really",
    "start": "657680",
    "end": "664720"
  },
  {
    "text": "cool language it's got a lot of neat ideas um I think the defining uh characteristic the reason",
    "start": "664720",
    "end": "671240"
  },
  {
    "text": "why go is so popular and so successful is because it makes concurrency super easy um it's very easy to spin up a new",
    "start": "671240",
    "end": "677880"
  },
  {
    "text": "go routine and just take advantage of all of the threads and all of the cores on your machine and so the key idea in",
    "start": "677880",
    "end": "686040"
  },
  {
    "text": "the project I'm going to show you today is we're going to take those go and we're going to turn them into kubernetes pods okay so now we're",
    "start": "686040",
    "end": "694720"
  },
  {
    "text": "running stuff on different nodes but we still have to have some way of communicating back and forth in go this",
    "start": "694720",
    "end": "700120"
  },
  {
    "text": "is done through channels so we're going to take those channels and we're going to convert them into Network requests",
    "start": "700120",
    "end": "705920"
  },
  {
    "text": "easy peasy now you've taken a program that can run on a single machine and now you can run it on your",
    "start": "705920",
    "end": "712360"
  },
  {
    "text": "cluster so let's go ahead and take a look at what that looks like so um I'm",
    "start": "712360",
    "end": "718399"
  },
  {
    "text": "going to preface this again uh everything I'm showing you here is real uh there's no like uh there's no like",
    "start": "718399",
    "end": "725680"
  },
  {
    "text": "magic demo uh sauce that like isn't going to work in a real cluster or something like that however uh it",
    "start": "725680",
    "end": "733480"
  },
  {
    "text": "probably only works in this specific setting so this isn't even like Alpha code this is like pre pre pre-alpha code",
    "start": "733480",
    "end": "741360"
  },
  {
    "text": "okay uh so just to just so that we're all in the same page there yeah um but imagine that you are writing some sort",
    "start": "741360",
    "end": "747959"
  },
  {
    "text": "of a pho photo proc processing app um I'm going to show you some example code",
    "start": "747959",
    "end": "753160"
  },
  {
    "text": "here um we've written this code in go um and this is going to look I think pretty",
    "start": "753160",
    "end": "759079"
  },
  {
    "text": "familiar to you um we've got our main entry point here um your users can",
    "start": "759079",
    "end": "764199"
  },
  {
    "text": "upload photos to this application and we do some sort of resource intensive",
    "start": "764199",
    "end": "770279"
  },
  {
    "text": "processing so here you can see we've established an endpoint that our users can hit um and it calls this upload",
    "start": "770279",
    "end": "777440"
  },
  {
    "text": "image um in here we do a little bit of request validation uh in a like",
    "start": "777440",
    "end": "782800"
  },
  {
    "text": "Production service you can imagine you're doing user authentication all this other stuff before you get to the",
    "start": "782800",
    "end": "787920"
  },
  {
    "text": "actual like processing part of your application um but when you get down to",
    "start": "787920",
    "end": "793480"
  },
  {
    "text": "the processing part you spin that out in a go routine um the reason why you might want to do that is uh it's resource",
    "start": "793480",
    "end": "799560"
  },
  {
    "text": "intensive you don't want your user to sit and wait 10 seconds or a minute or 5",
    "start": "799560",
    "end": "805120"
  },
  {
    "text": "minutes for that Network request to complete before uh they get some indication of whether this is going to",
    "start": "805120",
    "end": "811079"
  },
  {
    "text": "succeed or not so you spin that off and then we immediately return to the user a",
    "start": "811079",
    "end": "816199"
  },
  {
    "text": "job ID um and they can check this out uh and say like okay here's your job ID check it out when it's finished and uh",
    "start": "816199",
    "end": "823480"
  },
  {
    "text": "you'll get your photo back so I actually have this running right now um this is a local cluster",
    "start": "823480",
    "end": "831279"
  },
  {
    "text": "that's running on my laptop um you could imagine of course this is running in the cloud um this is a pod that's running",
    "start": "831279",
    "end": "839160"
  },
  {
    "text": "the same code that I just show you um I'm also over here I've set up port forwarding so that I can actually access",
    "start": "839160",
    "end": "845040"
  },
  {
    "text": "the Pod um and let's go ahead and try it out okay so I've posted an image to this",
    "start": "845040",
    "end": "853680"
  },
  {
    "text": "pod it immediately returns back a job ID and again this is all running",
    "start": "853680",
    "end": "859360"
  },
  {
    "text": "locally you can see that it's now returned an image that has done some",
    "start": "859360",
    "end": "865360"
  },
  {
    "text": "sort of processing this is the image that I uploaded uh this is my avatar are on all the socials so if you see this",
    "start": "865360",
    "end": "871320"
  },
  {
    "text": "it's me um we can come over here and hey it processed the image it's like half to",
    "start": "871320",
    "end": "877399"
  },
  {
    "text": "size now or something okay um and you know I could show this is taking a little bit of time",
    "start": "877399",
    "end": "884120"
  },
  {
    "text": "right like it's really really hard to resize this",
    "start": "884120",
    "end": "889560"
  },
  {
    "text": "image really hard oh there it is we're all done okay cool so you've built this",
    "start": "889639",
    "end": "896560"
  },
  {
    "text": "application uh and you're getting some users and you're getting a lot of traction and all of a sudden you can't",
    "start": "896560",
    "end": "903560"
  },
  {
    "text": "run it locally anymore um you need to somehow take this application and split",
    "start": "903560",
    "end": "908720"
  },
  {
    "text": "it up so that it can run in a distributed context uh so that you can handle all of the load that you're",
    "start": "908720",
    "end": "914480"
  },
  {
    "text": "getting so you could spin up a whole platform team to uh you know uh manage",
    "start": "914480",
    "end": "920440"
  },
  {
    "text": "your kubernetes infrastructure and then you could spin up all of these teams to handle all of the different",
    "start": "920440",
    "end": "925880"
  },
  {
    "text": "microservices or you could not do that um that'd be cool to um so what I'm going to show you here is how you can",
    "start": "925880",
    "end": "932560"
  },
  {
    "text": "compile this application directly to kubernetes so here uh compile is the",
    "start": "932560",
    "end": "940440"
  },
  {
    "text": "kubernetes compiler that we've written um and you can see that I'm passing in uh the same source file that we had",
    "start": "940440",
    "end": "946560"
  },
  {
    "text": "before um actually before I run that I'm just going to show you that this is doing real stuff uh this is the output",
    "start": "946560",
    "end": "952720"
  },
  {
    "text": "directory where uh these binaries are going to get created you can see there's nothing there right now",
    "start": "952720",
    "end": "959519"
  },
  {
    "text": "okay so the first thing that it's doing is it's looking for go routines in my",
    "start": "959519",
    "end": "964839"
  },
  {
    "text": "source file and it's you know it's actually like parsing the Go a to find",
    "start": "964839",
    "end": "970959"
  },
  {
    "text": "these go routines and doing like a it's basically doing a big find and replace um it finds one and it replaces that",
    "start": "970959",
    "end": "977399"
  },
  {
    "text": "with a create pod request and it replaces any channels that it finds with HTTP and points Okay and like I said",
    "start": "977399",
    "end": "985639"
  },
  {
    "text": "before uh the unit of execution for kubernetes is a container and so not",
    "start": "985639",
    "end": "991040"
  },
  {
    "text": "only are we doing this parsing we're also building Docker images for the two",
    "start": "991040",
    "end": "997199"
  },
  {
    "text": "binaries or the two applications that we're now going to be running so if we go back into our output",
    "start": "997199",
    "end": "1004759"
  },
  {
    "text": "directory you can see that we've now created two distinct applications um one of these I'm calling",
    "start": "1004759",
    "end": "1011519"
  },
  {
    "text": "the controller this is like the entry point that your user is going to interact with your service with so again",
    "start": "1011519",
    "end": "1016920"
  },
  {
    "text": "this is going to be the URL that I uh curl uh to process my photos and the",
    "start": "1016920",
    "end": "1022639"
  },
  {
    "text": "other is the actual like hard part this is where this is the thing that's doing all of the work so let's look at the",
    "start": "1022639",
    "end": "1028520"
  },
  {
    "text": "code in the controller for a minute okay so here you can see uh this",
    "start": "1028520",
    "end": "1035360"
  },
  {
    "text": "looks sort of similar uh we still have our main function here um it is still",
    "start": "1035360",
    "end": "1040880"
  },
  {
    "text": "registering an upload endpoint um that you can post images to um and let's look",
    "start": "1040880",
    "end": "1047558"
  },
  {
    "text": "and see what that functions now doing um again we're doing like our request validation over here um this big block",
    "start": "1047559",
    "end": "1054919"
  },
  {
    "text": "of code right here used to be our go routine call now uh we're doing something different we are creating a",
    "start": "1054919",
    "end": "1062200"
  },
  {
    "text": "kubernetes pod we're waiting for that to come up and then we are sending all of",
    "start": "1062200",
    "end": "1067640"
  },
  {
    "text": "the photo data over HTTP to that pod now you recall that the Pod that the uh",
    "start": "1067640",
    "end": "1073880"
  },
  {
    "text": "process also returns a job ID which immediately gets returned back to the user so they can check on the progress",
    "start": "1073880",
    "end": "1079679"
  },
  {
    "text": "of their application um the way that that works is we're Now setting up a",
    "start": "1079679",
    "end": "1084880"
  },
  {
    "text": "separate HTTP endpoint for the reverse communication this is all done again",
    "start": "1084880",
    "end": "1090760"
  },
  {
    "text": "programmatically okay and then we can take oops sorry uh we can take a brief look at the",
    "start": "1090760",
    "end": "1098480"
  },
  {
    "text": "sort of service code um this is now uh a full",
    "start": "1098480",
    "end": "1105840"
  },
  {
    "text": "application so it has a entry point has you know a main function um we're",
    "start": "1105840",
    "end": "1111440"
  },
  {
    "text": "establishing an HTTP endpoint that can be used sort of internally in our cluster and up here we're doing all of",
    "start": "1111440",
    "end": "1117919"
  },
  {
    "text": "the hard work of resizing our image so what I'm going to",
    "start": "1117919",
    "end": "1123480"
  },
  {
    "text": "do is I'm going to now deploy this to my",
    "start": "1124440",
    "end": "1132519"
  },
  {
    "text": "cluster okay so you can see now I've got two different things running here uh this demo down here this is the original",
    "start": "1133919",
    "end": "1141039"
  },
  {
    "text": "app that I showed you before um controller is now the new thing that I",
    "start": "1141039",
    "end": "1146559"
  },
  {
    "text": "just compiled okay what I'm going to do over here is I'm going to Now set up",
    "start": "1146559",
    "end": "1152640"
  },
  {
    "text": "port forwarding for the controller okay and we're going to make",
    "start": "1152640",
    "end": "1160200"
  },
  {
    "text": "the same network request that we did before takes a little bit longer but then it immediately returns back a job",
    "start": "1160200",
    "end": "1166760"
  },
  {
    "text": "ID okay that's kind of cool uh so what's going on under the hood let's take a now you see oh there's a new pod um it's",
    "start": "1166760",
    "end": "1175679"
  },
  {
    "text": "running and it succeeded so we can actually look at our",
    "start": "1175679",
    "end": "1181600"
  },
  {
    "text": "like abstracts or like our data storage again this is on my laptop imagine this is S3 or something like that okay now",
    "start": "1181600",
    "end": "1188320"
  },
  {
    "text": "here we've got the new uh photo that we just processed okay we can do that a",
    "start": "1188320",
    "end": "1193640"
  },
  {
    "text": "bunch of times",
    "start": "1193640",
    "end": "1197000"
  },
  {
    "text": "I don't know how many how many copies of this photo do you want me to process eight eight uh what is this",
    "start": "1200679",
    "end": "1208360"
  },
  {
    "text": "six seven eight I'm not doing 100 sorry okay but look uh we now have all",
    "start": "1208360",
    "end": "1216440"
  },
  {
    "text": "of these pods that have been spun up uh to process our images um as soon as",
    "start": "1216440",
    "end": "1222000"
  },
  {
    "text": "they're done processing the image they shut down so another way you can think about this is like uh compiling into",
    "start": "1222000",
    "end": "1229120"
  },
  {
    "text": "functions as a service right this is a like different way of doing Lambda functions for example we spin up the Pod",
    "start": "1229120",
    "end": "1235400"
  },
  {
    "text": "when we need it as soon as it's done then it shuts down and I don't know if you believe me or",
    "start": "1235400",
    "end": "1241120"
  },
  {
    "text": "not hopefully you do but look all all the images are here now okay",
    "start": "1241120",
    "end": "1248760"
  },
  {
    "text": "Tada so just to wrap up um want to talk a little bit about what we learned um Tim you know started off talking about",
    "start": "1251520",
    "end": "1257880"
  },
  {
    "text": "multier program programming um which is this idea of taking one program and",
    "start": "1257880",
    "end": "1263720"
  },
  {
    "text": "compiling it into different tiers um this is not multi-tier programming compile the thing I just showed you is",
    "start": "1263720",
    "end": "1270000"
  },
  {
    "text": "not that but it's very very closely related ideas um and one of the things that uh one of",
    "start": "1270000",
    "end": "1277120"
  },
  {
    "text": "the challenges that we've run into with this programming Paradigm a lot in the past is it requires really specialized",
    "start": "1277120",
    "end": "1284000"
  },
  {
    "text": "tools or specialized programming languages or like going into like",
    "start": "1284000",
    "end": "1289919"
  },
  {
    "text": "structuring your application code in a very particular way or like annotating it in comments or something like that uh",
    "start": "1289919",
    "end": "1295480"
  },
  {
    "text": "Tim mentioned service weav which is this thing that Google put out uh super cool project uh was really excited when they",
    "start": "1295480",
    "end": "1301840"
  },
  {
    "text": "announced it um the highlighted bit here is I",
    "start": "1301840",
    "end": "1310799"
  },
  {
    "text": "think the important part uh service Weaver is being shut down because it was hard for users to adopt service Weaver",
    "start": "1310799",
    "end": "1316720"
  },
  {
    "text": "directly because it required reite rewriting large parts of existing",
    "start": "1316720",
    "end": "1322080"
  },
  {
    "text": "applications um so this is the same thing that you know Tim and I have both sort of pointed out um less than a week",
    "start": "1322080",
    "end": "1329159"
  },
  {
    "text": "ago yeah this was like last week um and this is not like like this is not a Google shuts everything down thing uh",
    "start": "1329159",
    "end": "1336200"
  },
  {
    "text": "this is like Google has some really really smart people working on this um and this is super cool Tech um this is",
    "start": "1336200",
    "end": "1343039"
  },
  {
    "text": "just pointing out that this is a really hard problem that's still like open like",
    "start": "1343039",
    "end": "1348679"
  },
  {
    "text": "nobody knows how to solve this like I don't know how to solve this like I did it in this demo app thing but like you can't take that and run it on any real",
    "start": "1348679",
    "end": "1355039"
  },
  {
    "text": "production code um so what I really am hoping that you all take away from this talk is uh there are programming",
    "start": "1355039",
    "end": "1361760"
  },
  {
    "text": "paradigms that we haven't come up with yet uh kubernetes has become the platform that we're running our stuff on",
    "start": "1361760",
    "end": "1368679"
  },
  {
    "text": "now I want to try to think about what are the programming paradigms that support the platform or that can use",
    "start": "1368679",
    "end": "1375240"
  },
  {
    "text": "that platform so again the thing that we wrote compile uh this shows a way that",
    "start": "1375240",
    "end": "1381760"
  },
  {
    "text": "we could do it for a generic programming language like go I make no claims that",
    "start": "1381760",
    "end": "1388279"
  },
  {
    "text": "this is the way to do it but uh again I really hope to kind of inspire you to",
    "start": "1388279",
    "end": "1393360"
  },
  {
    "text": "think outside the box about uh what we can be doing here um one consequence of doing",
    "start": "1393360",
    "end": "1400279"
  },
  {
    "text": "something like compile is that uh we're going to be writing a lot less yaml um",
    "start": "1400279",
    "end": "1406480"
  },
  {
    "text": "because the compiler is going to do all of that for you and I know that makes all the yaml engineers in here really",
    "start": "1406480",
    "end": "1412600"
  },
  {
    "text": "sad so sorry about that um we're going to wrap up we've got",
    "start": "1412600",
    "end": "1418279"
  },
  {
    "text": "about 10 minutes left uh if there are any questions uh this is not a comprehensive list or literature survey",
    "start": "1418279",
    "end": "1426400"
  },
  {
    "text": "of multi-tier programming or any like any of the related fields um this is just a starting point so the top thing",
    "start": "1426400",
    "end": "1433039"
  },
  {
    "text": "there is a survey paper that discusses uh scal Loki and a whole bunch of these other different types of multi-tier",
    "start": "1433039",
    "end": "1439679"
  },
  {
    "text": "efforts um that second link there is actually like the schola Loki paper so if you want to learn more about that and",
    "start": "1439679",
    "end": "1445600"
  },
  {
    "text": "then there's they have a whole like uh website where you can go and like write some sample applications and stuff like",
    "start": "1445600",
    "end": "1451520"
  },
  {
    "text": "that um the third paper there is Google service Weaver paper uh definitely read that it's super cool um and then the",
    "start": "1451520",
    "end": "1458000"
  },
  {
    "text": "last link there is just a link to our GitHub where I have all of the source code for this demo um so that's all that",
    "start": "1458000",
    "end": "1465399"
  },
  {
    "text": "we have today uh would love to take any questions that you have [Applause]",
    "start": "1465399",
    "end": "1476799"
  },
  {
    "text": "uh there's a I think a microphone um if uh folks can queue up over",
    "start": "1476799",
    "end": "1482200"
  },
  {
    "text": "there how Hey so uh a little bit of lore",
    "start": "1482200",
    "end": "1487960"
  },
  {
    "text": "about David uh he wrote a blog post about this in the internal Yelp",
    "start": "1487960",
    "end": "1494720"
  },
  {
    "text": "Confluence about 2 or 3 years ago maybe a little longer than that years yeah so",
    "start": "1494720",
    "end": "1501320"
  },
  {
    "text": "it is super cool to see this come together um certainly something that you've all been working on for quite",
    "start": "1501320",
    "end": "1507080"
  },
  {
    "text": "some time the question I have is actually around where you see the limits like where is the ceiling for this or do",
    "start": "1507080",
    "end": "1514799"
  },
  {
    "text": "you actually see this becoming something that you can write arbitrary line of business software",
    "start": "1514799",
    "end": "1520720"
  },
  {
    "text": "around um really good question uh I think the limits that we're like the",
    "start": "1520720",
    "end": "1526960"
  },
  {
    "text": "current limits that we're struggling with is like even with what I showed you you would have to structure your program",
    "start": "1526960",
    "end": "1532399"
  },
  {
    "text": "in a fairly specific way for it to work um it's looking for channels and go",
    "start": "1532399",
    "end": "1539240"
  },
  {
    "text": "routines but if you don't like if they're in different function blocks or if they're in like different you know",
    "start": "1539240",
    "end": "1545440"
  },
  {
    "text": "sort of source files or something like that that's not going to it's not going to work in that environment so figuring out like how to connect all the pieces",
    "start": "1545440",
    "end": "1552880"
  },
  {
    "text": "without having to massively restructure your source code I think is a huge challenge um um the second challenge",
    "start": "1552880",
    "end": "1560320"
  },
  {
    "text": "that so like let's say we solve that um the second challenge that uh I think is",
    "start": "1560320",
    "end": "1566880"
  },
  {
    "text": "still sort of unanswered is like is this actually a good idea um there are so the",
    "start": "1566880",
    "end": "1573720"
  },
  {
    "text": "monolith versus microservices thing is partly a tech thing but it's also partly",
    "start": "1573720",
    "end": "1579440"
  },
  {
    "text": "a people thing like we split things into microservices so that teams have like a defined chunk of code that they can own",
    "start": "1579440",
    "end": "1585840"
  },
  {
    "text": "and iterate on without having to to uh worry about like the code that's over",
    "start": "1585840",
    "end": "1591480"
  },
  {
    "text": "here and so um this doesn't solve the like people and the team's side of this",
    "start": "1591480",
    "end": "1597039"
  },
  {
    "text": "this is just a tech thing and so I think that's a huge challenge we still need to understand so I guess one follow on",
    "start": "1597039",
    "end": "1602320"
  },
  {
    "text": "question for you David um let's assume that we have a yucky but works way of",
    "start": "1602320",
    "end": "1609520"
  },
  {
    "text": "mapping between like go routines and channels and so on and the kinds of things you'd normally want to do in like",
    "start": "1609520",
    "end": "1615520"
  },
  {
    "text": "a nice boring web application framework what would be the advantages of running",
    "start": "1615520",
    "end": "1621440"
  },
  {
    "text": "that typical like jeno Python program in this model like where do you see the the",
    "start": "1621440",
    "end": "1628080"
  },
  {
    "text": "the upside being there so I think actually Tim if you want to jump in to like on stage um but uh I think that the",
    "start": "1628080",
    "end": "1638919"
  },
  {
    "text": "advantage comes from like now you can do these sorts of functions as a service thing kind of for",
    "start": "1638919",
    "end": "1645440"
  },
  {
    "text": "free or like we don't have to do functions as a service we could also write the compiler so that it just",
    "start": "1645440",
    "end": "1650600"
  },
  {
    "text": "creates a deployment uh that's doing your photo processing and now that thing",
    "start": "1650600",
    "end": "1655720"
  },
  {
    "text": "is getting scaled by HPA or by Keta or by whatever you want and so now like that bit is uh being independently",
    "start": "1655720",
    "end": "1663880"
  },
  {
    "text": "scaled and if we really wanted to be fancy you could theoretically take your compiler hook it into your Prometheus",
    "start": "1663880",
    "end": "1670919"
  },
  {
    "text": "metrics to identify the hotpots in your code and say okay this is the bit that I need to extract out so that we can take",
    "start": "1670919",
    "end": "1677799"
  },
  {
    "text": "advant of kubernetes and all this other stuff over here doesn't matter so leave it alone I do you have anything you want",
    "start": "1677799",
    "end": "1683600"
  },
  {
    "text": "to say that was what I was going to say pretty much it would be cool to Envision this thing being hooked up to like some gitops type thing where your program",
    "start": "1683600",
    "end": "1689880"
  },
  {
    "text": "gets recompiled in response to its performance metrics super thank you",
    "start": "1689880",
    "end": "1696200"
  },
  {
    "text": "belill hello uh I just I'm not a compiler writer but I was wondering uh",
    "start": "1696760",
    "end": "1701799"
  },
  {
    "text": "how do you write how do you write that compiler uh what do you use and so uh",
    "start": "1701799",
    "end": "1708159"
  },
  {
    "text": "goang actually comes built in with this really usable and great um as package",
    "start": "1708159",
    "end": "1714000"
  },
  {
    "text": "which allows you to um produce in goang the as structure of your program so as",
    "start": "1714000",
    "end": "1719559"
  },
  {
    "text": "stands for abstract syntax tree so the basic idea is like you write down like the characters um those get uh",
    "start": "1719559",
    "end": "1727320"
  },
  {
    "text": "translated into like more abstract Concepts inside the programming language and this forms a nice tree structure",
    "start": "1727320",
    "end": "1733120"
  },
  {
    "text": "that you can then parse and sort of walk through and then whenever you see like a like a channel or a go routine just put",
    "start": "1733120",
    "end": "1740519"
  },
  {
    "text": "in the the pots or or or the service yep so in more like traditional compiler",
    "start": "1740519",
    "end": "1747720"
  },
  {
    "text": "like programming language research you've got a bunch of phases you go through you go through like a parser and",
    "start": "1747720",
    "end": "1752960"
  },
  {
    "text": "a lexer and then like the compiler itself is doing multiple passes to sort",
    "start": "1752960",
    "end": "1758000"
  },
  {
    "text": "of do optimization and all these sorts of things um you could translate all of",
    "start": "1758000",
    "end": "1763559"
  },
  {
    "text": "those Concepts into this sort of framework as well oh okay",
    "start": "1763559",
    "end": "1768640"
  },
  {
    "text": "thank you uh I'm trying to figure out how to",
    "start": "1768640",
    "end": "1775799"
  },
  {
    "text": "not phrase this as a comment um comments are do do you think that um",
    "start": "1775799",
    "end": "1782240"
  },
  {
    "text": "the erlang runtime is an example of multi-tier",
    "start": "1782240",
    "end": "1788760"
  },
  {
    "text": "programming that's a good question I mean I think a lot of those like Enterprise Frameworks that I briefly",
    "start": "1788760",
    "end": "1794000"
  },
  {
    "text": "mentioned are heavily inspired by erlang or sort of this notion of of actors",
    "start": "1794000",
    "end": "1799679"
  },
  {
    "text": "being um location transparent um but I wouldn't say I mean",
    "start": "1799679",
    "end": "1805640"
  },
  {
    "text": "I haven't written too many programs purely in the actor model but I wouldn't say that erlang is fully multi-tier and",
    "start": "1805640",
    "end": "1814320"
  },
  {
    "text": "that I think it allows you to be pretty flexible with respect to how your application um can be structured whereas",
    "start": "1814320",
    "end": "1819960"
  },
  {
    "text": "multi-tier is kind of relying on these um implicit tier layer type things in",
    "start": "1819960",
    "end": "1827360"
  },
  {
    "text": "like the domain that you're working in awesome thank",
    "start": "1827360",
    "end": "1832799"
  },
  {
    "text": "you one more yeah we've got five minutes or first of all thank you very much for",
    "start": "1832799",
    "end": "1838320"
  },
  {
    "text": "expanding in the world of compilers this is something that most of the time private sector doesn't touch that's why",
    "start": "1838320",
    "end": "1844919"
  },
  {
    "text": "it's more academic it's super nebulous and that's actually the fundamental of",
    "start": "1844919",
    "end": "1850559"
  },
  {
    "text": "my question um I we here we we are mostly are um we apply engineering right",
    "start": "1850559",
    "end": "1858120"
  },
  {
    "text": "so we we are we we materialize um your ideas or stuff that the Architects have and my question is",
    "start": "1858120",
    "end": "1867440"
  },
  {
    "text": "we have been seeing like in the evolution of programming in general um how do we keep adding abstraction lay",
    "start": "1867440",
    "end": "1874799"
  },
  {
    "text": "layers and I'm glad you mentioned the the Java Enterprise approach I remember",
    "start": "1874799",
    "end": "1880519"
  },
  {
    "text": "it was a like kind of a huge Revolution because we were producing this war package that comes with the UI right",
    "start": "1880519",
    "end": "1886799"
  },
  {
    "text": "with the um with the back end and everything in just one package that the platform is able to to apply and only",
    "start": "1886799",
    "end": "1893840"
  },
  {
    "text": "that that thing was like very um it it was like a huge event but also brought a",
    "start": "1893840",
    "end": "1900600"
  },
  {
    "text": "whole new problem in organizations where we are adding more Boulder plate um in",
    "start": "1900600",
    "end": "1905720"
  },
  {
    "text": "such a point that it's making it hard to deag so imagine this level of abstraction you are presenting here um I",
    "start": "1905720",
    "end": "1913000"
  },
  {
    "text": "agree it's amazing it's it's very nice I really like it and and thank you to dedicate time to this because it's it's",
    "start": "1913000",
    "end": "1918919"
  },
  {
    "text": "really somebody needs to do it otherwise we're going to be stuck so you you guys",
    "start": "1918919",
    "end": "1924080"
  },
  {
    "text": "clap for you but how do you visualize a future where we have this level of abstraction in terms of",
    "start": "1924080",
    "end": "1931240"
  },
  {
    "text": "um uh the baging and and problem solving should we like be very positive and",
    "start": "1931240",
    "end": "1938360"
  },
  {
    "text": "think maybe AI will fix the back this for us in the future I don't know yes conjecture rating I",
    "start": "1938360",
    "end": "1945799"
  },
  {
    "text": "mean we already have a crazy amount of abstraction in just",
    "start": "1945799",
    "end": "1952559"
  },
  {
    "text": "kubernetes um the amount of like yaml that gets translated to control loops",
    "start": "1952559",
    "end": "1958440"
  },
  {
    "text": "under the hood somewhere that we don't know how to debug is pretty overwhelming",
    "start": "1958440",
    "end": "1963720"
  },
  {
    "text": "um so I would say that like I don't think that abstraction is bad um I think",
    "start": "1963720",
    "end": "1968799"
  },
  {
    "text": "you have to Target your abstraction really carefully and so I make no claims that this is the",
    "start": "1968799",
    "end": "1975840"
  },
  {
    "text": "like right way to Target your abstraction this this is a way that you can do it um I don't know that we as",
    "start": "1975840",
    "end": "1982080"
  },
  {
    "text": "distributed systems Engineers I don't know if we actually know what the right abstractions are for the code that we",
    "start": "1982080",
    "end": "1987279"
  },
  {
    "text": "want to write and I think one interesting thing with distributed systems is there are some abstractions",
    "start": "1987279",
    "end": "1994000"
  },
  {
    "text": "that are never going to not leak like you can't mask partial failure over the network some approaches like I'm not",
    "start": "1994000",
    "end": "2001200"
  },
  {
    "text": "super familiar with actually coding in Enterprise Java beans but I think a lot of those types of systems um were really",
    "start": "2001200",
    "end": "2006919"
  },
  {
    "text": "hard to debug because when you don't know what's a function call versus a network request you can get really unpredictable performance um to name an",
    "start": "2006919",
    "end": "2014760"
  },
  {
    "text": "example so I think I mean this is just a prototype but if we were to continue working on this we'd try to not pretend",
    "start": "2014760",
    "end": "2021799"
  },
  {
    "text": "like the network isn't there anymore we' try and be maybe a little more transparent about a about your prototype",
    "start": "2021799",
    "end": "2029200"
  },
  {
    "text": "it's in the way it is and if you can make reliably work in the way it is",
    "start": "2029200",
    "end": "2034480"
  },
  {
    "text": "without adding anything else this this could perfectly be a an option for something like airf flow",
    "start": "2034480",
    "end": "2041600"
  },
  {
    "text": "you can Define your jobs you know you don't need to use it's I see value on this like in the way",
    "start": "2041600",
    "end": "2047559"
  },
  {
    "text": "it is like it's amazing so great job guys thank you I think we have time for one more",
    "start": "2047559",
    "end": "2053079"
  },
  {
    "text": "question sure uh to follow up with like the erline question uh functional",
    "start": "2053079",
    "end": "2058919"
  },
  {
    "text": "programming has a a rich history of uh uh static analysis and program",
    "start": "2058919",
    "end": "2064040"
  },
  {
    "text": "transformation based techniques to turn what does not not have description of",
    "start": "2064040",
    "end": "2069320"
  },
  {
    "text": "multi-tier like explicit multi-tier annotations into something that looks like multi-tier have you looked at that",
    "start": "2069320",
    "end": "2075280"
  },
  {
    "text": "at all when you were discussing uh is this a good idea going forward of uh",
    "start": "2075280",
    "end": "2080358"
  },
  {
    "text": "what kind of programs could be transformed this way I guess we haven't fully discussed",
    "start": "2080359",
    "end": "2087240"
  },
  {
    "text": "next steps since we've been sort of only focusing on the go routine use case",
    "start": "2087240",
    "end": "2092358"
  },
  {
    "text": "where that's the only type of thing we're swapping out um but like in this survey of multier programming",
    "start": "2092359",
    "end": "2098200"
  },
  {
    "text": "paper there's a lot of techniques discussed that combine static analysis with maybe some type system features and",
    "start": "2098200",
    "end": "2104560"
  },
  {
    "text": "some languages also use user annotations um so I guess for our prototype maybe as",
    "start": "2104560",
    "end": "2109760"
  },
  {
    "text": "it approaches an alpha release or something we could Envision us sprinkling in user annotations are",
    "start": "2109760",
    "end": "2114960"
  },
  {
    "text": "getting a little bit more structure in there to make the compiler part more powerful cool thanks we're out of time",
    "start": "2114960",
    "end": "2121640"
  },
  {
    "text": "uh I'll just say I love static analysis so I think that's a really great idea so thank you",
    "start": "2121640",
    "end": "2127430"
  },
  {
    "text": "[Applause]",
    "start": "2127430",
    "end": "2134000"
  }
]