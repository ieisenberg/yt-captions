[
  {
    "start": "0",
    "end": "127000"
  },
  {
    "text": "okay we're just going to go through some introductions and some slides and give",
    "start": "210",
    "end": "6359"
  },
  {
    "text": "you some rationale for what's actually going on here and then by that time hopefully everybody will have at least",
    "start": "6359",
    "end": "11700"
  },
  {
    "text": "managed to resolve the DNS they were looking for right after you sir",
    "start": "11700",
    "end": "16730"
  },
  {
    "text": "all right so right so this is me I'm",
    "start": "16730",
    "end": "23699"
  },
  {
    "text": "Michael I work for IBM cloud on the container entry team I'm a maintainer on",
    "start": "23699",
    "end": "29609"
  },
  {
    "text": "port eros which is one of the tools that we're hoping you'll get an opportunity to try out today there's my twitter",
    "start": "29609",
    "end": "35880"
  },
  {
    "text": "handle and tweet March but everyone puts their Twitter up so they go so my",
    "start": "35880",
    "end": "42629"
  },
  {
    "text": "marketing guys unfortunately have said that I have to do a little plug for IBM cloud there you go people like us",
    "start": "42629",
    "end": "50129"
  },
  {
    "text": "apparently we've got a booth in the sponsor showcase d6 give it a try we've got loads of free",
    "start": "50129",
    "end": "57090"
  },
  {
    "text": "stuff you can have a go if you listen to one of our talks so yeah so my name is",
    "start": "57090",
    "end": "68520"
  },
  {
    "text": "Dan White I'm a software engineer at a trade we're building stuff on top of service much stuff I'm a core",
    "start": "68520",
    "end": "74580"
  },
  {
    "text": "contributor to sto and a maintainer on Porteous like Michael hello everyone my",
    "start": "74580",
    "end": "84930"
  },
  {
    "text": "name is pi that's my real name I am an infrastructure engineer for",
    "start": "84930",
    "end": "90840"
  },
  {
    "text": "control plane where I work on container security as well as contributing to open",
    "start": "90840",
    "end": "96090"
  },
  {
    "text": "source where I can and hello I am Andrew",
    "start": "96090",
    "end": "101700"
  },
  {
    "text": "Martin also infrastructure and security engineering at control plane and yeah",
    "start": "101700",
    "end": "108689"
  },
  {
    "text": "let's let's get into the background of these slides so pre-flight checks I hope everybody has now had an opportunity to",
    "start": "108689",
    "end": "114360"
  },
  {
    "text": "do this anybody who's just arrived you just need that URL everything else is specified in that",
    "start": "114360",
    "end": "121530"
  },
  {
    "text": "repository so as long as everybody has that let's move on so why are we here",
    "start": "121530",
    "end": "130050"
  },
  {
    "start": "127000",
    "end": "377000"
  },
  {
    "text": "what are we going to do why is pipeline security in poor",
    "start": "130050",
    "end": "135510"
  },
  {
    "text": "we want to stop this guy from getting our Bitcoin or cat pictures or social",
    "start": "135510",
    "end": "141450"
  },
  {
    "text": "security numbers and we have to do these things of course with automation so for",
    "start": "141450",
    "end": "148440"
  },
  {
    "text": "an enterprise that is attempting to do this at the highest level of complexity with multiple environments here is a",
    "start": "148440",
    "end": "154380"
  },
  {
    "text": "view of secure cloud native delivery this is even oversimplified and neglects",
    "start": "154380",
    "end": "160500"
  },
  {
    "text": "the use of environments but we can importantly see the various stages of a build pipeline we'll publish these",
    "start": "160500",
    "end": "166980"
  },
  {
    "text": "slides afterwards as well so of course dependencies building the scanning of the image and gathering of",
    "start": "166980",
    "end": "174120"
  },
  {
    "text": "metadata about it and we're able to use the fact that containers in terms of the",
    "start": "174120",
    "end": "180450"
  },
  {
    "text": "file system are immutable we have a char of an image that reflects the contents",
    "start": "180450",
    "end": "185970"
  },
  {
    "text": "of this file system and that is a content addressable immutable hash so we can collect information about a",
    "start": "185970",
    "end": "192630"
  },
  {
    "text": "container image about how its run how our tests have passed creates metadata",
    "start": "192630",
    "end": "198209"
  },
  {
    "text": "about it and link it back to that image using its hash and this is super",
    "start": "198209",
    "end": "204750"
  },
  {
    "text": "powerful and is something that we can base a lot of other tools from passing",
    "start": "204750",
    "end": "210959"
  },
  {
    "text": "the test stages and then finally deploy we can talk more about this afterwards but we will be doing something a little",
    "start": "210959",
    "end": "218040"
  },
  {
    "text": "bit more simplistic so for a secure software development lifecycle or",
    "start": "218040",
    "end": "223290"
  },
  {
    "text": "container delivery lifecycle in this case we kind of build from a fairly",
    "start": "223290",
    "end": "228690"
  },
  {
    "text": "predictable set of things we start with the base image which is our from line in",
    "start": "228690",
    "end": "234150"
  },
  {
    "text": "a doc file this is the image that we build our container on top of it maybe",
    "start": "234150",
    "end": "239160"
  },
  {
    "text": "from scratch which is essentially null and void there's nothing in there",
    "start": "239160",
    "end": "244230"
  },
  {
    "text": "or it may be a full-blown sort of Windows VM where the kitchen sink is included of course best practice is to",
    "start": "244230",
    "end": "252360"
  },
  {
    "text": "ship minimal dependencies in containers because it minimizes our attack surface",
    "start": "252360",
    "end": "257750"
  },
  {
    "text": "on top of that base image we ship our application code this is probably done",
    "start": "257750",
    "end": "263370"
  },
  {
    "text": "with a copy from the host file system where the git repo containing the docks and checked out it's what comes out of",
    "start": "263370",
    "end": "270400"
  },
  {
    "text": "the software development process then we perform the build this is the dockerfile work itself this builds a container",
    "start": "270400",
    "end": "278500"
  },
  {
    "text": "image from our code and the various packages and dependencies that are required to run it we then have the",
    "start": "278500",
    "end": "286870"
  },
  {
    "text": "application image this is our docker image this is what we might be tagging and labeling in a different way",
    "start": "286870",
    "end": "292830"
  },
  {
    "text": "ultimately those tags and labels are not a safe thing to rely on they are just a pointer to a content addressable hash",
    "start": "292830",
    "end": "299950"
  },
  {
    "text": "and in the same way that there have been attacks on gits image signing from some",
    "start": "299950",
    "end": "306040"
  },
  {
    "text": "of our respected friends in the room who reported those there are also",
    "start": "306040",
    "end": "312180"
  },
  {
    "text": "theoretical and provable attacks on container tag usage what we will get to",
    "start": "312180",
    "end": "319690"
  },
  {
    "text": "in this tutorial is using tools to detect and prevent these attacks and",
    "start": "319690",
    "end": "326310"
  },
  {
    "text": "then finally once we have that immutable application image addressable by hash we",
    "start": "326310",
    "end": "332410"
  },
  {
    "text": "can deploy it now it's all very well placing these controls into the build",
    "start": "332410",
    "end": "337570"
  },
  {
    "text": "pipeline but if we then permit any image to be deployed to our production systems",
    "start": "337570",
    "end": "343780"
  },
  {
    "text": "well what's the point in doing all this other work so what we'll do today is will tie back all this work that we do",
    "start": "343780",
    "end": "350110"
  },
  {
    "text": "in the pipeline finally to the deployment phase to ensure that there's nothing that can be deployed to",
    "start": "350110",
    "end": "356290"
  },
  {
    "text": "production that does not pass our stringent quality and security controls it should be noted that in order to",
    "start": "356290",
    "end": "364120"
  },
  {
    "text": "really secure this process one should be GPG signing each of their git commits to link some form of identity to the whole",
    "start": "364120",
    "end": "370330"
  },
  {
    "text": "process because everything is as code but for the sake of ease we have omitted that mandatory step today and of course",
    "start": "370330",
    "end": "379420"
  },
  {
    "start": "377000",
    "end": "777000"
  },
  {
    "text": "Darth Vader recommends that all these parts are put into a pipeline there's",
    "start": "379420",
    "end": "384910"
  },
  {
    "text": "lots of continuous integration tooling that we can use these days from something as simple as Travis when hosted or something as wide and varied",
    "start": "384910",
    "end": "394210"
  },
  {
    "text": "in use case and secure ability as Jenkins but again in the interest of",
    "start": "394210",
    "end": "400120"
  },
  {
    "text": "keeping this tutorial within usable timeframe we are not going to mount any of this stuff and run it",
    "start": "400120",
    "end": "405199"
  },
  {
    "text": "automatically will give you the tooling and the workflow to run locally but of",
    "start": "405199",
    "end": "410419"
  },
  {
    "text": "course automation is just wrapping that up in a bash script so the pipeline I",
    "start": "410419",
    "end": "417199"
  },
  {
    "text": "don't think you need convincing is the ideal place to run these security checks and controls because we are doing so",
    "start": "417199",
    "end": "423020"
  },
  {
    "text": "automatically we don't have the fal ability of human quality assurance in the middle so we're looking at an",
    "start": "423020",
    "end": "430159"
  },
  {
    "text": "idealized deployment pipeline and how to add security features to it pipelines",
    "start": "430159",
    "end": "436009"
  },
  {
    "text": "are the fundamental building block of robust fault tolerant and secure systems because they provide a repeatable",
    "start": "436009",
    "end": "441800"
  },
  {
    "text": "environment in which we can assert expectations about the state of the software that we're building the minimum",
    "start": "441800",
    "end": "448909"
  },
  {
    "text": "viable pipeline security for a container image should be the knowledge of any CVS",
    "start": "448909",
    "end": "454430"
  },
  {
    "text": "in the image or application libraries and their acceptance or blocking the",
    "start": "454430",
    "end": "461240"
  },
  {
    "text": "images based upon the risk that they present can't believe at this point",
    "start": "461240",
    "end": "466699"
  },
  {
    "text": "enough shipping CVS to production is the easiest way to get pwned because all of",
    "start": "466699",
    "end": "472819"
  },
  {
    "text": "the drive-by script kiddie tooling is based on published CVS we have this new",
    "start": "472819",
    "end": "478310"
  },
  {
    "text": "opportunity with containers to be able to perform not only microwave mminton around a single process in the container",
    "start": "478310",
    "end": "484699"
  },
  {
    "text": "but also to have a full manifest of everything that's packaged with the container as we'll go through today and",
    "start": "484699",
    "end": "491029"
  },
  {
    "text": "there really is no excuse it's a lot easier to be secure so I hope by the end",
    "start": "491029",
    "end": "496729"
  },
  {
    "text": "of the day you are convinced that it is simplistic enough to introduce into your own pipelines so once the risk of",
    "start": "496729",
    "end": "504590"
  },
  {
    "text": "shipping certain configurations it may be that a CVE is acceptable to you if it's something that's in no way exploitable in the",
    "start": "504590",
    "end": "511310"
  },
  {
    "text": "container for example so once we accept that risk we want to ensure that the",
    "start": "511310",
    "end": "517490"
  },
  {
    "text": "shipped build image is exactly the same one that we deploy to production and one",
    "start": "517490",
    "end": "522589"
  },
  {
    "text": "such tool that supports that pattern is notary so we will use notary as the basis of a secure pipeline in fact the",
    "start": "522589",
    "end": "529790"
  },
  {
    "text": "author of the tough spec the notary was based on was briefly with us but sadly he's had to ghost",
    "start": "529790",
    "end": "536480"
  },
  {
    "text": "right so these are tools that you can use at various stages of the build",
    "start": "536480",
    "end": "541670"
  },
  {
    "text": "pipeline I'm sure you recognize some of them today we will be using these so we",
    "start": "541670",
    "end": "548120"
  },
  {
    "text": "need a docker registry or hope to pull from notary is the way to overlay GPG",
    "start": "548120",
    "end": "553850"
  },
  {
    "text": "cryptographic signing against image Shaw's tough for the update framework is",
    "start": "553850",
    "end": "559430"
  },
  {
    "text": "the specification that's based on their both CN CF projects then we have this as",
    "start": "559430",
    "end": "567170"
  },
  {
    "text": "I mentioned attaching build metadata to the image is an emerging field there's two main tools in this category in toto",
    "start": "567170",
    "end": "574880"
  },
  {
    "text": "and go face again we will not be covering them today but I would advise you to keep an eye on them",
    "start": "574880",
    "end": "581920"
  },
  {
    "text": "application image scanning Clair is bundled into harbor harbor is again a CN",
    "start": "581920",
    "end": "587149"
  },
  {
    "text": "CF project from VMware which is a hosted docker registry and Claire is an image",
    "start": "587149",
    "end": "592670"
  },
  {
    "text": "scanner initially developed by core OS that pulls in those CVE feed date earth",
    "start": "592670",
    "end": "598910"
  },
  {
    "text": "sorry cv e data feeds and performs an enumeration of the installed packages",
    "start": "598910",
    "end": "604880"
  },
  {
    "text": "and checks those versions against the published feed and then finally we have poor tiaras and cube Seck admission",
    "start": "604880",
    "end": "611540"
  },
  {
    "text": "controllers poor TRS means that when we get to deployment time would check the",
    "start": "611540",
    "end": "617660"
  },
  {
    "text": "notary signing of the image that we're deploying and if if it's not correctly",
    "start": "617660",
    "end": "623149"
  },
  {
    "text": "signed it's either downgraded or not allowed and cube Seck is a tool very",
    "start": "623149",
    "end": "629180"
  },
  {
    "text": "similar to pod security policy but with more granular opinionated security profiling here is the flow of our",
    "start": "629180",
    "end": "637279"
  },
  {
    "text": "theoretical pipeline we will build an image we will assert that it has no vulnerabilities cryptographically signed",
    "start": "637279",
    "end": "643910"
  },
  {
    "text": "the image because we now trust it push that to a container registry attempt to deploy it to our cluster this point",
    "start": "643910",
    "end": "651829"
  },
  {
    "text": "Porteous checks the image has been signed at a mission control time and we reject images that do not follow process",
    "start": "651829",
    "end": "659600"
  },
  {
    "text": "to a policy we will also go through the threat models of these things and with that I hope most people are actually at",
    "start": "659600",
    "end": "666829"
  },
  {
    "text": "this point or passed it but we will have a brief discussion of harbor if liam is still in the room",
    "start": "666829",
    "end": "674600"
  },
  {
    "text": "arias brief session of harbor and then move on",
    "start": "674600",
    "end": "681130"
  },
  {
    "text": "okay so like Andy mentioned harbors the CNC f project the the reason we're using",
    "start": "693080",
    "end": "701340"
  },
  {
    "text": "harbor is it basically bundles a lot of the stuff we need and we need to so",
    "start": "701340",
    "end": "707040"
  },
  {
    "text": "notary and Claire like Andy mentioned we need to actually verify some of the image contents and check against CVS so",
    "start": "707040",
    "end": "716990"
  },
  {
    "text": "what we care about here is really the harbor just packages these components you will probably be using some form of",
    "start": "717320",
    "end": "724110"
  },
  {
    "text": "other public hosted registry we're running this locally just so we can have",
    "start": "724110",
    "end": "730050"
  },
  {
    "text": "a simplified path kind of and repeatable thing and so we don't have to distribute",
    "start": "730050",
    "end": "735570"
  },
  {
    "text": "cloud credentials to all of you basically so if using ISO IBM container",
    "start": "735570",
    "end": "741510"
  },
  {
    "text": "registry has notary as part of this and vulnerability adviser Quay has a similar thing and I believe ACR does but the",
    "start": "741510",
    "end": "749880"
  },
  {
    "text": "registry using if you want to leverage these features should have at least image digitally digital signing of image",
    "start": "749880",
    "end": "758850"
  },
  {
    "text": "digests which is what notary is you obviously need the registry to host the files for you and then you need to have",
    "start": "758850",
    "end": "766230"
  },
  {
    "text": "some kind of image vulnerability scanning again this is often just bundled in as part of your registry like",
    "start": "766230",
    "end": "772830"
  },
  {
    "text": "that's usually some of the differentiators they offer so how how is",
    "start": "772830",
    "end": "780120"
  },
  {
    "start": "777000",
    "end": "886000"
  },
  {
    "text": "everyone doing for progress on harbor stuff has show of hands who has everything done",
    "start": "780120",
    "end": "787610"
  },
  {
    "text": "the Internet's very bad ok if who's just",
    "start": "787610",
    "end": "793530"
  },
  {
    "text": "waiting for stuff to download okay that's that's the part I'm just gonna be",
    "start": "793530",
    "end": "804930"
  },
  {
    "text": "going over some image vulnerability issues here just keep downloading what",
    "start": "804930",
    "end": "810180"
  },
  {
    "text": "you're downloading I'll put the same slide up that we just had at the end of this and you can just make sure that",
    "start": "810180",
    "end": "815190"
  },
  {
    "text": "you've got everything down so images are not immune to any of the same exploit",
    "start": "815190",
    "end": "822930"
  },
  {
    "text": "possibilities that we find in any system if you're shipping a vulnerable container it's no different",
    "start": "822930",
    "end": "829230"
  },
  {
    "text": "than leaving any other production environment open to attack and that is the case whether or not you're building",
    "start": "829230",
    "end": "835020"
  },
  {
    "text": "your own images or if you're using third pipe third party images without modifying them you really want to make",
    "start": "835020",
    "end": "841440"
  },
  {
    "text": "sure that you don't have any known vulnerabilities in these images the process of doing that the process of",
    "start": "841440",
    "end": "848630"
  },
  {
    "text": "preventing known vulnerabilities and images whether you're doing it in your CI CI plan or if you're doing it in your",
    "start": "848630",
    "end": "855510"
  },
  {
    "text": "registry that is what is known as image scanning this is what I think of when I",
    "start": "855510",
    "end": "863190"
  },
  {
    "text": "visualize pulling straight from the dogger hub and into communities we have",
    "start": "863190",
    "end": "868560"
  },
  {
    "text": "to scan these things otherwise we're just going to be shipping images with our CES with known documented",
    "start": "868560",
    "end": "875820"
  },
  {
    "text": "vulnerabilities straight into our production environment that means we're",
    "start": "875820",
    "end": "880950"
  },
  {
    "text": "just basically offering the attack surface on a plate to whoever wants it",
    "start": "880950",
    "end": "886699"
  },
  {
    "start": "886000",
    "end": "1059000"
  },
  {
    "text": "let's wait until we're doing the workshop together and then we can go over questions so I've been talking",
    "start": "887870",
    "end": "896880"
  },
  {
    "text": "about known vulnerabilities but what can image scanning actually detect what are",
    "start": "896880",
    "end": "901950"
  },
  {
    "text": "some concrete examples of what image scanning can detect that depends on the tool that we use and it depends on the",
    "start": "901950",
    "end": "907740"
  },
  {
    "text": "depth of the tool that we use some tools only scan OS package manager versions",
    "start": "907740",
    "end": "914610"
  },
  {
    "text": "and others check file system permissions for everything that means it checks OS",
    "start": "914610",
    "end": "921660"
  },
  {
    "text": "package manifests application library package manifests bearing in mind that for some of these applications",
    "start": "921660",
    "end": "928920"
  },
  {
    "text": "vulnerability feed is not free it's paid for so depending on what scanner you use",
    "start": "928920",
    "end": "934080"
  },
  {
    "text": "if it's if it's purchased it it might not find all of the vulnerabilities in these packages you can scan compressed",
    "start": "934080",
    "end": "941310"
  },
  {
    "text": "formats such as jaws Wallis and TAS manually installed binaries manually installed files you can scan for",
    "start": "941310",
    "end": "948540"
  },
  {
    "text": "malicious code such as malware root kits backdoors like I mentioned you can scan",
    "start": "948540",
    "end": "953670"
  },
  {
    "text": "for for filesystem properties like for example set user ID set group ID owners",
    "start": "953670",
    "end": "960460"
  },
  {
    "text": "emissions and of course misconfigurations so human error like for example plane",
    "start": "960460",
    "end": "966610"
  },
  {
    "text": "take secrets or exposed ports remember",
    "start": "966610",
    "end": "973390"
  },
  {
    "text": "that your container image it's made up of layers so it may so basically just",
    "start": "973390",
    "end": "979350"
  },
  {
    "text": "consecutive commands that create files in your file systems Union mount it's a",
    "start": "979350",
    "end": "986740"
  },
  {
    "text": "way of just combining all these file directories into a single directory that",
    "start": "986740",
    "end": "993370"
  },
  {
    "text": "shows all of the content in here so for containers you see the files of each",
    "start": "993370",
    "end": "1000150"
  },
  {
    "text": "layer together rather than separately and that is the distinction between how",
    "start": "1000150",
    "end": "1005400"
  },
  {
    "text": "we use vulnerability scanners some of them scan layer by layer and some of",
    "start": "1005400",
    "end": "1011460"
  },
  {
    "text": "them to scan the Union filesystem which takes all the files together into the",
    "start": "1011460",
    "end": "1016710"
  },
  {
    "text": "most recent version and Claire which is the one we're going to be using today is a layer by layer type scanner in both of",
    "start": "1016710",
    "end": "1024540"
  },
  {
    "text": "these cases when you're looking at vulnerability scanning it works by comparing the hash of these packages",
    "start": "1024540",
    "end": "1029910"
  },
  {
    "text": "individually to a database with the same hash and comparing for the known vulnerabilities that we find in this",
    "start": "1029910",
    "end": "1035280"
  },
  {
    "text": "database the vulnerability information that we have it generally almost always comes from very similar databases from",
    "start": "1035280",
    "end": "1042900"
  },
  {
    "text": "the same cbss database but some vendors might override that depending on the",
    "start": "1042900",
    "end": "1049920"
  },
  {
    "text": "information that they have the best scanners out there are the ones that compare multiple sources to make sure",
    "start": "1049920",
    "end": "1056760"
  },
  {
    "text": "that we don't have too many false positives so generally speaking we have",
    "start": "1056760",
    "end": "1063720"
  },
  {
    "start": "1059000",
    "end": "1181000"
  },
  {
    "text": "three wildly used open source scanners we have Korres clear aqua Microscan ER",
    "start": "1063720",
    "end": "1071760"
  },
  {
    "text": "and anko open source engine like for the",
    "start": "1071760",
    "end": "1076890"
  },
  {
    "text": "same case for all of these is not the only standalone project that the vendors",
    "start": "1076890",
    "end": "1082560"
  },
  {
    "text": "use they'll usually be owned by companies that have other offerings like for example a paid scanner let's look at",
    "start": "1082560",
    "end": "1090540"
  },
  {
    "text": "the first one Claire Claire works by creating and index of images all the features in",
    "start": "1090540",
    "end": "1097470"
  },
  {
    "text": "the images and then it queries a database based on this based on these features based on this",
    "start": "1097470",
    "end": "1103409"
  },
  {
    "text": "information images in Clara scanned it in just time and what do I mean by that it means that when you have new",
    "start": "1103409",
    "end": "1110700"
  },
  {
    "text": "vulnerabilities updated in this database they're compared to existing image scans we don't rescan the image every time",
    "start": "1110700",
    "end": "1119029"
  },
  {
    "text": "haba did we'll be using today as I mentioned is using clear the next tool",
    "start": "1119179",
    "end": "1125519"
  },
  {
    "text": "is a quest microscope which I'm sure a lot of you have probably already heard of or you might even have gone to talk about it",
    "start": "1125519",
    "end": "1130889"
  },
  {
    "text": "it runs quite differently from Claire the hub the Aqua Microscan are works by",
    "start": "1130889",
    "end": "1137549"
  },
  {
    "text": "scanning at runtime it has an executable in the docker file and that runs when you're building the image that means",
    "start": "1137549",
    "end": "1144330"
  },
  {
    "text": "that you get the additional functionality that you can fail a build based on the based on the result of this",
    "start": "1144330",
    "end": "1150629"
  },
  {
    "text": "microscope so if you want to run it in Jenkins or in any CI CD pipeline this is a useful tool to know about lastly we",
    "start": "1150629",
    "end": "1159659"
  },
  {
    "text": "have anchor which is quite similar to Claire it's a platform it includes the database of vulnerable information for",
    "start": "1159659",
    "end": "1166230"
  },
  {
    "text": "the images as a separate container in your infrastructure so it runs as a container it creates a list of packages",
    "start": "1166230",
    "end": "1172440"
  },
  {
    "text": "that you can search include software artifacts such as for example ruby gems or node.js modules now let's move on to",
    "start": "1172440",
    "end": "1184230"
  },
  {
    "start": "1181000",
    "end": "1222000"
  },
  {
    "text": "the first part of the tutorial today here we're going to be building a vulnerable image trying we're going to",
    "start": "1184230",
    "end": "1192779"
  },
  {
    "text": "deploy it to the harbor registry and attempt to deploy it into our mini cube",
    "start": "1192779",
    "end": "1198450"
  },
  {
    "text": "clusters that hopefully most people should have somewhat up by now and then",
    "start": "1198450",
    "end": "1204359"
  },
  {
    "text": "just having a look at how that runs I'm just gonna put yeah I think I'll just go",
    "start": "1204359",
    "end": "1210690"
  },
  {
    "text": "back into that the installation slide we had earlier because you will need to clone that repo down if you haven't",
    "start": "1210690",
    "end": "1215909"
  },
  {
    "text": "already and then just follow section 202 vulnerability scanning in that in that repo",
    "start": "1215909",
    "end": "1223220"
  },
  {
    "start": "1222000",
    "end": "1484000"
  },
  {
    "text": "is this the one huh yeah okay we'll just be probably taking about 10 or 15",
    "start": "1228049",
    "end": "1233850"
  },
  {
    "text": "minutes to go over this now you can",
    "start": "1233850",
    "end": "1255779"
  },
  {
    "text": "definitely ship yeah the question is can you define your own vulnerabilities or",
    "start": "1255779",
    "end": "1261029"
  },
  {
    "text": "do you have to use a premade database I don't know of anyone so if you find a",
    "start": "1261029",
    "end": "1267779"
  },
  {
    "text": "new vulnerability you mean a lot of these tools that get their database from",
    "start": "1267779",
    "end": "1273599"
  },
  {
    "text": "the internet so they have a preset database but you can also which is what",
    "start": "1273599",
    "end": "1279210"
  },
  {
    "text": "we're going to be doing today you can you can insert the database directly from your local machine so I guess there",
    "start": "1279210",
    "end": "1284309"
  },
  {
    "text": "is nothing that would prevent you if you know how to add a security vulnerability",
    "start": "1284309",
    "end": "1289580"
  },
  {
    "text": "into inserting that manually alongside the database that you're shipping in from your local machine like for example",
    "start": "1289580",
    "end": "1295559"
  },
  {
    "text": "if you're running in an air-tight environment where you don't have any internet access any other questions",
    "start": "1295559",
    "end": "1305159"
  },
  {
    "text": "while we go through this yeah",
    "start": "1305159",
    "end": "1308899"
  },
  {
    "text": "so generally speaking in terms of the databases that we have now the",
    "start": "1327669",
    "end": "1333889"
  },
  {
    "text": "vulnerability databases that we have a lot of them are patched and updated as we go along bitNami in particular is",
    "start": "1333889",
    "end": "1342529"
  },
  {
    "text": "particularly good at not shipping vulnerabilities in their systems but if you scan it's good it's just good",
    "start": "1342529",
    "end": "1349309"
  },
  {
    "text": "practice to scan every image in your registry your local registry wherever you keep it before you deploy it I don't",
    "start": "1349309",
    "end": "1357289"
  },
  {
    "text": "know if there is a I guess that would",
    "start": "1357289",
    "end": "1375440"
  },
  {
    "text": "depend on the provider do you have anything to add on this yet the so the",
    "start": "1375440",
    "end": "1384379"
  },
  {
    "text": "state of the art with these sort of things is ultimately everything everything for the docker hub is just absolutely trusted by most organizations",
    "start": "1384379",
    "end": "1391489"
  },
  {
    "text": "if you look at what docker actually do then the Alpine core maintainer is now",
    "start": "1391489",
    "end": "1397059"
  },
  {
    "text": "employed by docker and ultimately those base images for which there is trust we",
    "start": "1397059",
    "end": "1405230"
  },
  {
    "text": "have to we have to trust those absolutely because we're putting them and we're running them docker does",
    "start": "1405230",
    "end": "1410960"
  },
  {
    "text": "support content trusts and docker hub some of these things so we can know that the person who's originally scan those",
    "start": "1410960",
    "end": "1416869"
  },
  {
    "text": "images and signed them off says that they're good we can verify that they haven't been intercepted in the middle and then to the question of like the",
    "start": "1416869",
    "end": "1423019"
  },
  {
    "text": "nodejs based images things like that for those well-known things like nodejs and",
    "start": "1423019",
    "end": "1428929"
  },
  {
    "text": "and the JVM just running the Alpine based images is a super nice way of doing it because they don't ship with",
    "start": "1428929",
    "end": "1435830"
  },
  {
    "text": "very much of course the difference between Alpine and Ubuntu or Debian as",
    "start": "1435830",
    "end": "1441139"
  },
  {
    "text": "soon as you install Python they're the same size image so there's kind of that there's not quite the obvious dichotomy",
    "start": "1441139",
    "end": "1447230"
  },
  {
    "text": "that maybe there's space to be but with all these things you're still adding extra things into the repo into the",
    "start": "1447230",
    "end": "1453350"
  },
  {
    "text": "image so you have probably an interpreter like bash for example someone gets nasty they can use bash to",
    "start": "1453350",
    "end": "1459139"
  },
  {
    "text": "do all sorts of things you you've got a built-in TCP library in bash that you can use via the command",
    "start": "1459139",
    "end": "1464930"
  },
  {
    "text": "line which is crazy insane but it's like reverse jail central so there's a really",
    "start": "1464930",
    "end": "1470540"
  },
  {
    "text": "nice set of images from Google called destroyers the ship with root certificate bundle like Etsy local time",
    "start": "1470540",
    "end": "1478130"
  },
  {
    "text": "and completely minimum viable operating system basically so if you really want",
    "start": "1478130",
    "end": "1485000"
  },
  {
    "text": "to have the the best sort of blast radius production and compromise resilience then those every time there",
    "start": "1485000",
    "end": "1492920"
  },
  {
    "text": "is some complexity with that because you need different debugging patterns because you can't just go in and pop shell so you need to attach a container",
    "start": "1492920",
    "end": "1498290"
  },
  {
    "text": "to the network namespace etc but generally depending on it's like a risk",
    "start": "1498290",
    "end": "1503720"
  },
  {
    "text": "profile question as always there's no reason not to trust those things from the docker hub because everyone does",
    "start": "1503720",
    "end": "1508820"
  },
  {
    "text": "sorry yes so so the question is if",
    "start": "1508820",
    "end": "1516590"
  },
  {
    "text": "you're in the financial industry what you do yes ok so that the point is that",
    "start": "1516590",
    "end": "1524480"
  },
  {
    "text": "that is there's no trust there that nod",
    "start": "1524480",
    "end": "1528730"
  },
  {
    "text": "yeah so yeah so that there's a whole question of untrusted third party code",
    "start": "1539210",
    "end": "1545400"
  },
  {
    "text": "risk with open source in general operating systems less so because like you say we can actually pay for",
    "start": "1545400",
    "end": "1551159"
  },
  {
    "text": "contractor to these people but but actually I maybe depending upon the",
    "start": "1551159",
    "end": "1557490"
  },
  {
    "text": "financial services then some of them do trust the docker hub because I've I mean",
    "start": "1557490",
    "end": "1566130"
  },
  {
    "text": "ones mileage may vary of course yes so",
    "start": "1566130",
    "end": "1574770"
  },
  {
    "text": "ultimately the the same support that you get from having Red Hat builds and package and own whole supply chain you have the same thing effectively without",
    "start": "1574770",
    "end": "1580830"
  },
  {
    "text": "point but I have no horse in this race we don't offer support or any of these things and certainly building from",
    "start": "1580830",
    "end": "1586770"
  },
  {
    "text": "scratch image then requires you to have your chain of custody for that code when it comes into organization so it's still",
    "start": "1586770",
    "end": "1593100"
  },
  {
    "text": "the same problem just far different mechanism I would argue that as long as one is checked summing everything that",
    "start": "1593100",
    "end": "1598740"
  },
  {
    "text": "comes through or likewise you say it's provided by Red Hat then you have chain of custody of fact code with the binary",
    "start": "1598740",
    "end": "1605130"
  },
  {
    "text": "data as it comes into organization",
    "start": "1605130",
    "end": "1608630"
  },
  {
    "text": "everything's based on a web of trust right",
    "start": "1611960",
    "end": "1616190"
  },
  {
    "text": "yeah I I mean again I have to take this offline but we've worked in those industries and they're perhaps different",
    "start": "1623210",
    "end": "1628800"
  },
  {
    "start": "1624000",
    "end": "2114000"
  },
  {
    "text": "accreditors have of course different risk acceptance profiles yeah it sounds",
    "start": "1628800",
    "end": "1635220"
  },
  {
    "text": "like you got an interesting use case that requires a lot more effort than standard",
    "start": "1635220",
    "end": "1642290"
  },
  {
    "text": "so just a show of hands who's still having trouble downloading stuff okay",
    "start": "2113410",
    "end": "2120670"
  },
  {
    "start": "2114000",
    "end": "2204000"
  },
  {
    "text": "right and I'll just unplug everything I'll just unplug this and I'll do it",
    "start": "2120670",
    "end": "2125680"
  },
  {
    "text": "over here and now swen like my dongle",
    "start": "2125680",
    "end": "2135730"
  },
  {
    "text": "doesn't work because right can everyone",
    "start": "2135730",
    "end": "2146289"
  },
  {
    "text": "see the terminal on the right hand side yeah cool",
    "start": "2146289",
    "end": "2154390"
  },
  {
    "text": "so I've yeah I've got as far as starting mini cube and I've applied my Harbor",
    "start": "2154390",
    "end": "2161710"
  },
  {
    "text": "llamó I'm running on a tethered connection so fingers crossed mine will actually work so I say that but harbors",
    "start": "2161710",
    "end": "2173410"
  },
  {
    "text": "still in container creating so while I wait for that to start we're using",
    "start": "2173410",
    "end": "2181569"
  },
  {
    "text": "harbour basically as a packaged notary",
    "start": "2181569",
    "end": "2187269"
  },
  {
    "text": "and container registry and all of that stuff the yam all that we actually put",
    "start": "2187269",
    "end": "2193450"
  },
  {
    "text": "in the project is the chart that is normally used to install harbour just",
    "start": "2193450",
    "end": "2199000"
  },
  {
    "text": "put into a single file so while that's",
    "start": "2199000",
    "end": "2204910"
  },
  {
    "start": "2204000",
    "end": "2324000"
  },
  {
    "text": "happening I should be able to jump ahead and extract the secret the certificate",
    "start": "2204910",
    "end": "2214329"
  },
  {
    "text": "for harbour we need to allow harbour to",
    "start": "2214329",
    "end": "2220569"
  },
  {
    "text": "odor or image Paul that's a good start",
    "start": "2220569",
    "end": "2225420"
  },
  {
    "text": "huh and these tethering is know quite so",
    "start": "2234680",
    "end": "2244890"
  },
  {
    "text": "happy",
    "start": "2244890",
    "end": "2247220"
  },
  {
    "text": "okay we're going to not try another tethering hotspot yes so just as a",
    "start": "2266020",
    "end": "2279570"
  },
  {
    "text": "assurance these instructions are going to stay up on github so anytime after",
    "start": "2279570",
    "end": "2286810"
  },
  {
    "text": "this session like once you get back to your hotel rooms and things like that and you have a Wi-Fi that's not got a",
    "start": "2286810",
    "end": "2292270"
  },
  {
    "text": "hundred people trying to download mini cube on it and yeah you might have",
    "start": "2292270",
    "end": "2297520"
  },
  {
    "text": "better luck if you have any trouble and so I'm on booth GC at the IBM booth tomorrow so if you come there and ask",
    "start": "2297520",
    "end": "2306280"
  },
  {
    "text": "questions if I'm not there then just mention that you're after me and if you",
    "start": "2306280",
    "end": "2312010"
  },
  {
    "text": "need any of the other guys I'll be able to get hold of them and ask them questions as well I don't know how easy it would be to get hold of for you guys",
    "start": "2312010",
    "end": "2319869"
  },
  {
    "text": "so if if you just say yeah oh yeah sure any of us on Twitter and it we find",
    "start": "2319869",
    "end": "2328740"
  },
  {
    "text": "I'm do this",
    "start": "2346900",
    "end": "2350349"
  },
  {
    "text": "yeah",
    "start": "2420410",
    "end": "2423190"
  },
  {
    "text": "yeah yep okay yeah so on the count of",
    "start": "2431660",
    "end": "2438330"
  },
  {
    "text": "yeah internet and various technical technological like Wi-Fi laptops just",
    "start": "2438330",
    "end": "2447780"
  },
  {
    "start": "2444000",
    "end": "2579000"
  },
  {
    "text": "not behaving let's just go through the slides and we'll yeah like I say if you",
    "start": "2447780",
    "end": "2454290"
  },
  {
    "text": "need to ask us any questions about having trouble running through this okay",
    "start": "2454290",
    "end": "2461730"
  },
  {
    "text": "so yeah and we'll put them on the shed",
    "start": "2461730",
    "end": "2470280"
  },
  {
    "text": "as well so be on the event page on the shared comm thing so we would normally",
    "start": "2470280",
    "end": "2482100"
  },
  {
    "text": "have at this point got through Claire and confirmed that an image doesn't have",
    "start": "2482100",
    "end": "2488370"
  },
  {
    "text": "any C V's in it but that doesn't necessarily confirm that the thing",
    "start": "2488370",
    "end": "2493860"
  },
  {
    "text": "that's in the image is the thing that we actually wanted to deploy so that's where notary comes in in the way that",
    "start": "2493860",
    "end": "2499200"
  },
  {
    "text": "we're setting things up here so notary lets you quick to graphically sign your",
    "start": "2499200",
    "end": "2505710"
  },
  {
    "text": "image versions and that provides a way to assert that you're okay with an image digital signatures can be confirmed by",
    "start": "2505710",
    "end": "2512130"
  },
  {
    "text": "our machines so we can automate that process and make that part of your pipeline going through to production",
    "start": "2512130",
    "end": "2518270"
  },
  {
    "text": "notary server and is a web application server that you can actually access as",
    "start": "2518270",
    "end": "2525600"
  },
  {
    "text": "part of your pipeline so you can look you can look that up and you can confirm",
    "start": "2525600",
    "end": "2530940"
  },
  {
    "text": "who has signed an image as part of your and deployment process and yeah multiple",
    "start": "2530940",
    "end": "2537390"
  },
  {
    "text": "people can sign images so we can do stuff like having I don't know someone",
    "start": "2537390",
    "end": "2544050"
  },
  {
    "text": "like your QA team have a signing key that they could sign the image so that they can approve that as and then your",
    "start": "2544050",
    "end": "2552450"
  },
  {
    "text": "pipeline can confirm that the image was signed as a kind of way of approving",
    "start": "2552450",
    "end": "2558120"
  },
  {
    "text": "that deployment or we can just confirm that a public image came from the right",
    "start": "2558120",
    "end": "2563400"
  },
  {
    "text": "publisher by checking the signing key most of the like major base images like",
    "start": "2563400",
    "end": "2573410"
  },
  {
    "text": "Ubuntu and things like that on docker hub are signed in there notary and so we can confirm that as part of the",
    "start": "2573410",
    "end": "2578780"
  },
  {
    "text": "deployment so if we look at a untrusted",
    "start": "2578780",
    "end": "2583790"
  },
  {
    "start": "2579000",
    "end": "2729000"
  },
  {
    "text": "docker fly you would normally ask your",
    "start": "2583790",
    "end": "2588890"
  },
  {
    "text": "registry for a tag like latest on a repository like Ubuntu the dark demon",
    "start": "2588890",
    "end": "2597260"
  },
  {
    "text": "will then go away and ask the registry what version or what digests there is",
    "start": "2597260",
    "end": "2603950"
  },
  {
    "text": "assigned to that latest tag a digest is a sha-256 hash of basically the image",
    "start": "2603950",
    "end": "2610430"
  },
  {
    "text": "content and that is then that will refer",
    "start": "2610430",
    "end": "2615680"
  },
  {
    "text": "to what layers are in the image what was created at the time and so when we pull",
    "start": "2615680",
    "end": "2623960"
  },
  {
    "text": "the image we ask for the digest we get the digest and then we ask the registry",
    "start": "2623960",
    "end": "2630109"
  },
  {
    "text": "for the layers that are inside that digest the registry identity itself is",
    "start": "2630109",
    "end": "2637970"
  },
  {
    "text": "proven by HTTPS and the certificates that your registry provides but the",
    "start": "2637970",
    "end": "2644690"
  },
  {
    "text": "identity of who told the registry that in this case 1 2 3 4 5 is the digest",
    "start": "2644690",
    "end": "2650960"
  },
  {
    "text": "that's assigned to the latest tag we don't know that so anyone could have",
    "start": "2650960",
    "end": "2656540"
  },
  {
    "text": "done that or anyone with access to your container registry could have done that so if we were to add notary into the fly",
    "start": "2656540",
    "end": "2664150"
  },
  {
    "text": "in this particular case I'm trusting a guy called Bob instead of asking the",
    "start": "2664150",
    "end": "2671840"
  },
  {
    "text": "registry we ask notary for all of the signed content for Ubuntu part of that",
    "start": "2671840",
    "end": "2680000"
  },
  {
    "text": "will include who has signed different versions of the latest tag and if bob",
    "start": "2680000",
    "end": "2690830"
  },
  {
    "text": "has signed the latest tag it notary will store the most recent version that he",
    "start": "2690830",
    "end": "2696590"
  },
  {
    "text": "has signed and so we can go right I trust Bob so I'm going to take",
    "start": "2696590",
    "end": "2701960"
  },
  {
    "text": "the version that he said should be latest and I'm just going to ask the registry for that digest so we don't",
    "start": "2701960",
    "end": "2707690"
  },
  {
    "text": "actually go to the registry asking what version it is we just go asking for specific content and because that's",
    "start": "2707690",
    "end": "2715039"
  },
  {
    "text": "using a sha-256 hash as long as that stays cryptographically secure which for",
    "start": "2715039",
    "end": "2720230"
  },
  {
    "text": "the time being it is that's a secure way of verifying that the content of your",
    "start": "2720230",
    "end": "2726769"
  },
  {
    "text": "image is what was approved at the time",
    "start": "2726769",
    "end": "2731499"
  },
  {
    "start": "2729000",
    "end": "2814000"
  },
  {
    "text": "but how do we apply notary to kubernetes so in Dockers view of the world you",
    "start": "2732339",
    "end": "2739880"
  },
  {
    "text": "would enabled our content trust and as part of docker content trust it will then go and get the signing information",
    "start": "2739880",
    "end": "2747710"
  },
  {
    "text": "from notary as part of your starting in container cubanelle tears because it",
    "start": "2747710",
    "end": "2754489"
  },
  {
    "text": "supports various different container runtimes it does a little bit more it",
    "start": "2754489",
    "end": "2761059"
  },
  {
    "text": "takes a little bit more than just flipping content trust on in order to get to work so we use a admission",
    "start": "2761059",
    "end": "2770749"
  },
  {
    "text": "controller animation controllers a piece of code that intercepts a request to the",
    "start": "2770749",
    "end": "2776989"
  },
  {
    "text": "kubernetes api server and tell it to create something after the request gets authenticated and authorized but in",
    "start": "2776989",
    "end": "2785960"
  },
  {
    "text": "short you have two different options for where you can plug an omission",
    "start": "2785960",
    "end": "2792230"
  },
  {
    "text": "controller into the flow there are two types there's a mutating web hook which",
    "start": "2792230",
    "end": "2798759"
  },
  {
    "text": "will allow you to change something in the deployment before you then pass that",
    "start": "2798759",
    "end": "2804739"
  },
  {
    "text": "through before it then goes on to the couplets or a validating admission web",
    "start": "2804739",
    "end": "2810319"
  },
  {
    "text": "hook which is a hard stop of yes or no",
    "start": "2810319",
    "end": "2814989"
  },
  {
    "start": "2814000",
    "end": "2984000"
  },
  {
    "text": "so I'm gonna hand over to Liam to go through portiere which is a mission",
    "start": "2818440",
    "end": "2823789"
  },
  {
    "text": "controller for signing stuff asserting signing",
    "start": "2823789",
    "end": "2830920"
  },
  {
    "text": "so the reason you need something like 40 RS is you can your Dhaka demons view of",
    "start": "2831700",
    "end": "2837700"
  },
  {
    "text": "a world in a kubernetes cluster includes the couplet and everything that's kubernetes itself right now in some",
    "start": "2837700",
    "end": "2845020"
  },
  {
    "text": "cloud platforms that's completely abstract it away from you you can't run docker PS on the machine or if you turn",
    "start": "2845020",
    "end": "2852340"
  },
  {
    "text": "it on and you then try and deploy or your cloud provider updates the Kubla image then basically what will happen is",
    "start": "2852340",
    "end": "2858790"
  },
  {
    "text": "you'll be blocking if they don't cryptographically signed their images using no tree you will basically break your cloud deployment your kubernetes",
    "start": "2858790",
    "end": "2865510"
  },
  {
    "text": "deployment right because they'll try and deploy a new version of the Kubler and you'll and dokgo the docker daemon",
    "start": "2865510",
    "end": "2871119"
  },
  {
    "text": "running will just registry out reject it and the other disadvantage of basic docker trust is that there's no trust",
    "start": "2871119",
    "end": "2878950"
  },
  {
    "text": "pinning involved so docker content trust just asserts that someone has signed the",
    "start": "2878950",
    "end": "2883990"
  },
  {
    "text": "image not that this person has signed the image so that's not entirely secure right because anyone could anyone with",
    "start": "2883990",
    "end": "2891099"
  },
  {
    "text": "access to your registry at that point can sign it with their own key push it up and act that then can be deployed so",
    "start": "2891099",
    "end": "2897820"
  },
  {
    "text": "we need some form of trust pinning it's actually maintain security so that's",
    "start": "2897820",
    "end": "2905470"
  },
  {
    "text": "where mutates commission controller comes in right so when we go through the flow that we saw before portiere is when",
    "start": "2905470",
    "end": "2912760"
  },
  {
    "text": "you create a resource in coop so deployment pod whatever anything that involves an image being deployed into",
    "start": "2912760",
    "end": "2918970"
  },
  {
    "text": "your cluster 40 eros will actually talk to node tree and it uses known as your client to reach out to no tree and say",
    "start": "2918970",
    "end": "2925660"
  },
  {
    "text": "can I have all of the trust data for the thing that's - for everything in this repo place it then finds the most recent",
    "start": "2925660",
    "end": "2932740"
  },
  {
    "text": "image that's assigned that satisfies the trust requirements actually that you set in the yeah Mille and then it tells the",
    "start": "2932740",
    "end": "2939339"
  },
  {
    "text": "Kubb api server to actually deploy that specific digest what that means then is",
    "start": "2939339",
    "end": "2947230"
  },
  {
    "text": "that no one can come along and deploy by tag because we know we've mentioned before that tags just a pointer right",
    "start": "2947230",
    "end": "2953080"
  },
  {
    "text": "tag is a point in time this was deployed so because we're specifically deploying",
    "start": "2953080",
    "end": "2958480"
  },
  {
    "text": "by digest and we're mutating to deploy by digest what that means there's someone",
    "start": "2958480",
    "end": "2963910"
  },
  {
    "text": "someone can't come along and modify the image that's order where the tag is",
    "start": "2963910",
    "end": "2970060"
  },
  {
    "text": "pointed to and then just delete your pod and then if your image poor policy as always then it will just pull in the",
    "start": "2970060",
    "end": "2976420"
  },
  {
    "text": "thing that the image that the attacker has managed to put in your registry",
    "start": "2976420",
    "end": "2982200"
  },
  {
    "text": "so the flow looks like this I can't see",
    "start": "2982200",
    "end": "2988930"
  },
  {
    "start": "2984000",
    "end": "3294000"
  },
  {
    "text": "the arrows from here so we will have to bear with me so you create a resource by talking to the cube API server the cube",
    "start": "2988930",
    "end": "2996070"
  },
  {
    "text": "API server then sends a request to port eros or port Sierra's registers itself as a mutating emission web hook so it",
    "start": "2996070",
    "end": "3003330"
  },
  {
    "text": "says okay Cooper has ever whenever someone's trying to deploy I think we'd",
    "start": "3003330",
    "end": "3008730"
  },
  {
    "text": "better but specify basically everything whenever anyone's trying to deploy anything with an image name ask me if",
    "start": "3008730",
    "end": "3014520"
  },
  {
    "text": "it's okay or ask me why I should actually be deploying or what you should actually be deploying sorry porty Eris",
    "start": "3014520",
    "end": "3022260"
  },
  {
    "text": "then reaches out to no.3 it pulls in the information as I mentioned previously and will then mutate the requests and",
    "start": "3022260",
    "end": "3030150"
  },
  {
    "text": "I'll show you exactly what that looks like a bit in a second but it will then send that stuff back to the coop API server and then that's",
    "start": "3030150",
    "end": "3035820"
  },
  {
    "text": "persisted in SCD and so on and then gets deployed of course so you would normally",
    "start": "3035820",
    "end": "3043950"
  },
  {
    "text": "deploy a coupie animal that looks something like this right with attack so this is the latest version of porty Eris",
    "start": "3043950",
    "end": "3049470"
  },
  {
    "text": "porty Eris will say no you need to deploy this right and this is pointing",
    "start": "3049470",
    "end": "3056100"
  },
  {
    "text": "this is the key part is pointing out a specific digest so because we've gone ahead and we've verified that you well",
    "start": "3056100",
    "end": "3063750"
  },
  {
    "text": "we can we can declare that or we can define some CR DS that say any images need to be first assigned by this set of",
    "start": "3063750",
    "end": "3070320"
  },
  {
    "text": "public keys we can then take we can then take the information that no tree gives us verify that it works find do that",
    "start": "3070320",
    "end": "3078390"
  },
  {
    "text": "last digest of the last thing that was signed that meets our requirements and then we send that back to cube API",
    "start": "3078390",
    "end": "3084000"
  },
  {
    "text": "server so this would be the section where you get this stuff done but you",
    "start": "3084000",
    "end": "3090690"
  },
  {
    "text": "should do this all in your own time because the internet is just not going to work here we will attach the slides",
    "start": "3090690",
    "end": "3096330"
  },
  {
    "text": "to this with instructure but the instruction should be able to get you through most of stuff I'm gonna",
    "start": "3096330",
    "end": "3102180"
  },
  {
    "text": "hand over to cool so scanning phone",
    "start": "3102180",
    "end": "3113010"
  },
  {
    "text": "abilities signing all that is super important to know that your image is secure but that is mostly relevant if",
    "start": "3113010",
    "end": "3120300"
  },
  {
    "text": "you know that that is the exact image that is actually deployed into production with no alterations whatsoever and you can't always know",
    "start": "3120300",
    "end": "3127410"
  },
  {
    "text": "that in runtime sometimes you need to be able to continuously scan and check that",
    "start": "3127410",
    "end": "3132510"
  },
  {
    "text": "what you have in your deployment is actually what you think you have in your deployment this is where cube Seck comes",
    "start": "3132510",
    "end": "3140040"
  },
  {
    "text": "in cube Seck and cube SE cayó it's a service that allows you to attribute a score to an image or",
    "start": "3140040",
    "end": "3147180"
  },
  {
    "text": "container that's already deployed it sets rules and it's suggests mitigations based on the score this is what the you",
    "start": "3147180",
    "end": "3156120"
  },
  {
    "text": "eye looks like for cube SE cayó we have a bunch of factors that go into",
    "start": "3156120",
    "end": "3161550"
  },
  {
    "text": "determining the score of this image such as for example resource requests limits that prevents resource exhaustion we",
    "start": "3161550",
    "end": "3168810"
  },
  {
    "text": "have security context like capabilities privileges so that we don't have a pot that have unrestricted access to the",
    "start": "3168810",
    "end": "3174990"
  },
  {
    "text": "host and then we have scores that limit",
    "start": "3174990",
    "end": "3180090"
  },
  {
    "text": "visibility of the hosts like for example PID or other namespaces that means that we're not going to be",
    "start": "3180090",
    "end": "3186300"
  },
  {
    "text": "leaking information from the hosts onto a potential attacker like for example environment variables all of these",
    "start": "3186300",
    "end": "3192990"
  },
  {
    "text": "factors a droite code is what goes into determining the score of an image and",
    "start": "3192990",
    "end": "3198150"
  },
  {
    "text": "based on that you can't just decide whether or not you want to deploy it here we see an example of an insecure",
    "start": "3198150",
    "end": "3205590"
  },
  {
    "text": "image we can see for example that it's it's privileged it has almost unrestricted host access that is pretty",
    "start": "3205590",
    "end": "3213540"
  },
  {
    "text": "much route you're you're handing out keys to the kingdom at this point and then we have some mitigation suggestions",
    "start": "3213540",
    "end": "3220610"
  },
  {
    "text": "in this case we can see that the user it matters so make sure the user is",
    "start": "3220610",
    "end": "3225810"
  },
  {
    "text": "non-root and then set some limiting like some container limits later down so",
    "start": "3225810",
    "end": "3234590"
  },
  {
    "text": "at this point we would normally be going through the section zero four which sets",
    "start": "3234590",
    "end": "3243270"
  },
  {
    "text": "more admission control and goes through the cube Seck section however I'm guessing most of you won't be able to do",
    "start": "3243270",
    "end": "3248430"
  },
  {
    "text": "that but if you go to this website cube",
    "start": "3248430",
    "end": "3253980"
  },
  {
    "text": "Seck dot IO there will be a very similar tutorial that you can do there at this",
    "start": "3253980",
    "end": "3260370"
  },
  {
    "text": "point and then maybe when you get home you can have a look or later later tonight you can have a look at the OL",
    "start": "3260370",
    "end": "3265470"
  },
  {
    "text": "for section but if you head over to cube Seck that IO you should be able to go through that in the next five or so",
    "start": "3265470",
    "end": "3271620"
  },
  {
    "text": "minutes do we know exactly what's",
    "start": "3271620",
    "end": "3283320"
  },
  {
    "text": "integrated as part of the score",
    "start": "3283320",
    "end": "3287000"
  },
  {
    "start": "3294000",
    "end": "3600000"
  },
  {
    "text": "so we're still hoping to work through a demo of what this looks like end to end",
    "start": "3370990",
    "end": "3376720"
  },
  {
    "text": "because we've got everything cached locally from when we were testing but in",
    "start": "3376720",
    "end": "3381980"
  },
  {
    "text": "order to fill the that does anybody have any particularly pressing questions they'd like to ask anything around",
    "start": "3381980",
    "end": "3389300"
  },
  {
    "text": "pipelines or hello",
    "start": "3389300",
    "end": "3392860"
  },
  {
    "text": "so the question is how is non-repudiation provided by cube Seck IO keepsake is outside of the notary",
    "start": "3412270",
    "end": "3419800"
  },
  {
    "text": "importance world so if that question is for for notary then it's basically based",
    "start": "3419800",
    "end": "3426670"
  },
  {
    "text": "on GPG keys so so that the notary important thing is all about signing images and it is also based on delegated",
    "start": "3426670",
    "end": "3436840"
  },
  {
    "text": "keys and key hierarchy so similar to the way that we would have a root certificate for semantics which is",
    "start": "3436840",
    "end": "3442720"
  },
  {
    "text": "obviously now invalid and then an intermediate certificate for for their signing Authority and then finally leaf",
    "start": "3442720",
    "end": "3449050"
  },
  {
    "text": "certificate for a webpage the same model essentially is used by by notary so that",
    "start": "3449050",
    "end": "3456580"
  },
  {
    "text": "roots key should be offline should never be compromised a bull if the",
    "start": "3456580",
    "end": "3461650"
  },
  {
    "text": "intermediary if the intermediate intermediate key I'm sorry it's compromised then that can be rotated and",
    "start": "3461650",
    "end": "3468670"
  },
  {
    "text": "Ries Island relatively easily so then the question of the repudiation is",
    "start": "3468670",
    "end": "3474210"
  },
  {
    "text": "essentially had that you trust your key management and you trust GPG but this is all so that's kind of I would say a",
    "start": "3474210",
    "end": "3483840"
  },
  {
    "text": "brief overview there is a spec for this called the update framework which is all",
    "start": "3483840",
    "end": "3489880"
  },
  {
    "text": "or peer-reviewed and in academia so I can refer to that as stretch hi",
    "start": "3489880",
    "end": "3499800"
  },
  {
    "text": "so yeah basically yeah yeah so when",
    "start": "3518630",
    "end": "3529500"
  },
  {
    "text": "we're using it inside IBM we're just assigning it as AI because we are a",
    "start": "3529500",
    "end": "3536849"
  },
  {
    "text": "publisher so we basically put our signature on to say we are IBM we push",
    "start": "3536849",
    "end": "3543180"
  },
  {
    "text": "this image here's how you can validate that we're saying that what's in our con",
    "start": "3543180",
    "end": "3548700"
  },
  {
    "text": "in our image is correct but you can put any number of signers on to your image",
    "start": "3548700",
    "end": "3556680"
  },
  {
    "text": "and so you can basically use it however you want but yeah you can the use cases",
    "start": "3556680",
    "end": "3564000"
  },
  {
    "text": "that we've written up in our Portillo documentation and in the documentation",
    "start": "3564000",
    "end": "3572760"
  },
  {
    "text": "that we've got on the IKS documentation is for basically signing off an image as",
    "start": "3572760",
    "end": "3580500"
  },
  {
    "text": "your QA team or your security team or people like that as part of an audit compliance kind of flow",
    "start": "3580500",
    "end": "3589609"
  },
  {
    "text": "it's entirely possible yeah it's the nature of the cloud native",
    "start": "3609640",
    "end": "3616910"
  },
  {
    "text": "landscape at the moment there's a hundred tools to do the same thing at the end of the day it comes down to what",
    "start": "3616910",
    "end": "3624340"
  },
  {
    "text": "which tools you're already using because if you can make the tool you're already using work for you then that works great",
    "start": "3624340",
    "end": "3633160"
  },
  {
    "text": "it will depend very much on your particular thing apparently Andy knows",
    "start": "3633160",
    "end": "3638270"
  },
  {
    "text": "about gracias [Laughter]",
    "start": "3638270",
    "end": "3644580"
  },
  {
    "text": "yeah so IKS ibm's container service now",
    "start": "3659300",
    "end": "3664380"
  },
  {
    "text": "actually runs container D instead of docker Portillo s-- works just fine on it so yeah well so when we push the",
    "start": "3664380",
    "end": "3674820"
  },
  {
    "text": "image we're still using the docker CLI and so we're still using docker content",
    "start": "3674820",
    "end": "3680610"
  },
  {
    "text": "trusts or what it calls docker content trust but notary is basically the same",
    "start": "3680610",
    "end": "3687510"
  },
  {
    "text": "whether you use the notary CLI or whether you use docker trust no no yeah",
    "start": "3687510",
    "end": "3697250"
  },
  {
    "text": "so you can completely just there is a notary CLI that you can basically you",
    "start": "3700430",
    "end": "3706170"
  },
  {
    "text": "basically means you avoid using the dock CLI completely if you want to yeah the reason so we tend to use the docker CLI",
    "start": "3706170",
    "end": "3713490"
  },
  {
    "text": "still because it talks about notary concepts in terms of containers and images and things that make sense in",
    "start": "3713490",
    "end": "3719970"
  },
  {
    "text": "that context notary can be used for things that are not docker images right you can you could you could just use it",
    "start": "3719970",
    "end": "3726510"
  },
  {
    "text": "to distribute technically any any files so notary has more abstract concepts",
    "start": "3726510",
    "end": "3732900"
  },
  {
    "text": "than most people would be familiar with and then you have to learn what those abstract con concepts are and so we just",
    "start": "3732900",
    "end": "3739620"
  },
  {
    "text": "generally we just use the docker CLI because it provides a better UX for people who are more familiar with",
    "start": "3739620",
    "end": "3744960"
  },
  {
    "text": "containers but there's nothing stopping you from just completely doing away with it and using a notary selling so you're",
    "start": "3744960",
    "end": "3758130"
  },
  {
    "text": "talking specifically notary and stuff",
    "start": "3758130",
    "end": "3762890"
  },
  {
    "text": "yes I believe that that should not",
    "start": "3772720",
    "end": "3786770"
  },
  {
    "text": "necessarily be the case on a v2 dhaka manifest because really okay",
    "start": "3786770",
    "end": "3797470"
  },
  {
    "text": "if so I was under the impression the digest would stay the same between the",
    "start": "3814250",
    "end": "3819800"
  },
  {
    "text": "two registries but if that's not the case in distribution then yeah yes it",
    "start": "3819800",
    "end": "3829700"
  },
  {
    "text": "does yes so if if the sha-256 digest of",
    "start": "3829700",
    "end": "3835160"
  },
  {
    "text": "the image changes then yeah yeah I would",
    "start": "3835160",
    "end": "3848720"
  },
  {
    "text": "say talk to no to team about that because it's their implementation right we though were our use cases because",
    "start": "3848720",
    "end": "3855260"
  },
  {
    "text": "we're coming from public cloud is not an air-gapped environment if you're doing an air-gapped environment I would that",
    "start": "3855260",
    "end": "3860750"
  },
  {
    "text": "something notary needs to support so I would reach out to some of the notary team Justin McCormick I don't know if",
    "start": "3860750",
    "end": "3866300"
  },
  {
    "text": "he's here we were chatting with him before but that does probably a use case they're interested in to be honest",
    "start": "3866300",
    "end": "3873670"
  },
  {
    "text": "any more questions go ahead yeah keep on",
    "start": "3881369",
    "end": "3888859"
  },
  {
    "text": "so so you're asking basically as an ongoing thing like we're there for tea",
    "start": "3906000",
    "end": "3913060"
  },
  {
    "text": "iris is a boundary check right a perimeter check and you're talking about an ongoing thing I yeah so there are",
    "start": "3913060",
    "end": "3919990"
  },
  {
    "text": "various tools around this it tends to be tightly coupled with where you're",
    "start": "3919990",
    "end": "3925960"
  },
  {
    "text": "deploying so I know the IBM container registry has this thing that does",
    "start": "3925960",
    "end": "3931330"
  },
  {
    "text": "something similar but that's tightly coupled to if you're using the IBM container registry so you can't use that",
    "start": "3931330",
    "end": "3936730"
  },
  {
    "text": "if you're not right so because of the information it requires a lot of the time it's tightly coupled I know I'm",
    "start": "3936730",
    "end": "3941920"
  },
  {
    "text": "pretty sure aqua have a it's not an open source tool riser paid for product they",
    "start": "3941920",
    "end": "3947050"
  },
  {
    "text": "have something that runs I think like digest attestation yeah okay",
    "start": "3947050",
    "end": "3956670"
  },
  {
    "text": "okay yeah I'm the IDS are things I hear I'm not familiar with but this is interesting to hear about right I don't",
    "start": "3957030",
    "end": "3964030"
  },
  {
    "text": "know if you have anything like thoughts on that's a slight ongoing attestation of yes so I mean fundamentally if one is",
    "start": "3964030",
    "end": "3977050"
  },
  {
    "text": "forming offline image scanning of everything that's deployed into production so just like scanning a",
    "start": "3977050",
    "end": "3982270"
  },
  {
    "text": "registry and you certainly then have a critical well then look what you actually do when you want to scale out",
    "start": "3982270",
    "end": "3988120"
  },
  {
    "text": "that deployment if you're if you're blocking directly on that attestation then you can no longer perform scaling",
    "start": "3988120",
    "end": "3995290"
  },
  {
    "text": "events or like if we deployed that that given sorry I've missed the first part",
    "start": "3995290",
    "end": "4001740"
  },
  {
    "text": "of the question sorry could you just rephrase it for me order for heat of a",
    "start": "4001740",
    "end": "4010290"
  },
  {
    "text": "CV in",
    "start": "4010290",
    "end": "4012800"
  },
  {
    "text": "I see",
    "start": "4019940",
    "end": "4023230"
  },
  {
    "text": "so if if somebody has altered the contents of the image it should no longer be referenceable by the show that",
    "start": "4027509",
    "end": "4034599"
  },
  {
    "text": "is beneath it now the depth there's a",
    "start": "4034599",
    "end": "4055839"
  },
  {
    "text": "question of the docker daemons trust and the integrity of the contents",
    "start": "4055839",
    "end": "4061180"
  },
  {
    "text": "of the file system I I would suggest that I would suggest that you're in for",
    "start": "4061180",
    "end": "4067569"
  },
  {
    "text": "a bad day if somebody's already tampering with something that's owned by root on disk like that there are bigger problems than that being changed there",
    "start": "4067569",
    "end": "4073779"
  },
  {
    "text": "if that then perpetuate them propagates through into container registries well",
    "start": "4073779",
    "end": "4078999"
  },
  {
    "text": "at that point of revalidating the show so I think specifically that I yeah",
    "start": "4078999",
    "end": "4084940"
  },
  {
    "text": "where would that attack be I wonder say someone's rooted a node yeah I mean",
    "start": "4084940",
    "end": "4093130"
  },
  {
    "text": "you actually have to worry about the V escalation throughout the cluster at that point rather than the image we're",
    "start": "4093130",
    "end": "4099460"
  },
  {
    "text": "concerned more with what happens in the supply chain of shipping that software to the image",
    "start": "4099460",
    "end": "4105028"
  },
  {
    "text": "yes it's yes so say the Spyro",
    "start": "4112489",
    "end": "4118170"
  },
  {
    "text": "implementation does pay a lot more attention when it tests things that is not the same spiffy as in sto right now",
    "start": "4118170",
    "end": "4126798"
  },
  {
    "text": "right because that's just going to be still backing off onto Cuban asses and the service account yeah issues phase 2",
    "start": "4126799",
    "end": "4135270"
  },
  {
    "text": "attestation will look more like what the spy perm protocol suggests and what the actual concrete spire implementation",
    "start": "4135270",
    "end": "4141630"
  },
  {
    "text": "does well",
    "start": "4141630",
    "end": "4145520"
  },
  {
    "text": "yes it's so the statement there was that runtime attestation can be done but it's",
    "start": "4173219",
    "end": "4180270"
  },
  {
    "text": "different tooling and then specifically we're into workload identity questions that are being solved by the the spiffy",
    "start": "4180270",
    "end": "4186120"
  },
  {
    "text": "team and so I tell the companies our backs that project which is stone-cold awesome by the way",
    "start": "4186120",
    "end": "4191580"
  },
  {
    "text": "if any of you interested go and see some of the spiffy talks there the basically",
    "start": "4191580",
    "end": "4196650"
  },
  {
    "text": "solving workload identity dynamic works of identity so you can base cryptographic verification of that",
    "start": "4196650",
    "end": "4204120"
  },
  {
    "text": "identity onto onto metadata about the process sound simple bits quite complex",
    "start": "4204120",
    "end": "4211710"
  },
  {
    "text": "involved but very interesting yeah I think with that we guarantee that all",
    "start": "4211710",
    "end": "4219510"
  },
  {
    "text": "the steps do work if one has fish and bandwidth apologies that that did not",
    "start": "4219510",
    "end": "4226170"
  },
  {
    "text": "function as as we expected all of the slides will will dump those and add them",
    "start": "4226170",
    "end": "4233460"
  },
  {
    "text": "to the repo the repo will stay up in perpetuity we're not going to take it down for any reason so hopefully",
    "start": "4233460",
    "end": "4241770"
  },
  {
    "text": "everyone's cloned it yeah so I mean",
    "start": "4241770",
    "end": "4248520"
  },
  {
    "text": "again feel free to reach out to us all individually or collectively on Twitter with comments suggestions and we would",
    "start": "4248520",
    "end": "4256679"
  },
  {
    "text": "we initially had this whole thing done in the cloud and then we were told we needed 180 clusters to furnish the whole",
    "start": "4256679",
    "end": "4262620"
  },
  {
    "text": "room and frantically reworked it for mini cube so I believe it works but apologies that it's too slow thank you",
    "start": "4262620",
    "end": "4269980"
  },
  {
    "text": "[Applause]",
    "start": "4269980",
    "end": "4276520"
  }
]