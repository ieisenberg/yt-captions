[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hi everyone and thank you and welcome to talk my name is jeanine in this talk my",
    "start": "80",
    "end": "7359"
  },
  {
    "text": "colleague chair and i talk about the multi-tenancy work we did in kubernetes",
    "start": "7359",
    "end": "13280"
  },
  {
    "text": "uh chen do you want to quickly introduce yourself and i'm a cloud dev engineer in future",
    "start": "13280",
    "end": "20880"
  },
  {
    "text": "way and my focus now is in multi-tenancy work in kubernetes",
    "start": "20880",
    "end": "26080"
  },
  {
    "text": "thank you okay",
    "start": "26080",
    "end": "31519"
  },
  {
    "start": "30000",
    "end": "60000"
  },
  {
    "text": "this is the agenda of the talk first i will give a brief overview of the project including some",
    "start": "31519",
    "end": "38079"
  },
  {
    "text": "unnecessary background information and then for the most of the part",
    "start": "38079",
    "end": "43360"
  },
  {
    "text": "we will walk through our multi-tenancy design and features after that i will also give a summary",
    "start": "43360",
    "end": "50079"
  },
  {
    "text": "about the current project status the next step and the challenges",
    "start": "50079",
    "end": "55440"
  },
  {
    "text": "and we will conclude the talk with a demo",
    "start": "55440",
    "end": "59840"
  },
  {
    "start": "60000",
    "end": "282000"
  },
  {
    "text": "ok let's get started with the overview first i want to say motor tenancy is",
    "start": "61680",
    "end": "68080"
  },
  {
    "text": "actually a very broad topic in kubernetes there are different multi-tenancy models",
    "start": "68080",
    "end": "73760"
  },
  {
    "text": "for different scenarios and we usually categorize these different models",
    "start": "73760",
    "end": "79200"
  },
  {
    "text": "by their isolation level if a multi-tenancy model provides strong",
    "start": "79200",
    "end": "84479"
  },
  {
    "text": "isolation would say it's a harder model if the model provides a weak isolation",
    "start": "84479",
    "end": "90560"
  },
  {
    "text": "we say it's a soft mode in for some use cases",
    "start": "90560",
    "end": "98079"
  },
  {
    "text": "weak isolation properties are enough for example if you are working with multiple teams",
    "start": "98079",
    "end": "104399"
  },
  {
    "text": "inside a company because these teams all belong to the same company",
    "start": "104399",
    "end": "110640"
  },
  {
    "text": "there is a certain level of trust among these teams so you don't need a very strict",
    "start": "110640",
    "end": "116719"
  },
  {
    "text": "isolation it's probably okay for them to see some resources from each other and they probably can even coordinate on",
    "start": "116719",
    "end": "123680"
  },
  {
    "text": "some resource allocations like ip range but if you are working with multiple even",
    "start": "123680",
    "end": "130160"
  },
  {
    "text": "external organizations there are no trust among them and you",
    "start": "130160",
    "end": "135280"
  },
  {
    "text": "need a harder isolation that's our user case",
    "start": "135280",
    "end": "141599"
  },
  {
    "text": "in our use case we want to enable multiple external organizations to share same",
    "start": "141599",
    "end": "147760"
  },
  {
    "text": "physical cost and we don't assume any trust relationship among these",
    "start": "147760",
    "end": "154799"
  },
  {
    "text": "talents a typical example is a a cloud provider offers a kubernetes",
    "start": "154840",
    "end": "161280"
  },
  {
    "text": "cluster as a service to public cloud users and obviously there's no trust among",
    "start": "161280",
    "end": "167440"
  },
  {
    "text": "these public cloud users so we are trying to address a",
    "start": "167440",
    "end": "173440"
  },
  {
    "text": "hard multi-tenancy model with strong isolation while we will talk about the detailed",
    "start": "173440",
    "end": "180720"
  },
  {
    "text": "detailed design and features in the next slides here i want to quickly describe our solution",
    "start": "180720",
    "end": "186560"
  },
  {
    "text": "from the following three aspects first our whole solution is built around",
    "start": "186560",
    "end": "193760"
  },
  {
    "text": "the idea of virtual cost so there is only one physical class and",
    "start": "193760",
    "end": "198879"
  },
  {
    "text": "one control plane but each talent feels like they are using the cluster in in an",
    "start": "198879",
    "end": "205280"
  },
  {
    "text": "exclusive way they are not impacted by other talents and they even do not realize the existence",
    "start": "205280",
    "end": "212560"
  },
  {
    "text": "of other tenants we also provide api backward compatibility",
    "start": "212560",
    "end": "218319"
  },
  {
    "text": "so all the tenants can still use their old kubernetes tools and uh and the clients",
    "start": "218319",
    "end": "226319"
  },
  {
    "text": "all the apis are same they don't need to change any code or yaml files everything is transparent",
    "start": "226319",
    "end": "232480"
  },
  {
    "text": "api is all same and we also provide some self management",
    "start": "232480",
    "end": "237760"
  },
  {
    "text": "talent admins can manage their own talent without getting help from class enemy",
    "start": "237760",
    "end": "245519"
  },
  {
    "text": "they can still use like the native recognized objects like rule row settings rule bindings",
    "start": "245519",
    "end": "253280"
  },
  {
    "text": "cluster rule quota security policies they can still use all these familiar api objects and all these",
    "start": "253280",
    "end": "260880"
  },
  {
    "text": "changes only apply to its account to its own talent it won't impact other talents",
    "start": "260880",
    "end": "268400"
  },
  {
    "text": "all our work is implemented in a open source project called actus i put the repo uir here feel free to",
    "start": "268400",
    "end": "276479"
  },
  {
    "text": "check out if you are interested in the project details",
    "start": "276479",
    "end": "283680"
  },
  {
    "start": "282000",
    "end": "404000"
  },
  {
    "text": "after the overview let's walk through our design and features first i want to start with a very",
    "start": "283680",
    "end": "290720"
  },
  {
    "text": "fundamental concept called space space is a new concept that we introduced in api server",
    "start": "290720",
    "end": "298639"
  },
  {
    "text": "a space is a high level of isolation unit beyond the name space",
    "start": "298639",
    "end": "306560"
  },
  {
    "text": "a space can contain any api object you can single you can single a space is a",
    "start": "306560",
    "end": "313759"
  },
  {
    "text": "subfolder when you create a subfolder you can have you can have put anything in the",
    "start": "313759",
    "end": "320240"
  },
  {
    "text": "root folder into the sub folder so here i put an example we have two",
    "start": "320240",
    "end": "326160"
  },
  {
    "text": "um we have two objects under the space called t1 if you look at the left",
    "start": "326160",
    "end": "332320"
  },
  {
    "text": "side of the example",
    "start": "332320",
    "end": "336638"
  },
  {
    "text": "so this t1 space has a pod resource which is a namespace scope and",
    "start": "337360",
    "end": "343520"
  },
  {
    "text": "it has a pv object which is non-named space scoped in the uir due to some historical",
    "start": "343520",
    "end": "350639"
  },
  {
    "text": "reasons we are still in talent but it should be species and on the right side you can see how these",
    "start": "350639",
    "end": "356400"
  },
  {
    "text": "objects are facilitating lcd we basically embedded the space name in",
    "start": "356400",
    "end": "362880"
  },
  {
    "text": "the icd key so all these objects are stored um separately you don't need to worry about",
    "start": "362880",
    "end": "369280"
  },
  {
    "text": "naming conflicts after we introduce the space um every",
    "start": "369280",
    "end": "376000"
  },
  {
    "text": "api object in api server belongs to one space and only one space in order for us to",
    "start": "376000",
    "end": "383440"
  },
  {
    "text": "quickly find out which space contains this api object we introduce a new field",
    "start": "383440",
    "end": "390800"
  },
  {
    "text": "in the object metadata section so every time when you check this field you",
    "start": "390800",
    "end": "396400"
  },
  {
    "text": "can easily find out which space this object belongs to",
    "start": "396400",
    "end": "401840"
  },
  {
    "start": "404000",
    "end": "573000"
  },
  {
    "text": "okay so we introduce the space um and each talent can have its own",
    "start": "405360",
    "end": "411039"
  },
  {
    "text": "space and in the space he can has he can have his own uh copy of the resource higher hierarchy",
    "start": "411039",
    "end": "418240"
  },
  {
    "text": "and he doesn't need to worry about naming conflicts and uh other any other conflicts with",
    "start": "418240",
    "end": "423280"
  },
  {
    "text": "other tenants but how does space get related with talent and how do they",
    "start": "423280",
    "end": "428800"
  },
  {
    "text": "get initialized basically there is one special space",
    "start": "428800",
    "end": "435199"
  },
  {
    "text": "called the system space this space is created automatically during cluster",
    "start": "435199",
    "end": "441919"
  },
  {
    "text": "bootstrap so after a cluster is bootstrapped there's only one space system space there",
    "start": "441919",
    "end": "450080"
  },
  {
    "text": "and this system space contains all the cluster level resources like uh",
    "start": "450080",
    "end": "456479"
  },
  {
    "text": "cluster settings and the nodes et cetera because this resource they don't belong",
    "start": "456479",
    "end": "463280"
  },
  {
    "text": "to any particular talent and in the system space we introduced a new",
    "start": "463280",
    "end": "469919"
  },
  {
    "text": "api object called talent i put a sample yama file here on the right side",
    "start": "469919",
    "end": "475280"
  },
  {
    "text": "you can see it's a pretty simple object it also has a talented controller",
    "start": "475280",
    "end": "483280"
  },
  {
    "text": "like any other controller in the kubernetes this talent controller watches a live cycle of these talent",
    "start": "483280",
    "end": "489360"
  },
  {
    "text": "objects whenever a new talent object is created",
    "start": "489360",
    "end": "494479"
  },
  {
    "text": "this talent controller kicks in it will create a corresponding space",
    "start": "494479",
    "end": "500639"
  },
  {
    "text": "with the same name of the talent and it will also initialize this space",
    "start": "500639",
    "end": "507039"
  },
  {
    "text": "to create all the default objects like the default namespaces uh differ the uh rules default dns",
    "start": "507039",
    "end": "516240"
  },
  {
    "text": "all this stuff so it will initialize this space and make it look like exactly the same as",
    "start": "516240",
    "end": "522399"
  },
  {
    "text": "the original the kubernetes accessor and also if i'm telling the object is",
    "start": "522399",
    "end": "529200"
  },
  {
    "text": "deleted this tenant controller will kick in and destroy the space and delete all the",
    "start": "529200",
    "end": "534399"
  },
  {
    "text": "resources in space so this is how a talent space",
    "start": "534399",
    "end": "541360"
  },
  {
    "text": "gets created and gets initialized and next i will hand over to chen she",
    "start": "541360",
    "end": "549040"
  },
  {
    "text": "will explain how we build all the other features on top of this fundamental concept space",
    "start": "549040",
    "end": "556399"
  },
  {
    "text": "hi thanks to sunny this is a chat so i will give more details about our",
    "start": "556720",
    "end": "562320"
  },
  {
    "text": "work as mentioned by xiaomi just now one of the key goals in our design",
    "start": "562320",
    "end": "567680"
  },
  {
    "text": "is backwards compatibility we would like the user oh sorry i forgot to move the slides",
    "start": "567680",
    "end": "575200"
  },
  {
    "text": "so here the slide i'm talking to so we would like our customer continue to",
    "start": "575200",
    "end": "581519"
  },
  {
    "text": "use current tool like coop cdo and continue to use the resource emo files and the crd operators",
    "start": "581519",
    "end": "588640"
  },
  {
    "text": "without any code change without compiling or without port image rebuilding how to do it",
    "start": "588640",
    "end": "596480"
  },
  {
    "text": "the key chain the key design here is something we call a short path resolution",
    "start": "596480",
    "end": "602240"
  },
  {
    "text": "it makes the existing apis will continue to work in our system short path",
    "start": "602240",
    "end": "609360"
  },
  {
    "text": "is something same as the existing api so it contrasts",
    "start": "609360",
    "end": "616640"
  },
  {
    "start": "612000",
    "end": "673000"
  },
  {
    "text": "something we call full part the full path maybe you have seen it just now in the previous slides it's",
    "start": "616640",
    "end": "621680"
  },
  {
    "text": "such a slot it's such a url with the tenants specified in the path so with this path",
    "start": "621680",
    "end": "629120"
  },
  {
    "text": "you can ident you can uniquely identify results in the system and the short path is without this part",
    "start": "629120",
    "end": "636320"
  },
  {
    "text": "part so it's the same existing apis but how to translate short part to full path",
    "start": "636320",
    "end": "642959"
  },
  {
    "text": "so we may have two customers two tenants send out two",
    "start": "642959",
    "end": "649120"
  },
  {
    "text": "apis with the same urls but we know they need to go to different space how to do it we added we added a",
    "start": "649200",
    "end": "656000"
  },
  {
    "text": "component called short path resolution the short part resolution",
    "start": "656000",
    "end": "661200"
  },
  {
    "text": "will infer the target space from the access credentials",
    "start": "661200",
    "end": "668959"
  },
  {
    "text": "in this resource request so after the resolution this short path will be translated into",
    "start": "668959",
    "end": "676800"
  },
  {
    "start": "673000",
    "end": "684000"
  },
  {
    "text": "full path and then you will go to the correct space so that is something we do for backwards",
    "start": "676800",
    "end": "682720"
  },
  {
    "text": "compatibility as mentioned by just now we said that we need",
    "start": "682720",
    "end": "688160"
  },
  {
    "start": "684000",
    "end": "790000"
  },
  {
    "text": "the credentials include the user tenant information so we made some change in authentication",
    "start": "688160",
    "end": "695680"
  },
  {
    "text": "the main change here is we add a new field called tenant in the user identity in addition to",
    "start": "695680",
    "end": "702880"
  },
  {
    "text": "current user and group fields here i show some examples here so this one is the new way to generate a",
    "start": "702880",
    "end": "709760"
  },
  {
    "text": "cert and this is a new format for the it's it's for the token and this",
    "start": "709760",
    "end": "716160"
  },
  {
    "text": "one is the new format for the password file so basically we support all authentication strategies that is",
    "start": "716160",
    "end": "722560"
  },
  {
    "text": "working in kubernetes now and the next thing i would like to say it's",
    "start": "722560",
    "end": "727680"
  },
  {
    "text": "about authorization in our system it's pretty similar to what we have now actually the main change is here",
    "start": "727680",
    "end": "735200"
  },
  {
    "text": "we add something check at some check on the user tenant we make sure the tech",
    "start": "735200",
    "end": "741360"
  },
  {
    "text": "user tenant have access to the resource to the to the space of the resource so",
    "start": "741360",
    "end": "748880"
  },
  {
    "text": "the rule here is the system tenant can access any space",
    "start": "748880",
    "end": "754160"
  },
  {
    "text": "and but if it's a just a regular tenant he can only visit his own space we may have some cross",
    "start": "754160",
    "end": "761760"
  },
  {
    "text": "tenants across space visit in the future but now it's it's the rule that we we have",
    "start": "761760",
    "end": "768480"
  },
  {
    "text": "done and you can see it's actually just add a few lines here and then after that we make sure the",
    "start": "768480",
    "end": "775360"
  },
  {
    "text": "user tenant is in the right space and then the access control",
    "start": "775360",
    "end": "781120"
  },
  {
    "text": "inside space is same as we have now in a kubernetes cluster so that is access control",
    "start": "781120",
    "end": "789200"
  },
  {
    "text": "and in the next slides i want to combine my talk about short path and access and",
    "start": "789200",
    "end": "795279"
  },
  {
    "start": "790000",
    "end": "876000"
  },
  {
    "text": "control to give a full story on how a resource request is handled in our system",
    "start": "795279",
    "end": "800800"
  },
  {
    "text": "so suppose there is a resource request arrives and then the api server will",
    "start": "800800",
    "end": "807120"
  },
  {
    "text": "retrieve the tenant and user identity from the request first and then the next thing it will do is",
    "start": "807120",
    "end": "814720"
  },
  {
    "text": "to check whether or not it's a short path by looking to whether or not the space is defined in the url if",
    "start": "814720",
    "end": "821920"
  },
  {
    "text": "it's not defined then it's something we call short path okay then we will set the resource",
    "start": "821920",
    "end": "828720"
  },
  {
    "text": "space to the tenant name that's something earlier we mentioned it's short path resolution",
    "start": "828720",
    "end": "834800"
  },
  {
    "text": "if it's a full path and we'll do some access control uh we'll do some authorizing check",
    "start": "834800",
    "end": "842720"
  },
  {
    "text": "to make sure whether or not the tenant is visiting his own space if it's not",
    "start": "842720",
    "end": "850000"
  },
  {
    "text": "and we will check whether or not the cross tenant policy is allowed",
    "start": "850000",
    "end": "855360"
  },
  {
    "text": "whether the cross-tenant policy allows this request if yes then we are here then it's we",
    "start": "855360",
    "end": "862079"
  },
  {
    "text": "will access the results with the full path it's then what what is happening next is",
    "start": "862079",
    "end": "867519"
  },
  {
    "text": "same as something we will see in the kubernetes so that's access control and short path how they",
    "start": "867519",
    "end": "873199"
  },
  {
    "text": "are fit together just now i mentioned about backwards",
    "start": "873199",
    "end": "879440"
  },
  {
    "start": "876000",
    "end": "992000"
  },
  {
    "text": "compatibility that we said every tenant can use their existing code existing",
    "start": "879440",
    "end": "884720"
  },
  {
    "text": "tools with without any change because they are working in their",
    "start": "884720",
    "end": "889760"
  },
  {
    "text": "own space but there are some components that we realize there are some components they need to",
    "start": "889760",
    "end": "895920"
  },
  {
    "text": "work across the spaces like something like a scheduler like a couplet and like all the controllers",
    "start": "895920",
    "end": "903120"
  },
  {
    "text": "and the kubernetes they are now working with api server which supports multi-tenancy",
    "start": "903120",
    "end": "909040"
  },
  {
    "text": "and they have to make some code change so we did it what we did first is to make some code",
    "start": "909040",
    "end": "915040"
  },
  {
    "text": "change client go so we add uh a set of multi-tenancies the iud apis the",
    "start": "915040",
    "end": "922320"
  },
  {
    "text": "difference is now in this apis there is a new parameter called tenant and also we make some code chain to",
    "start": "922320",
    "end": "929279"
  },
  {
    "text": "support cross space lease watch and after that we make some code change",
    "start": "929279",
    "end": "936560"
  },
  {
    "text": "to this components use this using this client go new apis so here i gave some",
    "start": "936560",
    "end": "942720"
  },
  {
    "text": "sample change here like we would like for this one it's about visiting pause and",
    "start": "942720",
    "end": "949600"
  },
  {
    "text": "for given name space and now we need to pass in another parameter which is",
    "start": "949600",
    "end": "954639"
  },
  {
    "text": "tenant and one thing i would like to mention here is that the code change here is",
    "start": "954639",
    "end": "959759"
  },
  {
    "text": "quite straightforward it's with the client new client go apis",
    "start": "959759",
    "end": "965279"
  },
  {
    "text": "the change will happen to this scheduler couplet and controllers it's not big",
    "start": "965279",
    "end": "970720"
  },
  {
    "text": "we have finished it almost all of it and i scheduled a couple it's working our system now and",
    "start": "970720",
    "end": "977040"
  },
  {
    "text": "i think they are 15 or something i think the number is pretty big but we",
    "start": "977040",
    "end": "982079"
  },
  {
    "text": "did pretty quickly so if you have interested take a look at our code and you can see that code changes quite",
    "start": "982079",
    "end": "987519"
  },
  {
    "text": "quite easy and that's client go and controller change and next thing it's here i want to",
    "start": "987519",
    "end": "995040"
  },
  {
    "start": "992000",
    "end": "1089000"
  },
  {
    "text": "mention that as something shiny just now give a very brief description it's tenant autonomy",
    "start": "995040",
    "end": "1002160"
  },
  {
    "text": "as we like to design a system in such a way it's like each tenant is working with his own",
    "start": "1002160",
    "end": "1009519"
  },
  {
    "text": "virtual cluster just like a virtual cluster is delegated to the tenant and the tenant can manage its own",
    "start": "1009519",
    "end": "1017440"
  },
  {
    "text": "cluster without turning to cluster admins so he can work with almost all the existing",
    "start": "1017440",
    "end": "1023440"
  },
  {
    "text": "apis like row row bindings cluster row cluster bindings resource code and things like",
    "start": "1023440",
    "end": "1029120"
  },
  {
    "text": "this and also here you can see we said crd i mean each tenant can have his own crds",
    "start": "1029120",
    "end": "1036798"
  },
  {
    "text": "and one thing here like there are some clusters scope concepts like cluster rules which",
    "start": "1036799",
    "end": "1043438"
  },
  {
    "text": "in existing kubernetes it's it's a clutter scope objects now in our system it's",
    "start": "1043439",
    "end": "1051400"
  },
  {
    "text": "transparently translated to er space level objects like here this",
    "start": "1051400",
    "end": "1058160"
  },
  {
    "text": "two pictures explain this this difference like earlier like the cluster rows it's effective in all the namespace in",
    "start": "1058160",
    "end": "1066080"
  },
  {
    "text": "one cluster but now it's working on a virtual cluster level so this",
    "start": "1066080",
    "end": "1071520"
  },
  {
    "text": "cluster role defined by this tenant will work only in his own space and has no",
    "start": "1071520",
    "end": "1077280"
  },
  {
    "text": "effects on other tenants so it's something called tenant autonomy so each",
    "start": "1077280",
    "end": "1083760"
  },
  {
    "text": "tenant have his own virtual cluster",
    "start": "1083760",
    "end": "1088159"
  },
  {
    "text": "next and something like yeah i briefly mentioned just now multi-tenancy crd",
    "start": "1089120",
    "end": "1095440"
  },
  {
    "text": "so crd is a very important feature for kubernetes and now we allow each tenant to define his",
    "start": "1095440",
    "end": "1101840"
  },
  {
    "text": "own crd they don't need to worry about any",
    "start": "1101840",
    "end": "1106960"
  },
  {
    "text": "conflicts with other tenants and they can use their own crd just just like they own",
    "start": "1106960",
    "end": "1114400"
  },
  {
    "text": "their their own clusters it's and this in-store seat is only visible",
    "start": "1114400",
    "end": "1121039"
  },
  {
    "text": "only usable to himself i mean to his own space and the nice thing is because our",
    "start": "1121039",
    "end": "1127200"
  },
  {
    "text": "backwards compatibility they don't need to change their crdml",
    "start": "1127200",
    "end": "1132720"
  },
  {
    "text": "file they don't need to change this custom resource emo file and they don't need to make any change to their crd",
    "start": "1132720",
    "end": "1138880"
  },
  {
    "text": "operator they can just work and besides this we also realize there are some requirements that",
    "start": "1138880",
    "end": "1146559"
  },
  {
    "text": "at some point the cluster admin would like to enforce the crd which is usable",
    "start": "1146559",
    "end": "1152880"
  },
  {
    "text": "by all the regular tenants we also support this scenario we we call something we call a system crd",
    "start": "1152880",
    "end": "1159600"
  },
  {
    "text": "and it's such a city that can only be installed by system tenant in the system space and we",
    "start": "1159600",
    "end": "1166240"
  },
  {
    "text": "would like to mark it and we want it to be marked with a special label without this label then such a crd will",
    "start": "1166240",
    "end": "1173840"
  },
  {
    "text": "be only available to their system space but once it's marked a special label",
    "start": "1173840",
    "end": "1179919"
  },
  {
    "text": "then all the tenants can use it just like his own custom just like his",
    "start": "1179919",
    "end": "1185919"
  },
  {
    "text": "own crd so here ends my brief introduction next i would like to hand it back to shelling",
    "start": "1185919",
    "end": "1191679"
  },
  {
    "text": "and he will give more details thank you",
    "start": "1191679",
    "end": "1197280"
  },
  {
    "text": "thank you in the previous slides chen and i talked about the about all",
    "start": "1198400",
    "end": "1205280"
  },
  {
    "start": "1200000",
    "end": "1492000"
  },
  {
    "text": "the design and the changes in the control plane in the master",
    "start": "1205280",
    "end": "1210640"
  },
  {
    "text": "in the master part like the api server and the controllers",
    "start": "1210640",
    "end": "1215840"
  },
  {
    "text": "here i want to talk about some changes in the in the in the data plane in other words",
    "start": "1215840",
    "end": "1222880"
  },
  {
    "text": "things happening on on the work notes the first part is about the runtime",
    "start": "1222880",
    "end": "1229280"
  },
  {
    "text": "runtime isolation as we all know regular containers like",
    "start": "1229280",
    "end": "1234559"
  },
  {
    "text": "docker containers they are actually sharing the same host kernel host os kernel but when we are",
    "start": "1234559",
    "end": "1243120"
  },
  {
    "text": "running in a strong isolated multi-tenancy cluster a single single work machine can",
    "start": "1243120",
    "end": "1250640"
  },
  {
    "text": "run workloads from different talents and there might be some malicious u",
    "start": "1250640",
    "end": "1255840"
  },
  {
    "text": "users or codes inside the workloads so it's not acceptable to",
    "start": "1255840",
    "end": "1261520"
  },
  {
    "text": "share same copy of host kernel to address this problem we are currently using qatar to support",
    "start": "1261520",
    "end": "1268400"
  },
  {
    "text": "the oscar isolation and we are also actively investigating lightweight virtualization approach",
    "start": "1268400",
    "end": "1276480"
  },
  {
    "text": "to provide better performance while maintaining the isolation level",
    "start": "1276480",
    "end": "1283600"
  },
  {
    "text": "the next part is storage most of the modern storage providers",
    "start": "1284159",
    "end": "1290720"
  },
  {
    "text": "they already provide either account based or volume-based isolation so",
    "start": "1290720",
    "end": "1298559"
  },
  {
    "text": "there really isn't much iso work to do here in terminal storage isolation we only added",
    "start": "1298559",
    "end": "1306480"
  },
  {
    "text": "some talent level storage quarter to manage the storage cost among",
    "start": "1306480",
    "end": "1311919"
  },
  {
    "text": "different talents the most complicated part is actually",
    "start": "1311919",
    "end": "1317039"
  },
  {
    "text": "about network in the vanina kubernetes the network",
    "start": "1317039",
    "end": "1322400"
  },
  {
    "text": "model is a flat more flat mode it assumes every port",
    "start": "1322400",
    "end": "1327520"
  },
  {
    "text": "is reachable from another pod and they all share a single port ip side range and the",
    "start": "1327520",
    "end": "1334400"
  },
  {
    "text": "service ip side range but uh as you can imagine",
    "start": "1334400",
    "end": "1340720"
  },
  {
    "text": "this cannot work in a hard multi tenancy model because in a hard multi-tenancy model",
    "start": "1340720",
    "end": "1347600"
  },
  {
    "text": "each talent is supposed to be strictly isolated from other talents and they shouldn't aware",
    "start": "1347600",
    "end": "1353600"
  },
  {
    "text": "of the be aware of the existence of other talents so um that the the",
    "start": "1353600",
    "end": "1361520"
  },
  {
    "text": "pod ip side range need to be uh need to be uh isolated and each tenant should",
    "start": "1361520",
    "end": "1369039"
  },
  {
    "text": "should have the freedom to choose their own ip range without worrying about the ip conflicts and the",
    "start": "1369039",
    "end": "1375520"
  },
  {
    "text": "service ip range same needs to be isolated and also each tenant should have their own dns",
    "start": "1375520",
    "end": "1383760"
  },
  {
    "text": "and all this stuff should be isolated in our solution",
    "start": "1383760",
    "end": "1389919"
  },
  {
    "text": "we choose vpc network to provide strict isolation but at the same time",
    "start": "1389919",
    "end": "1396559"
  },
  {
    "text": "we also want to support the other exchange as a long vpc network for",
    "start": "1396559",
    "end": "1402720"
  },
  {
    "text": "easier adoption in order to make the design consistent and support different network providers we introduce",
    "start": "1402720",
    "end": "1411039"
  },
  {
    "text": "a new network api object the name is network and a network object represents an",
    "start": "1411039",
    "end": "1418480"
  },
  {
    "text": "isolated virtual network and each version each this network has its own",
    "start": "1418480",
    "end": "1424080"
  },
  {
    "text": "port ip range service ip range dns service policies everything is is isolated",
    "start": "1424080",
    "end": "1430720"
  },
  {
    "text": "with this network object and a network object that can be of any",
    "start": "1430720",
    "end": "1436240"
  },
  {
    "text": "type either vpc backed or long piece backed and for each type there there will be a",
    "start": "1436240",
    "end": "1443440"
  },
  {
    "text": "network provider deployed in system space just like how a cid and operator works",
    "start": "1443440",
    "end": "1451039"
  },
  {
    "text": "all the ports their ports and service and other network related objects",
    "start": "1451360",
    "end": "1457039"
  },
  {
    "text": "there are annotated to attach to a specific network if we look at the example here in the",
    "start": "1457039",
    "end": "1464559"
  },
  {
    "text": "red space you can see there are three network objects default net a net and net b so",
    "start": "1464559",
    "end": "1471360"
  },
  {
    "text": "any product service can be attached to any network if a product service is not annotated by",
    "start": "1471360",
    "end": "1478159"
  },
  {
    "text": "default it will be attached to the default network and this default network object is",
    "start": "1478159",
    "end": "1483760"
  },
  {
    "text": "created by the tenant controller automatically during the space initialization",
    "start": "1483760",
    "end": "1490400"
  },
  {
    "text": "here i want to give a brief summary of the current project status next and the challenges currently in actos",
    "start": "1494880",
    "end": "1502240"
  },
  {
    "text": "we already finished pretty much the mostly common used functionalities",
    "start": "1502240",
    "end": "1509919"
  },
  {
    "text": "like the talent initialization talent deletion and the commonly used functionality",
    "start": "1509919",
    "end": "1516000"
  },
  {
    "text": "objects like pos namespaces replica sets deployments",
    "start": "1516000",
    "end": "1522960"
  },
  {
    "text": "job stateful set all this all these commonly used functionality objects",
    "start": "1522960",
    "end": "1528320"
  },
  {
    "text": "and also commonly used uh management objects like rule row binding cluster rule",
    "start": "1528320",
    "end": "1534960"
  },
  {
    "text": "classical binding resource quota etc",
    "start": "1534960",
    "end": "1542159"
  },
  {
    "text": "now we are working on the multi-network internal next step we are planning on",
    "start": "1542159",
    "end": "1548480"
  },
  {
    "text": "two things first we want to uh support the tenant level or resource quarter rate limit and the perf",
    "start": "1548480",
    "end": "1556240"
  },
  {
    "text": "isolation since our solution is based on where to cluster cluster mode",
    "start": "1556240",
    "end": "1561520"
  },
  {
    "text": "different talents share a same control plane so this is to prevent",
    "start": "1561520",
    "end": "1567039"
  },
  {
    "text": "a talent from abuse the control plane and uh it won't cause any",
    "start": "1567039",
    "end": "1574080"
  },
  {
    "text": "to make sure it won't cause any performance impact on other talents",
    "start": "1574080",
    "end": "1579360"
  },
  {
    "text": "and the second thing about the cross talent access and the find granular access control for",
    "start": "1579360",
    "end": "1584880"
  },
  {
    "text": "system talent because in the current model system tenant users",
    "start": "1584880",
    "end": "1590320"
  },
  {
    "text": "can access any other regular tenants it's like a super user but the next step we are going to",
    "start": "1590320",
    "end": "1595679"
  },
  {
    "text": "introduce find graduate access control so we can reduce the use of this super",
    "start": "1595679",
    "end": "1600880"
  },
  {
    "text": "user talking about challenges we can see",
    "start": "1600880",
    "end": "1606880"
  },
  {
    "text": "there are two challenges first our solution has a lot of intricate changes",
    "start": "1606880",
    "end": "1614000"
  },
  {
    "text": "like the endpoint resolution in the api server and some controller changes client goal",
    "start": "1614000",
    "end": "1620000"
  },
  {
    "text": "changes uh we are thinking about how we can optimize this and reduce intricate changes",
    "start": "1620000",
    "end": "1628480"
  },
  {
    "text": "and also the second one is about the client goal and controller code changes",
    "start": "1628480",
    "end": "1634159"
  },
  {
    "text": "we need to add a new parameter called talent for announce our ciud and",
    "start": "1634559",
    "end": "1641200"
  },
  {
    "text": "the list of watch methods but unfortunately because gulen doesn't support the method overloading",
    "start": "1641200",
    "end": "1647279"
  },
  {
    "text": "so we have to create a new function for each of these changes next we are thinking about how we can",
    "start": "1647279",
    "end": "1653679"
  },
  {
    "text": "use some other methods approach like a context-based or",
    "start": "1653679",
    "end": "1658880"
  },
  {
    "text": "implicit context to reduce this kind of code changes",
    "start": "1658880",
    "end": "1664159"
  },
  {
    "start": "1666000",
    "end": "1696000"
  },
  {
    "text": "uh that's pretty much china i want to talk about today and here is a list of links of our work",
    "start": "1667520",
    "end": "1674640"
  },
  {
    "text": "as i mentioned earlier all our work is done in open source project called actors here",
    "start": "1674640",
    "end": "1680320"
  },
  {
    "text": "is a link to the project ripple design documents our roadmap",
    "start": "1680320",
    "end": "1685600"
  },
  {
    "text": "and the detailed design docs everything in public you are also welcome to join our snack",
    "start": "1685600",
    "end": "1694159"
  },
  {
    "text": "channel uh hey welcome to the demo next i will play our recorded uh",
    "start": "1694840",
    "end": "1699919"
  },
  {
    "start": "1696000",
    "end": "2018000"
  },
  {
    "text": "demo video made by channel for different tenant this one is for system tenant and these",
    "start": "1699919",
    "end": "1706799"
  },
  {
    "text": "two are for two regular tenants which i just created we explained in the presentation that",
    "start": "1706799",
    "end": "1713840"
  },
  {
    "text": "each tenant is working like only its own virtual cluster so when a tenant is created",
    "start": "1713840",
    "end": "1721360"
  },
  {
    "text": "some resources have already been created for it just like some resources have already",
    "start": "1721360",
    "end": "1727440"
  },
  {
    "text": "been created when the cluster which i mean the kubenetes cluster is up so here we can take a look",
    "start": "1727440",
    "end": "1734720"
  },
  {
    "text": "like in this tenant some name spaces all right you can create it same here",
    "start": "1735279",
    "end": "1741919"
  },
  {
    "text": "and some cluster roles have already been created",
    "start": "1741919",
    "end": "1747679"
  },
  {
    "text": "like here and also here and of course each tenant can create",
    "start": "1747679",
    "end": "1753840"
  },
  {
    "text": "their own resources say this tenant",
    "start": "1753840",
    "end": "1759919"
  },
  {
    "text": "would like to create a new namespace and you can do it and then we can see yeah",
    "start": "1759919",
    "end": "1767840"
  },
  {
    "text": "it's created and but for this tenant okay no new namespaces is create",
    "start": "1767840",
    "end": "1774880"
  },
  {
    "text": "so everything remain the same so here we can see the resources management",
    "start": "1774880",
    "end": "1780799"
  },
  {
    "text": "between different tenants are isolated and next thing i want to show is the",
    "start": "1780799",
    "end": "1786000"
  },
  {
    "text": "creation of the deployment and here i have the department yemo file let's take a look at first",
    "start": "1786000",
    "end": "1794159"
  },
  {
    "text": "okay and you can see it's just a",
    "start": "1794159",
    "end": "1799760"
  },
  {
    "text": "yaml file ex same as any yama file we can see in kubernetes and let's run it",
    "start": "1799760",
    "end": "1809840"
  },
  {
    "text": "and you can see it's up so we can have a check here",
    "start": "1812559",
    "end": "1817278"
  },
  {
    "text": "okay you can see the deployments here but for this tenant okay resource creation is isolated",
    "start": "1819440",
    "end": "1826480"
  },
  {
    "text": "no new deployment here and also earlier i mentioned like",
    "start": "1826480",
    "end": "1832000"
  },
  {
    "text": "cluster role which is working as a clutter scope object in kubernetes now it's working at the",
    "start": "1832000",
    "end": "1839039"
  },
  {
    "text": "tenant space level in our system and it's done transparently to the customer",
    "start": "1839039",
    "end": "1845520"
  },
  {
    "text": "and let me show it so here i'm going to create a cluster role",
    "start": "1845520",
    "end": "1852240"
  },
  {
    "text": "and that's the yaml file and here we go and we're going to create it",
    "start": "1852240",
    "end": "1860640"
  },
  {
    "text": "okay and here you can see no",
    "start": "1861519",
    "end": "1868559"
  },
  {
    "text": "yeah and you can see the new row is here but for this one",
    "start": "1872720",
    "end": "1879600"
  },
  {
    "text": "okay you see there is no new cluster rule so that's we say the cluster scope objects",
    "start": "1879600",
    "end": "1884720"
  },
  {
    "text": "is now working at a space level and we also mentioned each tenant can create their own crd",
    "start": "1884720",
    "end": "1892880"
  },
  {
    "text": "and this time we are going to play with this tenant okay so",
    "start": "1892880",
    "end": "1901760"
  },
  {
    "text": "and then we are going to",
    "start": "1903840",
    "end": "1908480"
  },
  {
    "text": "run it okay it's created then we can take a",
    "start": "1908880",
    "end": "1915440"
  },
  {
    "text": "look at the crd here okay and this crd just like the crd",
    "start": "1915440",
    "end": "1922000"
  },
  {
    "text": "in kubernetes you can cheat it like a api resource and this",
    "start": "1922000",
    "end": "1928320"
  },
  {
    "text": "command will work but for this one okay he knows nothing here",
    "start": "1928320",
    "end": "1934080"
  },
  {
    "text": "and also we can create",
    "start": "1934080",
    "end": "1937278"
  },
  {
    "text": "custom resource based on the crd okay then you can check it",
    "start": "1939679",
    "end": "1946320"
  },
  {
    "text": "using this command and here it is and",
    "start": "1946320",
    "end": "1953840"
  },
  {
    "text": "for the system tenants as we mentioned it has access to the spaces of",
    "start": "1953840",
    "end": "1960000"
  },
  {
    "text": "the regular tenants so he can take a look",
    "start": "1960000",
    "end": "1964320"
  },
  {
    "text": "at the resources in those regular tenants like he can take a look at name spaces in this tenant you can see",
    "start": "1965120",
    "end": "1971039"
  },
  {
    "text": "there are four or three which are created by the system automatically and the one we just created",
    "start": "1971039",
    "end": "1976080"
  },
  {
    "text": "and also you can take a look at the other tenant and you'll see here",
    "start": "1976080",
    "end": "1983120"
  },
  {
    "text": "there are only three here ends our demo thank you very",
    "start": "1983120",
    "end": "1988840"
  },
  {
    "text": "much",
    "start": "1988840",
    "end": "1991840"
  },
  {
    "start": "2018000",
    "end": "2462000"
  },
  {
    "text": "and thank you very much",
    "start": "2019279",
    "end": "2032640"
  },
  {
    "text": "okay",
    "start": "2032640",
    "end": "2034960"
  },
  {
    "text": "hi everyone i am this happening chair and i will take the",
    "start": "2039519",
    "end": "2046399"
  },
  {
    "text": "questions asked during the presentation and first i want to apologize",
    "start": "2046399",
    "end": "2051919"
  },
  {
    "text": "uh sorry due to some technical problems i think the demo sound wasn't playing out so",
    "start": "2051919",
    "end": "2058878"
  },
  {
    "text": "it didn't work very well uh i guess we have five minutes to",
    "start": "2058879",
    "end": "2064800"
  },
  {
    "text": "answer all the questions i will address shane and i will address these questions",
    "start": "2064800",
    "end": "2070320"
  },
  {
    "text": "based on the order it issued on the platform the first question is uh for mike",
    "start": "2070320",
    "end": "2078320"
  },
  {
    "text": "brazer does the virtual class pass the cuber conformance test yes that's our target and we haven't",
    "start": "2078320",
    "end": "2086079"
  },
  {
    "text": "performed the conformance test yet because we are still working on some and the multi-multi-networking part",
    "start": "2086079",
    "end": "2095200"
  },
  {
    "text": "chen are you able to see the question list yes okay like i can i i'll take next question that's question",
    "start": "2098960",
    "end": "2105359"
  },
  {
    "text": "number three from sugander agrawal so what's the difference the",
    "start": "2105359",
    "end": "2112800"
  },
  {
    "text": "question is what's the difference between space and kubernetes namespace fundamentally",
    "start": "2112800",
    "end": "2118400"
  },
  {
    "text": "space is a higher level hierarchy above namespace so under one namespace",
    "start": "2118400",
    "end": "2127359"
  },
  {
    "text": "you can have different name spaces and it's possible that you can have two",
    "start": "2127359",
    "end": "2133440"
  },
  {
    "text": "namespace with the same name under under two different spaces so it's a higher",
    "start": "2133440",
    "end": "2138720"
  },
  {
    "text": "level than namespace that's i think johnny has slides on this",
    "start": "2138720",
    "end": "2144800"
  },
  {
    "text": "but basically that's just it's a higher level of hierarchy that's it yeah yes as a space is",
    "start": "2144800",
    "end": "2152240"
  },
  {
    "text": "actually a higher level isolation unit than namespace a space can also contain",
    "start": "2152240",
    "end": "2158079"
  },
  {
    "text": "long namespaced objects like cluster rules or pvs so it's more like a virtual cluster it's",
    "start": "2158079",
    "end": "2164800"
  },
  {
    "text": "larger than namespace the next question is from martial",
    "start": "2164800",
    "end": "2171520"
  },
  {
    "text": "maltese what's your secretive model uh basically what are the shared resources",
    "start": "2171520",
    "end": "2177040"
  },
  {
    "text": "among talents actually they are in our model they are [Music]",
    "start": "2177040",
    "end": "2183200"
  },
  {
    "text": "first each space are slickly isolated there's no shared resource among spaces",
    "start": "2183200",
    "end": "2189280"
  },
  {
    "text": "some physical some cluster resource like nodes they are in",
    "start": "2189280",
    "end": "2195920"
  },
  {
    "text": "system space and they can be used by each talent but each talent cannot",
    "start": "2195920",
    "end": "2201359"
  },
  {
    "text": "access this system space directly they can only be used by the system controllers",
    "start": "2201359",
    "end": "2208880"
  },
  {
    "text": "what mechanisms are actually doing isolation between talents",
    "start": "2209760",
    "end": "2214800"
  },
  {
    "text": "first on the storage side i mean on atcd all the talented",
    "start": "2214800",
    "end": "2220880"
  },
  {
    "text": "resources are saved on the different key prefix so they are totally isolated and the",
    "start": "2220880",
    "end": "2228000"
  },
  {
    "text": "second when when clients try to access this resource in api server there's authorized",
    "start": "2228000",
    "end": "2234560"
  },
  {
    "text": "authorization and authentication mechanism we make sure a talented client can only",
    "start": "2234560",
    "end": "2240560"
  },
  {
    "text": "access the resource object that has been authorized to him and third",
    "start": "2240560",
    "end": "2247440"
  },
  {
    "text": "in all the controllers like a deployment controller or replica set controller they are aware of",
    "start": "2247440",
    "end": "2254079"
  },
  {
    "text": "talents when they associate different objects like associating a replica set to a part",
    "start": "2254079",
    "end": "2261839"
  },
  {
    "text": "the only associated resource among inside the tenant i think this to these three sites uh",
    "start": "2261839",
    "end": "2270240"
  },
  {
    "text": "build the talent isolation okay so next one is question number six",
    "start": "2270240",
    "end": "2278240"
  },
  {
    "text": "from bijan oh i hope i pronounced this right name correctly the question is uh uh",
    "start": "2278240",
    "end": "2285040"
  },
  {
    "text": "is this behavior you are describing a custom kubernetes distribution or extension for",
    "start": "2285040",
    "end": "2292000"
  },
  {
    "text": "example the stock kubernetes uh actually what we are",
    "start": "2292000",
    "end": "2298400"
  },
  {
    "text": "describing here today it's uh the the it's a it's more like a customer comment",
    "start": "2298400",
    "end": "2303520"
  },
  {
    "text": "distribution involves something she changed as we described just now like we have some change to the api server",
    "start": "2303520",
    "end": "2309760"
  },
  {
    "text": "and to the controllers corporates and also we had to add some new apis to client go but one",
    "start": "2309760",
    "end": "2315680"
  },
  {
    "text": "thing we would like to emphasize is we have some designs for backwards",
    "start": "2315680",
    "end": "2321440"
  },
  {
    "text": "compatibility so all the existing crds all the existing yaml files and all these tools are continue to work",
    "start": "2321440",
    "end": "2329440"
  },
  {
    "text": "i hope that answers your question yeah and i probably can add one couple more sentences basically",
    "start": "2329440",
    "end": "2336000"
  },
  {
    "text": "we are describing a standalone standalone project open",
    "start": "2336000",
    "end": "2341920"
  },
  {
    "text": "source project it's called actus actus is a base is derived from",
    "start": "2341920",
    "end": "2348640"
  },
  {
    "text": "kubernetes ripple a code base but it's a standalone project and is using for for the cloud infrastructure",
    "start": "2348640",
    "end": "2356320"
  },
  {
    "text": "area so it's um it's not a add-on kubernetes add-on it's it's not also a kubernetes",
    "start": "2356320",
    "end": "2364480"
  },
  {
    "text": "distribution it's a standalone project open source project",
    "start": "2364480",
    "end": "2369839"
  },
  {
    "text": "the next question is from bram and nat scale um does it also work when when using us",
    "start": "2369839",
    "end": "2377280"
  },
  {
    "text": "service mesh yes we are working on the network solution once the network solution is done",
    "start": "2377280",
    "end": "2382320"
  },
  {
    "text": "the service match should also work okay i guess we have only one minute",
    "start": "2382320",
    "end": "2387839"
  },
  {
    "text": "remaining so so probably we won't be able to take uh all the questions let",
    "start": "2387839",
    "end": "2393599"
  },
  {
    "text": "me see if there are any other important one i'm i'm sorry for it because the",
    "start": "2393599",
    "end": "2398720"
  },
  {
    "text": "platform limited our time just popped out a warning window for the one minute limit",
    "start": "2398720",
    "end": "2404640"
  },
  {
    "text": "uh one question",
    "start": "2404640",
    "end": "2411440"
  },
  {
    "text": "okay i think for question number 11 yes it's open source project i think that's a quick answer yes it's a",
    "start": "2411440",
    "end": "2418480"
  },
  {
    "text": "this everything's open public i put a link there and some so somebody asked if we can share",
    "start": "2418480",
    "end": "2424960"
  },
  {
    "text": "the slides and also because today the the recorded demo video didn't play well",
    "start": "2424960",
    "end": "2430480"
  },
  {
    "text": "i will put the link to the slides and probably also the demo video uh on our github github",
    "start": "2430480",
    "end": "2437760"
  },
  {
    "text": "github a wiki page home page so you can you can watch it there",
    "start": "2437760",
    "end": "2444240"
  },
  {
    "text": "okay i guess we are probably we are out the time now and i think we",
    "start": "2450800",
    "end": "2458400"
  },
  {
    "text": "are cut out from the platform from the live",
    "start": "2458400",
    "end": "2464800"
  }
]