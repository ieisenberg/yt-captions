[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "hello all welcome good afternoon I'm Krishna Rajesh I'm a senior architect with IBM along with Brandon",
    "start": "0",
    "end": "6240"
  },
  {
    "text": "Kelly today we're going to talk about our proposal to fight back against cyber risk in software supply chain with a",
    "start": "6240",
    "end": "13259"
  },
  {
    "text": "secure and compliant devsecops pipeline for regulated environments",
    "start": "13259",
    "end": "20060"
  },
  {
    "text": "here is our agenda for today what is cyber risk and how does it affect the software supply chain",
    "start": "21359",
    "end": "28439"
  },
  {
    "text": "what is the current regulated environment landscape and what are the regulatory requirements",
    "start": "28439",
    "end": "34140"
  },
  {
    "text": "what is the cops and how can it compare cyber risks we'll talk about continuous",
    "start": "34140",
    "end": "40620"
  },
  {
    "text": "integration continuous delivery deployment and something new continuous compliance",
    "start": "40620",
    "end": "46020"
  },
  {
    "text": "and will do a case study on buy-in where we implemented our devsecops practices",
    "start": "46020",
    "end": "53520"
  },
  {
    "text": "let's get started cyber risk cyber risks can bring down",
    "start": "53520",
    "end": "60180"
  },
  {
    "start": "56000",
    "end": "56000"
  },
  {
    "text": "the infrastructure of an organization and can damage its reputation and can cause Financial loss",
    "start": "60180",
    "end": "66659"
  },
  {
    "text": "software supply chain security is often neglected we always talk about observability monitoring alerting Etc",
    "start": "66659",
    "end": "73920"
  },
  {
    "text": "but remember prevention is far better than cure identify potential race before it even",
    "start": "73920",
    "end": "80159"
  },
  {
    "text": "reads production Garnet predicts that by 2025 45 percentage of organizations worldwide",
    "start": "80159",
    "end": "87360"
  },
  {
    "text": "will have experienced attacks on their software supply chain that is a third fault increase from",
    "start": "87360",
    "end": "94320"
  },
  {
    "text": "2021. 4.35 million is the global average cost",
    "start": "94320",
    "end": "100140"
  },
  {
    "text": "of data breach how can we make sure our software Supply chains software",
    "start": "100140",
    "end": "105479"
  },
  {
    "text": "suppliers and isvs independent software vendors we work with demonstrate the best security practices to minimize",
    "start": "105479",
    "end": "112500"
  },
  {
    "text": "these security risks regulator environments face unprecedented risk from multiple vectors",
    "start": "112500",
    "end": "120240"
  },
  {
    "text": "software's supply chain attacks like OCTA solar winds which everybody know",
    "start": "120240",
    "end": "125520"
  },
  {
    "text": "open source security vulnerabilities compromise dependencies",
    "start": "125520",
    "end": "130679"
  },
  {
    "text": "need for Rapid development potential to bypass critical CI CD systems",
    "start": "130679",
    "end": "137040"
  },
  {
    "text": "increasing complexity in ID security and automation tools like cicd systems",
    "start": "137040",
    "end": "143459"
  },
  {
    "text": "compliance and all detergents is really hard to maintain",
    "start": "143459",
    "end": "149060"
  },
  {
    "text": "auditable change lock our goal here is to build an automated",
    "start": "149099",
    "end": "154620"
  },
  {
    "text": "system that's secure against these risks with less complexity",
    "start": "154620",
    "end": "161840"
  },
  {
    "text": "we have to prevent new vulnerabilities from reaching production ensure frequent",
    "start": "162420",
    "end": "168060"
  },
  {
    "text": "updates to production with quality and control at the same time collect evidence",
    "start": "168060",
    "end": "174720"
  },
  {
    "text": "for handling security audits still tracking issues and documenting",
    "start": "174720",
    "end": "180360"
  },
  {
    "text": "changes and even reporting",
    "start": "180360",
    "end": "184160"
  },
  {
    "start": "185000",
    "end": "185000"
  },
  {
    "text": "so what are supply chain raises here is an illustration which stores different stages in a deployment you can",
    "start": "186420",
    "end": "194099"
  },
  {
    "text": "see there are different stages like development source code management build step",
    "start": "194099",
    "end": "199519"
  },
  {
    "text": "packaging and deploying out to Dev and production itself",
    "start": "199519",
    "end": "205260"
  },
  {
    "text": "so let's get started with development what are the risks here developer can't push one level of code",
    "start": "205260",
    "end": "211620"
  },
  {
    "text": "into your sem now SCM source code management tools",
    "start": "211620",
    "end": "216840"
  },
  {
    "text": "like GitHub itself can be compromised if you remember the case with obja their",
    "start": "216840",
    "end": "222959"
  },
  {
    "text": "GitHub repository was hacked and malicious code were inserted",
    "start": "222959",
    "end": "229400"
  },
  {
    "text": "in the build step the build container platform can be compromised what if hackers can get into the API",
    "start": "229799",
    "end": "236459"
  },
  {
    "text": "keys of your devops tools probably a cloud devops tools",
    "start": "236459",
    "end": "241620"
  },
  {
    "text": "and can access your source code now the next step is package report",
    "start": "241620",
    "end": "248159"
  },
  {
    "text": "package reports like container Registries can be compromised this especially the case if your container",
    "start": "248159",
    "end": "253379"
  },
  {
    "text": "registry is a public registry and eventually this container compromise",
    "start": "253379",
    "end": "259320"
  },
  {
    "text": "images can get onto your development environment and onto your production itself so any stage of this delivery",
    "start": "259320",
    "end": "266699"
  },
  {
    "text": "pipeline can be compromised now what if you have so for example you",
    "start": "266699",
    "end": "272160"
  },
  {
    "text": "tested everything deployed onto your development and then on to production and then eventually new vulnerabilities",
    "start": "272160",
    "end": "277800"
  },
  {
    "text": "are identified how would you know that how will you continuously scan your code for continuous security and compliance",
    "start": "277800",
    "end": "285060"
  },
  {
    "text": "so these are the questions we are trying to solve let me now invite Brandon Kelly to talk",
    "start": "285060",
    "end": "290880"
  },
  {
    "text": "about our devsecore pipelines in detail London",
    "start": "290880",
    "end": "296120"
  },
  {
    "text": "foreign thank you very much Krishna so um you have described the problem and now let",
    "start": "296520",
    "end": "301860"
  },
  {
    "text": "me describe I suppose the solution that we have devised to combat the risk in",
    "start": "301860",
    "end": "307620"
  },
  {
    "start": "306000",
    "end": "306000"
  },
  {
    "text": "the software supply chain so our pipeline or tool chain consists",
    "start": "307620",
    "end": "312840"
  },
  {
    "text": "of three separate pipelines uh continuous integration continuous deployment and continuous compliance so",
    "start": "312840",
    "end": "318720"
  },
  {
    "text": "I'm just going to talk about the principles of this pipeline before talking about the specific elements of it so first off absolutely everything is",
    "start": "318720",
    "end": "326160"
  },
  {
    "text": "defined as code the infrastructure the application runs on is called the pipeline itself is defined as code even",
    "start": "326160",
    "end": "332759"
  },
  {
    "text": "the deployment is code and the new components to the system that makes it so special the compliance The Continuous",
    "start": "332759",
    "end": "339419"
  },
  {
    "text": "compliance is based on gold as well this is to make it as manageable and reusable as possible",
    "start": "339419",
    "end": "345000"
  },
  {
    "text": "we aim to make this as broad as possible so we support multiple development languages we ourselves have tested Java",
    "start": "345000",
    "end": "350759"
  },
  {
    "text": "node.js Python and terraform infrastructure as code on this pipeline somebody else in our team has also",
    "start": "350759",
    "end": "357120"
  },
  {
    "text": "tested golang um but to be honest it's a custom framework that's extremely extensible so",
    "start": "357120",
    "end": "363900"
  },
  {
    "text": "it can actually provide for any language whatsoever we Define a consistent approach for any",
    "start": "363900",
    "end": "369960"
  },
  {
    "text": "application so for example you have Java and you have node.js they both have their own unit testing Frameworks they",
    "start": "369960",
    "end": "375600"
  },
  {
    "text": "have both have their own vulnerability scanners and they are both implemented in that way but we intend for this to be a",
    "start": "375600",
    "end": "383340"
  },
  {
    "text": "consistent approach they all go through the same types of tests even if they're defined differently",
    "start": "383340",
    "end": "388680"
  },
  {
    "text": "and we also have shared pipeline templates to allow for this",
    "start": "388680",
    "end": "394039"
  },
  {
    "text": "now let me explain devsecops a little bit for those that aren't familiar with",
    "start": "394139",
    "end": "399360"
  },
  {
    "text": "it so devops is a combination of development and operations to make a more consistent more efficient more fast",
    "start": "399360",
    "end": "407880"
  },
  {
    "text": "um system for developing and deploying applications devsecops introduces",
    "start": "407880",
    "end": "413639"
  },
  {
    "text": "security into the mix what we do is we shift the security left by finding security problems as soon as possible",
    "start": "413639",
    "end": "419699"
  },
  {
    "text": "before they reach production environments ideally and you'll see this in some of our our pipelines before it",
    "start": "419699",
    "end": "425880"
  },
  {
    "text": "even enters the main branch of a code base so in the pull request stage we might be able to find some problems",
    "start": "425880",
    "end": "432060"
  },
  {
    "text": "now Security in application development is usually found to be an impediment to",
    "start": "432060",
    "end": "437460"
  },
  {
    "text": "developers they find that it slows them down that does some rigorous requirements that",
    "start": "437460",
    "end": "443400"
  },
  {
    "text": "is very painful we aim to make this devsecops process as painless as",
    "start": "443400",
    "end": "448680"
  },
  {
    "text": "possible while maintaining the rapid application development process as you all know and love at this point",
    "start": "448680",
    "end": "454139"
  },
  {
    "text": "security I'm not going to shoulder hold this it is a challenge there is a lack of knowledge in",
    "start": "454139",
    "end": "460139"
  },
  {
    "text": "application teams about the Deep security problems that are in infrastruct at the moment in infrastructure at the moment",
    "start": "460139",
    "end": "466740"
  },
  {
    "text": "um the cloud has made things quite difficult in that sense we also need to be able especially as",
    "start": "466740",
    "end": "473460"
  },
  {
    "text": "our thing our presentation here is about regulated environments such as Banking",
    "start": "473460",
    "end": "478560"
  },
  {
    "text": "and finance auditing is a massive massive problem I've gone through this a couple of times I'm sure some of you",
    "start": "478560",
    "end": "484620"
  },
  {
    "text": "have as well it's a massive manual efforts huge expense to it and it's extremely painful as you will see in the",
    "start": "484620",
    "end": "490919"
  },
  {
    "text": "coming slides we have developed some solutions to mitigate the auditing problem",
    "start": "490919",
    "end": "497220"
  },
  {
    "text": "and also we I've discussed this already The Continuous compliance pipelines we",
    "start": "497220",
    "end": "503819"
  },
  {
    "text": "aim to detect new vulnerabilities zero day bugs as soon as they're reported to databases such as Snick and the cve",
    "start": "503819",
    "end": "510660"
  },
  {
    "text": "database and we also aim to look for potentially Troublesome configuration changes or malicious code editions",
    "start": "510660",
    "end": "517200"
  },
  {
    "text": "directly to infrastructure this is built upon open source tooling you'll be happy to hear in the Linux",
    "start": "517200",
    "end": "523620"
  },
  {
    "text": "Foundation it is built upon tecton that's the pipeline Runner itself and plenty of our tools processes and",
    "start": "523620",
    "end": "529980"
  },
  {
    "text": "formats are open source too including sonar Cube or wasps zap the CIS benchmarks and our software build",
    "start": "529980",
    "end": "536760"
  },
  {
    "text": "materials a key component of our pipeline is based on the open source Oasis Cyclone DX formats",
    "start": "536760",
    "end": "544980"
  },
  {
    "text": "so naturally I'm going to start with the continuous integration stage for those unfamiliar with the concept the",
    "start": "544980",
    "end": "550860"
  },
  {
    "start": "545000",
    "end": "545000"
  },
  {
    "text": "application build stage where you build your codes maybe run some unit tests on this package it into a container and",
    "start": "550860",
    "end": "556800"
  },
  {
    "text": "store you know registry for use later on so the general flow of our pipeline is",
    "start": "556800",
    "end": "562200"
  },
  {
    "text": "quite similar to most continuous integration systems for unit tests we build do some Dynamic scans so I'm going",
    "start": "562200",
    "end": "568440"
  },
  {
    "text": "to focus more on the specific features of our pipeline system that make it so special make it what it is",
    "start": "568440",
    "end": "576000"
  },
  {
    "text": "um it has robust code review and Branch protection checks so your code must be reviewed by another member of your team",
    "start": "576000",
    "end": "582600"
  },
  {
    "text": "or maybe higher up depending on what you want and you are also not allowed to",
    "start": "582600",
    "end": "589440"
  },
  {
    "text": "push your code directly to a main branch without going through our CI pipeline uh the pipeline itself can detect if your",
    "start": "589440",
    "end": "595080"
  },
  {
    "text": "Bunch protection is enabled we have a series of vulnerability scans such as Statics code scans through sonar Cube",
    "start": "595080",
    "end": "601800"
  },
  {
    "text": "Dynamic codes and application scans through Oasis app to determine if there's any application vulnerabilities",
    "start": "601800",
    "end": "608040"
  },
  {
    "text": "while it is running we have dependency checks to see if your open source packages or even your private packages",
    "start": "608040",
    "end": "614459"
  },
  {
    "text": "have any problems reported to them we have base image and built image scanners",
    "start": "614459",
    "end": "619680"
  },
  {
    "text": "as well and as mentioned I also use the CIS benchmarks on",
    "start": "619680",
    "end": "625080"
  },
  {
    "text": "on our code on our application secret detection is to determine if someone has accidentally or deliberately put in",
    "start": "625080",
    "end": "632220"
  },
  {
    "text": "credentials or passwords into their code where it could be easily found by anyone and we don't allow those",
    "start": "632220",
    "end": "638720"
  },
  {
    "text": "but the more interesting Parts come now in our continuous integration pipeline we have signed build artifacts this is",
    "start": "639240",
    "end": "646860"
  },
  {
    "text": "enforced in the continuous deployment stage which I will show in a few minutes to verify the provenance and origin of",
    "start": "646860",
    "end": "652680"
  },
  {
    "text": "components and microservices of an application this provenance includes the signed hash based on a gpg key we have",
    "start": "652680",
    "end": "660420"
  },
  {
    "text": "Scorpio integration for containers and we also provide for third-party sign-in services",
    "start": "660420",
    "end": "666560"
  },
  {
    "text": "this signed build artifact also links back to the very ID of the specific pipeline one that created the artifact",
    "start": "666560",
    "end": "673140"
  },
  {
    "text": "so that further verifies the provenance of where this artifact came from for auditing purposes and just for General",
    "start": "673140",
    "end": "679320"
  },
  {
    "text": "Security as well I've mentioned the software bill of materials this is extremely important",
    "start": "679320",
    "end": "684899"
  },
  {
    "text": "for securing a software supply chain what it is is a document that lists all of your",
    "start": "684899",
    "end": "692100"
  },
  {
    "text": "application packages all of your dependencies and also all of your for",
    "start": "692100",
    "end": "697260"
  },
  {
    "text": "say a container it would be all of your operating system packages as well that have to be installed for your application to run the software Builder",
    "start": "697260",
    "end": "704399"
  },
  {
    "text": "materials also includes open source licenses too and in regulated environment seats can be quite strict on",
    "start": "704399",
    "end": "709800"
  },
  {
    "text": "which application licenses you can use such as Apache so the scanner can be configured to",
    "start": "709800",
    "end": "717240"
  },
  {
    "text": "check for those if necessary now I'm going to stress audit Readiness",
    "start": "717240",
    "end": "722399"
  },
  {
    "text": "again because it's very very important to how this pipeline works it's one of the most powerful part of the tool",
    "start": "722399",
    "end": "728339"
  },
  {
    "text": "chains so in order to make audits as easy and painless as possible we",
    "start": "728339",
    "end": "734459"
  },
  {
    "text": "constantly gather evidence in the pipeline run that certain tasks",
    "start": "734459",
    "end": "739620"
  },
  {
    "text": "have been run all of the tasks in fact all of the unit tests all of the vulnerability scans all of the",
    "start": "739620",
    "end": "745320"
  },
  {
    "text": "vulnerabilities that may be detected this evidence will link straight back to",
    "start": "745320",
    "end": "750600"
  },
  {
    "text": "the artifact and the pipeline run and any git issues that may be automatically created by the pipeline in the course of",
    "start": "750600",
    "end": "756959"
  },
  {
    "text": "this in case any vulnerabilities are detected we then store that evidence in both git for developer reasons so that",
    "start": "756959",
    "end": "763440"
  },
  {
    "text": "they can read us and use it but because that's not very secure and we want to maintain the security of this evidence",
    "start": "763440",
    "end": "769139"
  },
  {
    "text": "we also store in an immutable Cloud object storage bucket and finally rebuilds the release",
    "start": "769139",
    "end": "775740"
  },
  {
    "text": "inventory I'm going to explain this in detail in just one minute but for now just think of it as a list",
    "start": "775740",
    "end": "781139"
  },
  {
    "text": "of components of an application such as all of the microservices that make an application deployment files for kubernetes Helm Jarrett's any",
    "start": "781139",
    "end": "788160"
  },
  {
    "text": "configuration for an application Etc this is all referenced in the inventory which links back to the signatures",
    "start": "788160",
    "end": "794579"
  },
  {
    "text": "Factor where the artifact is stored Etc",
    "start": "794579",
    "end": "798680"
  },
  {
    "start": "799000",
    "end": "799000"
  },
  {
    "text": "and now we're going to move on to the continuous delivery or deployment stage again I'm just going to do a brief explanation of what that is this is",
    "start": "799980",
    "end": "806820"
  },
  {
    "text": "where we deploy the application onto for example a kubernetes cluster",
    "start": "806820",
    "end": "813959"
  },
  {
    "text": "so back to that release inventory it's got all the list of the applications all",
    "start": "813959",
    "end": "819480"
  },
  {
    "text": "of the microservices and the provenance of each of those of those services to be deployed but there's actually quite a",
    "start": "819480",
    "end": "824519"
  },
  {
    "text": "bit more than that first off it can detect if there are changes in us so if those applications are already deployed",
    "start": "824519",
    "end": "830519"
  },
  {
    "text": "it will not go any further there's no need it's also our implementation of a full",
    "start": "830519",
    "end": "835860"
  },
  {
    "text": "get ops-based release system git Ops is that it's a management of",
    "start": "835860",
    "end": "841860"
  },
  {
    "text": "both infrastructure and application configuration using git repos as a source of Truth so get branches",
    "start": "841860",
    "end": "849720"
  },
  {
    "text": "in that inventory represent each environment you may be using such as QA such as stage and finally production",
    "start": "849720",
    "end": "857639"
  },
  {
    "text": "by using this inventory we can quite easily track which application and versions are deployed in each",
    "start": "857639",
    "end": "862680"
  },
  {
    "text": "environment and all of the configuration that it does so we use some sometimes we use deployment files sometimes we use",
    "start": "862680",
    "end": "869279"
  },
  {
    "text": "helm chairs which is referenced from that inventory back to a Helm chart registry",
    "start": "869279",
    "end": "875180"
  },
  {
    "text": "um regulatory environments almost always require a powerful change management system to be in use when you're making",
    "start": "875940",
    "end": "882540"
  },
  {
    "text": "any changes to a production environment in a banking or financial system so what we have done is we have",
    "start": "882540",
    "end": "888660"
  },
  {
    "text": "implemented this using gate issues um it is either completely automated in",
    "start": "888660",
    "end": "893940"
  },
  {
    "text": "that we continuous deployment or it could require a manual oversight that would be continuous delivery and that",
    "start": "893940",
    "end": "899339"
  },
  {
    "text": "depends on your application depends on your system it's completely configurable so for this area we're going to focus on",
    "start": "899339",
    "end": "904740"
  },
  {
    "text": "an automated deployment what happens is the change management system will perform a deployment Readiness",
    "start": "904740",
    "end": "909779"
  },
  {
    "text": "calculation based on the evidence gathered up by this continuous integration and the continuous",
    "start": "909779",
    "end": "915180"
  },
  {
    "text": "deployment pipeline if there has been a vulnerability in your dependencies or in",
    "start": "915180",
    "end": "920699"
  },
  {
    "text": "your code itself that hasn't been Exempted by the security team or by your manager however",
    "start": "920699",
    "end": "926100"
  },
  {
    "text": "you want to decide to configure that or if a scan fail to complete or maybe if",
    "start": "926100",
    "end": "931560"
  },
  {
    "text": "the evidence doesn't match expected values um that would be evidence of tampering",
    "start": "931560",
    "end": "937139"
  },
  {
    "text": "we actually secure our evidence using chat 256 hashes um so if that were to change the hash",
    "start": "937139",
    "end": "943560"
  },
  {
    "text": "wouldn't match in the deployment Pipeline and it will fail the Readiness would then be deemed to be",
    "start": "943560",
    "end": "949800"
  },
  {
    "text": "false and manual manual approval is required through an emergency deployment",
    "start": "949800",
    "end": "955139"
  },
  {
    "text": "mechanism if you really do want to deploy the application with the vulnerability intact otherwise it's",
    "start": "955139",
    "end": "960839"
  },
  {
    "text": "deployed automatically and completed what our change management system also includes is an aggregate of all the",
    "start": "960839",
    "end": "968399"
  },
  {
    "text": "evidence gathered so far and also the software bill of materials and as mentioned the signed build",
    "start": "968399",
    "end": "975660"
  },
  {
    "text": "artifacts from The Continuous integration pipeline we also have the GPT key in the deployment pipeline so",
    "start": "975660",
    "end": "980940"
  },
  {
    "text": "it's able to determine the veracity of that signature and further ensures the provenance of",
    "start": "980940",
    "end": "986100"
  },
  {
    "text": "the artifact itself this is a very flexible continuous deployment system we ourselves have deployed to kubernetes to Red Hat",
    "start": "986100",
    "end": "992940"
  },
  {
    "text": "openshift to satellite locations and it is capable of deploying to mainframes Virtual server instances and has",
    "start": "992940",
    "end": "1000680"
  },
  {
    "text": "integration with stuff like other CI tools like Argo CD",
    "start": "1000680",
    "end": "1007360"
  },
  {
    "text": "so this is just a diagram of the process so far so typically a developer will",
    "start": "1008779",
    "end": "1014240"
  },
  {
    "text": "create a pull requests with their code changes and this is where shift left comes into us before it even enters the",
    "start": "1014240",
    "end": "1020660"
  },
  {
    "text": "main branch of code we do some of our tests we do Secret detection we do unit tests and we do vulnerability scans on",
    "start": "1020660",
    "end": "1027020"
  },
  {
    "text": "your dependencies and your packages if all of that goes well it enters the code it enters the build stage of the",
    "start": "1027020",
    "end": "1034699"
  },
  {
    "text": "pipeline in the main branch where we do some of the same tests just to make sure and we expand upon that with the",
    "start": "1034699",
    "end": "1039980"
  },
  {
    "text": "software bill of materials generation dependency vulnerability scans static code scans license checks Branch",
    "start": "1039980",
    "end": "1047540"
  },
  {
    "text": "protections and then we'd actually in the CI stage we would actually deploy the application to a development cluster",
    "start": "1047540",
    "end": "1055400"
  },
  {
    "text": "it might just be your own microservice it probably isn't going to be your entire application at this point and we",
    "start": "1055400",
    "end": "1060559"
  },
  {
    "text": "will perform scans like oasps app to see if there's any important vulnerabilities network problems all of that is very",
    "start": "1060559",
    "end": "1066500"
  },
  {
    "text": "powerful at doing that all going well all of that will go into the inventory at which points The",
    "start": "1066500",
    "end": "1072080"
  },
  {
    "text": "Continuous deployment automatically picks up a change on that and starts deploying what we do is we then check those",
    "start": "1072080",
    "end": "1077780"
  },
  {
    "text": "artifact signatures we go into the change management system that I mentioned in the last slide",
    "start": "1077780",
    "end": "1083500"
  },
  {
    "text": "assuming all as well we deploy the artifacts we run some acceptance tests so it'll ensure everything is running",
    "start": "1083500",
    "end": "1089419"
  },
  {
    "text": "properly and we then update the change request to uh say that everything is deployed successfully and",
    "start": "1089419",
    "end": "1095960"
  },
  {
    "text": "then closed as you can see both the CI Pipeline and the CD by blind are constantly feeding",
    "start": "1095960",
    "end": "1102500"
  },
  {
    "text": "evidence into that evidence Locker both case and Cloud object storage for audit use",
    "start": "1102500",
    "end": "1108880"
  },
  {
    "text": "now this diagram is a little bit different I've replaced the CD Pipeline with A continuous compliance pipeline",
    "start": "1109160",
    "end": "1115039"
  },
  {
    "text": "this is the piece in my opinion that delivers the most value in our system and is the most unique period of our",
    "start": "1115039",
    "end": "1120380"
  },
  {
    "text": "system so I'll shown on the diagram we have very very similar stages to the CI pipeline um we don't need to do",
    "start": "1120380",
    "end": "1126860"
  },
  {
    "text": "absolutely everything again because it doesn't have access to source code but it does recompute the bill of",
    "start": "1126860",
    "end": "1132860"
  },
  {
    "text": "materials to ensure that it is exactly the same as expected in case any",
    "start": "1132860",
    "end": "1139100"
  },
  {
    "text": "packages or call would have been surreptitiously added to a system maliciously potentially",
    "start": "1139100",
    "end": "1144799"
  },
  {
    "text": "we do the vulnerability scans again why again because you may have entered your",
    "start": "1144799",
    "end": "1150200"
  },
  {
    "text": "call you may have deployed your code your application to a system and the word of vulnerabilities but zero",
    "start": "1150200",
    "end": "1156440"
  },
  {
    "text": "day books exist new Snick and CPE vulnerabilities are added every day so",
    "start": "1156440",
    "end": "1163160"
  },
  {
    "text": "When We Run The Continuous compliance pipeline it will actually detect those vulnerabilities and report them back as",
    "start": "1163160",
    "end": "1169280"
  },
  {
    "text": "soon as they are known to The Wider Community this is to ensure that no new vulnerability is a detected Source since",
    "start": "1169280",
    "end": "1175640"
  },
  {
    "text": "deployments and this is for all dependencies for packages for native code that you have written",
    "start": "1175640",
    "end": "1182799"
  },
  {
    "start": "1182000",
    "end": "1182000"
  },
  {
    "text": "foreign we also have a solid vulnerability extension system so",
    "start": "1183559",
    "end": "1191480"
  },
  {
    "text": "maintaining compliance with various regulations and rules in the financial sector means staying on top of these exemptions I know it's not feasible to",
    "start": "1191480",
    "end": "1198620"
  },
  {
    "text": "always fix vulnerabilities as soon as they are detected this Finance system does not work that fast and the",
    "start": "1198620",
    "end": "1204500"
  },
  {
    "text": "applications are far too complicated for that so we do allow for exemptions assuming it goes through the proper",
    "start": "1204500",
    "end": "1209900"
  },
  {
    "text": "chain of command that a security team has looked at it and we'd have defined this pipeline in",
    "start": "1209900",
    "end": "1216140"
  },
  {
    "text": "order to not allow developers to add their own exemptions if that's desired because they don't always know and it's",
    "start": "1216140",
    "end": "1223700"
  },
  {
    "text": "probably best in a financial environment that a security team would look over these vulnerabilities and determine the risk of those vulnerabilities entering",
    "start": "1223700",
    "end": "1229880"
  },
  {
    "text": "the system or not so this guarantees that all artifacts and their dependencies are periodically",
    "start": "1229880",
    "end": "1236360"
  },
  {
    "text": "scammed for vulnerabilities and failures and it can be set up to run typically daily but you can run this as often as you want",
    "start": "1236360",
    "end": "1242960"
  },
  {
    "text": "and just going back to to this bit here this is a work in progress but we have",
    "start": "1242960",
    "end": "1249500"
  },
  {
    "text": "some small workings it works a little bit uh we have an automated remediation system so for",
    "start": "1249500",
    "end": "1256520"
  },
  {
    "text": "certain vulnerabilities if the system can fix them it will actually create an automated pull request back to the",
    "start": "1256520",
    "end": "1261799"
  },
  {
    "text": "column base fixing those vulnerabilities in by for example looking at a cve there's",
    "start": "1261799",
    "end": "1268039"
  },
  {
    "text": "generally a recommended fix for a package so it will update that package and any",
    "start": "1268039",
    "end": "1273080"
  },
  {
    "text": "required packages in for example an npm packaged",
    "start": "1273080",
    "end": "1278900"
  },
  {
    "text": "and push that back as a pull request the developer will then test that code and it will go through the same system",
    "start": "1278900",
    "end": "1285020"
  },
  {
    "text": "again just like that so at this point I'm actually going to hand it back to Krishna and he's going",
    "start": "1285020",
    "end": "1291080"
  },
  {
    "text": "to explain a case study on how we actually applied this tool chain",
    "start": "1291080",
    "end": "1296500"
  },
  {
    "text": "thank you Brenton so as Brandon mentioned this is not just another the set-offs tool chain right the key",
    "start": "1296659",
    "end": "1302780"
  },
  {
    "text": "differentiator being immutable evidence Locker we have Central",
    "start": "1302780",
    "end": "1309260"
  },
  {
    "text": "inventory Repository",
    "start": "1309260",
    "end": "1312760"
  },
  {
    "start": "1313000",
    "end": "1313000"
  },
  {
    "text": "and the main thing we have continuous compliance which continuously scans you to your code and your deployments on a",
    "start": "1314780",
    "end": "1321440"
  },
  {
    "text": "regular basis and reports if new risks are identified",
    "start": "1321440",
    "end": "1326600"
  },
  {
    "text": "Securities top priority for us and while designing this desktop new process",
    "start": "1326600",
    "end": "1332659"
  },
  {
    "text": "now let's talk about the case study on buying where we implemented this",
    "start": "1332659",
    "end": "1337760"
  },
  {
    "text": "devsecops process let me introduce Bine if you do not know about bind bin is a bank in Industry",
    "start": "1337760",
    "end": "1344419"
  },
  {
    "text": "architectural Network you can go to buying.org to know more about it",
    "start": "1344419",
    "end": "1349460"
  },
  {
    "text": "ban is a collaborative not-for-profit ecosystem formed by Leading Banks technology providers consultants and",
    "start": "1349460",
    "end": "1355640"
  },
  {
    "text": "academics from all over the globe it was created to establish promote and provide a common framework for banking",
    "start": "1355640",
    "end": "1362659"
  },
  {
    "text": "interoperability and buy and call us initiative is to solve a challenges presented by Legacy",
    "start": "1362659",
    "end": "1369740"
  },
  {
    "text": "core infrastructure hence the name cordless initially by developing API",
    "start": "1369740",
    "end": "1375260"
  },
  {
    "text": "based microservices covering consumer payments customer offers and Consumer loans",
    "start": "1375260",
    "end": "1381679"
  },
  {
    "text": "the project in this case study is codeless V2 scenario we are also working on V3 at the moment",
    "start": "1381679",
    "end": "1389360"
  },
  {
    "text": "so in this V2 scenario a consumer procurs a loan tailored for",
    "start": "1389360",
    "end": "1395600"
  },
  {
    "text": "her needs through a safe and secure online Channel offered by a bank the bank application employs an",
    "start": "1395600",
    "end": "1403159"
  },
  {
    "text": "ecosystem of partner applications interoperating on the buying architecture to deliver this service",
    "start": "1403159",
    "end": "1409880"
  },
  {
    "text": "here's The Bank Architectural Vine architectural diagram you can see that there are multiple SD",
    "start": "1409880",
    "end": "1415880"
  },
  {
    "text": "service domains where multiple isvs independent software software vendors interoperating",
    "start": "1415880",
    "end": "1423020"
  },
  {
    "text": "the different service domain for example are consumer loan customer credit",
    "start": "1423020",
    "end": "1428240"
  },
  {
    "text": "Trading customer offer process each developed by an independent software vendor",
    "start": "1428240",
    "end": "1434240"
  },
  {
    "text": "and sometimes even running on in this case Saturn is running on azure thought machine is running on AWS but",
    "start": "1434240",
    "end": "1441260"
  },
  {
    "text": "still integrated with IBM cloud and here is a bond pipeline flow using",
    "start": "1441260",
    "end": "1449659"
  },
  {
    "start": "1445000",
    "end": "1445000"
  },
  {
    "text": "our cicd process Buy on B2 was deployed in IBM Cloud for",
    "start": "1449659",
    "end": "1456140"
  },
  {
    "text": "financial services during using this devops pipeline application codes are kept on a single",
    "start": "1456140",
    "end": "1463580"
  },
  {
    "text": "git repository as you can see on the left hand side of the screen and the CI CD and CC tool chains will",
    "start": "1463580",
    "end": "1469400"
  },
  {
    "text": "pull and deploy them accordingly each application has its own CI Pipeline and will be triggered by a code change",
    "start": "1469400",
    "end": "1476179"
  },
  {
    "text": "in the report now all these Pipelines update essential",
    "start": "1476179",
    "end": "1481520"
  },
  {
    "text": "inventory report which record details of artifacts that are built by the ca2 team a single CD",
    "start": "1481520",
    "end": "1488840"
  },
  {
    "text": "tool chain you can see in the center will be triggered for the production deployments after successful promotion pipeline pull request",
    "start": "1488840",
    "end": "1496280"
  },
  {
    "text": "this promotion pull request merges the inventory main branch into",
    "start": "1496280",
    "end": "1501679"
  },
  {
    "text": "specific Branch for example Del Branch production Branch Etc this can be entirely automated or for",
    "start": "1501679",
    "end": "1508220"
  },
  {
    "text": "production environments in particular can allow for manual intervention continuous compliance you can see on the",
    "start": "1508220",
    "end": "1513500"
  },
  {
    "text": "right hand side ensures that the deployed artifacts and their Source repository always secure and compliant",
    "start": "1513500",
    "end": "1519380"
  },
  {
    "text": "and can be scheduled to run on any time frame",
    "start": "1519380",
    "end": "1523900"
  },
  {
    "start": "1525000",
    "end": "1525000"
  },
  {
    "text": "so what what are the lessons learned Vine leverage continuous compliance to assist",
    "start": "1525620",
    "end": "1532400"
  },
  {
    "text": "your compliance level detect vulnerabilities and track them look to eliminate vulnerabilities as",
    "start": "1532400",
    "end": "1538700"
  },
  {
    "text": "much as you can you can of course add exemptions for non-critical issues if",
    "start": "1538700",
    "end": "1543919"
  },
  {
    "text": "you have to combined deployment tool chains user",
    "start": "1543919",
    "end": "1549620"
  },
  {
    "text": "inventory to deploy each microservices the most important thing is you have to",
    "start": "1549620",
    "end": "1555140"
  },
  {
    "text": "execute your software render as isps to use some kind of continuous compliance so we have to make sure every",
    "start": "1555140",
    "end": "1561919"
  },
  {
    "text": "package getting deployed onto our production environment is available free",
    "start": "1561919",
    "end": "1567879"
  },
  {
    "text": "reusability use shared libraries if possible combined ci2 chains of similar",
    "start": "1568520",
    "end": "1574520"
  },
  {
    "text": "applications in our case we had multiple Java applications and each of these Dev",
    "start": "1574520",
    "end": "1580400"
  },
  {
    "text": "application will refer to one Central config inventory so we have it all all",
    "start": "1580400",
    "end": "1587960"
  },
  {
    "text": "our scripts kept in an essential config inventory one for Java one for python Etc",
    "start": "1587960",
    "end": "1594620"
  },
  {
    "text": "how about this devsecops CLI is Coco CLI is used by our pipelines to create inventory change requests evidence Etc",
    "start": "1594620",
    "end": "1603740"
  },
  {
    "text": "we can also use the same core Coco CRI with other systems like Jenkins git lab",
    "start": "1603740",
    "end": "1609080"
  },
  {
    "text": "Etc this allows incremental adoption of the second pipelines for legacy applications",
    "start": "1609080",
    "end": "1617200"
  },
  {
    "text": "so you can't reduce your cyber Risk by improving your pipelines with devsecop",
    "start": "1618760",
    "end": "1624440"
  },
  {
    "text": "capabilities like having a reliable and reputable automation everything as code shift left mitigate",
    "start": "1624440",
    "end": "1632480"
  },
  {
    "text": "security risks as early as possible in your pipeline start with continuous compliance that is very important",
    "start": "1632480",
    "end": "1639679"
  },
  {
    "text": "maintain compliance throughout but by continually scanning your code and your deployments",
    "start": "1639679",
    "end": "1646340"
  },
  {
    "text": "make sure to gather and store your evidence in an Evidence Locker",
    "start": "1646340",
    "end": "1652400"
  },
  {
    "text": "improve your tool chain further add new functionalities learn more about desk Ops capabilities and tools such as Coco",
    "start": "1652400",
    "end": "1659720"
  },
  {
    "text": "scanning tools like open source or ask vulnerability detection regulation",
    "start": "1659720",
    "end": "1665260"
  },
  {
    "text": "compliance mechanisms Etc join us for a detailed session",
    "start": "1665260",
    "end": "1671419"
  },
  {
    "text": "at IBM boot tomorrow where you can get more details about or cicd process thank you very much",
    "start": "1671419",
    "end": "1677600"
  },
  {
    "text": "everyone [Applause]",
    "start": "1677600",
    "end": "1686299"
  },
  {
    "text": "yeah thank you everyone I don't know if you have time for questions I think that's to yeah so yeah sure",
    "start": "1686299",
    "end": "1695480"
  },
  {
    "text": "I'll bring my mic down to you it's fine you guys are",
    "start": "1698240",
    "end": "1704179"
  },
  {
    "text": "talking a lot about full abilities here about gold but compliance is not also also about growth and also about",
    "start": "1704179",
    "end": "1710860"
  },
  {
    "text": "following regulation following um rules that you have to comply and you",
    "start": "1710860",
    "end": "1718220"
  },
  {
    "text": "have also gather some evidence that you follow the rules you have to provide it to the",
    "start": "1718220",
    "end": "1724400"
  },
  {
    "text": "governments or other companies how do you achieve that also in",
    "start": "1724400",
    "end": "1729940"
  },
  {
    "text": "continuous compliance okay I can answer that so we are currently developing",
    "start": "1729940",
    "end": "1735799"
  },
  {
    "text": "policies code Integrations with this such as palumi and hashicorp Sentinel but",
    "start": "1735799",
    "end": "1741860"
  },
  {
    "text": "it's more we have other options as well so you mentioned governance and we need",
    "start": "1741860",
    "end": "1748700"
  },
  {
    "text": "to maintain compliance with some of those policies for example what we would do in that case is you can do a custom",
    "start": "1748700",
    "end": "1754640"
  },
  {
    "text": "piece of evidence to if you have a tool to determine such as again palumi or hashicorp Sentinel",
    "start": "1754640",
    "end": "1761360"
  },
  {
    "text": "for your infrastructure there are other there are other systems for application code as well that they are following",
    "start": "1761360",
    "end": "1766399"
  },
  {
    "text": "governance policies and stuff you can write a custom piece of evidence to write into your evidence locker and when",
    "start": "1766399",
    "end": "1772580"
  },
  {
    "text": "the government comes around to audit your audit your system audit your code that will be",
    "start": "1772580",
    "end": "1777980"
  },
  {
    "text": "in your evidence Locker ready for them to see I hope that answers your question yeah thank you thanks",
    "start": "1777980",
    "end": "1785559"
  },
  {
    "text": "sorry let me have my microphone first",
    "start": "1786500",
    "end": "1790240"
  },
  {
    "text": "project that we can use um well our specific implementation is based on IBM Cloud but I do believe that",
    "start": "1793600",
    "end": "1801080"
  },
  {
    "text": "the Coco CX command line tool is open source and you can use that to start Gathering your evidence in your own CI",
    "start": "1801080",
    "end": "1807620"
  },
  {
    "text": "systems and also building your inventory so all of the building blocks are available in that",
    "start": "1807620",
    "end": "1814658"
  },
  {
    "text": "you can see actually a demo if you're interested in I'm sorry I think this guy was first",
    "start": "1815559",
    "end": "1821480"
  },
  {
    "text": "yeah yeah for the uh on your continuous compliance the pipeline tools so I guess",
    "start": "1821480",
    "end": "1827299"
  },
  {
    "text": "how do you keep your pipelines in your country Crush client there ah okay we actually do have a system for",
    "start": "1827299",
    "end": "1834320"
  },
  {
    "text": "this this is unfortunately not open source it's called the IBM security and compliance Center and what we do with",
    "start": "1834320",
    "end": "1841159"
  },
  {
    "text": "that is we have profiles set up to check the pipelines themselves I think",
    "start": "1841159",
    "end": "1846559"
  },
  {
    "text": "it's called IBM Cloud security best practices and what it does is it checks the pipelines themselves for evidence of",
    "start": "1846559",
    "end": "1853940"
  },
  {
    "text": "if they can run unit tests or if they do run unit tests if they are locked down",
    "start": "1853940",
    "end": "1859039"
  },
  {
    "text": "for Open Access so that they are properly access controlled that I've",
    "start": "1859039",
    "end": "1864320"
  },
  {
    "text": "mentioned the unit tests that all the scans are completed that Branch protection is enabled in all your git repos so that would manage the pipelines",
    "start": "1864320",
    "end": "1872299"
  },
  {
    "text": "themselves in that case and the product he's talking about we can't save the product name obviously it has a dashboard where",
    "start": "1872299",
    "end": "1878480"
  },
  {
    "text": "we you can view all the vulnerabilities of all the Pipelines in that in one single dashboard",
    "start": "1878480",
    "end": "1884240"
  },
  {
    "text": "I already mentioned it anymore",
    "start": "1884240",
    "end": "1889100"
  },
  {
    "text": "or I think we can um okay thank you very much",
    "start": "1890120",
    "end": "1896870"
  },
  {
    "text": "[Applause]",
    "start": "1896870",
    "end": "1900940"
  }
]