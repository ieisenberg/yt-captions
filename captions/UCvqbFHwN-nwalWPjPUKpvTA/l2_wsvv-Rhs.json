[
  {
    "text": "um so when I got a talk accepted to cucon about the browser I was honestly",
    "start": "599",
    "end": "6080"
  },
  {
    "text": "pretty surprised and seeing a a a room full of of of folks excited to chat",
    "start": "6080",
    "end": "13040"
  },
  {
    "text": "about the browser at cucon and cloudnativecon it's not something I expected so",
    "start": "13040",
    "end": "19560"
  },
  {
    "text": "um I'm curious who here identifies as primarily a front-end developer working",
    "start": "19560",
    "end": "26359"
  },
  {
    "text": "on browsers okay I see a few hands who is more like I'm a full stack Dev I",
    "start": "26359",
    "end": "33280"
  },
  {
    "text": "work I work on everything okay lot more hands Sr",
    "start": "33280",
    "end": "40039"
  },
  {
    "text": "Ops okay gotcha amazing well I'm excited to talk to the browser talk about the",
    "start": "40039",
    "end": "45480"
  },
  {
    "text": "browser to y'all today um my name is pvi canel I've worked with browsers for a",
    "start": "45480",
    "end": "50879"
  },
  {
    "text": "large part of my career and I'm really interested in getting front-end observability to a higher standard",
    "start": "50879",
    "end": "57359"
  },
  {
    "text": "especially for Ops folks and backend folks we're used to really good tooling",
    "start": "57359",
    "end": "63000"
  },
  {
    "text": "um and I really want to see the the browser front-end World catch up to that I work at honeycomb and we're trying to",
    "start": "63000",
    "end": "69280"
  },
  {
    "text": "solve this problem there I'm also an approver on the open Telemetry JS project with a special interest in web",
    "start": "69280",
    "end": "77759"
  },
  {
    "text": "apis So today we're just going to be going through the current state of real",
    "start": "77759",
    "end": "83280"
  },
  {
    "text": "user monitoring and general front-end monitoring tools um we'll talk about a quick",
    "start": "83280",
    "end": "88960"
  },
  {
    "text": "introduction to open Telemetry and how it can also be a a browser monitoring",
    "start": "88960",
    "end": "94960"
  },
  {
    "text": "tool we'll talk about the automatic instrumentation that comes out of the",
    "start": "94960",
    "end": "100040"
  },
  {
    "text": "box with open Telemetry that requires no not a lot of configuration to get started and then we'll jump into how",
    "start": "100040",
    "end": "107159"
  },
  {
    "text": "manual instrumentation can really supercharge your um your journey of",
    "start": "107159",
    "end": "112920"
  },
  {
    "text": "front-end observability so let's jump into",
    "start": "112920",
    "end": "118840"
  },
  {
    "text": "it there's a lot of tools out there today for around real user monitoring",
    "start": "118840",
    "end": "125520"
  },
  {
    "text": "and general front-end monitoring tools but how did we get here there was a time where the web",
    "start": "125520",
    "end": "132239"
  },
  {
    "text": "wasn't that complicated it was a time to just truly like have fun express yourself on your homepage and talk about",
    "start": "132239",
    "end": "138879"
  },
  {
    "text": "your favorite bands or sign up for Neopets um which is you know a lot of",
    "start": "138879",
    "end": "144680"
  },
  {
    "text": "where I spent my time on the earlier internet and it really wasn't that complicated it was a server served up",
    "start": "144680",
    "end": "151239"
  },
  {
    "text": "some HTML um you know we barely used JavaScript unless you wanted to play an",
    "start": "151239",
    "end": "158040"
  },
  {
    "text": "MP3 or or something similar even blinking and Marquee was like all built",
    "start": "158040",
    "end": "163360"
  },
  {
    "text": "into to HTML so we didn't really have a lot of like complexity going on over",
    "start": "163360",
    "end": "168879"
  },
  {
    "text": "time though using the web has become no longer optional especially since the pandemic",
    "start": "168879",
    "end": "176200"
  },
  {
    "text": "more and more of our critical services are accessed online getting vaccine",
    "start": "176200",
    "end": "181360"
  },
  {
    "text": "appointments government services and lots of other really really basic needs",
    "start": "181360",
    "end": "186799"
  },
  {
    "text": "are accessed through online portals it is our job as developers to create",
    "start": "186799",
    "end": "191959"
  },
  {
    "text": "reliable and performant experiences for our users when our system looks a lot more complicated today with multiple",
    "start": "191959",
    "end": "199519"
  },
  {
    "text": "databases multiple microservices that serve um both a browser app a mobile app",
    "start": "199519",
    "end": "206959"
  },
  {
    "text": "and maybe a standalone API and also we have increasingly complex um engineering",
    "start": "206959",
    "end": "213920"
  },
  {
    "text": "organizations as well we have multiple teams working on multiple different services so it's a lot more complex than",
    "start": "213920",
    "end": "221920"
  },
  {
    "text": "Ye Old Neopets days and to keep track of a lot of these things um on the front",
    "start": "221920",
    "end": "228000"
  },
  {
    "text": "end uh this is kind of the state of what monitoring looks like on the front end",
    "start": "228000",
    "end": "233159"
  },
  {
    "text": "you might have a real user monitoring tool that tells you about session information performance information",
    "start": "233159",
    "end": "240799"
  },
  {
    "text": "maybe a little bit of errors and even some analytics and then there's other dedicated analytics tools like Google",
    "start": "240799",
    "end": "247920"
  },
  {
    "text": "analytics um that are maybe that can be used by developers but are also sometimes used by other people in the",
    "start": "247920",
    "end": "254519"
  },
  {
    "text": "org like product folks or marketing folks to make decisions about your product there's also more full-featured",
    "start": "254519",
    "end": "260400"
  },
  {
    "text": "software out there something like full story that even captures user sessions",
    "start": "260400",
    "end": "265840"
  },
  {
    "text": "for you to watch back and see how users are using your site there's error tracking with stuff like Sentry that",
    "start": "265840",
    "end": "273120"
  },
  {
    "text": "Aggregates errors and you can alert on them there's APM tools there's log searching and all of these things are",
    "start": "273120",
    "end": "280000"
  },
  {
    "text": "happening in different places and it can be a lot to keep track of as somebody",
    "start": "280000",
    "end": "285400"
  },
  {
    "text": "who wants to figure out what the state of their front end is at the",
    "start": "285400",
    "end": "292280"
  },
  {
    "text": "moment and the main thing about a lot of this is we have a lot of different Tools",
    "start": "292280",
    "end": "297320"
  },
  {
    "text": "in different places that tell us really well what is happening but when it comes",
    "start": "297320",
    "end": "303680"
  },
  {
    "text": "to bug reports or trying to debug something I've been in this situation a",
    "start": "303680",
    "end": "309520"
  },
  {
    "text": "lot as a frontend developer where a bug report might come in from our customer success organization saying hey this",
    "start": "309520",
    "end": "317440"
  },
  {
    "text": "isn't working the page is blank for a certain customer and I can't reproduce",
    "start": "317440",
    "end": "323199"
  },
  {
    "text": "it so then I message them back and I'm like hello um can you get the customer to open their Dev console",
    "start": "323199",
    "end": "330199"
  },
  {
    "text": "take a screenshot of that um and then send me the error message and then tell",
    "start": "330199",
    "end": "336560"
  },
  {
    "text": "me the exact state of how they got into it it's a lot of back and forth whereas I feel like when I've been debugging",
    "start": "336560",
    "end": "342039"
  },
  {
    "text": "backend things with really good distributed tracing I can see things at a glance without having to necessarily",
    "start": "342039",
    "end": "347840"
  },
  {
    "text": "reproduce it myself so a lot of these tools that tell us well about what is",
    "start": "347840",
    "end": "353680"
  },
  {
    "text": "happening are often disconnected from the why and the why is really where",
    "start": "353680",
    "end": "359600"
  },
  {
    "text": "observability shines observability is all about knowing how your system works",
    "start": "359600",
    "end": "366280"
  },
  {
    "text": "because it's telling you how it works and in order for something to tell you how it works it has to be able to",
    "start": "366280",
    "end": "371960"
  },
  {
    "text": "describe itself pretty well so I'll go into a bit of an analogy here and bear",
    "start": "371960",
    "end": "377520"
  },
  {
    "text": "with me so I I like to run um and I I wear a running watch when I'm running um",
    "start": "377520",
    "end": "383120"
  },
  {
    "text": "and it really helps me make decisions about my running it'll tell me what pace I'm running at it'll tell me um how many",
    "start": "383120",
    "end": "389960"
  },
  {
    "text": "steps per minute uh maybe even the power that I'm exerting with each step and if",
    "start": "389960",
    "end": "395479"
  },
  {
    "text": "I'm running up a hill and how steep that Hill is um that helps make me make",
    "start": "395479",
    "end": "400840"
  },
  {
    "text": "decisions and it also helps my partner know when to come get me if you know I",
    "start": "400840",
    "end": "405960"
  },
  {
    "text": "um if I've I've been gone too long um if I've been gone longer than he was expecting but also this data leaves out",
    "start": "405960",
    "end": "412960"
  },
  {
    "text": "a lot that only I know internally so if on Monday I was running at a 5 minute",
    "start": "412960",
    "end": "419599"
  },
  {
    "text": "402 minute per kilometer pace and I was feeling pretty good and on Wednesday go for a run and it that same pace is",
    "start": "419599",
    "end": "426280"
  },
  {
    "text": "feeling horrible my watch can't really tell me very much about why that's changed but I might know I might know",
    "start": "426280",
    "end": "433360"
  },
  {
    "text": "that I didn't get a very good night's sleep or that um or that I was up really late or that",
    "start": "433360",
    "end": "441039"
  },
  {
    "text": "I didn't eat well or that I was stressed out by something else going on in my life my watch doesn't have that",
    "start": "441039",
    "end": "447039"
  },
  {
    "text": "information only I have it and it's kind of like um and so what I do is I keep a",
    "start": "447039",
    "end": "452759"
  },
  {
    "text": "journal where I self-report that information because it's really hyp specific to my",
    "start": "452759",
    "end": "458919"
  },
  {
    "text": "system and this is where sending hypers specific data about",
    "start": "458919",
    "end": "464840"
  },
  {
    "text": "your system is really where observability shines and you need a pretty flexible tool to make that happen",
    "start": "464840",
    "end": "471520"
  },
  {
    "text": "and um open Telemetry is is one such tool so open Telemetry which you'll also",
    "start": "471520",
    "end": "476639"
  },
  {
    "text": "hear me refer to as otel is a vendor neutral open-source observability",
    "start": "476639",
    "end": "482599"
  },
  {
    "text": "framework for instrumenting generating collecting and exporting Telemetry data",
    "start": "482599",
    "end": "488039"
  },
  {
    "text": "such as traces metrics and logs um we'll mostly be talking about traces",
    "start": "488039",
    "end": "493520"
  },
  {
    "text": "today the really crucial part of open Telemetry is that it is vendor and Tool",
    "start": "493520",
    "end": "498840"
  },
  {
    "text": "agnostic it can be used in a broad variety of ways in many um many",
    "start": "498840",
    "end": "504800"
  },
  {
    "text": "different languages sdks run times it doesn't matter you should be able to say",
    "start": "504800",
    "end": "510039"
  },
  {
    "text": "open Telemetry data and have a backend like jger Prometheus or honeycomb um",
    "start": "510039",
    "end": "517080"
  },
  {
    "text": "aggregate that data and present it back to you um so it's it's really intentionally",
    "start": "517080",
    "end": "523919"
  },
  {
    "text": "built to be flexible so that you can send hypers specific data about your system and it's really easy to set up in",
    "start": "523919",
    "end": "531600"
  },
  {
    "text": "the browser I'm curious show of hands does anybody use open Telemetry to",
    "start": "531600",
    "end": "536720"
  },
  {
    "text": "instrument other parts of their systems today nice yeah so a lot of us are using open",
    "start": "536720",
    "end": "542800"
  },
  {
    "text": "Telemetry is anyone using open Telemetry in the browser or see a couple of hands",
    "start": "542800",
    "end": "549720"
  },
  {
    "text": "um so getting started is um installing a set of",
    "start": "549720",
    "end": "555240"
  },
  {
    "text": "packages there is some setup code I'm not going to go line by line through this code it's also available on the",
    "start": "555240",
    "end": "561519"
  },
  {
    "text": "open Telemetry docs site but it's it's a snippet of code um that you want to",
    "start": "561519",
    "end": "568320"
  },
  {
    "text": "include at the top level of your browser application it needs to be loaded um",
    "start": "568320",
    "end": "575079"
  },
  {
    "text": "before everything else so that it can fire off critical spans about your",
    "start": "575079",
    "end": "580160"
  },
  {
    "text": "document load for example so you want you want it to be loaded first um so let's jump into automatic",
    "start": "580160",
    "end": "588760"
  },
  {
    "text": "instrumentation or Auto instrumentation these are spans that form traces that you can get out of the",
    "start": "588760",
    "end": "596120"
  },
  {
    "text": "box with if we look at the bottom here there is um this register",
    "start": "596120",
    "end": "601440"
  },
  {
    "text": "instrumentations function and a get web Auto instrumentations meta package this",
    "start": "601440",
    "end": "607519"
  },
  {
    "text": "meta package instantiates some Base auto instrumentations that send some basic",
    "start": "607519",
    "end": "614560"
  },
  {
    "text": "spans about your system it's a great place to start looking at what's going on um so let's jump into what some of",
    "start": "614560",
    "end": "621800"
  },
  {
    "text": "these Auto instrumentations are there is the document load instrumentation and again all you have",
    "start": "621800",
    "end": "628640"
  },
  {
    "text": "to do is provide this meta package and it will automatically start generating",
    "start": "628640",
    "end": "634200"
  },
  {
    "text": "document load instrumentation spans so what do these spans look like",
    "start": "634200",
    "end": "640560"
  },
  {
    "text": "so there is a overall document load span at the very very top level and this is",
    "start": "640560",
    "end": "646320"
  },
  {
    "text": "telling you from the point that um a user hits the browser to the point that",
    "start": "646320",
    "end": "653000"
  },
  {
    "text": "the Dom content loaded um event is fired how long that took",
    "start": "653000",
    "end": "660920"
  },
  {
    "text": "um as child spans of that there are document fetch there's a one document fetch",
    "start": "660920",
    "end": "666399"
  },
  {
    "text": "span and this is when the browser received the last bite of the response",
    "start": "666399",
    "end": "671480"
  },
  {
    "text": "of the last thing that it had to load so if it had to load a bunch of resources it's like here's how long it took me to",
    "start": "671480",
    "end": "677279"
  },
  {
    "text": "receive all of the last bites document load and document fure is slightly different because document load also",
    "start": "677279",
    "end": "683440"
  },
  {
    "text": "includes how long it took to execute some of those scripts and things not in",
    "start": "683440",
    "end": "689279"
  },
  {
    "text": "including um any async or deferred scripts and then most importantly I",
    "start": "689279",
    "end": "694560"
  },
  {
    "text": "think the most interesting part of this instrumentation is actually the resource fetch so for every single resource that",
    "start": "694560",
    "end": "702160"
  },
  {
    "text": "your browser is fetching it will create a resource fetch span that is every font",
    "start": "702160",
    "end": "707200"
  },
  {
    "text": "every CSS file every Javascript file every third-party Javascript file that you load it um will create a span for",
    "start": "707200",
    "end": "714440"
  },
  {
    "text": "that and tell you how long it took to load um so a more concrete example of",
    "start": "714440",
    "end": "721120"
  },
  {
    "text": "that is for example we've instrumented um the honeycomb documentation website",
    "start": "721120",
    "end": "727680"
  },
  {
    "text": "and this is um this is a bunch of resource fetch spans and it tells you",
    "start": "727680",
    "end": "733199"
  },
  {
    "text": "which resource it's it's talking about so at a glance I can see that hey there's this GIF that's loading on one",
    "start": "733199",
    "end": "740240"
  },
  {
    "text": "of our pages that takes six seconds I can probably do something I should probably do something about that um but",
    "start": "740240",
    "end": "746600"
  },
  {
    "text": "it's just nice to see at a glance how how how long all of your resources are",
    "start": "746600",
    "end": "753040"
  },
  {
    "text": "taking the other thing about um about these Auto",
    "start": "753040",
    "end": "758519"
  },
  {
    "text": "instrumentations that I want to stress is that they can be extended with really",
    "start": "758519",
    "end": "763560"
  },
  {
    "text": "critical data um and I don't want to be the person to tell you exactly what that",
    "start": "763560",
    "end": "768920"
  },
  {
    "text": "data should be because you know better than I do what your system is like but here's an example so um I was curious",
    "start": "768920",
    "end": "777120"
  },
  {
    "text": "about which resource which resources loading we blocking the render so um",
    "start": "777120",
    "end": "784600"
  },
  {
    "text": "there is a browser API that can tell us whether a resource that is loading is a",
    "start": "784600",
    "end": "790199"
  },
  {
    "text": "um whether it's render blocking or not and what that means is if a resource is",
    "start": "790199",
    "end": "795959"
  },
  {
    "text": "render blocking then and it's it's more like static files like fonts CSS um and",
    "start": "795959",
    "end": "802680"
  },
  {
    "text": "JavaScript that like block or delay the browser from rendering the page um so",
    "start": "802680",
    "end": "808920"
  },
  {
    "text": "this can happen sometimes have you ever seen a page where it kind of flashes and you it's not styled it just looks like",
    "start": "808920",
    "end": "815800"
  },
  {
    "text": "pure HTML and then the CSS kind of flashes on top of it so that's because it might still render um but the CSS was",
    "start": "815800",
    "end": "823360"
  },
  {
    "text": "deferred you might not want to do that you might want to preload the CSS so it can give you some pretty uh interesting",
    "start": "823360",
    "end": "829120"
  },
  {
    "text": "information about um whether you should preload or defer your load um so I kind",
    "start": "829120",
    "end": "838399"
  },
  {
    "text": "of stuck that in and I said how many of these resources are render blocking and then I saw that I there's a font um and",
    "start": "838399",
    "end": "846040"
  },
  {
    "text": "there is like my main stylesheet which allows us to like get a little bit more information and dig",
    "start": "846040",
    "end": "852639"
  },
  {
    "text": "into um what optimizations we can make to make our page load a smoother",
    "start": "852639",
    "end": "858320"
  },
  {
    "text": "experience because it's page load is also not necessarily about um like",
    "start": "858320",
    "end": "864720"
  },
  {
    "text": "intrinsically or deterministically like how fast it is but also whether it seem fast to the user and pre-loading can can",
    "start": "864720",
    "end": "871839"
  },
  {
    "text": "do a lot for that so that's just one example of how you can not only use the",
    "start": "871839",
    "end": "877079"
  },
  {
    "text": "auto instrumentation but enhance it with extra attributes that are important to you and your",
    "start": "877079",
    "end": "883120"
  },
  {
    "text": "system the next piece of instrumentation that I want to talk about is user interaction instrumentation so again",
    "start": "883120",
    "end": "890399"
  },
  {
    "text": "this ships out of the box with this meta package of get web Auto",
    "start": "890399",
    "end": "895720"
  },
  {
    "text": "instrumentations um and but but by default it's not that interesting because all it does is track clicks if",
    "start": "895720",
    "end": "902040"
  },
  {
    "text": "you if you load it like this so here's an example where um I I had a website where I was",
    "start": "902040",
    "end": "908639"
  },
  {
    "text": "interested in Click events and input events and the event list that you can",
    "start": "908639",
    "end": "914839"
  },
  {
    "text": "that you can give it is any event any browser events so if you if you go on",
    "start": "914839",
    "end": "920240"
  },
  {
    "text": "the mdn docs and look at all of the browser events you can pass in any of that so that could be for Mouse events",
    "start": "920240",
    "end": "926600"
  },
  {
    "text": "it could be for keyboard events it could be for navigation events it's it's a pretty long list um also the also by",
    "start": "926600",
    "end": "934279"
  },
  {
    "text": "itself um the data that it gives you is pretty limited so I wanted to enhance",
    "start": "934279",
    "end": "939720"
  },
  {
    "text": "that a little bit so looking at extra attributes that I can set I want to know",
    "start": "939720",
    "end": "944959"
  },
  {
    "text": "if there's an ID on that element I want to know what that ID is because by default it gives you the target path but",
    "start": "944959",
    "end": "952240"
  },
  {
    "text": "in a really large application a nested Target path can be almost meaningless so",
    "start": "952240",
    "end": "958240"
  },
  {
    "text": "it's it's helpful um if you have data attribute IDs that you use for testing or for observability",
    "start": "958240",
    "end": "965759"
  },
  {
    "text": "you could pass those in here too um I want to know the type I want to know what's what the class names are and",
    "start": "965759",
    "end": "972560"
  },
  {
    "text": "then for inputs I'm interested in what the value of that input is that could give me a lot of information if someone",
    "start": "972560",
    "end": "979279"
  },
  {
    "text": "say hey the search is broken I can go and dig into that with a little bit more",
    "start": "979279",
    "end": "985279"
  },
  {
    "text": "with more information if it's links I want to know the which links um folks are are clicking on",
    "start": "985279",
    "end": "992800"
  },
  {
    "text": "and what that looks like is so on the left here we have just the out ofthe boox um instrumentation attributes but",
    "start": "992800",
    "end": "1000440"
  },
  {
    "text": "then on the right there's more enhanced information so this is I think um a radio button and it tells me that it's",
    "start": "1000440",
    "end": "1006720"
  },
  {
    "text": "toggled on um it tells me exactly which ID it is and the type of element so it's",
    "start": "1006720",
    "end": "1013959"
  },
  {
    "text": "it's really interesting and what it leads to is not only helpful for debug",
    "start": "1013959",
    "end": "1019199"
  },
  {
    "text": "but I can also do analytics um now with user interaction instrumentation so for",
    "start": "1019199",
    "end": "1025319"
  },
  {
    "text": "our doc site our docs maintainers uh wanted to ask the question hey which code Snippets are the most copied um and",
    "start": "1025319",
    "end": "1034240"
  },
  {
    "text": "we don't actually need to go to an Analytics tool to do that anymore because we are collecting that data with open Telemetry and we can just run a",
    "start": "1034240",
    "end": "1040640"
  },
  {
    "text": "query and say hey which Pages have the most click events on this specific type",
    "start": "1040640",
    "end": "1046438"
  },
  {
    "text": "of um button another thing that um is often really",
    "start": "1046439",
    "end": "1053320"
  },
  {
    "text": "important to track are core web vitals web vitals is an initiative by Google to",
    "start": "1053320",
    "end": "1058720"
  },
  {
    "text": "provide unified guidance for Quality signals that are essential to to",
    "start": "1058720",
    "end": "1064280"
  },
  {
    "text": "delivering good user experiences on the web this kind of came from the idea that",
    "start": "1064280",
    "end": "1071480"
  },
  {
    "text": "it's hard to describe in Quant in a quantitative way um what a good user",
    "start": "1071480",
    "end": "1078440"
  },
  {
    "text": "experience expences so they broke it down into three major categories load",
    "start": "1078440",
    "end": "1083840"
  },
  {
    "text": "time which is where largest contentful paint comes from interactivity um which is first input",
    "start": "1083840",
    "end": "1091520"
  },
  {
    "text": "delay that has actually now um been replaced by interaction to next paint um",
    "start": "1091520",
    "end": "1099080"
  },
  {
    "text": "and visual stability which is your cumulative layout shift score that's referring to if you've ever been on like",
    "start": "1099080",
    "end": "1104880"
  },
  {
    "text": "a cooking website and you just want to get to the recipe but then the blog loads and it pushes all the content down",
    "start": "1104880",
    "end": "1111080"
  },
  {
    "text": "and then the ads load and then you're just like I'm just trying to make these cookies please let me look at this",
    "start": "1111080",
    "end": "1116120"
  },
  {
    "text": "website that's um that's that's a really frustrating user experience so they try to like quantify it inp is more",
    "start": "1116120",
    "end": "1125760"
  },
  {
    "text": "about um so FID was first input delay was just kind of looking at the",
    "start": "1125760",
    "end": "1130880"
  },
  {
    "text": "interactivity of the first input you might have which is um either a click a",
    "start": "1130880",
    "end": "1137159"
  },
  {
    "text": "tap or some sort of keyboard event but that falls short because we're loading lots of JavaScript these days and that's",
    "start": "1137159",
    "end": "1143919"
  },
  {
    "text": "deferred so inp actually tracks it throughout the life cycle of the page and sends the the largest um delay there",
    "start": "1143919",
    "end": "1152000"
  },
  {
    "text": "so it can be um a much better much better tool there is no web vitals",
    "start": "1152000",
    "end": "1158679"
  },
  {
    "text": "instrumentation available through open Telemetry Upstream today um so we",
    "start": "1158679",
    "end": "1163960"
  },
  {
    "text": "created one which will eventually be available Upstream so you can um you can",
    "start": "1163960",
    "end": "1170720"
  },
  {
    "text": "install this honeycomb package and get that instrumentation but I want to be clear this is going to be available",
    "start": "1170720",
    "end": "1176240"
  },
  {
    "text": "eventually in open Telemetry proper so it'll extend spans for all your major",
    "start": "1176240",
    "end": "1182960"
  },
  {
    "text": "web vitals it'll tell you if you know what those values are whether they're good or need",
    "start": "1182960",
    "end": "1188400"
  },
  {
    "text": "Improvement um but we can take it a step further as well so for cumulative layout",
    "start": "1188400",
    "end": "1196240"
  },
  {
    "text": "shift as an example this is an example of some some layout instability that that's frustrating if I know that I have",
    "start": "1196240",
    "end": "1204640"
  },
  {
    "text": "a poor CLS score there's really like I don't really know where to go next I can",
    "start": "1204640",
    "end": "1210600"
  },
  {
    "text": "try to reproduce it myself um I can ask other people to reproduce it I can try",
    "start": "1210600",
    "end": "1216000"
  },
  {
    "text": "to play with different settings of my like network speed and see if I can reproduce it that way but it can be a",
    "start": "1216000",
    "end": "1222440"
  },
  {
    "text": "little bit of a guessing game as to what is causing that um that layout shift",
    "start": "1222440",
    "end": "1229919"
  },
  {
    "text": "score but it doesn't have to be because the web vitals like Baseline package has",
    "start": "1229919",
    "end": "1235880"
  },
  {
    "text": "something called attribution so what it can do is for every single web vital it",
    "start": "1235880",
    "end": "1241440"
  },
  {
    "text": "can tell you which element on the page contributed to that web vital score um",
    "start": "1241440",
    "end": "1249000"
  },
  {
    "text": "so taking CLS for example it'll um the",
    "start": "1249000",
    "end": "1254200"
  },
  {
    "text": "the instrumentation not only collects the value but it also collects which element",
    "start": "1254200",
    "end": "1259760"
  },
  {
    "text": "contributed to that layout shift score or that um largest contentful paint or",
    "start": "1259760",
    "end": "1264960"
  },
  {
    "text": "that interaction to next paint so it gives us a starting point of where to look for um poor web vital score so that",
    "start": "1264960",
    "end": "1274200"
  },
  {
    "text": "we can start optimizing and it starts to connect that why a little bit better the most important one I want to",
    "start": "1274200",
    "end": "1281279"
  },
  {
    "text": "talk about today um especially relevant to so many of y'all that are already using open Telemetry to um instrument",
    "start": "1281279",
    "end": "1289120"
  },
  {
    "text": "your systems is the network instrumentation so that is also",
    "start": "1289120",
    "end": "1294240"
  },
  {
    "text": "available out of the box with the um instrumentation meta package here I just",
    "start": "1294240",
    "end": "1300559"
  },
  {
    "text": "have an example of there's two Network instrumentations there's instrumentation Fetch and instrumentation XML HTTP",
    "start": "1300559",
    "end": "1308200"
  },
  {
    "text": "request your application might be using both Fetch and um and like kind of more",
    "start": "1308200",
    "end": "1315640"
  },
  {
    "text": "of an Ajax style to do fetching so in which case keep both on if you're only using one",
    "start": "1315640",
    "end": "1321760"
  },
  {
    "text": "you can disable the other instrumentation because it won't do anything so that's just an example of in",
    "start": "1321760",
    "end": "1327320"
  },
  {
    "text": "case you need to disable one of them and out of the box it um it gives you spans",
    "start": "1327320",
    "end": "1334240"
  },
  {
    "text": "for every single Network request that is being made so every get put post delete",
    "start": "1334240",
    "end": "1339840"
  },
  {
    "text": "um and this will this will include things to like third party sites you can write filters to only capture things for",
    "start": "1339840",
    "end": "1348120"
  },
  {
    "text": "your AP pi and you can do like fancy things like that too but it will capture every single Network request made by",
    "start": "1348120",
    "end": "1354279"
  },
  {
    "text": "your browser and a bunch of metadata which is cool but we can take it a step further um so this is really where the",
    "start": "1354279",
    "end": "1362240"
  },
  {
    "text": "magic happens if you propagate a certain",
    "start": "1362240",
    "end": "1367400"
  },
  {
    "text": "header a trace parent header um then you can connect your front end and your",
    "start": "1367400",
    "end": "1372520"
  },
  {
    "text": "backend Network requests together which is really exciting in order to do that it'll happen automatically if your app",
    "start": "1372520",
    "end": "1379799"
  },
  {
    "text": "is um served on the same like domain as",
    "start": "1379799",
    "end": "1385279"
  },
  {
    "text": "um your API so if I'm serving from like Local Host 880 and my API is also served",
    "start": "1385279",
    "end": "1392600"
  },
  {
    "text": "out of that same domain then it happens automatically if your API is on is like",
    "start": "1392600",
    "end": "1399440"
  },
  {
    "text": "api. honeycomb.io instead of just and my um UI is ui. honeycomb.io I'll have to",
    "start": "1399440",
    "end": "1407880"
  },
  {
    "text": "do a little bit of extra work to um propagate that and that's just passing a",
    "start": "1407880",
    "end": "1413440"
  },
  {
    "text": "Rex to match your backend URLs this is telling the instrumentation hey for this",
    "start": "1413440",
    "end": "1419000"
  },
  {
    "text": "set of um for this set of outgoing HTTP requests I want you to add a trace",
    "start": "1419000",
    "end": "1427320"
  },
  {
    "text": "parent header and that's because there is a concept of context propagation in",
    "start": "1427320",
    "end": "1432559"
  },
  {
    "text": "open Telemetry so signals can be correlated with each other and the way that that happens um in this case is by",
    "start": "1432559",
    "end": "1439679"
  },
  {
    "text": "sending a trace parent header that has the trace ID in it so that's that would",
    "start": "1439679",
    "end": "1445279"
  },
  {
    "text": "be this particular Trace that was the trace ID and um the parent span ID of",
    "start": "1445279",
    "end": "1452960"
  },
  {
    "text": "that HTTP request and the result looks something like this so this is really",
    "start": "1452960",
    "end": "1458880"
  },
  {
    "text": "the exciting part is that you have your HTTP request the get request that",
    "start": "1458880",
    "end": "1464279"
  },
  {
    "text": "originated from the browser automatically connected to your API that",
    "start": "1464279",
    "end": "1469919"
  },
  {
    "text": "is already instrumented with open Telemetry so you can TR trace a request",
    "start": "1469919",
    "end": "1475520"
  },
  {
    "text": "all the way from the browser down through to a database call and the rest",
    "start": "1475520",
    "end": "1480720"
  },
  {
    "text": "of your distributed tracing um and this to me is is really really powerful",
    "start": "1480720",
    "end": "1486240"
  },
  {
    "text": "because you never have to wonder is it my front end or is it something in my",
    "start": "1486240",
    "end": "1491760"
  },
  {
    "text": "back end you can answer that question really really easily with open Telemetry um in the in some front-end teams often",
    "start": "1491760",
    "end": "1499840"
  },
  {
    "text": "we have to prove mean time to innocence which is that a lot of front-end teams",
    "start": "1499840",
    "end": "1505480"
  },
  {
    "text": "will have um we'll have bugs and stuff reported to them before everybody else",
    "start": "1505480",
    "end": "1511520"
  },
  {
    "text": "but the bug could really be anywhere in the system and it's really really hard to prove that it's not a front-end thing",
    "start": "1511520",
    "end": "1518000"
  },
  {
    "text": "or whether your front end is slow or is it your API that's contributing to the front end being slow as well so you can",
    "start": "1518000",
    "end": "1524679"
  },
  {
    "text": "answer a lot of those questions at a glance um and you can go go from something like a click event so someone",
    "start": "1524679",
    "end": "1531440"
  },
  {
    "text": "did something on your website all the way through to the database call that it made um with not too much effort so that",
    "start": "1531440",
    "end": "1540559"
  },
  {
    "text": "is is is really digs into it can really start to connect that",
    "start": "1540559",
    "end": "1545720"
  },
  {
    "text": "why but to go a little bit further we've talked a lot about enhancing this Auto instrumentations but",
    "start": "1545720",
    "end": "1552960"
  },
  {
    "text": "it's different than creating your own spans because you know where all of the Dragon are hidden you know coming back",
    "start": "1552960",
    "end": "1559919"
  },
  {
    "text": "to that running analogy only you know what you're feeling like when you're on",
    "start": "1559919",
    "end": "1564960"
  },
  {
    "text": "a run and that's really where manual instrumentation shines you know all of the nooks and crannies on your system so",
    "start": "1564960",
    "end": "1571559"
  },
  {
    "text": "you can instrument them yourself um you can send spans about whatever functions",
    "start": "1571559",
    "end": "1577440"
  },
  {
    "text": "you want if there is a part of your app that is really important to you for example if you run an Ecommerce website",
    "start": "1577440",
    "end": "1583679"
  },
  {
    "text": "and you really want the cart checkout experience to be full fully instrumented",
    "start": "1583679",
    "end": "1589720"
  },
  {
    "text": "you can do that manually and um and track things that are really important",
    "start": "1589720",
    "end": "1595120"
  },
  {
    "text": "to you so let's jump into a concrete example about that let's reexamine",
    "start": "1595120",
    "end": "1602679"
  },
  {
    "text": "document load because how useful do we really find document load I personally",
    "start": "1602679",
    "end": "1608480"
  },
  {
    "text": "struggle with have struggled with it for many years because I can see a document load that is reported as pretty fast but",
    "start": "1608480",
    "end": "1616159"
  },
  {
    "text": "I still have users that are complaining to to me that the website is slow or that they can't use it in the way that",
    "start": "1616159",
    "end": "1621720"
  },
  {
    "text": "they expect and that's because with for example for like the document load that comes with that auto instrumentation or",
    "start": "1621720",
    "end": "1628399"
  },
  {
    "text": "comes through a lot of other tools we've decided that document the document has loaded and this means that the user can",
    "start": "1628399",
    "end": "1635320"
  },
  {
    "text": "use the website when this Dom content loaded um",
    "start": "1635320",
    "end": "1641080"
  },
  {
    "text": "has has fired but this might fire and we still have a lot of JavaScript that's executing people might be frustrated",
    "start": "1641080",
    "end": "1647720"
  },
  {
    "text": "trying to click on buttons and the page is totally frozen and we'll never know through through just document load",
    "start": "1647720",
    "end": "1655320"
  },
  {
    "text": "instrumentation and that was a large part of why web vitals were created in the first place they're like okay we",
    "start": "1655320",
    "end": "1660919"
  },
  {
    "text": "need to actually split up this into different categories and largest contentful paint is kind of that proxy",
    "start": "1660919",
    "end": "1668080"
  },
  {
    "text": "for for document load but if we dig into how largest contentful paint actually works it's actually like it was really",
    "start": "1668080",
    "end": "1675799"
  },
  {
    "text": "surprising to me that it's just reporting the time to the largest thing",
    "start": "1675799",
    "end": "1682720"
  },
  {
    "text": "on your web page so in the example on the top the",
    "start": "1682720",
    "end": "1687960"
  },
  {
    "text": "LCP um fires when this uh picture has loaded because it is literally the thing",
    "start": "1687960",
    "end": "1694360"
  },
  {
    "text": "that takes up the most amount of space on the page and that seems fine it seems like an okay proxy for the for the tech",
    "start": "1694360",
    "end": "1701200"
  },
  {
    "text": "crunch example but if we look at the Instagram example underneath that it starts to break down because the LCP",
    "start": "1701200",
    "end": "1707519"
  },
  {
    "text": "fires when the Instagram logo has loaded but the and and for the Instagram like",
    "start": "1707519",
    "end": "1712760"
  },
  {
    "text": "login or signup page it's telling me hey you're good the page is loaded but",
    "start": "1712760",
    "end": "1718200"
  },
  {
    "text": "there's no form I can't interact with it so it still doesn't feel like a very good measure of what users are",
    "start": "1718200",
    "end": "1725679"
  },
  {
    "text": "experiencing and it's it's a bit frustrating that it's telling me that",
    "start": "1725679",
    "end": "1731080"
  },
  {
    "text": "the largest paint has happened and I take that as a proxy as like the page has loaded and ultimately none of these",
    "start": "1731080",
    "end": "1738960"
  },
  {
    "text": "metrics matter if your users aren't happy um and the more important thing is",
    "start": "1738960",
    "end": "1745279"
  },
  {
    "text": "for you to decide what does it mean for your page to be loaded and what does it mean for",
    "start": "1745279",
    "end": "1752679"
  },
  {
    "text": "users to interact with your website so time to First X or whatever",
    "start": "1752679",
    "end": "1759679"
  },
  {
    "text": "is much more useful than LCP or document load as proxies to whether users can use",
    "start": "1759679",
    "end": "1765960"
  },
  {
    "text": "your site an example of this is for honeycomb graphs are kind of our bread and",
    "start": "1765960",
    "end": "1771720"
  },
  {
    "text": "butter um so time to First graph for",
    "start": "1771720",
    "end": "1777440"
  },
  {
    "text": "this particular application is a much better um is a much better proxy to",
    "start": "1777440",
    "end": "1784720"
  },
  {
    "text": "understand whether my page has loaded but that is hyper specific to this particular app and your app will have",
    "start": "1784720",
    "end": "1790679"
  },
  {
    "text": "something totally different in it but that does mean that I need to set that up a little bit",
    "start": "1790679",
    "end": "1795760"
  },
  {
    "text": "myself so I can use the element timing API and give it and give my graph um an",
    "start": "1795760",
    "end": "1803039"
  },
  {
    "text": "ID the element timing and say this is my graph and then use the uh performance",
    "start": "1803039",
    "end": "1809600"
  },
  {
    "text": "Observer um browser API to say hey when this particular thing has rendered send",
    "start": "1809600",
    "end": "1816760"
  },
  {
    "text": "a span about it and that is much more useful than an arbitrary document load",
    "start": "1816760",
    "end": "1824240"
  },
  {
    "text": "or an arbitrary LCP because sometimes LCP fires around cookie Banner not even",
    "start": "1824240",
    "end": "1829840"
  },
  {
    "text": "like an actual important element on your page so defining what that is for you is",
    "start": "1829840",
    "end": "1834919"
  },
  {
    "text": "really important and this is just one example of know like instrumenting your",
    "start": "1834919",
    "end": "1841600"
  },
  {
    "text": "system because you know it best context is absolutely the most important thing",
    "start": "1841600",
    "end": "1849120"
  },
  {
    "text": "you should be adding extra information to all your spans like user IDs team IDs",
    "start": "1849120",
    "end": "1854279"
  },
  {
    "text": "customer IDs whatever is important to you you know your system the best you can add that context through",
    "start": "1854279",
    "end": "1860480"
  },
  {
    "text": "resource attributes or with span processors if it's changing every span because ultimately vendors should",
    "start": "1860480",
    "end": "1868600"
  },
  {
    "text": "not determine what you can measure you should be using a flexible tool that's vendor agnostic so that you can really",
    "start": "1868600",
    "end": "1876080"
  },
  {
    "text": "describe your system in as full Rich detail as you possibly can and the best",
    "start": "1876080",
    "end": "1882279"
  },
  {
    "text": "time to instrument your code is while you're writing the feature because we all we've all been there where you come",
    "start": "1882279",
    "end": "1887679"
  },
  {
    "text": "back three months later and you're like who wrote this and G blame is like it's me I'm the problem um so the best time",
    "start": "1887679",
    "end": "1895000"
  },
  {
    "text": "to instrument your code really is while you're writing it um and that's really",
    "start": "1895000",
    "end": "1900559"
  },
  {
    "text": "all I have so thank you so much for listening and come say",
    "start": "1900559",
    "end": "1907640"
  },
  {
    "text": "[Applause]",
    "start": "1907640",
    "end": "1910759"
  },
  {
    "text": "hello oh I don't think the microphone's",
    "start": "1916840",
    "end": "1923320"
  },
  {
    "text": "on try again oh okay I can okay",
    "start": "1924600",
    "end": "1931039"
  },
  {
    "text": "cool yeah cool thanks nice presentation um I think in one of the earlier slides",
    "start": "1931039",
    "end": "1936279"
  },
  {
    "text": "you showed the like a bootstrapping code and there was um like a URL to my uh to my server like",
    "start": "1936279",
    "end": "1943880"
  },
  {
    "text": "to my metric server B do you do you have any um comments and like how do you like",
    "start": "1943880",
    "end": "1949559"
  },
  {
    "text": "should that be secured and yes if yes in which way uh um and on top of that like",
    "start": "1949559",
    "end": "1958200"
  },
  {
    "text": "any rate limiting should be implemented there cuz cuz I think our team like looked at this at some point and we kind",
    "start": "1958200",
    "end": "1964399"
  },
  {
    "text": "of were worried that uh some of our clients may may F like find this and bombard us with the requests yeah that's",
    "start": "1964399",
    "end": "1971799"
  },
  {
    "text": "a that's a great question um so absolutely you there's there's ways to C",
    "start": "1971799",
    "end": "1978120"
  },
  {
    "text": "it and if you're worried about that you absolutely should um ideally you would be using in production an open Telemetry",
    "start": "1978120",
    "end": "1984440"
  },
  {
    "text": "collector so that you're not exposing any API keys or anything and that",
    "start": "1984440",
    "end": "1989519"
  },
  {
    "text": "collector that you host um can live somewhere that's authenticated so that",
    "start": "1989519",
    "end": "1995200"
  },
  {
    "text": "you actually have to authenticate against it before you can send spans to it and that kind of prevents people from",
    "start": "1995200",
    "end": "2000919"
  },
  {
    "text": "just getting the URL and sending as many requests as they want you mean like the",
    "start": "2000919",
    "end": "2006080"
  },
  {
    "text": "the browser would like the user the ja JavaScript on the page would have to first authenticate with that probably",
    "start": "2006080",
    "end": "2011840"
  },
  {
    "text": "using like user credentials or whatever like session or whatever and then yeah that's kind of the idea or however you",
    "start": "2011840",
    "end": "2017799"
  },
  {
    "text": "like you can host it alongside your API and however you authenticate with your API it can authenticate you to um using",
    "start": "2017799",
    "end": "2024639"
  },
  {
    "text": "your collector as well cool",
    "start": "2024639",
    "end": "2029399"
  },
  {
    "text": "thanks hello yeah I think it's",
    "start": "2029679",
    "end": "2034720"
  },
  {
    "text": "not hi thanks great talk um I'm actually interested in what you do after you've",
    "start": "2034840",
    "end": "2040279"
  },
  {
    "text": "got those nice red Amber green uh health indicators and how you aggregate those",
    "start": "2040279",
    "end": "2046080"
  },
  {
    "text": "and report on them later in particular if they've got different weightings maybe because some are more important",
    "start": "2046080",
    "end": "2051158"
  },
  {
    "text": "than others um and how you report that like over a time period yeah that's a great question and",
    "start": "2051159",
    "end": "2057480"
  },
  {
    "text": "it kind of depends on on your back end um so at honeycom we make pretty big use",
    "start": "2057480",
    "end": "2063079"
  },
  {
    "text": "of um service level objectives yeah um so that's something thing so there",
    "start": "2063079",
    "end": "2068480"
  },
  {
    "text": "there's benchmarks like taking web vitals as an example um Google has",
    "start": "2068480",
    "end": "2073800"
  },
  {
    "text": "benchmarks for for web vitals um but often folks find that when they first",
    "start": "2073800",
    "end": "2079560"
  },
  {
    "text": "instrument um especially if they have a lot of work to do everything is just red and it's pretty you know not fun",
    "start": "2079560",
    "end": "2086679"
  },
  {
    "text": "experience or motivating to be able to change it if you're far away so I always like we always recommend um setting",
    "start": "2086679",
    "end": "2094118"
  },
  {
    "text": "those benchmarks for yourself um so it can work towards the Google set ones but",
    "start": "2094119",
    "end": "2100359"
  },
  {
    "text": "you can tweak them to um to your own preferences and use things like service level objectives to um to keep track of",
    "start": "2100359",
    "end": "2109720"
  },
  {
    "text": "those and then um on aggregate report on them using your own benchmarks rather",
    "start": "2109720",
    "end": "2116560"
  },
  {
    "text": "than some like arbitrarily set benchmarks um and that's that this is where like your backend of choice starts",
    "start": "2116560",
    "end": "2123800"
  },
  {
    "text": "to come into play a little bit so I don't I don't know that joerger has this",
    "start": "2123800",
    "end": "2128920"
  },
  {
    "text": "kind of like reporting feature um so you likely have to pay for a backend to do",
    "start": "2128920",
    "end": "2136520"
  },
  {
    "text": "that okay thanks hi hi um question about the uh clock",
    "start": "2136520",
    "end": "2145839"
  },
  {
    "text": "synchronization so you mentioned distributed tracing um between front and back end and of course on the back end",
    "start": "2145839",
    "end": "2151760"
  },
  {
    "text": "it's easy to make sure your clocks are synchronized as far as as I understand the time stamp is generated in the span",
    "start": "2151760",
    "end": "2159680"
  },
  {
    "text": "so that would be the pro in that case how do you handle that yeah it's a really it's a really complex problem um",
    "start": "2159680",
    "end": "2167400"
  },
  {
    "text": "and you basically from from clients any mobile apps like mobile or web it's hard",
    "start": "2167400",
    "end": "2173200"
  },
  {
    "text": "to rely on the time stamp because of of clock drift for for many different reasons um so that that's again a thing",
    "start": "2173200",
    "end": "2180520"
  },
  {
    "text": "that at honeycom we kind of proxy through the backend a little bit which",
    "start": "2180520",
    "end": "2185560"
  },
  {
    "text": "is that we do record the time on ingest um of a of an event and we Al we",
    "start": "2185560",
    "end": "2191319"
  },
  {
    "text": "also have the timestamp that's set by the client and if it's egregiously",
    "start": "2191319",
    "end": "2197400"
  },
  {
    "text": "difficult like we had um we had some problems with a particular customer once",
    "start": "2197400",
    "end": "2203319"
  },
  {
    "text": "where um they had spans coming in from a lot of like mobile clients and a lot of",
    "start": "2203319",
    "end": "2208640"
  },
  {
    "text": "those mobile clients played Candy Crush so they would change their clock um and",
    "start": "2208640",
    "end": "2214040"
  },
  {
    "text": "so we had to like do some interesting math to say if the clock drift is a lot",
    "start": "2214040",
    "end": "2219560"
  },
  {
    "text": "further than we think then we use the reported like ingest time so that's",
    "start": "2219560",
    "end": "2225000"
  },
  {
    "text": "something that would be done in the collector for example it can be done in the collector um and it or it could be",
    "start": "2225000",
    "end": "2230520"
  },
  {
    "text": "done at the time of ingest of the back end of your chasing but yeah a collector is a great place to solve that problem",
    "start": "2230520",
    "end": "2237680"
  },
  {
    "text": "thank you does it work yes hi thanks for the",
    "start": "2237680",
    "end": "2244720"
  },
  {
    "text": "it's here thanks sorry I would like to ask uh the instrumentation gets done on",
    "start": "2244720",
    "end": "2251920"
  },
  {
    "text": "the JavaScript level but there are some stuff uh with redirects and happens",
    "start": "2251920",
    "end": "2259079"
  },
  {
    "text": "inside the browser that doesn't come up to the JavaScript and uh I have seen",
    "start": "2259079",
    "end": "2264880"
  },
  {
    "text": "also the performance Observer never used it but uh are you able to catch those",
    "start": "2264880",
    "end": "2270640"
  },
  {
    "text": "transactions currently yes so um a lot of a lot of the instrumentation is using",
    "start": "2270640",
    "end": "2277079"
  },
  {
    "text": "performance subserver um in terms of catching certain things um there is the",
    "start": "2277079",
    "end": "2283680"
  },
  {
    "text": "option to use send Beacon instead of sending um your Telemetry over HTTP",
    "start": "2283680",
    "end": "2290599"
  },
  {
    "text": "which allows you to catch some of those like let's say if you um navigate away",
    "start": "2290599",
    "end": "2297040"
  },
  {
    "text": "uh and you want to catch any like unmount events if you're sending through the sun Beacon API it'll still be able",
    "start": "2297040",
    "end": "2302920"
  },
  {
    "text": "to aggregate that and send that to lemetry so there's a specific setup for using the S Beacon API to make that",
    "start": "2302920",
    "end": "2310240"
  },
  {
    "text": "happen Okay thank you last okay um thank you very much for",
    "start": "2310240",
    "end": "2316760"
  },
  {
    "text": "the nice insights um I was asking myself did you ever reach especially when you create",
    "start": "2316760",
    "end": "2324359"
  },
  {
    "text": "your own spans also the level where it affected negatively the performance",
    "start": "2324359",
    "end": "2331040"
  },
  {
    "text": "because you added too much of a logic on the um client side um and it would have",
    "start": "2331040",
    "end": "2337839"
  },
  {
    "text": "been better to just have a more complex query to get your insights what you were",
    "start": "2337839",
    "end": "2343040"
  },
  {
    "text": "looking for yeah that's a really good question I would say it depends um but",
    "start": "2343040",
    "end": "2349000"
  },
  {
    "text": "uh I personally have not reached that limit with the span like a like over instrum like manually instrumenting",
    "start": "2349000",
    "end": "2356160"
  },
  {
    "text": "because again um tend to pick and choose the most important parts rather than blanket instrumenting absolutely",
    "start": "2356160",
    "end": "2362920"
  },
  {
    "text": "everything um but if like the way that I would think about handling situation",
    "start": "2362920",
    "end": "2368079"
  },
  {
    "text": "like that is understanding that maybe this Telemetry I need is temporary like we've definitely had done those",
    "start": "2368079",
    "end": "2374079"
  },
  {
    "text": "tradeoffs not so much on the front end but I've done it on on some backend Services of like right now I'm having",
    "start": "2374079",
    "end": "2380079"
  },
  {
    "text": "this problem and I'm going to over instrument a little bit even at the cost of a bit of performance but knowing that",
    "start": "2380079",
    "end": "2386920"
  },
  {
    "text": "I'm going to get rid of that eventually once I hone in on what the problem is",
    "start": "2386920",
    "end": "2393920"
  }
]