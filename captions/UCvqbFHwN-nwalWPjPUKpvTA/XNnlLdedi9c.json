[
  {
    "text": "all right welcome everybody uh hopefully uh you've lasted",
    "start": "919",
    "end": "7120"
  },
  {
    "text": "this long you can make it through one or two more talks before the end of cucon um but we're thankful you stuck",
    "start": "7120",
    "end": "14320"
  },
  {
    "text": "around enough to come here about container d uh this is our uh maintainer",
    "start": "14320",
    "end": "20560"
  },
  {
    "text": "update that uh Derek and I and other maintainers from the project are here in the room we've usually rotated these",
    "start": "20560",
    "end": "27720"
  },
  {
    "text": "around at cucon and um try and give just an update on what's been happening in",
    "start": "27720",
    "end": "33000"
  },
  {
    "text": "the project and today um you know a good half of this talk will focus on",
    "start": "33000",
    "end": "38640"
  },
  {
    "text": "container D 2.0 which just went beta on Monday so uh hopefully you'll uh get to",
    "start": "38640",
    "end": "45879"
  },
  {
    "text": "hear more about that uh but I just wanted to start with some you know basic updates about the project the velocity",
    "start": "45879",
    "end": "53800"
  },
  {
    "text": "the community and uh always timely the data dog or Cy usually comes out with a",
    "start": "53800",
    "end": "61399"
  },
  {
    "text": "state of containers report you know usually a week or so before cubec con so this is just uh from last week uh one of",
    "start": "61399",
    "end": "69280"
  },
  {
    "text": "their top 10 indicators um about container adoption",
    "start": "69280",
    "end": "74759"
  },
  {
    "text": "was the use of container D itself and uh their highlight here from their graph",
    "start": "74759",
    "end": "81000"
  },
  {
    "text": "was that the adoption of container D has doubled in the last year and again you know much of that is uh probably related",
    "start": "81000",
    "end": "88600"
  },
  {
    "text": "to the docker shim de apption a lot more people moving to container D is a runtime for kubernetes but again um",
    "start": "88600",
    "end": "96960"
  },
  {
    "text": "great to see that growth of usage that adds to what was already you know",
    "start": "96960",
    "end": "102399"
  },
  {
    "text": "significant use uh with every Docker installation there was container d as well and other uh existing",
    "start": "102399",
    "end": "110479"
  },
  {
    "text": "adopters related to that the cncf puts out a velocity report and I realize you",
    "start": "110479",
    "end": "116520"
  },
  {
    "text": "know the the chart here is incredibly busy um but container D came out as uh",
    "start": "116520",
    "end": "122560"
  },
  {
    "text": "the 13th uh you know highest velocity again there's some algorithm that looks at",
    "start": "122560",
    "end": "129759"
  },
  {
    "text": "sort of committers and PR and issue activity and so again um you know just a",
    "start": "129759",
    "end": "136680"
  },
  {
    "text": "sort of stake in the ground that container D continues to be a very healthy project with a lot of involvement across the",
    "start": "136680",
    "end": "144280"
  },
  {
    "text": "ecosystem uh related to that uh we've been excited you know since the last cubec con to have a lot of new",
    "start": "144280",
    "end": "150599"
  },
  {
    "text": "maintainers if you look at our project governance um we have sort of two levels",
    "start": "150599",
    "end": "156840"
  },
  {
    "text": "of of uh activity we have a reviewer role and a committer role we call that",
    "start": "156840",
    "end": "163239"
  },
  {
    "text": "whole group maintainers they're they're all maintainers of the project most of these uh are new reviewers to the",
    "start": "163239",
    "end": "169879"
  },
  {
    "text": "project who then as they mature in their um involvement in the project can move",
    "start": "169879",
    "end": "175319"
  },
  {
    "text": "on to become committers as well so it's really cool to see the diversity in this group there's people from Microsoft and",
    "start": "175319",
    "end": "182920"
  },
  {
    "text": "Google and VMware and again just kind of continuing uh this um activity in the project that is",
    "start": "182920",
    "end": "190799"
  },
  {
    "text": "really very broad across our ecosystem it's not all about one one group's cloud",
    "start": "190799",
    "end": "196959"
  },
  {
    "text": "or or project or or product um so anyway great to see this and I'm especially",
    "start": "196959",
    "end": "203959"
  },
  {
    "text": "excited that one of my colleagues uh AWS Henry Wang is now a reviewer as well",
    "start": "203959",
    "end": "210200"
  },
  {
    "text": "cool to see some of our uh young sdes get involved in the project as",
    "start": "210200",
    "end": "215599"
  },
  {
    "text": "well um obviously one of the ways that we see adoption growing is through kubernetes",
    "start": "215599",
    "end": "223640"
  },
  {
    "text": "distributions or manage kubernetes offerings um I won't Bore You by reading",
    "start": "223640",
    "end": "229680"
  },
  {
    "text": "you know every title of every kubernetes drro here but you know many of these have existed for a while some of them",
    "start": "229680",
    "end": "236519"
  },
  {
    "text": "are newer adopters uh and again this is just just a represent uh representation",
    "start": "236519",
    "end": "242280"
  },
  {
    "text": "of kubernetes uh there's always you know existing other adoption you know AWS",
    "start": "242280",
    "end": "248360"
  },
  {
    "text": "fargate uses container D which is not a kubernetes distribution you've got",
    "start": "248360",
    "end": "253439"
  },
  {
    "text": "docker's use of container d uh within Docker desktop within the docker engine",
    "start": "253439",
    "end": "259400"
  },
  {
    "text": "um so again we continue to see growth in overall project adoption one of the",
    "start": "259400",
    "end": "266040"
  },
  {
    "text": "things we've really focused on in the last few years and Derek going to talk about this some more um is really we've",
    "start": "266040",
    "end": "273400"
  },
  {
    "text": "tried to build container D for extensibility you know we focused on this core that has now been around since",
    "start": "273400",
    "end": "281960"
  },
  {
    "text": "um 2016 and donated to the cncf in 2017 so in many ways the core of the project",
    "start": "281960",
    "end": "288880"
  },
  {
    "text": "is fairly mature but as we've uh matured we've tried to make sure that you can",
    "start": "288880",
    "end": "294400"
  },
  {
    "text": "add uh capabilities functionality or consume container D in a way that's",
    "start": "294400",
    "end": "299880"
  },
  {
    "text": "valuable for your use case so you know that sort of one end of the spectrum is",
    "start": "299880",
    "end": "305960"
  },
  {
    "text": "building your own client or using the various client interfaces so the kuet",
    "start": "305960",
    "end": "311199"
  },
  {
    "text": "obviously uses the CRI interface of container d as a client uh you've got",
    "start": "311199",
    "end": "317800"
  },
  {
    "text": "you know Docker buildkit CTR nerd CTL you have a set of other clients using",
    "start": "317800",
    "end": "324120"
  },
  {
    "text": "the go SDK um and again that's an extensible way that you can build around container",
    "start": "324120",
    "end": "331680"
  },
  {
    "text": "d uh at the other end you know at the the back end of container D there's a",
    "start": "331680",
    "end": "337280"
  },
  {
    "text": "set of built-in snapshots and there's really been this growth and expansion uh into uh remote",
    "start": "337280",
    "end": "344720"
  },
  {
    "text": "snapshots that are proxied in that let you do things like lazy loading images",
    "start": "344720",
    "end": "350960"
  },
  {
    "text": "so um we have Co here who's created star gz snapshot to kind of kick off that",
    "start": "350960",
    "end": "357080"
  },
  {
    "text": "work that's grown into Sochi and n and other uh lazy loading snapshots that",
    "start": "357080",
    "end": "363160"
  },
  {
    "text": "exist today and that's a way that you can expand container D for your own use",
    "start": "363160",
    "end": "368199"
  },
  {
    "text": "case and then as well as shims so one of the most recent ones is the runi shim",
    "start": "368199",
    "end": "374840"
  },
  {
    "text": "that allows you to use container D to drive wasm workloads we have an existing",
    "start": "374840",
    "end": "380120"
  },
  {
    "text": "set of shim some of them have been around since the start of the project like the default run",
    "start": "380120",
    "end": "385919"
  },
  {
    "text": "cim and there's other pluggable interfaces and and as Derek walks through some of the",
    "start": "385919",
    "end": "391240"
  },
  {
    "text": "architecture you'll see other ways that we're trying to make sure that container D remains a pluggable expandable",
    "start": "391240",
    "end": "399199"
  },
  {
    "text": "extensible um project I just mentioned clients and",
    "start": "399199",
    "end": "405080"
  },
  {
    "text": "I'll try not to you know belabor all the ways that uh the client area has grown",
    "start": "405080",
    "end": "411639"
  },
  {
    "text": "over time to um you know give Derek some time so you can read a lot of the the",
    "start": "411639",
    "end": "416840"
  },
  {
    "text": "words on the slide uh CTR is has existed since we started the project many of you",
    "start": "416840",
    "end": "423039"
  },
  {
    "text": "know about nerd CTL which akaho one of our maintainers created that gives you a",
    "start": "423039",
    "end": "428199"
  },
  {
    "text": "more complete uh Docker compatible client the kubernetes project has CRI",
    "start": "428199",
    "end": "435800"
  },
  {
    "text": "CTL which allows you to drive just the CRI interface uh and any other CRI",
    "start": "435800",
    "end": "442000"
  },
  {
    "text": "compatible runtime would also uh can work with C CTL and then the the one I wanted to",
    "start": "442000",
    "end": "449400"
  },
  {
    "text": "make sure to mention is is that uh you know I've mentioned that Docker continue",
    "start": "449400",
    "end": "455240"
  },
  {
    "text": "continues to use container D underneath its uh project but there's been some",
    "start": "455240",
    "end": "460960"
  },
  {
    "text": "expansion of that in that they've started they have an experimental feature first in Docker desktop it's in",
    "start": "460960",
    "end": "466840"
  },
  {
    "text": "the Mobi project as well that allows you to use container D's Image store which",
    "start": "466840",
    "end": "473120"
  },
  {
    "text": "um you know as I just mentioned about the extensible snapshots one of the values is now that means that Docker and",
    "start": "473120",
    "end": "480440"
  },
  {
    "text": "Moby clients can take advantage of some of that extensibility and use some of",
    "start": "480440",
    "end": "485720"
  },
  {
    "text": "these custom snapshots and so that work is ongoing in the docker Moby project",
    "start": "485720",
    "end": "493199"
  },
  {
    "text": "and then there's higher layer platforms being built around that many of you have heard of K Lima or Finch that my team",
    "start": "493199",
    "end": "500280"
  },
  {
    "text": "created at AWS or Rancher desktop coming out of Rancher and Susa and these are",
    "start": "500280",
    "end": "506240"
  },
  {
    "text": "higher layer platforms building around some of these tools like nerd",
    "start": "506240",
    "end": "512039"
  },
  {
    "text": "CTL um I mentioned snapshots there's a ton of built-in core snapshots that have",
    "start": "512440",
    "end": "518959"
  },
  {
    "text": "have existed many of them since uh the start of the project but block file is a",
    "start": "518959",
    "end": "524600"
  },
  {
    "text": "new one and then the remote snapshots uh you know extensible uh by",
    "start": "524600",
    "end": "531560"
  },
  {
    "text": "being proxied into the project like Star gz overlay BD nidus uh Sochi uh a",
    "start": "531560",
    "end": "539360"
  },
  {
    "text": "project we open sourced and gka also has their image streaming built around the",
    "start": "539360",
    "end": "545160"
  },
  {
    "text": "same remote snapshot or technology U so again that's a way that",
    "start": "545160",
    "end": "550399"
  },
  {
    "text": "if you have an interesting idea or use case you can extend and create your own",
    "start": "550399",
    "end": "557200"
  },
  {
    "text": "snapshot um run times and shims again I mentioned some of these already we've",
    "start": "557200",
    "end": "562600"
  },
  {
    "text": "always had the default uh runc uh runtime that uh for",
    "start": "562600",
    "end": "567959"
  },
  {
    "text": "Linux uh coming out of the oci we also support crun we actually",
    "start": "567959",
    "end": "573959"
  },
  {
    "text": "have that tested as part of our CI on every PR and then there's a few uh",
    "start": "573959",
    "end": "579800"
  },
  {
    "text": "Alternatives and experimental run times that exist uh shims also as I mentioned an",
    "start": "579800",
    "end": "586120"
  },
  {
    "text": "area that allows you to extend container D for your use case and runi is a",
    "start": "586120",
    "end": "593399"
  },
  {
    "text": "non-core sub project of container D and there's a lot of activity happening there as I said said to run wasm",
    "start": "593399",
    "end": "600519"
  },
  {
    "text": "workloads uh driven through container D many of these others have existed for a",
    "start": "600519",
    "end": "606440"
  },
  {
    "text": "while or we've talked about them at at prior um cubec cons uh but again feel",
    "start": "606440",
    "end": "612120"
  },
  {
    "text": "free to go and dig deeper um when you have time if you're interested in some of these shim",
    "start": "612120",
    "end": "620079"
  },
  {
    "text": "implementers uh talking a little bit about our releases so 15 is fully end of",
    "start": "620200",
    "end": "626079"
  },
  {
    "text": "life at this point um is sort of our main long-term support release that we",
    "start": "626079",
    "end": "632399"
  },
  {
    "text": "announced uh a cubec con ago uh container d17 was the last of the uh 1.x line",
    "start": "632399",
    "end": "641200"
  },
  {
    "text": "we'll talk about that in a minute and then container d2o as I just uh",
    "start": "641200",
    "end": "646240"
  },
  {
    "text": "mentioned we just started uh the Beta release cycle and should have that",
    "start": "646240",
    "end": "651959"
  },
  {
    "text": "released in early 20124 uh again dependent on our uh you",
    "start": "651959",
    "end": "657519"
  },
  {
    "text": "know testing and year testing and and feedback on the beta and RC life cycle",
    "start": "657519",
    "end": "663760"
  },
  {
    "text": "there's some question marks about end of life because as you can see from um you know this snapshot taken straight from",
    "start": "663760",
    "end": "670560"
  },
  {
    "text": "our releases markdown file um there's either a Max end of life date or it's",
    "start": "670560",
    "end": "677440"
  },
  {
    "text": "based on a specific release plus 6 months and so as we have releases those",
    "start": "677440",
    "end": "683360"
  },
  {
    "text": "dates become clearer about the specific end of life so as as I mentioned we announced",
    "start": "683360",
    "end": "690800"
  },
  {
    "text": "this um I'm pretty sure last cucon about our first long-term support release uh",
    "start": "690800",
    "end": "697279"
  },
  {
    "text": "that that many people were happy that we'd have a release that didn't have such a short life cycle uh it's",
    "start": "697279",
    "end": "703639"
  },
  {
    "text": "supported at least until February 2025 and we've really sort of tried to",
    "start": "703639",
    "end": "708920"
  },
  {
    "text": "create again with some judgment calls on behalf of the maintainers and expanded",
    "start": "708920",
    "end": "714680"
  },
  {
    "text": "scope usually when uh we would only backport bug fixes to Prior releases now",
    "start": "714680",
    "end": "720440"
  },
  {
    "text": "given we're talking about supporting this for a few years we want to make sure that we have the flexibility to",
    "start": "720440",
    "end": "726560"
  },
  {
    "text": "update Go versions to update dependencies appropriately and to keep compatibility with ex you know current",
    "start": "726560",
    "end": "734560"
  },
  {
    "text": "and future kubernetes releases which sometimes requires changes to be backported into the CRI which are",
    "start": "734560",
    "end": "742040"
  },
  {
    "text": "effectively new features and then as we reach uh the end of this LTS period we'll move move this",
    "start": "742040",
    "end": "749199"
  },
  {
    "text": "to an active release with a little more limited scope because by that time there'll be other releases that'll carry",
    "start": "749199",
    "end": "756000"
  },
  {
    "text": "the new features into new versions and a new LTS",
    "start": "756000",
    "end": "762440"
  },
  {
    "text": "release uh 17 Again is our last of the 1.x line there were when we first",
    "start": "762440",
    "end": "769800"
  },
  {
    "text": "launched 1.7 uh we marked a set of new capabilities as experimental I'm not",
    "start": "769800",
    "end": "776920"
  },
  {
    "text": "going to read through these because many of these Derrik is going to talk about in a minute these are features that we",
    "start": "776920",
    "end": "782120"
  },
  {
    "text": "wanted to exist in 17 so that people could start to try them out and use them",
    "start": "782120",
    "end": "788120"
  },
  {
    "text": "and then finalize them and make them sort of G ready in 2.0 and so Derek will",
    "start": "788120",
    "end": "793600"
  },
  {
    "text": "talk through many of those our general release plan for 20 is",
    "start": "793600",
    "end": "800279"
  },
  {
    "text": "that you know we just uh release the beta beta zero on Monday we'll have a",
    "start": "800279",
    "end": "808199"
  },
  {
    "text": "series of data builds releases move into an RC period late this year early next",
    "start": "808199",
    "end": "814240"
  },
  {
    "text": "year and then hopefully um within you know late January February have a uh 2.0",
    "start": "814240",
    "end": "822160"
  },
  {
    "text": "GA and again there's a set of components that uh will move from experimental to",
    "start": "822160",
    "end": "829160"
  },
  {
    "text": "fully supported in 20 um one of the you know reasons to",
    "start": "829160",
    "end": "836040"
  },
  {
    "text": "sort of sver around a new major release is to finish uh the deprecation many",
    "start": "836040",
    "end": "843120"
  },
  {
    "text": "things that have been marked deprecated for many releases are now removed in 2.0 uh the only one I crossed out gray",
    "start": "843120",
    "end": "851000"
  },
  {
    "text": "out is the uh config file version and that's because um Derek was able to",
    "start": "851000",
    "end": "859600"
  },
  {
    "text": "create a config migration implementation so instead of you having to rewrite your",
    "start": "859600",
    "end": "865880"
  },
  {
    "text": "config uh removing you know ated um config properties and the",
    "start": "865880",
    "end": "872240"
  },
  {
    "text": "format the migration will do that for you in",
    "start": "872240",
    "end": "877839"
  },
  {
    "text": "2.0 and now I'm going to turn over to Derek to take us through a lot of these features that are going to be supported",
    "start": "878440",
    "end": "885720"
  },
  {
    "text": "in 20 all right thank you Phil um so we'll",
    "start": "885720",
    "end": "890920"
  },
  {
    "text": "we'll start to go through some of these features um we're not going to go through kind of the the high level",
    "start": "890920",
    "end": "896199"
  },
  {
    "text": "architecture that we've gone through in many other cubec cons uh we're going to kind of focus on what what we're adding",
    "start": "896199",
    "end": "902040"
  },
  {
    "text": "new in 2.0 and some of these these new services and apis that that we've added",
    "start": "902040",
    "end": "907079"
  },
  {
    "text": "uh so one of the big ones we've added is this is this new Sandbox API um think of the sandbox API it's it's it's an API",
    "start": "907079",
    "end": "913759"
  },
  {
    "text": "that we can now use to group together containers so traditionally that was done via the shim um but if if you had",
    "start": "913759",
    "end": "921720"
  },
  {
    "text": "played around with this at all you'd see that the life cycle of the sandbox was",
    "start": "921720",
    "end": "926759"
  },
  {
    "text": "the life cycle of a container and there was always some complication about trying to figure that out it it wasn't very explicit before whereas as now we",
    "start": "926759",
    "end": "934160"
  },
  {
    "text": "have an API that can actually handle uh a Sandbox as a first as a first class",
    "start": "934160",
    "end": "939959"
  },
  {
    "text": "concept um so we have a few different interfaces around that for basically creating and updating this the sandbox",
    "start": "939959",
    "end": "947199"
  },
  {
    "text": "environment um and you know some of some of the use cases around that for uh some",
    "start": "947199",
    "end": "953480"
  },
  {
    "text": "of the multiplatform or or different VM use cases uh we we we added some",
    "start": "953480",
    "end": "959120"
  },
  {
    "text": "configuration around it so that the sand sandboxes or sand boxers as as as",
    "start": "959120",
    "end": "964480"
  },
  {
    "text": "they're called right now um work similar to snapshots so as part of our goal to",
    "start": "964480",
    "end": "970279"
  },
  {
    "text": "have that that extensibility and pluggability snapshots have been a pretty good success in that you can have",
    "start": "970279",
    "end": "976519"
  },
  {
    "text": "many different implementations of it and you can you can select it um via configuration or even via runtime it's",
    "start": "976519",
    "end": "984279"
  },
  {
    "text": "it's it's kind of similar here uh so we end up with a architecture that that that kind of looks like this for the for",
    "start": "984279",
    "end": "990560"
  },
  {
    "text": "the sandbox environment so um if we had two different sandboxes being the Pod",
    "start": "990560",
    "end": "996120"
  },
  {
    "text": "sandbox which is what kind of exists today um and then kind of a new shim sandbox which uses some of the new apis",
    "start": "996120",
    "end": "1002800"
  },
  {
    "text": "uh the Pod sandbox does um what you'd expect in terms of it's it's going to",
    "start": "1002800",
    "end": "1008920"
  },
  {
    "text": "create a container um what what you would know is like the pods container today uh in kubernetes U that's that's",
    "start": "1008920",
    "end": "1015800"
  },
  {
    "text": "going to hold open uh all the name spaces and everything associated with that that pod sandbox environment um and",
    "start": "1015800",
    "end": "1022639"
  },
  {
    "text": "then it's going to go ahead and and do all the the task creation task management um in container D the we have",
    "start": "1022639",
    "end": "1030558"
  },
  {
    "text": "a single shim that will handle that so uh we'll have a shim process that actually serves uh the task API and you",
    "start": "1030559",
    "end": "1038079"
  },
  {
    "text": "know we we'll talk to that via VIA shim manager uh what's really new here with",
    "start": "1038079",
    "end": "1043360"
  },
  {
    "text": "with the sandbox service is now you can create that that shim environment before you even create the container you can",
    "start": "1043360",
    "end": "1050039"
  },
  {
    "text": "you can alter that environment separately from having to make alterations to those containers and",
    "start": "1050039",
    "end": "1055480"
  },
  {
    "text": "basically have that environment without the containers and then uh go and create that later um it it it it introduces",
    "start": "1055480",
    "end": "1063919"
  },
  {
    "text": "this new Sandbox service at the actual shim layer so the actual shims will have a new uh service that the the sandbox",
    "start": "1063919",
    "end": "1072039"
  },
  {
    "text": "are inside of uh container D can can talk to um and in the future this gives",
    "start": "1072039",
    "end": "1077280"
  },
  {
    "text": "us a little bit a bit more flexibility in defining what what a shim is and what",
    "start": "1077280",
    "end": "1083000"
  },
  {
    "text": "what the what the API between container D is and and the shin uh whereas",
    "start": "1083000",
    "end": "1089080"
  },
  {
    "text": "traditionally it was there was a onetoone relationship between uh container D's capabilities and and the",
    "start": "1089080",
    "end": "1095880"
  },
  {
    "text": "task Service uh now we actually have a little bit more uh room for extensibility there",
    "start": "1095880",
    "end": "1101960"
  },
  {
    "text": "um the other kind of area in the runtime is uh is the NRI the the node resource",
    "start": "1101960",
    "end": "1108799"
  },
  {
    "text": "interface um this happens a little bit earlier in in the process um it's it's",
    "start": "1108799",
    "end": "1114840"
  },
  {
    "text": "in between when this CRI is handling it and when we actually generate the the",
    "start": "1114840",
    "end": "1119960"
  },
  {
    "text": "oci runtime uh specification uh nr's uh pluggable interfaces has these plugable",
    "start": "1119960",
    "end": "1127120"
  },
  {
    "text": "interfaces where you can take the oci spec uh you can call into a various set of NRI plugins and actually make",
    "start": "1127120",
    "end": "1133880"
  },
  {
    "text": "adjustments uh to the oci spec so you can think of anything you want to do around around Dynamic resource",
    "start": "1133880",
    "end": "1139720"
  },
  {
    "text": "allocation um if you want to allocate parts of your GPU everything there um",
    "start": "1139720",
    "end": "1145280"
  },
  {
    "text": "it's actually pluggable interface um for doing that uh so it it it keeps container D pretty simple we we don't",
    "start": "1145280",
    "end": "1152159"
  },
  {
    "text": "have to uh make changes to container D for every type of uh node resource that",
    "start": "1152159",
    "end": "1157720"
  },
  {
    "text": "that you might want to uh allocate to your container here so uh We've added",
    "start": "1157720",
    "end": "1163960"
  },
  {
    "text": "support for this and I believe I heard that some of the other container run times have adoped did this as well so um",
    "start": "1163960",
    "end": "1171320"
  },
  {
    "text": "something that that we can use across across the ecosystem here uh so what",
    "start": "1171320",
    "end": "1176760"
  },
  {
    "text": "what that ends up looking like from a container D perspective is you know there's two different ways that you can plug these in you have NRI uh binaries",
    "start": "1176760",
    "end": "1185320"
  },
  {
    "text": "um you can also have a socket U that that the NRI plugin is listening on um",
    "start": "1185320",
    "end": "1190880"
  },
  {
    "text": "the the plugin will register itself and when a new container request comes in um",
    "start": "1190880",
    "end": "1196080"
  },
  {
    "text": "it sends that request down to NRI and and the N is able to send those container updates back to container d uh",
    "start": "1196080",
    "end": "1202400"
  },
  {
    "text": "so that it can uh it can be passed down to the runtime",
    "start": "1202400",
    "end": "1207799"
  },
  {
    "text": "configuration uh the next thing I wanted to talk about is uh the transfer service so this was something that we added in",
    "start": "1208320",
    "end": "1215559"
  },
  {
    "text": "17 traditionally in container D we've we've had this kind of fat client model",
    "start": "1215559",
    "end": "1221600"
  },
  {
    "text": "uh so everything related to pushing and polling of images was done in the client and we have a a whole bunch of low lower",
    "start": "1221600",
    "end": "1229960"
  },
  {
    "text": "level services for managing snapshots managing images managing content um even",
    "start": "1229960",
    "end": "1237240"
  },
  {
    "text": "down to we have pluggability for like uh doing the differ um uh calculating the",
    "start": "1237240",
    "end": "1243520"
  },
  {
    "text": "difference between those and applying the different layers uh to the to the",
    "start": "1243520",
    "end": "1248640"
  },
  {
    "text": "snapshots um but if if you're trying to reimplement this from scratch it's it's",
    "start": "1248640",
    "end": "1255080"
  },
  {
    "text": "it's it's a little challenging um CRI ended up having like kind of a circular",
    "start": "1255080",
    "end": "1261200"
  },
  {
    "text": "dependency on our own client because of this um and it's it's led to kind of some weird Behavior where if you're",
    "start": "1261200",
    "end": "1266720"
  },
  {
    "text": "using a client such as nerd CTL you might have a registry configuration and you have another configuration in CRI um",
    "start": "1266720",
    "end": "1274240"
  },
  {
    "text": "and they're not using the same uh implementation for this so the transfer service is aiming to solve that um but",
    "start": "1274240",
    "end": "1280640"
  },
  {
    "text": "it's aiming to solve it in a in a way that's fairly generic and simple so you",
    "start": "1280640",
    "end": "1286120"
  },
  {
    "text": "can see that the the interface that we've defined for the transfer service is extremely simple we have a source and",
    "start": "1286120",
    "end": "1292000"
  },
  {
    "text": "we have a destination um it's it's fairly generic in terms of what those",
    "start": "1292000",
    "end": "1297039"
  },
  {
    "text": "source and destinations could be um so if if the source is a registry and the destination is uh your local Image store",
    "start": "1297039",
    "end": "1306039"
  },
  {
    "text": "um that's that's a pull command if if you going from an image store to a registry that's a push command if you",
    "start": "1306039",
    "end": "1312720"
  },
  {
    "text": "have a like a an archive like an oci archive or something and you're going into the image Image store that's that's",
    "start": "1312720",
    "end": "1319159"
  },
  {
    "text": "an import um so it's it's it's kind of generalized some of these operations for",
    "start": "1319159",
    "end": "1324520"
  },
  {
    "text": "transferring images uh to different locations and adding a service so that we can do it but also uh in a way that",
    "start": "1324520",
    "end": "1331799"
  },
  {
    "text": "that can be easily extend uh extensible in the future where we can easily add different sources uh different",
    "start": "1331799",
    "end": "1337200"
  },
  {
    "text": "destinations different uh uh different functionality for for doing that so uh",
    "start": "1337200",
    "end": "1343120"
  },
  {
    "text": "there's a few that aren't implemented today such as registry to registry um which is just and you can think of that",
    "start": "1343120",
    "end": "1348960"
  },
  {
    "text": "as a as a mirror op a mirroring operation um so internally the the transfer",
    "start": "1348960",
    "end": "1356000"
  },
  {
    "text": "service looks like uh we have our service layer the client is going to uh",
    "start": "1356000",
    "end": "1361320"
  },
  {
    "text": "when it initiates a poll um it's going to just send that that request to the transfer service behind the scenes",
    "start": "1361320",
    "end": "1368000"
  },
  {
    "text": "there's a few things that that are being done here so we have another service called the streaming service which is uh",
    "start": "1368000",
    "end": "1374120"
  },
  {
    "text": "just a generic way for handling a stream of data from the client uh uh to uh to",
    "start": "1374120",
    "end": "1379600"
  },
  {
    "text": "the Damon in this case um it's able to create a stream and set that identifier",
    "start": "1379600",
    "end": "1385279"
  },
  {
    "text": "in the transfer request um in order to do stuff uh such as returning progress",
    "start": "1385279",
    "end": "1390360"
  },
  {
    "text": "back from the Damon back to the client um it's also uh really useful for being",
    "start": "1390360",
    "end": "1396159"
  },
  {
    "text": "able to make requests from the Damon back to the client for uh getting credentials um that's been a a sticky",
    "start": "1396159",
    "end": "1403799"
  },
  {
    "text": "Point uh for a while when you have a dam side transfer is at what point do you",
    "start": "1403799",
    "end": "1410240"
  },
  {
    "text": "get credentials and what do you get them for in this case you can configure you can configure the Damon uh to talk to",
    "start": "1410240",
    "end": "1416799"
  },
  {
    "text": "different various different mirrors or whatever your registry configuration is and actually get the appropriate",
    "start": "1416799",
    "end": "1422640"
  },
  {
    "text": "credentials for that when you actually make the request to the registry um and then we have these different objects",
    "start": "1422640",
    "end": "1428720"
  },
  {
    "text": "that are playing a much smaller role so the the registry source is going to use a city resolver that's always existed",
    "start": "1428720",
    "end": "1436240"
  },
  {
    "text": "which will contact the remote registry um and then we have the image store destination that's responsible for doing",
    "start": "1436240",
    "end": "1442279"
  },
  {
    "text": "stuff like unpack and uh doing all the content manipulation and image storage so if if we break down what a",
    "start": "1442279",
    "end": "1450520"
  },
  {
    "text": "what a poll looks like today it's this this this is the simple case we have a client it's going to get a manifest from",
    "start": "1450520",
    "end": "1457559"
  },
  {
    "text": "uh a registry using the distribution uh API it's going to get a manifest it's",
    "start": "1457559",
    "end": "1463799"
  },
  {
    "text": "going to get a config and then once it has that config it knows which layers it needs um to to get that complete image it's",
    "start": "1463799",
    "end": "1471520"
  },
  {
    "text": "going to go and it's going to fetch each of those layers it's going to store them in the content store and then at that point uh the the fetch of the image is",
    "start": "1471520",
    "end": "1478840"
  },
  {
    "text": "done from a can perspective now we're going to go through each of those layers we're going to prepare a snapshot we're going to apply uh the diff um in this",
    "start": "1478840",
    "end": "1487039"
  },
  {
    "text": "case they're just tar streams um so we're going to untar each of those into the snapshot um by reading the content",
    "start": "1487039",
    "end": "1494720"
  },
  {
    "text": "from the content store uh mounting doing the diff and then get getting back the",
    "start": "1494720",
    "end": "1500760"
  },
  {
    "text": "identifier for that layer and then we're going to commit that snapshot and then in the end we create an image pointing to that top snap shot um now we we've",
    "start": "1500760",
    "end": "1509480"
  },
  {
    "text": "optimized this a little bit so you can do some of these operations in parallel uh where when you go to get the Manifest",
    "start": "1509480",
    "end": "1516960"
  },
  {
    "text": "you get the config you know you know what the final snapshot is that you're going to need uh so you can check to see",
    "start": "1516960",
    "end": "1523600"
  },
  {
    "text": "if you have that snapshot if you already have it uh you don't actually need to pull any more content in order to get",
    "start": "1523600",
    "end": "1529039"
  },
  {
    "text": "that uh in order to make that image available um so when it's not available we're",
    "start": "1529039",
    "end": "1535760"
  },
  {
    "text": "going to go through a similar process we're going to now prepare a snapshot but now we can wait once once we know we",
    "start": "1535760",
    "end": "1541840"
  },
  {
    "text": "need to create that snapshot we can kick off that that fetch operation and actually do that fetch operation in",
    "start": "1541840",
    "end": "1547679"
  },
  {
    "text": "parallel for all the layers that are needed um as they become available we do those um we do the we apply those diffs",
    "start": "1547679",
    "end": "1556159"
  },
  {
    "text": "and then in the end we'll get a uh created image U so it's it's a little bit more optimized because we can start",
    "start": "1556159",
    "end": "1562320"
  },
  {
    "text": "doing these in parallel um now the real kind of Time Saver is kind of what we",
    "start": "1562320",
    "end": "1569039"
  },
  {
    "text": "what Phil was mentioning before around lazy loading um and this is where you can almost erase tar completely from the",
    "start": "1569039",
    "end": "1576080"
  },
  {
    "text": "picture uh where once we have that config we we know what the final",
    "start": "1576080",
    "end": "1581159"
  },
  {
    "text": "snapshot is that we're going to need um we when we go to prepare that snapshot",
    "start": "1581159",
    "end": "1586360"
  },
  {
    "text": "if we have a snapshot or that's smart enough to know uh where it can actually",
    "start": "1586360",
    "end": "1591880"
  },
  {
    "text": "get that content from in the most efficient way to make that file system available because that's all we need in the end is uh we need the snapshot to",
    "start": "1591880",
    "end": "1598919"
  },
  {
    "text": "make the file system available it can actually go to the registry directly to get the content it needed and it can",
    "start": "1598919",
    "end": "1604200"
  },
  {
    "text": "just return to container D that I have everything I need to make the file system available if the snapshot or",
    "start": "1604200",
    "end": "1609320"
  },
  {
    "text": "exists container D can just commit it create the image and the snapshot or can actually fetch all the content as needed",
    "start": "1609320",
    "end": "1615679"
  },
  {
    "text": "in the background um or whatever the implementation of of the snapshot is in that case um but you can you can see how",
    "start": "1615679",
    "end": "1623200"
  },
  {
    "text": "these these operations can short circuit through pretty fast um uh to make a",
    "start": "1623200",
    "end": "1629559"
  },
  {
    "text": "poll as as as quick as possible without having to go through all those extra steps um so uh for the transfer service",
    "start": "1629559",
    "end": "1637960"
  },
  {
    "text": "some of the some of the uh new use cases and extensibility points here is uh some",
    "start": "1637960",
    "end": "1643640"
  },
  {
    "text": "of this was written for confidential Computing where we actually want a service that we can put in different places and it could be behind a a an a",
    "start": "1643640",
    "end": "1651840"
  },
  {
    "text": "confidential or secure Enclave environment um some of the oci refers work um that uh I know some of it like",
    "start": "1651840",
    "end": "1659399"
  },
  {
    "text": "some of the lazy loading implementations make use of refers um being able to actually get those and make those",
    "start": "1659399",
    "end": "1664559"
  },
  {
    "text": "available uh we do have some ongoing uh image validation work that that's going",
    "start": "1664559",
    "end": "1669679"
  },
  {
    "text": "on as well um and some of that's been merged and it'll be in in 2.0 um but",
    "start": "1669679",
    "end": "1675559"
  },
  {
    "text": "there's also more more work that's being done for stuff like making credential management uh better um and then",
    "start": "1675559",
    "end": "1682840"
  },
  {
    "text": "obviously the work to get uh we're updating CRI plugin in order to use the transfer service so that we have one",
    "start": "1682840",
    "end": "1689159"
  },
  {
    "text": "common implementation um the other big change in in CRI that was mentioned was",
    "start": "1689159",
    "end": "1695720"
  },
  {
    "text": "username spaces so we've added username space support in 1.7 for stateless pods",
    "start": "1695720",
    "end": "1702320"
  },
  {
    "text": "and then in we have uh kind of additional support coming in for 2.0 for",
    "start": "1702320",
    "end": "1707559"
  },
  {
    "text": "for stateful pods um there it's it's yeah it's much more challenging but there's there's a lot of",
    "start": "1707559",
    "end": "1714080"
  },
  {
    "text": "uh you can follow along some of the keps that are going along in kubernetes to make uh make some of this work but we've",
    "start": "1714080",
    "end": "1720480"
  },
  {
    "text": "had a lot of that stuff available in container D for a while with username spaces but having that plumbed all the",
    "start": "1720480",
    "end": "1726360"
  },
  {
    "text": "way through uh CRI is is is new here um and kind of lastly I want to",
    "start": "1726360",
    "end": "1732960"
  },
  {
    "text": "talk about some of the future and in development work that's going on um 1.7",
    "start": "1732960",
    "end": "1738919"
  },
  {
    "text": "was kind of an exciting release we had a lot of experimental stuff 2.0 I I think",
    "start": "1738919",
    "end": "1743960"
  },
  {
    "text": "I said this a few cucon ago is not designed to be an exciting release it's designed to be a boring release we took",
    "start": "1743960",
    "end": "1750559"
  },
  {
    "text": "experimental stuff and now we're making it stable um making it more usable um",
    "start": "1750559",
    "end": "1755799"
  },
  {
    "text": "you know there's there's still some loose ends we're cleaning up here uh with the transfer service and making",
    "start": "1755799",
    "end": "1761000"
  },
  {
    "text": "sandbox GA and the default um we have some work going on for shim plugins um",
    "start": "1761000",
    "end": "1767559"
  },
  {
    "text": "so yeah I mentioned earlier how the shims now can have multiple services so we want to kind of extend that concept",
    "start": "1767559",
    "end": "1774159"
  },
  {
    "text": "to make it uh give more ways that that users can manage some of those today we",
    "start": "1774159",
    "end": "1779399"
  },
  {
    "text": "have proxy plugins um the so the shim the shims would be a uh shim plugins",
    "start": "1779399",
    "end": "1785120"
  },
  {
    "text": "would be a way to kind of extend that farther um and then we also have some higher level services that might come in",
    "start": "1785120",
    "end": "1791279"
  },
  {
    "text": "and 2.0 around image management um today our our apis are pretty low level they",
    "start": "1791279",
    "end": "1797000"
  },
  {
    "text": "don't the image service knows nothing about the snapshot or service or the container service so you can think of a",
    "start": "1797000",
    "end": "1802840"
  },
  {
    "text": "higher level Service as something that can glue some of those components together and provide something um that",
    "start": "1802840",
    "end": "1808279"
  },
  {
    "text": "will really simplify some of the clients today like nerdl and and Mobi and even",
    "start": "1808279",
    "end": "1813760"
  },
  {
    "text": "possibly make it easier to to implement new clients there um same for the high level container service if if you try to",
    "start": "1813760",
    "end": "1820320"
  },
  {
    "text": "use container dpis to like start a container that's it's it's challenging there's there's a lot of different apis",
    "start": "1820320",
    "end": "1826440"
  },
  {
    "text": "you need to call from creating a snapshot creating a container to to creating a task waiting for that task um",
    "start": "1826440",
    "end": "1832159"
  },
  {
    "text": "so having something simpler and higher level um and something that can make use of some of the other features we've added such as uh the streaming service",
    "start": "1832159",
    "end": "1839039"
  },
  {
    "text": "for for managing kind of just basic input output over over the API without having to necessarily touch lowlevel",
    "start": "1839039",
    "end": "1845440"
  },
  {
    "text": "fifos and stuff like that um so I mean that that's kind of what",
    "start": "1845440",
    "end": "1851679"
  },
  {
    "text": "what we have coming along in in 2.0 um we hope everybody like wants to get",
    "start": "1851679",
    "end": "1856919"
  },
  {
    "text": "involved if you're here um like even if even if you're not going to come contribute to",
    "start": "1856919",
    "end": "1862960"
  },
  {
    "text": "container D core um you know there's a huge ecosystem now of projects um use",
    "start": "1862960",
    "end": "1868880"
  },
  {
    "text": "those projects try them out um propose you know new projects bring your your own projects we're we're constantly",
    "start": "1868880",
    "end": "1876039"
  },
  {
    "text": "getting new core non-core uh projects being added to container d uh which is",
    "start": "1876039",
    "end": "1881480"
  },
  {
    "text": "which is is great to see um we have our community meetings the second and fourth Thursday of every month it's very",
    "start": "1881480",
    "end": "1887960"
  },
  {
    "text": "specific but you can look at the cncf calendar if you if you want to kind of add that to your own calendar um and",
    "start": "1887960",
    "end": "1896000"
  },
  {
    "text": "yeah as always like come open poll requests have discussions like I think",
    "start": "1896000",
    "end": "1901240"
  },
  {
    "text": "we're pretty welcoming community and we're always looking for more uh users come in as reviewers and and and more",
    "start": "1901240",
    "end": "1908440"
  },
  {
    "text": "involvement so uh yeah thank you everybody for for joining uh I think we",
    "start": "1908440",
    "end": "1914519"
  },
  {
    "text": "might have some time for questions let's see two minutes left",
    "start": "1914519",
    "end": "1919638"
  },
  {
    "text": "but so for yeah compatibility with with wasum um I mean a lot of that's put on",
    "start": "1926360",
    "end": "1931799"
  },
  {
    "text": "the the wasm community for now to make their to implement kind of the apis we have one of the things we're trying to",
    "start": "1931799",
    "end": "1939080"
  },
  {
    "text": "do with adding more extensibility at that layer is that if wasm has brand new",
    "start": "1939080",
    "end": "1945399"
  },
  {
    "text": "functionality that maybe doesn't align with with containers today that um the shims uh they can they can have that",
    "start": "1945399",
    "end": "1952600"
  },
  {
    "text": "functionality and we we can go and support that in in container D um but for the most part the",
    "start": "1952600",
    "end": "1960000"
  },
  {
    "text": "compatibility burden is on them um but I I think as that ecosystem matures a",
    "start": "1960000",
    "end": "1965240"
  },
  {
    "text": "little bit we'll be able to have like a much more like have that comeback be able to Define uh interfaces that maybe",
    "start": "1965240",
    "end": "1973159"
  },
  {
    "text": "make sense like task like our Tas service was written many many years ago it's probably the oldest oldest API we",
    "start": "1973159",
    "end": "1980159"
  },
  {
    "text": "have in container D back to like 2015 or something when when it was originally written and it's it's very specific to",
    "start": "1980159",
    "end": "1987120"
  },
  {
    "text": "Linux containers and as we know like modern sandboxes and and wasm run times",
    "start": "1987120",
    "end": "1995120"
  },
  {
    "text": "they look different they can do much they have much more capabilities so um",
    "start": "1995120",
    "end": "2000919"
  },
  {
    "text": "hey uh question about R running in kubernetes uh with container d uh uh",
    "start": "2000919",
    "end": "2007039"
  },
  {
    "text": "this is a question about logs uh from containers uh the logs from containers",
    "start": "2007039",
    "end": "2012080"
  },
  {
    "text": "in this scenario land on the nodes file system as files with contents right in",
    "start": "2012080",
    "end": "2018120"
  },
  {
    "text": "specific format uh this can get problematic it has its issues you need to have access to those files uh you",
    "start": "2018120",
    "end": "2025440"
  },
  {
    "text": "need the throughput on the io you need to pass it etc etc I was wondering if it's possible I know Docker has",
    "start": "2025440",
    "end": "2032840"
  },
  {
    "text": "something like logging drivers I'm not sure if this is part of container D would it be possible to to tell container D to just ship the lcks Via",
    "start": "2032840",
    "end": "2039639"
  },
  {
    "text": "HTTP to the 9 point yeah so so the way container D treats all the the io from a",
    "start": "2039639",
    "end": "2045200"
  },
  {
    "text": "containers we just we we send it along to the the next one and in this case I believe would be the cubet which be",
    "start": "2045200",
    "end": "2051638"
  },
  {
    "text": "responsible for for how it processes it um yeah we we made a conscious decision not to touch the container output",
    "start": "2051639",
    "end": "2058560"
  },
  {
    "text": "awesome so no need to change anything in container D yeah yeah awesome great thanks oh another quick question to AWS",
    "start": "2058560",
    "end": "2066720"
  },
  {
    "text": "uh what's the plan to include container D V2 in eks will be available just as an",
    "start": "2066720",
    "end": "2075358"
  },
  {
    "text": "option where's my eks team they're here uh it's been it's been an option um I",
    "start": "2075359",
    "end": "2081919"
  },
  {
    "text": "want to say for a couple releases so uh it was first you know it wasn't the default you",
    "start": "2081919",
    "end": "2089358"
  },
  {
    "text": "could choose it but now I believe 1.24 kubernetes and above no I",
    "start": "2089359",
    "end": "2098200"
  },
  {
    "text": "mean container D V2 oh V2 ah well yeah as you can see it's not released yet so",
    "start": "2098200",
    "end": "2105320"
  },
  {
    "text": "that step one is uh a release and then yeah I mean obviously over time we have",
    "start": "2105320",
    "end": "2110839"
  },
  {
    "text": "to validate that with eks and other services that consume container D so",
    "start": "2110839",
    "end": "2116839"
  },
  {
    "text": "okay it'll next year check check with us in Paris all right thank you very",
    "start": "2116839",
    "end": "2122400"
  },
  {
    "text": "much hey yes so I'm deploying kubernetes in a number a environments with private Registries and",
    "start": "2122400",
    "end": "2130079"
  },
  {
    "text": "then what I'm doing is I'm using container D's uh mirroring to you know",
    "start": "2130079",
    "end": "2135440"
  },
  {
    "text": "you can come up and talk just to to stop so we we'll we'll take questions we'll stick around thank",
    "start": "2135440",
    "end": "2141680"
  },
  {
    "text": "you everybody be here",
    "start": "2141680",
    "end": "2148440"
  }
]