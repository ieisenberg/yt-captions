[
  {
    "text": "all right welcome it's been a fun few",
    "start": "500",
    "end": "7049"
  },
  {
    "text": "days so I appreciate seeing you all here it's late in the conference so thanks",
    "start": "7049",
    "end": "13139"
  },
  {
    "text": "for joining so I'm you sleep I come for a company",
    "start": "13139",
    "end": "19859"
  },
  {
    "text": "called container where we we've been building things on top of kubernetes per day for the past year and a half today",
    "start": "19859",
    "end": "28140"
  },
  {
    "text": "I'm going to talk about bit how we've been building and maintaining a kubernetes client library and actually",
    "start": "28140",
    "end": "34980"
  },
  {
    "text": "sort of swimming a bit upstream because we've been doing it with Ruby instead of to go as everybody else in their cloud",
    "start": "34980",
    "end": "43320"
  },
  {
    "text": "ad world is doing so it's sort of a storage from the trenches type of thing",
    "start": "43320",
    "end": "49440"
  },
  {
    "text": "where I go through a couple of there well few of the pitfalls we've been",
    "start": "49440",
    "end": "55410"
  },
  {
    "text": "falling into I'm gonna start by by going",
    "start": "55410",
    "end": "62219"
  },
  {
    "text": "through a bit of the deserters background why why we actually started to build build a new new client library",
    "start": "62219",
    "end": "68220"
  },
  {
    "text": "for kubernetes we'll go through some authentication bits on there from the",
    "start": "68220",
    "end": "74490"
  },
  {
    "text": "client purely from the client point of view how it's a well it's a bit hard or",
    "start": "74490",
    "end": "79950"
  },
  {
    "text": "at least a lot harder than it then it seems at first glance then we'll go to",
    "start": "79950",
    "end": "86700"
  },
  {
    "text": "you about bit about the posting pudding patching of resources and few words on",
    "start": "86700",
    "end": "93090"
  },
  {
    "text": "on different types of merge patch styles which you can use with kubernetes api",
    "start": "93090",
    "end": "99350"
  },
  {
    "text": "and then at last we'll we'll talk bit down on grdc's custom resources and how",
    "start": "99350",
    "end": "107070"
  },
  {
    "text": "they make or can make wipey quick difficult from the from the client point of view so i hope i'm not able to put",
    "start": "107070",
    "end": "116790"
  },
  {
    "text": "too many of you in the into sleep in this session so yeah this is a bit like",
    "start": "116790",
    "end": "124860"
  },
  {
    "text": "story of how many pitfalls we could actually be able to hit during our",
    "start": "124860",
    "end": "131640"
  },
  {
    "text": "in the in the client world of kubernetes unfortunately less not really enough",
    "start": "131640",
    "end": "138660"
  },
  {
    "text": "time to go through every single one of them because we trust me we quite a few of them will go I'll try to select the",
    "start": "138660",
    "end": "147209"
  },
  {
    "text": "sort of most important ones if you're thinking about writing a client robbery or if you have to have to work with the",
    "start": "147209",
    "end": "155130"
  },
  {
    "text": "sort of low-level API things with with kubernetes of course if you're just",
    "start": "155130",
    "end": "160560"
  },
  {
    "text": "using tube GDL apply then this well this might not really apply to you but but it",
    "start": "160560",
    "end": "166650"
  },
  {
    "text": "might help you and to actually understand how things work with cubes EDL how they do so yeah at least in in",
    "start": "166650",
    "end": "179250"
  },
  {
    "text": "in our cases when we started the journey we really really underestimated the airport what it actually takes to build",
    "start": "179250",
    "end": "185400"
  },
  {
    "text": "a a truly working client library for kubernetes but on the other hand it was",
    "start": "185400",
    "end": "193310"
  },
  {
    "text": "really a good learning exercise for us too so now we really understand how Cube",
    "start": "193310",
    "end": "198930"
  },
  {
    "text": "API works and why it works as it as it does and then in the end it really is",
    "start": "198930",
    "end": "206730"
  },
  {
    "text": "now in sort of enable for us and our teams to to build different things on",
    "start": "206730",
    "end": "213360"
  },
  {
    "text": "top of and using kubernetes api but that's only on the slide do you not",
    "start": "213360",
    "end": "220380"
  },
  {
    "text": "really underestimate airport and and do not really start to do it unless you know you really have to do it so as I as",
    "start": "220380",
    "end": "232049"
  },
  {
    "text": "I mentioned we've been we've been building this sort of a kubernetes distribution called Ferris for a year year and a half already now and as part",
    "start": "232049",
    "end": "240209"
  },
  {
    "text": "of the distribution we we actually set up hundreds of different resources on top of the cluster tech or kubernetes",
    "start": "240209",
    "end": "248010"
  },
  {
    "text": "cluster and and and of course when you manage that number of resources in the",
    "start": "248010",
    "end": "253859"
  },
  {
    "text": "distribution you you really have to have something lean and mean to operate on and and as they as the trend is now",
    "start": "253859",
    "end": "261150"
  },
  {
    "text": "which cooper need is just a lot of CR DS and custom resources that it's created between four different",
    "start": "261150",
    "end": "266730"
  },
  {
    "text": "operators and different other other building blocks in the cluster so we",
    "start": "266730",
    "end": "271770"
  },
  {
    "text": "really wanted something that can also easily work with CR these out of those",
    "start": "271770",
    "end": "277590"
  },
  {
    "text": "400 or PSA's we we provision like storage classes different GRDC ingress",
    "start": "277590",
    "end": "282750"
  },
  {
    "text": "C's we we deploy backup functionality we torque and and and those sort of things",
    "start": "282750",
    "end": "290660"
  },
  {
    "text": "and of course basically everything I'm talking about this open source and and",
    "start": "292160",
    "end": "297810"
  },
  {
    "text": "and the main one being the Kas client that we have so it's under Apache 2 license first cluster it's also the open",
    "start": "297810",
    "end": "307860"
  },
  {
    "text": "source and it's the sort of main user of the of the client library on top of the",
    "start": "307860",
    "end": "314220"
  },
  {
    "text": "client library we've also created another sort of deployment tool called Mordor which helps you manage manage",
    "start": "314220",
    "end": "320880"
  },
  {
    "text": "resources and and this complex set of resources and and and those are just mainly mainly as an example of the users",
    "start": "320880",
    "end": "328380"
  },
  {
    "text": "of the client library we built so you",
    "start": "328380",
    "end": "333600"
  },
  {
    "text": "can go and look how we use the client library and and there's a lot of good examples how to use it when than if you",
    "start": "333600",
    "end": "340590"
  },
  {
    "text": "if you need to use Ruby or want to use Ruby",
    "start": "340590",
    "end": "346160"
  },
  {
    "text": "so let's ping let's begin the journey and first it ended up being a bit more",
    "start": "346640",
    "end": "352860"
  },
  {
    "text": "dark theme that than we anticipated so",
    "start": "352860",
    "end": "359460"
  },
  {
    "text": "to really understand how how and why things work in the APS they do first we",
    "start": "359460",
    "end": "367320"
  },
  {
    "text": "had to really understand how the request post processing goes into the API so every single request on the API service",
    "start": "367320",
    "end": "375690"
  },
  {
    "text": "of course authenticated there's a lot of different plugins that you can plug on the configure on the API server and",
    "start": "375690",
    "end": "381690"
  },
  {
    "text": "basically the first one successfully ordinay and the user passes then the identity forward to the later stages",
    "start": "381690",
    "end": "389690"
  },
  {
    "text": "authorization typically our back then authorizes whether I'm really allowed to",
    "start": "390170",
    "end": "395250"
  },
  {
    "text": "do what I'm trying to do and after that they're set up admission controllers which can do",
    "start": "395250",
    "end": "401010"
  },
  {
    "text": "things on your resources admission controller can recheck your resource at",
    "start": "401010",
    "end": "407130"
  },
  {
    "text": "oldest looks too dangerous I'm not going to allow it in or it can actually mutate the resource put put on some default",
    "start": "407130",
    "end": "414450"
  },
  {
    "text": "values change things and and so on and then after that pass it on",
    "start": "414450",
    "end": "420150"
  },
  {
    "text": "the last step is actually validating the resources so that the port you're trying to create is actually a valid port and",
    "start": "420150",
    "end": "427970"
  },
  {
    "text": "then only after that we store it on there on the HDD data store on the API",
    "start": "427970",
    "end": "434180"
  },
  {
    "text": "and then when it's on the HDD and then available on the API then there's a lot",
    "start": "434180",
    "end": "440070"
  },
  {
    "text": "of other controllers actually creating reports and replica sets and whatnot",
    "start": "440070",
    "end": "446689"
  },
  {
    "text": "authentication the first step in there in the request policy mitts well from",
    "start": "449870",
    "end": "456300"
  },
  {
    "text": "the API server point of view it's pretty pretty straightforward from the client",
    "start": "456300",
    "end": "462270"
  },
  {
    "text": "point of view it's it's actually not on the API side it's basically three ways",
    "start": "462270",
    "end": "468600"
  },
  {
    "text": "which you can authenticate client certificates tokens or HTTP plain",
    "start": "468600",
    "end": "475700"
  },
  {
    "text": "authentication of course for tokens there are a couple of variations but it's still essentially a token of",
    "start": "475700",
    "end": "482760"
  },
  {
    "text": "negation so pretty pretty straightforward well it turned out that",
    "start": "482760",
    "end": "489540"
  },
  {
    "text": "the cube config which is used to configure the client-side has actually X",
    "start": "489540",
    "end": "494670"
  },
  {
    "text": "number of ways to configure authentication and I really mean X because I I have a gut feeling that we",
    "start": "494670",
    "end": "501240"
  },
  {
    "text": "we haven't seen all of them yet some of weird corner cases has been popping up every now and then and we",
    "start": "501240",
    "end": "508020"
  },
  {
    "text": "just have to try to support them and one",
    "start": "508020",
    "end": "513120"
  },
  {
    "text": "of the troubles in in the obligation parties is that actually in many cases especially for managed kubernetes like",
    "start": "513120",
    "end": "520169"
  },
  {
    "text": "eks ggae we have to call an external tool to get the token to pass on to the API",
    "start": "520170",
    "end": "529370"
  },
  {
    "text": "just as couple examples the top left",
    "start": "529740",
    "end": "535449"
  },
  {
    "text": "corner is from Google and and you actually see that there's a",
    "start": "535449",
    "end": "541110"
  },
  {
    "text": "configuration to call the external tool to some JSON path to the output of the",
    "start": "541110",
    "end": "548170"
  },
  {
    "text": "tool and I only after that you get the token to be passed on the API well it's",
    "start": "548170",
    "end": "553629"
  },
  {
    "text": "not that difficult to support we can pull it off well then came eks which",
    "start": "553629",
    "end": "561009"
  },
  {
    "text": "uses pretty much the same sort of style and and an idea we call an external tool",
    "start": "561009",
    "end": "567370"
  },
  {
    "text": "we get to talk and we pass it today API but if you see the configuration is",
    "start": "567370",
    "end": "573279"
  },
  {
    "text": "totally different on the cube convict so yeah let's let's build a support for",
    "start": "573279",
    "end": "579129"
  },
  {
    "text": "that to you well on the right hand side those are the most typical once you see",
    "start": "579129",
    "end": "584230"
  },
  {
    "text": "there's a plane token already on there on the cube convict we just pass it on to the API or there's a client client",
    "start": "584230",
    "end": "591040"
  },
  {
    "text": "certificate we put it on there on the request and and it just works as it should so that also led to some other",
    "start": "591040",
    "end": "603430"
  },
  {
    "text": "complexities on the cube convict part [Music] the cube convict environment variable",
    "start": "603430",
    "end": "610269"
  },
  {
    "text": "can actually point to many different to convict files and and luckily it's a",
    "start": "610269",
    "end": "615850"
  },
  {
    "text": "pretty well document at how how to climb this expected to sort of merge the",
    "start": "615850",
    "end": "621310"
  },
  {
    "text": "information but emerging rules are actually pretty complex and then when you have a lot of different clusters",
    "start": "621310",
    "end": "628120"
  },
  {
    "text": "which all of all of you have named a test cluster test cost or this cluster",
    "start": "628120",
    "end": "633639"
  },
  {
    "text": "the merging can be well part or undoable even in some cases I learned not to not",
    "start": "633639",
    "end": "641889"
  },
  {
    "text": "not to name all of my clusters like test clusters no no I have test foster one two three and so on",
    "start": "641889",
    "end": "649740"
  },
  {
    "text": "one of the oddities we've seen also is that in some cases to token in the cube convict file it can't be",
    "start": "650250",
    "end": "657279"
  },
  {
    "text": "or can well it might be or might not be already base64-encoded and that's a pretty difficult thing to",
    "start": "657279",
    "end": "664600"
  },
  {
    "text": "figure out whether whether I have something that's already pays encoded or not so we've had to do some workarounds",
    "start": "664600",
    "end": "671650"
  },
  {
    "text": "for that too and then of course the configuration is somewhat different whether you're",
    "start": "671650",
    "end": "677650"
  },
  {
    "text": "running out of cluster and my CLI or whether I'm running this thing on a port within the cluster so we try to support",
    "start": "677650",
    "end": "685390"
  },
  {
    "text": "everything and then of course from from purely if if I see myself as user of",
    "start": "685390",
    "end": "692620"
  },
  {
    "text": "this library the user shouldn't really have to deal all about this complexity so what we actually be now able to do is",
    "start": "692620",
    "end": "700740"
  },
  {
    "text": "that so we've tried to hide all the nasty details from the users of the",
    "start": "700740",
    "end": "706180"
  },
  {
    "text": "library so just okay let's fly and order config and I get a client instance back",
    "start": "706180",
    "end": "711250"
  },
  {
    "text": "so that's pretty pretty neat okay",
    "start": "711250",
    "end": "717010"
  },
  {
    "text": "let's start to work with the resources now we have the client that we actually used to talk with the API let's start to",
    "start": "717010",
    "end": "723400"
  },
  {
    "text": "to actually do some some resource things so of course as we developers always do",
    "start": "723400",
    "end": "732010"
  },
  {
    "text": "we start with a sort of simple naive approach and of course that that's what we did do so to be able to create a",
    "start": "732010",
    "end": "740620"
  },
  {
    "text": "resource you do a post on the API server to the even path of the resource and and voila you have a resource on the on the",
    "start": "740620",
    "end": "747279"
  },
  {
    "text": "API then when you need to update it you get it you reconfigure it and you put it",
    "start": "747279",
    "end": "757240"
  },
  {
    "text": "back as you do with the normal REST API is the merging usually happens when when",
    "start": "757240",
    "end": "764980"
  },
  {
    "text": "when you load a a local Yama file let's say a pod and then we merge it with the",
    "start": "764980",
    "end": "770800"
  },
  {
    "text": "with the resource that we got from the server and we try to put it back this actually works pretty well in in most of",
    "start": "770800",
    "end": "778300"
  },
  {
    "text": "the use cases and a lot of tech different client libraries that I've checked they actually use this approach",
    "start": "778300",
    "end": "784750"
  },
  {
    "text": "in in them the official-official but the go client",
    "start": "784750",
    "end": "790690"
  },
  {
    "text": "doesn't use this and you'll see in in a couple of slides why",
    "start": "790690",
    "end": "796230"
  },
  {
    "text": "the local merging can be actually problematic when you have deep structures and arrays and everything in",
    "start": "797140",
    "end": "803920"
  },
  {
    "text": "your llamo so that might become actually pretty bit complex so we started to",
    "start": "803920",
    "end": "812140"
  },
  {
    "text": "think that okay why why can't we just basically load the llamo file from the disk a port and why not just put it to",
    "start": "812140",
    "end": "819760"
  },
  {
    "text": "put it back to the server sis well it turns out that the what you have in your",
    "start": "819760",
    "end": "826000"
  },
  {
    "text": "local llamo and if you compare what you have on the server side then not even close to being the same resource so",
    "start": "826000",
    "end": "833200"
  },
  {
    "text": "there's a lot of defaulting happening in the in the API where when the when the",
    "start": "833200",
    "end": "840490"
  },
  {
    "text": "objects are more shot from Jason to golang and back to Jason to duet CD and",
    "start": "840490",
    "end": "847150"
  },
  {
    "text": "also remember that on the on the Rico stages we have dis admission controllers which can actually mutate your objects",
    "start": "847150",
    "end": "854170"
  },
  {
    "text": "so what you have on local disk and what you have on server they might or might not be the same thing of course you",
    "start": "854170",
    "end": "860110"
  },
  {
    "text": "should have pretty much same attributes but but usually on the server side you have a lot more default values and and",
    "start": "860110",
    "end": "866740"
  },
  {
    "text": "and and those sort of things so essentially when you load up they load up the llamo form a disk you try to put",
    "start": "866740",
    "end": "875710"
  },
  {
    "text": "it that server just says that no can do can't accept this not valid",
    "start": "875710",
    "end": "882570"
  },
  {
    "text": "so this has led basically to do have",
    "start": "883920",
    "end": "889199"
  },
  {
    "text": "this sort of very different ways to actually patch resources on the server and the what what what the goal and",
    "start": "889199",
    "end": "896459"
  },
  {
    "text": "library new does is this sort of a strategic merge patch which basically say a server size merge of the resources",
    "start": "896459",
    "end": "905779"
  },
  {
    "text": "the problem in that is is that the strategy used to merge things together",
    "start": "906109",
    "end": "912540"
  },
  {
    "text": "is actually decided on the server side so the result might be different if I'm",
    "start": "912540",
    "end": "918269"
  },
  {
    "text": "updating a port versus if I'm updating a custom resource so the logic can't be",
    "start": "918269",
    "end": "924449"
  },
  {
    "text": "different and for example if I have a port existing already on server and on",
    "start": "924449",
    "end": "930299"
  },
  {
    "text": "the local one I rip replace a a container in a pot and do this strategic",
    "start": "930299",
    "end": "937410"
  },
  {
    "text": "merge on the server side I end up end up having two ports two containers in a pot so for example erase or merge and not",
    "start": "937410",
    "end": "944999"
  },
  {
    "text": "replaced by default at least so we started to use this we ended up having",
    "start": "944999",
    "end": "952129"
  },
  {
    "text": "again some trouble because the merging didn't work as expected what we actually",
    "start": "952129",
    "end": "959999"
  },
  {
    "text": "ended up doing is pretty much what chip CDL does with when you do a cube GDL apply so essentially it's a sort of a",
    "start": "959999",
    "end": "967860"
  },
  {
    "text": "three-way merge on the client side so whenever we create a resource with with",
    "start": "967860",
    "end": "974339"
  },
  {
    "text": "a client now we record the last applied configuration in an annotation so",
    "start": "974339",
    "end": "979559"
  },
  {
    "text": "basically we record what was what we saw last time when we loaded the thing from a llamó file then we get back the",
    "start": "979559",
    "end": "987269"
  },
  {
    "text": "resource we look at the annotation that this was the last used configuration and then we do basically a sort of a",
    "start": "987269",
    "end": "994139"
  },
  {
    "text": "pre-emerge and then we patch it with that with specific Jason patch content",
    "start": "994139",
    "end": "1000919"
  },
  {
    "text": "type on the server so essentially it's a pretty much saying what what keep CDL",
    "start": "1000919",
    "end": "1007519"
  },
  {
    "text": "does on own appliance as mentioned well keep CDL doesn't actually use Jason",
    "start": "1007519",
    "end": "1013309"
  },
  {
    "text": "patch but it does pretty pretty similar thing anyway",
    "start": "1013309",
    "end": "1017980"
  },
  {
    "text": "so the chosen patches is basically as a thief between what we had and what we",
    "start": "1018910",
    "end": "1025550"
  },
  {
    "text": "have from the local what we have on the server and what we had on there on the disk and that thief is sent with that",
    "start": "1025550",
    "end": "1034610"
  },
  {
    "text": "with the application changing pads errors that the or content type the nice",
    "start": "1034610",
    "end": "1040790"
  },
  {
    "text": "thing with Jason patch is actually that it's defining in an RFC so there's not",
    "start": "1040790",
    "end": "1047510"
  },
  {
    "text": "much room for interpretation it should work as it's specified cause well it's an RFC",
    "start": "1047510",
    "end": "1053650"
  },
  {
    "text": "well turns out that we would have liked to be able to do some interpretation in",
    "start": "1053650",
    "end": "1059000"
  },
  {
    "text": "that but that's that's another discussion maybe so essentially a",
    "start": "1059000",
    "end": "1066200"
  },
  {
    "text": "adjacent patches is a set of operations remove this key from them from the",
    "start": "1066200",
    "end": "1072110"
  },
  {
    "text": "document from the resource add this key and with this value to the document",
    "start": "1072110",
    "end": "1077510"
  },
  {
    "text": "replace this key with this value in the document so it's pretty pretty pretty",
    "start": "1077510",
    "end": "1082700"
  },
  {
    "text": "actually discreet describing what the end result should be",
    "start": "1082700",
    "end": "1089650"
  },
  {
    "text": "just to note that all this complexity on the on the client-side is probably gonna",
    "start": "1092989",
    "end": "1099379"
  },
  {
    "text": "be away go away in some timeframe so now",
    "start": "1099379",
    "end": "1104659"
  },
  {
    "text": "in wonder 14 the server-side apply is on",
    "start": "1104659",
    "end": "1109999"
  },
  {
    "text": "on alpha stage so it's under a feature gate that you have to specifically go",
    "start": "1109999",
    "end": "1115039"
  },
  {
    "text": "and enable on your API server so it basically means that all this merging",
    "start": "1115039",
    "end": "1120919"
  },
  {
    "text": "logic and all this pain is actually handled on on the on the API server side which is super super cool and a nice for",
    "start": "1120919",
    "end": "1128449"
  },
  {
    "text": "therefore the client libraries but of course as a fully generate client",
    "start": "1128449",
    "end": "1134239"
  },
  {
    "text": "library we just cannot jump in the into using that sort of a thing because well you cannot go and enable that on e KS or",
    "start": "1134239",
    "end": "1141469"
  },
  {
    "text": "GAE and of course our library should work with that well older version of",
    "start": "1141469",
    "end": "1147619"
  },
  {
    "text": "copper nice I think it still works with 1.7 kubernetes even if anybody is using",
    "start": "1147619",
    "end": "1153649"
  },
  {
    "text": "that old old version",
    "start": "1153649",
    "end": "1157149"
  },
  {
    "text": "one thing we we sort of struggled a bit with is also this empty versus null",
    "start": "1160960",
    "end": "1167210"
  },
  {
    "text": "versus undefined thing which if anybody is using javascript you probably bump",
    "start": "1167210",
    "end": "1172610"
  },
  {
    "text": "into similar things and so I have a I",
    "start": "1172610",
    "end": "1177800"
  },
  {
    "text": "have a resource a port where I don't have labels I don't have ports or",
    "start": "1177800",
    "end": "1184010"
  },
  {
    "text": "anything defined that that's fine then I",
    "start": "1184010",
    "end": "1189140"
  },
  {
    "text": "create another port where I define labels as an empty struct I define ports",
    "start": "1189140",
    "end": "1196850"
  },
  {
    "text": "as an empty array when you post those two ports into the into API server they",
    "start": "1196850",
    "end": "1203810"
  },
  {
    "text": "end up being the same which is okay I can live with that",
    "start": "1203810",
    "end": "1210400"
  },
  {
    "text": "well as it turns out it's a well they",
    "start": "1210400",
    "end": "1215540"
  },
  {
    "text": "are the same well then the until they really actually are not the same anymore",
    "start": "1215540",
    "end": "1220880"
  },
  {
    "text": "so as we are using this jason jason patch to add and remove these keys so we",
    "start": "1220880",
    "end": "1227600"
  },
  {
    "text": "can do a json patch and Adam key as an",
    "start": "1227600",
    "end": "1234080"
  },
  {
    "text": "empty value to the API well the APS is here done it's there",
    "start": "1234080",
    "end": "1240670"
  },
  {
    "text": "okay then we try to add another value with the same key and it says that no",
    "start": "1240670",
    "end": "1247580"
  },
  {
    "text": "can do it is not no such key here like okay what if but it turns out that well",
    "start": "1247580",
    "end": "1255530"
  },
  {
    "text": "the API server just basically filters out all the empty valleys so it's like a",
    "start": "1255530",
    "end": "1261380"
  },
  {
    "text": "bit of a limbo whether whether something is empty or missing or nil or it's just",
    "start": "1261380",
    "end": "1267020"
  },
  {
    "text": "not there so empty is not there in in kubernetes",
    "start": "1267020",
    "end": "1273850"
  },
  {
    "text": "which is actually pretty pretty problematic because in some cases simply might actually mean something like for",
    "start": "1275070",
    "end": "1281440"
  },
  {
    "text": "example in in network policies empty actually does kind of mean something and",
    "start": "1281440",
    "end": "1286559"
  },
  {
    "text": "then in your custom resources well we don't know what the resource is empty",
    "start": "1286559",
    "end": "1292390"
  },
  {
    "text": "actually might mean something so it's a bit bit a bit of a pain to to do that or",
    "start": "1292390",
    "end": "1301050"
  },
  {
    "text": "work with that so with with Jason Pat",
    "start": "1301050",
    "end": "1307240"
  },
  {
    "text": "you you basically you have two options you can either drop all the empty values or empty keys from there from that sort",
    "start": "1307240",
    "end": "1314890"
  },
  {
    "text": "of the last applied configuration annotation which we record on that on their objects or then you can deal with",
    "start": "1314890",
    "end": "1323290"
  },
  {
    "text": "the empty values when you're actually sort of calculating the diff between",
    "start": "1323290",
    "end": "1328630"
  },
  {
    "text": "these two different versions of the of the resource what we ended up doing in",
    "start": "1328630",
    "end": "1333760"
  },
  {
    "text": "the indicators client is we actually drop empty values from the annotation",
    "start": "1333760",
    "end": "1339730"
  },
  {
    "text": "where we record the last applied configuration and that that has been",
    "start": "1339730",
    "end": "1344770"
  },
  {
    "text": "working really nicely for us at least in in in in this version of the client but",
    "start": "1344770",
    "end": "1350320"
  },
  {
    "text": "I'm sort of pretty sure that we'll hit some problem with that too you know in",
    "start": "1350320",
    "end": "1355960"
  },
  {
    "text": "some time frame",
    "start": "1355960",
    "end": "1358890"
  },
  {
    "text": "all right just a quick sip of water to",
    "start": "1364300",
    "end": "1369370"
  },
  {
    "text": "keep my voice going I've been on a booth",
    "start": "1369370",
    "end": "1374950"
  },
  {
    "text": "duty there all whole conference so I'm a bit lost of lost in voice so sorry okay",
    "start": "1374950",
    "end": "1381790"
  },
  {
    "text": "so how does the client actually know to",
    "start": "1381790",
    "end": "1387220"
  },
  {
    "text": "which an HTTP endpoint it should post or patch the resources so on so in in the",
    "start": "1387220",
    "end": "1393520"
  },
  {
    "text": "API there's this discovery mechanism so there's a specific API endpoint where you can call and you basically get get",
    "start": "1393520",
    "end": "1400330"
  },
  {
    "text": "all the API information the API understand these sort of resources and these are the API endpoints you should",
    "start": "1400330",
    "end": "1407200"
  },
  {
    "text": "be using to access and control those resources and the same mechanism is of",
    "start": "1407200",
    "end": "1414010"
  },
  {
    "text": "course used for C IDs so when you create a new or sort of registering a new",
    "start": "1414010",
    "end": "1419500"
  },
  {
    "text": "custom resource JP I will then on the discovery API tell that okay there's this new type of resource use these",
    "start": "1419500",
    "end": "1425860"
  },
  {
    "text": "endpoints to control those those resources too so it's an essentially",
    "start": "1425860",
    "end": "1433780"
  },
  {
    "text": "gives you a map of for these coins use that endpoint in a nutshell from the",
    "start": "1433780",
    "end": "1443200"
  },
  {
    "text": "client point of view you have to think whether whether you wanted to do the",
    "start": "1443200",
    "end": "1449440"
  },
  {
    "text": "client to really have a static mapping of certain types of resources to the",
    "start": "1449440",
    "end": "1454900"
  },
  {
    "text": "certain endpoints or do you really want it to be fully dynamic I mean with",
    "start": "1454900",
    "end": "1460059"
  },
  {
    "text": "dynamic I mean that the client actually understands and and is able to reload all this API discovery information from",
    "start": "1460059",
    "end": "1467200"
  },
  {
    "text": "the from the API server and then one thing you have to think about also is",
    "start": "1467200",
    "end": "1473559"
  },
  {
    "text": "caching whether you want to cache that information somehow cube GDL for example",
    "start": "1473559",
    "end": "1479440"
  },
  {
    "text": "caches a lot of that information on disk in in your home directory dot cube dot",
    "start": "1479440",
    "end": "1485200"
  },
  {
    "text": "something and of course in caching well there's two hard problems in computer",
    "start": "1485200",
    "end": "1491830"
  },
  {
    "text": "with computers and I think one of them was cache invalidation if I remember correct",
    "start": "1491830",
    "end": "1497410"
  },
  {
    "text": "so what we decided to do is no caching",
    "start": "1497410",
    "end": "1502760"
  },
  {
    "text": "because well that just created opens up a Pandora's box always so whenever you boot up put up to",
    "start": "1502760",
    "end": "1510380"
  },
  {
    "text": "the caters client it basically does the API discovery on the fly and it's just",
    "start": "1510380",
    "end": "1516410"
  },
  {
    "text": "able to work with that work with any any custom resource on the fly it also of",
    "start": "1516410",
    "end": "1522500"
  },
  {
    "text": "course does mean that there is a sort of a performance hit on that because it has",
    "start": "1522500",
    "end": "1527630"
  },
  {
    "text": "to do their discovery API calls but in our cases say it hasn't been too bad at",
    "start": "1527630",
    "end": "1534020"
  },
  {
    "text": "least so we've been we've been able to pull it off still pretty pretty nicely",
    "start": "1534020",
    "end": "1540520"
  },
  {
    "text": "well how's it going to be working with",
    "start": "1542350",
    "end": "1547370"
  },
  {
    "text": "that with the Go Go client and see our DS yeah a few few hands I guess you've",
    "start": "1547370",
    "end": "1554870"
  },
  {
    "text": "felt the pain in in doing that at least whenever I have to work with with the",
    "start": "1554870",
    "end": "1560360"
  },
  {
    "text": "goal client and see our DS I sort of wind up shaving yaks for the next couple of days and it's sort of painful so",
    "start": "1560360",
    "end": "1570490"
  },
  {
    "text": "we've been we started to think whether whether we should sort of generate the",
    "start": "1570490",
    "end": "1576830"
  },
  {
    "text": "sort of stops on on the client side for the known types of resources so that on",
    "start": "1576830",
    "end": "1582559"
  },
  {
    "text": "the client side I would actually say and I really want to create a port now and the client would understand that it's",
    "start": "1582559",
    "end": "1588470"
  },
  {
    "text": "really a port we did a a sort of a",
    "start": "1588470",
    "end": "1594100"
  },
  {
    "text": "experimentation on that then and actually we we ditched all that and and",
    "start": "1594100",
    "end": "1599720"
  },
  {
    "text": "we the client doesn't understand anything about the resource kinds it just understand that it's a resource so",
    "start": "1599720",
    "end": "1607790"
  },
  {
    "text": "in in in our case and especially now we'd see a lot of C or D is coming into the picture it's super easy for us and",
    "start": "1607790",
    "end": "1614630"
  },
  {
    "text": "with the client because well we don't have to do anything to work with CR this it's just another resource",
    "start": "1614630",
    "end": "1623200"
  },
  {
    "text": "and it's a it's it one of the sort of main building blocks behind that is is a",
    "start": "1624710",
    "end": "1631980"
  },
  {
    "text": "ruby gem called recursive open struct where you can basically have a ruby hash",
    "start": "1631980",
    "end": "1639150"
  },
  {
    "text": "and it sort of a objectifies that so that I can actually call just plain",
    "start": "1639150",
    "end": "1645270"
  },
  {
    "text": "object methods on any given resource whether it's a known pod or some new CRD",
    "start": "1645270",
    "end": "1652230"
  },
  {
    "text": "just works the same way so just as an example by to create a CRD resource you",
    "start": "1652230",
    "end": "1663630"
  },
  {
    "text": "just create a resource put all that basically what you see on a on any given",
    "start": "1663630",
    "end": "1670170"
  },
  {
    "text": "llamó file you define that what's Davey Iverson watch the client and and all the other needed details as a ruby hash and",
    "start": "1670170",
    "end": "1678180"
  },
  {
    "text": "voila you have a resource you can just now go and create it on the on the API",
    "start": "1678180",
    "end": "1683540"
  },
  {
    "text": "you don't have to go and generate the stops or or anything for the custom",
    "start": "1683540",
    "end": "1689100"
  },
  {
    "text": "resources you don't have to figure out how do I actually now register discussed",
    "start": "1689100",
    "end": "1694650"
  },
  {
    "text": "some resources and api's into the client library or anything like that so no no",
    "start": "1694650",
    "end": "1700110"
  },
  {
    "text": "no yuck shaving anymore and then when you if you if you want to just go and",
    "start": "1700110",
    "end": "1706260"
  },
  {
    "text": "get some custom resource you load up the client with them one single order config",
    "start": "1706260",
    "end": "1711390"
  },
  {
    "text": "method call define what's the what's the API of that or the API version of the",
    "start": "1711390",
    "end": "1720300"
  },
  {
    "text": "resource here you're getting the type of that kind of the resource and the name of the resource and voila you have it",
    "start": "1720300",
    "end": "1726840"
  },
  {
    "text": "again no no CRD registrations stop generation or anything needed",
    "start": "1726840",
    "end": "1734120"
  },
  {
    "text": "so especially for us this sort of",
    "start": "1737080",
    "end": "1742129"
  },
  {
    "text": "generic resource has been has been working really well and hopefully hopefully someday somebody comes with",
    "start": "1742129",
    "end": "1748519"
  },
  {
    "text": "something similar for that for the official go library to I'm I'm not that",
    "start": "1748519",
    "end": "1753909"
  },
  {
    "text": "super guru and go whether that's actually doable or not but maybe somewhere somebody after the session can",
    "start": "1753909",
    "end": "1760039"
  },
  {
    "text": "enlighten me whether whether it's possible or in it so those were the sort",
    "start": "1760039",
    "end": "1768799"
  },
  {
    "text": "of main pitfalls that we fell into hopefully that gives you some idea of",
    "start": "1768799",
    "end": "1774730"
  },
  {
    "text": "which traps to try to at least avoid and and and hopefully now there's none of",
    "start": "1774730",
    "end": "1783169"
  },
  {
    "text": "you felt asleep so there's few minutes for questions if",
    "start": "1783169",
    "end": "1790250"
  },
  {
    "text": "you if you want to some questions and and if if not I'll be hanging around a",
    "start": "1790250",
    "end": "1795710"
  },
  {
    "text": "bit bit after the session you can have a discussion with you if you want",
    "start": "1795710",
    "end": "1801669"
  },
  {
    "text": "Thanks yeah I don't know if it's there",
    "start": "1806310",
    "end": "1813430"
  },
  {
    "text": "any microphone that we can use for the for the questions",
    "start": "1813430",
    "end": "1818760"
  },
  {
    "text": "thank you thank you I'm all ready to understand that the the client that you",
    "start": "1826950",
    "end": "1833700"
  },
  {
    "text": "created is not compatible with the control clan because what I mean by that",
    "start": "1833700",
    "end": "1839430"
  },
  {
    "text": "is in order to be able to do your patch much as you want to put some extra",
    "start": "1839430",
    "end": "1845430"
  },
  {
    "text": "labels on you the things that you are deploying so if I had deploy something",
    "start": "1845430",
    "end": "1853050"
  },
  {
    "text": "with cube city and I'll try to do a patch with your new client that will not work well it actually works because cube",
    "start": "1853050",
    "end": "1861210"
  },
  {
    "text": "city oh that's the same thing but that's not documented yeah well that what does patch I did there's a special flag on",
    "start": "1861210",
    "end": "1869640"
  },
  {
    "text": "coop serial they - does save save configuration or something which",
    "start": "1869640",
    "end": "1874740"
  },
  {
    "text": "actually does it so yeah for in in in our main use cases we we always use the",
    "start": "1874740",
    "end": "1881010"
  },
  {
    "text": "same client so for us it it works pretty pretty nicely but it should work with",
    "start": "1881010",
    "end": "1886650"
  },
  {
    "text": "cube CDL - you just have to remember to use this that's just save thingy can't",
    "start": "1886650",
    "end": "1893070"
  },
  {
    "text": "remember what's the flags full name test too many flags on cube city also",
    "start": "1893070",
    "end": "1900230"
  },
  {
    "text": "there's another one a lot of thanks for the great talk",
    "start": "1905430",
    "end": "1913850"
  },
  {
    "text": "if performance was not a problem for you as you seem to imply by the fact that",
    "start": "1913850",
    "end": "1919289"
  },
  {
    "text": "you're rediscovering everything every time did you think about just like using",
    "start": "1919289",
    "end": "1925919"
  },
  {
    "text": "cube CTO behind the scenes and why didn't you do that oh yeah so so that",
    "start": "1925919",
    "end": "1933480"
  },
  {
    "text": "the simple reason why we didn't use cube serial-in behind is that they are the",
    "start": "1933480",
    "end": "1938519"
  },
  {
    "text": "tooling that for the for the distribution the main thing that we're working on is ruby tooling so we didn't",
    "start": "1938519",
    "end": "1944940"
  },
  {
    "text": "wanna sort of from Ruby to fork out to cube CDL and fork back and and all sort of things so it's it's still sort of",
    "start": "1944940",
    "end": "1951899"
  },
  {
    "text": "entry and then works within the same process so that's the main reason what",
    "start": "1951899",
    "end": "1958320"
  },
  {
    "text": "we didn't do it we actually did think about it but we didn't want to do it because then the users would have to not",
    "start": "1958320",
    "end": "1965909"
  },
  {
    "text": "not download just our tooling but then they had to have also cube CDL and everything in place so it's a simpler",
    "start": "1965909",
    "end": "1973200"
  },
  {
    "text": "for them for the our use cases to do through this way perhaps is a bit of a",
    "start": "1973200",
    "end": "1982769"
  },
  {
    "text": "weird question but did you do anything with the port forwarding API in Cuba net used for local post and that kind of",
    "start": "1982769",
    "end": "1989220"
  },
  {
    "text": "thing no we we haven't tried it but I I'm probably pretty sure that it doesn't work",
    "start": "1989220",
    "end": "1994710"
  },
  {
    "text": "so he's a bit of a strange protocol I think we tried doing it this quick oh yeah yeah but if you have a good idea",
    "start": "1994710",
    "end": "2001760"
  },
  {
    "text": "how it could work then please do a PR yep how about watch informers yep",
    "start": "2001760",
    "end": "2011000"
  },
  {
    "text": "it supports watch yep and how widely is this use is only used",
    "start": "2011000",
    "end": "2018590"
  },
  {
    "text": "by your projects or this you know I think our projects are are the main",
    "start": "2018590",
    "end": "2024350"
  },
  {
    "text": "users and but but I I do know few other other users also and and we received",
    "start": "2024350",
    "end": "2031040"
  },
  {
    "text": "couple of sort of external PRS also so it's a it's great in that sense and but",
    "start": "2031040",
    "end": "2038000"
  },
  {
    "text": "of course we'd be more than happy to see more using using of our tooling and more",
    "start": "2038000",
    "end": "2044300"
  },
  {
    "text": "PRS and issues and everything so so like I maintain this PI Q Python client which",
    "start": "2044300",
    "end": "2051500"
  },
  {
    "text": "is originated by someone else but now I like maintain it with this ng because it was unmaintained and the official client",
    "start": "2051500",
    "end": "2057950"
  },
  {
    "text": "it's for me it sucks because it's not my sonic and it's 21 megabytes in the docker file with all dependencies so if",
    "start": "2057950",
    "end": "2065090"
  },
  {
    "text": "anybody looking for a PI's inclined and want to help me so I use it everywhere but there is this kind of always the",
    "start": "2065090",
    "end": "2070490"
  },
  {
    "text": "question how much like high-level functionality you want to add and for example was previously some high level",
    "start": "2070490",
    "end": "2076520"
  },
  {
    "text": "functionality for scaling and so on so I want to remove it or partially already removed it because it's harder to",
    "start": "2076520",
    "end": "2082879"
  },
  {
    "text": "maintain do you get any high level stuff and we really try to avoid it and there",
    "start": "2082880",
    "end": "2090110"
  },
  {
    "text": "has been actually a couple of issues where where people are asking that that features like okay I have this",
    "start": "2090110",
    "end": "2095990"
  },
  {
    "text": "deployment maybe I would have a flag where where there's some force flag to force the deployment actually happen",
    "start": "2095990",
    "end": "2102530"
  },
  {
    "text": "every single time whether I change anything or not but no we don't really",
    "start": "2102530",
    "end": "2107750"
  },
  {
    "text": "want to understand that it's a deployment so we essentially try to actually avoid those sort of cases",
    "start": "2107750",
    "end": "2115150"
  },
  {
    "text": "because as I said it just creates maintenance headache and and and",
    "start": "2115150",
    "end": "2120590"
  },
  {
    "text": "everything so we try to keep it as bare-bones and and generate gas as",
    "start": "2120590",
    "end": "2125870"
  },
  {
    "text": "possible",
    "start": "2125870",
    "end": "2128410"
  },
  {
    "text": "going back to the annotation approach and this may be a little bit beyond the",
    "start": "2132630",
    "end": "2137880"
  },
  {
    "text": "scope this room actually the APA machinery group may be able to talk about this more have we considered",
    "start": "2137880",
    "end": "2144140"
  },
  {
    "text": "adding just some sub resources to track history get a previous version not",
    "start": "2144140",
    "end": "2154980"
  },
  {
    "text": "really because we sort of points to that keep CDL does it - and try to be",
    "start": "2154980",
    "end": "2161220"
  },
  {
    "text": "compliant with that and and and also the fact that we had a discussion with can't",
    "start": "2161220",
    "end": "2166890"
  },
  {
    "text": "remember who it was but about the servers write a polite thing coming anyway up so you know some time frame",
    "start": "2166890",
    "end": "2174450"
  },
  {
    "text": "will be able to ditch all the clients that logic hopefully anyway so we didn't",
    "start": "2174450",
    "end": "2180990"
  },
  {
    "text": "want to go that route because that that's then when other set of resources and everything and it sort of complex",
    "start": "2180990",
    "end": "2186750"
  },
  {
    "text": "applies a bit all right",
    "start": "2186750",
    "end": "2192420"
  },
  {
    "text": "thanks for joining have a safe trip home [Applause]",
    "start": "2192420",
    "end": "2198780"
  }
]