[
  {
    "start": "0",
    "end": "112000"
  },
  {
    "text": "all right we're going to go ahead and get started I'd like to thank everyone who is joining us today I welcome",
    "start": "2120",
    "end": "8309"
  },
  {
    "text": "today's webinar kuma build secure and observe your modern service mesh I'm Taylor Wagoner from the CNCs and I'll be",
    "start": "8309",
    "end": "15269"
  },
  {
    "text": "moderating today's webinar we'd like to welcome our presenters today Marko Palladino CTO and co-founder at Kong and",
    "start": "15269",
    "end": "21869"
  },
  {
    "text": "Kevin Chen developer advocate comm before we get started and there's a few",
    "start": "21869",
    "end": "27269"
  },
  {
    "text": "housekeeping items to go over during the webinar you're not able to talk as an attendee there is a Q&A box located at",
    "start": "27269",
    "end": "35100"
  },
  {
    "text": "the bottom of your zoom screen please feel free to drop your questions in there rather than the chat window and",
    "start": "35100",
    "end": "40140"
  },
  {
    "text": "we'll get to as many as we can at the end or throughout the call also this is",
    "start": "40140",
    "end": "45269"
  },
  {
    "text": "an official webinar of the CNCs and as such it's subject to the CNC F code of conduct please do not add anything to",
    "start": "45269",
    "end": "51809"
  },
  {
    "text": "the chat or the Q&A that would be in violation of that code of conduct basically we ask that you're respectful",
    "start": "51809",
    "end": "57690"
  },
  {
    "text": "of all of your fellow participants and presenters with that I'll hand it over to Marko and Kevin to kick off today's",
    "start": "57690",
    "end": "63329"
  },
  {
    "text": "presentation hey thank you so much and thanks for having the opportunity of being here it's amazing to be able to",
    "start": "63329",
    "end": "70530"
  },
  {
    "text": "target the CN CF audience and tell them what we've been working on at Cog so I'm",
    "start": "70530",
    "end": "76620"
  },
  {
    "text": "here with the with Kevin Tran developer advocate at Kong I will start by giving",
    "start": "76620",
    "end": "83390"
  },
  {
    "text": "you know the following agenda by introducing service management kuma that were going to be seeing a live demo of",
    "start": "83390",
    "end": "90000"
  },
  {
    "text": "kuma so we're going to be firing up the terminal and see kuma in action and then",
    "start": "90000",
    "end": "95130"
  },
  {
    "text": "of course there's going to be some time for question and answers at the end but you can ask questions in the meanwhile",
    "start": "95130",
    "end": "100820"
  },
  {
    "text": "via the Q&A function of zoom if you wish and then at the end we're going to be",
    "start": "100820",
    "end": "107370"
  },
  {
    "text": "accepting new questions and answering the existing questions so there is",
    "start": "107370",
    "end": "114480"
  },
  {
    "start": "112000",
    "end": "160000"
  },
  {
    "text": "something happening in the world and we're seeing it every day around us every product in the world is becoming a",
    "start": "114480",
    "end": "122070"
  },
  {
    "text": "digital product and once they become digital they become cognitive we focus a",
    "start": "122070",
    "end": "128700"
  },
  {
    "text": "lot on technology and platforms but really what's driving all of this",
    "start": "128700",
    "end": "134640"
  },
  {
    "text": "what we are really trying to do is growing our business and growing the",
    "start": "134640",
    "end": "139980"
  },
  {
    "text": "business is the main driver to every transformation that means we want to",
    "start": "139980",
    "end": "146460"
  },
  {
    "text": "focus on our products we want to make existing customers happy and then get new customers and to do that read up the",
    "start": "146460",
    "end": "154020"
  },
  {
    "text": "cloud we adopt modern technologies we stand on the shoulders of giants the",
    "start": "154020",
    "end": "161600"
  },
  {
    "start": "160000",
    "end": "295000"
  },
  {
    "text": "application teams that are focusing on building the best products rely on us the architects to provide the best",
    "start": "161600",
    "end": "168720"
  },
  {
    "text": "infrastructure for their applications to use and I like to say that running a modern infrastructure is like running a",
    "start": "168720",
    "end": "175709"
  },
  {
    "text": "city the architects build the underlying infrastructure the roads the bridges",
    "start": "175709",
    "end": "181440"
  },
  {
    "text": "that the teams can now use and then when",
    "start": "181440",
    "end": "186840"
  },
  {
    "text": "everything is in place the teams can finally focus on building their products they can focus on the things that matter",
    "start": "186840",
    "end": "194010"
  },
  {
    "text": "the users and the customers effectively the architecture that we're building for",
    "start": "194010",
    "end": "199950"
  },
  {
    "text": "them is a partner to their success but",
    "start": "199950",
    "end": "205110"
  },
  {
    "text": "like running a city we need to connect the different places together we need to",
    "start": "205110",
    "end": "210959"
  },
  {
    "text": "enable the flow of information from one building to another we need to enable",
    "start": "210959",
    "end": "217320"
  },
  {
    "text": "that traffic we need electricity we need security we need police departments we",
    "start": "217320",
    "end": "223380"
  },
  {
    "text": "need routing we need street lights street signs and the more buildings we",
    "start": "223380",
    "end": "229080"
  },
  {
    "text": "built the more people we have in motion and the more infrastructure we need to",
    "start": "229080",
    "end": "234720"
  },
  {
    "text": "make we need to have to make sure that effectively everything runs in an organized way and really there is no",
    "start": "234720",
    "end": "242730"
  },
  {
    "text": "other way around it if we don't build these for our teams then the teams will",
    "start": "242730",
    "end": "248670"
  },
  {
    "text": "be attempting to build this themselves they're going to be creating fragmentation they're going to be",
    "start": "248670",
    "end": "255200"
  },
  {
    "text": "creating bits of architecture within their applications which in turn will",
    "start": "255200",
    "end": "260280"
  },
  {
    "text": "make them less productive over the long term sometimes some teams they are not",
    "start": "260280",
    "end": "266820"
  },
  {
    "text": "even whirring up they're not doing anything at all and that will hurt the business a real",
    "start": "266820",
    "end": "272720"
  },
  {
    "text": "functioning city has to be built by somebody in order to grow the business in an effective way but this can also be",
    "start": "272720",
    "end": "280110"
  },
  {
    "text": "very challenging sometimes different teams are running on different platforms they require different services in",
    "start": "280110",
    "end": "287880"
  },
  {
    "text": "adopting modern patterns sometimes can be very hard in a way it's all about",
    "start": "287880",
    "end": "298350"
  },
  {
    "start": "295000",
    "end": "411000"
  },
  {
    "text": "connectivity as we're decoupling and distributing our applications we are",
    "start": "298350",
    "end": "305040"
  },
  {
    "text": "replacing the reliability of the CPU with the unreliability of the network",
    "start": "305040",
    "end": "313610"
  },
  {
    "text": "this is a key point the reliability of the CPU the function calls within our",
    "start": "313610",
    "end": "321090"
  },
  {
    "text": "applications it's being replaced with the unreliability of the network but",
    "start": "321090",
    "end": "331620"
  },
  {
    "text": "likewise with our data centers we don't want to build our own data centers we want to leverage the cloud likewise we",
    "start": "331620",
    "end": "337710"
  },
  {
    "text": "don't want to be building our own network management we want to be leveraging something that can do that",
    "start": "337710",
    "end": "344460"
  },
  {
    "text": "for us and that's why there are patterns that can help us with that introducing service mesh service mesh fundamentally",
    "start": "344460",
    "end": "352310"
  },
  {
    "text": "improves connectivity among different services within our architecture and the",
    "start": "352310",
    "end": "359610"
  },
  {
    "text": "world service mesh implies having a mesh of services which is certainly the case",
    "start": "359610",
    "end": "365510"
  },
  {
    "text": "more often than not but really the benefits of service mesh the benefits of having an improved connectivity and",
    "start": "365510",
    "end": "372060"
  },
  {
    "text": "improved observability and improved security among all of these different services it's something that we can",
    "start": "372060",
    "end": "379080"
  },
  {
    "text": "benefit regarless of how many services we're running in our systems it can be a thousand or can",
    "start": "379080",
    "end": "385169"
  },
  {
    "text": "be a model it talking to a database even in that scenario we still want connectivity to be working and we don't",
    "start": "385169",
    "end": "391800"
  },
  {
    "text": "want the teams to be doing that for us service mesh until now as being very",
    "start": "391800",
    "end": "398910"
  },
  {
    "text": "hard to implement you know we work with of practitioners lots of operators and they're all very confused when it comes",
    "start": "398910",
    "end": "405400"
  },
  {
    "text": "to implementing service mesh and into looking at the solutions that are out there that's why we have introduced kuma",
    "start": "405400",
    "end": "415060"
  },
  {
    "start": "411000",
    "end": "455000"
  },
  {
    "text": "on September 10 which is a month and a half ago really in order to be able to",
    "start": "415060",
    "end": "421360"
  },
  {
    "text": "help these two operators into creating a universal service mesh that can work",
    "start": "421360",
    "end": "427180"
  },
  {
    "text": "across not just modern kubernetes environments but also help traditional",
    "start": "427180",
    "end": "432900"
  },
  {
    "text": "applications running on virtual machines to be transitioned to those modern environments so it's for both and we did",
    "start": "432900",
    "end": "439360"
  },
  {
    "text": "a significant effort to make sure that we could build an abstraction layer that can work simultaneously on traditional",
    "start": "439360",
    "end": "446849"
  },
  {
    "text": "infrastructure virtual machine bare metal as well as very easily run on",
    "start": "446849",
    "end": "452919"
  },
  {
    "text": "kubernetes and modern architectures kuma effective it's a control plane for",
    "start": "452919",
    "end": "458080"
  },
  {
    "start": "455000",
    "end": "797000"
  },
  {
    "text": "service mesh it relies on it's built on top of envoy and it relies on envoy for",
    "start": "458080",
    "end": "463479"
  },
  {
    "text": "the cycler proxy functionality for those of you who are not familiar with service",
    "start": "463479",
    "end": "469090"
  },
  {
    "text": "mesh the concept it's very simple it doesn't have to be hard every time we make a request from a service to another",
    "start": "469090",
    "end": "475719"
  },
  {
    "text": "service that request because of the network can fail that request is by",
    "start": "475719",
    "end": "482710"
  },
  {
    "text": "default unsecure unless we protected that request needs to be monitored needs to be logged needs to be traced so that",
    "start": "482710",
    "end": "490120"
  },
  {
    "text": "if it fails we know what happened and we can improve it now traditionally the way",
    "start": "490120",
    "end": "496569"
  },
  {
    "text": "developers have dealt with these issues are twofold either they build more code",
    "start": "496569",
    "end": "502840"
  },
  {
    "text": "they write more code in their applications so that they can create smart clients if you wish that can make",
    "start": "502840",
    "end": "509199"
  },
  {
    "text": "those requests to the outer world but that means more code that means being able to maintain and update the code",
    "start": "509199",
    "end": "515560"
  },
  {
    "text": "that means technical depth that means replicating those smart clients in two different languages if we do adopt more",
    "start": "515560",
    "end": "522490"
  },
  {
    "text": "than one framework or language within our system or even worse than that",
    "start": "522490",
    "end": "527920"
  },
  {
    "text": "developers were not bothering to create anything like that so the connection",
    "start": "527920",
    "end": "533680"
  },
  {
    "text": "fails the application fails and we lose business either we built something",
    "start": "533680",
    "end": "541060"
  },
  {
    "text": "ourselves or we don't and we hurt the business and so because we don't want to",
    "start": "541060",
    "end": "548200"
  },
  {
    "text": "write code right the more code we write the more technical depth we create we want to be able to outsource that",
    "start": "548200",
    "end": "554470"
  },
  {
    "text": "functionality to something else and this is where service mesh comes into play with service mesh we can deploy and out",
    "start": "554470",
    "end": "560560"
  },
  {
    "text": "of process proxy that can run alongside our services and the proxy will",
    "start": "560560",
    "end": "567370"
  },
  {
    "text": "intercept every outgoing request that the service makes and from then on it",
    "start": "567370",
    "end": "573460"
  },
  {
    "text": "will take care of that request that means that from a developer standpoint if I'm building an app I can make a",
    "start": "573460",
    "end": "579730"
  },
  {
    "text": "request and make an assumption the assumption is that that request will work everything else it's taken care of",
    "start": "579730",
    "end": "587200"
  },
  {
    "text": "by this cycler proxy so as a team developer I can focus on building the actual product I don't have to worry",
    "start": "587200",
    "end": "593440"
  },
  {
    "text": "about making sure that all of those requests are going to be working and the more decoupled the more distributed we",
    "start": "593440",
    "end": "598480"
  },
  {
    "text": "become the more requests we're going to be making on the other end when we receive a request we'll have another",
    "start": "598480",
    "end": "605290"
  },
  {
    "text": "proxy that receives that request and terminates for example mutual TLS or logs the the",
    "start": "605290",
    "end": "613660"
  },
  {
    "text": "request to a third party business intelligence tool or enforces traffic permissions on the receiving end",
    "start": "613660",
    "end": "621370"
  },
  {
    "text": "we receive the request in the application and as a developer building the app all I need to know is that at",
    "start": "621370",
    "end": "627550"
  },
  {
    "text": "one point I will receive a request and that request will be taken care of so",
    "start": "627550",
    "end": "632980"
  },
  {
    "text": "that when we talk about connectivity either making outbound requests or receiving email requests as an",
    "start": "632980",
    "end": "638740"
  },
  {
    "text": "application developer I don't have to worry about that this is what service mesh tries to fix and really this is the benefit that we can get on any platform",
    "start": "638740",
    "end": "645100"
  },
  {
    "text": "now Tanner's kubernetes as well as virtual machines and this is a benefit that we can get no matter how many",
    "start": "645100",
    "end": "651610"
  },
  {
    "text": "services were running in our system this is all l4 which means that any traffic",
    "start": "651610",
    "end": "656740"
  },
  {
    "text": "to any database any caching system to any other service using any protocol can",
    "start": "656740",
    "end": "663160"
  },
  {
    "text": "get benefits out of this pattern but the more sidecar practices we have and",
    "start": "663160",
    "end": "668560"
  },
  {
    "text": "the harder it is to configure them all we don't want to manually we deploy your",
    "start": "668560",
    "end": "673600"
  },
  {
    "text": "restart to reconfigure the cycle proxies we want to be able to do that from a centralized location and then push that",
    "start": "673600",
    "end": "680410"
  },
  {
    "text": "configuration to the cycler proxies or allow the cycler proxies to retrieve it and that is really the role of the",
    "start": "680410",
    "end": "687310"
  },
  {
    "text": "control plane the control plane is the source of truth for all the configuration that the cycler proxy will",
    "start": "687310",
    "end": "693850"
  },
  {
    "text": "have to dynamically fetch or receive or ask in order to be able to enforce all",
    "start": "693850",
    "end": "701140"
  },
  {
    "text": "the features we want to enforce think of the control plane really has that source of truth for all the configurations so",
    "start": "701140",
    "end": "706960"
  },
  {
    "text": "we use the control plane to push this configuration and then eventually in a",
    "start": "706960",
    "end": "713470"
  },
  {
    "text": "consistent in eventually consistent way that configurations will be applied to",
    "start": "713470",
    "end": "718510"
  },
  {
    "text": "the cycle proxies it's a very similar concept to you know control planes and data planes they come from the",
    "start": "718510",
    "end": "724000"
  },
  {
    "text": "networking space you know back in the days in our physical data centers we used to have many racks each Rack had",
    "start": "724000",
    "end": "730030"
  },
  {
    "text": "hundreds of switches and then the switches in order to be configured relied on a control plane to make that",
    "start": "730030",
    "end": "736300"
  },
  {
    "text": "configuration applicable to that same thing but applied it to software so what",
    "start": "736300",
    "end": "741550"
  },
  {
    "text": "Kumar really is it's a universal control plane lots of organizations are building their own control planes because",
    "start": "741550",
    "end": "747040"
  },
  {
    "text": "existing control planes have have a few problems either they're focusing on one",
    "start": "747040",
    "end": "753370"
  },
  {
    "text": "platform only but in an enterprise organization we know that we don't run only on one platform or they are a",
    "start": "753370",
    "end": "760510"
  },
  {
    "text": "little bit too hard to use and they have a very high operational costs lots of moving parts so we built Kumar with",
    "start": "760510",
    "end": "767320"
  },
  {
    "text": "simplicity in mind we built kuma to be able to run everywhere and we built kuma to be able to be simple to use and we",
    "start": "767320",
    "end": "772900"
  },
  {
    "text": "can see that in the demo later today so the control plane Kumaon will talk to",
    "start": "772900",
    "end": "778960"
  },
  {
    "text": "the sidecar invoice and all of these happens in our integrated experience you",
    "start": "778960",
    "end": "784180"
  },
  {
    "text": "are not left wondering okay so I need to get amboy separately and then I need to start kuma separatory all of these is",
    "start": "784180",
    "end": "790990"
  },
  {
    "text": "being provided with a nice experience",
    "start": "790990",
    "end": "795330"
  },
  {
    "start": "797000",
    "end": "837000"
  },
  {
    "text": "Kumba can run on top of any platform it runs in containers it can run on",
    "start": "797680",
    "end": "802760"
  },
  {
    "text": "kubernetes as well as running on Universal that's why we call it Universal it can run on top of any other",
    "start": "802760",
    "end": "808820"
  },
  {
    "text": "platform like real pro machines or bare metal so you can deploy these on RedHat you can deploy your on AWS ec2 instance",
    "start": "808820",
    "end": "814550"
  },
  {
    "text": "for example and have the same benefits of service match across the entire organization different teams are going",
    "start": "814550",
    "end": "820430"
  },
  {
    "text": "at different speeds different teams are going to be using different platforms but the service mesh we want to provide",
    "start": "820430",
    "end": "826940"
  },
  {
    "text": "that functionality to all of them because again like we said before if we don't do that either the teams are going",
    "start": "826940",
    "end": "833450"
  },
  {
    "text": "to be doing that or worse nobody's gonna do it kuba comes from the learnings that",
    "start": "833450",
    "end": "840830"
  },
  {
    "start": "837000",
    "end": "966000"
  },
  {
    "text": "we had Kong had with hundreds of enterprise organizations and enterprise customers if you're not familiar with",
    "start": "840830",
    "end": "847700"
  },
  {
    "text": "what Kong King does we are the makers of among other things of Kong gateway which",
    "start": "847700",
    "end": "854029"
  },
  {
    "text": "is a one of the most popular open source API gateways today and we built cumin as",
    "start": "854029",
    "end": "860720"
  },
  {
    "text": "a comp as another open source project that is going to be joining the family",
    "start": "860720",
    "end": "865790"
  },
  {
    "text": "of our open source projects like Kong like insomnia in order to be able to tackle the connectivity problem and when",
    "start": "865790",
    "end": "873410"
  },
  {
    "text": "we spoke with our customers and with our users really the most important feedback we have received was existing service",
    "start": "873410",
    "end": "880460"
  },
  {
    "text": "meshes are too hard to operate we don't want to start a new cluster for each team but we want to be able to start one",
    "start": "880460",
    "end": "888530"
  },
  {
    "text": "control claim and from that one control plane we want them to provision different meshes for each team this mix",
    "start": "888530",
    "end": "896210"
  },
  {
    "text": "makes it easy to do a couple of things number one it makes it easier to run",
    "start": "896210",
    "end": "901580"
  },
  {
    "text": "kuma in a enterprise environment so you only have one thing running as opposed",
    "start": "901580",
    "end": "907220"
  },
  {
    "text": "to having multiple clusters it makes it easier to operate kuma in a scale if you",
    "start": "907220",
    "end": "912770"
  },
  {
    "text": "wish and the second thing it makes it easier for the architect for us it makes",
    "start": "912770",
    "end": "920300"
  },
  {
    "text": "it easier to understand what teams are using service mesh so that we can consolidate those teams later on because",
    "start": "920300",
    "end": "926870"
  },
  {
    "text": "everything is in one place this was a very important features that we decided to build since day one in order to build a",
    "start": "926870",
    "end": "933949"
  },
  {
    "text": "pragmatic service smash a service match that you can use today to deliver business value today on any platform not",
    "start": "933949",
    "end": "941449"
  },
  {
    "text": "making that adoption contingent to a transformation to containers a transformation to kubernetes which may",
    "start": "941449",
    "end": "946999"
  },
  {
    "text": "take multiple years to be to be achieved",
    "start": "946999",
    "end": "952160"
  },
  {
    "text": "in an enterprise environment so Combe it smooth tight and since day one it's very simple to use we're going to be seeing",
    "start": "952160",
    "end": "957319"
  },
  {
    "text": "this with Kevin later today but you can install Chrome add-on kubernetes route one command it's very easy to start on",
    "start": "957319",
    "end": "963379"
  },
  {
    "text": "any other platform as well cubot provides among other things provides identity to your workloads",
    "start": "963379",
    "end": "970519"
  },
  {
    "start": "966000",
    "end": "1054000"
  },
  {
    "text": "out-of-the-box it allows us to implement traffic permissions so that we can",
    "start": "970519",
    "end": "975679"
  },
  {
    "text": "determine what services can consume other services you know we can implement security when it comes to that as well",
    "start": "975679",
    "end": "981739"
  },
  {
    "text": "as it implements traffic logging so that we can extract observability and metrics",
    "start": "981739",
    "end": "986959"
  },
  {
    "text": "out of our infrastructure out of the box we can then decide to push this matrix",
    "start": "986959",
    "end": "993649"
  },
  {
    "text": "into any existing business intelligence tool we might be using think of spelunk",
    "start": "993649",
    "end": "999649"
  },
  {
    "text": "think of log stash and so on so we can push this to any third party tcp server",
    "start": "999649",
    "end": "1004660"
  },
  {
    "text": "as well as it provides integration with conjugate waken gateway operates in a",
    "start": "1004660",
    "end": "1010629"
  },
  {
    "text": "north-south ingress capacity and by using the open source conjugate way with open source command we're now able to",
    "start": "1010629",
    "end": "1017859"
  },
  {
    "text": "take care of the full lifecycle of the requests were able to protect in secure connectivity within the data center and",
    "start": "1017859",
    "end": "1023649"
  },
  {
    "text": "then we're able to expose those services to other teams or other data centers in",
    "start": "1023649",
    "end": "1030490"
  },
  {
    "text": "the organization and that goes through the conch ingress and you know it really much more you know kuma is a is a modern",
    "start": "1030490",
    "end": "1038740"
  },
  {
    "text": "project that is really breathing and",
    "start": "1038740",
    "end": "1044649"
  },
  {
    "text": "living thanks to the community and community contributions so I encourage everybody to go check the github repository and give it a try",
    "start": "1044649",
    "end": "1054090"
  },
  {
    "start": "1054000",
    "end": "1097000"
  },
  {
    "text": "long story short all the work the teams have been doing to fix that connectivity to secure that connectivity to make sure",
    "start": "1055900",
    "end": "1063290"
  },
  {
    "text": "that they're those requests never fail can now be removed from the applications and can be delegated to kuma and envoy",
    "start": "1063290",
    "end": "1070670"
  },
  {
    "text": "so it really makes makes it easier to think about improving connectivity and",
    "start": "1070670",
    "end": "1076640"
  },
  {
    "text": "connectivity by the way is a problem that will increase over time the more teams we are bored the more products we",
    "start": "1076640",
    "end": "1082940"
  },
  {
    "text": "create the more platforms we decide to support right so we there really is no cognitive modern architecture without a",
    "start": "1082940",
    "end": "1091610"
  },
  {
    "text": "modern way of dealing with connectivity right and this is really what chrome is about kuma like I mentioned can run on",
    "start": "1091610",
    "end": "1100880"
  },
  {
    "start": "1097000",
    "end": "1285000"
  },
  {
    "text": "two different platforms in two different modes if you wish it can run natively on",
    "start": "1100880",
    "end": "1106640"
  },
  {
    "text": "kubernetes so when Combe is being deployed on kubernetes it automatically injects the sidecar into your",
    "start": "1106640",
    "end": "1113660"
  },
  {
    "text": "applications without having to change them into your pods without having to change them it automatically detects all",
    "start": "1113660",
    "end": "1119990"
  },
  {
    "text": "the data planes and really is a 1:1 command to install install cumin in run",
    "start": "1119990",
    "end": "1125180"
  },
  {
    "text": "kuma because cumin because we took that feedback from our users and customers to",
    "start": "1125180",
    "end": "1131480"
  },
  {
    "text": "make cumin easier to operate we also make sure that cumin is only one",
    "start": "1131480",
    "end": "1137120"
  },
  {
    "text": "component its built-in golang and it's one thing you can scale it horizontally by adding more replicas and",
    "start": "1137120",
    "end": "1143540"
  },
  {
    "text": "that's pretty much it there is no other separate components that you have to worry about so it's really simple to",
    "start": "1143540",
    "end": "1150290"
  },
  {
    "text": "install really simple to wrap your head around it as well as very simple to operate and when running on Universal",
    "start": "1150290",
    "end": "1158180"
  },
  {
    "text": "mode of course on kubernetes kuma is leveraging the underlying kubernetes api server right to provide all the",
    "start": "1158180",
    "end": "1165980"
  },
  {
    "text": "functions whereas in a universal mode we're going to be having one dependency",
    "start": "1165980",
    "end": "1171770"
  },
  {
    "text": "which is Postgres in order to be able to store all the configuration that you are applying on kubernetes you can configure",
    "start": "1171770",
    "end": "1180080"
  },
  {
    "text": "kuma a hundred percent by using kubernetes CR these and that's really the only way you can configure common",
    "start": "1180080",
    "end": "1186830"
  },
  {
    "text": "kubernetes whereas on Universal you can configure kuma either by using the API the HTTP",
    "start": "1186830",
    "end": "1193930"
  },
  {
    "text": "API didn't we provide as well as the CLI client that can be integrated with your",
    "start": "1193930",
    "end": "1200890"
  },
  {
    "text": "CI CD workflow the CLI client effectively it consumes the HTTP API to",
    "start": "1200890",
    "end": "1207100"
  },
  {
    "text": "perform all the functions so you can version if you wish your configuration",
    "start": "1207100",
    "end": "1214420"
  },
  {
    "text": "you can apply it really CLI infrastructures code so we it follows",
    "start": "1214420",
    "end": "1220210"
  },
  {
    "text": "the best practices regulus of the factory running of kubernetes or in Universal this is lots of information",
    "start": "1220210",
    "end": "1229650"
  },
  {
    "text": "hopefully with the demo that Kevin will provide we're going to be seeing this live running live it's very simple we",
    "start": "1229650",
    "end": "1236170"
  },
  {
    "text": "put lots of focus in making things simple without excluding the possibility",
    "start": "1236170",
    "end": "1241570"
  },
  {
    "text": "of going deeper in those more complex use cases where perhaps you want to",
    "start": "1241570",
    "end": "1246700"
  },
  {
    "text": "manually configure the underlying Envoy so kuma will provide that nice abstraction those nice primitives to do",
    "start": "1246700",
    "end": "1253720"
  },
  {
    "text": "pretty much all the things edit what 80% of the architects wanted to implement and then if we wanted to go deeper there",
    "start": "1253720",
    "end": "1260830"
  },
  {
    "text": "is a way to do that as well right so kuma wants to be simple and easy to use without removing that powerful",
    "start": "1260830",
    "end": "1267130"
  },
  {
    "text": "capabilities that the underlying technology is providing a more in fact",
    "start": "1267130",
    "end": "1273100"
  },
  {
    "text": "we are contributing to envoy as well so we are contributing to the AMA we're",
    "start": "1273100",
    "end": "1278140"
  },
  {
    "text": "part of the Envoy ecosystem as well as we are building common so with that said",
    "start": "1278140",
    "end": "1286420"
  },
  {
    "text": "I spoke from way too long now I want to leave I want to leave the I'll",
    "start": "1286420",
    "end": "1292210"
  },
  {
    "text": "leave the screen share to to Kevin so that Kevin can can show you how kuma works live and again if you have any",
    "start": "1292210",
    "end": "1298690"
  },
  {
    "text": "questions about everything that I've said or anything that Kevin is going to be saying please ask those questions",
    "start": "1298690",
    "end": "1303780"
  },
  {
    "text": "using the Q&A tool from zoom and we're going to be answering all of those",
    "start": "1303780",
    "end": "1308800"
  },
  {
    "text": "questions at the end of this presentation so I'm going to be stopping my screen share now and I'll leave it to",
    "start": "1308800",
    "end": "1314800"
  },
  {
    "text": "Kevin all right Thank You Marco so can",
    "start": "1314800",
    "end": "1325150"
  },
  {
    "text": "everyone see my screen so I'm going to",
    "start": "1325150",
    "end": "1331000"
  },
  {
    "text": "be giving a demo on how kuma works alongside a sample application that we built so what we have here is a sample",
    "start": "1331000",
    "end": "1339730"
  },
  {
    "start": "1336000",
    "end": "1985000"
  },
  {
    "text": "marketplace application that will be built out you see on the Left we have our browser which is just a front-end UI",
    "start": "1339730",
    "end": "1345490"
  },
  {
    "text": "they can access the application and what the browser access is the API service the API service is a node application",
    "start": "1345490",
    "end": "1351280"
  },
  {
    "text": "that makes it requested to other services within your app within your infrastructure so first we have a",
    "start": "1351280",
    "end": "1358420"
  },
  {
    "text": "elasticsearch which stores all the items that you might be selling within your",
    "start": "1358420",
    "end": "1364120"
  },
  {
    "text": "marketplace and the second one is the Redis so the Redis is isn't trying to",
    "start": "1364120",
    "end": "1370330"
  },
  {
    "text": "store all the reviews that pertain to the items that you are selling just like",
    "start": "1370330",
    "end": "1375700"
  },
  {
    "text": "how if you shop on amazon.com you can look at the reviews for each item kuma marketplace also supports allowing",
    "start": "1375700",
    "end": "1382360"
  },
  {
    "text": "people to understand what they are buying so if we jump back to the front",
    "start": "1382360",
    "end": "1388120"
  },
  {
    "text": "and you are here I have the application up and running this is without kuma",
    "start": "1388120",
    "end": "1393400"
  },
  {
    "text": "alongside it this is purely the marketplace and you will see that all the items are populated on the front",
    "start": "1393400",
    "end": "1399700"
  },
  {
    "text": "page and you can easily scroll and you can even search by let's say they want a",
    "start": "1399700",
    "end": "1406720"
  },
  {
    "text": "dad Hawaiian shirts you can find that and we can also look at the reviews for",
    "start": "1406720",
    "end": "1411850"
  },
  {
    "text": "them right so this is a very basic application with if we go back to the",
    "start": "1411850",
    "end": "1418059"
  },
  {
    "text": "diagram with three services and it with three services even with such simplicity",
    "start": "1418059",
    "end": "1425470"
  },
  {
    "text": "you still have to implement the log you know the traffic logging the identity management the traffic permission logic",
    "start": "1425470",
    "end": "1432280"
  },
  {
    "text": "within each one of the services and what we want to do with kuma is abstract that kind of redundancy of code and time and",
    "start": "1432280",
    "end": "1441000"
  },
  {
    "text": "allow it and find a simpler way to deploy that logic and enabled you to",
    "start": "1441000",
    "end": "1446440"
  },
  {
    "text": "move faster and and secured your your your",
    "start": "1446440",
    "end": "1452770"
  },
  {
    "text": "application so let's go ahead and dive right into how would you install kuma",
    "start": "1452770",
    "end": "1459370"
  },
  {
    "text": "and Marco gave you a glimpse earlier but it really is as simple as using the kuma",
    "start": "1459370",
    "end": "1465850"
  },
  {
    "text": "CTL command right now I already have it all installed so you can and you can",
    "start": "1465850",
    "end": "1471010"
  },
  {
    "text": "download kuma at kuma the IO I already have a download and installed so I can",
    "start": "1471010",
    "end": "1477309"
  },
  {
    "text": "go into the bin folder you'll see that I have kuma CTO here",
    "start": "1477309",
    "end": "1483610"
  },
  {
    "text": "so with kuma CTO you'll see you can check the available command what we're",
    "start": "1483610",
    "end": "1488800"
  },
  {
    "text": "going to do is install kuma so we're going to do kuma CTL CTL install control",
    "start": "1488800",
    "end": "1501760"
  },
  {
    "text": "point and i'm going to apply that to kubernetes",
    "start": "1501760",
    "end": "1507570"
  },
  {
    "text": "right okay so with that you'll see that I'll install kuma with alter necessary",
    "start": "1511919",
    "end": "1517059"
  },
  {
    "text": "CRD part services deployment necessary within one step so that as Marco said",
    "start": "1517059",
    "end": "1522340"
  },
  {
    "text": "earlier it's fairly straightforward for you to get started if you wanted to play kumar kubernetes and with that well",
    "start": "1522340",
    "end": "1530620"
  },
  {
    "text": "we're deploying it let's take a look at our pods within the namespace of kuma",
    "start": "1530620",
    "end": "1536169"
  },
  {
    "text": "system which is where everything will sit and you'll see everything is already up and running we have the control plane itself which will be in charge of when",
    "start": "1536169",
    "end": "1543460"
  },
  {
    "text": "we increase the font a little so maybe easier see so we have the control point",
    "start": "1543460",
    "end": "1549039"
  },
  {
    "text": "itself which is in charge of configuring all the data planes that is going to have a sidecar proxy in them and also",
    "start": "1549039",
    "end": "1555370"
  },
  {
    "text": "the kuma injector which is in charge of inject automatically injecting that sidecar proxy alongside your services",
    "start": "1555370",
    "end": "1561840"
  },
  {
    "text": "okay so right now we have our application running up here this is what we previously saw and important for in the",
    "start": "1561840",
    "end": "1568450"
  },
  {
    "text": "application but you see everything only still has one container running outside",
    "start": "1568450",
    "end": "1573519"
  },
  {
    "text": "it or this one has two because there's a front and a back end service but it's missing that sidecar Posse so in order",
    "start": "1573519",
    "end": "1579250"
  },
  {
    "text": "to have for the kuma injector to take to",
    "start": "1579250",
    "end": "1585370"
  },
  {
    "text": "inject those cycler proxies we're gonna have to delete these existing pods and let it be deploy so let's just cube CTO",
    "start": "1585370",
    "end": "1591309"
  },
  {
    "text": "delete pods all within the kuma demo namespace and all these instructions will be available on the kuma repository",
    "start": "1591309",
    "end": "1599379"
  },
  {
    "text": "so you can easily follow along and try it at home okay so let's take a look at",
    "start": "1599379",
    "end": "1605590"
  },
  {
    "text": "our pods in the demo so everything is up",
    "start": "1605590",
    "end": "1612759"
  },
  {
    "text": "and running again but now you can see immediately that all of them have an extra container running alongside them",
    "start": "1612759",
    "end": "1617919"
  },
  {
    "text": "and that is because the site the kuma injector is able to recognize that these",
    "start": "1617919",
    "end": "1624269"
  },
  {
    "text": "services need to have a sidecar proxy so injects that additional container",
    "start": "1624269",
    "end": "1629289"
  },
  {
    "text": "alongside it so if we go back to the diagram",
    "start": "1629289",
    "end": "1634830"
  },
  {
    "text": "essentially what we did within one step one CLI command we installed kuma and it",
    "start": "1635399",
    "end": "1641149"
  },
  {
    "text": "it deploys the additional sidecar proxy necessary so now whenever you want to configure those envoy sidecar proxies",
    "start": "1641149",
    "end": "1647789"
  },
  {
    "text": "you simply have to talk to the kuma control plane that sits in the middle of them and it will handle all the",
    "start": "1647789",
    "end": "1653519"
  },
  {
    "text": "additional steps and configurations for you so your envoy proxies awesome so",
    "start": "1653519",
    "end": "1662009"
  },
  {
    "text": "before we add neutral TLS let's actually take one more step and let's explore kuma CTO little more a little more",
    "start": "1662009",
    "end": "1668879"
  },
  {
    "text": "because that tool can offer you a lot more control over your control plank but right now our kuma control plan use you",
    "start": "1668879",
    "end": "1675690"
  },
  {
    "text": "can see is sitting within a kubernetes cluster so we kind of we have the port for it to allow kuma CTO access to it so",
    "start": "1675690",
    "end": "1682349"
  },
  {
    "text": "let's port forward our our control point",
    "start": "1682349",
    "end": "1687419"
  },
  {
    "text": "so we're just going to do a cumulus ETL port for the control plane pod name on",
    "start": "1687419",
    "end": "1694529"
  },
  {
    "text": "the top right here in the main space of kuma system and the port we want to expose is 5 6 8 1 so once we configure",
    "start": "1694529",
    "end": "1702210"
  },
  {
    "text": "the port for that we can now configure kuma CTL to fetch that address at this",
    "start": "1702210",
    "end": "1708839"
  },
  {
    "text": "control point so let me go grab that command you'll this is going to be",
    "start": "1708839",
    "end": "1714929"
  },
  {
    "text": "within the kuma repository so you can find it but this is what i'm going to do",
    "start": "1714929",
    "end": "1720089"
  },
  {
    "text": "is you can use kuma CTL confident roll points and you can add that control point address so right now i'm exposing",
    "start": "1720089",
    "end": "1726269"
  },
  {
    "text": "it to localhost 5 6 8 1 but you can you can could use kuma CTL to control any",
    "start": "1726269",
    "end": "1731849"
  },
  {
    "text": "comfortable point that's it anywhere as long as you have access to that address so I'm going to add a new name to it",
    "start": "1731849",
    "end": "1737879"
  },
  {
    "text": "we're gonna call kubernetes you'll see that it automatically adds a control plane of mini cube kubernetes and",
    "start": "1737879",
    "end": "1745849"
  },
  {
    "text": "switches to that as the active control plane so now we do kuma CTL get meshes",
    "start": "1745849",
    "end": "1751489"
  },
  {
    "text": "awesome we can see the default mesh that is enabled when we deployed Kula and we",
    "start": "1751489",
    "end": "1757320"
  },
  {
    "text": "take it one more one step further and let's look at the data planes right if we if we look at the diagram we have",
    "start": "1757320",
    "end": "1762779"
  },
  {
    "text": "here we have three data points and that should be detachable that should be shown with a kuma CTL",
    "start": "1762779",
    "end": "1769320"
  },
  {
    "text": "man so we do kuma CTO inspect data planes we'll see those three let me try",
    "start": "1769320",
    "end": "1777149"
  },
  {
    "text": "to three format this a little so you'll see that we have actually three data panes here I'll represent accurately right we have the kuma demo its",
    "start": "1777149",
    "end": "1783809"
  },
  {
    "text": "application itself the node service elasticsearch and Vettes so now",
    "start": "1783809",
    "end": "1790230"
  },
  {
    "text": "everything is working fine the application itself is still working fine right nothing nothing has oh I need a",
    "start": "1790230",
    "end": "1796980"
  },
  {
    "text": "port for it I'm sorry so let's port for our application after",
    "start": "1796980",
    "end": "1802259"
  },
  {
    "text": "we redeployed it and nothing has changed except traffic is being routed through",
    "start": "1802259",
    "end": "1808039"
  },
  {
    "text": "Envoy the side card proxy and we have an enabled mutual TLS we don't have to",
    "start": "1808039",
    "end": "1813990"
  },
  {
    "text": "configure any traffic permission yet so soul work as is right the review still work and then the elastic search",
    "start": "1813990",
    "end": "1819720"
  },
  {
    "text": "services endpoint still works as well so now let's go ahead and add mutual TLS so",
    "start": "1819720",
    "end": "1827610"
  },
  {
    "text": "to add mutual TLS is a very important capability and that is kind of one of",
    "start": "1827610",
    "end": "1832830"
  },
  {
    "text": "the core features of server smash its ability to encrypt all your traffic among services for a service to service",
    "start": "1832830",
    "end": "1839250"
  },
  {
    "text": "so we are going to go ahead and use this",
    "start": "1839250",
    "end": "1844820"
  },
  {
    "text": "deployment and here you'll see that I'm simply just saying for the mesh resource",
    "start": "1844820",
    "end": "1851879"
  },
  {
    "text": "which we already know exists the default mass resource I'm gonna say mutual CLS is enabled to true and with that sorry -",
    "start": "1851879",
    "end": "1859379"
  },
  {
    "text": "sorry to interrupt you I just want to point out how in because we're running in a kubernetes environment as you can",
    "start": "1859379",
    "end": "1866159"
  },
  {
    "text": "see we are configuring the systems with our series and that's really really is",
    "start": "1866159",
    "end": "1871639"
  },
  {
    "text": "the only way to be configuring kuma on top of Cobra ladies thank you for the",
    "start": "1871639",
    "end": "1877740"
  },
  {
    "text": "clarification Marco so yeah so we're configuring these here the mesh DRD and",
    "start": "1877740",
    "end": "1883500"
  },
  {
    "text": "we'll see that it has been configured the default configured and now if we go ahead and try to access our application",
    "start": "1883500",
    "end": "1890100"
  },
  {
    "text": "again with mutual TLS enabled it doesn't work right now we can't even fetch the items or you must see the reviews but it",
    "start": "1890100",
    "end": "1896429"
  },
  {
    "text": "because now everything all the traffic is encrypted and the ombré sidecar proxy is not allowing us",
    "start": "1896429",
    "end": "1903539"
  },
  {
    "text": "you access to service without the correct traffic permissions so to make",
    "start": "1903539",
    "end": "1910529"
  },
  {
    "text": "our application work to get up and running again let's go ahead and add a traffic permission properly so you'll",
    "start": "1910529",
    "end": "1921749"
  },
  {
    "text": "see that I'm configuring the traffic permission crd with I'm giving a name of",
    "start": "1921749",
    "end": "1927389"
  },
  {
    "text": "everything so I'm basically saying for the rules I wanted any source to match any destination so essentially any",
    "start": "1927389",
    "end": "1933600"
  },
  {
    "text": "service can talk to any other service with that CRD in place that's we can use kuma CTL to check that traffic",
    "start": "1933600",
    "end": "1940289"
  },
  {
    "text": "permissions we can see that China promotion is indeed applied to the",
    "start": "1940289",
    "end": "1946080"
  },
  {
    "text": "control plane the control plane would now enforce it and apply that to all the data planes out there so going back to",
    "start": "1946080",
    "end": "1952349"
  },
  {
    "text": "our our front-end application our application works again and that's how easily you can enable mutual TOS cross",
    "start": "1952349",
    "end": "1958649"
  },
  {
    "text": "all your services we can check our reviews endpoint reviews work as well",
    "start": "1958649",
    "end": "1963690"
  },
  {
    "text": "awesome so up to this point it really doesn't",
    "start": "1963690",
    "end": "1969720"
  },
  {
    "text": "take a lot of effort in order for you to secure your service of service traffic with kuma right now all the traffic that",
    "start": "1969720",
    "end": "1976559"
  },
  {
    "text": "runs between API service and elasticsearch is encrypted also sort of all the traffic running between your API",
    "start": "1976559",
    "end": "1981960"
  },
  {
    "text": "servers and Redis is encrypted with mutual teos knocked out of the park",
    "start": "1981960",
    "end": "1987960"
  },
  {
    "start": "1985000",
    "end": "2132000"
  },
  {
    "text": "let's go ahead and talk about adding logging to your service mesh so right",
    "start": "1987960",
    "end": "1996389"
  },
  {
    "text": "now we have actually if we take a look at cube CTO get namespace we have a",
    "start": "1996389",
    "end": "2002029"
  },
  {
    "text": "logging service running and that essentially sent our our a log stash to",
    "start": "2002029",
    "end": "2007399"
  },
  {
    "text": "a hosted log log stash service called Mowgli so with that up and running let's",
    "start": "2007399",
    "end": "2012649"
  },
  {
    "text": "configure kuma service mesh to send all our traffic send all our logs traffic",
    "start": "2012649",
    "end": "2020119"
  },
  {
    "text": "logs to log stash so we have this CR key right here once again to kind of go",
    "start": "2020119",
    "end": "2029389"
  },
  {
    "text": "through what's happening we are configuring the mesh CID again but now this time with a long side mutual TLS",
    "start": "2029389",
    "end": "2035389"
  },
  {
    "text": "enable we're enable logging and telling logging exactly where to sent all the logs but on top of",
    "start": "2035389",
    "end": "2042440"
  },
  {
    "text": "that we also have to define you know exactly what logs we want to want to send so with the CI do traffic log",
    "start": "2042440",
    "end": "2050060"
  },
  {
    "text": "you'll see that it looks very similar to traffic permissions where you have rules of source and destination you'll say for",
    "start": "2050060",
    "end": "2056810"
  },
  {
    "text": "any service that match X you want to send that talks to a destination why we",
    "start": "2056810",
    "end": "2063080"
  },
  {
    "text": "want to send it to our back to log stash so right now we're just gonna send all traffic to that runs through our",
    "start": "2063080",
    "end": "2070310"
  },
  {
    "text": "application so we can trace everything so we'll see we are our mesh resources",
    "start": "2070310",
    "end": "2078560"
  },
  {
    "text": "configured and also we create a new traffic log CRD with that everything is",
    "start": "2078560",
    "end": "2086690"
  },
  {
    "text": "going to be sent to kuma demo log Lee so let's kind of just generate some sample activity within our application consent",
    "start": "2086690",
    "end": "2093560"
  },
  {
    "text": "check some dad shirts since the Dora's awesome and let's look at the reviews",
    "start": "2093560",
    "end": "2099520"
  },
  {
    "text": "sometimes it takes a while for it to get to lovey so that's why I just want to",
    "start": "2099520",
    "end": "2106310"
  },
  {
    "text": "give it a few minutes so it takes a few minutes for it to get",
    "start": "2106310",
    "end": "2112210"
  },
  {
    "text": "here it's not instantaneous because it's a hostess service so at the end of the demo we'll come back and look at",
    "start": "2112210",
    "end": "2118270"
  },
  {
    "text": "everything that happens through our demo and we all leave logging for that well",
    "start": "2118270",
    "end": "2124810"
  },
  {
    "text": "we'll get back to logging again and the next step after logging or while we wait",
    "start": "2124810",
    "end": "2133330"
  },
  {
    "start": "2132000",
    "end": "2326000"
  },
  {
    "text": "for logs to populate with it lovely is securing traffic permissions so we",
    "start": "2133330",
    "end": "2141520"
  },
  {
    "text": "showed how we can enable traffic Commission's for all services to all services and it was very it was simply",
    "start": "2141520",
    "end": "2150010"
  },
  {
    "text": "defining a role and saying for source to destination I want to match all but let's say hypothetically your",
    "start": "2150010",
    "end": "2156430"
  },
  {
    "text": "marketplace is being bombarded with fake reviews right maybe your competitor doesn't want you to sell any items so",
    "start": "2156430",
    "end": "2163000"
  },
  {
    "text": "they just start creating some lot of fake reviews and giving you one star for all your items so you want to quickly",
    "start": "2163000",
    "end": "2169930"
  },
  {
    "text": "shut down to Redis review endpoint so people can no longer access it so we're",
    "start": "2169930",
    "end": "2176770"
  },
  {
    "text": "gonna go ahead and reapply another traffic permission and this time you'll see it looks fairly similar to the first",
    "start": "2176770",
    "end": "2183340"
  },
  {
    "text": "one except this time we're defining specific service source and service destination we are going to say for that",
    "start": "2183340",
    "end": "2191050"
  },
  {
    "text": "traffic version everything will then change it so the source of API Kumud my API which is a node service can only",
    "start": "2191050",
    "end": "2197950"
  },
  {
    "text": "match the destination of elasticsearch essentially cutting out Redis from the",
    "start": "2197950",
    "end": "2203380"
  },
  {
    "text": "whole flow of your application okay so",
    "start": "2203380",
    "end": "2210960"
  },
  {
    "text": "with that figured what we're going to see is that with",
    "start": "2211260",
    "end": "2217560"
  },
  {
    "text": "permission your traffic to Redis will no longer be allowed and envoy will will",
    "start": "2217800",
    "end": "2223830"
  },
  {
    "text": "terminate that that traffic because it sees that you have to find that traffic permission right but elasticsearch will",
    "start": "2223830",
    "end": "2231420"
  },
  {
    "text": "still work because you said that specifically in the traffic commission rules and since we haven't used kuma CTL",
    "start": "2231420",
    "end": "2239970"
  },
  {
    "text": "in a while let's use kuma CTO and and and get our traffic permissions so we'll",
    "start": "2239970",
    "end": "2246810"
  },
  {
    "text": "see that traffic permission everything still exist and we output it as yellow you'll see for any destination of",
    "start": "2246810",
    "end": "2254840"
  },
  {
    "text": "elasticsearch it has to be matched with kuma demo api awesome so you can go back",
    "start": "2254840",
    "end": "2262950"
  },
  {
    "text": "I'm going to take a quick look lovely still last ten minutes oh just just kind",
    "start": "2262950",
    "end": "2272910"
  },
  {
    "text": "of sink back on the logging you'll see that logs are indeed coming in as we make requests to our service so logging",
    "start": "2272910",
    "end": "2279750"
  },
  {
    "text": "is working ok so now we go back to our front-end application so elasticsearch",
    "start": "2279750",
    "end": "2285960"
  },
  {
    "text": "which populates our items is working and you know we can keep searching and querying form you know my favorite is",
    "start": "2285960",
    "end": "2292590"
  },
  {
    "text": "still the Hawaii and dad shirts and the fedoras but if we were to make the same request to reviews you can see that",
    "start": "2292590",
    "end": "2299340"
  },
  {
    "text": "reviews no longer works now right because you defined those specific traffic permissions to disable the",
    "start": "2299340",
    "end": "2305400"
  },
  {
    "text": "review end point the review service and with that we essentially in within 10",
    "start": "2305400",
    "end": "2314370"
  },
  {
    "text": "minutes I would say we were able to enable mutual TLS across all our",
    "start": "2314370",
    "end": "2319440"
  },
  {
    "text": "services we enable traffic logging and we enable traffic permissions and that",
    "start": "2319440",
    "end": "2326430"
  },
  {
    "start": "2326000",
    "end": "2459000"
  },
  {
    "text": "is the end of the demo we are you know really proud of what we've built we are nearly at 1,000 stars despite only being",
    "start": "2326430",
    "end": "2334350"
  },
  {
    "text": "like one month old so you know please help us out go to our github its github",
    "start": "2334350",
    "end": "2340380"
  },
  {
    "text": "kong slash kuma so check out repository storage follow us you know if you find issues please",
    "start": "2340380",
    "end": "2347280"
  },
  {
    "text": "open up issues we love people to engage with us and you know help us improve what we have built and",
    "start": "2347280",
    "end": "2352700"
  },
  {
    "text": "we also you know if you want to get updates throughout you know about Kumail",
    "start": "2352700",
    "end": "2360600"
  },
  {
    "text": "you can sign up for our community updates at Kumud IO or you can also join our community slack channel which I'll",
    "start": "2360600",
    "end": "2366750"
  },
  {
    "text": "have a link later in one of the slides and to summarize you know we",
    "start": "2366750",
    "end": "2372450"
  },
  {
    "text": "demonstrated that cuma is that Universal control plane that can help you configure all your data planes",
    "start": "2372450",
    "end": "2378290"
  },
  {
    "text": "regardless if it's in kubernetes or Universal mode topologies are easy to",
    "start": "2378290",
    "end": "2383670"
  },
  {
    "text": "use we want to ensure that people who can get up and running it and create the policies that that matter to them and",
    "start": "2383670",
    "end": "2390000"
  },
  {
    "text": "enforce that policy across their mesh and it's also platform agnostic right today we only demonstrated Cooma on",
    "start": "2390000",
    "end": "2398250"
  },
  {
    "text": "kubernetes because this is a CN CF webinar but we will have tutorials on",
    "start": "2398250",
    "end": "2403830"
  },
  {
    "text": "how to deploy it in Universal mode as well and if you want to learn more we",
    "start": "2403830",
    "end": "2409619"
  },
  {
    "text": "will be at UConn and a so please join us we will we also have a co-located event",
    "start": "2409619",
    "end": "2415380"
  },
  {
    "text": "the day before you can register now it will focus on the API gateway in the morning and kuma in the afternoon or you",
    "start": "2415380",
    "end": "2421859"
  },
  {
    "text": "can always just swing by our booth you know we'll have tennis lag and I'll have engineers and a demo labs that you can",
    "start": "2421859",
    "end": "2426990"
  },
  {
    "text": "play with and you know learn about how to utilize come on for your for your architecture these are the resources we",
    "start": "2426990",
    "end": "2436530"
  },
  {
    "text": "have so kuma the io is our main webpage you can get quick started you'll find the",
    "start": "2436530",
    "end": "2443100"
  },
  {
    "text": "link there as well or you could also join our cyber channel that I mentioned earlier it's chat Kumud I oh I will",
    "start": "2443100",
    "end": "2450210"
  },
  {
    "text": "leave it for a second so people can digest the links and write them down",
    "start": "2450210",
    "end": "2457010"
  },
  {
    "text": "and one last thing is you know download Kumar you go to Kumud IO and install it",
    "start": "2458460",
    "end": "2464700"
  },
  {
    "start": "2459000",
    "end": "3101000"
  },
  {
    "text": "run it and let us know what you think thank you",
    "start": "2464700",
    "end": "2469740"
  },
  {
    "text": "so Marco do you wanna head Q&A yeah sure I've been answering questions all over",
    "start": "2469740",
    "end": "2476640"
  },
  {
    "text": "your presentation there were like many questions on the quean a quean a tool of zoom as well as in the chat i've been",
    "start": "2476640",
    "end": "2485069"
  },
  {
    "text": "answering to both there are two more two more questions that are haven't gone",
    "start": "2485069",
    "end": "2490859"
  },
  {
    "text": "through yet but perhaps somebody else from the koomer team that's online can",
    "start": "2490859",
    "end": "2497819"
  },
  {
    "text": "answer them so one of the question is are the traffic permissions stateful so",
    "start": "2497819",
    "end": "2503970"
  },
  {
    "text": "you allow the API to the elasticsearch but not back so today traffic",
    "start": "2503970",
    "end": "2510720"
  },
  {
    "text": "permissions are both ways so when when we do allow when we do allow API to",
    "start": "2510720",
    "end": "2519539"
  },
  {
    "text": "consume elasticsearch that means that API can initialize a request elastic search elastic search of course does not",
    "start": "2519539",
    "end": "2526410"
  },
  {
    "text": "initialize any requests to the API server it receives that request and provides a response that's why we did",
    "start": "2526410",
    "end": "2532500"
  },
  {
    "text": "not have to create a traffic permission rule that would allow elastic search to",
    "start": "2532500",
    "end": "2537960"
  },
  {
    "text": "talk to the API because the connection is not initialized by the my elastic search but it's initialized by the API",
    "start": "2537960",
    "end": "2543660"
  },
  {
    "text": "service if that answers those questions if I understand the question right and",
    "start": "2543660",
    "end": "2548970"
  },
  {
    "text": "then there is another questions another question about mutual TLS mutual TLS is",
    "start": "2548970",
    "end": "2555359"
  },
  {
    "text": "good but who provides the certificates is there any equivalent of Citadel in",
    "start": "2555359",
    "end": "2560520"
  },
  {
    "text": "kuma the answer to that is that we have got a built in certificate authority we",
    "start": "2560520",
    "end": "2566910"
  },
  {
    "text": "did that with the vision of really removing as many dependencies as",
    "start": "2566910",
    "end": "2572010"
  },
  {
    "text": "possible that you have to take care of when running kuma so cool itself provides that for you and we're going to",
    "start": "2572010",
    "end": "2579299"
  },
  {
    "text": "be enabling as part of our roadmap the option of using third-party certificate",
    "start": "2579299",
    "end": "2584640"
  },
  {
    "text": "authorities as well you know the project has been released a month and a half ago so there's lots of things we want to build but this is one of the things that",
    "start": "2584640",
    "end": "2590430"
  },
  {
    "text": "will come up quite soon in the mutuality last feature so I hope that answers your question",
    "start": "2590430",
    "end": "2596420"
  },
  {
    "text": "there wasn't other questions of around dependencies that I really want to make it clear I mentioned how cumin can run",
    "start": "2596420",
    "end": "2604050"
  },
  {
    "text": "on kubernetes and can run on Universal so when it runs on kubernetes there are",
    "start": "2604050",
    "end": "2609600"
  },
  {
    "text": "no dependencies right there is no Postgres dependency when running in kubernetes kuma will rely on the",
    "start": "2609600",
    "end": "2616290"
  },
  {
    "text": "underlying kubernetes api server to store you know all the information which",
    "start": "2616290",
    "end": "2621720"
  },
  {
    "text": "means that there is no progress whatsoever Postgres is only required if you're running cumin in a virtual machine",
    "start": "2621720",
    "end": "2629130"
  },
  {
    "text": "environment why because we do not have the ability of obviously leveraging the",
    "start": "2629130",
    "end": "2635070"
  },
  {
    "text": "underlying kubernetes server and so we have to store this configuration summer so you can store it in Postgres but",
    "start": "2635070",
    "end": "2641100"
  },
  {
    "text": "guess what I mean you can also start an AWS RDS instance for example or any",
    "start": "2641100",
    "end": "2646950"
  },
  {
    "text": "managed Postgres so that you can get Postgres out of sight out of mind",
    "start": "2646950",
    "end": "2652260"
  },
  {
    "text": "but for universal there must be a place for storing this configuration we've",
    "start": "2652260",
    "end": "2657810"
  },
  {
    "text": "chosen Postgres for the simple fact that it's one of the simplest systems to run and it's it's quite a good Natta base as",
    "start": "2657810",
    "end": "2665820"
  },
  {
    "text": "well and and you know we're pretty sure that in universal environments it's",
    "start": "2665820",
    "end": "2672720"
  },
  {
    "text": "going to be straightforward to start the Postgres instance or find plenty of progress as a service services that you",
    "start": "2672720",
    "end": "2679830"
  },
  {
    "text": "can use for kuma so those are also options there have been some questions",
    "start": "2679830",
    "end": "2685920"
  },
  {
    "text": "around the dashboard how can we visualize all these traffic permissions on a dashboard or is there like any",
    "start": "2685920",
    "end": "2692940"
  },
  {
    "text": "dashboard for kuma this is a very good question we are in the process as we speak of building a dashboard for kuma",
    "start": "2692940",
    "end": "2700320"
  },
  {
    "text": "that will show up in the next major version of kuma 0.3 so we're going to be",
    "start": "2700320",
    "end": "2705510"
  },
  {
    "text": "you're going to be seeing a dashboard available for kuma via your browser starting from the next major version and",
    "start": "2705510",
    "end": "2712200"
  },
  {
    "text": "you know that's going to be the first step for us to be building more and more visualizations on top of all the things",
    "start": "2712200",
    "end": "2718530"
  },
  {
    "text": "that are happening on top of kuma in fact I'm quite excited about some of the things that we're planning to build",
    "start": "2718530",
    "end": "2724910"
  },
  {
    "text": "you can like Kevin mentioned also sign",
    "start": "2724910",
    "end": "2730320"
  },
  {
    "text": "up on the community newsletter for kuma so that as we build these features you can get notified and then you can get",
    "start": "2730320",
    "end": "2736590"
  },
  {
    "text": "access to them as soon as possible on the universal mode you can configure",
    "start": "2736590",
    "end": "2742920"
  },
  {
    "text": "kuma in using llamo yes you can configure kuma with kuma caro yes you",
    "start": "2742920",
    "end": "2749070"
  },
  {
    "text": "can also leverage the underlying API so kuma cattle think of it as a glorified",
    "start": "2749070",
    "end": "2754320"
  },
  {
    "text": "HTTP client that we have built that leverages the underlying HTTP API that",
    "start": "2754320",
    "end": "2759540"
  },
  {
    "text": "kuma provides you can also use coral if you wish to make that happen or you can integrate because it's an API you can",
    "start": "2759540",
    "end": "2765930"
  },
  {
    "text": "integrate the kuma api with pretty much any system out there the api also exists when running cumin",
    "start": "2765930",
    "end": "2772680"
  },
  {
    "text": "in kubernetes but unlike Universal the API when running on kubernetes is a",
    "start": "2772680",
    "end": "2778050"
  },
  {
    "text": "read-only so you cannot make changes via the API you cannot make changes with Co",
    "start": "2778050",
    "end": "2784290"
  },
  {
    "text": "Mikado you can only make changes by leveraging cube cattle and that's really",
    "start": "2784290",
    "end": "2791640"
  },
  {
    "text": "how things should be done on kubernetes for universal there's no cube Caudill so",
    "start": "2791640",
    "end": "2797610"
  },
  {
    "text": "cou Mikado takes that role so KU Mikado allows you to implement those changes as",
    "start": "2797610",
    "end": "2802680"
  },
  {
    "text": "well as the HTTP API if you guys have",
    "start": "2802680",
    "end": "2821070"
  },
  {
    "text": "any more questions I'll be happy to answer I'm finishing to answering the",
    "start": "2821070",
    "end": "2826200"
  },
  {
    "text": "last ones on the chat tool and yeah as",
    "start": "2826200",
    "end": "2832740"
  },
  {
    "text": "you start to explore Akuma install kuma and play with it definitely you know if any questions arise then you can join our",
    "start": "2832740",
    "end": "2839359"
  },
  {
    "text": "slack channel we're always on there and we're always talking to our community so you can get get a quick answer there and",
    "start": "2839359",
    "end": "2845720"
  },
  {
    "text": "if you run into an issue or a bug just open up issue on our github repository",
    "start": "2845720",
    "end": "2851440"
  },
  {
    "text": "the link for the slack is up on the slides again so feel free to join us",
    "start": "2851440",
    "end": "2856549"
  },
  {
    "text": "there perfect you see if there is any",
    "start": "2856549",
    "end": "2865220"
  },
  {
    "text": "question let me see if there is any question on the chat I think I've",
    "start": "2865220",
    "end": "2870380"
  },
  {
    "text": "answered those again something a question that was very important was",
    "start": "2870380",
    "end": "2875960"
  },
  {
    "text": "about is there a mutation controller to automatically inject the sidecars and",
    "start": "2875960",
    "end": "2881900"
  },
  {
    "text": "the answer to that is yes everything is automated on kubernetes the sidecar is automatically injected you don't have to",
    "start": "2881900",
    "end": "2887990"
  },
  {
    "text": "worry about it so another question how fast is kuma compared to is the linker D",
    "start": "2887990",
    "end": "2893089"
  },
  {
    "text": "so kuma shares one thing with SEO which is the usage of amboy so the data plane",
    "start": "2893089",
    "end": "2901009"
  },
  {
    "text": "at runtime that we are using for cumin is humble and that is also what issue is",
    "start": "2901009",
    "end": "2907160"
  },
  {
    "text": "using unlike isseo kuma can work across multiple environments not just kubernetes and it's much simpler to use",
    "start": "2907160",
    "end": "2913460"
  },
  {
    "text": "there's much less moving moving parts so that it's easier to scale and operate at",
    "start": "2913460",
    "end": "2920410"
  },
  {
    "text": "service manage for the entire organization as well as the capability of being able to implement a",
    "start": "2920410",
    "end": "2925999"
  },
  {
    "text": "multi-tenancy since they want which means that you can provision isolated meshes with every mesh as its own CA",
    "start": "2925999",
    "end": "2933710"
  },
  {
    "text": "Authority certificate authority so that different themes can create independence",
    "start": "2933710",
    "end": "2938839"
  },
  {
    "text": "meshes from the same control plan lickity is that implements its own data",
    "start": "2938839",
    "end": "2944329"
  },
  {
    "text": "plane I believe it's built in rust and we have not done benchmarks against",
    "start": "2944329",
    "end": "2949910"
  },
  {
    "text": "linker D yet but you know for for you know when building kuma we made a very",
    "start": "2949910",
    "end": "2955190"
  },
  {
    "text": "obvious decision we don't want to be reinventing the wheel on things that the industry had already has already",
    "start": "2955190",
    "end": "2961910"
  },
  {
    "text": "contribute to the world and so we don't want to rebuild our all low level networking capabilities",
    "start": "2961910",
    "end": "2969530"
  },
  {
    "text": "but we want to be able to leverage the de facto industry standard envoy to be taking care of that that allows us to",
    "start": "2969530",
    "end": "2976070"
  },
  {
    "text": "put more focus into making Kumud the best control plane for service mesh while leveraging all the contribution",
    "start": "2976070",
    "end": "2983270"
  },
  {
    "text": "contributions that the community and industry has been doing to envoy for the data plane technology so that's why we",
    "start": "2983270",
    "end": "2989300"
  },
  {
    "text": "have decided to use envoy as opposed to building our own data plane and we're going to be contributing back to envoy",
    "start": "2989300",
    "end": "2995090"
  },
  {
    "text": "for any improvement we think it's necessary to be merged in order in order",
    "start": "2995090",
    "end": "3001660"
  },
  {
    "text": "were going to be proposing at least per request for envoy in order to be able to fix any bottleneck we might experience",
    "start": "3001660",
    "end": "3010079"
  },
  {
    "text": "any more questions",
    "start": "3017580",
    "end": "3021150"
  },
  {
    "text": "you",
    "start": "3026810",
    "end": "3028870"
  },
  {
    "text": "I think we are good then looks like",
    "start": "3032530",
    "end": "3038590"
  },
  {
    "text": "everyone has it like likes like we said",
    "start": "3038590",
    "end": "3043690"
  },
  {
    "text": "if you have any questions you can always follow up follow up with us on the exist other channels that we have open and you",
    "start": "3043690",
    "end": "3050500"
  },
  {
    "text": "know I want to thank everyone for joining us today on this webinar and thank you cm/ecf for having us",
    "start": "3050500",
    "end": "3055900"
  },
  {
    "text": "we are cnc of goldmember so we always try to you know we'd love to give back",
    "start": "3055900",
    "end": "3061090"
  },
  {
    "text": "to this community and work with this community to make make call and also the",
    "start": "3061090",
    "end": "3067870"
  },
  {
    "text": "the CNC F ecosystem better",
    "start": "3067870",
    "end": "3071910"
  },
  {
    "text": "thank you so much everyone thanks Kevin and Marco for a great presentation and",
    "start": "3073960",
    "end": "3079790"
  },
  {
    "text": "thanks to all of you for joining us today the webinar recording and slides will be available later today on the CN",
    "start": "3079790",
    "end": "3085640"
  },
  {
    "text": "CF website I just posted the URL into the chat we look forward to having you",
    "start": "3085640",
    "end": "3091070"
  },
  {
    "text": "at again at another CN CF webinar thanks so much",
    "start": "3091070",
    "end": "3095619"
  }
]