[
  {
    "start": "0",
    "end": "22000"
  },
  {
    "text": "so thank you very much for uh joining us uh this is a section about um an",
    "start": "799",
    "end": "5920"
  },
  {
    "text": "introduction streamsy so a project about running apache kafka kubernetes i am here i am paulo patierno and i am",
    "start": "5920",
    "end": "13360"
  },
  {
    "text": "with jakub schultz we are both maintainers of the streams project and we are going to talk about this",
    "start": "13360",
    "end": "19279"
  },
  {
    "text": "project and having an introduction about it so first of all let's talk about uh",
    "start": "19279",
    "end": "24480"
  },
  {
    "start": "22000",
    "end": "129000"
  },
  {
    "text": "kafka so kafka is an open source project created by linkedin",
    "start": "24480",
    "end": "29679"
  },
  {
    "text": "and it's defined as a publish subscribe messaging system at first but um during the years",
    "start": "29679",
    "end": "37200"
  },
  {
    "text": "these definitions uh evolved somehow and today is released as a data streaming platform",
    "start": "37200",
    "end": "43520"
  },
  {
    "text": "but at the end kafka is a distributed highly scalable and fault tolerant commit log",
    "start": "43520",
    "end": "50320"
  },
  {
    "text": "but let's say that kafka it's not just the brokers so the component that is in charge to handle all the",
    "start": "50320",
    "end": "57039"
  },
  {
    "text": "messages and exchanging the messages between the clients so the consumer and the producers but kafka",
    "start": "57039",
    "end": "63359"
  },
  {
    "text": "is really a broder ecosystem so we have uh here on the right hand side you can see for example kafka",
    "start": "63359",
    "end": "69600"
  },
  {
    "text": "connect which is a a framework used for moving data between different systems",
    "start": "69600",
    "end": "75920"
  },
  {
    "text": "like for example from a database to another using kafka as a system for",
    "start": "75920",
    "end": "81920"
  },
  {
    "text": "exchanging the data or for example there is mirror maker in order to mirroring data between two",
    "start": "81920",
    "end": "89040"
  },
  {
    "text": "different kafka clusters there are also different apis for the clients so",
    "start": "89040",
    "end": "95200"
  },
  {
    "text": "uh a kind of low level consumer and producer api for receiving and sending messages and",
    "start": "95200",
    "end": "102320"
  },
  {
    "text": "even the streams api that allows to develop some more complex",
    "start": "102320",
    "end": "110479"
  },
  {
    "text": "applications for analytics on real data streaming data um other than",
    "start": "110479",
    "end": "117200"
  },
  {
    "text": "that there are of course even third-party tools which are not part of the upstream kafka",
    "start": "117200",
    "end": "123280"
  },
  {
    "text": "community but are used in order to interact with kafka using a kafka cluster as well",
    "start": "123280",
    "end": "130000"
  },
  {
    "start": "129000",
    "end": "193000"
  },
  {
    "text": "now why we are going to talk about running kafka kubernetes why running",
    "start": "130000",
    "end": "135840"
  },
  {
    "text": "kafka kubernetes fits pretty well first of all kafka is a",
    "start": "135840",
    "end": "141040"
  },
  {
    "text": "messaging system distributed by nature and in most of the cases even all the workloads and the",
    "start": "141040",
    "end": "146080"
  },
  {
    "text": "application using kafka are the same so distributed and scalable",
    "start": "146080",
    "end": "151200"
  },
  {
    "text": "on the other side we have kubernetes kubernetes defined a great abstraction in order to run uh",
    "start": "151200",
    "end": "157680"
  },
  {
    "text": "your software everywhere so you can run kubernetes on bare metal or in any cloud providers like for",
    "start": "157680",
    "end": "165200"
  },
  {
    "text": "example amazon azure google and so on and in that case you can just move your application running from one uh cloud",
    "start": "165200",
    "end": "173280"
  },
  {
    "text": "provider to the other or on bare metal thanks to kubernetes so it enables to uh develop some cloud",
    "start": "173280",
    "end": "179680"
  },
  {
    "text": "native application right but why if you have your kubernetes",
    "start": "179680",
    "end": "184720"
  },
  {
    "text": "knowledge you have to learn more about kafka it will be great uh using your kubernetes novel age to",
    "start": "184720",
    "end": "191519"
  },
  {
    "text": "run kafka on kubernetes uh this is the reason why we have uh streams today",
    "start": "191519",
    "end": "197200"
  },
  {
    "text": "so stream z is an opersus project and uh it's focusing on um running afghan",
    "start": "197200",
    "end": "203519"
  },
  {
    "text": "kubernetes providing all the container images that you need for kafka for for a zookeeper and for",
    "start": "203519",
    "end": "211920"
  },
  {
    "text": "all the other components that are part of the streams suite let me say uh and it's",
    "start": "211920",
    "end": "217280"
  },
  {
    "text": "based on some operators uh we will see more about that during the demo with jakub",
    "start": "217280",
    "end": "223120"
  },
  {
    "text": "uh using these operators you are able to deploy handling and configure the kafka",
    "start": "223120",
    "end": "228159"
  },
  {
    "text": "clusters and all the other kafka entities around the cluster so it provides a kubernetes native",
    "start": "228159",
    "end": "236000"
  },
  {
    "text": "experience so you can handle your kafka cluster the entities in kafka but using your kubernetes no",
    "start": "236000",
    "end": "243599"
  },
  {
    "text": "village uh so not only the kafka cluster as you already mentioned but even for example the users the topics and all the other",
    "start": "243599",
    "end": "251040"
  },
  {
    "text": "kind of stuff that we already saw are part of the kafka ecosystem and the great things is that",
    "start": "251040",
    "end": "257519"
  },
  {
    "text": "uh strimzy he's um a sandbox project in the cncf since one year more or less now",
    "start": "257519",
    "end": "264800"
  },
  {
    "start": "264000",
    "end": "353000"
  },
  {
    "text": "when i mentioned a kubernetes experience i mean that as today who use",
    "start": "264800",
    "end": "272320"
  },
  {
    "text": "kubernetes can handle pods deployments stateful set uh as a native kubernetes resources it's",
    "start": "272320",
    "end": "280000"
  },
  {
    "text": "uh quite the same using string z for kafka so it means that extending kubernetes using uh",
    "start": "280000",
    "end": "287280"
  },
  {
    "text": "custom resource definitions some custom resource definitions it's possible having kafka as a native",
    "start": "287280",
    "end": "293040"
  },
  {
    "text": "resource in kubernetes so you have your resource of kind kafka you can describe",
    "start": "293040",
    "end": "298320"
  },
  {
    "text": "your cluster with the old information and as well as for all the other components so you have",
    "start": "298320",
    "end": "303919"
  },
  {
    "text": "kafka user and kafka topics for handling users and topics in the cluster",
    "start": "303919",
    "end": "308960"
  },
  {
    "text": "but even talking about kafka connect and for deploying your kafka connect cluster you can use the kafka connect",
    "start": "308960",
    "end": "316320"
  },
  {
    "text": "and kafka connector custom resource for configuring and running your connectors in kafka",
    "start": "316320",
    "end": "322880"
  },
  {
    "text": "at the same time there is a kafka bridge resource for running a http breach if you want to allow http",
    "start": "322880",
    "end": "330880"
  },
  {
    "text": "client to access the kafka cluster even for mirroring we have a couple of",
    "start": "330880",
    "end": "336479"
  },
  {
    "text": "resources for running kafka mirror maker and mirror maker 2 and finally because stream z supports",
    "start": "336479",
    "end": "343759"
  },
  {
    "text": "the integration with cruise control it's not possible to do a total rebalance of your cluster",
    "start": "343759",
    "end": "349440"
  },
  {
    "text": "using simply a kafka rebalance resource at this point i will hand over to yaakov",
    "start": "349440",
    "end": "356960"
  },
  {
    "text": "in order to show us what i just said",
    "start": "356960",
    "end": "361280"
  },
  {
    "text": "thanks paolo let me share my screen from which i will show you the demo",
    "start": "362000",
    "end": "369919"
  },
  {
    "text": "and i'm here already connected to my kubernetes cluster right now",
    "start": "371120",
    "end": "378000"
  },
  {
    "text": "there are no pots running and in this demo i will show you how streams makes it easy to run kafka on",
    "start": "378000",
    "end": "384880"
  },
  {
    "text": "kubernetes if you are not familiar with the operator pattern",
    "start": "384880",
    "end": "390080"
  },
  {
    "text": "which streams is using then the first thing you will always need to do is to deploy the",
    "start": "390080",
    "end": "396160"
  },
  {
    "text": "operator in our case there are several ways how you can do it",
    "start": "396160",
    "end": "402880"
  },
  {
    "text": "right now i'm going to just use the script",
    "start": "402880",
    "end": "409440"
  },
  {
    "text": "or yaml file from our website",
    "start": "409440",
    "end": "415199"
  },
  {
    "text": "and that will kind of automatically install all the",
    "start": "416319",
    "end": "423840"
  },
  {
    "text": "all the kubernetes resources which we need so all i need to do is cube ctl apply on the url",
    "start": "423919",
    "end": "430479"
  },
  {
    "start": "430000",
    "end": "488000"
  },
  {
    "text": "and there are also other options how you can install it you can for example use helm charts you",
    "start": "430479",
    "end": "436560"
  },
  {
    "text": "can use uh operatorhub.io or you can really just download the ammo",
    "start": "436560",
    "end": "444000"
  },
  {
    "text": "files from our github website or github project and use them locally as you can see the",
    "start": "444000",
    "end": "450880"
  },
  {
    "text": "installation really just installs the expected resources there are some custom resource definitions there are some rvec",
    "start": "450880",
    "end": "457919"
  },
  {
    "text": "files uh there is some service account and then there's of course the deployment",
    "start": "457919",
    "end": "464240"
  },
  {
    "text": "which uh is how the operator is running so we can",
    "start": "464240",
    "end": "469840"
  },
  {
    "text": "see that now i have the cluster operator pot running in my namespace",
    "start": "469840",
    "end": "475759"
  },
  {
    "text": "and it's now basically waiting for me to create some custom resource",
    "start": "475759",
    "end": "480879"
  },
  {
    "text": "which would contain the definition of the kafka cluster which we want the operator",
    "start": "480879",
    "end": "487280"
  },
  {
    "text": "to deploy i have one very simple here prepared to show you the structure",
    "start": "487280",
    "end": "492800"
  },
  {
    "start": "488000",
    "end": "525000"
  },
  {
    "text": "you can see that it's our own api version it's kind kafka",
    "start": "492800",
    "end": "499440"
  },
  {
    "text": "and inside you really have the blueprint for deploying the kafka cluster so it specifies what kind of kafka version",
    "start": "499440",
    "end": "506560"
  },
  {
    "text": "it should be using how many broker nodes we want to have uh what should be the listeners what",
    "start": "506560",
    "end": "514159"
  },
  {
    "text": "should be the configuration what kind of storage should be used uh then it also shows the same for the",
    "start": "514159",
    "end": "520880"
  },
  {
    "text": "zookeeper configuration and so on this resource is fairly simple uh",
    "start": "520880",
    "end": "527920"
  },
  {
    "text": "i have here one more slightly bit more complex which i will use in the demo",
    "start": "527920",
    "end": "533600"
  },
  {
    "text": "there you can see i have more things which are more for to kind of prepare your cluster",
    "start": "533600",
    "end": "540080"
  },
  {
    "text": "for the production and make it more production ready and resilient so for example i configure some",
    "start": "540080",
    "end": "545360"
  },
  {
    "text": "resources i configure some java options how to handle the memory i also",
    "start": "545360",
    "end": "553040"
  },
  {
    "text": "configure listeners including things such as encryption authentication or authorization",
    "start": "553040",
    "end": "561200"
  },
  {
    "text": "i can configure the prometheus metrics and so on and so on so uh we really",
    "start": "561200",
    "end": "567279"
  },
  {
    "text": "support everything what you would need for your production kafka cluster deployment",
    "start": "567279",
    "end": "572640"
  },
  {
    "text": "and it can be all described in this simply on the file and all we need to do with it",
    "start": "572640",
    "end": "580640"
  },
  {
    "text": "is to do cube cdl apply",
    "start": "580640",
    "end": "585600"
  },
  {
    "start": "585000",
    "end": "684000"
  },
  {
    "text": "and that will create this resource inside kubernetes and the operator will see it and will start deploying the",
    "start": "585680",
    "end": "592399"
  },
  {
    "text": "kafka cluster so when i do now cube ctl get pots",
    "start": "592399",
    "end": "598320"
  },
  {
    "text": "and watch for them you can see that it already creating the zookeeper pots so if you know a bit",
    "start": "598320",
    "end": "604399"
  },
  {
    "text": "about kafka you know that it's uh at least for the time being still using zookeeper to kind of store",
    "start": "604399",
    "end": "611360"
  },
  {
    "text": "some configuration do some lock management bootstrap the kafka brokers so we first need to deploy",
    "start": "611360",
    "end": "618399"
  },
  {
    "text": "the zookeeper cluster we have to wait for the zookeeper nodes to get ready to kind of",
    "start": "618399",
    "end": "624560"
  },
  {
    "text": "get the working zookeeper cluster and when they are ready the operator will automatically continue",
    "start": "624560",
    "end": "631279"
  },
  {
    "text": "with deploying the kafka brokers so any second now we should see the bots for the brokers",
    "start": "631279",
    "end": "640079"
  },
  {
    "text": "to be created and we can see that we have three pots now starting",
    "start": "640079",
    "end": "647279"
  },
  {
    "text": "and uh again the kafka nodes kafka brokers",
    "start": "647279",
    "end": "654000"
  },
  {
    "text": "they will use the zookeeper cluster and they will form their own cluster and then once they are ready we will",
    "start": "654000",
    "end": "659839"
  },
  {
    "text": "deploy two more things one of them is another operator",
    "start": "659839",
    "end": "665360"
  },
  {
    "text": "which is used to manage the topics and users for this kafka cluster and then we also deploy the kafka",
    "start": "665360",
    "end": "673120"
  },
  {
    "text": "exporter which is exporting some additional metrics for prometheus monitoring which",
    "start": "673120",
    "end": "680640"
  },
  {
    "text": "are not part of kafka out of the box uh in this demo i'm really showing just few of the resources",
    "start": "680640",
    "end": "687360"
  },
  {
    "start": "684000",
    "end": "725000"
  },
  {
    "text": "which we support but as already mentioned by paolo in the same way you can really deploy all the",
    "start": "687360",
    "end": "693600"
  },
  {
    "text": "kafka components uh we support kafka connect for integration with other",
    "start": "693600",
    "end": "698640"
  },
  {
    "text": "systems uh kafka mirror maker one and two for uh mirroring and kind of disaster",
    "start": "698640",
    "end": "706800"
  },
  {
    "text": "recovery uh we have uh an http bridge or proxy for",
    "start": "706800",
    "end": "712079"
  },
  {
    "text": "uh proxy in kafka protocol to http and so on there's not fully enough time",
    "start": "712079",
    "end": "718720"
  },
  {
    "text": "to show that in this demo but the principle of deploying them would be exactly the same",
    "start": "718720",
    "end": "725760"
  },
  {
    "text": "so what i can see here is that the exporter which was the last spot",
    "start": "725760",
    "end": "731120"
  },
  {
    "text": "is now ready and when i do cube ctl get kafka yama i can see in the",
    "start": "731120",
    "end": "738959"
  },
  {
    "text": "status of the custom resource that the cluster is now deployed and ready and i",
    "start": "738959",
    "end": "744079"
  },
  {
    "text": "can also get here the addresses to the different uh listeners which i configured there",
    "start": "744079",
    "end": "751519"
  },
  {
    "start": "751000",
    "end": "843000"
  },
  {
    "text": "so now when we have the kafka cluster running we should probably go on and deploy some",
    "start": "751519",
    "end": "756880"
  },
  {
    "text": "application right and in kafka the applications will be basically",
    "start": "756880",
    "end": "763680"
  },
  {
    "text": "always producing or consuming messages from some topics and because we have the cluster set up",
    "start": "763680",
    "end": "769360"
  },
  {
    "text": "including security we will also need some user to connect and authenticate and",
    "start": "769360",
    "end": "775680"
  },
  {
    "text": "uh you can't really handle a lot of these things by some kafka commands and",
    "start": "775680",
    "end": "781279"
  },
  {
    "text": "the kafka utilities but what we do here in strimzy",
    "start": "781279",
    "end": "786639"
  },
  {
    "text": "is that we provide another set of custom resources for them",
    "start": "786639",
    "end": "792079"
  },
  {
    "text": "so this is for example a kafka user resource which you can use to create a user for your cluster",
    "start": "792079",
    "end": "798880"
  },
  {
    "text": "here in my case i specified uh authentication i will use uh tls client authentication",
    "start": "798880",
    "end": "806240"
  },
  {
    "text": "using certificates but there are some other options as well and i will also specify all the",
    "start": "806240",
    "end": "812000"
  },
  {
    "text": "acl rules which this user should automatically get",
    "start": "812000",
    "end": "817760"
  },
  {
    "text": "what i'm using here is really having the users defined and managed locally within the",
    "start": "817760",
    "end": "823360"
  },
  {
    "text": "kafka cluster but we also support different authentication and authorization methods",
    "start": "823360",
    "end": "829600"
  },
  {
    "text": "which allow you to manage this centrally so you can for example",
    "start": "829600",
    "end": "834880"
  },
  {
    "text": "use oau for authentication and authorization or you can use open policy agent for uh",
    "start": "834880",
    "end": "841360"
  },
  {
    "text": "authorization as well now again all i need to do is to apply this resource",
    "start": "841360",
    "end": "850160"
  },
  {
    "start": "843000",
    "end": "930000"
  },
  {
    "text": "and what the operator will do in this case is it will create a secret which is called",
    "start": "850160",
    "end": "857040"
  },
  {
    "text": "my user which is the name of the user i just created and the secret will have the",
    "start": "857040",
    "end": "865199"
  },
  {
    "text": "tls certificates which can be used for the authentication uh",
    "start": "865199",
    "end": "870639"
  },
  {
    "text": "when the user will be used by some clients and i can do exactly the same with",
    "start": "870639",
    "end": "878240"
  },
  {
    "text": "topic so there's a kafka topic resource for that it's called my topic in this case you",
    "start": "878240",
    "end": "884800"
  },
  {
    "text": "can see that i'm really good at uh making interesting names uh for the things uh it has 12 partitions",
    "start": "884800",
    "end": "892800"
  },
  {
    "text": "and three replicas and i have to use some additional configuration so you can really configure everything",
    "start": "892800",
    "end": "898399"
  },
  {
    "text": "uh through this resource and uh to create it i can really just uh apply",
    "start": "898399",
    "end": "906079"
  },
  {
    "text": "it and one of the big advantages of having these resources is that uh they are just yamas similarly",
    "start": "906079",
    "end": "913839"
  },
  {
    "text": "to your application which will be uh using the kafka cluster and they can be easily stored inside",
    "start": "913839",
    "end": "920720"
  },
  {
    "text": "github for example and you can use some git ops tools to have them automatically",
    "start": "920720",
    "end": "926560"
  },
  {
    "text": "deployed into the clusters and so on so now we have kafka cluster we have our",
    "start": "926560",
    "end": "934000"
  },
  {
    "start": "930000",
    "end": "1007000"
  },
  {
    "text": "user and our topic so all we need to do is to deploy the",
    "start": "934000",
    "end": "939040"
  },
  {
    "text": "application and i have here really just a simple hello world application uh",
    "start": "939040",
    "end": "946399"
  },
  {
    "text": "it's really just two deployments one is a consumer and producer and they are sending some dummy hello world messages",
    "start": "946399",
    "end": "954480"
  },
  {
    "text": "because we have the user operator which created a secret for the user i can really just mount the secret uh into the pots to use",
    "start": "954639",
    "end": "962800"
  },
  {
    "text": "it for authentication so i do not need to do anything special to set up the",
    "start": "962800",
    "end": "968959"
  },
  {
    "text": "authentication here so now we can deploy it",
    "start": "968959",
    "end": "976959"
  },
  {
    "text": "and we should see the pots running now and",
    "start": "976959",
    "end": "984240"
  },
  {
    "text": "uh let's make sure that they actually connected and are working let's check",
    "start": "984240",
    "end": "989279"
  },
  {
    "text": "the locks for the consumer and you can see that the consumer is",
    "start": "989279",
    "end": "997120"
  },
  {
    "text": "getting some hello world messages the producer will just sends every",
    "start": "997199",
    "end": "1003199"
  },
  {
    "text": "second a message and the consumer is just consuming that and as i said streams is really ready",
    "start": "1003199",
    "end": "1010959"
  },
  {
    "start": "1007000",
    "end": "1071000"
  },
  {
    "text": "for the production deployment so for example part of what i did includes all the",
    "start": "1010959",
    "end": "1017120"
  },
  {
    "text": "things for prometheus monitoring so i can just go to my grafana and check the kafka dashboard which will",
    "start": "1017120",
    "end": "1024640"
  },
  {
    "text": "show how many brokers i have how many partitions uh it will show the",
    "start": "1024640",
    "end": "1029918"
  },
  {
    "text": "throughput which in my case it's really small from the hello world application but",
    "start": "1029919",
    "end": "1036000"
  },
  {
    "text": "everything is basically here out of the out of the box provided uh we have dashboards for all the",
    "start": "1036000",
    "end": "1043600"
  },
  {
    "text": "components and for all the operators so uh that's uh",
    "start": "1043600",
    "end": "1049280"
  },
  {
    "text": "all uh available and can be easily configured so that's it for the demo and back to",
    "start": "1049280",
    "end": "1056640"
  },
  {
    "text": "you paulo so thank you jakub great demo uh",
    "start": "1056640",
    "end": "1062960"
  },
  {
    "text": "let me share again my screen so this",
    "start": "1062960",
    "end": "1070720"
  },
  {
    "start": "1071000",
    "end": "1147000"
  },
  {
    "text": "okay so uh as already mentioned by yakub um stream z provides a lot of features",
    "start": "1072080",
    "end": "1079280"
  },
  {
    "text": "of course yakub4 for for the time that we had uh showed just a few of them but as you",
    "start": "1079280",
    "end": "1086559"
  },
  {
    "text": "can see here there are a lot of things that you can change and configure in uh with streams about your",
    "start": "1086559",
    "end": "1092480"
  },
  {
    "text": "kafka cluster you can scale up and scale down easily your cluster just changing the number of",
    "start": "1092480",
    "end": "1097760"
  },
  {
    "text": "replicas in your kafka resource you can use affinity and toleration in order to specify",
    "start": "1097760",
    "end": "1103120"
  },
  {
    "text": "uh in which nodes you want to the kafka broker spots to be deployed",
    "start": "1103120",
    "end": "1108559"
  },
  {
    "text": "or for example you can do mirroring using kafka connect using whole support for the",
    "start": "1108559",
    "end": "1113600"
  },
  {
    "text": "authorization authentication part the cruise control for cluster balancing uh as well as we have",
    "start": "1113600",
    "end": "1119039"
  },
  {
    "text": "integration with promedus and grafana so for providing metrics um we have we use secrets for",
    "start": "1119039",
    "end": "1125520"
  },
  {
    "text": "example for storing uh credentials and certificates we have a",
    "start": "1125520",
    "end": "1130880"
  },
  {
    "text": "support for encryption so you can encrypt the traffic between the clients and the kafka brokers",
    "start": "1130880",
    "end": "1137039"
  },
  {
    "text": "but even the traffic inside the cluster itself so there are a bunch of features as you",
    "start": "1137039",
    "end": "1142400"
  },
  {
    "text": "can see from this slide that streams provide just out of the box",
    "start": "1142400",
    "end": "1148000"
  },
  {
    "start": "1147000",
    "end": "1215000"
  },
  {
    "text": "other than providing these features itself stream z is really well integrated with uh a",
    "start": "1148000",
    "end": "1153600"
  },
  {
    "text": "bunch of other projects coming from cncf so for sure kubernetes because we are talking about",
    "start": "1153600",
    "end": "1159679"
  },
  {
    "text": "that even hell because we have a way for deploying the streams the operator using the helm charts",
    "start": "1159679",
    "end": "1166640"
  },
  {
    "text": "there is support for tracing so for having tracing information about the messages",
    "start": "1166640",
    "end": "1172400"
  },
  {
    "text": "exchanged between the clients using the the kafka brokers so jaeger and open tracing",
    "start": "1172400",
    "end": "1178799"
  },
  {
    "text": "fit really well here of course prometheus integration uh fluentds support for kafka as well",
    "start": "1178799",
    "end": "1185120"
  },
  {
    "text": "the open policy agent for specifying authentication and authorization rules for your",
    "start": "1185120",
    "end": "1191280"
  },
  {
    "text": "consumer and producer in order to access the topics and even for example with cada which is",
    "start": "1191280",
    "end": "1196559"
  },
  {
    "text": "one of the latest project joining the the cncf which is about",
    "start": "1196559",
    "end": "1201840"
  },
  {
    "text": "auto scaling application and there is a scalar for kafka and you can even deploy",
    "start": "1201840",
    "end": "1207600"
  },
  {
    "text": "kafka using streams so it's well integrated with kida as well so there are a bunch of projects from cncf",
    "start": "1207600",
    "end": "1213840"
  },
  {
    "text": "um from this point of view now a candle call to action for the community",
    "start": "1213840",
    "end": "1219360"
  },
  {
    "start": "1215000",
    "end": "1308000"
  },
  {
    "text": "how can you engage with the community with the streams community you can just download streams and try it",
    "start": "1219360",
    "end": "1225600"
  },
  {
    "text": "yourself you can maybe i don't know find some bugs and you can",
    "start": "1225600",
    "end": "1231039"
  },
  {
    "text": "submit the box so opening a github issue about the bug or if if you have a fix for that bug",
    "start": "1231039",
    "end": "1238240"
  },
  {
    "text": "or you have a feature that you would like to add to strings you can submit your code so",
    "start": "1238240",
    "end": "1243679"
  },
  {
    "text": "you can open a pull request and we as maintainers would be really happy to review and approve and merge of",
    "start": "1243679",
    "end": "1250000"
  },
  {
    "text": "course you can even help on the documentation so you can maybe fix some typos or make",
    "start": "1250000",
    "end": "1257120"
  },
  {
    "text": "clear the documentation where it's not translate the documentation in other languages but uh you can even engage",
    "start": "1257120",
    "end": "1264799"
  },
  {
    "text": "with the community in our chat room there is a chat room uh a stream the chat room in the cncf",
    "start": "1264799",
    "end": "1271200"
  },
  {
    "text": "slack workspace you can even follow us on streamsy where we uh tweet",
    "start": "1271200",
    "end": "1276480"
  },
  {
    "text": "about all the news about stringsy and new blog posts new features new release and so on",
    "start": "1276480",
    "end": "1281919"
  },
  {
    "text": "but even you can help with the spreading the word so if you would like to have a presentation",
    "start": "1281919",
    "end": "1288159"
  },
  {
    "text": "to a conference to a meet-up or even writing an article or a blog post about extremity it would be great",
    "start": "1288159",
    "end": "1294640"
  },
  {
    "text": "uh and if you want uh to have a place for a blogging about that you can even blog",
    "start": "1294640",
    "end": "1299840"
  },
  {
    "text": "with us so you can use our official website in order to write your own blog post your ideas",
    "start": "1299840",
    "end": "1306320"
  },
  {
    "text": "and how you are using streams so these are the ways for reaching the community",
    "start": "1306320",
    "end": "1311760"
  },
  {
    "text": "the website uh so streams dot io the github repo which is a stream the organization where there are",
    "start": "1311760",
    "end": "1318559"
  },
  {
    "text": "all the components in the stream the ecosystem so the operators the bridge the house library some client examples",
    "start": "1318559",
    "end": "1326000"
  },
  {
    "text": "and so on our twitter account the chat room as you already mentioned on the cncf slack workspace or the streams room",
    "start": "1326000",
    "end": "1334320"
  },
  {
    "text": "and there is of course a mainly list if you prefer to send mails in order to to get",
    "start": "1334320",
    "end": "1340960"
  },
  {
    "text": "help or providing your ideas or engage with us in any way so that's all from us",
    "start": "1340960",
    "end": "1349200"
  },
  {
    "start": "1347000",
    "end": "1365000"
  },
  {
    "text": "so really thank you very much for joining us and uh i really hope that you are going to use",
    "start": "1349200",
    "end": "1354400"
  },
  {
    "text": "streams and try it",
    "start": "1354400",
    "end": "1361840"
  },
  {
    "start": "1365000",
    "end": "1382000"
  },
  {
    "text": "okay uh thanks jacob and paulo for the great talk now let's start the q a session uh",
    "start": "1365600",
    "end": "1373600"
  },
  {
    "text": "jacob and pedro you can you can take a look at the qnl tape in zoom and answer any questions",
    "start": "1373600",
    "end": "1379440"
  },
  {
    "text": "you want thank you thanks a lot so we got there already",
    "start": "1379440",
    "end": "1385200"
  },
  {
    "start": "1382000",
    "end": "1487000"
  },
  {
    "text": "some questions uh we can have a look at them the first one was",
    "start": "1385200",
    "end": "1390640"
  },
  {
    "text": "uh why is strimzy not a project in apache kafka and uh yeah i think streams really",
    "start": "1390640",
    "end": "1399120"
  },
  {
    "text": "stands in between apache kafka and kubernetes because",
    "start": "1399120",
    "end": "1404880"
  },
  {
    "text": "it's basically has a big relationship to kubernetes on one side and then obviously a big relationship to kafka",
    "start": "1404880",
    "end": "1412080"
  },
  {
    "text": "on the other side and if you look at the history of the apache kafka",
    "start": "1412080",
    "end": "1418480"
  },
  {
    "text": "project there's uh a lot of focus on the core kafka and",
    "start": "1418480",
    "end": "1423679"
  },
  {
    "text": "its activities and uh there are a lot of projects which are not really part of",
    "start": "1423679",
    "end": "1429760"
  },
  {
    "text": "the apache kafka project itself but relate closely to kafka",
    "start": "1429760",
    "end": "1435120"
  },
  {
    "text": "for example it would be all the different kafka clients for the other programming languages than java",
    "start": "1435120",
    "end": "1442640"
  },
  {
    "text": "it would be for example the different uis or the things like i don't know cruise",
    "start": "1442640",
    "end": "1449440"
  },
  {
    "text": "control for cluster balancing and that allows the kafka community to",
    "start": "1449440",
    "end": "1454799"
  },
  {
    "text": "really focus on on its basically core core business on making the clusters",
    "start": "1454799",
    "end": "1462720"
  },
  {
    "text": "great and kafka connect and uh yeah that's why streams is kind",
    "start": "1462720",
    "end": "1469679"
  },
  {
    "text": "of a separate project which is part of the cncf foundation as a sandbox project and",
    "start": "1469679",
    "end": "1477760"
  },
  {
    "text": "we really kind of leverage there our relationship to kubernetes basically",
    "start": "1477760",
    "end": "1487200"
  },
  {
    "start": "1487000",
    "end": "1589000"
  },
  {
    "text": "then the next question was uh what's the benchmark difference between",
    "start": "1487200",
    "end": "1492480"
  },
  {
    "text": "directly run kafka and kafka run on kubernetes by using",
    "start": "1492480",
    "end": "1497520"
  },
  {
    "text": "strimzy and i think that's again a great question uh",
    "start": "1497520",
    "end": "1502559"
  },
  {
    "text": "but the answer is a bit uh hard because a lot of that depends on your uh",
    "start": "1502559",
    "end": "1507679"
  },
  {
    "text": "on your infrastructure uh it a lot depends for example how the networking on your kubernetes",
    "start": "1507679",
    "end": "1514960"
  },
  {
    "text": "cluster is uh configured and uh how uh it compares to the networking of your",
    "start": "1514960",
    "end": "1523760"
  },
  {
    "text": "uh for example vms or bare metal infrastructure without kubernetes",
    "start": "1523760",
    "end": "1529120"
  },
  {
    "text": "if the cluster configuration and uh the networking and the i o and so",
    "start": "1529120",
    "end": "1535440"
  },
  {
    "text": "on is uh really on a good level then actually there might not be such a big difference",
    "start": "1535440",
    "end": "1543679"
  },
  {
    "text": "but in some cases kind of you see some performance degradation because for example the network is a bit slower and",
    "start": "1543679",
    "end": "1550159"
  },
  {
    "text": "there is some overhead there would be also a difference so",
    "start": "1550159",
    "end": "1555440"
  },
  {
    "text": "when you access the kafka running inside of kubernetes with applications from outside of kubernetes then",
    "start": "1555440",
    "end": "1563600"
  },
  {
    "text": "obviously you would kind of need for example load balancers or something like that to expose the kafka",
    "start": "1563600",
    "end": "1569039"
  },
  {
    "text": "cluster and that kind of in the communication basically adds uh some additional",
    "start": "1569039",
    "end": "1574640"
  },
  {
    "text": "additional hopes which the connections have to travel through so that may for example slightly",
    "start": "1574640",
    "end": "1579679"
  },
  {
    "text": "increase the latency for the for the kafka clients but in general it",
    "start": "1579679",
    "end": "1585279"
  },
  {
    "text": "depends a lot on the on the environment yeah and",
    "start": "1585279",
    "end": "1590320"
  },
  {
    "start": "1589000",
    "end": "1659000"
  },
  {
    "text": "i would like just to add that if you already have some application running on",
    "start": "1590320",
    "end": "1596720"
  },
  {
    "text": "in the clouds so you have some native cloud applications running already on kubernetes you have some workloads",
    "start": "1596720",
    "end": "1602559"
  },
  {
    "text": "on kubernetes uh and you need to use kafka i think that uh in this case streams fits pretty well",
    "start": "1602559",
    "end": "1608880"
  },
  {
    "text": "because you can run kafka and save kubernetes cluster where you have your applications",
    "start": "1608880",
    "end": "1614080"
  },
  {
    "text": "uh while as you could say when your applications are outside maybe you can see maybe some differences on that site",
    "start": "1614080",
    "end": "1620720"
  },
  {
    "text": "but for a native for a cloud native development it should be really a great",
    "start": "1620720",
    "end": "1628000"
  },
  {
    "text": "choice running the kafka cluster in same kubernetes cluster where your applications are running",
    "start": "1628000",
    "end": "1641840"
  },
  {
    "text": "okay are there any other questions from",
    "start": "1643600",
    "end": "1648158"
  },
  {
    "text": "anyone so here you go",
    "start": "1652840",
    "end": "1660320"
  },
  {
    "start": "1659000",
    "end": "1740000"
  },
  {
    "text": "there's one more question uh which i think you still should have time to answer build streams support dashboard for",
    "start": "1660399",
    "end": "1666720"
  },
  {
    "text": "enabling users to configure brokers easily and the answer there is definitely yes",
    "start": "1666720",
    "end": "1672000"
  },
  {
    "text": "we are working on it if you go to the streamsy github repository you will find the repository",
    "start": "1672000",
    "end": "1679840"
  },
  {
    "text": "called streamsy.ui which is where",
    "start": "1679840",
    "end": "1685760"
  },
  {
    "text": "we are starting to develop the dashboard [Music] and on the cncf slack we have also now a",
    "start": "1685760",
    "end": "1695200"
  },
  {
    "text": "new channel uh streams ui dev if you for example want to join the",
    "start": "1695200",
    "end": "1700480"
  },
  {
    "text": "development of the ui dashboard and help with that then you can definitely join there and let us know and",
    "start": "1700480",
    "end": "1706080"
  },
  {
    "text": "uh yeah we are definitely working on this and i hope that soon the first versions will be available",
    "start": "1706080",
    "end": "1714000"
  },
  {
    "text": "yeah that's in an early stage we just started to take a look at some proposals but it",
    "start": "1714000",
    "end": "1719440"
  },
  {
    "text": "would be great having feedback on that",
    "start": "1719440",
    "end": "1725840"
  },
  {
    "text": "the next question is whether strimsy supports all the different versions of kafka",
    "start": "1730480",
    "end": "1737760"
  },
  {
    "text": "paulo do you want to answer it or should i do it uh i i can do that if you want uh so",
    "start": "1737760",
    "end": "1743760"
  },
  {
    "start": "1740000",
    "end": "1805000"
  },
  {
    "text": "stream z in general supports the latest two version of kafka so for example now we have kafka 2.5 and 2.4",
    "start": "1743760",
    "end": "1750480"
  },
  {
    "text": "supported that's the way that we uh support uh kafka and when uh",
    "start": "1750480",
    "end": "1757440"
  },
  {
    "text": "a new version of stream z uh comes out one of them is just dropped and uh",
    "start": "1757440",
    "end": "1764320"
  },
  {
    "text": "in order to have a kind of way for upgrading your cluster from one cuff conversions to the other",
    "start": "1764320",
    "end": "1771120"
  },
  {
    "text": "i would maybe add the reason for this uh the thing is that kafka is still",
    "start": "1772159",
    "end": "1778320"
  },
  {
    "text": "evolving quite heavily and there are a lot of new features which we want to use but it's quite hard to support the new",
    "start": "1778320",
    "end": "1784880"
  },
  {
    "text": "versions with the new features and the old versions with all features and so on so that",
    "start": "1784880",
    "end": "1791679"
  },
  {
    "text": "would be really a lot of effort for testing and development so that's why we really focus mainly on the",
    "start": "1791679",
    "end": "1798320"
  },
  {
    "text": "on the latest versions and we try to support the newer new features which are in these new versions",
    "start": "1798320",
    "end": "1803760"
  },
  {
    "text": "as well",
    "start": "1803760",
    "end": "1807520"
  }
]