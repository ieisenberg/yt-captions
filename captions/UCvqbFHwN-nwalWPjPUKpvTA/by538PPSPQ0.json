[
  {
    "text": "uh okay uh hello everyone uh so welcome to our session uh I hope everyone is",
    "start": "399",
    "end": "8240"
  },
  {
    "text": "having a great ccon so far so yeah let's get",
    "start": "8240",
    "end": "14559"
  },
  {
    "text": "started uh so today our topic is about uh introduction to Cortex multi-",
    "start": "15680",
    "end": "22039"
  },
  {
    "text": "scalable uh premisus so uh I'm Ben y uh I'm a software uh development engineer",
    "start": "22039",
    "end": "28720"
  },
  {
    "text": "at AWS and uh uh I'm a maintainer of Cortex as well as SOS project and I'm",
    "start": "28720",
    "end": "35680"
  },
  {
    "text": "also a contributor to some other cncf project like premisus ago CD Etc so I",
    "start": "35680",
    "end": "41879"
  },
  {
    "text": "have a papy named uh GUI and uh yeah so today with me I have uh I have kedish",
    "start": "41879",
    "end": "50360"
  },
  {
    "text": "yeah I have um Fredick Gonzalez um I'm a software engineer at Adobe um I'm also a",
    "start": "50360",
    "end": "55840"
  },
  {
    "text": "maintainer for cortex and what you see there is my puppy uh well she's not a puppy anymore she's Doberman so um I",
    "start": "55840",
    "end": "62800"
  },
  {
    "text": "just want to excuse myself we in the last year presentation we had more puppies this year doesn't have that many",
    "start": "62800",
    "end": "68880"
  },
  {
    "text": "I'm sorry for that but um so but what is cortex um let's talk a bit on cortex",
    "start": "68880",
    "end": "75520"
  },
  {
    "text": "cortex is a horizontally scalable highly available multi-tenant long-term storage",
    "start": "75520",
    "end": "81360"
  },
  {
    "text": "for Prometheus um is a community project",
    "start": "81360",
    "end": "86960"
  },
  {
    "text": "it was created in 20 2016 it's part of the cncf incubating",
    "start": "86960",
    "end": "92439"
  },
  {
    "text": "projects has seen a lot of contributors uh it has had a lot of",
    "start": "92439",
    "end": "97520"
  },
  {
    "text": "maintainers over the years um these are the companies using cortex",
    "start": "97520",
    "end": "103320"
  },
  {
    "text": "um or or that had used cortex um but I",
    "start": "103320",
    "end": "109280"
  },
  {
    "text": "want to stop right here a bit um who's familiar with Prometheus can you raise your hand",
    "start": "109280",
    "end": "115560"
  },
  {
    "text": "great and who's familiar with collectors up infammatory collectors anybody",
    "start": "115560",
    "end": "121360"
  },
  {
    "text": "running out great okay awesome well back in when",
    "start": "121360",
    "end": "127039"
  },
  {
    "text": "2016 uh when cortex was created and started to work on we had this situation",
    "start": "127039",
    "end": "132200"
  },
  {
    "text": "with Prometheus that as you might familiar with it it is a memory database right so the more metrics you you add to",
    "start": "132200",
    "end": "139440"
  },
  {
    "text": "a Prometheus it it starts to increase in resources needs right so it needs more memory um so typically set up uh what",
    "start": "139440",
    "end": "148160"
  },
  {
    "text": "people do they have more than one Peres right they have two peritas now um one",
    "start": "148160",
    "end": "153200"
  },
  {
    "text": "per is for some applications one Peres for another application and uh you solve",
    "start": "153200",
    "end": "159040"
  },
  {
    "text": "your problem but um this problem increases and now you have several preus",
    "start": "159040",
    "end": "165280"
  },
  {
    "text": "and now your view of the metrics starts to become a little bit different right you have metrics some metrics here some",
    "start": "165280",
    "end": "172239"
  },
  {
    "text": "metrics there U and this is when most people use Thanos right they have like a",
    "start": "172239",
    "end": "178280"
  },
  {
    "text": "Thanos deployed that is able able to see if you're familiar with tanos um I'm just throwing out that that if you are",
    "start": "178280",
    "end": "184519"
  },
  {
    "text": "familiar um and and is able to see all the views the thing with tanos though is is you have to configure it you have to",
    "start": "184519",
    "end": "192400"
  },
  {
    "text": "decide where to put every metric uh that's how um Thanos solves that problem",
    "start": "192400",
    "end": "199400"
  },
  {
    "text": "but uh what does cortex does different right cortex is an",
    "start": "199400",
    "end": "204720"
  },
  {
    "text": "API um and this API is able to receive the metrics from all your Prometheus",
    "start": "204720",
    "end": "210000"
  },
  {
    "text": "right and it's able to handle all the cardinality all the metrics that require",
    "start": "210000",
    "end": "216159"
  },
  {
    "text": "that your permites are generating and it's handling all the the problems I'm going to go in deep detail on how that",
    "start": "216159",
    "end": "221959"
  },
  {
    "text": "works in the future but I want to mention that um we also have now in part of the C cncf ecosystem is the open",
    "start": "221959",
    "end": "229760"
  },
  {
    "text": "phmetry right open themetry is something newer than cortex came later um and most",
    "start": "229760",
    "end": "235439"
  },
  {
    "text": "people are using it nowadays to get signals uh lock signals tra sign signals metric signals when open Petry collector",
    "start": "235439",
    "end": "243120"
  },
  {
    "text": "came out um it was already ready to be used uh for cortex um so you typically",
    "start": "243120",
    "end": "250560"
  },
  {
    "text": "run not just one collector but but you run many collectors and you can use the collectors uh with cortex you can send",
    "start": "250560",
    "end": "258199"
  },
  {
    "text": "all those metrics to Cortex uh using uh uh those collectors but it doesn't",
    "start": "258199",
    "end": "264680"
  },
  {
    "text": "really end there um suppose something else it was invented and in the future",
    "start": "264680",
    "end": "269880"
  },
  {
    "text": "that we don't know that could also be used to send those metrics to the same API because it's an API",
    "start": "269880",
    "end": "276560"
  },
  {
    "text": "basically uh so what are the cortex uh key features what is behind cortex is",
    "start": "276560",
    "end": "283440"
  },
  {
    "text": "that is able to do through horizontal scale and you don't need to reconfigure",
    "start": "283440",
    "end": "289639"
  },
  {
    "text": "cortex if you need more cardinality or if you need more active series it's just uh increasing um replicas in some um",
    "start": "289639",
    "end": "298759"
  },
  {
    "text": "some deployment some staple set um the other thing that cortex has is the",
    "start": "298759",
    "end": "303840"
  },
  {
    "text": "multi-tenancy from the beginning uh cortex had support for multitenant so you can send uh metrics to different",
    "start": "303840",
    "end": "311120"
  },
  {
    "text": "places and your tenants are separated completely separated inside cortex um",
    "start": "311120",
    "end": "316240"
  },
  {
    "text": "and that is as a key feature of Cortex also in cortex is a from the beginning",
    "start": "316240",
    "end": "321319"
  },
  {
    "text": "was able to do faster quering because it provides a query cache layer and that cach layer is able to help you out and",
    "start": "321319",
    "end": "329039"
  },
  {
    "text": "makes most of the qu quer is faster also because it can horizontally scale those",
    "start": "329039",
    "end": "334560"
  },
  {
    "text": "uh limits that I just mentioned that you can use uh sorry that the limits that you the the tenants that that you just",
    "start": "334560",
    "end": "340720"
  },
  {
    "text": "mentioned you can configure per tenant limits not just for all the teams you",
    "start": "340720",
    "end": "345919"
  },
  {
    "text": "can also say this every team how many Rees it requires so in the scenario that",
    "start": "345919",
    "end": "351400"
  },
  {
    "text": "I explained before where you have U some metrics increasing uh not all the not",
    "start": "351400",
    "end": "356600"
  },
  {
    "text": "all the tenants are affected but only the ones that are generating the metrics specific to those and last but not least",
    "start": "356600",
    "end": "363479"
  },
  {
    "text": "um additionally to the typical pritus API cortex provides a reach API for managing alerts your rules so you can uh",
    "start": "363479",
    "end": "370759"
  },
  {
    "text": "create all your rules in in cortex um but um how does this look on the inside",
    "start": "370759",
    "end": "376919"
  },
  {
    "text": "so in the inside of Cortex behind this API we have this architecture um the",
    "start": "376919",
    "end": "382199"
  },
  {
    "text": "architecture starts in the middle when you see the remote right uh the remote right box you you have all your agents",
    "start": "382199",
    "end": "388800"
  },
  {
    "text": "here you see Prem um and prus is remote writing to the Distributors the Distributors take care",
    "start": "388800",
    "end": "395800"
  },
  {
    "text": "of Distributing the samples over to the inors uh it does that by using the",
    "start": "395800",
    "end": "401199"
  },
  {
    "text": "replication factor of three that means uh all the metrics that get ridden to Cortex get ridden to uh three investors",
    "start": "401199",
    "end": "408319"
  },
  {
    "text": "at at the same time and that is allows to not have problems if for example some inors fail at some point right um the",
    "start": "408319",
    "end": "416639"
  },
  {
    "text": "investors at the same time they take care of compacting those metrics and at the end after 2 hours they shipped to S3",
    "start": "416639",
    "end": "424400"
  },
  {
    "text": "or any kind of block storage that you might have um on the right side um you",
    "start": "424400",
    "end": "430479"
  },
  {
    "text": "have uh a typical dashboard tool and it's using the cortex API for query in",
    "start": "430479",
    "end": "436319"
  },
  {
    "text": "this case you have a query frontend which is receiving those queries and sending those over to the query queriers",
    "start": "436319",
    "end": "442560"
  },
  {
    "text": "which are in charge of getting those metrics out of the investors and also getting those the same metrics out of uh",
    "start": "442560",
    "end": "449840"
  },
  {
    "text": "the storage if those queries are long-term uh in the mix also the store",
    "start": "449840",
    "end": "455120"
  },
  {
    "text": "gate was are there to download the TD tsdb blocks from from S3 and making them",
    "start": "455120",
    "end": "462000"
  },
  {
    "text": "available for querying in cortex uh part of the query later is also as you can see the the result cach and also the",
    "start": "462000",
    "end": "469560"
  },
  {
    "text": "index cach which allows for uh faster quering and on the left side um we have",
    "start": "469560",
    "end": "475360"
  },
  {
    "text": "the alert manager API which is what I mentioned around receiving and managing",
    "start": "475360",
    "end": "480680"
  },
  {
    "text": "uh those alerts and rules for each tenant um if you are familiar with",
    "start": "480680",
    "end": "488919"
  },
  {
    "text": "Thanos till this point you might be seeing some resemblance and there's no",
    "start": "488919",
    "end": "495319"
  },
  {
    "text": "uh resemblance to tanos and the reason for that is because cortex and tanos",
    "start": "495319",
    "end": "500440"
  },
  {
    "text": "collaborate a lot and and in the way it works uh sorry in the way it's built um",
    "start": "500440",
    "end": "506599"
  },
  {
    "text": "and we also collaborate with prus and because we use the basically the same code base as prus uh for most of the",
    "start": "506599",
    "end": "513719"
  },
  {
    "text": "features um we do contribute back uh the cortex project creates a lot new",
    "start": "513719",
    "end": "519159"
  },
  {
    "text": "features and one of those features that was recently created was the prompt Q Smith which is uh a project that lets",
    "start": "519159",
    "end": "526760"
  },
  {
    "text": "you um find bux in in the query uh in",
    "start": "526760",
    "end": "531920"
  },
  {
    "text": "queriers this library was used um in the T new Thanos IO promql engine and was",
    "start": "531920",
    "end": "538160"
  },
  {
    "text": "able to find more than 10 bus in that that repo um but what are the new features in this",
    "start": "538160",
    "end": "546160"
  },
  {
    "text": "year in cortex uh back to you Ben uh uh thanks uh fedish so uh I will go and",
    "start": "546160",
    "end": "552839"
  },
  {
    "text": "talk about uh so what's new features we added since last uh coucom uh to",
    "start": "552839",
    "end": "559800"
  },
  {
    "text": "Cortex so uh cortex 13 uh was released uh last November and uh we implemented",
    "start": "559800",
    "end": "567279"
  },
  {
    "text": "some uh important features and uh we also value uh operator uh experience so",
    "start": "567279",
    "end": "573640"
  },
  {
    "text": "our main focus is still uh reducing operator pains as well as uh improving",
    "start": "573640",
    "end": "578880"
  },
  {
    "text": "the St scalability and the scalability of our cortex so next I will go and talk",
    "start": "578880",
    "end": "584640"
  },
  {
    "text": "about some uh new features and enhancement uh release uh in this",
    "start": "584640",
    "end": "589760"
  },
  {
    "text": "release and uh the upcoming uh one 13 release as well uh so the first one I want to talk",
    "start": "589760",
    "end": "597320"
  },
  {
    "text": "about is called dynamic tant chart size and uh it's a feature mainly works in",
    "start": "597320",
    "end": "602600"
  },
  {
    "text": "the quiry pass so uh before that I want to uh emphasize how quiry path works so",
    "start": "602600",
    "end": "609839"
  },
  {
    "text": "we have mainly three components query front end uh quiry scheduler and querer",
    "start": "609839",
    "end": "615600"
  },
  {
    "text": "so the query requests uh goes into query front end and query front end does some",
    "start": "615600",
    "end": "620680"
  },
  {
    "text": "kind of uh result caching and splitting and it basically uh puts the query",
    "start": "620680",
    "end": "626399"
  },
  {
    "text": "requests uh into uh query scheduler which is basically uh Quee of your",
    "start": "626399",
    "end": "632839"
  },
  {
    "text": "queries and uh we have querer uh basically working as a workers which uh",
    "start": "632839",
    "end": "638920"
  },
  {
    "text": "pulls uh the query jobs from uh scheduler queue and then uh executes",
    "start": "638920",
    "end": "644320"
  },
  {
    "text": "those queries against the storage notes so uh with Shuffle sharting enabled then",
    "start": "644320",
    "end": "651000"
  },
  {
    "text": "uh each tenant can be assigned to uh a number of quers in this case so for",
    "start": "651000",
    "end": "657200"
  },
  {
    "text": "example um a tenant has two quers and each quirer uh is configured with a",
    "start": "657200",
    "end": "662760"
  },
  {
    "text": "limited number of concurrency so in this case uh each quirer uh has four uh",
    "start": "662760",
    "end": "669200"
  },
  {
    "text": "queries Lots which means uh at the same time it can execute four queries uh uh",
    "start": "669200",
    "end": "676720"
  },
  {
    "text": "in this single quir instance so this works because it helps uh protect oill",
    "start": "676720",
    "end": "682639"
  },
  {
    "text": "for the quir part and uh so in this kind of setup um basically uh if a a 10 has",
    "start": "682639",
    "end": "689639"
  },
  {
    "text": "two quer it can run eight quaries uh at the same time and the more quers uh it",
    "start": "689639",
    "end": "696240"
  },
  {
    "text": "has the more qus it can process so uh with this kind of",
    "start": "696240",
    "end": "701399"
  },
  {
    "text": "background let's take a look at this feature so we have a maybe a very small",
    "start": "701399",
    "end": "707320"
  },
  {
    "text": "uh cortex cluster setup with four quers and we have three tenants uh configured",
    "start": "707320",
    "end": "713200"
  },
  {
    "text": "and each tant we have this kind of uh rtime configuration called Max quar per",
    "start": "713200",
    "end": "718600"
  },
  {
    "text": "tant which is basically the quar sh size and each tent has two which means uh",
    "start": "718600",
    "end": "724880"
  },
  {
    "text": "they got two quers assigned so because of shffle sharting you can see some quers uh are shared uh between different",
    "start": "724880",
    "end": "734079"
  },
  {
    "text": "tenants so um so this is the initial setup but let's say uh we have HPA",
    "start": "734079",
    "end": "741040"
  },
  {
    "text": "configured uh in cortex cluster which is quite common because sometimes we want to dynamically scale up our replicas Bas",
    "start": "741040",
    "end": "749320"
  },
  {
    "text": "on some conditions for example uh if CPU memory or even maybe bandwidth usage",
    "start": "749320",
    "end": "755360"
  },
  {
    "text": "exceeds some uh percentage then uh HPA kicks in and uh more quers got scale up",
    "start": "755360",
    "end": "762880"
  },
  {
    "text": "uh the problem is that even though we scale up more quar replicas uh the",
    "start": "762880",
    "end": "768160"
  },
  {
    "text": "roundtime configuration for each tant is still two it's still a static number so",
    "start": "768160",
    "end": "774079"
  },
  {
    "text": "um with Dynamic ton sh size configuration um what we can chieve is",
    "start": "774079",
    "end": "779760"
  },
  {
    "text": "that we can configure um the value to be a percentage uh of the total number of",
    "start": "779760",
    "end": "784959"
  },
  {
    "text": "replicas so in this case if we configure uh this number to 0.5 which means after",
    "start": "784959",
    "end": "791360"
  },
  {
    "text": "HPA kicks in uh the ton sh size will be automatically uh increase uh from two to",
    "start": "791360",
    "end": "798279"
  },
  {
    "text": "four in this case so that different tenant they can basically utilize the new replicas um uh scale up by HPA so",
    "start": "798279",
    "end": "807560"
  },
  {
    "text": "this feature also works for St Gateway not only uh",
    "start": "807560",
    "end": "813079"
  },
  {
    "text": "Inquirer so next uh let's talk about another feature we Implement to reduce",
    "start": "813800",
    "end": "820120"
  },
  {
    "text": "operator pain so this is um a cortex component called quiry oh sorry called",
    "start": "820120",
    "end": "826399"
  },
  {
    "text": "ruler uh what it does is that it evaluates uh alerting and recording",
    "start": "826399",
    "end": "832000"
  },
  {
    "text": "rules against CeX storage layer which is uh ingestor and store Gateway so um for",
    "start": "832000",
    "end": "838759"
  },
  {
    "text": "some user they might configure um like some rules which fetch a lot of data and",
    "start": "838759",
    "end": "845360"
  },
  {
    "text": "uh they have no idea whether their rules succeeds or not and they don't care about it they just leave it here so for",
    "start": "845360",
    "end": "852320"
  },
  {
    "text": "those kind of rules I think cortex already have uh very good uh quer limits",
    "start": "852320",
    "end": "858399"
  },
  {
    "text": "to protect quer and the storage component so for this rule maybe uh it",
    "start": "858399",
    "end": "863639"
  },
  {
    "text": "will hit some query limits for our storage and return 422 and stop EV ating",
    "start": "863639",
    "end": "869519"
  },
  {
    "text": "the quir even more or uh if it gets lucky and uh it uh doesn't hit any limit",
    "start": "869519",
    "end": "875959"
  },
  {
    "text": "on our storage but it might fail at uh ruler evaluation time but the worst case",
    "start": "875959",
    "end": "882639"
  },
  {
    "text": "is that uh uh it doesn't H hit any limits and the ruler just uh the rule",
    "start": "882639",
    "end": "888120"
  },
  {
    "text": "just uh got evaluated and eventually it time out so in this case the rule just",
    "start": "888120",
    "end": "893639"
  },
  {
    "text": "runs uh continuously but it never succeeds so this might not be a big",
    "start": "893639",
    "end": "899360"
  },
  {
    "text": "problem but uh when you have other queries at the same time and uh your storage might get overwhelmed so it's",
    "start": "899360",
    "end": "906480"
  },
  {
    "text": "hard to run other queries and it might impact availability uh maybe all for for your",
    "start": "906480",
    "end": "911880"
  },
  {
    "text": "other queries and maybe for all the tenants in in the quartex cluster so yeah basically uh we are in",
    "start": "911880",
    "end": "920320"
  },
  {
    "text": "five so uh this feature is basically we allowed to configure uh a number of uh",
    "start": "920320",
    "end": "926320"
  },
  {
    "text": "rule groups for each tenant and you can just dis aable it so that you can stop it uh from being uh",
    "start": "926320",
    "end": "934040"
  },
  {
    "text": "executed so um yeah next one is also something um kind I like really like",
    "start": "935680",
    "end": "941959"
  },
  {
    "text": "this feature it's called quir priority so as we uh discussed cortex is designed",
    "start": "941959",
    "end": "947839"
  },
  {
    "text": "to be a multi-tenant system so it works well and uh its main goal is to reduce",
    "start": "947839",
    "end": "953639"
  },
  {
    "text": "blast radius and uh to avoid one Tenon to be impacted by some uh by queries",
    "start": "953639",
    "end": "959839"
  },
  {
    "text": "from other tenants but uh one interesting problem is that we can have",
    "start": "959839",
    "end": "964959"
  },
  {
    "text": "some kind of risk condition or um some kind of um this issue within",
    "start": "964959",
    "end": "971480"
  },
  {
    "text": "a single tenant for example a single tenant might have different query uh patterns let's say they have adhul",
    "start": "971480",
    "end": "978360"
  },
  {
    "text": "queries and which might be some long trending queries they are very expensive to evaluate and very slow and might even",
    "start": "978360",
    "end": "985480"
  },
  {
    "text": "hit some limits and they might also have some other queries like health check or",
    "start": "985480",
    "end": "990560"
  },
  {
    "text": "prob in queries which runs very fast um but it's more important because maybe if",
    "start": "990560",
    "end": "998440"
  },
  {
    "text": "this query filled it will trigger some alarm and uh operator got paged so um as",
    "start": "998440",
    "end": "1005759"
  },
  {
    "text": "I mentioned before there's a there's a queue uh in quiry scheduler and it's",
    "start": "1005759",
    "end": "1011120"
  },
  {
    "text": "basically a f queue so first in first out so for example um if some user runs",
    "start": "1011120",
    "end": "1018240"
  },
  {
    "text": "uh some ad queries which are long trending and those queries they just fit in into the queue and uh the health",
    "start": "1018240",
    "end": "1026160"
  },
  {
    "text": "track or prob inquiries arrive later and in this case they are wait uh at the end",
    "start": "1026160",
    "end": "1032000"
  },
  {
    "text": "of the queue so what will happen in this case so maybe um if there are too many",
    "start": "1032000",
    "end": "1038199"
  },
  {
    "text": "uh long trending or adhoc queries maybe they will cause a queue to be full and in this case the health check queries",
    "start": "1038199",
    "end": "1045520"
  },
  {
    "text": "will just be rejected because uh q q is full in this case and uh another",
    "start": "1045520",
    "end": "1051080"
  },
  {
    "text": "situation is that the c um doesn't fall and but the problem is that they are",
    "start": "1051080",
    "end": "1057280"
  },
  {
    "text": "just waiting in the queue to be picked up by quarrier but quarrier has only",
    "start": "1057280",
    "end": "1062400"
  },
  {
    "text": "limited capacity and uh concurrency as well if we don't uh Dynamic scale up",
    "start": "1062400",
    "end": "1068080"
  },
  {
    "text": "quers so because those long trending quires are very expensive and slow and",
    "start": "1068080",
    "end": "1073559"
  },
  {
    "text": "maybe those important ques they never get executed uh until they time out in",
    "start": "1073559",
    "end": "1079559"
  },
  {
    "text": "the queue so how we solve this and the problem here is that we",
    "start": "1079559",
    "end": "1087000"
  },
  {
    "text": "actually have a q but the Q is actually ordered by the inq time so what we can",
    "start": "1087000",
    "end": "1092360"
  },
  {
    "text": "do is that we can have a a same the same F qu but it's ordered by uh priority so",
    "start": "1092360",
    "end": "1099559"
  },
  {
    "text": "we introduce a configuration called quiry priority and it works pretty neat",
    "start": "1099559",
    "end": "1105039"
  },
  {
    "text": "because you can define a default priority and you can Define some other priority you want and uh maybe you can",
    "start": "1105039",
    "end": "1112880"
  },
  {
    "text": "use some reject or time window to match a specific quy or uh maybe within some",
    "start": "1112880",
    "end": "1119480"
  },
  {
    "text": "kind of specific time range for example recent 2 hour and uh you want this quiry",
    "start": "1119480",
    "end": "1124520"
  },
  {
    "text": "to be higher priority than the default one and uh in so that it can be picked",
    "start": "1124520",
    "end": "1130600"
  },
  {
    "text": "up earlier by uh quer and also there's a new configuration called reserved quers",
    "start": "1130600",
    "end": "1137039"
  },
  {
    "text": "which you can maybe utilize one query to serve this type of uh query only and",
    "start": "1137039",
    "end": "1144240"
  },
  {
    "text": "even though it might be kind of wasteful for some kind of concurrency slots but",
    "start": "1144240",
    "end": "1149480"
  },
  {
    "text": "it ensures like um this quy should be executed",
    "start": "1149480",
    "end": "1155039"
  },
  {
    "text": "successfully um so next uh Improvement is called multi-level index cache so",
    "start": "1156039",
    "end": "1161440"
  },
  {
    "text": "this is how it works right now and it's used in the store store Gateway component so basically store Gateway can",
    "start": "1161440",
    "end": "1169600"
  },
  {
    "text": "acquire a remote cache maybe it's m cach d if there's a cache miss it will go to",
    "start": "1169600",
    "end": "1174880"
  },
  {
    "text": "the uh bucket back end maybe S3 in this case and uh this pattern works pretty",
    "start": "1174880",
    "end": "1181600"
  },
  {
    "text": "pretty well but the problem is that uh all the quiry and all the data you need",
    "start": "1181600",
    "end": "1187480"
  },
  {
    "text": "to fetch they have to go over the network so for index um it can be a very",
    "start": "1187480",
    "end": "1194200"
  },
  {
    "text": "problematic sometimes because those postings can be very large uh in your uh",
    "start": "1194200",
    "end": "1199880"
  },
  {
    "text": "time series database block so uh an improvement we did is to add another",
    "start": "1199880",
    "end": "1205600"
  },
  {
    "text": "layer which is an in memory uh lru cache and it's the same process in in St",
    "start": "1205600",
    "end": "1211360"
  },
  {
    "text": "Gateway and uh St Gateway will try to fet from in memory client first then go",
    "start": "1211360",
    "end": "1217440"
  },
  {
    "text": "to the second layer of M cach D so and this pattern uh works pretty well actually because um usually the quiries",
    "start": "1217440",
    "end": "1225080"
  },
  {
    "text": "go to S gateways have the same kind of pattern the same kind of matchs so the",
    "start": "1225080",
    "end": "1230159"
  },
  {
    "text": "hit rate of the in-memory cache is usually very high so uh it itself maybe",
    "start": "1230159",
    "end": "1237039"
  },
  {
    "text": "it can handle maybe 90% of requests so this helps us a lot in terms of",
    "start": "1237039",
    "end": "1243120"
  },
  {
    "text": "bandwith and with multi-level index cache you can do something more advanced",
    "start": "1243120",
    "end": "1248200"
  },
  {
    "text": "with a new feature uh added in SOS called filtered index cache so there are",
    "start": "1248200",
    "end": "1253559"
  },
  {
    "text": "actually three types of index items um one uh posting series and expanded",
    "start": "1253559",
    "end": "1259400"
  },
  {
    "text": "postings so expanded posting is actually the intersection uh of the postings for",
    "start": "1259400",
    "end": "1264799"
  },
  {
    "text": "your query and the size is usually much smaller um than the actual postings so",
    "start": "1264799",
    "end": "1271840"
  },
  {
    "text": "um storing expanded postings is usually more efficient and for some kind of",
    "start": "1271840",
    "end": "1276919"
  },
  {
    "text": "limited capacity scenario especially maybe in memory usage uh so let's say",
    "start": "1276919",
    "end": "1282799"
  },
  {
    "text": "you have only one gigabytes of in memory cache and uh you can maybe store Maybe",
    "start": "1282799",
    "end": "1288600"
  },
  {
    "text": "10K expanded postings items but for postings you can only store maybe 100 so",
    "start": "1288600",
    "end": "1295039"
  },
  {
    "text": "it increase um the heat ratio as well as reducing the evictions and the second",
    "start": "1295039",
    "end": "1300799"
  },
  {
    "text": "layer we can have mam cach d uh which stores maybe series and expanded postings and maybe the third layer we",
    "start": "1300799",
    "end": "1307720"
  },
  {
    "text": "can have another MCD cluster but with different configuration so you can maybe",
    "start": "1307720",
    "end": "1312960"
  },
  {
    "text": "configure it with uh uh external store or actually I don't know how how it's",
    "start": "1312960",
    "end": "1318200"
  },
  {
    "text": "called but it basically allows you to store items in disk so that even though",
    "start": "1318200",
    "end": "1324000"
  },
  {
    "text": "like you trade of some kind of uh quir performance but uh it actually allows uh",
    "start": "1324000",
    "end": "1329679"
  },
  {
    "text": "larger capacity to store more CED items so it probably has better performance",
    "start": "1329679",
    "end": "1335200"
  },
  {
    "text": "than uh fing from S3 uh while working on the multi-level",
    "start": "1335200",
    "end": "1341720"
  },
  {
    "text": "cache uh another Improvement we did is to improve the inmemory cache so the",
    "start": "1341720",
    "end": "1347400"
  },
  {
    "text": "caching cortex is actually the same as the one uh in the T tanos Library which",
    "start": "1347400",
    "end": "1353760"
  },
  {
    "text": "only uses one single uh lock to read and write all the items so we notice that",
    "start": "1353760",
    "end": "1360120"
  },
  {
    "text": "the performance can be very poor under very uh High concurrency environment so",
    "start": "1360120",
    "end": "1366919"
  },
  {
    "text": "what we did is that it's quite simple we just use some kind of bucke tized um",
    "start": "1366919",
    "end": "1372200"
  },
  {
    "text": "stript cache so that um we can have multiple logs to handle different items",
    "start": "1372200",
    "end": "1378240"
  },
  {
    "text": "so as a performance is much better than before so we also have some other",
    "start": "1378240",
    "end": "1384320"
  },
  {
    "text": "amazing PRS we don't have time to go through all of them I just want to show and thanks for all the contributors to",
    "start": "1384320",
    "end": "1390360"
  },
  {
    "text": "help contribute to make CEST more stable yeah we have to go yeah so yeah",
    "start": "1390360",
    "end": "1399559"
  },
  {
    "text": "we have some new features uh we are in in in progress partion compactor we have",
    "start": "1399559",
    "end": "1405279"
  },
  {
    "text": "a PR and also we have uh Native histagram oh sorry native hisr and OTL",
    "start": "1405279",
    "end": "1410799"
  },
  {
    "text": "uh inje so this is what we are going to demo today so uh yeah I will hand over",
    "start": "1410799",
    "end": "1415960"
  },
  {
    "text": "to yeah fish yeah sorry to so I put out this demo um",
    "start": "1415960",
    "end": "1422360"
  },
  {
    "text": "recently it's very simple it's just extending uh this example ofm you can reuse",
    "start": "1422360",
    "end": "1429120"
  },
  {
    "text": "it sorry oh sorry uh again so I I have this",
    "start": "1429120",
    "end": "1437720"
  },
  {
    "text": "demo that I created created very recently is just using the the open Telemetry um uh the open Telemetry example here",
    "start": "1437720",
    "end": "1445400"
  },
  {
    "text": "and you can try yourself uh I'm going to show it really quick uh so um not going",
    "start": "1445400",
    "end": "1452240"
  },
  {
    "text": "to go over the details of of the inside but basically it runs uh cortex uh let me just cut this scrip really",
    "start": "1452240",
    "end": "1462039"
  },
  {
    "text": "quick uh basically it just runs a cortex image is not is not yet merched this",
    "start": "1465360",
    "end": "1470760"
  },
  {
    "text": "feature but it basically is going to run a cortex image and and you can see the last line is just setting up the the LLP",
    "start": "1470760",
    "end": "1477320"
  },
  {
    "text": "endpoint which is uh it's just telling the application where to send the metric that's all you have to do there's no",
    "start": "1477320",
    "end": "1483520"
  },
  {
    "text": "there's no remote right in this setup right um and I'm just going to run it uh which",
    "start": "1483520",
    "end": "1490440"
  },
  {
    "text": "is cortex um run cortex here you want to",
    "start": "1490440",
    "end": "1495720"
  },
  {
    "text": "do it go ahead right so um when we do this the",
    "start": "1495720",
    "end": "1503919"
  },
  {
    "text": "application is running and it's supposed to start sending uh the samples it's configured to be a sample of every 10",
    "start": "1503919",
    "end": "1511760"
  },
  {
    "text": "seconds and we're going to see in the logs that is starting to set so I just",
    "start": "1511760",
    "end": "1517880"
  },
  {
    "text": "posted also the samples that I'm sending to Cortex and the logs as well so we're",
    "start": "1517880",
    "end": "1523360"
  },
  {
    "text": "going to move over to the application this application is basically an end",
    "start": "1523360",
    "end": "1528520"
  },
  {
    "text": "point so you just hit that endpoint and you get a roll dice um you get multiple",
    "start": "1528520",
    "end": "1534320"
  },
  {
    "text": "you can send as many requests from this and uh if we move over to grafana which",
    "start": "1534320",
    "end": "1540080"
  },
  {
    "text": "already has a pre-configured data source pointing to that cortex it should have",
    "start": "1540080",
    "end": "1545279"
  },
  {
    "text": "the metrix let's click here yeah it did work",
    "start": "1545279",
    "end": "1551120"
  },
  {
    "text": "right so these are open lry metrix in cortex",
    "start": "1551120",
    "end": "1556799"
  },
  {
    "text": "um um yeah I don't have anything go back to you the demo yeah uh I'm going to",
    "start": "1556919",
    "end": "1563919"
  },
  {
    "text": "quickly show uh Native Instagram",
    "start": "1563919",
    "end": "1567960"
  },
  {
    "text": "demo so what I have is that I have a application exposing uh Native Matrix so",
    "start": "1571640",
    "end": "1578520"
  },
  {
    "text": "going to quickly show that so there's a application which",
    "start": "1578520",
    "end": "1583880"
  },
  {
    "text": "exposes uh histogram implemented by native hisr so so and I have a Docker",
    "start": "1583880",
    "end": "1590279"
  },
  {
    "text": "compo setup which uh have perissia send data to Cortex so going to quickly",
    "start": "1590279",
    "end": "1598799"
  },
  {
    "text": "write cool and uh let's go to",
    "start": "1601480",
    "end": "1606158"
  },
  {
    "text": "cor oh actually",
    "start": "1607480",
    "end": "1612720"
  },
  {
    "text": "so be we should be able to see it oh yeah actually this one so we can see um",
    "start": "1612720",
    "end": "1621000"
  },
  {
    "text": "the native instrumented uh interested correctly and uh let's try to run",
    "start": "1621000",
    "end": "1630039"
  },
  {
    "text": "quiry so yeah I think it works so if you are familiar with Native histogram you",
    "start": "1639640",
    "end": "1644720"
  },
  {
    "text": "will notice that it can run this query uh successfully with without doing this kind of sum by uh Le which is required",
    "start": "1644720",
    "end": "1653000"
  },
  {
    "text": "by the classical uh histogram uh impr",
    "start": "1653000",
    "end": "1658039"
  },
  {
    "text": "premisus yeah yeah I think that's all for uh our",
    "start": "1658720",
    "end": "1664679"
  },
  {
    "text": "demo so yeah let's go back to our last slide so uh thank you everyone for",
    "start": "1668240",
    "end": "1674720"
  },
  {
    "text": "joining our session so we have our GitHub handles and uh maybe Twitter",
    "start": "1674720",
    "end": "1679960"
  },
  {
    "text": "handles here as well so feel free to talk to us if you have any questions and uh yeah we are looking for maybe um help",
    "start": "1679960",
    "end": "1688279"
  },
  {
    "text": "for for the cortex uh project and feel free to contact us uh on stack Channel or uh anywhere yeah thank you",
    "start": "1688279",
    "end": "1698159"
  },
  {
    "text": "everyone I think we have two minutes for questions any",
    "start": "1702080",
    "end": "1707120"
  },
  {
    "text": "questions can you get the",
    "start": "1707120",
    "end": "1714600"
  },
  {
    "text": "mic hello thank you for your speaking um I just have one question about uh the",
    "start": "1720640",
    "end": "1727200"
  },
  {
    "text": "inmemory L that you've implemented um does it means that um uh",
    "start": "1727200",
    "end": "1734600"
  },
  {
    "text": "now we have to be careful about the memory uh us AG uh of the application",
    "start": "1734600",
    "end": "1740320"
  },
  {
    "text": "mainly uh this is my first question and the second one uh it's um uh yeah I'm",
    "start": "1740320",
    "end": "1745640"
  },
  {
    "text": "really confused because uh uh I was I um",
    "start": "1745640",
    "end": "1750799"
  },
  {
    "text": "I don't know if um what is the main difference with Thanos and cortex because if we want to implement uh a",
    "start": "1750799",
    "end": "1758399"
  },
  {
    "text": "solution uh which one since the code is almost the same uh which one which ones",
    "start": "1758399",
    "end": "1764480"
  },
  {
    "text": "should fit um our needs so yeah just uh",
    "start": "1764480",
    "end": "1769880"
  },
  {
    "text": "yeah uh thanks for the question I think the first question is that whether the application can get maybe memory usage",
    "start": "1769880",
    "end": "1775600"
  },
  {
    "text": "issue when we have the in memory cache so I think it's something you can configure so you can configure the max",
    "start": "1775600",
    "end": "1781840"
  },
  {
    "text": "size of your index cache oh sorry in memory index cache uh in my case maybe it's 1 gigabytes and you can also",
    "start": "1781840",
    "end": "1788640"
  },
  {
    "text": "configure the max allowed size of the item so maybe it's uh maybe 10 megabytes",
    "start": "1788640",
    "end": "1794080"
  },
  {
    "text": "or something so the memory usage should be under control so yeah based on your",
    "start": "1794080",
    "end": "1799919"
  },
  {
    "text": "setting and the second question is about maybe the difference between cortex and",
    "start": "1799919",
    "end": "1805240"
  },
  {
    "text": "Thanos so I think nowadays these two project are kind of very similar but at",
    "start": "1805240",
    "end": "1811000"
  },
  {
    "text": "the beginning they come from maybe different um use cases uh cortex as the",
    "start": "1811000",
    "end": "1817080"
  },
  {
    "text": "beginning is for multi-tenant and also uh remote right based and sound at the",
    "start": "1817080",
    "end": "1823519"
  },
  {
    "text": "beginning is mainly sidecar based uh in order to address the Federation issue uh in premisus and uh but the these two",
    "start": "1823519",
    "end": "1831640"
  },
  {
    "text": "project keeps evolving and tanos has a uh receiver mode which basically quite",
    "start": "1831640",
    "end": "1837039"
  },
  {
    "text": "similar to Cortex and cortex has the long-term storage which you use SOS code",
    "start": "1837039",
    "end": "1842840"
  },
  {
    "text": "to have the compactor and bucket storage so nowadays like based on your um use",
    "start": "1842840",
    "end": "1847960"
  },
  {
    "text": "case you can choose maybe analism but I would say um if you are um maybe a small",
    "start": "1847960",
    "end": "1853039"
  },
  {
    "text": "scale or you doesn't need some kind of uh multi- tendency or limit control",
    "start": "1853039",
    "end": "1858440"
  },
  {
    "text": "feature maybe SOS works well but uh if you manage uh maybe a platform team that",
    "start": "1858440",
    "end": "1863600"
  },
  {
    "text": "you want to provide service to different um sub teams and you want to have limits",
    "start": "1863600",
    "end": "1869000"
  },
  {
    "text": "in place um and and maybe better multi tensive feature you can choose",
    "start": "1869000",
    "end": "1875559"
  },
  {
    "text": "quartex is is that answer the question yeah awesome",
    "start": "1875559",
    "end": "1882519"
  },
  {
    "text": "um over time I think one question very one",
    "start": "1882519",
    "end": "1887679"
  },
  {
    "text": "question more one more",
    "start": "1887679",
    "end": "1890919"
  },
  {
    "text": "question it's probably a tricky one what's the limitation of Cortex for",
    "start": "1896080",
    "end": "1901240"
  },
  {
    "text": "example uh what's the maximum amount of data that I can store in",
    "start": "1901240",
    "end": "1907320"
  },
  {
    "text": "quartex do this one uh I can take I can take it first part",
    "start": "1907320",
    "end": "1913320"
  },
  {
    "text": "um I haven't found any so to the sizes that I am I haven't",
    "start": "1913320",
    "end": "1919360"
  },
  {
    "text": "found yet that place and but I know there are limits there are limits",
    "start": "1919360",
    "end": "1924399"
  },
  {
    "text": "because I've starting to see in the compactor some issues some we've seen before some issues with active series",
    "start": "1924399",
    "end": "1931799"
  },
  {
    "text": "there those issues have been tackled to a degree uh but like building active",
    "start": "1931799",
    "end": "1939279"
  },
  {
    "text": "series is probably uh a lot for a single tenant I would say and I I mean not I think the",
    "start": "1939279",
    "end": "1947399"
  },
  {
    "text": "problems I need to be specific is not most of the problems that I see in terms of scaling cortex are around the query",
    "start": "1947399",
    "end": "1955159"
  },
  {
    "text": "part more than the ingestion part the ingestion part kind of like works but when it comes back to a query part it",
    "start": "1955159",
    "end": "1961960"
  },
  {
    "text": "becomes harder to get those samples out and even if you get the samples out",
    "start": "1961960",
    "end": "1967720"
  },
  {
    "text": "sometimes you get the samples out and the dashboarding tool just fails so one",
    "start": "1967720",
    "end": "1973519"
  },
  {
    "text": "of the things that I found is really important when you're thinking about high cutting",
    "start": "1973519",
    "end": "1978799"
  },
  {
    "text": "is like if it if it's really useful for you and uh so one of my Approach",
    "start": "1978799",
    "end": "1985240"
  },
  {
    "text": "personal approach and also the the the team that I work with is that we always uh try to see the usability of it if",
    "start": "1985240",
    "end": "1993360"
  },
  {
    "text": "it's really necessary more than if it's possible so that's why probably I haven't reached a point where I need it",
    "start": "1993360",
    "end": "1999440"
  },
  {
    "text": "does that answer the question yes thank you good that was it thank you",
    "start": "1999440",
    "end": "2009760"
  }
]