[
  {
    "text": "okay let's get started welcome to my",
    "start": "939",
    "end": "5060"
  },
  {
    "text": "session about your physical architecture",
    "start": "5060",
    "end": "7189"
  },
  {
    "text": "and the features this is the deep dive",
    "start": "7189",
    "end": "10099"
  },
  {
    "text": "session so I assume the audience to have",
    "start": "10099",
    "end": "12320"
  },
  {
    "text": "some level of similarity with",
    "start": "12320",
    "end": "13669"
  },
  {
    "text": "geophysical in general",
    "start": "13669",
    "end": "16000"
  },
  {
    "text": "my name is usually a messenger at Google",
    "start": "16000",
    "end": "20060"
  },
  {
    "text": "and I've been working on the chair",
    "start": "20060",
    "end": "21530"
  },
  {
    "text": "physical project for about two years",
    "start": "21530",
    "end": "24820"
  },
  {
    "text": "before we dive into the main topic of",
    "start": "24820",
    "end": "27530"
  },
  {
    "text": "today I would like to give you guys a",
    "start": "27530",
    "end": "29690"
  },
  {
    "text": "short and brief introduction to our PC",
    "start": "29690",
    "end": "32890"
  },
  {
    "text": "because you guys have been hearing about",
    "start": "32890",
    "end": "35059"
  },
  {
    "text": "kubinashi and many other stuff for the",
    "start": "35059",
    "end": "37370"
  },
  {
    "text": "past few days so I need I want to do a",
    "start": "37370",
    "end": "39920"
  },
  {
    "text": "contacts with you",
    "start": "39920",
    "end": "41210"
  },
  {
    "text": "contacts which with you guys so what is",
    "start": "41210",
    "end": "43460"
  },
  {
    "text": "your PC gerrae PC is their modern",
    "start": "43460",
    "end": "46039"
  },
  {
    "text": "open-source hyper homeless RPC framework",
    "start": "46039",
    "end": "48620"
  },
  {
    "text": "so a sports force multiple languages and",
    "start": "48620",
    "end": "51469"
  },
  {
    "text": "is a cross-platform and we design our",
    "start": "51469",
    "end": "55159"
  },
  {
    "text": "API carefully to make our components",
    "start": "55159",
    "end": "57589"
  },
  {
    "text": "pluggable so user can choose the",
    "start": "57589",
    "end": "59929"
  },
  {
    "text": "implementation or even implement them on",
    "start": "59929",
    "end": "62539"
  },
  {
    "text": "their own stuff that best suits your",
    "start": "62539",
    "end": "64850"
  },
  {
    "text": "needs and one more thing to highlight",
    "start": "64850",
    "end": "66920"
  },
  {
    "text": "about your PC's is rich features we have",
    "start": "66920",
    "end": "69710"
  },
  {
    "text": "core features like bi-directional",
    "start": "69710",
    "end": "71750"
  },
  {
    "text": "streaming flow control and many other",
    "start": "71750",
    "end": "74060"
  },
  {
    "text": "add-on features like binary logging",
    "start": "74060",
    "end": "76220"
  },
  {
    "text": "channel D tracing so it can provide it",
    "start": "76220",
    "end": "80240"
  },
  {
    "text": "help user better manage configure or",
    "start": "80240",
    "end": "83000"
  },
  {
    "text": "debug the applications based on top of",
    "start": "83000",
    "end": "85700"
  },
  {
    "text": "your PC this is a picture that",
    "start": "85700",
    "end": "88810"
  },
  {
    "text": "illustrates our typical use cases so a",
    "start": "88810",
    "end": "93320"
  },
  {
    "text": "new user on mobile web or desktop can",
    "start": "93320",
    "end": "96320"
  },
  {
    "text": "use your PC to communicate with micro",
    "start": "96320",
    "end": "99860"
  },
  {
    "text": "services or access cloud api's and",
    "start": "99860",
    "end": "102440"
  },
  {
    "text": "between micro services they can also",
    "start": "102440",
    "end": "104570"
  },
  {
    "text": "communicate with your PC moreover and",
    "start": "104570",
    "end": "107870"
  },
  {
    "text": "similarly this micro service can still",
    "start": "107870",
    "end": "111710"
  },
  {
    "text": "use Java C to access those claw api's so",
    "start": "111710",
    "end": "115490"
  },
  {
    "text": "in summary your PC is a great tool to",
    "start": "115490",
    "end": "118610"
  },
  {
    "text": "help user communicate transparently in a",
    "start": "118610",
    "end": "121670"
  },
  {
    "text": "heterogeneous environment today and here",
    "start": "121670",
    "end": "125690"
  },
  {
    "text": "are some our adopters and there's just a",
    "start": "125690",
    "end": "128509"
  },
  {
    "text": "few of and there's a lot more out there",
    "start": "128509",
    "end": "130459"
  },
  {
    "text": "this is just some examples and our",
    "start": "130459",
    "end": "133040"
  },
  {
    "text": "adopters number of doctors are quickly",
    "start": "133040",
    "end": "135500"
  },
  {
    "text": "increasing as I said before ERP system",
    "start": "135500",
    "end": "140569"
  },
  {
    "text": "for multiple languages and among those",
    "start": "140569",
    "end": "142790"
  },
  {
    "text": "languages we have three implementation",
    "start": "142790",
    "end": "145459"
  },
  {
    "text": "that's natively implemented there are",
    "start": "145459",
    "end": "148400"
  },
  {
    "text": "PCC Jerry Siegel and Joe PC Java and all",
    "start": "148400",
    "end": "152209"
  },
  {
    "text": "the other languages are a wrapper around",
    "start": "152209",
    "end": "153859"
  },
  {
    "text": "the jar PCC core implementation so today",
    "start": "153859",
    "end": "156769"
  },
  {
    "text": "I'm going to talk about the Derby Seco",
    "start": "156769",
    "end": "158870"
  },
  {
    "text": "implementation which is one of the three",
    "start": "158870",
    "end": "161090"
  },
  {
    "text": "native implementation",
    "start": "161090",
    "end": "163950"
  },
  {
    "text": "and a little bit of history about your",
    "start": "163950",
    "end": "167040"
  },
  {
    "text": "physical so we open sourced in February",
    "start": "167040",
    "end": "169739"
  },
  {
    "text": "2015 and we get a better version out in",
    "start": "169739",
    "end": "172950"
  },
  {
    "text": "September 2015",
    "start": "172950",
    "end": "174480"
  },
  {
    "text": "next we Jade in August 2016 and we join",
    "start": "174480",
    "end": "178170"
  },
  {
    "text": "the sea NSF March last year so the the",
    "start": "178170",
    "end": "182250"
  },
  {
    "text": "line here shows our github repo start",
    "start": "182250",
    "end": "185280"
  },
  {
    "text": "strength and you can see that we have a",
    "start": "185280",
    "end": "187349"
  },
  {
    "text": "very good upward we can we have a very",
    "start": "187349",
    "end": "190650"
  },
  {
    "text": "good upward trend here and we almost",
    "start": "190650",
    "end": "192989"
  },
  {
    "text": "have almost the same solid starts by",
    "start": "192989",
    "end": "196049"
  },
  {
    "text": "today ok now let's go to the main topic",
    "start": "196049",
    "end": "200340"
  },
  {
    "text": "of today so what I want to achieve from",
    "start": "200340",
    "end": "202950"
  },
  {
    "text": "the story is to giving you guys a good",
    "start": "202950",
    "end": "204989"
  },
  {
    "text": "and fun foundation for understanding the",
    "start": "204989",
    "end": "206940"
  },
  {
    "text": "quarter physic code your PC",
    "start": "206940",
    "end": "209670"
  },
  {
    "text": "functionality so later when you explore",
    "start": "209670",
    "end": "213299"
  },
  {
    "text": "our code base you feel more confident",
    "start": "213299",
    "end": "215640"
  },
  {
    "text": "and more comfortable I hope that at the",
    "start": "215640",
    "end": "219810"
  },
  {
    "text": "end of the story you guys can have sort",
    "start": "219810",
    "end": "221760"
  },
  {
    "text": "of a jarppi seen map in your mind so you",
    "start": "221760",
    "end": "224819"
  },
  {
    "text": "when you later diving on what dive into",
    "start": "224819",
    "end": "227459"
  },
  {
    "text": "our code base you will never get lost",
    "start": "227459",
    "end": "229019"
  },
  {
    "text": "and soldier your PC is many about two",
    "start": "229019",
    "end": "232350"
  },
  {
    "text": "things first is managing the life of",
    "start": "232350",
    "end": "235250"
  },
  {
    "text": "network connections and the second is",
    "start": "235250",
    "end": "238079"
  },
  {
    "text": "managing the average cost over those",
    "start": "238079",
    "end": "239910"
  },
  {
    "text": "network connections so this talk will be",
    "start": "239910",
    "end": "242250"
  },
  {
    "text": "focus on these two things so first let's",
    "start": "242250",
    "end": "247709"
  },
  {
    "text": "look at the code stack so we have the",
    "start": "247709",
    "end": "250260"
  },
  {
    "text": "transport of transport layer on the",
    "start": "250260",
    "end": "252359"
  },
  {
    "text": "bottom and we have the HTTP to transport",
    "start": "252359",
    "end": "255389"
  },
  {
    "text": "by default on top of that is the GPC",
    "start": "255389",
    "end": "258030"
  },
  {
    "text": "framework layer it contains the main",
    "start": "258030",
    "end": "260340"
  },
  {
    "text": "load row of G RPC and the next is the JP",
    "start": "260340",
    "end": "263400"
  },
  {
    "text": "capr layer and we also have another",
    "start": "263400",
    "end": "265440"
  },
  {
    "text": "optional layer or generated code of API",
    "start": "265440",
    "end": "269010"
  },
  {
    "text": "that's ruptured around the join PC API",
    "start": "269010",
    "end": "271470"
  },
  {
    "text": "user in most cases user and interact",
    "start": "271470",
    "end": "275010"
  },
  {
    "text": "with post generated code API and your PC",
    "start": "275010",
    "end": "277740"
  },
  {
    "text": "API so what are the operations involving",
    "start": "277740",
    "end": "282210"
  },
  {
    "text": "at your PC there are basically four of",
    "start": "282210",
    "end": "284250"
  },
  {
    "text": "them so both client and server can sell",
    "start": "284250",
    "end": "286710"
  },
  {
    "text": "had her to set up a physical and next it",
    "start": "286710",
    "end": "289650"
  },
  {
    "text": "has a message which is what an RPC all",
    "start": "289650",
    "end": "292380"
  },
  {
    "text": "about and to end the RPC call client can",
    "start": "292380",
    "end": "296159"
  },
  {
    "text": "send",
    "start": "296159",
    "end": "296670"
  },
  {
    "text": "close to server so to lessor and know",
    "start": "296670",
    "end": "299730"
  },
  {
    "text": "that he has done standing all the",
    "start": "299730",
    "end": "301050"
  },
  {
    "text": "message you want to send and finally sir",
    "start": "301050",
    "end": "303720"
  },
  {
    "text": "was Sangha trailer to to to client which",
    "start": "303720",
    "end": "308130"
  },
  {
    "text": "contains the final status of the RPC and",
    "start": "308130",
    "end": "310650"
  },
  {
    "text": "mark the RPC as complete so the picture",
    "start": "310650",
    "end": "314400"
  },
  {
    "text": "on the right hand side illustrates the",
    "start": "314400",
    "end": "317910"
  },
  {
    "text": "four basic operations in a normal single",
    "start": "317910",
    "end": "320520"
  },
  {
    "text": "request and a single response RPC",
    "start": "320520",
    "end": "322650"
  },
  {
    "text": "setting so client well first and the",
    "start": "322650",
    "end": "324930"
  },
  {
    "text": "client header to set up the RPC code at",
    "start": "324930",
    "end": "327360"
  },
  {
    "text": "the server side then it was sending the",
    "start": "327360",
    "end": "329460"
  },
  {
    "text": "request message to server next it will",
    "start": "329460",
    "end": "331830"
  },
  {
    "text": "clue you will send a hop close to server",
    "start": "331830",
    "end": "334440"
  },
  {
    "text": "to say that I'm done with sending all",
    "start": "334440",
    "end": "336570"
  },
  {
    "text": "the messages and the server will send",
    "start": "336570",
    "end": "339120"
  },
  {
    "text": "first and the header to claim to set up",
    "start": "339120",
    "end": "342060"
  },
  {
    "text": "the RPC at the client side then send the",
    "start": "342060",
    "end": "345200"
  },
  {
    "text": "response message to client and finally",
    "start": "345200",
    "end": "348210"
  },
  {
    "text": "says a trailer containing the final",
    "start": "348210",
    "end": "350250"
  },
  {
    "text": "status of the RPC to mark the RPC as",
    "start": "350250",
    "end": "352890"
  },
  {
    "text": "complete engine PC there are we",
    "start": "352890",
    "end": "356910"
  },
  {
    "text": "categorize RPC into four different types",
    "start": "356910",
    "end": "359930"
  },
  {
    "text": "by the messaging pattern so the first",
    "start": "359930",
    "end": "363390"
  },
  {
    "text": "one is the unary four unary type",
    "start": "363390",
    "end": "366180"
  },
  {
    "text": "basically client will send a single",
    "start": "366180",
    "end": "368100"
  },
  {
    "text": "message to silver and the service and a",
    "start": "368100",
    "end": "370890"
  },
  {
    "text": "single message back to client and this",
    "start": "370890",
    "end": "373710"
  },
  {
    "text": "is the most commonly used type of RPC",
    "start": "373710",
    "end": "375810"
  },
  {
    "text": "nowadays and the second type is the",
    "start": "375810",
    "end": "378060"
  },
  {
    "text": "client streaming type for this type",
    "start": "378060",
    "end": "380010"
  },
  {
    "text": "client was from Boston send a stream of",
    "start": "380010",
    "end": "383120"
  },
  {
    "text": "send a stream or message to a server and",
    "start": "383120",
    "end": "385860"
  },
  {
    "text": "the server will respond with a single",
    "start": "385860",
    "end": "387870"
  },
  {
    "text": "message and similarly for service",
    "start": "387870",
    "end": "391200"
  },
  {
    "text": "streaming as kind of a send a single",
    "start": "391200",
    "end": "393390"
  },
  {
    "text": "message to server and the server will",
    "start": "393390",
    "end": "395220"
  },
  {
    "text": "stream multiple message back to client",
    "start": "395220",
    "end": "397730"
  },
  {
    "text": "finally the Biden streaming is the",
    "start": "397730",
    "end": "400200"
  },
  {
    "text": "shorthand for bi-directional streaming",
    "start": "400200",
    "end": "402240"
  },
  {
    "text": "this is the so for this type of RPC",
    "start": "402240",
    "end": "405060"
  },
  {
    "text": "there's no restriction on the message",
    "start": "405060",
    "end": "407280"
  },
  {
    "text": "sent by the client or the server and",
    "start": "407280",
    "end": "410480"
  },
  {
    "text": "actually GRP see implemented production",
    "start": "410480",
    "end": "414270"
  },
  {
    "text": "of streaming natively and the all the",
    "start": "414270",
    "end": "416910"
  },
  {
    "text": "other three types are just special cases",
    "start": "416910",
    "end": "419010"
  },
  {
    "text": "of the Medeiros no streaming the picture",
    "start": "419010",
    "end": "421830"
  },
  {
    "text": "on the right hand side illustrate our at",
    "start": "421830",
    "end": "423870"
  },
  {
    "text": "the concept of directional streaming",
    "start": "423870",
    "end": "425790"
  },
  {
    "text": "essentially there is a river a stream on",
    "start": "425790",
    "end": "428040"
  },
  {
    "text": "both client side and server side",
    "start": "428040",
    "end": "430139"
  },
  {
    "text": "and this to stream operate completely",
    "start": "430139",
    "end": "432360"
  },
  {
    "text": "different independently allowing clients",
    "start": "432360",
    "end": "434969"
  },
  {
    "text": "and the server to read and write in",
    "start": "434969",
    "end": "436919"
  },
  {
    "text": "whatever order they like now let's go",
    "start": "436919",
    "end": "441569"
  },
  {
    "text": "through the life on an RPC to explore",
    "start": "441569",
    "end": "445439"
  },
  {
    "text": "the your PC core functionalities here is",
    "start": "445439",
    "end": "448680"
  },
  {
    "text": "the setup for our story today so we all",
    "start": "448680",
    "end": "451620"
  },
  {
    "text": "have a claim that want to route chat",
    "start": "451620",
    "end": "453810"
  },
  {
    "text": "with the route guy service under the",
    "start": "453810",
    "end": "456090"
  },
  {
    "text": "host name ABC telex Y Z the route is a",
    "start": "456090",
    "end": "459479"
  },
  {
    "text": "is a RPC method supported by the route",
    "start": "459479",
    "end": "462599"
  },
  {
    "text": "guide service it is a bi-directional",
    "start": "462599",
    "end": "465590"
  },
  {
    "text": "streaming opposite hype and basically is",
    "start": "465590",
    "end": "468599"
  },
  {
    "text": "the client just exchanged the location",
    "start": "468599",
    "end": "471090"
  },
  {
    "text": "info with the resistor broadcast service",
    "start": "471090",
    "end": "474060"
  },
  {
    "text": "continuously and we also let's also",
    "start": "474060",
    "end": "478409"
  },
  {
    "text": "assume that for the host name ABC that",
    "start": "478409",
    "end": "480900"
  },
  {
    "text": "XYZ we have three backends to serve a",
    "start": "480900",
    "end": "484050"
  },
  {
    "text": "surrounded our hostname which is a very",
    "start": "484050",
    "end": "486330"
  },
  {
    "text": "common casing nowadays to do load",
    "start": "486330",
    "end": "488310"
  },
  {
    "text": "balancing",
    "start": "488310",
    "end": "490339"
  },
  {
    "text": "so so the first step to making our",
    "start": "490990",
    "end": "494960"
  },
  {
    "text": "physical will be to create a channel to",
    "start": "494960",
    "end": "497360"
  },
  {
    "text": "transmit the RPC code if there's no",
    "start": "497360",
    "end": "499490"
  },
  {
    "text": "easiest in one that you can use so let's",
    "start": "499490",
    "end": "501890"
  },
  {
    "text": "see how to create a channel in new RPC",
    "start": "501890",
    "end": "504550"
  },
  {
    "text": "before that last differential will very",
    "start": "504550",
    "end": "507350"
  },
  {
    "text": "important concept in your PC which are",
    "start": "507350",
    "end": "509810"
  },
  {
    "text": "channel and the sub Channel so channel",
    "start": "509810",
    "end": "512780"
  },
  {
    "text": "is an abstraction over connection that",
    "start": "512780",
    "end": "514909"
  },
  {
    "text": "an RPC can be issued to you can simply",
    "start": "514909",
    "end": "517760"
  },
  {
    "text": "think of it as a a logical connection",
    "start": "517760",
    "end": "520159"
  },
  {
    "text": "between client and the host name target",
    "start": "520159",
    "end": "523780"
  },
  {
    "text": "next is the sub Channel it is an",
    "start": "523780",
    "end": "526640"
  },
  {
    "text": "abstraction over a connection and use",
    "start": "526640",
    "end": "528980"
  },
  {
    "text": "for a lot of balancing you can simply",
    "start": "528980",
    "end": "531230"
  },
  {
    "text": "regard it as a connection between the",
    "start": "531230",
    "end": "533870"
  },
  {
    "text": "client and an individual back end",
    "start": "533870",
    "end": "538000"
  },
  {
    "text": "now let's look at the step to create a",
    "start": "538810",
    "end": "541430"
  },
  {
    "text": "channel so the first the user will diode",
    "start": "541430",
    "end": "545570"
  },
  {
    "text": "will call diode who will call the",
    "start": "545570",
    "end": "548450"
  },
  {
    "text": "opposite diode to connect to the host",
    "start": "548450",
    "end": "550160"
  },
  {
    "text": "name and it prefix the host name by the",
    "start": "550160",
    "end": "552950"
  },
  {
    "text": "scheme that the host name is fully and",
    "start": "552950",
    "end": "555530"
  },
  {
    "text": "here we are using the DNS scheme and so",
    "start": "555530",
    "end": "558980"
  },
  {
    "text": "Champy's you've got the dial function",
    "start": "558980",
    "end": "560990"
  },
  {
    "text": "code it will parse the target stream and",
    "start": "560990",
    "end": "563510"
  },
  {
    "text": "starts the resolver",
    "start": "563510",
    "end": "564860"
  },
  {
    "text": "according to the stream here since we",
    "start": "564860",
    "end": "567080"
  },
  {
    "text": "are using a DNS dream work will will",
    "start": "567080",
    "end": "569690"
  },
  {
    "text": "only initiate start a DNS resolver",
    "start": "569690",
    "end": "574690"
  },
  {
    "text": "resolver was and then the resolver work",
    "start": "575350",
    "end": "578269"
  },
  {
    "text": "or to go to to go to resolve the",
    "start": "578269",
    "end": "580609"
  },
  {
    "text": "hostname and return the addresses from",
    "start": "580609",
    "end": "584119"
  },
  {
    "text": "return the resolved addresses to the ER",
    "start": "584119",
    "end": "587689"
  },
  {
    "text": "PC and there is an optional service on",
    "start": "587689",
    "end": "590029"
  },
  {
    "text": "Theoden cows will be reserved at the",
    "start": "590029",
    "end": "591739"
  },
  {
    "text": "same time",
    "start": "591739",
    "end": "593360"
  },
  {
    "text": "and the ones that your PC receives the",
    "start": "593360",
    "end": "596509"
  },
  {
    "text": "address list it will start a balancer",
    "start": "596509",
    "end": "599809"
  },
  {
    "text": "based on the user config or the service",
    "start": "599809",
    "end": "601850"
  },
  {
    "text": "and fake both of them can configure to",
    "start": "601850",
    "end": "603589"
  },
  {
    "text": "configure the parents are to be used for",
    "start": "603589",
    "end": "605779"
  },
  {
    "text": "this channel and so your PC will start",
    "start": "605779",
    "end": "608540"
  },
  {
    "text": "let's assume that we your PC decides to",
    "start": "608540",
    "end": "611600"
  },
  {
    "text": "use the wrong wrong robin balancer so it",
    "start": "611600",
    "end": "613970"
  },
  {
    "text": "was starts the wrong robin balancer and",
    "start": "613970",
    "end": "615949"
  },
  {
    "text": "the past around return a list of address",
    "start": "615949",
    "end": "620179"
  },
  {
    "text": "to the balancer so the bouncer will",
    "start": "620179",
    "end": "623089"
  },
  {
    "text": "depending on its balancing policy it",
    "start": "623089",
    "end": "625069"
  },
  {
    "text": "will create connections to the well it",
    "start": "625069",
    "end": "627559"
  },
  {
    "text": "will instruct your PC to connect to",
    "start": "627559",
    "end": "629869"
  },
  {
    "text": "create connections to the back ends a",
    "start": "629869",
    "end": "632569"
  },
  {
    "text": "little bit about balancer here so in",
    "start": "632569",
    "end": "635209"
  },
  {
    "text": "Jeff you see we have been to two",
    "start": "635209",
    "end": "638029"
  },
  {
    "text": "balancer which are wrong robbie and a",
    "start": "638029",
    "end": "640399"
  },
  {
    "text": "peek first so Ronghua being baffled by",
    "start": "640399",
    "end": "642889"
  },
  {
    "text": "rubbing balancer either what tries to",
    "start": "642889",
    "end": "644809"
  },
  {
    "text": "connects to all the back ends that",
    "start": "644809",
    "end": "646429"
  },
  {
    "text": "returns by the resolver and for the pic",
    "start": "646429",
    "end": "649879"
  },
  {
    "text": "first balancer it will connects onto",
    "start": "649879",
    "end": "651889"
  },
  {
    "text": "only one of the back hands return the by",
    "start": "651889",
    "end": "654709"
  },
  {
    "text": "the resolver so and the peak first and",
    "start": "654709",
    "end": "657559"
  },
  {
    "text": "the peak first balancer is or whatever",
    "start": "657559",
    "end": "659480"
  },
  {
    "text": "default balancer into our PC",
    "start": "659480",
    "end": "662770"
  },
  {
    "text": "so so the journalist advanced instructed",
    "start": "662770",
    "end": "667310"
  },
  {
    "text": "repositories established connections and",
    "start": "667310",
    "end": "670220"
  },
  {
    "text": "AM PC will returns a client count which",
    "start": "670220",
    "end": "673190"
  },
  {
    "text": "is an abstraction of channel inter",
    "start": "673190",
    "end": "674900"
  },
  {
    "text": "physical to user so user wallet will",
    "start": "674900",
    "end": "678860"
  },
  {
    "text": "later then use the kind country to",
    "start": "678860",
    "end": "681380"
  },
  {
    "text": "initialize the generated code stop that",
    "start": "681380",
    "end": "684980"
  },
  {
    "text": "user can turn invoke RPC method on top",
    "start": "684980",
    "end": "688280"
  },
  {
    "text": "of",
    "start": "688280",
    "end": "690460"
  },
  {
    "text": "so last to me and look at how balancer",
    "start": "691050",
    "end": "694360"
  },
  {
    "text": "in structure RPC to create those",
    "start": "694360",
    "end": "695860"
  },
  {
    "text": "connections to the backend so balancer",
    "start": "695860",
    "end": "698769"
  },
  {
    "text": "was the last created sub channel to IP",
    "start": "698769",
    "end": "701470"
  },
  {
    "text": "address 1 2 3 4 which the first pack",
    "start": "701470",
    "end": "703480"
  },
  {
    "text": "which is the first back end and the DRAM",
    "start": "703480",
    "end": "706120"
  },
  {
    "text": "PC will call the function quit transport",
    "start": "706120",
    "end": "708360"
  },
  {
    "text": "the trend and it will start a procedure",
    "start": "708360",
    "end": "712029"
  },
  {
    "text": "to create a transport credit report",
    "start": "712029",
    "end": "714940"
  },
  {
    "text": "without that backhand and the transport",
    "start": "714940",
    "end": "717760"
  },
  {
    "text": "the world then kind of tries to connect",
    "start": "717760",
    "end": "719500"
  },
  {
    "text": "to the server essentially here is doing",
    "start": "719500",
    "end": "721870"
  },
  {
    "text": "a network dial and then on the server",
    "start": "721870",
    "end": "724810"
  },
  {
    "text": "side we need received a signal that",
    "start": "724810",
    "end": "726760"
  },
  {
    "text": "there is a coming connection request so",
    "start": "726760",
    "end": "729579"
  },
  {
    "text": "it will pass along the info to the G RPC",
    "start": "729579",
    "end": "732160"
  },
  {
    "text": "saying that there's a new coming",
    "start": "732160",
    "end": "733570"
  },
  {
    "text": "connection whether you want to accept it",
    "start": "733570",
    "end": "735459"
  },
  {
    "text": "or not your PC will decide - ok let's",
    "start": "735459",
    "end": "738339"
  },
  {
    "text": "accept the connection and the transport",
    "start": "738339",
    "end": "741010"
  },
  {
    "text": "will pass alone to accept a signal back",
    "start": "741010",
    "end": "743740"
  },
  {
    "text": "to the client transport and then the",
    "start": "743740",
    "end": "746920"
  },
  {
    "text": "transfer now by now it's like fully set",
    "start": "746920",
    "end": "750040"
  },
  {
    "text": "up so the transport will return and",
    "start": "750040",
    "end": "753310"
  },
  {
    "text": "return itself as a ready transport to G",
    "start": "753310",
    "end": "755890"
  },
  {
    "text": "RPC so so each sub channel creation",
    "start": "755890",
    "end": "760300"
  },
  {
    "text": "process is following the step from 1 to",
    "start": "760300",
    "end": "762699"
  },
  {
    "text": "7 and the passo may request multiple",
    "start": "762699",
    "end": "765399"
  },
  {
    "text": "connection to be created and they are",
    "start": "765399",
    "end": "767260"
  },
  {
    "text": "all under the same procedure here",
    "start": "767260",
    "end": "771329"
  },
  {
    "text": "and now we have the channel we are ready",
    "start": "771460",
    "end": "774610"
  },
  {
    "text": "to create an RPC over the channel so -",
    "start": "774610",
    "end": "780100"
  },
  {
    "text": "so the RPC started by the user calling",
    "start": "780100",
    "end": "784930"
  },
  {
    "text": "the root chat coroner each a method on",
    "start": "784930",
    "end": "787839"
  },
  {
    "text": "the prod under generated code provided",
    "start": "787839",
    "end": "790440"
  },
  {
    "text": "stop initial initiated by the clang come",
    "start": "790440",
    "end": "794020"
  },
  {
    "text": "returned by the char PC and then the",
    "start": "794020",
    "end": "799750"
  },
  {
    "text": "judge the generated code were called a",
    "start": "799750",
    "end": "801610"
  },
  {
    "text": "new new stream function - - is to let",
    "start": "801610",
    "end": "805510"
  },
  {
    "text": "your PC node - to create a new stream",
    "start": "805510",
    "end": "808300"
  },
  {
    "text": "for the RPC and equipment and now quick",
    "start": "808300",
    "end": "811480"
  },
  {
    "text": "tip on here is that in your PC no matter",
    "start": "811480",
    "end": "814630"
  },
  {
    "text": "what is the generated code layer stream",
    "start": "814630",
    "end": "818290"
  },
  {
    "text": "or GOP silly or stream or strand for",
    "start": "818290",
    "end": "820600"
  },
  {
    "text": "layering they all correspond to RPC code",
    "start": "820600",
    "end": "822880"
  },
  {
    "text": "so you can simply equal them eco stream",
    "start": "822880",
    "end": "826630"
  },
  {
    "text": "with RPC code when you're looking at our",
    "start": "826630",
    "end": "828730"
  },
  {
    "text": "code base so champion will tries to",
    "start": "828730",
    "end": "831880"
  },
  {
    "text": "create as new stream for the RPC what it",
    "start": "831880",
    "end": "834760"
  },
  {
    "text": "does is it will consult the balance of",
    "start": "834760",
    "end": "836920"
  },
  {
    "text": "which suction oh it needs to use to",
    "start": "836920",
    "end": "839830"
  },
  {
    "text": "create the to create a stream to",
    "start": "839830",
    "end": "842670"
  },
  {
    "text": "basically transmitted to transmitter RPC",
    "start": "842670",
    "end": "846339"
  },
  {
    "text": "over so the balancer world depends on",
    "start": "846339",
    "end": "848529"
  },
  {
    "text": "its load balancing policy it will choose",
    "start": "848529",
    "end": "850690"
  },
  {
    "text": "a ready subchannel to trance trust me",
    "start": "850690",
    "end": "854140"
  },
  {
    "text": "the RPC and the returns the decision",
    "start": "854140",
    "end": "856420"
  },
  {
    "text": "back to G RPC and your PC will then",
    "start": "856420",
    "end": "860220"
  },
  {
    "text": "create the transport stream on the",
    "start": "860220",
    "end": "862560"
  },
  {
    "text": "underlying transport of the chosen sub",
    "start": "862560",
    "end": "865330"
  },
  {
    "text": "channel by the balancer and create a",
    "start": "865330",
    "end": "867459"
  },
  {
    "text": "transport stream and the transport will",
    "start": "867459",
    "end": "870880"
  },
  {
    "text": "do the stream initiate initiation by",
    "start": "870880",
    "end": "873910"
  },
  {
    "text": "sending the header to the server side to",
    "start": "873910",
    "end": "876070"
  },
  {
    "text": "- initiator so as to initiate the stream",
    "start": "876070",
    "end": "878890"
  },
  {
    "text": "and also add the server side and next",
    "start": "878890",
    "end": "883850"
  },
  {
    "text": "when the transport returns the",
    "start": "883850",
    "end": "885770"
  },
  {
    "text": "transports train to to our PC jam PC",
    "start": "885770",
    "end": "888230"
  },
  {
    "text": "will wraps will create a wrapper around",
    "start": "888230",
    "end": "890390"
  },
  {
    "text": "the transport stream to provide",
    "start": "890390",
    "end": "893150"
  },
  {
    "text": "functionality like compression encoding",
    "start": "893150",
    "end": "896540"
  },
  {
    "text": "retry and many other features and return",
    "start": "896540",
    "end": "900320"
  },
  {
    "text": "the rap and the return the rap stream to",
    "start": "900320",
    "end": "902540"
  },
  {
    "text": "the generated code and finally generate",
    "start": "902540",
    "end": "905030"
  },
  {
    "text": "occur well created a very C wrapper",
    "start": "905030",
    "end": "908270"
  },
  {
    "text": "around the ER PC just pc layer stream to",
    "start": "908270",
    "end": "912860"
  },
  {
    "text": "provide type Sinclair type safety to the",
    "start": "912860",
    "end": "915170"
  },
  {
    "text": "user which is much better which is a",
    "start": "915170",
    "end": "917420"
  },
  {
    "text": "much much better programming the",
    "start": "917420",
    "end": "919010"
  },
  {
    "text": "faithful user to use",
    "start": "919010",
    "end": "922050"
  },
  {
    "text": "so let's look at us how the Kois",
    "start": "922050",
    "end": "925889"
  },
  {
    "text": "initiate on the suicide before we look",
    "start": "925889",
    "end": "928739"
  },
  {
    "text": "into the steps I want to clarify about",
    "start": "928739",
    "end": "931199"
  },
  {
    "text": "our service handle registration a little",
    "start": "931199",
    "end": "934139"
  },
  {
    "text": "bit",
    "start": "934139",
    "end": "934470"
  },
  {
    "text": "so usually user will use the use",
    "start": "934470",
    "end": "937160"
  },
  {
    "text": "generated code to help to have better",
    "start": "937160",
    "end": "940049"
  },
  {
    "text": "programming interface so user will write",
    "start": "940049",
    "end": "942660"
  },
  {
    "text": "a user function based on the interface",
    "start": "942660",
    "end": "945540"
  },
  {
    "text": "exported by the defined by the generated",
    "start": "945540",
    "end": "948329"
  },
  {
    "text": "code and it will registered it's the",
    "start": "948329",
    "end": "952199"
  },
  {
    "text": "server well the user will register",
    "start": "952199",
    "end": "953879"
  },
  {
    "text": "function we start generating code and",
    "start": "953879",
    "end": "956059"
  },
  {
    "text": "then generated code well will create a",
    "start": "956059",
    "end": "960389"
  },
  {
    "text": "wrapper around the user function to",
    "start": "960389",
    "end": "964290"
  },
  {
    "text": "provide set type safety and register it",
    "start": "964290",
    "end": "966749"
  },
  {
    "text": "in register draft handler in the gr PC",
    "start": "966749",
    "end": "969600"
  },
  {
    "text": "so that's the some setup here and so the",
    "start": "969600",
    "end": "975329"
  },
  {
    "text": "on the client side it is a transport",
    "start": "975329",
    "end": "977459"
  },
  {
    "text": "sense the header to the client side to",
    "start": "977459",
    "end": "980309"
  },
  {
    "text": "initiate a string so the transport on",
    "start": "980309",
    "end": "982709"
  },
  {
    "text": "the server side received a header and it",
    "start": "982709",
    "end": "985829"
  },
  {
    "text": "creates a corresponding trying transport",
    "start": "985829",
    "end": "989009"
  },
  {
    "text": "stream on the server side and it modem",
    "start": "989009",
    "end": "992129"
  },
  {
    "text": "has the transport stream to your PC and",
    "start": "992129",
    "end": "995069"
  },
  {
    "text": "like on the client side the DRAM PC will",
    "start": "995069",
    "end": "998160"
  },
  {
    "text": "game wraps the transport stream with the",
    "start": "998160",
    "end": "1001519"
  },
  {
    "text": "its own its own stream abstraction to",
    "start": "1001519",
    "end": "1004850"
  },
  {
    "text": "provide functionality like compression",
    "start": "1004850",
    "end": "1007790"
  },
  {
    "text": "the compression encoding things like",
    "start": "1007790",
    "end": "1009410"
  },
  {
    "text": "that and then the generated code will",
    "start": "1009410",
    "end": "1013730"
  },
  {
    "text": "will again Rama have create a sting",
    "start": "1013730",
    "end": "1016369"
  },
  {
    "text": "wrapper around the user RPC layer string",
    "start": "1016369",
    "end": "1019999"
  },
  {
    "text": "and provides a nicer programming",
    "start": "1019999",
    "end": "1022670"
  },
  {
    "text": "interface for user for user function to",
    "start": "1022670",
    "end": "1026089"
  },
  {
    "text": "use so and you will invoke the user",
    "start": "1026089",
    "end": "1029480"
  },
  {
    "text": "function to start the whole process so",
    "start": "1029480",
    "end": "1033139"
  },
  {
    "text": "now the use the client has a handler to",
    "start": "1033139",
    "end": "1035779"
  },
  {
    "text": "send to send and receive message and the",
    "start": "1035779",
    "end": "1038178"
  },
  {
    "text": "server and the server function also has",
    "start": "1038179",
    "end": "1040850"
  },
  {
    "text": "it also has a handler to send a receive",
    "start": "1040850",
    "end": "1044058"
  },
  {
    "text": "message so they can start communicating",
    "start": "1044059",
    "end": "1045500"
  },
  {
    "text": "of the channel which was created so",
    "start": "1045500",
    "end": "1048590"
  },
  {
    "text": "client will send a request called coda",
    "start": "1048590",
    "end": "1052370"
  },
  {
    "text": "send method on the generated code",
    "start": "1052370",
    "end": "1054799"
  },
  {
    "text": "provide API",
    "start": "1054799",
    "end": "1055880"
  },
  {
    "text": "and then the general medical were called",
    "start": "1055880",
    "end": "1058549"
  },
  {
    "text": "the sent message on the Cherokee",
    "start": "1058549",
    "end": "1060559"
  },
  {
    "text": "syllabary",
    "start": "1060559",
    "end": "1062000"
  },
  {
    "text": "API and your PC here will do the",
    "start": "1062000",
    "end": "1065440"
  },
  {
    "text": "compression encoding here and the Danes",
    "start": "1065440",
    "end": "1068870"
  },
  {
    "text": "will call the transport layer right on",
    "start": "1068870",
    "end": "1071929"
  },
  {
    "text": "the stream with the robot will use the",
    "start": "1071929",
    "end": "1074660"
  },
  {
    "text": "robot to be transmitted on the transport",
    "start": "1074660",
    "end": "1077240"
  },
  {
    "text": "on the network and then the transport",
    "start": "1077240",
    "end": "1079520"
  },
  {
    "text": "for transportable transmitted by its",
    "start": "1079520",
    "end": "1082490"
  },
  {
    "text": "over the network and then on the server",
    "start": "1082490",
    "end": "1086840"
  },
  {
    "text": "side it will read by read the bytes of",
    "start": "1086840",
    "end": "1090140"
  },
  {
    "text": "the stream and passed along to the G RPC",
    "start": "1090140",
    "end": "1093230"
  },
  {
    "text": "and the danger piece of a path alone",
    "start": "1093230",
    "end": "1095570"
  },
  {
    "text": "will do the decompression and decoding",
    "start": "1095570",
    "end": "1100549"
  },
  {
    "text": "and pass along the message back to the",
    "start": "1100549",
    "end": "1102890"
  },
  {
    "text": "generated code and the generated code",
    "start": "1102890",
    "end": "1105020"
  },
  {
    "text": "will pass on pass along democrat request",
    "start": "1105020",
    "end": "1107900"
  },
  {
    "text": "to the server and the same same stand",
    "start": "1107900",
    "end": "1112250"
  },
  {
    "text": "and we see procedure happens like for",
    "start": "1112250",
    "end": "1114770"
  },
  {
    "text": "the server and the client so basically",
    "start": "1114770",
    "end": "1117679"
  },
  {
    "text": "this is the the read pass and repass of",
    "start": "1117679",
    "end": "1120500"
  },
  {
    "text": "her RPC and I would like to just stop",
    "start": "1120500",
    "end": "1123830"
  },
  {
    "text": "here so you guys can look at how the RPC",
    "start": "1123830",
    "end": "1126320"
  },
  {
    "text": "ends which is very easy so I would like",
    "start": "1126320",
    "end": "1130220"
  },
  {
    "text": "to spend a couple minutes here to",
    "start": "1130220",
    "end": "1132669"
  },
  {
    "text": "discuss to introduce some of our nice",
    "start": "1132669",
    "end": "1135409"
  },
  {
    "text": "features of Gerar PC select I said",
    "start": "1135409",
    "end": "1138110"
  },
  {
    "text": "before we have a pluggable components",
    "start": "1138110",
    "end": "1141710"
  },
  {
    "text": "and some example here's our resolver",
    "start": "1141710",
    "end": "1144860"
  },
  {
    "text": "balancer ideal compressor codec and",
    "start": "1144860",
    "end": "1147260"
  },
  {
    "text": "transport for example for ideal so it I",
    "start": "1147260",
    "end": "1150470"
  },
  {
    "text": "mean beam pluggable means that you don't",
    "start": "1150470",
    "end": "1152600"
  },
  {
    "text": "need to use protobuf to be able to use a",
    "start": "1152600",
    "end": "1155120"
  },
  {
    "text": "RPC which is which gives you so much",
    "start": "1155120",
    "end": "1158690"
  },
  {
    "text": "more complexity here and also I would",
    "start": "1158690",
    "end": "1162590"
  },
  {
    "text": "like to briefly introduce some of our",
    "start": "1162590",
    "end": "1166850"
  },
  {
    "text": "recent features some of our recent",
    "start": "1166850",
    "end": "1169909"
  },
  {
    "text": "features like panel re channel tea and",
    "start": "1169909",
    "end": "1172520"
  },
  {
    "text": "serve something for your feature I won't",
    "start": "1172520",
    "end": "1175250"
  },
  {
    "text": "I don't have time to introduce here you",
    "start": "1175250",
    "end": "1177710"
  },
  {
    "text": "can go to our repo and see the detailed",
    "start": "1177710",
    "end": "1180799"
  },
  {
    "text": "design talk",
    "start": "1180799",
    "end": "1183760"
  },
  {
    "text": "and the first gesture scumpii so",
    "start": "1184410",
    "end": "1187440"
  },
  {
    "text": "something provides a way for service",
    "start": "1187440",
    "end": "1189480"
  },
  {
    "text": "countless service honor and to publish",
    "start": "1189480",
    "end": "1191460"
  },
  {
    "text": "parameters to be automatically used by",
    "start": "1191460",
    "end": "1193890"
  },
  {
    "text": "all clients so how to set up the service",
    "start": "1193890",
    "end": "1196680"
  },
  {
    "text": "comfy the service owner will need to",
    "start": "1196680",
    "end": "1199920"
  },
  {
    "text": "push the service config file to a",
    "start": "1199920",
    "end": "1201720"
  },
  {
    "text": "service account in hosting service for",
    "start": "1201720",
    "end": "1204450"
  },
  {
    "text": "example a DNS server and when the",
    "start": "1204450",
    "end": "1207480"
  },
  {
    "text": "chirpies client tries to resolve the",
    "start": "1207480",
    "end": "1209940"
  },
  {
    "text": "hostname it will try to see whether",
    "start": "1209940",
    "end": "1213090"
  },
  {
    "text": "there's a service config under their",
    "start": "1213090",
    "end": "1215250"
  },
  {
    "text": "hosts name and if there is it will pass",
    "start": "1215250",
    "end": "1217500"
  },
  {
    "text": "along to the Jer PC client and the Jeff",
    "start": "1217500",
    "end": "1219840"
  },
  {
    "text": "is declining would then apply the",
    "start": "1219840",
    "end": "1221400"
  },
  {
    "text": "service config constraint to old RPC for",
    "start": "1221400",
    "end": "1224670"
  },
  {
    "text": "that for the connection under that",
    "start": "1224670",
    "end": "1226290"
  },
  {
    "text": "hostname",
    "start": "1226290",
    "end": "1227960"
  },
  {
    "text": "and for example so what's included in",
    "start": "1227960",
    "end": "1230330"
  },
  {
    "text": "the service config for example oh",
    "start": "1230330",
    "end": "1231860"
  },
  {
    "text": "they're all so it can't so it contains",
    "start": "1231860",
    "end": "1234679"
  },
  {
    "text": "the load balancing policy so you so the",
    "start": "1234679",
    "end": "1237249"
  },
  {
    "text": "server can so the European service",
    "start": "1237249",
    "end": "1240320"
  },
  {
    "text": "provider camp that always can use the",
    "start": "1240320",
    "end": "1243230"
  },
  {
    "text": "round-robin server - oh you'll use the",
    "start": "1243230",
    "end": "1246769"
  },
  {
    "text": "round-robin server and he also says",
    "start": "1246769",
    "end": "1248509"
  },
  {
    "text": "about the RPC timeouts our the request",
    "start": "1248509",
    "end": "1252409"
  },
  {
    "text": "response message size limit and actually",
    "start": "1252409",
    "end": "1255799"
  },
  {
    "text": "our excuse me and actually our new",
    "start": "1255799",
    "end": "1264080"
  },
  {
    "text": "features like ritual RPC retrial health",
    "start": "1264080",
    "end": "1266840"
  },
  {
    "text": "tracking they are all integrated with",
    "start": "1266840",
    "end": "1268549"
  },
  {
    "text": "the service configure a central you can",
    "start": "1268549",
    "end": "1271659"
  },
  {
    "text": "pass the configurations through the",
    "start": "1271659",
    "end": "1274009"
  },
  {
    "text": "service campaign and next the banner",
    "start": "1274009",
    "end": "1278960"
  },
  {
    "text": "logging finally login loss RPC RPC is in",
    "start": "1278960",
    "end": "1283129"
  },
  {
    "text": "binary format basically it just blocks",
    "start": "1283129",
    "end": "1286159"
  },
  {
    "text": "all the RPC operations in a in a binary",
    "start": "1286159",
    "end": "1290029"
  },
  {
    "text": "format and we along with the time stamp",
    "start": "1290029",
    "end": "1293090"
  },
  {
    "text": "and the coati and the user needs to",
    "start": "1293090",
    "end": "1295369"
  },
  {
    "text": "provide a logger interface a lot longer",
    "start": "1295369",
    "end": "1297769"
  },
  {
    "text": "to be to log listen in any place you'd",
    "start": "1297769",
    "end": "1300649"
  },
  {
    "text": "like and so a typical use case of for",
    "start": "1300649",
    "end": "1304999"
  },
  {
    "text": "binary long is to do troubleshooting",
    "start": "1304999",
    "end": "1307909"
  },
  {
    "text": "service finding exception during load",
    "start": "1307909",
    "end": "1309799"
  },
  {
    "text": "testing or replaying production of our",
    "start": "1309799",
    "end": "1311629"
  },
  {
    "text": "pieces",
    "start": "1311629",
    "end": "1313720"
  },
  {
    "text": "and finally the channel D service so",
    "start": "1313720",
    "end": "1317559"
  },
  {
    "text": "channel T is a tool that provides a",
    "start": "1317559",
    "end": "1319419"
  },
  {
    "text": "comprehensive runtime info about",
    "start": "1319419",
    "end": "1321009"
  },
  {
    "text": "connections at at different levels",
    "start": "1321009",
    "end": "1323309"
  },
  {
    "text": "basically you need to export a channel D",
    "start": "1323309",
    "end": "1326169"
  },
  {
    "text": "service in your binary and it will serve",
    "start": "1326169",
    "end": "1329950"
  },
  {
    "text": "the job and you need to serve the TRP",
    "start": "1329950",
    "end": "1332529"
  },
  {
    "text": "see our universe serve the chair PC",
    "start": "1332529",
    "end": "1335259"
  },
  {
    "text": "service so so the end user can can get",
    "start": "1335259",
    "end": "1339460"
  },
  {
    "text": "info from those service and what are the",
    "start": "1339460",
    "end": "1342009"
  },
  {
    "text": "info provided by the channel T so you",
    "start": "1342009",
    "end": "1344230"
  },
  {
    "text": "can inquiry like how many scores has",
    "start": "1344230",
    "end": "1346269"
  },
  {
    "text": "been started succeeded or failed at a",
    "start": "1346269",
    "end": "1348789"
  },
  {
    "text": "channel or sub Channel and what is the",
    "start": "1348789",
    "end": "1351519"
  },
  {
    "text": "security info bada transport like what",
    "start": "1351519",
    "end": "1353889"
  },
  {
    "text": "is the cycle sweets was the certificate",
    "start": "1353889",
    "end": "1355960"
  },
  {
    "text": "used to setup this transport and flow",
    "start": "1355960",
    "end": "1359379"
  },
  {
    "text": "control info like how many cool control",
    "start": "1359379",
    "end": "1361269"
  },
  {
    "text": "window you allow for the current life",
    "start": "1361269",
    "end": "1363610"
  },
  {
    "text": "for this this transport and the last and",
    "start": "1363610",
    "end": "1367929"
  },
  {
    "text": "freedom who also input like what is the",
    "start": "1367929",
    "end": "1370389"
  },
  {
    "text": "last are busy on the channel and how",
    "start": "1370389",
    "end": "1372399"
  },
  {
    "text": "many streams are alive currently on the",
    "start": "1372399",
    "end": "1374350"
  },
  {
    "text": "transport and there's a lot a lot more",
    "start": "1374350",
    "end": "1376899"
  },
  {
    "text": "there seasick for them to yourself and I",
    "start": "1376899",
    "end": "1379809"
  },
  {
    "text": "have wrote a very short introduction to",
    "start": "1379809",
    "end": "1383110"
  },
  {
    "text": "channel so you can find the link on the",
    "start": "1383110",
    "end": "1385360"
  },
  {
    "text": "bottom and the so channels it can be",
    "start": "1385360",
    "end": "1388779"
  },
  {
    "text": "super helpful in regards like debugging",
    "start": "1388779",
    "end": "1392259"
  },
  {
    "text": "that network issue or performance issue",
    "start": "1392259",
    "end": "1394360"
  },
  {
    "text": "even configuration issue and then that",
    "start": "1394360",
    "end": "1398769"
  },
  {
    "text": "wraps up my presentation let's go to the",
    "start": "1398769",
    "end": "1401529"
  },
  {
    "text": "Q&A",
    "start": "1401529",
    "end": "1403769"
  },
  {
    "text": "oh you mean the quick transport Sodra PC",
    "start": "1415840",
    "end": "1418990"
  },
  {
    "text": "doesn't support we transport but I think",
    "start": "1418990",
    "end": "1421930"
  },
  {
    "text": "the Java or C plus for information they",
    "start": "1421930",
    "end": "1425140"
  },
  {
    "text": "do is support a quick transport",
    "start": "1425140",
    "end": "1428550"
  },
  {
    "text": "oh you mean the entering plan for a",
    "start": "1429770",
    "end": "1431930"
  },
  {
    "text": "piece ago implementation I think like",
    "start": "1431930",
    "end": "1434510"
  },
  {
    "text": "right now so I'd like said here we have",
    "start": "1434510",
    "end": "1437690"
  },
  {
    "text": "the transport to be pluggable to come",
    "start": "1437690",
    "end": "1439400"
  },
  {
    "text": "that feature is coming soon so and we",
    "start": "1439400",
    "end": "1441560"
  },
  {
    "text": "are trying to make our transport",
    "start": "1441560",
    "end": "1442910"
  },
  {
    "text": "pluggable and after we made that change",
    "start": "1442910",
    "end": "1445730"
  },
  {
    "text": "them will we may work on the quick",
    "start": "1445730",
    "end": "1448400"
  },
  {
    "text": "transport support",
    "start": "1448400",
    "end": "1451510"
  },
  {
    "text": "okay you you Marie",
    "start": "1461280",
    "end": "1467490"
  },
  {
    "text": "yes he has long pants is like a cross",
    "start": "1467520",
    "end": "1470470"
  },
  {
    "text": "order like all types of chirpy see it",
    "start": "1470470",
    "end": "1473290"
  },
  {
    "text": "basically just decide for this RPC no",
    "start": "1473290",
    "end": "1475780"
  },
  {
    "text": "matter what which what type are they",
    "start": "1475780",
    "end": "1477760"
  },
  {
    "text": "where it should go through which channel",
    "start": "1477760",
    "end": "1479830"
  },
  {
    "text": "is to go through which connection right",
    "start": "1479830",
    "end": "1493630"
  },
  {
    "text": "it was a little badass all those sub",
    "start": "1493630",
    "end": "1494980"
  },
  {
    "text": "channels",
    "start": "1494980",
    "end": "1497340"
  },
  {
    "text": "I",
    "start": "1501810",
    "end": "1503870"
  },
  {
    "text": "oh you mean where you can configure the",
    "start": "1505140",
    "end": "1507570"
  },
  {
    "text": "balancer so we provided a pig first",
    "start": "1507570",
    "end": "1510840"
  },
  {
    "text": "balancer and they roam roam a palace or",
    "start": "1510840",
    "end": "1513510"
  },
  {
    "text": "by default so if you want to any other",
    "start": "1513510",
    "end": "1515580"
  },
  {
    "text": "behavior you need to implement a palace",
    "start": "1515580",
    "end": "1517380"
  },
  {
    "text": "or yourself so you can decide all the",
    "start": "1517380",
    "end": "1518910"
  },
  {
    "text": "behavior you want we have about a nice",
    "start": "1518910",
    "end": "1521400"
  },
  {
    "text": "balance or API you just need to",
    "start": "1521400",
    "end": "1522960"
  },
  {
    "text": "implement that to interact with your PC",
    "start": "1522960",
    "end": "1526940"
  },
  {
    "text": "there is the difference a peek first so",
    "start": "1527000",
    "end": "1529500"
  },
  {
    "text": "essentially when there are multiple",
    "start": "1529500",
    "end": "1530790"
  },
  {
    "text": "address returned by the resolver you",
    "start": "1530790",
    "end": "1532740"
  },
  {
    "text": "know what tries to connect to one of",
    "start": "1532740",
    "end": "1534270"
  },
  {
    "text": "them if if that connection succeed",
    "start": "1534270",
    "end": "1536340"
  },
  {
    "text": "it won't try it with other backhands yes",
    "start": "1536340",
    "end": "1542539"
  },
  {
    "text": "you mean whether we support connection",
    "start": "1550870",
    "end": "1554060"
  },
  {
    "text": "pool why do you need a connection pool",
    "start": "1554060",
    "end": "1560180"
  },
  {
    "text": "if we you have already have a lot of",
    "start": "1560180",
    "end": "1561980"
  },
  {
    "text": "balancer so you can manage all the",
    "start": "1561980",
    "end": "1563690"
  },
  {
    "text": "connections through",
    "start": "1563690",
    "end": "1566440"
  },
  {
    "text": "I don't see why you need a connection PO",
    "start": "1589650",
    "end": "1592290"
  },
  {
    "text": "you just have the so the channel will",
    "start": "1592290",
    "end": "1594990"
  },
  {
    "text": "include like multiple sub channels so",
    "start": "1594990",
    "end": "1596850"
  },
  {
    "text": "when you write so that's what sub",
    "start": "1596850",
    "end": "1604950"
  },
  {
    "text": "channel means",
    "start": "1604950",
    "end": "1607519"
  },
  {
    "text": "so so you mean like you just need to",
    "start": "1617550",
    "end": "1620250"
  },
  {
    "text": "come back to the I can once",
    "start": "1620250",
    "end": "1624320"
  },
  {
    "text": "so you know you only need to solve",
    "start": "1626110",
    "end": "1630630"
  },
  {
    "text": "you don't need the connection put",
    "start": "1633080",
    "end": "1635369"
  },
  {
    "text": "connections there you can just try to",
    "start": "1635369",
    "end": "1638399"
  },
  {
    "text": "start RPC on those connections",
    "start": "1638399",
    "end": "1642379"
  },
  {
    "text": "right so the suction essentially does",
    "start": "1650110",
    "end": "1653180"
  },
  {
    "text": "TCP connection so maybe let's take the",
    "start": "1653180",
    "end": "1655550"
  },
  {
    "text": "question online probably yeah",
    "start": "1655550",
    "end": "1659860"
  },
  {
    "text": "you",
    "start": "1662610",
    "end": "1664670"
  },
  {
    "text": "[Music]",
    "start": "1667550",
    "end": "1669989"
  },
  {
    "text": "thank you",
    "start": "1669989",
    "end": "1672340"
  },
  {
    "text": "you",
    "start": "1672340",
    "end": "1674400"
  }
]