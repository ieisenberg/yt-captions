[
  {
    "start": "0",
    "end": "15000"
  },
  {
    "text": "hello everyone today's topic is make",
    "start": "2240",
    "end": "4400"
  },
  {
    "text": "thai tv 10 times faster and established",
    "start": "4400",
    "end": "7759"
  },
  {
    "text": "this topic is brought by saryama",
    "start": "7759",
    "end": "10800"
  },
  {
    "text": "and lee tranpay who are from pinkham",
    "start": "10800",
    "end": "14799"
  },
  {
    "start": "15000",
    "end": "383000"
  },
  {
    "text": "so why to make thai kb edge tappable",
    "start": "15759",
    "end": "19359"
  },
  {
    "text": "consider if you want to analyze online",
    "start": "19359",
    "end": "21680"
  },
  {
    "text": "data in real time",
    "start": "21680",
    "end": "24400"
  },
  {
    "text": "usually we use different types of",
    "start": "24400",
    "end": "26000"
  },
  {
    "text": "database for transactional processing",
    "start": "26000",
    "end": "28400"
  },
  {
    "text": "and",
    "start": "28400",
    "end": "28640"
  },
  {
    "text": "analytical processing workloads",
    "start": "28640",
    "end": "31840"
  },
  {
    "text": "because these workloads are totally",
    "start": "31840",
    "end": "33920"
  },
  {
    "text": "different",
    "start": "33920",
    "end": "35520"
  },
  {
    "text": "so for the database the design goal is",
    "start": "35520",
    "end": "37840"
  },
  {
    "text": "totally different",
    "start": "37840",
    "end": "40320"
  },
  {
    "text": "that means we use two different",
    "start": "40320",
    "end": "42079"
  },
  {
    "text": "composite different type of the system",
    "start": "42079",
    "end": "44399"
  },
  {
    "text": "different type of database and we need",
    "start": "44399",
    "end": "47200"
  },
  {
    "text": "to move data from tpu to ap constantly",
    "start": "47200",
    "end": "50160"
  },
  {
    "text": "by etl the data movement itself",
    "start": "50160",
    "end": "54160"
  },
  {
    "text": "is very expensive slow and hard to",
    "start": "54160",
    "end": "56079"
  },
  {
    "text": "maintain so usually people set chrome",
    "start": "56079",
    "end": "58800"
  },
  {
    "text": "tab",
    "start": "58800",
    "end": "59199"
  },
  {
    "text": "job constantly maybe like one hour",
    "start": "59199",
    "end": "62480"
  },
  {
    "text": "or like a day",
    "start": "62480",
    "end": "66400"
  },
  {
    "text": "and the job is responsible for moving",
    "start": "67680",
    "end": "70159"
  },
  {
    "text": "data",
    "start": "70159",
    "end": "70960"
  },
  {
    "text": "between different systems",
    "start": "70960",
    "end": "74320"
  },
  {
    "text": "and this is not very simple you need to",
    "start": "74799",
    "end": "77200"
  },
  {
    "text": "constantly watch these",
    "start": "77200",
    "end": "78960"
  },
  {
    "text": "watch these job to preventing failures",
    "start": "78960",
    "end": "82320"
  },
  {
    "text": "or you to check data if",
    "start": "82320",
    "end": "85360"
  },
  {
    "text": "it is consistent during the movie",
    "start": "85360",
    "end": "89280"
  },
  {
    "text": "and that becomes especially hard if the",
    "start": "89280",
    "end": "92400"
  },
  {
    "text": "data volume is very big",
    "start": "92400",
    "end": "95680"
  },
  {
    "text": "so it's not a question only a question",
    "start": "98880",
    "end": "101280"
  },
  {
    "text": "of complexity",
    "start": "101280",
    "end": "103840"
  },
  {
    "text": "that also means when you get a report",
    "start": "103840",
    "end": "107600"
  },
  {
    "text": "that report might be based on data from",
    "start": "107600",
    "end": "110159"
  },
  {
    "text": "yesterday",
    "start": "110159",
    "end": "111920"
  },
  {
    "text": "you lost the data freshness",
    "start": "111920",
    "end": "115840"
  },
  {
    "text": "so that means if you want to read the",
    "start": "118399",
    "end": "122159"
  },
  {
    "text": "fresh data",
    "start": "122159",
    "end": "123280"
  },
  {
    "text": "or you want to eat a fresh fruit the",
    "start": "123280",
    "end": "125600"
  },
  {
    "text": "best way is to directly consume it",
    "start": "125600",
    "end": "129119"
  },
  {
    "text": "from the source",
    "start": "129119",
    "end": "131840"
  },
  {
    "text": "so why system is separated why we cannot",
    "start": "137680",
    "end": "140239"
  },
  {
    "text": "combine two systems into one",
    "start": "140239",
    "end": "143280"
  },
  {
    "text": "then we can dilate the moving",
    "start": "143280",
    "end": "146400"
  },
  {
    "text": "data processing and directly read the",
    "start": "146400",
    "end": "149360"
  },
  {
    "text": "data from the very beginning",
    "start": "149360",
    "end": "152480"
  },
  {
    "text": "so that's because of",
    "start": "152480",
    "end": "156480"
  },
  {
    "text": "different database for different goals",
    "start": "156480",
    "end": "158640"
  },
  {
    "text": "that use different design",
    "start": "158640",
    "end": "160640"
  },
  {
    "text": "especially the storage formats so for",
    "start": "160640",
    "end": "163760"
  },
  {
    "text": "transaction processing system we usually",
    "start": "163760",
    "end": "165840"
  },
  {
    "text": "use a row format",
    "start": "165840",
    "end": "167360"
  },
  {
    "text": "so what is a row format row format means",
    "start": "167360",
    "end": "170239"
  },
  {
    "text": "when you store a single",
    "start": "170239",
    "end": "171519"
  },
  {
    "text": "each row you",
    "start": "171519",
    "end": "175360"
  },
  {
    "text": "store the column side by side",
    "start": "175360",
    "end": "179280"
  },
  {
    "text": "consider this kind of query select star",
    "start": "179840",
    "end": "182080"
  },
  {
    "text": "from emp",
    "start": "182080",
    "end": "182959"
  },
  {
    "text": "where id equals to 7658",
    "start": "182959",
    "end": "186720"
  },
  {
    "text": "for a row format system you can directly",
    "start": "186720",
    "end": "189519"
  },
  {
    "text": "seek to the start of the row",
    "start": "189519",
    "end": "192400"
  },
  {
    "text": "and do a sequential read and you get all",
    "start": "192400",
    "end": "194959"
  },
  {
    "text": "the row",
    "start": "194959",
    "end": "195680"
  },
  {
    "text": "all the row data from that row",
    "start": "195680",
    "end": "199040"
  },
  {
    "text": "so that means row formats is very",
    "start": "199040",
    "end": "202560"
  },
  {
    "text": "good for this kind of workloads you read",
    "start": "202560",
    "end": "206720"
  },
  {
    "text": "very few rows and you process them and",
    "start": "206720",
    "end": "209200"
  },
  {
    "text": "store it back",
    "start": "209200",
    "end": "210799"
  },
  {
    "text": "so that's the typical pattern for a",
    "start": "210799",
    "end": "213200"
  },
  {
    "text": "transactional",
    "start": "213200",
    "end": "214080"
  },
  {
    "text": "processing system",
    "start": "214080",
    "end": "217120"
  },
  {
    "text": "let's consider another example select",
    "start": "218640",
    "end": "221680"
  },
  {
    "text": "average age from emp",
    "start": "221680",
    "end": "224879"
  },
  {
    "text": "so that looks like a reporting query",
    "start": "224879",
    "end": "228640"
  },
  {
    "text": "you want to read they want to analyze",
    "start": "228640",
    "end": "231360"
  },
  {
    "text": "the average age for your employee",
    "start": "231360",
    "end": "234640"
  },
  {
    "text": "for that kind of query the column format",
    "start": "234640",
    "end": "237599"
  },
  {
    "text": "is",
    "start": "237599",
    "end": "238400"
  },
  {
    "text": "more suitable than a row format so what",
    "start": "238400",
    "end": "241360"
  },
  {
    "text": "is a column format",
    "start": "241360",
    "end": "243120"
  },
  {
    "text": "a column format is a way to store your",
    "start": "243120",
    "end": "246879"
  },
  {
    "text": "data",
    "start": "246879",
    "end": "248159"
  },
  {
    "text": "that for each individual column",
    "start": "248159",
    "end": "250490"
  },
  {
    "text": "[Music]",
    "start": "250490",
    "end": "252319"
  },
  {
    "text": "you store it tightly side by side",
    "start": "252319",
    "end": "256000"
  },
  {
    "text": "instead of in a row bias",
    "start": "256000",
    "end": "260720"
  },
  {
    "text": "so that means when we answer that query",
    "start": "261440",
    "end": "265199"
  },
  {
    "text": "for average age you just need to",
    "start": "265199",
    "end": "268000"
  },
  {
    "text": "directly seek",
    "start": "268000",
    "end": "269680"
  },
  {
    "text": "to the start of the age column and do a",
    "start": "269680",
    "end": "272880"
  },
  {
    "text": "sequential reads",
    "start": "272880",
    "end": "274080"
  },
  {
    "text": "then you get all the data for age",
    "start": "274080",
    "end": "278080"
  },
  {
    "text": "then you do a aggregation and answer the",
    "start": "278080",
    "end": "280880"
  },
  {
    "text": "query",
    "start": "280880",
    "end": "282720"
  },
  {
    "text": "you don't need to touch any data from",
    "start": "282720",
    "end": "286000"
  },
  {
    "text": "the columns that you don't need",
    "start": "286000",
    "end": "289680"
  },
  {
    "text": "now you can see that's very efficient",
    "start": "289840",
    "end": "292560"
  },
  {
    "text": "way to read our data",
    "start": "292560",
    "end": "294080"
  },
  {
    "text": "than the row format",
    "start": "294080",
    "end": "297840"
  },
  {
    "text": "but if you want to answer a query like a",
    "start": "298400",
    "end": "300720"
  },
  {
    "text": "point query",
    "start": "300720",
    "end": "302720"
  },
  {
    "text": "like where id equals to 7658",
    "start": "302720",
    "end": "306160"
  },
  {
    "text": "you just need to pick up a single row",
    "start": "306160",
    "end": "308800"
  },
  {
    "text": "for a column format",
    "start": "308800",
    "end": "310320"
  },
  {
    "text": "you need to seek three times and to find",
    "start": "310320",
    "end": "312880"
  },
  {
    "text": "each individual",
    "start": "312880",
    "end": "314080"
  },
  {
    "text": "column rows of each individual column",
    "start": "314080",
    "end": "316560"
  },
  {
    "text": "data for that",
    "start": "316560",
    "end": "317600"
  },
  {
    "text": "a single row and to combine it together",
    "start": "317600",
    "end": "320240"
  },
  {
    "text": "then you can have the row",
    "start": "320240",
    "end": "322960"
  },
  {
    "text": "so that means the column format is not",
    "start": "322960",
    "end": "325440"
  },
  {
    "text": "very",
    "start": "325440",
    "end": "326080"
  },
  {
    "text": "suitable for the transaction processing",
    "start": "326080",
    "end": "330240"
  },
  {
    "text": "the other problem need to consider is",
    "start": "332800",
    "end": "335120"
  },
  {
    "text": "the workload",
    "start": "335120",
    "end": "336840"
  },
  {
    "text": "interference for tp workloads",
    "start": "336840",
    "end": "339680"
  },
  {
    "text": "they might need to be very stable stable",
    "start": "339680",
    "end": "343280"
  },
  {
    "text": "low latency and very high",
    "start": "343280",
    "end": "346720"
  },
  {
    "text": "very high transactional rate rates",
    "start": "346720",
    "end": "350800"
  },
  {
    "text": "both for a reporting query the qps might",
    "start": "350800",
    "end": "354160"
  },
  {
    "text": "be very low",
    "start": "354160",
    "end": "355840"
  },
  {
    "text": "but they consume a large amount of their",
    "start": "355840",
    "end": "358240"
  },
  {
    "text": "compute resource",
    "start": "358240",
    "end": "360960"
  },
  {
    "text": "so that means if you process those two",
    "start": "360960",
    "end": "364960"
  },
  {
    "text": "kinds of workloads in a single single",
    "start": "364960",
    "end": "366880"
  },
  {
    "text": "system",
    "start": "366880",
    "end": "369039"
  },
  {
    "text": "the reporting or the analytical",
    "start": "369039",
    "end": "371039"
  },
  {
    "text": "workloads might largely",
    "start": "371039",
    "end": "372880"
  },
  {
    "text": "interfere your transactional workloads",
    "start": "372880",
    "end": "375680"
  },
  {
    "text": "and the transaction workloads is very",
    "start": "375680",
    "end": "377600"
  },
  {
    "text": "fragile",
    "start": "377600",
    "end": "378800"
  },
  {
    "text": "you don't want this happen",
    "start": "378800",
    "end": "381840"
  },
  {
    "start": "383000",
    "end": "583000"
  },
  {
    "text": "so how to make thai tv edge typical",
    "start": "385759",
    "end": "390080"
  },
  {
    "text": "in the new version 4.0",
    "start": "390560",
    "end": "393680"
  },
  {
    "text": "we introduced a new component named",
    "start": "393680",
    "end": "395919"
  },
  {
    "text": "typeflash into thai kv system",
    "start": "395919",
    "end": "399280"
  },
  {
    "text": "so what is a tie flash type flash is a",
    "start": "399280",
    "end": "402400"
  },
  {
    "text": "real-time",
    "start": "402400",
    "end": "403120"
  },
  {
    "text": "updatable column storage engine",
    "start": "403120",
    "end": "406720"
  },
  {
    "text": "so the code base is partially based on",
    "start": "406720",
    "end": "408720"
  },
  {
    "text": "click house the click house is a very",
    "start": "408720",
    "end": "410560"
  },
  {
    "text": "famous",
    "start": "410560",
    "end": "411199"
  },
  {
    "text": "open source project",
    "start": "411199",
    "end": "414240"
  },
  {
    "text": "it's been built from the yandex",
    "start": "415440",
    "end": "420400"
  },
  {
    "text": "and we think data as a learner role",
    "start": "420720",
    "end": "424479"
  },
  {
    "text": "from thai tv by raft",
    "start": "424479",
    "end": "428319"
  },
  {
    "text": "as some of you might know that we use",
    "start": "428319",
    "end": "431120"
  },
  {
    "text": "raft",
    "start": "431120",
    "end": "432720"
  },
  {
    "text": "as a consensus algorithm to replicate",
    "start": "432720",
    "end": "435759"
  },
  {
    "text": "the data",
    "start": "435759",
    "end": "436479"
  },
  {
    "text": "in thai kv system so in thai kb",
    "start": "436479",
    "end": "440240"
  },
  {
    "text": "we have different replications",
    "start": "440240",
    "end": "443520"
  },
  {
    "text": "for each piece of data",
    "start": "443520",
    "end": "446880"
  },
  {
    "text": "and these replications are maintained by",
    "start": "446880",
    "end": "449120"
  },
  {
    "text": "raft",
    "start": "449120",
    "end": "450080"
  },
  {
    "text": "and some of the replication are leader",
    "start": "450080",
    "end": "452560"
  },
  {
    "text": "replication",
    "start": "452560",
    "end": "453440"
  },
  {
    "text": "and some are follower replication and",
    "start": "453440",
    "end": "456400"
  },
  {
    "text": "for",
    "start": "456400",
    "end": "457280"
  },
  {
    "text": "tie flash replication it's a learner",
    "start": "457280",
    "end": "459759"
  },
  {
    "text": "role that means",
    "start": "459759",
    "end": "460800"
  },
  {
    "text": "the tie flash replication will not vote",
    "start": "460800",
    "end": "464479"
  },
  {
    "text": "and that we're preventing time flash to",
    "start": "464479",
    "end": "467280"
  },
  {
    "text": "interfere",
    "start": "467280",
    "end": "468160"
  },
  {
    "text": "the stableness of tank tv system",
    "start": "468160",
    "end": "473120"
  },
  {
    "text": "so the two-story engine together make",
    "start": "474479",
    "end": "477120"
  },
  {
    "text": "thai db",
    "start": "477120",
    "end": "477840"
  },
  {
    "text": "system a htap database",
    "start": "477840",
    "end": "481840"
  },
  {
    "text": "and we can also access data",
    "start": "481840",
    "end": "485520"
  },
  {
    "text": "via cpo that means the tidbit optimizer",
    "start": "485520",
    "end": "490080"
  },
  {
    "text": "is a cost-based optimizer and it can",
    "start": "490080",
    "end": "492560"
  },
  {
    "text": "choose between",
    "start": "492560",
    "end": "494240"
  },
  {
    "text": "a column formats or row formats",
    "start": "494240",
    "end": "497520"
  },
  {
    "text": "from the based on the statistics",
    "start": "497520",
    "end": "500319"
  },
  {
    "text": "information",
    "start": "500319",
    "end": "502000"
  },
  {
    "text": "it will choose a path that which can",
    "start": "502000",
    "end": "503759"
  },
  {
    "text": "provide better performance",
    "start": "503759",
    "end": "505759"
  },
  {
    "text": "or lower lower cost or lower resource",
    "start": "505759",
    "end": "508720"
  },
  {
    "text": "consumption",
    "start": "508720",
    "end": "511360"
  },
  {
    "text": "thank you xiaoyu next i'm going to talk",
    "start": "515519",
    "end": "518080"
  },
  {
    "text": "about",
    "start": "518080",
    "end": "518560"
  },
  {
    "text": "the architecture of idb",
    "start": "518560",
    "end": "522000"
  },
  {
    "text": "this is architectural tidbit and we have",
    "start": "522320",
    "end": "524720"
  },
  {
    "text": "tidbit as a computation layer",
    "start": "524720",
    "end": "527120"
  },
  {
    "text": "and attack away as a storage layer",
    "start": "527120",
    "end": "532000"
  },
  {
    "text": "the data in take away are divided into",
    "start": "532399",
    "end": "535440"
  },
  {
    "text": "regions and each region contains",
    "start": "535440",
    "end": "538800"
  },
  {
    "text": "a contiguous key ranges",
    "start": "538800",
    "end": "542640"
  },
  {
    "text": "each region has multiple replicas and",
    "start": "542959",
    "end": "546000"
  },
  {
    "text": "they are keeping consistent with the",
    "start": "546000",
    "end": "548160"
  },
  {
    "text": "rough replication protocol",
    "start": "548160",
    "end": "551839"
  },
  {
    "text": "what we add here is the latter part",
    "start": "551839",
    "end": "555360"
  },
  {
    "text": "which is a tie flash cluster and there",
    "start": "555360",
    "end": "558320"
  },
  {
    "text": "are multiple nodes",
    "start": "558320",
    "end": "559360"
  },
  {
    "text": "inside the flash cluster",
    "start": "559360",
    "end": "563600"
  },
  {
    "text": "you can see that here we add a dashed",
    "start": "563600",
    "end": "565839"
  },
  {
    "text": "line between the",
    "start": "565839",
    "end": "568399"
  },
  {
    "text": "teflon nodes and take away nodes",
    "start": "568399",
    "end": "571680"
  },
  {
    "text": "which means that the data replication in",
    "start": "571680",
    "end": "574480"
  },
  {
    "text": "take away",
    "start": "574480",
    "end": "575519"
  },
  {
    "text": "will not be affected if one or more",
    "start": "575519",
    "end": "579279"
  },
  {
    "text": "flash nodes are done",
    "start": "579279",
    "end": "582240"
  },
  {
    "start": "583000",
    "end": "739000"
  },
  {
    "text": "next i'll talk about how we do",
    "start": "585360",
    "end": "588720"
  },
  {
    "text": "real-time updatable cloud columnar",
    "start": "588720",
    "end": "591040"
  },
  {
    "text": "storage",
    "start": "591040",
    "end": "593200"
  },
  {
    "text": "we designed the columnar storage named",
    "start": "593200",
    "end": "595519"
  },
  {
    "text": "delta tree",
    "start": "595519",
    "end": "597440"
  },
  {
    "text": "and the key idea is that we split the",
    "start": "597440",
    "end": "600160"
  },
  {
    "text": "data",
    "start": "600160",
    "end": "601120"
  },
  {
    "text": "by primary keys and into blocks",
    "start": "601120",
    "end": "605839"
  },
  {
    "text": "the design goal of the dirt tray is to",
    "start": "606320",
    "end": "608480"
  },
  {
    "text": "avoid multi-way",
    "start": "608480",
    "end": "609760"
  },
  {
    "text": "merge when we scan in batch",
    "start": "609760",
    "end": "613360"
  },
  {
    "text": "when new data arrives the data is append",
    "start": "613360",
    "end": "616720"
  },
  {
    "text": "to the dirt space to",
    "start": "616720",
    "end": "620480"
  },
  {
    "text": "to optimize for the read performance the",
    "start": "620480",
    "end": "623360"
  },
  {
    "text": "dirt space is sorted and",
    "start": "623360",
    "end": "625200"
  },
  {
    "text": "indexed periodically",
    "start": "625200",
    "end": "629920"
  },
  {
    "text": "the dirt space is compacted into the",
    "start": "629920",
    "end": "633279"
  },
  {
    "text": "stable states",
    "start": "633279",
    "end": "634640"
  },
  {
    "text": "for better reader performance",
    "start": "634640",
    "end": "637920"
  },
  {
    "text": "in this picture we want to compare",
    "start": "639360",
    "end": "642959"
  },
  {
    "text": "and show that why the third",
    "start": "642959",
    "end": "646640"
  },
  {
    "text": "third dirt tray can offer better",
    "start": "646640",
    "end": "649920"
  },
  {
    "text": "read performance compared with the lsm",
    "start": "649920",
    "end": "652800"
  },
  {
    "text": "trees",
    "start": "652800",
    "end": "655120"
  },
  {
    "text": "in the left-hand side when you want to",
    "start": "656399",
    "end": "658959"
  },
  {
    "text": "return",
    "start": "658959",
    "end": "659519"
  },
  {
    "text": "range from lsm tree",
    "start": "659519",
    "end": "663120"
  },
  {
    "text": "you need to read data from all the",
    "start": "663120",
    "end": "665360"
  },
  {
    "text": "levels",
    "start": "665360",
    "end": "666160"
  },
  {
    "text": "in the lsm3 and do a multiple",
    "start": "666160",
    "end": "671279"
  },
  {
    "text": "way merge and this operation is really",
    "start": "671279",
    "end": "674480"
  },
  {
    "text": "very heavyweight",
    "start": "674480",
    "end": "677279"
  },
  {
    "text": "and the read amplification is high",
    "start": "677360",
    "end": "681519"
  },
  {
    "text": "in dirt 3 you only need to merge data",
    "start": "682000",
    "end": "685519"
  },
  {
    "text": "from the stable space and the third",
    "start": "685519",
    "end": "688000"
  },
  {
    "text": "space",
    "start": "688000",
    "end": "690320"
  },
  {
    "text": "on top of that we use a b plus 3 to",
    "start": "690640",
    "end": "693680"
  },
  {
    "text": "index the segment",
    "start": "693680",
    "end": "696720"
  },
  {
    "text": "information in this case if you want to",
    "start": "696800",
    "end": "702079"
  },
  {
    "text": "return data for a certain reach you only",
    "start": "702079",
    "end": "704880"
  },
  {
    "text": "need to read data",
    "start": "704880",
    "end": "706640"
  },
  {
    "text": "from a few segments",
    "start": "706640",
    "end": "709680"
  },
  {
    "text": "during the read the third space and the",
    "start": "710240",
    "end": "712880"
  },
  {
    "text": "stable space",
    "start": "712880",
    "end": "714320"
  },
  {
    "text": "are merged compared with the lsm3",
    "start": "714320",
    "end": "718959"
  },
  {
    "text": "this merge is a two-way merge which has",
    "start": "718959",
    "end": "722000"
  },
  {
    "text": "a lower",
    "start": "722000",
    "end": "722639"
  },
  {
    "text": "overhead compared with the multi-way",
    "start": "722639",
    "end": "724880"
  },
  {
    "text": "merge",
    "start": "724880",
    "end": "726800"
  },
  {
    "text": "besides the stable stage is starting",
    "start": "726800",
    "end": "730320"
  },
  {
    "text": "columnified",
    "start": "730320",
    "end": "731760"
  },
  {
    "text": "which offers much better read",
    "start": "731760",
    "end": "734160"
  },
  {
    "text": "performance",
    "start": "734160",
    "end": "735040"
  },
  {
    "text": "during scans",
    "start": "735040",
    "end": "737839"
  },
  {
    "text": "next i'm going to talk about how do we",
    "start": "740160",
    "end": "743600"
  },
  {
    "text": "achieve the rough based edge type",
    "start": "743600",
    "end": "747600"
  },
  {
    "text": "we introduce a learner role to the",
    "start": "747600",
    "end": "749760"
  },
  {
    "text": "rafter protocol",
    "start": "749760",
    "end": "751920"
  },
  {
    "text": "all the tech flash nodes are learner",
    "start": "751920",
    "end": "754000"
  },
  {
    "text": "rules",
    "start": "754000",
    "end": "756079"
  },
  {
    "text": "by learning rules we mean that those",
    "start": "756079",
    "end": "759839"
  },
  {
    "text": "nodes will not participate in the router",
    "start": "759839",
    "end": "762399"
  },
  {
    "text": "leader reduction",
    "start": "762399",
    "end": "763920"
  },
  {
    "text": "no they become part of the current",
    "start": "763920",
    "end": "766079"
  },
  {
    "text": "during the",
    "start": "766079",
    "end": "767200"
  },
  {
    "text": "data right",
    "start": "767200",
    "end": "769760"
  },
  {
    "text": "as a result the rising tech away",
    "start": "770480",
    "end": "774079"
  },
  {
    "text": "does not need to wait for tech flush",
    "start": "774079",
    "end": "778000"
  },
  {
    "text": "and take away works normally even if",
    "start": "778000",
    "end": "781200"
  },
  {
    "text": "tesla knows die",
    "start": "781200",
    "end": "784240"
  },
  {
    "text": "the replication between tacky away nodes",
    "start": "784480",
    "end": "786800"
  },
  {
    "text": "and teflon nodes",
    "start": "786800",
    "end": "788000"
  },
  {
    "text": "are direct replication and there's no",
    "start": "788000",
    "end": "791040"
  },
  {
    "text": "intermediate channel between them",
    "start": "791040",
    "end": "795040"
  },
  {
    "text": "this replication is very efficient",
    "start": "795040",
    "end": "798160"
  },
  {
    "text": "and usually the latency between the is",
    "start": "798160",
    "end": "801120"
  },
  {
    "text": "in milliseconds",
    "start": "801120",
    "end": "803760"
  },
  {
    "text": "we also also rely on the automatic",
    "start": "803760",
    "end": "807839"
  },
  {
    "text": "load balance and the fault tolerance",
    "start": "807839",
    "end": "810720"
  },
  {
    "text": "features",
    "start": "810720",
    "end": "811440"
  },
  {
    "text": "built in tidbit to make the data",
    "start": "811440",
    "end": "814320"
  },
  {
    "text": "replication highly available",
    "start": "814320",
    "end": "817839"
  },
  {
    "text": "this is also an illustration of what i",
    "start": "818959",
    "end": "821760"
  },
  {
    "text": "just talked about",
    "start": "821760",
    "end": "822800"
  },
  {
    "text": "in the last slides and compared",
    "start": "822800",
    "end": "825920"
  },
  {
    "text": "the replication in",
    "start": "825920",
    "end": "829279"
  },
  {
    "text": "kkv and tie flash with the etl",
    "start": "829279",
    "end": "832639"
  },
  {
    "text": "this is this is very efficient",
    "start": "832639",
    "end": "835760"
  },
  {
    "text": "here already during etl we need to copy",
    "start": "835760",
    "end": "839040"
  },
  {
    "text": "data to a staging area",
    "start": "839040",
    "end": "840560"
  },
  {
    "text": "and then copy the data to the data",
    "start": "840560",
    "end": "842639"
  },
  {
    "text": "warehouse",
    "start": "842639",
    "end": "844320"
  },
  {
    "text": "which causes a lot of data to be",
    "start": "844320",
    "end": "847360"
  },
  {
    "text": "copied",
    "start": "847360",
    "end": "849839"
  },
  {
    "start": "851000",
    "end": "963000"
  },
  {
    "text": "another thing people usually ask is how",
    "start": "855519",
    "end": "858399"
  },
  {
    "text": "do we achieve consistent rate",
    "start": "858399",
    "end": "862079"
  },
  {
    "text": "because replication from takeaway to",
    "start": "863360",
    "end": "865760"
  },
  {
    "text": "tesla",
    "start": "865760",
    "end": "866480"
  },
  {
    "text": "is asynchronous we need to guarantee",
    "start": "866480",
    "end": "870079"
  },
  {
    "text": "the consistency during the real time how",
    "start": "870079",
    "end": "873120"
  },
  {
    "text": "do we achieve this",
    "start": "873120",
    "end": "874720"
  },
  {
    "text": "the idea is pretty simple and we use a",
    "start": "874720",
    "end": "877839"
  },
  {
    "text": "learner rate algorithm",
    "start": "877839",
    "end": "879519"
  },
  {
    "text": "and consult leader on the replication",
    "start": "879519",
    "end": "881920"
  },
  {
    "text": "progress",
    "start": "881920",
    "end": "882880"
  },
  {
    "text": "before we return the data to the client",
    "start": "882880",
    "end": "886480"
  },
  {
    "text": "and this actually guarantees we can",
    "start": "886480",
    "end": "890240"
  },
  {
    "text": "achieve a strongly consistent rate",
    "start": "890240",
    "end": "894399"
  },
  {
    "text": "for example consider the case that",
    "start": "894399",
    "end": "898639"
  },
  {
    "text": "at time t 0 there is a write to the",
    "start": "898639",
    "end": "902720"
  },
  {
    "text": "tech every node and later at the time t",
    "start": "902720",
    "end": "906639"
  },
  {
    "text": "1",
    "start": "906639",
    "end": "907360"
  },
  {
    "text": "gives a rate to the test node",
    "start": "907360",
    "end": "910720"
  },
  {
    "text": "how do we keep how do we make sure that",
    "start": "910720",
    "end": "914240"
  },
  {
    "text": "the data read at t1 is strongly",
    "start": "914240",
    "end": "917440"
  },
  {
    "text": "consistent",
    "start": "917440",
    "end": "918800"
  },
  {
    "text": "and it can return the data written at t0",
    "start": "918800",
    "end": "924079"
  },
  {
    "text": "during this the learner will first",
    "start": "924320",
    "end": "928560"
  },
  {
    "text": "talk to the leader and ask the progress",
    "start": "928560",
    "end": "931519"
  },
  {
    "text": "of the replication",
    "start": "931519",
    "end": "933120"
  },
  {
    "text": "in the leader and in this case it knows",
    "start": "933120",
    "end": "936079"
  },
  {
    "text": "that the leader is ready",
    "start": "936079",
    "end": "937839"
  },
  {
    "text": "at index four before the",
    "start": "937839",
    "end": "941040"
  },
  {
    "text": "learner returned to the client it needs",
    "start": "941040",
    "end": "943199"
  },
  {
    "text": "to wait until it replicates to",
    "start": "943199",
    "end": "946560"
  },
  {
    "text": "index 4 and then it returns data to the",
    "start": "946560",
    "end": "950639"
  },
  {
    "text": "client this combined",
    "start": "950639",
    "end": "954079"
  },
  {
    "text": "with the timestamp and vcc",
    "start": "954079",
    "end": "957199"
  },
  {
    "text": "you can actually achieve snapshot",
    "start": "957199",
    "end": "959519"
  },
  {
    "text": "isolation",
    "start": "959519",
    "end": "960320"
  },
  {
    "text": "in ter flash as well",
    "start": "960320",
    "end": "963360"
  },
  {
    "start": "963000",
    "end": "1090000"
  },
  {
    "text": "next i'm going to talk about performance",
    "start": "966720",
    "end": "969519"
  },
  {
    "text": "here is an example",
    "start": "969519",
    "end": "970959"
  },
  {
    "text": "of the benchmark result",
    "start": "970959",
    "end": "974240"
  },
  {
    "text": "on the on-time data so on-time data",
    "start": "974240",
    "end": "977680"
  },
  {
    "text": "is a data collected since the 1980s",
    "start": "977680",
    "end": "980839"
  },
  {
    "text": "about the airplanes it considers",
    "start": "980839",
    "end": "984720"
  },
  {
    "text": "it contains the data of the flight",
    "start": "984720",
    "end": "986639"
  },
  {
    "text": "number",
    "start": "986639",
    "end": "987759"
  },
  {
    "text": "and the start time and the landing time",
    "start": "987759",
    "end": "991199"
  },
  {
    "text": "you can see from the result that the",
    "start": "991199",
    "end": "994959"
  },
  {
    "text": "ty tachydb plus tesla",
    "start": "994959",
    "end": "998480"
  },
  {
    "text": "offers a very good performance compared",
    "start": "998480",
    "end": "1001279"
  },
  {
    "text": "with the",
    "start": "1001279",
    "end": "1002160"
  },
  {
    "text": "other solutions some of them are",
    "start": "1002160",
    "end": "1005759"
  },
  {
    "text": "built for analytics and big data",
    "start": "1005759",
    "end": "1008839"
  },
  {
    "text": "processing",
    "start": "1008839",
    "end": "1010160"
  },
  {
    "text": "these queries are multi-dimensional",
    "start": "1010160",
    "end": "1013360"
  },
  {
    "text": "analytic queries whereas teddy b and",
    "start": "1013360",
    "end": "1016160"
  },
  {
    "text": "teflash is good fit",
    "start": "1016160",
    "end": "1018480"
  },
  {
    "text": "if you want to know more about the",
    "start": "1018480",
    "end": "1020560"
  },
  {
    "text": "queries look like",
    "start": "1020560",
    "end": "1022079"
  },
  {
    "text": "you can look at read about the blog",
    "start": "1022079",
    "end": "1025839"
  },
  {
    "text": "here is an example of the performance",
    "start": "1029439",
    "end": "1032319"
  },
  {
    "text": "improvement we see",
    "start": "1032319",
    "end": "1033520"
  },
  {
    "text": "from an early adopter of tech flash",
    "start": "1033520",
    "end": "1036720"
  },
  {
    "text": "it's an internet company called the",
    "start": "1036720",
    "end": "1038319"
  },
  {
    "text": "xiaohungshu",
    "start": "1038319",
    "end": "1040480"
  },
  {
    "text": "it is a thaidb user and they have tidbit",
    "start": "1040480",
    "end": "1044079"
  },
  {
    "text": "running production",
    "start": "1044079",
    "end": "1045918"
  },
  {
    "text": "they selected like around 400 queries",
    "start": "1045919",
    "end": "1048880"
  },
  {
    "text": "from their production system",
    "start": "1048880",
    "end": "1050960"
  },
  {
    "text": "and then migrated them to typeflash",
    "start": "1050960",
    "end": "1054799"
  },
  {
    "text": "from this graph we can see there's a",
    "start": "1054960",
    "end": "1057440"
  },
  {
    "text": "three to ten times",
    "start": "1057440",
    "end": "1058960"
  },
  {
    "text": "speedup",
    "start": "1058960",
    "end": "1061520"
  },
  {
    "text": "and we can see that for some long",
    "start": "1062799",
    "end": "1064880"
  },
  {
    "text": "running queries",
    "start": "1064880",
    "end": "1066320"
  },
  {
    "text": "the speed up can be up to 20 times",
    "start": "1066320",
    "end": "1070559"
  },
  {
    "text": "also i want to call out that this result",
    "start": "1071120",
    "end": "1073600"
  },
  {
    "text": "is based on",
    "start": "1073600",
    "end": "1074400"
  },
  {
    "text": "older version of tesla and since then we",
    "start": "1074400",
    "end": "1077840"
  },
  {
    "text": "made a lot of progresses",
    "start": "1077840",
    "end": "1079600"
  },
  {
    "text": "and improvements on teleflash and you",
    "start": "1079600",
    "end": "1082720"
  },
  {
    "text": "can we can expect much better",
    "start": "1082720",
    "end": "1084160"
  },
  {
    "text": "performance",
    "start": "1084160",
    "end": "1084880"
  },
  {
    "text": "with the newer version of typeflash",
    "start": "1084880",
    "end": "1088559"
  },
  {
    "text": "thank you",
    "start": "1089600",
    "end": "1092880"
  }
]