[
  {
    "text": "hi everyone i'm renault patel i'm a cryo",
    "start": "640",
    "end": "3600"
  },
  {
    "text": "maintainer and i work for red hat i also",
    "start": "3600",
    "end": "5839"
  },
  {
    "text": "maintain run c the oci runtime spec and",
    "start": "5839",
    "end": "8480"
  },
  {
    "text": "participate in kubernetes signal",
    "start": "8480",
    "end": "11040"
  },
  {
    "text": "hello everyone my name is irvi shimonani",
    "start": "11040",
    "end": "13599"
  },
  {
    "text": "and i'm a senior software engineer at",
    "start": "13599",
    "end": "15200"
  },
  {
    "text": "red hat as well as a cryo maintainer",
    "start": "15200",
    "end": "18400"
  },
  {
    "text": "hey folks i'm sasha one of the",
    "start": "18400",
    "end": "20160"
  },
  {
    "text": "maintainers of cryo and it's a pleasure",
    "start": "20160",
    "end": "22320"
  },
  {
    "text": "to be here today",
    "start": "22320",
    "end": "23920"
  },
  {
    "text": "hey everyone my name is peter hunt i'm a",
    "start": "23920",
    "end": "26240"
  },
  {
    "text": "software engineer working at red hat",
    "start": "26240",
    "end": "27920"
  },
  {
    "text": "primarily working on cryo and other",
    "start": "27920",
    "end": "29679"
  },
  {
    "text": "container related technologies",
    "start": "29679",
    "end": "32238"
  },
  {
    "text": "so today we're going to talk about what",
    "start": "32239",
    "end": "34079"
  },
  {
    "text": "is new and cryo since the last time we",
    "start": "34079",
    "end": "35760"
  },
  {
    "text": "met at coupon eu",
    "start": "35760",
    "end": "37600"
  },
  {
    "text": "first we'll go over the steps of setting",
    "start": "37600",
    "end": "39600"
  },
  {
    "text": "up kubernetes with cryo then we will",
    "start": "39600",
    "end": "41840"
  },
  {
    "text": "talk about the improvements we have in",
    "start": "41840",
    "end": "43600"
  },
  {
    "text": "place for cni handling as well as the",
    "start": "43600",
    "end": "45760"
  },
  {
    "text": "different types of workloads",
    "start": "45760",
    "end": "47600"
  },
  {
    "text": "and finally we will talk about the",
    "start": "47600",
    "end": "49360"
  },
  {
    "text": "enhancements made to metrics",
    "start": "49360",
    "end": "51680"
  },
  {
    "text": "so let's look at some of the basics of",
    "start": "51680",
    "end": "53760"
  },
  {
    "text": "running kubernetes with cryo",
    "start": "53760",
    "end": "56000"
  },
  {
    "text": "first thing we need to do is install",
    "start": "56000",
    "end": "57680"
  },
  {
    "text": "cryo on the host we're applying to run",
    "start": "57680",
    "end": "59760"
  },
  {
    "text": "our kubernetes cluster",
    "start": "59760",
    "end": "61760"
  },
  {
    "text": "we have package versions of cryo",
    "start": "61760",
    "end": "63440"
  },
  {
    "text": "available from multiple operating",
    "start": "63440",
    "end": "65119"
  },
  {
    "text": "systems",
    "start": "65119",
    "end": "66320"
  },
  {
    "text": "as you can see here we have fedora open",
    "start": "66320",
    "end": "68560"
  },
  {
    "text": "susie santos 8 debian raspbian and",
    "start": "68560",
    "end": "71200"
  },
  {
    "text": "ubuntu",
    "start": "71200",
    "end": "72799"
  },
  {
    "text": "packaging for cryo is largely driven by",
    "start": "72799",
    "end": "74960"
  },
  {
    "text": "requests so if there is a version or",
    "start": "74960",
    "end": "77360"
  },
  {
    "text": "operating system that is missing please",
    "start": "77360",
    "end": "79360"
  },
  {
    "text": "feel free to open an issue for it",
    "start": "79360",
    "end": "81920"
  },
  {
    "text": "you can also build your own binaries",
    "start": "81920",
    "end": "83600"
  },
  {
    "text": "from source if you would prefer to do",
    "start": "83600",
    "end": "85360"
  },
  {
    "text": "that one example would be to get the",
    "start": "85360",
    "end": "87759"
  },
  {
    "text": "latest and greatest cryo that hasn't",
    "start": "87759",
    "end": "89520"
  },
  {
    "text": "been packaged yet but is available in",
    "start": "89520",
    "end": "91360"
  },
  {
    "text": "upstream",
    "start": "91360",
    "end": "92560"
  },
  {
    "text": "we also have support for building static",
    "start": "92560",
    "end": "94240"
  },
  {
    "text": "binaries and our binaries can be found",
    "start": "94240",
    "end": "96240"
  },
  {
    "text": "in our google cloud storage bucket",
    "start": "96240",
    "end": "98320"
  },
  {
    "text": "so once you've installed cryo on your",
    "start": "98320",
    "end": "99840"
  },
  {
    "text": "system either through the package",
    "start": "99840",
    "end": "101759"
  },
  {
    "text": "versions or by building your own binary",
    "start": "101759",
    "end": "104000"
  },
  {
    "text": "the next step is to enable and start cry",
    "start": "104000",
    "end": "106159"
  },
  {
    "text": "on the host so that we can run",
    "start": "106159",
    "end": "107600"
  },
  {
    "text": "kubernetes with it",
    "start": "107600",
    "end": "109439"
  },
  {
    "text": "cryo versions walk in lock step with",
    "start": "109439",
    "end": "111360"
  },
  {
    "text": "kubernetes versions so what this means",
    "start": "111360",
    "end": "113520"
  },
  {
    "text": "is that cryo118 is guaranteed to work",
    "start": "113520",
    "end": "115759"
  },
  {
    "text": "with kubernetes 118 same for 119 and so",
    "start": "115759",
    "end": "119119"
  },
  {
    "text": "forth so make sure the versions of",
    "start": "119119",
    "end": "121040"
  },
  {
    "text": "kubernetes and cryo you're running match",
    "start": "121040",
    "end": "124640"
  },
  {
    "text": "once this is all done we just need to",
    "start": "124640",
    "end": "126320"
  },
  {
    "text": "point the runtime endpoint for",
    "start": "126320",
    "end": "127520"
  },
  {
    "text": "kubernetes to the cryosocket and our",
    "start": "127520",
    "end": "129280"
  },
  {
    "text": "cluster should come up successfully",
    "start": "129280",
    "end": "132080"
  },
  {
    "text": "i have a small demo showing this let's",
    "start": "132080",
    "end": "134000"
  },
  {
    "text": "take a quick look",
    "start": "134000",
    "end": "135920"
  },
  {
    "text": "all right i've already installed and",
    "start": "135920",
    "end": "137360"
  },
  {
    "text": "started cryo on my system",
    "start": "137360",
    "end": "139680"
  },
  {
    "text": "we can check this by using the system",
    "start": "139680",
    "end": "141440"
  },
  {
    "text": "ctl status command and as we see here",
    "start": "141440",
    "end": "144560"
  },
  {
    "text": "cryo is up and running",
    "start": "144560",
    "end": "146720"
  },
  {
    "text": "now i have a simple script that i use to",
    "start": "146720",
    "end": "149280"
  },
  {
    "text": "bring the cluster up using",
    "start": "149280",
    "end": "151680"
  },
  {
    "text": "cryo",
    "start": "151680",
    "end": "152720"
  },
  {
    "text": "so the main thing here is that i'm",
    "start": "152720",
    "end": "154480"
  },
  {
    "text": "setting container runtime endpoint to",
    "start": "154480",
    "end": "156319"
  },
  {
    "text": "the cryo socket and the c group driver",
    "start": "156319",
    "end": "158720"
  },
  {
    "text": "to system b",
    "start": "158720",
    "end": "160160"
  },
  {
    "text": "everything else is just a few",
    "start": "160160",
    "end": "161519"
  },
  {
    "text": "configurations that i would like for",
    "start": "161519",
    "end": "162879"
  },
  {
    "text": "example the ip stuff for networking and",
    "start": "162879",
    "end": "164959"
  },
  {
    "text": "i would like to get a dashboard",
    "start": "164959",
    "end": "167040"
  },
  {
    "text": "and stuff off",
    "start": "167040",
    "end": "168400"
  },
  {
    "text": "all right so let's just call the script",
    "start": "168400",
    "end": "170720"
  },
  {
    "text": "to get the cluster",
    "start": "170720",
    "end": "172800"
  },
  {
    "text": "going",
    "start": "172800",
    "end": "174080"
  },
  {
    "text": "this will take a few seconds to start up",
    "start": "174080",
    "end": "177920"
  },
  {
    "text": "oh and we're using the local lab cluster",
    "start": "177920",
    "end": "180800"
  },
  {
    "text": "um that you get from the kubernetes repo",
    "start": "180800",
    "end": "183200"
  },
  {
    "text": "we're just changing a few configurations",
    "start": "183200",
    "end": "185519"
  },
  {
    "text": "and pointing the endpoint to cryo",
    "start": "185519",
    "end": "189599"
  },
  {
    "text": "all right our cluster is up and running",
    "start": "197280",
    "end": "199760"
  },
  {
    "text": "now let's grab the cube config",
    "start": "199760",
    "end": "202959"
  },
  {
    "text": "and take a look at the cluster all right",
    "start": "202959",
    "end": "205360"
  },
  {
    "text": "so let's export the cube config here",
    "start": "205360",
    "end": "208560"
  },
  {
    "text": "let's take a look at the node",
    "start": "208560",
    "end": "211360"
  },
  {
    "text": "and as you can see the node is up and",
    "start": "211360",
    "end": "213040"
  },
  {
    "text": "running",
    "start": "213040",
    "end": "214400"
  },
  {
    "text": "let's run a simple pod",
    "start": "214400",
    "end": "218080"
  },
  {
    "text": "i'm just going to call it mypod",
    "start": "218080",
    "end": "222040"
  },
  {
    "text": "so it's creating my pod let's look at",
    "start": "228000",
    "end": "230400"
  },
  {
    "text": "the status of the pod",
    "start": "230400",
    "end": "232879"
  },
  {
    "text": "and as we can see the pod is up and",
    "start": "232879",
    "end": "234480"
  },
  {
    "text": "running and my cluster is running with",
    "start": "234480",
    "end": "236400"
  },
  {
    "text": "cryo successfully",
    "start": "236400",
    "end": "238000"
  },
  {
    "text": "we can also use the crystal tool to look",
    "start": "238000",
    "end": "241200"
  },
  {
    "text": "at the containers created by cryo so if",
    "start": "241200",
    "end": "244000"
  },
  {
    "text": "i do pseudo price ctops i'll see that",
    "start": "244000",
    "end": "246480"
  },
  {
    "text": "these are all the containers running",
    "start": "246480",
    "end": "247840"
  },
  {
    "text": "currently i run the fedora container so",
    "start": "247840",
    "end": "250480"
  },
  {
    "text": "as you can see that that's the first one",
    "start": "250480",
    "end": "251760"
  },
  {
    "text": "that's running",
    "start": "251760",
    "end": "253519"
  },
  {
    "text": "and it's that simple to run",
    "start": "253519",
    "end": "256079"
  },
  {
    "text": "kubernetes with cryo",
    "start": "256079",
    "end": "258560"
  },
  {
    "text": "we can also use the similar steps to run",
    "start": "258560",
    "end": "261680"
  },
  {
    "text": "cube adm as well as kind with cryo",
    "start": "261680",
    "end": "264240"
  },
  {
    "text": "should be pretty straightforward",
    "start": "264240",
    "end": "266320"
  },
  {
    "text": "and you can take a look at our",
    "start": "266320",
    "end": "268000"
  },
  {
    "text": "installation and setup guides on the",
    "start": "268000",
    "end": "270080"
  },
  {
    "text": "github repo they have much more detailed",
    "start": "270080",
    "end": "272800"
  },
  {
    "text": "instructions on how to",
    "start": "272800",
    "end": "274720"
  },
  {
    "text": "get started with cryo and kubernetes",
    "start": "274720",
    "end": "277360"
  },
  {
    "text": "hello everybody",
    "start": "277360",
    "end": "279199"
  },
  {
    "text": "next up i'm going to talk a little bit",
    "start": "279199",
    "end": "280720"
  },
  {
    "text": "about cryo and cni and some improvements",
    "start": "280720",
    "end": "283520"
  },
  {
    "text": "we've made to their relationship",
    "start": "283520",
    "end": "286240"
  },
  {
    "text": "specifically",
    "start": "286240",
    "end": "287600"
  },
  {
    "text": "some better handling around",
    "start": "287600",
    "end": "290240"
  },
  {
    "text": "stateful",
    "start": "290240",
    "end": "292000"
  },
  {
    "text": "pod based cni plug-ins",
    "start": "292000",
    "end": "295840"
  },
  {
    "text": "those of you that don't know cni is a",
    "start": "295840",
    "end": "297840"
  },
  {
    "text": "common interface for container runtimes",
    "start": "297840",
    "end": "300000"
  },
  {
    "text": "to create networking resources it",
    "start": "300000",
    "end": "302160"
  },
  {
    "text": "includes a set of commonly used plugins",
    "start": "302160",
    "end": "304479"
  },
  {
    "text": "and defines an interface for new plugins",
    "start": "304479",
    "end": "306400"
  },
  {
    "text": "to be created",
    "start": "306400",
    "end": "307840"
  },
  {
    "text": "cryo has supported cni since its",
    "start": "307840",
    "end": "309919"
  },
  {
    "text": "inception and cni is supported by many",
    "start": "309919",
    "end": "312560"
  },
  {
    "text": "other container managers",
    "start": "312560",
    "end": "314479"
  },
  {
    "text": "but cryo really only loves cni",
    "start": "314479",
    "end": "317600"
  },
  {
    "text": "let's talk a little bit about",
    "start": "317600",
    "end": "319600"
  },
  {
    "text": "that",
    "start": "319600",
    "end": "320639"
  },
  {
    "text": "relationship",
    "start": "320639",
    "end": "322080"
  },
  {
    "text": "so it's age old you know the lifetime of",
    "start": "322080",
    "end": "325520"
  },
  {
    "text": "cryo but even so the relationship",
    "start": "325520",
    "end": "328160"
  },
  {
    "text": "between kubernetes cryo and cni is a",
    "start": "328160",
    "end": "330800"
  },
  {
    "text": "little bit hacky",
    "start": "330800",
    "end": "332160"
  },
  {
    "text": "cni is a plug-in based architecture",
    "start": "332160",
    "end": "334479"
  },
  {
    "text": "where there's a binary on the system",
    "start": "334479",
    "end": "336000"
  },
  {
    "text": "that cryo execs to provision the",
    "start": "336000",
    "end": "337600"
  },
  {
    "text": "resources this is fine and dandy for",
    "start": "337600",
    "end": "340000"
  },
  {
    "text": "stateless plugins that are known in",
    "start": "340000",
    "end": "342160"
  },
  {
    "text": "installation like a simple",
    "start": "342160",
    "end": "344080"
  },
  {
    "text": "bridge plugin between hosting container",
    "start": "344080",
    "end": "346479"
  },
  {
    "text": "that's installed through the",
    "start": "346479",
    "end": "348080"
  },
  {
    "text": "distributions package manager what about",
    "start": "348080",
    "end": "350320"
  },
  {
    "text": "more complex stateful networking",
    "start": "350320",
    "end": "352960"
  },
  {
    "text": "network provisioning schemes or more",
    "start": "352960",
    "end": "355840"
  },
  {
    "text": "dynamic ones where we don't really know",
    "start": "355840",
    "end": "358160"
  },
  {
    "text": "what it is at installation time but we",
    "start": "358160",
    "end": "360000"
  },
  {
    "text": "do know at runtime",
    "start": "360000",
    "end": "363120"
  },
  {
    "text": "often the way that more complex",
    "start": "363919",
    "end": "366560"
  },
  {
    "text": "cni plugins end up working",
    "start": "366560",
    "end": "369120"
  },
  {
    "text": "is",
    "start": "369120",
    "end": "370160"
  },
  {
    "text": "is a pod based strategy",
    "start": "370160",
    "end": "372319"
  },
  {
    "text": "calico ovn and openshift sdn all work",
    "start": "372319",
    "end": "374960"
  },
  {
    "text": "this way",
    "start": "374960",
    "end": "376000"
  },
  {
    "text": "basically it's a privileged host network",
    "start": "376000",
    "end": "378479"
  },
  {
    "text": "see an ipod is that scheduled onto the",
    "start": "378479",
    "end": "381039"
  },
  {
    "text": "node this pod is responsible for setting",
    "start": "381039",
    "end": "383360"
  },
  {
    "text": "up some state and eventually a",
    "start": "383360",
    "end": "385440"
  },
  {
    "text": "networking plug-in binary is put in the",
    "start": "385440",
    "end": "387440"
  },
  {
    "text": "correct location by the pod",
    "start": "387440",
    "end": "390319"
  },
  {
    "text": "this binary is a pass-through",
    "start": "390319",
    "end": "391680"
  },
  {
    "text": "communication tool for the networking",
    "start": "391680",
    "end": "393520"
  },
  {
    "text": "container itself when crowd creates a",
    "start": "393520",
    "end": "396240"
  },
  {
    "text": "non-host network pod it attempts to",
    "start": "396240",
    "end": "398560"
  },
  {
    "text": "exect the binary and then the networking",
    "start": "398560",
    "end": "401600"
  },
  {
    "text": "pod",
    "start": "401600",
    "end": "402479"
  },
  {
    "text": "and then that information is passed to",
    "start": "402479",
    "end": "405440"
  },
  {
    "text": "the networking pod and the networking",
    "start": "405440",
    "end": "407280"
  },
  {
    "text": "pod returns the information",
    "start": "407280",
    "end": "409520"
  },
  {
    "text": "and then the crowd can continue to",
    "start": "409520",
    "end": "412319"
  },
  {
    "text": "create the pod",
    "start": "412319",
    "end": "415120"
  },
  {
    "text": "so in addition to the architectural",
    "start": "415120",
    "end": "417199"
  },
  {
    "text": "complexity there there's a couple of",
    "start": "417199",
    "end": "418960"
  },
  {
    "text": "pitfalls with this approach the",
    "start": "418960",
    "end": "420880"
  },
  {
    "text": "networking resources are provisioned by",
    "start": "420880",
    "end": "422560"
  },
  {
    "text": "a pod what happens before that pod is",
    "start": "422560",
    "end": "424720"
  },
  {
    "text": "created and what happens when the node",
    "start": "424720",
    "end": "426800"
  },
  {
    "text": "is rebooted and the pod is restarted",
    "start": "426800",
    "end": "429919"
  },
  {
    "text": "we're going to go into a couple of",
    "start": "429919",
    "end": "432000"
  },
  {
    "text": "improvements that cryo's made in these",
    "start": "432000",
    "end": "433840"
  },
  {
    "text": "two",
    "start": "433840",
    "end": "434840"
  },
  {
    "text": "areas to start off we'll start with the",
    "start": "434840",
    "end": "437039"
  },
  {
    "text": "former one",
    "start": "437039",
    "end": "438479"
  },
  {
    "text": "uh what happens when",
    "start": "438479",
    "end": "440880"
  },
  {
    "text": "uh before that pod is created",
    "start": "440880",
    "end": "443759"
  },
  {
    "text": "so in this former situation cryo would",
    "start": "443759",
    "end": "445919"
  },
  {
    "text": "attempt to create a non-host network pod",
    "start": "445919",
    "end": "448160"
  },
  {
    "text": "as soon as the request came in from the",
    "start": "448160",
    "end": "450080"
  },
  {
    "text": "cubelet",
    "start": "450080",
    "end": "451360"
  },
  {
    "text": "on node startup there's a stampede of",
    "start": "451360",
    "end": "453840"
  },
  {
    "text": "pod creation requests totally unordered",
    "start": "453840",
    "end": "456000"
  },
  {
    "text": "the cubelet's not very good at ordering",
    "start": "456000",
    "end": "458080"
  },
  {
    "text": "pod creation it creates all the static",
    "start": "458080",
    "end": "459919"
  },
  {
    "text": "pods and then it creates all the pods",
    "start": "459919",
    "end": "461680"
  },
  {
    "text": "that it gets from the api server if the",
    "start": "461680",
    "end": "465520"
  },
  {
    "text": "host network if the cnipod",
    "start": "465520",
    "end": "468800"
  },
  {
    "text": "is uh one that is kept in the api server",
    "start": "468800",
    "end": "472879"
  },
  {
    "text": "or provision asked to be created by the",
    "start": "472879",
    "end": "474960"
  },
  {
    "text": "api server rather than a static pod",
    "start": "474960",
    "end": "477360"
  },
  {
    "text": "along with all the private network pods",
    "start": "477360",
    "end": "479280"
  },
  {
    "text": "that we have used to have this situation",
    "start": "479280",
    "end": "482560"
  },
  {
    "text": "the cubelet asked cryo to create a",
    "start": "482560",
    "end": "485280"
  },
  {
    "text": "private network pod",
    "start": "485280",
    "end": "487840"
  },
  {
    "text": "at the same time cuba asked to create a",
    "start": "487840",
    "end": "489759"
  },
  {
    "text": "host network pod cryo fails this first",
    "start": "489759",
    "end": "492479"
  },
  {
    "text": "request because the host network pod is",
    "start": "492479",
    "end": "494960"
  },
  {
    "text": "that is the cnipod is not yet up",
    "start": "494960",
    "end": "497759"
  },
  {
    "text": "uh and the networking plot again is not",
    "start": "497759",
    "end": "499919"
  },
  {
    "text": "set up",
    "start": "499919",
    "end": "501440"
  },
  {
    "text": "cryo then processes the host network pod",
    "start": "501440",
    "end": "503840"
  },
  {
    "text": "request to see an ipod takes it and you",
    "start": "503840",
    "end": "507120"
  },
  {
    "text": "know uh returns its creation",
    "start": "507120",
    "end": "510160"
  },
  {
    "text": "and uh then the cubelet you know",
    "start": "510160",
    "end": "514240"
  },
  {
    "text": "uh re-requests the network the private",
    "start": "514240",
    "end": "516479"
  },
  {
    "text": "network pod and cryo",
    "start": "516479",
    "end": "518719"
  },
  {
    "text": "uh now with the up see an ipod is able",
    "start": "518719",
    "end": "521279"
  },
  {
    "text": "to create the request",
    "start": "521279",
    "end": "523120"
  },
  {
    "text": "uh complete the request so this is okay",
    "start": "523120",
    "end": "525680"
  },
  {
    "text": "the pod does eventually come up we're",
    "start": "525680",
    "end": "527440"
  },
  {
    "text": "emphasizing the eventual part of",
    "start": "527440",
    "end": "528640"
  },
  {
    "text": "eventual consistency but it is wasteful",
    "start": "528640",
    "end": "531200"
  },
  {
    "text": "we spend this whole cycle",
    "start": "531200",
    "end": "533440"
  },
  {
    "text": "not creating the pod",
    "start": "533440",
    "end": "535600"
  },
  {
    "text": "it would be better",
    "start": "535600",
    "end": "536880"
  },
  {
    "text": "if",
    "start": "536880",
    "end": "537920"
  },
  {
    "text": "and it is better now that we've improved",
    "start": "537920",
    "end": "540240"
  },
  {
    "text": "it",
    "start": "540240",
    "end": "541040"
  },
  {
    "text": "by waiting until the",
    "start": "541040",
    "end": "543760"
  },
  {
    "text": "scene ipod is up so",
    "start": "543760",
    "end": "546240"
  },
  {
    "text": "the cubelet asked to create a private",
    "start": "546240",
    "end": "548320"
  },
  {
    "text": "network pod cryo notices that that that",
    "start": "548320",
    "end": "551680"
  },
  {
    "text": "the cni pod is not up yet it attempts to",
    "start": "551680",
    "end": "554320"
  },
  {
    "text": "execute the binary and the it fails for",
    "start": "554320",
    "end": "556320"
  },
  {
    "text": "whatever reason so crow stalls the queue",
    "start": "556320",
    "end": "558399"
  },
  {
    "text": "it's like hold on wait i'm not ready yet",
    "start": "558399",
    "end": "561200"
  },
  {
    "text": "cube cubelet goes forward requesting all",
    "start": "561200",
    "end": "563360"
  },
  {
    "text": "the pods as it does and eventually it'll",
    "start": "563360",
    "end": "565920"
  },
  {
    "text": "get to all the host network pods crowd",
    "start": "565920",
    "end": "568320"
  },
  {
    "text": "is able to provision host network pods",
    "start": "568320",
    "end": "569920"
  },
  {
    "text": "because they don't rely on the cnipod",
    "start": "569920",
    "end": "571920"
  },
  {
    "text": "and eventually one of those host network",
    "start": "571920",
    "end": "573360"
  },
  {
    "text": "pods is going to be the cnipod",
    "start": "573360",
    "end": "575360"
  },
  {
    "text": "and then everything goes as expected see",
    "start": "575360",
    "end": "577440"
  },
  {
    "text": "an ipod is created returned to the",
    "start": "577440",
    "end": "579120"
  },
  {
    "text": "cubelet",
    "start": "579120",
    "end": "580160"
  },
  {
    "text": "at this point cryo realizes it can",
    "start": "580160",
    "end": "582399"
  },
  {
    "text": "unblock all of the other",
    "start": "582399",
    "end": "584399"
  },
  {
    "text": "uh pod pod creation requests as",
    "start": "584399",
    "end": "587519"
  },
  {
    "text": "uh the cn ipod is now up so it asks for",
    "start": "587519",
    "end": "589600"
  },
  {
    "text": "a network for all the other pods gets",
    "start": "589600",
    "end": "591600"
  },
  {
    "text": "one and returns it and everything's",
    "start": "591600",
    "end": "593519"
  },
  {
    "text": "hunky dory",
    "start": "593519",
    "end": "595279"
  },
  {
    "text": "the next situation if you remember what",
    "start": "595279",
    "end": "598560"
  },
  {
    "text": "happens when the node is rebooted and",
    "start": "598560",
    "end": "600240"
  },
  {
    "text": "the pod is restarted",
    "start": "600240",
    "end": "601920"
  },
  {
    "text": "when a node is rebooted and the pod has",
    "start": "601920",
    "end": "603360"
  },
  {
    "text": "restarted cryo",
    "start": "603360",
    "end": "605600"
  },
  {
    "text": "uh so on on",
    "start": "605600",
    "end": "607519"
  },
  {
    "text": "uh node",
    "start": "607519",
    "end": "608800"
  },
  {
    "text": "boot",
    "start": "608800",
    "end": "609680"
  },
  {
    "text": "cryo first checks the disk for any",
    "start": "609680",
    "end": "611680"
  },
  {
    "text": "containers that it used to have and then",
    "start": "611680",
    "end": "613600"
  },
  {
    "text": "it attempts to recreate them",
    "start": "613600",
    "end": "615760"
  },
  {
    "text": "unfortunately on a reboot this will fail",
    "start": "615760",
    "end": "617920"
  },
  {
    "text": "because",
    "start": "617920",
    "end": "618959"
  },
  {
    "text": "the um all of the containers have some",
    "start": "618959",
    "end": "621120"
  },
  {
    "text": "information and temp effects",
    "start": "621120",
    "end": "623040"
  },
  {
    "text": "and uh that time ffs is no longer there",
    "start": "623040",
    "end": "625440"
  },
  {
    "text": "because of reboot",
    "start": "625440",
    "end": "627680"
  },
  {
    "text": "so",
    "start": "627680",
    "end": "628480"
  },
  {
    "text": "the",
    "start": "628480",
    "end": "629600"
  },
  {
    "text": "cryo cleans up you know the information",
    "start": "629600",
    "end": "632399"
  },
  {
    "text": "of the containers which ends up being",
    "start": "632399",
    "end": "634240"
  },
  {
    "text": "you know the container storage but that",
    "start": "634240",
    "end": "636000"
  },
  {
    "text": "does isn't everything that containers",
    "start": "636000",
    "end": "638079"
  },
  {
    "text": "provision in this case",
    "start": "638079",
    "end": "639920"
  },
  {
    "text": "uh if a cni pod provisioned some",
    "start": "639920",
    "end": "642160"
  },
  {
    "text": "resources that wasn't cleaned up after",
    "start": "642160",
    "end": "644000"
  },
  {
    "text": "the reboot then cryo would not attempt",
    "start": "644000",
    "end": "646720"
  },
  {
    "text": "to call cnidel the command to delete all",
    "start": "646720",
    "end": "649360"
  },
  {
    "text": "the uh the cni state and that state",
    "start": "649360",
    "end": "651519"
  },
  {
    "text": "would leak",
    "start": "651519",
    "end": "653440"
  },
  {
    "text": "so this is obviously unfortunate we",
    "start": "653440",
    "end": "654800"
  },
  {
    "text": "don't like leaks so we've since improved",
    "start": "654800",
    "end": "658160"
  },
  {
    "text": "cryo",
    "start": "658160",
    "end": "659279"
  },
  {
    "text": "to now attempt to clean up the",
    "start": "659279",
    "end": "661519"
  },
  {
    "text": "networking resources after no reboots so",
    "start": "661519",
    "end": "663680"
  },
  {
    "text": "we see this reboot here",
    "start": "663680",
    "end": "665440"
  },
  {
    "text": "crow",
    "start": "665440",
    "end": "666399"
  },
  {
    "text": "uh attempts to clean up the style pods",
    "start": "666399",
    "end": "668000"
  },
  {
    "text": "as it did before and this time it",
    "start": "668000",
    "end": "670160"
  },
  {
    "text": "attempts to ask the cni plugin to clean",
    "start": "670160",
    "end": "672320"
  },
  {
    "text": "up the resources",
    "start": "672320",
    "end": "674000"
  },
  {
    "text": "but the cni plug-in isn't up yet so that",
    "start": "674000",
    "end": "676000"
  },
  {
    "text": "actually fails so cryo will keep you",
    "start": "676000",
    "end": "677600"
  },
  {
    "text": "trying to do that uh you know",
    "start": "677600",
    "end": "679600"
  },
  {
    "text": "continually polling to see",
    "start": "679600",
    "end": "681920"
  },
  {
    "text": "when the",
    "start": "681920",
    "end": "683040"
  },
  {
    "text": "cni pot is up eventually the cubelet",
    "start": "683040",
    "end": "685920"
  },
  {
    "text": "will you know start up ask to create all",
    "start": "685920",
    "end": "688480"
  },
  {
    "text": "the pods",
    "start": "688480",
    "end": "689760"
  },
  {
    "text": "cry will prioritize the host network",
    "start": "689760",
    "end": "691440"
  },
  {
    "text": "pods and the host one of those host",
    "start": "691440",
    "end": "694880"
  },
  {
    "text": "network pods will hopefully be to see an",
    "start": "694880",
    "end": "696880"
  },
  {
    "text": "ipod",
    "start": "696880",
    "end": "698160"
  },
  {
    "text": "the cryo will ask the scene ipod to be",
    "start": "698160",
    "end": "700160"
  },
  {
    "text": "created it will be created",
    "start": "700160",
    "end": "702800"
  },
  {
    "text": "at which point cryo will realize that",
    "start": "702800",
    "end": "705120"
  },
  {
    "text": "the other cni resources",
    "start": "705120",
    "end": "707680"
  },
  {
    "text": "can be cleaned up and cryo will do so",
    "start": "707680",
    "end": "710320"
  },
  {
    "text": "so we've now",
    "start": "710320",
    "end": "711600"
  },
  {
    "text": "shored up that leak",
    "start": "711600",
    "end": "713200"
  },
  {
    "text": "and there's uh you know no opportunity",
    "start": "713200",
    "end": "716160"
  },
  {
    "text": "for",
    "start": "716160",
    "end": "717040"
  },
  {
    "text": "the cni resources you know ipam entries",
    "start": "717040",
    "end": "720399"
  },
  {
    "text": "or",
    "start": "720399",
    "end": "721200"
  },
  {
    "text": "uh you know",
    "start": "721200",
    "end": "722639"
  },
  {
    "text": "the",
    "start": "722639",
    "end": "723360"
  },
  {
    "text": "eth uh beef uh entries you know they",
    "start": "723360",
    "end": "726639"
  },
  {
    "text": "they're all gonna stay around uh they're",
    "start": "726639",
    "end": "728399"
  },
  {
    "text": "all gonna be cleaned up when they need",
    "start": "728399",
    "end": "729600"
  },
  {
    "text": "to be",
    "start": "729600",
    "end": "731839"
  },
  {
    "text": "all in all",
    "start": "732079",
    "end": "733279"
  },
  {
    "text": "uh",
    "start": "733279",
    "end": "734399"
  },
  {
    "text": "cryo",
    "start": "734399",
    "end": "735519"
  },
  {
    "text": "by focusing its networking stack on cni",
    "start": "735519",
    "end": "739440"
  },
  {
    "text": "uh and kubernetes is able to tailor its",
    "start": "739440",
    "end": "742000"
  },
  {
    "text": "behavior not only to the cubelet but",
    "start": "742000",
    "end": "744399"
  },
  {
    "text": "also to like the idiomatic way that",
    "start": "744399",
    "end": "747600"
  },
  {
    "text": "stateful networking provision networks",
    "start": "747600",
    "end": "749920"
  },
  {
    "text": "provisioning strategies",
    "start": "749920",
    "end": "751680"
  },
  {
    "text": "work where it's often pod based and",
    "start": "751680",
    "end": "754560"
  },
  {
    "text": "often",
    "start": "754560",
    "end": "755600"
  },
  {
    "text": "um you know behaves in these very",
    "start": "755600",
    "end": "757440"
  },
  {
    "text": "certain ways and cryo is able to tailor",
    "start": "757440",
    "end": "758959"
  },
  {
    "text": "its behavior so that",
    "start": "758959",
    "end": "761279"
  },
  {
    "text": "it can account for those",
    "start": "761279",
    "end": "763120"
  },
  {
    "text": "this makes uh cryo this",
    "start": "763120",
    "end": "766000"
  },
  {
    "text": "shows that cryo along with cni and",
    "start": "766000",
    "end": "767600"
  },
  {
    "text": "kubernetes uh is a very good uh choice",
    "start": "767600",
    "end": "771680"
  },
  {
    "text": "for your cri implementation in your",
    "start": "771680",
    "end": "774880"
  },
  {
    "text": "kubernetes cluster",
    "start": "774880",
    "end": "776560"
  },
  {
    "text": "thank you",
    "start": "776560",
    "end": "778720"
  },
  {
    "text": "i'm going to talk about a new concept",
    "start": "778720",
    "end": "780560"
  },
  {
    "text": "that we introduced in cryo called",
    "start": "780560",
    "end": "781920"
  },
  {
    "text": "workload types we came across a problem",
    "start": "781920",
    "end": "784160"
  },
  {
    "text": "that motivated us to introduce this",
    "start": "784160",
    "end": "785839"
  },
  {
    "text": "concept the problem was is there a way",
    "start": "785839",
    "end": "788399"
  },
  {
    "text": "to run all of my cluster components at",
    "start": "788399",
    "end": "790639"
  },
  {
    "text": "this control plane pods and per node",
    "start": "790639",
    "end": "792880"
  },
  {
    "text": "pods only on specific result cpu cores",
    "start": "792880",
    "end": "795760"
  },
  {
    "text": "so there's a clear separation between",
    "start": "795760",
    "end": "797360"
  },
  {
    "text": "the cluster components and the end user",
    "start": "797360",
    "end": "799519"
  },
  {
    "text": "workloads",
    "start": "799519",
    "end": "800720"
  },
  {
    "text": "this feature allows you to add",
    "start": "800720",
    "end": "802160"
  },
  {
    "text": "annotations to your pods to specify",
    "start": "802160",
    "end": "804399"
  },
  {
    "text": "their workload type and then cryo",
    "start": "804399",
    "end": "806320"
  },
  {
    "text": "matches on those annotations",
    "start": "806320",
    "end": "808240"
  },
  {
    "text": "to modify those parts these",
    "start": "808240",
    "end": "810240"
  },
  {
    "text": "modifications are declaratively",
    "start": "810240",
    "end": "811920"
  },
  {
    "text": "configurable in cryo.com another use",
    "start": "811920",
    "end": "814800"
  },
  {
    "text": "case for this feature is usernamespace",
    "start": "814800",
    "end": "816480"
  },
  {
    "text": "support cryo has experimental username",
    "start": "816480",
    "end": "818800"
  },
  {
    "text": "space support that uses runtime classes",
    "start": "818800",
    "end": "821120"
  },
  {
    "text": "today but it fits more cleanly into the",
    "start": "821120",
    "end": "823279"
  },
  {
    "text": "workload types concept and we are",
    "start": "823279",
    "end": "825120"
  },
  {
    "text": "working on refactoring it over",
    "start": "825120",
    "end": "827519"
  },
  {
    "text": "let us walk through an example of",
    "start": "827519",
    "end": "829040"
  },
  {
    "text": "configuring workload types",
    "start": "829040",
    "end": "831040"
  },
  {
    "text": "this slide has a snippet that one can",
    "start": "831040",
    "end": "833120"
  },
  {
    "text": "drop into a file under hccryo try.com.d",
    "start": "833120",
    "end": "836720"
  },
  {
    "text": "or directly add to cryo.com to configure",
    "start": "836720",
    "end": "839279"
  },
  {
    "text": "a workload type that we call pend the",
    "start": "839279",
    "end": "841839"
  },
  {
    "text": "activation annotation is the annotation",
    "start": "841839",
    "end": "843760"
  },
  {
    "text": "that needs to be added to a pod to",
    "start": "843760",
    "end": "845839"
  },
  {
    "text": "activate this workload type",
    "start": "845839",
    "end": "847600"
  },
  {
    "text": "the resources section has resources that",
    "start": "847600",
    "end": "850320"
  },
  {
    "text": "are modified for the pods that match",
    "start": "850320",
    "end": "852240"
  },
  {
    "text": "this workload type in this example the",
    "start": "852240",
    "end": "854480"
  },
  {
    "text": "pods are getting the cpu set modified to",
    "start": "854480",
    "end": "856959"
  },
  {
    "text": "run only on cpus 0 and 1. the annotation",
    "start": "856959",
    "end": "860240"
  },
  {
    "text": "prefix can be used to override the",
    "start": "860240",
    "end": "861920"
  },
  {
    "text": "default configured resource settings",
    "start": "861920",
    "end": "863760"
  },
  {
    "text": "from the pod",
    "start": "863760",
    "end": "864959"
  },
  {
    "text": "now let's move on to a demo of this",
    "start": "864959",
    "end": "866639"
  },
  {
    "text": "feature",
    "start": "866639",
    "end": "868079"
  },
  {
    "text": "so i'm going to demo the workload types",
    "start": "868079",
    "end": "869920"
  },
  {
    "text": "feature here",
    "start": "869920",
    "end": "871279"
  },
  {
    "text": "uh so i have a drop in here under etsy",
    "start": "871279",
    "end": "873839"
  },
  {
    "text": "cryo cryo.con.t",
    "start": "873839",
    "end": "875920"
  },
  {
    "text": "that uses the same example from the",
    "start": "875920",
    "end": "877519"
  },
  {
    "text": "slides we have the activation annotation",
    "start": "877519",
    "end": "879920"
  },
  {
    "text": "the annotation prefix and the cpu set",
    "start": "879920",
    "end": "882880"
  },
  {
    "text": "that we're trying to pin to",
    "start": "882880",
    "end": "886399"
  },
  {
    "text": "i have a local up cluster with",
    "start": "887040",
    "end": "888560"
  },
  {
    "text": "kubernetes and cryo 122 running here",
    "start": "888560",
    "end": "892480"
  },
  {
    "text": "we will",
    "start": "892480",
    "end": "893600"
  },
  {
    "text": "run three pods here one without any of",
    "start": "893600",
    "end": "896079"
  },
  {
    "text": "the annotations and the other two",
    "start": "896079",
    "end": "898560"
  },
  {
    "text": "demonstrating workload types",
    "start": "898560",
    "end": "901839"
  },
  {
    "text": "so i launched a simple httpd pod we'll",
    "start": "902959",
    "end": "905920"
  },
  {
    "text": "wait for it to run it's running now",
    "start": "905920",
    "end": "908399"
  },
  {
    "text": "we will use cryctlps to get the id of",
    "start": "908399",
    "end": "911440"
  },
  {
    "text": "the container",
    "start": "911440",
    "end": "913519"
  },
  {
    "text": "and then we will examine the cpu set of",
    "start": "913519",
    "end": "915600"
  },
  {
    "text": "that container",
    "start": "915600",
    "end": "918839"
  },
  {
    "text": "so you can see that nothing is set here",
    "start": "932639",
    "end": "934320"
  },
  {
    "text": "it means that this pod can run on any of",
    "start": "934320",
    "end": "937279"
  },
  {
    "text": "the cpus on this machine so",
    "start": "937279",
    "end": "941120"
  },
  {
    "text": "next",
    "start": "941120",
    "end": "943519"
  },
  {
    "text": "we're going to run this pod which has",
    "start": "944800",
    "end": "947440"
  },
  {
    "text": "the activation annotation",
    "start": "947440",
    "end": "951480"
  },
  {
    "text": "it's running as well",
    "start": "960000",
    "end": "963800"
  },
  {
    "text": "and we see here that it gets pinned to 0",
    "start": "982959",
    "end": "985279"
  },
  {
    "text": "and 1",
    "start": "985279",
    "end": "986320"
  },
  {
    "text": "as we declared in the configuration file",
    "start": "986320",
    "end": "989519"
  },
  {
    "text": "and the final example that we have here",
    "start": "989519",
    "end": "994320"
  },
  {
    "text": "is for a pod",
    "start": "994399",
    "end": "997360"
  },
  {
    "text": "that does an override of the cpu set",
    "start": "997360",
    "end": "1001440"
  },
  {
    "text": "so it uses the annotation prefix along",
    "start": "1001440",
    "end": "1003839"
  },
  {
    "text": "with the container name",
    "start": "1003839",
    "end": "1005440"
  },
  {
    "text": "and we say here that we want to change",
    "start": "1005440",
    "end": "1006959"
  },
  {
    "text": "the cpu set to two and three instead of",
    "start": "1006959",
    "end": "1009199"
  },
  {
    "text": "the zero and one in the default.com",
    "start": "1009199",
    "end": "1013399"
  },
  {
    "text": "it's running",
    "start": "1022399",
    "end": "1025639"
  },
  {
    "text": "and we successfully overrode and see",
    "start": "1045839",
    "end": "1048160"
  },
  {
    "text": "that this particular part is running on",
    "start": "1048160",
    "end": "1050960"
  },
  {
    "text": "two and three so this shows the workload",
    "start": "1050960",
    "end": "1054480"
  },
  {
    "text": "type",
    "start": "1054480",
    "end": "1055280"
  },
  {
    "text": "feature uh in practice",
    "start": "1055280",
    "end": "1058000"
  },
  {
    "text": "and will try to support more features",
    "start": "1058000",
    "end": "1061039"
  },
  {
    "text": "for the resources",
    "start": "1061039",
    "end": "1062640"
  },
  {
    "text": "please let us know what more you would",
    "start": "1062640",
    "end": "1065120"
  },
  {
    "text": "like to see added",
    "start": "1065120",
    "end": "1068320"
  },
  {
    "text": "under resources",
    "start": "1068320",
    "end": "1071039"
  },
  {
    "text": "let's speak about the metrics",
    "start": "1071039",
    "end": "1072480"
  },
  {
    "text": "enhancements we added to cryo122",
    "start": "1072480",
    "end": "1075039"
  },
  {
    "text": "the first thing i'd like to point out is",
    "start": "1075039",
    "end": "1076559"
  },
  {
    "text": "that we added a new configuration option",
    "start": "1076559",
    "end": "1078480"
  },
  {
    "text": "called matrix collectors which allows us",
    "start": "1078480",
    "end": "1080720"
  },
  {
    "text": "to enable or disable certain metrics on",
    "start": "1080720",
    "end": "1082720"
  },
  {
    "text": "runtime by default all metrics are",
    "start": "1082720",
    "end": "1084960"
  },
  {
    "text": "enabled but this option gives",
    "start": "1084960",
    "end": "1086640"
  },
  {
    "text": "administrators a more fine-grained",
    "start": "1086640",
    "end": "1088240"
  },
  {
    "text": "control over how they want to actually",
    "start": "1088240",
    "end": "1090799"
  },
  {
    "text": "collect metrics and which they don't",
    "start": "1090799",
    "end": "1092559"
  },
  {
    "text": "want to collect we also secure the",
    "start": "1092559",
    "end": "1094960"
  },
  {
    "text": "metrics endpoint via tls and this",
    "start": "1094960",
    "end": "1097360"
  },
  {
    "text": "includes certificate creation and also",
    "start": "1097360",
    "end": "1100320"
  },
  {
    "text": "validation of a certificate this means",
    "start": "1100320",
    "end": "1102480"
  },
  {
    "text": "if a certificate is not available on",
    "start": "1102480",
    "end": "1104080"
  },
  {
    "text": "disk cryo is able to create it",
    "start": "1104080",
    "end": "1106160"
  },
  {
    "text": "automatically and later on we can pick",
    "start": "1106160",
    "end": "1108720"
  },
  {
    "text": "it up and exchange it and the third",
    "start": "1108720",
    "end": "1111200"
  },
  {
    "text": "point is that we are also able to rotate",
    "start": "1111200",
    "end": "1113840"
  },
  {
    "text": "those cls certificates so if anything",
    "start": "1113840",
    "end": "1116799"
  },
  {
    "text": "changes on this like the key or the",
    "start": "1116799",
    "end": "1118640"
  },
  {
    "text": "certificate itself then cryo will pick",
    "start": "1118640",
    "end": "1120960"
  },
  {
    "text": "up those changes and will",
    "start": "1120960",
    "end": "1122799"
  },
  {
    "text": "solve those certificates in case of any",
    "start": "1122799",
    "end": "1124960"
  },
  {
    "text": "error cryo will just report that to the",
    "start": "1124960",
    "end": "1127280"
  },
  {
    "text": "user and will nothing do at all",
    "start": "1127280",
    "end": "1130160"
  },
  {
    "text": "let me demonstrate that to you",
    "start": "1130160",
    "end": "1132320"
  },
  {
    "text": "so to be able to run this demo we have",
    "start": "1132320",
    "end": "1134240"
  },
  {
    "text": "to ensure that we are running cryo122",
    "start": "1134240",
    "end": "1136720"
  },
  {
    "text": "and we can verify that by running",
    "start": "1136720",
    "end": "1138400"
  },
  {
    "text": "pseudocryo minus minus version and here",
    "start": "1138400",
    "end": "1140720"
  },
  {
    "text": "we can see that we are on 122.0",
    "start": "1140720",
    "end": "1143919"
  },
  {
    "text": "and that should be allow us to enable or",
    "start": "1143919",
    "end": "1146320"
  },
  {
    "text": "disable the new configuration option",
    "start": "1146320",
    "end": "1149679"
  },
  {
    "text": "since cryo122 we are now",
    "start": "1149679",
    "end": "1152080"
  },
  {
    "text": "able to enable or disable certain",
    "start": "1152080",
    "end": "1153840"
  },
  {
    "text": "metrics so this means everyone cryo and",
    "start": "1153840",
    "end": "1156960"
  },
  {
    "text": "look for the cli arguments then we can",
    "start": "1156960",
    "end": "1159360"
  },
  {
    "text": "see new option matrix collectors which",
    "start": "1159360",
    "end": "1161760"
  },
  {
    "text": "are defaults to all metrics being",
    "start": "1161760",
    "end": "1163360"
  },
  {
    "text": "enabled",
    "start": "1163360",
    "end": "1165120"
  },
  {
    "text": "so now let's just limit the metrics to",
    "start": "1165120",
    "end": "1168480"
  },
  {
    "text": "enable the image pull successes for cryo",
    "start": "1168480",
    "end": "1171200"
  },
  {
    "text": "and if we run cryo with enable metrics",
    "start": "1171200",
    "end": "1173840"
  },
  {
    "text": "and only selecting this single matrix",
    "start": "1173840",
    "end": "1176080"
  },
  {
    "text": "collector then we can see that the",
    "start": "1176080",
    "end": "1178160"
  },
  {
    "text": "cryolooks already indicate that we are",
    "start": "1178160",
    "end": "1180320"
  },
  {
    "text": "skipping a bunch of metrics and that we",
    "start": "1180320",
    "end": "1182880"
  },
  {
    "text": "are also serving those metrics but we",
    "start": "1182880",
    "end": "1185679"
  },
  {
    "text": "have enabled the actual metric we want",
    "start": "1185679",
    "end": "1188320"
  },
  {
    "text": "to have",
    "start": "1188320",
    "end": "1190559"
  },
  {
    "text": "if we now put a container image for",
    "start": "1190559",
    "end": "1192320"
  },
  {
    "text": "example the fedora minimal image",
    "start": "1192320",
    "end": "1194960"
  },
  {
    "text": "then this will take a certain amount of",
    "start": "1194960",
    "end": "1196400"
  },
  {
    "text": "time",
    "start": "1196400",
    "end": "1198559"
  },
  {
    "text": "but",
    "start": "1198559",
    "end": "1199520"
  },
  {
    "text": "in the end",
    "start": "1199520",
    "end": "1200880"
  },
  {
    "text": "we can now check for our matrix and then",
    "start": "1200880",
    "end": "1203520"
  },
  {
    "text": "we grab for cryo-image pulse and then we",
    "start": "1203520",
    "end": "1206080"
  },
  {
    "text": "can see that we successfully downloaded",
    "start": "1206080",
    "end": "1207919"
  },
  {
    "text": "the image",
    "start": "1207919",
    "end": "1209120"
  },
  {
    "text": "and that the image counter is correctly",
    "start": "1209120",
    "end": "1211200"
  },
  {
    "text": "at one",
    "start": "1211200",
    "end": "1213760"
  },
  {
    "text": "now let's clean up cryo again",
    "start": "1214240",
    "end": "1217039"
  },
  {
    "text": "cryo's metrics endpoint can also be",
    "start": "1217039",
    "end": "1218720"
  },
  {
    "text": "secured by using tls so if we now choose",
    "start": "1218720",
    "end": "1222559"
  },
  {
    "text": "a valid certification key on disk then",
    "start": "1222559",
    "end": "1224720"
  },
  {
    "text": "we can specify that by minus minus",
    "start": "1224720",
    "end": "1226880"
  },
  {
    "text": "matrix so and minus minus matrix key",
    "start": "1226880",
    "end": "1230720"
  },
  {
    "text": "and if we did that then we can see that",
    "start": "1230720",
    "end": "1233200"
  },
  {
    "text": "cryo is now matrix serving the metrics",
    "start": "1233200",
    "end": "1235600"
  },
  {
    "text": "via https",
    "start": "1235600",
    "end": "1237360"
  },
  {
    "text": "and to look for our metrics we can just",
    "start": "1237360",
    "end": "1240320"
  },
  {
    "text": "use curl and we have to skip the",
    "start": "1240320",
    "end": "1242720"
  },
  {
    "text": "certificate because it's just this",
    "start": "1242720",
    "end": "1244240"
  },
  {
    "text": "assigned one and then we can see that we",
    "start": "1244240",
    "end": "1246480"
  },
  {
    "text": "get all the metrics",
    "start": "1246480",
    "end": "1248480"
  },
  {
    "text": "so if a certificate doesn't exist at all",
    "start": "1248480",
    "end": "1251039"
  },
  {
    "text": "then cryo will automatically generate",
    "start": "1251039",
    "end": "1253200"
  },
  {
    "text": "the default key pair for us so if we for",
    "start": "1253200",
    "end": "1256000"
  },
  {
    "text": "example define a metric certificating",
    "start": "1256000",
    "end": "1258559"
  },
  {
    "text": "key which doesn't exist on the local",
    "start": "1258559",
    "end": "1260159"
  },
  {
    "text": "disk",
    "start": "1260159",
    "end": "1261120"
  },
  {
    "text": "then we can see that cryo is now",
    "start": "1261120",
    "end": "1263840"
  },
  {
    "text": "creating the certificates for us",
    "start": "1263840",
    "end": "1267440"
  },
  {
    "text": "and that is also watching those files",
    "start": "1268240",
    "end": "1270480"
  },
  {
    "text": "for changes",
    "start": "1270480",
    "end": "1272880"
  },
  {
    "text": "this means",
    "start": "1272880",
    "end": "1274080"
  },
  {
    "text": "if we now modify this file for example",
    "start": "1274080",
    "end": "1277200"
  },
  {
    "text": "we put an invalid certificate into this",
    "start": "1277200",
    "end": "1279600"
  },
  {
    "text": "into the source.pamp",
    "start": "1279600",
    "end": "1281600"
  },
  {
    "text": "then we can see that",
    "start": "1281600",
    "end": "1283840"
  },
  {
    "text": "cryo picks those changes up but it tries",
    "start": "1283840",
    "end": "1286799"
  },
  {
    "text": "to validate the certificate and this",
    "start": "1286799",
    "end": "1288960"
  },
  {
    "text": "fails in our case so it will not do",
    "start": "1288960",
    "end": "1291679"
  },
  {
    "text": "anything at all",
    "start": "1291679",
    "end": "1294320"
  },
  {
    "text": "there are also a couple of new metrics",
    "start": "1294400",
    "end": "1296080"
  },
  {
    "text": "which have been added to cryo every",
    "start": "1296080",
    "end": "1298240"
  },
  {
    "text": "metric contains the prefix container on",
    "start": "1298240",
    "end": "1300480"
  },
  {
    "text": "them cryo which allows us to easily",
    "start": "1300480",
    "end": "1302480"
  },
  {
    "text": "identify the metrics served by the",
    "start": "1302480",
    "end": "1304000"
  },
  {
    "text": "container runtime the first thing we",
    "start": "1304000",
    "end": "1306000"
  },
  {
    "text": "have to add is the container's om total",
    "start": "1306000",
    "end": "1308400"
  },
  {
    "text": "which gives us the total amount of",
    "start": "1308400",
    "end": "1310080"
  },
  {
    "text": "containers killed because they run out",
    "start": "1310080",
    "end": "1311840"
  },
  {
    "text": "of memory",
    "start": "1311840",
    "end": "1312960"
  },
  {
    "text": "the second metric we have are the",
    "start": "1312960",
    "end": "1314640"
  },
  {
    "text": "containers om which",
    "start": "1314640",
    "end": "1316799"
  },
  {
    "text": "contains the outer memory killed",
    "start": "1316799",
    "end": "1318240"
  },
  {
    "text": "containers by their name label",
    "start": "1318240",
    "end": "1320320"
  },
  {
    "text": "we also have a metric for d-functional",
    "start": "1320320",
    "end": "1322240"
  },
  {
    "text": "processes so now we can identify zombie",
    "start": "1322240",
    "end": "1324640"
  },
  {
    "text": "processes on a node",
    "start": "1324640",
    "end": "1326400"
  },
  {
    "text": "and beside that we also have the image",
    "start": "1326400",
    "end": "1328720"
  },
  {
    "text": "pulse layout size",
    "start": "1328720",
    "end": "1330320"
  },
  {
    "text": "histogram metric which gives off the",
    "start": "1330320",
    "end": "1332320"
  },
  {
    "text": "bytes transferred by cryo image pulse",
    "start": "1332320",
    "end": "1334320"
  },
  {
    "text": "per layer iso histogram",
    "start": "1334320",
    "end": "1337600"
  },
  {
    "text": "i would like to demonstrate that to you",
    "start": "1337600",
    "end": "1339600"
  },
  {
    "text": "so the first thing we have to do is we",
    "start": "1339600",
    "end": "1341200"
  },
  {
    "text": "have to start cryo by enabling the",
    "start": "1341200",
    "end": "1343039"
  },
  {
    "text": "matrix we can do that by running through",
    "start": "1343039",
    "end": "1345200"
  },
  {
    "text": "the cryo minus minus enable matrix and",
    "start": "1345200",
    "end": "1347679"
  },
  {
    "text": "here in the logs we can see that we all",
    "start": "1347679",
    "end": "1349679"
  },
  {
    "text": "have all our matrix a name",
    "start": "1349679",
    "end": "1352000"
  },
  {
    "text": "now i'd like to show you how cryo can",
    "start": "1352000",
    "end": "1353679"
  },
  {
    "text": "count containers which get killed by out",
    "start": "1353679",
    "end": "1356000"
  },
  {
    "text": "of memory so for that we have to run a",
    "start": "1356000",
    "end": "1358159"
  },
  {
    "text": "special container and we set the linux",
    "start": "1358159",
    "end": "1360880"
  },
  {
    "text": "resources memory limit and bytes",
    "start": "1360880",
    "end": "1363360"
  },
  {
    "text": "to 25 megabyte",
    "start": "1363360",
    "end": "1366080"
  },
  {
    "text": "we prepared a special container image",
    "start": "1366080",
    "end": "1367600"
  },
  {
    "text": "for that and if we run the container in",
    "start": "1367600",
    "end": "1369760"
  },
  {
    "text": "the sandbox we prepared locally on this",
    "start": "1369760",
    "end": "1372480"
  },
  {
    "text": "then we can see that cryo will run the",
    "start": "1372480",
    "end": "1374799"
  },
  {
    "text": "container successfully",
    "start": "1374799",
    "end": "1377200"
  },
  {
    "text": "and if this is done",
    "start": "1377200",
    "end": "1380080"
  },
  {
    "text": "then the container will be get killed",
    "start": "1380080",
    "end": "1382000"
  },
  {
    "text": "immediately after startup so if we run",
    "start": "1382000",
    "end": "1384080"
  },
  {
    "text": "through the crazy tlps and list our",
    "start": "1384080",
    "end": "1386559"
  },
  {
    "text": "containers then we see that this out of",
    "start": "1386559",
    "end": "1389120"
  },
  {
    "text": "memory container already got exited",
    "start": "1389120",
    "end": "1392799"
  },
  {
    "text": "so the metrics now indicate that the",
    "start": "1392799",
    "end": "1394400"
  },
  {
    "text": "container has been killed because of an",
    "start": "1394400",
    "end": "1396159"
  },
  {
    "text": "out of memory event and if we grab for",
    "start": "1396159",
    "end": "1398400"
  },
  {
    "text": "our local metrics and look for the",
    "start": "1398400",
    "end": "1400240"
  },
  {
    "text": "container's om metric then we can see",
    "start": "1400240",
    "end": "1403039"
  },
  {
    "text": "that we have now one container",
    "start": "1403039",
    "end": "1405679"
  },
  {
    "text": "out of memory total of one",
    "start": "1405679",
    "end": "1409760"
  },
  {
    "text": "so cryo is also able to count the number",
    "start": "1410000",
    "end": "1412159"
  },
  {
    "text": "of zombie processes on a node and to",
    "start": "1412159",
    "end": "1414080"
  },
  {
    "text": "demonstrate that we actually have to",
    "start": "1414080",
    "end": "1415600"
  },
  {
    "text": "spawn a bunch of zombies but for that we",
    "start": "1415600",
    "end": "1418320"
  },
  {
    "text": "have to create a little helper tool",
    "start": "1418320",
    "end": "1420480"
  },
  {
    "text": "how to create a zombie process so we can",
    "start": "1420480",
    "end": "1423200"
  },
  {
    "text": "just run something like exit command ls",
    "start": "1423200",
    "end": "1426400"
  },
  {
    "text": "and then start the command and after the",
    "start": "1426400",
    "end": "1428640"
  },
  {
    "text": "start if you don't call cmd.wait",
    "start": "1428640",
    "end": "1431360"
  },
  {
    "text": "then the process will reside in zombie",
    "start": "1431360",
    "end": "1433200"
  },
  {
    "text": "state and this is what we do in this",
    "start": "1433200",
    "end": "1435760"
  },
  {
    "text": "program",
    "start": "1435760",
    "end": "1437039"
  },
  {
    "text": "and if we want a little tool",
    "start": "1437039",
    "end": "1440480"
  },
  {
    "text": "then we can see that the cryometrics now",
    "start": "1440559",
    "end": "1443360"
  },
  {
    "text": "indicate that we have a d-functional",
    "start": "1443360",
    "end": "1445279"
  },
  {
    "text": "process",
    "start": "1445279",
    "end": "1447279"
  },
  {
    "text": "cryo requests the amount of d-functional",
    "start": "1447279",
    "end": "1450159"
  },
  {
    "text": "processes on a node directly when we",
    "start": "1450159",
    "end": "1453279"
  },
  {
    "text": "request the metrics so this means that",
    "start": "1453279",
    "end": "1455440"
  },
  {
    "text": "we also get a warning that we have now a",
    "start": "1455440",
    "end": "1457520"
  },
  {
    "text": "d-functional process",
    "start": "1457520",
    "end": "1459279"
  },
  {
    "text": "ls on the local system and i prepared",
    "start": "1459279",
    "end": "1462159"
  },
  {
    "text": "that so we have two of them so we can",
    "start": "1462159",
    "end": "1464000"
  },
  {
    "text": "distinguish them by pit",
    "start": "1464000",
    "end": "1466159"
  },
  {
    "text": "this means that we have now two",
    "start": "1466159",
    "end": "1469120"
  },
  {
    "text": "d-functional processes on the node and",
    "start": "1469120",
    "end": "1470799"
  },
  {
    "text": "cryo is able to collect them",
    "start": "1470799",
    "end": "1474559"
  },
  {
    "text": "and cryo also features the new histogram",
    "start": "1474799",
    "end": "1477200"
  },
  {
    "text": "matrix for the transfer bytes during",
    "start": "1477200",
    "end": "1479120"
  },
  {
    "text": "image voice so for example if you pull",
    "start": "1479120",
    "end": "1481520"
  },
  {
    "text": "an image which contains many different",
    "start": "1481520",
    "end": "1485200"
  },
  {
    "text": "layer sizes",
    "start": "1485200",
    "end": "1486640"
  },
  {
    "text": "then",
    "start": "1486640",
    "end": "1488000"
  },
  {
    "text": "this usually takes a certain amount of",
    "start": "1488000",
    "end": "1489679"
  },
  {
    "text": "time",
    "start": "1489679",
    "end": "1490720"
  },
  {
    "text": "but cryo is able to lock the percentage",
    "start": "1490720",
    "end": "1492640"
  },
  {
    "text": "for example for pulled container images",
    "start": "1492640",
    "end": "1495840"
  },
  {
    "text": "we can see that we are almost done here",
    "start": "1495840",
    "end": "1498799"
  },
  {
    "text": "and then cryo applies the images to the",
    "start": "1498799",
    "end": "1501360"
  },
  {
    "text": "local system",
    "start": "1501360",
    "end": "1503840"
  },
  {
    "text": "and if this is done",
    "start": "1503840",
    "end": "1506799"
  },
  {
    "text": "then we can investigate actually put by",
    "start": "1507039",
    "end": "1509200"
  },
  {
    "text": "spider summary count and buckets",
    "start": "1509200",
    "end": "1512240"
  },
  {
    "text": "now if we graph for the image plus layer",
    "start": "1512240",
    "end": "1514000"
  },
  {
    "text": "size metric",
    "start": "1514000",
    "end": "1515200"
  },
  {
    "text": "then we see that we have on one hand the",
    "start": "1515200",
    "end": "1518159"
  },
  {
    "text": "summary of overall bytes which have been",
    "start": "1518159",
    "end": "1520400"
  },
  {
    "text": "transferred we have the amount of layers",
    "start": "1520400",
    "end": "1522799"
  },
  {
    "text": "which are 20 here",
    "start": "1522799",
    "end": "1524720"
  },
  {
    "text": "and we have a distinguished buckets for",
    "start": "1524720",
    "end": "1526960"
  },
  {
    "text": "the histogram so we have",
    "start": "1526960",
    "end": "1529679"
  },
  {
    "text": "different layer sizes which are lower",
    "start": "1529679",
    "end": "1531520"
  },
  {
    "text": "than a certain amount of bytes",
    "start": "1531520",
    "end": "1534400"
  },
  {
    "text": "and then the histogram will show up how",
    "start": "1534400",
    "end": "1536640"
  },
  {
    "text": "these bytes got transferred over the",
    "start": "1536640",
    "end": "1538960"
  },
  {
    "text": "overall",
    "start": "1538960",
    "end": "1540840"
  },
  {
    "text": "medium that is what we had on what's new",
    "start": "1540840",
    "end": "1543760"
  },
  {
    "text": "in cryo we continue to make improvements",
    "start": "1543760",
    "end": "1546320"
  },
  {
    "text": "and we'll have more updates for you the",
    "start": "1546320",
    "end": "1547840"
  },
  {
    "text": "next time we meet",
    "start": "1547840",
    "end": "1549200"
  },
  {
    "text": "check out our installation and setup",
    "start": "1549200",
    "end": "1550720"
  },
  {
    "text": "guides on our github and get started",
    "start": "1550720",
    "end": "1552240"
  },
  {
    "text": "today issues and pr's are always welcome",
    "start": "1552240",
    "end": "1554799"
  },
  {
    "text": "for any for from any and everyone we can",
    "start": "1554799",
    "end": "1557679"
  },
  {
    "text": "also you can also find us in the cryo",
    "start": "1557679",
    "end": "1559520"
  },
  {
    "text": "channel on the kubernetes slack",
    "start": "1559520",
    "end": "1562159"
  },
  {
    "text": "and now we can take any questions you",
    "start": "1562159",
    "end": "1563840"
  },
  {
    "text": "have thank you",
    "start": "1563840",
    "end": "1567559"
  }
]