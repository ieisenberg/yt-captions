[
  {
    "text": "using a distributed key value store",
    "start": "719",
    "end": "3840"
  },
  {
    "text": "and the word i really want to emphasize",
    "start": "3840",
    "end": "5920"
  },
  {
    "text": "in that title is using",
    "start": "5920",
    "end": "8240"
  },
  {
    "text": "because our talk today is about how you",
    "start": "8240",
    "end": "11440"
  },
  {
    "text": "would actually use",
    "start": "11440",
    "end": "12639"
  },
  {
    "text": "a distributed key value store in your",
    "start": "12639",
    "end": "14920"
  },
  {
    "text": "application",
    "start": "14920",
    "end": "17440"
  },
  {
    "text": "we're nick and andy we're engineers at",
    "start": "17440",
    "end": "20400"
  },
  {
    "text": "pincap",
    "start": "20400",
    "end": "21119"
  },
  {
    "text": "where we both work on thai kv which is",
    "start": "21119",
    "end": "24400"
  },
  {
    "text": "an",
    "start": "24400",
    "end": "24800"
  },
  {
    "text": "example of a key value store as well",
    "start": "24800",
    "end": "27920"
  },
  {
    "text": "we'll tell you a bit later in the talk",
    "start": "27920",
    "end": "30640"
  },
  {
    "text": "the",
    "start": "30640",
    "end": "31039"
  },
  {
    "text": "talk is going to be in three parts so",
    "start": "31039",
    "end": "34160"
  },
  {
    "text": "first of all we're going to talk very",
    "start": "34160",
    "end": "36399"
  },
  {
    "text": "quickly about what a",
    "start": "36399",
    "end": "38879"
  },
  {
    "text": "key value store actually is and",
    "start": "38879",
    "end": "42559"
  },
  {
    "text": "some example kv stores and about their",
    "start": "42559",
    "end": "45360"
  },
  {
    "text": "features and how you would choose one of",
    "start": "45360",
    "end": "47039"
  },
  {
    "text": "them for your application",
    "start": "47039",
    "end": "50239"
  },
  {
    "text": "after that well we have to pick one of",
    "start": "50239",
    "end": "52800"
  },
  {
    "text": "those",
    "start": "52800",
    "end": "53280"
  },
  {
    "text": "to actually talk about the rest of the",
    "start": "53280",
    "end": "55680"
  },
  {
    "text": "the talk",
    "start": "55680",
    "end": "56559"
  },
  {
    "text": "and we're going to pick taikovi now that",
    "start": "56559",
    "end": "59760"
  },
  {
    "text": "is obviously a",
    "start": "59760",
    "end": "61440"
  },
  {
    "text": "biased choice but um hopefully it will",
    "start": "61440",
    "end": "64239"
  },
  {
    "text": "be an appropriate choice for some of you",
    "start": "64239",
    "end": "66080"
  },
  {
    "text": "and the more general principles will",
    "start": "66080",
    "end": "67840"
  },
  {
    "text": "apply to other kb stores too",
    "start": "67840",
    "end": "70960"
  },
  {
    "text": "then the the bulk of the talk is about",
    "start": "70960",
    "end": "74080"
  },
  {
    "text": "how your application communicates with a",
    "start": "74080",
    "end": "77280"
  },
  {
    "text": "distributed kv store in this case taikv",
    "start": "77280",
    "end": "81360"
  },
  {
    "text": "so to start off i'm going to hand over",
    "start": "81360",
    "end": "84400"
  },
  {
    "text": "to andy",
    "start": "84400",
    "end": "85280"
  },
  {
    "text": "who is going to talk about how to choose",
    "start": "85280",
    "end": "87680"
  },
  {
    "text": "a kv store",
    "start": "87680",
    "end": "89759"
  },
  {
    "text": "so i'm andy thanks for the introduction",
    "start": "89759",
    "end": "92560"
  },
  {
    "text": "i'm here to talk to you",
    "start": "92560",
    "end": "94079"
  },
  {
    "text": "in this section about what is a kiwi",
    "start": "94079",
    "end": "96479"
  },
  {
    "text": "store",
    "start": "96479",
    "end": "97280"
  },
  {
    "text": "and what are the key stores available",
    "start": "97280",
    "end": "100000"
  },
  {
    "text": "further",
    "start": "100000",
    "end": "100720"
  },
  {
    "text": "i will talk about their pros and cons",
    "start": "100720",
    "end": "104799"
  },
  {
    "text": "so in the beginning what is the clivis",
    "start": "105200",
    "end": "107680"
  },
  {
    "text": "world",
    "start": "107680",
    "end": "108799"
  },
  {
    "text": "he might have already been using game",
    "start": "108799",
    "end": "111119"
  },
  {
    "text": "stores in your programming language",
    "start": "111119",
    "end": "114479"
  },
  {
    "text": "for example the dictionary in python",
    "start": "114479",
    "end": "118000"
  },
  {
    "text": "or the map in other programming",
    "start": "118000",
    "end": "120000"
  },
  {
    "text": "languages are kv stores",
    "start": "120000",
    "end": "122960"
  },
  {
    "text": "this example in python is a dictionary",
    "start": "122960",
    "end": "125680"
  },
  {
    "text": "that maps",
    "start": "125680",
    "end": "126399"
  },
  {
    "text": "the key k1 to value v1",
    "start": "126399",
    "end": "129920"
  },
  {
    "text": "and tk2 to value v2",
    "start": "129920",
    "end": "134319"
  },
  {
    "text": "kvstores often allows you to look up the",
    "start": "134319",
    "end": "136879"
  },
  {
    "text": "value by the corresponding key",
    "start": "136879",
    "end": "139040"
  },
  {
    "text": "for instance during this dictionary with",
    "start": "139040",
    "end": "141599"
  },
  {
    "text": "gk1",
    "start": "141599",
    "end": "142480"
  },
  {
    "text": "the returns is valid v1 this operation",
    "start": "142480",
    "end": "145920"
  },
  {
    "text": "now import get",
    "start": "145920",
    "end": "148800"
  },
  {
    "text": "except get the kv store also have",
    "start": "148800",
    "end": "152160"
  },
  {
    "text": "method put and delete for modified data",
    "start": "152160",
    "end": "156000"
  },
  {
    "text": "in the real world a kv store often",
    "start": "156000",
    "end": "158959"
  },
  {
    "text": "refers",
    "start": "158959",
    "end": "159519"
  },
  {
    "text": "to a database that persists gigabytes to",
    "start": "159519",
    "end": "162959"
  },
  {
    "text": "terabytes of data",
    "start": "162959",
    "end": "164640"
  },
  {
    "text": "in the form of key value instead of this",
    "start": "164640",
    "end": "167599"
  },
  {
    "text": "more dictionary impulses",
    "start": "167599",
    "end": "170480"
  },
  {
    "text": "but once you search for qr stores in",
    "start": "170480",
    "end": "172720"
  },
  {
    "text": "google",
    "start": "172720",
    "end": "173599"
  },
  {
    "text": "and then you will be drawn by too many",
    "start": "173599",
    "end": "175840"
  },
  {
    "text": "cube stores",
    "start": "175840",
    "end": "176720"
  },
  {
    "text": "which may only have subtle differences",
    "start": "176720",
    "end": "179280"
  },
  {
    "text": "and you must struggle to figure out",
    "start": "179280",
    "end": "180959"
  },
  {
    "text": "which one best fits your needs so i'll",
    "start": "180959",
    "end": "184319"
  },
  {
    "text": "pick some of the most common ones",
    "start": "184319",
    "end": "186640"
  },
  {
    "text": "and talk about their pros and cons and",
    "start": "186640",
    "end": "189599"
  },
  {
    "text": "different kinds of scenarios they are",
    "start": "189599",
    "end": "191680"
  },
  {
    "text": "best for",
    "start": "191680",
    "end": "194239"
  },
  {
    "text": "you may have heard of roxby it is built",
    "start": "195200",
    "end": "198159"
  },
  {
    "text": "by",
    "start": "198159",
    "end": "198480"
  },
  {
    "text": "facebook and it is a high performance",
    "start": "198480",
    "end": "201360"
  },
  {
    "text": "embedded",
    "start": "201360",
    "end": "202159"
  },
  {
    "text": "kp store what embed means",
    "start": "202159",
    "end": "205280"
  },
  {
    "text": "is that it's a library and it doesn't",
    "start": "205280",
    "end": "208000"
  },
  {
    "text": "provide a standalone binary",
    "start": "208000",
    "end": "210159"
  },
  {
    "text": "and doesn't have network interface or",
    "start": "210159",
    "end": "212080"
  },
  {
    "text": "particles either",
    "start": "212080",
    "end": "213760"
  },
  {
    "text": "you will have to write a program on top",
    "start": "213760",
    "end": "216080"
  },
  {
    "text": "of it",
    "start": "216080",
    "end": "216879"
  },
  {
    "text": "and talk to it with function calls in c",
    "start": "216879",
    "end": "220640"
  },
  {
    "text": "it is high performance because it has",
    "start": "220640",
    "end": "223120"
  },
  {
    "text": "been tuned by many talented",
    "start": "223120",
    "end": "225120"
  },
  {
    "text": "engineers with decades of effort",
    "start": "225120",
    "end": "228400"
  },
  {
    "text": "theft unmanned optimizations on disguise",
    "start": "228400",
    "end": "232000"
  },
  {
    "text": "and interior data structures whereas tv",
    "start": "232000",
    "end": "235120"
  },
  {
    "text": "is not good at is that it runs on single",
    "start": "235120",
    "end": "237519"
  },
  {
    "text": "machine",
    "start": "237519",
    "end": "238640"
  },
  {
    "text": "which makes it not scalable and not",
    "start": "238640",
    "end": "241120"
  },
  {
    "text": "fairly tolerant",
    "start": "241120",
    "end": "242879"
  },
  {
    "text": "because the only machine fails or fails",
    "start": "242879",
    "end": "247680"
  },
  {
    "text": "so ruxtv is best for prototyping or",
    "start": "248080",
    "end": "250799"
  },
  {
    "text": "running single node application",
    "start": "250799",
    "end": "253439"
  },
  {
    "text": "this is in particular talking about when",
    "start": "253439",
    "end": "255599"
  },
  {
    "text": "the scale of data still fits in a single",
    "start": "255599",
    "end": "258000"
  },
  {
    "text": "machine",
    "start": "258000",
    "end": "259040"
  },
  {
    "text": "which is approximately up to a few",
    "start": "259040",
    "end": "261199"
  },
  {
    "text": "terabytes",
    "start": "261199",
    "end": "262479"
  },
  {
    "text": "and for prototyping we usually don't",
    "start": "262479",
    "end": "264800"
  },
  {
    "text": "care the",
    "start": "264800",
    "end": "265680"
  },
  {
    "text": "failure tolerance so roxtv is enough",
    "start": "265680",
    "end": "270400"
  },
  {
    "text": "btcd is a strongly consistent",
    "start": "270400",
    "end": "272720"
  },
  {
    "text": "distributed gift store",
    "start": "272720",
    "end": "275120"
  },
  {
    "text": "it is a widely used and tested",
    "start": "275120",
    "end": "277120"
  },
  {
    "text": "implementation of rough accuracy",
    "start": "277120",
    "end": "280320"
  },
  {
    "text": "so it guarantees the stantonness of",
    "start": "280320",
    "end": "282400"
  },
  {
    "text": "consistent as well as resistance",
    "start": "282400",
    "end": "286160"
  },
  {
    "text": "the naive graph algorithm doesn't do",
    "start": "286160",
    "end": "288720"
  },
  {
    "text": "well on data on large scale",
    "start": "288720",
    "end": "291440"
  },
  {
    "text": "which makes indicate become unstable",
    "start": "291440",
    "end": "294160"
  },
  {
    "text": "with data larger than eight gigabytes",
    "start": "294160",
    "end": "297919"
  },
  {
    "text": "so etcd is good for simple tv scenario",
    "start": "297919",
    "end": "301680"
  },
  {
    "text": "that requires strong consistency and",
    "start": "301680",
    "end": "304240"
  },
  {
    "text": "strong persistence",
    "start": "304240",
    "end": "305759"
  },
  {
    "text": "this scenario are usually limited in",
    "start": "305759",
    "end": "308000"
  },
  {
    "text": "storage or service discovery",
    "start": "308000",
    "end": "311199"
  },
  {
    "text": "tradis is a widely used memory",
    "start": "311199",
    "end": "313600"
  },
  {
    "text": "distributed database",
    "start": "313600",
    "end": "316000"
  },
  {
    "text": "it features in building types building",
    "start": "316000",
    "end": "318160"
  },
  {
    "text": "replication",
    "start": "318160",
    "end": "319360"
  },
  {
    "text": "low latency and high throughput",
    "start": "319360",
    "end": "323280"
  },
  {
    "text": "but it doesn't guarantee the data is",
    "start": "323280",
    "end": "325120"
  },
  {
    "text": "consistent of the system",
    "start": "325120",
    "end": "327120"
  },
  {
    "text": "so the data stored in redis are usually",
    "start": "327120",
    "end": "329440"
  },
  {
    "text": "allowed to be lost",
    "start": "329440",
    "end": "332240"
  },
  {
    "text": "redis is usually used as cash for other",
    "start": "332240",
    "end": "335360"
  },
  {
    "text": "underlying data stores",
    "start": "335360",
    "end": "336960"
  },
  {
    "text": "like mexico or mongodb so when the data",
    "start": "336960",
    "end": "340560"
  },
  {
    "text": "are lost",
    "start": "340560",
    "end": "341520"
  },
  {
    "text": "you can always find it back from the",
    "start": "341520",
    "end": "343360"
  },
  {
    "text": "underlying database",
    "start": "343360",
    "end": "346080"
  },
  {
    "text": "hbase is an open source implementation",
    "start": "346080",
    "end": "349039"
  },
  {
    "text": "of google bigtable",
    "start": "349039",
    "end": "351280"
  },
  {
    "text": "it is built on top of hdfs and has good",
    "start": "351280",
    "end": "354479"
  },
  {
    "text": "integration with",
    "start": "354479",
    "end": "355520"
  },
  {
    "text": "adobe ecosystem especially supporting",
    "start": "355520",
    "end": "359680"
  },
  {
    "text": "out-of-box integration with blink and",
    "start": "359680",
    "end": "361840"
  },
  {
    "text": "spark",
    "start": "361840",
    "end": "364240"
  },
  {
    "text": "but hbase are often complained about its",
    "start": "364479",
    "end": "367840"
  },
  {
    "text": "high latency",
    "start": "367840",
    "end": "369120"
  },
  {
    "text": "and the stop the workforce besides each",
    "start": "369120",
    "end": "372479"
  },
  {
    "text": "base only supports single row",
    "start": "372479",
    "end": "374160"
  },
  {
    "text": "transaction",
    "start": "374160",
    "end": "375440"
  },
  {
    "text": "so you have to use other components to",
    "start": "375440",
    "end": "378240"
  },
  {
    "text": "achieve multiple transactions",
    "start": "378240",
    "end": "381600"
  },
  {
    "text": "in general hbase is very suitable for",
    "start": "381600",
    "end": "384560"
  },
  {
    "text": "application built around how to victor",
    "start": "384560",
    "end": "386560"
  },
  {
    "text": "system",
    "start": "386560",
    "end": "388960"
  },
  {
    "text": "talking to mongodb it is quite different",
    "start": "389919",
    "end": "392160"
  },
  {
    "text": "to the others mentioned before",
    "start": "392160",
    "end": "394479"
  },
  {
    "text": "it doesn't store kv but instead stored",
    "start": "394479",
    "end": "397280"
  },
  {
    "text": "documents",
    "start": "397280",
    "end": "398560"
  },
  {
    "text": "in other words mongodb is a big array",
    "start": "398560",
    "end": "401600"
  },
  {
    "text": "of json objects mongodb",
    "start": "401600",
    "end": "405039"
  },
  {
    "text": "is distributed by shouting on giving",
    "start": "405039",
    "end": "407440"
  },
  {
    "text": "fields of documents",
    "start": "407440",
    "end": "410400"
  },
  {
    "text": "this simple shutting rules makes it hard",
    "start": "410400",
    "end": "412479"
  },
  {
    "text": "to dynamically balance on the right",
    "start": "412479",
    "end": "414639"
  },
  {
    "text": "traffic",
    "start": "414639",
    "end": "415680"
  },
  {
    "text": "therefore hot rod are always a problem",
    "start": "415680",
    "end": "418400"
  },
  {
    "text": "when using mongodb",
    "start": "418400",
    "end": "420639"
  },
  {
    "text": "besides similar to radius mongodb",
    "start": "420639",
    "end": "424000"
  },
  {
    "text": "doesn't guarantee strong consistency or",
    "start": "424000",
    "end": "426319"
  },
  {
    "text": "persistence",
    "start": "426319",
    "end": "429039"
  },
  {
    "text": "so mongodb is usually used to store",
    "start": "429759",
    "end": "432880"
  },
  {
    "text": "similar structured data like user info",
    "start": "432880",
    "end": "436160"
  },
  {
    "text": "and user history and it also allows to",
    "start": "436160",
    "end": "439680"
  },
  {
    "text": "lost data",
    "start": "439680",
    "end": "441360"
  },
  {
    "text": "in addition because of the critical",
    "start": "441360",
    "end": "443440"
  },
  {
    "text": "requirement of memory",
    "start": "443440",
    "end": "444960"
  },
  {
    "text": "it will be expensive to use mongodb on",
    "start": "444960",
    "end": "447759"
  },
  {
    "text": "large real products",
    "start": "447759",
    "end": "450160"
  },
  {
    "text": "so generally mongodb is best for",
    "start": "450160",
    "end": "453280"
  },
  {
    "text": "prototyping because it's quite easy to",
    "start": "453280",
    "end": "455840"
  },
  {
    "text": "set everything up and running",
    "start": "455840",
    "end": "458319"
  },
  {
    "text": "and for prototyping the right hotspot",
    "start": "458319",
    "end": "461280"
  },
  {
    "text": "and memory usage has not yet been a",
    "start": "461280",
    "end": "463440"
  },
  {
    "text": "problem",
    "start": "463440",
    "end": "464639"
  },
  {
    "text": "all right so uh taikov",
    "start": "464639",
    "end": "467759"
  },
  {
    "text": "is another key value store but it's one",
    "start": "467759",
    "end": "470639"
  },
  {
    "text": "we're going to go into a little bit more",
    "start": "470639",
    "end": "472319"
  },
  {
    "text": "detail about because we're going to use",
    "start": "472319",
    "end": "473840"
  },
  {
    "text": "it as",
    "start": "473840",
    "end": "474720"
  },
  {
    "text": "uh well effectively like a case study",
    "start": "474720",
    "end": "477039"
  },
  {
    "text": "for the rest of this talk",
    "start": "477039",
    "end": "479280"
  },
  {
    "text": "so there so thai kb is distributed",
    "start": "479280",
    "end": "483520"
  },
  {
    "text": "which means rather than running on a",
    "start": "483520",
    "end": "485280"
  },
  {
    "text": "single server it",
    "start": "485280",
    "end": "486560"
  },
  {
    "text": "runs across a cluster of servers or",
    "start": "486560",
    "end": "489520"
  },
  {
    "text": "nodes",
    "start": "489520",
    "end": "490720"
  },
  {
    "text": "that makes its uh and because of that",
    "start": "490720",
    "end": "492960"
  },
  {
    "text": "and because it's the way it's designed",
    "start": "492960",
    "end": "494960"
  },
  {
    "text": "it's scalable if you need to store",
    "start": "494960",
    "end": "497199"
  },
  {
    "text": "uh more data or you need to",
    "start": "497199",
    "end": "500479"
  },
  {
    "text": "access that data more quickly you can",
    "start": "500479",
    "end": "502160"
  },
  {
    "text": "just add um",
    "start": "502160",
    "end": "503840"
  },
  {
    "text": "add nodes to the cluster and you'll be",
    "start": "503840",
    "end": "506319"
  },
  {
    "text": "able to store more and access more",
    "start": "506319",
    "end": "509039"
  },
  {
    "text": "it's also fault tolerance so if you lose",
    "start": "509039",
    "end": "512080"
  },
  {
    "text": "some of those nodes or if you've got",
    "start": "512080",
    "end": "513599"
  },
  {
    "text": "your nodes across multiple data centers",
    "start": "513599",
    "end": "515599"
  },
  {
    "text": "and you lose an entire data center",
    "start": "515599",
    "end": "517599"
  },
  {
    "text": "then you should still be able to have",
    "start": "517599",
    "end": "520479"
  },
  {
    "text": "access to",
    "start": "520479",
    "end": "521440"
  },
  {
    "text": "to your data taikevi is",
    "start": "521440",
    "end": "524800"
  },
  {
    "text": "transactional so this is a concept that",
    "start": "524800",
    "end": "527440"
  },
  {
    "text": "is much more familiar from the kind of",
    "start": "527440",
    "end": "529600"
  },
  {
    "text": "traditional sql world of databases",
    "start": "529600",
    "end": "533200"
  },
  {
    "text": "key value stores have historically uh",
    "start": "533200",
    "end": "536320"
  },
  {
    "text": "been uh",
    "start": "536320",
    "end": "539519"
  },
  {
    "text": "not supportive transactions and had a",
    "start": "539680",
    "end": "541600"
  },
  {
    "text": "kind of eventual consistency",
    "start": "541600",
    "end": "543519"
  },
  {
    "text": "uh kind of guarantee whereas tai kv",
    "start": "543519",
    "end": "546839"
  },
  {
    "text": "um supports",
    "start": "546839",
    "end": "550720"
  },
  {
    "text": "explicit transactions and",
    "start": "550720",
    "end": "553760"
  },
  {
    "text": "gives you the kind of acid guarantees",
    "start": "553760",
    "end": "555680"
  },
  {
    "text": "that",
    "start": "555680",
    "end": "556800"
  },
  {
    "text": "make working with transactional",
    "start": "556800",
    "end": "558880"
  },
  {
    "text": "databases so much nicer",
    "start": "558880",
    "end": "562640"
  },
  {
    "text": "and it has a somewhat rich key value api",
    "start": "562640",
    "end": "566800"
  },
  {
    "text": "what i mean by that",
    "start": "566800",
    "end": "567839"
  },
  {
    "text": "is it doesn't just offer kind of the the",
    "start": "567839",
    "end": "570880"
  },
  {
    "text": "dictionary hashmap get set",
    "start": "570880",
    "end": "572480"
  },
  {
    "text": "kind of api um we there's a whole bunch",
    "start": "572480",
    "end": "576320"
  },
  {
    "text": "of operations on",
    "start": "576320",
    "end": "577839"
  },
  {
    "text": "um ranges of values uh batches of",
    "start": "577839",
    "end": "581200"
  },
  {
    "text": "operations",
    "start": "581200",
    "end": "582560"
  },
  {
    "text": "uh various kinds of scans and and so",
    "start": "582560",
    "end": "585279"
  },
  {
    "text": "forth",
    "start": "585279",
    "end": "587680"
  },
  {
    "text": "takavi is uh battle tested so tiger v",
    "start": "588320",
    "end": "591920"
  },
  {
    "text": "started its life",
    "start": "591920",
    "end": "593040"
  },
  {
    "text": "as the um the",
    "start": "593040",
    "end": "596399"
  },
  {
    "text": "uh the the back end i guess of tidy b",
    "start": "596399",
    "end": "599360"
  },
  {
    "text": "which is a",
    "start": "599360",
    "end": "600560"
  },
  {
    "text": "a new sql if you like database so that's",
    "start": "600560",
    "end": "603120"
  },
  {
    "text": "a",
    "start": "603120",
    "end": "604399"
  },
  {
    "text": "distributed uh transactional sql",
    "start": "604399",
    "end": "607360"
  },
  {
    "text": "database",
    "start": "607360",
    "end": "608320"
  },
  {
    "text": "and taikfee provides the um",
    "start": "608320",
    "end": "611920"
  },
  {
    "text": "the the distributed part of that really",
    "start": "611920",
    "end": "614399"
  },
  {
    "text": "and um",
    "start": "614399",
    "end": "615600"
  },
  {
    "text": "but without the the sql uh",
    "start": "615600",
    "end": "618800"
  },
  {
    "text": "layer which is provided elsewhere so tag",
    "start": "618800",
    "end": "621440"
  },
  {
    "text": "av by itself or as part of tai db",
    "start": "621440",
    "end": "623760"
  },
  {
    "text": "is um used by a fairly large community",
    "start": "623760",
    "end": "626959"
  },
  {
    "text": "of",
    "start": "626959",
    "end": "627600"
  },
  {
    "text": "um of users some of those are huge",
    "start": "627600",
    "end": "631120"
  },
  {
    "text": "so for example jd cloud shoppie",
    "start": "631120",
    "end": "634240"
  },
  {
    "text": "maitlan jihoo so",
    "start": "634240",
    "end": "637680"
  },
  {
    "text": "jihu are happy for us to talk about some",
    "start": "637680",
    "end": "640240"
  },
  {
    "text": "numbers",
    "start": "640240",
    "end": "641200"
  },
  {
    "text": "the last time we got some numbers from",
    "start": "641200",
    "end": "644160"
  },
  {
    "text": "them they had around 200",
    "start": "644160",
    "end": "646399"
  },
  {
    "text": "uh take av nodes and they were",
    "start": "646399",
    "end": "649760"
  },
  {
    "text": "getting about up to 100 million reads",
    "start": "649760",
    "end": "652240"
  },
  {
    "text": "per second",
    "start": "652240",
    "end": "653120"
  },
  {
    "text": "from from their database on on two",
    "start": "653120",
    "end": "656399"
  },
  {
    "text": "trillion rows which is about 320ish",
    "start": "656399",
    "end": "659680"
  },
  {
    "text": "terabytes of data so",
    "start": "659680",
    "end": "661279"
  },
  {
    "text": "that's that's a pretty big cluster and",
    "start": "661279",
    "end": "664000"
  },
  {
    "text": "the the biggest cost that we know about",
    "start": "664000",
    "end": "665680"
  },
  {
    "text": "is",
    "start": "665680",
    "end": "666720"
  },
  {
    "text": "around 1600 nodes so when we say that",
    "start": "666720",
    "end": "669680"
  },
  {
    "text": "tycho v scales",
    "start": "669680",
    "end": "671120"
  },
  {
    "text": "um horizontally it can scale",
    "start": "671120",
    "end": "674160"
  },
  {
    "text": "pretty big uh tankavi is being actively",
    "start": "674160",
    "end": "678399"
  },
  {
    "text": "developed at the moment",
    "start": "678399",
    "end": "679839"
  },
  {
    "text": "uh so we're working on performance in",
    "start": "679839",
    "end": "683360"
  },
  {
    "text": "particular so",
    "start": "683360",
    "end": "684800"
  },
  {
    "text": "recently we made some fairly major",
    "start": "684800",
    "end": "686880"
  },
  {
    "text": "changes to our transaction",
    "start": "686880",
    "end": "688320"
  },
  {
    "text": "protocol that have resulted as big",
    "start": "688320",
    "end": "690880"
  },
  {
    "text": "improvements",
    "start": "690880",
    "end": "691600"
  },
  {
    "text": "to read and write latency",
    "start": "691600",
    "end": "696560"
  },
  {
    "text": "um we're implementing new features for",
    "start": "696560",
    "end": "698959"
  },
  {
    "text": "example we just added a compare and swap",
    "start": "698959",
    "end": "701279"
  },
  {
    "text": "our kaz operation and one of the more",
    "start": "701279",
    "end": "704720"
  },
  {
    "text": "exciting things working on at the moment",
    "start": "704720",
    "end": "706320"
  },
  {
    "text": "is tank av's co-processor so",
    "start": "706320",
    "end": "709440"
  },
  {
    "text": "the co-processor is a component of tank",
    "start": "709440",
    "end": "712959"
  },
  {
    "text": "av which",
    "start": "712959",
    "end": "713760"
  },
  {
    "text": "lets us run computation on what would",
    "start": "713760",
    "end": "716959"
  },
  {
    "text": "otherwise just be",
    "start": "716959",
    "end": "718320"
  },
  {
    "text": "data storage nodes so this came from tai",
    "start": "718320",
    "end": "721440"
  },
  {
    "text": "db",
    "start": "721440",
    "end": "722800"
  },
  {
    "text": "where for things like aggregation",
    "start": "722800",
    "end": "725440"
  },
  {
    "text": "operations you can get a huge",
    "start": "725440",
    "end": "726800"
  },
  {
    "text": "performance win",
    "start": "726800",
    "end": "727920"
  },
  {
    "text": "by running part of those operations on",
    "start": "727920",
    "end": "731680"
  },
  {
    "text": "the nodes",
    "start": "731680",
    "end": "732399"
  },
  {
    "text": "where the data is actually stored",
    "start": "732399",
    "end": "735600"
  },
  {
    "text": "uh now the the the interface of the code",
    "start": "735600",
    "end": "738959"
  },
  {
    "text": "processor",
    "start": "738959",
    "end": "739839"
  },
  {
    "text": "is not very useful for other users but",
    "start": "739839",
    "end": "742000"
  },
  {
    "text": "what the the work",
    "start": "742000",
    "end": "743440"
  },
  {
    "text": "that is ongoing at the moment is to make",
    "start": "743440",
    "end": "746079"
  },
  {
    "text": "the",
    "start": "746079",
    "end": "746880"
  },
  {
    "text": "um the co-processor interfaces plugable",
    "start": "746880",
    "end": "750320"
  },
  {
    "text": "and that means that whatever your your",
    "start": "750320",
    "end": "752959"
  },
  {
    "text": "use case you",
    "start": "752959",
    "end": "754880"
  },
  {
    "text": "hopefully will be able to run some of",
    "start": "754880",
    "end": "756160"
  },
  {
    "text": "your computation on the thai kv now it's",
    "start": "756160",
    "end": "758079"
  },
  {
    "text": "close to the data and get like",
    "start": "758079",
    "end": "760160"
  },
  {
    "text": "well hopefully huge performance benefits",
    "start": "760160",
    "end": "762240"
  },
  {
    "text": "for you as well",
    "start": "762240",
    "end": "764959"
  },
  {
    "text": "and last but by no means least",
    "start": "765200",
    "end": "768720"
  },
  {
    "text": "it's really important to note that the",
    "start": "768720",
    "end": "770480"
  },
  {
    "text": "the tag ib project is entirely",
    "start": "770480",
    "end": "772880"
  },
  {
    "text": "uh open source and uh governed in the",
    "start": "772880",
    "end": "775760"
  },
  {
    "text": "open",
    "start": "775760",
    "end": "776880"
  },
  {
    "text": "last year we graduated as a cncf",
    "start": "776880",
    "end": "780000"
  },
  {
    "text": "project and",
    "start": "780000",
    "end": "783120"
  },
  {
    "text": "and the the various clients that andy's",
    "start": "783120",
    "end": "785920"
  },
  {
    "text": "going to talk about in the next section",
    "start": "785920",
    "end": "787440"
  },
  {
    "text": "are open source as well",
    "start": "787440",
    "end": "791279"
  },
  {
    "text": "so um i'm going to give a little bit",
    "start": "791920",
    "end": "795279"
  },
  {
    "text": "more",
    "start": "795279",
    "end": "795680"
  },
  {
    "text": "more background so you can get an idea",
    "start": "795680",
    "end": "797760"
  },
  {
    "text": "of actually what the client is doing",
    "start": "797760",
    "end": "799279"
  },
  {
    "text": "behind the scenes and i want to talk",
    "start": "799279",
    "end": "801200"
  },
  {
    "text": "about",
    "start": "801200",
    "end": "801680"
  },
  {
    "text": "the the architecture of a thai kv",
    "start": "801680",
    "end": "803680"
  },
  {
    "text": "cluster",
    "start": "803680",
    "end": "805519"
  },
  {
    "text": "so uh here's the basic idea you've got",
    "start": "805519",
    "end": "808480"
  },
  {
    "text": "um",
    "start": "808480",
    "end": "809519"
  },
  {
    "text": "a whole bunch of tachov nodes and the",
    "start": "809519",
    "end": "812000"
  },
  {
    "text": "data is",
    "start": "812000",
    "end": "812720"
  },
  {
    "text": "sharded across",
    "start": "812720",
    "end": "815760"
  },
  {
    "text": "regions the region is just",
    "start": "815760",
    "end": "819440"
  },
  {
    "text": "a synonym for for shard in this case",
    "start": "821120",
    "end": "825040"
  },
  {
    "text": "so you have the the data is sharded into",
    "start": "825040",
    "end": "828480"
  },
  {
    "text": "regions and then the regions are spread",
    "start": "828480",
    "end": "830000"
  },
  {
    "text": "across",
    "start": "830000",
    "end": "830560"
  },
  {
    "text": "um uh nodes using raft",
    "start": "830560",
    "end": "834399"
  },
  {
    "text": "which ensures kind of reliable",
    "start": "834399",
    "end": "836240"
  },
  {
    "text": "replication of the data",
    "start": "836240",
    "end": "838480"
  },
  {
    "text": "and uh the the client is a somewhat",
    "start": "838480",
    "end": "842320"
  },
  {
    "text": "active participants in in interactions",
    "start": "842320",
    "end": "844800"
  },
  {
    "text": "with um with attacker v clusters i'll",
    "start": "844800",
    "end": "846959"
  },
  {
    "text": "i'll show on your next slide",
    "start": "846959",
    "end": "848880"
  },
  {
    "text": "um and the client communicates with the",
    "start": "848880",
    "end": "852000"
  },
  {
    "text": "the tag av nodes via",
    "start": "852000",
    "end": "853839"
  },
  {
    "text": "um uh grpc",
    "start": "853839",
    "end": "856880"
  },
  {
    "text": "we also have what we call the the",
    "start": "856880",
    "end": "858720"
  },
  {
    "text": "placement driver nodes",
    "start": "858720",
    "end": "860240"
  },
  {
    "text": "and these are responsible basically for",
    "start": "860240",
    "end": "862079"
  },
  {
    "text": "coordination so what that",
    "start": "862079",
    "end": "863680"
  },
  {
    "text": "means is that uh regions that get too",
    "start": "863680",
    "end": "866720"
  },
  {
    "text": "big will be",
    "start": "866720",
    "end": "867920"
  },
  {
    "text": "uh split and regions get too small will",
    "start": "867920",
    "end": "870399"
  },
  {
    "text": "be merged",
    "start": "870399",
    "end": "871519"
  },
  {
    "text": "and regions will be moved if",
    "start": "871519",
    "end": "874560"
  },
  {
    "text": "nodes are getting too much traffic or",
    "start": "874560",
    "end": "876720"
  },
  {
    "text": "too little traffic",
    "start": "876720",
    "end": "878000"
  },
  {
    "text": "uh to ensure that the the cluster is",
    "start": "878000",
    "end": "880720"
  },
  {
    "text": "running optimally",
    "start": "880720",
    "end": "882959"
  },
  {
    "text": "the other important function that the",
    "start": "882959",
    "end": "884880"
  },
  {
    "text": "the placement driver nodes provide",
    "start": "884880",
    "end": "886639"
  },
  {
    "text": "is uh timestamps so uh our transactional",
    "start": "886639",
    "end": "890480"
  },
  {
    "text": "proto uh transaction protocol requires",
    "start": "890480",
    "end": "892800"
  },
  {
    "text": "timestamps",
    "start": "892800",
    "end": "893600"
  },
  {
    "text": "and the the pd cluster is is essentially",
    "start": "893600",
    "end": "897120"
  },
  {
    "text": "a timestamp oracle",
    "start": "897120",
    "end": "899839"
  },
  {
    "text": "so here is that transaction protocol and",
    "start": "899839",
    "end": "902639"
  },
  {
    "text": "actually takeover supports various",
    "start": "902639",
    "end": "904320"
  },
  {
    "text": "flavors of transaction protocols this is",
    "start": "904320",
    "end": "906160"
  },
  {
    "text": "just",
    "start": "906160",
    "end": "907120"
  },
  {
    "text": "one example just to give you an idea of",
    "start": "907120",
    "end": "909040"
  },
  {
    "text": "what's going on",
    "start": "909040",
    "end": "911279"
  },
  {
    "text": "now when i say that the client is kind",
    "start": "911279",
    "end": "912880"
  },
  {
    "text": "of an active participant that's because",
    "start": "912880",
    "end": "915040"
  },
  {
    "text": "the the transaction protocol is a",
    "start": "915040",
    "end": "916800"
  },
  {
    "text": "collaborative protocol so that",
    "start": "916800",
    "end": "918560"
  },
  {
    "text": "the client is responsible for um its end",
    "start": "918560",
    "end": "921760"
  },
  {
    "text": "of the protocol and it's only if both",
    "start": "921760",
    "end": "923360"
  },
  {
    "text": "the client",
    "start": "923360",
    "end": "924160"
  },
  {
    "text": "and the the tyco v nodes um",
    "start": "924160",
    "end": "927279"
  },
  {
    "text": "all kind of do what they're meant to",
    "start": "927279",
    "end": "929519"
  },
  {
    "text": "that you get the",
    "start": "929519",
    "end": "930480"
  },
  {
    "text": "the consistency properties that you want",
    "start": "930480",
    "end": "932959"
  },
  {
    "text": "from the transaction protocol",
    "start": "932959",
    "end": "935440"
  },
  {
    "text": "so i'll just go through this quickly so",
    "start": "935440",
    "end": "938240"
  },
  {
    "text": "when the",
    "start": "938240",
    "end": "939120"
  },
  {
    "text": "the user starts a transaction the first",
    "start": "939120",
    "end": "941360"
  },
  {
    "text": "thing the client does is it talks to the",
    "start": "941360",
    "end": "942959"
  },
  {
    "text": "pd nodes to get a start timestamp",
    "start": "942959",
    "end": "946000"
  },
  {
    "text": "then it's going to build up the",
    "start": "946000",
    "end": "947279"
  },
  {
    "text": "transaction so for reads it's going to",
    "start": "947279",
    "end": "949040"
  },
  {
    "text": "actually talk to the",
    "start": "949040",
    "end": "950800"
  },
  {
    "text": "the tai kv nodes and for writes it's",
    "start": "950800",
    "end": "953759"
  },
  {
    "text": "going to buffer those locally",
    "start": "953759",
    "end": "955279"
  },
  {
    "text": "and it can also cache the um the reads",
    "start": "955279",
    "end": "958320"
  },
  {
    "text": "in case the the user reads the",
    "start": "958320",
    "end": "960240"
  },
  {
    "text": "the same key multiple times then once",
    "start": "960240",
    "end": "963759"
  },
  {
    "text": "we've built up",
    "start": "963759",
    "end": "964959"
  },
  {
    "text": "the the transaction then uh",
    "start": "964959",
    "end": "968480"
  },
  {
    "text": "the the first thing that the client does",
    "start": "968480",
    "end": "971759"
  },
  {
    "text": "is it starts the pre-write phase",
    "start": "971759",
    "end": "974079"
  },
  {
    "text": "and in the pre-write phase the the",
    "start": "974079",
    "end": "975759"
  },
  {
    "text": "client contacts all the the tag av nodes",
    "start": "975759",
    "end": "978480"
  },
  {
    "text": "that it",
    "start": "978480",
    "end": "979199"
  },
  {
    "text": "wants to write to and make sure that the",
    "start": "979199",
    "end": "981519"
  },
  {
    "text": "the transaction can be",
    "start": "981519",
    "end": "983519"
  },
  {
    "text": "um can be written and at the end of this",
    "start": "983519",
    "end": "986800"
  },
  {
    "text": "phase it's basically got a guarantee",
    "start": "986800",
    "end": "988399"
  },
  {
    "text": "from every node",
    "start": "988399",
    "end": "989519"
  },
  {
    "text": "that if it commits then that commit will",
    "start": "989519",
    "end": "992240"
  },
  {
    "text": "succeed",
    "start": "992240",
    "end": "993040"
  },
  {
    "text": "and so at this point once it's got all",
    "start": "993040",
    "end": "994880"
  },
  {
    "text": "those um uh",
    "start": "994880",
    "end": "996720"
  },
  {
    "text": "pre-write responses then the the client",
    "start": "996720",
    "end": "999040"
  },
  {
    "text": "knows that the",
    "start": "999040",
    "end": "1000000"
  },
  {
    "text": "the commit is guaranteed to succeed",
    "start": "1000000",
    "end": "1003519"
  },
  {
    "text": "at that point has to get another time",
    "start": "1003519",
    "end": "1005120"
  },
  {
    "text": "stamp from pd and then it can finally",
    "start": "1005120",
    "end": "1007839"
  },
  {
    "text": "send its commit message",
    "start": "1007839",
    "end": "1009360"
  },
  {
    "text": "and it only has to send that to one node",
    "start": "1009360",
    "end": "1012480"
  },
  {
    "text": "the the primary node of the transaction",
    "start": "1012480",
    "end": "1014880"
  },
  {
    "text": "and then it can",
    "start": "1014880",
    "end": "1015759"
  },
  {
    "text": "return success to the user and",
    "start": "1015759",
    "end": "1019120"
  },
  {
    "text": "later on in its own time it's going to",
    "start": "1019120",
    "end": "1020720"
  },
  {
    "text": "commit all the",
    "start": "1020720",
    "end": "1022399"
  },
  {
    "text": "all the other nodes in the in the",
    "start": "1022399",
    "end": "1023759"
  },
  {
    "text": "transaction",
    "start": "1023759",
    "end": "1025760"
  },
  {
    "text": "so uh the reason i'm going into this",
    "start": "1025760",
    "end": "1028000"
  },
  {
    "text": "kind of detail here is just so you can",
    "start": "1028000",
    "end": "1030079"
  },
  {
    "text": "see",
    "start": "1030079",
    "end": "1030400"
  },
  {
    "text": "that um uh",
    "start": "1030400",
    "end": "1033678"
  },
  {
    "text": "the the interaction between kind of the",
    "start": "1033679",
    "end": "1036240"
  },
  {
    "text": "client and the thai kv server",
    "start": "1036240",
    "end": "1038000"
  },
  {
    "text": "is non-trivial okay this is not just",
    "start": "1038000",
    "end": "1040558"
  },
  {
    "text": "like the interface to a dictionary like",
    "start": "1040559",
    "end": "1043438"
  },
  {
    "text": "andy showed at the start of the talk",
    "start": "1043439",
    "end": "1045360"
  },
  {
    "text": "um it's a bit more complicated than that",
    "start": "1045360",
    "end": "1047520"
  },
  {
    "text": "because we're in this distributed",
    "start": "1047520",
    "end": "1050080"
  },
  {
    "text": "um situation and just to really kind of",
    "start": "1050080",
    "end": "1054000"
  },
  {
    "text": "make this point this is the um protocol",
    "start": "1054000",
    "end": "1056720"
  },
  {
    "text": "buffer specification",
    "start": "1056720",
    "end": "1058080"
  },
  {
    "text": "for um a pre-write request which is",
    "start": "1058080",
    "end": "1060960"
  },
  {
    "text": "something the client would send to a",
    "start": "1060960",
    "end": "1062880"
  },
  {
    "text": "thai kv node",
    "start": "1062880",
    "end": "1064240"
  },
  {
    "text": "and there's as you can see there's a lot",
    "start": "1064240",
    "end": "1066160"
  },
  {
    "text": "of detail there",
    "start": "1066160",
    "end": "1069200"
  },
  {
    "text": "um and so in the in the next section",
    "start": "1069360",
    "end": "1072080"
  },
  {
    "text": "we're gonna see",
    "start": "1072080",
    "end": "1072880"
  },
  {
    "text": "how uh the um the",
    "start": "1072880",
    "end": "1075919"
  },
  {
    "text": "the tag ib client kind of abstracts all",
    "start": "1075919",
    "end": "1078720"
  },
  {
    "text": "all that away for you and just gives you",
    "start": "1078720",
    "end": "1080640"
  },
  {
    "text": "a",
    "start": "1080640",
    "end": "1081280"
  },
  {
    "text": "um a much nicer api so that you can",
    "start": "1081280",
    "end": "1084480"
  },
  {
    "text": "concentrate in your application on the",
    "start": "1084480",
    "end": "1086000"
  },
  {
    "text": "business logic and avoid all this lower",
    "start": "1086000",
    "end": "1088000"
  },
  {
    "text": "level",
    "start": "1088000",
    "end": "1088880"
  },
  {
    "text": "um logic of transaction protocols",
    "start": "1088880",
    "end": "1092640"
  },
  {
    "text": "and stamps and regions and so on and so",
    "start": "1092640",
    "end": "1097039"
  },
  {
    "text": "forth so i'm gonna hand over to andy now",
    "start": "1097039",
    "end": "1099360"
  },
  {
    "text": "who's gonna",
    "start": "1099360",
    "end": "1100000"
  },
  {
    "text": "talk about all that good stuff",
    "start": "1100000",
    "end": "1103760"
  },
  {
    "text": "thanks nick then in this section i will",
    "start": "1104400",
    "end": "1107600"
  },
  {
    "text": "talk about how to use thai kv",
    "start": "1107600",
    "end": "1110880"
  },
  {
    "text": "techie recline is libraries in multiple",
    "start": "1110880",
    "end": "1113840"
  },
  {
    "text": "languages",
    "start": "1113840",
    "end": "1115200"
  },
  {
    "text": "in this list there are ros java",
    "start": "1115200",
    "end": "1118400"
  },
  {
    "text": "python c plus plus and go you can use",
    "start": "1118400",
    "end": "1121919"
  },
  {
    "text": "any of those that fits your need",
    "start": "1121919",
    "end": "1125759"
  },
  {
    "text": "in the following i will show you the",
    "start": "1125840",
    "end": "1127840"
  },
  {
    "text": "examples using the python client",
    "start": "1127840",
    "end": "1131360"
  },
  {
    "text": "the class in other languages are similar",
    "start": "1131360",
    "end": "1135120"
  },
  {
    "text": "before that we download the python",
    "start": "1135120",
    "end": "1137360"
  },
  {
    "text": "client with vip",
    "start": "1137360",
    "end": "1138559"
  },
  {
    "text": "using this command",
    "start": "1138559",
    "end": "1141440"
  },
  {
    "text": "tag keyword client supports two",
    "start": "1143039",
    "end": "1144640"
  },
  {
    "text": "different interface",
    "start": "1144640",
    "end": "1146160"
  },
  {
    "text": "row kv and transaction they cannot be",
    "start": "1146160",
    "end": "1148880"
  },
  {
    "text": "used together",
    "start": "1148880",
    "end": "1149760"
  },
  {
    "text": "so you need to choose one of them in the",
    "start": "1149760",
    "end": "1151679"
  },
  {
    "text": "beginning",
    "start": "1151679",
    "end": "1153440"
  },
  {
    "text": "no kv is usually fast has less overhead",
    "start": "1153440",
    "end": "1156640"
  },
  {
    "text": "than transaction",
    "start": "1156640",
    "end": "1158080"
  },
  {
    "text": "therefore performs in lower latency",
    "start": "1158080",
    "end": "1161440"
  },
  {
    "text": "still raw kb guarantees drone",
    "start": "1161440",
    "end": "1163919"
  },
  {
    "text": "consistency",
    "start": "1163919",
    "end": "1164960"
  },
  {
    "text": "but only supports single raw transaction",
    "start": "1164960",
    "end": "1167220"
  },
  {
    "text": "[Music]",
    "start": "1167220",
    "end": "1168400"
  },
  {
    "text": "transaction interface is an extra",
    "start": "1168400",
    "end": "1170640"
  },
  {
    "text": "interior",
    "start": "1170640",
    "end": "1171440"
  },
  {
    "text": "in transaction interface adds an extra",
    "start": "1171440",
    "end": "1174559"
  },
  {
    "text": "interior",
    "start": "1174559",
    "end": "1175440"
  },
  {
    "text": "mvcc layer on top of rkv",
    "start": "1175440",
    "end": "1178960"
  },
  {
    "text": "therefore it supports multi-role atomic",
    "start": "1178960",
    "end": "1182320"
  },
  {
    "text": "and snapshot isolation this can be quite",
    "start": "1182320",
    "end": "1185520"
  },
  {
    "text": "useful",
    "start": "1185520",
    "end": "1186320"
  },
  {
    "text": "in oltp scenario",
    "start": "1186320",
    "end": "1190240"
  },
  {
    "text": "so let's talk about the door kb first",
    "start": "1191039",
    "end": "1194240"
  },
  {
    "text": "row kb client provides scan methods for",
    "start": "1194240",
    "end": "1197440"
  },
  {
    "text": "retrieving a value by the key",
    "start": "1197440",
    "end": "1200080"
  },
  {
    "text": "scan methods for retrieving bunch of",
    "start": "1200080",
    "end": "1202080"
  },
  {
    "text": "values by the range of key",
    "start": "1202080",
    "end": "1205280"
  },
  {
    "text": "put method for updating and inserting",
    "start": "1205280",
    "end": "1208000"
  },
  {
    "text": "and deletes for deleting",
    "start": "1208000",
    "end": "1211360"
  },
  {
    "text": "here is a brief example for using the",
    "start": "1211600",
    "end": "1214080"
  },
  {
    "text": "roku v",
    "start": "1214080",
    "end": "1214670"
  },
  {
    "text": "[Music]",
    "start": "1214670",
    "end": "1216320"
  },
  {
    "text": "first connect to tachyv with the server",
    "start": "1216320",
    "end": "1219039"
  },
  {
    "text": "ip",
    "start": "1219039",
    "end": "1221840"
  },
  {
    "text": "then insert the kb pair",
    "start": "1221919",
    "end": "1225039"
  },
  {
    "text": "then insert the kb pair by calling put",
    "start": "1225039",
    "end": "1228000"
  },
  {
    "text": "method",
    "start": "1228000",
    "end": "1230400"
  },
  {
    "text": "then we can use them with then we can",
    "start": "1230559",
    "end": "1233840"
  },
  {
    "text": "use game methods",
    "start": "1233840",
    "end": "1235120"
  },
  {
    "text": "with k1",
    "start": "1235120",
    "end": "1236040"
  },
  {
    "text": "[Music]",
    "start": "1236040",
    "end": "1238159"
  },
  {
    "text": "then use gate method with k1",
    "start": "1238159",
    "end": "1241360"
  },
  {
    "text": "will return value v1 which we insert",
    "start": "1241360",
    "end": "1244080"
  },
  {
    "text": "before",
    "start": "1244080",
    "end": "1246159"
  },
  {
    "text": "scan method returns the list of key",
    "start": "1246159",
    "end": "1248559"
  },
  {
    "text": "value pairs",
    "start": "1248559",
    "end": "1250080"
  },
  {
    "text": "by the key range from k1 to the end",
    "start": "1250080",
    "end": "1253520"
  },
  {
    "text": "the scan limit is required to be",
    "start": "1253520",
    "end": "1255840"
  },
  {
    "text": "explicitly",
    "start": "1255840",
    "end": "1256799"
  },
  {
    "text": "dated to avoid flooding the titan server",
    "start": "1256799",
    "end": "1259840"
  },
  {
    "text": "with an unexpectedly large result",
    "start": "1259840",
    "end": "1263840"
  },
  {
    "text": "in transaction modes the methods in the",
    "start": "1264880",
    "end": "1267360"
  },
  {
    "text": "client class",
    "start": "1267360",
    "end": "1268559"
  },
  {
    "text": "is moved into the new transaction class",
    "start": "1268559",
    "end": "1271600"
  },
  {
    "text": "by calling between optimistic or",
    "start": "1271600",
    "end": "1273760"
  },
  {
    "text": "becoming pessimistic",
    "start": "1273760",
    "end": "1275120"
  },
  {
    "text": "on the current a new transaction will be",
    "start": "1275120",
    "end": "1277360"
  },
  {
    "text": "created",
    "start": "1277360",
    "end": "1278960"
  },
  {
    "text": "transaction has actual methods like get",
    "start": "1278960",
    "end": "1282159"
  },
  {
    "text": "volume",
    "start": "1282159",
    "end": "1282720"
  },
  {
    "text": "update and lost keys which is the",
    "start": "1282720",
    "end": "1285360"
  },
  {
    "text": "features for",
    "start": "1285360",
    "end": "1286240"
  },
  {
    "text": "pessimistic transaction and it is a",
    "start": "1286240",
    "end": "1289039"
  },
  {
    "text": "little bit out of the topic of the days",
    "start": "1289039",
    "end": "1291679"
  },
  {
    "text": "so you can find a description in the",
    "start": "1291679",
    "end": "1293679"
  },
  {
    "text": "document of ros",
    "start": "1293679",
    "end": "1295039"
  },
  {
    "text": "client",
    "start": "1295039",
    "end": "1297440"
  },
  {
    "text": "here is a brief example for using the",
    "start": "1298400",
    "end": "1300559"
  },
  {
    "text": "transaction",
    "start": "1300559",
    "end": "1302960"
  },
  {
    "text": "akin to ronkev connect the client to the",
    "start": "1302960",
    "end": "1305919"
  },
  {
    "text": "target",
    "start": "1305919",
    "end": "1306400"
  },
  {
    "text": "server by specifying the ip",
    "start": "1306400",
    "end": "1310640"
  },
  {
    "text": "then we begin the transaction",
    "start": "1311440",
    "end": "1315279"
  },
  {
    "text": "put the kv pair of k1p1 as usual",
    "start": "1315360",
    "end": "1318720"
  },
  {
    "text": "and know that other clients will not see",
    "start": "1318720",
    "end": "1321039"
  },
  {
    "text": "it until commit",
    "start": "1321039",
    "end": "1324080"
  },
  {
    "text": "here we get the value by key",
    "start": "1324159",
    "end": "1327840"
  },
  {
    "text": "finally commit the transaction and then",
    "start": "1327919",
    "end": "1330960"
  },
  {
    "text": "all",
    "start": "1330960",
    "end": "1331280"
  },
  {
    "text": "operations will become observable by",
    "start": "1331280",
    "end": "1333679"
  },
  {
    "text": "other clients",
    "start": "1333679",
    "end": "1336320"
  },
  {
    "text": "another property of transaction is that",
    "start": "1336320",
    "end": "1338960"
  },
  {
    "text": "all operations between the beginning",
    "start": "1338960",
    "end": "1340799"
  },
  {
    "text": "and commit is guaranteed to be all",
    "start": "1340799",
    "end": "1343280"
  },
  {
    "text": "success",
    "start": "1343280",
    "end": "1343919"
  },
  {
    "text": "or fail",
    "start": "1343919",
    "end": "1347760"
  },
  {
    "text": "um that's the the end of the talk so",
    "start": "1347760",
    "end": "1350400"
  },
  {
    "text": "thanks",
    "start": "1350400",
    "end": "1350880"
  },
  {
    "text": "for um for your attention just to",
    "start": "1350880",
    "end": "1354240"
  },
  {
    "text": "quickly go over",
    "start": "1354240",
    "end": "1355360"
  },
  {
    "text": "what we talked about we um we talked",
    "start": "1355360",
    "end": "1358159"
  },
  {
    "text": "about um",
    "start": "1358159",
    "end": "1360000"
  },
  {
    "text": "how to choose a key value store we",
    "start": "1360000",
    "end": "1362000"
  },
  {
    "text": "covered roxdb",
    "start": "1362000",
    "end": "1364000"
  },
  {
    "text": "readers mongodb and then we dived a tiny",
    "start": "1364000",
    "end": "1368080"
  },
  {
    "text": "bit deeper into",
    "start": "1368080",
    "end": "1369520"
  },
  {
    "text": "into tai kv which is a distributed and",
    "start": "1369520",
    "end": "1372320"
  },
  {
    "text": "transactional key value store",
    "start": "1372320",
    "end": "1375520"
  },
  {
    "text": "and then we talked about how your",
    "start": "1375520",
    "end": "1377440"
  },
  {
    "text": "application would communicate",
    "start": "1377440",
    "end": "1379280"
  },
  {
    "text": "with takeov using the either the the raw",
    "start": "1379280",
    "end": "1383200"
  },
  {
    "text": "or the transactional uh interfaces of",
    "start": "1383200",
    "end": "1385919"
  },
  {
    "text": "taikv",
    "start": "1385919",
    "end": "1386640"
  },
  {
    "text": "via the python client",
    "start": "1386640",
    "end": "1390159"
  },
  {
    "text": "so if you want to learn more as i said",
    "start": "1390159",
    "end": "1392960"
  },
  {
    "text": "earlier",
    "start": "1392960",
    "end": "1393760"
  },
  {
    "text": "taika v and all its clients are open",
    "start": "1393760",
    "end": "1396799"
  },
  {
    "text": "source projects and the the best place",
    "start": "1396799",
    "end": "1398799"
  },
  {
    "text": "to go to find out more is",
    "start": "1398799",
    "end": "1400159"
  },
  {
    "text": "to go straight to the source which is on",
    "start": "1400159",
    "end": "1402240"
  },
  {
    "text": "github",
    "start": "1402240",
    "end": "1403200"
  },
  {
    "text": "so you can go to any other taker view of",
    "start": "1403200",
    "end": "1405280"
  },
  {
    "text": "the client repos",
    "start": "1405280",
    "end": "1406880"
  },
  {
    "text": "and find out more about how to install",
    "start": "1406880",
    "end": "1410559"
  },
  {
    "text": "use build or even contribute to",
    "start": "1410559",
    "end": "1413679"
  },
  {
    "text": "the the different projects if you'd",
    "start": "1413679",
    "end": "1416559"
  },
  {
    "text": "rather",
    "start": "1416559",
    "end": "1417200"
  },
  {
    "text": "chat with with other humans then the tag",
    "start": "1417200",
    "end": "1420000"
  },
  {
    "text": "av working group slack",
    "start": "1420000",
    "end": "1421600"
  },
  {
    "text": "is probably the best place to go and",
    "start": "1421600",
    "end": "1425039"
  },
  {
    "text": "if you'd rather read stuff in html",
    "start": "1425039",
    "end": "1428080"
  },
  {
    "text": "format then we have a website",
    "start": "1428080",
    "end": "1430080"
  },
  {
    "text": "as well at taikov.org",
    "start": "1430080",
    "end": "1433440"
  },
  {
    "text": "so thanks again for sticking around to",
    "start": "1433440",
    "end": "1436000"
  },
  {
    "text": "the end",
    "start": "1436000",
    "end": "1436559"
  },
  {
    "text": "and i hope you got something out of this",
    "start": "1436559",
    "end": "1439360"
  },
  {
    "text": "out of the talk",
    "start": "1439360",
    "end": "1440320"
  },
  {
    "text": "so thanks so much",
    "start": "1440320",
    "end": "1443440"
  }
]