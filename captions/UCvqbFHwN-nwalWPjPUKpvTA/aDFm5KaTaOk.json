[
  {
    "text": "hi I'm Matt and I'm Celina",
    "start": "1820",
    "end": "4950"
  },
  {
    "text": "we're engineers on the observability",
    "start": "4950",
    "end": "6839"
  },
  {
    "text": "team at uber where we work on em through",
    "start": "6839",
    "end": "8580"
  },
  {
    "text": "DB our open source time series database",
    "start": "8580",
    "end": "10950"
  },
  {
    "text": "and today we're here to share our story",
    "start": "10950",
    "end": "13590"
  },
  {
    "text": "with you of putting em 3d beat on",
    "start": "13590",
    "end": "15480"
  },
  {
    "text": "kubernetes Before we jump into that",
    "start": "15480",
    "end": "18779"
  },
  {
    "text": "though we want to give you some context",
    "start": "18779",
    "end": "20490"
  },
  {
    "text": "on what m3 DB is m3 DB is part of m3",
    "start": "20490",
    "end": "24150"
  },
  {
    "text": "which is ubers open source metric stack",
    "start": "24150",
    "end": "26750"
  },
  {
    "text": "m3 has been in production at uber since",
    "start": "26750",
    "end": "29640"
  },
  {
    "text": "2016 and we've built it in the open",
    "start": "29640",
    "end": "32070"
  },
  {
    "text": "since day one m3 DB is the distributed",
    "start": "32070",
    "end": "35910"
  },
  {
    "text": "time series database that's it that sits",
    "start": "35910",
    "end": "38250"
  },
  {
    "text": "at the core of m3 alongside our other",
    "start": "38250",
    "end": "40710"
  },
  {
    "text": "components like our fault tolerant",
    "start": "40710",
    "end": "42510"
  },
  {
    "text": "aggregation tier and distributed query",
    "start": "42510",
    "end": "44489"
  },
  {
    "text": "engine to give you a sense of m30 B's",
    "start": "44489",
    "end": "48300"
  },
  {
    "text": "usage at uber",
    "start": "48300",
    "end": "49379"
  },
  {
    "text": "enter DB rights 31 million metrics at 50",
    "start": "49379",
    "end": "52860"
  },
  {
    "text": "gigabits per second across all of our",
    "start": "52860",
    "end": "54570"
  },
  {
    "text": "data centers uber has over a thousand",
    "start": "54570",
    "end": "57059"
  },
  {
    "text": "instances running M 3 DB place in",
    "start": "57059",
    "end": "58980"
  },
  {
    "text": "various clusters and in total we store",
    "start": "58980",
    "end": "60989"
  },
  {
    "text": "almost 9 million unique metric IDs when",
    "start": "60989",
    "end": "66299"
  },
  {
    "text": "we first built m 3 DB back in 2016",
    "start": "66299",
    "end": "69020"
  },
  {
    "text": "operating it was pretty simple",
    "start": "69020",
    "end": "70920"
  },
  {
    "text": "we ran M 3 DB in two data centers and",
    "start": "70920",
    "end": "74040"
  },
  {
    "text": "had one cluster of her data center our",
    "start": "74040",
    "end": "76860"
  },
  {
    "text": "primary use case at the time was",
    "start": "76860",
    "end": "78720"
  },
  {
    "text": "real-time alerting and dashboard",
    "start": "78720",
    "end": "80369"
  },
  {
    "text": "introspection so our cluster shared a",
    "start": "80369",
    "end": "82320"
  },
  {
    "text": "static configuration",
    "start": "82320",
    "end": "84409"
  },
  {
    "text": "fast forward to 2018 however and things",
    "start": "84409",
    "end": "87630"
  },
  {
    "text": "aren't so simple for one we run em",
    "start": "87630",
    "end": "90600"
  },
  {
    "text": "through DB in more data centers and",
    "start": "90600",
    "end": "92430"
  },
  {
    "text": "there are more clusters per data center",
    "start": "92430",
    "end": "94409"
  },
  {
    "text": "the clusters themselves are larger and",
    "start": "94409",
    "end": "96930"
  },
  {
    "text": "they no longer share one configuration",
    "start": "96930",
    "end": "99079"
  },
  {
    "text": "some store high resolution metrics for a",
    "start": "99079",
    "end": "101729"
  },
  {
    "text": "few hours some store low resolution",
    "start": "101729",
    "end": "103920"
  },
  {
    "text": "metrics for up to five years on top of",
    "start": "103920",
    "end": "106829"
  },
  {
    "text": "all of this we also run em 3 DB in",
    "start": "106829",
    "end": "109049"
  },
  {
    "text": "multiple cloud providers where uber has",
    "start": "109049",
    "end": "111149"
  },
  {
    "text": "a presence so putting this all together",
    "start": "111149",
    "end": "113759"
  },
  {
    "text": "we now manage over 40m 3 DB clusters",
    "start": "113759",
    "end": "116729"
  },
  {
    "text": "across a variety of environments and",
    "start": "116729",
    "end": "118799"
  },
  {
    "text": "while M 3 DB itself is easy to manage",
    "start": "118799",
    "end": "121619"
  },
  {
    "text": "the number of clusters that we operate",
    "start": "121619",
    "end": "123299"
  },
  {
    "text": "posed a challenge and then while the",
    "start": "123299",
    "end": "125790"
  },
  {
    "text": "number of clusters has grown 20 times",
    "start": "125790",
    "end": "127590"
  },
  {
    "text": "the number of engineers on our team has",
    "start": "127590",
    "end": "129840"
  },
  {
    "text": "stayed relatively the same",
    "start": "129840",
    "end": "132679"
  },
  {
    "text": "here are some features that make em",
    "start": "134260",
    "end": "136430"
  },
  {
    "text": "dirty be interesting to work with then",
    "start": "136430",
    "end": "139130"
  },
  {
    "text": "30 based doors real-time metrics from",
    "start": "139130",
    "end": "140960"
  },
  {
    "text": "all of our services and hosts so upon",
    "start": "140960",
    "end": "143120"
  },
  {
    "text": "receiving a metric and 30 be shards the",
    "start": "143120",
    "end": "145130"
  },
  {
    "text": "data into its respective partitions each",
    "start": "145130",
    "end": "148880"
  },
  {
    "text": "shard is replicated by a factor of three",
    "start": "148880",
    "end": "150920"
  },
  {
    "text": "which are then placed in separate",
    "start": "150920",
    "end": "152390"
  },
  {
    "text": "failure domains the replicated",
    "start": "152390",
    "end": "154460"
  },
  {
    "text": "environments are always synched so",
    "start": "154460",
    "end": "156350"
  },
  {
    "text": "whenever adv nodes are added removed or",
    "start": "156350",
    "end": "158780"
  },
  {
    "text": "replaced the replication factor in",
    "start": "158780",
    "end": "160790"
  },
  {
    "text": "isolation group is honored when",
    "start": "160790",
    "end": "162320"
  },
  {
    "text": "redistributing the shards to instances",
    "start": "162320",
    "end": "164330"
  },
  {
    "text": "in terms of maintaining and 30 be the",
    "start": "164330",
    "end": "167810"
  },
  {
    "text": "main pain points of it can be broken",
    "start": "167810",
    "end": "169160"
  },
  {
    "text": "down into two cycles the first part is",
    "start": "169160",
    "end": "172550"
  },
  {
    "text": "the daily reactive cycle when a node",
    "start": "172550",
    "end": "174680"
  },
  {
    "text": "becomes problematic an engineer gets",
    "start": "174680",
    "end": "176450"
  },
  {
    "text": "paged then they would manually SSH into",
    "start": "176450",
    "end": "179300"
  },
  {
    "text": "Ebers house to reboot provision another",
    "start": "179300",
    "end": "181610"
  },
  {
    "text": "resource or decommission the resource so",
    "start": "181610",
    "end": "186020"
  },
  {
    "text": "because of these daily happenings",
    "start": "186020",
    "end": "187150"
  },
  {
    "text": "continuous multi-region Environment",
    "start": "187150",
    "end": "189560"
  },
  {
    "text": "Management is a must for example we",
    "start": "189560",
    "end": "192140"
  },
  {
    "text": "manage all of our clusters by looking at",
    "start": "192140",
    "end": "193880"
  },
  {
    "text": "all the ones that triggered alerts and",
    "start": "193880",
    "end": "195620"
  },
  {
    "text": "also all the ones that were",
    "start": "195620",
    "end": "196670"
  },
  {
    "text": "underutilized and let's do some capacity",
    "start": "196670",
    "end": "198950"
  },
  {
    "text": "planning to effectively manage our load",
    "start": "198950",
    "end": "200500"
  },
  {
    "text": "after these meetings engineers would",
    "start": "200500",
    "end": "202940"
  },
  {
    "text": "have to manually provision and",
    "start": "202940",
    "end": "204200"
  },
  {
    "text": "decommission hosts and we expect this",
    "start": "204200",
    "end": "206120"
  },
  {
    "text": "operational toil to increase",
    "start": "206120",
    "end": "207739"
  },
  {
    "text": "proportionally with the number of",
    "start": "207739",
    "end": "208970"
  },
  {
    "text": "clusters as we continue to rapidly grow",
    "start": "208970",
    "end": "212200"
  },
  {
    "text": "although we had made these operations",
    "start": "212200",
    "end": "214700"
  },
  {
    "text": "easier over the years we were still",
    "start": "214700",
    "end": "216530"
  },
  {
    "text": "faced with a scaling challenge in terms",
    "start": "216530",
    "end": "218209"
  },
  {
    "text": "of the sheer number of clusters that we",
    "start": "218209",
    "end": "219800"
  },
  {
    "text": "operated so we set out to find a",
    "start": "219800",
    "end": "222049"
  },
  {
    "text": "solution to make managing all this",
    "start": "222049",
    "end": "223670"
  },
  {
    "text": "newfound complexity easier our first",
    "start": "223670",
    "end": "228530"
  },
  {
    "text": "step was to survey the list of existing",
    "start": "228530",
    "end": "230090"
  },
  {
    "text": "tools for managing applications in a",
    "start": "230090",
    "end": "232310"
  },
  {
    "text": "cloud native world although we were",
    "start": "232310",
    "end": "234530"
  },
  {
    "text": "really excited by the rise of",
    "start": "234530",
    "end": "235940"
  },
  {
    "text": "technologies such as kubernetes we",
    "start": "235940",
    "end": "237950"
  },
  {
    "text": "wanted to make sure that we thoroughly",
    "start": "237950",
    "end": "239330"
  },
  {
    "text": "understood our problem space before",
    "start": "239330",
    "end": "240890"
  },
  {
    "text": "jumping to a solution so we broke down",
    "start": "240890",
    "end": "243380"
  },
  {
    "text": "what we were looking for in a solution",
    "start": "243380",
    "end": "244940"
  },
  {
    "text": "into a few core requirements our first",
    "start": "244940",
    "end": "249019"
  },
  {
    "text": "requirement was that whatever we chose",
    "start": "249019",
    "end": "250610"
  },
  {
    "text": "would have to have primitives to support",
    "start": "250610",
    "end": "252470"
  },
  {
    "text": "demanding stateful workloads given m3/d",
    "start": "252470",
    "end": "255590"
  },
  {
    "text": "DS characteristics we require access to",
    "start": "255590",
    "end": "257690"
  },
  {
    "text": "low latency storage and given our",
    "start": "257690",
    "end": "260180"
  },
  {
    "text": "customer are given our users as",
    "start": "260180",
    "end": "261950"
  },
  {
    "text": "requirements we require access to the",
    "start": "261950",
    "end": "264229"
  },
  {
    "text": "storage across all of our",
    "start": "264229",
    "end": "265490"
  },
  {
    "text": "data we have internal workloads at uber",
    "start": "265490",
    "end": "268130"
  },
  {
    "text": "that randomly query large time windows",
    "start": "268130",
    "end": "270139"
  },
  {
    "text": "repeatedly with look-back periods",
    "start": "270139",
    "end": "271940"
  },
  {
    "text": "ranging from a few minutes to a few",
    "start": "271940",
    "end": "273740"
  },
  {
    "text": "years and everywhere in between to give",
    "start": "273740",
    "end": "276680"
  },
  {
    "text": "you a sense of what we are looking for",
    "start": "276680",
    "end": "277819"
  },
  {
    "text": "let's take a look at some ways of",
    "start": "277819",
    "end": "279830"
  },
  {
    "text": "managing state and containerized",
    "start": "279830",
    "end": "281330"
  },
  {
    "text": "applications one option for managing our",
    "start": "281330",
    "end": "285080"
  },
  {
    "text": "state would be to just not manage it at",
    "start": "285080",
    "end": "287360"
  },
  {
    "text": "all an m3 DB instances data would live",
    "start": "287360",
    "end": "290300"
  },
  {
    "text": "as long as its container this might",
    "start": "290300",
    "end": "292910"
  },
  {
    "text": "technically be fast as we would have",
    "start": "292910",
    "end": "294500"
  },
  {
    "text": "direct access to the host disk but it",
    "start": "294500",
    "end": "296690"
  },
  {
    "text": "otherwise be pretty terrible for one",
    "start": "296690",
    "end": "299419"
  },
  {
    "text": "there's no durability of the data this",
    "start": "299419",
    "end": "302419"
  },
  {
    "text": "means that when m3 DB in containers died",
    "start": "302419",
    "end": "304729"
  },
  {
    "text": "or restarted they would have to stream",
    "start": "304729",
    "end": "306590"
  },
  {
    "text": "terabytes of data from their peers and",
    "start": "306590",
    "end": "308720"
  },
  {
    "text": "this would be wildly inefficient on top",
    "start": "308720",
    "end": "311720"
  },
  {
    "text": "of all this when M 3 DB instances are",
    "start": "311720",
    "end": "314030"
  },
  {
    "text": "streaming data they're not available for",
    "start": "314030",
    "end": "315919"
  },
  {
    "text": "reads which would have dangerous",
    "start": "315919",
    "end": "317389"
  },
  {
    "text": "reliability implications so what if we",
    "start": "317389",
    "end": "320389"
  },
  {
    "text": "didn't meet to choose to store our state",
    "start": "320389",
    "end": "322220"
  },
  {
    "text": "in a more durable manner using something",
    "start": "322220",
    "end": "324319"
  },
  {
    "text": "like a remote block store this is a",
    "start": "324319",
    "end": "326870"
  },
  {
    "text": "pretty popular option but unfortunately",
    "start": "326870",
    "end": "329090"
  },
  {
    "text": "the latency guarantees provided by a",
    "start": "329090",
    "end": "331340"
  },
  {
    "text": "remote block store didn't really match",
    "start": "331340",
    "end": "332960"
  },
  {
    "text": "what we were looking for M 3 DB stores",
    "start": "332960",
    "end": "335900"
  },
  {
    "text": "all of the monitoring data for ubers",
    "start": "335900",
    "end": "337849"
  },
  {
    "text": "global real-time marketplace and our",
    "start": "337849",
    "end": "340340"
  },
  {
    "text": "customers expect to be alerted as soon",
    "start": "340340",
    "end": "341900"
  },
  {
    "text": "as there's an issue for us that means",
    "start": "341900",
    "end": "345050"
  },
  {
    "text": "that every bit of latency in ingesting",
    "start": "345050",
    "end": "347060"
  },
  {
    "text": "and serving metrics counts and while the",
    "start": "347060",
    "end": "349849"
  },
  {
    "text": "increased durability is nice it seemed",
    "start": "349849",
    "end": "352039"
  },
  {
    "text": "inefficient to pay someone else to",
    "start": "352039",
    "end": "354020"
  },
  {
    "text": "replicate our data slower when we",
    "start": "354020",
    "end": "356300"
  },
  {
    "text": "already replicate things three times at",
    "start": "356300",
    "end": "358190"
  },
  {
    "text": "the application layer on top of all that",
    "start": "358190",
    "end": "361039"
  },
  {
    "text": "a remote block store has different",
    "start": "361039",
    "end": "363710"
  },
  {
    "text": "characteristics across different cloud",
    "start": "363710",
    "end": "365120"
  },
  {
    "text": "providers and would be potentially out",
    "start": "365120",
    "end": "366889"
  },
  {
    "text": "of the question our internal data",
    "start": "366889",
    "end": "368330"
  },
  {
    "text": "centers another option we had seen for",
    "start": "368330",
    "end": "371719"
  },
  {
    "text": "storing remote state would be to use",
    "start": "371719",
    "end": "373699"
  },
  {
    "text": "something would be to deduplicate the",
    "start": "373699",
    "end": "375740"
  },
  {
    "text": "data and store it on a remote object",
    "start": "375740",
    "end": "377870"
  },
  {
    "text": "store like your friendly neighborhood",
    "start": "377870",
    "end": "379400"
  },
  {
    "text": "cloud providers object store such as s3",
    "start": "379400",
    "end": "381830"
  },
  {
    "text": "or Google Cloud Storage well this is a",
    "start": "381830",
    "end": "384800"
  },
  {
    "text": "little bit more efficient as we're only",
    "start": "384800",
    "end": "386419"
  },
  {
    "text": "paying to store one copy of the data we",
    "start": "386419",
    "end": "388819"
  },
  {
    "text": "still weren't comfortable with the",
    "start": "388819",
    "end": "390349"
  },
  {
    "text": "latency that it introduced for real-time",
    "start": "390349",
    "end": "392300"
  },
  {
    "text": "alerting and additionally we would still",
    "start": "392300",
    "end": "395029"
  },
  {
    "text": "have the problem where we'd have to",
    "start": "395029",
    "end": "396169"
  },
  {
    "text": "stream terabytes of data",
    "start": "396169",
    "end": "397920"
  },
  {
    "text": "as containers moved around so all of",
    "start": "397920",
    "end": "401460"
  },
  {
    "text": "this left us looking for a solution for",
    "start": "401460",
    "end": "403200"
  },
  {
    "text": "storing our state that would be",
    "start": "403200",
    "end": "404760"
  },
  {
    "text": "performant durable and efficient our",
    "start": "404760",
    "end": "409230"
  },
  {
    "text": "second requirement was to have our",
    "start": "409230",
    "end": "410640"
  },
  {
    "text": "solution work seamlessly in our internal",
    "start": "410640",
    "end": "412470"
  },
  {
    "text": "data centers and in the cloud in the",
    "start": "412470",
    "end": "414720"
  },
  {
    "text": "short-term for better or for worse our",
    "start": "414720",
    "end": "416370"
  },
  {
    "text": "current production workloads already run",
    "start": "416370",
    "end": "418260"
  },
  {
    "text": "in multi cloud environments and in our",
    "start": "418260",
    "end": "419940"
  },
  {
    "text": "internal data centers and realistically",
    "start": "419940",
    "end": "421830"
  },
  {
    "text": "we can't just ignore one or the other if",
    "start": "421830",
    "end": "423720"
  },
  {
    "text": "we want all the metrics for an accurate",
    "start": "423720",
    "end": "425280"
  },
  {
    "text": "observability picture in the long term",
    "start": "425280",
    "end": "427980"
  },
  {
    "text": "developing an environment agnostic",
    "start": "427980",
    "end": "429780"
  },
  {
    "text": "solution better prepares us for the",
    "start": "429780",
    "end": "431190"
  },
  {
    "text": "future it allows us to dive deeper on",
    "start": "431190",
    "end": "433980"
  },
  {
    "text": "core features that would otherwise be",
    "start": "433980",
    "end": "435510"
  },
  {
    "text": "considered technical debt down the road",
    "start": "435510",
    "end": "438140"
  },
  {
    "text": "finally we really wanted to embrace the",
    "start": "438140",
    "end": "440670"
  },
  {
    "text": "global engineering community we've had a",
    "start": "440670",
    "end": "442710"
  },
  {
    "text": "great time spending our efforts open",
    "start": "442710",
    "end": "444330"
  },
  {
    "text": "sourcing and 30b so we thought it'd be",
    "start": "444330",
    "end": "446310"
  },
  {
    "text": "pretty silly to make an add-on that the",
    "start": "446310",
    "end": "447690"
  },
  {
    "text": "community couldn't take advantage of we",
    "start": "447690",
    "end": "449880"
  },
  {
    "text": "also figured other smart engineers",
    "start": "449880",
    "end": "451290"
  },
  {
    "text": "around the world find themself with",
    "start": "451290",
    "end": "452430"
  },
  {
    "text": "similar challenges and so we figured",
    "start": "452430",
    "end": "454320"
  },
  {
    "text": "there must be innovative ideas out there",
    "start": "454320",
    "end": "455520"
  },
  {
    "text": "to leverage meanwhile the reality of the",
    "start": "455520",
    "end": "458820"
  },
  {
    "text": "situation was around the time we were",
    "start": "458820",
    "end": "460560"
  },
  {
    "text": "thinking of simplifying and 30 B",
    "start": "460560",
    "end": "462390"
  },
  {
    "text": "management we had both just come back",
    "start": "462390",
    "end": "464130"
  },
  {
    "text": "from Curb Khan and seen how others had",
    "start": "464130",
    "end": "465870"
  },
  {
    "text": "leveraged kubernetes for the workloads",
    "start": "465870",
    "end": "467310"
  },
  {
    "text": "so in particular operators caught our",
    "start": "467310",
    "end": "469740"
  },
  {
    "text": "attention an operator is a set of",
    "start": "469740",
    "end": "472050"
  },
  {
    "text": "application-specific custom controllers",
    "start": "472050",
    "end": "474120"
  },
  {
    "text": "or custom resource definitions with",
    "start": "474120",
    "end": "475830"
  },
  {
    "text": "direct access to the cube API it",
    "start": "475830",
    "end": "478380"
  },
  {
    "text": "simplifies the lifecycle of cube native",
    "start": "478380",
    "end": "480270"
  },
  {
    "text": "applications from packaging deploying",
    "start": "480270",
    "end": "482220"
  },
  {
    "text": "and managing and scaling engineers can",
    "start": "482220",
    "end": "484920"
  },
  {
    "text": "customize rules for the operator to",
    "start": "484920",
    "end": "486540"
  },
  {
    "text": "observe analyze and act on the",
    "start": "486540",
    "end": "488280"
  },
  {
    "text": "deployment to reconcile state and here's",
    "start": "488280",
    "end": "490620"
  },
  {
    "text": "where we notice similarities in the",
    "start": "490620",
    "end": "492450"
  },
  {
    "text": "pattern with our MVP lifecycle to",
    "start": "492450",
    "end": "495930"
  },
  {
    "text": "explain one reconciling state there's",
    "start": "495930",
    "end": "498240"
  },
  {
    "text": "have direct access to the cube API and",
    "start": "498240",
    "end": "500490"
  },
  {
    "text": "also whatever a PS you choose so because",
    "start": "500490",
    "end": "502920"
  },
  {
    "text": "it's a custom resource definition it",
    "start": "502920",
    "end": "504660"
  },
  {
    "text": "extends the capabilities of kubernetes",
    "start": "504660",
    "end": "506280"
  },
  {
    "text": "as an endpoint in whatever context",
    "start": "506280",
    "end": "507930"
  },
  {
    "text": "you're working with in our case a",
    "start": "507930",
    "end": "510030"
  },
  {
    "text": "potential operator would be able to",
    "start": "510030",
    "end": "511500"
  },
  {
    "text": "listen and observe on the happenings of",
    "start": "511500",
    "end": "513479"
  },
  {
    "text": "m30 B and its relationship to kubernetes",
    "start": "513479",
    "end": "515460"
  },
  {
    "text": "and makes adjustments wherever necessary",
    "start": "515460",
    "end": "517620"
  },
  {
    "text": "according to the declared desired state",
    "start": "517620",
    "end": "520340"
  },
  {
    "text": "so given our culmination of requirements",
    "start": "520340",
    "end": "522930"
  },
  {
    "text": "combined",
    "start": "522930",
    "end": "523620"
  },
  {
    "text": "brewing interest in operators we decided",
    "start": "523620",
    "end": "525420"
  },
  {
    "text": "to try a proof of concept on kubernetes",
    "start": "525420",
    "end": "527089"
  },
  {
    "text": "the big thing for us was that it",
    "start": "527089",
    "end": "529290"
  },
  {
    "text": "abstracted away machine failures and",
    "start": "529290",
    "end": "530880"
  },
  {
    "text": "management which was currently the",
    "start": "530880",
    "end": "532380"
  },
  {
    "text": "biggest human operation for M 30 B our",
    "start": "532380",
    "end": "535200"
  },
  {
    "text": "code base is strong and packed with",
    "start": "535200",
    "end": "536700"
  },
  {
    "text": "fault tolerant features but there's only",
    "start": "536700",
    "end": "538290"
  },
  {
    "text": "so much it can do within its reach and",
    "start": "538290",
    "end": "539820"
  },
  {
    "text": "puber Nettie's would really widen the",
    "start": "539820",
    "end": "541320"
  },
  {
    "text": "scope of automated management lifecycle",
    "start": "541320",
    "end": "544730"
  },
  {
    "text": "while we were designing our operator a",
    "start": "545420",
    "end": "547920"
  },
  {
    "text": "few kubernetes features gave us",
    "start": "547920",
    "end": "549870"
  },
  {
    "text": "increased confidence in our decision and",
    "start": "549870",
    "end": "551730"
  },
  {
    "text": "were critical to its ability to meet our",
    "start": "551730",
    "end": "553650"
  },
  {
    "text": "workload",
    "start": "553650",
    "end": "554400"
  },
  {
    "text": "the first was kubernetes is support for",
    "start": "554400",
    "end": "556920"
  },
  {
    "text": "persistent local volumes in addition to",
    "start": "556920",
    "end": "559830"
  },
  {
    "text": "meeting our performance needs persistent",
    "start": "559830",
    "end": "562260"
  },
  {
    "text": "local volumes where the storage",
    "start": "562260",
    "end": "563460"
  },
  {
    "text": "abstraction that would work across our",
    "start": "563460",
    "end": "565170"
  },
  {
    "text": "internal data centers and our cloud",
    "start": "565170",
    "end": "566880"
  },
  {
    "text": "environments where we aren't comfortable",
    "start": "566880",
    "end": "568440"
  },
  {
    "text": "using network storage for our workloads",
    "start": "568440",
    "end": "571220"
  },
  {
    "text": "thinking back to the staple properties",
    "start": "571220",
    "end": "573540"
  },
  {
    "text": "we were looking for persistent local",
    "start": "573540",
    "end": "575580"
  },
  {
    "text": "volumes really met all of our needs the",
    "start": "575580",
    "end": "578190"
  },
  {
    "text": "scheduler is aware of the requirements",
    "start": "578190",
    "end": "579930"
  },
  {
    "text": "of local volumes so kubernetes keeps our",
    "start": "579930",
    "end": "582270"
  },
  {
    "text": "containers on the same node if it can",
    "start": "582270",
    "end": "584330"
  },
  {
    "text": "for durability purposes the schedulers",
    "start": "584330",
    "end": "587190"
  },
  {
    "text": "understanding of data gravity was super",
    "start": "587190",
    "end": "589080"
  },
  {
    "text": "important to us",
    "start": "589080",
    "end": "590150"
  },
  {
    "text": "local volumes meant that we could still",
    "start": "590150",
    "end": "592440"
  },
  {
    "text": "have access to fast local disks and that",
    "start": "592440",
    "end": "595050"
  },
  {
    "text": "there wasn't unnecessary duplication of",
    "start": "595050",
    "end": "597089"
  },
  {
    "text": "our already replicated data",
    "start": "597089",
    "end": "600560"
  },
  {
    "text": "additionally kubernetes is support for",
    "start": "600560",
    "end": "603120"
  },
  {
    "text": "node affinity and the safety guarantees",
    "start": "603120",
    "end": "605010"
  },
  {
    "text": "provided by stateful sets were really",
    "start": "605010",
    "end": "606810"
  },
  {
    "text": "helpful stateful sets enabled us to have",
    "start": "606810",
    "end": "609420"
  },
  {
    "text": "strict ordering or strict guarantees",
    "start": "609420",
    "end": "611610"
  },
  {
    "text": "around the ordering of pod operations",
    "start": "611610",
    "end": "613440"
  },
  {
    "text": "enabling safe deployments and cluster",
    "start": "613440",
    "end": "615540"
  },
  {
    "text": "upgrades their use of stable pod",
    "start": "615540",
    "end": "617940"
  },
  {
    "text": "identity and sticky storage made",
    "start": "617940",
    "end": "619770"
  },
  {
    "text": "managing our cluster topology easier as",
    "start": "619770",
    "end": "621810"
  },
  {
    "text": "we could be sure that instances could",
    "start": "621810",
    "end": "623670"
  },
  {
    "text": "easily rejoin the cluster after failures",
    "start": "623670",
    "end": "625860"
  },
  {
    "text": "and restarts if they had the same plot",
    "start": "625860",
    "end": "627750"
  },
  {
    "text": "identity and storage attached node",
    "start": "627750",
    "end": "631290"
  },
  {
    "text": "affinity was a great tool for us to",
    "start": "631290",
    "end": "633060"
  },
  {
    "text": "provide a similar abstraction for",
    "start": "633060",
    "end": "635100"
  },
  {
    "text": "expressing our requirements for failure",
    "start": "635100",
    "end": "636810"
  },
  {
    "text": "domains across our data centers and our",
    "start": "636810",
    "end": "638760"
  },
  {
    "text": "cloud environments by leveraging node",
    "start": "638760",
    "end": "641160"
  },
  {
    "text": "affinity and stateful sets we could pin",
    "start": "641160",
    "end": "643529"
  },
  {
    "text": "groups of M 3 DB instances to zones in",
    "start": "643529",
    "end": "646140"
  },
  {
    "text": "the cloud providing highly available",
    "start": "646140",
    "end": "648029"
  },
  {
    "text": "fault tolerant clusters this matched",
    "start": "648029",
    "end": "650670"
  },
  {
    "text": "what we were used to in our internal",
    "start": "650670",
    "end": "652140"
  },
  {
    "text": "data centers where we made that sure",
    "start": "652140",
    "end": "653760"
  },
  {
    "text": "that M 3 DB instance",
    "start": "653760",
    "end": "655379"
  },
  {
    "text": "were evenly dispersed across racks so",
    "start": "655379",
    "end": "659579"
  },
  {
    "text": "with this deeper understanding of our",
    "start": "659579",
    "end": "660959"
  },
  {
    "text": "requirements and the confidence that",
    "start": "660959",
    "end": "662489"
  },
  {
    "text": "kubernetes would be able to support our",
    "start": "662489",
    "end": "664169"
  },
  {
    "text": "workloads without making performance or",
    "start": "664169",
    "end": "665879"
  },
  {
    "text": "safety requirements we set out building",
    "start": "665879",
    "end": "668220"
  },
  {
    "text": "and deploying a proof-of-concept",
    "start": "668220",
    "end": "669089"
  },
  {
    "text": "operator and we're really excited to",
    "start": "669089",
    "end": "671099"
  },
  {
    "text": "show the results of that experience with",
    "start": "671099",
    "end": "672599"
  },
  {
    "text": "you putting all this together we",
    "start": "672599",
    "end": "675509"
  },
  {
    "text": "leverage these features to build and",
    "start": "675509",
    "end": "677249"
  },
  {
    "text": "deploy our very own M 30 B operator you",
    "start": "677249",
    "end": "679889"
  },
  {
    "text": "can check it out right now and github",
    "start": "679889",
    "end": "682009"
  },
  {
    "text": "this operator currently handles a subset",
    "start": "682009",
    "end": "684779"
  },
  {
    "text": "of ubers production and PDB workloads on",
    "start": "684779",
    "end": "687029"
  },
  {
    "text": "GCP on gke from kubernetes perspective",
    "start": "687029",
    "end": "690509"
  },
  {
    "text": "we started with our clusters running in",
    "start": "690509",
    "end": "692129"
  },
  {
    "text": "the cloud to lower the barrier to entry",
    "start": "692129",
    "end": "693539"
  },
  {
    "text": "for kubernetes however from an MDB",
    "start": "693539",
    "end": "696299"
  },
  {
    "text": "perspective it is trickier for us to",
    "start": "696299",
    "end": "698189"
  },
  {
    "text": "manage clusters in the cloud because we",
    "start": "698189",
    "end": "699720"
  },
  {
    "text": "don't have all the original tooling that",
    "start": "699720",
    "end": "701249"
  },
  {
    "text": "we originally started with in our own",
    "start": "701249",
    "end": "702839"
  },
  {
    "text": "data centers so how do our engineering",
    "start": "702839",
    "end": "705839"
  },
  {
    "text": "efforts ultimately help our team now",
    "start": "705839",
    "end": "708869"
  },
  {
    "text": "when a node is on fire our operator is",
    "start": "708869",
    "end": "710789"
  },
  {
    "text": "notified instead of an engineer on page",
    "start": "710789",
    "end": "712349"
  },
  {
    "text": "or duty the operator communicates with",
    "start": "712349",
    "end": "714419"
  },
  {
    "text": "kubernetes as to which action it should",
    "start": "714419",
    "end": "715949"
  },
  {
    "text": "take in order for the node to become",
    "start": "715949",
    "end": "717389"
  },
  {
    "text": "healthy again in terms of managing our",
    "start": "717389",
    "end": "720059"
  },
  {
    "text": "multi region environment our plans are",
    "start": "720059",
    "end": "721919"
  },
  {
    "text": "now themed at a higher level instead of",
    "start": "721919",
    "end": "724109"
  },
  {
    "text": "having people resize clusters for the",
    "start": "724109",
    "end": "725669"
  },
  {
    "text": "week we can have one engineer simply",
    "start": "725669",
    "end": "727529"
  },
  {
    "text": "make a configuration change to adjust",
    "start": "727529",
    "end": "729449"
  },
  {
    "text": "for the appropriate amount of resources",
    "start": "729449",
    "end": "730769"
  },
  {
    "text": "we are actively continuing to lessen the",
    "start": "730769",
    "end": "733289"
  },
  {
    "text": "need for capacity planning meetings as",
    "start": "733289",
    "end": "734850"
  },
  {
    "text": "well ultimately this means that on-call",
    "start": "734850",
    "end": "737639"
  },
  {
    "text": "rotations are healthier engineers are",
    "start": "737639",
    "end": "739679"
  },
  {
    "text": "happier and the scope of our daily work",
    "start": "739679",
    "end": "741479"
  },
  {
    "text": "is less stressful our most common human",
    "start": "741479",
    "end": "745139"
  },
  {
    "text": "operation is replacing a node instance",
    "start": "745139",
    "end": "747209"
  },
  {
    "text": "of M 30 B let's see what that looks like",
    "start": "747209",
    "end": "749489"
  },
  {
    "text": "with our operator so the first",
    "start": "749489",
    "end": "751529"
  },
  {
    "text": "difference that we noticed in our",
    "start": "751529",
    "end": "752759"
  },
  {
    "text": "operations is that whereas we previously",
    "start": "752759",
    "end": "754529"
  },
  {
    "text": "uniquely identified M 30 be instances by",
    "start": "754529",
    "end": "757049"
  },
  {
    "text": "hostname now we also have to take into",
    "start": "757049",
    "end": "759179"
  },
  {
    "text": "account the storage attached while the",
    "start": "759179",
    "end": "760979"
  },
  {
    "text": "pod names stay the same when working",
    "start": "760979",
    "end": "762359"
  },
  {
    "text": "with staple sets so when a pod and it's",
    "start": "762359",
    "end": "765720"
  },
  {
    "text": "corresponding storage fails our operator",
    "start": "765720",
    "end": "767699"
  },
  {
    "text": "is notified and tells kubernetes next",
    "start": "767699",
    "end": "771689"
  },
  {
    "text": "kubernetes takes care of scheduling a",
    "start": "771689",
    "end": "773639"
  },
  {
    "text": "new pod for us with new storage attached",
    "start": "773639",
    "end": "775679"
  },
  {
    "text": "if necessary our operator uses our",
    "start": "775679",
    "end": "778589"
  },
  {
    "text": "regular tooling to publish a new desired",
    "start": "778589",
    "end": "781169"
  },
  {
    "text": "state into the cluster topology in this",
    "start": "781169",
    "end": "784049"
  },
  {
    "text": "case we would like the pod with the same",
    "start": "784049",
    "end": "785939"
  },
  {
    "text": "but new storage attached to replace the",
    "start": "785939",
    "end": "788429"
  },
  {
    "text": "pod that had failed next the m3 DB",
    "start": "788429",
    "end": "791789"
  },
  {
    "text": "instances begins streaming data to the",
    "start": "791789",
    "end": "793979"
  },
  {
    "text": "new to its new pier once the cluster is",
    "start": "793979",
    "end": "797909"
  },
  {
    "text": "healthy again",
    "start": "797909",
    "end": "798569"
  },
  {
    "text": "the m3 DB instances update the current",
    "start": "798569",
    "end": "801359"
  },
  {
    "text": "state in the topology to indicate that",
    "start": "801359",
    "end": "803220"
  },
  {
    "text": "the replace has finished putting m3 DB",
    "start": "803220",
    "end": "808169"
  },
  {
    "text": "on kubernetes taught us some really",
    "start": "808169",
    "end": "809939"
  },
  {
    "text": "interesting lessons the first it was",
    "start": "809939",
    "end": "813389"
  },
  {
    "text": "that showed us assumptions we had made",
    "start": "813389",
    "end": "814919"
  },
  {
    "text": "in building m3 DB for a human operated",
    "start": "814919",
    "end": "818039"
  },
  {
    "text": "world that didn't hold true on",
    "start": "818039",
    "end": "819569"
  },
  {
    "text": "kubernetes and we were able to make our",
    "start": "819569",
    "end": "821879"
  },
  {
    "text": "software more robust because of it we",
    "start": "821879",
    "end": "824789"
  },
  {
    "text": "were coming from a world where one host",
    "start": "824789",
    "end": "826739"
  },
  {
    "text": "ran one instance of m3 dB meaning that",
    "start": "826739",
    "end": "829919"
  },
  {
    "text": "an m3 DB instances identity and storage",
    "start": "829919",
    "end": "832379"
  },
  {
    "text": "was equivalent to the host name that it",
    "start": "832379",
    "end": "834089"
  },
  {
    "text": "ran on this isn't the case in kubernetes",
    "start": "834089",
    "end": "837029"
  },
  {
    "text": "where the pod names may stay the same",
    "start": "837029",
    "end": "838979"
  },
  {
    "text": "but the underlying storage can change",
    "start": "838979",
    "end": "841879"
  },
  {
    "text": "because kubernetes revealed this",
    "start": "841879",
    "end": "844079"
  },
  {
    "text": "assumption to us we were able to make em",
    "start": "844079",
    "end": "846149"
  },
  {
    "text": "3 DB more robust",
    "start": "846149",
    "end": "847529"
  },
  {
    "text": "by enabling an instances identity to",
    "start": "847529",
    "end": "849539"
  },
  {
    "text": "take into account more factors than just",
    "start": "849539",
    "end": "851429"
  },
  {
    "text": "hosts me as another example we",
    "start": "851429",
    "end": "855029"
  },
  {
    "text": "discovered a race condition in adding",
    "start": "855029",
    "end": "856859"
  },
  {
    "text": "hosts to clusters that we had never",
    "start": "856859",
    "end": "858629"
  },
  {
    "text": "encountered before because he humans",
    "start": "858629",
    "end": "860399"
  },
  {
    "text": "simply couldn't do the steps as fast as",
    "start": "860399",
    "end": "862139"
  },
  {
    "text": "kubernetes could in terms of a big",
    "start": "862139",
    "end": "866069"
  },
  {
    "text": "picture we were able to encapsulate our",
    "start": "866069",
    "end": "868139"
  },
  {
    "text": "domain-specific knowledge pertaining to",
    "start": "868139",
    "end": "869939"
  },
  {
    "text": "databases and metrics in our code users",
    "start": "869939",
    "end": "873269"
  },
  {
    "text": "could utilize our experience just by",
    "start": "873269",
    "end": "874949"
  },
  {
    "text": "running the operator with a single",
    "start": "874949",
    "end": "876329"
  },
  {
    "text": "command as opposed to reading about all",
    "start": "876329",
    "end": "878069"
  },
  {
    "text": "the internals of em do any be over the",
    "start": "878069",
    "end": "882659"
  },
  {
    "text": "course of building our operator we think",
    "start": "882659",
    "end": "884579"
  },
  {
    "text": "that some of the lessons we've learned",
    "start": "884579",
    "end": "885539"
  },
  {
    "text": "might be helpful to you if you're",
    "start": "885539",
    "end": "887459"
  },
  {
    "text": "considering kubernetes for your database",
    "start": "887459",
    "end": "889289"
  },
  {
    "text": "or otherwise stateful workload our first",
    "start": "889289",
    "end": "893009"
  },
  {
    "text": "piece of advice is to make sure that",
    "start": "893009",
    "end": "894389"
  },
  {
    "text": "your workload is reliable to operate",
    "start": "894389",
    "end": "896519"
  },
  {
    "text": "outside of kubernetes before thinking",
    "start": "896519",
    "end": "898349"
  },
  {
    "text": "about putting it on kubernetes we had",
    "start": "898349",
    "end": "901019"
  },
  {
    "text": "worked really hard over the years to",
    "start": "901019",
    "end": "902759"
  },
  {
    "text": "invest in tooling to make m3/d be easier",
    "start": "902759",
    "end": "905549"
  },
  {
    "text": "and more reliable to operate and we only",
    "start": "905549",
    "end": "907919"
  },
  {
    "text": "considered automating the entire",
    "start": "907919",
    "end": "909659"
  },
  {
    "text": "end-to-end lifecycle when we reached a",
    "start": "909659",
    "end": "911519"
  },
  {
    "text": "scaling challenge at the end of the day",
    "start": "911519",
    "end": "914789"
  },
  {
    "text": "I use",
    "start": "914789",
    "end": "915560"
  },
  {
    "text": "Nettie's you aren't introducing",
    "start": "915560",
    "end": "917210"
  },
  {
    "text": "complexity into your stack so",
    "start": "917210",
    "end": "918860"
  },
  {
    "text": "reliability before that is pretty",
    "start": "918860",
    "end": "920300"
  },
  {
    "text": "important our second piece of advice is",
    "start": "920300",
    "end": "924350"
  },
  {
    "text": "to attempt to model your stateful",
    "start": "924350",
    "end": "925910"
  },
  {
    "text": "workload declaratively this is a concept",
    "start": "925910",
    "end": "928700"
  },
  {
    "text": "that's really core to kubernetes and we",
    "start": "928700",
    "end": "930950"
  },
  {
    "text": "found that it works great for stateful",
    "start": "930950",
    "end": "932510"
  },
  {
    "text": "workloads as well we were already doing",
    "start": "932510",
    "end": "935000"
  },
  {
    "text": "this in with M 3 dB",
    "start": "935000",
    "end": "936529"
  },
  {
    "text": "we're in our clustered topologies were",
    "start": "936529",
    "end": "938029"
  },
  {
    "text": "modeled as desired States stored an etsy",
    "start": "938029",
    "end": "940250"
  },
  {
    "text": "D that the M 3 DB instances would work",
    "start": "940250",
    "end": "942410"
  },
  {
    "text": "to converge on this in turn made",
    "start": "942410",
    "end": "945500"
  },
  {
    "text": "building our operator easier as our",
    "start": "945500",
    "end": "947570"
  },
  {
    "text": "operator simply had to exchange a series",
    "start": "947570",
    "end": "949580"
  },
  {
    "text": "of desired states between M 3 DB and",
    "start": "949580",
    "end": "951950"
  },
  {
    "text": "kubernetes",
    "start": "951950",
    "end": "952730"
  },
  {
    "text": "and wait for those states to converge",
    "start": "952730",
    "end": "955540"
  },
  {
    "text": "additionally by storing our topology",
    "start": "955540",
    "end": "957650"
  },
  {
    "text": "external to kubernetes we avoided a hard",
    "start": "957650",
    "end": "960500"
  },
  {
    "text": "dependency on the kubernetes api in",
    "start": "960500",
    "end": "962600"
  },
  {
    "text": "order to operate our clusters this meant",
    "start": "962600",
    "end": "965120"
  },
  {
    "text": "that eaton disaster scenarios even if",
    "start": "965120",
    "end": "967250"
  },
  {
    "text": "the kubernetes api was fully down we",
    "start": "967250",
    "end": "969620"
  },
  {
    "text": "could still make cluster topology",
    "start": "969620",
    "end": "971180"
  },
  {
    "text": "changes so long as the instances",
    "start": "971180",
    "end": "972770"
  },
  {
    "text": "themselves were in terms of project",
    "start": "972770",
    "end": "976910"
  },
  {
    "text": "planning it's important to Ida rate on",
    "start": "976910",
    "end": "978620"
  },
  {
    "text": "each step on the staple interaction",
    "start": "978620",
    "end": "980420"
  },
  {
    "text": "don't try to mentally solve everything",
    "start": "980420",
    "end": "982580"
  },
  {
    "text": "at once and be mindful about what you",
    "start": "982580",
    "end": "984290"
  },
  {
    "text": "want kubernetes to handle we were more",
    "start": "984290",
    "end": "987170"
  },
  {
    "text": "focused on reactive stuff to start with",
    "start": "987170",
    "end": "988910"
  },
  {
    "text": "and ultimately those efforts less to",
    "start": "988910",
    "end": "990560"
  },
  {
    "text": "solve proactive hurdles as well it's ok",
    "start": "990560",
    "end": "993350"
  },
  {
    "text": "for some things to still be left to",
    "start": "993350",
    "end": "994610"
  },
  {
    "text": "humans kubernetes does great in helping",
    "start": "994610",
    "end": "996410"
  },
  {
    "text": "bridge gaps along the way for example in",
    "start": "996410",
    "end": "999140"
  },
  {
    "text": "our use case our focus where the",
    "start": "999140",
    "end": "1000550"
  },
  {
    "text": "operator was on handling day-to-day",
    "start": "1000550",
    "end": "1002050"
  },
  {
    "text": "operations we would definitely still",
    "start": "1002050",
    "end": "1004120"
  },
  {
    "text": "need human intervention in some edge",
    "start": "1004120",
    "end": "1005500"
  },
  {
    "text": "case scenarios such as recovery if we",
    "start": "1005500",
    "end": "1007690"
  },
  {
    "text": "somehow lost an entire region so what",
    "start": "1007690",
    "end": "1011050"
  },
  {
    "text": "are our next steps our operator runs",
    "start": "1011050",
    "end": "1013960"
  },
  {
    "text": "smoothly in the cloud we're scooping out",
    "start": "1013960",
    "end": "1016000"
  },
  {
    "text": "the work as to how we run kubernetes in",
    "start": "1016000",
    "end": "1017770"
  },
  {
    "text": "our internal data centers we'd also like",
    "start": "1017770",
    "end": "1020560"
  },
  {
    "text": "to explore auto scaling of clusters this",
    "start": "1020560",
    "end": "1022839"
  },
  {
    "text": "goes hand-in-hand with capacity planning",
    "start": "1022839",
    "end": "1024400"
  },
  {
    "text": "meetings currently it's pretty easy to",
    "start": "1024400",
    "end": "1026260"
  },
  {
    "text": "scale up but doing so automatically",
    "start": "1026260",
    "end": "1027850"
  },
  {
    "text": "would be another milestone also we don't",
    "start": "1027850",
    "end": "1031209"
  },
  {
    "text": "yet have a solution for managing",
    "start": "1031209",
    "end": "1032500"
  },
  {
    "text": "multiple MDB clusters that span multiple",
    "start": "1032500",
    "end": "1034750"
  },
  {
    "text": "communities clusters so because of this",
    "start": "1034750",
    "end": "1037089"
  },
  {
    "text": "we don't have a multi region solution",
    "start": "1037089",
    "end": "1038740"
  },
  {
    "text": "yet this isn't necessarily a blocker but",
    "start": "1038740",
    "end": "1041319"
  },
  {
    "text": "it just means that data is stuck in one",
    "start": "1041319",
    "end": "1043060"
  },
  {
    "text": "kubernetes cluster and a human has to",
    "start": "1043060",
    "end": "1044890"
  },
  {
    "text": "initiate moving it to another cluster so",
    "start": "1044890",
    "end": "1047140"
  },
  {
    "text": "it's definitely something that needs to",
    "start": "1047140",
    "end": "1048339"
  },
  {
    "text": "be explored with deeper planning our",
    "start": "1048339",
    "end": "1052120"
  },
  {
    "text": "experience putting m3d beyond kubernetes",
    "start": "1052120",
    "end": "1054700"
  },
  {
    "text": "has been really positive so far and",
    "start": "1054700",
    "end": "1056740"
  },
  {
    "text": "we're excited to continue our kubernetes",
    "start": "1056740",
    "end": "1058540"
  },
  {
    "text": "journey we're looking at incorporating",
    "start": "1058540",
    "end": "1060670"
  },
  {
    "text": "other parts of the m3 stack into our",
    "start": "1060670",
    "end": "1062920"
  },
  {
    "text": "operator such as our aggregation tier",
    "start": "1062920",
    "end": "1065110"
  },
  {
    "text": "and our query engine but we started with",
    "start": "1065110",
    "end": "1067240"
  },
  {
    "text": "m3 DB as it's the trickiest to manage",
    "start": "1067240",
    "end": "1070020"
  },
  {
    "text": "kubernetes has enabled us to take on new",
    "start": "1070020",
    "end": "1072730"
  },
  {
    "text": "use cases in up and non-standard",
    "start": "1072730",
    "end": "1074980"
  },
  {
    "text": "environments that we otherwise would",
    "start": "1074980",
    "end": "1076540"
  },
  {
    "text": "have had to say no to for example we now",
    "start": "1076540",
    "end": "1079150"
  },
  {
    "text": "have production use cases at uber where",
    "start": "1079150",
    "end": "1081460"
  },
  {
    "text": "we're shipping subsets of hardware level",
    "start": "1081460",
    "end": "1083410"
  },
  {
    "text": "data center metrics to M 3 DB clusters",
    "start": "1083410",
    "end": "1085960"
  },
  {
    "text": "running on kubernetes in the cloud this",
    "start": "1085960",
    "end": "1088780"
  },
  {
    "text": "provides us external observability into",
    "start": "1088780",
    "end": "1091030"
  },
  {
    "text": "our infrastructure in the event of data",
    "start": "1091030",
    "end": "1092770"
  },
  {
    "text": "center level failures this would",
    "start": "1092770",
    "end": "1094840"
  },
  {
    "text": "previously have been too difficult to",
    "start": "1094840",
    "end": "1096580"
  },
  {
    "text": "stand up in the cloud without kubernetes",
    "start": "1096580",
    "end": "1100410"
  },
  {
    "text": "finally none of this work would have",
    "start": "1100410",
    "end": "1102550"
  },
  {
    "text": "been possible without the hard work of",
    "start": "1102550",
    "end": "1104350"
  },
  {
    "text": "the people that were lucky enough to",
    "start": "1104350",
    "end": "1105670"
  },
  {
    "text": "call our co-workers who aren't on this",
    "start": "1105670",
    "end": "1107440"
  },
  {
    "text": "stage today and to all of you who have",
    "start": "1107440",
    "end": "1110200"
  },
  {
    "text": "made kubernetes into the amazing",
    "start": "1110200",
    "end": "1111700"
  },
  {
    "text": "community and technology that it is",
    "start": "1111700",
    "end": "1113620"
  },
  {
    "text": "today we'd like to give a special shout",
    "start": "1113620",
    "end": "1116350"
  },
  {
    "text": "out to our colleague paul juice who",
    "start": "1116350",
    "end": "1118120"
  },
  {
    "text": "spearheaded the effort to envision m34",
    "start": "1118120",
    "end": "1120520"
  },
  {
    "text": "kubernetes world we'd love to talk more",
    "start": "1120520",
    "end": "1124360"
  },
  {
    "text": "about m3 and kubernetes with you feel",
    "start": "1124360",
    "end": "1127300"
  },
  {
    "text": "free to find us online here we'll also",
    "start": "1127300",
    "end": "1129730"
  },
  {
    "text": "be around the conference and if you have",
    "start": "1129730",
    "end": "1131290"
  },
  {
    "text": "trouble finding us we'll try to stay at",
    "start": "1131290",
    "end": "1132910"
  },
  {
    "text": "the we'll try to be at the uber booth in",
    "start": "1132910",
    "end": "1134530"
  },
  {
    "text": "between all the great talks were excited",
    "start": "1134530",
    "end": "1136120"
  },
  {
    "text": "to see you today thank you so much thank",
    "start": "1136120",
    "end": "1138790"
  },
  {
    "text": "you",
    "start": "1138790",
    "end": "1139030"
  },
  {
    "text": "[Applause]",
    "start": "1139030",
    "end": "1139710"
  },
  {
    "text": "[Music]",
    "start": "1139710",
    "end": "1142998"
  }
]