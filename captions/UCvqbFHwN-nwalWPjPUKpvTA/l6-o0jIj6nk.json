[
  {
    "start": "0",
    "end": "18000"
  },
  {
    "text": "okay let's start yeah so today I'm going",
    "start": "560",
    "end": "6690"
  },
  {
    "text": "to talk to you about two of the key",
    "start": "6690",
    "end": "8519"
  },
  {
    "text": "aspects that have been popular or at",
    "start": "8519",
    "end": "11040"
  },
  {
    "text": "least have been vital to me research in",
    "start": "11040",
    "end": "13469"
  },
  {
    "text": "popularity of service computing as it is",
    "start": "13469",
    "end": "16170"
  },
  {
    "text": "right now and like the first one of",
    "start": "16170",
    "end": "19170"
  },
  {
    "start": "18000",
    "end": "76000"
  },
  {
    "text": "these compacts is the performance model",
    "start": "19170",
    "end": "21720"
  },
  {
    "text": "so as you might know like with service",
    "start": "21720",
    "end": "25380"
  },
  {
    "text": "applications the idea is that the cloud",
    "start": "25380",
    "end": "27210"
  },
  {
    "text": "provider manages basically everything",
    "start": "27210",
    "end": "29070"
  },
  {
    "text": "for you so what it especially does is",
    "start": "29070",
    "end": "32880"
  },
  {
    "text": "doing do the out scaling for you and you",
    "start": "32880",
    "end": "35520"
  },
  {
    "text": "can rely as a user you can lie on there",
    "start": "35520",
    "end": "38100"
  },
  {
    "text": "almost infinite amount of resources not",
    "start": "38100",
    "end": "40980"
  },
  {
    "text": "only that not only that you can also",
    "start": "40980",
    "end": "42590"
  },
  {
    "text": "rely on your service being recently",
    "start": "42590",
    "end": "46340"
  },
  {
    "text": "highly reasonably available just like",
    "start": "46340",
    "end": "50010"
  },
  {
    "text": "any basically can rely on it to be",
    "start": "50010",
    "end": "51719"
  },
  {
    "text": "available just like any other service of",
    "start": "51719",
    "end": "54710"
  },
  {
    "text": "any other cloud service and nowadays we",
    "start": "54710",
    "end": "59670"
  },
  {
    "text": "all see more and more that people are",
    "start": "59670",
    "end": "60989"
  },
  {
    "text": "expecting low latency from the service",
    "start": "60989",
    "end": "63149"
  },
  {
    "text": "applications to the point that you can",
    "start": "63149",
    "end": "65010"
  },
  {
    "text": "already see that there are you can",
    "start": "65010",
    "end": "67470"
  },
  {
    "text": "already read some blogs where people are",
    "start": "67470",
    "end": "69150"
  },
  {
    "text": "trying out service applications to as",
    "start": "69150",
    "end": "71820"
  },
  {
    "text": "back-end to their web applications or",
    "start": "71820",
    "end": "73409"
  },
  {
    "text": "other user facing tasks and the other",
    "start": "73409",
    "end": "76670"
  },
  {
    "start": "76000",
    "end": "108000"
  },
  {
    "text": "aspect is still is the cost model so you",
    "start": "76670",
    "end": "79310"
  },
  {
    "text": "may be the most popular thing about",
    "start": "79310",
    "end": "81390"
  },
  {
    "text": "service service computing right now is",
    "start": "81390",
    "end": "83759"
  },
  {
    "text": "that the like you only pay for what you",
    "start": "83759",
    "end": "86100"
  },
  {
    "text": "actually use you don't pay for idle",
    "start": "86100",
    "end": "87630"
  },
  {
    "text": "resources or reserve resources not only",
    "start": "87630",
    "end": "91290"
  },
  {
    "text": "that you don't pay for any upfront costs",
    "start": "91290",
    "end": "93240"
  },
  {
    "text": "or any recurring operational costs",
    "start": "93240",
    "end": "95450"
  },
  {
    "text": "periodically and even if you do use and",
    "start": "95450",
    "end": "98790"
  },
  {
    "text": "pay for your functions you paid at a",
    "start": "98790",
    "end": "101100"
  },
  {
    "text": "very granular level so you paid by the",
    "start": "101100",
    "end": "102780"
  },
  {
    "text": "millisecond instead of by the hour or",
    "start": "102780",
    "end": "104640"
  },
  {
    "text": "day",
    "start": "104640",
    "end": "106100"
  },
  {
    "text": "traditional cloud models and this might",
    "start": "106100",
    "end": "109770"
  },
  {
    "text": "seem a bit might seem a bit",
    "start": "109770",
    "end": "112250"
  },
  {
    "text": "counterintuitive maybe even conflicting",
    "start": "112250",
    "end": "114570"
  },
  {
    "text": "because you don't really think of a high",
    "start": "114570",
    "end": "116670"
  },
  {
    "text": "performance application of also being a",
    "start": "116670",
    "end": "118560"
  },
  {
    "text": "cost-effective one and service computing",
    "start": "118560",
    "end": "121740"
  },
  {
    "text": "not very it doesn't",
    "start": "121740",
    "end": "123240"
  },
  {
    "text": "either give you something if you",
    "start": "123240",
    "end": "125430"
  },
  {
    "text": "magically tons of resources for free but",
    "start": "125430",
    "end": "128910"
  },
  {
    "text": "what it does do is it tries to maximize",
    "start": "128910",
    "end": "131039"
  },
  {
    "text": "the performance it can get out of a",
    "start": "131039",
    "end": "132420"
  },
  {
    "text": "small amount of we",
    "start": "132420",
    "end": "133650"
  },
  {
    "text": "or a fixed amount of costs and in this",
    "start": "133650",
    "end": "137099"
  },
  {
    "text": "talk I'm going to show you basically",
    "start": "137099",
    "end": "138239"
  },
  {
    "text": "what techniques I use in their platforms",
    "start": "138239",
    "end": "140909"
  },
  {
    "text": "to to optimize this this trade-off",
    "start": "140909",
    "end": "145590"
  },
  {
    "text": "between performance and cost but first",
    "start": "145590",
    "end": "149849"
  },
  {
    "text": "before actually dive into these",
    "start": "149849",
    "end": "151109"
  },
  {
    "text": "optimizations I would like to give you a",
    "start": "151109",
    "end": "153359"
  },
  {
    "text": "short introduction of what a function is",
    "start": "153359",
    "end": "155640"
  },
  {
    "text": "a service platform actually looks like",
    "start": "155640",
    "end": "157140"
  },
  {
    "text": "so that's two limits to this talk I'm",
    "start": "157140",
    "end": "160470"
  },
  {
    "text": "not going to talk to anything about",
    "start": "160470",
    "end": "161670"
  },
  {
    "text": "other than function of service in within",
    "start": "161670",
    "end": "163950"
  },
  {
    "text": "service computing so not about service",
    "start": "163950",
    "end": "165810"
  },
  {
    "text": "containers and I'm only going to focus",
    "start": "165810",
    "end": "167730"
  },
  {
    "text": "on the runtime of a function of service",
    "start": "167730",
    "end": "169560"
  },
  {
    "text": "platform so I'm gonna focus on the",
    "start": "169560",
    "end": "171930"
  },
  {
    "text": "developer workflow or how you create or",
    "start": "171930",
    "end": "175530"
  },
  {
    "text": "monitor your functions so to start off",
    "start": "175530",
    "end": "178470"
  },
  {
    "text": "with the data basically the data model",
    "start": "178470",
    "end": "180209"
  },
  {
    "text": "of a function service platform you guys",
    "start": "180209",
    "end": "183900"
  },
  {
    "text": "gave two conceptual stores of data so in",
    "start": "183900",
    "end": "186299"
  },
  {
    "text": "one hand you have the function metadata",
    "start": "186299",
    "end": "187859"
  },
  {
    "text": "store where you store all the all the",
    "start": "187859",
    "end": "190439"
  },
  {
    "text": "the versioning and configuration related",
    "start": "190439",
    "end": "193170"
  },
  {
    "text": "to your function and the reason why this",
    "start": "193170",
    "end": "196829"
  },
  {
    "text": "is this is there is because of the med",
    "start": "196829",
    "end": "199949"
  },
  {
    "text": "date there's a pretty small amount of",
    "start": "199949",
    "end": "201510"
  },
  {
    "text": "data and a small amount of data and it's",
    "start": "201510",
    "end": "206790"
  },
  {
    "text": "free its exit frequently and expected to",
    "start": "206790",
    "end": "208919"
  },
  {
    "text": "be low latency because the juice for",
    "start": "208919",
    "end": "210750"
  },
  {
    "text": "lookups queries and so on the other",
    "start": "210750",
    "end": "213659"
  },
  {
    "text": "energy of the function store where you",
    "start": "213659",
    "end": "215310"
  },
  {
    "text": "actually store the actual functions that",
    "start": "215310",
    "end": "217109"
  },
  {
    "text": "you you're using so for example we can",
    "start": "217109",
    "end": "219150"
  },
  {
    "text": "have small Python functions but this can",
    "start": "219150",
    "end": "221250"
  },
  {
    "text": "also quickly go very large for your",
    "start": "221250",
    "end": "223919"
  },
  {
    "text": "functions are many dependencies and many",
    "start": "223919",
    "end": "225840"
  },
  {
    "text": "static assets so then you can then you",
    "start": "225840",
    "end": "228840"
  },
  {
    "text": "can imagine that your functions start",
    "start": "228840",
    "end": "230129"
  },
  {
    "text": "become almost no tens or hundreds of",
    "start": "230129",
    "end": "234870"
  },
  {
    "text": "mb/s and how we actually can execute",
    "start": "234870",
    "end": "237930"
  },
  {
    "start": "236000",
    "end": "394000"
  },
  {
    "text": "these functions is basically using a cup",
    "start": "237930",
    "end": "239970"
  },
  {
    "text": "of components which comprise the runtime",
    "start": "239970",
    "end": "242190"
  },
  {
    "text": "so here you can see we have a router",
    "start": "242190",
    "end": "245250"
  },
  {
    "text": "which whiskey is a responsible hand for",
    "start": "245250",
    "end": "247739"
  },
  {
    "text": "getting in the requests for function",
    "start": "247739",
    "end": "250169"
  },
  {
    "text": "executions with a deployer which is",
    "start": "250169",
    "end": "253260"
  },
  {
    "text": "responsible for actually deciding how a",
    "start": "253260",
    "end": "255239"
  },
  {
    "text": "function will be executed",
    "start": "255239",
    "end": "257639"
  },
  {
    "text": "I'm basically for most platforms you",
    "start": "257639",
    "end": "260870"
  },
  {
    "text": "this barrier actually ends up the actual",
    "start": "260870",
    "end": "263340"
  },
  {
    "text": "deployment of the resource to a resource",
    "start": "263340",
    "end": "265200"
  },
  {
    "text": "manager and since we're here at",
    "start": "265200",
    "end": "267490"
  },
  {
    "text": "this of course is given at ease and what",
    "start": "267490",
    "end": "271630"
  },
  {
    "text": "the resource what in the end what they",
    "start": "271630",
    "end": "273280"
  },
  {
    "text": "are is a function instance so in the",
    "start": "273280",
    "end": "276550"
  },
  {
    "text": "function this is basically a worker",
    "start": "276550",
    "end": "277660"
  },
  {
    "text": "which can accept requests and execute a",
    "start": "277660",
    "end": "280930"
  },
  {
    "text": "function and respond to give you a bit",
    "start": "280930",
    "end": "283840"
  },
  {
    "text": "concrete example I'm working on a",
    "start": "283840",
    "end": "285569"
  },
  {
    "text": "platform cultivation and if you strip",
    "start": "285569",
    "end": "289210"
  },
  {
    "text": "out only more complex components and",
    "start": "289210",
    "end": "291520"
  },
  {
    "text": "optimizations you see the same model in",
    "start": "291520",
    "end": "293949"
  },
  {
    "text": "our platform because we have a router we",
    "start": "293949",
    "end": "296590"
  },
  {
    "text": "have a thing called the executor which",
    "start": "296590",
    "end": "298270"
  },
  {
    "text": "is similar to a deployer we use custom",
    "start": "298270",
    "end": "301360"
  },
  {
    "text": "research definitions as our function",
    "start": "301360",
    "end": "304300"
  },
  {
    "text": "method data store and we have a small",
    "start": "304300",
    "end": "307240"
  },
  {
    "text": "function store by default and also this",
    "start": "307240",
    "end": "312699"
  },
  {
    "text": "model gives Maya media opportunities",
    "start": "312699",
    "end": "314050"
  },
  {
    "text": "also to address the elephant in the room",
    "start": "314050",
    "end": "315460"
  },
  {
    "text": "which is the cold start and the cold",
    "start": "315460",
    "end": "318340"
  },
  {
    "text": "start basically the worst case behavior",
    "start": "318340",
    "end": "321759"
  },
  {
    "text": "of your functions so basically you have",
    "start": "321759",
    "end": "325599"
  },
  {
    "text": "no caching involved or no shortcut so",
    "start": "325599",
    "end": "328449"
  },
  {
    "text": "you can take for executing your function",
    "start": "328449",
    "end": "330099"
  },
  {
    "text": "so how this looks like is to give you",
    "start": "330099",
    "end": "332530"
  },
  {
    "text": "some basically basically a bit of a",
    "start": "332530",
    "end": "333729"
  },
  {
    "text": "facial example a request comes into the",
    "start": "333729",
    "end": "335530"
  },
  {
    "text": "router the relative checks and has no",
    "start": "335530",
    "end": "337300"
  },
  {
    "text": "function instance available so it will",
    "start": "337300",
    "end": "339370"
  },
  {
    "text": "query the deployer to actually deploy a",
    "start": "339370",
    "end": "341560"
  },
  {
    "text": "function the deployer will fetch the",
    "start": "341560",
    "end": "344110"
  },
  {
    "text": "data from the function method datastore",
    "start": "344110",
    "end": "346560"
  },
  {
    "text": "to decide how to actually deploy this",
    "start": "346560",
    "end": "349210"
  },
  {
    "text": "function well this decision is then",
    "start": "349210",
    "end": "351159"
  },
  {
    "text": "handed off to communities and community",
    "start": "351159",
    "end": "354520"
  },
  {
    "text": "does the actual deployment of the",
    "start": "354520",
    "end": "356169"
  },
  {
    "text": "function instance and only after all",
    "start": "356169",
    "end": "358870"
  },
  {
    "text": "that then you can actually forward the",
    "start": "358870",
    "end": "361000"
  },
  {
    "text": "request from the router to the function",
    "start": "361000",
    "end": "363460"
  },
  {
    "text": "instance the function instance can",
    "start": "363460",
    "end": "365110"
  },
  {
    "text": "execute a request and respond and the",
    "start": "365110",
    "end": "367750"
  },
  {
    "text": "router can port this back to whoever is",
    "start": "367750",
    "end": "369880"
  },
  {
    "text": "waiting for us and now contrast this",
    "start": "369880",
    "end": "372430"
  },
  {
    "text": "with the of the the best case I don't",
    "start": "372430",
    "end": "376000"
  },
  {
    "text": "forget Sri has another name but I'm just",
    "start": "376000",
    "end": "377919"
  },
  {
    "text": "gonna call it a worm execution and here",
    "start": "377919",
    "end": "380650"
  },
  {
    "text": "of course the the function instance is",
    "start": "380650",
    "end": "382900"
  },
  {
    "text": "already available so that's really a do",
    "start": "382900",
    "end": "384789"
  },
  {
    "text": "because then you can simply forward the",
    "start": "384789",
    "end": "386469"
  },
  {
    "text": "request immediately to the function",
    "start": "386469",
    "end": "388419"
  },
  {
    "text": "instance and get back to response to the",
    "start": "388419",
    "end": "391930"
  },
  {
    "text": "user or service that's waiting so maybe",
    "start": "391930",
    "end": "395560"
  },
  {
    "start": "394000",
    "end": "452000"
  },
  {
    "text": "it is better to actually look from a",
    "start": "395560",
    "end": "396880"
  },
  {
    "text": "performance perspective what actually",
    "start": "396880",
    "end": "399219"
  },
  {
    "text": "involves between these two",
    "start": "399219",
    "end": "401169"
  },
  {
    "text": "cases so I thought we have a couple of",
    "start": "401169",
    "end": "404710"
  },
  {
    "text": "for the course code start with a couple",
    "start": "404710",
    "end": "406479"
  },
  {
    "text": "of service requests then we actually",
    "start": "406479",
    "end": "410530"
  },
  {
    "text": "have to fetch the function metadata from",
    "start": "410530",
    "end": "412449"
  },
  {
    "text": "the store so sed I'm not quite sure but",
    "start": "412449",
    "end": "414759"
  },
  {
    "text": "I think it's about tens of milliseconds",
    "start": "414759",
    "end": "416409"
  },
  {
    "text": "in the best case that it's a deployer",
    "start": "416409",
    "end": "419710"
  },
  {
    "text": "your if to wait for convince' to deploy",
    "start": "419710",
    "end": "421689"
  },
  {
    "text": "your resources which as we know we count",
    "start": "421689",
    "end": "426039"
  },
  {
    "text": "in nine seconds and then we actually",
    "start": "426039",
    "end": "429430"
  },
  {
    "text": "transfer the function to the Doudna",
    "start": "429430",
    "end": "431889"
  },
  {
    "text": "relative resources which can if your",
    "start": "431889",
    "end": "434379"
  },
  {
    "text": "function is larger you can take also a",
    "start": "434379",
    "end": "437169"
  },
  {
    "text": "couple of seconds and then we still",
    "start": "437169",
    "end": "439960"
  },
  {
    "text": "deployed function also takes some time",
    "start": "439960",
    "end": "441340"
  },
  {
    "text": "and only after that we can actually",
    "start": "441340",
    "end": "443259"
  },
  {
    "text": "afford to request an executed function",
    "start": "443259",
    "end": "445800"
  },
  {
    "text": "warm execution you only have to do lot",
    "start": "445800",
    "end": "448060"
  },
  {
    "text": "of steps you just forward to request an",
    "start": "448060",
    "end": "450039"
  },
  {
    "text": "executed function and it's not just our",
    "start": "450039",
    "end": "453940"
  },
  {
    "start": "452000",
    "end": "506000"
  },
  {
    "text": "communities based model this is true for",
    "start": "453940",
    "end": "456159"
  },
  {
    "text": "any platform so this is recent research",
    "start": "456159",
    "end": "458430"
  },
  {
    "text": "published last summer where they were",
    "start": "458430",
    "end": "463000"
  },
  {
    "text": "they were they were three where they",
    "start": "463000",
    "end": "469620"
  },
  {
    "text": "evaluated the costars of the big free",
    "start": "469620",
    "end": "471909"
  },
  {
    "text": "cloud providers and even there you see",
    "start": "471909",
    "end": "474460"
  },
  {
    "text": "that even in the best case and for the",
    "start": "474460",
    "end": "475840"
  },
  {
    "text": "most production-ready surf platform",
    "start": "475840",
    "end": "477940"
  },
  {
    "text": "which you can say it's AWS they're still",
    "start": "477940",
    "end": "481360"
  },
  {
    "text": "two hundred millisecond cold start leh",
    "start": "481360",
    "end": "484539"
  },
  {
    "text": "and that's pretty significant especially",
    "start": "484539",
    "end": "486159"
  },
  {
    "text": "for where you're performing sensitive",
    "start": "486159",
    "end": "488830"
  },
  {
    "text": "applications where you're cold you're",
    "start": "488830",
    "end": "491740"
  },
  {
    "text": "cold start is 200 milliseconds at your",
    "start": "491740",
    "end": "493659"
  },
  {
    "text": "warm start there's a couple of",
    "start": "493659",
    "end": "494589"
  },
  {
    "text": "milliseconds of overhead and but still",
    "start": "494589",
    "end": "497560"
  },
  {
    "text": "this is very impressive because this",
    "start": "497560",
    "end": "499419"
  },
  {
    "text": "it's very hard to actually get to this",
    "start": "499419",
    "end": "501460"
  },
  {
    "text": "kind of performance with a large-scale",
    "start": "501460",
    "end": "503940"
  },
  {
    "text": "service platform and so as I mentioned",
    "start": "503940",
    "end": "508449"
  },
  {
    "start": "506000",
    "end": "528000"
  },
  {
    "text": "before in the rest of the talk I'm going",
    "start": "508449",
    "end": "509830"
  },
  {
    "text": "to show you some of the techniques that",
    "start": "509830",
    "end": "511060"
  },
  {
    "text": "are actually used to improve the",
    "start": "511060",
    "end": "513159"
  },
  {
    "text": "performance and also basically at what",
    "start": "513159",
    "end": "515440"
  },
  {
    "text": "cost because it's easy to do simply",
    "start": "515440",
    "end": "518289"
  },
  {
    "text": "throw more research at your problem and",
    "start": "518289",
    "end": "520300"
  },
  {
    "text": "get it faster but it's more challenging",
    "start": "520300",
    "end": "521800"
  },
  {
    "text": "to actually think about how much before",
    "start": "521800",
    "end": "524018"
  },
  {
    "text": "ok you get more performance for the same",
    "start": "524019",
    "end": "525459"
  },
  {
    "text": "amount of cost so the first the first",
    "start": "525459",
    "end": "530770"
  },
  {
    "start": "528000",
    "end": "537000"
  },
  {
    "text": "optimization is what we call a function",
    "start": "530770",
    "end": "532779"
  },
  {
    "text": "resource reusing and idea is basically",
    "start": "532779",
    "end": "534910"
  },
  {
    "text": "to reduce",
    "start": "534910",
    "end": "535540"
  },
  {
    "text": "of course starts you do and the idea",
    "start": "535540",
    "end": "538990"
  },
  {
    "text": "behind this is a bit of a bit of a",
    "start": "538990",
    "end": "540970"
  },
  {
    "text": "theoretical one because the most",
    "start": "540970",
    "end": "543640"
  },
  {
    "text": "extremist theoretical point of view you",
    "start": "543640",
    "end": "547000"
  },
  {
    "text": "don't want your function executions to",
    "start": "547000",
    "end": "548650"
  },
  {
    "text": "be able to influence the influence each",
    "start": "548650",
    "end": "550750"
  },
  {
    "text": "other at all sorry I do invest in the",
    "start": "550750",
    "end": "553630"
  },
  {
    "text": "most extreme case you want to have a",
    "start": "553630",
    "end": "555370"
  },
  {
    "text": "function instance per function execution",
    "start": "555370",
    "end": "558180"
  },
  {
    "text": "so it also means that every function",
    "start": "558180",
    "end": "560740"
  },
  {
    "text": "execution will have a cold start and of",
    "start": "560740",
    "end": "563140"
  },
  {
    "text": "course you can try to avoid this by",
    "start": "563140",
    "end": "564850"
  },
  {
    "text": "trying to share function instances",
    "start": "564850",
    "end": "567130"
  },
  {
    "text": "between function executions to be able",
    "start": "567130",
    "end": "570040"
  },
  {
    "text": "to share these resources between the two",
    "start": "570040",
    "end": "574290"
  },
  {
    "text": "and that's not to say that that is the",
    "start": "574290",
    "end": "576460"
  },
  {
    "text": "the the last one left the most example",
    "start": "576460",
    "end": "579340"
  },
  {
    "text": "is extra it's always a bit silly because",
    "start": "579340",
    "end": "582790"
  },
  {
    "text": "there are many there many reasons why",
    "start": "582790",
    "end": "584050"
  },
  {
    "text": "you actually want to have this before",
    "start": "584050",
    "end": "585310"
  },
  {
    "text": "this forms isolation before for example",
    "start": "585310",
    "end": "587320"
  },
  {
    "text": "if you have very security sensitive",
    "start": "587320",
    "end": "589540"
  },
  {
    "text": "functions where you don't want",
    "start": "589540",
    "end": "591910"
  },
  {
    "text": "executions to influence each other or if",
    "start": "591910",
    "end": "594520"
  },
  {
    "text": "it's eavesdrop on each other but in",
    "start": "594520",
    "end": "596890"
  },
  {
    "text": "practice we see that all functions serve",
    "start": "596890",
    "end": "598480"
  },
  {
    "text": "platforms actually use some form of",
    "start": "598480",
    "end": "600850"
  },
  {
    "text": "research reusing so for example or your",
    "start": "600850",
    "end": "604810"
  },
  {
    "text": "function where you start functions on",
    "start": "604810",
    "end": "606400"
  },
  {
    "text": "AWS these are typically groups on the",
    "start": "606400",
    "end": "611230"
  },
  {
    "text": "same machine so you your your function",
    "start": "611230",
    "end": "614470"
  },
  {
    "text": "already reusing the same hardware",
    "start": "614470",
    "end": "616420"
  },
  {
    "text": "resources still these functions are not",
    "start": "616420",
    "end": "619450"
  },
  {
    "text": "shared themselves because they are still",
    "start": "619450",
    "end": "621660"
  },
  {
    "text": "virtualized or containment containerized",
    "start": "621660",
    "end": "623920"
  },
  {
    "text": "basically pretty well isolated from each",
    "start": "623920",
    "end": "625660"
  },
  {
    "text": "other but the function executions these",
    "start": "625660",
    "end": "629530"
  },
  {
    "text": "are actually sharing the same function",
    "start": "629530",
    "end": "631180"
  },
  {
    "text": "instances so it's certainly using",
    "start": "631180",
    "end": "635740"
  },
  {
    "text": "certainly used in practice just to",
    "start": "635740",
    "end": "638920"
  },
  {
    "text": "update our model bits we can reflect",
    "start": "638920",
    "end": "640960"
  },
  {
    "text": "this optimization by adding a cache to",
    "start": "640960",
    "end": "643210"
  },
  {
    "text": "the router so whenever a request comes",
    "start": "643210",
    "end": "645340"
  },
  {
    "text": "in to the router now we first check the",
    "start": "645340",
    "end": "647110"
  },
  {
    "text": "cache if there's an active function",
    "start": "647110",
    "end": "648460"
  },
  {
    "text": "instance and if so we forward it to the",
    "start": "648460",
    "end": "651010"
  },
  {
    "text": "function instance if not we have to go",
    "start": "651010",
    "end": "652540"
  },
  {
    "text": "through the entire cold start but of",
    "start": "652540",
    "end": "657160"
  },
  {
    "start": "656000",
    "end": "694000"
  },
  {
    "text": "course it's also involves a trade-off",
    "start": "657160",
    "end": "658180"
  },
  {
    "text": "because how long do you keep your",
    "start": "658180",
    "end": "659470"
  },
  {
    "text": "function is this is alive you can keep",
    "start": "659470",
    "end": "661690"
  },
  {
    "text": "them alive for a very long time ensuring",
    "start": "661690",
    "end": "664120"
  },
  {
    "text": "that you that any subsequent execution",
    "start": "664120",
    "end": "667390"
  },
  {
    "text": "will",
    "start": "667390",
    "end": "668200"
  },
  {
    "text": "be able to reuse these function",
    "start": "668200",
    "end": "670240"
  },
  {
    "text": "instances however of course it's not",
    "start": "670240",
    "end": "674140"
  },
  {
    "text": "that doesn't mean it you guarantee that",
    "start": "674140",
    "end": "675760"
  },
  {
    "text": "actually will be useful so it might be",
    "start": "675760",
    "end": "677170"
  },
  {
    "text": "that you're just keeping around idle",
    "start": "677170",
    "end": "678580"
  },
  {
    "text": "resources for a long time so the",
    "start": "678580",
    "end": "681280"
  },
  {
    "text": "opposite of course is done to keep it's",
    "start": "681280",
    "end": "682870"
  },
  {
    "text": "very keeps life very shortly reducing",
    "start": "682870",
    "end": "685690"
  },
  {
    "text": "your your cost of idle resources but",
    "start": "685690",
    "end": "688420"
  },
  {
    "text": "less functions will be able to reuse",
    "start": "688420",
    "end": "691180"
  },
  {
    "text": "existing function instances so and not",
    "start": "691180",
    "end": "696160"
  },
  {
    "start": "694000",
    "end": "707000"
  },
  {
    "text": "only can you share these resources",
    "start": "696160",
    "end": "697810"
  },
  {
    "text": "between and after your function your",
    "start": "697810",
    "end": "700540"
  },
  {
    "text": "function instances are running you can",
    "start": "700540",
    "end": "702790"
  },
  {
    "text": "also try to share them before the",
    "start": "702790",
    "end": "704380"
  },
  {
    "text": "deployment or during the deployment and",
    "start": "704380",
    "end": "707140"
  },
  {
    "start": "707000",
    "end": "753000"
  },
  {
    "text": "I basically the insight here is",
    "start": "707140",
    "end": "709090"
  },
  {
    "text": "basically as your function instance as a",
    "start": "709090",
    "end": "711160"
  },
  {
    "text": "as a component exist out of two parts",
    "start": "711160",
    "end": "713140"
  },
  {
    "text": "one part is the function specific code",
    "start": "713140",
    "end": "715270"
  },
  {
    "text": "which basically codes the here as a user",
    "start": "715270",
    "end": "717510"
  },
  {
    "text": "provide basically it's all your business",
    "start": "717510",
    "end": "720700"
  },
  {
    "text": "logic and the other part is the runtime",
    "start": "720700",
    "end": "724120"
  },
  {
    "text": "they basically all the operation logic",
    "start": "724120",
    "end": "725770"
  },
  {
    "text": "that's necessary to actually make this",
    "start": "725770",
    "end": "727900"
  },
  {
    "text": "function instance executable monitor Bo",
    "start": "727900",
    "end": "730120"
  },
  {
    "text": "and so forth and with this insight you",
    "start": "730120",
    "end": "733240"
  },
  {
    "text": "can actually divide the deployment",
    "start": "733240",
    "end": "735160"
  },
  {
    "text": "process into two stages so you can defy",
    "start": "735160",
    "end": "736630"
  },
  {
    "text": "it you can first deploy the runtime",
    "start": "736630",
    "end": "738310"
  },
  {
    "text": "creating a generic runtime and only then",
    "start": "738310",
    "end": "741100"
  },
  {
    "text": "the second part of the process you",
    "start": "741100",
    "end": "742630"
  },
  {
    "text": "actually you deployed the function on",
    "start": "742630",
    "end": "748330"
  },
  {
    "text": "this front this generic function runtime",
    "start": "748330",
    "end": "750010"
  },
  {
    "text": "creating the actual function instance",
    "start": "750010",
    "end": "753330"
  },
  {
    "start": "753000",
    "end": "800000"
  },
  {
    "text": "and that allows you to do something",
    "start": "753330",
    "end": "755950"
  },
  {
    "text": "that's maybe with maybe that's that's",
    "start": "755950",
    "end": "758050"
  },
  {
    "text": "very common in many domains which called",
    "start": "758050",
    "end": "760090"
  },
  {
    "text": "research pooling so you might for",
    "start": "760090",
    "end": "761350"
  },
  {
    "text": "example know in multi-threaded",
    "start": "761350",
    "end": "763570"
  },
  {
    "text": "applications you have these triples",
    "start": "763570",
    "end": "765340"
  },
  {
    "text": "where you which you use to try to avoid",
    "start": "765340",
    "end": "767260"
  },
  {
    "text": "this this cost the operation of creating",
    "start": "767260",
    "end": "769510"
  },
  {
    "text": "and deleting threads and surface this",
    "start": "769510",
    "end": "772930"
  },
  {
    "text": "works very similar so what you can do is",
    "start": "772930",
    "end": "775360"
  },
  {
    "text": "keep a pool of so for example free",
    "start": "775360",
    "end": "778140"
  },
  {
    "text": "function runtimes and when we need to",
    "start": "778140",
    "end": "782020"
  },
  {
    "text": "find two functions you will take to",
    "start": "782020",
    "end": "784930"
  },
  {
    "text": "generate runtimes and only do the last",
    "start": "784930",
    "end": "787000"
  },
  {
    "text": "step of this deployment process to",
    "start": "787000",
    "end": "789520"
  },
  {
    "text": "actually create these function instances",
    "start": "789520",
    "end": "791370"
  },
  {
    "text": "and only does that and only after that",
    "start": "791370",
    "end": "794380"
  },
  {
    "text": "you can start to start to rebalance your",
    "start": "794380",
    "end": "797290"
  },
  {
    "text": "pool asynchronously and the Caliph",
    "start": "797290",
    "end": "801680"
  },
  {
    "start": "800000",
    "end": "819000"
  },
  {
    "text": "course again extend the model wastage",
    "start": "801680",
    "end": "803270"
  },
  {
    "text": "with this optimization by reflecting",
    "start": "803270",
    "end": "806330"
  },
  {
    "text": "this distinction between the runtime any",
    "start": "806330",
    "end": "808730"
  },
  {
    "text": "function instance and we have a",
    "start": "808730",
    "end": "810200"
  },
  {
    "text": "additional component which calls which",
    "start": "810200",
    "end": "812210"
  },
  {
    "text": "we called the research pool which is",
    "start": "812210",
    "end": "813320"
  },
  {
    "text": "responsible for keeping or maintaining",
    "start": "813320",
    "end": "815990"
  },
  {
    "text": "this pool of generic runtimes and also",
    "start": "815990",
    "end": "821060"
  },
  {
    "start": "819000",
    "end": "882000"
  },
  {
    "text": "this has a trade-off of course because",
    "start": "821060",
    "end": "822649"
  },
  {
    "text": "how big do we keep this pool we can go",
    "start": "822649",
    "end": "824660"
  },
  {
    "text": "for a very large pool basically meaning",
    "start": "824660",
    "end": "826760"
  },
  {
    "text": "that we whenever regardless of how many",
    "start": "826760",
    "end": "830170"
  },
  {
    "text": "workloads we get we always have enough",
    "start": "830170",
    "end": "834370"
  },
  {
    "text": "generic runtimes in this pool to",
    "start": "834370",
    "end": "836420"
  },
  {
    "text": "actually give to these functions to be",
    "start": "836420",
    "end": "837740"
  },
  {
    "text": "deployed increasing their speed but of",
    "start": "837740",
    "end": "842690"
  },
  {
    "text": "course especially if you're not actually",
    "start": "842690",
    "end": "844490"
  },
  {
    "text": "leaving so many if your your workload is",
    "start": "844490",
    "end": "846740"
  },
  {
    "text": "not that high then you you still",
    "start": "846740",
    "end": "849110"
  },
  {
    "text": "incurring all these constant cost of",
    "start": "849110",
    "end": "850850"
  },
  {
    "text": "having from having to maintain this pool",
    "start": "850850",
    "end": "853370"
  },
  {
    "text": "at all times so the opposite of pay at",
    "start": "853370",
    "end": "857120"
  },
  {
    "text": "opposite approach would be to actually",
    "start": "857120",
    "end": "859750"
  },
  {
    "text": "okay the smaller pool even no pool where",
    "start": "859750",
    "end": "862550"
  },
  {
    "text": "you ensure you have very few resources",
    "start": "862550",
    "end": "864430"
  },
  {
    "text": "used but the problem of course here is",
    "start": "864430",
    "end": "867470"
  },
  {
    "text": "if you even if you if you have a very",
    "start": "867470",
    "end": "869450"
  },
  {
    "text": "small spike in your workload but already",
    "start": "869450",
    "end": "871430"
  },
  {
    "text": "you exhaust your pool and all the",
    "start": "871430",
    "end": "873200"
  },
  {
    "text": "subsequent function functions will",
    "start": "873200",
    "end": "874940"
  },
  {
    "text": "require the entire cold start process",
    "start": "874940",
    "end": "877220"
  },
  {
    "text": "where you have to also deploy the",
    "start": "877220",
    "end": "878900"
  },
  {
    "text": "function runtime so not only can be",
    "start": "878900",
    "end": "884150"
  },
  {
    "start": "882000",
    "end": "953000"
  },
  {
    "text": "prepared is this runtime part of the",
    "start": "884150",
    "end": "886070"
  },
  {
    "text": "deployment process ahead of time you can",
    "start": "886070",
    "end": "887900"
  },
  {
    "text": "also start to prepare more of the",
    "start": "887900",
    "end": "889279"
  },
  {
    "text": "function part of the deployment process",
    "start": "889279",
    "end": "891410"
  },
  {
    "text": "and we do this we can do this with a a",
    "start": "891410",
    "end": "894190"
  },
  {
    "text": "optimization called prefetching and the",
    "start": "894190",
    "end": "896930"
  },
  {
    "text": "idea of this prefetching optimization is",
    "start": "896930",
    "end": "899570"
  },
  {
    "text": "that you fetch your basically you",
    "start": "899570",
    "end": "902150"
  },
  {
    "text": "proactively place your functions",
    "start": "902150",
    "end": "903680"
  },
  {
    "text": "function sources near the runtimes",
    "start": "903680",
    "end": "905630"
  },
  {
    "text": "actually need them and this might",
    "start": "905630",
    "end": "907579"
  },
  {
    "text": "actually make sense to you if you have a",
    "start": "907579",
    "end": "910910"
  },
  {
    "text": "small cluster with a few nodes or with a",
    "start": "910910",
    "end": "913550"
  },
  {
    "text": "few functions but once you start to get",
    "start": "913550",
    "end": "915320"
  },
  {
    "text": "into a more larger scale operation with",
    "start": "915320",
    "end": "917690"
  },
  {
    "text": "many functions with functions that are",
    "start": "917690",
    "end": "920000"
  },
  {
    "text": "far larger than our tens or hundreds of",
    "start": "920000",
    "end": "922279"
  },
  {
    "text": "mb/s then suddenly this this cost of",
    "start": "922279",
    "end": "925790"
  },
  {
    "text": "having to transfer your function data",
    "start": "925790",
    "end": "927350"
  },
  {
    "text": "sorry sorry your function sources to",
    "start": "927350",
    "end": "930560"
  },
  {
    "text": "this runtime can take quite some time so",
    "start": "930560",
    "end": "935209"
  },
  {
    "text": "especially for",
    "start": "935209",
    "end": "936199"
  },
  {
    "text": "use case very in the Geo distributed",
    "start": "936199",
    "end": "939730"
  },
  {
    "text": "world and in the educate the educators",
    "start": "939730",
    "end": "942499"
  },
  {
    "text": "competing world you can see this as",
    "start": "942499",
    "end": "944929"
  },
  {
    "text": "being very important so I'm I'm fairly",
    "start": "944929",
    "end": "946879"
  },
  {
    "text": "sure that iw as lambda at the edge and a",
    "start": "946879",
    "end": "949489"
  },
  {
    "text": "classifier using some form of",
    "start": "949489",
    "end": "951559"
  },
  {
    "text": "prefetching and the you can you can",
    "start": "951559",
    "end": "955100"
  },
  {
    "start": "953000",
    "end": "986000"
  },
  {
    "text": "think about this prefetching as being a",
    "start": "955100",
    "end": "957199"
  },
  {
    "text": "hierarchy of of layers so I think most",
    "start": "957199",
    "end": "960199"
  },
  {
    "text": "at the top you see the remote storage",
    "start": "960199",
    "end": "962239"
  },
  {
    "text": "where you actually store where your",
    "start": "962239",
    "end": "963769"
  },
  {
    "text": "function is actually stored and below",
    "start": "963769",
    "end": "965179"
  },
  {
    "text": "that you have several layers of possible",
    "start": "965179",
    "end": "967970"
  },
  {
    "text": "possibilities to crash your functions",
    "start": "967970",
    "end": "969879"
  },
  {
    "text": "before they actually are used so we",
    "start": "969879",
    "end": "973639"
  },
  {
    "text": "attempt you can catch them at the",
    "start": "973639",
    "end": "974480"
  },
  {
    "text": "cluster level or at the most extreme you",
    "start": "974480",
    "end": "976910"
  },
  {
    "text": "can catch them at even a runtime level",
    "start": "976910",
    "end": "979579"
  },
  {
    "text": "if you play that you already place them",
    "start": "979579",
    "end": "981290"
  },
  {
    "text": "at the runtimes in those those resource",
    "start": "981290",
    "end": "983959"
  },
  {
    "text": "pools ahead of time and this of course",
    "start": "983959",
    "end": "988009"
  },
  {
    "text": "again is a trade-off because you can if",
    "start": "988009",
    "end": "990829"
  },
  {
    "text": "you play the go for the most extreme way",
    "start": "990829",
    "end": "992420"
  },
  {
    "text": "of basically cashing your functions",
    "start": "992420",
    "end": "994040"
  },
  {
    "text": "everywhere you you're pretty sure if",
    "start": "994040",
    "end": "996290"
  },
  {
    "text": "your performance of basically your you",
    "start": "996290",
    "end": "998959"
  },
  {
    "text": "sort of your cost of transferring this",
    "start": "998959",
    "end": "1000490"
  },
  {
    "text": "function to the runtime it's very it's",
    "start": "1000490",
    "end": "1005889"
  },
  {
    "text": "very minimal but of course you are you",
    "start": "1005889",
    "end": "1008019"
  },
  {
    "text": "are incurring a lot of storage costs and",
    "start": "1008019",
    "end": "1011670"
  },
  {
    "text": "yeah so incurring all the storage cost",
    "start": "1011670",
    "end": "1013959"
  },
  {
    "text": "because you're caching everything",
    "start": "1013959",
    "end": "1015009"
  },
  {
    "text": "everywhere and of course the upset also",
    "start": "1015009",
    "end": "1017740"
  },
  {
    "text": "again the opposite of the trade-off are",
    "start": "1017740",
    "end": "1019990"
  },
  {
    "text": "you safe on the caching the caching",
    "start": "1019990",
    "end": "1022839"
  },
  {
    "text": "costs but you pay for it with higher",
    "start": "1022839",
    "end": "1024880"
  },
  {
    "text": "latency in some cases so just to keep up",
    "start": "1024880",
    "end": "1028688"
  },
  {
    "text": "with the pattern here we can now add",
    "start": "1028689",
    "end": "1031000"
  },
  {
    "text": "this this optimization also to our model",
    "start": "1031000",
    "end": "1033668"
  },
  {
    "text": "and the cache is them edit in front of",
    "start": "1033669",
    "end": "1038798"
  },
  {
    "text": "the function store just to indicate that",
    "start": "1038799",
    "end": "1040449"
  },
  {
    "text": "we don't necessarily need to fetch this",
    "start": "1040449",
    "end": "1042459"
  },
  {
    "text": "this function that we need from the",
    "start": "1042459",
    "end": "1044350"
  },
  {
    "text": "function store itself but you can use",
    "start": "1044350",
    "end": "1046270"
  },
  {
    "text": "intermediate cash so that brings to the",
    "start": "1046270",
    "end": "1052899"
  },
  {
    "start": "1050000",
    "end": "1080000"
  },
  {
    "text": "last optimization which is function",
    "start": "1052899",
    "end": "1055299"
  },
  {
    "text": "pre-warming and the idea of this is very",
    "start": "1055299",
    "end": "1059500"
  },
  {
    "text": "interesting which is basically that you",
    "start": "1059500",
    "end": "1061389"
  },
  {
    "text": "try to anticipate function executions",
    "start": "1061389",
    "end": "1063669"
  },
  {
    "text": "ahead of time by deploying these",
    "start": "1063669",
    "end": "1065740"
  },
  {
    "text": "functions predictively",
    "start": "1065740",
    "end": "1066639"
  },
  {
    "text": "what which we call pre-warming",
    "start": "1066639",
    "end": "1069340"
  },
  {
    "text": "and it sounds fancy but this",
    "start": "1069340",
    "end": "1071640"
  },
  {
    "text": "optimization help new at all you can you",
    "start": "1071640",
    "end": "1074710"
  },
  {
    "text": "might know it from other domains such as",
    "start": "1074710",
    "end": "1076480"
  },
  {
    "text": "the branch predictor in CPU or proactive",
    "start": "1076480",
    "end": "1079120"
  },
  {
    "text": "out scaling but maybe it's more is these",
    "start": "1079120",
    "end": "1082560"
  },
  {
    "start": "1080000",
    "end": "1130000"
  },
  {
    "text": "explained with a visual so here you can",
    "start": "1082560",
    "end": "1086020"
  },
  {
    "text": "see in the register amount the function",
    "start": "1086020",
    "end": "1087700"
  },
  {
    "text": "instance that you need at one point and",
    "start": "1087700",
    "end": "1089470"
  },
  {
    "text": "improved amount of function instance",
    "start": "1089470",
    "end": "1091030"
  },
  {
    "text": "that you deployed and in like in a",
    "start": "1091030",
    "end": "1093490"
  },
  {
    "text": "situation where you have no pre-warming",
    "start": "1093490",
    "end": "1095520"
  },
  {
    "text": "at some point you'll your function your",
    "start": "1095520",
    "end": "1099040"
  },
  {
    "text": "sorry your platform will need well",
    "start": "1099040",
    "end": "1100870"
  },
  {
    "text": "reckon recognize that it needs a",
    "start": "1100870",
    "end": "1102570"
  },
  {
    "text": "function instance and only then you can",
    "start": "1102570",
    "end": "1104500"
  },
  {
    "text": "start to deploy things and that's",
    "start": "1104500",
    "end": "1106270"
  },
  {
    "text": "regardless of how much you optimize your",
    "start": "1106270",
    "end": "1108130"
  },
  {
    "text": "quotes or process you always all of this",
    "start": "1108130",
    "end": "1110230"
  },
  {
    "text": "code start later see that you actually",
    "start": "1110230",
    "end": "1112090"
  },
  {
    "text": "have",
    "start": "1112090",
    "end": "1112630"
  },
  {
    "text": "well we transfer to the user and compare",
    "start": "1112630",
    "end": "1115990"
  },
  {
    "text": "this with I ski with an ideal case of",
    "start": "1115990",
    "end": "1117610"
  },
  {
    "text": "pre-warming where you know exactly at t4",
    "start": "1117610",
    "end": "1119920"
  },
  {
    "text": "that there will be function is needed",
    "start": "1119920",
    "end": "1121870"
  },
  {
    "text": "and you and you can just deploy it just",
    "start": "1121870",
    "end": "1125530"
  },
  {
    "text": "ahead of time ensuring that the user",
    "start": "1125530",
    "end": "1127510"
  },
  {
    "text": "will not notice any cold start but as",
    "start": "1127510",
    "end": "1131860"
  },
  {
    "text": "you can imagine electing things and",
    "start": "1131860",
    "end": "1134500"
  },
  {
    "text": "especially function instances especially",
    "start": "1134500",
    "end": "1136630"
  },
  {
    "text": "function execution is hard it's also an",
    "start": "1136630",
    "end": "1139270"
  },
  {
    "text": "active field of research in many of",
    "start": "1139270",
    "end": "1140620"
  },
  {
    "text": "these related domains of for example",
    "start": "1140620",
    "end": "1142180"
  },
  {
    "text": "proactive out scaling is still a trainee",
    "start": "1142180",
    "end": "1144280"
  },
  {
    "text": "subject for researchers but there are",
    "start": "1144280",
    "end": "1147310"
  },
  {
    "text": "approaches for the to solve this problem",
    "start": "1147310",
    "end": "1149140"
  },
  {
    "text": "is especially to other two types one is",
    "start": "1149140",
    "end": "1152200"
  },
  {
    "text": "runtime analysis where you where there's",
    "start": "1152200",
    "end": "1154930"
  },
  {
    "text": "a component constantly analyzing your",
    "start": "1154930",
    "end": "1156460"
  },
  {
    "text": "your functions behavior and tries to",
    "start": "1156460",
    "end": "1158560"
  },
  {
    "text": "based on like some mechanism form from",
    "start": "1158560",
    "end": "1161080"
  },
  {
    "text": "simple rule-based to complex machine",
    "start": "1161080",
    "end": "1163480"
  },
  {
    "text": "learning approaches to create a model to",
    "start": "1163480",
    "end": "1166300"
  },
  {
    "text": "predict the function the future function",
    "start": "1166300",
    "end": "1168040"
  },
  {
    "text": "executions the other approach is",
    "start": "1168040",
    "end": "1171040"
  },
  {
    "start": "1169000",
    "end": "1193000"
  },
  {
    "text": "basically to use more static information",
    "start": "1171040",
    "end": "1172630"
  },
  {
    "text": "so in use the information the function",
    "start": "1172630",
    "end": "1174790"
  },
  {
    "text": "and serve a function service platform",
    "start": "1174790",
    "end": "1176890"
  },
  {
    "text": "actually has to its benefit so if you",
    "start": "1176890",
    "end": "1179260"
  },
  {
    "text": "for example already know that function B",
    "start": "1179260",
    "end": "1180850"
  },
  {
    "text": "will we execute off the function a you",
    "start": "1180850",
    "end": "1182350"
  },
  {
    "text": "can already start pre warming and or if",
    "start": "1182350",
    "end": "1185320"
  },
  {
    "text": "you your user already has set up a",
    "start": "1185320",
    "end": "1187660"
  },
  {
    "text": "trigger for it to execute your function",
    "start": "1187660",
    "end": "1189430"
  },
  {
    "text": "everyday then you know when the function",
    "start": "1189430",
    "end": "1191290"
  },
  {
    "text": "will be needed and of course it's also",
    "start": "1191290",
    "end": "1194680"
  },
  {
    "text": "again involves a trade-off because I",
    "start": "1194680",
    "end": "1196870"
  },
  {
    "text": "like she's never certainty so it's item",
    "start": "1196870",
    "end": "1200080"
  },
  {
    "text": "when you start to believe a that I",
    "start": "1200080",
    "end": "1201700"
  },
  {
    "text": "election will actually resolve",
    "start": "1201700",
    "end": "1203500"
  },
  {
    "text": "in a pre-warm so for example keep the",
    "start": "1203500",
    "end": "1206530"
  },
  {
    "text": "treasures from believing these",
    "start": "1206530",
    "end": "1208180"
  },
  {
    "text": "predictions very low meaning that even",
    "start": "1208180",
    "end": "1210310"
  },
  {
    "text": "if there's a slightest hint that there",
    "start": "1210310",
    "end": "1211720"
  },
  {
    "text": "might be a function execution incoming",
    "start": "1211720",
    "end": "1213550"
  },
  {
    "text": "that you already start preforming your",
    "start": "1213550",
    "end": "1215950"
  },
  {
    "text": "functions and of course this also leads",
    "start": "1215950",
    "end": "1217990"
  },
  {
    "text": "to a misprediction probability the way",
    "start": "1217990",
    "end": "1220150"
  },
  {
    "text": "you waste a lot of resources on function",
    "start": "1220150",
    "end": "1223120"
  },
  {
    "text": "instances that are not actually that",
    "start": "1223120",
    "end": "1226030"
  },
  {
    "text": "worried about the function execution",
    "start": "1226030",
    "end": "1227410"
  },
  {
    "text": "where they'll actually arrive as",
    "start": "1227410",
    "end": "1228790"
  },
  {
    "text": "predicts it may be a dismal example",
    "start": "1228790",
    "end": "1231960"
  },
  {
    "text": "they're one of the oldest tricks in the",
    "start": "1231960",
    "end": "1234820"
  },
  {
    "text": "book is the rescue but I'm not sure if",
    "start": "1234820",
    "end": "1237550"
  },
  {
    "text": "there's a name for a blind calling it",
    "start": "1237550",
    "end": "1238900"
  },
  {
    "text": "Bing heck is where people when a double",
    "start": "1238900",
    "end": "1241090"
  },
  {
    "text": "yes just started they set up a timer and",
    "start": "1241090",
    "end": "1244360"
  },
  {
    "text": "then a key trigger to their functions",
    "start": "1244360",
    "end": "1247330"
  },
  {
    "text": "every five minutes just to keep it warm",
    "start": "1247330",
    "end": "1249790"
  },
  {
    "text": "and this of course very simplistic and",
    "start": "1249790",
    "end": "1252010"
  },
  {
    "text": "only works for one function instance but",
    "start": "1252010",
    "end": "1255970"
  },
  {
    "text": "it's already a most extreme form of",
    "start": "1255970",
    "end": "1257910"
  },
  {
    "text": "optimistic pre-warming and on the other",
    "start": "1257910",
    "end": "1261400"
  },
  {
    "text": "side you can be very pessimistic of",
    "start": "1261400",
    "end": "1262600"
  },
  {
    "text": "course you can say I'm keeping this high",
    "start": "1262600",
    "end": "1264460"
  },
  {
    "text": "this stress is very high for believing a",
    "start": "1264460",
    "end": "1266170"
  },
  {
    "text": "prediction for a function execution and",
    "start": "1266170",
    "end": "1269350"
  },
  {
    "text": "of course the now the downside is the",
    "start": "1269350",
    "end": "1271150"
  },
  {
    "text": "other way around because now you save",
    "start": "1271150",
    "end": "1272620"
  },
  {
    "text": "you save resources on miss predicts it's",
    "start": "1272620",
    "end": "1275050"
  },
  {
    "text": "free worms but you also have more",
    "start": "1275050",
    "end": "1276880"
  },
  {
    "text": "function executions that accident",
    "start": "1276880",
    "end": "1279340"
  },
  {
    "text": "actually can don't don't sorry that",
    "start": "1279340",
    "end": "1282220"
  },
  {
    "text": "cannot benefit from this pre barring",
    "start": "1282220",
    "end": "1284740"
  },
  {
    "text": "because they just weren't flicked it",
    "start": "1284740",
    "end": "1285970"
  },
  {
    "text": "certainly enough and to give you an",
    "start": "1285970",
    "end": "1288730"
  },
  {
    "start": "1287000",
    "end": "1369000"
  },
  {
    "text": "example of this of this pessimistic",
    "start": "1288730",
    "end": "1291610"
  },
  {
    "text": "pre-warming I just want to introduce a",
    "start": "1291610",
    "end": "1293290"
  },
  {
    "text": "project I'm working on right now which",
    "start": "1293290",
    "end": "1295420"
  },
  {
    "text": "is called fission workflows and function",
    "start": "1295420",
    "end": "1297610"
  },
  {
    "text": "operation breakfast is a approach to",
    "start": "1297610",
    "end": "1299160"
  },
  {
    "text": "basically to compose functions together",
    "start": "1299160",
    "end": "1302080"
  },
  {
    "text": "into more complex function compositions",
    "start": "1302080",
    "end": "1304770"
  },
  {
    "text": "so this allows users to basically reuse",
    "start": "1304770",
    "end": "1308220"
  },
  {
    "text": "their function instead of writing them",
    "start": "1308220",
    "end": "1310270"
  },
  {
    "text": "from scratch or instead of having to",
    "start": "1310270",
    "end": "1312280"
  },
  {
    "text": "write all this low-level function",
    "start": "1312280",
    "end": "1315100"
  },
  {
    "text": "transit data transfer logics themselves",
    "start": "1315100",
    "end": "1317350"
  },
  {
    "text": "to use this system to create these",
    "start": "1317350",
    "end": "1319180"
  },
  {
    "text": "function conversations which we call",
    "start": "1319180",
    "end": "1320440"
  },
  {
    "text": "workflows and not only that it also",
    "start": "1320440",
    "end": "1323290"
  },
  {
    "text": "gives you up X additional features with",
    "start": "1323290",
    "end": "1325300"
  },
  {
    "text": "basically provides you monitoring",
    "start": "1325300",
    "end": "1326710"
  },
  {
    "text": "fighter persistence of your data and",
    "start": "1326710",
    "end": "1328360"
  },
  {
    "text": "some other fault tolerant mechanisms",
    "start": "1328360",
    "end": "1333120"
  },
  {
    "text": "sorry",
    "start": "1334590",
    "end": "1337590"
  },
  {
    "text": "so so just get a small example daresay",
    "start": "1338500",
    "end": "1342380"
  },
  {
    "text": "you won't go further it gets into a",
    "start": "1342380",
    "end": "1345190"
  },
  {
    "text": "workflow where we have we first fella",
    "start": "1345190",
    "end": "1347210"
  },
  {
    "text": "dated then we branched off into a",
    "start": "1347210",
    "end": "1348470"
  },
  {
    "text": "parallel execution where in one branch",
    "start": "1348470",
    "end": "1351049"
  },
  {
    "text": "we actually resize the image and the",
    "start": "1351049",
    "end": "1353000"
  },
  {
    "text": "other branch we actually start to do a",
    "start": "1353000",
    "end": "1354380"
  },
  {
    "text": "sequential execution where you first do",
    "start": "1354380",
    "end": "1357440"
  },
  {
    "text": "an image recognition generating some tag",
    "start": "1357440",
    "end": "1359600"
  },
  {
    "text": "and attack we translate and then we have",
    "start": "1359600",
    "end": "1362630"
  },
  {
    "text": "a final function which we recombine",
    "start": "1362630",
    "end": "1364940"
  },
  {
    "text": "these two branch into a resized image",
    "start": "1364940",
    "end": "1367100"
  },
  {
    "text": "with the caption and so in the basically",
    "start": "1367100",
    "end": "1370250"
  },
  {
    "start": "1369000",
    "end": "1433000"
  },
  {
    "text": "maybe the most Mel the most interesting",
    "start": "1370250",
    "end": "1372230"
  },
  {
    "text": "thing about this workflow thing is that",
    "start": "1372230",
    "end": "1374690"
  },
  {
    "text": "you can actually use this information",
    "start": "1374690",
    "end": "1376250"
  },
  {
    "text": "because a workflow is in a set in its",
    "start": "1376250",
    "end": "1377870"
  },
  {
    "text": "essence is a dependency graph so you",
    "start": "1377870",
    "end": "1380690"
  },
  {
    "text": "know exactly when a function after which",
    "start": "1380690",
    "end": "1382850"
  },
  {
    "text": "function it will be called so there's a",
    "start": "1382850",
    "end": "1385460"
  },
  {
    "text": "lot of possible but we implement a very",
    "start": "1385460",
    "end": "1387200"
  },
  {
    "text": "simple way to pre-warm with functional",
    "start": "1387200",
    "end": "1389179"
  },
  {
    "text": "efficient workflows and the idea there",
    "start": "1389179",
    "end": "1391100"
  },
  {
    "text": "is that when one function starts you",
    "start": "1391100",
    "end": "1394700"
  },
  {
    "text": "pre-warm everything on the right and",
    "start": "1394700",
    "end": "1396470"
  },
  {
    "text": "what's the horizon horizon is basically",
    "start": "1396470",
    "end": "1398210"
  },
  {
    "text": "here in this case all the functions that",
    "start": "1398210",
    "end": "1400159"
  },
  {
    "text": "are right up in line after the first",
    "start": "1400159",
    "end": "1403009"
  },
  {
    "text": "function that I started so in this case",
    "start": "1403009",
    "end": "1405769"
  },
  {
    "text": "the next three will be pre-warmed and",
    "start": "1405769",
    "end": "1408379"
  },
  {
    "text": "then once the first finishes then the",
    "start": "1408379",
    "end": "1411769"
  },
  {
    "text": "all the ones that are pre runs can",
    "start": "1411769",
    "end": "1413720"
  },
  {
    "text": "immediately start and benefits from this",
    "start": "1413720",
    "end": "1415159"
  },
  {
    "text": "pre-warming this process goes on yeah",
    "start": "1415159",
    "end": "1418909"
  },
  {
    "text": "until the entire workflow is completed",
    "start": "1418909",
    "end": "1420710"
  },
  {
    "text": "and in general you can imagine that if",
    "start": "1420710",
    "end": "1422840"
  },
  {
    "text": "you would have done this yourself",
    "start": "1422840",
    "end": "1424429"
  },
  {
    "text": "basically by calling functions from one",
    "start": "1424429",
    "end": "1426559"
  },
  {
    "text": "funks to the other that would be much",
    "start": "1426559",
    "end": "1428539"
  },
  {
    "text": "lower because now you can pre-warm",
    "start": "1428539",
    "end": "1430850"
  },
  {
    "text": "everything in the sequence so and just",
    "start": "1430850",
    "end": "1434090"
  },
  {
    "text": "to finish our model we can add this",
    "start": "1434090",
    "end": "1436730"
  },
  {
    "text": "model this small workflow component to",
    "start": "1436730",
    "end": "1438559"
  },
  {
    "text": "this image of course a where fringe is",
    "start": "1438559",
    "end": "1442129"
  },
  {
    "text": "much more complex than then a single box",
    "start": "1442129",
    "end": "1444649"
  },
  {
    "text": "here but just for sake of simplicity",
    "start": "1444649",
    "end": "1446629"
  },
  {
    "text": "it's a single box and because the",
    "start": "1446629",
    "end": "1448309"
  },
  {
    "text": "important thing here is that there's a",
    "start": "1448309",
    "end": "1449750"
  },
  {
    "text": "Maui arrow from a work for engine to the",
    "start": "1449750",
    "end": "1454100"
  },
  {
    "text": "deployer which means by security",
    "start": "1454100",
    "end": "1455480"
  },
  {
    "text": "deployer is no longer solely dependent",
    "start": "1455480",
    "end": "1458120"
  },
  {
    "text": "on the router for basically deploying",
    "start": "1458120",
    "end": "1461360"
  },
  {
    "text": "functions now also something else can",
    "start": "1461360",
    "end": "1463190"
  },
  {
    "text": "deploy the functions so yeah too well",
    "start": "1463190",
    "end": "1469700"
  },
  {
    "start": "1466000",
    "end": "1589000"
  },
  {
    "text": "to summarize we've seen here four",
    "start": "1469700",
    "end": "1471889"
  },
  {
    "text": "techniques that are used to improve the",
    "start": "1471889",
    "end": "1473990"
  },
  {
    "text": "performance of function surf platforms",
    "start": "1473990",
    "end": "1476260"
  },
  {
    "text": "we've seen that function resource",
    "start": "1476260",
    "end": "1478460"
  },
  {
    "text": "reusing is used by basically all of the",
    "start": "1478460",
    "end": "1482120"
  },
  {
    "text": "function and surf platforms to trade in",
    "start": "1482120",
    "end": "1485360"
  },
  {
    "text": "performance isolation for better",
    "start": "1485360",
    "end": "1487010"
  },
  {
    "text": "performance we've seen that you can",
    "start": "1487010",
    "end": "1489529"
  },
  {
    "text": "basically cut in half the deployment",
    "start": "1489529",
    "end": "1491750"
  },
  {
    "text": "process by having these pools of generic",
    "start": "1491750",
    "end": "1494000"
  },
  {
    "text": "runtimes and we we've seen that the this",
    "start": "1494000",
    "end": "1497389"
  },
  {
    "text": "prefetch optimisation allows you to deal",
    "start": "1497389",
    "end": "1500690"
  },
  {
    "text": "better with large large functions on",
    "start": "1500690",
    "end": "1503630"
  },
  {
    "text": "cross more distributed settings and",
    "start": "1503630",
    "end": "1507169"
  },
  {
    "text": "finally we've seen that you can try to",
    "start": "1507169",
    "end": "1508909"
  },
  {
    "text": "avoid this entire course colton search",
    "start": "1508909",
    "end": "1511460"
  },
  {
    "text": "process entirely by using pre-warming to",
    "start": "1511460",
    "end": "1515360"
  },
  {
    "text": "predictively",
    "start": "1515360",
    "end": "1516380"
  },
  {
    "text": "start deploy your function uses a head",
    "start": "1516380",
    "end": "1518870"
  },
  {
    "text": "of time and then we've also seen that",
    "start": "1518870",
    "end": "1520760"
  },
  {
    "text": "every one of these optimizations is a",
    "start": "1520760",
    "end": "1522679"
  },
  {
    "text": "trade-off between performance and cost",
    "start": "1522679",
    "end": "1524240"
  },
  {
    "text": "and also that raises an interesting",
    "start": "1524240",
    "end": "1526100"
  },
  {
    "text": "distinction between the close source",
    "start": "1526100",
    "end": "1528200"
  },
  {
    "text": "oaks or the close to our service",
    "start": "1528200",
    "end": "1530330"
  },
  {
    "text": "platforms in the open source platforms",
    "start": "1530330",
    "end": "1532220"
  },
  {
    "text": "because as of today the close for most",
    "start": "1532220",
    "end": "1536659"
  },
  {
    "text": "closed source platforms don't actually",
    "start": "1536659",
    "end": "1538399"
  },
  {
    "text": "give you the flexibility or the freedom",
    "start": "1538399",
    "end": "1540860"
  },
  {
    "text": "to tweak these trade-offs yourselves to",
    "start": "1540860",
    "end": "1543620"
  },
  {
    "text": "fit your your use case so you have to",
    "start": "1543620",
    "end": "1545990"
  },
  {
    "text": "rely on them to actually have to have",
    "start": "1545990",
    "end": "1549679"
  },
  {
    "text": "made the right decision right - may have",
    "start": "1549679",
    "end": "1552110"
  },
  {
    "text": "made the right decision for your exact",
    "start": "1552110",
    "end": "1554330"
  },
  {
    "text": "workload and whereas in contrast with a",
    "start": "1554330",
    "end": "1557269"
  },
  {
    "text": "server with open source service",
    "start": "1557269",
    "end": "1558470"
  },
  {
    "text": "platforms such as station you can you",
    "start": "1558470",
    "end": "1562220"
  },
  {
    "text": "have to full control and full",
    "start": "1562220",
    "end": "1563299"
  },
  {
    "text": "flexibility to tweak these trade-offs to",
    "start": "1563299",
    "end": "1565279"
  },
  {
    "text": "activate exactly the performance needs",
    "start": "1565279",
    "end": "1567590"
  },
  {
    "text": "of your application ensuring that you",
    "start": "1567590",
    "end": "1569779"
  },
  {
    "text": "also pay the minimal cost and that also",
    "start": "1569779",
    "end": "1572690"
  },
  {
    "text": "brings me to what I think is a very",
    "start": "1572690",
    "end": "1574580"
  },
  {
    "text": "interesting about service is that it's",
    "start": "1574580",
    "end": "1576380"
  },
  {
    "text": "not just a model where you pay for the",
    "start": "1576380",
    "end": "1578149"
  },
  {
    "text": "research that you use which also you",
    "start": "1578149",
    "end": "1580130"
  },
  {
    "text": "call so just pay for the forms that you",
    "start": "1580130",
    "end": "1582019"
  },
  {
    "text": "need thank you very much ok",
    "start": "1582019",
    "end": "1587080"
  },
  {
    "text": "[Applause]",
    "start": "1587080",
    "end": "1591059"
  }
]