[
  {
    "text": "good morning thank you so much for making it out to this talk you know it's kind of the last day powering through so we really appreciate your time welcome",
    "start": "0",
    "end": "6870"
  },
  {
    "text": "to life outside the cluster this talk will be all of all about virtual machines and envoy and sto so hopefully",
    "start": "6870",
    "end": "12780"
  },
  {
    "text": "you're in the right place just to quickly introduce ourselves my name is Megan and my name is Amir and we are",
    "start": "12780",
    "end": "19199"
  },
  {
    "text": "both part of Google cloud working closely on hybrid cloud service mesh containers kubernetes all that wonderful",
    "start": "19199",
    "end": "26609"
  },
  {
    "text": "stuff and we're super excited to be here just a quick recap of what we're going",
    "start": "26609",
    "end": "31890"
  },
  {
    "text": "to cover today we're gonna try to fit in as much as we can this talk does not assume any prior knowledge of SCO or",
    "start": "31890",
    "end": "39059"
  },
  {
    "text": "Envoy so we're gonna give a really quick introduction to sto why you would use a",
    "start": "39059",
    "end": "44100"
  },
  {
    "text": "service mesh then we'll talk about VMs why would you want to add a VM to a service mesh then we'll hand it off to a",
    "start": "44100",
    "end": "50820"
  },
  {
    "text": "mirror you will give a rundown of exactly how this is going to work we're gonna run through some demos and close",
    "start": "50820",
    "end": "55890"
  },
  {
    "text": "it out with a few best practices on how to make all this work in a seamless way",
    "start": "55890",
    "end": "61760"
  },
  {
    "text": "so raise your hand if you've heard of the term service mesh okay that saves me",
    "start": "61760",
    "end": "69330"
  },
  {
    "text": "a few sentences raise your hand if you have 10 micro services running in one or",
    "start": "69330",
    "end": "76470"
  },
  {
    "text": "more kubernetes clusters right most most folks so this would be like how many deployments do you have how about 100 oh",
    "start": "76470",
    "end": "84080"
  },
  {
    "text": "ok 200 500 I'm just gonna keep saying",
    "start": "84080",
    "end": "91380"
  },
  {
    "text": "numbers ok so uh maybe a lot of us know in this room adopting containers and",
    "start": "91380",
    "end": "96570"
  },
  {
    "text": "kubernetes can add a lot of benefits right although scaling the ability to easily use multiple frameworks and",
    "start": "96570",
    "end": "103439"
  },
  {
    "text": "programming languages resource efficiency there's all sorts of benefits right but what those benefits comes",
    "start": "103439",
    "end": "109200"
  },
  {
    "text": "complexity if you can use multiple programming languages maybe that means you have to maintain lots of different",
    "start": "109200",
    "end": "115380"
  },
  {
    "text": "client libraries to do simple things like retry logic or search circuit breaking you also have more services to",
    "start": "115380",
    "end": "121680"
  },
  {
    "text": "monitor how do you know who's talking to whom how do you know if there's a latency issue going from a kubernetes cluster in one region to another there's",
    "start": "121680",
    "end": "129090"
  },
  {
    "text": "a whole lot of questions that you now have to start asking yourself and what this means is there's in the",
    "start": "129090",
    "end": "135319"
  },
  {
    "text": "last few years I think there's really become this need to have a consistent layer not only for four metrics and logs",
    "start": "135319",
    "end": "141260"
  },
  {
    "text": "right aggregating all of what's happening on in all of your pods but also at the policy layer so things like",
    "start": "141260",
    "end": "147799"
  },
  {
    "text": "network policies security policies I'm having an easy way to manage all those in one place and that's really what a",
    "start": "147799",
    "end": "154909"
  },
  {
    "text": "service mesh is for what is the definition of a service mesh it is a",
    "start": "154909",
    "end": "160129"
  },
  {
    "text": "transparent and language language independent layer on top of your compute to automate application network",
    "start": "160129",
    "end": "166310"
  },
  {
    "text": "functions and security and policy is included in that network functions the",
    "start": "166310",
    "end": "171470"
  },
  {
    "text": "key word here is automation what I think any service mesh tool can really provide you anything that you can just add a",
    "start": "171470",
    "end": "178639"
  },
  {
    "text": "Yambol to and a service mesh can take care of logic on your behalf what that lets you do is tap into best practices",
    "start": "178639",
    "end": "184579"
  },
  {
    "text": "like get ops like declarative policies and resources things you may already be",
    "start": "184579",
    "end": "190730"
  },
  {
    "text": "doing with kubernetes service mesh can really help you kind of extend this platform to get that consistency and to",
    "start": "190730",
    "end": "197239"
  },
  {
    "text": "get that observability that you're looking for so there's a lot of different service mesh tools out there",
    "start": "197239",
    "end": "203199"
  },
  {
    "text": "several are open-source today we're going to be talking about two pieces in",
    "start": "203199",
    "end": "208699"
  },
  {
    "text": "our toolkit the first has to do with the data plane so envoy is part of the CNC F",
    "start": "208699",
    "end": "214040"
  },
  {
    "text": "it is a high-performance configurable proxy written in C++ it speaks its own API called the XDS ApS",
    "start": "214040",
    "end": "221239"
  },
  {
    "text": "and the service mesh tool that we're going to be talking about today that configures those envoy proxies is Sto",
    "start": "221239",
    "end": "228889"
  },
  {
    "text": "so the way sto works is you hand it a Hamel file like a policy and sto will convert all of that logic into envoy",
    "start": "228889",
    "end": "235760"
  },
  {
    "text": "speak and configure all those proxies on your behalf what sto will also do is help you aggregate all those metrics and",
    "start": "235760",
    "end": "243109"
  },
  {
    "text": "forward them to whatever back-end sink you're using so before we get into VM",
    "start": "243109",
    "end": "248329"
  },
  {
    "text": "Lance it's probably a good idea to discuss how SCO works in a kubernetes environment so here we have a plain",
    "start": "248329",
    "end": "255470"
  },
  {
    "text": "vanilla kubernetes cluster two pods representing two services up one and up two and each of our pods has just one",
    "start": "255470",
    "end": "262310"
  },
  {
    "text": "application container when we install Sto what gonna happen and if we define a namespace as sto injected what will",
    "start": "262310",
    "end": "270560"
  },
  {
    "text": "happen is an envoy proxy will get added to our pods and those proxies mediate",
    "start": "270560",
    "end": "276170"
  },
  {
    "text": "all inbound and outbound traffic what this lets you do is envoy keeps track of all the metrics and can also enforce",
    "start": "276170",
    "end": "282440"
  },
  {
    "text": "that policy before those requests leave the pod and then we have the sto control plane which is also running inside of",
    "start": "282440",
    "end": "288680"
  },
  {
    "text": "our cluster this control plane consists of multiple parts the key thing to know is there's a piece called pilot for",
    "start": "288680",
    "end": "295250"
  },
  {
    "text": "traffic management piece called Citadel for security and a piece called mixer for metrics really all there is to know",
    "start": "295250",
    "end": "302600"
  },
  {
    "text": "is you talk to the sto control plane with all of your rules and policies and those get forwarded down to envoy today",
    "start": "302600",
    "end": "309140"
  },
  {
    "text": "we are have installed Prometheus alongside of our sto installation in our demo and what this lets us do is use key",
    "start": "309140",
    "end": "316100"
  },
  {
    "text": "Olle which is a service graph tool to see a view into what's happening with our services so okay really quick recap",
    "start": "316100",
    "end": "324110"
  },
  {
    "text": "of this do let's stop the VMS another sort of poll here raise your hand if you",
    "start": "324110",
    "end": "330020"
  },
  {
    "text": "are operating any kind of staple or legacy service in a vm outside of kubernetes if you've got one okay wow",
    "start": "330020",
    "end": "336890"
  },
  {
    "text": "that's everyone Oh raise your hand if you've got more than ten of these services Wow a hundred holy okay Wow",
    "start": "336890",
    "end": "347210"
  },
  {
    "text": "uhm so that's a lot the idea here and if you kind of walk away with anything in",
    "start": "347210",
    "end": "352220"
  },
  {
    "text": "this talk is the idea that it's kind of a myth I think that everything belongs in a container or that everything",
    "start": "352220",
    "end": "357440"
  },
  {
    "text": "belongs in kubernetes I don't think that's true whether it's a staple service or a database or something that",
    "start": "357440",
    "end": "365690"
  },
  {
    "text": "lives on a mainframe there's always going to be a service that doesn't live in your cluster in some cases you may own these services which is the",
    "start": "365690",
    "end": "372290"
  },
  {
    "text": "situation we're going to talk about today where you can actually sudo in whatever compute is running that service",
    "start": "372290",
    "end": "377810"
  },
  {
    "text": "and install stuff on it that's great but the key thing here is consistency in the",
    "start": "377810",
    "end": "384020"
  },
  {
    "text": "perfect world whether we have pods or whether we have VMs we can have aggregated sort of metrics and",
    "start": "384020",
    "end": "391010"
  },
  {
    "text": "observability and use the same policy objects to apply to both to both two pods and two VMs and sto can make that",
    "start": "391010",
    "end": "399050"
  },
  {
    "text": "possible so we're gonna spend the rest of this talk diving into exactly how this is gonna work I'm gonna hand it off to a",
    "start": "399050",
    "end": "404390"
  },
  {
    "text": "mere now to talk about the technical details of VMs awesome thanks Megan so",
    "start": "404390",
    "end": "409760"
  },
  {
    "text": "before we get into how we can integrate VMs into the osteo control plane I've",
    "start": "409760",
    "end": "415250"
  },
  {
    "text": "been working on SEO for a while and it took me a while to kind of really grasp what kind of the service mesh thing does",
    "start": "415250",
    "end": "420680"
  },
  {
    "text": "and I kind of separated out into two things right how does is do a view a service or any",
    "start": "420680",
    "end": "426230"
  },
  {
    "text": "service mesh Mewis service right we think of services as something that runs in a container inside of kubernetes but",
    "start": "426230",
    "end": "431810"
  },
  {
    "text": "a service is essentially just a process that's running anywhere it could be in a VM it could be in a in a cluster and sto",
    "start": "431810",
    "end": "438020"
  },
  {
    "text": "makes a routing decision based on a name or you give it a name and it decides where to go right so that's one thing",
    "start": "438020",
    "end": "444290"
  },
  {
    "text": "that's kind of the routing aspect of this do and then the next aspect of sto is this idea of giving it kind of",
    "start": "444290",
    "end": "450500"
  },
  {
    "text": "declarative way of configuring the network application functions which are security and policy and so on there are",
    "start": "450500",
    "end": "456560"
  },
  {
    "text": "two types of services whether they're whether it's sto or non sto services are running kind of everywhere right so",
    "start": "456560",
    "end": "462410"
  },
  {
    "text": "first thing is the routing piece we need to be able to get to services whether they're inside the mesh or outside the",
    "start": "462410",
    "end": "467600"
  },
  {
    "text": "mesh and it's to use those services as the same right so we have this something called mesh internal services these are",
    "start": "467600",
    "end": "473840"
  },
  {
    "text": "any this is any process running anywhere that has that Istria proxy running as a sidecar right next to it right so a CEO",
    "start": "473840",
    "end": "480470"
  },
  {
    "text": "considers that as part of its mesh or its control plane it can configure things like traffic routing traffic",
    "start": "480470",
    "end": "485930"
  },
  {
    "text": "shaping get observability and so on and so forth inside of kubernetes is to your control plan can just interrogate the",
    "start": "485930",
    "end": "491720"
  },
  {
    "text": "cube API server and discover all the services all the endpoints all the pods that happens implicitly and so all of",
    "start": "491720",
    "end": "497720"
  },
  {
    "text": "the mesh all of the services inside of the kubernetes service are implicitly mesh internal outside of the cluster",
    "start": "497720",
    "end": "502970"
  },
  {
    "text": "where you don't have kind of some automated way of doing service discovery this is where we need to kind of explicitly define whether the service is",
    "start": "502970",
    "end": "509630"
  },
  {
    "text": "going to be a mesh internal service meaning there's an sto proxy sitting next to it and I kind of control the network functionality of that process or",
    "start": "509630",
    "end": "516380"
  },
  {
    "text": "whether it's sitting outside of the service mesh which means it's being owned by a completely different team this is an API a partner API that you go",
    "start": "516380",
    "end": "523669"
  },
  {
    "text": "to or a database where you don't have the means to put that SDO thing in front of it right and that is a mesh external",
    "start": "523669",
    "end": "530660"
  },
  {
    "text": "service so I wanted to kind of separate out those two things and still considered services for the purpose of this talk we are of course",
    "start": "530660",
    "end": "536720"
  },
  {
    "text": "going to talk about kind of what is a mesh internal service how do we add an outside of the cluster thing a process",
    "start": "536720",
    "end": "542990"
  },
  {
    "text": "into our sto control plane so the demo and it's going to be set up kind of the same way this is just a simple single V",
    "start": "542990",
    "end": "549470"
  },
  {
    "text": "PC setup we on the left hand side we see a cluster a gke cluster in this particular case but some services",
    "start": "549470",
    "end": "555650"
  },
  {
    "text": "running and the history of control plane runs inside of the GK cluster and then we also have a GCE instante compute",
    "start": "555650",
    "end": "561740"
  },
  {
    "text": "engine instance which is just a virtual machine that's running in the same same VM so let's start kind of on the lower",
    "start": "561740",
    "end": "566900"
  },
  {
    "text": "stack in the routing stack so the first thing we need to ensure that the VMs can talk to the pods right just at the IP",
    "start": "566900",
    "end": "572420"
  },
  {
    "text": "layer just at layer 3 and there's a number of ways we can do that inside of GC P we have something called BBC native",
    "start": "572420",
    "end": "578000"
  },
  {
    "text": "clusters which means that the pod IPS are first class V PC IPs and then VMI",
    "start": "578000",
    "end": "583460"
  },
  {
    "text": "peas are of course the first class BBC IV so now we can just go into the V PC firewall and just make sure that the right firewall rules exist so the VMI",
    "start": "583460",
    "end": "589910"
  },
  {
    "text": "piece can talk to the pod IPS and then we ensure that the VMS know about that pod IP range the next thing we need to",
    "start": "589910",
    "end": "596600"
  },
  {
    "text": "do is since this is a service and every service must have an identity inside of kubernetes that is just kind of done",
    "start": "596600",
    "end": "601610"
  },
  {
    "text": "automatically we need to give it an identity explicitly right so inside of kubernetes every service gets an",
    "start": "601610",
    "end": "607459"
  },
  {
    "text": "identity using kubernetes service accounts with that our scope to do that namespace so the first thing we need to do is say where which namespace do we",
    "start": "607459",
    "end": "614029"
  },
  {
    "text": "want to put this service and it doesn't matter we can put it in the default namespace take a service account get its",
    "start": "614029",
    "end": "619040"
  },
  {
    "text": "credentials its certificates and then hand them over to the VM alright so those are the two things that the VM needs now we need to create a service",
    "start": "619040",
    "end": "626630"
  },
  {
    "text": "inside of the kubernetes cluster again inside of kubernetes cluster everything is done kind of automatically by just interrogating the cube API but in this",
    "start": "626630",
    "end": "633709"
  },
  {
    "text": "particular case we need to explicitly add that service right so sto gives us a CLI tool called sto CTL and using this",
    "start": "633709",
    "end": "641120"
  },
  {
    "text": "SEO CTL register command all we need to do is give it a service name and IP a name and a port and what that results in",
    "start": "641120",
    "end": "648020"
  },
  {
    "text": "that looks very suspiciously like a kubernetes service resource right so it's a service it has a name",
    "start": "648020",
    "end": "653750"
  },
  {
    "text": "it has a cluster IP and it is a selector less service because most of the time when we create a service in kubernetes",
    "start": "653750",
    "end": "658940"
  },
  {
    "text": "we have a deployment that's backing that service that has endpoints which are the pod IP addresses this particular service",
    "start": "658940",
    "end": "664310"
  },
  {
    "text": "it's just a named load balance sir there's no back ends to it yet all",
    "start": "664310",
    "end": "669440"
  },
  {
    "text": "right so that's the next thing we need to do we need to give it some back ends again in kubernetes this is kind of done automatically we're kind of taking is",
    "start": "669440",
    "end": "675260"
  },
  {
    "text": "kind of the hard way as Kelsey would say so SEO comes with another custom resource called a service entry when we",
    "start": "675260",
    "end": "682190"
  },
  {
    "text": "create a service entry we refer to the service that we just created using sto cuttle register command so if you look",
    "start": "682190",
    "end": "689240"
  },
  {
    "text": "about three-quarters of the way down you'll see a host field and that's the service that we just created that is the",
    "start": "689240",
    "end": "694520"
  },
  {
    "text": "named load balancer in this case it's product catalog service it's in the default namespace dot SVC twister dot",
    "start": "694520",
    "end": "700520"
  },
  {
    "text": "local now that's in the DNS scope of that cluster and right above that is the endpoint section and that points to",
    "start": "700520",
    "end": "706760"
  },
  {
    "text": "where is that process running how do I get to that process what is the IP and that IP address just happens to be the",
    "start": "706760",
    "end": "711890"
  },
  {
    "text": "IP of your virtual machine and then you've got the name and the port obviously the G RPC and the port number",
    "start": "711890",
    "end": "717130"
  },
  {
    "text": "all right so now we have a service created and we have the endpoints inside of kubernetes let's hop over to the VM",
    "start": "717130",
    "end": "723589"
  },
  {
    "text": "and let's see what's running in there and we all know that we need to at least run that sto proxy the Envoy proxy that",
    "start": "723589",
    "end": "729140"
  },
  {
    "text": "runs there something needs to configure that proxy and the issue of control plane needs to configure that proxy know",
    "start": "729140",
    "end": "734210"
  },
  {
    "text": "the history of control plane is running across inside of the cluster the proxy sitting outside of the cluster so we need to make sure that there's a way for",
    "start": "734210",
    "end": "740750"
  },
  {
    "text": "them to communicate to each other all right so the first thing inside of the VM we need to make sure that there's a dns name for a pilot to make sure that",
    "start": "740750",
    "end": "747230"
  },
  {
    "text": "it resolves to some IP address now we don't expose pilot outside of the cluster it's just a cluster type cluster",
    "start": "747230",
    "end": "754700"
  },
  {
    "text": "IP type service that's running inside of the cluster we use a the ISTE of ingress gateway and create a gateway for pilot",
    "start": "754700",
    "end": "760850"
  },
  {
    "text": "to expose it out the ingress gateway so that DNS name is essentially pointing to the ingress gateway IP address or a",
    "start": "760850",
    "end": "767089"
  },
  {
    "text": "great so now that proxy can talk back to the Asteria control plan it can talk back to Pilate and Pilate can configure",
    "start": "767089",
    "end": "773030"
  },
  {
    "text": "do all the routing rules in all of that another piece that's running in the VM is called a node agent the node agent is",
    "start": "773030",
    "end": "779420"
  },
  {
    "text": "responsible for creating the certificate signing request and sending them to Citadel Citadel is kind of the",
    "start": "779420",
    "end": "784970"
  },
  {
    "text": "certificate authority that sits inside of the gke cluster inside of the Sto control plane and that is responsible",
    "start": "784970",
    "end": "790850"
  },
  {
    "text": "for creating the certificates rotating them and so on and so forth it hands them back to the node agent and the node agent installs them inside",
    "start": "790850",
    "end": "797410"
  },
  {
    "text": "VM in the Etsy search folder and then of course the last thing that's running is your actual process that's your actual service and that could be running as a",
    "start": "797410",
    "end": "804160"
  },
  {
    "text": "binary it could be running as a daemon could be running as a container which is what we're going to do in this particular case so now this looks a lot",
    "start": "804160",
    "end": "810940"
  },
  {
    "text": "like the picture that Megan showed at the beginning where we had two services running inside of kubernetes cluster with proxies friend ended both services",
    "start": "810940",
    "end": "817629"
  },
  {
    "text": "so everything was kind of flowing through the proxy now we've kind of bootstrapped the VM with the exact same",
    "start": "817629",
    "end": "822970"
  },
  {
    "text": "kind of thing and just make sure that the networking works and everything is looking good again from an SEO perspective doesn't matter where that",
    "start": "822970",
    "end": "829000"
  },
  {
    "text": "process is running so at this point I'll hand it back to Megan and she's gonna maybe do some demos yeah sounds good",
    "start": "829000",
    "end": "835720"
  },
  {
    "text": "thanks Mary okay so we just kind of ran through how to get all the set up what",
    "start": "835720",
    "end": "840879"
  },
  {
    "text": "I'm going to show is this whole situation in action so what we've actually done before this talk is set up",
    "start": "840879",
    "end": "847389"
  },
  {
    "text": "a kubernetes cluster and a VM and we have done all of the install steps that Amir just went through the idea there is",
    "start": "847389",
    "end": "853060"
  },
  {
    "text": "to kind of bootstrap the environment so that we can show the sort of unified functionality that we're all sort of trying to get to in the end so this is",
    "start": "853060",
    "end": "860350"
  },
  {
    "text": "the sample app that we've installed on our environment so what we have here is a multi service application designed to",
    "start": "860350",
    "end": "866860"
  },
  {
    "text": "mimic a retail web app there's a front end through of that we've exposed through the sto ingress gateway so we'll",
    "start": "866860",
    "end": "873250"
  },
  {
    "text": "open it up in just a moment and then there's various backends and what we've done here is we have taken one back-end",
    "start": "873250",
    "end": "879009"
  },
  {
    "text": "product catalog and we have taken it out of the cluster and we have put it into a VM so we've literally just taken the",
    "start": "879009",
    "end": "885730"
  },
  {
    "text": "docker image that we were running in a pod on the cluster and now we're just running that inside the VM with docker",
    "start": "885730",
    "end": "891220"
  },
  {
    "text": "run so designs is kind of yeah make it as simple as possible and what I'm gonna",
    "start": "891220",
    "end": "897189"
  },
  {
    "text": "show here is just like the baseline setup so we don't have any policies deployed yet no rules so okay can",
    "start": "897189",
    "end": "904750"
  },
  {
    "text": "everyone in the back see this okay if I run a command can you read the text or",
    "start": "904750",
    "end": "911110"
  },
  {
    "text": "should I make it bigger okay I'm seeing thumbs up sweet okay so what we have here is a four nodes gke cluster running",
    "start": "911110",
    "end": "918550"
  },
  {
    "text": "gk1 got 13 nothing special about this cluster and then yeah so I'm just gonna",
    "start": "918550",
    "end": "924279"
  },
  {
    "text": "kind of get a lay of the land here so we've installed this do this is just",
    "start": "924279",
    "end": "931120"
  },
  {
    "text": "three these are all those control plane components we were talking about so we have pilot for traffic and we have",
    "start": "931120",
    "end": "936819"
  },
  {
    "text": "Citadel for security and all those things and then into the default namespace we have setup this sample",
    "start": "936819",
    "end": "943779"
  },
  {
    "text": "application you'll notice there's a bunch of services we can see here two out of two means that we have two",
    "start": "943779",
    "end": "949959"
  },
  {
    "text": "containers running in the pod and one of them is the app one of them is Envoy and then you'll notice that project catalog",
    "start": "949959",
    "end": "955509"
  },
  {
    "text": "is missing from the list that's again because we've taken it out of the cluster and we've put it in the VM okay",
    "start": "955509",
    "end": "960699"
  },
  {
    "text": "yo so this is pods if we run get services we can see that",
    "start": "960699",
    "end": "965740"
  },
  {
    "text": "we actually do have product catalog in the list so if you remember when Amir was talking about that SD of CTL",
    "start": "965740",
    "end": "971079"
  },
  {
    "text": "register command and the selector list service that we've got that's what this is here so we have a cluster IP service",
    "start": "971079",
    "end": "977529"
  },
  {
    "text": "our product catalog service is going to run it's a G RPC service on port three five five zero and we also have that",
    "start": "977529",
    "end": "984040"
  },
  {
    "text": "service entry so we have the service for DNS and then to actually resolve to the IP import of the VM we have this service",
    "start": "984040",
    "end": "990879"
  },
  {
    "text": "entry called product catalog service corresponding to that coop DNS long name for the service mesh internal and what",
    "start": "990879",
    "end": "998410"
  },
  {
    "text": "if we actually look at the yamo file for that what we can see is yeah it's called product catalog and this is the IP",
    "start": "998410",
    "end": "1004379"
  },
  {
    "text": "address of the VM so again there's kind of reviewing that the setup Amir was going through before so this is what's",
    "start": "1004379",
    "end": "1010199"
  },
  {
    "text": "happening on our cluster if we go over here to the other tab we're actually SSH into the VM this is",
    "start": "1010199",
    "end": "1016050"
  },
  {
    "text": "just a compute engine VM running in cheap GCP same same network same PPC",
    "start": "1016050",
    "end": "1021110"
  },
  {
    "text": "with sort of direct IP connectivity if we run this command here we can see the",
    "start": "1021110",
    "end": "1027779"
  },
  {
    "text": "status of all the sto pieces that we've set up before this so what I just ran was the status of the Envoy proxy itself",
    "start": "1027779",
    "end": "1034319"
  },
  {
    "text": "so we can see it's active it's running it's running with system D and we can see here that when when the proxy starts",
    "start": "1034319",
    "end": "1041699"
  },
  {
    "text": "up there's this ISTE of start script which configures the IP tables in this case here to intercept all inbound",
    "start": "1041699",
    "end": "1047909"
  },
  {
    "text": "traffic coming in on localhost and if we exit out that we can also see that the",
    "start": "1047909",
    "end": "1053880"
  },
  {
    "text": "node agent which is the thing that renews that certificate signing request with Citadel that's also running and",
    "start": "1053880",
    "end": "1059480"
  },
  {
    "text": "yeah it's we're kind of zoomed in here but yeah ideas this is going to be what's refreshing our certificates okay and",
    "start": "1059480",
    "end": "1068380"
  },
  {
    "text": "then lastly we have our actual service that product catalog docker container running we've exposed the port and yeah",
    "start": "1068380",
    "end": "1077830"
  },
  {
    "text": "that's that's kind of what's going on here the last thing I'll show is across the whole mesh so pods and VMs I have",
    "start": "1077830",
    "end": "1083890"
  },
  {
    "text": "enabled envoy access logging thristy oh and so when I press enter here we're gonna see a whole bunch of logs",
    "start": "1083890",
    "end": "1089140"
  },
  {
    "text": "hopefully and this is actually the access logs coming in from the front end of our application into profit catalog",
    "start": "1089140",
    "end": "1096520"
  },
  {
    "text": "this 10.40 2.7 that's actually the Pali of the front end so that's what the",
    "start": "1096520",
    "end": "1102640"
  },
  {
    "text": "source of the traffic and then the destination is this is the actual IP of the VM so I like to turn on access",
    "start": "1102640",
    "end": "1109990"
  },
  {
    "text": "logging because it lets me know if things are actually working and going through the proxy sometimes things don't",
    "start": "1109990",
    "end": "1115960"
  },
  {
    "text": "if I have not set it up correctly and then the last thing I'll show here on the VM is the Etsy host so Amir was",
    "start": "1115960",
    "end": "1123070"
  },
  {
    "text": "talking about how sorry for all these added by Google's let's grow up so Amir",
    "start": "1123070",
    "end": "1129460"
  },
  {
    "text": "was talking about how it's probably never a good idea to directly expose pilot or Citadel those sto control plant",
    "start": "1129460",
    "end": "1135010"
  },
  {
    "text": "components outside of your cluster for security and potentially obvious reasons so what we're doing here is we're",
    "start": "1135010",
    "end": "1141220"
  },
  {
    "text": "configuring Etsy host and you can use DNS mask or some other tool to do this but so that when the Envoy calls a",
    "start": "1141220",
    "end": "1147040"
  },
  {
    "text": "co-pilot that resolves to the ingress gateway of our kubernetes cluster which",
    "start": "1147040",
    "end": "1152140"
  },
  {
    "text": "is a public IP you can use an ilb and then turn a load balancer to do this if you're in same network this is a public",
    "start": "1152140",
    "end": "1157930"
  },
  {
    "text": "IP address just for the purposes of this demo so the key thing to note here is that traffic that has to go from envoy",
    "start": "1157930",
    "end": "1163990"
  },
  {
    "text": "in the VM to the control plane on the cluster is going to go through the ingress gateway running on the cluster",
    "start": "1163990",
    "end": "1169200"
  },
  {
    "text": "there are data plane traffic so traffic that goes directly from the front-end to product catalog that can go direct papi",
    "start": "1169200",
    "end": "1176980"
  },
  {
    "text": "directly into the VM which we saw on the access log so I want to stress that our data plot path traffic does not get an",
    "start": "1176980",
    "end": "1182680"
  },
  {
    "text": "extra hop okay sweet so with all of that and actually I'm going to open up some",
    "start": "1182680",
    "end": "1189190"
  },
  {
    "text": "some you eyes here let me actually exit here so we have a service graph running",
    "start": "1189190",
    "end": "1194710"
  },
  {
    "text": "actually ok here the front end running and serving a list of products as if everything we're",
    "start": "1194710",
    "end": "1199780"
  },
  {
    "text": "running in kubernetes just by default this list of products is being served from the VM and that's what's generating",
    "start": "1199780",
    "end": "1207160"
  },
  {
    "text": "all this access logs we just saw and then we also have the key le service graph showing the relationships between",
    "start": "1207160",
    "end": "1213910"
  },
  {
    "text": "all the services in our cluster and on our VM so if we scroll in a little bit",
    "start": "1213910",
    "end": "1218950"
  },
  {
    "text": "here what we can see is that traffic from both front end and recommendation service is going into product catalog",
    "start": "1218950",
    "end": "1225490"
  },
  {
    "text": "service triangles in key ally represent kubernetes services and these little I guess it's a hexagon is that six sides",
    "start": "1225490",
    "end": "1232000"
  },
  {
    "text": "um that resent that represents an internal service entry if we click on",
    "start": "1232000",
    "end": "1237580"
  },
  {
    "text": "that this is that same yellow file we were showing before the idea here is we have registered a VM so that it's part",
    "start": "1237580",
    "end": "1243730"
  },
  {
    "text": "of our mesh just like a pod that's kind of the key thing to know we can see metrics for it again it's this",
    "start": "1243730",
    "end": "1249220"
  },
  {
    "text": "consistency piece for observability that we really want to bring home here ok so",
    "start": "1249220",
    "end": "1254620"
  },
  {
    "text": "we just went through the process of install and seeing what's going on in our environment let's actually apply some rules and policies across our pods",
    "start": "1254620",
    "end": "1262120"
  },
  {
    "text": "and our VMs to really see the sto functionality in place so the first",
    "start": "1262120",
    "end": "1267760"
  },
  {
    "text": "thing I'm going to do here is encrypt all the traffic so mutual TLS is a way",
    "start": "1267760",
    "end": "1273850"
  },
  {
    "text": "to you know encrypt traffic between services sto has a pretty easy way to do",
    "start": "1273850",
    "end": "1280000"
  },
  {
    "text": "this using a mesh policy and what I'm going to do is actually enforce em TLS",
    "start": "1280000",
    "end": "1285880"
  },
  {
    "text": "across the entire mesh across all namespaces and this will apply because we've registered our VM to the mesh this",
    "start": "1285880",
    "end": "1291820"
  },
  {
    "text": "will apply to product catalog as well even though it's running in the VM and the services don't know because the",
    "start": "1291820",
    "end": "1297100"
  },
  {
    "text": "envoys handling the MT LS everything with the services all the traffic will work the same way ok",
    "start": "1297100",
    "end": "1302560"
  },
  {
    "text": "demo - so SDF CTL is actually a really",
    "start": "1302560",
    "end": "1308610"
  },
  {
    "text": "functional tool it has a ton of commands we we saw it being used to register the VM into the mesh what we're using it for",
    "start": "1308610",
    "end": "1315790"
  },
  {
    "text": "here and sorry there's a whole lot of output is we're running this authentication TLS check on one of our",
    "start": "1315790",
    "end": "1321040"
  },
  {
    "text": "services and it's printing out all of them which is ok and we can see here in the output the key thing to note is that",
    "start": "1321040",
    "end": "1328210"
  },
  {
    "text": "on the client side and this Riverside all of our traffic to start is plain text it's unencrypted says HTTP",
    "start": "1328210",
    "end": "1334630"
  },
  {
    "text": "it's here it's actually G RPC for most of these but you'll know here product catalog is plain text what we're gonna",
    "start": "1334630",
    "end": "1341890"
  },
  {
    "text": "do here is apply - yamo files the first is a mesh policy that enforces m TLS and",
    "start": "1341890",
    "end": "1349210"
  },
  {
    "text": "the second is a destination rule we need to with this do 1.3 because we have to",
    "start": "1349210",
    "end": "1354580"
  },
  {
    "text": "do it on the client side and the server side hence the mutual TLS - luckily in this tio 1.4 and in the future you will",
    "start": "1354580",
    "end": "1361929"
  },
  {
    "text": "no longer need two resources you'll just need one but we didn't have time to upgrade so let's apply these gamma files",
    "start": "1361929",
    "end": "1367770"
  },
  {
    "text": "great now we have should hopefully have MPLS traffic for all of our services across the whole mesh we're gonna run",
    "start": "1367770",
    "end": "1374980"
  },
  {
    "text": "that same TLS check command and we can see here MTL sm TLS client-side server side we're all set to go if we open up",
    "start": "1374980",
    "end": "1382840"
  },
  {
    "text": "backup key Olly and if we display the security view sometimes it's it'll show",
    "start": "1382840",
    "end": "1388440"
  },
  {
    "text": "so this is time windowed so in the last you know certain amount of seconds of these all these little locks showed up",
    "start": "1388440",
    "end": "1394570"
  },
  {
    "text": "that represent traffic was both encrypted and unencrypted but if we go",
    "start": "1394570",
    "end": "1399730"
  },
  {
    "text": "back to just like the namespaces view we can see this little locks show up next to our default namespace saying M TLS is",
    "start": "1399730",
    "end": "1406270"
  },
  {
    "text": "enabled so what this demo was really designed to show is that with one y mo file one policy you can enforce rules",
    "start": "1406270",
    "end": "1413020"
  },
  {
    "text": "across environments pause and VMs great so I'm gonna hand it off to a mirror to",
    "start": "1413020",
    "end": "1418179"
  },
  {
    "text": "do the last demo which is all about traffic management awesome thank you so",
    "start": "1418179",
    "end": "1423760"
  },
  {
    "text": "what Megan showed you actually let me just go to this slide so we can kind of have a picture of what what we just did",
    "start": "1423760",
    "end": "1430150"
  },
  {
    "text": "right so right now one of the services is completely running outside of the cluster 100% of the time this is great",
    "start": "1430150",
    "end": "1436770"
  },
  {
    "text": "another thing we're starting to see is this use case of modernization which is I want to take this monolith and I want",
    "start": "1436770",
    "end": "1443470"
  },
  {
    "text": "to start slowly chipping it away and start container izing everything that we've heard in the last three days in keynotes and stuff one of the common",
    "start": "1443470",
    "end": "1450220"
  },
  {
    "text": "patterns is to run these services concurrently these processes as a pod or as a deployment inside of kubernetes as",
    "start": "1450220",
    "end": "1456220"
  },
  {
    "text": "well as inside of the VM like we were doing and then slowly kind of canary migrate that thing over so you're not",
    "start": "1456220",
    "end": "1462070"
  },
  {
    "text": "going to really do big bang thing this is kinda what I was talking about at the very beginning in terms of how is Josie is a service",
    "start": "1462070",
    "end": "1467929"
  },
  {
    "text": "service is just a DNS name and it decides how to route to a process right so I'm going to quickly show you how to",
    "start": "1467929",
    "end": "1474320"
  },
  {
    "text": "do that so let's go back to the CLI so",
    "start": "1474320",
    "end": "1479359"
  },
  {
    "text": "the first thing I'm going to do is I'm just going to run another product catalog service and a deployment on GK",
    "start": "1479359",
    "end": "1484549"
  },
  {
    "text": "cluster alright so all I've done is created just a plain vanilla deployment and a service and if we look at all the",
    "start": "1484549",
    "end": "1491179"
  },
  {
    "text": "services now now you'll notice that we have two product catalog services running the first one is the original",
    "start": "1491179",
    "end": "1496369"
  },
  {
    "text": "one that's the one that's running in the VM that's been up since for nine days and it has a cluster IP and everything",
    "start": "1496369",
    "end": "1503090"
  },
  {
    "text": "the second one named product catalog service - GK II is running on the GK cluster and that was created seven",
    "start": "1503090",
    "end": "1509869"
  },
  {
    "text": "seconds ago if you look at the endpoints of these services again we should see two endpoints now the first one the",
    "start": "1509869",
    "end": "1516499"
  },
  {
    "text": "product catalog service is pointing to the VM IP address but nope for nine days you've seen that and then the second one",
    "start": "1516499",
    "end": "1522109"
  },
  {
    "text": "is running as a pod or as a deployment inside of the kubernetes cluster and that has a pod IP here as well now",
    "start": "1522109",
    "end": "1528889"
  },
  {
    "text": "history provides yet another custom resource called a virtual service so you can think of a virtual service as a",
    "start": "1528889",
    "end": "1533929"
  },
  {
    "text": "route rule and you can encapsulate multiple resources multiple kubernetes resources inside of a virtual service so",
    "start": "1533929",
    "end": "1541519"
  },
  {
    "text": "let's quickly apply that on shall I apply it first and then I can we can inspect what that is doing so here's a",
    "start": "1541519",
    "end": "1546649"
  },
  {
    "text": "virtual service it picks a name which in this case is product catalog service and",
    "start": "1546649",
    "end": "1551899"
  },
  {
    "text": "then decides how to route that particular service which is done here in this route section in this case we have",
    "start": "1551899",
    "end": "1557179"
  },
  {
    "text": "given it to destinations the first one is product catalog service - gke so think of that as one of the backends to",
    "start": "1557179",
    "end": "1563570"
  },
  {
    "text": "that DNS hostname and we've given it a weight of 90 which is like 90% of the traffic goes to that and then the second",
    "start": "1563570",
    "end": "1569720"
  },
  {
    "text": "one is our original product catalog service running on the VM and we're using 10% of the traffic to that so if",
    "start": "1569720",
    "end": "1575539"
  },
  {
    "text": "we switch back to our service graph in key Ollie",
    "start": "1575539",
    "end": "1581169"
  },
  {
    "text": "what we should start seeing I'm just going to zoom in on the product catalog service you see that there are two",
    "start": "1582220",
    "end": "1587330"
  },
  {
    "text": "product catalog services this is the the Pentagon one is the original product catalog service that's the internal",
    "start": "1587330",
    "end": "1592639"
  },
  {
    "text": "service entry and then now we have this triangle one which is running inside of uber Nettie's as just a service as well",
    "start": "1592639",
    "end": "1599150"
  },
  {
    "text": "and then recommendation service is one of the services that's sending traffic to product catalog service and you can",
    "start": "1599150",
    "end": "1604520"
  },
  {
    "text": "see the split is almost ninety ten which is the one that we want is to kind of does a slow move to that so this is",
    "start": "1604520",
    "end": "1611360"
  },
  {
    "text": "something that you would add to your CD pipeline if you're migrating stuff over you can slowly start to migrate at",
    "start": "1611360",
    "end": "1616820"
  },
  {
    "text": "certain percentages you can start measuring the metrics make sure that everything is running good before you",
    "start": "1616820",
    "end": "1622520"
  },
  {
    "text": "kind of move everything over so another good use case everything was done declaratively we didn't have to do anything with with the BMS so I'm gonna",
    "start": "1622520",
    "end": "1629810"
  },
  {
    "text": "hand it back to Megan to close this out",
    "start": "1629810",
    "end": "1634750"
  },
  {
    "text": "yeah so I think the idea behind those demos and hopefully you know we in a perfect world we could show like a whole",
    "start": "1634900",
    "end": "1640460"
  },
  {
    "text": "bunch of demos all the sort of sto functionality for VMs we tried to highlight ones that really demonstrate",
    "start": "1640460",
    "end": "1645650"
  },
  {
    "text": "that you can use the same rule across environments um kind of in the most basic case for both security and for for",
    "start": "1645650",
    "end": "1652580"
  },
  {
    "text": "traffic management just to close out with a couple of best practices so you'll notice we kind of took a pretty",
    "start": "1652580",
    "end": "1657860"
  },
  {
    "text": "deliberate way of running through these demos and one had to do with the use of virtual services so the real power of a",
    "start": "1657860",
    "end": "1664910"
  },
  {
    "text": "virtual service rate is that you can have it apply to different kubernetes host names and in our case because of",
    "start": "1664910",
    "end": "1670760"
  },
  {
    "text": "the way we've rigged up our vm service to a service entry we did have to use two separate services for our pod and",
    "start": "1670760",
    "end": "1677690"
  },
  {
    "text": "our VM but with a virtual service we were actually able to really quickly do a migration slowly with the same policy",
    "start": "1677690",
    "end": "1685960"
  },
  {
    "text": "so yeah that's that's one best practice the other was the order in which we took",
    "start": "1685960",
    "end": "1691160"
  },
  {
    "text": "the demo so you'll notice that we started with observability then we did security and then we did traffic",
    "start": "1691160",
    "end": "1696400"
  },
  {
    "text": "generally when we talked to you users um a lot of the time it's like I I want to",
    "start": "1696400",
    "end": "1702080"
  },
  {
    "text": "adopt a CEO just so I can know what's happening in my apps and the moment of opening up that key Olly service graph for something like a two hundred micro",
    "start": "1702080",
    "end": "1708860"
  },
  {
    "text": "service application can really kind of be like a light bulb moment it's it's",
    "start": "1708860",
    "end": "1714410"
  },
  {
    "text": "helpful in that way but it's also I think the safest way to start using SDO just install it see what you get for",
    "start": "1714410",
    "end": "1719780"
  },
  {
    "text": "free then start applying rules and one of the reasons we say that is because if you're starting to see things like oh is",
    "start": "1719780",
    "end": "1726410"
  },
  {
    "text": "TOS adding a bunch of latency to my application it's actually helpful to know like what the latency is first so that you can get",
    "start": "1726410",
    "end": "1732140"
  },
  {
    "text": "that Delta second and lastly expose pilot and Citadel for this case the case",
    "start": "1732140",
    "end": "1738560"
  },
  {
    "text": "of needing a VM to talk to them there are different ways you can do it with an ILB or an ingress gateway which we",
    "start": "1738560",
    "end": "1744080"
  },
  {
    "text": "showed in our installation so with that these slides and the demos we use today",
    "start": "1744080",
    "end": "1750110"
  },
  {
    "text": "are pushed to github and on the inter Nets we also have Docs and samples for",
    "start": "1750110",
    "end": "1756230"
  },
  {
    "text": "you to use and yeah I'll pause on the slide for just a second um one thing to",
    "start": "1756230",
    "end": "1763850"
  },
  {
    "text": "note is that the sto community is really working hard to make this process easier so all of these different commands we",
    "start": "1763850",
    "end": "1768950"
  },
  {
    "text": "were talking about and all these resources that you need we recognize it's not zero effort so in the future",
    "start": "1768950",
    "end": "1775820"
  },
  {
    "text": "this process is probably going to get a whole lot easier so that you can really automate adding a lot of staple services",
    "start": "1775820",
    "end": "1782060"
  },
  {
    "text": "to your mesh if you're interested in collaborating on that whole process and reporting how things are working for you",
    "start": "1782060",
    "end": "1787610"
  },
  {
    "text": "we would love it if you could join the SCO environments working group those meetings love to have you we also have a",
    "start": "1787610",
    "end": "1793460"
  },
  {
    "text": "forum on it honesty Oh discuss and we have a slack and as always you know report any issues to github that you see",
    "start": "1793460",
    "end": "1799760"
  },
  {
    "text": "and the team is super great at responding to those so with that thank you so much for your time please enjoy",
    "start": "1799760",
    "end": "1805850"
  },
  {
    "text": "the rest of the conference thank you [Applause]",
    "start": "1805850",
    "end": "1813289"
  }
]