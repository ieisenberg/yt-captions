[
  {
    "start": "0",
    "end": "56000"
  },
  {
    "text": "welcome to the sig off deep dive session my name is Tim all Claire I'm one of the",
    "start": "900",
    "end": "7020"
  },
  {
    "text": "co-chairs of sig off and we thought you might all be a little tired of hearing",
    "start": "7020",
    "end": "12030"
  },
  {
    "text": "about solutions and new features that are going to solve all your problems so we thought we'd just offer you some",
    "start": "12030",
    "end": "17400"
  },
  {
    "text": "problems without solutions and so the first one of these I want to talk about",
    "start": "17400",
    "end": "23039"
  },
  {
    "text": "is add-on auth authentication and authorization there's a lot of different",
    "start": "23039",
    "end": "30769"
  },
  {
    "text": "features that are going to be run on the cluster to add functionality to the cluster as a few examples local volume",
    "start": "30769",
    "end": "38489"
  },
  {
    "text": "provisioning runs daemon sets on nodes and has a central control plane",
    "start": "38489",
    "end": "43649"
  },
  {
    "text": "component similarly device plugins and device metrics also have node level",
    "start": "43649",
    "end": "50039"
  },
  {
    "text": "plugins CRI streaming server and then there's a bunch of cluster level add-ons",
    "start": "50039",
    "end": "55770"
  },
  {
    "text": "as well and so the cluster level add-ons is mostly solved so for instance you",
    "start": "55770",
    "end": "63120"
  },
  {
    "text": "have a controller running somewhere in the cluster to talk to the API server it's going to authenticate the server",
    "start": "63120",
    "end": "69570"
  },
  {
    "text": "with the cluster CA that gets auto mounted with the alongside the service account token the client authentication",
    "start": "69570",
    "end": "76710"
  },
  {
    "text": "is done through service accounts and authorization typically done through our",
    "start": "76710",
    "end": "82110"
  },
  {
    "text": "back but any other authorizer would work as well once once the controller needs",
    "start": "82110",
    "end": "89850"
  },
  {
    "text": "to talk to node level daemon set components gets a little more complicated we don't currently have a",
    "start": "89850",
    "end": "96509"
  },
  {
    "text": "solution for the controller to validate that it's talking to the right daemon",
    "start": "96509",
    "end": "101729"
  },
  {
    "text": "set pod one solution we've kind of discussed is having an auto approval",
    "start": "101729",
    "end": "108630"
  },
  {
    "text": "flow along with per pod sorry Auto approval of a certificate",
    "start": "108630",
    "end": "115710"
  },
  {
    "text": "signing request along with per pod identity with enhanced service counts this could let us have a an ink lustre",
    "start": "115710",
    "end": "122640"
  },
  {
    "text": "special certificate that is kind of tied to that pod and by kind of embedding the",
    "start": "122640",
    "end": "130679"
  },
  {
    "text": "the pod UID and other pod data in the the certificate data this would",
    "start": "130679",
    "end": "137160"
  },
  {
    "text": "require a custom TLS validation flow and",
    "start": "137160",
    "end": "142320"
  },
  {
    "text": "so kind of custom client code but again would work for the controller",
    "start": "142320",
    "end": "148460"
  },
  {
    "text": "one other thing to mention here is this is sort of a problem that is solved by the service meshes but because these are",
    "start": "148460",
    "end": "157340"
  },
  {
    "text": "add-ons that we expect to run in most or maybe all in some cases deployment our",
    "start": "157340",
    "end": "163250"
  },
  {
    "text": "kubernetes clusters we can't depend on service masters to solve this for us",
    "start": "163250",
    "end": "169970"
  },
  {
    "text": "client authentication in this case is basically solved through service account",
    "start": "170370",
    "end": "176310"
  },
  {
    "text": "tokens and token the token review API especially with the enhancements adding",
    "start": "176310",
    "end": "183090"
  },
  {
    "text": "audiences to those tokens means that the the token can be dedicated to that",
    "start": "183090",
    "end": "189240"
  },
  {
    "text": "specific request and then authorizations similarly our back plus subject access",
    "start": "189240",
    "end": "195300"
  },
  {
    "text": "review so now going in the other direction this the authentication here",
    "start": "195300",
    "end": "203070"
  },
  {
    "text": "is mostly solved again using the cluster CA to validate the server service counts",
    "start": "203070",
    "end": "209240"
  },
  {
    "text": "with per pod identity for the daemons set pods and then for the authorization",
    "start": "209240",
    "end": "215790"
  },
  {
    "text": "piece we've discussed maybe using the Noda authorizer and extending that to",
    "start": "215790",
    "end": "221040"
  },
  {
    "text": "apply to daemon sets by checking where that pot is running again sort of an",
    "start": "221040",
    "end": "229470"
  },
  {
    "text": "open open question how to do this then finally for the daemon sets to talk to",
    "start": "229470",
    "end": "236280"
  },
  {
    "text": "the controller we so again we have this",
    "start": "236280",
    "end": "241890"
  },
  {
    "text": "kind of auto approval flow for certs potentially but here we probably don't",
    "start": "241890",
    "end": "247230"
  },
  {
    "text": "want a perp odd certificate we would want a service certificate so trying to",
    "start": "247230",
    "end": "253860"
  },
  {
    "text": "figure out some way of Auto approving that with the service account identity",
    "start": "253860",
    "end": "259970"
  },
  {
    "text": "client authentication is mostly solved with per pod identity and a token review",
    "start": "259970",
    "end": "266980"
  },
  {
    "text": "and then an authorization if we did the the node authorized are applied to the demon sets then it would also work with",
    "start": "266980",
    "end": "272980"
  },
  {
    "text": "subject access rutile and one thing to note about this is we don't necessarily",
    "start": "272980",
    "end": "279580"
  },
  {
    "text": "need to solve both this case and this case it's just kind of a pole versus a",
    "start": "279580",
    "end": "285670"
  },
  {
    "text": "push model and so we can often just flip the flip the direction of information",
    "start": "285670",
    "end": "292780"
  },
  {
    "text": "flow around so the next problem we",
    "start": "292780",
    "end": "299110"
  },
  {
    "start": "296000",
    "end": "398000"
  },
  {
    "text": "wanted to talk to you about is pod admission in policy we have a bunch of",
    "start": "299110",
    "end": "305230"
  },
  {
    "text": "built in policy controllers in kubernetes we have pod security policy",
    "start": "305230",
    "end": "310860"
  },
  {
    "text": "Network policy image policy a bunch of others they all work kind of slightly",
    "start": "310860",
    "end": "316660"
  },
  {
    "text": "differently especially when in the way that we bind the policy to the decide",
    "start": "316660",
    "end": "324280"
  },
  {
    "text": "whether this policy should be applied to this request so for pod security policy we check it against the the creating in",
    "start": "324280",
    "end": "333690"
  },
  {
    "text": "kind of the naive approach is to say does this user have permission to do this request the problem is users",
    "start": "333690",
    "end": "339970"
  },
  {
    "text": "typically don't create pods that create deployments or replica sets and so to",
    "start": "339970",
    "end": "345700"
  },
  {
    "text": "get around that we also check whether the pods service account about is",
    "start": "345700",
    "end": "351280"
  },
  {
    "text": "authorized to use that policy which is sort of counterintuitive network policy",
    "start": "351280",
    "end": "356560"
  },
  {
    "text": "is namespaced and then a pod selector determines which pods it is applied to image policy is delegated entirely to a",
    "start": "356560",
    "end": "364900"
  },
  {
    "text": "web hook and the review request itself includes the image annotations and",
    "start": "364900",
    "end": "370570"
  },
  {
    "text": "namespace so it's kind of up to the the web hook to decide which what to do with that limit ranger and resource quota are",
    "start": "370570",
    "end": "380310"
  },
  {
    "text": "basically namespaced Singleton's but kubernetes doesn't really support",
    "start": "380310",
    "end": "385920"
  },
  {
    "text": "singleton resources so this is kind of strange and toleration and nude selector",
    "start": "385920",
    "end": "392380"
  },
  {
    "text": "are also namespace Singleton's but this time just attached to the namespace object",
    "start": "392380",
    "end": "398820"
  },
  {
    "start": "398000",
    "end": "484000"
  },
  {
    "text": "so there's kind of a few patterns that fall out of here the first is just apply policy at the",
    "start": "399870",
    "end": "406830"
  },
  {
    "text": "namespace level this is my favorite it's consistent with authorization because",
    "start": "406830",
    "end": "412920"
  },
  {
    "text": "when you create an object the permission is checked against the namespace like do",
    "start": "412920",
    "end": "418710"
  },
  {
    "text": "you have create permission in the namespace but it can't really be applied",
    "start": "418710",
    "end": "424710"
  },
  {
    "text": "more granularly although I think we should also include label selectors personally the second one is basically",
    "start": "424710",
    "end": "434430"
  },
  {
    "text": "the the pod security policy approach which we already talked about it's it's counterintuitive it's not really any",
    "start": "434430",
    "end": "441270"
  },
  {
    "text": "more secure than just applying it at the namespace level because unless you have a second policy mechanism to limit",
    "start": "441270",
    "end": "448340"
  },
  {
    "text": "service accounts then you're just still checking permission at the namespace",
    "start": "448340",
    "end": "453510"
  },
  {
    "text": "level and pod security policy I'll mention also because it conflates this",
    "start": "453510",
    "end": "458700"
  },
  {
    "text": "with also checking the user it actually ends up with weaker security so for",
    "start": "458700",
    "end": "464730"
  },
  {
    "text": "instance if you want to run a privileged pod that needs to create other pods and",
    "start": "464730",
    "end": "470070"
  },
  {
    "text": "other namespaces that means that any pod that privileged pod creates is also",
    "start": "470070",
    "end": "475320"
  },
  {
    "text": "going to be able to be privileged potentially since you have to have a privileged pod security policy to run",
    "start": "475320",
    "end": "481620"
  },
  {
    "text": "that privilege pod in the first place and then the last approach is sort of",
    "start": "481620",
    "end": "488640"
  },
  {
    "start": "484000",
    "end": "550000"
  },
  {
    "text": "the one that kind of seems the most natural at first it's does the user have permission to to create this object and",
    "start": "488640",
    "end": "498900"
  },
  {
    "text": "so check the policy on the creation of the replica set or the job or deployment",
    "start": "498900",
    "end": "504480"
  },
  {
    "text": "by looking at the pod template but as soon as you start to think about how",
    "start": "504480",
    "end": "510500"
  },
  {
    "text": "this would actually be implemented it gets really quite complicated so the",
    "start": "510500",
    "end": "516510"
  },
  {
    "text": "first question is how do you handle the delegation to the controllers that actually create the pods and even if you",
    "start": "516510",
    "end": "523260"
  },
  {
    "text": "come up with some system of looking at the the pod template and comparing it to the actual pod that starts to break down",
    "start": "523260",
    "end": "528990"
  },
  {
    "text": "once you get into CR DS and third-party controllers",
    "start": "528990",
    "end": "533900"
  },
  {
    "text": "and what about mutations that happen on pod create so you might check the policy",
    "start": "534060",
    "end": "540149"
  },
  {
    "text": "on the the pod template but then the actual pod that gets created ends up looking different and it also doesn't",
    "start": "540149",
    "end": "546209"
  },
  {
    "text": "work for stateful policies like resource quota just to mention a few other",
    "start": "546209",
    "end": "552720"
  },
  {
    "start": "550000",
    "end": "812000"
  },
  {
    "text": "problems with this problem composability and conflict resolution are something",
    "start": "552720",
    "end": "558959"
  },
  {
    "text": "that we really need to think think about when creating policies so as soon as you",
    "start": "558959",
    "end": "564570"
  },
  {
    "text": "add mutation into the policy so for instance defaulting what happens if two",
    "start": "564570",
    "end": "569850"
  },
  {
    "text": "policies are trying to set two different default values which one do you select",
    "start": "569850",
    "end": "576620"
  },
  {
    "text": "also if you're mixing allow and deny policies than the ordering matters it",
    "start": "576620",
    "end": "582600"
  },
  {
    "text": "doesn't matter if you just have static non mutating deny only policies because",
    "start": "582600",
    "end": "588630"
  },
  {
    "text": "you can just check any of them in any order and if any of them deny similar",
    "start": "588630",
    "end": "595140"
  },
  {
    "text": "for if they're all allow so this is how our back works and and the authorizers",
    "start": "595140",
    "end": "601640"
  },
  {
    "text": "another kind of area of inconsistency is do we do domain-specific policies like",
    "start": "602240",
    "end": "607500"
  },
  {
    "text": "scheduling policy or image policy versus resource specific we don't really have",
    "start": "607500",
    "end": "614130"
  },
  {
    "text": "any resource specifics policies but it has been pitched as like what if we just had one pod restriction policy that",
    "start": "614130",
    "end": "621240"
  },
  {
    "text": "applied to every field on the pod and just anything you want to limit on the pod you can do other other areas we",
    "start": "621240",
    "end": "629880"
  },
  {
    "text": "discussed we're default allow versus default deny so what happens if you",
    "start": "629880",
    "end": "634980"
  },
  {
    "text": "don't actually have any policy objects created default oh wow is nice because",
    "start": "634980",
    "end": "642450"
  },
  {
    "text": "it's much easier to roll out so you can say turn on the controller and then as I",
    "start": "642450",
    "end": "648180"
  },
  {
    "text": "add policies to different namespaces I'm going to slowly scope down permissions so I don't necessarily need to have a",
    "start": "648180",
    "end": "654600"
  },
  {
    "text": "policy for everything in the cluster initially on the other hand default deny is more of a kind of fail closed",
    "start": "654600",
    "end": "662430"
  },
  {
    "text": "approach and a little safer from that perspective similarly for how we",
    "start": "662430",
    "end": "668750"
  },
  {
    "text": "actually specify the policy definition itself do we use white lists or black",
    "start": "668750",
    "end": "674779"
  },
  {
    "text": "lists what is the kind of matching pattern within the policy we already",
    "start": "674779",
    "end": "680149"
  },
  {
    "text": "talked about mutations and then the last one is kind of namespace vs. cluster level scoping so for instance in our",
    "start": "680149",
    "end": "689750"
  },
  {
    "text": "back we have both cluster and namespace rolls pod security policies our cluster",
    "start": "689750",
    "end": "697189"
  },
  {
    "text": "level objects we've talked about a bunch that we're namespace level and so kind",
    "start": "697189",
    "end": "702949"
  },
  {
    "text": "of figuring out what the right what the right level is here",
    "start": "702949",
    "end": "707889"
  },
  {
    "text": "sorry so if I understood the question correctly you're saying is default allow",
    "start": "727870",
    "end": "733960"
  },
  {
    "text": "really less secure than yeah so the",
    "start": "733960",
    "end": "745940"
  },
  {
    "text": "question is about default allow and and what are the kind of implications of that so the the the risk of default",
    "start": "745940",
    "end": "758630"
  },
  {
    "text": "allow is suppose you have a policy that is preventing some sort of dangerous operation and maybe you missed maybe you",
    "start": "758630",
    "end": "768200"
  },
  {
    "text": "had a namespace selector on it that said apply to all these pods and and you missed a namespace right and so now that",
    "start": "768200",
    "end": "774290"
  },
  {
    "text": "namespace didn't have any policy applied to it and suddenly you have you have the whole or maybe you delete a policy",
    "start": "774290",
    "end": "782090"
  },
  {
    "text": "thinking that it's not used and realized that oh wait this was the last one that was actually limiting this one",
    "start": "782090",
    "end": "787490"
  },
  {
    "text": "capability and now suddenly you've again opened up a whole",
    "start": "787490",
    "end": "792760"
  },
  {
    "text": "yeah yeah all right with that I think",
    "start": "797600",
    "end": "805440"
  },
  {
    "text": "I'll hand it off to Jordan",
    "start": "805440",
    "end": "809630"
  },
  {
    "start": "812000",
    "end": "890000"
  },
  {
    "text": "so I'm Jordan like it I worked in the sing-off area for a while just to be",
    "start": "812730",
    "end": "817920"
  },
  {
    "text": "clear we're putting the links to the issues here we would like more people to",
    "start": "817920",
    "end": "824280"
  },
  {
    "text": "be thinking about these things and kind of participating in the conversations about these work these lists of problems",
    "start": "824280",
    "end": "831510"
  },
  {
    "text": "are not just intended to paralyze us and never let us move forward but we do want",
    "start": "831510",
    "end": "837540"
  },
  {
    "text": "to kind of think deeply about the implications of these things before we set a direction and make sure that the",
    "start": "837540",
    "end": "842880"
  },
  {
    "text": "incremental things we do don't shoot us in the foot long term so I'm going to",
    "start": "842880",
    "end": "847950"
  },
  {
    "text": "talk about how API servers authenticate to web hooks so as extension mechanisms",
    "start": "847950",
    "end": "855000"
  },
  {
    "text": "have been added it's kind of a web hook all the things approach so initially we",
    "start": "855000",
    "end": "862230"
  },
  {
    "text": "had admission web hooks in the current release we have the ability to have",
    "start": "862230",
    "end": "868380"
  },
  {
    "text": "conversion web hooks for custom resources and audit web hooks for sending audit events out to external",
    "start": "868380",
    "end": "875370"
  },
  {
    "text": "sources and so you can have this model where the API server is sending data out",
    "start": "875370",
    "end": "880890"
  },
  {
    "text": "to some web hook and then in some cases like in mutating admission getting data",
    "start": "880890",
    "end": "887130"
  },
  {
    "text": "back or in conversion getting data back from the web hook so you might be asking why why does the API server need to",
    "start": "887130",
    "end": "895110"
  },
  {
    "start": "890000",
    "end": "962000"
  },
  {
    "text": "authenticate to a web hook and so there are a few reasons web hooks that accept",
    "start": "895110",
    "end": "900480"
  },
  {
    "text": "data need to know that the data they're being given is trustworthy so if an",
    "start": "900480",
    "end": "905850"
  },
  {
    "text": "audit web hook is gonna be logging like Jordan Liggett tried to access this secret I really want to only get that",
    "start": "905850",
    "end": "912540"
  },
  {
    "text": "audit event log if I actually tried to do that I don't want someone to be able to spoof that and like trigger responses",
    "start": "912540",
    "end": "918380"
  },
  {
    "text": "also Admission web books that take external actions something that might be recording quota or recording things in",
    "start": "918380",
    "end": "925950"
  },
  {
    "text": "an external system you don't want to be able to trigger that except if that action actually happened",
    "start": "925950",
    "end": "932540"
  },
  {
    "text": "and then on the flip side web hooks that return data like a mutating web hook we",
    "start": "932540",
    "end": "938390"
  },
  {
    "text": "only want to return data to the systems that should have access to it so if I create a deployment and one of the",
    "start": "938390",
    "end": "944060"
  },
  {
    "text": "things that gets injected is like a sidecar container with some information based on an external system we don't",
    "start": "944060",
    "end": "949910"
  },
  {
    "text": "want to give that information back to just anyone and then finally just from an availability perspective we only want",
    "start": "949910",
    "end": "955190"
  },
  {
    "text": "to do expensive work if the person asking us to do it is the right person",
    "start": "955190",
    "end": "960230"
  },
  {
    "text": "so the simple approach is to just add in",
    "start": "960230",
    "end": "965690"
  },
  {
    "start": "962000",
    "end": "1016000"
  },
  {
    "text": "credentials or a credential reference into the web book config so when you say I want to call out to this web book also",
    "start": "965690",
    "end": "971000"
  },
  {
    "text": "like point to this secret and have the API server like read a credential from the secret and attach it to the web book",
    "start": "971000",
    "end": "976430"
  },
  {
    "text": "request and that can work in some cases but it makes a couple of assumptions the first problem with that approach is that",
    "start": "976430",
    "end": "983450"
  },
  {
    "text": "you can't distinguish between API servers so if you have multiple API",
    "start": "983450",
    "end": "988580"
  },
  {
    "text": "servers and all of them are making articles or web book calls and they're just reading this shared credential you",
    "start": "988580",
    "end": "994280"
  },
  {
    "text": "don't have the ability to distinguish between them and then the second problem is that the queue API server is not the",
    "start": "994280",
    "end": "1001270"
  },
  {
    "text": "only one making calls to these web books so if you have other aggregated add-on servers you can't assume that they",
    "start": "1001270",
    "end": "1008860"
  },
  {
    "text": "should all have access to this this shared credential so if you kind of look at the the problem space you have on one",
    "start": "1008860",
    "end": "1019060"
  },
  {
    "start": "1016000",
    "end": "1068000"
  },
  {
    "text": "dimension you have whether uniform identity is okay or whether you want per caller identity so there are cases where",
    "start": "1019060",
    "end": "1025750"
  },
  {
    "text": "you're going to want to want uniform ID in it if you're calling out to an external service and it's maybe just a",
    "start": "1025750",
    "end": "1031600"
  },
  {
    "text": "crash logger and all you have is an API key and you don't care you want all your servers to call out to this crash logger",
    "start": "1031600",
    "end": "1037569"
  },
  {
    "text": "with the same key maybe that's fine for you but we need to preserve the ability to have per caller identity and in the",
    "start": "1037570",
    "end": "1044949"
  },
  {
    "text": "other dimension you have kind of how aware of kubernetes is this web book if it's an external crash logger it might",
    "start": "1044950",
    "end": "1050500"
  },
  {
    "text": "not know anything about kubernetes and it just wants a particular particular credential but on the other hand you",
    "start": "1050500",
    "end": "1057220"
  },
  {
    "text": "might have a web book that was built to interoperate with the kubernetes ecosystem and so it's aware of like",
    "start": "1057220",
    "end": "1062320"
  },
  {
    "text": "kubernetes tokens and can do token reviewed type type requests so if uniform identity is acceptable",
    "start": "1062320",
    "end": "1071550"
  },
  {
    "start": "1068000",
    "end": "1160000"
  },
  {
    "text": "then maybe the shared credential reference could work and so we're considering having that as an option not",
    "start": "1071550",
    "end": "1079720"
  },
  {
    "text": "the only option but an option for the various web hook configurations that you",
    "start": "1079720",
    "end": "1085420"
  },
  {
    "text": "could say when you call this what book use this credential and if uniform identity is acceptable that that could",
    "start": "1085420",
    "end": "1090910"
  },
  {
    "text": "be a possibility that's something we're considering if you're calling out to kubernetes aware web hooks then the work",
    "start": "1090910",
    "end": "1098470"
  },
  {
    "text": "that we're doing now to have these service account tokens that can be",
    "start": "1098470",
    "end": "1104110"
  },
  {
    "text": "generated on-demand and made very audience specific could be a solution so having an option on the web hook",
    "start": "1104110",
    "end": "1110620"
  },
  {
    "text": "configurations to say when you call me do so with a service account token",
    "start": "1110620",
    "end": "1117370"
  },
  {
    "text": "scoped to this web hook and then all those various API servers could request",
    "start": "1117370",
    "end": "1122380"
  },
  {
    "text": "that token as they were building requests to each web hook that's a",
    "start": "1122380",
    "end": "1128320"
  },
  {
    "text": "possibility as well and then this is where we're kind of scratching ahead",
    "start": "1128320",
    "end": "1133690"
  },
  {
    "text": "right now this is the the fourth quadrant and maybe important maybe not",
    "start": "1133690",
    "end": "1140560"
  },
  {
    "text": "we could probably do work to make the first ones better and possibly defer working on this",
    "start": "1140560",
    "end": "1147070"
  },
  {
    "text": "fourth but that is the that's the problem and kind of the ways we're",
    "start": "1147070",
    "end": "1152680"
  },
  {
    "text": "thinking about it and the use cases we're trying to preserve so Mike next",
    "start": "1152680",
    "end": "1159419"
  },
  {
    "text": "I'm gonna do a quick summary of the current state of the certificates API so",
    "start": "1159720",
    "end": "1166090"
  },
  {
    "start": "1160000",
    "end": "1327000"
  },
  {
    "text": "the certificates API has been around since I believe a 1/4 was introduced as",
    "start": "1166090",
    "end": "1171460"
  },
  {
    "text": "alpha beta by 1/6 that was almost two years ago at this point and it still",
    "start": "1171460",
    "end": "1177430"
  },
  {
    "text": "hasn't made it to GA so we have some fundamental issues with the API we're",
    "start": "1177430",
    "end": "1184990"
  },
  {
    "text": "debating whether they need to be addressed before we bring the the API to GA we know a lot of lot of users would",
    "start": "1184990",
    "end": "1192310"
  },
  {
    "text": "like to see this API become a ga API and where it hasn't had an",
    "start": "1192310",
    "end": "1198250"
  },
  {
    "text": "advocate to see it through the process so to highlight some of the issues we",
    "start": "1198250",
    "end": "1204850"
  },
  {
    "text": "have some structural changes that we would like to make to the API if you're familiar with the flow which was covered",
    "start": "1204850",
    "end": "1212380"
  },
  {
    "text": "yesterday and workload identity talk that I gave the approver is is",
    "start": "1212380",
    "end": "1218620"
  },
  {
    "text": "responsible for approving certificates however our CSRs however the approver",
    "start": "1218620",
    "end": "1224050"
  },
  {
    "text": "cannot modify CSRs and that's because we take a lot of information encoded in the",
    "start": "1224050",
    "end": "1229570"
  },
  {
    "text": "actual AAS and one csr object which is mutable after its creation so that that",
    "start": "1229570",
    "end": "1236760"
  },
  {
    "text": "causes situations where maybe you have an init container that wants to request a serving certificate for itself and all",
    "start": "1236760",
    "end": "1244030"
  },
  {
    "text": "the services that it backs however in order for that init container to discover generically the services that",
    "start": "1244030",
    "end": "1250720"
  },
  {
    "text": "that the pod backs it has to have broad read permission on the API so some of",
    "start": "1250720",
    "end": "1257740"
  },
  {
    "text": "these problems could be addressed by migrating some of those fields usages",
    "start": "1257740",
    "end": "1263290"
  },
  {
    "text": "and extensions out of the actual sn-1 body and into the CSR API object we also",
    "start": "1263290",
    "end": "1271030"
  },
  {
    "text": "have a very common feature request which is to allow multiple CAS to science",
    "start": "1271030",
    "end": "1277870"
  },
  {
    "text": "certificates for this ABI and have requesters select CSR from a certificate",
    "start": "1277870",
    "end": "1283900"
  },
  {
    "text": "from a specific hierarchy and the way",
    "start": "1283900",
    "end": "1289150"
  },
  {
    "text": "that the the final bullet the way that the API is today there's there's not",
    "start": "1289150",
    "end": "1295240"
  },
  {
    "text": "really a great guarantee that an operator can have around what actually",
    "start": "1295240",
    "end": "1301929"
  },
  {
    "text": "comes out of this API so we would like to and improve the visibility into the",
    "start": "1301929",
    "end": "1307570"
  },
  {
    "text": "certificate stream that is coming out of this API and some of these boats are",
    "start": "1307570",
    "end": "1313150"
  },
  {
    "text": "probably going to be solved after GA some before but we're looking on people",
    "start": "1313150",
    "end": "1318429"
  },
  {
    "text": "we're looking for people to work on any of these items I think that's everything",
    "start": "1318429",
    "end": "1325890"
  },
  {
    "text": "so that is a that is a whirlwind tour through some other like top of mind yes",
    "start": "1327580",
    "end": "1334780"
  },
  {
    "text": "[Music]",
    "start": "1337650",
    "end": "1340689"
  },
  {
    "text": "about certificates I had the impression that the API server and other components like couplet etc did not support",
    "start": "1343220",
    "end": "1350570"
  },
  {
    "text": "vocation yet is is that correct impression or not and are there plans to",
    "start": "1350570",
    "end": "1356240"
  },
  {
    "text": "address that within the scope of that or is that a different scope so I",
    "start": "1356240",
    "end": "1369130"
  },
  {
    "start": "1363000",
    "end": "1395000"
  },
  {
    "text": "revocation is somewhat independent of the certificates API just like certificate rotation its client-side",
    "start": "1369250",
    "end": "1375320"
  },
  {
    "text": "behavior and it's not part of the certificates API we have no plans",
    "start": "1375320",
    "end": "1380690"
  },
  {
    "text": "although there have been proposals to support revocation I think in general for cluster scoped certificates coming",
    "start": "1380690",
    "end": "1388490"
  },
  {
    "text": "out of the cluster root CA it's best to implement automation and very fast rotation even like crl based revocation",
    "start": "1388490",
    "end": "1398570"
  },
  {
    "start": "1395000",
    "end": "1432000"
  },
  {
    "text": "those those if you have a CR L that's valid for a day why not just issue a certificate for a day and and avoid the",
    "start": "1398570",
    "end": "1407510"
  },
  {
    "text": "problem of revocation which which is actually fairly complex and is not",
    "start": "1407510",
    "end": "1413450"
  },
  {
    "text": "perfect in itself however if somebody wants to come and implement revocation and it makes a lot of sense and solves",
    "start": "1413450",
    "end": "1419780"
  },
  {
    "text": "these cases we'd be happy to we'd be happy to e to hear it out and help",
    "start": "1419780",
    "end": "1425000"
  },
  {
    "text": "Shepherd that through but it is not in scope for the certificates API to GGA",
    "start": "1425000",
    "end": "1431500"
  },
  {
    "text": "migration interested thank you follow-up when you say like quick quick side thing",
    "start": "1431500",
    "end": "1436510"
  },
  {
    "start": "1432000",
    "end": "1482000"
  },
  {
    "text": "do you like what would you consider as fast like are we talking like hourly",
    "start": "1436510",
    "end": "1442460"
  },
  {
    "text": "maybe daily it's just to get an idea so it's a balance between availability and",
    "start": "1442460",
    "end": "1449360"
  },
  {
    "text": "security here so an hour you're taking a pretty hard",
    "start": "1449360",
    "end": "1455960"
  },
  {
    "text": "dependency on the API being up usually you can solve an outage of the API server within a day a bad situation",
    "start": "1455960",
    "end": "1462679"
  },
  {
    "text": "would be if your workloads began to authenticate because of some extended",
    "start": "1462679",
    "end": "1468140"
  },
  {
    "text": "API outage if CR ELLs are usually signed for 24 hours if you sign certificates",
    "start": "1468140",
    "end": "1474320"
  },
  {
    "text": "for 24 hours I think that's that's okay pretty good thanks it up yeah so we did",
    "start": "1474320",
    "end": "1483049"
  },
  {
    "start": "1482000",
    "end": "1512000"
  },
  {
    "text": "wanna leave some time for questions about this or any of the topics we talked about so yeah raise your hand and",
    "start": "1483049",
    "end": "1489350"
  },
  {
    "text": "we'll turn this into micro and I had a question about the certificate validation I mean I just my impression",
    "start": "1489350",
    "end": "1497030"
  },
  {
    "text": "was that it's based on the issuer of the certificate do you have plans to support like policy based validation like with",
    "start": "1497030",
    "end": "1505460"
  },
  {
    "text": "namespace can name constraints and things like that port name constraints",
    "start": "1505460",
    "end": "1517690"
  },
  {
    "start": "1512000",
    "end": "1576000"
  },
  {
    "text": "for server certificate validation we our",
    "start": "1518169",
    "end": "1524360"
  },
  {
    "text": "root CA in the cluster is not named constraint it's a single root and generally people don't deploy it was",
    "start": "1524360",
    "end": "1530679"
  },
  {
    "text": "subordinated CAS that could be named constrained it depends on how you want",
    "start": "1530679",
    "end": "1537320"
  },
  {
    "text": "to use name constraints I think the answer to that question depends a lot on what what you're trying to do spiffy has",
    "start": "1537320",
    "end": "1546669"
  },
  {
    "text": "has some concept of name constraints and also signing policy so you can actually",
    "start": "1546669",
    "end": "1553159"
  },
  {
    "text": "do a pretty expressive delegation that isn't even a lot in teal aspect so if",
    "start": "1553159",
    "end": "1560299"
  },
  {
    "text": "you have advanced to use cases I would actually recommend that you look at that spec I had one more question about the",
    "start": "1560299",
    "end": "1568820"
  },
  {
    "text": "previous slide the token request part",
    "start": "1568820",
    "end": "1574520"
  },
  {
    "text": "caller is the model going to be similar to like Kerberos where you get a service",
    "start": "1574520",
    "end": "1582049"
  },
  {
    "start": "1576000",
    "end": "1641000"
  },
  {
    "text": "ticket and a TTT to authenticate to audition externals",
    "start": "1582049",
    "end": "1588120"
  },
  {
    "text": "our it's not a PKI flow so the PKI aspects of Kerberos wouldn't apply as",
    "start": "1588120",
    "end": "1593710"
  },
  {
    "text": "much it's more of a an audience bound token so at the point where the the",
    "start": "1593710",
    "end": "1601270"
  },
  {
    "text": "caller was going to make a call to a web hook it would go obtain token bound to",
    "start": "1601270",
    "end": "1606370"
  },
  {
    "text": "that audience so it is affordable credential but because it's bound to the audience it's providing it to that's not",
    "start": "1606370",
    "end": "1612040"
  },
  {
    "text": "particularly concerning so that I mean maybe it's philosophically similar to",
    "start": "1612040",
    "end": "1617470"
  },
  {
    "text": "Kerberos like you get a per hour per call does it happen at runtime yeah but",
    "start": "1617470",
    "end": "1623290"
  },
  {
    "text": "it could so it could happen at runtime it could happen in a pre-populated way but because the tokens that token",
    "start": "1623290",
    "end": "1631000"
  },
  {
    "text": "request produces are time limited I would expect it to happen at runtime [Music]",
    "start": "1631000",
    "end": "1637459"
  },
  {
    "text": "and to be clear much of this is speculative this is these things could",
    "start": "1640710",
    "end": "1645910"
  },
  {
    "start": "1641000",
    "end": "1674000"
  },
  {
    "text": "work and are kind of the direction we're leaning but these are all forward-looking the question was about",
    "start": "1645910",
    "end": "1656290"
  },
  {
    "text": "are there well-defined flows like like oh awesome Oh auth hasn't typically applied so much",
    "start": "1656290",
    "end": "1661929"
  },
  {
    "text": "in server the server components so we're trying to leverage the mechanisms that",
    "start": "1661929",
    "end": "1667210"
  },
  {
    "text": "we have that we know we have access to by virtue of running in the kubernetes server the last slide you had a couple",
    "start": "1667210",
    "end": "1675250"
  },
  {
    "start": "1674000",
    "end": "1776000"
  },
  {
    "text": "of points there about approval flow issues and guarantees and issued certificates could you talk a little bit",
    "start": "1675250",
    "end": "1681390"
  },
  {
    "text": "could you provide a little more detail about what if she is saying there yes the currently the entity requesting the",
    "start": "1681390",
    "end": "1691210"
  },
  {
    "text": "certificate has to know everything about the certificate they want so the primary use was for node bootstrapping and so it",
    "start": "1691210",
    "end": "1699040"
  },
  {
    "text": "said I want a client certificate for this this subject in cases where it's",
    "start": "1699040",
    "end": "1704919"
  },
  {
    "text": "like a pod that needs to serve a secure server it knows that it wants a surfing",
    "start": "1704919",
    "end": "1710710"
  },
  {
    "text": "cert and it knows its own pod name but it doesn't necessarily know like all the",
    "start": "1710710",
    "end": "1716679"
  },
  {
    "text": "services that route to it and all of the subject alternative names and UIDs and various things so it can say please give",
    "start": "1716679",
    "end": "1723610"
  },
  {
    "text": "me a serving certain valid for me but it doesn't really know or have access to",
    "start": "1723610",
    "end": "1729190"
  },
  {
    "text": "all the other information it needs to populate all the requested subject call names and so having a phase where an",
    "start": "1729190",
    "end": "1736480"
  },
  {
    "text": "approver could say I see that you are this pod and I see that you are allowed to have a serving cert I as the central",
    "start": "1736480",
    "end": "1742809"
  },
  {
    "text": "approver will now go look and see what services are routing to you or what what",
    "start": "1742809",
    "end": "1748090"
  },
  {
    "text": "namespaces are applicable and populate additional information that should be",
    "start": "1748090",
    "end": "1753250"
  },
  {
    "text": "used by the signer as its generating the certificate so this is mediating the signing request before it goes out to",
    "start": "1753250",
    "end": "1760990"
  },
  {
    "text": "the issuer with additional attributes right so there's a request and then there's an additional information and",
    "start": "1760990",
    "end": "1767950"
  },
  {
    "text": "approval step and then issuing the concurrent",
    "start": "1767950",
    "end": "1773190"
  },
  {
    "text": "and certificates what kind of guarantees are you looking for so what I would like",
    "start": "1773190",
    "end": "1778890"
  },
  {
    "start": "1776000",
    "end": "1831000"
  },
  {
    "text": "is so Jordan just described a class of certificates that you might want to provision through the CSR API of which",
    "start": "1778890",
    "end": "1786060"
  },
  {
    "text": "are for serving certificates for workloads and then we have our class of certificates that we provision to",
    "start": "1786060",
    "end": "1792480"
  },
  {
    "text": "cubelets which is blank line credentials for cubelets and I would like to have very constrained profiles and that our",
    "start": "1792480",
    "end": "1800610"
  },
  {
    "text": "use case motivated rather than have a very generic API where you can have",
    "start": "1800610",
    "end": "1807270"
  },
  {
    "text": "certificates of all shapes flowing out of this API so I think it's more around",
    "start": "1807270",
    "end": "1812640"
  },
  {
    "text": "creating structured profiles of what are produced and then having very good",
    "start": "1812640",
    "end": "1817800"
  },
  {
    "text": "logging of what actually makes it out of that certificate API",
    "start": "1817800",
    "end": "1823370"
  },
  {
    "start": "1831000",
    "end": "1842000"
  },
  {
    "text": "yeah correct each certificate that comes out of this API conforms to a profile",
    "start": "1831010",
    "end": "1836090"
  },
  {
    "text": "and you have an understanding of the motivation of why the certificate was provisioned useful like has its own like",
    "start": "1836090",
    "end": "1845960"
  },
  {
    "text": "a mutual here is all the kind of things like if kubernetes can manage its",
    "start": "1845960",
    "end": "1851270"
  },
  {
    "text": "certificates Oh why we cannot use adventures for basically using visual",
    "start": "1851270",
    "end": "1857570"
  },
  {
    "text": "chairs with kubernetes without adding another layer so I the question is not",
    "start": "1857570",
    "end": "1866029"
  },
  {
    "text": "whether we are why are we using a misdeal why are we not using SDF or some",
    "start": "1866029",
    "end": "1871909"
  },
  {
    "text": "of these photos no no I'm just saying why the kubernetes itself cannot provide the music air eyes directly",
    "start": "1871909",
    "end": "1879200"
  },
  {
    "start": "1872000",
    "end": "1932000"
  },
  {
    "text": "yes so I think that the general",
    "start": "1879200",
    "end": "1886159"
  },
  {
    "text": "philosophy that I've had is that we want to enable very feature full",
    "start": "1886159",
    "end": "1891830"
  },
  {
    "text": "authentication systems to run on top of kubernetes so whatever we can do to secure our core infrastructure and allow",
    "start": "1891830",
    "end": "1900110"
  },
  {
    "text": "people to build integrations is is where we draw the line and if if somebody",
    "start": "1900110",
    "end": "1906230"
  },
  {
    "text": "wants a fully featured system like spire or is do we want to make we want to enable that use case on top of",
    "start": "1906230",
    "end": "1912529"
  },
  {
    "text": "kubernetes but we don't want to be in the business of implementing like credential policy all these different",
    "start": "1912529",
    "end": "1919520"
  },
  {
    "text": "aspects of is do that is do provides however if somebody wants to implement mutual TLS using our hooks that is much",
    "start": "1919520",
    "end": "1926600"
  },
  {
    "text": "lighter weight than then sto itself then we want to allow that as well each other",
    "start": "1926600",
    "end": "1932809"
  },
  {
    "start": "1932000",
    "end": "2006000"
  },
  {
    "text": "we make comment if you go to the previous slide and if the military is is",
    "start": "1932809",
    "end": "1938450"
  },
  {
    "text": "a natively in kubernetes and we can save some of that work here and then you can",
    "start": "1938450",
    "end": "1943940"
  },
  {
    "text": "still use in policy with music yes but and that's a lot of simplicity on this",
    "start": "1943940",
    "end": "1949669"
  },
  {
    "text": "nope ah yeah API server was a Koopa kubernetes web hook then I think Jim",
    "start": "1949669",
    "end": "1957289"
  },
  {
    "text": "actually talked about mutual TLS Forest Service accounts and you earlier slide yeah yeah that's what when",
    "start": "1957289",
    "end": "1964399"
  },
  {
    "text": "we were talking about client and server authentication in most cases we're using",
    "start": "1964399",
    "end": "1970880"
  },
  {
    "text": "service accounts for for client authentication but but for for server",
    "start": "1970880",
    "end": "1976490"
  },
  {
    "text": "authentication we're thinking about building some approver flows to approve",
    "start": "1976490",
    "end": "1981769"
  },
  {
    "text": "like dual server and client TLS certificates for kubernetes service accounts within the cluster and that's",
    "start": "1981769",
    "end": "1988429"
  },
  {
    "text": "the use case for that is mostly for securing core infrastructure components and would require changes to the the way",
    "start": "1988429",
    "end": "1997309"
  },
  {
    "text": "that those infrastructure components are making and receiving requests so it's not a general purpose solution for",
    "start": "1997309",
    "end": "2002740"
  },
  {
    "text": "everything yeah question about on the",
    "start": "2002740",
    "end": "2008019"
  },
  {
    "start": "2006000",
    "end": "2112000"
  },
  {
    "text": "quadrant side the like / okay / caller",
    "start": "2008019",
    "end": "2014860"
  },
  {
    "text": "identity so like the token request the",
    "start": "2014860",
    "end": "2020519"
  },
  {
    "text": "when you have like moles you start having multiple tokens and these are like sign book but created by the API",
    "start": "2021929",
    "end": "2027760"
  },
  {
    "text": "server has there been discussion about the scalability like around that and having a lot more potentially a lot more",
    "start": "2027760",
    "end": "2034360"
  },
  {
    "text": "tokens than your standard service kind of tokens that are rotating we have",
    "start": "2034360",
    "end": "2041490"
  },
  {
    "text": "started running scalability tests using some of the new token volumes so that",
    "start": "2041490",
    "end": "2047470"
  },
  {
    "text": "those have made it into our large cluster tests and keep mark tests and haven't introduced too much of an issue",
    "start": "2047470",
    "end": "2053530"
  },
  {
    "text": "I have a couple ideas that might be controversial around around I think if",
    "start": "2053530",
    "end": "2064210"
  },
  {
    "text": "we do eventually implement some sort of key binding of the token we can actually get rid of the audience field",
    "start": "2064210",
    "end": "2071310"
  },
  {
    "text": "[Music]",
    "start": "2071310",
    "end": "2074389"
  },
  {
    "text": "we have left there you go [Music] just around scalability so like",
    "start": "2076649",
    "end": "2082690"
  },
  {
    "text": "openshift runs some of the largest cube clusters in existence and probably our biggest pain point is we store so many",
    "start": "2082690",
    "end": "2088780"
  },
  {
    "text": "service accounts and all their secrets so we might gain some issues from having",
    "start": "2088780",
    "end": "2094540"
  },
  {
    "text": "a token request ephemeral tokens everywhere but I guarantee you will save so much space in etsy D your life will",
    "start": "2094540",
    "end": "2100359"
  },
  {
    "text": "be so much better",
    "start": "2100359",
    "end": "2102930"
  },
  {
    "text": "[Applause]",
    "start": "2108990",
    "end": "2113340"
  }
]