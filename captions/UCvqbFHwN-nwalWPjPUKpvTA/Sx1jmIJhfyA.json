[
  {
    "text": "hey everyone uh welcome to the introduction and deep dive for Sig",
    "start": "320",
    "end": "6319"
  },
  {
    "text": "instrumentation uh my name is Han I am a software engineer at Google I've been working on Sig instrumentation",
    "start": "6799",
    "end": "13559"
  },
  {
    "text": "instrumentation adjacent stuff for probably about five and a half years um this is and I'm Damian I've",
    "start": "13559",
    "end": "22560"
  },
  {
    "text": "been working like I'm working for rat as a software engineer and I'm a cal for sing instrumentation um and I've been working",
    "start": "22560",
    "end": "29400"
  },
  {
    "text": "on monitoring for almost four years now all these time in kubernetes uh although I focus more on Cub these days I'm still",
    "start": "29400",
    "end": "37000"
  },
  {
    "text": "heavily involved in s instumentation uh we have a number of",
    "start": "37000",
    "end": "43920"
  },
  {
    "text": "co-leads they are not present today but uh David Ashville and",
    "start": "43920",
    "end": "50199"
  },
  {
    "text": "um and branu yeah branu um so today uh this is going to be our",
    "start": "50199",
    "end": "58079"
  },
  {
    "text": "agenda we're going to go over Sig instrumentation um we're going to go over the basic",
    "start": "58079",
    "end": "64478"
  },
  {
    "text": "atomics of what we observe in kubernetes we're also going to go into Sig sub",
    "start": "64479",
    "end": "70200"
  },
  {
    "text": "projects and our future plans so the charter for Sig",
    "start": "70200",
    "end": "77360"
  },
  {
    "text": "instrumentation is basically to cover the best practices for observability in kubernetes and this is important since",
    "start": "77360",
    "end": "84520"
  },
  {
    "text": "everyone wants to know how to operate uh kubernetes clusters uh we stewarded various sigs",
    "start": "84520",
    "end": "92880"
  },
  {
    "text": "and the way that they instrument their components for instance a cube API server Cube schedule the cuet cube proxy",
    "start": "92880",
    "end": "101520"
  },
  {
    "text": "um and the way that they do this is generally with metrics logs traces",
    "start": "101520",
    "end": "107200"
  },
  {
    "text": "events uh we have a number of sub projects which help uh other people observe what's actually going on in",
    "start": "107200",
    "end": "115000"
  },
  {
    "text": "inside your kubernetes clusters like Cube State metrics uh metric server allows you to horizontally and",
    "start": "115000",
    "end": "121280"
  },
  {
    "text": "vertically vertically scale your kubernetes cluster so how do we do it we run a",
    "start": "121280",
    "end": "129679"
  },
  {
    "text": "bi-weekly Sig instrumentation meeting and Al on alternating weeks we run a",
    "start": "129679",
    "end": "135239"
  },
  {
    "text": "tria session where we go through uh GitHub issues and pull requests and",
    "start": "135239",
    "end": "141120"
  },
  {
    "text": "ensure that they are addressed we review code changes and we develop new features",
    "start": "141120",
    "end": "147599"
  },
  {
    "text": "um so if you guys have any ideas on how to improve instrumentation observability you should",
    "start": "147599",
    "end": "152840"
  },
  {
    "text": "join our sessions we also maintain uh the various sub projects and we have a number of sub",
    "start": "152840",
    "end": "159159"
  },
  {
    "text": "projects and Daman will'll go into that a little bit later so first I'm going to start with",
    "start": "159159",
    "end": "165800"
  },
  {
    "text": "logs uh logs are the most granular piece of data that you're going to have in",
    "start": "165800",
    "end": "171159"
  },
  {
    "text": "your kubernetes cluster um so when you are debugging an",
    "start": "171159",
    "end": "177760"
  },
  {
    "text": "issue often times the pinpointed stuff that you are looking at is going to be derived from logs and internally how",
    "start": "177760",
    "end": "184519"
  },
  {
    "text": "this works is we have this thing called kog it is forked from a library called golog and it is modified specifically",
    "start": "184519",
    "end": "192200"
  },
  {
    "text": "for kubernetes and if you see the code snippet you can see that we are basically",
    "start": "192200",
    "end": "198720"
  },
  {
    "text": "uh we understand the basic structure of objects uh of kubernetes objects so that",
    "start": "198720",
    "end": "204040"
  },
  {
    "text": "we can print these things out in various logs it conforms to a the logger",
    "start": "204040",
    "end": "209239"
  },
  {
    "text": "interface which is a generic um interface that allows you to inject uh",
    "start": "209239",
    "end": "214959"
  },
  {
    "text": "logging implementations into into whatever it is that logger is repping um this has allowed us to do a",
    "start": "214959",
    "end": "222159"
  },
  {
    "text": "number of things Upstream including structured logging and we're going to get into SEC uh currently are logs",
    "start": "222159",
    "end": "229439"
  },
  {
    "text": "default to text based format which means everything is just lines of text but uh",
    "start": "229439",
    "end": "236120"
  },
  {
    "text": "we also offer Json format uh not everyone realizes this I",
    "start": "236120",
    "end": "244040"
  },
  {
    "text": "think one of the things that we have been working on is structured logging uh so basically what we've done",
    "start": "244319",
    "end": "252239"
  },
  {
    "text": "in the past few years um is we have modified the call sites for all of our",
    "start": "252239",
    "end": "257560"
  },
  {
    "text": "logs so that well we are actually in the process of migrating it um all the call sites but we're about halfway",
    "start": "257560",
    "end": "265199"
  },
  {
    "text": "done uh we can actually annotate Logs with structured information about",
    "start": "265199",
    "end": "270479"
  },
  {
    "text": "kubernetes objects uh that way we can pass like pods or nodes and have like",
    "start": "270479",
    "end": "276800"
  },
  {
    "text": "node information or pod information uh automatically output in kubernetes",
    "start": "276800",
    "end": "281880"
  },
  {
    "text": "logs uh the reason why this is good is because it allows you to maintain the",
    "start": "281880",
    "end": "287880"
  },
  {
    "text": "necessary information that you want in your logs without necessarily having to pipe it through everywhere um this is",
    "start": "287880",
    "end": "293880"
  },
  {
    "text": "also very convenient to use because uh the way that we were outputting logs is",
    "start": "293880",
    "end": "299720"
  },
  {
    "text": "structured which means um you don't necessarily have to have uh very obtuse regular Expressions",
    "start": "299720",
    "end": "308440"
  },
  {
    "text": "parsing your logs uh there is a more systematic format",
    "start": "308440",
    "end": "314400"
  },
  {
    "text": "uh and I will show you what that looks like so basically we have things that",
    "start": "314400",
    "end": "321039"
  },
  {
    "text": "look like key values in the string based the text based format and if you see the",
    "start": "321039",
    "end": "328360"
  },
  {
    "text": "example then you can see the the Pod the pod's value here is Cube system Cube",
    "start": "328360",
    "end": "335120"
  },
  {
    "text": "DNS so this will automatically be output for any of the relevant logs um nested",
    "start": "335120",
    "end": "342919"
  },
  {
    "text": "in these call sites the same output can be output as",
    "start": "342919",
    "end": "350319"
  },
  {
    "text": "Json so you can optionally injust kubernetes logs in Json format and this makes stuff much more easy to injust you",
    "start": "350319",
    "end": "357639"
  },
  {
    "text": "don't even need any regular Expressions if you do stuff this way unless you're parsing uh a value from a Json",
    "start": "357639",
    "end": "365800"
  },
  {
    "text": "key uh this is actually quite convenient if you want to insert stuff into a database um because now you have stuff",
    "start": "365800",
    "end": "372360"
  },
  {
    "text": "in key value format one thing that we have been",
    "start": "372360",
    "end": "377599"
  },
  {
    "text": "working on recently is contextual logging so not only do we have structured logging where we can pass",
    "start": "377599",
    "end": "383319"
  },
  {
    "text": "like pod information node information to logs but now we're also piping context",
    "start": "383319",
    "end": "388639"
  },
  {
    "text": "so we can embed data in the context and have this automatically propagate uh to",
    "start": "388639",
    "end": "394479"
  },
  {
    "text": "relevant call sites so this again makes stuff easier to pass and log message is",
    "start": "394479",
    "end": "400599"
  },
  {
    "text": "more consistent uh it also makes the",
    "start": "400599",
    "end": "405880"
  },
  {
    "text": "kubernetes codebase a little bit more easy to parse because we're not passing a zillion things to every function",
    "start": "405880",
    "end": "413160"
  },
  {
    "text": "instead you can just uh embed it in the context and pass the context around which is go best practice and this data",
    "start": "413160",
    "end": "420840"
  },
  {
    "text": "becomes uh available to you in all of the relevant log",
    "start": "420840",
    "end": "425720"
  },
  {
    "text": "sites uh leading this initiative is Patrick um and we have a working group",
    "start": "426520",
    "end": "432919"
  },
  {
    "text": "called structured logging and they meet uh regularly uh Thursdays it seems like",
    "start": "432919",
    "end": "441000"
  },
  {
    "text": "at 15:30 British time um and they could use your help we're not completely done",
    "start": "441000",
    "end": "447440"
  },
  {
    "text": "migrating so um any anyone who wants to contribute is welcome to come and join the structured logging",
    "start": "447440",
    "end": "454960"
  },
  {
    "text": "group metrics is actually probably my favorite topic um this is the thing that I am most familiar with in kubernetes",
    "start": "455319",
    "end": "462440"
  },
  {
    "text": "and the thing that I have actively worked to improve the most in kubernetes uh we use Prometheus",
    "start": "462440",
    "end": "471840"
  },
  {
    "text": "and uh for those of you who don't know this is the basic architecture of Prometheus uh there is a client um",
    "start": "471840",
    "end": "479680"
  },
  {
    "text": "generally components expose a metric's endpoint with a metrics payload and",
    "start": "479680",
    "end": "485879"
  },
  {
    "text": "these metrics are scraped by some scraping agent and ingest it into a Time series database uh we are currently",
    "start": "485879",
    "end": "492479"
  },
  {
    "text": "actually exploring a push model so this is not actually been decided but it has",
    "start": "492479",
    "end": "499639"
  },
  {
    "text": "been a recent topic of discussion in our Sig meetings where we are thinking about",
    "start": "499639",
    "end": "505720"
  },
  {
    "text": "being able to push metrics uh directly to a Time series dat base um open",
    "start": "505720",
    "end": "512080"
  },
  {
    "text": "Telemetry style and uh while we haven't actually decided one way another it is",
    "start": "512080",
    "end": "518880"
  },
  {
    "text": "something that we are thinking about and if you are interested in this topic um you should join our meetings and we would love your feedback on",
    "start": "518880",
    "end": "525880"
  },
  {
    "text": "it so the way I got involved in kubernetes was actually um it's kind of",
    "start": "525880",
    "end": "533279"
  },
  {
    "text": "funny um we had metrics at Google",
    "start": "533279",
    "end": "540680"
  },
  {
    "text": "and you know various charts and alerts and every once in a while these charts",
    "start": "540680",
    "end": "547200"
  },
  {
    "text": "and alerts would just stop working and um so I would poke around try to figure",
    "start": "547200",
    "end": "552920"
  },
  {
    "text": "out what happened turns out that people would rename",
    "start": "552920",
    "end": "557640"
  },
  {
    "text": "metrics uh you actually can't rename metrics so when you're renaming a metric",
    "start": "558240",
    "end": "563440"
  },
  {
    "text": "what you're basically doing is you're deleting a metric and creating a brand new one so",
    "start": "563440",
    "end": "570040"
  },
  {
    "text": "uh when you have a chart which presumes the name of a metric and you change the",
    "start": "570040",
    "end": "575079"
  },
  {
    "text": "name of that metric that chart just does nothing uh you end up with no data so",
    "start": "575079",
    "end": "582279"
  },
  {
    "text": "there was this pretty big initiative uh that was happening called metrics overhaul and um in order to kind",
    "start": "582279",
    "end": "590720"
  },
  {
    "text": "of get the shape of the kubernetes code base uh into more proper Prometheus",
    "start": "590720",
    "end": "597640"
  },
  {
    "text": "um form there was a big refactoring that happened where we basically renamed all",
    "start": "597640",
    "end": "604640"
  },
  {
    "text": "of these metrics uh which would have basically broken all of your charts and",
    "start": "604640",
    "end": "612160"
  },
  {
    "text": "alerts um so this was not a great thing",
    "start": "612160",
    "end": "618480"
  },
  {
    "text": "so uh we started working on this thing called the metrics framework and uh the",
    "start": "618480",
    "end": "623959"
  },
  {
    "text": "reason why this is important is you don't want your charts to just start",
    "start": "623959",
    "end": "629560"
  },
  {
    "text": "stop working on some minor version boundary right that would be pretty undesirable youd have to rewrite these",
    "start": "629560",
    "end": "634600"
  },
  {
    "text": "things if the schema changes then you have to rewrite your alerts um and that",
    "start": "634600",
    "end": "640079"
  },
  {
    "text": "would be a pain and you know in kubernetes we really strive for uh",
    "start": "640079",
    "end": "645360"
  },
  {
    "text": "compatibility across versions so instead we decided to make metrics in",
    "start": "645360",
    "end": "651680"
  },
  {
    "text": "API um and so what we did was we wrapped the Prometheus libraries and we",
    "start": "651680",
    "end": "657760"
  },
  {
    "text": "annotated metrics with a stability level and what this allows us to do is we have",
    "start": "657760",
    "end": "663399"
  },
  {
    "text": "the static analysis framework and it basically ensures that",
    "start": "663399",
    "end": "668639"
  },
  {
    "text": "people are not mutating metrics or breaking them and their contracts um so that you can ensure that your charts and",
    "start": "668639",
    "end": "675600"
  },
  {
    "text": "your alerts will continue to function across minor version",
    "start": "675600",
    "end": "680800"
  },
  {
    "text": "boundaries and we have VAR stability levels we have stable we have beta we",
    "start": "681279",
    "end": "686680"
  },
  {
    "text": "have Alpha they have different stability guarantees uh the stability guarantees",
    "start": "686680",
    "end": "691800"
  },
  {
    "text": "you can see here in this table and um depending on your stability",
    "start": "691800",
    "end": "697800"
  },
  {
    "text": "level you will be able to reliably use your your charts and",
    "start": "697800",
    "end": "704200"
  },
  {
    "text": "metrics over the lifetime of that metric and deprecation follows rules which is",
    "start": "704200",
    "end": "710920"
  },
  {
    "text": "in the official kubernetes deprecation um",
    "start": "710920",
    "end": "716399"
  },
  {
    "text": "documentation so while we were building the stability framework we built this static analysis pipeline which allows us",
    "start": "717519",
    "end": "724399"
  },
  {
    "text": "to ensure that people aren't actually breaking the metrics that everyone here depends on um but this ended up being",
    "start": "724399",
    "end": "730839"
  },
  {
    "text": "actually quite useful for another reason like static analysis basically parses the entire kubernetes codebase and all",
    "start": "730839",
    "end": "737600"
  },
  {
    "text": "of the metric uh call sites and we realize we could actually autogenerate",
    "start": "737600",
    "end": "745040"
  },
  {
    "text": "metrics documentation from this because you're parsing the entire kubernetes code base you have references to all the",
    "start": "745040",
    "end": "750880"
  },
  {
    "text": "metrics so now we have autogenerated and uh documentation for all of the metrics",
    "start": "750880",
    "end": "757040"
  },
  {
    "text": "in the kubernetes codebase and you can see that in official kubernetes documentation website it's pretty",
    "start": "757040",
    "end": "765000"
  },
  {
    "text": "cool uh not only that but uh we instrumented our",
    "start": "766000",
    "end": "771920"
  },
  {
    "text": "instrumentation we have uh metrics about the number of stable metrics that you have the number of beta metric that you",
    "start": "773079",
    "end": "779600"
  },
  {
    "text": "have the number of alpha metrics we also added uh metrics to see",
    "start": "779600",
    "end": "789000"
  },
  {
    "text": "what features are enabled uh since across minor version boundaries you can have various features getting enabled",
    "start": "789000",
    "end": "796360"
  },
  {
    "text": "and um it's important to know what's going on in your cluster um more recently though we we",
    "start": "796360",
    "end": "804639"
  },
  {
    "text": "worked on this thing called component Health sis which I'm quite excited about",
    "start": "804639",
    "end": "809680"
  },
  {
    "text": "um but it basically exposes liveness and Readiness data in metrics format and the",
    "start": "809680",
    "end": "816199"
  },
  {
    "text": "reason why this is important is because we are currently working Upstream to",
    "start": "816199",
    "end": "821240"
  },
  {
    "text": "improve uh upgrades and what we'd like to do is to",
    "start": "821240",
    "end": "826360"
  },
  {
    "text": "plug these types of metrics into the upgrade sequence so that upgrades are",
    "start": "826360",
    "end": "832839"
  },
  {
    "text": "safer so like for instance Cube ADM uh progresses through a number of phases in",
    "start": "832839",
    "end": "839800"
  },
  {
    "text": "an upgrade sequence and currently while there are pre-flight checks to ensure that your upgrade doesn't bork out uh we",
    "start": "839800",
    "end": "847920"
  },
  {
    "text": "don't actually check to ensure that the kubernetes control plane has not",
    "start": "847920",
    "end": "855360"
  },
  {
    "text": "imploded uh before and after any sequence and by exposing liveness and",
    "start": "855360",
    "end": "861920"
  },
  {
    "text": "Readiness data from let's say the cube API server and the cube scheduler and controller manager we can actually check",
    "start": "861920",
    "end": "869440"
  },
  {
    "text": "for anomalies before and after the upgrade sequence and this will allow us",
    "start": "869440",
    "end": "875000"
  },
  {
    "text": "for instance to Halt an upgrade before destroying the cluster um so this is",
    "start": "875000",
    "end": "880959"
  },
  {
    "text": "part of a larger initiative that we are pursuing across a number of sigs um and",
    "start": "880959",
    "end": "887160"
  },
  {
    "text": "this is one of the constituent elements of that so exciting",
    "start": "887160",
    "end": "892360"
  },
  {
    "text": "stuff yeah so an talked about logs and metrics which have been there in",
    "start": "892360",
    "end": "897440"
  },
  {
    "text": "kubernetes for almost since the start essentially but more recently we've had it tracing as well to kubernetes um and",
    "start": "897440",
    "end": "905120"
  },
  {
    "text": "for those who don't know what distributed tracing is you essentially want to gather Telemetry data from",
    "start": "905120",
    "end": "911240"
  },
  {
    "text": "different sources and somehow merge them together in order to get a general view",
    "start": "911240",
    "end": "916440"
  },
  {
    "text": "of what's happening in your uh cluster um so if you were to take a request it",
    "start": "916440",
    "end": "922160"
  },
  {
    "text": "would essentially follow it through the the distributed system and give you like the exact uh time it to in each of these",
    "start": "922160",
    "end": "930040"
  },
  {
    "text": "steps um and it does that by propagating a trace context U from one system to",
    "start": "930040",
    "end": "937519"
  },
  {
    "text": "another um and so with that uh Trace context like for example uh if a user",
    "start": "937519",
    "end": "944079"
  },
  {
    "text": "were to make a query to a front end the front end would then make uh a query to",
    "start": "944079",
    "end": "949519"
  },
  {
    "text": "the back end but with a trace context so that the Telemetry data that the back end is as emitting would have a context",
    "start": "949519",
    "end": "957680"
  },
  {
    "text": "that could then be gathered and used to merge uh the data from both the front end and the back end together to know",
    "start": "957680",
    "end": "964560"
  },
  {
    "text": "what exactly happened to that request um and this would allow us to build a graph",
    "start": "964560",
    "end": "970519"
  },
  {
    "text": "um and a tree with like all the different steps uh that the request took and how long it took in each of these",
    "start": "970519",
    "end": "976519"
  },
  {
    "text": "steps um and to do that we are using the open Telemetry Library um and kind of",
    "start": "976519",
    "end": "982279"
  },
  {
    "text": "mentioned it but we are only using this library for uh tracing and not for metrics and logs at the moment",
    "start": "982279",
    "end": "990399"
  },
  {
    "text": "um so in kuber is like we have this kind of front end back end or back end and",
    "start": "990399",
    "end": "995600"
  },
  {
    "text": "embedded backend system and there are actually two components that we have that have this infrastructure and we",
    "start": "995600",
    "end": "1001759"
  },
  {
    "text": "really wanted to use tracing there uh which are first the Q API server and as in this example like I'm pretty sure a",
    "start": "1001759",
    "end": "1008959"
  },
  {
    "text": "lot of you have had to experience slowness in the API server and didn't really know what caused this particular",
    "start": "1008959",
    "end": "1015160"
  },
  {
    "text": "slowness it could be in the API Sur it could be at CD uh and our goal there was",
    "start": "1015160",
    "end": "1020399"
  },
  {
    "text": "to really be able to pinpoint where the slowness was coming from so by providing",
    "start": "1020399",
    "end": "1026000"
  },
  {
    "text": "a trace context uh in both the aps Ser request uh and the the request that is",
    "start": "1026000",
    "end": "1032079"
  },
  {
    "text": "made to hcd we can surface that information uh to the users and then it's easier to know what caused the",
    "start": "1032079",
    "end": "1038798"
  },
  {
    "text": "slowness um and the other component is cuet and most specifically the",
    "start": "1038799",
    "end": "1044798"
  },
  {
    "text": "relationship between cuet and the container runtime cuz that's where where the PO creation uh is happening and",
    "start": "1044799",
    "end": "1051600"
  },
  {
    "text": "that's the request that we want to measure cuz it's super useful to know",
    "start": "1051600",
    "end": "1057960"
  },
  {
    "text": "how long Port startup took and what cost loan is there like it could be the",
    "start": "1057960",
    "end": "1063039"
  },
  {
    "text": "creation of the container the creation of the sunbox um the image pulling from the registry could be many reasons uh",
    "start": "1063039",
    "end": "1069720"
  },
  {
    "text": "and as a cluster administrator that's something you want to know so that's why you invested heavily into these two",
    "start": "1069720",
    "end": "1075039"
  },
  {
    "text": "components uh and today it's available in kubernetes um and especially like it",
    "start": "1075039",
    "end": "1080240"
  },
  {
    "text": "has been better since 127 uh and since then we've invested a",
    "start": "1080240",
    "end": "1085400"
  },
  {
    "text": "lot uh in fixing the couple of bugs that we were reported and also like trying to",
    "start": "1085400",
    "end": "1090600"
  },
  {
    "text": "gather as much feedback early on to make sure that the feature uh was stable was",
    "start": "1090600",
    "end": "1096400"
  },
  {
    "text": "getting stable and ready to be consumed by uh the majority of the users uh we were initially targeting GA",
    "start": "1096400",
    "end": "1104039"
  },
  {
    "text": "for 130 but the time window already closed and we have graduated because",
    "start": "1104039",
    "end": "1109679"
  },
  {
    "text": "there was a kind of last minute bug that we have to fix for the cube API server um but uh we are on track to getting G",
    "start": "1109679",
    "end": "1117840"
  },
  {
    "text": "in the upcoming releases um so to give you an example of",
    "start": "1117840",
    "end": "1123520"
  },
  {
    "text": "what it would look like today for the relationship between the Q7 and CD uh this is like a Yer UI um where you I'm",
    "start": "1123520",
    "end": "1131000"
  },
  {
    "text": "pretty sure you cannot really see what the spawn refers to um but you can see that like there is one particular one",
    "start": "1131000",
    "end": "1137320"
  },
  {
    "text": "that is about like the the time it took for the request to be authenticated to the qpi server then you have the time",
    "start": "1137320",
    "end": "1143720"
  },
  {
    "text": "that it spent in the qpi server uh and as well the time that it spent in N CD",
    "start": "1143720",
    "end": "1149159"
  },
  {
    "text": "so you can see where an issue could arise and it's like a way better view than if you had just logs or simple",
    "start": "1149159",
    "end": "1157720"
  },
  {
    "text": "Matrix um and for cuet it's even more detailed because we are like there are more steps uh so you can know exactly",
    "start": "1157720",
    "end": "1164799"
  },
  {
    "text": "like how long took the creation of the sendbox how long took uh the image pulling and uh the creation of the the",
    "start": "1164799",
    "end": "1172080"
  },
  {
    "text": "actual container uh so it's super useful if you want to optimize SP startup which",
    "start": "1172080",
    "end": "1177679"
  },
  {
    "text": "uh is something that a lot of people are trying to do um and so I was saying that we are",
    "start": "1177679",
    "end": "1186000"
  },
  {
    "text": "going to work on making the feature G but that's not the only thing that we have in mind for tracing um and the",
    "start": "1186000",
    "end": "1192000"
  },
  {
    "text": "thing that we want to do is make it a first class citizens of the",
    "start": "1192000",
    "end": "1197039"
  },
  {
    "text": "observability um kind of uh user story in kubernetes cuz at the moment like the",
    "start": "1197039",
    "end": "1203120"
  },
  {
    "text": "current dinging path that user would take and kind of the old way of doing things is to First be alerted about the",
    "start": "1203120",
    "end": "1209600"
  },
  {
    "text": "problem look into metrics to find approximately where the issue is coming from and find particular patterns so in",
    "start": "1209600",
    "end": "1216640"
  },
  {
    "text": "m space a node or whatever it is and then based on this pattern look at the",
    "start": "1216640",
    "end": "1221919"
  },
  {
    "text": "logs and try to find what's happening um and for the traces like it's as a kind",
    "start": "1221919",
    "end": "1228520"
  },
  {
    "text": "of per case basis where sometime we will use them but not always sometime for the",
    "start": "1228520",
    "end": "1234840"
  },
  {
    "text": "for development during development Cycles but it's not very well integrated into uh the current structures of uh",
    "start": "1234840",
    "end": "1244760"
  },
  {
    "text": "debugging um and so what we want to do is that whenever a cluster admin would get notified for let's say SLO violation",
    "start": "1244760",
    "end": "1252400"
  },
  {
    "text": "um they would first look at the metric to know uh which request is slow and",
    "start": "1252400",
    "end": "1257919"
  },
  {
    "text": "then in the request Quest we would have examplars uh which would essentially tie a trace ID to the metric and this Trace",
    "start": "1257919",
    "end": "1266480"
  },
  {
    "text": "ID will be kind of an example Trace um of this particular Behavior so the",
    "start": "1266480",
    "end": "1272159"
  },
  {
    "text": "slowness um and so we could see this particular Trace uh in any tracing UI uh",
    "start": "1272159",
    "end": "1279159"
  },
  {
    "text": "and from this Trace then we could uh link that to particular logs hand",
    "start": "1279159",
    "end": "1284760"
  },
  {
    "text": "mention contextual logging was a thing so as part of cont logging we are thinking about injecting a span ID into",
    "start": "1284760",
    "end": "1292919"
  },
  {
    "text": "the logs so that you can jump from your actual spans to a like a group of logs",
    "start": "1292919",
    "end": "1299720"
  },
  {
    "text": "or just a log a log line and know exactly what's happening at that particular time in your cluster so that",
    "start": "1299720",
    "end": "1306080"
  },
  {
    "text": "would be super useful and make debugging more efficient um so that's mostly it for",
    "start": "1306080",
    "end": "1314159"
  },
  {
    "text": "tracing and observability signal in kubernetes but there are some gaps in the observability stories that we cannot",
    "start": "1314159",
    "end": "1320799"
  },
  {
    "text": "just cover in kubernetes cuz it might not fit all the users so we have some project for that I've listed four of",
    "start": "1320799",
    "end": "1327559"
  },
  {
    "text": "them but there are plenty of them as had mentioned but these are the main ones um so metrix server you probably",
    "start": "1327559",
    "end": "1336120"
  },
  {
    "text": "heard of this name although maybe you not too sure what it's doing because it's most likely installed by default um",
    "start": "1336120",
    "end": "1343440"
  },
  {
    "text": "but essentially like the S instrumentation is responsible for three uh different matrix apis it's not the",
    "start": "1343440",
    "end": "1350559"
  },
  {
    "text": "the API that Han was mentioning it's actual API endpoints where you would have actual uh",
    "start": "1350559",
    "end": "1356360"
  },
  {
    "text": "kubernetes resources that are served as metric such as like pod metrics non",
    "start": "1356360",
    "end": "1361640"
  },
  {
    "text": "metrics and so on um and Metric server would be one implementation of the",
    "start": "1361640",
    "end": "1366960"
  },
  {
    "text": "resource Matrix API in particular um it's the source of Truth for CU cutle",
    "start": "1366960",
    "end": "1373240"
  },
  {
    "text": "top which is used to introspect uh the autoscaling pipeline and it's also the source of of uh any or like if you have",
    "start": "1373240",
    "end": "1381000"
  },
  {
    "text": "it installed of uh resource metric based autoscaling so if you want to autoscale an application based on uh CPU",
    "start": "1381000",
    "end": "1388919"
  },
  {
    "text": "utilization uh with an HPA you are most likely to hit like a metric server that",
    "start": "1388919",
    "end": "1394679"
  },
  {
    "text": "would implement the resource Matrix API and it does that by um collecting",
    "start": "1394679",
    "end": "1400720"
  },
  {
    "text": "metric from cuet at fixed intervals and then serving them to the API server",
    "start": "1400720",
    "end": "1405760"
  },
  {
    "text": "whenever the user or the HPA controller is sending requests to get those metrics",
    "start": "1405760",
    "end": "1411880"
  },
  {
    "text": "uh for the purposes um to go even further like we'",
    "start": "1411880",
    "end": "1417000"
  },
  {
    "text": "noticed that just CPU and memory doesn't help much when you want to autoscale an application um like it's pretty basic",
    "start": "1417000",
    "end": "1424799"
  },
  {
    "text": "but if you want to let's say autoscale a web server based on the number of requests it's getting per second you",
    "start": "1424799",
    "end": "1431240"
  },
  {
    "text": "wouldn't be able to do that so we have the two other API which are custom and ex metrix one for for that purpose um",
    "start": "1431240",
    "end": "1438120"
  },
  {
    "text": "and so PRI adapter is one of the implementation ker another very successful cncf project is another",
    "start": "1438120",
    "end": "1444760"
  },
  {
    "text": "implementation um and this API would talk to third party application let's",
    "start": "1444760",
    "end": "1450120"
  },
  {
    "text": "say for pritus adapter it would be pritus like the third party monitoring back end that would collect",
    "start": "1450120",
    "end": "1456200"
  },
  {
    "text": "metric uh and then pritus adapter would just create these metrics based on the user input uh so it could be a HTTP",
    "start": "1456200",
    "end": "1464200"
  },
  {
    "text": "request per second and then uh serve that over to the API server and to let's",
    "start": "1464200",
    "end": "1469440"
  },
  {
    "text": "say the HPA controller so that can take autoscaling decision based on",
    "start": "1469440",
    "end": "1475399"
  },
  {
    "text": "that um one or I guess like the newest project that we've had that was recently",
    "start": "1475399",
    "end": "1481200"
  },
  {
    "text": "integrated into the sub project that we oversee is usage metric collector and it's it's meant to cover a gap that",
    "start": "1481200",
    "end": "1487840"
  },
  {
    "text": "we've had for years now which is that you cannot really do high frequency um",
    "start": "1487840",
    "end": "1494520"
  },
  {
    "text": "uh scraping of cuet or of any uh memory usage CPU usage and CPU capacity",
    "start": "1494520",
    "end": "1502960"
  },
  {
    "text": "metrics um in kubernetes because um C advisor is not very optimized and we've",
    "start": "1502960",
    "end": "1509000"
  },
  {
    "text": "tried to optimize it but so far we haven't been able to um and so usage",
    "start": "1509000",
    "end": "1515080"
  },
  {
    "text": "metrix collector Works around that to allow for 1 second scrape intervals um",
    "start": "1515080",
    "end": "1521200"
  },
  {
    "text": "and based on this high frequency scraping you can get more accurate dashboards um as well as faster",
    "start": "1521200",
    "end": "1527640"
  },
  {
    "text": "autoscaling um so that's super useful and that kind of bridge that Gap that we've had for",
    "start": "1527640",
    "end": "1534559"
  },
  {
    "text": "for a while um and it also allows you to perform aggregation at collection time",
    "start": "1534559",
    "end": "1539760"
  },
  {
    "text": "meaning that despite having so much data coming from uh cuet and from the system",
    "start": "1539760",
    "end": "1545000"
  },
  {
    "text": "you wouldn't get as much on your monitoring platform so the cost would be fairly minimal uh but the value is super",
    "start": "1545000",
    "end": "1552760"
  },
  {
    "text": "important the only problem at the moment is that it was written based on the cgroup Z1 API um and I'm not sure if you",
    "start": "1552760",
    "end": "1559159"
  },
  {
    "text": "know but there was a big change in the API between s Z1 and S of Z2 so we would",
    "start": "1559159",
    "end": "1564520"
  },
  {
    "text": "have to migrate it to V2 in order to work on the Clusters that are the most",
    "start": "1564520",
    "end": "1569919"
  },
  {
    "text": "up to date and are supporting V2 only uh so that's something that we are looking",
    "start": "1569919",
    "end": "1575120"
  },
  {
    "text": "into and are looking for contributors to help us achieve um and an example of a",
    "start": "1575120",
    "end": "1581320"
  },
  {
    "text": "configuration so the one of the main benefit is that you don't have to know prq at all which is uh blocking some of",
    "start": "1581320",
    "end": "1587880"
  },
  {
    "text": "the user sometime uh so that would be one of the example that you could get for the 99th percental of resource",
    "start": "1587880",
    "end": "1594480"
  },
  {
    "text": "utilization with a sampling rate of one second um pretty minimal and you would do that over all the containers and it",
    "start": "1594480",
    "end": "1601039"
  },
  {
    "text": "would generate the two metrics or two time series that you can see below and then you can query those uh if you",
    "start": "1601039",
    "end": "1606919"
  },
  {
    "text": "collect them on your mentoring platform um last but not least Cube",
    "start": "1606919",
    "end": "1612399"
  },
  {
    "text": "State metric um I guess one of the most active project that we own um it's a",
    "start": "1612399",
    "end": "1619880"
  },
  {
    "text": "simple exporter that generate pret style based metric out of kubernetes objects",
    "start": "1619880",
    "end": "1625600"
  },
  {
    "text": "um pods deployment stal Set uh any object really um and an example of that",
    "start": "1625600",
    "end": "1632600"
  },
  {
    "text": "would be uh these two metric uh that would give you like the number of replica um that you have in a deployment",
    "start": "1632600",
    "end": "1640279"
  },
  {
    "text": "and for example if you want to know uh when a roll rolling update was completed",
    "start": "1640279",
    "end": "1645760"
  },
  {
    "text": "you could know that by looking at the status as well uh at the updated replicas and you would like in your monitoring platform of your",
    "start": "1645760",
    "end": "1652960"
  },
  {
    "text": "choice you will be able to see what's happening inside of your cluster uh and it does that by always uh watching",
    "start": "1652960",
    "end": "1660039"
  },
  {
    "text": "changes made to the Q API server and reflecting them uh into like as metrics",
    "start": "1660039",
    "end": "1666000"
  },
  {
    "text": "to your monitoring uh to your yeah monitoring back end which could be promit or",
    "start": "1666000",
    "end": "1672039"
  },
  {
    "text": "anything um uh recent like one of the biggest feature we've introduced recently was the for custom resource",
    "start": "1672039",
    "end": "1679320"
  },
  {
    "text": "metrics so now it's possible to generate metrics based from your CRS and crds um",
    "start": "1679320",
    "end": "1686960"
  },
  {
    "text": "so now you can kind of reuse Cube State metric and extend it for your own",
    "start": "1686960",
    "end": "1692519"
  },
  {
    "text": "needs um and generate any metric that you want essentially um but the problem is that",
    "start": "1692519",
    "end": "1700000"
  },
  {
    "text": "the configuration is not very easy uh to understand and we are planning to",
    "start": "1700000",
    "end": "1705360"
  },
  {
    "text": "simplify it in a way that would allow us to both extend it more easily as well as",
    "start": "1705360",
    "end": "1711640"
  },
  {
    "text": "maintain it uh more easily as well and to do so we are planning to use cell which is the common expression language",
    "start": "1711640",
    "end": "1718159"
  },
  {
    "text": "that is starting to get widely used uh in the kubernetes ecosystem um and",
    "start": "1718159",
    "end": "1724279"
  },
  {
    "text": "another uh effort that we are going to pursue will be to move the configuration to a",
    "start": "1724279",
    "end": "1730240"
  },
  {
    "text": "crd um so yeah we are pretty I guess uh welcoming community so if you want to",
    "start": "1730720",
    "end": "1737320"
  },
  {
    "text": "join us uh we'd love to see you around uh the best way to interact with us is to uh join the S meetings um and said",
    "start": "1737320",
    "end": "1745880"
  },
  {
    "text": "that we have a meeting like once per week so uh you can join you can also participate in reviews do any kind of",
    "start": "1745880",
    "end": "1752320"
  },
  {
    "text": "contributions uh if you are interested in a particular sub project uh I've listed a couple of contacts that you can",
    "start": "1752320",
    "end": "1758480"
  },
  {
    "text": "reach out to on slack directly um to contribute like we're always seeking new people and we can always Mentor people",
    "start": "1758480",
    "end": "1765279"
  },
  {
    "text": "as well uh and we'd love to um so here you can find like the time of",
    "start": "1765279",
    "end": "1771159"
  },
  {
    "text": "our meetings uh the slack channel that we have all six have one uh and the",
    "start": "1771159",
    "end": "1776240"
  },
  {
    "text": "contacts for our share shares and leads so feel free to to reach out to any of",
    "start": "1776240",
    "end": "1781440"
  },
  {
    "text": "us and yeah thank you for",
    "start": "1781440",
    "end": "1785240"
  },
  {
    "text": "coming one one last thing um yeah so if you find that like the instrumentation",
    "start": "1787480",
    "end": "1793279"
  },
  {
    "text": "or observ observability pipeline isn't what you want and we're doing something",
    "start": "1793279",
    "end": "1798960"
  },
  {
    "text": "weird you should definitely come to our meetings especially if you have some ideas on how to improve it uh we",
    "start": "1798960",
    "end": "1806000"
  },
  {
    "text": "welcome yeah any contributions and any ideas to just make the experience better",
    "start": "1806000",
    "end": "1811600"
  },
  {
    "text": "so yeah so if you have any question feel",
    "start": "1811600",
    "end": "1817000"
  },
  {
    "text": "free to ask we have five minute to answer question I guess also",
    "start": "1817000",
    "end": "1822559"
  },
  {
    "text": "yeah all right we'll stay here for a bit so if you have want to ask us anything feel free to otherwise you can go feel",
    "start": "1826960",
    "end": "1833000"
  },
  {
    "text": "free thanks everyone",
    "start": "1833000",
    "end": "1839320"
  }
]