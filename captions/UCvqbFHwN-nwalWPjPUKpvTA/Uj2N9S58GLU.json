[
  {
    "text": "all right hi everybody thanks for coming to the open deep dive on at 5:20 on",
    "start": "60",
    "end": "7319"
  },
  {
    "text": "Wednesday right before the all attendee party so we're gonna talk about",
    "start": "7319",
    "end": "12690"
  },
  {
    "text": "something very exciting day which is policy that's my favorite way to kind of unwind",
    "start": "12690",
    "end": "18150"
  },
  {
    "text": "so I'm Tauron I'm an engineer at styro and I'm one of the co-creators of open",
    "start": "18150",
    "end": "23220"
  },
  {
    "text": "policy agent and I'm joined here by Tim who can introduce himself how y'all doing",
    "start": "23220",
    "end": "28260"
  },
  {
    "text": "Tim Hendricks the CTO it's Tyra one of the co-creators of OPA as well so what",
    "start": "28260",
    "end": "35100"
  },
  {
    "text": "we thought we'd do today is kind of talk a little bit about Oakland given an overview for people that might have kind of heard about it for the first time at",
    "start": "35100",
    "end": "42059"
  },
  {
    "text": "this conference and then we thought we'd do a bit of a use case deep dive and do some live coding and then kind of talk",
    "start": "42059",
    "end": "47789"
  },
  {
    "text": "about some new features that you know we've been working on and that we plan to work on in the near future so just as",
    "start": "47789",
    "end": "54449"
  },
  {
    "text": "like a just to get a gauge like how how many people here have heard about OPA for the first time at this conference",
    "start": "54449",
    "end": "61280"
  },
  {
    "text": "all right all right that's a pretty good pretty good number how many of you have",
    "start": "61280",
    "end": "66570"
  },
  {
    "text": "had heard of it before and had tried it out okay some and how many of you are",
    "start": "66570",
    "end": "72900"
  },
  {
    "text": "like maybe running it somewhere in production okay a few all right so I",
    "start": "72900",
    "end": "79860"
  },
  {
    "text": "think this is going to be a useful session for everybody in the room so you",
    "start": "79860",
    "end": "85110"
  },
  {
    "text": "know we talked about this a little bit in the keynote like kind of why OPA exists right and I think that like when",
    "start": "85110",
    "end": "91799"
  },
  {
    "text": "you look at the modern kind of like cloud native like ecosystem there's just",
    "start": "91799",
    "end": "97200"
  },
  {
    "text": "a lot of choice out there right and it feels like there's like this never-ending list of new projects to do",
    "start": "97200",
    "end": "103500"
  },
  {
    "text": "with you know CI CD and micro services and you know databases and programming",
    "start": "103500",
    "end": "109110"
  },
  {
    "text": "languages and runtime platforms and so on right and so if you work in a large",
    "start": "109110",
    "end": "114780"
  },
  {
    "text": "enterprise or a large organization that's just like a fact of life if you're if you're an architect or a",
    "start": "114780",
    "end": "120000"
  },
  {
    "text": "platform engineer or somebody you know a security engineer you just have to deal with this this diversity and the the",
    "start": "120000",
    "end": "128429"
  },
  {
    "text": "challenge is that every single one of those these kind of projects typically ends up almost reinventing the wheel",
    "start": "128429",
    "end": "133950"
  },
  {
    "text": "when it comes to policy and authorization and the result of that is is kind of an overall security posture",
    "start": "133950",
    "end": "140099"
  },
  {
    "text": "that's hard to assess and a kind of system that's harder to control and then on top of that you know a lot of the",
    "start": "140099",
    "end": "146340"
  },
  {
    "text": "like the older systems that help you kind of control access we're not really designed for you know modern",
    "start": "146340",
    "end": "151500"
  },
  {
    "text": "environments that are typically very dynamic where workloads are ephemeral where they come and go and where they're",
    "start": "151500",
    "end": "157830"
  },
  {
    "text": "kind of like operating in a self-service fashion right so this was sort of the problem that we that we saw when we",
    "start": "157830",
    "end": "163920"
  },
  {
    "text": "before we started the project and and so that's why we we thought you know let's let's try to fix this and so we we",
    "start": "163920",
    "end": "170010"
  },
  {
    "text": "basically created the open policy agent as a way to give you a tool that you could leverage to really you know",
    "start": "170010",
    "end": "175290"
  },
  {
    "text": "improve how systems are managed right so instead of you know putting policies on",
    "start": "175290",
    "end": "180329"
  },
  {
    "text": "wiki's or in spreadsheets you know we said there's a better way of doing this and so you know we started the open",
    "start": "180329",
    "end": "186090"
  },
  {
    "text": "policy agent and we we released it four years ago the links to change that's nice and and yeah and so like over the",
    "start": "186090",
    "end": "195120"
  },
  {
    "text": "last you know couple years we've seen a lot of different integrations get built for open and these are all examples of",
    "start": "195120",
    "end": "201049"
  },
  {
    "text": "integrations where people are actually running them in production right so you know you hear lots about how people are",
    "start": "201049",
    "end": "206370"
  },
  {
    "text": "using open for kubernetes around admission control you hear lots about how people are using it for micro",
    "start": "206370",
    "end": "211980"
  },
  {
    "text": "service API authorization but there's a long tail of use cases as well where people you know use open to control",
    "start": "211980",
    "end": "217920"
  },
  {
    "text": "access to sensitive data in in different kind of data lake environments where they use it in CI CD pipelines to you",
    "start": "217920",
    "end": "224519"
  },
  {
    "text": "know impose best practices on on applications and configuration we even have people that use open to restrict",
    "start": "224519",
    "end": "230609"
  },
  {
    "text": "SSH access to servers all right so you know open really is being used to unify",
    "start": "230609",
    "end": "237060"
  },
  {
    "text": "policy across the stack one of the things that we just recently launched was this little integration index on the",
    "start": "237060",
    "end": "243299"
  },
  {
    "text": "open website so we're trying to kind of collect all of the integrations that we know about into one place where you can",
    "start": "243299",
    "end": "249450"
  },
  {
    "text": "kind of go and browse and see see them there and in kind of one place and search for them and filter and just see",
    "start": "249450",
    "end": "255000"
  },
  {
    "text": "what's out there because I think a lot of the time people think Oh open purpose-built for kubernetes or it only does kubernetes but the fact is that",
    "start": "255000",
    "end": "260729"
  },
  {
    "text": "it's kind of widely applicable and and this is kind of showing off a little bit in the in the integration index actually",
    "start": "260729",
    "end": "266039"
  },
  {
    "text": "this this screenshots out of data it looks slightly different now there's been some new additions recently so you",
    "start": "266039",
    "end": "272890"
  },
  {
    "text": "know what is Opa Opa is a general-purpose policy engine and so what that means is that you can kind of",
    "start": "272890",
    "end": "278080"
  },
  {
    "text": "like use it to offload policy decision-making from your software now the reason we call it general-purpose is",
    "start": "278080",
    "end": "284650"
  },
  {
    "text": "because it works with all these different kinds of software so you know whether you're talking about kubernetes or envoy or Linux Pam you know you can",
    "start": "284650",
    "end": "293590"
  },
  {
    "text": "take OPA and you can use it to basically help enforce policy or authorization decisions in those in those technologies",
    "start": "293590",
    "end": "301440"
  },
  {
    "text": "the way that that OPA typically works with it's typically used is that",
    "start": "301440",
    "end": "306660"
  },
  {
    "text": "services like software is integrated with it to query OPA for policy decisions when they're needed so for",
    "start": "306660",
    "end": "312580"
  },
  {
    "text": "example if you were building a micro service and that micro service exposed an HTTP API then any time the service",
    "start": "312580",
    "end": "318880"
  },
  {
    "text": "received an HTTP request it would be programmed to call it - OPA and ask should this HTTP request be allowed and",
    "start": "318880",
    "end": "325510"
  },
  {
    "text": "open would take the rules and and whatever other data that were required for the policy decision and it would evaluate the the query against those",
    "start": "325510",
    "end": "333250"
  },
  {
    "text": "that those policies and produce a decision which would send back to the service to get enforced so the core",
    "start": "333250",
    "end": "338500"
  },
  {
    "text": "thing you're kind of doing here is you're decoupling policy decision-making from policy enforcement now one of the",
    "start": "338500",
    "end": "345940"
  },
  {
    "text": "one of the design decisions that we made when we started the project which is an important one was that OPA wasn't gonna be coupled to any project or domain",
    "start": "345940",
    "end": "353380"
  },
  {
    "text": "specific data model and so inside of these policy queries you can actually supply arbitrary JSON data you can",
    "start": "353380",
    "end": "361180"
  },
  {
    "text": "supply any JSON value you want so this can be a pod it could be a",
    "start": "361180",
    "end": "366250"
  },
  {
    "text": "representation of an HTTP API request so it contain things like the method and the path and the headers and so on or it",
    "start": "366250",
    "end": "373630"
  },
  {
    "text": "could be a representation of you know an ssh connection into a server and then similarly the decision that OPA sends",
    "start": "373630",
    "end": "379750"
  },
  {
    "text": "back to the service to be enforced can also be any JSON value so we have a simple API access control use case it",
    "start": "379750",
    "end": "386920"
  },
  {
    "text": "could be true or false but it could be any JSON value so you know it could be a string it could be an error message it",
    "start": "386920",
    "end": "393280"
  },
  {
    "text": "could be a set of strings it could be a set of error messages or it could be like a you know a complex JSON object so",
    "start": "393280",
    "end": "398980"
  },
  {
    "text": "when people first deployed OPA for admission control and kubernetes they would just have a policy that would",
    "start": "398980",
    "end": "404709"
  },
  {
    "text": "generate the admission review structure and send that back and that's like a deeply nested JSON object right so with",
    "start": "404709",
    "end": "411759"
  },
  {
    "text": "OPA it's kind of like just JSON coming in JSON being evaluated and JSON going out and so this is why we call it",
    "start": "411759",
    "end": "417909"
  },
  {
    "text": "general premise now obviously your your your policies have to understand the semantics of the input right they need",
    "start": "417909",
    "end": "426610"
  },
  {
    "text": "to understand that that's a pod represented in JSON and they need to make sense of that and similarly your",
    "start": "426610",
    "end": "432159"
  },
  {
    "text": "your service needs how it needs to know the semantics of the the decision coming back but on its own OPA doesn't and",
    "start": "432159",
    "end": "437979"
  },
  {
    "text": "that's why it's that's why it's general-purpose that's why you can use it for all of these different use cases",
    "start": "437979",
    "end": "443999"
  },
  {
    "text": "so what OPA actually gives you at a high level is kind of summarized here that",
    "start": "444029",
    "end": "449589"
  },
  {
    "text": "the kind of core thing that it provides is a high-level declarative language for expressing policy in and what that",
    "start": "449589",
    "end": "457179"
  },
  {
    "text": "language is really good at doing is helping you write rules that answer questions that are relevant to policy so",
    "start": "457179",
    "end": "462879"
  },
  {
    "text": "things like can this user perform this operation on this resource you know which invariants does this workload you",
    "start": "462879",
    "end": "469539"
  },
  {
    "text": "know would this workload violate if it were to be deployed or you know which records am i Amaya labs or is is is a user allowed to see and so since this",
    "start": "469539",
    "end": "477039"
  },
  {
    "text": "since we're you know operating with JSON everywhere OPA the language has kind of",
    "start": "477039",
    "end": "483249"
  },
  {
    "text": "built-in mechanisms for you know doing everything you'd expect with large complex hierarchical data so you can",
    "start": "483249",
    "end": "488589"
  },
  {
    "text": "kind of like dot into complex objects you can do scans over arrays you know",
    "start": "488589",
    "end": "494529"
  },
  {
    "text": "you can you can do all kinds of things when it comes to actually using OPA you can either run it you can use it as a",
    "start": "494529",
    "end": "500649"
  },
  {
    "text": "library it's written go so you can embed it quite easily into into go services and applications or you can run it as as",
    "start": "500649",
    "end": "506319"
  },
  {
    "text": "a daemon and the daemon is designed to be as lightweight as possible so you can use it as a sidecar or a host level",
    "start": "506319",
    "end": "511689"
  },
  {
    "text": "daemon or if you want to stand it up as a service you can but the way that we think of OPA as the like kind of creators of it is that it's meant to be",
    "start": "511689",
    "end": "517930"
  },
  {
    "text": "used as a host local cache for policy decision-making so we recommend that you take OPA and you run it as close to the",
    "start": "517930",
    "end": "524800"
  },
  {
    "text": "thing that needs decision-making as possible the reason why we recommend",
    "start": "524800",
    "end": "530259"
  },
  {
    "text": "that you do that is because if every single time OPA has to or the service has to get a decision it has call out over the network then you know",
    "start": "530259",
    "end": "538089"
  },
  {
    "text": "you like you're gonna pay a performance hit for that right there's gonna be extra latency introduced into the request path and if you're dealing with",
    "start": "538089",
    "end": "545139"
  },
  {
    "text": "say like a micro service architecture where you know several micro services might be involved in the servicing of a",
    "start": "545139",
    "end": "550600"
  },
  {
    "text": "top-level request then that starts to add up also importantly if every time",
    "start": "550600",
    "end": "555670"
  },
  {
    "text": "you have to make a decision you have to call out over the network then you're gonna be your availability is gonna be impacted by the network it's gonna be",
    "start": "555670",
    "end": "562059"
  },
  {
    "text": "impacted by the machine where hope is running on and so you know the model",
    "start": "562059",
    "end": "567069"
  },
  {
    "text": "that we recommend that you use is like you run Oprah as close to service as possible to reduce the impact on latency and reduce the impact on availability",
    "start": "567069",
    "end": "574089"
  },
  {
    "text": "now in order to make it possible to run it like that we made certain design",
    "start": "574089",
    "end": "579999"
  },
  {
    "text": "initiatives and one of those is that on its own open doesn't kind of bring any database into the picture so you can",
    "start": "579999",
    "end": "585100"
  },
  {
    "text": "deploy OPA it'll keep all of the policy and data that it uses to evaluate decisions in memory and when you ask it",
    "start": "585100",
    "end": "591249"
  },
  {
    "text": "for a decision it's not going to call out over the network to get anything else on its own so all the",
    "start": "591249",
    "end": "596709"
  },
  {
    "text": "decision-making can happen locally on that node now we do have mechanisms where you can like call out on the fly",
    "start": "596709",
    "end": "602920"
  },
  {
    "text": "inside the policy if you want but we recommend that as much as possibly you you avoid trying to do that if you don't",
    "start": "602920",
    "end": "608110"
  },
  {
    "text": "need to now obviously if you have a bunch of oppa's running around in your infrastructure and they're all storing",
    "start": "608110",
    "end": "613179"
  },
  {
    "text": "policy and data in memory you know you need some way to manage them you need a source of truth for the policy and the",
    "start": "613179",
    "end": "619540"
  },
  {
    "text": "data and so open exposes a set of management api's that let you do things like distribute policy down to it so we",
    "start": "619540",
    "end": "625299"
  },
  {
    "text": "have this thing called the bundle api where basically you can configure OPA to",
    "start": "625299",
    "end": "630509"
  },
  {
    "text": "periodically call out to a remote HTTP endpoint and request the latest version",
    "start": "630509",
    "end": "636670"
  },
  {
    "text": "of a set of policy and data and then OPA will you know the service will respond",
    "start": "636670",
    "end": "641709"
  },
  {
    "text": "and send that that gzipped our wall containing Rago files and json files down to open and it'll it'll activate",
    "start": "641709",
    "end": "646899"
  },
  {
    "text": "them we also have api's for visibility though so we have like a status api that",
    "start": "646899",
    "end": "653709"
  },
  {
    "text": "you can configure to receive status updates from OPA they tell tell you the version of the bundle that's the the",
    "start": "653709",
    "end": "659619"
  },
  {
    "text": "bundles that have been activated or whether there were any errors trying to activate the last version that it that",
    "start": "659619",
    "end": "665049"
  },
  {
    "text": "it got and then we also have a what we call the decision log api so the session log is basically a record of all",
    "start": "665049",
    "end": "671470"
  },
  {
    "text": "the policy decisions they've been made by OPA over the past few minutes let's say so every time you ask OPA for a",
    "start": "671470",
    "end": "677019"
  },
  {
    "text": "policy decision it keeps a little record of that in memory and what it'll do is",
    "start": "677019",
    "end": "682059"
  },
  {
    "text": "it'll periodically upload those records to a remote HTTP endpoint and the the powerful thing there is that inside",
    "start": "682059",
    "end": "687699"
  },
  {
    "text": "those decision log records you have the full extent of the input data the input JSON that was supplied to OPA in the",
    "start": "687699",
    "end": "693910"
  },
  {
    "text": "policy query you also have the revision of the policy bundle and you have the",
    "start": "693910",
    "end": "699910"
  },
  {
    "text": "decision that was made so you have a full record of the policy decision making process and so you can send that up you can use it for audit purposes",
    "start": "699910",
    "end": "705489"
  },
  {
    "text": "it's useful for a lot of other things like debug and test as well and so the",
    "start": "705489",
    "end": "710829"
  },
  {
    "text": "last thing I'd mention here is that OPA also kind of embodies this idea of policy as code and so it's got a kind of a rich tool chain that helps you build",
    "start": "710829",
    "end": "716589"
  },
  {
    "text": "test and debug your policies we have like an interactive shell that you can use to run queries interact with",
    "start": "716589",
    "end": "721779"
  },
  {
    "text": "policies kind of experiment with them we have a test framework so you can write like unit tests for your policies and",
    "start": "721779",
    "end": "727359"
  },
  {
    "text": "verify that they're correct before you go off and deploy them it's something that we recommend that people do when they when they're writing policy because",
    "start": "727359",
    "end": "733839"
  },
  {
    "text": "it's you know you want to make sure that it's correct we had one user that was like taking OPA and they were they had to ship it to a",
    "start": "733839",
    "end": "740350"
  },
  {
    "text": "customer and run it in an air-gapped environment for a hedge fund and the",
    "start": "740350",
    "end": "745629"
  },
  {
    "text": "ability that like to test their policies up front and gain you know confidence in the correctness before they handed this off into like an air-gapped environment",
    "start": "745629",
    "end": "752350"
  },
  {
    "text": "where they weren't gonna be able to go in and change anything was like instrumental in their success so the test framework is a really powerful",
    "start": "752350",
    "end": "758259"
  },
  {
    "text": "thing that you can you can use with OPA we also have like IDE into extensions so there's a vs code plug-in that you can",
    "start": "758259",
    "end": "764319"
  },
  {
    "text": "use to kind of develop the policies you can do interactive evaluation you can run tests you can get coverage it's",
    "start": "764319",
    "end": "770889"
  },
  {
    "text": "quite useful and we also have other things like tracing and profiling that are more sort of advanced all right so",
    "start": "770889",
    "end": "776889"
  },
  {
    "text": "this one I hand it over to Tim who's going to do a little bit of a use case deep dive so take it away thank you all",
    "start": "776889",
    "end": "785109"
  },
  {
    "text": "right so real quick we're gonna do a deep dive on kubernetes gives you sort",
    "start": "785109",
    "end": "792220"
  },
  {
    "text": "of an example of how the integration works we saw it in the abstract a moment ago so we'll see how that works with",
    "start": "792220",
    "end": "797739"
  },
  {
    "text": "kubernetes specifically and then we'll go ahead and do some live coding that's always fun for the audience all",
    "start": "797739",
    "end": "806589"
  },
  {
    "text": "right so this is sort of a zoom in on kubernetes we've heard a moment ago how",
    "start": "806589",
    "end": "813160"
  },
  {
    "text": "any service whether it's kubernetes or otherwise is going to be asking OPA for",
    "start": "813160",
    "end": "818470"
  },
  {
    "text": "decisions from time to time now in the Cooper Nettie's case this happens every time someone tries to create update or",
    "start": "818470",
    "end": "824800"
  },
  {
    "text": "delete a resource on the cluster and so as I would expect many people here",
    "start": "824800",
    "end": "830019"
  },
  {
    "text": "already know inside of the kubernetes api server there's a there's an entire pipeline that every request goes through",
    "start": "830019",
    "end": "836230"
  },
  {
    "text": "it starts with authentication who are you then goes on on to authorization auerbach and then finally goes to",
    "start": "836230",
    "end": "842889"
  },
  {
    "text": "admission and at admission control there are now validating web hooks there are",
    "start": "842889",
    "end": "848019"
  },
  {
    "text": "mutating web hooks as well but there are web hooks that you can set up and that is where OPA integrates so in this world",
    "start": "848019",
    "end": "854019"
  },
  {
    "text": "every time a new request comes into the cluster that request makes its way down to admission let's say and the",
    "start": "854019",
    "end": "860769"
  },
  {
    "text": "kubernetes api server hands that request over to OPA and then I'll show you an example of",
    "start": "860769",
    "end": "865929"
  },
  {
    "text": "this in a moment and then OPA makes the decision is this authorized or not and it returns an admission review response",
    "start": "865929",
    "end": "872019"
  },
  {
    "text": "that admission review response includes error messages that get returned to the",
    "start": "872019",
    "end": "877179"
  },
  {
    "text": "user all right this is a pretty standard this is the standard integration and and",
    "start": "877179",
    "end": "883209"
  },
  {
    "text": "there are different ways of embodying this but but that's what we're gonna see so that is OPA and then what we're gonna",
    "start": "883209",
    "end": "888790"
  },
  {
    "text": "do now is flip over and do a little bit of live coding ok so let's do this all",
    "start": "888790",
    "end": "899439"
  },
  {
    "text": "right all right anytime that I am",
    "start": "899439",
    "end": "905199"
  },
  {
    "text": "writing any sort of policy the first thing I do is I grab a sample of the",
    "start": "905199",
    "end": "910299"
  },
  {
    "text": "input that's going to be handed over to OPA so in this case from kubernetes that would be an admission review request and",
    "start": "910299",
    "end": "918279"
  },
  {
    "text": "so here on the right hand side you can see that written a job JSON what I'm",
    "start": "918279",
    "end": "923529"
  },
  {
    "text": "actually opening here is the Rago playground I forgot to mention this so this is a purpose-built editor that that is available that",
    "start": "923529",
    "end": "931480"
  },
  {
    "text": "allows you to not only do syntax highlighting and evaluation of policy but it also allows you to share that",
    "start": "931480",
    "end": "937149"
  },
  {
    "text": "policy with others and that's really helpful if you ever jump on a slack which we encourage definitely and you",
    "start": "937149",
    "end": "942850"
  },
  {
    "text": "have questions put it in the playground it's much easier to exchange ideas and tips over over the playground so on the",
    "start": "942850",
    "end": "950110"
  },
  {
    "text": "right-hand side that we see the input that oppa is going to receive in this particular example for those of you who",
    "start": "950110",
    "end": "956170"
  },
  {
    "text": "haven't seen an admission review object before this is the way it works the",
    "start": "956170",
    "end": "961600"
  },
  {
    "text": "request there is where all the actions that it gives you a kind here it's got",
    "start": "961600",
    "end": "966670"
  },
  {
    "text": "the usual group version kind as you would expect it tells you what namespace the object belongs to if it's belongs to",
    "start": "966670",
    "end": "972670"
  },
  {
    "text": "a namespace and then here under object is where we see what we would typically think of as the object that we're",
    "start": "972670",
    "end": "978490"
  },
  {
    "text": "handing over the kubernetes api server so it's got metadata here it's got its",
    "start": "978490",
    "end": "984310"
  },
  {
    "text": "got aspect because this is after all a pod it's got the containers there within",
    "start": "984310",
    "end": "990070"
  },
  {
    "text": "the spec it's got the init containers that's great and it's got an operation just create in this case alright so",
    "start": "990070",
    "end": "997029"
  },
  {
    "text": "that's an example of the input that's going to come into the OPA and now our job as policy authors is to go ahead and",
    "start": "997029",
    "end": "1003990"
  },
  {
    "text": "write whatever policy we care about right and so in this example what we're gonna do is ensure that all the images",
    "start": "1003990",
    "end": "1010440"
  },
  {
    "text": "that show up in a pod come from a trusted registry that registry is Huli",
    "start": "1010440",
    "end": "1016589"
  },
  {
    "text": "calm alright so the way we're gonna get this started is that we know what the",
    "start": "1016589",
    "end": "1021720"
  },
  {
    "text": "input is and so I as an author there's a little bit of boilerplate for often for kubernetes I won't bother showing you",
    "start": "1021720",
    "end": "1027959"
  },
  {
    "text": "the boilerplate but what I will show you is that is the core of the logic and the core of that logic at the end of the day is going to be we're going to be writing",
    "start": "1027959",
    "end": "1034069"
  },
  {
    "text": "denies statements and so as you would expect with OPA it's a policy language",
    "start": "1034069",
    "end": "1039120"
  },
  {
    "text": "we expect to be able to write a bunch of allows and denies so let's go ahead and start that here in OPA you're writing a",
    "start": "1039120",
    "end": "1046589"
  },
  {
    "text": "number of different rules we're here we're just going to write it deny and the first thing we're going to do is we're going to check that in fact we're",
    "start": "1046589",
    "end": "1053190"
  },
  {
    "text": "only going to be applying this rule to pods and so how do we do that well input here is a keyword for OPA",
    "start": "1053190",
    "end": "1058860"
  },
  {
    "text": "it is assigned to that value that you see on the right hand side and so if I do input dot request kind",
    "start": "1058860",
    "end": "1067680"
  },
  {
    "text": "kind then I can check that that is actually equal to pot all right input",
    "start": "1067680",
    "end": "1074040"
  },
  {
    "text": "table request icon another everybody I would expected kind of guess what that's going to do it does that you'd expect",
    "start": "1074040",
    "end": "1079200"
  },
  {
    "text": "alright so first we know it's a pod and now we want to check that all images come from this trusted registry well how",
    "start": "1079200",
    "end": "1084810"
  },
  {
    "text": "are we going to do that well we're gonna start the same way we're gonna start dotting down through that object in order to grab the list of containers",
    "start": "1084810",
    "end": "1091140"
  },
  {
    "text": "that exist so input dot request dot object dot spec dot containers well if",
    "start": "1091140",
    "end": "1099030"
  },
  {
    "text": "we kind of look at that okay so that's a that's an array of containers great okay but now we have an array of containers",
    "start": "1099030",
    "end": "1105360"
  },
  {
    "text": "so we don't want to dot down through it anymore we need to iterate all right how are we",
    "start": "1105360",
    "end": "1110910"
  },
  {
    "text": "gonna iterate well we're gonna iterate with some alright so we're gonna say that here there is some I and then we're",
    "start": "1110910",
    "end": "1119100"
  },
  {
    "text": "going to go ahead and actually grab after that I the image name so for each",
    "start": "1119100",
    "end": "1124440"
  },
  {
    "text": "of the elements in this containers array we have an image field so we'll go ahead and grab it and we'll assign it to a variable image name and now we just need",
    "start": "1124440",
    "end": "1135660"
  },
  {
    "text": "to check that this that if this image name fails to start with Huli calm then in fact we want to deny right so not",
    "start": "1135660",
    "end": "1141960"
  },
  {
    "text": "starts with starts with is what we call a built-in and OPA it's just a some pre-built code that helps us do things",
    "start": "1141960",
    "end": "1147870"
  },
  {
    "text": "like string manipulation and the like image name is Hui comm alright let's",
    "start": "1147870",
    "end": "1157560"
  },
  {
    "text": "give it let's give it a try they may see any bugs we're good I think okay we're good",
    "start": "1157560",
    "end": "1163410"
  },
  {
    "text": "alright let's go to try it isn't late it's late fine all right so let's go ahead here and hit this evaluate button",
    "start": "1163410",
    "end": "1169200"
  },
  {
    "text": "and resize the window so we can see the result oh wonderful all right deny is true so why is the night true because if",
    "start": "1169200",
    "end": "1175380"
  },
  {
    "text": "we look at the containers there's an image here engine X it does not come from hooli comm so that is denied this",
    "start": "1175380",
    "end": "1181320"
  },
  {
    "text": "is sort of incomplete though because what we all know is that we want more information back than simply no try",
    "start": "1181320",
    "end": "1188190"
  },
  {
    "text": "again what we want to be able to do is return error messages and so the way that we do that is that we go ahead and",
    "start": "1188190",
    "end": "1195440"
  },
  {
    "text": "add a term deny instead of a boolean verge open can return decisions that are",
    "start": "1195440",
    "end": "1201450"
  },
  {
    "text": "not just true false not just boolean's but could return any JSON object we're gonna actually turn deny into basically",
    "start": "1201450",
    "end": "1206970"
  },
  {
    "text": "a set think of a set is basically an array but here what we're going to do then is we're going to turn deny into a",
    "start": "1206970",
    "end": "1212490"
  },
  {
    "text": "set and we're going to do and we're going to return a set of error messages",
    "start": "1212490",
    "end": "1218040"
  },
  {
    "text": "back to the user so as printf pod contains an image from an untrusted",
    "start": "1218040",
    "end": "1226230"
  },
  {
    "text": "registry the and do image name and name",
    "start": "1226230",
    "end": "1233070"
  },
  {
    "text": "all right that's right",
    "start": "1233070",
    "end": "1239570"
  },
  {
    "text": "all right wonderful okay so now we've got little bit more information deny your pod contains an image from okay",
    "start": "1240150",
    "end": "1245310"
  },
  {
    "text": "it's Engine X as we would expect that's wonderful that's great oh and this is typically how we write policies for",
    "start": "1245310",
    "end": "1251670"
  },
  {
    "text": "kubernetes we do actually turn return a set and then that met those error messages get sent back to the to the",
    "start": "1251670",
    "end": "1256950"
  },
  {
    "text": "user but there's a bug anybody see it",
    "start": "1256950",
    "end": "1262820"
  },
  {
    "text": "just a head nod that's true that's very",
    "start": "1262820",
    "end": "1268080"
  },
  {
    "text": "good that's a very deep question though work work I mentioned this earlier if we",
    "start": "1268080",
    "end": "1273930"
  },
  {
    "text": "look at the input containers is one of the fields under spec but so is init",
    "start": "1273930",
    "end": "1281340"
  },
  {
    "text": "containers look okay so we should be checking both the containers in the init containers let's say so one way to do",
    "start": "1281340",
    "end": "1287250"
  },
  {
    "text": "this is to just take this rule and we can make a copy of it and then we can just go in here and change containers to",
    "start": "1287250",
    "end": "1294510"
  },
  {
    "text": "init containers and then we should be good of course that's not well let's see if",
    "start": "1294510",
    "end": "1300420"
  },
  {
    "text": "it work okay well that's great so now we get to answers pod that's engine X and",
    "start": "1300420",
    "end": "1305550"
  },
  {
    "text": "busy box I didn't really show you but busy box is one of the init containers okay so that's okay fine but at the same",
    "start": "1305550",
    "end": "1313650"
  },
  {
    "text": "time nobody if you're writing code would copy and paste like that so what we might want to do is actually go ahead",
    "start": "1313650",
    "end": "1319860"
  },
  {
    "text": "and add an abstraction here so one of the interesting things is that with OPA allow and and I are not keywords they're",
    "start": "1319860",
    "end": "1326460"
  },
  {
    "text": "just they're just more variables you just get to make them whatever you want and so in addition to that we can we can",
    "start": "1326460",
    "end": "1332670"
  },
  {
    "text": "build our own we can build a helper here called container of ste we're gonna make",
    "start": "1332670",
    "end": "1338220"
  },
  {
    "text": "it another set and what we're going to do is we're going to make this true of all of the containers as well as the",
    "start": "1338220",
    "end": "1344810"
  },
  {
    "text": "init containers so if we do C equals of",
    "start": "1344810",
    "end": "1351960"
  },
  {
    "text": "I and I should make that a some okay so now what we're saying here is go ahead",
    "start": "1351960",
    "end": "1357210"
  },
  {
    "text": "and grab all the containers and the object go ahead and grab all of the init",
    "start": "1357210",
    "end": "1363750"
  },
  {
    "text": "containers and the object and now I've got this set containers which I can use however I like but I'm gonna use it",
    "start": "1363750",
    "end": "1370680"
  },
  {
    "text": "inside of the rule so let's give this guy I don't need him anymore and so",
    "start": "1370680",
    "end": "1377390"
  },
  {
    "text": "now instead of this I'm gonna do input it's gonna be let's just do container C",
    "start": "1377390",
    "end": "1382910"
  },
  {
    "text": "and let's just do it this way I see that image name see that image yes see what",
    "start": "1382910",
    "end": "1391549"
  },
  {
    "text": "so we see some see some I just see oh thank ya air programming okay great okay",
    "start": "1391549",
    "end": "1400970"
  },
  {
    "text": "so now assuming this is all right evaluate it hopefully it'll work one of",
    "start": "1400970",
    "end": "1406250"
  },
  {
    "text": "the things that's happening here is that when I hit evaluate I'm actually evaluating all of those symbols in the in the policy and so what you see is",
    "start": "1406250",
    "end": "1412429"
  },
  {
    "text": "output here as containers is coming in why because that was a symbol defined in the in the package down below we also",
    "start": "1412429",
    "end": "1419419"
  },
  {
    "text": "see deny and denies also defined in the package one of the things we use all the time here is that we can go ahead and",
    "start": "1419419",
    "end": "1424790"
  },
  {
    "text": "highlight portions of the policy in order to do a partial evaluation of it it was a wrong poor choice of words",
    "start": "1424790",
    "end": "1431600"
  },
  {
    "text": "there if we want to evaluate just a part of the policy then we can do it that way",
    "start": "1431600",
    "end": "1436610"
  },
  {
    "text": "if you like and I'll I will stop here very quickly you can even highlight entire fragments of the policy and ask",
    "start": "1436610",
    "end": "1443870"
  },
  {
    "text": "for an evaluation and there are different reasons for doing that but we're running on time okay",
    "start": "1443870",
    "end": "1451900"
  },
  {
    "text": "oh okay let's go through that all right let's switch I'll get it back over to Turin to start talking about new",
    "start": "1455860",
    "end": "1462340"
  },
  {
    "text": "features great thanks Tim so you know what we announced at the keynote was this new",
    "start": "1462340",
    "end": "1468519"
  },
  {
    "text": "ability to take Rago policies and basically compile them into webassembly",
    "start": "1468519",
    "end": "1473980"
  },
  {
    "text": "and actually before I get into this you know a bunch of the things we're going to talk about right now might seem a little bit like weird but they're all",
    "start": "1473980",
    "end": "1480970"
  },
  {
    "text": "kind of like around this idea of improving the performance of policy evaluations that's sort of the theme that we have right now is to kind of you",
    "start": "1480970",
    "end": "1487269"
  },
  {
    "text": "know sort of deliver a bunch of optimizations that really allow open to be used in some new ways that are quite interesting so what we added in the most",
    "start": "1487269",
    "end": "1495519"
  },
  {
    "text": "recent what we completed in the most recent release was like an incremental set of work to be able to take Rago policies and compile them down into",
    "start": "1495519",
    "end": "1502149"
  },
  {
    "text": "webassembly webassembly is this standard instruction format for a virtual machine",
    "start": "1502149",
    "end": "1507600"
  },
  {
    "text": "that's supported by the major browsers it allows you to take arbitrary code and",
    "start": "1507600",
    "end": "1512830"
  },
  {
    "text": "get it compiled down and have it run in the browser so you can write you know a front-end in go or rust or whatever but",
    "start": "1512830",
    "end": "1518320"
  },
  {
    "text": "it also supports this idea of a non web embedding and there are all these different products and companies and",
    "start": "1518320",
    "end": "1523330"
  },
  {
    "text": "projects they're adding kind of web assembly runtimes into there into the",
    "start": "1523330",
    "end": "1528880"
  },
  {
    "text": "into the code so that they can be extended or you know support kind of like new new new new types of",
    "start": "1528880",
    "end": "1534130"
  },
  {
    "text": "applications and so we thought would be great if we could leverage those those existing web assembly runtimes with OPA",
    "start": "1534130",
    "end": "1539950"
  },
  {
    "text": "and so we started working on this and so now what you can do is you can use OPA to take your policies and compile them",
    "start": "1539950",
    "end": "1546669"
  },
  {
    "text": "into web assembly there are two ways of kind of doing this one is just on the command line so you can give OPA",
    "start": "1546669",
    "end": "1552460"
  },
  {
    "text": "basically the the policies it could be one or more policies and then a query to",
    "start": "1552460",
    "end": "1558539"
  },
  {
    "text": "to compile and then what open does is it basically takes that that query and those policies and it generates a plan",
    "start": "1558539",
    "end": "1564850"
  },
  {
    "text": "and then it compiles that plan into a web assembly binary so this is something you'd probably end up doing in your",
    "start": "1564850",
    "end": "1570340"
  },
  {
    "text": "development environment or in a CI environment whenever the policies change and then the idea is that you'll take",
    "start": "1570340",
    "end": "1577179"
  },
  {
    "text": "those webassembly executables and you'll publish them somewhere so they can be downloaded just like you do today with",
    "start": "1577179",
    "end": "1583510"
  },
  {
    "text": "with regular OPA bundles but now instead of just shipping the raw Ray go down to the opus or",
    "start": "1583510",
    "end": "1589680"
  },
  {
    "text": "the enforcement points I should say you send down these these wasum executables",
    "start": "1589680",
    "end": "1595130"
  },
  {
    "text": "so today we have support for like a node J s SDK so if you want to try to experiment with with this functionality",
    "start": "1595130",
    "end": "1601770"
  },
  {
    "text": "that's right a kind of recommend you start is play around with it inside of node J s but in the two or three days",
    "start": "1601770",
    "end": "1608580"
  },
  {
    "text": "that after we kind of talked about this and announced it somebody already started working on a c-sharp SDK as well",
    "start": "1608580",
    "end": "1615180"
  },
  {
    "text": "so you know in the future we plan to have SDKs for C C++ C sharp JVM and on",
    "start": "1615180",
    "end": "1621150"
  },
  {
    "text": "and on there are some things that are kind of like missing today and so the",
    "start": "1621150",
    "end": "1626580"
  },
  {
    "text": "plant improvements right now are around extending support for built-in functions out of out-of-the-box you can implement",
    "start": "1626580",
    "end": "1632610"
  },
  {
    "text": "the built-in functions inside of the the host language the host environment if you want to but obviously you don't",
    "start": "1632610",
    "end": "1638580"
  },
  {
    "text": "wanna have to do that you know every single time and so we're gonna try to have more built-in functions support it out of the box as much as possible and",
    "start": "1638580",
    "end": "1644790"
  },
  {
    "text": "then we're also gonna focus on on the the SDK side which will involve like adding support for the management API is",
    "start": "1644790",
    "end": "1650820"
  },
  {
    "text": "right so that you can kind of have an out-of-the-box way of getting policies distribute it down to your enforcement points",
    "start": "1650820",
    "end": "1656120"
  },
  {
    "text": "that's webassembly one thing that that hasn't been worked on but work that we're planning to do is improve support",
    "start": "1656120",
    "end": "1662640"
  },
  {
    "text": "for partial evaluation in OPA so partial evaluation is a feature that we added in in 2018 and it's got a lot",
    "start": "1662640",
    "end": "1670140"
  },
  {
    "text": "of interesting applications but what it does is it basically allows you to take a policy and then kind of evaluate it to",
    "start": "1670140",
    "end": "1677220"
  },
  {
    "text": "produce a new policy that's much simpler and faster to execute so for example",
    "start": "1677220",
    "end": "1683010"
  },
  {
    "text": "here we have a policy that says allow is true if any one of the the ackles in",
    "start": "1683010",
    "end": "1688080"
  },
  {
    "text": "this data set match the input and so here what we're basically doing is we're just searching over this large ackles",
    "start": "1688080",
    "end": "1694170"
  },
  {
    "text": "this this Ackles array and we're seeing if any of those match the input action resource user now obviously if that",
    "start": "1694170",
    "end": "1701730"
  },
  {
    "text": "array gets really big we're still doing a linear scan and so the evaluation times going to go up and so I'll talk about how that works in a second but the",
    "start": "1701730",
    "end": "1707910"
  },
  {
    "text": "important thing to notice here is that before the policy gets evaluated certain",
    "start": "1707910",
    "end": "1714270"
  },
  {
    "text": "pieces of the policy may be already known right so in this case data tackles is already known right it may be shipped",
    "start": "1714270",
    "end": "1719970"
  },
  {
    "text": "down to OPA along with the policy itself right so the permissions are updated it would just get sent down to open the input",
    "start": "1719970",
    "end": "1726960"
  },
  {
    "text": "though is a little bit different right that's unknown that changes on every single policy query and so what partial",
    "start": "1726960",
    "end": "1732900"
  },
  {
    "text": "evaluation does is it kind of lets us pre evaluate the policy and remove a lot",
    "start": "1732900",
    "end": "1738000"
  },
  {
    "text": "of the complexity in it and simplify it into a into a format that's that's easier for oppa to understand and easier",
    "start": "1738000",
    "end": "1743820"
  },
  {
    "text": "for it to optimize and so if you ran partial evaluation on this policy and you said that input was the unknown then",
    "start": "1743820",
    "end": "1750150"
  },
  {
    "text": "it would produce something like on the on the right-hand side here it would give you back a set of queries that are just simple equality operations and the",
    "start": "1750150",
    "end": "1757830"
  },
  {
    "text": "cool thing about these equality operations is that oppa can understand them and it can build an index out of out of these these statements so that",
    "start": "1757830",
    "end": "1765270"
  },
  {
    "text": "when you actually go to ask you know should this thing be allowed it doesn't have to scan over all the Ackles it can quickly look up the one the the",
    "start": "1765270",
    "end": "1771600"
  },
  {
    "text": "statements that machen elite those so you'd get basically constant time evaluation today there are some like",
    "start": "1771600",
    "end": "1779970"
  },
  {
    "text": "limitations in partial evaluation in oppa so there's certain parts of the language that we can't partially evaluate and so the plan of the next few",
    "start": "1779970",
    "end": "1786030"
  },
  {
    "text": "months will be to kind of like extend the coverage of partial evaluation to cover things like array and set",
    "start": "1786030",
    "end": "1791220"
  },
  {
    "text": "comprehensions that only depend on unknown values so those will just get partially evaluated out and then we're",
    "start": "1791220",
    "end": "1798390"
  },
  {
    "text": "also going to add support for the whiff keyword inside the language today if it if open counters any of those while it's",
    "start": "1798390",
    "end": "1803910"
  },
  {
    "text": "partially evaluating the policy that it just saves them off and you get them in the result and so that doesn't really have any benefit I think that's it so",
    "start": "1803910",
    "end": "1812940"
  },
  {
    "text": "then let me let Tim kind of talk about complexity analysis where we out of it",
    "start": "1812940",
    "end": "1818790"
  },
  {
    "text": "says zero zero but I don't know what that last digit is all right I'll make this super fast the other thing that",
    "start": "1818790",
    "end": "1824520"
  },
  {
    "text": "we're looking at and this is again our very early it's something that is going to happen more so than it has happened",
    "start": "1824520",
    "end": "1830480"
  },
  {
    "text": "is to do some automated complexity analysis so one of the things we've learned from writing lots and lots of",
    "start": "1830480",
    "end": "1836220"
  },
  {
    "text": "policies is that there are quite obviously very different classes of policies like there are some for example",
    "start": "1836220",
    "end": "1842570"
  },
  {
    "text": "the the one that we did a moment ago where we're walking over all of the containers in the pod that run in time",
    "start": "1842570",
    "end": "1849510"
  },
  {
    "text": "linear in the size of the input there are others though like for example if you were going to check if a label",
    "start": "1849510",
    "end": "1855720"
  },
  {
    "text": "exists they're gonna run in time in time constant in the in the size of it of the",
    "start": "1855720",
    "end": "1861200"
  },
  {
    "text": "input and so one of the things we're looking at is being able to automatically detect at least when we",
    "start": "1861200",
    "end": "1868550"
  },
  {
    "text": "can detect it when the pilot which class the policy belongs to and the benefit there is then that as like a cluster",
    "start": "1868550",
    "end": "1875000"
  },
  {
    "text": "level administrator you could say well all of my namespace level administrators you can put policies in but only if they",
    "start": "1875000",
    "end": "1881030"
  },
  {
    "text": "run in time linear in the size of the input so that's kind of where we're going with that and that's something that we can do because it was",
    "start": "1881030",
    "end": "1887090"
  },
  {
    "text": "declarative because it's not turning complete that you just typically wouldn't see in a programming language yeah all right well thank you all for",
    "start": "1887090",
    "end": "1898100"
  },
  {
    "text": "coming we yep I think maybe we can ask your questions for as long until they kick us out but oh that's good okay so",
    "start": "1898100",
    "end": "1904160"
  },
  {
    "text": "they're saying we have seven minutes there's plenty of time for questions yes",
    "start": "1904160",
    "end": "1916910"
  },
  {
    "text": "yes yeah so yeah that that is a thing",
    "start": "1916910",
    "end": "1923120"
  },
  {
    "text": "that exists there's a built in today called HTTP send you can go and use that",
    "start": "1923120",
    "end": "1928309"
  },
  {
    "text": "to head an external HTTP server as tauren mentioned at the beginning or at some point we don't recommend that",
    "start": "1928309",
    "end": "1934790"
  },
  {
    "text": "unless you really need to and there are legitimate cases where there's really no other alternative rather than getting",
    "start": "1934790",
    "end": "1940309"
  },
  {
    "text": "data fresh if the data comes out of a terabyte or a petabyte size database or",
    "start": "1940309",
    "end": "1945500"
  },
  {
    "text": "and you therefore can't replicate it into OPA or if the data is changing very frequently then and you always have to",
    "start": "1945500",
    "end": "1952520"
  },
  {
    "text": "have the the latest and greatest there's not much else you can do so we do have",
    "start": "1952520",
    "end": "1957890"
  },
  {
    "text": "initial support for that but as we've mentioned architectural II the goal is to avoid that push open to the edge give",
    "start": "1957890",
    "end": "1965510"
  },
  {
    "text": "it all the information it needs to make decisions so that every decision can be made completely on opis own yes support",
    "start": "1965510",
    "end": "1977270"
  },
  {
    "text": "oh sorry we should repeat the question support for validating cryptographic signatures yeah so if you go to the so",
    "start": "1977270",
    "end": "1984230"
  },
  {
    "text": "like JSON web tokens or what are you what are you thinking",
    "start": "1984230",
    "end": "1989470"
  },
  {
    "text": "yeah so we do have built-in support we have built-in functions to verify signatures on JSON web tokens today's we",
    "start": "1992309",
    "end": "1998309"
  },
  {
    "text": "support RSA and and and other algorithms we don't have like primitives to just do",
    "start": "1998309",
    "end": "2004669"
  },
  {
    "text": "that on an I like a straight leg on a array of bytes but built-in functions",
    "start": "2004669",
    "end": "2010220"
  },
  {
    "text": "are actually like the easiest way to contribute to opus so if you have a have a use case where you think oh this would be a lot easier like I was talking to",
    "start": "2010220",
    "end": "2016100"
  },
  {
    "text": "somebody earlier today and they wanted to do something that involved bit manipulation like and and that that's not something that's particularly fun to",
    "start": "2016100",
    "end": "2022730"
  },
  {
    "text": "do today in in Rago so I said yeah I mean please you know if you have use",
    "start": "2022730",
    "end": "2028279"
  },
  {
    "text": "cases that require built-ins please submit a patch",
    "start": "2028279",
    "end": "2032620"
  },
  {
    "text": "I mean I think the well sorry the",
    "start": "2058919",
    "end": "2073500"
  },
  {
    "text": "question was security context for example show up in a large number of kubernetes resources it'd be great if",
    "start": "2073500",
    "end": "2080158"
  },
  {
    "text": "there were some helper libraries or the like that would allow people to write policy over all of those sort of",
    "start": "2080159",
    "end": "2086908"
  },
  {
    "text": "simultaneously yeah so certainly building those kinds of libraries is great and that's another good place",
    "start": "2086909",
    "end": "2093059"
  },
  {
    "text": "where you can contribute so if you have ideas about libraries that would be great that that would be certainly we'd",
    "start": "2093059",
    "end": "2099359"
  },
  {
    "text": "love to see that I think one thing that we've hesitated on is that with",
    "start": "2099359",
    "end": "2104940"
  },
  {
    "text": "especially in the kubernetes case with CR DS people could invent things that we just don't know or understand and so at",
    "start": "2104940",
    "end": "2111329"
  },
  {
    "text": "the end of the day like having a library could give people a sense of security",
    "start": "2111329",
    "end": "2118400"
  },
  {
    "text": "because they do false sense of security thank you when in fact they need to understand what is covered by that and",
    "start": "2118400",
    "end": "2124650"
  },
  {
    "text": "what is not so that would be the the pros and cons there yeah yeah the",
    "start": "2124650",
    "end": "2143460"
  },
  {
    "text": "question is do we have guidelines on when you should use like a cloud providers I am versus OPA",
    "start": "2143460",
    "end": "2152119"
  },
  {
    "text": "specifically around kubernetes yeah so yeah so kubernetes you know it has role",
    "start": "2157200",
    "end": "2163600"
  },
  {
    "text": "based access control right and and that is typically I think where people use where where I am comes in is when you're",
    "start": "2163600",
    "end": "2170080"
  },
  {
    "text": "talking about authorization and like we're not trying to say that OPA should replace role based access control in any",
    "start": "2170080",
    "end": "2175690"
  },
  {
    "text": "way our back solves you know some portion of your your your use cases but",
    "start": "2175690",
    "end": "2181780"
  },
  {
    "text": "there's sort of a long tail of things they need to be able to lock down and and you know the example the Tim game gave is not something that you can",
    "start": "2181780",
    "end": "2187630"
  },
  {
    "text": "express and with role based access control or with I am or anything like that right so they're two are kind of complementary if you can express it in",
    "start": "2187630",
    "end": "2194860"
  },
  {
    "text": "an I am that that's that's good but there's tons of things that you can't express and that you need something like",
    "start": "2194860",
    "end": "2200380"
  },
  {
    "text": "hope before",
    "start": "2200380",
    "end": "2202859"
  },
  {
    "text": "what question is we pointed out using OPA for admission control has anybody",
    "start": "2216600",
    "end": "2222190"
  },
  {
    "text": "ever used OPA for authentication authentication o for authorization okay",
    "start": "2222190",
    "end": "2227710"
  },
  {
    "text": "yeah so for authorization a couple of times yeah we've heard people doing this it's possible there are web hooks for",
    "start": "2227710",
    "end": "2234730"
  },
  {
    "text": "that yeah there's a there's a blog post from some folks at Daimler that run a",
    "start": "2234730",
    "end": "2243070"
  },
  {
    "text": "fairly large number of clusters and they ran into a problem where they want to just Express a blacklist basically for",
    "start": "2243070",
    "end": "2248740"
  },
  {
    "text": "add authorization time as opposed to having to like whitelist the use case was like you know you want to grant developers access to every name",
    "start": "2248740",
    "end": "2254200"
  },
  {
    "text": "space except cube system right it's pretty painful to do if you've got namespaces coming up all the time",
    "start": "2254200",
    "end": "2259990"
  },
  {
    "text": "because you need to constantly be creating these are back objects and so you know open just lets you express that blacklist very easily so there are use",
    "start": "2259990",
    "end": "2266320"
  },
  {
    "text": "cases for it however you can't dynamically configure authorization web hooks today it's a it's a cluster setup",
    "start": "2266320",
    "end": "2274060"
  },
  {
    "text": "thing and it's also risky to run like the authorizer on top of Kubb like",
    "start": "2274060",
    "end": "2279460"
  },
  {
    "text": "because it creates this this loop so it's definitely possible if people do it but you need to have more control over",
    "start": "2279460",
    "end": "2285220"
  },
  {
    "text": "your clusters than you get in some cases",
    "start": "2285220",
    "end": "2288900"
  },
  {
    "text": "question is well what happens if the input that comes in is malformed for example you dot down through an object",
    "start": "2307850",
    "end": "2314270"
  },
  {
    "text": "that into a field that doesn't exist yeah so today this is actually a case",
    "start": "2314270",
    "end": "2320360"
  },
  {
    "text": "where what we do today is just we think of all of the the conditions in a rule",
    "start": "2320360",
    "end": "2326480"
  },
  {
    "text": "as that as conditions so if you were to say input request foo and a kubernetes",
    "start": "2326480",
    "end": "2333550"
  },
  {
    "text": "object that would be something that we look at as a condition if that if that",
    "start": "2333550",
    "end": "2339140"
  },
  {
    "text": "field does not exist then the body of that rule fails it is it is effectively false roughly speaking so what we do is",
    "start": "2339140",
    "end": "2348710"
  },
  {
    "text": "that that we don't return null we just the the value of that expression becomes",
    "start": "2348710",
    "end": "2355280"
  },
  {
    "text": "what we call undefined and then undefined propagates so there's a negation that will flip it undefined to",
    "start": "2355280",
    "end": "2361610"
  },
  {
    "text": "true but otherwise undefined propagate so if you say if input dot whatever foo and input out whose not defined equal",
    "start": "2361610",
    "end": "2368420"
  },
  {
    "text": "seven then the whole thing is undefined and then the the body just doesn't evaluate it true yeah that's a good",
    "start": "2368420",
    "end": "2374330"
  },
  {
    "text": "question",
    "start": "2374330",
    "end": "2376690"
  },
  {
    "text": "so the question is are we gonna use a full are we gonna require a full y'see",
    "start": "2390630",
    "end": "2395670"
  },
  {
    "text": "interface I don't know how many people in this room know what Y Z is it's a",
    "start": "2395670",
    "end": "2400779"
  },
  {
    "text": "like us it's a standard that's emerging for like the system call interface basically for webassembly executables the answer is that right now the the",
    "start": "2400779",
    "end": "2407829"
  },
  {
    "text": "compiled blossom policies don't have any external dependencies except for memory you need to give them",
    "start": "2407829",
    "end": "2414969"
  },
  {
    "text": "an some memory to work with but yeah so they're they're kind of free on their own so you don't have to worry about",
    "start": "2414969",
    "end": "2420609"
  },
  {
    "text": "that",
    "start": "2420609",
    "end": "2422818"
  },
  {
    "text": "question is for the bundle API how fine tunable is it and then part two was and",
    "start": "2442230",
    "end": "2449620"
  },
  {
    "text": "then what happens when the bundle API actually pulls down data does it just replace everything so answer the first",
    "start": "2449620",
    "end": "2456280"
  },
  {
    "text": "part is yes it's tunable you can figure how often the bundle API runs and therefore how often it pulls down fresh a fresh bundle and then for the second",
    "start": "2456280",
    "end": "2464290"
  },
  {
    "text": "one oppa does support multiple bundles so it sort of has a scope when you",
    "start": "2464290",
    "end": "2469600"
  },
  {
    "text": "download the bundle that says here's the here's the part of the policy and data that gets replaced by this bundle yeah",
    "start": "2469600",
    "end": "2478900"
  },
  {
    "text": "okay",
    "start": "2478900",
    "end": "2481440"
  },
  {
    "text": "so the question is whether or not you can run OPA and envoy together",
    "start": "2504470",
    "end": "2510599"
  },
  {
    "text": "and and still have like a higher level control plan that's involved and I think the answer is yes when you you kind of",
    "start": "2510599",
    "end": "2519599"
  },
  {
    "text": "like just configure the the envoy filter basically to talk to OPA like with sto they do provide a CRT that",
    "start": "2519599",
    "end": "2525869"
  },
  {
    "text": "lets you do that so it like works well there I don't know about ambassador specifically I will mention that there are there's a talk tomorrow from Yelp",
    "start": "2525869",
    "end": "2533340"
  },
  {
    "text": "about how they're using open an envoy so if you are interest in that use case I'd recommend checking that out because they're doing it in a lot of different",
    "start": "2533340",
    "end": "2539880"
  },
  {
    "text": "laces",
    "start": "2539880",
    "end": "2542240"
  },
  {
    "text": "sorry can you can you repeat the question",
    "start": "2559370",
    "end": "2562930"
  },
  {
    "text": "questions as I understood it was we support Jason as input today could we",
    "start": "2578210",
    "end": "2583789"
  },
  {
    "text": "potentially support some binary format coming in as input all right yeah that's what I heard okay so yeah so",
    "start": "2583789",
    "end": "2591619"
  },
  {
    "text": "yeah so when we say JSON we just mean kind of like any kind of complex hierarchical structured data when you run open as a daemon it exposes an HTTP",
    "start": "2591619",
    "end": "2598849"
  },
  {
    "text": "API that allows you to ask it for policy decisions and that API only supports JSON today if you embed open as a",
    "start": "2598849",
    "end": "2605359"
  },
  {
    "text": "library and go you could have you could have like protobuf you know serialize",
    "start": "2605359",
    "end": "2611390"
  },
  {
    "text": "things coming into that service and then getting passed into OPA that's that's actually how the Envoy plugin works we",
    "start": "2611390",
    "end": "2618109"
  },
  {
    "text": "have a flavor of OPA for specifically integrating with Envoy yeah there's there yeah all right you've",
    "start": "2618109",
    "end": "2626690"
  },
  {
    "text": "been patient",
    "start": "2626690",
    "end": "2629140"
  },
  {
    "text": "good question it was most of the examples are validating examples or were",
    "start": "2649840",
    "end": "2655130"
  },
  {
    "text": "just accepting or rejecting a new or updated resource can you do anything",
    "start": "2655130",
    "end": "2661820"
  },
  {
    "text": "around mutation and potentially provisioning so one other talk I'll call",
    "start": "2661820",
    "end": "2667460"
  },
  {
    "text": "out here is tomorrow at 5:00 one yeah same time goldman sachs is going to be",
    "start": "2667460",
    "end": "2675110"
  },
  {
    "text": "talking about how they're doing provisioning for example provisioning auerbach in when a new name space is",
    "start": "2675110",
    "end": "2680960"
  },
  {
    "text": "created they're using open to do that so i'd recommend that so yes it's possible and there's a you'll see me up again so",
    "start": "2680960",
    "end": "2689090"
  },
  {
    "text": "that one that reckon and then mutation yes other than yes yeah you can do it",
    "start": "2689090",
    "end": "2695180"
  },
  {
    "text": "with with opa and it's on the roadmap with gate keepers something that we're kind of like discussing right now so",
    "start": "2695180",
    "end": "2701260"
  },
  {
    "text": "alright well thank you very much [Applause]",
    "start": "2701260",
    "end": "2710989"
  }
]