[
  {
    "text": "hello everybody bonjour um thanks for sticking around Welcome to our session",
    "start": "280",
    "end": "5839"
  },
  {
    "text": "living of the land techniques in manage kubernetes clusters my name is Shay sha bovitz I'm",
    "start": "5839",
    "end": "13719"
  },
  {
    "text": "proud to be a part of amazing wi threat research team you might know us from these projects and with me today and I'm",
    "start": "13719",
    "end": "20920"
  },
  {
    "text": "Rustin I'm from The Whiz vulnerability research team and you might know us from cool researches like broken Sesame uh",
    "start": "20920",
    "end": "27039"
  },
  {
    "text": "bing bang uh and many more all right so what are we talking here today living of",
    "start": "27039",
    "end": "32680"
  },
  {
    "text": "the land techniques let's go to Basics let's start with the definition Miriam Webster D dictionary defines living of",
    "start": "32680",
    "end": "39879"
  },
  {
    "text": "the land as getting food by farming hunting Etc okay we know that but there",
    "start": "39879",
    "end": "45480"
  },
  {
    "text": "is this element of using what's available in the environment and that's so true for",
    "start": "45480",
    "end": "51600"
  },
  {
    "text": "classic cyber security definition right Al Bet in a classic definition it's talking more about binaries binaries on",
    "start": "51600",
    "end": "58559"
  },
  {
    "text": "the host right so the that those two big projects GT GT4 beans lbas projects that",
    "start": "58559",
    "end": "65518"
  },
  {
    "text": "pretty much a list categorized list and collection of the binaries that can be",
    "start": "65519",
    "end": "71159"
  },
  {
    "text": "exploited by the attackers once they have the initial access on the host okay",
    "start": "71159",
    "end": "76840"
  },
  {
    "text": "so my favorite from the ocp days for those in the know uh was the CER which I",
    "start": "76840",
    "end": "82600"
  },
  {
    "text": "used to download enumeration scripts from on to my Windows host um in the the",
    "start": "82600",
    "end": "90000"
  },
  {
    "text": "absence of curl or W get for example that's classic example and that's fine that was okay",
    "start": "90000",
    "end": "96640"
  },
  {
    "text": "back then when when we said initial access and attacker we thought about VM",
    "start": "96640",
    "end": "102119"
  },
  {
    "text": "or host perhaps after escaping some kind of application web application right finding the RC however this has changed",
    "start": "102119",
    "end": "110040"
  },
  {
    "text": "right now attacker might find themselves in different context it can be pod within the kubernetes of course it can",
    "start": "110040",
    "end": "116479"
  },
  {
    "text": "be node it can perhaps even be lum function right they might own the Lambda",
    "start": "116479",
    "end": "122039"
  },
  {
    "text": "function in the cloud okay so as the",
    "start": "122039",
    "end": "127200"
  },
  {
    "text": "definition of attack chain and the attack processes has evolved so should",
    "start": "127200",
    "end": "134080"
  },
  {
    "text": "the definition of living of the land techniques evolve just like the Metapod Pokemon okay so for the definition for",
    "start": "134080",
    "end": "141239"
  },
  {
    "text": "the updated definition I want to take you to the cisa join guidance um so they released it in February 10th if I'm not",
    "start": "141239",
    "end": "148879"
  },
  {
    "text": "mistaken so pretty much uh a month ago uh cisa and all lighted",
    "start": "148879",
    "end": "155560"
  },
  {
    "text": "agencies released the guidance for on pram and Cloud living of the L techniques and even though they released",
    "start": "155560",
    "end": "161840"
  },
  {
    "text": "it past our cfp submission and acceptance we thought it's going to be shame not to include it because uh what",
    "start": "161840",
    "end": "168480"
  },
  {
    "text": "they found there their thoughts really resonated with us so let's take their definition native tools and processes on",
    "start": "168480",
    "end": "175239"
  },
  {
    "text": "systems I would also add workflows and and second point is lower",
    "start": "175239",
    "end": "181159"
  },
  {
    "text": "likelihood of being detected or blocked okay so I think those are two important",
    "start": "181159",
    "end": "186560"
  },
  {
    "text": "points that describes uh together come up the the the definition but now what",
    "start": "186560",
    "end": "193680"
  },
  {
    "text": "makes living of the land techniques let's say l techniques different from other attack",
    "start": "193680",
    "end": "200879"
  },
  {
    "text": "scenarios well there are three points first there's the lack of established baselines on the defense side second the",
    "start": "200879",
    "end": "207799"
  },
  {
    "text": "lack of conventional ioc and third it it just makes attackers job",
    "start": "207799",
    "end": "213879"
  },
  {
    "text": "easier right because they avoid they don't need to develop their own tools they just use whatever they have so alt",
    "start": "213879",
    "end": "220599"
  },
  {
    "text": "together it makes a real problem to recognize to detect Lal",
    "start": "220599",
    "end": "226680"
  },
  {
    "text": "techniques okay specifically in kubernetes clusters now cisa guidance",
    "start": "226680",
    "end": "232519"
  },
  {
    "text": "talks about cloud and on pram which is a shame because we're at cubec con so we want to extend it to kubernetes not just",
    "start": "232519",
    "end": "239280"
  },
  {
    "text": "extend but also enumerate so we'll present a series of demos about those techniques to persuade you that this is",
    "start": "239280",
    "end": "245840"
  },
  {
    "text": "real problem that there are multiple techniques are there and we will try to",
    "start": "245840",
    "end": "250920"
  },
  {
    "text": "standardize them somehow for standardization we'll use threat metrics don't worry not this one we'll focus on",
    "start": "250920",
    "end": "258720"
  },
  {
    "text": "the kubernetes threat metrix okay now when we're talking about threat metric which stages of the threat Matrix the",
    "start": "258720",
    "end": "265680"
  },
  {
    "text": "Lal techniques are actually applicable too pretty much all the stages Pro in like beside the initial access pretty",
    "start": "265680",
    "end": "273120"
  },
  {
    "text": "much everything maybe even impact it's pertinent to Lal techniques they can be abused",
    "start": "273120",
    "end": "280120"
  },
  {
    "text": "anywhere why manage clusters why are we talking about manage clusters specifically well using the academic",
    "start": "280120",
    "end": "285680"
  },
  {
    "text": "language is because they have a lots of stuff okay uh default AKs cluster empty",
    "start": "285680",
    "end": "292199"
  },
  {
    "text": "cluster that you stage it has all these workloads running you see there like three name spaces a bunch of workloads",
    "start": "292199",
    "end": "299759"
  },
  {
    "text": "so we can abuse this right additional Services means more complexity means",
    "start": "299759",
    "end": "305479"
  },
  {
    "text": "increased attack surface it's always true and we love attack surface as security",
    "start": "305479",
    "end": "311880"
  },
  {
    "text": "researchers okay where can we take them the loal techniques well of course",
    "start": "311880",
    "end": "317880"
  },
  {
    "text": "attackers in the typical scenario attack attackers finds in execution into the Pod right like some kind of application",
    "start": "317880",
    "end": "324360"
  },
  {
    "text": "RC they find they execute in the Pod so there's a pod image binaries but it's it's not very interesting it can be sent",
    "start": "324360",
    "end": "331120"
  },
  {
    "text": "s which is huge but it could be also dists which doesn't even have shell and",
    "start": "331120",
    "end": "336560"
  },
  {
    "text": "so there's a huge variance in the um in the Lal binaries that attackers might",
    "start": "336560",
    "end": "342319"
  },
  {
    "text": "find there uh but how about kubernetes no damage that's more stable you can see",
    "start": "342319",
    "end": "348199"
  },
  {
    "text": "in eks gks AKs all their Amis pack tons of tools useful tools in this case for",
    "start": "348199",
    "end": "354560"
  },
  {
    "text": "just to download something from the internet do you really think kubernetes worker note needs SF",
    "start": "354560",
    "end": "360199"
  },
  {
    "text": "TP I'm not sure I don't know but it's there so we might use it okay but this assumes that attacker has kubernetes",
    "start": "360199",
    "end": "367759"
  },
  {
    "text": "node access which not always true of course okay then what else can we use we",
    "start": "367759",
    "end": "374120"
  },
  {
    "text": "can use middleware workloads deployment stold set kubernetes object Diamond sets",
    "start": "374120",
    "end": "379599"
  },
  {
    "text": "even better why because they run on every port so it doesn't matter where attacker finds themselves they can use",
    "start": "379599",
    "end": "385960"
  },
  {
    "text": "that workload also Chrome jobs jobs which is great why because they are periodic in",
    "start": "385960",
    "end": "392039"
  },
  {
    "text": "nature but also users and groups and the various managed solutions they add their",
    "start": "392039",
    "end": "397759"
  },
  {
    "text": "own users and groups on top of what vanilla kubernetes cluster already has",
    "start": "397759",
    "end": "403039"
  },
  {
    "text": "and even core control plane functionality which we're not going to talk today but there's been research",
    "start": "403039",
    "end": "409120"
  },
  {
    "text": "around how to abuse for example kubernetes API server for",
    "start": "409120",
    "end": "414280"
  },
  {
    "text": "csrf okay let's dive into the uh specific use cases",
    "start": "414280",
    "end": "420039"
  },
  {
    "text": "we'll start with the persistence for this we'll use our shackle Pokemon which is a symbol of Persistence of course um",
    "start": "420039",
    "end": "427560"
  },
  {
    "text": "so as a symbol of persistence we we'll abuse the node problem detector now for those of you who who",
    "start": "427560",
    "end": "434199"
  },
  {
    "text": "never heard about node problem detector it's a tool that present on all GK and",
    "start": "434199",
    "end": "439280"
  },
  {
    "text": "AKs clusters in fact it's a systemd process on the worker notes it can be installed",
    "start": "439280",
    "end": "446400"
  },
  {
    "text": "as a diamond set as well and it's also Al installed on many eks clusters because it appears in the",
    "start": "446400",
    "end": "452479"
  },
  {
    "text": "recommendation on the best practices guide where they say go and install it as a demon",
    "start": "452479",
    "end": "458240"
  },
  {
    "text": "set this process it performs various Diagnostics activities it runs as rout",
    "start": "458240",
    "end": "464840"
  },
  {
    "text": "on the Node and uh make sure the the health of the node is fine by performing",
    "start": "464840",
    "end": "469919"
  },
  {
    "text": "various activities so let's focus on the GK let's see how it looks on the GK if",
    "start": "469919",
    "end": "475400"
  },
  {
    "text": "you if you run PSA on the worker node this is what you get you get the NPD",
    "start": "475400",
    "end": "481319"
  },
  {
    "text": "process with a bunch of d d config configurations and a bunch of those Json",
    "start": "481319",
    "end": "486720"
  },
  {
    "text": "what are those Json saying they saying what to do what Diagnostics action to perform so in this case cctl monitor",
    "start": "486720",
    "end": "493759"
  },
  {
    "text": "Json says every six hours I hope you see you see the fourth line every 6 hours",
    "start": "493759",
    "end": "499800"
  },
  {
    "text": "run this python with the following parameter okay good as an attacker we",
    "start": "499800",
    "end": "506479"
  },
  {
    "text": "immediately say what can we do if we override is Jason well not much because",
    "start": "506479",
    "end": "511840"
  },
  {
    "text": "you still need to restart the node problem detector right to to get the new config and that may be a bit noisy",
    "start": "511840",
    "end": "520440"
  },
  {
    "text": "however what can we do if we manage to override the python right so you see where I'm going",
    "start": "520440",
    "end": "527360"
  },
  {
    "text": "with that before we uh put together demo in attack chain quickly I want to talk to",
    "start": "527360",
    "end": "534040"
  },
  {
    "text": "you about Le vessels uh which was a set of vulnerabilities uh who here heard",
    "start": "534040",
    "end": "539279"
  },
  {
    "text": "about about Lecky vessels yeah okay so I'll be very very short set of vulnerabilities ransy build",
    "start": "539279",
    "end": "546440"
  },
  {
    "text": "kit allows attackers to build tamix escape and container runtime Escape okay",
    "start": "546440",
    "end": "551600"
  },
  {
    "text": "and that's what we're going to use in the demo so now we can put together attack chain attacker uses compromised",
    "start": "551600",
    "end": "558519"
  },
  {
    "text": "image poisoned image you name it uses leaky vessels to escape on the",
    "start": "558519",
    "end": "563959"
  },
  {
    "text": "Node we override as an attackers the python the cctl monitor Python and we",
    "start": "563959",
    "end": "570680"
  },
  {
    "text": "let node problem uh detector to pick the new and execute the new python the new",
    "start": "570680",
    "end": "575880"
  },
  {
    "text": "python will communicate with the C2 server what will we achieve by this",
    "start": "575880",
    "end": "581399"
  },
  {
    "text": "we'll bypass Cube AIT will bypass admission controller of course because we're not going through the kubernetes",
    "start": "581399",
    "end": "587240"
  },
  {
    "text": "API access that one is blind to our actions we'll probably bypass sensor RR",
    "start": "587240",
    "end": "592880"
  },
  {
    "text": "solution why because we're piggybacking on a known process privilege escalation",
    "start": "592880",
    "end": "598079"
  },
  {
    "text": "persistency even equ okay let's see this in",
    "start": "598079",
    "end": "603079"
  },
  {
    "text": "action okay so on the left side I have access to the",
    "start": "608600",
    "end": "614519"
  },
  {
    "text": "Pod uh that's a g keod and Andy defrain is my uh hacking pod that on that has",
    "start": "614519",
    "end": "620839"
  },
  {
    "text": "execution on the on the Node that's that's only person purpose so I'm",
    "start": "620839",
    "end": "626040"
  },
  {
    "text": "showing you that the host name of the node is GK sh something that's our worker note and now I'm showing you the",
    "start": "626040",
    "end": "633040"
  },
  {
    "text": "content of this that c CTL monitor Json you see the location NPD custom plugin SL configs that's on the",
    "start": "633040",
    "end": "641959"
  },
  {
    "text": "Node and now I'm showing you the content of the cctl monitor python that we will",
    "start": "641959",
    "end": "647920"
  },
  {
    "text": "overwrite now it's not very interesting it's just diagnostic pod that no problem detector runs periodically every 6",
    "start": "647920",
    "end": "655480"
  },
  {
    "text": "hours it's okay but we will overwrite it that's the interesting part how will we overwrite it by using the malicious",
    "start": "655480",
    "end": "663200"
  },
  {
    "text": "image so unsuspecting cluster operator will run",
    "start": "663200",
    "end": "668560"
  },
  {
    "text": "this innocent image called CV 2024 21626 um this image in the bottom right",
    "start": "668560",
    "end": "675480"
  },
  {
    "text": "corner as you can see uses this work deer it abuses the Lecky vessels runy",
    "start": "675480",
    "end": "681760"
  },
  {
    "text": "vulnerability it has only one command it overrides the existing cctl monitor Pi",
    "start": "681760",
    "end": "687800"
  },
  {
    "text": "on the Noe you see that as reveral slome kubernetes with our own cctl monitor Pi",
    "start": "687800",
    "end": "694480"
  },
  {
    "text": "which what it does just a good old python reverse shell to our C2 server at",
    "start": "694480",
    "end": "701120"
  },
  {
    "text": "the bottom top Corner uh at the top right corner you see our C2 server",
    "start": "701120",
    "end": "706200"
  },
  {
    "text": "running on Port 444 and now cluster operator is running the starting the",
    "start": "706200",
    "end": "711320"
  },
  {
    "text": "image and it's done you see Lecky completed okay something happened so it pulled the",
    "start": "711320",
    "end": "717760"
  },
  {
    "text": "image so I guess it worked but of course we need to check so let's see how the",
    "start": "717760",
    "end": "724200"
  },
  {
    "text": "actual python looks",
    "start": "724200",
    "end": "727160"
  },
  {
    "text": "like I'm damping the",
    "start": "730639",
    "end": "734480"
  },
  {
    "text": "python and you can see that this is a new python code okay so licky vessels",
    "start": "735800",
    "end": "742240"
  },
  {
    "text": "worked good now what we need to do we just need to to wait for 6 hours for the",
    "start": "742240",
    "end": "747680"
  },
  {
    "text": "veral connection of course I trimmed the video uh so now any any moment now there",
    "start": "747680",
    "end": "753120"
  },
  {
    "text": "we go we have the connection on the C2 server the connection is a root on the",
    "start": "753120",
    "end": "760040"
  },
  {
    "text": "worker node you can see the host name the host name of the worker node we have access to all the processes including",
    "start": "760040",
    "end": "767000"
  },
  {
    "text": "the node problem Detector by itself we don't have any namespace restrictions and we have access to VAR",
    "start": "767000",
    "end": "773880"
  },
  {
    "text": "Le cuet where of course cuet keeps all the information about local pods",
    "start": "773880",
    "end": "779399"
  },
  {
    "text": "including service account tokens Etc so pretty cool if you ask",
    "start": "779399",
    "end": "786920"
  },
  {
    "text": "me all right so that's persistency let's move on to",
    "start": "787000",
    "end": "792720"
  },
  {
    "text": "collection collection for people who are into the Pokemons uh I think",
    "start": "792720",
    "end": "798800"
  },
  {
    "text": "Paragon is the one that represents the collection uh information assembly so I",
    "start": "798800",
    "end": "806880"
  },
  {
    "text": "hope you see where I'm going with it fluent bit okay fluent bit um is a very known",
    "start": "806880",
    "end": "815680"
  },
  {
    "text": "log management processor and management solution we love it because it's installed by default on gke and AKs and",
    "start": "815680",
    "end": "822320"
  },
  {
    "text": "it's recommended for installation on eks BP BP guide as well the configuration affecting the",
    "start": "822320",
    "end": "829639"
  },
  {
    "text": "fluent bit is going through the config map fluent db- config and this config looks like this",
    "start": "829639",
    "end": "836720"
  },
  {
    "text": "looks as follows there's a sec uh sequence of input parser filter commands",
    "start": "836720",
    "end": "842320"
  },
  {
    "text": "uh sorry uh sections which tells fluent bit what to do which logs to to assemble and where",
    "start": "842320",
    "end": "849600"
  },
  {
    "text": "to send them now as an attacker we immediately ask ask ourselves okay if we",
    "start": "849600",
    "end": "854959"
  },
  {
    "text": "can modify it what happens good things happen because we can use exact plugin as an attackers of",
    "start": "854959",
    "end": "863320"
  },
  {
    "text": "course we love plugins that's that's called exact because they do exactly that they execute the command",
    "start": "863320",
    "end": "870279"
  },
  {
    "text": "so in this case this is the example from the official documentation of the fluent bit where LS /v/ loock will execute",
    "start": "870279",
    "end": "876560"
  },
  {
    "text": "every one second okay how can we abuse it so here's our attack chain assuming",
    "start": "876560",
    "end": "884279"
  },
  {
    "text": "we have update on the config map permissions okay or more or more powerful permissions but that's the ARB",
    "start": "884279",
    "end": "890199"
  },
  {
    "text": "that we need we will add input session and output session sections to the",
    "start": "890199",
    "end": "895920"
  },
  {
    "text": "config map and we will let new fluent bit pods to get the new config map and",
    "start": "895920",
    "end": "903160"
  },
  {
    "text": "to send the logs to C2 data exfiltration and again we bypass Cube audit we bypass",
    "start": "903160",
    "end": "909120"
  },
  {
    "text": "Cube admission controller we bypass sensor and our malicious config map is",
    "start": "909120",
    "end": "915000"
  },
  {
    "text": "resistant to restarts because now it resides in it",
    "start": "915000",
    "end": "920639"
  },
  {
    "text": "CD so again we achieve collection we achieve persistency we achieve evasion okay let's see this in",
    "start": "920639",
    "end": "927959"
  },
  {
    "text": "action I hope you can you can hear me because",
    "start": "927959",
    "end": "934720"
  },
  {
    "text": "the noise is quite serious there uh okay so on the left you see that I'm running",
    "start": "934720",
    "end": "940360"
  },
  {
    "text": "two fluent bit pods because it's a demon set I have two nodes now I'm showing you the config map",
    "start": "940360",
    "end": "946720"
  },
  {
    "text": "that affect that's affecting the fluent bit config it's called fluent dbit config and by the way this is eks",
    "start": "946720",
    "end": "953880"
  },
  {
    "text": "cluster I guess you can you can see this by amazon-cloudwatch namespace",
    "start": "953880",
    "end": "960759"
  },
  {
    "text": "now this is the content of this config map it's pretty messy when unformatted but it starts with application- log",
    "start": "960759",
    "end": "967040"
  },
  {
    "text": "docon and it defines the the collection of certain application",
    "start": "967040",
    "end": "973519"
  },
  {
    "text": "logs but what I want I want to show you our malicious fluent bit config that is",
    "start": "973519",
    "end": "979720"
  },
  {
    "text": "very similar to original config however it adds two small",
    "start": "979720",
    "end": "985160"
  },
  {
    "text": "sections it abuses that exact plugin that I was talking about in input output",
    "start": "985160",
    "end": "990720"
  },
  {
    "text": "in the input we're asking fluent bit please execute host name and ID and ls-",
    "start": "990720",
    "end": "996880"
  },
  {
    "text": "La every 5 Seconds we control the interval and send it to our C2 server on",
    "start": "996880",
    "end": "1003639"
  },
  {
    "text": "Port 4444 over plane HTTP that's it so now I'm starting my C2 server python",
    "start": "1003639",
    "end": "1012120"
  },
  {
    "text": "forever and applying the new config",
    "start": "1012120",
    "end": "1016959"
  },
  {
    "text": "map and hoping that it'll",
    "start": "1017839",
    "end": "1022480"
  },
  {
    "text": "work so nothing happened why because the pods still haven't",
    "start": "1023480",
    "end": "1030400"
  },
  {
    "text": "applied the new config right so here I'm killing the pod on purpose the second",
    "start": "1030400",
    "end": "1036360"
  },
  {
    "text": "pod I'm going to kill it and because it's a demon P demon set the new pod will respond and pick the new",
    "start": "1036360",
    "end": "1042360"
  },
  {
    "text": "configuration in the production cluster however there is a natural process of shrinking and growing so every new note",
    "start": "1042360",
    "end": "1049919"
  },
  {
    "text": "that come up comes up because of the scheduling or load they will pick the new config the malicious",
    "start": "1049919",
    "end": "1056799"
  },
  {
    "text": "config all right so now I'm deleting the Pod and I expect the new pod to start",
    "start": "1056799",
    "end": "1065679"
  },
  {
    "text": "automatically there it is the last pod you see 5 Seconds that's the new pod so",
    "start": "1073520",
    "end": "1078640"
  },
  {
    "text": "now any moment now up we're getting the information we're",
    "start": "1078640",
    "end": "1083880"
  },
  {
    "text": "getting the output of fluent bit running those shell commands you can see the first one is exact the second one is a",
    "start": "1083880",
    "end": "1091039"
  },
  {
    "text": "host name sorry first one is host name second one is ID and then the output of the and you see the user agent is fluent",
    "start": "1091039",
    "end": "1098159"
  },
  {
    "text": "bit and fluent bit is so nice that it's packing it's in a nice Json uh it uh",
    "start": "1098159",
    "end": "1103960"
  },
  {
    "text": "time stamps every command that it's run so because it's of course log management",
    "start": "1103960",
    "end": "1110760"
  },
  {
    "text": "solution",
    "start": "1114320",
    "end": "1117320"
  },
  {
    "text": "oops all right and at this point I'm passing to Ronan for privilege escalation all right thank you",
    "start": "1123760",
    "end": "1131159"
  },
  {
    "text": "Shai um so now we'll talk a bit about privilege escalation techniques um so",
    "start": "1131159",
    "end": "1136360"
  },
  {
    "text": "from cisa's guidance uh they show us basically a lot of uh PR escalation",
    "start": "1136360",
    "end": "1141720"
  },
  {
    "text": "techniques on cloud environments of course we are at cubec con and we are interested um in manag clusters uh so",
    "start": "1141720",
    "end": "1149559"
  },
  {
    "text": "let's see how we can use those PR condition techniques and apply those on managed clusters uh so the first example we",
    "start": "1149559",
    "end": "1156919"
  },
  {
    "text": "chose to show you today um is the Azure kubernetes service and more specifically",
    "start": "1156919",
    "end": "1162320"
  },
  {
    "text": "how we can use the entry ID authentication uh combined with some user misconfigurations uh in our",
    "start": "1162320",
    "end": "1169799"
  },
  {
    "text": "Advantage um so let's first uh see uh how many like different authentication",
    "start": "1169799",
    "end": "1175720"
  },
  {
    "text": "and authorization methods um AKs offers uh so the first one is local accounts with kubernetes r with Access Control uh",
    "start": "1175720",
    "end": "1183520"
  },
  {
    "text": "basically the one we all know uh the second one is the entry ID uh with the kubernetes RAS Access Control basically",
    "start": "1183520",
    "end": "1190159"
  },
  {
    "text": "maintaining the authorization model and the third one uh is the entry ID authentication but this time it is",
    "start": "1190159",
    "end": "1196440"
  },
  {
    "text": "combined with the Azure Bas Access Control uh which is azure's own uh controls",
    "start": "1196440",
    "end": "1202159"
  },
  {
    "text": "which are not explicitly um unique uh to the",
    "start": "1202159",
    "end": "1207360"
  },
  {
    "text": "kubernetes it also supports uh many other services so in the next few slides we'll focus only on clusters which are",
    "start": "1207360",
    "end": "1213320"
  },
  {
    "text": "configured with the entri authentication um so let's imagine we",
    "start": "1213320",
    "end": "1218799"
  },
  {
    "text": "are a regular user and we want to perform some kind of operations in our cluster um how will it look like um so",
    "start": "1218799",
    "end": "1225240"
  },
  {
    "text": "we first have to perform a login to our entry to to our identity provider in our",
    "start": "1225240",
    "end": "1230559"
  },
  {
    "text": "case is the entry ID um next we'll receive a token which will'll then use",
    "start": "1230559",
    "end": "1236159"
  },
  {
    "text": "uh against our kubernetes cluster if you use the a CLI or uh other things your",
    "start": "1236159",
    "end": "1241679"
  },
  {
    "text": "Cube cutle already should be um ready to do so automatically um so then we'll",
    "start": "1241679",
    "end": "1247559"
  },
  {
    "text": "perform our operation with the token and actually behind the scenes uh it will perform the authentication against an",
    "start": "1247559",
    "end": "1253679"
  },
  {
    "text": "external um uh web hook server uh which will then uh validate the JWT token um",
    "start": "1253679",
    "end": "1260760"
  },
  {
    "text": "perform the Microsoft API graph for uh various user details and return it back",
    "start": "1260760",
    "end": "1266240"
  },
  {
    "text": "uh to the kubernetes API server uh which will now have to authorize the request",
    "start": "1266240",
    "end": "1271440"
  },
  {
    "text": "um in some cases there are also another external uh webbook server which are is",
    "start": "1271440",
    "end": "1276559"
  },
  {
    "text": "responsible for the authorization um but if uh for example",
    "start": "1276559",
    "end": "1281960"
  },
  {
    "text": "the C AP Ser authorize the request then it will also perform the request and return the data back to the",
    "start": "1281960",
    "end": "1287520"
  },
  {
    "text": "user now I think the most interesting part uh in this section is we're still",
    "start": "1287520",
    "end": "1292880"
  },
  {
    "text": "authenticating with the entry ID uh and it means uh that basically every service principle uh every user in our directory",
    "start": "1292880",
    "end": "1300840"
  },
  {
    "text": "which directory is basically equivalent to tenant uh will be able to authenticate to our cluster now it",
    "start": "1300840",
    "end": "1306200"
  },
  {
    "text": "doesn't mean there will be automatically granted to perform any operations on our cluster but they'll still be",
    "start": "1306200",
    "end": "1311520"
  },
  {
    "text": "authenticated uh and let's keep that in mind in the next few slides um so let's imagine we somehow",
    "start": "1311520",
    "end": "1318200"
  },
  {
    "text": "obtain random service principle credentials in our directory uh how will it look like when we want to",
    "start": "1318200",
    "end": "1323880"
  },
  {
    "text": "authenticate uh to perform some kind of operations on a cluster which is configured with the entro",
    "start": "1323880",
    "end": "1329279"
  },
  {
    "text": "ID um so we first will'll use those credentials uh and we'll have to generate a token which we'll then use uh",
    "start": "1329279",
    "end": "1336360"
  },
  {
    "text": "against our cluster and we can do this uh with the curl command uh next we'll use Cube cuddle",
    "start": "1336360",
    "end": "1342880"
  },
  {
    "text": "against our cluster and for example perform the get secret operation and of course we've been denied because we're not authorized to perform from any",
    "start": "1342880",
    "end": "1349400"
  },
  {
    "text": "operation and however let's see what do the loog shows uh behind the scenes so",
    "start": "1349400",
    "end": "1354840"
  },
  {
    "text": "we can see the response status um basically the same error we received before uh but let's focus on the user",
    "start": "1354840",
    "end": "1361880"
  },
  {
    "text": "section and more specifically on the groups um so we can see that we are part",
    "start": "1361880",
    "end": "1367039"
  },
  {
    "text": "of the system authenticated group we are random user in our directory is part of the system authenticated group uh which",
    "start": "1367039",
    "end": "1373679"
  },
  {
    "text": "basically groups all the authenticated uh identities and now why is it t interesting for",
    "start": "1373679",
    "end": "1379559"
  },
  {
    "text": "us um so we've seen many cases uh that uh cluster administrators tend to uh",
    "start": "1379559",
    "end": "1385559"
  },
  {
    "text": "trust the system authenticated group and bind to it uh roles which may contain higher privileges so this uh basically",
    "start": "1385559",
    "end": "1393640"
  },
  {
    "text": "combined uh with your ability to authenticate uh to a cluster configured with the entry ID can be an open door",
    "start": "1393640",
    "end": "1400960"
  },
  {
    "text": "for PR escalation and lateral movement techniques uh now finally uh JY also",
    "start": "1400960",
    "end": "1407320"
  },
  {
    "text": "behave the same I think couple of months ago uh security researcher found that every Google account could authenticate",
    "start": "1407320",
    "end": "1413360"
  },
  {
    "text": "to any GK cluster uh and be also part of the system authenticated group and they also found the same result uh that many",
    "start": "1413360",
    "end": "1420440"
  },
  {
    "text": "users tend to trust the system authenticated group and bind to it uh role which may contain uh higher",
    "start": "1420440",
    "end": "1427360"
  },
  {
    "text": "privileges uh so now let's see a short demo on how it",
    "start": "1427360",
    "end": "1432679"
  },
  {
    "text": "works all right so excuse us for the small font um so",
    "start": "1437440",
    "end": "1444840"
  },
  {
    "text": "um let's uh say we have a cluster which is configured with the entryid authentication and we have a cluster all",
    "start": "1444840",
    "end": "1451039"
  },
  {
    "text": "binding which binds uh uh the power for R to the system authenticated group",
    "start": "1451039",
    "end": "1456480"
  },
  {
    "text": "basically grants us pod get pod list pods and all those stuff L secrets and",
    "start": "1456480",
    "end": "1462080"
  },
  {
    "text": "now we'll use a random service principle credentials uh to generate a token which will be uh then used against uh our",
    "start": "1462080",
    "end": "1469080"
  },
  {
    "text": "kubernetes cluster which is configured with the ENT ID um then we'll use the token for",
    "start": "1469080",
    "end": "1475640"
  },
  {
    "text": "example to perform the get deployments operation uh and we can see uh that of",
    "start": "1475640",
    "end": "1483399"
  },
  {
    "text": "course we've been denied because we are not authorized to perform the operation but let's see what uh actually we can",
    "start": "1483399",
    "end": "1490639"
  },
  {
    "text": "do uh and we can see that we can uh get pods list pods and list secrets",
    "start": "1492360",
    "end": "1498840"
  },
  {
    "text": "uh because we are indeed part of the system authenticated group um so let's try uh and use our",
    "start": "1498840",
    "end": "1506440"
  },
  {
    "text": "permissions now uh to get those uh",
    "start": "1506440",
    "end": "1511840"
  },
  {
    "text": "resources all right so that's basically it for the demo and now",
    "start": "1514360",
    "end": "1520360"
  },
  {
    "text": "uh we'll talk about uh AKs SP identity um so for those who are not familiar",
    "start": "1520360",
    "end": "1526600"
  },
  {
    "text": "with the AKP identity uh it's it's a new feature AWS released uh I think couple months ago also uh and basically helps",
    "start": "1526600",
    "end": "1533320"
  },
  {
    "text": "bridging uh access of service accounts to AWS resources uh now in the next few slides",
    "start": "1533320",
    "end": "1539640"
  },
  {
    "text": "uh we'll see an example of how uh we can use uh the the e p idty in our advantage",
    "start": "1539640",
    "end": "1545440"
  },
  {
    "text": "using the host Network through uh configuration so let's see at a very",
    "start": "1545440",
    "end": "1550520"
  },
  {
    "text": "high level how it works uh I won't really get into details uh so after",
    "start": "1550520",
    "end": "1555919"
  },
  {
    "text": "installing the easp identity add-on on our cluster were introduced with two new endpoints uh the first is a pod identity",
    "start": "1555919",
    "end": "1563320"
  },
  {
    "text": "webbook uh and the second one is a demon set called EK spot identity agent which",
    "start": "1563320",
    "end": "1568840"
  },
  {
    "text": "actually serves as an um identity uh role uh fetcher let's say so from now on",
    "start": "1568840",
    "end": "1577640"
  },
  {
    "text": "uh each pod which is which is configured with a service account that wants to have an access to AWS resources and is",
    "start": "1577640",
    "end": "1584080"
  },
  {
    "text": "configured to have a role uh will actually perform an HTP request to the eeks spot identity demon set which sits",
    "start": "1584080",
    "end": "1591240"
  },
  {
    "text": "on the same worker node and will'll basically ask it to fetch uh the necessary role um and of course it will",
    "start": "1591240",
    "end": "1598760"
  },
  {
    "text": "do that and it will return uh the RO to the Pod and then it will be able to access uh its configured uh AWS",
    "start": "1598760",
    "end": "1606679"
  },
  {
    "text": "resources uh so now let's see how we can use that uh with the host Network true configuration uh as a possible",
    "start": "1606679",
    "end": "1613840"
  },
  {
    "text": "attacker um so uh let's say we have a a working node which contains uh two pods",
    "start": "1613840",
    "end": "1619520"
  },
  {
    "text": "um the first pod is POD a um which contains uh the host Network true",
    "start": "1619520",
    "end": "1625399"
  },
  {
    "text": "configuration uh for those who are not familiar with what is host Network true configuration it basically allows the P",
    "start": "1625399",
    "end": "1631440"
  },
  {
    "text": "to access the network adapters of uh the worker node uh with the right capabilities it also allows a network",
    "start": "1631440",
    "end": "1637600"
  },
  {
    "text": "capture of all the traffic uh from the worker node uh let's assume that malicious actor is was able to get",
    "start": "1637600",
    "end": "1644760"
  },
  {
    "text": "access to pod a and next we'll have p b uh uh which will happen to have a",
    "start": "1644760",
    "end": "1650919"
  },
  {
    "text": "service account uh which has access to S3 buckets now uh slide before I told",
    "start": "1650919",
    "end": "1657159"
  },
  {
    "text": "you that to have an access now for uh those resources it first has to send a",
    "start": "1657159",
    "end": "1663360"
  },
  {
    "text": "request uh behind the scenes to the sport identity agent which sits on the same uh working node um and then uh it",
    "start": "1663360",
    "end": "1672480"
  },
  {
    "text": "will receive the necessary token uh that will allow it to access the S3 buckets uh now because from p a uh we",
    "start": "1672480",
    "end": "1680399"
  },
  {
    "text": "have the capability to uh perform a network capture we can possibly capture",
    "start": "1680399",
    "end": "1685519"
  },
  {
    "text": "the U the token received from the e SP identity to portb uh because uh the",
    "start": "1685519",
    "end": "1691679"
  },
  {
    "text": "traffic between them is HTTP and not htps so uh now let's see a demo on how",
    "start": "1691679",
    "end": "1698279"
  },
  {
    "text": "it",
    "start": "1698279",
    "end": "1700440"
  },
  {
    "text": "works all right so on the left side we create a PO code uh which will have the host Network through configuration and",
    "start": "1704720",
    "end": "1711440"
  },
  {
    "text": "basically allow an attacker to perform a network capture will also have another pod which",
    "start": "1711440",
    "end": "1717720"
  },
  {
    "text": "we call a bucket reader uh which will have a service account which is configured to have access to an S3",
    "start": "1717720",
    "end": "1724080"
  },
  {
    "text": "bucket and we'll try to simulate uh the for example the STS get color identity",
    "start": "1724080",
    "end": "1730480"
  },
  {
    "text": "to basically show us uh what Ro do we have and behind the scenes it should perform a request to the E SP identity",
    "start": "1730480",
    "end": "1737919"
  },
  {
    "text": "uh um and receive each role uh on the right side we'll now uh perform the",
    "start": "1737919",
    "end": "1743279"
  },
  {
    "text": "network capture uh and then we'll see that we are able to capture the response from",
    "start": "1743279",
    "end": "1749240"
  },
  {
    "text": "the e identity agent uh and receive the",
    "start": "1749240",
    "end": "1754720"
  },
  {
    "text": "token so uh we can see that we are able uh we were able to uh basically receive",
    "start": "1755000",
    "end": "1760679"
  },
  {
    "text": "the token from thep identity by a network capture and now we can use that for example uh from a pod a which is an",
    "start": "1760679",
    "end": "1768600"
  },
  {
    "text": "attacker um to access the identity and possibly the s3e bucket of uh pod uh B",
    "start": "1768600",
    "end": "1777559"
  },
  {
    "text": "so now I'll pass the mic back to Shai uh to conclude our presentation thank you thanks Shan so that was privilege",
    "start": "1777559",
    "end": "1786000"
  },
  {
    "text": "escalation from the kubernetes into the cloud okay so I guess impact is also one",
    "start": "1786000",
    "end": "1792000"
  },
  {
    "text": "of the uh stages that impacted by the living of the land techniques all right so I hope we persu",
    "start": "1792000",
    "end": "1799960"
  },
  {
    "text": "you that there's a real problem out there in manage kubernetes clusters and we need to do something about it what",
    "start": "1799960",
    "end": "1806640"
  },
  {
    "text": "can we do though well how about we start with awareness how about we update the threat metrics to include living on the",
    "start": "1806640",
    "end": "1813799"
  },
  {
    "text": "land components such as s problem detector fluent beit and there are others as well that we didn't include in",
    "start": "1813799",
    "end": "1819760"
  },
  {
    "text": "the presentation that's a good first step but maybe we can do more we're planning",
    "start": "1819760",
    "end": "1826960"
  },
  {
    "text": "to create a project a GitHub or website that will collect those techniques",
    "start": "1826960",
    "end": "1833399"
  },
  {
    "text": "something like a l bus project maybe Cube LS if you have funny little witty name that you want to suggest for this",
    "start": "1833399",
    "end": "1840279"
  },
  {
    "text": "project Pingas we'll be happy to hear",
    "start": "1840279",
    "end": "1845519"
  },
  {
    "text": "that also we would love to encourage the csps to publish whatever they have in",
    "start": "1845559",
    "end": "1852679"
  },
  {
    "text": "the manage clusters K or call it any other word but ultim Ely the users want",
    "start": "1852679",
    "end": "1859480"
  },
  {
    "text": "to know what they run in the Clusters okay right now that's not the that's not the situation think about vulnerability",
    "start": "1859480",
    "end": "1866720"
  },
  {
    "text": "management how can we Trace how do we know in which clusters which versions We have vulnerable component we",
    "start": "1866720",
    "end": "1875039"
  },
  {
    "text": "don't so we realize this this is not everything but I think this is a good",
    "start": "1875039",
    "end": "1881320"
  },
  {
    "text": "several steps towards the towards solving the problem towards that same",
    "start": "1881320",
    "end": "1886880"
  },
  {
    "text": "Baseline that se guidance talks about uh but we probably don't really understand",
    "start": "1886880",
    "end": "1893360"
  },
  {
    "text": "what the Baseline looks like but it steps into the right direction I think",
    "start": "1893360",
    "end": "1899399"
  },
  {
    "text": "okay this is all we have for today thank you all for attending if you have questions feel free but we're going to",
    "start": "1899399",
    "end": "1905039"
  },
  {
    "text": "hang around here as well thank you thank you very",
    "start": "1905039",
    "end": "1909679"
  },
  {
    "text": "much hello hi I have a question uh you",
    "start": "1912840",
    "end": "1917919"
  },
  {
    "text": "showed the nice example with the fluent beat but generally whatever solution do",
    "start": "1917919",
    "end": "1923720"
  },
  {
    "text": "you use uh you use for logs Uh current situation kubernetes is that it's always",
    "start": "1923720",
    "end": "1929279"
  },
  {
    "text": "going to be high privileged pod logs are generally just reading a stream of text",
    "start": "1929279",
    "end": "1936760"
  },
  {
    "text": "right so is there really a need to have high priv PO for such a simple use case",
    "start": "1936760",
    "end": "1943080"
  },
  {
    "text": "and are you aware of any work in kubernetes ecosystem to change that architectural way well uh it's not",
    "start": "1943080",
    "end": "1950039"
  },
  {
    "text": "really high privilege po it's just the the fluent bit actually has just sensitive mappings into our Li cuet in",
    "start": "1950039",
    "end": "1957080"
  },
  {
    "text": "order to collect the logs yeah so it's not high privilege it just exf filtrates the data right and the key here is just",
    "start": "1957080",
    "end": "1963919"
  },
  {
    "text": "to understand the risks in your manag clusters let's say csps providers that",
    "start": "1963919",
    "end": "1969159"
  },
  {
    "text": "don't tell us that if you give config map update permission to somebody else",
    "start": "1969159",
    "end": "1974720"
  },
  {
    "text": "that can lead to the whole cluster compromise they don't don't say it right but it's true it's the reality so I",
    "start": "1974720",
    "end": "1981200"
  },
  {
    "text": "think that's the The Knowing those risks is a good first step but I agree I don't think everything can be non-privileged",
    "start": "1981200",
    "end": "1988240"
  },
  {
    "text": "okay",
    "start": "1988240",
    "end": "1991240"
  },
  {
    "text": "thanks thank [Applause]",
    "start": "1994120",
    "end": "2000960"
  },
  {
    "text": "you",
    "start": "2000960",
    "end": "2003960"
  }
]