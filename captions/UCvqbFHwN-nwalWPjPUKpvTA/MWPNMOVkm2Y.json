[
  {
    "text": "welcome to this webinar on the next",
    "start": "320",
    "end": "2360"
  },
  {
    "text": "evolution of web assembly the component",
    "start": "2360",
    "end": "4600"
  },
  {
    "text": "model my name is soan maheswar and I'm a",
    "start": "4600",
    "end": "6960"
  },
  {
    "text": "lead developer Advocate at",
    "start": "6960",
    "end": "9160"
  },
  {
    "text": "firon so I'm going to start off with",
    "start": "9160",
    "end": "11960"
  },
  {
    "text": "maybe some with a statement that could",
    "start": "11960",
    "end": "14040"
  },
  {
    "text": "be a little controversial which is it's",
    "start": "14040",
    "end": "16160"
  },
  {
    "text": "really time to reboot software",
    "start": "16160",
    "end": "18960"
  },
  {
    "text": "development and the way we have been",
    "start": "18960",
    "end": "21240"
  },
  {
    "text": "building and architecting software all",
    "start": "21240",
    "end": "23880"
  },
  {
    "text": "this while has been based on certain",
    "start": "23880",
    "end": "26679"
  },
  {
    "text": "assumptions and now with the next",
    "start": "26679",
    "end": "28560"
  },
  {
    "text": "evolution of web assembly these",
    "start": "28560",
    "end": "30199"
  },
  {
    "text": "assumptions will change so really it is",
    "start": "30199",
    "end": "32599"
  },
  {
    "text": "time for us to reboot software",
    "start": "32599",
    "end": "35079"
  },
  {
    "text": "development let me give you an example",
    "start": "35079",
    "end": "37520"
  },
  {
    "text": "right and this example is called the",
    "start": "37520",
    "end": "40200"
  },
  {
    "text": "2,400 hour problem now basically parsing",
    "start": "40200",
    "end": "46000"
  },
  {
    "text": "a URL or a URI is while it is a",
    "start": "46000",
    "end": "49399"
  },
  {
    "text": "non-trivial task it is fairly simple you",
    "start": "49399",
    "end": "52680"
  },
  {
    "text": "have a URL like this that looks like",
    "start": "52680",
    "end": "55480"
  },
  {
    "text": "https colon",
    "start": "55480",
    "end": "58480"
  },
  {
    "text": "www.on.com",
    "start": "58480",
    "end": "60039"
  },
  {
    "text": "blog and this has a protocol it has a",
    "start": "60039",
    "end": "63559"
  },
  {
    "text": "host and it has a path name and",
    "start": "63559",
    "end": "66200"
  },
  {
    "text": "sometimes it could have some queries",
    "start": "66200",
    "end": "67880"
  },
  {
    "text": "after it as well passing this is",
    "start": "67880",
    "end": "70720"
  },
  {
    "text": "straightforward right and every single",
    "start": "70720",
    "end": "73720"
  },
  {
    "text": "programming language out there has its",
    "start": "73720",
    "end": "75640"
  },
  {
    "text": "own or multiple URL parsers that are",
    "start": "75640",
    "end": "78640"
  },
  {
    "text": "standards as libraries that are used now",
    "start": "78640",
    "end": "81400"
  },
  {
    "text": "here's the thing um C++ has one Java has",
    "start": "81400",
    "end": "84119"
  },
  {
    "text": "one JavaScript has one rust has one if",
    "start": "84119",
    "end": "87320"
  },
  {
    "text": "not many and it estimates uh rather we",
    "start": "87320",
    "end": "90240"
  },
  {
    "text": "have estimated that it's taken at least",
    "start": "90240",
    "end": "94000"
  },
  {
    "text": "2,400 person hours to actually construct",
    "start": "94000",
    "end": "97040"
  },
  {
    "text": "all of these passes from scratch each",
    "start": "97040",
    "end": "99799"
  },
  {
    "text": "language needs its own each framework",
    "start": "99799",
    "end": "101720"
  },
  {
    "text": "needs its own why couldn't we just use a",
    "start": "101720",
    "end": "105240"
  },
  {
    "text": "single pass that was created as a",
    "start": "105240",
    "end": "107479"
  },
  {
    "text": "specification well the problem is there",
    "start": "107479",
    "end": "109520"
  },
  {
    "text": "are so many different languages out",
    "start": "109520",
    "end": "111159"
  },
  {
    "text": "there and each of them need their own",
    "start": "111159",
    "end": "113240"
  },
  {
    "text": "passes apply the same thing for other",
    "start": "113240",
    "end": "115920"
  },
  {
    "text": "specifications cryptographic uh Keys all",
    "start": "115920",
    "end": "118960"
  },
  {
    "text": "of these Computing things that really",
    "start": "118960",
    "end": "121680"
  },
  {
    "text": "have specifications but need to be",
    "start": "121680",
    "end": "123719"
  },
  {
    "text": "implemented from time to time in every",
    "start": "123719",
    "end": "126119"
  },
  {
    "text": "language and framework there is well all",
    "start": "126119",
    "end": "128920"
  },
  {
    "text": "of this is going to change with",
    "start": "128920",
    "end": "130679"
  },
  {
    "text": "something called the component model",
    "start": "130679",
    "end": "133319"
  },
  {
    "text": "right so really in the future if you're",
    "start": "133319",
    "end": "135000"
  },
  {
    "text": "building a Javas script app you can say",
    "start": "135000",
    "end": "137319"
  },
  {
    "text": "something like I need a yaml passer and",
    "start": "137319",
    "end": "140280"
  },
  {
    "text": "you can actually grab a yaml passer that",
    "start": "140280",
    "end": "142599"
  },
  {
    "text": "is written in Rust because rust is good",
    "start": "142599",
    "end": "144560"
  },
  {
    "text": "at doing things like passing since it is",
    "start": "144560",
    "end": "146760"
  },
  {
    "text": "a lowlevel language similarly you can",
    "start": "146760",
    "end": "149360"
  },
  {
    "text": "say like I need a date form atom and you",
    "start": "149360",
    "end": "151360"
  },
  {
    "text": "can use a python library because",
    "start": "151360",
    "end": "153280"
  },
  {
    "text": "Python's good with numbers to really do",
    "start": "153280",
    "end": "155200"
  },
  {
    "text": "that and all of this in your Javascript",
    "start": "155200",
    "end": "158040"
  },
  {
    "text": "app how this is going to work well",
    "start": "158040",
    "end": "160239"
  },
  {
    "text": "that's what I'm here to tell you to",
    "start": "160239",
    "end": "162959"
  },
  {
    "text": "understand how the component model Works",
    "start": "162959",
    "end": "164840"
  },
  {
    "text": "in web assembly you need to know a bit",
    "start": "164840",
    "end": "166640"
  },
  {
    "text": "about web assembly and the boring answer",
    "start": "166640",
    "end": "169400"
  },
  {
    "text": "about what web assembly is is it is",
    "start": "169400",
    "end": "171480"
  },
  {
    "text": "another portable bite code format which",
    "start": "171480",
    "end": "174120"
  },
  {
    "text": "means that it can run anywhere as long",
    "start": "174120",
    "end": "176440"
  },
  {
    "text": "as there is a runtime for it now this",
    "start": "176440",
    "end": "179400"
  },
  {
    "text": "was originally developed for the web in",
    "start": "179400",
    "end": "181720"
  },
  {
    "text": "the mid",
    "start": "181720",
    "end": "182760"
  },
  {
    "text": "2010s and it was meant to be lightweight",
    "start": "182760",
    "end": "186120"
  },
  {
    "text": "portable um security sandboxed by",
    "start": "186120",
    "end": "190640"
  },
  {
    "text": "default and here's the thing all of",
    "start": "190640",
    "end": "193080"
  },
  {
    "text": "these things are good for a browser but",
    "start": "193080",
    "end": "195799"
  },
  {
    "text": "they're really great for the server side",
    "start": "195799",
    "end": "198360"
  },
  {
    "text": "and to be serverless now for anything to",
    "start": "198360",
    "end": "202120"
  },
  {
    "text": "run on a server you need access to",
    "start": "202120",
    "end": "204640"
  },
  {
    "text": "things like files clocks system",
    "start": "204640",
    "end": "206799"
  },
  {
    "text": "interfaces random number generators and",
    "start": "206799",
    "end": "208959"
  },
  {
    "text": "so on and this didn't exist up until",
    "start": "208959",
    "end": "212360"
  },
  {
    "text": "201819 when something called Wy was",
    "start": "212360",
    "end": "215480"
  },
  {
    "text": "introduced this stands for web assembly",
    "start": "215480",
    "end": "217560"
  },
  {
    "text": "systems interface and this essentially",
    "start": "217560",
    "end": "220319"
  },
  {
    "text": "allows you to run web assembly outside a",
    "start": "220319",
    "end": "223080"
  },
  {
    "text": "browser so you don't need a browser",
    "start": "223080",
    "end": "225799"
  },
  {
    "text": "anymore to do all of the cool things web",
    "start": "225799",
    "end": "228239"
  },
  {
    "text": "assembly is capable for it gives you",
    "start": "228239",
    "end": "230439"
  },
  {
    "text": "access to files file systems clocks and",
    "start": "230439",
    "end": "232560"
  },
  {
    "text": "random numbers completely independent of",
    "start": "232560",
    "end": "235439"
  },
  {
    "text": "a browser or a runtime that is on the",
    "start": "235439",
    "end": "237840"
  },
  {
    "text": "browser and it extends wasum security",
    "start": "237840",
    "end": "241120"
  },
  {
    "text": "sandbox to include input output so for a",
    "start": "241120",
    "end": "244560"
  },
  {
    "text": "wasum file to work with another file you",
    "start": "244560",
    "end": "247480"
  },
  {
    "text": "have to explicitly give it permissions",
    "start": "247480",
    "end": "249879"
  },
  {
    "text": "to get access to that file because it is",
    "start": "249879",
    "end": "251920"
  },
  {
    "text": "security sandboxed by",
    "start": "251920",
    "end": "254640"
  },
  {
    "text": "default how essentially wasm works very",
    "start": "254640",
    "end": "257720"
  },
  {
    "text": "simplified is you write code in any",
    "start": "257720",
    "end": "259880"
  },
  {
    "text": "language right python JavaScript go rust",
    "start": "259880",
    "end": "262240"
  },
  {
    "text": "whatever that is compiled using an SDK",
    "start": "262240",
    "end": "265759"
  },
  {
    "text": "such as spin to a wasm file now this",
    "start": "265759",
    "end": "268840"
  },
  {
    "text": "wasm file can run in any platform any",
    "start": "268840",
    "end": "271240"
  },
  {
    "text": "architecture any operating system as",
    "start": "271240",
    "end": "273639"
  },
  {
    "text": "long as it runs a web assembly runtime",
    "start": "273639",
    "end": "277320"
  },
  {
    "text": "so in this case maybe wasum time think",
    "start": "277320",
    "end": "279479"
  },
  {
    "text": "of it as sort of a virtual machine right",
    "start": "279479",
    "end": "281560"
  },
  {
    "text": "but just that it's independent of",
    "start": "281560",
    "end": "283360"
  },
  {
    "text": "platforms architectures and so on and",
    "start": "283360",
    "end": "285759"
  },
  {
    "text": "that's how web assembly becomes portable",
    "start": "285759",
    "end": "288120"
  },
  {
    "text": "you can write code in all of these",
    "start": "288120",
    "end": "289400"
  },
  {
    "text": "languages and run it",
    "start": "289400",
    "end": "292440"
  },
  {
    "text": "anywhere so for something like this to",
    "start": "292440",
    "end": "295880"
  },
  {
    "text": "work you have to think of the contract",
    "start": "295880",
    "end": "298039"
  },
  {
    "text": "between operations and a developer as it",
    "start": "298039",
    "end": "300600"
  },
  {
    "text": "is right now especially in the case of",
    "start": "300600",
    "end": "303000"
  },
  {
    "text": "writing serverless apps what it looks",
    "start": "303000",
    "end": "306360"
  },
  {
    "text": "like is you have a proprietary software",
    "start": "306360",
    "end": "308440"
  },
  {
    "text": "like Azure functions AWS Lambda Google",
    "start": "308440",
    "end": "311160"
  },
  {
    "text": "functions and so on and your function",
    "start": "311160",
    "end": "313759"
  },
  {
    "text": "either lives in Azure and your entire",
    "start": "313759",
    "end": "316960"
  },
  {
    "text": "microservices architecture lives in",
    "start": "316960",
    "end": "318720"
  },
  {
    "text": "Azure and typically your Azure function",
    "start": "318720",
    "end": "321960"
  },
  {
    "text": "will not work with your AWS Lambda",
    "start": "321960",
    "end": "325039"
  },
  {
    "text": "serverless function right you are locked",
    "start": "325039",
    "end": "327639"
  },
  {
    "text": "into something like an azure or at a",
    "start": "327639",
    "end": "330560"
  },
  {
    "text": "slightly low level you have a container",
    "start": "330560",
    "end": "332919"
  },
  {
    "text": "and you have container Registries such",
    "start": "332919",
    "end": "334479"
  },
  {
    "text": "as oci or maybe you're in the kubernetes",
    "start": "334479",
    "end": "336800"
  },
  {
    "text": "ecosystem or you have an app running on",
    "start": "336800",
    "end": "339280"
  },
  {
    "text": "a virtual machine really we are seeing a",
    "start": "339280",
    "end": "342080"
  },
  {
    "text": "future where there's something called a",
    "start": "342080",
    "end": "343919"
  },
  {
    "text": "component model where essentially",
    "start": "343919",
    "end": "345919"
  },
  {
    "text": "everyone is writing certain components",
    "start": "345919",
    "end": "348520"
  },
  {
    "text": "that do very specific um tasks which all",
    "start": "348520",
    "end": "353080"
  },
  {
    "text": "can work with each other regardless of",
    "start": "353080",
    "end": "354880"
  },
  {
    "text": "the language that they're actually",
    "start": "354880",
    "end": "356360"
  },
  {
    "text": "written in so going back to that example",
    "start": "356360",
    "end": "359680"
  },
  {
    "text": "you can write code in whatever language",
    "start": "359680",
    "end": "361360"
  },
  {
    "text": "you want you can actually use libraries",
    "start": "361360",
    "end": "363720"
  },
  {
    "text": "from all over without knowing what the",
    "start": "363720",
    "end": "366080"
  },
  {
    "text": "other language really",
    "start": "366080",
    "end": "367759"
  },
  {
    "text": "is because of how web assembly works and",
    "start": "367759",
    "end": "370800"
  },
  {
    "text": "essentially web assembly takes care of",
    "start": "370800",
    "end": "372680"
  },
  {
    "text": "the rest again just this blows my mind",
    "start": "372680",
    "end": "375440"
  },
  {
    "text": "so I hope it's blowing your mind as well",
    "start": "375440",
    "end": "377400"
  },
  {
    "text": "imagine writing a Javascript app but",
    "start": "377400",
    "end": "379400"
  },
  {
    "text": "using a yamal parser that's written in",
    "start": "379400",
    "end": "381639"
  },
  {
    "text": "Rust and using a date formatter that's",
    "start": "381639",
    "end": "383960"
  },
  {
    "text": "written in Python Without Really knowing",
    "start": "383960",
    "end": "385960"
  },
  {
    "text": "how to write rust or python or honestly",
    "start": "385960",
    "end": "388360"
  },
  {
    "text": "without even caring that it is is",
    "start": "388360",
    "end": "389599"
  },
  {
    "text": "written in ROP python as long as your",
    "start": "389599",
    "end": "392319"
  },
  {
    "text": "yaml is passed and your date is",
    "start": "392319",
    "end": "394039"
  },
  {
    "text": "formatted the way it's supposed to be",
    "start": "394039",
    "end": "395840"
  },
  {
    "text": "your JS app will run that's what the",
    "start": "395840",
    "end": "398520"
  },
  {
    "text": "component model",
    "start": "398520",
    "end": "400960"
  },
  {
    "text": "unlocks essentially any",
    "start": "400960",
    "end": "403800"
  },
  {
    "text": "wasm um servide app or any wasm app is",
    "start": "403800",
    "end": "407440"
  },
  {
    "text": "made up of web assembly modules now",
    "start": "407440",
    "end": "409880"
  },
  {
    "text": "these can be written in things like rust",
    "start": "409880",
    "end": "411599"
  },
  {
    "text": "go C++ and many more and they compiled",
    "start": "411599",
    "end": "414960"
  },
  {
    "text": "to a core wasm module each of these",
    "start": "414960",
    "end": "417879"
  },
  {
    "text": "modules are portable because we said it",
    "start": "417879",
    "end": "420240"
  },
  {
    "text": "can run anywhere the binary size is very",
    "start": "420240",
    "end": "422720"
  },
  {
    "text": "small so you're saving on money and",
    "start": "422720",
    "end": "424800"
  },
  {
    "text": "you're saving on carbon footprint as",
    "start": "424800",
    "end": "426960"
  },
  {
    "text": "well and time uh it's isolated by",
    "start": "426960",
    "end": "430319"
  },
  {
    "text": "default it has very fast startup times",
    "start": "430319",
    "end": "432319"
  },
  {
    "text": "and no cold starts these are completely",
    "start": "432319",
    "end": "435400"
  },
  {
    "text": "Open Standards so you know you can run",
    "start": "435400",
    "end": "437240"
  },
  {
    "text": "it",
    "start": "437240",
    "end": "438360"
  },
  {
    "text": "anywhere with this recent launch of the",
    "start": "438360",
    "end": "440759"
  },
  {
    "text": "component model one of these modules can",
    "start": "440759",
    "end": "443000"
  },
  {
    "text": "work with another almost seamlessly",
    "start": "443000",
    "end": "446199"
  },
  {
    "text": "right in a way that you can compose",
    "start": "446199",
    "end": "448360"
  },
  {
    "text": "applications so you see component awm",
    "start": "448360",
    "end": "451199"
  },
  {
    "text": "which is a core wasum module on your",
    "start": "451199",
    "end": "452840"
  },
  {
    "text": "left and you see component bwm a core",
    "start": "452840",
    "end": "455639"
  },
  {
    "text": "wasum module on the right now one can",
    "start": "455639",
    "end": "459520"
  },
  {
    "text": "export the thing it does and the other",
    "start": "459520",
    "end": "461560"
  },
  {
    "text": "can import the thing it wants and this",
    "start": "461560",
    "end": "464360"
  },
  {
    "text": "way you can write it again in Rust and",
    "start": "464360",
    "end": "467000"
  },
  {
    "text": "go and really have them work against or",
    "start": "467000",
    "end": "470440"
  },
  {
    "text": "rather work with each other to create a",
    "start": "470440",
    "end": "473000"
  },
  {
    "text": "new component in this case which is",
    "start": "473000",
    "end": "474440"
  },
  {
    "text": "component",
    "start": "474440",
    "end": "475720"
  },
  {
    "text": "C and you can see that stack like thing",
    "start": "475720",
    "end": "478280"
  },
  {
    "text": "in white next to to the was web assembly",
    "start": "478280",
    "end": "481039"
  },
  {
    "text": "logo that is actually your memory as you",
    "start": "481039",
    "end": "484360"
  },
  {
    "text": "can see your export and your import is",
    "start": "484360",
    "end": "486360"
  },
  {
    "text": "not really interacting with the thing",
    "start": "486360",
    "end": "489360"
  },
  {
    "text": "that your business logic is working on",
    "start": "489360",
    "end": "491919"
  },
  {
    "text": "so because this is the security",
    "start": "491919",
    "end": "493759"
  },
  {
    "text": "sandboxed by default we're actually",
    "start": "493759",
    "end": "496599"
  },
  {
    "text": "creating interfaces for each component",
    "start": "496599",
    "end": "499159"
  },
  {
    "text": "so that they can talk to other",
    "start": "499159",
    "end": "500759"
  },
  {
    "text": "components in the web assembly ecosystem",
    "start": "500759",
    "end": "503800"
  },
  {
    "text": "that's what the component model really",
    "start": "503800",
    "end": "506440"
  },
  {
    "text": "is here is an example of how this would",
    "start": "506440",
    "end": "509599"
  },
  {
    "text": "look like in production on your right",
    "start": "509599",
    "end": "511560"
  },
  {
    "text": "you can actually see on the top there's",
    "start": "511560",
    "end": "513039"
  },
  {
    "text": "something that says business logic",
    "start": "513039",
    "end": "514680"
  },
  {
    "text": "component and there is an export and",
    "start": "514680",
    "end": "517719"
  },
  {
    "text": "this business logic is the logic you as",
    "start": "517719",
    "end": "519800"
  },
  {
    "text": "a developer right now maybe you want to",
    "start": "519800",
    "end": "522240"
  },
  {
    "text": "have authentication and authorization",
    "start": "522240",
    "end": "524959"
  },
  {
    "text": "for this business logic but you don't",
    "start": "524959",
    "end": "527080"
  },
  {
    "text": "want to write it from scratch again so",
    "start": "527080",
    "end": "529360"
  },
  {
    "text": "you can actually use a component that",
    "start": "529360",
    "end": "531519"
  },
  {
    "text": "does o for you so here is in the middle",
    "start": "531519",
    "end": "534959"
  },
  {
    "text": "an O middleware component right and you",
    "start": "534959",
    "end": "537600"
  },
  {
    "text": "can actually see",
    "start": "537600",
    "end": "539920"
  },
  {
    "text": "that um it's it exports and it Imports",
    "start": "539920",
    "end": "543240"
  },
  {
    "text": "basically it's there is an interface for",
    "start": "543240",
    "end": "545399"
  },
  {
    "text": "it to talk to your business logic and",
    "start": "545399",
    "end": "548120"
  },
  {
    "text": "then at the very bottom you have your",
    "start": "548120",
    "end": "550440"
  },
  {
    "text": "web assembly or wasi HTTP implementation",
    "start": "550440",
    "end": "553360"
  },
  {
    "text": "which could be either on spin on wasm",
    "start": "553360",
    "end": "555440"
  },
  {
    "text": "time on engine X unit wasum cloud and so",
    "start": "555440",
    "end": "559000"
  },
  {
    "text": "on essentially you can see how these",
    "start": "559000",
    "end": "561480"
  },
  {
    "text": "different components are independent",
    "start": "561480",
    "end": "563720"
  },
  {
    "text": "components of each other but they are",
    "start": "563720",
    "end": "565640"
  },
  {
    "text": "working with one another so if you're",
    "start": "565640",
    "end": "567680"
  },
  {
    "text": "writing business logic and you want an O",
    "start": "567680",
    "end": "570040"
  },
  {
    "text": "middleware component you can go ahead",
    "start": "570040",
    "end": "572680"
  },
  {
    "text": "and do so all you need to know is that",
    "start": "572680",
    "end": "575839"
  },
  {
    "text": "it exports and imports and that's how it",
    "start": "575839",
    "end": "578800"
  },
  {
    "text": "interfaces with another",
    "start": "578800",
    "end": "581760"
  },
  {
    "text": "component in fact here is a demo that",
    "start": "581760",
    "end": "584640"
  },
  {
    "text": "I'm going to show and I'm going to show",
    "start": "584640",
    "end": "585959"
  },
  {
    "text": "it to you very quickly but you can check",
    "start": "585959",
    "end": "588079"
  },
  {
    "text": "the entire code base out on our GitHub",
    "start": "588079",
    "end": "590560"
  },
  {
    "text": "right there so this is a middleware",
    "start": "590560",
    "end": "592399"
  },
  {
    "text": "component that the engineers at formon",
    "start": "592399",
    "end": "594399"
  },
  {
    "text": "wrot which essentially does",
    "start": "594399",
    "end": "596240"
  },
  {
    "text": "authentication and authorization via",
    "start": "596240",
    "end": "598440"
  },
  {
    "text": "GitHub right so imagine business logic",
    "start": "598440",
    "end": "601040"
  },
  {
    "text": "is already written um I've I've built",
    "start": "601040",
    "end": "605279"
  },
  {
    "text": "this program and I'm running it locally",
    "start": "605279",
    "end": "607720"
  },
  {
    "text": "and then I open it in my browser right",
    "start": "607720",
    "end": "611000"
  },
  {
    "text": "and I've it's not yet authorized so I'm",
    "start": "611000",
    "end": "613880"
  },
  {
    "text": "going to click on",
    "start": "613880",
    "end": "616240"
  },
  {
    "text": "login now when I click on login it",
    "start": "616240",
    "end": "618800"
  },
  {
    "text": "authorizes using GitHub and it it",
    "start": "618800",
    "end": "621360"
  },
  {
    "text": "authenticates rather using GitHub and",
    "start": "621360",
    "end": "623320"
  },
  {
    "text": "then authorizes me to then access the",
    "start": "623320",
    "end": "625440"
  },
  {
    "text": "business logic because I'm now an",
    "start": "625440",
    "end": "627200"
  },
  {
    "text": "authorized user and and if you look at",
    "start": "627200",
    "end": "629640"
  },
  {
    "text": "the code you can see different",
    "start": "629640",
    "end": "631000"
  },
  {
    "text": "components for authenticate uh authorize",
    "start": "631000",
    "end": "634040"
  },
  {
    "text": "and a call back which I've originally",
    "start": "634040",
    "end": "636320"
  },
  {
    "text": "added to my GitHub app that I did",
    "start": "636320",
    "end": "639519"
  },
  {
    "text": "earlier uh again we don't have time",
    "start": "639519",
    "end": "641880"
  },
  {
    "text": "necessarily to go through the code base",
    "start": "641880",
    "end": "643839"
  },
  {
    "text": "entirely but check it out for yourself",
    "start": "643839",
    "end": "645360"
  },
  {
    "text": "and see if it works um I think it's a",
    "start": "645360",
    "end": "647480"
  },
  {
    "text": "very cool example of",
    "start": "647480",
    "end": "649320"
  },
  {
    "text": "how the component model can work in",
    "start": "649320",
    "end": "652600"
  },
  {
    "text": "practice so what are some of the",
    "start": "652600",
    "end": "654720"
  },
  {
    "text": "advantages of this component model well",
    "start": "654720",
    "end": "657200"
  },
  {
    "text": "like I said you can write programs in",
    "start": "657200",
    "end": "659760"
  },
  {
    "text": "multiple languages and get different",
    "start": "659760",
    "end": "661959"
  },
  {
    "text": "functionalities and not really suffer",
    "start": "661959",
    "end": "663800"
  },
  {
    "text": "from that 2400r problem that we spoke",
    "start": "663800",
    "end": "666760"
  },
  {
    "text": "about but I'm going to give you a couple",
    "start": "666760",
    "end": "668560"
  },
  {
    "text": "of scenarios related to security where",
    "start": "668560",
    "end": "671279"
  },
  {
    "text": "this component model can shine now",
    "start": "671279",
    "end": "673720"
  },
  {
    "text": "imagine there's a vulnerability in an",
    "start": "673720",
    "end": "675839"
  },
  {
    "text": "upstream component in this case we are",
    "start": "675839",
    "end": "678000"
  },
  {
    "text": "imagining a vulnerability in the O",
    "start": "678000",
    "end": "680040"
  },
  {
    "text": "middleware",
    "start": "680040",
    "end": "681279"
  },
  {
    "text": "component the good thing is it doesn't",
    "start": "681279",
    "end": "683600"
  },
  {
    "text": "actually affect your entire program your",
    "start": "683600",
    "end": "685800"
  },
  {
    "text": "business logic can remain the same the",
    "start": "685800",
    "end": "687839"
  },
  {
    "text": "underlying uh",
    "start": "687839",
    "end": "689639"
  },
  {
    "text": "layers of your web assembly run times",
    "start": "689639",
    "end": "692000"
  },
  {
    "text": "can remain as is you can mitigate this",
    "start": "692000",
    "end": "694680"
  },
  {
    "text": "by simply pulling a patch Upstream",
    "start": "694680",
    "end": "696639"
  },
  {
    "text": "component of this",
    "start": "696639",
    "end": "698800"
  },
  {
    "text": "middleware fixing whatever vulnerability",
    "start": "698800",
    "end": "701680"
  },
  {
    "text": "was there and everything goes on as is",
    "start": "701680",
    "end": "704680"
  },
  {
    "text": "in fact to take this a step further the",
    "start": "704680",
    "end": "706880"
  },
  {
    "text": "bite code Alliance is working on",
    "start": "706880",
    "end": "708519"
  },
  {
    "text": "something called War checkout W.O which",
    "start": "708519",
    "end": "711720"
  },
  {
    "text": "is in development right now which is an",
    "start": "711720",
    "end": "713399"
  },
  {
    "text": "open source registry protocol for things",
    "start": "713399",
    "end": "715920"
  },
  {
    "text": "like wasm packages so in the future you",
    "start": "715920",
    "end": "718200"
  },
  {
    "text": "will on or you will see something like",
    "start": "718200",
    "end": "720360"
  },
  {
    "text": "an authorization or authentication",
    "start": "720360",
    "end": "722279"
  },
  {
    "text": "middleware that will be a standard that",
    "start": "722279",
    "end": "724680"
  },
  {
    "text": "you can use in your web assembly app and",
    "start": "724680",
    "end": "727279"
  },
  {
    "text": "not really care about its implementation",
    "start": "727279",
    "end": "730120"
  },
  {
    "text": "so long as you know that it is it's",
    "start": "730120",
    "end": "733560"
  },
  {
    "text": "working similarly let's look at a",
    "start": "733560",
    "end": "736120"
  },
  {
    "text": "scenario where there's a vulnerability",
    "start": "736120",
    "end": "738160"
  },
  {
    "text": "but this time in the business logic",
    "start": "738160",
    "end": "740560"
  },
  {
    "text": "again the layers below it are not",
    "start": "740560",
    "end": "742360"
  },
  {
    "text": "affected because we have successfully",
    "start": "742360",
    "end": "744120"
  },
  {
    "text": "written it in a compon componentized",
    "start": "744120",
    "end": "747160"
  },
  {
    "text": "manner so all you can do is is mitigate",
    "start": "747160",
    "end": "749399"
  },
  {
    "text": "by rebuilding only your business logic",
    "start": "749399",
    "end": "751680"
  },
  {
    "text": "there's really no need to rebuild any",
    "start": "751680",
    "end": "753600"
  },
  {
    "text": "other component no need to rebuild the",
    "start": "753600",
    "end": "755440"
  },
  {
    "text": "middleware no need to rebuild the",
    "start": "755440",
    "end": "757399"
  },
  {
    "text": "underlying bosm layers as well once you",
    "start": "757399",
    "end": "759839"
  },
  {
    "text": "patch your business logic everything",
    "start": "759839",
    "end": "761560"
  },
  {
    "text": "again works as is so each of these",
    "start": "761560",
    "end": "763880"
  },
  {
    "text": "components sort of work individually and",
    "start": "763880",
    "end": "766760"
  },
  {
    "text": "are there is a layer of abstraction",
    "start": "766760",
    "end": "769199"
  },
  {
    "text": "between them which makes this very",
    "start": "769199",
    "end": "771160"
  },
  {
    "text": "powerful in terms of",
    "start": "771160",
    "end": "774199"
  },
  {
    "text": "security and look let's look at a",
    "start": "774199",
    "end": "776399"
  },
  {
    "text": "scenario 3 where there is some problem",
    "start": "776399",
    "end": "779199"
  },
  {
    "text": "in the platform itself so in this case",
    "start": "779199",
    "end": "781199"
  },
  {
    "text": "we are saying that your key value store",
    "start": "781199",
    "end": "783360"
  },
  {
    "text": "in your web assembly cloud is probably",
    "start": "783360",
    "end": "785959"
  },
  {
    "text": "down so in this case the host component",
    "start": "785959",
    "end": "787839"
  },
  {
    "text": "which is an SQL component is not",
    "start": "787839",
    "end": "789560"
  },
  {
    "text": "embedded in the application but here the",
    "start": "789560",
    "end": "791680"
  },
  {
    "text": "platform provider handles this and",
    "start": "791680",
    "end": "793600"
  },
  {
    "text": "mitigates this problem so whoever is",
    "start": "793600",
    "end": "796120"
  },
  {
    "text": "giving you the cloud like say it's I",
    "start": "796120",
    "end": "797839"
  },
  {
    "text": "know fir on cloud will fix this and then",
    "start": "797839",
    "end": "801199"
  },
  {
    "text": "again your",
    "start": "801199",
    "end": "802880"
  },
  {
    "text": "entire program works as this so again",
    "start": "802880",
    "end": "806399"
  },
  {
    "text": "your o middleware is not affected your",
    "start": "806399",
    "end": "808519"
  },
  {
    "text": "business this logic is absolutely not",
    "start": "808519",
    "end": "810279"
  },
  {
    "text": "affected again because of the",
    "start": "810279",
    "end": "812399"
  },
  {
    "text": "componentized nature of how this program",
    "start": "812399",
    "end": "815000"
  },
  {
    "text": "is built now you can see why this",
    "start": "815000",
    "end": "817160"
  },
  {
    "text": "excites me and it should be exciting you",
    "start": "817160",
    "end": "819040"
  },
  {
    "text": "as",
    "start": "819040",
    "end": "820519"
  },
  {
    "text": "well also just to give you another angle",
    "start": "820519",
    "end": "823519"
  },
  {
    "text": "of why the component model can be",
    "start": "823519",
    "end": "826000"
  },
  {
    "text": "amazing is to look at costs and",
    "start": "826000",
    "end": "829560"
  },
  {
    "text": "sustainability right typically these two",
    "start": "829560",
    "end": "832000"
  },
  {
    "text": "are related proportionally uh if you",
    "start": "832000",
    "end": "834519"
  },
  {
    "text": "have like smaller binary sizes you're",
    "start": "834519",
    "end": "836279"
  },
  {
    "text": "being more energy efficient but that",
    "start": "836279",
    "end": "838880"
  },
  {
    "text": "also reduces your compute storage and",
    "start": "838880",
    "end": "841360"
  },
  {
    "text": "networking costs so you save money as",
    "start": "841360",
    "end": "843920"
  },
  {
    "text": "well if you take an example like a",
    "start": "843920",
    "end": "846720"
  },
  {
    "text": "conventional cicd on the left you see a",
    "start": "846720",
    "end": "849639"
  },
  {
    "text": "simple uh CI script basically for go",
    "start": "849639",
    "end": "853079"
  },
  {
    "text": "it's a popular script you'll find it on",
    "start": "853079",
    "end": "854560"
  },
  {
    "text": "guub there are multiple Go versions for",
    "start": "854560",
    "end": "856800"
  },
  {
    "text": "multiple os's and essentially when",
    "start": "856800",
    "end": "859360"
  },
  {
    "text": "you're packaging this you when you're",
    "start": "859360",
    "end": "861120"
  },
  {
    "text": "doing a build you do OS architecture",
    "start": "861120",
    "end": "863040"
  },
  {
    "text": "language multiple versions uh for test",
    "start": "863040",
    "end": "866040"
  },
  {
    "text": "you do your operating system and",
    "start": "866040",
    "end": "867680"
  },
  {
    "text": "architecture to",
    "start": "867680",
    "end": "869240"
  },
  {
    "text": "package this is a lot similarly if you",
    "start": "869240",
    "end": "872839"
  },
  {
    "text": "look at literally this is from the",
    "start": "872839",
    "end": "875120"
  },
  {
    "text": "docker",
    "start": "875120",
    "end": "876240"
  },
  {
    "text": "documentation you can see that there a",
    "start": "876240",
    "end": "878560"
  },
  {
    "text": "bunch of platforms labels outputs all of",
    "start": "878560",
    "end": "881199"
  },
  {
    "text": "this done in a Docker container but",
    "start": "881199",
    "end": "884079"
  },
  {
    "text": "imagine if all of this was built in a",
    "start": "884079",
    "end": "886600"
  },
  {
    "text": "componentized or component model fashion",
    "start": "886600",
    "end": "889160"
  },
  {
    "text": "this is what it would actually look at",
    "start": "889160",
    "end": "891240"
  },
  {
    "text": "right where you have a build which is",
    "start": "891240",
    "end": "894000"
  },
  {
    "text": "your build so in this case let's call it",
    "start": "894000",
    "end": "895519"
  },
  {
    "text": "the wasum 32 wasi Preview 2 your test",
    "start": "895519",
    "end": "899040"
  },
  {
    "text": "basically you just need to test one",
    "start": "899040",
    "end": "900600"
  },
  {
    "text": "thing which is your runtime because this",
    "start": "900600",
    "end": "902839"
  },
  {
    "text": "runtime we know runs in every platform",
    "start": "902839",
    "end": "905320"
  },
  {
    "text": "architecture OS and so on so all you",
    "start": "905320",
    "end": "907959"
  },
  {
    "text": "have to do is one version of this",
    "start": "907959",
    "end": "909959"
  },
  {
    "text": "runtime and you don't really need to",
    "start": "909959",
    "end": "912279"
  },
  {
    "text": "package anything because the components",
    "start": "912279",
    "end": "913959"
  },
  {
    "text": "are already packages so you don't have",
    "start": "913959",
    "end": "916199"
  },
  {
    "text": "to package anything honestly I don't",
    "start": "916199",
    "end": "918360"
  },
  {
    "text": "even need to put numbers or you know",
    "start": "918360",
    "end": "920440"
  },
  {
    "text": "benchmarks for this because I think you",
    "start": "920440",
    "end": "922240"
  },
  {
    "text": "can only tell how much more efficient in",
    "start": "922240",
    "end": "924639"
  },
  {
    "text": "terms of costs and binary sizes and",
    "start": "924639",
    "end": "926839"
  },
  {
    "text": "packet sizes and Network and uh storage",
    "start": "926839",
    "end": "930720"
  },
  {
    "text": "sizes this will be and just to add to",
    "start": "930720",
    "end": "933880"
  },
  {
    "text": "that web assembly in itself is already",
    "start": "933880",
    "end": "935880"
  },
  {
    "text": "way more lightweight than some of the",
    "start": "935880",
    "end": "938000"
  },
  {
    "text": "other technology we've been using in the",
    "start": "938000",
    "end": "939600"
  },
  {
    "text": "past so you see why the component model",
    "start": "939600",
    "end": "941920"
  },
  {
    "text": "really is the next Evolution for web",
    "start": "941920",
    "end": "946120"
  },
  {
    "text": "assembly so I hope you're excited about",
    "start": "946120",
    "end": "949319"
  },
  {
    "text": "this for next steps it's time to build",
    "start": "949319",
    "end": "951279"
  },
  {
    "text": "your first bosm app using spin you can",
    "start": "951279",
    "end": "954000"
  },
  {
    "text": "just check out github.com on/ spin it's",
    "start": "954000",
    "end": "956639"
  },
  {
    "text": "completely open source so check it out",
    "start": "956639",
    "end": "958639"
  },
  {
    "text": "out if you want to read more you can",
    "start": "958639",
    "end": "960279"
  },
  {
    "text": "read the read the blog post about it's",
    "start": "960279",
    "end": "962959"
  },
  {
    "text": "time to reboot software development",
    "start": "962959",
    "end": "964759"
  },
  {
    "text": "which speaks about the 201400 r problem",
    "start": "964759",
    "end": "968959"
  },
  {
    "text": "if you want to dive a little more deeper",
    "start": "968959",
    "end": "970639"
  },
  {
    "text": "into the tech check out the post about",
    "start": "970639",
    "end": "972560"
  },
  {
    "text": "composing components with spin if you",
    "start": "972560",
    "end": "974399"
  },
  {
    "text": "want to get started building in web",
    "start": "974399",
    "end": "976160"
  },
  {
    "text": "assembly and spin this month in December",
    "start": "976160",
    "end": "978720"
  },
  {
    "text": "there's the Advent of spin coding",
    "start": "978720",
    "end": "980199"
  },
  {
    "text": "challenge which is designed to get",
    "start": "980199",
    "end": "982000"
  },
  {
    "text": "people you know interested in building",
    "start": "982000",
    "end": "984360"
  },
  {
    "text": "in web assembly there are prizes as well",
    "start": "984360",
    "end": "986360"
  },
  {
    "text": "so check it out hope you learned",
    "start": "986360",
    "end": "988560"
  },
  {
    "text": "something new today uh feel free to",
    "start": "988560",
    "end": "990120"
  },
  {
    "text": "connect with me on LinkedIn or Twitter",
    "start": "990120",
    "end": "992360"
  },
  {
    "text": "or email or wherever you'll find me",
    "start": "992360",
    "end": "993839"
  },
  {
    "text": "online uh go check out web assembly and",
    "start": "993839",
    "end": "996519"
  },
  {
    "text": "serers side web assembly and the",
    "start": "996519",
    "end": "997920"
  },
  {
    "text": "component model have a good rest of the",
    "start": "997920",
    "end": "999839"
  },
  {
    "text": "day and see you soon",
    "start": "999839",
    "end": "1003440"
  },
  {
    "text": "bye",
    "start": "1006800",
    "end": "1009800"
  }
]