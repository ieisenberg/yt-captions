[
  {
    "text": "good afternoon and welcome uh to the last day here at kubecon um",
    "start": "0",
    "end": "5040"
  },
  {
    "text": "we've got some exciting i'm aaron reinhart uh this is matas now we have uh an exciting talk to to",
    "start": "5040",
    "end": "11519"
  },
  {
    "text": "bring to you and um today we're gonna talk about um a new open source tool it's an exciting",
    "start": "11519",
    "end": "16960"
  },
  {
    "text": "announcement we actually chose kubecon in particular to announce the tool the tool was written some time ago but we we",
    "start": "16960",
    "end": "22960"
  },
  {
    "text": "chose uh kubecon to actually debut and announce the first ever open source uh",
    "start": "22960",
    "end": "28880"
  },
  {
    "text": "tool for security kiosk engineering uh and we're gonna let's let's dig in let's dig into it yeah and just uh",
    "start": "28880",
    "end": "35760"
  },
  {
    "text": "some of you might be confused because in the schedule it said comrade it was previously named to the uh comrade the athlete who cast engineer",
    "start": "35760",
    "end": "42960"
  },
  {
    "text": "the chernobyl plant um due to the recent events in ukraine uh i decided to change the name to kiravis",
    "start": "42960",
    "end": "50399"
  },
  {
    "text": "so it's the same thing just just a different name",
    "start": "50399",
    "end": "55198"
  },
  {
    "text": "so like i said i'm aaron reinhart i'm the cton co-founder at baraca.io um i'm",
    "start": "55760",
    "end": "60800"
  },
  {
    "text": "also known as being the sort of the creator the person behind security chaos engineering i wrote the first open source tool in the space uh about five",
    "start": "60800",
    "end": "67680"
  },
  {
    "text": "years ago i'm also the co-author with kelly shortridge on the o'reilly books on the topic if anyone's interested in",
    "start": "67680",
    "end": "74479"
  },
  {
    "text": "getting a copy of the rally book please see me after the talk and i'll be happy to get you a copy of it yeah i'm matas",
    "start": "74479",
    "end": "80080"
  },
  {
    "text": "i'm currently a software engineer at ksti the project i'm presenting we're",
    "start": "80080",
    "end": "85119"
  },
  {
    "text": "presenting it has been started during my master's studies and technical university of denmark my supervisor jose",
    "start": "85119",
    "end": "91040"
  },
  {
    "text": "soler like i said there are several books on",
    "start": "91040",
    "end": "96079"
  },
  {
    "text": "uh some i've been talking about several topics today but in particular we're going to i'm going to i'm going to go over what chaos engineering is just give",
    "start": "96079",
    "end": "102240"
  },
  {
    "text": "you a basis of what that is um also uh but there are several there are",
    "start": "102240",
    "end": "107759"
  },
  {
    "text": "several o'reilly books that you can download and dive deeper in chaos engineering and security kiosk",
    "start": "107759",
    "end": "112880"
  },
  {
    "text": "engineering uh mata so this tool uh curvis will be documented in the the",
    "start": "112880",
    "end": "118880"
  },
  {
    "text": "animal book that comes out later this year uh so uh we'll stay tuned for that as well",
    "start": "118880",
    "end": "125360"
  },
  {
    "text": "so um so uh so what are we going to talk about that so today we're going to talk about um",
    "start": "126240",
    "end": "131599"
  },
  {
    "text": "the nature of complexity and modern software we're going to talk about chaos engineering we're going to talk about its application to security",
    "start": "131599",
    "end": "138239"
  },
  {
    "text": "we're going to talk about use cases uh and um we're going to talk about uh we're gonna give a demo of of curvis",
    "start": "138239",
    "end": "144640"
  },
  {
    "text": "as well as how to get started and how to start applying uh these concepts um when you get back to",
    "start": "144640",
    "end": "151599"
  },
  {
    "text": "back home so in this session uh we're gonna cover a lot of material very quickly so like i",
    "start": "151599",
    "end": "157440"
  },
  {
    "text": "said before there are o'reilly books there are lots of uh blogs and articles online you uh my contact information",
    "start": "157440",
    "end": "162959"
  },
  {
    "text": "i'll share or come up to me after the talk i'd be happy to connect with you and help you learn",
    "start": "162959",
    "end": "168440"
  },
  {
    "text": "more um so the crux of what we're addressing here is that in the world of cyber",
    "start": "168440",
    "end": "174080"
  },
  {
    "text": "security uh even modern engineering when it comes to outages breaches and incidents you know no matter how",
    "start": "174080",
    "end": "180800"
  },
  {
    "text": "how sophisticated we seem to be getting where we don't seem to be getting a lot better at preventing them or are or",
    "start": "180800",
    "end": "187440"
  },
  {
    "text": "are um it seems that outages and instances are happening more and more often i'm gonna talk about why i think that is",
    "start": "187440",
    "end": "194000"
  },
  {
    "text": "and why is this i mean what are we doing something wrong well not necessarily we're doing",
    "start": "194000",
    "end": "199040"
  },
  {
    "text": "lots of things right well the problem is is that our systems have fundamentally evolved beyond our",
    "start": "199040",
    "end": "205440"
  },
  {
    "text": "human ability to mentally model their behavior it's it's hard for humans to simplify and abstract thou hundreds of thousands",
    "start": "205440",
    "end": "212799"
  },
  {
    "text": "of things um and uh it's very difficult in in in today's modern computing",
    "start": "212799",
    "end": "218400"
  },
  {
    "text": "environment it's it's uh what makes this difficult uh is that the speed skill and",
    "start": "218400",
    "end": "224239"
  },
  {
    "text": "complexity of monitor software is challenging and so if you've never seen this picture on the left here",
    "start": "224239",
    "end": "230480"
  },
  {
    "text": "this is actually a a microservice architecture every little dot is a service and uh",
    "start": "230480",
    "end": "237280"
  },
  {
    "text": "they're all connected they're connected um these are this is what our computing",
    "start": "237280",
    "end": "242480"
  },
  {
    "text": "systems look like now right so we're no longer the error of the three-tier app it's very difficult to understand what's",
    "start": "242480",
    "end": "248720"
  },
  {
    "text": "going on at any given point in time within the system so where does all this complexity come",
    "start": "248720",
    "end": "254959"
  },
  {
    "text": "from so you see you see things on here that are things we're trying to adopt what you're trying to do devops ci cd",
    "start": "254959",
    "end": "261359"
  },
  {
    "text": "auto canary circuit breakers service meshes right these are all these are all great things right well so um the nation",
    "start": "261359",
    "end": "268720"
  },
  {
    "text": "of software is software never decreases the complexity you can't actually decrease it if you have a complex piece",
    "start": "268720",
    "end": "274400"
  },
  {
    "text": "of software you want to make it simple you have to change it to do so there's an inherent relationship between",
    "start": "274400",
    "end": "279520"
  },
  {
    "text": "making a change and introducing additional complexity so really we're going to i'm going to dive deeper into",
    "start": "279520",
    "end": "284960"
  },
  {
    "text": "what that means in terms of of of our modern systems here in a second",
    "start": "284960",
    "end": "291120"
  },
  {
    "text": "so furthermore uh so on the right here you see the new osi stack it's software software",
    "start": "291120",
    "end": "296160"
  },
  {
    "text": "software right uh software is officially taking over news flash if you're at a software conference uh",
    "start": "296160",
    "end": "302080"
  },
  {
    "text": "and you know this is the this this has brought lots of advantages but also it's brought a new era of complexity uh that",
    "start": "302080",
    "end": "308800"
  },
  {
    "text": "we have to manage as operators so like i said software only ever increases in",
    "start": "308800",
    "end": "314720"
  },
  {
    "text": "complexity it doesn't decrease complexity so there's a paper written in 1985",
    "start": "314720",
    "end": "322240"
  },
  {
    "text": "called no silver bullet it's it's about the nature of where complexity comes from in software there are two different",
    "start": "322240",
    "end": "328080"
  },
  {
    "text": "schools of thought there's accidental complexity and essential complexity so essential complexity comes from things like",
    "start": "328080",
    "end": "333360"
  },
  {
    "text": "conway's law where organizations are destined to design computer systems that reflect the way they operate as a",
    "start": "333360",
    "end": "338800"
  },
  {
    "text": "business what i mean what that means is is that you can't actually change the complexity without changing the business",
    "start": "338800",
    "end": "344560"
  },
  {
    "text": "you inherited that and it found its way into software right so you have to change the business to actually change that complexity",
    "start": "344560",
    "end": "350080"
  },
  {
    "text": "accidental complexity comes from the ways in which we build software uh and uh but really you know um you can't",
    "start": "350080",
    "end": "357520"
  },
  {
    "text": "actually remove complexity and software uh like i said um you know uh it's it's not",
    "start": "357520",
    "end": "364240"
  },
  {
    "text": "necessarily about trying to make this more simple it's trying to provide further context and navigate the",
    "start": "364240",
    "end": "371280"
  },
  {
    "text": "complexity so like i said so chaos engineering we'll talk about is not not breaking",
    "start": "371280",
    "end": "377520"
  },
  {
    "text": "things in production by the way don't do that you'll get fired right uh this is um",
    "start": "377520",
    "end": "382880"
  },
  {
    "text": "uh don't tell your boss you want to do that it's about we're trying to proactively fix things uh and we're",
    "start": "382880",
    "end": "389039"
  },
  {
    "text": "in part of the ability to do that is navigating the inherent complexity",
    "start": "389039",
    "end": "395840"
  },
  {
    "text": "okay so um when we design systems as engineers as human beings we we um",
    "start": "396000",
    "end": "403039"
  },
  {
    "text": "we forget that how messy systems engineering really is because um i used to be the chief",
    "start": "403039",
    "end": "408960"
  },
  {
    "text": "security architect at united health group the largest healthcare company in the world and i have a data architect",
    "start": "408960",
    "end": "415520"
  },
  {
    "text": "and a solutions architect coming to me for the same uh system uh and they have two different diagrams right but that's",
    "start": "415520",
    "end": "422639"
  },
  {
    "text": "the data architect had a different mental model of what they believe the system was so the solutions architect right well",
    "start": "422639",
    "end": "428800"
  },
  {
    "text": "neither one of them are wrong they're both right but they're more right when you overlay them together does that make sense so it's",
    "start": "428800",
    "end": "435120"
  },
  {
    "text": "it's we um so in the beginning of designing a system right so we the plan is so simple so clear we have you know",
    "start": "435120",
    "end": "442160"
  },
  {
    "text": "we've got our resources we kind of know the timeline we've got our repo you know we've got our docker images we've got",
    "start": "442160",
    "end": "449199"
  },
  {
    "text": "staging prod you know and we always we have that nice 3d diagram of the system right well in reality the system almost",
    "start": "449199",
    "end": "455599"
  },
  {
    "text": "never ever looks like this right what happens is",
    "start": "455599",
    "end": "460800"
  },
  {
    "text": "but then within a few days a few months we start learning about the difference between what we thought the system was and what",
    "start": "460880",
    "end": "467840"
  },
  {
    "text": "it actually is and we learned that through a series of outages and incidents surprise events",
    "start": "467840",
    "end": "473280"
  },
  {
    "text": "and i mean so after after a day you know marketing comes down and says uh we got",
    "start": "473280",
    "end": "478479"
  },
  {
    "text": "the pricing model wrong we have to refactor or we uh there's an expired cert because we forgot to change it or update it right or",
    "start": "478479",
    "end": "484960"
  },
  {
    "text": "you know um uh we a sydney decker when the world's experts in safety engineering in the world of",
    "start": "484960",
    "end": "492080"
  },
  {
    "text": "resilience engineering which is where all this stuff comes from uh is uh likes to call this the slow drift into failure",
    "start": "492080",
    "end": "498800"
  },
  {
    "text": "right is our system slowly evolves to a state where we no longer recognize",
    "start": "498800",
    "end": "504160"
  },
  {
    "text": "it so in the end the point of behind all this is our systems have fundamentally",
    "start": "504160",
    "end": "509280"
  },
  {
    "text": "become more complex and messy than we remember them being so what does all this stuff have to do",
    "start": "509280",
    "end": "515360"
  },
  {
    "text": "with security right i'm getting i'm building i'm building we're building suspense we're getting there",
    "start": "515360",
    "end": "521360"
  },
  {
    "text": "so uh cyber security is a context dependent",
    "start": "521360",
    "end": "527120"
  },
  {
    "text": "discipline okay so um so i was a software engineer for most of my career before i got into cyber",
    "start": "527120",
    "end": "532800"
  },
  {
    "text": "security and um as an engineer you know you need the flexibility convenience to change something you're",
    "start": "532800",
    "end": "538640"
  },
  {
    "text": "not sure one you're not sure if you can actually do what you're being asked to do so you're it's a process of trial and error you're trying to figure it out you",
    "start": "538640",
    "end": "545200"
  },
  {
    "text": "don't know what permissions you need or what ports you need open you don't know those things right um",
    "start": "545200",
    "end": "550320"
  },
  {
    "text": "so you kind of need the flexibility to make changes and because the software engineer your job is to deliver value to",
    "start": "550320",
    "end": "556399"
  },
  {
    "text": "customer via product via software right and but your content software engineers are constantly changing the environment",
    "start": "556399",
    "end": "561920"
  },
  {
    "text": "they're constantly trying to achieve business value right well security",
    "start": "561920",
    "end": "567040"
  },
  {
    "text": "is context dependent you must know what you're trying to secure in order to know what needs to be",
    "start": "567040",
    "end": "572560"
  },
  {
    "text": "secured about it right you have to i mean you have to know that first right well um",
    "start": "572560",
    "end": "577600"
  },
  {
    "text": "so what that the problem with that is is that we go forth we often build based on a context at a state in time we build",
    "start": "577600",
    "end": "583839"
  },
  {
    "text": "that like we build we deploy a runtime security tool or configuration rules we do that based on",
    "start": "583839",
    "end": "590160"
  },
  {
    "text": "that context what happened what happens is that engineers never stopped changing the system",
    "start": "590160",
    "end": "596000"
  },
  {
    "text": "they're still moving towards business value at that point in time we built the security we built the security based on the context we understood but the drift",
    "start": "596000",
    "end": "603279"
  },
  {
    "text": "is occurring if that makes sense so with chaos engineer for security we're introducing the conditions by",
    "start": "603279",
    "end": "609519"
  },
  {
    "text": "which we expect the security to function so we know proactively that oh my gosh",
    "start": "609519",
    "end": "614640"
  },
  {
    "text": "my security doesn't actually work the way i thought it did or it no longer is effective at doing what i designed it to",
    "start": "614640",
    "end": "619920"
  },
  {
    "text": "do we learned that before an adversary can take advantage of a",
    "start": "619920",
    "end": "625040"
  },
  {
    "text": "fundamental issue a bit of visibility so in terms of chaos engineering so i",
    "start": "625040",
    "end": "631440"
  },
  {
    "text": "like to like kind of break down uh in the term world of instrumentation testing you know what i love about chaos",
    "start": "631440",
    "end": "638000"
  },
  {
    "text": "engineering in particular is that um you know it's fundamental science and engineering all science and engineering",
    "start": "638000",
    "end": "644320"
  },
  {
    "text": "revolves around testing instrument instruments instrumentation data measurement uh and that's what we're",
    "start": "644320",
    "end": "649519"
  },
  {
    "text": "trying to achieve here but in terms of what we do in software so there's a little bit of a difference between testing and experimentation",
    "start": "649519",
    "end": "655920"
  },
  {
    "text": "experimentation is really where the chaos engineering fits in so testing real testing we're trying to",
    "start": "655920",
    "end": "662000"
  },
  {
    "text": "verify or validate something we already know to be true are false it's sort of a binary thing in the world of security so",
    "start": "662000",
    "end": "668000"
  },
  {
    "text": "it's what we we know we're looking for before we go looking for it so the world of security",
    "start": "668000",
    "end": "673200"
  },
  {
    "text": "that's things like um see a cbe an attack pattern and a signature um",
    "start": "673200",
    "end": "678880"
  },
  {
    "text": "whereas uh experimentation in chaos engineering we're trying to derive new information",
    "start": "678880",
    "end": "684399"
  },
  {
    "text": "that we previously did not know the more the unknown space of the system and we do that by introducing the",
    "start": "684399",
    "end": "691279"
  },
  {
    "text": "conditions we expect the system to successfully operate under we never introduce chaos engineering to introduce",
    "start": "691279",
    "end": "697040"
  },
  {
    "text": "chaos chaos energy is not about chaos creating chaos it's actually about creating order and i'm going to expand",
    "start": "697040",
    "end": "702880"
  },
  {
    "text": "to that in a minute so chaos engineering so the original netflix definition is the discipline of",
    "start": "702880",
    "end": "709440"
  },
  {
    "text": "experimentation on distributed systems in order to build confidence in your ability to withstand tribal",
    "start": "709440",
    "end": "715760"
  },
  {
    "text": "conditions so another way of saying this is it's the practice of proactively introducing um",
    "start": "715760",
    "end": "723360"
  },
  {
    "text": "the failure into a system to try to determine the conditions by which the system will fail",
    "start": "723360",
    "end": "729200"
  },
  {
    "text": "before it fails we're this is a proactive discipline we're trying to understand and verify and validate and",
    "start": "729200",
    "end": "735600"
  },
  {
    "text": "build confidence that the system can actually handle 140 milliseconds of light circuit actually",
    "start": "735600",
    "end": "741519"
  },
  {
    "text": "we can actually detect what a misconfigured port a misconfigured user entitlement we can detect those things",
    "start": "741519",
    "end": "748000"
  },
  {
    "text": "proactively instead of finding out after the fact when somebody exploits that going backwards is uh",
    "start": "748000",
    "end": "755360"
  },
  {
    "text": "is is much much more difficult much more painful for the for the world from the consumer",
    "start": "755360",
    "end": "761440"
  },
  {
    "text": "so um chaos engineering uh began uh how many people here for the cast monkey probably the majority right i",
    "start": "761440",
    "end": "768240"
  },
  {
    "text": "figured so uh so that chaos engineering was sort of the genesis of um of uh",
    "start": "768240",
    "end": "774720"
  },
  {
    "text": "cass monkey was sort of the genesis of chaos engineering at netflix and so what i want to do is kind of maybe tell some",
    "start": "774720",
    "end": "780480"
  },
  {
    "text": "things you maybe not know do not know about cast monkey um so chaos monkey uh",
    "start": "780480",
    "end": "786079"
  },
  {
    "text": "was uh sort of came about about 2008 2009 and netflix so netflix was moving",
    "start": "786079",
    "end": "791680"
  },
  {
    "text": "during their cloud transformation remember netflix wasn't always in the cloud during their cloud transformation aws what was happening was is",
    "start": "791680",
    "end": "799040"
  },
  {
    "text": "amis amazon machine images just were poof just disappearing there's no explanation why it was it was a feature",
    "start": "799040",
    "end": "804079"
  },
  {
    "text": "right well um netflix was trying to build a very large streaming streaming service you",
    "start": "804079",
    "end": "809760"
  },
  {
    "text": "know customers are not going to like it if the service goes down when they're trying to consume it so what they did was is um they went forth and they built",
    "start": "809760",
    "end": "816639"
  },
  {
    "text": "their system they said okay we're gonna build our systems to be resilient to this problem um so when they did that they needed a way",
    "start": "816639",
    "end": "823600"
  },
  {
    "text": "to actually verify that that logic so so if you think about things like retries",
    "start": "823600",
    "end": "828639"
  },
  {
    "text": "circuit breakers security detective and preventative kind of things or failovers um",
    "start": "828639",
    "end": "834399"
  },
  {
    "text": "that we design that logic at a point in time to operate under certain conditions so",
    "start": "834399",
    "end": "842079"
  },
  {
    "text": "uh um so when x happens y will be triggered right what happens is remember engineers are constantly changing the",
    "start": "842079",
    "end": "848320"
  },
  {
    "text": "system and we almost never actually exercise that code path until the problem occurs while engineers have been",
    "start": "848320",
    "end": "854480"
  },
  {
    "text": "changing system a lot that says that may not actually still do what you need to do",
    "start": "854480",
    "end": "859839"
  },
  {
    "text": "uh so with chaos monkey netflix was able to introduce the conditions and ensure that that uh their",
    "start": "859839",
    "end": "865920"
  },
  {
    "text": "failovers and circuit breaker patterns could actually uh could do what they needed it to do",
    "start": "865920",
    "end": "871199"
  },
  {
    "text": "so chaos monkey how it operates if you're not familiar um it's like i said it was born during a netflix's cloud",
    "start": "871199",
    "end": "876560"
  },
  {
    "text": "transformation um but um it it what's what it does is so",
    "start": "876560",
    "end": "881920"
  },
  {
    "text": "pseudo-randomly during business hours it will terminate in ami and it does that so engineers",
    "start": "881920",
    "end": "888959"
  },
  {
    "text": "can like i said validate that their uh their logic actually functions",
    "start": "888959",
    "end": "894320"
  },
  {
    "text": "so uh casey rosenthal by co-founder and also the creator of chaos engineering at netflix uh likes to say that um you know",
    "start": "894320",
    "end": "901199"
  },
  {
    "text": "be very careful about breaking things on purpose we're not trying to do that do not leave here today",
    "start": "901199",
    "end": "907519"
  },
  {
    "text": "and with the concept of breaking things that is not what we're doing right we're proactively fixing them um it's about",
    "start": "907519",
    "end": "915120"
  },
  {
    "text": "like i said it's about continuously verifying the system and creating order and yeah and i'm pretty sure casey loves",
    "start": "915120",
    "end": "922000"
  },
  {
    "text": "to tell people this i'm pretty sure that whenever i'm breaking things i probably won't have a job for very long",
    "start": "922000",
    "end": "927839"
  },
  {
    "text": "so who's doing chaos engineering so many companies i can't even i can't even count anymore i mean",
    "start": "929680",
    "end": "935920"
  },
  {
    "text": "everyone i mean people are at various stages of maturity people are adopting the concepts and implementing tools and",
    "start": "935920",
    "end": "941839"
  },
  {
    "text": "practices but this is becoming more and more of a standard practice and",
    "start": "941839",
    "end": "946880"
  },
  {
    "text": "in the future you really have no choice we have because our systems have become so large they're changing so fast we",
    "start": "946880",
    "end": "952880"
  },
  {
    "text": "need a way to instrument the system post deployment this chaos engineering is not a build process testing or",
    "start": "952880",
    "end": "959360"
  },
  {
    "text": "instrumentation it's the post deployment world that we're trying to instrument and validate",
    "start": "959360",
    "end": "965680"
  },
  {
    "text": "so security kiosk engineering news flash it's not a lot different it's the same thing as chaos engineering so",
    "start": "966399",
    "end": "972880"
  },
  {
    "text": "the point is we're trying to verify that um we uh um that our security actually",
    "start": "972880",
    "end": "977920"
  },
  {
    "text": "works so hope as an engineer i don't believe in two concepts as an injury i don't believe in hope or luck right uh and",
    "start": "977920",
    "end": "984880"
  },
  {
    "text": "hope has never been an effective strategy i mean it works in star wars but it doesn't really work in engineering we believe in data",
    "start": "984880",
    "end": "990000"
  },
  {
    "text": "measurement and instrumentation um and so what we're trying to do with the",
    "start": "990000",
    "end": "996000"
  },
  {
    "text": "like i said before is the with the security kiosk engineering so we're trying to proactively",
    "start": "996000",
    "end": "1001120"
  },
  {
    "text": "understand where our gaps are in our security before an adversary can take advantage of the fact we just don't see",
    "start": "1001120",
    "end": "1006160"
  },
  {
    "text": "it so um some use cases in the o'reilly books there's a it's much deeper uh",
    "start": "1006160",
    "end": "1013759"
  },
  {
    "text": "there's there's there's several there's actually a couple more use cases in the books uh they're more than happy to uh",
    "start": "1013759",
    "end": "1018800"
  },
  {
    "text": "to dive deep into it but i started applying chaos engineering for security in the world of sort of architecture and",
    "start": "1018800",
    "end": "1025199"
  },
  {
    "text": "validating uh security mechanisms because what was happening is engineers would come to me and architects would come to me",
    "start": "1025199",
    "end": "1031760"
  },
  {
    "text": "for for guidance for help and i would i love what i do right i would try to give them the best guidance possible but i",
    "start": "1031760",
    "end": "1038079"
  },
  {
    "text": "was never sure if they understood me correctly or if if the if they actually configured it",
    "start": "1038079",
    "end": "1044319"
  },
  {
    "text": "correctly they placed it correctly because engineering is a very opinionated and specific discipline",
    "start": "1044319",
    "end": "1049840"
  },
  {
    "text": "and what i needed was a way to ask the computer questions",
    "start": "1049840",
    "end": "1055440"
  },
  {
    "text": "uh and that's the so that's that's where i started so uh chaos engineering for security and ks engineer in general is",
    "start": "1055440",
    "end": "1061360"
  },
  {
    "text": "great for um uh instant response uh for improv uh actually uh identifying um",
    "start": "1061360",
    "end": "1067840"
  },
  {
    "text": "uh you know gaps in your observability uh um and as well as every chaos",
    "start": "1067840",
    "end": "1072960"
  },
  {
    "text": "experiment whether security or it's availability based they all have compliance value if you think about it right so um you're basically proving",
    "start": "1072960",
    "end": "1080480"
  },
  {
    "text": "whether the technology worked the way you said it did uh so make sure you keep",
    "start": "1080480",
    "end": "1085600"
  },
  {
    "text": "your uh your output of your experiments in um you know because that could be used for as an",
    "start": "1085600",
    "end": "1091520"
  },
  {
    "text": "audible artifact how does it work so we're gonna get to that that's he's gonna talk about um but",
    "start": "1091520",
    "end": "1098480"
  },
  {
    "text": "uh uh i started uh a united health group by writing a tool you could actually go to the github repo still it's somewhat",
    "start": "1098480",
    "end": "1104960"
  },
  {
    "text": "deprecated i'm not there anymore i've been there for a long time they wrote a different tool that they use um but to",
    "start": "1104960",
    "end": "1110640"
  },
  {
    "text": "this but you can still go to repo kind of see how experiments are written it's written in python and lambda in aws um",
    "start": "1110640",
    "end": "1117440"
  },
  {
    "text": "but i'll give you a quick example real quick here uh so you kind of get the concept of how it is how it's applied",
    "start": "1117440",
    "end": "1123120"
  },
  {
    "text": "and what we're trying to achieve and do um so when we opened source chaos layer",
    "start": "1123120",
    "end": "1128960"
  },
  {
    "text": "we needed an example that a security engineer that a network engineer a software engineer the executive that",
    "start": "1128960",
    "end": "1135600"
  },
  {
    "text": "people could generally understand well we've been we've been solving for misconfigured poor changes for like 35 years right but",
    "start": "1135600",
    "end": "1143200"
  },
  {
    "text": "some reason it still happens right it's not because um uh it's it's not because anybody",
    "start": "1143200",
    "end": "1149200"
  },
  {
    "text": "intentionally did something wrong or malicious mistakes happen some in if you're not a network engineer flow",
    "start": "1149200",
    "end": "1156400"
  },
  {
    "text": "network flow is not a very intuitive thing actually and um it happens so people make",
    "start": "1156400",
    "end": "1161520"
  },
  {
    "text": "mistakes right well um so at when i was at united states united health group this was a",
    "start": "1161520",
    "end": "1167440"
  },
  {
    "text": "problem we thought we had 100 solved is that this is something we we we felt so confident that if this occurred we would",
    "start": "1167440",
    "end": "1174480"
  },
  {
    "text": "detect it we prevented we'd stop it and we had uh you know there's and we had it covered well so so uh we'll be so this",
    "start": "1174480",
    "end": "1182320"
  },
  {
    "text": "so the example main example in the repo for chaos singer is this tool called this uh this uh misconfigured port um uh",
    "start": "1182320",
    "end": "1191120"
  },
  {
    "text": "injection and um so we started doing this on all of our aws instances at uh",
    "start": "1191120",
    "end": "1196400"
  },
  {
    "text": "united health group it was happening was about 60 of the time uh the firewall actually caught it",
    "start": "1196400",
    "end": "1202400"
  },
  {
    "text": "but there's 40 times it didn't uh that was not something we expected we were very new to the cloud due to aws at the",
    "start": "1202400",
    "end": "1208240"
  },
  {
    "text": "time uh and um you know but what we found out was remember this was proactive there was no outage there was",
    "start": "1208240",
    "end": "1215200"
  },
  {
    "text": "no incident there was no breach we proactively realized oh my gosh this doesn't really work",
    "start": "1215200",
    "end": "1221679"
  },
  {
    "text": "so we um uh you know so what we found out was there's a drift issue between our",
    "start": "1221679",
    "end": "1226799"
  },
  {
    "text": "commercial software and our non-commercial software firewall instances so no problem we proactively",
    "start": "1226799",
    "end": "1232159"
  },
  {
    "text": "found it and we fixed it before there was pain um so that was the first thing we learned the second thing we learned was is our",
    "start": "1232159",
    "end": "1238320"
  },
  {
    "text": "cloud native configuration management tool caught and blocked to change 100 of the time something we didn't even think about was actually better more effective",
    "start": "1238320",
    "end": "1244640"
  },
  {
    "text": "than what we expected that was the second thing the third thing was is that um we uh we we built our own sort of",
    "start": "1244640",
    "end": "1252320"
  },
  {
    "text": "security observability tool with a massive data lake and i wasn't because we knew the cloud i wasn't expecting an",
    "start": "1252320",
    "end": "1258080"
  },
  {
    "text": "alert to actually fire from these these events but that actually happened so we validated the learning actually",
    "start": "1258080",
    "end": "1264320"
  },
  {
    "text": "worked but uh finally what happened is is that when the analyst the incident responder got",
    "start": "1264320",
    "end": "1270880"
  },
  {
    "text": "the alert they couldn't tell which amazon it came from uh now as an engineer you're saying aaron you could map back an ip address and figure out",
    "start": "1270880",
    "end": "1277200"
  },
  {
    "text": "where it came from yeah you you can right but during incident or an outage that could take 15 minutes 30 minutes if",
    "start": "1277200",
    "end": "1284080"
  },
  {
    "text": "s nat is part of it uh you could be maybe an hour and uh in that case um you know uh when i was at",
    "start": "1284080",
    "end": "1291919"
  },
  {
    "text": "without a health group about one um during the busiest time of year one minute of downtime was over a million",
    "start": "1291919",
    "end": "1298080"
  },
  {
    "text": "dollars for one minute all that so all that pain never has to occur",
    "start": "1298080",
    "end": "1303280"
  },
  {
    "text": "if we proactively verify the system is doing what we expect",
    "start": "1303280",
    "end": "1309919"
  },
  {
    "text": "so i'm going to turn it over to matas he's going to talk about curvis yup so the curve is mentioned previously",
    "start": "1309919",
    "end": "1316640"
  },
  {
    "text": "it's an open source tool um it's a security cast engineering tool for kubernetes and what am i",
    "start": "1316640",
    "end": "1323200"
  },
  {
    "text": "specifically talking about so the low hanging fruit targets are cis benchmark",
    "start": "1323200",
    "end": "1329280"
  },
  {
    "text": "benchmarks for kubernetes for example api server configurations master and worker nodes",
    "start": "1329280",
    "end": "1336799"
  },
  {
    "text": "there's also cubelet configuration and parameters which are relevant for security",
    "start": "1336799",
    "end": "1342960"
  },
  {
    "text": "networking it's always interesting uh we're going to be talking about coordinates and dns proofing",
    "start": "1342960",
    "end": "1349760"
  },
  {
    "text": "and there's also a lot of more everything you can think of i've experimented with penetration testing",
    "start": "1349760",
    "end": "1355840"
  },
  {
    "text": "experiments crypto mining pods they didn't make the demo but",
    "start": "1355840",
    "end": "1361600"
  },
  {
    "text": "someone would be probably interested in them so what is an experiment exactly so when",
    "start": "1361600",
    "end": "1367919"
  },
  {
    "text": "we're talking about api server uh let's say there is uh authorization mode parameters and it's only relevant for",
    "start": "1367919",
    "end": "1374799"
  },
  {
    "text": "those who use self-managed kubernetes um but for example there's this",
    "start": "1374799",
    "end": "1380400"
  },
  {
    "text": "small parameter called rbac do you know what would happen to your cluster if you removed it um you're",
    "start": "1380400",
    "end": "1386720"
  },
  {
    "text": "welcome drive my tool also you can do the same with each cubelet in your cluster um",
    "start": "1386720",
    "end": "1393600"
  },
  {
    "text": "fortunately there was this dynamic cubelet configuration feature apparently i was the only user so with one two four",
    "start": "1393600",
    "end": "1400320"
  },
  {
    "text": "they deprecated and removed it but we're still going to be demoing it maybe it's useful to someone",
    "start": "1400320",
    "end": "1406400"
  },
  {
    "text": "and how does the experiment look like so you choose an experiment something",
    "start": "1406400",
    "end": "1412320"
  },
  {
    "text": "you want to test something you're sure that is not something you're secure about when you choose the experiment",
    "start": "1412320",
    "end": "1418960"
  },
  {
    "text": "you what the pod does is backups your previous configuration for the parameter or configuration you're testing if it's",
    "start": "1418960",
    "end": "1425360"
  },
  {
    "text": "applicable it then applies its payload that changes the existing configuration",
    "start": "1425360",
    "end": "1431360"
  },
  {
    "text": "then it tries to validate did the did it apply if it did that enters ready state and",
    "start": "1431360",
    "end": "1438159"
  },
  {
    "text": "then you're you're free to verify am i seeing what's happening",
    "start": "1438159",
    "end": "1443360"
  },
  {
    "text": "when you decide you've had enough you restored the previously backed up configuration and you",
    "start": "1443360",
    "end": "1449440"
  },
  {
    "text": "you go on as you did before so the",
    "start": "1449440",
    "end": "1454799"
  },
  {
    "text": "demo",
    "start": "1454799",
    "end": "1457799"
  },
  {
    "text": "so first off we're going to start with uh cis benchmark um worker uh",
    "start": "1460559",
    "end": "1465840"
  },
  {
    "text": "experiments and they're good to see like how it works in practice so for example we choose the uh benchmark for 415 that",
    "start": "1465840",
    "end": "1474720"
  },
  {
    "text": "it's related to the access rights to one of the files on on your worker nodes",
    "start": "1474720",
    "end": "1482080"
  },
  {
    "text": "so i previously ran qbench and if you notice the it passed like everything's",
    "start": "1482080",
    "end": "1487679"
  },
  {
    "text": "fine then we apply one of the experiments well we apply the experiment part with the parameter four one five i wanna",
    "start": "1487679",
    "end": "1494080"
  },
  {
    "text": "misconfigure i wanna test that so uh you can see that the pod enters ready",
    "start": "1494080",
    "end": "1500960"
  },
  {
    "text": "state it's called the yeah the chaos pod and it reports that i'm currently",
    "start": "1500960",
    "end": "1507200"
  },
  {
    "text": "misconfiguring cis415 uh run queue bench again q bench",
    "start": "1507200",
    "end": "1512400"
  },
  {
    "text": "backwards query and uh in the logs we can check again and uh four run five will be invalidated",
    "start": "1512400",
    "end": "1519520"
  },
  {
    "text": "so you know you can you see that uh it's actually doing its job it's uh it's not passing for",
    "start": "1519520",
    "end": "1525520"
  },
  {
    "text": "everything um then we can terminate the experiment pod and it will",
    "start": "1525520",
    "end": "1530960"
  },
  {
    "text": "restore the previously backed up file permissions and it will pass again",
    "start": "1530960",
    "end": "1538400"
  },
  {
    "text": "so the nice thing about that is uh you know well of course there's always risks i mean",
    "start": "1538960",
    "end": "1545440"
  },
  {
    "text": "something uh you know electricity going down during the middle of the experiment but uh yeah you don't have to back it up",
    "start": "1545440",
    "end": "1553039"
  },
  {
    "text": "yourself and that's a nice thing you can see the experiment we're back to the initial",
    "start": "1553039",
    "end": "1558320"
  },
  {
    "text": "state uh regarding the parameter four one five",
    "start": "1558320",
    "end": "1563520"
  },
  {
    "text": "the next next experiment it's uh relevant for cube api server and uh we're good it's again part of cis",
    "start": "1563520",
    "end": "1571039"
  },
  {
    "text": "benchmark configurations it's uh regarding the anonymous authentication parameter but uh yeah you can work well",
    "start": "1571039",
    "end": "1577600"
  },
  {
    "text": "uh the tool curve is uh can work with any parameter one setting updating",
    "start": "1577600",
    "end": "1582720"
  },
  {
    "text": "removing existing parameters my personal favorite is authorization modes in this case we're just using",
    "start": "1582720",
    "end": "1589600"
  },
  {
    "text": "anonymous authentication and we create a pod that misconfigures the api server it",
    "start": "1589600",
    "end": "1595440"
  },
  {
    "text": "takes a while because the api server has to restart and as mentioned it's only",
    "start": "1595440",
    "end": "1600799"
  },
  {
    "text": "relevant for self-managed kubernetes but yeah you can see in the logs",
    "start": "1600799",
    "end": "1606640"
  },
  {
    "text": "it's supplying one to one then we it validates itself by checking",
    "start": "1606640",
    "end": "1612080"
  },
  {
    "text": "the process process running on the master node and seeing whether you know",
    "start": "1612080",
    "end": "1618000"
  },
  {
    "text": "the misconfigured parameters are what we're experimenting with and uh yeah that's how it can confirm but it's",
    "start": "1618000",
    "end": "1625039"
  },
  {
    "text": "not just doing some random thing you can also see in the manifest that an arm synthetication has been added",
    "start": "1625039",
    "end": "1632400"
  },
  {
    "text": "and as with the previous experiments after we delete the pod",
    "start": "1633440",
    "end": "1638840"
  },
  {
    "text": "it it back it restores the api server configuration from backup and you're",
    "start": "1638840",
    "end": "1644640"
  },
  {
    "text": "back to square one yeah the api server is uh can be",
    "start": "1644640",
    "end": "1651760"
  },
  {
    "text": "validated by reading the manifest or checking the command line argument the",
    "start": "1651760",
    "end": "1657360"
  },
  {
    "text": "argument the process arguments and that's what we that's what we do in this case the anonymous authentication is no longer",
    "start": "1657360",
    "end": "1664320"
  },
  {
    "text": "there",
    "start": "1664320",
    "end": "1667320"
  },
  {
    "text": "so the next experiment it will be relevant for the uh for cubelet parameters with the",
    "start": "1673279",
    "end": "1679279"
  },
  {
    "text": "feature the dynamic kubelet configuration feature that i mentioned",
    "start": "1679279",
    "end": "1684559"
  },
  {
    "text": "um so as we can see i chose a parameter called event record qps it's a easily",
    "start": "1684559",
    "end": "1689760"
  },
  {
    "text": "quantifiable value it's easy to see like the changes in here and we're acquiring the cubelet configuration for",
    "start": "1689760",
    "end": "1696399"
  },
  {
    "text": "uh for its uh the offers parameters we can see that i want to record qps it's set to five right now we're just uh",
    "start": "1696399",
    "end": "1703360"
  },
  {
    "text": "choosing this parameter and applying a cube limits configuration experiment with it with it",
    "start": "1703360",
    "end": "1709279"
  },
  {
    "text": "after a while to let this configuration when it starts running it also takes a while because it",
    "start": "1709279",
    "end": "1714640"
  },
  {
    "text": "has to the cubelet has to restart and use the new configuration but uh yeah",
    "start": "1714640",
    "end": "1723398"
  },
  {
    "text": "when it can verify that it's been applied it uh starts reporting that event record qps",
    "start": "1724320",
    "end": "1731279"
  },
  {
    "text": "parent is running uh we can verify manually that it has",
    "start": "1731279",
    "end": "1736640"
  },
  {
    "text": "been changed now what you would do is you would uh if this is something that you want to be",
    "start": "1736640",
    "end": "1742080"
  },
  {
    "text": "aware of continuously you would go check your uh your observability stack whoever knows",
    "start": "1742080",
    "end": "1749600"
  },
  {
    "text": "someone is changing the configuration can i see that it's uh of course i don't record qps maybe it's not something a",
    "start": "1749600",
    "end": "1755440"
  },
  {
    "text": "hacker would do but as a poc it is an interesting test when we revert",
    "start": "1755440",
    "end": "1760640"
  },
  {
    "text": "to experiment again it takes a while until the cube restarts and",
    "start": "1760640",
    "end": "1765760"
  },
  {
    "text": "uses the old value uh the next experiment it's uh relevant",
    "start": "1765760",
    "end": "1770880"
  },
  {
    "text": "for core dns um we what we do is uh",
    "start": "1770880",
    "end": "1776559"
  },
  {
    "text": "uh core dns spoofing or we just add the new domain name to the core file in the",
    "start": "1776559",
    "end": "1782559"
  },
  {
    "text": "coordinates config map and uh in one of the pods in the cluster i'm trying to",
    "start": "1782559",
    "end": "1788640"
  },
  {
    "text": "crawl for google it's uh the http version so we get through uh the result that we",
    "start": "1788640",
    "end": "1795520"
  },
  {
    "text": "want we then apply a corianis configuration experiment i've configured it to so that all queries to google go",
    "start": "1795520",
    "end": "1802960"
  },
  {
    "text": "to yahoo.com and once once the pod enters the ready state",
    "start": "1802960",
    "end": "1808320"
  },
  {
    "text": "it takes a while corey and his uh it's uh it takes a while until picks up on the configuration sometimes you don't",
    "start": "1808320",
    "end": "1814720"
  },
  {
    "text": "have to roll out a new pod so for poc experiment that's what we're",
    "start": "1814720",
    "end": "1820559"
  },
  {
    "text": "doing",
    "start": "1820559",
    "end": "1823559"
  },
  {
    "text": "and as you can see the experiment is applied and once we go into the the previously pod we",
    "start": "1834159",
    "end": "1840159"
  },
  {
    "text": "receive a different response so it might be interesting to someone who's",
    "start": "1840159",
    "end": "1846880"
  },
  {
    "text": "like who want to verify that any changes in the core file they there will be a variable",
    "start": "1846880",
    "end": "1853360"
  },
  {
    "text": "i mean it doesn't take much for something bad to happen when we delete again like like",
    "start": "1853360",
    "end": "1859919"
  },
  {
    "text": "with the others we revert to initial state takes a while that's",
    "start": "1859919",
    "end": "1866000"
  },
  {
    "text": "that's why we're not doing a live demo and yeah we can confirm that we can",
    "start": "1866000",
    "end": "1873279"
  },
  {
    "text": "yeah return to previous state the last experiment that i'm",
    "start": "1873279",
    "end": "1880240"
  },
  {
    "text": "i'm going to demo it's uh yeah it's uh it's relevant to dns poofing um also",
    "start": "1880240",
    "end": "1887679"
  },
  {
    "text": "thanks to nerd choco from cyberark he's been uh how did i turn the audio for this",
    "start": "1887679",
    "end": "1894159"
  },
  {
    "text": "okay yeah um it's uh like i've used the poc that he wrote on on his blog it's about dns",
    "start": "1894159",
    "end": "1901519"
  },
  {
    "text": "proofing and networks with l2 bridges and basically what we do is uh",
    "start": "1901519",
    "end": "1906960"
  },
  {
    "text": "uh it's arp spoofing plus dns poofing on pods so we have a regular pod who",
    "start": "1906960",
    "end": "1914320"
  },
  {
    "text": "yeah who is communicating some service we then apply a spoofer pod who",
    "start": "1914320",
    "end": "1919519"
  },
  {
    "text": "uh arp spoofs both both the nodes uh bridge and the pod",
    "start": "1919519",
    "end": "1924880"
  },
  {
    "text": "and uh yeah when the when the experiment is applied we'll be able to see",
    "start": "1924880",
    "end": "1932320"
  },
  {
    "text": "it's it's running",
    "start": "1932399",
    "end": "1935840"
  },
  {
    "text": "yeah so again i've chosen google.com the http version",
    "start": "1940720",
    "end": "1946640"
  },
  {
    "text": "and uh previously we received the response from google.com now that we've applied experiment we received some",
    "start": "1947600",
    "end": "1953039"
  },
  {
    "text": "malicious payload uh which is um and also",
    "start": "1953039",
    "end": "1958799"
  },
  {
    "text": "the dns lookup resolves to the spoofing pod again it's uh",
    "start": "1958799",
    "end": "1965840"
  },
  {
    "text": "it works only on in this case we use uh i'm using a flannel cni so it's",
    "start": "1965840",
    "end": "1972880"
  },
  {
    "text": "probably not relevant for everyone but anyone who uses that and wants to experiment uh",
    "start": "1972880",
    "end": "1978159"
  },
  {
    "text": "feel free once we delete the pod as always in this case we didn't what we did was we backed up the arp",
    "start": "1978159",
    "end": "1985039"
  },
  {
    "text": "table and it takes awhile until it gets restored so it's a different kind of",
    "start": "1985039",
    "end": "1990080"
  },
  {
    "text": "backup but once we get the once we finish termination we return to",
    "start": "1990080",
    "end": "1997039"
  },
  {
    "text": "the initial state and we can resolve google.com as intended previously",
    "start": "1997039",
    "end": "2003519"
  },
  {
    "text": "and yeah that's all of the experiments that i want to show",
    "start": "2003519",
    "end": "2008960"
  },
  {
    "text": "thank you i guess for",
    "start": "2013120",
    "end": "2018320"
  },
  {
    "text": "open up the q a do we have time for q a i think there's a microphone here too if",
    "start": "2018320",
    "end": "2023440"
  },
  {
    "text": "somebody wants to ask a question uh here's some example questions we get a lot so feel free to",
    "start": "2023440",
    "end": "2030080"
  },
  {
    "text": "any questions no questions it's friday right",
    "start": "2030080",
    "end": "2037200"
  },
  {
    "text": "um okay well uh my past and i will be here after if anybody has any questions they want",
    "start": "2037200",
    "end": "2043360"
  },
  {
    "text": "to come up and chat and talk and we're happy to share but thank you all for having us thank you thank you",
    "start": "2043360",
    "end": "2051878"
  }
]