[
  {
    "text": "all right uh thanks everybody Welcome to our talk uh Flagger Linker D and Gateway API oh my",
    "start": "4620",
    "end": "12660"
  },
  {
    "text": "okay um so hello everyone I'm sanskar uh I'm a software engineer at reworks I",
    "start": "12660",
    "end": "18180"
  },
  {
    "text": "maintain flux and flago I also try to contribute to Gateway API and communities Upstream sometimes",
    "start": "18180",
    "end": "24359"
  },
  {
    "text": "um I graduated college like five months ago so this is my first coupon my first talk everything uh so I'm pretty excited",
    "start": "24359",
    "end": "30060"
  },
  {
    "text": "to be here a little bit nervous as well so see you soon awesome and yeah I'm Jason Morgan I'm a technical evangelist",
    "start": "30060",
    "end": "36300"
  },
  {
    "text": "for the Linker d project at buoyant it means it's my job to tell you to check out Linker D and why you should use it",
    "start": "36300",
    "end": "42420"
  },
  {
    "text": "and thanks so much for coming you can find me on Twitter on GitHub if you want",
    "start": "42420",
    "end": "47640"
  },
  {
    "text": "that for some reason and you can also find me if you have questions or want to yell at me after the talk Jason or at",
    "start": "47640",
    "end": "53640"
  },
  {
    "text": "Jason on the link ready slack thanks a lot okay uh so how many of you have actually",
    "start": "53640",
    "end": "60719"
  },
  {
    "text": "tried out the git API or even just like gone through the logs or something like that that's a pretty good number actually I",
    "start": "60719",
    "end": "66600"
  },
  {
    "text": "wasn't expecting that uh so for those of you who do not know about the Gateway API um it represents the next overall and",
    "start": "66600",
    "end": "73920"
  },
  {
    "text": "how we do traffic Management in community clusters that's a pretty fancy tagline what it is actually is it's",
    "start": "73920",
    "end": "79979"
  },
  {
    "text": "these new set of objects a new set of apis packaged as custom resource definitions that lets us do networking",
    "start": "79979",
    "end": "86939"
  },
  {
    "text": "and load balancing and Community thrusters in a robust manner so how many of you have actually like you know a",
    "start": "86939",
    "end": "92280"
  },
  {
    "text": "bookmark about your English annotations like thousands of them right so this is",
    "start": "92280",
    "end": "98460"
  },
  {
    "text": "actually trying to address that by making sure that us as like maintainers of projects and you as end users have a",
    "start": "98460",
    "end": "105540"
  },
  {
    "text": "nice time when you're you know configuring networking in our kubernetes clusters right awesome",
    "start": "105540",
    "end": "111060"
  },
  {
    "text": "uh so let's talk about the why for Gateway API I'm not going to read this because it's pretty dense block of text",
    "start": "111060",
    "end": "116939"
  },
  {
    "text": "but this is Loosely taken from the Gateway API site uh my translation is",
    "start": "116939",
    "end": "123659"
  },
  {
    "text": "you know what you're getting at a Gateway API or the why here is that if we can get a shared set of standards",
    "start": "123659",
    "end": "129959"
  },
  {
    "text": "that allow different tools different projects and different vendors to work together without actually needing to",
    "start": "129959",
    "end": "136200"
  },
  {
    "text": "work together directly right we all win and the bigger why is that there's actually a lot of stuff in the",
    "start": "136200",
    "end": "143700"
  },
  {
    "text": "cloud native space we're in a lot of projects a lot of tools a lot of different ways of working right as you",
    "start": "143700",
    "end": "148920"
  },
  {
    "text": "get into this realm of the different custom resource definitions and the ways",
    "start": "148920",
    "end": "154200"
  },
  {
    "text": "different people work right the the more you can do in a standard kubernetes fashion the better off you'll be",
    "start": "154200",
    "end": "161280"
  },
  {
    "text": "which kind of gets into how does the Gateway API help us or help you as users us as projects and the companies that",
    "start": "161280",
    "end": "168720"
  },
  {
    "text": "there provide more value to folks well first and foremost we get more and",
    "start": "168720",
    "end": "175260"
  },
  {
    "text": "easier interoperability between our projects and that's what today's talk is right senskar and I got together and we",
    "start": "175260",
    "end": "181500"
  },
  {
    "text": "built an integration between Linker D and Flagger without either of us like I didn't look at Flagger and he didn't",
    "start": "181500",
    "end": "186780"
  },
  {
    "text": "look at Linker D we were just able to make this thing work beyond that if you do it well and if",
    "start": "186780",
    "end": "193319"
  },
  {
    "text": "this Gateway API standard really becomes the the new way of defining how traffic rolls into and around our clusters we're",
    "start": "193319",
    "end": "201000"
  },
  {
    "text": "going to have fewer custom resource definitions to manage so we can we can handle our traffic",
    "start": "201000",
    "end": "207440"
  },
  {
    "text": "you know and together right what we're hoping for is that you know Gateway API is going to help projects like linkerty",
    "start": "207659",
    "end": "214140"
  },
  {
    "text": "and Flagger get together and pair up to slay the predator of complexity in",
    "start": "214140",
    "end": "219900"
  },
  {
    "text": "kubernetes and thank you for the pity laugh right oh",
    "start": "219900",
    "end": "226920"
  },
  {
    "text": "so I want to discuss more about Progressive delivery so I just want to like quick show of real fans how many of",
    "start": "226920",
    "end": "232620"
  },
  {
    "text": "you you are implementing Progressive delivery in your clusters or you know tried it out okay that's pretty good uh",
    "start": "232620",
    "end": "239819"
  },
  {
    "text": "for those of you haven't let me try and convince you that you should be implementing progressive unit clusters and you should probably be using Flagger",
    "start": "239819",
    "end": "246659"
  },
  {
    "text": "to do to do it okay so Progressive delivery solves a very specific set of",
    "start": "246659",
    "end": "252180"
  },
  {
    "text": "problems and that problem is basically how do you introduce new software versions into your cluster right how do",
    "start": "252180",
    "end": "258720"
  },
  {
    "text": "you have a V1 of your application and if you want to introduce a V2 of your application how do you expose that V2 to",
    "start": "258720",
    "end": "264660"
  },
  {
    "text": "your end users you could do the easy thing just you know do a rolling update just replace V1 with V2 everything would",
    "start": "264660",
    "end": "271440"
  },
  {
    "text": "work fine right so if you take a look at this very complicated fancy diagram here you could just go from step one where",
    "start": "271440",
    "end": "278100"
  },
  {
    "text": "you have V1 running of your application up and running you could just go directly to step six right and you could",
    "start": "278100",
    "end": "283740"
  },
  {
    "text": "have V2 of your application up and running the problem with that is what if V2 is not working as expected what if",
    "start": "283740",
    "end": "291060"
  },
  {
    "text": "there are bugs what if you have broken features unintentionally you do not want your users to end up using a buggy",
    "start": "291060",
    "end": "297780"
  },
  {
    "text": "version right you do not want them to have a bad experience of your website so the problem that progressor did we",
    "start": "297780",
    "end": "303479"
  },
  {
    "text": "address is is how do you make sure that your blast radius is as confined and as",
    "start": "303479",
    "end": "310400"
  },
  {
    "text": "configurable as possible right and Progressive delivery answers that using",
    "start": "310400",
    "end": "315600"
  },
  {
    "text": "iterative steps in a progressive manner to make sure that your users have a",
    "start": "315600",
    "end": "320820"
  },
  {
    "text": "better time experiencing a website so how it basically works is that instead of replacing replacing version one or of",
    "start": "320820",
    "end": "327840"
  },
  {
    "text": "your application with version two you leave it up and running and then alongside version one you create another",
    "start": "327840",
    "end": "333780"
  },
  {
    "text": "deployment which will run version 2 of your application right and then something like Flagger will start slowly",
    "start": "333780",
    "end": "340440"
  },
  {
    "text": "shifting traffic to version 2 of your application right and that means some users a very small subset of your users",
    "start": "340440",
    "end": "346860"
  },
  {
    "text": "are going to end up experiencing version two of your application and one of the prerequisites here is that you need to",
    "start": "346860",
    "end": "352740"
  },
  {
    "text": "have a robust observability stack something like Prometheus data dog whatever whatever works in your",
    "start": "352740",
    "end": "357840"
  },
  {
    "text": "organization it doesn't matter but as long as you have something which can track the performance of version two of your",
    "start": "357840",
    "end": "364020"
  },
  {
    "text": "application you're good to go what happens basically behind the scenes which you don't really see is Flagger",
    "start": "364020",
    "end": "369180"
  },
  {
    "text": "hooks into your observability stack and make sure that version 2 is working as expected right so it measure it can",
    "start": "369180",
    "end": "375360"
  },
  {
    "text": "measure stuff like latency or I don't know um request success rate you know like how many 503s are there or how many",
    "start": "375360",
    "end": "380699"
  },
  {
    "text": "404s are there whatever fits your slos and kpis Flagler validates that and only",
    "start": "380699",
    "end": "386819"
  },
  {
    "text": "when that validation is hit when that validation is met there's more and more traffic starts shifting to version two",
    "start": "386819",
    "end": "392580"
  },
  {
    "text": "of your application right so more and more users start experiencing version to your application and that all this happens in a progressive iterative",
    "start": "392580",
    "end": "399360"
  },
  {
    "text": "manual so as to make sure that if version 2 is not a good version of your application the impact the disaster and",
    "start": "399360",
    "end": "407160"
  },
  {
    "text": "the related risks are very very limited right so here we see that some some",
    "start": "407160",
    "end": "412740"
  },
  {
    "text": "traffic is progressively shifting to the new version and once we reach a threshold in this case it's 50 once we",
    "start": "412740",
    "end": "418800"
  },
  {
    "text": "use a threshold we can be confident that you know version 2 is working amazingly well we are amazing software developers",
    "start": "418800",
    "end": "425039"
  },
  {
    "text": "so you know what it's time to go ahead and promote this version and but by promotion what I mean is right now if",
    "start": "425039",
    "end": "430620"
  },
  {
    "text": "you notice we have two deployments right the green one and the blue one the blue one is running V1 and the green one is",
    "start": "430620",
    "end": "435720"
  },
  {
    "text": "running V2 but the thing is we don't really need V1 right now because we are confident that V2 works just as well",
    "start": "435720",
    "end": "441000"
  },
  {
    "text": "right so we can start replacing the blue pods with the V2 application right so",
    "start": "441000",
    "end": "446220"
  },
  {
    "text": "what happens here basically is we're doing a rolling update so that's just slowly and slowly the first deployment is going to start running V2 the primary",
    "start": "446220",
    "end": "452340"
  },
  {
    "text": "deployment and then eventually we don't need our Canary deployment the beta deployment right so we just get rid of",
    "start": "452340",
    "end": "457620"
  },
  {
    "text": "that right and that's our Canary deployment strategy yeah so this is how you do a",
    "start": "457620",
    "end": "462780"
  },
  {
    "text": "canary run all right and so now that we know a little bit about Progressive delivery and canaries can you tell us about",
    "start": "462780",
    "end": "468780"
  },
  {
    "text": "Flagger and how it helps automate that process sure so Flagger um if I were to",
    "start": "468780",
    "end": "473819"
  },
  {
    "text": "describe it in one line uh it's a kubernetes operator that automates the entire process of progressive delivery",
    "start": "473819",
    "end": "480479"
  },
  {
    "text": "whatever things are explained in the last slide it automates that entire process for you for free right so that",
    "start": "480479",
    "end": "486180"
  },
  {
    "text": "means it it lets you shift traffic uh to your you know V2 applications in",
    "start": "486180",
    "end": "491639"
  },
  {
    "text": "production gradually and it rolls back safely so if you were to deploy on a Friday let's say and for some reason",
    "start": "491639",
    "end": "497699"
  },
  {
    "text": "unfortunately the version 2 of your application was not what you're hoping to be uh Flagger or or detect that and",
    "start": "497699",
    "end": "504660"
  },
  {
    "text": "it will automatically roll back all traffic back to your last non-stable version so that you don't get like a thousand alerts on page or Duty or",
    "start": "504660",
    "end": "510720"
  },
  {
    "text": "something like that yeah uh okay so next thing is that it has a very extensive",
    "start": "510720",
    "end": "516479"
  },
  {
    "text": "Web book mechanism a very flexible webwork mechanism which allows for a lot of load testing acceptance testing it",
    "start": "516479",
    "end": "522419"
  },
  {
    "text": "really lets you have a lot of control over how you want to make sure that your Canary analysis is driven forward right",
    "start": "522419",
    "end": "528660"
  },
  {
    "text": "and it also has a lot of support uh for observability platforms like Prometheus potato Cloud watch influx I'm not going",
    "start": "528660",
    "end": "536040"
  },
  {
    "text": "to go through all of them but it's a lot and this is this used to be one of my",
    "start": "536040",
    "end": "541620"
  },
  {
    "text": "favorite things about Flagyl just how many things it can work with you know it can work with pretty much every Ingress",
    "start": "541620",
    "end": "547140"
  },
  {
    "text": "or service flash out there you know I'm not going to go through all of them but pretty much everything is supported except for like a two three or three",
    "start": "547140",
    "end": "553920"
  },
  {
    "text": "but this was the past and sort of is the present but the new semi-present and the",
    "start": "553920",
    "end": "561420"
  },
  {
    "text": "new coming future has Gateway API in it and I'm really really excited about that because what",
    "start": "561420",
    "end": "566580"
  },
  {
    "text": "it means for me as a maintainer for us as maintainers is that we don't need to write thousand thousand lines of custom",
    "start": "566580",
    "end": "572399"
  },
  {
    "text": "code Integrations and look at how istio does virtual services or how does SMI does traffic split right all we need to",
    "start": "572399",
    "end": "578640"
  },
  {
    "text": "do is be compatible with Gateway API and we are automatically compatible with the entire kubernetes networking ecosystem",
    "start": "578640",
    "end": "584339"
  },
  {
    "text": "and that is something which really excites me yeah so we talked a bit at the beginning about you know the better",
    "start": "584339",
    "end": "591000"
  },
  {
    "text": "interoperability right and the whole theme of this talk is that if Flagger can learn less about service meshes and",
    "start": "591000",
    "end": "597779"
  },
  {
    "text": "ingresses you all benefit as consumers of tools like Flagger because people",
    "start": "597779",
    "end": "603300"
  },
  {
    "text": "like sanskar can focus on writing new features and making that tool better and not how do I support the next new tool",
    "start": "603300",
    "end": "610620"
  },
  {
    "text": "that's going to arrive in that somewhat gigantic ecosystem speaking of the gigantic ecosystem let me tell you the",
    "start": "610620",
    "end": "618000"
  },
  {
    "text": "good news about service mesh Linker D is an open source project uh it's created",
    "start": "618000",
    "end": "624480"
  },
  {
    "text": "by the folks whoever appoint the people that that pay my salary here and I'm going to tell you that it is the",
    "start": "624480",
    "end": "630420"
  },
  {
    "text": "lightest weight the fastest and the most secure service mesh for kubernetes out there I'm going to say that for a bunch",
    "start": "630420",
    "end": "636180"
  },
  {
    "text": "of reasons but one of them is I believe it's I believe it's true it is the only",
    "start": "636180",
    "end": "641399"
  },
  {
    "text": "service mesh to hit graduated status within the cncf so that means we are ranked among the most mature products in",
    "start": "641399",
    "end": "647820"
  },
  {
    "text": "the space and you can rely on us for production for production use on top of",
    "start": "647820",
    "end": "652860"
  },
  {
    "text": "that we're used by small companies by very large companies by governments by non-profits we work in a bunch of",
    "start": "652860",
    "end": "659160"
  },
  {
    "text": "different spaces in fact if you didn't see it at kubecon Valencia folks over at",
    "start": "659160",
    "end": "664560"
  },
  {
    "text": "Xbox Live gave a talk about how they use Linker D to handle multi-cluster and provide encryption for all their",
    "start": "664560",
    "end": "670440"
  },
  {
    "text": "applications and the just the stories it was fairly simple and straightforward in spite of it being a very large and",
    "start": "670440",
    "end": "676560"
  },
  {
    "text": "complex environment so a quick view how does how does Linker",
    "start": "676560",
    "end": "683399"
  },
  {
    "text": "D work right or how does a service mesh work in general so here I've got a picture of a kubernetes class there",
    "start": "683399",
    "end": "688740"
  },
  {
    "text": "we've got some standard components the Ingress or what hopefully we'll start calling the Gateway we have a web front",
    "start": "688740",
    "end": "696300"
  },
  {
    "text": "end and two back ends Foo and Bar Lincoln era service mesh works by installing a control plane which is your",
    "start": "696300",
    "end": "702720"
  },
  {
    "text": "command and control interface for this tool and then by routing all your traffic through a series of small load",
    "start": "702720",
    "end": "708480"
  },
  {
    "text": "balancers in our case the Linker D2 proxy and having having those those proxies make up our data plane and",
    "start": "708480",
    "end": "715380"
  },
  {
    "text": "they'll do stuff with our traffic the stuff in question is things like providing Mutual TLS allowing us to",
    "start": "715380",
    "end": "722100"
  },
  {
    "text": "allowing us to get standard metrics out of every single application without needing to instrument that at our actual",
    "start": "722100",
    "end": "727920"
  },
  {
    "text": "application you know improve on built-in kubernetes load balancing and other other things that you can hear more",
    "start": "727920",
    "end": "733260"
  },
  {
    "text": "about if you check out the point Booth later today foreign that we want to kind of go back to",
    "start": "733260",
    "end": "739920"
  },
  {
    "text": "Gateway API and the the point of this talk right how does this all work together and want to give you an",
    "start": "739920",
    "end": "745140"
  },
  {
    "text": "overview of some of the objects right so these objects here basically",
    "start": "745140",
    "end": "750959"
  },
  {
    "text": "represent the code the backbone of the Gateway API project right so as I said before in my previous slide that Gateway",
    "start": "750959",
    "end": "757860"
  },
  {
    "text": "API is nothing but a bunch of apis custom resources that have been modeled together right and these represent those",
    "start": "757860",
    "end": "763860"
  },
  {
    "text": "objects so we'll take the first one uh that's called a Gateway class uh pretty simple very similar to English class it",
    "start": "763860",
    "end": "770940"
  },
  {
    "text": "basically represents a type of Gateway API a Gateway API implementation so for",
    "start": "770940",
    "end": "776700"
  },
  {
    "text": "example if you are have if you have an infrastructure provider who is provisioning clusters for you they will",
    "start": "776700",
    "end": "783120"
  },
  {
    "text": "probably install it for you this Gateway class object which is because they will install the type of load balancer yeah",
    "start": "783120",
    "end": "789000"
  },
  {
    "text": "right and just to stop if you see on the left hand side we've got pitchers at happy folks doing jobs right so we have",
    "start": "789000",
    "end": "796380"
  },
  {
    "text": "the goal here with with Gateway API is to give different objects for different folks so that we can use the kubernetes",
    "start": "796380",
    "end": "802920"
  },
  {
    "text": "role-based access control to decide who's doing what and in what way right so that we don't have to we can make the",
    "start": "802920",
    "end": "810120"
  },
  {
    "text": "blast radius of security changes smaller so we've got the Gateway class which is",
    "start": "810120",
    "end": "815760"
  },
  {
    "text": "the type of load balancer we're going to get or the way we're going to bind to that back-end Network and then our cluster operator or our platform",
    "start": "815760",
    "end": "822240"
  },
  {
    "text": "Engineers or whatever we call them in our organization they're going to be the ones concerned with the Gateway what used to be the Ingress how are we going",
    "start": "822240",
    "end": "828779"
  },
  {
    "text": "to get how are we going to build that front door for our clust there now we're going to be able to begin getting traffic in now past that front door we",
    "start": "828779",
    "end": "835680"
  },
  {
    "text": "have a new object type and that's going to be our HTTP rep yeah so HTTP it always basically determine the routes",
    "start": "835680",
    "end": "842700"
  },
  {
    "text": "right so there are a lot of routes TCP route grpc route we're not going to concern ourselves with those we're going to talk about HTTP routes so as Jason",
    "start": "842700",
    "end": "849660"
  },
  {
    "text": "said gate Gateway is basically the front door or the load balancer right so Ingress is to do this differently",
    "start": "849660",
    "end": "855360"
  },
  {
    "text": "Ingress had your load balancer configuration and your routing configuration in the same object this",
    "start": "855360",
    "end": "860700"
  },
  {
    "text": "hasn't split up in my opinion which is a very good decision uh into two different objects the Gateway defines your load",
    "start": "860700",
    "end": "866040"
  },
  {
    "text": "balancing configuration and HTTP routes Define how you throw forward traffic to which Services receive what traffic",
    "start": "866040",
    "end": "872040"
  },
  {
    "text": "right and this is something which your application developers and sres are really concerned about because they are",
    "start": "872040",
    "end": "878459"
  },
  {
    "text": "the ones who are going to determine that I want traffic which has a path V2 in it to go to V2 of my application right",
    "start": "878459",
    "end": "886800"
  },
  {
    "text": "okay okay so it's time for some plain old yaml uh because there is nothing",
    "start": "886800",
    "end": "893040"
  },
  {
    "text": "better than yaml apparently so we're going to look at some yaml okay so here we have a Gateway object",
    "start": "893040",
    "end": "900480"
  },
  {
    "text": "um so it has the name it has a namespace right and then it has something called a Gateway class name right uh so Gateway",
    "start": "900480",
    "end": "906720"
  },
  {
    "text": "classes are cluster scope objects if they're not namespaced so they you don't need any space to refer to a Gateway",
    "start": "906720",
    "end": "913019"
  },
  {
    "text": "class so each Gateway object is basically an instantiation of a Gateway class right so here this object is",
    "start": "913019",
    "end": "920519"
  },
  {
    "text": "basically of a type Foo lb right that's all it's saying then since gateways are",
    "start": "920519",
    "end": "926339"
  },
  {
    "text": "basically load balancers right they are layer on top of load balancers and load balances listen for traffic uh you need",
    "start": "926339",
    "end": "932160"
  },
  {
    "text": "to define a bunch of listeners so here we Define one listener which listens on Port 80 and it listens only for HTTP",
    "start": "932160",
    "end": "938160"
  },
  {
    "text": "traffic right and one of my favorite features about the Gateway API project this is really",
    "start": "938160",
    "end": "944040"
  },
  {
    "text": "powerful is the robust ACL mechanism you have here right so one of the very missing features about ingresses is that",
    "start": "944040",
    "end": "950579"
  },
  {
    "text": "you could not cross namespace reference things right you have a service in the other name space that Ingress needs to",
    "start": "950579",
    "end": "956220"
  },
  {
    "text": "be there it was very happy if you want to do something else right Gateway API really takes that into consideration and",
    "start": "956220",
    "end": "961680"
  },
  {
    "text": "builds a very very nice and robust modern how to address those concerns so here you see we have something called",
    "start": "961680",
    "end": "967620"
  },
  {
    "text": "allowed routes and it says that it's only going to allow routes to assume responsibility for this traffic which",
    "start": "967620",
    "end": "974579"
  },
  {
    "text": "sort of type HTTP routes that means any other route which are of like TCP type or grpc they cannot assume",
    "start": "974579",
    "end": "981600"
  },
  {
    "text": "responsibility for any traffic that flows into this listener right furthermore that SCP route needs to be",
    "start": "981600",
    "end": "987660"
  },
  {
    "text": "needs to be in the namespace which have that which has that label right otherwise that HTTP route is not allowed",
    "start": "987660",
    "end": "993120"
  },
  {
    "text": "to handle that traffic which is flowing into that listener so does that mean if I've got like a back-end namespace right",
    "start": "993120",
    "end": "1000019"
  },
  {
    "text": "where I don't intend to expose anything to the internet I can ensure that folks can't create routes to bind to this game",
    "start": "1000019",
    "end": "1005180"
  },
  {
    "text": "yep exactly exactly and the YC was also true if you want someone to have access to that you can enable that explicitly",
    "start": "1005180",
    "end": "1011779"
  },
  {
    "text": "as well great now let's look at a recipe around right it has a name it has a namespace one",
    "start": "1011779",
    "end": "1019040"
  },
  {
    "text": "thing which I would like to point out uh is the namespace of the SGP Road and the namespace of the Gateway are different",
    "start": "1019040",
    "end": "1025100"
  },
  {
    "text": "right and this is another example of the Cross stain space referencing right which is which is not possible earlier",
    "start": "1025100",
    "end": "1031100"
  },
  {
    "text": "but it's really really easy to do and in a much more intuitive manner right uh",
    "start": "1031100",
    "end": "1036260"
  },
  {
    "text": "then we have a parent ref which basically says that uh this HTTP announce parent is that Gateway object",
    "start": "1036260",
    "end": "1041900"
  },
  {
    "text": "so each HTTP route needs to have a parent to get traffic from so once the",
    "start": "1041900",
    "end": "1047000"
  },
  {
    "text": "Gateway is established the load balance is there the HTTP route needs to say that this is the load balancer I want",
    "start": "1047000",
    "end": "1052340"
  },
  {
    "text": "traffic to be coming from and I want to do something with the traffic and what that it does what what the rules are",
    "start": "1052340",
    "end": "1058640"
  },
  {
    "text": "applied to the to the traffic that comes into a ship route is determined by the rule specification right so you can",
    "start": "1058640",
    "end": "1064460"
  },
  {
    "text": "really go on town on this there are like so many extensive configuration options on what you what you can do you can",
    "start": "1064460",
    "end": "1070760"
  },
  {
    "text": "modify request headers recently we added support for modifying response status as well you can determine where it goes the",
    "start": "1070760",
    "end": "1077059"
  },
  {
    "text": "weights Etc you have a lot of flexibility on what you want to do here here we have a pretty simple rule which",
    "start": "1077059",
    "end": "1083480"
  },
  {
    "text": "just says forward or traffic to backend server back full service on Port 8080.",
    "start": "1083480",
    "end": "1089539"
  },
  {
    "text": "all right so this is the messiest diagram and one of our last slides so let's let's talk through it real quick",
    "start": "1089539",
    "end": "1095360"
  },
  {
    "text": "so what I want to do is talk about the the star of this show right which is the",
    "start": "1095360",
    "end": "1101720"
  },
  {
    "text": "work that we didn't have to do to make this actually happen or more importantly what is the interface between Flagger",
    "start": "1101720",
    "end": "1109100"
  },
  {
    "text": "and your service mesh in this case Linker D that is this HTTP route object that orange thing in the center of our",
    "start": "1109100",
    "end": "1115520"
  },
  {
    "text": "diagram all right so I'm going to talk through this a little bit so we have Flagger on the right hand side in green Flagger is the operator that's going to",
    "start": "1115520",
    "end": "1122900"
  },
  {
    "text": "actually automate that Canary rollout that we're we're all here to hear about right and Flagger gets its instructions",
    "start": "1122900",
    "end": "1129860"
  },
  {
    "text": "from a custom object called the canary so Carrie defines hey what deployment do I care about what are my testing",
    "start": "1129860",
    "end": "1136580"
  },
  {
    "text": "criteria what are the steps that I'm going to use and how am I going to validate that on top of that when we",
    "start": "1136580",
    "end": "1142340"
  },
  {
    "text": "install Flagger we give it a connection to a Prometheus that comes with Linker D or whatever Prometheus is storing",
    "start": "1142340",
    "end": "1149419"
  },
  {
    "text": "linkertys metrics data so we talked a little bit about Linker D but one things it gives you is standard metrics for",
    "start": "1149419",
    "end": "1155600"
  },
  {
    "text": "every single application in your environment things like what is the request success rate what is the latency",
    "start": "1155600",
    "end": "1161600"
  },
  {
    "text": "and we're going to use that information in this actual demo or flag more actually Flagger will use that",
    "start": "1161600",
    "end": "1167660"
  },
  {
    "text": "information to decide is this a good new version or is there a problem and we",
    "start": "1167660",
    "end": "1172940"
  },
  {
    "text": "should roll back all right so flagger gets its instructions from the canary it",
    "start": "1172940",
    "end": "1178400"
  },
  {
    "text": "decides it sees a change in a deployment object and decides it's time to do a new",
    "start": "1178400",
    "end": "1183799"
  },
  {
    "text": "Canary rollout so it's going to spin up a new version a new Canary service to receive traffic and then it's going to",
    "start": "1183799",
    "end": "1190100"
  },
  {
    "text": "tell the HTTP route please shift some percentage of the traffic in our example",
    "start": "1190100",
    "end": "1195260"
  },
  {
    "text": "80 percent of the canary 20 to the primary right and that's where it stops it",
    "start": "1195260",
    "end": "1201919"
  },
  {
    "text": "doesn't want to understand we don't want it to understand the internals of our service mesh or Ingress or whatever the",
    "start": "1201919",
    "end": "1208100"
  },
  {
    "text": "tool is we want it to express its will and you know we'll be like the Anson and Star Trek right like make it so",
    "start": "1208100",
    "end": "1215780"
  },
  {
    "text": "um so with that we're going to talk about the gamma extension so the gamma extension is a extension to Linker D",
    "start": "1215780",
    "end": "1221600"
  },
  {
    "text": "that we actually wrote as part of this this demo exercise and we built it not",
    "start": "1221600",
    "end": "1226940"
  },
  {
    "text": "by talking to the folks at at Flagger but instead looking at the HTTP route specification and figuring out how it",
    "start": "1226940",
    "end": "1232940"
  },
  {
    "text": "works and watching that HTTP route and translating the changes that it makes or it sees to Tran to some Linker D objects",
    "start": "1232940",
    "end": "1241220"
  },
  {
    "text": "specifically the linkready service profile that's important to me because I care about liquidy internals that",
    "start": "1241220",
    "end": "1246980"
  },
  {
    "text": "shouldn't be important to anybody else here but it's on the slide so I gotta talk it through after that our linkready",
    "start": "1246980",
    "end": "1254240"
  },
  {
    "text": "destination service what controls how traffic gets shaped inside your cluster is going to read from the internal",
    "start": "1254240",
    "end": "1260419"
  },
  {
    "text": "Linker D object and make the actual changes in real life so with that who wants to see it in",
    "start": "1260419",
    "end": "1266960"
  },
  {
    "text": "action live with an internet-facing demo all right",
    "start": "1266960",
    "end": "1272260"
  },
  {
    "text": "let's do it it's demo time",
    "start": "1272260",
    "end": "1276820"
  },
  {
    "text": "here we go uh all right so we've got an application running with our happy cuttlefish if you",
    "start": "1278900",
    "end": "1285320"
  },
  {
    "text": "go to podinfo.civo.59s.io you'll be able to actually see this thing happen live but",
    "start": "1285320",
    "end": "1291200"
  },
  {
    "text": "good luck getting to it with conference Wi-Fi on top of that if you want to see linkerty's view of this environment",
    "start": "1291200",
    "end": "1297860"
  },
  {
    "text": "what's going on you can go to dashboard.civo.59.io and actually look at the traffic split because I just",
    "start": "1297860",
    "end": "1303679"
  },
  {
    "text": "exposed it all to the internet um yeah you know why not",
    "start": "1303679",
    "end": "1308780"
  },
  {
    "text": "um one thing I want to note the folks at sevo provide really easy to get kubernetes clusters they spin up fast",
    "start": "1308780",
    "end": "1315200"
  },
  {
    "text": "check it out they have a booth downstairs on the conference floor and they've been really helpful to us in in doing this demo",
    "start": "1315200",
    "end": "1321860"
  },
  {
    "text": "there's a lot going on on the screen I'm just going to tell you what's happening real quick in the top left or my top",
    "start": "1321860",
    "end": "1327559"
  },
  {
    "text": "left hopefully it's the same for you guys after you folks pardon me you're going to see some pods right we have a",
    "start": "1327559",
    "end": "1333440"
  },
  {
    "text": "generator which is actually generating some traffic for pod info and we have our pod info application specifically",
    "start": "1333440",
    "end": "1339559"
  },
  {
    "text": "two pods called pod info primary right that is the primary service that flaggers configured for you know the",
    "start": "1339559",
    "end": "1346640"
  },
  {
    "text": "version the stable version of our application for all these pawns you see that we have two containers running per",
    "start": "1346640",
    "end": "1351919"
  },
  {
    "text": "pod one for the application one for the link ready proxy right which actually does all the service mesh work on the",
    "start": "1351919",
    "end": "1358940"
  },
  {
    "text": "right hand side you see an active hcp route right it's called pod info it's for the Pod info service all the traffic",
    "start": "1358940",
    "end": "1365600"
  },
  {
    "text": "is going to the primary none's going to the canary and at the bottom we have linkerty's view of traffic in the",
    "start": "1365600",
    "end": "1372919"
  },
  {
    "text": "cluster so it sees plot info primary the service getting 50-something requests",
    "start": "1372919",
    "end": "1378559"
  },
  {
    "text": "per second but we're going to go ahead and change that right now is the form possible for everyone or is does that",
    "start": "1378559",
    "end": "1384620"
  },
  {
    "text": "need to be zoomed in or anything okay cool all right like the thumbs up",
    "start": "1384620",
    "end": "1390320"
  },
  {
    "text": "all right so first off we're going to look at the canary object and just give you a sense of what's going on here right sounds good you want to yeah",
    "start": "1390320",
    "end": "1398600"
  },
  {
    "text": "um so let's get past all this and then we have a specular so here we're basically defining how Flagger is going",
    "start": "1398600",
    "end": "1405080"
  },
  {
    "text": "to drive the analysis forward right so we say that we want to shift traffic every five seconds on the interval",
    "start": "1405080",
    "end": "1412220"
  },
  {
    "text": "and then we want to do it until a weight of 95 is reached and we want to shift",
    "start": "1412220",
    "end": "1417559"
  },
  {
    "text": "five percent traffic with every step so basically what it means is it's gonna shift five percent of traffic right to",
    "start": "1417559",
    "end": "1424820"
  },
  {
    "text": "the canary service every five seconds until 95 of the traffic is going to the canary and at which point is going to",
    "start": "1424820",
    "end": "1431720"
  },
  {
    "text": "say that okay since 95 of traffic is going to the canary I am satisfied flags are satisfied with",
    "start": "1431720",
    "end": "1437480"
  },
  {
    "text": "the second version of your application and it's going to go ahead and it's going to promote it and the way it",
    "start": "1437480",
    "end": "1442520"
  },
  {
    "text": "determines whether your version 2 is working fine or not is by looking at these metrics that you have defined here",
    "start": "1442520",
    "end": "1447740"
  },
  {
    "text": "right so Flagger comes inbuilt with a few metrics because uh the fire Flagger",
    "start": "1447740",
    "end": "1453260"
  },
  {
    "text": "philosophy is batteries included uh so we have a couple of metrics so here we have a request success rate",
    "start": "1453260",
    "end": "1459799"
  },
  {
    "text": "uh measures uh 503s and then we we have your request duration which basically is",
    "start": "1459799",
    "end": "1465080"
  },
  {
    "text": "latency for your requests right and then we say that V1 is Gateway",
    "start": "1465080",
    "end": "1470840"
  },
  {
    "text": "API because this is Gateway API demo right and uh and then basically we say that the target ref is a deployment and",
    "start": "1470840",
    "end": "1478039"
  },
  {
    "text": "the name is spot in four and so that is the thing we want to Target right pretty simple",
    "start": "1478039",
    "end": "1483200"
  },
  {
    "text": "all right and with that we're going to make a change to our pod info deployment canaries or our Flagger Canary or sorry",
    "start": "1483200",
    "end": "1491840"
  },
  {
    "text": "the canary instructed Flagger to look at that deployment and detect changes which it will do in a second",
    "start": "1491840",
    "end": "1500020"
  },
  {
    "text": "and last time I did this I made a mistake so we're going to try really hard to do it right",
    "start": "1500360",
    "end": "1506840"
  },
  {
    "text": "all right and so we're going to replace our cuttlefish with a logo that demonstrates how well we all work",
    "start": "1506840",
    "end": "1513620"
  },
  {
    "text": "together all right uh so let's go back to the",
    "start": "1513620",
    "end": "1519980"
  },
  {
    "text": "other one we're gonna see here God willing is a set of new pods come up",
    "start": "1519980",
    "end": "1526520"
  },
  {
    "text": "right here so This Is The Moment of Truth where we check whether or not I fat fingered that and",
    "start": "1526520",
    "end": "1532520"
  },
  {
    "text": "oh come on to a two 11. it'll happen there we go so we see",
    "start": "1532520",
    "end": "1539240"
  },
  {
    "text": "our pods have come up right we have a new deployment and what we're going to see here in a second is a new service is",
    "start": "1539240",
    "end": "1546080"
  },
  {
    "text": "getting traffic right and that is the Pod info Canary service if you look at the top right we see that right now that",
    "start": "1546080",
    "end": "1552620"
  },
  {
    "text": "pod info HP route is specifying 90 of the traffic on primary 10 on Canary",
    "start": "1552620",
    "end": "1558440"
  },
  {
    "text": "right one thing to note at the bottom we have an active view of linkerty's insight into the services but it's a",
    "start": "1558440",
    "end": "1565640"
  },
  {
    "text": "it's at a 10 second polling interval so it goes a little bit slower than what you're going to see in the HTTP read all",
    "start": "1565640",
    "end": "1571760"
  },
  {
    "text": "right and we can hop over now and look at our actual application so one if you feel",
    "start": "1571760",
    "end": "1577580"
  },
  {
    "text": "like going to the dashboard you're going to see the new deployment starting to receive some traffic and some metrics",
    "start": "1577580",
    "end": "1582980"
  },
  {
    "text": "about it and if we look at our cuttlefish they'll wait patiently and be replaced by",
    "start": "1582980",
    "end": "1588140"
  },
  {
    "text": "our you know successful demonstration of getting ready to slay complexity",
    "start": "1588140",
    "end": "1594320"
  },
  {
    "text": "together the predator of complexity there we go and that's that's the demo folks",
    "start": "1594320",
    "end": "1600200"
  },
  {
    "text": "um thank you thank you very much for coming to our talk I hope this has helped yeah thank you",
    "start": "1600200",
    "end": "1607840"
  },
  {
    "text": "thank you so much for the talk we have eight minutes for questions so uh",
    "start": "1610820",
    "end": "1616340"
  },
  {
    "text": "any questions",
    "start": "1616340",
    "end": "1619120"
  },
  {
    "text": "hello that was a great demo a quick question in the Gateway API spec you",
    "start": "1622460",
    "end": "1627559"
  },
  {
    "text": "mentioned you could reference resources across namespaces um can you talk about why that's a",
    "start": "1627559",
    "end": "1633799"
  },
  {
    "text": "feature to me that sounds like a flaw to be honest because if you delete namespaces then you you know other",
    "start": "1633799",
    "end": "1641000"
  },
  {
    "text": "namespaces are impacted things like that um so pretty much I mean we have a Gateway",
    "start": "1641000",
    "end": "1647659"
  },
  {
    "text": "API maintainer right here he can probably answer it way better than I can but from what I understand is that when",
    "start": "1647659",
    "end": "1655580"
  },
  {
    "text": "you have uh different teams and like you have an application team which is working on application a and application",
    "start": "1655580",
    "end": "1660860"
  },
  {
    "text": "B but they don't want to provision new load balances for each you know each application right even so when you have",
    "start": "1660860",
    "end": "1666860"
  },
  {
    "text": "when you have a team which owns one namespace and you have another team which once owns another namespace you",
    "start": "1666860",
    "end": "1672500"
  },
  {
    "text": "want to be able to hook up to the same Gateway but do it in a secure manner so that's why the both the Gateway and both",
    "start": "1672500",
    "end": "1679340"
  },
  {
    "text": "the HTTP route have these ACL mechanisms right so both of them explicitly have to say that I want to hook up to this",
    "start": "1679340",
    "end": "1685220"
  },
  {
    "text": "Gateway and this the Gateway object has to say that I want to allow this HTTP route to be hooked up to me right so I",
    "start": "1685220",
    "end": "1692360"
  },
  {
    "text": "understand it can be a security concern cross chain spaces always have a much more uh much higher security risks but",
    "start": "1692360",
    "end": "1699140"
  },
  {
    "text": "this is built in a much more robust ACL way so yeah and if you want more clarity he's always",
    "start": "1699140",
    "end": "1705260"
  },
  {
    "text": "there is is the flagger and",
    "start": "1705260",
    "end": "1711260"
  },
  {
    "text": "um linkage integration feasible in the current Ingress spec or is it something which is feasible only after migrating",
    "start": "1711260",
    "end": "1717740"
  },
  {
    "text": "to Gateway API yeah great question and thank you for that so Flagger and Lincoln work together now without the",
    "start": "1717740",
    "end": "1725419"
  },
  {
    "text": "need to use Gateway API stuff in particular and if you look at our docs or you see some other examples we have of talks showing this information this",
    "start": "1725419",
    "end": "1732260"
  },
  {
    "text": "integration we do it with the service mesh interface spec today right well",
    "start": "1732260",
    "end": "1738500"
  },
  {
    "text": "what we're hoping is that Gateway API will become a standard tool for ingresses and service meshes to work",
    "start": "1738500",
    "end": "1745039"
  },
  {
    "text": "together and we can all use that instead of what we're doing with SMI",
    "start": "1745039",
    "end": "1750200"
  },
  {
    "text": "all right does that answer your question so just to answer your question more I don't know visually you can go to the",
    "start": "1750200",
    "end": "1756140"
  },
  {
    "text": "dogs of Flagger and like so right now it uses uh something called traffic special Jason said so it works already but we",
    "start": "1756140",
    "end": "1762320"
  },
  {
    "text": "wanted to build something SMI or link ready agnostic yes uh yeah that was a wonderful demo so",
    "start": "1762320",
    "end": "1769340"
  },
  {
    "text": "with Gateway API sort of unifying standardizing the feature set across all",
    "start": "1769340",
    "end": "1774740"
  },
  {
    "text": "Ingress um what do you suspect will be the new criteria for choosing one Ingress over",
    "start": "1774740",
    "end": "1780320"
  },
  {
    "text": "another right if they're all basically supporting the same set of features with the Gateway API so so Gateway API um is",
    "start": "1780320",
    "end": "1788960"
  },
  {
    "text": "the maintainers have been really smart about that I would say so what they have done is uh first of all they have done",
    "start": "1788960",
    "end": "1794179"
  },
  {
    "text": "two things there's a stable Channel and there's an experimental Channel so stable channel has everything which is",
    "start": "1794179",
    "end": "1800299"
  },
  {
    "text": "agreed upon by the community that this is a hardcore requirement and then all of the good stuff all of the like the",
    "start": "1800299",
    "end": "1805940"
  },
  {
    "text": "experimental features obviously are an experimental Channel and the second thing is that there is a shared there's",
    "start": "1805940",
    "end": "1812000"
  },
  {
    "text": "a division on what kind of features need to be supported so that I think there are three features or three uh division",
    "start": "1812000",
    "end": "1817820"
  },
  {
    "text": "sorry uh the score there's extended and there is custom so core features need to be supported by",
    "start": "1817820",
    "end": "1823880"
  },
  {
    "text": "every project that says that okay I Am Gateway API compliant they need to do that otherwise they can't claim that",
    "start": "1823880",
    "end": "1829880"
  },
  {
    "text": "then experimental features need to only be supported sorry on my word it's",
    "start": "1829880",
    "end": "1835039"
  },
  {
    "text": "experimental yeah extended extended features only need to be supported by few uh service meshes or ingresses they",
    "start": "1835039",
    "end": "1843020"
  },
  {
    "text": "can decide whether they want to support that or not and custom uh features are",
    "start": "1843020",
    "end": "1848299"
  },
  {
    "text": "basically Gateway API is way of saying that if you have a very custom thing like you know you have a cookie policy",
    "start": "1848299",
    "end": "1855620"
  },
  {
    "text": "that no other Ingress or service mesh you know provides for you can have that inbuilt into the gateway API but when",
    "start": "1855620",
    "end": "1861980"
  },
  {
    "text": "you switch over to another Ingress like if you migrating from let's say engine X2 like link ready you decide it's time",
    "start": "1861980",
    "end": "1867260"
  },
  {
    "text": "to service try a service mesh uh that might not might or might not be supported so you need to be careful about the divisions that you actually",
    "start": "1867260",
    "end": "1873799"
  },
  {
    "text": "you know using all right do we have more questions we",
    "start": "1873799",
    "end": "1878840"
  },
  {
    "text": "got one in the middle there sorry if there was anyone to the left I wasn't looking that way",
    "start": "1878840",
    "end": "1884659"
  },
  {
    "text": "oh that was a good demo how old is um this Canary rollout or sorry this Canary",
    "start": "1884659",
    "end": "1889820"
  },
  {
    "text": "deployment compared to like the Argo rollout Canary deploys okay uh I have",
    "start": "1889820",
    "end": "1895760"
  },
  {
    "text": "never really I've just gone through the docs I'm so take this with a grain of salt but uh so I'll go around I understand it",
    "start": "1895760",
    "end": "1904100"
  },
  {
    "text": "they have their own a custom resource definition which basically uh tells you",
    "start": "1904100",
    "end": "1909200"
  },
  {
    "text": "to take your deployment spec and put it into their custom resource basically migrate your deployments into their",
    "start": "1909200",
    "end": "1915260"
  },
  {
    "text": "specific custom resource we decided not to do that because if you are a big",
    "start": "1915260",
    "end": "1921740"
  },
  {
    "text": "organization with 1000 deployments I we do not want users to you know go through",
    "start": "1921740",
    "end": "1926779"
  },
  {
    "text": "each deployment and convert it into a different custom resource so what Flagger does is uh it creates it looks",
    "start": "1926779",
    "end": "1933500"
  },
  {
    "text": "at your deployment and it creates an exact replica copy of it and then one one of them one deployment becomes a",
    "start": "1933500",
    "end": "1940279"
  },
  {
    "text": "primary deployment and one with the stable deployment and one deployment becomes the where the Canadian",
    "start": "1940279",
    "end": "1945980"
  },
  {
    "text": "deployment where you would break down all sorts of tests right so that's so I would say that's the main difference between algor rollouts and uh Flagger",
    "start": "1945980",
    "end": "1952760"
  },
  {
    "text": "and I can tell you from from the perspective of someone a consumer or not like like writing that uh you know",
    "start": "1952760",
    "end": "1959059"
  },
  {
    "text": "they're they're similar but they have different philosophical approaches right that's the it's a big thing I noticed",
    "start": "1959059",
    "end": "1965179"
  },
  {
    "text": "today the integration between your service mesh or at least Linker D and Argo Rolex and Flagger is both at that",
    "start": "1965179",
    "end": "1972260"
  },
  {
    "text": "service mesh interface level right and hopefully in future it'll stay the same from our perspective where",
    "start": "1972260",
    "end": "1978380"
  },
  {
    "text": "we'll all work together at that hcp route or coordinate at that hcp route",
    "start": "1978380",
    "end": "1983960"
  },
  {
    "text": "layer not at you know specific implementation nuances",
    "start": "1983960",
    "end": "1989600"
  },
  {
    "text": "does that help yeah thank you thank you cool I think we have time for one more if there's one",
    "start": "1989600",
    "end": "1995120"
  },
  {
    "text": "last question on the back",
    "start": "1995120",
    "end": "2000360"
  },
  {
    "text": "thanks uh I was just looking at the flagger docs and it looks like there was already something there about Gateway API so did you add that after you",
    "start": "2004360",
    "end": "2010960"
  },
  {
    "text": "implemented the gamma component and if you didn't what does the gamma component actually do can you say what you said again just uh",
    "start": "2010960",
    "end": "2017740"
  },
  {
    "text": "the it looks like the the flagger docs already said something about support for the Gateway API and you mentioned you had to implement something in a",
    "start": "2017740",
    "end": "2023799"
  },
  {
    "text": "component you called gamma so what is gamma what does it do what did you implement oh great question thank you so",
    "start": "2023799",
    "end": "2029019"
  },
  {
    "text": "much for that so we didn't make any changes to Flagger as part of this as",
    "start": "2029019",
    "end": "2034480"
  },
  {
    "text": "part of this right the Linker D folks right our side we built an extension to",
    "start": "2034480",
    "end": "2039640"
  },
  {
    "text": "do traffic splitting on HTTP routes instead of on the service mesh interface so gamma is a subgroup within the",
    "start": "2039640",
    "end": "2047320"
  },
  {
    "text": "Gateway API specification that is worried about how do we take Gateway API and make it work with service meshes and",
    "start": "2047320",
    "end": "2054520"
  },
  {
    "text": "not just ingresses so I called the little extension gamma because yeah that was it does that answer your",
    "start": "2054520",
    "end": "2060520"
  },
  {
    "text": "question yes thank you so much awesome we are out of time thank you so much for our great uh demo and talk",
    "start": "2060520",
    "end": "2068480"
  },
  {
    "text": "[Applause]",
    "start": "2068480",
    "end": "2072070"
  }
]