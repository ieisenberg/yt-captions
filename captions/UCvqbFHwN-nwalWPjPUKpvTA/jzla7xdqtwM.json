[
  {
    "text": "okay this is the talk we're gonna be talking about taking the envoy proxy beyond the typical use cases I think a",
    "start": "30",
    "end": "7080"
  },
  {
    "text": "lot of people don't embarrass teo service mesh but it turns out that it's",
    "start": "7080",
    "end": "13530"
  },
  {
    "text": "a building block that can be used for a lot of other cool things it's not work",
    "start": "13530",
    "end": "27470"
  },
  {
    "text": "sorry little difficult there okay so I'm Steve Wong I work for VMware as a",
    "start": "31520",
    "end": "38820"
  },
  {
    "text": "software engineer I've been working on kubernetes since 2015 starting in the storage area I've worked in the cloud",
    "start": "38820",
    "end": "47190"
  },
  {
    "text": "provider plug-in for running kubernetes on vSphere and I'm currently co-lead of the IOT edge working group on kubernetes",
    "start": "47190",
    "end": "55850"
  },
  {
    "text": "yeah I'm Steve sloka I work for VMware to help maintain contour and gimble at",
    "start": "55850",
    "end": "61020"
  },
  {
    "text": "VMware so our agenda today you can read",
    "start": "61020",
    "end": "66210"
  },
  {
    "text": "this but we're going to do an overview we're starting with the assumption that you know what kubernetes is that you've",
    "start": "66210",
    "end": "71729"
  },
  {
    "text": "heard of a service mesh like Sto but if you haven't we'll do a little recap but",
    "start": "71729",
    "end": "77479"
  },
  {
    "text": "if you're completely new to this buckle up because we're going to jump right",
    "start": "77479",
    "end": "82619"
  },
  {
    "text": "into it we're gonna move on to covering opportunities to use the Envoy proxy",
    "start": "82619",
    "end": "88950"
  },
  {
    "text": "beyond simple service mesh using it as both an ingress a load balancer we're",
    "start": "88950",
    "end": "95490"
  },
  {
    "text": "going to do some demos showing you how you can use this to bond even non",
    "start": "95490",
    "end": "100950"
  },
  {
    "text": "kubernetes things so both apps and services that are running on legacy VMs or bare metal using them in conjunction",
    "start": "100950",
    "end": "110040"
  },
  {
    "text": "with things hosted on kubernetes so just",
    "start": "110040",
    "end": "115590"
  },
  {
    "text": "a recap the micro services model presents a lot of challenges you've got",
    "start": "115590",
    "end": "122040"
  },
  {
    "text": "more interconnects of more network nodes and these are going into more places",
    "start": "122040",
    "end": "129000"
  },
  {
    "text": "on-premises public clouds multi-cloud edge these new models place app",
    "start": "129000",
    "end": "135300"
  },
  {
    "text": "components much less deterministically than before and these things are often very short-lived it's rare to find an",
    "start": "135300",
    "end": "144239"
  },
  {
    "text": "app developer who has great skills and networking and security you know when you ask people to take on their jobs",
    "start": "144239",
    "end": "150590"
  },
  {
    "text": "take on jobs that are beyond their skill set mistakes will be made so this whole concept of using network",
    "start": "150590",
    "end": "160830"
  },
  {
    "text": "proxies or service Mash basically amounts to helping to solve this problem",
    "start": "160830",
    "end": "167550"
  },
  {
    "text": "of requiring broad swaths of expertise to eliminate mistakes so envoy is an",
    "start": "167550",
    "end": "177599"
  },
  {
    "text": "open source project that was started by lyft back in 2016 and I its goal was to",
    "start": "177599",
    "end": "184769"
  },
  {
    "text": "move the network details along with some security aspects completely out of the application and make the network",
    "start": "184769",
    "end": "191900"
  },
  {
    "text": "transparent to both app developers and the users of those apps I think the key aspects of its",
    "start": "191900",
    "end": "198379"
  },
  {
    "text": "architecture are that it was completely API driven and it supported dynamic",
    "start": "198379",
    "end": "204569"
  },
  {
    "text": "configuration that meaning that you didn't have to restart rebooted that you could reconfigure this hot it also",
    "start": "204569",
    "end": "213269"
  },
  {
    "text": "offered top-notch support for observability and debugging to help you do troubleshooting",
    "start": "213269",
    "end": "219150"
  },
  {
    "text": "I think the best way to view envoy is as a full-featured",
    "start": "219150",
    "end": "224459"
  },
  {
    "text": "network filter driver that is it can be configured to take network traffic",
    "start": "224459",
    "end": "231090"
  },
  {
    "text": "perhaps manipulated a bit and forwarded on under API or programmatic control and",
    "start": "231090",
    "end": "237870"
  },
  {
    "text": "all this can be done on so why service mesh you know the Envoy slide called out",
    "start": "237870",
    "end": "245280"
  },
  {
    "text": "the challenges we face and what we're what we're trying to solve with micro",
    "start": "245280",
    "end": "251340"
  },
  {
    "text": "service architectures and multi cloud deployments the best way to look at this",
    "start": "251340",
    "end": "257070"
  },
  {
    "text": "is to look at on as a building block and a service mash as a higher-level tier that configures",
    "start": "257070",
    "end": "264400"
  },
  {
    "text": "those building blocks that so that you can use them you know if this is a lot like the kubernetes control plane could",
    "start": "264400",
    "end": "270789"
  },
  {
    "text": "be viewed as an Orchestrator or manager of the lower building block of container",
    "start": "270789",
    "end": "277090"
  },
  {
    "text": "runtimes and container images so sto is one example of a service mesh it's",
    "start": "277090",
    "end": "283719"
  },
  {
    "text": "perhaps the most well known the most well covered in conferences like this",
    "start": "283719",
    "end": "290099"
  },
  {
    "text": "its features fall into the four major categories you see here connecting",
    "start": "290099",
    "end": "296319"
  },
  {
    "text": "things securing things controlling operations both at the app deployment",
    "start": "296319",
    "end": "302889"
  },
  {
    "text": "level and at the network level and finally observability which involves",
    "start": "302889",
    "end": "308250"
  },
  {
    "text": "monitoring things for things being healthy or going wrong and helping give",
    "start": "308250",
    "end": "314020"
  },
  {
    "text": "you an edge on troubleshooting when things go do do go wrong the SEO service",
    "start": "314020",
    "end": "321339"
  },
  {
    "text": "meshes commonly thought of something that would support kubernetes workloads",
    "start": "321339",
    "end": "327460"
  },
  {
    "text": "but what do you do when you have something that isn't the kubernetes workload a lot of us have legacy",
    "start": "327460",
    "end": "335110"
  },
  {
    "text": "components whether they be bare metal machines or VMs are those things just",
    "start": "335110",
    "end": "340240"
  },
  {
    "text": "dinosaurs that have reached the end of their life or is there something you can do about this it turns out that there",
    "start": "340240",
    "end": "348430"
  },
  {
    "text": "are a couple things one thing that I'm going to tell you exist but not cover in detail now is something called sto mesh",
    "start": "348430",
    "end": "355719"
  },
  {
    "text": "expansion and that's a way to connect your legacy Linux machines whether they",
    "start": "355719",
    "end": "362770"
  },
  {
    "text": "be VMs or a bare-metal into an sto service mesh I did a talk on this at",
    "start": "362770",
    "end": "368770"
  },
  {
    "text": "open source summit Japan and it got recorded but it was so detailed it was one of these I signed up for the talk I",
    "start": "368770",
    "end": "375550"
  },
  {
    "text": "got a one-hour slot and when I finally put it together it really needed two and a half hours I'm not going to try to",
    "start": "375550",
    "end": "381550"
  },
  {
    "text": "reproduce that here but I took my slides from that and put them at the end of this so when you download the pup this",
    "start": "381550",
    "end": "388000"
  },
  {
    "text": "deck it's already uploaded to the skate app you can see the detail on that so come back to that later but",
    "start": "388000",
    "end": "395590"
  },
  {
    "text": "you can indeed use an SEO service mesh with mesh expansion to talk to these the",
    "start": "395590",
    "end": "401740"
  },
  {
    "text": "only thing documented at this time is doing that within Google cloud talking",
    "start": "401740",
    "end": "407020"
  },
  {
    "text": "to VMs hosted within the Google cloud but like I say I gave a talk on using it",
    "start": "407020",
    "end": "412570"
  },
  {
    "text": "to connect to joy bare-metal and VMware VMs I believe you could use it generically it's just that this is not a",
    "start": "412570",
    "end": "420160"
  },
  {
    "text": "well-documented subject just to summarize what's in the slides hidden in",
    "start": "420160",
    "end": "426310"
  },
  {
    "text": "this deck the preconditions are that you have to install sto with mesh expansion enabled you'll need a load balancer if",
    "start": "426310",
    "end": "434020"
  },
  {
    "text": "you're doing this kind of in a home lab middle elbe will work otherwise you can use a commercial load balancer on each",
    "start": "434020",
    "end": "440770"
  },
  {
    "text": "VM you configure a cluster dot E and V file some key insert files you installed",
    "start": "440770",
    "end": "447370"
  },
  {
    "text": "the ISTE o envoy sidecar debian package you know sto actually irv envoy predates",
    "start": "447370",
    "end": "455530"
  },
  {
    "text": "kubernetes so it actually was originally deployed as a package for Linux I don't",
    "start": "455530",
    "end": "462070"
  },
  {
    "text": "believe there's a pre-built distributed package at rpm if you're running",
    "start": "462070",
    "end": "467820"
  },
  {
    "text": "something other than Ubuntu or Debian but I hear that you can find them out",
    "start": "467820",
    "end": "473530"
  },
  {
    "text": "there somewhere you verify that note agent works if you're hosting a service",
    "start": "473530",
    "end": "481060"
  },
  {
    "text": "on a VM you have to define a service entry bottom line is these steps are",
    "start": "481060",
    "end": "487630"
  },
  {
    "text": "fairly involved there was a speaker who made a crack at the rejects conference",
    "start": "487630",
    "end": "493210"
  },
  {
    "text": "on Saturday who said that sto installs a million CR DS of the kubernetes that's",
    "start": "493210",
    "end": "499570"
  },
  {
    "text": "an exaggeration it's actually just 23 the last time I looked but it is a little bit complex I'm about to turn",
    "start": "499570",
    "end": "507610"
  },
  {
    "text": "over the stage here to Steve who's going to show you an alternate method that still uses the Envoy proxy like if Co",
    "start": "507610",
    "end": "515320"
  },
  {
    "text": "would but it both does it in a simpler way perhaps with a few less features but",
    "start": "515320",
    "end": "522400"
  },
  {
    "text": "perhaps with a few features that you can't currently do with this deal so take it away Steve",
    "start": "522400",
    "end": "528800"
  },
  {
    "text": "okay thanks to you yeah so what we're gonna do is figure out how we can enable",
    "start": "528800",
    "end": "533990"
  },
  {
    "text": "things like a surface mesh without deploying a service mesh and we're gonna use some tools today to help us",
    "start": "533990",
    "end": "539180"
  },
  {
    "text": "demonstrate this one thing I want to make clear is that the tools I'm using and the technologies aren't required so",
    "start": "539180",
    "end": "544760"
  },
  {
    "text": "I'm gonna show you some things that I work on I'd love it if you used it but by no means you have to use those tools",
    "start": "544760",
    "end": "550180"
  },
  {
    "text": "takeaway from this is the pattern that we're gonna apply and then insert your your tool and your proxy however you",
    "start": "550180",
    "end": "555860"
  },
  {
    "text": "want to do that so the first thing is is why not right why not deploy service",
    "start": "555860",
    "end": "561170"
  },
  {
    "text": "mesh seems like everyone's doing that well one their complex right there's a lot of overhead that's getting added to",
    "start": "561170",
    "end": "566209"
  },
  {
    "text": "your cluster a lot more resources they can make things difficult to debug and I'm sure by the time the video comes out",
    "start": "566209",
    "end": "571970"
  },
  {
    "text": "for this while these problems will be solved but there's a lot a lot going on we need to play a mesh so what I want to",
    "start": "571970",
    "end": "578089"
  },
  {
    "text": "do is look at using an ingress controller to help solve this problem so what you'd look at using a contour so",
    "start": "578089",
    "end": "583880"
  },
  {
    "text": "contour is an ingress controller for kubernetes again it's based on envoy and some features of it is that it's",
    "start": "583880",
    "end": "589880"
  },
  {
    "text": "dynamically updated so we can update configuration and pass that down to to envoy without losing connections or",
    "start": "589880",
    "end": "595579"
  },
  {
    "text": "reloading configuration we can safely support ingress in a multi team environment right so you've got lots of",
    "start": "595579",
    "end": "601310"
  },
  {
    "text": "teams working on your kubernetes cluster we can solve that problem through this thing called delegation of routing so we",
    "start": "601310",
    "end": "607700"
  },
  {
    "text": "can feel safe that teams can self manage their ingress resources and not have the issue today where if two teams define",
    "start": "607700",
    "end": "613550"
  },
  {
    "text": "the same path with the same prefix you'll get a production outage right we can solve that with some things in",
    "start": "613550",
    "end": "618589"
  },
  {
    "text": "contour and lastly we want to try and avoid the the annotation sprawl right so place things in the spec where they",
    "start": "618589",
    "end": "624800"
  },
  {
    "text": "belong things like service weight full of balancing strategies those sort of things so here's how OnPoint gets our",
    "start": "624800",
    "end": "631220"
  },
  {
    "text": "contours architected so you'll see we have ongoing as the data path component all traffic routes through envoy contour",
    "start": "631220",
    "end": "638420"
  },
  {
    "text": "is the ingress Controller so its job is to look at the cluster and look for services for endpoints secrets ingress",
    "start": "638420",
    "end": "644959"
  },
  {
    "text": "resources all those information when it sees something change it builds a new configuration and streams that down to",
    "start": "644959",
    "end": "651230"
  },
  {
    "text": "envoy and then on a robot request in your cluster well let's take this this",
    "start": "651230",
    "end": "656900"
  },
  {
    "text": "kind of view and kind of build it up a little bit more look at it in this kind of view so what I did here is I took the same idea but",
    "start": "656900",
    "end": "663190"
  },
  {
    "text": "I've introduced this routing cluster right so if we leverage kubernetes I get horizontal scale so I can have all my",
    "start": "663190",
    "end": "669220"
  },
  {
    "text": "routes or my traffic in this rotting cluster be routing horizontally and then what I can do now is instead of just",
    "start": "669220",
    "end": "675220"
  },
  {
    "text": "targeting a single cluster I can target many different clusters maybe it's a bunch of different kubernetes clusters",
    "start": "675220",
    "end": "680770"
  },
  {
    "text": "or it's OpenStack or a VM or even and this is great because I can help move my",
    "start": "680770",
    "end": "686650"
  },
  {
    "text": "journey to kubernetes so maybe I'm fully a VM infrastructure today this gives me",
    "start": "686650",
    "end": "691930"
  },
  {
    "text": "a path now to move some of my infrastructure to kubernetes but in a stepwise manner it also allows me to",
    "start": "691930",
    "end": "698560"
  },
  {
    "text": "route two endpoints that may never be containerized I used to work at a large healthcare organization and there are",
    "start": "698560",
    "end": "703750"
  },
  {
    "text": "some applications that just will never be containerized or put in a kubernetes so this gives you a path to move your",
    "start": "703750",
    "end": "709540"
  },
  {
    "text": "other apps to kubernetes and leave those apps running as VMs also can help you with migrations right you want to move",
    "start": "709540",
    "end": "715870"
  },
  {
    "text": "from cube 115 and 116 build a new cluster smoke test it and then move your traffic over again with the introduction",
    "start": "715870",
    "end": "722350"
  },
  {
    "text": "of this routing cluster but what about internal quote requests right meshes are",
    "start": "722350",
    "end": "727480"
  },
  {
    "text": "great for this you can have your pods and your services talk between each other so I'm going to look at a way that",
    "start": "727480",
    "end": "732820"
  },
  {
    "text": "we can help introduce this concept as well and we're gonna add another tool called gimble and I think of gimble as a",
    "start": "732820",
    "end": "738400"
  },
  {
    "text": "service discovery component for contour so agimpels job is to go out and look for endpoints and remote clusters right",
    "start": "738400",
    "end": "744910"
  },
  {
    "text": "so in the case of OpenStack it's going to go look at for all the names that are running and it's gonna copy them into",
    "start": "744910",
    "end": "750130"
  },
  {
    "text": "the routing cluster and it's going to copy them and store them in that cluster as services and endpoints so leveraging",
    "start": "750130",
    "end": "755290"
  },
  {
    "text": "basic kubernetes objects and then once we have those objects in this routing",
    "start": "755290",
    "end": "760300"
  },
  {
    "text": "cluster I can make it now make the routing decisions against that and the last thing I want to say is that contour",
    "start": "760300",
    "end": "765760"
  },
  {
    "text": "is not a service mesh so if you're looking for a service mesh - looking for a mutual TLS this will not solve your",
    "start": "765760",
    "end": "771459"
  },
  {
    "text": "problem right what I'm going to try and focus on here is to have you to enable routing and having all your applications",
    "start": "771459",
    "end": "777040"
  },
  {
    "text": "talk together in a very simple manner but if you need a service mesh that I recommend you're going to ploy that and",
    "start": "777040",
    "end": "782830"
  },
  {
    "text": "go down that road so let's go and demo some things so I've got a lot of hardware up here and this is a demo or",
    "start": "782830",
    "end": "790149"
  },
  {
    "text": "overview what I've gotten so what we have is I've got on my Mac I've got three clusters running in kind kind is",
    "start": "790149",
    "end": "797319"
  },
  {
    "text": "kubernetes and dr. so if you're not familiar with that it's a way that you can spin up a kubernetes cluster using only docker sometimes three clusters",
    "start": "797319",
    "end": "804160"
  },
  {
    "text": "running on there inside a Linux VM and then on this Intel nook here I've got a sphere writing and I've got a few Linux",
    "start": "804160",
    "end": "810999"
  },
  {
    "text": "a bunch of the ms2 of me running an app API and two of them are running a Web API and finally I've actually got a full",
    "start": "810999",
    "end": "817449"
  },
  {
    "text": "Windows 2019 server running on there as well yeah these are the ones on the",
    "start": "817449",
    "end": "822459"
  },
  {
    "text": "vSphere are not in kubernetes in any way so absolutely as VMS and they could be",
    "start": "822459",
    "end": "828699"
  },
  {
    "text": "bare metal and the interesting thing is that should be obvious because we've got one that's even Windows here yeah and",
    "start": "828699",
    "end": "835120"
  },
  {
    "text": "finally I have a Raspberry Pi so this is a Raspberry Pi for I ordered last week her name is on cool and the last thing",
    "start": "835120",
    "end": "841089"
  },
  {
    "text": "that we're gonna need for this talk is a lot of luck so hopefully this will all work very well so let me go ahead and it",
    "start": "841089",
    "end": "849069"
  },
  {
    "text": "was my display ok so here is my Linux VM",
    "start": "849069",
    "end": "861058"
  },
  {
    "text": "alright so let's go ahead and start by looking at this piece for API right so these are all again the VMS that we just",
    "start": "863009",
    "end": "869050"
  },
  {
    "text": "saw on the last screen I have my two API VMs here on my two web server VMs and when you'll notice is they've all got IP",
    "start": "869050",
    "end": "875230"
  },
  {
    "text": "addresses so my web servers are running on Ubuntu VM and I have got 12 and I",
    "start": "875230",
    "end": "881920"
  },
  {
    "text": "have dot 11 right those are the two IP addresses for my web server and down here what we'll see is I've got some",
    "start": "881920",
    "end": "887170"
  },
  {
    "text": "attributes right so these attributes are a way that we can define metadata to our VM is running in a sphere and I've added",
    "start": "887170",
    "end": "893439"
  },
  {
    "text": "this thing called an application a port in a project so what gimble does is gimbals a controller that runs in",
    "start": "893439",
    "end": "898480"
  },
  {
    "text": "kubernetes and again it goes out and it finds these endpoints and copies them into that routing cluster so what I do",
    "start": "898480",
    "end": "903850"
  },
  {
    "text": "is I've got a mapping now so the project maps to a namespace in that rotting cluster so this is an example we're",
    "start": "903850",
    "end": "909490"
  },
  {
    "text": "gonna have a marketing team so the marketing team is going to have this VM and it's going to be part of the web application and the application maps to",
    "start": "909490",
    "end": "916569"
  },
  {
    "text": "a service in kubernetes right now that I have a namespace and a service I can add endpoints and my end points come from the IP",
    "start": "916569",
    "end": "922680"
  },
  {
    "text": "address assigned by vSphere as well as the port here we've defined so now that I have two web vm's will see the Weber",
    "start": "922680",
    "end": "929279"
  },
  {
    "text": "one matches the same thing as well go to right it has the same attributes so essentially what I'm going to end up in",
    "start": "929279",
    "end": "935130"
  },
  {
    "text": "my routing cluster is a service with two endpoints living in one namespace right maybe let's make a point that for people",
    "start": "935130",
    "end": "941730"
  },
  {
    "text": "not used to vSphere these attributes are akin to labels and kubernetes so they're",
    "start": "941730",
    "end": "947040"
  },
  {
    "text": "an optional feature that you can use to associate metadata with VMs great so",
    "start": "947040",
    "end": "955230"
  },
  {
    "text": "let's go ahead and take a look at if I go ahead and get my services and endpoints in the marketing namespace",
    "start": "955230",
    "end": "961470"
  },
  {
    "text": "well you see here is again I've got that mapping now so here's that web service that we applied with that that",
    "start": "961470",
    "end": "967230"
  },
  {
    "text": "annotation and you see that appended VMR to it so we need to give it a back-end name right I could have multiple",
    "start": "967230",
    "end": "973199"
  },
  {
    "text": "clusters I need to give them an identity so I've given the identity it's just called it VMware right for this demo if",
    "start": "973199",
    "end": "978810"
  },
  {
    "text": "I had another cluster running I could call it you know fubar and we get fubar - web and then here you can see the",
    "start": "978810",
    "end": "984600"
  },
  {
    "text": "endpoints that came through right again that dot 11 and dot 12 so now you can see from this routing cluster with",
    "start": "984600",
    "end": "989610"
  },
  {
    "text": "kubernetes I've got all those endpoints living in VMware so now what we can do",
    "start": "989610",
    "end": "994769"
  },
  {
    "text": "is let's go ahead and wire some things up so what I want to do is I want to have traffic now hit my marketing website so my marketing team is running",
    "start": "994769",
    "end": "1001459"
  },
  {
    "text": "under this company called pixel proxy net and this is their their domain so what I'm going to first do is create",
    "start": "1001459",
    "end": "1007339"
  },
  {
    "text": "this root namespace so in contour we have this idea of a we have a customs the Rd and it's called HTTP proxy and",
    "start": "1007339",
    "end": "1013579"
  },
  {
    "text": "it's how we're going to solve this multi team multi cluster type networking so",
    "start": "1013579",
    "end": "1018949"
  },
  {
    "text": "this ingress object helps us again to find all these features we describe you couldn't do these things with ingress",
    "start": "1018949",
    "end": "1024470"
  },
  {
    "text": "today just end up you in the current version so what we'll do is we'll have a route proxy this pixel proxies net and",
    "start": "1024470",
    "end": "1030949"
  },
  {
    "text": "we'll tuck it away in a root namespace and what this does is this lets us store our certificates and secrets away from",
    "start": "1030949",
    "end": "1036949"
  },
  {
    "text": "all of our users right because what we can do is we can delegate permissions across namespaces so now I can have my",
    "start": "1036949",
    "end": "1042319"
  },
  {
    "text": "team's again self manage their resources and not have to see your view secrets tied to these ingress resources so here",
    "start": "1042319",
    "end": "1048500"
  },
  {
    "text": "we'll this is giving us permissions to the marketing team and we're gonna give it to this proxy called default proxy",
    "start": "1048500",
    "end": "1054789"
  },
  {
    "text": "down here while she define the actual proxy right this is that definition in the marketing namespace and what you see",
    "start": "1054789",
    "end": "1060649"
  },
  {
    "text": "is that basically slash for pixel proxy net is going to route to the VMware web service and again if we go back to our",
    "start": "1060649",
    "end": "1067070"
  },
  {
    "text": "our services and endpoints that VMware web service is pointing to those two windows or two Linux VMs running my",
    "start": "1067070",
    "end": "1073580"
  },
  {
    "text": "website so let's go ahead and apply this",
    "start": "1073580",
    "end": "1077590"
  },
  {
    "text": "brick so now those are applied and if I come here and I go get my proxies you'll",
    "start": "1082360",
    "end": "1091100"
  },
  {
    "text": "see I've got two of them right here's the route one and then here's the who's the one that's delegated to so if we come over to our browser let me go to",
    "start": "1091100",
    "end": "1098409"
  },
  {
    "text": "pixel proxy dotnet will seems like it",
    "start": "1098409",
    "end": "1103970"
  },
  {
    "text": "the requests right so this is hitting web o2 and the response and this isn't very exciting but it helps you",
    "start": "1103970",
    "end": "1108980"
  },
  {
    "text": "understand four requests are going so the VM is responding with web o2 or web o1 so if we go ahead here and do it and",
    "start": "1108980",
    "end": "1115489"
  },
  {
    "text": "do a curl we'll just curl it every half second and",
    "start": "1115489",
    "end": "1121730"
  },
  {
    "text": "you'll see it better so you'll see whether one and web Oh to respond and kind of half and half right it's getting half and half traffic so now we",
    "start": "1121730",
    "end": "1127940"
  },
  {
    "text": "basically wired up our VMs to get production traffic through this rotting cluster so next what I want to do is go",
    "start": "1127940",
    "end": "1136549"
  },
  {
    "text": "ahead and deploy a blog and in our case the blog is running under a Windows server so down here back in view cedar",
    "start": "1136549",
    "end": "1142070"
  },
  {
    "text": "I've got this Windows box and again it's running Windows Server 2019 so here's that home screen so what we'll do is",
    "start": "1142070",
    "end": "1148909"
  },
  {
    "text": "we'll go wire it up but they were going to give them a path for that so this is where we'll define that in contour so we'll say that the the pixel proxy net",
    "start": "1148909",
    "end": "1155299"
  },
  {
    "text": "domain gets the path slash blog and for that path we're going to route to the VM or Windows service and again that maps",
    "start": "1155299",
    "end": "1161419"
  },
  {
    "text": "to the service that gimble went and discovered for us so if we go ahead and apply this one",
    "start": "1161419",
    "end": "1167710"
  },
  {
    "text": "what I should have now is the the route should still works we didn't change that but if we now go to /blog well I'll get",
    "start": "1170910",
    "end": "1178440"
  },
  {
    "text": "his windows right so there's my windows server now routing oops there we go so",
    "start": "1178440",
    "end": "1184020"
  },
  {
    "text": "now you can see that I've got requests hitting this again hitting this routing cluster and now going to all my VMware infrastructure or my virtualized",
    "start": "1184020",
    "end": "1190290"
  },
  {
    "text": "infrastructure so now let's go ahead and move that infrastructure let's containerize our front-end web application so this one here so we'll",
    "start": "1190290",
    "end": "1199500"
  },
  {
    "text": "move this one now from our virtual eyes of the ms2 to containers so what we'll do is we'll first go ahead and we'll",
    "start": "1199500",
    "end": "1206970"
  },
  {
    "text": "deploy a service right and I have I'm cheating and I have a make file so I can say deploy blue and what this is gonna",
    "start": "1206970",
    "end": "1213300"
  },
  {
    "text": "do is it's gonna go deploy that front-end web application into my blue cluster right so again I have three",
    "start": "1213300",
    "end": "1219090"
  },
  {
    "text": "clusters I have my routing cluster and then my two children clusters so now my blue cluster has that application",
    "start": "1219090",
    "end": "1225510"
  },
  {
    "text": "deployed so if we go ahead and get our services and endpoints again we'll see now we have this blue service that came",
    "start": "1225510",
    "end": "1230790"
  },
  {
    "text": "through again I've labeled that back in blue cluster as blue and it's called web so now I have this blue web and I have",
    "start": "1230790",
    "end": "1236760"
  },
  {
    "text": "these three endpoints because I have three replicas of three so now what I can do is we can go wire that up so what",
    "start": "1236760",
    "end": "1242520"
  },
  {
    "text": "we'll do is we'll do a canary deployment so this is what this will look like so an HTTP proxy we can define multiple up",
    "start": "1242520",
    "end": "1248220"
  },
  {
    "text": "streams so we can have our current service which is the VMware web again X living on the the VM infrastructure and",
    "start": "1248220",
    "end": "1254340"
  },
  {
    "text": "now we'll route to the blue service which is in the kubernetes infrastructure and we'll add a weight to this so what a weight of 92 the VM in a",
    "start": "1254340",
    "end": "1261990"
  },
  {
    "text": "weight of 10 to the kubernetes one so after we get this we can we can see how",
    "start": "1261990",
    "end": "1268320"
  },
  {
    "text": "this gets routed around cool so let's just deal with what the wild live here",
    "start": "1268320",
    "end": "1273620"
  },
  {
    "text": "so now we should get we should get mostly the web of wine and web o2 and every now and again we'll get the blue cluster replying and there's a blue",
    "start": "1273620",
    "end": "1280680"
  },
  {
    "text": "cluster flowing through if you can catch that because we have most of the weight hitting the VM infrastructure so let's",
    "start": "1280680",
    "end": "1286080"
  },
  {
    "text": "go ahead and we'll swap the flip-flop those weights so we'll give 10 10 to the VM and 90 to the kubernetes 1 and this",
    "start": "1286080",
    "end": "1293130"
  },
  {
    "text": "is now gonna reverse or add more infrastructure routing to our our kubernetes",
    "start": "1293130",
    "end": "1298320"
  },
  {
    "text": "infrastructure right so we can watch our logs watch a metrics see how it's handled once we're happy with it see the blue",
    "start": "1298320",
    "end": "1304309"
  },
  {
    "text": "cluster is getting most of the traffic and then the web's ones getting a little bit once we're happy with that we can",
    "start": "1304309",
    "end": "1310130"
  },
  {
    "text": "come through and just take away all traffic to the Yammer one and now we've successfully moved our infrastructure to",
    "start": "1310130",
    "end": "1316910"
  },
  {
    "text": "kubernetes alright so the next thing you want to do is move our API right so this",
    "start": "1316910",
    "end": "1323480"
  },
  {
    "text": "application when we access it it's not hitting an API at the bottom but we can have it do that so what I'm gonna do is",
    "start": "1323480",
    "end": "1329630"
  },
  {
    "text": "go ahead and create an internal proxy so up until now we've solved the basic ingress resource you know solution we",
    "start": "1329630",
    "end": "1335600"
  },
  {
    "text": "have this public request hitting the front-end application the first step well now I'm gonna go deal with the second step and this is where mesh is",
    "start": "1335600",
    "end": "1341270"
  },
  {
    "text": "kind of can can shine and do full things but what I have now is I can add a dot contour domain inside my cluster and I",
    "start": "1341270",
    "end": "1347750"
  },
  {
    "text": "can do is create routes now like I did with my ingress resource but now for internal requests so what this is going",
    "start": "1347750",
    "end": "1353270"
  },
  {
    "text": "to do is it's going to create another ingress resource and this URL is going to hit this VMware API again this is the",
    "start": "1353270",
    "end": "1359900"
  },
  {
    "text": "API running in my VM infrastructure so we're gonna have our containerized cubed is one we just moved access this VM",
    "start": "1359900",
    "end": "1366740"
  },
  {
    "text": "infrastructure living over in BMR so let's go ahead and apply this one this",
    "start": "1366740",
    "end": "1374059"
  },
  {
    "text": "is 4k alright cool and then let's go look at our proxies again so you know I have",
    "start": "1374059",
    "end": "1380540"
  },
  {
    "text": "this extra one this API top marketing that contour so what I have to do next is I have to go tell my blue service to",
    "start": "1380540",
    "end": "1386150"
  },
  {
    "text": "go use that so here I can pass it in through an environment variable so semi rate variable tells tells that",
    "start": "1386150",
    "end": "1391490"
  },
  {
    "text": "application hey this is where your API lives so let's go ahead and switch context to my blue cluster you can see",
    "start": "1391490",
    "end": "1397010"
  },
  {
    "text": "that down here with the blue and I will apply before beam right so now if I do a",
    "start": "1397010",
    "end": "1407929"
  },
  {
    "text": "watch on our",
    "start": "1407929",
    "end": "1410559"
  },
  {
    "text": "on our quads you can see those are rolling out we did a roll out I didn't get fast stuff we see there 10 seconds",
    "start": "1416490",
    "end": "1421980"
  },
  {
    "text": "old so now what should happen is when I make a request to this application the kubernetes infrastructure running in the",
    "start": "1421980",
    "end": "1428790"
  },
  {
    "text": "blue cluster is going to make a call to the API is running in the Emer and there it is so you can see down here the API",
    "start": "1428790",
    "end": "1434850"
  },
  {
    "text": "Oh - right you see it hitting API oh one API OSU and that's the spot down here so",
    "start": "1434850",
    "end": "1439860"
  },
  {
    "text": "the second half is the web server making a request to the API so now let's go ahead and move that infrastructure over",
    "start": "1439860",
    "end": "1446130"
  },
  {
    "text": "like we did for the web app so we'll go ahead and deploy the same API as a as a",
    "start": "1446130",
    "end": "1453290"
  },
  {
    "text": "containers running in kubernetes so while I'm still in the blue cluster we can apply this Oh five and we'll get our",
    "start": "1453290",
    "end": "1460050"
  },
  {
    "text": "paws you see those were spinning up now there's my api pod spinning up alright let's go back to here and let's go and",
    "start": "1460050",
    "end": "1467150"
  },
  {
    "text": "you look at our endpoints and we'll see now we have a blue endpoint from Gibble's so gimbal one discovered that endpoint and added that api server into",
    "start": "1467150",
    "end": "1474450"
  },
  {
    "text": "there so now we have that we can go and update our applications so we'll just",
    "start": "1474450",
    "end": "1479880"
  },
  {
    "text": "change our our internal proxy instead of porting to the VM our infrastructure we can have it just point to the blue",
    "start": "1479880",
    "end": "1486600"
  },
  {
    "text": "cluster right so now it won't do a canary deploy we'll just do a blue-green deploy we'll just pull the switch and instantly flip it over so now this is",
    "start": "1486600",
    "end": "1493290"
  },
  {
    "text": "the again this is the internal API so let's go ahead and apply this one just",
    "start": "1493290",
    "end": "1501060"
  },
  {
    "text": "for a alright so now that's it unchanged",
    "start": "1501060",
    "end": "1508610"
  },
  {
    "text": "now I'm in the cluster that's why okay so now if we go ahead and do that curl",
    "start": "1510290",
    "end": "1517400"
  },
  {
    "text": "let's do it from here we'll see if I get the blue API so now it's hitting the containerized infrastructure so now I've",
    "start": "1517400",
    "end": "1523620"
  },
  {
    "text": "successfully moved my web application from my VMs and my API for my VMs now last thing we want to do just for",
    "start": "1523620",
    "end": "1529620"
  },
  {
    "text": "fun we will go ahead and talk to bare metal and that's my raspberry pi sitting there I don't have a discover and gimbal",
    "start": "1529620",
    "end": "1535530"
  },
  {
    "text": "to do this cuz there's not really a good API for bare metal we probably figure something out but for today we'll just",
    "start": "1535530",
    "end": "1540690"
  },
  {
    "text": "create basically another service in the endpoint so this is going to create a generic service for me called bare metal and we have one endpoint here which",
    "start": "1540690",
    "end": "1547830"
  },
  {
    "text": "points to by an IP of that put that raspberry pi so if I go ahead and apply",
    "start": "1547830",
    "end": "1552920"
  },
  {
    "text": "those six if we look at our services again we'll see now I have this bare",
    "start": "1552920",
    "end": "1559650"
  },
  {
    "text": "metal service and it has an IP address of dot 50 so let's go ahead and edit",
    "start": "1559650",
    "end": "1565460"
  },
  {
    "text": "let's go ahead and edit our our proxy the default one and we'll come down here",
    "start": "1565460",
    "end": "1570810"
  },
  {
    "text": "and we will change out from blue web we'll hit very metal right so now if I",
    "start": "1570810",
    "end": "1580890"
  },
  {
    "text": "hit our requests we should get very mellow returning let me do right so now it's actually hitting request to the",
    "start": "1580890",
    "end": "1585990"
  },
  {
    "text": "raspberry pi so hopefully you can see now where we couldn't kind of like add some cool networking add some cool",
    "start": "1585990",
    "end": "1591630"
  },
  {
    "text": "bridging of applications again this isn't gonna solve your service mesh problem but you can see how now we can",
    "start": "1591630",
    "end": "1596790"
  },
  {
    "text": "have interrupted interoperability between all these different endpoints living across my cluster and hopefully this helps you work to a to a better",
    "start": "1596790",
    "end": "1603420"
  },
  {
    "text": "spot so I think Steve now is gonna help us move on from the end ok so where do",
    "start": "1603420",
    "end": "1609510"
  },
  {
    "text": "you go to learn more that we've been talking about contour gimble they're both open source projects the contour",
    "start": "1609510",
    "end": "1616980"
  },
  {
    "text": "project has regular working group meetings it's at on the third Tuesday of",
    "start": "1616980",
    "end": "1622410"
  },
  {
    "text": "each month it turns out that would turn out to be today so because we've got",
    "start": "1622410",
    "end": "1627930"
  },
  {
    "text": "cube con going on we're not going to have the one today but catch-up on the next cycle so part of me yeah we're",
    "start": "1627930",
    "end": "1638280"
  },
  {
    "text": "going to get to that so go to this site project contoured IO to learn",
    "start": "1638280",
    "end": "1643630"
  },
  {
    "text": "more if you want to see what if you've missed all the meetings before they got recorded the notes and agendas are",
    "start": "1643630",
    "end": "1651480"
  },
  {
    "text": "recorded and the portal is at that site I don't know if we have very much time",
    "start": "1651480",
    "end": "1657610"
  },
  {
    "text": "for questions but it's fortuitous that we have an event occurring during lunch",
    "start": "1657610",
    "end": "1663610"
  },
  {
    "text": "called contour meet the maintainer z' the map is up there so this is in hall c",
    "start": "1663610",
    "end": "1670590"
  },
  {
    "text": "lunches in three different places but we're specifically going to be in all c",
    "start": "1670590",
    "end": "1675700"
  },
  {
    "text": "and there will be contour signs on sticks to direct you to the area where",
    "start": "1675700",
    "end": "1681150"
  },
  {
    "text": "the contour maintainer z' are open to discussions and questions so please come",
    "start": "1681150",
    "end": "1689050"
  },
  {
    "text": "by like I said there's far more material in this deck that was hidden during",
    "start": "1689050",
    "end": "1694960"
  },
  {
    "text": "presentation but you know we simply didn't have time for it but this deck is",
    "start": "1694960",
    "end": "1700300"
  },
  {
    "text": "already on the sched site so go ahead and download it and you can learn a little bit more from there I think we do",
    "start": "1700300",
    "end": "1708160"
  },
  {
    "text": "have a few minutes for questions 5 ok so if anybody's got any raise your hand and",
    "start": "1708160",
    "end": "1714640"
  },
  {
    "text": "I think somebody will bring you a microphone ok well I don't see any",
    "start": "1714640",
    "end": "1724240"
  },
  {
    "text": "questions but come oh there's one",
    "start": "1724240",
    "end": "1728160"
  },
  {
    "text": "but yeah just to summarize what you saw I think it's a pretty cool method to link up non kubernetes workloads and",
    "start": "1735010",
    "end": "1742070"
  },
  {
    "text": "there are some things like bringing in that that legacy Windows is something that I don't think is even doable in an",
    "start": "1742070",
    "end": "1748670"
  },
  {
    "text": "SEO service mesh now it's working I not",
    "start": "1748670",
    "end": "1761630"
  },
  {
    "text": "a question but a comment you said that on was only available for as Debian packages there is actually Ted trade is",
    "start": "1761630",
    "end": "1768590"
  },
  {
    "text": "sponsoring a site called get an Moy dot IO which has packages for all the major",
    "start": "1768590",
    "end": "1774200"
  },
  {
    "text": "Linux distributions including RPMs on send us and Red Hat Enterprise okay",
    "start": "1774200",
    "end": "1780170"
  },
  {
    "text": "thank you so he just said you can get the RPMs and somebody is building them",
    "start": "1780170",
    "end": "1785480"
  },
  {
    "text": "thank you for a typical deployment say",
    "start": "1785480",
    "end": "1796540"
  },
  {
    "text": "the entire service mesh versus contour approach how much of complexity and",
    "start": "1796540",
    "end": "1805150"
  },
  {
    "text": "processing different Shaw you can achieve so I think he has the difference",
    "start": "1805150",
    "end": "1812390"
  },
  {
    "text": "between using the approach you just showed here Steve and using is an SEO",
    "start": "1812390",
    "end": "1818150"
  },
  {
    "text": "service mesh no difference in complexity yeah so they're gonna be night and day so so SDO has you know psyched",
    "start": "1818150",
    "end": "1824630"
  },
  {
    "text": "re-injected everywhere there's lots of other components that have to run and make it steel work contour is literally like one controller which is contour and",
    "start": "1824630",
    "end": "1831500"
  },
  {
    "text": "then a set of envoys to handle your load and traffic so they're gonna be its contour is gonna give you a much smaller",
    "start": "1831500",
    "end": "1837380"
  },
  {
    "text": "footprint and much simpler design to implement what I just kind of showed you but again we can't compete with some of",
    "start": "1837380",
    "end": "1843080"
  },
  {
    "text": "the things that this do can give you like the mutual TLS and those sort of things so it comes down to you know what",
    "start": "1843080",
    "end": "1848930"
  },
  {
    "text": "what do you need out of out of your your your network requests you need the things that I match gives you then I may",
    "start": "1848930",
    "end": "1854540"
  },
  {
    "text": "have to bite the bullet and deploy those those matches but if you don't need that you want the routing and I think this will be a great alternative to",
    "start": "1854540",
    "end": "1860150"
  },
  {
    "text": "investigate do you are there any white",
    "start": "1860150",
    "end": "1865610"
  },
  {
    "text": "papers or anything that would helped me to understand what the Layton sees might be from say using the sto",
    "start": "1865610",
    "end": "1871640"
  },
  {
    "text": "service mesh compared to what you have now for you know different setups I don't have anything that we could",
    "start": "1871640",
    "end": "1878210"
  },
  {
    "text": "reference that's the interesting yeah I know I know we built a lot of this we",
    "start": "1878210",
    "end": "1883909"
  },
  {
    "text": "took legacy very seriously so we we don't add any more than 20 milliseconds",
    "start": "1883909",
    "end": "1889159"
  },
  {
    "text": "of latency to your upstream but I don't have any comparisons or any kind of metrics a lot of it comes down to your",
    "start": "1889159",
    "end": "1895909"
  },
  {
    "text": "network in your your infrastructure so it's difficult to to manage some of those numbers 20 milliseconds is that on",
    "start": "1895909",
    "end": "1901760"
  },
  {
    "text": "bare metal or on VMs unlike AWS I think we did those tests on bare metal",
    "start": "1901760",
    "end": "1907460"
  },
  {
    "text": "we about validated this does it support the mutual Taylors when you deploy the",
    "start": "1907460",
    "end": "1914779"
  },
  {
    "text": "Envoy in vm now do not not implement or implement mutual TLS right so all those",
    "start": "1914779",
    "end": "1922100"
  },
  {
    "text": "requests that I did are not automatically encrypted by certificates okay so that's that's again Bria would",
    "start": "1922100",
    "end": "1928250"
  },
  {
    "text": "help you if you needed that feature don't you or another mesh and is there like a concept is like I'm one",
    "start": "1928250",
    "end": "1935179"
  },
  {
    "text": "management plane and multiple control plane that's that's kind of like how it works like yeah if I want to have a",
    "start": "1935179",
    "end": "1942140"
  },
  {
    "text": "single pane window like a lot of the traffic does does the counter supports it is there air so how's hunter",
    "start": "1942140",
    "end": "1949730"
  },
  {
    "text": "architected is that your question like is there one control plane so I believe legatees multiple control planes but if",
    "start": "1949730",
    "end": "1956390"
  },
  {
    "text": "I want to see the traffic goes back and forth between VM the kubernetes or any",
    "start": "1956390",
    "end": "1963890"
  },
  {
    "text": "other bare metal how we do that like in oh right yeah so envoy has a whole suite",
    "start": "1963890",
    "end": "1970159"
  },
  {
    "text": "of metrics that you can get and we have example dashboards in Prometheus so I should have good demo that but we have",
    "start": "1970159",
    "end": "1975649"
  },
  {
    "text": "if you deploy all the metrics and Envoy it because everything is routing through that routing cluster I'd see metrics on",
    "start": "1975649",
    "end": "1980960"
  },
  {
    "text": "every single every single hop that went around so for requests from the front end to your application and from your",
    "start": "1980960",
    "end": "1986630"
  },
  {
    "text": "application to the back end it went through that envoy then yeah that I could give you all the metrics you plan on seeing that yes way else",
    "start": "1986630",
    "end": "1998120"
  },
  {
    "text": "all right thanks a lot okay thanks for coming if you've got more or just want",
    "start": "1998120",
    "end": "2004730"
  },
  {
    "text": "to chat come to that meet the maintainer z-- event thank you",
    "start": "2004730",
    "end": "2009340"
  }
]