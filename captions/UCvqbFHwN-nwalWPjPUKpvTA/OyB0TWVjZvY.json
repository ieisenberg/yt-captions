[
  {
    "start": "0",
    "end": "35000"
  },
  {
    "text": "hi welcome to keep calm and sincere this session is pre-recorded and we are speaking to you from the past",
    "start": "560",
    "end": "6799"
  },
  {
    "text": "our present stars will be watching the chat and please feel free to ask any questions we will talk about threat of",
    "start": "6799",
    "end": "13840"
  },
  {
    "text": "hunting and scale by using kubernetes audit logs and current kernel events and in this journey we are not going to dip",
    "start": "13840",
    "end": "20560"
  },
  {
    "text": "that into each technology that we utilize for our purpose but it's more than that we want to tell our user story",
    "start": "20560",
    "end": "28160"
  },
  {
    "text": "to show the way how we did it and demonstrate how everything works in harmony and our production let's get",
    "start": "28160",
    "end": "34719"
  },
  {
    "text": "started i am for country cal and international i am maintaining production level clusters",
    "start": "34719",
    "end": "40559"
  },
  {
    "start": "35000",
    "end": "353000"
  },
  {
    "text": "as a platform engineer also i am contributing to various cnc projects and",
    "start": "40559",
    "end": "45920"
  },
  {
    "text": "open source projects hello my name is imin i have been working on containers and the",
    "start": "45920",
    "end": "51600"
  },
  {
    "text": "technologies around containers for the last two years i love working on open source projects and i love watching",
    "start": "51600",
    "end": "58719"
  },
  {
    "text": "uh car videos okay before we get into it uh we want to",
    "start": "58719",
    "end": "65360"
  },
  {
    "text": "introduce ourselves uh tranquil is a tech company that they focus on e-commerce in turkey and",
    "start": "65360",
    "end": "72080"
  },
  {
    "text": "creates a positive impact on our country and the ecosystem at 10 years we are",
    "start": "72080",
    "end": "77280"
  },
  {
    "text": "running thousands of kubernetes elasticsearch nosql databases and much more we are highly motivated to",
    "start": "77280",
    "end": "84479"
  },
  {
    "text": "include open source project into our systems and be part of open source project community and projects",
    "start": "84479",
    "end": "91439"
  },
  {
    "text": "we are mostly managing our infrastructure on prem that is distributed across seven different data",
    "start": "91439",
    "end": "96799"
  },
  {
    "text": "centers running h8 kubernetes clusters this is going to be our very first cncf",
    "start": "96799",
    "end": "102560"
  },
  {
    "text": "presentation as a trend yo so as you see here this is our infrastructure matrix",
    "start": "102560",
    "end": "108799"
  },
  {
    "text": "you can monitor our metrics at real time by just entering informatics infometrix.chandual.com",
    "start": "108799",
    "end": "115439"
  },
  {
    "text": "and before we get into the presentation we want to thank our platform team for",
    "start": "115439",
    "end": "120719"
  },
  {
    "text": "their great work and send special greetings to our squad for the awesome teamwork",
    "start": "120719",
    "end": "128720"
  },
  {
    "text": "okay who is this station for if you are curious about runtime security and trade",
    "start": "128720",
    "end": "135040"
  },
  {
    "text": "hunting at production and want to know how you can monitor entire system this",
    "start": "135040",
    "end": "140640"
  },
  {
    "text": "session is definitely for you you will learn how we detect rates automate the process of collecting and analyzing",
    "start": "140640",
    "end": "147520"
  },
  {
    "text": "outlooks to monitor of potential security threats then to edge these",
    "start": "147520",
    "end": "152959"
  },
  {
    "text": "threats with appropriate actions moreover this session is investigating this suspicious of this in your",
    "start": "152959",
    "end": "160080"
  },
  {
    "text": "infrastructure and create a baseline for monitoring and alerting best of all we",
    "start": "160080",
    "end": "165920"
  },
  {
    "text": "it's all done with open source projects okay",
    "start": "165920",
    "end": "171920"
  },
  {
    "text": "in today in this session uh we'll talk about the threats and our security pipeline",
    "start": "171920",
    "end": "178800"
  },
  {
    "text": "related to that will explain the audit logs the runtime security the log processing and the monitoring besides we",
    "start": "178800",
    "end": "186319"
  },
  {
    "text": "will reproduce our mindset in a demo at the end of the session furthermore we want to share some ideas for cluster",
    "start": "186319",
    "end": "193599"
  },
  {
    "text": "security monitoring [Music] okay what is threat code 19 is a trend",
    "start": "193599",
    "end": "201200"
  },
  {
    "text": "to humans of course everyone knows what rate is before we started",
    "start": "201200",
    "end": "207040"
  },
  {
    "text": "uh we want to simplify our subject here with this well-known",
    "start": "207040",
    "end": "212159"
  },
  {
    "text": "example nowadays common 19 is losing its effect hopefully but we are still suffering from cone 19.",
    "start": "212159",
    "end": "219680"
  },
  {
    "text": "this sickness is simply simply uh iterate to us when you become you'll",
    "start": "219680",
    "end": "225599"
  },
  {
    "text": "start showing some symptoms like high fever or cough so it's like basically the trade is",
    "start": "225599",
    "end": "232879"
  },
  {
    "text": "coming from outside it's not and our body is monitoring itself",
    "start": "232879",
    "end": "239040"
  },
  {
    "text": "and starts alerting for us to take action when we got ill we are going to follow the same basic",
    "start": "239040",
    "end": "245200"
  },
  {
    "text": "for our kubernetes environments threats",
    "start": "245200",
    "end": "250319"
  },
  {
    "text": "we should focus on our defense to minimize the risk we have to know what we are surrounded by like here we have a",
    "start": "250319",
    "end": "257840"
  },
  {
    "text": "bunch of examples here which containers reading credentials accessing the file",
    "start": "257840",
    "end": "263600"
  },
  {
    "text": "systems so there will be always actors to intimidate your environment and you have",
    "start": "263600",
    "end": "271280"
  },
  {
    "text": "to be aware of the messages application and user to protect your environment so first of",
    "start": "271280",
    "end": "278080"
  },
  {
    "text": "all you need to define your trust boundaries here our transponder is basically our",
    "start": "278080",
    "end": "284400"
  },
  {
    "text": "clusters nodes and of course containers the main key point here is to create a",
    "start": "284400",
    "end": "290080"
  },
  {
    "text": "focused defense area that we should create fine-tuned rules and alert mechanisms especially if you work on a",
    "start": "290080",
    "end": "297520"
  },
  {
    "text": "high scale you need to label your logs to mark where the data is sourced if",
    "start": "297520",
    "end": "304400"
  },
  {
    "text": "we are able to find repeatable patterns to detect threats by person looks we can",
    "start": "304400",
    "end": "310639"
  },
  {
    "text": "easily optimize our hunting here our security pipeline and we call it our",
    "start": "310639",
    "end": "318240"
  },
  {
    "text": "second path security pipeline at runtime basically so we're going to cover our threads huntingtop in four different",
    "start": "318240",
    "end": "325360"
  },
  {
    "text": "headlines each uh each in the each headline will uh",
    "start": "325360",
    "end": "330560"
  },
  {
    "text": "introduce a open source projects and will show our configuration and end of",
    "start": "330560",
    "end": "336160"
  },
  {
    "text": "the session like we said we'll use those application in in a demo",
    "start": "336160",
    "end": "342960"
  },
  {
    "text": "if you're not so familiar with these technologies don't worry we'll explain everything in a brief interaction to",
    "start": "342960",
    "end": "349360"
  },
  {
    "text": "each one so here it's time for fulcrum to explain audis and falco",
    "start": "349360",
    "end": "356080"
  },
  {
    "text": "thank you for a great introduction and here are audit talks system visibility",
    "start": "356479",
    "end": "361759"
  },
  {
    "text": "into events in the container and system give great insight into what a particular or malicious",
    "start": "361759",
    "end": "369039"
  },
  {
    "text": "user is trying to do we can define our audience as answer these questions such as when did happen",
    "start": "369039",
    "end": "376720"
  },
  {
    "text": "what happened with going and who initiated it and so on",
    "start": "376720",
    "end": "381759"
  },
  {
    "text": "which are defined in the kubernetes documentation very well kubernetes audit records to",
    "start": "381759",
    "end": "387120"
  },
  {
    "text": "actions and provide an audit trail of users and workloads which are called",
    "start": "387120",
    "end": "392400"
  },
  {
    "text": "kubernetes api kernel level auditing allows us to monitor system calls file",
    "start": "392400",
    "end": "397600"
  },
  {
    "text": "accesses and much more things eventually we obtain the information about what's",
    "start": "397600",
    "end": "403280"
  },
  {
    "text": "happening in the cluster kubernetes point level events for other",
    "start": "403280",
    "end": "411280"
  },
  {
    "text": "end every action that we do when we are interacting with the clusters",
    "start": "411280",
    "end": "416319"
  },
  {
    "text": "and using cuba ctrl or any other things go through the kubernetes api server",
    "start": "416319",
    "end": "422400"
  },
  {
    "text": "what kubernetes audit does is provides chronological set of records that document all the changes to the cluster",
    "start": "422400",
    "end": "430080"
  },
  {
    "text": "and each audit event is actually json object that includes event time response status who initiated it ip addresses",
    "start": "430080",
    "end": "437520"
  },
  {
    "text": "user agents and you name it all that kind of information you can either active before you set up",
    "start": "437520",
    "end": "444639"
  },
  {
    "text": "the cluster or you can access the master not activate the kubernetes audit flake but you have to",
    "start": "444639",
    "end": "452160"
  },
  {
    "text": "restart the kubernetes api server eventually and human is already tested",
    "start": "452160",
    "end": "457440"
  },
  {
    "text": "for two weekends and one for log backend and other another one we probably can't",
    "start": "457440",
    "end": "463280"
  },
  {
    "text": "we have we can simply send events directly to the top stream server while log backend is stored in the file",
    "start": "463280",
    "end": "470960"
  },
  {
    "text": "system for our case we are going to use log backend and you will understand why",
    "start": "470960",
    "end": "477039"
  },
  {
    "text": "in the next slides",
    "start": "477039",
    "end": "479840"
  },
  {
    "text": "okay what should be recorded as you can already see a simple policy",
    "start": "482319",
    "end": "487759"
  },
  {
    "text": "configuration that has two different rules and we might",
    "start": "487759",
    "end": "494479"
  },
  {
    "text": "listing the ports for example doesn't give you any information secretly right getting a",
    "start": "494479",
    "end": "502240"
  },
  {
    "text": "config map reading posts tattoos whether it is video or not and this feature actual policy provides",
    "start": "502240",
    "end": "509840"
  },
  {
    "text": "you to minimize the variability like changing the lock level or eliminating",
    "start": "509840",
    "end": "514959"
  },
  {
    "text": "unnecessary logs and for example humanist is logs net not",
    "start": "514959",
    "end": "522560"
  },
  {
    "text": "much critical and for different kind of resources",
    "start": "522560",
    "end": "529440"
  },
  {
    "text": "falco is a runtime squared engine it's open source equal tool for continuous risk",
    "start": "530240",
    "end": "536240"
  },
  {
    "text": "and threat detection across kubernetes containers and clouds",
    "start": "536240",
    "end": "541839"
  },
  {
    "text": "and function detects unexpected barriers configuration changes instructions and data tests in real time",
    "start": "541839",
    "end": "550000"
  },
  {
    "text": "falco also has support for kubernetes audit and kernel events",
    "start": "550000",
    "end": "555120"
  },
  {
    "text": "and uses has different methods to collect the data which is the kernel model and ebpa probe",
    "start": "555120",
    "end": "564800"
  },
  {
    "text": "here is architecture diagram of falco the diagram explains pretty much",
    "start": "566720",
    "end": "572160"
  },
  {
    "text": "everything itself when falco engine starts it simply loads",
    "start": "572160",
    "end": "578080"
  },
  {
    "text": "the rules the engine then waits for the events entered by lip escape and lip ins",
    "start": "578080",
    "end": "585360"
  },
  {
    "text": "complements basically lip escape is responsible for collecting data",
    "start": "585360",
    "end": "590640"
  },
  {
    "text": "while leaping is responsible for enriching the data and what we can collect system events",
    "start": "590640",
    "end": "598160"
  },
  {
    "text": "using the kernel module or evpf prop you can only",
    "start": "598160",
    "end": "603360"
  },
  {
    "text": "choose one top active and also supports kubernetes id and all you have to do is",
    "start": "603360",
    "end": "610240"
  },
  {
    "text": "enable the web server and send events to it using flank bit",
    "start": "610240",
    "end": "615760"
  },
  {
    "text": "in summary it simply takes the events message time with the rules and then when the event matches",
    "start": "615760",
    "end": "622560"
  },
  {
    "text": "one of the rules falco simply sends it to one of the outputs which is file",
    "start": "622560",
    "end": "628240"
  },
  {
    "text": "grpcc your book and you can also use falco sidekick falco client go and falco",
    "start": "628240",
    "end": "634480"
  },
  {
    "text": "exporter",
    "start": "634480",
    "end": "637040"
  },
  {
    "text": "okay falco configuration b eliminating our falco using the hand",
    "start": "640720",
    "end": "646240"
  },
  {
    "text": "chart and over affirmation capture is enabled by default to change the value",
    "start": "646240",
    "end": "653040"
  },
  {
    "text": "you can use overwrite this radio and and also it's possible to add new rules",
    "start": "653040",
    "end": "659120"
  },
  {
    "text": "or or write rule files as you can already see here and these configurations are just tip of",
    "start": "659120",
    "end": "666079"
  },
  {
    "text": "diaspora by applying the following configuration now we are ready to scan kubernetes id",
    "start": "666079",
    "end": "672959"
  },
  {
    "text": "blocks fault gurus follicle has a weaker extent",
    "start": "672959",
    "end": "679200"
  },
  {
    "text": "rules with the conditions and macros for more flexibility it also ships many rules by default and",
    "start": "679200",
    "end": "686079"
  },
  {
    "text": "these rules are stripped by each other contacts for example postgres kubernetes elasticsearch etc",
    "start": "686079",
    "end": "694480"
  },
  {
    "text": "and you for example you can modify conjugate specific conditions or you can add your",
    "start": "694480",
    "end": "701600"
  },
  {
    "text": "custom logic with macros without changing the rule itself",
    "start": "701600",
    "end": "706959"
  },
  {
    "text": "okay here's an example of what the falco rule looks like",
    "start": "709839",
    "end": "715279"
  },
  {
    "text": "we are using this use case for detecting a privileged container that launches in the cluster",
    "start": "715279",
    "end": "721120"
  },
  {
    "text": "it's a simple logical expression and combined with some conditions when",
    "start": "721120",
    "end": "726800"
  },
  {
    "text": "first time when you deploy default rules which covers many aspects",
    "start": "726800",
    "end": "732160"
  },
  {
    "text": "for a variety of situations however this might cause some noise in your environment this noise might",
    "start": "732160",
    "end": "739519"
  },
  {
    "text": "mislead you if you are at a high scale and draws false meaning force positives",
    "start": "739519",
    "end": "746560"
  },
  {
    "text": "falca provides a weight or right rules in this example on the left side",
    "start": "746560",
    "end": "752800"
  },
  {
    "text": "a rule applies for pitch containers but you might have some custom privilege",
    "start": "752800",
    "end": "758079"
  },
  {
    "text": "containers and this could fire for positive highlights in this case we all write two is two aspects here the first",
    "start": "758079",
    "end": "765680"
  },
  {
    "text": "one is macro where you can define logic here and this micro requires a load these",
    "start": "765680",
    "end": "771600"
  },
  {
    "text": "four privileged containers in two steps we have reduced those positive situations",
    "start": "771600",
    "end": "780399"
  },
  {
    "text": "follicles also supports rule exceptions and exceptions are defined as a part of",
    "start": "782720",
    "end": "789040"
  },
  {
    "text": "the rule the file property contains one or two more files that will extract a value",
    "start": "789040",
    "end": "795120"
  },
  {
    "text": "from the audit events the comps property which is you can",
    "start": "795120",
    "end": "801200"
  },
  {
    "text": "use contains equals greater than less than completion operators and that align",
    "start": "801200",
    "end": "807839"
  },
  {
    "text": "with the items in the file property each item in the tuple should align one",
    "start": "807839",
    "end": "813440"
  },
  {
    "text": "to one with the corresponding file and completion operator after we tune the rules by enabling the",
    "start": "813440",
    "end": "820480"
  },
  {
    "text": "exceptions and for each rule we finally got rid of a bunch of false positives as you can",
    "start": "820480",
    "end": "827839"
  },
  {
    "text": "already see here okay i mean it's your turn",
    "start": "827839",
    "end": "834320"
  },
  {
    "start": "830000",
    "end": "910000"
  },
  {
    "text": "thanks fuku so he he already mentioned about the kubernetes logs how we",
    "start": "834320",
    "end": "840880"
  },
  {
    "text": "write them into a file so he already talked about the falco so we are collecting logs from the",
    "start": "840880",
    "end": "848320"
  },
  {
    "text": "kernel things to focus uh the kernel module or you can choose epp approved",
    "start": "848320",
    "end": "853760"
  },
  {
    "text": "let's talk about how we collect it looks and how we can send our looks falco flatbeat is a general purpose load",
    "start": "853760",
    "end": "860800"
  },
  {
    "text": "processor it also has metrics collection capabilities for embedded linux systems",
    "start": "860800",
    "end": "866240"
  },
  {
    "text": "you can run flap it in any environment such vm embedded devices bare metal",
    "start": "866240",
    "end": "872959"
  },
  {
    "text": "for our case we are going to run in kubernetes clusters in our scenario financebeat is going to",
    "start": "872959",
    "end": "880079"
  },
  {
    "text": "be deployed with as demons said since we want to deploy",
    "start": "880079",
    "end": "885680"
  },
  {
    "text": "on each node and we want to collect every uh collec every logs in in the node",
    "start": "885680",
    "end": "894880"
  },
  {
    "text": "we decide to go with flat bit over flanked because it is designed to run high scale with low",
    "start": "894880",
    "end": "900560"
  },
  {
    "text": "resources and it is one of the efficient solution for containerized environments",
    "start": "900560",
    "end": "908639"
  },
  {
    "text": "pipeline let's see inside of the box this is the data pipeline which is called in the",
    "start": "908639",
    "end": "915199"
  },
  {
    "start": "910000",
    "end": "1000000"
  },
  {
    "text": "documentation it starts with input input collects the data in many different ways",
    "start": "915199",
    "end": "920880"
  },
  {
    "text": "for example you can use kernel plug-in to collect kernel locks there are other",
    "start": "920880",
    "end": "926480"
  },
  {
    "text": "plugins to collect logs eventually you you'll have a lot of data in your hands but you need",
    "start": "926480",
    "end": "934240"
  },
  {
    "text": "to structure the data so parser comes into play here you can convert your",
    "start": "934240",
    "end": "941279"
  },
  {
    "text": "unstructured data into structured data for instance your application has",
    "start": "941279",
    "end": "947279"
  },
  {
    "text": "a unique log pattern you can define that pattern and the parser",
    "start": "947279",
    "end": "953360"
  },
  {
    "text": "and you can apply it to any lock so here we have filter filter fixes are one",
    "start": "953360",
    "end": "960240"
  },
  {
    "text": "of our challenge here uh twitter basically enriches and",
    "start": "960240",
    "end": "965680"
  },
  {
    "text": "modifies the low records buffer buffer refers to the ability to store the",
    "start": "965680",
    "end": "971279"
  },
  {
    "text": "records in memory or option in the file system until your output is delivered with routing you can send the",
    "start": "971279",
    "end": "979120"
  },
  {
    "text": "data one or multiple destinations take and match parameters are critical here",
    "start": "979120",
    "end": "984639"
  },
  {
    "text": "the great part is always at the end you can send the data to a service or write",
    "start": "984639",
    "end": "990079"
  },
  {
    "text": "to a file this can be implemented as plugins like you can define elasticsearch or low-key as endpoints",
    "start": "990079",
    "end": "996480"
  },
  {
    "text": "we'll see in the next slides config flat bit based on our needs",
    "start": "996480",
    "end": "1002639"
  },
  {
    "text": "as you see here uh this is how we collect data",
    "start": "1002639",
    "end": "1007920"
  },
  {
    "text": "for kubernetes api logs actually uh we use here uh tail plug-in allies",
    "start": "1007920",
    "end": "1015360"
  },
  {
    "text": "and tech we defined here is an internal setting that is used in a later stage by",
    "start": "1015360",
    "end": "1020720"
  },
  {
    "text": "router to decide which built which output phase it must go through and it's",
    "start": "1020720",
    "end": "1026558"
  },
  {
    "text": "it is worth mentioning that we use json password here you can always find correct values for buffer configuration",
    "start": "1026559",
    "end": "1034558"
  },
  {
    "text": "in the next slides uh you see the filter here the key part is to collect out from",
    "start": "1034559",
    "end": "1041918"
  },
  {
    "text": "different location with identity in addition to the kubernetes audit event itself we have all this additional",
    "start": "1041919",
    "end": "1048880"
  },
  {
    "text": "information about where all it is coming from like port name container name",
    "start": "1048880",
    "end": "1054880"
  },
  {
    "text": "and you can add another custom label here if you have millions",
    "start": "1054880",
    "end": "1060640"
  },
  {
    "text": "of kubernetes cluster you want to know who produced this log these variables are set automatically by our see i see",
    "start": "1060640",
    "end": "1066720"
  },
  {
    "text": "the pipeline since we store all the flat bits configuration as a code",
    "start": "1066720",
    "end": "1073039"
  },
  {
    "text": "and fortunately there's a built-in pipe named modified plugin that does this job",
    "start": "1073039",
    "end": "1078960"
  },
  {
    "text": "on the collected data lastly after we give identity for each event",
    "start": "1078960",
    "end": "1086160"
  },
  {
    "text": "now they can be pushed in any remote hosts so that finally we can",
    "start": "1086160",
    "end": "1092720"
  },
  {
    "text": "see the out out events and do threat and analysis on them",
    "start": "1092720",
    "end": "1100000"
  },
  {
    "start": "1100000",
    "end": "1155000"
  },
  {
    "text": "okay why flambeat with locked backhand or republican backhand",
    "start": "1100160",
    "end": "1106000"
  },
  {
    "text": "you you might want to ask this as that question before you're asking that question we want to answer",
    "start": "1106000",
    "end": "1112559"
  },
  {
    "text": "as you can see log processor is very important but also it's challenging to configure to make it",
    "start": "1112559",
    "end": "1118880"
  },
  {
    "text": "production ready by using flatbed we are able to modify the event and loads",
    "start": "1118880",
    "end": "1123919"
  },
  {
    "text": "according to our business requirements furthermore we can easily reconfigure our output plugins and start a reload to",
    "start": "1123919",
    "end": "1131600"
  },
  {
    "text": "entire class by clicking a single button in the pipeline which is our cic the pipeline with flambeat we can send out",
    "start": "1131600",
    "end": "1139200"
  },
  {
    "text": "logs to anywhere in this case we see we are simply sending out how it looks to",
    "start": "1139200",
    "end": "1144480"
  },
  {
    "text": "different remotes one is falco the other one r is uh the other one is our indexing storage",
    "start": "1144480",
    "end": "1153440"
  },
  {
    "text": "in the next slides uh we'll talk about uh monitoring it's actually how we",
    "start": "1153919",
    "end": "1159360"
  },
  {
    "start": "1155000",
    "end": "1190000"
  },
  {
    "text": "increased uh the visibility and how we enabled the observing",
    "start": "1159360",
    "end": "1164880"
  },
  {
    "text": "the performance of security although there are other options around we'll talk about how we used uh loki due to",
    "start": "1164880",
    "end": "1173280"
  },
  {
    "text": "its similarity prometheus and it has uh can easily implement with the graphana",
    "start": "1173280",
    "end": "1180240"
  },
  {
    "text": "this is another part actually it's very convenient and cost efficient to configure",
    "start": "1180240",
    "end": "1186160"
  },
  {
    "text": "and easily create graphic panels with it",
    "start": "1186160",
    "end": "1191360"
  },
  {
    "start": "1190000",
    "end": "1235000"
  },
  {
    "text": "okay log query first we need to organize the falco logs with loki we are going to",
    "start": "1191360",
    "end": "1196960"
  },
  {
    "text": "create a log pipeline which is being executed in left right seconds for each",
    "start": "1196960",
    "end": "1202559"
  },
  {
    "text": "lock line this is how our route logs looks like in graphene as you see",
    "start": "1202559",
    "end": "1208559"
  },
  {
    "text": "as you see here in the picture it is very great to have the logs in json format uh it's going to make our",
    "start": "1208559",
    "end": "1215760"
  },
  {
    "text": "job very easy you'll see it in the demo and we'll show it in the next slice slides but unfortunately",
    "start": "1215760",
    "end": "1224640"
  },
  {
    "text": "this output is not applicable for panels for now however",
    "start": "1224640",
    "end": "1230000"
  },
  {
    "text": "you can easily filter in the logs here",
    "start": "1230000",
    "end": "1235120"
  },
  {
    "start": "1235000",
    "end": "1310000"
  },
  {
    "text": "in the next slide we are showing how you can organize your logs in the",
    "start": "1235120",
    "end": "1240400"
  },
  {
    "text": "left hand side above you're seeing we are using json parser here so that",
    "start": "1240400",
    "end": "1246880"
  },
  {
    "text": "json parser is basically uh can convert json json formatted logs uh and",
    "start": "1246880",
    "end": "1254320"
  },
  {
    "text": "extract the uh logs labels so those log labels can be",
    "start": "1254320",
    "end": "1259360"
  },
  {
    "text": "usable in the metric queries a little bit below as you see the",
    "start": "1259360",
    "end": "1265440"
  },
  {
    "text": "electric field is just detected by graphana but you can use it in the graph final ui but",
    "start": "1265440",
    "end": "1272080"
  },
  {
    "text": "you cannot use them in the metric query so",
    "start": "1272080",
    "end": "1277840"
  },
  {
    "text": "let's work on let's work on the part log part that is also is in json format",
    "start": "1277840",
    "end": "1285919"
  },
  {
    "text": "the value is also json format as you see here we're going to use in the middle we're going to use the line format",
    "start": "1285919",
    "end": "1292080"
  },
  {
    "text": "expression to select a part then we'll use the json parser again to",
    "start": "1292080",
    "end": "1297120"
  },
  {
    "text": "extract labels on the right hand side you see all the labels and those labels",
    "start": "1297120",
    "end": "1302559"
  },
  {
    "text": "can be usable in the metric query in the next slides we'll",
    "start": "1302559",
    "end": "1307840"
  },
  {
    "text": "apply a simple uh metric query uh low code has its own",
    "start": "1307840",
    "end": "1314640"
  },
  {
    "start": "1310000",
    "end": "1345000"
  },
  {
    "text": "materials that can be applied to low queries you can create panels based on number of entries per second or number",
    "start": "1314640",
    "end": "1321600"
  },
  {
    "text": "of bytes per second here is an example how a metric query and a loquer is combined count over time",
    "start": "1321600",
    "end": "1329200"
  },
  {
    "text": "shows the number of entries for each log within the given range with combination of some query we can",
    "start": "1329200",
    "end": "1335919"
  },
  {
    "text": "count long entries based on anything as you see here in the example we are",
    "start": "1335919",
    "end": "1341679"
  },
  {
    "text": "used rules we use the cluster names okay some time for furkan to talk about",
    "start": "1341679",
    "end": "1348080"
  },
  {
    "start": "1345000",
    "end": "1425000"
  },
  {
    "text": "challenges and some more metrics thank you for explaining flatbeat and",
    "start": "1348080",
    "end": "1355600"
  },
  {
    "text": "global for us and changes at high scale and",
    "start": "1355600",
    "end": "1361919"
  },
  {
    "text": "actually everything seems easy in the first place right especially if you're working on high skill there might be",
    "start": "1361919",
    "end": "1368000"
  },
  {
    "text": "some changes that are worth considering because think might not work as expected",
    "start": "1368000",
    "end": "1373120"
  },
  {
    "text": "for you of course we had various changes in the process such as eliminating false",
    "start": "1373120",
    "end": "1378240"
  },
  {
    "text": "positives or writing the rules per team per project",
    "start": "1378240",
    "end": "1383280"
  },
  {
    "text": "and making this fine tuned is really time consuming and we are generating tremendous amount",
    "start": "1383280",
    "end": "1390400"
  },
  {
    "text": "of audits every second and meantime",
    "start": "1390400",
    "end": "1396480"
  },
  {
    "text": "we need to find a way to build efficient indexing aha backhand storage which is",
    "start": "1396480",
    "end": "1403280"
  },
  {
    "text": "highly available and data storage since our data grows every second",
    "start": "1403280",
    "end": "1409120"
  },
  {
    "text": "we also would like to thank our teams to make it a highly available",
    "start": "1409120",
    "end": "1415120"
  },
  {
    "text": "next specs and we are surviving this such a tremendous amount of datas",
    "start": "1415120",
    "end": "1423679"
  },
  {
    "text": "what happens in seconds a tradition we are monitoring and collecting audits",
    "start": "1423679",
    "end": "1428960"
  },
  {
    "start": "1425000",
    "end": "1465000"
  },
  {
    "text": "from thousands of workloads in a normal days approximately more than 300k audits",
    "start": "1428960",
    "end": "1435840"
  },
  {
    "text": "is being generated each second that's really huge right and for permanent more",
    "start": "1435840",
    "end": "1441440"
  },
  {
    "text": "than 400k kubernetes audits events is being generated",
    "start": "1441440",
    "end": "1446799"
  },
  {
    "text": "and 8k of these blocks are being scanned by",
    "start": "1446799",
    "end": "1452159"
  },
  {
    "text": "falco using flight bit plugin this is just what happens in a second",
    "start": "1452159",
    "end": "1457840"
  },
  {
    "text": "for our kubernetes clusters it random",
    "start": "1457840",
    "end": "1462640"
  },
  {
    "text": "okay we we created some dashboards for to talk about",
    "start": "1464240",
    "end": "1469760"
  },
  {
    "start": "1465000",
    "end": "1540000"
  },
  {
    "text": "all events and these dashboards updates in real time and we are able to select",
    "start": "1469760",
    "end": "1476720"
  },
  {
    "text": "time range and this one splits especially designed for falco audits and",
    "start": "1476720",
    "end": "1483200"
  },
  {
    "text": "we group by rule group by namespace clusters clustering",
    "start": "1483200",
    "end": "1489440"
  },
  {
    "text": "and neonamines we also active monitoring the users who",
    "start": "1489440",
    "end": "1495440"
  },
  {
    "text": "gain access to running qr spots in the production environment",
    "start": "1495440",
    "end": "1502480"
  },
  {
    "text": "another most importantly we also monitor the users who read secure",
    "start": "1503279",
    "end": "1510240"
  },
  {
    "text": "objects for example secret resource or our custom secret",
    "start": "1510240",
    "end": "1515919"
  },
  {
    "text": "resource objects inc kubernetes that store sensitive data that's used by",
    "start": "1515919",
    "end": "1522080"
  },
  {
    "text": "production services or applications",
    "start": "1522080",
    "end": "1526399"
  },
  {
    "text": "here's our weekly report we also getting weekly diverges for every event we are actually watching this a sample screen",
    "start": "1527279",
    "end": "1535120"
  },
  {
    "text": "second grab for port exec detection",
    "start": "1535120",
    "end": "1539279"
  },
  {
    "start": "1540000",
    "end": "1785000"
  },
  {
    "text": "okay let's put all the mindset into them i mean here you go ah thank you for",
    "start": "1541600",
    "end": "1547600"
  },
  {
    "text": "coming so we'll put the pieces of the puzzle together in here before we start the",
    "start": "1547600",
    "end": "1553279"
  },
  {
    "text": "demo uh we actually pre-recorded demo for this pre-recorded video we didn't",
    "start": "1553279",
    "end": "1558559"
  },
  {
    "text": "want to take much time with the demo uh to reproduce a similar experience we created an environment on our",
    "start": "1558559",
    "end": "1564960"
  },
  {
    "text": "workstation with minicrypt also we published we published the demo on github as you",
    "start": "1564960",
    "end": "1570559"
  },
  {
    "text": "see the link in the below okay can you please start the demo",
    "start": "1570559",
    "end": "1576480"
  },
  {
    "text": "okay starting to develop thank you so at the beginning of uh our demo we are",
    "start": "1576480",
    "end": "1582799"
  },
  {
    "text": "creating multi-node cluster above we have cluster one and below we have cluster two when the cluster get ready",
    "start": "1582799",
    "end": "1589600"
  },
  {
    "text": "we'll edit the cube api servers for getting the laws in the host machine okay",
    "start": "1589600",
    "end": "1595760"
  },
  {
    "text": "since the cube api server is static port it will restart itself and we save the",
    "start": "1595760",
    "end": "1602799"
  },
  {
    "text": "changes when it's done let's start collecting the logs with flat bit since we already",
    "start": "1602799",
    "end": "1609679"
  },
  {
    "text": "mentioned the hand values earlier we'll we will just look at them quickly here and we will modify the filter",
    "start": "1609679",
    "end": "1616799"
  },
  {
    "text": "to add custom class label and install the hand chart we'll use hem chart here",
    "start": "1616799",
    "end": "1624799"
  },
  {
    "text": "and you will see it it's very very easy to install all of them",
    "start": "1624799",
    "end": "1630000"
  },
  {
    "text": "okay [Music] next uh we'll install falco",
    "start": "1630000",
    "end": "1635039"
  },
  {
    "text": "basically use the default volumes here you don't need to configure much it's configure itself with the default rules",
    "start": "1635039",
    "end": "1644080"
  },
  {
    "text": "so okay falco ports are getting up uh last piece of the puzzle is loki for",
    "start": "1644080",
    "end": "1650080"
  },
  {
    "text": "monitoring we install it along with graph on which it will come by itself",
    "start": "1650080",
    "end": "1655360"
  },
  {
    "text": "uh since we are using the loki uh look stack hem chart here",
    "start": "1655360",
    "end": "1662080"
  },
  {
    "text": "but we are going to just install it in the one of the cluster second cluster",
    "start": "1662080",
    "end": "1667600"
  },
  {
    "text": "will define service and end point this way we'll send the output",
    "start": "1667600",
    "end": "1673279"
  },
  {
    "text": "our logs to locate easily since we defined",
    "start": "1673279",
    "end": "1679520"
  },
  {
    "text": "our output host as a service name and the port number let's access the uh",
    "start": "1679520",
    "end": "1687360"
  },
  {
    "text": "grafana let's see how it looks uh if the logs are coming of course they",
    "start": "1687360",
    "end": "1694000"
  },
  {
    "text": "are coming we already pre-recorded this video okay",
    "start": "1694000",
    "end": "1699120"
  },
  {
    "text": "we're going to just look at the falco's look and as you see here we're getting the first clusters from the first",
    "start": "1699120",
    "end": "1705039"
  },
  {
    "text": "cluster and from the second cluster we'll we're going to organize our logs as you see here see here we don't have",
    "start": "1705039",
    "end": "1710960"
  },
  {
    "text": "much labels for now but look label has",
    "start": "1710960",
    "end": "1716320"
  },
  {
    "text": "a json format so we're going to select that part and apply the json",
    "start": "1716320",
    "end": "1721840"
  },
  {
    "text": "parser again and and end of it will have a bunch of",
    "start": "1721840",
    "end": "1727600"
  },
  {
    "text": "labels okay time to [Music] as you see here we have lots of",
    "start": "1727600",
    "end": "1734559"
  },
  {
    "text": "uh labels here now finally we're going to use count over time metric query",
    "start": "1734559",
    "end": "1740559"
  },
  {
    "text": "which is a special method created for locale then we'll have a result but it's going to be messy",
    "start": "1740559",
    "end": "1749520"
  },
  {
    "text": "since every log is unique so let's use the rule label",
    "start": "1749520",
    "end": "1754960"
  },
  {
    "text": "to combine everything together so everything makes sense right now so we're changing with the cluster so",
    "start": "1754960",
    "end": "1762880"
  },
  {
    "text": "we're seeing the number of logs based on cluster thank you for coming",
    "start": "1762880",
    "end": "1769600"
  },
  {
    "text": "thank you for demo i get really enjoyed for this and as you mentioned",
    "start": "1769760",
    "end": "1775600"
  },
  {
    "text": "um just before the demo if you want to reproduce the same",
    "start": "1775600",
    "end": "1781360"
  },
  {
    "text": "mindset you you can clone the repository here and",
    "start": "1781360",
    "end": "1787039"
  },
  {
    "start": "1785000",
    "end": "1890000"
  },
  {
    "text": "we also add a bonus section section just for you and we drop some ideas here such",
    "start": "1787039",
    "end": "1793840"
  },
  {
    "text": "as response engine police engine society and uncle alerts",
    "start": "1793840",
    "end": "1798880"
  },
  {
    "text": "and the idea by using by enabling response engine is that you can take",
    "start": "1798880",
    "end": "1805840"
  },
  {
    "text": "actions against very specific events for example ethnic container drift caused by",
    "start": "1805840",
    "end": "1813120"
  },
  {
    "text": "cubicity electric h or any other interactive kubernetes requests inside",
    "start": "1813120",
    "end": "1819760"
  },
  {
    "text": "the cubanist cluster you can find really good examples on the follicles block",
    "start": "1819760",
    "end": "1825440"
  },
  {
    "text": "with the policy engine you can fine-tune your system by enabling custom",
    "start": "1825440",
    "end": "1832720"
  },
  {
    "text": "specific policies that will prevent the malicious action detected by the run",
    "start": "1832720",
    "end": "1838720"
  },
  {
    "text": "time at the very beginning for example prevent preventing the deploying privilege containers and also",
    "start": "1838720",
    "end": "1847039"
  },
  {
    "text": "you can direct your audit logs to secret operational center so they can analyze",
    "start": "1847039",
    "end": "1853520"
  },
  {
    "text": "and monitor and also take an action for the against event all the time",
    "start": "1853520",
    "end": "1860080"
  },
  {
    "text": "and furthermore you can also define specific alerts for emergency call",
    "start": "1860080",
    "end": "1865919"
  },
  {
    "text": "for example getting a secret or reading a secret in the production services such",
    "start": "1865919",
    "end": "1872480"
  },
  {
    "text": "as payment api would be an emergency",
    "start": "1872480",
    "end": "1877679"
  },
  {
    "text": "art and the list can cause likes on this",
    "start": "1877679",
    "end": "1884159"
  },
  {
    "text": "and thank you for joining and listening us in the session thank you for your time",
    "start": "1884159",
    "end": "1892240"
  }
]