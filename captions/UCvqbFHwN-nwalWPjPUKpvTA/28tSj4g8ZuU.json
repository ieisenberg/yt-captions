[
  {
    "start": "0",
    "end": "13000"
  },
  {
    "text": "so first what is observability and why are we talking about it um",
    "start": "4799",
    "end": "10000"
  },
  {
    "text": "let's start with a little bit of level setting so systems have functional requirements you",
    "start": "10000",
    "end": "16400"
  },
  {
    "start": "13000",
    "end": "13000"
  },
  {
    "text": "know cars software applications uh functional requirement is specifying what a system",
    "start": "16400",
    "end": "22880"
  },
  {
    "text": "is supposed to do right so a car for example transports people from one location to another",
    "start": "22880",
    "end": "30720"
  },
  {
    "text": "systems also have non-functional requirements uh that specify how the system is supposed to be or defining it",
    "start": "30720",
    "end": "37760"
  },
  {
    "text": "in other words defining its qualities so comfort uh or safety uh specifically for",
    "start": "37760",
    "end": "44960"
  },
  {
    "text": "this example that this protecting the options from harm during transport is one of the qualities that you want from",
    "start": "44960",
    "end": "51360"
  },
  {
    "text": "a car and these are just one of the many",
    "start": "51360",
    "end": "56960"
  },
  {
    "text": "abilities of the modern software and engineering uh applications these days",
    "start": "56960",
    "end": "62320"
  },
  {
    "text": "there's usability scalability testability uh you know readability maintainability",
    "start": "62320",
    "end": "68080"
  },
  {
    "text": "availability all of these abilities and",
    "start": "68080",
    "end": "73439"
  },
  {
    "text": "observability is just now one of these abilities right and applications different applications have",
    "start": "73439",
    "end": "80000"
  },
  {
    "text": "different scales for how how much of that quality",
    "start": "80000",
    "end": "85280"
  },
  {
    "text": "needs to be present in that application for example maybe the blue app needs to",
    "start": "85280",
    "end": "90799"
  },
  {
    "text": "have a scalability uh twice as much of a green app on",
    "start": "90799",
    "end": "96000"
  },
  {
    "text": "this example vern of robles the the cto of aws",
    "start": "96000",
    "end": "103439"
  },
  {
    "text": "actually explained observability really well in one of his uh keynotes for reinvent in uh late 2020 so i'll i'll",
    "start": "103439",
    "end": "111680"
  },
  {
    "text": "play his video and kind of let him describe observability",
    "start": "111680",
    "end": "117320"
  },
  {
    "text": "when we talked about the history of dependability i mentioned systems theory a related field of that",
    "start": "129920",
    "end": "137040"
  },
  {
    "text": "is systems control theory it has been crucial in building many",
    "start": "137040",
    "end": "142480"
  },
  {
    "text": "dependable industrial and other systems the most important pioneer in this field",
    "start": "142480",
    "end": "148879"
  },
  {
    "text": "was professor rudolf kalman in 1960 he defined concepts such as",
    "start": "148879",
    "end": "154879"
  },
  {
    "text": "whether a system was controllable and observable",
    "start": "154879",
    "end": "161760"
  },
  {
    "text": "or actually inaudible to be observable is something we know as software",
    "start": "161760",
    "end": "167599"
  },
  {
    "text": "engineers all too well how can we infer the internal state of a system",
    "start": "167599",
    "end": "175040"
  },
  {
    "text": "from its outputs this can be functional outputs like",
    "start": "175040",
    "end": "180159"
  },
  {
    "text": "voltage and amperage of the turbines or non-functional output like the",
    "start": "180159",
    "end": "186080"
  },
  {
    "text": "turbine temperature sensors or rotation speed measurements",
    "start": "186080",
    "end": "191680"
  },
  {
    "text": "and this is what we try to achieve with the observability property of a",
    "start": "191680",
    "end": "196959"
  },
  {
    "text": "dependable system how can we infer the internal state of",
    "start": "196959",
    "end": "202640"
  },
  {
    "text": "our digital systems from its outputs which can include both functional",
    "start": "202640",
    "end": "208319"
  },
  {
    "text": "requires from api calls for example or request to other parts of the system",
    "start": "208319",
    "end": "214400"
  },
  {
    "text": "from non-functional information that we collect through other means",
    "start": "214400",
    "end": "220560"
  },
  {
    "text": "so inferring the operational state of a system based on its outputs",
    "start": "222080",
    "end": "229760"
  },
  {
    "text": "you've got your inputs and your system which is opaque and then you have outputs which you can see measure and",
    "start": "230080",
    "end": "236480"
  },
  {
    "text": "analyze and observability has a quality scale itself right so just like uh scalability",
    "start": "236480",
    "end": "244159"
  },
  {
    "start": "238000",
    "end": "238000"
  },
  {
    "text": "or maintainability there's on on one end it can be you know your your outputs leave the system still completely opaque",
    "start": "244159",
    "end": "250879"
  },
  {
    "text": "you can't see into it or on the other hand you have excellent observability and you your outputs uh render the",
    "start": "250879",
    "end": "258160"
  },
  {
    "text": "system completely transparent you can see everything that's going on within your application in your system",
    "start": "258160",
    "end": "265199"
  },
  {
    "text": "so to kind of uh to illustrate this we're going to time travel back to the to the early",
    "start": "266080",
    "end": "272720"
  },
  {
    "text": "2000s uh with a very very simple php app uh maybe this php app just took an image",
    "start": "272720",
    "end": "279919"
  },
  {
    "text": "uh extracted uh urls or metadata from the image and um outputted a simple page",
    "start": "279919",
    "end": "287919"
  },
  {
    "text": "that allowed you to see those metadata and attributes of that image",
    "start": "287919",
    "end": "293120"
  },
  {
    "text": "well if you have if you had you know things like just server monitoring your cpu and memory of",
    "start": "293520",
    "end": "299199"
  },
  {
    "text": "your application of the host of where your application was running and then maybe you added a little bit of the apache server application logs to see",
    "start": "299199",
    "end": "306080"
  },
  {
    "text": "the amount of traffic or the requests per second and the amount of errors um you're",
    "start": "306080",
    "end": "312800"
  },
  {
    "text": "actually maybe doing pretty well for this simple simple php app you know your observability quality scale might be",
    "start": "312800",
    "end": "319440"
  },
  {
    "text": "toward the higher end for something this simple why is because well this is a very simple",
    "start": "319440",
    "end": "326560"
  },
  {
    "text": "simple application and early on you know 15 10 years ago there",
    "start": "326560",
    "end": "332160"
  },
  {
    "text": "was mostly identical years of experience through the entire application stack so all of your visitors essentially could",
    "start": "332160",
    "end": "338639"
  },
  {
    "text": "be thought of of you know the the same uh the same kind of experience you know",
    "start": "338639",
    "end": "344000"
  },
  {
    "text": "there's no individual in application experience that was different from one visitor to another",
    "start": "344000",
    "end": "352160"
  },
  {
    "text": "and if you threw in a little bit of testing acro above and beyond this uh simple server and maybe apache log",
    "start": "352160",
    "end": "358720"
  },
  {
    "text": "monitoring you're actually doing pretty well and you're seeing you know a very well",
    "start": "358720",
    "end": "364319"
  },
  {
    "text": "um or very very high coverage of your stack it's because there were limited pathways to kind of interact with your",
    "start": "364319",
    "end": "370639"
  },
  {
    "text": "application traditional monitoring is very low",
    "start": "370639",
    "end": "377039"
  },
  {
    "text": "dimensional we treated all of these experiences is the same you know we could measure um",
    "start": "377039",
    "end": "383280"
  },
  {
    "text": "and it lacked the contextual differences that separate the one app experience from another",
    "start": "383280",
    "end": "389840"
  },
  {
    "start": "390000",
    "end": "390000"
  },
  {
    "text": "and now let's talk about why monitoring is not observability uh again with uh",
    "start": "390400",
    "end": "395440"
  },
  {
    "text": "verner verbals the cto of aws classical monitoring deals with two",
    "start": "395440",
    "end": "401440"
  },
  {
    "text": "questions what is broken and why is it broken",
    "start": "401440",
    "end": "408160"
  },
  {
    "text": "uses a predefined set of metrics and logs to determine normal values in general with monitoring and alarming",
    "start": "408160",
    "end": "416000"
  },
  {
    "text": "you can't predict when things are fail you can only take action when they do",
    "start": "416000",
    "end": "423360"
  },
  {
    "text": "it is why we used to call people who multiple systems operators and not",
    "start": "423360",
    "end": "428720"
  },
  {
    "text": "engineers the generators here at sugar city are extremely complex",
    "start": "428720",
    "end": "436560"
  },
  {
    "text": "it is only likely that the operator of the dashboard knew how to repair it",
    "start": "436560",
    "end": "442240"
  },
  {
    "text": "when something went wrong but they did know when the sounding alarm and gauges moved to where they",
    "start": "442240",
    "end": "449599"
  },
  {
    "text": "were supposed to go as systems continue to increase in complexity it is impossible",
    "start": "449599",
    "end": "457120"
  },
  {
    "text": "to put every important metric for that system on a single dashboard every user watches",
    "start": "457120",
    "end": "463440"
  },
  {
    "text": "think about everything that goes into a modern application there are metrics for the service",
    "start": "463440",
    "end": "468479"
  },
  {
    "text": "containers and functions that you're managing your application has counters and mods for all the work it's doing",
    "start": "468479",
    "end": "474720"
  },
  {
    "text": "you may have anywhere from thousands to millions of customers",
    "start": "474720",
    "end": "479759"
  },
  {
    "text": "all which have data about what they're doing and how they interact with your application",
    "start": "479759",
    "end": "485599"
  },
  {
    "text": "it is impossible to put all of this on a dashboard for the human watchers to",
    "start": "485599",
    "end": "491680"
  },
  {
    "text": "define alerts for each of these metrics to tell you when they're going on spec",
    "start": "491680",
    "end": "499440"
  },
  {
    "text": "at amazon we've been on a 25-year journey to improve the processes of",
    "start": "499840",
    "end": "505199"
  },
  {
    "text": "managing our systems and we've long left the notion that this monitoring was sufficient to manage our",
    "start": "505199",
    "end": "511680"
  },
  {
    "text": "systems we've embarked on a holistic approach to operations",
    "start": "511680",
    "end": "517599"
  },
  {
    "text": "from collecting massive amounts of data and logs to how we analyze them to how we solve",
    "start": "517599",
    "end": "525120"
  },
  {
    "text": "and talk about problems that we do have and this is what observability is all",
    "start": "525120",
    "end": "530640"
  },
  {
    "text": "about how can you make sure we have the data the tools and the mechanisms",
    "start": "530640",
    "end": "537839"
  },
  {
    "text": "to quickly resolve problems in a fundamental way how can we",
    "start": "537839",
    "end": "543279"
  },
  {
    "text": "without reaching into the system in the first internal state",
    "start": "543279",
    "end": "549200"
  },
  {
    "text": "for the data that we have and amazon our most important drivers",
    "start": "549200",
    "end": "554640"
  },
  {
    "text": "have always been customer-centric find and resolve problems before they",
    "start": "554640",
    "end": "561279"
  },
  {
    "text": "impact customers understand the impact of your customers when you couldn't prevent it",
    "start": "561279",
    "end": "568399"
  },
  {
    "text": "and fix the problem so that it never happens",
    "start": "568399",
    "end": "573760"
  },
  {
    "text": "again so he made a really important point uh",
    "start": "573760",
    "end": "579120"
  },
  {
    "text": "here is you know monitoring is not observability and with the most complex apps these days or with the the",
    "start": "579120",
    "end": "585839"
  },
  {
    "text": "applications these days growing more and more complex more services interoperability more",
    "start": "585839",
    "end": "593279"
  },
  {
    "text": "individual user unique interactions with an application you can no longer fit your monitoring",
    "start": "593279",
    "end": "601920"
  },
  {
    "text": "and the the amount of data that you need for observability",
    "start": "601920",
    "end": "607040"
  },
  {
    "text": "on dashboards systems evolve from simple to complex",
    "start": "607040",
    "end": "613440"
  },
  {
    "start": "610000",
    "end": "610000"
  },
  {
    "text": "this is true for applications today it's also true for you know telephone think",
    "start": "613440",
    "end": "618959"
  },
  {
    "text": "about the 1900s candlestick telephone right it had different requirements and",
    "start": "618959",
    "end": "624560"
  },
  {
    "text": "different um complexities than say the modern smartphone of the 2020s right",
    "start": "624560",
    "end": "631279"
  },
  {
    "text": "different usability scalability all of the leds were different through these generations of telephone evolution",
    "start": "631279",
    "end": "640560"
  },
  {
    "text": "it's true for automobiles and for software you know you can't imagine",
    "start": "640959",
    "end": "646959"
  },
  {
    "text": "these these software facebook or google calendar or twitter existing today as they were you know 15",
    "start": "646959",
    "end": "654800"
  },
  {
    "text": "10 uh even less years ago uh you know with the amount of features and",
    "start": "654800",
    "end": "661120"
  },
  {
    "text": "interactivity and infinite stroke scrolling um ai applied to",
    "start": "661120",
    "end": "666800"
  },
  {
    "text": "feeds all of these different things that make these applications just more and more complex",
    "start": "666800",
    "end": "674440"
  },
  {
    "start": "674000",
    "end": "674000"
  },
  {
    "text": "and complexly like entropy just increases right it's true for phones true for",
    "start": "676000",
    "end": "681600"
  },
  {
    "text": "applications so monitoring is actually now you know a",
    "start": "681600",
    "end": "687519"
  },
  {
    "start": "684000",
    "end": "684000"
  },
  {
    "text": "subset of observability in that modern or in that uh early",
    "start": "687519",
    "end": "693120"
  },
  {
    "text": "candlestick telephone uh with your traditional say basic monitoring of that",
    "start": "693120",
    "end": "698480"
  },
  {
    "text": "system you might actually have been doing pretty well with your you know observability um",
    "start": "698480",
    "end": "704480"
  },
  {
    "text": "as as we talked about it today of what it encompasses to make sure that you can observe all of the performance qualities",
    "start": "704480",
    "end": "710560"
  },
  {
    "text": "of that system but that's just not true today not true of uh the smartphones and",
    "start": "710560",
    "end": "716560"
  },
  {
    "text": "not true for for applications with traditional monitoring",
    "start": "716560",
    "end": "721600"
  },
  {
    "text": "again using the example the thp app from the early 2000s you know with our uh",
    "start": "724480",
    "end": "729839"
  },
  {
    "text": "server cpu memory and then apache logs it might have been pretty excellent back then",
    "start": "729839",
    "end": "735519"
  },
  {
    "text": "um those those limited amount of metrics and um",
    "start": "735519",
    "end": "740800"
  },
  {
    "text": "uh throughput metrics in server metrics don't cover your observability needs for",
    "start": "740800",
    "end": "746959"
  },
  {
    "text": "a modern application today",
    "start": "746959",
    "end": "750480"
  },
  {
    "text": "so everybody visiting your php app you know 15 10 years ago",
    "start": "752720",
    "end": "758079"
  },
  {
    "text": "never really was the same user experience but it was often a reasonable approximation",
    "start": "758079",
    "end": "764240"
  },
  {
    "text": "now it's just not reasonable at all modern apps are just much richer offer a wider",
    "start": "764240",
    "end": "769680"
  },
  {
    "text": "variety of user experiences it's it's different for essentially everybody",
    "start": "769680",
    "end": "774720"
  },
  {
    "text": "using uh applications these days once you log in or start interacting a personal account on these modern",
    "start": "774720",
    "end": "781360"
  },
  {
    "text": "applications there are so many different ways that the application can behave or",
    "start": "781360",
    "end": "787279"
  },
  {
    "text": "respond or execute different things and call various",
    "start": "787279",
    "end": "792800"
  },
  {
    "text": "apis or external services that are just totally unique uh for each individual's",
    "start": "792800",
    "end": "800160"
  },
  {
    "text": "situation within these modern applications",
    "start": "800160",
    "end": "804320"
  },
  {
    "start": "805000",
    "end": "805000"
  },
  {
    "text": "and so monitoring really is the tip of the observability iceberg right traditional monitoring",
    "start": "806399",
    "end": "811760"
  },
  {
    "text": "is low dimensional and low cardinality uh things like aggregated metrics or",
    "start": "811760",
    "end": "818560"
  },
  {
    "text": "summary statistics are the things that we used for monitoring uh up until",
    "start": "818560",
    "end": "823600"
  },
  {
    "text": "recently and that sits just on a huge iceberg of",
    "start": "823600",
    "end": "828959"
  },
  {
    "text": "contextual data high dimensional high cardinality data that you need in order",
    "start": "828959",
    "end": "834079"
  },
  {
    "text": "to achieve true observability",
    "start": "834079",
    "end": "838079"
  },
  {
    "text": "for example another a request latency histogram",
    "start": "839440",
    "end": "844800"
  },
  {
    "text": "uh showing two two peaks one around the uh one second mark and then another",
    "start": "844800",
    "end": "849839"
  },
  {
    "text": "around the say a seven or eight second mark so so two peaks along this and you",
    "start": "849839",
    "end": "855680"
  },
  {
    "text": "you kind of get that distribution of this aggregated metric for the request",
    "start": "855680",
    "end": "860880"
  },
  {
    "text": "latency histogram well if you add some contextual data to that and you attach these tags for this",
    "start": "860880",
    "end": "868560"
  },
  {
    "text": "metrics that we can break it out and get extra dimensions based on whether",
    "start": "868560",
    "end": "873680"
  },
  {
    "text": "it's a desktop or mobile or whether the location is uh in a certain city if you",
    "start": "873680",
    "end": "879839"
  },
  {
    "text": "attach that geographical and platform information now you can break",
    "start": "879839",
    "end": "885360"
  },
  {
    "text": "this out and start to see what the composition of that overall chart was",
    "start": "885360",
    "end": "892240"
  },
  {
    "text": "and we can see that if we actually go down through the desktop and then down lower to the bottom charts of lowe's",
    "start": "892240",
    "end": "898079"
  },
  {
    "text": "matrix we can see that that second uh that second peak actually matches the new york city and boston and dc area",
    "start": "898079",
    "end": "905600"
  },
  {
    "text": "for desktop users so we know that that's likely the uh problem area for this latency",
    "start": "905600",
    "end": "911279"
  },
  {
    "text": "histogram on the higher end the good thing is",
    "start": "911279",
    "end": "917519"
  },
  {
    "text": "you know with with um modern monitoring we are starting to bubble these up right we're starting to bubble a little bit of",
    "start": "917519",
    "end": "924079"
  },
  {
    "text": "this contextual data up so it can be a bit more give you a bit more automatic insight",
    "start": "924079",
    "end": "929759"
  },
  {
    "text": "into kind of what those metrics may be",
    "start": "929759",
    "end": "934639"
  },
  {
    "text": "that's just a few dimensions so um you know people have been kind of taking the approach of well",
    "start": "935600",
    "end": "941199"
  },
  {
    "text": "we can handle that we can just add this contextual data to our to our metrics and um we'll",
    "start": "941199",
    "end": "948160"
  },
  {
    "text": "we'll just make more dashboards and put those more on more dashboards and let's just add more monitoring for these",
    "start": "948160",
    "end": "953360"
  },
  {
    "text": "dimensions right and that's just more that's just more monitoring that's just more dashboards",
    "start": "953360",
    "end": "960320"
  },
  {
    "start": "955000",
    "end": "955000"
  },
  {
    "text": "right you're going to have a problem of you're going to have just more and more dashboards growing uh as you add more",
    "start": "960320",
    "end": "967120"
  },
  {
    "text": "context and it's just as verner said it's impossible to observe your systems",
    "start": "967120",
    "end": "972639"
  },
  {
    "text": "using the monitoring metrics and dashboards that we've used up to this",
    "start": "972639",
    "end": "978079"
  },
  {
    "text": "point so how do we achieve the",
    "start": "978079",
    "end": "984560"
  },
  {
    "text": "excellent side of observability making our systems and",
    "start": "984560",
    "end": "989600"
  },
  {
    "text": "applications as transparent as possible",
    "start": "989600",
    "end": "994240"
  },
  {
    "start": "994000",
    "end": "994000"
  },
  {
    "text": "when you read about observability or the traditional pillars of uh monitoring",
    "start": "995120",
    "end": "1000320"
  },
  {
    "text": "you'll read about uh metrics traces and laws uh we'd like to think of them as uh these these four um",
    "start": "1000320",
    "end": "1010000"
  },
  {
    "text": "different um constituent elements of observability",
    "start": "1010000",
    "end": "1016000"
  },
  {
    "text": "which we we define as logs metrics spans and events",
    "start": "1016000",
    "end": "1021120"
  },
  {
    "text": "logs are your traditional logs but they include the attributes and context identifiers attached to those logs as",
    "start": "1021120",
    "end": "1027438"
  },
  {
    "text": "well so you can correlate the logs um these highly specific debugging tools in",
    "start": "1027439",
    "end": "1033360"
  },
  {
    "text": "your logs to the matrix spans and events that happen elsewhere",
    "start": "1033360",
    "end": "1038558"
  },
  {
    "text": "metrics are your aggregated summary statistics that we're used to in traditional monitoring um but including",
    "start": "1038559",
    "end": "1045600"
  },
  {
    "text": "the attributes and context identifiers again these are the things that are going to sew and thread the logs and",
    "start": "1045600",
    "end": "1051679"
  },
  {
    "text": "metrics and spans and events all together to kind of compose your observability system",
    "start": "1051679",
    "end": "1057360"
  },
  {
    "text": "uh spans are time span tag locations within services their code or your stack",
    "start": "1057360",
    "end": "1063280"
  },
  {
    "text": "to allow you to know at what point in time you were or the request was uh when",
    "start": "1063280",
    "end": "1068720"
  },
  {
    "text": "that specific uh period of time happened",
    "start": "1068720",
    "end": "1073919"
  },
  {
    "text": "and then uh events are the the discrete individual events at a point in time uh",
    "start": "1073919",
    "end": "1080400"
  },
  {
    "text": "that that were encountered within a time span again with just as many attributes and context identifiers as we can attach",
    "start": "1080400",
    "end": "1087039"
  },
  {
    "text": "to these um the kind of analogy here is these constituent elements of logs",
    "start": "1087039",
    "end": "1093679"
  },
  {
    "text": "metrics spans and events aren't necessarily um [Music]",
    "start": "1093679",
    "end": "1098880"
  },
  {
    "text": "super interesting by themselves or useful by themselves but together they compose",
    "start": "1098880",
    "end": "1106240"
  },
  {
    "text": "the um elements and molecules and eventually the planets and universe",
    "start": "1106240",
    "end": "1111760"
  },
  {
    "text": "that exist so these are the constituent elements of observability",
    "start": "1111760",
    "end": "1116799"
  },
  {
    "text": "and the context and attributes are the key to observability",
    "start": "1116799",
    "end": "1123840"
  },
  {
    "text": "so an extremely simplified example of what observability may be within the context",
    "start": "1125840",
    "end": "1132559"
  },
  {
    "text": "of application performance tracing so let's say a user triggers an action",
    "start": "1132559",
    "end": "1138559"
  },
  {
    "start": "1136000",
    "end": "1136000"
  },
  {
    "text": "on the front end of your application you'll start a trace or a span here that's",
    "start": "1138559",
    "end": "1144480"
  },
  {
    "text": "automatically generated from your observability instrumentation and you can attach these identifiers to",
    "start": "1144480",
    "end": "1151600"
  },
  {
    "text": "this contextual um information to this trace so that we can identify",
    "start": "1151600",
    "end": "1157120"
  },
  {
    "text": "maybe the front-end uh version or the page route that that's that this user took even the the user metadata like their id",
    "start": "1157120",
    "end": "1164320"
  },
  {
    "text": "or their the product plan that they're on which device they're using the location are they in chicago are they in",
    "start": "1164320",
    "end": "1170400"
  },
  {
    "text": "boston are they in dc where where are they located and that frontline call them makes the",
    "start": "1170400",
    "end": "1177360"
  },
  {
    "text": "back-end call on your uh servers hosted on your your infrastructure and you can attach back-end metadata to that so uh",
    "start": "1177360",
    "end": "1184400"
  },
  {
    "text": "which endpoint it was hit which post it was which container id which uh kubernetes cluster things like that",
    "start": "1184400",
    "end": "1192000"
  },
  {
    "start": "1191000",
    "end": "1191000"
  },
  {
    "text": "and that back end api call makes a database call right and then we can create a metrics off of that we can",
    "start": "1192000",
    "end": "1197120"
  },
  {
    "text": "maybe say okay we want to count how many times this database call was actually made and service that as a summary",
    "start": "1197120",
    "end": "1203360"
  },
  {
    "text": "statistic later on and then that database query is eventually executed on on the uh the",
    "start": "1203360",
    "end": "1210880"
  },
  {
    "start": "1206000",
    "end": "1206000"
  },
  {
    "text": "database uh over the database connection and we can tell when the connection was actually established and make that a",
    "start": "1210880",
    "end": "1217679"
  },
  {
    "text": "point in time events if that database query returns we can",
    "start": "1217679",
    "end": "1223120"
  },
  {
    "text": "then log that as with specific database call information",
    "start": "1223120",
    "end": "1228480"
  },
  {
    "text": "we could log different different information about that database call depending on the time it",
    "start": "1228480",
    "end": "1234480"
  },
  {
    "text": "took and things like this so now we've made a metric counter metric an event in the log",
    "start": "1234480",
    "end": "1240880"
  },
  {
    "start": "1240000",
    "end": "1240000"
  },
  {
    "text": "and maybe we make an external service call this could be a api call between your microservices",
    "start": "1240880",
    "end": "1246720"
  },
  {
    "text": "within your individual uh infrastructure or it could be you know a third party hosted um",
    "start": "1246720",
    "end": "1252799"
  },
  {
    "text": "uh api call from any of the increasingly uh sas or um",
    "start": "1252799",
    "end": "1259440"
  },
  {
    "text": "third party vendor hosted service that makes the api endpoints exposed for",
    "start": "1259440",
    "end": "1265360"
  },
  {
    "text": "services that are critical for your application to to execute",
    "start": "1265360",
    "end": "1270480"
  },
  {
    "text": "so that external service execution returns so we can log that as well we've made the response and we send",
    "start": "1270960",
    "end": "1277520"
  },
  {
    "text": "that back to the back end and that goes back to the front end but maybe the front end front-end action",
    "start": "1277520",
    "end": "1283840"
  },
  {
    "text": "is not completely done yet and it needs to make another back-end call right so we've still got that top-level front-end",
    "start": "1283840",
    "end": "1289919"
  },
  {
    "text": "action with the identifier the action identifier that is actually attached to all of these",
    "start": "1289919",
    "end": "1295760"
  },
  {
    "text": "other calls the first back-end api call the the next database call the database query the external services",
    "start": "1295760",
    "end": "1302559"
  },
  {
    "text": "and in addition now we're making a second backing call page maybe to load a",
    "start": "1302559",
    "end": "1307840"
  },
  {
    "text": "paginated um list of of data on your application",
    "start": "1307840",
    "end": "1313919"
  },
  {
    "text": "and again we make a database query we we record the connections established there and that returns the uh amount of um",
    "start": "1313919",
    "end": "1322080"
  },
  {
    "text": "items and we make a count uh metric out of that as well",
    "start": "1322080",
    "end": "1327120"
  },
  {
    "text": "and then maybe it loads uh preloads maybe the second page of paginated results and we can thread all of this",
    "start": "1327120",
    "end": "1334320"
  },
  {
    "text": "through and connect all of these different uh events back to that single triggered",
    "start": "1334320",
    "end": "1340960"
  },
  {
    "text": "front-end action so very highly contextual",
    "start": "1340960",
    "end": "1346159"
  },
  {
    "text": "and correlated now distributed tracing in this in this instance",
    "start": "1346159",
    "end": "1353440"
  },
  {
    "text": "and then we can log the action outcome metadata on that as well",
    "start": "1353520",
    "end": "1358640"
  },
  {
    "start": "1358000",
    "end": "1358000"
  },
  {
    "text": "so you can see that context connects everything and the the more context the more",
    "start": "1358640",
    "end": "1365919"
  },
  {
    "text": "data we can attach to these events and these uh traces these logs and these metrics",
    "start": "1365919",
    "end": "1371360"
  },
  {
    "text": "allows us to correlate all of this information together and allows us to search in",
    "start": "1371360",
    "end": "1377600"
  },
  {
    "text": "surface insights about all of these related events",
    "start": "1377600",
    "end": "1382799"
  },
  {
    "text": "and until recently you could do this to an extent either buy it from a vendor a large vendor",
    "start": "1384240",
    "end": "1390320"
  },
  {
    "text": "typically and or you could try to build it yourself and a lot of it from scratch it was expensive either way",
    "start": "1390320",
    "end": "1397919"
  },
  {
    "start": "1398000",
    "end": "1398000"
  },
  {
    "text": "so there's two there's two key trends changing that uh the first one is cost effective and",
    "start": "1398400",
    "end": "1403520"
  },
  {
    "text": "performing data storage and compute resources for high cardinality big data",
    "start": "1403520",
    "end": "1408880"
  },
  {
    "text": "the second one is open source observability apis and sdks and tooling",
    "start": "1408880",
    "end": "1414000"
  },
  {
    "text": "implemented collectively collectively with broad support from the community and vendors",
    "start": "1414000",
    "end": "1419520"
  },
  {
    "text": "so we'll talk about the second one first open telemetry is a fairly new project",
    "start": "1419520",
    "end": "1425200"
  },
  {
    "start": "1422000",
    "end": "1422000"
  },
  {
    "text": "it's been getting a ton of vendor support and community support and is emerging as a new lingua franca of of",
    "start": "1425200",
    "end": "1432320"
  },
  {
    "text": "observability open telemetry defines a cross-language specification for how",
    "start": "1432320",
    "end": "1438400"
  },
  {
    "text": "apis and the sdks responsible for collecting and configuring um",
    "start": "1438400",
    "end": "1444559"
  },
  {
    "text": "the uh telemetry and instrumentation of languages and frameworks and libraries",
    "start": "1444559",
    "end": "1450080"
  },
  {
    "text": "should be done uh it allows the standards to be applied",
    "start": "1450080",
    "end": "1456320"
  },
  {
    "text": "in a standard fashion across all the major languages that then have",
    "start": "1456320",
    "end": "1461760"
  },
  {
    "text": "their own libraries written to adhere to these specs the api and sdk",
    "start": "1461760",
    "end": "1467520"
  },
  {
    "text": "libraries are written in the native language of these uh",
    "start": "1467520",
    "end": "1472720"
  },
  {
    "text": "programming languages that implement the specification the same way",
    "start": "1472720",
    "end": "1478000"
  },
  {
    "text": "so that we have cross-functional cross-language apis and sdks that all handle the data",
    "start": "1478000",
    "end": "1484240"
  },
  {
    "text": "in a standard way and then there's the open telemetry collection and agnostic export formats",
    "start": "1484240",
    "end": "1491440"
  },
  {
    "text": "that allow these languages in the apis and sdks to send that data to a",
    "start": "1491440",
    "end": "1496880"
  },
  {
    "text": "collector and further send that data on to multiple backends whether it be",
    "start": "1496880",
    "end": "1503039"
  },
  {
    "text": "your your own destination uh your open source tools zipkin or jager",
    "start": "1503039",
    "end": "1509360"
  },
  {
    "text": "and additionally to third parties like scout",
    "start": "1509360",
    "end": "1514679"
  },
  {
    "text": "so scout application performance observability as we're evolving into uh is built on uh",
    "start": "1515360",
    "end": "1522880"
  },
  {
    "text": "open telemetry and some facts about open telemetry the top active cloud it's the now the top active",
    "start": "1522880",
    "end": "1529760"
  },
  {
    "text": "cloud uh native computing federation project behind only kubernetes it's backed by over 130 companies",
    "start": "1529760",
    "end": "1536159"
  },
  {
    "text": "including the big ones like aws google microsoft facebook splunk and scout it's",
    "start": "1536159",
    "end": "1542400"
  },
  {
    "text": "integrated directly into open source projects and cloud native stacks instead of injected into them",
    "start": "1542400",
    "end": "1548240"
  },
  {
    "text": "and it's simple to use with extensive ability to customize instrumentation specific to your environment",
    "start": "1548240",
    "end": "1555360"
  },
  {
    "start": "1555000",
    "end": "1555000"
  },
  {
    "text": "and so that's great right so now that there's this vendor agnostic and kind of standard um",
    "start": "1555679",
    "end": "1562720"
  },
  {
    "text": "way to apply this uh telemetry and he's using these apis that are that are defined through the",
    "start": "1562720",
    "end": "1568480"
  },
  {
    "text": "open file machine specification and available for uh open source libraries and packages and framework",
    "start": "1568480",
    "end": "1575120"
  },
  {
    "text": "maintainers um there used to be this wall in between observability instrumentation like scout",
    "start": "1575120",
    "end": "1581360"
  },
  {
    "text": "would would write itself and apply as an outside-in patch to these libraries and",
    "start": "1581360",
    "end": "1586559"
  },
  {
    "text": "frameworks in order to gather telemetry data um we're kind of breaking down that wall",
    "start": "1586559",
    "end": "1592640"
  },
  {
    "text": "and the the package maintainers they would have never we could have never approached a package maintainer like",
    "start": "1592640",
    "end": "1598640"
  },
  {
    "text": "rails and say hey rails we want to put um scout apms observability instrumentation into the rails framework",
    "start": "1598640",
    "end": "1606159"
  },
  {
    "text": "and committed to upstream to the rails project there's no way that they would have applied that vendor-specific",
    "start": "1606159",
    "end": "1612000"
  },
  {
    "text": "telemetry into the rails project but now bringing down this kind of wall in",
    "start": "1612000",
    "end": "1617440"
  },
  {
    "text": "between those with the vendor agnostic apis and",
    "start": "1617440",
    "end": "1623279"
  },
  {
    "text": "specifications it's now more acceptable in uh more",
    "start": "1623360",
    "end": "1629120"
  },
  {
    "text": "libraries and packages and frameworks should be more um willing to incorporate this",
    "start": "1629120",
    "end": "1635440"
  },
  {
    "text": "open telemetry uh into their libraries and frameworks so that's built natively",
    "start": "1635440",
    "end": "1641120"
  },
  {
    "text": "into these libraries and frameworks instead of injected by vendors after the fact",
    "start": "1641120",
    "end": "1648000"
  },
  {
    "start": "1648000",
    "end": "1648000"
  },
  {
    "text": "so let's talk a little bit about the components of open telemetry there's the specification which defines",
    "start": "1649039",
    "end": "1655039"
  },
  {
    "text": "um kind of how things should be laid out it makes the standards of what we're talking about and naming and operations",
    "start": "1655039",
    "end": "1662320"
  },
  {
    "text": "and then there's the api which is the application program interface that library maintainers and framework",
    "start": "1662320",
    "end": "1669600"
  },
  {
    "text": "containers will use and then there's sdks which are meant to be used by the end user or",
    "start": "1669600",
    "end": "1676559"
  },
  {
    "text": "within your end application [Music] in order to configure and use uh",
    "start": "1676559",
    "end": "1682880"
  },
  {
    "text": "opensupplement within your application and then there's also the collector which is a way a means of collecting",
    "start": "1682880",
    "end": "1689039"
  },
  {
    "text": "this this uh data sent from these sdks uh to the collector uh as kind of a",
    "start": "1689039",
    "end": "1696559"
  },
  {
    "text": "proxy of either further aggregation or processing of this open",
    "start": "1696559",
    "end": "1702320"
  },
  {
    "text": "telemetry data and sending it to the back ends the collector though is is optional",
    "start": "1702320",
    "end": "1709279"
  },
  {
    "text": "so the specification the specification actually defines how the apis should behave it defines the standard naming of",
    "start": "1709679",
    "end": "1717200"
  },
  {
    "text": "the stability guarantees the separations of concern the communication protocols and the data formats and the",
    "start": "1717200",
    "end": "1722880"
  },
  {
    "text": "compatibility uh the backwards compatibility uh guarantees that that it",
    "start": "1722880",
    "end": "1727919"
  },
  {
    "text": "makes for the api in the sdk etc semantic conventions are just the way",
    "start": "1727919",
    "end": "1734559"
  },
  {
    "text": "that we name things this could be things like um container id or a",
    "start": "1734559",
    "end": "1740320"
  },
  {
    "text": "cloud region like what do we call it the key value pieces of these where we can",
    "start": "1740320",
    "end": "1746320"
  },
  {
    "text": "find that contextual information in a standard way that we can connect all the logs metrics",
    "start": "1746320",
    "end": "1752000"
  },
  {
    "text": "traces um and our logs metrics spans and events",
    "start": "1752000",
    "end": "1757600"
  },
  {
    "text": "together to kind of weave them into an observability picture",
    "start": "1757600",
    "end": "1763279"
  },
  {
    "text": "sliced and diced through any possible combination that we want to investigate",
    "start": "1763279",
    "end": "1769600"
  },
  {
    "text": "and then otlp is a transport it's called the open telemetry line protocol it's a",
    "start": "1769600",
    "end": "1776320"
  },
  {
    "text": "transport protocol that defines how the communication between the sdk and the",
    "start": "1776320",
    "end": "1782640"
  },
  {
    "text": "collector should behave the api component of the open telemetry",
    "start": "1782640",
    "end": "1791279"
  },
  {
    "text": "project is the purpose is to develop an api library in every major language to be",
    "start": "1791279",
    "end": "1798159"
  },
  {
    "text": "used by library and framework developers in order to add instrumentation natively into the library or framework",
    "start": "1798159",
    "end": "1806000"
  },
  {
    "text": "the library authors won't care if any users are opening open using open telemetry or not they can implement the",
    "start": "1806000",
    "end": "1812000"
  },
  {
    "text": "api and collect um or put the hooks in to collect the telemetry information",
    "start": "1812000",
    "end": "1817840"
  },
  {
    "text": "using the api um and if the end user is not actually collecting the open telemetry data from",
    "start": "1817840",
    "end": "1825200"
  },
  {
    "text": "this library or framework it will not have any overhead and they won't need to distribute a instrumented version of",
    "start": "1825200",
    "end": "1831279"
  },
  {
    "text": "their library or framework in a non-instrumented version of the library framework this is completely transparent",
    "start": "1831279",
    "end": "1838080"
  },
  {
    "text": "whether you're using or not using or not collecting the open telemetry data from this library or framework",
    "start": "1838080",
    "end": "1845919"
  },
  {
    "text": "and it's zero overhead if the user does not email open telemetry uh in their application and it provides very strict",
    "start": "1845919",
    "end": "1852720"
  },
  {
    "text": "stability guarantees so the library authors and framework authors",
    "start": "1852720",
    "end": "1858799"
  },
  {
    "text": "they won't need to be concerned about well is this api going to be changing is it going to break things it provides a very very stable and",
    "start": "1858799",
    "end": "1866000"
  },
  {
    "text": "strict guarantee to these library and framework authors to kind of ease their concerns about",
    "start": "1866000",
    "end": "1871919"
  },
  {
    "text": "affecting their library or framework",
    "start": "1871919",
    "end": "1876799"
  },
  {
    "text": "the sda the sdk piece was intentionally um decoupled from the api piece so",
    "start": "1877600",
    "end": "1883039"
  },
  {
    "text": "they're separate packages on every single language and the purpose is to make sure that the api is super stable and the sdk can",
    "start": "1883039",
    "end": "1890240"
  },
  {
    "text": "evolve and change in a quicker fashion as needed",
    "start": "1890240",
    "end": "1898000"
  },
  {
    "text": "where it's user facing interfaces so",
    "start": "1898000",
    "end": "1903200"
  },
  {
    "text": "every major language this is intended to be used by the end users in your applications that then serve your users",
    "start": "1903200",
    "end": "1909760"
  },
  {
    "text": "right and you can enable the open telemetry data collection using the sdk um and",
    "start": "1909760",
    "end": "1916080"
  },
  {
    "text": "start consuming the open telemetry data emitted from any of the",
    "start": "1916080",
    "end": "1921120"
  },
  {
    "text": "libraries that you use you use the sdk to set configuration options for what gets collected",
    "start": "1921120",
    "end": "1927519"
  },
  {
    "text": "what processing is applied after the collection and where the metrics are sent",
    "start": "1927519",
    "end": "1932640"
  },
  {
    "text": "and i just just discussed that it was intentionally decoupled from the api for stability guarantees and dependency flexibility",
    "start": "1932640",
    "end": "1938960"
  },
  {
    "text": "and all languages with an open telemetry sdk can send data via otlp natively so",
    "start": "1938960",
    "end": "1944320"
  },
  {
    "text": "that's an important part um if you're using open telemetry within your application and you set the sdk up to",
    "start": "1944320",
    "end": "1951279"
  },
  {
    "text": "gather this open telemetry data you don't need the collector piece uh the separate collector binary piece",
    "start": "1951279",
    "end": "1959120"
  },
  {
    "text": "of open telemetry in order to send this data somewhere so that makes this collector",
    "start": "1959120",
    "end": "1965679"
  },
  {
    "text": "portion of open telemetry optional but the open telemetry collector is an application written in go that receives",
    "start": "1965679",
    "end": "1972320"
  },
  {
    "text": "open file magic data from end user applications and it can use plugable modules to",
    "start": "1972320",
    "end": "1979279"
  },
  {
    "text": "further process the payloads such as making metric generation",
    "start": "1979279",
    "end": "1985279"
  },
  {
    "text": "doing aggregations applying transforms or rate limiting and etc",
    "start": "1985279",
    "end": "1991120"
  },
  {
    "text": "and it sends the data again it can send it upstream to another collector or it can submit the data to uh for further",
    "start": "1991120",
    "end": "1997919"
  },
  {
    "text": "processing or to data stores to sas providers like scout",
    "start": "1997919",
    "end": "2005000"
  },
  {
    "text": "so where does that leave scout with the observability piece in mind and",
    "start": "2006000",
    "end": "2011200"
  },
  {
    "text": "what's our roadmap for 2022 so the scout product roadmap for 2022 is",
    "start": "2011200",
    "end": "2017519"
  },
  {
    "start": "2014000",
    "end": "2014000"
  },
  {
    "text": "transforming from application performance monitoring to application performance observability and eventually",
    "start": "2017519",
    "end": "2023039"
  },
  {
    "text": "into full stack observability in q4 of 2021 we released the external",
    "start": "2023039",
    "end": "2028960"
  },
  {
    "text": "services feature of scout that allows you to understand and monitor requests to external services um through http api",
    "start": "2028960",
    "end": "2037600"
  },
  {
    "text": "calls to third parties or your other microservices that starts to get that",
    "start": "2037600",
    "end": "2043919"
  },
  {
    "text": "a bit of that observability piece as far as the external services go within the existing scout platform",
    "start": "2043919",
    "end": "2051520"
  },
  {
    "text": "last year we actually started building a new platform specifically geared towards being able",
    "start": "2051520",
    "end": "2057358"
  },
  {
    "text": "to do the application performance observability um uh",
    "start": "2057359",
    "end": "2062398"
  },
  {
    "text": "utilizing open telemetry in 2022 so we're expanding from application performance manage monitoring to",
    "start": "2062399",
    "end": "2068638"
  },
  {
    "text": "application performance observability being able to ingest high",
    "start": "2068639",
    "end": "2074560"
  },
  {
    "text": "um just gigantic amounts of of traces trace data from applications in order to",
    "start": "2074560",
    "end": "2081118"
  },
  {
    "text": "provide that observability uh piece with all of that contextual",
    "start": "2081119",
    "end": "2086638"
  },
  {
    "text": "information [Music] gathered from open telemetry instrumentation and allow you to",
    "start": "2086639",
    "end": "2093280"
  },
  {
    "text": "see insights into your application based on that data",
    "start": "2093280",
    "end": "2098480"
  },
  {
    "text": "and then later this year we're going to move beyond application performance observability into full stack",
    "start": "2098480",
    "end": "2104960"
  },
  {
    "text": "observability things like logging and events will be able to hook up and gather this open",
    "start": "2104960",
    "end": "2111280"
  },
  {
    "text": "telemetry data in from further systems not just applications but um",
    "start": "2111280",
    "end": "2117920"
  },
  {
    "text": "systems and infrastructure that emits open telemetry metrics logs",
    "start": "2117920",
    "end": "2123839"
  },
  {
    "text": "and even traces outside of the traditionally 80 pm uh applications that",
    "start": "2123839",
    "end": "2132240"
  },
  {
    "text": "we've so far um focused on and then observably 1.0 by the end of",
    "start": "2132240",
    "end": "2138560"
  },
  {
    "text": "this year we have a very aggressive timeline of becoming out of beta by the end of this",
    "start": "2138560",
    "end": "2144960"
  },
  {
    "text": "year so open telemetry how it's changing data collection and scout um so",
    "start": "2144960",
    "end": "2152160"
  },
  {
    "start": "2147000",
    "end": "2147000"
  },
  {
    "text": "right now the open telemetry or the scout agent sits in your application and it's an in-process",
    "start": "2152160",
    "end": "2159520"
  },
  {
    "text": "thread that collects telemetry data from the instrumentation that we've written ourselves",
    "start": "2159520",
    "end": "2165119"
  },
  {
    "text": "um it collects metrics for every single transaction uh and sends that to scout",
    "start": "2165119",
    "end": "2170560"
  },
  {
    "text": "and then in addition to those aggregated metrics it picks out interesting traces",
    "start": "2170560",
    "end": "2176400"
  },
  {
    "text": "detailed traces that are selected from an algorithm that um",
    "start": "2176400",
    "end": "2181440"
  },
  {
    "text": "give you some insight uh the starting's the the beginning of some observability",
    "start": "2181440",
    "end": "2186880"
  },
  {
    "text": "within your application to what may be slow or where the pain points of your users may be",
    "start": "2186880",
    "end": "2192560"
  },
  {
    "text": "but the the difference between um the way the skeletal agent works now and",
    "start": "2192560",
    "end": "2197599"
  },
  {
    "text": "that they shift to open telemetry is now with open telemetry the open telemetry",
    "start": "2197599",
    "end": "2202960"
  },
  {
    "text": "instrumentation will sit within your application and traces of every single transaction will be sent to step up and",
    "start": "2202960",
    "end": "2209520"
  },
  {
    "text": "scouts value add and what we need to surface for for application performance",
    "start": "2209520",
    "end": "2215680"
  },
  {
    "text": "observability lies in what what insights and what we can",
    "start": "2215680",
    "end": "2221119"
  },
  {
    "text": "automatically provide to your developers or your performance [Music]",
    "start": "2221119",
    "end": "2226839"
  },
  {
    "text": "um uh engineers about your applications without overloading you uh or requiring you to",
    "start": "2226839",
    "end": "2234640"
  },
  {
    "text": "build any dashboards to get those insights right so that's gonna be the challenge of",
    "start": "2234640",
    "end": "2240560"
  },
  {
    "text": "observability in the face of just enormous amounts of data collection",
    "start": "2240560",
    "end": "2247040"
  },
  {
    "text": "so just like the hubble telescope changed the observability of our",
    "start": "2247680",
    "end": "2254320"
  },
  {
    "text": "universe open telemetry is a very large piece of how we can enable observability within",
    "start": "2254320",
    "end": "2261760"
  },
  {
    "text": "our applications and infrastructure over the next few years what may be a",
    "start": "2261760",
    "end": "2268560"
  },
  {
    "text": "dark spot a blind spot in your application performance now will change",
    "start": "2268560",
    "end": "2274240"
  },
  {
    "text": "with the addition of open telemetry so just like the hubble telescope",
    "start": "2274240",
    "end": "2281359"
  },
  {
    "text": "zooming into a the darkest spot that we could find from our observable galaxy",
    "start": "2281359",
    "end": "2287440"
  },
  {
    "text": "we can now see that it's not dark it's not empty it's actually full of these whole galaxies that are now",
    "start": "2287440",
    "end": "2294960"
  },
  {
    "text": "observable invisible um that we thought and",
    "start": "2294960",
    "end": "2300079"
  },
  {
    "text": "never knew that were there before and we can observe these with the modern instrumentation",
    "start": "2300079",
    "end": "2306640"
  },
  {
    "text": "so this is what observability or what open telemetry is bringing to the open",
    "start": "2306640",
    "end": "2314400"
  },
  {
    "text": "the observability space to the monitoring space",
    "start": "2314400",
    "end": "2318880"
  },
  {
    "start": "2323000",
    "end": "2323000"
  },
  {
    "text": "so open telemetry uh is a somewhat new project uh over the last",
    "start": "2324480",
    "end": "2329839"
  },
  {
    "text": "two years and the tracing portion of open telemetry is actually stable",
    "start": "2329839",
    "end": "2335359"
  },
  {
    "text": "and being released as stable uh within the major languages now uh javascript uh",
    "start": "2335359",
    "end": "2341920"
  },
  {
    "text": "ruby java go those languages have have or are approaching stable releases",
    "start": "2341920",
    "end": "2348480"
  },
  {
    "text": "for the api sdk uh and the protocol open telemetry is the",
    "start": "2348480",
    "end": "2356960"
  },
  {
    "text": "timeline for metrics and logging follow um within this this tier and early next",
    "start": "2356960",
    "end": "2363200"
  },
  {
    "text": "uh they're working on stabilizing actually the protocol and api for metrics is already stable",
    "start": "2363200",
    "end": "2369119"
  },
  {
    "text": "but the sdk is in feature freeze and now you're starting to see development being worked towards uh and on within these",
    "start": "2369119",
    "end": "2376400"
  },
  {
    "text": "languages for the api and the sdk for metrics and then after that will come longing",
    "start": "2376400",
    "end": "2383040"
  },
  {
    "text": "so that the whole of the open telemetry uh project encompasses these uh these",
    "start": "2383040",
    "end": "2388320"
  },
  {
    "text": "three traditional pillars of uh observability and our development um follows the open",
    "start": "2388320",
    "end": "2396160"
  },
  {
    "text": "telemetry um timeline very closely we're not trying to build a vendor implementation on top",
    "start": "2396160",
    "end": "2403280"
  },
  {
    "text": "of the open telemetry uh project we're not trying to put any shims in between us and the open telemetry we don't want",
    "start": "2403280",
    "end": "2409839"
  },
  {
    "text": "to we want to be part of the open telemetry um ecosystem and the",
    "start": "2409839",
    "end": "2415839"
  },
  {
    "text": "contributors to open telemetry uh so that's available for everybody and it's not again going from the",
    "start": "2415839",
    "end": "2422720"
  },
  {
    "text": "walled garden of traditional atm vendors or um logging vendors",
    "start": "2422720",
    "end": "2428000"
  },
  {
    "text": "into an open standard and then eventually you know five or so years from now uh",
    "start": "2428000",
    "end": "2434560"
  },
  {
    "text": "migrates its way back to being walled walled garden type thing we wanna uh",
    "start": "2434560",
    "end": "2439599"
  },
  {
    "text": "this is this open telemetry project is super super important um and is changing the game of uh monitoring and",
    "start": "2439599",
    "end": "2446640"
  },
  {
    "text": "observability logging all these larger vendors so we wanna keep it that way",
    "start": "2446640",
    "end": "2453520"
  },
  {
    "text": "so what does this mean if you're a current scout customer um it means the",
    "start": "2453520",
    "end": "2458960"
  },
  {
    "text": "choice is yours um you can remain on the existing side apm product and we will continue to support",
    "start": "2458960",
    "end": "2464880"
  },
  {
    "text": "and improve our uh existing scout platform in 2022 and beyond",
    "start": "2464880",
    "end": "2471599"
  },
  {
    "text": "you can choose to go hybrid you can have your existing applications remain on scout apm and put any new",
    "start": "2471599",
    "end": "2477520"
  },
  {
    "text": "applications that you hook up to scout on the observability platform or you know you can mix and match your use",
    "start": "2477520",
    "end": "2483200"
  },
  {
    "text": "cases as desired um the great thing is you can run both the",
    "start": "2483200",
    "end": "2488880"
  },
  {
    "text": "existing scout agent and the open telemetry uh instrumentation side by side uh so you can even run both at the",
    "start": "2488880",
    "end": "2496480"
  },
  {
    "text": "same time and you can time it to happen when you want it can be internet incremental to switch over as our new",
    "start": "2496480",
    "end": "2501920"
  },
  {
    "text": "platform becomes more mature and adds features um for for things that",
    "start": "2501920",
    "end": "2507200"
  },
  {
    "text": "you're already getting in the scout platform",
    "start": "2507200",
    "end": "2511440"
  },
  {
    "text": "so in conclusion kind of the observability is coming soon to the theater near you",
    "start": "2512319",
    "end": "2518960"
  },
  {
    "text": "if you want to learn more about observability within scout uh sign up for our newsletter it's",
    "start": "2519040",
    "end": "2524800"
  },
  {
    "text": "atm.com observability and you can stay informed uh opt into the beta of the new",
    "start": "2524800",
    "end": "2529839"
  },
  {
    "text": "platform um and just stay up to date with uh scout's evolution into application performance",
    "start": "2529839",
    "end": "2536560"
  },
  {
    "text": "observability and eventually full stack observability through this newsletter",
    "start": "2536560",
    "end": "2543640"
  }
]