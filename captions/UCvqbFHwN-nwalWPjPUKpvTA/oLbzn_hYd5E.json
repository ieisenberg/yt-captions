[
  {
    "text": "hi everyone welcome to ckba Machinery",
    "start": "359",
    "end": "3179"
  },
  {
    "text": "Advanced topics our maintainers track",
    "start": "3179",
    "end": "5279"
  },
  {
    "text": "for cubicle North America 2022 my name",
    "start": "5279",
    "end": "8580"
  },
  {
    "text": "is Federico van Giovanni I'm co-chair of",
    "start": "8580",
    "end": "10920"
  },
  {
    "text": "ckpa Machinery in open source kubernetes",
    "start": "10920",
    "end": "13500"
  },
  {
    "text": "two very special guests join me today to",
    "start": "13500",
    "end": "15900"
  },
  {
    "text": "provide two great presentations David",
    "start": "15900",
    "end": "17880"
  },
  {
    "text": "eats from Red Hat who is also my",
    "start": "17880",
    "end": "20400"
  },
  {
    "text": "co-chair and Tech lead in Capa machinery",
    "start": "20400",
    "end": "22439"
  },
  {
    "text": "and Jeffrey Ying who is one of our top",
    "start": "22439",
    "end": "24900"
  },
  {
    "text": "contributors in clpa machinery and other",
    "start": "24900",
    "end": "27240"
  },
  {
    "text": "areas of kubernetes",
    "start": "27240",
    "end": "29160"
  },
  {
    "text": "the two topics we are going to talk",
    "start": "29160",
    "end": "30720"
  },
  {
    "text": "about today are the power and the danger",
    "start": "30720",
    "end": "32640"
  },
  {
    "text": "of aggregated API servers an open Avi V3",
    "start": "32640",
    "end": "36180"
  },
  {
    "text": "which recently graduated to Beta And is",
    "start": "36180",
    "end": "38880"
  },
  {
    "text": "making its way to ga so I will leave you",
    "start": "38880",
    "end": "41340"
  },
  {
    "text": "with David and with Jeffrey and I will",
    "start": "41340",
    "end": "43500"
  },
  {
    "text": "uh give you some information at the end",
    "start": "43500",
    "end": "46440"
  },
  {
    "text": "of the thoughts",
    "start": "46440",
    "end": "47700"
  },
  {
    "text": "see you later",
    "start": "47700",
    "end": "50360"
  },
  {
    "text": "hi my name is Jeffrey and I'm a software",
    "start": "53820",
    "end": "56340"
  },
  {
    "text": "engineer at Google and contributor to",
    "start": "56340",
    "end": "58320"
  },
  {
    "text": "API machinery",
    "start": "58320",
    "end": "60300"
  },
  {
    "text": "today I'll be talking about open API V3",
    "start": "60300",
    "end": "63539"
  },
  {
    "text": "open API V3 is a feature that has gone",
    "start": "63539",
    "end": "65820"
  },
  {
    "text": "beta and kubernetes version 124.",
    "start": "65820",
    "end": "69780"
  },
  {
    "text": "to give a quick introduction well the",
    "start": "69780",
    "end": "72119"
  },
  {
    "text": "open API is a language agnostic",
    "start": "72119",
    "end": "74159"
  },
  {
    "text": "interface in the format that is both",
    "start": "74159",
    "end": "75840"
  },
  {
    "text": "human and machine readable to describe",
    "start": "75840",
    "end": "78420"
  },
  {
    "text": "the capabilities for a service the",
    "start": "78420",
    "end": "81420"
  },
  {
    "text": "service in our case being kubernetes",
    "start": "81420",
    "end": "84920"
  },
  {
    "text": "uh the open API is provided in both a",
    "start": "84920",
    "end": "88740"
  },
  {
    "text": "Json and protobot format and some of the",
    "start": "88740",
    "end": "92040"
  },
  {
    "text": "consumers within kubernetes include",
    "start": "92040",
    "end": "93900"
  },
  {
    "text": "queue control explain",
    "start": "93900",
    "end": "95840"
  },
  {
    "text": "autocompletion for uis",
    "start": "95840",
    "end": "98159"
  },
  {
    "text": "and we also use it for generating",
    "start": "98159",
    "end": "100520"
  },
  {
    "text": "documentation the official kubernetes",
    "start": "100520",
    "end": "103020"
  },
  {
    "text": "documentation is generated from the open",
    "start": "103020",
    "end": "105180"
  },
  {
    "text": "API and also clients",
    "start": "105180",
    "end": "110060"
  },
  {
    "text": "this talk is about open API V3 but let's",
    "start": "112140",
    "end": "115380"
  },
  {
    "text": "just briefly go over some of the",
    "start": "115380",
    "end": "117119"
  },
  {
    "text": "differences between V2 and V3",
    "start": "117119",
    "end": "120119"
  },
  {
    "text": "open API V3 is a restructure of V2 and",
    "start": "120119",
    "end": "123119"
  },
  {
    "text": "allows reuse of API components and also",
    "start": "123119",
    "end": "126540"
  },
  {
    "text": "provides some new features",
    "start": "126540",
    "end": "128340"
  },
  {
    "text": "the most notable of these features is",
    "start": "128340",
    "end": "130679"
  },
  {
    "text": "the extended Json schema support the",
    "start": "130679",
    "end": "133800"
  },
  {
    "text": "open API V3 uses a newer version of Json",
    "start": "133800",
    "end": "136980"
  },
  {
    "text": "schema that supports four additional",
    "start": "136980",
    "end": "139860"
  },
  {
    "text": "pretty important Fields these are one of",
    "start": "139860",
    "end": "143520"
  },
  {
    "text": "any of default and nullable",
    "start": "143520",
    "end": "149000"
  },
  {
    "text": "for those of you already familiar with",
    "start": "150000",
    "end": "151800"
  },
  {
    "text": "custom resource stack Nations you might",
    "start": "151800",
    "end": "153720"
  },
  {
    "text": "know the open API V3 is already",
    "start": "153720",
    "end": "155520"
  },
  {
    "text": "supported in the structural schema I",
    "start": "155520",
    "end": "158340"
  },
  {
    "text": "like to highlight one key difference",
    "start": "158340",
    "end": "159540"
  },
  {
    "text": "between a schema and a specification",
    "start": "159540",
    "end": "162420"
  },
  {
    "text": "a schema represents the definition for a",
    "start": "162420",
    "end": "165360"
  },
  {
    "text": "particular type",
    "start": "165360",
    "end": "166620"
  },
  {
    "text": "or muscle definitions while",
    "start": "166620",
    "end": "168420"
  },
  {
    "text": "specification refers to the entire open",
    "start": "168420",
    "end": "170940"
  },
  {
    "text": "API document and includes the schema but",
    "start": "170940",
    "end": "174120"
  },
  {
    "text": "also includes additional things like",
    "start": "174120",
    "end": "175739"
  },
  {
    "text": "pass and Etc",
    "start": "175739",
    "end": "178620"
  },
  {
    "text": "so one thing to note is that without",
    "start": "178620",
    "end": "180060"
  },
  {
    "text": "this open API need to be feature we",
    "start": "180060",
    "end": "182700"
  },
  {
    "text": "wouldn't be publishing the open API V3",
    "start": "182700",
    "end": "185220"
  },
  {
    "text": "specification and that means that would",
    "start": "185220",
    "end": "187800"
  },
  {
    "text": "still be publishing the open API V2",
    "start": "187800",
    "end": "191599"
  },
  {
    "text": "what this means is that the API server",
    "start": "191599",
    "end": "194280"
  },
  {
    "text": "is able to understand open API V3",
    "start": "194280",
    "end": "196379"
  },
  {
    "text": "through the structural schema but",
    "start": "196379",
    "end": "198840"
  },
  {
    "text": "because it's not able to publish V3",
    "start": "198840",
    "end": "201260"
  },
  {
    "text": "certain Fields certain objects need to",
    "start": "201260",
    "end": "204540"
  },
  {
    "text": "get converted into open API too",
    "start": "204540",
    "end": "208200"
  },
  {
    "text": "now for most Fields that's not a problem",
    "start": "208200",
    "end": "210599"
  },
  {
    "text": "it's a direct conversion but for certain",
    "start": "210599",
    "end": "213599"
  },
  {
    "text": "Fields they're only representable in V3",
    "start": "213599",
    "end": "216120"
  },
  {
    "text": "and not in V2",
    "start": "216120",
    "end": "218459"
  },
  {
    "text": "so this includes things like default any",
    "start": "218459",
    "end": "221580"
  },
  {
    "text": "of one example here is that on",
    "start": "221580",
    "end": "224819"
  },
  {
    "text": "kubernetes we have these this type",
    "start": "224819",
    "end": "227159"
  },
  {
    "text": "called interest ring which the type",
    "start": "227159",
    "end": "230220"
  },
  {
    "text": "could either be an integer or a string",
    "start": "230220",
    "end": "232200"
  },
  {
    "text": "and in open API V2 because we're not",
    "start": "232200",
    "end": "235799"
  },
  {
    "text": "able to represent it that just gets",
    "start": "235799",
    "end": "237599"
  },
  {
    "text": "stripped down to No Type",
    "start": "237599",
    "end": "241379"
  },
  {
    "text": "some additional examples",
    "start": "241379",
    "end": "243659"
  },
  {
    "text": "um if you have any any of in your",
    "start": "243659",
    "end": "245959"
  },
  {
    "text": "validations your value validations then",
    "start": "245959",
    "end": "249120"
  },
  {
    "text": "the Ania guest script",
    "start": "249120",
    "end": "251519"
  },
  {
    "text": "and also nullable",
    "start": "251519",
    "end": "253500"
  },
  {
    "text": "so one important thing to note is that a",
    "start": "253500",
    "end": "256440"
  },
  {
    "text": "lot of these fields are removed",
    "start": "256440",
    "end": "258239"
  },
  {
    "text": "recursively",
    "start": "258239",
    "end": "259699"
  },
  {
    "text": "which means that if you have a root",
    "start": "259699",
    "end": "262740"
  },
  {
    "text": "object that let's say is nullable and",
    "start": "262740",
    "end": "265380"
  },
  {
    "text": "that gets stripped",
    "start": "265380",
    "end": "266940"
  },
  {
    "text": "and the additional properties uh will",
    "start": "266940",
    "end": "270900"
  },
  {
    "text": "also get stripped so on the left you can",
    "start": "270900",
    "end": "273300"
  },
  {
    "text": "see that we have a foo object with two",
    "start": "273300",
    "end": "275100"
  },
  {
    "text": "Fields the and B",
    "start": "275100",
    "end": "276740"
  },
  {
    "text": "and by going to the open API V2",
    "start": "276740",
    "end": "279900"
  },
  {
    "text": "conversion",
    "start": "279900",
    "end": "281160"
  },
  {
    "text": "all those fields and properties are",
    "start": "281160",
    "end": "283380"
  },
  {
    "text": "dropped",
    "start": "283380",
    "end": "284460"
  },
  {
    "text": "now this is not really ideal for clients",
    "start": "284460",
    "end": "287820"
  },
  {
    "text": "who rely on the published schema with a",
    "start": "287820",
    "end": "290280"
  },
  {
    "text": "source of truth because this is just",
    "start": "290280",
    "end": "292560"
  },
  {
    "text": "complete information",
    "start": "292560",
    "end": "294660"
  },
  {
    "text": "now the good news is that with open API",
    "start": "294660",
    "end": "296820"
  },
  {
    "text": "V3",
    "start": "296820",
    "end": "298400"
  },
  {
    "text": "this is all preserved so on the left is",
    "start": "298400",
    "end": "302880"
  },
  {
    "text": "basically what you get when you see a",
    "start": "302880",
    "end": "305160"
  },
  {
    "text": "publish open API V3 uh it's a pretty",
    "start": "305160",
    "end": "308820"
  },
  {
    "text": "much a lossless version of what the",
    "start": "308820",
    "end": "312360"
  },
  {
    "text": "structural schema defines",
    "start": "312360",
    "end": "314759"
  },
  {
    "text": "now let's talk about the open Eco V3",
    "start": "314759",
    "end": "316979"
  },
  {
    "text": "endpoint",
    "start": "316979",
    "end": "319400"
  },
  {
    "text": "So currently we have two open API",
    "start": "320880",
    "end": "323039"
  },
  {
    "text": "endpoints um one is the slash open API",
    "start": "323039",
    "end": "325620"
  },
  {
    "text": "slash V2 endpoint and the new endpoint",
    "start": "325620",
    "end": "328020"
  },
  {
    "text": "is slash open API phase three",
    "start": "328020",
    "end": "330780"
  },
  {
    "text": "now if a user of the go client Library",
    "start": "330780",
    "end": "332759"
  },
  {
    "text": "client go then you'll probably know that",
    "start": "332759",
    "end": "336000"
  },
  {
    "text": "we have a function in a discovery client",
    "start": "336000",
    "end": "339419"
  },
  {
    "text": "to obtain the open API V2 schema called",
    "start": "339419",
    "end": "343560"
  },
  {
    "text": "open API schema",
    "start": "343560",
    "end": "345380"
  },
  {
    "text": "similarly we create a new function",
    "start": "345380",
    "end": "347759"
  },
  {
    "text": "called open API V3 and the transition",
    "start": "347759",
    "end": "350520"
  },
  {
    "text": "should be pretty seamless to use open",
    "start": "350520",
    "end": "352500"
  },
  {
    "text": "API 3 from open ap2",
    "start": "352500",
    "end": "356580"
  },
  {
    "text": "now I'll go into a bit more of the",
    "start": "356580",
    "end": "359100"
  },
  {
    "text": "internal details for non-go clients and",
    "start": "359100",
    "end": "363000"
  },
  {
    "text": "also providing a couple more reasons to",
    "start": "363000",
    "end": "364919"
  },
  {
    "text": "use open API B3 over V2",
    "start": "364919",
    "end": "368699"
  },
  {
    "text": "one Improvement that we made in open API",
    "start": "368699",
    "end": "370800"
  },
  {
    "text": "V3 is that we've basically split up our",
    "start": "370800",
    "end": "374639"
  },
  {
    "text": "open API",
    "start": "374639",
    "end": "376220"
  },
  {
    "text": "and essentially what that means is that",
    "start": "376220",
    "end": "379020"
  },
  {
    "text": "when you hit the root endpoints slash",
    "start": "379020",
    "end": "381000"
  },
  {
    "text": "open API V3 you'll get a list of group",
    "start": "381000",
    "end": "383880"
  },
  {
    "text": "versions rather than the entire document",
    "start": "383880",
    "end": "387680"
  },
  {
    "text": "and the group versions you can then use",
    "start": "387680",
    "end": "390600"
  },
  {
    "text": "these group versions to access the",
    "start": "390600",
    "end": "393660"
  },
  {
    "text": "particular URL so let's say the example",
    "start": "393660",
    "end": "396960"
  },
  {
    "text": "of app slash V1 would be a slash open",
    "start": "396960",
    "end": "399360"
  },
  {
    "text": "API B3 slash apis apps slash V1",
    "start": "399360",
    "end": "404520"
  },
  {
    "text": "and this will contain the open API",
    "start": "404520",
    "end": "406680"
  },
  {
    "text": "schema for only the apps V1 input this",
    "start": "406680",
    "end": "411479"
  },
  {
    "text": "is obviously much smaller and for",
    "start": "411479",
    "end": "413039"
  },
  {
    "text": "clients who require just a small subset",
    "start": "413039",
    "end": "416880"
  },
  {
    "text": "of group versions they do not need to",
    "start": "416880",
    "end": "418919"
  },
  {
    "text": "download the entire document",
    "start": "418919",
    "end": "422360"
  },
  {
    "text": "also a couple additional reasons number",
    "start": "422940",
    "end": "426120"
  },
  {
    "text": "one obviously as we discussed already",
    "start": "426120",
    "end": "427800"
  },
  {
    "text": "the size uh an aggregate open API V2 is",
    "start": "427800",
    "end": "431280"
  },
  {
    "text": "on the magnitude of megabytes",
    "start": "431280",
    "end": "434039"
  },
  {
    "text": "and you might think this is not very",
    "start": "434039",
    "end": "435720"
  },
  {
    "text": "large but this increases based on the",
    "start": "435720",
    "end": "438120"
  },
  {
    "text": "complexity and the number of crds that",
    "start": "438120",
    "end": "441680"
  },
  {
    "text": "API server supports and also number of",
    "start": "441680",
    "end": "444120"
  },
  {
    "text": "upgraded apis records so this can add up",
    "start": "444120",
    "end": "446639"
  },
  {
    "text": "to be quite large",
    "start": "446639",
    "end": "449479"
  },
  {
    "text": "Also let's say there is an incremental",
    "start": "449780",
    "end": "453300"
  },
  {
    "text": "update to a crd with open ap2 and update",
    "start": "453300",
    "end": "457500"
  },
  {
    "text": "to a single resource will basically",
    "start": "457500",
    "end": "459419"
  },
  {
    "text": "Cascade into a recomputation of the",
    "start": "459419",
    "end": "462539"
  },
  {
    "text": "entire schema and this leads to CPU and",
    "start": "462539",
    "end": "465840"
  },
  {
    "text": "memory usage specs",
    "start": "465840",
    "end": "468720"
  },
  {
    "text": "and this kind of Spike depending on the",
    "start": "468720",
    "end": "471120"
  },
  {
    "text": "amount of resources are available could",
    "start": "471120",
    "end": "472919"
  },
  {
    "text": "potentially cause an outer memory error",
    "start": "472919",
    "end": "475139"
  },
  {
    "text": "and causing the API server to restart",
    "start": "475139",
    "end": "477240"
  },
  {
    "text": "which is not ideal",
    "start": "477240",
    "end": "480979"
  },
  {
    "text": "finally uh there is the complexity of",
    "start": "481560",
    "end": "484500"
  },
  {
    "text": "aggregation so open API B2 has an",
    "start": "484500",
    "end": "487440"
  },
  {
    "text": "aggregator that will send a request to",
    "start": "487440",
    "end": "489900"
  },
  {
    "text": "all aggregated API servers this includes",
    "start": "489900",
    "end": "493319"
  },
  {
    "text": "built-in types crds",
    "start": "493319",
    "end": "496680"
  },
  {
    "text": "um and aggregate API servers and it'll",
    "start": "496680",
    "end": "499139"
  },
  {
    "text": "download and merge all the open API",
    "start": "499139",
    "end": "501180"
  },
  {
    "text": "specs this is obviously takes up",
    "start": "501180",
    "end": "504660"
  },
  {
    "text": "resources",
    "start": "504660",
    "end": "506220"
  },
  {
    "text": "and open API V3 basically skips out the",
    "start": "506220",
    "end": "509280"
  },
  {
    "text": "irrigator and acts as a process so it'll",
    "start": "509280",
    "end": "512459"
  },
  {
    "text": "be much faster and less resource",
    "start": "512459",
    "end": "514560"
  },
  {
    "text": "intensive",
    "start": "514560",
    "end": "517039"
  },
  {
    "text": "now let's talk about an advanced feature",
    "start": "518219",
    "end": "520080"
  },
  {
    "text": "of open API",
    "start": "520080",
    "end": "522620"
  },
  {
    "text": "and that is called cache fasting",
    "start": "522620",
    "end": "527160"
  },
  {
    "text": "so this is the output that you get when",
    "start": "527160",
    "end": "531360"
  },
  {
    "text": "you go to the slash open API slash V2",
    "start": "531360",
    "end": "533160"
  },
  {
    "text": "endpoint you'll notice that we have the",
    "start": "533160",
    "end": "537120"
  },
  {
    "text": "list of group versions",
    "start": "537120",
    "end": "539459"
  },
  {
    "text": "um but we also have additional thing",
    "start": "539459",
    "end": "540779"
  },
  {
    "text": "attached at the end of a URL to for",
    "start": "540779",
    "end": "544980"
  },
  {
    "text": "fetching the group version and that is",
    "start": "544980",
    "end": "547140"
  },
  {
    "text": "this hash parameter",
    "start": "547140",
    "end": "549660"
  },
  {
    "text": "this cache parameter Works similar to an",
    "start": "549660",
    "end": "552120"
  },
  {
    "text": "e-tag but it allows us to skip uh one",
    "start": "552120",
    "end": "557399"
  },
  {
    "text": "pretty critical request",
    "start": "557399",
    "end": "561480"
  },
  {
    "text": "so I'll first describe what happened",
    "start": "561540",
    "end": "563519"
  },
  {
    "text": "with the text so with e-tags number one",
    "start": "563519",
    "end": "566880"
  },
  {
    "text": "you'll send a get request to the open",
    "start": "566880",
    "end": "568680"
  },
  {
    "text": "API B3 endpoints",
    "start": "568680",
    "end": "571040"
  },
  {
    "text": "return to 200 with the list of all the",
    "start": "571040",
    "end": "574140"
  },
  {
    "text": "group versions",
    "start": "574140",
    "end": "576120"
  },
  {
    "text": "now for each group version you would",
    "start": "576120",
    "end": "578519"
  },
  {
    "text": "first check a cache to see if you send",
    "start": "578519",
    "end": "582600"
  },
  {
    "text": "request a good version and let's say you",
    "start": "582600",
    "end": "584760"
  },
  {
    "text": "have then you'll have an E-Tec",
    "start": "584760",
    "end": "588120"
  },
  {
    "text": "associated with that request",
    "start": "588120",
    "end": "592200"
  },
  {
    "text": "and basically you're not really sure if",
    "start": "592200",
    "end": "594779"
  },
  {
    "text": "the latest version and the version you",
    "start": "594779",
    "end": "597060"
  },
  {
    "text": "have is the same so you need to send a",
    "start": "597060",
    "end": "599399"
  },
  {
    "text": "request to the server with the",
    "start": "599399",
    "end": "601560"
  },
  {
    "text": "particular e-tag that you have and the",
    "start": "601560",
    "end": "604200"
  },
  {
    "text": "server will either tell you oh this",
    "start": "604200",
    "end": "606360"
  },
  {
    "text": "e-tag is up to date in which case you'll",
    "start": "606360",
    "end": "608700"
  },
  {
    "text": "get a 304 not modified",
    "start": "608700",
    "end": "610320"
  },
  {
    "text": "and you can just serve your cache",
    "start": "610320",
    "end": "612959"
  },
  {
    "text": "version or the server will tell you that",
    "start": "612959",
    "end": "615480"
  },
  {
    "text": "the etag is outdated and send you the",
    "start": "615480",
    "end": "618420"
  },
  {
    "text": "response",
    "start": "618420",
    "end": "620100"
  },
  {
    "text": "now we're looking at the case that if",
    "start": "620100",
    "end": "622980"
  },
  {
    "text": "the e-tag is not changed then we get a",
    "start": "622980",
    "end": "625920"
  },
  {
    "text": "304 from the server and this means that",
    "start": "625920",
    "end": "628440"
  },
  {
    "text": "we save on all of the size of the open",
    "start": "628440",
    "end": "632640"
  },
  {
    "text": "API because we don't need to download",
    "start": "632640",
    "end": "635519"
  },
  {
    "text": "the entire open API again",
    "start": "635519",
    "end": "638580"
  },
  {
    "text": "but let's count the number of requests",
    "start": "638580",
    "end": "640080"
  },
  {
    "text": "we need to send one request to get the",
    "start": "640080",
    "end": "643019"
  },
  {
    "text": "open API root document and we're going",
    "start": "643019",
    "end": "645120"
  },
  {
    "text": "to send another request only for the",
    "start": "645120",
    "end": "646680"
  },
  {
    "text": "server to tell us that nothing has",
    "start": "646680",
    "end": "648360"
  },
  {
    "text": "changed",
    "start": "648360",
    "end": "649320"
  },
  {
    "text": "depending on the number of group",
    "start": "649320",
    "end": "650820"
  },
  {
    "text": "versions",
    "start": "650820",
    "end": "651899"
  },
  {
    "text": "this could amount to quite a lot of",
    "start": "651899",
    "end": "654000"
  },
  {
    "text": "requests and we won't do this pretty",
    "start": "654000",
    "end": "655920"
  },
  {
    "text": "frequently to make sure that clients",
    "start": "655920",
    "end": "658500"
  },
  {
    "text": "have the latest version",
    "start": "658500",
    "end": "660240"
  },
  {
    "text": "so how does this work with cache busting",
    "start": "660240",
    "end": "663360"
  },
  {
    "text": "well with cash busting it's",
    "start": "663360",
    "end": "666540"
  },
  {
    "text": "the beginning is kind of similar we",
    "start": "666540",
    "end": "668880"
  },
  {
    "text": "would have an open API",
    "start": "668880",
    "end": "671600"
  },
  {
    "text": "V3 get request and would get the list of",
    "start": "671600",
    "end": "676980"
  },
  {
    "text": "group versions but obviously with an",
    "start": "676980",
    "end": "678899"
  },
  {
    "text": "additional hash parameter",
    "start": "678899",
    "end": "681120"
  },
  {
    "text": "now the benefit of this is that",
    "start": "681120",
    "end": "684120"
  },
  {
    "text": "when we check the cash now we know the",
    "start": "684120",
    "end": "687360"
  },
  {
    "text": "exact URL that we need to hit",
    "start": "687360",
    "end": "689579"
  },
  {
    "text": "and basically the server will",
    "start": "689579",
    "end": "694380"
  },
  {
    "text": "give us two additional parameters",
    "start": "694380",
    "end": "696540"
  },
  {
    "text": "headers",
    "start": "696540",
    "end": "698399"
  },
  {
    "text": "that are important for cash busting and",
    "start": "698399",
    "end": "701579"
  },
  {
    "text": "that is number one cash control set to",
    "start": "701579",
    "end": "703860"
  },
  {
    "text": "immutable and expiry is set to a date",
    "start": "703860",
    "end": "706860"
  },
  {
    "text": "far from now let's say",
    "start": "706860",
    "end": "709320"
  },
  {
    "text": "um one year",
    "start": "709320",
    "end": "710760"
  },
  {
    "text": "and these parameters allow the clients",
    "start": "710760",
    "end": "713519"
  },
  {
    "text": "to know that let's say you have a",
    "start": "713519",
    "end": "717180"
  },
  {
    "text": "particular",
    "start": "717180",
    "end": "718200"
  },
  {
    "text": "open API with a private hash we don't",
    "start": "718200",
    "end": "721920"
  },
  {
    "text": "actually need to send a request to the",
    "start": "721920",
    "end": "724500"
  },
  {
    "text": "server to see if the hashes or the etag",
    "start": "724500",
    "end": "727560"
  },
  {
    "text": "is up to date because you already have a",
    "start": "727560",
    "end": "730140"
  },
  {
    "text": "hash",
    "start": "730140",
    "end": "731399"
  },
  {
    "text": "we chose to go through the hash instead",
    "start": "731399",
    "end": "735540"
  },
  {
    "text": "of let's say getting the client to use",
    "start": "735540",
    "end": "737339"
  },
  {
    "text": "the etag because this is actually a",
    "start": "737339",
    "end": "740279"
  },
  {
    "text": "feature built in to many hcp libraries",
    "start": "740279",
    "end": "744600"
  },
  {
    "text": "on the offer caching",
    "start": "744600",
    "end": "747180"
  },
  {
    "text": "um so a lot of times but this is",
    "start": "747180",
    "end": "749940"
  },
  {
    "text": "something that is done with the go",
    "start": "749940",
    "end": "751740"
  },
  {
    "text": "Library there is no additional checks",
    "start": "751740",
    "end": "754680"
  },
  {
    "text": "that clients independent on their side",
    "start": "754680",
    "end": "756480"
  },
  {
    "text": "as long as they're able to use the",
    "start": "756480",
    "end": "760140"
  },
  {
    "text": "library that supports this",
    "start": "760140",
    "end": "762560"
  },
  {
    "text": "feature that looks at the cache control",
    "start": "762560",
    "end": "765300"
  },
  {
    "text": "and the expires directive and this",
    "start": "765300",
    "end": "768600"
  },
  {
    "text": "basically reduces the number of requests",
    "start": "768600",
    "end": "771420"
  },
  {
    "text": "um that is needed to fetch the open API",
    "start": "771420",
    "end": "774380"
  },
  {
    "text": "on incremental updates",
    "start": "774380",
    "end": "778579"
  },
  {
    "text": "as for future work open API V3 is",
    "start": "779160",
    "end": "781800"
  },
  {
    "text": "currently in beta and will look to move",
    "start": "781800",
    "end": "783300"
  },
  {
    "text": "to GA very soon",
    "start": "783300",
    "end": "784860"
  },
  {
    "text": "clients of the open API V2 will also be",
    "start": "784860",
    "end": "787680"
  },
  {
    "text": "slowly migrated using open API V3",
    "start": "787680",
    "end": "790260"
  },
  {
    "text": "starting with Q control explain",
    "start": "790260",
    "end": "792360"
  },
  {
    "text": "this upgrade also provides additional",
    "start": "792360",
    "end": "794160"
  },
  {
    "text": "functionality with templating including",
    "start": "794160",
    "end": "796260"
  },
  {
    "text": "things like putting a markdown HTML or",
    "start": "796260",
    "end": "799200"
  },
  {
    "text": "even custom templates",
    "start": "799200",
    "end": "800880"
  },
  {
    "text": "thanks",
    "start": "800880",
    "end": "803480"
  },
  {
    "text": "let's talk about the power and dangers",
    "start": "804480",
    "end": "806459"
  },
  {
    "text": "of aggregated API servers we'll start by",
    "start": "806459",
    "end": "808680"
  },
  {
    "text": "talking about what API aggregation is",
    "start": "808680",
    "end": "810600"
  },
  {
    "text": "and how it works we'll continue on to",
    "start": "810600",
    "end": "812820"
  },
  {
    "text": "what features you can build using it and",
    "start": "812820",
    "end": "814800"
  },
  {
    "text": "then we'll talk about some of the risks",
    "start": "814800",
    "end": "816060"
  },
  {
    "text": "in using the feature and what some of",
    "start": "816060",
    "end": "818160"
  },
  {
    "text": "the limitations are",
    "start": "818160",
    "end": "819720"
  },
  {
    "text": "so let's compare a crd flow to an",
    "start": "819720",
    "end": "822600"
  },
  {
    "text": "aggregated API server flow in a crd flow",
    "start": "822600",
    "end": "825420"
  },
  {
    "text": "the client sends a request to the Q API",
    "start": "825420",
    "end": "827519"
  },
  {
    "text": "server and the qapi server handles the",
    "start": "827519",
    "end": "829560"
  },
  {
    "text": "request locally before writing to NCD",
    "start": "829560",
    "end": "832260"
  },
  {
    "text": "and sending a result back to the client",
    "start": "832260",
    "end": "833940"
  },
  {
    "text": "in an aggregated API server flow the",
    "start": "833940",
    "end": "836220"
  },
  {
    "text": "client speaks to the qpi server as",
    "start": "836220",
    "end": "837839"
  },
  {
    "text": "normal but the cube API server",
    "start": "837839",
    "end": "839760"
  },
  {
    "text": "identifies the traffic is needed to get",
    "start": "839760",
    "end": "841800"
  },
  {
    "text": "proxied to an external API server at",
    "start": "841800",
    "end": "844500"
  },
  {
    "text": "that point the external API server takes",
    "start": "844500",
    "end": "846360"
  },
  {
    "text": "over and decides how to handle the",
    "start": "846360",
    "end": "848279"
  },
  {
    "text": "request eventually storing it in SCD or",
    "start": "848279",
    "end": "851339"
  },
  {
    "text": "anything else or perhaps nothing and",
    "start": "851339",
    "end": "853920"
  },
  {
    "text": "returning the result back to the client",
    "start": "853920",
    "end": "857339"
  },
  {
    "text": "the crd flow is constrained but safe",
    "start": "857339",
    "end": "860519"
  },
  {
    "text": "it's safe because all the processing",
    "start": "860519",
    "end": "862980"
  },
  {
    "text": "happens in the qepi server and it's",
    "start": "862980",
    "end": "865139"
  },
  {
    "text": "constrained because you're constrained",
    "start": "865139",
    "end": "867060"
  },
  {
    "text": "by what the cube API authors added as",
    "start": "867060",
    "end": "870000"
  },
  {
    "text": "crd features",
    "start": "870000",
    "end": "871980"
  },
  {
    "text": "with an aggregated API server you are",
    "start": "871980",
    "end": "874019"
  },
  {
    "text": "fully unconstrained once your server",
    "start": "874019",
    "end": "876779"
  },
  {
    "text": "takes the request it can do anything it",
    "start": "876779",
    "end": "879660"
  },
  {
    "text": "wants with it but there are some risks",
    "start": "879660",
    "end": "882300"
  },
  {
    "text": "in using this approach when you get into",
    "start": "882300",
    "end": "884399"
  },
  {
    "text": "the availability of the aggregated API",
    "start": "884399",
    "end": "886800"
  },
  {
    "text": "server and how it impacts the cluster",
    "start": "886800",
    "end": "888959"
  },
  {
    "text": "so let's zoom in on how this proxy",
    "start": "888959",
    "end": "891180"
  },
  {
    "text": "method works",
    "start": "891180",
    "end": "892740"
  },
  {
    "text": "the cube API server has an API resource",
    "start": "892740",
    "end": "895620"
  },
  {
    "text": "called API service and this API service",
    "start": "895620",
    "end": "897899"
  },
  {
    "text": "holds the group and version that is",
    "start": "897899",
    "end": "900959"
  },
  {
    "text": "going to be proxy so this one here",
    "start": "900959",
    "end": "903060"
  },
  {
    "text": "saying first.com for V1 means that any",
    "start": "903060",
    "end": "906060"
  },
  {
    "text": "request for",
    "start": "906060",
    "end": "908060"
  },
  {
    "text": "v1first.com resources will go to service",
    "start": "908060",
    "end": "911639"
  },
  {
    "text": "one this is a service running on your",
    "start": "911639",
    "end": "913440"
  },
  {
    "text": "cluster and this represents a pod",
    "start": "913440",
    "end": "915300"
  },
  {
    "text": "running on the cluster hosting that",
    "start": "915300",
    "end": "917040"
  },
  {
    "text": "service you can have multiple API",
    "start": "917040",
    "end": "919860"
  },
  {
    "text": "services for different API groups and",
    "start": "919860",
    "end": "922019"
  },
  {
    "text": "for different versions of the same group",
    "start": "922019",
    "end": "924959"
  },
  {
    "text": "let's work through an example",
    "start": "924959",
    "end": "926880"
  },
  {
    "text": "so here we have a client who is doing a",
    "start": "926880",
    "end": "929040"
  },
  {
    "text": "cube control get of Foos for v1first.com",
    "start": "929040",
    "end": "933720"
  },
  {
    "text": "this request is going to go to the cube",
    "start": "933720",
    "end": "935760"
  },
  {
    "text": "API server and the qapi server is going",
    "start": "935760",
    "end": "937980"
  },
  {
    "text": "to authenticate Bob and then realize",
    "start": "937980",
    "end": "941699"
  },
  {
    "text": "that it needs to send the request to",
    "start": "941699",
    "end": "943320"
  },
  {
    "text": "this API service at this point the qpi",
    "start": "943320",
    "end": "946199"
  },
  {
    "text": "server will proxy the request to the",
    "start": "946199",
    "end": "948300"
  },
  {
    "text": "service running on the cluster and the",
    "start": "948300",
    "end": "950699"
  },
  {
    "text": "external API server will receive the",
    "start": "950699",
    "end": "953339"
  },
  {
    "text": "request",
    "start": "953339",
    "end": "954480"
  },
  {
    "text": "let's drill into how authentication is",
    "start": "954480",
    "end": "957000"
  },
  {
    "text": "going to happen on this external API",
    "start": "957000",
    "end": "958740"
  },
  {
    "text": "server so on this external API server we",
    "start": "958740",
    "end": "961440"
  },
  {
    "text": "have a delegated authenticator this is",
    "start": "961440",
    "end": "963120"
  },
  {
    "text": "the authenticator that is built in to",
    "start": "963120",
    "end": "965220"
  },
  {
    "text": "the generic API server provided by",
    "start": "965220",
    "end": "967440"
  },
  {
    "text": "kubernetes and when it's configured to",
    "start": "967440",
    "end": "969360"
  },
  {
    "text": "use in-cluster authentication which is",
    "start": "969360",
    "end": "970980"
  },
  {
    "text": "the default it will self-discover inside",
    "start": "970980",
    "end": "973920"
  },
  {
    "text": "the cluster the proxy client CA used to",
    "start": "973920",
    "end": "978360"
  },
  {
    "text": "recognize the Q API server as a front",
    "start": "978360",
    "end": "980279"
  },
  {
    "text": "proxy and the front proxy will be the",
    "start": "980279",
    "end": "982320"
  },
  {
    "text": "first choice so if a request comes in",
    "start": "982320",
    "end": "984839"
  },
  {
    "text": "and it has a client CA that matches our",
    "start": "984839",
    "end": "988560"
  },
  {
    "text": "client certificate that matches this",
    "start": "988560",
    "end": "990120"
  },
  {
    "text": "proxy CA then it will be terminated as",
    "start": "990120",
    "end": "992399"
  },
  {
    "text": "the front proxy and it will pull the",
    "start": "992399",
    "end": "993899"
  },
  {
    "text": "headers out and use that to assert the",
    "start": "993899",
    "end": "995760"
  },
  {
    "text": "user",
    "start": "995760",
    "end": "997019"
  },
  {
    "text": "the second thing in the chain is going",
    "start": "997019",
    "end": "998639"
  },
  {
    "text": "to be a client certificate also",
    "start": "998639",
    "end": "999899"
  },
  {
    "text": "discovered in the cluster and that can",
    "start": "999899",
    "end": "1002120"
  },
  {
    "text": "be used to terminate any other sort of",
    "start": "1002120",
    "end": "1004220"
  },
  {
    "text": "client certificate that identifies the",
    "start": "1004220",
    "end": "1005779"
  },
  {
    "text": "user itself not a proxy an example this",
    "start": "1005779",
    "end": "1008240"
  },
  {
    "text": "would be something like a cubelet and",
    "start": "1008240",
    "end": "1010459"
  },
  {
    "text": "then finally it can also handle tokens",
    "start": "1010459",
    "end": "1012320"
  },
  {
    "text": "so a token review will be sent back to",
    "start": "1012320",
    "end": "1014899"
  },
  {
    "text": "the Q API server running in the cluster",
    "start": "1014899",
    "end": "1016759"
  },
  {
    "text": "and the qpi server will return back to",
    "start": "1016759",
    "end": "1018980"
  },
  {
    "text": "the aggregated API server what user that",
    "start": "1018980",
    "end": "1022759"
  },
  {
    "text": "token belongs to",
    "start": "1022759",
    "end": "1024438"
  },
  {
    "text": "so the next question becomes",
    "start": "1024439",
    "end": "1027558"
  },
  {
    "text": "authorization do you do it at the cube",
    "start": "1027559",
    "end": "1030079"
  },
  {
    "text": "API server or in the aggregated API",
    "start": "1030079",
    "end": "1032600"
  },
  {
    "text": "server and the answer here is both it",
    "start": "1032600",
    "end": "1036438"
  },
  {
    "text": "has to be both and we're going to zoom",
    "start": "1036439",
    "end": "1038540"
  },
  {
    "text": "in to explain why that is so when we",
    "start": "1038540",
    "end": "1041839"
  },
  {
    "text": "look at the connections for how a an",
    "start": "1041839",
    "end": "1046040"
  },
  {
    "text": "aggregated API server can receive a",
    "start": "1046040",
    "end": "1047780"
  },
  {
    "text": "request we can actually see there's",
    "start": "1047780",
    "end": "1049160"
  },
  {
    "text": "multiple paths One path is the one we've",
    "start": "1049160",
    "end": "1051559"
  },
  {
    "text": "been talking about client goes to the",
    "start": "1051559",
    "end": "1053059"
  },
  {
    "text": "qpi server Q API server proxies through",
    "start": "1053059",
    "end": "1055660"
  },
  {
    "text": "and identifies the service running in",
    "start": "1055660",
    "end": "1057919"
  },
  {
    "text": "the cluster and the Pod handles the",
    "start": "1057919",
    "end": "1060559"
  },
  {
    "text": "request that's the normal path because",
    "start": "1060559",
    "end": "1062480"
  },
  {
    "text": "that's how clients mostly access apis",
    "start": "1062480",
    "end": "1064760"
  },
  {
    "text": "but because we're running as a service",
    "start": "1064760",
    "end": "1067039"
  },
  {
    "text": "in the cluster fronting a pod in the",
    "start": "1067039",
    "end": "1068960"
  },
  {
    "text": "cluster anything that has access to the",
    "start": "1068960",
    "end": "1070880"
  },
  {
    "text": "service network or the Pod Network can",
    "start": "1070880",
    "end": "1072620"
  },
  {
    "text": "actually make a direct request",
    "start": "1072620",
    "end": "1074720"
  },
  {
    "text": "because of that authorization has to",
    "start": "1074720",
    "end": "1076820"
  },
  {
    "text": "happen in both spots",
    "start": "1076820",
    "end": "1078799"
  },
  {
    "text": "the first spot is that the qepi server",
    "start": "1078799",
    "end": "1080600"
  },
  {
    "text": "this is an rbac check usually it can be",
    "start": "1080600",
    "end": "1083120"
  },
  {
    "text": "anything how you have it configured but",
    "start": "1083120",
    "end": "1084980"
  },
  {
    "text": "generally rbac and it will check to see",
    "start": "1084980",
    "end": "1087320"
  },
  {
    "text": "does Bob have access to run a get on",
    "start": "1087320",
    "end": "1092539"
  },
  {
    "text": "Foos in v1first.com if the answer is no",
    "start": "1092539",
    "end": "1095240"
  },
  {
    "text": "the request won't be proxied but if the",
    "start": "1095240",
    "end": "1098120"
  },
  {
    "text": "answer is yes it'll get proxy through or",
    "start": "1098120",
    "end": "1100340"
  },
  {
    "text": "if a client bypasses the qpi server and",
    "start": "1100340",
    "end": "1102919"
  },
  {
    "text": "goes directly the aggregated API server",
    "start": "1102919",
    "end": "1106100"
  },
  {
    "text": "will run another authorization check and",
    "start": "1106100",
    "end": "1108020"
  },
  {
    "text": "now let's look at what that does there",
    "start": "1108020",
    "end": "1109340"
  },
  {
    "text": "here we have a delegated authorizer",
    "start": "1109340",
    "end": "1111799"
  },
  {
    "text": "again this is the one built into the",
    "start": "1111799",
    "end": "1114320"
  },
  {
    "text": "generic API server provided by queue",
    "start": "1114320",
    "end": "1117679"
  },
  {
    "text": "as a library and this one has multiple",
    "start": "1117679",
    "end": "1121700"
  },
  {
    "text": "items in the chain as well the first is",
    "start": "1121700",
    "end": "1123620"
  },
  {
    "text": "a hard-coded set and this hard coded set",
    "start": "1123620",
    "end": "1126080"
  },
  {
    "text": "you often see used to allow system",
    "start": "1126080",
    "end": "1128120"
  },
  {
    "text": "Anonymous to do health checks and that",
    "start": "1128120",
    "end": "1130280"
  },
  {
    "text": "makes it very efficient for the cube",
    "start": "1130280",
    "end": "1131960"
  },
  {
    "text": "let's do health checks keep in mind this",
    "start": "1131960",
    "end": "1134179"
  },
  {
    "text": "has to be configured by the aggregated",
    "start": "1134179",
    "end": "1137000"
  },
  {
    "text": "API server the stock Library allows it",
    "start": "1137000",
    "end": "1139340"
  },
  {
    "text": "but doesn't specify it",
    "start": "1139340",
    "end": "1141500"
  },
  {
    "text": "the other the next piece is the always",
    "start": "1141500",
    "end": "1143840"
  },
  {
    "text": "allowed group inside of a kubernetes",
    "start": "1143840",
    "end": "1146000"
  },
  {
    "text": "cluster system.masters is hard-coded as",
    "start": "1146000",
    "end": "1148580"
  },
  {
    "text": "always being able to run any request",
    "start": "1148580",
    "end": "1150740"
  },
  {
    "text": "that it wants and this allows the",
    "start": "1150740",
    "end": "1152539"
  },
  {
    "text": "cluster to self bootstrap",
    "start": "1152539",
    "end": "1154520"
  },
  {
    "text": "and then if it a request does not match",
    "start": "1154520",
    "end": "1157760"
  },
  {
    "text": "either of these two categories a subject",
    "start": "1157760",
    "end": "1159620"
  },
  {
    "text": "access review is done and that is the",
    "start": "1159620",
    "end": "1161299"
  },
  {
    "text": "API that the qpi server exposes that",
    "start": "1161299",
    "end": "1164120"
  },
  {
    "text": "allows for webhook authorization and the",
    "start": "1164120",
    "end": "1167900"
  },
  {
    "text": "delegated authorizer will do it so that",
    "start": "1167900",
    "end": "1169640"
  },
  {
    "text": "the rules match exactly if the cube API",
    "start": "1169640",
    "end": "1172580"
  },
  {
    "text": "server says you can do it the aggregated",
    "start": "1172580",
    "end": "1174380"
  },
  {
    "text": "API server will believe that you can do",
    "start": "1174380",
    "end": "1176539"
  },
  {
    "text": "it",
    "start": "1176539",
    "end": "1177559"
  },
  {
    "text": "so now that we've talked about the",
    "start": "1177559",
    "end": "1179419"
  },
  {
    "text": "mechanics of how we actually perform the",
    "start": "1179419",
    "end": "1181760"
  },
  {
    "text": "proxy Inc let's talk about what it",
    "start": "1181760",
    "end": "1183500"
  },
  {
    "text": "allows you to do",
    "start": "1183500",
    "end": "1185059"
  },
  {
    "text": "the first thing we're going to talk",
    "start": "1185059",
    "end": "1186080"
  },
  {
    "text": "about is binary storage formats and the",
    "start": "1186080",
    "end": "1188419"
  },
  {
    "text": "openshift API server is a good example",
    "start": "1188419",
    "end": "1190580"
  },
  {
    "text": "of this the openshift API server needed",
    "start": "1190580",
    "end": "1193520"
  },
  {
    "text": "needed performance that was greater than",
    "start": "1193520",
    "end": "1195860"
  },
  {
    "text": "we could get using Json and to make this",
    "start": "1195860",
    "end": "1199820"
  },
  {
    "text": "work we added protobuf same as the cube",
    "start": "1199820",
    "end": "1202820"
  },
  {
    "text": "API server uses now crds do not as of",
    "start": "1202820",
    "end": "1206120"
  },
  {
    "text": "yet have a binary storage format a hint",
    "start": "1206120",
    "end": "1208880"
  },
  {
    "text": "if anyone wants to write a cap I'd be",
    "start": "1208880",
    "end": "1210380"
  },
  {
    "text": "very interested in reading it",
    "start": "1210380",
    "end": "1212299"
  },
  {
    "text": "but as of now they don't and so an",
    "start": "1212299",
    "end": "1215600"
  },
  {
    "text": "aggregated API server allowed us to use",
    "start": "1215600",
    "end": "1217580"
  },
  {
    "text": "protobuf serialization in etcd and as",
    "start": "1217580",
    "end": "1220100"
  },
  {
    "text": "the wire format and the Q API server",
    "start": "1220100",
    "end": "1222860"
  },
  {
    "text": "passes the information back it let us",
    "start": "1222860",
    "end": "1225740"
  },
  {
    "text": "hit much higher performance targets",
    "start": "1225740",
    "end": "1229220"
  },
  {
    "text": "the next option that we can talk about",
    "start": "1229220",
    "end": "1230720"
  },
  {
    "text": "is a no storage server you might say",
    "start": "1230720",
    "end": "1233179"
  },
  {
    "text": "what good is that well if you're",
    "start": "1233179",
    "end": "1234980"
  },
  {
    "text": "familiar with the V1 beta 1 metrics case",
    "start": "1234980",
    "end": "1237860"
  },
  {
    "text": "IO API and this is the one that backs",
    "start": "1237860",
    "end": "1240500"
  },
  {
    "text": "hpas for instance the kubernetes sigs",
    "start": "1240500",
    "end": "1243919"
  },
  {
    "text": "project metric server actually has no",
    "start": "1243919",
    "end": "1246500"
  },
  {
    "text": "storage no persistent storage it reads",
    "start": "1246500",
    "end": "1248720"
  },
  {
    "text": "and scrapes values from the nodes holds",
    "start": "1248720",
    "end": "1251240"
  },
  {
    "text": "those values in memory and replies to",
    "start": "1251240",
    "end": "1253460"
  },
  {
    "text": "API server requests that way there's no",
    "start": "1253460",
    "end": "1255380"
  },
  {
    "text": "persistent storage",
    "start": "1255380",
    "end": "1257179"
  },
  {
    "text": "and the last feature that I'm going to",
    "start": "1257179",
    "end": "1259340"
  },
  {
    "text": "mention is that you can have multiple",
    "start": "1259340",
    "end": "1261380"
  },
  {
    "text": "implementations and here again metrics",
    "start": "1261380",
    "end": "1263299"
  },
  {
    "text": "is a good example so metrics in memory",
    "start": "1263299",
    "end": "1265760"
  },
  {
    "text": "lets you get to a certain level of scale",
    "start": "1265760",
    "end": "1268960"
  },
  {
    "text": "but there's an alternative",
    "start": "1268960",
    "end": "1270679"
  },
  {
    "text": "implementation that fulfills the same",
    "start": "1270679",
    "end": "1272480"
  },
  {
    "text": "API still V1 beta1 metrics Kates IO but",
    "start": "1272480",
    "end": "1276140"
  },
  {
    "text": "it does it using Prometheus and so",
    "start": "1276140",
    "end": "1278240"
  },
  {
    "text": "Prometheus actually acts as the scraper",
    "start": "1278240",
    "end": "1280280"
  },
  {
    "text": "it stores metrics values over time and",
    "start": "1280280",
    "end": "1283340"
  },
  {
    "text": "then the Prometheus adapter will query",
    "start": "1283340",
    "end": "1286039"
  },
  {
    "text": "Prometheus to get the answer and the",
    "start": "1286039",
    "end": "1288860"
  },
  {
    "text": "client that client in that accesses the",
    "start": "1288860",
    "end": "1291500"
  },
  {
    "text": "qapi server has no idea which API server",
    "start": "1291500",
    "end": "1294740"
  },
  {
    "text": "is actually servicing the request so",
    "start": "1294740",
    "end": "1296840"
  },
  {
    "text": "this allows you to drop in different",
    "start": "1296840",
    "end": "1298100"
  },
  {
    "text": "implementations if you want to",
    "start": "1298100",
    "end": "1299480"
  },
  {
    "text": "experiment or if you have different",
    "start": "1299480",
    "end": "1301400"
  },
  {
    "text": "needs in your particular cluster",
    "start": "1301400",
    "end": "1304460"
  },
  {
    "text": "so all this sounds really cool better",
    "start": "1304460",
    "end": "1306860"
  },
  {
    "text": "performance more storage options what",
    "start": "1306860",
    "end": "1309320"
  },
  {
    "text": "can go wrong I talked about some risks",
    "start": "1309320",
    "end": "1311780"
  },
  {
    "text": "at the beginning let's talk about those",
    "start": "1311780",
    "end": "1314299"
  },
  {
    "text": "so",
    "start": "1314299",
    "end": "1315500"
  },
  {
    "text": "h a cube API servers is a very common",
    "start": "1315500",
    "end": "1318380"
  },
  {
    "text": "configuration right if you don't want",
    "start": "1318380",
    "end": "1320000"
  },
  {
    "text": "disruption you normally run three Cube",
    "start": "1320000",
    "end": "1321919"
  },
  {
    "text": "API servers with three at CDs",
    "start": "1321919",
    "end": "1324980"
  },
  {
    "text": "but when you do this you can get",
    "start": "1324980",
    "end": "1327620"
  },
  {
    "text": "interesting behavior on aggregated API",
    "start": "1327620",
    "end": "1329900"
  },
  {
    "text": "servers so if you have some kind of",
    "start": "1329900",
    "end": "1333080"
  },
  {
    "text": "network disruption maybe the node that",
    "start": "1333080",
    "end": "1335539"
  },
  {
    "text": "is running API server one cannot reach",
    "start": "1335539",
    "end": "1338539"
  },
  {
    "text": "the service network or cannot reach the",
    "start": "1338539",
    "end": "1340159"
  },
  {
    "text": "Pod Network for whatever reason then",
    "start": "1340159",
    "end": "1343460"
  },
  {
    "text": "what happens is end clients those users",
    "start": "1343460",
    "end": "1346460"
  },
  {
    "text": "who are trying to get your metrics or",
    "start": "1346460",
    "end": "1348559"
  },
  {
    "text": "get the openshift apis from the previous",
    "start": "1348559",
    "end": "1350600"
  },
  {
    "text": "slides they see a one out of three",
    "start": "1350600",
    "end": "1354080"
  },
  {
    "text": "chance of just not having that API",
    "start": "1354080",
    "end": "1356000"
  },
  {
    "text": "available",
    "start": "1356000",
    "end": "1356900"
  },
  {
    "text": "and that leads to I'll say user",
    "start": "1356900",
    "end": "1359960"
  },
  {
    "text": "frustration",
    "start": "1359960",
    "end": "1361659"
  },
  {
    "text": "but it's not it's not fatal it's just",
    "start": "1361659",
    "end": "1364340"
  },
  {
    "text": "frustration it's very important to have",
    "start": "1364340",
    "end": "1366080"
  },
  {
    "text": "reliable access",
    "start": "1366080",
    "end": "1368179"
  },
  {
    "text": "the next class of problem is actually a",
    "start": "1368179",
    "end": "1370940"
  },
  {
    "text": "little more severe if you lose an",
    "start": "1370940",
    "end": "1373039"
  },
  {
    "text": "aggregated API server entirely no Cube",
    "start": "1373039",
    "end": "1376100"
  },
  {
    "text": "API server can reach it maybe maybe you",
    "start": "1376100",
    "end": "1378380"
  },
  {
    "text": "deleted the Pod maybe you're suffering",
    "start": "1378380",
    "end": "1380659"
  },
  {
    "text": "some kind of full outage uh that causes",
    "start": "1380659",
    "end": "1384260"
  },
  {
    "text": "API Discovery to fail and if you",
    "start": "1384260",
    "end": "1386360"
  },
  {
    "text": "remember from our presentation I believe",
    "start": "1386360",
    "end": "1388100"
  },
  {
    "text": "it was last year the API Discovery is",
    "start": "1388100",
    "end": "1391880"
  },
  {
    "text": "the set of apis that are used to build",
    "start": "1391880",
    "end": "1394159"
  },
  {
    "text": "rest mappings and rest mappings are used",
    "start": "1394159",
    "end": "1397159"
  },
  {
    "text": "to drive behavior in Cube control",
    "start": "1397159",
    "end": "1398780"
  },
  {
    "text": "garbage collection and namespace cleanup",
    "start": "1398780",
    "end": "1401480"
  },
  {
    "text": "and so if you cannot get your Discovery",
    "start": "1401480",
    "end": "1404179"
  },
  {
    "text": "API to work you will end up in cases",
    "start": "1404179",
    "end": "1406580"
  },
  {
    "text": "where garbage collection effectively",
    "start": "1406580",
    "end": "1408980"
  },
  {
    "text": "hangs for some resources and certain",
    "start": "1408980",
    "end": "1412900"
  },
  {
    "text": "types of owner references that you go to",
    "start": "1412900",
    "end": "1415760"
  },
  {
    "text": "create ones that are supposed to block",
    "start": "1415760",
    "end": "1417679"
  },
  {
    "text": "owner deletion can actually fail if",
    "start": "1417679",
    "end": "1419840"
  },
  {
    "text": "discovery doesn't work",
    "start": "1419840",
    "end": "1421700"
  },
  {
    "text": "the other thing that can happen is the",
    "start": "1421700",
    "end": "1423500"
  },
  {
    "text": "namespaces can get stuck finalizing and",
    "start": "1423500",
    "end": "1426140"
  },
  {
    "text": "they won't delete and there'll be a",
    "start": "1426140",
    "end": "1427460"
  },
  {
    "text": "message in status when this happens it",
    "start": "1427460",
    "end": "1429200"
  },
  {
    "text": "says Discovery checks have failed but",
    "start": "1429200",
    "end": "1432080"
  },
  {
    "text": "it's a significant risk and a very",
    "start": "1432080",
    "end": "1433700"
  },
  {
    "text": "annoying problem",
    "start": "1433700",
    "end": "1435140"
  },
  {
    "text": "there's one special case for namespaces",
    "start": "1435140",
    "end": "1438020"
  },
  {
    "text": "that I'm about to go into that is very",
    "start": "1438020",
    "end": "1440659"
  },
  {
    "text": "interesting so here we have a namespace",
    "start": "1440659",
    "end": "1443240"
  },
  {
    "text": "deletion cycle yes cycle so this came up",
    "start": "1443240",
    "end": "1447620"
  },
  {
    "text": "when we were developing operators for",
    "start": "1447620",
    "end": "1450559"
  },
  {
    "text": "openshift V4 we had aggregated API",
    "start": "1450559",
    "end": "1453440"
  },
  {
    "text": "servers remember hosted in our cluster",
    "start": "1453440",
    "end": "1455179"
  },
  {
    "text": "and they existed in a particular",
    "start": "1455179",
    "end": "1456320"
  },
  {
    "text": "namespace the example here is an",
    "start": "1456320",
    "end": "1458120"
  },
  {
    "text": "aggregated namespace holding an uh an",
    "start": "1458120",
    "end": "1461600"
  },
  {
    "text": "external API server and someone deletes",
    "start": "1461600",
    "end": "1464360"
  },
  {
    "text": "the namespace they shouldn't have but",
    "start": "1464360",
    "end": "1466580"
  },
  {
    "text": "they deleted it",
    "start": "1466580",
    "end": "1467840"
  },
  {
    "text": "now as soon as this happens the",
    "start": "1467840",
    "end": "1469880"
  },
  {
    "text": "namespace goes into finalizing State and",
    "start": "1469880",
    "end": "1472280"
  },
  {
    "text": "that means no creates are allowed so you",
    "start": "1472280",
    "end": "1474140"
  },
  {
    "text": "can delete content from the namespace",
    "start": "1474140",
    "end": "1475760"
  },
  {
    "text": "but you cannot create anything new and",
    "start": "1475760",
    "end": "1478700"
  },
  {
    "text": "deletion happens immediately so this pod",
    "start": "1478700",
    "end": "1481280"
  },
  {
    "text": "gets deleted now when this pod gets",
    "start": "1481280",
    "end": "1484039"
  },
  {
    "text": "deleted the namespace lifecycle",
    "start": "1484039",
    "end": "1485900"
  },
  {
    "text": "controller gets stuck because it needs",
    "start": "1485900",
    "end": "1489080"
  },
  {
    "text": "to discover all the namespace resources",
    "start": "1489080",
    "end": "1491120"
  },
  {
    "text": "in the cluster so they can delete them",
    "start": "1491120",
    "end": "1492799"
  },
  {
    "text": "and be able to make the delete calls but",
    "start": "1492799",
    "end": "1495500"
  },
  {
    "text": "it needs to make delete calls to the",
    "start": "1495500",
    "end": "1497960"
  },
  {
    "text": "external API server which was just",
    "start": "1497960",
    "end": "1500179"
  },
  {
    "text": "deleted so what happens is the namespace",
    "start": "1500179",
    "end": "1502580"
  },
  {
    "text": "controller can't make progress without",
    "start": "1502580",
    "end": "1504260"
  },
  {
    "text": "the external API server and the external",
    "start": "1504260",
    "end": "1506780"
  },
  {
    "text": "API server can't start until the",
    "start": "1506780",
    "end": "1508400"
  },
  {
    "text": "controller deletes the namespace",
    "start": "1508400",
    "end": "1510500"
  },
  {
    "text": "now there is a way out in the cases",
    "start": "1510500",
    "end": "1513200"
  },
  {
    "text": "where you know you're deleting this and",
    "start": "1513200",
    "end": "1514700"
  },
  {
    "text": "you're going to bring it back and that",
    "start": "1514700",
    "end": "1516919"
  },
  {
    "text": "is to actually make sure that everything",
    "start": "1516919",
    "end": "1518780"
  },
  {
    "text": "has been cleaned up and then manually",
    "start": "1518780",
    "end": "1520820"
  },
  {
    "text": "clear the finalizer once you do this in",
    "start": "1520820",
    "end": "1523700"
  },
  {
    "text": "the case of openshift for example an",
    "start": "1523700",
    "end": "1525200"
  },
  {
    "text": "operator will automatically create that",
    "start": "1525200",
    "end": "1526580"
  },
  {
    "text": "namespace again and reproduce the",
    "start": "1526580",
    "end": "1529159"
  },
  {
    "text": "aggregated API server that you need this",
    "start": "1529159",
    "end": "1531799"
  },
  {
    "text": "gets you out from being stuck here and",
    "start": "1531799",
    "end": "1534980"
  },
  {
    "text": "gets you back up and running again but",
    "start": "1534980",
    "end": "1536779"
  },
  {
    "text": "you need to be aware that this is",
    "start": "1536779",
    "end": "1538279"
  },
  {
    "text": "something that can happen",
    "start": "1538279",
    "end": "1541000"
  },
  {
    "text": "so now the limitations they can do a lot",
    "start": "1541000",
    "end": "1544820"
  },
  {
    "text": "aggregated API servers can do things",
    "start": "1544820",
    "end": "1547039"
  },
  {
    "text": "that no other Technique we have allows",
    "start": "1547039",
    "end": "1550120"
  },
  {
    "text": "but the one thing they can't do is",
    "start": "1550120",
    "end": "1552980"
  },
  {
    "text": "coexist in the same group version with a",
    "start": "1552980",
    "end": "1556460"
  },
  {
    "text": "crd",
    "start": "1556460",
    "end": "1557539"
  },
  {
    "text": "so if you have an API service for",
    "start": "1557539",
    "end": "1560620"
  },
  {
    "text": "v1first.com you cannot create crds in",
    "start": "1560620",
    "end": "1565100"
  },
  {
    "text": "first.com",
    "start": "1565100",
    "end": "1566480"
  },
  {
    "text": "so this means that like your thought of",
    "start": "1566480",
    "end": "1568880"
  },
  {
    "text": "hey I wonder if I can use this to create",
    "start": "1568880",
    "end": "1570559"
  },
  {
    "text": "sub resources for my crd you can't and",
    "start": "1570559",
    "end": "1574580"
  },
  {
    "text": "you also can't mix those special types",
    "start": "1574580",
    "end": "1577520"
  },
  {
    "text": "of storage for instance with a standard",
    "start": "1577520",
    "end": "1580760"
  },
  {
    "text": "crd either",
    "start": "1580760",
    "end": "1582260"
  },
  {
    "text": "maybe someday this will come along",
    "start": "1582260",
    "end": "1584320"
  },
  {
    "text": "but as of right now you can't",
    "start": "1584320",
    "end": "1588740"
  },
  {
    "text": "all right so that is all I have about",
    "start": "1588740",
    "end": "1591020"
  },
  {
    "text": "aggregated API servers I hope you found",
    "start": "1591020",
    "end": "1592640"
  },
  {
    "text": "that interesting and I'll turn it back",
    "start": "1592640",
    "end": "1594140"
  },
  {
    "text": "over to Fed a",
    "start": "1594140",
    "end": "1597100"
  },
  {
    "text": "hello again I hope you enjoyed these two",
    "start": "1597799",
    "end": "1599960"
  },
  {
    "text": "talks as much as I did I'm always",
    "start": "1599960",
    "end": "1602000"
  },
  {
    "text": "impressed by the level of depth and",
    "start": "1602000",
    "end": "1604100"
  },
  {
    "text": "quality of the presentations that my",
    "start": "1604100",
    "end": "1605840"
  },
  {
    "text": "colleagues prepare thank you so much",
    "start": "1605840",
    "end": "1607640"
  },
  {
    "text": "David and Jeffrey for working out",
    "start": "1607640",
    "end": "1609559"
  },
  {
    "text": "through aggregated API servers and open",
    "start": "1609559",
    "end": "1611299"
  },
  {
    "text": "API V3",
    "start": "1611299",
    "end": "1612740"
  },
  {
    "text": "uh to close the chart I will just remind",
    "start": "1612740",
    "end": "1615980"
  },
  {
    "text": "you that cap Machinery is part of Open",
    "start": "1615980",
    "end": "1618799"
  },
  {
    "text": "Source kubernetes you know we have open",
    "start": "1618799",
    "end": "1620779"
  },
  {
    "text": "meetings twice a month we have twice a",
    "start": "1620779",
    "end": "1624320"
  },
  {
    "text": "week three ashes for pull requests and",
    "start": "1624320",
    "end": "1627140"
  },
  {
    "text": "issues we have to supporting groups so",
    "start": "1627140",
    "end": "1630860"
  },
  {
    "text": "you can join any part at any time that",
    "start": "1630860",
    "end": "1633440"
  },
  {
    "text": "you feel could be interesting for you",
    "start": "1633440",
    "end": "1635000"
  },
  {
    "text": "and you can contribute",
    "start": "1635000",
    "end": "1636799"
  },
  {
    "text": "I will leave this slide here so you know",
    "start": "1636799",
    "end": "1638960"
  },
  {
    "text": "where to find us and how to connect with",
    "start": "1638960",
    "end": "1640760"
  },
  {
    "text": "us through mail through Slack",
    "start": "1640760",
    "end": "1643820"
  },
  {
    "text": "or through our home page or in GitHub",
    "start": "1643820",
    "end": "1646520"
  },
  {
    "text": "directly",
    "start": "1646520",
    "end": "1647539"
  },
  {
    "text": "thank you again for coming and I will",
    "start": "1647539",
    "end": "1649820"
  },
  {
    "text": "leave it open now for questions to the",
    "start": "1649820",
    "end": "1651679"
  },
  {
    "text": "session thank you again have a great",
    "start": "1651679",
    "end": "1653900"
  },
  {
    "text": "coupon",
    "start": "1653900",
    "end": "1654260"
  },
  {
    "text": "[Music]",
    "start": "1654260",
    "end": "1657390"
  }
]