[
  {
    "text": "hello everyone and welcome to our session and thank you for coming my name is dan williams from ibm and this is this is austin a phd student",
    "start": "0",
    "end": "8160"
  },
  {
    "text": "from uiuc and we're going to talk to you about container isolation via virtualization",
    "start": "8160",
    "end": "13519"
  },
  {
    "text": "don't forget to shrink the guest now if you've been paying attention to the container landscape especially the run",
    "start": "13519",
    "end": "19760"
  },
  {
    "text": "times the past few years you may have noticed a lot of interest in virtualization and how the security and isolation of",
    "start": "19760",
    "end": "26320"
  },
  {
    "text": "virtual machines can be applied to containers so here i have a screenshot um from",
    "start": "26320",
    "end": "31359"
  },
  {
    "text": "catacontainers which with the tagline the speed of containers the security of vms",
    "start": "31359",
    "end": "36880"
  },
  {
    "text": "we've also seen things like aws fire firecracker which had secure and fast",
    "start": "36880",
    "end": "42239"
  },
  {
    "text": "micro vms for serverless computing where this is a virtual machine that's being used for for serverless which is",
    "start": "42239",
    "end": "48160"
  },
  {
    "text": "very much a container like uh environment just to kind of",
    "start": "48160",
    "end": "54000"
  },
  {
    "text": "marry that that virtual machine and container thing more together we've seen things like weave ignite",
    "start": "54000",
    "end": "59359"
  },
  {
    "text": "which which explicitly uh combines the firecracker micro vms with oci images to get that",
    "start": "59359",
    "end": "64878"
  },
  {
    "text": "container and vm uh connection going um so much of this stuff has been going",
    "start": "64879",
    "end": "71040"
  },
  {
    "text": "on with the virtualization of the containers that it led uh phil estes to write an article in 2019",
    "start": "71040",
    "end": "77040"
  },
  {
    "text": "called containers in 2019 they're calling it a hypervisor comeback",
    "start": "77040",
    "end": "82320"
  },
  {
    "text": "but you might be thinking hold on a second aren't vms kind of big and slow and heavyweight and",
    "start": "82320",
    "end": "88320"
  },
  {
    "text": "and isn't some of the reason that we've been so excited about containers for runtime purposes that they don't have those",
    "start": "88320",
    "end": "94079"
  },
  {
    "text": "properties like for example um what about boot time how fast these",
    "start": "94079",
    "end": "99439"
  },
  {
    "text": "things take to start up and and the memory footprint that vms have especially when you think about some of",
    "start": "99439",
    "end": "104960"
  },
  {
    "text": "these uh environments like serverless computing where these types of metrics are really really important",
    "start": "104960",
    "end": "112159"
  },
  {
    "text": "but of course um you know the the vms that that we're seeing happen uh in the context of",
    "start": "112159",
    "end": "119200"
  },
  {
    "text": "containers are not like the virtual machines of old um in fact the virtual machines are",
    "start": "119200",
    "end": "125040"
  },
  {
    "text": "becoming much much more lightweight um and you know if you look at the aws firecracker they don't call them",
    "start": "125040",
    "end": "131280"
  },
  {
    "text": "just you know virtual machines they call them micro vms to kind of capture that lightweight essence um and so to dig",
    "start": "131280",
    "end": "138400"
  },
  {
    "text": "a little bit deeper into why and how vms are becoming lightweight um i have a",
    "start": "138400",
    "end": "144720"
  },
  {
    "text": "little picture here on the slide which will um which represents a",
    "start": "144720",
    "end": "150080"
  },
  {
    "text": "kind of standard virtualization stack so at the bottom you have a host kernel",
    "start": "150080",
    "end": "155440"
  },
  {
    "text": "or a hypervisor so this would be something like linux with kvm on top of that you'd have a monitor like",
    "start": "155440",
    "end": "161200"
  },
  {
    "text": "the this is sort of like the thing that does the virtualization and uses the the host kernel and hypervisors",
    "start": "161200",
    "end": "167200"
  },
  {
    "text": "this would be something like qmu or cloud hypervisor or firecracker for example and on top of that you have the virtual",
    "start": "167200",
    "end": "173440"
  },
  {
    "text": "machine itself which in this picture is shown with a with a dotted box",
    "start": "173440",
    "end": "179120"
  },
  {
    "text": "um the important thing here is that there's a very low level of abstraction between the virtual machine",
    "start": "179120",
    "end": "184560"
  },
  {
    "text": "and the host software below and this is where the isolation and the security from virtual machines is coming from",
    "start": "184560",
    "end": "190800"
  },
  {
    "text": "inside the virtual machine you typically have a guest kernel so normally linux and your application finally runs on top",
    "start": "190800",
    "end": "197440"
  },
  {
    "text": "of that so given that huge stack that we just we just showed here there's there's no wonder that that vms have this",
    "start": "197440",
    "end": "203519"
  },
  {
    "text": "reputation for being very heavyweight now so the first way to get vms to be",
    "start": "203519",
    "end": "209760"
  },
  {
    "text": "more lightweight is to look at the monitor piece and try to make that thinner so and this is what is is done by aws",
    "start": "209760",
    "end": "216560"
  },
  {
    "text": "firecracker for example they take that piece the qmu for example and cut out things like pci and reduce",
    "start": "216560",
    "end": "224400"
  },
  {
    "text": "complexity implement it in a very lightweight way and um they end up with much better",
    "start": "224400",
    "end": "230400"
  },
  {
    "text": "performance so i have a graph here that uh that copied from um a paper on firecracker from nsdi 2020",
    "start": "230400",
    "end": "238640"
  },
  {
    "text": "and what you see is that firecracker can boot basically twice as fast as qmu um and this type of this type of",
    "start": "238640",
    "end": "245360"
  },
  {
    "text": "performance improvement is not is not uh this type of um you know uh observation is not new um",
    "start": "245360",
    "end": "253280"
  },
  {
    "text": "as far back as 2017 there was a paper in in 20 in sosp that said my vm is lighter and",
    "start": "253280",
    "end": "259359"
  },
  {
    "text": "safer than your container which had a lot of similar ideas about having a very lightweight monitor process",
    "start": "259359",
    "end": "264960"
  },
  {
    "text": "but there's another piece to the lightweight uh to making this stack more lightweight",
    "start": "264960",
    "end": "270320"
  },
  {
    "text": "and that is the guest so if you see um even though we have a thin process a thin monitor now we still",
    "start": "270320",
    "end": "276160"
  },
  {
    "text": "have a pretty heavyweight guest there and there has been some work uh to make the guest lighter both in",
    "start": "276160",
    "end": "282880"
  },
  {
    "text": "user space for the guests so going from let's say an ubuntu container to an alpine lace container",
    "start": "282880",
    "end": "288240"
  },
  {
    "text": "and also through kernel configuration for that guest kernel things like tinyx which was from that same ssp paper",
    "start": "288240",
    "end": "294880"
  },
  {
    "text": "that we mentioned um but the question that we asked here is in this context how thin can you go what what is the",
    "start": "294880",
    "end": "301919"
  },
  {
    "text": "what's the thinnest that you can get that guest kernel piece to kind of complete this process of making vms lightweight",
    "start": "301919",
    "end": "310800"
  },
  {
    "text": "and if you think about it the most thin guess that you can possibly imagine",
    "start": "310800",
    "end": "316400"
  },
  {
    "text": "is a uni kernel and if you uh if you recall unicorns were very",
    "start": "316400",
    "end": "321520"
  },
  {
    "text": "had a lot of excitement around them a few years ago and um what they are is basically thin",
    "start": "321520",
    "end": "327680"
  },
  {
    "text": "guests to the extreme so a unikernel is an application that is linked only with those library os components",
    "start": "327680",
    "end": "334320"
  },
  {
    "text": "that it needs to run directly on the virtual hardware abstraction so you can think of this as a virtual machine with no guest os live linux",
    "start": "334320",
    "end": "341360"
  },
  {
    "text": "inside and just the application and whatever library components it needs to run",
    "start": "341360",
    "end": "347039"
  },
  {
    "text": "the original uni kernels were language specific so mirage os for example used ocamel but",
    "start": "347039",
    "end": "353039"
  },
  {
    "text": "since then there's been a lot more kind of legacy oriented unicorns things like rump run which is based on that bsd",
    "start": "353039",
    "end": "358720"
  },
  {
    "text": "as well as hermatox and osv which are uh which claim uh binary compatibility with",
    "start": "358720",
    "end": "364840"
  },
  {
    "text": "linux and so these properties that uni kernels have so things like small kernel size",
    "start": "364840",
    "end": "370639"
  },
  {
    "text": "fast boot time performance security these all seem like things that we want and those are great properties",
    "start": "370639",
    "end": "376080"
  },
  {
    "text": "however there's a big downside to the uni kernels which is the lack of full linux support",
    "start": "376080",
    "end": "381759"
  },
  {
    "text": "so for instance hermitage is only supporting 97 system calls um osb has a laundry list of",
    "start": "381759",
    "end": "389039"
  },
  {
    "text": "um kind of criteria that your application has to obey in order to be able to be run on it um and this leads",
    "start": "389039",
    "end": "395520"
  },
  {
    "text": "these these unicorn communities to have to kind of maintain and curate applications uh to run on their",
    "start": "395520",
    "end": "401600"
  },
  {
    "text": "platforms so what we what we really need to get more",
    "start": "401600",
    "end": "406639"
  },
  {
    "text": "kind of general um general use in the container community is is",
    "start": "406639",
    "end": "412960"
  },
  {
    "text": "something that that can you know is really as general as linux but has a lot of these same properties",
    "start": "412960",
    "end": "418639"
  },
  {
    "text": "and so the question we asked is can linux be as small as and boot as fast as and actually outperform uh unicorns",
    "start": "418639",
    "end": "426800"
  },
  {
    "text": "and to do this we um looked into uh uh something that we call lupine",
    "start": "426800",
    "end": "432560"
  },
  {
    "text": "linux which is trying to make linux act and look as much as possible like a",
    "start": "432560",
    "end": "439199"
  },
  {
    "text": "unikernel and i'm going to hand it over to austin now to tell you",
    "start": "439199",
    "end": "444240"
  },
  {
    "text": "exactly what we did in this study but hopefully this doesn't take too much of his thunder the answer is",
    "start": "444240",
    "end": "450880"
  },
  {
    "text": "yes we can we can get linux to be that small and uh austin is going to now tell you how",
    "start": "450880",
    "end": "458400"
  },
  {
    "text": "hello so the idea is lupine is that we take an application container",
    "start": "458400",
    "end": "464639"
  },
  {
    "text": "and we specialize the kernel just for the application so we apply unicorn-like technique to",
    "start": "464639",
    "end": "472720"
  },
  {
    "text": "specialize the linux source and get our new kernel that's called lupine and for the",
    "start": "472720",
    "end": "478720"
  },
  {
    "text": "fix that is running along with the kernel we take the application container image",
    "start": "478720",
    "end": "484080"
  },
  {
    "text": "and then directly translate that into a disk that can be used in the virtual machine",
    "start": "484080",
    "end": "492000"
  },
  {
    "text": "so unique kernels are all about specialization as definition unit kernel includes only what is needed",
    "start": "492000",
    "end": "499360"
  },
  {
    "text": "and surprisingly linux is very configurable you get more than 6000 configuration options",
    "start": "499360",
    "end": "506160"
  },
  {
    "text": "from the k-config and the options include everything you need including drivers",
    "start": "506160",
    "end": "512000"
  },
  {
    "text": "file systems network protocols and power features",
    "start": "512000",
    "end": "517760"
  },
  {
    "text": "so we specialize linux through configuration and our starting point is firecracker",
    "start": "519279",
    "end": "525279"
  },
  {
    "text": "macro vm configuration which takes roughly about five percent of the configuration space but lupine",
    "start": "525279",
    "end": "535279"
  },
  {
    "text": "uh removes more options so first we classify 283 options that is essential for the vm",
    "start": "535279",
    "end": "543200"
  },
  {
    "text": "to work and we call these options lupine base and remaining options are either",
    "start": "543200",
    "end": "548399"
  },
  {
    "text": "application specific or potentially unnecessary",
    "start": "548399",
    "end": "553600"
  },
  {
    "text": "so those remaining options are application specific and potentially",
    "start": "555200",
    "end": "561120"
  },
  {
    "text": "unnecessary because some of them are modern processing and some of them are about hardware management",
    "start": "561120",
    "end": "567519"
  },
  {
    "text": "and the reason i said it's potentially unnecessary is that we only we we can only answer this question",
    "start": "567519",
    "end": "575920"
  },
  {
    "text": "until we answer these two us two questions the first question is",
    "start": "575920",
    "end": "580959"
  },
  {
    "text": "do we need to support for multiple trust domains since it's a lightweight vm and there's only",
    "start": "580959",
    "end": "586240"
  },
  {
    "text": "one container and application are going to run on rpm so options relating to isolating and",
    "start": "586240",
    "end": "593440"
  },
  {
    "text": "accounting for processes might not be necessary such as c groups and name spaces and",
    "start": "593440",
    "end": "598480"
  },
  {
    "text": "other kernel security features and the other question is do we need to support for general",
    "start": "598480",
    "end": "604240"
  },
  {
    "text": "hardware since it's a virtual machine and virtual machines are by definition going to run a hypervisor",
    "start": "604240",
    "end": "611360"
  },
  {
    "text": "so it's not going to be run on a general hardware so it's not a surprise that micro vn",
    "start": "611360",
    "end": "618959"
  },
  {
    "text": "has already get rid of a lot of drivers and hardware related components in the kernel",
    "start": "618959",
    "end": "624160"
  },
  {
    "text": "but in lupine we removed more including things like power management and cpu",
    "start": "624160",
    "end": "630880"
  },
  {
    "text": "cpu frequencies so for application specific options i",
    "start": "630880",
    "end": "636959"
  },
  {
    "text": "can give you some examples the first obvious one is system codes so some system codes that you can",
    "start": "636959",
    "end": "644399"
  },
  {
    "text": "enable or disable and make it optional in your kernel but however if your",
    "start": "644399",
    "end": "650959"
  },
  {
    "text": "application happens to use those system codes you need to make sure they are in your kernel so for example",
    "start": "650959",
    "end": "657200"
  },
  {
    "text": "nginx server means eventfd because it's an event-driven",
    "start": "657200",
    "end": "663519"
  },
  {
    "text": "framework and i use e-paw and event of the system calls and there are other features like kernel",
    "start": "663519",
    "end": "670000"
  },
  {
    "text": "services reading from proxy's file systems are also need to be configured to meet",
    "start": "670000",
    "end": "678399"
  },
  {
    "text": "application requirement and not to mention that those crypto and compression routines",
    "start": "678399",
    "end": "689839"
  },
  {
    "text": "so the way we get an application specific lupine is that we start from lupine base the minimum kernel we get",
    "start": "690000",
    "end": "697920"
  },
  {
    "text": "and then we add application specific action gradually and this whole process is guided by application output",
    "start": "697920",
    "end": "705279"
  },
  {
    "text": "and it's sort of manual and sometimes hard and error so if the application complains that",
    "start": "705279",
    "end": "711120"
  },
  {
    "text": "this the futex facility returned an unexpected error code that you know oh there's something wrong",
    "start": "711120",
    "end": "717440"
  },
  {
    "text": "about fuel tanks and you probably need to add the uh config fuel tax back into your kernel",
    "start": "717440",
    "end": "724240"
  },
  {
    "text": "and the more you do it the sooner you can get it done but in general it's still a hard problem for",
    "start": "724240",
    "end": "730480"
  },
  {
    "text": "us so now let's take a look at the evaluation",
    "start": "730480",
    "end": "736240"
  },
  {
    "text": "and we are we are going to verify that lupine gets uh we're going to see if",
    "start": "736240",
    "end": "743360"
  },
  {
    "text": "lupine can achieve the unique kind of benefits we mentioned",
    "start": "743360",
    "end": "748720"
  },
  {
    "text": "so this is our evaluation setup and each vm is given 1vcpu and 512 megabytes of",
    "start": "748720",
    "end": "757200"
  },
  {
    "text": "of memory and our hypervisor is firecracker because microvia is the main",
    "start": "757200",
    "end": "764480"
  },
  {
    "text": "object that we compare against so we are going to measure kernel size",
    "start": "764480",
    "end": "770959"
  },
  {
    "text": "and boot time and memory footprint and",
    "start": "770959",
    "end": "776639"
  },
  {
    "text": "application performance all these good unique kernel properties",
    "start": "776639",
    "end": "782160"
  },
  {
    "text": "and to make the evaluation more interesting we are adding a more uh version of loop that we call lupine",
    "start": "782800",
    "end": "790000"
  },
  {
    "text": "general lupin general supports 20 top applications on docker hub which dominates 83 percent of the downloads",
    "start": "790000",
    "end": "797440"
  },
  {
    "text": "and to our surprise there's there are only 19 configuration options",
    "start": "797440",
    "end": "802480"
  },
  {
    "text": "that are required on the top of lupine base in order to support those 20 applications",
    "start": "802480",
    "end": "809440"
  },
  {
    "text": "so we added a new option a new version of blueprint now we call it loophole general in the",
    "start": "809440",
    "end": "814880"
  },
  {
    "text": "evaluation so first kernel image size we see that the",
    "start": "814880",
    "end": "821360"
  },
  {
    "text": "configuration is very very effective because lupine is already is only four",
    "start": "821360",
    "end": "827519"
  },
  {
    "text": "megabytes and it's only 27",
    "start": "827519",
    "end": "832959"
  },
  {
    "text": "of the microvia in size and lupine general the one that supports 20",
    "start": "832959",
    "end": "838079"
  },
  {
    "text": "applications is only slightly larger than the loop pi and it's still much smaller than micro vn",
    "start": "838079",
    "end": "844880"
  },
  {
    "text": "and when comparing to uni kernel systems lupine general is still smaller than some unique",
    "start": "844880",
    "end": "850800"
  },
  {
    "text": "kernels including hermitage and osb",
    "start": "850800",
    "end": "856000"
  },
  {
    "text": "and for bhutan the bhutan is measured by an idol port written from the guest notifying that the fi the the hypervisor",
    "start": "856000",
    "end": "864560"
  },
  {
    "text": "that the boo has complete and we see that lupine boots much faster than micro bn",
    "start": "864560",
    "end": "872000"
  },
  {
    "text": "and lupine general is it's also uh slightly slower than lupine while",
    "start": "872000",
    "end": "879040"
  },
  {
    "text": "she'll offer for micro vm a lot and when comparing to unique kernels lupine",
    "start": "879040",
    "end": "885760"
  },
  {
    "text": "general still boots faster than hermitage and osb uh these two",
    "start": "885760",
    "end": "894079"
  },
  {
    "text": "unicorn systems and be comparable to the others and for memory footprint the",
    "start": "894079",
    "end": "901040"
  },
  {
    "text": "way we measure memory footprint is that we try to find the minimum amount of memory that is required",
    "start": "901040",
    "end": "908800"
  },
  {
    "text": "for the application vm to work so the way we do it is that we repeatedly test",
    "start": "908800",
    "end": "914320"
  },
  {
    "text": "application with decreasing memory allocation",
    "start": "914320",
    "end": "920079"
  },
  {
    "text": "so when we keep decreasing the memory to a point the application will stop",
    "start": "921839",
    "end": "927760"
  },
  {
    "text": "working so at that point we know this is the minimum amount of",
    "start": "927760",
    "end": "932800"
  },
  {
    "text": "memory that your system needs so we found that the we do that",
    "start": "932800",
    "end": "939279"
  },
  {
    "text": "we do this evaluation three for three different applications including hello world nginx and radius",
    "start": "939279",
    "end": "946720"
  },
  {
    "text": "and we found that lupine and lupine general saves uh roughly about 28",
    "start": "946720",
    "end": "953759"
  },
  {
    "text": "in terms of minimum required memory compared to micro vm",
    "start": "953759",
    "end": "960639"
  },
  {
    "text": "and when comparing to other unique kernel systems it still comes it's still comparable to",
    "start": "962000",
    "end": "969519"
  },
  {
    "text": "unicorn resistance but sometimes those unique kernel systems are",
    "start": "969519",
    "end": "975199"
  },
  {
    "text": "are some locations are not supported by those unique kernels so that's why we uh escape the",
    "start": "975199",
    "end": "981360"
  },
  {
    "text": "evaluation and so for application performance we",
    "start": "981360",
    "end": "987040"
  },
  {
    "text": "measure radius and nginx and the throughput is normalized to micro vm and we see that",
    "start": "987040",
    "end": "994839"
  },
  {
    "text": "lupine outperforms micro vm by up to 29 percent and surprisingly lupine general is just",
    "start": "994839",
    "end": "1003839"
  },
  {
    "text": "robot general just as good as lupine and some and for the other unicorn",
    "start": "1003839",
    "end": "1010079"
  },
  {
    "text": "systems they are either performing not so well",
    "start": "1010079",
    "end": "1015360"
  },
  {
    "text": "or just doesn't run application at all",
    "start": "1015360",
    "end": "1021360"
  },
  {
    "text": "and here's some related work that people trying to leverage linux to achieve some",
    "start": "1023360",
    "end": "1028880"
  },
  {
    "text": "unique kernel benefits including live vm x containers and ukl and there are some studies",
    "start": "1028880",
    "end": "1036558"
  },
  {
    "text": "about how you can how much security benefits you can get by configuring your",
    "start": "1036559",
    "end": "1042000"
  },
  {
    "text": "kernel so for example you see that oh 85 percent of the attack surface can be",
    "start": "1042000",
    "end": "1047280"
  },
  {
    "text": "reduced via configuration so now i'm going to segue back to daniel",
    "start": "1047280",
    "end": "1054240"
  },
  {
    "text": "for opening challenges okay great thanks austin um",
    "start": "1054240",
    "end": "1061679"
  },
  {
    "text": "so just to kind of give a bit of a summary about some of the some of the key takeaways that we get from that",
    "start": "1061679",
    "end": "1067919"
  },
  {
    "text": "evaluation that that austin showed us um the first one is that is that specialization is really important so if",
    "start": "1067919",
    "end": "1074240"
  },
  {
    "text": "you remember um what we were talking about which was that we want to have this",
    "start": "1074240",
    "end": "1079280"
  },
  {
    "text": "this guest vm as well as the monitor be as lightweight as possible so we can get these properties that are so important",
    "start": "1079280",
    "end": "1085600"
  },
  {
    "text": "for container-like workloads specialization is really key so what we found was",
    "start": "1085600",
    "end": "1091679"
  },
  {
    "text": "that we could get 73 smaller image size 59 faster boot time 28 lower memory",
    "start": "1091679",
    "end": "1098559"
  },
  {
    "text": "footprint and 33 higher throughput than the state-of-the-art micro vm so what this means is that even",
    "start": "1098559",
    "end": "1105919"
  },
  {
    "text": "though uh in the context of of aws firecracker the kernel has already been slimmed down",
    "start": "1105919",
    "end": "1112880"
  },
  {
    "text": "to something that's fairly small even with that um there's a lot of performance that is left on the table",
    "start": "1112880",
    "end": "1119120"
  },
  {
    "text": "that uh that we could possibly take through specialization the other point that i wanted to make",
    "start": "1119120",
    "end": "1125520"
  },
  {
    "text": "was that um even though specialization is important um specialization",
    "start": "1125520",
    "end": "1130559"
  },
  {
    "text": "per individual applications which is what we were showing in that evaluation what austin was showing us",
    "start": "1130559",
    "end": "1136799"
  },
  {
    "text": "specialization per that each application may not be quite so important and this is actually",
    "start": "1136799",
    "end": "1142000"
  },
  {
    "text": "really good news um what this means is that this process of trying to figure out what exactly the",
    "start": "1142000",
    "end": "1148720"
  },
  {
    "text": "configuration the most lightweight configuration for each application is uh may not be necessary",
    "start": "1148720",
    "end": "1154240"
  },
  {
    "text": "so for instance we found that the the lupine general which had you know which covered",
    "start": "1154240",
    "end": "1159679"
  },
  {
    "text": "um 83 percent of downloaded apps from docker hub um had almost four percent reduction in",
    "start": "1159679",
    "end": "1165679"
  },
  {
    "text": "performance um from the kind of targeted manual um specialization per application",
    "start": "1165679",
    "end": "1173360"
  },
  {
    "text": "so that so that's again so that's a really good news in terms of being able",
    "start": "1173360",
    "end": "1178400"
  },
  {
    "text": "to run and be able to apply specialization in a more general",
    "start": "1178400",
    "end": "1183520"
  },
  {
    "text": "uh general setting and really um these are the challenges and these are the discussions that we wanted to bring",
    "start": "1183520",
    "end": "1189919"
  },
  {
    "text": "up to the to the broader community today is how do we get these special specialization benefits into the",
    "start": "1189919",
    "end": "1196640"
  },
  {
    "text": "community so we know what they are now we've measured them we've seen them um and we want to be able to get those",
    "start": "1196640",
    "end": "1202559"
  },
  {
    "text": "into the micro vm community so that our vms are even less like that turtle that we saw",
    "start": "1202559",
    "end": "1207679"
  },
  {
    "text": "at the start and and more like i don't know the the future i guess um",
    "start": "1207679",
    "end": "1212799"
  },
  {
    "text": "so uh but unfortunately there are a number of challenges that we do not",
    "start": "1212799",
    "end": "1218880"
  },
  {
    "text": "yet know how to solve so the first one is how how we know",
    "start": "1218880",
    "end": "1223919"
  },
  {
    "text": "whether or not this lupine general uh configuration is general enough for the",
    "start": "1223919",
    "end": "1230240"
  },
  {
    "text": "uh for you know a wide variety of workloads so i mentioned that it was a great thing",
    "start": "1230240",
    "end": "1237679"
  },
  {
    "text": "that we didn't have to do the per application specialization but there's always this this question of",
    "start": "1237679",
    "end": "1243919"
  },
  {
    "text": "if we give you a specialized configuration will it work for your workload and we don't know how to guarantee that um so you know",
    "start": "1243919",
    "end": "1251120"
  },
  {
    "text": "any kind of ideas and uh and things things like that from the community would be very happy to have",
    "start": "1251120",
    "end": "1257760"
  },
  {
    "text": "um either you know this could go in a few different directions it could go towards trying to discover exactly what",
    "start": "1257760",
    "end": "1264799"
  },
  {
    "text": "uh requirements from the from the guest kernels are needed versus uh some fallback measure mechanisms what",
    "start": "1264799",
    "end": "1271600"
  },
  {
    "text": "do you do if you do over specialize i think there's a lot of opportunity there um for for future work um",
    "start": "1271600",
    "end": "1278559"
  },
  {
    "text": "the second challenge that i wanted to point out is that um while the experiments that we showed",
    "start": "1278559",
    "end": "1285440"
  },
  {
    "text": "show demonstrated a big improvement um these were done kind of outside of a",
    "start": "1285440",
    "end": "1292159"
  },
  {
    "text": "lot of the pieces of the container ecosystem and the container ecosystem itself might",
    "start": "1292159",
    "end": "1297200"
  },
  {
    "text": "be generating um some tension against specialization inside the micro bm",
    "start": "1297200",
    "end": "1303039"
  },
  {
    "text": "so for example if you think about something like tata containers there's an agent inside of the the vms",
    "start": "1303039",
    "end": "1309679"
  },
  {
    "text": "which is responsible for sort of managing the life cycle of the containers that are running inside these micro vms",
    "start": "1309679",
    "end": "1316159"
  },
  {
    "text": "and if you think about some of the things that we were cutting out in order to get our benefits um you know the the features of the",
    "start": "1316159",
    "end": "1323440"
  },
  {
    "text": "agent which are are much more kind of like um system like features rather than application like",
    "start": "1323440",
    "end": "1329840"
  },
  {
    "text": "features may be pushing uh towards a more general configuration whereas the specialization that we were",
    "start": "1329840",
    "end": "1336240"
  },
  {
    "text": "advocating for is pushing towards less of a system-like configuration and more of a you know specialized",
    "start": "1336240",
    "end": "1342159"
  },
  {
    "text": "application like uh configuration so i think that there's this kind of uh tension here",
    "start": "1342159",
    "end": "1348000"
  },
  {
    "text": "that that is is not not super well understood uh at this point and uh another interesting",
    "start": "1348000",
    "end": "1354080"
  },
  {
    "text": "area for future work is how we can sort of look at the agent design",
    "start": "1354080",
    "end": "1359360"
  },
  {
    "text": "how how we can build these agents integrate with the rest of the ecosystem without kind of uh throwing away all the",
    "start": "1359360",
    "end": "1366799"
  },
  {
    "text": "specialization benefits so um with that um you know we're really",
    "start": "1366799",
    "end": "1372720"
  },
  {
    "text": "happy to have um have had the opportunity to uh talk to the community like this",
    "start": "1372720",
    "end": "1378320"
  },
  {
    "text": "and we hope that uh that we can you know continue this conversation about how we can take these",
    "start": "1378320",
    "end": "1384960"
  },
  {
    "text": "specialization insights and apply them not just to monitors but to the entire virtualization staff",
    "start": "1384960",
    "end": "1391679"
  },
  {
    "text": "um if you would like more information about uh the lupine work that we had uh that",
    "start": "1391679",
    "end": "1398320"
  },
  {
    "text": "austin presented um we do have a paper in neurosys 2020 that you can check out there our",
    "start": "1398320",
    "end": "1405120"
  },
  {
    "text": "configurations and our kernel are open source um at the github",
    "start": "1405120",
    "end": "1410320"
  },
  {
    "text": "link posted and feel free to email either myself um dan williams which is dj",
    "start": "1410320",
    "end": "1417760"
  },
  {
    "text": "william usibm.com or austin hckuo2 illinois.edu",
    "start": "1417760",
    "end": "1424960"
  },
  {
    "text": "thank you and have a nice day",
    "start": "1424960",
    "end": "1431840"
  },
  {
    "text": "okay are we are we on yes i think right all right great so so thank you for",
    "start": "1436400",
    "end": "1442880"
  },
  {
    "text": "everybody for um for listening to the uh the recorded part of the talk and uh now we're gonna do a little bit of uh",
    "start": "1442880",
    "end": "1449200"
  },
  {
    "text": "of the questions that have been coming in um so one of the questions here is about",
    "start": "1449200",
    "end": "1456159"
  },
  {
    "text": "the trial and error process of increment incrementally adding dependencies and trying to really trying",
    "start": "1456159",
    "end": "1462480"
  },
  {
    "text": "to figure out um what that maximum amount of specialization that you can get without",
    "start": "1462480",
    "end": "1468799"
  },
  {
    "text": "breaking um without breaking compatibility with your application and uh you know it",
    "start": "1468799",
    "end": "1474640"
  },
  {
    "text": "was pointed out in the question that um already with things like alpine linux this is this is very trial and error",
    "start": "1474640",
    "end": "1480640"
  },
  {
    "text": "and um it's it's a it's kind of a difficult problem to solve in general and um i think this is a really great",
    "start": "1480640",
    "end": "1486799"
  },
  {
    "text": "point um so i just wanted to share a couple of ideas that we've had uh related to how how you could go about",
    "start": "1486799",
    "end": "1494559"
  },
  {
    "text": "trying to do this so i think one thing is um if you think about perhaps",
    "start": "1494559",
    "end": "1501120"
  },
  {
    "text": "somehow tying this into like a ci cd environment or something like that it might be possible to automatically",
    "start": "1501120",
    "end": "1507279"
  },
  {
    "text": "try different uh kernel configurations in your micro vm and and just you know see if your test cases are are",
    "start": "1507279",
    "end": "1514320"
  },
  {
    "text": "actually happening i don't know of people who are actually doing this in practice um but i think as as we look at",
    "start": "1514320",
    "end": "1521120"
  },
  {
    "text": "specialization more especially for micro vms i think it's going to become more important um the other idea that could happen is",
    "start": "1521120",
    "end": "1527919"
  },
  {
    "text": "um having some kind of like reactionary approach so it's possible that at run time you",
    "start": "1527919",
    "end": "1533360"
  },
  {
    "text": "could you could actually switch out to a more more general version of the kernel the",
    "start": "1533360",
    "end": "1539440"
  },
  {
    "text": "implications on performance on security are a little bit questionable there",
    "start": "1539440",
    "end": "1545120"
  },
  {
    "text": "but but that's that that's another case and then finally a third a third idea here is that you",
    "start": "1545120",
    "end": "1552240"
  },
  {
    "text": "could potentially take something that you already have about the application so for example if you have a setcomp",
    "start": "1552240",
    "end": "1557760"
  },
  {
    "text": "profile which says um you know basically my application is no longer going to use",
    "start": "1557760",
    "end": "1563039"
  },
  {
    "text": "these system calls you could use that also as a way to guide your",
    "start": "1563039",
    "end": "1568480"
  },
  {
    "text": "specialization of the kernel to some extent um austin do you want to take do you have anything else on that or do you",
    "start": "1568480",
    "end": "1574559"
  },
  {
    "text": "want to take the next one yeah i can take care of the next one so another question that people have is",
    "start": "1574559",
    "end": "1580559"
  },
  {
    "text": "that can we use some sort of tracing mechanism to figure out what kernel",
    "start": "1580559",
    "end": "1586480"
  },
  {
    "text": "configuration options that application needs so out to automate this",
    "start": "1586480",
    "end": "1591600"
  },
  {
    "text": "uh process to get it to get a loop configuration and yes we can do that and i did some",
    "start": "1591600",
    "end": "1597600"
  },
  {
    "text": "work that is related to that before but one insight i get from a work is that",
    "start": "1597600",
    "end": "1604320"
  },
  {
    "text": "sometimes you get false positives so for example your application does not need security",
    "start": "1604320",
    "end": "1612400"
  },
  {
    "text": "features like kpti but if you use those kind of tracing",
    "start": "1612400",
    "end": "1617679"
  },
  {
    "text": "approach you get like whatever that is used but not necessary but not essentially necessary",
    "start": "1617679",
    "end": "1624720"
  },
  {
    "text": "so yes you can do that but for the purpose of lupine we want to specialize",
    "start": "1624720",
    "end": "1629760"
  },
  {
    "text": "the kernel to that extreme so that's why we choose this manual way",
    "start": "1629760",
    "end": "1636080"
  },
  {
    "text": "yeah yeah it's a good point because so some of the things when you're specializing",
    "start": "1636080",
    "end": "1641120"
  },
  {
    "text": "are are um you know just functionality things like you know inclusion or not inclusion of a system called",
    "start": "1641120",
    "end": "1647120"
  },
  {
    "text": "implementation is is a very kind of straightforward thing that may or may not work you know inclusion or not inclusion of the the",
    "start": "1647120",
    "end": "1653840"
  },
  {
    "text": "pocketfest or the cfs for example i mean these things are you know they're very binary um",
    "start": "1653840",
    "end": "1659279"
  },
  {
    "text": "they either work or they don't but there are some other things that um austin was alluding to here which are a",
    "start": "1659279",
    "end": "1665120"
  },
  {
    "text": "little bit more complex or more difficult to think about so it might be that you want a particular file",
    "start": "1665120",
    "end": "1671200"
  },
  {
    "text": "system that has certain properties but it's under the same file system api as some other file system so if you go from",
    "start": "1671200",
    "end": "1678240"
  },
  {
    "text": "ext4 to gxt2 esd2 is potentially a simpler file",
    "start": "1678240",
    "end": "1684000"
  },
  {
    "text": "system but you might be losing a lot of the benefits from the xd4 without even realizing it so these are some of the",
    "start": "1684000",
    "end": "1690080"
  },
  {
    "text": "other kind of nuances that go on into some of these decisions um and especially like you know",
    "start": "1690080",
    "end": "1696240"
  },
  {
    "text": "you know this ext example might be a little bit contrived but especially when you start thinking about um security and uh security options that",
    "start": "1696240",
    "end": "1703279"
  },
  {
    "text": "you may want in the kernel that are you know enabled or disabled but you can't necessarily",
    "start": "1703279",
    "end": "1708720"
  },
  {
    "text": "your application works either way it's just maybe it's working in a less secure uh environment",
    "start": "1708720",
    "end": "1715200"
  },
  {
    "text": "and uh some questions are asking about if we open source the project and yes we we do",
    "start": "1717919",
    "end": "1724720"
  },
  {
    "text": "and the lupine is now open source at a link i just published",
    "start": "1724720",
    "end": "1731520"
  },
  {
    "text": "so feel free to check it out yeah so there's another question on here",
    "start": "1731520",
    "end": "1737600"
  },
  {
    "text": "about um using bpf trace to record the system calls and the open files",
    "start": "1737600",
    "end": "1742799"
  },
  {
    "text": "um so i i don't know i don't know about you austin but um i haven't uh i haven't haven't looked at",
    "start": "1742799",
    "end": "1750080"
  },
  {
    "text": "bf bpf trace at all um i think that in in general i think that austin had made you know kind of a",
    "start": "1750080",
    "end": "1756399"
  },
  {
    "text": "comment about uh tracing like approaches and the fact that you know you're always gonna get",
    "start": "1756399",
    "end": "1761600"
  },
  {
    "text": "into this this uh situation where you're not sure if the testing that you're tracing is the same as what you actually need",
    "start": "1761600",
    "end": "1768320"
  },
  {
    "text": "um but it it uh you know i think the better the tracing framework the better the more information you can get and",
    "start": "1768320",
    "end": "1775039"
  },
  {
    "text": "you know if bpf trace is a is a way that we can have more robust tracing or",
    "start": "1775039",
    "end": "1781039"
  },
  {
    "text": "more informative tracing in some ways that could be very interesting yeah definitely",
    "start": "1781039",
    "end": "1788799"
  },
  {
    "text": "um let's see um so there's this other one down here um",
    "start": "1789120",
    "end": "1795679"
  },
  {
    "text": "do you think it's possible to automate the process of creating a kernel for a specific container",
    "start": "1795679",
    "end": "1801440"
  },
  {
    "text": "besides system call inclusion surely there are other type of configurations that could be required by apps um",
    "start": "1801440",
    "end": "1808000"
  },
  {
    "text": "yeah so i mean like you know i think that we're you know most of the questions are around the same sort of basic idea which is like you",
    "start": "1808000",
    "end": "1814960"
  },
  {
    "text": "know i think that what we've got so far is we know that that um we have some evidence now that that",
    "start": "1814960",
    "end": "1820960"
  },
  {
    "text": "that getting the uh getting this kind of specialized kernel or specialized micro vm uh image is is going to be uh valuable",
    "start": "1820960",
    "end": "1828799"
  },
  {
    "text": "in some way but um you know the questions are absolutely right the um the big challenge here is is how how",
    "start": "1828799",
    "end": "1835360"
  },
  {
    "text": "can you get these things um uh automatically um",
    "start": "1835360",
    "end": "1840559"
  },
  {
    "text": "i think one other point to make though that to drive home a little bit is um you know the degree of",
    "start": "1840559",
    "end": "1847279"
  },
  {
    "text": "specialization that um really seems to matter at least from our our evaluation that we've done in this",
    "start": "1847279",
    "end": "1853039"
  },
  {
    "text": "work is um is is you don't need specialization that",
    "start": "1853039",
    "end": "1858240"
  },
  {
    "text": "is so fine-grained that um you know you need to know every single little system call and and",
    "start": "1858240",
    "end": "1864080"
  },
  {
    "text": "do those types of things um this type of specialization that we're talking about um if you remember the the slide that",
    "start": "1864080",
    "end": "1871600"
  },
  {
    "text": "that austin showed the lupine general which was this configuration which had um basically",
    "start": "1871600",
    "end": "1879200"
  },
  {
    "text": "it was the union of all these different smaller configurations that we had together so in some sense it was a much",
    "start": "1879200",
    "end": "1885200"
  },
  {
    "text": "more general purpose specialized kernel it was still very specialized but it's more general than",
    "start": "1885200",
    "end": "1890480"
  },
  {
    "text": "uh individual ones and uh that that particular one showed us that",
    "start": "1890480",
    "end": "1896080"
  },
  {
    "text": "that maybe fine grain specialization isn't really as important as we may have originally",
    "start": "1896080",
    "end": "1901919"
  },
  {
    "text": "thought so i think when we think about some of these tools to automate how to get the specialization i think",
    "start": "1901919",
    "end": "1907519"
  },
  {
    "text": "that um it's important to to remember that that we don't need to go you know",
    "start": "1907519",
    "end": "1913360"
  },
  {
    "text": "we don't need to go too crazy with with how specialized we're looking if it's a pretty coarse grained hammer",
    "start": "1913360",
    "end": "1918960"
  },
  {
    "text": "it's probably uh it's probably good enough yep",
    "start": "1918960",
    "end": "1924159"
  },
  {
    "text": "all right so are there any um any other questions that are coming in",
    "start": "1924159",
    "end": "1929360"
  },
  {
    "text": "in here um let's see",
    "start": "1929360",
    "end": "1935840"
  },
  {
    "text": "okay so i think um oh so there yeah um so there was there was one other",
    "start": "1936399",
    "end": "1941600"
  },
  {
    "text": "question which had to do with um how how uh the micro vms in general are",
    "start": "1941600",
    "end": "1947039"
  },
  {
    "text": "tying into uh or or related to things like covert um and i think um i'm i'm not an expert",
    "start": "1947039",
    "end": "1954799"
  },
  {
    "text": "on kubrick um but i believe they they kind of play slightly different roles um",
    "start": "1954799",
    "end": "1960320"
  },
  {
    "text": "the micro vms should be thought of sort of more like uh you know container runtime um alternatives um so",
    "start": "1960320",
    "end": "1968320"
  },
  {
    "text": "for instance firecracker can be connected to things like uh container d um",
    "start": "1968320",
    "end": "1974399"
  },
  {
    "text": "with firecracker continuity um i think that um another thing that that is related to",
    "start": "1974399",
    "end": "1980559"
  },
  {
    "text": "this is that the uh the the the containers themselves um you know they they have uh",
    "start": "1980559",
    "end": "1988640"
  },
  {
    "text": "certain rich functionalities that that sometimes the isolation boundary can get in the way of",
    "start": "1988640",
    "end": "1994080"
  },
  {
    "text": "and um i think that another point which um you know is a big area of of interest",
    "start": "1994080",
    "end": "2000640"
  },
  {
    "text": "to us is how how when you're in this more isolated environment how do you still",
    "start": "2000640",
    "end": "2007039"
  },
  {
    "text": "manage to support a lot of these container-like functionalities that you need",
    "start": "2007039",
    "end": "2013279"
  },
  {
    "text": "so in some sense some of that may be at odds with what we've been showing",
    "start": "2013279",
    "end": "2018640"
  },
  {
    "text": "today we've been showing that um things like um we've been showing",
    "start": "2018640",
    "end": "2023840"
  },
  {
    "text": "that things like you know specialization can",
    "start": "2023840",
    "end": "2029760"
  },
  {
    "text": "can give you a lot of benefits but if you if you need to put in some of these more general type of um uh",
    "start": "2029760",
    "end": "2037360"
  },
  {
    "text": "protections or these these general um uh general container runtime support",
    "start": "2037360",
    "end": "2044399"
  },
  {
    "text": "things they might might be at odds so these are things like having agents like the cata agent inside the vm and",
    "start": "2044399",
    "end": "2050158"
  },
  {
    "text": "things like that so we're sort of interested in that trade-off as well um i think we're at the end of the",
    "start": "2050159",
    "end": "2056320"
  },
  {
    "text": "questions um so uh thank you all for for coming to the to the session and um we're gonna be",
    "start": "2056320",
    "end": "2063358"
  },
  {
    "text": "hanging out on the uh the runtime slack yeah um and we'll be there for",
    "start": "2063359",
    "end": "2068720"
  },
  {
    "text": "for a little while so if you have further questions or you want further discussions um we're more than happy to uh to hear your",
    "start": "2068720",
    "end": "2074480"
  },
  {
    "text": "thoughts so thank you and have a nice day thank you bye",
    "start": "2074480",
    "end": "2081599"
  }
]