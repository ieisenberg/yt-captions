[
  {
    "text": "hi everyone i'm u very happy to be here did you enjoy coupon so",
    "start": "480",
    "end": "6620"
  },
  {
    "text": "[Music] far oh okay i did enjoy CubeCon a lot",
    "start": "6620",
    "end": "13120"
  },
  {
    "text": "last night it was it was really good and uh yeah this coupon is very",
    "start": "13120",
    "end": "19680"
  },
  {
    "text": "special to me i want to thank CNCF for for putting",
    "start": "19680",
    "end": "25119"
  },
  {
    "text": "this together after four years of working with Sanscar uh on Flagger on Flux uh",
    "start": "25119",
    "end": "34239"
  },
  {
    "text": "sometimes day and night he is from India and from Romania Bucharest there is uh",
    "start": "34239",
    "end": "39760"
  },
  {
    "text": "some overlap between us but we managed to do it um this is the first time ever",
    "start": "39760",
    "end": "45920"
  },
  {
    "text": "we met in person so",
    "start": "45920",
    "end": "50000"
  },
  {
    "text": "yay yeah so today we are going to talk about Flux ecosystem the tools around",
    "start": "53879",
    "end": "60719"
  },
  {
    "text": "Flux um don't worry we are going to talk about Flux a little bit uh at the end",
    "start": "60719",
    "end": "66000"
  },
  {
    "text": "with the road map and everything but um this session is focused around the tooling we've built around flux to",
    "start": "66000",
    "end": "73200"
  },
  {
    "text": "extend it to enrich uh the way you do githubs um and the",
    "start": "73200",
    "end": "80479"
  },
  {
    "text": "first um there are two major projects in the",
    "start": "80479",
    "end": "86240"
  },
  {
    "text": "flax organization um there is the flux project in in its current form version",
    "start": "86240",
    "end": "92840"
  },
  {
    "text": "two is the you know the continuous delivery tool powered by GitHub toolkit",
    "start": "92840",
    "end": "99439"
  },
  {
    "text": "you know all of that that's why you're here so not going to insist that much on this um and there is also flagger um it",
    "start": "99439",
    "end": "107920"
  },
  {
    "text": "is a sub project inside the organization but it can be used independently it's a",
    "start": "107920",
    "end": "113439"
  },
  {
    "text": "standalone tool it has been developed for I",
    "start": "113439",
    "end": "118719"
  },
  {
    "text": "six years um more than that seven almost seven okay seven years",
    "start": "119360",
    "end": "126360"
  },
  {
    "text": "um it's uh something that's like an add-on to Flux if you uh mix it together",
    "start": "126360",
    "end": "132879"
  },
  {
    "text": "but as I said works with any other tool out there uh that can do continuous delivery and it helps",
    "start": "132879",
    "end": "139560"
  },
  {
    "text": "you at the end of the road of everything that happens in your pipeline so can",
    "start": "139560",
    "end": "145200"
  },
  {
    "text": "think of flagger as the thing that in your production system is right there",
    "start": "145200",
    "end": "151120"
  },
  {
    "text": "before your user uh users get to interact with the new version of your app and tries really hard to you know",
    "start": "151120",
    "end": "159920"
  },
  {
    "text": "protect you from uh mistakes uh it does things like",
    "start": "159920",
    "end": "165200"
  },
  {
    "text": "automatically roll back um it it can you know shift traffic from one side to the",
    "start": "165200",
    "end": "171599"
  },
  {
    "text": "other uh it implements a lot of deployment strategies that Kubernetes",
    "start": "171599",
    "end": "179120"
  },
  {
    "text": "itself does not uh is not capable of the the Kubernetes uh deployment controller",
    "start": "179120",
    "end": "184159"
  },
  {
    "text": "so I can think about if if flux is a is an extension of Kubernetes API in",
    "start": "184159",
    "end": "191040"
  },
  {
    "text": "terms of watching the external world being a git repository or a container registry",
    "start": "191040",
    "end": "198800"
  },
  {
    "text": "or even an S3 bucket or a helm chart in a container registry so flux does that",
    "start": "198800",
    "end": "203920"
  },
  {
    "text": "which is the outside world then it brings all those changes in inside the cluster",
    "start": "203920",
    "end": "210080"
  },
  {
    "text": "if those changes would have been automatically deployed to all your users",
    "start": "210080",
    "end": "215280"
  },
  {
    "text": "and you had a problem in there you will be affecting everyone right",
    "start": "215280",
    "end": "221920"
  },
  {
    "text": "so flagger solves this part where let's say in um in this workflow",
    "start": "221920",
    "end": "228560"
  },
  {
    "text": "plug scans the container registry sees oh there is a new version of an application let me go into git and",
    "start": "228560",
    "end": "236400"
  },
  {
    "text": "update the image tag from version one to version two and so this is step one what flux",
    "start": "236400",
    "end": "243920"
  },
  {
    "text": "image automation does it just commits to get and you can run flux image automation on not in your production",
    "start": "243920",
    "end": "250640"
  },
  {
    "text": "cluster So you can run it outside and you should be running it outside um it's like a dependabot if you want for for",
    "start": "250640",
    "end": "257440"
  },
  {
    "text": "Kubernetes workloads then the other part of Flux is hey there is a change in the",
    "start": "257440",
    "end": "262720"
  },
  {
    "text": "desired state now I need to deploy a new version so it applies that change on the",
    "start": "262720",
    "end": "268680"
  },
  {
    "text": "cluster then flagger if you've set up flagger on the cluster it will say oh you want to",
    "start": "268680",
    "end": "275280"
  },
  {
    "text": "deploy a new version i'm not going to let the Kubernetes deployment controller kick off i'm going to take over and",
    "start": "275280",
    "end": "283360"
  },
  {
    "text": "based on a policy it's a Canary custom resource uh Sanskar will will show you",
    "start": "283360",
    "end": "288400"
  },
  {
    "text": "that later on uh based on that policy Flagger will starts to shift traffic a",
    "start": "288400",
    "end": "294960"
  },
  {
    "text": "little bit towards the new version um test it out with metrics and so on um",
    "start": "294960",
    "end": "301600"
  },
  {
    "text": "and at the end of that analysis it says okay according to your defined SLOs's",
    "start": "301600",
    "end": "308479"
  },
  {
    "text": "the new version is good now I'm going to roll out to to the whole user base and that's how uh the deployment ends so",
    "start": "308479",
    "end": "316320"
  },
  {
    "text": "basically flagger disconnects uh continuous deployment from the actual",
    "start": "316320",
    "end": "322000"
  },
  {
    "text": "release right if you if with a continuous delivery tool you you continuously deploy changes",
    "start": "322000",
    "end": "329600"
  },
  {
    "text": "um Flagger does it in a disconnected way where releasing becomes something else",
    "start": "329600",
    "end": "335280"
  },
  {
    "text": "and releasing means doing it progressively doing it with guard delays so you know your your users are less",
    "start": "335280",
    "end": "343039"
  },
  {
    "text": "affected by um by mistakes now we have we have this",
    "start": "343039",
    "end": "350240"
  },
  {
    "text": "uh in place now with flux and flagger and and Sanskar will talk about flagger",
    "start": "350240",
    "end": "355360"
  },
  {
    "text": "after that I'm going to demo flagger for you today after that I'm going to talk",
    "start": "355360",
    "end": "360639"
  },
  {
    "text": "about um another ecosystem tool called flux operator which acts at the CI level",
    "start": "360639",
    "end": "368639"
  },
  {
    "text": "uh up there when you do a commit change you open a pull request with that change",
    "start": "368639",
    "end": "375199"
  },
  {
    "text": "and maybe you don't want to end up in production to actually see that whatever",
    "start": "375199",
    "end": "380800"
  },
  {
    "text": "is happening on the Kubernetes cluster is not that good uh and basically flux",
    "start": "380800",
    "end": "386639"
  },
  {
    "text": "operator can watch pull requests watch the registry and create for you FML",
    "start": "386639",
    "end": "392080"
  },
  {
    "text": "environments where you can actually test the thing before you merge it but you",
    "start": "392080",
    "end": "397199"
  },
  {
    "text": "know as as always doesn't matter how much testing we are doing on our test",
    "start": "397199",
    "end": "402639"
  },
  {
    "text": "testing environment staging environment there is always the chance we are going",
    "start": "402639",
    "end": "407919"
  },
  {
    "text": "to break production so flaggeries is a core part of that and Sanskar please uh",
    "start": "407919",
    "end": "414319"
  },
  {
    "text": "go ahead uh right so just a quick show of hands how many of you are like",
    "start": "414319",
    "end": "419840"
  },
  {
    "text": "actively using flagger uh in your Kubernetes clusters okay I see a few hands so so there is some bunch of",
    "start": "419840",
    "end": "426560"
  },
  {
    "text": "exciting stuff that happened over the last few months uh we added support for we were the first ones to add support",
    "start": "426560",
    "end": "432000"
  },
  {
    "text": "for gateway API and in uh true fashion in that we added support for AWS gateway",
    "start": "432000",
    "end": "437440"
  },
  {
    "text": "API as well and there are a bunch of other things that we did you can see them on the screen but there are two main things that we're really excited to",
    "start": "437440",
    "end": "444240"
  },
  {
    "text": "uh introduce here one is support for K native um K native has been on our road map for a very long time uh a lot of",
    "start": "444240",
    "end": "450960"
  },
  {
    "text": "users love K native because it's of their whole serverless architecture um and integrating with K native is a",
    "start": "450960",
    "end": "456639"
  },
  {
    "text": "challenge because they have their own deployment model right they don't use cub they use kubernetes deployments but they have their own layer around it um",
    "start": "456639",
    "end": "463759"
  },
  {
    "text": "so it was a bit of a challenge to get there uh but we managed to do it uh and the way it works is uh is actually a bit",
    "start": "463759",
    "end": "470560"
  },
  {
    "text": "different than how other uh networking technologies work so if you were to use this with let's say a gateway API you",
    "start": "470560",
    "end": "476560"
  },
  {
    "text": "would define some networking object like a route or something which can uh you know spread HTTP traffic here instead of",
    "start": "476560",
    "end": "483440"
  },
  {
    "text": "targeting the Kubernetes deployment you target the K native service itself and it's actually very easy to get started",
    "start": "483440",
    "end": "488960"
  },
  {
    "text": "you deploy a K native service and then you create this K object and then you're off to the races um and uh by the way",
    "start": "488960",
    "end": "497039"
  },
  {
    "text": "this was a community uh contributed feature so a big shout out to the community for contributing this",
    "start": "497039",
    "end": "503720"
  },
  {
    "text": "feature um and there is one more thing which I would like to talk about and it's a sort of a problem uh but before",
    "start": "503720",
    "end": "509759"
  },
  {
    "text": "we dive into the problem I wanted to explain how we do progressive delivery today um so if you think about it it's",
    "start": "509759",
    "end": "516320"
  },
  {
    "text": "pretty simple right you have a primary workload and a canary workload in this diagram the blue one is the primary one",
    "start": "516320",
    "end": "521919"
  },
  {
    "text": "and the green one is the canary um so what you do is you slowly and slowly start shifting traffic towards the green",
    "start": "521919",
    "end": "528080"
  },
  {
    "text": "one so first at 5% then at 10% and then until you're satisfied that the new",
    "start": "528080",
    "end": "533120"
  },
  {
    "text": "version is working perfectly fine it's all good uh you keep shifting traffic and then you start directing all of your",
    "start": "533120",
    "end": "539200"
  },
  {
    "text": "traffic u to the green deployment um so Flagger does all of",
    "start": "539200",
    "end": "545120"
  },
  {
    "text": "this for you it automates it fully it can hook into Prometheus a bunch of other metric providers uh fully",
    "start": "545120",
    "end": "550160"
  },
  {
    "text": "automates this for you um but one asterisk here is that the weights are",
    "start": "550160",
    "end": "556240"
  },
  {
    "text": "actually random uh as in you can't define which user gets routed to what um",
    "start": "556240",
    "end": "562160"
  },
  {
    "text": "deployment so uh uh so if we apply that uh analogy to this next slide so on the",
    "start": "562160",
    "end": "568720"
  },
  {
    "text": "left hand side it's the old Spotify UI and the right hand one this I pulled off Google and the right one one is a",
    "start": "568720",
    "end": "573920"
  },
  {
    "text": "screenshot of my Spotify uh application um so if you think about it if you if if",
    "start": "573920",
    "end": "580160"
  },
  {
    "text": "the team were to apply progressive delivery to this uh scenario a user would first get directed to the left",
    "start": "580160",
    "end": "586800"
  },
  {
    "text": "hand side UI which is the old one right and then during the uh fa during the life cycle of a canary analysis they",
    "start": "586800",
    "end": "593600"
  },
  {
    "text": "would they would end up you know seeing the right hand side but then they would also switch back to the left hand side",
    "start": "593600",
    "end": "598880"
  },
  {
    "text": "because traffic distribution is random you can't really control who sees what um that's a big problem like you don't",
    "start": "598880",
    "end": "604880"
  },
  {
    "text": "want users to have an inconsistent user experience you want them like you want them to have a consistent user experience where they are comfortable",
    "start": "604880",
    "end": "610800"
  },
  {
    "text": "with what they're seeing so but how do we solve this right um so we came up with a new sort of deployment strategy",
    "start": "610800",
    "end": "617839"
  },
  {
    "text": "which combines weighted routing with session affinity so session affinity is nothing new it's been well established",
    "start": "617839",
    "end": "624240"
  },
  {
    "text": "we know that if you want users to uh continuously hit a particular workload or particular service you use session",
    "start": "624240",
    "end": "630959"
  },
  {
    "text": "affinity which introduces stickiness uh right so what we thought of was what if",
    "start": "630959",
    "end": "636000"
  },
  {
    "text": "we combine weighted traffic routing with session affinity so that you still get",
    "start": "636000",
    "end": "641360"
  },
  {
    "text": "the benefit of you know slowly shifting traffic from your uh current deployment to your new deployment so that you don't",
    "start": "641360",
    "end": "647200"
  },
  {
    "text": "affect all your users all at once but once if a user is served by the Canary workload which is the new version",
    "start": "647200",
    "end": "653760"
  },
  {
    "text": "they're always served by the Canary workload so once they see the right hand side UI they will never see the left",
    "start": "653760",
    "end": "659600"
  },
  {
    "text": "hand side UI and that's that's the kind of the user experience you want to offer to the users right um so I'm going to",
    "start": "659600",
    "end": "664959"
  },
  {
    "text": "quickly demo this um and I hope the demo gods are with me",
    "start": "664959",
    "end": "670399"
  },
  {
    "text": "today um okay okay",
    "start": "671880",
    "end": "677279"
  },
  {
    "text": "so thank you uh let me know this font is visible okay um so here I have a canary",
    "start": "679640",
    "end": "688000"
  },
  {
    "text": "object already defined in a Kubernetes cluster um there's a bunch of stuff which we can like gloss over but one one",
    "start": "688000",
    "end": "693920"
  },
  {
    "text": "thing I really want to highlight here is uh this particular section here which uh defines the cookie",
    "start": "693920",
    "end": "701440"
  },
  {
    "text": "name yep yeah so this cookie name is what flagger will inject into the responses uh served by the uh canary",
    "start": "702200",
    "end": "709600"
  },
  {
    "text": "workload and that's how you actually do the stickiness thing um and flagger fully automates this all you need to",
    "start": "709600",
    "end": "714720"
  },
  {
    "text": "define is a cookie name and flagger will generate random value cookie values during the life cycle of a canary",
    "start": "714720",
    "end": "720000"
  },
  {
    "text": "analysis and here we can see that we are targeting this pod info deployment which is our target workload so let's see it",
    "start": "720000",
    "end": "725839"
  },
  {
    "text": "in action right um so I have STTO ingress gateway API set up already on this uh Kubernetes cluster and what I'm",
    "start": "725839",
    "end": "732720"
  },
  {
    "text": "going to do is uh I'm going to I'm actually running 6.0.0 as you can see here and I'm going to go ahead and uh set it to 6.0.1 so",
    "start": "732720",
    "end": "741040"
  },
  {
    "text": "basically trigger a canary roll out right and I'm going to wait for Flagger to do its magic so what's happening",
    "start": "741040",
    "end": "748240"
  },
  {
    "text": "behind the scenes is like Flagger is configuring the uh HTTP route with the",
    "start": "748240",
    "end": "753279"
  },
  {
    "text": "correct uh response headers and the cookies and everything to make sure that the sess session affinity uh takes place",
    "start": "753279",
    "end": "758800"
  },
  {
    "text": "so right now it's scaling up the canary workload uh which is running the new version that is 6.0.1 so uh let's just",
    "start": "758800",
    "end": "765440"
  },
  {
    "text": "wait while it does that and I'm going to go ahead and So I",
    "start": "765440",
    "end": "770880"
  },
  {
    "text": "have two incognito tabs here uh to like display the cookie stuff because cookies can uh get weird if you have the same",
    "start": "770880",
    "end": "776720"
  },
  {
    "text": "tab um so I'm going to go ahead and load it up here and here as",
    "start": "776720",
    "end": "784279"
  },
  {
    "text": "well okay so as you can see here it's both of them are like uh were being",
    "start": "784279",
    "end": "789839"
  },
  {
    "text": "served by the primary or initially but now they're being served by the canary and now if I like try to reload this it",
    "start": "789839",
    "end": "795600"
  },
  {
    "text": "always hits the canary even though if you were to inspect the HTTP route uh a lot of the traffic distribution is",
    "start": "795600",
    "end": "801920"
  },
  {
    "text": "towards the primary workload but yet once uh but yet because uh this window",
    "start": "801920",
    "end": "807200"
  },
  {
    "text": "and this window as well hit the canary workload sorry hit the canary workload it always hits the canary workload you",
    "start": "807200",
    "end": "813680"
  },
  {
    "text": "always get served by the new version and this is kind of the behavior we want users to experience",
    "start": "813680",
    "end": "820759"
  },
  {
    "text": "yeah so the trick here was we want to you know progressively move traffic from",
    "start": "821839",
    "end": "828320"
  },
  {
    "text": "one site to another but we don't want users to jump back",
    "start": "828320",
    "end": "834040"
  },
  {
    "text": "so yeah it was quite challenging because you now we have like two types of",
    "start": "834040",
    "end": "839760"
  },
  {
    "text": "injecting cookies we inject cookies on the canary and you give it a name then flagger you set it random but it's not",
    "start": "839760",
    "end": "847199"
  },
  {
    "text": "random generates a unique cookie name for each canary session so every time you start a new",
    "start": "847199",
    "end": "853160"
  },
  {
    "text": "deployment everything starts from zero and then that's how we can pin users to",
    "start": "853160",
    "end": "858480"
  },
  {
    "text": "particular versions and the last addition in flagger we also create a cookie for the primary so we can do fine",
    "start": "858480",
    "end": "866240"
  },
  {
    "text": "grain load balancing between the two uh yeah this is uh this is something uh",
    "start": "866240",
    "end": "873519"
  },
  {
    "text": "Sanscar was working a lot on uh this works with gateway API it works with and",
    "start": "873519",
    "end": "878720"
  },
  {
    "text": "other other ingresses correctly Okay yep anything which supports gateway API works with that and if you use STO",
    "start": "878720",
    "end": "884880"
  },
  {
    "text": "virtual services works with that as well yeah we are I am extremely happy about",
    "start": "884880",
    "end": "890639"
  },
  {
    "text": "gateway API uh when we started flagger we had to integrate every single API like API uh solo IO API there are so",
    "start": "890639",
    "end": "899199"
  },
  {
    "text": "many other ingress yeah and gate API basically",
    "start": "899199",
    "end": "904800"
  },
  {
    "text": "uh unifies all the way you can define networking i if there is tomorrow a new",
    "start": "904800",
    "end": "910240"
  },
  {
    "text": "service service mesher or a new ingress or a new CNI out there that plays the",
    "start": "910240",
    "end": "916079"
  },
  {
    "text": "service mesh role uh we don't need to change flagger anymore so that was a great win for the",
    "start": "916079",
    "end": "922800"
  },
  {
    "text": "um cloud native community having this type of API that um you know u",
    "start": "922800",
    "end": "928800"
  },
  {
    "text": "simplifies how other tools can program traffic because this is what flagger in a way is is a traffic programmer",
    "start": "928800",
    "end": "935360"
  },
  {
    "text": "programs the traffic but it also interacts with metrics and so on thank you very much for uh for the demo give",
    "start": "935360",
    "end": "942399"
  },
  {
    "text": "it a clap to [Applause]",
    "start": "942399",
    "end": "948230"
  },
  {
    "text": "Sanskar so okay what else we have uh in the Flux system i want to give a major",
    "start": "949880",
    "end": "957120"
  },
  {
    "text": "shout out to the headline team uh they've been working I think it's one",
    "start": "957120",
    "end": "963839"
  },
  {
    "text": "year now they they've been working on this uh flux plug-in for headlamp if you don't know what headlamp is it's a uh",
    "start": "963839",
    "end": "971759"
  },
  {
    "text": "Kubernetes dashboard it used to be a sandbox project uh but they announced at",
    "start": "971759",
    "end": "977920"
  },
  {
    "text": "this con they are moving under Kubernetes SIG so they are now part of the Kubernetes project uh under",
    "start": "977920",
    "end": "986920"
  },
  {
    "text": "SIGUI which tells that you know headlap is successful uh the community is",
    "start": "986920",
    "end": "992240"
  },
  {
    "text": "growing um they are uh improving day by day the the flux plugin um recently they",
    "start": "992240",
    "end": "1000079"
  },
  {
    "text": "released uh uh an overview page for flux uh I've also seen in beta flagger um",
    "start": "1000079",
    "end": "1007839"
  },
  {
    "text": "integration in this dashboard so you can actually you see caneries moving and so on um my request to you is if you are a",
    "start": "1007839",
    "end": "1015920"
  },
  {
    "text": "PL user maybe like me you don't use UIS it's okay",
    "start": "1015920",
    "end": "1022120"
  },
  {
    "text": "uh give this a try um bring back feedback to the headline",
    "start": "1022120",
    "end": "1028798"
  },
  {
    "text": "team they'll they'll definitely appreciate it uh so yeah there is a link",
    "start": "1028799",
    "end": "1033918"
  },
  {
    "text": "there go and read our blog post uh and yeah if if any of you catch the keynote today morning they uh demoed headlamp",
    "start": "1033919",
    "end": "1040640"
  },
  {
    "text": "with flux as well so that means it's here to stay and yeah the integration is pretty strong yeah cool okay",
    "start": "1040640",
    "end": "1049080"
  },
  {
    "text": "so how much time do I have you have 12 minutes 5 minutes 12 minutes 12 minutes",
    "start": "1049080",
    "end": "1056080"
  },
  {
    "text": "okay plenty of time okay so I'm uh I'm going to say a little bit about my uh",
    "start": "1056080",
    "end": "1062880"
  },
  {
    "text": "pet project in the last year uh it's called flux operator um we've been building this for I think",
    "start": "1062880",
    "end": "1071280"
  },
  {
    "text": "I think one year uh it's me and other Flux maintainers uh under control plane it's an open source project and we we",
    "start": "1071280",
    "end": "1079360"
  },
  {
    "text": "started this adventure by uh you know the desire of open shift users to be",
    "start": "1079360",
    "end": "1085600"
  },
  {
    "text": "able to use flux in an open shift native way um so okay he said okay I'm going to",
    "start": "1085600",
    "end": "1092799"
  },
  {
    "text": "create an operator even if I was like why are we creating an operator when flux is already an operator it was like",
    "start": "1092799",
    "end": "1100120"
  },
  {
    "text": "okay uh so yeah we created flux operator uh the first the first goal of this was to",
    "start": "1100120",
    "end": "1107840"
  },
  {
    "text": "list it on the operators hub so you know it fully integrates with open shift",
    "start": "1107840",
    "end": "1112960"
  },
  {
    "text": "ecosystem uh you do click ops you click there and you install it or I don't know you can configure it uh with a",
    "start": "1112960",
    "end": "1120440"
  },
  {
    "text": "subscription uh and that's how we started so before the flux operator how people",
    "start": "1120440",
    "end": "1127360"
  },
  {
    "text": "were deploying and and bootstrapping flux was with the flux CLI or with the terapform provider so we had to come up",
    "start": "1127360",
    "end": "1134799"
  },
  {
    "text": "with a new abstraction for uh you know allowing a declarative model for",
    "start": "1134799",
    "end": "1140559"
  },
  {
    "text": "bootstrapping flux and we after after we we released it we",
    "start": "1140559",
    "end": "1147600"
  },
  {
    "text": "realized that many other users were like I'm not running on open shift but I like this idea I want to I want to switch to",
    "start": "1147600",
    "end": "1155039"
  },
  {
    "text": "it so it kind of grew from there um and we we we ended up in a place",
    "start": "1155039",
    "end": "1162160"
  },
  {
    "text": "where flux operator um streamlines uh how you can deploy",
    "start": "1162160",
    "end": "1168880"
  },
  {
    "text": "flux on hundreds of clusters is uh how you can optimize flux is very easy to do sharding all the advanced configurations",
    "start": "1168880",
    "end": "1176000"
  },
  {
    "text": "that you think of flux you can do it with the flux operator very very easy so we kind of worked on the user experience",
    "start": "1176000",
    "end": "1183200"
  },
  {
    "text": "of of that part of the of the story uh so we have this new API called the uh",
    "start": "1183200",
    "end": "1191120"
  },
  {
    "text": "flux instance that um is the thing that allows you to move",
    "start": "1191120",
    "end": "1198240"
  },
  {
    "text": "away from git like to maybe feel like uh strange to say that but githubs does not",
    "start": "1198240",
    "end": "1206000"
  },
  {
    "text": "mean you need to run the git server in your production system or at times you don't want to depend on",
    "start": "1206000",
    "end": "1214559"
  },
  {
    "text": "your uh hosted git or your self-hosted git or",
    "start": "1214559",
    "end": "1219600"
  },
  {
    "text": "whatever you are using to be that you know single point of failure when you do",
    "start": "1219600",
    "end": "1224640"
  },
  {
    "text": "anything in production and how we how you can decouple git from from your production systems especially around",
    "start": "1224640",
    "end": "1231280"
  },
  {
    "text": "continuous delivery fuse flux is through uh OC artifacts so the idea is you still",
    "start": "1231280",
    "end": "1237120"
  },
  {
    "text": "use git and for collaboration for uh change management for um history for",
    "start": "1237120",
    "end": "1245240"
  },
  {
    "text": "control but flux no longer goes and look at looks at your git repo and you you",
    "start": "1245240",
    "end": "1252480"
  },
  {
    "text": "can run in your CI a simple command called flux push so the flux cli has like docker uh commands for interacting",
    "start": "1252480",
    "end": "1259760"
  },
  {
    "text": "with a container registry you modify something in it you do uh you do a a commit a push and then",
    "start": "1259760",
    "end": "1267360"
  },
  {
    "text": "you run flux push that stores the state maybe you could sign it uh so flux can",
    "start": "1267360",
    "end": "1274320"
  },
  {
    "text": "verify that artifact so you store that state in a container registry so then if git goes down and you want to roll back",
    "start": "1274320",
    "end": "1280240"
  },
  {
    "text": "or something you can just act on the tags of a image of an OCI image right",
    "start": "1280240",
    "end": "1287039"
  },
  {
    "text": "you can still do roll backs you can still change your system even if g is",
    "start": "1287039",
    "end": "1292159"
  },
  {
    "text": "temporarily down Um another great use case for for uh for using OCI as the",
    "start": "1292159",
    "end": "1298320"
  },
  {
    "text": "desired state is when you run in uh air gap environments um flux operator was",
    "start": "1298320",
    "end": "1306559"
  },
  {
    "text": "one of the first adopters of the tool uh soon as we we launched OCI support for",
    "start": "1306559",
    "end": "1311840"
  },
  {
    "text": "it were organizations that had this uh um they are highly regulated they must",
    "start": "1311840",
    "end": "1318960"
  },
  {
    "text": "run in an air gap environment even if it's in a cloud it's still you know kind of airgapped i don't know cloud air gap",
    "start": "1318960",
    "end": "1326000"
  },
  {
    "text": "doesn't quite sound right but anyway you know what I'm talking about if you work in that uh in those organizations um",
    "start": "1326000",
    "end": "1333679"
  },
  {
    "text": "another thing that um we we wanted to improve was automatic",
    "start": "1333679",
    "end": "1340559"
  },
  {
    "text": "upgrades flux is mature enough we have proved our users in the last year that",
    "start": "1340559",
    "end": "1346320"
  },
  {
    "text": "we really care about backwards compatibility and we we even today you can upgrade from flux 0 something to the",
    "start": "1346320",
    "end": "1354080"
  },
  {
    "text": "latest version and it will work so based on this we said we need to make",
    "start": "1354080",
    "end": "1360240"
  },
  {
    "text": "automatically upgrades better how how are you going to secure your systems if you are keeping them up to date if you",
    "start": "1360240",
    "end": "1367520"
  },
  {
    "text": "if your system is very old a CV somewhere it will affect you",
    "start": "1367520",
    "end": "1372960"
  },
  {
    "text": "like it's imminent there is there is no doubt about it the the longer um you",
    "start": "1372960",
    "end": "1378400"
  },
  {
    "text": "know you run something in your infrastructure and flux runs as critical infrastructure is cluster admin is the",
    "start": "1378400",
    "end": "1383919"
  },
  {
    "text": "first thing you deploy after you create your cluster so it's like really sensitive anything there can actually",
    "start": "1383919",
    "end": "1390880"
  },
  {
    "text": "affect and take control of your whole cluster so what's the solution to this you should always keep up with the",
    "start": "1390880",
    "end": "1396400"
  },
  {
    "text": "latest release and PL operator makes this very simple uh you have their spec",
    "start": "1396400",
    "end": "1404320"
  },
  {
    "text": "distribution version you give it a server expression and that's it and you forget about it and flux operator will",
    "start": "1404320",
    "end": "1412400"
  },
  {
    "text": "keep flux up to date and I I have here are two examples on you know how you can",
    "start": "1412400",
    "end": "1418480"
  },
  {
    "text": "enable um persistent storage for flux internal artifacts",
    "start": "1418480",
    "end": "1424200"
  },
  {
    "text": "multi-tenency all the things that you currently you can do with the CLI there is no issue you have a bunch of flags",
    "start": "1424200",
    "end": "1430799"
  },
  {
    "text": "you also need some um customized overlays on the git side so instead of",
    "start": "1430799",
    "end": "1436320"
  },
  {
    "text": "doing all of that here you replace tens of thousands of YAML that you store in your repo as the flux uh system here you",
    "start": "1436320",
    "end": "1446480"
  },
  {
    "text": "just have this I don't know couple of lines of of configuration and you can",
    "start": "1446480",
    "end": "1451919"
  },
  {
    "text": "change it you can enable sharding disable sharding upgrade downgrade and and the flux operator will do the right",
    "start": "1451919",
    "end": "1458240"
  },
  {
    "text": "things for you another another goal for this was to reduce the chance",
    "start": "1458240",
    "end": "1465559"
  },
  {
    "text": "of suicide like it's very it's very easy to destroy your whole",
    "start": "1465559",
    "end": "1473400"
  },
  {
    "text": "cluster uh if you delete something in the flux system uh directory in your git",
    "start": "1473400",
    "end": "1480159"
  },
  {
    "text": "repo um there are various way [Music]",
    "start": "1480159",
    "end": "1486600"
  },
  {
    "text": "of yeah because flux is so flexible we you can do whatever including telling flux hey please delete yourself and the",
    "start": "1486600",
    "end": "1493039"
  },
  {
    "text": "whole cluster and yeah uh with flux operator you it's",
    "start": "1493039",
    "end": "1499600"
  },
  {
    "text": "actually hard to do it um really hard uh it requires a lot of uh you you",
    "start": "1499600",
    "end": "1508320"
  },
  {
    "text": "you need to try really hard to to be able to do that kind of stuff so yes it also adds some guard rays right we want",
    "start": "1508320",
    "end": "1516159"
  },
  {
    "text": "to better protect our users especially because it's flux operator you'll be",
    "start": "1516159",
    "end": "1521360"
  },
  {
    "text": "running fully automated is like githubs on autopilot mode so an autopilot should",
    "start": "1521360",
    "end": "1526400"
  },
  {
    "text": "also be defensible right it should also protect you from doing uh bad things",
    "start": "1526400",
    "end": "1533360"
  },
  {
    "text": "okay so that was the the first API with with we started with making flux easier",
    "start": "1533360",
    "end": "1540080"
  },
  {
    "text": "to install running it at scale being simple to configure it and we got to a",
    "start": "1540080",
    "end": "1546320"
  },
  {
    "text": "point where we said we want to build high level APIs on top of Flux which don't actually make sense to build them",
    "start": "1546320",
    "end": "1553520"
  },
  {
    "text": "to extend the current flux APIs there was a lot a lot of requests for example",
    "start": "1553520",
    "end": "1560200"
  },
  {
    "text": "for a flax hand release to be able to deploy from a pull request and stuff",
    "start": "1560200",
    "end": "1565520"
  },
  {
    "text": "like are we going to modify the Helm release API which should be a reflection of what Helm does and talk to what is a",
    "start": "1565520",
    "end": "1573279"
  },
  {
    "text": "pull request is not even a git concept it's a GitHub concept gitlab has merge",
    "start": "1573279",
    "end": "1578480"
  },
  {
    "text": "requests right so and and flux talks git it doesn't talk GitHub gitlab and so on",
    "start": "1578480",
    "end": "1585440"
  },
  {
    "text": "So with with flux operator and this new this new API we kind of said okay we we",
    "start": "1585440",
    "end": "1592640"
  },
  {
    "text": "can add here the fancy things that are very scope to whatever service you are",
    "start": "1592640",
    "end": "1598320"
  },
  {
    "text": "running and the goal of the resource set API is to give you this selfservice uh",
    "start": "1598320",
    "end": "1605559"
  },
  {
    "text": "environments feature where yeah self-service can mean many things to many people and in the spirit of flux we",
    "start": "1605559",
    "end": "1613279"
  },
  {
    "text": "didn't want to have the research set API being highly opinated so we don't have",
    "start": "1613279",
    "end": "1620600"
  },
  {
    "text": "um we don't impose you the idea what an FML environment means for you in this",
    "start": "1620600",
    "end": "1627520"
  },
  {
    "text": "case an FML environment means you create a new hand release in a existing nameace",
    "start": "1627520",
    "end": "1633679"
  },
  {
    "text": "every time someone opens a pull request add a label uh with the input provider",
    "start": "1633679",
    "end": "1640400"
  },
  {
    "text": "you tell flux operator hey scan this repo watch for pull requests that have a label and with the resource editor",
    "start": "1640400",
    "end": "1647679"
  },
  {
    "text": "create a hand release object for each p for each pull request that has a label",
    "start": "1647679",
    "end": "1654880"
  },
  {
    "text": "uh and use the um git sha of the pull request as the uh image tag right so you",
    "start": "1654880",
    "end": "1663520"
  },
  {
    "text": "you can change code you can change configuration in a pull request you open up a request your CI builds the image",
    "start": "1663520",
    "end": "1670960"
  },
  {
    "text": "and then then you can deploy both the code change in the container",
    "start": "1670960",
    "end": "1677679"
  },
  {
    "text": "that's packaged in the container but also the configuration change which is packaged in the Helmchart",
    "start": "1677679",
    "end": "1685840"
  },
  {
    "text": "and this example is it it implies that you have a preview",
    "start": "1685840",
    "end": "1692240"
  },
  {
    "text": "server you have a name space there for each app and you deploy there using helm",
    "start": "1692240",
    "end": "1698399"
  },
  {
    "text": "all the in all the instances for every pull request and it follows the pull request and so on but this may not work",
    "start": "1698399",
    "end": "1704080"
  },
  {
    "text": "for everybody um some people may want to create a new cluster how would you do",
    "start": "1704080",
    "end": "1710480"
  },
  {
    "text": "that you would add here in the resource set a cluster API definition and then",
    "start": "1710480",
    "end": "1715520"
  },
  {
    "text": "the hand release will have the target to that cluster so it's up to you or you",
    "start": "1715520",
    "end": "1720880"
  },
  {
    "text": "add I don't know cross crossplane uh uh definition that creates the cluster and",
    "start": "1720880",
    "end": "1727440"
  },
  {
    "text": "so on so it's not it does not forces you into telling",
    "start": "1727440",
    "end": "1733760"
  },
  {
    "text": "you what how you do FML environments gives you the tool to build that stuff and if you want you can also create an",
    "start": "1733760",
    "end": "1739840"
  },
  {
    "text": "Aspace per pull request or a cluster or a Hen release or no Helm at all and you only work with with flux customization",
    "start": "1739840",
    "end": "1746159"
  },
  {
    "text": "and so on um so yeah it's um I'm I'm quite excited",
    "start": "1746159",
    "end": "1753360"
  },
  {
    "text": "about this new way of doing uh of being able to test things before you merge",
    "start": "1753360",
    "end": "1759679"
  },
  {
    "text": "them it was I think it was one of the most high requested feature in Flux like people are saying I don't want to merge",
    "start": "1759679",
    "end": "1766880"
  },
  {
    "text": "I don't want to see it running on a cluster so yeah we are we finally have this capability uh so I please give it a",
    "start": "1766880",
    "end": "1775880"
  },
  {
    "text": "try tell us how it went um still uh early days we we want to",
    "start": "1775880",
    "end": "1782480"
  },
  {
    "text": "improve things we want to expand it more it only works with GitHub and GitLab for now if you have other Git",
    "start": "1782480",
    "end": "1790279"
  },
  {
    "text": "services you know open an issue maybe contribute uh yeah so that was that was",
    "start": "1790279",
    "end": "1796880"
  },
  {
    "text": "the flux operator how much time i think we have like 30 seconds we can okay",
    "start": "1796880",
    "end": "1802399"
  },
  {
    "text": "through this okay okay so to end um these are the things that we've",
    "start": "1802399",
    "end": "1808640"
  },
  {
    "text": "shipped in flux 2.5 uh the latest release uh for many of you running on",
    "start": "1808640",
    "end": "1814240"
  },
  {
    "text": "GitHub uh you know the request always was we want app authentification we",
    "start": "1814240",
    "end": "1820080"
  },
  {
    "text": "don't want to link flux to a personal access token um one of the flux",
    "start": "1820080",
    "end": "1825200"
  },
  {
    "text": "maintainers uh Deepty uh she works at Asia Arc uh she she contributes a lot to",
    "start": "1825200",
    "end": "1831520"
  },
  {
    "text": "Flax she helps us uh you know with with Flux maintenance she actually implemented GitHub",
    "start": "1831520",
    "end": "1837320"
  },
  {
    "text": "authentification uh and yeah give it a try if you're on GitHub now you can",
    "start": "1837320",
    "end": "1842480"
  },
  {
    "text": "decouple Flux from personal access tokens uh another thing that we've been working on and this is a long long-term",
    "start": "1842480",
    "end": "1849760"
  },
  {
    "text": "request are having having a way to define custom hell checks with common uh",
    "start": "1849760",
    "end": "1855120"
  },
  {
    "text": "expression languages so now we can do that with flux and it works with crossplane cluster API you can do many",
    "start": "1855120",
    "end": "1861600"
  },
  {
    "text": "advanced things when you do with flux you deal with flux dependencies when you say I want first to create the cluster",
    "start": "1861600",
    "end": "1868480"
  },
  {
    "text": "then some other things I want to check those other things are there uh so now you you have an an expression language",
    "start": "1868480",
    "end": "1874960"
  },
  {
    "text": "which is very cool uh it's been integrated in in Kubernetes is part of the policy um u policy agent the",
    "start": "1874960",
    "end": "1883760"
  },
  {
    "text": "built-in policy agent and we are we are working on getting more integrations",
    "start": "1883760",
    "end": "1889360"
  },
  {
    "text": "with cell influx we we think this is the future of the flux APIs if you want to extend flux in some way we will be",
    "start": "1889360",
    "end": "1896480"
  },
  {
    "text": "trying it to you know uh do it using cell which is quite powerful and more",
    "start": "1896480",
    "end": "1901919"
  },
  {
    "text": "flexible that add you know hundreds of fields to the APIs we we we kind of think cell will will work really great",
    "start": "1901919",
    "end": "1908399"
  },
  {
    "text": "in the future for us um yeah and we we also",
    "start": "1908399",
    "end": "1914270"
  },
  {
    "text": "[Music] uh completed the OCI part of FL so you",
    "start": "1914270",
    "end": "1919840"
  },
  {
    "text": "know you you you have notification controller which can go into git and say check this",
    "start": "1919840",
    "end": "1926640"
  },
  {
    "text": "commit was successfully reconciled on the cluster but if you use OCI as an intermediate layer we couldn't do that",
    "start": "1926640",
    "end": "1932640"
  },
  {
    "text": "and now we can we can with metadata so even if you use a container registry as",
    "start": "1932640",
    "end": "1938320"
  },
  {
    "text": "the desired state Flux can go back and say even if it was reconciled from a",
    "start": "1938320",
    "end": "1944240"
  },
  {
    "text": "container registry and go back to G and say yes this commit was completed successfully or it has a route um yeah",
    "start": "1944240",
    "end": "1951840"
  },
  {
    "text": "please check out our road map there are many many things coming this year we are highly focusing on on futures um yeah",
    "start": "1951840",
    "end": "1959519"
  },
  {
    "text": "that was it thank you very much for uh for being with us thank you [Music] [Applause]",
    "start": "1959519",
    "end": "1967150"
  }
]