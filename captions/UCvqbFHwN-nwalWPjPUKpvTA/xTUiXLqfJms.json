[
  {
    "text": "hello everyone and welcome to it's",
    "start": "0",
    "end": "1740"
  },
  {
    "text": "diocon 2023 my name is niranjan and I'm",
    "start": "1740",
    "end": "4920"
  },
  {
    "text": "a software engineer on the Azure",
    "start": "4920",
    "end": "6120"
  },
  {
    "text": "kubernetes service team at Microsoft I'm",
    "start": "6120",
    "end": "8700"
  },
  {
    "text": "working on the HDO add-on for AKs and",
    "start": "8700",
    "end": "10980"
  },
  {
    "text": "I've also contributed to the HDO code",
    "start": "10980",
    "end": "12780"
  },
  {
    "text": "base and documentation",
    "start": "12780",
    "end": "14460"
  },
  {
    "text": "in this presentation I'm going to be",
    "start": "14460",
    "end": "16139"
  },
  {
    "text": "covering some best practices for",
    "start": "16139",
    "end": "17640"
  },
  {
    "text": "securing egress traffic from your",
    "start": "17640",
    "end": "19080"
  },
  {
    "text": "kubernetes cluster with HDO",
    "start": "19080",
    "end": "21900"
  },
  {
    "text": "so if you're already familiar with HDO",
    "start": "21900",
    "end": "23880"
  },
  {
    "text": "you most likely know that it secures",
    "start": "23880",
    "end": "25560"
  },
  {
    "text": "communication between applications in",
    "start": "25560",
    "end": "27359"
  },
  {
    "text": "the mesh with mtls by default",
    "start": "27359",
    "end": "29640"
  },
  {
    "text": "the next step for operators is securing",
    "start": "29640",
    "end": "31920"
  },
  {
    "text": "traffic entering and exiting the mesh",
    "start": "31920",
    "end": "33660"
  },
  {
    "text": "also known as North South traffic",
    "start": "33660",
    "end": "35760"
  },
  {
    "text": "this is important because we want to",
    "start": "35760",
    "end": "37440"
  },
  {
    "text": "prevent attackers from infiltrating the",
    "start": "37440",
    "end": "38940"
  },
  {
    "text": "network or in the event that they do",
    "start": "38940",
    "end": "40860"
  },
  {
    "text": "prevent them from accessing unauthorized",
    "start": "40860",
    "end": "43079"
  },
  {
    "text": "and harmful endpoints on the internet",
    "start": "43079",
    "end": "46200"
  },
  {
    "text": "now HDO does offer several options to",
    "start": "46200",
    "end": "48719"
  },
  {
    "text": "secure control of outgoing traffic this",
    "start": "48719",
    "end": "51059"
  },
  {
    "text": "includes mesh wide settings several",
    "start": "51059",
    "end": "53100"
  },
  {
    "text": "custom resources and an egress Gateway",
    "start": "53100",
    "end": "55379"
  },
  {
    "text": "that can perform TLS origination",
    "start": "55379",
    "end": "58739"
  },
  {
    "text": "however these functionalities and",
    "start": "58739",
    "end": "60600"
  },
  {
    "text": "configurations by themselves still",
    "start": "60600",
    "end": "62280"
  },
  {
    "text": "aren't enough to fully secure outbound",
    "start": "62280",
    "end": "63840"
  },
  {
    "text": "communication",
    "start": "63840",
    "end": "65280"
  },
  {
    "text": "for instance organizations often have",
    "start": "65280",
    "end": "67260"
  },
  {
    "text": "requirements that egress traffic needs",
    "start": "67260",
    "end": "69060"
  },
  {
    "text": "to flow from dedicated nodes and be",
    "start": "69060",
    "end": "70799"
  },
  {
    "text": "logged",
    "start": "70799",
    "end": "71880"
  },
  {
    "text": "and to truly achieve defense in depth we",
    "start": "71880",
    "end": "74520"
  },
  {
    "text": "need to integrate our mess with Cloud",
    "start": "74520",
    "end": "75780"
  },
  {
    "text": "security tools such as firewalls Nat",
    "start": "75780",
    "end": "78060"
  },
  {
    "text": "Services security groups as well as",
    "start": "78060",
    "end": "80700"
  },
  {
    "text": "kubernetes Network policies",
    "start": "80700",
    "end": "84140"
  },
  {
    "text": "now let's take a look at an example of",
    "start": "84540",
    "end": "86400"
  },
  {
    "text": "how exactly its deal can integrate with",
    "start": "86400",
    "end": "88320"
  },
  {
    "text": "these external mechanisms in five steps",
    "start": "88320",
    "end": "91080"
  },
  {
    "text": "I'm going to quickly break down these",
    "start": "91080",
    "end": "92460"
  },
  {
    "text": "steps individually and highlight some",
    "start": "92460",
    "end": "94140"
  },
  {
    "text": "caveats to keep in mind throughout the",
    "start": "94140",
    "end": "95820"
  },
  {
    "text": "process",
    "start": "95820",
    "end": "96900"
  },
  {
    "text": "then we'll take a closer look at a real",
    "start": "96900",
    "end": "98759"
  },
  {
    "text": "world example of what this could look",
    "start": "98759",
    "end": "100320"
  },
  {
    "text": "like in practice",
    "start": "100320",
    "end": "101820"
  },
  {
    "text": "I've added these steps and",
    "start": "101820",
    "end": "103140"
  },
  {
    "text": "configurations to my personal GitHub",
    "start": "103140",
    "end": "104820"
  },
  {
    "text": "repository which I've linked in a",
    "start": "104820",
    "end": "106439"
  },
  {
    "text": "subsequent slide",
    "start": "106439",
    "end": "109100"
  },
  {
    "text": "so the first step is to set up our",
    "start": "110040",
    "end": "111720"
  },
  {
    "text": "firewall rules and create our cluster in",
    "start": "111720",
    "end": "113759"
  },
  {
    "text": "an Associated virtual Network or",
    "start": "113759",
    "end": "115320"
  },
  {
    "text": "subnetwork",
    "start": "115320",
    "end": "116640"
  },
  {
    "text": "few important caveats to keep in mind",
    "start": "116640",
    "end": "118380"
  },
  {
    "text": "here",
    "start": "118380",
    "end": "119340"
  },
  {
    "text": "the cluster administrator needs to",
    "start": "119340",
    "end": "120780"
  },
  {
    "text": "ensure that applications can communicate",
    "start": "120780",
    "end": "122640"
  },
  {
    "text": "with the API server and pull images from",
    "start": "122640",
    "end": "124860"
  },
  {
    "text": "Docker Hub MCR or other image registries",
    "start": "124860",
    "end": "128640"
  },
  {
    "text": "since we're setting up monitoring",
    "start": "128640",
    "end": "130200"
  },
  {
    "text": "extensions on our cluster these specific",
    "start": "130200",
    "end": "132540"
  },
  {
    "text": "endpoints need to be whitelisted as well",
    "start": "132540",
    "end": "135959"
  },
  {
    "text": "when you create our cluster we also want",
    "start": "135959",
    "end": "138300"
  },
  {
    "text": "to be sure to use a cni plugin that",
    "start": "138300",
    "end": "139980"
  },
  {
    "text": "supports kubernetes Network policies",
    "start": "139980",
    "end": "142680"
  },
  {
    "text": "additionally administrators should",
    "start": "142680",
    "end": "144540"
  },
  {
    "text": "provision a dedicated egress Gateway",
    "start": "144540",
    "end": "146400"
  },
  {
    "text": "node pool that can communicate with",
    "start": "146400",
    "end": "147959"
  },
  {
    "text": "external services",
    "start": "147959",
    "end": "149459"
  },
  {
    "text": "we apply taints to these nodes to repel",
    "start": "149459",
    "end": "151560"
  },
  {
    "text": "application pods that don't have the",
    "start": "151560",
    "end": "153300"
  },
  {
    "text": "corresponding tolerations",
    "start": "153300",
    "end": "156379"
  },
  {
    "text": "the next step is to install is DoD and",
    "start": "156599",
    "end": "159000"
  },
  {
    "text": "the egress Gateway with the following",
    "start": "159000",
    "end": "160620"
  },
  {
    "text": "specifications",
    "start": "160620",
    "end": "162180"
  },
  {
    "text": "this can be done with Helm or the istio",
    "start": "162180",
    "end": "163920"
  },
  {
    "text": "operator API though the latter is",
    "start": "163920",
    "end": "166080"
  },
  {
    "text": "discouraged",
    "start": "166080",
    "end": "167400"
  },
  {
    "text": "when installing its DOD we set the",
    "start": "167400",
    "end": "169440"
  },
  {
    "text": "outbound traffic policy mode to registry",
    "start": "169440",
    "end": "171180"
  },
  {
    "text": "only",
    "start": "171180",
    "end": "172140"
  },
  {
    "text": "this restricts workloads communication",
    "start": "172140",
    "end": "174360"
  },
  {
    "text": "to external services that have been",
    "start": "174360",
    "end": "176220"
  },
  {
    "text": "selectively added to istio service",
    "start": "176220",
    "end": "177959"
  },
  {
    "text": "registry",
    "start": "177959",
    "end": "179580"
  },
  {
    "text": "the egress Gateway should be installed",
    "start": "179580",
    "end": "181319"
  },
  {
    "text": "in its own namespace for separate",
    "start": "181319",
    "end": "182879"
  },
  {
    "text": "administrative control of the Gateway",
    "start": "182879",
    "end": "185220"
  },
  {
    "text": "also remember to apply the appropriate",
    "start": "185220",
    "end": "187140"
  },
  {
    "text": "tolerations and node selector to the",
    "start": "187140",
    "end": "188879"
  },
  {
    "text": "Gateway deployment to ensure that the",
    "start": "188879",
    "end": "190860"
  },
  {
    "text": "Gateway pod gets scheduled onto the",
    "start": "190860",
    "end": "192659"
  },
  {
    "text": "dedicated egress nodes",
    "start": "192659",
    "end": "195019"
  },
  {
    "text": "third we onboard our applications to the",
    "start": "195019",
    "end": "198000"
  },
  {
    "text": "mesh and apply the appropriate custom",
    "start": "198000",
    "end": "199680"
  },
  {
    "text": "resources",
    "start": "199680",
    "end": "201420"
  },
  {
    "text": "one thing to note here is that when",
    "start": "201420",
    "end": "203220"
  },
  {
    "text": "setting the service entries remember to",
    "start": "203220",
    "end": "205200"
  },
  {
    "text": "set the resolution to DNS so that the",
    "start": "205200",
    "end": "207300"
  },
  {
    "text": "Gateway resolves DNS for the hostname",
    "start": "207300",
    "end": "209280"
  },
  {
    "text": "that it receives in the incoming request",
    "start": "209280",
    "end": "212040"
  },
  {
    "text": "now in terms of encrypting outbound",
    "start": "212040",
    "end": "214200"
  },
  {
    "text": "traffic there are two options",
    "start": "214200",
    "end": "216360"
  },
  {
    "text": "the applications can send https requests",
    "start": "216360",
    "end": "219060"
  },
  {
    "text": "to outbound Services directly",
    "start": "219060",
    "end": "221040"
  },
  {
    "text": "or the applications can send plain text",
    "start": "221040",
    "end": "223260"
  },
  {
    "text": "requests to the Gateway and the Gateway",
    "start": "223260",
    "end": "225360"
  },
  {
    "text": "originates TLS with the external host",
    "start": "225360",
    "end": "228239"
  },
  {
    "text": "the benefit of the TLs origination",
    "start": "228239",
    "end": "230280"
  },
  {
    "text": "approach is that it gives us the",
    "start": "230280",
    "end": "231659"
  },
  {
    "text": "additional option to use authorization",
    "start": "231659",
    "end": "233340"
  },
  {
    "text": "policies",
    "start": "233340",
    "end": "234480"
  },
  {
    "text": "this allows for even more fine-grained",
    "start": "234480",
    "end": "236340"
  },
  {
    "text": "control of egress traffic",
    "start": "236340",
    "end": "239420"
  },
  {
    "text": "next we configure kubernetes Network",
    "start": "240060",
    "end": "242099"
  },
  {
    "text": "policies as we will see this ensures",
    "start": "242099",
    "end": "244920"
  },
  {
    "text": "that even if attackers bypass the proxy",
    "start": "244920",
    "end": "247080"
  },
  {
    "text": "they still can't gain unauthorized",
    "start": "247080",
    "end": "249180"
  },
  {
    "text": "access to external services",
    "start": "249180",
    "end": "251280"
  },
  {
    "text": "keep in mind that operators need to",
    "start": "251280",
    "end": "253080"
  },
  {
    "text": "apply the policies individually to each",
    "start": "253080",
    "end": "255060"
  },
  {
    "text": "namespace in which they want them",
    "start": "255060",
    "end": "256560"
  },
  {
    "text": "enforced",
    "start": "256560",
    "end": "258900"
  },
  {
    "text": "finally we need to log and monitor",
    "start": "258900",
    "end": "260760"
  },
  {
    "text": "traffic exiting the mesh and the cluster",
    "start": "260760",
    "end": "263520"
  },
  {
    "text": "to enable envoys access login we can set",
    "start": "263520",
    "end": "266340"
  },
  {
    "text": "the access log file field in the HDO",
    "start": "266340",
    "end": "268500"
  },
  {
    "text": "mesh config",
    "start": "268500",
    "end": "269759"
  },
  {
    "text": "or to enable access logging on a per",
    "start": "269759",
    "end": "271860"
  },
  {
    "text": "workload basis we can use izio's",
    "start": "271860",
    "end": "273840"
  },
  {
    "text": "Telemetry API",
    "start": "273840",
    "end": "275580"
  },
  {
    "text": "we can then view access logs and",
    "start": "275580",
    "end": "277440"
  },
  {
    "text": "firewall logs in a log analytics",
    "start": "277440",
    "end": "279419"
  },
  {
    "text": "workspace associated with our clusters",
    "start": "279419",
    "end": "281820"
  },
  {
    "text": "monitoring extension",
    "start": "281820",
    "end": "284820"
  },
  {
    "text": "now it's time to take a look at a real",
    "start": "284820",
    "end": "286740"
  },
  {
    "text": "world example of what such a setup looks",
    "start": "286740",
    "end": "288900"
  },
  {
    "text": "like in practice this demo uses HDO",
    "start": "288900",
    "end": "291780"
  },
  {
    "text": "deployed onto an AKs cluster however",
    "start": "291780",
    "end": "294240"
  },
  {
    "text": "keep in mind that these general",
    "start": "294240",
    "end": "295440"
  },
  {
    "text": "principles and guidelines apply for",
    "start": "295440",
    "end": "297240"
  },
  {
    "text": "other kubernetes distributions as well",
    "start": "297240",
    "end": "299940"
  },
  {
    "text": "oh",
    "start": "299940",
    "end": "300960"
  },
  {
    "text": "so let's examine the cluster setup and",
    "start": "300960",
    "end": "303060"
  },
  {
    "text": "the demo environment again in my",
    "start": "303060",
    "end": "305280"
  },
  {
    "text": "tutorials repository that I've linked I",
    "start": "305280",
    "end": "307139"
  },
  {
    "text": "provided these steps and configurations",
    "start": "307139",
    "end": "308580"
  },
  {
    "text": "for you to try out on your own",
    "start": "308580",
    "end": "311220"
  },
  {
    "text": "so I've taken the steps outlined in",
    "start": "311220",
    "end": "312780"
  },
  {
    "text": "Microsoft's user-facing docs to set up",
    "start": "312780",
    "end": "314639"
  },
  {
    "text": "my firewall and routing rules",
    "start": "314639",
    "end": "316560"
  },
  {
    "text": "I then deployed the AKs cluster in a sub",
    "start": "316560",
    "end": "318660"
  },
  {
    "text": "Network associated with the firewall",
    "start": "318660",
    "end": "320280"
  },
  {
    "text": "like what we saw in that diagram",
    "start": "320280",
    "end": "323160"
  },
  {
    "text": "my cluster has Azure monitor container",
    "start": "323160",
    "end": "325080"
  },
  {
    "text": "insights enabled and I've also set the",
    "start": "325080",
    "end": "326639"
  },
  {
    "text": "cni plugin to Azure cni to enable Azure",
    "start": "326639",
    "end": "328979"
  },
  {
    "text": "Network policies",
    "start": "328979",
    "end": "330419"
  },
  {
    "text": "Additionally the outbound type for this",
    "start": "330419",
    "end": "332400"
  },
  {
    "text": "cluster is user-defined routes which",
    "start": "332400",
    "end": "334199"
  },
  {
    "text": "allows us to customize our cluster",
    "start": "334199",
    "end": "335820"
  },
  {
    "text": "egress",
    "start": "335820",
    "end": "337380"
  },
  {
    "text": "as you can see from the output of",
    "start": "337380",
    "end": "338880"
  },
  {
    "text": "cubectl get nodes up top I've created",
    "start": "338880",
    "end": "340919"
  },
  {
    "text": "two node pools the first one being the",
    "start": "340919",
    "end": "343139"
  },
  {
    "text": "default that AKs provisions and the",
    "start": "343139",
    "end": "345000"
  },
  {
    "text": "second one that I created specifically",
    "start": "345000",
    "end": "346680"
  },
  {
    "text": "for the eager Skateway",
    "start": "346680",
    "end": "349199"
  },
  {
    "text": "for the mesh environment I have the",
    "start": "349199",
    "end": "351000"
  },
  {
    "text": "egress Gateway here deployed in the HDO",
    "start": "351000",
    "end": "353100"
  },
  {
    "text": "egress namespace and as you can see it",
    "start": "353100",
    "end": "355560"
  },
  {
    "text": "got scheduled onto my dedicated egress",
    "start": "355560",
    "end": "357600"
  },
  {
    "text": "node",
    "start": "357600",
    "end": "359460"
  },
  {
    "text": "in the hdmesh config notice I have the",
    "start": "359460",
    "end": "361979"
  },
  {
    "text": "outbound traffic policy here set to",
    "start": "361979",
    "end": "363600"
  },
  {
    "text": "registry only and I have on voice access",
    "start": "363600",
    "end": "365940"
  },
  {
    "text": "logging enabled",
    "start": "365940",
    "end": "368660"
  },
  {
    "text": "here my CNN service entry adds the host",
    "start": "368660",
    "end": "372979"
  },
  {
    "text": "edition.cnn.com to HDO service registry",
    "start": "372979",
    "end": "376199"
  },
  {
    "text": "this way sidecars and gateways can",
    "start": "376199",
    "end": "378360"
  },
  {
    "text": "communicate with CNN I have two",
    "start": "378360",
    "end": "380340"
  },
  {
    "text": "destination rules configured here one to",
    "start": "380340",
    "end": "382620"
  },
  {
    "text": "set mtls between the sidecars and",
    "start": "382620",
    "end": "384300"
  },
  {
    "text": "Gateway which I've deployed to each test",
    "start": "384300",
    "end": "386340"
  },
  {
    "text": "name space and the other to configure",
    "start": "386340",
    "end": "388139"
  },
  {
    "text": "the gateway to perform TLS origination",
    "start": "388139",
    "end": "390780"
  },
  {
    "text": "I've created Network policies to",
    "start": "390780",
    "end": "392520"
  },
  {
    "text": "restrict pod traffic to cube system",
    "start": "392520",
    "end": "394020"
  },
  {
    "text": "istio system and the istio eagerness",
    "start": "394020",
    "end": "396060"
  },
  {
    "text": "namespaces and I've applied these",
    "start": "396060",
    "end": "397979"
  },
  {
    "text": "policies to each namespace individually",
    "start": "397979",
    "end": "400620"
  },
  {
    "text": "there are three namespaces I'm using in",
    "start": "400620",
    "end": "402419"
  },
  {
    "text": "this test environment and the default",
    "start": "402419",
    "end": "404039"
  },
  {
    "text": "namespace the Sleep application does not",
    "start": "404039",
    "end": "405900"
  },
  {
    "text": "have a sidecar in the test egress",
    "start": "405900",
    "end": "408000"
  },
  {
    "text": "unauthorized namespace the sleep pod",
    "start": "408000",
    "end": "409800"
  },
  {
    "text": "does have a sidecar but doesn't have the",
    "start": "409800",
    "end": "411539"
  },
  {
    "text": "corresponding authorization policy to",
    "start": "411539",
    "end": "413400"
  },
  {
    "text": "communicate with CNN",
    "start": "413400",
    "end": "415199"
  },
  {
    "text": "the sleep pod and test egress is",
    "start": "415199",
    "end": "417360"
  },
  {
    "text": "authorized to communicate with CNN",
    "start": "417360",
    "end": "420000"
  },
  {
    "text": "so let's see what happens if I try to",
    "start": "420000",
    "end": "421440"
  },
  {
    "text": "send a request from the sleep pod in the",
    "start": "421440",
    "end": "423000"
  },
  {
    "text": "default namespace without a sidecar to",
    "start": "423000",
    "end": "424860"
  },
  {
    "text": "CNN",
    "start": "424860",
    "end": "427280"
  },
  {
    "text": "as you can see the request to your hangs",
    "start": "429360",
    "end": "431580"
  },
  {
    "text": "because the network policy is blocking",
    "start": "431580",
    "end": "433259"
  },
  {
    "text": "it",
    "start": "433259",
    "end": "434220"
  },
  {
    "text": "however even if I delete the network",
    "start": "434220",
    "end": "435840"
  },
  {
    "text": "policy as I'm about to do right now the",
    "start": "435840",
    "end": "438419"
  },
  {
    "text": "request will still fail",
    "start": "438419",
    "end": "441380"
  },
  {
    "text": "this is because the firewall is",
    "start": "441599",
    "end": "443400"
  },
  {
    "text": "preventing workloads not deployed onto",
    "start": "443400",
    "end": "445199"
  },
  {
    "text": "the egress notes from communicating with",
    "start": "445199",
    "end": "447180"
  },
  {
    "text": "unauthorized services",
    "start": "447180",
    "end": "450060"
  },
  {
    "text": "my request from the sleep pod and the",
    "start": "450060",
    "end": "451800"
  },
  {
    "text": "unauthorized namespace will also fail",
    "start": "451800",
    "end": "453360"
  },
  {
    "text": "with the 403 blocked by the denial",
    "start": "453360",
    "end": "455580"
  },
  {
    "text": "authorization policy",
    "start": "455580",
    "end": "459020"
  },
  {
    "text": "however because the test egress",
    "start": "460199",
    "end": "462000"
  },
  {
    "text": "namespace is authorized to communicate",
    "start": "462000",
    "end": "464160"
  },
  {
    "text": "with CNN the eager Skateway will permit",
    "start": "464160",
    "end": "466199"
  },
  {
    "text": "this request which will succeed",
    "start": "466199",
    "end": "470180"
  },
  {
    "text": "we can gain some additional insights",
    "start": "472680",
    "end": "474419"
  },
  {
    "text": "about our test environment in firewall",
    "start": "474419",
    "end": "476340"
  },
  {
    "text": "on Azure portal",
    "start": "476340",
    "end": "477900"
  },
  {
    "text": "in terms of how only the egress nodes",
    "start": "477900",
    "end": "479819"
  },
  {
    "text": "can communicate with specific external",
    "start": "479819",
    "end": "481620"
  },
  {
    "text": "Services IQ to the following outbound",
    "start": "481620",
    "end": "484020"
  },
  {
    "text": "firewall Network rule",
    "start": "484020",
    "end": "486000"
  },
  {
    "text": "allow traffic with a source IP of either",
    "start": "486000",
    "end": "488460"
  },
  {
    "text": "of the egress nodes to communicate with",
    "start": "488460",
    "end": "490319"
  },
  {
    "text": "addition.cnn.com",
    "start": "490319",
    "end": "492539"
  },
  {
    "text": "I set the protocol and port to TCP on",
    "start": "492539",
    "end": "495180"
  },
  {
    "text": "Port 443 because this is what the",
    "start": "495180",
    "end": "497639"
  },
  {
    "text": "Gateway uses when communicating with CNN",
    "start": "497639",
    "end": "499740"
  },
  {
    "text": "over TLS",
    "start": "499740",
    "end": "501599"
  },
  {
    "text": "this works because the source IP of",
    "start": "501599",
    "end": "503340"
  },
  {
    "text": "external traffic is translated to the",
    "start": "503340",
    "end": "505740"
  },
  {
    "text": "node IP by default",
    "start": "505740",
    "end": "508319"
  },
  {
    "text": "also here are the application rules I",
    "start": "508319",
    "end": "510840"
  },
  {
    "text": "was mentioning earlier that enables",
    "start": "510840",
    "end": "512640"
  },
  {
    "text": "applications to pull images from Docker",
    "start": "512640",
    "end": "514500"
  },
  {
    "text": "Hub and for Azure monitor to forward",
    "start": "514500",
    "end": "516779"
  },
  {
    "text": "logs to the analytics workspace",
    "start": "516779",
    "end": "520320"
  },
  {
    "text": "in our analytics workspace we can create",
    "start": "520320",
    "end": "522719"
  },
  {
    "text": "firewall logs this gives us important",
    "start": "522719",
    "end": "525240"
  },
  {
    "text": "information like whether traffic was",
    "start": "525240",
    "end": "526860"
  },
  {
    "text": "denied or allowed and the protocol",
    "start": "526860",
    "end": "529200"
  },
  {
    "text": "source and target of each request",
    "start": "529200",
    "end": "531839"
  },
  {
    "text": "for instance in this query here I'm able",
    "start": "531839",
    "end": "534180"
  },
  {
    "text": "to see the firewall permitting the",
    "start": "534180",
    "end": "535560"
  },
  {
    "text": "egress gateway's request to CNN that we",
    "start": "535560",
    "end": "538019"
  },
  {
    "text": "just saw earlier",
    "start": "538019",
    "end": "540600"
  },
  {
    "text": "Azure monitor is also forwarding",
    "start": "540600",
    "end": "542519"
  },
  {
    "text": "standard error and standard out from",
    "start": "542519",
    "end": "544019"
  },
  {
    "text": "every container in the cluster to the",
    "start": "544019",
    "end": "546060"
  },
  {
    "text": "analytics workspace",
    "start": "546060",
    "end": "548339"
  },
  {
    "text": "so the envoy access logs from the egress",
    "start": "548339",
    "end": "550620"
  },
  {
    "text": "Gateway that we just saw are also",
    "start": "550620",
    "end": "552300"
  },
  {
    "text": "visible in the log analytics workspace",
    "start": "552300",
    "end": "554220"
  },
  {
    "text": "here",
    "start": "554220",
    "end": "555600"
  },
  {
    "text": "for example here's the access log for",
    "start": "555600",
    "end": "558180"
  },
  {
    "text": "the request that the Gateway authorized",
    "start": "558180",
    "end": "559860"
  },
  {
    "text": "from the test Ingress namespace before",
    "start": "559860",
    "end": "562380"
  },
  {
    "text": "concluding I wanted to highlight some",
    "start": "562380",
    "end": "564000"
  },
  {
    "text": "additional steps platform administrators",
    "start": "564000",
    "end": "565920"
  },
  {
    "text": "may want to take the lockdown egress",
    "start": "565920",
    "end": "568019"
  },
  {
    "text": "traffic even further",
    "start": "568019",
    "end": "569760"
  },
  {
    "text": "with kubernetes role-based Access",
    "start": "569760",
    "end": "571380"
  },
  {
    "text": "Control access to the HDO system HDO",
    "start": "571380",
    "end": "574200"
  },
  {
    "text": "egress namespaces can be restricted to",
    "start": "574200",
    "end": "576180"
  },
  {
    "text": "admins",
    "start": "576180",
    "end": "577380"
  },
  {
    "text": "second policy enforcement through",
    "start": "577380",
    "end": "579540"
  },
  {
    "text": "admission controllers can ensure that",
    "start": "579540",
    "end": "581160"
  },
  {
    "text": "application pods don't get scheduled",
    "start": "581160",
    "end": "582839"
  },
  {
    "text": "onto the egress nodes",
    "start": "582839",
    "end": "584519"
  },
  {
    "text": "finally operators may want to strip",
    "start": "584519",
    "end": "586380"
  },
  {
    "text": "outbound requests of envoy headers that",
    "start": "586380",
    "end": "588540"
  },
  {
    "text": "can potentially leak sensitive",
    "start": "588540",
    "end": "589860"
  },
  {
    "text": "information",
    "start": "589860",
    "end": "592100"
  },
  {
    "text": "for more information on outbound traffic",
    "start": "592140",
    "end": "594060"
  },
  {
    "text": "with HDO firewalls or relevant Cloud",
    "start": "594060",
    "end": "596640"
  },
  {
    "text": "tools check out some of these resources",
    "start": "596640",
    "end": "600600"
  },
  {
    "text": "thank you for your time I hope you found",
    "start": "600600",
    "end": "602580"
  },
  {
    "text": "this session helpful and please enjoy",
    "start": "602580",
    "end": "604320"
  },
  {
    "text": "the rest of its diocon",
    "start": "604320",
    "end": "607459"
  }
]