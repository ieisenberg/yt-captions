[
  {
    "text": "alrighty i believe it is time for us to kick this off so we have so much to cover i'm",
    "start": "160",
    "end": "6480"
  },
  {
    "text": "going to go ahead and start feel free to keep on coming if you're waiting in line there's lots of seats up front here so",
    "start": "6480",
    "end": "12880"
  },
  {
    "text": "yeah welcome welcome my name is randy abernathy i'm a managing partner at rxm and this is",
    "start": "12880",
    "end": "18960"
  },
  {
    "text": "kubernetes networking 101. so um let me just see a quick show of hands",
    "start": "18960",
    "end": "24000"
  },
  {
    "text": "how many people would consider themselves very savvy kubernetes networking people",
    "start": "24000",
    "end": "31359"
  },
  {
    "text": "all right so everybody else if you saw someone raise their hand you got questions you know where to go right those people um so yeah this is going to",
    "start": "31359",
    "end": "38320"
  },
  {
    "text": "be a super fun tutorial we have 90 minutes we have a ton of stuff to cover and i'll",
    "start": "38320",
    "end": "44559"
  },
  {
    "text": "just give you a quick intro to the format um we've stood up uh hundreds of",
    "start": "44559",
    "end": "49760"
  },
  {
    "text": "machines in a cloud provider who shall remain nameless since they wouldn't sponsor us um and so you guys can um ssh",
    "start": "49760",
    "end": "58879"
  },
  {
    "text": "into the box that you were um provided on this sheet now i realize that we're on conference",
    "start": "58879",
    "end": "66320"
  },
  {
    "text": "wi-fi right we all know what that means it's probably really banging great wi-fi but there's 200 300",
    "start": "66320",
    "end": "73840"
  },
  {
    "text": "people trying to use it all at the same time so the best thing that we could do is instead of you downloading all sorts",
    "start": "73840",
    "end": "80080"
  },
  {
    "text": "of packages and and containers and stuff that would be really slow you can just ssh to these",
    "start": "80080",
    "end": "85840"
  },
  {
    "text": "cloud instances and send a few characters back and forth every once in a while it's the lowest bandwidth thing",
    "start": "85840",
    "end": "91360"
  },
  {
    "text": "that we can come up with for a session like this it's also really great because if you completely thrash this computer",
    "start": "91360",
    "end": "98000"
  },
  {
    "text": "your laptop is still fine right so don't worry right it's a virtual machine and",
    "start": "98000",
    "end": "103040"
  },
  {
    "text": "if you do completely thrash this computer we have spares so um i have three um folks helping me today um chris",
    "start": "103040",
    "end": "111280"
  },
  {
    "text": "ilion and valentin and chris is by the way doing a talk at sixteen hundred coop cuddle said what which is gonna be super",
    "start": "111280",
    "end": "117759"
  },
  {
    "text": "awesome so i would go to that if i were you um but those guys are gonna come around and help with questions so if you have a",
    "start": "117759",
    "end": "124240"
  },
  {
    "text": "question raise your hand those guys will be scanning the room they'll come to you they can give you a new machine if you",
    "start": "124240",
    "end": "129840"
  },
  {
    "text": "need it we got spares they can help you get unstuck if you're working on a part of the tutorial that isn't working we've",
    "start": "129840",
    "end": "136239"
  },
  {
    "text": "tested it a bunch of times so i feel pretty good about if you read the tutorial steps carefully and do them the",
    "start": "136239",
    "end": "142160"
  },
  {
    "text": "way that they say it's going to work so hopefully we won't have too many",
    "start": "142160",
    "end": "147360"
  },
  {
    "text": "problems but we're here to help if you have any questions at all feel free to ask yeah a question",
    "start": "147360",
    "end": "155239"
  },
  {
    "text": "ah great great question so when we get to the um first lab break i'll go into this in some more detail but the",
    "start": "159680",
    "end": "165200"
  },
  {
    "text": "question was hey i don't have my laptop or my laptop's locked down or something and i can't get",
    "start": "165200",
    "end": "170319"
  },
  {
    "text": "to these boxes what do i do well you can um we're going to have some slides and presentation and i'll probably do a lot",
    "start": "170319",
    "end": "176720"
  },
  {
    "text": "of the steps if i have time while i'm running around so you get to see that but also there's instructions in the lab",
    "start": "176720",
    "end": "182560"
  },
  {
    "text": "as to how to stand up a plain vanilla ubuntu 2004 server that you can do the labs on there's nothing special about",
    "start": "182560",
    "end": "189440"
  },
  {
    "text": "these labs they're just running on a plain vanilla ubuntu 2004 server we literally start from the absolute start",
    "start": "189440",
    "end": "196159"
  },
  {
    "text": "install kubernetes set up cni start creating services install the service",
    "start": "196159",
    "end": "201200"
  },
  {
    "text": "mesh install the you know the ingress everything is is right in that lab so it'll be really easy to redo later also",
    "start": "201200",
    "end": "208480"
  },
  {
    "text": "and i appreciate that question because hello virtual people all the people who are um",
    "start": "208480",
    "end": "213680"
  },
  {
    "text": "over here uh hello virtual people all the people who are online um obviously you didn't get one of these sheets with",
    "start": "213680",
    "end": "219680"
  },
  {
    "text": "an ip you know we just there's like 800 people or something signed up so we couldn't do it for everybody but if you've got a box",
    "start": "219680",
    "end": "226080"
  },
  {
    "text": "that you can use that's a plain vanilla ubuntu box a vm you can just either ssh",
    "start": "226080",
    "end": "231360"
  },
  {
    "text": "into that if it's in a data center it's on your laptop if it's in a cloud somewhere that's going to work fine",
    "start": "231360",
    "end": "237120"
  },
  {
    "text": "and there are instructions for doing exactly that in the lab right the lab points you to a",
    "start": "237120",
    "end": "242640"
  },
  {
    "text": "a virtual machine setup dock which is a markdown on github and you can follow the instructions there to run a basic vm",
    "start": "242640",
    "end": "249360"
  },
  {
    "text": "that we already provided for you it's just a plain vanilla ubuntu box again but you can stand that up and do the",
    "start": "249360",
    "end": "254799"
  },
  {
    "text": "labs so yeah great questions and i'll continue to you know give you more information about the lab as we close in",
    "start": "254799",
    "end": "260239"
  },
  {
    "text": "on getting started on the first step this this session is organized into five parts",
    "start": "260239",
    "end": "265360"
  },
  {
    "text": "we're going to take about 15 minutes for each part and then i've got you know very tight budget here to get started so",
    "start": "265360",
    "end": "270720"
  },
  {
    "text": "um we're gonna do like maybe five minutes of discussion and then ten minutes of lab work five minutes of",
    "start": "270720",
    "end": "276160"
  },
  {
    "text": "discussion ten minutes of lab work this is a hands-on session right this is a tutorial so you're gonna be doing all of",
    "start": "276160",
    "end": "282080"
  },
  {
    "text": "this stuff and i'm only going to give you the overview because you're going to do it right why should i tell you the commands when you're going to type them",
    "start": "282080",
    "end": "287600"
  },
  {
    "text": "yourself so all right so that's that's it so for these three guys are out there ready to",
    "start": "287600",
    "end": "293040"
  },
  {
    "text": "help also you'll see that there is a tutorial lab doc in the slide deck here",
    "start": "293040",
    "end": "299199"
  },
  {
    "text": "it's also on your sheet so for the virtual people you can get this deck off sketch so",
    "start": "299199",
    "end": "304960"
  },
  {
    "text": "these slides are on sketch already so if you go to the talk you see this the schedule you know the slide link click that you'll get this doc and then that",
    "start": "304960",
    "end": "311280"
  },
  {
    "text": "link will take you to the markdown so let me just preview that markdown for you real quick make sure everybody's",
    "start": "311280",
    "end": "317600"
  },
  {
    "text": "able to find it it looks like this",
    "start": "317600",
    "end": "325360"
  },
  {
    "text": "all right so if you if you follow this github link it takes you to kubecon eu 2022 so the full url is github.com",
    "start": "325360",
    "end": "333199"
  },
  {
    "text": "rx-m slash kubecon dash eu dash 2022",
    "start": "333199",
    "end": "340000"
  },
  {
    "text": "slash tree slash main obviously and then if you click on the markdown it's just going to open right up that's",
    "start": "340000",
    "end": "345520"
  },
  {
    "text": "the lab right and you'll notice that it's broken up into steps so step one our first lab session is going to be pod",
    "start": "345520",
    "end": "351840"
  },
  {
    "text": "networking and that doc's not going anywhere that'll be there forever so you can look at that in three years if you",
    "start": "351840",
    "end": "357199"
  },
  {
    "text": "want to nothing will work i'm sure but you could try it okay so that's a bit of the startup hopefully",
    "start": "357199",
    "end": "364400"
  },
  {
    "text": "now everybody's got a sheet with the ip the other thing you're going to need to log into the lab system you need an ip",
    "start": "364400",
    "end": "370800"
  },
  {
    "text": "address right to reach the host then you need to prove your identity and so you're going to be ubuntu big surprise",
    "start": "370800",
    "end": "376400"
  },
  {
    "text": "right that's your user id and then you're going gonna need a key and that key the link for the key is on here too",
    "start": "376400",
    "end": "382880"
  },
  {
    "text": "right so um here's a hint also it's the same key",
    "start": "382880",
    "end": "389199"
  },
  {
    "text": "so if somebody needs help you can log into their machine right these machines are all going away in about two hours so",
    "start": "389199",
    "end": "395280"
  },
  {
    "text": "all right that's enough of the logistics let's talk about the talk so our goal is",
    "start": "395280",
    "end": "400560"
  },
  {
    "text": "to introduce the world of kubernetes network communications in a high level but practical way the idea of each of",
    "start": "400560",
    "end": "407120"
  },
  {
    "text": "these little thought experiments these little labs is to show you how a part of",
    "start": "407120",
    "end": "412240"
  },
  {
    "text": "the kubernetes networking world works in enough depth that you understand it and you could walk away and go cool i'm not",
    "start": "412240",
    "end": "418479"
  },
  {
    "text": "a networking person but now i get it and it's everything's going to be a lot easier for me because i understand all these little parts or if you are",
    "start": "418479",
    "end": "425120"
  },
  {
    "text": "interested in digging deeper you have a beginning point right we've installed all the stuff everything works together",
    "start": "425120",
    "end": "430479"
  },
  {
    "text": "that's a lot of times you know the big time waster now you can get down to the business of playing with it and experimenting and taking your journey",
    "start": "430479",
    "end": "437199"
  },
  {
    "text": "further so that's the idea behind this session concepts and projects that we're going to explore we're going to begin",
    "start": "437199",
    "end": "442560"
  },
  {
    "text": "with container networking and talk about pods and how they talk together and that is going to involve a cni plug-in",
    "start": "442560",
    "end": "449440"
  },
  {
    "text": "kubernetes doesn't it's not opinionated right it doesn't come with a networking solution it doesn't come with a container runtime",
    "start": "449440",
    "end": "456960"
  },
  {
    "text": "it doesn't come with storage drivers right you have to add all those in through the container network interface",
    "start": "456960",
    "end": "462880"
  },
  {
    "text": "the container runtime interface and the container storage interface right those are the three big legs of the kubernetes",
    "start": "462880",
    "end": "468800"
  },
  {
    "text": "stool it's very rare to find a kubernetes cluster that doesn't have plugins for all three of those and sometimes multiple plugins for some of",
    "start": "468800",
    "end": "475280"
  },
  {
    "text": "them but to just get up and running after you've installed kubernetes you're going to need a container network um",
    "start": "475280",
    "end": "482560"
  },
  {
    "text": "interface plug-in and we're going to use psyllium silium is a project at the cncf really cool",
    "start": "482560",
    "end": "488800"
  },
  {
    "text": "solution for networking we'll talk about that briefly then we're going to get into step two which is kubernetes",
    "start": "488800",
    "end": "494319"
  },
  {
    "text": "services so once we've got our cluster running and we've got the network in place and we've seen how it works and",
    "start": "494319",
    "end": "500160"
  },
  {
    "text": "understand the absolute basics we're going to dig into services and we're going to see how services give us a",
    "start": "500160",
    "end": "506319"
  },
  {
    "text": "front end for a set of dynamically changing pods clients don't want the heartburn of",
    "start": "506319",
    "end": "512320"
  },
  {
    "text": "figuring out who to connect to they want a virtual ip address that they can look up by name that they just connect to and",
    "start": "512320",
    "end": "518479"
  },
  {
    "text": "then the magic happens and they get to one of the pods right so that's what services are all about we're going to look at how kubernetes does that at",
    "start": "518479",
    "end": "524800"
  },
  {
    "text": "least one of the ways that it does it and then we're going to take a look at dns",
    "start": "524800",
    "end": "530080"
  },
  {
    "text": "humans don't like to remember ip addresses also ip addresses tend to change a lot more than concepts a",
    "start": "530080",
    "end": "536160"
  },
  {
    "text": "service name is a concept if you have a you know cfo reporting service it's",
    "start": "536160",
    "end": "543040"
  },
  {
    "text": "probably going to be called cfo reporting forever or for a very long time and anywhere you put it but if you",
    "start": "543040",
    "end": "549600"
  },
  {
    "text": "deploy that in singapore it's gonna have one ip if you deploy that in london it's gonna have another ip so services",
    "start": "549600",
    "end": "555680"
  },
  {
    "text": "use these names to create an abstraction again another level of abstraction on",
    "start": "555680",
    "end": "560720"
  },
  {
    "text": "top of that virtual ip and we're going to see how kubernetes implements dns and it does it in some interesting and",
    "start": "560720",
    "end": "565920"
  },
  {
    "text": "creative ways one thing that's fundamental that we're going to hammer on a little bit are concepts around",
    "start": "565920",
    "end": "571120"
  },
  {
    "text": "kubernetes you'll never understand kubernetes networking if you don't understand kubernetes",
    "start": "571120",
    "end": "577839"
  },
  {
    "text": "kubernetes thinks about the world a certain way you don't have to deploy applications",
    "start": "577839",
    "end": "582959"
  },
  {
    "text": "that way but if you don't understand it you're going to keep stepping into potholes if",
    "start": "582959",
    "end": "588080"
  },
  {
    "text": "you understand it you can protect yourself and say well kubernetes wants this to be this way but we're going to change it a little bit and we're going",
    "start": "588080",
    "end": "593440"
  },
  {
    "text": "to make sure we've done the correct things to keep kubernetes happy when we do it slightly differently from how",
    "start": "593440",
    "end": "598720"
  },
  {
    "text": "kubernetes expects and this really applies to networking and we're going to see some of this in the dns section",
    "start": "598720",
    "end": "604880"
  },
  {
    "text": "next we're going to do step 4 which is outside access we're going to see how from a cluster where you've got all your",
    "start": "604880",
    "end": "610640"
  },
  {
    "text": "cool services running you can get from the outside in and there's a lot of ways to do that but",
    "start": "610640",
    "end": "616720"
  },
  {
    "text": "fundamentally there's two simple paths and there's lots of other crazy stuff that people are marketing and trying to",
    "start": "616720",
    "end": "622880"
  },
  {
    "text": "tell you do all this there's two paths under the covers of all these things there's two ways in and so we're going",
    "start": "622880",
    "end": "629040"
  },
  {
    "text": "to look at that and we're going to talk about some of the cool projects that fit in there in addition to core dns on the",
    "start": "629040",
    "end": "634640"
  },
  {
    "text": "dns side we're going to look at emissary for ingress and gateway kinds of functions envoy is a proxy that emissary uses",
    "start": "634640",
    "end": "641360"
  },
  {
    "text": "under the covers and then we're going to look at what we're going to talk about metal lb um the",
    "start": "641360",
    "end": "647120"
  },
  {
    "text": "sometimes when we do this talk we run metal lb but with this many people and it would be crazy so we're not going to",
    "start": "647120",
    "end": "652320"
  },
  {
    "text": "do that but we'll talk about it a little bit and then finally we're going to get into service mesh step five this is sort",
    "start": "652320",
    "end": "658000"
  },
  {
    "text": "of the pinnacle right after you've got everything else working perfectly that's when you might want to start thinking",
    "start": "658000",
    "end": "663440"
  },
  {
    "text": "about service mesh not everybody needs a service mesh i don't buy that not everybody needs a",
    "start": "663440",
    "end": "668720"
  },
  {
    "text": "service mesh however a service mesh is an incredibly powerful and valuable thing and so you might need",
    "start": "668720",
    "end": "675920"
  },
  {
    "text": "it you might want it it can be an incredibly valuable tool we're going to talk about what service meshes do and we're going to use the only graduated",
    "start": "675920",
    "end": "683600"
  },
  {
    "text": "project in the cncf ecosystem that is a service mesh linker d and it's a super",
    "start": "683600",
    "end": "688880"
  },
  {
    "text": "cool project has a ton of amazing features and will just scratch the surface in this session but you'll have",
    "start": "688880",
    "end": "695760"
  },
  {
    "text": "it installed you'll see how easy it is to fire up and you'll know the basics so you can again carry on your journey and",
    "start": "695760",
    "end": "701920"
  },
  {
    "text": "explore link or d all you want after the fact okay so that is our plan now let's see how we",
    "start": "701920",
    "end": "708320"
  },
  {
    "text": "do i'm going to quickly switch over here uh we have burned 10 minutes yikes okay we",
    "start": "708320",
    "end": "713440"
  },
  {
    "text": "got to get going all right so step one and remember if you've got questions there's three guys right chris ilion and",
    "start": "713440",
    "end": "719760"
  },
  {
    "text": "valentin out here that will help you out so just raise your hand and they'll come and answer your questions while i keep",
    "start": "719760",
    "end": "724959"
  },
  {
    "text": "going to keep us on track all right so container networking concepts let's talk about this just briefly",
    "start": "724959",
    "end": "730880"
  },
  {
    "text": "the the first thing i want to say is there's no such thing as a container",
    "start": "730880",
    "end": "737040"
  },
  {
    "text": "maybe that's a little shocking in a container based convention but there really isn't right the linux kernel has",
    "start": "737040",
    "end": "742560"
  },
  {
    "text": "c groups what do they do they are control groups they control how much memory or cpu you",
    "start": "742560",
    "end": "748000"
  },
  {
    "text": "can use the linux kernel has namespaces what do they do they isolate what your",
    "start": "748000",
    "end": "753120"
  },
  {
    "text": "process can see can your process only see itself and its children or can it see the pits of other",
    "start": "753120",
    "end": "758560"
  },
  {
    "text": "processes that's the pid name space but what we care about is the network name space a network namespace makes it so",
    "start": "758560",
    "end": "765279"
  },
  {
    "text": "that a process can have its own virtual copy of the ip stack",
    "start": "765279",
    "end": "770880"
  },
  {
    "text": "inside what we think of as a container you have your own route table your own",
    "start": "770880",
    "end": "776320"
  },
  {
    "text": "ip tables your own interfaces loopback and things like that so that's really useful because now we",
    "start": "776320",
    "end": "784160"
  },
  {
    "text": "can reliably deploy things that listen on port 80 many many times on the same computer because they all have their own",
    "start": "784160",
    "end": "790240"
  },
  {
    "text": "interfaces so this is magic right if we had a big cluster machines and we wanted to dynamically roll out applications if",
    "start": "790240",
    "end": "795600"
  },
  {
    "text": "they're all fighting for ports and craziness like that that would be pretty tough so what ends up happening with",
    "start": "795600",
    "end": "801120"
  },
  {
    "text": "container tech is you get reliable deployment that's a really huge thing but we need",
    "start": "801120",
    "end": "806560"
  },
  {
    "text": "something to sort of do the deployment right to make the the deployment work and that's where kubernetes comes in",
    "start": "806560",
    "end": "813360"
  },
  {
    "text": "and kubernetes there's no such thing as a container what kubernetes does is it takes",
    "start": "813360",
    "end": "820880"
  },
  {
    "text": "container images which are just little tar balls with root file systems in them and it runs several of them in the same",
    "start": "820880",
    "end": "828880"
  },
  {
    "text": "network namespace that bundle is called a pod right they share the network name space",
    "start": "828880",
    "end": "835440"
  },
  {
    "text": "they also share the inner process communications namespace we want it to be cheap for them to talk to each other",
    "start": "835440",
    "end": "840880"
  },
  {
    "text": "right so if you're using mqs or shared memory stuff like that those are in the ipc namespace and if you're using the",
    "start": "840880",
    "end": "846639"
  },
  {
    "text": "local loopback and stuff like that that's in the network namespace so pods are collections of container images that",
    "start": "846639",
    "end": "854320"
  },
  {
    "text": "are all running in shared network name spaces so in kubernetes interestingly the pod is the unit of distribution it's",
    "start": "854320",
    "end": "861040"
  },
  {
    "text": "the smallest thing you can schedule it's the smallest thing that you can scale and they're atomic you can't run part of",
    "start": "861040",
    "end": "867120"
  },
  {
    "text": "it on one machine and part of it on another right so really what we're thinking about when we move to kubernetes is not container networking",
    "start": "867120",
    "end": "874560"
  },
  {
    "text": "it's pod networking and so pod networking works like this",
    "start": "874560",
    "end": "879760"
  },
  {
    "text": "you have an interface in one pod and an interface in another pod they both have ip addresses and now you can talk",
    "start": "879760",
    "end": "887120"
  },
  {
    "text": "right these these two guys can communicate with each other and you can have as many containers as you like in the first pod and as many containers as",
    "start": "887120",
    "end": "893279"
  },
  {
    "text": "you like in the second pod or as few as you like so pods are the the unit of",
    "start": "893279",
    "end": "898480"
  },
  {
    "text": "distribution and also the unit of network identity right the unit of networking they have an ip address",
    "start": "898480",
    "end": "903920"
  },
  {
    "text": "interestingly enough the pods need to be able to communicate with each other that's what kubernetes says all pods in",
    "start": "903920",
    "end": "909680"
  },
  {
    "text": "a kubernetes cluster must be able to communicate with each other right now the world's changing there's lots of",
    "start": "909680",
    "end": "915199"
  },
  {
    "text": "exceptions to the rule but as far as you know your basic network requirements to for kubernetes to function the way that",
    "start": "915199",
    "end": "921760"
  },
  {
    "text": "it's supposed to all the pods have to be able to talk to each other now what if i want to put some pods in the staging",
    "start": "921760",
    "end": "928320"
  },
  {
    "text": "name space and i don't want them talking to pods in the production name space well you can create network policies",
    "start": "928320",
    "end": "933839"
  },
  {
    "text": "that you know change the rules up and stuff but it has to be possible for every pod to talk to every other pod",
    "start": "933839",
    "end": "939199"
  },
  {
    "text": "what that means is that pods need to be able to communicate with each other when they're on different machines linux has",
    "start": "939199",
    "end": "945040"
  },
  {
    "text": "stuff built into it like linux bridge and things like that that acts like a virtual switch where all the pods can",
    "start": "945040",
    "end": "950959"
  },
  {
    "text": "talk to each other and you don't really need any extra software but as soon as you start communicating outside of the",
    "start": "950959",
    "end": "956000"
  },
  {
    "text": "computer to another computer something's got to happen right because these pods it's in the old days we might",
    "start": "956000",
    "end": "963279"
  },
  {
    "text": "put a piece of software on there and then we might go and program the network a while and now everybody knows where it",
    "start": "963279",
    "end": "968800"
  },
  {
    "text": "is that's not gonna fly in kubernetes right where we're deploying nine times a day ten times a day pods are scaling up",
    "start": "968800",
    "end": "975279"
  },
  {
    "text": "and scaling down all day long that's not gonna fly it's gotta be automated so we need software to find networking but the",
    "start": "975279",
    "end": "982240"
  },
  {
    "text": "problem is if kubernetes just said yeah supply some software defined networking thing it wouldn't work because you know",
    "start": "982240",
    "end": "988399"
  },
  {
    "text": "kubernetes would be integrating with 50 000 different things and so the cni is a",
    "start": "988399",
    "end": "993680"
  },
  {
    "text": "standard that makes it possible for kubernetes to make the requests that it wants to make like hey i've started up a",
    "start": "993680",
    "end": "1000000"
  },
  {
    "text": "pod and i created a network namespace for it but it's plain vanilla there's no",
    "start": "1000000",
    "end": "1005839"
  },
  {
    "text": "interfaces there's no rules there's no routes there's nothing in there so hey",
    "start": "1005839",
    "end": "1011519"
  },
  {
    "text": "mr software defined networking thing please wire this pot up so that it can talk to other pods on this computer and",
    "start": "1011519",
    "end": "1019040"
  },
  {
    "text": "any pod in the entire cluster so the cni solutions generally have at least one",
    "start": "1019040",
    "end": "1026480"
  },
  {
    "text": "and sometimes two components the first component is a daemon set pod that runs on every node in the cluster and handles",
    "start": "1026480",
    "end": "1032558"
  },
  {
    "text": "the you know the organization of all the pods on that cluster and then sometimes there's a control plane too",
    "start": "1032559",
    "end": "1038400"
  },
  {
    "text": "but those cni components make it possible for pods to reach each other when they're on different hosts and they",
    "start": "1038400",
    "end": "1043678"
  },
  {
    "text": "can do that in lots of different ways they can just use routes right you can give every host a subnet and then the",
    "start": "1043679",
    "end": "1049200"
  },
  {
    "text": "you know the plugins can discover each other's subnets through lots of ways gossip or they could use std to save all",
    "start": "1049200",
    "end": "1055039"
  },
  {
    "text": "that information and then once they get a an outbound connection they can say oh yeah that ip address i know is on that",
    "start": "1055039",
    "end": "1061840"
  },
  {
    "text": "host so i'll just route the traffic they don't have to encapsulate it or do anything like that on the other hand",
    "start": "1061840",
    "end": "1068080"
  },
  {
    "text": "it's nice sometimes to encapsulate the traffic because if you do then you can do things like encrypt it on the wire",
    "start": "1068080",
    "end": "1074720"
  },
  {
    "text": "you can do things like make sure that the the underlying network doesn't know that there are pods",
    "start": "1074720",
    "end": "1082080"
  },
  {
    "text": "right it just sees two hosts talking to each other instead of a bunch of you know 20 different ip addresses from one",
    "start": "1082080",
    "end": "1087360"
  },
  {
    "text": "computer if you try that on a cloud provider they're probably going to kill your traffic they're going to go hey you",
    "start": "1087360",
    "end": "1093039"
  },
  {
    "text": "know that machine i know it's ip address is dot seven and i see all these crazy source ips coming out of that box",
    "start": "1093039",
    "end": "1098640"
  },
  {
    "text": "there's an attacker in there trying to spoof right and so of course you have to go to the cloud provider and change",
    "start": "1098640",
    "end": "1103679"
  },
  {
    "text": "settings to make all this stuff work if you just don't wanna have to worry about that you want something that's totally portable and goes from your bare metal",
    "start": "1103679",
    "end": "1109360"
  },
  {
    "text": "environment to your cloud to somewhere else then an overlay could be better right so there's pros and cons to everything",
    "start": "1109360",
    "end": "1115200"
  },
  {
    "text": "there's no one right answer but in the case of a lot of these plugins you have choice so we're going to talk about",
    "start": "1115200",
    "end": "1120799"
  },
  {
    "text": "psyllium for just a second we're going to use it in the first lab cilium is a cni plug-in that gives us options and it",
    "start": "1120799",
    "end": "1127280"
  },
  {
    "text": "is um kind of in in the new generation of cni's that",
    "start": "1127280",
    "end": "1132640"
  },
  {
    "text": "are trying to leverage ebpf so there's a way to tell the linux kernel to run little programs",
    "start": "1132640",
    "end": "1139280"
  },
  {
    "text": "and therefore it's very fast because you don't have a user mode component constantly you know messing around with",
    "start": "1139280",
    "end": "1144320"
  },
  {
    "text": "the network traffic and so that's exactly how psyllium works it uses evpf leverages that and psyllium gives you",
    "start": "1144320",
    "end": "1150480"
  },
  {
    "text": "the ability to use an overlay network so you can tunnel the traffic between the hosts where the the the network",
    "start": "1150480",
    "end": "1156320"
  },
  {
    "text": "underneath doesn't see the pod traffic it just sees host talking or you can route the traffic it's up to you psyllium gives you some",
    "start": "1156320",
    "end": "1162720"
  },
  {
    "text": "flexibility and it is a really cool cncf project with a bunch of neat features so we're going to use that as our cni",
    "start": "1162720",
    "end": "1168400"
  },
  {
    "text": "plug-in and that's going to give us this now you all have one node right we already",
    "start": "1168400",
    "end": "1174080"
  },
  {
    "text": "have like 400 computers stood up so it would have been 800 and it just keeps going from there so we're going to do everything on a single node kubernetes",
    "start": "1174080",
    "end": "1180400"
  },
  {
    "text": "cluster but it's going to work exactly the same as if you had 100 nodes and that's the important thing and that's what kubernetes and cni brings to the",
    "start": "1180400",
    "end": "1186880"
  },
  {
    "text": "table anyway so if you had two hosts for example the hosts have interfaces and the pods have interfaces and the cni is",
    "start": "1186880",
    "end": "1193520"
  },
  {
    "text": "the thing that takes care of making sure the traffic can get back and forth all right cool so we've um sort of",
    "start": "1193520",
    "end": "1199360"
  },
  {
    "text": "disambiguated cni we've talked about some of the solutions there's lots of other really cool cni plug-ins by the",
    "start": "1199360",
    "end": "1205200"
  },
  {
    "text": "way weave is another one that we use a lot at rxm because it's just super easy to install",
    "start": "1205200",
    "end": "1211440"
  },
  {
    "text": "calico is probably one of the most popular ones out there that a lot of people use as well and the list goes on",
    "start": "1211440",
    "end": "1216559"
  },
  {
    "text": "so there's many many options and they all have different pros and cons but what we're going to do now",
    "start": "1216559",
    "end": "1221840"
  },
  {
    "text": "is we are going to switch to lab mode and that link i put in the presentation again up here so you have it on your",
    "start": "1221840",
    "end": "1227760"
  },
  {
    "text": "sheet you also have it up there right and there's um there's a backup link too if",
    "start": "1227760",
    "end": "1233679"
  },
  {
    "text": "you for some reason can't get to github i thought the reason we did the backup link is github got flaky for the me this",
    "start": "1233679",
    "end": "1239440"
  },
  {
    "text": "morning i was like whoa you know somebody attacking github that would be terrible and so we put a backup link but",
    "start": "1239440",
    "end": "1244720"
  },
  {
    "text": "i would just use the the github link because if you do you're going to get a nice formatted you know web page that",
    "start": "1244720",
    "end": "1250799"
  },
  {
    "text": "you can just follow and and copy and paste from now one thing i want to mention is in the instructions it's",
    "start": "1250799",
    "end": "1257039"
  },
  {
    "text": "walking you through all the steps right so it says hey do this right and then it says hey do this",
    "start": "1257039",
    "end": "1263679"
  },
  {
    "text": "but some of these things say hey do this and it's specific to your computer",
    "start": "1263679",
    "end": "1270000"
  },
  {
    "text": "right for example if you create a pod through a deployment that pod is going to have an ip address",
    "start": "1270000",
    "end": "1277120"
  },
  {
    "text": "that is unique um to your setup right and another example here pinging an ip",
    "start": "1277120",
    "end": "1283200"
  },
  {
    "text": "right any time you see an ip you got to ask yourself the question what ip should i be putting in there because it's not the one in the sheet right the the lab",
    "start": "1283200",
    "end": "1290080"
  },
  {
    "text": "is an example and then you're going to have to make some interpolations usually it'll tell you right it says right here",
    "start": "1290080",
    "end": "1295600"
  },
  {
    "text": "you know um note you know um there are lots of different machines use your ip address you know that sort of thing all",
    "start": "1295600",
    "end": "1301600"
  },
  {
    "text": "right so um so yeah so that's lab step one it's gonna have you um let me just uh kind of walk through it",
    "start": "1301600",
    "end": "1308000"
  },
  {
    "text": "real quick you can start right now if you want um so open this document up you can read this little top section and",
    "start": "1308000",
    "end": "1314720"
  },
  {
    "text": "then it walks you through sshing into the lab system right it literally explains how to log in to the lab system",
    "start": "1314720",
    "end": "1321600"
  },
  {
    "text": "with ssh if you've never done that before here's the link that i was mentioning that can give you ssh help if",
    "start": "1321600",
    "end": "1326720"
  },
  {
    "text": "you need that and here's the link that shows you how to stand up one of these ubuntu boxes on your own laptop so you",
    "start": "1326720",
    "end": "1333280"
  },
  {
    "text": "can run the labs later if you want to do that right so once you've done this it has you install kubernetes we built a",
    "start": "1333280",
    "end": "1338880"
  },
  {
    "text": "really cool little script that does everything except set up the cni plug-in so we're just going to run that that's",
    "start": "1338880",
    "end": "1344240"
  },
  {
    "text": "going to take a minute or two so start that now if you if you can and then you're going to see",
    "start": "1344240",
    "end": "1349520"
  },
  {
    "text": "the status of your nodes you're going to realize you need a cni plug-in we're going to add cilium we're going to play",
    "start": "1349520",
    "end": "1354640"
  },
  {
    "text": "around with it a little bit then we're going to poke around under the covers and see how our pods work and how the ip addresses are getting",
    "start": "1354640",
    "end": "1360799"
  },
  {
    "text": "assigned and really just look at the whole ip space and then we'll clean up at the end and",
    "start": "1360799",
    "end": "1366559"
  },
  {
    "text": "so step two is services i will indeed",
    "start": "1366559",
    "end": "1371760"
  },
  {
    "text": "be breaking again for services in a little bit but if you get to the end of this lab and",
    "start": "1371760",
    "end": "1377840"
  },
  {
    "text": "we're not back into the discussion keep going right drill into the services it's okay to get ahead because",
    "start": "1377840",
    "end": "1384480"
  },
  {
    "text": "i'm pretty sure you're going to be behind at some point in this session so um yeah ssh into your labs instance",
    "start": "1384480",
    "end": "1390799"
  },
  {
    "text": "install kubernetes set up cni and then explore the pod network have fun holler",
    "start": "1390799",
    "end": "1396559"
  },
  {
    "text": "if you have questions and i am for the people who are virtual and who don't have laptops i'm going to probably do",
    "start": "1396559",
    "end": "1402080"
  },
  {
    "text": "these steps you know real quickly on on the overhead so you can just see them",
    "start": "1402080",
    "end": "1407280"
  },
  {
    "text": "all right let me uh let me let me look at the time too okay what are we talking about here so it is 11",
    "start": "1407280",
    "end": "1413919"
  },
  {
    "text": "23. so this this one might take a little bit of time i'm going to give everybody until say 11",
    "start": "1413919",
    "end": "1420240"
  },
  {
    "text": "30 and then we'll do a check in all right",
    "start": "1420240",
    "end": "1425720"
  },
  {
    "text": "so",
    "start": "1436320",
    "end": "1439320"
  },
  {
    "text": "uh",
    "start": "1455200",
    "end": "1458200"
  },
  {
    "text": "huh",
    "start": "1470000",
    "end": "1473000"
  },
  {
    "text": "obviously you can use any you know ssh client you like i'm using mobx term which i love and if you want to use",
    "start": "1478159",
    "end": "1485039"
  },
  {
    "text": "putty there's a ppk up there as well in the keys and i think it's on the sheet if you need it",
    "start": "1485039",
    "end": "1492840"
  },
  {
    "text": "hey valentin hey valentin how many we have left do we have a lot left yeah oh cool all",
    "start": "1512480",
    "end": "1519200"
  },
  {
    "text": "right",
    "start": "1519200",
    "end": "1521360"
  },
  {
    "text": "all right i just started the kubernetes install on my well i just grabbed a sheet just like you guys so",
    "start": "1527039",
    "end": "1532400"
  },
  {
    "text": "i'm ssh din i'm running the kubernetes install it's installing docker first we're using",
    "start": "1532400",
    "end": "1538240"
  },
  {
    "text": "docker that's the runtime um why docker docker's a poor choice for",
    "start": "1538240",
    "end": "1543919"
  },
  {
    "text": "production not because docker isn't amazing docker is amazing it's just giant and it has all sorts of stuff in it that you don't",
    "start": "1543919",
    "end": "1549840"
  },
  {
    "text": "want in your production environment if you're a developer or if you're experimenting you want docker because it's awesome it has all sorts of cool",
    "start": "1549840",
    "end": "1556400"
  },
  {
    "text": "tools and features and techniques that you can use for debugging and experimenting and exploring so that's",
    "start": "1556400",
    "end": "1562159"
  },
  {
    "text": "why we use docker here we just install docker and then we install the docker shim which no longer comes with",
    "start": "1562159",
    "end": "1567600"
  },
  {
    "text": "kubernetes so you have to do both steps docker's getting installed then the docker shims getting installed then",
    "start": "1567600",
    "end": "1573440"
  },
  {
    "text": "we're going to install kubernetes latest which is 1.23",
    "start": "1573440",
    "end": "1578200"
  },
  {
    "text": "oh",
    "start": "1605520",
    "end": "1608520"
  },
  {
    "text": "you might also ask what distribution of kubernetes are we using and the answer is none we're just using upstream kubernetes",
    "start": "1644720",
    "end": "1651600"
  },
  {
    "text": "plain vanilla 100 completely compatible the kubernetes and we're using cube adm",
    "start": "1651600",
    "end": "1657440"
  },
  {
    "text": "to install it which is the reference installer it's the node installer that runs",
    "start": "1657440",
    "end": "1662559"
  },
  {
    "text": "underneath like cube spray and stuff like that so no no special gimmicks in our",
    "start": "1662559",
    "end": "1669520"
  },
  {
    "text": "clusters just the basics and the stuff we add which is going to be a lot",
    "start": "1669520",
    "end": "1676919"
  },
  {
    "text": "running this script is the thing that takes the longest so everything else is a lot shorter after this",
    "start": "1691120",
    "end": "1696399"
  },
  {
    "text": "and if you think about it you know you're installing an entire kubernetes cluster from nothing so that's not bad just",
    "start": "1696399",
    "end": "1701919"
  },
  {
    "text": "a minute or two there just look at my node it's not ready it's",
    "start": "1701919",
    "end": "1708080"
  },
  {
    "text": "not ready because i don't have a cni solution so i'm going to read on in the lab",
    "start": "1708080",
    "end": "1713440"
  },
  {
    "text": "lab tells me your node's not ready now we're going to install psyllium",
    "start": "1713440",
    "end": "1719360"
  },
  {
    "text": "this is going to make our node ready there's three steps here which is you know i like to do everything kind of old",
    "start": "1719440",
    "end": "1724799"
  },
  {
    "text": "school so you can see what's happening we're downloading a tarball right that's the first piece",
    "start": "1724799",
    "end": "1730320"
  },
  {
    "text": "and then once we've got the tarball downloaded we have to extract it",
    "start": "1730320",
    "end": "1735520"
  },
  {
    "text": "and that's going to give us the psyllium cli so a lot of these you know kind of",
    "start": "1735520",
    "end": "1740720"
  },
  {
    "text": "modern projects for kubernetes use the operator pattern where they",
    "start": "1740720",
    "end": "1745840"
  },
  {
    "text": "actually have a maybe a command line tool and then they run a service in kubernetes that you can",
    "start": "1745840",
    "end": "1752320"
  },
  {
    "text": "interact with which is nice because you can get data and things from it and then that service is responsible for actually",
    "start": "1752320",
    "end": "1757360"
  },
  {
    "text": "deploying the pods that are doing the thing you're trying to do so i have the psyllium cli installed now i got my",
    "start": "1757360",
    "end": "1763360"
  },
  {
    "text": "version information but there's no psyllium on my cluster if i go back and do a get node you know still not ready",
    "start": "1763360",
    "end": "1769200"
  },
  {
    "text": "so i have to tell psyllium to install the cni plug-in that's the last step here before we are",
    "start": "1769200",
    "end": "1776240"
  },
  {
    "text": "up and running these guys of course have all sorts of crazy icons in their output which is",
    "start": "1776240",
    "end": "1783440"
  },
  {
    "text": "cute",
    "start": "1783440",
    "end": "1785759"
  },
  {
    "text": "of course every time you do one of these things containers are being downloaded right because",
    "start": "1792080",
    "end": "1797679"
  },
  {
    "text": "everything runs in containers kubernetes eats its own dog food in so far as it's possible when kuba dm installs things",
    "start": "1797679",
    "end": "1803919"
  },
  {
    "text": "anyway the control plane runs in containers in pods so you have the scheduler in a pod you have the",
    "start": "1803919",
    "end": "1809679"
  },
  {
    "text": "controller manager in a pod you have the cube proxy and a prod the the node agent the cubelet can't run",
    "start": "1809679",
    "end": "1815520"
  },
  {
    "text": "in a pod because it's the thing that creates the pods but beyond that everything's in a pod so",
    "start": "1815520",
    "end": "1821279"
  },
  {
    "text": "now that we've got psyllium up and running um we can do some things like ask it status",
    "start": "1821279",
    "end": "1828559"
  },
  {
    "text": "all right this is the nice thing about having a cli and a control plane we get all sorts of pretty colors and so it looks good right we have the",
    "start": "1828559",
    "end": "1834880"
  },
  {
    "text": "operator running and we have a single node so we have a single psilium you know agent running",
    "start": "1834880",
    "end": "1840559"
  },
  {
    "text": "if we were running you know 40 nodes because it's a daemon set it would run on every single node and there'd be 40",
    "start": "1840559",
    "end": "1846640"
  },
  {
    "text": "of them but we only have one node so we only have one of the psyllium plugins",
    "start": "1846640",
    "end": "1851760"
  },
  {
    "text": "all right and then it just has you look around and",
    "start": "1851760",
    "end": "1857279"
  },
  {
    "text": "explore the network a little bit",
    "start": "1857279",
    "end": "1860559"
  },
  {
    "text": "make sure traffic is going back and forth",
    "start": "1862399",
    "end": "1866559"
  },
  {
    "text": "it has us run a little pod and verify that we can get to it let me do that real quick",
    "start": "1868320",
    "end": "1873840"
  },
  {
    "text": "use the cube cool run command essentially creates a manifest behind the scenes and applies it to the cluster",
    "start": "1874960",
    "end": "1881760"
  },
  {
    "text": "so this one's going to create a pod called web with the image httpd and defaults for everything else",
    "start": "1881760",
    "end": "1889440"
  },
  {
    "text": "and then we can take a look at this guy output wide and kubeco get pod is going",
    "start": "1891519",
    "end": "1897760"
  },
  {
    "text": "to show us the ip of the pod and that way we can test it",
    "start": "1897760",
    "end": "1906440"
  },
  {
    "text": "all right apache up and running",
    "start": "1907760",
    "end": "1911679"
  },
  {
    "text": "thank you",
    "start": "1912799",
    "end": "1916039"
  },
  {
    "text": "some more exploration goes on we get a chance to take a look at",
    "start": "1924559",
    "end": "1929840"
  },
  {
    "text": "the psyllium config and i'll just run a couple more of these commands",
    "start": "1929840",
    "end": "1936640"
  },
  {
    "text": "all right so this is the pool of ip addresses that's going to be handed out to our pods the lab kind of",
    "start": "1941120",
    "end": "1946720"
  },
  {
    "text": "walks you through the different pools right we have the internet where everything goes except some reserved address ranges then you have",
    "start": "1946720",
    "end": "1953120"
  },
  {
    "text": "your cloud host machines which are probably using some reserve one of those reserved ranges and then you have the pod network",
    "start": "1953120",
    "end": "1960080"
  },
  {
    "text": "which is inside that cloud and so these things all need to not conflict right you don't want to conflict with",
    "start": "1960080",
    "end": "1965519"
  },
  {
    "text": "the public ip address because they might need to reach you or vice versa you could proxy them but and you don't want to conflict with the",
    "start": "1965519",
    "end": "1971600"
  },
  {
    "text": "host ips that would be confusing and then the pod ip space is also going to need to be unique",
    "start": "1971600",
    "end": "1978399"
  },
  {
    "text": "when you set up your cluster you can specify vip range for services",
    "start": "1980240",
    "end": "1985600"
  },
  {
    "text": "as we'll see in a minute but it's the cni that decides what i ip address your pod gets that's why it's",
    "start": "1985600",
    "end": "1991360"
  },
  {
    "text": "set up here in the cni function so if you wanted a different range you'd have to tell psyllium when you installed it",
    "start": "1991360",
    "end": "1996799"
  },
  {
    "text": "and if you do psyllium install minus minus help it'll dump out a gajillion options that you can use and there's also a config that you can set and apply",
    "start": "1996799",
    "end": "2004799"
  },
  {
    "text": "in kind of a more infrastructurous code approach",
    "start": "2004799",
    "end": "2009679"
  },
  {
    "text": "all right and so we test the pod network out do a couple more things and then finally we clean up at the end",
    "start": "2014799",
    "end": "2021519"
  },
  {
    "text": "i didn't actually create the client but i'm going to go ahead and just delete the web guy and call it a day",
    "start": "2021519",
    "end": "2027279"
  },
  {
    "text": "here step one done for me",
    "start": "2027279",
    "end": "2032559"
  },
  {
    "text": "you just do a quick show of hands if you're still working great um how many people have finished with step one though",
    "start": "2032559",
    "end": "2040159"
  },
  {
    "text": "okay great let's move on um if you're still working that's great don't you know don't feel slow you're probably",
    "start": "2040159",
    "end": "2045279"
  },
  {
    "text": "going really fast actually but we're going to try to keep on the clock",
    "start": "2045279",
    "end": "2050638"
  },
  {
    "text": "here so so give me half an ear while you're keep working if you want to and this is a tutorial it's all about the",
    "start": "2050639",
    "end": "2056079"
  },
  {
    "text": "hands-on so you know if you have a choice between ignoring me and you know doing the lab and not ignoring me i",
    "start": "2056079",
    "end": "2062720"
  },
  {
    "text": "would ignore me so kubernetes service communications let's take a look at how kubernetes",
    "start": "2062720",
    "end": "2068560"
  },
  {
    "text": "thinks about services when you are running pods let's think about kubernetes 1.0",
    "start": "2068560",
    "end": "2074240"
  },
  {
    "text": "kubernetes 1.0 was for microservices period end of story there were no no no no real",
    "start": "2074240",
    "end": "2081839"
  },
  {
    "text": "provisions for any kind of stateful workloads cassandra is not a",
    "start": "2081839",
    "end": "2086878"
  },
  {
    "text": "microservice right it is a clustered storage engine where you run many many",
    "start": "2086879",
    "end": "2092000"
  },
  {
    "text": "nodes and it's horizontally scalable and it's absolutely a cloud friendly kind of data store but",
    "start": "2092000",
    "end": "2099359"
  },
  {
    "text": "it's not a microservice microservices are stateless state is hard scaling your cassandra cluster sizing it doing all",
    "start": "2099359",
    "end": "2106400"
  },
  {
    "text": "those things is hard but running a micro service is easy and destroying it when you have seven",
    "start": "2106400",
    "end": "2113200"
  },
  {
    "text": "others shouldn't ripple the waters at all nobody should care you get disconnected you reconnect and you end up with one of the other guys and",
    "start": "2113200",
    "end": "2119040"
  },
  {
    "text": "they're all the same that's what microservices are all about and so kubernetes embraces this",
    "start": "2119040",
    "end": "2125200"
  },
  {
    "text": "and so we can run a whole bunch of copies of our service under a deployment in kubernetes and then",
    "start": "2125200",
    "end": "2132320"
  },
  {
    "text": "to avoid customers having to worry about the mayhem of pods scaling up and down and getting deleted because a node is",
    "start": "2132320",
    "end": "2138160"
  },
  {
    "text": "overloaded or whatever we put a service in front of it and that service has a head a cluster ip a virtual ip address it's",
    "start": "2138160",
    "end": "2146240"
  },
  {
    "text": "not associated with any interface it's just an ip and when you try to connect",
    "start": "2146240",
    "end": "2151280"
  },
  {
    "text": "to it the linux kernel has to figure out what to do because that address isn't associated with anything",
    "start": "2151280",
    "end": "2157280"
  },
  {
    "text": "there's nowhere to send the packets right and so um kubernetes implements",
    "start": "2157280",
    "end": "2162800"
  },
  {
    "text": "the routing functionality the forwarding functionality that makes that all work when you create a service you get a",
    "start": "2162800",
    "end": "2168320"
  },
  {
    "text": "cluster ip and you get the wiring that delivers your connection to one of those back end pods so how do we make that go",
    "start": "2168320",
    "end": "2175760"
  },
  {
    "text": "well there's a thing called the cube proxy it runs in a pod as a daemon set on every node in the",
    "start": "2175760",
    "end": "2181920"
  },
  {
    "text": "cluster and it's doing that stuff its job is every time a service is",
    "start": "2181920",
    "end": "2187680"
  },
  {
    "text": "created so it's watching the api service saying hey tell me about any services and when a service gets created it",
    "start": "2187680",
    "end": "2192800"
  },
  {
    "text": "immediately goes and tells the linux kernel do all this stuff right and now the sudden people can",
    "start": "2192800",
    "end": "2198160"
  },
  {
    "text": "reach those pods through those services and when pods come and go",
    "start": "2198160",
    "end": "2203680"
  },
  {
    "text": "the coop proxy is watching that too if a pod goes away he takes that pot out of the mesh if a pod shows up and has the",
    "start": "2203680",
    "end": "2210160"
  },
  {
    "text": "right label he adds that pot into the mesh so the cube proxy is is the magic",
    "start": "2210160",
    "end": "2215599"
  },
  {
    "text": "now how does the cube proxy make this work well the slowest way is it can do user mode",
    "start": "2215599",
    "end": "2221440"
  },
  {
    "text": "but this is deprecated and you know this was used in the early beta days of kubernetes where the traffic would",
    "start": "2221440",
    "end": "2226640"
  },
  {
    "text": "literally connect to the proxy and then the proxy would make the connection outbound for you so that's no good because now you've got a user mode",
    "start": "2226640",
    "end": "2232720"
  },
  {
    "text": "process and your data path is going to be slow so the next thing we can do is use iptables we just tell the kernel hey",
    "start": "2232720",
    "end": "2238640"
  },
  {
    "text": "when somebody connects to this ip address use a destination network address translation to one of these pods",
    "start": "2238640",
    "end": "2244720"
  },
  {
    "text": "a lot of people don't don't know it but you can randomly select a rule in a chain of of rules in ip tables and",
    "start": "2244720",
    "end": "2251599"
  },
  {
    "text": "that's what's happening right so if there's 20 services back there it's just going to randomly select one of them and",
    "start": "2251599",
    "end": "2257280"
  },
  {
    "text": "then send you to that guy so it's load balancing right it's random but it's load balancing and if pods are coming",
    "start": "2257280",
    "end": "2263760"
  },
  {
    "text": "and going like crazy and one of the pods gets overloaded that pod is likely to be evicted and all those connections are",
    "start": "2263760",
    "end": "2270240"
  },
  {
    "text": "going to break and they're going to redistribute immediately because the clients are going to reconnect if you're talking to a micro service you",
    "start": "2270240",
    "end": "2276400"
  },
  {
    "text": "should expect it to be ephemeral right note to people writing client code",
    "start": "2276400",
    "end": "2281680"
  },
  {
    "text": "expect that connection to break don't be surprised by it when it does you just reconnect and you're going to get",
    "start": "2281680",
    "end": "2287599"
  },
  {
    "text": "distributed to somebody else so the entropy of the cluster naturally distributes the load pretty darn well a",
    "start": "2287599",
    "end": "2292640"
  },
  {
    "text": "lot of people are like you know let's use some sophisticated global rate limit",
    "start": "2292640",
    "end": "2297839"
  },
  {
    "text": "and at the end of the day try it try the simple stuff first it's often fastest right",
    "start": "2297839",
    "end": "2303200"
  },
  {
    "text": "but if that doesn't work for you there's other options now one thing that probably is an upgrade is",
    "start": "2303200",
    "end": "2308400"
  },
  {
    "text": "ipvs so the kernel has also another mechanism ipvirtual services and it's a",
    "start": "2308400",
    "end": "2314160"
  },
  {
    "text": "little bit a teeny bit faster than iep tables in some situations and a lot faster and",
    "start": "2314160",
    "end": "2320240"
  },
  {
    "text": "some others because it uses a lot less resources that's the main thing ip tables were never meant to be you",
    "start": "2320240",
    "end": "2325760"
  },
  {
    "text": "know distributing traffic so ipvs is probably the better option you can tell cubeproxy which of these modes you want",
    "start": "2325760",
    "end": "2330880"
  },
  {
    "text": "to use and the default is iptables so that's the one that we're using in our lab because we didn't tell it to do",
    "start": "2330880",
    "end": "2336880"
  },
  {
    "text": "anything else right there are also cni plugins that have fancy features too because ebpf hey",
    "start": "2336880",
    "end": "2344000"
  },
  {
    "text": "programming the kernel sounds like that would be a way to handle these services too right well it is and it has some",
    "start": "2344000",
    "end": "2349599"
  },
  {
    "text": "benefits um so some of the plugins let you do that you can replace the cube proxy with this with psyllium if you",
    "start": "2349599",
    "end": "2356320"
  },
  {
    "text": "wanted to and let it do all that stuff we didn't tell it to do that again so it",
    "start": "2356320",
    "end": "2361359"
  },
  {
    "text": "didn't but that's an option that's on the table now remember that all of the hosts",
    "start": "2361359",
    "end": "2367200"
  },
  {
    "text": "in your cloud virtual private cloud right have to have unique addresses if they're going to talk to each other so",
    "start": "2367200",
    "end": "2372480"
  },
  {
    "text": "all your kubernetes cluster nodes have to have unique addresses and then all of the pods that run in them have to have",
    "start": "2372480",
    "end": "2379040"
  },
  {
    "text": "unique addresses and since you need to be able to get to the pods from the host in order to you know do things like",
    "start": "2379040",
    "end": "2384320"
  },
  {
    "text": "check their health and stuff you know those addresses have to be unique right non-overlapping and then the last thing",
    "start": "2384320",
    "end": "2389440"
  },
  {
    "text": "is these service ips need to be unique and non-overlapping so we have three address spaces we got to think about",
    "start": "2389440",
    "end": "2395359"
  },
  {
    "text": "when we're setting up kubernetes this is part of the architecting a cluster process right what are the address ranges we're going to use for for these",
    "start": "2395359",
    "end": "2401920"
  },
  {
    "text": "things and another interesting thing is the support for ipv4 and ipv6 we're doing everything in ipv4",
    "start": "2401920",
    "end": "2408960"
  },
  {
    "text": "no for no reason it's just what happens by default right this is the way things work by default but out there on the",
    "start": "2408960",
    "end": "2414480"
  },
  {
    "text": "internet ipv6 continues to gain steam a lot of companies especially tocos or ipv6 internally everywhere and so",
    "start": "2414480",
    "end": "2420960"
  },
  {
    "text": "there's there's a good momentum towards ipv6 in kubernetes 1.0 it was ipv4 that",
    "start": "2420960",
    "end": "2426720"
  },
  {
    "text": "was the end of the story next ipv6 only went ga in 118 right that",
    "start": "2426720",
    "end": "2434079"
  },
  {
    "text": "was a long time later and you had one or the other right no not both you could",
    "start": "2434079",
    "end": "2439359"
  },
  {
    "text": "pick one right and this is this is as far as what kubernetes is responsible for so the cluster ips right if you had",
    "start": "2439359",
    "end": "2445680"
  },
  {
    "text": "a cni plug-in that knew how to do ipv6 well knock yourself out that's fine but the services are always going to be ipv4",
    "start": "2445680",
    "end": "2452000"
  },
  {
    "text": "or ipv6 until 1.20 where we got either ipv4 or ipv6 in the",
    "start": "2452000",
    "end": "2459440"
  },
  {
    "text": "same cluster right now you could pick you could have an ipv4 service over here and an ipv6 over here pretty cool but you still",
    "start": "2459440",
    "end": "2466720"
  },
  {
    "text": "couldn't have a dual stack service right that was out of bounds until done uh one two three three weeks ago or",
    "start": "2466720",
    "end": "2473359"
  },
  {
    "text": "whatever it was we now have ga ipv4 ipv6 dual stack so you can pick",
    "start": "2473359",
    "end": "2479839"
  },
  {
    "text": "on a cluster to make a service single stack you can make it prefer dual stack and then you can require dual stack and",
    "start": "2479839",
    "end": "2487599"
  },
  {
    "text": "that means that the user's got to have both right so those are",
    "start": "2487599",
    "end": "2493119"
  },
  {
    "text": "those are those are pretty cool features the kubernetes project is really stunning how fast it moves and",
    "start": "2493119",
    "end": "2498720"
  },
  {
    "text": "how much tech is in it when you look at all the different places and how advanced it is so some things are a long",
    "start": "2498720",
    "end": "2504319"
  },
  {
    "text": "time coming that maybe was but hey it's here now services how do we create one well in",
    "start": "2504319",
    "end": "2509680"
  },
  {
    "text": "kubernetes you pretty much create everything by specifying it and giving the specification to kubernetes and",
    "start": "2509680",
    "end": "2516319"
  },
  {
    "text": "kubernetes just spends the rest of its life trying to make the status of the cluster the same as your specifications",
    "start": "2516319",
    "end": "2522960"
  },
  {
    "text": "that's what kubernetes does it makes the status of the cluster the same as your specifications that way you don't have",
    "start": "2522960",
    "end": "2530079"
  },
  {
    "text": "to constantly get up in the middle of the night and say oh that pod stop let me restart it no you said i want a pod",
    "start": "2530079",
    "end": "2536000"
  },
  {
    "text": "running and if it stops kubernetes restarts it self healing you know all these types of you know automate the",
    "start": "2536000",
    "end": "2541599"
  },
  {
    "text": "toil sre stuff so this is a service it's a very simple one it has a name web it",
    "start": "2541599",
    "end": "2547040"
  },
  {
    "text": "has a port 80. uh the port has a name too and in case you have multiple ports you can use srv records in dns to",
    "start": "2547040",
    "end": "2554000"
  },
  {
    "text": "discover which ones are which and stuff and then we have a selector that says hey",
    "start": "2554000",
    "end": "2559680"
  },
  {
    "text": "any pod that has the label key app value web gets these this traffic right so if",
    "start": "2559680",
    "end": "2566800"
  },
  {
    "text": "there's a hundred of them you'll have a hundred of those pods getting connections when this service is hit if",
    "start": "2566800",
    "end": "2571839"
  },
  {
    "text": "there's one of them then that that one will get it if there's none then you can't connect",
    "start": "2571839",
    "end": "2577520"
  },
  {
    "text": "there's no such thing as a virtual ip right it's a virtual it's just rules in a table or something like that so if",
    "start": "2577520",
    "end": "2583200"
  },
  {
    "text": "there aren't any pods you're not going to go any further all right so that's the idea behind a service now all of the",
    "start": "2583200",
    "end": "2589839"
  },
  {
    "text": "pods that match that selector create something called an end point right the",
    "start": "2589839",
    "end": "2595200"
  },
  {
    "text": "the service could push all the pod information that match the service down to all the",
    "start": "2595200",
    "end": "2601440"
  },
  {
    "text": "cube proxies but that'd be very expensive because you can have clusters with thousands and thousands of pods right and so what's better is to just",
    "start": "2601440",
    "end": "2608640"
  },
  {
    "text": "create a little thing that has the ip address and and that's about it right an endpoint that identifies the targets",
    "start": "2608640",
    "end": "2615599"
  },
  {
    "text": "that you want and then you send those down to the cube proxy so earlier i said hey the coup proxy's watching the pods",
    "start": "2615599",
    "end": "2621680"
  },
  {
    "text": "it it's actually looking for end points right and so the the the service controller is creating the endpoints and",
    "start": "2621680",
    "end": "2627040"
  },
  {
    "text": "then the the cube proxy is getting those so an endpoint looks like this up here",
    "start": "2627040",
    "end": "2632640"
  },
  {
    "text": "what happens if you create a service that has no selector that service",
    "start": "2632640",
    "end": "2638319"
  },
  {
    "text": "will never ever identify any pods to send traffic to so you're going to have to do it and",
    "start": "2638319",
    "end": "2644160"
  },
  {
    "text": "this is something that you might do in a scenario where those pot those those pods aren't pods what if you have 16 vms",
    "start": "2644160",
    "end": "2651839"
  },
  {
    "text": "and every once in a while some of them shut down and some new ones stand up you could create your own glue to create",
    "start": "2651839",
    "end": "2657839"
  },
  {
    "text": "these end points and because the end point is named website we know it's a sub-resource of",
    "start": "2657839",
    "end": "2664720"
  },
  {
    "text": "the service website and then it's got an address and the ports just like we you know had before defined on the on the",
    "start": "2664720",
    "end": "2671040"
  },
  {
    "text": "server side and then next thing you know you look at the endpoints for your service and this guy shows up if you",
    "start": "2671040",
    "end": "2676960"
  },
  {
    "text": "apply that endpoint so you can create your own endpoints you can have them produced dynamically by kubernetes so in",
    "start": "2676960",
    "end": "2682480"
  },
  {
    "text": "general if the you're you know routing to pods you would want them dynamically created now what kinds of services do we",
    "start": "2682480",
    "end": "2688240"
  },
  {
    "text": "have to work with there's a bunch the first kind is a headless service a headless service",
    "start": "2688240",
    "end": "2694160"
  },
  {
    "text": "has no cluster ip you literally say cluster ip none it actually turns out it's a cluster ip",
    "start": "2694160",
    "end": "2700400"
  },
  {
    "text": "type of service with no cluster ip i don't know how that works but anyway um you define a headless service by",
    "start": "2700400",
    "end": "2707200"
  },
  {
    "text": "creating a cluster ip service with no cluster ip what is that good for it's good for situations where the pods",
    "start": "2707200",
    "end": "2714720"
  },
  {
    "text": "aren't the same what if one of your pods is a kafka pod",
    "start": "2714720",
    "end": "2719760"
  },
  {
    "text": "and it has the topic nasdaq and what if the other of your pods is a",
    "start": "2719760",
    "end": "2726160"
  },
  {
    "text": "kafka pod and it has on it the topic new york stock exchange and another pod has",
    "start": "2726160",
    "end": "2731839"
  },
  {
    "text": "um life and so on right well you can't connect to the life pod if you",
    "start": "2731839",
    "end": "2737839"
  },
  {
    "text": "want to get the new york stock exchange data they have identity these pods they're not micro services so anytime",
    "start": "2737839",
    "end": "2745040"
  },
  {
    "text": "you have a situation where they're not micro services but you want dns resolution and stuff like that this is",
    "start": "2745040",
    "end": "2750160"
  },
  {
    "text": "the kind of service you want next cluster ip cluster ip is for microservices right where it just sends",
    "start": "2750160",
    "end": "2756960"
  },
  {
    "text": "the traffic that's the first example we looked at node port is another one where if if",
    "start": "2756960",
    "end": "2762720"
  },
  {
    "text": "packets are coming in from the outside world and we want them to be delivered to our service we can use a port on",
    "start": "2762720",
    "end": "2768960"
  },
  {
    "text": "every node on every host in the cluster and and have that port forward to our service",
    "start": "2768960",
    "end": "2774880"
  },
  {
    "text": "so that that port is reserved for us in the entire cluster so obviously the",
    "start": "2774880",
    "end": "2779920"
  },
  {
    "text": "the control plane needs to know what port range you want to use and it needs to be in control of which ports are",
    "start": "2779920",
    "end": "2785599"
  },
  {
    "text": "handed out and so on so we'll look at node port a little bit more later load balancer is like node port except it",
    "start": "2785599",
    "end": "2792000"
  },
  {
    "text": "also stands up an external load balancer this requires a plug-in right we have to have some sort of external thing like a",
    "start": "2792000",
    "end": "2799119"
  },
  {
    "text": "you know an azure load balancer or google cloud network load balancer or something you know to interact with or",
    "start": "2799119",
    "end": "2804640"
  },
  {
    "text": "metal lb as we were looking at earlier and then lastly we have external name this is for scenarios where you have a",
    "start": "2804640",
    "end": "2811359"
  },
  {
    "text": "service name that you want to be resolvable inside your cluster we're going to look at dns more in the next module but you actually want it to",
    "start": "2811359",
    "end": "2819119"
  },
  {
    "text": "look for some name that's outside your cluster right so you're going to make a name mapping and you can do that with",
    "start": "2819119",
    "end": "2824160"
  },
  {
    "text": "external name all right so lab step 2 we're going to create a deployment which is going to have several pods we're",
    "start": "2824160",
    "end": "2830240"
  },
  {
    "text": "going to create a cluster ip service we're going to connect to the service see the traffic reach the deployment and",
    "start": "2830240",
    "end": "2835520"
  },
  {
    "text": "come back and then we're going to figure out how it works we're going to get under the covers look at the ip tables",
    "start": "2835520",
    "end": "2841040"
  },
  {
    "text": "poke around a little bit and see how things are happening okay so we are",
    "start": "2841040",
    "end": "2846240"
  },
  {
    "text": "uh looking at uh 11 47 how is that possible okay let's",
    "start": "2846240",
    "end": "2851760"
  },
  {
    "text": "let's uh let's give everybody say um eight minutes we'll come back at 55 minutes after",
    "start": "2851760",
    "end": "2859280"
  },
  {
    "text": "nothing to install in this session so but there is a lot of stuff to look at",
    "start": "2859280",
    "end": "2864319"
  },
  {
    "text": "so 11 55 and we will be coming back",
    "start": "2864319",
    "end": "2869440"
  },
  {
    "text": "okay so i'm going to go ahead and do this second step for people virtual just so you can get an idea what's happening",
    "start": "2870640",
    "end": "2876720"
  },
  {
    "text": "here and i'll talk through it but for the people locally you can just ignore me and work on the lab yourself",
    "start": "2876720",
    "end": "2882240"
  },
  {
    "text": "um so first thing we're going to do is we need some pods to connect to so we're going to create a deployment with three",
    "start": "2882240",
    "end": "2887760"
  },
  {
    "text": "replicas and it's just going to run the apache web server so we do that",
    "start": "2887760",
    "end": "2892800"
  },
  {
    "text": "okay cool if i can type",
    "start": "2892800",
    "end": "2898960"
  },
  {
    "text": "all right good we got our three pods up and running now we're going to um go ahead and",
    "start": "2898960",
    "end": "2905599"
  },
  {
    "text": "show the labels on these pods",
    "start": "2905599",
    "end": "2909680"
  },
  {
    "text": "and when you create a deployment using that imperative technique which is",
    "start": "2911839",
    "end": "2916880"
  },
  {
    "text": "that's just quick and dirty right normally you'd create a manifest but when you use that technique you're going",
    "start": "2916880",
    "end": "2921920"
  },
  {
    "text": "to get a label key app and a value which is the name of the deployment so i can",
    "start": "2921920",
    "end": "2927599"
  },
  {
    "text": "predict that right i know i'm going to have this app website label i don't know what the name of the pod is going to be because they're ephemeral they come and",
    "start": "2927599",
    "end": "2932960"
  },
  {
    "text": "go and they're identity-less right i shouldn't care about the name but i know that they're part of this website you know",
    "start": "2932960",
    "end": "2939520"
  },
  {
    "text": "package all right so the next thing i want to do is i want to create a cluster ip service and we're going to do this",
    "start": "2939520",
    "end": "2946960"
  },
  {
    "text": "this is basically the exact same service we just looked at in the slides",
    "start": "2947520",
    "end": "2953000"
  },
  {
    "text": "all right drop that in there",
    "start": "2956880",
    "end": "2960559"
  },
  {
    "text": "all right cube ctl get all doesn't get everything",
    "start": "2967520",
    "end": "2973359"
  },
  {
    "text": "but it gets most of the stuff you care about so i got my three pods i have the replica set under the deployment so the",
    "start": "2973359",
    "end": "2978880"
  },
  {
    "text": "deployment created the replica set for me and then i've got my service website and it has a cluster ip so that was",
    "start": "2978880",
    "end": "2985200"
  },
  {
    "text": "handed to me by kubernetes kubernetes decides what that's going to be because kubernetes has the service",
    "start": "2985200",
    "end": "2991200"
  },
  {
    "text": "controller and it also um knows what the range of addresses that you want to use are now if we had used",
    "start": "2991200",
    "end": "2998400"
  },
  {
    "text": "cube adm with the config file or didn't given to the right command line parameters we get to change that to use",
    "start": "2998400",
    "end": "3003440"
  },
  {
    "text": "something else if we wanted to all right so i'm going to curl that and it works but i have no idea which",
    "start": "3003440",
    "end": "3010559"
  },
  {
    "text": "pod i hit and i don't care they're all the same they're replicas that's the point",
    "start": "3010559",
    "end": "3016960"
  },
  {
    "text": "all right so there's some other good stuff in here and then the next thing that we're going to do",
    "start": "3016960",
    "end": "3022079"
  },
  {
    "text": "is we're going to look for the range that kubernetes is using so this is that",
    "start": "3022079",
    "end": "3028480"
  },
  {
    "text": "service controller ip range right that's where the the um the ip addresses are coming from for",
    "start": "3028480",
    "end": "3034400"
  },
  {
    "text": "these services so it's a 1096 stroke 12 is what the default is you could change it okay",
    "start": "3034400",
    "end": "3041040"
  },
  {
    "text": "a little bit more poking around and now we're going to look at some endpoints so let's take a look at the end points for the website",
    "start": "3041040",
    "end": "3048000"
  },
  {
    "text": "and we can see there's three of them right 10 15 10 154 and 10.54",
    "start": "3048000",
    "end": "3054800"
  },
  {
    "text": "and remember they're always gonna have the same you know first three octets because the hosts are subnetted at 24",
    "start": "3054800",
    "end": "3060079"
  },
  {
    "text": "bits and then the overall space is eight bits we saw that in c i so these are c i",
    "start": "3060079",
    "end": "3065280"
  },
  {
    "text": "controlled right by cilium and then the service ip the cluster ip is controlled by kubernetes because it's the service",
    "start": "3065280",
    "end": "3071599"
  },
  {
    "text": "controller piece all right good let's see what else we got here",
    "start": "3071599",
    "end": "3076880"
  },
  {
    "text": "so the next thing we're going to do is try to figure out how this all works so we're going to look into the ip tables",
    "start": "3076880",
    "end": "3082640"
  },
  {
    "text": "and we're going to look for the cluster ip obviously i can't use the one from the",
    "start": "3082640",
    "end": "3087920"
  },
  {
    "text": "lab i have to use the one that i got which is potentially very different",
    "start": "3087920",
    "end": "3094440"
  },
  {
    "text": "um service ips aren't doled out sequentially because then you could predict what the next one would be and that leaves you open to some security",
    "start": "3096400",
    "end": "3102240"
  },
  {
    "text": "issues so they're randomly selected from the range all right so i can see that there's an ip",
    "start": "3102240",
    "end": "3108079"
  },
  {
    "text": "tables rule that says if tcp traffic comes from anywhere and goes to that address",
    "start": "3108079",
    "end": "3114319"
  },
  {
    "text": "on tcp port 80 use that chain to figure out what",
    "start": "3114319",
    "end": "3120240"
  },
  {
    "text": "happens so the next thing i need to do is i need to update my grip",
    "start": "3120240",
    "end": "3127200"
  },
  {
    "text": "to look at the chain called this",
    "start": "3127280",
    "end": "3131280"
  },
  {
    "text": "and",
    "start": "3133119",
    "end": "3136119"
  },
  {
    "text": "actually",
    "start": "3139839",
    "end": "3142160"
  },
  {
    "text": "ah yeah there we go and so that that is pointing us at our service",
    "start": "3149440",
    "end": "3155520"
  },
  {
    "text": "and you can see here this guy says all right um",
    "start": "3155520",
    "end": "3160800"
  },
  {
    "text": "destination ip80",
    "start": "3160960",
    "end": "3164520"
  },
  {
    "text": "let's run this guy here",
    "start": "3169760",
    "end": "3173800"
  },
  {
    "text": "there we go and so those are the three pods that we saw in our deployment and you can see if you",
    "start": "3190720",
    "end": "3197599"
  },
  {
    "text": "look at the packet counts you can of course tell which one you hit when you did your curl right it's this bottom",
    "start": "3197599",
    "end": "3203680"
  },
  {
    "text": "guy as it turns out so it's just a random probability 33 when there's three of them 50 when there's two of them and",
    "start": "3203680",
    "end": "3209280"
  },
  {
    "text": "then the last one's the default and so this is the guy that got hit and so if i look for the pod that's",
    "start": "3209280",
    "end": "3215520"
  },
  {
    "text": "10.0.0.54",
    "start": "3215520",
    "end": "3218520"
  },
  {
    "text": "and i look at that guy's logs right so this is 54 down here",
    "start": "3224960",
    "end": "3230240"
  },
  {
    "text": "so let's look at the logs of this guy we'll see a bunch of stuff but there's the hit",
    "start": "3230240",
    "end": "3235359"
  },
  {
    "text": "right that was our curl and then if we do the same thing and look at logs",
    "start": "3235359",
    "end": "3243119"
  },
  {
    "text": "for anybody with the label app website",
    "start": "3243119",
    "end": "3248720"
  },
  {
    "text": "oh wow",
    "start": "3248720",
    "end": "3251838"
  },
  {
    "text": "there we go we can see that there are no hits anywhere in here except this one from our curl so all",
    "start": "3257359",
    "end": "3263680"
  },
  {
    "text": "three of the other pods right this guy no hits this guy no hits this guy got a hit",
    "start": "3263680",
    "end": "3268960"
  },
  {
    "text": "so the service is working right our ip tables are solving the problem of randomly distributing traffic to our",
    "start": "3268960",
    "end": "3275200"
  },
  {
    "text": "pods on the back end there's a little bit more exploration that goes on there",
    "start": "3275200",
    "end": "3281440"
  },
  {
    "text": "but that brings us down to the bottom section where we get to delete some things and see how stuff works so for",
    "start": "3281440",
    "end": "3286799"
  },
  {
    "text": "example",
    "start": "3286799",
    "end": "3289799"
  },
  {
    "text": "i'm just going to pick one of these guys at random and delete it and a bunch of things happen when you do",
    "start": "3296720",
    "end": "3302720"
  },
  {
    "text": "this number one the curl keeps working and you never even see any hesitation",
    "start": "3302720",
    "end": "3309040"
  },
  {
    "text": "and the reason is that the service proxy has taken the deleted pod out of the",
    "start": "3309040",
    "end": "3314079"
  },
  {
    "text": "mesh and of course what also happens is that kubernetes immediately realizes that there aren't",
    "start": "3314079",
    "end": "3320799"
  },
  {
    "text": "three pods anymore and since the replica set and the deployment were set to have three it creates a brand new one it's",
    "start": "3320799",
    "end": "3326240"
  },
  {
    "text": "not the same pod right that guy if you look at the ip",
    "start": "3326240",
    "end": "3332319"
  },
  {
    "text": "right not the same pod right this guy is 134 and he's been",
    "start": "3332720",
    "end": "3338799"
  },
  {
    "text": "running for 31 seconds versus the other guys which are seven minutes so",
    "start": "3338799",
    "end": "3344400"
  },
  {
    "text": "the mesh is dynamic right it's taking advantage of this dynamic environment and automatically updating",
    "start": "3344400",
    "end": "3351280"
  },
  {
    "text": "all of the routing or forwarding necessary to make things go all right so let's um let's move on",
    "start": "3351280",
    "end": "3358960"
  },
  {
    "text": "and keep in mind if you're if you're done with two before i move on feel free to move on yourself",
    "start": "3358960",
    "end": "3364880"
  },
  {
    "text": "all right so kubernetes dns let's talk about dns briefly and how kubernetes implements it if",
    "start": "3364880",
    "end": "3370720"
  },
  {
    "text": "you're still working on lab two keep working just lend me half an ear so dns and kubernetes there are three files",
    "start": "3370720",
    "end": "3376799"
  },
  {
    "text": "that your containers get that come from the container runtime",
    "start": "3376799",
    "end": "3381839"
  },
  {
    "text": "not from your pot your image your container image they're always overlaid by the container",
    "start": "3381839",
    "end": "3387920"
  },
  {
    "text": "runtime and the reason is if you take a http container and you run it in singapore it's going to get one ip if",
    "start": "3387920",
    "end": "3394160"
  },
  {
    "text": "you run it in london it's going to get another ip so how could you possibly create an etsy host file with the",
    "start": "3394160",
    "end": "3400960"
  },
  {
    "text": "correct information right since it should have your ip and your host name in there how could you possibly create a hostname",
    "start": "3400960",
    "end": "3407680"
  },
  {
    "text": "file with the correct information since the name of your host when you're a pod",
    "start": "3407680",
    "end": "3412799"
  },
  {
    "text": "is the name of your pod and that's dynamically being created so you don't even know what it's going to be and then the final thing is",
    "start": "3412799",
    "end": "3419440"
  },
  {
    "text": "resolve.conf every kubernetes cluster runs core dns",
    "start": "3419440",
    "end": "3424720"
  },
  {
    "text": "by default some distros change it and use something else and some distros configure core dns in different ways but",
    "start": "3424720",
    "end": "3431599"
  },
  {
    "text": "there is a dns server built into kubernetes and when you use the reference installer kubereum you get",
    "start": "3431599",
    "end": "3436960"
  },
  {
    "text": "core dns which is another cncf project one of the earliest ones and so core dns will automatically",
    "start": "3436960",
    "end": "3443520"
  },
  {
    "text": "resolve service names inside your cluster to their virtual ips so that you can just use names instead",
    "start": "3443520",
    "end": "3449520"
  },
  {
    "text": "of ips which is great but that means those three files have to be cr you know correctly configured and so it's the",
    "start": "3449520",
    "end": "3455520"
  },
  {
    "text": "cubelet that understands your kubernetes environment and sets these files up so that your pod works and so",
    "start": "3455520",
    "end": "3462640"
  },
  {
    "text": "you have um you know uh core dns running in the cube system name",
    "start": "3462640",
    "end": "3468240"
  },
  {
    "text": "space as you can see up here we have two pods core dns pods so if one of them crashes we have resilience right",
    "start": "3468240",
    "end": "3473440"
  },
  {
    "text": "kubernetes eats its own dog food core dns runs in a deployment and then there's a service also that",
    "start": "3473440",
    "end": "3480319"
  },
  {
    "text": "gives us a cluster ip for dns inside kubernetes and it's 10.96.0.10.",
    "start": "3480319",
    "end": "3486079"
  },
  {
    "text": "that's the default ip for dns and it's going to be injected into every single pod in resolve.conf",
    "start": "3486079",
    "end": "3492000"
  },
  {
    "text": "because when your pod tries to look up a name it needs to go to core dns to find the ip of that service right we don't",
    "start": "3492000",
    "end": "3498319"
  },
  {
    "text": "generally look at pods right they're ephemeral they're they're they're we don't care about them we care about the api that we're trying to",
    "start": "3498319",
    "end": "3504559"
  },
  {
    "text": "consume right the interface not the implementation and so that's a quick look at core dns and how",
    "start": "3504559",
    "end": "3510799"
  },
  {
    "text": "it's set up and what it does and then um if you want to think about dns inside a",
    "start": "3510799",
    "end": "3516240"
  },
  {
    "text": "cluster number one you might have many clusters so you can give every single cluster its own suffix right",
    "start": "3516240",
    "end": "3521760"
  },
  {
    "text": "cluster.local's the default and so you get cluster.local in the example we're going to look at next there's the service bucket where",
    "start": "3521760",
    "end": "3528559"
  },
  {
    "text": "services live there's some other buckets but this is the most important one and then name spaces are a thing in kubernetes",
    "start": "3528559",
    "end": "3534720"
  },
  {
    "text": "right if i want dev and production if i want team a and team b if i want um",
    "start": "3534720",
    "end": "3539839"
  },
  {
    "text": "you know blue green whatever different name spaces are isolated from each other and so if you create a service called fred",
    "start": "3539839",
    "end": "3547040"
  },
  {
    "text": "and i try to create one and i get an error that's going to be confusing right if you're if we're in completely",
    "start": "3547040",
    "end": "3552160"
  },
  {
    "text": "different departments and context and we don't even normally talk to each other that's going to be a big problem so namespaces give you the ability to",
    "start": "3552160",
    "end": "3558319"
  },
  {
    "text": "create any name you want which means the dns has to be isolated and so the",
    "start": "3558319",
    "end": "3563839"
  },
  {
    "text": "namespace is in the dns name and then finally you have the name of the service itself so an example of a realistic",
    "start": "3563839",
    "end": "3570799"
  },
  {
    "text": "production dns name for a service in kubernetes might be web if your service is called web",
    "start": "3570799",
    "end": "3576960"
  },
  {
    "text": "production if your namespace is called production dot sbc and then kates54.rx.cm.com",
    "start": "3576960",
    "end": "3583760"
  },
  {
    "text": "if that's the suffix you gave that cluster and so you can see with this kind of a unique name i could actually",
    "start": "3583760",
    "end": "3589359"
  },
  {
    "text": "reach a service in a completely different cluster right i could give the name of the service the namespace in the cluster the",
    "start": "3589359",
    "end": "3596319"
  },
  {
    "text": "svc and then the cluster suffix and as long as my networking normal you know computer networking infrastructure knows",
    "start": "3596319",
    "end": "3602079"
  },
  {
    "text": "how to deliver that packet to that cluster we've got connectivity so headless services are another thing",
    "start": "3602079",
    "end": "3608640"
  },
  {
    "text": "we mentioned if you say cluster i p none you'll get a headless service well what happens in a headless service in a",
    "start": "3608640",
    "end": "3614160"
  },
  {
    "text": "headless service you don't want the cluster ip you don't want to look that up because it's no good right you don't",
    "start": "3614160",
    "end": "3620319"
  },
  {
    "text": "want to randomly go somewhere if i want new york data i have to talk to that kafka node if i want life data i got to",
    "start": "3620319",
    "end": "3625760"
  },
  {
    "text": "talk to that kafka node so in a headless service you get the actual ips of all of the nodes",
    "start": "3625760",
    "end": "3634799"
  },
  {
    "text": "or all the pods when you look up the service name so it's not just one ip of the head of the cluster ip you're going",
    "start": "3634799",
    "end": "3641440"
  },
  {
    "text": "to get all the pod ips together the other thing that is important is that there's a special controller for",
    "start": "3641440",
    "end": "3648799"
  },
  {
    "text": "stateful pods called a stateful set and it creates pods with deterministic names",
    "start": "3648799",
    "end": "3656400"
  },
  {
    "text": "with identity with persistent identity if this pod which is let's call let's",
    "start": "3656400",
    "end": "3661520"
  },
  {
    "text": "call it web 7 gets evicted from a computer we won't get web 58 over here we'll get",
    "start": "3661520",
    "end": "3667520"
  },
  {
    "text": "web 7 again over here might have a different ip but the name will be the same so if you create a staple set of",
    "start": "3667520",
    "end": "3674880"
  },
  {
    "text": "redis the pods will be called redis 0 redis 1 redis 2 with an ordinal as they get",
    "start": "3674880",
    "end": "3680559"
  },
  {
    "text": "created so you can predict the name and that name will be persistent it won't go away in other words the kafka guy that's",
    "start": "3680559",
    "end": "3687119"
  },
  {
    "text": "servicing the nasdaq market data when it crashes it's going to fire back",
    "start": "3687119",
    "end": "3692319"
  },
  {
    "text": "up over here and it's going to still be kafka 7 with the nasdaq data and the",
    "start": "3692319",
    "end": "3697760"
  },
  {
    "text": "volume it was using is going to chase it if it's network attachable so that's",
    "start": "3697760",
    "end": "3703280"
  },
  {
    "text": "what we want in a stateful set and so if i need to look up kafka 7 i don't want to fix myself on the ip",
    "start": "3703280",
    "end": "3709359"
  },
  {
    "text": "what if he get gets punted to a new machine and gets a different ip i want to use the dns name right i want to be",
    "start": "3709359",
    "end": "3715039"
  },
  {
    "text": "abstract from the machinery of the networking and so i could say hey redis1 dot redis dot",
    "start": "3715039",
    "end": "3721599"
  },
  {
    "text": "data ns which is my namespace service cluster local let's say that's the guy who has the nasdaq data and i",
    "start": "3721599",
    "end": "3727920"
  },
  {
    "text": "would just connect to that guy every time and i would always get the nasdaq data so that's what a headless service brings to the table it creates this dns",
    "start": "3727920",
    "end": "3735440"
  },
  {
    "text": "structure for stateful pods and generally that's why you use a headless service when you have stateful pods",
    "start": "3735440",
    "end": "3742079"
  },
  {
    "text": "so overriding the dns is also possible what if you're an administrator and you have to run a pod and that pod needs to",
    "start": "3742079",
    "end": "3748880"
  },
  {
    "text": "talk to an external dns system you don't want it going to the internal one you want to go into the external one you can",
    "start": "3748880",
    "end": "3755039"
  },
  {
    "text": "set up your resolve.conf as custom as you like resolve.conf is generally going to have a name server to connect to",
    "start": "3755039",
    "end": "3761839"
  },
  {
    "text": "searches so suffixes that you would add right if i look for web it's going to work why because there's a suffix in",
    "start": "3761839",
    "end": "3768160"
  },
  {
    "text": "there that is going to specify my namespace.service.whatever my cluster suffix is i can just look up the service",
    "start": "3768160",
    "end": "3774799"
  },
  {
    "text": "and it works if i want to look up a service in another namespace i can just say service.other namespace and it will work",
    "start": "3774799",
    "end": "3781200"
  },
  {
    "text": "because there's multiple search paths right for each piece of the um dns name",
    "start": "3781200",
    "end": "3786720"
  },
  {
    "text": "and then finally you have options that you can set so this is if you're if you're not a dns guru you can ignore this but basically these are the ways",
    "start": "3786720",
    "end": "3792480"
  },
  {
    "text": "that you can override what's in the resolve.com so step three playing around with dns let's give everybody um",
    "start": "3792480",
    "end": "3799200"
  },
  {
    "text": "let's say until ten after um to work through that",
    "start": "3799200",
    "end": "3804079"
  },
  {
    "text": "seven minutes",
    "start": "3804640",
    "end": "3807880"
  },
  {
    "text": "again go ahead and work on your own i'm just gonna for the virtual folks and for people who don't have a laptop i'll just give you a preview here",
    "start": "3811119",
    "end": "3816799"
  },
  {
    "text": "so let's see did i clean up after myself last time i did not let me go ahead and do that so",
    "start": "3816799",
    "end": "3824319"
  },
  {
    "text": "i'm going to delete some stuff real quick",
    "start": "3824319",
    "end": "3828798"
  },
  {
    "text": "all right so on the dns side we're going to create a deployment again",
    "start": "3834000",
    "end": "3839839"
  },
  {
    "text": "and then we're going to expose it this is a cheeky way to create a service right it creates a service that's wired",
    "start": "3845119",
    "end": "3851760"
  },
  {
    "text": "to that deployment so it figures out what labels to use automatically and now i'm going to",
    "start": "3851760",
    "end": "3859200"
  },
  {
    "text": "run a client and we're going to look around at how we can resolve the name",
    "start": "3859200",
    "end": "3864880"
  },
  {
    "text": "instead of the ip so busy box image has to download we'll let it do that and the idea is let's",
    "start": "3864880",
    "end": "3871920"
  },
  {
    "text": "just try first to w there's no curl in busybox so we'll w get the website and we're gonna this is dns right",
    "start": "3871920",
    "end": "3878400"
  },
  {
    "text": "i'm saying hey look up website i mean how does that work right",
    "start": "3878400",
    "end": "3884160"
  },
  {
    "text": "how does that work it works but how does it work well let's take a look at the dns machinery",
    "start": "3884160",
    "end": "3889520"
  },
  {
    "text": "right the first thing that we would want to do is look at the resolve.conf right whenever your",
    "start": "3889520",
    "end": "3895039"
  },
  {
    "text": "resolver the the part of the linux library or the you know the the glib c",
    "start": "3895039",
    "end": "3900640"
  },
  {
    "text": "or whatever it is that's doing your resolution it's probably going to a cache if it doesn't see the name there",
    "start": "3900640",
    "end": "3906559"
  },
  {
    "text": "then it's looking in your etsy host if it doesn't see the name there then it's going to dns so where does it find the",
    "start": "3906559",
    "end": "3911599"
  },
  {
    "text": "dns server well there you go myresolv.com recognize that ip it's",
    "start": "3911599",
    "end": "3917079"
  },
  {
    "text": "10.96.0.1 that's our core dns service it's the cluster ip of our core dns",
    "start": "3917079",
    "end": "3922559"
  },
  {
    "text": "kubernetes eats its own dog food then look at the search suffixes i'm in the default namespace on cluster.local",
    "start": "3922559",
    "end": "3930240"
  },
  {
    "text": "so when you make the name right if you if you fully qualify it",
    "start": "3930240",
    "end": "3936880"
  },
  {
    "text": "and you say dot default dot service",
    "start": "3936880",
    "end": "3943200"
  },
  {
    "text": "dot cluster dot local right that's what's happening right",
    "start": "3943200",
    "end": "3948720"
  },
  {
    "text": "we're just adding that search suffix and it's a fully qualified name it won't conflict with website services and other namespaces",
    "start": "3948720",
    "end": "3956319"
  },
  {
    "text": "what if i want to get to a website service in another namespace well you can right you can simply say website dot",
    "start": "3956319",
    "end": "3964799"
  },
  {
    "text": "prod let's say now that's not going to work because i don't have a prod name space but you can see it doesn't work right it it would have worked if it was",
    "start": "3964799",
    "end": "3971520"
  },
  {
    "text": "in default but you said go look in prod and there isn't one there and so notice that this guy was resolving with",
    "start": "3971520",
    "end": "3978839"
  },
  {
    "text": "service.cluster.local the second search right suffix and then we have cluster.local and then whatever gets",
    "start": "3978839",
    "end": "3984559"
  },
  {
    "text": "inherited from the host machines all right cool so we can we now have the idea of like how the pod side of it's",
    "start": "3984559",
    "end": "3990799"
  },
  {
    "text": "working right and i'm just going to exit out of this guy",
    "start": "3990799",
    "end": "3996240"
  },
  {
    "text": "and if we do a cube ctl get all in the namespace",
    "start": "3996240",
    "end": "4002960"
  },
  {
    "text": "cube system you know there's the machinery right in cube system we have the core dns",
    "start": "4002960",
    "end": "4010480"
  },
  {
    "text": "deployment with two pods and we have our replica set and we have uh the two pods",
    "start": "4010480",
    "end": "4015520"
  },
  {
    "text": "up there and then there's the core dns service so those are the pieces of the puzzle",
    "start": "4015520",
    "end": "4021839"
  },
  {
    "text": "all right and the lab goes on and it has you play around a little bit with some of this stuff then it has you create a",
    "start": "4021839",
    "end": "4027839"
  },
  {
    "text": "headless service got a couple minutes i might do that",
    "start": "4027839",
    "end": "4032960"
  },
  {
    "text": "real quick so i'm going to go ahead and create this headless service the special thing about the headless service over a normal service",
    "start": "4032960",
    "end": "4040480"
  },
  {
    "text": "is that it has no cluster ip so you can see at the bottom here cluster ip none",
    "start": "4042559",
    "end": "4050640"
  },
  {
    "text": "all right and then the lab has us take a look at the cluster ip service we see that he's got no cluster ip",
    "start": "4058160",
    "end": "4065039"
  },
  {
    "text": "and then we're going to jump back into that pod and we're going to do some ns lookups to see what kind of dns",
    "start": "4065039",
    "end": "4070960"
  },
  {
    "text": "trouble we can get into so i'm going to cube ctl attach",
    "start": "4070960",
    "end": "4076880"
  },
  {
    "text": "my input stream to what was it called client",
    "start": "4076880",
    "end": "4082559"
  },
  {
    "text": "client there we go okay and so let's go ahead and try that ns look up on headless website that we just created",
    "start": "4083680",
    "end": "4089920"
  },
  {
    "text": "and you can see i don't get back a single ip i get back all of them there's three pods i get all three of them",
    "start": "4089920",
    "end": "4096480"
  },
  {
    "text": "and some dns errors but you get the idea right so we did it the lookup worked we got the",
    "start": "4096480",
    "end": "4102640"
  },
  {
    "text": "three pods and you can see that these these these three pods they don't have",
    "start": "4102640",
    "end": "4107838"
  },
  {
    "text": "unique identity they're created by a deployment they have random names and so",
    "start": "4107839",
    "end": "4113040"
  },
  {
    "text": "we just hey here are the ip addresses if you want to connect to one you can but the idea then is to take this to the",
    "start": "4113040",
    "end": "4118880"
  },
  {
    "text": "next level where we put the headless service on top of a staple set",
    "start": "4118880",
    "end": "4125120"
  },
  {
    "text": "so that's this guy down here note that a yaml file can have multiple yaml documents",
    "start": "4125120",
    "end": "4133080"
  },
  {
    "text": "and that's exactly what's going on in here we have the first part is our service right so",
    "start": "4133120",
    "end": "4138480"
  },
  {
    "text": "that's just the the service without the cluster ip right the",
    "start": "4138480",
    "end": "4144159"
  },
  {
    "text": "headless service and then this is the stateful set we're saying hey you know we're going to pretend that these nginx guys are actually",
    "start": "4144159",
    "end": "4150798"
  },
  {
    "text": "stateful they're not but it's all right and now let's um",
    "start": "4150799",
    "end": "4156719"
  },
  {
    "text": "cube cto apply minus f that guy",
    "start": "4156719",
    "end": "4162960"
  },
  {
    "text": "now what we can see is we have the we've got this uh new staple set called",
    "start": "4169520",
    "end": "4176400"
  },
  {
    "text": "web state right and that web state has created a pod web state zero",
    "start": "4176400",
    "end": "4183600"
  },
  {
    "text": "so the pod gets the name of the staple set plus an ordinal and if i cube ctl",
    "start": "4183600",
    "end": "4189679"
  },
  {
    "text": "scale stateful set",
    "start": "4189679",
    "end": "4196960"
  },
  {
    "text": "web state to [Music] replicas equal three",
    "start": "4196960",
    "end": "4204560"
  },
  {
    "text": "you gotta spell it right unfortunately there's a shortcut all right so that's scaled",
    "start": "4208719",
    "end": "4215199"
  },
  {
    "text": "now there we go right zero one and two so if we go back up and attach again",
    "start": "4215199",
    "end": "4222880"
  },
  {
    "text": "to our previous guy and then we ns look up",
    "start": "4222880",
    "end": "4228560"
  },
  {
    "text": "web state um let's let's just do that you can see",
    "start": "4228560",
    "end": "4234560"
  },
  {
    "text": "that we get the lookup as always right webstate is in fact a service but",
    "start": "4234560",
    "end": "4240239"
  },
  {
    "text": "now what we can do is we can ask for a different kind of query",
    "start": "4240239",
    "end": "4246080"
  },
  {
    "text": "you can ask for an srv query",
    "start": "4246080",
    "end": "4249760"
  },
  {
    "text": "is it equal there we go and you can see that over here web state 0 1 and 2. so we can",
    "start": "4254480",
    "end": "4260000"
  },
  {
    "text": "identify these guys now by their actual names and if we try to",
    "start": "4260000",
    "end": "4266560"
  },
  {
    "text": "for example curl a specific one of them we could say web state i want to talk to specifically the nasdaq guy right",
    "start": "4266560",
    "end": "4275040"
  },
  {
    "text": "because i don't i don't i don't want the the new york stock exchange data i want the the nasdaq guy and he's number one",
    "start": "4275040",
    "end": "4281920"
  },
  {
    "text": "and curl's not found so i use wget",
    "start": "4281920",
    "end": "4286198"
  },
  {
    "text": "and there you go right we hit the nginx guy there so that's that's dns in its various flavors in kubernetes",
    "start": "4287600",
    "end": "4294800"
  },
  {
    "text": "right and of course i mean as you guys know there's there's a lot more to know but the lab does start you down the road hopefully is you",
    "start": "4294800",
    "end": "4301920"
  },
  {
    "text": "know pulling away the veil on some of the more confusing bits and the the things that aren't obvious when you start off",
    "start": "4301920",
    "end": "4307760"
  },
  {
    "text": "all right so let's move into our next section accessing services from the outside how do we get from the outside",
    "start": "4307760",
    "end": "4313440"
  },
  {
    "text": "in keep working on the labs if you want let me in here so outside access can be performed in",
    "start": "4313440",
    "end": "4319040"
  },
  {
    "text": "lots of ways at the end of the day there's host port",
    "start": "4319040",
    "end": "4324640"
  },
  {
    "text": "and node port and a lot of stuff on top of them host port and node port",
    "start": "4324640",
    "end": "4331040"
  },
  {
    "text": "handle 99.99 of the traffic flowing into a",
    "start": "4331040",
    "end": "4336400"
  },
  {
    "text": "cluster one of those two techniques so what does a host port do it's not a service in a pod you can say",
    "start": "4336400",
    "end": "4343280"
  },
  {
    "text": "take this port on the host and map it to the pods listening port right and that",
    "start": "4343280",
    "end": "4348560"
  },
  {
    "text": "will work the problem with that is it's not very friendly to the cluster right if you",
    "start": "4348560",
    "end": "4354000"
  },
  {
    "text": "want to map port 80 on the host i mean good luck what if none of the hosts have port 80 open your pod can't",
    "start": "4354000",
    "end": "4360320"
  },
  {
    "text": "run anywhere so it's not a great solution for your users for us developers who are trying to deploy apps",
    "start": "4360320",
    "end": "4366320"
  },
  {
    "text": "right you don't want to use a host port it's for administrators right if i'm running you know",
    "start": "4366320",
    "end": "4371679"
  },
  {
    "text": "ssh in a pod well yeah i wanted to listen on 22 so i might host port that or something",
    "start": "4371679",
    "end": "4377280"
  },
  {
    "text": "for diagnostics or testing but it's not for general use for users right what what users should be using is a node",
    "start": "4377280",
    "end": "4383760"
  },
  {
    "text": "port a node port's a service and it's a cluster ip you get a cluster ip right it's like a",
    "start": "4383760",
    "end": "4390800"
  },
  {
    "text": "inheritance hierarchy right cluster ip is the base class and and node port is a derived class all the cluster ip stuff",
    "start": "4390800",
    "end": "4396960"
  },
  {
    "text": "you get plus a port is selected from the node port range like let's say",
    "start": "4396960",
    "end": "4402679"
  },
  {
    "text": "310 right three three zero zero one zero so thirty thousand ten i guess",
    "start": "4402679",
    "end": "4407920"
  },
  {
    "text": "and that's your port and every single host computer will now take traffic on that port and forward it to your service",
    "start": "4407920",
    "end": "4414080"
  },
  {
    "text": "so if you set up for example a load balancer in front of all the nodes in your",
    "start": "4414080",
    "end": "4419679"
  },
  {
    "text": "cluster and direct traffic to that port you will be reaching your service and that's exactly what a load balancer",
    "start": "4419679",
    "end": "4425600"
  },
  {
    "text": "service does so the inheritance hierarchy continues cluster ip",
    "start": "4425600",
    "end": "4431040"
  },
  {
    "text": "node port load balancer the node balancer load balancer is the most derived right it is a node port",
    "start": "4431040",
    "end": "4437679"
  },
  {
    "text": "and it is a cluster ip so inside the cluster you can use the cluster ip that's best it's dns resolvable it's",
    "start": "4437679",
    "end": "4444159"
  },
  {
    "text": "going to load balance you it's fast then node port that's one hop right you go right to the pod",
    "start": "4444159",
    "end": "4450400"
  },
  {
    "text": "node port is two hops right because you have to first hit the port on the host and somebody's got to forward your",
    "start": "4450400",
    "end": "4457360"
  },
  {
    "text": "traffic to the next hop right there are scenarios where you can have actually a user mode proxy like cube proxy and some",
    "start": "4457360",
    "end": "4464480"
  },
  {
    "text": "versions of kubernetes will actually listen on all the node ports and forward the traffic in other cases it's handled by the kernel the ubpf and stuff like",
    "start": "4464480",
    "end": "4470880"
  },
  {
    "text": "that but then ultimately your traffic ends up being delivered to the pod and the pods probably not on that computer",
    "start": "4470880",
    "end": "4478080"
  },
  {
    "text": "right unless you know specifically what if there's 100 computers in the cluster and you're running five pods",
    "start": "4478080",
    "end": "4483840"
  },
  {
    "text": "you're only running on five percent of the nodes if you pick a host and hit the node port chances are your pods not on",
    "start": "4483840",
    "end": "4489600"
  },
  {
    "text": "that node so you're gonna have two hops right you're gonna hit the host and then it's gonna have to forward your traffic over to the machine that has the pod",
    "start": "4489600",
    "end": "4496320"
  },
  {
    "text": "right and then load balancer three hops the load balancer there's no load",
    "start": "4496320",
    "end": "4502400"
  },
  {
    "text": "balancers built into kubernetes you have to have a plug-in that stands one up for you so metal lb",
    "start": "4502400",
    "end": "4508480"
  },
  {
    "text": "can be stood up and use bgp to to create advertise a virtual ip that goes to the node port or something like that um",
    "start": "4508480",
    "end": "4516000"
  },
  {
    "text": "you can also um use things like you know the load balancers for your cloud providers and you know f5 has one",
    "start": "4516000",
    "end": "4522400"
  },
  {
    "text": "there's all sorts of load balancers out there that will plug in but you got to do it right kubernetes is not opinionated you pick your load balancer",
    "start": "4522400",
    "end": "4528880"
  },
  {
    "text": "and then when you set up your service it it you know creates the event and then if somebody wants to do something with",
    "start": "4528880",
    "end": "4535360"
  },
  {
    "text": "it they can in our cluster when you create a load balancer it's going to be uh pending you're never going to get the",
    "start": "4535360",
    "end": "4540800"
  },
  {
    "text": "external ip of the load balancer because there's no plug-in installed and so load balancer is three hops you hit the",
    "start": "4540800",
    "end": "4547040"
  },
  {
    "text": "load balancer which is a thing a real device or a logical thing right and then",
    "start": "4547040",
    "end": "4552560"
  },
  {
    "text": "it hits the node port on one of the machines and then third hop is back to the pod so it's a hierarchy and each",
    "start": "4552560",
    "end": "4558800"
  },
  {
    "text": "one's more expensive so you know you've got to decide what you want to do load balancers are nice because that you can give them a dns",
    "start": "4558800",
    "end": "4565440"
  },
  {
    "text": "name out on the internet for example and you might have hardware you know replication of them there might be like",
    "start": "4565440",
    "end": "4570719"
  },
  {
    "text": "seven of them so if one fails you know ha and all that so load bouncers are good for external access too but they're",
    "start": "4570719",
    "end": "4576320"
  },
  {
    "text": "based on node ports typically they get into the cluster through a node port and then you have ingress an ingress is",
    "start": "4576320",
    "end": "4582960"
  },
  {
    "text": "a controller that runs in your cluster typically has a load balancer or a node port",
    "start": "4582960",
    "end": "4588159"
  },
  {
    "text": "service in front of it but the thing about an ingress controller is what if i have five services do you want to tell your iphone",
    "start": "4588159",
    "end": "4596000"
  },
  {
    "text": "developers oh if you want that you connect over to here and if you want that you connect over to here and then oh this part of the api is actually",
    "start": "4596000",
    "end": "4602239"
  },
  {
    "text": "hosted over here not really right microservices shouldn't be exposed outside of the context within",
    "start": "4602239",
    "end": "4609520"
  },
  {
    "text": "which you're developing them the external api deals with different",
    "start": "4609520",
    "end": "4614960"
  },
  {
    "text": "language different different semantics different bandwidths right the internet is flaky",
    "start": "4614960",
    "end": "4621840"
  },
  {
    "text": "and low bandwidth your data center is going to be fast and reliable they're very different worlds the ingress",
    "start": "4621840",
    "end": "4627520"
  },
  {
    "text": "controller can create kind of like a firewall an adapter from the outside world to the inside world you could have",
    "start": "4627520",
    "end": "4632960"
  },
  {
    "text": "two services or eight and then you could say hey if somebody has hits slash",
    "start": "4632960",
    "end": "4638400"
  },
  {
    "text": "engine send them over here if they hit slash web send them over there and so an ingress controller gets rules that tell",
    "start": "4638400",
    "end": "4644719"
  },
  {
    "text": "it how to send the traffic inside the cluster to the different services that are on the inside so you might have a",
    "start": "4644719",
    "end": "4650320"
  },
  {
    "text": "bunch of your little micro services with cluster ips only you don't want them accessed from the",
    "start": "4650320",
    "end": "4656080"
  },
  {
    "text": "outside and then you have an ingress controller that provides your public interface and it sends all the traffic to those guys behind the scenes and it's",
    "start": "4656080",
    "end": "4662560"
  },
  {
    "text": "the ingress controller that has a load balancer service in front of it and only the ingress controller it's the one way",
    "start": "4662560",
    "end": "4669120"
  },
  {
    "text": "in right so you might create node ports on the fly to test things into experiment if you're on the inside but",
    "start": "4669120",
    "end": "4675360"
  },
  {
    "text": "the outside world never sees those what's a gateway a gateway is a more powerful ingress",
    "start": "4675360",
    "end": "4680719"
  },
  {
    "text": "controller ingress is a thing in kubernetes it's a defined framework again kubernetes doesn't provide one you",
    "start": "4680719",
    "end": "4686800"
  },
  {
    "text": "have to install one and we're going to use ambassador oops sorry emissary it used to be called ambassador um and so",
    "start": "4686800",
    "end": "4692640"
  },
  {
    "text": "we're going to use emissary for that well guess what emissary does the kubernetes ingress framework but",
    "start": "4692640",
    "end": "4698080"
  },
  {
    "text": "emissary is crazy powerful and has tons of other features it can inject headers it can do you know faults stuff for",
    "start": "4698080",
    "end": "4706080"
  },
  {
    "text": "chaos you know operations it could do all sorts of things and so it's a gateway it's a super powerful way to",
    "start": "4706080",
    "end": "4713360"
  },
  {
    "text": "provide a single place where all your traffic can come in it can do you know security stuff",
    "start": "4713360",
    "end": "4718719"
  },
  {
    "text": "obviously tls is even part of ingress but it can do some more advanced security things so it's a very very",
    "start": "4718719",
    "end": "4723920"
  },
  {
    "text": "powerful tool all right so this is an example of host port right where we have host port in the pod spec and then the",
    "start": "4723920",
    "end": "4729679"
  },
  {
    "text": "container port and if there's no host with that port open your pods pending forever until that port is available",
    "start": "4729679",
    "end": "4735520"
  },
  {
    "text": "somewhere right so not a not a great thing for developers or users more for operators that's a node port you just",
    "start": "4735520",
    "end": "4742480"
  },
  {
    "text": "ask for type node port and then you can ask for the port that you want but if you if it's in use",
    "start": "4742480",
    "end": "4748400"
  },
  {
    "text": "you'll get an error if you leave the node port off kubernetes will assign you one from the range just like with the",
    "start": "4748400",
    "end": "4753679"
  },
  {
    "text": "cluster ip as we saw and then this is a load balancer right you just say type load balancer that's",
    "start": "4753679",
    "end": "4760239"
  },
  {
    "text": "it right in this case this guy has two ports right http and https which is kind of common",
    "start": "4760239",
    "end": "4766159"
  },
  {
    "text": "and then you've got ingress this is an ingress rule this ingress rule says hey",
    "start": "4766159",
    "end": "4771760"
  },
  {
    "text": "if somebody hits the ingress controller using the http protocol and by the way",
    "start": "4771760",
    "end": "4776800"
  },
  {
    "text": "ingress only supports http and https and they are using the route slash engine as",
    "start": "4776800",
    "end": "4782480"
  },
  {
    "text": "their prefix could be anything after that then send them to the backend service called engine that's the name of the",
    "start": "4782480",
    "end": "4788480"
  },
  {
    "text": "service dns resolved on port 80. right very simple and you can the developers",
    "start": "4788480",
    "end": "4794320"
  },
  {
    "text": "can create these rules i my devops team can deploy the can provide the deployment that runs",
    "start": "4794320",
    "end": "4800480"
  },
  {
    "text": "my pods the service that lets people inside the cluster get to them and the ingress rule that allows traffic from",
    "start": "4800480",
    "end": "4806560"
  },
  {
    "text": "the outside to route in now obviously i got to coordinate with the other people so we don't have overlapping routes and stuff but that's the idea right let",
    "start": "4806560",
    "end": "4813199"
  },
  {
    "text": "those teams be independent and then the last thing is the gateway this is an example of configuring a",
    "start": "4813199",
    "end": "4818719"
  },
  {
    "text": "gateway that's a custom resource definition it's not part of kubernetes but kubernetes gives you the ability to",
    "start": "4818719",
    "end": "4824639"
  },
  {
    "text": "create your own resource definitions like this one and this one gives you the ability then to do things like inject",
    "start": "4824639",
    "end": "4830560"
  },
  {
    "text": "headers and fancy stuff like you know control the maximum connections none of that's supported in ingress but",
    "start": "4830560",
    "end": "4837600"
  },
  {
    "text": "emissary is super powerful and has all these kind of advanced features so we would call it typically a gateway it",
    "start": "4837600",
    "end": "4842639"
  },
  {
    "text": "also supports protocols that the ingress controller doesn't support ingress only",
    "start": "4842639",
    "end": "4848000"
  },
  {
    "text": "http and https if you want sctp or udp you're going to need a gateway",
    "start": "4848000",
    "end": "4853040"
  },
  {
    "text": "and so lab step 4 walks you through installing emissary and",
    "start": "4853040",
    "end": "4859600"
  },
  {
    "text": "doing some ingress and some gateway stuff so you get a chance to work with the crds at emissary installs and the ingress",
    "start": "4859600",
    "end": "4867199"
  },
  {
    "text": "controller standard kubernetes stuff why would you use ingress if gateways are so much more powerful well those specs i",
    "start": "4867199",
    "end": "4872960"
  },
  {
    "text": "just showed you those custom resource definitions are emissary custom resource definitions if you later switch to",
    "start": "4872960",
    "end": "4878880"
  },
  {
    "text": "something else they're not going to work but ingress is a kubernetes framework",
    "start": "4878880",
    "end": "4884159"
  },
  {
    "text": "standard it's going to work everywhere the nginx ingress controller will take them the emissary will take them so if",
    "start": "4884159",
    "end": "4889760"
  },
  {
    "text": "you can get away with just using ingress it's portable right not a bad thing so you have to decide what you need",
    "start": "4889760",
    "end": "4896480"
  },
  {
    "text": "all right what i'm going to do is cover service mesh because we've got a little bit of time left if you want to start on",
    "start": "4896480",
    "end": "4902000"
  },
  {
    "text": "the emissary lab go for it but i'm going to cover service mesh real quick and i tell you what um we'll leave these boxes",
    "start": "4902000",
    "end": "4908880"
  },
  {
    "text": "up for another hour or two so if you didn't get through all the labs you'll have some time there and then you know",
    "start": "4908880",
    "end": "4914719"
  },
  {
    "text": "probably like after lunch we'll shut them down let's say that way so if you want to work through lunch you can um so let's let's hit the service mesh stuff",
    "start": "4914719",
    "end": "4921600"
  },
  {
    "text": "service mesh functionality i mean we've got all this functionality built into kubernetes we've got the cni we've got",
    "start": "4921600",
    "end": "4927360"
  },
  {
    "text": "services we've got ingress now these gateways and there's just so much power",
    "start": "4927360",
    "end": "4932480"
  },
  {
    "text": "and capability from a networking standpoint and there is complexity but you know when you start poking around and looking",
    "start": "4932480",
    "end": "4938480"
  },
  {
    "text": "at it in the labs here you realize that you know it's manageable but what's left right well if you're a developer",
    "start": "4938480",
    "end": "4945520"
  },
  {
    "text": "and your boss is hammering on you about security security security do you really want to go back and",
    "start": "4945520",
    "end": "4952400"
  },
  {
    "text": "instrument every single service you wrote with mutual tls and how likely are you to get that right",
    "start": "4952400",
    "end": "4959679"
  },
  {
    "text": "anyway right and then you're going to be now you've got another thing to debug and to manage right that alone right",
    "start": "4959679",
    "end": "4965679"
  },
  {
    "text": "there is a killer right and then as soon as you do it now all your customers are broken they got to implement you know on their side the mutual tls stuff that's a",
    "start": "4965679",
    "end": "4972960"
  },
  {
    "text": "pain you know in java or c plus or go or rust or whatever well wouldn't it be amazing",
    "start": "4972960",
    "end": "4979360"
  },
  {
    "text": "if you could just flip a switch and inject a proxy into every pod that",
    "start": "4979360",
    "end": "4984719"
  },
  {
    "text": "did the mutual tls automatically for every single outbound connection and on the other side for everything that comes",
    "start": "4984719",
    "end": "4990800"
  },
  {
    "text": "in that would be amazing and wouldn't it be amazing if those pods so that you didn't have to",
    "start": "4990800",
    "end": "4997040"
  },
  {
    "text": "reported telemetry that says i'm connecting at this moment in time i've been connected for this period of",
    "start": "4997040",
    "end": "5002560"
  },
  {
    "text": "time oh i'm seeing these errors come back and just reported that all to a central um repository that you could",
    "start": "5002560",
    "end": "5009360"
  },
  {
    "text": "open up in prometheus and chart and look at and set alerts on that would be amazing and that's why",
    "start": "5009360",
    "end": "5015199"
  },
  {
    "text": "service meshes are amazing those are the things that they do they give you mtls for free communication metrics for free",
    "start": "5015199",
    "end": "5020960"
  },
  {
    "text": "communication policy you can't talk to that guy but you can't talk to this guy and you can't talk to that guy on friday",
    "start": "5020960",
    "end": "5026080"
  },
  {
    "text": "you know or whatever policy um traces fault injection chaos support advanced",
    "start": "5026080",
    "end": "5031280"
  },
  {
    "text": "traffic management this is what service mesh brings to the table and there are a bunch of them to choose from",
    "start": "5031280",
    "end": "5037840"
  },
  {
    "text": "there are proxy based service meshes so um this is the the long-standing",
    "start": "5037840",
    "end": "5043520"
  },
  {
    "text": "group right your uh your linker ds and istios and open service meshes and so on",
    "start": "5043520",
    "end": "5048560"
  },
  {
    "text": "and so forth um and so those guys are well understood",
    "start": "5048560",
    "end": "5053600"
  },
  {
    "text": "um they're also nice because they operate in the pod sphere they're not messing around in the in the",
    "start": "5053600",
    "end": "5059520"
  },
  {
    "text": "kernel or you know down at the host level and this means that the second your traffic leaves your pod it's",
    "start": "5059520",
    "end": "5065920"
  },
  {
    "text": "encrypted and so that's nice right if you're running some sensitive workloads who's who are the administrators on",
    "start": "5065920",
    "end": "5072080"
  },
  {
    "text": "those computers right so there's some really nice things about having a proxy based solution",
    "start": "5072080",
    "end": "5077199"
  },
  {
    "text": "and then the other thing that's also nice about that is that that you know it's it's not in your software you can",
    "start": "5077199",
    "end": "5083120"
  },
  {
    "text": "upgrade the proxy without messing with your software right they have different you know life cycles and stuff then you",
    "start": "5083120",
    "end": "5088880"
  },
  {
    "text": "have ebpf based so this is a little bit bleeding edge there's some really awesome stuff in the the hopper there",
    "start": "5088880",
    "end": "5095120"
  },
  {
    "text": "but there's some downsides too and the the biggest thing is that i don't think you're going to see a lot of ga ebpf",
    "start": "5095120",
    "end": "5102159"
  },
  {
    "text": "service mesh implementations at this moment soon but it's it's a little early",
    "start": "5102159",
    "end": "5107280"
  },
  {
    "text": "days there um psyllium for example and others can provide that kind of functionality and then library based",
    "start": "5107280",
    "end": "5113760"
  },
  {
    "text": "what if you're using grpc everywhere well grpc could do the tls for you in",
    "start": "5113760",
    "end": "5119760"
  },
  {
    "text": "its grpc library right if you're using it on both sides then you could flip that on and grpc just",
    "start": "5119760",
    "end": "5126480"
  },
  {
    "text": "i think went ga with their you know proxy list service mesh and so you could use the control plane of a standard",
    "start": "5126480",
    "end": "5133679"
  },
  {
    "text": "service mesh to talk to your grpc libraries and tell them to do what they need to do to",
    "start": "5133679",
    "end": "5138800"
  },
  {
    "text": "do the service mesh stuff and now you don't have a proxy so the proxy does add some latency right so that's why the people who build their",
    "start": "5138800",
    "end": "5144960"
  },
  {
    "text": "proxies build them to be crazy fast linker d which is what we're going to use is super awesome and has a rust",
    "start": "5144960",
    "end": "5151199"
  },
  {
    "text": "based proxy so compiled down to super compact fast native code and in linker",
    "start": "5151199",
    "end": "5157120"
  },
  {
    "text": "d's kind of famous for being the fastest of the service of the proxy based service meshes out there and it's also",
    "start": "5157120",
    "end": "5163440"
  },
  {
    "text": "super easy to install and works really great so the last lab which i know there's no slide lab 5",
    "start": "5163440",
    "end": "5169440"
  },
  {
    "text": "is going to have you install link or d and then start looking at some of the metrics see how you can see connections",
    "start": "5169440",
    "end": "5174480"
  },
  {
    "text": "and see them that they're secured and it's really an amazing thing to see and it's so easy to try out so one of the",
    "start": "5174480",
    "end": "5181280"
  },
  {
    "text": "shorter lab steps so what i am going to do is say thank you a",
    "start": "5181280",
    "end": "5186480"
  },
  {
    "text": "ton for coming we do have another few minutes if you want to hang out to the bottom of the hour but i think they will kick us out in like three minutes so",
    "start": "5186480",
    "end": "5193600"
  },
  {
    "text": "feel free to keep working on the lab up until the last if you want to or work on it for lunch we'll leave the boxes up for a bit and and yeah thanks a bunch",
    "start": "5193600",
    "end": "5199760"
  },
  {
    "text": "for coming have a wonderful rest of your convention [Applause]",
    "start": "5199760",
    "end": "5206080"
  }
]