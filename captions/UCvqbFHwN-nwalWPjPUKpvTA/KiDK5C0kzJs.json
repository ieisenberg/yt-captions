[
  {
    "text": "good afternoon let's started so this is the cloud native gill-pack session the",
    "start": "89",
    "end": "6390"
  },
  {
    "text": "deep dive we did in intro on Tuesday and in this talk we're gonna kind of dig",
    "start": "6390",
    "end": "12809"
  },
  {
    "text": "more into the meeting bones of cloud native bill packs I'm Terence Lee I go",
    "start": "12809",
    "end": "18060"
  },
  {
    "text": "by hone 0to on Twitter I've been I work at Heroku and I co-created the Heroku",
    "start": "18060",
    "end": "24930"
  },
  {
    "text": "pill packs API this is my colleague Joe Kutner goes by code finger on Twitter and not github I guess but he also works",
    "start": "24930",
    "end": "34290"
  },
  {
    "text": "at Roku he's a architect on the languages team and is in charge of the",
    "start": "34290",
    "end": "40260"
  },
  {
    "text": "job experience on the platform so with Roku Roku can it's often",
    "start": "40260",
    "end": "47280"
  },
  {
    "text": "considered like the first modern day pass that's out there today we run over",
    "start": "47280",
    "end": "53309"
  },
  {
    "text": "seven million applications and process over 23 billion requests a day and over",
    "start": "53309",
    "end": "61379"
  },
  {
    "text": "eight years ago we launched a technology called Bell packs and Bill packs",
    "start": "61379",
    "end": "67470"
  },
  {
    "text": "to basically become a polyglot platform so allowed us to run more languages than Ruby which was kind of the only language",
    "start": "67470",
    "end": "73979"
  },
  {
    "text": "we supported initially when we started and Bill packs are a modular opinionated",
    "start": "73979",
    "end": "80909"
  },
  {
    "text": "way to take source code and turn them into runnable applications for berroco",
    "start": "80909",
    "end": "86549"
  },
  {
    "text": "and what that means is that we can take",
    "start": "86549",
    "end": "91680"
  },
  {
    "text": "we look at the language configuration in your application and can use that to prepare your application for production",
    "start": "91680",
    "end": "98220"
  },
  {
    "text": "and since then we have open sourced the technology back in 2012 and that allowed",
    "start": "98220",
    "end": "106229"
  },
  {
    "text": "other people to extend the platform as well as other people to just adopt this",
    "start": "106229",
    "end": "111450"
  },
  {
    "text": "technology inside of their own build pipelines since then",
    "start": "111450",
    "end": "118740"
  },
  {
    "text": "the next evolution of bill packs is this project called cloud native bill packs",
    "start": "118740",
    "end": "123840"
  },
  {
    "text": "so it's why you're here today and it has contributions from both Heroku and",
    "start": "123840",
    "end": "130319"
  },
  {
    "text": "pivotal which are the two largest bill platforms out there today in production and in October it got accepted as a",
    "start": "130319",
    "end": "138609"
  },
  {
    "text": "cloud native sandbox project so we have a veteran neutral home to kind of move",
    "start": "138609",
    "end": "143650"
  },
  {
    "text": "this project forward and so at a very high level what a cloud native Bill pack",
    "start": "143650",
    "end": "150010"
  },
  {
    "text": "is it takes your app source code you run through cloud native bill packs and you",
    "start": "150010",
    "end": "155469"
  },
  {
    "text": "know with a docker OCI compliant image and with that image you have layers that",
    "start": "155469",
    "end": "160900"
  },
  {
    "text": "map logically to your application and we're gonna go into details what we mean by that so today first off we're just",
    "start": "160900",
    "end": "168970"
  },
  {
    "text": "gonna run through what it looks like to actually just like taking off-the-shelf bill pack run it through a cloud native",
    "start": "168970",
    "end": "175750"
  },
  {
    "text": "belt pack and how that all works and how you can get a running docker image and use that after that we'll take a look at",
    "start": "175750",
    "end": "182889"
  },
  {
    "text": "how you actually build a cloud native Bill pack and then then we'll take a look at how you combine different bill",
    "start": "182889",
    "end": "190329"
  },
  {
    "text": "packs together into a kind of build pipeline that works with your application if you need to kind of do",
    "start": "190329",
    "end": "196419"
  },
  {
    "text": "various things as part of the build process and then finally we'll show how you can kind of deploy this stuff okay",
    "start": "196419",
    "end": "205650"
  },
  {
    "text": "can you hear me okay so the the first",
    "start": "205650",
    "end": "211060"
  },
  {
    "text": "step in running a cloud native build pack is getting the tooling that you need to do so",
    "start": "211060",
    "end": "216549"
  },
  {
    "text": "so you can do that with the pack CLI this is a tool or a project that's part",
    "start": "216549",
    "end": "221919"
  },
  {
    "text": "of the build packs do project on github so you can go to the releases page on",
    "start": "221919",
    "end": "227560"
  },
  {
    "text": "github and download the binary for your platform we have them for Linux Mac and",
    "start": "227560",
    "end": "232569"
  },
  {
    "text": "Windows okay so that's the only prerequisite and with that installed we'll head over to the terminal so I'm",
    "start": "232569",
    "end": "240159"
  },
  {
    "text": "gonna take a pre-written Java build pack it's one that I wrote and maintain and we're gonna run it on a java application",
    "start": "240159",
    "end": "246489"
  },
  {
    "text": "so the first thing I'll need is a java application so we'll take the Heroku",
    "start": "246489",
    "end": "252250"
  },
  {
    "text": "Java getting started app which is a very simple spring boot application host a",
    "start": "252250",
    "end": "259329"
  },
  {
    "text": "web app it's exposes some rest endpoints connects to a database real standard",
    "start": "259329",
    "end": "265090"
  },
  {
    "text": "stuff it has a pom.xml so it's a maven project and all the basic structure of a maven",
    "start": "265090",
    "end": "271880"
  },
  {
    "text": "application so to build this with a cloud native build pack I'm going to run the pack build command I'm gonna",
    "start": "271880",
    "end": "278870"
  },
  {
    "text": "generate an image called my app and I'm gonna do this with the Heroku build packs builder image so this Roku build",
    "start": "278870",
    "end": "286099"
  },
  {
    "text": "packs builder image contains not only the Java build pack but all the Heroku supported cloud native build packs as",
    "start": "286099",
    "end": "292490"
  },
  {
    "text": "well as the tooling required to run those build packs so this is what pack is going to use to execute my java build",
    "start": "292490",
    "end": "299180"
  },
  {
    "text": "pack so when I run that the first thing I'll see is that it detects that I have a java application it did that because",
    "start": "299180",
    "end": "306319"
  },
  {
    "text": "it's all my maven files so it starts running the Java build pack it installs",
    "start": "306319",
    "end": "311449"
  },
  {
    "text": "the JVM it installs maven then it runs maven to compile my code and download my dependencies so the first time maven",
    "start": "311449",
    "end": "318380"
  },
  {
    "text": "runs it's going to download all my jar files from maven central but it will cache those so subsequent runs will be",
    "start": "318380",
    "end": "323659"
  },
  {
    "text": "faster now the way it caches these is by putting them in a sort of a special layer that that it can reuse but that",
    "start": "323659",
    "end": "331880"
  },
  {
    "text": "won't go into the production image and in that way I can make changes to my to",
    "start": "331880",
    "end": "337340"
  },
  {
    "text": "my application or to the the layers below my application without invalidating that cache that's actually",
    "start": "337340",
    "end": "343070"
  },
  {
    "text": "something that's impossible to do with docker file okay so my maven build is complete the last step in the build pack",
    "start": "343070",
    "end": "350000"
  },
  {
    "text": "was that it detected that I'm using spring boot it looked at my dependencies and so for that reason it knows what",
    "start": "350000",
    "end": "355819"
  },
  {
    "text": "command to use to start my application so it outputs some metadata with the Java dash jar command that the platform",
    "start": "355819",
    "end": "362479"
  },
  {
    "text": "should use to run this application and then you'll see it emits a few layers it's so it's going to export the output",
    "start": "362479",
    "end": "370430"
  },
  {
    "text": "of the build pack into an image so we have a layer from the java build pack for the jdk so it contains the java",
    "start": "370430",
    "end": "376610"
  },
  {
    "text": "binaries a layer for my app and a layer for some configuration okay so the",
    "start": "376610",
    "end": "382310"
  },
  {
    "text": "result is the my app image and that's a docker image just like any other docker image so i can run it with docker run",
    "start": "382310",
    "end": "388880"
  },
  {
    "text": "i'll publish port 5,000 and then you'll see just a regular spring boot app",
    "start": "388880",
    "end": "394610"
  },
  {
    "text": "starting up binds to a port and and i can go about running it so this is great",
    "start": "394610",
    "end": "399680"
  },
  {
    "text": "I can docker image without having to change my application or add any code to my",
    "start": "399680",
    "end": "405199"
  },
  {
    "text": "application but the benefit of build packs really picks up when we get to day-to-day to operations so when I need",
    "start": "405199",
    "end": "413330"
  },
  {
    "text": "to do things like update my JDK or rebase or update my operating system",
    "start": "413330",
    "end": "419560"
  },
  {
    "text": "bill PACs have some key advantages so this Java app is using Java 8 and the",
    "start": "419560",
    "end": "426050"
  },
  {
    "text": "build pack by default just installs the latest version the latest security version of Java 8 so I'm just defining",
    "start": "426050",
    "end": "433789"
  },
  {
    "text": "that I want 1.8 but maybe I want to pin to a very specific update version so I",
    "start": "433789",
    "end": "438830"
  },
  {
    "text": "can modify this system properties file which is in my application to say that I",
    "start": "438830",
    "end": "444530"
  },
  {
    "text": "want update 1 9 2 so then when I run the PAC build command again with my Heroku",
    "start": "444530",
    "end": "450560"
  },
  {
    "text": "build packs builder image I'll see that it detects Java but this time it's going to install update 1 9 2 and then it's",
    "start": "450560",
    "end": "458090"
  },
  {
    "text": "gonna run maven but it will use that maven cache which is still valid because it should not be invalidated by a minor JDK update and then it omits the",
    "start": "458090",
    "end": "466460"
  },
  {
    "text": "metadata and exports a new version of my image likewise if I want to update or",
    "start": "466460",
    "end": "474620"
  },
  {
    "text": "apply security updates to the operating system I can actually do that without rebuilding those layers at all so",
    "start": "474620",
    "end": "481130"
  },
  {
    "text": "there's the PAC rebase command which is part of the PAC COI so I can rebase my application and I'll add no pull because",
    "start": "481130",
    "end": "487370"
  },
  {
    "text": "I haven't pushed my my app up to docker hub when I run this command it's going to reapply those application layers the",
    "start": "487370",
    "end": "494120"
  },
  {
    "text": "a player my JDK layer and my config layer on top of an updated version of my base image so to sort of illustrate this",
    "start": "494120",
    "end": "503330"
  },
  {
    "text": "the original image we created was based on a bunt of 1804 and I had a JDK layer and a player and whatever other layers",
    "start": "503330",
    "end": "509780"
  },
  {
    "text": "might have come from my build PACs and then when I run the rebased command it takes that newer version that security",
    "start": "509780",
    "end": "515450"
  },
  {
    "text": "update of 1804 and sort of lifts and shifts those layers on top of it to create a new image but it does not",
    "start": "515450",
    "end": "521900"
  },
  {
    "text": "rebuild those layers so when it comes time to publish my image the layers for",
    "start": "521900",
    "end": "527540"
  },
  {
    "text": "the JDK and the app are already in my repository so when I go to push the image those don't need to be transferred",
    "start": "527540",
    "end": "533810"
  },
  {
    "text": "in fact the the update version of Ubuntu might already be in that repository because one of my co-workers or somebody",
    "start": "533810",
    "end": "539270"
  },
  {
    "text": "else has put it there so if it's the first time only that layer will be transferred but it's very possible that a rebase operation when being published",
    "start": "539270",
    "end": "546740"
  },
  {
    "text": "doesn't require the transferring of any layers ok so we were able to do all this",
    "start": "546740",
    "end": "552890"
  },
  {
    "text": "without a docker file we created a java-based",
    "start": "552890",
    "end": "557900"
  },
  {
    "text": "docker image we were able to cache our dependencies in a way that we can't do with docker file we can keep that cache",
    "start": "557900",
    "end": "564650"
  },
  {
    "text": "when we're updating things like the JVM we can also customize the maven build so even though build packs are opinionated",
    "start": "564650",
    "end": "571310"
  },
  {
    "text": "and sort of have defaults for how they expect things to work you can still customize them to make them work the way",
    "start": "571310",
    "end": "576620"
  },
  {
    "text": "you need to you can also customize the JDK if you need to add certificate bundles and then finally and most",
    "start": "576620",
    "end": "583070"
  },
  {
    "text": "important you can compose that Java build pack with other build packs to create this build pipeline to perform",
    "start": "583070",
    "end": "588770"
  },
  {
    "text": "other jobs for example you might add nodejs to prepare your Java Script assets for production so I think Joe showed that",
    "start": "588770",
    "end": "597800"
  },
  {
    "text": "these bil packs are kind of these like generally reusable components similar to",
    "start": "597800",
    "end": "603800"
  },
  {
    "text": "I guess like the close analogy I can think of with docker images that people use their stuff on the official like",
    "start": "603800",
    "end": "610760"
  },
  {
    "text": "images from docker hub but the difference is that unlike that gentleman",
    "start": "610760",
    "end": "615770"
  },
  {
    "text": "for Bill packs you don't have to pull them down then extend those images to make them work with your application kind of out of the box all the things",
    "start": "615770",
    "end": "622160"
  },
  {
    "text": "that Joe talked about are things that you can use straight with the build pack without having to modify the build pack at all so as an example the oracle ruby",
    "start": "622160",
    "end": "630860"
  },
  {
    "text": "Belle pack that we have out there in Heroku has been in production for seven eight years and it's used by millions of",
    "start": "630860",
    "end": "637130"
  },
  {
    "text": "applications and most of our customers never have to touch or use it and they",
    "start": "637130",
    "end": "642380"
  },
  {
    "text": "just get to use it day to day without having to worry about what work goes into that Bill pack which is really nice",
    "start": "642380",
    "end": "650560"
  },
  {
    "text": "kind of with that since these things are these like independent cohesive units",
    "start": "650560",
    "end": "655790"
  },
  {
    "text": "you can actually combine them together so if we want to use multiple bill packs",
    "start": "655790",
    "end": "661040"
  },
  {
    "text": "like Joe was talking about using Java node but in this case we might use like Java Python",
    "start": "661040",
    "end": "667440"
  },
  {
    "text": "and potentially Ruby maybe not so with first thing we need to do is actually",
    "start": "667440",
    "end": "672959"
  },
  {
    "text": "determine if we should run these bil packs and so there's this a tech process so in the example Joe was talking about",
    "start": "672959",
    "end": "680509"
  },
  {
    "text": "we looked for a pup like the pom file to see if it's a Java app and then for",
    "start": "680509",
    "end": "685800"
  },
  {
    "text": "Python like we want to check if it looks like a Python app and for Ruby we would do the same thing for Ruby right in this",
    "start": "685800",
    "end": "691319"
  },
  {
    "text": "case you know we detect that it is a Python and Java app but not a ruby app",
    "start": "691319",
    "end": "696750"
  },
  {
    "text": "and with that we have information of what we need to do to actually build the application so with that information we",
    "start": "696750",
    "end": "702899"
  },
  {
    "text": "know the bill packs we need to run and then what order we need to run them in and then we can actually go and build",
    "start": "702899",
    "end": "708860"
  },
  {
    "text": "the application and so at the end of it you get a set of directories that get",
    "start": "708860",
    "end": "715019"
  },
  {
    "text": "turned into layers and so the Java build pack produces a Java build pack folder",
    "start": "715019",
    "end": "720480"
  },
  {
    "text": "in the Python build pack produces a Python build pack folder as well and so each of these map into so I was talking",
    "start": "720480",
    "end": "725850"
  },
  {
    "text": "about how the docker image is made up of logical layers that represent your",
    "start": "725850",
    "end": "731519"
  },
  {
    "text": "application and this is what I mean by that so you know we talked about with just the Java specific case that there",
    "start": "731519",
    "end": "737490"
  },
  {
    "text": "was that JDK layer and then also that dependency layer then the application layer and so were able to map these",
    "start": "737490",
    "end": "744199"
  },
  {
    "text": "folders into actual layers into the docker image and so when you're doing kind of multiple build packs together",
    "start": "744199",
    "end": "750750"
  },
  {
    "text": "there's just additional layers that get added for the other build packs as well so there would be a Python runtime layer",
    "start": "750750",
    "end": "756600"
  },
  {
    "text": "if we run the Python built pack and this dependency layer might actually be made of multiple layers where you would have",
    "start": "756600",
    "end": "761790"
  },
  {
    "text": "the Java specific stuff that's coming from the Java built pack and the Java folder and then the Python specific",
    "start": "761790",
    "end": "767069"
  },
  {
    "text": "stuff from the Python one and then you have your app code configuration and then all that stuff sits on top of the",
    "start": "767069",
    "end": "772110"
  },
  {
    "text": "base image and with that we can go look at how we actually if we wanted to",
    "start": "772110",
    "end": "777630"
  },
  {
    "text": "combine these things together how we actually create a Python build pack for scratch yeah so there are many reusable",
    "start": "777630",
    "end": "784379"
  },
  {
    "text": "off-the-shelf commodity build packs and foremost build pack users those are",
    "start": "784379",
    "end": "789509"
  },
  {
    "text": "sufficient but there are times where you want to create your own build pack for some specific purpose or because you",
    "start": "789509",
    "end": "795689"
  },
  {
    "text": "have some particular need so that's we're going to walk through here we're going to create a build pack for Python so to do that we need to",
    "start": "795689",
    "end": "803280"
  },
  {
    "text": "understand the build pack API the go back API is a formal specification that's part of our cloud native sandbox",
    "start": "803280",
    "end": "811170"
  },
  {
    "text": "project it's a work in progress but it defines the entry points and and how",
    "start": "811170",
    "end": "816810"
  },
  {
    "text": "bill packs run it's also a vendor-neutral specification so it's got contributions",
    "start": "816810",
    "end": "822300"
  },
  {
    "text": "from the community so you can find that on github but at a very simple level the",
    "start": "822300",
    "end": "828090"
  },
  {
    "text": "build pack API has two entry points there are two executable files been",
    "start": "828090",
    "end": "833160"
  },
  {
    "text": "detect and been build these can be written in bash or Python or in the case of the Java build pack their binaries",
    "start": "833160",
    "end": "839460"
  },
  {
    "text": "that are written in golang and compiled down the language you choose is is completely your choice so we're gonna",
    "start": "839460",
    "end": "847170"
  },
  {
    "text": "build our Python build pack in bash it's a great lowest-common-denominator most people understand it and it's",
    "start": "847170",
    "end": "854550"
  },
  {
    "text": "actually very good at doing some of the things we need to do like mutating the file system setting up the environment",
    "start": "854550",
    "end": "860280"
  },
  {
    "text": "for other processes to run but you could also choose to write a Python built pack in Python if you preferred okay so the",
    "start": "860280",
    "end": "866880"
  },
  {
    "text": "first step in creating a build pack is making a directory for it to live in and then we're going to create the bin directory under that and touch our to",
    "start": "866880",
    "end": "873630"
  },
  {
    "text": "entry point scripts and make them executable then we're gonna open them up in vim and we'll start with our bin",
    "start": "873630",
    "end": "880830"
  },
  {
    "text": "detect script paste in our shebang bin detects so bin detect purpose is to",
    "start": "880830",
    "end": "890070"
  },
  {
    "text": "determine if the given application source code applies to this build pack so it takes as input the application",
    "start": "890070",
    "end": "896100"
  },
  {
    "text": "source code which comes from the current working directory the environment variables and some made a data about the",
    "start": "896100",
    "end": "902160"
  },
  {
    "text": "build as output it produces an exit code either non 0 if this build pack does not apply or 0 if it if it does apply so you",
    "start": "902160",
    "end": "911130"
  },
  {
    "text": "can see up here in my usage comment the detect script has two arguments the platform directory which contains",
    "start": "911130",
    "end": "916710"
  },
  {
    "text": "serialized environment variables which you can choose to export or not these",
    "start": "916710",
    "end": "921990"
  },
  {
    "text": "are done this way because you might have environment variables that you don't want to have exported in the context of",
    "start": "921990",
    "end": "928380"
  },
  {
    "text": "your build for example in the Java build pack you might have Java options that are meant for",
    "start": "928380",
    "end": "933570"
  },
  {
    "text": "to configure your garbage collection and heap size and production but you don't want those to apply to your maven",
    "start": "933570",
    "end": "938820"
  },
  {
    "text": "process the build plan is some some of the metadata that comes from the build",
    "start": "938820",
    "end": "944100"
  },
  {
    "text": "execution process and then the other input is the application source code which is the current working directory",
    "start": "944100",
    "end": "949730"
  },
  {
    "text": "so what I need to do to run detection is look in this directory to see if I find",
    "start": "949730",
    "end": "955890"
  },
  {
    "text": "files that represent a Python application and the one file that I look",
    "start": "955890",
    "end": "960900"
  },
  {
    "text": "for is a requirements txt this is a file that python apps use to manage their dependencies so if I do not detect that",
    "start": "960900",
    "end": "967950"
  },
  {
    "text": "file I will exit nonzero and if we do find that file I'll just echo the name of my build pack so that's the entire",
    "start": "967950",
    "end": "974700"
  },
  {
    "text": "bin detect script most bin detects scripts are this simple some are even just exit zero no matter what but a few",
    "start": "974700",
    "end": "982140"
  },
  {
    "text": "will look at certain environment variables to see if a particular service has been provisioned and things like that okay so we're ready to move on to",
    "start": "982140",
    "end": "990000"
  },
  {
    "text": "bin bill we'll paste in our shebang so been billed at a very high level takes",
    "start": "990000",
    "end": "997020"
  },
  {
    "text": "for inputs the application code just like been detected and the environment",
    "start": "997020",
    "end": "1002030"
  },
  {
    "text": "variables and metadata just like been detect but it also takes in layers these",
    "start": "1002030",
    "end": "1007100"
  },
  {
    "text": "are layers from previous build packs in the pipeline so if a build pack before me was the nodejs build pack it might",
    "start": "1007100",
    "end": "1014120"
  },
  {
    "text": "install a node.js runtime that I can use and execute the purpose have been build is to prepare your source code for",
    "start": "1014120",
    "end": "1020690"
  },
  {
    "text": "runtime so in the case of a java application it's going to compile into bytecode for python it's going to download our",
    "start": "1020690",
    "end": "1026150"
  },
  {
    "text": "dependencies and our install our server and things like that the output have been build in addition to the prepared",
    "start": "1026150",
    "end": "1033170"
  },
  {
    "text": "code are layers so we have will have a layer for the JDK or the the runtime",
    "start": "1033170",
    "end": "1039560"
  },
  {
    "text": "that we're installing or maybe our dependencies along with this some metadata that the execution the built",
    "start": "1039560",
    "end": "1044839"
  },
  {
    "text": "back execution environment can use for example to know what process or what command to start our application process",
    "start": "1044839",
    "end": "1052780"
  },
  {
    "text": "so our goal here is to create a set of directories like this we're going to",
    "start": "1052780",
    "end": "1057830"
  },
  {
    "text": "have our build pack directory which is our layers directory where we're going to create a layer directory for Python",
    "start": "1057830",
    "end": "1063170"
  },
  {
    "text": "and a layer directory for our dependencies our application will have a three and then we're gonna have some metadata called launch tamil all these",
    "start": "1063170",
    "end": "1070160"
  },
  {
    "text": "will be assembled by the execution environment into my image okay so the",
    "start": "1070160",
    "end": "1076760"
  },
  {
    "text": "first step you can see I have three arguments here the layers directory those are my previous layers it's also",
    "start": "1076760",
    "end": "1082250"
  },
  {
    "text": "where I'm going to write my new layers the platform directory and the build plan are the same as we've been detect",
    "start": "1082250",
    "end": "1087410"
  },
  {
    "text": "and then my current working directory is the application source code so my first step is just to set some variables for",
    "start": "1087410",
    "end": "1093950"
  },
  {
    "text": "the app der and the layers der just to make them easier to reference the next step is to setup my environment so I'm",
    "start": "1093950",
    "end": "1100730"
  },
  {
    "text": "gonna pin to a specific version of Python three six seven a more advanced build pack might inspect the application",
    "start": "1100730",
    "end": "1106760"
  },
  {
    "text": "code and see what version this app needs I'm also going to pin to a specific",
    "start": "1106760",
    "end": "1111920"
  },
  {
    "text": "version of pip pip is the package manager for Python and then finally I'm going to set the URL for a pre compiled",
    "start": "1111920",
    "end": "1119750"
  },
  {
    "text": "Python binary that I'm going to install now I could also build Python from source in this step but it wouldn't",
    "start": "1119750",
    "end": "1125750"
  },
  {
    "text": "really demonstrate anything special about build packs so I'm just gonna do the more simple installation of a",
    "start": "1125750",
    "end": "1131330"
  },
  {
    "text": "precompiled binary but if we were to look at the official docker file or the",
    "start": "1131330",
    "end": "1136940"
  },
  {
    "text": "docker file for the official Python image on docker hub there's a 34 line run command that compiles Python from",
    "start": "1136940",
    "end": "1143840"
  },
  {
    "text": "source and we could pretty much just copy and paste this into our build pack if we wanted to and and that would work",
    "start": "1143840",
    "end": "1149390"
  },
  {
    "text": "but we could probably get rid of all the ampersands and line break stuff like that and use functions and make it",
    "start": "1149390",
    "end": "1155180"
  },
  {
    "text": "testable we have a lot more power within build packs because we can actually use higher-level languages okay so my next",
    "start": "1155180",
    "end": "1163220"
  },
  {
    "text": "step is to actually install Python so I want this Python to go into its own",
    "start": "1163220",
    "end": "1170000"
  },
  {
    "text": "layer so I'm gonna create a new directory within my layers directory called Python and then I'm going to",
    "start": "1170000",
    "end": "1175220"
  },
  {
    "text": "download from that URL so curl from that URL and then explode it with tar into my",
    "start": "1175220",
    "end": "1180680"
  },
  {
    "text": "Python layer if something goes wrong there I'll just exit one with a message that'll terminate the execution of this",
    "start": "1180680",
    "end": "1187520"
  },
  {
    "text": "build pack if it's successful I'll put the Python bin directory on my path so",
    "start": "1187520",
    "end": "1193160"
  },
  {
    "text": "that I can use it in subsequent stages and then the last thing I'll do is write",
    "start": "1193160",
    "end": "1198470"
  },
  {
    "text": "my metadata so each layer comes with a tamil file of the same name so",
    "start": "1198470",
    "end": "1204240"
  },
  {
    "text": "I'm going to write this tamil file to tell the execution environment that I want this layer to be present at launch",
    "start": "1204240",
    "end": "1210360"
  },
  {
    "text": "so this is a runtime layer that I want to go into my production image I also want it to be cached so that the next",
    "start": "1210360",
    "end": "1216240"
  },
  {
    "text": "time I run my build pack it will be available I won't have to reinstall it if I don't want to and along with that",
    "start": "1216240",
    "end": "1222090"
  },
  {
    "text": "I'll add some metadata like the version of Python so on a subsequent run of this",
    "start": "1222090",
    "end": "1227250"
  },
  {
    "text": "build pack I can analyze that or inspect that version and determine if the Python version has changed then I'll reinstall",
    "start": "1227250",
    "end": "1233910"
  },
  {
    "text": "a new one or I might skip the install altogether all right the next step step",
    "start": "1233910",
    "end": "1240780"
  },
  {
    "text": "four is to install pip again pip is the package manager for Python I'll do that",
    "start": "1240780",
    "end": "1245940"
  },
  {
    "text": "by downloading the get pip script from pipa IO and then just running it with the Python runtime that I just installed",
    "start": "1245940",
    "end": "1253680"
  },
  {
    "text": "and it'll install that specific version of pip for me after that I need to run pip which will prepare my dependencies",
    "start": "1253680",
    "end": "1261360"
  },
  {
    "text": "it will install the dependencies for my application I could just run pip straight out and it would install them",
    "start": "1261360",
    "end": "1267510"
  },
  {
    "text": "in the global environment that means it would put them into my Python layer because that's where my site packages is",
    "start": "1267510",
    "end": "1273800"
  },
  {
    "text": "but what that means is that if my dependencies change when I'm transferring layers and deploying new",
    "start": "1273800",
    "end": "1279930"
  },
  {
    "text": "versions of my app I also have to transfer the Python in the Python runtime itself so I'm gonna split my pip",
    "start": "1279930",
    "end": "1287550"
  },
  {
    "text": "dependencies out into their own layer so that if they change I can deal with them separately so I'm going to create a new",
    "start": "1287550",
    "end": "1293700"
  },
  {
    "text": "pip layer directory and then a couple directories under that an EM directory in a modules directory because I need to",
    "start": "1293700",
    "end": "1298980"
  },
  {
    "text": "create some environment variables and I need to put the modules in their own place then I'm gonna run pip install",
    "start": "1298980",
    "end": "1305880"
  },
  {
    "text": "with my requirements txt I'll tell it the target directory is my modules directory under the pip layer I'm gonna",
    "start": "1305880",
    "end": "1312960"
  },
  {
    "text": "add the install option so I get my bin scripts so when I run commands like gonna corn they're gonna be on my path",
    "start": "1312960",
    "end": "1318600"
  },
  {
    "text": "and then just a couple other options that are helpful when running pip after",
    "start": "1318600",
    "end": "1324750"
  },
  {
    "text": "that I need an environment variable at runtime so the EM directory within the layer is special so we adhere to like",
    "start": "1324750",
    "end": "1333330"
  },
  {
    "text": "the POSIX standard so if we see a bin directory within the lair will put it on the path automatically and if",
    "start": "1333330",
    "end": "1338520"
  },
  {
    "text": "we see an a file within the EM directory we'll set that as an environment variable at runtime so I need to put",
    "start": "1338520",
    "end": "1344700"
  },
  {
    "text": "that modules directory on my Python path so they'll be available in production and then finally I'm gonna write a pip",
    "start": "1344700",
    "end": "1351810"
  },
  {
    "text": "layer Tamil file I just want this layer to be present at at runtime and I won't",
    "start": "1351810",
    "end": "1357930"
  },
  {
    "text": "cache it the last step is to write metadata and this is optional so this is",
    "start": "1357930",
    "end": "1364860"
  },
  {
    "text": "where we can add special information about our app from the build pack and in",
    "start": "1364860",
    "end": "1370260"
  },
  {
    "text": "this case I want to try and tell the execution environment what command to use to run the application so I know",
    "start": "1370260",
    "end": "1376050"
  },
  {
    "text": "that if this is a using G unicorn or gonna corn I know what command will be used to start the app so I'm gonna just",
    "start": "1376050",
    "end": "1382230"
  },
  {
    "text": "grep the requirements txt to see if G unicorn is being used if it is then I'll grep around the Python scripts to see",
    "start": "1382230",
    "end": "1389640"
  },
  {
    "text": "what Python script is calling the get whiskey application if I find that script I'll convert it to a module name",
    "start": "1389640",
    "end": "1395370"
  },
  {
    "text": "and I'm gonna write my metadata file my launch tamil this is sort of a reserved file within layers directory this where",
    "start": "1395370",
    "end": "1402690"
  },
  {
    "text": "I can write process information and I'll create a new process type called web and I'll tell the execution environment that",
    "start": "1402690",
    "end": "1409710"
  },
  {
    "text": "I wanted to run G unicorn the name of the module bind to zero zero zero and then log to standard out obviously if I",
    "start": "1409710",
    "end": "1419580"
  },
  {
    "text": "wanted to create a more robust build pack I could take this step which is you know a little hard to read and put it",
    "start": "1419580",
    "end": "1425430"
  },
  {
    "text": "into its own tool make a small sharp tool that I just execute from bash but",
    "start": "1425430",
    "end": "1430860"
  },
  {
    "text": "this is it that's my entire build pack so with about a little less than 70 lines of code I've created a build pack",
    "start": "1430860",
    "end": "1436470"
  },
  {
    "text": "that's reusable that can be applied to just about any or many Python applications there's one more file I",
    "start": "1436470",
    "end": "1443310"
  },
  {
    "text": "need though it's a descriptor Oh we'll see how that goes okay I need a build",
    "start": "1443310",
    "end": "1449370"
  },
  {
    "text": "pack tamil file that's this one right here this is a descriptor that tells the",
    "start": "1449370",
    "end": "1457400"
  },
  {
    "text": "the build pack run environment about my build pack so I need an ID that's",
    "start": "1457400",
    "end": "1464480"
  },
  {
    "text": "universally your global unique I'll call it Jacob Python I set a version I need a name",
    "start": "1464480",
    "end": "1470880"
  },
  {
    "text": "that's human-readable and then I need to find what's tax my bill Peck works on and I'll say it works",
    "start": "1470880",
    "end": "1476910"
  },
  {
    "text": "on Heroku 18 so a stack in the context of a build pack is a construct that",
    "start": "1476910",
    "end": "1482850"
  },
  {
    "text": "actually represents two images a build image and a runtime image the build image will contain GCC and headers that",
    "start": "1482850",
    "end": "1489960"
  },
  {
    "text": "I need to compile things and then the runtime image won't have those it'll be slimmed down to have a smaller you know",
    "start": "1489960",
    "end": "1495270"
  },
  {
    "text": "surface attack or security surface area so we're just gonna make this work with",
    "start": "1495270",
    "end": "1500730"
  },
  {
    "text": "the Heroku 18 stack which is just the Heroku packaging of a bun to 1804 okay",
    "start": "1500730",
    "end": "1509400"
  },
  {
    "text": "so our build packs complete we want to run it and to do that we need a Python",
    "start": "1509400",
    "end": "1515400"
  },
  {
    "text": "application so we're gonna clone the Heroku Python getting started app it's a really simple Django application uses",
    "start": "1515400",
    "end": "1521820"
  },
  {
    "text": "gonna corn it has a requirements txt and just a you know fairly standard Python application",
    "start": "1521820",
    "end": "1528140"
  },
  {
    "text": "so we're gonna run the pack build command to generate an image called my app we're gonna use the Heroku build",
    "start": "1528140",
    "end": "1534780"
  },
  {
    "text": "packs builder again but that Heroku build packs builder does not contain the build pack that we just wrote so we're",
    "start": "1534780",
    "end": "1540300"
  },
  {
    "text": "gonna pass the Ville pack flag with the path to our build pack directory where we created this build pack locally when",
    "start": "1540300",
    "end": "1547560"
  },
  {
    "text": "we do that pack build will ingest that build pack into the Builder image and run it on our application so we run that",
    "start": "1547560",
    "end": "1554820"
  },
  {
    "text": "we'll see that immediately it detects that we have a Python application it's our requirements txt it'll install",
    "start": "1554820",
    "end": "1561120"
  },
  {
    "text": "Python it'll install pip it will then run pip to download and install our",
    "start": "1561120",
    "end": "1568020"
  },
  {
    "text": "dependencies and finally it will generate the metadata and export an",
    "start": "1568020",
    "end": "1573960"
  },
  {
    "text": "image so now this image has a layer for Python a layer for pip a layer for the",
    "start": "1573960",
    "end": "1580260"
  },
  {
    "text": "app and a layer for the config so a couple extra layers but the end result is my app image which we can again run",
    "start": "1580260",
    "end": "1587730"
  },
  {
    "text": "just like any other docker image will publish port 8000 and there's the gonna",
    "start": "1587730",
    "end": "1595350"
  },
  {
    "text": "corn command that was the default command emitted by the build pack metadata",
    "start": "1595350",
    "end": "1600770"
  },
  {
    "text": "okay so now let's take that Python build pack that we just wrote and let's combine it let's compose it with the the",
    "start": "1602040",
    "end": "1608920"
  },
  {
    "text": "Java build pack that we ran earlier a use case for this is like a machine learning application that's primarily",
    "start": "1608920",
    "end": "1614950"
  },
  {
    "text": "written in Python but needs Java for something specific or maybe a Python app that needs job at a parse XML or",
    "start": "1614950",
    "end": "1620700"
  },
  {
    "text": "interface with Kafka something like that so the first step in doing this is we",
    "start": "1620700",
    "end": "1630820"
  },
  {
    "text": "need a new builder image so that Heroku build packs builder image won't work for us anymore so the first thing we're",
    "start": "1630820",
    "end": "1636970"
  },
  {
    "text": "gonna do is write a builder tamil file this is a descriptor that describes what are what build packs our new builder",
    "start": "1636970",
    "end": "1643510"
  },
  {
    "text": "image is going to contain we're gonna use the Heroku Java Java build pack that",
    "start": "1643510",
    "end": "1649780"
  },
  {
    "text": "we ran earlier and this is the URL where it gets downloaded from github releases we're then going to add the J kuttner",
    "start": "1649780",
    "end": "1656530"
  },
  {
    "text": "Python that we just wrote and we'll use the path to that directory that we put it in below that we have our build pack",
    "start": "1656530",
    "end": "1663160"
  },
  {
    "text": "groups this defines the order of execution and requirements for those build packs so we have the Java build",
    "start": "1663160",
    "end": "1668770"
  },
  {
    "text": "pack is optional so if that build pack does not detect a pom.xml the execution",
    "start": "1668770",
    "end": "1674290"
  },
  {
    "text": "environment will continue on we won't just stop dead but the Python build pack is not optional so if we don't find that",
    "start": "1674290",
    "end": "1680260"
  },
  {
    "text": "requirements txt the whole thing will break down okay so then we're gonna run",
    "start": "1680260",
    "end": "1687370"
  },
  {
    "text": "the pack create builder command and we're gonna create a builder image called J cutner build packs we'll pass",
    "start": "1687370",
    "end": "1692590"
  },
  {
    "text": "it the builder config the builder Tommo and we'll define this as working on the Heroku 18 stack just as as we did before",
    "start": "1692590",
    "end": "1699400"
  },
  {
    "text": "and that's going to generate a new docker image for me that I can use with",
    "start": "1699400",
    "end": "1704590"
  },
  {
    "text": "my pack build command but before I do that my Python app is gonna need a pom.xml in order for the Java build pack",
    "start": "1704590",
    "end": "1711790"
  },
  {
    "text": "to detect it as a Java app so I'm just gonna add a very minimal pom.xml here but you can imagine this is where you",
    "start": "1711790",
    "end": "1717910"
  },
  {
    "text": "might add a dependency on the kafka client or something like that so I'll",
    "start": "1717910",
    "end": "1723610"
  },
  {
    "text": "copy this into my Python app move into that directory and now I'm gonna run a",
    "start": "1723610",
    "end": "1729190"
  },
  {
    "text": "pack build again generate the my app image but this time I'm going to you",
    "start": "1729190",
    "end": "1734980"
  },
  {
    "text": "that new builder my J Kutner build packs builder image and I'm gonna add no pole",
    "start": "1734980",
    "end": "1740140"
  },
  {
    "text": "because I haven't pushed this to docker hub yet so that's gonna run and the first thing we'll see is that both Java",
    "start": "1740140",
    "end": "1746080"
  },
  {
    "text": "and Python have passed detection so those two build packs will be executed first it'll run Java it'll install the",
    "start": "1746080",
    "end": "1752500"
  },
  {
    "text": "jdk run maven install python install pip run pip and then ultimately export an",
    "start": "1752500",
    "end": "1761590"
  },
  {
    "text": "image from those layers so you can see now we have one layer for our jdk one",
    "start": "1761590",
    "end": "1768070"
  },
  {
    "text": "layer for pip and our dependencies one layer for python one layer for our app one layer for the config and then we can",
    "start": "1768070",
    "end": "1776080"
  },
  {
    "text": "run this image to inspect it and see that we have composed these things we're gonna run just a bash session and our",
    "start": "1776080",
    "end": "1782950"
  },
  {
    "text": "fire run Java version I see there's my Heroku JDK and if I run Python I get my repple okay so it's great that we've",
    "start": "1782950",
    "end": "1798549"
  },
  {
    "text": "been able to compose these things that allows us to create very complex and very useful images but composition does",
    "start": "1798549",
    "end": "1807130"
  },
  {
    "text": "more than just allow you to combine things it allows you to extend without modifying so you can take these off the",
    "start": "1807130",
    "end": "1813880"
  },
  {
    "text": "shelf build packs like Java or Python or nodejs to prepare your static assets but you",
    "start": "1813880",
    "end": "1819429"
  },
  {
    "text": "might also add in special concerns that are specific to your environment to your",
    "start": "1819429",
    "end": "1824980"
  },
  {
    "text": "organization maybe you have an APM like a New Relic build pack that cuts across all of your apps whether they're written",
    "start": "1824980",
    "end": "1830620"
  },
  {
    "text": "in Ruby or Java or Python installs an agent that instruments' your code and you know sends metrics up to New Relic",
    "start": "1830620",
    "end": "1836530"
  },
  {
    "text": "or maybe you have specific logging concerns within your organization you have a special logging format or or you",
    "start": "1836530",
    "end": "1845320"
  },
  {
    "text": "need to send logs to Splunk or log stash or something like that you can create a logging build pack that combines with",
    "start": "1845320",
    "end": "1851380"
  },
  {
    "text": "these other build packs rather than forking those build packs and changing them or like copying and pasting bits of",
    "start": "1851380",
    "end": "1857080"
  },
  {
    "text": "docker file around I don't think we gonna have time to deploy but we could",
    "start": "1857080",
    "end": "1862299"
  },
  {
    "text": "take that docker image that we created and push it up to a registry and just",
    "start": "1862299",
    "end": "1868120"
  },
  {
    "text": "like any other docker image so the main thing to take away from this talk is look at all the things that I did not do",
    "start": "1868120",
    "end": "1874900"
  },
  {
    "text": "I created a production runtime image and I didn't have to create a docker file I",
    "start": "1874900",
    "end": "1880299"
  },
  {
    "text": "didn't have to go look on the web to find out what order I need to put things in and copy and paste bits until I have",
    "start": "1880299",
    "end": "1885909"
  },
  {
    "text": "a special snowflake docker file for my application that I have to make sure it",
    "start": "1885909",
    "end": "1890919"
  },
  {
    "text": "doesn't fit rot I also didn't have to know anything about the Java build pack I just consumed it it installed the JVM",
    "start": "1890919",
    "end": "1897700"
  },
  {
    "text": "it put it on my path and it's there ready for me to use I didn't need to know about the structure of the official",
    "start": "1897700",
    "end": "1904510"
  },
  {
    "text": "open JDK image or something like that I didn't need to add special files or twiddle them around as I'm adding my",
    "start": "1904510",
    "end": "1911980"
  },
  {
    "text": "application code into the image to get a better caching behavior or incremental build behavior I didn't have to dance",
    "start": "1911980",
    "end": "1917770"
  },
  {
    "text": "around user permissions and the fact that I have root access when I'm running a docker file I didn't have to force",
    "start": "1917770",
    "end": "1922809"
  },
  {
    "text": "docker to rebuild layers when I needed to apply a security patch the PAC CLI",
    "start": "1922809",
    "end": "1928480"
  },
  {
    "text": "handles a great deal that for me I didn't have to understand or operate the the base operating system that operating",
    "start": "1928480",
    "end": "1935950"
  },
  {
    "text": "system if you're running on Heroku is managed by Heroku if you have your own environment you might have an operations",
    "start": "1935950",
    "end": "1941740"
  },
  {
    "text": "team that takes care of those security updates and maybe they're the ones running rebase and then finally I didn't",
    "start": "1941740",
    "end": "1947049"
  },
  {
    "text": "have to couple my app to my build pipeline I didn't have to add a special configuration file that tells the build",
    "start": "1947049",
    "end": "1954010"
  },
  {
    "text": "how it works my app code is just my app code and I let the build pack determine how best to prepare it",
    "start": "1954010",
    "end": "1961320"
  },
  {
    "text": "so in summary I think you can break a lot of things that Joe was talking about down to a few kind of categories here so",
    "start": "1961320",
    "end": "1968110"
  },
  {
    "text": "we talked a bunch about composability combine the Java and Python build packs together but I think like the real value",
    "start": "1968110",
    "end": "1974710"
  },
  {
    "text": "is that because these are these independent composable units we can take",
    "start": "1974710",
    "end": "1980440"
  },
  {
    "text": "these things and kind of combine them together and then the also the ability to just leverage off-the-shelf things",
    "start": "1980440",
    "end": "1985809"
  },
  {
    "text": "together means that it it can be very quick to kind of build some of these your custom build pipeline for your",
    "start": "1985809",
    "end": "1993550"
  },
  {
    "text": "application without having to pull it down extend it like you would normally with the docker file if it's a component in multiple of them you then have to",
    "start": "1993550",
    "end": "2000179"
  },
  {
    "text": "also do like multi-stage docker which can get really ugly because it requires you to just understand what is actually in",
    "start": "2000179",
    "end": "2006480"
  },
  {
    "text": "these document is that you're trying to do multistage builds from we've seen a",
    "start": "2006480",
    "end": "2011730"
  },
  {
    "text": "bunch of stuff with like how the bill pack just understands a lot of things about the language you can design it in",
    "start": "2011730",
    "end": "2017070"
  },
  {
    "text": "a way where you can do stuff like know to run G unicorn for Python if it",
    "start": "2017070",
    "end": "2023400"
  },
  {
    "text": "detects it or just know for spring food applications you can configure it to do that kind of stuff",
    "start": "2023400",
    "end": "2029580"
  },
  {
    "text": "detect things from the environment and in addition because of those things we can also have fast as a feature right",
    "start": "2029580",
    "end": "2036090"
  },
  {
    "text": "like we're able to have really quick builds with Java with maven cuz we can cache specifically the m2 cash for maven",
    "start": "2036090",
    "end": "2044700"
  },
  {
    "text": "but not actually export that into our production vironment so we're keeping our image small but we're also still",
    "start": "2044700",
    "end": "2049860"
  },
  {
    "text": "getting that incremental performance that we normally get when we just run these things locally so those are the",
    "start": "2049860",
    "end": "2055110"
  },
  {
    "text": "kind of things that we mean when we talk about app aware and reading that language specific configuration and then",
    "start": "2055110",
    "end": "2061649"
  },
  {
    "text": "most importantly it's like really easy to build this stuff together but ultimately once you shift this thing in production it needs to be maintained and",
    "start": "2061650",
    "end": "2069510"
  },
  {
    "text": "live and that probably takes up way more time than actually just building the application to start with and so there's",
    "start": "2069510",
    "end": "2075929"
  },
  {
    "text": "a lot of things with like the rebasing that we talked about like some of the speed of just being a little quickly rebase and not have to do with even the",
    "start": "2075930",
    "end": "2082139"
  },
  {
    "text": "build time but also the publishing time of like pushing this stuff the registry but then once it's in the registry when",
    "start": "2082140",
    "end": "2087450"
  },
  {
    "text": "you need to push these images out to the actual server nodes that run these applications they get to leverage all",
    "start": "2087450",
    "end": "2093629"
  },
  {
    "text": "the same layer efficiencies that we've seen throughout this talk you know",
    "start": "2093630",
    "end": "2099330"
  },
  {
    "text": "because this stuff is decoupled from your actual application like you're not checking a docker file in Florida",
    "start": "2099330",
    "end": "2104730"
  },
  {
    "text": "application to customize your build pipeline there's less code that you have to maintain and then in addition you're",
    "start": "2104730",
    "end": "2111780"
  },
  {
    "text": "the operations teams that are actually operating these applications the amount of surface area because of composability",
    "start": "2111780",
    "end": "2117840"
  },
  {
    "text": "means that there's a much smaller subset of things that they have to vet in review to ensure that like the stuff",
    "start": "2117840",
    "end": "2125220"
  },
  {
    "text": "that is going into production actually complies with various compliance",
    "start": "2125220",
    "end": "2130230"
  },
  {
    "text": "standards that you have for say like HIPAA or P Cir things like that and then because",
    "start": "2130230",
    "end": "2136710"
  },
  {
    "text": "the whole we aren't mixing as operational concerns as part of the build process as a app developer it also",
    "start": "2136710",
    "end": "2143849"
  },
  {
    "text": "means that things like we're talking about like the root access with docker file like you don't have to set your user when you're running this thing your",
    "start": "2143849",
    "end": "2150390"
  },
  {
    "text": "production to make sure it's an actual user that isn't route like when you're running it right because you don't necessarily be running as root when",
    "start": "2150390",
    "end": "2156750"
  },
  {
    "text": "you're actually running it in prod so these are things that are just handled for you because you don't have to worry about those things with build packs and",
    "start": "2156750",
    "end": "2164280"
  },
  {
    "text": "it really comes down to a thin and a that bill packs are just a higher level abstraction as compared to docker file",
    "start": "2164280",
    "end": "2170130"
  },
  {
    "text": "so it means that this is built for application developers and it's at that",
    "start": "2170130",
    "end": "2176339"
  },
  {
    "text": "level and so it just means that there's just a ton of concerns and other things that you just don't have to focus and",
    "start": "2176339",
    "end": "2182430"
  },
  {
    "text": "worry about and that we can meet developers where they want to focus on",
    "start": "2182430",
    "end": "2188579"
  },
  {
    "text": "which is their app source code and delivering kind of value to your customers right because you can focus on",
    "start": "2188579",
    "end": "2195000"
  },
  {
    "text": "actually delivering features and you know this kind of goes back to pre like the container era that we're in these",
    "start": "2195000",
    "end": "2201540"
  },
  {
    "text": "days I feel like when you're in a container ecosystem and you're developing in a container environment when you're using stuff like docker file",
    "start": "2201540",
    "end": "2207960"
  },
  {
    "text": "you don't only have to be an expert in both like building your application and kind of domain that your application",
    "start": "2207960",
    "end": "2213690"
  },
  {
    "text": "runs and you also kind of have to be an expert in docker and docker file like you have to understand the concerns like when that file gets checked in someone",
    "start": "2213690",
    "end": "2220500"
  },
  {
    "text": "has to maintain it it doesn't stay clean forever like we have docker files internally at Heroku that we use for",
    "start": "2220500",
    "end": "2226950"
  },
  {
    "text": "development and I went to go like contribute a code apap I project and the",
    "start": "2226950",
    "end": "2232980"
  },
  {
    "text": "dark file didn't work I had a like to actually patches and a PR because this stuff doesn't just stay working forever",
    "start": "2232980",
    "end": "2239540"
  },
  {
    "text": "and so you can go and try all these things we talked about today try a bill",
    "start": "2239540",
    "end": "2244890"
  },
  {
    "text": "packs there's a bill pack github repo and so the formal specifications under",
    "start": "2244890",
    "end": "2250619"
  },
  {
    "text": "the the spec repo lifecycle is a project that is used by the PAC CLI and it's you",
    "start": "2250619",
    "end": "2257099"
  },
  {
    "text": "know part of the stuff that actually runs and runs the actual bill PACs and images there's the pack CLI itself all",
    "start": "2257099",
    "end": "2264540"
  },
  {
    "text": "this stuff is open source and go check it out fork it run it use it we have a slack for the community that all of us are in",
    "start": "2264540",
    "end": "2271820"
  },
  {
    "text": "so Joe and I as well as all these people in the front row who are also work on",
    "start": "2271820",
    "end": "2276890"
  },
  {
    "text": "the project with us and so come join us try out the bill packs come talk to us and slack and then",
    "start": "2276890",
    "end": "2284810"
  },
  {
    "text": "as well as there's a samples repo under the bill PAC project that just has like all the way stuff from like HelloWorld",
    "start": "2284810",
    "end": "2291680"
  },
  {
    "text": "kind of like I don't not really doing very much the bill PAC just want to kind of go to that process to a job on owed",
    "start": "2291680",
    "end": "2297230"
  },
  {
    "text": "bill PAC as well Cloud Foundry has a handful of bill PACs and then the java bill pack that we ran",
    "start": "2297230",
    "end": "2304220"
  },
  {
    "text": "through at the beginning of the talk is also open sourced under Oroku and Joe has the Python bill pack that we went",
    "start": "2304220",
    "end": "2309530"
  },
  {
    "text": "through and just built available as well so you if you don't want to go build that Python file back you can just clone it and then run it and then kind of edit",
    "start": "2309530",
    "end": "2316220"
  },
  {
    "text": "it for your own sake so that's kind of all we had we have a bunch of shirts as",
    "start": "2316220",
    "end": "2321410"
  },
  {
    "text": "well bill pack shirts that people in this front row are wearing please come talk to us ask questions yeah I'm taking",
    "start": "2321410",
    "end": "2328640"
  },
  {
    "text": "a flight out tonight and I don't want to take these shirts with me so help help us thank you",
    "start": "2328640",
    "end": "2336670"
  },
  {
    "text": "yeah yeah yeah so the question we're",
    "start": "2366750",
    "end": "2376390"
  },
  {
    "text": "gonna repeat the question so the question was we have all these bill packs like a listener samples is there",
    "start": "2376390",
    "end": "2381670"
  },
  {
    "text": "kind of like unified place basically to kind of go and look and find that stuff",
    "start": "2381670",
    "end": "2386850"
  },
  {
    "text": "so currently today for the cloud Niguel packs we don't have something out there",
    "start": "2386850",
    "end": "2392800"
  },
  {
    "text": "that you can just go and find every single bill pack that's there at Verona",
    "start": "2392800",
    "end": "2398020"
  },
  {
    "text": "we've been we published a or we released a bill pack registry but that's us",
    "start": "2398020",
    "end": "2404200"
  },
  {
    "text": "that's kind of the older non cloud native Bill pack stuff and it will be updated to kind of take an account this",
    "start": "2404200",
    "end": "2410950"
  },
  {
    "text": "cloud native Bill pack stuff and the plans are to have a registry that will run as part of the CF space as part of",
    "start": "2410950",
    "end": "2420130"
  },
  {
    "text": "that in probably the coming year or so",
    "start": "2420130",
    "end": "2424259"
  },
  {
    "text": "yeah so the question was what do we think about jib and how do we compare",
    "start": "2458300",
    "end": "2463340"
  },
  {
    "text": "and kind of contrast like Cloudant ville packs suit ship itself I think jib the project is great like all this stuff",
    "start": "2463340",
    "end": "2469340"
  },
  {
    "text": "that's come out Google and all these other places I think all fall in line with all the things that we're also",
    "start": "2469340",
    "end": "2475820"
  },
  {
    "text": "trying to do in the cloud native bill PACs project which is we don't find that docker file is the right level",
    "start": "2475820",
    "end": "2481520"
  },
  {
    "text": "abstraction I think for any application developer that's really kind of doing the day-to-day kind of stuff that's not",
    "start": "2481520",
    "end": "2486680"
  },
  {
    "text": "to say docker file is bad or wrong it's just not the right level abstraction I think for application developers and I",
    "start": "2486680",
    "end": "2492950"
  },
  {
    "text": "think projects like jib help prove that kind of stuff and jibs a great project I",
    "start": "2492950",
    "end": "2498110"
  },
  {
    "text": "think specifically in comparison to cloud native bill PACs one things that is the way we've done it this way is",
    "start": "2498110",
    "end": "2505610"
  },
  {
    "text": "that we want to have a kind of language agnostic way of handling these things and a bill packs were way we've done",
    "start": "2505610",
    "end": "2512270"
  },
  {
    "text": "that for many years and kind of battle-tested in production and being",
    "start": "2512270",
    "end": "2517760"
  },
  {
    "text": "able to beat being tied so specifically to maven would make it hard to kind of share that kind of stuff like say I want",
    "start": "2517760",
    "end": "2523790"
  },
  {
    "text": "to do this and go or you know Ruby or Python or another language right and so",
    "start": "2523790",
    "end": "2529480"
  },
  {
    "text": "the fact that like in this github repo the fact that we have the specification and of lifecycle in the pack CLI means",
    "start": "2529480",
    "end": "2535280"
  },
  {
    "text": "that as in Bill pack as a person wants to write bill paxton support other languages I can follow the specification",
    "start": "2535280",
    "end": "2541700"
  },
  {
    "text": "I can build a thing specific to Java like Joe has done I can build a specific thing to Python I can build specific",
    "start": "2541700",
    "end": "2546800"
  },
  {
    "text": "Ruby and but still leverage all the other stuff in the kind of Bill pack ecosystem which is we can share tooling",
    "start": "2546800",
    "end": "2553100"
  },
  {
    "text": "like the PAC CLI to actually go ahead and build that stuff whereas if I was to do something like jiff it require",
    "start": "2553100",
    "end": "2558710"
  },
  {
    "text": "resources to basically integrate that thing into pip or you kind of have to pick what the kind of winning solution",
    "start": "2558710",
    "end": "2565040"
  },
  {
    "text": "right is in the ecosan so for pythons like do I knew rate with PIP do i integrate with pip m do i you know tie",
    "start": "2565040",
    "end": "2571670"
  },
  {
    "text": "this into virtual lab and so allows us to kind of sidestep a lot of those kind of issues and other things and really",
    "start": "2571670",
    "end": "2577820"
  },
  {
    "text": "focus on having a more general solution that is easy to plug in and can leverage resources together enough yet other",
    "start": "2577820",
    "end": "2583610"
  },
  {
    "text": "stuff to add know and we'll be around a let's take questions offline not just",
    "start": "2583610",
    "end": "2589760"
  },
  {
    "text": "the weekend scripts no but yeah what will hang out for sure yeah",
    "start": "2589760",
    "end": "2593830"
  }
]