[
  {
    "text": "okay hello everybody uh welcome to six scalability talk uh I'm so glad to see",
    "start": "399",
    "end": "6560"
  },
  {
    "text": "all of you here after such a long day um so today we'll be talking about six scalability introduction and deep dive",
    "start": "6560",
    "end": "14360"
  },
  {
    "text": "I'm marel jba I work at ISO voland and I'm sik scalability teacher and together",
    "start": "14360",
    "end": "19520"
  },
  {
    "text": "with me is vinski uh who works at Google and is six",
    "start": "19520",
    "end": "24640"
  },
  {
    "text": "scalability te lead so first of all let's start with",
    "start": "24640",
    "end": "30480"
  },
  {
    "text": "what do we do as a six scalability so there are basically five areas that we are interested in as a six scalability",
    "start": "30480",
    "end": "38079"
  },
  {
    "text": "first the most important is actually Define and drive what the scalability is",
    "start": "38079",
    "end": "43480"
  },
  {
    "text": "and as we will see soon on later slides it's not as obvious what the scalability means in terms of kubernetes um then",
    "start": "43480",
    "end": "50559"
  },
  {
    "text": "except for that we also do coordinate across different sixs uh in order to improve scalability of of kubernetes we",
    "start": "50559",
    "end": "58440"
  },
  {
    "text": "try to Monitor and measure all of the scalability um metrics that we care",
    "start": "58440",
    "end": "64080"
  },
  {
    "text": "about in kubernetes to make sure that we preserve the scalability properties of",
    "start": "64080",
    "end": "69560"
  },
  {
    "text": "of kubernetes across different releases and last but not least we also consult",
    "start": "69560",
    "end": "75360"
  },
  {
    "text": "with other six six to make sure that all the features that they're trying to implement are um are basically scalable",
    "start": "75360",
    "end": "83720"
  },
  {
    "text": "and we try to collaborate with them during the design process and um one",
    "start": "83720",
    "end": "89520"
  },
  {
    "text": "more thing uh please do not confuse s scalability with s autoscaling those two are totally",
    "start": "89520",
    "end": "96000"
  },
  {
    "text": "different s responsible for totally different things so uh what is the kubernetes scalability",
    "start": "96000",
    "end": "103040"
  },
  {
    "text": "if we ask our users and customers like what do they want they always say well",
    "start": "103040",
    "end": "108560"
  },
  {
    "text": "they want scalable clusters but then we ask like okay so what does it actually",
    "start": "108560",
    "end": "114040"
  },
  {
    "text": "mean well they usually don't know what means that clusters are scalable",
    "start": "114040",
    "end": "120560"
  },
  {
    "text": "so um what does it actually mean one dimension that everyone cares about in",
    "start": "120560",
    "end": "126159"
  },
  {
    "text": "terms of scalability of kubernetes is the number of nodes but that's not the only thing that we should care about",
    "start": "126159",
    "end": "132680"
  },
  {
    "text": "scalability is something way more than just number of nodes number of nodes is just one dimension that we care about",
    "start": "132680",
    "end": "140080"
  },
  {
    "text": "and we would like to think about scalability of kubernetes as kind of like hyper Cube where we have so many",
    "start": "140080",
    "end": "146599"
  },
  {
    "text": "different dimensions except for nodes we also care about like what's the pot turn in your cluster or how many not how many",
    "start": "146599",
    "end": "154200"
  },
  {
    "text": "pots do you have per note how many services but then again like if you have services like how many beckons those",
    "start": "154200",
    "end": "160800"
  },
  {
    "text": "Services have uh so with that in mind what we do is we Define scalability",
    "start": "160800",
    "end": "167120"
  },
  {
    "text": "envelope and you can think of it as some safe space safe Zone where if your",
    "start": "167120",
    "end": "174239"
  },
  {
    "text": "cluster is within the uh this scalability envelope then we we ensure",
    "start": "174239",
    "end": "180560"
  },
  {
    "text": "that your cluster will be happy but then the question becomes like what does it actually mean that the cluster is",
    "start": "180560",
    "end": "188560"
  },
  {
    "text": "Happy um so we have bunch of scalability slos and we ensure that if you configure",
    "start": "188560",
    "end": "195640"
  },
  {
    "text": "your cluster properly and you stay within scalability envelope um those slos will be",
    "start": "195640",
    "end": "204120"
  },
  {
    "text": "satisfied thank you um so what are the set SLI and slos really so SLI hopefully",
    "start": "204920",
    "end": "212640"
  },
  {
    "text": "you you you probably know all of that like SLI is service level indicator which you can conceptually think about",
    "start": "212640",
    "end": "218799"
  },
  {
    "text": "it about it as as a metric some kind of metric SLO um is a service level",
    "start": "218799",
    "end": "224840"
  },
  {
    "text": "objective which you can conceptually think about it as a as a metric with some",
    "start": "224840",
    "end": "230280"
  },
  {
    "text": "threshold um so those are like the Core Concepts that we use to to Define if if",
    "start": "230280",
    "end": "236720"
  },
  {
    "text": "or to to say if the kubernetes MS the criteria or in general if any system",
    "start": "236720",
    "end": "242239"
  },
  {
    "text": "meets the criteria that that it shouldn't be that it should meet um so",
    "start": "242239",
    "end": "247640"
  },
  {
    "text": "for kubernetes we Define or for purely From scalability perspective we defined those six um sis and slos um some of",
    "start": "247640",
    "end": "256440"
  },
  {
    "text": "them are still work in progress we we we still didn't like graduate them we we we measure them in our tests but we don't",
    "start": "256440",
    "end": "264080"
  },
  {
    "text": "necessarily Blog the releases on them we we um so it's it's still there's still a bunch of work to to do in this area and",
    "start": "264080",
    "end": "271280"
  },
  {
    "text": "if you look into those like um they are not covering like many of the areas of",
    "start": "271280",
    "end": "276680"
  },
  {
    "text": "kubernetes for example storage is not really covered well here um and there",
    "start": "276680",
    "end": "282360"
  },
  {
    "text": "are many many other dimensions that are not so there's still a lot of place for improvement here in terms of coverage of",
    "start": "282360",
    "end": "289479"
  },
  {
    "text": "those um of the sis and slos so we really need your help here",
    "start": "289479",
    "end": "296240"
  },
  {
    "text": "um so let's take a look into into one of the examples so so one of the main or",
    "start": "296240",
    "end": "302880"
  },
  {
    "text": "one of the like main slos that we have is um is the API C latency and this is",
    "start": "302880",
    "end": "308440"
  },
  {
    "text": "like how the SLO was defined in the first blog post that that we published",
    "start": "308440",
    "end": "313759"
  },
  {
    "text": "or I published in the kubernetes blockpost in 2015 I just realized like an hour ago",
    "start": "313759",
    "end": "319199"
  },
  {
    "text": "that if it would be my kid which kind of is I would already be driving it to school um it's like it's like more than",
    "start": "319199",
    "end": "326600"
  },
  {
    "text": "8 years old at this point um so what it what it how it looked like back",
    "start": "326600",
    "end": "331919"
  },
  {
    "text": "then is was like 99% of all our API calls return in less than one second um",
    "start": "331919",
    "end": "338240"
  },
  {
    "text": "and there is a problem with this SLO which is the fact that probably I bet",
    "start": "338240",
    "end": "343639"
  },
  {
    "text": "that my understanding of this SLO and many of you are very different and and",
    "start": "343639",
    "end": "348919"
  },
  {
    "text": "this is a problem here or this is a problem in general because like slos are are our contract with users so if we are",
    "start": "348919",
    "end": "358720"
  },
  {
    "text": "in the situation when the system actually meets the the my understanding",
    "start": "358720",
    "end": "364600"
  },
  {
    "text": "of the SLO but doesn't meet your understanding of SLO it means that like",
    "start": "364600",
    "end": "369759"
  },
  {
    "text": "we believe that the system behaves as it should and you from your perspective it doesn't so um that is a big problem so",
    "start": "369759",
    "end": "378080"
  },
  {
    "text": "over time we were refining many of the slos like and here is how it looks like",
    "start": "378080",
    "end": "383800"
  },
  {
    "text": "currently um so as you can see it's it's much much more precise now like it's it's much more precisely defining like",
    "start": "383800",
    "end": "391520"
  },
  {
    "text": "what kind of like API calls we are talking about how exactly we are like aggregating those um over what time",
    "start": "391520",
    "end": "400199"
  },
  {
    "text": "period like under what circumstances um we actually guarantee something so here",
    "start": "400199",
    "end": "407080"
  },
  {
    "text": "we are explicitly talking about like default kubernetes vanilla installation",
    "start": "407080",
    "end": "412759"
  },
  {
    "text": "because things like web hooks obviously affect API call latency and we we don't",
    "start": "412759",
    "end": "418440"
  },
  {
    "text": "have really control of over those so you can install like a web hook that is sleeping for 5 seconds in your cluster",
    "start": "418440",
    "end": "424840"
  },
  {
    "text": "and like there's nothing we can do and there's no way we would be able to meet those SL SLO um so so there are there",
    "start": "424840",
    "end": "431080"
  },
  {
    "text": "are like explicit uh constraints here and although still not perfect we are in",
    "start": "431080",
    "end": "439520"
  },
  {
    "text": "much much better shape here in terms of like ensuring that like the understanding of our users and like the",
    "start": "439520",
    "end": "446160"
  },
  {
    "text": "way we are measuring it actually is is hopefully the same um so now taking a",
    "start": "446160",
    "end": "454400"
  },
  {
    "text": "step back to what marel was saying like um the scalability envelope is is",
    "start": "454400",
    "end": "461199"
  },
  {
    "text": "the is the multi-dimensional cube or multi-dimensional Subspace of um",
    "start": "461199",
    "end": "468599"
  },
  {
    "text": "configurations where the kubernetes we believe the kubernetes actually scales but um the problem is that defining this",
    "start": "468599",
    "end": "475240"
  },
  {
    "text": "Subspace precisely is pretty much impossible um fortunately we can",
    "start": "475240",
    "end": "481240"
  },
  {
    "text": "relatively well approximate this by a number of like kind of independent um",
    "start": "481240",
    "end": "487960"
  },
  {
    "text": "Dimensions obviously they are not like completely independent but um they are",
    "start": "487960",
    "end": "494560"
  },
  {
    "text": "well enough independent for some definition of well enough that that like it's it's basically how we are how we",
    "start": "494560",
    "end": "501240"
  },
  {
    "text": "are talking about like the um the the Subspace so things like number of notes",
    "start": "501240",
    "end": "507759"
  },
  {
    "text": "um at most five ,000 number of services at most like um 10,000 and so on and so",
    "start": "507759",
    "end": "513719"
  },
  {
    "text": "on and if you are interested in there's like um a much bigger list of those like",
    "start": "513719",
    "end": "518880"
  },
  {
    "text": "under the link here um many of those or some of those at least are not still filled in like it's it's something that",
    "start": "518880",
    "end": "526080"
  },
  {
    "text": "like um we need better test coverage and so on so there there's still a lot of work to be done here um and with that",
    "start": "526080",
    "end": "534160"
  },
  {
    "text": "yes I'm passing to Mar okay so uh we know what kind of a SL do we have what",
    "start": "534160",
    "end": "539959"
  },
  {
    "text": "kind of sis do we care about and you saw some of the limits and that we are",
    "start": "539959",
    "end": "545200"
  },
  {
    "text": "interested in so the question now becomes how do we ensure that those slos",
    "start": "545200",
    "end": "550600"
  },
  {
    "text": "are met for each of kubernetes release um so I will be talking about our",
    "start": "550600",
    "end": "555680"
  },
  {
    "text": "testing infrastructure what kind of tools do we use um so let's get started",
    "start": "555680",
    "end": "560720"
  },
  {
    "text": "so the first the most important tool that we use for our scale testing is cluster Loader 2 and you can think of it",
    "start": "560720",
    "end": "568320"
  },
  {
    "text": "as as a tool where you declaratively can easily specify in what states do you",
    "start": "568320",
    "end": "574600"
  },
  {
    "text": "want to have your cluster in so imagine you start with like empty cluster and then you want to scale up number of PODS",
    "start": "574600",
    "end": "581760"
  },
  {
    "text": "to 100,000 pods and then you want to update like half of them and so on so",
    "start": "581760",
    "end": "587279"
  },
  {
    "text": "you can specify all those states that you are interested in but what is even more important you can also specify how",
    "start": "587279",
    "end": "593720"
  },
  {
    "text": "do you want to transition between those states in the cluster loader and cluster loader basically basically executes all",
    "start": "593720",
    "end": "600920"
  },
  {
    "text": "those things that you specify um moving the cluster through",
    "start": "600920",
    "end": "606360"
  },
  {
    "text": "all those States while also measuring all of the scalability slos that we care",
    "start": "606360",
    "end": "611519"
  },
  {
    "text": "about and making sure that none of them are actually violated so let's say that",
    "start": "611519",
    "end": "616600"
  },
  {
    "text": "you are interested in uh running the cluster that is beyond the scalability limits um that we officially support",
    "start": "616600",
    "end": "623800"
  },
  {
    "text": "then you could use for example cluster Loader 2 to test your own setup to make sure that and nothing will be breaking",
    "start": "623800",
    "end": "630800"
  },
  {
    "text": "at your scale for example and on top of that uh when you are running the cluster",
    "start": "630800",
    "end": "636160"
  },
  {
    "text": "older to it actually gathers quite a lot of information um quite a lot of metrics",
    "start": "636160",
    "end": "642320"
  },
  {
    "text": "to help you debug in case some of the SLS are not met um and if you are",
    "start": "642320",
    "end": "647920"
  },
  {
    "text": "interested in U more features then what you can do is go to our um GitHub",
    "start": "647920",
    "end": "653760"
  },
  {
    "text": "repository perve test where we have way more details like what the cluster holder to can can actually measure um",
    "start": "653760",
    "end": "660880"
  },
  {
    "text": "and help you debu scalability issues in kubernetes cluster um another thing is that running",
    "start": "660880",
    "end": "668200"
  },
  {
    "text": "5,000 nodes is quite expensive so um",
    "start": "668200",
    "end": "673240"
  },
  {
    "text": "basically at minimum you have to actually have like 5,000 5,000 CPUs just for supporting the nodes um so we were",
    "start": "673240",
    "end": "680480"
  },
  {
    "text": "thinking like okay how we can optimize it and make it more affordable for testing scalability of kubernetes so we",
    "start": "680480",
    "end": "687839"
  },
  {
    "text": "implemented CU mark and the idea is that instead of running like actual kuet that",
    "start": "687839",
    "end": "693040"
  },
  {
    "text": "does all the work um what you can do is use Cub Mark for simulating the cuet and",
    "start": "693040",
    "end": "699440"
  },
  {
    "text": "um because of that what happens is that using just single node you can run",
    "start": "699440",
    "end": "704600"
  },
  {
    "text": "multiple Hollow nodes that simulate the load of um of of all of the cuets on the",
    "start": "704600",
    "end": "710839"
  },
  {
    "text": "kubernetes control plane um and instead of using like 5,000 CPUs you can",
    "start": "710839",
    "end": "716000"
  },
  {
    "text": "basically go down to a few hundred of uh CPUs use simulating the real cluster and",
    "start": "716000",
    "end": "721760"
  },
  {
    "text": "then you you can just scale test like regular uh kubernetes cluster but with",
    "start": "721760",
    "end": "728519"
  },
  {
    "text": "way less um nodes um so I talked about cluster",
    "start": "728519",
    "end": "734800"
  },
  {
    "text": "loader that it exports quite a lot of uh data and slos about um scalability slos",
    "start": "734800",
    "end": "741399"
  },
  {
    "text": "that we care about but then again like during the development of uh kubernetes we want to keep track like how those sis",
    "start": "741399",
    "end": "748920"
  },
  {
    "text": "change over time uh with the development so uh we do have perv Dash that allows",
    "start": "748920",
    "end": "754399"
  },
  {
    "text": "us to visualize all of the data from cluster Loader 2 um and as example here",
    "start": "754399",
    "end": "760680"
  },
  {
    "text": "you can see put startup latency because that's one of the slos we care about and",
    "start": "760680",
    "end": "766079"
  },
  {
    "text": "um for example here you see like 99th percentile uh of Po startup latency that it changed and actually improved over",
    "start": "766079",
    "end": "773199"
  },
  {
    "text": "time uh for one of the releases of kubernetes um then we have obviously",
    "start": "773199",
    "end": "779240"
  },
  {
    "text": "grafana we have pretty a pretty good grafana dashboard that you can use uh if you are interested in debugging uh your",
    "start": "779240",
    "end": "786360"
  },
  {
    "text": "run so let's say you are running cluster older 2 and we export uh quite a lot of promit use metrics and then you can just",
    "start": "786360",
    "end": "792839"
  },
  {
    "text": "plug in our grafana dashboard to visualize like what was going on during the test",
    "start": "792839",
    "end": "798440"
  },
  {
    "text": "execution uh on top of that we also gather profiling data um as you know we",
    "start": "798440",
    "end": "804800"
  },
  {
    "text": "want to drive different improvements uh to kubernetes control plan uh we are",
    "start": "804800",
    "end": "810000"
  },
  {
    "text": "trying to grab as many as possible profiling data during the test execution so then later on we can investigate what",
    "start": "810000",
    "end": "816800"
  },
  {
    "text": "areas of kubernetes control plane can be improved um so now let's talk about like",
    "start": "816800",
    "end": "824800"
  },
  {
    "text": "once we have all this testing infrastructure how do we actually protect kubernetes scalability so um we",
    "start": "824800",
    "end": "832160"
  },
  {
    "text": "have um periodic tests that we run uh every second day right now I think which",
    "start": "832160",
    "end": "838560"
  },
  {
    "text": "is like performance test um with 5,000 nodes um where we try to stretch all",
    "start": "838560",
    "end": "845600"
  },
  {
    "text": "those uh limits that we mentioned before and ensure that all the slos are met um",
    "start": "845600",
    "end": "851800"
  },
  {
    "text": "on top of that we also run like performance test with 100 notes way more",
    "start": "851800",
    "end": "857199"
  },
  {
    "text": "often to catch like significant regressions much easier which definitely helps us to pinpoint different",
    "start": "857199",
    "end": "863120"
  },
  {
    "text": "improvements PRS that were merged to kubernetes much sooner um and we also",
    "start": "863120",
    "end": "868240"
  },
  {
    "text": "test correctness so uh even though we care about those slos we make sure that if you are using like regular kubernetes",
    "start": "868240",
    "end": "876000"
  },
  {
    "text": "features then even though you have 5,000 nodes then all of those features still",
    "start": "876000",
    "end": "881839"
  },
  {
    "text": "work also we have some non-release blocking so those three that I mentioned before are release blocking so we ensure",
    "start": "881839",
    "end": "888600"
  },
  {
    "text": "that all of those test pass before each of kubernetes release is released um but we also do have some",
    "start": "888600",
    "end": "896000"
  },
  {
    "text": "other tests that help us to debug different scalability issues um for",
    "start": "896000",
    "end": "901480"
  },
  {
    "text": "example benchmarks one of my favorite benchmarks is that we actually take kubernetes version uh that is fixed and",
    "start": "901480",
    "end": "908040"
  },
  {
    "text": "we compile it with different Goan compilers like newer and newer so we actually observe that go compiler can",
    "start": "908040",
    "end": "914880"
  },
  {
    "text": "affect kubernetes scalability quite a lot so we develop this Benchmark where",
    "start": "914880",
    "end": "919959"
  },
  {
    "text": "we just basically Benchmark going compiler um except for that uh whenever",
    "start": "919959",
    "end": "925639"
  },
  {
    "text": "someone opens PR kubernetes we also do have option to run the scalability test manually uh",
    "start": "925639",
    "end": "932600"
  },
  {
    "text": "on 100 node scale test or 5,000 nodes scale test to just compare if we think",
    "start": "932600",
    "end": "938199"
  },
  {
    "text": "that you know this PR U might affect scalability or might improve scalability then we can just verify that by simply",
    "start": "938199",
    "end": "945560"
  },
  {
    "text": "running the test for specific PR",
    "start": "945560",
    "end": "950920"
  },
  {
    "text": "so once we have all those tests that are running we use test grid just to keep track if uh if all of the tests are",
    "start": "950920",
    "end": "958319"
  },
  {
    "text": "possible to make sure everything is fine before the release",
    "start": "958319",
    "end": "963519"
  },
  {
    "text": "especially um as mentioned before um we've seen scalability regressions",
    "start": "963519",
    "end": "970120"
  },
  {
    "text": "coming not only from kubernetes but also bunch of other components as mentioned",
    "start": "970120",
    "end": "976360"
  },
  {
    "text": "before even going compiler but operating system or scheduler different at CD",
    "start": "976360",
    "end": "982120"
  },
  {
    "text": "versions um so um I would say that scalability is pretty sensitive because",
    "start": "982120",
    "end": "989319"
  },
  {
    "text": "there are so many pieces that um combined are creating kubernetes and um",
    "start": "989319",
    "end": "995720"
  },
  {
    "text": "the regressions can come from anywhere so once we identify what part",
    "start": "995720",
    "end": "1001360"
  },
  {
    "text": "of um what part of uh kubernetes basically um made the regression for",
    "start": "1001360",
    "end": "1009319"
  },
  {
    "text": "kubernetes and our slos and we try to coordinate with different s to to get that fixed or maybe sometimes we are",
    "start": "1009319",
    "end": "1015920"
  },
  {
    "text": "contributing ourselves",
    "start": "1015920",
    "end": "1020480"
  },
  {
    "text": "okay thank you and the last part of the presentation which is probably the most import most",
    "start": "1021959",
    "end": "1027798"
  },
  {
    "text": "interesting for many people which is like the actual improvements that we are making to the system um so there are",
    "start": "1027799",
    "end": "1034839"
  },
  {
    "text": "like two main groups of improvements that we are making um the first one is improving the reliability at scale um",
    "start": "1034839",
    "end": "1042640"
  },
  {
    "text": "why reliability because like you can think about scalability effectively as reliability at scale so those are those",
    "start": "1042640",
    "end": "1049600"
  },
  {
    "text": "kind of improvements that are not really pushing the limits farther but I'm ensuring that within the existing limits",
    "start": "1049600",
    "end": "1056360"
  },
  {
    "text": "um the system really behaves and really is is really really rock solid and and works so there are no hard Cliff system",
    "start": "1056360",
    "end": "1063960"
  },
  {
    "text": "degrades gracefully and so on and so on um and the second category are are those",
    "start": "1063960",
    "end": "1069880"
  },
  {
    "text": "that are actually pushing the limits of the system um given that the six scalability",
    "start": "1069880",
    "end": "1077039"
  },
  {
    "text": "doesn't really own any non test related code like pretty much everything's uh",
    "start": "1077039",
    "end": "1083720"
  },
  {
    "text": "all the things that we are doing is as kind of joined with other six or is",
    "start": "1083720",
    "end": "1089240"
  },
  {
    "text": "being owned by them but like contributed or um or being even being driven by us",
    "start": "1089240",
    "end": "1096679"
  },
  {
    "text": "but like those other six will are are the ones who will eventually um or who",
    "start": "1096679",
    "end": "1102880"
  },
  {
    "text": "are eventually owning and maintaining everything so like it it's it it needs to be agreed with that and so most of",
    "start": "1102880",
    "end": "1110200"
  },
  {
    "text": "the things that we are doing are kind of done together with s API Machinery um so",
    "start": "1110200",
    "end": "1117480"
  },
  {
    "text": "if you attend daytox some of the things may appear there too um but uh those are",
    "start": "1117480",
    "end": "1123320"
  },
  {
    "text": "the things that we are heavily involved into um so let's take a look into examples um let's start with the the",
    "start": "1123320",
    "end": "1130559"
  },
  {
    "text": "improving reliability and the big the biggest probably the biggest thing here is API priority and fairness um for",
    "start": "1130559",
    "end": "1137840"
  },
  {
    "text": "those who didn't hear about that like it's it's this mechanis of rate limiting",
    "start": "1137840",
    "end": "1143240"
  },
  {
    "text": "rate limiting in the API server to ensure that like no load um coming from",
    "start": "1143240",
    "end": "1150600"
  },
  {
    "text": "the clients talking to API server will actually overload it and it's I'm I'm I'm super excited that we finally make",
    "start": "1150600",
    "end": "1157960"
  },
  {
    "text": "that happen like we are ging it one with 129 release um it it's been a long",
    "start": "1157960",
    "end": "1164080"
  },
  {
    "text": "journey like we had Alpha in 119 which is like three and a half years old or",
    "start": "1164080",
    "end": "1171280"
  },
  {
    "text": "something and we started working on that like even before I think the first code",
    "start": "1171280",
    "end": "1176360"
  },
  {
    "text": "that we committed for APF was like 117 something like that so it's like",
    "start": "1176360",
    "end": "1182039"
  },
  {
    "text": "four years each um since we actually started that so it's it's it's great achievement here um the second thing is",
    "start": "1182039",
    "end": "1190120"
  },
  {
    "text": "like improving upgrades experience at scale um we all know that upgrades are",
    "start": "1190120",
    "end": "1195720"
  },
  {
    "text": "painful with kubernetes scale is just adding another additional pain to that",
    "start": "1195720",
    "end": "1201080"
  },
  {
    "text": "so um there are things that we are making to to to reduce that pain um um",
    "start": "1201080",
    "end": "1207159"
  },
  {
    "text": "graceful shutdown in particular was was one of one of the things that we visibly improved in the um last couple releases",
    "start": "1207159",
    "end": "1214919"
  },
  {
    "text": "things like um graceful shutdown of watches are probably the most important",
    "start": "1214919",
    "end": "1220400"
  },
  {
    "text": "thing because we we see cluster we observe clusters in production with",
    "start": "1220400",
    "end": "1225640"
  },
  {
    "text": "production with hundreds of thousands of watches so in the past when they were",
    "start": "1225640",
    "end": "1232159"
  },
  {
    "text": "immediately shut down at the same time and they were trying to reconnect um",
    "start": "1232159",
    "end": "1237400"
  },
  {
    "text": "again at the same time that was overloading the control plane many times",
    "start": "1237400",
    "end": "1242679"
  },
  {
    "text": "now we have a mechanism that like can actually split um or or spread those those the",
    "start": "1242679",
    "end": "1249120"
  },
  {
    "text": "closing those watches over like somewhat longer time and and make that like much",
    "start": "1249120",
    "end": "1254480"
  },
  {
    "text": "much less invasive um and the third thing thing that I wanted to mention those are just example there are other",
    "start": "1254480",
    "end": "1261440"
  },
  {
    "text": "examples there are other things but the third thing that I wanted to mention is like API streaming lists um this is this",
    "start": "1261440",
    "end": "1268360"
  },
  {
    "text": "is the concept where like or why we are doing it is effectively um it's not that",
    "start": "1268360",
    "end": "1275279"
  },
  {
    "text": "hard to actually cause your control plane or your API server or API server andet CD to O by relatively small number",
    "start": "1275279",
    "end": "1283840"
  },
  {
    "text": "of like large list requests like list all Bs in the cluster um so we",
    "start": "1283840",
    "end": "1291840"
  },
  {
    "text": "are we are actually introducing a mechanis to to allow you to to allow to",
    "start": "1291840",
    "end": "1297760"
  },
  {
    "text": "serve the response of the list not in a one big chunk but rather like in a",
    "start": "1297760",
    "end": "1302919"
  },
  {
    "text": "streaming way reusing all the Machinery that we have for for the watch API um",
    "start": "1302919",
    "end": "1308559"
  },
  {
    "text": "and we we made an alpha in 128 that had a bunch of rough edges which I think all",
    "start": "1308559",
    "end": "1316559"
  },
  {
    "text": "of them are fixed now in 29 it remained in Alpha still",
    "start": "1316559",
    "end": "1322360"
  },
  {
    "text": "because um which is actually interesting U as part of like um and like doing a",
    "start": "1322360",
    "end": "1330520"
  },
  {
    "text": "review of all the regressions that we have over last three years in kubernetes",
    "start": "1330520",
    "end": "1336120"
  },
  {
    "text": "itself um one of the two main categories of those regressions were um were things",
    "start": "1336120",
    "end": "1342640"
  },
  {
    "text": "that or one one of the two main categories that was painful for for us",
    "start": "1342640",
    "end": "1348080"
  },
  {
    "text": "and even more for users than for us are the are the changes that were or is",
    "start": "1348080",
    "end": "1354640"
  },
  {
    "text": "enabling some new features on the client side because we didn't have a reasonable mitigation for easily disable them on",
    "start": "1354640",
    "end": "1362600"
  },
  {
    "text": "the client side so um one of the thing that we decided as a as an action item from that um that",
    "start": "1362600",
    "end": "1369240"
  },
  {
    "text": "exercise um in the production Readiness uh review sub project um was to",
    "start": "1369240",
    "end": "1376360"
  },
  {
    "text": "development mechanis to to like more or better enablement of of features on the",
    "start": "1376360",
    "end": "1382120"
  },
  {
    "text": "client side and given that we want to enable it this",
    "start": "1382120",
    "end": "1388120"
  },
  {
    "text": "feature also on the client side not just server side because we need clients to to opt in to that that new API um and",
    "start": "1388120",
    "end": "1396640"
  },
  {
    "text": "given that this mechanis is not yet ready like we decided to postpone beta for hopefully very least like we are we",
    "start": "1396640",
    "end": "1403760"
  },
  {
    "text": "are committed to to make it happen in 130 um",
    "start": "1403760",
    "end": "1409840"
  },
  {
    "text": "okay so and this so the second category of like pushing pushing the limits of the system again there those are just",
    "start": "1409840",
    "end": "1416120"
  },
  {
    "text": "examples but uh um the first example is",
    "start": "1416120",
    "end": "1421279"
  },
  {
    "text": "in general improving crd scalability like it's it's one of the the biggest",
    "start": "1421279",
    "end": "1426520"
  },
  {
    "text": "problems uh that or the well-known problems that like the built-in apis um",
    "start": "1426520",
    "end": "1433840"
  },
  {
    "text": "are scaling much better than those those that are like driven by crds um so one",
    "start": "1433840",
    "end": "1442799"
  },
  {
    "text": "of the things that we are we are currently working on is introducing a binary protocol for serializing on",
    "start": "1442799",
    "end": "1449240"
  },
  {
    "text": "foreign coding um crds um we also wanted to make it happen",
    "start": "1449240",
    "end": "1455440"
  },
  {
    "text": "in 129 but it didn't make primarily for the same reason um as",
    "start": "1455440",
    "end": "1461360"
  },
  {
    "text": "uh uh as the API streaming list that we we don't have a reasonable way to",
    "start": "1461360",
    "end": "1467880"
  },
  {
    "text": "enables it on the client side but it it's coming um the the preliminary benchmarks show at least 2x",
    "start": "1467880",
    "end": "1476480"
  },
  {
    "text": "Improvement um in terms of like how fast we can serialize stuff and or der serialize and so on so it's it's it will",
    "start": "1476480",
    "end": "1483120"
  },
  {
    "text": "be a significant um Improvement um from the same category like we we did like U",
    "start": "1483120",
    "end": "1490200"
  },
  {
    "text": "we improved like the how we are serializing the events um uh the watch event",
    "start": "1490200",
    "end": "1498760"
  },
  {
    "text": "uh we we improved so couple releases ago or maybe it's not even a couple it was",
    "start": "1498760",
    "end": "1504840"
  },
  {
    "text": "more like a dozen of releases ago is um we introduced a mechanism where like if",
    "start": "1504840",
    "end": "1512960"
  },
  {
    "text": "multiple Watchers are watching for the same object we will effectively serialize this object once and not",
    "start": "1512960",
    "end": "1519679"
  },
  {
    "text": "independently for every single Watcher but we missed one one simple thing which",
    "start": "1519679",
    "end": "1524760"
  },
  {
    "text": "is we did that for the object itself but we did do that for the event which is",
    "start": "1524760",
    "end": "1530640"
  },
  {
    "text": "like wrapper and AR the object um so the event contains the object and the type",
    "start": "1530640",
    "end": "1536480"
  },
  {
    "text": "so like added modified deleted or error um and that that part we are we were",
    "start": "1536480",
    "end": "1542440"
  },
  {
    "text": "actually serializing independently for every single single watch and this is something that we fixed this release",
    "start": "1542440",
    "end": "1549159"
  },
  {
    "text": "like week ago literally um um so that",
    "start": "1549159",
    "end": "1554760"
  },
  {
    "text": "that also brings another like roughly tox Improvement for for like um if if",
    "start": "1554760",
    "end": "1560520"
  },
  {
    "text": "you have a big cluster and a number of Watchers that that are watching for the same stuff",
    "start": "1560520",
    "end": "1567399"
  },
  {
    "text": "um the second like subcategory are like a number of local improvements to the",
    "start": "1567399",
    "end": "1572760"
  },
  {
    "text": "API server like we improved the compression we improved like the handling of um of list requests with",
    "start": "1572760",
    "end": "1579960"
  },
  {
    "text": "rare selectors and so on and so on those are like each of them is like relatively small change on its own own",
    "start": "1579960",
    "end": "1587039"
  },
  {
    "text": "and like very localized but they are like um fixing concrete Pains of our",
    "start": "1587039",
    "end": "1593279"
  },
  {
    "text": "users and concrete um issues that they face in their",
    "start": "1593279",
    "end": "1598480"
  },
  {
    "text": "production and the second or and the third category or subcategory is a number of like improvements primarily in",
    "start": "1598480",
    "end": "1606440"
  },
  {
    "text": "the schuer but but not only like um some things um on the API Machinery on API",
    "start": "1606440",
    "end": "1613919"
  },
  {
    "text": "server um potentially also those for that I mentioned for crds are are contributing",
    "start": "1613919",
    "end": "1620520"
  },
  {
    "text": "here um is is is um is the category of things",
    "start": "1620520",
    "end": "1626240"
  },
  {
    "text": "that are improving um the pot the the the frut of the system in particular the pot frut um like with kubernetes being",
    "start": "1626240",
    "end": "1635240"
  },
  {
    "text": "more and more used for batch workloads um it's important to that like one of",
    "start": "1635240",
    "end": "1642159"
  },
  {
    "text": "the important requirements in the batch batch world is um is the how how fast we",
    "start": "1642159",
    "end": "1648159"
  },
  {
    "text": "can schedule or how fast we can start a large number of bots like job jobs with",
    "start": "1648159",
    "end": "1654600"
  },
  {
    "text": "like hundreds thousands tens of thousands or or sometimes even hundreds of thousands of bots so um the the the",
    "start": "1654600",
    "end": "1661840"
  },
  {
    "text": "frut here really matters um and I think with with that uh there's one more thing",
    "start": "1661840",
    "end": "1669960"
  },
  {
    "text": "that I wanted to mention here is um especially for the category things of",
    "start": "1669960",
    "end": "1675279"
  },
  {
    "text": "category of things of like in pushing the limits farther it's not that we are",
    "start": "1675279",
    "end": "1681799"
  },
  {
    "text": "actually blindly optimizing the system for the sake of optimizing it um like we",
    "start": "1681799",
    "end": "1688120"
  },
  {
    "text": "should always be thinking about like some particular use case particular like",
    "start": "1688120",
    "end": "1694679"
  },
  {
    "text": "user user originating problem and and optimize the system only if there is a a",
    "start": "1694679",
    "end": "1701640"
  },
  {
    "text": "real need for that like you might have seen me like rejecting certain performance optimization even though",
    "start": "1701640",
    "end": "1708159"
  },
  {
    "text": "they were actually improving the system because they were introducing too much complexity to the system like versus the",
    "start": "1708159",
    "end": "1715519"
  },
  {
    "text": "gain that we were getting from them um so I'm not sure like who came up with",
    "start": "1715519",
    "end": "1721840"
  },
  {
    "text": "the idea but I I I first heard it from Tim Hawking and I really like it it's like this idea of like um complexity",
    "start": "1721840",
    "end": "1729600"
  },
  {
    "text": "budget so we have like a certain budget for um for for things we can do like to",
    "start": "1729600",
    "end": "1736720"
  },
  {
    "text": "do to for things we do in the system that we can we can consume like so if we",
    "start": "1736720",
    "end": "1743480"
  },
  {
    "text": "introduce a complexity in in in certain area to for example improve its performance we will not really have this",
    "start": "1743480",
    "end": "1750799"
  },
  {
    "text": "cognitive budget to do some other things so we need to be be really careful um",
    "start": "1750799",
    "end": "1756760"
  },
  {
    "text": "to to not do optimizations that like we",
    "start": "1756760",
    "end": "1763120"
  },
  {
    "text": "our users don't really need um and with that I think it's um I wanted to reiterate that like we",
    "start": "1763120",
    "end": "1771480"
  },
  {
    "text": "really need your help uh if you are interested at any of the work like we have a ton of work in any of those those",
    "start": "1771480",
    "end": "1778240"
  },
  {
    "text": "um areas that that we were both talking about um please reach out on slack",
    "start": "1778240",
    "end": "1783559"
  },
  {
    "text": "please reach out uh on um our mailing list please join our scalability",
    "start": "1783559",
    "end": "1790039"
  },
  {
    "text": "scalability meetings we have like a bi-weekly meeting every Thursday um or reach out to us here like we are are we",
    "start": "1790039",
    "end": "1797880"
  },
  {
    "text": "are both here um somewhere around",
    "start": "1797880",
    "end": "1803200"
  },
  {
    "text": "um and and talk to us and and like we will find a thing that will that is um",
    "start": "1803200",
    "end": "1810240"
  },
  {
    "text": "that you you would like to help and that will be useful for for us um and with",
    "start": "1810240",
    "end": "1815480"
  },
  {
    "text": "that yes thank you thank you very much for coming and and um joining the meeting and",
    "start": "1815480",
    "end": "1821919"
  },
  {
    "text": "uh I think we are opening like we still have five minutes or a little bit less than five minutes is if you have any",
    "start": "1821919",
    "end": "1830240"
  },
  {
    "text": "questions oh there's there's a question",
    "start": "1832480",
    "end": "1836679"
  },
  {
    "text": "there um my question is regarding um the test for class Lo 2 uh that you're short",
    "start": "1837559",
    "end": "1843320"
  },
  {
    "text": "based on the sis and slos um for example I just wanted to kind of understand when",
    "start": "1843320",
    "end": "1849120"
  },
  {
    "text": "you're getting those slos or sis are you using explicit mechanisms to extract those values or using something like for",
    "start": "1849120",
    "end": "1855559"
  },
  {
    "text": "I take an example of the part sh Bladen um I think from 1.27 they introduced a",
    "start": "1855559",
    "end": "1860720"
  },
  {
    "text": "new cubet metric that directly uh measures sport setup latency SLI as",
    "start": "1860720",
    "end": "1866240"
  },
  {
    "text": "mentioned the Upstream uh but I also was kind of wondering the Fidelity uh of",
    "start": "1866240",
    "end": "1871600"
  },
  {
    "text": "those number especially if you're getting it I mean if we want to measure it per pod individually for remove image",
    "start": "1871600",
    "end": "1877919"
  },
  {
    "text": "pull times or uh time to run it containers we'd get accurate value but when we using inbuilt metrics what's the",
    "start": "1877919",
    "end": "1884320"
  },
  {
    "text": "Fidelity of it cuz it's a stateless PA but but does it automatically exclude",
    "start": "1884320",
    "end": "1890240"
  },
  {
    "text": "from the 99th percentile when it's calculating parts that have PB attachments or parts that have liveness",
    "start": "1890240",
    "end": "1896760"
  },
  {
    "text": "and Readiness probes things like that so I just I'm just trying to understand the Fidelity of those metrics and how you uh",
    "start": "1896760",
    "end": "1902519"
  },
  {
    "text": "try and get those numbers yeah so that's a good question so I think it",
    "start": "1902519",
    "end": "1909559"
  },
  {
    "text": "um it depends so the",
    "start": "1909559",
    "end": "1915159"
  },
  {
    "text": "metric the metric I'm not sure which metric you are talking about but there's a metric in cuet that we added for that",
    "start": "1915159",
    "end": "1921399"
  },
  {
    "text": "and that metric doesn't do that on its own it's either a to-do in the code or there",
    "start": "1921399",
    "end": "1928919"
  },
  {
    "text": "is an issue open for that to actually like incorporate that information because we have that we we know what pod",
    "start": "1928919",
    "end": "1935639"
  },
  {
    "text": "that is so we can we can easily say say like what kind of um pod that is um we",
    "start": "1935639",
    "end": "1943799"
  },
  {
    "text": "are in the cluster loader itself we have like additional we are measuring it",
    "start": "1943799",
    "end": "1949200"
  },
  {
    "text": "slightly differently still we are not relying on the cuet metrics because they were added very recently and we still",
    "start": "1949200",
    "end": "1954480"
  },
  {
    "text": "didn't migrate to them um and in the cluster loader itself we are actually",
    "start": "1954480",
    "end": "1960200"
  },
  {
    "text": "distinguishing those spots so so the the the numbers there are much more accurate",
    "start": "1960200",
    "end": "1967320"
  },
  {
    "text": "um although they are they are still not perfect like I I think there are some Corner cases which we are not like",
    "start": "1967320",
    "end": "1975120"
  },
  {
    "text": "um um contributing to the to the right thing but um on the other hand those are like",
    "start": "1975120",
    "end": "1983399"
  },
  {
    "text": "tests so so you you kind of like can easily check it or or we can easily like fix that if if you find an issue so um",
    "start": "1983399",
    "end": "1991960"
  },
  {
    "text": "so yeah I guess the short answer is like on cuet side it's it's still TBD",
    "start": "1991960",
    "end": "1997000"
  },
  {
    "text": "although like the that part is actually relatively easy to do so we we just need to prioritize it all right thank",
    "start": "1997000",
    "end": "2005519"
  },
  {
    "text": "you anyone",
    "start": "2005960",
    "end": "2011200"
  },
  {
    "text": "else three two one okay thank you very much and um enjoy the rest of the",
    "start": "2012360",
    "end": "2021120"
  },
  {
    "text": "conference",
    "start": "2021120",
    "end": "2024120"
  }
]