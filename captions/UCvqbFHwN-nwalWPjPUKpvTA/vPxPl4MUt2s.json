[
  {
    "text": "hey good morning",
    "start": "90479",
    "end": "93359"
  },
  {
    "text": "let's get a little bit more time for people to join",
    "start": "97360",
    "end": "115840"
  },
  {
    "text": "this kevin are you there",
    "start": "308840",
    "end": "313280"
  },
  {
    "text": "yes i'm here can you hear me yeah i can hear you uh looks like we don't have any anybody",
    "start": "314320",
    "end": "322400"
  },
  {
    "text": "joining yet i don't know maybe we can wait another couple of minutes yeah uh i've got a few",
    "start": "322400",
    "end": "329840"
  },
  {
    "text": "minutes but uh yeah i i also dumped a bunch of links into the slack channel so if people i think",
    "start": "329840",
    "end": "337280"
  },
  {
    "text": "there's a there's a bunch of youtube links in there for some talks they can watch yeah",
    "start": "337280",
    "end": "343680"
  },
  {
    "text": "yeah and maybe yeah let's see if somebody else joins uh",
    "start": "343680",
    "end": "349840"
  },
  {
    "text": "otherwise i think you could just go by the somebody links on the channel because i mean",
    "start": "349840",
    "end": "355039"
  },
  {
    "text": "i don't know if it really makes sense to to to go over the same material right so",
    "start": "355039",
    "end": "361360"
  },
  {
    "text": "nobody's joining yeah no worries",
    "start": "361360",
    "end": "367840"
  },
  {
    "text": "maybe maybe we could do a little bit of uh you know an interactive session i guess",
    "start": "430400",
    "end": "438000"
  },
  {
    "text": "and maybe i can just kind of we can just ask questions or i can ask questions and you know like",
    "start": "438000",
    "end": "444800"
  },
  {
    "text": "um so i'm i'm curious um how do you get",
    "start": "444800",
    "end": "450080"
  },
  {
    "text": "started i mean i mean you you have web assembly and then you have a runtime and you want",
    "start": "450080",
    "end": "456160"
  },
  {
    "text": "to be able to run the the bytecode",
    "start": "456160",
    "end": "461599"
  },
  {
    "text": "with the runtime right and how would you get started with the w sec",
    "start": "461599",
    "end": "468960"
  },
  {
    "text": "sure so there's a couple of tutorials on the wask.dev website",
    "start": "471120",
    "end": "478479"
  },
  {
    "text": "that walk you through the process of getting started but the the basic idea is",
    "start": "478479",
    "end": "485919"
  },
  {
    "text": "that webassembly on its own is a pretty basic format you can only pass and receive",
    "start": "485919",
    "end": "492879"
  },
  {
    "text": "numeric arguments and return values so to do anything more interesting than",
    "start": "492879",
    "end": "499680"
  },
  {
    "text": "that you've got to put a layer on top of the core webassembly spec and uh for us",
    "start": "499680",
    "end": "506400"
  },
  {
    "text": "that layer is a a webassembly rpc standard called wapc uh i'll put the",
    "start": "506400",
    "end": "513360"
  },
  {
    "text": "wapc link in the in the slack channel as well",
    "start": "513360",
    "end": "521839"
  },
  {
    "text": "and so that basically that one puts a wrapper around basic webassembly",
    "start": "525120",
    "end": "531519"
  },
  {
    "text": "function calls that let you send and receive arbitrary binary",
    "start": "531519",
    "end": "539120"
  },
  {
    "text": "payloads so it doesn't really care what the contents of those",
    "start": "539120",
    "end": "544399"
  },
  {
    "text": "those binaries are so they can mean whatever you want them to mean as long as the",
    "start": "544399",
    "end": "550240"
  },
  {
    "text": "webassembly module and the runtime agree on that meaning and so",
    "start": "550240",
    "end": "556640"
  },
  {
    "text": "above the wapc stuff is where wasc sits and wasc adds the",
    "start": "556640",
    "end": "563680"
  },
  {
    "text": "the cloud native runtime aspect and the the actor model aspect to the",
    "start": "563680",
    "end": "570000"
  },
  {
    "text": "webassembly stuff and so the tutorial that's out on the website",
    "start": "570000",
    "end": "575920"
  },
  {
    "text": "the first thing that it has you do is you can make an actor",
    "start": "575920",
    "end": "580959"
  },
  {
    "text": "that responds to http requests uh with you know the the typical json",
    "start": "580959",
    "end": "588160"
  },
  {
    "text": "uh hello world and what's unique about wasc in in how that works",
    "start": "588160",
    "end": "595600"
  },
  {
    "text": "is unlike uh the experience of creating a microservice in",
    "start": "595600",
    "end": "601920"
  },
  {
    "text": "go or c-sharp or any of the other languages that i might use",
    "start": "601920",
    "end": "607120"
  },
  {
    "text": "for for my cloud-native type services",
    "start": "607120",
    "end": "612320"
  },
  {
    "text": "in wasc the the creation of an http server endpoint is done by what's called",
    "start": "612320",
    "end": "619600"
  },
  {
    "text": "a capability provider it isn't part of the actor code that you write",
    "start": "619600",
    "end": "625120"
  },
  {
    "text": "all of your business logic is decoupled from all of the things that you would",
    "start": "625120",
    "end": "630880"
  },
  {
    "text": "think of as cloud native capabilities so you don't start your own http endpoints",
    "start": "630880",
    "end": "636240"
  },
  {
    "text": "you don't have to choose a library dependency when you want to talk",
    "start": "636240",
    "end": "643279"
  },
  {
    "text": "to a database you don't have to choose a library dependency when you want to talk to a",
    "start": "643279",
    "end": "648560"
  },
  {
    "text": "blob store all of those are abstractions and the providers that satisfy those for",
    "start": "648560",
    "end": "655519"
  },
  {
    "text": "you are bound uh at runtime and so you can choose",
    "start": "655519",
    "end": "662320"
  },
  {
    "text": "you know you you compile your um your your hello world actor to",
    "start": "662320",
    "end": "669440"
  },
  {
    "text": "to return a adjacent payload but how it returns that payload is not it is",
    "start": "669440",
    "end": "675200"
  },
  {
    "text": "not your concern so at runtime you can switch from maybe a lightweight web server when",
    "start": "675200",
    "end": "681760"
  },
  {
    "text": "you're in development and testing to a super high uh throughput multi-threaded",
    "start": "681760",
    "end": "690240"
  },
  {
    "text": "beast of a web server in production it's all up to you but our opinion is that you shouldn't have",
    "start": "690240",
    "end": "696800"
  },
  {
    "text": "to recompile and redeploy your code in order to scale it uh so got it",
    "start": "696800",
    "end": "704480"
  },
  {
    "text": "so there's a at run time you can change the components uh depending on",
    "start": "705200",
    "end": "710800"
  },
  {
    "text": "you know how you want to run your whatever you're trying to run like then also you can add on some modules",
    "start": "710800",
    "end": "719279"
  },
  {
    "text": "for example like if you want to connect to a database right so that will be an additional module but",
    "start": "719279",
    "end": "724560"
  },
  {
    "text": "that can be added also around time is that is that accurate",
    "start": "724560",
    "end": "730880"
  },
  {
    "text": "yep yeah that's exactly it um so let me see i'm trying to do you have",
    "start": "730880",
    "end": "738160"
  },
  {
    "text": "a higher level overview of um kind of how this fits in compared to",
    "start": "738160",
    "end": "743200"
  },
  {
    "text": "like other kind of normal container runtime i saw it mentioned like container lists because i know there's some there's like",
    "start": "743200",
    "end": "750000"
  },
  {
    "text": "the wazi stuff where you could basically run wasm almost like a normal container but i was kind of curious",
    "start": "750000",
    "end": "756560"
  },
  {
    "text": "um it sounds like this is almost an alternative to that but i was just curious how the flow is if you have any diagrams or",
    "start": "756560",
    "end": "762959"
  },
  {
    "text": "something that kind of shows how the request flows there yeah so i've got some diagrams uh",
    "start": "762959",
    "end": "768959"
  },
  {
    "text": "there's a couple in that you can see in the slides and in the videos that are up on that youtube",
    "start": "768959",
    "end": "774720"
  },
  {
    "text": "uh playlist uh i actually had a bunch of slides that i was going to walk through today uh but they uh",
    "start": "774720",
    "end": "783279"
  },
  {
    "text": "they're actually on my my company machine and i can't see more of a decent way to get there",
    "start": "783279",
    "end": "789279"
  },
  {
    "text": "i'll come behind that firewall um but and overall",
    "start": "789279",
    "end": "796160"
  },
  {
    "text": "where this sits is you know we started off",
    "start": "796160",
    "end": "801360"
  },
  {
    "text": "uh with our cloud applications building stuff that runs on on",
    "start": "801360",
    "end": "807600"
  },
  {
    "text": "you know on bare metal and data centers and then we moved from bare metal metal and data centers to virtual",
    "start": "807600",
    "end": "814639"
  },
  {
    "text": "machines but the virtual machines that we built were still kind of",
    "start": "814639",
    "end": "820240"
  },
  {
    "text": "bespoke and customized to a particular application i remember",
    "start": "820240",
    "end": "826880"
  },
  {
    "text": "some really ugly deployment days when we had uh individuals or even entire teams in",
    "start": "827600",
    "end": "834240"
  },
  {
    "text": "charge of uh essentially stamping out these virtual machines when we needed to do a deployment and so",
    "start": "834240",
    "end": "841839"
  },
  {
    "text": "that's where how we ended up with containers and so now we deploy our docker images to",
    "start": "841839",
    "end": "848160"
  },
  {
    "text": "uh kubernetes or nomad or you know any uh any other uh container",
    "start": "848160",
    "end": "854839"
  },
  {
    "text": "runtime and then what i think is the next",
    "start": "854839",
    "end": "860720"
  },
  {
    "text": "evolution of that is not deploying containers but",
    "start": "860720",
    "end": "866000"
  },
  {
    "text": "deploying webassembly modules and",
    "start": "866000",
    "end": "870320"
  },
  {
    "text": "with a webassembly module it's smaller it's faster it's more",
    "start": "871120",
    "end": "876399"
  },
  {
    "text": "secure than regular containers the only difference is that webassembly modules can't do on",
    "start": "876399",
    "end": "883680"
  },
  {
    "text": "their own what your software running in a container can do so how do you give a webassembly module",
    "start": "883680",
    "end": "891680"
  },
  {
    "text": "the capability to do things in the cloud and that's where the last runtime comes in",
    "start": "891680",
    "end": "897040"
  },
  {
    "text": "it's basically a matchmaker between a webassembly module that has a",
    "start": "897040",
    "end": "902320"
  },
  {
    "text": "declarative set of uses for capabilities and these capability",
    "start": "902320",
    "end": "907760"
  },
  {
    "text": "providers it binds them at runtime and then allows them to communicate",
    "start": "907760",
    "end": "913839"
  },
  {
    "text": "and so the one of the design goals behind wasc is",
    "start": "915440",
    "end": "921760"
  },
  {
    "text": "that you can run it anywhere and so i can run i can put this runtime",
    "start": "921760",
    "end": "926800"
  },
  {
    "text": "on a raspberry pi i can put it in a cloud i can put it on my laptop",
    "start": "926800",
    "end": "933040"
  },
  {
    "text": "and the webassembly modules which are my actors and my business logic those don't",
    "start": "933040",
    "end": "938959"
  },
  {
    "text": "have to be recompiled uh at all because the webassembly format",
    "start": "938959",
    "end": "944240"
  },
  {
    "text": "is is portable yeah is it did it answer your question",
    "start": "944240",
    "end": "951040"
  },
  {
    "text": "or just did it um i think for me it it's still a little abstract in terms of like",
    "start": "951040",
    "end": "957360"
  },
  {
    "text": "how the deployment looks how the how the kind of request architecture goes through saying like a kubernetes",
    "start": "957360",
    "end": "962880"
  },
  {
    "text": "environment maybe i'm just thinking about it from like too conventional of an approach",
    "start": "962880",
    "end": "968720"
  },
  {
    "text": "but i was comparing it with wazi because the wazi approach is like using web assembly but it's basically",
    "start": "968720",
    "end": "974079"
  },
  {
    "text": "building you could use it to build containers that are kind of like containers today it's just",
    "start": "974079",
    "end": "980079"
  },
  {
    "text": "flawsome it's just a different architecture yeah so the the difference between wasc and wazi is",
    "start": "980079",
    "end": "987040"
  },
  {
    "text": "uh with the yz module you're basically poking holes in the webassembly module through these",
    "start": "987040",
    "end": "994320"
  },
  {
    "text": "imports that are satisfied by a runtime that knows about the wow spec",
    "start": "994320",
    "end": "1000560"
  },
  {
    "text": "and so there's a couple of them wasm time is one wisem three will do it uh wasmer will do",
    "start": "1000560",
    "end": "1007440"
  },
  {
    "text": "it most of them will uh allow you to",
    "start": "1007440",
    "end": "1012560"
  },
  {
    "text": "to choose to expose the wazi functions to a module and what that really does is give it uh",
    "start": "1012560",
    "end": "1019680"
  },
  {
    "text": "access to the file system and uh some other uh basic capabilities",
    "start": "1019680",
    "end": "1027438"
  },
  {
    "text": "and you can you can make that it's still it's still a little bit more",
    "start": "1027439",
    "end": "1034400"
  },
  {
    "text": "secure than if you were just running that stuff on a base operating system or in a raw container",
    "start": "1034400",
    "end": "1040000"
  },
  {
    "text": "but the our the opinion at the wasc level is that actors in being pure business",
    "start": "1040000",
    "end": "1048240"
  },
  {
    "text": "logic shouldn't have access to the file system they shouldn't have access to an environment they shouldn't have",
    "start": "1048240",
    "end": "1054160"
  },
  {
    "text": "access to anything they don't have permissions to have access to and so we have a",
    "start": "1054160",
    "end": "1061440"
  },
  {
    "text": "security system in place that secures capabilities at a high level so",
    "start": "1061440",
    "end": "1068400"
  },
  {
    "text": "the capabilities in wazi are very much at the kernel level can you",
    "start": "1068400",
    "end": "1074720"
  },
  {
    "text": "write to this file descriptor yes or no the capabilities at the wasp level are",
    "start": "1074720",
    "end": "1082720"
  },
  {
    "text": "more at the cloud service level so can you communicate with a blob store",
    "start": "1082720",
    "end": "1088720"
  },
  {
    "text": "can you communicate with a key value store yes or no and uh i'm gonna see if i can",
    "start": "1088720",
    "end": "1094160"
  },
  {
    "text": "share my screen and show uh some of that um",
    "start": "1094160",
    "end": "1100960"
  },
  {
    "text": "okay yeah that that makes a little more sense it's pretty interesting yeah um for for some reason uh my terminal",
    "start": "1100960",
    "end": "1107679"
  },
  {
    "text": "window does not show up as an option for uh something that i can share in this",
    "start": "1107679",
    "end": "1113280"
  },
  {
    "text": "meeting um not really you're doing uh",
    "start": "1113280",
    "end": "1118799"
  },
  {
    "text": "are you in your mac or something or i i don't own a mac uh this is uh linux",
    "start": "1118799",
    "end": "1126240"
  },
  {
    "text": "uh the next zoom will be different yes so i can share some code and then maybe",
    "start": "1126480",
    "end": "1132480"
  },
  {
    "text": "that will be maybe that'll be a little bit less uh abstract",
    "start": "1132480",
    "end": "1138640"
  },
  {
    "text": "um so [Music]",
    "start": "1139440",
    "end": "1144720"
  },
  {
    "text": "is everybody looking at um some brush code uh okay so you can see",
    "start": "1144720",
    "end": "1151760"
  },
  {
    "text": "that then okay so what we're looking at is",
    "start": "1151760",
    "end": "1157120"
  },
  {
    "text": "the code for an actor written in rust uh but it's using the last runtime",
    "start": "1157120",
    "end": "1165280"
  },
  {
    "text": "and the the key pieces here is that actors are are reactive they're",
    "start": "1165280",
    "end": "1172160"
  },
  {
    "text": "very much like think of them like lambdas where uh they get an event or a message",
    "start": "1172160",
    "end": "1178400"
  },
  {
    "text": "and in response to that they execute some logic and then they return what's different",
    "start": "1178400",
    "end": "1184080"
  },
  {
    "text": "about an actor so this is this is the list of messages that it handles in this case it handles something called an adsb",
    "start": "1184080",
    "end": "1191120"
  },
  {
    "text": "message which there's a capability provider that i have running on a raspberry pi",
    "start": "1191120",
    "end": "1197280"
  },
  {
    "text": "um i can't show it to you because the camera is not mobile but it's it's over there ish",
    "start": "1197280",
    "end": "1204840"
  },
  {
    "text": "um uh the capability that that i have running on that pie is",
    "start": "1204840",
    "end": "1209919"
  },
  {
    "text": "uh re is pulling um radio signals off of an antenna",
    "start": "1209919",
    "end": "1215520"
  },
  {
    "text": "that uh contain a list of uh planes that are flying overhead within about a 100",
    "start": "1215520",
    "end": "1220960"
  },
  {
    "text": "kilometer radius and so every time i get one of those messages that provider",
    "start": "1220960",
    "end": "1226960"
  },
  {
    "text": "uh decodes it and if i had access to the terminal i could show you what those those raw messages look like",
    "start": "1226960",
    "end": "1234720"
  },
  {
    "text": "it decodes it and then sends it to this actor so in response this actor",
    "start": "1234720",
    "end": "1242480"
  },
  {
    "text": "loads up the the state of an aircraft applies the new state uh and then uh",
    "start": "1242799",
    "end": "1249600"
  },
  {
    "text": "puts it back in the key value store and so if you look at this load state function here",
    "start": "1249600",
    "end": "1255600"
  },
  {
    "text": "this this call right here does a key value get now",
    "start": "1255600",
    "end": "1263280"
  },
  {
    "text": "obviously the the webassembly module itself doesn't have access to a key value store",
    "start": "1263280",
    "end": "1268720"
  },
  {
    "text": "but it can tell the host uh please fulfill this key value get request on my behalf and then if the",
    "start": "1268720",
    "end": "1276960"
  },
  {
    "text": "actor has the secure privilege to do so it'll then go and talk to it",
    "start": "1276960",
    "end": "1283360"
  },
  {
    "text": "and what's in what's important about this function call is that it's an abstraction it's it's a key value get",
    "start": "1283360",
    "end": "1290159"
  },
  {
    "text": "but you don't see what you typically would see in a microservice in go or or another",
    "start": "1290159",
    "end": "1296240"
  },
  {
    "text": "language even in rust is you would see uh creating a client connection to",
    "start": "1296240",
    "end": "1303600"
  },
  {
    "text": "redis and then initializing it with some connection string and some security information you know the username and",
    "start": "1303600",
    "end": "1310159"
  },
  {
    "text": "the password and the hosts none of that is there all you're doing is declaring your intent to fetch your",
    "start": "1310159",
    "end": "1316400"
  },
  {
    "text": "data at a specific key from a key value store and",
    "start": "1316400",
    "end": "1321600"
  },
  {
    "text": "what that allows you to do is first and foremost it allows you to test",
    "start": "1321600",
    "end": "1326640"
  },
  {
    "text": "this thing in isolation because you can talk to any key value store including an in-memory one",
    "start": "1326640",
    "end": "1332799"
  },
  {
    "text": "without ever recompiling your webassembly module but in in production what it allows you",
    "start": "1332799",
    "end": "1338960"
  },
  {
    "text": "to do is things like switch your capability provider from redis to cassandra to console",
    "start": "1338960",
    "end": "1347039"
  },
  {
    "text": "or memcached uh without ever redeploying even redeploying your your",
    "start": "1347039",
    "end": "1352400"
  },
  {
    "text": "module this module can stay running live in production and have",
    "start": "1352400",
    "end": "1357760"
  },
  {
    "text": "its capability providers swapped out without ever even dropping a message so in this case it's a runtime that has",
    "start": "1357760",
    "end": "1364480"
  },
  {
    "text": "all the drivers for that satisfy all these interfaces or yeah capability providers are plugins so",
    "start": "1364480",
    "end": "1372000"
  },
  {
    "text": "you can write one for anything that is a capability in my case i've i've got a capability",
    "start": "1372000",
    "end": "1378159"
  },
  {
    "text": "that decodes the adsb messages that come in off of a specific radio frequency but you know",
    "start": "1378159",
    "end": "1385280"
  },
  {
    "text": "we've got stock capability providers for uh s3 for uh graph databases",
    "start": "1385280",
    "end": "1393120"
  },
  {
    "text": "for i've got one for a telnet server there's http server uh http client uh you know all of the",
    "start": "1393120",
    "end": "1400320"
  },
  {
    "text": "things that you can think of that your application or your your business logic might need in the cloud",
    "start": "1400320",
    "end": "1406559"
  },
  {
    "text": "but you're no longer carrying around all of that boilerplate",
    "start": "1406559",
    "end": "1411679"
  },
  {
    "text": "as baggage on every single thing that you write the goal is that you get to write this",
    "start": "1411679",
    "end": "1418559"
  },
  {
    "text": "pure intent of this is what i want my logic to do and you don't care particularly",
    "start": "1418559",
    "end": "1427679"
  },
  {
    "text": "how that logic is fulfilled but you can control how it gets fulfilled at",
    "start": "1427679",
    "end": "1433600"
  },
  {
    "text": "runtime by how you configure all of the providers and what's the interface between the",
    "start": "1433600",
    "end": "1441279"
  },
  {
    "text": "business logic here and the actual capability implementation",
    "start": "1441279",
    "end": "1446320"
  },
  {
    "text": "[Music] so at a low level what happens is",
    "start": "1447210",
    "end": "1452400"
  },
  {
    "text": "when i call this key value default.get it sends a binary payload up to the host",
    "start": "1452400",
    "end": "1460960"
  },
  {
    "text": "that contains essentially an rpc invocation the host figures out what the target of",
    "start": "1460960",
    "end": "1467200"
  },
  {
    "text": "that invocation is and in my case it's a key value store",
    "start": "1467200",
    "end": "1472320"
  },
  {
    "text": "the host took care of binding my actor to uh in this case uh the redis key value",
    "start": "1472320",
    "end": "1479039"
  },
  {
    "text": "store and so the host will then forward that payload to the redis key value store capability",
    "start": "1479039",
    "end": "1485600"
  },
  {
    "text": "provider the provider handles the request gets the gets the response and then the host",
    "start": "1485600",
    "end": "1492960"
  },
  {
    "text": "delivers the response back to the webassembly module that same interaction also works in",
    "start": "1492960",
    "end": "1498559"
  },
  {
    "text": "reverse where uh you know i have a net a message broker provider",
    "start": "1498559",
    "end": "1504240"
  },
  {
    "text": "for nats and that's and then in that case you can create a subscription or",
    "start": "1504240",
    "end": "1511039"
  },
  {
    "text": "multiple subscriptions and every time you get that provider gets a nets message it can",
    "start": "1511039",
    "end": "1516960"
  },
  {
    "text": "then deliver it to uh the appropriate actor and so the the host runtime is basically",
    "start": "1516960",
    "end": "1523679"
  },
  {
    "text": "a uh dispatcher between uh these tiny actor modules which",
    "start": "1523679",
    "end": "1529120"
  },
  {
    "text": "contain as close to raw business logic uh as possible",
    "start": "1529120",
    "end": "1535519"
  },
  {
    "text": "and the capability providers that are satisfying the non-functional",
    "start": "1535600",
    "end": "1540840"
  },
  {
    "text": "requirements is this using any like are these functions",
    "start": "1540840",
    "end": "1545919"
  },
  {
    "text": "uh capabilities exposes as functions to to wasm or is there any sort of like a",
    "start": "1545919",
    "end": "1552559"
  },
  {
    "text": "remote rpc that happens here yeah so this is essentially a remote rpc",
    "start": "1552559",
    "end": "1557600"
  },
  {
    "text": "um it's our the there's a at a low level there is a standard",
    "start": "1557600",
    "end": "1565600"
  },
  {
    "text": "called wapc that allows us to send and receive binary payloads between the webassembly",
    "start": "1565600",
    "end": "1573840"
  },
  {
    "text": "module and the host and then wasc adds meaning to those payloads on top things like the",
    "start": "1573840",
    "end": "1581840"
  },
  {
    "text": "key value stores and blob stores and all of that those are basically just",
    "start": "1581840",
    "end": "1588480"
  },
  {
    "text": "a set of data types defined in something that can be serialized in and",
    "start": "1588559",
    "end": "1594159"
  },
  {
    "text": "out of message pack and uh so the host is basically just sending these message pack",
    "start": "1594159",
    "end": "1600480"
  },
  {
    "text": "invocation and invocation response payloads around and um in the demo that",
    "start": "1600480",
    "end": "1608720"
  },
  {
    "text": "i might be able to show if i can figure out how to run a terminal session",
    "start": "1608720",
    "end": "1615120"
  },
  {
    "text": "the way the host runtime works is it doesn't care where any of these things are so i can run an",
    "start": "1615679",
    "end": "1621840"
  },
  {
    "text": "actor on this laptop i can run the capability provider over there-ish on my raspberry pi",
    "start": "1621840",
    "end": "1630880"
  },
  {
    "text": "i can run other providers in amazon other ones in google other ones",
    "start": "1630880",
    "end": "1637520"
  },
  {
    "text": "in azure and through the message bus that the",
    "start": "1637520",
    "end": "1642880"
  },
  {
    "text": "uh that this runtime uses it treats everything like it's a single flat topology",
    "start": "1642880",
    "end": "1648559"
  },
  {
    "text": "it doesn't matter whether you're scheduling it in kubernetes or not uh he just treats it like one flat",
    "start": "1648559",
    "end": "1654240"
  },
  {
    "text": "topology and so these actors can communicate with providers um without need for service discovery",
    "start": "1654240",
    "end": "1661440"
  },
  {
    "text": "and um in a location independent",
    "start": "1661440",
    "end": "1666158"
  },
  {
    "text": "manner this is very interesting uh so thank you",
    "start": "1666840",
    "end": "1673600"
  },
  {
    "text": "for the all the explanations so um another question so how do you handle errors like if you um",
    "start": "1673600",
    "end": "1681440"
  },
  {
    "text": "um one of your actors or not it's not responding or i mean you have that message boss",
    "start": "1681440",
    "end": "1687039"
  },
  {
    "text": "right but then underneath you need to have networking right between right so",
    "start": "1687039",
    "end": "1692559"
  },
  {
    "text": "if you have some errors to you you have a error handling there's a there's a number of different",
    "start": "1692559",
    "end": "1698559"
  },
  {
    "text": "levels of error handling so if you look at this function here",
    "start": "1698559",
    "end": "1705120"
  },
  {
    "text": "in rust there's a result type and if the result type contains okay and",
    "start": "1705120",
    "end": "1711039"
  },
  {
    "text": "then a payload we know everything succeeded if it contains the error enum and then a payload we know there was an",
    "start": "1711039",
    "end": "1717679"
  },
  {
    "text": "error and so as part of that protocol between actors and the runtime host it knows how",
    "start": "1717679",
    "end": "1725679"
  },
  {
    "text": "to uh store an arbitrary error payload on behalf of",
    "start": "1725679",
    "end": "1731679"
  },
  {
    "text": "the actor and so if the actor fails at any point in processing we can",
    "start": "1731679",
    "end": "1740320"
  },
  {
    "text": "set that value in the host and so the host knows when the actor failed the reverse is also true the actor will",
    "start": "1740320",
    "end": "1747039"
  },
  {
    "text": "know when the host fails so these little question marks here in rust mean uh you know attempt to",
    "start": "1747039",
    "end": "1755200"
  },
  {
    "text": "uh get the result value of that uh execution but if it fails uh abort and then",
    "start": "1755200",
    "end": "1762399"
  },
  {
    "text": "return an error in response um and did you do you have a retry",
    "start": "1762399",
    "end": "1769679"
  },
  {
    "text": "mechanism too there is a retry mechanism but it won't",
    "start": "1769679",
    "end": "1776399"
  },
  {
    "text": "retry when the errors are explicit so if the host calls the webassembly module",
    "start": "1776399",
    "end": "1782159"
  },
  {
    "text": "uh locally and the webassembly module returns an error it will assume that",
    "start": "1782159",
    "end": "1788159"
  },
  {
    "text": "that is a legitimate error and people pass that error on to the consumer of that",
    "start": "1788159",
    "end": "1794880"
  },
  {
    "text": "there's an automatic health check system in the host runtime that invokes the health function",
    "start": "1794880",
    "end": "1801440"
  },
  {
    "text": "on all of these actors and if the health function doesn't come",
    "start": "1801440",
    "end": "1806840"
  },
  {
    "text": "back or it returns an error uh or it returns explicitly an error",
    "start": "1806840",
    "end": "1811919"
  },
  {
    "text": "that you can provide on your own then uh the host runtime will know that your actor is unhealthy",
    "start": "1811919",
    "end": "1818080"
  },
  {
    "text": "and uh there's a there's a an issue open to finish",
    "start": "1818080",
    "end": "1824480"
  },
  {
    "text": "the implementation of this but basically what will happen is the host runtime will bounce your",
    "start": "1824480",
    "end": "1830159"
  },
  {
    "text": "actor it will uh dispose of it and then reload it",
    "start": "1830159",
    "end": "1836640"
  },
  {
    "text": "got it and that'll happen regardless of whether your host runtime is running uh in or out of kubernetes microsoft has",
    "start": "1836640",
    "end": "1844159"
  },
  {
    "text": "a project called crosslit that is essentially a an alternate version of",
    "start": "1844159",
    "end": "1852159"
  },
  {
    "text": "cubelet that runs on kubernetes nodes that allows you to deploy webassembly modules uh straight to a",
    "start": "1852159",
    "end": "1858720"
  },
  {
    "text": "node without the use of a container and you can choose either a wazi",
    "start": "1858720",
    "end": "1864240"
  },
  {
    "text": "module or a wask actor to deploy straight to that node",
    "start": "1864240",
    "end": "1871440"
  },
  {
    "text": "there are other there's other error checking like i said before",
    "start": "1872399",
    "end": "1878080"
  },
  {
    "text": "when you're running this in what we call uh a lattice which is just a cluster of",
    "start": "1878080",
    "end": "1884559"
  },
  {
    "text": "these host runtimes when you're running it in a lattice we will detect things like rpc timeouts",
    "start": "1884559",
    "end": "1892640"
  },
  {
    "text": "and do rpc retries and so on so if we can't communicate with the other host then that is treated",
    "start": "1892640",
    "end": "1900399"
  },
  {
    "text": "as a different type of failure than if we did communicate with the host and the host did invoke the web assembly",
    "start": "1900399",
    "end": "1906000"
  },
  {
    "text": "call and the host got an explicit error in response",
    "start": "1906000",
    "end": "1910640"
  },
  {
    "text": "did you cover what uh which protocol is the highest level protocol is this grpc",
    "start": "1914000",
    "end": "1919120"
  },
  {
    "text": "i'm i came in a little late how are you communicating um i'm the highest level of the network",
    "start": "1919120",
    "end": "1926080"
  },
  {
    "text": "i mean it's tcp but what's is that okay i'm i'm",
    "start": "1926080",
    "end": "1931679"
  },
  {
    "text": "barely able to hear you i",
    "start": "1931679",
    "end": "1934960"
  },
  {
    "text": "oh okay so the protocol um it is not uh grpc or anything else",
    "start": "1936880",
    "end": "1943760"
  },
  {
    "text": "like that it's um below ask is an rpc protocol designed",
    "start": "1943760",
    "end": "1950240"
  },
  {
    "text": "specifically for web assembly called wapc and",
    "start": "1950240",
    "end": "1955679"
  },
  {
    "text": "without getting too far into the weeds one of the problems that i think exists with some web",
    "start": "1955679",
    "end": "1963360"
  },
  {
    "text": "assembly runtimes right now is they're either very very javascript",
    "start": "1963360",
    "end": "1968480"
  },
  {
    "text": "specific so they assume the existence of a browser as your host or they assume that there is javascript",
    "start": "1968480",
    "end": "1976720"
  },
  {
    "text": "glue code um like bind gen or things like m scriptin uh earlier",
    "start": "1976720",
    "end": "1984399"
  },
  {
    "text": "things like asm.js where long story short the host could",
    "start": "1984399",
    "end": "1990720"
  },
  {
    "text": "allocate long-lived pointers uh into the webassembly module or the",
    "start": "1990720",
    "end": "1997679"
  },
  {
    "text": "reverse where the webassembly module could tell the host to allocate longleaf pointers and that made our pc style calls between",
    "start": "1997679",
    "end": "2006480"
  },
  {
    "text": "the host and the guest stateful which meant that if a if a webassembly module died",
    "start": "2006480",
    "end": "2012880"
  },
  {
    "text": "after it allocated but did not free then you could have memory leaks you could",
    "start": "2012880",
    "end": "2018080"
  },
  {
    "text": "have inconsistent state and all sorts of uh terrible problems that we know",
    "start": "2018080",
    "end": "2024640"
  },
  {
    "text": "uh we don't want to have when building state stateless services in the cloud even for things",
    "start": "2024640",
    "end": "2029919"
  },
  {
    "text": "like lambdas and so wapc is specifically designed to not only be allocation agnostic so it",
    "start": "2029919",
    "end": "2038240"
  },
  {
    "text": "doesn't it doesn't rely on the existence or non-existence of a garbage collector",
    "start": "2038240",
    "end": "2043760"
  },
  {
    "text": "inside the webassembly module but it also doesn't allocate anything it",
    "start": "2043760",
    "end": "2048878"
  },
  {
    "text": "is unaware of how either side of that conversation allocates memory and so",
    "start": "2048879",
    "end": "2055520"
  },
  {
    "text": "what that means is that between any two function calls uh which",
    "start": "2055520",
    "end": "2062240"
  },
  {
    "text": "in the host runtime are uh managed in a in a durable queue so between any two of",
    "start": "2062240",
    "end": "2068480"
  },
  {
    "text": "those function calls the webassembly module can be destroyed or its memory can be wiped",
    "start": "2068480",
    "end": "2074560"
  },
  {
    "text": "and it will have no impact on either the module or the host that allows me to take an actor that's",
    "start": "2074560",
    "end": "2080960"
  },
  {
    "text": "running on a host in one node start up a second copy of that actor on another node",
    "start": "2080960",
    "end": "2086960"
  },
  {
    "text": "continue to distribute function calls between the two take one down and bring another one up",
    "start": "2086960",
    "end": "2092320"
  },
  {
    "text": "all without ever having to worry about whether i left some sort of dangling pointer somewhere so grpc",
    "start": "2092320",
    "end": "2100240"
  },
  {
    "text": "is an excellent point-to-point protocol but um in trying to adapt it to",
    "start": "2100240",
    "end": "2107280"
  },
  {
    "text": "stateless distributed uh load-balanced function calls across webassembly",
    "start": "2107280",
    "end": "2112400"
  },
  {
    "text": "modules uh just wasn't quite what we were looking for okay thanks",
    "start": "2112400",
    "end": "2119119"
  },
  {
    "text": "i'm going to try one more time and see if i can share my my terminal",
    "start": "2123280",
    "end": "2131440"
  },
  {
    "text": "see if i can you mentioned some of these other projects which kind of emulate a cubelet",
    "start": "2131440",
    "end": "2138320"
  },
  {
    "text": "for running these is there something similar for for wasc",
    "start": "2138320",
    "end": "2143520"
  },
  {
    "text": "that connect is like a cubelet in the kubernetes environment yes there's a very specific one called crustlet",
    "start": "2143520",
    "end": "2148800"
  },
  {
    "text": "and you can find it in microsoft has a an organization called",
    "start": "2148800",
    "end": "2154800"
  },
  {
    "text": "deus labs you can find that on on github i'll i'll post the link in the slack channel as",
    "start": "2154800",
    "end": "2160880"
  },
  {
    "text": "well but that's precisely what that does is if you run crosslink instead of cubelet you can choose to",
    "start": "2160880",
    "end": "2167680"
  },
  {
    "text": "deploy either uh wazzy modules directly to a kubernetes node",
    "start": "2167680",
    "end": "2173680"
  },
  {
    "text": "with the kubernetes deployment manifest or you can choose to deploy a wask actor directly to a kubernetes",
    "start": "2173680",
    "end": "2182079"
  },
  {
    "text": "node and like i said earlier the the way wasc form self forms these networking",
    "start": "2182079",
    "end": "2189839"
  },
  {
    "text": "clusters is that some of your hosts could be running on",
    "start": "2189839",
    "end": "2195119"
  },
  {
    "text": "uh in in crosslit and some of them can be running uh in a",
    "start": "2195119",
    "end": "2201280"
  },
  {
    "text": "virtual machine and some of them can be running on raspberry pi's or even smaller uh constrained devices and",
    "start": "2201280",
    "end": "2209760"
  },
  {
    "text": "because wesk uses nats as its message bus uh all of those things are able to",
    "start": "2209760",
    "end": "2217119"
  },
  {
    "text": "discover each other as though it was a single flat topology with no need for service discovery",
    "start": "2217119",
    "end": "2224078"
  },
  {
    "text": "and one of the things that nasa lets us do is with leaf nodes we can actually control",
    "start": "2224560",
    "end": "2232560"
  },
  {
    "text": "when the traffic is localized versus when it goes uh when it you know leaves a cluster or",
    "start": "2232560",
    "end": "2238240"
  },
  {
    "text": "leaves a kubernetes cluster or hops across clouds and so on",
    "start": "2238240",
    "end": "2245280"
  },
  {
    "text": "let me see if i can find i am still completely unable to share",
    "start": "2246160",
    "end": "2252400"
  },
  {
    "text": "that terminal which is um oh here we go",
    "start": "2252400",
    "end": "2258880"
  },
  {
    "text": "uh can you see the terminal window that i've got",
    "start": "2262160",
    "end": "2266960"
  },
  {
    "text": "yep so this is uh right now you should just see an empty prompt right",
    "start": "2268839",
    "end": "2275599"
  },
  {
    "text": "yep that's what we see okay",
    "start": "2275599",
    "end": "2278800"
  },
  {
    "text": "so i have this demo where um one of the things i wanted to",
    "start": "2281599",
    "end": "2288800"
  },
  {
    "text": "try and do with wasc is to make it generally much easier and much simpler to build",
    "start": "2288800",
    "end": "2294560"
  },
  {
    "text": "distributed applications but also to enable a the possibility of",
    "start": "2294560",
    "end": "2300960"
  },
  {
    "text": "thinking about distributed applications in a new way so when we build microservices and we",
    "start": "2300960",
    "end": "2306400"
  },
  {
    "text": "deploy them to the cloud we just sort of assume that we're going to build this walled",
    "start": "2306400",
    "end": "2312000"
  },
  {
    "text": "self-contained structure whether it's a kubernetes cluster or not uh that houses all of our",
    "start": "2312000",
    "end": "2318560"
  },
  {
    "text": "compute and that's what we think of as a distributed application but",
    "start": "2318560",
    "end": "2325040"
  },
  {
    "text": "wasc has a more broad view of what a distributed application is and so",
    "start": "2325040",
    "end": "2330160"
  },
  {
    "text": "we can run all of these hosts anywhere we want to and they will stitch",
    "start": "2330160",
    "end": "2336240"
  },
  {
    "text": "themselves together into a larger distributed application and so this demo called wasm air",
    "start": "2336240",
    "end": "2344320"
  },
  {
    "text": "essentially builds a clone of the flightaware application i don't",
    "start": "2344320",
    "end": "2350079"
  },
  {
    "text": "know if anyone's familiar with it but with flightaware you can basically buy",
    "start": "2350079",
    "end": "2355119"
  },
  {
    "text": "these little ten dollar devices put an antenna on the outside of your house",
    "start": "2355119",
    "end": "2360320"
  },
  {
    "text": "and you'll pull radio data and you can see it locally but it also",
    "start": "2360320",
    "end": "2366240"
  },
  {
    "text": "sends it up to a cloud aggregation service so you can see",
    "start": "2366240",
    "end": "2371680"
  },
  {
    "text": "all of these flights in one aggregate pool and with this",
    "start": "2371680",
    "end": "2378800"
  },
  {
    "text": "application here we did the same thing but it took about four hours rather than you know however long it",
    "start": "2378800",
    "end": "2385119"
  },
  {
    "text": "would have taken to build the same thing using traditional microservices um",
    "start": "2385119",
    "end": "2391200"
  },
  {
    "text": "so there's a couple of components here that are actors i showed the code for",
    "start": "2391200",
    "end": "2400480"
  },
  {
    "text": "this thing called the adsb processor and adsb is just the acronym for the",
    "start": "2400480",
    "end": "2406560"
  },
  {
    "text": "type of radio signal that we have uh and i mentioned earlier that we've",
    "start": "2406560",
    "end": "2412319"
  },
  {
    "text": "got um a level of security that's embedded inside the webassembly modules",
    "start": "2412319",
    "end": "2417839"
  },
  {
    "text": "so one of the things that has burned me as a uh in a role of devops",
    "start": "2417839",
    "end": "2424480"
  },
  {
    "text": "in deploying docker containers is how to secure the applications that are running in",
    "start": "2424480",
    "end": "2429920"
  },
  {
    "text": "them uh in general they can do whatever whatever they feel like doing",
    "start": "2429920",
    "end": "2436640"
  },
  {
    "text": "and we can apply networking and security policies but the policies",
    "start": "2436640",
    "end": "2441839"
  },
  {
    "text": "are in environments they don't follow the docker image and so",
    "start": "2441839",
    "end": "2448400"
  },
  {
    "text": "if we make a mistake forget to redeploy something forget to resynchronize something it's super easy to accidentally let one",
    "start": "2448400",
    "end": "2455520"
  },
  {
    "text": "of those docker images fall through our policy enforcement uh with wasc these actors have their",
    "start": "2455520",
    "end": "2461760"
  },
  {
    "text": "security credentials uh directly embedded in the file so i",
    "start": "2461760",
    "end": "2467599"
  },
  {
    "text": "can take a look at the security information on one of these",
    "start": "2467599",
    "end": "2475359"
  },
  {
    "text": "on one of these actors and uh yeah i have to remember to use my own",
    "start": "2477920",
    "end": "2486240"
  },
  {
    "text": "syntax here so let me see if i can",
    "start": "2486240",
    "end": "2492560"
  },
  {
    "text": "there we go so can you see this pretty well or uh do i need to zoom in",
    "start": "2492560",
    "end": "2498480"
  },
  {
    "text": "more it's good okay good so what we have",
    "start": "2498480",
    "end": "2503680"
  },
  {
    "text": "embedded directly in this module which is um a little over a meg",
    "start": "2503680",
    "end": "2510400"
  },
  {
    "text": "by the way so instead of having this docker image where i have a runtime embedded in it",
    "start": "2510400",
    "end": "2517200"
  },
  {
    "text": "and i have all of my dependencies embedded in it you know that that um",
    "start": "2517200",
    "end": "2524560"
  },
  {
    "text": "that quote about uh saying that you know you own all of your dependencies is quite true because they all end up",
    "start": "2524560",
    "end": "2530960"
  },
  {
    "text": "even if you're building a static binary those things still end up in in your application",
    "start": "2530960",
    "end": "2536000"
  },
  {
    "text": "wasc actually doesn't have the dependencies in them so inside this module is",
    "start": "2536000",
    "end": "2543040"
  },
  {
    "text": "a uh cryptographically signed json web token and so in that token",
    "start": "2543040",
    "end": "2549599"
  },
  {
    "text": "i have a globally unique identifier for the module itself so anywhere this",
    "start": "2549599",
    "end": "2556800"
  },
  {
    "text": "module goes after it's been signed it will always have this identity i have the identity of the thing that",
    "start": "2556800",
    "end": "2563920"
  },
  {
    "text": "signed it so essentially the tokens issuer and i can have a chain of issuers as",
    "start": "2563920",
    "end": "2570800"
  },
  {
    "text": "long as i want to have so i can verify the prominence of this module but my security system can choose",
    "start": "2570800",
    "end": "2578800"
  },
  {
    "text": "whether or not i trust uh things that were issued by this account",
    "start": "2578800",
    "end": "2584480"
  },
  {
    "text": "i have things like expiration date when the token is valid but the most important thing here is",
    "start": "2584480",
    "end": "2589760"
  },
  {
    "text": "this list of capabilities this module is allowed to use a key",
    "start": "2589760",
    "end": "2595119"
  },
  {
    "text": "value store it's allowed to bind to a message broker it can do standard out logging and",
    "start": "2595119",
    "end": "2603200"
  },
  {
    "text": "it has access to a custom capability that is my radio receiver",
    "start": "2603200",
    "end": "2610640"
  },
  {
    "text": "or my my radio provider",
    "start": "2610640",
    "end": "2614720"
  },
  {
    "text": "so that's that module and i also have",
    "start": "2616000",
    "end": "2622318"
  },
  {
    "text": "i also have a restful service",
    "start": "2624000",
    "end": "2629280"
  },
  {
    "text": "uh what they call that thing and this restful service exposes the",
    "start": "2629280",
    "end": "2636079"
  },
  {
    "text": "aggregate flight data that my actor my processor actor has generated by",
    "start": "2636079",
    "end": "2641920"
  },
  {
    "text": "you know that that small amount of code and if i look at this one the code for",
    "start": "2641920",
    "end": "2649119"
  },
  {
    "text": "this is also remarkably small the only thing that we have here",
    "start": "2649119",
    "end": "2655359"
  },
  {
    "text": "is a declaration that we handle http requests the mandatory health",
    "start": "2655359",
    "end": "2661040"
  },
  {
    "text": "request and in response to handling this http request uh i can query the list of uh stations",
    "start": "2661040",
    "end": "2669839"
  },
  {
    "text": "so that's the list of uh people that are running",
    "start": "2669839",
    "end": "2675599"
  },
  {
    "text": "uh capability providers for that are attached to these radio",
    "start": "2675599",
    "end": "2680640"
  },
  {
    "text": "receivers and then i have the list of this uh aggregate list of all the aircraft in",
    "start": "2680640",
    "end": "2685920"
  },
  {
    "text": "the system and again the the actor was is responsible for pretty producing",
    "start": "2685920",
    "end": "2692640"
  },
  {
    "text": "that list so in this case all i have to do is query the cache and so this line here",
    "start": "2692640",
    "end": "2701040"
  },
  {
    "text": "gets the list of all aircraft in the system and this one gets the details for a",
    "start": "2701359",
    "end": "2706800"
  },
  {
    "text": "specific aircraft and again there's no code to create a redis connection",
    "start": "2706800",
    "end": "2712160"
  },
  {
    "text": "no code to create a cassandra connection just a declaration of what i want to do with",
    "start": "2712160",
    "end": "2717760"
  },
  {
    "text": "the abstract capabilities that i'm that my actor is allowed to access",
    "start": "2717760",
    "end": "2723839"
  },
  {
    "text": "uh i'm going to see if i can start some of these other services in another terminal window so that i can",
    "start": "2724319",
    "end": "2731680"
  },
  {
    "text": "run this demo hopefully this will all work without a massive explosion",
    "start": "2731680",
    "end": "2747040"
  },
  {
    "text": "so i'm going to start a west coast for the um",
    "start": "2747040",
    "end": "2753680"
  },
  {
    "text": "the processor which is the thing that that talks to or the the provider",
    "start": "2753680",
    "end": "2761200"
  },
  {
    "text": "and that's the thing that reads the radio signals and then once it's bound to an actor it'll",
    "start": "2761599",
    "end": "2767839"
  },
  {
    "text": "deliver the converted or decoded radio signal messages",
    "start": "2767839",
    "end": "2775040"
  },
  {
    "text": "all right so i have started one of those um just pretend like you can see a bunch of really interesting console output",
    "start": "2775040",
    "end": "2783359"
  },
  {
    "text": "and then i can start a",
    "start": "2785599",
    "end": "2790400"
  },
  {
    "text": "the processor in another terminal window",
    "start": "2794480",
    "end": "2800319"
  },
  {
    "text": "and again just pretend as though you can see that um",
    "start": "2800400",
    "end": "2806720"
  },
  {
    "text": "all right that's that's actually not working just give me one second here let me see if my",
    "start": "2809200",
    "end": "2816000"
  },
  {
    "text": "radio is actually working",
    "start": "2816000",
    "end": "2831839"
  },
  {
    "text": "all right so i'm going to start the processor host",
    "start": "2833359",
    "end": "2845839"
  },
  {
    "text": "sorry about this i didn't expect to my uh my raspberry pi over there went to",
    "start": "2861760",
    "end": "2869760"
  },
  {
    "text": "sleep and i'm not able to establish a network connection to it so just bear with me while this",
    "start": "2869760",
    "end": "2887838"
  },
  {
    "text": "so",
    "start": "2926839",
    "end": "2929839"
  },
  {
    "text": "uh so i still seem to have a networking problem here",
    "start": "2943839",
    "end": "2956000"
  },
  {
    "text": "no there we go so i don't know if you can see this but",
    "start": "2956000",
    "end": "2961760"
  },
  {
    "text": "uh i've got a couple of uh flights that are not advertising their call signs so",
    "start": "2961760",
    "end": "2968240"
  },
  {
    "text": "that's probably for the air force base that's near my house and then this other one here",
    "start": "2968240",
    "end": "2974680"
  },
  {
    "text": "lxj381 uh that that those these two here look",
    "start": "2974680",
    "end": "2980480"
  },
  {
    "text": "the bottom two look like uh regular commercial flights",
    "start": "2980480",
    "end": "2985838"
  },
  {
    "text": "so what's happening here is i have a capability provider running",
    "start": "2986079",
    "end": "2992559"
  },
  {
    "text": "on a device or running with telnet access to a device that has a radio receiver on it the provider is",
    "start": "2992559",
    "end": "3000000"
  },
  {
    "text": "decoding the signal the actor is doing business logic with",
    "start": "3000000",
    "end": "3005599"
  },
  {
    "text": "that with those events and so it's computing state from this event stream and the event",
    "start": "3005599",
    "end": "3011920"
  },
  {
    "text": "stream on this one radio is about four or 500 uh radio packets per second and then",
    "start": "3011920",
    "end": "3020640"
  },
  {
    "text": "it's aggregating all of that into this flight state and uh now i i have a",
    "start": "3020640",
    "end": "3027599"
  },
  {
    "text": "uh just a regular console application that is uh reading the aggregate state",
    "start": "3027599",
    "end": "3033680"
  },
  {
    "text": "generated by these actors or this one yeah the two actors and um",
    "start": "3033680",
    "end": "3041440"
  },
  {
    "text": "also subscribing to the event stream of events that one of the actors is",
    "start": "3041440",
    "end": "3046960"
  },
  {
    "text": "emitting and you saw earlier that the",
    "start": "3046960",
    "end": "3052079"
  },
  {
    "text": "the amount of code to get all this stuff to work uh was you know in measured in the tens",
    "start": "3052079",
    "end": "3059520"
  },
  {
    "text": "of lines of code but that's not really the most important thing here the most important thing here",
    "start": "3059520",
    "end": "3065359"
  },
  {
    "text": "is that while this demo currently works on a uh",
    "start": "3065359",
    "end": "3073838"
  },
  {
    "text": "an rtl sdr hardware device and the aggregate data is stored in",
    "start": "3075359",
    "end": "3081680"
  },
  {
    "text": "redis i could change the hardware device that i'm getting this radio from",
    "start": "3081680",
    "end": "3087359"
  },
  {
    "text": "from the little antenna outside my window to some giant thing mounted in my backyard",
    "start": "3087359",
    "end": "3094960"
  },
  {
    "text": "without having to redeploy my actors and i could switch it from storing the data",
    "start": "3094960",
    "end": "3100559"
  },
  {
    "text": "in redis to storing it in cassandra or any other key value store again without",
    "start": "3100559",
    "end": "3106240"
  },
  {
    "text": "redeploying the actors and these actors are unforgeable so i",
    "start": "3106240",
    "end": "3111920"
  },
  {
    "text": "can't pretend to these actors can't pretend to have an identity that they weren't",
    "start": "3111920",
    "end": "3117839"
  },
  {
    "text": "given you can't tamper with them because the the hash of the bytes of the webassembly",
    "start": "3117839",
    "end": "3124240"
  },
  {
    "text": "module will will fail that check and further since i know the identity of the",
    "start": "3124240",
    "end": "3131680"
  },
  {
    "text": "the entity that signed these modules i know whether or not i trust them to run in this particular environment",
    "start": "3131680",
    "end": "3137760"
  },
  {
    "text": "so i could have identities that i trust to sign my production pay workloads and i",
    "start": "3137760",
    "end": "3145280"
  },
  {
    "text": "could not trust the entities that sign my uh my dev and qa workloads",
    "start": "3145280",
    "end": "3153838"
  },
  {
    "text": "got it yeah so i have a question so this is one this is the data that's being",
    "start": "3157839",
    "end": "3162960"
  },
  {
    "text": "displayed by signals that are coming to one raspberry pi is that right right now and the idea is that you have",
    "start": "3162960",
    "end": "3170160"
  },
  {
    "text": "some sort of distributed database that has all these flights in it and you have these stations all over",
    "start": "3170160",
    "end": "3176000"
  },
  {
    "text": "the world is that the idea and they communicate is there a distributed database like dns or something like similar to",
    "start": "3176000",
    "end": "3181839"
  },
  {
    "text": "what dns does is that the idea or am i getting that wrong yeah so basically",
    "start": "3181839",
    "end": "3187359"
  },
  {
    "text": "what it what it amounts to is so if you can see on the top here there's a list of",
    "start": "3187359",
    "end": "3192480"
  },
  {
    "text": "stations each one of those stations is some piece of hardware",
    "start": "3192480",
    "end": "3197760"
  },
  {
    "text": "that has a capability provider reading data from it and so because i'm using naps to connect",
    "start": "3197760",
    "end": "3204079"
  },
  {
    "text": "those stations could be anywhere in the world and one that's currently offline right",
    "start": "3204079",
    "end": "3209680"
  },
  {
    "text": "now a friend of mine he has his station set up in uh in the dc area",
    "start": "3209680",
    "end": "3217359"
  },
  {
    "text": "so i can have all of these stations running the the host for them does not need to",
    "start": "3217359",
    "end": "3222880"
  },
  {
    "text": "be running in the cloud it can be running close to the source of data which is",
    "start": "3222880",
    "end": "3228000"
  },
  {
    "text": "uh you know the edge computing is getting more and more important as the amount of raw data we get from",
    "start": "3228000",
    "end": "3235200"
  },
  {
    "text": "these uh edge devices like radio receivers becomes uh you know unmanageable so if i",
    "start": "3235200",
    "end": "3242800"
  },
  {
    "text": "were to send all of these events from all of these different flights all the way up to to the cloud in order",
    "start": "3242800",
    "end": "3249200"
  },
  {
    "text": "to do pre-processing on them i would uh quickly overwhelm my cloud and i'd",
    "start": "3249200",
    "end": "3254720"
  },
  {
    "text": "have to scale it up and pay for all of that scale but if i can do some of that pre-processing",
    "start": "3254720",
    "end": "3260800"
  },
  {
    "text": "on the device uh that massively impacts the type of",
    "start": "3260800",
    "end": "3266720"
  },
  {
    "text": "architecture i need to support this the distributed database can be",
    "start": "3266720",
    "end": "3272800"
  },
  {
    "text": "anything i want it to be so right now it's redis and so as long as the as long as the provider running has a",
    "start": "3272800",
    "end": "3279520"
  },
  {
    "text": "connection to the redis database um it doesn't matter where that redis database is so",
    "start": "3279520",
    "end": "3285200"
  },
  {
    "text": "for this demo it's running on uh the tower under my desk but it could be um",
    "start": "3285200",
    "end": "3293440"
  },
  {
    "text": "you know it could be an anycast type dns address so that",
    "start": "3293440",
    "end": "3300480"
  },
  {
    "text": "uh it finds the most geographically appropriate node based on the ip address of the source or it just",
    "start": "3300480",
    "end": "3308720"
  },
  {
    "text": "could be a single address to any of the cassandra nodes there in my network again those",
    "start": "3308720",
    "end": "3317200"
  },
  {
    "text": "what i really want to achieve here is the choice of the distributed database should be an",
    "start": "3317200",
    "end": "3324240"
  },
  {
    "text": "implementation detail it's just something that i choose when i'm choosing how",
    "start": "3324240",
    "end": "3329359"
  },
  {
    "text": "big i want my deployment to be and how much of it i want there to be but my business logic",
    "start": "3329359",
    "end": "3337359"
  },
  {
    "text": "the core brains of what it is i'm doing shouldn't change the problem is that",
    "start": "3337359",
    "end": "3343119"
  },
  {
    "text": "when we build things like this today that stuff has to change if i were to change you know these services",
    "start": "3343119",
    "end": "3350480"
  },
  {
    "text": "from uh aggregating over telnet to aggregating over",
    "start": "3350480",
    "end": "3355760"
  },
  {
    "text": "some other protocol and then storing data from redis to cassandra",
    "start": "3355760",
    "end": "3362319"
  },
  {
    "text": "i have to recompile everything and i probably have to re-engineer half of it but by doing it this way with this very",
    "start": "3362319",
    "end": "3370480"
  },
  {
    "text": "simple actor model where all of my business logic is in these portable distributed actors",
    "start": "3370480",
    "end": "3377760"
  },
  {
    "text": "that can run anywhere in my mesh i don't have to recompile or redeploy anything to make",
    "start": "3377760",
    "end": "3384559"
  },
  {
    "text": "scale decisions and and move compute to where it's most",
    "start": "3384559",
    "end": "3390160"
  },
  {
    "text": "appropriate okay but at some high level you choose",
    "start": "3390160",
    "end": "3395760"
  },
  {
    "text": "at one point in time what that distributed database is going to be you can swap it out to different things but for the entire system it's",
    "start": "3395760",
    "end": "3402160"
  },
  {
    "text": "the same distributed database yeah okay so the the core components of",
    "start": "3402160",
    "end": "3407920"
  },
  {
    "text": "the system here are there's an actor that processes uh flight tracking events that come in",
    "start": "3407920",
    "end": "3416000"
  },
  {
    "text": "from a a flight tracking capability provider",
    "start": "3416000",
    "end": "3421440"
  },
  {
    "text": "and there's an actor that provides a restful service on top of the aggregate data and",
    "start": "3421440",
    "end": "3428880"
  },
  {
    "text": "those two things are really the key components that that make up this system there's the ui",
    "start": "3428880",
    "end": "3435839"
  },
  {
    "text": "here but um you know that that's just a essentially a passive consumer as long",
    "start": "3435839",
    "end": "3444000"
  },
  {
    "text": "as the design of my system is to process these radio events and",
    "start": "3444000",
    "end": "3452160"
  },
  {
    "text": "convert them into aggregate state then i can satisfy those requirements",
    "start": "3452160",
    "end": "3458240"
  },
  {
    "text": "however i want without having to change my actors more importantly i can move my capability providers from",
    "start": "3458240",
    "end": "3465359"
  },
  {
    "text": "one host to another i can move my actors from one house to another and i can choose",
    "start": "3465359",
    "end": "3470640"
  },
  {
    "text": "where i run my compute based on what my needs are not based on what technology i chose for",
    "start": "3470640",
    "end": "3476720"
  },
  {
    "text": "my client library at the time that i was developing this stuff",
    "start": "3476720",
    "end": "3481920"
  },
  {
    "text": "got it is it a good practice to have the capability providers close to the actors or",
    "start": "3486559",
    "end": "3491599"
  },
  {
    "text": "it really depends on you know just how you architect your application so that's kind of the that's the cool",
    "start": "3491599",
    "end": "3497920"
  },
  {
    "text": "part is that it doesn't really matter uh i can have the capability provider",
    "start": "3497920",
    "end": "3503359"
  },
  {
    "text": "in process inside the same host as the actor and in some cases that might make a lot",
    "start": "3503359",
    "end": "3508559"
  },
  {
    "text": "of sense so if the capability provider is sending tens of thousands of messages per second",
    "start": "3508559",
    "end": "3514720"
  },
  {
    "text": "to an actor for processing it might make a lot of sense to put the actor and that provider in the same host",
    "start": "3514720",
    "end": "3521440"
  },
  {
    "text": "and then have the post-processing actor be in another host downstream somewhere",
    "start": "3521440",
    "end": "3528640"
  },
  {
    "text": "but the beauty of it is that because these things are portable and they'll run",
    "start": "3528640",
    "end": "3534960"
  },
  {
    "text": "wherever i want them to if one if while i'm prototyping this out",
    "start": "3534960",
    "end": "3541440"
  },
  {
    "text": "and i'm testing this all at home just to see how if all this stuff works together",
    "start": "3541440",
    "end": "3548160"
  },
  {
    "text": "uh i can run it all in a single process and verify that everything is the way i want it",
    "start": "3548160",
    "end": "3553680"
  },
  {
    "text": "and then when i want to scale out to production i don't have to re-engineer my hello world to production anymore i can take what",
    "start": "3553680",
    "end": "3561440"
  },
  {
    "text": "was running in my single process and just split all of the constituent parts out",
    "start": "3561440",
    "end": "3566720"
  },
  {
    "text": "and then run them at whatever scale i want so if i want to run 500 instances",
    "start": "3566720",
    "end": "3572160"
  },
  {
    "text": "of the radio processing actor i can do that i can spread 500 of those",
    "start": "3572160",
    "end": "3580160"
  },
  {
    "text": "across 500 hosts wherever i want to run those and the capability provider",
    "start": "3580160",
    "end": "3586880"
  },
  {
    "text": "will distribute its messages evenly across all 500 of those actors",
    "start": "3586880",
    "end": "3592480"
  },
  {
    "text": "and if i want to run five of those capability providers that are attached to five different",
    "start": "3592480",
    "end": "3598160"
  },
  {
    "text": "radios and still have 500 different processing actors i still have that uh that message",
    "start": "3598160",
    "end": "3605760"
  },
  {
    "text": "pattern and i haven't had to re-engineer anything",
    "start": "3605760",
    "end": "3610240"
  },
  {
    "text": "got it make sense here",
    "start": "3611760",
    "end": "3615839"
  },
  {
    "text": "any other questions i think we're running pretty close to time yeah we've got one minute left so any",
    "start": "3619440",
    "end": "3626160"
  },
  {
    "text": "other questions i think this is uh great and thanks for the overview it's uh i think it it",
    "start": "3626160",
    "end": "3634400"
  },
  {
    "text": "it's very interesting how things are moving forward i mean the i can see this being used in edge",
    "start": "3634400",
    "end": "3640799"
  },
  {
    "text": "computing a lot where people want to move to some of those capabilities and",
    "start": "3640799",
    "end": "3646319"
  },
  {
    "text": "maybe have some actors at the edge or somewhere else so i think the important takeaway here is that the",
    "start": "3646319",
    "end": "3652480"
  },
  {
    "text": "way people are building stuff right now today is if i want something to run at the",
    "start": "3652480",
    "end": "3657680"
  },
  {
    "text": "edge i have to choose a very specific set of technologies in order for my compute to run on the edge and if i want",
    "start": "3657680",
    "end": "3664720"
  },
  {
    "text": "my stuff to run in the cloud i use a totally different set of technologies to run in the cloud",
    "start": "3664720",
    "end": "3670559"
  },
  {
    "text": "if i want to have compute running inside a browser i have another entirely different set of",
    "start": "3670559",
    "end": "3676079"
  },
  {
    "text": "technologies that i now have to deal with and if i want all of those things to talk to each other",
    "start": "3676079",
    "end": "3681680"
  },
  {
    "text": "i have yet another set of technologies i need to deal with but if i if i write all of my stuff as",
    "start": "3681680",
    "end": "3688319"
  },
  {
    "text": "these portable actors in webassembly i can deploy them and run them at the edge i can run them in the cloud",
    "start": "3688319",
    "end": "3693760"
  },
  {
    "text": "i can run them on tiny devices and i can run them anywhere i want to i can even run them",
    "start": "3693760",
    "end": "3700400"
  },
  {
    "text": "in the browser and i don't have to re-engineer my",
    "start": "3700400",
    "end": "3706240"
  },
  {
    "text": "uh my application to make to change how how i split up my compute and more",
    "start": "3706240",
    "end": "3712400"
  },
  {
    "text": "importantly i don't have to have five different teams with five different skill sets to",
    "start": "3712400",
    "end": "3717599"
  },
  {
    "text": "manage all these components i essentially have one stack of stuff that i need to worry about yeah",
    "start": "3717599",
    "end": "3726960"
  },
  {
    "text": "i i are there any uh people using it like in the",
    "start": "3726960",
    "end": "3734480"
  },
  {
    "text": "right now or is it just still yeah so we're trying it out there's a",
    "start": "3734480",
    "end": "3741119"
  },
  {
    "text": "there's a number of people using it uh ibm's hyperledger is using the",
    "start": "3741119",
    "end": "3746400"
  },
  {
    "text": "underlying rpc mechanism uh so the wapc stuff uh",
    "start": "3746400",
    "end": "3751760"
  },
  {
    "text": "there is a company that whose name i'm i'm not allowed to mention but they they",
    "start": "3751760",
    "end": "3757280"
  },
  {
    "text": "build 5g appliances that allow you to that allow customers to grab to",
    "start": "3757280",
    "end": "3765200"
  },
  {
    "text": "download content as well as re-share their 5g bandwidth with other",
    "start": "3765200",
    "end": "3770559"
  },
  {
    "text": "neighbors that are within a certain distance of that appliance and all of the code running on those",
    "start": "3770559",
    "end": "3776880"
  },
  {
    "text": "appliances is uh wasc actors running inside west coasts",
    "start": "3776880",
    "end": "3784240"
  },
  {
    "text": "there's a couple other companies as well that are using and exploring it and uh capital one",
    "start": "3785280",
    "end": "3791520"
  },
  {
    "text": "is also you know working on uh finding internal projects to use",
    "start": "3791520",
    "end": "3798079"
  },
  {
    "text": "as a basis for awesome well thank you very much",
    "start": "3798079",
    "end": "3806079"
  },
  {
    "text": "any last questions",
    "start": "3806079",
    "end": "3811359"
  },
  {
    "text": "all right so yeah um all this meeting is recorded so if anybody wants to",
    "start": "3811359",
    "end": "3818000"
  },
  {
    "text": "watch it then they can come back so all right well thanks very much for having me appreciate it thanks",
    "start": "3818000",
    "end": "3823839"
  },
  {
    "text": "very good i appreciate it thank you all right",
    "start": "3823839",
    "end": "3839839"
  },
  {
    "text": "you",
    "start": "6280320",
    "end": "6282400"
  }
]