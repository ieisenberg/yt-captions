[
  {
    "text": "everyone",
    "start": "0",
    "end": "1199"
  },
  {
    "text": "um so my name is Kate goldenring and I'm",
    "start": "1199",
    "end": "3540"
  },
  {
    "text": "here today virtually with Joel Dice and",
    "start": "3540",
    "end": "6240"
  },
  {
    "text": "today we're going to be talking about",
    "start": "6240",
    "end": "7259"
  },
  {
    "text": "serverless web assembly so what Oscar",
    "start": "7259",
    "end": "9720"
  },
  {
    "text": "just mentioned there and how with",
    "start": "9720",
    "end": "11160"
  },
  {
    "text": "webassembly we're able to go from zero",
    "start": "11160",
    "end": "14040"
  },
  {
    "text": "webassembly applications all the way up",
    "start": "14040",
    "end": "16020"
  },
  {
    "text": "to 10 000 and back down to zero in under",
    "start": "16020",
    "end": "19140"
  },
  {
    "text": "10 seconds and we'll talk about the",
    "start": "19140",
    "end": "20820"
  },
  {
    "text": "characteristics of webassembly that let",
    "start": "20820",
    "end": "22380"
  },
  {
    "text": "us do this",
    "start": "22380",
    "end": "23760"
  },
  {
    "text": "so to start off like I mentioned I'm",
    "start": "23760",
    "end": "25500"
  },
  {
    "text": "Kate goldenring Joel and I both are",
    "start": "25500",
    "end": "28260"
  },
  {
    "text": "software engineers at fermion Joel is",
    "start": "28260",
    "end": "30900"
  },
  {
    "text": "very active in the webassembly ecosystem",
    "start": "30900",
    "end": "33239"
  },
  {
    "text": "with the wozzi subgroup and with many of",
    "start": "33239",
    "end": "35700"
  },
  {
    "text": "the language ecosystems around",
    "start": "35700",
    "end": "37260"
  },
  {
    "text": "webassembly I personally come from a",
    "start": "37260",
    "end": "39540"
  },
  {
    "text": "kubernetes background I am co-chair of",
    "start": "39540",
    "end": "41820"
  },
  {
    "text": "the cncf iot edge working group and I've",
    "start": "41820",
    "end": "44280"
  },
  {
    "text": "moved into a web web assembly space in",
    "start": "44280",
    "end": "46440"
  },
  {
    "text": "part because of what Oscar mentioned",
    "start": "46440",
    "end": "48000"
  },
  {
    "text": "really excited about the sustainability",
    "start": "48000",
    "end": "50160"
  },
  {
    "text": "impacts of switching to serverless with",
    "start": "50160",
    "end": "51960"
  },
  {
    "text": "webassembly",
    "start": "51960",
    "end": "53640"
  },
  {
    "text": "to talk a little bit about what we're",
    "start": "53640",
    "end": "55559"
  },
  {
    "text": "going to talk about today we'll first",
    "start": "55559",
    "end": "57180"
  },
  {
    "text": "level set on our definition of what is",
    "start": "57180",
    "end": "59280"
  },
  {
    "text": "serverless",
    "start": "59280",
    "end": "60360"
  },
  {
    "text": "then we'll talk about why would I use it",
    "start": "60360",
    "end": "63120"
  },
  {
    "text": "and what are the characteristics that we",
    "start": "63120",
    "end": "65760"
  },
  {
    "text": "need for an ideal unit of compute with",
    "start": "65760",
    "end": "67619"
  },
  {
    "text": "serverless and where does webassembly",
    "start": "67619",
    "end": "69299"
  },
  {
    "text": "fall among those characteristics",
    "start": "69299",
    "end": "71580"
  },
  {
    "text": "then I'll pass it off to Joel to talk",
    "start": "71580",
    "end": "73740"
  },
  {
    "text": "about what isolation looks like in the",
    "start": "73740",
    "end": "75659"
  },
  {
    "text": "context of serverless and how to",
    "start": "75659",
    "end": "77760"
  },
  {
    "text": "optimize the performance of serverless",
    "start": "77760",
    "end": "79740"
  },
  {
    "text": "webassembly and finally we'll do that",
    "start": "79740",
    "end": "82020"
  },
  {
    "text": "demo that we talked about of scaling up",
    "start": "82020",
    "end": "84180"
  },
  {
    "text": "and down from many from none to many",
    "start": "84180",
    "end": "86340"
  },
  {
    "text": "with webassembly",
    "start": "86340",
    "end": "88920"
  },
  {
    "text": "so to start off uh what is serverless",
    "start": "88920",
    "end": "91439"
  },
  {
    "text": "what is serverless so serverless you can",
    "start": "91439",
    "end": "93900"
  },
  {
    "text": "think of as a two-part definition it's a",
    "start": "93900",
    "end": "96299"
  },
  {
    "text": "both a type of application so when we",
    "start": "96299",
    "end": "98280"
  },
  {
    "text": "talk about serverless applications we're",
    "start": "98280",
    "end": "100439"
  },
  {
    "text": "not talking about long run Daemon",
    "start": "100439",
    "end": "102240"
  },
  {
    "text": "Services rather we're talking about",
    "start": "102240",
    "end": "104100"
  },
  {
    "text": "short-lived event-driven functions",
    "start": "104100",
    "end": "106860"
  },
  {
    "text": "on the other hand when we talk about",
    "start": "106860",
    "end": "108780"
  },
  {
    "text": "talk about serverless we're talking",
    "start": "108780",
    "end": "110100"
  },
  {
    "text": "about a development model one wherein I",
    "start": "110100",
    "end": "112200"
  },
  {
    "text": "don't have to think about the servers I",
    "start": "112200",
    "end": "114119"
  },
  {
    "text": "don't have to manage infrastructure all",
    "start": "114119",
    "end": "115740"
  },
  {
    "text": "I think about is my business logic and",
    "start": "115740",
    "end": "118079"
  },
  {
    "text": "that's what I can focus on as a",
    "start": "118079",
    "end": "119460"
  },
  {
    "text": "developer and all this can come together",
    "start": "119460",
    "end": "121439"
  },
  {
    "text": "as a definition of functions as a",
    "start": "121439",
    "end": "123600"
  },
  {
    "text": "service or fast",
    "start": "123600",
    "end": "126360"
  },
  {
    "text": "so why should I care about serverless",
    "start": "126360",
    "end": "128399"
  },
  {
    "text": "well the first one I mentioned briefly",
    "start": "128399",
    "end": "129899"
  },
  {
    "text": "with serverless you really only need to",
    "start": "129899",
    "end": "132420"
  },
  {
    "text": "think about the business logic and that",
    "start": "132420",
    "end": "134099"
  },
  {
    "text": "leads to a lot of developer productivity",
    "start": "134099",
    "end": "136739"
  },
  {
    "text": "beyond that we have faster scaling the",
    "start": "136739",
    "end": "139080"
  },
  {
    "text": "idea is that with serverless you know",
    "start": "139080",
    "end": "141300"
  },
  {
    "text": "that you can scale up as your events or",
    "start": "141300",
    "end": "143340"
  },
  {
    "text": "requests happen and then scale down and",
    "start": "143340",
    "end": "145920"
  },
  {
    "text": "you expect that that underlying unit for",
    "start": "145920",
    "end": "148260"
  },
  {
    "text": "serverless can handle that fast scaling",
    "start": "148260",
    "end": "151379"
  },
  {
    "text": "and what does this lead to it leads to",
    "start": "151379",
    "end": "153300"
  },
  {
    "text": "better utilization of Hardware if I'm",
    "start": "153300",
    "end": "154920"
  },
  {
    "text": "able to only execute my functions when I",
    "start": "154920",
    "end": "158040"
  },
  {
    "text": "need them I'm able to only use Hardware",
    "start": "158040",
    "end": "159959"
  },
  {
    "text": "when I need to use it and that leads to",
    "start": "159959",
    "end": "162180"
  },
  {
    "text": "cost savings you're using less of your",
    "start": "162180",
    "end": "164400"
  },
  {
    "text": "resources at any given time and only",
    "start": "164400",
    "end": "166080"
  },
  {
    "text": "when you need and that leads to those",
    "start": "166080",
    "end": "168239"
  },
  {
    "text": "environmental benefits of more",
    "start": "168239",
    "end": "169560"
  },
  {
    "text": "sustainable software",
    "start": "169560",
    "end": "171300"
  },
  {
    "text": "and if you're not aware of the green",
    "start": "171300",
    "end": "172860"
  },
  {
    "text": "software Foundation they actually have a",
    "start": "172860",
    "end": "175200"
  },
  {
    "text": "formula for calculating the software",
    "start": "175200",
    "end": "178260"
  },
  {
    "text": "carbon intensity and it is a function of",
    "start": "178260",
    "end": "181080"
  },
  {
    "text": "operational emissions and embodied",
    "start": "181080",
    "end": "182940"
  },
  {
    "text": "emissions and so what I just mentioned",
    "start": "182940",
    "end": "184440"
  },
  {
    "text": "there is a clear reduction in",
    "start": "184440",
    "end": "185760"
  },
  {
    "text": "operational emissions so I'm only",
    "start": "185760",
    "end": "187860"
  },
  {
    "text": "operating or executing my application",
    "start": "187860",
    "end": "189780"
  },
  {
    "text": "when needed and then when I'm not using",
    "start": "189780",
    "end": "191819"
  },
  {
    "text": "it it's not there it's not running it's",
    "start": "191819",
    "end": "193379"
  },
  {
    "text": "not using any resources the embodied",
    "start": "193379",
    "end": "195959"
  },
  {
    "text": "emissions are the emissions of the",
    "start": "195959",
    "end": "197340"
  },
  {
    "text": "actual physical resources and the",
    "start": "197340",
    "end": "199980"
  },
  {
    "text": "extension with serverless is actually I",
    "start": "199980",
    "end": "201900"
  },
  {
    "text": "can do more with less physical hardware",
    "start": "201900",
    "end": "204000"
  },
  {
    "text": "and part of the reason for that is the",
    "start": "204000",
    "end": "206459"
  },
  {
    "text": "concept of multi-tenancy and the",
    "start": "206459",
    "end": "209220"
  },
  {
    "text": "assumptions that we get from",
    "start": "209220",
    "end": "210560"
  },
  {
    "text": "multi-cenancy so multi-tenancy means",
    "start": "210560",
    "end": "213720"
  },
  {
    "text": "that I'm able to have multiple",
    "start": "213720",
    "end": "215340"
  },
  {
    "text": "independent applications running in this",
    "start": "215340",
    "end": "218099"
  },
  {
    "text": "in a shared environment so multiple",
    "start": "218099",
    "end": "219959"
  },
  {
    "text": "tenants are using the same physical",
    "start": "219959",
    "end": "221819"
  },
  {
    "text": "hardware and what this does it brings is",
    "start": "221819",
    "end": "224879"
  },
  {
    "text": "it brings the cost of a system closer to",
    "start": "224879",
    "end": "227580"
  },
  {
    "text": "the value you get from that system and",
    "start": "227580",
    "end": "229860"
  },
  {
    "text": "it does that because if you can think",
    "start": "229860",
    "end": "231000"
  },
  {
    "text": "about it if I'm a platform provider the",
    "start": "231000",
    "end": "233819"
  },
  {
    "text": "cost for me to run that platform is the",
    "start": "233819",
    "end": "236940"
  },
  {
    "text": "most amount of resources that are used",
    "start": "236940",
    "end": "238799"
  },
  {
    "text": "at any short-term peak time so if",
    "start": "238799",
    "end": "241560"
  },
  {
    "text": "everyone starts using their application",
    "start": "241560",
    "end": "243120"
  },
  {
    "text": "on a Wednesday I need to make sure that",
    "start": "243120",
    "end": "244920"
  },
  {
    "text": "the infrastructure I provide so that I",
    "start": "244920",
    "end": "247080"
  },
  {
    "text": "have enough CPU and memory to handle all",
    "start": "247080",
    "end": "248940"
  },
  {
    "text": "those requests at once so that is the",
    "start": "248940",
    "end": "250799"
  },
  {
    "text": "physical infrastructure or the cost of",
    "start": "250799",
    "end": "252420"
  },
  {
    "text": "running that platform the value that",
    "start": "252420",
    "end": "254640"
  },
  {
    "text": "someone gets from that platform is the",
    "start": "254640",
    "end": "256500"
  },
  {
    "text": "long-term average requests over time so",
    "start": "256500",
    "end": "258720"
  },
  {
    "text": "the long-term average usage of those",
    "start": "258720",
    "end": "260579"
  },
  {
    "text": "applications over time so if you can",
    "start": "260579",
    "end": "262440"
  },
  {
    "text": "think about it a platform provider maybe",
    "start": "262440",
    "end": "264000"
  },
  {
    "text": "be charging based on monthly average",
    "start": "264000",
    "end": "266400"
  },
  {
    "text": "requests",
    "start": "266400",
    "end": "267780"
  },
  {
    "text": "and to put this in picture so I've read",
    "start": "267780",
    "end": "270419"
  },
  {
    "text": "about this through Mark brooker's blog",
    "start": "270419",
    "end": "272280"
  },
  {
    "text": "he is a distinguished engineer at AWS",
    "start": "272280",
    "end": "274680"
  },
  {
    "text": "and also one of the original authors of",
    "start": "274680",
    "end": "277199"
  },
  {
    "text": "AWS Lambda and firecracker and so he",
    "start": "277199",
    "end": "279360"
  },
  {
    "text": "pointed out this idea of how",
    "start": "279360",
    "end": "280820"
  },
  {
    "text": "multi-tenancy helps us close the peak to",
    "start": "280820",
    "end": "283259"
  },
  {
    "text": "average Gap and as if you can see here I",
    "start": "283259",
    "end": "285720"
  },
  {
    "text": "basically created a random set of",
    "start": "285720",
    "end": "287580"
  },
  {
    "text": "numbers between 1 and 10 representing",
    "start": "287580",
    "end": "289560"
  },
  {
    "text": "average representing a load at any given",
    "start": "289560",
    "end": "292320"
  },
  {
    "text": "time and the thing to focus on with",
    "start": "292320",
    "end": "294240"
  },
  {
    "text": "these graphs is if you look at the right",
    "start": "294240",
    "end": "296340"
  },
  {
    "text": "one you can see that the two lines there",
    "start": "296340",
    "end": "298500"
  },
  {
    "text": "one representing the peak usage of",
    "start": "298500",
    "end": "300960"
  },
  {
    "text": "resources at any given point and the",
    "start": "300960",
    "end": "302580"
  },
  {
    "text": "bottom representing the average you can",
    "start": "302580",
    "end": "304440"
  },
  {
    "text": "see that the two lines are farther apart",
    "start": "304440",
    "end": "306000"
  },
  {
    "text": "on the right and closer together on the",
    "start": "306000",
    "end": "307680"
  },
  {
    "text": "left and the only difference here is is",
    "start": "307680",
    "end": "309900"
  },
  {
    "text": "we've added a couple more tenants so the",
    "start": "309900",
    "end": "312360"
  },
  {
    "text": "more tenants we add to a physical",
    "start": "312360",
    "end": "313919"
  },
  {
    "text": "Hardware system the closer our Peak",
    "start": "313919",
    "end": "316800"
  },
  {
    "text": "traffic gets to our average traffic and",
    "start": "316800",
    "end": "318840"
  },
  {
    "text": "that's because we can expect that each",
    "start": "318840",
    "end": "320280"
  },
  {
    "text": "of these tenants are uncorrelated so",
    "start": "320280",
    "end": "322380"
  },
  {
    "text": "they're being used at given times to the",
    "start": "322380",
    "end": "324300"
  },
  {
    "text": "point where their usage flattens out",
    "start": "324300",
    "end": "327660"
  },
  {
    "text": "and if we we can also think about the",
    "start": "327660",
    "end": "330120"
  },
  {
    "text": "waves of cloud computing in terms of",
    "start": "330120",
    "end": "331800"
  },
  {
    "text": "multi-tenancy as well so we started off",
    "start": "331800",
    "end": "334139"
  },
  {
    "text": "with the invention of virtual machines",
    "start": "334139",
    "end": "335639"
  },
  {
    "text": "which kind of kicked off the cloud",
    "start": "335639",
    "end": "336960"
  },
  {
    "text": "computing Paradigm now I can take the",
    "start": "336960",
    "end": "339419"
  },
  {
    "text": "same set of physical hardware and split",
    "start": "339419",
    "end": "341460"
  },
  {
    "text": "it up into virtual machines and have",
    "start": "341460",
    "end": "342900"
  },
  {
    "text": "applications running isolated on each",
    "start": "342900",
    "end": "344699"
  },
  {
    "text": "machine",
    "start": "344699",
    "end": "345600"
  },
  {
    "text": "then we moved to the world of containers",
    "start": "345600",
    "end": "348000"
  },
  {
    "text": "which allowed for microservices to take",
    "start": "348000",
    "end": "349800"
  },
  {
    "text": "fold and now we can have a portable",
    "start": "349800",
    "end": "351840"
  },
  {
    "text": "container that is um not only portable",
    "start": "351840",
    "end": "354720"
  },
  {
    "text": "but isolated and we can have more on the",
    "start": "354720",
    "end": "356759"
  },
  {
    "text": "same physical hardware and you can think",
    "start": "356759",
    "end": "358800"
  },
  {
    "text": "of the next wave as being a wave of a",
    "start": "358800",
    "end": "361080"
  },
  {
    "text": "better serverless and as the unit for",
    "start": "361080",
    "end": "363539"
  },
  {
    "text": "that being webassembly so now we can",
    "start": "363539",
    "end": "365520"
  },
  {
    "text": "have thousands of webassembly functions",
    "start": "365520",
    "end": "367500"
  },
  {
    "text": "on the same physical hardware and it's",
    "start": "367500",
    "end": "369660"
  },
  {
    "text": "just as isolated and it's just as",
    "start": "369660",
    "end": "371699"
  },
  {
    "text": "portable",
    "start": "371699",
    "end": "372720"
  },
  {
    "text": "and you may be looking at this and think",
    "start": "372720",
    "end": "375300"
  },
  {
    "text": "that something's missing so if you're",
    "start": "375300",
    "end": "377039"
  },
  {
    "text": "familiar with AWS Lambda the unit of AWS",
    "start": "377039",
    "end": "380580"
  },
  {
    "text": "Lambda is a micro VM the firecracker",
    "start": "380580",
    "end": "382500"
  },
  {
    "text": "micro VM and we could slot that in right",
    "start": "382500",
    "end": "385020"
  },
  {
    "text": "next to containers and webassembly",
    "start": "385020",
    "end": "388020"
  },
  {
    "text": "and actually I want to talk a little bit",
    "start": "388020",
    "end": "390120"
  },
  {
    "text": "about the how firecracker micro VMS came",
    "start": "390120",
    "end": "393120"
  },
  {
    "text": "to be and there was a 2020 paper that",
    "start": "393120",
    "end": "396000"
  },
  {
    "text": "came out called firecracker lightweight",
    "start": "396000",
    "end": "397740"
  },
  {
    "text": "virtualization for serverless",
    "start": "397740",
    "end": "399840"
  },
  {
    "text": "applications and in that the firecracker",
    "start": "399840",
    "end": "402240"
  },
  {
    "text": "team basically discussed how they came",
    "start": "402240",
    "end": "404580"
  },
  {
    "text": "about inventing the firecracker micro VM",
    "start": "404580",
    "end": "406800"
  },
  {
    "text": "and it started with the discussion on",
    "start": "406800",
    "end": "409259"
  },
  {
    "text": "the lines of what does an ideal",
    "start": "409259",
    "end": "410759"
  },
  {
    "text": "serverless unit look like what are the",
    "start": "410759",
    "end": "412560"
  },
  {
    "text": "characteristics we need to select for",
    "start": "412560",
    "end": "414840"
  },
  {
    "text": "and they came down to six units six",
    "start": "414840",
    "end": "417840"
  },
  {
    "text": "characteristics so they said it needs to",
    "start": "417840",
    "end": "420240"
  },
  {
    "text": "be isolatable so it can live next to the",
    "start": "420240",
    "end": "422220"
  },
  {
    "text": "other tenants",
    "start": "422220",
    "end": "423300"
  },
  {
    "text": "it needs to be we need to be able to",
    "start": "423300",
    "end": "425400"
  },
  {
    "text": "have a high density of them on a single",
    "start": "425400",
    "end": "427380"
  },
  {
    "text": "node we need to have as near to Native",
    "start": "427380",
    "end": "430139"
  },
  {
    "text": "performance as possible because we're",
    "start": "430139",
    "end": "432000"
  },
  {
    "text": "serverless event-driven instant",
    "start": "432000",
    "end": "434400"
  },
  {
    "text": "we want this to be as compatible you",
    "start": "434400",
    "end": "436380"
  },
  {
    "text": "shouldn't have to change your",
    "start": "436380",
    "end": "437340"
  },
  {
    "text": "application to switch to this serverless",
    "start": "437340",
    "end": "439139"
  },
  {
    "text": "paradigm fast switching so this is where",
    "start": "439139",
    "end": "441900"
  },
  {
    "text": "I should be able to start run and bring",
    "start": "441900",
    "end": "443940"
  },
  {
    "text": "down this serverless unit as quick as",
    "start": "443940",
    "end": "446039"
  },
  {
    "text": "possible and soft allocation I should be",
    "start": "446039",
    "end": "448979"
  },
  {
    "text": "able to over commit resources on this",
    "start": "448979",
    "end": "451740"
  },
  {
    "text": "one machine because I have that",
    "start": "451740",
    "end": "453180"
  },
  {
    "text": "multi-tenant assumption that not all of",
    "start": "453180",
    "end": "455639"
  },
  {
    "text": "them are running at once",
    "start": "455639",
    "end": "457259"
  },
  {
    "text": "so in that same paper they go through",
    "start": "457259",
    "end": "459419"
  },
  {
    "text": "and assess firecracker micro VMS",
    "start": "459419",
    "end": "461759"
  },
  {
    "text": "according to these characteristics so I",
    "start": "461759",
    "end": "464340"
  },
  {
    "text": "went through the same and did it for",
    "start": "464340",
    "end": "465539"
  },
  {
    "text": "webassembly and there's a few things I",
    "start": "465539",
    "end": "467099"
  },
  {
    "text": "want to point out",
    "start": "467099",
    "end": "468360"
  },
  {
    "text": "for one you can see both are sandboxed",
    "start": "468360",
    "end": "470460"
  },
  {
    "text": "so we have these these isolated secure",
    "start": "470460",
    "end": "472919"
  },
  {
    "text": "units",
    "start": "472919",
    "end": "474120"
  },
  {
    "text": "furthermore while we can put thousands",
    "start": "474120",
    "end": "477360"
  },
  {
    "text": "on a single node for both you can see",
    "start": "477360",
    "end": "479099"
  },
  {
    "text": "that we can get more out of the same set",
    "start": "479099",
    "end": "481560"
  },
  {
    "text": "of Hardware with webassembly so with a",
    "start": "481560",
    "end": "483960"
  },
  {
    "text": "lot beefier of Hardware they put a",
    "start": "483960",
    "end": "485940"
  },
  {
    "text": "thousand on a single node while with",
    "start": "485940",
    "end": "487860"
  },
  {
    "text": "just eight cores and 32 gigabytes of RAM",
    "start": "487860",
    "end": "489720"
  },
  {
    "text": "when we are load testing fermion Cloud",
    "start": "489720",
    "end": "491520"
  },
  {
    "text": "we were able to have thousands of",
    "start": "491520",
    "end": "493259"
  },
  {
    "text": "webassembly applications",
    "start": "493259",
    "end": "495360"
  },
  {
    "text": "and the final the most important one to",
    "start": "495360",
    "end": "497460"
  },
  {
    "text": "notice here is that while it takes 125",
    "start": "497460",
    "end": "499919"
  },
  {
    "text": "milliseconds to start up from start to",
    "start": "499919",
    "end": "502080"
  },
  {
    "text": "end of a firecracker micro VM it takes",
    "start": "502080",
    "end": "504840"
  },
  {
    "text": "less than a millisecond to instantiate",
    "start": "504840",
    "end": "507000"
  },
  {
    "text": "and run a webassembly module and this is",
    "start": "507000",
    "end": "508860"
  },
  {
    "text": "why I was saying webassembly really is",
    "start": "508860",
    "end": "510599"
  },
  {
    "text": "this ideal unit of serverless that we've",
    "start": "510599",
    "end": "513120"
  },
  {
    "text": "been waiting for",
    "start": "513120",
    "end": "514500"
  },
  {
    "text": "and not only when we think about",
    "start": "514500",
    "end": "515820"
  },
  {
    "text": "serverless do we want to think about the",
    "start": "515820",
    "end": "517380"
  },
  {
    "text": "functional characteristics it should",
    "start": "517380",
    "end": "518760"
  },
  {
    "text": "have but we also want to think about",
    "start": "518760",
    "end": "520020"
  },
  {
    "text": "what makes it adoptable what are the",
    "start": "520020",
    "end": "521760"
  },
  {
    "text": "characteristics that are going to make",
    "start": "521760",
    "end": "523020"
  },
  {
    "text": "you as a developer want to switch to",
    "start": "523020",
    "end": "525120"
  },
  {
    "text": "serverless and use it and those can be",
    "start": "525120",
    "end": "527339"
  },
  {
    "text": "first of all you want to be able to use",
    "start": "527339",
    "end": "528839"
  },
  {
    "text": "your language of choice you should be",
    "start": "528839",
    "end": "531000"
  },
  {
    "text": "able to run out any operating system and",
    "start": "531000",
    "end": "532860"
  },
  {
    "text": "platform and it should be portable from",
    "start": "532860",
    "end": "534779"
  },
  {
    "text": "One Cloud to the other I should be able",
    "start": "534779",
    "end": "536279"
  },
  {
    "text": "to take this same serverless function",
    "start": "536279",
    "end": "537839"
  },
  {
    "text": "and run it on one cloud and then run it",
    "start": "537839",
    "end": "539760"
  },
  {
    "text": "on the other and it should also have an",
    "start": "539760",
    "end": "542760"
  },
  {
    "text": "amazing developer experience and these",
    "start": "542760",
    "end": "544200"
  },
  {
    "text": "are all places where webassembly really",
    "start": "544200",
    "end": "545880"
  },
  {
    "text": "shines as many people have probably",
    "start": "545880",
    "end": "547320"
  },
  {
    "text": "heard about today",
    "start": "547320",
    "end": "549540"
  },
  {
    "text": "so with that I want to pass it off to",
    "start": "549540",
    "end": "551880"
  },
  {
    "text": "Joel and see if I can",
    "start": "551880",
    "end": "553580"
  },
  {
    "text": "properly switch this video oh wonderful",
    "start": "553580",
    "end": "556740"
  },
  {
    "text": "I was nervous about that",
    "start": "556740",
    "end": "558440"
  },
  {
    "text": "and Joel's going to continue by talking",
    "start": "558440",
    "end": "560940"
  },
  {
    "text": "about isolation and performance in",
    "start": "560940",
    "end": "563279"
  },
  {
    "text": "context of serverless and webassembly",
    "start": "563279",
    "end": "566940"
  },
  {
    "text": "hi everyone sorry I couldn't make it to",
    "start": "566940",
    "end": "569100"
  },
  {
    "text": "join you in person but I will be on",
    "start": "569100",
    "end": "571920"
  },
  {
    "text": "slack if you have any questions or want",
    "start": "571920",
    "end": "573540"
  },
  {
    "text": "to chat about any of this",
    "start": "573540",
    "end": "575279"
  },
  {
    "text": "the two things I'd like to talk about",
    "start": "575279",
    "end": "576660"
  },
  {
    "text": "today are the isolation model we pursue",
    "start": "576660",
    "end": "579360"
  },
  {
    "text": "for serverless types of workloads and",
    "start": "579360",
    "end": "582600"
  },
  {
    "text": "the other is the performance",
    "start": "582600",
    "end": "583920"
  },
  {
    "text": "implications of implementing that",
    "start": "583920",
    "end": "585920"
  },
  {
    "text": "isolation model",
    "start": "585920",
    "end": "588140"
  },
  {
    "text": "so to start with let's look at the two",
    "start": "588140",
    "end": "591420"
  },
  {
    "text": "types of isolation that we would like to",
    "start": "591420",
    "end": "593700"
  },
  {
    "text": "see in a serverless system one is",
    "start": "593700",
    "end": "596279"
  },
  {
    "text": "pertainant isolation which is to say",
    "start": "596279",
    "end": "598500"
  },
  {
    "text": "applications deployed by a given tenant",
    "start": "598500",
    "end": "601680"
  },
  {
    "text": "would have no way of interfering rather",
    "start": "601680",
    "end": "603959"
  },
  {
    "text": "deliberately or accidentally with",
    "start": "603959",
    "end": "606720"
  },
  {
    "text": "another tenant's applications be that in",
    "start": "606720",
    "end": "610019"
  },
  {
    "text": "terms of using too many resources or",
    "start": "610019",
    "end": "613040"
  },
  {
    "text": "accessing data that should not be",
    "start": "613040",
    "end": "615480"
  },
  {
    "text": "available to that application and that's",
    "start": "615480",
    "end": "618000"
  },
  {
    "text": "pretty much table Stakes for any",
    "start": "618000",
    "end": "619440"
  },
  {
    "text": "multi-tenant system so kind of a given",
    "start": "619440",
    "end": "623220"
  },
  {
    "text": "and and certainly the Baseline for for",
    "start": "623220",
    "end": "625140"
  },
  {
    "text": "any any set system the other kind of",
    "start": "625140",
    "end": "628320"
  },
  {
    "text": "isolation is a bit more fine-grained",
    "start": "628320",
    "end": "630779"
  },
  {
    "text": "which is each request",
    "start": "630779",
    "end": "632600"
  },
  {
    "text": "to a given application should also be",
    "start": "632600",
    "end": "635220"
  },
  {
    "text": "isolated from other requests to that",
    "start": "635220",
    "end": "637320"
  },
  {
    "text": "application and of course to other",
    "start": "637320",
    "end": "638880"
  },
  {
    "text": "applications and what this gives us is",
    "start": "638880",
    "end": "641279"
  },
  {
    "text": "guaranteed statelessness across requests",
    "start": "641279",
    "end": "644279"
  },
  {
    "text": "so that we're able to operate them in",
    "start": "644279",
    "end": "647579"
  },
  {
    "text": "parallel and concurrently across a wide",
    "start": "647579",
    "end": "650459"
  },
  {
    "text": "range of Hardware",
    "start": "650459",
    "end": "652579"
  },
  {
    "text": "without breaking the semantics or",
    "start": "652579",
    "end": "655380"
  },
  {
    "text": "requiring state to be propagated in a",
    "start": "655380",
    "end": "658620"
  },
  {
    "text": "distributed environment the other",
    "start": "658620",
    "end": "660660"
  },
  {
    "text": "Advantage is Fault containment which is",
    "start": "660660",
    "end": "663779"
  },
  {
    "text": "to say a re a request that triggers a",
    "start": "663779",
    "end": "667800"
  },
  {
    "text": "bug in an application should at most",
    "start": "667800",
    "end": "670620"
  },
  {
    "text": "affect that request and not any other",
    "start": "670620",
    "end": "673019"
  },
  {
    "text": "requests happening concurrently for that",
    "start": "673019",
    "end": "675240"
  },
  {
    "text": "application or subsequently",
    "start": "675240",
    "end": "677519"
  },
  {
    "text": "and then finally this contributes to",
    "start": "677519",
    "end": "680399"
  },
  {
    "text": "defense in-depth security security",
    "start": "680399",
    "end": "682920"
  },
  {
    "text": "vulnerabilities in an application should",
    "start": "682920",
    "end": "686519"
  },
  {
    "text": "be at most exploitable uh in in terms of",
    "start": "686519",
    "end": "690779"
  },
  {
    "text": "the data available to a single request",
    "start": "690779",
    "end": "693300"
  },
  {
    "text": "rather than to other requests",
    "start": "693300",
    "end": "697459"
  },
  {
    "text": "but this sorts of sort of fine-grained",
    "start": "698220",
    "end": "700079"
  },
  {
    "text": "isolation is not just useful for",
    "start": "700079",
    "end": "702240"
  },
  {
    "text": "functions as a service we've also found",
    "start": "702240",
    "end": "704700"
  },
  {
    "text": "it could be useful and no surprise in",
    "start": "704700",
    "end": "708240"
  },
  {
    "text": "web browsers indeed that's what",
    "start": "708240",
    "end": "710279"
  },
  {
    "text": "webassembly was originally invented for",
    "start": "710279",
    "end": "712459"
  },
  {
    "text": "in particular we don't expect that when",
    "start": "712459",
    "end": "716399"
  },
  {
    "text": "we load a new website the application",
    "start": "716399",
    "end": "719399"
  },
  {
    "text": "code downloaded from that website would",
    "start": "719399",
    "end": "721200"
  },
  {
    "text": "have access to",
    "start": "721200",
    "end": "722940"
  },
  {
    "text": "other browser tabs or to previously",
    "start": "722940",
    "end": "726600"
  },
  {
    "text": "visited websites another example where",
    "start": "726600",
    "end": "729180"
  },
  {
    "text": "this is useful is a multi-tenant",
    "start": "729180",
    "end": "730800"
  },
  {
    "text": "database or even a single tenant tenant",
    "start": "730800",
    "end": "733560"
  },
  {
    "text": "database with multiple users where we",
    "start": "733560",
    "end": "735839"
  },
  {
    "text": "want to scope the available data for a",
    "start": "735839",
    "end": "739440"
  },
  {
    "text": "user-defined function such as an",
    "start": "739440",
    "end": "740940"
  },
  {
    "text": "aggregate to what that user has",
    "start": "740940",
    "end": "743880"
  },
  {
    "text": "permission to access another is",
    "start": "743880",
    "end": "746820"
  },
  {
    "text": "blockchain based smart contracts and",
    "start": "746820",
    "end": "749640"
  },
  {
    "text": "then finally any application that",
    "start": "749640",
    "end": "751800"
  },
  {
    "text": "involves a third-party dependency can",
    "start": "751800",
    "end": "754560"
  },
  {
    "text": "benefit from this type of isolation if",
    "start": "754560",
    "end": "756779"
  },
  {
    "text": "you have a library that needs to encode",
    "start": "756779",
    "end": "759120"
  },
  {
    "text": "some of your applications data it",
    "start": "759120",
    "end": "762480"
  },
  {
    "text": "doesn't necessarily need access to your",
    "start": "762480",
    "end": "765120"
  },
  {
    "text": "entire application state or to the",
    "start": "765120",
    "end": "767459"
  },
  {
    "text": "network or to the file system and a",
    "start": "767459",
    "end": "770880"
  },
  {
    "text": "strong isolation guarantee will ensure",
    "start": "770880",
    "end": "773519"
  },
  {
    "text": "that it only has access to what it needs",
    "start": "773519",
    "end": "776160"
  },
  {
    "text": "to do its job",
    "start": "776160",
    "end": "778940"
  },
  {
    "text": "so when we Implement these sorts of",
    "start": "779519",
    "end": "781920"
  },
  {
    "text": "fine-grained isolation",
    "start": "781920",
    "end": "783860"
  },
  {
    "text": "scenarios it does come at a performance",
    "start": "783860",
    "end": "786839"
  },
  {
    "text": "cost and some of the most exciting",
    "start": "786839",
    "end": "789779"
  },
  {
    "text": "research in systems design these days is",
    "start": "789779",
    "end": "792959"
  },
  {
    "text": "reducing that cost to a minimum and",
    "start": "792959",
    "end": "795720"
  },
  {
    "text": "we've done some of our own benchmarks",
    "start": "795720",
    "end": "797519"
  },
  {
    "text": "and optimizations which we'd like to",
    "start": "797519",
    "end": "799740"
  },
  {
    "text": "share with you here",
    "start": "799740",
    "end": "802200"
  },
  {
    "text": "and in order to understand some of those",
    "start": "802200",
    "end": "804240"
  },
  {
    "text": "optimizations it's worth looking at the",
    "start": "804240",
    "end": "806940"
  },
  {
    "text": "pipeline that is invoked when a",
    "start": "806940",
    "end": "810300"
  },
  {
    "text": "serverless function based on webassembly",
    "start": "810300",
    "end": "812779"
  },
  {
    "text": "and using was some time the webassembly",
    "start": "812779",
    "end": "816360"
  },
  {
    "text": "runtime uh what that function pipeline",
    "start": "816360",
    "end": "819000"
  },
  {
    "text": "looks like to start with at build time",
    "start": "819000",
    "end": "821899"
  },
  {
    "text": "we do as much work as possible",
    "start": "821899",
    "end": "824579"
  },
  {
    "text": "especially for interpreted languages",
    "start": "824579",
    "end": "827040"
  },
  {
    "text": "such as python where there's a",
    "start": "827040",
    "end": "829740"
  },
  {
    "text": "non-trivial amount of work that The",
    "start": "829740",
    "end": "831300"
  },
  {
    "text": "Interpreter needs to do up front to run",
    "start": "831300",
    "end": "834540"
  },
  {
    "text": "any application code and as much as",
    "start": "834540",
    "end": "837420"
  },
  {
    "text": "possible we want to use tools like wiser",
    "start": "837420",
    "end": "840300"
  },
  {
    "text": "to do that work at build time rather",
    "start": "840300",
    "end": "843300"
  },
  {
    "text": "than each time the function or",
    "start": "843300",
    "end": "845399"
  },
  {
    "text": "application is invoked the next step is",
    "start": "845399",
    "end": "848660"
  },
  {
    "text": "webassembly byte code to Native machine",
    "start": "848660",
    "end": "851880"
  },
  {
    "text": "code compilation which is an essential",
    "start": "851880",
    "end": "856019"
  },
  {
    "text": "step for optimization but also very",
    "start": "856019",
    "end": "859260"
  },
  {
    "text": "expensive and it's something what we",
    "start": "859260",
    "end": "861240"
  },
  {
    "text": "want to do once and cache the results of",
    "start": "861240",
    "end": "864480"
  },
  {
    "text": "if possible and it turns out that's",
    "start": "864480",
    "end": "866279"
  },
  {
    "text": "quite easy to do with webassembly and",
    "start": "866279",
    "end": "869220"
  },
  {
    "text": "we'll have some time uh the next step is",
    "start": "869220",
    "end": "871740"
  },
  {
    "text": "pre-instantiation which involves linking",
    "start": "871740",
    "end": "873779"
  },
  {
    "text": "guest functions and host functions",
    "start": "873779",
    "end": "875700"
  },
  {
    "text": "together so that they can call back and",
    "start": "875700",
    "end": "878100"
  },
  {
    "text": "forth between them then we do",
    "start": "878100",
    "end": "880380"
  },
  {
    "text": "instantiation which actually allocates",
    "start": "880380",
    "end": "882660"
  },
  {
    "text": "the memory needed for the invocation and",
    "start": "882660",
    "end": "886440"
  },
  {
    "text": "then finally we invoke the function",
    "start": "886440",
    "end": "888420"
  },
  {
    "text": "which involves some context switching",
    "start": "888420",
    "end": "890639"
  },
  {
    "text": "from the Native host to the guest",
    "start": "890639",
    "end": "894600"
  },
  {
    "text": "environment",
    "start": "894600",
    "end": "897139"
  },
  {
    "text": "and to the right here you do see uh some",
    "start": "897300",
    "end": "900420"
  },
  {
    "text": "uh timings for a sample simple rust",
    "start": "900420",
    "end": "904680"
  },
  {
    "text": "based hdb Handler just to give you a",
    "start": "904680",
    "end": "907800"
  },
  {
    "text": "ballpark idea of how long these take at",
    "start": "907800",
    "end": "911940"
  },
  {
    "text": "each step",
    "start": "911940",
    "end": "914360"
  },
  {
    "text": "so some of the optimizations that we",
    "start": "915000",
    "end": "916680"
  },
  {
    "text": "found particularly useful I already",
    "start": "916680",
    "end": "918480"
  },
  {
    "text": "mentioned wiser especially for",
    "start": "918480",
    "end": "920399"
  },
  {
    "text": "interpreted languages",
    "start": "920399",
    "end": "922100"
  },
  {
    "text": "in Wesson time you also have the",
    "start": "922100",
    "end": "925500"
  },
  {
    "text": "opportunity to pre-compile a component",
    "start": "925500",
    "end": "928860"
  },
  {
    "text": "and either",
    "start": "928860",
    "end": "930540"
  },
  {
    "text": "cache it on disk for later efficient use",
    "start": "930540",
    "end": "934680"
  },
  {
    "text": "or keep it in memory in addition to that",
    "start": "934680",
    "end": "939060"
  },
  {
    "text": "state you can",
    "start": "939060",
    "end": "941779"
  },
  {
    "text": "pre-instantiate a module or component",
    "start": "941779",
    "end": "944699"
  },
  {
    "text": "and keep that in memory as well which",
    "start": "944699",
    "end": "948240"
  },
  {
    "text": "saves some time in terms of linking and",
    "start": "948240",
    "end": "951180"
  },
  {
    "text": "then also allocation pooling allows",
    "start": "951180",
    "end": "954860"
  },
  {
    "text": "instanti reduces the cost of",
    "start": "954860",
    "end": "956880"
  },
  {
    "text": "instantiation by reusing",
    "start": "956880",
    "end": "960300"
  },
  {
    "text": "memory across instances taking care to",
    "start": "960300",
    "end": "964199"
  },
  {
    "text": "zero out the pages so that no",
    "start": "964199",
    "end": "966240"
  },
  {
    "text": "information is leaked",
    "start": "966240",
    "end": "968120"
  },
  {
    "text": "and this can be a particularly",
    "start": "968120",
    "end": "970740"
  },
  {
    "text": "interesting or particularly useful for",
    "start": "970740",
    "end": "974600"
  },
  {
    "text": "amortizing the cost of system calls in",
    "start": "974600",
    "end": "979260"
  },
  {
    "text": "order to do that allocation and then",
    "start": "979260",
    "end": "981240"
  },
  {
    "text": "finally what we found particularly",
    "start": "981240",
    "end": "982560"
  },
  {
    "text": "useful for large.net apps is tweaking",
    "start": "982560",
    "end": "987360"
  },
  {
    "text": "the heuristics that was some time",
    "start": "987360",
    "end": "989160"
  },
  {
    "text": "usually does to determine whether how to",
    "start": "989160",
    "end": "991680"
  },
  {
    "text": "handle",
    "start": "991680",
    "end": "992720"
  },
  {
    "text": "statically initialized memory whether",
    "start": "992720",
    "end": "995220"
  },
  {
    "text": "via memory mapping or via a sort of an",
    "start": "995220",
    "end": "998220"
  },
  {
    "text": "iterative iterative process that takes",
    "start": "998220",
    "end": "1000199"
  },
  {
    "text": "quite a bit longer and we had to tweak",
    "start": "1000199",
    "end": "1004100"
  },
  {
    "text": "it tweak the the settings on that to",
    "start": "1004100",
    "end": "1006320"
  },
  {
    "text": "ensure that even large.net apps",
    "start": "1006320",
    "end": "1008600"
  },
  {
    "text": "benefited from that memory mapping",
    "start": "1008600",
    "end": "1012399"
  },
  {
    "text": "and so here just as a comparison between",
    "start": "1012440",
    "end": "1015940"
  },
  {
    "text": "webassembly-based isolation and other",
    "start": "1015940",
    "end": "1018620"
  },
  {
    "text": "forms of course grained isolation such",
    "start": "1018620",
    "end": "1020899"
  },
  {
    "text": "as containers and VMS this is a table",
    "start": "1020899",
    "end": "1024500"
  },
  {
    "text": "that kind of gives you a sense of the",
    "start": "1024500",
    "end": "1026720"
  },
  {
    "text": "order of magnitude difference between uh",
    "start": "1026720",
    "end": "1030860"
  },
  {
    "text": "some isolation models and others going",
    "start": "1030860",
    "end": "1033918"
  },
  {
    "text": "from VMS to Containers uh to wasm time",
    "start": "1033919",
    "end": "1039400"
  },
  {
    "text": "and its various optimizations and",
    "start": "1039400",
    "end": "1042380"
  },
  {
    "text": "finally to Native where there's no",
    "start": "1042380",
    "end": "1044480"
  },
  {
    "text": "isolation at all ideally we'd like to",
    "start": "1044480",
    "end": "1047240"
  },
  {
    "text": "continue to reduce the overhead to as",
    "start": "1047240",
    "end": "1051919"
  },
  {
    "text": "close to what we see with no isolation",
    "start": "1051919",
    "end": "1054200"
  },
  {
    "text": "as possible and one particular proposal",
    "start": "1054200",
    "end": "1058700"
  },
  {
    "text": "that was has been made recently is",
    "start": "1058700",
    "end": "1062000"
  },
  {
    "text": "something called Hardware fault",
    "start": "1062000",
    "end": "1063440"
  },
  {
    "text": "isolation which is a proposed extension",
    "start": "1063440",
    "end": "1066919"
  },
  {
    "text": "to various instruction set architectures",
    "start": "1066919",
    "end": "1069020"
  },
  {
    "text": "such as x86 and arm which would achieve",
    "start": "1069020",
    "end": "1073940"
  },
  {
    "text": "user space sandboxing that is Hardware",
    "start": "1073940",
    "end": "1076039"
  },
  {
    "text": "enforced and what that would mean is",
    "start": "1076039",
    "end": "1079520"
  },
  {
    "text": "when invoking a function within a",
    "start": "1079520",
    "end": "1081919"
  },
  {
    "text": "process",
    "start": "1081919",
    "end": "1083380"
  },
  {
    "text": "that the invoker the caller of that",
    "start": "1083380",
    "end": "1086600"
  },
  {
    "text": "function would have the opportunity to",
    "start": "1086600",
    "end": "1089660"
  },
  {
    "text": "restrict the parts of that process's",
    "start": "1089660",
    "end": "1092240"
  },
  {
    "text": "memory that the function has access to",
    "start": "1092240",
    "end": "1094700"
  },
  {
    "text": "uh it could Grant access to say three",
    "start": "1094700",
    "end": "1098059"
  },
  {
    "text": "regions if those three regions were the",
    "start": "1098059",
    "end": "1101000"
  },
  {
    "text": "only items that the function was",
    "start": "1101000",
    "end": "1104360"
  },
  {
    "text": "expected to need and the switching from",
    "start": "1104360",
    "end": "1109240"
  },
  {
    "text": "a set of permissions on these regions uh",
    "start": "1109240",
    "end": "1113360"
  },
  {
    "text": "back and forth you know from caller to",
    "start": "1113360",
    "end": "1115220"
  },
  {
    "text": "Kali and Back Again are called context",
    "start": "1115220",
    "end": "1117679"
  },
  {
    "text": "which is very much analogous to the sort",
    "start": "1117679",
    "end": "1120200"
  },
  {
    "text": "of context switch that is traditionally",
    "start": "1120200",
    "end": "1122900"
  },
  {
    "text": "done from user space into kernel space",
    "start": "1122900",
    "end": "1124700"
  },
  {
    "text": "and back however in this case for",
    "start": "1124700",
    "end": "1128299"
  },
  {
    "text": "webassembly what's being proposed is",
    "start": "1128299",
    "end": "1130280"
  },
  {
    "text": "that that context switch could be",
    "start": "1130280",
    "end": "1131900"
  },
  {
    "text": "reduced to almost zero or actually zero",
    "start": "1131900",
    "end": "1134840"
  },
  {
    "text": "in many cases which is exciting and",
    "start": "1134840",
    "end": "1138440"
  },
  {
    "text": "could definitely narrow the gap between",
    "start": "1138440",
    "end": "1140660"
  },
  {
    "text": "a non-isolated and an isolate isolated",
    "start": "1140660",
    "end": "1144200"
  },
  {
    "text": "invocation",
    "start": "1144200",
    "end": "1147200"
  },
  {
    "text": "and with that I'll hand it back to Kate",
    "start": "1147380",
    "end": "1149419"
  },
  {
    "text": "thanks so much for your time and again",
    "start": "1149419",
    "end": "1152299"
  },
  {
    "text": "I'll be on slack if you have any",
    "start": "1152299",
    "end": "1153860"
  },
  {
    "text": "questions or just want to chat thanks a",
    "start": "1153860",
    "end": "1155960"
  },
  {
    "text": "lot",
    "start": "1155960",
    "end": "1158080"
  },
  {
    "text": "foreign",
    "start": "1162940",
    "end": "1164720"
  },
  {
    "text": "great so a lot of those optimizations",
    "start": "1164720",
    "end": "1167059"
  },
  {
    "text": "that Joel mentioned we've started to",
    "start": "1167059",
    "end": "1169520"
  },
  {
    "text": "apply not only to spin but also to",
    "start": "1169520",
    "end": "1171380"
  },
  {
    "text": "fermion Cloud our hosted platform for",
    "start": "1171380",
    "end": "1173480"
  },
  {
    "text": "spin applications and so I want to go",
    "start": "1173480",
    "end": "1176000"
  },
  {
    "text": "ahead and share a demo of us basically",
    "start": "1176000",
    "end": "1179059"
  },
  {
    "text": "seeing all that we've talked about so in",
    "start": "1179059",
    "end": "1181700"
  },
  {
    "text": "the demo we're going to have a single",
    "start": "1181700",
    "end": "1183559"
  },
  {
    "text": "node Nomad cluster that I've set up on",
    "start": "1183559",
    "end": "1185660"
  },
  {
    "text": "this MacBook Pro here and I've deployed",
    "start": "1185660",
    "end": "1189500"
  },
  {
    "text": "for me on cloud to it so what that",
    "start": "1189500",
    "end": "1190940"
  },
  {
    "text": "consists of is like I said in single no",
    "start": "1190940",
    "end": "1192679"
  },
  {
    "text": "Nomad cluster also standard cloud",
    "start": "1192679",
    "end": "1194960"
  },
  {
    "text": "services and then I deployed 500 spin",
    "start": "1194960",
    "end": "1198140"
  },
  {
    "text": "applications to it so spin is not only a",
    "start": "1198140",
    "end": "1200299"
  },
  {
    "text": "developer tool for building applications",
    "start": "1200299",
    "end": "1201860"
  },
  {
    "text": "but also a runtime with wasm time",
    "start": "1201860",
    "end": "1204260"
  },
  {
    "text": "embedded so spins also running on it so",
    "start": "1204260",
    "end": "1207320"
  },
  {
    "text": "that you can then invoke those",
    "start": "1207320",
    "end": "1208580"
  },
  {
    "text": "applications",
    "start": "1208580",
    "end": "1211000"
  },
  {
    "text": "and I've gone ahead and pre-recorded",
    "start": "1211880",
    "end": "1214340"
  },
  {
    "text": "this because 500 on this laptop",
    "start": "1214340",
    "end": "1216020"
  },
  {
    "text": "definitely is a bit beefy to present",
    "start": "1216020",
    "end": "1219260"
  },
  {
    "text": "right now",
    "start": "1219260",
    "end": "1221059"
  },
  {
    "text": "um so as you'll see this is The Nomad",
    "start": "1221059",
    "end": "1224000"
  },
  {
    "text": "portal right here so we have those cloud",
    "start": "1224000",
    "end": "1227000"
  },
  {
    "text": "services so we've got traffic for",
    "start": "1227000",
    "end": "1228620"
  },
  {
    "text": "networking bindle for our registry for",
    "start": "1228620",
    "end": "1230720"
  },
  {
    "text": "our webassembly applications journal for",
    "start": "1230720",
    "end": "1233059"
  },
  {
    "text": "logging and then spinmt is this",
    "start": "1233059",
    "end": "1235039"
  },
  {
    "text": "multi-tenant version of spin we have so",
    "start": "1235039",
    "end": "1236900"
  },
  {
    "text": "that we have one instance of spin for",
    "start": "1236900",
    "end": "1239120"
  },
  {
    "text": "all of our applications we're deploying",
    "start": "1239120",
    "end": "1240919"
  },
  {
    "text": "and then we have a garbage collection a",
    "start": "1240919",
    "end": "1243200"
  },
  {
    "text": "Cron job just to clean up applications",
    "start": "1243200",
    "end": "1245059"
  },
  {
    "text": "when they're deleted",
    "start": "1245059",
    "end": "1247940"
  },
  {
    "text": "um so at this point I'm going to go",
    "start": "1247940",
    "end": "1249440"
  },
  {
    "text": "ahead and deploy 500 spin applications",
    "start": "1249440",
    "end": "1252760"
  },
  {
    "text": "and each one is deployed as a nomad job",
    "start": "1252760",
    "end": "1255440"
  },
  {
    "text": "which tells us just to do a lot of those",
    "start": "1255440",
    "end": "1257240"
  },
  {
    "text": "optimizations on each one so now we've",
    "start": "1257240",
    "end": "1260059"
  },
  {
    "text": "optimized and prepared every single",
    "start": "1260059",
    "end": "1262039"
  },
  {
    "text": "application and all of these are HTTP",
    "start": "1262039",
    "end": "1265220"
  },
  {
    "text": "rust applications so they're just a",
    "start": "1265220",
    "end": "1267200"
  },
  {
    "text": "simple hello world application just two",
    "start": "1267200",
    "end": "1268880"
  },
  {
    "text": "megabytes and now we can see here the",
    "start": "1268880",
    "end": "1271820"
  },
  {
    "text": "resource usage of my MacBook Pro here as",
    "start": "1271820",
    "end": "1275179"
  },
  {
    "text": "I'm doing this demo and you'll see the",
    "start": "1275179",
    "end": "1276980"
  },
  {
    "text": "CPUs around 10 and that's what we're",
    "start": "1276980",
    "end": "1279200"
  },
  {
    "text": "going to want to watch as we scale up to",
    "start": "1279200",
    "end": "1280940"
  },
  {
    "text": "10 000 invocations of these apps and",
    "start": "1280940",
    "end": "1282980"
  },
  {
    "text": "then back down to zero so all you can",
    "start": "1282980",
    "end": "1285020"
  },
  {
    "text": "see here is I have a list of basically",
    "start": "1285020",
    "end": "1286760"
  },
  {
    "text": "the endpoints of all the applications",
    "start": "1286760",
    "end": "1288320"
  },
  {
    "text": "I've deployed in just this text file and",
    "start": "1288320",
    "end": "1290780"
  },
  {
    "text": "we'll just test one out briefly to make",
    "start": "1290780",
    "end": "1292640"
  },
  {
    "text": "sure that it's live",
    "start": "1292640",
    "end": "1295220"
  },
  {
    "text": "and then for this uh for our load",
    "start": "1295220",
    "end": "1298400"
  },
  {
    "text": "testing of Fermi on cloud that we did we",
    "start": "1298400",
    "end": "1300380"
  },
  {
    "text": "created our own load testing tool and",
    "start": "1300380",
    "end": "1302299"
  },
  {
    "text": "that's because we needed to be able to",
    "start": "1302299",
    "end": "1303980"
  },
  {
    "text": "test a whole Suite of endpoints and also",
    "start": "1303980",
    "end": "1306919"
  },
  {
    "text": "wanted to record the latency of every",
    "start": "1306919",
    "end": "1309080"
  },
  {
    "text": "single request so that we could track",
    "start": "1309080",
    "end": "1310940"
  },
  {
    "text": "improvements better",
    "start": "1310940",
    "end": "1312500"
  },
  {
    "text": "um so we're going to use that tool and",
    "start": "1312500",
    "end": "1314240"
  },
  {
    "text": "it's very similar to other load testing",
    "start": "1314240",
    "end": "1316580"
  },
  {
    "text": "tools like Siege where you can say how",
    "start": "1316580",
    "end": "1318559"
  },
  {
    "text": "many concurrent requesters Are there 25",
    "start": "1318559",
    "end": "1320419"
  },
  {
    "text": "in this case how many requests for each",
    "start": "1320419",
    "end": "1322820"
  },
  {
    "text": "one of these tasks we're going to say",
    "start": "1322820",
    "end": "1324500"
  },
  {
    "text": "400 so for a total of 10 000 requests",
    "start": "1324500",
    "end": "1326960"
  },
  {
    "text": "and then just basically a my new delay",
    "start": "1326960",
    "end": "1329659"
  },
  {
    "text": "of 0.01 seconds between each for some",
    "start": "1329659",
    "end": "1332360"
  },
  {
    "text": "Jitter",
    "start": "1332360",
    "end": "1333320"
  },
  {
    "text": "and then we just point to that app file",
    "start": "1333320",
    "end": "1335960"
  },
  {
    "text": "that had the list of all the endpoints",
    "start": "1335960",
    "end": "1337580"
  },
  {
    "text": "that we want to round robin test",
    "start": "1337580",
    "end": "1340640"
  },
  {
    "text": "and now we're going to go ahead and",
    "start": "1340640",
    "end": "1342440"
  },
  {
    "text": "enter and we'll see that we're running",
    "start": "1342440",
    "end": "1344179"
  },
  {
    "text": "this test you can see the CPU is spiking",
    "start": "1344179",
    "end": "1346700"
  },
  {
    "text": "up almost to like 90 percent from that",
    "start": "1346700",
    "end": "1348799"
  },
  {
    "text": "nine to ten percent and here you'll see",
    "start": "1348799",
    "end": "1352159"
  },
  {
    "text": "that we did 10 000 total requests and",
    "start": "1352159",
    "end": "1355760"
  },
  {
    "text": "just 5.83 seconds",
    "start": "1355760",
    "end": "1358520"
  },
  {
    "text": "so there is our demo",
    "start": "1358520",
    "end": "1362140"
  },
  {
    "text": "and with that I just wanted to say we've",
    "start": "1363919",
    "end": "1366440"
  },
  {
    "text": "mentioned this previously but we have",
    "start": "1366440",
    "end": "1368240"
  },
  {
    "text": "our happy hour injunction with Docker so",
    "start": "1368240",
    "end": "1370640"
  },
  {
    "text": "if you have any questions and want to",
    "start": "1370640",
    "end": "1372080"
  },
  {
    "text": "talk more about it that's a good place",
    "start": "1372080",
    "end": "1373340"
  },
  {
    "text": "to do it or just to talk about Walzem in",
    "start": "1373340",
    "end": "1375080"
  },
  {
    "text": "general with everyone",
    "start": "1375080",
    "end": "1377360"
  },
  {
    "text": "and are there any questions",
    "start": "1377360",
    "end": "1380900"
  },
  {
    "text": "let's give a kid a huge round of",
    "start": "1380900",
    "end": "1382580"
  },
  {
    "text": "applause everyone",
    "start": "1382580",
    "end": "1385059"
  },
  {
    "text": "questions",
    "start": "1389000",
    "end": "1391539"
  },
  {
    "text": "so introduce yourself please",
    "start": "1396799",
    "end": "1400000"
  },
  {
    "text": "hi I'm Frank",
    "start": "1400039",
    "end": "1401900"
  },
  {
    "text": "um I would like most micro most serifs I",
    "start": "1401900",
    "end": "1405440"
  },
  {
    "text": "come across that I need to reach out to",
    "start": "1405440",
    "end": "1407299"
  },
  {
    "text": "something a database another service",
    "start": "1407299",
    "end": "1408919"
  },
  {
    "text": "something is there some way to keep",
    "start": "1408919",
    "end": "1411260"
  },
  {
    "text": "connections hot because doing a news",
    "start": "1411260",
    "end": "1413720"
  },
  {
    "text": "handshake or especially if it's TLS",
    "start": "1413720",
    "end": "1415960"
  },
  {
    "text": "takes a lot of time",
    "start": "1415960",
    "end": "1418760"
  },
  {
    "text": "um okay so I think the question was uh I",
    "start": "1418760",
    "end": "1421700"
  },
  {
    "text": "need to reach out to something so I have",
    "start": "1421700",
    "end": "1423260"
  },
  {
    "text": "to make that request make that handshake",
    "start": "1423260",
    "end": "1425240"
  },
  {
    "text": "how do I keep the all of these instances",
    "start": "1425240",
    "end": "1427820"
  },
  {
    "text": "hot was that your question",
    "start": "1427820",
    "end": "1429799"
  },
  {
    "text": "um so I my answer to that is that it",
    "start": "1429799",
    "end": "1432260"
  },
  {
    "text": "doesn't need to be hot so there's",
    "start": "1432260",
    "end": "1433700"
  },
  {
    "text": "something that you're hitting when you",
    "start": "1433700",
    "end": "1435020"
  },
  {
    "text": "hit that application that spin app",
    "start": "1435020",
    "end": "1436460"
  },
  {
    "text": "endpoint what you're hitting is spin",
    "start": "1436460",
    "end": "1438620"
  },
  {
    "text": "itself so spin's listening and when you",
    "start": "1438620",
    "end": "1440900"
  },
  {
    "text": "hit it with a certain endpoint it'll",
    "start": "1440900",
    "end": "1442520"
  },
  {
    "text": "know which app which webassembly",
    "start": "1442520",
    "end": "1444679"
  },
  {
    "text": "application to invoke based on the",
    "start": "1444679",
    "end": "1446960"
  },
  {
    "text": "endpoint URL so spin is what is",
    "start": "1446960",
    "end": "1449059"
  },
  {
    "text": "listening what is all what is that HTTP",
    "start": "1449059",
    "end": "1451159"
  },
  {
    "text": "server that's spin which is just a",
    "start": "1451159",
    "end": "1453740"
  },
  {
    "text": "native binary and when it gets a request",
    "start": "1453740",
    "end": "1455780"
  },
  {
    "text": "a triggered event for that HTTP endpoint",
    "start": "1455780",
    "end": "1458780"
  },
  {
    "text": "for that application that's what then",
    "start": "1458780",
    "end": "1460640"
  },
  {
    "text": "spins up or runs that webassembly module",
    "start": "1460640",
    "end": "1463159"
  },
  {
    "text": "if that answers your question does that",
    "start": "1463159",
    "end": "1465440"
  },
  {
    "text": "get to it okay",
    "start": "1465440",
    "end": "1468158"
  },
  {
    "text": "another one in the back here",
    "start": "1468620",
    "end": "1471620"
  },
  {
    "text": "so Larry corvallo with robust Cloud you",
    "start": "1471620",
    "end": "1474260"
  },
  {
    "text": "compared",
    "start": "1474260",
    "end": "1476140"
  },
  {
    "text": "firecracker and was",
    "start": "1476140",
    "end": "1479120"
  },
  {
    "text": "what are other companies doing other",
    "start": "1479120",
    "end": "1481280"
  },
  {
    "text": "than Amazon who uses firecracker what is",
    "start": "1481280",
    "end": "1483500"
  },
  {
    "text": "Microsoft doing Google doing and in that",
    "start": "1483500",
    "end": "1486260"
  },
  {
    "text": "context why cannot they start offering",
    "start": "1486260",
    "end": "1489679"
  },
  {
    "text": "was the or wasm on their uh you know",
    "start": "1489679",
    "end": "1493580"
  },
  {
    "text": "platforms instead of firecracker yeah um",
    "start": "1493580",
    "end": "1497299"
  },
  {
    "text": "so I cannot speak for uh why or whether",
    "start": "1497299",
    "end": "1501620"
  },
  {
    "text": "there will be support in some of the big",
    "start": "1501620",
    "end": "1503900"
  },
  {
    "text": "cloud providers for switching to kind of",
    "start": "1503900",
    "end": "1506539"
  },
  {
    "text": "fast with webassembly",
    "start": "1506539",
    "end": "1508340"
  },
  {
    "text": "um I would expect given the criteria",
    "start": "1508340",
    "end": "1510440"
  },
  {
    "text": "that firecracker had with these being",
    "start": "1510440",
    "end": "1512840"
  },
  {
    "text": "the criteria and seeing where",
    "start": "1512840",
    "end": "1513980"
  },
  {
    "text": "webassembly stands I can see that being",
    "start": "1513980",
    "end": "1516140"
  },
  {
    "text": "an obvious next step is supporting",
    "start": "1516140",
    "end": "1517880"
  },
  {
    "text": "webassembly as for what other Cloud",
    "start": "1517880",
    "end": "1520280"
  },
  {
    "text": "providers are using besides micro VMS",
    "start": "1520280",
    "end": "1522320"
  },
  {
    "text": "I'm actually not positive on that one so",
    "start": "1522320",
    "end": "1524179"
  },
  {
    "text": "what Azure functions is I'm not sure but",
    "start": "1524179",
    "end": "1526340"
  },
  {
    "text": "I know we have some Microsoft folks here",
    "start": "1526340",
    "end": "1528260"
  },
  {
    "text": "who might be able to answer that one",
    "start": "1528260",
    "end": "1531020"
  },
  {
    "text": "hi I'm Evan",
    "start": "1531020",
    "end": "1532940"
  },
  {
    "text": "um I might get this wrong but since",
    "start": "1532940",
    "end": "1535340"
  },
  {
    "text": "you're saying spin is the listener do",
    "start": "1535340",
    "end": "1537620"
  },
  {
    "text": "you have any measurements or how much",
    "start": "1537620",
    "end": "1539360"
  },
  {
    "text": "the latency is for the request that that",
    "start": "1539360",
    "end": "1542059"
  },
  {
    "text": "takes so you can still maintain a low",
    "start": "1542059",
    "end": "1544779"
  },
  {
    "text": "millisecond rate when you spin up stuff",
    "start": "1544779",
    "end": "1547760"
  },
  {
    "text": "sorry I didn't fully hear that um were",
    "start": "1547760",
    "end": "1550279"
  },
  {
    "text": "you asking if spin is the listener how",
    "start": "1550279",
    "end": "1552140"
  },
  {
    "text": "long does it take for spin to then yeah",
    "start": "1552140",
    "end": "1553880"
  },
  {
    "text": "because it has to be some latencies in",
    "start": "1553880",
    "end": "1555679"
  },
  {
    "text": "spin is listening and then it starts the",
    "start": "1555679",
    "end": "1557659"
  },
  {
    "text": "the",
    "start": "1557659",
    "end": "1558679"
  },
  {
    "text": "um the machines yes and and what the",
    "start": "1558679",
    "end": "1562159"
  },
  {
    "text": "measurements are for that great uh",
    "start": "1562159",
    "end": "1564080"
  },
  {
    "text": "that's a great question so",
    "start": "1564080",
    "end": "1565820"
  },
  {
    "text": "um how long just to repeat it how long",
    "start": "1565820",
    "end": "1567320"
  },
  {
    "text": "does it take for spin to then invoke the",
    "start": "1567320",
    "end": "1569539"
  },
  {
    "text": "webassembly module what is the latency",
    "start": "1569539",
    "end": "1571159"
  },
  {
    "text": "there so from spin then executing the",
    "start": "1571159",
    "end": "1574279"
  },
  {
    "text": "module",
    "start": "1574279",
    "end": "1575299"
  },
  {
    "text": "um that itself is a call to a component",
    "start": "1575299",
    "end": "1577400"
  },
  {
    "text": "using the webassembly component",
    "start": "1577400",
    "end": "1580159"
  },
  {
    "text": "um interface so that itself is uh is",
    "start": "1580159",
    "end": "1583220"
  },
  {
    "text": "also microseconds so from calling spin",
    "start": "1583220",
    "end": "1586039"
  },
  {
    "text": "to then run the application is still",
    "start": "1586039",
    "end": "1588679"
  },
  {
    "text": "um milliseconds and sub millisecond",
    "start": "1588679",
    "end": "1591380"
  },
  {
    "text": "times as for how long does it take me as",
    "start": "1591380",
    "end": "1593840"
  },
  {
    "text": "a user of fermion cloud to call a spin",
    "start": "1593840",
    "end": "1597260"
  },
  {
    "text": "application and get the response that's",
    "start": "1597260",
    "end": "1599539"
  },
  {
    "text": "in the 52 millisecond range and that's",
    "start": "1599539",
    "end": "1601640"
  },
  {
    "text": "because when we bring in cloud services",
    "start": "1601640",
    "end": "1603080"
  },
  {
    "text": "like traffic and TLS handshakes that's",
    "start": "1603080",
    "end": "1605240"
  },
  {
    "text": "when it starts to get heavier and that's",
    "start": "1605240",
    "end": "1606919"
  },
  {
    "text": "where us personally looking at trying to",
    "start": "1606919",
    "end": "1608720"
  },
  {
    "text": "optimize that",
    "start": "1608720",
    "end": "1611380"
  },
  {
    "text": "um",
    "start": "1613279",
    "end": "1614679"
  },
  {
    "text": "and today we learned a lot a lot about",
    "start": "1614679",
    "end": "1618380"
  },
  {
    "text": "wasm and runtime the resolution my",
    "start": "1618380",
    "end": "1622100"
  },
  {
    "text": "question is more about the ecosystem for",
    "start": "1622100",
    "end": "1625039"
  },
  {
    "text": "example",
    "start": "1625039",
    "end": "1626840"
  },
  {
    "text": "a cloud function I will use for example",
    "start": "1626840",
    "end": "1629600"
  },
  {
    "text": "sending an email a postgres SQL what is",
    "start": "1629600",
    "end": "1633020"
  },
  {
    "text": "the status of the art of integration or",
    "start": "1633020",
    "end": "1636260"
  },
  {
    "text": "such a library we will usually use",
    "start": "1636260",
    "end": "1640580"
  },
  {
    "text": "okay so make sure I understand the",
    "start": "1640580",
    "end": "1642140"
  },
  {
    "text": "question are you asking I have my",
    "start": "1642140",
    "end": "1643760"
  },
  {
    "text": "favorite libraries can I go ahead and",
    "start": "1643760",
    "end": "1645620"
  },
  {
    "text": "use them with webassembly today yeah",
    "start": "1645620",
    "end": "1647659"
  },
  {
    "text": "that's it",
    "start": "1647659",
    "end": "1649100"
  },
  {
    "text": "um so I think that ties into kind of the",
    "start": "1649100",
    "end": "1651260"
  },
  {
    "text": "of the six criteria the compatibility",
    "start": "1651260",
    "end": "1653299"
  },
  {
    "text": "block for serverless",
    "start": "1653299",
    "end": "1655059"
  },
  {
    "text": "and right now the webassembly systems",
    "start": "1655059",
    "end": "1657740"
  },
  {
    "text": "interface is definitely under",
    "start": "1657740",
    "end": "1658820"
  },
  {
    "text": "development there are some capabilities",
    "start": "1658820",
    "end": "1661220"
  },
  {
    "text": "that aren't there yet for example",
    "start": "1661220",
    "end": "1663260"
  },
  {
    "text": "multi-threading so your favorite",
    "start": "1663260",
    "end": "1665720"
  },
  {
    "text": "libraries might not yet be supported by",
    "start": "1665720",
    "end": "1667520"
  },
  {
    "text": "Wazi so I think that is definitely",
    "start": "1667520",
    "end": "1669440"
  },
  {
    "text": "something to check in the ability to",
    "start": "1669440",
    "end": "1671179"
  },
  {
    "text": "Port your everyday application to",
    "start": "1671179",
    "end": "1673100"
  },
  {
    "text": "webassembly might not be there",
    "start": "1673100",
    "end": "1674600"
  },
  {
    "text": "especially if it's a stateful",
    "start": "1674600",
    "end": "1676059"
  },
  {
    "text": "long-running application that does a lot",
    "start": "1676059",
    "end": "1678140"
  },
  {
    "text": "of things however if you're already in",
    "start": "1678140",
    "end": "1680240"
  },
  {
    "text": "kind of a serverless function functions",
    "start": "1680240",
    "end": "1682640"
  },
  {
    "text": "of the service event driven Handler",
    "start": "1682640",
    "end": "1684320"
  },
  {
    "text": "Paradigm the likelihood that you're able",
    "start": "1684320",
    "end": "1686000"
  },
  {
    "text": "to Port it is probably higher just",
    "start": "1686000",
    "end": "1687440"
  },
  {
    "text": "because of what those applications tend",
    "start": "1687440",
    "end": "1690020"
  },
  {
    "text": "to do is much simpler",
    "start": "1690020",
    "end": "1693159"
  },
  {
    "text": "these are great questions anyone else oh",
    "start": "1694760",
    "end": "1696320"
  },
  {
    "text": "I want to print here I'm sorry",
    "start": "1696320",
    "end": "1698539"
  },
  {
    "text": "okay you're doing awesome thank you yeah",
    "start": "1698539",
    "end": "1700640"
  },
  {
    "text": "you're getting really great questions",
    "start": "1700640",
    "end": "1701720"
  },
  {
    "text": "today",
    "start": "1701720",
    "end": "1704020"
  },
  {
    "text": "hello Kate thanks for the talk I really",
    "start": "1704539",
    "end": "1706940"
  },
  {
    "text": "love the reference to the equation of",
    "start": "1706940",
    "end": "1709400"
  },
  {
    "text": "the green software foundation in the",
    "start": "1709400",
    "end": "1710900"
  },
  {
    "text": "beginning",
    "start": "1710900",
    "end": "1712159"
  },
  {
    "text": "um you mentioned that the scale to zero",
    "start": "1712159",
    "end": "1714200"
  },
  {
    "text": "will reduce the operative energy but the",
    "start": "1714200",
    "end": "1718159"
  },
  {
    "text": "embodied emotions for the hardware I",
    "start": "1718159",
    "end": "1720679"
  },
  {
    "text": "need and they also reduce because I need",
    "start": "1720679",
    "end": "1723380"
  },
  {
    "text": "less Hardware in the end",
    "start": "1723380",
    "end": "1725240"
  },
  {
    "text": "yeah so the question was we saw that",
    "start": "1725240",
    "end": "1728000"
  },
  {
    "text": "calculation for the software carbon",
    "start": "1728000",
    "end": "1730960"
  },
  {
    "text": "intensity and we saw operational",
    "start": "1730960",
    "end": "1733100"
  },
  {
    "text": "emissions is obvious that scaling zero",
    "start": "1733100",
    "end": "1735260"
  },
  {
    "text": "what about embodied emissions so",
    "start": "1735260",
    "end": "1737659"
  },
  {
    "text": "embodied emissions the point I was",
    "start": "1737659",
    "end": "1739159"
  },
  {
    "text": "trying to make there is that when we",
    "start": "1739159",
    "end": "1740720"
  },
  {
    "text": "have",
    "start": "1740720",
    "end": "1741799"
  },
  {
    "text": "um high multi-tenancy with serverless we",
    "start": "1741799",
    "end": "1744380"
  },
  {
    "text": "don't need as much Hardware because the",
    "start": "1744380",
    "end": "1746000"
  },
  {
    "text": "idea is that each one of those workloads",
    "start": "1746000",
    "end": "1747679"
  },
  {
    "text": "is uncorrelated so we can have that soft",
    "start": "1747679",
    "end": "1750200"
  },
  {
    "text": "uh soft allocation where we can over",
    "start": "1750200",
    "end": "1752960"
  },
  {
    "text": "commit resources because the assumption",
    "start": "1752960",
    "end": "1755240"
  },
  {
    "text": "is we're only hitting certain things at",
    "start": "1755240",
    "end": "1757220"
  },
  {
    "text": "certain times and that's not correlated",
    "start": "1757220",
    "end": "1759200"
  },
  {
    "text": "time periods does that answer the",
    "start": "1759200",
    "end": "1761120"
  },
  {
    "text": "question",
    "start": "1761120",
    "end": "1763360"
  }
]