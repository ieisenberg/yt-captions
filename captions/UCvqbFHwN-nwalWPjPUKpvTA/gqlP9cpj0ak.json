[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "good morning folks um hi my name is uh puja gombre i work as a software",
    "start": "799",
    "end": "5839"
  },
  {
    "text": "engineer at platform line systems and today i'm gonna talk about uh how do you deploy virtual network functions",
    "start": "5839",
    "end": "12480"
  },
  {
    "text": "with kubernetes parts and vms so the agenda this uh session is to cover the",
    "start": "12480",
    "end": "18560"
  },
  {
    "text": "following items uh firstly and talk about uh virtual network functions in",
    "start": "18560",
    "end": "23680"
  },
  {
    "text": "general like what it really means and what are the advantages of running",
    "start": "23680",
    "end": "29359"
  },
  {
    "text": "virtual network functions and what kind of application performance enhancements we can do use",
    "start": "29359",
    "end": "37120"
  },
  {
    "text": "the two technologies here one being sriov and after that we'll",
    "start": "37120",
    "end": "42480"
  },
  {
    "text": "talk about obvious dpdk for each of these technologies i'll talk about",
    "start": "42480",
    "end": "48000"
  },
  {
    "text": "at a high level what it really means how do you really deploy it on a",
    "start": "48000",
    "end": "53760"
  },
  {
    "text": "kubernetes cluster in terms of any kind of configuration that needs to be done",
    "start": "53760",
    "end": "58879"
  },
  {
    "text": "on the host and once that is done uh how do you actually deploy a vnf application using",
    "start": "58879",
    "end": "66400"
  },
  {
    "text": "the kuford virtual machine platform here and i'll do a quick demo after that",
    "start": "66400",
    "end": "72720"
  },
  {
    "text": "demonstrating uh vnf applications or other vms and",
    "start": "72720",
    "end": "78080"
  },
  {
    "text": "parts that can be created using sriv and dpdk networks",
    "start": "78080",
    "end": "84080"
  },
  {
    "text": "so let's get right into it uh so firstly uh what's a virtual",
    "start": "84080",
    "end": "90000"
  },
  {
    "start": "87000",
    "end": "309000"
  },
  {
    "text": "network function right so uh network functions are basically all the networking capabilities that you",
    "start": "90000",
    "end": "97040"
  },
  {
    "text": "typically expect from uh expect to run on hardware that's dedicated for",
    "start": "97040",
    "end": "104240"
  },
  {
    "text": "running such kind of applications and virtual networks is a new way of kind of doing it",
    "start": "104240",
    "end": "113119"
  },
  {
    "text": "using the virtualization layer and there are several advantages to it that we'll talk about next",
    "start": "113119",
    "end": "118320"
  },
  {
    "text": "um before we get into that uh we hear these terms nfvs and vnfs a lot so i",
    "start": "118320",
    "end": "124000"
  },
  {
    "text": "just want to first kind of give an introduction to what's a network function virtualization or nfb",
    "start": "124000",
    "end": "130640"
  },
  {
    "text": "in short and then move on to vnf's so nfv is basically the architectural",
    "start": "130640",
    "end": "137760"
  },
  {
    "text": "concept where it allows you to abstract away network functions from the physical",
    "start": "137760",
    "end": "144080"
  },
  {
    "text": "hardware like i mentioned in the past a few years back you would have dedicated hardware that's very",
    "start": "144080",
    "end": "150959"
  },
  {
    "text": "specialized and capable of running these network functions like routing and firewall and",
    "start": "150959",
    "end": "156160"
  },
  {
    "text": "security right all of those applications and the new way of doing it is using",
    "start": "156160",
    "end": "162560"
  },
  {
    "text": "virtual uh software based applications uh so nfv is more of the",
    "start": "162560",
    "end": "168720"
  },
  {
    "text": "entire architectural paradigm and in terms of the three basic components of",
    "start": "168720",
    "end": "174400"
  },
  {
    "text": "that uh these are the three framework level components first being the actual application which",
    "start": "174400",
    "end": "180800"
  },
  {
    "text": "is your virtualized network functions so that's vnfs",
    "start": "180800",
    "end": "186319"
  },
  {
    "text": "secondly for running these applications you need a infrastructure to run it on so that's",
    "start": "186319",
    "end": "191760"
  },
  {
    "text": "the nfv infrastructure or nfvi and lastly the management automation and",
    "start": "191760",
    "end": "198800"
  },
  {
    "text": "network orchestration layer which is basically um abbreviated as manual here and",
    "start": "198800",
    "end": "206319"
  },
  {
    "text": "i'll talk briefly about all of them right so uh with the telco cloud uh",
    "start": "206319",
    "end": "212080"
  },
  {
    "text": "this is like the new uh way of doing it without having uh",
    "start": "212080",
    "end": "217840"
  },
  {
    "text": "dedicated hardware for each network function and the primary goal is to improve uh agility and scalability for",
    "start": "217840",
    "end": "225760"
  },
  {
    "text": "for different telco service providers right for being able to add new applications on",
    "start": "225760",
    "end": "232159"
  },
  {
    "text": "demand and that shouldn't require uh additional hardware resources",
    "start": "232159",
    "end": "238239"
  },
  {
    "text": "so if we talk about vnfs uh these are the software applications that would",
    "start": "238239",
    "end": "244000"
  },
  {
    "text": "deliver functions such as file sharing directory services routing",
    "start": "244000",
    "end": "250000"
  },
  {
    "text": "firewall mechanisms and all of that so there could be different applications that you",
    "start": "250000",
    "end": "255040"
  },
  {
    "text": "can run as vnfs and this could run either in a virtual machine or a kubernetes part",
    "start": "255040",
    "end": "262240"
  },
  {
    "text": "ah the next thing in terms of the infrastructure the nfbi components uh",
    "start": "262240",
    "end": "268560"
  },
  {
    "text": "the three basic ones would be compute storage and networking and in terms of uh the hypervisor it could",
    "start": "268560",
    "end": "275600"
  },
  {
    "text": "either be running on kvm or vmware uh any of those or or a container management platform like",
    "start": "275600",
    "end": "282479"
  },
  {
    "text": "kubernetes with kufort so apart from running these",
    "start": "282479",
    "end": "288720"
  },
  {
    "text": "network apps you also need a framework that's capable of managing the nfv",
    "start": "288720",
    "end": "294080"
  },
  {
    "text": "infrastructure itself and secondly also handle the life cycle of these new vnfs",
    "start": "294080",
    "end": "299680"
  },
  {
    "text": "that are getting deployed so that's the third component the management automation and network orchestration",
    "start": "299680",
    "end": "305199"
  },
  {
    "text": "layer uh now we spoke briefly about what vnfs",
    "start": "305199",
    "end": "313120"
  },
  {
    "start": "309000",
    "end": "377000"
  },
  {
    "text": "are and uh primarily uh they they are applications that run on",
    "start": "313120",
    "end": "318800"
  },
  {
    "text": "top of this nfv infrastructure like i said and mostly they are going to be deployed as",
    "start": "318800",
    "end": "324320"
  },
  {
    "text": "virtual machines and that's the vnf part of it and corresponding to that there's",
    "start": "324320",
    "end": "329919"
  },
  {
    "text": "also a cnf technology which basically runs it on containers um the common vnf applications that i",
    "start": "329919",
    "end": "336720"
  },
  {
    "text": "spoke about these are just some examples that you can run",
    "start": "336720",
    "end": "342080"
  },
  {
    "text": "and the goal here is to not run it as one monolithic vm right so the way it kind",
    "start": "342080",
    "end": "349039"
  },
  {
    "text": "of does it is by doing a service chaining in the sense that you can have different functions run as part of",
    "start": "349039",
    "end": "355520"
  },
  {
    "text": "independent network functions and you can kind of put them together as building",
    "start": "355520",
    "end": "361759"
  },
  {
    "text": "blocks in a process and the service chaining is the entire",
    "start": "361759",
    "end": "366960"
  },
  {
    "text": "of the entire network function components is something that you can simplify using vnf",
    "start": "366960",
    "end": "373280"
  },
  {
    "text": "technology so what are the benefits of using vns so",
    "start": "373280",
    "end": "381440"
  },
  {
    "start": "377000",
    "end": "500000"
  },
  {
    "text": "network functions have always been there right and uh with proprietary hardware you you could get a good performance out",
    "start": "381440",
    "end": "387759"
  },
  {
    "text": "of these applications the the problem there was that it kind of becomes monolithic at a certain point",
    "start": "387759",
    "end": "395039"
  },
  {
    "text": "and scaling individual components is a problem so with virtual network",
    "start": "395039",
    "end": "401039"
  },
  {
    "text": "functions you get improved network scalability because each of the network function is running on its own vm has",
    "start": "401039",
    "end": "408479"
  },
  {
    "text": "its own resources and you can enable it disable it or manage it as needed independent of any other components in",
    "start": "408479",
    "end": "415360"
  },
  {
    "text": "that service chain secondly because you're able to run it as vms for example you can pack more",
    "start": "415360",
    "end": "422880"
  },
  {
    "text": "number of vms on a given hypervisor in that case and with that density of vms",
    "start": "422880",
    "end": "429520"
  },
  {
    "text": "you get an efficient use out of your whole infrastructure right so it's getting utilized to its maximum",
    "start": "429520",
    "end": "435599"
  },
  {
    "text": "potential with that the other advantage of doing that is because you are relying on maybe lesser",
    "start": "435599",
    "end": "443599"
  },
  {
    "text": "commodity hardware because you are running it with either containers or vms",
    "start": "443599",
    "end": "449360"
  },
  {
    "text": "the power utilization of your data center goes down drastically so that that's another side benefit of it",
    "start": "449360",
    "end": "455759"
  },
  {
    "text": "uh you can also implement better security policies uh with vns because we have more fine grained control over each",
    "start": "455759",
    "end": "462400"
  },
  {
    "text": "of the functions obviously this saves on any physical",
    "start": "462400",
    "end": "468080"
  },
  {
    "text": "space in your data center that you would have otherwise needed if you have like a",
    "start": "468080",
    "end": "473599"
  },
  {
    "text": "hardware setup right any hardware appliances for each of your functions",
    "start": "473599",
    "end": "478639"
  },
  {
    "text": "apart from all of that in terms of operational and capital expenses for",
    "start": "478639",
    "end": "484479"
  },
  {
    "text": "running a data center with a telco cloud you can get significant savings with",
    "start": "484479",
    "end": "490240"
  },
  {
    "text": "running it as a virtual network function uh so so these are some of the uh benefits that you you would achieve with",
    "start": "490240",
    "end": "497039"
  },
  {
    "text": "the vnf deployment and in terms of",
    "start": "497039",
    "end": "502560"
  },
  {
    "start": "500000",
    "end": "585000"
  },
  {
    "text": "optimizing the performance of the vnf applications itself the primary goal here is",
    "start": "502560",
    "end": "509919"
  },
  {
    "text": "how do you get heavy network traffic optimized for vnf applications when you",
    "start": "509919",
    "end": "516560"
  },
  {
    "text": "have multiple vms running on a hypervisor in your cloud since in our nfv environment there are",
    "start": "516560",
    "end": "523120"
  },
  {
    "text": "going to be multiple individual vnfs that are joined together and you're trying to create a single kind of a",
    "start": "523120",
    "end": "530240"
  },
  {
    "text": "super meta service out of it you're looking at the efficient memory",
    "start": "530240",
    "end": "535279"
  },
  {
    "text": "access and resource allocation over for an aggregated system right and",
    "start": "535279",
    "end": "540880"
  },
  {
    "text": "when you're dealing with a high amount of uh network traffic uh what you would",
    "start": "540880",
    "end": "546240"
  },
  {
    "text": "the performance that you would achieve with the native linux kernel stack that's that's not gonna suffice in this case because",
    "start": "546240",
    "end": "553440"
  },
  {
    "text": "uh the number more the number of vnfs that you pack on a single host it's gonna",
    "start": "553440",
    "end": "558560"
  },
  {
    "text": "drive up the aggregate usage to a very high level that cannot be met by standard linux stack",
    "start": "558560",
    "end": "565600"
  },
  {
    "text": "so the sriv and dptk are two kind of solutions that can be used either independently of",
    "start": "565600",
    "end": "572800"
  },
  {
    "text": "each other or in a combination and that helps you achieve like faster packet",
    "start": "572800",
    "end": "578320"
  },
  {
    "text": "processing that's needed by these vnf applications",
    "start": "578320",
    "end": "583279"
  },
  {
    "start": "585000",
    "end": "748000"
  },
  {
    "text": "so first let's talk about sriv so that stands for single root i o",
    "start": "585120",
    "end": "591680"
  },
  {
    "text": "virtualization and with sriv the benefit that you get is",
    "start": "591680",
    "end": "597920"
  },
  {
    "text": "you can have dedicated pci devices for each of your virtual machines and",
    "start": "597920",
    "end": "605440"
  },
  {
    "text": "the the advantage that you get out of that is because you're creating multiple virtual functions",
    "start": "605440",
    "end": "611440"
  },
  {
    "text": "outside of out of a single pci device you can allocate them to independent vnfs and",
    "start": "611440",
    "end": "618240"
  },
  {
    "text": "not have any overlap between them so this kind of gives you a good isolation of the resources and and it's better for",
    "start": "618240",
    "end": "625600"
  },
  {
    "text": "performance as well as security reasons and it's also easier to manage because",
    "start": "625600",
    "end": "630959"
  },
  {
    "text": "you can basically deploy one bnf independent of the other",
    "start": "630959",
    "end": "636399"
  },
  {
    "text": "and add or remove sriv networks to it as required",
    "start": "636399",
    "end": "641760"
  },
  {
    "text": "the performance benefit that srav gains it comes from the basic fact that in",
    "start": "641760",
    "end": "647120"
  },
  {
    "text": "this case it's by the network traffic is bypassing your hypervisor and",
    "start": "647120",
    "end": "652640"
  },
  {
    "text": "without getting any kernel interrupts uh for any data data that comes in or out",
    "start": "652640",
    "end": "658800"
  },
  {
    "text": "of the vm you are able to access the nic directly and that that's primarily how it it's",
    "start": "658800",
    "end": "665440"
  },
  {
    "text": "able to give you faster packet switching to actually run sriv on a host",
    "start": "665440",
    "end": "672160"
  },
  {
    "text": "you need support in the bios level as well as at the operating system so those",
    "start": "672160",
    "end": "677680"
  },
  {
    "text": "are kind of the two two requirements for running it and uh in terms of",
    "start": "677680",
    "end": "682800"
  },
  {
    "text": "uh how it's presented to a vm uh it doesn't really make a difference",
    "start": "682800",
    "end": "688640"
  },
  {
    "text": "to the vm because it's it's on the host level that you are kind of slicing a pci",
    "start": "688640",
    "end": "694079"
  },
  {
    "text": "device into multiple virtual functions but from the guest point of view it's only going to see it as on the neck card",
    "start": "694079",
    "end": "701279"
  },
  {
    "text": "so the application running inside it does not really change change a whole lot",
    "start": "701279",
    "end": "707519"
  },
  {
    "text": "uh in terms of the terminology used here the physical functions are basically",
    "start": "707519",
    "end": "713680"
  },
  {
    "text": "your full featured pci functions and when i say full feature it basically means it comes with its own set of",
    "start": "713680",
    "end": "721360"
  },
  {
    "text": "configurations right you can configure the pci device and each individual pf",
    "start": "721360",
    "end": "727440"
  },
  {
    "text": "when you slice it into multiple virtual functions these are lightweight pc functions in",
    "start": "727440",
    "end": "733040"
  },
  {
    "text": "the sense that you don't have the same configuration capabilities that",
    "start": "733040",
    "end": "738079"
  },
  {
    "text": "you would get with the pf's so they're kind of uniform in terms of the device type that that would match the physical",
    "start": "738079",
    "end": "745519"
  },
  {
    "text": "function that you have so this is just a pictorial view to kind",
    "start": "745519",
    "end": "750720"
  },
  {
    "start": "748000",
    "end": "800000"
  },
  {
    "text": "of uh explain how sriv really helps you bypass the hypervisor",
    "start": "750720",
    "end": "757440"
  },
  {
    "text": "in this case for instance if you had a vm utilizing the ovs bridge",
    "start": "757440",
    "end": "764240"
  },
  {
    "text": "that's the open vswitch bridge on the hypervisor without srlv any data packets that come",
    "start": "764240",
    "end": "771920"
  },
  {
    "text": "in or out of the vm that would create a kernel interrupt and",
    "start": "771920",
    "end": "777040"
  },
  {
    "text": "when it processes that there's obviously a switching overhead that happens and that slows down the network",
    "start": "777040",
    "end": "783839"
  },
  {
    "text": "performance network through portrait so with sriv because you are giving each",
    "start": "783839",
    "end": "789360"
  },
  {
    "text": "virtual function direct access to the nic the network throughput increases",
    "start": "789360",
    "end": "794560"
  },
  {
    "text": "significantly and that's how your vnfs can benefit from that",
    "start": "794560",
    "end": "800160"
  },
  {
    "start": "800000",
    "end": "1051000"
  },
  {
    "text": "uh now when we talk about uh deploying vnf apps on the",
    "start": "800160",
    "end": "807120"
  },
  {
    "text": "virtualization platform uh the solution that we are looking at here is keyboard which is a virtual machine",
    "start": "807120",
    "end": "814000"
  },
  {
    "text": "framework that runs on top of kubernetes with huford there is inbuilt support for",
    "start": "814000",
    "end": "820240"
  },
  {
    "text": "sriv you just need to enable a feature flag for enabling that and once that is done in",
    "start": "820240",
    "end": "827440"
  },
  {
    "text": "terms of actually being able to use sriv there are certain plugins that you also need",
    "start": "827440",
    "end": "832720"
  },
  {
    "text": "on your kubernetes cluster uh the first one of them is the sriv",
    "start": "832720",
    "end": "839040"
  },
  {
    "text": "device plugin slav device plugin is the one that's",
    "start": "839040",
    "end": "844800"
  },
  {
    "text": "responsible for uh kind of detecting and uh discovering the any srav resources that are",
    "start": "844800",
    "end": "851920"
  },
  {
    "text": "available on a host once it detects that it also advertises them to kubernetes and the resource",
    "start": "851920",
    "end": "858959"
  },
  {
    "text": "kubernetes resource manager will then allocate them as it's requested by any parts and vms",
    "start": "858959",
    "end": "865279"
  },
  {
    "text": "uh so this is a read-only kind of service in the sense that it won't",
    "start": "865279",
    "end": "870480"
  },
  {
    "text": "modify anything on the host in actual actuality and the only thing that it",
    "start": "870480",
    "end": "875839"
  },
  {
    "text": "does is basically advertises these resources and updates the",
    "start": "875839",
    "end": "881040"
  },
  {
    "text": "capacity section of each cluster node so that that can be used by the kubernetes scheduler when",
    "start": "881040",
    "end": "887440"
  },
  {
    "text": "allocating resources to vms for",
    "start": "887440",
    "end": "893120"
  },
  {
    "text": "any virtual machines that you run on qport it allocates a vfio device",
    "start": "893120",
    "end": "899920"
  },
  {
    "text": "uh for each of those parts and this is the only driver that that is supported",
    "start": "899920",
    "end": "905440"
  },
  {
    "text": "today with keyboard uh secondly there's the sriv cni plugin",
    "start": "905440",
    "end": "912399"
  },
  {
    "text": "so this is the plugin that's responsible for actually configuring whatever sriv resources",
    "start": "912399",
    "end": "919360"
  },
  {
    "text": "allocated to a specific vm and in terms of configuring it will",
    "start": "919360",
    "end": "924399"
  },
  {
    "text": "kind of modify the host resources to prepare them to be used for a virtual",
    "start": "924399",
    "end": "929519"
  },
  {
    "text": "machine instance so so this is this is not a read-only plugin in that sense",
    "start": "929519",
    "end": "935199"
  },
  {
    "text": "and what whatever commands it runs it basically uses uh net link etcetera to",
    "start": "935199",
    "end": "942079"
  },
  {
    "text": "move these sriv virtual functions into specific pod namespaces so depending on",
    "start": "942079",
    "end": "948000"
  },
  {
    "text": "the namespace in which you are creating a vm it will allocate um it will run the",
    "start": "948000",
    "end": "953759"
  },
  {
    "text": "net link command and move over any virtual function or physical function into the respective namespace",
    "start": "953759",
    "end": "962160"
  },
  {
    "text": "um lastly multis so multis is more like a meta plugin so when you create a",
    "start": "962160",
    "end": "969600"
  },
  {
    "text": "network attachment definition in cube word or in kubernetes you can basically",
    "start": "969600",
    "end": "974880"
  },
  {
    "text": "use markers with the sri vcni plugin whenever you attach a vmi to a sriv",
    "start": "974880",
    "end": "981680"
  },
  {
    "text": "interface so this is something that's part of the network attachment definition crd object that i'll show",
    "start": "981680",
    "end": "988800"
  },
  {
    "text": "shortly and what it basically helps with is",
    "start": "988800",
    "end": "994160"
  },
  {
    "text": "it identifies the object annotations and based on the resource name that you",
    "start": "994160",
    "end": "999600"
  },
  {
    "text": "configure when you uh set up the device plugin and whatever reference you put in there",
    "start": "999600",
    "end": "1006079"
  },
  {
    "text": "keyword is automatically able to fill that in and the word launcher part that",
    "start": "1006079",
    "end": "1011759"
  },
  {
    "text": "is running a specific vm and it would go ahead and update the requests and limit section for those",
    "start": "1011759",
    "end": "1018399"
  },
  {
    "text": "parts there uh so by by using multis in combination",
    "start": "1018399",
    "end": "1023839"
  },
  {
    "text": "with the srlv device plugin the resource name annotation is",
    "start": "1023839",
    "end": "1028959"
  },
  {
    "text": "something that the pod will receive a device from the pool that is allocated by the device plugin",
    "start": "1028959",
    "end": "1036000"
  },
  {
    "text": "and this allows any uh this allows us to basically avoid any manual intervention",
    "start": "1036000",
    "end": "1041760"
  },
  {
    "text": "and passing in the required pci address so this kind of simplifies the process",
    "start": "1041760",
    "end": "1046798"
  },
  {
    "text": "of a lot uh in terms of any",
    "start": "1046799",
    "end": "1053600"
  },
  {
    "start": "1051000",
    "end": "1163000"
  },
  {
    "text": "configuration on the sriv host rate the cluster hood that host that you want to",
    "start": "1053600",
    "end": "1058880"
  },
  {
    "text": "use for sriv vns um you basically need a net card that is",
    "start": "1058880",
    "end": "1065200"
  },
  {
    "text": "sriv capable so not all hardware is capable of supporting sriv by default",
    "start": "1065200",
    "end": "1071440"
  },
  {
    "text": "once you have that there are also certain bios settings that you need to enable to",
    "start": "1071440",
    "end": "1077039"
  },
  {
    "text": "actually utilize that next function and on some of the physical servers you would see your setting in bios that's",
    "start": "1077039",
    "end": "1084320"
  },
  {
    "text": "there's a global enable flag for sriv that needs to be enabled and there's also a per next setting that you can",
    "start": "1084320",
    "end": "1090960"
  },
  {
    "text": "toggle and enable it for specific mix once it's enabled in the bios",
    "start": "1090960",
    "end": "1097760"
  },
  {
    "text": "you also need to enable i o mmu support in the kernel level so in the kernel command line you can",
    "start": "1097760",
    "end": "1105039"
  },
  {
    "text": "pass in the below flags so if it's intel processor then you would pass intel iom u equal to on if",
    "start": "1105039",
    "end": "1112240"
  },
  {
    "text": "it's amd would do amd underscore iommu and uh similarly you would also add",
    "start": "1112240",
    "end": "1118720"
  },
  {
    "text": "these pci equal to reallocate and pci equal to assign buses command line",
    "start": "1118720",
    "end": "1123919"
  },
  {
    "text": "parameters to the kernel config if you do make that change in the graph",
    "start": "1123919",
    "end": "1129440"
  },
  {
    "text": "command line then you need to kind of save that and rebuild the ram disk and reboot your",
    "start": "1129440",
    "end": "1136480"
  },
  {
    "text": "host in that case if this is the first time that you're setting up the host for uh",
    "start": "1136480",
    "end": "1141679"
  },
  {
    "text": "sriv cluster uh like i mentioned before for qfword it",
    "start": "1141679",
    "end": "1147039"
  },
  {
    "text": "only supports the vfio uses space driver to pass through these pci devices into",
    "start": "1147039",
    "end": "1153440"
  },
  {
    "text": "qmu for running your vms so you need to load the kernel module vfi or pci for your vms to consume it",
    "start": "1153440",
    "end": "1163720"
  },
  {
    "start": "1163000",
    "end": "1221000"
  },
  {
    "text": "uh in terms of how do you actually create a vmi in cube word using srv ah this is how the spec",
    "start": "1164960",
    "end": "1174160"
  },
  {
    "text": "word kind of look like ah so in in the interfaces section for a",
    "start": "1174160",
    "end": "1179919"
  },
  {
    "text": "given vm ah by by default you would always have the part network for the",
    "start": "1179919",
    "end": "1185120"
  },
  {
    "text": "kubernetes listed as the first interface uh and there are like two modes that you can put that in so the default network",
    "start": "1185120",
    "end": "1192160"
  },
  {
    "text": "here is put on the mask rate mode i'll not get into the details of that here",
    "start": "1192160",
    "end": "1197679"
  },
  {
    "text": "and the second interface is attached to srav network",
    "start": "1197679",
    "end": "1203679"
  },
  {
    "text": "these sriv net as you can see on the right side it specifies that the",
    "start": "1203679",
    "end": "1208720"
  },
  {
    "text": "network type for this is maltus and you can specify the network name",
    "start": "1208720",
    "end": "1214559"
  },
  {
    "text": "here which corresponds to a network attachment definition",
    "start": "1214559",
    "end": "1220840"
  },
  {
    "text": "so this is how a network attachment definition for sriv would look like uh",
    "start": "1221120",
    "end": "1227200"
  },
  {
    "text": "what i was referring to earlier is the sorry is the resource name that you specify as",
    "start": "1227200",
    "end": "1233280"
  },
  {
    "text": "the annotation in metadata section and here this this is a custom ah prefix",
    "start": "1233280",
    "end": "1238960"
  },
  {
    "text": "that you can have um in this case i have it set to intel dot com slash intel underscore sriv ah which",
    "start": "1238960",
    "end": "1246320"
  },
  {
    "text": "means the kubernetes scheduler will look for any nodes uh that have resources of",
    "start": "1246320",
    "end": "1252480"
  },
  {
    "text": "this annotation and accordingly schedule parts or vms on on such a node",
    "start": "1252480",
    "end": "1258799"
  },
  {
    "text": "uh in terms of the spec of this network attachment definition uh",
    "start": "1258799",
    "end": "1264240"
  },
  {
    "text": "you will see that it has the type as sri ov with a specific cni version",
    "start": "1264240",
    "end": "1269600"
  },
  {
    "text": "uh you can have optionally a vlan id added here but but",
    "start": "1269600",
    "end": "1274880"
  },
  {
    "text": "that's something that you can um choose to not have if it's a flat network",
    "start": "1274880",
    "end": "1280400"
  },
  {
    "text": "uh the ipad section the example i have here it's using whereabouts plugin for",
    "start": "1280400",
    "end": "1285440"
  },
  {
    "text": "ipam uh in which case you would specify a range of ips a subnet along with a",
    "start": "1285440",
    "end": "1292480"
  },
  {
    "text": "allocation range start and end and you can also specify gateway",
    "start": "1292480",
    "end": "1297600"
  },
  {
    "text": "the ipam section is not really specific to sriv so the only two",
    "start": "1297600",
    "end": "1302960"
  },
  {
    "text": "distinctive things here would be the type field and the cni version that would apply",
    "start": "1302960",
    "end": "1310399"
  },
  {
    "start": "1312000",
    "end": "1499000"
  },
  {
    "text": "uh so we'll cover the demo for srv at the end together with ovs tpdk so before",
    "start": "1312480",
    "end": "1319360"
  },
  {
    "text": "that i'll just uh talk briefly about what this technology means",
    "start": "1319360",
    "end": "1325280"
  },
  {
    "text": "uh so the first thing just to kind of talk about open v switch what it",
    "start": "1325280",
    "end": "1332559"
  },
  {
    "text": "really is it's a production quality multi-layer virtual switch and in terms of the main components of",
    "start": "1332559",
    "end": "1340159"
  },
  {
    "text": "open v switch we have the forwarding path and the v switch d",
    "start": "1340159",
    "end": "1347039"
  },
  {
    "text": "ah so forwarding path here is uh basically your data plane network forwarding path and ah the",
    "start": "1347039",
    "end": "1354240"
  },
  {
    "text": "module is implemented in kernel space to achieve ah higher performance",
    "start": "1354240",
    "end": "1360960"
  },
  {
    "text": "and the second one v switch d is the user space component of it this is the",
    "start": "1360960",
    "end": "1366159"
  },
  {
    "text": "one that actually does uh traffic switching so if you have a obvious",
    "start": "1366159",
    "end": "1371520"
  },
  {
    "text": "bridge created on a hypervisor that's running multiple vms it would basically switch packets from one port to another",
    "start": "1371520",
    "end": "1378080"
  },
  {
    "text": "depending on what's the source and destination of each packet so so this basically you'll see that",
    "start": "1378080",
    "end": "1384480"
  },
  {
    "text": "there are components in both kernel space and user space and we will see how that really matters when",
    "start": "1384480",
    "end": "1391200"
  },
  {
    "text": "we talk about bpdk so what is dpdk",
    "start": "1391200",
    "end": "1396720"
  },
  {
    "text": "it's dpdk stands for data plane development kit the goal of",
    "start": "1396720",
    "end": "1403600"
  },
  {
    "text": "dpdk environments is basically to allow you to do faster packet processing",
    "start": "1403600",
    "end": "1409760"
  },
  {
    "text": "for any telco apps that require a higher throughput similar to sri sriv here",
    "start": "1409760",
    "end": "1416400"
  },
  {
    "text": "it tries to achieve that by bypassing the kernel linux kernel network stack",
    "start": "1416400",
    "end": "1422640"
  },
  {
    "text": "uh for implementing uh switching in the user space it relies on pole mode",
    "start": "1422640",
    "end": "1428840"
  },
  {
    "text": "drivers and dpdk is also something that you can combine with open v switch so when you",
    "start": "1428840",
    "end": "1436960"
  },
  {
    "text": "have open we switch on a host and you combine that with dpdk you get accelerated performance ah because it's",
    "start": "1436960",
    "end": "1444000"
  },
  {
    "text": "bypassing user space in both the layers in terms of comparison of",
    "start": "1444000",
    "end": "1450960"
  },
  {
    "text": "network throughput with dpdk and sriv uh if you",
    "start": "1450960",
    "end": "1456640"
  },
  {
    "text": "enter that conducted a study where tried to compare the performance in both the cases and um what it basically",
    "start": "1456640",
    "end": "1463679"
  },
  {
    "text": "concluded was that if you have e-stress traffic between vnf apps that are",
    "start": "1463679",
    "end": "1469200"
  },
  {
    "text": "running in the same server in that case dpdk would be a better alternative than",
    "start": "1469200",
    "end": "1474880"
  },
  {
    "text": "going ahead with srlv which is more desirable if you have uh north south traffic that kind of",
    "start": "1474880",
    "end": "1482559"
  },
  {
    "text": "exits the neck in which case you can actually take advantage of virtual functions",
    "start": "1482559",
    "end": "1489360"
  },
  {
    "text": "uh having said that you can also use both of them in combination so you can have",
    "start": "1489520",
    "end": "1495200"
  },
  {
    "text": "uh obvious tpdk with that",
    "start": "1495200",
    "end": "1499720"
  },
  {
    "start": "1499000",
    "end": "1574000"
  },
  {
    "text": "uh so so this diagram kind of uh shows very well how how you would uh use a",
    "start": "1500240",
    "end": "1507200"
  },
  {
    "text": "bull more driver with an obs with dpdk case uh so on the left hand side it",
    "start": "1507200",
    "end": "1512880"
  },
  {
    "text": "shows the forwarding plane which is running as a kernel space module and in user space",
    "start": "1512880",
    "end": "1520080"
  },
  {
    "text": "you have the switch id here what you basically lose out on is",
    "start": "1520080",
    "end": "1527039"
  },
  {
    "text": "any interrupts that happen in the kernel space add to kind of make up",
    "start": "1527039",
    "end": "1533600"
  },
  {
    "text": "cause a bottle like that whereas on the right hand side the user space module has",
    "start": "1533600",
    "end": "1540480"
  },
  {
    "text": "a component has a dpdk forwarding module which like i mentioned before it's relying on the pole mode drivers to do",
    "start": "1540480",
    "end": "1547120"
  },
  {
    "text": "the packet switching uh in in each of the case you'll see that the v-net",
    "start": "1547120",
    "end": "1552720"
  },
  {
    "text": "that's associated with every vnf will kind of go through ovs",
    "start": "1552720",
    "end": "1559679"
  },
  {
    "text": "but it will do the packet processing or the forwarding in the user space instead of doing that in the",
    "start": "1559679",
    "end": "1566640"
  },
  {
    "text": "kernel module that was used for forwarding path earlier",
    "start": "1566640",
    "end": "1572559"
  },
  {
    "start": "1574000",
    "end": "1638000"
  },
  {
    "text": "uh so kubert support for dpdk is it's still kind of pending uh i have",
    "start": "1575360",
    "end": "1582400"
  },
  {
    "text": "linked here the github pr that was trying to add support for dptk uh this",
    "start": "1582400",
    "end": "1587760"
  },
  {
    "text": "is still not fully merged upstream um so the demo that we do will be based",
    "start": "1587760",
    "end": "1593520"
  },
  {
    "text": "off these changes and we have uh kind of implemented that on",
    "start": "1593520",
    "end": "1599120"
  },
  {
    "text": "top of the upstream keyboard version the latest one that we have um",
    "start": "1599120",
    "end": "1605520"
  },
  {
    "text": "the main components that you would need for implementing any dpdk apps with keyboard",
    "start": "1605520",
    "end": "1613360"
  },
  {
    "text": "the intel user space cni plugin again you would use the multis meta",
    "start": "1613360",
    "end": "1618640"
  },
  {
    "text": "plugin to attach interfaces to a queue for vms and",
    "start": "1618640",
    "end": "1624720"
  },
  {
    "text": "in terms of the packages that you need on the post you would need obvious that's",
    "start": "1624720",
    "end": "1631279"
  },
  {
    "text": "specifically built with bpdk support",
    "start": "1631279",
    "end": "1635919"
  },
  {
    "start": "1638000",
    "end": "1775000"
  },
  {
    "text": "so these are the host configuration steps that you would need to perform on the host",
    "start": "1638320",
    "end": "1644320"
  },
  {
    "text": "um firstly install the appropriate dpdk and obvious packages on host use based",
    "start": "1644320",
    "end": "1651120"
  },
  {
    "text": "on whatever distribution you're using um the obvious dpdk package is part of the",
    "start": "1651120",
    "end": "1657840"
  },
  {
    "text": "over triple so you can install it from there um you would typically need to configure",
    "start": "1657840",
    "end": "1665840"
  },
  {
    "text": "some [Music] number of huge pages based on your uh physical hardware capacity",
    "start": "1665840",
    "end": "1672240"
  },
  {
    "text": "uh so you can configure that using ctl and once it's persisted in that",
    "start": "1672240",
    "end": "1678640"
  },
  {
    "text": "you should be able to utilize huge pages in your bmi spec for setting up dpdk devices you would be",
    "start": "1678640",
    "end": "1686000"
  },
  {
    "text": "using the vfi or pci driver so initially you may have dpdk devices that are",
    "start": "1686000",
    "end": "1692640"
  },
  {
    "text": "getting managed by a different driver but when you want to utilize it for a q",
    "start": "1692640",
    "end": "1698480"
  },
  {
    "text": "work you would basically set override for a given pci address and set the driver",
    "start": "1698480",
    "end": "1705039"
  },
  {
    "text": "name as vfiopci once the module is loaded and you have",
    "start": "1705039",
    "end": "1711279"
  },
  {
    "text": "the obvious bridge and dpdk port setup done uh sorry",
    "start": "1711279",
    "end": "1716399"
  },
  {
    "text": "and dpdk configuration done you would need to create a dpdk port in",
    "start": "1716399",
    "end": "1722799"
  },
  {
    "text": "obs as well uh for that you can use the obvious vsctl command line uh i've just",
    "start": "1722799",
    "end": "1728880"
  },
  {
    "text": "given you like one example where you first add a bridge uh with data path type as net depth",
    "start": "1728880",
    "end": "1736000"
  },
  {
    "text": "so instead of using a uh host net device it's going to use net depth and",
    "start": "1736000",
    "end": "1742080"
  },
  {
    "text": "you add a dpdk port to that bridge for every physical dpdk device that you want",
    "start": "1742080",
    "end": "1748799"
  },
  {
    "text": "to associate with that bridge and that can be specified using the dpdk depth",
    "start": "1748799",
    "end": "1754480"
  },
  {
    "text": "arcs argument here and you would specify the pci address",
    "start": "1754480",
    "end": "1760000"
  },
  {
    "text": "that would match whatever was the id that you passed in",
    "start": "1760000",
    "end": "1765279"
  },
  {
    "text": "the command above with driver ctl set override where you attach it to vfi or",
    "start": "1765279",
    "end": "1770640"
  },
  {
    "text": "pci driver",
    "start": "1770640",
    "end": "1773520"
  },
  {
    "text": "similar to the kuford vmi spec for sriv",
    "start": "1776880",
    "end": "1782159"
  },
  {
    "text": "you here you would pass in the interface names and ah sorry",
    "start": "1782159",
    "end": "1788880"
  },
  {
    "text": "the network name as we used usernet1 as an example and the",
    "start": "1788880",
    "end": "1794320"
  },
  {
    "text": "type would be v host user for the second interface uh the first interface is the",
    "start": "1794320",
    "end": "1799440"
  },
  {
    "text": "same default pod network in this case the network name that you specify under",
    "start": "1799440",
    "end": "1805760"
  },
  {
    "text": "multisection on the right is a net one here and net one is what would be",
    "start": "1805760",
    "end": "1812640"
  },
  {
    "text": "matched with your network attachment definition name so here is a sample of the network",
    "start": "1812640",
    "end": "1817840"
  },
  {
    "text": "attachment definition for dpdk in this case ah contrast in contrast to the earlier",
    "start": "1817840",
    "end": "1825679"
  },
  {
    "text": "yaml file that we looked at ah the type here would be user space ah again you specify a cni version and",
    "start": "1825679",
    "end": "1833200"
  },
  {
    "text": "then there is this host and container section that you need to specify",
    "start": "1833200",
    "end": "1838320"
  },
  {
    "text": "under the host dictionary you have the ancient type as ovs dpdk",
    "start": "1838320",
    "end": "1845520"
  },
  {
    "text": "the interface type here is vhost user so typically with obs dpdk you can",
    "start": "1845520",
    "end": "1851679"
  },
  {
    "text": "either have the interface type as we host user or news user client and that's the one that we have specified",
    "start": "1851679",
    "end": "1858240"
  },
  {
    "text": "here uh so vhost mode is client in this case and what the bridge name that we added",
    "start": "1858240",
    "end": "1866000"
  },
  {
    "text": "with obs psctl adbridge and that's the one that you would specify under the bridge name section",
    "start": "1866000",
    "end": "1872000"
  },
  {
    "text": "ah again under the on the container side you would specify interface type sv host user and this is",
    "start": "1872000",
    "end": "1879120"
  },
  {
    "text": "the server side of it um so what what it really means is you create a dpdk port on the host",
    "start": "1879120",
    "end": "1887200"
  },
  {
    "text": "which will be a client and inside the container where you're running a vm and",
    "start": "1887200",
    "end": "1892559"
  },
  {
    "text": "using qmu and attaching the port as an interface to that vm ah that is going to",
    "start": "1892559",
    "end": "1897840"
  },
  {
    "text": "act as a server so those are the two different modes where ah either host is acting as a client",
    "start": "1897840",
    "end": "1904320"
  },
  {
    "text": "in which case it's we host user and the other one is where container can act as a client or other qmu can act as a",
    "start": "1904320",
    "end": "1911679"
  },
  {
    "text": "client uh and all it really mat means is that your one of them is",
    "start": "1911679",
    "end": "1917120"
  },
  {
    "text": "responsible for creating the socket and the other one is going to try and establish a connection",
    "start": "1917120",
    "end": "1922640"
  },
  {
    "text": "to that socket uh so after this we'll cover the demo side of",
    "start": "1922640",
    "end": "1930399"
  },
  {
    "start": "1926000",
    "end": "1939000"
  },
  {
    "text": "qfort and see how we can deploy vnf apps using sriv and dpdk both",
    "start": "1930399",
    "end": "1938320"
  },
  {
    "text": "uh so let's get into the demo uh for running vnf applications using qport",
    "start": "1938320",
    "end": "1944960"
  },
  {
    "start": "1939000",
    "end": "2179000"
  },
  {
    "text": "vms uh i'll first cover sriv interfaces attached to vms and show",
    "start": "1944960",
    "end": "1951360"
  },
  {
    "text": "how you can create a vm um using queue work and then move on to",
    "start": "1951360",
    "end": "1957600"
  },
  {
    "text": "creating a vnf using a vf vm that has dpdk interfaces",
    "start": "1957600",
    "end": "1964240"
  },
  {
    "text": "so for sriv i already have a cluster created here",
    "start": "1964240",
    "end": "1969519"
  },
  {
    "text": "it's a single node cluster so the master node is also running workloads",
    "start": "1969519",
    "end": "1975600"
  },
  {
    "text": "i'll show the parts that run as part of keyboard since i have that installed",
    "start": "1975600",
    "end": "1981279"
  },
  {
    "text": "here already uh so for the cluster you'll see the word api word controller and what",
    "start": "1981279",
    "end": "1988799"
  },
  {
    "text": "operator parts running and for every host there is a word handler part that",
    "start": "1988799",
    "end": "1994159"
  },
  {
    "text": "runs since i just have one node in the cluster there's a single word handler part that's running here and it's",
    "start": "1994159",
    "end": "2000240"
  },
  {
    "text": "responsible for launching any vms that get scheduled on that specific cluster",
    "start": "2000240",
    "end": "2005679"
  },
  {
    "text": "node uh i also have cdi uh which is",
    "start": "2005679",
    "end": "2011440"
  },
  {
    "text": "for basically creating data volumes and associating those with those as",
    "start": "2011440",
    "end": "2018480"
  },
  {
    "text": "disks for your vms uh since that is already running uh you would see cdi parts",
    "start": "2018480",
    "end": "2026880"
  },
  {
    "text": "for api server deployment operator and upload proxy running here",
    "start": "2026880",
    "end": "2033840"
  },
  {
    "text": "in terms of the other component that we have here i have",
    "start": "2034240",
    "end": "2039919"
  },
  {
    "text": "uh luigi which is the open source plugin for configuring sriv",
    "start": "2039919",
    "end": "2047158"
  },
  {
    "text": "so in that luigi namespace you'll see a controller manager part running here",
    "start": "2049599",
    "end": "2056240"
  },
  {
    "text": "so this part is something that will monitor any network plug-ins that you create",
    "start": "2056879",
    "end": "2062320"
  },
  {
    "text": "and if you create a network template with sriv it will help you create",
    "start": "2062320",
    "end": "2067520"
  },
  {
    "text": "virtual functions in an automated way without really having to do any manual",
    "start": "2067520",
    "end": "2072560"
  },
  {
    "text": "intervention there so on this host i have",
    "start": "2072560",
    "end": "2078638"
  },
  {
    "text": "created virtual functions before",
    "start": "2078639",
    "end": "2084800"
  },
  {
    "text": "so if you look at an interface and under the sys class net",
    "start": "2084800",
    "end": "2092398"
  },
  {
    "text": "interface name device there is a file called srev num vfs which will show you",
    "start": "2092399",
    "end": "2098079"
  },
  {
    "text": "how many vfs have been created on this interface",
    "start": "2098079",
    "end": "2103760"
  },
  {
    "text": "here since i'm using luigi i'll also show the",
    "start": "2103760",
    "end": "2109359"
  },
  {
    "text": "yaml file that you would create for configuring your device plugin that we",
    "start": "2109359",
    "end": "2116079"
  },
  {
    "text": "spoke about in the cni section uh the resource list here is what",
    "start": "2116079",
    "end": "2122240"
  },
  {
    "text": "specifies uh resource prefix and a resource name uh this is what we would need to use",
    "start": "2122240",
    "end": "2129119"
  },
  {
    "text": "later on in the network attachment definition spec file resource prefix in combination with the",
    "start": "2129119",
    "end": "2135200"
  },
  {
    "text": "resource name to kind of decide which interfaces you want",
    "start": "2135200",
    "end": "2142240"
  },
  {
    "text": "to be enabled with the srav device plugin there are different formats in which you",
    "start": "2142240",
    "end": "2147520"
  },
  {
    "text": "can specify the selector section the one i have used here is just",
    "start": "2147520",
    "end": "2152960"
  },
  {
    "text": "straightforward physical function names i have two necks here that are capable",
    "start": "2152960",
    "end": "2158240"
  },
  {
    "text": "of uh srlv uh eno3 and eno4 and uh luigi would basically",
    "start": "2158240",
    "end": "2165920"
  },
  {
    "text": "help configure them with the vfi or pci driver so that's the driver i'm specifying here in the config map that's",
    "start": "2165920",
    "end": "2172240"
  },
  {
    "text": "used by a device plugin uh once that is done",
    "start": "2172240",
    "end": "2178720"
  },
  {
    "text": "uh so this is the actual host network template that can be",
    "start": "2178720",
    "end": "2184160"
  },
  {
    "start": "2179000",
    "end": "2463000"
  },
  {
    "text": "applied using luigi what it looks at in terms of the nodes",
    "start": "2184160",
    "end": "2190320"
  },
  {
    "text": "that it can run this template on or rather configure this template on you",
    "start": "2190320",
    "end": "2195359"
  },
  {
    "text": "have the node selector so any node in that cluster which has network sriv",
    "start": "2195359",
    "end": "2200720"
  },
  {
    "text": "capable set to true it would configure srlv on that only on those selected nodes",
    "start": "2200720",
    "end": "2208240"
  },
  {
    "text": "for each physical function you can specify the number of vfs the vf",
    "start": "2208240",
    "end": "2214079"
  },
  {
    "text": "driver to bind using and the mtu size if you want to set that so this is a sample uh template using",
    "start": "2214079",
    "end": "2221680"
  },
  {
    "text": "which i had created virtual functions and that's why you see seven vfs that are present on this host",
    "start": "2221680",
    "end": "2230240"
  },
  {
    "text": "after that that is created you would basically apply the network attachment definition file and i'll show the",
    "start": "2230240",
    "end": "2237760"
  },
  {
    "text": "contents of that so the network attachment network",
    "start": "2237760",
    "end": "2244000"
  },
  {
    "text": "attachment name here is sriv network eno which would be part of your vmi spec",
    "start": "2244000",
    "end": "2249760"
  },
  {
    "text": "file uh the thing to note here is basically the type sriv line",
    "start": "2249760",
    "end": "2254960"
  },
  {
    "text": "and optionally you can set a vlan id and for ipam you could use whereabouts or",
    "start": "2254960",
    "end": "2261200"
  },
  {
    "text": "any other plugin as desired so i'm going to",
    "start": "2261200",
    "end": "2267599"
  },
  {
    "text": "create a vm here",
    "start": "2267599",
    "end": "2271839"
  },
  {
    "text": "this is the vmi spec file",
    "start": "2273280",
    "end": "2277680"
  },
  {
    "text": "in the vmi spec queue it's similar to how you would create a typical uh virtual machine instance",
    "start": "2280720",
    "end": "2287920"
  },
  {
    "text": "uh object in q4 uh i'll focus on the parts that are",
    "start": "2287920",
    "end": "2293520"
  },
  {
    "text": "specific to sriv here which is basically your network interfaces section in the domain spec",
    "start": "2293520",
    "end": "2300640"
  },
  {
    "text": "um the first network being the pod network and the second one being the sriv type",
    "start": "2300640",
    "end": "2305680"
  },
  {
    "text": "and the network section here uh which specifies the multis network name and",
    "start": "2305680",
    "end": "2312720"
  },
  {
    "text": "this is what matches your network attachment definition that we looked at earlier uh in this case uh i'm just using a",
    "start": "2312720",
    "end": "2321040"
  },
  {
    "text": "fedora test image here so this is this image is something that you can replace with your specific vnf",
    "start": "2321040",
    "end": "2328000"
  },
  {
    "text": "application and uh put any associated cloudant script as part of the cloudant data here",
    "start": "2328000",
    "end": "2337119"
  },
  {
    "text": "so let's go ahead and create that vm",
    "start": "2337119",
    "end": "2344160"
  },
  {
    "text": "so vmi sri v2 was already running on this cluster and vmi sriv1 is the",
    "start": "2351920",
    "end": "2360079"
  },
  {
    "text": "new vm that i just created so let's give it a minute to",
    "start": "2360079",
    "end": "2367280"
  },
  {
    "text": "start up and we can go ahead and connect to this ip",
    "start": "2367280",
    "end": "2372400"
  },
  {
    "text": "address and see that we are able to reach the other other vmware",
    "start": "2372400",
    "end": "2379240"
  },
  {
    "text": "so if you look at the network interfaces inside this vm uh here notice",
    "start": "2383440",
    "end": "2389599"
  },
  {
    "text": "each zero that's attached to the default pod network and then there is eth one",
    "start": "2389599",
    "end": "2396079"
  },
  {
    "text": "which is your sriv interface in this case and [Music]",
    "start": "2396079",
    "end": "2402480"
  },
  {
    "text": "here this is again the ip of the vm that was already running but this is on the default pod network",
    "start": "2402480",
    "end": "2409359"
  },
  {
    "text": "um with srav it doesn't really get an ip assigned to inside the vm so you would",
    "start": "2409359",
    "end": "2416560"
  },
  {
    "text": "need to configure that via a cloudant script the ip that was associated using",
    "start": "2416560",
    "end": "2422319"
  },
  {
    "text": "whereabouts will just get assigned to the pod itself but not for the actual vm that's running",
    "start": "2422319",
    "end": "2428240"
  },
  {
    "text": "uh so that's something that needs to be done either using an external dhcp server or using the cloudnet script here",
    "start": "2428240",
    "end": "2436800"
  },
  {
    "text": "so that's basically how you would create a vmi using srv it's it's really",
    "start": "2437119",
    "end": "2443119"
  },
  {
    "text": "straightforward the the only thing that changes here is how you create uh this network attachment definition",
    "start": "2443119",
    "end": "2450640"
  },
  {
    "text": "and once you have that uh you basically just need to use the utilize the network name in your",
    "start": "2450640",
    "end": "2457119"
  },
  {
    "text": "vmi spec that's the only difference moving on to dpdk so again i have a",
    "start": "2457119",
    "end": "2464960"
  },
  {
    "text": "pre-created cluster here",
    "start": "2464960",
    "end": "2468560"
  },
  {
    "text": "let me just export the cube config and you'll see again that there's",
    "start": "2470800",
    "end": "2476079"
  },
  {
    "text": "a single master node that's available here uh it again has",
    "start": "2476079",
    "end": "2481839"
  },
  {
    "text": "the exact same uh deployments here uh there is keyword installed and cdi",
    "start": "2481839",
    "end": "2487839"
  },
  {
    "text": "installed uh this also has um so since luigi doesn't",
    "start": "2487839",
    "end": "2493200"
  },
  {
    "text": "support dpdk today that's still a some work in progress item for",
    "start": "2493200",
    "end": "2499520"
  },
  {
    "text": "uh adding to luigi uh i'll just showcase the obvious level info in this case",
    "start": "2499520",
    "end": "2506839"
  },
  {
    "text": "uh so if you look at the ovs via ctl show output",
    "start": "2506839",
    "end": "2511920"
  },
  {
    "text": "you will see that there is a obvious bridge that's created uh the ovs bridge created here has two",
    "start": "2511920",
    "end": "2519280"
  },
  {
    "text": "interfaces there's two ports basically eno2 and eno4 again these are two net cards that",
    "start": "2519280",
    "end": "2526640"
  },
  {
    "text": "are being utilized for dpdk traffic in terms of configuring or adding the",
    "start": "2526640",
    "end": "2533119"
  },
  {
    "text": "port uh the option that's utilized is dpdk dev arcs to which you assign the",
    "start": "2533119",
    "end": "2539359"
  },
  {
    "text": "pci address so since i'm utilizing the entire um eno2 and eno4 interfaces here as dpdk",
    "start": "2539359",
    "end": "2547119"
  },
  {
    "text": "ports and specifying their respective pci addresses as part of the port config",
    "start": "2547119",
    "end": "2553680"
  },
  {
    "text": "so these are the two ports and you can also use obs in a bonded mode if that's what you",
    "start": "2553680",
    "end": "2560480"
  },
  {
    "text": "desire or you can add the ports directly here",
    "start": "2560480",
    "end": "2566000"
  },
  {
    "text": "so after the obvious bridge and board configuration is done",
    "start": "2566000",
    "end": "2572960"
  },
  {
    "text": "i'll show the network attachment definition and how it differs from sriv",
    "start": "2572960",
    "end": "2580000"
  },
  {
    "text": "so we spoke about this earlier uh the host and container sections are",
    "start": "2580000",
    "end": "2586319"
  },
  {
    "text": "the main ones that differ for the user space type network attachment definition",
    "start": "2586319",
    "end": "2592480"
  },
  {
    "text": "uh the bridge name here again needs to match what you created in obs",
    "start": "2592480",
    "end": "2597520"
  },
  {
    "text": "and uh this host site should be in a client mode and",
    "start": "2597520",
    "end": "2602640"
  },
  {
    "text": "container site would be in a server module same thing the ipan section could be",
    "start": "2602640",
    "end": "2609359"
  },
  {
    "text": "anything uh whereabouts is just an example here uh the network name net1 is what would",
    "start": "2609359",
    "end": "2616480"
  },
  {
    "text": "be part of the vmi spec so you'll notice here this is a virtual",
    "start": "2616480",
    "end": "2622960"
  },
  {
    "text": "machine named test dpdk it has two interfaces first one being",
    "start": "2622960",
    "end": "2630480"
  },
  {
    "text": "the kubernetes default pod network and second one is an interface of type vhost",
    "start": "2630480",
    "end": "2636400"
  },
  {
    "text": "new user uh for this dpdk network you specify it using the",
    "start": "2636400",
    "end": "2642319"
  },
  {
    "text": "multis network name config and put it as net one here again i'm using a",
    "start": "2642319",
    "end": "2649119"
  },
  {
    "text": "fedora image but this could be replaced with your dnf applications image and the",
    "start": "2649119",
    "end": "2654160"
  },
  {
    "text": "corresponding cloudant script here so i'll just go ahead and create a vm",
    "start": "2654160",
    "end": "2661839"
  },
  {
    "text": "using this so for the sriv one we are utilizing a",
    "start": "2661839",
    "end": "2669040"
  },
  {
    "text": "vmi a virtual machine instance type",
    "start": "2669040",
    "end": "2674520"
  },
  {
    "text": "okay so once we have the vm running here we should be able to ssh into it",
    "start": "2678400",
    "end": "2687160"
  },
  {
    "text": "uh inside the vm i'm just running ipa command and here again you'll see uh two interfaces uh each zero is a",
    "start": "2695599",
    "end": "2703680"
  },
  {
    "text": "default pod network and since it was using masquerade mode uh this will show you the internal ip",
    "start": "2703680",
    "end": "2710720"
  },
  {
    "text": "address that snap it and on the pod level you would see the ip address that's shown up",
    "start": "2710720",
    "end": "2716960"
  },
  {
    "text": "here uh eat one is your actual dpdk interface so when you run a vnf",
    "start": "2716960",
    "end": "2722800"
  },
  {
    "text": "application here using eth1 as the",
    "start": "2722800",
    "end": "2727760"
  },
  {
    "text": "interface for your data traffic you should be able to get the performance benefits out of running the vnf with our",
    "start": "2728079",
    "end": "2733920"
  },
  {
    "text": "dpd obs based pptk uh so that's kind of the um only change",
    "start": "2733920",
    "end": "2739839"
  },
  {
    "text": "again on the dpdk side uh there is some host level conflict that was needed right and",
    "start": "2739839",
    "end": "2746480"
  },
  {
    "text": "the only packages that you installed here would be openly switch and dpdk",
    "start": "2746480",
    "end": "2753680"
  },
  {
    "text": "so i just want to quickly show the packages that you would need for dpdk on this host since i had already configured",
    "start": "2753680",
    "end": "2761440"
  },
  {
    "text": "it it's using the pdk package itself which is for the",
    "start": "2761440",
    "end": "2766880"
  },
  {
    "text": "runtime and even for openvswitch it needs a package from the over triple because that's the",
    "start": "2766880",
    "end": "2773119"
  },
  {
    "text": "one that's compiled with dpdk enabled so that's the only config that you would",
    "start": "2773119",
    "end": "2779040"
  },
  {
    "text": "need here outside of what you configured with obvious vsctl show",
    "start": "2779040",
    "end": "2784079"
  },
  {
    "text": "and in driver ctl you would run the command to basically set an override for",
    "start": "2784079",
    "end": "2790960"
  },
  {
    "text": "the vfi or pci driver like we spoke about earlier",
    "start": "2790960",
    "end": "2796720"
  },
  {
    "text": "uh so so that concludes the demo on running vnf applications using kuford",
    "start": "2796720",
    "end": "2804880"
  },
  {
    "text": "vms with both srlv and dpdk thank you for listening",
    "start": "2804880",
    "end": "2812920"
  }
]