[
  {
    "text": "okay um hello everyone thanks for joining today my name is Margie I'm a senior",
    "start": "5279",
    "end": "12599"
  },
  {
    "text": "developer evangelist at gitlab and if you want to like find me online I'm DNS",
    "start": "12599",
    "end": "17820"
  },
  {
    "text": "Miki which is DNS mischi it's the lovely version of Martin and German",
    "start": "17820",
    "end": "24539"
  },
  {
    "text": "um but today it's not about me today I want to talk about what is like observability how can we gain confidence",
    "start": "24539",
    "end": "31560"
  },
  {
    "text": "with introducing some chaos and everything around like",
    "start": "31560",
    "end": "36660"
  },
  {
    "text": "um what what can we do with kubernetes around things like that",
    "start": "36660",
    "end": "41879"
  },
  {
    "text": "um from my background I was an open source monitoring tool maintainer for like a decade before joining gitlab and",
    "start": "41879",
    "end": "49739"
  },
  {
    "text": "um I'm doing many many things with metrics Prometheus grafana Q premises and so on so in this talk we will also",
    "start": "49739",
    "end": "57059"
  },
  {
    "text": "be looking into alert service level objectives chaos engineering maybe proving that it's all this DNS doing",
    "start": "57059",
    "end": "64080"
  },
  {
    "text": "some chaos tracing of Vice Versa and then also trying to look a little bit beyond observability Depending on time",
    "start": "64080",
    "end": "70640"
  },
  {
    "text": "and you might recognize that I love building Lego models so maybe you can spot them all in my slides",
    "start": "70640",
    "end": "77460"
  },
  {
    "text": "um but before we Dive In maybe thinking of an up story why we would need monitoring obserability",
    "start": "77460",
    "end": "84780"
  },
  {
    "text": "um we have potentially kubernetes up and running and we need to kind of understand what we should be monitoring",
    "start": "84780",
    "end": "91740"
  },
  {
    "text": "um there are like the different components we have node spots containers deployment Services apis ports data",
    "start": "91740",
    "end": "99060"
  },
  {
    "text": "sources and different things I don't even know yet probably um and then someone says well we need",
    "start": "99060",
    "end": "104400"
  },
  {
    "text": "monitoring because developers cannot work deployments are broken something is like what should we",
    "start": "104400",
    "end": "111060"
  },
  {
    "text": "be doing there is it like availability monitoring should we be looking into the",
    "start": "111060",
    "end": "116880"
  },
  {
    "text": "performance and resources identifying this lower or the blocking deployments the classic traditional service",
    "start": "116880",
    "end": "122939"
  },
  {
    "text": "monitoring things don't really work we have metrics logs maybe even more than that",
    "start": "122939",
    "end": "128399"
  },
  {
    "text": "do we need to understand everything to observe or monitor it and what are the best practices so it can be pretty much",
    "start": "128399",
    "end": "134400"
  },
  {
    "text": "overwhelming when you start the first time and it needs focus at some point so in the first iteration let's look at",
    "start": "134400",
    "end": "141420"
  },
  {
    "text": "metrics within kubernetes we have different data sources we have service Discovery luckily in the cncf ecosystem",
    "start": "141420",
    "end": "148440"
  },
  {
    "text": "we have Prometheus with the slash Matrix and point being provided being scraped a",
    "start": "148440",
    "end": "153900"
  },
  {
    "text": "Time series database built in we can calculate Trends use dashboards have",
    "start": "153900",
    "end": "160379"
  },
  {
    "text": "service level objectives and from there go into alerting incidentsing and fixing",
    "start": "160379",
    "end": "165480"
  },
  {
    "text": "and coming back to everything um for this like thought this is like a",
    "start": "165480",
    "end": "171840"
  },
  {
    "text": "huge architecture of Prometheus I think the nice way is like integrating with the services career within qrators what",
    "start": "171840",
    "end": "178080"
  },
  {
    "text": "you can use and everything else is like um on top of that the other thing which",
    "start": "178080",
    "end": "183720"
  },
  {
    "text": "is important to really get going is learning the premises query language which is called promquel like getting",
    "start": "183720",
    "end": "190319"
  },
  {
    "text": "the latest sample calculating something and even calling functions or doing comparisons which is later on important",
    "start": "190319",
    "end": "197040"
  },
  {
    "text": "for defining service level objectives and the laws um there is a lot to learn so",
    "start": "197040",
    "end": "204480"
  },
  {
    "text": "um I'm also I've also added links on my slides which are already available on my",
    "start": "204480",
    "end": "209519"
  },
  {
    "text": "website so you can look it up later on async similar to how to visualize the",
    "start": "209519",
    "end": "215040"
  },
  {
    "text": "data within premises like the UI which comes out of the box you can do dashboards in grafana for example and",
    "start": "215040",
    "end": "222900"
  },
  {
    "text": "I've also seen that there's a new dashboard as code and GitHub style project in development at the moment",
    "start": "222900",
    "end": "228720"
  },
  {
    "text": "which is called pulses or purses um I don't know its current state but I",
    "start": "228720",
    "end": "234840"
  },
  {
    "text": "think it's worth following um and seeing um where this is going in the future making our life easier",
    "start": "234840",
    "end": "241739"
  },
  {
    "text": "um speaking of making our lives easier I think the promises are great and keep promises are a pretty good start to get",
    "start": "241739",
    "end": "247980"
  },
  {
    "text": "going um providing everything out of the box and the great thing is um you also get",
    "start": "247980",
    "end": "253860"
  },
  {
    "text": "to see dashboards and and alerting which means",
    "start": "253860",
    "end": "259100"
  },
  {
    "text": "starting getting started is easier and we can see what is like going on",
    "start": "259100",
    "end": "266100"
  },
  {
    "text": "um the other thing is like when you see something we have again a lot of things to to analyze and is it",
    "start": "266100",
    "end": "273960"
  },
  {
    "text": "now green is it okay is it healthy what is going on so it's nice to have all",
    "start": "273960",
    "end": "279000"
  },
  {
    "text": "these things like no status resource usage deployments and and different",
    "start": "279000",
    "end": "284460"
  },
  {
    "text": "other things but it can be a little too much looking at a lot of data right now right now",
    "start": "284460",
    "end": "291180"
  },
  {
    "text": "um so for example container metrics different Integrations um should I be looking at the system CPU",
    "start": "291180",
    "end": "298199"
  },
  {
    "text": "usage or maybe even the Pod memory usage",
    "start": "298199",
    "end": "303240"
  },
  {
    "text": "um another example is getting the health of the deployments with Cube State metrics different ways to actually do that and",
    "start": "303240",
    "end": "311160"
  },
  {
    "text": "use that and I think the nice way it comes out of the box but we really need to like figure out hey what is like",
    "start": "311160",
    "end": "317520"
  },
  {
    "text": "going on with that so the idea is to say my tricks are great but like what's next",
    "start": "317520",
    "end": "324380"
  },
  {
    "text": "so like defining the definition of failure like the what then do something",
    "start": "324380",
    "end": "329520"
  },
  {
    "text": "because maybe a threshold was violated or a specific rule was matched to modify",
    "start": "329520",
    "end": "334680"
  },
  {
    "text": "and raise alerts the who which needs to be the responsible person and team",
    "start": "334680",
    "end": "341180"
  },
  {
    "text": "and going to the hub which can be like documentation for incidents run books",
    "start": "341180",
    "end": "346560"
  },
  {
    "text": "corrective actions and so on which also means reducing the mean time to response",
    "start": "346560",
    "end": "351720"
  },
  {
    "text": "or the mean time to resolve depending on the definition",
    "start": "351720",
    "end": "356780"
  },
  {
    "text": "um and it got me thinking like okay with with Prometheus we can integrate the",
    "start": "357060",
    "end": "362940"
  },
  {
    "text": "alerts with Prometheus alert rules um send them to the alert manager I have some like grouping",
    "start": "362940",
    "end": "368759"
  },
  {
    "text": "um inhibition and silences different transports um that's really awesome so like this is provided out of the box for kubernetes",
    "start": "368759",
    "end": "376500"
  },
  {
    "text": "itself I also found like a website which is called um awesome Prometheus alerts dot grep.to",
    "start": "376500",
    "end": "383180"
  },
  {
    "text": "which also provides additional alerting rules which you can integrate with the",
    "start": "383180",
    "end": "388740"
  },
  {
    "text": "promises operator um into the monitoring I of of the kubernetes cluster and get these alerts",
    "start": "388740",
    "end": "396740"
  },
  {
    "text": "ready to being fired now um integrating them into the",
    "start": "396740",
    "end": "401880"
  },
  {
    "text": "premises operator can be done with the premises through custom resource definition it's just an example",
    "start": "401880",
    "end": "407699"
  },
  {
    "text": "um how to wrap it and not use two different configuration formats which I think is great especially for beginners",
    "start": "407699",
    "end": "414180"
  },
  {
    "text": "don't needing to learn different things in terms of an alert receiver like can",
    "start": "414180",
    "end": "420660"
  },
  {
    "text": "use chat we can document the incidents and ticket and issue systems maybe even mailing lists but at some point it can",
    "start": "420660",
    "end": "428400"
  },
  {
    "text": "be overwhelming and the so-called alert fatigue can come up and saying I have 10 000 alerts",
    "start": "428400",
    "end": "434520"
  },
  {
    "text": "um I have no idea what's going on and basically it's like I don't Mark everything as read or have it somewhere",
    "start": "434520",
    "end": "441960"
  },
  {
    "text": "and the calendar goes up and maybe we need sort of way of managing these",
    "start": "441960",
    "end": "447180"
  },
  {
    "text": "incidents in a better way now the idea is like how would I be getting an alert",
    "start": "447180",
    "end": "453240"
  },
  {
    "text": "just like the the visual example can be looking at the alert manager in premises",
    "start": "453240",
    "end": "459240"
  },
  {
    "text": "and and see something that something is broken but I don't want to do that manually",
    "start": "459240",
    "end": "464940"
  },
  {
    "text": "I was like um maybe I can break something in Fanboy so like maybe installing Cube Doom in the",
    "start": "464940",
    "end": "471120"
  },
  {
    "text": "in the production cluster and killing some parts but uh I thought like probably it's not applicable for work or",
    "start": "471120",
    "end": "478919"
  },
  {
    "text": "might not be allowed but still it can be a way of learning",
    "start": "478919",
    "end": "483960"
  },
  {
    "text": "and breaking things in a fun way um but to to get more serious like",
    "start": "483960",
    "end": "489960"
  },
  {
    "text": "simulating a production incident is really hard he might be having a staging environment",
    "start": "489960",
    "end": "495539"
  },
  {
    "text": "he might not be having it and maybe we can sort of add automated chaos and",
    "start": "495539",
    "end": "500639"
  },
  {
    "text": "break things in a professional way in order to trigger the alert and to",
    "start": "500639",
    "end": "506220"
  },
  {
    "text": "trigger the um to verify the service level objectives and iterate on that and",
    "start": "506220",
    "end": "511259"
  },
  {
    "text": "make make corrective actions based on what we're seeing which brings me to the",
    "start": "511259",
    "end": "517080"
  },
  {
    "text": "idea combining observability with chaos engineering and doing so-called chaos",
    "start": "517080",
    "end": "522539"
  },
  {
    "text": "experiments um and the great thing is within the cloud native ecosystem and and our",
    "start": "522539",
    "end": "529440"
  },
  {
    "text": "clusters and deployments um there are existing chaos Frameworks already as open source projects they",
    "start": "529440",
    "end": "535380"
  },
  {
    "text": "allow you to Define experiments and if you want to extend everything you have instrumentation sdks",
    "start": "535380",
    "end": "541980"
  },
  {
    "text": "or you do it the German Way of chaos engineering on the right hand side no",
    "start": "541980",
    "end": "547320"
  },
  {
    "text": "just kidding um one example I found is chaos mesh or one",
    "start": "547320",
    "end": "554040"
  },
  {
    "text": "open source project in the CNC landscape which allows you to fail",
    "start": "554040",
    "end": "560180"
  },
  {
    "text": "specific things in a kubernetes cluster or on hosts which can be like failing",
    "start": "560180",
    "end": "565680"
  },
  {
    "text": "apart failing the network and seeing how the application is behaving how are the entire deployments break HTTP not even",
    "start": "565680",
    "end": "573839"
  },
  {
    "text": "like the responses but didn't check some headers and see what's what's going on if you have like sort of some scheduling",
    "start": "573839",
    "end": "580500"
  },
  {
    "text": "or some time dependent things inside breaking time and ntps is also a good",
    "start": "580500",
    "end": "585720"
  },
  {
    "text": "idea to see what's going on with DNS I think probably everything is a DNS",
    "start": "585720",
    "end": "592440"
  },
  {
    "text": "problem but yeah it's it's interesting to see when you when you are in check failures",
    "start": "592440",
    "end": "598800"
  },
  {
    "text": "with DNS or just random responses and see how everything is going nuts or maybe even continuing to work running",
    "start": "598800",
    "end": "606540"
  },
  {
    "text": "chaos experiments can be done like once in chaos mesh or you define a schedule so like running running the experiment",
    "start": "606540",
    "end": "614279"
  },
  {
    "text": "every week in the morning or like something which is defined",
    "start": "614279",
    "end": "619500"
  },
  {
    "text": "because you also shouldn't be just running it and then say okay now I've run it what's next but also taking",
    "start": "619500",
    "end": "625680"
  },
  {
    "text": "action and also informing teams which might be affected by that",
    "start": "625680",
    "end": "631260"
  },
  {
    "text": "um if we want to generate some chaos we can potentially start with killing some ports and this is a nice way of like",
    "start": "631260",
    "end": "638700"
  },
  {
    "text": "seeing something the other ways like um when the port ends up in a Crest loop",
    "start": "638700",
    "end": "644820"
  },
  {
    "text": "back off kubernetes tries to heal itself so is this like the correct chaos to like",
    "start": "644820",
    "end": "651120"
  },
  {
    "text": "simulate failure in a cluster and with like maybe we can find something else",
    "start": "651120",
    "end": "656940"
  },
  {
    "text": "so thinking of more real world example what can be done",
    "start": "656940",
    "end": "662160"
  },
  {
    "text": "um was coming back to DNS in in in the previous project this was",
    "start": "662160",
    "end": "670260"
  },
  {
    "text": "like six years ago or something like that we had an application which was creating a buffer and then doing some",
    "start": "670260",
    "end": "676620"
  },
  {
    "text": "DNS resolving and then doing some connections and when everything worked it kind of close the connection again",
    "start": "676620",
    "end": "683579"
  },
  {
    "text": "um and the thing was only when DNS was failing it was leaking the memory above so like every second one megabyte of",
    "start": "683579",
    "end": "691440"
  },
  {
    "text": "leaks but only when DNS is failing we as developers couldn't really reproduce that in our system",
    "start": "691440",
    "end": "698160"
  },
  {
    "text": "um or um we didn't have a staging environment we only had our death machines and in production later released to the",
    "start": "698160",
    "end": "705720"
  },
  {
    "text": "customers it wasn't really fun to debug really really late we figured out hey",
    "start": "705720",
    "end": "711000"
  },
  {
    "text": "it's actually DNS which caused that problem um and I think this is a nice way to",
    "start": "711000",
    "end": "716399"
  },
  {
    "text": "really like figure out whether everything is working in the environment",
    "start": "716399",
    "end": "722459"
  },
  {
    "text": "um and the idea is like how can I like break DNS a simple way to",
    "start": "722459",
    "end": "729060"
  },
  {
    "text": "break DNS is something I learned in the recent Meetup of ours to scale the coordinates to the replica Servo which",
    "start": "729060",
    "end": "737519"
  },
  {
    "text": "kind of works for achieving the result but it breaks everything else so I",
    "start": "737519",
    "end": "743040"
  },
  {
    "text": "thought of like maybe we can do that with chaos mesh in in a controlled way",
    "start": "743040",
    "end": "750000"
  },
  {
    "text": "um and Chaos mesh provides a type for a chaos experiment which is called DNS chaos where you can for example",
    "start": "750000",
    "end": "757440"
  },
  {
    "text": "then Define the action which should be error so like providing NX domain",
    "start": "757440",
    "end": "762800"
  },
  {
    "text": "as a DNS result actually and then they find like namespace selectors different",
    "start": "762800",
    "end": "769260"
  },
  {
    "text": "patterns specifying which domain should be failing so for like for this event I've",
    "start": "769260",
    "end": "775380"
  },
  {
    "text": "added events.lenuxfoundation.org and some others and Chaos mesh also allows you to",
    "start": "775380",
    "end": "782220"
  },
  {
    "text": "preview what what should be affected in that way",
    "start": "782220",
    "end": "787500"
  },
  {
    "text": "um and if the Wi-Fi is working I want to try it now live",
    "start": "787500",
    "end": "792899"
  },
  {
    "text": "and see if we can actually break things",
    "start": "792899",
    "end": "798000"
  },
  {
    "text": "um just to get an idea over here potentially",
    "start": "798000",
    "end": "804240"
  },
  {
    "text": "clearing this up um I have some parts running",
    "start": "804240",
    "end": "812779"
  },
  {
    "text": "maybe yeah um and these are basically doing not",
    "start": "813300",
    "end": "820860"
  },
  {
    "text": "much but trying to allocate a buffer doing the DNS resolver and um",
    "start": "820860",
    "end": "827820"
  },
  {
    "text": "yeah everything else should be just looking fine we're getting some IP",
    "start": "827820",
    "end": "833399"
  },
  {
    "text": "addresses IPv6 even and it's work so the other thing I need to be doing is",
    "start": "833399",
    "end": "840240"
  },
  {
    "text": "accessing um the chaos mesh dashboard and later on",
    "start": "840240",
    "end": "845399"
  },
  {
    "text": "Prometheus and blood manager um",
    "start": "845399",
    "end": "851339"
  },
  {
    "text": "when you open up chaos mesh it creates you with an overview",
    "start": "851339",
    "end": "857480"
  },
  {
    "text": "nice tutorials and so on the thing I want to do now is",
    "start": "857480",
    "end": "863100"
  },
  {
    "text": "creating a schedule or actually like looking into an existing schedule",
    "start": "863100",
    "end": "869040"
  },
  {
    "text": "and the nice thing is like you can take this definition in its entirety and just",
    "start": "869040",
    "end": "874920"
  },
  {
    "text": "apply it manually as a q a CML definition or just create a new schedule",
    "start": "874920",
    "end": "881940"
  },
  {
    "text": "for example which we can just do now and import that by Amber which means you",
    "start": "881940",
    "end": "889019"
  },
  {
    "text": "can either use like the the graphical UI or you go with",
    "start": "889019",
    "end": "894240"
  },
  {
    "text": "copy paste in this and I potentially need to rename that because it something",
    "start": "894240",
    "end": "899820"
  },
  {
    "text": "already exists can like change that the schedule runs now every minute and the",
    "start": "899820",
    "end": "905100"
  },
  {
    "text": "duration is 60 seconds which means it runs all the time this example is not production already",
    "start": "905100",
    "end": "910800"
  },
  {
    "text": "um because it will break everything all the time um but oops another good idea I should",
    "start": "910800",
    "end": "917339"
  },
  {
    "text": "be submitting at the bottom and then it allows me to verify what",
    "start": "917339",
    "end": "922860"
  },
  {
    "text": "what will be going on so it again shows which patterns of domains will be affected by that and I can also see a",
    "start": "922860",
    "end": "931019"
  },
  {
    "text": "preview in the default namespace for example which parts will be affected by",
    "start": "931019",
    "end": "936420"
  },
  {
    "text": "that and at some point there is doing too many demos",
    "start": "936420",
    "end": "941639"
  },
  {
    "text": "um the open observability they put over here and when I submit this and submit it",
    "start": "941639",
    "end": "949740"
  },
  {
    "text": "I can actually then start it yeah I want to confirm this because this",
    "start": "949740",
    "end": "955800"
  },
  {
    "text": "is a breaking is that a breaking operation um at some point",
    "start": "955800",
    "end": "963560"
  },
  {
    "text": "um we should be seeing some results in the helicopter now the thing I want to",
    "start": "963660",
    "end": "970800"
  },
  {
    "text": "really see is um within Prometheus the container memory usage so",
    "start": "970800",
    "end": "979680"
  },
  {
    "text": "um see I need to cheat I don't know the",
    "start": "979680",
    "end": "987000"
  },
  {
    "text": "from Kill query at the top of my head",
    "start": "987000",
    "end": "992459"
  },
  {
    "text": "and we want to see that as a graph so right now memory looks okay it's just",
    "start": "992459",
    "end": "1000440"
  },
  {
    "text": "200k something like that um but at some point we should be seeing",
    "start": "1000440",
    "end": "1005600"
  },
  {
    "text": "some some memory going on um let's see what happens ah okay so",
    "start": "1005600",
    "end": "1011839"
  },
  {
    "text": "host not found not not non-authoritative try again data means we are already",
    "start": "1011839",
    "end": "1016940"
  },
  {
    "text": "injecting DNS failure so at some point we should already be leaking some memory",
    "start": "1016940",
    "end": "1022940"
  },
  {
    "text": "which hopefully yeah it goes up and up and up and",
    "start": "1022940",
    "end": "1028100"
  },
  {
    "text": "at some point um or like I've already defined a premises",
    "start": "1028100",
    "end": "1034699"
  },
  {
    "text": "alert for that when the memory usage goes beyond 10 megabytes 10 megabytes it",
    "start": "1034699",
    "end": "1041418"
  },
  {
    "text": "will trigger an alert and do that this is a different container",
    "start": "1041419",
    "end": "1048860"
  },
  {
    "text": "um but yeah hopefully this will work in the meantime Let's see we have the alert",
    "start": "1048860",
    "end": "1055220"
  },
  {
    "text": "manager over here and some point we should be seeing container",
    "start": "1055220",
    "end": "1062660"
  },
  {
    "text": "memory limit going on top um if not",
    "start": "1062660",
    "end": "1069200"
  },
  {
    "text": "um make up screenshot the ideas really like to trigger the",
    "start": "1069200",
    "end": "1074360"
  },
  {
    "text": "alert and see that and detect it and being able to say this is helpful information for me maybe something is",
    "start": "1074360",
    "end": "1082520"
  },
  {
    "text": "going on with a memory leak which can only be triggered by by DNS chaos Engineering in my environment",
    "start": "1082520",
    "end": "1090500"
  },
  {
    "text": "um so see if we were able to",
    "start": "1090500",
    "end": "1096200"
  },
  {
    "text": "trigger that or not the problem with the demons is the one thing works one minute",
    "start": "1096200",
    "end": "1101299"
  },
  {
    "text": "the other one works one minute and this kinda adds up um but let's see how many more we're",
    "start": "1101299",
    "end": "1106940"
  },
  {
    "text": "leaking already a little bit over time",
    "start": "1106940",
    "end": "1112220"
  },
  {
    "text": "and let me oh yeah okay container memory limit",
    "start": "1112220",
    "end": "1119120"
  },
  {
    "text": "um this has been hit and which one did it which one was it one of the pods",
    "start": "1119120",
    "end": "1126679"
  },
  {
    "text": "um already so this is an audio alert and if we would have been defining some",
    "start": "1126679",
    "end": "1132080"
  },
  {
    "text": "service level objectives they would also have been violated in that regard so",
    "start": "1132080",
    "end": "1137299"
  },
  {
    "text": "this can be like one way of injecting chaos and seeing that everything works",
    "start": "1137299",
    "end": "1142880"
  },
  {
    "text": "or it doesn't the the demo application and all the",
    "start": "1142880",
    "end": "1147980"
  },
  {
    "text": "examples are available online as open source so if you want to use them for your own environments you can totally do",
    "start": "1147980",
    "end": "1153559"
  },
  {
    "text": "that the thing I want to do now or like",
    "start": "1153559",
    "end": "1159380"
  },
  {
    "text": "continue with not only like the demon now this is just the yellow definition",
    "start": "1159380",
    "end": "1164660"
  },
  {
    "text": "again I'm documented for you to maybe try it later on the thing is now that we",
    "start": "1164660",
    "end": "1170900"
  },
  {
    "text": "have generated some alerts and have potentially some red dashboards or something maybe optimize or think about",
    "start": "1170900",
    "end": "1177080"
  },
  {
    "text": "optimizing the alert counts think about grouping additional context in the alerts also like focusing in on the",
    "start": "1177080",
    "end": "1185059"
  },
  {
    "text": "dashboard so like using what is already available correlating data and also often reducing",
    "start": "1185059",
    "end": "1191840"
  },
  {
    "text": "the amount of visible data so that teams who are like you're getting paged",
    "start": "1191840",
    "end": "1197120"
  },
  {
    "text": "potentially a 3M and 3 am in the morning you really need to see what's going on and how to fix it fast because otherwise",
    "start": "1197120",
    "end": "1204860"
  },
  {
    "text": "it's really not fun so like how to gain confidence in that regard",
    "start": "1204860",
    "end": "1210400"
  },
  {
    "text": "we can use the metrics from premises for example um Define the alerts as a practical",
    "start": "1210400",
    "end": "1216919"
  },
  {
    "text": "query and have the service level objectives this is kind of a step-by-step storyline the other thing",
    "start": "1216919",
    "end": "1223880"
  },
  {
    "text": "which is important to notice like seeing what is going on and start starting with the golden signals like latency traffic",
    "start": "1223880",
    "end": "1231400"
  },
  {
    "text": "errors into saturation um which can help for Ops teams or",
    "start": "1231400",
    "end": "1240140"
  },
  {
    "text": "efforts teams sues um it doesn't really matter like having too many dashboards and alerts like",
    "start": "1240140",
    "end": "1246679"
  },
  {
    "text": "learning and documenting and also ensuring that onboarding for new team members um Works in that sense because it can be",
    "start": "1246679",
    "end": "1252860"
  },
  {
    "text": "rather overwhelming and the goal should be to immediately like see what is important and also reduce the the mean",
    "start": "1252860",
    "end": "1259460"
  },
  {
    "text": "time to response overall if you want to go into like customizing Cube Prometheus you need to learn",
    "start": "1259460",
    "end": "1265880"
  },
  {
    "text": "jsonnet but I found it really like rather I would say easy or good",
    "start": "1265880",
    "end": "1272539"
  },
  {
    "text": "documented to learn you can develop your own rules and dashboards and for example",
    "start": "1272539",
    "end": "1278360"
  },
  {
    "text": "by monitoring other namespaces adding applications you can also create custom dashboards adding a data source and",
    "start": "1278360",
    "end": "1284900"
  },
  {
    "text": "profana for Prometheus at the panel at a dashboard and even automate everything and not having to create everything by",
    "start": "1284900",
    "end": "1292280"
  },
  {
    "text": "hand the other thing which is great is the service monitor customer resource",
    "start": "1292280",
    "end": "1298220"
  },
  {
    "text": "definition provided by the promises operator which allows you to really like monitor your own applications and",
    "start": "1298220",
    "end": "1305360"
  },
  {
    "text": "existing applications also with the permit and with the metrics endpoint so the tldr basically is like deploying an",
    "start": "1305360",
    "end": "1312500"
  },
  {
    "text": "application it has a matrix endpoint just adds the service monitors here the into the deployments and get even more",
    "start": "1312500",
    "end": "1320120"
  },
  {
    "text": "observability data out of the box um but this was a lot about metrics and",
    "start": "1320120",
    "end": "1325720"
  },
  {
    "text": "observability is more than that and we've already heard today it's like six types of events",
    "start": "1325720",
    "end": "1332960"
  },
  {
    "text": "um or it's three or it's even more than that um potentially we will be seeing a lot more types in the future and this is",
    "start": "1332960",
    "end": "1341840"
  },
  {
    "text": "observability kind of it's like collecting all the data so you can ask the questions like detecting the unknown",
    "start": "1341840",
    "end": "1348860"
  },
  {
    "text": "unknowns for logs we have a lot of decisions being made so it's really hard",
    "start": "1348860",
    "end": "1354919"
  },
  {
    "text": "to answer the question of what type of things do we want to see how long do we",
    "start": "1354919",
    "end": "1360559"
  },
  {
    "text": "want to store it is it helpful to see all the podlocks in a central location and store petabytes of data with",
    "start": "1360559",
    "end": "1366679"
  },
  {
    "text": "retention or a time of one year because compliance and things like that so it's it's really rough with tracing we get a",
    "start": "1366679",
    "end": "1375020"
  },
  {
    "text": "different perspective of like adding spans with a stunning end time more context more metadata the problem on the",
    "start": "1375020",
    "end": "1381320"
  },
  {
    "text": "other side is you need to do code changes developers need to be adding that to the uh to the code Auto",
    "start": "1381320",
    "end": "1387260"
  },
  {
    "text": "instrumentation is another thing coming up which makes it easier but still it's",
    "start": "1387260",
    "end": "1394280"
  },
  {
    "text": "it's challenging the great thing is within the community and like going Beyond vendors working on a",
    "start": "1394280",
    "end": "1401240"
  },
  {
    "text": "specification and framework with open telemetry having the collector bringing my own",
    "start": "1401240",
    "end": "1406640"
  },
  {
    "text": "backhands for eager for traces for example promises for metrics having",
    "start": "1406640",
    "end": "1411919"
  },
  {
    "text": "client libraries and everyone like working together and providing the best for like the different languages the",
    "start": "1411919",
    "end": "1418940"
  },
  {
    "text": "different scenarios and the violence we need to like support um focusing on traces like in kubernetes",
    "start": "1418940",
    "end": "1426620"
  },
  {
    "text": "the components I think it's in the working standing traces and also the applications",
    "start": "1426620",
    "end": "1432799"
  },
  {
    "text": "themselves so this is a great way to like look at the different observability data type and one thing I recently did",
    "start": "1432799",
    "end": "1440539"
  },
  {
    "text": "was trying out the open Telemetry web server SDK to instrument nginx and in",
    "start": "1440539",
    "end": "1446240"
  },
  {
    "text": "the Pache like to see when a client is sending an HTTP request the server as",
    "start": "1446240",
    "end": "1451760"
  },
  {
    "text": "the backend does something and sends the kind response and it got me thinking of like can we maybe add a chaos experiment",
    "start": "1451760",
    "end": "1458539"
  },
  {
    "text": "to that so like slowing down the response and I could add a sleep in my code and then deploy",
    "start": "1458539",
    "end": "1465320"
  },
  {
    "text": "and then see what what happens but this isn't really like the best idea and a",
    "start": "1465320",
    "end": "1470720"
  },
  {
    "text": "better idea would be to use a chaos experiment for HTTP for Network for CPU",
    "start": "1470720",
    "end": "1475940"
  },
  {
    "text": "and memory stress tests to allow seeing what is going on and I've reproduced",
    "start": "1475940",
    "end": "1482360"
  },
  {
    "text": "like one of the first things with chaos mesh to stress test the CPU and the memory forward for deployed engine X",
    "start": "1482360",
    "end": "1489559"
  },
  {
    "text": "container which then sends the traces to Jaeger and the request time increased",
    "start": "1489559",
    "end": "1495140"
  },
  {
    "text": "over time I was like oh this is for me like the five minute success to get going and and to really like think about",
    "start": "1495140",
    "end": "1502580"
  },
  {
    "text": "more what else could be possible with chaos engineering with traces maybe even more observability data in the future",
    "start": "1502580",
    "end": "1510679"
  },
  {
    "text": "so some other ideas which are always at the top of my head is like thinking of X",
    "start": "1510679",
    "end": "1516140"
  },
  {
    "text": "and plus like linking metrics with traces and being able to correlate and",
    "start": "1516140",
    "end": "1521419"
  },
  {
    "text": "debug more and combining it somehow with chaos engineering and one other thought was and I've seen it at kubecon EU",
    "start": "1521419",
    "end": "1529179"
  },
  {
    "text": "aggregated Trace metrics so being able to create metrics from traces in open",
    "start": "1529179",
    "end": "1535039"
  },
  {
    "text": "Telemetry and again think of like how can we trigger that with chaos",
    "start": "1535039",
    "end": "1540200"
  },
  {
    "text": "engineering and other things um combined with kubernetes system component tracing",
    "start": "1540200",
    "end": "1546380"
  },
  {
    "text": "okay lots of things but there is even more than that",
    "start": "1546380",
    "end": "1552919"
  },
  {
    "text": "um and I'm currently trying to learn ebpf and understanding what it actually does and how it can help there were great",
    "start": "1552919",
    "end": "1559100"
  },
  {
    "text": "ways to really think of on a different way to collect observability data and",
    "start": "1559100",
    "end": "1564559"
  },
  {
    "text": "great tools to getting started but one of the ideas was like how how does this",
    "start": "1564559",
    "end": "1569900"
  },
  {
    "text": "like complement or fit within Prometheus metrics how does it fit within traces",
    "start": "1569900",
    "end": "1575799"
  },
  {
    "text": "can we do like the same like different defining a service level objective alerts and then add some chaos",
    "start": "1575799",
    "end": "1581840"
  },
  {
    "text": "engineering and I've also like seen silium tetragon was open sourced at kubecon Europe and um I was like",
    "start": "1581840",
    "end": "1590179"
  },
  {
    "text": "we should be combining that somehow it needs an open standard it needs a way to like say a different observability data",
    "start": "1590179",
    "end": "1597260"
  },
  {
    "text": "types since my talk is too long already I will",
    "start": "1597260",
    "end": "1602840"
  },
  {
    "text": "be looking into this next year when I'm hoping to like find answers together and learn together in the open",
    "start": "1602840",
    "end": "1609500"
  },
  {
    "text": "um last but not least looking from the security security",
    "start": "1609500",
    "end": "1614900"
  },
  {
    "text": "perspective into observability and Chaos engineering it could be for example an idea like a supply chain attack to",
    "start": "1614900",
    "end": "1622279"
  },
  {
    "text": "create a chaos experiment that downloads and installs malicious software somehow combined with HTTP kills or something",
    "start": "1622279",
    "end": "1628880"
  },
  {
    "text": "like that which could also be an interesting approach maybe in the future",
    "start": "1628880",
    "end": "1635120"
  },
  {
    "text": "let's see about this now gaining confidence finally",
    "start": "1635120",
    "end": "1641059"
  },
  {
    "text": "maybe building some Lego in between um so there are different types of chaos",
    "start": "1641059",
    "end": "1646520"
  },
  {
    "text": "or chaos experiments for like SRV death uh devops",
    "start": "1646520",
    "end": "1652400"
  },
  {
    "text": "um and maybe even death setups like overloading CPU failing DNS clients that",
    "start": "1652400",
    "end": "1658460"
  },
  {
    "text": "are not closing TLS connections for example container pools not being successful",
    "start": "1658460",
    "end": "1664760"
  },
  {
    "text": "because there are rate limits and even like breaking security policies so this is like",
    "start": "1664760",
    "end": "1671380"
  },
  {
    "text": "potentially there are like many many ways to break things but you should also",
    "start": "1671380",
    "end": "1676700"
  },
  {
    "text": "know the limits of chaos like avoiding chaos Inception um what I mean by that is like don't run",
    "start": "1676700",
    "end": "1682460"
  },
  {
    "text": "everything of the chaos experiments all the time um because it could break existing",
    "start": "1682460",
    "end": "1688480"
  },
  {
    "text": "workflows or team pages and things like that and maybe think of like starting",
    "start": "1688480",
    "end": "1693740"
  },
  {
    "text": "with a staging environment to prevent data loss because running a chaos experiment could also cause like at a",
    "start": "1693740",
    "end": "1700820"
  },
  {
    "text": "certain point maybe another database right but then something is really going wrong and also think of that chaos",
    "start": "1700820",
    "end": "1707900"
  },
  {
    "text": "engineering doesn't solve all the reliability issues but it can help you bring New Perspectives into what is",
    "start": "1707900",
    "end": "1714559"
  },
  {
    "text": "going on and maybe the simulated production incident becomes a little",
    "start": "1714559",
    "end": "1720140"
  },
  {
    "text": "more reality um if you want to do it continuously for",
    "start": "1720140",
    "end": "1726080"
  },
  {
    "text": "example within cicd um I would I would love to have that out of the box in the future and potentially",
    "start": "1726080",
    "end": "1732500"
  },
  {
    "text": "but we all will build this in some way like having feedback in a much request before something gets even merged to the",
    "start": "1732500",
    "end": "1739400"
  },
  {
    "text": "main branch and later on released um making like developers and everyone use and benefit from observability and",
    "start": "1739400",
    "end": "1747260"
  },
  {
    "text": "Chaos engineering and for example with continuous delivery workflows running the chaos experiments in production and",
    "start": "1747260",
    "end": "1754520"
  },
  {
    "text": "having some sort of like rollback and ways to to detect that it could be seen",
    "start": "1754520",
    "end": "1761299"
  },
  {
    "text": "like the red team for observability test kind of either you announce it or maybe you don't announce it and see what's",
    "start": "1761299",
    "end": "1766820"
  },
  {
    "text": "going to happen this is really like dependent on on what is needed",
    "start": "1766820",
    "end": "1773240"
  },
  {
    "text": "and um the the recap uh I would say like bringing",
    "start": "1773240",
    "end": "1779539"
  },
  {
    "text": "chaos into observability is super helpful can be a way to like verify the alerts and service level objectives",
    "start": "1779539",
    "end": "1786559"
  },
  {
    "text": "um the idea is to iterate and innovate like small taking small steps and also",
    "start": "1786559",
    "end": "1791600"
  },
  {
    "text": "think of like what could be next so many many folks are talking about machine learning or ml Ops and maybe we can kind",
    "start": "1791600",
    "end": "1798980"
  },
  {
    "text": "of combine that in a good way not like Skynet um I was thinking of what what could be",
    "start": "1798980",
    "end": "1805520"
  },
  {
    "text": "next um since this is a lot of things to learn and look into",
    "start": "1805520",
    "end": "1811580"
  },
  {
    "text": "um I've done a virtue recently which is like three and a half hours",
    "start": "1811580",
    "end": "1817220"
  },
  {
    "text": "um to to dive more into kubernetes observability I started o11 vital Life",
    "start": "1817220",
    "end": "1822559"
  },
  {
    "text": "as a knowledge base and I'm writing my newsletter and my this slide tag is already available",
    "start": "1822559",
    "end": "1829520"
  },
  {
    "text": "on my website okay this was a lot thanks",
    "start": "1829520",
    "end": "1834559"
  },
  {
    "text": "for listening thanks for attention um if we have time for questions",
    "start": "1834559",
    "end": "1840420"
  },
  {
    "text": "[Applause] and yes I think we might have some time",
    "start": "1840420",
    "end": "1847039"
  },
  {
    "text": "for questions any questions to Michael yes",
    "start": "1847039",
    "end": "1851860"
  },
  {
    "text": "yeah Michael fantastic talk uh thank you I just wanted to thank you for",
    "start": "1855559",
    "end": "1861020"
  },
  {
    "text": "mentioning Percy's uh we are driving Percy's ah so if you want to find more",
    "start": "1861020",
    "end": "1866240"
  },
  {
    "text": "just uh talk to me and or come at the pronosphere booth at g15 perfect things",
    "start": "1866240",
    "end": "1874179"
  },
  {
    "text": "great any question yes",
    "start": "1874640",
    "end": "1879159"
  },
  {
    "text": "thank you for your talk um I was wondering the chaos mesh program that",
    "start": "1880760",
    "end": "1886820"
  },
  {
    "text": "you you showed here I'm not familiar at all with it but it basically messes up with whatever you wanted to mess up with",
    "start": "1886820",
    "end": "1894320"
  },
  {
    "text": "um does it run in a rootless environment or do you need elevated privileges to run it",
    "start": "1894320",
    "end": "1901539"
  },
  {
    "text": "um I think it works in in the rootless environmental thing and you need to",
    "start": "1902299",
    "end": "1908419"
  },
  {
    "text": "configure for example so I was running it in civil Cloud you need to expose the container the socket so it can kind of",
    "start": "1908419",
    "end": "1914899"
  },
  {
    "text": "inject certain things in between um",
    "start": "1914899",
    "end": "1920620"
  },
  {
    "text": "I would need to look up exactly what it needs in the documentation the thing is for me when I started using or trying it",
    "start": "1921260",
    "end": "1928399"
  },
  {
    "text": "out like I started I think in in April or in March this year using the helm chart just installing it",
    "start": "1928399",
    "end": "1935360"
  },
  {
    "text": "and having the first success was really like a matter of like 10 minutes or 15 minutes and I really like this this",
    "start": "1935360",
    "end": "1942260"
  },
  {
    "text": "first time experience of getting started and kind of feeling addicted and the thing to mention is",
    "start": "1942260",
    "end": "1949399"
  },
  {
    "text": "um it's like still like being rude or on the open heart kind of so you should be",
    "start": "1949399",
    "end": "1955039"
  },
  {
    "text": "using our bug and SSO login for chaos mesh which you can configure to ensure that not everyone can run a chaos",
    "start": "1955039",
    "end": "1961340"
  },
  {
    "text": "experiment because then it's like I'm breaking something because I'm funny or",
    "start": "1961340",
    "end": "1966380"
  },
  {
    "text": "maybe I'm a malicious attacker or something so really may also making sure that the security for chaos",
    "start": "1966380",
    "end": "1973580"
  },
  {
    "text": "engineering is is in place great thank you okay any other question",
    "start": "1973580",
    "end": "1980659"
  },
  {
    "text": "to Michael yes",
    "start": "1980659",
    "end": "1986559"
  },
  {
    "text": "by the way I think I don't need countless Engineering in my production clusters I have cows built in so",
    "start": "1987080",
    "end": "1994240"
  },
  {
    "text": "it's uh it's kind of Next Level to have this this kind of uh you know like experience and like whatever like",
    "start": "1994240",
    "end": "2001179"
  },
  {
    "text": "clear um you know everything is done on the Clusters I can play with chaos engineering on top of it hi question",
    "start": "2001179",
    "end": "2008380"
  },
  {
    "text": "uh yeah I was just wondering with chaos engineering do you regularly just run it",
    "start": "2008380",
    "end": "2013480"
  },
  {
    "text": "as part of a pipeline like what's your process for doing or executing chaos engineering is it just for like SRE",
    "start": "2013480",
    "end": "2020260"
  },
  {
    "text": "disaster scenarios or do you um run it on a regular basis do you run it on each",
    "start": "2020260",
    "end": "2025299"
  },
  {
    "text": "deployment like how do you um Implement that as part of your workflow on a regular basis",
    "start": "2025299",
    "end": "2034200"
  },
  {
    "text": "say like there are different use cases and I know that like from from the",
    "start": "2034299",
    "end": "2039880"
  },
  {
    "text": "gitlab perspective our SUVs are looking into ways of um running chaos engineer or chaos tests",
    "start": "2039880",
    "end": "2046120"
  },
  {
    "text": "for like the the production environment on on the SAS platform but I'm also",
    "start": "2046120",
    "end": "2051220"
  },
  {
    "text": "thinking of how can we like enable for example developers within or like",
    "start": "2051220",
    "end": "2056679"
  },
  {
    "text": "everyone using that in the CI CD workflow um the thing is like running it continuously needs sort of documentation",
    "start": "2056679",
    "end": "2064240"
  },
  {
    "text": "needs ways to like what are we doing with the results of that chaos",
    "start": "2064240",
    "end": "2069580"
  },
  {
    "text": "experiment or workflows so this needs to have like a defined workflow if that is",
    "start": "2069580",
    "end": "2075580"
  },
  {
    "text": "not possible because for some reason it generates too many costs because it can also be like you have",
    "start": "2075580",
    "end": "2081460"
  },
  {
    "text": "10 000 dollar Cloud build because of chaos engineering this is something you should prevent at all cost so it's",
    "start": "2081460",
    "end": "2089740"
  },
  {
    "text": "um it really needs some like time to try it out and figure out whether it fits into your systems",
    "start": "2089740",
    "end": "2096460"
  },
  {
    "text": "um if the experiment for example can be a deployment into stitching or environment from a merge request to pull",
    "start": "2096460",
    "end": "2102220"
  },
  {
    "text": "request you see ICD and githubs and whatnot this can be helpful if it takes",
    "start": "2102220",
    "end": "2107800"
  },
  {
    "text": "too long if it needs to run five minutes and then another five minutes and things like that maybe do it more on a canary",
    "start": "2107800",
    "end": "2115480"
  },
  {
    "text": "deployment basis maybe a different branch not not the release branch and",
    "start": "2115480",
    "end": "2121000"
  },
  {
    "text": "move it out of the regular feature Branch development but I think it can be helpful to really like see something in",
    "start": "2121000",
    "end": "2128560"
  },
  {
    "text": "advance as a developer and not having to fix that in production and burn out because customers calling",
    "start": "2128560",
    "end": "2135160"
  },
  {
    "text": "okay thank you um I think we're them I think other questions can you can go to the grab",
    "start": "2135160",
    "end": "2141339"
  },
  {
    "text": "Michael on the corridor and yeah thank you very much [Applause]",
    "start": "2141339",
    "end": "2151420"
  }
]