[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "hey folks welcome come on in happy Friday I got one more minutes okay two o'clock",
    "start": "4799",
    "end": "11639"
  },
  {
    "text": "exactly uh welcome to sharpen the edge with k3s and containerized operating",
    "start": "11639",
    "end": "17279"
  },
  {
    "text": "systems I am Ray lojano I work for Susa professionally but I'm also an upstream",
    "start": "17279",
    "end": "23279"
  },
  {
    "text": "kubernetes contributor I am the Sig docs co-chair so I help maintain kubernetes",
    "start": "23279",
    "end": "28439"
  },
  {
    "text": "dot IO the Upstream documentation I've been a member of seven release teams some of the highlights was I was the",
    "start": "28439",
    "end": "34620"
  },
  {
    "text": "release lead for 1.23 I was the immersed advisor for 1.25 that that removed pod",
    "start": "34620",
    "end": "41219"
  },
  {
    "text": "security policies I'm also a sub-project lead for six security I helped run the",
    "start": "41219",
    "end": "46500"
  },
  {
    "text": "external security audit that was published on Wednesday so please uh take a look at that and I have links here and",
    "start": "46500",
    "end": "52379"
  },
  {
    "text": "these slides are updated and uploaded as well but today we're going to start off",
    "start": "52379",
    "end": "57780"
  },
  {
    "text": "talking about what is the edge and uh the edge there's many definitions for it",
    "start": "57780",
    "end": "63239"
  },
  {
    "start": "58000",
    "end": "58000"
  },
  {
    "text": "uh it could be a browser it could be a YouTube guitarist as well and if you ask",
    "start": "63239",
    "end": "70560"
  },
  {
    "text": "multiple organizations you will get multiple answers a grocery store company might consider each location as an edge",
    "start": "70560",
    "end": "77520"
  },
  {
    "text": "site but a bank may not consider each batch location in Edge site but only ATM",
    "start": "77520",
    "end": "83759"
  },
  {
    "text": "machines not in a branch as as an edge site so um actually so we actually asked",
    "start": "83759",
    "end": "90600"
  },
  {
    "text": "folks and organizations what uh what they uh Define as the edge so we got",
    "start": "90600",
    "end": "96060"
  },
  {
    "text": "several answers uh from uh from that survey it could be any remote site or",
    "start": "96060",
    "end": "101700"
  },
  {
    "text": "device that processes data and connected by a network some said it's any place that's not part",
    "start": "101700",
    "end": "108960"
  },
  {
    "text": "of the organization's core Network or DC or cloud",
    "start": "108960",
    "end": "114860"
  },
  {
    "text": "or it could be any Remote device that can sense infer and act by itself and",
    "start": "115439",
    "end": "121320"
  },
  {
    "text": "there are many more different answers as well so but when I actually Googled what is Edge Computing there's also multiple",
    "start": "121320",
    "end": "128340"
  },
  {
    "text": "answers but there is a trend I'm not going to go through the list but there's four common traits one it's a remote",
    "start": "128340",
    "end": "134400"
  },
  {
    "text": "location away from the DC there's some sort of computes and processing involved",
    "start": "134400",
    "end": "139800"
  },
  {
    "text": "and there's a network connection lastly I want to point out there the Linux Foundation has a state of the edge at",
    "start": "139800",
    "end": "147319"
  },
  {
    "text": "lfedge.org please take a look at that it's a vendor neutral platform for research on edge computing",
    "start": "147319",
    "end": "154440"
  },
  {
    "start": "154000",
    "end": "154000"
  },
  {
    "text": "so there's challenges to etch no matter what how or how people Define uh Edge",
    "start": "154440",
    "end": "160020"
  },
  {
    "text": "locations one is a resource so there's resource constraints so you might have",
    "start": "160020",
    "end": "165780"
  },
  {
    "text": "small devices this may not be totally true for uh every organization that like",
    "start": "165780",
    "end": "171300"
  },
  {
    "text": "if an organ or like if an organization actually ships out um Hardware to host vcenter on uh that",
    "start": "171300",
    "end": "178680"
  },
  {
    "text": "wouldn't be very resource constraint but it might be there's physical restraints so there",
    "start": "178680",
    "end": "184800"
  },
  {
    "text": "might be difficult locations or there might be hundreds or thousands of devices uh and it's difficult to have",
    "start": "184800",
    "end": "190980"
  },
  {
    "text": "on-site technicians or it's difficult to send outside technicians to the to those",
    "start": "190980",
    "end": "196379"
  },
  {
    "text": "locations um sometimes and so what these resource constraints and",
    "start": "196379",
    "end": "202500"
  },
  {
    "text": "these physical constraints we have we need flexibility some of the other challenges is",
    "start": "202500",
    "end": "208019"
  },
  {
    "text": "provisioning and onboarding how do we manage dozens hundreds and thousands of devices so this is a challenge of many",
    "start": "208019",
    "end": "215459"
  },
  {
    "text": "assets how do we do life cycle things like how do we patch upgrade uh the OS how do we",
    "start": "215459",
    "end": "223500"
  },
  {
    "text": "upgrade kubernetes on these devices and for you know it's easy to do on a dozen",
    "start": "223500",
    "end": "228900"
  },
  {
    "text": "it's easy it might be easy to do on on a few dozen but when you get to hundreds and even thousands",
    "start": "228900",
    "end": "235980"
  },
  {
    "text": "um that's that becomes very difficult and how do we Design This for scale and",
    "start": "235980",
    "end": "242819"
  },
  {
    "text": "there's it could be a small scale like a local Edge device uh or Edge Network or",
    "start": "242819",
    "end": "248700"
  },
  {
    "text": "it could be a large scale it could be global so why are we talking about Edge at",
    "start": "248700",
    "end": "255239"
  },
  {
    "start": "252000",
    "end": "252000"
  },
  {
    "text": "kubecon and Cloud nativecon because folks we are bringing Cloud native principles to the edge because of their",
    "start": "255239",
    "end": "262800"
  },
  {
    "text": "benefits we can plug in advice and turn it on and everything should be automated",
    "start": "262800",
    "end": "269880"
  },
  {
    "text": "to onboard so ideally we could take machines uh and turn them into",
    "start": "269880",
    "end": "275280"
  },
  {
    "text": "kubernetes clusters have them be consistent kubernetes clusters the versions We want as well how do we",
    "start": "275280",
    "end": "282060"
  },
  {
    "text": "manage the OS life cycle in a declarative way and we can also tie into our automated",
    "start": "282060",
    "end": "288600"
  },
  {
    "text": "pipelines uh get Ops to deploy our applications across these hundreds or",
    "start": "288600",
    "end": "294240"
  },
  {
    "text": "thousands devices that become hundreds and thousands of clusters",
    "start": "294240",
    "end": "299759"
  },
  {
    "text": "lastly we're bringing devops and containers and kubernetes to the edge so this exposes the need for operations and",
    "start": "299759",
    "end": "307500"
  },
  {
    "text": "developer automation to be streamlined so now we have this Edge puzzle and how",
    "start": "307500",
    "end": "315060"
  },
  {
    "text": "do we solve this Edge puzzle we need to look at the kubernetes distro for resource constrained environments",
    "start": "315060",
    "end": "322500"
  },
  {
    "text": "we should also take a look at the OS for resource constrained environments how do we have a minimal OS at this point I'll",
    "start": "322500",
    "end": "330539"
  },
  {
    "text": "point out later on that everything besides the application is overhead including the including the operating",
    "start": "330539",
    "end": "336240"
  },
  {
    "text": "system how do we gain operational efficiency how do you remove the need of standing",
    "start": "336240",
    "end": "343440"
  },
  {
    "text": "on-site technicians and how do we support existing Edge",
    "start": "343440",
    "end": "349020"
  },
  {
    "text": "infrastructure with Cloud native so at this point on we're going to take a look at each piece of this Edge puzzle",
    "start": "349020",
    "end": "355440"
  },
  {
    "text": "to solve this Edge issue first we're going to take a look at at",
    "start": "355440",
    "end": "361680"
  },
  {
    "start": "359000",
    "end": "359000"
  },
  {
    "text": "the kubernetes distro so k3s is a CNC project it's in the sandbox maturity",
    "start": "361680",
    "end": "367020"
  },
  {
    "text": "level it was donated by Rancher Labs I believe in 2020 or is it accepted in",
    "start": "367020",
    "end": "372360"
  },
  {
    "text": "2020 there are other Edge flavors of kubernetes as well it's not just k-3s do",
    "start": "372360",
    "end": "379199"
  },
  {
    "text": "you want to point that out there's Cube Edge there's micro capes but for this talk uh since this is also sequence of",
    "start": "379199",
    "end": "386160"
  },
  {
    "text": "projects as well we're going to focus on k3s and k3s is purposely built for resource constrained environment so you",
    "start": "386160",
    "end": "393180"
  },
  {
    "text": "need one CPU and five 500 Megs of memory so k3s is a fully cncf certified",
    "start": "393180",
    "end": "399720"
  },
  {
    "text": "kubernetes distribution it does not need hcd and every but what we like to say is",
    "start": "399720",
    "end": "407100"
  },
  {
    "text": "batteries included so you don't need to install a container runtime that already installs containerd and run C if you",
    "start": "407100",
    "end": "414120"
  },
  {
    "text": "ever use cubeadm recently with dockershim removed you've had to configure the con the config.tom also it",
    "start": "414120",
    "end": "421380"
  },
  {
    "text": "gets kind of more complicated now when if you use Upstream kubernetes uh k3s includes the cni but you can use",
    "start": "421380",
    "end": "429120"
  },
  {
    "text": "any cni Plano the default C9 of course it comes with core DNS metric server as",
    "start": "429120",
    "end": "434819"
  },
  {
    "text": "well it also comes with a large local storage provider if you need service",
    "start": "434819",
    "end": "439919"
  },
  {
    "text": "load balancing uh it comes with a project called Clipper lb which is for",
    "start": "439919",
    "end": "445259"
  },
  {
    "text": "service load balancing so it opens low ports on nodes and routes traffic back to the service and response to load",
    "start": "445259",
    "end": "451919"
  },
  {
    "text": "balancing service requests and also because of use of final so there's also a network policy controller",
    "start": "451919",
    "end": "457740"
  },
  {
    "text": "so if you do use a cni that does employ Network policies you would just have to",
    "start": "457740",
    "end": "463919"
  },
  {
    "text": "disable the network policy controller it also includes some host utilities like iptables as well and you don't need",
    "start": "463919",
    "end": "471900"
  },
  {
    "text": "to use FCD it comes with kind which which is an SCD shim so I'll by default",
    "start": "471900",
    "end": "478740"
  },
  {
    "text": "um as k3s uses sqlite stream and of course NCD as well",
    "start": "478740",
    "end": "488120"
  },
  {
    "text": "and there's a one line install so I like to use this one liner as well if you go to the quick start guide it gives you",
    "start": "489080",
    "end": "495060"
  },
  {
    "text": "just the curl command but I like to add in that k3s keeping fig no take it to you the kip config without using the k3s",
    "start": "495060",
    "end": "502020"
  },
  {
    "text": "binary if you like so this is just the architecture I'm not going to go into great detail with with",
    "start": "502020",
    "end": "507960"
  },
  {
    "text": "the architecture for k3s and in k3s we talk of This k3s Server as like the",
    "start": "507960",
    "end": "514919"
  },
  {
    "text": "control as the as like the control plane components of kubernetes and the k3s",
    "start": "514919",
    "end": "520320"
  },
  {
    "text": "Agents is like the worker nodes of kubernetes as well so",
    "start": "520320",
    "end": "526339"
  },
  {
    "text": "so now we talked about a kubernetes distribution for the edge so we need a",
    "start": "526560",
    "end": "532320"
  },
  {
    "text": "an operating system for the edge so let's take a look at containerized operating systems and we already have",
    "start": "532320",
    "end": "538560"
  },
  {
    "text": "container rides um operating system images already uh",
    "start": "538560",
    "end": "543600"
  },
  {
    "text": "like Tumbleweed uh Suza Linux Enterprise Ubuntu Alpine but we can't really use",
    "start": "543600",
    "end": "549420"
  },
  {
    "text": "these because we need something bootable in bare metal and iot devices and",
    "start": "549420",
    "end": "554760"
  },
  {
    "text": "virtual machines so how do we make a bootable container operating system and like I said before",
    "start": "554760",
    "end": "562019"
  },
  {
    "start": "556000",
    "end": "556000"
  },
  {
    "text": "every if we consider it at the edge devices or at the edge level every we",
    "start": "562019",
    "end": "567180"
  },
  {
    "text": "only care about the application and everything below the application is overhead including the the operating",
    "start": "567180",
    "end": "573240"
  },
  {
    "text": "system so how do you make a bootable containerized OS so we have a COS toolkits which now",
    "start": "573240",
    "end": "581279"
  },
  {
    "text": "we've all which we have been renamed from cos toolkit to the elemental toolkits and this",
    "start": "581279",
    "end": "589080"
  },
  {
    "text": "toolkit includes the runtime and build time framework so you can boot containers in Virtual machines uh in",
    "start": "589080",
    "end": "597480"
  },
  {
    "text": "cloud and hyperscalers bare metal as well and we'll take a deep set my deep",
    "start": "597480",
    "end": "603300"
  },
  {
    "text": "look into this as well it's based on Lewis which is a container-based package manager as well and has some utilities",
    "start": "603300",
    "end": "610019"
  },
  {
    "text": "like creating isos from a container image and this this Elemental toolkit also",
    "start": "610019",
    "end": "616560"
  },
  {
    "text": "includes a kernel and c groups as well and also all the common drivers you need uh for it for for your OS",
    "start": "616560",
    "end": "624660"
  },
  {
    "text": "the elemental toolkit is actually part of the elemental software stack and the elemental software stack we have it to",
    "start": "624660",
    "end": "631620"
  },
  {
    "text": "enable which enables centralized Cloud native OS management with kubernetes but for this for the scope of this talk",
    "start": "631620",
    "end": "638339"
  },
  {
    "text": "we're strictly going to stay at the elemental toolkit level",
    "start": "638339",
    "end": "643580"
  },
  {
    "text": "so we're going to create a bootable OS container image we're gonna run it on bare metal cloud",
    "start": "643620",
    "end": "650100"
  },
  {
    "text": "and virtual machines like I said before we we're going to use the elemental toolkits the great thing",
    "start": "650100",
    "end": "656760"
  },
  {
    "text": "with the elemental toolkit is that we can also now embed k3s as well",
    "start": "656760",
    "end": "662399"
  },
  {
    "text": "uh the element is full kit um I can imagine can't be used to create isos raw images ovas for vsphere cloud",
    "start": "662399",
    "end": "672360"
  },
  {
    "text": "image cloud images with Packer ipixie vagrance cacao you could also customize",
    "start": "672360",
    "end": "678839"
  },
  {
    "text": "it with cloud in it as well it does a b upgrades it's immutable as well and like",
    "start": "678839",
    "end": "684060"
  },
  {
    "text": "I mentioned you can embed k3s we're going to take a look at a little bit more deeply in how we do that it also",
    "start": "684060",
    "end": "690480"
  },
  {
    "text": "includes grub as well as for the boot loader it uses draw Cuts uh to for",
    "start": "690480",
    "end": "695640"
  },
  {
    "text": "creates the initial image used by the kernel to pre-load the block device modules uh so we could access that with",
    "start": "695640",
    "end": "702060"
  },
  {
    "text": "guitar system so this is just the example if you want",
    "start": "702060",
    "end": "707279"
  },
  {
    "text": "to do customizations if you have Cloud init files and specific directories they can be applied in five different phases",
    "start": "707279",
    "end": "713640"
  },
  {
    "text": "boot Network FS init Ram fs and reconcile and you could also just use",
    "start": "713640",
    "end": "718980"
  },
  {
    "text": "one file for for all the different phases but for this talk we're going to focus on just building the container and",
    "start": "718980",
    "end": "727079"
  },
  {
    "start": "723000",
    "end": "723000"
  },
  {
    "text": "also building the ISO and there are um what there are some vanilla images",
    "start": "727079",
    "end": "733140"
  },
  {
    "text": "you see here on the left side uh we have three that's offered actually Four",
    "start": "733140",
    "end": "738839"
  },
  {
    "text": "technically four but we're gonna focus on three uh we have a color scheme to them so we call Green for open Sousa",
    "start": "738839",
    "end": "745800"
  },
  {
    "text": "blue for Fedora and orange for Ubuntu don't know why it's not red for for",
    "start": "745800",
    "end": "751260"
  },
  {
    "text": "Fedora but it's it is blue for Fedora and so like I said for the rest of the",
    "start": "751260",
    "end": "757079"
  },
  {
    "text": "talk we're gonna focus on building the container uh the bootable container OS",
    "start": "757079",
    "end": "762240"
  },
  {
    "text": "and then building the ISO so using uh the elemental toolkits which",
    "start": "762240",
    "end": "768480"
  },
  {
    "text": "uses Lewis to make a containerized a bootable containerized operating system",
    "start": "768480",
    "end": "774120"
  },
  {
    "text": "container image we use a Docker file so this is example of that Docker file",
    "start": "774120",
    "end": "779760"
  },
  {
    "text": "and this is all in the documentation as well but I just highlighted a few things in Green in here the few things in green",
    "start": "779760",
    "end": "786120"
  },
  {
    "text": "here is that the rest of this that's not green is just setting some default layouts uh what's highlighted in green",
    "start": "786120",
    "end": "792620"
  },
  {
    "text": "is uh just the base container image that we're going to use so we're going to use a Asus Linux Enterprise based container",
    "start": "792620",
    "end": "800100"
  },
  {
    "text": "image this could be open so it's a tumbleweed this could be Ubuntu uh this",
    "start": "800100",
    "end": "805500"
  },
  {
    "text": "could be Fedora also we're setting an argument to install k3s that's what you",
    "start": "805500",
    "end": "810660"
  },
  {
    "text": "see here in the two lines of green uh and the other line green here is we're setting up the k3s uh in we're",
    "start": "810660",
    "end": "817380"
  },
  {
    "text": "installing k3s server as well you can also create a k3s agent which is the",
    "start": "817380",
    "end": "823920"
  },
  {
    "text": "worker node variety of k3s so in this Docker file we're creating uh we're setting some default layouts and",
    "start": "823920",
    "end": "830399"
  },
  {
    "text": "installing a specific version of k3s this in this case is 124.10 and at the",
    "start": "830399",
    "end": "836279"
  },
  {
    "text": "end of the docker file we're going to copy over a custom Cloud init file the cloud this this Cloud init file is going",
    "start": "836279",
    "end": "842339"
  },
  {
    "text": "to be very large so it's going to take a few a few slides but I'm not going to go in great detail of the cloud init file",
    "start": "842339",
    "end": "847680"
  },
  {
    "text": "I'm just going to highlight a few things in the cloud init file so the cloud in the file here where it's",
    "start": "847680",
    "end": "853380"
  },
  {
    "text": "beside just setting up uh the this container OS image here we're setting up",
    "start": "853380",
    "end": "859079"
  },
  {
    "text": "a user uh Ray and it's setting up and attaching attaching an SSH key as well for login setting up a default password",
    "start": "859079",
    "end": "866700"
  },
  {
    "text": "which is optional this is more the cloud init file just just setting up the uh this bootable container operating system",
    "start": "866700",
    "end": "875220"
  },
  {
    "text": "uh this example here it's in this cloudy netball and just starting up k3s when",
    "start": "875220",
    "end": "880560"
  },
  {
    "text": "when the machine the VM or Edge iot device or bare metal machine uh starts",
    "start": "880560",
    "end": "887220"
  },
  {
    "text": "up it's going to start up k3s we have a repository CM or file as well",
    "start": "887220",
    "end": "892320"
  },
  {
    "text": "just to set up the repositories so now we have we have this Docker file that we've set up uh Cloud init file as well",
    "start": "892320",
    "end": "898500"
  },
  {
    "text": "to for any customizations so we're going to create this container image of a bootable containerized OS and we're",
    "start": "898500",
    "end": "905399"
  },
  {
    "text": "simply going to use Docker build so we're going to use Docker build with the docker file give it with the tag my",
    "start": "905399",
    "end": "912360"
  },
  {
    "text": "Linux derivative uh 1.2 so now we have a container image and it is a bootable",
    "start": "912360",
    "end": "918480"
  },
  {
    "text": "containerized OS so with this container image we could",
    "start": "918480",
    "end": "923880"
  },
  {
    "text": "use a binary within it to actually create an ISO this the same bootable",
    "start": "923880",
    "end": "929940"
  },
  {
    "text": "containerized OS so to do that we do need an ISO yaml as well uh we're just going to give it a",
    "start": "929940",
    "end": "937500"
  },
  {
    "text": "few uh metadata for uh for this for the ISO",
    "start": "937500",
    "end": "943620"
  },
  {
    "text": "and to do that we just do a Docker run of the same container image that we",
    "start": "943620",
    "end": "948899"
  },
  {
    "text": "created using the my Linux derivative uh with the tag 1.2 we're using the luwet",
    "start": "948899",
    "end": "955500"
  },
  {
    "text": "make ISO binary to create an ISO so it now in our directory now we should",
    "start": "955500",
    "end": "962579"
  },
  {
    "text": "have after this process is done we have an ISO",
    "start": "962579",
    "end": "968040"
  },
  {
    "start": "968000",
    "end": "968000"
  },
  {
    "text": "so this just to summarize the provisioning of this so now we've built an an onboarding",
    "start": "968040",
    "end": "975540"
  },
  {
    "text": "image we could deploy it in a few ways in this way we have an ISO that we could",
    "start": "975540",
    "end": "980699"
  },
  {
    "text": "do we could onboard to a machine it could also mention they could use",
    "start": "980699",
    "end": "986339"
  },
  {
    "text": "qcal we could use uh would use OVA cloud images as well",
    "start": "986339",
    "end": "991620"
  },
  {
    "text": "so the remote images Boots the onboarding image and no matter what flavor you'd like",
    "start": "991620",
    "end": "998339"
  },
  {
    "text": "and the cluster is now created and the cluster is ready so the idea of",
    "start": "998339",
    "end": "1004459"
  },
  {
    "text": "taking an edge device it could be on a factory floor or it could be a small",
    "start": "1004459",
    "end": "1010160"
  },
  {
    "text": "Nook or a Raspberry Pi or it could be a small machine uh it to to have it baked",
    "start": "1010160",
    "end": "1016459"
  },
  {
    "text": "with an ISO or if it's if it's a VM in Ova uh you will have it uh with that",
    "start": "1016459",
    "end": "1024199"
  },
  {
    "text": "bootable container image OS with with an embedded k3s and you have a kubernetes",
    "start": "1024199",
    "end": "1030140"
  },
  {
    "text": "cluster so let's go so now you have a cluster how do we do life cycle things with that",
    "start": "1030140",
    "end": "1036918"
  },
  {
    "start": "1031000",
    "end": "1031000"
  },
  {
    "text": "cluster how do we do patching how do we do upgrades and we want to keep things kubernetes native so how about we have a",
    "start": "1036919",
    "end": "1044780"
  },
  {
    "text": "controller with privileges so so that it could run node upgrades so we have",
    "start": "1044780",
    "end": "1050720"
  },
  {
    "text": "what's called a system update controller which is a kubernetes controller that can upgrade the node and we've done a",
    "start": "1050720",
    "end": "1057020"
  },
  {
    "text": "CNC webinar on the system upgrade controller already there's a link in the",
    "start": "1057020",
    "end": "1062179"
  },
  {
    "text": "slide deck for that as well and the way this controller works like I",
    "start": "1062179",
    "end": "1068179"
  },
  {
    "text": "said is a very privileged container it actually runs as a job to pod to container has access to very specific",
    "start": "1068179",
    "end": "1074539"
  },
  {
    "text": "namespaces to host IPC net PID has a links capability for capsys boots has",
    "start": "1074539",
    "end": "1081320"
  },
  {
    "text": "access to the root file system as well and what this introduces it introduces",
    "start": "1081320",
    "end": "1087260"
  },
  {
    "text": "us plan a crd called plan and this can this controller manages plans and it selects nodes to run",
    "start": "1087260",
    "end": "1095000"
  },
  {
    "text": "upgrade jobs uh by using but on a plan which defines",
    "start": "1095000",
    "end": "1100220"
  },
  {
    "text": "which nodes are eligible but in Edge use cases it's probably going to be all those nodes it's going to do the upgrade",
    "start": "1100220",
    "end": "1107120"
  },
  {
    "text": "it's going to select nodes with the label selector and when the job has run to completion the controller will label",
    "start": "1107120",
    "end": "1113900"
  },
  {
    "text": "the node on which it ran the plan that it's done and done its upgrade",
    "start": "1113900",
    "end": "1119539"
  },
  {
    "text": "so this is an example of an up of a plan and in this version which I've",
    "start": "1119539",
    "end": "1124580"
  },
  {
    "text": "highlighted was the upgrade just a simple few lines here just to upgrade",
    "start": "1124580",
    "end": "1129679"
  },
  {
    "text": "using the the next the bootable container OS",
    "start": "1129679",
    "end": "1134960"
  },
  {
    "text": "image that we've created in the previous steps with the my Linux derivative tag",
    "start": "1134960",
    "end": "1141380"
  },
  {
    "text": "1.2 so we can upgrade in a few ways within our Edge devices uh we could do",
    "start": "1141380",
    "end": "1146419"
  },
  {
    "text": "it um automatically or programmatically what's with this system upgrade controller we could also do it via ISO",
    "start": "1146419",
    "end": "1153740"
  },
  {
    "text": "and we could also do it with the elemental CLI which I didn't talk about but it's not going to be in scope of",
    "start": "1153740",
    "end": "1159860"
  },
  {
    "text": "this talk so on on installation there's two uh image file States that's in cos States",
    "start": "1159860",
    "end": "1166940"
  },
  {
    "text": "uh one it's used uh where Elemental where boots from and one is reserved for",
    "start": "1166940",
    "end": "1172940"
  },
  {
    "text": "in case we need to fall back and uh so this upgrade mechanism it helps to prepare uh install and uh a new",
    "start": "1172940",
    "end": "1182179"
  },
  {
    "text": "uh a new element or a new a new system when we've upgraded",
    "start": "1182179",
    "end": "1187760"
  },
  {
    "start": "1187000",
    "end": "1187000"
  },
  {
    "text": "so this management OS management workflow works like so we've now we've created a new OS a bootable container OS",
    "start": "1187760",
    "end": "1194900"
  },
  {
    "text": "image uh it's push we push it to your registry the OS image spec is updated for the",
    "start": "1194900",
    "end": "1203960"
  },
  {
    "text": "Target cluster that's that plan uh that plan manifests now you can also operate",
    "start": "1203960",
    "end": "1210140"
  },
  {
    "text": "it with Git Ops so you could have that plan manifest and it get repository like",
    "start": "1210140",
    "end": "1215539"
  },
  {
    "text": "you could use Argo he's Fleet he's flux you could deploy that that plan uh",
    "start": "1215539",
    "end": "1221240"
  },
  {
    "text": "manifest into your cluster I didn't do want to make a note when you do use",
    "start": "1221240",
    "end": "1226940"
  },
  {
    "text": "Elemental toolkit and you do embed k3s it does include the system update controller already installed for you so",
    "start": "1226940",
    "end": "1234320"
  },
  {
    "text": "that using get Ops or revise using git Ops you would deploy that new plan to",
    "start": "1234320",
    "end": "1240080"
  },
  {
    "text": "upgrade your system using system update control room that's going to start the",
    "start": "1240080",
    "end": "1245419"
  },
  {
    "text": "rolling upgrade of your Edge cluster or of your Edge device",
    "start": "1245419",
    "end": "1250960"
  },
  {
    "text": "then it's going to create those all trade partitions on the nodes and update it with the new image it's going to",
    "start": "1251600",
    "end": "1257539"
  },
  {
    "text": "restart the that node and your kubernetes cluster state is preserved on a on a persisted partition",
    "start": "1257539",
    "end": "1264980"
  },
  {
    "text": "and your cluster is ready so now we've gone so now we've gone through the uh the the kubernetes",
    "start": "1264980",
    "end": "1270980"
  },
  {
    "text": "distribution for the edge the OS or how to make a containerized OS and how do we",
    "start": "1270980",
    "end": "1276140"
  },
  {
    "text": "manage life cycle of that containerized OS but now we need to talk about Edge",
    "start": "1276140",
    "end": "1281900"
  },
  {
    "text": "infrastructure so Edge infrastructure means that there could be devices that",
    "start": "1281900",
    "end": "1287660"
  },
  {
    "start": "1282000",
    "end": "1282000"
  },
  {
    "text": "applications on kubernetes need to access so sometimes some some",
    "start": "1287660",
    "end": "1293000"
  },
  {
    "text": "applications need to access cameras gpus uh sensors on cities these are what we",
    "start": "1293000",
    "end": "1301400"
  },
  {
    "text": "call Leaf devices so uh to do that we actually use another cncf project uh project accurate and",
    "start": "1301400",
    "end": "1309740"
  },
  {
    "text": "accurate lets you expose those devices such as the IP like the IP cameras",
    "start": "1309740",
    "end": "1316059"
  },
  {
    "text": "sensors as resources in the kubernetes cluster so so simply put accurate finds",
    "start": "1316059",
    "end": "1324620"
  },
  {
    "text": "those devices and you can use it so solving the edge puzzle",
    "start": "1324620",
    "end": "1331460"
  },
  {
    "start": "1328000",
    "end": "1328000"
  },
  {
    "text": "um now that we have this stack where we have a layer it could it could be the hardware layer we where we have the bare",
    "start": "1331460",
    "end": "1338480"
  },
  {
    "text": "battle machine or Edge iot device or it could be a virtual machine as well",
    "start": "1338480",
    "end": "1343640"
  },
  {
    "text": "we are on top of that we have the OS layer where the elemental based Linux derivative and using components like the",
    "start": "1343640",
    "end": "1351260"
  },
  {
    "text": "elemental toolkits which we we use to create this uh bootable container OS",
    "start": "1351260",
    "end": "1356480"
  },
  {
    "text": "image and we use a system update controller to manage the life cycle of patching and upgrades of both the OS and",
    "start": "1356480",
    "end": "1364280"
  },
  {
    "text": "kubernetes itself we have a way to uh to manage a life cycle of this device and",
    "start": "1364280",
    "end": "1371120"
  },
  {
    "text": "the kubernetes layer with k3s and this could be in any Edge sites across the",
    "start": "1371120",
    "end": "1377600"
  },
  {
    "text": "globe and I want to thank you very much that's the end of my talk uh I'm here for any",
    "start": "1377600",
    "end": "1385159"
  },
  {
    "text": "questions I have a few minutes before I actually have a back-to-back talks so",
    "start": "1385159",
    "end": "1390220"
  },
  {
    "text": "feel free if you have any questions",
    "start": "1390220",
    "end": "1394059"
  },
  {
    "text": "come on up there's a mic I think there's mics here",
    "start": "1402559",
    "end": "1407140"
  },
  {
    "text": "uh is working yeah yeah okay my name is azer I'm from Wayfair uh Jim BH the",
    "start": "1411860",
    "end": "1419960"
  },
  {
    "text": "German German branch of Wayfair uh but I'm using k3s mostly for my personal",
    "start": "1419960",
    "end": "1426200"
  },
  {
    "text": "Computing and for small projects um it was kind of uh yeah everything is",
    "start": "1426200",
    "end": "1433039"
  },
  {
    "text": "great about kid race I love it and even for small setups that are said to be uh",
    "start": "1433039",
    "end": "1439400"
  },
  {
    "text": "growing in the future it's it's good to use k3s as a first stage",
    "start": "1439400",
    "end": "1444760"
  },
  {
    "text": "and I wonder if there is a somewhat better control of a firewall because uh",
    "start": "1444760",
    "end": "1450620"
  },
  {
    "text": "when I uh when I've exposed one of the note ports uh it got assigned to the uh",
    "start": "1450620",
    "end": "1457880"
  },
  {
    "text": "zero zero zero zero address which is like broadcast uh can I somewhat uh have",
    "start": "1457880",
    "end": "1465380"
  },
  {
    "text": "a fine-grained control over a firewall you can but",
    "start": "1465380",
    "end": "1471919"
  },
  {
    "text": "can you repeat what what was assigned to uh to the loopback",
    "start": "1471919",
    "end": "1477020"
  },
  {
    "text": "um uh but you can but it's going to be a more on the OS level layer",
    "start": "1477020",
    "end": "1483740"
  },
  {
    "text": "um I mean in terms of k3s itself since it's CNF certified kubernetes you would Duke",
    "start": "1483740",
    "end": "1492140"
  },
  {
    "text": "firewall things like kubernetes so it will be Network policies uh it would",
    "start": "1492140",
    "end": "1497419"
  },
  {
    "text": "just be more very strict Network policies it might be a different cnis that you would use as well uh that would",
    "start": "1497419",
    "end": "1504380"
  },
  {
    "text": "control but um so there's no command line flag that I can pass over environment variable to",
    "start": "1504380",
    "end": "1509539"
  },
  {
    "text": "the binary itself um in terms of what do you want to do with uh just limit the uh just limit the",
    "start": "1509539",
    "end": "1516440"
  },
  {
    "text": "note Port exposure to uh some local IP address uh yeah you said the note Port",
    "start": "1516440",
    "end": "1523179"
  },
  {
    "text": "you can do that with the note ports as well but it's yeah there is a flag I",
    "start": "1523179",
    "end": "1528320"
  },
  {
    "text": "just don't know what's what the exactly the important thing is to know that there is a flag yes yeah so thanks a lot",
    "start": "1528320",
    "end": "1535039"
  },
  {
    "text": "okay hi thank you for presentation I have two",
    "start": "1535039",
    "end": "1541520"
  },
  {
    "text": "quick question you mentioned Docker can we use podman Builder instead of Docker to build the same sort of thing great",
    "start": "1541520",
    "end": "1547100"
  },
  {
    "text": "question right now it's just Docker but we are moving towards are using podman",
    "start": "1547100",
    "end": "1552919"
  },
  {
    "text": "using nerdy CTL um yeah they're for some there's there's",
    "start": "1552919",
    "end": "1558140"
  },
  {
    "text": "reasons under the covers but right now for Elemental toolkit is it is just",
    "start": "1558140",
    "end": "1563179"
  },
  {
    "text": "Docker right now but we do plan very very soon actually to be using uh podman",
    "start": "1563179",
    "end": "1568760"
  },
  {
    "text": "or nerdy CTL and for that to be uh you know to not matter which which which",
    "start": "1568760",
    "end": "1574480"
  },
  {
    "text": "container build build are you going to use yeah and my second option is sort of the same you mentioned Cloud init uh",
    "start": "1574480",
    "end": "1580400"
  },
  {
    "text": "will you support ignition files and maybe immutable oscs in the future uh",
    "start": "1580400",
    "end": "1586220"
  },
  {
    "text": "maybe in the future but right now just hot in it okay thank you for your answers",
    "start": "1586220",
    "end": "1592480"
  },
  {
    "text": "oh hello hello thank you for your talk yeah then nice work uh the question is",
    "start": "1593600",
    "end": "1598940"
  },
  {
    "text": "uh you're creating a bootable containers OS and your concerned moving it into ISO",
    "start": "1598940",
    "end": "1606140"
  },
  {
    "text": "file and then boot this ISO my question is uh can we have instead of one",
    "start": "1606140",
    "end": "1611779"
  },
  {
    "text": "container having several container and having several bootable you know OS yes",
    "start": "1611779",
    "end": "1618140"
  },
  {
    "text": "at the same time they spin-off together yeah so it is possible right now with the",
    "start": "1618140",
    "end": "1624559"
  },
  {
    "text": "case yes absolutely so what what Elemental toolkit the oci registry",
    "start": "1624559",
    "end": "1630380"
  },
  {
    "text": "becomes this source of Truth for your of your OS versions",
    "start": "1630380",
    "end": "1636020"
  },
  {
    "text": "um so you could have multiple versions you could see where you could fall back you could uh do a rollback using the the",
    "start": "1636020",
    "end": "1643400"
  },
  {
    "text": "prior version case you know the patch didn't really there's something wrong there's a regression in the next in the",
    "start": "1643400",
    "end": "1649520"
  },
  {
    "text": "next uh container Image level so yes you could do multiple versions as well",
    "start": "1649520",
    "end": "1654860"
  },
  {
    "text": "um there's some get Ops tools I know Fleet does this you could Target specific clusters so what I would do",
    "start": "1654860",
    "end": "1661340"
  },
  {
    "text": "would I would use a system upgrade controller uh to Target um or and use get Ops tool Argo anything",
    "start": "1661340",
    "end": "1668140"
  },
  {
    "text": "uh Fleet to uh to to Target specific clusters uh with the with the plan",
    "start": "1668140",
    "end": "1675020"
  },
  {
    "text": "manifest with your chart with your upgraded uh OS tag and you could manage",
    "start": "1675020",
    "end": "1680960"
  },
  {
    "text": "upgrades you could just Target only in like clusters and this region will be upgraded clusters and this type of",
    "start": "1680960",
    "end": "1686120"
  },
  {
    "text": "building will be upgraded this clusters with this type of devices attached to",
    "start": "1686120",
    "end": "1691279"
  },
  {
    "text": "Elite device will be upgraded so you could have different you could Target those separately at scale with using",
    "start": "1691279",
    "end": "1697640"
  },
  {
    "text": "those get Ops tools as well so thank you thank you",
    "start": "1697640",
    "end": "1703299"
  },
  {
    "text": "hi I have a more of a technical question um one thing about containers is that",
    "start": "1703400",
    "end": "1709460"
  },
  {
    "text": "they're using the hosts kernel and kernel version but in this case we don't",
    "start": "1709460",
    "end": "1715340"
  },
  {
    "text": "have hosts we're basically building the image yeah which is gonna be the host where is the kernel being taken from is",
    "start": "1715340",
    "end": "1720679"
  },
  {
    "text": "it good element to talk includes close the chart includes the kernel so if we go to the the GitHub repo for Elemental",
    "start": "1720679",
    "end": "1726679"
  },
  {
    "text": "toolkit on your packages there's a slash kernel oh all right because there might",
    "start": "1726679",
    "end": "1731840"
  },
  {
    "text": "be a case like for instance if somebody was going to go with the image for Centos for whatever reason the census is",
    "start": "1731840",
    "end": "1738200"
  },
  {
    "text": "doing pretty old version of um of a Linux kernel I think it's like 310 with a lot of patches so is it also",
    "start": "1738200",
    "end": "1744980"
  },
  {
    "text": "modifiable uh two third in lemon because like like I mentioned there's only like",
    "start": "1744980",
    "end": "1750140"
  },
  {
    "text": "four flavors of Linux distros that you could actually use Elemental toolkit now so like Ubuntu fedoras open Susa and we",
    "start": "1750140",
    "end": "1759140"
  },
  {
    "text": "have compatibility with those kernels that's packaged and came from but it's",
    "start": "1759140",
    "end": "1764600"
  },
  {
    "text": "also now an elemental toolkit slash packages slash slash kernel so all right thank you welcome",
    "start": "1764600",
    "end": "1772340"
  },
  {
    "text": "I thank you very much um I was just wondering nothing would prevent us from provisioning k3s Agents",
    "start": "1772340",
    "end": "1778100"
  },
  {
    "text": "like you showed right yeah yeah you could do agents as well and and in that example that's in the slides it's often",
    "start": "1778100",
    "end": "1784039"
  },
  {
    "text": "the documentation as well it does it does a slash agent and so yeah I was just wondering how you would provision",
    "start": "1784039",
    "end": "1789140"
  },
  {
    "text": "for example the kubernetes join token yeah which is kind of yeah well in in",
    "start": "1789140",
    "end": "1794840"
  },
  {
    "text": "k3s uh yeah so there's some arguments that you could add on to where the server the k3s server is and the token",
    "start": "1794840",
    "end": "1802640"
  },
  {
    "text": "as well so you could you could add those into the arguments of the docker file so you would basically have the secret",
    "start": "1802640",
    "end": "1809120"
  },
  {
    "text": "embedded into the image right yeah so it would be sensitive yes that's that's the so you would have",
    "start": "1809120",
    "end": "1816320"
  },
  {
    "text": "to pay like a custom derivative for those agents typically",
    "start": "1816320",
    "end": "1821600"
  },
  {
    "text": "for Edge devices a lot of them are going to be single node clusters and a lot of they're going to be embedded SQL lights",
    "start": "1821600",
    "end": "1826760"
  },
  {
    "text": "so it's going to be a little bit different not your data center you know ha kubernetes cluster with at least",
    "start": "1826760",
    "end": "1832700"
  },
  {
    "text": "three LTD it's going to be a different uh deployment of it so there won't be",
    "start": "1832700",
    "end": "1838460"
  },
  {
    "text": "there may not be that many use cases of it but in that case yeah it's going to be um yeah there's or you could have a way",
    "start": "1838460",
    "end": "1845179"
  },
  {
    "text": "to inject it into that Docker file or before before it does before it does that build",
    "start": "1845179",
    "end": "1850940"
  },
  {
    "text": "um or I'm wondering also if you could just add in the cloud in it as well I'm sure there's some kind of customizable",
    "start": "1850940",
    "end": "1856460"
  },
  {
    "text": "with how to have a very specific Cloud init file uh in it as well so okay thank",
    "start": "1856460",
    "end": "1861740"
  },
  {
    "text": "you thank you all right thank you very much I gotta run to my next talk so",
    "start": "1861740",
    "end": "1867940"
  }
]