[
  {
    "text": "hi today we're going to be talking about how to get officer terraform I am Priyanka Ravi I also go by Pinky",
    "start": "2899",
    "end": "10559"
  },
  {
    "text": "and I am a developer experience engineer at weaveworks",
    "start": "10559",
    "end": "16260"
  },
  {
    "text": "if you have not heard of us we are a startup with a globally distributed and remote Workforce a lot of what we do is",
    "start": "16260",
    "end": "23340"
  },
  {
    "text": "based on open source you might have heard of our projects flux and Flagger which are in the cncf as incubating",
    "start": "23340",
    "end": "29820"
  },
  {
    "text": "projects flux was also the project that really kicked off the term get ups and",
    "start": "29820",
    "end": "34920"
  },
  {
    "text": "it's been really cool to see lots of adopters of the project and see the community grow over the last few years",
    "start": "34920",
    "end": "40379"
  },
  {
    "text": "so much so that large Cloud vendors and other organizations like Microsoft AWS",
    "start": "40379",
    "end": "46200"
  },
  {
    "text": "VMware and others have adopted it and are using it under the hood to offer get UPS to their customers",
    "start": "46200",
    "end": "52260"
  },
  {
    "text": "cortex is another one of our projects that is in the cncf that helps make Prometheus scalable I mentioned that",
    "start": "52260",
    "end": "58739"
  },
  {
    "text": "because Prometheus is a key part of the progressive delivery possibilities with blacker and of course we have other",
    "start": "58739",
    "end": "64378"
  },
  {
    "text": "projects like weave ignite eks cuddle and now we've got Ops which is also a free and open source tool that provides",
    "start": "64379",
    "end": "70680"
  },
  {
    "text": "get ups for your various needs and has a UI on top of Lux and we have many more so if you're",
    "start": "70680",
    "end": "77700"
  },
  {
    "text": "definitely if you're interested definitely check us out on GitHub under weaveworks as well as in the cncf where",
    "start": "77700",
    "end": "83820"
  },
  {
    "text": "you can find our projects so what is get Ops get Ops is an",
    "start": "83820",
    "end": "91080"
  },
  {
    "text": "operating model for cloud native applications such as kubernetes I do want to highlight that it's not just for",
    "start": "91080",
    "end": "96900"
  },
  {
    "text": "kubernetes if you are using doing a multi-cloud infrastructure you can still use gitups",
    "start": "96900",
    "end": "103560"
  },
  {
    "text": "um and we'll be talking about that obviously more in detail today uh get Ops utilizes a version controlled",
    "start": "103560",
    "end": "109799"
  },
  {
    "text": "system most commonly get as the single source of Truth it enables continuous delivery through",
    "start": "109799",
    "end": "116280"
  },
  {
    "text": "automated deployment monitoring and management by a version controlled system and with gitups you're managing your",
    "start": "116280",
    "end": "123240"
  },
  {
    "text": "infrastructure and applications to clarity so",
    "start": "123240",
    "end": "128399"
  },
  {
    "text": "um these are the gitups principles are a set of best practices they have been",
    "start": "128399",
    "end": "133739"
  },
  {
    "text": "defined through discussions with many different vendors and users experiences by the git Ops working group and if you",
    "start": "133739",
    "end": "140879"
  },
  {
    "text": "want to learn more about the get Ops working group you can go to open gitops.dev",
    "start": "140879",
    "end": "146160"
  },
  {
    "text": "and uh don't feel like you have to have all of them met in order to use get Ops",
    "start": "146160",
    "end": "151319"
  },
  {
    "text": "everyone's Journey looks different and you can start using get Ops and add in hardening and tweak your setup to meet",
    "start": "151319",
    "end": "157440"
  },
  {
    "text": "these guidelines as you go so the first one is that a system managed by get Ops must",
    "start": "157440",
    "end": "164400"
  },
  {
    "text": "have its desired State expressed declaratively it's written in code so it's more reusable there's an audit",
    "start": "164400",
    "end": "171239"
  },
  {
    "text": "Trail and a lot of other benefits that come with that the second is that a desired state is",
    "start": "171239",
    "end": "177300"
  },
  {
    "text": "stored in a way that enforces immutability versioning and retains a complete version history so there's no",
    "start": "177300",
    "end": "182640"
  },
  {
    "text": "sneaking in and change and it kind of goes back to the audit Trail stuff too the third is that software agents",
    "start": "182640",
    "end": "189060"
  },
  {
    "text": "automatically pull the desired State declarations from the source and the fourth is that software agents",
    "start": "189060",
    "end": "194819"
  },
  {
    "text": "continuously observe actual assistant State and attempt to apply the desired state so you have an operator such as",
    "start": "194819",
    "end": "201480"
  },
  {
    "text": "flux that is um automatically continuously pulling in the actual System state and",
    "start": "201480",
    "end": "208980"
  },
  {
    "text": "making sure that it is what you have expressed declaratively",
    "start": "208980",
    "end": "215959"
  },
  {
    "text": "so why get UPS there are so many benefits to get Ops um and you know",
    "start": "216659",
    "end": "222120"
  },
  {
    "text": "individuals teams and organizations who Implement get Ops experience many benefits I myself",
    "start": "222120",
    "end": "227640"
  },
  {
    "text": "um at my previous company uh was on a team that implemented get Ops using flux",
    "start": "227640",
    "end": "233819"
  },
  {
    "text": "and we did see a lot of these benefits um including stronger security",
    "start": "233819",
    "end": "239220"
  },
  {
    "text": "guarantees increased developer and operational productivity and enhanced developer experience improve stability",
    "start": "239220",
    "end": "246599"
  },
  {
    "text": "higher reliability and a consistency and standardization because of um get ops's unique ability",
    "start": "246599",
    "end": "253500"
  },
  {
    "text": "to treat everything as code it creates a direct impact on security for example if",
    "start": "253500",
    "end": "258840"
  },
  {
    "text": "all configuration and security policy is treated as code then everything can be held in Version Control",
    "start": "258840",
    "end": "264780"
  },
  {
    "text": "and so any and all changes can be made reviewed and uh inputted into an",
    "start": "264780",
    "end": "269820"
  },
  {
    "text": "automated way there's no manual processes so you're less likely to be at work on a weekend",
    "start": "269820",
    "end": "276800"
  },
  {
    "text": "so what is flux flux is a get Centric package manager for your applications",
    "start": "277320",
    "end": "283979"
  },
  {
    "text": "but git isn't the only system you can use and it provides a set of continuous",
    "start": "283979",
    "end": "289199"
  },
  {
    "text": "and Progressive Delivery Solutions for kubernetes it is a natural extension of the benefits of kubernetes at the core",
    "start": "289199",
    "end": "296639"
  },
  {
    "text": "of it it continuously monitors your version control system and it applies the desired State that's been",
    "start": "296639",
    "end": "302340"
  },
  {
    "text": "declaratively stated there the nice part of this is that you don't have to worry about configuration drift because it",
    "start": "302340",
    "end": "307800"
  },
  {
    "text": "reconciles on a schedule so if things have gotten out of sync for some reason it will set it back to the desired state",
    "start": "307800",
    "end": "314280"
  },
  {
    "text": "flux really reduces developer burden because it removes the need for manual deployment processes and the flux",
    "start": "314280",
    "end": "320580"
  },
  {
    "text": "command line tool is a convenient way to bootstrap the system in a cluster and to",
    "start": "320580",
    "end": "325620"
  },
  {
    "text": "access the custom resources that make up the API so these are some statements that we",
    "start": "325620",
    "end": "332039"
  },
  {
    "text": "like to put out there about flux and to really showcase what's really awesome about flux",
    "start": "332039",
    "end": "338039"
  },
  {
    "text": "flux provides git Ops for both apps and infrastructure using flux and Flagger you can deploy apps with canaries",
    "start": "338039",
    "end": "344460"
  },
  {
    "text": "feature flags and a b rollouts Lux can also manage any kubernetes resource",
    "start": "344460",
    "end": "349979"
  },
  {
    "text": "and infrastructure and workload dependency management is built in you just push to get and flux does the rest",
    "start": "349979",
    "end": "356580"
  },
  {
    "text": "flux manages deployments through automatic reconciliation flux also works with your existing tools",
    "start": "356580",
    "end": "363479"
  },
  {
    "text": "flux works with your git providers GitHub gitlab bitbucket you can even use",
    "start": "363479",
    "end": "368699"
  },
  {
    "text": "S3 compatible buckets as a source all major container Registries and all CI",
    "start": "368699",
    "end": "373979"
  },
  {
    "text": "workflow providers as well flux works with any kubernetes and all common kubernetes tooling",
    "start": "373979",
    "end": "381020"
  },
  {
    "text": "customize Helm rbac and policy driven validation such as Opa trevurno",
    "start": "381020",
    "end": "387300"
  },
  {
    "text": "admission controllers so it simply falls into place flux does multi-tenancy and as we like",
    "start": "387300",
    "end": "392940"
  },
  {
    "text": "to say multi-everything flux uses true kubernetes are back via impersonation and supports multiple git",
    "start": "392940",
    "end": "399539"
  },
  {
    "text": "repositories multi-cluster infrastructure and apps work out of the box with cluster API flux can use one",
    "start": "399539",
    "end": "406259"
  },
  {
    "text": "cluster kubernetes cluster to manage apps in either the same or in other clusters spin up additional clusters",
    "start": "406259",
    "end": "411900"
  },
  {
    "text": "themselves and manage clusters including life cycle and fleets it also alerts and notifies flux",
    "start": "411900",
    "end": "419039"
  },
  {
    "text": "provides Health assessments alerting to external systems and external events handling you just get push and get",
    "start": "419039",
    "end": "425280"
  },
  {
    "text": "notified on slack and other chat systems and I'm going to actually be showing that in our demo today",
    "start": "425280",
    "end": "431400"
  },
  {
    "text": "users trust flux um take myself as a user I",
    "start": "431400",
    "end": "436740"
  },
  {
    "text": "definitely trust flux and hopefully you'll see throughout this talk why users do trust flux",
    "start": "436740",
    "end": "442800"
  },
  {
    "text": "flux has a lovely community that is very easy to work with we welcome contributors of any kind the components",
    "start": "442800",
    "end": "449280"
  },
  {
    "text": "of flux are on kubernetes core controller runtime so anyone can contribute and its functionality can be",
    "start": "449280",
    "end": "455039"
  },
  {
    "text": "extended very easily so what are the benefits of flux flux",
    "start": "455039",
    "end": "462060"
  },
  {
    "text": "reduces developer burden it removes the cube control problem you don't have to worry about Cube controlled versions to",
    "start": "462060",
    "end": "469139"
  },
  {
    "text": "be able to interact with the cluster it's also extensible versatile it works",
    "start": "469139",
    "end": "474300"
  },
  {
    "text": "with existing tools it's flexible and modular and it's a natural extension of",
    "start": "474300",
    "end": "479699"
  },
  {
    "text": "kubernetes and it's also extendable because of the microservice architecture you can",
    "start": "479699",
    "end": "485699"
  },
  {
    "text": "basically pick and choose what you want to use to tailor your own experience",
    "start": "485699",
    "end": "491900"
  },
  {
    "text": "so like I mentioned flux has a microservice architecture it's a set of kubernetes controllers and if you're not",
    "start": "492060",
    "end": "498479"
  },
  {
    "text": "familiar with controllers a controller handles the life cycle of objects in kubernetes what should be done when an",
    "start": "498479",
    "end": "504479"
  },
  {
    "text": "object is created updated deleted Etc and um the terraform controller is not",
    "start": "504479",
    "end": "510560"
  },
  {
    "text": "officially a flux controller it is an add-on that was created by weaveworks",
    "start": "510560",
    "end": "517979"
  },
  {
    "text": "but the controllers that make up flux are the source controller the customized controller the helm controller the",
    "start": "517979",
    "end": "523979"
  },
  {
    "text": "notification controller the image reflector controller and the image automation controller",
    "start": "523979",
    "end": "529140"
  },
  {
    "text": "The Source controller fetches resources and stores them as artifacts it uh the",
    "start": "529140",
    "end": "535380"
  },
  {
    "text": "main role of it is to provide a common interface for artifacts acquisition the customized controller is a",
    "start": "535380",
    "end": "541680"
  },
  {
    "text": "kubernetes operator specialized in running continuous delivery pipelines for infrastructure and workloads defined",
    "start": "541680",
    "end": "547560"
  },
  {
    "text": "with kubernetes manifests and assembled with customize the helm controller is a kubernetes",
    "start": "547560",
    "end": "553320"
  },
  {
    "text": "operator allowing one to declaratively manage Helm chart releases with kubernetes manifests the notification",
    "start": "553320",
    "end": "559380"
  },
  {
    "text": "controller is a kubernetes operator specialized in handling inbound and outbound events",
    "start": "559380",
    "end": "565080"
  },
  {
    "text": "and the image reflector controller and image automation controller work together to update a git repository when",
    "start": "565080",
    "end": "572040"
  },
  {
    "text": "new container images are available",
    "start": "572040",
    "end": "575839"
  },
  {
    "text": "yeah so flux works with tons of other tools um these are just a few and then there's",
    "start": "578279",
    "end": "583380"
  },
  {
    "text": "a lot more as well so basically anything that you're really working with um flux will work nicely with as well",
    "start": "583380",
    "end": "589519"
  },
  {
    "text": "okay so uh reasons why I and others love flux I myself as a previous user of flux",
    "start": "589519",
    "end": "596100"
  },
  {
    "text": "that I just come up with a little list of the reasons that I really adore flux and one is that it really just makes",
    "start": "596100",
    "end": "602399"
  },
  {
    "text": "life easier getting your application to production is the entire goal of the development life cycle flux is a tool",
    "start": "602399",
    "end": "609180"
  },
  {
    "text": "that was created to make the process simpler and more efficient it gives developers the ability to focus on what",
    "start": "609180",
    "end": "615000"
  },
  {
    "text": "really matters most Innovation and the user experience also multi-tenancy is really awesome with flux in my",
    "start": "615000",
    "end": "621959"
  },
  {
    "text": "experience it's very easy to set up and um convenient to keep working so there's",
    "start": "621959",
    "end": "628560"
  },
  {
    "text": "also a really neat feature called depends on where you can tell flux to wait until something is up and ready to",
    "start": "628560",
    "end": "635339"
  },
  {
    "text": "actually stand up the next piece so if you had an API that required a database",
    "start": "635339",
    "end": "641040"
  },
  {
    "text": "to be stood up you could tell it that also Helm integration is really fantastic with flux and the",
    "start": "641040",
    "end": "648779"
  },
  {
    "text": "notifications and alerting is really easy to set up I myself did it earlier today and it was really really easy to",
    "start": "648779",
    "end": "654480"
  },
  {
    "text": "set up um bootstrapping is a really cool way to get started with flux which is part of the flux CLI and the flexioli is a super",
    "start": "654480",
    "end": "662100"
  },
  {
    "text": "super user friendly um way to integrate with to interact with flux",
    "start": "662100",
    "end": "668160"
  },
  {
    "text": "and um now the terraform controller another awesome reason to love flux as well",
    "start": "668160",
    "end": "674579"
  },
  {
    "text": "so what is the terraform controller the terraform controller is a flux",
    "start": "674579",
    "end": "679860"
  },
  {
    "text": "controller that was created by weaveworks that can manage terraform resources it um and and these terraform resources",
    "start": "679860",
    "end": "687660"
  },
  {
    "text": "that can be managed by it are not limited to kubernetes resources which brings us back to that multi-cloud",
    "start": "687660",
    "end": "693260"
  },
  {
    "text": "option I was mentioning earlier and so you can these are a few links",
    "start": "693260",
    "end": "698579"
  },
  {
    "text": "where you can find um the terraform controller on GitHub there are some really awesome terraform controller docs",
    "start": "698579",
    "end": "704519"
  },
  {
    "text": "out there as well um and in in those docs there is like an awesome list of use cases that we're",
    "start": "704519",
    "end": "710820"
  },
  {
    "text": "going to go over in a little bit too so what are the benefits of the",
    "start": "710820",
    "end": "716519"
  },
  {
    "text": "terraform controller um one benefit is that you can have full get Ops automation",
    "start": "716519",
    "end": "722940"
  },
  {
    "text": "get Ops um you can use now get ups for existing terraform resources",
    "start": "722940",
    "end": "728700"
  },
  {
    "text": "um you can use get Ops to plan and manually apply terraform also you can use",
    "start": "728700",
    "end": "734399"
  },
  {
    "text": "um the terraform controller to do drip detection of terraform resources and I'm going to mention that in a little bit but you can also use it to just notify",
    "start": "734399",
    "end": "742500"
  },
  {
    "text": "you of of any drift detection that happens even if you're not using it to apply your terraform",
    "start": "742500",
    "end": "747959"
  },
  {
    "text": "and it can be used as a glue for terraform resources and kubernetes workloads",
    "start": "747959",
    "end": "755060"
  },
  {
    "text": "there are lots of cool features of the terraform controller to be excited about and there are new ones coming out every",
    "start": "755940",
    "end": "762720"
  },
  {
    "text": "day so keep an eye on that guide that I mentioned a bit ago um one such feature is the ability to",
    "start": "762720",
    "end": "769500"
  },
  {
    "text": "set manual or Auto approvals with auto approvals if you make a change in git then the change will be automatically",
    "start": "769500",
    "end": "776399"
  },
  {
    "text": "realized um by the terraform controller if you set it up to do manual approvals then it",
    "start": "776399",
    "end": "784200"
  },
  {
    "text": "will create a plan but it will not automatically apply the change and so you can see the plan and decide whether",
    "start": "784200",
    "end": "791339"
  },
  {
    "text": "you want to make the change and um there's a new feature now to actually output that plan into a config map and I",
    "start": "791339",
    "end": "798540"
  },
  {
    "text": "will show that in my demo another feature is drip detection and with drift",
    "start": "798540",
    "end": "804480"
  },
  {
    "text": "detection you don't have to worry about configuration drift it ensures that you have what you actually have declared in",
    "start": "804480",
    "end": "811680"
  },
  {
    "text": "your terraform is what is actually live and you can also use drift detection only and tell the terraform controller",
    "start": "811680",
    "end": "818579"
  },
  {
    "text": "to skip the plan and apply so if you're already deploying your terraform in some",
    "start": "818579",
    "end": "823860"
  },
  {
    "text": "other way and want to just get the benefits of being notified when something gets out of sync then you can",
    "start": "823860",
    "end": "829500"
  },
  {
    "text": "do that as well and I am going to show in the demo an example of getting",
    "start": "829500",
    "end": "835019"
  },
  {
    "text": "notifications for drift detection and another feature is that um the",
    "start": "835019",
    "end": "841139"
  },
  {
    "text": "terraform controller actually accepts a list of config maps and secrets as variables so you can use",
    "start": "841139",
    "end": "848040"
  },
  {
    "text": "um those to input as uh variables into your terraform",
    "start": "848040",
    "end": "853079"
  },
  {
    "text": "also um a state file by default is stored in",
    "start": "853079",
    "end": "858180"
  },
  {
    "text": "a secret for your terraform but you can actually uh set the back end",
    "start": "858180",
    "end": "864240"
  },
  {
    "text": "um to be whatever you want and also there are health checks that",
    "start": "864240",
    "end": "870420"
  },
  {
    "text": "you can set and so for some resources it may be helpful to perform health checks on them to verify that they are ready to",
    "start": "870420",
    "end": "877680"
  },
  {
    "text": "accept connection before the terraform goes into a ready state and you can also destroy resources on",
    "start": "877680",
    "end": "884940"
  },
  {
    "text": "deletion um that is not the default action of the terraform controller so if a terraform",
    "start": "884940",
    "end": "890220"
  },
  {
    "text": "object is deleted from the cluster the resources created by terraform are not deleted defaulted to be destroyed",
    "start": "890220",
    "end": "898320"
  },
  {
    "text": "um to enable that you can set a flag um to true",
    "start": "898320",
    "end": "904199"
  },
  {
    "text": "and another feature is that you can actually write outputs to a secret and you can specify a Target secret and",
    "start": "904199",
    "end": "912600"
  },
  {
    "text": "the controller will write all outputs to the secret by default and you can or you can also write outputs selectively to a",
    "start": "912600",
    "end": "919139"
  },
  {
    "text": "secret and there's also name mapping and other features as well",
    "start": "919139",
    "end": "925139"
  },
  {
    "text": "um so uh the terraform controller team is really excited to announce that the",
    "start": "925139",
    "end": "931320"
  },
  {
    "text": "performance of the terraform controller has been improved significantly now the controller is greatly scalable to",
    "start": "931320",
    "end": "938220"
  },
  {
    "text": "reconcile and provision High volumes of terraform modules concurrently and the team has actually tested the",
    "start": "938220",
    "end": "945240"
  },
  {
    "text": "controller with 1500 terraform modules and so",
    "start": "945240",
    "end": "951000"
  },
  {
    "text": "um with that change you can actually customize your Runner pod as well uh you",
    "start": "951000",
    "end": "956579"
  },
  {
    "text": "can um uh update the image if you want to um",
    "start": "956579",
    "end": "962279"
  },
  {
    "text": "if you have any need to include certain things in your terraform image um Runner terraform Runner image uh and",
    "start": "962279",
    "end": "969959"
  },
  {
    "text": "also um you can config some pod specs as well recently oci support has been added to",
    "start": "969959",
    "end": "978120"
  },
  {
    "text": "flux and the terraform controller has been updated to reflect those changes as",
    "start": "978120",
    "end": "983459"
  },
  {
    "text": "well so the terraform controller can also use oci artifacts as a source",
    "start": "983459",
    "end": "990139"
  },
  {
    "text": "um another thing is the ability to force unlock terraform State and uh by default",
    "start": "991019",
    "end": "997560"
  },
  {
    "text": "this is not enabled and so if you um do want to use it you can check out how to",
    "start": "997560",
    "end": "1003440"
  },
  {
    "text": "do that in the guide and um we're also very excited to",
    "start": "1003440",
    "end": "1008720"
  },
  {
    "text": "um say that there is terraform cloud and terraform Enterprise Integration as well and that is also in our guide if you",
    "start": "1008720",
    "end": "1015980"
  },
  {
    "text": "want to check out how to use um the terraform controller with those as well",
    "start": "1015980",
    "end": "1021639"
  },
  {
    "text": "all right so now I'm going to switch over to a demo to show you guys the",
    "start": "1023720",
    "end": "1029120"
  },
  {
    "text": "terraform controller in action",
    "start": "1029120",
    "end": "1033100"
  },
  {
    "text": "okay so we're gonna be standing up an instance of Vault using flux and then we're going to be using terraform to",
    "start": "1034220",
    "end": "1040880"
  },
  {
    "text": "configure that Vault instance such as adding a secret and adding policies",
    "start": "1040880",
    "end": "1047178"
  },
  {
    "text": "um and so uh we're going to be using this repository that was forked from a",
    "start": "1047179",
    "end": "1052940"
  },
  {
    "text": "project that Russ created uh in order to show a demo of Vault with",
    "start": "1052940",
    "end": "1058220"
  },
  {
    "text": "flux and so in here in this make file um you can see that it's going to create a kind cluster and then it's going to be",
    "start": "1058220",
    "end": "1066440"
  },
  {
    "text": "running this flux bootstrap um GitHub command and so this flux bootstrap command",
    "start": "1066440",
    "end": "1072919"
  },
  {
    "text": "is um going to create is basically the easiest way to stand up",
    "start": "1072919",
    "end": "1079940"
  },
  {
    "text": "um flux in your cluster and um if if the in this case we're actually",
    "start": "1079940",
    "end": "1086000"
  },
  {
    "text": "standing it up in a repo that already exists but if you flux did a flux bootstrap and the repo didn't exist it",
    "start": "1086000",
    "end": "1092960"
  },
  {
    "text": "would create you a brand new repo and then push up all the manifests that the",
    "start": "1092960",
    "end": "1098000"
  },
  {
    "text": "controllers and everything for flux needs into that new Repository",
    "start": "1098000",
    "end": "1104260"
  },
  {
    "text": "okay now that um the bootstrap command is done we can run a cube control get pods Dash",
    "start": "1104660",
    "end": "1113480"
  },
  {
    "text": "and flux system and see the pods that were stood up there so you can see here",
    "start": "1113480",
    "end": "1119240"
  },
  {
    "text": "that there are the controllers that were stood up and um by default the terraform",
    "start": "1119240",
    "end": "1124280"
  },
  {
    "text": "controller does not come with bootstrap but uh we'll we'll I'll show you how",
    "start": "1124280",
    "end": "1129679"
  },
  {
    "text": "that was stood up in just a second so the gotk components yaml is what's",
    "start": "1129679",
    "end": "1136280"
  },
  {
    "text": "created by bootstrap and it has the namespace um the flux system namespace that has custom resource definitions all",
    "start": "1136280",
    "end": "1142220"
  },
  {
    "text": "of the Manifest for all the controllers and things like that geotk sync is where",
    "start": "1142220",
    "end": "1147679"
  },
  {
    "text": "we have the um get repository source so this is telling the source controller to",
    "start": "1147679",
    "end": "1153260"
  },
  {
    "text": "listen to this git repository Flex Vault demo and every minute it's going to go in and um pull the Manifest and make",
    "start": "1153260",
    "end": "1161419"
  },
  {
    "text": "sure there's no changes and then the customization is telling the customization controller to then",
    "start": "1161419",
    "end": "1167720"
  },
  {
    "text": "apply the files that are found in the Clusters kind folder",
    "start": "1167720",
    "end": "1173539"
  },
  {
    "text": "every 10 minutes and so it's going to apply whatever is pulled in by the source um repo in that",
    "start": "1173539",
    "end": "1181820"
  },
  {
    "text": "folder and so if we go in there if we go into that folder we can see that there's also this apps.yaml file which is going",
    "start": "1181820",
    "end": "1188419"
  },
  {
    "text": "to be applied as well and this is another customization that's then pointing to the space apps folder if we",
    "start": "1188419",
    "end": "1194780"
  },
  {
    "text": "go into there we can see that this is where the terraform controller and Vault are being",
    "start": "1194780",
    "end": "1200600"
  },
  {
    "text": "stood up so in here this Helm repository is pointing to the TF controller Helm",
    "start": "1200600",
    "end": "1207679"
  },
  {
    "text": "repository and this is the helm repository Source that's created for the um yeah for the terraform",
    "start": "1207679",
    "end": "1214520"
  },
  {
    "text": "controller it's being pulled every five minutes and then the helm release is what actually defines what the chart is going",
    "start": "1214520",
    "end": "1221539"
  },
  {
    "text": "to look like so this is telling um the the chart um specs it's saying the version of the",
    "start": "1221539",
    "end": "1227960"
  },
  {
    "text": "chart that you want to be stood up and it also has the values that you um want",
    "start": "1227960",
    "end": "1234620"
  },
  {
    "text": "that you set for the um Helm chart and so this is telling the helm",
    "start": "1234620",
    "end": "1239960"
  },
  {
    "text": "controller to go apply this chart and then every one hour to go and then",
    "start": "1239960",
    "end": "1245720"
  },
  {
    "text": "update it so in the um uh there's also the Vault uh",
    "start": "1245720",
    "end": "1253700"
  },
  {
    "text": "instance that's being stood up in in the same way it's a it's a Helm chart as well and so that's just the basic instance of",
    "start": "1253700",
    "end": "1260480"
  },
  {
    "text": "Vault that's being stood up",
    "start": "1260480",
    "end": "1263679"
  },
  {
    "text": "so now we're gonna go into um vs code and we're gonna apply the",
    "start": "1268280",
    "end": "1273740"
  },
  {
    "text": "secret.yaml and this is basically just to apply the secret that points to the",
    "start": "1273740",
    "end": "1279679"
  },
  {
    "text": "um web hook address for slack and um I learned this the hard way but if",
    "start": "1279679",
    "end": "1284960"
  },
  {
    "text": "you push a um web a slack web hook into a public GitHub then it will actually delete it",
    "start": "1284960",
    "end": "1292159"
  },
  {
    "text": "from slack so that's why we're applying it here and then we're just going to delete this so we don't commit it to get",
    "start": "1292159",
    "end": "1298840"
  },
  {
    "text": "and um we're gonna now go into um actually add in the uh terraform the",
    "start": "1298840",
    "end": "1307820"
  },
  {
    "text": "notifications for the terraform controller so the first thing we need to do is um add",
    "start": "1307820",
    "end": "1314720"
  },
  {
    "text": "in some patches to tell the notification controller to also listen to terraform",
    "start": "1314720",
    "end": "1320720"
  },
  {
    "text": "um uh events as well and uh not just the ones that come default with flux so this is something",
    "start": "1320720",
    "end": "1327080"
  },
  {
    "text": "you'd have to do if you were adding in a third-party controller support for the notifications",
    "start": "1327080",
    "end": "1332299"
  },
  {
    "text": "and so we're gonna push that",
    "start": "1332299",
    "end": "1336158"
  },
  {
    "text": "and then um I'm gonna show you what that what's in that actual terraform notifications",
    "start": "1344059",
    "end": "1349580"
  },
  {
    "text": "yaml that we just added to the customization so this is the provider that's created",
    "start": "1349580",
    "end": "1354860"
  },
  {
    "text": "um for the notification controller it's pointing to that slack web hook um secret ref that we just told it so it's",
    "start": "1354860",
    "end": "1360440"
  },
  {
    "text": "gonna listen to that slack um web hook and then it's going to um uh",
    "start": "1360440",
    "end": "1367220"
  },
  {
    "text": "also be listening for terraform events so that's what the alert is saying here",
    "start": "1367220",
    "end": "1372799"
  },
  {
    "text": "as well so if there's any terraform events all terraform events then",
    "start": "1372799",
    "end": "1378020"
  },
  {
    "text": "um alert us in Slack",
    "start": "1378020",
    "end": "1381580"
  },
  {
    "text": "okay so now we're gonna um reconcile the um the get Source the flux system gets",
    "start": "1395900",
    "end": "1403159"
  },
  {
    "text": "Source that's pointing to that um repository and it's gonna realize that there's been a change",
    "start": "1403159",
    "end": "1409880"
  },
  {
    "text": "that's been made and it'll um also trigger the customization to then run a",
    "start": "1409880",
    "end": "1416240"
  },
  {
    "text": "um apply as well because there's been a change",
    "start": "1416240",
    "end": "1421360"
  },
  {
    "text": "okay so now we're going to go in and actually",
    "start": "1422780",
    "end": "1428240"
  },
  {
    "text": "um add the the terraform object now so this is what the terraform controller",
    "start": "1428240",
    "end": "1433539"
  },
  {
    "text": "will this is what is telling the terraform controller to then go and actually apply those terraform files",
    "start": "1433539",
    "end": "1440600"
  },
  {
    "text": "that are going to be customizing The Vault instance so let's um",
    "start": "1440600",
    "end": "1446900"
  },
  {
    "text": "commit this change add this this back in and so what you can see here",
    "start": "1446900",
    "end": "1453620"
  },
  {
    "text": "is it's telling it every minute to go and apply the terraform files that are",
    "start": "1453620",
    "end": "1458659"
  },
  {
    "text": "found in this base terraform Kate's fault config path",
    "start": "1458659",
    "end": "1464380"
  },
  {
    "text": "and it's pointing to the same Source ref too oh and and here um because the approved plan is empty it's going to",
    "start": "1464780",
    "end": "1471020"
  },
  {
    "text": "require manual approvals and the store readable plan in human is telling it to",
    "start": "1471020",
    "end": "1477260"
  },
  {
    "text": "um uh output the plan into a config map",
    "start": "1477260",
    "end": "1483220"
  },
  {
    "text": "and so in here we can see um that this is the terraform that we just told that terraform object to point",
    "start": "1484220",
    "end": "1491000"
  },
  {
    "text": "to so this is the terraform that the terraform controller is going to be applying and it has policies it has a",
    "start": "1491000",
    "end": "1498140"
  },
  {
    "text": "past a secret that's created and um and all of that so we are going to now",
    "start": "1498140",
    "end": "1505100"
  },
  {
    "text": "reconcile um flux system again the flux system source",
    "start": "1505100",
    "end": "1510919"
  },
  {
    "text": "to pick up the change we just added",
    "start": "1510919",
    "end": "1515679"
  },
  {
    "text": "okay now that we've done that we can run a cubic control get terraform in the",
    "start": "1516620",
    "end": "1523460"
  },
  {
    "text": "flux system namespace and we will now see that there has been a K8 fault config terraform object stood up",
    "start": "1523460",
    "end": "1531799"
  },
  {
    "text": "and so if we go into Slack",
    "start": "1531799",
    "end": "1536539"
  },
  {
    "text": "we can see and so if we go into slack we can see that there is a um terraform",
    "start": "1537799",
    "end": "1545120"
  },
  {
    "text": "plan that was generated in this General uh",
    "start": "1545120",
    "end": "1550460"
  },
  {
    "text": "thing so if we take it tells us that we can set a proof plan to this string in",
    "start": "1550460",
    "end": "1557120"
  },
  {
    "text": "order to actually approve the plan so we'll go in here",
    "start": "1557120",
    "end": "1562539"
  },
  {
    "text": "and we will add this in we'll set that here and then we will",
    "start": "1564620",
    "end": "1572720"
  },
  {
    "text": "um",
    "start": "1572720",
    "end": "1574720"
  },
  {
    "text": "oh right okay so I'm gonna do a cube control get config Maps first to show",
    "start": "1577940",
    "end": "1583940"
  },
  {
    "text": "you the um the config map that was created with the terraform plan",
    "start": "1583940",
    "end": "1589940"
  },
  {
    "text": "and that way we can actually check that the plan is what we want and I can show you guys how to",
    "start": "1589940",
    "end": "1596179"
  },
  {
    "text": "um look at check for your config map so in here you can see that",
    "start": "1596179",
    "end": "1602240"
  },
  {
    "text": "um the plan is all listed out here it has it's if you're familiar with terraform you're very",
    "start": "1602240",
    "end": "1608480"
  },
  {
    "text": "familiar with like a terraform plan it shows you all the things that are going to be added um and so now we can go in and commit",
    "start": "1608480",
    "end": "1615620"
  },
  {
    "text": "that change to um approve the plan so now the plan will be",
    "start": "1615620",
    "end": "1623059"
  },
  {
    "text": "applied and so if we go back and reconcile it again",
    "start": "1623059",
    "end": "1629500"
  },
  {
    "text": "we can make sure that that apply is being taken care of so if we go back and",
    "start": "1629500",
    "end": "1636500"
  },
  {
    "text": "get terraform it takes a second",
    "start": "1636500",
    "end": "1641840"
  },
  {
    "text": "but if we give it a minute we'll see that it actually there you go it's",
    "start": "1641840",
    "end": "1647600"
  },
  {
    "text": "already standing up so if we go back we can see that now it says that it's",
    "start": "1647600",
    "end": "1654740"
  },
  {
    "text": "applied successfully and so now I'm going to go in and I am",
    "start": "1654740",
    "end": "1662539"
  },
  {
    "text": "going to update the um file to",
    "start": "1662539",
    "end": "1668960"
  },
  {
    "text": "do auto um approve approvals",
    "start": "1668960",
    "end": "1674299"
  },
  {
    "text": "and I'm going to remove the um store readable plan as well so now if a change",
    "start": "1674299",
    "end": "1681919"
  },
  {
    "text": "is made it will automatically apply those changes so there's no more need for me to look at the plan and then",
    "start": "1681919",
    "end": "1689179"
  },
  {
    "text": "manually apply it",
    "start": "1689179",
    "end": "1692620"
  },
  {
    "text": "or manually approve it still getting applied automatically",
    "start": "1694580",
    "end": "1700760"
  },
  {
    "text": "so now we're going to reconcile again",
    "start": "1700760",
    "end": "1704380"
  },
  {
    "text": "okay so now I am going to log into the",
    "start": "1708140",
    "end": "1713600"
  },
  {
    "text": "um local Vault instance that we created and I'm just going to enter the token",
    "start": "1713600",
    "end": "1718700"
  },
  {
    "text": "that was uh set up it's just root and then um we can see in here that the",
    "start": "1718700",
    "end": "1724279"
  },
  {
    "text": "creds password secret was created the one that's in that terraform code and so",
    "start": "1724279",
    "end": "1729440"
  },
  {
    "text": "I'm going to be a bad actor and I'm going to go delete it to show you the drift detection and",
    "start": "1729440",
    "end": "1735080"
  },
  {
    "text": "um so in here now you can see the notification in slack that tells me that there was a drift detected and that the",
    "start": "1735080",
    "end": "1741200"
  },
  {
    "text": "secret has or the Yeah the secret has been deleted and um so this is great you know to show",
    "start": "1741200",
    "end": "1750080"
  },
  {
    "text": "y'all what it would look like to get a notification if um for some reason things got out of",
    "start": "1750080",
    "end": "1756260"
  },
  {
    "text": "sync and so now if we go back in here and refresh and retype it in creds are back",
    "start": "1756260",
    "end": "1762679"
  },
  {
    "text": "because the um the uh terraform controller",
    "start": "1762679",
    "end": "1768799"
  },
  {
    "text": "set it back up when it noticed that there was a configuration drift it reapplied the terraform so",
    "start": "1768799",
    "end": "1776120"
  },
  {
    "text": "that's it um for the demo and um",
    "start": "1776120",
    "end": "1781399"
  },
  {
    "text": "thank you so much for listening to me talk about the terraform controller we are very excited about this Edition and",
    "start": "1781399",
    "end": "1789320"
  },
  {
    "text": "um please give it a try and let us know your experience on the cncf uh flux",
    "start": "1789320",
    "end": "1796039"
  },
  {
    "text": "slack Channel and um here are a few links for you to check out we have a weave online user group",
    "start": "1796039",
    "end": "1802820"
  },
  {
    "text": "that also meets um regularly and has different talks about the different uh",
    "start": "1802820",
    "end": "1809480"
  },
  {
    "text": "tools that we are using or integrate with flux and please check out flux on GitHub and",
    "start": "1809480",
    "end": "1816980"
  },
  {
    "text": "give us a star on both the terraform controller GitHub and the flux GitHub as well thank you",
    "start": "1816980",
    "end": "1824919"
  }
]