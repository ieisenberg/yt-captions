[
  {
    "start": "0",
    "end": "117000"
  },
  {
    "text": "hi everyone thank you for joining our",
    "start": "80",
    "end": "2879"
  },
  {
    "text": "presentation",
    "start": "2879",
    "end": "5600"
  },
  {
    "text": "and we are going to talk about how we",
    "start": "6879",
    "end": "9120"
  },
  {
    "text": "run elephant on wheels",
    "start": "9120",
    "end": "11040"
  },
  {
    "text": "how we have bridged the worlds of our",
    "start": "11040",
    "end": "14000"
  },
  {
    "text": "petascale hadoop store",
    "start": "14000",
    "end": "15759"
  },
  {
    "text": "and kubernetes at linkedin for ai",
    "start": "15759",
    "end": "19920"
  },
  {
    "text": "i am abin shahab i am a staff software",
    "start": "26320",
    "end": "29359"
  },
  {
    "text": "engineer at linkedin",
    "start": "29359",
    "end": "30960"
  },
  {
    "text": "my colleague frank is a software",
    "start": "30960",
    "end": "32800"
  },
  {
    "text": "engineer at linkedin",
    "start": "32800",
    "end": "34399"
  },
  {
    "text": "together we have implemented cube2hadoop",
    "start": "34399",
    "end": "37280"
  },
  {
    "text": "to bridge",
    "start": "37280",
    "end": "38079"
  },
  {
    "text": "kubernetes with hadoop",
    "start": "38079",
    "end": "45840"
  },
  {
    "text": "in this talk we're going to provide some",
    "start": "47440",
    "end": "50800"
  },
  {
    "text": "background on linkedin's petabyte scale",
    "start": "50800",
    "end": "52879"
  },
  {
    "text": "data store",
    "start": "52879",
    "end": "54079"
  },
  {
    "text": "we're going to describe why and how we",
    "start": "54079",
    "end": "56079"
  },
  {
    "text": "implemented cube to hadoop",
    "start": "56079",
    "end": "57760"
  },
  {
    "text": "then frank will provide a demo of open",
    "start": "57760",
    "end": "60879"
  },
  {
    "text": "source cube to hadoop",
    "start": "60879",
    "end": "62480"
  },
  {
    "text": "and we will deserve some time for q a at",
    "start": "62480",
    "end": "65040"
  },
  {
    "text": "the end",
    "start": "65040",
    "end": "67439"
  },
  {
    "text": "first some background on linkedin's data",
    "start": "70400",
    "end": "73200"
  },
  {
    "text": "store",
    "start": "73200",
    "end": "75438"
  },
  {
    "text": "our stack is based on hadoop users",
    "start": "78880",
    "end": "82240"
  },
  {
    "text": "submit jobs",
    "start": "82240",
    "end": "83439"
  },
  {
    "text": "via azkaban to spark or tony",
    "start": "83439",
    "end": "86880"
  },
  {
    "text": "and then they run on yarn we run one of",
    "start": "86880",
    "end": "89439"
  },
  {
    "text": "the largest yarn clusters in the world",
    "start": "89439",
    "end": "91680"
  },
  {
    "text": "with more than 6000 nodes and with a",
    "start": "91680",
    "end": "94240"
  },
  {
    "text": "very high growth rate in the cluster",
    "start": "94240",
    "end": "96079"
  },
  {
    "text": "size",
    "start": "96079",
    "end": "97200"
  },
  {
    "text": "side by side we have a kubernetes",
    "start": "97200",
    "end": "99840"
  },
  {
    "text": "cluster",
    "start": "99840",
    "end": "100640"
  },
  {
    "text": "that users use to run deep learning jobs",
    "start": "100640",
    "end": "103520"
  },
  {
    "text": "that access our petabyte scale data",
    "start": "103520",
    "end": "105840"
  },
  {
    "text": "store",
    "start": "105840",
    "end": "107840"
  },
  {
    "text": "now my colleague frank will discuss",
    "start": "107840",
    "end": "111280"
  },
  {
    "text": "why we needed cube to hadoop to bridge",
    "start": "111280",
    "end": "114079"
  },
  {
    "text": "kubernetes and hadoop",
    "start": "114079",
    "end": "117360"
  },
  {
    "start": "117000",
    "end": "165000"
  },
  {
    "text": "thank you robin as abin has mentioned in",
    "start": "118079",
    "end": "121439"
  },
  {
    "text": "the previous slide",
    "start": "121439",
    "end": "122640"
  },
  {
    "text": "linkedin has traditionally been using",
    "start": "122640",
    "end": "124560"
  },
  {
    "text": "hadoop as its compute platform",
    "start": "124560",
    "end": "126960"
  },
  {
    "text": "and we operate one of the largest hadoop",
    "start": "126960",
    "end": "128959"
  },
  {
    "text": "data lake in the world",
    "start": "128959",
    "end": "131200"
  },
  {
    "text": "to enable linkedin jobs running on",
    "start": "131200",
    "end": "133280"
  },
  {
    "text": "kubernetes",
    "start": "133280",
    "end": "134640"
  },
  {
    "text": "means we first need to tackle the",
    "start": "134640",
    "end": "136560"
  },
  {
    "text": "problem of",
    "start": "136560",
    "end": "137760"
  },
  {
    "text": "accessing hdfs data from kubernetes",
    "start": "137760",
    "end": "141680"
  },
  {
    "text": "however there is a gap in authentication",
    "start": "141680",
    "end": "144080"
  },
  {
    "text": "between the two",
    "start": "144080",
    "end": "144879"
  },
  {
    "text": "services hadoop uses kerberos",
    "start": "144879",
    "end": "148239"
  },
  {
    "text": "a three-party protocol built on",
    "start": "148239",
    "end": "150319"
  },
  {
    "text": "symmetric key cryptography",
    "start": "150319",
    "end": "152239"
  },
  {
    "text": "to ensure any clients accessing the",
    "start": "152239",
    "end": "154560"
  },
  {
    "text": "cluster",
    "start": "154560",
    "end": "155280"
  },
  {
    "text": "are who they claim to be whereas",
    "start": "155280",
    "end": "157920"
  },
  {
    "text": "kubernetes on the",
    "start": "157920",
    "end": "158959"
  },
  {
    "text": "other hand uses a certificate based",
    "start": "158959",
    "end": "161599"
  },
  {
    "text": "authentication",
    "start": "161599",
    "end": "162640"
  },
  {
    "text": "to control access",
    "start": "162640",
    "end": "165840"
  },
  {
    "start": "165000",
    "end": "270000"
  },
  {
    "text": "for those of you who are not very",
    "start": "167040",
    "end": "168560"
  },
  {
    "text": "familiar with hadoop",
    "start": "168560",
    "end": "170560"
  },
  {
    "text": "let's take a deeper dive into how",
    "start": "170560",
    "end": "172640"
  },
  {
    "text": "delegation token works",
    "start": "172640",
    "end": "175360"
  },
  {
    "text": "let's take a look at the following",
    "start": "175360",
    "end": "176720"
  },
  {
    "text": "diagram the user would normally log onto",
    "start": "176720",
    "end": "180000"
  },
  {
    "text": "some hadoop gateway machine using their",
    "start": "180000",
    "end": "182000"
  },
  {
    "text": "user id and password they would then get",
    "start": "182000",
    "end": "184800"
  },
  {
    "text": "a kerberos tgt ticket from the gateway",
    "start": "184800",
    "end": "187519"
  },
  {
    "text": "machine",
    "start": "187519",
    "end": "189440"
  },
  {
    "text": "to access hdfs they send a request along",
    "start": "189440",
    "end": "192560"
  },
  {
    "text": "with the tgt ticket to hdfs name node",
    "start": "192560",
    "end": "196080"
  },
  {
    "text": "the name node would then use the client",
    "start": "196080",
    "end": "197840"
  },
  {
    "text": "provided tgt ticket",
    "start": "197840",
    "end": "199360"
  },
  {
    "text": "to authenticate with the kerberos server",
    "start": "199360",
    "end": "202640"
  },
  {
    "text": "if the authentication succeeds name node",
    "start": "202640",
    "end": "205200"
  },
  {
    "text": "will create a new delegation token",
    "start": "205200",
    "end": "207360"
  },
  {
    "text": "and pass it back to the user now any",
    "start": "207360",
    "end": "210480"
  },
  {
    "text": "further communication between the user",
    "start": "210480",
    "end": "212480"
  },
  {
    "text": "and the name node",
    "start": "212480",
    "end": "213519"
  },
  {
    "text": "no longer need to authenticate with the",
    "start": "213519",
    "end": "215280"
  },
  {
    "text": "kerberos server",
    "start": "215280",
    "end": "217120"
  },
  {
    "text": "this really helps hadoop data access",
    "start": "217120",
    "end": "219680"
  },
  {
    "text": "scale",
    "start": "219680",
    "end": "220239"
  },
  {
    "text": "as you can imagine if every request",
    "start": "220239",
    "end": "222319"
  },
  {
    "text": "requires authentication against kerberos",
    "start": "222319",
    "end": "224959"
  },
  {
    "text": "the authentication process would soon",
    "start": "224959",
    "end": "226799"
  },
  {
    "text": "become the bottleneck for the entire",
    "start": "226799",
    "end": "228400"
  },
  {
    "text": "system",
    "start": "228400",
    "end": "230159"
  },
  {
    "text": "the kerberos server also serves many",
    "start": "230159",
    "end": "232400"
  },
  {
    "text": "other authentication requests other than",
    "start": "232400",
    "end": "235120"
  },
  {
    "text": "user data access request",
    "start": "235120",
    "end": "238159"
  },
  {
    "text": "the hadoop delegation token by default",
    "start": "238159",
    "end": "240319"
  },
  {
    "text": "has a lifespan",
    "start": "240319",
    "end": "241680"
  },
  {
    "text": "of one day and can be renewed for up to",
    "start": "241680",
    "end": "244400"
  },
  {
    "text": "seven days",
    "start": "244400",
    "end": "246080"
  },
  {
    "text": "ai modelers at linkedin uses hdfs data",
    "start": "246080",
    "end": "249200"
  },
  {
    "text": "to train their models",
    "start": "249200",
    "end": "250799"
  },
  {
    "text": "they gain access to data through hdfs",
    "start": "250799",
    "end": "253599"
  },
  {
    "text": "using user account",
    "start": "253599",
    "end": "254879"
  },
  {
    "text": "or headless accounts now the cost of the",
    "start": "254879",
    "end": "258079"
  },
  {
    "text": "headless accounts are basically",
    "start": "258079",
    "end": "260000"
  },
  {
    "text": "oftentimes used to denote a virtual team",
    "start": "260000",
    "end": "262800"
  },
  {
    "text": "that is working on a project",
    "start": "262800",
    "end": "264560"
  },
  {
    "text": "that will share the exact same data",
    "start": "264560",
    "end": "266240"
  },
  {
    "text": "within the entire team",
    "start": "266240",
    "end": "269840"
  },
  {
    "start": "270000",
    "end": "289000"
  },
  {
    "text": "in order to allow for kubernetes",
    "start": "271520",
    "end": "273199"
  },
  {
    "text": "workloads to securely access hdfs",
    "start": "273199",
    "end": "276240"
  },
  {
    "text": "we built and open sourced the tool",
    "start": "276240",
    "end": "278320"
  },
  {
    "text": "called cube2hadoop",
    "start": "278320",
    "end": "280320"
  },
  {
    "text": "you can read about our blog post and",
    "start": "280320",
    "end": "282880"
  },
  {
    "text": "find our code on the github link",
    "start": "282880",
    "end": "284720"
  },
  {
    "text": "below",
    "start": "284720",
    "end": "287120"
  },
  {
    "start": "289000",
    "end": "350000"
  },
  {
    "text": "so what exactly is cube2hadoop",
    "start": "290800",
    "end": "294240"
  },
  {
    "text": "and what does it do to hadoop is a tool",
    "start": "294240",
    "end": "297600"
  },
  {
    "text": "that allows secure hdfs",
    "start": "297600",
    "end": "299520"
  },
  {
    "text": "access from kubernetes it follows",
    "start": "299520",
    "end": "302560"
  },
  {
    "text": "hadoop authentication mechanism the",
    "start": "302560",
    "end": "304960"
  },
  {
    "text": "delegation token mechanism that we",
    "start": "304960",
    "end": "306720"
  },
  {
    "text": "described earlier",
    "start": "306720",
    "end": "308080"
  },
  {
    "text": "so that we know that it will scale to",
    "start": "308080",
    "end": "310240"
  },
  {
    "text": "the same level as our hadoop system is",
    "start": "310240",
    "end": "312160"
  },
  {
    "text": "doing right now",
    "start": "312160",
    "end": "314560"
  },
  {
    "text": "many times the training jobs at linkedin",
    "start": "314560",
    "end": "316800"
  },
  {
    "text": "runs for an extended period of time",
    "start": "316800",
    "end": "319520"
  },
  {
    "text": "cube2hadoop also takes care of renewing",
    "start": "319520",
    "end": "322000"
  },
  {
    "text": "the delegation tokens to support those",
    "start": "322000",
    "end": "324160"
  },
  {
    "text": "long-running jobs",
    "start": "324160",
    "end": "326080"
  },
  {
    "text": "it also integrate with ldap for fine",
    "start": "326080",
    "end": "329120"
  },
  {
    "text": "grain access control",
    "start": "329120",
    "end": "330560"
  },
  {
    "text": "so that user can proxy as themselves or",
    "start": "330560",
    "end": "332880"
  },
  {
    "text": "headless accounts",
    "start": "332880",
    "end": "334880"
  },
  {
    "text": "it also generates audible logs so that",
    "start": "334880",
    "end": "337280"
  },
  {
    "text": "they're fully compliant",
    "start": "337280",
    "end": "338720"
  },
  {
    "text": "with gdpr requirements that means admins",
    "start": "338720",
    "end": "342639"
  },
  {
    "text": "can figure out who",
    "start": "342639",
    "end": "344500"
  },
  {
    "text": "[Music]",
    "start": "344500",
    "end": "346160"
  },
  {
    "text": "access what data at what time",
    "start": "346160",
    "end": "350000"
  },
  {
    "start": "350000",
    "end": "401000"
  },
  {
    "text": "there are three main components to cube",
    "start": "351680",
    "end": "353440"
  },
  {
    "text": "2 hadoop",
    "start": "353440",
    "end": "354960"
  },
  {
    "text": "the main component is hadoop token",
    "start": "354960",
    "end": "357600"
  },
  {
    "text": "service",
    "start": "357600",
    "end": "359280"
  },
  {
    "text": "its main responsibility is to fetch",
    "start": "359280",
    "end": "361759"
  },
  {
    "text": "delegation token",
    "start": "361759",
    "end": "362960"
  },
  {
    "text": "on behalf of the user a second component",
    "start": "362960",
    "end": "366880"
  },
  {
    "text": "is the cube to hadoop in a container",
    "start": "366880",
    "end": "370160"
  },
  {
    "text": "this in a container will reside in every",
    "start": "370160",
    "end": "372560"
  },
  {
    "text": "worker",
    "start": "372560",
    "end": "373280"
  },
  {
    "text": "that wants to have access to hdfs",
    "start": "373280",
    "end": "376880"
  },
  {
    "text": "it sends a request to hadoop token",
    "start": "376880",
    "end": "379520"
  },
  {
    "text": "service for fetching delegation token",
    "start": "379520",
    "end": "382560"
  },
  {
    "text": "the third component is the id decorator",
    "start": "382560",
    "end": "386160"
  },
  {
    "text": "it is used to write authenticated user",
    "start": "386160",
    "end": "388479"
  },
  {
    "text": "id as",
    "start": "388479",
    "end": "389280"
  },
  {
    "text": "immutable notation within each pod",
    "start": "389280",
    "end": "392800"
  },
  {
    "text": "so that the cube to hadoop service knows",
    "start": "392800",
    "end": "395440"
  },
  {
    "text": "whose",
    "start": "395440",
    "end": "395919"
  },
  {
    "text": "delegation token to fetch",
    "start": "395919",
    "end": "399360"
  },
  {
    "start": "401000",
    "end": "488000"
  },
  {
    "text": "now to understand cube2 hadoop more",
    "start": "402880",
    "end": "404960"
  },
  {
    "text": "let's look at a typical workflow",
    "start": "404960",
    "end": "409199"
  },
  {
    "text": "a user will log on to some gateway",
    "start": "409199",
    "end": "411039"
  },
  {
    "text": "machine using their password",
    "start": "411039",
    "end": "412639"
  },
  {
    "text": "and they will get a certificate using",
    "start": "412639",
    "end": "415680"
  },
  {
    "text": "that certificate the user can submit a",
    "start": "415680",
    "end": "417599"
  },
  {
    "text": "job to kubernetes cluster",
    "start": "417599",
    "end": "421039"
  },
  {
    "text": "once the job is submitted the worker",
    "start": "421039",
    "end": "422960"
  },
  {
    "text": "pods will be launched",
    "start": "422960",
    "end": "424800"
  },
  {
    "text": "and now that the order pods have been",
    "start": "424800",
    "end": "426160"
  },
  {
    "text": "launched the init containers in those",
    "start": "426160",
    "end": "428639"
  },
  {
    "text": "pods will start to send the request to a",
    "start": "428639",
    "end": "430800"
  },
  {
    "text": "duke token service to get tokens",
    "start": "430800",
    "end": "433759"
  },
  {
    "text": "the hadoop token service then act as a",
    "start": "433759",
    "end": "436000"
  },
  {
    "text": "hadoop super user",
    "start": "436000",
    "end": "437680"
  },
  {
    "text": "and will contact name node to fetch",
    "start": "437680",
    "end": "440080"
  },
  {
    "text": "delegation token",
    "start": "440080",
    "end": "442479"
  },
  {
    "text": "in step in step 6 after the token is",
    "start": "442479",
    "end": "446240"
  },
  {
    "text": "returned to dna containers",
    "start": "446240",
    "end": "448479"
  },
  {
    "text": "any container will mount those tokens",
    "start": "448479",
    "end": "450400"
  },
  {
    "text": "locally onto the pod",
    "start": "450400",
    "end": "452240"
  },
  {
    "text": "in the shared volume in step 7",
    "start": "452240",
    "end": "455840"
  },
  {
    "text": "all the workers will be able to access",
    "start": "455840",
    "end": "458319"
  },
  {
    "text": "hdfs data securely",
    "start": "458319",
    "end": "461120"
  },
  {
    "text": "during that time hadoop token service",
    "start": "461120",
    "end": "463599"
  },
  {
    "text": "will also monitor the status",
    "start": "463599",
    "end": "465520"
  },
  {
    "text": "of every single job within the",
    "start": "465520",
    "end": "467520"
  },
  {
    "text": "kubernetes cluster",
    "start": "467520",
    "end": "468960"
  },
  {
    "text": "by placing a watch on kubernetes api",
    "start": "468960",
    "end": "471599"
  },
  {
    "text": "service",
    "start": "471599",
    "end": "473360"
  },
  {
    "text": "if a job is terminated completed or",
    "start": "473360",
    "end": "475520"
  },
  {
    "text": "succeeded",
    "start": "475520",
    "end": "476479"
  },
  {
    "text": "hadoop token service will cancel the",
    "start": "476479",
    "end": "478240"
  },
  {
    "text": "delegation token",
    "start": "478240",
    "end": "480240"
  },
  {
    "text": "and if the job is running for longer",
    "start": "480240",
    "end": "481840"
  },
  {
    "text": "than one day hadoop token service will",
    "start": "481840",
    "end": "484160"
  },
  {
    "text": "renew the delegation token",
    "start": "484160",
    "end": "487520"
  },
  {
    "start": "488000",
    "end": "637000"
  },
  {
    "text": "now let's look at how authentication",
    "start": "490160",
    "end": "492160"
  },
  {
    "text": "mechanism works for cube2hadoop",
    "start": "492160",
    "end": "495599"
  },
  {
    "text": "user will submit a job to kubernetes",
    "start": "495599",
    "end": "498000"
  },
  {
    "text": "cluster",
    "start": "498000",
    "end": "499039"
  },
  {
    "text": "and the kubernetes cluster the",
    "start": "499039",
    "end": "501280"
  },
  {
    "text": "kubernetes api server internally",
    "start": "501280",
    "end": "503360"
  },
  {
    "text": "actually tracks the user information",
    "start": "503360",
    "end": "506800"
  },
  {
    "text": "they know who the authenticated user is",
    "start": "506800",
    "end": "509280"
  },
  {
    "text": "that submits the job",
    "start": "509280",
    "end": "511199"
  },
  {
    "text": "however this information is not exposed",
    "start": "511199",
    "end": "514399"
  },
  {
    "text": "to any public-facing apis and therefore",
    "start": "514399",
    "end": "518240"
  },
  {
    "text": "we created id decorator that will",
    "start": "518240",
    "end": "520640"
  },
  {
    "text": "decorate the username",
    "start": "520640",
    "end": "522000"
  },
  {
    "text": "into the metadata field of a pod",
    "start": "522000",
    "end": "525279"
  },
  {
    "text": "we will talk about id decorator in more",
    "start": "525279",
    "end": "527040"
  },
  {
    "text": "detail later",
    "start": "527040",
    "end": "529680"
  },
  {
    "text": "once the pods are launched the init",
    "start": "531920",
    "end": "533680"
  },
  {
    "text": "container will send a get delegation",
    "start": "533680",
    "end": "535519"
  },
  {
    "text": "token request to hadoop token service",
    "start": "535519",
    "end": "538560"
  },
  {
    "text": "the hadoop token service will parse out",
    "start": "538560",
    "end": "540720"
  },
  {
    "text": "the source ip address from the init",
    "start": "540720",
    "end": "542480"
  },
  {
    "text": "container",
    "start": "542480",
    "end": "543360"
  },
  {
    "text": "and use that ip address to authenticate",
    "start": "543360",
    "end": "546399"
  },
  {
    "text": "it will authenticate with kubernetes api",
    "start": "546399",
    "end": "548640"
  },
  {
    "text": "server to find the ip address of the pod",
    "start": "548640",
    "end": "551600"
  },
  {
    "text": "and if the ip addresses are a match then",
    "start": "551600",
    "end": "554160"
  },
  {
    "text": "we know that the pods are who they claim",
    "start": "554160",
    "end": "555839"
  },
  {
    "text": "to be",
    "start": "555839",
    "end": "557200"
  },
  {
    "text": "this way a pod that anyone else created",
    "start": "557200",
    "end": "560080"
  },
  {
    "text": "cannot claim",
    "start": "560080",
    "end": "561839"
  },
  {
    "text": "other people's delegation token",
    "start": "561839",
    "end": "565279"
  },
  {
    "text": "we know that authenticating using pod ip",
    "start": "566720",
    "end": "569040"
  },
  {
    "text": "address is not ideal",
    "start": "569040",
    "end": "570800"
  },
  {
    "text": "with the official release of token",
    "start": "570800",
    "end": "572320"
  },
  {
    "text": "request and token review api since",
    "start": "572320",
    "end": "574399"
  },
  {
    "text": "kubernetes",
    "start": "574399",
    "end": "575360"
  },
  {
    "text": "1.14 we saw a new opportunity to improve",
    "start": "575360",
    "end": "578880"
  },
  {
    "text": "the authentication mechanism",
    "start": "578880",
    "end": "581760"
  },
  {
    "text": "specifically we can use those tokens to",
    "start": "581760",
    "end": "584480"
  },
  {
    "text": "identify the requester's pod",
    "start": "584480",
    "end": "586560"
  },
  {
    "text": "and it works like this the init",
    "start": "586560",
    "end": "588959"
  },
  {
    "text": "container",
    "start": "588959",
    "end": "589760"
  },
  {
    "text": "will send a token request api call",
    "start": "589760",
    "end": "592800"
  },
  {
    "text": "to kubernetes api server and in a return",
    "start": "592800",
    "end": "595680"
  },
  {
    "text": "it will get a token",
    "start": "595680",
    "end": "597920"
  },
  {
    "text": "and a container will then make a",
    "start": "597920",
    "end": "599920"
  },
  {
    "text": "delegation token request",
    "start": "599920",
    "end": "601519"
  },
  {
    "text": "to the hadoop token service using that",
    "start": "601519",
    "end": "604800"
  },
  {
    "text": "token",
    "start": "604800",
    "end": "605360"
  },
  {
    "text": "the hadoop token service can",
    "start": "605360",
    "end": "607040"
  },
  {
    "text": "authenticate with kubernetes api",
    "start": "607040",
    "end": "609279"
  },
  {
    "text": "server using a token review api call",
    "start": "609279",
    "end": "613519"
  },
  {
    "text": "the token review request will return a",
    "start": "613519",
    "end": "615519"
  },
  {
    "text": "response that includes the pod name",
    "start": "615519",
    "end": "618079"
  },
  {
    "text": "so that the kubernetes cube to hadoop",
    "start": "618079",
    "end": "620640"
  },
  {
    "text": "service will know whose delegation token",
    "start": "620640",
    "end": "622720"
  },
  {
    "text": "to fetch",
    "start": "622720",
    "end": "625120"
  },
  {
    "text": "this way it is the authentication",
    "start": "625120",
    "end": "627279"
  },
  {
    "text": "mechanism is safer",
    "start": "627279",
    "end": "628959"
  },
  {
    "text": "and faster now i'll turn back to my",
    "start": "628959",
    "end": "631920"
  },
  {
    "text": "colleague abin to talk",
    "start": "631920",
    "end": "633360"
  },
  {
    "text": "in more detail about id decorator abin",
    "start": "633360",
    "end": "637839"
  },
  {
    "start": "637000",
    "end": "759000"
  },
  {
    "text": "thank you frank for cube to hadoop to",
    "start": "637839",
    "end": "641200"
  },
  {
    "text": "provide the correct",
    "start": "641200",
    "end": "642480"
  },
  {
    "text": "token to the correct user all resources",
    "start": "642480",
    "end": "646560"
  },
  {
    "text": "need to have the identity of the",
    "start": "646560",
    "end": "649360"
  },
  {
    "text": "creating end user",
    "start": "649360",
    "end": "651360"
  },
  {
    "text": "we created a kubernetes admission",
    "start": "651360",
    "end": "653279"
  },
  {
    "text": "controller called id decorator for this",
    "start": "653279",
    "end": "655760"
  },
  {
    "text": "very purpose",
    "start": "655760",
    "end": "661839"
  },
  {
    "text": "this is how it works a user submits a",
    "start": "663760",
    "end": "666480"
  },
  {
    "text": "job",
    "start": "666480",
    "end": "667279"
  },
  {
    "text": "to the kubernetes master api server",
    "start": "667279",
    "end": "670720"
  },
  {
    "text": "id decorated admission controller will",
    "start": "670720",
    "end": "673519"
  },
  {
    "text": "intercept this request",
    "start": "673519",
    "end": "675360"
  },
  {
    "text": "and then decorate that particular",
    "start": "675360",
    "end": "677680"
  },
  {
    "text": "request",
    "start": "677680",
    "end": "678640"
  },
  {
    "text": "the crds request with the end users ldap",
    "start": "678640",
    "end": "684399"
  },
  {
    "text": "account",
    "start": "686839",
    "end": "689279"
  },
  {
    "text": "next this request will be",
    "start": "689279",
    "end": "692640"
  },
  {
    "text": "converted by the tf job operator into a",
    "start": "692640",
    "end": "695680"
  },
  {
    "text": "pod submission request and go back to",
    "start": "695680",
    "end": "698399"
  },
  {
    "text": "the submission request pipeline of the",
    "start": "698399",
    "end": "701600"
  },
  {
    "text": "kubernetes master in that submission",
    "start": "701600",
    "end": "703839"
  },
  {
    "text": "request pipeline the ig decorator will",
    "start": "703839",
    "end": "706079"
  },
  {
    "text": "again intercept it and decorate it",
    "start": "706079",
    "end": "709120"
  },
  {
    "text": "with the end users ldap id",
    "start": "709120",
    "end": "713600"
  },
  {
    "text": "in this way it id decorator ensures that",
    "start": "713600",
    "end": "717279"
  },
  {
    "text": "every request and every resource ends up",
    "start": "717279",
    "end": "720240"
  },
  {
    "text": "with the",
    "start": "720240",
    "end": "721279"
  },
  {
    "text": "the creating end users ldap id",
    "start": "721279",
    "end": "723680"
  },
  {
    "text": "regardless of",
    "start": "723680",
    "end": "724959"
  },
  {
    "text": "what service account creates it",
    "start": "724959",
    "end": "728800"
  },
  {
    "text": "um so at the end of this this",
    "start": "728800",
    "end": "732160"
  },
  {
    "text": "will result in the pod controller",
    "start": "732160",
    "end": "735920"
  },
  {
    "text": "creating the pod",
    "start": "735920",
    "end": "737680"
  },
  {
    "text": "and that spot still having the end users",
    "start": "737680",
    "end": "741839"
  },
  {
    "text": "ldap id",
    "start": "741839",
    "end": "743040"
  },
  {
    "text": "which id cube2hadoop can use",
    "start": "743040",
    "end": "747360"
  },
  {
    "text": "to validate whether this is the correct",
    "start": "747360",
    "end": "749440"
  },
  {
    "text": "user to give the correct delegation",
    "start": "749440",
    "end": "751600"
  },
  {
    "text": "token",
    "start": "751600",
    "end": "753920"
  },
  {
    "text": "next i want to talk about",
    "start": "756320",
    "end": "759680"
  },
  {
    "start": "759000",
    "end": "868000"
  },
  {
    "text": "another type agnostic nature",
    "start": "759680",
    "end": "763040"
  },
  {
    "text": "of id decorator kubernetes strength",
    "start": "763040",
    "end": "767040"
  },
  {
    "text": "is support for multiple crd",
    "start": "767040",
    "end": "770399"
  },
  {
    "text": "to scale support for all the different",
    "start": "770399",
    "end": "773360"
  },
  {
    "text": "crds",
    "start": "773360",
    "end": "774079"
  },
  {
    "text": "in use in our cluster uh we wanted to",
    "start": "774079",
    "end": "777200"
  },
  {
    "text": "make sure that",
    "start": "777200",
    "end": "778320"
  },
  {
    "text": "we don't have to change id decorator",
    "start": "778320",
    "end": "781680"
  },
  {
    "text": "code every time we",
    "start": "781680",
    "end": "782880"
  },
  {
    "text": "introduce a new custom type to",
    "start": "782880",
    "end": "784959"
  },
  {
    "text": "kubernetes",
    "start": "784959",
    "end": "787120"
  },
  {
    "text": "and we can keep using id decorator for",
    "start": "787120",
    "end": "789519"
  },
  {
    "text": "any new custom type we",
    "start": "789519",
    "end": "791120"
  },
  {
    "text": "import into kubernetes",
    "start": "791120",
    "end": "794160"
  },
  {
    "text": "to ski to support this ig decorator uses",
    "start": "794160",
    "end": "798000"
  },
  {
    "text": "kubernetes json path uh we've modified",
    "start": "798000",
    "end": "801440"
  },
  {
    "text": "it a little bit",
    "start": "801440",
    "end": "802480"
  },
  {
    "text": "uh the jsonplath implementation um and",
    "start": "802480",
    "end": "806160"
  },
  {
    "text": "it uses that to decorate the pod",
    "start": "806160",
    "end": "808880"
  },
  {
    "text": "template in a type agnostic way",
    "start": "808880",
    "end": "810880"
  },
  {
    "text": "so as long as the crd comes with a pod",
    "start": "810880",
    "end": "813120"
  },
  {
    "text": "template it will get correctly decorated",
    "start": "813120",
    "end": "816320"
  },
  {
    "text": "so on this example here on the left",
    "start": "816320",
    "end": "819440"
  },
  {
    "text": "there's a tf job that gets submitted to",
    "start": "819440",
    "end": "823120"
  },
  {
    "text": "kubernetes and that has",
    "start": "823120",
    "end": "825040"
  },
  {
    "text": "a particular that has a pod template",
    "start": "825040",
    "end": "827199"
  },
  {
    "text": "inside it",
    "start": "827199",
    "end": "828639"
  },
  {
    "text": "and then on the right is a specif uh",
    "start": "828639",
    "end": "831199"
  },
  {
    "text": "kind of a",
    "start": "831199",
    "end": "832480"
  },
  {
    "text": "specification in json of",
    "start": "832480",
    "end": "835600"
  },
  {
    "text": "uh in yaml of uh what",
    "start": "835600",
    "end": "838639"
  },
  {
    "text": "json path should be updated to",
    "start": "838639",
    "end": "842399"
  },
  {
    "text": "insert the user's ldap id um",
    "start": "842399",
    "end": "845680"
  },
  {
    "text": "and therefore id decorator will use this",
    "start": "845680",
    "end": "849120"
  },
  {
    "text": "configuration",
    "start": "849120",
    "end": "850320"
  },
  {
    "text": "to find under the pod template the",
    "start": "850320",
    "end": "853360"
  },
  {
    "text": "metadata annotation",
    "start": "853360",
    "end": "854560"
  },
  {
    "text": "section of the tf job",
    "start": "854560",
    "end": "858160"
  },
  {
    "text": "and decorate the user's",
    "start": "858160",
    "end": "862639"
  },
  {
    "text": "ldap id there",
    "start": "862880",
    "end": "870079"
  },
  {
    "start": "868000",
    "end": "951000"
  },
  {
    "text": "now a larger question is why do we need",
    "start": "870079",
    "end": "872480"
  },
  {
    "text": "cube to hadoop at all",
    "start": "872480",
    "end": "874480"
  },
  {
    "text": "kubernetes has secrets and we can use",
    "start": "874480",
    "end": "877839"
  },
  {
    "text": "those to directly mount a delegation",
    "start": "877839",
    "end": "881120"
  },
  {
    "text": "token that the user creates",
    "start": "881120",
    "end": "883519"
  },
  {
    "text": "why do we go through the circuitous",
    "start": "883519",
    "end": "886320"
  },
  {
    "text": "route",
    "start": "886320",
    "end": "886880"
  },
  {
    "text": "of having a service that sends",
    "start": "886880",
    "end": "890240"
  },
  {
    "text": "the tokens back to the use back to the",
    "start": "890240",
    "end": "892800"
  },
  {
    "text": "jobs that are running",
    "start": "892800",
    "end": "894880"
  },
  {
    "text": "the shortcoming of using secrets is that",
    "start": "894880",
    "end": "897839"
  },
  {
    "text": "we have to now",
    "start": "897839",
    "end": "898720"
  },
  {
    "text": "configure uh very fine-grained",
    "start": "898720",
    "end": "902000"
  },
  {
    "text": "our back rules for every user in",
    "start": "902000",
    "end": "904399"
  },
  {
    "text": "kubernetes",
    "start": "904399",
    "end": "905519"
  },
  {
    "text": "or at every user on the namespace to",
    "start": "905519",
    "end": "907920"
  },
  {
    "text": "make sure that no user can steal another",
    "start": "907920",
    "end": "910320"
  },
  {
    "text": "user's",
    "start": "910320",
    "end": "911519"
  },
  {
    "text": "delegation token and impersonate them",
    "start": "911519",
    "end": "914560"
  },
  {
    "text": "also we need to make sure that there are",
    "start": "914560",
    "end": "916160"
  },
  {
    "text": "special rules",
    "start": "916160",
    "end": "917600"
  },
  {
    "text": "for administrators who could see",
    "start": "917600",
    "end": "919680"
  },
  {
    "text": "delegation tokens",
    "start": "919680",
    "end": "921920"
  },
  {
    "text": "and we also need to make sure that the",
    "start": "921920",
    "end": "924800"
  },
  {
    "text": "there's container lifecycle hooks",
    "start": "924800",
    "end": "926720"
  },
  {
    "text": "or or culling jobs that actually go",
    "start": "926720",
    "end": "929759"
  },
  {
    "text": "ahead and",
    "start": "929759",
    "end": "930639"
  },
  {
    "text": "clean up the secrets after the job",
    "start": "930639",
    "end": "932800"
  },
  {
    "text": "finishes",
    "start": "932800",
    "end": "934079"
  },
  {
    "text": "so all this becomes a big overhead and",
    "start": "934079",
    "end": "936959"
  },
  {
    "text": "we feel that our our",
    "start": "936959",
    "end": "938560"
  },
  {
    "text": "cube2 had to implementation doesn't",
    "start": "938560",
    "end": "940480"
  },
  {
    "text": "encounter those overheads",
    "start": "940480",
    "end": "942160"
  },
  {
    "text": "because it's fully secretless in memory",
    "start": "942160",
    "end": "945440"
  },
  {
    "text": "implementation",
    "start": "945440",
    "end": "948160"
  },
  {
    "text": "this brings us to our production usage",
    "start": "952880",
    "end": "955519"
  },
  {
    "text": "of",
    "start": "955519",
    "end": "956160"
  },
  {
    "text": "cube to hadoop we do use it today for",
    "start": "956160",
    "end": "959759"
  },
  {
    "text": "linkedin jobs and we we noticed that",
    "start": "959759",
    "end": "962880"
  },
  {
    "text": "um deep learning jobs and we",
    "start": "962880",
    "end": "966320"
  },
  {
    "text": "have no encounter two war stories",
    "start": "966320",
    "end": "969839"
  },
  {
    "text": "uh the first one is regarding to regard",
    "start": "969839",
    "end": "973199"
  },
  {
    "text": "related to cube to hadoop's use of pod",
    "start": "973199",
    "end": "976240"
  },
  {
    "text": "network to identify",
    "start": "976240",
    "end": "978079"
  },
  {
    "text": "uh the pod so because cube2 requires",
    "start": "978079",
    "end": "982560"
  },
  {
    "text": "users to use part network we notice that",
    "start": "982560",
    "end": "985680"
  },
  {
    "text": "it reduces the maximum network",
    "start": "985680",
    "end": "988320"
  },
  {
    "text": "throughput that the user is going to use",
    "start": "988320",
    "end": "992000"
  },
  {
    "text": "so this is a diagram of",
    "start": "992160",
    "end": "995199"
  },
  {
    "text": "ai users running synchronous distributor",
    "start": "995199",
    "end": "997440"
  },
  {
    "text": "training uh with the host network and",
    "start": "997440",
    "end": "1000000"
  },
  {
    "text": "here",
    "start": "1000000",
    "end": "1000480"
  },
  {
    "text": "they can consistently get line rate",
    "start": "1000480",
    "end": "1003440"
  },
  {
    "text": "about 900 megabits per second",
    "start": "1003440",
    "end": "1006160"
  },
  {
    "text": "um for their synchronous distributor",
    "start": "1006160",
    "end": "1008160"
  },
  {
    "text": "training",
    "start": "1008160",
    "end": "1010320"
  },
  {
    "text": "when we switched over to the",
    "start": "1010320",
    "end": "1013440"
  },
  {
    "text": "pod network and for cube to hadoop to",
    "start": "1013440",
    "end": "1016560"
  },
  {
    "text": "get the pods ip",
    "start": "1016560",
    "end": "1018480"
  },
  {
    "text": "the user's network throughput went down",
    "start": "1018480",
    "end": "1021120"
  },
  {
    "text": "to",
    "start": "1021120",
    "end": "1021519"
  },
  {
    "text": "around 140 megabits per second and this",
    "start": "1021519",
    "end": "1024558"
  },
  {
    "text": "was",
    "start": "1024559",
    "end": "1025038"
  },
  {
    "text": "far less than the 900 that they were",
    "start": "1025039",
    "end": "1026880"
  },
  {
    "text": "getting before",
    "start": "1026880",
    "end": "1028160"
  },
  {
    "text": "and it increased the time taken for",
    "start": "1028160",
    "end": "1031280"
  },
  {
    "text": "training",
    "start": "1031280",
    "end": "1032160"
  },
  {
    "text": "by a lot um so this was our first war",
    "start": "1032160",
    "end": "1036160"
  },
  {
    "text": "story",
    "start": "1036160",
    "end": "1037199"
  },
  {
    "text": "and now i will switch over to frank who",
    "start": "1037199",
    "end": "1040160"
  },
  {
    "text": "will talk about our",
    "start": "1040160",
    "end": "1041120"
  },
  {
    "text": "second war story thank you albin",
    "start": "1041120",
    "end": "1046079"
  },
  {
    "start": "1043000",
    "end": "1166000"
  },
  {
    "text": "for the past few months we have been",
    "start": "1046079",
    "end": "1048079"
  },
  {
    "text": "collecting customer feedbacks on",
    "start": "1048079",
    "end": "1050000"
  },
  {
    "text": "cube2hadoop",
    "start": "1050000",
    "end": "1051280"
  },
  {
    "text": "and a major complaint has been the init",
    "start": "1051280",
    "end": "1053360"
  },
  {
    "text": "container launch speed",
    "start": "1053360",
    "end": "1055440"
  },
  {
    "text": "we actually slow the inner container",
    "start": "1055440",
    "end": "1058480"
  },
  {
    "text": "token fetch speed on purpose let me tell",
    "start": "1058480",
    "end": "1061120"
  },
  {
    "text": "you why",
    "start": "1061120",
    "end": "1062640"
  },
  {
    "text": "the init container makes a fetch",
    "start": "1062640",
    "end": "1064480"
  },
  {
    "text": "delegation token request to hadoop token",
    "start": "1064480",
    "end": "1066799"
  },
  {
    "text": "service",
    "start": "1066799",
    "end": "1067919"
  },
  {
    "text": "and as we discussed in authentication",
    "start": "1067919",
    "end": "1070080"
  },
  {
    "text": "mechanisms section",
    "start": "1070080",
    "end": "1071440"
  },
  {
    "text": "the hadoop token service used the init",
    "start": "1071440",
    "end": "1073520"
  },
  {
    "text": "container source ip address",
    "start": "1073520",
    "end": "1075440"
  },
  {
    "text": "to authenticate with the kubernetes api",
    "start": "1075440",
    "end": "1078000"
  },
  {
    "text": "server",
    "start": "1078000",
    "end": "1079600"
  },
  {
    "text": "if the ip address is a mismatch or",
    "start": "1079600",
    "end": "1082000"
  },
  {
    "text": "doesn't exist",
    "start": "1082000",
    "end": "1083360"
  },
  {
    "text": "the other thing the authentication would",
    "start": "1083360",
    "end": "1085360"
  },
  {
    "text": "fail",
    "start": "1085360",
    "end": "1087200"
  },
  {
    "text": "we would have seen from our experience",
    "start": "1087200",
    "end": "1089600"
  },
  {
    "text": "what we've seen from our experience is",
    "start": "1089600",
    "end": "1091280"
  },
  {
    "text": "that",
    "start": "1091280",
    "end": "1092400"
  },
  {
    "text": "many times even though the init",
    "start": "1092400",
    "end": "1094240"
  },
  {
    "text": "container already successfully launches",
    "start": "1094240",
    "end": "1096640"
  },
  {
    "text": "with an ip address",
    "start": "1096640",
    "end": "1098320"
  },
  {
    "text": "that ip address hasn't been propagated",
    "start": "1098320",
    "end": "1100720"
  },
  {
    "text": "to kubernetes api server",
    "start": "1100720",
    "end": "1102720"
  },
  {
    "text": "by the time hadoop token service makes",
    "start": "1102720",
    "end": "1105360"
  },
  {
    "text": "the query to authenticate",
    "start": "1105360",
    "end": "1107840"
  },
  {
    "text": "therefore we purposefully set a 15",
    "start": "1107840",
    "end": "1110240"
  },
  {
    "text": "seconds delay",
    "start": "1110240",
    "end": "1111440"
  },
  {
    "text": "before the first request from the init",
    "start": "1111440",
    "end": "1113440"
  },
  {
    "text": "container to a do token service",
    "start": "1113440",
    "end": "1115600"
  },
  {
    "text": "to account for the propagation time this",
    "start": "1115600",
    "end": "1118559"
  },
  {
    "text": "temporary fix however was",
    "start": "1118559",
    "end": "1120400"
  },
  {
    "text": "not satisfying as our customer have been",
    "start": "1120400",
    "end": "1123360"
  },
  {
    "text": "enjoying the super fast launch speed",
    "start": "1123360",
    "end": "1125679"
  },
  {
    "text": "of their kubernetes jobs and this takes",
    "start": "1125679",
    "end": "1127840"
  },
  {
    "text": "it away",
    "start": "1127840",
    "end": "1129200"
  },
  {
    "text": "luckily there is a solution for both",
    "start": "1129200",
    "end": "1131360"
  },
  {
    "text": "this issue",
    "start": "1131360",
    "end": "1132400"
  },
  {
    "text": "and the hosted network issue aubin has",
    "start": "1132400",
    "end": "1134480"
  },
  {
    "text": "mentioned",
    "start": "1134480",
    "end": "1135760"
  },
  {
    "text": "that is the token request and token",
    "start": "1135760",
    "end": "1138000"
  },
  {
    "text": "review api that we've shown",
    "start": "1138000",
    "end": "1140480"
  },
  {
    "text": "using tokens instead of ip addresses as",
    "start": "1140480",
    "end": "1143039"
  },
  {
    "text": "authentication",
    "start": "1143039",
    "end": "1144160"
  },
  {
    "text": "we no longer need to bind ourselves to",
    "start": "1144160",
    "end": "1146640"
  },
  {
    "text": "pod network",
    "start": "1146640",
    "end": "1147919"
  },
  {
    "text": "and thus we can support hosted network",
    "start": "1147919",
    "end": "1150000"
  },
  {
    "text": "jobs",
    "start": "1150000",
    "end": "1151440"
  },
  {
    "text": "and since we won't face the ip address",
    "start": "1151440",
    "end": "1153440"
  },
  {
    "text": "propagation issue",
    "start": "1153440",
    "end": "1155360"
  },
  {
    "text": "there's no ip address at all we would",
    "start": "1155360",
    "end": "1158559"
  },
  {
    "text": "we could potentially speed up our init",
    "start": "1158559",
    "end": "1160559"
  },
  {
    "text": "container by a very big margin",
    "start": "1160559",
    "end": "1165840"
  },
  {
    "start": "1166000",
    "end": "1222000"
  },
  {
    "text": "finally there could be some potential",
    "start": "1167039",
    "end": "1168960"
  },
  {
    "text": "future improvements for cube to hadoop",
    "start": "1168960",
    "end": "1172000"
  },
  {
    "text": "even though we haven't faced this issue",
    "start": "1172000",
    "end": "1173760"
  },
  {
    "text": "yet this is definitely a must if you",
    "start": "1173760",
    "end": "1176320"
  },
  {
    "text": "want to scale we hope to let chief to",
    "start": "1176320",
    "end": "1179280"
  },
  {
    "text": "distribute the delegation tokens",
    "start": "1179280",
    "end": "1181360"
  },
  {
    "text": "instead of every single worker fetching",
    "start": "1181360",
    "end": "1183600"
  },
  {
    "text": "their own delegation token",
    "start": "1183600",
    "end": "1186000"
  },
  {
    "text": "you can imagine with a popular deep",
    "start": "1186000",
    "end": "1187919"
  },
  {
    "text": "learning job",
    "start": "1187919",
    "end": "1189200"
  },
  {
    "text": "you can create up to hundreds if not",
    "start": "1189200",
    "end": "1191120"
  },
  {
    "text": "thousands of containers for a single job",
    "start": "1191120",
    "end": "1194400"
  },
  {
    "text": "if every container has the fetch",
    "start": "1194400",
    "end": "1196160"
  },
  {
    "text": "delegation token at the same time",
    "start": "1196160",
    "end": "1198720"
  },
  {
    "text": "it will be a huge load for both cube to",
    "start": "1198720",
    "end": "1201200"
  },
  {
    "text": "hadoop token service",
    "start": "1201200",
    "end": "1202720"
  },
  {
    "text": "and hadoop name node therefore we want",
    "start": "1202720",
    "end": "1205840"
  },
  {
    "text": "to create a mechanism",
    "start": "1205840",
    "end": "1207039"
  },
  {
    "text": "such that only one container need to",
    "start": "1207039",
    "end": "1209280"
  },
  {
    "text": "fetch the delegation token for the",
    "start": "1209280",
    "end": "1210960"
  },
  {
    "text": "entire job",
    "start": "1210960",
    "end": "1212960"
  },
  {
    "text": "cube2hadoop is entirely open source now",
    "start": "1212960",
    "end": "1215200"
  },
  {
    "text": "and we will really encourage the open",
    "start": "1215200",
    "end": "1216799"
  },
  {
    "text": "source community to contribute to this",
    "start": "1216799",
    "end": "1218559"
  },
  {
    "text": "feature if you're interested in this",
    "start": "1218559",
    "end": "1220000"
  },
  {
    "text": "project finally",
    "start": "1220000",
    "end": "1223280"
  },
  {
    "start": "1222000",
    "end": "1622000"
  },
  {
    "text": "it has been a lot of theoretical talk",
    "start": "1223280",
    "end": "1226000"
  },
  {
    "text": "and let's look at how cube to hadoop",
    "start": "1226000",
    "end": "1228159"
  },
  {
    "text": "works",
    "start": "1228159",
    "end": "1228720"
  },
  {
    "text": "in real life through this demo",
    "start": "1228720",
    "end": "1232480"
  },
  {
    "text": "let's first create a brand new namespace",
    "start": "1232559",
    "end": "1234880"
  },
  {
    "text": "for our demo",
    "start": "1234880",
    "end": "1235679"
  },
  {
    "text": "and call the kubecon 2020 demo",
    "start": "1235679",
    "end": "1239919"
  },
  {
    "text": "now let's look at the namespace that we",
    "start": "1241520",
    "end": "1243600"
  },
  {
    "text": "just created",
    "start": "1243600",
    "end": "1248720"
  },
  {
    "text": "in order to allow id decorator to write",
    "start": "1248720",
    "end": "1251200"
  },
  {
    "text": "authenticated user id",
    "start": "1251200",
    "end": "1253120"
  },
  {
    "text": "as pod annotation we need to first",
    "start": "1253120",
    "end": "1255919"
  },
  {
    "text": "enable it in our new namespace",
    "start": "1255919",
    "end": "1259039"
  },
  {
    "text": "we can simply enable it by labeling",
    "start": "1259039",
    "end": "1262640"
  },
  {
    "text": "id decorator equals enabled",
    "start": "1262640",
    "end": "1266960"
  },
  {
    "text": "before we can fully use cube2hadoop to",
    "start": "1269200",
    "end": "1271679"
  },
  {
    "text": "fetch delegation tokens",
    "start": "1271679",
    "end": "1273360"
  },
  {
    "text": "we need to make a few modifications to",
    "start": "1273360",
    "end": "1275600"
  },
  {
    "text": "our yaml files",
    "start": "1275600",
    "end": "1277760"
  },
  {
    "text": "let's look at a sample yaml file",
    "start": "1277760",
    "end": "1281520"
  },
  {
    "text": "the first section to pay attention to in",
    "start": "1282960",
    "end": "1284880"
  },
  {
    "text": "the yaml file",
    "start": "1284880",
    "end": "1286080"
  },
  {
    "text": "is the do ask field under annotations",
    "start": "1286080",
    "end": "1289919"
  },
  {
    "text": "this shows the proxy as information",
    "start": "1289919",
    "end": "1293200"
  },
  {
    "text": "for example you can proxy as a headless",
    "start": "1293200",
    "end": "1295280"
  },
  {
    "text": "account",
    "start": "1295280",
    "end": "1296559"
  },
  {
    "text": "now for the purpose of this demo i will",
    "start": "1296559",
    "end": "1298640"
  },
  {
    "text": "proxy as myself",
    "start": "1298640",
    "end": "1301600"
  },
  {
    "text": "the second section to modify is the",
    "start": "1301600",
    "end": "1304240"
  },
  {
    "text": "volumes",
    "start": "1304240",
    "end": "1306159"
  },
  {
    "text": "we can add a new volume that will store",
    "start": "1306159",
    "end": "1308799"
  },
  {
    "text": "our hadoop delegation tokens",
    "start": "1308799",
    "end": "1311840"
  },
  {
    "text": "note the medium we choose should be in",
    "start": "1311840",
    "end": "1314320"
  },
  {
    "text": "memory",
    "start": "1314320",
    "end": "1315280"
  },
  {
    "text": "so that it is safer as it will not write",
    "start": "1315280",
    "end": "1318159"
  },
  {
    "text": "any delegation token data",
    "start": "1318159",
    "end": "1319919"
  },
  {
    "text": "onto disks",
    "start": "1319919",
    "end": "1322720"
  },
  {
    "text": "then we can create our init containers",
    "start": "1323760",
    "end": "1326400"
  },
  {
    "text": "for our delegation token",
    "start": "1326400",
    "end": "1328159"
  },
  {
    "text": "fetcher this includes specifying",
    "start": "1328159",
    "end": "1332720"
  },
  {
    "text": "an environment variable called kas",
    "start": "1332720",
    "end": "1335440"
  },
  {
    "text": "namespace",
    "start": "1335440",
    "end": "1336720"
  },
  {
    "text": "which is basically the namespace that",
    "start": "1336720",
    "end": "1338799"
  },
  {
    "text": "your pod is running in",
    "start": "1338799",
    "end": "1340799"
  },
  {
    "text": "and don't forget to attach the volumes",
    "start": "1340799",
    "end": "1343679"
  },
  {
    "text": "that we just created",
    "start": "1343679",
    "end": "1344960"
  },
  {
    "text": "so that it can write delegation token",
    "start": "1344960",
    "end": "1349039"
  },
  {
    "text": "finally in the containers of our actual",
    "start": "1350000",
    "end": "1353039"
  },
  {
    "text": "job",
    "start": "1353039",
    "end": "1354960"
  },
  {
    "text": "we also need to attach the",
    "start": "1354960",
    "end": "1358080"
  },
  {
    "text": "volume that we just created it also need",
    "start": "1358080",
    "end": "1361840"
  },
  {
    "text": "two different environment variables",
    "start": "1361840",
    "end": "1365200"
  },
  {
    "text": "one is the hadoop token file location",
    "start": "1365200",
    "end": "1368320"
  },
  {
    "text": "this is a generic macro for any hadoop",
    "start": "1368320",
    "end": "1371360"
  },
  {
    "text": "applications",
    "start": "1371360",
    "end": "1372640"
  },
  {
    "text": "to know where to read the hadoop",
    "start": "1372640",
    "end": "1374960"
  },
  {
    "text": "delegation token",
    "start": "1374960",
    "end": "1377440"
  },
  {
    "text": "and the second is hdfs name node uri",
    "start": "1377440",
    "end": "1380880"
  },
  {
    "text": "which points to the hdfs name node that",
    "start": "1380880",
    "end": "1383919"
  },
  {
    "text": "you want to read or write from",
    "start": "1383919",
    "end": "1389840"
  },
  {
    "text": "now let's start a demo job",
    "start": "1391520",
    "end": "1403039"
  },
  {
    "text": "we can check the status of our demo job",
    "start": "1403039",
    "end": "1405919"
  },
  {
    "text": "and it's currently",
    "start": "1405919",
    "end": "1407679"
  },
  {
    "text": "being initialized now this",
    "start": "1407679",
    "end": "1411760"
  },
  {
    "text": "phase takes a few seconds because it's",
    "start": "1411760",
    "end": "1414799"
  },
  {
    "text": "trying to",
    "start": "1414799",
    "end": "1416159"
  },
  {
    "text": "get the ip address from api server",
    "start": "1416159",
    "end": "1419919"
  },
  {
    "text": "basically the issue that we have",
    "start": "1419919",
    "end": "1421360"
  },
  {
    "text": "discussed earlier",
    "start": "1421360",
    "end": "1424320"
  },
  {
    "text": "now that all the pods are running let's",
    "start": "1425120",
    "end": "1427440"
  },
  {
    "text": "go into one of the pods",
    "start": "1427440",
    "end": "1429120"
  },
  {
    "text": "and see if we can access the hdfs",
    "start": "1429120",
    "end": "1431840"
  },
  {
    "text": "cluster",
    "start": "1431840",
    "end": "1434240"
  },
  {
    "text": "this is basically a command to access",
    "start": "1441520",
    "end": "1445600"
  },
  {
    "text": "the data under my folder that i own",
    "start": "1445600",
    "end": "1450158"
  },
  {
    "text": "as you can see i can see the data",
    "start": "1450400",
    "end": "1454559"
  },
  {
    "text": "now let's try to access obvious data",
    "start": "1454559",
    "end": "1457200"
  },
  {
    "text": "folder",
    "start": "1457200",
    "end": "1459840"
  },
  {
    "text": "and i get permission denied",
    "start": "1460559",
    "end": "1464240"
  },
  {
    "text": "now this concludes our demo thank you",
    "start": "1465520",
    "end": "1468000"
  },
  {
    "text": "for watching",
    "start": "1468000",
    "end": "1473840"
  },
  {
    "text": "this concludes the presentation section",
    "start": "1475279",
    "end": "1477919"
  },
  {
    "text": "now will open up for",
    "start": "1477919",
    "end": "1479360"
  },
  {
    "text": "q a thank you",
    "start": "1479360",
    "end": "1487840"
  },
  {
    "text": "uh so to all the attendees i would",
    "start": "1551520",
    "end": "1553919"
  },
  {
    "text": "invite you",
    "start": "1553919",
    "end": "1555679"
  },
  {
    "text": "to join our",
    "start": "1555679",
    "end": "1559200"
  },
  {
    "text": "slack channel uh number two",
    "start": "1559520",
    "end": "1562720"
  },
  {
    "text": "kubecon extend catas let me put it on",
    "start": "1562720",
    "end": "1566159"
  },
  {
    "text": "the question and answer",
    "start": "1566159",
    "end": "1571840"
  },
  {
    "text": "so i added into the question answer",
    "start": "1602000",
    "end": "1604799"
  },
  {
    "text": "section",
    "start": "1604799",
    "end": "1606240"
  },
  {
    "text": "uh and also basically for",
    "start": "1606240",
    "end": "1610799"
  },
  {
    "text": "everybody it's the slack channel number",
    "start": "1610799",
    "end": "1612799"
  },
  {
    "text": "is number two dash to",
    "start": "1612799",
    "end": "1614080"
  },
  {
    "text": "con dash exchange k dash uh please join",
    "start": "1614080",
    "end": "1617760"
  },
  {
    "text": "us there",
    "start": "1617760",
    "end": "1618640"
  },
  {
    "text": "uh if you wanna continue this",
    "start": "1618640",
    "end": "1621640"
  },
  {
    "text": "conversation",
    "start": "1621640",
    "end": "1624640"
  }
]