[
  {
    "text": "should we get started everybody all right okay before we get going I tell me",
    "start": "0",
    "end": "6569"
  },
  {
    "text": "a little about who I'm talking to here how many people are using kubernetes in their day job wow it's so different than",
    "start": "6569",
    "end": "14969"
  },
  {
    "text": "last year cool how many of you have like used a service mesh as part of that that's a",
    "start": "14969",
    "end": "22529"
  },
  {
    "text": "bunch of you how many of you Xin linker D as part of that good good good how many people have been to Seattle",
    "start": "22529",
    "end": "29250"
  },
  {
    "text": "before yeah cool we were all s who's the last conference",
    "start": "29250",
    "end": "34410"
  },
  {
    "text": "let me put it that way at the last Seattle coop con nobody won one two okay",
    "start": "34410",
    "end": "41100"
  },
  {
    "text": "three okay we had a couple but you're all newbies I wasn't here either though",
    "start": "41100",
    "end": "46860"
  },
  {
    "text": "so it's okay alright so my name is",
    "start": "46860",
    "end": "52260"
  },
  {
    "text": "Oliver Gould these are my dogs dream on Dumbo my backgrounds in production",
    "start": "52260",
    "end": "59969"
  },
  {
    "text": "operations I out of school spent some time school know what to Yahoo Yahoo for",
    "start": "59969",
    "end": "66689"
  },
  {
    "text": "those you remember what that was was a really large Internet directory and it",
    "start": "66689",
    "end": "75900"
  },
  {
    "text": "was really like 20 different companies that inquired over 15 years all in some",
    "start": "75900",
    "end": "81479"
  },
  {
    "text": "crazy bastardized infrastructure across the globe all the systems were in local",
    "start": "81479",
    "end": "87570"
  },
  {
    "text": "time which is crazy and FreeBSD two to FreeBSD nine and then we said",
    "start": "87570",
    "end": "92759"
  },
  {
    "text": "interesting Linux but that would sell to say I learned that the lit that the internet is run with duct tape that",
    "start": "92759",
    "end": "98700"
  },
  {
    "text": "there's not this like really well oiled machine out there that the perfect internet exists that we're lucky DNS",
    "start": "98700",
    "end": "104520"
  },
  {
    "text": "works at all and then from there I went to Twitter and I was really lucky to",
    "start": "104520",
    "end": "109979"
  },
  {
    "text": "start when I was kind of the second programmer in ops and I got a lot of",
    "start": "109979",
    "end": "115740"
  },
  {
    "text": "good projects we replaced the ganglion audio system with a custom-built observability the thing which is baseman",
    "start": "115740",
    "end": "121860"
  },
  {
    "text": "Cassandra Prometheus is in that same vein and I prefer using that to what we",
    "start": "121860",
    "end": "127619"
  },
  {
    "text": "built and went on to the traffic team and worked on a bunch of finagle stuff which led me to",
    "start": "127619",
    "end": "133520"
  },
  {
    "text": "the problems we wanted to solve in linker D and then I started a company with William who you some of you just",
    "start": "133520",
    "end": "139340"
  },
  {
    "text": "saw in 2015 and we've been for the last couple years working on linker D and",
    "start": "139340",
    "end": "144800"
  },
  {
    "text": "I've been kind of the creator that and one of the primary driving forces behind it though we do have a team at buoyant",
    "start": "144800",
    "end": "150890"
  },
  {
    "text": "and across the globe working on this I I have a github account and again these",
    "start": "150890",
    "end": "156530"
  },
  {
    "text": "are my very lovely dogs that's from this morning actually so what is this talk",
    "start": "156530",
    "end": "161930"
  },
  {
    "text": "what is the deep dive I have like 25 minutes or so to do a deep dive I will",
    "start": "161930",
    "end": "167030"
  },
  {
    "text": "go as deep as I can and that but what I'm not going to do is explain to you what a service mesh is or why you want to use it or any of that stuff there's a",
    "start": "167030",
    "end": "174110"
  },
  {
    "text": "lot of other talks here that can tell you that I hope I'm gonna tell you about linker D and the decisions we've been",
    "start": "174110",
    "end": "180200"
  },
  {
    "text": "made in kind of the journey that we've been goin that got us here and where we're going going forward so we started",
    "start": "180200",
    "end": "187970"
  },
  {
    "text": "we launched linker D at coop Connie you in 2016 that one the left there that",
    "start": "187970",
    "end": "195920"
  },
  {
    "text": "then about a year later we we gave it to the CNC F and that year was really",
    "start": "195920",
    "end": "201350"
  },
  {
    "text": "getting our first set of production users making them successful helping them be successful and once we had",
    "start": "201350",
    "end": "208130"
  },
  {
    "text": "really proven out that linker D was a valuable thing that people wanted to use we got more serious about the open",
    "start": "208130",
    "end": "214610"
  },
  {
    "text": "source community and donated to CN CF as a kind of investment to say that this is not a proprietary you know thing the",
    "start": "214610",
    "end": "221540"
  },
  {
    "text": "Boyne owns is doing where we want to give us the community so that you don't feel locked in to linker D in that time",
    "start": "221540",
    "end": "229700"
  },
  {
    "text": "we've had plenty of users you know these are a lot of big fancy logos but we also",
    "start": "229700",
    "end": "236450"
  },
  {
    "text": "have a lot of small little logos that aren't up here that are using this to power small ecommerce shops and banks",
    "start": "236450",
    "end": "243020"
  },
  {
    "text": "and what-have-you and it's a pretty active project we have a lot of",
    "start": "243020",
    "end": "249560"
  },
  {
    "text": "real-world users solving problems with it for who is at Kubb con in Austin last",
    "start": "249560",
    "end": "257989"
  },
  {
    "text": "year who saw my like keynote demo where I got up and tried to do a yeah so we",
    "start": "257989",
    "end": "263419"
  },
  {
    "text": "launched this project called conduit then and conduit was kind of a departure from",
    "start": "263419",
    "end": "268919"
  },
  {
    "text": "link reading we didn't port forward any of the the features of link ready one we",
    "start": "268919",
    "end": "273930"
  },
  {
    "text": "we ditch D tabs and the whole config language and everything associated he want to start new and that's why we didn't want to call it linker D we",
    "start": "273930",
    "end": "281310"
  },
  {
    "text": "wanted to call it something else so it could fail and we spent about nine months working on that as most valuable",
    "start": "281310",
    "end": "287700"
  },
  {
    "text": "Lorna's most valuable things take to build like babies and then we birthed",
    "start": "287700",
    "end": "292800"
  },
  {
    "text": "linker d2 and that was really in that nine months was to find production used",
    "start": "292800",
    "end": "298500"
  },
  {
    "text": "at people who had production poems that conduit could solve and helped him be",
    "start": "298500",
    "end": "303600"
  },
  {
    "text": "successful and once we proved it out that this is something really valuable we we gave it back to the scene CF and",
    "start": "303600",
    "end": "310110"
  },
  {
    "text": "merge it in as link ready to and we think this is the future of the project and the real hypothesis that we the",
    "start": "310110",
    "end": "316590"
  },
  {
    "text": "shift going from liquidy one delinquent to is really on these three tenants one",
    "start": "316590",
    "end": "321600"
  },
  {
    "text": "being lightweight and we've called ourselves the ultralight service mission and that's for a reason and lightweight",
    "start": "321600",
    "end": "326760"
  },
  {
    "text": "both in terms of resources their proxy takes you know less than 10 Meg's it's",
    "start": "326760",
    "end": "331830"
  },
  {
    "text": "quite small and but also lightweight in terms of cake complexity I don't want",
    "start": "331830",
    "end": "341340"
  },
  {
    "text": "you to have to go learn something to get value out of a service mesh like well I've an aside here that service mesh is",
    "start": "341340",
    "end": "347850"
  },
  {
    "text": "a pattern like the actor model you can build all sorts of different applications with the actor model they",
    "start": "347850",
    "end": "353760"
  },
  {
    "text": "all have different focuses and strengths and weaknesses with a service mesh we don't think you have to go learn some",
    "start": "353760",
    "end": "359850"
  },
  {
    "text": "big policy or compliance system to go get started we want something that's really lightweight conceptually that you",
    "start": "359850",
    "end": "365639"
  },
  {
    "text": "can reason about yourself at 3m without calling me and a big part of that is not having magic if there's a feature that",
    "start": "365639",
    "end": "372389"
  },
  {
    "text": "you don't understand that's magic and if you're on call for that no be",
    "start": "372389",
    "end": "377850"
  },
  {
    "text": "great for demo right in the conferences we have all these magic features which everyone who is in Oz at but when you go",
    "start": "377850",
    "end": "382919"
  },
  {
    "text": "to ploy that and a month later and like you don't know my phone number and you wake up with an incident how are you",
    "start": "382919",
    "end": "389130"
  },
  {
    "text": "going to figure out what's going on well if you're in a cloud provider maybe you can call your cloud s eries but a lot of",
    "start": "389130",
    "end": "394440"
  },
  {
    "text": "the customers we have need us to be able to solve these problems themselves and with us hopefully although we do you know we",
    "start": "394440",
    "end": "401499"
  },
  {
    "text": "have a bunch of support relationships and those are great but what we've learned from that is that we need to give you the ammunition and in a service",
    "start": "401499",
    "end": "407710"
  },
  {
    "text": "mesh because this is the first hop into a network the service mesh is guilty until proven innocent and that's how it",
    "start": "407710",
    "end": "413830"
  },
  {
    "text": "should be so linker D needs a ship with an alibi it needs to like you need to be able to introspect and say did you mess up or is",
    "start": "413830",
    "end": "421509"
  },
  {
    "text": "this the network or is it something else and that's really informed our strategy in terms of future development so if you",
    "start": "421509",
    "end": "427659"
  },
  {
    "text": "look at our feature list compared to others they'll say well in could e doesn't do nearly as much and that's for",
    "start": "427659",
    "end": "432699"
  },
  {
    "text": "a reason we're not adding features to linker to you that you can't do bug full-stop that is the goal of Linkwood e",
    "start": "432699",
    "end": "439479"
  },
  {
    "text": "that if you run this thing you have to be able to budget yourself and that brings us to the third point which is",
    "start": "439479",
    "end": "446020"
  },
  {
    "text": "tactical not strategic strategic things you're things you have to get the whole company on board with you have to get",
    "start": "446020",
    "end": "451150"
  },
  {
    "text": "all the architects in the room around the white board and have a consortium to decide what is the one true service mesh",
    "start": "451150",
    "end": "456939"
  },
  {
    "text": "for you know beyond corp or whatever you're at we don't think that has to be",
    "start": "456939",
    "end": "463750"
  },
  {
    "text": "the case our lincolnís designed to be tactical and there it means incremental so you can use it to solve specific",
    "start": "463750",
    "end": "469539"
  },
  {
    "text": "problems today you can install it today and it will help you and it will grow with you and you can insult to one",
    "start": "469539",
    "end": "475210"
  },
  {
    "text": "service you don't have to install to a whole cluster let alone your whole company and then you can expand from there and it doesn't get more complex as",
    "start": "475210",
    "end": "481750"
  },
  {
    "text": "you add things the value actually gets magnified as you have two more services and our that is really our goal here so",
    "start": "481750",
    "end": "491050"
  },
  {
    "text": "here's the big kind of architecture diagram of how it works we have a and actually this is already at a date this",
    "start": "491050",
    "end": "497110"
  },
  {
    "text": "is before the two one released last week the destination service and proxy IPA API have been collapsed one service so",
    "start": "497110",
    "end": "503589"
  },
  {
    "text": "we're quite small now we have a web and CLI that uses an interface which is in a",
    "start": "503589",
    "end": "509080"
  },
  {
    "text": "linker D namespace or maybe your own namespace depending we should put a couple small micro services there and we",
    "start": "509080",
    "end": "515740"
  },
  {
    "text": "also bundled Prometheus and graph on ax and that's not to replace your Prometheus or fauna and in fact we don't",
    "start": "515740",
    "end": "521768"
  },
  {
    "text": "want to do any long-term storage of time series here at all we want this to be something that lets you ask questions of",
    "start": "521769",
    "end": "528850"
  },
  {
    "text": "the proxies now people when they go to production 10 - either configure their own Prometheus's to scrape scrape from",
    "start": "528850",
    "end": "535180"
  },
  {
    "text": "errors or to scrape from the proxies directly we don't prevent any of that but this is meant again you install this",
    "start": "535180",
    "end": "541060"
  },
  {
    "text": "bundle and it's immediately useful you don't have to go build other things or configure dashboards or do any of that work and all of that modulo some of the",
    "start": "541060",
    "end": "550149"
  },
  {
    "text": "web stuff is written go we also have react and some other technologies in there but and the choice for that is to use",
    "start": "550149",
    "end": "556269"
  },
  {
    "text": "client go I've in Lincoln e1 written a kubernetes client in Scala and almost",
    "start": "556269",
    "end": "563589"
  },
  {
    "text": "well I don't know how what percentage but a large percentages of bugs and linker D with kubernetes have been",
    "start": "563589",
    "end": "568930"
  },
  {
    "text": "related to that API client and changes subtle subtle changes in the versions between releases and things like that",
    "start": "568930",
    "end": "574149"
  },
  {
    "text": "that are quite hard to debug and so our grand genius idea was well client goes perfect right everyone who's if you're",
    "start": "574149",
    "end": "582490"
  },
  {
    "text": "using kubernetes like what is in coop cuddle is client go so we should be using that and we have been and that's",
    "start": "582490",
    "end": "587980"
  },
  {
    "text": "been pretty successful though it is by no means a silver bullet hold on one second please",
    "start": "587980",
    "end": "594480"
  },
  {
    "text": "then in the data plane now we've elected to write our own proxy and rust anyone",
    "start": "595649",
    "end": "602410"
  },
  {
    "text": "here write rust anyone here wanna write rust cool yep more next year it'll be",
    "start": "602410",
    "end": "609730"
  },
  {
    "text": "way more hands I promise rust is anyway are not know what rust is",
    "start": "609730",
    "end": "615490"
  },
  {
    "text": "I thought so okay yeah so rust is a modern programming language its memory",
    "start": "615490",
    "end": "621579"
  },
  {
    "text": "safe it has a whole bunch of affordances that I'll go into at the end of the Sofia of time but our bet is that we",
    "start": "621579",
    "end": "626920"
  },
  {
    "text": "don't want to be writing native code in C or C++ in the year of our Lord 2019 we",
    "start": "626920",
    "end": "632680"
  },
  {
    "text": "want to be using modern tools that allow us to you way more effective at doing that job this all makes sense so far",
    "start": "632680",
    "end": "638860"
  },
  {
    "text": "great so I want to start and go through a quick walkthrough of how we get",
    "start": "638860",
    "end": "644770"
  },
  {
    "text": "bootstraps with linker D I'm just going to hit a bunch of technical notes as quickly as I can and then hopefully get to questions at the end if we have time",
    "start": "644770",
    "end": "652320"
  },
  {
    "text": "so the problem is you have an application and we have to add a proxy to your application how do we do that",
    "start": "652320",
    "end": "659430"
  },
  {
    "text": "well we have this linker T inject logic on the left hand here we have a bunch of",
    "start": "659430",
    "end": "665020"
  },
  {
    "text": "uninjected man we have a Koopa titties manifest with a bunch of deploys and services and demon sets whatever and it just has apps",
    "start": "665020",
    "end": "672100"
  },
  {
    "text": "and nothing special we then transform it through the magic of UNIX pipes through a link ready inject and that turns into",
    "start": "672100",
    "end": "678820"
  },
  {
    "text": "a new manifest with a proxy in it container and a proxy container in the resources that deserve those things and",
    "start": "678820",
    "end": "685360"
  },
  {
    "text": "as we heard in the last talk Ivan just developed an experimental feature to replace that link ready inject",
    "start": "685360",
    "end": "691450"
  },
  {
    "text": "command-line tool with a mutating web hook that will do this in the server in",
    "start": "691450",
    "end": "696670"
  },
  {
    "text": "the cluster directly and here we can see if there's a whole bunch of options that",
    "start": "696670",
    "end": "702070"
  },
  {
    "text": "you can configure when you're doing an injection and this is really around how do we configure the proxy in it contain",
    "start": "702070",
    "end": "707230"
  },
  {
    "text": "in the proxy unit container is really there just to configure iptables rules so all the traffic going into the pod",
    "start": "707230",
    "end": "713680"
  },
  {
    "text": "goes to the proxy and all the TCP traffic coming out of the proxy goes going out of the pod it goes through the",
    "start": "713680",
    "end": "718780"
  },
  {
    "text": "proxy this requires nedderman capabilities which is kind of a deficiency right now",
    "start": "718780",
    "end": "723880"
  },
  {
    "text": "but we have a whole bunch of interest on replacing that likely with a scene I plugin so that's some upcoming work",
    "start": "723880",
    "end": "730150"
  },
  {
    "text": "there again so this adds two pods or two",
    "start": "730150",
    "end": "735910"
  },
  {
    "text": "containers to each pod resource described and manifest an innate container which manages IP tables rules",
    "start": "735910",
    "end": "742150"
  },
  {
    "text": "and a proxy container which is this rust application deals with trends for transmitting and proxying TCP",
    "start": "742150",
    "end": "749320"
  },
  {
    "text": "connections so I want to do a quick dive through the life of requests to kind of",
    "start": "749320",
    "end": "754720"
  },
  {
    "text": "walk or help you give some context of how the proxy is built and what it does",
    "start": "754720",
    "end": "760830"
  },
  {
    "text": "so we're going to be focusing on this data flow going through the proxy and are actually I'm going to talk mostly",
    "start": "760830",
    "end": "766240"
  },
  {
    "text": "about the outbound side so going from the application out of the pod to another service or an external service",
    "start": "766240",
    "end": "772030"
  },
  {
    "text": "and there's just very slightly different logic on the inbound side but the outbound side is a little bit more complex so I want to cover that a lot of",
    "start": "772030",
    "end": "779710"
  },
  {
    "text": "hand-drawn slides that I definitely did not do in my hotel room this morning",
    "start": "779710",
    "end": "784830"
  },
  {
    "text": "so I wanted that when we accept a connection we just get something from the kubernetes network right and that's",
    "start": "786350",
    "end": "791760"
  },
  {
    "text": "coming in through the IP tables rules that we configured with the the inject command in the unit container and what",
    "start": "791760",
    "end": "799290"
  },
  {
    "text": "that gives us is we have a TCP server that accepts connections and we use the socket option original desk to determine",
    "start": "799290",
    "end": "807449"
  },
  {
    "text": "where that traffic was initially headed so if you're sending traffic to Google calm or better yet Twitter comm as you",
    "start": "807449",
    "end": "815699"
  },
  {
    "text": "go through through the pod it's going to get hit the proxy and we now are no longer sending it doesn't like the",
    "start": "815699",
    "end": "822060"
  },
  {
    "text": "destinations of proxy so we have to ask the kernel where was this socket going before we intercepted it and so we",
    "start": "822060",
    "end": "829350"
  },
  {
    "text": "maintain that information as we make our rad and decisions below we then have this TLS decoding layer and this is just",
    "start": "829350",
    "end": "836699"
  },
  {
    "text": "doing watching files on disk for certs and so in the demo we saw from sebastian",
    "start": "836699",
    "end": "841769"
  },
  {
    "text": "earlier they're just they have a CA",
    "start": "841769",
    "end": "847170"
  },
  {
    "text": "client that's just refreshing certs in the local file system the proxy just picks those up and when and right now at",
    "start": "847170",
    "end": "854430"
  },
  {
    "text": "least it'll only decrypt connections from other proxies so if you have TLS connections that are going to the proxy",
    "start": "854430",
    "end": "860100"
  },
  {
    "text": "and a proxy did not send that it'll just forward it through as normal TCP as if",
    "start": "860100",
    "end": "865290"
  },
  {
    "text": "nothing ever happened and so our philosophy there is to kind of fail open we don't want to have a big mandatory",
    "start": "865290",
    "end": "870839"
  },
  {
    "text": "thing we're all break existing applications we want this to layer in and add value wherever it can and well",
    "start": "870839",
    "end": "876510"
  },
  {
    "text": "if we can't decrypt your traffic then we can't give you stats about that in a meaningful way but at least we're not breaking it and then we have a kind of",
    "start": "876510",
    "end": "883740"
  },
  {
    "text": "pluggable layer in there called the accept stack right now that's really for transport layer metrics but you can",
    "start": "883740",
    "end": "889560"
  },
  {
    "text": "imagine that we could also add policy they're like whitelist blacklist for IPS etc and then we do protocol detection",
    "start": "889560",
    "end": "896100"
  },
  {
    "text": "and so there's no unlike linker t1 where you have routers configured for individual protocols now we're in the",
    "start": "896100",
    "end": "902040"
  },
  {
    "text": "TCP stream and we're listening for data and so we wait for some data from the",
    "start": "902040",
    "end": "907260"
  },
  {
    "text": "client and when we when we get that excuse me we know immediately whether",
    "start": "907260",
    "end": "916170"
  },
  {
    "text": "that was NH dp1 requests because we look at we",
    "start": "916170",
    "end": "921390"
  },
  {
    "text": "can read the first few bites and now it's a skew one or we know it's an HTTP to special magic header and we can turn",
    "start": "921390",
    "end": "927930"
  },
  {
    "text": "it into h2 or otherwise we say I don't know it's TCP anyone seen any problems",
    "start": "927930",
    "end": "933870"
  },
  {
    "text": "with that come on well someone guess",
    "start": "933870",
    "end": "939600"
  },
  {
    "text": "what's the problem with that all right what how that my sequel",
    "start": "939600",
    "end": "944850"
  },
  {
    "text": "protocol works yes so my sequel when a client connects to it it sends nothing",
    "start": "944850",
    "end": "950880"
  },
  {
    "text": "it's quiet I know it waits for the server to send some data before it does",
    "start": "950880",
    "end": "956130"
  },
  {
    "text": "anything which makes it a proxy like this we can't do protocol detection for those things and so one of the efficiencies right now if we go back to",
    "start": "956130",
    "end": "962040"
  },
  {
    "text": "the inject command we see that we have this skip ports here and that's a",
    "start": "962040",
    "end": "967710"
  },
  {
    "text": "necessary evil right now for us to allow you to talk to my sequel through the",
    "start": "967710",
    "end": "972930"
  },
  {
    "text": "proxy without a stern protocol section that breaks it and so if we don't do TCP",
    "start": "972930",
    "end": "982650"
  },
  {
    "text": "forwarding we shunt it all off to the HTTP routing stack so with HTTP routing",
    "start": "982650",
    "end": "992120"
  },
  {
    "text": "we take both we we decode through either h1 or h2 depending on the protocol we",
    "start": "992120",
    "end": "997200"
  },
  {
    "text": "detect but everything else in the proxy then it just gets merged in and the only difference between them in our logic is",
    "start": "997200",
    "end": "1003530"
  },
  {
    "text": "the HP version on the request metadata and you'll see why that plays them later so HP one comes in we handle it to the",
    "start": "1003530",
    "end": "1009980"
  },
  {
    "text": "same sex as hg 2 again unlikely 31 and then that immediately goes to the destination router and this is really",
    "start": "1009980",
    "end": "1016040"
  },
  {
    "text": "fundamental to how again very different from lincoln t12 how the lincoln you to proxy does routing so we use the",
    "start": "1016040",
    "end": "1022190"
  },
  {
    "text": "authority headers as specified in URI so if it's h2 there's an authority header if it's an interview one we look in",
    "start": "1022190",
    "end": "1028130"
  },
  {
    "text": "either the resource for the authority or look at the host header and if you're in some weird HB 1o situation will use that",
    "start": "1028130",
    "end": "1036020"
  },
  {
    "text": "original desk address from that socket option as the destination to route 2 and",
    "start": "1036020",
    "end": "1042579"
  },
  {
    "text": "then we have this Kanak canonicalization logic and here is what you know because",
    "start": "1042580",
    "end": "1048350"
  },
  {
    "text": "the names can go through the proxy and be relative you can have foo and food LMS and Futaba mess that service that clustered at local all going through the proxy we",
    "start": "1048350",
    "end": "1056450"
  },
  {
    "text": "want to be able to normalize that into some predictable name that we can hang policy off of them so we use DNS for",
    "start": "1056450",
    "end": "1062120"
  },
  {
    "text": "that and so we're ease up like and this is nice so any DNS policy you've set in your pod actually will just apply",
    "start": "1062120",
    "end": "1068780"
  },
  {
    "text": "natively here because we're using the same DNS server and so we do the lookup and say ok if the header foo came in the",
    "start": "1068780",
    "end": "1075050"
  },
  {
    "text": "authority foo came in I'll do a resolution for foo and whatever fully qualified domain name and resolved there",
    "start": "1075050",
    "end": "1080780"
  },
  {
    "text": "which will be food out service that cluster about local if that's a local service in my namespace we'll use that for the purposes of routing discovery",
    "start": "1080780",
    "end": "1087020"
  },
  {
    "text": "later on that makes sense you're a sleeper yes okay and so the next step",
    "start": "1087020",
    "end": "1095660"
  },
  {
    "text": "and this is a new feature into one came out last week this has been a big part of the last my last few months is",
    "start": "1095660",
    "end": "1102170"
  },
  {
    "text": "working on this stuff and so once we get that kanata ties name now we can",
    "start": "1102170",
    "end": "1107510"
  },
  {
    "text": "actually go to the control plane the proxy api service and say well what are the policies for this name food out",
    "start": "1107510",
    "end": "1113960"
  },
  {
    "text": "service to closer about local or google.com or twitter.com or anything we can go to the control plane and say do I",
    "start": "1113960",
    "end": "1119780"
  },
  {
    "text": "have policies for that and right now policies are basically you can think of it like open API swagger spec type",
    "start": "1119780",
    "end": "1126020"
  },
  {
    "text": "things and that's allows us to hydrate metrics here and response classification",
    "start": "1126020",
    "end": "1131060"
  },
  {
    "text": "response classification being how do I know whether this request should be considered a success or failure for the",
    "start": "1131060",
    "end": "1137840"
  },
  {
    "text": "purposes of success rate calculation or retries we're not we don't have retries yet but that will be in - - coming out",
    "start": "1137840",
    "end": "1144080"
  },
  {
    "text": "towards the end of January once we go through that route second there's many routes tax so you you download a bunch",
    "start": "1144080",
    "end": "1150560"
  },
  {
    "text": "of these from the control plane that's all what a G RPC watch is they're all of the API is with the control planner GRP",
    "start": "1150560",
    "end": "1156500"
  },
  {
    "text": "see all those policies are sort is one CR D in CPI and then we go to a load",
    "start": "1156500",
    "end": "1164000"
  },
  {
    "text": "balancer and that load balancer is again use that same name that authority that we've canonicalized to resolve to a set",
    "start": "1164000",
    "end": "1171740"
  },
  {
    "text": "of IP addresses and we use the kubernetes api for that rather than dns so we try to use the kubernetes api for",
    "start": "1171740",
    "end": "1178160"
  },
  {
    "text": "that rather than dns so that we can get a whole bunch of kubernetes metadata and so with the proxy api service does here",
    "start": "1178160",
    "end": "1183830"
  },
  {
    "text": "it says well I'll do a lookup for the seven of em points but I'll also once I get to psyches I'll say this IP is actually in",
    "start": "1183830",
    "end": "1190520"
  },
  {
    "text": "this namespace in this deploy in this replica set etc and we can actually take all of those labels from kubernetes",
    "start": "1190520",
    "end": "1196130"
  },
  {
    "text": "throw them back through that response and now we hydrate all the metrics that come through that path get all of those",
    "start": "1196130",
    "end": "1203120"
  },
  {
    "text": "labels annotated so when you go from atheists you actually have all of your kubernetes resources in the labels and",
    "start": "1203120",
    "end": "1209180"
  },
  {
    "text": "dimensions so you can ask questions like what is the success rate in this namespace and that just Falls up the",
    "start": "1209180",
    "end": "1215120"
  },
  {
    "text": "previous model there's nothing special we have to do other than add these labels from the proxy API the the proxy",
    "start": "1215120",
    "end": "1221120"
  },
  {
    "text": "itself knows nothing about kubernetes at this point it's just dealing with names and labels and very generic things so we",
    "start": "1221120",
    "end": "1228260"
  },
  {
    "text": "get that and we also get a little bit of extra metadata there including is there a proxy installed on the other end of",
    "start": "1228260",
    "end": "1233510"
  },
  {
    "text": "this on the other pod here if there's a proxy installed there well we might be able to do TLS upgrading and we can also",
    "start": "1233510",
    "end": "1239390"
  },
  {
    "text": "do protocol upgrading which I'll get to in a second if none of that exists though and we don't necessarily go to",
    "start": "1239390",
    "end": "1245540"
  },
  {
    "text": "the proxy API for all domains it's only white listed for service that cluster don't local right now that gets configurable but if that's not there",
    "start": "1245540",
    "end": "1254990"
  },
  {
    "text": "then we'll fall back to Venus again to not break anything and we'll do load balancing based on that as well which is still better than ku proxy will do will",
    "start": "1254990",
    "end": "1261620"
  },
  {
    "text": "do requester we're low daunting and so that means we measure the latencies for each request the proxy sends to each",
    "start": "1261620",
    "end": "1268580"
  },
  {
    "text": "endpoint we measure the latency from the time the request is sent until the first byte comes back it's not the headers the",
    "start": "1268580",
    "end": "1274040"
  },
  {
    "text": "first byte and the payload and that lets us actually get really good requests to our load balancing using the peak um out",
    "start": "1274040",
    "end": "1279830"
  },
  {
    "text": "algorithm which is very similar to what's in Lincoln e1 though kind of thing Kevin we may have improved them a",
    "start": "1279830",
    "end": "1285440"
  },
  {
    "text": "little bit but so they again we can resolve names to DNS to get a set of ip's back and load balance over them",
    "start": "1285440",
    "end": "1291530"
  },
  {
    "text": "even to non-korean these resources okay and then for each end point that we get",
    "start": "1291530",
    "end": "1298610"
  },
  {
    "text": "back from that thing we have another set of policies and so we the end point is",
    "start": "1298610",
    "end": "1304970"
  },
  {
    "text": "the IP whether we can HQ upgrade whether there's TLS and again that set of metric labels and within there we have another",
    "start": "1304970",
    "end": "1311090"
  },
  {
    "text": "TLS watching use system and that's if this endpoint supports the proxy TLS and there are certificate credentials local",
    "start": "1311090",
    "end": "1319000"
  },
  {
    "text": "then we will the rest of the below this stack will be aware of that TLS configuration within that is a metric",
    "start": "1319000",
    "end": "1325540"
  },
  {
    "text": "system and so we're recording you know request totals response total latency etc for every request and then",
    "start": "1325540",
    "end": "1333730"
  },
  {
    "text": "we have this concept of cap and tap here we have a server that comes from is the",
    "start": "1333730",
    "end": "1339040"
  },
  {
    "text": "proxy is serving a gr PC port so is a gr PC server and that control plane will connect into the proxy and say I want I",
    "start": "1339040",
    "end": "1347050"
  },
  {
    "text": "want a hundred requests that match these criteria and that might be to this Authority or with this path or this",
    "start": "1347050",
    "end": "1353730"
  },
  {
    "text": "method or some combination thereof or everything but this method or but this destination and so this gives us ability",
    "start": "1353730",
    "end": "1360190"
  },
  {
    "text": "to do kind of ad hoc introspection of traffic as it's running right now this is really limited to the metadata about",
    "start": "1360190",
    "end": "1366790"
  },
  {
    "text": "the routing but as Williams said before at the point we after the last release",
    "start": "1366790",
    "end": "1372160"
  },
  {
    "text": "the proxy little place for adding payloads and arbitrary data there is not really technically difficult it's mostly",
    "start": "1372160",
    "end": "1377710"
  },
  {
    "text": "aux problem that I really want to solve the next few months or I really want you to help me solve the next few months",
    "start": "1377710",
    "end": "1383880"
  },
  {
    "text": "maybe okay anyway from there we we also",
    "start": "1383880",
    "end": "1389110"
  },
  {
    "text": "we get this information back from the cluster from the the communities API that are from the approxi",
    "start": "1389110",
    "end": "1395350"
  },
  {
    "text": "that tells us whether there's a proxy running out of the other side if there is a proxy other side well we can do",
    "start": "1395350",
    "end": "1401530"
  },
  {
    "text": "HTTP to upgrading only in that proxy only to proxy proxy so your application doesn't have to speak HP - we all have",
    "start": "1401530",
    "end": "1408400"
  },
  {
    "text": "one multiplex connection between proxies at which in a TLS world gives you a lot",
    "start": "1408400",
    "end": "1413470"
  },
  {
    "text": "of our metro station of costs so you're not reestablishing connections for every request we can just trunk this all",
    "start": "1413470",
    "end": "1419520"
  },
  {
    "text": "safely and efficiently and then from there we were to say based on all these",
    "start": "1419520",
    "end": "1425170"
  },
  {
    "text": "decisions we've made is this go out an h1 client or an h2 client so we can really do protocol upgrading and",
    "start": "1425170",
    "end": "1430390"
  },
  {
    "text": "downgrading with some copy ups just to the proxy configuration okay and now for",
    "start": "1430390",
    "end": "1439360"
  },
  {
    "text": "the fun part of the talk I want to talk a little bit briefly about our use of rust and how and why and hopefully be",
    "start": "1439360",
    "end": "1447910"
  },
  {
    "text": "able to get some impressions at the end so number one strong typing this might",
    "start": "1447910",
    "end": "1452950"
  },
  {
    "text": "look like a bunch of gobbledygook and when I got started with rust just like really hurt my head",
    "start": "1452950",
    "end": "1458350"
  },
  {
    "text": "but now I've learned to love this this is a beautiful explanation of a contract and this is actually the metric service",
    "start": "1458350",
    "end": "1464410"
  },
  {
    "text": "that we're using and it is totally type safe and memory safe and all these things and generic over the types of",
    "start": "1464410",
    "end": "1471810"
  },
  {
    "text": "modules underneath the service is underneath it and so if anyone's written finagle before Georgie this might look",
    "start": "1471810",
    "end": "1477400"
  },
  {
    "text": "really familiar though a little bit different and this this is super",
    "start": "1477400",
    "end": "1484720"
  },
  {
    "text": "powerful I can't really explain how powerful this is but the point here is",
    "start": "1484720",
    "end": "1490120"
  },
  {
    "text": "we're able to build region arrack modules so the metrics model module we can test totally independently of the",
    "start": "1490120",
    "end": "1495970"
  },
  {
    "text": "proxy in fact we use it in multiple places in the proxy so this exists modules used in the routing layer where",
    "start": "1495970",
    "end": "1502330"
  },
  {
    "text": "we have these per metrics and also in the endpoints layer and if we want to add other scopes and metrics we can just",
    "start": "1502330",
    "end": "1508120"
  },
  {
    "text": "copy well not copy and paste the code instantiate new instances of this module elsewhere and this type of modularity is",
    "start": "1508120",
    "end": "1515140"
  },
  {
    "text": "super powerful when building modular correct systems you want these contracts",
    "start": "1515140",
    "end": "1520810"
  },
  {
    "text": "and force that mean that changes between modules can affect each other or that those changes have to be documented well",
    "start": "1520810",
    "end": "1526530"
  },
  {
    "text": "and the other kind of really crazy thing or a trust is the resource acquisition",
    "start": "1526530",
    "end": "1533290"
  },
  {
    "text": "is an is initialization kind of mantra ra íí- and what that means is that we",
    "start": "1533290",
    "end": "1539170"
  },
  {
    "text": "can rely on the LLVM to manage references between modules and so for",
    "start": "1539170",
    "end": "1546880"
  },
  {
    "text": "instance when we do sir service discoveries through the proxy we have a service that's that's doing the lookup",
    "start": "1546880",
    "end": "1552910"
  },
  {
    "text": "and that actually goes and send some requests to the API and they'll have a stream open that's watching the request",
    "start": "1552910",
    "end": "1558610"
  },
  {
    "text": "to the API and if this service is to be deleted say it falls out of the cache and we don't need it anymore to idle",
    "start": "1558610",
    "end": "1564970"
  },
  {
    "text": "times out well all of that can just be garbage collected without having to do a real garbage collector and so just by",
    "start": "1564970",
    "end": "1572200"
  },
  {
    "text": "dropping their references in the listener everything else can just be dropped for free if you're doing this",
    "start": "1572200",
    "end": "1577240"
  },
  {
    "text": "correctly and so here is in the metric system where when the request body so when the request is done",
    "start": "1577240",
    "end": "1584810"
  },
  {
    "text": "but when the the the reader of their sorry the response when the reader of the response is done processing it drops",
    "start": "1584810",
    "end": "1590870"
  },
  {
    "text": "the object and LLVM will say okay when this object drops we have to record latency here so this is kind of similar",
    "start": "1590870",
    "end": "1598010"
  },
  {
    "text": "to finalize errs and in other languages but rusts primitives here and assurances and like",
    "start": "1598010",
    "end": "1605090"
  },
  {
    "text": "the the model here is really compelling it and I know I'm not doing it justice here but I encourage you all if you're",
    "start": "1605090",
    "end": "1613220"
  },
  {
    "text": "interested in like low-level system for a girl mid-level system programming to to go give us a spin it's been really good and",
    "start": "1613220",
    "end": "1619820"
  },
  {
    "text": "we've we've built a lot of kind of core libraries here so everything from the hiv-2 implementation is a native",
    "start": "1619820",
    "end": "1626360"
  },
  {
    "text": "imitation rus that we wrote as is the g RPC implementation which so now you have contributors from google working on that",
    "start": "1626360",
    "end": "1632740"
  },
  {
    "text": "and the load balancer we've written there and the router we've written there and the circuit breaking is being added",
    "start": "1632740",
    "end": "1639020"
  },
  {
    "text": "there so there's actually a big framework of components and libraries that you can go use to build your own",
    "start": "1639020",
    "end": "1645230"
  },
  {
    "text": "proxies if you want to but I hope you go build libraries there to help us make link could be better that'd be even better but the point is there's a whole",
    "start": "1645230",
    "end": "1651980"
  },
  {
    "text": "ecosystem that underlies linker D that is being used at other notable companies like Amazon and Dropbox they're building",
    "start": "1651980",
    "end": "1658280"
  },
  {
    "text": "on the same stack that link you to use both on okay and so coming up we're",
    "start": "1658280",
    "end": "1668000"
  },
  {
    "text": "really even continued investment service profiles this is a new concept who's kind of covered in the last session but",
    "start": "1668000",
    "end": "1674150"
  },
  {
    "text": "service profiles are the way that we will hang policy office services and that starts with just route definitions",
    "start": "1674150",
    "end": "1679910"
  },
  {
    "text": "and being able to describe endpoints and and different API structures but with that the next step will be setting",
    "start": "1679910",
    "end": "1685700"
  },
  {
    "text": "retries and latency slows on those routes so the uploading a photo endpoint",
    "start": "1685700",
    "end": "1691820"
  },
  {
    "text": "is gonna have a different retry policy and a different timeout policy than the download a tweet endpoint right and we",
    "start": "1691820",
    "end": "1699590"
  },
  {
    "text": "have to be able to describe this thing so the descriptions just formed into one and the policies will start to land",
    "start": "1699590",
    "end": "1705650"
  },
  {
    "text": "following that including rate limiting and and I think probably Canaries will happen before really winning but another",
    "start": "1705650",
    "end": "1712250"
  },
  {
    "text": "big initiative right now as I mentioned is dropping the Nedim in require so that you don't have to grant all of",
    "start": "1712250",
    "end": "1718909"
  },
  {
    "text": "your pods and editing capabilities and hopefully just have that as a cluster or owner automatic injection is ready",
    "start": "1718909",
    "end": "1727580"
  },
  {
    "text": "people are using an Impreza know thanks will and Ivan and I expect there's a few more",
    "start": "1727580",
    "end": "1734839"
  },
  {
    "text": "kind of UI tweaks we want to do before we call it stable but I'd expect that in a January time frame I hope Ivan yeah really come get",
    "start": "1734839",
    "end": "1742879"
  },
  {
    "text": "involved and help us make that good again the Diagnostics are really core",
    "start": "1742879",
    "end": "1748999"
  },
  {
    "text": "and key to what we're doing here and if it has to be double and one of the problems I think in the proxy is the",
    "start": "1748999",
    "end": "1754460"
  },
  {
    "text": "logs are kind of a mess just because we have a whole bunch of libraries all",
    "start": "1754460",
    "end": "1759499"
  },
  {
    "text": "logging different things and getting the full firehose of that can be quite hard to debug and so we're actually building",
    "start": "1759499",
    "end": "1766009"
  },
  {
    "text": "a into the core networking libraries all the way down as far low as we can a tracing system to do structured logging",
    "start": "1766009",
    "end": "1774919"
  },
  {
    "text": "it's that allow us to subscribe to events and actually have know the structure so I can say for requests to",
    "start": "1774919",
    "end": "1780289"
  },
  {
    "text": "this pod show me all the logs and I can get really structured data about just that stream in that connection without",
    "start": "1780289",
    "end": "1786589"
  },
  {
    "text": "having all the other things and will be able to tune that turn that on and off at runtime from the control plane so",
    "start": "1786589",
    "end": "1793249"
  },
  {
    "text": "that you can debug this fear yourself or you can give us really good bug reports another thing I think that's pretty easy",
    "start": "1793249",
    "end": "1799789"
  },
  {
    "text": "and I would encourage a contributor get involved here is that since we're using Prometheus and we have a control plane",
    "start": "1799789",
    "end": "1805219"
  },
  {
    "text": "and Prometheus alerts are just Prometheus queries what we're really looking to do is build a library of",
    "start": "1805219",
    "end": "1811789"
  },
  {
    "text": "alerts that we should have on the control plane itself or on common aspects of the data plane so that if you want to point alert manager our",
    "start": "1811789",
    "end": "1817909"
  },
  {
    "text": "Prometheus instance you can get alerts for free about lease the health of the",
    "start": "1817909",
    "end": "1822950"
  },
  {
    "text": "control plane itself if you don't have that already but we think it should be pretty easy to have out-of-the-box",
    "start": "1822950",
    "end": "1828769"
  },
  {
    "text": "things like that of is link ready healthy again so that we come with our",
    "start": "1828769",
    "end": "1834259"
  },
  {
    "text": "own alibi so you don't have to do the murder mystery thing and one of the things that is a little bit of a science",
    "start": "1834259",
    "end": "1840559"
  },
  {
    "text": "project that we're starting to work on is deterministic resource consumption and what I mean",
    "start": "1840559",
    "end": "1845680"
  },
  {
    "text": "that is I want you as a service owner to say to really have a trade-off between",
    "start": "1845680",
    "end": "1850720"
  },
  {
    "text": "latency and memory consumption and that is the trade-off of especially when you're dealing with how they concurrent workloads you can throw more memory at",
    "start": "1850720",
    "end": "1857230"
  },
  {
    "text": "the proxy and it'll be able to way more buffering and way more concurrent work and that's okay but that comes at the cost of memory write a book we can",
    "start": "1857230",
    "end": "1864730"
  },
  {
    "text": "manage latency or you can say well io don't want this proxy to take more than 10 Meg's and let the latency be damned",
    "start": "1864730",
    "end": "1872800"
  },
  {
    "text": "right we want to have back pressure there in a really good way and so we have a bunch of the fundamentals are",
    "start": "1872800",
    "end": "1878410"
  },
  {
    "text": "moving there things like having a channel implementation if you're really running out the details we have a multi",
    "start": "1878410",
    "end": "1883960"
  },
  {
    "text": "producer single consumer chat elephant ation right now it allocates more than it should and so we're really stripping",
    "start": "1883960",
    "end": "1889930"
  },
  {
    "text": "allocations out of that so we can be very predictable in terms of these things that I think will be get to the point where there is a mathematical of",
    "start": "1889930",
    "end": "1896710"
  },
  {
    "text": "an easy mathematical formula to determine the resource consumption of a proxy base no latency target and I hope",
    "start": "1896710",
    "end": "1903340"
  },
  {
    "text": "we can do that this year okay finally I add them up here told me",
    "start": "1903340",
    "end": "1908920"
  },
  {
    "text": "I have to tell you all that we're hiring but we're working about you really cool stuff we're working on the rest proxy",
    "start": "1908920",
    "end": "1916030"
  },
  {
    "text": "we're hiring for the control plane and the UI we just want people who really",
    "start": "1916030",
    "end": "1921640"
  },
  {
    "text": "want to work on this stuff so if you really want to work on the stuff come to talk to this guy up here afterwards we",
    "start": "1921640",
    "end": "1928390"
  },
  {
    "text": "have a website with a bunch of Docs I actually saw some of you reading the docs during last talk that's pretty cool",
    "start": "1928390",
    "end": "1933460"
  },
  {
    "text": "and we have a slack where you can come chat with us and there's again a pretty active community there are people",
    "start": "1933460",
    "end": "1938770"
  },
  {
    "text": "willing to help who don't all work a boy and then we a bunch of github repos and so the linker D org has where Lincoln",
    "start": "1938770",
    "end": "1946090"
  },
  {
    "text": "you wanna link 82 and only 52 proxy are housed Hyperion is the HTTP library or",
    "start": "1946090",
    "end": "1951910"
  },
  {
    "text": "hyper is the HTTP library that's kind of the rust of factory HTTP library the author of that works at buoyant and",
    "start": "1951910",
    "end": "1958090"
  },
  {
    "text": "we're really tightly integrating that into linker D lincolnís built on hyper and tokyo tokyo is networking",
    "start": "1958090",
    "end": "1964390"
  },
  {
    "text": "asynchronous networking library and rust you can think of it similar to Neddie you Java folks or I don't know what the",
    "start": "1964390",
    "end": "1970660"
  },
  {
    "text": "other equivalents are Lib Eevee I guess and Tower is our finagle replacement and",
    "start": "1970660",
    "end": "1977080"
  },
  {
    "text": "rust and so Tower is a service abstraction this is a bit of load balancer lives this is where the retrial was live this",
    "start": "1977080",
    "end": "1982419"
  },
  {
    "text": "is where the rate limiters live and so this is a bunch of reusable components that you can go build web services or",
    "start": "1982419",
    "end": "1988379"
  },
  {
    "text": "proxies or whatever you want and all of this like this is all investment the point has made in the open-source",
    "start": "1988379",
    "end": "1994809"
  },
  {
    "text": "community on the core primitives under Liberty to that again are used in a way more places than liquidity right now",
    "start": "1994809",
    "end": "2001549"
  },
  {
    "text": "like the Dropbox client I believe desktop client finally I have a Twitter",
    "start": "2001549",
    "end": "2007289"
  },
  {
    "text": "account it's pretty bad don't follow it anyway thank you very much I'm happy to",
    "start": "2007289",
    "end": "2012629"
  },
  {
    "text": "answer questions if I still have time I have no idea what time it is I have five minutes for questions and thank you and",
    "start": "2012629",
    "end": "2024690"
  },
  {
    "text": "Adam here we'll just touch the mic to those discussions you pick them I'll",
    "start": "2024690",
    "end": "2031349"
  },
  {
    "text": "I'll knock them down yeah are there any",
    "start": "2031349",
    "end": "2041849"
  },
  {
    "text": "scaling considerations the the knobs we need to twist or whatever yes are there",
    "start": "2041849",
    "end": "2048329"
  },
  {
    "text": "any scaling considerations right now the proxy is not actually multi-core Asha said this right we only have one tour",
    "start": "2048329",
    "end": "2055169"
  },
  {
    "text": "for proxying and an admin core and so you will hit some limit there and",
    "start": "2055169",
    "end": "2061079"
  },
  {
    "text": "especially with low memory in terms of how much concurrency you can get through the single proxy there's some work going",
    "start": "2061079",
    "end": "2066628"
  },
  {
    "text": "on right now I think again q1 time frame will be all scaled it up and once we can scale it up we'll start to tackle",
    "start": "2066629",
    "end": "2072388"
  },
  {
    "text": "ingress use cases and things like that there than that please find some bugs for me limit any way to know if we're",
    "start": "2072389",
    "end": "2082260"
  },
  {
    "text": "gonna hit those limits before we try it that's a good question I think would be a crush nickens currency in terms of the",
    "start": "2082260",
    "end": "2090809"
  },
  {
    "text": "number of requests being sent through the proxy at any one time not open",
    "start": "2090809",
    "end": "2096868"
  },
  {
    "text": "streams but concurrency we talked after I think there's some red there's some",
    "start": "2096869",
    "end": "2102329"
  },
  {
    "text": "easy red line testing stuff we could build or work on there that would make it easier to answer but it's not there",
    "start": "2102329",
    "end": "2108089"
  },
  {
    "text": "immediately yet",
    "start": "2108089",
    "end": "2110839"
  },
  {
    "text": "I was just curious if you saw any value in decoupling the control plane room from the data plane so that you could",
    "start": "2116570",
    "end": "2122990"
  },
  {
    "text": "for instance use the linker D control plane with envoy or the sto control",
    "start": "2122990",
    "end": "2128960"
  },
  {
    "text": "plane with the linker D data plane or if you think they're always kind of like be bundled together yeah so we like I think",
    "start": "2128960",
    "end": "2137600"
  },
  {
    "text": "that'd be okay all right I think if other proxies want to implement our API is that be fine we didn't really want to",
    "start": "2137600",
    "end": "2142970"
  },
  {
    "text": "participate in the place where we're gonna have to go like standardized API is to innovate we're a start-up and not",
    "start": "2142970",
    "end": "2148970"
  },
  {
    "text": "IBM and so we want to be able to iterate really quickly and that means that we can make changes in the proxy and in the",
    "start": "2148970",
    "end": "2155630"
  },
  {
    "text": "control plane and the same version and just make those together and so we like that coupling that but it's they are",
    "start": "2155630",
    "end": "2162800"
  },
  {
    "text": "decoupled and that there's just a G RPC interface between the control plane and proxy so it's not really that hard to go",
    "start": "2162800",
    "end": "2168860"
  },
  {
    "text": "write a new control plane for the proxy that maybe is an adapter to those other control planes that's just not really a priority for what I'm doing right now a",
    "start": "2168860",
    "end": "2175070"
  },
  {
    "text": "good question thank you is there a multi",
    "start": "2175070",
    "end": "2182870"
  },
  {
    "text": "cluster story for cross custard ServiceMaster that's a great question I so not yet but a federation is in",
    "start": "2182870",
    "end": "2191000"
  },
  {
    "text": "general a big problem you want to tackle that should I build my last slide and so",
    "start": "2191000",
    "end": "2196070"
  },
  {
    "text": "because we support a single namespace in stall where a controller can be installed in a single namespace or for just a subset of a cluster the",
    "start": "2196070",
    "end": "2202340"
  },
  {
    "text": "Federation between namespaces is the same thing as federation between clusters to some degree and so our plans",
    "start": "2202340",
    "end": "2208940"
  },
  {
    "text": "there to really nail the identity model and make sure we get the mutual tol story bailed and then once we have that",
    "start": "2208940",
    "end": "2214070"
  },
  {
    "text": "we'll expand outside the cluster but yeah definitely a 2019 thing and we have",
    "start": "2214070",
    "end": "2219260"
  },
  {
    "text": "an issue open on it definitely comment on it or give it a thumbs up or whatever that lets us know you care about it and",
    "start": "2219260",
    "end": "2225560"
  },
  {
    "text": "things a question up here Adam",
    "start": "2225560",
    "end": "2228760"
  },
  {
    "text": "yeah come on hurry up hey um so I have",
    "start": "2231819",
    "end": "2240349"
  },
  {
    "text": "two questions oh yeah so the first one has to do with",
    "start": "2240349",
    "end": "2245539"
  },
  {
    "text": "the service to service authentication so what's available in lickity for that so right now link video out of the box",
    "start": "2245539",
    "end": "2252079"
  },
  {
    "text": "says this optional TLS module where it's not doing mutual TLS but it's doing the",
    "start": "2252079",
    "end": "2258049"
  },
  {
    "text": "server-side certificates and it's automatic evasion so you don't have to worry about it or anything like that there was a demo in the last talk where",
    "start": "2258049",
    "end": "2264019"
  },
  {
    "text": "we a step is building an other CA that can do this as well and that will be the mutual T loss story I think none of the",
    "start": "2264019",
    "end": "2270410"
  },
  {
    "text": "authorization stuff in terms of Ackles is really there yet but our you know identity first and then we can start to",
    "start": "2270410",
    "end": "2275990"
  },
  {
    "text": "sell those higher-order problems gotcha and and on that is there a way to kind of like perhaps plug in other",
    "start": "2275990",
    "end": "2283519"
  },
  {
    "text": "authentication strategies that's a really good question people I please",
    "start": "2283519",
    "end": "2289099"
  },
  {
    "text": "open an issue on the link ready to repo they're like you know this is other people ask me at this conference about",
    "start": "2289099",
    "end": "2294410"
  },
  {
    "text": "that yeah and we I just want these forums where other people can go add to that so it's not there yet but like it's if the community wants it and people",
    "start": "2294410",
    "end": "2301190"
  },
  {
    "text": "will use it if we build it it'll get built cool okay awesome so the last question is to do three questions",
    "start": "2301190",
    "end": "2308380"
  },
  {
    "text": "it's to do with protocols right yeah are you saying that you essentially have a mechanism that allows you to kind of",
    "start": "2308380",
    "end": "2314930"
  },
  {
    "text": "detect what protocol were you talking so then you use the appropriate one yeah but I suppose at the moment is TCP and",
    "start": "2314930",
    "end": "2322339"
  },
  {
    "text": "HTTP I think you said yeah all right is any intention or any any you have any",
    "start": "2322339",
    "end": "2328849"
  },
  {
    "text": "intention to add anything beyond that so you mentioned my sequel for example right so I'm familiar with other proxies that like pre not even preemptively they",
    "start": "2328849",
    "end": "2337359"
  },
  {
    "text": "specifically say that like a particular port is going to speak let's say my sequel right so you can like you can do",
    "start": "2337359",
    "end": "2343759"
  },
  {
    "text": "a lot of cool stuff if you know stuff ahead of time yeah is there any intention to kind of put this into like a D yes with the caveat so you know in",
    "start": "2343759",
    "end": "2352430"
  },
  {
    "text": "the kubernetes like environment or distributed environment port reservations are not really a real thing",
    "start": "2352430",
    "end": "2357920"
  },
  {
    "text": "and so you can't like if someone was like Oh influx TV runs an ad servus speaks first so like you should",
    "start": "2357920",
    "end": "2363979"
  },
  {
    "text": "whitelist that and like well our proxy api around the net port - so what do you want me to do but I definitely think",
    "start": "2363979",
    "end": "2372349"
  },
  {
    "text": "that will we do have a set of default well-known protocols that we will just pass there is TCP without configuration",
    "start": "2372349",
    "end": "2378379"
  },
  {
    "text": "today and as far as being aware of those other protocols it really depends on how that protocol works some protocols",
    "start": "2378379",
    "end": "2384169"
  },
  {
    "text": "really work well with middlemen like HTTP their protocols like my sequel Allah so because they're very stateful",
    "start": "2384169",
    "end": "2391219"
  },
  {
    "text": "in terms of the protocol and so if there are specific protocols that you'd like to get and really what we get there is",
    "start": "2391219",
    "end": "2397669"
  },
  {
    "text": "the stats and the routing right and so if there's like like it Redis would probably be a fairly simple one to add",
    "start": "2397669",
    "end": "2403789"
  },
  {
    "text": "as far as I understand with the protocol and so those are not hard to add once we",
    "start": "2403789",
    "end": "2408859"
  },
  {
    "text": "have a codec and so it's really just a matter of building the client codec for those things so if you want to write some rust cooler for ya so specifically",
    "start": "2408859",
    "end": "2421789"
  },
  {
    "text": "the reason why I'm asking about protocols is because it kind of ties in to what I was asking in the earlier question about authentication right so",
    "start": "2421789",
    "end": "2428449"
  },
  {
    "text": "you have something like my sequel which clearly has like an authentication strategy which like you're not gonna do",
    "start": "2428449",
    "end": "2434779"
  },
  {
    "text": "mutual TLS you you have to provide credentials so then I was wondering if there's like an integration point in",
    "start": "2434779",
    "end": "2440179"
  },
  {
    "text": "link D where you can essentially have to say well I just want link a deed to kind",
    "start": "2440179",
    "end": "2446659"
  },
  {
    "text": "of do the handshake for me and then shuttle bites it off - right yeah it's a pretty interesting use case it's",
    "start": "2446659",
    "end": "2452209"
  },
  {
    "text": "definitely not there yet and but I I would be pretty nice to have that conversation Kolak and yeah let's all get for that",
    "start": "2452209",
    "end": "2460879"
  },
  {
    "text": "yeah thank you all right if we're not getting kicked out all in",
    "start": "2460879",
    "end": "2466999"
  },
  {
    "text": "today one more and then we gotta go hey so quick question this is more about go versus Ross panada at a technical",
    "start": "2466999",
    "end": "2472909"
  },
  {
    "text": "level more community levels yeah have you found that you know switching to rust for or starting the proxy and rust",
    "start": "2472909",
    "end": "2479179"
  },
  {
    "text": "in terms of like open-source contributors like have you found that they might have had like a harder time",
    "start": "2479179",
    "end": "2485449"
  },
  {
    "text": "just coming up with rust and the ramp up time for that yeah I know has gotten better about especially in 2018 but just curious",
    "start": "2485449",
    "end": "2491869"
  },
  {
    "text": "about yeah and the very fact that we've had to build all of these libraries and rust is kind of a testament to the fact",
    "start": "2491869",
    "end": "2498230"
  },
  {
    "text": "that Yukos was not there and I think for a lot of people want to go build web frameworks it's just really just not there yet and that's okay we have had a",
    "start": "2498230",
    "end": "2505970"
  },
  {
    "text": "where we have seen community interaction in rust is the community of like serious production users who want to build",
    "start": "2505970",
    "end": "2512510"
  },
  {
    "text": "things like systems people at Amazon and Dropbox etc MIT we have a bunch of",
    "start": "2512510",
    "end": "2517849"
  },
  {
    "text": "community there that's we're really working on Tower in Tokyo etc less than",
    "start": "2517849",
    "end": "2523010"
  },
  {
    "text": "the proxy so we have not had a lot of external contribution in the proxy and that's actually been okay because it's been changing really rapidly I expected",
    "start": "2523010",
    "end": "2529940"
  },
  {
    "text": "in 2019 I really want them to change so yeah it's been way easier for people to get in and contribute to the NGO side",
    "start": "2529940",
    "end": "2536380"
  },
  {
    "text": "but part of our investment in rust is to raise the bar so everyone else can get there too but we were definitely believe",
    "start": "2536380",
    "end": "2543799"
  },
  {
    "text": "that like rust is a good bet I have no reservations about that but all right I will be it we boy another booth",
    "start": "2543799",
    "end": "2550250"
  },
  {
    "text": "downstairs come say hi I'm happy to talk thanks again",
    "start": "2550250",
    "end": "2555069"
  }
]