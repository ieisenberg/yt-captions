[
  {
    "text": "uh so yeah uh welcome everyone and today we will talk about how to improve a long",
    "start": "179",
    "end": "5819"
  },
  {
    "text": "home based on spdk so I'm David Koh uh from Susan",
    "start": "5819",
    "end": "12420"
  },
  {
    "text": "I'm Keith Lucas from Oracle labs so we just guessed up",
    "start": "12420",
    "end": "19800"
  },
  {
    "text": "yeah probably someone uh in this room probably did not use long before so we",
    "start": "19800",
    "end": "25740"
  },
  {
    "text": "have a one part we'll talk about what is a long home and what a longhorn",
    "start": "25740",
    "end": "30980"
  },
  {
    "text": "walks and how to try to challenge long has right now and next we will talk",
    "start": "30980",
    "end": "36899"
  },
  {
    "text": "about based on the challenging we are facing right now how we leverage spdk in the future and how it really works and",
    "start": "36899",
    "end": "44940"
  },
  {
    "text": "what benefit you will be tagged from spdk and lastly we will talk about our",
    "start": "44940",
    "end": "50820"
  },
  {
    "text": "Benchmark we have right now to share with everyone and also some areas want",
    "start": "50820",
    "end": "57300"
  },
  {
    "text": "to improve in the future okay so uh long uh long is a CNC project",
    "start": "57300",
    "end": "64619"
  },
  {
    "text": "incubating uh project right now and he's a focused on the persistent voting stuff",
    "start": "64619",
    "end": "70020"
  },
  {
    "text": "so it's highly available and software-defined uh persistent bus storage based on kubernetes and also",
    "start": "70020",
    "end": "77520"
  },
  {
    "text": "wrong for kubernetes so all the things we just leverage on the kubernetes stuff so he's quite lightweight reliable and",
    "start": "77520",
    "end": "85140"
  },
  {
    "text": "easy to use what I say that because we based on the user experience and we don't have any external dependence",
    "start": "85140",
    "end": "92220"
  },
  {
    "text": "actually so take example we don't have any external database or stuff we just",
    "start": "92220",
    "end": "97439"
  },
  {
    "text": "leverage the kubernetes resource like API resource so this is what we have so",
    "start": "97439",
    "end": "102900"
  },
  {
    "text": "deploy logo is quite simple and also we support all the persistent voting and",
    "start": "102900",
    "end": "109020"
  },
  {
    "text": "with the different type of volume modes SS modes rewrite many rewrite only as a",
    "start": "109020",
    "end": "116280"
  },
  {
    "text": "multimoice bar device Software System L of course if you use a long haul you",
    "start": "116280",
    "end": "122100"
  },
  {
    "text": "will question about rewrite many is it when you will get to uh General Virgo so",
    "start": "122100",
    "end": "128399"
  },
  {
    "text": "you can check it tomorrow we have another session a maintenance track talk about local roadmap",
    "start": "128399",
    "end": "134400"
  },
  {
    "text": "and also it's a storage agnostic so let me he will be easy to deploy based on",
    "start": "134400",
    "end": "140340"
  },
  {
    "text": "the host the whole file system any five stands for the specifier because uh",
    "start": "140340",
    "end": "145920"
  },
  {
    "text": "Longhorns are used the sports file for his simple Vision capability so uh here",
    "start": "145920",
    "end": "151800"
  },
  {
    "text": "we mentioned the esd4 and xfs is actually verified by longontin so you",
    "start": "151800",
    "end": "158220"
  },
  {
    "text": "can use that directly and also not just in cluster we have inclusive snapshot",
    "start": "158220",
    "end": "163500"
  },
  {
    "text": "but also support external backup and restore so uh different type of backup",
    "start": "163500",
    "end": "169920"
  },
  {
    "text": "Target we support right now is NFS and S3 compatible API the pickup Target and",
    "start": "169920",
    "end": "176879"
  },
  {
    "text": "as I say the kubernetes I will use the kubernetes resource so kubernetes design patency while we adopt our basically",
    "start": "176879",
    "end": "184440"
  },
  {
    "text": "control patterns and customer resource design sorry yeah definition is what we",
    "start": "184440",
    "end": "190739"
  },
  {
    "text": "use right now and also it's open source and how long works right now is simply",
    "start": "190739",
    "end": "198120"
  },
  {
    "text": "said that we have five parts I want to I want to briefly introduce a little bit",
    "start": "198120",
    "end": "203459"
  },
  {
    "text": "and it's about the volume and body life cycle and data placement deployment and",
    "start": "203459",
    "end": "210480"
  },
  {
    "text": "control plan and Berlin UK is composed of three parts voting foreign volume",
    "start": "210480",
    "end": "218099"
  },
  {
    "text": "itself we call it engine uh if you use the longhorn terminology and also the",
    "start": "218099",
    "end": "224700"
  },
  {
    "text": "data placement is for the boiling replicas and about Life's a violent life",
    "start": "224700",
    "end": "230220"
  },
  {
    "text": "cycle we 100 rely on CSI protocol so he will be driven by the kubernetes",
    "start": "230220",
    "end": "236760"
  },
  {
    "text": "building customer resource PPC here so any following operation just for the CSI",
    "start": "236760",
    "end": "243000"
  },
  {
    "text": "protocol and data placement is all the data located in the longhorn disk and",
    "start": "243000",
    "end": "249659"
  },
  {
    "text": "Longhorn this case actually the fire Love On Top of hostile fire system as I",
    "start": "249659",
    "end": "256620"
  },
  {
    "text": "mentioned so you can create different long disk per node and even you can",
    "start": "256620",
    "end": "261780"
  },
  {
    "text": "create a mount point for different partitions but regardless like a long disk and deployment for violin you can",
    "start": "261780",
    "end": "269940"
  },
  {
    "text": "see the right hand side the diagram the body is composed with the engine and",
    "start": "269940",
    "end": "276000"
  },
  {
    "text": "replicas and each one is like a segregate component so you will be",
    "start": "276000",
    "end": "281820"
  },
  {
    "text": "independent from each other one volume have some problem will not impact others this is what we decide",
    "start": "281820",
    "end": "288960"
  },
  {
    "text": "right now so you will make your volume is much itself will not impact by others",
    "start": "288960",
    "end": "294479"
  },
  {
    "text": "and control plan I don't have a control and data brand and control plane based on kubernetes very straightforward",
    "start": "294479",
    "end": "303139"
  },
  {
    "text": "okay if you dive into a little bit about Longhorn engine and replica database because today we will talk about",
    "start": "303180",
    "end": "309240"
  },
  {
    "text": "database and the current model we use the volume phone and based on isci protocol so he will let the longhorn",
    "start": "309240",
    "end": "316320"
  },
  {
    "text": "volume by one by the open ISC is that we use a as a client to make it happen on",
    "start": "316320",
    "end": "322860"
  },
  {
    "text": "the whole side and also voting engine is like the volume controller so he will be",
    "start": "322860",
    "end": "330600"
  },
  {
    "text": "have an engine process along with the TGT Target server to make sure the data",
    "start": "330600",
    "end": "335759"
  },
  {
    "text": "can pass through the TGT server then down to the engine and engine have a two",
    "start": "335759",
    "end": "340860"
  },
  {
    "text": "major parts it's a one is a TCP based data server and the other one is the old",
    "start": "340860",
    "end": "346800"
  },
  {
    "text": "volume controller he's a grpc server to accept the different comments from the",
    "start": "346800",
    "end": "352020"
  },
  {
    "text": "upswing and the last part is replica replicas for the data variant data so the engine",
    "start": "352020",
    "end": "358740"
  },
  {
    "text": "will bypass the comments or even data i o to a downstream replica to save uh to",
    "start": "358740",
    "end": "365820"
  },
  {
    "text": "the local replica or even remote replicas and all the operation will just",
    "start": "365820",
    "end": "371520"
  },
  {
    "text": "happen at the replica level so like a snapshot rebuilding coils merge boom",
    "start": "371520",
    "end": "378600"
  },
  {
    "text": "Purge Etc so this is a diagram to talk about what",
    "start": "378600",
    "end": "385680"
  },
  {
    "text": "I say about a database so you can simply say you have a wallow the user",
    "start": "385680",
    "end": "391080"
  },
  {
    "text": "application and you start to do have some i o stuff and go into your body on top of that",
    "start": "391080",
    "end": "399600"
  },
  {
    "text": "have a file system and then it will go into the iska support device is posted by the longhorn and it will go to the",
    "start": "399600",
    "end": "407039"
  },
  {
    "text": "iska CD is a host uh library to make sure you can write to the longhorn",
    "start": "407039",
    "end": "413100"
  },
  {
    "text": "violin and you will be running on the TGT and use the leave Longhorn Library communal care with each engine engine is",
    "start": "413100",
    "end": "421259"
  },
  {
    "text": "what I say is a violin controller then make sure the i o it will Downstream to",
    "start": "421259",
    "end": "426960"
  },
  {
    "text": "a down pass to Longhorn replicas but this is currently what Longhorn",
    "start": "426960",
    "end": "434340"
  },
  {
    "text": "Works how are the challenge right now long has the first one uh it's too many components I mean too many",
    "start": "434340",
    "end": "442139"
  },
  {
    "text": "components along the database like you see the user need to prepare setup iscosity and long will create a TGT",
    "start": "442139",
    "end": "449819"
  },
  {
    "text": "engine process for each balance so he will be a little complicated from the",
    "start": "449819",
    "end": "456539"
  },
  {
    "text": "database point of view and the second one because too many components say we",
    "start": "456539",
    "end": "462720"
  },
  {
    "text": "will close the different Coast extra cost of photo communication especially for the database you need to i o through",
    "start": "462720",
    "end": "469740"
  },
  {
    "text": "the different parts like here TGT and engine and that's one I want to emphasize is i",
    "start": "469740",
    "end": "477240"
  },
  {
    "text": "o models limitation because right now we based on the spouse file and we set array i o and with the blocking read and",
    "start": "477240",
    "end": "485280"
  },
  {
    "text": "write so far so you will have some challenge for the performance perspective and also if we want to",
    "start": "485280",
    "end": "493020"
  },
  {
    "text": "leverage like a synchronized i o stuff you will be a little challenging right",
    "start": "493020",
    "end": "498419"
  },
  {
    "text": "now for the current architecture and also for sure different language or",
    "start": "498419",
    "end": "503699"
  },
  {
    "text": "different integration especially a special you want to integral system stuff have a different effort for us for",
    "start": "503699",
    "end": "510360"
  },
  {
    "text": "sure yeah so this is a primary challenge so far for uh Longhorn has right now so",
    "start": "510360",
    "end": "516360"
  },
  {
    "text": "we start thinking about how to move forward to create Next Generation data",
    "start": "516360",
    "end": "521459"
  },
  {
    "text": "plan for Long Haul so what's the spdk keys we'll talk about that",
    "start": "521459",
    "end": "528320"
  },
  {
    "text": "spdk is a is a software performance development kit it's used in a lot of",
    "start": "535700",
    "end": "541560"
  },
  {
    "text": "high performance Cloud applications and one of the things that it's kind of based off of is the data plane",
    "start": "541560",
    "end": "549080"
  },
  {
    "text": "development kit which is a a tool that is used by other cloud",
    "start": "549080",
    "end": "554940"
  },
  {
    "text": "service providers to um utilize Network device drivers in user",
    "start": "554940",
    "end": "562200"
  },
  {
    "text": "space to provide better performance than using the kernel and this kind of",
    "start": "562200",
    "end": "567959"
  },
  {
    "text": "includes a dpdk in its source code and uses some of",
    "start": "567959",
    "end": "574320"
  },
  {
    "text": "the methodology behind that to kind of provide better performance for any kind",
    "start": "574320",
    "end": "580860"
  },
  {
    "text": "of application and one of the things that it also has is a generic block device application layer with several",
    "start": "580860",
    "end": "588240"
  },
  {
    "text": "different implementations and a relatively easy way of implementing it and we kind of got to a dead end with",
    "start": "588240",
    "end": "596580"
  },
  {
    "text": "the current um implementation of Longhorn where we have multiple go routines each using blocking",
    "start": "596580",
    "end": "603959"
  },
  {
    "text": "i o and it kind of didn't provide any means to easily support the asynchronous",
    "start": "603959",
    "end": "610880"
  },
  {
    "text": "methodology to improve performance but",
    "start": "610880",
    "end": "616260"
  },
  {
    "text": "um spdk already has some some of these generic block devices that",
    "start": "616260",
    "end": "623040"
  },
  {
    "text": "use Frameworks like lib AIO or IOU ring to provide better performance and a lot",
    "start": "623040",
    "end": "631380"
  },
  {
    "text": "of basically plug and play and try those out and test those more quickly than rewriting longboard engine the way it is",
    "start": "631380",
    "end": "639360"
  },
  {
    "text": "and as we were discussing earlier we were um mentioning that longhorn currently",
    "start": "639360",
    "end": "646800"
  },
  {
    "text": "used his eyes scuzzy by using TGT which is an open source software product that",
    "start": "646800",
    "end": "652800"
  },
  {
    "text": "we modified to interface with the longhorn engine spdk supports that as well as",
    "start": "652800",
    "end": "660480"
  },
  {
    "text": "a newer type kind of as a as in we no longer just use salad drives we use nvme",
    "start": "660480",
    "end": "668399"
  },
  {
    "text": "drives so when so nvme over Fabrics is like an improved Network protocol for",
    "start": "668399",
    "end": "676260"
  },
  {
    "text": "um a network of available volumes",
    "start": "676260",
    "end": "682380"
  },
  {
    "text": "and it has a feature called logical volumes which we allows us to",
    "start": "682380",
    "end": "689360"
  },
  {
    "text": "store data in a way that's equivalent to how",
    "start": "689360",
    "end": "694980"
  },
  {
    "text": "Longhorn currently works with its sparse file methodology of storing",
    "start": "694980",
    "end": "700680"
  },
  {
    "text": "data so we can have an equivalent of future",
    "start": "700680",
    "end": "705860"
  },
  {
    "text": "equivalence between the two and also basically it's designed for asynchronous",
    "start": "705860",
    "end": "710880"
  },
  {
    "text": "programming which for the most part seems to perform better especially for intense i o performances I mean Longhorn",
    "start": "710880",
    "end": "718140"
  },
  {
    "text": "currently provides relatively good but performance but we want to make it better and I think one",
    "start": "718140",
    "end": "725160"
  },
  {
    "text": "thing that we do at each level of that data path is we allocate memory then deallocate it in",
    "start": "725160",
    "end": "733019"
  },
  {
    "text": "TGT we kind of malloc it then free it and in the go portion of that we",
    "start": "733019",
    "end": "739800"
  },
  {
    "text": "allocate it then you let the garbage collector at some random time uh free that memory",
    "start": "739800",
    "end": "748279"
  },
  {
    "text": "so this kind of has a model to kind of consolidate our memory usage and make it",
    "start": "748279",
    "end": "753600"
  },
  {
    "text": "more efficient so I was kind of talking about the uh",
    "start": "753600",
    "end": "758880"
  },
  {
    "text": "logical volumes and how it's equivalent to the sparse provisioning that longhorn uses so Longhorn uses sparse files",
    "start": "758880",
    "end": "767279"
  },
  {
    "text": "and we have a kind of a hierarchy of sparse files to find the data that we want in a particular volume and we guess",
    "start": "767279",
    "end": "774060"
  },
  {
    "text": "we have a separate directory for that and this logical volume feature in spdk",
    "start": "774060",
    "end": "780360"
  },
  {
    "text": "kind of performs the same thing but it doesn't use the file system functionality for the sparse files we",
    "start": "780360",
    "end": "787440"
  },
  {
    "text": "um it kind of just stores it in a huge so it can the kind of the equivalent of a file",
    "start": "787440",
    "end": "794040"
  },
  {
    "text": "system and store all of its data within a huge disk and manage it as if",
    "start": "794040",
    "end": "802200"
  },
  {
    "text": "it was a file system but it's able to do it more efficiently because it doesn't have to support all the features of the",
    "start": "802200",
    "end": "807240"
  },
  {
    "text": "file system and basically sbk sbdk is the only user of it so it doesn't have to deal with any of the contention that",
    "start": "807240",
    "end": "814500"
  },
  {
    "text": "a normal file system would have to deal with so I took the",
    "start": "814500",
    "end": "821399"
  },
  {
    "text": "picture of how Longhorn sparse provisioning works from our Longhorn website and I took a",
    "start": "821399",
    "end": "828720"
  },
  {
    "text": "picture of spdk's logical volumes from sddk's website and I think both of these",
    "start": "828720",
    "end": "834839"
  },
  {
    "text": "show the methodology that both systems use for kind of determining",
    "start": "834839",
    "end": "842339"
  },
  {
    "text": "like how to read a read or write a block so when we have like a hierarchy of",
    "start": "842339",
    "end": "849120"
  },
  {
    "text": "um snapshots or data and all that data can be sparse so for",
    "start": "849120",
    "end": "856860"
  },
  {
    "text": "you in both cases if I like wanted to for example read",
    "start": "856860",
    "end": "863100"
  },
  {
    "text": "block two I have to look up to see if that data is available in that",
    "start": "863100",
    "end": "869160"
  },
  {
    "text": "particular in the top level so if I looked up to I'd have to",
    "start": "869160",
    "end": "874500"
  },
  {
    "text": "use an ioctal or ICC i o CTL to see",
    "start": "874500",
    "end": "879779"
  },
  {
    "text": "what's available at that particular block and then and see if that is sparse",
    "start": "879779",
    "end": "885899"
  },
  {
    "text": "or not if it's a sparse or it's an empty location in the file I go to the to the next",
    "start": "885899",
    "end": "891500"
  },
  {
    "text": "snapshot and so forth and in this diagram two I have to go through",
    "start": "891500",
    "end": "898139"
  },
  {
    "text": "um three layers before I actually find the data in the oldest snapshot and",
    "start": "898139",
    "end": "904019"
  },
  {
    "text": "similarly this um SPD K has the same functionality except it implements that the ability to",
    "start": "904019",
    "end": "911760"
  },
  {
    "text": "query the sparse data like internally so we don't have to use",
    "start": "911760",
    "end": "917279"
  },
  {
    "text": "the kernel to get that as far as information so we go",
    "start": "917279",
    "end": "922380"
  },
  {
    "text": "um we can just Traverse that hierarchy then find our data",
    "start": "922380",
    "end": "928320"
  },
  {
    "text": "um uh without some of the stuff and",
    "start": "928320",
    "end": "934019"
  },
  {
    "text": "basically and all these um snapshots in sbdk are",
    "start": "934019",
    "end": "939300"
  },
  {
    "text": "within the block device that we don't have a file system on whereas with",
    "start": "939300",
    "end": "946440"
  },
  {
    "text": "um Longhorn each of these snapshots is a separate file within the file system that we're traversing",
    "start": "946440",
    "end": "952980"
  },
  {
    "text": "so one of the things that sbdk kind of makes it easy to do use is",
    "start": "952980",
    "end": "961079"
  },
  {
    "text": "to program it asynchronously and for the most part this kind of allows you to achieve",
    "start": "961079",
    "end": "968699"
  },
  {
    "text": "better performance and with this methodology basically i o functions don't block if you perform",
    "start": "968699",
    "end": "975720"
  },
  {
    "text": "a read or a write it doesn't block but it's like you register",
    "start": "975720",
    "end": "981600"
  },
  {
    "text": "in the event then we have a main Loop that checks to see",
    "start": "981600",
    "end": "988620"
  },
  {
    "text": "um the status of that and continuously check to see if this if it's complete then we are notified via a callback if",
    "start": "988620",
    "end": "997139"
  },
  {
    "text": "it's complete and this is basically the model that's used by",
    "start": "997139",
    "end": "1002420"
  },
  {
    "text": "um lib AIO or IO u-ring which is the",
    "start": "1002420",
    "end": "1008540"
  },
  {
    "text": "um kind of the Asic the more modern asynchronous ways that of Performing IO that are",
    "start": "1008540",
    "end": "1015620"
  },
  {
    "text": "more performant and or something that we kind of wanted to",
    "start": "1015620",
    "end": "1020899"
  },
  {
    "text": "emulate and try out and spdk allows you to kind of easily do this",
    "start": "1020899",
    "end": "1028120"
  },
  {
    "text": "so um so we're going to redesign the the data",
    "start": "1028520",
    "end": "1035240"
  },
  {
    "text": "plane part of all Longhorn to work with sbdk and for the first point we're going to",
    "start": "1035240",
    "end": "1042199"
  },
  {
    "text": "switch to using nvme over fabrics for Longhorns block device instead of iscos",
    "start": "1042199",
    "end": "1048020"
  },
  {
    "text": "E um Linux has mature support for nvme over Fabrics the Linux kernel has kind",
    "start": "1048020",
    "end": "1055760"
  },
  {
    "text": "of a better interface for nvmeola Fabrics than iSCSI for example is because he has a",
    "start": "1055760",
    "end": "1063980"
  },
  {
    "text": "demon process iscd that's running and kind of handle some of the TCP",
    "start": "1063980",
    "end": "1069679"
  },
  {
    "text": "connection portions of um the protocol whereas the kernel",
    "start": "1069679",
    "end": "1076340"
  },
  {
    "text": "directly supports it and it has like a system FS FS support and so there's like no",
    "start": "1076340",
    "end": "1084080"
  },
  {
    "text": "process running the kernel directly communicates the energy more Fabrics protocol",
    "start": "1084080",
    "end": "1090440"
  },
  {
    "text": "then we're going to implement the law re-implement the long run engine as a custom block device Within sbdk",
    "start": "1090440",
    "end": "1098059"
  },
  {
    "text": "and this will be equivalent to the longhorn engine that we kind of showed earlier",
    "start": "1098059",
    "end": "1103400"
  },
  {
    "text": "and so each volume in within this Longhorn volume will have a set of",
    "start": "1103400",
    "end": "1109600"
  },
  {
    "text": "replicas and we'll have them be either local and have it within the spdk",
    "start": "1109600",
    "end": "1117260"
  },
  {
    "text": "process or remote and that would be um in like on other nodes in the kubernetes",
    "start": "1117260",
    "end": "1124660"
  },
  {
    "text": "no kubernetes uh cluster and so it's kind of equivalent to that",
    "start": "1124660",
    "end": "1131120"
  },
  {
    "text": "except um well you to communicate with the red with the remote nodes we'll use",
    "start": "1131120",
    "end": "1136580"
  },
  {
    "text": "nvmeable Fabrics again and right now we kind of use their own custom protocol",
    "start": "1136580",
    "end": "1143419"
  },
  {
    "text": "for communicating with our replicas and this is we'll be using a protocol that",
    "start": "1143419",
    "end": "1149000"
  },
  {
    "text": "we know is relatively efficient and probably better than the one that we decided designed ourselves",
    "start": "1149000",
    "end": "1155299"
  },
  {
    "text": "so each right operation this is the equivalent to how Longhorn Works currently is we distribute all of our",
    "start": "1155299",
    "end": "1161840"
  },
  {
    "text": "right operations to all the replicas and verify that they're complete before",
    "start": "1161840",
    "end": "1167120"
  },
  {
    "text": "returning uh right complete to the application then we also",
    "start": "1167120",
    "end": "1173960"
  },
  {
    "text": "since we have multiple replicas we only need to use one for a read operation and",
    "start": "1173960",
    "end": "1179179"
  },
  {
    "text": "we currently will be doing that in a round robin we'll just go from one to the next one for each read operation and",
    "start": "1179179",
    "end": "1185780"
  },
  {
    "text": "kind of distribute them throughout all the nodes and we'll also support snapshots and",
    "start": "1185780",
    "end": "1191140"
  },
  {
    "text": "rebuilding new new volumes when added so",
    "start": "1191140",
    "end": "1196820"
  },
  {
    "text": "snapshots is that kind of functionality that's built into Longhorn to",
    "start": "1196820",
    "end": "1203059"
  },
  {
    "text": "um you know have an atomic point where we [Music]",
    "start": "1203059",
    "end": "1208400"
  },
  {
    "text": "um stored a state of the volume and rebuilding is what happens when",
    "start": "1208400",
    "end": "1215000"
  },
  {
    "text": "you add a new replica when the volume is already up so you need to",
    "start": "1215000",
    "end": "1221780"
  },
  {
    "text": "copy that data that exists to a the new node that you're adding",
    "start": "1221780",
    "end": "1228740"
  },
  {
    "text": "and one of the departures that we're using doing with long run with sbdk is",
    "start": "1228740",
    "end": "1233840"
  },
  {
    "text": "that we're going to have only one spdk process for kubernetes node each SPD",
    "start": "1233840",
    "end": "1240679"
  },
  {
    "text": "process will handle multiple block devices from prior or with the current Longhorn",
    "start": "1240679",
    "end": "1247760"
  },
  {
    "text": "there's one long run engine per process and like tgtd is the thing that handles",
    "start": "1247760",
    "end": "1255679"
  },
  {
    "text": "all the volumes so we're going to be generally",
    "start": "1255679",
    "end": "1260720"
  },
  {
    "text": "um reducing the number of processes and",
    "start": "1260720",
    "end": "1265760"
  },
  {
    "text": "spdk is handling more of the scheduling than using blocking IO that to run the",
    "start": "1265760",
    "end": "1274160"
  },
  {
    "text": "to allow the never mind okay so I have a diagram of",
    "start": "1274160",
    "end": "1280220"
  },
  {
    "text": "kind of what I just explained and this is a example of a",
    "start": "1280220",
    "end": "1286780"
  },
  {
    "text": "uh volume with three replicas",
    "start": "1286780",
    "end": "1291760"
  },
  {
    "text": "um using spdk and I guess we have the kind of the same thing as we had before",
    "start": "1292220",
    "end": "1297260"
  },
  {
    "text": "where we have the user application interfacing with the file system driver in the kernel",
    "start": "1297260",
    "end": "1302600"
  },
  {
    "text": "and that kernel file system driver is using the block device which in this",
    "start": "1302600",
    "end": "1308240"
  },
  {
    "text": "case will be a nvmeular Fabrics block device and the kernel will be directly",
    "start": "1308240",
    "end": "1313840"
  },
  {
    "text": "communicating with our sbdk process which is called sptk TGT",
    "start": "1313840",
    "end": "1320240"
  },
  {
    "text": "and we have our special Longhorn block device or B Dev and this one has",
    "start": "1320240",
    "end": "1326120"
  },
  {
    "text": "won the local replica and two remote replicas and within",
    "start": "1326120",
    "end": "1332179"
  },
  {
    "text": "each of those replicas we have a logical volume store for our particular volume",
    "start": "1332179",
    "end": "1338559"
  },
  {
    "text": "so now we're going to discuss some of the polymer preliminary performance results",
    "start": "1339740",
    "end": "1346640"
  },
  {
    "text": "that we got from this new implementation of Longhorn",
    "start": "1346640",
    "end": "1352580"
  },
  {
    "text": "um first off we I guess this is the environment that we used it was basically a bare metal server from a",
    "start": "1352580",
    "end": "1359179"
  },
  {
    "text": "cloud service provider and I used one of the ssds and those",
    "start": "1359179",
    "end": "1364820"
  },
  {
    "text": "ssds were SATA so but okay so our test methodology was is",
    "start": "1364820",
    "end": "1372500"
  },
  {
    "text": "that we use the K bench utility which the program that longhorn developed",
    "start": "1372500",
    "end": "1379880"
  },
  {
    "text": "to test the performance of various volumes",
    "start": "1379880",
    "end": "1385960"
  },
  {
    "text": "and we test i o operations per second bandwidth and",
    "start": "1385960",
    "end": "1392600"
  },
  {
    "text": "latency by using the fio command which is kind of a",
    "start": "1392600",
    "end": "1398000"
  },
  {
    "text": "a utility that was used to Benchmark the Linux kernels block device",
    "start": "1398000",
    "end": "1403100"
  },
  {
    "text": "implementation and it was also developed by the author of The Block device",
    "start": "1403100",
    "end": "1409720"
  },
  {
    "text": "implementation in the kernel Yen's Expo and also",
    "start": "1409720",
    "end": "1416659"
  },
  {
    "text": "um he's the author of The the newest i o methodology in Linux IOU ring and we had",
    "start": "1416659",
    "end": "1424100"
  },
  {
    "text": "two tests that we we did first test is we tested a raw disk the existing Longhorn",
    "start": "1424100",
    "end": "1433220"
  },
  {
    "text": "and longer with sbk on a single node I think the main motivation was to see",
    "start": "1433220",
    "end": "1439460"
  },
  {
    "text": "the overall impact of using either implementation of the",
    "start": "1439460",
    "end": "1444500"
  },
  {
    "text": "longhorn versus just using the disk then the second example we did a three node",
    "start": "1444500",
    "end": "1450799"
  },
  {
    "text": "scenario with both the existing Longhorn and spdk so here are our results and",
    "start": "1450799",
    "end": "1460159"
  },
  {
    "text": "um so I think the one thing that was",
    "start": "1460159",
    "end": "1466340"
  },
  {
    "text": "very interesting is I it seems as if the longhorn",
    "start": "1466340",
    "end": "1471380"
  },
  {
    "text": "um with spdk performs very similarly to the just using the raw disk",
    "start": "1471380",
    "end": "1477320"
  },
  {
    "text": "in terms of both the bandwidth and the",
    "start": "1477320",
    "end": "1483140"
  },
  {
    "text": "um I think it's most equivalent in bandwidth and the i o operations per second it's",
    "start": "1483140",
    "end": "1492140"
  },
  {
    "text": "relatively close but I guess it's a little bit down on that and",
    "start": "1492140",
    "end": "1497539"
  },
  {
    "text": "the latency is very similar I think it seems to be it's about uh 20 to 25",
    "start": "1497539",
    "end": "1504460"
  },
  {
    "text": "microseconds of latency and over just using the disk so it's",
    "start": "1504460",
    "end": "1510740"
  },
  {
    "text": "like we're achieving a relatively good performance and it's in all cases it",
    "start": "1510740",
    "end": "1516020"
  },
  {
    "text": "seems to be better than the existing Longhorn the latency is much improved",
    "start": "1516020",
    "end": "1521240"
  },
  {
    "text": "the bandwidth for um rights is",
    "start": "1521240",
    "end": "1527260"
  },
  {
    "text": "improved to compare to the current Longhorn and also the",
    "start": "1527260",
    "end": "1534440"
  },
  {
    "text": "I mean the bandwidth is kind of equivalent and the i o Ops per second are very much improved",
    "start": "1534440",
    "end": "1541580"
  },
  {
    "text": "so I guess that's kind of a summary what I just said the bandwidth improves knock",
    "start": "1541580",
    "end": "1547539"
  },
  {
    "text": "categories it's very similar to just using the disk and the overall latency is about like 25 to 30 microsystem",
    "start": "1547539",
    "end": "1554419"
  },
  {
    "text": "seconds versus 100 microseconds with Longhorn so this is the three no that",
    "start": "1554419",
    "end": "1561080"
  },
  {
    "text": "um performance comparison there was no disk equivalent because",
    "start": "1561080",
    "end": "1566419"
  },
  {
    "text": "that's not really possible so um",
    "start": "1566419",
    "end": "1571520"
  },
  {
    "text": "and in this case it's also very much improved for compared to the current",
    "start": "1571520",
    "end": "1576679"
  },
  {
    "text": "Longhorn we have better much better I O",
    "start": "1576679",
    "end": "1582940"
  },
  {
    "text": "operations per second especially compared to right and the bandwidth has also improved I",
    "start": "1582940",
    "end": "1591679"
  },
  {
    "text": "mean if you like think about it the existing Longhorn is already doing over a",
    "start": "1591679",
    "end": "1598940"
  },
  {
    "text": "a gigabyte of data per second but we're doing even",
    "start": "1598940",
    "end": "1604279"
  },
  {
    "text": "better with spdk um but latency is also improved and you",
    "start": "1604279",
    "end": "1610760"
  },
  {
    "text": "in general it's performing better and you can kind of see compared to the single node",
    "start": "1610760",
    "end": "1617120"
  },
  {
    "text": "scenario our three note scenario like performs better than the",
    "start": "1617120",
    "end": "1624140"
  },
  {
    "text": "like it it's a kind of equivalent to raid one and in this network scenario it",
    "start": "1624140",
    "end": "1629600"
  },
  {
    "text": "performs better with read operations and just a single disk on a single node",
    "start": "1629600",
    "end": "1638200"
  },
  {
    "text": "and and I think like we haven't even scratched the surface of all the things that you could do with sbdk",
    "start": "1638299",
    "end": "1646039"
  },
  {
    "text": "um I think one of the things that sddk is noted for know that the four is doing",
    "start": "1646039",
    "end": "1651980"
  },
  {
    "text": "user space and Vimy support so if one of the nodes in our kubernetes cluster",
    "start": "1651980",
    "end": "1659120"
  },
  {
    "text": "actually used and vme drives we might be able to access them directly instead of",
    "start": "1659120",
    "end": "1664700"
  },
  {
    "text": "using the Linux kernels driver and this is like one of the SPD case claim the",
    "start": "1664700",
    "end": "1669740"
  },
  {
    "text": "frame it's kind of equivalent to how uh dpdk uses network drivers and user",
    "start": "1669740",
    "end": "1677240"
  },
  {
    "text": "space we didn't initially do this because we wanted to have a wide scope of scenarios",
    "start": "1677240",
    "end": "1683480"
  },
  {
    "text": "that we could support so we could support any sort of environment not necessary",
    "start": "1683480",
    "end": "1688520"
  },
  {
    "text": "only uh nvme environment but I think we could um",
    "start": "1688520",
    "end": "1694279"
  },
  {
    "text": "as uh everyone moves to using actual nvme",
    "start": "1694279",
    "end": "1699740"
  },
  {
    "text": "drives instead of other formats we can potentially go and investigate doing",
    "start": "1699740",
    "end": "1705620"
  },
  {
    "text": "that we can also try to use a",
    "start": "1705620",
    "end": "1710320"
  },
  {
    "text": "IOU ring and other new technologies when I tried to use IOU ring it in spdk at",
    "start": "1710840",
    "end": "1717140"
  },
  {
    "text": "one point in time it didn't work but I'm since Longhorn isn't the only person",
    "start": "1717140",
    "end": "1722299"
  },
  {
    "text": "working working on this because um also test out as changes come Upstream to the",
    "start": "1722299",
    "end": "1729919"
  },
  {
    "text": "spda project and another thing that is also very dependent on the cluster",
    "start": "1729919",
    "end": "1737179"
  },
  {
    "text": "environment is using a feature called RDMA which is basically like dma which",
    "start": "1737179",
    "end": "1743960"
  },
  {
    "text": "is direct memory access which is kind of a way to transport data without",
    "start": "1743960",
    "end": "1751580"
  },
  {
    "text": "using the CPU and there's a possibility of",
    "start": "1751580",
    "end": "1757460"
  },
  {
    "text": "extending what we did to have nvme Fabrics use our dma using",
    "start": "1757460",
    "end": "1763340"
  },
  {
    "text": "special drivers in the Linux kernel to more efficiently transport data over",
    "start": "1763340",
    "end": "1769880"
  },
  {
    "text": "the network instead of using the TCP approach which",
    "start": "1769880",
    "end": "1776000"
  },
  {
    "text": "is what we're currently using and our dmaker that improved performance",
    "start": "1776000",
    "end": "1782299"
  },
  {
    "text": "even more so I guess what's next for Longhorn",
    "start": "1782299",
    "end": "1788720"
  },
  {
    "text": "so we kind of developed Longhorn spdk in isolation outside of the rest of",
    "start": "1788720",
    "end": "1795380"
  },
  {
    "text": "Longhorn which is the one that enables it to work with kubernetes so",
    "start": "1795380",
    "end": "1801340"
  },
  {
    "text": "we need to do a lot of changes into how it's deployed I guess the main thing",
    "start": "1801340",
    "end": "1808159"
  },
  {
    "text": "that handles how things work within Longhorn how it deploys all the",
    "start": "1808159",
    "end": "1814100"
  },
  {
    "text": "um pods or controls most how it's deployed on a kubernetes network is something",
    "start": "1814100",
    "end": "1820820"
  },
  {
    "text": "called the long run engine I mean the longhorn manager and we kind of need to change how it",
    "start": "1820820",
    "end": "1827960"
  },
  {
    "text": "deploys Longhorn on the kubernetes of that work because we're moving from One",
    "start": "1827960",
    "end": "1833059"
  },
  {
    "text": "Longhorn engine process per node to I mean multiple Longhorn engine processes",
    "start": "1833059",
    "end": "1839179"
  },
  {
    "text": "per node to one spta process per node that handles all the",
    "start": "1839179",
    "end": "1847299"
  },
  {
    "text": "volumes so we're going to we have this component called the",
    "start": "1847299",
    "end": "1853340"
  },
  {
    "text": "instant manager which manages all these processes and we need to kind of refactor that and",
    "start": "1853340",
    "end": "1861320"
  },
  {
    "text": "make it uh basically remove it and just have one",
    "start": "1861320",
    "end": "1866779"
  },
  {
    "text": "spdk process and I think as David was mentioning we have a lot of crds",
    "start": "1866779",
    "end": "1873919"
  },
  {
    "text": "and the crg's kind of reflect the current process model we kind of need to",
    "start": "1873919",
    "end": "1879020"
  },
  {
    "text": "update that to reflect the new process model going forward and we're going to",
    "start": "1879020",
    "end": "1885380"
  },
  {
    "text": "basically remove this iSCSI component and TGT and transition to nvme over Fabrics",
    "start": "1885380",
    "end": "1892580"
  },
  {
    "text": "um and another thing that we need to do is the long run manager manager",
    "start": "1892580",
    "end": "1898820"
  },
  {
    "text": "communicates to each of these engine processes over grpc and spdk doesn't",
    "start": "1898820",
    "end": "1904700"
  },
  {
    "text": "talk G or RPC so we need to develop a new mechanism for community community",
    "start": "1904700",
    "end": "1910659"
  },
  {
    "text": "communicating to these Longhorn engine processes in order to move forward to have it",
    "start": "1910659",
    "end": "1916399"
  },
  {
    "text": "integrated with the whole of Longhorn and we need to kind of implement some of the things that longhorn has currently",
    "start": "1916399",
    "end": "1923120"
  },
  {
    "text": "like back up and restore kind of achieve full feature parity with the existing",
    "start": "1923120",
    "end": "1929179"
  },
  {
    "text": "Longhorn and before we can move forward and we're currently working on this and",
    "start": "1929179",
    "end": "1935120"
  },
  {
    "text": "we're working on a technology preview that will kind of show Longhorn more",
    "start": "1935120",
    "end": "1941179"
  },
  {
    "text": "integrated with SVD cave and it's a kind of significant change and",
    "start": "1941179",
    "end": "1946520"
  },
  {
    "text": "um but we're working on it and do you have is there any questions",
    "start": "1946520",
    "end": "1953740"
  },
  {
    "text": "what what's that",
    "start": "1957620",
    "end": "1960700"
  },
  {
    "text": "yeah what Longhorn release is that going to be featuring okay yeah",
    "start": "1967340",
    "end": "1972980"
  },
  {
    "text": "so we um right now we just show the body parts so while we are walking right now",
    "start": "1972980",
    "end": "1978980"
  },
  {
    "text": "is a control print feature priority integration so I would say the better timing is next year I don't have a",
    "start": "1978980",
    "end": "1987679"
  },
  {
    "text": "quite periodical currency for release so each year we have a two feature release",
    "start": "1987679",
    "end": "1993980"
  },
  {
    "text": "so I would say in the the coming release is one that four the zero is end of this",
    "start": "1993980",
    "end": "2000760"
  },
  {
    "text": "year but this free this reads will not have spdk preview stuff but it will",
    "start": "2000760",
    "end": "2006640"
  },
  {
    "text": "happen I expect it will happen in 1.5 we have a preview version but maybe not",
    "start": "2006640",
    "end": "2013299"
  },
  {
    "text": "including all the feature parity but the end goal is next year so this is about the SPD indication",
    "start": "2013299",
    "end": "2022140"
  },
  {
    "text": "thank you David and Keith",
    "start": "2022779",
    "end": "2026100"
  },
  {
    "text": "so the new volumes created using spdk would sorry the old volume should need",
    "start": "2030100",
    "end": "2036340"
  },
  {
    "text": "to be converted to spdk um the current volumes they're so",
    "start": "2036340",
    "end": "2043960"
  },
  {
    "text": "they're not compatible right now but I think we have the ability to convert them",
    "start": "2043960",
    "end": "2049898"
  },
  {
    "text": "between the old format and the new format and if I think we have initial effort of that but we might have",
    "start": "2049899",
    "end": "2057878"
  },
  {
    "text": "um we might develop a means to actually automatically do that as when they",
    "start": "2057879",
    "end": "2063820"
  },
  {
    "text": "deploy the new version",
    "start": "2063820",
    "end": "2066659"
  },
  {
    "text": "draw the destructive but we I try to because Upstream spdk have a lot of",
    "start": "2070240",
    "end": "2076419"
  },
  {
    "text": "application integration already take example like sbdkdd so we try to think",
    "start": "2076419",
    "end": "2081878"
  },
  {
    "text": "about how to integrate to make sure the sparse file can be can be migrated to",
    "start": "2081879",
    "end": "2087638"
  },
  {
    "text": "the spdk profile so it would be better to do the migration but I would not say",
    "start": "2087639",
    "end": "2092679"
  },
  {
    "text": "you still need to investigate to see how it works thank you",
    "start": "2092679",
    "end": "2098859"
  },
  {
    "text": "thank you everyone",
    "start": "2098859",
    "end": "2101640"
  }
]