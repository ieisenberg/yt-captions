[
  {
    "start": "0",
    "end": "38000"
  },
  {
    "text": "oh so hi everyone I'm Chris Crona I work in engineering at Daka I'm part",
    "start": "30",
    "end": "6509"
  },
  {
    "text": "of the application definition team we've mostly in Europe I'm based in Paris and we've got a couple of people in Cambridge and some more in Paris we're",
    "start": "6509",
    "end": "13559"
  },
  {
    "text": "responsible for compose docker app composing communities among other things",
    "start": "13559",
    "end": "19640"
  },
  {
    "text": "so today we're gonna take a look at what problems scene app tries to solve the",
    "start": "19640",
    "end": "26099"
  },
  {
    "text": "CNF specification itself because it's pretty new and not many people know about it we'll take a quick look at the scene AB",
    "start": "26099",
    "end": "31859"
  },
  {
    "text": "ecosystem and then we'll ask you know what's next to see now because it is quite young so to start with we'll talk",
    "start": "31859",
    "end": "40230"
  },
  {
    "start": "38000",
    "end": "391000"
  },
  {
    "text": "about the why of scene app so why did we build this thing before we can do that though we need to we need to talk about",
    "start": "40230",
    "end": "46469"
  },
  {
    "text": "what an application is because C now stands for cloud native application bundle we need to know what what we're",
    "start": "46469",
    "end": "52050"
  },
  {
    "text": "talking about so the Oxford English Dictionary defines an application as so so a program or piece of software",
    "start": "52050",
    "end": "59070"
  },
  {
    "text": "designed to fulfill a picket particular purpose that's a pretty loose definition if you ask me I feel like they they",
    "start": "59070",
    "end": "65700"
  },
  {
    "text": "didn't really didn't really try so we can maybe do better we're a we were a bunch of people in tech we can maybe",
    "start": "65700",
    "end": "71909"
  },
  {
    "text": "answer that question a bit more concretely so is an application a binary and a virtual machine is it a binary in",
    "start": "71909",
    "end": "78869"
  },
  {
    "text": "a container is it multiple containers orchestrated by cuban Eddie's is it a",
    "start": "78869",
    "end": "84479"
  },
  {
    "text": "host of database in some lambdas or is it any combination of the above so it",
    "start": "84479",
    "end": "90000"
  },
  {
    "text": "turns out if you ask 10 people you'll probably get 10 different answers because applications are very specific to organizations and to people so it you",
    "start": "90000",
    "end": "97079"
  },
  {
    "text": "write an application to solve a problem which means that it might even be something completely different so that",
    "start": "97079",
    "end": "103590"
  },
  {
    "text": "that hasn't really got us to anywhere better but we can ask the question how",
    "start": "103590",
    "end": "108659"
  },
  {
    "text": "do you deploy an application so once again it completely depends if it's a",
    "start": "108659",
    "end": "113729"
  },
  {
    "text": "binary I hope you're using some sort of package manager so like apps maybe you're putting up",
    "start": "113729",
    "end": "119369"
  },
  {
    "text": "some infrastructure so you can use terraform if you're installing something to accuse cluster you could be using",
    "start": "119369",
    "end": "124380"
  },
  {
    "text": "help charts and helm or if you wrote your own cubm or maybe you're just using cubic you cuddle apply compose also",
    "start": "124380",
    "end": "131610"
  },
  {
    "text": "works in Cuban AD so you could use stack deploy or maybe you have some specific up some specific infrastructure",
    "start": "131610",
    "end": "140400"
  },
  {
    "text": "thing that's only provided by a table yes in which case you need to use their their CLI tooling so that's how we got",
    "start": "140400",
    "end": "147990"
  },
  {
    "text": "here that's a good thing not a bad thing the reason that the CNC F landscape is",
    "start": "147990",
    "end": "153660"
  },
  {
    "text": "as big as it is is because there are lots of different problems to solve and you need lots of different tools to solve them the problem is that each tool",
    "start": "153660",
    "end": "161550"
  },
  {
    "text": "comes with its own version management and each tool probably comes into its own package manager so you have this",
    "start": "161550",
    "end": "167820"
  },
  {
    "text": "nightmarish landscape where you can't deploy an application easily because you need multiple tools so what is CNM well",
    "start": "167820",
    "end": "176370"
  },
  {
    "text": "it stands for cloud native application bundle yep another acronym it's a",
    "start": "176370",
    "end": "181980"
  },
  {
    "text": "packaging format for distributed applications and it's a specification so the primary audience of C NAB is people",
    "start": "181980",
    "end": "189540"
  },
  {
    "text": "making tools so what are seen apps goals well it's to solve that problem we saw",
    "start": "189540",
    "end": "195600"
  },
  {
    "text": "its how do you deploy a complex application easily it aims to be cloud agnostic so you shouldn't care where",
    "start": "195600",
    "end": "201930"
  },
  {
    "text": "you're running it or how you're running it it aims to be secure because we live in a world now where we can't have nice",
    "start": "201930",
    "end": "207090"
  },
  {
    "text": "things and it aims to handle a spread of use cases so it's everything from IOT to",
    "start": "207090",
    "end": "214160"
  },
  {
    "text": "edge air-gapped normal clusters everything so right about now there's",
    "start": "214160",
    "end": "220140"
  },
  {
    "text": "probably a bunch of alarm bells going off and you know why do we need yet another standard or yet another spec sorry to make this happen",
    "start": "220140",
    "end": "229739"
  },
  {
    "text": "the alarm bells are good but I'd like to reassure you that we're not creating C AB alone so we're doing this with a",
    "start": "229739",
    "end": "236370"
  },
  {
    "text": "bunch of other folks who are actually in the room with here today as well from Microsoft pivotal bitNami hashey code",
    "start": "236370",
    "end": "242100"
  },
  {
    "text": "fresh we're doing this in the open so we have week by weekly meetings and the",
    "start": "242100",
    "end": "250290"
  },
  {
    "text": "idea of doing this this way is that we want to get a bunch of different use cases and test them as we're building",
    "start": "250290",
    "end": "255540"
  },
  {
    "text": "the spec so we build something that actually resembles the real world and obviously we you know in order for it to",
    "start": "255540",
    "end": "261870"
  },
  {
    "text": "be cloud agnostic we need a bunch of different people working on it so how do you go about putting together as",
    "start": "261870",
    "end": "267630"
  },
  {
    "text": "vacation that tackles something that's complicated well you need to start by",
    "start": "267630",
    "end": "272910"
  },
  {
    "text": "finding what's common between applications so every application has a definition this could be your home chart",
    "start": "272910",
    "end": "279720"
  },
  {
    "text": "it could be a compose file it could be QP amel it's the description of what",
    "start": "279720",
    "end": "284760"
  },
  {
    "text": "will be inside the application you need then need tooling to deploy and manage",
    "start": "284760",
    "end": "290040"
  },
  {
    "text": "your applications so in the helm case you need the helm CLI and to the what until v3 comes out you need",
    "start": "290040",
    "end": "296670"
  },
  {
    "text": "darkus tak deploy or dakka dakka CLI to deploy compose files you may need coop",
    "start": "296670",
    "end": "302220"
  },
  {
    "text": "couple to manage QV amal and so on and finally you have these parameters and credentials these are things that you",
    "start": "302220",
    "end": "308940"
  },
  {
    "text": "want to set when you deploy the application parameters are things like ports so an operator will say I want this to expose something on this port",
    "start": "308940",
    "end": "315480"
  },
  {
    "text": "and credentials will be things that you used to call API is to deploy your application so it could be a cube config",
    "start": "315480",
    "end": "322160"
  },
  {
    "text": "certificates or something else the other thing that we thought about when we",
    "start": "322160",
    "end": "328260"
  },
  {
    "text": "started putting the spec together is what do we have already and what can we reuse we're not the first people to work in the space we should we should try to",
    "start": "328260",
    "end": "335190"
  },
  {
    "text": "reuse what we have so I talked about having a definition there's a notion of",
    "start": "335190",
    "end": "341730"
  },
  {
    "text": "an artifact where we could build this into an immutable thing that we can then hopefully share so we have we have",
    "start": "341730",
    "end": "348900"
  },
  {
    "text": "something for this in the container world so in in the container world we have a docker file or something else to",
    "start": "348900",
    "end": "354600"
  },
  {
    "text": "define the what the container image will look like we have an OC eye image that you build that into which is an",
    "start": "354600",
    "end": "360540"
  },
  {
    "text": "immutable artifact that can be signed so that you can secure it and we have OC I registries which are which you can use",
    "start": "360540",
    "end": "366720"
  },
  {
    "text": "to share these OCI images so for applications maybe we can do the same thing the definition part is going to be",
    "start": "366720",
    "end": "373530"
  },
  {
    "text": "difficult because as I showed you before each of those different tools will have its own method of defining a definition",
    "start": "373530",
    "end": "380370"
  },
  {
    "text": "so maybe that part's not not that easy but maybe we can package these as OCI images and maybe we can store them in",
    "start": "380370",
    "end": "386700"
  },
  {
    "text": "OCI registries so that we can share them and not have to rebuild the infrastructure from scratch so let's",
    "start": "386700",
    "end": "392880"
  },
  {
    "text": "let's take a quick look at the CNF specification itself it's broken up into",
    "start": "392880",
    "end": "398040"
  },
  {
    "text": "a bunch of pieces and we're working on different pieces in parallel because as you saw before there's a bunch of us working on this",
    "start": "398040",
    "end": "404110"
  },
  {
    "text": "the first three so the bundle definition invocation image and runtime are part of the core specification and these are",
    "start": "404110",
    "end": "410090"
  },
  {
    "text": "nearly stable we were hoping to stabilize them pretty soon there's then the claim store signing and distribution portions which are works in progress so",
    "start": "410090",
    "end": "418610"
  },
  {
    "text": "we'll start with the bundle definition this includes the common parts of the",
    "start": "418610",
    "end": "424100"
  },
  {
    "text": "application that we saw before so we have the metadata so things like named version description we have a reference",
    "start": "424100",
    "end": "430220"
  },
  {
    "text": "to the invocation image which I'll get to just now but that's essentially the Installer we have a list of parameters a",
    "start": "430220",
    "end": "435500"
  },
  {
    "text": "list of credentials and a list of executable images so on disk it's Jason",
    "start": "435500",
    "end": "443120"
  },
  {
    "text": "and so you'll see on the first line at the top there we have the metadata this is things like a name version",
    "start": "443120",
    "end": "448730"
  },
  {
    "text": "description we then have a list of the images these are invocation images so these are the install images you can use",
    "start": "448730",
    "end": "455060"
  },
  {
    "text": "docker images or something else we come from a container background so that's what we was reviews we then have the",
    "start": "455060",
    "end": "461120"
  },
  {
    "text": "credentials so you'll see here we have something named cube config which will be mounted to a path that you can specify and we have parameters which is",
    "start": "461120",
    "end": "468110"
  },
  {
    "text": "strongly typed so you can validate them which is great so you can for example for reports you can set an integer you",
    "start": "468110",
    "end": "473300"
  },
  {
    "text": "can set a default value you can set a minimum maximum and so on for Strings you can use red X and whatnot it's",
    "start": "473300",
    "end": "479540"
  },
  {
    "text": "really cool and there's some other things that you can store inside the bundle by Jason the next thing we have",
    "start": "479540",
    "end": "486380"
  },
  {
    "text": "is the invocation image so the invocation image as I said before is the application installer it's generally a",
    "start": "486380",
    "end": "492920"
  },
  {
    "text": "container image but it doesn't have to be it contains the application definition so let's say your cube Y ml and the",
    "start": "492920",
    "end": "499220"
  },
  {
    "text": "deployment ceiling which would be your cube couple for example it has a specific filesystem layouts and a well",
    "start": "499220",
    "end": "505310"
  },
  {
    "text": "defined entry point with required actions so we'll dive into that don't worry so just taking a look at what the",
    "start": "505310",
    "end": "511130"
  },
  {
    "text": "the file hierarchy looks like you have something like this where you have some definition which is highlighted here so in this case I've got a database which",
    "start": "511130",
    "end": "517820"
  },
  {
    "text": "we could deploy with terraform because it's a host a database and then some QB I mul that will just cube cuddle apply",
    "start": "517820",
    "end": "523840"
  },
  {
    "text": "do you then have this run executable which is what you need to make the entry points of the installer image which can",
    "start": "523840",
    "end": "532340"
  },
  {
    "text": "either have the tooling built inside or could just be a shell script that does something else okay so now we have these",
    "start": "532340",
    "end": "538520"
  },
  {
    "text": "two parts already we have the bundle a dot jason of the bundle definition and the invocation image we then get to the",
    "start": "538520",
    "end": "545690"
  },
  {
    "text": "run time which ties all these things together so the scene at runtime reads the bundle that jason or the bundle definition it then executes the image",
    "start": "545690",
    "end": "553370"
  },
  {
    "text": "with the scene ab action injecting the parameters waits for the invocation container to complete and then stores",
    "start": "553370",
    "end": "560840"
  },
  {
    "text": "the result as what we call a claim so that gets us to the claim store this keeps track of installations so that you",
    "start": "560840",
    "end": "568190"
  },
  {
    "text": "can you basically have a store of what's been installed and each installation has",
    "start": "568190",
    "end": "574610"
  },
  {
    "text": "a unique name so that you can record the actions on each installation so you",
    "start": "574610",
    "end": "579830"
  },
  {
    "text": "could say what the last action was what the status was which bundle was used and which parameters were set this is",
    "start": "579830",
    "end": "586880"
  },
  {
    "text": "primarily to make subsequent actions easier because it means you don't need to recess if I which bundle you used",
    "start": "586880",
    "end": "592850"
  },
  {
    "text": "which parameters they were and so on and so I think that's about high time for a demo in this first demo I'm going to be",
    "start": "592850",
    "end": "600200"
  },
  {
    "start": "596000",
    "end": "874000"
  },
  {
    "text": "showing you how to write a scene app from scratch just to show you how easy this is write all of the demos are on",
    "start": "600200",
    "end": "608420"
  },
  {
    "text": "github so you can check them out later if you'd like I don't guarantee they'll work on your machine so it fits so here we have my",
    "start": "608420",
    "end": "616820"
  },
  {
    "text": "demo directory I've got a make file just to make things easier for me oh you can't see sorry which screen do I need",
    "start": "616820",
    "end": "624170"
  },
  {
    "text": "to put that on [Music]",
    "start": "624170",
    "end": "628430"
  },
  {
    "text": "let's eat that no right right I'm",
    "start": "632450",
    "end": "639570"
  },
  {
    "text": "probably gonna actually mirror my displayer also won't be able to see anything",
    "start": "639570",
    "end": "644270"
  },
  {
    "text": "okay there we go is that big enough for the people at the back good right I hate",
    "start": "656040",
    "end": "663860"
  },
  {
    "text": "demos when you can't read what's being said I'll make it bigger anyway all right so here's what I have inside my",
    "start": "663860",
    "end": "669200"
  },
  {
    "text": "directory I have make file which just makes my life easier so don't watch the commands I have bundled up Jason I have",
    "start": "669200",
    "end": "675920"
  },
  {
    "text": "a tool named duffle and I have an invocation image folder so let's start with the bundle up Jason so this is",
    "start": "675920",
    "end": "683060"
  },
  {
    "text": "pretty much the simplest scene AB you can write you'll see that the schema version is the working draft of v1 I've",
    "start": "683060",
    "end": "691430"
  },
  {
    "text": "named my application bundle it has a description so that's you know somebody finds it they can they can do something",
    "start": "691430",
    "end": "697070"
  },
  {
    "text": "with it I have a version I then have a list of invocation images which I'll show you how I built just now and I can",
    "start": "697070",
    "end": "704540"
  },
  {
    "text": "add maintain as and other metadata as well so if we look inside the invocation image directory we'll see that I have a",
    "start": "704540",
    "end": "711649"
  },
  {
    "text": "docker file and then I have a run tool with a main go so that's all implication",
    "start": "711649",
    "end": "717079"
  },
  {
    "text": "image what I'm going to show you first is the docker file so this will show you how the invocation image is built so I'm",
    "start": "717079",
    "end": "722480"
  },
  {
    "text": "using a multi-stage build it's very simple it's the first step builds a go program which is my main go and the",
    "start": "722480",
    "end": "729290"
  },
  {
    "text": "second step just copies the results of that and sets the entry points to /c nav slash app slash run which is the",
    "start": "729290",
    "end": "735230"
  },
  {
    "text": "standard scene app entry point and I'll show you now the the go the go program",
    "start": "735230",
    "end": "745089"
  },
  {
    "text": "so in the first block of Const I have the keys for the environment variables",
    "start": "745089",
    "end": "751130"
  },
  {
    "text": "so as I said the run time tool injects the action the installation or the",
    "start": "751130",
    "end": "756290"
  },
  {
    "text": "bundle name and the installation name as environment variables along with some other things so I've got constants just",
    "start": "756290",
    "end": "761959"
  },
  {
    "text": "to keep track of that I then have the three required actions which were install upgrade uninstall that for any",
    "start": "761959",
    "end": "768829"
  },
  {
    "text": "application it Maps pretty well and then I just have some simple error checking before I have this switch over here",
    "start": "768829",
    "end": "775850"
  },
  {
    "text": "which switches on the action and so what it's going to do is when I install it's gonna say hello and when I uninstall",
    "start": "775850",
    "end": "781730"
  },
  {
    "text": "it's going to say goodbye that's it so what I can do now is I can make my",
    "start": "781730",
    "end": "787040"
  },
  {
    "text": "invocation image which will just copy my commands so I'll show you this is just a simple like a build I'm tagging it for to push",
    "start": "787040",
    "end": "795069"
  },
  {
    "text": "it to a repo that I have as I said it's I've already prepared this demo to make",
    "start": "795069",
    "end": "800680"
  },
  {
    "text": "sure it will work without the network so that that's not a very interesting part then to install it what I will do is I",
    "start": "800680",
    "end": "808000"
  },
  {
    "text": "will get the install command so I'm",
    "start": "808000",
    "end": "813129"
  },
  {
    "text": "using duffel here duffel is the reference implementation for scene AB it's something we've been developing along with respect to exercise the spec",
    "start": "813129",
    "end": "819120"
  },
  {
    "text": "in this case I'm selling duffel to install I'm giving it a name for my",
    "start": "819120",
    "end": "824730"
  },
  {
    "text": "application so the claim that we'll store it as I'm passing it the bundled up Jason because it's going to read that",
    "start": "824730",
    "end": "830170"
  },
  {
    "text": "so you find out which invocation image to use and I'm telling it that the bundle that Jason is a file and that",
    "start": "830170",
    "end": "835360"
  },
  {
    "text": "it's insecure because it's not signed otherwise it will it'll air out so we'll see now it's executing the install",
    "start": "835360",
    "end": "841029"
  },
  {
    "text": "action and we see hello coupon because it's gone through that it's run the",
    "start": "841029",
    "end": "846610"
  },
  {
    "text": "image and gone through that go program in the same way if I wanted to uninstall now instead of having to Reis Pesa fie",
    "start": "846610",
    "end": "853060"
  },
  {
    "text": "the bundle I can just uninstall it by name so there you go and that'll say goodbye cube Khan so that's that's a the",
    "start": "853060",
    "end": "861519"
  },
  {
    "text": "simplest possible hello world example of of C nap",
    "start": "861519",
    "end": "867300"
  },
  {
    "start": "874000",
    "end": "1127000"
  },
  {
    "text": "what so let's take a look at the hello at the ecosystem because I talked a little bit",
    "start": "874950",
    "end": "881089"
  },
  {
    "text": "about duffel so the first tool is is duffel which is hosted on the dais labs github repo it's the reference",
    "start": "881089",
    "end": "887779"
  },
  {
    "text": "implementation and it's a CLI tool so we use this primarily to exercise the specification and it's vended and a",
    "start": "887779",
    "end": "892910"
  },
  {
    "text": "bunch of the other the tools that use the CNF spec we then have a duffel bag which is a GUI tool for manipulating for",
    "start": "892910",
    "end": "900410"
  },
  {
    "text": "manipulating C abs we have Porter which is an opinionated scene app tool what",
    "start": "900410",
    "end": "906440"
  },
  {
    "text": "Porter allows you to do is build applications that require multiple tool chains using mix-ins",
    "start": "906440",
    "end": "911779"
  },
  {
    "text": "so for example you could create something that uses in Azure database but it's deploys a compose file",
    "start": "911779",
    "end": "918170"
  },
  {
    "text": "somewhere as well so that exists that uses that database and finally there's what my team is working on which is",
    "start": "918170",
    "end": "923690"
  },
  {
    "text": "docker app and that's specifically a packaging system for compose based applications they're also a bunch of",
    "start": "923690",
    "end": "931790"
  },
  {
    "text": "libraries that have come up so we have the go library which we all use there's",
    "start": "931790",
    "end": "937010"
  },
  {
    "text": "also a rust library because that's that's vegetable gareth rush grove one",
    "start": "937010",
    "end": "943250"
  },
  {
    "text": "of my colleague what about old colleagues has ripped the Python library and our team bolts seen have two OCI",
    "start": "943250",
    "end": "949970"
  },
  {
    "text": "which I'll discuss just now which is basically a tool to push scene abs to OCI registries I I met somebody at a",
    "start": "949970",
    "end": "956750"
  },
  {
    "text": "talk on actually who works Intel who also wrote one with four node Jas so I know there's even more than this that",
    "start": "956750",
    "end": "961820"
  },
  {
    "text": "exists already so when we were developing a scene apps I we asked what",
    "start": "961820",
    "end": "969470"
  },
  {
    "text": "can what infrastructure can we reuse and primarily because we're lazy we just don't want to build things from scratch",
    "start": "969470",
    "end": "976600"
  },
  {
    "text": "we also noticed that the OCI index is designed to handle a list of OCR",
    "start": "976600",
    "end": "982940"
  },
  {
    "text": "artifacts and we and we thought about this a bit and we said well see Knapp has this invocation image and a list of images so this feels like a good match",
    "start": "982940",
    "end": "990610"
  },
  {
    "text": "the problem with the OCI next is that it does not have a top-level type so we need to duck type this to make it work",
    "start": "990610",
    "end": "997310"
  },
  {
    "text": "but the the overriding design idea behind scene out OCI has been let's",
    "start": "997310",
    "end": "1003670"
  },
  {
    "text": "reuse existing OCI registries and not require modifications because it's it's just too difficult",
    "start": "1003670",
    "end": "1009379"
  },
  {
    "text": "so this is a bit of registry 101 but basically how it works is that on the on",
    "start": "1009379",
    "end": "1014599"
  },
  {
    "text": "the right hand side we have our blobs these are just binary bits of data that are pushed up that you push up to the",
    "start": "1014599",
    "end": "1020720"
  },
  {
    "text": "registry everything inside the registry is content addressed which means that when you store it the registry sends you",
    "start": "1020720",
    "end": "1026120"
  },
  {
    "text": "back and address you can then combine those blobs up into things and reference",
    "start": "1026120",
    "end": "1031490"
  },
  {
    "text": "them using what are called manifests so for example for layers you could just have about a list of layers which is a",
    "start": "1031490",
    "end": "1037069"
  },
  {
    "text": "list of addresses and you store those manifests again as a blob which you can reference from the next item so it's",
    "start": "1037069",
    "end": "1042798"
  },
  {
    "text": "kind of like this chaining process so this is what we basically did for 4c NAB's is we restore the the bundle",
    "start": "1042799",
    "end": "1049759"
  },
  {
    "text": "definition as a blob we then store the invocation image and then be 1/2 or 0 to",
    "start": "1049759",
    "end": "1055309"
  },
  {
    "text": "n images that are required by the application that's all then stored inside what's called an OCR index which",
    "start": "1055309",
    "end": "1060830"
  },
  {
    "text": "is basically just a list of manifests I left out one step we actually support multi arch which means that you can have",
    "start": "1060830",
    "end": "1068320"
  },
  {
    "text": "the OCI index the route 1 is referencing lists of indexes themselves because original the OCI index was developed for",
    "start": "1068320",
    "end": "1075379"
  },
  {
    "text": "multi arch so the idea of you can have a Python image that works on Windows Linux arm AMD etc so once again why we did",
    "start": "1075379",
    "end": "1085700"
  },
  {
    "text": "this because it works with the existing container registries this is a good thing all the images are stored in the",
    "start": "1085700",
    "end": "1090710"
  },
  {
    "text": "same repository which means that it's drastically simplifies the security in our back because if everything's in the",
    "start": "1090710",
    "end": "1097879"
  },
  {
    "text": "same place you guaranteed to get everything that you that you need for the application back you also we also",
    "start": "1097879",
    "end": "1104299"
  },
  {
    "text": "have that because the digests are fixed it's reproducible so it's it's more secure so with that I",
    "start": "1104299",
    "end": "1110899"
  },
  {
    "text": "think it's time to show you the real power of C naba so we're going to deploy a more complicated application which is",
    "start": "1110899",
    "end": "1116509"
  },
  {
    "text": "something you would normally require multiple tools to do so in this case I'm going to be deploying open fast on my",
    "start": "1116509",
    "end": "1123799"
  },
  {
    "text": "machine and installing a lambda in one step so this one I also wrote by hand so",
    "start": "1123799",
    "end": "1129860"
  },
  {
    "start": "1127000",
    "end": "1634000"
  },
  {
    "text": "this just gives you an idea that this is actually not that hard to do although people will be building tooling to make",
    "start": "1129860",
    "end": "1135019"
  },
  {
    "text": "it easier so here's my here's my directory for this one once again I have my make file to cheat for the commands I",
    "start": "1135019",
    "end": "1142010"
  },
  {
    "text": "have a bundle of Jason I have two tools I have docker up and steam out so you see I I have my invocation image folder",
    "start": "1142010",
    "end": "1148460"
  },
  {
    "text": "and a pulled Oh Jason we all get to just now so let's start with the bundled up Jason so once again we've got the same",
    "start": "1148460",
    "end": "1154370"
  },
  {
    "text": "schema version and the top parts are the same the invocation image is different because we need a different image to install this application it's a",
    "start": "1154370",
    "end": "1160250"
  },
  {
    "text": "different application I then have an image map and this lists all the images that are required for my application so",
    "start": "1160250",
    "end": "1166910"
  },
  {
    "text": "I have open fast images and things that open fast needs I then have this Python",
    "start": "1166910",
    "end": "1171980"
  },
  {
    "text": "3 Alpine image which is used for my lambda I then have credentials so I have",
    "start": "1171980",
    "end": "1177830"
  },
  {
    "text": "a username and a password which will be mounted into my invocation container at runtime I have two parameters I have",
    "start": "1177830",
    "end": "1185090"
  },
  {
    "text": "something to set the open fast gateway that I use inside my other script and I",
    "start": "1185090",
    "end": "1190280"
  },
  {
    "text": "have an image map which is just a variable that I'm using to display the image map to show you how that works",
    "start": "1190280",
    "end": "1196870"
  },
  {
    "text": "alright so once again I've got a similar structure for my invocation image I have",
    "start": "1196870",
    "end": "1203180"
  },
  {
    "text": "a docker file I have a functions folder which contains my my Python lambda I'll show you that quickly and a run-run",
    "start": "1203180",
    "end": "1209030"
  },
  {
    "text": "shell script because that was the quickest way of making this work and so I'll start with my docker file this",
    "start": "1209030",
    "end": "1216050"
  },
  {
    "text": "one's a bit more complicated so it's once again a multi-stage docker file if you don't use multistage you should it's",
    "start": "1216050",
    "end": "1222050"
  },
  {
    "text": "great the first step downloads all the bits I need for open fasts the second",
    "start": "1222050",
    "end": "1227150"
  },
  {
    "text": "step is from docker that's just referencing the docker image and then",
    "start": "1227150",
    "end": "1232460"
  },
  {
    "text": "what I do for the run step is I just copy in the things that I need so the great thing about multi-stage builds is you can build everything in one image",
    "start": "1232460",
    "end": "1238790"
  },
  {
    "text": "and have all your bull chained inside that but then leave it behind by creating a new stage and just having what you need for the runtime so here I",
    "start": "1238790",
    "end": "1246440"
  },
  {
    "text": "copy the open fast source because I'm going to be I need that for what I'm doing I copied the fast CLI I copied",
    "start": "1246440",
    "end": "1253280"
  },
  {
    "text": "docker it's the daka CLI tool i copy my functions folder and finally i copy my run dot sh script to be the the run",
    "start": "1253280",
    "end": "1260990"
  },
  {
    "text": "script that's used inside the C app so I told you I'd show you the lambda quickly it's the world's simplest land",
    "start": "1260990",
    "end": "1267670"
  },
  {
    "text": "it's simply an app and echo that will whatever you send it it sends back the",
    "start": "1267670",
    "end": "1273580"
  },
  {
    "text": "more interesting thing is my run in shell scripts so this is more complicated this is actually gonna be the thing that runs the install so",
    "start": "1273580",
    "end": "1280150"
  },
  {
    "text": "you'll see at the top here I get the scene app action and installation name you can ignore the image map part for",
    "start": "1280150",
    "end": "1285430"
  },
  {
    "text": "now I'll come back to that I create secrets so I don't want to just store my username and password as as things",
    "start": "1285430",
    "end": "1292630"
  },
  {
    "text": "inside the image I want to use darker secrets so they've securely stored I then install open fast over there they",
    "start": "1292630",
    "end": "1299680"
  },
  {
    "text": "open at the install open fast step so I go into the correct repo I do a darker stock deploy with the name I then build",
    "start": "1299680",
    "end": "1306640"
  },
  {
    "text": "my open fast function with the fast CLI I then deploy it well I sleep a little bit to make sure it's stable then I log",
    "start": "1306640",
    "end": "1313120"
  },
  {
    "text": "in deploy it and I write an installation done the uninstall step is just removing",
    "start": "1313120",
    "end": "1318730"
  },
  {
    "text": "all the pieces there all right so once again I can make the invocation image",
    "start": "1318730",
    "end": "1324160"
  },
  {
    "text": "and it's the same as what the last command was it's just building that invocation image I've done it before so",
    "start": "1324160",
    "end": "1329860"
  },
  {
    "text": "it should be relatively quick there we go except what I'm going to do when I",
    "start": "1329860",
    "end": "1335320"
  },
  {
    "text": "install this time is I'm going to use docker app as I told you this is a specification and you don't have to use",
    "start": "1335320",
    "end": "1341680"
  },
  {
    "text": "any one tool to exercise it so doctor app is the scene out compliant find the",
    "start": "1341680",
    "end": "1346870"
  },
  {
    "text": "client which means that we can install a generic scene ABS with docker app even ones that weren't generated by it so in",
    "start": "1346870",
    "end": "1353140"
  },
  {
    "text": "this case I'm gonna say doc correct install I'm gonna pass my two credentials there don't steal my my password and I've given it a name fast",
    "start": "1353140",
    "end": "1360850"
  },
  {
    "text": "and I'm telling it to use the bundle but Jason which I showed you earlier so this is doing the same thing that duffel did",
    "start": "1360850",
    "end": "1366370"
  },
  {
    "text": "before it reads the bundled up Jason runs the invocation image and injects everything inside that's needed you see",
    "start": "1366370",
    "end": "1372280"
  },
  {
    "text": "it's a really creative the secrets it's now in story installing open fasts this",
    "start": "1372280",
    "end": "1379720"
  },
  {
    "text": "takes a moment there's a bunch of services to spin up after this it builds the the lambda function which is quick",
    "start": "1379720",
    "end": "1386290"
  },
  {
    "text": "because it's just a docker build with the source code that I gave it on the Python 3 Alpine image it logs in to open",
    "start": "1386290",
    "end": "1392500"
  },
  {
    "text": "fast and deploys the function that's great so it says it's done let's let's check if that's true so if I got a",
    "start": "1392500",
    "end": "1399880"
  },
  {
    "text": "localhost 8080 which is the the place that this is installed you'll see that I have open fast installed and",
    "start": "1399880",
    "end": "1405290"
  },
  {
    "text": "even better than that I already have the echo function installed so if I had multiple things set up already I could",
    "start": "1405290",
    "end": "1410810"
  },
  {
    "text": "install all the functions at the same time and just have this atomic moving of the whole application in one go I can",
    "start": "1410810",
    "end": "1416240"
  },
  {
    "text": "test it from here by clicking the invoke",
    "start": "1416240",
    "end": "1421850"
  },
  {
    "text": "button and that works and obviously if I want to test it from the from the CLI I",
    "start": "1421850",
    "end": "1427670"
  },
  {
    "text": "can do that too so I can just do a curl and that works so that's that's all working I'm gonna uninstall it just",
    "start": "1427670",
    "end": "1437870"
  },
  {
    "text": "using docker app again because the credentials are not stored in the in the claim store I need to repass the",
    "start": "1437870",
    "end": "1443210"
  },
  {
    "text": "credentials each time I do an operation and this is just gonna run that in an install script that I had inside my run",
    "start": "1443210",
    "end": "1448730"
  },
  {
    "text": "dot SH but inside the invitation image so you go that's not installed so now that I've made this super useful",
    "start": "1448730",
    "end": "1454370"
  },
  {
    "text": "application which is just an echo function I want to probably share it with other people and so how would I do",
    "start": "1454370",
    "end": "1462140"
  },
  {
    "text": "that well that's why we built scene app to a CI so what you can do is you can push the scene app to a registry and",
    "start": "1462140",
    "end": "1472990"
  },
  {
    "text": "what that does is it pushes not only the the information you have inside the",
    "start": "1472990",
    "end": "1478100"
  },
  {
    "text": "bundle or JSON but all the images as well into the same repo and the reason that's interesting is as I said before it's reproducible you now have",
    "start": "1478100",
    "end": "1483980"
  },
  {
    "text": "everything in one place it then returns a digest that I can share with other people so so if I want to print out what this",
    "start": "1483980",
    "end": "1490970"
  },
  {
    "text": "looks like now may have changed the",
    "start": "1490970",
    "end": "1495980"
  },
  {
    "text": "digest it did",
    "start": "1495980",
    "end": "1499090"
  },
  {
    "text": "I'm going to download what the what the bundle of Jason now looks like from the information that we have inside the",
    "start": "1502190",
    "end": "1507450"
  },
  {
    "text": "registry so if we look inside this pooled blood Jason you'll see that this",
    "start": "1507450",
    "end": "1512490"
  },
  {
    "text": "is where the image map comes into play so here we have this map identification image or sorry the map of images over",
    "start": "1512490",
    "end": "1518250"
  },
  {
    "text": "here which has the key which is the original name and then we have the new image sha",
    "start": "1518250",
    "end": "1524039"
  },
  {
    "text": "so it's referenced by char instead of just by name for the for the for each of the images we can then use this when we",
    "start": "1524039",
    "end": "1533789"
  },
  {
    "text": "do the install because when we install from the registry so in this case what",
    "start": "1533789",
    "end": "1539520"
  },
  {
    "text": "I'm going to do is I'm going to be installing this application directly from the registry so I'm not using the bundle of Jason now I'm just using a",
    "start": "1539520",
    "end": "1545220"
  },
  {
    "text": "registry reference you can see I've also set the image map to true so this time it's going to print out the image map",
    "start": "1545220",
    "end": "1550650"
  },
  {
    "text": "that I've set and here you see I'm using the the reference that I had from before",
    "start": "1550650",
    "end": "1556049"
  },
  {
    "text": "although I think that let's see if this one works anyway so what this does in the background is it downloads the the",
    "start": "1556049",
    "end": "1563220"
  },
  {
    "text": "manifest from from the registry I've included that variable which printed out",
    "start": "1563220",
    "end": "1568470"
  },
  {
    "text": "my image map so here you can see I have everything I need to replace all the instances where I referenced this image",
    "start": "1568470",
    "end": "1574409"
  },
  {
    "text": "with this one which is the one that's I've pushed to my own repo it's exactly the same image what's changed here is",
    "start": "1574409",
    "end": "1580320"
  },
  {
    "text": "that it's not fetching it from the the open fast for example repo but from from mine because like I don't control the",
    "start": "1580320",
    "end": "1587280"
  },
  {
    "text": "open fast repos and maybe that image gets pulled all that tag gets changed I want to have the same thing and if we",
    "start": "1587280",
    "end": "1593130"
  },
  {
    "text": "run through the steps it's just done the same thing again and if we want to test it we can just we can just run our our",
    "start": "1593130",
    "end": "1600320"
  },
  {
    "text": "co-commander game so that's working as expected",
    "start": "1600320",
    "end": "1605179"
  },
  {
    "text": "ok so what we've done here is we have not only installed an application that's",
    "start": "1608450",
    "end": "1614070"
  },
  {
    "text": "much more complex than you'd normally expect we we installed open fasts on dr endpoints we then built a function and",
    "start": "1614070",
    "end": "1620400"
  },
  {
    "text": "installed it on that on that open fast server in one step we also managed to",
    "start": "1620400",
    "end": "1625860"
  },
  {
    "text": "share this to somebody else using a registry that it already exists I didn't have to write anything else and I think",
    "start": "1625860",
    "end": "1631440"
  },
  {
    "text": "that's a really powerful thing",
    "start": "1631440",
    "end": "1634490"
  },
  {
    "start": "1634000",
    "end": "1754000"
  },
  {
    "text": "all right so now that you've seen a little bit of how how C NAB works and what what power there is behind that",
    "start": "1643630",
    "end": "1650039"
  },
  {
    "text": "what's what's to come well it's still very much a work in progress we were still iterating on the",
    "start": "1650039",
    "end": "1655780"
  },
  {
    "text": "specification to make sure that handles every use case we specifically work to be done on the claim store things like",
    "start": "1655780",
    "end": "1661030"
  },
  {
    "text": "how do you handle distributed claim stores how do you share these applications management's of these applications there's a security aspect",
    "start": "1661030",
    "end": "1669400"
  },
  {
    "text": "so how do we sign these applications in a way that makes sense in multiple environments because it's not that easy for registries we have an answer is is",
    "start": "1669400",
    "end": "1676450"
  },
  {
    "text": "it the same for air-gapped environments or for IOT and finally the distribution",
    "start": "1676450",
    "end": "1681700"
  },
  {
    "text": "part what I showed you was synapse ROC I it's one approach to how we could share these these things by registries we're",
    "start": "1681700",
    "end": "1688809"
  },
  {
    "text": "also obviously hoping that more people will be writing tools to exercise the C nap spec we want as many people as possible to use this because we really",
    "start": "1688809",
    "end": "1695049"
  },
  {
    "text": "want to be able to share these things and leverage other what other people have built this ties into some",
    "start": "1695049",
    "end": "1701950"
  },
  {
    "text": "conversations conversations that are ongoing about outputs so what we want to be able to do is understand what a scene",
    "start": "1701950",
    "end": "1707350"
  },
  {
    "text": "ab has done or so it can communicate to another step so that we can have dependencies so if we have dependencies",
    "start": "1707350",
    "end": "1712990"
  },
  {
    "text": "you could do things like install a database and then have another scene AB that deploys an application that depends",
    "start": "1712990",
    "end": "1718179"
  },
  {
    "text": "on that yeah so what do we need from you",
    "start": "1718179",
    "end": "1723940"
  },
  {
    "text": "well we need you to get involved we have as I said we have open meetings every",
    "start": "1723940",
    "end": "1729400"
  },
  {
    "text": "second Wednesday from at 9:00 a.m. u.s. Pacific time we have the spec up on",
    "start": "1729400",
    "end": "1734890"
  },
  {
    "text": "github at this Labs CF spec we have Twitter accounts and this website a",
    "start": "1734890",
    "end": "1741039"
  },
  {
    "text": "scene app dot IO that has everything you need to know about scene app if you'd like to find out more right and all the",
    "start": "1741039",
    "end": "1747580"
  },
  {
    "text": "demos as I said in my presentation or up and gets up if you'd like to grab them and and play with me yourselves ok right",
    "start": "1747580",
    "end": "1753669"
  },
  {
    "text": "thanks a run yeah",
    "start": "1753669",
    "end": "1757440"
  },
  {
    "start": "1754000",
    "end": "2225000"
  },
  {
    "text": "questions",
    "start": "1760940",
    "end": "1763940"
  },
  {
    "text": "I develops company so I have a question",
    "start": "1769330",
    "end": "1777460"
  },
  {
    "text": "can I use yellow files yes you can so",
    "start": "1777460",
    "end": "1783429"
  },
  {
    "text": "the application definition escena is wait what do you mean yellow files for the bundle of Jason or for the fusion so",
    "start": "1783429",
    "end": "1791289"
  },
  {
    "text": "for the for the application yes you can so the the invocation image will contain you can have llamo files in fact the one",
    "start": "1791289",
    "end": "1797649"
  },
  {
    "text": "that I showed now does actually have a yellow file because the open fast like",
    "start": "1797649",
    "end": "1803139"
  },
  {
    "text": "the deployment thing for the daca stack deploy is a composer mol file so it doesn't matter what you use to find your",
    "start": "1803139",
    "end": "1809080"
  },
  {
    "text": "application it'll work no I mean definition instead of ji-sun oh you mean",
    "start": "1809080",
    "end": "1814629"
  },
  {
    "text": "for the bundle definition you know I think red who has strong opinions about this is sitting over there I think it I think it used to be trouble at some",
    "start": "1814629",
    "end": "1820960"
  },
  {
    "text": "stage and then it moved to Jason yes",
    "start": "1820960",
    "end": "1829659"
  },
  {
    "text": "second question is how can I keep my secrets in a secure manner so seen app",
    "start": "1829659",
    "end": "1836230"
  },
  {
    "text": "doesn't handle that problem in this case I use docker secret and you could easily use cuban eddie secrets or whatever else",
    "start": "1836230",
    "end": "1843460"
  },
  {
    "text": "you are using it completely depends on your application right because if you're deploying to cuban eddies you could use communities secrets but if you're for",
    "start": "1843460",
    "end": "1849909"
  },
  {
    "text": "example deploying on iot where you don't have an Orchestrator you'll probably want to use something different so it's it's kind of a lower level problem for",
    "start": "1849909",
    "end": "1857080"
  },
  {
    "text": "us we don't have a meta solution for that problem sorry I can use secrets in",
    "start": "1857080",
    "end": "1868330"
  },
  {
    "text": "decent definition yeah so they it it'll be down to the invocation image as into",
    "start": "1868330",
    "end": "1874779"
  },
  {
    "text": "exactly how it does that but yes when it inside the bundle definition you define what is sensitive and what is not and",
    "start": "1874779",
    "end": "1880720"
  },
  {
    "text": "then it's up to your installer to decide how to handle that secret information yes so how can is URI we don't we don't",
    "start": "1880720",
    "end": "1889480"
  },
  {
    "text": "solve the problem in our level we're we're a packaging format so it's up to the underlying runtime to handle the",
    "start": "1889480",
    "end": "1895769"
  },
  {
    "text": "securing the secrets ok sinks",
    "start": "1895769",
    "end": "1901440"
  },
  {
    "text": "yeah sorry I'm a sucker a walk in our esteem and actually years away we pass",
    "start": "1909190",
    "end": "1914739"
  },
  {
    "text": "parent rose to the invocation image I I don't know if it's already yet or it's still in progress but what we do is we",
    "start": "1914739",
    "end": "1922539"
  },
  {
    "text": "use a similar fashion as our cubelet inject service credentials",
    "start": "1922539",
    "end": "1928019"
  },
  {
    "text": "that's it that's using a Tempe fess and a temporary file system in memory in the",
    "start": "1928019",
    "end": "1937629"
  },
  {
    "text": "invocation image container and we we just put that I in there so it's not persisted on the on disk just something",
    "start": "1937629",
    "end": "1945580"
  },
  {
    "text": "valid ID and we also don't pass this button in the claim store for obvious",
    "start": "1945580",
    "end": "1951279"
  },
  {
    "text": "obvious security reason yes we do the best we can but it's not we don't manage",
    "start": "1951279",
    "end": "1957759"
  },
  {
    "text": "the life of the secret afterwards sorry maybe I misunderstood the question yep we saw the store and only stole",
    "start": "1957759",
    "end": "1965919"
  },
  {
    "text": "functionality do you have something like upgrade like helm do we have something",
    "start": "1965919",
    "end": "1971379"
  },
  {
    "text": "like like upgrade make sure you like yeah or do you have something installed and now you want to put the new version there yes so we have the three required",
    "start": "1971379",
    "end": "1980249"
  },
  {
    "text": "commands which I didn't show all of them I ensured install uninstall but the third one is upgrade which is",
    "start": "1980249",
    "end": "1985330"
  },
  {
    "text": "essentially the ability to to upgrade the application that could be changing parameters or credentials or it could be",
    "start": "1985330",
    "end": "1991840"
  },
  {
    "text": "changing the bundle reference itself so those are the three required ones you",
    "start": "1991840",
    "end": "1997090"
  },
  {
    "text": "can also add custom actions so in docker app we have a bunch of custom actions like inspect and render and some other",
    "start": "1997090",
    "end": "2003419"
  },
  {
    "text": "things that are specific to our tool so that remember this is a specification so it just aims to facilitate people",
    "start": "2003419",
    "end": "2011070"
  },
  {
    "text": "building tools it's not it doesn't do the actual tool building",
    "start": "2011070",
    "end": "2016220"
  },
  {
    "text": "hello then I want to know what happened with those application that needs an",
    "start": "2021780",
    "end": "2027190"
  },
  {
    "text": "external resources to be there presently could be an s3 bucket or and RDS",
    "start": "2027190",
    "end": "2032679"
  },
  {
    "text": "database he's done away to deploy that interested to work with the application",
    "start": "2032679",
    "end": "2038320"
  },
  {
    "text": "yes so that's the point of seen as such is that it lets you do that it doesn't",
    "start": "2038320",
    "end": "2043419"
  },
  {
    "text": "do it for you but it lets people who are building tools so Jeremy who's sitting just next to you it's actually solved that problem in Porter but so basically",
    "start": "2043419",
    "end": "2051070"
  },
  {
    "text": "what it lets you do for example as you saw in my my example I installed open fast and then I installed a function on",
    "start": "2051070",
    "end": "2056440"
  },
  {
    "text": "top in the same way you could deploy a cuban eddie's cluster deploy an RDS",
    "start": "2056440",
    "end": "2062230"
  },
  {
    "text": "database and then install the helm charts in one step so it's designed to solve exactly that problem at the spec",
    "start": "2062230",
    "end": "2069070"
  },
  {
    "text": "level once again so the spec itself doesn't do it I didn't show the RDS",
    "start": "2069070",
    "end": "2077888"
  },
  {
    "text": "database example because I don't trust the Wi-Fi hello I see is that you used",
    "start": "2077889",
    "end": "2086669"
  },
  {
    "text": "services what can we use Cubert entities deployment or ports so",
    "start": "2086790",
    "end": "2094840"
  },
  {
    "text": "this was just my example because I did a darker stock deploy on swarm you could do a darker stock deploy on Cuban Eddie's you could do a cube cuddle apply",
    "start": "2094840",
    "end": "2101500"
  },
  {
    "text": "with your own thing I it can be anything there's no it's not constrained at all so at that it's you must think of Sina",
    "start": "2101500",
    "end": "2108550"
  },
  {
    "text": "this kind of like the msi of the cloud or RPM where it's just a packaging format it doesn't care what you do",
    "start": "2108550",
    "end": "2113740"
  },
  {
    "text": "underneath ok",
    "start": "2113740",
    "end": "2117660"
  },
  {
    "text": "for sharing you say that there is a registry involved what about if I want to don't want to use the registry and",
    "start": "2125170",
    "end": "2131960"
  },
  {
    "text": "and this can be used for the air-gapped environment well I don't have a registry I have a scene that bundle but I don't",
    "start": "2131960",
    "end": "2138410"
  },
  {
    "text": "want to share with so that's still work-in-progress it will probably depend on exactly how",
    "start": "2138410",
    "end": "2145220"
  },
  {
    "text": "we store these in registries to some extent either we will have a well-defined tar format or we will use",
    "start": "2145220",
    "end": "2151460"
  },
  {
    "text": "the OCI layout image layout because for container images we have the same",
    "start": "2151460",
    "end": "2156770"
  },
  {
    "text": "problem and so if we use container privet set primitives inside registries to store these we can just leverage the",
    "start": "2156770",
    "end": "2162349"
  },
  {
    "text": "same solution for that so it's still a work in progress but we will have a solution for that I think how you define",
    "start": "2162349",
    "end": "2170829"
  },
  {
    "text": "dependencies between services so in the database example I need the database running first and",
    "start": "2170829",
    "end": "2176510"
  },
  {
    "text": "then I want to deploy something that relies on that database afterwards is that how you were talking about using multiple bundles or is it can you do",
    "start": "2176510",
    "end": "2182780"
  },
  {
    "text": "that within one bundle as well so there's there's both streams as such inside the bundle inside the invocation",
    "start": "2182780",
    "end": "2188420"
  },
  {
    "text": "images itself it's up to you to manage your own dependencies so in this case I needed to get my docker CLI my fast CLI",
    "start": "2188420",
    "end": "2194359"
  },
  {
    "text": "and everything else there is work being done particularly by the people working on Porter who are more interested in how",
    "start": "2194359",
    "end": "2201680"
  },
  {
    "text": "do we link scene apps together so you know what is this what is the output of this one and what can be then consumed",
    "start": "2201680",
    "end": "2208099"
  },
  {
    "text": "by another scene app so this one provides a RDS database this one deploys a home chart and we can link those two",
    "start": "2208099",
    "end": "2214010"
  },
  {
    "text": "together yeah so it's two levels yeah that's it right thank you everyone for",
    "start": "2214010",
    "end": "2219170"
  },
  {
    "text": "coming to my talk I hope you enjoy this [Applause]",
    "start": "2219170",
    "end": "2227038"
  }
]