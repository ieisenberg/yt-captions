[
  {
    "text": "we're going to start today's threat detection session on miter attack and Falco so what we're going to achieve",
    "start": "1079",
    "end": "7600"
  },
  {
    "text": "today is we're going to use Falco as our IDs or threat detection tool to detect",
    "start": "7600",
    "end": "13240"
  },
  {
    "text": "the tactics techniques and procedures associate with the miter attack framework and we'll use Atomic red team",
    "start": "13240",
    "end": "19400"
  },
  {
    "text": "tool to actually generate those test scenarios so to start what is Falco um a",
    "start": "19400",
    "end": "25000"
  },
  {
    "text": "lot of people showing today already know what Falco is so it's a open standard for cloud native threat detection again",
    "start": "25000",
    "end": "31199"
  },
  {
    "text": "it's widely used uh especially in the cloud native compute Foundation ecosystem uh it has over a 100",
    "start": "31199",
    "end": "37680"
  },
  {
    "text": "contributing companies over 50 million downloads uh these companies range from some of the largest fintech",
    "start": "37680",
    "end": "43680"
  },
  {
    "text": "organizations uh to software developers and other Industries um so with that",
    "start": "43680",
    "end": "49079"
  },
  {
    "text": "we'll look at what is miter attack a miter attack uh framework or the Matrix",
    "start": "49079",
    "end": "55000"
  },
  {
    "text": "um is a way of seeing the as I say earlier the tactics and techniques um",
    "start": "55000",
    "end": "60079"
  },
  {
    "text": "across the the kill chain within your environment so things like reconnaissance through initial access",
    "start": "60079",
    "end": "65478"
  },
  {
    "text": "all the way to impact data exfiltration that kind of stuff so it's a way of categorizing at what stage is an attack",
    "start": "65479",
    "end": "72400"
  },
  {
    "text": "happening in your environment is it early access or is it something that's Data Destruction is happening later on",
    "start": "72400",
    "end": "78600"
  },
  {
    "text": "once they've gained um uh persistence with your environment now in order to",
    "start": "78600",
    "end": "84360"
  },
  {
    "text": "understand we won't go through every single tactic and technique in this session what we'll do is we'll cover a few test scenarios that we can generate",
    "start": "84360",
    "end": "90560"
  },
  {
    "text": "through Atomic red um and again we'll give context around those tests as we're performing them now why are we using",
    "start": "90560",
    "end": "96360"
  },
  {
    "text": "Atomic red um just like Falco um Atomic Red Is An Open Source solution um",
    "start": "96360",
    "end": "102799"
  },
  {
    "text": "security teams can quickly use it for free um it's portable uh it's way to consistently reproduce the same test",
    "start": "102799",
    "end": "109040"
  },
  {
    "text": "scenarios uh irrespective of who's performing the test you know they're already preconfigured and what they do",
    "start": "109040",
    "end": "115040"
  },
  {
    "text": "is they are mapped to the miter attack Matrix so when you look at these T numbers um think of the tactics and",
    "start": "115040",
    "end": "121320"
  },
  {
    "text": "techniques that we see in miter attack and you can quickly map the different tactics that are being performed and see",
    "start": "121320",
    "end": "128119"
  },
  {
    "text": "if Falco is able to detect those in real time now why is Falco a good tool for",
    "start": "128119",
    "end": "133319"
  },
  {
    "text": "this kind of uh exercise well the first point is it use a system called architecture so what that allows us to",
    "start": "133319",
    "end": "139120"
  },
  {
    "text": "see is anything from an application uh anything happening from kubernetes the oper operating system essentially it's",
    "start": "139120",
    "end": "146599"
  },
  {
    "text": "kernel activity so we can look at process activity Network read write activity file IO um a bunch of different",
    "start": "146599",
    "end": "153560"
  },
  {
    "text": "scenarios the other way of looking at is it's real time so as a system call is executed we can then process that and",
    "start": "153560",
    "end": "160560"
  },
  {
    "text": "Trigger the event in real time and we'll go through all this further in context throughout the session the important",
    "start": "160560",
    "end": "166760"
  },
  {
    "text": "thing we're going to start with is the rule structure so Falco already has some",
    "start": "166760",
    "end": "172200"
  },
  {
    "text": "rules that are preconfigured but we will have to create our own uh in the case of where we don't have miter attack",
    "start": "172200",
    "end": "179040"
  },
  {
    "text": "alignment um so the first thing to note is it has this arbitrary name or rule name that",
    "start": "179040",
    "end": "184080"
  },
  {
    "text": "you give um and the description is just some additional context around that now the the most important part that we can",
    "start": "184080",
    "end": "190400"
  },
  {
    "text": "look at within this rule structure is the condition so with Falco rules you can Define you know like a list and a",
    "start": "190400",
    "end": "197879"
  },
  {
    "text": "list could be just items that are listed um you can also create a macro and a macro is some kind of other arbitrary",
    "start": "197879",
    "end": "204560"
  },
  {
    "text": "context so you could say look for these items and these other items or these items without some other context you can",
    "start": "204560",
    "end": "212120"
  },
  {
    "text": "put that into a macro and that way we can add like deeper context uh rather",
    "start": "212120",
    "end": "218040"
  },
  {
    "text": "than just looking for a specific uh system call that's being performed we can actually correlate a bunch of",
    "start": "218040",
    "end": "223519"
  },
  {
    "text": "different contexts within those macros and those macros build up or condition set within the rule the output is",
    "start": "223519",
    "end": "230040"
  },
  {
    "text": "essentially what you see in the alert so it's usually some kind of string like in this case a shell was spond in a",
    "start": "230040",
    "end": "236439"
  },
  {
    "text": "container but then the system called fields that were handling we inject",
    "start": "236439",
    "end": "241560"
  },
  {
    "text": "those fields you can see they've got the little uh percentage sign at the end so um what we're doing here is we're",
    "start": "241560",
    "end": "247200"
  },
  {
    "text": "populating the fields so like username or process name or container ID or command line argument we put those into",
    "start": "247200",
    "end": "254079"
  },
  {
    "text": "the populated Fields so that when those context from the condition set is triggered and it's matching it has to be",
    "start": "254079",
    "end": "260880"
  },
  {
    "text": "a spawn process and it's a container and it's a shell a spawn process to know it's a terminal shell then we'll tell",
    "start": "260880",
    "end": "266960"
  },
  {
    "text": "you exactly what command was performed from which container ID that kind of context for the alert then you can set",
    "start": "266960",
    "end": "274360"
  },
  {
    "text": "priorities so is the alert informational is it something lower priority is it warning is it something like a critical",
    "start": "274360",
    "end": "280680"
  },
  {
    "text": "activity that's most certainly considered you know something we should be worried about and then tags are part",
    "start": "280680",
    "end": "286199"
  },
  {
    "text": "of that kind of automation context so we could say in this case is it aligned with miter execution or specifically",
    "start": "286199",
    "end": "292800"
  },
  {
    "text": "shell activity now I mentioned earlier about those things in the conditional set",
    "start": "292800",
    "end": "298600"
  },
  {
    "text": "those are your lists and macros so a list as I say could be a list of um IP",
    "start": "298600",
    "end": "303680"
  },
  {
    "text": "addresses it could be fully qualified domains um macros are also a way of just looking for additional context you can",
    "start": "303680",
    "end": "310160"
  },
  {
    "text": "have macros embedded within macros so you can be as deep within contexts as you want so in this case we have shell",
    "start": "310160",
    "end": "315960"
  },
  {
    "text": "processes which is looking for anything that's a process that's listed in under shell binaries and then you see that",
    "start": "315960",
    "end": "321919"
  },
  {
    "text": "shell binaries again has the additional context of what defines a shell binary",
    "start": "321919",
    "end": "327240"
  },
  {
    "text": "exactly so with all that context known what we're going to do is uh create some",
    "start": "327240",
    "end": "333400"
  },
  {
    "text": "custom rules eventually and tag those now the perfect example here is where we see uh it's tagged with miter command",
    "start": "333400",
    "end": "340560"
  },
  {
    "text": "and control so it might be in the case of a disallowed SSH connection it it definitely it's a potential command and",
    "start": "340560",
    "end": "347039"
  },
  {
    "text": "control example so a user is trying to speak to a C2 server or from a C2 server to perform that SSH connection to your",
    "start": "347039",
    "end": "354080"
  },
  {
    "text": "remote environment but also could be an example of lateral movement so it's someone's trying to move laterally into",
    "start": "354080",
    "end": "359280"
  },
  {
    "text": "your Cloud environment and again performing an SSH attempt on that so you",
    "start": "359280",
    "end": "364520"
  },
  {
    "text": "may need to tag with different context and again you might want to also tag it with is the T number itself with the",
    "start": "364520",
    "end": "370680"
  },
  {
    "text": "tactic and sub technique associated with that now in case you're thinking we're",
    "start": "370680",
    "end": "376280"
  },
  {
    "text": "building all these arbitrary rules uh ourselves actually a lot of them are already baked in by default uh in the",
    "start": "376280",
    "end": "382240"
  },
  {
    "text": "case of system calls or system rules uh again this number is probably changing regularly but at the time of writing",
    "start": "382240",
    "end": "389000"
  },
  {
    "text": "this there were 65 system calls uh rules and then similarly for things like kubernetes it has its own audit log",
    "start": "389000",
    "end": "395840"
  },
  {
    "text": "rules and there's about 40 out of the box rules for that so in the case of the most common scenarios there's already a",
    "start": "395840",
    "end": "401479"
  },
  {
    "text": "default rule but of course when we're trying to extend our miter coverage we can build our own custom rules to extend",
    "start": "401479",
    "end": "408160"
  },
  {
    "text": "our coverage across the scope um as I say it's not limited to just kubernetes container system call",
    "start": "408160",
    "end": "414880"
  },
  {
    "text": "activity we also can handle uh you know event sources from different uh you know",
    "start": "414880",
    "end": "421080"
  },
  {
    "text": "audit logging sources so things like uh AWS cloud trail as is as a source we",
    "start": "421080",
    "end": "426599"
  },
  {
    "text": "could stream those events to Falco and of course perform the alerting on it it's not limited to just cloud trail of",
    "start": "426599",
    "end": "433759"
  },
  {
    "text": "course um whatever uh application you have that generates real-time events so",
    "start": "433759",
    "end": "439000"
  },
  {
    "text": "it's a an audit logging source of course we should be able to handle those process those and Trigger alerts based",
    "start": "439000",
    "end": "445800"
  },
  {
    "text": "on it so it's an exciting tool for extending cover not just on hosts and containers but",
    "start": "445800",
    "end": "452160"
  },
  {
    "text": "into other third party applications that you use every day in your environment the thing I'm just going to",
    "start": "452160",
    "end": "457440"
  },
  {
    "text": "close off because I don't want this to be a slide deck I'd prefer this to be an interactive session is being able to",
    "start": "457440",
    "end": "462560"
  },
  {
    "text": "view the rules so what we're going to do is as you can see in this example we go into we web UI uh search for miter",
    "start": "462560",
    "end": "468960"
  },
  {
    "text": "related context and then we'll pick the rules that are most relevant to the tids that we're trying to perform execution",
    "start": "468960",
    "end": "474599"
  },
  {
    "text": "tests on if we can't find a relevant example then we've know where our coverage lacking and where we can",
    "start": "474599",
    "end": "480199"
  },
  {
    "text": "generate new scenarios so with that I'm going to go into this test environment um it's the",
    "start": "480199",
    "end": "486720"
  },
  {
    "text": "instruct environment uh I'm just going to start by yeah clicking on the start button but one thing that's also worth",
    "start": "486720",
    "end": "493039"
  },
  {
    "text": "pointing out is uh these instruct labs are a great way for people to just interactively go in the browser and test",
    "start": "493039",
    "end": "499039"
  },
  {
    "text": "the scenario I've built myself so if you want to know like watch a video about how we do the whole test scenarios",
    "start": "499039",
    "end": "505240"
  },
  {
    "text": "locally or even just you want to start deploying Falco performing some arbitrary test yourself this is a great",
    "start": "505240",
    "end": "511159"
  },
  {
    "text": "place to get started so with that I'm going to create a network names space called",
    "start": "511159",
    "end": "516560"
  },
  {
    "text": "Falco in the Falco Network namespace I want to deploy Falco itself so we're using Helm for the deployment process",
    "start": "516560",
    "end": "522880"
  },
  {
    "text": "here now you might be wondering when you see it that there's a lot of feature Flags one is setting TTY set to true so",
    "start": "522880",
    "end": "529440"
  },
  {
    "text": "essentially for real-time detection we need that setting to happen um we also have some kind of run k3s example so for",
    "start": "529440",
    "end": "537720"
  },
  {
    "text": "uh our collector we actually set set specific Source relevant socket context so I said Cube CTL get nodes so uh the",
    "start": "537720",
    "end": "545320"
  },
  {
    "text": "host itself and- wide you can actually see that the version of the node we're running has this uh version 1.21 but",
    "start": "545320",
    "end": "553200"
  },
  {
    "text": "also it's the k3s example so it's just a single node cluster it's basically any normal auntu image but we are using it",
    "start": "553200",
    "end": "561040"
  },
  {
    "text": "as k3s now if we go down further through the test scenarios you can watch to check for status changes so Falco is",
    "start": "561040",
    "end": "568720"
  },
  {
    "text": "nearly ready it's one out of two ready and it's running we wait for it to be",
    "start": "568720",
    "end": "573920"
  },
  {
    "text": "two out of two ready and then we should be able to check for this uh conditional set so actually I can just run uh weight",
    "start": "573920",
    "end": "581120"
  },
  {
    "text": "pods check for condition if it tells us it's ready then it's yeah now we have conditional met so it should be two out",
    "start": "581120",
    "end": "588680"
  },
  {
    "text": "of two ready now knowing this context knowing that Falco was deployed successfully via help we can perform our",
    "start": "588680",
    "end": "594760"
  },
  {
    "text": "first test so the first thing I want to do is it's just a simple fine command so finding in the route directory um some",
    "start": "594760",
    "end": "602040"
  },
  {
    "text": "context so some credentials going back to Falco we just need run a single line command which is Falco logs and you can",
    "start": "602040",
    "end": "609800"
  },
  {
    "text": "see that we already triggered our first event so the uh alert is this warning",
    "start": "609800",
    "end": "615320"
  },
  {
    "text": "grp private keys or private activities that were found as I mentioned earlier we can go to uh uh this web UI and you",
    "start": "615320",
    "end": "622760"
  },
  {
    "text": "can look up something like grep and you can look at what is the context that builds up these list of grep activities",
    "start": "622760",
    "end": "630320"
  },
  {
    "text": "um or we can actually just look for the rule itself that was triggered again you can go in you can look in further about",
    "start": "630320",
    "end": "636839"
  },
  {
    "text": "how the rule is built so if you want to extend on it of course we can extend our coverage even in on existing rules so",
    "start": "636839",
    "end": "643600"
  },
  {
    "text": "with that we've DET triggered a very simple test scenario we've shown how we're using cctl logs and checking for",
    "start": "643600",
    "end": "650000"
  },
  {
    "text": "the actual falal container um for any events that are triggered and then grapping for again that specific rule",
    "start": "650000",
    "end": "656639"
  },
  {
    "text": "that we're triggering now if you weren to use the grap of course you can look at all",
    "start": "656639",
    "end": "661920"
  },
  {
    "text": "events that are triggered off Falco but for the purpose of this lab we want to focus on isolated cases associated with",
    "start": "661920",
    "end": "668639"
  },
  {
    "text": "those specific tactics we want to perform so the next thing we want to do is install Atomic red so we like with",
    "start": "668639",
    "end": "675519"
  },
  {
    "text": "FAL we created a nam space called Atomic red we've made the process a little easier here so we've made the image",
    "start": "675519",
    "end": "681519"
  },
  {
    "text": "external so now you can just create a kubernetes deployment unlike using the helm process with this we just specify",
    "start": "681519",
    "end": "688240"
  },
  {
    "text": "the hosted IM which is the atomic red latest and other than that everything else is pretty much standard we know",
    "start": "688240",
    "end": "694920"
  },
  {
    "text": "there's one single pod is going to be created we understand that the security context in order to perform a lot of the",
    "start": "694920",
    "end": "700920"
  },
  {
    "text": "actions um within the miter attack table it needs privilege permissions so we set security context with privilege set to",
    "start": "700920",
    "end": "707639"
  },
  {
    "text": "true so with that we've done our deployment it should be relatively straightforward so if I say Cube CTL get",
    "start": "707639",
    "end": "713480"
  },
  {
    "text": "pods you can see that it's container creating now it's running so it's very",
    "start": "713480",
    "end": "718519"
  },
  {
    "text": "quick that whole deployment process 29 seconds in total to execute now with that once Atomic Red's deployed there's",
    "start": "718519",
    "end": "725440"
  },
  {
    "text": "nothing else left to do on this section we can move to the next part of the lab now once we have Atomic red and we",
    "start": "725440",
    "end": "732760"
  },
  {
    "text": "have Falco the best way to execute or show this realtime detection is to",
    "start": "732760",
    "end": "737839"
  },
  {
    "text": "perform a kind of a split screen so on one side we'll have uh we'll execute into the Container which is the atomic",
    "start": "737839",
    "end": "744079"
  },
  {
    "text": "red pod and then on the right side view we're going to do that command we saw earlier which is the the cube CTL logs",
    "start": "744079",
    "end": "751600"
  },
  {
    "text": "um it's taking just a few moments to load up here uh in the meantime like I say on the top of the bar here you have",
    "start": "751600",
    "end": "758360"
  },
  {
    "text": "this Atomic red reference um in each of the tabs you can click on the reference Doc and that's a great way to just check",
    "start": "758360",
    "end": "765160"
  },
  {
    "text": "you know what is the relevant T number that we're looking at right now and how can we um interact with that trigger",
    "start": "765160",
    "end": "771000"
  },
  {
    "text": "those test scenarios so the first test scenario we're looking at here is um we",
    "start": "771000",
    "end": "776920"
  },
  {
    "text": "have T10 70 now we can do two things you",
    "start": "776920",
    "end": "782360"
  },
  {
    "text": "can either go to the atomic red reference doc which will take us externally to the GitHub repo for Red",
    "start": "782360",
    "end": "788959"
  },
  {
    "text": "Canary who managed the atomic RED project and this will give us the context about what's happening here so",
    "start": "788959",
    "end": "794680"
  },
  {
    "text": "it's an indicator of removal so it's file deletion as you can see here now there's a bunch of tests so they'll tell",
    "start": "794680",
    "end": "800399"
  },
  {
    "text": "us there's deleting a single file or an entire folder in the case of a Linux or",
    "start": "800399",
    "end": "805639"
  },
  {
    "text": "Mac OS uh like Unix type system you case of Windows systems you know you can do",
    "start": "805639",
    "end": "810880"
  },
  {
    "text": "the same executed tasks but again it's it it'll understand the environment is running in and perform the relevant",
    "start": "810880",
    "end": "816800"
  },
  {
    "text": "Associated tests now the nice thing is we don't have to keep jumping back to Atomic red tests the first thing we want",
    "start": "816800",
    "end": "822880"
  },
  {
    "text": "to do is just power shell in so we mentioned we execute in or exec into the",
    "start": "822880",
    "end": "828320"
  },
  {
    "text": "atomic red deployment so in that case if I run this PO shell within the session you can see now I'm running as root",
    "start": "828320",
    "end": "834639"
  },
  {
    "text": "power shell um if I run this import module what I'm doing is is importing the test scenario um for the atomic red",
    "start": "834639",
    "end": "842199"
  },
  {
    "text": "test now there's a bunch of things we can do there's a bunch of different feature Flags so if you want to show the details associated with it you can use",
    "start": "842199",
    "end": "849560"
  },
  {
    "text": "the feature flag show details and that gives us some context about what is happening here so we mentioned it's all",
    "start": "849560",
    "end": "855839"
  },
  {
    "text": "to do with file deletion so as we say they're all Linux specific tests we're performing here because we're running it",
    "start": "855839",
    "end": "861440"
  },
  {
    "text": "in a you know in auntu uh imagees we mentioned in the first part of the the session so you can see they kind of the",
    "start": "861440",
    "end": "868279"
  },
  {
    "text": "actual command that's being executed so it doesn't need elevated permissions in this case the attack command can be",
    "start": "868279",
    "end": "874120"
  },
  {
    "text": "performed as a standard user and it just Echoes out this uh you can see RM for",
    "start": "874120",
    "end": "879240"
  },
  {
    "text": "remove and some other arbitrary context we don't need to look into all the specific context here but what we need",
    "start": "879240",
    "end": "885000"
  },
  {
    "text": "to know is what exactly is the test doing first of all which is file deletion so what I've done is I'm looking for anything related to this",
    "start": "885000",
    "end": "892279"
  },
  {
    "text": "bulk data has been removed from disk because I know that out of the box there should be this uh bulk file deletion see",
    "start": "892279",
    "end": "900560"
  },
  {
    "text": "the way we by default we have a rule for bulk data deletion and importantly when",
    "start": "900560",
    "end": "906199"
  },
  {
    "text": "we look at the context associated with it we can see that again uh does have the relevant tagging so for the relevant",
    "start": "906199",
    "end": "914040"
  },
  {
    "text": "miter attack tactics and the T number associated with it and what it does it apply to this process activity container",
    "start": "914040",
    "end": "921079"
  },
  {
    "text": "and file system on the host so going back into our environment we want to execute those tests so the next thing",
    "start": "921079",
    "end": "928040"
  },
  {
    "text": "might be checking for prerequisits do you have prerequisite checks done that allow for you to perform this executed",
    "start": "928040",
    "end": "933920"
  },
  {
    "text": "test you can see here there's no specific prerequisites defined or required for this case so it can",
    "start": "933920",
    "end": "939759"
  },
  {
    "text": "actually do the deletion activity without you needing to do some additional custom configuration so the",
    "start": "939759",
    "end": "945720"
  },
  {
    "text": "last thing I'll do is I'll actually execute the test and it's as simple as running inoke Atomic test against the T",
    "start": "945720",
    "end": "951440"
  },
  {
    "text": "number which was T1 070 against the sub uh number so I paste the test in and you",
    "start": "951440",
    "end": "959279"
  },
  {
    "text": "see that on the right side view we're looking for qctl logs I'm using the- F against the F we're using the tail",
    "start": "959279",
    "end": "965680"
  },
  {
    "text": "command at zero so it's looking for anything that's quite literally happening right now in the network name",
    "start": "965680",
    "end": "971040"
  },
  {
    "text": "space Falco against the container Falco and again we're doing it by um label",
    "start": "971040",
    "end": "976480"
  },
  {
    "text": "we're looking for that specific matching label so that again there's only one part in that Network namespace that matches the label of name equals Falco",
    "start": "976480",
    "end": "985279"
  },
  {
    "text": "so yeah there we go I'm perform my first test every time it's performed on the left side the second it's executed on",
    "start": "985279",
    "end": "991519"
  },
  {
    "text": "the right side I get the real time detection so perfect we've proven first",
    "start": "991519",
    "end": "996600"
  },
  {
    "text": "VA Falco detects fall deletion out of the box because we have the preconfigured rule there's no kind of a",
    "start": "996600",
    "end": "1003120"
  },
  {
    "text": "um you know it's not a black box in this case it's it's all very transparent about the rules that we provide and uh",
    "start": "1003120",
    "end": "1009480"
  },
  {
    "text": "there there is visibility again through this UI about what rules we've already created out of the box so there's",
    "start": "1009480",
    "end": "1015639"
  },
  {
    "text": "nothing else we need to do here the rule already exists out by the default rule feed and by invoking test we see on the",
    "start": "1015639",
    "end": "1021519"
  },
  {
    "text": "right side view in real time the detections occurring so we're going to move on to the next test scenario in our",
    "start": "1021519",
    "end": "1027319"
  },
  {
    "text": "session so the next one should be related to I believe it's going to be",
    "start": "1027319",
    "end": "1032959"
  },
  {
    "text": "like an escape from container scenario so we'll go back to start and again looking at the um the this introduction",
    "start": "1032959",
    "end": "1041600"
  },
  {
    "text": "it tells us yeah breaking out of a container so adver adversaries might want to break out of a container as a",
    "start": "1041600",
    "end": "1046640"
  },
  {
    "text": "way of gaining access to the host so this test scenario is going to be a breakout from container and we want to",
    "start": "1046640",
    "end": "1051720"
  },
  {
    "text": "be able to detect some unusual Network execution so in this case detecting like",
    "start": "1051720",
    "end": "1057000"
  },
  {
    "text": "a network tool that was launched within a container is a perfect example of how uh an adversary might want to move",
    "start": "1057000",
    "end": "1063200"
  },
  {
    "text": "laterally out of that environment so we start in the same place we start on the left side from the atomic red test and",
    "start": "1063200",
    "end": "1068320"
  },
  {
    "text": "the right side is Falco so knowing how we do all of these we always have to uh",
    "start": "1068320",
    "end": "1073520"
  },
  {
    "text": "Powershell in and then we need to import the specific test so you'll see every time we import uh the relevant test",
    "start": "1073520",
    "end": "1081720"
  },
  {
    "text": "scenarios um I don't know why it's not importing if I was to copy go back here",
    "start": "1081720",
    "end": "1086760"
  },
  {
    "text": "paste maybe I try quitting and pasting again okay that works fine so we import",
    "start": "1086760",
    "end": "1091960"
  },
  {
    "text": "our test scenario uh it's best practice to perform a cleanup so you always use uh the dash clean at the end uh again if",
    "start": "1091960",
    "end": "1099760"
  },
  {
    "text": "you were doing this in your own environment to make sure you're not importing through other junk tests between each test scenario so with that",
    "start": "1099760",
    "end": "1106760"
  },
  {
    "text": "we can show our details again um as we mentioned we want to detect um",
    "start": "1106760",
    "end": "1112679"
  },
  {
    "text": "specific Network Tools that are being used Now by checking the details view we get again the context of the commands",
    "start": "1112679",
    "end": "1118280"
  },
  {
    "text": "that are being used so if config if it was uh netcat we know what tools are being used here so in our case we could",
    "start": "1118280",
    "end": "1125240"
  },
  {
    "text": "create some very simple arbitrary rule that says if I see netcat Trigger that",
    "start": "1125240",
    "end": "1130840"
  },
  {
    "text": "detection and again by checking details we know exactly what it is that we're trying to scope into our Rule now same",
    "start": "1130840",
    "end": "1137080"
  },
  {
    "text": "thing again for Network 2 we should already have this rule um in our rules feed so if I just type in network tool",
    "start": "1137080",
    "end": "1145039"
  },
  {
    "text": "um we should have bunch of different scenarios actually there's launching remote file copy tools Ingress remote",
    "start": "1145039",
    "end": "1150240"
  },
  {
    "text": "tools suspicious Network Tools uh on a host or in the container so we're focused on the container scenario we can",
    "start": "1150240",
    "end": "1155840"
  },
  {
    "text": "see what are the um the macros as I mentioned earlier if you wanted to see",
    "start": "1155840",
    "end": "1161400"
  },
  {
    "text": "what the network tool processes are we can copy that macro we can filter again",
    "start": "1161400",
    "end": "1166840"
  },
  {
    "text": "for it in our search View and by clicking into that specific macro we can see it's type macro and that will tell",
    "start": "1166840",
    "end": "1172559"
  },
  {
    "text": "us how it's built so you can see it's a process name and then the process name is looking for listed Network 2 binaries",
    "start": "1172559",
    "end": "1180520"
  },
  {
    "text": "so we're going further down this Rabbit Hole of looking for the additional context but by looking for Network tool",
    "start": "1180520",
    "end": "1186400"
  },
  {
    "text": "binaries then we can see it's listed here for netcat NC uh nmap dig TCP dump",
    "start": "1186400",
    "end": "1193200"
  },
  {
    "text": "t-shark there are a bunch of different networking tools telling that so if we executed any of those arbitrary Ty test",
    "start": "1193200",
    "end": "1199280"
  },
  {
    "text": "is should actually trigger um our detection rule um because again it was looking for a listed process and the",
    "start": "1199280",
    "end": "1205960"
  },
  {
    "text": "process has to match one of these process names um and again we know this is a type list so going back into our",
    "start": "1205960",
    "end": "1212640"
  },
  {
    "text": "environment we could uh check prerequisites but I don't think there's any prerequisite requirements here uh",
    "start": "1212640",
    "end": "1218840"
  },
  {
    "text": "it'll perform a test you can see it's the running escaped host uh technique simulation uh and again it already has",
    "start": "1218840",
    "end": "1225520"
  },
  {
    "text": "Docker installed so there's not a whole lot of checks that we need to go for so by just running the test scenario we can",
    "start": "1225520",
    "end": "1232240"
  },
  {
    "text": "actually see again same thing one of the test scenarios that it's going to run is we saw them here there's like netcat if",
    "start": "1232240",
    "end": "1239440"
  },
  {
    "text": "config bunch of different tests are executed the best thing you can do is just have rules or lists with deeper",
    "start": "1239440",
    "end": "1246440"
  },
  {
    "text": "context so by having more and more um examples of Network Tools that could be",
    "start": "1246440",
    "end": "1252520"
  },
  {
    "text": "run by an attacker as they're moving laterally now one things I haven't talked about much other than in slide",
    "start": "1252520",
    "end": "1257919"
  },
  {
    "text": "deck was around the um the conditions that were showing not the conditional set sorry but the output so as I mentioned",
    "start": "1257919",
    "end": "1264919"
  },
  {
    "text": "we can see that this test is definitely happening from Atomic red because we can see it's coming from the container",
    "start": "1264919",
    "end": "1270039"
  },
  {
    "text": "Atomic red and with the relevant image that we deployed earlier but also you can see for instance what command was",
    "start": "1270039",
    "end": "1276120"
  },
  {
    "text": "executed so in this case it was command was set to NECA so in case there was any confusion about exactly what command was",
    "start": "1276120",
    "end": "1282200"
  },
  {
    "text": "triggered that actually gave this detection well here was the command that was executed and in the case of more",
    "start": "1282200",
    "end": "1287240"
  },
  {
    "text": "complex commands we see the full um output from the the shell so with that",
    "start": "1287240",
    "end": "1292520"
  },
  {
    "text": "I'm happy with what we've learned from this test scenario and we should get this detection Network tool launched so",
    "start": "1292520",
    "end": "1298679"
  },
  {
    "text": "every time I run the test scenario I should get the same thing again so if I",
    "start": "1298679",
    "end": "1304279"
  },
  {
    "text": "was to yeah actually that one's kind of Frozen up but we'll move on to the next test Nara that's okay so with that known",
    "start": "1304279",
    "end": "1311559"
  },
  {
    "text": "the next one we're picking a test scenario where we don't have a Falon rule this is a great way to better",
    "start": "1311559",
    "end": "1317200"
  },
  {
    "text": "understand uh the complexities or the the individual requirements for creating",
    "start": "1317200",
    "end": "1322919"
  },
  {
    "text": "your new custom Rule and again deploying the changes so I'll start by again nothing's",
    "start": "1322919",
    "end": "1329480"
  },
  {
    "text": "changed here is going into the terminal shell um we just want to uh then import",
    "start": "1329480",
    "end": "1336559"
  },
  {
    "text": "the relevant test scenarios now from here I want to test",
    "start": "1336559",
    "end": "1342240"
  },
  {
    "text": "it straight away and you'll notice on the right side I'm looking for anything that's potentially malicious python",
    "start": "1342240",
    "end": "1348120"
  },
  {
    "text": "script um the reason I'm looking for that is because it's running these",
    "start": "1348120",
    "end": "1353400"
  },
  {
    "text": "python commands so yeah nothing's coming up for python even if I remove the GP I",
    "start": "1353400",
    "end": "1359320"
  },
  {
    "text": "can get uh everything that's happening from Falco you know as in maybe it's",
    "start": "1359320",
    "end": "1364360"
  },
  {
    "text": "detecting something else so we can perform the test one more time you do get other detections but they're not",
    "start": "1364360",
    "end": "1370159"
  },
  {
    "text": "relevant to the context here like for instance remember we mentioned how we're power shelling into there we're running",
    "start": "1370159",
    "end": "1376360"
  },
  {
    "text": "under root so we get things like file below Etsy or in some specific",
    "start": "1376360",
    "end": "1381840"
  },
  {
    "text": "environment where it's running so we can see the RC local test that is being performed which is the you know we said",
    "start": "1381840",
    "end": "1388200"
  },
  {
    "text": "there's two scenarios here there's the RC local and there's RC common or the two tests that are going to be performed",
    "start": "1388200",
    "end": "1394360"
  },
  {
    "text": "so let's go see that with the details view so if I say show details you can",
    "start": "1394360",
    "end": "1400039"
  },
  {
    "text": "see um yeah here we go so you can see in under Etc RC local that's fine so we did",
    "start": "1400039",
    "end": "1406720"
  },
  {
    "text": "get that context we do it's under etcc local however this rule",
    "start": "1406720",
    "end": "1412919"
  },
  {
    "text": "doesn't specifically align with what is the miter attack uh activity that's",
    "start": "1412919",
    "end": "1418279"
  },
  {
    "text": "being performed which is the malicious python script so although we do get detections of other anomalous uh things",
    "start": "1418279",
    "end": "1424559"
  },
  {
    "text": "happening in environments and maybe if you read through all of the commands that are being run like the T at CRC",
    "start": "1424559",
    "end": "1430320"
  },
  {
    "text": "local you could probably understand that something's happening but we want specific rules aligned with specific",
    "start": "1430320",
    "end": "1436400"
  },
  {
    "text": "tactics and techniques so with that known if we go back and add the graet",
    "start": "1436400",
    "end": "1441799"
  },
  {
    "text": "for potentially misses python script we want to create our custom rule scenario so we've added some extra views here um",
    "start": "1441799",
    "end": "1449640"
  },
  {
    "text": "one way of looking at it here is if I open vim and go in terminal to so I just run VI miter rules yo the file is",
    "start": "1449640",
    "end": "1458480"
  },
  {
    "text": "written but if I go I and we you know insert I can paste this rule that was",
    "start": "1458480",
    "end": "1463799"
  },
  {
    "text": "already pre-written paste it now you can see this is a little bit more complex it's looking for things like the python",
    "start": "1463799",
    "end": "1470480"
  },
  {
    "text": "so if there's a process command line executed and it contains python with the- C we're also looking for if there's",
    "start": "1470480",
    "end": "1477039"
  },
  {
    "text": "Python 3 run as opposed to the older version of python or python 2 you know there might be yeah again the attacker",
    "start": "1477039",
    "end": "1483240"
  },
  {
    "text": "or adversary might use specific uh versions python so it's good to have those examples so it contains those",
    "start": "1483240",
    "end": "1489720"
  },
  {
    "text": "strings um and it also has other context like it contains echo or pay 64 is",
    "start": "1489720",
    "end": "1495120"
  },
  {
    "text": "included in there somewhere uh or decode in Port so we're putting a bunch of different conditionals set and we're",
    "start": "1495120",
    "end": "1501080"
  },
  {
    "text": "saying if these commands um are executed then we're pretty sure it's something to do with um with python but under",
    "start": "1501080",
    "end": "1507760"
  },
  {
    "text": "description we're adding far more context around what are these individual operations so things like we want to",
    "start": "1507760",
    "end": "1513399"
  },
  {
    "text": "detect Bas 64 encoded Python scripts that are executed on command line so notice how it's a python script and you",
    "start": "1513399",
    "end": "1520559"
  },
  {
    "text": "know you can say and or operator so it's boole and logic but if it's and it contains the Bas 64 command line then we",
    "start": "1520559",
    "end": "1528240"
  },
  {
    "text": "know it's a b 64 encoded specifically python script and then again why are we",
    "start": "1528240",
    "end": "1533279"
  },
  {
    "text": "doing this well as we found out when we read the M or attack documentation Bas 64 can be used to encode binary data for",
    "start": "1533279",
    "end": "1540159"
  },
  {
    "text": "transfer for asky only command lines and the attackers can leverage this technique in various exploits to load Shell Code and of course the outcome is",
    "start": "1540159",
    "end": "1547320"
  },
  {
    "text": "to evade detection so this would be a good example of uh data exfiltration or sorry data evasion so in this case we uh",
    "start": "1547320",
    "end": "1554799"
  },
  {
    "text": "align the tag for ta0 five for defens of asion but keep in mind the specific test we're doing was",
    "start": "1554799",
    "end": "1561919"
  },
  {
    "text": "the t137 so again there can be overlap between obfuscation of files and",
    "start": "1561919",
    "end": "1567799"
  },
  {
    "text": "information as well as defense ofation with specific tests that you might be executing so all of this as we mentioned",
    "start": "1567799",
    "end": "1574320"
  },
  {
    "text": "earlier is from the same data source which system calls so with all that in mind what I'm going to do is I'll save",
    "start": "1574320",
    "end": "1580760"
  },
  {
    "text": "the file now we know the file saved because if we go to file directory and you go under rout and you see minor",
    "start": "1580760",
    "end": "1587039"
  },
  {
    "text": "rules you can see the file is now being saved so what we want to do is we want to deploy the new change so I'm using",
    "start": "1587039",
    "end": "1595919"
  },
  {
    "text": "Helm again but unlike the previous time we used Helm we're saying Helm upgrade so we're making a change uh ignore the",
    "start": "1595919",
    "end": "1603760"
  },
  {
    "text": "formatting stuff that shouldn't be a problem we're making a change again in the network Nam space Falon uh I'm",
    "start": "1603760",
    "end": "1609760"
  },
  {
    "text": "making sure that I'm on the same version that I was using earlier which 3.3.0 I'm reusing values I had earlier so there's",
    "start": "1609760",
    "end": "1615840"
  },
  {
    "text": "no unusual change but all we're doing is we're pointing in that we're taking context from the new file which is M r.",
    "start": "1615840",
    "end": "1622559"
  },
  {
    "text": "yaml which was this file so we say custom rules in the custom rules context",
    "start": "1622559",
    "end": "1628039"
  },
  {
    "text": "where we have this file called miter rules. yl and again I've only added one single rule here now one thing that's",
    "start": "1628039",
    "end": "1635520"
  },
  {
    "text": "worth pointing out as well is that we've added a lot of output context here so for potentially malicious python script",
    "start": "1635520",
    "end": "1641039"
  },
  {
    "text": "we want to know process IDs we want to know uh event types we want to know uh",
    "start": "1641039",
    "end": "1647840"
  },
  {
    "text": "the image that was executing it container if that is running from as much context as possible so we've added",
    "start": "1647840",
    "end": "1653799"
  },
  {
    "text": "all of those arbitrary points into our output so that when we trigger detection in a while uh we'll get that now I don't",
    "start": "1653799",
    "end": "1660600"
  },
  {
    "text": "want to break this view because we'll be coming back to this in a second so what we want to do is delete the",
    "start": "1660600",
    "end": "1666919"
  },
  {
    "text": "Pod by deleting the Pod it will essentially forcefully uh remove",
    "start": "1666919",
    "end": "1672720"
  },
  {
    "text": "anything that was potentially cach to do with the previous Falco deployment and then when we get pods and check for any",
    "start": "1672720",
    "end": "1678519"
  },
  {
    "text": "changes on Falco you know we'll get the cleanest version that's just to avoid any possible mistake so you can see the",
    "start": "1678519",
    "end": "1685480"
  },
  {
    "text": "status change is going to go through is first it has to terminate the Pod that we just ran the qctl delete pod command",
    "start": "1685480",
    "end": "1693039"
  },
  {
    "text": "but because kubernetes and containers or well they're femoral they're designed to die and recreate we don't need to do",
    "start": "1693039",
    "end": "1698760"
  },
  {
    "text": "anything else it should go through the terminating process and then start going through container creating uh running",
    "start": "1698760",
    "end": "1704559"
  },
  {
    "text": "one out of one or one out of two and then two out of two so you can see the process of pending initializing then pod",
    "start": "1704559",
    "end": "1711320"
  },
  {
    "text": "initializing running and give it one more second and then we see two out of two running so actual upgrades of Falco",
    "start": "1711320",
    "end": "1717600"
  },
  {
    "text": "are pretty painfree you know we just we point to a fer making the changes we run",
    "start": "1717600",
    "end": "1722760"
  },
  {
    "text": "the helm upgrade command and just for make sure there's no potential issues we",
    "start": "1722760",
    "end": "1727799"
  },
  {
    "text": "do the delete pod to make sure there was nothing cached associated with that so I'm pretty confident FAL go is running",
    "start": "1727799",
    "end": "1733320"
  },
  {
    "text": "at this point so we can go back to Atomic red if we notice that the command disappears it's simple just to up and",
    "start": "1733320",
    "end": "1740080"
  },
  {
    "text": "then run the command again so we're looking for potential malicious python script and with that if I run my test",
    "start": "1740080",
    "end": "1745360"
  },
  {
    "text": "one more time um it didn't run that time and I'm wondering is it because Falco is",
    "start": "1745360",
    "end": "1751880"
  },
  {
    "text": "not two out of okay it is two out of two ready now so if we look for that command",
    "start": "1751880",
    "end": "1758000"
  },
  {
    "text": "one last time and then I run my test which oh that was the show details so if I",
    "start": "1758000",
    "end": "1764480"
  },
  {
    "text": "execute the test this time and there we go now another thing to point out here is you might be wondering uh well we got",
    "start": "1764480",
    "end": "1771039"
  },
  {
    "text": "two detections why did that happen the reason why is we looked for remember anything that was Bas 64 and we also",
    "start": "1771039",
    "end": "1778399"
  },
  {
    "text": "looked for if it was a python script now from the outputs we know clearly that the first test was looking for the test",
    "start": "1778399",
    "end": "1785120"
  },
  {
    "text": "against RC common and then the other one was RC local yeah there's two test scenaries RC common RC local so when we",
    "start": "1785120",
    "end": "1792360"
  },
  {
    "text": "look at the output we can see that the file name in this case was the first test was a against RC common and then",
    "start": "1792360",
    "end": "1799200"
  },
  {
    "text": "the second file name output test was against RC local so in that case the",
    "start": "1799200",
    "end": "1804279"
  },
  {
    "text": "context matched in two different scenarios so two rules were triggered and again just make sure there's no",
    "start": "1804279",
    "end": "1809760"
  },
  {
    "text": "mistake here you run it one more time and you see that there's two more alerts that were triggered so I hopefully this",
    "start": "1809760",
    "end": "1816559"
  },
  {
    "text": "session was a great way to uh understand how Falco's deployed how to use Falco",
    "start": "1816559",
    "end": "1822240"
  },
  {
    "text": "how to use Atomic red in a real world test scenario better understanding miter attack what the framework exists for and",
    "start": "1822240",
    "end": "1828919"
  },
  {
    "text": "why and just being able to upgrade Falco uh creating your own custom rules and",
    "start": "1828919",
    "end": "1834679"
  },
  {
    "text": "extending coverage of the miter attack framework and with that um if there's any questions that anyone has after",
    "start": "1834679",
    "end": "1841159"
  },
  {
    "text": "seeing the session check out Falco org for more",
    "start": "1841159",
    "end": "1845799"
  },
  {
    "text": "information",
    "start": "1846960",
    "end": "1849960"
  }
]