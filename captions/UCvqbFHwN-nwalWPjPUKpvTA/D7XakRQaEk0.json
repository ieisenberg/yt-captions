[
  {
    "text": "so welcome to the Jaeger project introduction my name is Judah Sebastian Crowley",
    "start": "30",
    "end": "5160"
  },
  {
    "text": "I'm a software engineer at Red Hat working on the key ally project and more specifically on the distributed tracing",
    "start": "5160",
    "end": "11969"
  },
  {
    "text": "team meaning that I work mostly on Jaeger and opens racing now we have only",
    "start": "11969",
    "end": "17130"
  },
  {
    "text": "35 minutes I'll try to talk just the necessary here on this session and",
    "start": "17130",
    "end": "24949"
  },
  {
    "text": "unanswered questions most of the time right so we have a other session",
    "start": "24949",
    "end": "31230"
  },
  {
    "text": "tomorrow a deep dive on Jaeger and I hope to see you all there so as we have",
    "start": "31230",
    "end": "36989"
  },
  {
    "text": "only a few minutes I would start making some assumptions so setting some context",
    "start": "36989",
    "end": "43800"
  },
  {
    "text": "so I assume that you know about micro-services right so you know what micro services are and perhaps even",
    "start": "43800",
    "end": "49320"
  },
  {
    "text": "implemented some micro services your own I also make an assumption that you know",
    "start": "49320",
    "end": "55129"
  },
  {
    "text": "because you you started doing micro services there you know about them observability problem right so just very",
    "start": "55129",
    "end": "64530"
  },
  {
    "text": "quickly the observability problem is is you know the situation that you face when you you deploy a lot of micro",
    "start": "64530",
    "end": "71340"
  },
  {
    "text": "services and when before you were able to attach it above here to the process and see what's going on you certainly",
    "start": "71340",
    "end": "77670"
  },
  {
    "text": "cannot do that anymore because micro services right and then so it means you",
    "start": "77670",
    "end": "83369"
  },
  {
    "text": "don't know what is the your business transaction doing so you don't know what's going on there you don't know",
    "start": "83369",
    "end": "89579"
  },
  {
    "text": "what your microsurgery that's observability problem now for those who have read about observability",
    "start": "89579",
    "end": "96840"
  },
  {
    "text": "before you know that it's composed of three main pillars one of those is tracing now what exactly is tracing so",
    "start": "96840",
    "end": "107520"
  },
  {
    "text": "if you were at the open tracing project intro that just happened if you heard a",
    "start": "107520",
    "end": "114689"
  },
  {
    "text": "band talking about tracing far better than I could even dream of but if you if",
    "start": "114689",
    "end": "119850"
  },
  {
    "text": "you ask me I would say the tracing is the tool or the technique that you use to understand what your code is doing right so you apply tracing to understand",
    "start": "119850",
    "end": "128160"
  },
  {
    "text": "what's what's going on what's happening with her code and it does that by means of",
    "start": "128160",
    "end": "133890"
  },
  {
    "text": "disorientation just like logging if you want to log something you add logging statements your code right so with",
    "start": "133890",
    "end": "140870"
  },
  {
    "text": "tracing is the same you add tracing instrumentation sure code a very common",
    "start": "140870",
    "end": "148230"
  },
  {
    "text": "notion when we talk about tracing or at least this video tracing is a notion of spends and spend is one unit of work and",
    "start": "148230",
    "end": "155340"
  },
  {
    "text": "we store data about this unit of work within a span data could be like the",
    "start": "155340",
    "end": "162750"
  },
  {
    "text": "time information right so when did some work started and when did it finish so",
    "start": "162750",
    "end": "169620"
  },
  {
    "text": "this is a span and we can attach logs today span we can attach tags we can",
    "start": "169620",
    "end": "174690"
  },
  {
    "text": "even propagate some some some data with it expense can contain other spans so",
    "start": "174690",
    "end": "181440"
  },
  {
    "text": "imagine a situation where you have a incoming HTTP request and then in your HP handler creates one spend for the",
    "start": "181440",
    "end": "186510"
  },
  {
    "text": "whole request and then you have a complicated algorithm happening in that",
    "start": "186510",
    "end": "191730"
  },
  {
    "text": "that it should be handler and you want to trace that specific algorithm all",
    "start": "191730",
    "end": "197489"
  },
  {
    "text": "right so you want to know how long that that that algorithm took so spends can",
    "start": "197489",
    "end": "204900"
  },
  {
    "text": "have other spans and then there is the the idea of implicit versus explicit instrumentation so explicit is the",
    "start": "204900",
    "end": "211950"
  },
  {
    "text": "example that I just told you so you add code to your code you had instrumentation code sure it should be",
    "start": "211950",
    "end": "218310"
  },
  {
    "text": "handler saying start measuring here and finish measuring there we have them the implicit instrumentation for those who",
    "start": "218310",
    "end": "227130"
  },
  {
    "text": "are familiar with Java could be for instance a Java agent where you attach the agent to the process and the agent",
    "start": "227130",
    "end": "233820"
  },
  {
    "text": "has privileged access to the stack and can also instrument your code so it says well whenever a servlet is executed",
    "start": "233820",
    "end": "241440"
  },
  {
    "text": "before the service method I wanna start a span and whenever I return to the client I want to finish this one and so",
    "start": "241440",
    "end": "247500"
  },
  {
    "text": "it is the implicit limitation then there is a whole world between explicit and implicit for us the most important part",
    "start": "247500",
    "end": "255180"
  },
  {
    "text": "will be the framework instrumentation also a term that been used on his talk",
    "start": "255180",
    "end": "260479"
  },
  {
    "text": "just before this one and framework instrumentation is like a mix of",
    "start": "260479",
    "end": "267600"
  },
  {
    "text": "right so I don't know exactly if it's closer to explicit or implicit I don't have a strong opinion but framework",
    "start": "267600",
    "end": "273810"
  },
  {
    "text": "instrumentation is again in the Java Road we have this servlet filters right so we can in a separate filter you can",
    "start": "273810",
    "end": "280440"
  },
  {
    "text": "say before giving control to the actual servlet we say start a span and whenever",
    "start": "280440",
    "end": "287520"
  },
  {
    "text": "we got control back from the servlet we say finish this ban right so this is a framework instrumentation and that's",
    "start": "287520",
    "end": "293610"
  },
  {
    "text": "done as a service filter meaning that we can embed that filter in a separate",
    "start": "293610",
    "end": "298920"
  },
  {
    "text": "component in separate jar files so our business code is not aware that it's been traced so that's the main idea so",
    "start": "298920",
    "end": "307860"
  },
  {
    "text": "this is how a trace could look like and this is how it does look like in eager so we have here one service with a two",
    "start": "307860",
    "end": "314760"
  },
  {
    "text": "spends on the top of the screen we have a timeline view of this trace and how",
    "start": "314760",
    "end": "323910"
  },
  {
    "text": "much of this time the second spent took in comparison to the first one so we see that it's synchronous in the sense that",
    "start": "323910",
    "end": "330750"
  },
  {
    "text": "the second finishes within the timeline of the second or the first right so this very simple very",
    "start": "330750",
    "end": "337130"
  },
  {
    "text": "straightforward we have some data about spans we have on the first one we have a status code that was returned to the",
    "start": "337130",
    "end": "344100"
  },
  {
    "text": "client what was the URL that the client requested and so on so forth now when we",
    "start": "344100",
    "end": "351660"
  },
  {
    "text": "are talking about micro services just tracing would not be enough right so we need a tracing at the infra level we",
    "start": "351660",
    "end": "360510"
  },
  {
    "text": "need to be able to see what what are the services that were involved when a",
    "start": "360510",
    "end": "366630"
  },
  {
    "text": "client made a request I need to be request and that's that's where this",
    "start": "366630",
    "end": "372060"
  },
  {
    "text": "routed tracing comes to play so just with the tracing is tracing with one added feature the contacts propagation",
    "start": "372060",
    "end": "379680"
  },
  {
    "text": "so contacts propagation is just a fancy term for something that people have been doing for years really one example would",
    "start": "379680",
    "end": "388470"
  },
  {
    "text": "be you have in your front-end service or your first service you generate an ID",
    "start": "388470",
    "end": "395900"
  },
  {
    "text": "let's call it the request ID and then whenever you log something you",
    "start": "395900",
    "end": "400980"
  },
  {
    "text": "add this ID to the message or whenever you call a downstream service you send",
    "start": "400980",
    "end": "407250"
  },
  {
    "text": "along this ID then service B that receives the which is a downstream for",
    "start": "407250",
    "end": "412830"
  },
  {
    "text": "this through this first service C is that it got a request ID and whenever it logs something it adds also the same ID",
    "start": "412830",
    "end": "419480"
  },
  {
    "text": "right and so on so forth so it's if we have 10 micro services we would have 10",
    "start": "419480",
    "end": "425100"
  },
  {
    "text": "different log messages in logging infra and all of them would contain the",
    "start": "425100",
    "end": "430980"
  },
  {
    "text": "request ID if we are collecting those logs and having them in a in a common",
    "start": "430980",
    "end": "437430"
  },
  {
    "text": "place we would be able to grab our whole infrared that ID and we suddenly have a",
    "start": "437430",
    "end": "443880"
  },
  {
    "text": "story of a request across the services right so this is a very simple way of doing tracing or actually to do the",
    "start": "443880",
    "end": "454500"
  },
  {
    "text": "context propagation right so now this all good and if even if I just told you",
    "start": "454500",
    "end": "462750"
  },
  {
    "text": "one way of doing that if each one each one of you would implement it would be",
    "start": "462750",
    "end": "468300"
  },
  {
    "text": "different than what I would write and then your neighbors would do but even if",
    "start": "468300",
    "end": "473760"
  },
  {
    "text": "we you know we have different requirements we have different use cases we have different experiences and that's",
    "start": "473760",
    "end": "481200"
  },
  {
    "text": "ok I mean if we implement different solutions that's fine but what we need is to talk the same language at least",
    "start": "481200",
    "end": "487110"
  },
  {
    "text": "right so when I say I spend I want you to understand what I'm talking about and when you say that you want to see a",
    "start": "487110",
    "end": "494220"
  },
  {
    "text": "trace then I need to make sure that I understand what you're talking about and",
    "start": "494220",
    "end": "500790"
  },
  {
    "text": "this is actually oh so this is a how I just read a trace looks like on Jaeger",
    "start": "500790",
    "end": "506430"
  },
  {
    "text": "right so we have two services here each service with one caller and we can see",
    "start": "506430",
    "end": "511920"
  },
  {
    "text": "it's also very synchronous so each service is finishes in the same timeline",
    "start": "511920",
    "end": "519240"
  },
  {
    "text": "of the parent service each service has two spans one is collapsed and one is",
    "start": "519240",
    "end": "525380"
  },
  {
    "text": "expanded they're very similar to the first resurrection but the key here is",
    "start": "525380",
    "end": "531480"
  },
  {
    "text": "that we have choose services join the same trace so we can see the relationship between two",
    "start": "531480",
    "end": "536720"
  },
  {
    "text": "separate services to services running on different machines so so when talking",
    "start": "536720",
    "end": "546810"
  },
  {
    "text": "about the same language this is the context for opens racing right so we need to open tracing to as a as a level",
    "start": "546810",
    "end": "555089"
  },
  {
    "text": "for us or say the same base for us to to",
    "start": "555089",
    "end": "560399"
  },
  {
    "text": "talk about things so the open tracy's mainly two things so one is instrumentation api meaning that as a",
    "start": "560399",
    "end": "568050"
  },
  {
    "text": "business developer when I'm adding instrumentation to my code much like",
    "start": "568050",
    "end": "573420"
  },
  {
    "text": "logging I would use a vendor-neutral API to do that right so again Java Java",
    "start": "573420",
    "end": "579720"
  },
  {
    "text": "is my road so that's what I use it as an example but if I'm sure you can find parallels in other languages so when I",
    "start": "579720",
    "end": "586680"
  },
  {
    "text": "when I write logging statements in java i use the SL f4j library for instance and open tracing api would be like",
    "start": "586680",
    "end": "594269"
  },
  {
    "text": "there's a lot 4j api for logging in java right so it's not an implementation so I",
    "start": "594269",
    "end": "600300"
  },
  {
    "text": "can just add this orientation to my code this logging statements to my code and",
    "start": "600300",
    "end": "606980"
  },
  {
    "text": "decide on the implementation the concrete implementation later on and if I want to switch those implementations I",
    "start": "606980",
    "end": "612540"
  },
  {
    "text": "can do that based on on on my actual needs",
    "start": "612540",
    "end": "618810"
  },
  {
    "text": "it is a vendor-neutral specification in spite of the since F I'm not going to chip in to open tracing again there was",
    "start": "618810",
    "end": "626699"
  },
  {
    "text": "just a project introduction that just happened and there will be a deep dive",
    "start": "626699",
    "end": "632550"
  },
  {
    "text": "on may the 4th at 2:00 p.m. so but so if",
    "start": "632550",
    "end": "640319"
  },
  {
    "text": "you have any questions about open tracing you can ask me afterwards or I",
    "start": "640319",
    "end": "646259"
  },
  {
    "text": "can direct you to other people who can also help but we are here talk about Jaeger so I'm sorry if that's the first",
    "start": "646259",
    "end": "655680"
  },
  {
    "text": "time that you hear about the ogre today but it's very hard to talk about the area without talking the whole context",
    "start": "655680",
    "end": "660779"
  },
  {
    "text": "that it brings that it that needs to be explained before so eager is",
    "start": "660779",
    "end": "666200"
  },
  {
    "text": "from the clients perspective it's only a concrete tracer implementation so it's",
    "start": "666200",
    "end": "671270"
  },
  {
    "text": "only an open tracing API implementation now of course it's not only that because",
    "start": "671270",
    "end": "678890"
  },
  {
    "text": "it also contains its it also contains all the backing at the backend parts",
    "start": "678890",
    "end": "684020"
  },
  {
    "text": "right so the client is only one part of the story and the open tracing API",
    "start": "684020",
    "end": "689209"
  },
  {
    "text": "specifies only next orientation API so you need a component that actually collects this data and you need a place",
    "start": "689209",
    "end": "696080"
  },
  {
    "text": "to send this data to and you need some way of visualizing this data and since",
    "start": "696080",
    "end": "702950"
  },
  {
    "text": "we're eager complements the open tracing API Jagr is of course only one of the vendors and only one I mean quite a good",
    "start": "702950",
    "end": "712760"
  },
  {
    "text": "number of eager contributors are also active in the open tracing community but it's not yogurt is not using open",
    "start": "712760",
    "end": "720230"
  },
  {
    "text": "tracing does not mean that you have to use easier right so that's the relationship yeah and Yerger is also",
    "start": "720230",
    "end": "726830"
  },
  {
    "text": "part of this in C F ok so that's pretty much it for a my talking I'm gonna show",
    "start": "726830",
    "end": "732920"
  },
  {
    "text": "you a demo a simple demo",
    "start": "732920",
    "end": "737380"
  },
  {
    "text": "now this demo is composed of three micro-services so I have the customer",
    "start": "741779",
    "end": "748360"
  },
  {
    "text": "service I have the Preferences service and I have the recommendation service everything is running on my bare metal",
    "start": "748360",
    "end": "755170"
  },
  {
    "text": "except the Jaeger Jaeger is running on a docker container and I'm using only the",
    "start": "755170",
    "end": "760839"
  },
  {
    "text": "framework instrumentation right so my business code my Java code has no notion",
    "start": "760839",
    "end": "766300"
  },
  {
    "text": "of of open tracing or Jaeger at all what I so the magic is all done via",
    "start": "766300",
    "end": "774300"
  },
  {
    "text": "dependencies via maven dependencies so I just pulled the right dependencies Jaeger finds open tracing opens tracing",
    "start": "774300",
    "end": "781209"
  },
  {
    "text": "finds eager they they are friends with each other and you know they integrate and",
    "start": "781209",
    "end": "787199"
  },
  {
    "text": "everything just happens right so this is this is what I'm going to show you so I",
    "start": "787199",
    "end": "794399"
  },
  {
    "text": "this is all part of a bigger tutorial this is called the east you'll tutorial",
    "start": "794399",
    "end": "800589"
  },
  {
    "text": "at the Red Hat developer demos github organization so if you're interested in",
    "start": "800589",
    "end": "805990"
  },
  {
    "text": "in in sto take a look at this SEO tutorial there is an example of how to",
    "start": "805990",
    "end": "811449"
  },
  {
    "text": "do fault injection cannery maybe blue green and so on so forth now this part",
    "start": "811449",
    "end": "818769"
  },
  {
    "text": "is only the tracing part and I'm only running on my bare metal so nothing to do with easterlies - it's just the name",
    "start": "818769",
    "end": "823779"
  },
  {
    "text": "of the tutorial so I'm gonna share with",
    "start": "823779",
    "end": "829570"
  },
  {
    "text": "a on a later slide that was for this demo in case you're interested so I'm",
    "start": "829570",
    "end": "835779"
  },
  {
    "text": "just copying pasting things here because I'm lazy to type everything so the first",
    "start": "835779",
    "end": "841540"
  },
  {
    "text": "thing that we do is we start Jaeger so in a docker container and it started",
    "start": "841540",
    "end": "851060"
  },
  {
    "text": "on part one six six eight six",
    "start": "851060",
    "end": "856130"
  },
  {
    "text": "solo co-host 666 so it is the Jaeger why",
    "start": "862480",
    "end": "869350"
  },
  {
    "text": "I hope you can see it good they're so",
    "start": "869350",
    "end": "877340"
  },
  {
    "text": "artsy Sager and we see that we have no services yet here and if i refresh the",
    "start": "877340",
    "end": "882560"
  },
  {
    "text": "screen you see one service which is Jaeger tracing itself and we see here",
    "start": "882560",
    "end": "889070"
  },
  {
    "text": "one three traces for one request and we see some information about the traces",
    "start": "889070",
    "end": "894530"
  },
  {
    "text": "here well that's not what what I want to show you what I want to show you is I'm going to start three different micro services",
    "start": "894530",
    "end": "900980"
  },
  {
    "text": "two of them are written using Java spring boot so it is the spring boot",
    "start": "900980",
    "end": "906440"
  },
  {
    "text": "stack to run my application and before I run my application I I need to export",
    "start": "906440",
    "end": "912830"
  },
  {
    "text": "three environment variables traveling Jaeger that I want to trace everything that comes in all right so eager by the",
    "start": "912830",
    "end": "919160"
  },
  {
    "text": "for assumes that you are a unicorn so that you do not want to trace everything and we are just say well you're a demo",
    "start": "919160",
    "end": "926660"
  },
  {
    "text": "in demo mode so we do want to trace everything so for those who knows bring",
    "start": "926660",
    "end": "935510"
  },
  {
    "text": "both this pretty standard I'm going to show you the code afterwards so it is",
    "start": "935510",
    "end": "941660"
  },
  {
    "text": "starting and I'm just going to start them the Preferences service very similarly I'm just going to export a",
    "start": "941660",
    "end": "949480"
  },
  {
    "text": "couple of environment variables and start the service",
    "start": "949480",
    "end": "955660"
  },
  {
    "text": "and while that starts we're going to start the third service I don't need to",
    "start": "957560",
    "end": "963889"
  },
  {
    "text": "export any environment variable for this one because I'm not tracing this one right so it is a vertex application",
    "start": "963889",
    "end": "970249"
  },
  {
    "text": "no tracing at all even in the packaging meaning it's not gonna be on the tray on",
    "start": "970249",
    "end": "975649"
  },
  {
    "text": "the on the trace view all right so this is invisible first so yeah we have here",
    "start": "975649",
    "end": "982370"
  },
  {
    "text": "three services as I mentioned they they are very simple they make one call to each other so we have very simple call",
    "start": "982370",
    "end": "990529"
  },
  {
    "text": "chain so service stage service pages are we see that's it and we do that so the",
    "start": "990529",
    "end": "995839"
  },
  {
    "text": "very first service that we have is running on port 80 to 80",
    "start": "995839",
    "end": "1000870"
  },
  {
    "text": "one two three so we see that we have some output so from from the first",
    "start": "1009910",
    "end": "1016210"
  },
  {
    "text": "service and then from the second service and then this is coming from the third service and we have here that the",
    "start": "1016210",
    "end": "1023620"
  },
  {
    "text": "sequence number now it is not very interesting and we just an update the why here and receive more services",
    "start": "1023620",
    "end": "1030360"
  },
  {
    "text": "available here and we type five traces",
    "start": "1030360",
    "end": "1035860"
  },
  {
    "text": "and we see that we have here one trace per request that we made so we made three requests and we see three traces",
    "start": "1035860",
    "end": "1041560"
  },
  {
    "text": "now the very first one is a cold start so it takes longer so three 390 milliseconds and then 15",
    "start": "1041560",
    "end": "1048220"
  },
  {
    "text": "milliseconds and 13 milliseconds as I promised we see only three services so the customer service and the preference",
    "start": "1048220",
    "end": "1054430"
  },
  {
    "text": "is Tracy why the traceview one service is missing from this view which is a",
    "start": "1054430",
    "end": "1060460"
  },
  {
    "text": "service that we did not trace right so when you follow the east yo tutorial you're gonna see that east you can show",
    "start": "1060460",
    "end": "1067150"
  },
  {
    "text": "you the third service there so if you can can you can bring value by by",
    "start": "1067150",
    "end": "1072190"
  },
  {
    "text": "showing what's hidden there right so if you have another service after the the",
    "start": "1072190",
    "end": "1078010"
  },
  {
    "text": "recommendation service after the service that is invisible here it's not going to be shown there because we see only to",
    "start": "1078010",
    "end": "1083290"
  },
  {
    "text": "propagate the context down the chain but for the first one that we do not propagate with you have visibility into",
    "start": "1083290",
    "end": "1089860"
  },
  {
    "text": "that and yeah so we have here then two",
    "start": "1089860",
    "end": "1097390"
  },
  {
    "text": "services and it expands for for each service so we have four spans in total",
    "start": "1097390",
    "end": "1104110"
  },
  {
    "text": "we can see that it started on May the second at 3 p.m. 3 o 2 p.m. it's not 303",
    "start": "1104110",
    "end": "1112060"
  },
  {
    "text": "so looks about right and took 13 13 milliseconds we can go and you know see",
    "start": "1112060",
    "end": "1119920"
  },
  {
    "text": "more data about this request so we see the logs that were captured some process metadata so it's on hostname ax and IP Y",
    "start": "1119920",
    "end": "1127720"
  },
  {
    "text": "and what is the Yaeger version we see that this pen here was captured at the",
    "start": "1127720",
    "end": "1134320"
  },
  {
    "text": "web server layer and we see that let me expand this one here we see that the",
    "start": "1134320",
    "end": "1141220"
  },
  {
    "text": "HTTP URL that a client requested localhost 82 80 / right so we all we got",
    "start": "1141220",
    "end": "1148330"
  },
  {
    "text": "this information for free and let me show you why or how free is information",
    "start": "1148330",
    "end": "1154029"
  },
  {
    "text": "is actually and customer service Springwood yes that's the one",
    "start": "1154029",
    "end": "1161429"
  },
  {
    "text": "okay so",
    "start": "1164499",
    "end": "1168220"
  },
  {
    "text": "so I have only two Java classes in this application and I'm just gonna prove you",
    "start": "1170690",
    "end": "1176940"
  },
  {
    "text": "that I have no imports at all here for Jager or open tracing so nothing I'm",
    "start": "1176940",
    "end": "1183030"
  },
  {
    "text": "nothing there and nothing on the spring boot would strap application automatic",
    "start": "1183030",
    "end": "1189860"
  },
  {
    "text": "for that is on the pump file so for",
    "start": "1189860",
    "end": "1195600"
  },
  {
    "text": "those who don't know Java the pom file is where you define your dependencies and at Build time it pulls all the",
    "start": "1195600",
    "end": "1200670"
  },
  {
    "text": "dependencies from somewhere and if your application is packaged as a jar fire or war file all those dependencies end up",
    "start": "1200670",
    "end": "1207360"
  },
  {
    "text": "in the same in the same package so the",
    "start": "1207360",
    "end": "1212490"
  },
  {
    "text": "only two dependencies that we added was were yeah this so an open tracing",
    "start": "1212490",
    "end": "1220110"
  },
  {
    "text": "contrib library for spring code so that is a meta dependency so it pulls all the",
    "start": "1220110",
    "end": "1226890"
  },
  {
    "text": "framework instrumentations the framework instrumentation for frameworks that are usually used with",
    "start": "1226890",
    "end": "1233700"
  },
  {
    "text": "spring but so we bring serve weights we bring zu we bring JMS we bring JDBC we",
    "start": "1233700",
    "end": "1243000"
  },
  {
    "text": "bring everything that that makes sense for a spring good application and we auto instrument that by using hooks from",
    "start": "1243000",
    "end": "1250470"
  },
  {
    "text": "from the spring framework from no not",
    "start": "1250470",
    "end": "1259740"
  },
  {
    "text": "that I remember so there might be so if you're interested in osj you can contribute to the open tracing contrib adding",
    "start": "1259740",
    "end": "1266700"
  },
  {
    "text": "instrumentation for OSGi but we are getting to the Q&A session in two minutes yeah so this is part of the magic the",
    "start": "1266700",
    "end": "1275190"
  },
  {
    "text": "second part of the magic is the tracer is over from Jaeger right so since the the part that concretely captures",
    "start": "1275190",
    "end": "1282030"
  },
  {
    "text": "information and send somewhere now this demo might be quite boring",
    "start": "1282030",
    "end": "1288090"
  },
  {
    "text": "because you know code-wise it's only two dependencies and I just made a HTTP",
    "start": "1288090",
    "end": "1294390"
  },
  {
    "text": "request and but I think we can appreciate that it's very hard to come up with a view like that using tools",
    "start": "1294390",
    "end": "1302880"
  },
  {
    "text": "that we use for monolithic applications right so the tools that we use for for you know in the past they do not apply",
    "start": "1302880",
    "end": "1310230"
  },
  {
    "text": "and it is this new micro-services wrote and this is so this is where Yaeger is",
    "start": "1310230",
    "end": "1317220"
  },
  {
    "text": "fitting into this landscape so to",
    "start": "1317220",
    "end": "1324630"
  },
  {
    "text": "explain a little bit more about what happened there so we have one application or more applications but in",
    "start": "1324630",
    "end": "1330330"
  },
  {
    "text": "the context in the context of one application we have the service itself which is the spring boot jar let's say",
    "start": "1330330",
    "end": "1337980"
  },
  {
    "text": "or our application and then we ship the Java the Java Jaeger client with it",
    "start": "1337980",
    "end": "1343470"
  },
  {
    "text": "right so we as I dependency to that now the younger client captures information and sends data via UDP to a local agent",
    "start": "1343470",
    "end": "1351600"
  },
  {
    "text": "so that your application does not need to you know if the agent is not available or if I don't know how to",
    "start": "1351600",
    "end": "1357870"
  },
  {
    "text": "capture or how to send this data your application won't break and it won't just it won't wait for a reply right it",
    "start": "1357870",
    "end": "1364290"
  },
  {
    "text": "won't way to fail so and then so the area sends data to there your client",
    "start": "1364290",
    "end": "1370320"
  },
  {
    "text": "since the alleged agent the agent acts like a buffer and sends to a collector",
    "start": "1370320",
    "end": "1375540"
  },
  {
    "text": "now the collectors job is only to you know store things on permanent storage like the Sun very elastic search or just",
    "start": "1375540",
    "end": "1383040"
  },
  {
    "text": "in memory a fumarole data and then our Jager collector I mean the corrective",
    "start": "1383040",
    "end": "1390900"
  },
  {
    "text": "store the data and then a Jager query sees this data and then displays that information on the UI for you and so",
    "start": "1390900",
    "end": "1400680"
  },
  {
    "text": "yeah so that's what I had for this intro we have a yogurt deep dive tomorrow 11:10 a.m. on beef for I think it's that",
    "start": "1400680",
    "end": "1410250"
  },
  {
    "text": "way yeah and now we have 15 minutes for Q&A or close to that",
    "start": "1410250",
    "end": "1416940"
  },
  {
    "text": "and I just leave this screen here for with the resources the the QR code is",
    "start": "1416940",
    "end": "1422669"
  },
  {
    "text": "for a tutorial that you can follow and get more information about SEO and so on so those two URL so you're tracing and",
    "start": "1422669",
    "end": "1429869"
  },
  {
    "text": "open tracing yes [Music]",
    "start": "1429869",
    "end": "1434470"
  },
  {
    "text": "were you at the talked with a band okay so there was a very similar question",
    "start": "1441230",
    "end": "1446299"
  },
  {
    "text": "there so for easeful you can't see so",
    "start": "1446299",
    "end": "1451690"
  },
  {
    "text": "the context propagation is a big part of the magic right so you have chip create",
    "start": "1451690",
    "end": "1456919"
  },
  {
    "text": "is a trace from where I spend somewhere and pass that context the request ID in",
    "start": "1456919",
    "end": "1462139"
  },
  {
    "text": "the exam today that I said down the stream down down to the next level and",
    "start": "1462139",
    "end": "1467950"
  },
  {
    "text": "if you cannot do that then you can only go one step right because this service",
    "start": "1467950",
    "end": "1473870"
  },
  {
    "text": "here is instrumented the second one is not so it finishes there whenever that service makes a downstream connection",
    "start": "1473870",
    "end": "1480769"
  },
  {
    "text": "then Easterwood create another trace so it would not be visible as part of this same trace so that's what you can do so",
    "start": "1480769",
    "end": "1487130"
  },
  {
    "text": "if you can automatically add spent data so it can add spend so what is the route",
    "start": "1487130",
    "end": "1492860"
  },
  {
    "text": "that was used for this connection and what is the route that I'm what is the service that I'm connecting to so",
    "start": "1492860",
    "end": "1498169"
  },
  {
    "text": "inbound and not one connections is joke an instrument what it cannot do is make",
    "start": "1498169",
    "end": "1505370"
  },
  {
    "text": "a connection between the incoming and the outgoing HTTP request that has to be done within the application by you know",
    "start": "1505370",
    "end": "1511730"
  },
  {
    "text": "passenger context did that answer your question okay so you got a sticker and",
    "start": "1511730",
    "end": "1522830"
  },
  {
    "text": "you get a t-shirt as the first question so",
    "start": "1522830",
    "end": "1528880"
  },
  {
    "text": "yeah thank you for the presentation so",
    "start": "1531820",
    "end": "1537759"
  },
  {
    "text": "my question is what the advantages if we are talking about Jagger and discipline",
    "start": "1537759",
    "end": "1546550"
  },
  {
    "text": "[Music] that's a good question if you are using Zipkin today there is no reason to move",
    "start": "1546550",
    "end": "1553899"
  },
  {
    "text": "I would say now if you are so I don't so",
    "start": "1553899",
    "end": "1560109"
  },
  {
    "text": "I don't really know how it is zipping today I know how it is how it was a couple months ago and it's open",
    "start": "1560109",
    "end": "1567970"
  },
  {
    "text": "tracing support was quite good if that's still the case then I would say it's a matter of taste and and needs and",
    "start": "1567970",
    "end": "1573909"
  },
  {
    "text": "requirements there are not that much difference different I would say so take",
    "start": "1573909",
    "end": "1580629"
  },
  {
    "text": "a look and try them out both and make your own mind I mean there's really the",
    "start": "1580629",
    "end": "1587349"
  },
  {
    "text": "ecosystems now are somewhat different but if you so one thing that I would",
    "start": "1587349",
    "end": "1592450"
  },
  {
    "text": "stress is do use open tracing as the you know in your code closer your code is",
    "start": "1592450",
    "end": "1597849"
  },
  {
    "text": "open tracing that alone makes it easy to use either Zipkin or Jaeger or whatever",
    "start": "1597849",
    "end": "1604899"
  },
  {
    "text": "other tool you want is",
    "start": "1604899",
    "end": "1607769"
  },
  {
    "text": "I had a performance question yes I've",
    "start": "1611759",
    "end": "1617470"
  },
  {
    "text": "been waiting for this yes so the question was what is the performance impact of tracing right well I asked you",
    "start": "1617470",
    "end": "1625809"
  },
  {
    "text": "in iaeger about the error or open tracing in general yeah so there is a no",
    "start": "1625809",
    "end": "1635529"
  },
  {
    "text": "op tracer for open trading which does nothing which is very close to use the",
    "start": "1635529",
    "end": "1641139"
  },
  {
    "text": "the Kelsie's code from this morning from the keynote right the no code framework yeah so it just it's not doing anything",
    "start": "1641139",
    "end": "1649929"
  },
  {
    "text": "and you can while developing you can use that one if you're not you know if",
    "start": "1649929",
    "end": "1654999"
  },
  {
    "text": "you're just instrumenting now the performance impact itself instrumentation should not take a big",
    "start": "1654999",
    "end": "1662049"
  },
  {
    "text": "hit in our application so instrumenting the exploitation itself should be quite I'll not say nothing because everything",
    "start": "1662049",
    "end": "1669909"
  },
  {
    "text": "is something so very small now here itself that would be the part that",
    "start": "1669909",
    "end": "1675039"
  },
  {
    "text": "consumes more resources we try to make the client which is the part that runs with your code as lightweight as",
    "start": "1675039",
    "end": "1681850"
  },
  {
    "text": "possible and as efficient as possible and it should never fail right it should never bubble up exceptions to your",
    "start": "1681850",
    "end": "1687730"
  },
  {
    "text": "application in that sense we send data via UDP to a local agent meaning that we",
    "start": "1687730",
    "end": "1694059"
  },
  {
    "text": "fire-and-forget not exactly right but we send data there and we forget about them",
    "start": "1694059",
    "end": "1699220"
  },
  {
    "text": "we don't need you know they confirm a TCP confirmations and so on so forth if their agents not running there it will",
    "start": "1699220",
    "end": "1705220"
  },
  {
    "text": "just silently fail a number right",
    "start": "1705220",
    "end": "1710970"
  },
  {
    "text": "it's also difficult to say because they spend itself might be too heavy weight",
    "start": "1712820",
    "end": "1719600"
  },
  {
    "text": "depending on your needs so if you're storing logs and all the logs from your application there then your span is huge",
    "start": "1719600",
    "end": "1724610"
  },
  {
    "text": "and then yeah so we that said we do have",
    "start": "1724610",
    "end": "1730580"
  },
  {
    "text": "a performance performance tests for for Jaeger on the community if this is a",
    "start": "1730580",
    "end": "1737840"
  },
  {
    "text": "topic that interests you then you're very welcome to join us yeah so if your if you if you want to",
    "start": "1737840",
    "end": "1747980"
  },
  {
    "text": "trace across say mrs. Puff's Kingdom pass on the context to get the tracing across that if I'm gonna trace across a",
    "start": "1747980",
    "end": "1755180"
  },
  {
    "text": "missed bus queue system Oh Jamie okay",
    "start": "1755180",
    "end": "1760430"
  },
  {
    "text": "yeah yes the the the context the context is always to go through the wire in in",
    "start": "1760430",
    "end": "1767060"
  },
  {
    "text": "anyway so when you are talking HTTP it's usually HTTP headers when so I have seen",
    "start": "1767060",
    "end": "1775250"
  },
  {
    "text": "them trying to find an exam so for vertex vertex is a synchronous message passing which is very similar to a queue",
    "start": "1775250",
    "end": "1781720"
  },
  {
    "text": "and in that case we just pass the contracts as an entry in the JSON that",
    "start": "1781720",
    "end": "1786800"
  },
  {
    "text": "is exchanged right there is that passed through the through the event bus yeah",
    "start": "1786800",
    "end": "1793790"
  },
  {
    "text": "so that's the basic answer so you have to send the context don't with the payload or as part of the wire",
    "start": "1793790",
    "end": "1801850"
  },
  {
    "text": "how close to the human user do you set the context ID and start collecting",
    "start": "1807740",
    "end": "1813440"
  },
  {
    "text": "spans do you do it in the web browser or in a mobile app if if you control all",
    "start": "1813440",
    "end": "1818809"
  },
  {
    "text": "the way that end or do you wait till the transaction gets to the backend application so user interface is our",
    "start": "1818809",
    "end": "1827929"
  },
  {
    "text": "Achilles you know because this is the part so do you trust everything that",
    "start": "1827929",
    "end": "1833510"
  },
  {
    "text": "comes to your back-end you probably not then you know it's a very hard question to answer right now I've not seen many",
    "start": "1833510",
    "end": "1842030"
  },
  {
    "text": "traces starting on the UI but I've seen some movement in that direction right so",
    "start": "1842030",
    "end": "1847790"
  },
  {
    "text": "Android is another case where Tracy start at the client we did have a",
    "start": "1847790",
    "end": "1853820"
  },
  {
    "text": "proposal for google Summer of Code but I think nobody wanted to do that but if he",
    "start": "1853820",
    "end": "1859910"
  },
  {
    "text": "is so if you eye is something that you care about talk to us not only on your new Yaeger part but",
    "start": "1859910",
    "end": "1865820"
  },
  {
    "text": "also an open tracing because I think it's a bigger problem than just yours did you get this trigger ready okay and",
    "start": "1865820",
    "end": "1874520"
  },
  {
    "text": "can you also give what oh yeah yes what",
    "start": "1874520",
    "end": "1882620"
  },
  {
    "text": "is it fluently the logging",
    "start": "1882620",
    "end": "1889520"
  },
  {
    "text": "in what way would you like to see Flint either",
    "start": "1891820",
    "end": "1896340"
  },
  {
    "text": "yeah right so there are two parts to that so",
    "start": "1905290",
    "end": "1911060"
  },
  {
    "text": "the first is logging is similar to tracing or the other way around right the difference is logging is like an",
    "start": "1911060",
    "end": "1918050"
  },
  {
    "text": "event that you add to our code saying this happened and with tracing on the",
    "start": "1918050",
    "end": "1923480"
  },
  {
    "text": "other hand you say start I started doing something and I finished doing something",
    "start": "1923480",
    "end": "1928640"
  },
  {
    "text": "so you have a starting and ending time for every single span that you or you are measuring whereas with logging you",
    "start": "1928640",
    "end": "1935180"
  },
  {
    "text": "have to log that after the fact saying well the operation that just happened",
    "start": "1935180",
    "end": "1940610"
  },
  {
    "text": "took X milliseconds right so they're not quite the same what is possible though",
    "start": "1940610",
    "end": "1945680"
  },
  {
    "text": "is to have logging inside the trace so that you say here starts here it",
    "start": "1945680",
    "end": "1951230"
  },
  {
    "text": "finishes and whatever logs happen in between they may be part of this pen if",
    "start": "1951230",
    "end": "1957200"
  },
  {
    "text": "that makes sense or not depends on on your use case you probably do not want to add all the logs but you may want to",
    "start": "1957200",
    "end": "1963380"
  },
  {
    "text": "add a couple logs how to make the correlation between logs in fluent E and",
    "start": "1963380",
    "end": "1969860"
  },
  {
    "text": "Jager or open tracing is a very different question",
    "start": "1969860",
    "end": "1975130"
  },
  {
    "text": "yeah so I see so I don't see logging and tracing on",
    "start": "1978320",
    "end": "1986420"
  },
  {
    "text": "the same I don't know how to you know so",
    "start": "1986420",
    "end": "1992780"
  },
  {
    "text": "420 it makes more sense for me to look at the infra logs not application-level",
    "start": "1992780",
    "end": "1997790"
  },
  {
    "text": "logs application-level logs I would probably want to add some context there",
    "start": "1997790",
    "end": "2002950"
  },
  {
    "text": "and then grab those when they reach a central server but when I'm debugging something I probably see more value in",
    "start": "2002950",
    "end": "2009640"
  },
  {
    "text": "seeing the trace information before it logs",
    "start": "2009640",
    "end": "2013320"
  },
  {
    "text": "yes I would like to know how open race you know or Jagger words with a",
    "start": "2016770",
    "end": "2023110"
  },
  {
    "text": "synchronous application I mean if you include in the middle components string",
    "start": "2023110",
    "end": "2028750"
  },
  {
    "text": "components like Kafka who does it work because how do you maintain a trace the",
    "start": "2028750",
    "end": "2034090"
  },
  {
    "text": "complete trace of your is Zach here no",
    "start": "2034090",
    "end": "2040150"
  },
  {
    "text": "so there is a talk about doing that for",
    "start": "2040150",
    "end": "2045730"
  },
  {
    "text": "a spark except spark right or Okaka sorry okay yeah so it's one step before",
    "start": "2045730",
    "end": "2052870"
  },
  {
    "text": "in the chain yeah so yeah very similar to his question here so you'd have to",
    "start": "2052870",
    "end": "2059200"
  },
  {
    "text": "add a context to to the payload right so if you so it is quite possible to to the",
    "start": "2059200",
    "end": "2066580"
  },
  {
    "text": "trace across a synchronous processing or one business transaction lasting one month so I do see the value of that but",
    "start": "2066580",
    "end": "2075460"
  },
  {
    "text": "you do have to pass the context somehow now I I think there is a open tracing",
    "start": "2075460",
    "end": "2081490"
  },
  {
    "text": "library for Kafka already I myself I never played with it so I would try if",
    "start": "2081490",
    "end": "2087639"
  },
  {
    "text": "it doesn't work the way you want because of a synchronous and so on then nothing",
    "start": "2087640",
    "end": "2093810"
  },
  {
    "text": "blocks you from you know passing yourself the context",
    "start": "2093810",
    "end": "2099030"
  },
  {
    "text": "like what",
    "start": "2114250",
    "end": "2116820"
  },
  {
    "text": "so are you saying about not logging anything in one service and then",
    "start": "2140160",
    "end": "2145830"
  },
  {
    "text": "suddenly logging something on that service",
    "start": "2145830",
    "end": "2149270"
  },
  {
    "text": "like databases right so for database you can instrument the call going so going",
    "start": "2166950",
    "end": "2174299"
  },
  {
    "text": "to the database and coming back to their base and we say this database call took one second and so it's one way of doing",
    "start": "2174299",
    "end": "2181319"
  },
  {
    "text": "now what the database did in the background if you don't care about that",
    "start": "2181319",
    "end": "2186480"
  },
  {
    "text": "then that's it right so that's that's similar to let me let me so that similar",
    "start": "2186480",
    "end": "2192960"
  },
  {
    "text": "to the service which is which was hidden in the demo here so we had three services and one of them the trace for",
    "start": "2192960",
    "end": "2199410"
  },
  {
    "text": "that was not visible but we still see the get request going to that service so",
    "start": "2199410",
    "end": "2207030"
  },
  {
    "text": "this get request here is related to that service so outbound call and we we can",
    "start": "2207030",
    "end": "2212730"
  },
  {
    "text": "kind of infer how long the downstream service took by you know if the only",
    "start": "2212730",
    "end": "2217799"
  },
  {
    "text": "thing this code does is calling a downstream service then it took two milliseconds",
    "start": "2217799",
    "end": "2225109"
  },
  {
    "text": "caller",
    "start": "2231890",
    "end": "2234579"
  },
  {
    "text": "I see so you want to see a different color here you can achieve that with",
    "start": "2238140",
    "end": "2246869"
  },
  {
    "text": "tools like sto service mash and so on alright so because it will make a external call and the very first span or",
    "start": "2246869",
    "end": "2254369"
  },
  {
    "text": "whenever it reaches the downstream service it creates a nice pen for you and it creates in the name of the",
    "start": "2254369",
    "end": "2259499"
  },
  {
    "text": "application that is receiving the request alright so if you can add a proxy there that makes this for you you",
    "start": "2259499",
    "end": "2266700"
  },
  {
    "text": "can do that otherwise you just rely on information on the upstream service",
    "start": "2266700",
    "end": "2272869"
  },
  {
    "text": "oh you can oh the question is if whether you can or not have traces trace",
    "start": "2286490",
    "end": "2292700"
  },
  {
    "text": "information from inside the code from the business code yes you can so you can so I was very explicit hearing not",
    "start": "2292700",
    "end": "2299000"
  },
  {
    "text": "having dependencies on open tracing API but I could just you know on my business",
    "start": "2299000",
    "end": "2304550"
  },
  {
    "text": "code I could just say well get me the current tracer I don't care which one is it is so it is Zipkin or Jaeger I don't",
    "start": "2304550",
    "end": "2311330"
  },
  {
    "text": "care just get me the tracer and get me the current pen and then add this log or",
    "start": "2311330",
    "end": "2317540"
  },
  {
    "text": "add this tag to this pen alright so in addition to the URL that",
    "start": "2317540",
    "end": "2323450"
  },
  {
    "text": "we are seeing on this pan here we can also add some customer business tag so",
    "start": "2323450",
    "end": "2329540"
  },
  {
    "text": "what is the customer ID for this request what is the order ID alright so we have a value that has business meaning within",
    "start": "2329540",
    "end": "2337130"
  },
  {
    "text": "this pen so it is certainly possible to enhance this pen with your own data or even create your own spins you don't",
    "start": "2337130",
    "end": "2344030"
  },
  {
    "text": "have to so most people are not comfortable when adding tracing code to their business code for whatever is",
    "start": "2344030",
    "end": "2349040"
  },
  {
    "text": "reason I mean we all add logging statements to our code so I don't see why not adding a couple markers",
    "start": "2349040",
    "end": "2356680"
  },
  {
    "text": "yeah so Java agent is another possibility so it's way in the implicit",
    "start": "2382680",
    "end": "2388530"
  },
  {
    "text": "instrumentation part they expect from all right so we have the explicit which is your code actively creating expands",
    "start": "2388530",
    "end": "2394200"
  },
  {
    "text": "and adding information and the other side is implicit which is a Java agent and then you have the sole no no no no",
    "start": "2394200",
    "end": "2402240"
  },
  {
    "text": "not at all I mean I'm using Java as an example because that's you know what I have experience with mostly but eager",
    "start": "2402240",
    "end": "2411060"
  },
  {
    "text": "has tracers for Java for golang I think somebody wrote to our PHP I'm not quite",
    "start": "2411060",
    "end": "2417660"
  },
  {
    "text": "sure and some other languages as well open tracing is in more languages so we",
    "start": "2417660",
    "end": "2423540"
  },
  {
    "text": "can if I write an application Ruby Python JavaScript you can make use of",
    "start": "2423540",
    "end": "2428880"
  },
  {
    "text": "the open threesome API okay I think we are out of time now and if you have any",
    "start": "2428880",
    "end": "2435690"
  },
  {
    "text": "other questions about eager tomorrow we have the deep dive otherwise I'm either attending sessions about open tracing",
    "start": "2435690",
    "end": "2442290"
  },
  {
    "text": "you can approach me or I'm at the Red Hat booth you can also just contact me",
    "start": "2442290",
    "end": "2448080"
  },
  {
    "text": "thank you [Applause]",
    "start": "2448080",
    "end": "2453159"
  }
]