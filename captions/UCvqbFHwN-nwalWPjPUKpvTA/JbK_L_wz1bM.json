[
  {
    "start": "0",
    "end": "270000"
  },
  {
    "text": "great so I'm on my phone without my",
    "start": "920",
    "end": "6930"
  },
  {
    "text": "computer in front of me sadly because it's died but I can try to do my best to",
    "start": "6930",
    "end": "13679"
  },
  {
    "text": "MC anyways just remind me if I'm going off-track that can't be looking at the",
    "start": "13679",
    "end": "19289"
  },
  {
    "text": "agenda and talking at the same time but good to see everybody again please write",
    "start": "19289",
    "end": "29730"
  },
  {
    "text": "down in the agenda document if you're in attendance so we have an attendee list",
    "start": "29730",
    "end": "35329"
  },
  {
    "text": "and for the agenda today I have two",
    "start": "35329",
    "end": "41070"
  },
  {
    "text": "items that I think are really important one is a proposal to add the trace",
    "start": "41070",
    "end": "46920"
  },
  {
    "text": "parent headers header values to as accessors to the span contact object in",
    "start": "46920",
    "end": "53129"
  },
  {
    "text": "open tracing and the other is a proposal for more formal RFC process for",
    "start": "53129",
    "end": "61129"
  },
  {
    "text": "versioning the open tracing api's and specification so that's what I've got on",
    "start": "61129",
    "end": "68369"
  },
  {
    "text": "the agenda for today I'm not sure if other people have other things they'd like to talk about but kicking it off",
    "start": "68369",
    "end": "76920"
  },
  {
    "text": "with trace context we have Sergei here from the trace context w3c working group",
    "start": "76920",
    "end": "86780"
  },
  {
    "text": "and I'm was wondering Sergei if you're on the call if you wouldn't mind",
    "start": "86780",
    "end": "93079"
  },
  {
    "text": "starting this discussion with just a little bit of background around the",
    "start": "93079",
    "end": "98909"
  },
  {
    "text": "project and what it is or maybe mind by",
    "start": "98909",
    "end": "128940"
  },
  {
    "text": "some other vendor or maybe service mesh that already implemented some tracing in some form so we want to enable all",
    "start": "128940",
    "end": "138210"
  },
  {
    "text": "the scenarios when you have different components and different ownership of",
    "start": "138210",
    "end": "143220"
  },
  {
    "text": "these components to to correlate celebrity across them so in order to do",
    "start": "143220",
    "end": "148950"
  },
  {
    "text": "that you need to have a standard and we thought what what the place would be for",
    "start": "148950",
    "end": "155430"
  },
  {
    "text": "the standards and tt seems to be the right place for it to be mr. Garza who",
    "start": "155430",
    "end": "161970"
  },
  {
    "text": "supported like basically all beaker we understand clusion like our clouds I",
    "start": "161970",
    "end": "167760"
  },
  {
    "text": "called all three clouds supported this idea and we built is double three",
    "start": "167760",
    "end": "175470"
  },
  {
    "text": "standard so main idea here is not to make a standards that everybody can use",
    "start": "175470",
    "end": "180930"
  },
  {
    "text": "so like generic so generic that everybody can squeeze whatever they want into that but be a little more specific",
    "start": "180930",
    "end": "189480"
  },
  {
    "text": "what a scenario you want to achieve and like it feels like every everybody will",
    "start": "189480",
    "end": "196410"
  },
  {
    "text": "need to do effort to migrate to this standard so some people need to shrink",
    "start": "196410",
    "end": "203940"
  },
  {
    "text": "their energies some people need to like compromise on the size of this header so",
    "start": "203940",
    "end": "211110"
  },
  {
    "text": "like all sort of compromise that needs to be done but the idea is like again to",
    "start": "211110",
    "end": "217650"
  },
  {
    "text": "you if you want to satisfy if you want to comply to this header you need to you",
    "start": "217650",
    "end": "225269"
  },
  {
    "text": "need to do something so it's it's a little bit more priests creatures and it's it's not meant to be a place for",
    "start": "225269",
    "end": "232200"
  },
  {
    "text": "like it's all kind of header or you can put whatever you want um so yeah this is",
    "start": "232200",
    "end": "237480"
  },
  {
    "text": "a context and right now we are in community group in double 3xi it means that like it is out of this community",
    "start": "237480",
    "end": "243150"
  },
  {
    "text": "group is just the basic recommendation we working on making it working group",
    "start": "243150",
    "end": "248430"
  },
  {
    "text": "and a result of working group is typically specification so that that double tree she endorses so it will have",
    "start": "248430",
    "end": "256620"
  },
  {
    "text": "more power yeah I think this is enough for introduction is it if you have any",
    "start": "256620",
    "end": "264390"
  },
  {
    "text": "questions",
    "start": "264390",
    "end": "266780"
  },
  {
    "text": "- it kind of be the only place you can get a trace ID out of open tracing yet",
    "start": "269610",
    "end": "278920"
  },
  {
    "start": "270000",
    "end": "400000"
  },
  {
    "text": "it would be so that's kind of revolutionary to make call out there",
    "start": "278920",
    "end": "284220"
  },
  {
    "text": "because that was sort of assumed to be a vendor specific detail until now",
    "start": "284220",
    "end": "289540"
  },
  {
    "text": "interestingly enough if I'm an open tracing vendor I'm only and I might",
    "start": "289540",
    "end": "294940"
  },
  {
    "text": "let's say my trace Eddie's are crazy and they're not there you know eight integers and I don't you know have",
    "start": "294940",
    "end": "300820"
  },
  {
    "text": "128-bit values that that's so I'm gonna be at the mercy of whoever is providing",
    "start": "300820",
    "end": "306970"
  },
  {
    "text": "me this parent header and if I'm trying to provide a feature like hey use this ID for logging in and then you can go",
    "start": "306970",
    "end": "314320"
  },
  {
    "text": "and search in your elk or spunk or whatever for this chase ID I'm now going to be giving people this access ur for a",
    "start": "314320",
    "end": "323770"
  },
  {
    "text": "trace idea that I didn't prepare or create but you know if I'm accepting a",
    "start": "323770",
    "end": "329530"
  },
  {
    "text": "trace parent from an upstream service that's not using my open tracing implementation deeds that make sense um",
    "start": "329530",
    "end": "341050"
  },
  {
    "text": "that not not quite so you're saying that scenario is when you get the trace",
    "start": "341050",
    "end": "346780"
  },
  {
    "text": "parent header handed to you over the wire right it couldn't become someone else's choice about how tracing IDs are",
    "start": "346780",
    "end": "353680"
  },
  {
    "text": "formed in this case 128-bit hex arrays right and basic tracer for example uses",
    "start": "353680",
    "end": "362050"
  },
  {
    "text": "64 bit arrays 64 bit in an integer so basic tracers IDs aren't on joint bit",
    "start": "362050",
    "end": "372070"
  },
  {
    "text": "strings so if I were trying to say hey the trace ID for my company's tracing",
    "start": "372070",
    "end": "379330"
  },
  {
    "text": "system is this value but actually the the accessor that they get access to is",
    "start": "379330",
    "end": "384490"
  },
  {
    "text": "this value chosen by some other vendor because it came in the trace parent I'm",
    "start": "384490",
    "end": "389650"
  },
  {
    "text": "kind of I'm not actually able to give my trace ID this is sort of like the I mean",
    "start": "389650",
    "end": "397120"
  },
  {
    "text": "it's sort of anyone elses tracing that's why I made a comment in the dark",
    "start": "397120",
    "end": "403000"
  },
  {
    "start": "400000",
    "end": "665000"
  },
  {
    "text": "that I think referring to a trace parent is misleading what we're really doing is",
    "start": "403000",
    "end": "408160"
  },
  {
    "text": "adding XSS to explain context and that means that you just talking about your",
    "start": "408160",
    "end": "413470"
  },
  {
    "text": "own trace idea the only relationship to the w3c trace parent is just the fact that the",
    "start": "413470",
    "end": "420400"
  },
  {
    "text": "industry seems to be agreeing that yes we want trace ID and span IDs concept to",
    "start": "420400",
    "end": "426160"
  },
  {
    "text": "be present on therefore that there's a link there but it's not really that we are we taking that header and basically",
    "start": "426160",
    "end": "432760"
  },
  {
    "text": "making it available in span context yeah I I would agree with that",
    "start": "432760",
    "end": "440800"
  },
  {
    "text": "the intention was simply because we appear to have industry alignment on",
    "start": "440800",
    "end": "446980"
  },
  {
    "text": "exposing fan ID trace ID and a sampling bit over the wire that and those are",
    "start": "446980",
    "end": "455290"
  },
  {
    "text": "things people have been asking for to expose and open tracing so it seemed",
    "start": "455290",
    "end": "461170"
  },
  {
    "text": "given that there's convergence around this trait parent header there should be",
    "start": "461170",
    "end": "467110"
  },
  {
    "text": "general bayan on being able to expose these accessors for those concepts on",
    "start": "467110",
    "end": "474160"
  },
  {
    "text": "the span context but when I designed the values that they produce I chose a more",
    "start": "474160",
    "end": "480400"
  },
  {
    "text": "generic transport indicating we should be string values for the IDS or",
    "start": "480400",
    "end": "487540"
  },
  {
    "text": "something similar possibly multiple different kinds of formats we could access them but not to overfit to the",
    "start": "487540",
    "end": "495250"
  },
  {
    "text": "specific sort of 16-bit text ID that the",
    "start": "495250",
    "end": "500980"
  },
  {
    "text": "trace parent header defined so they would be would be a looser looser definition okay so that like Gary was",
    "start": "500980",
    "end": "509800"
  },
  {
    "text": "saying the name of this isn't to provide access to exactly what's in the trace",
    "start": "509800",
    "end": "515770"
  },
  {
    "text": "parent incoming header or that's not I mean that it's related to that the fact",
    "start": "515770",
    "end": "522490"
  },
  {
    "text": "that those concepts exists in w3c standard but it's not it's not",
    "start": "522490",
    "end": "527800"
  },
  {
    "text": "guaranteed that's what you'll get for example yes that's correct",
    "start": "527800",
    "end": "533710"
  },
  {
    "text": "these are for for correlating between your tracer and some other system that",
    "start": "533710",
    "end": "539710"
  },
  {
    "text": "isn't a tracer so presumably those other systems don't so it's not even",
    "start": "539710",
    "end": "544930"
  },
  {
    "text": "necessarily useful I would argue to expose them very specifics how you type",
    "start": "544930",
    "end": "551310"
  },
  {
    "text": "because the the thing you're trying to correlate with dozens isn't going to care your structured logging system",
    "start": "551310",
    "end": "558010"
  },
  {
    "text": "doesn't have a value type for 16-bit trace ID you know it has a value type",
    "start": "558010",
    "end": "563680"
  },
  {
    "text": "for spice or spring or something like that so it's doubly not particularly",
    "start": "563680",
    "end": "570790"
  },
  {
    "text": "useful to concentrate too much on that that format and also I would not expect",
    "start": "570790",
    "end": "576280"
  },
  {
    "text": "people to be using these accessors to be doing kind of trades header indexes or",
    "start": "576280",
    "end": "582790"
  },
  {
    "text": "something like that I would expect them use the tracer inject calls to be doing anything that",
    "start": "582790",
    "end": "589690"
  },
  {
    "text": "was tracing related but it's just for other systems so let's say we get an",
    "start": "589690",
    "end": "597130"
  },
  {
    "text": "incoming trace from Amazon x-ray and it's got I assume some kind of x-ray",
    "start": "597130",
    "end": "603010"
  },
  {
    "text": "stuff and the trace parent header but I thought we were also going to be using trace State to kind of store some of",
    "start": "603010",
    "end": "609940"
  },
  {
    "text": "that vendor specific stuff so I would",
    "start": "609940",
    "end": "615520"
  },
  {
    "text": "imagine okay I was going to say I would",
    "start": "615520",
    "end": "620860"
  },
  {
    "text": "imagine your your tracer would be the thing that would be extracting that header and so it has first pass at",
    "start": "620860",
    "end": "629140"
  },
  {
    "text": "deciding what it wants to do about all of that by the time you haven't bank on text object and can ask it for its trace",
    "start": "629140",
    "end": "636370"
  },
  {
    "text": "ID and span ID your tracing systems already sorted out what it was present",
    "start": "636370",
    "end": "643000"
  },
  {
    "text": "there yeah and I don't want to rehash",
    "start": "643000",
    "end": "649930"
  },
  {
    "text": "like the entire the Seattle workshop whatever that I mean the long-term goal",
    "start": "649930",
    "end": "655390"
  },
  {
    "text": "for the w3c project would hopefully involved like genuine interrupt",
    "start": "655390",
    "end": "662279"
  },
  {
    "text": "so I looked at the specification in the github issue a new plan to expose trace",
    "start": "664269",
    "end": "670999"
  },
  {
    "start": "665000",
    "end": "717000"
  },
  {
    "text": "state at all in the Spence as it feels important for some customers to be able",
    "start": "670999",
    "end": "677389"
  },
  {
    "text": "to to get vendor specific telemetry from or when the specific headers from with a",
    "start": "677389",
    "end": "685160"
  },
  {
    "text": "specific information from headers very",
    "start": "685160",
    "end": "690499"
  },
  {
    "text": "good fielder did he might explaining them a little bit so I mean three state",
    "start": "690499",
    "end": "695899"
  },
  {
    "text": "will be coming as a separate header and if you didn't parse it in extract and",
    "start": "695899",
    "end": "702800"
  },
  {
    "text": "didn't associated with span then customer cannot access this data from",
    "start": "702800",
    "end": "707809"
  },
  {
    "text": "span object itself so I wonder is there any plans to to put those trace state",
    "start": "707809",
    "end": "714769"
  },
  {
    "text": "information somewhere again the assumption is that both transparent and",
    "start": "714769",
    "end": "720860"
  },
  {
    "start": "717000",
    "end": "802000"
  },
  {
    "text": "trace State really represent a fair and span in the in the caller and then once",
    "start": "720860",
    "end": "726769"
  },
  {
    "text": "you're inside the application you're tracing will already read that parent information and create its own span",
    "start": "726769",
    "end": "732649"
  },
  {
    "text": "internally and that's what really open tracing is gonna expose the span ID of the current span you don't even have a",
    "start": "732649",
    "end": "739879"
  },
  {
    "text": "span object relief for the inbound span headers they just like well they're in",
    "start": "739879",
    "end": "745430"
  },
  {
    "text": "span context so you can theoretically could access them but I would say that like we I recently open an issue on that",
    "start": "745430",
    "end": "752569"
  },
  {
    "text": "regardless that when we do an extract from the wire and we reach on the span context sometimes that span context may",
    "start": "752569",
    "end": "758629"
  },
  {
    "text": "not even have any trace ID because your system decided oh I'm not gonna trust the inbound thing I'm just gonna put it",
    "start": "758629",
    "end": "765019"
  },
  {
    "text": "aside as a correlation but for myself there's nothing really until you create a real span then it will get a real",
    "start": "765019",
    "end": "771290"
  },
  {
    "text": "tracer you as Panaji and so I think like the I think the main",
    "start": "771290",
    "end": "777680"
  },
  {
    "text": "idea of access is really you want to use the current spans ID to do anything like",
    "start": "777680",
    "end": "785240"
  },
  {
    "text": "login or observations and sign things and then it doesn't really matter what came on the wire it's the only relation",
    "start": "785240",
    "end": "792350"
  },
  {
    "text": "to the wire format is just the fact that we all in the industry agree that span ID and trace idea the thing that makes",
    "start": "792350",
    "end": "798410"
  },
  {
    "text": "sense to expose okay um yeah yeah sorry",
    "start": "798410",
    "end": "805130"
  },
  {
    "start": "802000",
    "end": "847000"
  },
  {
    "text": "pardon my ignorance I'm not I may not be that familiar with all the details but",
    "start": "805130",
    "end": "811279"
  },
  {
    "text": "like if if we send application ID as part of tray state we'll be able to get",
    "start": "811279",
    "end": "818180"
  },
  {
    "text": "this application ID and like group ID or a filter by it and in SDK or I wouldn't",
    "start": "818180",
    "end": "825560"
  },
  {
    "text": "be able to access this app ID I don't think you will because it's a specific thing now can I put some extension like",
    "start": "825560",
    "end": "838220"
  },
  {
    "text": "so if I want to access it I should be able to implement our own extract method",
    "start": "838220",
    "end": "843440"
  },
  {
    "text": "and then put it in context and then I mean that's what I would say in general",
    "start": "843440",
    "end": "849670"
  },
  {
    "start": "847000",
    "end": "928000"
  },
  {
    "text": "goal dopant racing is to try and stay away from exposing wire format to the",
    "start": "849670",
    "end": "854990"
  },
  {
    "text": "end user I think really if you're talking about some trace your specific internal state you probably honestly",
    "start": "854990",
    "end": "860209"
  },
  {
    "text": "your best bet would be to do an attempted typecast you know catch the class cast exception or whatever and",
    "start": "860209",
    "end": "866569"
  },
  {
    "text": "then once you have your trace your specific span contacts to just access the fields that you want I mean that",
    "start": "866569",
    "end": "871970"
  },
  {
    "text": "would be the sort of moral equivalent of what you're asking for in the open tracing world I don't think that open tracing has a goal with this change",
    "start": "871970",
    "end": "879319"
  },
  {
    "text": "anyway I mean this is my opinion I'm curious how that you'll disagree either I don't think it would be a goal to try",
    "start": "879319",
    "end": "884870"
  },
  {
    "text": "and create a generic iterator for trace",
    "start": "884870",
    "end": "890899"
  },
  {
    "text": "date and things like that that are intended to be tradeshow specific I think the idea is that there are a couple of things that you know open",
    "start": "890899",
    "end": "898699"
  },
  {
    "text": "tracing has tried to remain incredibly neutral about how traces are described but it seems like there's enough of a",
    "start": "898699",
    "end": "905000"
  },
  {
    "text": "consensus around a said he's going to be and sampled that we can expose though without having any vendor-specific",
    "start": "905000",
    "end": "910250"
  },
  {
    "text": "anything the thing you're asking for is kind of literally vendor-specific so I think some form of typecasting is",
    "start": "910250",
    "end": "917000"
  },
  {
    "text": "probably like more in line with the philosophy than then trying to expose all the information through the open",
    "start": "917000",
    "end": "922760"
  },
  {
    "text": "tracing API per se but that's my opinion I'm happy to your others I would say I",
    "start": "922760",
    "end": "930470"
  },
  {
    "start": "928000",
    "end": "1038000"
  },
  {
    "text": "understand your desire Sergei around using those as indices those values",
    "start": "930470",
    "end": "935960"
  },
  {
    "text": "indices in other systems for the reasons kind of mentioned already I didn't",
    "start": "935960",
    "end": "943430"
  },
  {
    "text": "include anything like that in this proposal just trying to instead focus on",
    "start": "943430",
    "end": "949480"
  },
  {
    "text": "what we know is really really necessary which is just the main identifier the",
    "start": "949480",
    "end": "957080"
  },
  {
    "text": "span ID who are correlating things on this fan level and the trace ID for correlating things on the trace level",
    "start": "957080",
    "end": "963520"
  },
  {
    "text": "there's a lot of value that could be had from those two things and there's a lot",
    "start": "963520",
    "end": "972110"
  },
  {
    "text": "of consensus it seems that people would be comfortable exposing some kind of",
    "start": "972110",
    "end": "978800"
  },
  {
    "text": "value there and then likewise the third piece in the span parent the sampling",
    "start": "978800",
    "end": "984650"
  },
  {
    "text": "bit there's also been a lot of requests for that and it seemed also broadly",
    "start": "984650",
    "end": "991490"
  },
  {
    "text": "supportable and would again be useful as a basic honor opposite to determine",
    "start": "991490",
    "end": "998480"
  },
  {
    "text": "whether other secondary systems should be running or creating overhead though I",
    "start": "998480",
    "end": "1005709"
  },
  {
    "text": "actually have most of my questions or actually around that sampling fit so that's why the focus of this proposal is",
    "start": "1005709",
    "end": "1012970"
  },
  {
    "text": "just on those three fields I have some ideas for how people could expose some",
    "start": "1012970",
    "end": "1018220"
  },
  {
    "text": "of those other fields through baggage if we didn't want to add another interface but I kind of wanted to leave that aside",
    "start": "1018220",
    "end": "1025329"
  },
  {
    "text": "because I was concerned it would be a little more contentious if we started getting into that other stuff so there",
    "start": "1025329",
    "end": "1035770"
  },
  {
    "text": "might be sense thank you so is the implication that a tracer implementer",
    "start": "1035770",
    "end": "1041860"
  },
  {
    "start": "1038000",
    "end": "1057000"
  },
  {
    "text": "should be using an internal ID length and",
    "start": "1041860",
    "end": "1047530"
  },
  {
    "text": "format that matches the 16 by 8 stuff that Jays parents specifies I don't",
    "start": "1047530",
    "end": "1056380"
  },
  {
    "text": "think so sure no for the purpose of this access er it it's intentionally left as a variable",
    "start": "1056380",
    "end": "1062860"
  },
  {
    "start": "1057000",
    "end": "1123000"
  },
  {
    "text": "link format to allow you to put whatever",
    "start": "1062860",
    "end": "1068050"
  },
  {
    "text": "you want in there the assumption is simply that whatever is coming out of there if it's a fan ID",
    "start": "1068050",
    "end": "1073930"
  },
  {
    "text": "its unique within the trace and if it's a trace ID it's globally unique and I",
    "start": "1073930",
    "end": "1084780"
  },
  {
    "text": "think that if you don't support this also I should point out returning an",
    "start": "1084780",
    "end": "1090100"
  },
  {
    "text": "empty and empty value is also acceptable and that means that it's not necessarily",
    "start": "1090100",
    "end": "1098020"
  },
  {
    "text": "a supported feature so there's also backwards compatibility I see unique across all the processes in",
    "start": "1098020",
    "end": "1106930"
  },
  {
    "text": "the trace entire distribution when",
    "start": "1106930",
    "end": "1112360"
  },
  {
    "text": "someone's trying to use these for correlation I yeah the expectation would be that yeah and across vendors okay",
    "start": "1112360",
    "end": "1122040"
  },
  {
    "text": "that'll be good to mention yeah just that different tracer and foreigners should strive to make it match even if",
    "start": "1122040",
    "end": "1128740"
  },
  {
    "start": "1123000",
    "end": "1138000"
  },
  {
    "text": "their internal tracing IDs don't follow this convention yeah",
    "start": "1128740",
    "end": "1134350"
  },
  {
    "text": "because by dynaTrace is five integers and trace trace view or app optics right",
    "start": "1134350",
    "end": "1139570"
  },
  {
    "text": "now is a honey sixty bits which is the nine yeah I've mentioned this in the",
    "start": "1139570",
    "end": "1146530"
  },
  {
    "text": "proposal that it's variable ink specifically to be backwards compatible with existing ID systems and to also",
    "start": "1146530",
    "end": "1155140"
  },
  {
    "text": "before compatible because this is a version of this header the industry is",
    "start": "1155140",
    "end": "1161080"
  },
  {
    "text": "saying they're probably going to standardize on this but it could also version again right even a trace parent",
    "start": "1161080",
    "end": "1166870"
  },
  {
    "text": "header has a version field in it which is the other reason why I don't want to",
    "start": "1166870",
    "end": "1172510"
  },
  {
    "text": "overfit to what's currently being proposed as an ID there I think our we should",
    "start": "1172510",
    "end": "1179679"
  },
  {
    "text": "have a looser definition simply that we support these fields but we don't",
    "start": "1179679",
    "end": "1185740"
  },
  {
    "text": "indicate too much about the size or shape of the value within them just the",
    "start": "1185740",
    "end": "1190780"
  },
  {
    "text": "properties that it has around its uniqueness so say again you'll attempt to put it",
    "start": "1190780",
    "end": "1197980"
  },
  {
    "text": "into trace ID but it doesn't fit you put it in trace state right make any",
    "start": "1197980",
    "end": "1209770"
  },
  {
    "text": "statements about what the format is we",
    "start": "1209770",
    "end": "1215549"
  },
  {
    "text": "make sense yeah okay maybe I was spending a better way to say what I was trying to say earlier maybe one way of",
    "start": "1215549",
    "end": "1223710"
  },
  {
    "text": "someone using the w3c header that should be you know these three aspects of that",
    "start": "1223710",
    "end": "1232900"
  },
  {
    "text": "header should be available in open tracing and that's sort of the guarantee",
    "start": "1232900",
    "end": "1238419"
  },
  {
    "text": "that's being made it doesn't mean that if you're doing something other than w3c that you wouldn't also be able to provide your own version of the face ID",
    "start": "1238419",
    "end": "1245110"
  },
  {
    "text": "so that is to say it's not like attempting to conform precisely with scratch it just goes to support these",
    "start": "1245110",
    "end": "1252039"
  },
  {
    "text": "key concepts that people have asked for for years no yeah make sense",
    "start": "1252039",
    "end": "1257820"
  },
  {
    "text": "and I'll redraft this this proposal to make this a lot clearer I can see where",
    "start": "1259000",
    "end": "1265460"
  },
  {
    "text": "the confusion is coming from now I just wanted the question sort of the",
    "start": "1265460",
    "end": "1273309"
  },
  {
    "text": "East sampled I I was raising this question like do we want to clarify what this sample means the bid yes III",
    "start": "1273309",
    "end": "1284040"
  },
  {
    "text": "because I don't work I have not done a whole lot of instrumentation with",
    "start": "1284040",
    "end": "1289270"
  },
  {
    "text": "sampling based systems I personally am NOT very familiar with what the use",
    "start": "1289270",
    "end": "1295120"
  },
  {
    "text": "cases are for having that bit exposed I know it's been asked for repeatedly but",
    "start": "1295120",
    "end": "1302530"
  },
  {
    "text": "it's not clear to me what as a boolean what kind of logical switching would",
    "start": "1302530",
    "end": "1307570"
  },
  {
    "text": "secondary systems be expected to be doing based on that value so I really",
    "start": "1307570",
    "end": "1312580"
  },
  {
    "text": "think that the semantic meaning for it like why what am I going to do or not do",
    "start": "1312580",
    "end": "1318330"
  },
  {
    "text": "whether when that thing is on or off it's not clear to me yeah I guess one",
    "start": "1318330",
    "end": "1325059"
  },
  {
    "text": "use case I remember people were asking and saying oh I want to add a lot more profiling but I don't want to bother if",
    "start": "1325059",
    "end": "1331090"
  },
  {
    "text": "this black trace is not being sampled right so that could be an example but again that doesn't match with for",
    "start": "1331090",
    "end": "1338140"
  },
  {
    "text": "example with double 3c definition because there it says if it's zero it doesn't mean that it's not sample it's",
    "start": "1338140",
    "end": "1344470"
  },
  {
    "text": "just like we're not telling you whether it's sample or not right it's like it's really if it's one that you have this sample for sure but zero means like we",
    "start": "1344470",
    "end": "1352540"
  },
  {
    "text": "haven't made a decision yet yeah that's a main idea and we do a lot of sampling",
    "start": "1352540",
    "end": "1359650"
  },
  {
    "start": "1355000",
    "end": "1401000"
  },
  {
    "text": "and our system Center we will tree this flag is like somebody's if somebody said",
    "start": "1359650",
    "end": "1366400"
  },
  {
    "text": "it to ones and yeah we'll try our best to sample it to collect it but if it's",
    "start": "1366400",
    "end": "1373450"
  },
  {
    "text": "zero we still feel like you'll be on edge of making this decision so mostly",
    "start": "1373450",
    "end": "1378760"
  },
  {
    "text": "it's and even if it's one we will try our best but we are not guaranteeing that it will be corrected it's mostly",
    "start": "1378760",
    "end": "1385960"
  },
  {
    "text": "flock like just a way to communicate between layers like first layer may say",
    "start": "1385960",
    "end": "1392440"
  },
  {
    "text": "something about yeah I really want it because for some because I think it's",
    "start": "1392440",
    "end": "1397809"
  },
  {
    "text": "important yeah and once one nuance that I think is",
    "start": "1397809",
    "end": "1406410"
  },
  {
    "text": "a bit different between the wire protocol and an improv accessor for this",
    "start": "1406410",
    "end": "1411929"
  },
  {
    "text": "bit is part of why I think it's vague about whether you should respect this in",
    "start": "1411929",
    "end": "1417750"
  },
  {
    "text": "the protocol aspect is it can be spoofed right like you don't you can't",
    "start": "1417750",
    "end": "1424110"
  },
  {
    "text": "necessarily trust what's come over the wire and so you have to use this",
    "start": "1424110",
    "end": "1430320"
  },
  {
    "text": "sampling value as an indication right it might be coming from another system it",
    "start": "1430320",
    "end": "1435780"
  },
  {
    "text": "might be fake so it's it's kept partially vague I know",
    "start": "1435780",
    "end": "1441270"
  },
  {
    "text": "for that reason and in the in process",
    "start": "1441270",
    "end": "1447090"
  },
  {
    "text": "access er by the time you've gotten to a span context object the tracing systems",
    "start": "1447090",
    "end": "1452669"
  },
  {
    "text": "already created that object for you and is running so it knows whether it's",
    "start": "1452669",
    "end": "1458880"
  },
  {
    "text": "sampling or not so you don't have you don't have the trust issue in this case",
    "start": "1458880",
    "end": "1465020"
  },
  {
    "text": "around whether or not you should trust that value right like it's a little more",
    "start": "1465020",
    "end": "1471480"
  },
  {
    "text": "definitive but there's still some just semantic implications about what what",
    "start": "1471480",
    "end": "1478710"
  },
  {
    "text": "does it mean that it is sampling or is recording just because there's this it",
    "start": "1478710",
    "end": "1484500"
  },
  {
    "text": "seems like that's a vague concept in some systems for example we may be",
    "start": "1484500",
    "end": "1490010"
  },
  {
    "text": "recording it now but not storing it permanently would be a way light step would would do this and so we would our",
    "start": "1490010",
    "end": "1497549"
  },
  {
    "text": "question is what we say sampling is always on that would how we would use this header yeah",
    "start": "1497549",
    "end": "1505950"
  },
  {
    "text": "I'd loved yeah there's there's also another option is that when so yet you",
    "start": "1505950",
    "end": "1512700"
  },
  {
    "text": "might be recording but you're really waiting for this for the downstream to",
    "start": "1512700",
    "end": "1518880"
  },
  {
    "text": "send you back a signal saying oh yeah that was interesting so please kept keep what you recorded so normally you yeah",
    "start": "1518880",
    "end": "1527490"
  },
  {
    "text": "yeah they were actually even though you're recording you look pathetic but not really",
    "start": "1527490",
    "end": "1533850"
  },
  {
    "text": "yeah you're a what you were saying earlier about people using in terms of open tracing access runs phantom if",
    "start": "1533850",
    "end": "1539160"
  },
  {
    "text": "they're not talking of sampling in general but in terms of the access runs band context perhaps the most important use case is indeed for just an",
    "start": "1539160",
    "end": "1546660"
  },
  {
    "text": "optimization that you can not do anything if something is being sampled this doesn't line up particularly well",
    "start": "1546660",
    "end": "1552420"
  },
  {
    "text": "with the w3c thing but I almost wonder if it shouldn't be a sample bit if it should instead be a this is not sampled",
    "start": "1552420",
    "end": "1558150"
  },
  {
    "text": "but it's more of a like I know outfit I mean that's um that's actually actionable from a code standpoint in a",
    "start": "1558150",
    "end": "1565290"
  },
  {
    "text": "way that I think could be pretty meaningful in the performance context unfortunately it's totally at odds with",
    "start": "1565290",
    "end": "1571860"
  },
  {
    "text": "the way that people tend to think about this field in the w3c world but but it just occurs to me that that's really",
    "start": "1571860",
    "end": "1577890"
  },
  {
    "text": "what you want to know is it not sampled and then you know whether it's sampled for now or sampled for later in the way",
    "start": "1577890",
    "end": "1583020"
  },
  {
    "text": "that my proposal was to separate this -",
    "start": "1583020",
    "end": "1589200"
  },
  {
    "start": "1587000",
    "end": "1677000"
  },
  {
    "text": "actually today span ID accessors from the sampling because it seems like sampling isn't like very",
    "start": "1589200",
    "end": "1594540"
  },
  {
    "text": "clear understood what what really people want to use it for so I would rather go back to - the yeah Oscars and say like",
    "start": "1594540",
    "end": "1601410"
  },
  {
    "text": "let's define the use cases first where is what is following in there very clear",
    "start": "1601410",
    "end": "1610519"
  },
  {
    "text": "I'm also fine with with pulling that out of the proposal if we can't if the value",
    "start": "1614780",
    "end": "1622920"
  },
  {
    "text": "for them is not is not clear and and immediate I just know it's it's a thing",
    "start": "1622920",
    "end": "1628380"
  },
  {
    "text": "that does come up repeatedly and get requested I mean doesn't mean that we",
    "start": "1628380",
    "end": "1634740"
  },
  {
    "text": "just like shell was completely right we can still work on it I would just prefer to move on the sporadic accessors",
    "start": "1634740",
    "end": "1642180"
  },
  {
    "text": "because that seems like a very easy thing to just roll out and then give immediate benefits to people where it",
    "start": "1642180",
    "end": "1648480"
  },
  {
    "text": "was sampling like not everyone asked for it and we can we can work a bit longer make on that that make sense to me and",
    "start": "1648480",
    "end": "1658160"
  },
  {
    "text": "that note is there anyone on the call who is concerned about exposing span ID",
    "start": "1658160",
    "end": "1664110"
  },
  {
    "text": "and trace ID as far as their system goes and thinks this would be onerous",
    "start": "1664110",
    "end": "1669840"
  },
  {
    "text": "for them I won't take the bait on",
    "start": "1669840",
    "end": "1678690"
  },
  {
    "start": "1677000",
    "end": "1722000"
  },
  {
    "text": "onerous but I will say that we've given plenty of talks over the last few years",
    "start": "1678690",
    "end": "1683970"
  },
  {
    "text": "about open tracing the in instrumentation API that can be used for things like Prometheus and so on and",
    "start": "1683970",
    "end": "1689909"
  },
  {
    "text": "those use cases really don't need it's stop time which is fine with me I think we just means that you know we have to",
    "start": "1689909",
    "end": "1696960"
  },
  {
    "text": "make sure the documentation is it's clear about whether or not this these",
    "start": "1696960",
    "end": "1702629"
  },
  {
    "text": "tracings manatees are sort of like quote unquote required or if it's ok to return empty string or something like that if",
    "start": "1702629",
    "end": "1709049"
  },
  {
    "text": "you just don't need one I mean if you're just doing tracing two metrics exporter and you're doing that bias and kind of",
    "start": "1709049",
    "end": "1714960"
  },
  {
    "text": "trace your implementation I wouldn't want people to have to stress stress that about these requirements yeah and",
    "start": "1714960",
    "end": "1723450"
  },
  {
    "start": "1722000",
    "end": "1804000"
  },
  {
    "text": "and for me as someone who doesn't use 128-bit trace IDs it's a little bit",
    "start": "1723450",
    "end": "1730350"
  },
  {
    "text": "onerous because in the long term for cross vendor correlation it would be",
    "start": "1730350",
    "end": "1736710"
  },
  {
    "text": "better if I were right because that's what's in the chase context back but I don't think that's a different challenge",
    "start": "1736710",
    "end": "1742499"
  },
  {
    "text": "than New Relic or dynaTrace is also gonna have to face word not not none of those three companies do 120 fetch a",
    "start": "1742499",
    "end": "1750240"
  },
  {
    "text": "city's today so and for anyone to support trace context and have this",
    "start": "1750240",
    "end": "1756450"
  },
  {
    "text": "correlation though you'll need to be able to get a unique identifier that's cross vendor compatible Amazon for",
    "start": "1756450",
    "end": "1764009"
  },
  {
    "text": "example also isn't isn't doing it this way so uh 25 I DS so you know I think we",
    "start": "1764009",
    "end": "1774149"
  },
  {
    "text": "could start giving you these incompatible trace IDs and then have support for the Latrese context of later",
    "start": "1774149",
    "end": "1780990"
  },
  {
    "text": "for example like you're saying with the strings not having a fixed link if you",
    "start": "1780990",
    "end": "1789360"
  },
  {
    "text": "using one tracer in the systems exactly",
    "start": "1789360",
    "end": "1796769"
  },
  {
    "text": "yeah no you're exactly right yeah it's only important if you next to different than their and even if",
    "start": "1796769",
    "end": "1804240"
  },
  {
    "start": "1804000",
    "end": "1843000"
  },
  {
    "text": "you mixed vendors it's really I think the question I would expect people to be able to configure their trace in",
    "start": "1804240",
    "end": "1810390"
  },
  {
    "text": "libraries saying I don't trust incoming ID or I'm fine with just reusing it like",
    "start": "1810390",
    "end": "1817010"
  },
  {
    "text": "like if you look at the notes and in a workshop like the local generic tracers",
    "start": "1817010",
    "end": "1824460"
  },
  {
    "text": "which technically don't even need the custom the intersection right they can just use the different orange color but",
    "start": "1824460",
    "end": "1831680"
  },
  {
    "text": "even then like if it's very easy to do a denial-of-service on them by saying the",
    "start": "1831680",
    "end": "1836730"
  },
  {
    "text": "same thing if they can some people at the edge I'll never gonna trust this",
    "start": "1836730",
    "end": "1841740"
  },
  {
    "text": "thing and that's the yeah and that's the part I mean certainly if you're trusting",
    "start": "1841740",
    "end": "1847520"
  },
  {
    "start": "1843000",
    "end": "1915000"
  },
  {
    "text": "authenticated API is across vendors where you can trust the sampling decision and the trace ID and you just",
    "start": "1847520",
    "end": "1853470"
  },
  {
    "text": "happen to be using x-ray in one thing and some other company in another and there was this magic way that you could",
    "start": "1853470",
    "end": "1859470"
  },
  {
    "text": "be sure to trust their IDs that would be cool and then you'd have this magic cross vendor reference values but yeah",
    "start": "1859470",
    "end": "1868380"
  },
  {
    "text": "in in practice people are gonna have to be very careful about writing rules to",
    "start": "1868380",
    "end": "1875070"
  },
  {
    "text": "filter or use links you know to do the the reference of it's not gonna be a",
    "start": "1875070",
    "end": "1881070"
  },
  {
    "text": "globally unique value across all the the",
    "start": "1881070",
    "end": "1886110"
  },
  {
    "text": "components in the distributed trace until you can have that functionality at the edge of your service like in some",
    "start": "1886110",
    "end": "1893790"
  },
  {
    "text": "nginx configuration or service stuff right like that that part seems tricky to me to promise that it's that unless",
    "start": "1893790",
    "end": "1902930"
  },
  {
    "text": "unless are you're using the same single vendor that's pretty much the only way it's gonna be that for a long time I",
    "start": "1902930",
    "end": "1908760"
  },
  {
    "text": "guess that could be been more clear a technician yeah I can see making it",
    "start": "1908760",
    "end": "1916080"
  },
  {
    "text": "clear that this is these expectations are only expectations within the tracing",
    "start": "1916080",
    "end": "1922230"
  },
  {
    "text": "system you're talking to write whatever tracing system is running in your process and you're asking ish for its",
    "start": "1922230",
    "end": "1928530"
  },
  {
    "text": "fantasy and it's criticizing your expectation for you",
    "start": "1928530",
    "end": "1934350"
  },
  {
    "text": "really only a religious if you're not asking it can never for about other",
    "start": "1934350",
    "end": "1939750"
  },
  {
    "text": "systems if I should be using yeah we're putting in whatever you're correlating",
    "start": "1939750",
    "end": "1944880"
  },
  {
    "text": "with not yeah oh yeah system no yeah and I think that would be just helpful and",
    "start": "1944880",
    "end": "1950759"
  },
  {
    "start": "1949000",
    "end": "1971000"
  },
  {
    "text": "tempering expectations that this is gonna be a magic validator you can go looking everywhere for that make",
    "start": "1950759",
    "end": "1959480"
  },
  {
    "text": "it's cool I noticed census also has accessors like this on the span context",
    "start": "1969580",
    "end": "1975250"
  },
  {
    "text": "is that part the motivation for",
    "start": "1975250",
    "end": "1980410"
  },
  {
    "text": "tried-and-true suctions is gonna do it's not it's not the motivation the",
    "start": "1980410",
    "end": "1989299"
  },
  {
    "text": "motivation for the ability to add fan",
    "start": "1989299",
    "end": "1995299"
  },
  {
    "text": "and trace observers in a sort of generic fashion I'm surprised to do this",
    "start": "1995299",
    "end": "2004360"
  },
  {
    "text": "the lack of any identifiers really makes it awkward you end up with a lot of",
    "start": "2004360",
    "end": "2010120"
  },
  {
    "text": "machinery attractive factories around the brass that's great objection you think basically cleaner accesses your",
    "start": "2010120",
    "end": "2019030"
  },
  {
    "text": "IDs in a weird way and then it's awkward but there's a huge amount of value to",
    "start": "2019030",
    "end": "2025299"
  },
  {
    "text": "that was come from being able to correlate this information in other systems so what people are doing right",
    "start": "2025299",
    "end": "2030700"
  },
  {
    "text": "now is just simply vendor specific way with a Patrick that's theirs get at",
    "start": "2030700",
    "end": "2036030"
  },
  {
    "text": "whatever identifier so if we can stop",
    "start": "2036030",
    "end": "2041440"
  },
  {
    "text": "people from diktats by giving up successors then of there's a box of code",
    "start": "2041440",
    "end": "2047530"
  },
  {
    "text": "that could become shared in tracing code but that's that's the real hope",
    "start": "2047530",
    "end": "2054608"
  },
  {
    "text": "I shouldn't say hope a lot of clear values has been right on that front we",
    "start": "2054609",
    "end": "2064898"
  },
  {
    "text": "we've had users asking for trace ID to using the logs from like day one yeah",
    "start": "2064899",
    "end": "2070378"
  },
  {
    "start": "2065000",
    "end": "2075000"
  },
  {
    "text": "definitely che said yeah I get a lot of requests for that too I don't have a span ID amount to make",
    "start": "2070379",
    "end": "2076780"
  },
  {
    "start": "2075000",
    "end": "2087000"
  },
  {
    "text": "one it'll be the start of energy start a bad idea end event ID I'll give you the",
    "start": "2076780",
    "end": "2081940"
  },
  {
    "text": "start that's the safest one together but also I think one thing to look at though",
    "start": "2081940",
    "end": "2089350"
  },
  {
    "start": "2087000",
    "end": "2145000"
  },
  {
    "text": "in the spec is it does say like you can produce a trace ID and when something asks you for span ID you can just give",
    "start": "2089350",
    "end": "2095618"
  },
  {
    "text": "back an empty value and I don't think we can I don't think we can",
    "start": "2095619",
    "end": "2102370"
  },
  {
    "text": "mystically add anything to the open tracing expects it wouldn't let you do something like that it needs to be some",
    "start": "2102370",
    "end": "2107470"
  },
  {
    "text": "kind of backwards compatibility we can't automatically force everyone to now magically produces it's just that some",
    "start": "2107470",
    "end": "2115630"
  },
  {
    "text": "of these secondary systems may not have as much utility and they might have to",
    "start": "2115630",
    "end": "2122290"
  },
  {
    "text": "do value text before they do something which is like a mild inefficiency I",
    "start": "2122290",
    "end": "2128350"
  },
  {
    "text": "suppose but I think that's that's all worth a worthy price to pay for for",
    "start": "2128350",
    "end": "2135880"
  },
  {
    "text": "backwards compatibility and not adding some new required feature to support open tracing and again in practice I",
    "start": "2135880",
    "end": "2147130"
  },
  {
    "start": "2145000",
    "end": "2208000"
  },
  {
    "text": "think it's the kind of thing that's not too concerning like if you're using a tracing system that doesn't support this",
    "start": "2147130",
    "end": "2152500"
  },
  {
    "text": "stuff and then you would like to use stuff that wants it you're just like oh well my tracing system and this cool",
    "start": "2152500",
    "end": "2160450"
  },
  {
    "text": "other library don't work with each other but it's not it's not like a disaster or",
    "start": "2160450",
    "end": "2167950"
  },
  {
    "text": "something that would be unexpected for the developer presumably the person gluing these things together at least",
    "start": "2167950",
    "end": "2173530"
  },
  {
    "text": "somewhat aware of the penetration system they're using so I don't see that",
    "start": "2173530",
    "end": "2179410"
  },
  {
    "text": "compatibility issues as being too dangerous for people who don't already support this kind of stuff and by stuff",
    "start": "2179410",
    "end": "2190270"
  },
  {
    "text": "I mean span ID and trace ID okay",
    "start": "2190270",
    "end": "2202140"
  },
  {
    "text": "so I feel like my big takeaways are to really clarify that this is not header",
    "start": "2207680",
    "end": "2214440"
  },
  {
    "start": "2208000",
    "end": "2264000"
  },
  {
    "text": "specific it's not specific to the trace parent supporting explicitly that what's",
    "start": "2214440",
    "end": "2222539"
  },
  {
    "text": "in the w3 spec is just supporting fields that are similar to the fields in that",
    "start": "2222539",
    "end": "2227969"
  },
  {
    "text": "spec and really emphasize this is not for automatically allowing cross racer",
    "start": "2227969",
    "end": "2237199"
  },
  {
    "text": "compatibility or Interop that would not be the intention of accessing these",
    "start": "2237199",
    "end": "2242729"
  },
  {
    "text": "things and then thirdly to drop the the",
    "start": "2242729",
    "end": "2248609"
  },
  {
    "text": "sampling bit from this proposal and to move it to a separate proposal because there's a beta round that I think is a",
    "start": "2248609",
    "end": "2255089"
  },
  {
    "text": "little more vague great thanks everyone",
    "start": "2255089",
    "end": "2266130"
  },
  {
    "start": "2264000",
    "end": "2300000"
  },
  {
    "text": "I feel like I know enough to move this proposal forward another step and it's",
    "start": "2266130",
    "end": "2272420"
  },
  {
    "text": "9:15 so unless other people have more questions on this I would suggest maybe",
    "start": "2272420",
    "end": "2280049"
  },
  {
    "text": "we move on thank you for watching me I'm gonna drop off great thank you so much",
    "start": "2280049",
    "end": "2287640"
  },
  {
    "text": "Sergey great so the other thing I would",
    "start": "2287640",
    "end": "2301049"
  },
  {
    "start": "2300000",
    "end": "2419000"
  },
  {
    "text": "like people to have a look at and I don't really know if if ten minutes is enough time to have conversation about",
    "start": "2301049",
    "end": "2307769"
  },
  {
    "text": "it and also I want to leave room for anything else anyone else wants to talk about but I did create a pull request",
    "start": "2307769",
    "end": "2316969"
  },
  {
    "text": "around a more specific RFP RFC process",
    "start": "2316969",
    "end": "2323039"
  },
  {
    "text": "for moving the open tracing spec forward where each proposal to change the API",
    "start": "2323039",
    "end": "2331099"
  },
  {
    "text": "its first drafted in a document called an RFC that is committed to the",
    "start": "2331099",
    "end": "2336719"
  },
  {
    "text": "specification repo it has several states that moves screw from draft to testing where we",
    "start": "2336719",
    "end": "2344220"
  },
  {
    "text": "then implement a version of the proposal as an API change in a quorum of major",
    "start": "2344220",
    "end": "2352470"
  },
  {
    "text": "languages and if that looks good then we mark the proposal as accepted and add",
    "start": "2352470",
    "end": "2359820"
  },
  {
    "text": "the language and it directly to the specification so I'm curious just sort",
    "start": "2359820",
    "end": "2367770"
  },
  {
    "text": "of hot aches from people who have had a chance to look at that proposal is this something that looks generally like the",
    "start": "2367770",
    "end": "2374880"
  },
  {
    "text": "right direction to them you think it's generally something we need so they wish it was following a",
    "start": "2374880",
    "end": "2381270"
  },
  {
    "text": "different format etc",
    "start": "2381270",
    "end": "2385220"
  },
  {
    "text": "this young mutant yes this is that no one has any opinions there is no one",
    "start": "2408580",
    "end": "2413980"
  },
  {
    "text": "read it it's okay if you haven't read it",
    "start": "2413980",
    "end": "2420220"
  },
  {
    "text": "yet I would just ask please please take a look at that because I think it's one",
    "start": "2420220",
    "end": "2426070"
  },
  {
    "text": "I do think we we definitely need a formal process for a change right now it's just to cowboy I mean it it has",
    "start": "2426070",
    "end": "2434380"
  },
  {
    "text": "been working because people are nice and care and they're trying hard but it",
    "start": "2434380",
    "end": "2439450"
  },
  {
    "text": "would be I think more open to people outside of the sort of smaller inner OTS",
    "start": "2439450",
    "end": "2449050"
  },
  {
    "text": "si group when it comes to making proposals if there was a more obvious",
    "start": "2449050",
    "end": "2454660"
  },
  {
    "text": "clear format for how that worked and would also help coordinate getting these",
    "start": "2454660",
    "end": "2463240"
  },
  {
    "text": "changes out across several languages at the same time rather than what we've",
    "start": "2463240",
    "end": "2468430"
  },
  {
    "text": "been doing so far which is try to sort of test-drive it in Java and then if that looks good then roll it out to the",
    "start": "2468430",
    "end": "2475420"
  },
  {
    "text": "other languages that kind of takes a long time and we now have a cross",
    "start": "2475420",
    "end": "2480430"
  },
  {
    "text": "language working group of people who are interested in making these changes in their various languages and domains so",
    "start": "2480430",
    "end": "2487690"
  },
  {
    "text": "we've got sort of the open source staffing available to to make decide we",
    "start": "2487690",
    "end": "2494710"
  },
  {
    "text": "wanted to add something like span ID and trace ID and then go test and roll it out in you know three to five languages",
    "start": "2494710",
    "end": "2502120"
  },
  {
    "text": "at the same time and then add it to the spec so I think we have the ability to",
    "start": "2502120",
    "end": "2507520"
  },
  {
    "text": "make these changes faster and more coordinated but we do need some structure to explain to everyone how",
    "start": "2507520",
    "end": "2512710"
  },
  {
    "text": "we're going to do it I have had a look",
    "start": "2512710",
    "end": "2518650"
  },
  {
    "start": "2517000",
    "end": "2883000"
  },
  {
    "text": "and I do like this format I'm not so passionate about the ax ax structure of",
    "start": "2518650",
    "end": "2527140"
  },
  {
    "text": "it but having an off C is a good thing and your example is also a good first",
    "start": "2527140",
    "end": "2533200"
  },
  {
    "text": "example for that Thanks oh yes and I should mention this trades",
    "start": "2533200",
    "end": "2539950"
  },
  {
    "text": "parent proposal if you are looking that it's written as one of these RFC's",
    "start": "2539950",
    "end": "2546310"
  },
  {
    "text": "for the RFC proposal so it's sort of a prototype great well I don't think we",
    "start": "2546310",
    "end": "2562780"
  },
  {
    "text": "can have too much of a debate on this until people have have read it and",
    "start": "2562780",
    "end": "2567940"
  },
  {
    "text": "thought about it a bit so I would ask people especially specification council",
    "start": "2567940",
    "end": "2575230"
  },
  {
    "text": "members and members the cross language working group or on the call if you can",
    "start": "2575230",
    "end": "2580480"
  },
  {
    "text": "look at this next week and weigh in on it in particular if you you think it's",
    "start": "2580480",
    "end": "2587110"
  },
  {
    "text": "it's just a radically missing something it would be good to flush this out",
    "start": "2587110",
    "end": "2593680"
  },
  {
    "text": "because now that we've got more people involved it would be great to sort of tighten up this structure sooner rather",
    "start": "2593680",
    "end": "2600820"
  },
  {
    "text": "than later um should we set some to you",
    "start": "2600820",
    "end": "2607630"
  },
  {
    "text": "kind of here with the proof sorry I",
    "start": "2607630",
    "end": "2614260"
  },
  {
    "text": "can't quite hear that should we set some timeline to have it approved to vote on it maybe hmm not",
    "start": "2614260",
    "end": "2627880"
  },
  {
    "text": "sure how to do that we could have say like by the next ODST meeting we need to",
    "start": "2627880",
    "end": "2634990"
  },
  {
    "text": "have disapproved or something approved or at least a clearer idea of why we're",
    "start": "2634990",
    "end": "2641590"
  },
  {
    "text": "not going to miss or anything yeah so I",
    "start": "2641590",
    "end": "2647590"
  },
  {
    "text": "think this I'm kind of trying to draw parallels with the CNC of TOC meetings",
    "start": "2647590",
    "end": "2654210"
  },
  {
    "text": "they usually they hold votes just online and I think the the meetings I use just",
    "start": "2654210",
    "end": "2663580"
  },
  {
    "text": "to present things and maybe ask questions but people can also ask questions on the pool requests but I my",
    "start": "2663580",
    "end": "2669850"
  },
  {
    "text": "my concern is that if we say Ola just wait till the next like wait a month and",
    "start": "2669850",
    "end": "2674860"
  },
  {
    "text": "then try to approve by the month we can be in a single situation like oh no one actually read it yeah so I would I would prefer to",
    "start": "2674860",
    "end": "2685119"
  },
  {
    "text": "just like set another timeline saying like let's let's give people a week or",
    "start": "2685119",
    "end": "2690369"
  },
  {
    "text": "two and then call a vote within two weeks let's say and and then just close",
    "start": "2690369",
    "end": "2695589"
  },
  {
    "text": "this that make sense to me anyone who",
    "start": "2695589",
    "end": "2704049"
  },
  {
    "text": "has objections to that okay I'm right",
    "start": "2704049",
    "end": "2717459"
  },
  {
    "text": "into the nose okay there's nothing",
    "start": "2717459",
    "end": "2736029"
  },
  {
    "text": "terribly original in the proposal I think the thing for people to think",
    "start": "2736029",
    "end": "2741249"
  },
  {
    "text": "about that's just a little maybe unique about open tracing and where we can't just adopt some pre-existing thing",
    "start": "2741249",
    "end": "2747939"
  },
  {
    "text": "entirely off the shelf is the shape of what we're trying to create is slightly",
    "start": "2747939",
    "end": "2754569"
  },
  {
    "text": "different from most projects those projects are either like a single implementation of something like",
    "start": "2754569",
    "end": "2760629"
  },
  {
    "text": "Prometheus is an implementation of a metric system or it's a standard like",
    "start": "2760629",
    "end": "2765909"
  },
  {
    "text": "wire protocol where at all it all can fit into a single RFC or a single",
    "start": "2765909",
    "end": "2771999"
  },
  {
    "text": "document that you're iterating on and we have this slightly funny shaped project",
    "start": "2771999",
    "end": "2777849"
  },
  {
    "text": "which is a cross language API standardization effort and there just",
    "start": "2777849",
    "end": "2786099"
  },
  {
    "text": "aren't a whole lot of those but it does mean the the process has to tie together",
    "start": "2786099",
    "end": "2794159"
  },
  {
    "text": "multiple code bases with multiple versioning schemes and things of that",
    "start": "2794159",
    "end": "2799479"
  },
  {
    "text": "nature so that's that was why I felt the need to sort of invent a a proposal",
    "start": "2799479",
    "end": "2806649"
  },
  {
    "text": "process it was based on some of these other things but what just literally the w3c RFC process yeah",
    "start": "2806649",
    "end": "2816520"
  },
  {
    "text": "I mean even even a libraries like JP see they have this cross language nature but",
    "start": "2816520",
    "end": "2823300"
  },
  {
    "text": "they don't have multi-vendor make sure that quicker right it's not an interface",
    "start": "2823300",
    "end": "2830110"
  },
  {
    "text": "that cross language implementation right and then like a bunch of CN CF projects",
    "start": "2830110",
    "end": "2835450"
  },
  {
    "text": "which also standards they have cross vendor but they don't have cross language nature so we were kind of in a",
    "start": "2835450",
    "end": "2841120"
  },
  {
    "text": "unique position here yeah I'll read it I",
    "start": "2841120",
    "end": "2847990"
  },
  {
    "text": "think it's better just to have something written it doesn't have to be like second stone and pedantic about this",
    "start": "2847990",
    "end": "2853900"
  },
  {
    "text": "thing but like a general outline is it good to go yeah we can also always",
    "start": "2853900",
    "end": "2860560"
  },
  {
    "text": "iterate on this process right like if this this seems like a decent proposal process now we can start with this if it",
    "start": "2860560",
    "end": "2867010"
  },
  {
    "text": "seems lacking in some ways we can always just modify it not we don't require",
    "start": "2867010",
    "end": "2873400"
  },
  {
    "text": "backwards compatibility on a proposal process it's okay do you have any other",
    "start": "2873400",
    "end": "2883480"
  },
  {
    "start": "2883000",
    "end": "3057000"
  },
  {
    "text": "agenda I mean actually had one question I don't know if our list is still on",
    "start": "2883480",
    "end": "2890950"
  },
  {
    "text": "right can we talk about yes yes item yeah so",
    "start": "2890950",
    "end": "2897280"
  },
  {
    "text": "basically yeah I was checking your comments so I give you questions are",
    "start": "2897280",
    "end": "2904210"
  },
  {
    "text": "regarding yeah about examples I guess right it's examples and I mean unfortunately",
    "start": "2904210",
    "end": "2911740"
  },
  {
    "text": "when I was doing instrumentation with tornado you kind of you want to write your instrumentation in a completely a",
    "start": "2911740",
    "end": "2917860"
  },
  {
    "text": "framework agnostic way but at least we'll turn a that you do have to use this special context manager called",
    "start": "2917860",
    "end": "2923980"
  },
  {
    "text": "specs that context without it nothing works really as far as a propagation and",
    "start": "2923980",
    "end": "2929650"
  },
  {
    "text": "I don't know what what other frameworks are doing that's why I was kind of curious because simply just scaling",
    "start": "2929650",
    "end": "2936190"
  },
  {
    "text": "thread-local span sorry scope manager doesn't work for it is for tornado",
    "start": "2936190",
    "end": "2943200"
  },
  {
    "text": "yeah so so in the examples I am not using this sized spec manager like in",
    "start": "2943250",
    "end": "2950000"
  },
  {
    "text": "all the examples because I just kind of porting them from Java so I will",
    "start": "2950000",
    "end": "2955160"
  },
  {
    "text": "probably have a comment later today but some of the examples to use it so",
    "start": "2955160",
    "end": "2960560"
  },
  {
    "text": "regarding the other frameworks both money from dated off and me we have been looking into a similar approach rather",
    "start": "2960560",
    "end": "2967550"
  },
  {
    "text": "like the chair Ben is in are you pretty much and basically what they provide is",
    "start": "2967550",
    "end": "2972590"
  },
  {
    "text": "some kind of treads local alike storage",
    "start": "2972590",
    "end": "2978050"
  },
  {
    "text": "where you can have different storage for each core routine but there is no there",
    "start": "2978050",
    "end": "2983660"
  },
  {
    "text": "is no automatic propagation so in that",
    "start": "2983660",
    "end": "2989000"
  },
  {
    "text": "case you basically what you end up doing eventually is that you provide a specific stock manager for each one and",
    "start": "2989000",
    "end": "2995780"
  },
  {
    "text": "then you also have to include some help in fusion or or really matching the",
    "start": "2995780",
    "end": "3004000"
  },
  {
    "text": "library so we so this component of end up collaborating with dispatching code",
    "start": "3004000",
    "end": "3010600"
  },
  {
    "text": "so you can have this propagation that turtle has out of the box so yeah so",
    "start": "3010600",
    "end": "3018730"
  },
  {
    "text": "it's well and as I said of course he actually part of doing this for those of",
    "start": "3018730",
    "end": "3025810"
  },
  {
    "text": "you who know of doing the release candidate one for the new API annotation",
    "start": "3025810",
    "end": "3031450"
  },
  {
    "text": "to the technically was to bring more ants project so yeah if somebody has",
    "start": "3031450",
    "end": "3037870"
  },
  {
    "text": "more experience with me specifically with AC value 1 and G event that would be great so I don't know it I don't know",
    "start": "3037870",
    "end": "3044140"
  },
  {
    "text": "if somebody has but just let us know I don't know that answer you question I think we will still have to go through",
    "start": "3044140",
    "end": "3050470"
  },
  {
    "text": "the examples and this costs a little bit more writer yeah yeah I think I agree",
    "start": "3050470",
    "end": "3059050"
  },
  {
    "text": "that we will have to use difference code managers depending on the framework the",
    "start": "3059050",
    "end": "3064330"
  },
  {
    "text": "I I guess the question is is really whether the API itself is is reusable",
    "start": "3064330",
    "end": "3070770"
  },
  {
    "text": "for example like you might be using icing framework like event loop",
    "start": "3070770",
    "end": "3075910"
  },
  {
    "text": "framework but you may also use some standard like some people do that let's say URL live the",
    "start": "3075910",
    "end": "3082360"
  },
  {
    "text": "instrumentation and we typically monkey patch that and when you monkey patch it you you want to get your context or like",
    "start": "3082360",
    "end": "3091030"
  },
  {
    "text": "the the scope from somewhere and you don't really know what kind of scope manager you using at this point so the",
    "start": "3091030",
    "end": "3097270"
  },
  {
    "text": "instrumentation has to have some sort of unified way of saying okay I'm still should be able to get the current",
    "start": "3097270",
    "end": "3103000"
  },
  {
    "text": "current span turned actually span regardless of whether how its propagated",
    "start": "3103000",
    "end": "3109210"
  },
  {
    "text": "to me so I'm not saying that this is the problem I think we just like we just need to try different frameworks and",
    "start": "3109210",
    "end": "3116620"
  },
  {
    "text": "examples yeah actually remember talking",
    "start": "3116620",
    "end": "3122830"
  },
  {
    "text": "about that to tailor thing previously like a few weeks ago because exactly I found that her a few enough differences",
    "start": "3122830",
    "end": "3132190"
  },
  {
    "text": "here on there that maybe we need to clarify eventually or something because so in general for example I think that",
    "start": "3132190",
    "end": "3139300"
  },
  {
    "text": "we can create a scope manager for each one of these frameworks but they have a slightly different semantics details and",
    "start": "3139300",
    "end": "3147190"
  },
  {
    "text": "we need to be aware of them for a start so I actually had now based on what you",
    "start": "3147190",
    "end": "3153760"
  },
  {
    "text": "told me anything in the Python examples I'm going to start writing a summary of what are the exact implementation",
    "start": "3153760",
    "end": "3160380"
  },
  {
    "text": "differences or you know like expectation of each manager so we can get a better",
    "start": "3160380",
    "end": "3167890"
  },
  {
    "text": "idea and some of just showing examples around four-ish which framework okay I",
    "start": "3167890",
    "end": "3175200"
  },
  {
    "text": "have a question that only take one minute it's on the agenda I was trying",
    "start": "3175200",
    "end": "3185050"
  },
  {
    "start": "3177000",
    "end": "3262000"
  },
  {
    "text": "to make trace context implementation for basic tracer for go and I was talking",
    "start": "3185050",
    "end": "3190690"
  },
  {
    "text": "with Sergey about it and understanding the the the draft he updated and and",
    "start": "3190690",
    "end": "3197020"
  },
  {
    "text": "alloys updated but I granted to just parsing was fine person was easy but",
    "start": "3197020",
    "end": "3203560"
  },
  {
    "text": "then I got to the place where I realized I needed to use decide whether to change the tracer to use 64-bit",
    "start": "3203560",
    "end": "3210340"
  },
  {
    "text": "currently use a 64-bit Rossetti's and do you think it should be changed to use 128-bit trace IDs or should it be done",
    "start": "3210340",
    "end": "3216730"
  },
  {
    "text": "in this in this pattern where we discussed in Seattle you could put custom vendor stuff in trace state and",
    "start": "3216730",
    "end": "3224260"
  },
  {
    "text": "then you know a lot of the 128-bit trace ID to be stored in some kind of spam",
    "start": "3224260",
    "end": "3229840"
  },
  {
    "text": "context place and and then spit out when you propagate out again later but internally you're still using a 64-bit",
    "start": "3229840",
    "end": "3237070"
  },
  {
    "text": "trace ID inside of the tracer itself and whether that the complexity of that was",
    "start": "3237070",
    "end": "3242350"
  },
  {
    "text": "worth keeping like the protobuf wire protocol the same versus versus just",
    "start": "3242350",
    "end": "3248560"
  },
  {
    "text": "changing basic traits are all together to use a different internal trace ID",
    "start": "3248560",
    "end": "3253930"
  },
  {
    "text": "sighs I don't think I haven't done an",
    "start": "3253930",
    "end": "3264490"
  },
  {
    "start": "3262000",
    "end": "3307000"
  },
  {
    "text": "audit of the basic tracers but it sounds like when it comes to taking a wire",
    "start": "3264490",
    "end": "3272290"
  },
  {
    "text": "protocol that they use and header types",
    "start": "3272290",
    "end": "3277510"
  },
  {
    "text": "and stuff it would be great if we picked something across languages that we",
    "start": "3277510",
    "end": "3283600"
  },
  {
    "text": "intended all the basic races to converge on I'm not sure if they're even",
    "start": "3283600",
    "end": "3288870"
  },
  {
    "text": "compatible with each other at the moment they're sort of just started as example code right I never looked at the other",
    "start": "3288870",
    "end": "3296980"
  },
  {
    "text": "ones no idea how what the size is in",
    "start": "3296980",
    "end": "3302230"
  },
  {
    "text": "Python figs Mpho yeah that would be my only request whatever we pick as a",
    "start": "3302230",
    "end": "3308470"
  },
  {
    "start": "3307000",
    "end": "3367000"
  },
  {
    "text": "default appears that they can all Interop would write other no pythons in 64 just like current go is yeah I mean",
    "start": "3308470",
    "end": "3316870"
  },
  {
    "text": "but yeah that just opens a question for then to demonstrate compatibility with receiving a trace parent that's 128-bit",
    "start": "3316870",
    "end": "3323380"
  },
  {
    "text": "you need to put that 128-bit indentify somewhere and then spit it out on your right and is it worth doing all that and",
    "start": "3323380",
    "end": "3331990"
  },
  {
    "text": "doing like that custom vendor thing or is it worth just changing all the basic",
    "start": "3331990",
    "end": "3337120"
  },
  {
    "text": "racers do 128-bit IDs either one you know one's an interesting demonstration",
    "start": "3337120",
    "end": "3343360"
  },
  {
    "text": "of the anything you know where hey this this tracer doesn't support 120 pitches but",
    "start": "3343360",
    "end": "3348809"
  },
  {
    "text": "look how we still made it work with the literacy standard and the other option is hey this is a conventional you know",
    "start": "3348809",
    "end": "3355319"
  },
  {
    "text": "w3c supporting tracer and it's and there's no implementation I could do",
    "start": "3355319",
    "end": "3360480"
  },
  {
    "text": "both I was actually gonna do both thinking's in both haha my suggestion",
    "start": "3360480",
    "end": "3367079"
  },
  {
    "start": "3367000",
    "end": "3427000"
  },
  {
    "text": "and it's just the suggestion is that well in general I think we need to",
    "start": "3367079",
    "end": "3373069"
  },
  {
    "text": "revisit the basic racers and decide what their purpose in life is for but",
    "start": "3373069",
    "end": "3381769"
  },
  {
    "text": "independent of that I do like the emphasis on basic and I like the idea",
    "start": "3381769",
    "end": "3387720"
  },
  {
    "text": "that there's simple code that you can read that does the canonical whatever",
    "start": "3387720",
    "end": "3392910"
  },
  {
    "text": "the current test standard is right so having them by default in a very basic",
    "start": "3392910",
    "end": "3398369"
  },
  {
    "text": "manners support 128 says you know IDs",
    "start": "3398369",
    "end": "3404450"
  },
  {
    "text": "sort of doing everything tonics for x-ray would be much my suggestions but",
    "start": "3404450",
    "end": "3411509"
  },
  {
    "text": "then Bennell anyone who would be mad I'm Benny like 64 bits yeah I think you're",
    "start": "3411509",
    "end": "3420420"
  },
  {
    "text": "right about the Ennahda coughing okay so",
    "start": "3420420",
    "end": "3427410"
  },
  {
    "start": "3427000",
    "end": "3600000"
  },
  {
    "text": "that would be my suggestion is just that they say they are canonical they think they match whatever the Christmas w3t",
    "start": "3427410",
    "end": "3434609"
  },
  {
    "text": "effect on headers and it would be then I",
    "start": "3434609",
    "end": "3440250"
  },
  {
    "text": "agree interesting experience if there's a way to add some optional you know or",
    "start": "3440250",
    "end": "3447599"
  },
  {
    "text": "plugins or something that allows you eat some switchover with this header or with",
    "start": "3447599",
    "end": "3454470"
  },
  {
    "text": "these IDs that turns out to be a useful thing to explain to people but it seems",
    "start": "3454470",
    "end": "3461099"
  },
  {
    "text": "a little secondary you know I would suggest starting with like what they",
    "start": "3461099",
    "end": "3466589"
  },
  {
    "text": "call level 1 or you you except in crime and trace ID but you not use it as your",
    "start": "3466589",
    "end": "3472799"
  },
  {
    "text": "own you just store it as a as a tag somewhere because then you don't have to change all the way",
    "start": "3472799",
    "end": "3477839"
  },
  {
    "text": "cick traces all at once you can you can and you already have like some compatibility with a spec and then the",
    "start": "3477839",
    "end": "3484229"
  },
  {
    "text": "next phase could be okay well maybe we can support 128-bit but then we said if",
    "start": "3484229",
    "end": "3490259"
  },
  {
    "text": "people are using basic tracer at the edge they might still want to him to be go back to your level one where it's",
    "start": "3490259",
    "end": "3496019"
  },
  {
    "text": "saying okay yeah we I'm just going to record it yeah yeah okay we should have",
    "start": "3496019",
    "end": "3517859"
  },
  {
    "text": "a broader conversation so the basic traces at some point though because right now some people including myself",
    "start": "3517859",
    "end": "3524609"
  },
  {
    "text": "see them as example code that's supposed to be very simple just so you have can",
    "start": "3524609",
    "end": "3531719"
  },
  {
    "text": "kind of get a handle of like what the true basics are and maybe you can clone it and do something with it but then",
    "start": "3531719",
    "end": "3538380"
  },
  {
    "text": "there's also people would like some basic thing that that handled the wire",
    "start": "3538380",
    "end": "3544650"
  },
  {
    "text": "protocol propagation for them and then they you know can then just write some",
    "start": "3544650",
    "end": "3549690"
  },
  {
    "text": "little plug-in to spit out the span information somewhere and there's",
    "start": "3549690",
    "end": "3557130"
  },
  {
    "text": "backwards compatibility or no backwards compatibility there's just a bunch of",
    "start": "3557130",
    "end": "3562799"
  },
  {
    "text": "questions around them and like what their point is I think we should clarify",
    "start": "3562799",
    "end": "3568229"
  },
  {
    "text": "that at some point especially if we're going to be changing them questions the fact that ability come up people",
    "start": "3568229",
    "end": "3575579"
  },
  {
    "text": "actually run them yeah I just I was like a reference okay lights apart are",
    "start": "3575579",
    "end": "3588719"
  },
  {
    "text": "tracers at least in some languages to even reference a basic picture like how",
    "start": "3588719",
    "end": "3595410"
  },
  {
    "text": "easy we are at Python but that's again like I would say if the basic rates have",
    "start": "3595410",
    "end": "3600960"
  },
  {
    "text": "changed so then we would just clone the code we wanted and like life would move on like we would be fine I just don't",
    "start": "3600960",
    "end": "3608190"
  },
  {
    "text": "know what people's expectations are around them I think we should Claire in one way or the other but you can see",
    "start": "3608190",
    "end": "3618490"
  },
  {
    "text": "that later so that loader conversation",
    "start": "3618490",
    "end": "3622170"
  },
  {
    "text": "okay where this time already cool okay",
    "start": "3627720",
    "end": "3641710"
  },
  {
    "text": "thanks everyone happy Fanny yeah get a you child",
    "start": "3641710",
    "end": "3648960"
  }
]