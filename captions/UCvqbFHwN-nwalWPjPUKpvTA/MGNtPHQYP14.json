[
  {
    "start": "0",
    "end": "62000"
  },
  {
    "text": "so hi everyone welcome to the Dragon Friday obsession my name is - Jo and I'm",
    "start": "170",
    "end": "7020"
  },
  {
    "text": "from I'm from eBay infrastructure engineering team today I'm going to talk",
    "start": "7020",
    "end": "13349"
  },
  {
    "text": "about the dragonfly an intelligent p2p image distribution fat distribution solution before we go deep in so in this",
    "start": "13349",
    "end": "22949"
  },
  {
    "text": "section we have three parts one we are going to go through the why we need",
    "start": "22949",
    "end": "29039"
  },
  {
    "text": "image why we need a specific system for doing image distribution and file distribution secondly I'm going to do an",
    "start": "29039",
    "end": "36540"
  },
  {
    "text": "overview of what is dragonfly how many components do they have and how does the",
    "start": "36540",
    "end": "42270"
  },
  {
    "text": "work together and then my partner will give more detail information on motility",
    "start": "42270",
    "end": "50309"
  },
  {
    "text": "introduction and how image pooling works in dragonfly an event and finally we have a demo so before we go into the",
    "start": "50309",
    "end": "59309"
  },
  {
    "text": "detail let's look at several cases where image distribution of any fat",
    "start": "59309",
    "end": "64619"
  },
  {
    "start": "62000",
    "end": "62000"
  },
  {
    "text": "distribution can be a problem firstly let's say you have a rotor machines the first job you need to do is",
    "start": "64619",
    "end": "71820"
  },
  {
    "text": "to install the operating system of the machines no matter is Linux or some different districts and once the",
    "start": "71820",
    "end": "79380"
  },
  {
    "text": "operating system is running you need to install additional software to run your application one example right so one",
    "start": "79380",
    "end": "87119"
  },
  {
    "text": "example is JVM you need to run Java applications another example is you have",
    "start": "87119",
    "end": "92850"
  },
  {
    "text": "to run containers you need to install one of the container run time no matter is Kakaako or its container deep and",
    "start": "92850",
    "end": "99979"
  },
  {
    "text": "then you will have your application so that based on what's that you are using",
    "start": "99979",
    "end": "106140"
  },
  {
    "text": "if you're if you're writing java application you have to dispute your java archives to all the machines if",
    "start": "106140",
    "end": "111840"
  },
  {
    "text": "you're running if you're using node years you have to dispute you know TS modules",
    "start": "111840",
    "end": "116909"
  },
  {
    "text": "it runs some adds up like go you made these people proteins and that's not the",
    "start": "116909",
    "end": "124320"
  },
  {
    "text": "end of story you have your application running and you still sometimes you need to distribute your configurations and",
    "start": "124320",
    "end": "131090"
  },
  {
    "text": "configurations does not have to be small for example if i learning a machine",
    "start": "131090",
    "end": "136260"
  },
  {
    "text": "learning training job you have you have to dispute the models file and we are",
    "start": "136260",
    "end": "141569"
  },
  {
    "text": "running a search engine you have to dispute the index data to add closed as to your application in that case the",
    "start": "141569",
    "end": "148680"
  },
  {
    "text": "search engine and the image disputing can be another problem as well today we",
    "start": "148680",
    "end": "155849"
  },
  {
    "start": "151000",
    "end": "151000"
  },
  {
    "text": "are all talking about cloud native but that's not always possible or at least",
    "start": "155849",
    "end": "161370"
  },
  {
    "text": "not fast enough for you to move in from your leaky application to crown native",
    "start": "161370",
    "end": "167129"
  },
  {
    "text": "application so you may have to do a simulation where your package of the",
    "start": "167129",
    "end": "172340"
  },
  {
    "text": "software you're running services into a fat container that basically means you",
    "start": "172340",
    "end": "178739"
  },
  {
    "text": "are on your container at the VM and in that case the image can be very very large in the second case if you have a",
    "start": "178739",
    "end": "185730"
  },
  {
    "text": "remote data center so you have your service running in your primary data",
    "start": "185730",
    "end": "191700"
  },
  {
    "text": "center but you also need to dispute some of the image - like age if you're",
    "start": "191700",
    "end": "197669"
  },
  {
    "text": "running pop and finally in kubernetes you sometimes have to deploy a demo sets",
    "start": "197669",
    "end": "203909"
  },
  {
    "text": "so demon said basically is communities concept we all you want to run a part of the community is null so let's say if we",
    "start": "203909",
    "end": "211109"
  },
  {
    "text": "have five five thousand nodes and you want to create a new like say the more internal agent the secret security",
    "start": "211109",
    "end": "217409"
  },
  {
    "text": "detector and that can be very time-consuming when you want to quickly",
    "start": "217409",
    "end": "223199"
  },
  {
    "text": "deploy it to of the nose so that means definitely we need to improve our",
    "start": "223199",
    "end": "229620"
  },
  {
    "text": "current distribution infrastructure let's take a look how it is today",
    "start": "229620",
    "end": "234919"
  },
  {
    "text": "basically you have several rails at the bottom is the storage and then you build",
    "start": "234919",
    "end": "240449"
  },
  {
    "start": "235000",
    "end": "235000"
  },
  {
    "text": "like a religious service or maven repository on top of the storage and then you create a lot of parents are too",
    "start": "240449",
    "end": "246540"
  },
  {
    "text": "exhausted as a service and then the current talk to the load balancer so looking at this structure is very",
    "start": "246540",
    "end": "253259"
  },
  {
    "text": "traditional it's very simple but that doesn't solve our scalability problem as",
    "start": "253259",
    "end": "259019"
  },
  {
    "text": "we mentioned in previous two slides so what you can do probably not in loader parents that you",
    "start": "259019",
    "end": "265689"
  },
  {
    "text": "can configure the rack server returned so in that case the the data can go from",
    "start": "265689",
    "end": "271210"
  },
  {
    "text": "the service to crash directly and if you can't control the service you can add some retraction so all the data does not",
    "start": "271210",
    "end": "278680"
  },
  {
    "text": "have to go through the service in order to serving crowns the data can goes from the soil to crunch the directory and",
    "start": "278680",
    "end": "285810"
  },
  {
    "text": "also you can enhance the storage last you can put us secrete proxy where you",
    "start": "285810",
    "end": "292569"
  },
  {
    "text": "can add multiple cache servers to enhance the read performance but looking",
    "start": "292569",
    "end": "299289"
  },
  {
    "text": "at the the for products we only left the clans what we can do what we can do on",
    "start": "299289",
    "end": "304569"
  },
  {
    "text": "the crowns so if Christ can share the data between them that comes to the p2p so that's the",
    "start": "304569",
    "end": "313750"
  },
  {
    "text": "church that's how the distribution it works you have a centralized server every files cost average current request",
    "start": "313750",
    "end": "320889"
  },
  {
    "text": "the server and a gadget copy but if we can do like this why would current get",
    "start": "320889",
    "end": "327310"
  },
  {
    "text": "one of the current get is copy and sure which between each others in that case",
    "start": "327310",
    "end": "332349"
  },
  {
    "text": "you don't have the load and the centralized service become much much decreased and that's probably a solved",
    "start": "332349",
    "end": "341740"
  },
  {
    "text": "problem in as Ariel so like BitTorrent it solves how you can dispute media",
    "start": "341740",
    "end": "348460"
  },
  {
    "text": "music and recently the ipfs where you run decentralize the web every every",
    "start": "348460",
    "end": "356349"
  },
  {
    "text": "node is the Quran is a server and obviously dragonfly is one of them it",
    "start": "356349",
    "end": "362110"
  },
  {
    "text": "also runs the p2p approach let's take a",
    "start": "362110",
    "end": "367120"
  },
  {
    "text": "look how Jung fireworks in the p2p case so primary dragonfly consists of two",
    "start": "367120",
    "end": "374289"
  },
  {
    "text": "components why is the super node and otherwise the currents basically density F get during",
    "start": "374289",
    "end": "381610"
  },
  {
    "text": "initialization phase every crash is to reduce that appear to super node and suddenly one of the nodes gets a request",
    "start": "381610",
    "end": "388629"
  },
  {
    "text": "say I want to download the file so it sends a request to the super nodes hey I know I want to create tasks to you and",
    "start": "388629",
    "end": "396009"
  },
  {
    "text": "it's basically what super node does is create a record in its memory and gives you a task idea in later request the FCAT can",
    "start": "396009",
    "end": "403549"
  },
  {
    "text": "use this task ID to pull the status so the state basically gives you a list appears we are you care where you can",
    "start": "403549",
    "end": "410599"
  },
  {
    "text": "request from different peers to download the file so the craft gets the list and",
    "start": "410599",
    "end": "416569"
  },
  {
    "text": "send the request to each peer once downloaded successfully the currents",
    "start": "416569",
    "end": "422149"
  },
  {
    "text": "update to a super nodes say hey I know I have this node if you in future another clients wants to download the same file",
    "start": "422149",
    "end": "428599"
  },
  {
    "text": "you can you can direct them to me so in",
    "start": "428599",
    "end": "434899"
  },
  {
    "text": "addition in your case well the the class is fresh no one has the file the super",
    "start": "434899",
    "end": "441229"
  },
  {
    "text": "node acting as the first step to download from the sauce and serving as the first appear so I'm going to talk",
    "start": "441229",
    "end": "449929"
  },
  {
    "start": "448000",
    "end": "448000"
  },
  {
    "text": "about each of the components in more detail first LS to get super node as we",
    "start": "449929",
    "end": "455539"
  },
  {
    "text": "just talked super node is nothing but a bunch of api's so it takes to take the",
    "start": "455539",
    "end": "463789"
  },
  {
    "text": "peer registration takes task equation and also gives you the pieces",
    "start": "463789",
    "end": "469549"
  },
  {
    "text": "information and update it update the pieces from beyond each of the know but",
    "start": "469549",
    "end": "476089"
  },
  {
    "text": "what's becoming more interesting is the scheduling part how does super node select list appears",
    "start": "476089",
    "end": "482719"
  },
  {
    "text": "that is more efficiency to you so there are many possibilities and there are",
    "start": "482719",
    "end": "489409"
  },
  {
    "text": "many chance we have different algorithms say we can so we can reach to the best",
    "start": "489409",
    "end": "495409"
  },
  {
    "text": "utilization so I don't have to always request a single p.m. that's going to",
    "start": "495409",
    "end": "501079"
  },
  {
    "text": "exhaust that that one instead we can always choose the most the most lister",
    "start": "501079",
    "end": "509779"
  },
  {
    "text": "load to peer which you can request from and also it can do the seeding if no one",
    "start": "509779",
    "end": "516919"
  },
  {
    "text": "has the file we can acting as the first one the supernova can acting as first one to request from sauce and then",
    "start": "516919",
    "end": "523129"
  },
  {
    "text": "serving up serving to different clients so what is difficut the FK is pretty",
    "start": "523129",
    "end": "529639"
  },
  {
    "text": "much like target occur it's just simple CRI but beyond that it can also do some funny",
    "start": "529639",
    "end": "536630"
  },
  {
    "text": "things like rate limiting so actually rate limiting is very important when",
    "start": "536630",
    "end": "541790"
  },
  {
    "text": "when you have some network intensive application running on that note you will do not want to consume all of the",
    "start": "541790",
    "end": "548480"
  },
  {
    "text": "bandwidth so by using rate limiting we can reduce the impact to the running",
    "start": "548480",
    "end": "553699"
  },
  {
    "text": "application on that note and to checksum of course you don't want to download the",
    "start": "553699",
    "end": "559880"
  },
  {
    "text": "wrong file right and the last one is the seeding so that's the basic appeal functionality but looking at that how",
    "start": "559880",
    "end": "568399"
  },
  {
    "text": "can you solve the image distribution problem docker does not know that you",
    "start": "568399",
    "end": "573410"
  },
  {
    "text": "forget continuity does not know TF get how can you enhance the image pouring",
    "start": "573410",
    "end": "578570"
  },
  {
    "text": "performance and that's with that part we need a proxy so the proxy needs to so",
    "start": "578570",
    "end": "586970"
  },
  {
    "text": "the taça demon can talk to the proxy processing talk to the TF gets downloads file so and that exactly what the FDA or",
    "start": "586970",
    "end": "595120"
  },
  {
    "text": "the FDA is but before we talk to this let's see how different container",
    "start": "595120",
    "end": "601640"
  },
  {
    "text": "runtimes lets you configure the proxy so for darker you have a option to say you",
    "start": "601640",
    "end": "608390"
  },
  {
    "text": "can specify the rotation mirror where you can when you download some page images from docker hub you can specify a",
    "start": "608390",
    "end": "615880"
  },
  {
    "text": "far more close location to you and for community as well it can actually",
    "start": "615880",
    "end": "622430"
  },
  {
    "text": "suppose private image mirror where you can convict a different mirror for",
    "start": "622430",
    "end": "628519"
  },
  {
    "text": "different registries and all if you can control the source code of your research",
    "start": "628519",
    "end": "633649"
  },
  {
    "text": "service you can add in retraction instead of downloaded from storage you",
    "start": "633649",
    "end": "638660"
  },
  {
    "text": "can retract to a proxy and TF demo is that your proxy which dragon fire has",
    "start": "638660",
    "end": "645740"
  },
  {
    "start": "642000",
    "end": "642000"
  },
  {
    "text": "jack fry is simply as a reversal is a reverse proxy actually in cola is where",
    "start": "645740",
    "end": "653569"
  },
  {
    "text": "is pretty convenient you can construct a reverse proxy by a single line of code so in that case we override the",
    "start": "653569",
    "end": "660290"
  },
  {
    "text": "transport the transport basically we you can see it actually in walks the DF",
    "start": "660290",
    "end": "666350"
  },
  {
    "text": "get to download the file and thus serving the fire to the taco demo so",
    "start": "666350",
    "end": "673760"
  },
  {
    "start": "673000",
    "end": "673000"
  },
  {
    "text": "next I welcome my partner to give more introduction on how Emporium works in",
    "start": "673760",
    "end": "680000"
  },
  {
    "text": "much more detail thanks hello my name is",
    "start": "680000",
    "end": "690680"
  },
  {
    "text": "John ting comes from Alibaba Group one of the members of dragon flying team",
    "start": "690680",
    "end": "697000"
  },
  {
    "text": "next via analysis how does junk fly pass the padding in image pulling images when",
    "start": "697000",
    "end": "707150"
  },
  {
    "start": "706000",
    "end": "706000"
  },
  {
    "text": "we introduce young fly via released many futures to show how excellent young fly",
    "start": "707150",
    "end": "713330"
  },
  {
    "text": "is and one of the very important future is knowing inversely about support for",
    "start": "713330",
    "end": "721130"
  },
  {
    "text": "all kinds of container technologies yes drunk fly can be in integrated into",
    "start": "721130",
    "end": "729020"
  },
  {
    "text": "current a contender system easily to provide the ability of pupae in media",
    "start": "729020",
    "end": "736520"
  },
  {
    "text": "distribution and you don't need to change any codes of your container",
    "start": "736520",
    "end": "741800"
  },
  {
    "text": "engine so how did John fly to this first",
    "start": "741800",
    "end": "747800"
  },
  {
    "start": "746000",
    "end": "746000"
  },
  {
    "text": "of all we have to know what is image before we understand how dance John fly",
    "start": "747800",
    "end": "753320"
  },
  {
    "text": "poet in short an image is a combination of jason manifest and individual layer",
    "start": "753320",
    "end": "761980"
  },
  {
    "text": "and made manifest describes the various the constituents of a dark image it can",
    "start": "761980",
    "end": "769910"
  },
  {
    "text": "be sterilized to Jason ferment and as very annoying each statement in Java",
    "start": "769910",
    "end": "775400"
  },
  {
    "text": "file will be created as a major image layer and these layers ask during the",
    "start": "775400",
    "end": "783440"
  },
  {
    "text": "blob portion of the registry hit by digestion and pulling a layer is carried",
    "start": "783440",
    "end": "789710"
  },
  {
    "text": "out by our standard HTTP request so the process of pulling a major centers",
    "start": "789710",
    "end": "796220"
  },
  {
    "text": "around getting this two components Manifesta and the layers so let's say how to get",
    "start": "796220",
    "end": "803060"
  },
  {
    "text": "these two components the first step is to get a manifest as a image manifester",
    "start": "803060",
    "end": "811730"
  },
  {
    "start": "805000",
    "end": "805000"
  },
  {
    "text": "can be fetched a visa following URL the kindest and request of is this URL to",
    "start": "811730",
    "end": "820250"
  },
  {
    "text": "register a to get the manifest here is a is exam bar here is example",
    "start": "820250",
    "end": "827769"
  },
  {
    "text": "and let's look take a look and manufacture content there is a very",
    "start": "827769",
    "end": "836360"
  },
  {
    "text": "important filter of evades the offence",
    "start": "836360",
    "end": "841910"
  },
  {
    "text": "layers layers in our manifests his lister of loyalties filters including",
    "start": "841910",
    "end": "850189"
  },
  {
    "text": "digest when the manifest is enhance the client master verify the signature to",
    "start": "850189",
    "end": "857589"
  },
  {
    "text": "ensure the names and the layers are valid once confirmed the kind of we are",
    "start": "857589",
    "end": "862879"
  },
  {
    "text": "use digester to download layers of image a pooling of imagery is carried out by a",
    "start": "862879",
    "end": "872540"
  },
  {
    "start": "869000",
    "end": "869000"
  },
  {
    "text": "standard HTTP request and he stammers downloading files from remote ntp server",
    "start": "872540",
    "end": "880819"
  },
  {
    "text": "the uir is as follows and the digester",
    "start": "880819",
    "end": "886519"
  },
  {
    "text": "is listing the manifest this basic example of pulling major layer from",
    "start": "886519",
    "end": "894160"
  },
  {
    "text": "harbor registry deployed by myself nASA says example response the rebounce",
    "start": "894160",
    "end": "902920"
  },
  {
    "text": "response coder is hundred it means that the kind he can download the layout",
    "start": "902920",
    "end": "908959"
  },
  {
    "text": "directory from the rest free to allowed for incremental downloads grant requests",
    "start": "908959",
    "end": "915860"
  },
  {
    "text": "should be exported it was here john",
    "start": "915860",
    "end": "922519"
  },
  {
    "text": "frank answers our content allowance of this they are foster lay calculator",
    "start": "922519",
    "end": "929410"
  },
  {
    "text": "calculator suitable size suitable size all four pieces the size of piece is 2 2",
    "start": "929960",
    "end": "938450"
  },
  {
    "text": "and B 2 + 15 MB and drunk flies super",
    "start": "938450",
    "end": "946220"
  },
  {
    "text": "laters their files into pieces and calculus a painted range to download",
    "start": "946220",
    "end": "953690"
  },
  {
    "text": "every piece and last door on fly come",
    "start": "953690",
    "end": "962630"
  },
  {
    "text": "out every piece contented by sending to",
    "start": "962630",
    "end": "967810"
  },
  {
    "text": "registry and catch them local disc whenever a piece is downloaded it can be",
    "start": "967810",
    "end": "976130"
  },
  {
    "text": "transferred among the p2p network without waiting for the whole image layer fires to be",
    "start": "976130",
    "end": "983570"
  },
  {
    "text": "downloaded also the server should support the cache control header attack",
    "start": "983570",
    "end": "991880"
  },
  {
    "text": "or modification deaths or others trying flower use this these cache control",
    "start": "991880",
    "end": "1000910"
  },
  {
    "text": "headers to check whether the layer Phi is expired if it is expired to join flag",
    "start": "1000910",
    "end": "1008440"
  },
  {
    "text": "we are downloaded again to ensure that the layer data cache in John Frye is the",
    "start": "1008440",
    "end": "1014200"
  },
  {
    "text": "consistent with remote server the sector",
    "start": "1014200",
    "end": "1021430"
  },
  {
    "text": "the second example is pulling a layer from official registry it has two parts",
    "start": "1021430",
    "end": "1027670"
  },
  {
    "text": "which is much different from a previous one the first request to registry gets a",
    "start": "1027670",
    "end": "1037709"
  },
  {
    "text": "307 response code it tells the kind you",
    "start": "1037709",
    "end": "1043089"
  },
  {
    "text": "should follow those with drag to request another server for pulling the layers",
    "start": "1043089",
    "end": "1048270"
  },
  {
    "text": "see another service is Poland out by the response header location and his HTTP",
    "start": "1048270",
    "end": "1058030"
  },
  {
    "text": "request LCpl server and the second request is",
    "start": "1058030",
    "end": "1063210"
  },
  {
    "text": "loading the image layer fire from the FTPS server from this example we know",
    "start": "1063210",
    "end": "1071669"
  },
  {
    "text": "that the blood portion of the doors - doors in many layers can be another",
    "start": "1071669",
    "end": "1076710"
  },
  {
    "text": "different and bond from red string and",
    "start": "1076710",
    "end": "1083240"
  },
  {
    "text": "this is a third example of pulling a layer it is much similar with the",
    "start": "1083240",
    "end": "1091860"
  },
  {
    "text": "previous vamp bounces the only one difference here is that the location",
    "start": "1091860",
    "end": "1099360"
  },
  {
    "text": "server is it is a HTTP server so in",
    "start": "1099360",
    "end": "1105179"
  },
  {
    "text": "summary we learned the whole process of pouring an image first early papers are",
    "start": "1105179",
    "end": "1111330"
  },
  {
    "text": "manifest by HTTP request secondly papers",
    "start": "1111330",
    "end": "1117330"
  },
  {
    "text": "layer fires by several HTTP requests so let's say how does drunk flying poet by",
    "start": "1117330",
    "end": "1126179"
  },
  {
    "start": "1124000",
    "end": "1124000"
  },
  {
    "text": "default trying to fly all in downloads individual layer of ice because the",
    "start": "1126179",
    "end": "1131640"
  },
  {
    "text": "layer files that are usually larger and pulling them are very time consuming especially in norske actually pulling",
    "start": "1131640",
    "end": "1139980"
  },
  {
    "text": "their files is stammers downloading comma files from remote file servers of",
    "start": "1139980",
    "end": "1145770"
  },
  {
    "text": "course we can also configure chunk fly to download the manifesto if we want to",
    "start": "1145770",
    "end": "1152250"
  },
  {
    "text": "spit out in some scenarios here is three",
    "start": "1152250",
    "end": "1158190"
  },
  {
    "text": "ways to make duck d2 per image layers using junk flag every way is very easy",
    "start": "1158190",
    "end": "1165090"
  },
  {
    "text": "to achieve simply configure talk daemon and restarted the house to show the",
    "start": "1165090",
    "end": "1173909"
  },
  {
    "text": "houses showed here is a component of junk flying name the TF demon",
    "start": "1173909",
    "end": "1178950"
  },
  {
    "text": "reintroduced the above first first way is three meters when you do",
    "start": "1178950",
    "end": "1188220"
  },
  {
    "text": "actually use talk to a mentor named Doug poem into name you can use you can you",
    "start": "1188220",
    "end": "1196810"
  },
  {
    "text": "this restroom mirror you can see entity abdomen or the resident mirror to pour",
    "start": "1196810",
    "end": "1203020"
  },
  {
    "text": "images in a second away HTTP proxy when",
    "start": "1203020",
    "end": "1208420"
  },
  {
    "text": "the blood portion of the registry is an HTTP server oh it's a redirected to a",
    "start": "1208420",
    "end": "1214210"
  },
  {
    "text": "TCP server you can use Jeff Niemann or the HTTP proxy to prune image just like",
    "start": "1214210",
    "end": "1222270"
  },
  {
    "text": "doc poor registry host / no image name",
    "start": "1222270",
    "end": "1229980"
  },
  {
    "text": "Third Way at CPS proxy it is very similar to the second way when you when",
    "start": "1229980",
    "end": "1238990"
  },
  {
    "text": "the blood portion is a HTTP proxy you can set the abdomen as a dps proxy to",
    "start": "1238990",
    "end": "1247420"
  },
  {
    "text": "pose him next of a tag look as the whole",
    "start": "1247420",
    "end": "1254530"
  },
  {
    "text": "process of pulling image by drunk fly from this picture we can say there are",
    "start": "1254530",
    "end": "1260920"
  },
  {
    "text": "three components between dock D and registry the comments are soup node D F",
    "start": "1260920",
    "end": "1269350"
  },
  {
    "text": "get and depth demon is a proxy pitcher dock D and territory for stole a dog D",
    "start": "1269350",
    "end": "1277900"
  },
  {
    "text": "stands requested to resolutely in factor all requests from dog D goes through the",
    "start": "1277900",
    "end": "1284740"
  },
  {
    "text": "node parks process it is TF demon secondly the abdomen catches all the",
    "start": "1284740",
    "end": "1292480"
  },
  {
    "text": "requests filter out is appallingly our request and use the Afghan together to",
    "start": "1292480",
    "end": "1298620"
  },
  {
    "text": "premier to pool else subtly super node gets a layer",
    "start": "1298620",
    "end": "1304840"
  },
  {
    "text": "downloading tasks from the Afghans and to check the local cache if his not",
    "start": "1304840",
    "end": "1311410"
  },
  {
    "text": "exist or expired it will download the layer from remote registry and then",
    "start": "1311410",
    "end": "1317530"
  },
  {
    "text": "catch it catch it on its local disk then whenever a piece of the layer is",
    "start": "1317530",
    "end": "1324310"
  },
  {
    "text": "downloaded there we are",
    "start": "1324310",
    "end": "1329650"
  },
  {
    "text": "they will be transformed in the pupae Network and the super node we are",
    "start": "1329650",
    "end": "1337360"
  },
  {
    "text": "interact with peers to replace the image has pieces now and which pieces the pure",
    "start": "1337360",
    "end": "1344800"
  },
  {
    "text": "should download after the peers get pieces met info from soup nodes there we",
    "start": "1344800",
    "end": "1352780"
  },
  {
    "text": "are download pieces from the other peers them pieces are transported among our",
    "start": "1352780",
    "end": "1358630"
  },
  {
    "text": "peers appears and all layers are downloaded then the image since the",
    "start": "1358630",
    "end": "1366040"
  },
  {
    "text": "whole image pooling is finished this is the whole process of pulling image by",
    "start": "1366040",
    "end": "1372730"
  },
  {
    "text": "drunk flying here is a demo here is a server demo when DMA is show the",
    "start": "1372730",
    "end": "1379570"
  },
  {
    "text": "deployment of tongue flying and then use the edge of trunk line let's see the",
    "start": "1379570",
    "end": "1389500"
  },
  {
    "start": "1387000",
    "end": "1387000"
  },
  {
    "text": "first demo is show deploying fly from dock dock image it just you just execute",
    "start": "1389500",
    "end": "1398980"
  },
  {
    "text": "two commands to deploy all the junk file the first command is to deploy soup node",
    "start": "1398980",
    "end": "1407460"
  },
  {
    "text": "this is soup node and the second command is to deploy TF client it contains TF",
    "start": "1410850",
    "end": "1418780"
  },
  {
    "text": "get and the abdomen and that's all",
    "start": "1418780",
    "end": "1425280"
  },
  {
    "text": "the second demo is to deploy junk flying",
    "start": "1427870",
    "end": "1433120"
  },
  {
    "text": "from cells if you want and it's also",
    "start": "1433120",
    "end": "1440080"
  },
  {
    "text": "very easy just to get the code from github and Mac build yes all right",
    "start": "1440080",
    "end": "1457680"
  },
  {
    "text": "and then we should start the soup nota",
    "start": "1457680",
    "end": "1463980"
  },
  {
    "text": "okay the supernova is stirred up and they should start Jeff demon okay that's",
    "start": "1467310",
    "end": "1483160"
  },
  {
    "text": "natural has built from the sauce let's",
    "start": "1483160",
    "end": "1489670"
  },
  {
    "start": "1488000",
    "end": "1488000"
  },
  {
    "text": "see how to download a file by using trunk fly this bill this is a beautiful",
    "start": "1489670",
    "end": "1496900"
  },
  {
    "text": "picture we want to download it my into my computer first of a copy the UI our",
    "start": "1496900",
    "end": "1509340"
  },
  {
    "text": "first we uses curve cui are to download it and say how much time it cost",
    "start": "1513780",
    "end": "1522810"
  },
  {
    "text": "because we just attempt okay",
    "start": "1528930",
    "end": "1539190"
  },
  {
    "text": "it cost 18 seconds let's say how deaf",
    "start": "1539190",
    "end": "1545040"
  },
  {
    "text": "get to download it",
    "start": "1545040",
    "end": "1548150"
  },
  {
    "text": "yes if just to cows to 3.6 seconds let's",
    "start": "1552020",
    "end": "1559950"
  },
  {
    "text": "use deaf girl to download it again we can say they the second one is much",
    "start": "1559950",
    "end": "1566580"
  },
  {
    "text": "faster than the first one and because because that the first one is a pure",
    "start": "1566580",
    "end": "1572820"
  },
  {
    "text": "data has downloaded it and a super node know that so some note tells the sanctity of get",
    "start": "1572820",
    "end": "1580710"
  },
  {
    "text": "you downloaded the same file from the first def get because they are in the",
    "start": "1580710",
    "end": "1588210"
  },
  {
    "text": "same machine so the second one download from the third first ODF gather so he's",
    "start": "1588210",
    "end": "1595590"
  },
  {
    "text": "a master faster than the first one ok",
    "start": "1595590",
    "end": "1602820"
  },
  {
    "text": "let's say how to use TF demon to download this fires we just we just to",
    "start": "1602820",
    "end": "1612300"
  },
  {
    "text": "use HTTP proxy and it was occurred to download the age we can say it just goes",
    "start": "1612300",
    "end": "1620670"
  },
  {
    "text": "to one point two seconds yes we are",
    "start": "1620670",
    "end": "1628620"
  },
  {
    "text": "makkya cui has the ability of PP downloading as how to approve age by",
    "start": "1628620",
    "end": "1638430"
  },
  {
    "start": "1635000",
    "end": "1635000"
  },
  {
    "text": "registry mirror first delay we they we",
    "start": "1638430",
    "end": "1651420"
  },
  {
    "text": "pour the antics from without John fly it",
    "start": "1651420",
    "end": "1656640"
  },
  {
    "text": "is very slow with jump",
    "start": "1656640",
    "end": "1662490"
  },
  {
    "text": "- the result okay",
    "start": "1662490",
    "end": "1669630"
  },
  {
    "text": "it's almost disband one minutes to download the Angelus so let's say how so",
    "start": "1669630",
    "end": "1680590"
  },
  {
    "text": "let's say your strong tried to pose the same image",
    "start": "1680590",
    "end": "1686970"
  },
  {
    "text": "first we should configure the res Mira",
    "start": "1686970",
    "end": "1691980"
  },
  {
    "text": "Senator Jeff Chima I was a resident Mira and OH start the abdomen and remove the",
    "start": "1691980",
    "end": "1704370"
  },
  {
    "text": "image okay let's pull the same image",
    "start": "1704370",
    "end": "1712530"
  },
  {
    "text": "we can say this does the coasters six seconds and every layers the coaster",
    "start": "1723030",
    "end": "1731390"
  },
  {
    "text": "less than one second there's much faster than the first of",
    "start": "1731390",
    "end": "1738420"
  },
  {
    "text": "first push pulling let's say how to pour",
    "start": "1738420",
    "end": "1748860"
  },
  {
    "text": "image why HP proxy and NTP proper to be as proxy this is appalling the image of",
    "start": "1748860",
    "end": "1759840"
  },
  {
    "text": "is out wrong fly it is very very slow and this is a major major is four",
    "start": "1759840",
    "end": "1766530"
  },
  {
    "text": "hundred four hundred and forty one and being size that's just a jump to the end",
    "start": "1766530",
    "end": "1773820"
  },
  {
    "text": "okay it's the culture six minutes as",
    "start": "1773820",
    "end": "1788580"
  },
  {
    "text": "yours John tried to pour the same image we should config some HTTP proxy and",
    "start": "1788580",
    "end": "1795320"
  },
  {
    "text": "HTTP proxy and the rest Dali",
    "start": "1795320",
    "end": "1799850"
  },
  {
    "text": "okay as poor the same image by John Klein we can say is much faster than the",
    "start": "1807190",
    "end": "1821630"
  },
  {
    "text": "previous one it is all tonal and now it",
    "start": "1821630",
    "end": "1829670"
  },
  {
    "text": "is extruding and the whole coaster is 23",
    "start": "1829670",
    "end": "1835280"
  },
  {
    "text": "second and every layer comes to just two seconds that's all the diamonds",
    "start": "1835280",
    "end": "1847659"
  },
  {
    "start": "1847000",
    "end": "1847000"
  },
  {
    "text": "this is our world roadmap and they have a lot of things to do in the future so",
    "start": "1847840",
    "end": "1854150"
  },
  {
    "text": "it is very welcomed if you have interested to hacker on junk fly that's",
    "start": "1854150",
    "end": "1860840"
  },
  {
    "text": "all [Applause]",
    "start": "1860840",
    "end": "1868990"
  },
  {
    "text": "is there any questions",
    "start": "1868990",
    "end": "1872760"
  },
  {
    "text": "thank you with this DF demon you have mirrors from your super notes every time",
    "start": "1883700",
    "end": "1891960"
  },
  {
    "text": "so it will have a lot of overhead or not",
    "start": "1891960",
    "end": "1897200"
  },
  {
    "text": "you got me yeah the DF demons someone got me the DF",
    "start": "1898880",
    "end": "1919110"
  },
  {
    "text": "demon is a mirror of your super node so as as I understood it it's a proxy the",
    "start": "1919110",
    "end": "1926040"
  },
  {
    "text": "DF demon ok then the DF yet so where's the data start on the node so you",
    "start": "1926040",
    "end": "1933260"
  },
  {
    "text": "created yeah and mirror on the local also not",
    "start": "1933260",
    "end": "1939350"
  },
  {
    "text": "it's is it only practicing up to to the",
    "start": "1939350",
    "end": "1944880"
  },
  {
    "text": "super node or to TF get to DF get",
    "start": "1944880",
    "end": "1950510"
  },
  {
    "text": "demon yeah okay okay okay the data is thought we're then actually on every",
    "start": "1965559",
    "end": "1972140"
  },
  {
    "text": "Holston where you have it inside the demon at the end yeah yeah okay okay",
    "start": "1972140",
    "end": "1981800"
  },
  {
    "text": "for me it's kind of overhead at least you have then data replicated on every",
    "start": "1981800",
    "end": "1986809"
  },
  {
    "text": "host right okay just one my",
    "start": "1986809",
    "end": "1992059"
  },
  {
    "text": "understanding it's okay actually it can't do some Auto cleanup you don't you",
    "start": "1992059",
    "end": "1999110"
  },
  {
    "text": "don't really take the disk this space in the long run that's a great question so",
    "start": "1999110",
    "end": "2008190"
  },
  {
    "text": "that's all thank you",
    "start": "2011309",
    "end": "2015179"
  }
]