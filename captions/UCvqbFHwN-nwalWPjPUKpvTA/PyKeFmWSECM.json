[
  {
    "start": "0",
    "end": "50000"
  },
  {
    "text": "hi I'm Brendan I'm gonna talk today about some of my work and really it's",
    "start": "79",
    "end": "6720"
  },
  {
    "text": "team work on developing alternate client libraries the official alternate client",
    "start": "6720",
    "end": "11940"
  },
  {
    "text": "libraries for kubernetes this was actually intended to be a co",
    "start": "11940",
    "end": "17160"
  },
  {
    "text": "presentation with mehdi from Google who I work with on this particular project",
    "start": "17160",
    "end": "22580"
  },
  {
    "text": "unfortunately he couldn't be here because he his plane conflicted with the",
    "start": "22580",
    "end": "27660"
  },
  {
    "text": "talks lot so when we submitted the talk he actually did most of the hard work to get the talk submitted but I get to be",
    "start": "27660",
    "end": "34200"
  },
  {
    "text": "up on stage to talk to you today so I don't know I don't know I don't know whether that's a fair trade or not but",
    "start": "34200",
    "end": "40710"
  },
  {
    "text": "but many thanks to him for for helping kick this off and actually do a bunch of the work that I'm going to talk about",
    "start": "40710",
    "end": "47270"
  },
  {
    "text": "all right so I wanted to start first with our goals the real idea behind this",
    "start": "47270",
    "end": "53820"
  },
  {
    "start": "50000",
    "end": "50000"
  },
  {
    "text": "part of the project was that as you know kubernetes has gained in popularity and everything else like that there are more",
    "start": "53820",
    "end": "60600"
  },
  {
    "text": "and more people who want to be able to interact with the API in a specific",
    "start": "60600",
    "end": "66479"
  },
  {
    "text": "programming language either this is because of familiarity or existing code or because of integration with a larger",
    "start": "66479",
    "end": "73710"
  },
  {
    "text": "project tools like Jenkins are written in Java so having a Java client makes sense tools like Visual Studio code are",
    "start": "73710",
    "end": "81210"
  },
  {
    "text": "written in typescript so having a typescript client makes sense there are people who are passionate around certain communities the Haskell",
    "start": "81210",
    "end": "89310"
  },
  {
    "text": "community for example is you know people really like to program in that programming language it's nice for them",
    "start": "89310",
    "end": "94560"
  },
  {
    "text": "to be able to do so in be able to talk to communities in in the in a language that they love and so generally speaking",
    "start": "94560",
    "end": "103140"
  },
  {
    "text": "the goal is to ensure that all of these languages can successfully target kubernetes now one of the things that",
    "start": "103140",
    "end": "110369"
  },
  {
    "text": "you realize is that and I'm sure that all of you are aware at this point is that kubernetes is a very rapidly",
    "start": "110369",
    "end": "115860"
  },
  {
    "text": "changing target and if we were sitting down and I don't know how many api's",
    "start": "115860",
    "end": "121140"
  },
  {
    "text": "there are at this point but I'll show you the JSON file that represents all",
    "start": "121140",
    "end": "126329"
  },
  {
    "text": "the api's and it's like three megabytes at this point I think something like that so that's a lot of api's",
    "start": "126329",
    "end": "133830"
  },
  {
    "text": "if we were hand carving out all of those all of those api's it really wouldn't be",
    "start": "133830",
    "end": "139260"
  },
  {
    "text": "feasible and i think if you look at the handwritten libraries that exist out there and there are a few of them they",
    "start": "139260",
    "end": "144810"
  },
  {
    "text": "cover you know eight or ten of the most popular objects and then they stop",
    "start": "144810",
    "end": "150500"
  },
  {
    "text": "whereas if you use a code generator approach you can you can cover the",
    "start": "150500",
    "end": "156270"
  },
  {
    "text": "entire api even as the api changes and so we'll talk a little bit about that when we talk about the goal the the",
    "start": "156270",
    "end": "162150"
  },
  {
    "text": "approach that we took but the one of the goals is not just to have great libraries for kubernetes and all these",
    "start": "162150",
    "end": "169260"
  },
  {
    "text": "different languages but actually to have libraries that cover the entire space of",
    "start": "169260",
    "end": "175260"
  },
  {
    "text": "the API so that we don't have to say hey you know what you can't use that particular new alpha feature because we",
    "start": "175260",
    "end": "181740"
  },
  {
    "text": "haven't bothered to write down a lot you know write down the interface for it yet I think that another way of saying that",
    "start": "181740",
    "end": "188340"
  },
  {
    "text": "though is that we also really want people to love the libraries that we build and one of the challenges of this",
    "start": "188340",
    "end": "196950"
  },
  {
    "text": "whole project is that languages are very individualistic they have very varying",
    "start": "196950",
    "end": "202019"
  },
  {
    "text": "flavors they have wide heterogeneity in terms of the feature sets that they have and people who program in those",
    "start": "202019",
    "end": "208860"
  },
  {
    "text": "languages want them to feel fluent and want them to feel idiomatic and so we need to be able to sort of each",
    "start": "208860",
    "end": "214830"
  },
  {
    "text": "individually or collectively become if not experts at least familiar enough",
    "start": "214830",
    "end": "219959"
  },
  {
    "text": "with the languages that we're building for that we build libraries that feel right and that people aren't sort of",
    "start": "219959",
    "end": "226320"
  },
  {
    "text": "chafing against as they as they use those libraries so in addition to having a bunch of libraries that target",
    "start": "226320",
    "end": "233880"
  },
  {
    "text": "kubernetes successfully we also want to make sure that those programming language communities also feel very natural and that's this extends also",
    "start": "233880",
    "end": "240390"
  },
  {
    "text": "into tool integration so that you know in the Java world there's a set of ways",
    "start": "240390",
    "end": "248459"
  },
  {
    "text": "that people manage dependencies making sure we're integrated in that via maven",
    "start": "248459",
    "end": "254160"
  },
  {
    "text": "and Gradle and all of these tools that exist that people expect to just work similar things are true with NPM in the",
    "start": "254160",
    "end": "260790"
  },
  {
    "text": "JavaScript world with nougat in the c-sharp world you know pip in the Python world there's",
    "start": "260790",
    "end": "266430"
  },
  {
    "text": "a bunch of these things though so it's not sufficient to just write good libraries it's actually also a case that you have to go and learn how to actually",
    "start": "266430",
    "end": "272610"
  },
  {
    "text": "distribute software into each of these different communities and actually that's been a very interesting learning",
    "start": "272610",
    "end": "278630"
  },
  {
    "text": "for me anyway and then I think a third goal that was really important to us is",
    "start": "278630",
    "end": "283740"
  },
  {
    "text": "that there's a degree of equality of experience between all of these different libraries right so that the",
    "start": "283740",
    "end": "292740"
  },
  {
    "text": "the kinds of functionality and the kinds of features and the kinds of things that",
    "start": "292740",
    "end": "298470"
  },
  {
    "text": "you can do in each of these libraries is roughly identical or at least we have some way of talking about you know how",
    "start": "298470",
    "end": "305370"
  },
  {
    "text": "capable a particular client library is as well as the fact that it and this is",
    "start": "305370",
    "end": "311100"
  },
  {
    "text": "one of the challenges actually as they'll talk to you in a little bit ensuring that if you know Cube control",
    "start": "311100",
    "end": "319080"
  },
  {
    "text": "and a particular cube config work that the library and that same cube config",
    "start": "319080",
    "end": "324390"
  },
  {
    "text": "work all right so if user can use the go client or can use the command-line",
    "start": "324390",
    "end": "329550"
  },
  {
    "text": "tooling and then they use the Java library and suddenly they can't load the",
    "start": "329550",
    "end": "334800"
  },
  {
    "text": "same config file or it doesn't authenticate properly that's a problem obviously and and and as we'll see",
    "start": "334800",
    "end": "341669"
  },
  {
    "text": "that's actually an ongoing challenge because it's that behavior is more or",
    "start": "341669",
    "end": "347970"
  },
  {
    "text": "less totally unspecified except for in the code but before we move on to some",
    "start": "347970",
    "end": "353370"
  },
  {
    "text": "of the challenges that we see I wanted to give you some examples of what this looks like and this is actually drawn",
    "start": "353370",
    "end": "359370"
  },
  {
    "text": "from the Python library hopefully that's legible and so much like anything else",
    "start": "359370",
    "end": "365310"
  },
  {
    "start": "361000",
    "end": "361000"
  },
  {
    "text": "any other library you're going to import a bunch of files and this pattern actually looks at the oh you'll see that",
    "start": "365310",
    "end": "370650"
  },
  {
    "text": "the code looks fairly similar we load up our config to load in the cube config",
    "start": "370650",
    "end": "375990"
  },
  {
    "text": "file and then we can open up a yamo file as a file descriptor we can use them the",
    "start": "375990",
    "end": "383190"
  },
  {
    "text": "yamo library the built-in Python Yamma library to load that into an object we",
    "start": "383190",
    "end": "389040"
  },
  {
    "text": "can create a client and and the clients are per API group so you'll see there",
    "start": "389040",
    "end": "394890"
  },
  {
    "text": "I'm creating a client for the tensions view and beta1 api once I have",
    "start": "394890",
    "end": "400600"
  },
  {
    "text": "that client for the extensions v1 beta one API I can make a call to create",
    "start": "400600",
    "end": "405730"
  },
  {
    "text": "namespace deployment give that body that I loaded in from yeah mol give the namespace and then once that all works I",
    "start": "405730",
    "end": "412389"
  },
  {
    "text": "can print out you know yeh I've created a deployment and I think that this this",
    "start": "412389",
    "end": "418000"
  },
  {
    "text": "shows you that the libraries do actually you know that looks largely just like",
    "start": "418000",
    "end": "423370"
  },
  {
    "text": "Python code that you might otherwise write with a few weirdnesses like the",
    "start": "423370",
    "end": "428590"
  },
  {
    "text": "camel casing of the extensions v1 Beta API and things like that and that's one",
    "start": "428590",
    "end": "435070"
  },
  {
    "start": "434000",
    "end": "434000"
  },
  {
    "text": "of the challenges we'll talk about in a little bit a typescript very similar import statement to pull the library and",
    "start": "435070",
    "end": "441220"
  },
  {
    "text": "at the top creating of a cube config object loading the cube config object",
    "start": "441220",
    "end": "446910"
  },
  {
    "text": "creating the API object in this case we're using generics to be able to",
    "start": "446910",
    "end": "454050"
  },
  {
    "text": "parameterize and instantiate the extensions v1 beta one API creating a deployment by loading in from Y Amal",
    "start": "454050",
    "end": "460690"
  },
  {
    "text": "again using a built not a built in but a yam a library that exists out there that",
    "start": "460690",
    "end": "465789"
  },
  {
    "text": "has been integrated into the client and that's another aspect of what we do it's not sufficient to just build these",
    "start": "465789",
    "end": "472840"
  },
  {
    "text": "client libraries you actually have to build a bunch of utilities around them that people well you don't have to but it's nice to build a bunch of utilities",
    "start": "472840",
    "end": "478690"
  },
  {
    "text": "around them that people expect so the ability to easily load code from you Amal in some languages that's more",
    "start": "478690",
    "end": "485830"
  },
  {
    "text": "built-in yeah milles pretty native to Python in other languages like typescript not as native and then",
    "start": "485830",
    "end": "492880"
  },
  {
    "text": "finally we're going to create this deployment and again you'll see this is idiomatic more more idiomatic JavaScript",
    "start": "492880",
    "end": "498940"
  },
  {
    "text": "where or typescript we're like so du Maurier di-o-matic typescript actually if I was using a wait but it's idiomatic",
    "start": "498940",
    "end": "505450"
  },
  {
    "text": "JavaScript where I'm making a call into creating a namespace object and I'm giving some promises I'm getting back a",
    "start": "505450",
    "end": "512380"
  },
  {
    "text": "promise and some handlers that are called depending on how that promise outcome comes out but it's doing exactly",
    "start": "512380",
    "end": "518469"
  },
  {
    "text": "the same thing and so the Python developer can create a deployment using the Python code in the previous slide",
    "start": "518469",
    "end": "524500"
  },
  {
    "text": "the JavaScript developer can create a deployment using the JavaScript code here and similarly for Java and c-sharp",
    "start": "524500",
    "end": "530620"
  },
  {
    "text": "and Haskell and and so on and so forth",
    "start": "530620",
    "end": "535800"
  },
  {
    "text": "speaking of the cluster configuration I think it's an interesting topic because",
    "start": "535800",
    "end": "542230"
  },
  {
    "text": "it sort of describes some of the challenges that we that we had when we",
    "start": "542230",
    "end": "547810"
  },
  {
    "text": "sat down to write this object or write these libraries so can anybody out there",
    "start": "547810",
    "end": "554920"
  },
  {
    "text": "tell me what the loading order is for cube config files like if you read cube control do you know the order in which",
    "start": "554920",
    "end": "561790"
  },
  {
    "text": "it looks for files anybody sorry what okay environment variables first that's",
    "start": "561790",
    "end": "569650"
  },
  {
    "text": "right home local directory is the next one in",
    "start": "569650",
    "end": "578920"
  },
  {
    "text": "many cases it looks in the cluster it looks for some magic stuff inside the cluster and then it finally if all else",
    "start": "578920",
    "end": "585760"
  },
  {
    "start": "579000",
    "end": "579000"
  },
  {
    "text": "fails it defaults to localhost 8080 and that's actually not entirely true",
    "start": "585760",
    "end": "590890"
  },
  {
    "text": "because on Windows there's actually",
    "start": "590890",
    "end": "596260"
  },
  {
    "text": "multiple different places that you might call a home directory and so there in the go client and totally undocumented",
    "start": "596260",
    "end": "602650"
  },
  {
    "text": "anywhere until a customer or a user yelled at us that this cube config didn't work for them yelled is a strong",
    "start": "602650",
    "end": "610240"
  },
  {
    "text": "term file the github issue and they pointed out that actually there's this",
    "start": "610240",
    "end": "616480"
  },
  {
    "text": "go code that is not documented anywhere that loads looks in a whole bunch of other directories to try and find a cube",
    "start": "616480",
    "end": "623290"
  },
  {
    "text": "config file and so now all of the client libraries do this so now we actually do",
    "start": "623290",
    "end": "629080"
  },
  {
    "text": "have parity I think and the reason that I say I think is because I don't have a",
    "start": "629080",
    "end": "635020"
  },
  {
    "text": "test right I can write unit tests for this behavior but I don't have any like",
    "start": "635020",
    "end": "640150"
  },
  {
    "text": "canonical hey I can download a set of directories and a set of environment variables and I can run all my libraries",
    "start": "640150",
    "end": "646300"
  },
  {
    "text": "through it and validate that you know the same config was loaded in all of them there is nowhere in the project is",
    "start": "646300",
    "end": "652690"
  },
  {
    "text": "there specified this behavior and the corresponding sort of compatibility tests that you might expect and it's a",
    "start": "652690",
    "end": "659350"
  },
  {
    "text": "small point at some level although it's kind of a crucial point because if Cube control works you would expect that your",
    "start": "659350",
    "end": "665200"
  },
  {
    "text": "client library works or you expect that the tool written in a different language works and if it doesn't people get very",
    "start": "665200",
    "end": "670210"
  },
  {
    "text": "confused and and so it's actually a very important piece of compatibility and a",
    "start": "670210",
    "end": "675610"
  },
  {
    "text": "very important piece of the overall user experience and then there's this added wrinkle which is not true of the loading",
    "start": "675610",
    "end": "684340"
  },
  {
    "text": "you know from a command-line tool which is that in a programming and programmatic environment many people",
    "start": "684340",
    "end": "690310"
  },
  {
    "text": "expect to be able to build their config from scratch or be able to build their config from in-memory objects such that",
    "start": "690310",
    "end": "696790"
  },
  {
    "text": "you know if initially when we had the clients the way they were we would have to tell people like oh you want to build",
    "start": "696790",
    "end": "703000"
  },
  {
    "text": "it from memory you should write it to some temporary files set this environment variable right this yanil",
    "start": "703000",
    "end": "708850"
  },
  {
    "text": "from these temporary into a temporary file set an environment variable and then call the load file Oh config file obviously in some environments that's",
    "start": "708850",
    "end": "716380"
  },
  {
    "text": "just not possible and in other environments that's a pretty awkward hacky thing to do and so there's this",
    "start": "716380",
    "end": "721480"
  },
  {
    "text": "added kind of capability that that we added for these client libraries which is the ability to sort of programmatically construct your client",
    "start": "721480",
    "end": "729310"
  },
  {
    "text": "code and in Java this looks like this builder pattern is sort of an idiomatic pattern for Java we can say you know",
    "start": "729310",
    "end": "737050"
  },
  {
    "text": "what I want to create an API client via this client builder I can set my certificate authority in this case I actually am using a path to a file but I",
    "start": "737050",
    "end": "744880"
  },
  {
    "text": "could easily just use a byte stream or anything else I'm setting the host eventually I get to build my client",
    "start": "744880",
    "end": "750520"
  },
  {
    "text": "right so this is a new part of building an SDK as opposed to building a command-line tool and again this is",
    "start": "750520",
    "end": "757300"
  },
  {
    "text": "about providing a user experience for these libraries that is more than just the ability to call the individual the",
    "start": "757300",
    "end": "764470"
  },
  {
    "text": "individual functions I mentioned as well that one of the the core is so this is",
    "start": "764470",
    "end": "770500"
  },
  {
    "text": "an example of parody right we want to make sure that all of these libraries have exactly the same capabilities and",
    "start": "770500",
    "end": "776680"
  },
  {
    "text": "exactly the same experiences to achieve that we actually have a set of standards",
    "start": "776680",
    "end": "782560"
  },
  {
    "text": "defined for these client libraries starting with a bronze standard that basically describes the rough",
    "start": "782560",
    "end": "789210"
  },
  {
    "start": "785000",
    "end": "785000"
  },
  {
    "text": "capabilities that we expect of a client library at the bronze standard and this",
    "start": "789210",
    "end": "795430"
  },
  {
    "text": "includes things like loading from a cube config file the ability do basic off using client certificates",
    "start": "795430",
    "end": "802470"
  },
  {
    "text": "using bearer tokens again inline and referenced in a file did you know that",
    "start": "802470",
    "end": "808000"
  },
  {
    "text": "in your Cube config file for every certificate for every token it can either be in line in the yamo file or it",
    "start": "808000",
    "end": "814060"
  },
  {
    "text": "can be a file pointer to a file on the file system it is also the case that",
    "start": "814060",
    "end": "819189"
  },
  {
    "text": "that file pointer is relative to the location of the cube config file not to",
    "start": "819189",
    "end": "824439"
  },
  {
    "text": "the home directory of the process that's running currently we had that bug in a couple client libraries and again",
    "start": "824439",
    "end": "829740"
  },
  {
    "text": "totally unspecified anywhere right like the only way you understand the behavior",
    "start": "829740",
    "end": "835149"
  },
  {
    "text": "is by seeing what happens when you try and use cube control or when you try and",
    "start": "835149",
    "end": "840220"
  },
  {
    "text": "use the client go client libraries and then also things like TLS TLS is",
    "start": "840220",
    "end": "847810"
  },
  {
    "text": "interesting because every programming language is a little bit different about how they handle custom CAS basic API",
    "start": "847810",
    "end": "855100"
  },
  {
    "text": "calls like pods and everything else like that and then finally working within the cluster environment because when people often oftentimes these SDKs are being",
    "start": "855100",
    "end": "862089"
  },
  {
    "text": "used to build containers that run inside the cluster actually the ability to load in from the cluster environment is",
    "start": "862089",
    "end": "868240"
  },
  {
    "text": "actually probably the most important version of that it may be documented",
    "start": "868240",
    "end": "873279"
  },
  {
    "text": "somewhere but the locations of all of those certificates are again something that I found by digging through the code",
    "start": "873279",
    "end": "879839"
  },
  {
    "text": "it's possible that it's located somewhere but I don't know where it is",
    "start": "879839",
    "end": "886089"
  },
  {
    "text": "if that's the case and again it's a lot of what we do is taking doing spunky",
    "start": "886089",
    "end": "891490"
  },
  {
    "text": "through the client code to find out the various places that things are defined as you move out for bronze we add",
    "start": "891490",
    "end": "897360"
  },
  {
    "start": "896000",
    "end": "896000"
  },
  {
    "text": "capabilities like watch watch is an interesting thing because as we mention",
    "start": "897360",
    "end": "902379"
  },
  {
    "text": "as I'm going to talk about later we use open API and cogeneration to generate the code that we use unfortunately there",
    "start": "902379",
    "end": "910209"
  },
  {
    "text": "is exactly no specification for anything like watch anywhere in the world of API",
    "start": "910209",
    "end": "916029"
  },
  {
    "text": "schemas right there is no equivalent to open API that exists for HTTP based",
    "start": "916029",
    "end": "924279"
  },
  {
    "text": "watch I mean we invented the watch protocol at the bone the actual JSON protocol that's used for watch is",
    "start": "924279",
    "end": "929829"
  },
  {
    "text": "invented by the curb entities API server anyway but there wasn't even something we could have adopted or something where we could",
    "start": "929829",
    "end": "935320"
  },
  {
    "text": "generate the client libraries so in the case of watch and and if people don't know haven't seen watch before watch is",
    "start": "935320",
    "end": "941770"
  },
  {
    "text": "the ability basically to open up a hanging connection to the API server and say please tell me about changes either",
    "start": "941770",
    "end": "947530"
  },
  {
    "text": "to an entire collection or to a specific object all of that code is written from",
    "start": "947530",
    "end": "952600"
  },
  {
    "text": "scratch alright so none of that code is code generated as a result it's not the most",
    "start": "952600",
    "end": "959440"
  },
  {
    "text": "awesome code to work with because you have to do things like pass entire paths you have to you know slash api's slash",
    "start": "959440",
    "end": "966160"
  },
  {
    "text": "namespaces slash my object dot if you get it wrong the error messages that you",
    "start": "966160",
    "end": "971770"
  },
  {
    "text": "get aren't particularly intuitive and so the because we because we can't code",
    "start": "971770",
    "end": "979270"
  },
  {
    "text": "generate for this particular class of calls we can't provide as great a user",
    "start": "979270",
    "end": "984370"
  },
  {
    "text": "interface experience as we do for non watch calls and then at the higher end",
    "start": "984370",
    "end": "990520"
  },
  {
    "text": "of things exec attach port forward again",
    "start": "990520",
    "end": "996190"
  },
  {
    "text": "not supported out of the box again with a protocol that's not defined anywhere and we'll talk a little bit about that",
    "start": "996190",
    "end": "1001860"
  },
  {
    "text": "protocol in a second proto buffer encoding which again has the same problems the API server chose to use",
    "start": "1001860",
    "end": "1010290"
  },
  {
    "text": "protocol buffer encoding but they did not choose to use the protocol buffer",
    "start": "1010290",
    "end": "1015510"
  },
  {
    "text": "service definitions so we can't generate the client libraries for talking",
    "start": "1015510",
    "end": "1021900"
  },
  {
    "text": "protocol buffer we have to again hand roll all the client libraries for talking protocol buffers and then",
    "start": "1021900",
    "end": "1028380"
  },
  {
    "text": "finally generated examples so the state of the world here is that we have five",
    "start": "1028380",
    "end": "1035250"
  },
  {
    "start": "1033000",
    "end": "1033000"
  },
  {
    "text": "is that five yeah we have five client libraries that are supported well you",
    "start": "1035250",
    "end": "1041188"
  },
  {
    "text": "sorry for client libraries that are supported basically up to the goal of the gold level except for the generated",
    "start": "1041189",
    "end": "1046709"
  },
  {
    "text": "examples were saying none of them have done that for whatever reason actually no it's because it's kind of annoying to",
    "start": "1046709",
    "end": "1052770"
  },
  {
    "text": "do it and nobody's bothered but if you're looking for a starter project and a but things like exec and watch work",
    "start": "1052770",
    "end": "1061200"
  },
  {
    "text": "throughout Python net Java and typescript and JavaScript obviously because typescript compiled down to JavaScript there's also",
    "start": "1061200",
    "end": "1068500"
  },
  {
    "text": "a Haskell library it is less it has less cave it is less capable it's roughly at",
    "start": "1068500",
    "end": "1074800"
  },
  {
    "text": "the Silver level has all the basic functionality and and has the ability to",
    "start": "1074800",
    "end": "1081040"
  },
  {
    "text": "do watches but doesn't have the port forwarding and some of the more advanced functionality I should also say actually",
    "start": "1081040",
    "end": "1086800"
  },
  {
    "text": "I lied a little bit none of the libraries except for the Java library have a support protocol",
    "start": "1086800",
    "end": "1092410"
  },
  {
    "text": "buffer encoding either the Java library does support protocol buffer encoding and that's partially because of some",
    "start": "1092410",
    "end": "1101200"
  },
  {
    "text": "challenges with the produce the protocol buffer compiler and partially just because again it's work that that people",
    "start": "1101200",
    "end": "1107170"
  },
  {
    "text": "have to do it's handwork that people have to do to make it work okay so we'll go on to the basic approach that we've",
    "start": "1107170",
    "end": "1113200"
  },
  {
    "text": "taken to building this out we start with an open API spec and we'll dive into the",
    "start": "1113200",
    "end": "1119080"
  },
  {
    "start": "1114000",
    "end": "1114000"
  },
  {
    "text": "open API spec in just a second it goes through code generation the code generation tool is a tool that we",
    "start": "1119080",
    "end": "1124720"
  },
  {
    "text": "actually don't build it's a it's a tool called swagger code gen that is out",
    "start": "1124720",
    "end": "1130750"
  },
  {
    "text": "there on the in github it's run by mule",
    "start": "1130750",
    "end": "1135880"
  },
  {
    "text": "soft I think a face book now I guess and then we on top of that generated code we",
    "start": "1135880",
    "end": "1143830"
  },
  {
    "text": "add some custom code that does the things like cube config loading does things like watch those things like port",
    "start": "1143830",
    "end": "1149950"
  },
  {
    "text": "forward all of that stuff mix all of that stuff together and you have a client library that comes out the other",
    "start": "1149950",
    "end": "1155530"
  },
  {
    "text": "side the the pros of this approach are obviously we get great API coverage we",
    "start": "1155530",
    "end": "1161920"
  },
  {
    "start": "1159000",
    "end": "1159000"
  },
  {
    "text": "have you know effectively perfect API coverage because we're long as the swagger spec is right we get coverage of",
    "start": "1161920",
    "end": "1170440"
  },
  {
    "text": "overall of the api's relatively little work to to do that upgrade it's a walk",
    "start": "1170440",
    "end": "1176170"
  },
  {
    "text": "through the manual process but it's that the that's got some major advantages in",
    "start": "1176170",
    "end": "1182320"
  },
  {
    "text": "terms of an ability to keep up with the project cover the full set of api's we're not good SDKs I don't think if you",
    "start": "1182320",
    "end": "1189610"
  },
  {
    "text": "know we don't cover every API we're not a fit you know we're not really doing our job if we're not covering every API",
    "start": "1189610",
    "end": "1195340"
  },
  {
    "text": "that people write I would say the cons of this approach the it's complicated and and we will",
    "start": "1195340",
    "end": "1204160"
  },
  {
    "start": "1199000",
    "end": "1199000"
  },
  {
    "text": "have bugs that people file and I'm going to show you an example of one that",
    "start": "1204160",
    "end": "1209290"
  },
  {
    "text": "seemed like they should be trivially easy to fix that in fact are not the",
    "start": "1209290",
    "end": "1217420"
  },
  {
    "text": "code itself can be not idiomatic because it's machine generated code you know we",
    "start": "1217420",
    "end": "1224530"
  },
  {
    "text": "can do some work to kind of dress it up but it's it's hard to do that in a",
    "start": "1224530",
    "end": "1230080"
  },
  {
    "text": "really good way so there's definitely some warts and and there's a number of",
    "start": "1230080",
    "end": "1236560"
  },
  {
    "text": "gaps as well in in the process and I'll step through the gaps in a little more detail in a couple slides I'm going to",
    "start": "1236560",
    "end": "1241780"
  },
  {
    "text": "give you a sense for what the generating code process actually looks like so inside of a container we download the",
    "start": "1241780",
    "end": "1247660"
  },
  {
    "start": "1244000",
    "end": "1244000"
  },
  {
    "text": "open API spec from a particular release we are we are always generating code for",
    "start": "1247660",
    "end": "1254050"
  },
  {
    "text": "a particular release we munch up that open API spec because it doesn't fit",
    "start": "1254050",
    "end": "1261580"
  },
  {
    "text": "with a swagger code generator code quite perfectly in particular it doesn't it",
    "start": "1261580",
    "end": "1267100"
  },
  {
    "text": "doesn't weird things with packaging of the various API groups that don't generate very idiomatic libraries when",
    "start": "1267100",
    "end": "1273550"
  },
  {
    "text": "you jet and I don't do idiomatic packaging when you generate the code so we bunch that up there's an additional",
    "start": "1273550",
    "end": "1280600"
  },
  {
    "text": "amount of munching that happens to do some custom typing so and I'll talk",
    "start": "1280600",
    "end": "1287590"
  },
  {
    "text": "about that in just a second what I mean by what I mean by custom typing eventually once we've sort of massaged",
    "start": "1287590",
    "end": "1294490"
  },
  {
    "text": "the open API spec into a place where we think it's ready to go we run it through the actual code generator which is a big",
    "start": "1294490",
    "end": "1301720"
  },
  {
    "text": "hairy complicated templatized java program it generates all of the code and",
    "start": "1301720",
    "end": "1308260"
  },
  {
    "text": "one of the interesting you know again choices that happens when you do this code generator I should probably to",
    "start": "1308260",
    "end": "1313750"
  },
  {
    "text": "mention it in the cons is the code generator is made a choice about what HTTP library it's going to",
    "start": "1313750",
    "end": "1319060"
  },
  {
    "text": "use or rather you you get to choose when you generate the code which HTTP library you choose but you are limited by the",
    "start": "1319060",
    "end": "1327340"
  },
  {
    "text": "implementations and implementing as you can imagine implementing a code generator or the",
    "start": "1327340",
    "end": "1332570"
  },
  {
    "text": "templates for code generator is a non-trivial task and so you know it's",
    "start": "1332570",
    "end": "1338450"
  },
  {
    "text": "when somebody comes along and says hey you know what that HTTP library that you have and the one that we use is from",
    "start": "1338450",
    "end": "1343759"
  },
  {
    "text": "square called okay HTTP in Java at least they say that that HTTP library is like",
    "start": "1343759",
    "end": "1349700"
  },
  {
    "text": "five years old and deprecated and you're saying yeah but like do you want Nick this is one of these examples of like an",
    "start": "1349700",
    "end": "1355669"
  },
  {
    "text": "easy what is seemingly an easy bug why don't you just go to upgrade the HTTP library that turns into this like sorry like",
    "start": "1355669",
    "end": "1361639"
  },
  {
    "text": "here's the path of steps you're gonna have to do in order to to make that change and then Simon similarly like the",
    "start": "1361639",
    "end": "1369049"
  },
  {
    "text": "JavaScript client only works in node right you can't use it in the browser right now because the HTTP library",
    "start": "1369049",
    "end": "1375169"
  },
  {
    "text": "that's underneath it is the node HTTP library and then finally once all that code generators happened we copy the",
    "start": "1375169",
    "end": "1381200"
  },
  {
    "text": "code out then inside the client code inside the client that that generates the code now we have to sort of",
    "start": "1381200",
    "end": "1387919"
  },
  {
    "text": "integrate it into the project we bring it into the client library each client library has its own repository on github",
    "start": "1387919",
    "end": "1393799"
  },
  {
    "text": "the generator code has its own repository - we bring it into the client library we overwrite the existing client",
    "start": "1393799",
    "end": "1399950"
  },
  {
    "text": "code generate you know giant diffs that nobody ever really looks at and then we",
    "start": "1399950",
    "end": "1407240"
  },
  {
    "text": "have to update the example code because oftentimes with the alpha api's they've changed and sometimes actually the code",
    "start": "1407240",
    "end": "1413960"
  },
  {
    "text": "generator itself has changed the parameters move around or new parameters are added do that PR and then once we're",
    "start": "1413960",
    "end": "1421370"
  },
  {
    "text": "done with everything push up to a repository so I've learned a lot about",
    "start": "1421370",
    "end": "1428360"
  },
  {
    "text": "how you manage packages in maven in NPM in all of these they're and they're all",
    "start": "1428360",
    "end": "1433639"
  },
  {
    "text": "different and so that's another piece of the puzzle we're really until we've actually pushed these things out to a",
    "start": "1433639",
    "end": "1440330"
  },
  {
    "text": "place where they're consumable by our target audience or our end users we",
    "start": "1440330",
    "end": "1445700"
  },
  {
    "text": "haven't actually fixed the code right in most cases people don't want to be forking from github their client library",
    "start": "1445700",
    "end": "1452690"
  },
  {
    "text": "and compiling it on their machine they want to consume them from these package managers and so we've had to figure out",
    "start": "1452690",
    "end": "1459440"
  },
  {
    "text": "the right way so managing that and managing that for for all a lot of different approaches okay so looking at the gaps",
    "start": "1459440",
    "end": "1468440"
  },
  {
    "text": "in this what are the gaps in in open API well one of the first bugs that was filed on the Java client is the fact",
    "start": "1468440",
    "end": "1475340"
  },
  {
    "start": "1469000",
    "end": "1469000"
  },
  {
    "text": "that if you delete something every once in a while somebody gets an exception it's a pardoning exception and the",
    "start": "1475340",
    "end": "1483230"
  },
  {
    "text": "reason for this is that delete in kubernetes actually is multi is multi value return when the signing of a multi",
    "start": "1483230",
    "end": "1489410"
  },
  {
    "text": "value return it's multi type return it can either return a status object or it",
    "start": "1489410",
    "end": "1494450"
  },
  {
    "text": "can return the actual object that you deleted depending on whether the delete has completed or not it turns out that",
    "start": "1494450",
    "end": "1501230"
  },
  {
    "text": "open API the open API spec that the 2.0 version of the open API spec simply",
    "start": "1501230",
    "end": "1506720"
  },
  {
    "text": "cannot represent this right and it is not in the spec that you could have and",
    "start": "1506720",
    "end": "1511789"
  },
  {
    "text": "as this concept called one of and one of can be used for parameters but it can't",
    "start": "1511789",
    "end": "1516980"
  },
  {
    "text": "be used for return types now an open API three that's been changed so you can",
    "start": "1516980",
    "end": "1522080"
  },
  {
    "text": "have one of return types but none of the code generators really support open API 3 yet so we're stuck in this world where",
    "start": "1522080",
    "end": "1529580"
  },
  {
    "text": "every month someone files another issue on their Java client saying hey I tried to delete something in it through an",
    "start": "1529580",
    "end": "1535370"
  },
  {
    "text": "exception and I say yeah it's duplicated see this issue here and this is the long view of why it doesn't work properly",
    "start": "1535370",
    "end": "1542480"
  },
  {
    "text": "same thing with parrot types right so lots of these object-oriented programming languages they would really",
    "start": "1542480",
    "end": "1548059"
  },
  {
    "text": "love so in the in the go client because it's all handwritten people have done things like said hey there's a runtime",
    "start": "1548059",
    "end": "1553940"
  },
  {
    "text": "object and runtime object is a base object for every other object that exists metadata field things like that",
    "start": "1553940",
    "end": "1559940"
  },
  {
    "text": "are defined on that interface makes it very easy to write generic code around",
    "start": "1559940",
    "end": "1565419"
  },
  {
    "text": "these objects swagger doesn't or open API doesn't have a way of representing",
    "start": "1565419",
    "end": "1571669"
  },
  {
    "text": "hey there's this parent class that everybody inherits from it does actually",
    "start": "1571669",
    "end": "1576919"
  },
  {
    "text": "again in open API 3 but again code generators haven't caught up and then I",
    "start": "1576919",
    "end": "1583669"
  },
  {
    "text": "mentioned as I mentioned earlier you you can't represent these streaming operators and you can't represent protocol buffers and so the gaps in open",
    "start": "1583669",
    "end": "1590270"
  },
  {
    "text": "API definitely caused problems in our end user custom our end user client library facing experience there's a lot of gaps in",
    "start": "1590270",
    "end": "1598850"
  },
  {
    "start": "1596000",
    "end": "1596000"
  },
  {
    "text": "generated code one of the very first things we noticed as we started to try and implement things like watch was we",
    "start": "1598850",
    "end": "1605690"
  },
  {
    "text": "really needed the ability to separate prepare request meaning get the",
    "start": "1605690",
    "end": "1610820"
  },
  {
    "text": "authentication on it set the right headers set the right client keys set up the certificate authority get it ready",
    "start": "1610820",
    "end": "1617150"
  },
  {
    "text": "to go and execute the request because if you want to go to a watch you're gonna you need that request object in all of",
    "start": "1617150",
    "end": "1624169"
  },
  {
    "text": "these languages so that you can hang on to it and stream the data back because the response never exits effectively",
    "start": "1624169",
    "end": "1631330"
  },
  {
    "text": "most of the client libraries were set up with the belief that if they did an API request it goes out it does its",
    "start": "1631330",
    "end": "1638690"
  },
  {
    "text": "execution it terminates and then you get a response back right and so we had to",
    "start": "1638690",
    "end": "1644450"
  },
  {
    "text": "go and do surgery in all of these code generators to basically break those methods in half so that we could have a",
    "start": "1644450",
    "end": "1650630"
  },
  {
    "text": "method that basically said get set to call the request but don't actually execute it and the reason for that of",
    "start": "1650630",
    "end": "1656780"
  },
  {
    "text": "course is like I don't want to rewrite all of the code that attaches certificates that does all the stuff",
    "start": "1656780",
    "end": "1662030"
  },
  {
    "text": "necessary to get an HTTP request ready to go that's why I'm using client generator right that's why I'm using",
    "start": "1662030",
    "end": "1667820"
  },
  {
    "text": "code gen but I needed to actually go do some some refactoring in the code generator in order to enable other kinds",
    "start": "1667820",
    "end": "1675230"
  },
  {
    "text": "of behaviors that I needed to implement like port forwarding and exec and and watches",
    "start": "1675230",
    "end": "1680870"
  },
  {
    "text": "I think thankfully the swagger code gen folks have been incredibly friendly and easy to work with and so those PRS have",
    "start": "1680870",
    "end": "1687559"
  },
  {
    "text": "landed very quickly and we've been able to move the libraries forward I mentioned that they're not they're not",
    "start": "1687559",
    "end": "1693770"
  },
  {
    "text": "always idiomatic and they're in consistently maintained there are lots",
    "start": "1693770",
    "end": "1699140"
  },
  {
    "text": "and lots and lots of null parameters right so like swagger doesn't have a",
    "start": "1699140",
    "end": "1704299"
  },
  {
    "text": "good way of representing optional parameters or at least in some languages",
    "start": "1704299",
    "end": "1709610"
  },
  {
    "text": "like Java is a great example optional parameters aren't really easy to represent and so when you use the Java",
    "start": "1709610",
    "end": "1717169"
  },
  {
    "text": "client in many cases you're going to say create object this object this namespace and then like known old old old old",
    "start": "1717169",
    "end": "1725530"
  },
  {
    "text": "right and and again they're in without",
    "start": "1725530",
    "end": "1730730"
  },
  {
    "text": "going and doing a whole bunch of surgery on the code generator there's not a really good way to fix that and so it's",
    "start": "1730730",
    "end": "1738920"
  },
  {
    "text": "a kind of a lousy and user experience as a result and then I'm gonna mention yeah",
    "start": "1738920",
    "end": "1746390"
  },
  {
    "text": "I mentioned the the advanced features like watch aren't there and then this one is a great one someone filed a bug",
    "start": "1746390",
    "end": "1752450"
  },
  {
    "text": "on me and said found the bug on the Java client and said hey I have this view on secret object the secret object and I",
    "start": "1752450",
    "end": "1759650"
  },
  {
    "text": "have this other secret object and I to requests gave me the same secret I did dot equals on them and they're not equal",
    "start": "1759650",
    "end": "1766090"
  },
  {
    "text": "seems like that's a bug and I we dug",
    "start": "1766090",
    "end": "1772010"
  },
  {
    "text": "into it I dug into it it turns out that",
    "start": "1772010",
    "end": "1778270"
  },
  {
    "text": "Java array equals is pointer equals by default so you say array dot equals some",
    "start": "1778270",
    "end": "1784160"
  },
  {
    "text": "other array it's pointer equals it's not value equals so the and and in the secret it's an array of bytes the data",
    "start": "1784160",
    "end": "1789530"
  },
  {
    "text": "is an array of bytes compares the pointers they're not equal returns false swagger cogent actually had this bug and",
    "start": "1789530",
    "end": "1796970"
  },
  {
    "text": "fixed it by using array equals which actually does the right thing but then",
    "start": "1796970",
    "end": "1803090"
  },
  {
    "text": "actually and so I was like well I think it's fixed and they're like no still here and I looked at it again and it turns out actually in a secret object",
    "start": "1803090",
    "end": "1810140"
  },
  {
    "text": "the secret object has a map from string to array of bytes and while the swagger",
    "start": "1810140",
    "end": "1817910"
  },
  {
    "text": "Kochan has fixed it for array of bytes it hasn't fixed it for map of anything",
    "start": "1817910",
    "end": "1823700"
  },
  {
    "text": "to array of bytes and if you look at the implementation of equals in map under the deep down into the java libraries it",
    "start": "1823700",
    "end": "1830570"
  },
  {
    "text": "just calls object on equals again and you're back at square one right and so this this bug continues to exist secrets",
    "start": "1830570",
    "end": "1838010"
  },
  {
    "text": "and java still don't equal each other if we want to fix it we need to go into the code generator and put a whole bunch of",
    "start": "1838010",
    "end": "1845000"
  },
  {
    "text": "special casing logic in to be like oh i'm gonna do a recursive equality and if it's a map and if one of the fields is",
    "start": "1845000",
    "end": "1851540"
  },
  {
    "text": "an array I'm gonna use this other version of equals instead of object equals it becomes very",
    "start": "1851540",
    "end": "1858590"
  },
  {
    "text": "complicated and you start saying well is it worth it right and that's those are sort of the trade-offs that we have to make around",
    "start": "1858590",
    "end": "1864919"
  },
  {
    "text": "user experience known issues and and and using this code generator and then you",
    "start": "1864919",
    "end": "1872150"
  },
  {
    "text": "start thinking like maybe we should write our own code generator because it'll be perfect and bug free and but of",
    "start": "1872150",
    "end": "1880010"
  },
  {
    "text": "course that's a lot of work as well and then finally we also find a lot of gaps",
    "start": "1880010",
    "end": "1885760"
  },
  {
    "start": "1884000",
    "end": "1884000"
  },
  {
    "text": "in kubernetes itself so many parts are",
    "start": "1885760",
    "end": "1891279"
  },
  {
    "text": "under specified or not specified or just specified in code I mentioned how does a",
    "start": "1891279",
    "end": "1897320"
  },
  {
    "text": "cube config file loaded what are the streaming protocols we'll actually go over the streaming protocols in just a second but as a nice little example of",
    "start": "1897320",
    "end": "1905480"
  },
  {
    "text": "this I actually have a bug that is still open that I'm actually going to show you how we're gonna fix that root caused it",
    "start": "1905480",
    "end": "1912559"
  },
  {
    "start": "1907000",
    "end": "1907000"
  },
  {
    "text": "but I haven't actually fixed it so close",
    "start": "1912559",
    "end": "1919070"
  },
  {
    "text": "that up if we go over here to the kubernetes client java library isn't vaguely visible to people should I make",
    "start": "1919070",
    "end": "1925549"
  },
  {
    "text": "that bigger how's that all right so",
    "start": "1925549",
    "end": "1931210"
  },
  {
    "text": "we're gonna go over here there's a number there's the v1 secret all this equals false this is where is this one",
    "start": "1931210",
    "end": "1942820"
  },
  {
    "text": "writer support request body and proxy methods so this is someone maybe they're",
    "start": "1942820",
    "end": "1948320"
  },
  {
    "text": "out there today who said hey you know what I'm trying to you've generated this",
    "start": "1948320",
    "end": "1956360"
  },
  {
    "text": "method that is a post to the proxy so the API server has this proxy endpoint",
    "start": "1956360",
    "end": "1961820"
  },
  {
    "text": "which proxies the request from the API server to a pod in the cluster you have",
    "start": "1961820",
    "end": "1966950"
  },
  {
    "text": "this excuse me post method I'm trying to",
    "start": "1966950",
    "end": "1971960"
  },
  {
    "text": "use it I can't put a body in my post request there's no ability to put a body in my post request which kind of defeats",
    "start": "1971960",
    "end": "1978169"
  },
  {
    "text": "most of the point of doing a post and you know and he was like it seems like",
    "start": "1978169",
    "end": "1985610"
  },
  {
    "text": "kubernetes supports this it should support it but it doesn't and if I curl it it works but it doesn't in this",
    "start": "1985610",
    "end": "1991340"
  },
  {
    "text": "library and we say okay and I said you have no idea the rabbit hole you just walked into which is what I said a lot of",
    "start": "1991340",
    "end": "1998990"
  },
  {
    "text": "people in the ass for fixes so I had to",
    "start": "1998990",
    "end": "2005170"
  },
  {
    "text": "debug it so we go over here we'll go okay here's the moustache file so here's",
    "start": "2005170",
    "end": "2010570"
  },
  {
    "text": "the swagger code gen moustache file which is the code how the code generator happens and if we go find post you know",
    "start": "2010570",
    "end": "2025330"
  },
  {
    "text": "what you can see here is this local the local var post about a is equal to a",
    "start": "2025330",
    "end": "2032320"
  },
  {
    "text": "body per am if there's a body per am otherwise no alright so basically what",
    "start": "2032320",
    "end": "2038050"
  },
  {
    "text": "that saying is if in swagger there's a body per am defined make it equal to the",
    "start": "2038050",
    "end": "2043540"
  },
  {
    "text": "body per am which is a parameter that got passed into this method if in swagger there was no body per am to find",
    "start": "2043540",
    "end": "2048940"
  },
  {
    "text": "just make it null and there will be no body right so that's a bit of a clue we said first of all you had to learn",
    "start": "2048940",
    "end": "2055230"
  },
  {
    "text": "mustache conditionals which I hadn't learned until I started doing this stuff but that's what the pound that's what",
    "start": "2055230",
    "end": "2060760"
  },
  {
    "text": "this pound and not thing is doing so a little more about mustache templating",
    "start": "2060760",
    "end": "2066040"
  },
  {
    "text": "than I ever really wanted to know and but now we know so now we actually have",
    "start": "2066040",
    "end": "2071888"
  },
  {
    "text": "some sense for why there's an issue here we know we know why the the where the problem is coming from but now we need",
    "start": "2071889",
    "end": "2078460"
  },
  {
    "text": "to go to the swagger spec and so we can go over to the swagger spec I should",
    "start": "2078460",
    "end": "2085419"
  },
  {
    "text": "actually open that in a new new tab we",
    "start": "2085419",
    "end": "2092108"
  },
  {
    "text": "can go over to the spike respec and we can wait till it fully downloads because as I mentioned it's a little bit big we",
    "start": "2092109",
    "end": "2098080"
  },
  {
    "text": "can search for proxy here's the get version if you've never looked at",
    "start": "2098080",
    "end": "2106869"
  },
  {
    "text": "swagger before this is swagger so you can see here here's the definition of",
    "start": "2106869",
    "end": "2112330"
  },
  {
    "text": "the post and that's probably not very readable so",
    "start": "2112330",
    "end": "2118440"
  },
  {
    "text": "no yeah sorry I still don't know what",
    "start": "2121579",
    "end": "2127410"
  },
  {
    "text": "the AV dude oh my times just about up yeah yeah yeah yeah no I know that um sorry you will",
    "start": "2127410",
    "end": "2137579"
  },
  {
    "text": "see that the it doesn't contain this body parameter method and so what I'm gonna have to do and I since my time is",
    "start": "2137579",
    "end": "2144000"
  },
  {
    "text": "up I won't actually go and do it I'm gonna have to go into that part that swagger object add in that body",
    "start": "2144000",
    "end": "2149130"
  },
  {
    "text": "parameters field and then go through the",
    "start": "2149130",
    "end": "2154500"
  },
  {
    "text": "full code regen process right and so I think this gives you an idea of in some ways it's the gold garbage in garbage",
    "start": "2154500",
    "end": "2160109"
  },
  {
    "text": "out thing if we don't write a good swagger doc on the first place you know the client libraries suffer and so a lot",
    "start": "2160109",
    "end": "2166050"
  },
  {
    "text": "of what we've done is been debugging why the swagger doc is incorrect in the first in the end I that is the end of my",
    "start": "2166050",
    "end": "2174000"
  },
  {
    "text": "talk I guess I had some more a little bit more I'm always worried I'm gonna run out with a new talk but if you want to learn more please come check out all",
    "start": "2174000",
    "end": "2180810"
  },
  {
    "text": "the kerbin Nettie's client libraries there under Kurban get hub kubernetes - client Java C sharp JavaScript Python",
    "start": "2180810",
    "end": "2186540"
  },
  {
    "text": "Haskell there's a ruby client there that's mostly abandoned where so if you wanna if you're interested in Ruby and",
    "start": "2186540",
    "end": "2191910"
  },
  {
    "text": "you want to play around come come take that over there's also a go client library there that is also needing of",
    "start": "2191910",
    "end": "2197849"
  },
  {
    "text": "assistance and then finally if you like lists as I do I actually hand coded I",
    "start": "2197849",
    "end": "2203490"
  },
  {
    "text": "actually hand coded a lisp kubernetes client library that I would also love to have people come party with me on so",
    "start": "2203490",
    "end": "2210630"
  },
  {
    "text": "come check it out thank you so much I hope you enjoyed the conference alright",
    "start": "2210630",
    "end": "2216530"
  }
]