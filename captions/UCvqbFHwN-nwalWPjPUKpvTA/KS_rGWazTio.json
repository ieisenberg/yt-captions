[
  {
    "text": "hey everyone uh glad to see you all here",
    "start": "160",
    "end": "3120"
  },
  {
    "text": "at CubeCon London today hopefully you",
    "start": "3120",
    "end": "6640"
  },
  {
    "text": "managed to catch some good talks already",
    "start": "6640",
    "end": "8800"
  },
  {
    "text": "and are just not too sleepy after lunch",
    "start": "8800",
    "end": "11920"
  },
  {
    "text": "um so in this talk we will be going to",
    "start": "11920",
    "end": "14799"
  },
  {
    "text": "take you taking you through Prometheus",
    "start": "14799",
    "end": "16880"
  },
  {
    "text": "V3 what's new in that and talk a bit",
    "start": "16880",
    "end": "19920"
  },
  {
    "text": "about the future work beyond V3",
    "start": "19920",
    "end": "24320"
  },
  {
    "text": "cool so uh hi everyone i'm Fiona i'm a",
    "start": "24320",
    "end": "27119"
  },
  {
    "text": "software engineer at Grafana Labs and uh",
    "start": "27119",
    "end": "29920"
  },
  {
    "text": "I mostly work on Prometheus and Grafana",
    "start": "29920",
    "end": "32558"
  },
  {
    "text": "Mimir there um in Prometheus I've worked",
    "start": "32559",
    "end": "35520"
  },
  {
    "text": "on stuff like out of order native",
    "start": "35520",
    "end": "37280"
  },
  {
    "text": "histograms as well as helping to",
    "start": "37280",
    "end": "39280"
  },
  {
    "text": "coordinate the V3 release and I've",
    "start": "39280",
    "end": "41440"
  },
  {
    "text": "recently become a Prometheus team member",
    "start": "41440",
    "end": "43520"
  },
  {
    "text": "so uh yay for me I guess um this picture",
    "start": "43520",
    "end": "46960"
  },
  {
    "text": "is from the last time I was here at the",
    "start": "46960",
    "end": "48719"
  },
  {
    "text": "Excel Center so that was a couple years",
    "start": "48719",
    "end": "50559"
  },
  {
    "text": "ago and I was doing a sports event and",
    "start": "50559",
    "end": "53039"
  },
  {
    "text": "my watch picked up that I may have been",
    "start": "53039",
    "end": "55039"
  },
  {
    "text": "a little stressed so I'm hoping this",
    "start": "55039",
    "end": "57199"
  },
  {
    "text": "talk will be uh less nerve-wracking than",
    "start": "57199",
    "end": "59280"
  },
  {
    "text": "that",
    "start": "59280",
    "end": "61440"
  },
  {
    "text": "yeah and my name is Saswata Mukharji i'm",
    "start": "61440",
    "end": "64239"
  },
  {
    "text": "a senior software engineer at Red Hat",
    "start": "64239",
    "end": "66320"
  },
  {
    "text": "where I work on monitoring platforms",
    "start": "66320",
    "end": "68880"
  },
  {
    "text": "largely based around Tanus and",
    "start": "68880",
    "end": "70280"
  },
  {
    "text": "Prometheus i'm a maintainer of Tanas as",
    "start": "70280",
    "end": "72880"
  },
  {
    "text": "well and a newly minted Prometheus team",
    "start": "72880",
    "end": "75920"
  },
  {
    "text": "member i also help maintain certain",
    "start": "75920",
    "end": "78080"
  },
  {
    "text": "other um CNCF adjacent go tools and",
    "start": "78080",
    "end": "80759"
  },
  {
    "text": "libraries and you can find me as the",
    "start": "80759",
    "end": "83360"
  },
  {
    "text": "chasm code pretty much anywhere",
    "start": "83360",
    "end": "87360"
  },
  {
    "text": "um so yeah um a little bit of audience",
    "start": "87360",
    "end": "90000"
  },
  {
    "text": "participation to start which we all know",
    "start": "90000",
    "end": "91840"
  },
  {
    "text": "and love um so for Prometheus deep dive",
    "start": "91840",
    "end": "94240"
  },
  {
    "text": "talks um we like to do this fun exercise",
    "start": "94240",
    "end": "96960"
  },
  {
    "text": "um before we start so um first uh raise",
    "start": "96960",
    "end": "100400"
  },
  {
    "text": "your hands if you know what Prometheus",
    "start": "100400",
    "end": "102680"
  },
  {
    "text": "is oh very nice cool uh keep your hand",
    "start": "102680",
    "end": "106240"
  },
  {
    "text": "up if you use",
    "start": "106240",
    "end": "108439"
  },
  {
    "text": "Prometheus okay and now keep your hand",
    "start": "108439",
    "end": "110720"
  },
  {
    "text": "up if you use Prometheus at",
    "start": "110720",
    "end": "113000"
  },
  {
    "text": "scale awesome um one last question then",
    "start": "113000",
    "end": "116399"
  },
  {
    "text": "now uh put or keep your hand up if you",
    "start": "116399",
    "end": "118640"
  },
  {
    "text": "know what the plural of Prometheus",
    "start": "118640",
    "end": "122560"
  },
  {
    "text": "is awesome okay cool some real experts",
    "start": "122680",
    "end": "125600"
  },
  {
    "text": "here I see um but yeah if you didn't",
    "start": "125600",
    "end": "127600"
  },
  {
    "text": "know it's uh Promethei and there's a fun",
    "start": "127600",
    "end": "129920"
  },
  {
    "text": "talk on why um but yeah now we know the",
    "start": "129920",
    "end": "133760"
  },
  {
    "text": "plural is Prometheus uh what even is it",
    "start": "133760",
    "end": "136080"
  },
  {
    "text": "just as a bit of a recap um so it's a",
    "start": "136080",
    "end": "138879"
  },
  {
    "text": "metricbased monitoring and alerting",
    "start": "138879",
    "end": "140800"
  },
  {
    "text": "toolkit created at SoundCloud in 2012",
    "start": "140800",
    "end": "143760"
  },
  {
    "text": "and it joined the CNCF in 2016 as the",
    "start": "143760",
    "end": "146720"
  },
  {
    "text": "second project to do so after um",
    "start": "146720",
    "end": "148840"
  },
  {
    "text": "Kubernetes if you're curious about the",
    "start": "148840",
    "end": "150959"
  },
  {
    "text": "backstory um there's a nice documentary",
    "start": "150959",
    "end": "153280"
  },
  {
    "text": "on it on YouTube which goes through its",
    "start": "153280",
    "end": "155440"
  },
  {
    "text": "inception and its journey to becoming",
    "start": "155440",
    "end": "157040"
  },
  {
    "text": "the widely used open source project it",
    "start": "157040",
    "end": "159120"
  },
  {
    "text": "is today um what Prometheus offers is a",
    "start": "159120",
    "end": "162160"
  },
  {
    "text": "rich instrumentation ecosystem data",
    "start": "162160",
    "end": "164400"
  },
  {
    "text": "collection and storage and querying",
    "start": "164400",
    "end": "166959"
  },
  {
    "text": "alerting and visualization",
    "start": "166959",
    "end": "169560"
  },
  {
    "text": "support to dive a bit deeper for data",
    "start": "169560",
    "end": "172480"
  },
  {
    "text": "collection you have exporters which",
    "start": "172480",
    "end": "174239"
  },
  {
    "text": "expose metrics in the Prometheus format",
    "start": "174239",
    "end": "176400"
  },
  {
    "text": "there are exporters for a bunch of",
    "start": "176400",
    "end": "178000"
  },
  {
    "text": "different things like databases and",
    "start": "178000",
    "end": "179760"
  },
  {
    "text": "servers and stuff and then there's some",
    "start": "179760",
    "end": "181760"
  },
  {
    "text": "software like Kubernetes that also",
    "start": "181760",
    "end": "183360"
  },
  {
    "text": "expose Prometheus metrics directly um",
    "start": "183360",
    "end": "186319"
  },
  {
    "text": "Prometheus scrapes these exporters",
    "start": "186319",
    "end": "188560"
  },
  {
    "text": "periodically pulling the metrics from",
    "start": "188560",
    "end": "190879"
  },
  {
    "text": "the exporters's endpoints and to make",
    "start": "190879",
    "end": "193360"
  },
  {
    "text": "scraping easier there's service to gut",
    "start": "193360",
    "end": "195280"
  },
  {
    "text": "discovery to automatically find the",
    "start": "195280",
    "end": "197440"
  },
  {
    "text": "endpoints to scrape um for example it",
    "start": "197440",
    "end": "200159"
  },
  {
    "text": "can query the Kubernetes API to",
    "start": "200159",
    "end": "202080"
  },
  {
    "text": "automatically discover pods uh services",
    "start": "202080",
    "end": "204800"
  },
  {
    "text": "and so on to um find the things exposing",
    "start": "204800",
    "end": "207760"
  },
  {
    "text": "metrics and then the data is uh ingested",
    "start": "207760",
    "end": "210640"
  },
  {
    "text": "and stored in a time series database",
    "start": "210640",
    "end": "212560"
  },
  {
    "text": "TSDB for short where it can then be",
    "start": "212560",
    "end": "214959"
  },
  {
    "text": "queried with the Prometheus query",
    "start": "214959",
    "end": "216799"
  },
  {
    "text": "language from QL to be visualized and",
    "start": "216799",
    "end": "219200"
  },
  {
    "text": "alerted on which is you know very",
    "start": "219200",
    "end": "221280"
  },
  {
    "text": "important for understanding your system",
    "start": "221280",
    "end": "222879"
  },
  {
    "text": "and for ensuring that production isn't",
    "start": "222879",
    "end": "224799"
  },
  {
    "text": "on fire",
    "start": "224799",
    "end": "226879"
  },
  {
    "text": "so the latest version of Prometheus 3.0",
    "start": "226879",
    "end": "230159"
  },
  {
    "text": "was released in November last year uh",
    "start": "230159",
    "end": "233040"
  },
  {
    "text": "seven years after the 2.0 release so",
    "start": "233040",
    "end": "235519"
  },
  {
    "text": "major developments include a new UI LTE",
    "start": "235519",
    "end": "239239"
  },
  {
    "text": "compatibility a new ingestion protocol",
    "start": "239239",
    "end": "241920"
  },
  {
    "text": "native histograms and some breaking",
    "start": "241920",
    "end": "243920"
  },
  {
    "text": "changes to improve querying and also to",
    "start": "243920",
    "end": "246480"
  },
  {
    "text": "remove tech debt and we'll be covering",
    "start": "246480",
    "end": "248400"
  },
  {
    "text": "these areas in the talk five months on",
    "start": "248400",
    "end": "251920"
  },
  {
    "text": "there continues to be additional updates",
    "start": "251920",
    "end": "254159"
  },
  {
    "text": "and a few minor version bumps um so in",
    "start": "254159",
    "end": "256639"
  },
  {
    "text": "this talk we'll also go through some of",
    "start": "256639",
    "end": "258079"
  },
  {
    "text": "the things that have happened since 3.0",
    "start": "258079",
    "end": "260239"
  },
  {
    "text": "as well as looking forward to the",
    "start": "260239",
    "end": "261840"
  },
  {
    "text": "exciting things happening in the",
    "start": "261840",
    "end": "265280"
  },
  {
    "text": "future so with that nice refresher on",
    "start": "265560",
    "end": "269040"
  },
  {
    "text": "Prometheus out of the way let's talk",
    "start": "269040",
    "end": "270960"
  },
  {
    "text": "about um one of the most discernable",
    "start": "270960",
    "end": "273280"
  },
  {
    "text": "changes introduced in V3 which is the",
    "start": "273280",
    "end": "275759"
  },
  {
    "text": "new UI and yeah as you can see it is",
    "start": "275759",
    "end": "279199"
  },
  {
    "text": "beautiful you can stare at it for hours",
    "start": "279199",
    "end": "282000"
  },
  {
    "text": "um which makes for a much nicer on call",
    "start": "282000",
    "end": "285280"
  },
  {
    "text": "experience for everyone so this improved",
    "start": "285280",
    "end": "287600"
  },
  {
    "text": "look and feel is the result of a large",
    "start": "287600",
    "end": "290240"
  },
  {
    "text": "stream of work undertaken by Ulius last",
    "start": "290240",
    "end": "292479"
  },
  {
    "text": "year to um modernize the Prometheus UI",
    "start": "292479",
    "end": "295680"
  },
  {
    "text": "making it less cluttered more consistent",
    "start": "295680",
    "end": "298400"
  },
  {
    "text": "and just a lot more easier to navigate",
    "start": "298400",
    "end": "301680"
  },
  {
    "text": "um to share a few technical details",
    "start": "301680",
    "end": "303440"
  },
  {
    "text": "behind the UI um it has been completely",
    "start": "303440",
    "end": "305840"
  },
  {
    "text": "rewritten using React along with the",
    "start": "305840",
    "end": "308240"
  },
  {
    "text": "mantine UI framework replacing the old",
    "start": "308240",
    "end": "311120"
  },
  {
    "text": "Bootstrap based setup um and so this new",
    "start": "311120",
    "end": "313840"
  },
  {
    "text": "stack is much more uh developer friendly",
    "start": "313840",
    "end": "316400"
  },
  {
    "text": "and modern and it also brings in some",
    "start": "316400",
    "end": "319919"
  },
  {
    "text": "powerful features um adapted from the",
    "start": "319919",
    "end": "322560"
  },
  {
    "text": "upstream prom lens project making the",
    "start": "322560",
    "end": "324479"
  },
  {
    "text": "overall experience much more um",
    "start": "324479",
    "end": "326680"
  },
  {
    "text": "intuitive so you can see uh in the new",
    "start": "326680",
    "end": "329919"
  },
  {
    "text": "UI a lot of the query panel and the",
    "start": "329919",
    "end": "332160"
  },
  {
    "text": "global options are now organized neatly",
    "start": "332160",
    "end": "334800"
  },
  {
    "text": "and um sort of hidden away making it u",
    "start": "334800",
    "end": "337600"
  },
  {
    "text": "much less cluttered and it also sports a",
    "start": "337600",
    "end": "340880"
  },
  {
    "text": "new minimalist uh color scheme for the",
    "start": "340880",
    "end": "343520"
  },
  {
    "text": "alerts and targets pages instead of what",
    "start": "343520",
    "end": "346400"
  },
  {
    "text": "was there previously which were sort of",
    "start": "346400",
    "end": "348160"
  },
  {
    "text": "like jarring bars of",
    "start": "348160",
    "end": "350520"
  },
  {
    "text": "colors um another one of the standout",
    "start": "350520",
    "end": "353600"
  },
  {
    "text": "features is um adapted from prom lens",
    "start": "353600",
    "end": "356320"
  },
  {
    "text": "it's the new uh query explanation view",
    "start": "356320",
    "end": "359120"
  },
  {
    "text": "and so it's powered by a brand new um",
    "start": "359120",
    "end": "361440"
  },
  {
    "text": "Prometheus API endpoint that um returns",
    "start": "361440",
    "end": "364000"
  },
  {
    "text": "the abstract syntax tree of your prom",
    "start": "364000",
    "end": "366240"
  },
  {
    "text": "query and this view breaks down that",
    "start": "366240",
    "end": "369199"
  },
  {
    "text": "query tree visually and enriches it with",
    "start": "369199",
    "end": "371759"
  },
  {
    "text": "documentation in line so that um you",
    "start": "371759",
    "end": "374479"
  },
  {
    "text": "know exactly what you're querying and",
    "start": "374479",
    "end": "376000"
  },
  {
    "text": "what why you're querying um and we all",
    "start": "376000",
    "end": "378960"
  },
  {
    "text": "know um joins are also super confusing",
    "start": "378960",
    "end": "382560"
  },
  {
    "text": "at times so this query explanation view",
    "start": "382560",
    "end": "385360"
  },
  {
    "text": "um helps you too by allowing you to um",
    "start": "385360",
    "end": "388319"
  },
  {
    "text": "sort of visualize exactly how you are",
    "start": "388319",
    "end": "390800"
  },
  {
    "text": "joining series together by describing",
    "start": "390800",
    "end": "393120"
  },
  {
    "text": "the match groups on both the left and",
    "start": "393120",
    "end": "395360"
  },
  {
    "text": "right hand side um of all of your binary",
    "start": "395360",
    "end": "398639"
  },
  {
    "text": "um operators",
    "start": "398639",
    "end": "400479"
  },
  {
    "text": "now Promill syntax errors also become uh",
    "start": "400479",
    "end": "403919"
  },
  {
    "text": "kind of easy to spot and fix with this",
    "start": "403919",
    "end": "406080"
  },
  {
    "text": "explanation view as it points out the",
    "start": "406080",
    "end": "408319"
  },
  {
    "text": "issues um with detailed descriptions on",
    "start": "408319",
    "end": "411039"
  },
  {
    "text": "of every part of your query",
    "start": "411039",
    "end": "414000"
  },
  {
    "text": "and finally um you also get a completely",
    "start": "414000",
    "end": "416800"
  },
  {
    "text": "new and revamped uh query builder UI",
    "start": "416800",
    "end": "419360"
  },
  {
    "text": "that not only helps you discover your",
    "start": "419360",
    "end": "422160"
  },
  {
    "text": "metrics and all of the metadata",
    "start": "422160",
    "end": "423840"
  },
  {
    "text": "associated with it but also helps you",
    "start": "423840",
    "end": "426639"
  },
  {
    "text": "select the appropriate labels that you",
    "start": "426639",
    "end": "428400"
  },
  {
    "text": "want and build matches directly from the",
    "start": "428400",
    "end": "430880"
  },
  {
    "text": "UI itself to build your",
    "start": "430880",
    "end": "433240"
  },
  {
    "text": "query and there's still a lot of work",
    "start": "433240",
    "end": "435680"
  },
  {
    "text": "being done on the UI um we have already",
    "start": "435680",
    "end": "438240"
  },
  {
    "text": "had a bunch of work um done on the graph",
    "start": "438240",
    "end": "440479"
  },
  {
    "text": "views such as vertical grid lines and um",
    "start": "440479",
    "end": "442960"
  },
  {
    "text": "clipboard functionality um there are",
    "start": "442960",
    "end": "445360"
  },
  {
    "text": "still in progress work items uh to",
    "start": "445360",
    "end": "447520"
  },
  {
    "text": "implement UTF8 um query autocomp",
    "start": "447520",
    "end": "450479"
  },
  {
    "text": "completion as well as add the ability to",
    "start": "450479",
    "end": "452960"
  },
  {
    "text": "render um heat maps and native",
    "start": "452960",
    "end": "454840"
  },
  {
    "text": "histograms um and we would also love to",
    "start": "454840",
    "end": "457520"
  },
  {
    "text": "hear feedback from the community on how",
    "start": "457520",
    "end": "459840"
  },
  {
    "text": "using the new UI fields and what they",
    "start": "459840",
    "end": "462080"
  },
  {
    "text": "would like to um modify or change",
    "start": "462080",
    "end": "466880"
  },
  {
    "text": "um yeah next so let's talk about native",
    "start": "466880",
    "end": "469199"
  },
  {
    "text": "histograms now so historically if you",
    "start": "469199",
    "end": "472479"
  },
  {
    "text": "wanted to measure things like the",
    "start": "472479",
    "end": "473840"
  },
  {
    "text": "latency of requests in Prometheus you'd",
    "start": "473840",
    "end": "476080"
  },
  {
    "text": "use classic histograms this is where",
    "start": "476080",
    "end": "478400"
  },
  {
    "text": "each bucket in the histogram is",
    "start": "478400",
    "end": "480080"
  },
  {
    "text": "represented by a separate sample with a",
    "start": "480080",
    "end": "482479"
  },
  {
    "text": "label defining the bucket boundary and",
    "start": "482479",
    "end": "484720"
  },
  {
    "text": "additional count and some metrics um",
    "start": "484720",
    "end": "486960"
  },
  {
    "text": "samples too each of these samples is",
    "start": "486960",
    "end": "489199"
  },
  {
    "text": "just a simple float value",
    "start": "489199",
    "end": "492080"
  },
  {
    "text": "a new feature uh native histograms",
    "start": "492080",
    "end": "494800"
  },
  {
    "text": "stores the entire distribution so all",
    "start": "494800",
    "end": "497039"
  },
  {
    "text": "the bucket counts the sum and the number",
    "start": "497039",
    "end": "499039"
  },
  {
    "text": "of observations within a single complex",
    "start": "499039",
    "end": "501599"
  },
  {
    "text": "sample",
    "start": "501599",
    "end": "502759"
  },
  {
    "text": "type so native histograms are more",
    "start": "502759",
    "end": "505520"
  },
  {
    "text": "efficient and cheaper to store than",
    "start": "505520",
    "end": "507280"
  },
  {
    "text": "classic histograms unlike classic",
    "start": "507280",
    "end": "509479"
  },
  {
    "text": "histograms where you have to manually",
    "start": "509479",
    "end": "511680"
  },
  {
    "text": "define bucket boundaries native",
    "start": "511680",
    "end": "513518"
  },
  {
    "text": "histograms handle this automatically uh",
    "start": "513519",
    "end": "515760"
  },
  {
    "text": "with preset boundaries based on",
    "start": "515760",
    "end": "517279"
  },
  {
    "text": "exponential growth so you avoid possibly",
    "start": "517279",
    "end": "519839"
  },
  {
    "text": "choosing inappropriate bucket sizes for",
    "start": "519839",
    "end": "522000"
  },
  {
    "text": "your data uh you're also able to",
    "start": "522000",
    "end": "524480"
  },
  {
    "text": "configure the accuracy of native",
    "start": "524480",
    "end": "526080"
  },
  {
    "text": "histograms if you",
    "start": "526080",
    "end": "528880"
  },
  {
    "text": "want so this shows an example of quering",
    "start": "529000",
    "end": "532000"
  },
  {
    "text": "native histograms via the new Prometheus",
    "start": "532000",
    "end": "534000"
  },
  {
    "text": "UI where this graph shows the bucket",
    "start": "534000",
    "end": "536240"
  },
  {
    "text": "counts of native histograms and you can",
    "start": "536240",
    "end": "538399"
  },
  {
    "text": "see the bucket boundaries in the um",
    "start": "538399",
    "end": "540720"
  },
  {
    "text": "table",
    "start": "540720",
    "end": "542040"
  },
  {
    "text": "there and this shows quoting for the",
    "start": "542040",
    "end": "544720"
  },
  {
    "text": "50th percentile of a native histogram",
    "start": "544720",
    "end": "547040"
  },
  {
    "text": "note that there are some slight uh",
    "start": "547040",
    "end": "548880"
  },
  {
    "text": "changes to querying for native versus",
    "start": "548880",
    "end": "551120"
  },
  {
    "text": "classic histograms you don't need to",
    "start": "551120",
    "end": "553120"
  },
  {
    "text": "group by the le label when querying for",
    "start": "553120",
    "end": "555040"
  },
  {
    "text": "native histogram for",
    "start": "555040",
    "end": "557560"
  },
  {
    "text": "example so currently native histograms",
    "start": "557560",
    "end": "560160"
  },
  {
    "text": "are still experimental but it's",
    "start": "560160",
    "end": "562160"
  },
  {
    "text": "basically stable and there shouldn't be",
    "start": "562160",
    "end": "563680"
  },
  {
    "text": "any like big breaking changes since 3.0",
    "start": "563680",
    "end": "566560"
  },
  {
    "text": "there's been additional work like",
    "start": "566560",
    "end": "568080"
  },
  {
    "text": "improving how functions aggregate native",
    "start": "568080",
    "end": "570080"
  },
  {
    "text": "histograms and still to do is finalizing",
    "start": "570080",
    "end": "572720"
  },
  {
    "text": "the text format and some additional",
    "start": "572720",
    "end": "574480"
  },
  {
    "text": "refinements to edge cases",
    "start": "574480",
    "end": "577760"
  },
  {
    "text": "there's also a heat map UI in progress",
    "start": "577760",
    "end": "579680"
  },
  {
    "text": "for better visualization of the",
    "start": "579680",
    "end": "581519"
  },
  {
    "text": "distribution of",
    "start": "581519",
    "end": "583640"
  },
  {
    "text": "histograms lastly custom buckets support",
    "start": "583640",
    "end": "586480"
  },
  {
    "text": "for native histograms is in progress",
    "start": "586480",
    "end": "588640"
  },
  {
    "text": "while native histograms automatically",
    "start": "588640",
    "end": "590399"
  },
  {
    "text": "define bucket boundaries sometimes it's",
    "start": "590399",
    "end": "592720"
  },
  {
    "text": "useful to have the manual control bucket",
    "start": "592720",
    "end": "595519"
  },
  {
    "text": "boundaries instead so custom buckets",
    "start": "595519",
    "end": "598080"
  },
  {
    "text": "extends the native histogram format to",
    "start": "598080",
    "end": "600240"
  },
  {
    "text": "support this case so you can get the",
    "start": "600240",
    "end": "602080"
  },
  {
    "text": "efficiency of native histograms with the",
    "start": "602080",
    "end": "604160"
  },
  {
    "text": "explicit bucket boundary configuration",
    "start": "604160",
    "end": "606240"
  },
  {
    "text": "of classic",
    "start": "606240",
    "end": "607480"
  },
  {
    "text": "histograms these will also make it",
    "start": "607480",
    "end": "609440"
  },
  {
    "text": "easier to migrate from classic",
    "start": "609440",
    "end": "610959"
  },
  {
    "text": "histograms to native ones so with",
    "start": "610959",
    "end": "613040"
  },
  {
    "text": "scraping able to automatically convert",
    "start": "613040",
    "end": "615120"
  },
  {
    "text": "classic histograms to native ones um",
    "start": "615120",
    "end": "617680"
  },
  {
    "text": "with custom buckets and as a heads up",
    "start": "617680",
    "end": "620160"
  },
  {
    "text": "though this is feature is still very",
    "start": "620160",
    "end": "621680"
  },
  {
    "text": "experimental at the moment",
    "start": "621680",
    "end": "624560"
  },
  {
    "text": "if you're interesting if there is a",
    "start": "624560",
    "end": "626240"
  },
  {
    "text": "draft native histogram specification",
    "start": "626240",
    "end": "628079"
  },
  {
    "text": "that goes into a lot more detail about",
    "start": "628079",
    "end": "630800"
  },
  {
    "text": "native histograms and how to use them",
    "start": "630800",
    "end": "632399"
  },
  {
    "text": "and how to configure than I have",
    "start": "632399",
    "end": "636079"
  },
  {
    "text": "here um up next let's talk about one of",
    "start": "636120",
    "end": "639360"
  },
  {
    "text": "my favorite topics which is remote write",
    "start": "639360",
    "end": "642120"
  },
  {
    "text": "2.0 so if you're not really familiar",
    "start": "642120",
    "end": "645120"
  },
  {
    "text": "with um Prometheus remote write it might",
    "start": "645120",
    "end": "647440"
  },
  {
    "text": "be good to first start by explaining",
    "start": "647440",
    "end": "649279"
  },
  {
    "text": "what remote write 1.0 is or was it is a",
    "start": "649279",
    "end": "653120"
  },
  {
    "text": "remote storage protocol used by um",
    "start": "653120",
    "end": "655519"
  },
  {
    "text": "Prometheus compatible senders to send",
    "start": "655519",
    "end": "658040"
  },
  {
    "text": "realtime script metrics um to remote",
    "start": "658040",
    "end": "661120"
  },
  {
    "text": "write receivers who can then ingest that",
    "start": "661120",
    "end": "663680"
  },
  {
    "text": "in some Prometheus format um time series",
    "start": "663680",
    "end": "666240"
  },
  {
    "text": "database and so the protocol sends",
    "start": "666240",
    "end": "668640"
  },
  {
    "text": "snappy encoded protobuff messages over",
    "start": "668640",
    "end": "671240"
  },
  {
    "text": "HTTP with um backoff retry semantics",
    "start": "671240",
    "end": "674640"
  },
  {
    "text": "based on the receivers's um response",
    "start": "674640",
    "end": "676800"
  },
  {
    "text": "codes um Prometheus could send and",
    "start": "676800",
    "end": "679120"
  },
  {
    "text": "receive it and other um scalable",
    "start": "679120",
    "end": "681360"
  },
  {
    "text": "monitoring um tools like Tanos Cortex",
    "start": "681360",
    "end": "683920"
  },
  {
    "text": "Mimmer are capable of ingesting that",
    "start": "683920",
    "end": "686320"
  },
  {
    "text": "data and writing it to their own um",
    "start": "686320",
    "end": "688320"
  },
  {
    "text": "respective TSDBs and this protocol has",
    "start": "688320",
    "end": "691519"
  },
  {
    "text": "been widely adopted not only by these",
    "start": "691519",
    "end": "694240"
  },
  {
    "text": "tools but also by vendors as well and",
    "start": "694240",
    "end": "696959"
  },
  {
    "text": "has proven to be very useful for um",
    "start": "696959",
    "end": "699440"
  },
  {
    "text": "real-time metric",
    "start": "699440",
    "end": "700920"
  },
  {
    "text": "streaming the protoraph definitions for",
    "start": "700920",
    "end": "703600"
  },
  {
    "text": "remote write 1.0 into are pretty simple",
    "start": "703600",
    "end": "705360"
  },
  {
    "text": "and look something like this um and so",
    "start": "705360",
    "end": "708079"
  },
  {
    "text": "the samples being uh time stamp and",
    "start": "708079",
    "end": "710160"
  },
  {
    "text": "float value pairs that are associated",
    "start": "710160",
    "end": "712399"
  },
  {
    "text": "with a set of labels you can optionally",
    "start": "712399",
    "end": "714880"
  },
  {
    "text": "also include some metadata in separate",
    "start": "714880",
    "end": "716959"
  },
  {
    "text": "requests and the protoraphs by the way",
    "start": "716959",
    "end": "719440"
  },
  {
    "text": "are also available via um the buff",
    "start": "719440",
    "end": "722160"
  },
  {
    "text": "schema registry which that QR code is",
    "start": "722160",
    "end": "724440"
  },
  {
    "text": "for now remote write 1.0 is immensely um",
    "start": "724440",
    "end": "728399"
  },
  {
    "text": "successful but it really could be better",
    "start": "728399",
    "end": "730560"
  },
  {
    "text": "in terms of network bandwidth um and",
    "start": "730560",
    "end": "733440"
  },
  {
    "text": "efficiency as well as support for uh new",
    "start": "733440",
    "end": "736160"
  },
  {
    "text": "Prometheus features and maybe also leave",
    "start": "736160",
    "end": "738880"
  },
  {
    "text": "room for uh changes in the long run and",
    "start": "738880",
    "end": "742000"
  },
  {
    "text": "the remote right 2.0 iteration does",
    "start": "742000",
    "end": "744560"
  },
  {
    "text": "exactly uh that so as the new",
    "start": "744560",
    "end": "747920"
  },
  {
    "text": "specification dictates we have quite a",
    "start": "747920",
    "end": "750000"
  },
  {
    "text": "few changes over 1.2 it's still um",
    "start": "750000",
    "end": "752959"
  },
  {
    "text": "protobuff over HTTP but um remote 2.2 to",
    "start": "752959",
    "end": "756800"
  },
  {
    "text": "uh now sends data by string interning",
    "start": "756800",
    "end": "759519"
  },
  {
    "text": "all the various label data as well as",
    "start": "759519",
    "end": "762000"
  },
  {
    "text": "the metadata which vastly reduces um the",
    "start": "762000",
    "end": "764959"
  },
  {
    "text": "actual request size and the network",
    "start": "764959",
    "end": "767120"
  },
  {
    "text": "bandwidth costs the spec now also",
    "start": "767120",
    "end": "769440"
  },
  {
    "text": "includes fields for the um latest um",
    "start": "769440",
    "end": "772079"
  },
  {
    "text": "Prometheus features such as uh native",
    "start": "772079",
    "end": "774000"
  },
  {
    "text": "histograms and created timestamps and",
    "start": "774000",
    "end": "776560"
  },
  {
    "text": "even supports um sending relevant",
    "start": "776560",
    "end": "778880"
  },
  {
    "text": "metadata directly alongside the time",
    "start": "778880",
    "end": "781040"
  },
  {
    "text": "series furthermore we now have explicit",
    "start": "781040",
    "end": "784240"
  },
  {
    "text": "partial write handling directly within",
    "start": "784240",
    "end": "786240"
  },
  {
    "text": "the spec so receivers can respond with",
    "start": "786240",
    "end": "789200"
  },
  {
    "text": "the exact partial write error statistics",
    "start": "789200",
    "end": "791920"
  },
  {
    "text": "for different types of samples in that",
    "start": "791920",
    "end": "794320"
  },
  {
    "text": "um remote request using HTTP headers and",
    "start": "794320",
    "end": "797680"
  },
  {
    "text": "senders can use this uh can use these",
    "start": "797680",
    "end": "800160"
  },
  {
    "text": "response headers to basically log errors",
    "start": "800160",
    "end": "802320"
  },
  {
    "text": "and retry",
    "start": "802320",
    "end": "803639"
  },
  {
    "text": "accordingly as you can see in the new",
    "start": "803639",
    "end": "806079"
  },
  {
    "text": "remote right 2.0 into protobuff um there",
    "start": "806079",
    "end": "808240"
  },
  {
    "text": "is a symbols field in that request which",
    "start": "808240",
    "end": "810399"
  },
  {
    "text": "is essentially a symbols table um",
    "start": "810399",
    "end": "812720"
  },
  {
    "text": "mapping all of the labels including u",
    "start": "812720",
    "end": "815120"
  },
  {
    "text": "metadata strings and the rest of the",
    "start": "815120",
    "end": "817360"
  },
  {
    "text": "fields can then refer to the indices of",
    "start": "817360",
    "end": "819440"
  },
  {
    "text": "that symbol table um thereby leading to",
    "start": "819440",
    "end": "821519"
  },
  {
    "text": "just much smaller um request bodies and",
    "start": "821519",
    "end": "824639"
  },
  {
    "text": "um yes this pro is also available in the",
    "start": "824639",
    "end": "826959"
  },
  {
    "text": "buff schema registry now supporting",
    "start": "826959",
    "end": "829600"
  },
  {
    "text": "remote write 2.0 on your existing 1.0",
    "start": "829600",
    "end": "832480"
  },
  {
    "text": "receiver does not really mean that you",
    "start": "832480",
    "end": "834399"
  },
  {
    "text": "would need a new endpoint um as this",
    "start": "834399",
    "end": "837040"
  },
  {
    "text": "uses HTTP um content negotiation using",
    "start": "837040",
    "end": "840240"
  },
  {
    "text": "the content type header so which would",
    "start": "840240",
    "end": "842560"
  },
  {
    "text": "basically contain the fully qualified",
    "start": "842560",
    "end": "844399"
  },
  {
    "text": "name of the protobuff being used and the",
    "start": "844399",
    "end": "846639"
  },
  {
    "text": "receiver can use that to determine the",
    "start": "846639",
    "end": "849040"
  },
  {
    "text": "version of the remote write request um",
    "start": "849040",
    "end": "851760"
  },
  {
    "text": "we have also been hard at work trying to",
    "start": "851760",
    "end": "853680"
  },
  {
    "text": "make this much easier to adopt in the",
    "start": "853680",
    "end": "855440"
  },
  {
    "text": "long run and to that end we have a new",
    "start": "855440",
    "end": "857920"
  },
  {
    "text": "experimental library built directly into",
    "start": "857920",
    "end": "860639"
  },
  {
    "text": "the Prometheus client Golang library um",
    "start": "860639",
    "end": "863120"
  },
  {
    "text": "which kind of allows you to construct um",
    "start": "863120",
    "end": "865199"
  },
  {
    "text": "remote write 2.0 compatible senders and",
    "start": "865199",
    "end": "867600"
  },
  {
    "text": "receivers easily without having to",
    "start": "867600",
    "end": "870000"
  },
  {
    "text": "manually ensure compliance to the",
    "start": "870000",
    "end": "872000"
  },
  {
    "text": "complicated spec the idea is for",
    "start": "872000",
    "end": "874320"
  },
  {
    "text": "projects including Prometheus and other",
    "start": "874320",
    "end": "876480"
  },
  {
    "text": "downstream such as Thanos Cortex and",
    "start": "876480",
    "end": "878240"
  },
  {
    "text": "Memory to use this library and support",
    "start": "878240",
    "end": "880480"
  },
  {
    "text": "remote write v2 as per the benchmarking",
    "start": "880480",
    "end": "883760"
  },
  {
    "text": "done by Bartk and Callum the initial",
    "start": "883760",
    "end": "885760"
  },
  {
    "text": "authors of remote write two remote 2.0",
    "start": "885760",
    "end": "889040"
  },
  {
    "text": "during the implementation and their prom",
    "start": "889040",
    "end": "891360"
  },
  {
    "text": "talk uh you can see the efficiency gains",
    "start": "891360",
    "end": "893600"
  },
  {
    "text": "um you would have by switching to remote",
    "start": "893600",
    "end": "895839"
  },
  {
    "text": "rate v2 as well uh both on the bandwidth",
    "start": "895839",
    "end": "899279"
  },
  {
    "text": "side as well as on the serialization um",
    "start": "899279",
    "end": "901959"
  },
  {
    "text": "levels and we are only getting started",
    "start": "901959",
    "end": "904320"
  },
  {
    "text": "with this with the growing adoption of",
    "start": "904320",
    "end": "906240"
  },
  {
    "text": "remote write v2 the next step would be",
    "start": "906240",
    "end": "908240"
  },
  {
    "text": "to declare it um non-experimental",
    "start": "908240",
    "end": "911040"
  },
  {
    "text": "there's also some work going into",
    "start": "911040",
    "end": "912720"
  },
  {
    "text": "actually sending created timestamps via",
    "start": "912720",
    "end": "914880"
  },
  {
    "text": "remote write in Prometheus as well as",
    "start": "914880",
    "end": "917680"
  },
  {
    "text": "addressing certain efficiency issues",
    "start": "917680",
    "end": "919519"
  },
  {
    "text": "with metadata and maybe seeing how that",
    "start": "919519",
    "end": "922240"
  },
  {
    "text": "can evolve with type and unit metadata",
    "start": "922240",
    "end": "924480"
  },
  {
    "text": "labels and the purpose of having this",
    "start": "924480",
    "end": "926800"
  },
  {
    "text": "new um flexible protocol is so that we",
    "start": "926800",
    "end": "929680"
  },
  {
    "text": "can experiment more with various",
    "start": "929680",
    "end": "931440"
  },
  {
    "text": "compressions and maybe even formats like",
    "start": "931440",
    "end": "933279"
  },
  {
    "text": "Apache Arrow in the",
    "start": "933279",
    "end": "936720"
  },
  {
    "text": "future with open telemetry becoming",
    "start": "938600",
    "end": "941279"
  },
  {
    "text": "increasingly important um we've been",
    "start": "941279",
    "end": "943279"
  },
  {
    "text": "actively um committed to ensuring",
    "start": "943279",
    "end": "945519"
  },
  {
    "text": "Prometheus is a great backend for",
    "start": "945519",
    "end": "948199"
  },
  {
    "text": "hotel in addition to scraping a remote",
    "start": "948199",
    "end": "950720"
  },
  {
    "text": "write Prometheus now allows you to",
    "start": "950720",
    "end": "952720"
  },
  {
    "text": "directly push metrics in the OTLP format",
    "start": "952720",
    "end": "955440"
  },
  {
    "text": "to the OTLP v1 metrics endpoint",
    "start": "955440",
    "end": "958399"
  },
  {
    "text": "prometheus will then automatically",
    "start": "958399",
    "end": "960000"
  },
  {
    "text": "translate these OTLP metrics into its",
    "start": "960000",
    "end": "962320"
  },
  {
    "text": "native Prometheus format there's a guide",
    "start": "962320",
    "end": "965199"
  },
  {
    "text": "on how to configure this best practices",
    "start": "965199",
    "end": "967440"
  },
  {
    "text": "and information on resource attribute",
    "start": "967440",
    "end": "969199"
  },
  {
    "text": "handling on the Prometheus website",
    "start": "969199",
    "end": "971440"
  },
  {
    "text": "linked in this slide and one thing we've",
    "start": "971440",
    "end": "974240"
  },
  {
    "text": "seen is that out of order tends to be a",
    "start": "974240",
    "end": "976800"
  },
  {
    "text": "lot more common for data received via",
    "start": "976800",
    "end": "978480"
  },
  {
    "text": "the OTLP endpoint and as part of 3.0 out",
    "start": "978480",
    "end": "981519"
  },
  {
    "text": "of order suggest um ingestion in",
    "start": "981519",
    "end": "983440"
  },
  {
    "text": "Prometheus was marked as",
    "start": "983440",
    "end": "986120"
  },
  {
    "text": "stable also excitingly with 3.0 UTF8",
    "start": "986120",
    "end": "990000"
  },
  {
    "text": "support was enabled by default",
    "start": "990000",
    "end": "992160"
  },
  {
    "text": "previously Prometheus metric and label",
    "start": "992160",
    "end": "994480"
  },
  {
    "text": "names were limited to letters numbers",
    "start": "994480",
    "end": "996720"
  },
  {
    "text": "colons and underscores but with recent",
    "start": "996720",
    "end": "999440"
  },
  {
    "text": "changes we now support any UTF8",
    "start": "999440",
    "end": "1002199"
  },
  {
    "text": "character this makes integrating with",
    "start": "1002199",
    "end": "1004800"
  },
  {
    "text": "hotel nicer uh metrics can now preserve",
    "start": "1004800",
    "end": "1007440"
  },
  {
    "text": "dots for example which are commonly used",
    "start": "1007440",
    "end": "1009839"
  },
  {
    "text": "in hotel metric names and labels rather",
    "start": "1009839",
    "end": "1012320"
  },
  {
    "text": "than replacing them with um underscores",
    "start": "1012320",
    "end": "1015120"
  },
  {
    "text": "so there's a translation strategy",
    "start": "1015120",
    "end": "1016720"
  },
  {
    "text": "setting to configure this um UTF8",
    "start": "1016720",
    "end": "1019600"
  },
  {
    "text": "support of course also means emoji which",
    "start": "1019600",
    "end": "1021519"
  },
  {
    "text": "is personally the more exciting use case",
    "start": "1021519",
    "end": "1023120"
  },
  {
    "text": "for myself um note that there is new",
    "start": "1023120",
    "end": "1026079"
  },
  {
    "text": "syntax for UTF8 uh metric and label",
    "start": "1026079",
    "end": "1028880"
  },
  {
    "text": "names metric names with UTF8 um have to",
    "start": "1028880",
    "end": "1031839"
  },
  {
    "text": "go inside the curly braces and metric",
    "start": "1031839",
    "end": "1034798"
  },
  {
    "text": "and label names with these characters",
    "start": "1034799",
    "end": "1036480"
  },
  {
    "text": "have to be",
    "start": "1036480",
    "end": "1039079"
  },
  {
    "text": "quoted so UTF8 support is still being",
    "start": "1039079",
    "end": "1042079"
  },
  {
    "text": "refined as not all tooling supports it",
    "start": "1042079",
    "end": "1044720"
  },
  {
    "text": "or supports it consistently so for",
    "start": "1044720",
    "end": "1046720"
  },
  {
    "text": "example we are looking for volunteers to",
    "start": "1046720",
    "end": "1048880"
  },
  {
    "text": "add GTF8 support to the Prometheus Ruby",
    "start": "1048880",
    "end": "1051679"
  },
  {
    "text": "client and um there's also additional",
    "start": "1051679",
    "end": "1054400"
  },
  {
    "text": "work and fine-tuning with OTEL um we",
    "start": "1054400",
    "end": "1057520"
  },
  {
    "text": "noticed for example recently that with",
    "start": "1057520",
    "end": "1059280"
  },
  {
    "text": "UTF8 turned on the hotel collector would",
    "start": "1059280",
    "end": "1062160"
  },
  {
    "text": "be exposing metric names with",
    "start": "1062160",
    "end": "1063520"
  },
  {
    "text": "underscores but label names with the",
    "start": "1063520",
    "end": "1065160"
  },
  {
    "text": "dots um and next there's currently a",
    "start": "1065160",
    "end": "1068720"
  },
  {
    "text": "proposal for type adding type and unit",
    "start": "1068720",
    "end": "1071200"
  },
  {
    "text": "of a metric as metadata right now hotel",
    "start": "1071200",
    "end": "1074400"
  },
  {
    "text": "type and unit are just shoved into the",
    "start": "1074400",
    "end": "1075919"
  },
  {
    "text": "metric name which uh isn't something",
    "start": "1075919",
    "end": "1077679"
  },
  {
    "text": "that everyone likes um and having unit",
    "start": "1077679",
    "end": "1080559"
  },
  {
    "text": "and type C treat especially could",
    "start": "1080559",
    "end": "1082160"
  },
  {
    "text": "improve the user experience and allow",
    "start": "1082160",
    "end": "1084480"
  },
  {
    "text": "for more typware",
    "start": "1084480",
    "end": "1087000"
  },
  {
    "text": "functions to more fully support OT",
    "start": "1087000",
    "end": "1089520"
  },
  {
    "text": "metric ingestion we're also looking into",
    "start": "1089520",
    "end": "1091520"
  },
  {
    "text": "supporting delta temporarity in",
    "start": "1091520",
    "end": "1093080"
  },
  {
    "text": "Prometheus so currently there's an",
    "start": "1093080",
    "end": "1095440"
  },
  {
    "text": "experimental option to convert delta",
    "start": "1095440",
    "end": "1097679"
  },
  {
    "text": "metrics pushed through the OTLP endpoint",
    "start": "1097679",
    "end": "1099760"
  },
  {
    "text": "into cumulative ones to be stored in",
    "start": "1099760",
    "end": "1101880"
  },
  {
    "text": "Prometheus but we're also progressing",
    "start": "1101880",
    "end": "1104080"
  },
  {
    "text": "with another option that avoids the",
    "start": "1104080",
    "end": "1105919"
  },
  {
    "text": "current version altogether so native",
    "start": "1105919",
    "end": "1108480"
  },
  {
    "text": "delta support in other words",
    "start": "1108480",
    "end": "1111679"
  },
  {
    "text": "um we've gone through the major features",
    "start": "1111679",
    "end": "1113440"
  },
  {
    "text": "for 3.0 so just to wrap it up we have",
    "start": "1113440",
    "end": "1116240"
  },
  {
    "text": "this screenshot of an OTEL exponential",
    "start": "1116240",
    "end": "1118480"
  },
  {
    "text": "histogram that was ingested via the OTLP",
    "start": "1118480",
    "end": "1120720"
  },
  {
    "text": "endpoint and converted into a Prometheus",
    "start": "1120720",
    "end": "1123039"
  },
  {
    "text": "native histogram with the dots in the",
    "start": "1123039",
    "end": "1124799"
  },
  {
    "text": "name preserved and of course queried on",
    "start": "1124799",
    "end": "1126960"
  },
  {
    "text": "the new",
    "start": "1126960",
    "end": "1128840"
  },
  {
    "text": "UI and now we get to the final part of",
    "start": "1128840",
    "end": "1131600"
  },
  {
    "text": "the V3 update the breaking",
    "start": "1131600",
    "end": "1133880"
  },
  {
    "text": "changes with the new major version we",
    "start": "1133880",
    "end": "1136559"
  },
  {
    "text": "saw an opportunity to make some breaking",
    "start": "1136559",
    "end": "1138880"
  },
  {
    "text": "changes and clean up Prometheus a bit",
    "start": "1138880",
    "end": "1141200"
  },
  {
    "text": "most of these changes were focused on",
    "start": "1141200",
    "end": "1143039"
  },
  {
    "text": "housekeeping removing some old flags and",
    "start": "1143039",
    "end": "1145120"
  },
  {
    "text": "tech debt and also making a few",
    "start": "1145120",
    "end": "1147039"
  },
  {
    "text": "refinements to",
    "start": "1147039",
    "end": "1148600"
  },
  {
    "text": "PromQL i could go through everything uh",
    "start": "1148600",
    "end": "1151200"
  },
  {
    "text": "line by line um but that's probably like",
    "start": "1151200",
    "end": "1154640"
  },
  {
    "text": "not the best uh use of time for everyone",
    "start": "1154640",
    "end": "1157600"
  },
  {
    "text": "um there is a migration guide that goes",
    "start": "1157600",
    "end": "1159520"
  },
  {
    "text": "into more detail about everything if",
    "start": "1159520",
    "end": "1161360"
  },
  {
    "text": "you're looking to upgrade from V2 though",
    "start": "1161360",
    "end": "1163200"
  },
  {
    "text": "so yeah don't worry about reading all",
    "start": "1163200",
    "end": "1164559"
  },
  {
    "text": "that teeny text up there um yeah I do",
    "start": "1164559",
    "end": "1167600"
  },
  {
    "text": "have a couple of key call outs though",
    "start": "1167600",
    "end": "1169039"
  },
  {
    "text": "based on issues we've seen people hit",
    "start": "1169039",
    "end": "1171120"
  },
  {
    "text": "with the update to",
    "start": "1171120",
    "end": "1173480"
  },
  {
    "text": "V3 so the first thing is that range and",
    "start": "1173480",
    "end": "1176400"
  },
  {
    "text": "subquery selectors are now left open",
    "start": "1176400",
    "end": "1179520"
  },
  {
    "text": "previously the sample at the start time",
    "start": "1179520",
    "end": "1181679"
  },
  {
    "text": "stamp was included in the range and now",
    "start": "1181679",
    "end": "1184000"
  },
  {
    "text": "it isn't so in subqueries where the",
    "start": "1184000",
    "end": "1186480"
  },
  {
    "text": "range and the resolution are the same uh",
    "start": "1186480",
    "end": "1189360"
  },
  {
    "text": "V2 will usually return two points while",
    "start": "1189360",
    "end": "1191760"
  },
  {
    "text": "V3 only returns one so this can cause",
    "start": "1191760",
    "end": "1194559"
  },
  {
    "text": "issues if the subquery is um wrapped in",
    "start": "1194559",
    "end": "1197120"
  },
  {
    "text": "a function that needs two points like",
    "start": "1197120",
    "end": "1199679"
  },
  {
    "text": "rate uh suddenly you might just not see",
    "start": "1199679",
    "end": "1202080"
  },
  {
    "text": "any",
    "start": "1202080",
    "end": "1203320"
  },
  {
    "text": "data the second thing is when scraping",
    "start": "1203320",
    "end": "1206240"
  },
  {
    "text": "um the implicit fallback to the",
    "start": "1206240",
    "end": "1207760"
  },
  {
    "text": "Prometheus text format has been removed",
    "start": "1207760",
    "end": "1210559"
  },
  {
    "text": "so previously if the content type from",
    "start": "1210559",
    "end": "1212640"
  },
  {
    "text": "the target was missing or unrecognized",
    "start": "1212640",
    "end": "1214799"
  },
  {
    "text": "Prometheus would assume it was using the",
    "start": "1214799",
    "end": "1216559"
  },
  {
    "text": "standard Prometheus text format however",
    "start": "1216559",
    "end": "1219600"
  },
  {
    "text": "this could lead to metrics in the open",
    "start": "1219600",
    "end": "1221840"
  },
  {
    "text": "metrics formats to be misped uh without",
    "start": "1221840",
    "end": "1224559"
  },
  {
    "text": "erroring so therefore V3 will actually",
    "start": "1224559",
    "end": "1227200"
  },
  {
    "text": "error if the format is unclear um we've",
    "start": "1227200",
    "end": "1230320"
  },
  {
    "text": "seen a few instances where users start",
    "start": "1230320",
    "end": "1232080"
  },
  {
    "text": "hitting this error when upgrading to V3",
    "start": "1232080",
    "end": "1235039"
  },
  {
    "text": "and the ideal fix is to set the right",
    "start": "1235039",
    "end": "1237039"
  },
  {
    "text": "content type but there's also a fallback",
    "start": "1237039",
    "end": "1239440"
  },
  {
    "text": "scrape protocol setting you can",
    "start": "1239440",
    "end": "1240960"
  },
  {
    "text": "explicitly configure in Prometheus to go",
    "start": "1240960",
    "end": "1243200"
  },
  {
    "text": "back to the previous behavior",
    "start": "1243200",
    "end": "1246960"
  },
  {
    "text": "so we also have some interesting",
    "start": "1246960",
    "end": "1249440"
  },
  {
    "text": "community and governance updates um that",
    "start": "1249440",
    "end": "1252000"
  },
  {
    "text": "might have been shared a few times but",
    "start": "1252000",
    "end": "1253679"
  },
  {
    "text": "it's always good to reiterate these",
    "start": "1253679",
    "end": "1255440"
  },
  {
    "text": "things um so in case you missed it um",
    "start": "1255440",
    "end": "1258080"
  },
  {
    "text": "the Prometheus team recently agreed to",
    "start": "1258080",
    "end": "1260320"
  },
  {
    "text": "add 22 new members including the both of",
    "start": "1260320",
    "end": "1263120"
  },
  {
    "text": "us um a lot of them have been",
    "start": "1263120",
    "end": "1265919"
  },
  {
    "text": "instrumental in getting uh V3 out the",
    "start": "1265919",
    "end": "1268559"
  },
  {
    "text": "door some are working on things in the",
    "start": "1268559",
    "end": "1270960"
  },
  {
    "text": "ecosystem and have been working hard to",
    "start": "1270960",
    "end": "1273760"
  },
  {
    "text": "uh make sure that using Prometheus is a",
    "start": "1273760",
    "end": "1276480"
  },
  {
    "text": "holistically enjoyable experience for",
    "start": "1276480",
    "end": "1278559"
  },
  {
    "text": "everyone",
    "start": "1278559",
    "end": "1279640"
  },
  {
    "text": "involved and we are also updating our",
    "start": "1279640",
    "end": "1282320"
  },
  {
    "text": "governance model a bit so instead of",
    "start": "1282320",
    "end": "1284960"
  },
  {
    "text": "adding team members rarely and having uh",
    "start": "1284960",
    "end": "1288000"
  },
  {
    "text": "to gain consensus for all small",
    "start": "1288000",
    "end": "1290159"
  },
  {
    "text": "decisions um from that many members um",
    "start": "1290159",
    "end": "1293120"
  },
  {
    "text": "we would have a much smaller steering",
    "start": "1293120",
    "end": "1295120"
  },
  {
    "text": "committee that would make crucial",
    "start": "1295120",
    "end": "1297120"
  },
  {
    "text": "decisions about the future of the",
    "start": "1297120",
    "end": "1298799"
  },
  {
    "text": "Prometheus project and it will be a",
    "start": "1298799",
    "end": "1301440"
  },
  {
    "text": "committee that people can uh get elected",
    "start": "1301440",
    "end": "1303760"
  },
  {
    "text": "to as well as be rotated out of um",
    "start": "1303760",
    "end": "1307200"
  },
  {
    "text": "alongside that we are also introducing a",
    "start": "1307200",
    "end": "1309600"
  },
  {
    "text": "contributor uh ladder framework to",
    "start": "1309600",
    "end": "1311520"
  },
  {
    "text": "recognize um key contributors within the",
    "start": "1311520",
    "end": "1314240"
  },
  {
    "text": "community and get them involved much",
    "start": "1314240",
    "end": "1316559"
  },
  {
    "text": "quicker um so if you have ever gotten a",
    "start": "1316559",
    "end": "1319280"
  },
  {
    "text": "PR merch in any Prometheus repo",
    "start": "1319280",
    "end": "1321520"
  },
  {
    "text": "congratulations you are now a",
    "start": "1321520",
    "end": "1323400"
  },
  {
    "text": "contributor and based on um further uh",
    "start": "1323400",
    "end": "1327440"
  },
  {
    "text": "contributions going from member to",
    "start": "1327440",
    "end": "1329200"
  },
  {
    "text": "maintainer is also fully possible and",
    "start": "1329200",
    "end": "1331600"
  },
  {
    "text": "just a much less uh daunting experience",
    "start": "1331600",
    "end": "1334000"
  },
  {
    "text": "than what was there previously",
    "start": "1334000",
    "end": "1336559"
  },
  {
    "text": "and if that excites you um and you",
    "start": "1336559",
    "end": "1338799"
  },
  {
    "text": "really would love to start contributing",
    "start": "1338799",
    "end": "1340880"
  },
  {
    "text": "um and getting more involved well we",
    "start": "1340880",
    "end": "1343200"
  },
  {
    "text": "have a lot of future work ahead um so",
    "start": "1343200",
    "end": "1345360"
  },
  {
    "text": "bit of a nice segue there we have a lot",
    "start": "1345360",
    "end": "1348240"
  },
  {
    "text": "um going on in our community um and with",
    "start": "1348240",
    "end": "1350640"
  },
  {
    "text": "several different changes underway and",
    "start": "1350640",
    "end": "1352960"
  },
  {
    "text": "we would like you to be a part of that",
    "start": "1352960",
    "end": "1354720"
  },
  {
    "text": "as well especially if those changes can",
    "start": "1354720",
    "end": "1357120"
  },
  {
    "text": "help you in your context um we have",
    "start": "1357120",
    "end": "1359760"
  },
  {
    "text": "initiatives to support open telemetry",
    "start": "1359760",
    "end": "1361760"
  },
  {
    "text": "and OTLP signals in a way which makes",
    "start": "1361760",
    "end": "1364159"
  },
  {
    "text": "Prometheus the best backend for OTLP",
    "start": "1364159",
    "end": "1366799"
  },
  {
    "text": "metrics um the work going on there",
    "start": "1366799",
    "end": "1368960"
  },
  {
    "text": "involves tricky concepts around delta",
    "start": "1368960",
    "end": "1371039"
  },
  {
    "text": "temporality resource attributes even",
    "start": "1371039",
    "end": "1373360"
  },
  {
    "text": "created time stamps and so much more and",
    "start": "1373360",
    "end": "1376000"
  },
  {
    "text": "one of the key features to enable um",
    "start": "1376000",
    "end": "1377679"
  },
  {
    "text": "OTLP which was UTF8 now needs efforts on",
    "start": "1377679",
    "end": "1380799"
  },
  {
    "text": "every single um Prometheus client",
    "start": "1380799",
    "end": "1382720"
  },
  {
    "text": "library we have proposals for adding",
    "start": "1382720",
    "end": "1385200"
  },
  {
    "text": "secret providers to Prometheus or",
    "start": "1385200",
    "end": "1387360"
  },
  {
    "text": "exploring using type and units as actual",
    "start": "1387360",
    "end": "1390480"
  },
  {
    "text": "labels instead of metadata and there's a",
    "start": "1390480",
    "end": "1392720"
  },
  {
    "text": "ton of work going on behind the scenes",
    "start": "1392720",
    "end": "1394320"
  },
  {
    "text": "for native histograms around",
    "start": "1394320",
    "end": "1395840"
  },
  {
    "text": "implementing custom buckets and for",
    "start": "1395840",
    "end": "1397840"
  },
  {
    "text": "remote trade 2.0 as well and people",
    "start": "1397840",
    "end": "1400480"
  },
  {
    "text": "don't stop innovating there um we now",
    "start": "1400480",
    "end": "1402640"
  },
  {
    "text": "even have a working group to explore a t",
    "start": "1402640",
    "end": "1405120"
  },
  {
    "text": "a new TSTB format powered by Apache",
    "start": "1405120",
    "end": "1407520"
  },
  {
    "text": "paret and and the reason I mention all",
    "start": "1407520",
    "end": "1410320"
  },
  {
    "text": "of this is to highlight that there's",
    "start": "1410320",
    "end": "1412240"
  },
  {
    "text": "room for everyone to contribute um to",
    "start": "1412240",
    "end": "1414640"
  },
  {
    "text": "these in-depth topics and bring in their",
    "start": "1414640",
    "end": "1416799"
  },
  {
    "text": "fresh perspectives and experiences and",
    "start": "1416799",
    "end": "1420000"
  },
  {
    "text": "the easiest way to reach out to us is to",
    "start": "1420000",
    "end": "1422080"
  },
  {
    "text": "basically explore um the myriad of uh",
    "start": "1422080",
    "end": "1424880"
  },
  {
    "text": "channels we have on CNCF which are quite",
    "start": "1424880",
    "end": "1426960"
  },
  {
    "text": "a lot and um each has its own topics and",
    "start": "1426960",
    "end": "1431440"
  },
  {
    "text": "you can also grab us here at uh the",
    "start": "1431440",
    "end": "1433679"
  },
  {
    "text": "Prometheus booth in the project pavilion",
    "start": "1433679",
    "end": "1436080"
  },
  {
    "text": "which is the 9A uh kiosk for more",
    "start": "1436080",
    "end": "1439120"
  },
  {
    "text": "in-depth",
    "start": "1439120",
    "end": "1440600"
  },
  {
    "text": "conversation so any questions",
    "start": "1440600",
    "end": "1445240"
  },
  {
    "text": "[Applause]",
    "start": "1446650",
    "end": "1450870"
  },
  {
    "text": "[Music]",
    "start": "1450870",
    "end": "1454120"
  },
  {
    "text": "regarding PromQL oh okay uh regarding",
    "start": "1461760",
    "end": "1465880"
  },
  {
    "text": "PromQL were were you considering uh the",
    "start": "1465880",
    "end": "1470480"
  },
  {
    "text": "implementing the labels into the query",
    "start": "1470480",
    "end": "1473840"
  },
  {
    "text": "for example if I have a recording rule",
    "start": "1473840",
    "end": "1475679"
  },
  {
    "text": "and I would like to have a label with",
    "start": "1475679",
    "end": "1477840"
  },
  {
    "text": "its uh",
    "start": "1477840",
    "end": "1480200"
  },
  {
    "text": "SLO then it would much be easier for me",
    "start": "1480200",
    "end": "1483120"
  },
  {
    "text": "to just replace the um the value the",
    "start": "1483120",
    "end": "1486559"
  },
  {
    "text": "threshold with the label value instead",
    "start": "1486559",
    "end": "1488799"
  },
  {
    "text": "of you know hard- coding it",
    "start": "1488799",
    "end": "1493120"
  },
  {
    "text": "so not sure I fully understood your",
    "start": "1493120",
    "end": "1495039"
  },
  {
    "text": "question do you mean like whether you",
    "start": "1495039",
    "end": "1496880"
  },
  {
    "text": "can add a label to recording rule or I",
    "start": "1496880",
    "end": "1499440"
  },
  {
    "text": "mean uh in such case that I have a",
    "start": "1499440",
    "end": "1503760"
  },
  {
    "text": "recording rule and I have an alerting",
    "start": "1503760",
    "end": "1506080"
  },
  {
    "text": "threshold and I would like the rule to",
    "start": "1506080",
    "end": "1508799"
  },
  {
    "text": "validate as true if it extends the value",
    "start": "1508799",
    "end": "1512400"
  },
  {
    "text": "of the label were you considering such",
    "start": "1512400",
    "end": "1515279"
  },
  {
    "text": "cases",
    "start": "1515279",
    "end": "1518279"
  },
  {
    "text": "i'm not just just to understand so this",
    "start": "1519200",
    "end": "1521200"
  },
  {
    "text": "is sort of like you have the label value",
    "start": "1521200",
    "end": "1522799"
  },
  {
    "text": "as the value essentially of the the",
    "start": "1522799",
    "end": "1525200"
  },
  {
    "text": "result of the uh the metric um I I'm not",
    "start": "1525200",
    "end": "1529279"
  },
  {
    "text": "sure if there's like any active",
    "start": "1529279",
    "end": "1530559"
  },
  {
    "text": "discussion on this i think it's like",
    "start": "1530559",
    "end": "1532240"
  },
  {
    "text": "it's actually a case that I was uh",
    "start": "1532240",
    "end": "1534080"
  },
  {
    "text": "looking into a bit myself or something a",
    "start": "1534080",
    "end": "1535919"
  },
  {
    "text": "while ago but it was I guess at that",
    "start": "1535919",
    "end": "1538159"
  },
  {
    "text": "point there wasn't like enough of",
    "start": "1538159",
    "end": "1539600"
  },
  {
    "text": "incentive for us to really look at that",
    "start": "1539600",
    "end": "1542000"
  },
  {
    "text": "so I guess it's like if there's enough",
    "start": "1542000",
    "end": "1544159"
  },
  {
    "text": "use cases um for it then maybe it's",
    "start": "1544159",
    "end": "1546080"
  },
  {
    "text": "something that we we could implement but",
    "start": "1546080",
    "end": "1547760"
  },
  {
    "text": "it's not Yeah actively done",
    "start": "1547760",
    "end": "1551760"
  },
  {
    "text": "oh there's a question",
    "start": "1556000",
    "end": "1559679"
  },
  {
    "text": "there uh at the back uh well further",
    "start": "1559960",
    "end": "1562559"
  },
  {
    "text": "down there's a in the",
    "start": "1562559",
    "end": "1565919"
  },
  {
    "text": "middle just through there",
    "start": "1566840",
    "end": "1570960"
  },
  {
    "text": "thank you yeah just a question um so",
    "start": "1570960",
    "end": "1575360"
  },
  {
    "text": "both remote and hotel uh allow to push",
    "start": "1575360",
    "end": "1579120"
  },
  {
    "text": "metrics to Prometheus so is there any uh",
    "start": "1579120",
    "end": "1582960"
  },
  {
    "text": "reason to use one over the other",
    "start": "1582960",
    "end": "1587559"
  },
  {
    "text": "um really depends on what you want to",
    "start": "1588559",
    "end": "1590799"
  },
  {
    "text": "monitor i guess if your application is",
    "start": "1590799",
    "end": "1593200"
  },
  {
    "text": "instrumented with ONET it might make",
    "start": "1593200",
    "end": "1596080"
  },
  {
    "text": "sense for you to send OTLP um whereas if",
    "start": "1596080",
    "end": "1599279"
  },
  {
    "text": "it's instrumented with client Golang or",
    "start": "1599279",
    "end": "1601279"
  },
  {
    "text": "something similar it might make sense",
    "start": "1601279",
    "end": "1602640"
  },
  {
    "text": "for you to just scrape using Prometheus",
    "start": "1602640",
    "end": "1604880"
  },
  {
    "text": "or remote",
    "start": "1604880",
    "end": "1607600"
  },
  {
    "text": "write anyone",
    "start": "1611720",
    "end": "1615278"
  },
  {
    "text": "else going",
    "start": "1618039",
    "end": "1621440"
  },
  {
    "text": "once going",
    "start": "1621960",
    "end": "1624120"
  },
  {
    "text": "twice okay thank you",
    "start": "1624120",
    "end": "1626950"
  },
  {
    "text": "[Applause]",
    "start": "1626950",
    "end": "1630089"
  }
]