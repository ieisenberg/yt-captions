[
  {
    "text": "hey everybody i'm matthias loigel and",
    "start": "0",
    "end": "2240"
  },
  {
    "text": "today i want to talk to you about",
    "start": "2240",
    "end": "3840"
  },
  {
    "text": "leveraging prometheus",
    "start": "3840",
    "end": "5279"
  },
  {
    "text": "tsdb time series database for controv",
    "start": "5279",
    "end": "8639"
  },
  {
    "text": "for continuous profiling",
    "start": "8639",
    "end": "10559"
  },
  {
    "text": "i hope you're staying safe i hope you're",
    "start": "10559",
    "end": "12240"
  },
  {
    "text": "doing well and",
    "start": "12240",
    "end": "13679"
  },
  {
    "text": "yeah let's get into it",
    "start": "13679",
    "end": "17520"
  },
  {
    "text": "quickly about me i'm matthias logger as",
    "start": "17520",
    "end": "20000"
  },
  {
    "text": "i said i'm a senior software engineer at",
    "start": "20000",
    "end": "21680"
  },
  {
    "text": "polar signals i previously worked at red",
    "start": "21680",
    "end": "23920"
  },
  {
    "text": "hat",
    "start": "23920",
    "end": "24320"
  },
  {
    "text": "and grubermetic i am open source",
    "start": "24320",
    "end": "27840"
  },
  {
    "text": "maintainer with others working on",
    "start": "27840",
    "end": "29679"
  },
  {
    "text": "comprov",
    "start": "29679",
    "end": "30560"
  },
  {
    "text": "and thanos and prometheus operator and",
    "start": "30560",
    "end": "33280"
  },
  {
    "text": "your prometheus",
    "start": "33280",
    "end": "34640"
  },
  {
    "text": "among very other things and i'm also",
    "start": "34640",
    "end": "37520"
  },
  {
    "text": "organizing the",
    "start": "37520",
    "end": "38800"
  },
  {
    "text": "berlin prometheus meetup you can find me",
    "start": "38800",
    "end": "41760"
  },
  {
    "text": "as i wrote down on the left hand side",
    "start": "41760",
    "end": "44640"
  },
  {
    "text": "on social media always add metamata",
    "start": "44640",
    "end": "48800"
  },
  {
    "text": "cool so let's talk about profiling",
    "start": "49440",
    "end": "52640"
  },
  {
    "text": "profiling if you may be asking what it",
    "start": "52640",
    "end": "56079"
  },
  {
    "text": "is",
    "start": "56079",
    "end": "56800"
  },
  {
    "text": "is a form of dynamic programming",
    "start": "56800",
    "end": "59280"
  },
  {
    "text": "analysis that",
    "start": "59280",
    "end": "60320"
  },
  {
    "text": "measures for example the space",
    "start": "60320",
    "end": "63440"
  },
  {
    "text": "so the memory a program uses the time",
    "start": "63440",
    "end": "66240"
  },
  {
    "text": "complexity so the cpu",
    "start": "66240",
    "end": "68400"
  },
  {
    "text": "and the usage of instruction and the",
    "start": "68400",
    "end": "70400"
  },
  {
    "text": "frequency and duration of function calls",
    "start": "70400",
    "end": "72960"
  },
  {
    "text": "so it's fairly low level but it's not",
    "start": "72960",
    "end": "75119"
  },
  {
    "text": "all too complicated",
    "start": "75119",
    "end": "78320"
  },
  {
    "text": "being at prom con you might be asking",
    "start": "79520",
    "end": "81520"
  },
  {
    "text": "what's the difference of profiling and",
    "start": "81520",
    "end": "83360"
  },
  {
    "text": "metrics",
    "start": "83360",
    "end": "84640"
  },
  {
    "text": "so i tend to think that metrics surface",
    "start": "84640",
    "end": "87119"
  },
  {
    "text": "problems",
    "start": "87119",
    "end": "88159"
  },
  {
    "text": "so if we're thinking about the cpu",
    "start": "88159",
    "end": "91360"
  },
  {
    "text": "and we look at a graphana dashboard we",
    "start": "91360",
    "end": "93840"
  },
  {
    "text": "can see that",
    "start": "93840",
    "end": "94960"
  },
  {
    "text": "for some reason this cpu usage is higher",
    "start": "94960",
    "end": "97920"
  },
  {
    "text": "than expected",
    "start": "97920",
    "end": "99680"
  },
  {
    "text": "same for the memory we might be looking",
    "start": "99680",
    "end": "101439"
  },
  {
    "text": "at the memory of a profile",
    "start": "101439",
    "end": "103600"
  },
  {
    "text": "of a program and see that for some",
    "start": "103600",
    "end": "105920"
  },
  {
    "text": "reason",
    "start": "105920",
    "end": "107360"
  },
  {
    "text": "the usage is a lot higher than expected",
    "start": "107360",
    "end": "110880"
  },
  {
    "text": "now what we want to do instead of",
    "start": "110880",
    "end": "112960"
  },
  {
    "text": "looking at dashboards all the time",
    "start": "112960",
    "end": "114640"
  },
  {
    "text": "because sometimes we need to sleep",
    "start": "114640",
    "end": "116479"
  },
  {
    "text": "we want to alert um on on things right",
    "start": "116479",
    "end": "119600"
  },
  {
    "text": "so for the cpu we have the cpu",
    "start": "119600",
    "end": "121439"
  },
  {
    "text": "throttling high alert",
    "start": "121439",
    "end": "123280"
  },
  {
    "text": "and that actually tells you when the",
    "start": "123280",
    "end": "124799"
  },
  {
    "text": "kernel is kind of like",
    "start": "124799",
    "end": "126479"
  },
  {
    "text": "throttling a process too much and",
    "start": "126479",
    "end": "129840"
  },
  {
    "text": "it could be faster but it kind of",
    "start": "129840",
    "end": "132400"
  },
  {
    "text": "reached the limit of",
    "start": "132400",
    "end": "133920"
  },
  {
    "text": "the cpu time the process gets",
    "start": "133920",
    "end": "136959"
  },
  {
    "text": "um and then for kind of like for a more",
    "start": "136959",
    "end": "140160"
  },
  {
    "text": "symptom-based approach um",
    "start": "140160",
    "end": "142720"
  },
  {
    "text": "you might have for your service a p90",
    "start": "142720",
    "end": "145200"
  },
  {
    "text": "latency",
    "start": "145200",
    "end": "146959"
  },
  {
    "text": "requirement that like 90 of requests",
    "start": "146959",
    "end": "150160"
  },
  {
    "text": "are answered within like one second or",
    "start": "150160",
    "end": "152000"
  },
  {
    "text": "something like that",
    "start": "152000",
    "end": "153200"
  },
  {
    "text": "and if the requests overall are too slow",
    "start": "153200",
    "end": "156319"
  },
  {
    "text": "um something maybe with the cpu might be",
    "start": "156319",
    "end": "159519"
  },
  {
    "text": "happening so we",
    "start": "159519",
    "end": "160640"
  },
  {
    "text": "want to like take a look at that but we",
    "start": "160640",
    "end": "162560"
  },
  {
    "text": "can't really see what's happening",
    "start": "162560",
    "end": "164720"
  },
  {
    "text": "and then for the memory um most of the",
    "start": "164720",
    "end": "167519"
  },
  {
    "text": "time what we kind of like see",
    "start": "167519",
    "end": "169440"
  },
  {
    "text": "is that there might be a cube part crash",
    "start": "169440",
    "end": "171840"
  },
  {
    "text": "looping alert",
    "start": "171840",
    "end": "173040"
  },
  {
    "text": "and that sometimes indicates that there",
    "start": "173040",
    "end": "176000"
  },
  {
    "text": "are out of memory",
    "start": "176000",
    "end": "177360"
  },
  {
    "text": "kills happening so that kind of",
    "start": "177360",
    "end": "179599"
  },
  {
    "text": "terminates the process",
    "start": "179599",
    "end": "180959"
  },
  {
    "text": "because it has reached full memory",
    "start": "180959",
    "end": "184159"
  },
  {
    "text": "limits and yeah it tries",
    "start": "184159",
    "end": "187280"
  },
  {
    "text": "like the kernel tries to maintain the",
    "start": "187280",
    "end": "189280"
  },
  {
    "text": "overall system stability",
    "start": "189280",
    "end": "191200"
  },
  {
    "text": "and kills the process kubernetes is just",
    "start": "191200",
    "end": "194640"
  },
  {
    "text": "an example",
    "start": "194640",
    "end": "195280"
  },
  {
    "text": "same for systemd or thus so looking at",
    "start": "195280",
    "end": "198800"
  },
  {
    "text": "this metric",
    "start": "198800",
    "end": "199920"
  },
  {
    "text": "we can see that right at the time",
    "start": "199920",
    "end": "203519"
  },
  {
    "text": "roughly 21 minutes or something",
    "start": "203519",
    "end": "207599"
  },
  {
    "text": "the the process got killed and went from",
    "start": "207599",
    "end": "210959"
  },
  {
    "text": "one gigabyte of memory",
    "start": "210959",
    "end": "212560"
  },
  {
    "text": "all the way down to zero and we don't",
    "start": "212560",
    "end": "215280"
  },
  {
    "text": "really know what happened we just see",
    "start": "215280",
    "end": "217040"
  },
  {
    "text": "that something happened",
    "start": "217040",
    "end": "218080"
  },
  {
    "text": "from the metrics but what we really want",
    "start": "218080",
    "end": "220480"
  },
  {
    "text": "to know is like",
    "start": "220480",
    "end": "221680"
  },
  {
    "text": "what did the programs state look like at",
    "start": "221680",
    "end": "224159"
  },
  {
    "text": "20 minutes for example right",
    "start": "224159",
    "end": "226159"
  },
  {
    "text": "so this is what we're trying to answer",
    "start": "226159",
    "end": "228480"
  },
  {
    "text": "and",
    "start": "228480",
    "end": "229200"
  },
  {
    "text": "this in the end really is what profiles",
    "start": "229200",
    "end": "232000"
  },
  {
    "text": "give you they",
    "start": "232000",
    "end": "232799"
  },
  {
    "text": "show why something is happening like in",
    "start": "232799",
    "end": "236000"
  },
  {
    "text": "the",
    "start": "236000",
    "end": "236640"
  },
  {
    "text": "lower levels of the pro of the program",
    "start": "236640",
    "end": "239599"
  },
  {
    "text": "so",
    "start": "239599",
    "end": "240000"
  },
  {
    "text": "for cpu it shows where the process has",
    "start": "240000",
    "end": "242879"
  },
  {
    "text": "spent a lot of time",
    "start": "242879",
    "end": "244640"
  },
  {
    "text": "and kind of like shows the function um",
    "start": "244640",
    "end": "247680"
  },
  {
    "text": "oftentimes quite clearly that has spent",
    "start": "247680",
    "end": "251439"
  },
  {
    "text": "the most cpu time so most of the time is",
    "start": "251439",
    "end": "255200"
  },
  {
    "text": "like",
    "start": "255200",
    "end": "255760"
  },
  {
    "text": "a good indicator that spending some some",
    "start": "255760",
    "end": "258880"
  },
  {
    "text": "some time on that function and trying to",
    "start": "258880",
    "end": "260799"
  },
  {
    "text": "improve it is worthwhile",
    "start": "260799",
    "end": "262960"
  },
  {
    "text": "and then for the memory we have two",
    "start": "262960",
    "end": "265680"
  },
  {
    "text": "different profiles",
    "start": "265680",
    "end": "267680"
  },
  {
    "text": "so one for example is the logs profile",
    "start": "267680",
    "end": "270560"
  },
  {
    "text": "and that shows",
    "start": "270560",
    "end": "271360"
  },
  {
    "text": "how much each function overall like over",
    "start": "271360",
    "end": "274240"
  },
  {
    "text": "the entire time of the",
    "start": "274240",
    "end": "276160"
  },
  {
    "text": "of the process running has allocated so",
    "start": "276160",
    "end": "278639"
  },
  {
    "text": "which are like constantly",
    "start": "278639",
    "end": "280080"
  },
  {
    "text": "allocating memory was others that don't",
    "start": "280080",
    "end": "283199"
  },
  {
    "text": "really do that much of",
    "start": "283199",
    "end": "284479"
  },
  {
    "text": "of memory locations and then there's the",
    "start": "284479",
    "end": "286960"
  },
  {
    "text": "heap profiles that show",
    "start": "286960",
    "end": "289440"
  },
  {
    "text": "what the current what currently every",
    "start": "289440",
    "end": "291919"
  },
  {
    "text": "function",
    "start": "291919",
    "end": "293440"
  },
  {
    "text": "has allocated right so it kind of shows",
    "start": "293440",
    "end": "296000"
  },
  {
    "text": "you",
    "start": "296000",
    "end": "296960"
  },
  {
    "text": "um if you use like one gigabit",
    "start": "296960",
    "end": "300960"
  },
  {
    "text": "uh one gigabyte of memory which um",
    "start": "300960",
    "end": "304080"
  },
  {
    "text": "functions um you know have what part of",
    "start": "304080",
    "end": "307840"
  },
  {
    "text": "the memory of that",
    "start": "307840",
    "end": "308800"
  },
  {
    "text": "gigabyte allocated so that's",
    "start": "308800",
    "end": "312080"
  },
  {
    "text": "often quite useful for troubleshooting",
    "start": "312080",
    "end": "316000"
  },
  {
    "text": "so one of the projects for profiling is",
    "start": "316000",
    "end": "318320"
  },
  {
    "text": "pprof",
    "start": "318320",
    "end": "319280"
  },
  {
    "text": "came from google and it reads a",
    "start": "319280",
    "end": "321360"
  },
  {
    "text": "collection of profiling samples",
    "start": "321360",
    "end": "323360"
  },
  {
    "text": "so only only every",
    "start": "323360",
    "end": "326400"
  },
  {
    "text": "few seconds it takes snapshots of the",
    "start": "326400",
    "end": "328720"
  },
  {
    "text": "program state",
    "start": "328720",
    "end": "330080"
  },
  {
    "text": "and stores them or like we do that",
    "start": "330080",
    "end": "333120"
  },
  {
    "text": "manually right",
    "start": "333120",
    "end": "335520"
  },
  {
    "text": "and the format is described in a",
    "start": "335520",
    "end": "337880"
  },
  {
    "text": "profile.proto",
    "start": "337880",
    "end": "339680"
  },
  {
    "text": "file and i will show you that in just a",
    "start": "339680",
    "end": "342639"
  },
  {
    "text": "second",
    "start": "342639",
    "end": "343360"
  },
  {
    "text": "it uses the dot visualization tool from",
    "start": "343360",
    "end": "345840"
  },
  {
    "text": "graph wiz",
    "start": "345840",
    "end": "346880"
  },
  {
    "text": "to make beautiful graphs",
    "start": "346880",
    "end": "350160"
  },
  {
    "text": "and then we can read profiles from disk",
    "start": "350160",
    "end": "353600"
  },
  {
    "text": "from a local disk or we can pull them",
    "start": "353600",
    "end": "355840"
  },
  {
    "text": "via http and that's quite helpful if",
    "start": "355840",
    "end": "358160"
  },
  {
    "text": "the process is running somewhere else on",
    "start": "358160",
    "end": "359600"
  },
  {
    "text": "the server in the kubernetes cluster",
    "start": "359600",
    "end": "361919"
  },
  {
    "text": "whatever you have um and here we can",
    "start": "361919",
    "end": "364639"
  },
  {
    "text": "kind of do the remote troubleshooting",
    "start": "364639",
    "end": "368080"
  },
  {
    "text": "so for the proto of prof just want to",
    "start": "368080",
    "end": "371280"
  },
  {
    "text": "quickly like demystify a couple of",
    "start": "371280",
    "end": "373120"
  },
  {
    "text": "things",
    "start": "373120",
    "end": "374720"
  },
  {
    "text": "the pro 5 at the very top",
    "start": "374720",
    "end": "378080"
  },
  {
    "text": "has multiple samples and every sample",
    "start": "378080",
    "end": "381199"
  },
  {
    "text": "has a location",
    "start": "381199",
    "end": "382880"
  },
  {
    "text": "and these locations have lines and each",
    "start": "382880",
    "end": "385840"
  },
  {
    "text": "line",
    "start": "385840",
    "end": "386560"
  },
  {
    "text": "has a function",
    "start": "386560",
    "end": "389440"
  },
  {
    "text": "and to make it a bit more clear i",
    "start": "389840",
    "end": "392560"
  },
  {
    "text": "actually",
    "start": "392560",
    "end": "393120"
  },
  {
    "text": "ran a debugger and looked at a profile",
    "start": "393120",
    "end": "395600"
  },
  {
    "text": "in memory and you can see",
    "start": "395600",
    "end": "397199"
  },
  {
    "text": "this the 17th sample of the profile it",
    "start": "397199",
    "end": "400720"
  },
  {
    "text": "has a location it has a line it has a",
    "start": "400720",
    "end": "402639"
  },
  {
    "text": "function and if we look at the function",
    "start": "402639",
    "end": "405280"
  },
  {
    "text": "it has a couple of strings and one of",
    "start": "405280",
    "end": "407199"
  },
  {
    "text": "the strings is the name",
    "start": "407199",
    "end": "408560"
  },
  {
    "text": "and that says that the current sample",
    "start": "408560",
    "end": "412160"
  },
  {
    "text": "and function line etc was the bytes.make",
    "start": "412160",
    "end": "415280"
  },
  {
    "text": "slice function call",
    "start": "415280",
    "end": "416800"
  },
  {
    "text": "and further down we see that on line 229",
    "start": "416800",
    "end": "420960"
  },
  {
    "text": "this function is being called in the",
    "start": "420960",
    "end": "423280"
  },
  {
    "text": "file",
    "start": "423280",
    "end": "424240"
  },
  {
    "text": "buffer.go so that's really all there is",
    "start": "424240",
    "end": "427360"
  },
  {
    "text": "to it",
    "start": "427360",
    "end": "429199"
  },
  {
    "text": "a bit more metadata but that's like the",
    "start": "429199",
    "end": "432000"
  },
  {
    "text": "underlying format",
    "start": "432000",
    "end": "434880"
  },
  {
    "text": "um prof ships as part of each go release",
    "start": "434880",
    "end": "438319"
  },
  {
    "text": "so if you already have go it comes with",
    "start": "438319",
    "end": "440319"
  },
  {
    "text": "a go tool p",
    "start": "440319",
    "end": "441360"
  },
  {
    "text": "prof sub command and you can just start",
    "start": "441360",
    "end": "443680"
  },
  {
    "text": "using it",
    "start": "443680",
    "end": "444800"
  },
  {
    "text": "and actually many applications already",
    "start": "444800",
    "end": "446880"
  },
  {
    "text": "exposed preprof",
    "start": "446880",
    "end": "448000"
  },
  {
    "text": "one of which is prometheus um",
    "start": "448000",
    "end": "451360"
  },
  {
    "text": "for other languages um we",
    "start": "451360",
    "end": "454479"
  },
  {
    "text": "basically get cpu profiling which is",
    "start": "454479",
    "end": "457440"
  },
  {
    "text": "great",
    "start": "457440",
    "end": "457919"
  },
  {
    "text": "and some support heap profiles and not",
    "start": "457919",
    "end": "460479"
  },
  {
    "text": "so much for",
    "start": "460479",
    "end": "461360"
  },
  {
    "text": "everything else and for go we even get",
    "start": "461360",
    "end": "464800"
  },
  {
    "text": "go routine profiles and fg prof",
    "start": "464800",
    "end": "467840"
  },
  {
    "text": "is a new one outside the standard",
    "start": "467840",
    "end": "469759"
  },
  {
    "text": "library um started by someone which is",
    "start": "469759",
    "end": "472160"
  },
  {
    "text": "really cool as well i will not go into",
    "start": "472160",
    "end": "474000"
  },
  {
    "text": "this one right now",
    "start": "474000",
    "end": "476800"
  },
  {
    "text": "and then if you don't have p prof if you",
    "start": "476960",
    "end": "478879"
  },
  {
    "text": "cannot change",
    "start": "478879",
    "end": "480400"
  },
  {
    "text": "the actual program the process that you",
    "start": "480400",
    "end": "482479"
  },
  {
    "text": "want to instrument",
    "start": "482479",
    "end": "484960"
  },
  {
    "text": "there's perth and that works um without",
    "start": "484960",
    "end": "488400"
  },
  {
    "text": "like any code changes and then there's a",
    "start": "488400",
    "end": "491360"
  },
  {
    "text": "perf data converter",
    "start": "491360",
    "end": "493120"
  },
  {
    "text": "and we actually recently open sourced a",
    "start": "493120",
    "end": "495759"
  },
  {
    "text": "project called professor",
    "start": "495759",
    "end": "497599"
  },
  {
    "text": "and that converts the profiles from",
    "start": "497599",
    "end": "500000"
  },
  {
    "text": "perth",
    "start": "500000",
    "end": "500800"
  },
  {
    "text": "and into prof and then ships it to a",
    "start": "500800",
    "end": "504800"
  },
  {
    "text": "profiling back end and we still",
    "start": "504800",
    "end": "507440"
  },
  {
    "text": "recommend if you can we still recommend",
    "start": "507440",
    "end": "509599"
  },
  {
    "text": "using the native instrumentation via",
    "start": "509599",
    "end": "511520"
  },
  {
    "text": "prof",
    "start": "511520",
    "end": "512479"
  },
  {
    "text": "whenever possible this just kind of like",
    "start": "512479",
    "end": "514800"
  },
  {
    "text": "as a last resort and",
    "start": "514800",
    "end": "516479"
  },
  {
    "text": "um it was already quite quite useful and",
    "start": "516479",
    "end": "519518"
  },
  {
    "text": "quite cool to see that",
    "start": "519519",
    "end": "521120"
  },
  {
    "text": "it still works right as i said",
    "start": "521120",
    "end": "524800"
  },
  {
    "text": "prometheus is actually instrumented with",
    "start": "524800",
    "end": "527440"
  },
  {
    "text": "p prof so",
    "start": "527440",
    "end": "528560"
  },
  {
    "text": "what does it look like p prof um exposes",
    "start": "528560",
    "end": "531360"
  },
  {
    "text": "the p",
    "start": "531360",
    "end": "532399"
  },
  {
    "text": "prometheus exposes a p prof endpoint um",
    "start": "532399",
    "end": "535760"
  },
  {
    "text": "and the handler is located at this given",
    "start": "535760",
    "end": "537839"
  },
  {
    "text": "address and if you take a look at this",
    "start": "537839",
    "end": "539839"
  },
  {
    "text": "it just gives you like a super simple",
    "start": "539839",
    "end": "541760"
  },
  {
    "text": "page and you can click on these",
    "start": "541760",
    "end": "543600"
  },
  {
    "text": "um profiles but it's just a bunch of",
    "start": "543600",
    "end": "546000"
  },
  {
    "text": "text and you can't really do anything",
    "start": "546000",
    "end": "548560"
  },
  {
    "text": "really useful with it right so what we",
    "start": "548560",
    "end": "550800"
  },
  {
    "text": "actually want to do is to use the go",
    "start": "550800",
    "end": "552720"
  },
  {
    "text": "to people sub command give it that",
    "start": "552720",
    "end": "555360"
  },
  {
    "text": "address and we can pull down the profile",
    "start": "555360",
    "end": "558000"
  },
  {
    "text": "and then type for example web or svg and",
    "start": "558000",
    "end": "560959"
  },
  {
    "text": "we get",
    "start": "560959",
    "end": "561600"
  },
  {
    "text": "a graph um as i shown in the",
    "start": "561600",
    "end": "564640"
  },
  {
    "text": "in the screenshot and as you can see in",
    "start": "564640",
    "end": "567120"
  },
  {
    "text": "the profile um",
    "start": "567120",
    "end": "568320"
  },
  {
    "text": "the prom ql extrapolate rate function",
    "start": "568320",
    "end": "571680"
  },
  {
    "text": "call is quite",
    "start": "571680",
    "end": "573440"
  },
  {
    "text": "quite big and that's due to me running",
    "start": "573440",
    "end": "576080"
  },
  {
    "text": "some queries",
    "start": "576080",
    "end": "578240"
  },
  {
    "text": "in my prometheus while by pulling this",
    "start": "578240",
    "end": "581360"
  },
  {
    "text": "cpu profile and then",
    "start": "581360",
    "end": "584480"
  },
  {
    "text": "just shortly after i ran the go to a",
    "start": "584480",
    "end": "587440"
  },
  {
    "text": "prof profile with a heap endpoint",
    "start": "587440",
    "end": "590080"
  },
  {
    "text": "and unsurprisingly we can see that right",
    "start": "590080",
    "end": "593200"
  },
  {
    "text": "in the center there's the prom ql",
    "start": "593200",
    "end": "595279"
  },
  {
    "text": "evaluator taking a lot of memory and",
    "start": "595279",
    "end": "598080"
  },
  {
    "text": "that's also due to me",
    "start": "598080",
    "end": "599519"
  },
  {
    "text": "running a couple of queries i guess um",
    "start": "599519",
    "end": "602000"
  },
  {
    "text": "so just to give you a high level",
    "start": "602000",
    "end": "603519"
  },
  {
    "text": "overview",
    "start": "603519",
    "end": "605600"
  },
  {
    "text": "so after all we're here from co for",
    "start": "605600",
    "end": "607760"
  },
  {
    "text": "continuous profiling and you might be",
    "start": "607760",
    "end": "609600"
  },
  {
    "text": "asking what it is",
    "start": "609600",
    "end": "610880"
  },
  {
    "text": "so p prof creates these samples right",
    "start": "610880",
    "end": "612959"
  },
  {
    "text": "it's just these",
    "start": "612959",
    "end": "614399"
  },
  {
    "text": "small snapshots of what the state looks",
    "start": "614399",
    "end": "616959"
  },
  {
    "text": "like",
    "start": "616959",
    "end": "617600"
  },
  {
    "text": "and what we actually want to do is we",
    "start": "617600",
    "end": "619680"
  },
  {
    "text": "want to sample every so often",
    "start": "619680",
    "end": "621519"
  },
  {
    "text": "and that's what the continuous profiling",
    "start": "621519",
    "end": "623839"
  },
  {
    "text": "part really is",
    "start": "623839",
    "end": "625680"
  },
  {
    "text": "um and we want and we can do that",
    "start": "625680",
    "end": "628480"
  },
  {
    "text": "because it comes with a little overhead",
    "start": "628480",
    "end": "630800"
  },
  {
    "text": "um with because it's sampling and we",
    "start": "630800",
    "end": "633680"
  },
  {
    "text": "we've seen from like",
    "start": "633680",
    "end": "635040"
  },
  {
    "text": "point two point three percent to three",
    "start": "635040",
    "end": "637279"
  },
  {
    "text": "percent depends on the process",
    "start": "637279",
    "end": "639200"
  },
  {
    "text": "that you're profiling um what we really",
    "start": "639200",
    "end": "642720"
  },
  {
    "text": "try to do",
    "start": "642720",
    "end": "643440"
  },
  {
    "text": "is we hope to get profits right before",
    "start": "643440",
    "end": "645920"
  },
  {
    "text": "um kills",
    "start": "645920",
    "end": "646800"
  },
  {
    "text": "so out of memory kills happen so that we",
    "start": "646800",
    "end": "649519"
  },
  {
    "text": "get like the very",
    "start": "649519",
    "end": "650880"
  },
  {
    "text": "last bad state before the process was",
    "start": "650880",
    "end": "653360"
  },
  {
    "text": "killed",
    "start": "653360",
    "end": "654079"
  },
  {
    "text": "and we want to do this automatically",
    "start": "654079",
    "end": "656000"
  },
  {
    "text": "rather than by hand because we might",
    "start": "656000",
    "end": "657440"
  },
  {
    "text": "forget being in an incident etc",
    "start": "657440",
    "end": "659600"
  },
  {
    "text": "we want to be sure that we have these",
    "start": "659600",
    "end": "661600"
  },
  {
    "text": "profiles when we really need the most",
    "start": "661600",
    "end": "664800"
  },
  {
    "text": "so yeah enter continuous profiling let's",
    "start": "664800",
    "end": "666800"
  },
  {
    "text": "take a deep dive",
    "start": "666800",
    "end": "668640"
  },
  {
    "text": "as i said we want these heap logs and",
    "start": "668640",
    "end": "672000"
  },
  {
    "text": "profiles and some others like go",
    "start": "672000",
    "end": "673360"
  },
  {
    "text": "routines etc",
    "start": "673360",
    "end": "674720"
  },
  {
    "text": "and we want to like every 10 seconds in",
    "start": "674720",
    "end": "677680"
  },
  {
    "text": "this example for",
    "start": "677680",
    "end": "679040"
  },
  {
    "text": "uh for for instance um take these",
    "start": "679040",
    "end": "682240"
  },
  {
    "text": "profiles and snapshots and then we want",
    "start": "682240",
    "end": "684320"
  },
  {
    "text": "to store them and if this looks like",
    "start": "684320",
    "end": "686079"
  },
  {
    "text": "anything",
    "start": "686079",
    "end": "687760"
  },
  {
    "text": "similar that you've seen before it yeah",
    "start": "687760",
    "end": "690160"
  },
  {
    "text": "it totally looks like 10 series right",
    "start": "690160",
    "end": "692959"
  },
  {
    "text": "so yeah we create a comprov and control",
    "start": "692959",
    "end": "695440"
  },
  {
    "text": "stands on the shoulders of giants so it",
    "start": "695440",
    "end": "697839"
  },
  {
    "text": "stands on the shoulders of prometheus",
    "start": "697839",
    "end": "700560"
  },
  {
    "text": "and thanos and cortex",
    "start": "700560",
    "end": "703040"
  },
  {
    "text": "and it's really cool to see like",
    "start": "703040",
    "end": "706160"
  },
  {
    "text": "code from all these three projects come",
    "start": "706160",
    "end": "708320"
  },
  {
    "text": "together and",
    "start": "708320",
    "end": "709600"
  },
  {
    "text": "we heavily use the prometheus time",
    "start": "709600",
    "end": "712160"
  },
  {
    "text": "series database",
    "start": "712160",
    "end": "713680"
  },
  {
    "text": "um which will even dive deeper into",
    "start": "713680",
    "end": "716079"
  },
  {
    "text": "later",
    "start": "716079",
    "end": "716720"
  },
  {
    "text": "uh we use the prometheus so discovery",
    "start": "716720",
    "end": "719440"
  },
  {
    "text": "and we use the scrape manager as well so",
    "start": "719440",
    "end": "721519"
  },
  {
    "text": "all the like",
    "start": "721519",
    "end": "722320"
  },
  {
    "text": "i'm scraping samples from each process",
    "start": "722320",
    "end": "724399"
  },
  {
    "text": "is exactly the same code almost",
    "start": "724399",
    "end": "726720"
  },
  {
    "text": "as prometheus has it and then",
    "start": "726720",
    "end": "729760"
  },
  {
    "text": "we also use the prometheus remote right",
    "start": "729760",
    "end": "732800"
  },
  {
    "text": "um mechanism to whenever we",
    "start": "732800",
    "end": "736160"
  },
  {
    "text": "scrape samples we can ship them off uh",
    "start": "736160",
    "end": "739040"
  },
  {
    "text": "remotely",
    "start": "739040",
    "end": "739920"
  },
  {
    "text": "so yeah like lots of reusability",
    "start": "739920",
    "end": "744399"
  },
  {
    "text": "that we gain from from relying on on",
    "start": "744399",
    "end": "747440"
  },
  {
    "text": "these projects",
    "start": "747440",
    "end": "749760"
  },
  {
    "text": "what does controv look like it's quite a",
    "start": "749760",
    "end": "751839"
  },
  {
    "text": "simplistic ui at the moment and you can",
    "start": "751839",
    "end": "753920"
  },
  {
    "text": "see",
    "start": "753920",
    "end": "754399"
  },
  {
    "text": "you have this like query interface on on",
    "start": "754399",
    "end": "757200"
  },
  {
    "text": "the top",
    "start": "757200",
    "end": "758320"
  },
  {
    "text": "um top left where you type what kind of",
    "start": "758320",
    "end": "761279"
  },
  {
    "text": "profile you want in this case a heap",
    "start": "761279",
    "end": "762880"
  },
  {
    "text": "profile and then the job",
    "start": "762880",
    "end": "764560"
  },
  {
    "text": "um selector and then yeah you get like",
    "start": "764560",
    "end": "768000"
  },
  {
    "text": "a series of of timestamps and you can",
    "start": "768000",
    "end": "770880"
  },
  {
    "text": "click on on the individual ones and",
    "start": "770880",
    "end": "772959"
  },
  {
    "text": "you will get a profile",
    "start": "772959",
    "end": "776000"
  },
  {
    "text": "and to query um these profiles it's",
    "start": "776000",
    "end": "779279"
  },
  {
    "text": "because we use the prometheus service",
    "start": "779279",
    "end": "781440"
  },
  {
    "text": "discovery",
    "start": "781440",
    "end": "782399"
  },
  {
    "text": "it looks almost exactly the same as as",
    "start": "782399",
    "end": "784959"
  },
  {
    "text": "prometheus so on the left hand side you",
    "start": "784959",
    "end": "786639"
  },
  {
    "text": "see",
    "start": "786639",
    "end": "787040"
  },
  {
    "text": "the go mems that's heap in used bytes",
    "start": "787040",
    "end": "789920"
  },
  {
    "text": "metric",
    "start": "789920",
    "end": "790480"
  },
  {
    "text": "and we can literally copy these label",
    "start": "790480",
    "end": "792959"
  },
  {
    "text": "selectors",
    "start": "792959",
    "end": "793760"
  },
  {
    "text": "and put them in control and change the",
    "start": "793760",
    "end": "796880"
  },
  {
    "text": "metric",
    "start": "796880",
    "end": "797440"
  },
  {
    "text": "to heap so we get the heat profile and",
    "start": "797440",
    "end": "799920"
  },
  {
    "text": "then with the same label selectors we",
    "start": "799920",
    "end": "801519"
  },
  {
    "text": "get",
    "start": "801519",
    "end": "802000"
  },
  {
    "text": "a heap profile for that process and",
    "start": "802000",
    "end": "803760"
  },
  {
    "text": "that's that's really powerful and super",
    "start": "803760",
    "end": "805920"
  },
  {
    "text": "cool",
    "start": "805920",
    "end": "807360"
  },
  {
    "text": "now i want to quickly give you a demo um",
    "start": "807360",
    "end": "810240"
  },
  {
    "text": "to get a real feeling for comprov all",
    "start": "810240",
    "end": "814079"
  },
  {
    "text": "right",
    "start": "814079",
    "end": "814639"
  },
  {
    "text": "demo time so i have this example",
    "start": "814639",
    "end": "817600"
  },
  {
    "text": "application that exposes prof and does a",
    "start": "817600",
    "end": "819920"
  },
  {
    "text": "bunch of bad",
    "start": "819920",
    "end": "820800"
  },
  {
    "text": "stuff and we want to be able to profile",
    "start": "820800",
    "end": "824079"
  },
  {
    "text": "this",
    "start": "824079",
    "end": "824560"
  },
  {
    "text": "application with comprof so first of all",
    "start": "824560",
    "end": "827680"
  },
  {
    "text": "let me start our",
    "start": "827680",
    "end": "829040"
  },
  {
    "text": "application by simply running the binary",
    "start": "829040",
    "end": "832480"
  },
  {
    "text": "and that will start up yeah binds to",
    "start": "832480",
    "end": "835199"
  },
  {
    "text": "port 8080",
    "start": "835199",
    "end": "836639"
  },
  {
    "text": "and i can show you the",
    "start": "836639",
    "end": "840720"
  },
  {
    "text": "scrape conflict that i have for this",
    "start": "840720",
    "end": "843199"
  },
  {
    "text": "application for comprof",
    "start": "843199",
    "end": "844639"
  },
  {
    "text": "um it is a static config so we literally",
    "start": "844639",
    "end": "847760"
  },
  {
    "text": "just give it the localhost 8080",
    "start": "847760",
    "end": "850079"
  },
  {
    "text": "address and we want to scrape it every",
    "start": "850079",
    "end": "852399"
  },
  {
    "text": "single second",
    "start": "852399",
    "end": "853760"
  },
  {
    "text": "um and it's called app so that's pretty",
    "start": "853760",
    "end": "856880"
  },
  {
    "text": "much all there is to it",
    "start": "856880",
    "end": "858560"
  },
  {
    "text": "so let's start con prof um",
    "start": "858560",
    "end": "861600"
  },
  {
    "text": "with this config file and we want to run",
    "start": "861600",
    "end": "865199"
  },
  {
    "text": "all the components of con prof",
    "start": "865199",
    "end": "867360"
  },
  {
    "text": "at the same time so now we're starting",
    "start": "867360",
    "end": "870000"
  },
  {
    "text": "con prof",
    "start": "870000",
    "end": "870880"
  },
  {
    "text": "and this will take a second to",
    "start": "870880",
    "end": "874560"
  },
  {
    "text": "start scraping um but we can already go",
    "start": "874560",
    "end": "877519"
  },
  {
    "text": "to",
    "start": "877519",
    "end": "878959"
  },
  {
    "text": "the compromise interface on",
    "start": "878959",
    "end": "882959"
  },
  {
    "text": "ten thousand nine hundred two and yeah",
    "start": "882959",
    "end": "886160"
  },
  {
    "text": "let's just",
    "start": "886160",
    "end": "887680"
  },
  {
    "text": "search for job equals app and",
    "start": "887680",
    "end": "891440"
  },
  {
    "text": "query it and sure enough we get um",
    "start": "891440",
    "end": "894560"
  },
  {
    "text": "profiles for logs go routine heap and",
    "start": "894560",
    "end": "896800"
  },
  {
    "text": "thread create",
    "start": "896800",
    "end": "898000"
  },
  {
    "text": "so maybe let's look at heap first and we",
    "start": "898000",
    "end": "900480"
  },
  {
    "text": "can even",
    "start": "900480",
    "end": "902480"
  },
  {
    "text": "go and only show the heap metric or",
    "start": "902480",
    "end": "905279"
  },
  {
    "text": "profile",
    "start": "905279",
    "end": "906480"
  },
  {
    "text": "so yeah now we can let's click at the",
    "start": "906480",
    "end": "909680"
  },
  {
    "text": "latest one",
    "start": "909680",
    "end": "911040"
  },
  {
    "text": "and awesome we get this",
    "start": "911040",
    "end": "914320"
  },
  {
    "text": "we get the profile and we can see that",
    "start": "914320",
    "end": "918000"
  },
  {
    "text": "there",
    "start": "918000",
    "end": "918560"
  },
  {
    "text": "in the main file there's a function",
    "start": "918560",
    "end": "920880"
  },
  {
    "text": "called logmem and that has currently",
    "start": "920880",
    "end": "923360"
  },
  {
    "text": "98 allocated um",
    "start": "923360",
    "end": "927440"
  },
  {
    "text": "we can also look at a flame graph",
    "start": "927440",
    "end": "930720"
  },
  {
    "text": "which is kind of a different way of",
    "start": "930720",
    "end": "932560"
  },
  {
    "text": "looking at this so we see that",
    "start": "932560",
    "end": "934639"
  },
  {
    "text": "at the root we've allocated 88 megabytes",
    "start": "934639",
    "end": "938160"
  },
  {
    "text": "and all of these we have",
    "start": "938160",
    "end": "939600"
  },
  {
    "text": "87 for the alloc",
    "start": "939600",
    "end": "942639"
  },
  {
    "text": "mem function we can drill into different",
    "start": "942639",
    "end": "945120"
  },
  {
    "text": "ones and we can click around",
    "start": "945120",
    "end": "947199"
  },
  {
    "text": "we can go up again and that's just a",
    "start": "947199",
    "end": "949920"
  },
  {
    "text": "different way of exploring these",
    "start": "949920",
    "end": "951680"
  },
  {
    "text": "profiles",
    "start": "951680",
    "end": "952480"
  },
  {
    "text": "which oftentimes is quite quite nice as",
    "start": "952480",
    "end": "955920"
  },
  {
    "text": "well",
    "start": "955920",
    "end": "957440"
  },
  {
    "text": "so let's look at all profiles again",
    "start": "957440",
    "end": "960560"
  },
  {
    "text": "and yeah we also got cpu profiles so",
    "start": "960560",
    "end": "964160"
  },
  {
    "text": "let's take a look at this one and sure",
    "start": "964160",
    "end": "967040"
  },
  {
    "text": "enough we can see that",
    "start": "967040",
    "end": "969120"
  },
  {
    "text": "um the calculate fib",
    "start": "969120",
    "end": "972320"
  },
  {
    "text": "maybe it has something to do with",
    "start": "972320",
    "end": "973920"
  },
  {
    "text": "fibonacci um",
    "start": "973920",
    "end": "976000"
  },
  {
    "text": "took 99.63",
    "start": "976000",
    "end": "979040"
  },
  {
    "text": "of the cpu time so",
    "start": "979040",
    "end": "982079"
  },
  {
    "text": "yeah something is clearly happening here",
    "start": "982079",
    "end": "984959"
  },
  {
    "text": "and",
    "start": "984959",
    "end": "987120"
  },
  {
    "text": "we can also for this one take a look at",
    "start": "987120",
    "end": "989839"
  },
  {
    "text": "the flame graph and we can see",
    "start": "989839",
    "end": "991839"
  },
  {
    "text": "that the calculate fib is kind of like",
    "start": "991839",
    "end": "994959"
  },
  {
    "text": "um or using cpu time like this",
    "start": "994959",
    "end": "998720"
  },
  {
    "text": "and look into different sub",
    "start": "998720",
    "end": "1001839"
  },
  {
    "text": "graphs of of the cpu profile",
    "start": "1001839",
    "end": "1006320"
  },
  {
    "text": "which is pretty cool yeah so",
    "start": "1006320",
    "end": "1009519"
  },
  {
    "text": "let's take a look at the actual program",
    "start": "1009519",
    "end": "1012240"
  },
  {
    "text": "that we were",
    "start": "1012240",
    "end": "1013040"
  },
  {
    "text": "um instrumenting open up the main go",
    "start": "1013040",
    "end": "1016000"
  },
  {
    "text": "file",
    "start": "1016000",
    "end": "1016560"
  },
  {
    "text": "and yeah like right in the main go we",
    "start": "1016560",
    "end": "1019199"
  },
  {
    "text": "call",
    "start": "1019199",
    "end": "1019600"
  },
  {
    "text": "calculate fib so fibonacci and analog",
    "start": "1019600",
    "end": "1022320"
  },
  {
    "text": "memory",
    "start": "1022320",
    "end": "1023440"
  },
  {
    "text": "um so we calculate the fibonacc",
    "start": "1023440",
    "end": "1026000"
  },
  {
    "text": "fibonacci number of",
    "start": "1026000",
    "end": "1027839"
  },
  {
    "text": "very big number and that obviously takes",
    "start": "1027839",
    "end": "1029918"
  },
  {
    "text": "a lot of cpu time",
    "start": "1029919",
    "end": "1031360"
  },
  {
    "text": "and then we also allocate lots and lots",
    "start": "1031360",
    "end": "1033839"
  },
  {
    "text": "of memory",
    "start": "1033839",
    "end": "1034880"
  },
  {
    "text": "so these were the two functions that",
    "start": "1034880",
    "end": "1036558"
  },
  {
    "text": "were quite",
    "start": "1036559",
    "end": "1038558"
  },
  {
    "text": "prominently shown in our profiles",
    "start": "1038559",
    "end": "1041918"
  },
  {
    "text": "very cool all right cool so let's talk",
    "start": "1041919",
    "end": "1045120"
  },
  {
    "text": "about the control of time series",
    "start": "1045120",
    "end": "1046640"
  },
  {
    "text": "database",
    "start": "1046640",
    "end": "1048160"
  },
  {
    "text": "so because prometheus stores everything",
    "start": "1048160",
    "end": "1050720"
  },
  {
    "text": "as tuples of n64 and float64 n64 for",
    "start": "1050720",
    "end": "1054080"
  },
  {
    "text": "timestamps",
    "start": "1054080",
    "end": "1055120"
  },
  {
    "text": "and float64 for all values um",
    "start": "1055120",
    "end": "1058480"
  },
  {
    "text": "we needed to change that we needed",
    "start": "1058480",
    "end": "1060240"
  },
  {
    "text": "controv to store",
    "start": "1060240",
    "end": "1061600"
  },
  {
    "text": "in 64 and byte slice because profiles",
    "start": "1061600",
    "end": "1063840"
  },
  {
    "text": "are bite slices",
    "start": "1063840",
    "end": "1065760"
  },
  {
    "text": "and we ended up needing to change a lot",
    "start": "1065760",
    "end": "1068960"
  },
  {
    "text": "of little code in very many places and",
    "start": "1068960",
    "end": "1071520"
  },
  {
    "text": "that's what we did",
    "start": "1071520",
    "end": "1072799"
  },
  {
    "text": "to give you an example here is the tsdb",
    "start": "1072799",
    "end": "1076880"
  },
  {
    "text": "appender interface and we had to change",
    "start": "1076880",
    "end": "1079440"
  },
  {
    "text": "the append interface",
    "start": "1079440",
    "end": "1080799"
  },
  {
    "text": "um yeah to to accept n64 and float",
    "start": "1080799",
    "end": "1084640"
  },
  {
    "text": "64 to n64 and byte slice um",
    "start": "1084640",
    "end": "1088000"
  },
  {
    "text": "and super similar the tsdb iterator",
    "start": "1088000",
    "end": "1090720"
  },
  {
    "text": "interface",
    "start": "1090720",
    "end": "1091919"
  },
  {
    "text": "um whenever we like uh iterate through",
    "start": "1091919",
    "end": "1095600"
  },
  {
    "text": "all these samples",
    "start": "1095600",
    "end": "1097679"
  },
  {
    "text": "um once we actually want to retrieve a",
    "start": "1097679",
    "end": "1100000"
  },
  {
    "text": "sample",
    "start": "1100000",
    "end": "1100880"
  },
  {
    "text": "we uh return a byte slice instead of a",
    "start": "1100880",
    "end": "1103600"
  },
  {
    "text": "float64 now",
    "start": "1103600",
    "end": "1106720"
  },
  {
    "text": "all right so whenever controv scrapes",
    "start": "1107120",
    "end": "1111120"
  },
  {
    "text": "a pre-prof endpoint we get back a gzip",
    "start": "1111120",
    "end": "1114080"
  },
  {
    "text": "profile",
    "start": "1114080",
    "end": "1115200"
  },
  {
    "text": "and we need to uncompress that profile",
    "start": "1115200",
    "end": "1118080"
  },
  {
    "text": "we need to",
    "start": "1118080",
    "end": "1120000"
  },
  {
    "text": "validate and parse that profile and once",
    "start": "1120000",
    "end": "1122480"
  },
  {
    "text": "we've done that we",
    "start": "1122480",
    "end": "1123679"
  },
  {
    "text": "g-zip it again and then we store these",
    "start": "1123679",
    "end": "1125679"
  },
  {
    "text": "individual samples right",
    "start": "1125679",
    "end": "1128000"
  },
  {
    "text": "um and that's what we did and that's how",
    "start": "1128000",
    "end": "1131280"
  },
  {
    "text": "we could quickly reuse prometheus time",
    "start": "1131280",
    "end": "1133600"
  },
  {
    "text": "series database",
    "start": "1133600",
    "end": "1135120"
  },
  {
    "text": "but we wanted to improve things so as a",
    "start": "1135120",
    "end": "1137600"
  },
  {
    "text": "first step we started",
    "start": "1137600",
    "end": "1139280"
  },
  {
    "text": "um storing uncompressed profiles so we",
    "start": "1139280",
    "end": "1142559"
  },
  {
    "text": "had to",
    "start": "1142559",
    "end": "1143039"
  },
  {
    "text": "just change this one little snippet of",
    "start": "1143039",
    "end": "1145840"
  },
  {
    "text": "code",
    "start": "1145840",
    "end": "1146240"
  },
  {
    "text": "to store uncompressed profiles and",
    "start": "1146240",
    "end": "1149520"
  },
  {
    "text": "what we ended up having was all the",
    "start": "1149520",
    "end": "1152000"
  },
  {
    "text": "profiles",
    "start": "1152000",
    "end": "1153039"
  },
  {
    "text": "uh in raw and we were storing them",
    "start": "1153039",
    "end": "1157200"
  },
  {
    "text": "and it wasn't that great but it allowed",
    "start": "1157200",
    "end": "1159280"
  },
  {
    "text": "us to actually",
    "start": "1159280",
    "end": "1160799"
  },
  {
    "text": "do a next step and that is improve the",
    "start": "1160799",
    "end": "1162799"
  },
  {
    "text": "compression by grouping samples together",
    "start": "1162799",
    "end": "1165360"
  },
  {
    "text": "in",
    "start": "1165360",
    "end": "1166240"
  },
  {
    "text": "in in groups and we i think we are right",
    "start": "1166240",
    "end": "1168799"
  },
  {
    "text": "now 12",
    "start": "1168799",
    "end": "1170080"
  },
  {
    "text": "samples per group and then we take all",
    "start": "1170080",
    "end": "1172160"
  },
  {
    "text": "of these compress them and if you think",
    "start": "1172160",
    "end": "1174640"
  },
  {
    "text": "back to the format a lot of the data is",
    "start": "1174640",
    "end": "1177840"
  },
  {
    "text": "actually just",
    "start": "1177840",
    "end": "1178559"
  },
  {
    "text": "strings right um so what we can do by",
    "start": "1178559",
    "end": "1181840"
  },
  {
    "text": "grouping these samples together we can",
    "start": "1181840",
    "end": "1184160"
  },
  {
    "text": "compress these strings a lot more",
    "start": "1184160",
    "end": "1186559"
  },
  {
    "text": "efficient",
    "start": "1186559",
    "end": "1188960"
  },
  {
    "text": "and then to make this better compression",
    "start": "1188960",
    "end": "1191039"
  },
  {
    "text": "actually happen we needed to change the",
    "start": "1191039",
    "end": "1193360"
  },
  {
    "text": "underlying",
    "start": "1193360",
    "end": "1194320"
  },
  {
    "text": "time series database chunks so what we",
    "start": "1194320",
    "end": "1196799"
  },
  {
    "text": "currently have",
    "start": "1196799",
    "end": "1197760"
  },
  {
    "text": "is a bytes chunk that was always",
    "start": "1197760",
    "end": "1200799"
  },
  {
    "text": "appending tuples of timestamps and",
    "start": "1200799",
    "end": "1202960"
  },
  {
    "text": "values the timestamps",
    "start": "1202960",
    "end": "1205280"
  },
  {
    "text": "were always a double delta so super",
    "start": "1205280",
    "end": "1207679"
  },
  {
    "text": "similar to prometheus",
    "start": "1207679",
    "end": "1209360"
  },
  {
    "text": "and then the values were these",
    "start": "1209360",
    "end": "1210559"
  },
  {
    "text": "individual samples right",
    "start": "1210559",
    "end": "1212559"
  },
  {
    "text": "and if we think think how to",
    "start": "1212559",
    "end": "1215840"
  },
  {
    "text": "like kind of like iterate over these we",
    "start": "1215840",
    "end": "1217679"
  },
  {
    "text": "are always like times",
    "start": "1217679",
    "end": "1219440"
  },
  {
    "text": "0 value 0 times m1 times the",
    "start": "1219440",
    "end": "1222799"
  },
  {
    "text": "value 1 and so on and looking at our ui",
    "start": "1222799",
    "end": "1227120"
  },
  {
    "text": "oftentimes we only want to see the",
    "start": "1227120",
    "end": "1229280"
  },
  {
    "text": "timestamps",
    "start": "1229280",
    "end": "1230159"
  },
  {
    "text": "in this case we don't care about the",
    "start": "1230159",
    "end": "1231919"
  },
  {
    "text": "individual profile just yet",
    "start": "1231919",
    "end": "1234799"
  },
  {
    "text": "so like like iterating over all these",
    "start": "1234799",
    "end": "1238000"
  },
  {
    "text": "samples",
    "start": "1238000",
    "end": "1238960"
  },
  {
    "text": "is kind of a waste and to",
    "start": "1238960",
    "end": "1242000"
  },
  {
    "text": "improve things we split the bytes chunk",
    "start": "1242000",
    "end": "1244640"
  },
  {
    "text": "into a timestamp",
    "start": "1244640",
    "end": "1245679"
  },
  {
    "text": "chunk and a values chunk essentially",
    "start": "1245679",
    "end": "1248000"
  },
  {
    "text": "storing them",
    "start": "1248000",
    "end": "1248880"
  },
  {
    "text": "separately but we kept track so we",
    "start": "1248880",
    "end": "1252240"
  },
  {
    "text": "always append",
    "start": "1252240",
    "end": "1253440"
  },
  {
    "text": "together to both chunks and we always",
    "start": "1253440",
    "end": "1255760"
  },
  {
    "text": "iterate over both",
    "start": "1255760",
    "end": "1257600"
  },
  {
    "text": "if needed but now we can only",
    "start": "1257600",
    "end": "1260720"
  },
  {
    "text": "iterate over time stems and ignore the",
    "start": "1260720",
    "end": "1263440"
  },
  {
    "text": "values",
    "start": "1263440",
    "end": "1264080"
  },
  {
    "text": "the samples entirely",
    "start": "1264080",
    "end": "1267600"
  },
  {
    "text": "if we have to though we can",
    "start": "1267600",
    "end": "1270799"
  },
  {
    "text": "at the same time iterate over both",
    "start": "1270799",
    "end": "1272960"
  },
  {
    "text": "timestamps and values",
    "start": "1272960",
    "end": "1274799"
  },
  {
    "text": "to in the end get to the same place",
    "start": "1274799",
    "end": "1278159"
  },
  {
    "text": "and then return that profile",
    "start": "1278159",
    "end": "1282080"
  },
  {
    "text": "what this allows us to do is the",
    "start": "1282080",
    "end": "1284400"
  },
  {
    "text": "timestamps can be",
    "start": "1284400",
    "end": "1285919"
  },
  {
    "text": "iterated over individually they are",
    "start": "1285919",
    "end": "1288080"
  },
  {
    "text": "still using double data",
    "start": "1288080",
    "end": "1290400"
  },
  {
    "text": "to to store them and the values instead",
    "start": "1290400",
    "end": "1293840"
  },
  {
    "text": "are now grouped without the timestamps",
    "start": "1293840",
    "end": "1297120"
  },
  {
    "text": "in between and we can compress these",
    "start": "1297120",
    "end": "1299039"
  },
  {
    "text": "groups of",
    "start": "1299039",
    "end": "1299919"
  },
  {
    "text": "of profiles together and get a lot more",
    "start": "1299919",
    "end": "1303679"
  },
  {
    "text": "um",
    "start": "1303679",
    "end": "1304159"
  },
  {
    "text": "compression out of this after lots of",
    "start": "1304159",
    "end": "1307440"
  },
  {
    "text": "benchmarking we actually chose",
    "start": "1307440",
    "end": "1309600"
  },
  {
    "text": "um ted std for compression",
    "start": "1309600",
    "end": "1312640"
  },
  {
    "text": "um i don't know if that's not the right",
    "start": "1312640",
    "end": "1314559"
  },
  {
    "text": "pronunciation",
    "start": "1314559",
    "end": "1315760"
  },
  {
    "text": "but yeah like we're using ted std for",
    "start": "1315760",
    "end": "1318000"
  },
  {
    "text": "for compression now",
    "start": "1318000",
    "end": "1319360"
  },
  {
    "text": "and in the benchmarks i'm i'm seeing",
    "start": "1319360",
    "end": "1322080"
  },
  {
    "text": "like up to 50",
    "start": "1322080",
    "end": "1323360"
  },
  {
    "text": "disc savings and in other benchmarks i",
    "start": "1323360",
    "end": "1326799"
  },
  {
    "text": "think i've seen up to 75",
    "start": "1326799",
    "end": "1328880"
  },
  {
    "text": "so it's quite significant with a little",
    "start": "1328880",
    "end": "1331120"
  },
  {
    "text": "bit of overhead in memory",
    "start": "1331120",
    "end": "1333520"
  },
  {
    "text": "um but yeah like i think it's totally",
    "start": "1333520",
    "end": "1336000"
  },
  {
    "text": "worth it",
    "start": "1336000",
    "end": "1338000"
  },
  {
    "text": "so for compreh road map",
    "start": "1338000",
    "end": "1341039"
  },
  {
    "text": "obviously the ui is very basic and we",
    "start": "1341039",
    "end": "1343600"
  },
  {
    "text": "will want to",
    "start": "1343600",
    "end": "1344559"
  },
  {
    "text": "re-ramp the ui we might take ui",
    "start": "1344559",
    "end": "1347360"
  },
  {
    "text": "components from our product and",
    "start": "1347360",
    "end": "1349440"
  },
  {
    "text": "and get them into con prof um so that's",
    "start": "1349440",
    "end": "1352400"
  },
  {
    "text": "definitely something we want to do",
    "start": "1352400",
    "end": "1355120"
  },
  {
    "text": "we also think that there's more room for",
    "start": "1355120",
    "end": "1357520"
  },
  {
    "text": "improvements for the storage we can have",
    "start": "1357520",
    "end": "1359520"
  },
  {
    "text": "better compression",
    "start": "1359520",
    "end": "1360720"
  },
  {
    "text": "if you think back a lot of the actual",
    "start": "1360720",
    "end": "1363760"
  },
  {
    "text": "data are just strings that are",
    "start": "1363760",
    "end": "1366240"
  },
  {
    "text": "repeated and we already made",
    "start": "1366240",
    "end": "1369440"
  },
  {
    "text": "some significant improvements by",
    "start": "1369440",
    "end": "1372159"
  },
  {
    "text": "grouping",
    "start": "1372159",
    "end": "1372799"
  },
  {
    "text": "samples together but i think we can",
    "start": "1372799",
    "end": "1374880"
  },
  {
    "text": "still get more",
    "start": "1374880",
    "end": "1376400"
  },
  {
    "text": "um by kind of like improving the storage",
    "start": "1376400",
    "end": "1379919"
  },
  {
    "text": "and we also can be more efficient with",
    "start": "1379919",
    "end": "1381760"
  },
  {
    "text": "querying",
    "start": "1381760",
    "end": "1383679"
  },
  {
    "text": "all right that's everything um i hope",
    "start": "1383679",
    "end": "1386080"
  },
  {
    "text": "you enjoyed the",
    "start": "1386080",
    "end": "1387280"
  },
  {
    "text": "rest of prom con and yeah we have some",
    "start": "1387280",
    "end": "1390080"
  },
  {
    "text": "some nice",
    "start": "1390080",
    "end": "1391120"
  },
  {
    "text": "sauce product out which is called the",
    "start": "1391120",
    "end": "1392960"
  },
  {
    "text": "polar signals continuous profiler and",
    "start": "1392960",
    "end": "1395760"
  },
  {
    "text": "we actually take profiles and get",
    "start": "1395760",
    "end": "1399039"
  },
  {
    "text": "metrics out of them so as you can see in",
    "start": "1399039",
    "end": "1400799"
  },
  {
    "text": "the screenshot",
    "start": "1400799",
    "end": "1401760"
  },
  {
    "text": "you get like a metric for each profile",
    "start": "1401760",
    "end": "1404640"
  },
  {
    "text": "and you can see",
    "start": "1404640",
    "end": "1405679"
  },
  {
    "text": "if something is zooming you click on the",
    "start": "1405679",
    "end": "1407360"
  },
  {
    "text": "on the metric and you get a profile so",
    "start": "1407360",
    "end": "1409120"
  },
  {
    "text": "that's pretty",
    "start": "1409120",
    "end": "1410000"
  },
  {
    "text": "exciting as well so check that out let",
    "start": "1410000",
    "end": "1412159"
  },
  {
    "text": "us know if you have",
    "start": "1412159",
    "end": "1413760"
  },
  {
    "text": "any other feedback and if you want to",
    "start": "1413760",
    "end": "1416159"
  },
  {
    "text": "become",
    "start": "1416159",
    "end": "1417039"
  },
  {
    "text": "part of the comprov community reach out",
    "start": "1417039",
    "end": "1419600"
  },
  {
    "text": "as well",
    "start": "1419600",
    "end": "1420159"
  },
  {
    "text": "and yeah enjoy enjoy prom con thank you",
    "start": "1420159",
    "end": "1426400"
  }
]