[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "okay thank you all for coming I'm uh happy to see that the room is so packed",
    "start": "11679",
    "end": "16680"
  },
  {
    "text": "um if this is your first time attending the session we uh we give a similar session at every cucon uh naturally",
    "start": "16680",
    "end": "23400"
  },
  {
    "text": "there are a lot of updates to get people up to speed with uh but if this if this",
    "start": "23400",
    "end": "28760"
  },
  {
    "text": "is your first time uh um this is a pretty laid-back session um we're just going to talk a little bit about Linker",
    "start": "28760",
    "end": "34680"
  },
  {
    "text": "about service meshes what's been happening where we go in and uh I hope",
    "start": "34680",
    "end": "39719"
  },
  {
    "text": "that I'll finish in due time so at the end you can ask me a bunch of questions so please prepare questions otherwise",
    "start": "39719",
    "end": "46079"
  },
  {
    "text": "we're going to have to sit in awkward silence um I don't think I don't like that I don't I don't want to do that so",
    "start": "46079",
    "end": "52719"
  },
  {
    "text": "um yeah uh before we start just so I know what to talk about can I have a quick",
    "start": "52719",
    "end": "59039"
  },
  {
    "text": "show of hands for people who heard about service meshes before oh okay okay uh anyone here ever",
    "start": "59039",
    "end": "67640"
  },
  {
    "text": "used ISO in production all right what about linkerd where are the Linker droids all right",
    "start": "67640",
    "end": "74840"
  },
  {
    "text": "all right cool uh last question I promise and then I'll start uh anyone here ever needed to do circuit breaking",
    "start": "74840",
    "end": "82079"
  },
  {
    "text": "in production okay well you're in for a",
    "start": "82079",
    "end": "87479"
  },
  {
    "start": "87000",
    "end": "134000"
  },
  {
    "text": "treat uh little bit about myself my name is is matate I'm one of the maintainers uh for linkerd I'm a software engineer",
    "start": "87479",
    "end": "94079"
  },
  {
    "text": "at boand um I've been involved with the project for over 3 years now I started",
    "start": "94079",
    "end": "99600"
  },
  {
    "text": "as a m for a community uh program sponsored by the cncf and uh since then",
    "start": "99600",
    "end": "104799"
  },
  {
    "text": "I've been uh working on it fulltime if you want to get in contact with me after the talk is over you can uh find me on",
    "start": "104799",
    "end": "112119"
  },
  {
    "text": "Twitter uh I'm also on GitHub you can't really talk to me on GitHub but you can tag me and I'll I'll try to respond uh",
    "start": "112119",
    "end": "118600"
  },
  {
    "text": "and finally I'm also in a couple of slack workspaces uh you see the Linker slack here but I'm also in the cncf one",
    "start": "118600",
    "end": "124719"
  },
  {
    "text": "and the kubernetes one I don't think there are a lot of mate Davids around so I I think you're going to have an easy",
    "start": "124719",
    "end": "130200"
  },
  {
    "text": "time finding me uh but yeah that's a picture of me so in case it wasn't",
    "start": "130200",
    "end": "135560"
  },
  {
    "start": "134000",
    "end": "176000"
  },
  {
    "text": "obvious cool um Linker is a different kind of service mesh um it's an ultra",
    "start": "135560",
    "end": "141360"
  },
  {
    "text": "light Ultra simple U easy to use service mesh we've been in production for a large number of years ignore the slide",
    "start": "141360",
    "end": "147560"
  },
  {
    "text": "it said four plus years but it's more on the plus side uh we have a very Vibrant",
    "start": "147560",
    "end": "152599"
  },
  {
    "text": "Community um we like to help each other out the slack channel in particular has been my starting point with the",
    "start": "152599",
    "end": "158480"
  },
  {
    "text": "community and uh if you're not there I I really encourage you to join um yeah we",
    "start": "158480",
    "end": "163640"
  },
  {
    "text": "have a bunch of companies that adopted Linker uh you can see some of them here and we're also the only cncf graduated",
    "start": "163640",
    "end": "170599"
  },
  {
    "text": "service mesh but I think the takeaway from the slide is that link is a service",
    "start": "170599",
    "end": "176440"
  },
  {
    "start": "176000",
    "end": "250000"
  },
  {
    "text": "mesh so what is a service mesh I feel like for the people who didn't raise their hands uh you might think it's a",
    "start": "176440",
    "end": "183440"
  },
  {
    "text": "very complex tool um definitely in the industry it's been associated with complexity and I think that's a little",
    "start": "183440",
    "end": "189440"
  },
  {
    "text": "bit unfair um because basically a service mesh is just a platform level tool that's giving you a bunch of",
    "start": "189440",
    "end": "195519"
  },
  {
    "text": "goodies out of the box you get observability um you know you get service level golden metrics uh protocol",
    "start": "195519",
    "end": "202799"
  },
  {
    "text": "level metrics such as HTTP success rates uh you get service apologies you get a lot of reliability",
    "start": "202799",
    "end": "209000"
  },
  {
    "text": "features you know bunch of abstractions uh traffic routing traffic shaping retries timeouts load balancing and you",
    "start": "209000",
    "end": "215519"
  },
  {
    "text": "get security uh mtls out of the box authorization policies and the reason",
    "start": "215519",
    "end": "220760"
  },
  {
    "text": "why I say it's unfair to tie it down with complexity and to associate it with complexity is because all of you",
    "start": "220760",
    "end": "226000"
  },
  {
    "text": "probably at some point had to do one of these things in your applications and doing all of these things in your applications across different Stacks is",
    "start": "226000",
    "end": "233760"
  },
  {
    "text": "much more complex than just managing another tool in your production environment now Linker itself",
    "start": "233760",
    "end": "240239"
  },
  {
    "text": "as a service mesh is focused on Simplicity that's kind of a core philosophy of ours we don't want to be",
    "start": "240239",
    "end": "246079"
  },
  {
    "text": "just simple to contribute to we also want to be simple to use now the way service meshes work in",
    "start": "246079",
    "end": "254079"
  },
  {
    "start": "250000",
    "end": "339000"
  },
  {
    "text": "general oh that's a loud door um the way service meshes work in general and this",
    "start": "254079",
    "end": "259199"
  },
  {
    "text": "is not kind of exclusive to Linker um all of them kind of use a similar model",
    "start": "259199",
    "end": "264280"
  },
  {
    "text": "you have a control plane that you deploy in your kubernetes cluster and then you have a data plane um we use a side car",
    "start": "264280",
    "end": "270080"
  },
  {
    "text": "proxy for a data plane it's something that we've built purposely for linkerd um and uh it's written in Rust",
    "start": "270080",
    "end": "277960"
  },
  {
    "text": "um for those of you who don't know rust is the new up andc coming language and it has no CVS C++ oops spoilers again uh",
    "start": "277960",
    "end": "285880"
  },
  {
    "text": "it's Ultra fast I keep going to the next slide it's Ultra fast ultra light and it's built on a state-of-the-art network",
    "start": "285880",
    "end": "292720"
  },
  {
    "text": "stack so a bunch of my former and current colleagues contributed to the libraries that power Linker and power",
    "start": "292720",
    "end": "298919"
  },
  {
    "text": "much of the Ros now so Tokyo is the asynchronous runtime hyper is the HTTP",
    "start": "298919",
    "end": "304440"
  },
  {
    "text": "library that most people use and build on top of and uh Tower is a very fundamental networking library in",
    "start": "304440",
    "end": "311000"
  },
  {
    "text": "Rust now with us in our proxy uh we consider it to be philosophically",
    "start": "311000",
    "end": "316400"
  },
  {
    "text": "speaking we consider it to be an implementation detail you shouldn't have to worry about the proxy right you shouldn't have to be an expert you",
    "start": "316400",
    "end": "322440"
  },
  {
    "text": "shouldn't have to know how to write rust how rust works and how the proxy itself works because at the end of the day",
    "start": "322440",
    "end": "328720"
  },
  {
    "text": "kubernetes gives you an headaches so what we want to do with flinker is alleviate these headaches we want you to",
    "start": "328720",
    "end": "334160"
  },
  {
    "text": "actually have a good night's sleep and not be woken up at 2 a.m. to fix stuff now a common question that we used",
    "start": "334160",
    "end": "343240"
  },
  {
    "start": "339000",
    "end": "416000"
  },
  {
    "text": "to get uh now it's ebpf but I'm sure someone will ask me by the end of this presentation a common question that we",
    "start": "343240",
    "end": "349840"
  },
  {
    "text": "get is how does Linker differ from all of the other service meshes out there I think you know obviously you have to",
    "start": "349840",
    "end": "356240"
  },
  {
    "text": "take everything with a grain of salt because you're talking to a linkerd maintainer so I'm going to tell you that Linker is the best it's uh you know the",
    "start": "356240",
    "end": "363199"
  },
  {
    "text": "only choice out there um but that's not entirely true it's very dependent on your environment I would boil it down to",
    "start": "363199",
    "end": "370319"
  },
  {
    "text": "kind of the philosophical stances and approaches that we have to that we have to our applications and the way we",
    "start": "370319",
    "end": "376120"
  },
  {
    "text": "develop things and the way we want things to work for one uh service meshes that are built on Envoy cater to a wide",
    "start": "376120",
    "end": "382840"
  },
  {
    "text": "variety of use cases philosophically speaking we you know just want to stay in our Corner uh make it simpler to use",
    "start": "382840",
    "end": "389360"
  },
  {
    "text": "and a lot of the times that means not having a wide configuration area for you to mess around with I would also say",
    "start": "389360",
    "end": "395479"
  },
  {
    "text": "that linky gives you less putot guns I mean you know you don't have a lot of configuration there are less places that",
    "start": "395479",
    "end": "400840"
  },
  {
    "text": "you can mess up and we're very opinionated with the way that we do things but at the end of the day it is",
    "start": "400840",
    "end": "407080"
  },
  {
    "text": "just a philosophical approach if you need feature parody If you need a lot of feature then you need to look at something like Envoy which is a bit more",
    "start": "407080",
    "end": "412919"
  },
  {
    "text": "bloated uh we like to do things a bit different now looking back at the past",
    "start": "412919",
    "end": "420520"
  },
  {
    "start": "416000",
    "end": "568000"
  },
  {
    "text": "year um I think around this time when I gave this stock in Valencia we were around Linker 2.11 and that's when we",
    "start": "420520",
    "end": "427120"
  },
  {
    "text": "introduced authorization policies um so with authorization policies the problem is a little bit flipped on its head",
    "start": "427120",
    "end": "433160"
  },
  {
    "text": "because you don't have a lot of Primitives that you can actually leverage uh to you know build all of the",
    "start": "433160",
    "end": "438319"
  },
  {
    "text": "apis that you want to build and um basically the service object in kubernetes which is already super",
    "start": "438319",
    "end": "443840"
  },
  {
    "text": "overloaded cannot be used at all for authorization policies right there's no way for you as a server to know which",
    "start": "443840",
    "end": "449840"
  },
  {
    "text": "client connected to you and which well sorry which service the client that connected to you used or if they even",
    "start": "449840",
    "end": "455479"
  },
  {
    "text": "use the service at all right you just get a connection and based on that you want to have an expressive way and a",
    "start": "455479",
    "end": "460919"
  },
  {
    "text": "powerful way to express fine grain authorization policies so in linky 20111",
    "start": "460919",
    "end": "466319"
  },
  {
    "text": "we rolled our own crd uh server authorizations that um basically selected a bunch of ports uh on your",
    "start": "466319",
    "end": "473479"
  },
  {
    "text": "workloads and allowed you to have these fine grain authorization policies per port and as part of linker2 11 we also",
    "start": "473479",
    "end": "480159"
  },
  {
    "text": "introduced some other things such as grpc retries um when you have HTTP uh",
    "start": "480159",
    "end": "485400"
  },
  {
    "text": "post requests that have bodies uh most of them have bodies but when you uh when you have to do retries with them the",
    "start": "485400",
    "end": "492080"
  },
  {
    "text": "problem is a bit hard because you have to buffer all of these requests in memory so how do you ensure that you don't get o killed and uh for us believe",
    "start": "492080",
    "end": "498520"
  },
  {
    "text": "it or not it was even with rust that doesn't actually introduce any cves and lets you manage memory in a very",
    "start": "498520",
    "end": "504360"
  },
  {
    "text": "efficient way uh even for us it was a problem that you know we kind of banged our head against the wall for a while to fix",
    "start": "504360",
    "end": "510000"
  },
  {
    "text": "uh but in 2011 we shipped it you have a 64 KOB uh Max payload that you can uh you can put in and aside from that we",
    "start": "510000",
    "end": "517200"
  },
  {
    "text": "also made some performance adjustments we wanted the proxy footprint to be even uh smaller than it currently is and on",
    "start": "517200",
    "end": "523518"
  },
  {
    "text": "average I think we have like a 10 megabytes overhead um and we also reduced the control plane down to just",
    "start": "523519",
    "end": "529880"
  },
  {
    "text": "free deployments because we thought a lot of the stuff that we have in there is unnecessary so we we tried to slim it",
    "start": "529880",
    "end": "535120"
  },
  {
    "text": "down and and package it in a different way I think kind of looking back 201 out 11 was very feature packed uh we also",
    "start": "535120",
    "end": "542120"
  },
  {
    "text": "haded U multicluster headless support so if you want to talk to just one instance across clusters you can do that you can",
    "start": "542120",
    "end": "547720"
  },
  {
    "text": "just mirror The Headless service you can create the DNS records and it all just works uh we added fuss testing which is",
    "start": "547720",
    "end": "553279"
  },
  {
    "text": "not very much a user feature but it's kind of cool to say um and we also added CLI tab completion and uh in this very",
    "start": "553279",
    "end": "561399"
  },
  {
    "text": "detailed diagram you can see how authorization is supposed to work um",
    "start": "561399",
    "end": "566760"
  },
  {
    "text": "it's pretty self-explanatory also in linkerd 20111 we extended rust",
    "start": "566760",
    "end": "572959"
  },
  {
    "start": "568000",
    "end": "623000"
  },
  {
    "text": "to the control plane uh which was a very major milestone for us because prior to that the control plane was fully written",
    "start": "572959",
    "end": "578040"
  },
  {
    "text": "and go uh so for those of you who are kind of new to Linker uh the control plane is made up of a couple of uh",
    "start": "578040",
    "end": "584120"
  },
  {
    "text": "deployments we have a destination service that we use for service Discovery so you kind of like cach end",
    "start": "584120",
    "end": "589200"
  },
  {
    "text": "points and surp them to the proxy uh we have an identity component that lets each proxy generate its own certificate",
    "start": "589200",
    "end": "595959"
  },
  {
    "text": "uh it has a maximum bound of 24 hours but it depends on its issuer and then we have a proxy injector which is a",
    "start": "595959",
    "end": "601720"
  },
  {
    "text": "mutating web hook server that basically lets you add the sidecar proxies without having to do any work you just add an",
    "start": "601720",
    "end": "607720"
  },
  {
    "text": "annotation to your workload um and then it will get the sidecar proxy in any configuration that you set for the proxy",
    "start": "607720",
    "end": "613800"
  },
  {
    "text": "but then we also added a policy container uh and this policy container is supposed to discover the server authorizations policies that we that we",
    "start": "613800",
    "end": "622800"
  },
  {
    "text": "introduced by the way uh writing rust is always good and writing the control",
    "start": "622959",
    "end": "628640"
  },
  {
    "start": "623000",
    "end": "760000"
  },
  {
    "text": "plane in Rust and introducing morest has been a breeze for us it's been it's been pretty fun so far um but I don't want to",
    "start": "628640",
    "end": "634640"
  },
  {
    "text": "digress too much in Linker 2012 we introduced per route policy so one thing that we've noticed with authorization",
    "start": "634640",
    "end": "640320"
  },
  {
    "text": "policies in general is that okay you have them scope per Port but you want to be even finer grain than that when you",
    "start": "640320",
    "end": "646240"
  },
  {
    "text": "have liveness check when you have a Readiness check when you have maybe a metric's endpoint that you want to expose to multiple consumers having",
    "start": "646240",
    "end": "653639"
  },
  {
    "text": "something tied to a port doesn't make a lot of sense so we uh we wanted to kind",
    "start": "653639",
    "end": "658680"
  },
  {
    "text": "of you know find a different approach to this and let users have a little bit more control and you'll see that that's",
    "start": "658680",
    "end": "663880"
  },
  {
    "text": "one of the kind of trends that we're going to we want to give more and more control uh by limiting again the foot",
    "start": "663880",
    "end": "670560"
  },
  {
    "text": "guns that we also provide you uh so in 2012 we borrowed the HTTP route resource",
    "start": "670560",
    "end": "676920"
  },
  {
    "text": "from the Gateway API uh but we put it into our own group so we can you know take some things out and um you know add",
    "start": "676920",
    "end": "683639"
  },
  {
    "text": "some things and not be fully spec compliant and in this picture you can see picture diagram whatever um you can",
    "start": "683639",
    "end": "690000"
  },
  {
    "text": "see how the HTTP route resource kind of looks like you attach it to uh to a server a server is a constract that we",
    "start": "690000",
    "end": "695279"
  },
  {
    "text": "use in linkerd to say which ports a workload exposes um and then you can add",
    "start": "695279",
    "end": "700920"
  },
  {
    "text": "uh the end points that you want the request to match on and then tie an authorization policy to it so an",
    "start": "700920",
    "end": "706959"
  },
  {
    "text": "authorization policy uh when you have it like per round is associated with one or more servers and it allows you to have",
    "start": "706959",
    "end": "712760"
  },
  {
    "text": "this fine grain controlled authorization policy is also the new resource that we came up with",
    "start": "712760",
    "end": "718519"
  },
  {
    "text": "the uh replace server authorization uh because we just realized that you know we we want to do things in a more",
    "start": "718519",
    "end": "723959"
  },
  {
    "text": "kubernetes Gateway API uh way and uh I probably forgot to mention this at the",
    "start": "723959",
    "end": "729680"
  },
  {
    "text": "at the start of the slide but one good thing with the Gateway API is that it introduces this pattern called policy",
    "start": "729680",
    "end": "734839"
  },
  {
    "text": "attachment that allows you to basically create resources that configure other resources so instead of having to rely",
    "start": "734839",
    "end": "741320"
  },
  {
    "text": "on annotations which to be honest when you start using them can get a little bit disgusting in prod uh and you know",
    "start": "741320",
    "end": "747279"
  },
  {
    "text": "you don't have a lot of visibility into them um so instead of using annotations you use actual typed resources that you",
    "start": "747279",
    "end": "753920"
  },
  {
    "text": "can then attach to other resources to configure them hope that makes sense if not you know add that to the list of",
    "start": "753920",
    "end": "761120"
  },
  {
    "start": "760000",
    "end": "807000"
  },
  {
    "text": "questions cool what's new and let me check my time a little bit because I",
    "start": "761120",
    "end": "766199"
  },
  {
    "text": "also want to give a demo so all right we're good so what's new uh",
    "start": "766199",
    "end": "772600"
  },
  {
    "text": "linkerd 2.13 released two weeks ago and we've been working on it for uh for a few months um",
    "start": "772600",
    "end": "779680"
  },
  {
    "text": "we had at the moment when 22 was was releasing we had kind of like a vague idea of what we want to do um and we",
    "start": "779680",
    "end": "786079"
  },
  {
    "text": "thought about the Gateway API and we thought about the hgdp route resource and the fact that now you can have more expressive authorization policies so",
    "start": "786079",
    "end": "793240"
  },
  {
    "text": "naturally the next point for us was when are we going to extend this to client policies as well the HTTP route is a",
    "start": "793240",
    "end": "799560"
  },
  {
    "text": "great resource to kind of Leverage uh kubernetes Native Primitives to express a bunch of configuration without",
    "start": "799560",
    "end": "805639"
  },
  {
    "text": "introducing additional types and that's exactly what we did in 2.14 we uh started to move away from",
    "start": "805639",
    "end": "812320"
  },
  {
    "start": "807000",
    "end": "1066000"
  },
  {
    "text": "service profiles and uh for those of you who uh who are kind of new to linkerd service profiles are like a resource",
    "start": "812320",
    "end": "818199"
  },
  {
    "text": "that we use to basically do a bunch of uh resiliency configurations such as",
    "start": "818199",
    "end": "823279"
  },
  {
    "text": "timeouts and retries and you know you kind of scop them to a service uh and we started moving away from that because",
    "start": "823279",
    "end": "829040"
  },
  {
    "text": "instead of maintaining our own type we can maintain an HTTP route type that's shared uh with your Ingress that's you",
    "start": "829040",
    "end": "835079"
  },
  {
    "text": "know shared with other components that might be able to use it in other words we want it to kind of converge on an",
    "start": "835079",
    "end": "840800"
  },
  {
    "text": "interrupt layer uh that's going to make it easier for you to manage all of your configuration the good thing about HTTP",
    "start": "840800",
    "end": "847560"
  },
  {
    "text": "routes is that they provide you with a very native way to do Dynamic request routing so traffic splitting uh if any",
    "start": "847560",
    "end": "854120"
  },
  {
    "text": "of you ever had to do traffic splitting and you're familiar with the SMI spec the SMI spec was you know kind of",
    "start": "854120",
    "end": "859160"
  },
  {
    "text": "abandoned a year or so ago there wasn't really much happening there um but with HTTP routes you can do traffic splitting",
    "start": "859160",
    "end": "865600"
  },
  {
    "text": "you have a parent reference that you attach the route to and then back ends that you forward the request to um you",
    "start": "865600",
    "end": "871160"
  },
  {
    "text": "can also do header-based routing now with linkerd and with the HTTP route can say when a request matches a specific",
    "start": "871160",
    "end": "877440"
  },
  {
    "text": "header send it to the to to this back end so what I'm trying to say is that by",
    "start": "877440",
    "end": "883959"
  },
  {
    "text": "kind of introducing the HTTP route resource we started getting a more native approach to traffic splitting and",
    "start": "883959",
    "end": "890079"
  },
  {
    "text": "finally and this is you know I'm kind of looping in on on my question uh before I started we introduced circuit breaking",
    "start": "890079",
    "end": "897480"
  },
  {
    "text": "uh and this was a huge milestone for us you know you can hold the Applause until the end but it was a huge milestone for",
    "start": "897480",
    "end": "903160"
  },
  {
    "text": "us um because a lot of people requested it um I think when I started few years ago uh someone wrote a proposal for",
    "start": "903160",
    "end": "909800"
  },
  {
    "text": "circuit breaking and he he wasn't even the first person to do it um so we finally added in linkerd we",
    "start": "909800",
    "end": "916639"
  },
  {
    "text": "refer to it as failure acrel and uh before I kind of go deeper does anyone here not know what circuit breaking",
    "start": "916639",
    "end": "923199"
  },
  {
    "text": "actually mean I can explain it please don't be shy okay yeah we we have a few hands",
    "start": "923199",
    "end": "928360"
  },
  {
    "text": "raised so circuit breaking is this pattern for uh failure resiliency um",
    "start": "928360",
    "end": "934360"
  },
  {
    "text": "that you kind of consider in a load balancer so it it ties in with other load balancer policies um and you",
    "start": "934360",
    "end": "940279"
  },
  {
    "text": "basically say when you have a group of endpoints and one of them returns successive errors you don't want to keep",
    "start": "940279",
    "end": "946319"
  },
  {
    "text": "forwarding requests to that endpoint you want to take it out of circulation you want to let it you know cool off for a",
    "start": "946319",
    "end": "951480"
  },
  {
    "text": "bit put it in a corner send your request somewhere else and when that endpoint is ready you usually apply a back off",
    "start": "951480",
    "end": "957120"
  },
  {
    "text": "period and you kind of periodically poke it when that endpoint is ready you bring it back into the fold um so this helps",
    "start": "957120",
    "end": "963319"
  },
  {
    "text": "you manage your load um we also oops spoiler um we also introduced in a",
    "start": "963319",
    "end": "970040"
  },
  {
    "text": "proxy a few more layers of load shedding and you know inmemory buffering and uh all of the Nery stuff that people",
    "start": "970040",
    "end": "975839"
  },
  {
    "text": "usually like when when they look at the proxy code um in 2.1 we also started",
    "start": "975839",
    "end": "982360"
  },
  {
    "text": "messing around so we introduced a whole new API a whole new discovery API that's part of the policy controller uh and",
    "start": "982360",
    "end": "987720"
  },
  {
    "text": "part of what we wanted to do is is you know have a nice way to configure the proxy moving forward so circuit breaking",
    "start": "987720",
    "end": "993639"
  },
  {
    "text": "through failure acral was the first step uh but the next step will be to you know let you configure fail fast timeouts uh",
    "start": "993639",
    "end": "1000160"
  },
  {
    "text": "if you've used linkerd before you might know that fail fast timeouts are uh are an error users always run into and",
    "start": "1000160",
    "end": "1006279"
  },
  {
    "text": "they're you know it's a bit scary because out of nowhere you just get like a fail fast timeout when you cannot connect it's basically circuit breaking",
    "start": "1006279",
    "end": "1012160"
  },
  {
    "text": "at the blood bouncer level um and we're going to make it a bit more configurable we're going to let you configure the",
    "start": "1012160",
    "end": "1017399"
  },
  {
    "text": "inmemory buffer we're going to let you configure cues and and all of that stuff so again kind of offering more and more",
    "start": "1017399",
    "end": "1023279"
  },
  {
    "text": "knobs that you can use to um to make sure that you know Linker is right for you and finally as part of 2.14 we",
    "start": "1023279",
    "end": "1031160"
  },
  {
    "text": "started being involved with the uh Gateway API for mesh management and administration it's a mountainful uh",
    "start": "1031160",
    "end": "1037319"
  },
  {
    "text": "that's why we call it gamma that's you know kind of the the name we settled on",
    "start": "1037319",
    "end": "1042438"
  },
  {
    "text": "and also sounds cool easier to say um and Gamma is a subset of the Gateway API",
    "start": "1042439",
    "end": "1048160"
  },
  {
    "text": "it's a bunch of people that want to see how the Gateway API can actually um can actually apply to mesh use cases so",
    "start": "1048160",
    "end": "1055200"
  },
  {
    "text": "we're we're kind of driving together with other uh service meses in the industry we're kind of driving this effort of having more standardization",
    "start": "1055200",
    "end": "1061679"
  },
  {
    "text": "and uh figuring out what to do with the resources such as HTTP routes cool and uh now I'm going to try",
    "start": "1061679",
    "end": "1069000"
  },
  {
    "start": "1066000",
    "end": "1343000"
  },
  {
    "text": "and do a demo uh I've never done a demo during these talks so let's let's see if it goes well",
    "start": "1069000",
    "end": "1076080"
  },
  {
    "text": "um can you all see the screen can you read the text",
    "start": "1076080",
    "end": "1080840"
  },
  {
    "text": "Okay cool so I'm going to be demonstrating",
    "start": "1082200",
    "end": "1088679"
  },
  {
    "text": "how failure acrel Works uh and believe it or not when you're on stage it's much",
    "start": "1088679",
    "end": "1094960"
  },
  {
    "text": "harder to do a demo in case that was not",
    "start": "1094960",
    "end": "1100480"
  },
  {
    "text": "obvious cool so first we'll we'll have a look at the uh demo application actually",
    "start": "1100480",
    "end": "1105840"
  },
  {
    "text": "just have it running in the browser here browser here it's called faces it basically just displays um smiley faces",
    "start": "1105840",
    "end": "1113679"
  },
  {
    "text": "and uh when you see it being green it generally means the request was a s success when it's read there was a",
    "start": "1113679",
    "end": "1120679"
  },
  {
    "text": "service error uh when it's sleeping it's a timeout so on and so forth over here we see the pods that we're actually",
    "start": "1120679",
    "end": "1126440"
  },
  {
    "text": "hitting from the GUI so the GUI sends requests displays them here and then sends them to this to this pod uh and",
    "start": "1126440",
    "end": "1133559"
  },
  {
    "text": "we're going to see in just a little bit when we introduce failure how circuit breaking actually works in practice so",
    "start": "1133559",
    "end": "1140600"
  },
  {
    "text": "first we get the pods everything's running um currently failure acrel in",
    "start": "1140600",
    "end": "1145960"
  },
  {
    "text": "Linker I guess I should have talked a little bit more about this uh but yeah circuit breaking is done through failure",
    "start": "1145960",
    "end": "1151440"
  },
  {
    "text": "acrel um you can do circuit breaking in a number of different ways but we chose to go with failure acrel and right now",
    "start": "1151440",
    "end": "1157280"
  },
  {
    "text": "we only support Max failure acrel so that means Max consecutive failure for failure acrel uh that's a mouthful try",
    "start": "1157280",
    "end": "1163760"
  },
  {
    "text": "saying that three times fast um what that means basically is that you can set a a max number of requests that will",
    "start": "1163760",
    "end": "1171120"
  },
  {
    "text": "fail and when those requests fail you trip the breaker for that endpoint um what I'm showing on screen is just how",
    "start": "1171120",
    "end": "1177480"
  },
  {
    "text": "to configure the max consecutive failures but you can also set the penalty for it like what what back off",
    "start": "1177480",
    "end": "1182840"
  },
  {
    "text": "strategy do you want what Jitter Factor do you want um so to kind of demonstrate",
    "start": "1182840",
    "end": "1188679"
  },
  {
    "text": "we uh we have a the same app here another deployment uh and you'll see that it has a 100% error fraction so all",
    "start": "1188679",
    "end": "1195919"
  },
  {
    "text": "of the requests that go to this to this out deployment um are going to instantly fail so we're",
    "start": "1195919",
    "end": "1201280"
  },
  {
    "text": "going to have a service select both deployments the one that I showed you before where we actually return successes and one that only returns",
    "start": "1201280",
    "end": "1208960"
  },
  {
    "text": "failures so I'm going to apply that I'm not typing this out by the way it's a recorded demo I've learned my",
    "start": "1208960",
    "end": "1216679"
  },
  {
    "text": "lesson so now if I flip back we're going to start seeing um some of the requests",
    "start": "1216720",
    "end": "1221840"
  },
  {
    "text": "[Music] fail I'm going to wait a little bit more just so you can get the hang of it all",
    "start": "1221840",
    "end": "1229159"
  },
  {
    "text": "right that's enough cool right now um circuit",
    "start": "1229159",
    "end": "1234559"
  },
  {
    "text": "breaking is configured only through um annotations um and that's because in",
    "start": "1234559",
    "end": "1240320"
  },
  {
    "text": "order for us to provide like a more structured way uh we need to to wait a",
    "start": "1240320",
    "end": "1245360"
  },
  {
    "text": "little bit and see you know kind of how the community feels about it where we want to where we want to go with this so",
    "start": "1245360",
    "end": "1250440"
  },
  {
    "text": "you know expect Point releases and you know future releases to to expand on this a little bit more but for now annotations on a service will do so the",
    "start": "1250440",
    "end": "1258039"
  },
  {
    "text": "the basic IDE idea is you uh you have a Target you have a service and you want to say okay for this service configure",
    "start": "1258039",
    "end": "1263520"
  },
  {
    "text": "the load balancer policy configure circuit breaking we add this annotation the changes should be picked up",
    "start": "1263520",
    "end": "1270080"
  },
  {
    "text": "immediately and uh after a while we set the I think um consecutive failure limit",
    "start": "1270080",
    "end": "1276320"
  },
  {
    "text": "to like 30 there so after 30 fill requests from when I applied The annotation uh we should see the breaker",
    "start": "1276320",
    "end": "1285039"
  },
  {
    "text": "trip and the endpoint is taken out of circulation",
    "start": "1285159",
    "end": "1290360"
  },
  {
    "text": "so now it's again all successes because we don't consider the endpoint anymore occasionally um you know the backoff",
    "start": "1290360",
    "end": "1296880"
  },
  {
    "text": "period will will elapse and we're going to send a request through the request still fails so the endpoint is still",
    "start": "1296880",
    "end": "1302880"
  },
  {
    "text": "sitting in its corner and that's kind of the gist of it",
    "start": "1302880",
    "end": "1308120"
  },
  {
    "text": "sorry not it's a very anticlimactic ending to it but cool where are my slides",
    "start": "1308120",
    "end": "1317760"
  },
  {
    "text": "all right so we uh we had a look at what we've been up to in 2.14 uh I know my",
    "start": "1318919",
    "end": "1325200"
  },
  {
    "text": "voice doesn't you know uh have a lot of excitement in it but I'm super excited because it took us a lot of work to get",
    "start": "1325200",
    "end": "1330559"
  },
  {
    "text": "here so I hope all of you are excited and kind of ready to play with it but um",
    "start": "1330559",
    "end": "1335600"
  },
  {
    "text": "maybe a question that you're going to have and if you don't have it I'm going to impose it on you now is what's next like what what are we going to be",
    "start": "1335600",
    "end": "1341159"
  },
  {
    "text": "working on next we have a very ambitious plan for 2.14 and Beyond um first of all in the",
    "start": "1341159",
    "end": "1349080"
  },
  {
    "start": "1343000",
    "end": "1517000"
  },
  {
    "text": "very near future uh we need to adopt more of the EXT resources that come out of the Gateway API the Gateway API",
    "start": "1349080",
    "end": "1355360"
  },
  {
    "text": "itself has been you know seeing um a lot of you know new contributions and it's",
    "start": "1355360",
    "end": "1360760"
  },
  {
    "text": "seeing you know more of a stable it's in more stable State now uh but we uh we",
    "start": "1360760",
    "end": "1365960"
  },
  {
    "text": "want to adopt more routes when the time is right so um we want to introduce JPC circuit breaking through um you know",
    "start": "1365960",
    "end": "1373320"
  },
  {
    "text": "dedicated um annotations we want to do policy attachment for a bunch of the load balcer policy",
    "start": "1373320",
    "end": "1379720"
  },
  {
    "text": "uh we also want to adopt probably at some point TCP routes and and let you do all of this native traffic splitting for grpc and um TCP and and so on and so",
    "start": "1379720",
    "end": "1388000"
  },
  {
    "text": "forth uh up next I kind of mentioned this in passing throughout the presentation we want to have finer grain",
    "start": "1388000",
    "end": "1393760"
  },
  {
    "text": "proxy configuration so even more knobs for you to twist um and that kind of extends to the load balancer policy",
    "start": "1393760",
    "end": "1399600"
  },
  {
    "text": "right now we're doing um Yuma uh which is estimated weighted moving average um",
    "start": "1399600",
    "end": "1405799"
  },
  {
    "text": "it's a type of load bouncer policy that relies on a power of two choices so whenever you have like two endpoints that you compare you take the one with",
    "start": "1405799",
    "end": "1412039"
  },
  {
    "text": "the least latency and just kind of go on and on and on but for some people this this doesn't seem to do the trick right",
    "start": "1412039",
    "end": "1418000"
  },
  {
    "text": "and for a very long time we you know being as opinionated as we are said like oh this is probably going to be enough",
    "start": "1418000",
    "end": "1423600"
  },
  {
    "text": "but sometimes you know no two environments are the same and no two environments are created equally so if it's important for people to have this",
    "start": "1423600",
    "end": "1429880"
  },
  {
    "text": "configuration we kind of reached a point where we're like well okay let's let's do it and we're finally in a good place",
    "start": "1429880",
    "end": "1435440"
  },
  {
    "text": "where uh our API is um is designed in such a way to support this at an even",
    "start": "1435440",
    "end": "1440880"
  },
  {
    "text": "bigger scale the last three ones are super exciting for me personally because I know a lot of people have asked about",
    "start": "1440880",
    "end": "1446960"
  },
  {
    "text": "them I've been I've been working the the boof in the past two days that's why my voice is raspy and my eyes just kind of",
    "start": "1446960",
    "end": "1453039"
  },
  {
    "text": "stare out it's been a lot of work um but mesh expansion this is something that people have been asking for a very long",
    "start": "1453039",
    "end": "1459240"
  },
  {
    "text": "time you want to run Linker with your ec2 instances maybe or you have like a hybrid kind of architecture where you",
    "start": "1459240",
    "end": "1465640"
  },
  {
    "text": "want to use a mix of both uh this is going to be possible in the very near future uh Ingress this might come as a",
    "start": "1465640",
    "end": "1472520"
  },
  {
    "text": "bit of a shock like what does he mean by Ingress well we want to roll out our own Ingress controller it's uh you know",
    "start": "1472520",
    "end": "1478200"
  },
  {
    "text": "Linker in case you're not aware uh works with any Ingress controller that you have out there as long as you have a pod",
    "start": "1478200",
    "end": "1483399"
  },
  {
    "text": "in the cluster to kind of inject the sidecar proxy in um but the next point for us after adopting the Gateway API",
    "start": "1483399",
    "end": "1490520"
  },
  {
    "text": "and after hearing users requests was to to think through our own implementation of uh of Ingress and the Gateway API and",
    "start": "1490520",
    "end": "1497440"
  },
  {
    "text": "all something that people can use so you have a unified stack and of course once you handle the",
    "start": "1497440",
    "end": "1502640"
  },
  {
    "text": "ingra side you also have to handle the erra side and I know again a lot of people want to do external connections",
    "start": "1502640",
    "end": "1507919"
  },
  {
    "text": "maybe have a connection to a database you want to get metrics in you want to do mtls all of this stuff we're going to",
    "start": "1507919",
    "end": "1514080"
  },
  {
    "text": "handle with egress and now comes the fum part um",
    "start": "1514080",
    "end": "1520000"
  },
  {
    "start": "1517000",
    "end": "1588000"
  },
  {
    "text": "this is more of a call to action um I don't know how many of you here are in the slack Channel how many of you ever",
    "start": "1520000",
    "end": "1525200"
  },
  {
    "text": "contributed but we're a very friendly Bunch so um um you know all of our development is done on GitHub uh",
    "start": "1525200",
    "end": "1530640"
  },
  {
    "text": "everything is open sourced if you want to look at anything you know definitely hit us up I I see a few of you here that",
    "start": "1530640",
    "end": "1537559"
  },
  {
    "text": "I've seen contribute so um you know makes my heart grow when that happens um",
    "start": "1537559",
    "end": "1542720"
  },
  {
    "text": "we also have a formal announcements and mailing lists on cncf so if that's your thing and you you like to receive your",
    "start": "1542720",
    "end": "1549080"
  },
  {
    "text": "uh newsletter and emails um we're always going to publish those especially when we do releases we also have formal third",
    "start": "1549080",
    "end": "1555440"
  },
  {
    "text": "party security audits um so yeah if you if you have any doubts about our security practices you shouldn't but if",
    "start": "1555440",
    "end": "1562480"
  },
  {
    "text": "you have any doubts about our security practices we have some thirdparty audits that have been uh that have been done",
    "start": "1562480",
    "end": "1568120"
  },
  {
    "text": "and finally we also rolled out a support Forum so uh one thing with slack I've been on slack for a very long time is",
    "start": "1568120",
    "end": "1573440"
  },
  {
    "text": "that um you know the history is just not preserved sometimes it's hard to search free issues so uh we rolled out a forum",
    "start": "1573440",
    "end": "1580000"
  },
  {
    "text": "um people can post in there you know if you have any um articles you want to write or if you have any questions that",
    "start": "1580000",
    "end": "1585320"
  },
  {
    "text": "you want to ask yeah it's all in there and finally we also run a monthly",
    "start": "1585320",
    "end": "1591320"
  },
  {
    "start": "1588000",
    "end": "1997000"
  },
  {
    "text": "Hands-On engineering focus training uh to get you up to speed you know a lot of people again say it's complex I beg to",
    "start": "1591320",
    "end": "1598360"
  },
  {
    "text": "differ again also very biased I work on it dayto day um but that's why we we kind of want to help you be successful",
    "start": "1598360",
    "end": "1604840"
  },
  {
    "text": "and if you want to run Linker easier on any kubernetes cluster uh buoyant the creator of linker also has uh SAS",
    "start": "1604840",
    "end": "1611279"
  },
  {
    "text": "product to help you out and finally my favorite part questions [Music]",
    "start": "1611279",
    "end": "1619310"
  },
  {
    "text": "[Applause]",
    "start": "1619310",
    "end": "1627630"
  },
  {
    "text": "yeah should I just give the mic out how does this work all right he's got the",
    "start": "1629880",
    "end": "1637000"
  },
  {
    "text": "mic I'll let you",
    "start": "1639080",
    "end": "1642640"
  },
  {
    "text": "pick thanks thanks for the all the nice new features um the API Gateway spec with the HP route",
    "start": "1644360",
    "end": "1652960"
  },
  {
    "text": "seems to be very tightly coupled to having a Gateway which kind of sounds",
    "start": "1652960",
    "end": "1658200"
  },
  {
    "text": "like Ingress how does it work between multiple services in the same mesh yeah",
    "start": "1658200",
    "end": "1663960"
  },
  {
    "text": "that's a really good question so you're correct the Gateway API was supposed to standardize some of the Ingress stuff",
    "start": "1663960",
    "end": "1670240"
  },
  {
    "text": "and it's mostly for North South traffic um and that's why we came up with this whole gamma movement that kind of",
    "start": "1670240",
    "end": "1675399"
  },
  {
    "text": "standardized the resources for East West traffic for m traffic um we're we're",
    "start": "1675399",
    "end": "1681000"
  },
  {
    "text": "working on it uh we have all of the people who work on service meshes in general whether they're LD proxy based",
    "start": "1681000",
    "end": "1686880"
  },
  {
    "text": "Envoy based uh you know kind of adapt the HTTP route resources to make it make",
    "start": "1686880",
    "end": "1692399"
  },
  {
    "text": "sense um but yeah the Gateway resource for example is not something we use in mesh but the xra resources are because",
    "start": "1692399",
    "end": "1699080"
  },
  {
    "text": "they allow you to shape traffic and all of this Dynamic request routing stuff does that answer your question okay so",
    "start": "1699080",
    "end": "1705399"
  },
  {
    "text": "if I use the HP route resource or type it will already work in the mesh between",
    "start": "1705399",
    "end": "1712480"
  },
  {
    "text": "peers as long as you attach it to a service that you know is meshed right",
    "start": "1712480",
    "end": "1717799"
  },
  {
    "text": "yeah thanks no",
    "start": "1717799",
    "end": "1721919"
  },
  {
    "text": "problems yeah keep them",
    "start": "1723919",
    "end": "1727480"
  },
  {
    "text": "coming hello um so with the circuit breaking what if all of my pods start throwing errors all at once do they all",
    "start": "1730279",
    "end": "1736600"
  },
  {
    "text": "get taken out of circulation or is I'm kind of like percentage maximum out of circulation thing going on uh a very",
    "start": "1736600",
    "end": "1744200"
  },
  {
    "text": "good question if all of your pods start returning 500 errors all at once they're all going to be taken out of circulation",
    "start": "1744200",
    "end": "1750080"
  },
  {
    "text": "and they're all going to be you know applied the uh back off penalty um so if one of them comes back on we're going to",
    "start": "1750080",
    "end": "1756399"
  },
  {
    "text": "probe it if it does we're going to start routing requests to it otherwise you know tough",
    "start": "1756399",
    "end": "1763600"
  },
  {
    "text": "luck keep in okay we've got one more at the back I'm getting ready for the ebpf",
    "start": "1766679",
    "end": "1774039"
  },
  {
    "text": "question at some point um thanks for the presentation I just wanted to ask um are you supporting",
    "start": "1774039",
    "end": "1780600"
  },
  {
    "text": "IP version six no not yet that's a very good point um we don't it's in the books",
    "start": "1780600",
    "end": "1787240"
  },
  {
    "text": "though um if you want to speed up the process so we know a bunch of people started adopting dual stack um it's not",
    "start": "1787240",
    "end": "1794240"
  },
  {
    "text": "trivial to implement it you have the IP tables layer um we have a few more changes to make because some of our you",
    "start": "1794240",
    "end": "1800880"
  },
  {
    "text": "know we use ipv4 by default in a proxy um it's not trivial but it's something",
    "start": "1800880",
    "end": "1807200"
  },
  {
    "text": "that we can do we just need to see how much of the community is currently moving to dual stack to kind of know how to prioritize it and and what direction",
    "start": "1807200",
    "end": "1813480"
  },
  {
    "text": "to move in so um if you want to use IPv6 there's an issue open in the GitHub repo",
    "start": "1813480",
    "end": "1818559"
  },
  {
    "text": "just go on there and and tag me and and Bug other people and uh you know we'll we'll get it on the road map cool thanks",
    "start": "1818559",
    "end": "1827640"
  },
  {
    "text": "no more questions come on I need at least two",
    "start": "1833919",
    "end": "1837799"
  },
  {
    "text": "more is HTTP 3 support coming in soon uh",
    "start": "1839840",
    "end": "1845279"
  },
  {
    "text": "no no sorry that was a it was a quick quick answer but it's not it's not on the books for now um again if you think",
    "start": "1845279",
    "end": "1852640"
  },
  {
    "text": "you have a use case so this is something that we generally tell people um if you think you have a good use case for it",
    "start": "1852640",
    "end": "1858000"
  },
  {
    "text": "we're super happy to have a chat um but again we aim to be super simple in the",
    "start": "1858000",
    "end": "1863080"
  },
  {
    "text": "stuff that we do so everything has to be fought out and kind of passed through our own opinionated filter so you know",
    "start": "1863080",
    "end": "1870039"
  },
  {
    "text": "it helps to have an issue it helps to track it and it helps to see how many people want to have it done got",
    "start": "1870039",
    "end": "1877840"
  },
  {
    "text": "it one more",
    "start": "1878840",
    "end": "1883080"
  },
  {
    "text": "um you hinted it kind of already uh EF uh side call what's your",
    "start": "1888960",
    "end": "1896000"
  },
  {
    "text": "stance okay thank you for finally asking uh it's a tough one um okay again this",
    "start": "1896000",
    "end": "1904360"
  },
  {
    "text": "is my opinion right as the maintainer so it's not even you know the opinion of my colleagues I I like EF I think it's a",
    "start": "1904360",
    "end": "1912279"
  },
  {
    "text": "very cool technology I think being able to have all of this observability built in the kernel is super cool",
    "start": "1912279",
    "end": "1918519"
  },
  {
    "text": "there's a bit a big butt coming um I think the big problem when ebpf is that",
    "start": "1918519",
    "end": "1925200"
  },
  {
    "text": "you cannot actually do any State Management inside of it the verifier is super strict you cannot have unbounded",
    "start": "1925200",
    "end": "1931360"
  },
  {
    "text": "loops there's not a lot of stuff that you can do in there ebpf freely Sparkles when you need like tracing when you need",
    "start": "1931360",
    "end": "1938240"
  },
  {
    "text": "packet tracing when you need to do socket level load balancing all of this stuff is cool but as soon as you start",
    "start": "1938240",
    "end": "1943840"
  },
  {
    "text": "abstracting things away and you need to do stuff like uh circuit breaking or when you need to do stuff like retries",
    "start": "1943840",
    "end": "1949399"
  },
  {
    "text": "when you need to do stuff like timeouts you can't really do that with ebpf and",
    "start": "1949399",
    "end": "1954639"
  },
  {
    "text": "that's why even the service mesh solutions that kind of run a mix of ebpf and something else they usually use",
    "start": "1954639",
    "end": "1960600"
  },
  {
    "text": "Envoy to kind of handle all of this layer 7even stuff um so I think ebpf is",
    "start": "1960600",
    "end": "1966159"
  },
  {
    "text": "cool we support ebpf cnis if you want to use you know Calico or whatever else cium you can you can go ahead and use it",
    "start": "1966159",
    "end": "1973120"
  },
  {
    "text": "uh linkerd supports it uh but when it comes to doing service mesh things which is is failure resiliency observability",
    "start": "1973120",
    "end": "1979840"
  },
  {
    "text": "at a higher level you know that's protocol related um and when you want to do mtls then you know no substitute for",
    "start": "1979840",
    "end": "1987760"
  },
  {
    "text": "the sidecar proxy thank you",
    "start": "1987760",
    "end": "1993710"
  },
  {
    "text": "[Applause]",
    "start": "1993710",
    "end": "1999719"
  }
]