[
  {
    "start": "0",
    "end": "125000"
  },
  {
    "text": "okay let's get started i'd like to thank everyone enjoy for joining us today welcome to today's cncf",
    "start": "8000",
    "end": "13599"
  },
  {
    "text": "webinar making data work for developers with kubernetes and cassandra i'm jerry fallon and i'll be moderating",
    "start": "13599",
    "end": "19760"
  },
  {
    "text": "today's webinar i'd like to i would like to welcome today's presenters chris splinter senior product",
    "start": "19760",
    "end": "25359"
  },
  {
    "text": "manager of developer solutions at data stacks and patrick mcfadden vp",
    "start": "25359",
    "end": "30400"
  },
  {
    "text": "of developer relations of data stacks just a few hives keeping items before we get started during the webinar you are not able to",
    "start": "30400",
    "end": "37280"
  },
  {
    "text": "talk as an attendee there is a q a box at the bottom of your screen please feel free to drop your questions in there and we'll get to as many as we",
    "start": "37280",
    "end": "43440"
  },
  {
    "text": "can at the end this is an official webinar of the cncf and as such as subject to the cncf code",
    "start": "43440",
    "end": "48960"
  },
  {
    "text": "of conduct please do not add anything to the chat or questions that would be in violation of the code of conduct",
    "start": "48960",
    "end": "54480"
  },
  {
    "text": "please be respectful of all your fellow participants and presenters please also note that the recording and",
    "start": "54480",
    "end": "59600"
  },
  {
    "text": "slides will be posted later today to the cncf webinar page at cncf dot io webinars",
    "start": "59600",
    "end": "65760"
  },
  {
    "text": "with that i'll hand it over to chris and patrick to kick off today's presentation great thanks a lot jerry um well this is",
    "start": "65760",
    "end": "73280"
  },
  {
    "text": "gonna be a fun-filled i don't know how long this is gonna take probably less than an hour because",
    "start": "73280",
    "end": "78640"
  },
  {
    "text": "that's all we're given but we're gonna talk about cassandra and kubernetes um it's a really hot",
    "start": "78640",
    "end": "84320"
  },
  {
    "text": "topic i seem to be talking about this a lot i mean same with you i'm sure chris",
    "start": "84320",
    "end": "89439"
  },
  {
    "text": "you're gonna say yes okay yeah that's fine yes absolutely we're excited to talk about this",
    "start": "89439",
    "end": "95200"
  },
  {
    "text": "yeah so we've been working on a few things together uh kubernetes operator for cassandra's one thing",
    "start": "95200",
    "end": "101040"
  },
  {
    "text": "working inside the apache cassandra community as well as cncf so with all these things coming together",
    "start": "101040",
    "end": "106560"
  },
  {
    "text": "we thought we would give you a good picture of uh why developers are",
    "start": "106560",
    "end": "111600"
  },
  {
    "text": "and operators are moving towards this paradigm but also to give us all some sort of a um some indications on",
    "start": "111600",
    "end": "118079"
  },
  {
    "text": "like where this is going um we have some case studies in there so let's do this",
    "start": "118079",
    "end": "123119"
  },
  {
    "text": "um so next slide so we're going to talk about this move right here which is uh going",
    "start": "123119",
    "end": "130080"
  },
  {
    "start": "125000",
    "end": "276000"
  },
  {
    "text": "from monoliths to microservices and what's surprising to me is um just how",
    "start": "130080",
    "end": "137120"
  },
  {
    "text": "much monolith really still is out there and this is um a a huge thing around uh digital",
    "start": "137120",
    "end": "143840"
  },
  {
    "text": "transformation as you see like right now especially in where as everything is moving towards online uh monolith you",
    "start": "143840",
    "end": "151120"
  },
  {
    "text": "know it's funny chris i always think monolith is like a mainframe but",
    "start": "151120",
    "end": "156400"
  },
  {
    "text": "and in a lot of cases it is but in also a lot of cases it is not like we're seeing istio go",
    "start": "156400",
    "end": "162400"
  },
  {
    "text": "back actually from microservices to monolith which is certainly interesting it is really cool i but i actually i've",
    "start": "162400",
    "end": "169440"
  },
  {
    "text": "seen uh soa and microservices run on a mainframe there's cics",
    "start": "169440",
    "end": "174720"
  },
  {
    "text": "there's websphere on cics that runs micro services now so go ibm um so",
    "start": "174720",
    "end": "182319"
  },
  {
    "text": "this is what we're what we actually want you to think more about in a micro service architecture is being",
    "start": "182319",
    "end": "188159"
  },
  {
    "text": "distributed um distributed computing is a very important paradigm in how we deploy",
    "start": "188159",
    "end": "194640"
  },
  {
    "text": "applications because it gives us the ability for the scale for the resilience for the elasticity",
    "start": "194640",
    "end": "201280"
  },
  {
    "text": "that's really important for today's applications so when we go from monolith you know we usually i think this is",
    "start": "201280",
    "end": "207760"
  },
  {
    "text": "where we we see most um most are either in this multi-tier",
    "start": "207760",
    "end": "212879"
  },
  {
    "text": "soa world right now i think you know you break up your your front end your back-end and your data layer",
    "start": "212879",
    "end": "218480"
  },
  {
    "text": "um classic you know this is the old-school lamp actually was more of the multi-tier the service oriented architecture um is",
    "start": "218480",
    "end": "226080"
  },
  {
    "text": "still pretty valid but that that involved things like enterprise uh",
    "start": "226080",
    "end": "231120"
  },
  {
    "text": "enterprise what am i trying to say here java beans um remember back in the day when we had",
    "start": "231120",
    "end": "236159"
  },
  {
    "text": "those and the buses the service bus and how things were talking is it was basically the",
    "start": "236159",
    "end": "242480"
  },
  {
    "text": "multi-tier broken up into these really nice constituencies and now with microservices um it's",
    "start": "242480",
    "end": "250319"
  },
  {
    "text": "interesting this is not new um i remember netflix talking about this in 2011 2012 is how they built netflix",
    "start": "250319",
    "end": "258160"
  },
  {
    "text": "it was all these distributed microservices and each service was really this um a individual part of netflix",
    "start": "258160",
    "end": "266160"
  },
  {
    "text": "probably run by a team a small team but it created that resilience that they",
    "start": "266160",
    "end": "271680"
  },
  {
    "text": "really need and and um so let's move on to the next thing",
    "start": "271680",
    "end": "277120"
  },
  {
    "start": "276000",
    "end": "362000"
  },
  {
    "text": "so when we're building microservices there's a few things you need to think about um there and i'm i've highlighted",
    "start": "277440",
    "end": "283600"
  },
  {
    "text": "there's a lot of things actually and this is from the microservices patterns boat but um i've highlighted three things",
    "start": "283600",
    "end": "289040"
  },
  {
    "text": "here first is the observability you cannot distribute that much infrastructure without knowing what's",
    "start": "289040",
    "end": "294080"
  },
  {
    "text": "going on um unless you love surprises some people love surprises chris do you love surprises",
    "start": "294080",
    "end": "300400"
  },
  {
    "text": "no not in my infrastructure no i i mean you know i used to run",
    "start": "300400",
    "end": "306479"
  },
  {
    "text": "infrastructure those surprises always came at what 3 a.m 2 a.m",
    "start": "306479",
    "end": "311919"
  },
  {
    "text": "why doesn't anything break during the middle of the day um and testing how to prevent again the",
    "start": "311919",
    "end": "318400"
  },
  {
    "text": "least surprises if i test something properly and i put it into production awesome hopefully it won't surprise me",
    "start": "318400",
    "end": "326560"
  },
  {
    "text": "but i'm still going to watch you services but then the other part is this database per",
    "start": "326560",
    "end": "332960"
  },
  {
    "text": "service and that probably creates a lot of havoc with",
    "start": "332960",
    "end": "338240"
  },
  {
    "text": "the architect mind because wait a minute wait a minute don't we centralize our database do we build the big monolith database",
    "start": "338240",
    "end": "344720"
  },
  {
    "text": "the one database to rule them all not in this world not in a distributed computing world",
    "start": "344720",
    "end": "351440"
  },
  {
    "text": "and i think this is what we need to dig in a bit on building microservices and then you'll see like how this is a",
    "start": "351440",
    "end": "357440"
  },
  {
    "text": "form fit for how kubernetes works so next slide please",
    "start": "357440",
    "end": "363280"
  },
  {
    "start": "362000",
    "end": "598000"
  },
  {
    "text": "so that one database per service and it seems like you got a lot of infrastructure here but you do",
    "start": "363680",
    "end": "370560"
  },
  {
    "text": "but you don't you're going to build a distributed system and it will scale as you need it so",
    "start": "370560",
    "end": "375600"
  },
  {
    "text": "as big as it gets is as big as you need and i'll tell you when you have a cyber monday event",
    "start": "375600",
    "end": "382319"
  },
  {
    "text": "you'll be really happy you did this because that's when you need it um so what do you need everything needs",
    "start": "382319",
    "end": "388240"
  },
  {
    "text": "to be loosely coupled and loosely coupling services um",
    "start": "388240",
    "end": "393520"
  },
  {
    "text": "that is i think an obvious thing for microservices people but sometimes we lose track of that like",
    "start": "393520",
    "end": "400080"
  },
  {
    "text": "some i've seen people build microservices where they have a chain of dependencies and if one",
    "start": "400080",
    "end": "406240"
  },
  {
    "text": "microservice breaks way down the chain everything goes down that is not the right way to",
    "start": "406240",
    "end": "412080"
  },
  {
    "text": "do it um the circuit breaker patterns the way that they're coupled with apis instead",
    "start": "412080",
    "end": "417360"
  },
  {
    "text": "of a direct tcp ip connection that you know a stateful connection to a database",
    "start": "417360",
    "end": "424240"
  },
  {
    "text": "is a bad idea um and so each service and that in that case is",
    "start": "424240",
    "end": "429680"
  },
  {
    "text": "going to be isolated so your service your data they're isolated and they store the state",
    "start": "429680",
    "end": "435759"
  },
  {
    "text": "for that service so instead of having again like a database that's running every single service in your",
    "start": "435759",
    "end": "441199"
  },
  {
    "text": "infrastructure on your application which if it goes down your entire app goes down what if you lose one service um i'll",
    "start": "441199",
    "end": "448960"
  },
  {
    "text": "give you a good example i saw a talk from hulu years ago that talked to their",
    "start": "448960",
    "end": "454240"
  },
  {
    "text": "huge cassandra shop and they talked about how how they manage outages and",
    "start": "454240",
    "end": "461120"
  },
  {
    "text": "it may be that if they lose a microservice or a database something happens they lose connectivity it just their way",
    "start": "461120",
    "end": "468160"
  },
  {
    "text": "that they build their service was it just won't show you that feature and you could still watch golden girls",
    "start": "468160",
    "end": "474960"
  },
  {
    "text": "or whatever you love on hulu but um i'm pretty sure that's the only thing on there anymore",
    "start": "474960",
    "end": "480479"
  },
  {
    "text": "but you could still watch tv shows movies things like that you just may not have like one piece of",
    "start": "480479",
    "end": "486720"
  },
  {
    "text": "functionality maybe the search isn't working very good yeah that's not very fun but um it doesn't ruin everything so",
    "start": "486720",
    "end": "494080"
  },
  {
    "text": "that's one of the one part of it and then how does that relate to cassandra well cassandra's really built",
    "start": "494080",
    "end": "501840"
  },
  {
    "text": "for failure and not yours the inevitable failure that will happen",
    "start": "501840",
    "end": "506960"
  },
  {
    "text": "in infrastructure um i don't think anyone's ever deployed something in",
    "start": "506960",
    "end": "512479"
  },
  {
    "text": "any size of infrastructure and expected it to be up 100 so by spreading things around we're",
    "start": "512479",
    "end": "520000"
  },
  {
    "text": "doing a better job of keeping our uptime going so when we uh when we share database",
    "start": "520000",
    "end": "526399"
  },
  {
    "text": "you know this coupling of data share databases not equal share data so we're keeping that isolation a key",
    "start": "526399",
    "end": "532640"
  },
  {
    "text": "space um the table and the access control",
    "start": "532640",
    "end": "537839"
  },
  {
    "text": "is all these one-to-one relationships between the services and what you're deploying behind and i",
    "start": "537839",
    "end": "543600"
  },
  {
    "text": "will explain how this works in cassandra land but when you're when you're building up",
    "start": "543600",
    "end": "549279"
  },
  {
    "text": "all this infrastructure um you're gonna have a lot of different cassandra clusters",
    "start": "549279",
    "end": "554720"
  },
  {
    "text": "being deployed say in kubernetes um you're gonna have the right replication factor so even if you lose",
    "start": "554720",
    "end": "559920"
  },
  {
    "text": "small parts of it it's still online and you're eliminating the ugly horrible",
    "start": "559920",
    "end": "565440"
  },
  {
    "text": "thing of a single point of failure and secret points of failure we try not",
    "start": "565440",
    "end": "570640"
  },
  {
    "text": "to put them into our systems but sometimes we're forced architecturally to do it i'm saying don't if when you use",
    "start": "570640",
    "end": "577360"
  },
  {
    "text": "cassandra as a database it doesn't have a single point of failure and when you're using kubernetes",
    "start": "577360",
    "end": "583279"
  },
  {
    "text": "it shouldn't have a single point of failure but i think both you can do bad things and rig up a",
    "start": "583279",
    "end": "589360"
  },
  {
    "text": "single point of failure if you're using a relational database with one server in it that's a huge single point of failure",
    "start": "589360",
    "end": "596240"
  },
  {
    "text": "next slide please and speaking of relational databases",
    "start": "596240",
    "end": "604399"
  },
  {
    "start": "598000",
    "end": "842000"
  },
  {
    "text": "how many times have i heard this well i need acid this is atomicity consistency isolation and",
    "start": "604399",
    "end": "610000"
  },
  {
    "text": "durability um that that has been a paradigm that",
    "start": "610000",
    "end": "615279"
  },
  {
    "text": "has changed with no sequel no nosql it really was about non-relational databases",
    "start": "615279",
    "end": "621200"
  },
  {
    "text": "and it's because acid compliant databases were built in a time when we had one",
    "start": "621200",
    "end": "626480"
  },
  {
    "text": "database and there were tens or hundreds of users and the consistency was important because we really had a hard time",
    "start": "626480",
    "end": "632240"
  },
  {
    "text": "maintaining any consistency anyway so this is where we got the thing around two-phase commits",
    "start": "632240",
    "end": "637839"
  },
  {
    "text": "and the transactions that happened had to be a true phase commit or never happened um funny thing is",
    "start": "637839",
    "end": "645200"
  },
  {
    "text": "is that a lot of databases that the largest databases in the world at the time were not acid compliant like mainframes",
    "start": "645200",
    "end": "652399"
  },
  {
    "text": "um they did ledger uh ledger reconciliation inside of the database to make sure that",
    "start": "652399",
    "end": "658800"
  },
  {
    "text": "things got merged properly we learned a lot about that if you look at the original cassandra paper which goes back to the",
    "start": "658800",
    "end": "665200"
  },
  {
    "text": "dynamo paper these are computer science papers there was a lot of references to stuff that was learned",
    "start": "665200",
    "end": "671040"
  },
  {
    "text": "in the mainframe world in the 1970s about how to keep data consistent in this loosely coupled world",
    "start": "671040",
    "end": "677519"
  },
  {
    "text": "this is where we live so what we're talking about as a change just because we want to talk",
    "start": "677519",
    "end": "683120"
  },
  {
    "text": "about chemistry instead of acid how about some base and that's that basic availability for soft",
    "start": "683120",
    "end": "688880"
  },
  {
    "text": "state and eventual consistency um eventual consistency probably strikes the most fear in people's hearts",
    "start": "688880",
    "end": "695600"
  },
  {
    "text": "they're like wait a minute if i if i commit data into my database what is it gonna be like next week when",
    "start": "695600",
    "end": "700880"
  },
  {
    "text": "i see it you know it's like no no no no that's not what this is about that means that if you do a riot and you",
    "start": "700880",
    "end": "707440"
  },
  {
    "text": "do a read at the same time you may not get the exact same right unless you ask for it",
    "start": "707440",
    "end": "712880"
  },
  {
    "text": "that's where consistency comes in so we can change the consistency we can say i want it to be that",
    "start": "712880",
    "end": "719040"
  },
  {
    "text": "consistent or i don't need it that consistency you need to be able to have that flexibility",
    "start": "719040",
    "end": "724399"
  },
  {
    "text": "that basic availability is more important if you think about like a database that stores a product",
    "start": "724399",
    "end": "730880"
  },
  {
    "text": "a product catalog and it's the middle of the holiday shopping season or cyber",
    "start": "730880",
    "end": "737680"
  },
  {
    "text": "monday the availability is going to win in that case i need to have it and i think that's",
    "start": "737680",
    "end": "746160"
  },
  {
    "text": "where you see like we're banking most banks use cassandra now because availability is more important",
    "start": "746160",
    "end": "752000"
  },
  {
    "text": "than that that strong consistency believe it or not it will be consistent",
    "start": "752000",
    "end": "757360"
  },
  {
    "text": "but having the availability being able to check your balance and do transactions is more important 24 7 than",
    "start": "757360",
    "end": "765040"
  },
  {
    "text": "doing an asset transaction banks don't do that and this event sourcing saving the",
    "start": "765040",
    "end": "772320"
  },
  {
    "text": "messages and not the final state that is how that works and so",
    "start": "772320",
    "end": "778000"
  },
  {
    "text": "in cases where we don't have an absolute connection to the database where yes i have a complete picture of",
    "start": "778000",
    "end": "784160"
  },
  {
    "text": "all data in the system i want to be able to save that that happened think of like",
    "start": "784160",
    "end": "789519"
  },
  {
    "text": "if i'm moving money from one place to another i want to record that i said that and if i check my balance and it's wrong",
    "start": "789519",
    "end": "796480"
  },
  {
    "text": "i don't want to be wrong because that message got lost i want it to be because there was some stale data in there which is",
    "start": "796480",
    "end": "802240"
  },
  {
    "text": "not always good either but what's more important is the message got there and it can be rectified",
    "start": "802240",
    "end": "807360"
  },
  {
    "text": "and then finally the item potence if i miss if if something happened and i for",
    "start": "807360",
    "end": "813440"
  },
  {
    "text": "whatever reason redid it or something was out of order i want to make sure that it's replayable",
    "start": "813440",
    "end": "818639"
  },
  {
    "text": "and that it is item potent um item potency is if i do the same thing uh over it's it doesn't change anything",
    "start": "818639",
    "end": "825839"
  },
  {
    "text": "it doesn't update it to a new value it just replays it exactly the same way",
    "start": "825839",
    "end": "831120"
  },
  {
    "text": "these are super important for today's applications mobile applications retail applications iot all rely on this",
    "start": "831120",
    "end": "839600"
  },
  {
    "text": "next slide please so this is why when we're building",
    "start": "839600",
    "end": "846320"
  },
  {
    "text": "things in microservices apache sandwiches is like the database for this and it's really the best",
    "start": "846320",
    "end": "851839"
  },
  {
    "text": "database for kubernetes in this case because of the way that it works",
    "start": "851839",
    "end": "856880"
  },
  {
    "text": "it manages things in real time scales it's it is the most scalable database around",
    "start": "856880",
    "end": "863040"
  },
  {
    "text": "um it is running the biggest workloads on the internet right now you don't know it but you use",
    "start": "863040",
    "end": "869279"
  },
  {
    "text": "micro or you use um microservices use cassandra every single day all day",
    "start": "869279",
    "end": "874560"
  },
  {
    "text": "probably um it's in everything you touch and it's just because it's one of those databases",
    "start": "874560",
    "end": "880000"
  },
  {
    "text": "that works um and we're going from acid to base there's all sorts of things that are",
    "start": "880000",
    "end": "886000"
  },
  {
    "text": "happening there and chris is going to go through some of the really cool uh use cases but um we're going to",
    "start": "886000",
    "end": "891680"
  },
  {
    "text": "decouple by design one key space per domain one query per table simple it's easy to architect easy to",
    "start": "891680",
    "end": "898880"
  },
  {
    "text": "deploy next slide please all right thanks patrick yeah all of those considerations that",
    "start": "898880",
    "end": "905920"
  },
  {
    "start": "901000",
    "end": "948000"
  },
  {
    "text": "you just talked about they do certainly show though that the choice of going to microservices",
    "start": "905920",
    "end": "912000"
  },
  {
    "text": "does bring a trade-off of complexity there's not necessarily a",
    "start": "912000",
    "end": "917079"
  },
  {
    "text": "one-size-fits-all solution there but what we've seen and what we'll cover in the next few slides",
    "start": "917079",
    "end": "922880"
  },
  {
    "text": "here is that users are choosing cassandra for their microservices when they need the same level of scalability",
    "start": "922880",
    "end": "929360"
  },
  {
    "text": "and availability at the data tier that they have in their microservices that are running",
    "start": "929360",
    "end": "935120"
  },
  {
    "text": "on kubernetes and we've been fortunate enough to be students of several architectural",
    "start": "935120",
    "end": "941360"
  },
  {
    "text": "transformations over the past few years and that's what we're going to cover here in the next few slides",
    "start": "941360",
    "end": "949199"
  },
  {
    "start": "948000",
    "end": "1243000"
  },
  {
    "text": "so the first one is monzo bank and i have to start by just saying thank you",
    "start": "949519",
    "end": "954959"
  },
  {
    "text": "to the monzo team for sharing their technical story in such depth so that people like us can learn",
    "start": "954959",
    "end": "960800"
  },
  {
    "text": "from both their challenges and their successes and i feel like a personal fan almost",
    "start": "960800",
    "end": "966560"
  },
  {
    "text": "because they've built some really amazing things over the years and i recommend checking",
    "start": "966560",
    "end": "971600"
  },
  {
    "text": "out their blogs and presentations because it really is a success story of microservices and cloud native",
    "start": "971600",
    "end": "978880"
  },
  {
    "text": "and so their use case is very much focused uh on banking and payment and they've really had an eye on",
    "start": "978880",
    "end": "985360"
  },
  {
    "text": "reinventing that industry from the start so when they were just starting out",
    "start": "985360",
    "end": "991279"
  },
  {
    "text": "they really went for the microservices uh from the get-go and i think their latest total was over",
    "start": "991279",
    "end": "997360"
  },
  {
    "text": "1600 microservices which is a pretty incredible number and i remember their",
    "start": "997360",
    "end": "1003040"
  },
  {
    "text": "tweet with the connections between all of those microservices and it certainly represents complexity and",
    "start": "1003040",
    "end": "1009360"
  },
  {
    "text": "they've done some amazing things from the tooling perspective to deal with all of that but one of the main reasons that matt",
    "start": "1009360",
    "end": "1016480"
  },
  {
    "text": "heath who is a senior distributed systems engineer for monzo one of the reasons that he",
    "start": "1016480",
    "end": "1022959"
  },
  {
    "text": "cites is the agility and the example that he gives is with their bonzo card they have",
    "start": "1022959",
    "end": "1029038"
  },
  {
    "text": "functionality where a user can enable or disable it if they want to lock their card and he said that that functionality took",
    "start": "1029039",
    "end": "1036160"
  },
  {
    "text": "10 minutes to build which might be an exaggeration but it's that sort of agility that",
    "start": "1036160",
    "end": "1041520"
  },
  {
    "text": "people look to get to when they are considering microservices and in monzo's case clearly it's been",
    "start": "1041520",
    "end": "1047760"
  },
  {
    "text": "delivering for them and then they chose cassandra because of",
    "start": "1047760",
    "end": "1053360"
  },
  {
    "text": "its scalability and availability attributes and this is very important for",
    "start": "1053360",
    "end": "1059600"
  },
  {
    "text": "specifically applications in the fintech space because if any of us ever swiped our card and it didn't work",
    "start": "1059600",
    "end": "1065760"
  },
  {
    "text": "we would be in a significant amount of trouble and right now they have uh over 500 services that use",
    "start": "1065760",
    "end": "1073840"
  },
  {
    "text": "cassandra and the data isolation model that they went for is using a key space per service",
    "start": "1073840",
    "end": "1081919"
  },
  {
    "text": "so this is not necessarily the database per microservice that some purists may",
    "start": "1081919",
    "end": "1089039"
  },
  {
    "text": "advocate for but in their case it's what works for them and i could take a guess that this",
    "start": "1089039",
    "end": "1094240"
  },
  {
    "text": "is because they have a team of platform engineers that are actually responsible for that database",
    "start": "1094240",
    "end": "1099919"
  },
  {
    "text": "so we start to see that microservices isn't just a technical architecture but it also",
    "start": "1099919",
    "end": "1106000"
  },
  {
    "text": "reflects the organizational structure and at the end of the day",
    "start": "1106000",
    "end": "1111440"
  },
  {
    "text": "teams should do what makes sense from an organizational standpoint when planning and building their microservices",
    "start": "1111440",
    "end": "1118400"
  },
  {
    "text": "one of the other really important learnings from monzo that i've personally found so impressive",
    "start": "1118400",
    "end": "1123600"
  },
  {
    "text": "is all of the tooling that they've built around their microservices architecture there's",
    "start": "1123600",
    "end": "1129840"
  },
  {
    "text": "no doubt that having one thing is less complex than having a lot of things",
    "start": "1129840",
    "end": "1135039"
  },
  {
    "text": "and some of the various pieces that they put together i know one of their highest priorities is",
    "start": "1135039",
    "end": "1141679"
  },
  {
    "text": "building their zero trust security network with special network",
    "start": "1141679",
    "end": "1146880"
  },
  {
    "text": "isolation rules and they also rotate cassandra client credentials using vault",
    "start": "1146880",
    "end": "1153440"
  },
  {
    "text": "and just really impressive work there from a security standpoint and that game changes when they have so many",
    "start": "1153440",
    "end": "1160080"
  },
  {
    "text": "of the different services that are deployed in kubernetes and one of the other",
    "start": "1160080",
    "end": "1165120"
  },
  {
    "text": "pieces relating back to what patrick was talking about uh with acid versus base they had a",
    "start": "1165120",
    "end": "1171120"
  },
  {
    "text": "really interesting use case where they were doing a crowd funding and they looked at using",
    "start": "1171120",
    "end": "1176880"
  },
  {
    "text": "counters in cassandra because they couldn't raise more than 20 million euro that was their limit on their investments",
    "start": "1176880",
    "end": "1183440"
  },
  {
    "text": "so they ended up actually doing that kind of global tally outside of",
    "start": "1183440",
    "end": "1188799"
  },
  {
    "text": "cassandra because it didn't have those attributes so i believe they use the go atomic package",
    "start": "1188799",
    "end": "1195280"
  },
  {
    "text": "and then they flush to fcd but it shows that in these distributed environments",
    "start": "1195280",
    "end": "1201039"
  },
  {
    "text": "with distributed databases there are solutions that don't necessarily",
    "start": "1201039",
    "end": "1207120"
  },
  {
    "text": "go along the same lines as the same techniques that have been used in the past with relational databases",
    "start": "1207120",
    "end": "1214559"
  },
  {
    "text": "so again my takeaways when looking at monzo's use case they really built for agility and scale",
    "start": "1214559",
    "end": "1220559"
  },
  {
    "text": "from start this was both with their microservices architecture but then also their choice of cassandra",
    "start": "1220559",
    "end": "1226559"
  },
  {
    "text": "and then they've just been producing tooling to deal with the complexity of",
    "start": "1226559",
    "end": "1233120"
  },
  {
    "text": "their microservices architecture and it's really been impressive to see the things that are open and available on their github",
    "start": "1233120",
    "end": "1241360"
  },
  {
    "text": "so that's monzo the next one here happens to be another banking and",
    "start": "1241600",
    "end": "1248000"
  },
  {
    "start": "1243000",
    "end": "1424000"
  },
  {
    "text": "payment application and this one is mobile pay which is now a branch of donskip bank and this app",
    "start": "1248000",
    "end": "1256400"
  },
  {
    "text": "started as something just to transfer money between friends and since then they've expanded",
    "start": "1256400",
    "end": "1262799"
  },
  {
    "text": "to all sorts of different avenues of e-commerce point-of-sale transactions",
    "start": "1262799",
    "end": "1268000"
  },
  {
    "text": "and partnering with banks and just to throw out some of their stats they've expanded to over",
    "start": "1268000",
    "end": "1273600"
  },
  {
    "text": "4 million users 100 million danish cronin transfers in 2019",
    "start": "1273600",
    "end": "1279039"
  },
  {
    "text": "and over 1 million transactions per day and now it's an integral part of money transactions for danes",
    "start": "1279039",
    "end": "1285200"
  },
  {
    "text": "and really the key learning from this example is how they went about their journey",
    "start": "1285200",
    "end": "1290320"
  },
  {
    "text": "to microservices and what started as just a simple",
    "start": "1290320",
    "end": "1295360"
  },
  {
    "text": "native mobile app built upon their existing monolith they actually had the chance to look at",
    "start": "1295360",
    "end": "1301200"
  },
  {
    "text": "and say well how would we build this thing because we know this is going to be an industry that witnesses a high amount",
    "start": "1301200",
    "end": "1307679"
  },
  {
    "text": "of disruption so they started with the business needs and their three business needs were well",
    "start": "1307679",
    "end": "1313280"
  },
  {
    "text": "this app has to be trustworthy it has to be just as available as cash",
    "start": "1313280",
    "end": "1318880"
  },
  {
    "text": "the second one is they knew that they were going to need a lot of agility to innovate very quickly to keep up with",
    "start": "1318880",
    "end": "1325039"
  },
  {
    "text": "competition and the third was that they wanted open apis to be able to expand their",
    "start": "1325039",
    "end": "1330080"
  },
  {
    "text": "partnerships so they started with those business needs and then mapped them to the",
    "start": "1330080",
    "end": "1335440"
  },
  {
    "text": "technical principles and architecture which ultimately ended up with what we're looking on this",
    "start": "1335440",
    "end": "1341039"
  },
  {
    "text": "slide which is bounded context for each service and different teams working on services",
    "start": "1341039",
    "end": "1347520"
  },
  {
    "text": "in parallel so the again the lesson there is starting with the business value",
    "start": "1347520",
    "end": "1353280"
  },
  {
    "text": "starting with the business needs that's what should inform your journey and your path to microservices",
    "start": "1353280",
    "end": "1359679"
  },
  {
    "text": "rather than just saying we heard microservices are cool we should do that",
    "start": "1359679",
    "end": "1365039"
  },
  {
    "text": "and they opted for a wide range of different technical options in order to execute on",
    "start": "1365039",
    "end": "1372559"
  },
  {
    "text": "this design and they have pub sub so the event sourcing and a venture of",
    "start": "1372559",
    "end": "1379840"
  },
  {
    "text": "an architecture for resiliency and retry they have separate security contexts around service heaps",
    "start": "1379840",
    "end": "1386000"
  },
  {
    "text": "and an api gateway at the edge uh again they're using bounded context and actually have polyglot persistence",
    "start": "1386000",
    "end": "1392799"
  },
  {
    "text": "for active active which they use cassandra for and then lastly their microservices are",
    "start": "1392799",
    "end": "1398000"
  },
  {
    "text": "all exposed over well-defined rest apis which has allowed them to communicate cleanly",
    "start": "1398000",
    "end": "1404480"
  },
  {
    "text": "across teams but then also externally such that they have a developer sdk for",
    "start": "1404480",
    "end": "1410159"
  },
  {
    "text": "people to develop on their platform so another really cool story where they started from the business value",
    "start": "1410159",
    "end": "1416240"
  },
  {
    "text": "ended up in microservices and it's allowed them to greatly expand the capabilities of their",
    "start": "1416240",
    "end": "1421520"
  },
  {
    "text": "mobile pay application the next one intuit this use case is",
    "start": "1421520",
    "end": "1429279"
  },
  {
    "start": "1424000",
    "end": "1561000"
  },
  {
    "text": "turbo tax which i'm sure we all know we had a bit of an extension this year to pay our taxes in the united states which",
    "start": "1429279",
    "end": "1435039"
  },
  {
    "text": "was nice but intuit has a different model",
    "start": "1435039",
    "end": "1440799"
  },
  {
    "text": "in the previous uh in the previous bonzo model they were doing key space per",
    "start": "1440799",
    "end": "1448000"
  },
  {
    "text": "service but intuit actually has cluster per business unit and again this is where we",
    "start": "1448000",
    "end": "1454400"
  },
  {
    "text": "start to see the organ organizational structure of companies reflecting",
    "start": "1454400",
    "end": "1459679"
  },
  {
    "text": "into the technical architecture and them doing what makes sense for them as an organization",
    "start": "1459679",
    "end": "1465360"
  },
  {
    "text": "and so this is what they have is a persistent services team",
    "start": "1465360",
    "end": "1471120"
  },
  {
    "text": "that runs all of their databases and they're actually abstracting that to their development teams",
    "start": "1471120",
    "end": "1476559"
  },
  {
    "text": "which then build microservices through a rest api that they build on top of cassandra but there are several micro services",
    "start": "1476559",
    "end": "1482960"
  },
  {
    "text": "that this persistent services team runs to power turbo tax and they support",
    "start": "1482960",
    "end": "1488480"
  },
  {
    "text": "over 300 000 concurrent users in production uh their largest cluster is 144",
    "start": "1488480",
    "end": "1496159"
  },
  {
    "text": "nodes across two regions so again we see that same distributed",
    "start": "1496159",
    "end": "1501279"
  },
  {
    "text": "scalable type of a nature at the data tier as we do at the microservice tier itself",
    "start": "1501279",
    "end": "1507679"
  },
  {
    "text": "and the other interesting thing about intuit is that they actually have a",
    "start": "1507679",
    "end": "1512880"
  },
  {
    "text": "multi-tenant data store where they have over 500 schemas",
    "start": "1512880",
    "end": "1517919"
  },
  {
    "text": "that are supported and really the storage for that is transparent to the developers that are consuming them",
    "start": "1517919",
    "end": "1523760"
  },
  {
    "text": "but they've also built toolings that developers can just check in their schema to github it goes through their schema pipeline",
    "start": "1523760",
    "end": "1530640"
  },
  {
    "text": "and pushes into the database itself so the story here is",
    "start": "1530640",
    "end": "1535840"
  },
  {
    "text": "again arc uh organizational structural reflecting into what makes sense for the technical",
    "start": "1535840",
    "end": "1540960"
  },
  {
    "text": "structure choosing cassandra for scale availability and performance and then again they",
    "start": "1540960",
    "end": "1547600"
  },
  {
    "text": "had to homegrow a lot of tooling and recently they actually released an open source product called pronto",
    "start": "1547600",
    "end": "1554400"
  },
  {
    "text": "which can be used to administer and automate cassandra clusters on aws",
    "start": "1554400",
    "end": "1561600"
  },
  {
    "start": "1561000",
    "end": "1603000"
  },
  {
    "text": "and the last one i want to talk about here that again illustrates the key space per service data isolation",
    "start": "1562000",
    "end": "1567600"
  },
  {
    "text": "model is walgreens they're the retail pharmacy have many prescriptions filled daily",
    "start": "1567600",
    "end": "1574000"
  },
  {
    "text": "and have 88 million active balance rewards customers and i",
    "start": "1574000",
    "end": "1579120"
  },
  {
    "text": "am one of them so they architected for activeactive that was very important",
    "start": "1579120",
    "end": "1584880"
  },
  {
    "text": "to them and then again they go with the combination of key space and user per microservice and in the same pattern",
    "start": "1584880",
    "end": "1592240"
  },
  {
    "text": "they also built a lot of custom tooling in order to push through their different schemas and ddl",
    "start": "1592240",
    "end": "1600240"
  },
  {
    "text": "code through their devops pipeline so to wrap up our use case section here",
    "start": "1600240",
    "end": "1606640"
  },
  {
    "start": "1603000",
    "end": "1661000"
  },
  {
    "text": "our takeaways microservices can bring agility but they certainly also bring complexity uh the second is do what's",
    "start": "1606640",
    "end": "1614240"
  },
  {
    "text": "right for your business and organization we saw on the mobile pay that they started from the business value and",
    "start": "1614240",
    "end": "1619840"
  },
  {
    "text": "worked out and that seems to be a pattern that is pretty effective uh rather than just going blindly for",
    "start": "1619840",
    "end": "1625440"
  },
  {
    "text": "microservices and then the last one cassandra has been a choice for users that are looking to",
    "start": "1625440",
    "end": "1631520"
  },
  {
    "text": "match that scale and availability of their applications at the data tier so i mentioned tooling",
    "start": "1631520",
    "end": "1638559"
  },
  {
    "text": "a lot throughout that and one piece that we are not shy about and",
    "start": "1638559",
    "end": "1643679"
  },
  {
    "text": "we're certainly aware of is that cassandra isn't the easiest piece of technology to run",
    "start": "1643679",
    "end": "1649520"
  },
  {
    "text": "it is difficult people have run into a lot of problems with it so some of what we're trying to do to",
    "start": "1649520",
    "end": "1655520"
  },
  {
    "text": "improve that situation is building a kubernetes operator uh for cassandra",
    "start": "1655520",
    "end": "1662080"
  },
  {
    "start": "1661000",
    "end": "1713000"
  },
  {
    "text": "and that's exciting because um it gets cassandra and kubernetes talking",
    "start": "1662080",
    "end": "1667840"
  },
  {
    "text": "together in the right way um chris you you and i both are working on that project and it's exciting to see what people are",
    "start": "1667840",
    "end": "1675200"
  },
  {
    "text": "doing with it and this is a pretty new thing um cassandra and kubernetes",
    "start": "1675200",
    "end": "1680640"
  },
  {
    "text": "have been working in parallel for a long time and now they're starting to come together and it's mostly because of how",
    "start": "1680640",
    "end": "1688000"
  },
  {
    "text": "kubernetes has taken over a lot of the application space and as we're working on uh kubernetes for data",
    "start": "1688000",
    "end": "1694960"
  },
  {
    "text": "which is a really interesting thing now because it's like hunt has not been talked about a lot and um",
    "start": "1694960",
    "end": "1702159"
  },
  {
    "text": "cassandra operator is one part of that and i think we can walk through like how it works and",
    "start": "1702159",
    "end": "1708880"
  },
  {
    "text": "get you familiar with some of the terminology and cassandra as well so let's go to the next slide",
    "start": "1708880",
    "end": "1714399"
  },
  {
    "start": "1713000",
    "end": "1799000"
  },
  {
    "text": "so just a quick vocabulary uh primer if you've if you know anything",
    "start": "1714720",
    "end": "1720320"
  },
  {
    "text": "about cassandra this is where you can go get a drink um but if you know nothing about cassandra",
    "start": "1720320",
    "end": "1726080"
  },
  {
    "text": "this is some of the terminology that we're going to use when we talk about the operator so a cluster is the entire database",
    "start": "1726080",
    "end": "1734240"
  },
  {
    "text": "and it can span multiple data centers and that's pretty typical actually we we",
    "start": "1734240",
    "end": "1741200"
  },
  {
    "text": "do recommend that you span multiple data centers for that availability you have a zero percent chance of 100",
    "start": "1741200",
    "end": "1747679"
  },
  {
    "text": "uptime if you're in one data center i've ran a lot of infrastructure on amazon and i've never been",
    "start": "1747679",
    "end": "1753279"
  },
  {
    "text": "disappointed about how disappointed i would be with running amazon in one region because eventually an az",
    "start": "1753279",
    "end": "1759360"
  },
  {
    "text": "or region will go down because it's infrastructure so a cluster meaning one complete data",
    "start": "1759360",
    "end": "1765360"
  },
  {
    "text": "space should span multiple data centers furthering that availability game is the racks we have",
    "start": "1765360",
    "end": "1772960"
  },
  {
    "text": "rack awareness as well so data center awareness rack awareness and then the individuals",
    "start": "1772960",
    "end": "1778080"
  },
  {
    "text": "inside um you know the individual components compute components um will be really familiar we call those",
    "start": "1778080",
    "end": "1784080"
  },
  {
    "text": "nodes and so each node is a shared nothing architecture that contributes to the overall cluster's data space but",
    "start": "1784080",
    "end": "1790960"
  },
  {
    "text": "is only responsible for a certain range of data so there you go now you know everything",
    "start": "1790960",
    "end": "1796000"
  },
  {
    "text": "about cassandra next slide it'll be on the test later right chris",
    "start": "1796000",
    "end": "1802399"
  },
  {
    "start": "1799000",
    "end": "1913000"
  },
  {
    "text": "yeah you don't want to do the test i hope not",
    "start": "1802399",
    "end": "1807840"
  },
  {
    "text": "the test will be easy um spell cassandra so one of the tricks that we're trying",
    "start": "1807840",
    "end": "1814080"
  },
  {
    "text": "to accomplish here is translating the way cassandra works into kubernetes world",
    "start": "1814080",
    "end": "1819840"
  },
  {
    "text": "and not always easy because they are built in and completely different paradigms in a lot of ways but it's still distributed",
    "start": "1819840",
    "end": "1825760"
  },
  {
    "text": "computing we still have these core concepts of distributed computing where",
    "start": "1825760",
    "end": "1831840"
  },
  {
    "text": "surprisingly enough it's distributed but how it distributes and replicates is",
    "start": "1831840",
    "end": "1836960"
  },
  {
    "text": "really important um so uh we're going to be talking about the cause operator this is one data",
    "start": "1836960",
    "end": "1842480"
  },
  {
    "text": "stacks has put out as open source there are others there are a lot of others but",
    "start": "1842480",
    "end": "1847679"
  },
  {
    "text": "um what we're trying to do is translate all of the parts the cassandra that make",
    "start": "1847679",
    "end": "1853200"
  },
  {
    "text": "it scalable and resilient and bring it into our crd and that crd",
    "start": "1853200",
    "end": "1858799"
  },
  {
    "text": "translates all of the the individual like what you want your intent like for instance this is where i want",
    "start": "1858799",
    "end": "1865200"
  },
  {
    "text": "to run it this is how i want to run it and here's how i how much i need the",
    "start": "1865200",
    "end": "1870880"
  },
  {
    "text": "scale aspects and the operator's job here is to translate what kubernetes wants to do so the",
    "start": "1870880",
    "end": "1878000"
  },
  {
    "text": "replication controller for instance in kubernetes has its ideas of when i say i need three",
    "start": "1878000",
    "end": "1884159"
  },
  {
    "text": "node cluster here's my state that i need so whenever you create your deployment in kubernetes",
    "start": "1884159",
    "end": "1889360"
  },
  {
    "text": "you say deploy and the operator's job is to say",
    "start": "1889360",
    "end": "1894559"
  },
  {
    "text": "you need three nodes got it well the cassandra operator is going to do a better job of deploying it",
    "start": "1894559",
    "end": "1899919"
  },
  {
    "text": "um setting up the the nodes so they can communicate and it will be cassandra will be super",
    "start": "1899919",
    "end": "1905679"
  },
  {
    "text": "happy about the way it's running without fighting kubernetes in the way that it thinks it should run so it's a translation layer",
    "start": "1905679",
    "end": "1912320"
  },
  {
    "text": "next slide and i think chris is so a lot of the different things that a",
    "start": "1912320",
    "end": "1919919"
  },
  {
    "start": "1913000",
    "end": "2065000"
  },
  {
    "text": "human operator would have to do are packed into a lot of the cass operator code and what",
    "start": "1919919",
    "end": "1926880"
  },
  {
    "text": "we're showing on this slide are some of the very cassandra specific aspects of",
    "start": "1926880",
    "end": "1932080"
  },
  {
    "text": "making things run smoothly on a kubernetes environment so the first",
    "start": "1932080",
    "end": "1937279"
  },
  {
    "text": "one here is a proper token ring initialization and that's mapping cassandra's concept",
    "start": "1937279",
    "end": "1944320"
  },
  {
    "text": "of data distribution to the uh kubernetes deployment and bootstrapping one node at a time",
    "start": "1944320",
    "end": "1951440"
  },
  {
    "text": "so this is something that's packed into the smarts of the operator and it also is doing other things like",
    "start": "1951440",
    "end": "1956559"
  },
  {
    "text": "the seed node management which is a concept in cassandra you're supposed",
    "start": "1956559",
    "end": "1961760"
  },
  {
    "text": "to start your seed nodes before you start the regular nodes and also all of the server configuration",
    "start": "1961760",
    "end": "1967600"
  },
  {
    "text": "is integrated into the crd that we'll take a look at in a minute here and the operator can handle those",
    "start": "1967600",
    "end": "1974000"
  },
  {
    "text": "rolling restarts because the way that cassandra works is to apply new configuration changes you have to",
    "start": "1974000",
    "end": "1979840"
  },
  {
    "text": "restart the nodes and so if you change something in that crd the operator will go and take that",
    "start": "1979840",
    "end": "1985600"
  },
  {
    "text": "and do a rolling restart over your cluster that's deployed in kubernetes",
    "start": "1985600",
    "end": "1991120"
  },
  {
    "text": "and by default uh the way that the cass operator works is that it is only putting one replica",
    "start": "1991120",
    "end": "2000000"
  },
  {
    "text": "per a z which is a best practice in the cassandra world in order to ensure that you have maximum availability in the",
    "start": "2000000",
    "end": "2006559"
  },
  {
    "text": "case of a cloud availability zone failure and that's one of those critical things that the",
    "start": "2006559",
    "end": "2012480"
  },
  {
    "text": "operator translates where kubernetes is like here's optimal data placement nodes put the",
    "start": "2012480",
    "end": "2018080"
  },
  {
    "text": "pods over here well the data placement in cassandra is",
    "start": "2018080",
    "end": "2023279"
  },
  {
    "text": "well known to the cluster so we need that translation layer so that we don't have all of our data in one hardware node",
    "start": "2023279",
    "end": "2031120"
  },
  {
    "text": "yeah and one of the really interesting parts about cassandra and why we believe",
    "start": "2031120",
    "end": "2036240"
  },
  {
    "text": "it fits well to the kubernetes world is because there's no concept of",
    "start": "2036240",
    "end": "2041440"
  },
  {
    "text": "a primary or secondary node so all nodes are equal and they can serve reads and",
    "start": "2041440",
    "end": "2047360"
  },
  {
    "text": "writes and so mapping that architecture to kubernetes has actually been pretty nice though",
    "start": "2047360",
    "end": "2054079"
  },
  {
    "text": "there's still certainly some areas that the cassandra database world and kubernetes world",
    "start": "2054079",
    "end": "2060000"
  },
  {
    "text": "can come together for a bit more harmony than what exists today",
    "start": "2060000",
    "end": "2065040"
  },
  {
    "text": "so now taking a look at what that cassandra data center crd looks like you can see on the left hand",
    "start": "2066079",
    "end": "2072878"
  },
  {
    "text": "side here that this is really the simplest form of the crd this is just a",
    "start": "2072879",
    "end": "2078398"
  },
  {
    "text": "one node cassandra cluster you can see we're configuring the storage config",
    "start": "2078399",
    "end": "2084800"
  },
  {
    "text": "and also on the bottom we have what would otherwise go in the cassandra configuration files",
    "start": "2084800",
    "end": "2091760"
  },
  {
    "text": "so all of this is supplied directly in that crd and on the other side here this is a bit",
    "start": "2091760",
    "end": "2097440"
  },
  {
    "text": "more of a complex example where this would be a nine node cassandra cluster we're mapping that to",
    "start": "2097440",
    "end": "2104560"
  },
  {
    "text": "three racks um and again you can see the various aspects of the server version",
    "start": "2104560",
    "end": "2111520"
  },
  {
    "text": "the size is the number of nodes racks is the distribution that you want for those different nodes and the",
    "start": "2111520",
    "end": "2117680"
  },
  {
    "text": "operator will take that and allocate the nodes accordingly such that there will be three",
    "start": "2117680",
    "end": "2122720"
  },
  {
    "text": "in each one of the racks and what those racks are azs as well if you notice",
    "start": "2122720",
    "end": "2127839"
  },
  {
    "text": "that these are east 1b east 1c east 1d this is actually being deployed in",
    "start": "2127839",
    "end": "2133680"
  },
  {
    "text": "amazon kubernetes service so we're able to map in this particular example",
    "start": "2133680",
    "end": "2139040"
  },
  {
    "text": "um the rack concept in cassandra",
    "start": "2139040",
    "end": "2144240"
  },
  {
    "text": "in kubernetes translated to amazon abstraction abstraction abstraction all",
    "start": "2144240",
    "end": "2152079"
  },
  {
    "text": "the way down one interesting thing i want to call out here is you do see this management api",
    "start": "2152079",
    "end": "2157440"
  },
  {
    "text": "off portion of this and that corresponds to something that's actually powering this",
    "start": "2157440",
    "end": "2164320"
  },
  {
    "start": "2161000",
    "end": "2236000"
  },
  {
    "text": "operator under the hood uh so the way that the cast operator works is it talks directly",
    "start": "2164320",
    "end": "2170079"
  },
  {
    "text": "to this management api for apache cassandra and this is exposing",
    "start": "2170079",
    "end": "2175280"
  },
  {
    "text": "the various operations to the operator and then it communicates those to the",
    "start": "2175280",
    "end": "2181119"
  },
  {
    "text": "cassandra cluster over unix sockets and another cool piece about this",
    "start": "2181119",
    "end": "2186560"
  },
  {
    "text": "management api and there's many of them out there authored by almost everybody that's taken a stab at",
    "start": "2186560",
    "end": "2193280"
  },
  {
    "text": "a kubernetes operator for cassandra but this particular management api",
    "start": "2193280",
    "end": "2198800"
  },
  {
    "text": "is secured by default so there's the concept of a default super user in cassandra",
    "start": "2198800",
    "end": "2204079"
  },
  {
    "text": "and this management api is actually removing that and setting things up with a a different user so that's",
    "start": "2204079",
    "end": "2212400"
  },
  {
    "text": "not exposed by default like it would be on a normal cassandra installation but the takeaway is that this management api",
    "start": "2212400",
    "end": "2220240"
  },
  {
    "text": "is really the thing that the operator uses to control the individual cassandra",
    "start": "2220240",
    "end": "2225359"
  },
  {
    "text": "nodes itself you're welcome for not having to speak jmx [Laughter]",
    "start": "2225359",
    "end": "2232000"
  },
  {
    "text": "yes yes it's closed over arrest that's right yeah that's um those of you that have",
    "start": "2232000",
    "end": "2237920"
  },
  {
    "text": "been involved in the uh cassandra world you know the gmx the java management extension is how we",
    "start": "2237920",
    "end": "2244320"
  },
  {
    "text": "get into those really juicy details of a cassandra running cluster and boy that can be really difficult so",
    "start": "2244320",
    "end": "2249920"
  },
  {
    "text": "um it's actually really cool you can run sidecar without running kubernetes although we would rather you do it in kubernetes",
    "start": "2249920",
    "end": "2255839"
  },
  {
    "text": "um the site card does provide an http rest interface into",
    "start": "2255839",
    "end": "2260880"
  },
  {
    "text": "some of those really important statistics and management aspects such as running",
    "start": "2260880",
    "end": "2266480"
  },
  {
    "text": "compactions repairs and that sort of thing um so community we are doing a lot of it",
    "start": "2266480",
    "end": "2273280"
  },
  {
    "text": "and so there's a community effort right now trying to get together on how we build um",
    "start": "2273280",
    "end": "2280000"
  },
  {
    "text": "a cassandra operator for cassandra or sorry kubernetes operator for cassandra and trying to get closer alignment to",
    "start": "2280000",
    "end": "2286720"
  },
  {
    "text": "the project um there are i think how many 12 did we count",
    "start": "2286720",
    "end": "2292400"
  },
  {
    "text": "12 different projects out there maybe more that you that have a cassandra operator um we",
    "start": "2292400",
    "end": "2298560"
  },
  {
    "text": "are thinking about our poor users out there and like we we feel your pain and we",
    "start": "2298560",
    "end": "2303920"
  },
  {
    "text": "understand that trying to pick one is difficult so as a project this is happening on the apache side we're",
    "start": "2303920",
    "end": "2309599"
  },
  {
    "text": "trying to come together i'm like how can we build this at least come together on something so uh we do",
    "start": "2309599",
    "end": "2314800"
  },
  {
    "text": "these sigs they we meet um every other week if you're interested we have you can go to the apache cassandra wiki",
    "start": "2314800",
    "end": "2321920"
  },
  {
    "text": "and there's a whole bunch of stuff on there about kubernetes we would love for you to be involved um",
    "start": "2321920",
    "end": "2327359"
  },
  {
    "text": "it's uh right now we're in the ideation phase so if you're if you love to make",
    "start": "2327359",
    "end": "2332800"
  },
  {
    "text": "big ideas then come and join us next slide",
    "start": "2332800",
    "end": "2337839"
  },
  {
    "text": "and we want you to learn so this is an opportunity for you to understand how this works so chris and i can just sit",
    "start": "2338079",
    "end": "2345040"
  },
  {
    "text": "here and talking about it you'll get all dreamy you'll want to do it right well here's your opportunity you can go do this",
    "start": "2345040",
    "end": "2350800"
  },
  {
    "text": "for free we're running we're running workshops every week um you can go see those on youtube or",
    "start": "2350800",
    "end": "2357119"
  },
  {
    "text": "you can sign up there's a sign up for the workshops but more importantly is what we're doing on slash dev and i",
    "start": "2357119",
    "end": "2364160"
  },
  {
    "text": "realized i created that link in the smaller font it's more important um our slash dev is",
    "start": "2364160",
    "end": "2371440"
  },
  {
    "text": "there it's not just for developers it's also operators but we have some really cool catacotta scenarios where you can",
    "start": "2371440",
    "end": "2377280"
  },
  {
    "text": "spin up a cassandra cluster using kubernetes um all on all free",
    "start": "2377280",
    "end": "2383599"
  },
  {
    "text": "very useful and there's constantly new content getting put on there um this is our one of our missions is to",
    "start": "2383599",
    "end": "2390320"
  },
  {
    "text": "teach people how to do this properly and to help our community be better",
    "start": "2390320",
    "end": "2395599"
  },
  {
    "text": "next please and finally if you just want to give cassandra a try without having to go through a lot of",
    "start": "2395599",
    "end": "2401680"
  },
  {
    "text": "effort uh astra data sex astra is a service we have that is super easy to use you click a couple",
    "start": "2401680",
    "end": "2409680"
  },
  {
    "text": "buttons and you have a running tier of cassandra you can do queries you can understand how the data",
    "start": "2409680",
    "end": "2414880"
  },
  {
    "text": "models work um there's a lot of it's hands-on guided walkthroughs more importantly is it's it's a free",
    "start": "2414880",
    "end": "2420880"
  },
  {
    "text": "tier forever so if you just want us i have one running all the time i have a scratch tier of cassandra whenever i want to",
    "start": "2420880",
    "end": "2427280"
  },
  {
    "text": "play around with something or try a data model um it's uh yours for life and",
    "start": "2427280",
    "end": "2432880"
  },
  {
    "text": "there's no expiration there's no you don't need a credit card to get it so um that's something you should go",
    "start": "2432880",
    "end": "2438480"
  },
  {
    "text": "claim right away and by the way datastax astra runs completely on kubernetes",
    "start": "2438480",
    "end": "2444800"
  },
  {
    "start": "2441000",
    "end": "2489000"
  },
  {
    "text": "we have a great blog post about it don't we chris yeah you helped write that thing um yeah",
    "start": "2444800",
    "end": "2451359"
  },
  {
    "text": "we we don't just uh we don't talk to talk we walk the walk so i think that's right that's it for us",
    "start": "2451359",
    "end": "2458319"
  },
  {
    "text": "are there any questions",
    "start": "2458319",
    "end": "2466480"
  },
  {
    "text": "all right guys thank you very much for a great presentation um we have some time for some questions does anyone have anything",
    "start": "2466480",
    "end": "2473119"
  },
  {
    "text": "that they would like to ask",
    "start": "2473119",
    "end": "2480079"
  },
  {
    "text": "oh the awkward first question who's going to answer this question here's one from john ray",
    "start": "2480079",
    "end": "2486079"
  },
  {
    "text": "grant where can i find the discord ah the discord yeah well we have a",
    "start": "2486079",
    "end": "2491839"
  },
  {
    "start": "2489000",
    "end": "2550000"
  },
  {
    "text": "discord for our workshops and for cassandra there's also an asf slack but um",
    "start": "2491839",
    "end": "2498720"
  },
  {
    "text": "i if you click on the if you go to the workshop uh datasets workshops there's a lot of",
    "start": "2498720",
    "end": "2503760"
  },
  {
    "text": "information on there part of that is is a discord link so um yeah we've been pretty vocal about it on",
    "start": "2503760",
    "end": "2510319"
  },
  {
    "text": "on twitter on facebook um linkedin about hey join this you know",
    "start": "2510319",
    "end": "2516800"
  },
  {
    "text": "there's a community of learners happening right now so that's probably what you're talking about",
    "start": "2516800",
    "end": "2523839"
  },
  {
    "text": "are we able to run no tool repairs and compactions",
    "start": "2526480",
    "end": "2532880"
  },
  {
    "text": "chris you just talked about that would you like to take it yeah i had to find my mute button so",
    "start": "2533200",
    "end": "2539680"
  },
  {
    "text": "that is something that the management api is exposing over rest so yes you would be able to run those",
    "start": "2539680",
    "end": "2545280"
  },
  {
    "text": "commands and you would just hit the rest api rather than running node tool directly",
    "start": "2545280",
    "end": "2550800"
  },
  {
    "text": "yeah it's clear venkata is running cassandra somewhere",
    "start": "2550800",
    "end": "2556400"
  },
  {
    "text": "and i appreciate that because it it's not completely hands off",
    "start": "2557119",
    "end": "2562880"
  },
  {
    "text": "there's still some tasks that need to happen kubernetes isn't you know is it magic cassandra sauce um it just makes the",
    "start": "2562880",
    "end": "2569520"
  },
  {
    "text": "deployment a lot easier",
    "start": "2569520",
    "end": "2578319"
  },
  {
    "text": "gavin would like to know cassandra data storage on kubernetes do you recommend it without external",
    "start": "2578319",
    "end": "2584480"
  },
  {
    "text": "storage on services like cobite",
    "start": "2584480",
    "end": "2589119"
  },
  {
    "start": "2589000",
    "end": "2773000"
  },
  {
    "text": "welcome to my hill picking storage and kubernetes for cassandra actually one of the hot topics around",
    "start": "2589680",
    "end": "2595680"
  },
  {
    "text": "data on kubernetes is how do you pick storage so let me i'll give you the general guidelines for how",
    "start": "2595680",
    "end": "2601280"
  },
  {
    "text": "to do cassandra storage and then we'll talk about the options that are available um when we do when we when we deploy nodes",
    "start": "2601280",
    "end": "2609280"
  },
  {
    "text": "let's say i'm bare metal we want to have storage as close to the",
    "start": "2609280",
    "end": "2614480"
  },
  {
    "text": "running processes as possible it's just because it being a database that is consistent meaning that it",
    "start": "2614480",
    "end": "2620079"
  },
  {
    "text": "stores data and is durable on disk and that is an important part of your latency story so when you're reading and",
    "start": "2620079",
    "end": "2627760"
  },
  {
    "text": "writing data the speed of your disk the amount of data that you can volumes that you can read and write in",
    "start": "2627760",
    "end": "2634480"
  },
  {
    "text": "concurrency is really important so of course if you're using like nvme drives on a local",
    "start": "2634480",
    "end": "2640400"
  },
  {
    "text": "hard disk that's going to be the fastest experience when you get into shared architectures that are plenty that are",
    "start": "2640400",
    "end": "2646560"
  },
  {
    "text": "just fine ebs for instance is one we use quite a bit in amazon or",
    "start": "2646560",
    "end": "2654319"
  },
  {
    "text": "any of the short shared storage provisions that you can do in any cloud provider open ebs has local pv which is pretty",
    "start": "2654319",
    "end": "2661119"
  },
  {
    "text": "cool um but when you when you look at your storage system the question you have to ask",
    "start": "2661119",
    "end": "2666480"
  },
  {
    "text": "is what what's the abstraction layer what kind of latencies does it put in between the running",
    "start": "2666480",
    "end": "2672880"
  },
  {
    "text": "database and the storage actual bits on disk um i'm not familiar too much",
    "start": "2672880",
    "end": "2680240"
  },
  {
    "text": "with uh cubite but that these are the general guidelines so",
    "start": "2680240",
    "end": "2686640"
  },
  {
    "text": "things like nfs which is a good example nfs is just an absolute no um most sand systems are",
    "start": "2686640",
    "end": "2693520"
  },
  {
    "text": "an absolute no and it's only because when you're dealing with highly concurrent workloads it can get really it can get ugly fast",
    "start": "2693520",
    "end": "2700160"
  },
  {
    "text": "there are ways to do it and um it has to do with channeling and how you get that data to and from your",
    "start": "2700160",
    "end": "2706079"
  },
  {
    "text": "writing processes that's a really long answer christian we've seen and we've seen people do that",
    "start": "2706079",
    "end": "2712000"
  },
  {
    "text": "so you can but again as patrick said not recommended yeah and uh just keep an ear out i uh",
    "start": "2712000",
    "end": "2719440"
  },
  {
    "text": "we we will be helping our community more with storage options um you know when you're using uh any",
    "start": "2719440",
    "end": "2727280"
  },
  {
    "text": "kind of stateful set which is a part of running cassandra and kubernetes and",
    "start": "2727280",
    "end": "2732480"
  },
  {
    "text": "persistent volume claims what are you claiming",
    "start": "2732480",
    "end": "2737920"
  },
  {
    "text": "how can we handle up upgrades",
    "start": "2742960",
    "end": "2747838"
  },
  {
    "text": "all right your turn chris yeah i'll have to check on the latest",
    "start": "2749040",
    "end": "2755920"
  },
  {
    "text": "for this in the cassandra operator i know that",
    "start": "2755920",
    "end": "2761838"
  },
  {
    "text": "only it may only be patch version upgrades that are supported but i'll have to double check",
    "start": "2762000",
    "end": "2767839"
  },
  {
    "text": "that to see what the latest is there because i know that's been a common question for our team as well i",
    "start": "2767839",
    "end": "2773839"
  },
  {
    "start": "2773000",
    "end": "2846000"
  },
  {
    "text": "think that's going to be something that's going to be more important with uh so cassandra 4.0 is in beta right now",
    "start": "2773839",
    "end": "2780319"
  },
  {
    "text": "that will be a major upgrade for a lot of folks and from a project standpoint upgrading from",
    "start": "2780319",
    "end": "2786880"
  },
  {
    "text": "versions all the way back to i believe 2.1 should be a single pass so",
    "start": "2786880",
    "end": "2793440"
  },
  {
    "text": "i think we would want to make sure that you can do that as well so you you got it right you upgrade the binaries running upgrade ss tables and",
    "start": "2793440",
    "end": "2800560"
  },
  {
    "text": "you're done and what are the c requirements for",
    "start": "2800560",
    "end": "2806560"
  },
  {
    "text": "local development using kubernetes with the class operator",
    "start": "2806560",
    "end": "2811680"
  },
  {
    "text": "um i do it all the time uh it works with both uh it works with",
    "start": "2814839",
    "end": "2821359"
  },
  {
    "text": "both minicube and kind are you asking for",
    "start": "2821359",
    "end": "2826880"
  },
  {
    "text": "like how many gigs of ram how many cpu all of the actually all of the",
    "start": "2826960",
    "end": "2833520"
  },
  {
    "text": "instructions for this are also on the data stacks academy github there's a kubernetes workshop",
    "start": "2833520",
    "end": "2840480"
  },
  {
    "text": "repo there that has all of the local instructions for running cassandra with the cass operator yeah if you're doing",
    "start": "2840480",
    "end": "2847760"
  },
  {
    "start": "2846000",
    "end": "2952000"
  },
  {
    "text": "really if you're doing local work um you can get away with a lot less infrastructure",
    "start": "2847760",
    "end": "2852800"
  },
  {
    "text": "than a production system gig a ram one cpu um",
    "start": "2852800",
    "end": "2858000"
  },
  {
    "text": "it doesn't take a whole lot um we you know we we understand the difference",
    "start": "2858000",
    "end": "2863920"
  },
  {
    "text": "between development and production um it's probably worth mentioning we",
    "start": "2863920",
    "end": "2869359"
  },
  {
    "text": "have datastax desktop as well chris which deploys cassandra in a",
    "start": "2869359",
    "end": "2874640"
  },
  {
    "text": "in in a uh local kubernetes environment um and then astra if you're you're",
    "start": "2874640",
    "end": "2881200"
  },
  {
    "text": "looking for just a quick cassandra to play around with yeah and again if you want to just",
    "start": "2881200",
    "end": "2887760"
  },
  {
    "text": "purely play with the cass operator uh both mini cube and kind will work for you",
    "start": "2887760",
    "end": "2893760"
  },
  {
    "text": "yeah i use kind now i move i switch from mini kube is that bad i could probably have some mini coupe",
    "start": "2893760",
    "end": "2899520"
  },
  {
    "text": "lovers out there going to be like come back it is bad kind is pretty sweet",
    "start": "2899520",
    "end": "2907279"
  },
  {
    "text": "so it's a sounds like a follow-up um so are you able to use stable loader for data loading",
    "start": "2910400",
    "end": "2917440"
  },
  {
    "text": "ss table loader uh i think we have a better answer for that",
    "start": "2917920",
    "end": "2924319"
  },
  {
    "text": "one chris do you want to take that or do you want me to",
    "start": "2924319",
    "end": "2930240"
  },
  {
    "text": "uh it should work but there are other options there um if you need to load directly from",
    "start": "2930800",
    "end": "2938480"
  },
  {
    "text": "ss tables that would be your path but there is a datastax bulk loader and also cqlsh",
    "start": "2938480",
    "end": "2945280"
  },
  {
    "text": "copy if you're looking for json or csv loading those are a couple options for you but",
    "start": "2945280",
    "end": "2952880"
  },
  {
    "start": "2952000",
    "end": "3139000"
  },
  {
    "text": "and remember if you're patrick you're going to stick to it well i was going to say if if you have",
    "start": "2952880",
    "end": "2959520"
  },
  {
    "text": "um if you have more nodes you're deploying more nodes than the original source",
    "start": "2959520",
    "end": "2965119"
  },
  {
    "text": "cluster for the ss tables you can just drop the ss tables directly into the data directory",
    "start": "2965119",
    "end": "2971280"
  },
  {
    "text": "and re-index them um that does work i don't always recommend it but like in",
    "start": "2971280",
    "end": "2977839"
  },
  {
    "text": "a in a development environment that's perfectly fine um what you need to do is run a repair",
    "start": "2977839",
    "end": "2984240"
  },
  {
    "text": "as soon as it comes back online because it has to redistribute the data but um it's one of the beautiful things about cassandra is every ss table is",
    "start": "2984240",
    "end": "2992000"
  },
  {
    "text": "uh it's immutable so there's not a change state that you have to worry about and you can read them directly into",
    "start": "2992000",
    "end": "2997440"
  },
  {
    "text": "cassandra without any trouble okay do we have any other questions at",
    "start": "2997440",
    "end": "3004720"
  },
  {
    "text": "all now that i gave like the worst possible",
    "start": "3004720",
    "end": "3011200"
  },
  {
    "text": "hack no i think we're done here well actually there's any",
    "start": "3011200",
    "end": "3017760"
  },
  {
    "text": "recommendations on disk type",
    "start": "3017760",
    "end": "3021280"
  },
  {
    "text": "as we need to end up using one volume at end",
    "start": "3023520",
    "end": "3028240"
  },
  {
    "text": "i feel like i answered that question already but i'll i'll reiterate this type well i'm assuming this is like",
    "start": "3028720",
    "end": "3037040"
  },
  {
    "text": "uh nvme versus something more traditional like spinning um the fastest",
    "start": "3037040",
    "end": "3043599"
  },
  {
    "text": "just as possible because that's going to um in aws thank you",
    "start": "3043599",
    "end": "3050240"
  },
  {
    "text": "um gb2 is awesome if you're going to use it um it's a really you could provision how",
    "start": "3050240",
    "end": "3055680"
  },
  {
    "text": "many iops and throughput you need um it's really great i this is what we use in in astra on our aws installations on",
    "start": "3055680",
    "end": "3064400"
  },
  {
    "text": "google and on azure we have different we have similar setups but uh gpg is",
    "start": "3064400",
    "end": "3070160"
  },
  {
    "text": "pretty good do you know of any others chris",
    "start": "3070160",
    "end": "3074640"
  },
  {
    "text": "just use gp2 vincata you'll be happy",
    "start": "3075839",
    "end": "3083839"
  },
  {
    "text": "anyone else",
    "start": "3084720",
    "end": "3097838"
  },
  {
    "text": "all right so looks like we don't have any more questions um that being said i'd like to thank",
    "start": "3116319",
    "end": "3121760"
  },
  {
    "text": "chris and patrick for a wonderful presentation and q a facilitation uh thank you everyone for joining us",
    "start": "3121760",
    "end": "3127599"
  },
  {
    "text": "today the webinar and recording and slides will be online later today we're looking forward to seeing everyone",
    "start": "3127599",
    "end": "3132720"
  },
  {
    "text": "at a future cncf webinar thank you again so much have a wonderful day",
    "start": "3132720",
    "end": "3139838"
  }
]