[
  {
    "text": "yeah hey folks um give you all a second to sit down uh but i want to start off with",
    "start": "399",
    "end": "8240"
  },
  {
    "text": "want to start off just by saying thank you so much to all of you for coming to our talk um",
    "start": "8240",
    "end": "14240"
  },
  {
    "text": "so today you're going to hear us tell you how to do end-to-end encryption from your browser",
    "start": "14240",
    "end": "20160"
  },
  {
    "text": "to your pod with a couple of cncf projects emissary ingress and the linker d service mesh so appreciate your time",
    "start": "20160",
    "end": "28160"
  },
  {
    "text": "thanks i'm flynn from ambassador labs i've been working with the emissary english",
    "start": "28160",
    "end": "33760"
  },
  {
    "text": "project since its humble beginnings in 2017. you can send me an email at planetdatawire.io or you can find me on",
    "start": "33760",
    "end": "41120"
  },
  {
    "text": "github and you can find me probably most easily on our open source slack as flynn",
    "start": "41120",
    "end": "46559"
  },
  {
    "text": "and we'll have links and things like that over to you thank you much my co-conspirator jason",
    "start": "46559",
    "end": "52640"
  },
  {
    "text": "morgan uh so hey i'm jason morgan i hope this isn't as loud as it feels from right",
    "start": "52640",
    "end": "58000"
  },
  {
    "text": "here but i am a technical evangelist for buoyant so that means it's my job to",
    "start": "58000",
    "end": "63199"
  },
  {
    "text": "talk to you about linker d and try and convince you that it is the best service match on the market and you want to use",
    "start": "63199",
    "end": "69119"
  },
  {
    "text": "it if you have comments you want to make about what i just said feel free to email me jason at point.io i'm looking",
    "start": "69119",
    "end": "77200"
  },
  {
    "text": "forward to hearing from you you can also if for any reason you want to find me on github you can at jason morgan and you",
    "start": "77200",
    "end": "83920"
  },
  {
    "text": "can find me on the cncf and linkerity slacks as at jason",
    "start": "83920",
    "end": "90479"
  },
  {
    "text": "so we're going to be talking today about a couple of things couple of different problems you're going to hear us talk a",
    "start": "91600",
    "end": "97280"
  },
  {
    "text": "lot about north south traffic and east-west traffic with north-south being traffic from outside your cluster coming",
    "start": "97280",
    "end": "102479"
  },
  {
    "text": "in east-west being service-to-service within your cluster as jason mentioned we're going to be",
    "start": "102479",
    "end": "107920"
  },
  {
    "text": "talking about how to set this up so that all of that traffic is encrypted all the way from your browser all the way back",
    "start": "107920",
    "end": "113200"
  },
  {
    "text": "through to the services we are going to be using emissary ingress to do the tls termination",
    "start": "113200",
    "end": "120159"
  },
  {
    "text": "and that means we're also going to be using emissary ingress to handle the certificate that secures your communication between",
    "start": "120159",
    "end": "126640"
  },
  {
    "text": "the cluster and the browser and then we'll get onto using linker d within the cluster",
    "start": "126640",
    "end": "132720"
  },
  {
    "text": "but important to note that you cannot do tls in any meaningful way without certificates so we're going to come back and talk about that a couple of points",
    "start": "132720",
    "end": "138720"
  },
  {
    "text": "here so if you're not familiar with emissary ingress it is an open source cloud",
    "start": "138720",
    "end": "145120"
  },
  {
    "text": "native self-service developer centric api gateway so if you have a cluster",
    "start": "145120",
    "end": "151440"
  },
  {
    "text": "where's my laser pointer there we go if you have a cluster over there with a",
    "start": "151440",
    "end": "156720"
  },
  {
    "text": "bunch of services in it and you have users who want to use it from outside emissary's purpose in life",
    "start": "156720",
    "end": "163519"
  },
  {
    "text": "is to sit right at the edge of the cluster and mediate all of that",
    "start": "163519",
    "end": "168840"
  },
  {
    "text": "conversation it is a cncf incubating project emissary is powered by envoy although",
    "start": "168840",
    "end": "175360"
  },
  {
    "text": "it's also designed so that you can get started quickly and not have to spend six months of your life becoming an",
    "start": "175360",
    "end": "180959"
  },
  {
    "text": "envoy expert we started as i said in 2017 since then we've seen pretty wide adoption we're",
    "start": "180959",
    "end": "186720"
  },
  {
    "text": "running in thousands of different places um and i want to emphasize that focus on self-service that turns out to be an",
    "start": "186720",
    "end": "193840"
  },
  {
    "text": "important factor in our adoption and it turns out to be something that really does work out well",
    "start": "193840",
    "end": "200400"
  },
  {
    "text": "so i said there's an api gateway one of the kind of fundamental things about api",
    "start": "200560",
    "end": "206319"
  },
  {
    "text": "gateways is routing traffic so if we have our user jane out in the cloud and she wants to request a quote then",
    "start": "206319",
    "end": "211840"
  },
  {
    "text": "emissary can field that request and hand it off to an upstream service that actually provides it if a user marco hits the same endpoint",
    "start": "211840",
    "end": "219280"
  },
  {
    "text": "he can get over depending on how you have things set up it might be the same pod handling that it might be a",
    "start": "219280",
    "end": "225200"
  },
  {
    "text": "different pod it might be a different service entirely you might be doing this with session affinity you might just be doing it to",
    "start": "225200",
    "end": "231519"
  },
  {
    "text": "handle scaling lots of different ways you can do this and emissary makes all of them pretty simple",
    "start": "231519",
    "end": "237280"
  },
  {
    "text": "however that is not the only thing that api gateways do they're not just dumb proxies",
    "start": "237280",
    "end": "242319"
  },
  {
    "text": "they're also a good place to set up things that you want to manage centrally so that your developers don't have to",
    "start": "242319",
    "end": "248000"
  },
  {
    "text": "worry about them probably the most obvious application there is",
    "start": "248000",
    "end": "253120"
  },
  {
    "text": "application security so maybe jane is allowed to update quotes but mark is not",
    "start": "253120",
    "end": "258799"
  },
  {
    "text": "and rather than making the person who wrote the quote service worry about authentication you can bundle that in",
    "start": "258799",
    "end": "264960"
  },
  {
    "text": "with emissary it's not the only thing you can also worry about observability about rate limiting about resilience if things go",
    "start": "264960",
    "end": "271520"
  },
  {
    "text": "down you can worry about hooks that make life easier for developing applications and if you're thinking about this a bit",
    "start": "271520",
    "end": "278080"
  },
  {
    "text": "you might think that some of these overlap with things that you can do in the service mesh that's okay that's why",
    "start": "278080",
    "end": "283840"
  },
  {
    "text": "it's by design api gateways work nicely with service meshes and we tend to set",
    "start": "283840",
    "end": "289440"
  },
  {
    "text": "things up so that you can decide where you want to do each of these functions you can mix and match and put them at",
    "start": "289440",
    "end": "295040"
  },
  {
    "text": "the place that makes the most sense for your organization",
    "start": "295040",
    "end": "299360"
  },
  {
    "text": "this is a quick example of some of the emissaries configuration language all of these resources are",
    "start": "300080",
    "end": "307440"
  },
  {
    "text": "things that you would use really things that an application developer or a person in the developer's role would use",
    "start": "307440",
    "end": "313360"
  },
  {
    "text": "to configure traffic routing through to their service and then there are other crds for things",
    "start": "313360",
    "end": "318639"
  },
  {
    "text": "like configuring reports you listen on protocols and host names authentication all that kind of stuff",
    "start": "318639",
    "end": "324720"
  },
  {
    "text": "those are things that are sort of more of the ops role and you know you can have one person filling",
    "start": "324720",
    "end": "331199"
  },
  {
    "text": "both of those roles in a lot of organizations that makes the most sense but as things get more complex and you",
    "start": "331199",
    "end": "337520"
  },
  {
    "text": "have more people involved it can also make sense instead to have the ops role be separate so that the operations role",
    "start": "337520",
    "end": "344800"
  },
  {
    "text": "person will worry more about the infrastructure of keeping the cluster happy and the developer role is more",
    "start": "344800",
    "end": "349840"
  },
  {
    "text": "about focusing on the applications themselves since emissary does these with separate",
    "start": "349840",
    "end": "355440"
  },
  {
    "text": "resources it's very easy to separate these re separate these concerns separate these roles and arrange it so",
    "start": "355440",
    "end": "361840"
  },
  {
    "text": "that the developers don't have to wait for the ops role the ops role doesn't have to wait for the developers to do things for their apps and neither of",
    "start": "361840",
    "end": "368479"
  },
  {
    "text": "them steps on each other's toes and on that note over to jason to talk about liquor d yeah thank you very much",
    "start": "368479",
    "end": "375680"
  },
  {
    "text": "so um for those that that aren't aware linker d is a service mesh it is built",
    "start": "375680",
    "end": "381600"
  },
  {
    "text": "to run in kubernetes it is in my opinion and i work for the company that makes it but it is the lightest",
    "start": "381600",
    "end": "388639"
  },
  {
    "text": "fastest and most secure service mesh that you can use in kubernetes and again feel free to email me if you have",
    "start": "388639",
    "end": "394880"
  },
  {
    "text": "thoughts about that and we're going to try and try and show you some of that today so it's created by the folks at buoyant uh it's been in production for a",
    "start": "394880",
    "end": "401840"
  },
  {
    "text": "really long time and we have an active community we are also by the way of all the service meshes in the cncf the only",
    "start": "401840",
    "end": "408800"
  },
  {
    "text": "one to hit graduated status in terms of open source maturity we are in use by all sorts of folks",
    "start": "408800",
    "end": "414880"
  },
  {
    "text": "including microsoft and i think just in an hour you can listen to the folks from xbox live talk about how they're using",
    "start": "414880",
    "end": "422160"
  },
  {
    "text": "linguity at massive scale to connect a bunch of clusters together and how it's made their lives easier",
    "start": "422160",
    "end": "428080"
  },
  {
    "text": "um yeah we do if you want to check out the edge you can see what's coming up there",
    "start": "428080",
    "end": "433280"
  },
  {
    "text": "are weekly edge releases where you can try all the various features and that's all i've got but the thing",
    "start": "433280",
    "end": "439360"
  },
  {
    "text": "i'd say is that the theme of this talk is that emissary ingress is a really solid gateway in ingress that you can",
    "start": "439360",
    "end": "446479"
  },
  {
    "text": "use for all sorts of stuff and we're going to integrate it with linker d in a really",
    "start": "446479",
    "end": "452479"
  },
  {
    "text": "seamless fashion right so we don't make expectations on the ingress or what they're going to do linger d focuses on",
    "start": "452479",
    "end": "459280"
  },
  {
    "text": "doing the job of a service mesh not the job of an ingress not the java an api gateway we leave that to others who have",
    "start": "459280",
    "end": "465840"
  },
  {
    "text": "more expertise in that space so here i've got a little little diagram if you're not already familiar with a",
    "start": "465840",
    "end": "471840"
  },
  {
    "text": "service mesh at its core what it is is we're going to take some some common functionality that you might put in your",
    "start": "471840",
    "end": "478160"
  },
  {
    "text": "applications like how are we going to do tls how are we going to get standard metrics and observability from our apps",
    "start": "478160",
    "end": "484960"
  },
  {
    "text": "or how are we going to do endpoint selection and we're going to move it out of our application code and into an",
    "start": "484960",
    "end": "490319"
  },
  {
    "text": "entirely separate process through which we're going to route all of the traffic in and out of that",
    "start": "490319",
    "end": "495520"
  },
  {
    "text": "application so the way we integrate with emissaries emissary sits there at the front door",
    "start": "495520",
    "end": "501120"
  },
  {
    "text": "your cluster and handles that that north-south traffic and then we're going to add a lingerie",
    "start": "501120",
    "end": "506160"
  },
  {
    "text": "proxy to emissary and that's going to put it in the mesh i'll talk about adding things to the mesh all i mean is",
    "start": "506160",
    "end": "512159"
  },
  {
    "text": "sitting a proxy beside it and letting it begin to handle their traffic the emissary instance here is going to",
    "start": "512159",
    "end": "518959"
  },
  {
    "text": "have our valid tls certificate that we can use to you know get that nice friendly friendly lock when we load up a",
    "start": "518959",
    "end": "525519"
  },
  {
    "text": "web page and linker d is going to handle another set of certificates so that each workload is identified individually they",
    "start": "525519",
    "end": "532800"
  },
  {
    "text": "can trust who they're talking to and you know do all the stuff that you want from service mesh at score it's",
    "start": "532800",
    "end": "538959"
  },
  {
    "text": "going to be pretty straightforward and we're going to stop with slides and we're going to do a demo so wish us",
    "start": "538959",
    "end": "545279"
  },
  {
    "text": "luck as we hop over to a terminal",
    "start": "545279",
    "end": "551440"
  },
  {
    "text": "this makes sense so far any any questions before we go on or y'all want to save it for the end",
    "start": "551440",
    "end": "557279"
  },
  {
    "text": "all right this question",
    "start": "557279",
    "end": "561720"
  },
  {
    "text": "actually i think there's a mic coming for you just one moment",
    "start": "564880",
    "end": "569360"
  },
  {
    "text": "i can say it back go ahead",
    "start": "575440",
    "end": "579640"
  },
  {
    "text": "so for well sir for emissary sorry go ahead the question was is there a performance hit going through emissary the answer is",
    "start": "590399",
    "end": "597600"
  },
  {
    "text": "that yeah but it's tiny",
    "start": "597600",
    "end": "602839"
  },
  {
    "text": "um the part of emissary that wrangles your data is actually envoy emissary is",
    "start": "602839",
    "end": "608000"
  },
  {
    "text": "serving more in the control plane role wrangling the envoy configuration envoy is really really fast",
    "start": "608000",
    "end": "613680"
  },
  {
    "text": "so can you measure it yes but it's very very small",
    "start": "613680",
    "end": "620480"
  },
  {
    "text": "all right so we're gonna hop into the demo and thank you very much for asking that yeah uh we're gonna hop into the demo there's gonna be more opportunities",
    "start": "620480",
    "end": "627120"
  },
  {
    "text": "to ask questions as we go so we're starting off we're just oh i'm sorry actually you you can talk through this just to just give you a heads up it",
    "start": "627120",
    "end": "633360"
  },
  {
    "text": "looks like i'm typing i'm not typing but it is happening live you can see on the right hand side here these are",
    "start": "633360",
    "end": "639600"
  },
  {
    "text": "all the pods running in my cluster is that big enough or do we need to make this bigger looks like it needs to be a",
    "start": "639600",
    "end": "644800"
  },
  {
    "text": "little bigger how's that",
    "start": "644800",
    "end": "650160"
  },
  {
    "text": "yeah it's going to be hard to see but there's just a bunch of pods running on the right so i'm not tricking you about what's going",
    "start": "650160",
    "end": "656000"
  },
  {
    "text": "on the bottom right here is going to be the custom resources that we're using for emissary to get our routing to work",
    "start": "656000",
    "end": "662800"
  },
  {
    "text": "so that we can get traffic from the browser to our environment and the left-hand side is where all the action",
    "start": "662800",
    "end": "669120"
  },
  {
    "text": "is so if you can't see this raise your hand and i'll make it bigger all right thank you so much folks so",
    "start": "669120",
    "end": "675360"
  },
  {
    "text": "while he's doing that uh we're going to make him type while i talk for a little bit",
    "start": "675360",
    "end": "680560"
  },
  {
    "text": "um in the lower right you'll notice that there's an error right now about the server if you can read it the server",
    "start": "680560",
    "end": "686079"
  },
  {
    "text": "doesn't have a resource type ambassador crds because we haven't installed them yet because we haven't installed emissary so off we go let's get ms area",
    "start": "686079",
    "end": "692640"
  },
  {
    "text": "installed um we're doing this in the way that we document so the first step is to",
    "start": "692640",
    "end": "697920"
  },
  {
    "text": "add the helm repo the datawire home repo which is where the emissary home chart lives we kind of lied we already did that",
    "start": "697920",
    "end": "704480"
  },
  {
    "text": "earlier so error message that's okay next step is very very important we are",
    "start": "704480",
    "end": "710240"
  },
  {
    "text": "going to install the emissary crds you must do this for a new installation you",
    "start": "710240",
    "end": "715440"
  },
  {
    "text": "must also do it when you're upgrading to make sure that you have the latest and greatest definition of the custom",
    "start": "715440",
    "end": "720480"
  },
  {
    "text": "resources that we use to configure emissary if you can read up in the upper left you'll also see a shiny new namespace",
    "start": "720480",
    "end": "727440"
  },
  {
    "text": "named emissary system that has a deployment called emissary api x in it that chunk of code is there to handle",
    "start": "727440",
    "end": "734560"
  },
  {
    "text": "automatic conversion between the get ambassador.i o crds actually you can use laser pointer it works better from over",
    "start": "734560",
    "end": "740399"
  },
  {
    "text": "there all right that handles conversion between the msr get ambassador dot io slash v2 crds and",
    "start": "740399",
    "end": "747440"
  },
  {
    "text": "the get ambassador i o slash v3 alpha one crds it needs to be running you shouldn't",
    "start": "747440",
    "end": "753200"
  },
  {
    "text": "have to worry about it just we do need to make sure that we wait at this point to make sure that it's running so that",
    "start": "753200",
    "end": "758560"
  },
  {
    "text": "everything works so we will wait and since it's already running this",
    "start": "758560",
    "end": "763600"
  },
  {
    "text": "won't really do anything but that's all right uh i should also point out",
    "start": "763600",
    "end": "770320"
  },
  {
    "text": "actually nevermind come back to that in a minute we're going to actually install help or install emissary using helm",
    "start": "770320",
    "end": "776399"
  },
  {
    "text": "right now this command looks kind of ugly it's not actually that bad we're going to install",
    "start": "776399",
    "end": "781440"
  },
  {
    "text": "into the emissary namespace which we are willing to create we will name the installation emissary",
    "start": "781440",
    "end": "787040"
  },
  {
    "text": "ingress we're going to use the datawire emissary ingress chart and since this is just a demo running on a laptop",
    "start": "787040",
    "end": "793360"
  },
  {
    "text": "we're going to set the replicas count to one so we only get one replica running don't do this in",
    "start": "793360",
    "end": "798839"
  },
  {
    "text": "production and then again we're going to wait for emissary to actually be running so",
    "start": "798839",
    "end": "804800"
  },
  {
    "text": "you'll see now the emissary namespace and you'll see various things running",
    "start": "804800",
    "end": "810480"
  },
  {
    "text": "i'd like to draw your attention to the fact that all of these show that there's one pot one container running in each",
    "start": "810480",
    "end": "815839"
  },
  {
    "text": "pod here in the emissary ingress agent and the hemisphere of ingress pods themselves",
    "start": "815839",
    "end": "822639"
  },
  {
    "text": "so the reason that we're highlighting that right is because for now we have the one process per pod right but as we",
    "start": "822639",
    "end": "829279"
  },
  {
    "text": "add things to the service mesh we're going to add a second process that is going to be the lingerie proxy and",
    "start": "829279",
    "end": "834320"
  },
  {
    "text": "that's going to be the thing that lets you into the mesh and there we have a running emissary",
    "start": "834320",
    "end": "840480"
  },
  {
    "text": "nice you'll also note in the lower right that the error message has changed from no ambassador crds type to now we have no",
    "start": "840480",
    "end": "847279"
  },
  {
    "text": "resources the types are there we just haven't configured it yet so let's fix that",
    "start": "847279",
    "end": "853680"
  },
  {
    "text": "oh no let's do tls first tls um we mentioned earlier",
    "start": "853680",
    "end": "859279"
  },
  {
    "text": "that to do tls in any meaningful way you must have a certificate for that",
    "start": "859279",
    "end": "864399"
  },
  {
    "text": "there are a lot of different ways you can get a certificate this one happens to be one that we generated ahead of time from let's encrypt let's encrypt is",
    "start": "864399",
    "end": "871839"
  },
  {
    "text": "cool strongly recommended uh since we are at a conference with conference wi-fi we downloaded it ahead of time and",
    "start": "871839",
    "end": "877920"
  },
  {
    "text": "saved it on the laptop for emissary to be able to use the tls secret tls certificate we need to",
    "start": "877920",
    "end": "883600"
  },
  {
    "text": "install it into a kubernetes secret so there we go we've got the secret ready to go",
    "start": "883600",
    "end": "890000"
  },
  {
    "text": "and now we're going to actually configure emissary so this is what the configuration looks like",
    "start": "891360",
    "end": "898959"
  },
  {
    "text": "i'm not actually going to read this line by line but a couple of relevant things the host",
    "start": "898959",
    "end": "904320"
  },
  {
    "text": "record there is telling us that for this demo we're going to be using this",
    "start": "904320",
    "end": "909560"
  },
  {
    "text": "emojivoro.k8s.59s.io hostname you'll see that in the browser we have a mapping where",
    "start": "909560",
    "end": "915279"
  },
  {
    "text": "any prefix arriving at that host module.k8s59s.io",
    "start": "915279",
    "end": "921879"
  },
  {
    "text": "anything there is going to get routed to the web service in the emojivo namespace if you could page down please",
    "start": "922480",
    "end": "928880"
  },
  {
    "text": "and right at the very bottom we have some listeners that say yeah we're going to do http on port 8080 and we're going",
    "start": "928880",
    "end": "934399"
  },
  {
    "text": "to do https on port 8443 so happy to take questions about that",
    "start": "934399",
    "end": "941120"
  },
  {
    "text": "we can talk about that in as much detail as you want right now let's go ahead and get it applied",
    "start": "941120",
    "end": "947279"
  },
  {
    "text": "and as this is running you will see resources appear in the lower right i didn't talk about it but we also have",
    "start": "948639",
    "end": "954560"
  },
  {
    "text": "hosts and mapping and things like that for the dashboard that jason will show you as well",
    "start": "954560",
    "end": "960160"
  },
  {
    "text": "all right onward at this point we should be good to go",
    "start": "960160",
    "end": "965360"
  },
  {
    "text": "and we should be able to flip over to our web browser yep and show that emojimoto is running",
    "start": "965360",
    "end": "972639"
  },
  {
    "text": "so at this point you'll notice that you've got the little padlock up there if he clicks through",
    "start": "976639",
    "end": "981839"
  },
  {
    "text": "the connections secure there's a thing up there that says certificate is valid the browser is going through talking to",
    "start": "981839",
    "end": "987839"
  },
  {
    "text": "our running cluster talking to emissary emissary is terminating tls feeding back the certificate to make it happy and then",
    "start": "987839",
    "end": "993839"
  },
  {
    "text": "emissary is going ahead and sending it through to the upstream emoji about service and this all works we can vote for",
    "start": "993839",
    "end": "1000000"
  },
  {
    "text": "emojis we can view the leaderboard we can do all of our stuff",
    "start": "1000000",
    "end": "1005199"
  },
  {
    "text": "and nothing i've said so far has anything to do with linker d because this has all been about getting emissary running",
    "start": "1005199",
    "end": "1010560"
  },
  {
    "text": "although you'll know it really wasn't all that difficult so over to jason to actually install linker",
    "start": "1010560",
    "end": "1016079"
  },
  {
    "text": "d yeah thank you so much so yeah what we've got now we have tls termination happening at",
    "start": "1016079",
    "end": "1022240"
  },
  {
    "text": "emissary ingress so we're halfway there browser to our kubernetes cluster we're",
    "start": "1022240",
    "end": "1027760"
  },
  {
    "text": "secured with uh with tls and now what we're going to do is figure out how do we encrypt from that ingress",
    "start": "1027760",
    "end": "1035678"
  },
  {
    "text": "all the way through to the various pots that make up emoji photo we're dealing with three services we've got a web",
    "start": "1035679",
    "end": "1040959"
  },
  {
    "text": "front end and two back ends one for giving us our awesome emoji pictures and",
    "start": "1040959",
    "end": "1046720"
  },
  {
    "text": "one for registering our votes so first off i'm going to install linker d we're going to do a curl to bash i'm",
    "start": "1046720",
    "end": "1054160"
  },
  {
    "text": "sure folks have opinions about that and we're going to entirely sidestep them for this conversation but again feel",
    "start": "1054160",
    "end": "1060799"
  },
  {
    "text": "free to put in an email i'm happy to happy to listen to you there so we're doing the install so there's a little",
    "start": "1060799",
    "end": "1066080"
  },
  {
    "text": "bit of us lying to you but we're we're lying to you in an honest way here",
    "start": "1066080",
    "end": "1071280"
  },
  {
    "text": "i have i already have linkedin cli downloaded because i'm not relying on conference wi-fi because i'm insecure",
    "start": "1071280",
    "end": "1078160"
  },
  {
    "text": "um but this is the exact steps you'd use to install the link or dcli on your laptop",
    "start": "1078160",
    "end": "1084080"
  },
  {
    "text": "and like i said i'm not really typing but when i press enter real commands are being entered or put in being run",
    "start": "1084080",
    "end": "1091280"
  },
  {
    "text": "right so we've got the linker d cli we're going to update our path here just to make sure that it's available",
    "start": "1091280",
    "end": "1097520"
  },
  {
    "text": "and now we're going to check our version so i'm running the latest linker d2 11.2",
    "start": "1097520",
    "end": "1103120"
  },
  {
    "text": "that's on the client side and i have nothing on my nothing on my kubernetes cluster gonna",
    "start": "1103120",
    "end": "1109120"
  },
  {
    "text": "make this smaller because we're gonna see i'm gonna install it and a bunch of stuff is gonna happen",
    "start": "1109120",
    "end": "1114480"
  },
  {
    "text": "but first let's validate that this actually is gonna work so here we've got a situation",
    "start": "1114480",
    "end": "1120480"
  },
  {
    "text": "where i'm running a k-3s cluster on docker desktop using wsl on windows 11",
    "start": "1120480",
    "end": "1128160"
  },
  {
    "text": "because i like to live dangerously so let's test because he's insane we'll test just how crazy it is and see",
    "start": "1128160",
    "end": "1135520"
  },
  {
    "text": "if we can really do what we want to do using the linker dcli so what i'm hoping to see is a bunch of",
    "start": "1135520",
    "end": "1141200"
  },
  {
    "text": "check marks and i got my final all checks are checked and with that we're going to install",
    "start": "1141200",
    "end": "1147840"
  },
  {
    "text": "linker d so here the linker dcli is going to generate a bunch of yaml right you all",
    "start": "1147840",
    "end": "1154559"
  },
  {
    "text": "are probably used to it here if you're a kubecon uh it's going to generate it and i'm going to submit it directly to the",
    "start": "1154559",
    "end": "1160320"
  },
  {
    "text": "kubernetes api you can install linkerd via the cli you can install linker d via",
    "start": "1160320",
    "end": "1165600"
  },
  {
    "text": "your favorite get ops tool you can install linker d with helm and you can install it with any other particular set",
    "start": "1165600",
    "end": "1172000"
  },
  {
    "text": "of fantastic continuous delivery tools you feel like using and then once this is done we're going to actually check",
    "start": "1172000",
    "end": "1177840"
  },
  {
    "text": "that lingerie is installed and happy and healthy so less talk more action",
    "start": "1177840",
    "end": "1185200"
  },
  {
    "text": "so we can see some pods popping into existence on the bottom here these are the pon the components of the",
    "start": "1185200",
    "end": "1191679"
  },
  {
    "text": "core lingerie install so we have an identity service it's actually going to generate the certificates that our",
    "start": "1191679",
    "end": "1197760"
  },
  {
    "text": "individual workloads are going to use as they identify themselves and work together on the network",
    "start": "1197760",
    "end": "1203280"
  },
  {
    "text": "we have a proxy injector which is a mutating web hook that's actually going to go when we've added an annotation to a workload",
    "start": "1203280",
    "end": "1210559"
  },
  {
    "text": "or a namespace that says please add the linkerity proxy it's going to go ahead and add the proxy for you and all you're",
    "start": "1210559",
    "end": "1217200"
  },
  {
    "text": "going to do is is one line a and last but not least we have the destination controller which is going to",
    "start": "1217200",
    "end": "1222480"
  },
  {
    "text": "help you decide or help linkery decide what to do with your traffic and now that our check marks are once",
    "start": "1222480",
    "end": "1228640"
  },
  {
    "text": "again uh happy face here with the green check mark we're gonna go forward",
    "start": "1228640",
    "end": "1234960"
  },
  {
    "text": "so this is the demo and linkedin is broken up into a couple parts so i wanna show y'all what you know a fancy",
    "start": "1234960",
    "end": "1240880"
  },
  {
    "text": "dashboard looks like with linker d you don't need to use it but i use it every time i demo it so i'm gonna use the",
    "start": "1240880",
    "end": "1246559"
  },
  {
    "text": "linker d visualization component and i'm going to install it here with lingard dcli exact same process you saw before",
    "start": "1246559",
    "end": "1255280"
  },
  {
    "text": "we're going to present you audience with an option you can ask a question here or you can hear me tell a",
    "start": "1255280",
    "end": "1261200"
  },
  {
    "text": "terrible joke while we're waiting all right don't do it you haven't heard",
    "start": "1261200",
    "end": "1267120"
  },
  {
    "text": "it's terrible now you've chosen your fate so i have a i have a udp joke for you",
    "start": "1267120",
    "end": "1273679"
  },
  {
    "text": "you may not get it yeah yeah i wonder next time we do this talk",
    "start": "1273679",
    "end": "1279679"
  },
  {
    "text": "you're just gonna next time we do this talk you're gonna just you know render the lingerie check in interpretive dance right oh that's",
    "start": "1279679",
    "end": "1286880"
  },
  {
    "text": "the next one uh so what we've got here is the visualization components are being installed so we have a little",
    "start": "1286880",
    "end": "1292000"
  },
  {
    "text": "metric server we have a grafana and a prometheus so this is an in-memory prometheus when you go to production",
    "start": "1292000",
    "end": "1298000"
  },
  {
    "text": "with linker d we recommend and have documentation for how you can use your own prometheus instance or federate this",
    "start": "1298000",
    "end": "1305280"
  },
  {
    "text": "in-memory prometheus with the rest of your permissions infrastructure right that's a bit of advice otherwise you can",
    "start": "1305280",
    "end": "1311600"
  },
  {
    "text": "get like four six hours of metrics at best which isn't necessarily what you want",
    "start": "1311600",
    "end": "1317520"
  },
  {
    "text": "we've got our green check marks so we're going to go forward up until now all i've done was get",
    "start": "1317520",
    "end": "1323280"
  },
  {
    "text": "linker d running so we're going to actually integrate linkery or we're going to add some things to the mesh so",
    "start": "1323280",
    "end": "1328480"
  },
  {
    "text": "we've got that emoji photo application and it works we have emissary ingress and it works and our idea here is that",
    "start": "1328480",
    "end": "1336000"
  },
  {
    "text": "if you use a service mesh you should be able to add your applications that work in kubernetes and after you do it they",
    "start": "1336000",
    "end": "1342880"
  },
  {
    "text": "still work right just marginally better so that's the that's the hope here and",
    "start": "1342880",
    "end": "1349280"
  },
  {
    "text": "y'all can y'all can keep me honest let me know if that's going to be true so here is the horror of integrating",
    "start": "1349280",
    "end": "1356159"
  },
  {
    "text": "emissary ingress with linker d we're going to get the deployment again there's tons of ways you can do it i'm",
    "start": "1356159",
    "end": "1362159"
  },
  {
    "text": "going to do it very manually i'm going to get the deployment i'm going to output it as yaml then i'm going to send",
    "start": "1362159",
    "end": "1367679"
  },
  {
    "text": "it to the link or dcli and the link or dcli is going to look like all right is this yaml yes awesome is a deployment",
    "start": "1367679",
    "end": "1373919"
  },
  {
    "text": "yes awesome and it's going to add one line of annotation that's going to say linker",
    "start": "1373919",
    "end": "1379679"
  },
  {
    "text": "dot io slash proxy or slash inject colon enabled",
    "start": "1379679",
    "end": "1385200"
  },
  {
    "text": "that's it and then when we run it we get ourselves a couple things the thing i'm going to tell you about first",
    "start": "1385200",
    "end": "1391520"
  },
  {
    "text": "is we're going to get a new instance of the emissary ingress right that now instead of one container per pod has two",
    "start": "1391520",
    "end": "1398799"
  },
  {
    "text": "the emissary instance itself and the linker d2 proxy we also get a warning because i",
    "start": "1398799",
    "end": "1405280"
  },
  {
    "text": "installed this with helm and then i modified it manually and kubernetes wishes i wouldn't have done that but",
    "start": "1405280",
    "end": "1410640"
  },
  {
    "text": "presumably it's just as easy to go and add that annotation directly using your favorite github stuff anyway right yeah",
    "start": "1410640",
    "end": "1416400"
  },
  {
    "text": "absolutely and if you want an example uh git ops con is going to be coming up",
    "start": "1416400",
    "end": "1421600"
  },
  {
    "text": "sometime in the not too distant future and we'll be able to show you that there",
    "start": "1421600",
    "end": "1426960"
  },
  {
    "text": "so that's that's the emissary integration 100 of it we're not modifying the emissary crds we're not",
    "start": "1426960",
    "end": "1433679"
  },
  {
    "text": "changing certificates out we're not doing anything beyond that now to get it all the way through to our emoji photo",
    "start": "1433679",
    "end": "1438880"
  },
  {
    "text": "application we're going to do the same thing we just did but we're going to do it for the emoji photo components once",
    "start": "1438880",
    "end": "1444480"
  },
  {
    "text": "again we're going to add an annotation i could have done this at the namespace level but i wanted to show you all the glory of the cli",
    "start": "1444480",
    "end": "1452000"
  },
  {
    "text": "and we're going to go ahead and put that in so once again we're going to see pods roll so emoji photo just doubled in size",
    "start": "1452000",
    "end": "1459840"
  },
  {
    "text": "right yeah perfect just doubled in size because we got all new components all of them now",
    "start": "1459840",
    "end": "1465279"
  },
  {
    "text": "having the lingerie proxy edited in this isn't like crazy exciting because",
    "start": "1465279",
    "end": "1471760"
  },
  {
    "text": "everything just worked right well we'll see let's load everything up supposed to",
    "start": "1471760",
    "end": "1477600"
  },
  {
    "text": "just work let's load up the app and see if that's still true so let's vote on our favorite oh it still works you see",
    "start": "1477600",
    "end": "1483679"
  },
  {
    "text": "that i've still got my valid tls certificate my connection is secure",
    "start": "1483679",
    "end": "1488720"
  },
  {
    "text": "i can i can vote on my sunglasses that's good we lost all our votes from before",
    "start": "1488720",
    "end": "1494320"
  },
  {
    "text": "because this was everything was stored in memory and it's gone but",
    "start": "1494320",
    "end": "1499760"
  },
  {
    "text": "that's life we're going to turn on a little auto refresher yes please",
    "start": "1499760",
    "end": "1504960"
  },
  {
    "text": "and so this is just going to refresh the page over and over again so we can run some traffic through and we're going to watch",
    "start": "1504960",
    "end": "1510799"
  },
  {
    "text": "uh the browser to emissary to our various emoji photo components to",
    "start": "1510799",
    "end": "1517039"
  },
  {
    "text": "the dashboard speaking of which we have the lingerie dashboard right before there was no backing service once we",
    "start": "1517039",
    "end": "1522240"
  },
  {
    "text": "configured emissary to talk to the dashboard all we have to do is actually make a dashboard",
    "start": "1522240",
    "end": "1528000"
  },
  {
    "text": "exist hit refresh and now i've got a bunch of metrics",
    "start": "1528000",
    "end": "1534159"
  },
  {
    "text": "about my environment that i didn't have before i haven't modified the emoji photo app you can you can take it on",
    "start": "1534159",
    "end": "1541200"
  },
  {
    "text": "faith or you can actually go play with the app itself there's nothing linkery specific happening here at all",
    "start": "1541200",
    "end": "1547279"
  },
  {
    "text": "right we added the proxy and now we're ready to go uh a little little fun fact",
    "start": "1547279",
    "end": "1552720"
  },
  {
    "text": "um well no no fun facts where you don't have enough time uh we've got a graph of the way it works",
    "start": "1552720",
    "end": "1559120"
  },
  {
    "text": "we've got a view of all of our components and we can go look at our web front end and",
    "start": "1559120",
    "end": "1566080"
  },
  {
    "text": "we can see that the web front end sees that it's talking to emissary ingress right and going all the way through",
    "start": "1566080",
    "end": "1573120"
  },
  {
    "text": "we can see the individual api calls that are being made to our environment right",
    "start": "1573120",
    "end": "1578400"
  },
  {
    "text": "both from emissary and from the other components within the environment we can see whether or not those calls are",
    "start": "1578400",
    "end": "1583919"
  },
  {
    "text": "successful i haven't instrumented tracing there's no like jaeger behind the scenes or anything like that although this does",
    "start": "1583919",
    "end": "1589840"
  },
  {
    "text": "integrate with jaeger if that's something that you're you're interested in but is there some way we can verify that",
    "start": "1589840",
    "end": "1596320"
  },
  {
    "text": "it's actually doing that's a great question that's a great question to the service so i'm telling you you",
    "start": "1596320",
    "end": "1603120"
  },
  {
    "text": "know there's there's mtls here but how do we know for sure that's going on well you're still i'm",
    "start": "1603120",
    "end": "1609200"
  },
  {
    "text": "still actually going to ask you to trust me but i'm going to show you some output from the linker dcli that's going to",
    "start": "1609200",
    "end": "1614559"
  },
  {
    "text": "look at the various requests and tell you what it believes the tls status is",
    "start": "1614559",
    "end": "1619919"
  },
  {
    "text": "so i'm going to do a tap i just want to grab the metadata about every single request that's flowing through the",
    "start": "1619919",
    "end": "1625200"
  },
  {
    "text": "environment there's a lot going on here i'm going to output it as json it's going to be messy but",
    "start": "1625200",
    "end": "1631679"
  },
  {
    "text": "we'll we'll figure it out together all right so here i can see an individual request i",
    "start": "1631679",
    "end": "1638559"
  },
  {
    "text": "can see a lot about an individual request including the source destination all sorts of stuff",
    "start": "1638559",
    "end": "1644799"
  },
  {
    "text": "in this case our source was emissary ingress which is convenient because that's what i'm trying to prove",
    "start": "1644799",
    "end": "1650240"
  },
  {
    "text": "and then our destination is emoji photo great the web component and it was tls",
    "start": "1650240",
    "end": "1655760"
  },
  {
    "text": "the entire way and that's our whole story",
    "start": "1655760",
    "end": "1661120"
  },
  {
    "text": "thank you folks",
    "start": "1661120",
    "end": "1664440"
  },
  {
    "text": "one thing i want to reiterate through all this is that after we installed linkery we started",
    "start": "1668399",
    "end": "1673760"
  },
  {
    "text": "off by installing emissary configuring and configurating the routing for emissary configuring the routing for",
    "start": "1673760",
    "end": "1679200"
  },
  {
    "text": "emissary then we installed linkery we did not touch the emissary configuration",
    "start": "1679200",
    "end": "1684480"
  },
  {
    "text": "after we installed linkery other than injecting the one annotation that you were talking about on the",
    "start": "1684480",
    "end": "1689679"
  },
  {
    "text": "emissary deployment itself we didn't go back and touch the mappings or any of the other stuff for the cluster we",
    "start": "1689679",
    "end": "1695360"
  },
  {
    "text": "simply put the two things in there and worked which is what cncf projects are supposed to do",
    "start": "1695360",
    "end": "1701440"
  },
  {
    "text": "so again no configuration changes after that yeah thanks so much for joining us any",
    "start": "1701440",
    "end": "1707440"
  },
  {
    "text": "questions any questions go ahead he's going to come with a mic i think or he's going to pick who's going",
    "start": "1707440",
    "end": "1714000"
  },
  {
    "text": "to get it we'll let randy do his job pardon me i'm not i don't claim that power",
    "start": "1714000",
    "end": "1721278"
  },
  {
    "text": "thank you for the wonderful talk uh i have a question uh how does linking link to the",
    "start": "1722880",
    "end": "1729760"
  },
  {
    "text": "solve this a cross-class communication that means let's say if i have two clusters in yeah two different regions",
    "start": "1729760",
    "end": "1737200"
  },
  {
    "text": "yeah absolutely so uh the question was i believe how does lingerie do cross-cluster communication",
    "start": "1737200",
    "end": "1742559"
  },
  {
    "text": "yeah so we use those linguity proxies and essentially when you add lingerie multi-cluster you get into more complex",
    "start": "1742559",
    "end": "1749919"
  },
  {
    "text": "linguity but it's not brutally complex you're going to install a component called the lingerity multi-cluster component it's going to create two new",
    "start": "1749919",
    "end": "1756720"
  },
  {
    "text": "services one on each cluster and those services are going to have an external load",
    "start": "1756720",
    "end": "1762159"
  },
  {
    "text": "balancer they're linked proxies and then we're going to link those those clusters together with a cli command we're we're",
    "start": "1762159",
    "end": "1768159"
  },
  {
    "text": "going to get some service counts and permissions and role bindings and all that goodness from one class there we're going to add it to the other and then",
    "start": "1768159",
    "end": "1774480"
  },
  {
    "text": "they're going to begin speaking they require a layer 7 https connection between them so no routing requirements",
    "start": "1774480",
    "end": "1781279"
  },
  {
    "text": "no assumptions about your network right and each service or each pod when you go to make",
    "start": "1781279",
    "end": "1787919"
  },
  {
    "text": "a call between clusters using linkedin you call to what looks like an in-cluster service",
    "start": "1787919",
    "end": "1794480"
  },
  {
    "text": "right so i'm going to call to you know remoteservice.mynamespace.cluster.local",
    "start": "1794480",
    "end": "1799159"
  },
  {
    "text": "and then linkerd is going to handle routing you to your gateway in your cluster across that https connection",
    "start": "1799679",
    "end": "1806000"
  },
  {
    "text": "between your your clusters and then from the gateway to your application and if you'd like to know more i'd love",
    "start": "1806000",
    "end": "1812559"
  },
  {
    "text": "to hit you up on email and just give you a whole walkthrough of multi-cluster yeah thank you really appreciate the",
    "start": "1812559",
    "end": "1818559"
  },
  {
    "text": "question anybody else we've got a we've got an online question um",
    "start": "1818559",
    "end": "1824080"
  },
  {
    "text": "any plan to um integrate link or d with grpc proxy list mesh well so uh proxy",
    "start": "1824080",
    "end": "1830559"
  },
  {
    "text": "list mesh that i don't know but linkery you wouldn't there wouldn't be a lot of point right like linker d does grpc load",
    "start": "1830559",
    "end": "1837520"
  },
  {
    "text": "balancing for you right it's one of the first use cases that it tackled so if you're doing grpc uh in kubernetes if",
    "start": "1837520",
    "end": "1844559"
  },
  {
    "text": "you add link rd to it you will get request level load balancing you'll get proper distribution of your grpc request",
    "start": "1844559",
    "end": "1852000"
  },
  {
    "text": "across all of its servers and you'll find pretty dramatic performance improvements in fact there's a cncf case",
    "start": "1852000",
    "end": "1858480"
  },
  {
    "text": "study for a company named entane they built a massive gambling platform on top of on top of kubernetes and they used",
    "start": "1858480",
    "end": "1866480"
  },
  {
    "text": "they said with linker d that they achieved over a 10x improvement in their scale while driving down costs and",
    "start": "1866480",
    "end": "1873039"
  },
  {
    "text": "that's a cncf case study that they published",
    "start": "1873039",
    "end": "1878440"
  },
  {
    "text": "thank you great demo first of all um i'm really interested in um",
    "start": "1883120",
    "end": "1889120"
  },
  {
    "text": "encryption and she showed us how to inject a certificate i was wondering if",
    "start": "1889120",
    "end": "1894720"
  },
  {
    "text": "you could integrate self-manager and especially how secure it could be to communicate",
    "start": "1894720",
    "end": "1901919"
  },
  {
    "text": "internally service to service and if you could um generate it for each connection",
    "start": "1901919",
    "end": "1909360"
  },
  {
    "text": "different certificate yeah so we do already so you you do get a unique",
    "start": "1909360",
    "end": "1914880"
  },
  {
    "text": "certificate for every single pod right those certificates by default last 24 hours and they're going to be tied to",
    "start": "1914880",
    "end": "1921519"
  },
  {
    "text": "the kubernetes service account that you create with it we recommend for production users we have a if you're",
    "start": "1921519",
    "end": "1926640"
  },
  {
    "text": "looking at running linkedin production look up lingerie production runbook we publish it we tell you what to check and",
    "start": "1926640",
    "end": "1933200"
  },
  {
    "text": "what to do before you go to production with with linker d and again you have my email hit me up i'll just talk to you",
    "start": "1933200",
    "end": "1939039"
  },
  {
    "text": "about it i get you ready for it one thing we want you to do is use something like cert manager to rotate the",
    "start": "1939039",
    "end": "1945919"
  },
  {
    "text": "intermediary certificate that lingerie uses to issue workload certificates and",
    "start": "1945919",
    "end": "1950960"
  },
  {
    "text": "if that's a lot again happy to talk about certificate architecture in linguity with any of you",
    "start": "1950960",
    "end": "1957120"
  },
  {
    "text": "did that help did i answer your question awesome thank you so much anybody else",
    "start": "1957120",
    "end": "1964159"
  },
  {
    "text": "well linker d uses a sidecar based model that's right how do you look towards the",
    "start": "1968240",
    "end": "1974159"
  },
  {
    "text": "ebpf things that are now starting yeah so ebpf like so there's kind of a lot here",
    "start": "1974159",
    "end": "1980960"
  },
  {
    "text": "right but ebpf is a way to get stuff into the kernel without getting it into the linux kernel right and so there's",
    "start": "1980960",
    "end": "1987360"
  },
  {
    "text": "all sorts of stuff you can do with ebpf like say you're using something like psyllium you can replace the way",
    "start": "1987360",
    "end": "1993200"
  },
  {
    "text": "iptables works with their ebpf module and so the way we work with psyllium actually",
    "start": "1993200",
    "end": "1999200"
  },
  {
    "text": "you're going to be doing a demo on it tomorrow i believe right that shows you how you use it so lingerie consumes the",
    "start": "1999200",
    "end": "2005919"
  },
  {
    "text": "network we don't make assumptions about it we just write it we're you know if you think of the tcp model we're at",
    "start": "2005919",
    "end": "2012640"
  },
  {
    "text": "layers four through seven we don't care about layer three we let you do it however you want so if you're",
    "start": "2012640",
    "end": "2018559"
  },
  {
    "text": "running an ebpf module that replaces the way networking works or changes it to make it more efficient go nuts we love",
    "start": "2018559",
    "end": "2025360"
  },
  {
    "text": "it we consume it natively without really interacting with it",
    "start": "2025360",
    "end": "2030158"
  },
  {
    "text": "did that help awesome thank you and feel free to bug me more if you want me to go longer",
    "start": "2030880",
    "end": "2037120"
  },
  {
    "text": "first thanks for the demo uh can we achieve zero trust network with link rd",
    "start": "2037120",
    "end": "2043840"
  },
  {
    "text": "that's a big question i'm going to go ahead and say yes because no one i think can challenge me right now because we're",
    "start": "2043840",
    "end": "2050079"
  },
  {
    "text": "out of time but i would say if you define zero trust networking as",
    "start": "2050079",
    "end": "2056158"
  },
  {
    "text": "every single interaction between your services and kubernetes is based on an allow only model where i",
    "start": "2056159",
    "end": "2063919"
  },
  {
    "text": "can say only pods that have the identity of x are allowed to talk to pods that have the",
    "start": "2063919",
    "end": "2070638"
  },
  {
    "text": "identity of why you can do that with linguity policy and that's actually as of linguity 2.11 that you can use policy",
    "start": "2070639",
    "end": "2078000"
  },
  {
    "text": "to do that and there's some big improvements in the way we do policy so right now",
    "start": "2078000",
    "end": "2083040"
  },
  {
    "text": "lingerie 2.11 was the first iteration in which we introduced the ability to do policy right or or zero trust if that's",
    "start": "2083040",
    "end": "2090240"
  },
  {
    "text": "a bit marketing term wise right but that concept came in in 211",
    "start": "2090240",
    "end": "2095520"
  },
  {
    "text": "and there's a big refactor coming in 212 that should make it a fair bit easier to use as well as more granular and",
    "start": "2095520",
    "end": "2101839"
  },
  {
    "text": "lingerie 212 should be out fairly soon did that help and answer your question",
    "start": "2101839",
    "end": "2107119"
  },
  {
    "text": "all right awesome thank you so much folks this has been amazing thanks very much everyone awesome talk",
    "start": "2107119",
    "end": "2113200"
  },
  {
    "text": "thanks everybody",
    "start": "2113200",
    "end": "2116440"
  }
]