[
  {
    "text": "we're Sig honk and this is malicious compliance Reflections on trusting container scanners if you're here for",
    "start": "359",
    "end": "7319"
  },
  {
    "text": "murderlicious compliance hey so are we if you're not here for malicious compliance you're in the wrong room but",
    "start": "7319",
    "end": "13259"
  },
  {
    "text": "we're happy to see you anyway I'm Brad giesteman my pronouns are he him and I'm a staff security engineer at",
    "start": "13259",
    "end": "19800"
  },
  {
    "text": "ghost security and I enjoy hacking cloud and kubernetes with my friends here I'm Ian Coldwater pronouns they them I'm",
    "start": "19800",
    "end": "27180"
  },
  {
    "text": "an independent security researcher a longtime Community organizer and Sig security co-chair I love hacking weird",
    "start": "27180",
    "end": "33180"
  },
  {
    "text": "machines and bringing people together and I'm looking for work if you're hiring hi everyone my name is Rory McKeon my",
    "start": "33180",
    "end": "39600"
  },
  {
    "text": "programs are hihem I'm a senior security Advocate with datadog and I'd like to learn about security and write blogs",
    "start": "39600",
    "end": "46140"
  },
  {
    "text": "hey everybody I'm Duffy Cooley I'm the field CTO at ice surveillance where I get to work on things like psyllium and",
    "start": "46140",
    "end": "51719"
  },
  {
    "text": "tetragon and ebpf I'm excited to be here with all of you in person and I'm especially excited that we are all here",
    "start": "51719",
    "end": "58860"
  },
  {
    "text": "finally all together on the same stage",
    "start": "58860",
    "end": "63379"
  },
  {
    "text": "that's cool oh clickers why is that doing that one second",
    "start": "66240",
    "end": "72659"
  },
  {
    "text": "okay I'm gonna go drive this over here",
    "start": "72659",
    "end": "77000"
  },
  {
    "text": "so Sig honk isn't an official kubernetes Sig we're a hacker crew who have been poking at kubernetes for years and we",
    "start": "78060",
    "end": "84780"
  },
  {
    "text": "work together to share attacker perspectives and help the whole Community level up",
    "start": "84780",
    "end": "90798"
  },
  {
    "text": "so why are we here today we have a question for all of you real quick who here has ever heard of containers",
    "start": "91560",
    "end": "101159"
  },
  {
    "text": "love it we had a feeling by another show of hands who here has ever used a container vulnerability",
    "start": "101159",
    "end": "107340"
  },
  {
    "text": "scanner before wow okay great perfect",
    "start": "107340",
    "end": "113240"
  },
  {
    "text": "so one thing you might have noticed is that governments Auditors and your security teams are asking you to scan",
    "start": "113880",
    "end": "120540"
  },
  {
    "text": "all of your container images for vulnerabilities so they are more secure but we don't hear as much about the",
    "start": "120540",
    "end": "126540"
  },
  {
    "text": "details and as it turns out the details are important",
    "start": "126540",
    "end": "132120"
  },
  {
    "text": "so what do containers scanners actually do and what problems do they solve and how do container scanners work are they",
    "start": "132120",
    "end": "139379"
  },
  {
    "text": "all the same can you always trust the results let's find out",
    "start": "139379",
    "end": "144599"
  },
  {
    "text": "in this talk we'll be mainly covering four widely used container scanners we",
    "start": "144599",
    "end": "149700"
  },
  {
    "text": "chose trivia gripe Docker scan and Docker Scout to test but what we'll be",
    "start": "149700",
    "end": "154800"
  },
  {
    "text": "covering here isn't necessarily limited to those four",
    "start": "154800",
    "end": "159560"
  },
  {
    "text": "as of April 13th of this year",
    "start": "160800",
    "end": "164480"
  },
  {
    "text": "Docker scan is powered by sneak on the back end which we thought was interesting and a lot of people still",
    "start": "166319",
    "end": "171480"
  },
  {
    "text": "use it so we figured we'd still include it here today so to start let's use all four of these",
    "start": "171480",
    "end": "177480"
  },
  {
    "text": "scanners to scan a vulnerable container image we created and see what results we get",
    "start": "177480",
    "end": "183260"
  },
  {
    "text": "so let's show the versions of each of the scanners that we're using today just for posterity so we have",
    "start": "188940",
    "end": "195420"
  },
  {
    "text": "trivia right Docker scan and Dr Scout",
    "start": "195420",
    "end": "200300"
  },
  {
    "text": "so let's cat our base Docker file as you can see we're using a slightly old base",
    "start": "201300",
    "end": "206879"
  },
  {
    "text": "image it's a composer 1.72 so it's got a couple of vulnerabilities we know that",
    "start": "206879",
    "end": "211920"
  },
  {
    "text": "are in there and it's based on Alpine 3.7 the next thing we're going to do is",
    "start": "211920",
    "end": "217080"
  },
  {
    "text": "install node.js then we're going to copy in some runtime dependency files so things like gem file",
    "start": "217080",
    "end": "223739"
  },
  {
    "text": "lock package Json yarn.lock Etc and lastly at the bottom you'll see we copy",
    "start": "223739",
    "end": "229080"
  },
  {
    "text": "in Cube control it's relatively recent but it's not quite up to date and that's a go binder",
    "start": "229080",
    "end": "235519"
  },
  {
    "text": "so let's quickly build the base image",
    "start": "235739",
    "end": "239599"
  },
  {
    "text": "and scan this and scan the image with trivi gripe Docker scan and Docker Scout",
    "start": "242040",
    "end": "248959"
  },
  {
    "text": "let's check check the results in a summary format there we got some findings",
    "start": "249060",
    "end": "255180"
  },
  {
    "text": "but let's see that on a graphical display",
    "start": "255180",
    "end": "258799"
  },
  {
    "text": "does our Baseline set of results and immediately we have four different scanners trained on",
    "start": "263040",
    "end": "268199"
  },
  {
    "text": "the same image produce wildly different numbers of results why is that it turns out they don't always work the",
    "start": "268199",
    "end": "274380"
  },
  {
    "text": "same way let's break it down a little bit so how do you can container",
    "start": "274380",
    "end": "280680"
  },
  {
    "text": "vulnerability scanners work is it magic pixie dust nah they work on a combination of several techniques that",
    "start": "280680",
    "end": "286919"
  },
  {
    "text": "we'll have a look through now thank you back over here I guess part of us so",
    "start": "286919",
    "end": "295259"
  },
  {
    "text": "files that hold operating system version metadata and release information like Etsy OS release",
    "start": "295259",
    "end": "301080"
  },
  {
    "text": "Etsy LSB release and Etsy Alpine release are typically one of the first things scanners look to to help inform them for",
    "start": "301080",
    "end": "308160"
  },
  {
    "text": "their approach to scanning the rest of the base image",
    "start": "308160",
    "end": "312500"
  },
  {
    "text": "from there container scanners also flag up outdated versions of packages provided by your Linux distribution this",
    "start": "314120",
    "end": "321419"
  },
  {
    "text": "is based on the scanner using the package database that's installed by the distribution and the security database",
    "start": "321419",
    "end": "326639"
  },
  {
    "text": "that contains vulnerability information one thing that's worth being aware of is that in some cases there are os package",
    "start": "326639",
    "end": "333180"
  },
  {
    "text": "vulnerabilities for which there is no available patch and the scanner can be told to either report them or null",
    "start": "333180",
    "end": "338820"
  },
  {
    "text": "depending on your risk appetite and another thing to think about here is this means the scanner needs to",
    "start": "338820",
    "end": "344580"
  },
  {
    "text": "understand the package database for your distribution so if you use a new or a niche distribution it might not be",
    "start": "344580",
    "end": "351000"
  },
  {
    "text": "supported some of these scanners also look for",
    "start": "351000",
    "end": "357000"
  },
  {
    "text": "software language dependency files such as package.json requirements.txt or",
    "start": "357000",
    "end": "362220"
  },
  {
    "text": "cargo.lock this use of the word cargo has not been endorsed by the rust Foundation",
    "start": "362220",
    "end": "367800"
  },
  {
    "text": "these files contain information related to libraries and metadata which the scanners use to find vulnerabilities in",
    "start": "367800",
    "end": "373740"
  },
  {
    "text": "software dependencies another thing that sun scanners look for is any metadata embedded in binaries",
    "start": "373740",
    "end": "379800"
  },
  {
    "text": "golang since 117 embeds dependency data inside of the go binary and Rush binaries can be scanned in the same way",
    "start": "379800",
    "end": "387979"
  },
  {
    "text": "so now that we've talked about how these tools come up with findings let's go back and look a little bit closer at our",
    "start": "390600",
    "end": "395880"
  },
  {
    "text": "base image one more time the results so looking at the results again you can",
    "start": "395880",
    "end": "402060"
  },
  {
    "text": "see that we've broken them up into three different classes of finding OS package dependency file and binary metadata",
    "start": "402060",
    "end": "409680"
  },
  {
    "text": "see that the numbers found per category for are wildly different",
    "start": "409680",
    "end": "416240"
  },
  {
    "text": "I mean that's a lot of findings there's at least 90 or more results that we have to go through and fixing all of them is",
    "start": "417360",
    "end": "424380"
  },
  {
    "text": "going to take a really long time there some of these specific findings could likely be resolved by updating our",
    "start": "424380",
    "end": "430680"
  },
  {
    "text": "base image since we used an older one on purpose for the purposes of demonstration but it's not always that simple",
    "start": "430680",
    "end": "437460"
  },
  {
    "text": "many of these findings are related to dependencies in the software itself and this can create compounding issues",
    "start": "437460",
    "end": "442500"
  },
  {
    "text": "updating dependencies can change the software can change the software's behavior and it may need to be modified",
    "start": "442500",
    "end": "447780"
  },
  {
    "text": "to handle the change in dependencies and it's not just the one-time fix we have to deal with this every time we have to",
    "start": "447780",
    "end": "453780"
  },
  {
    "text": "update dependencies every time there's a new base image every time new cves are learned about there's just a ton of",
    "start": "453780",
    "end": "459360"
  },
  {
    "text": "things that can actually trigger having to go back through this and if this space image is actually from a vendor fixing it may not even be an option",
    "start": "459360",
    "end": "467699"
  },
  {
    "text": "okay so let's say that we're the team who's responsible for this image and it's currently deployed as a core",
    "start": "467699",
    "end": "473280"
  },
  {
    "text": "component in our production environment right now the security team just sent us these scan results",
    "start": "473280",
    "end": "478979"
  },
  {
    "text": "and now we can't ship again until they're fixed fixing all the findings that were raised means updating several",
    "start": "478979",
    "end": "484919"
  },
  {
    "text": "components and maybe retesting our entire application so we're taking a risk of breaking production just by",
    "start": "484919",
    "end": "491160"
  },
  {
    "text": "trying to do the right thing and actually fix them brings us to a choice",
    "start": "491160",
    "end": "498539"
  },
  {
    "text": "what do we do about this if we fix all of these findings to be compliant we'll miss our deadline",
    "start": "498539",
    "end": "505199"
  },
  {
    "text": "if we ship on time without fixing them we'll get into trouble with the Auditors none of those options are very good",
    "start": "505199",
    "end": "511680"
  },
  {
    "text": "there's got to be a better way so we need to address these scan results to be compliant but that sounds like a",
    "start": "511680",
    "end": "519779"
  },
  {
    "text": "lot of work is there something we could do to just make the findings go away",
    "start": "519779",
    "end": "526640"
  },
  {
    "text": "I have an idea now that we know what the scanners are looking for let's use a systematic",
    "start": "529200",
    "end": "535019"
  },
  {
    "text": "approach to see if we can hide or bypass detection for every single finding for",
    "start": "535019",
    "end": "540600"
  },
  {
    "text": "all of the scanners with no break-in changes to our containerized application",
    "start": "540600",
    "end": "545700"
  },
  {
    "text": "if we can do that the next scan results will be compliant our app will still",
    "start": "545700",
    "end": "551040"
  },
  {
    "text": "work and we can still ship it and make our deadline",
    "start": "551040",
    "end": "556040"
  },
  {
    "text": "so remember when we said that the scanners can use the OS release information to figure out which operating system version the image is",
    "start": "558480",
    "end": "564839"
  },
  {
    "text": "based on and that can how that can guide their approach to scanning the image what if we were made a report that was",
    "start": "564839",
    "end": "570779"
  },
  {
    "text": "an operating system the inversion the scanners have never seen before by changing the name and just deleting that",
    "start": "570779",
    "end": "577260"
  },
  {
    "text": "information entirely let's see what would happen",
    "start": "577260",
    "end": "581660"
  },
  {
    "text": "so we're going to take that same original Docker file I'm going to change a couple things",
    "start": "584700",
    "end": "589800"
  },
  {
    "text": "first thing we're going to do is make it look like it's our own custom distribution of Linux and overwriting",
    "start": "589800",
    "end": "595680"
  },
  {
    "text": "Etsy OS release then we're going to delete Etsy LSB release and that's the Alpine release just to make sure it",
    "start": "595680",
    "end": "602160"
  },
  {
    "text": "doesn't get confused okay so let's rescan the image",
    "start": "602160",
    "end": "608000"
  },
  {
    "text": "first we have to build it sorry so we can incorporate all those changes",
    "start": "608519",
    "end": "613399"
  },
  {
    "text": "we're going to rescan the image trivia right Docker scan and Dr Scout",
    "start": "614580",
    "end": "621440"
  },
  {
    "text": "let's take a look at the results interesting some things have changed here all right let's go back to the graph so",
    "start": "621540",
    "end": "627899"
  },
  {
    "text": "it's a little bit easier to see we can now see the docker scan and",
    "start": "627899",
    "end": "635339"
  },
  {
    "text": "Docker Scout immediately stopped reporting operating system package issues I mean that's pretty wild right",
    "start": "635339",
    "end": "642660"
  },
  {
    "text": "all from just changing or removing a couple of files all right that's pretty sweet clearly",
    "start": "642660",
    "end": "648779"
  },
  {
    "text": "things have been improved but I think we can do better that one took care of those findings",
    "start": "648779",
    "end": "655200"
  },
  {
    "text": "from Docker scan and Docker Scout but can we get the other scanners to no longer see findings from OS packages",
    "start": "655200",
    "end": "661980"
  },
  {
    "text": "either foreign so if changing or deleting the OS release metadata to work before we",
    "start": "661980",
    "end": "668820"
  },
  {
    "text": "should also try to get rid of the OS packaging metadata for the installed operating system packages that shouldn't",
    "start": "668820",
    "end": "675060"
  },
  {
    "text": "have any effect on our application working but it will prevent the Scanners from seeing that information",
    "start": "675060",
    "end": "682100"
  },
  {
    "text": "okay so what we're going to do is we're going to go back into our Docker file and we're",
    "start": "682500",
    "end": "688800"
  },
  {
    "text": "going to make another change we're going to delete the Alpine OS package metadata so down the bottom",
    "start": "688800",
    "end": "695940"
  },
  {
    "text": "what you can see here is we've got a couple of lines that just do an RM minus RF on Etc APK and lib APK which is where",
    "start": "695940",
    "end": "702959"
  },
  {
    "text": "that data lives then what we'll do is we'll rebuild our image again because we need to make sure",
    "start": "702959",
    "end": "708480"
  },
  {
    "text": "we're getting the latest version and that will go away and do it and then what we've done now is we can now recap",
    "start": "708480",
    "end": "714120"
  },
  {
    "text": "run our scanners so we'll scan the image with trivi with",
    "start": "714120",
    "end": "722040"
  },
  {
    "text": "gripe with Docker scan and with Docker Scout let's see what kind of effect that",
    "start": "722040",
    "end": "727200"
  },
  {
    "text": "change had wow if you look at that left column there which is OS packages that's",
    "start": "727200",
    "end": "733680"
  },
  {
    "text": "fantastic we don't have any vulnerabilities anymore foreign",
    "start": "733680",
    "end": "741600"
  },
  {
    "text": "let's look at them in graphical format so this is how many we started out with to remind everybody",
    "start": "743880",
    "end": "749880"
  },
  {
    "text": "this is how many we've got now so now all four scanners no longer show",
    "start": "749880",
    "end": "755220"
  },
  {
    "text": "any OS package vulnerability findings but let's be clear the results are gone but we didn't",
    "start": "755220",
    "end": "762000"
  },
  {
    "text": "actually uninstall any packages they're still in the image",
    "start": "762000",
    "end": "767339"
  },
  {
    "text": "to me like we're still seeing results from some of the scanners relating to software dependency files like gem locks",
    "start": "767339",
    "end": "773519"
  },
  {
    "text": "and those sorts of things so our next stop should probably be to try and get rid of those so we know the scanners are looking for",
    "start": "773519",
    "end": "780360"
  },
  {
    "text": "specific files with specific file names JavaScript python Ruby and others",
    "start": "780360",
    "end": "788100"
  },
  {
    "text": "so how are the scanners going about looking for those are they just looking for the file names because if so I",
    "start": "788100",
    "end": "795180"
  },
  {
    "text": "wonder if they would try to follow a Sim link in order for our application in this",
    "start": "795180",
    "end": "801060"
  },
  {
    "text": "image to still work we can't change the names of files like package.json and gemfile.lock but what if we renamed the",
    "start": "801060",
    "end": "808139"
  },
  {
    "text": "files themselves to something else and then made Sim links to them with the original names let's try it",
    "start": "808139",
    "end": "816079"
  },
  {
    "text": "so we're going to take that original Docker file but this time we're going to copy in all",
    "start": "819120",
    "end": "825839"
  },
  {
    "text": "of those files with a different name then we're going to make Sim links to",
    "start": "825839",
    "end": "831060"
  },
  {
    "text": "link them to the original file name so that when the application tries to look for a file like package.json it just",
    "start": "831060",
    "end": "837120"
  },
  {
    "text": "follows the Sim link to the renamed file and the app will still work we also went ahead and deleted some",
    "start": "837120",
    "end": "842940"
  },
  {
    "text": "python egg info metadata files because we don't really need them so why not so let's build that modified image now",
    "start": "842940",
    "end": "852200"
  },
  {
    "text": "and then let's scan it with all four scanners again",
    "start": "854940",
    "end": "859579"
  },
  {
    "text": "and now let's take a look at the results",
    "start": "866279",
    "end": "870380"
  },
  {
    "text": "all right",
    "start": "872040",
    "end": "874699"
  },
  {
    "text": "so to reiterate we haven't actually deleted anything we've just made the scanners not see it",
    "start": "879060",
    "end": "884820"
  },
  {
    "text": "anymore but let's take a look at these results again in graphical form",
    "start": "884820",
    "end": "891380"
  },
  {
    "text": "okay again reminder this is how many we started out with in the first place",
    "start": "895920",
    "end": "902579"
  },
  {
    "text": "and this is how many we've got now so that worked it's clear that the scanners do not always follow the Sim",
    "start": "902579",
    "end": "909120"
  },
  {
    "text": "links and that made them find not not find any issues in the software dependency files and you know this kind",
    "start": "909120",
    "end": "916260"
  },
  {
    "text": "of makes sense Sim links have a rich history of being tricky to get right for",
    "start": "916260",
    "end": "922199"
  },
  {
    "text": "a good example of that you can actually see our previous talk about cubeletal vulnerabilities a slightly peculiar volume configuration from kubecon na",
    "start": "922199",
    "end": "928560"
  },
  {
    "text": "2021 all right so it looks like we still have a few findings left and they're all related issues with binaries",
    "start": "928560",
    "end": "935699"
  },
  {
    "text": "ah remember that in binaries the metadata can be embedded inside of it so",
    "start": "935699",
    "end": "941639"
  },
  {
    "text": "I wonder how we can get the scanners to not see that stuff",
    "start": "941639",
    "end": "945920"
  },
  {
    "text": "so what can we do about all of these binaries have you ever heard about upx packing",
    "start": "947639",
    "end": "954180"
  },
  {
    "text": "it's a way of compressing binaries and it also happens to obfuscate the internal structure of the binary itself",
    "start": "954180",
    "end": "961079"
  },
  {
    "text": "this makes it very useful for things like making binary is smaller and avoiding malware detection",
    "start": "961079",
    "end": "968100"
  },
  {
    "text": "so let's see what happens if we upx pack o of the binaries",
    "start": "968100",
    "end": "974480"
  },
  {
    "text": "so let's modify the docker file again we're installing upx as a package so we",
    "start": "976440",
    "end": "983160"
  },
  {
    "text": "can pack some of these binaries and apply that same sim link and rename technique against one of the pi python",
    "start": "983160",
    "end": "988740"
  },
  {
    "text": "shared libraries and we're going to pack both Coupe CTL and BusyBox",
    "start": "988740",
    "end": "994860"
  },
  {
    "text": "to see if that gets rid of all the binary issues so let's build that modified image again",
    "start": "994860",
    "end": "1002620"
  },
  {
    "text": "now we're going to rescan the image with all four scanners",
    "start": "1007459",
    "end": "1012279"
  },
  {
    "text": "and then let's check out the results",
    "start": "1018860",
    "end": "1022660"
  },
  {
    "text": "[Applause] that was very effective mostly but we",
    "start": "1026520",
    "end": "1034699"
  },
  {
    "text": "still have a few findings left let's take a look at that graph again",
    "start": "1034699",
    "end": "1039520"
  },
  {
    "text": "again this is the original amount that we had and this is how many we have now",
    "start": "1042199",
    "end": "1048679"
  },
  {
    "text": "there's still more to unpack here three of them are still finding issues with the golang binary Coop CTL",
    "start": "1048679",
    "end": "1056000"
  },
  {
    "text": "that's interesting though because that should have gotten rid of all the findings right well one thing we do know is the",
    "start": "1056000",
    "end": "1062720"
  },
  {
    "text": "container images are built of layers perhaps they're looking in the layers",
    "start": "1062720",
    "end": "1067659"
  },
  {
    "text": "right but is there some way to make it so the scanners can't see all the layers I mean we are shooting for 100",
    "start": "1070220",
    "end": "1076640"
  },
  {
    "text": "compliance right I mean we could try a multi-stage build let's try that",
    "start": "1076640",
    "end": "1084580"
  },
  {
    "text": "so we're going to edit our Docker file one more time and we can see that this Docker file is a bit of a mess there's lots and lots of",
    "start": "1090679",
    "end": "1097280"
  },
  {
    "text": "things that we're doing here lots and lots of layers that we're adding and lots of layers also that we're inheriting from the composer image as",
    "start": "1097280",
    "end": "1103039"
  },
  {
    "text": "well so he'll be here at the top I've just decided to call all of this work as Builder and here down at the bottom I've",
    "start": "1103039",
    "end": "1109400"
  },
  {
    "text": "got my from scratch and copy two lines so we're going to go ahead and separate",
    "start": "1109400",
    "end": "1114679"
  },
  {
    "text": "those build and the obfuscation steps and the final packaging steps and we're also going to copy in an icar sample",
    "start": "1114679",
    "end": "1120620"
  },
  {
    "text": "test file into the image overwriting bin Bash and we'll talk a little bit more about",
    "start": "1120620",
    "end": "1126020"
  },
  {
    "text": "that later where's that line here we go so that's where we're copying it in we're going to talk about that here in a",
    "start": "1126020",
    "end": "1131900"
  },
  {
    "text": "little bit later so all of when we do this when we do this step of actually",
    "start": "1131900",
    "end": "1137059"
  },
  {
    "text": "um a multi-stage build we end up with a single layer image that is the artifact that we're going to shift and this will",
    "start": "1137059",
    "end": "1142400"
  },
  {
    "text": "result in a couple of interesting things when we build this new modified image",
    "start": "1142400",
    "end": "1148400"
  },
  {
    "text": "and we compare the size against the previous one we can see",
    "start": "1148400",
    "end": "1153679"
  },
  {
    "text": "that the old one was 306 Meg and this new one",
    "start": "1153679",
    "end": "1158720"
  },
  {
    "text": "is 166 Meg so big win right easier to distribute all that stuff it's good stuff our image is a bit smaller and any",
    "start": "1158720",
    "end": "1165919"
  },
  {
    "text": "image that uses this one might also make make get benefit from some of the modifications that we've made so let's",
    "start": "1165919",
    "end": "1171020"
  },
  {
    "text": "go ahead and rescan these things and see what we see here",
    "start": "1171020",
    "end": "1179139"
  },
  {
    "text": "view the results foreign [Applause]",
    "start": "1180860",
    "end": "1193440"
  },
  {
    "text": "how it started how it's going",
    "start": "1194120",
    "end": "1199360"
  },
  {
    "text": "and we did it we are completely 100 compliant I mean we haven't changed anything about this image I mean other",
    "start": "1203120",
    "end": "1210320"
  },
  {
    "text": "than like how we build it and that sort of stuff um so all those findings in the first graph are all still in there they're",
    "start": "1210320",
    "end": "1216380"
  },
  {
    "text": "just not alerting anymore okay so this is exciting we've managed",
    "start": "1216380",
    "end": "1221480"
  },
  {
    "text": "to get to zero findings on this old image just by taking things out but how about adding stuff in could we",
    "start": "1221480",
    "end": "1228679"
  },
  {
    "text": "sneak anything malicious in there and still be compliant well we already did",
    "start": "1228679",
    "end": "1234200"
  },
  {
    "text": "none of these scanners picked up the addition of icar because none of these scanners are going to look for malware",
    "start": "1234200",
    "end": "1239419"
  },
  {
    "text": "or file changes if we want something that might pick back anything up we might need to use a",
    "start": "1239419",
    "end": "1244820"
  },
  {
    "text": "different approach what about something that generated an inventory of all software and",
    "start": "1244820",
    "end": "1250640"
  },
  {
    "text": "dependencies in the image like an s-bomb the White House and other governments have said that we all need",
    "start": "1250640",
    "end": "1256700"
  },
  {
    "text": "to use s-bombs to know everything that's in our software",
    "start": "1256700",
    "end": "1262120"
  },
  {
    "text": "so s-bomb stands for software bill of materials which at a high level is a document often Json formatted with a",
    "start": "1262460",
    "end": "1268940"
  },
  {
    "text": "goal of telling users what's in their software or in our case a container image",
    "start": "1268940",
    "end": "1275360"
  },
  {
    "text": "so surely an s-bomb would have to show if there was something malicious that had been added to our container right",
    "start": "1275360",
    "end": "1281440"
  },
  {
    "text": "well let's find out we can use trivia and sift to generate some s-bombs for",
    "start": "1281440",
    "end": "1286820"
  },
  {
    "text": "our images and then use trivia and gripe to scan those s-bomb documents for vulnerability results s-bombs have a",
    "start": "1286820",
    "end": "1293840"
  },
  {
    "text": "couple of different formats but in this demo we're going to be using these tools to Output them in spdx Json",
    "start": "1293840",
    "end": "1301480"
  },
  {
    "text": "um so let's go ahead and generate s-bombs for the original",
    "start": "1305780",
    "end": "1310940"
  },
  {
    "text": "base image our starting image and our multi-stage build image we're going to use trivia and sift and sift and gripe",
    "start": "1310940",
    "end": "1317539"
  },
  {
    "text": "work together they're both made by Encore so stiff generates the s-bomb and gripe scans that espion but trivia",
    "start": "1317539",
    "end": "1323120"
  },
  {
    "text": "Skin's trivia so let's look at our s-bomb results and right away you can see some things",
    "start": "1323120",
    "end": "1329179"
  },
  {
    "text": "up because in our base images the file sizes are quite large and in our multi-stage build images those files are",
    "start": "1329179",
    "end": "1335299"
  },
  {
    "text": "kind of tiny so let's dive into those so if we look at the sift s bomb for the",
    "start": "1335299",
    "end": "1341659"
  },
  {
    "text": "original base image we can see this is the spdx format by the way it's",
    "start": "1341659",
    "end": "1346820"
  },
  {
    "text": "just a lot of Json so if you love Json you can see it captures all the packages",
    "start": "1346820",
    "end": "1351980"
  },
  {
    "text": "right they're all there and captures some of the files including bin",
    "start": "1351980",
    "end": "1360140"
  },
  {
    "text": "bash but you remember we copied icar on top of Bin bash but what do we see for the shaw hash all zeros",
    "start": "1360140",
    "end": "1367340"
  },
  {
    "text": "that's interesting right so let's look at trivi's s-bomb for the original base image and as you can see",
    "start": "1367340",
    "end": "1374659"
  },
  {
    "text": "similar format spdx but there's only one file shown and all of that metadata is",
    "start": "1374659",
    "end": "1381440"
  },
  {
    "text": "in the packages so right away you can tell that they're not quite exactly right and they're not",
    "start": "1381440",
    "end": "1386960"
  },
  {
    "text": "quite compatible and lastly we'll look at trivia's s-bomb for that multi-stage build image the one",
    "start": "1386960",
    "end": "1393799"
  },
  {
    "text": "that we had zero findings for and this is how long that document is",
    "start": "1393799",
    "end": "1399500"
  },
  {
    "text": "that's it that's the final last problem",
    "start": "1399500",
    "end": "1404020"
  },
  {
    "text": "so if we look at a trivia bomb generated for the multi-stage build you can see that's pretty light and there aren't a",
    "start": "1407480",
    "end": "1412760"
  },
  {
    "text": "lot of results there which is incredibly interesting but did it or pick up anything malicious",
    "start": "1412760",
    "end": "1419299"
  },
  {
    "text": "of ours",
    "start": "1419299",
    "end": "1421779"
  },
  {
    "text": "no as it turns out all the same obfuscation techniques",
    "start": "1427220",
    "end": "1432380"
  },
  {
    "text": "still work to hide the findings from being reported from the s-bombs so all that work worked",
    "start": "1432380",
    "end": "1438740"
  },
  {
    "text": "and again we still haven't changed anything about the software in our image and this really calls out how important it is to understand how these tools work",
    "start": "1438740",
    "end": "1445760"
  },
  {
    "text": "this s-bomb records that there are no vulnerabilities in the image and we've",
    "start": "1445760",
    "end": "1451820"
  },
  {
    "text": "shown you that that's not true which doesn't stop this image and the associated s-bomb for being considered",
    "start": "1451820",
    "end": "1457760"
  },
  {
    "text": "compliant a few of these techniques are legitimate things that probably some of you have",
    "start": "1457760",
    "end": "1463520"
  },
  {
    "text": "used during to manage the life cycle of your images in the past I mean who hasn't built a multi-stage build at this",
    "start": "1463520",
    "end": "1468740"
  },
  {
    "text": "point probably you perhaps did not know that you were being maliciously compliant at the time and this stuff is hard and even",
    "start": "1468740",
    "end": "1476480"
  },
  {
    "text": "is compliant it's definitely not secure the demo gods are not smiling upon us",
    "start": "1476480",
    "end": "1481880"
  },
  {
    "text": "today so we're going to go backwards one slide so one interesting thing we found is",
    "start": "1481880",
    "end": "1487820"
  },
  {
    "text": "that the results are not always consistent between when some of these scanners scan images directly and when",
    "start": "1487820",
    "end": "1494539"
  },
  {
    "text": "they scan s-bombs generated from the same images let's demonstrate",
    "start": "1494539",
    "end": "1501039"
  },
  {
    "text": "so here are the results of trivia's original scan of the original base image again",
    "start": "1503960",
    "end": "1510520"
  },
  {
    "text": "and now we're going to scan the s-bomb documents we generated before with trivia",
    "start": "1510620",
    "end": "1515900"
  },
  {
    "text": "so let's scan the s-bombs trivia generated for the original base image",
    "start": "1515900",
    "end": "1521799"
  },
  {
    "text": "and our multi-stage build which had no issues okay fair enough the trivia stands are",
    "start": "1522020",
    "end": "1529640"
  },
  {
    "text": "consistent with the prior results when we scan not only directly with trivi but with the s-bomb document",
    "start": "1529640",
    "end": "1535340"
  },
  {
    "text": "the original image has the same number of findings and the s-bomb is still being fooled by the multi-stage image we",
    "start": "1535340",
    "end": "1541159"
  },
  {
    "text": "built which of course has no vulnerabilities at all and now let's look at the original gripe",
    "start": "1541159",
    "end": "1547220"
  },
  {
    "text": "scan results from when gripe scanned our original images directly",
    "start": "1547220",
    "end": "1553720"
  },
  {
    "text": "okay and then let's scan them again with the s-bomb results that were generated",
    "start": "1559940",
    "end": "1565100"
  },
  {
    "text": "by gripes partner tool sift these two tools are designed to work together they",
    "start": "1565100",
    "end": "1570200"
  },
  {
    "text": "are made by the same vendor this is a feature that's advertised",
    "start": "1570200",
    "end": "1575380"
  },
  {
    "text": "so we're going to scan the snip generated s-bomb for both our original base and our multi-stage build images with gray",
    "start": "1576500",
    "end": "1584019"
  },
  {
    "text": "and as you can see they're not at all the same not even a little bit that's",
    "start": "1584960",
    "end": "1590419"
  },
  {
    "text": "weird right you would think they would be consistent but they're not the number of findings gripe finds from",
    "start": "1590419",
    "end": "1596539"
  },
  {
    "text": "the s-bomb generated by sift is totally different from when it scanned the original base image by itself directly",
    "start": "1596539",
    "end": "1602000"
  },
  {
    "text": "that said the whole thing is still fooled by our zero finding multi-stage build image because as you can see this",
    "start": "1602000",
    "end": "1608659"
  },
  {
    "text": "image has no vulnerabilities at all",
    "start": "1608659",
    "end": "1612700"
  },
  {
    "text": "so looking at the results of the s-bomb scans we obviously got some surprises there for a few reasons we would expect",
    "start": "1620120",
    "end": "1626840"
  },
  {
    "text": "it to get the same number of vulnerability results from scanning an image directly or scanning an s-bomb on",
    "start": "1626840",
    "end": "1632240"
  },
  {
    "text": "that image but that wasn't always the case we're also expected to have some",
    "start": "1632240",
    "end": "1637640"
  },
  {
    "text": "indication that a file had been overwritten we expected that the s bomb would include metadata for every single",
    "start": "1637640",
    "end": "1642679"
  },
  {
    "text": "file perhaps in the form of a hash but when we were but when reviewing different s-bombs we found that not all",
    "start": "1642679",
    "end": "1647779"
  },
  {
    "text": "of them do that another surprising thing we found is that although these tools allegedly",
    "start": "1647779",
    "end": "1653360"
  },
  {
    "text": "produce an s-bomb in the same format like spdx there is no defined standard for how that format gets implemented so",
    "start": "1653360",
    "end": "1660980"
  },
  {
    "text": "these tools and documents aren't interoperable if you use one of these tools to generate an s-bomb document and",
    "start": "1660980",
    "end": "1667340"
  },
  {
    "text": "feed it into another one of these tools for example generate an s-bomb with trivi and have gripe scan it or the",
    "start": "1667340",
    "end": "1673400"
  },
  {
    "text": "other way around with sift it leads to unexpected results or frankly no results",
    "start": "1673400",
    "end": "1679039"
  },
  {
    "text": "at all it's even inconsistent when they come from the same vendor which was surprising too",
    "start": "1679039",
    "end": "1685640"
  },
  {
    "text": "so we've shown that s-bombs don't capture everything in the image and we've seen enough interesting behaviors",
    "start": "1685640",
    "end": "1691279"
  },
  {
    "text": "here to suggest that there's more to dig into s-bombs clearly need more research we don't have time to cover it all in",
    "start": "1691279",
    "end": "1697700"
  },
  {
    "text": "this talk today but we have a lot to say so stay tuned coming soon to a kubecon",
    "start": "1697700",
    "end": "1703700"
  },
  {
    "text": "near you",
    "start": "1703700",
    "end": "1706539"
  },
  {
    "text": "so what can we learn from all this we've shown that image scanning and s-bomb generation tools are quite",
    "start": "1714500",
    "end": "1720440"
  },
  {
    "text": "sensitive to the changes where the metadata from where they get their results the quality of those results is also",
    "start": "1720440",
    "end": "1726440"
  },
  {
    "text": "directly related to the quality of all of the steps involved in how the image is built and you can't always determine",
    "start": "1726440",
    "end": "1731960"
  },
  {
    "text": "just by looking at the output that something is off because one of these tools generally tend to fail in a way",
    "start": "1731960",
    "end": "1737480"
  },
  {
    "text": "that is pretty opaque so if you can manipulate the results of these findings this has potentially",
    "start": "1737480",
    "end": "1743539"
  },
  {
    "text": "significant Downstream effects and it doesn't even have to be done on purpose inconsistent results from these tools or",
    "start": "1743539",
    "end": "1750740"
  },
  {
    "text": "their lack of interoperability can cause problems for organizations where different groups use different tools for",
    "start": "1750740",
    "end": "1755900"
  },
  {
    "text": "vulnerability assessment many organizations perhaps maybe even yours have siled teams that use different",
    "start": "1755900",
    "end": "1761960"
  },
  {
    "text": "tools and maybe don't communicate very well with each other if you can't always count on consistent results it's really",
    "start": "1761960",
    "end": "1768620"
  },
  {
    "text": "hard to know who or what to rely on yeah for example many organizations use",
    "start": "1768620",
    "end": "1773840"
  },
  {
    "text": "vulnerability scanning results when determining which workloads to admit to their production environments so if the",
    "start": "1773840",
    "end": "1779779"
  },
  {
    "text": "results can't be trusted that could be a big problem so here are some things that we think",
    "start": "1779779",
    "end": "1786260"
  },
  {
    "text": "these tools could do better to prevent against attacks like this one of them is to provide a more restrictive mode where",
    "start": "1786260",
    "end": "1792080"
  },
  {
    "text": "detection coverage is the focus and at the expense perhaps of performance following things like siblings throwing",
    "start": "1792080",
    "end": "1797960"
  },
  {
    "text": "warnings and errors for clearly anomalous configurations like you found a bunch of files that you can't associate with packages or a particular",
    "start": "1797960",
    "end": "1804620"
  },
  {
    "text": "copy step a scan that returns no results can be a false negative and it causes these tools",
    "start": "1804620",
    "end": "1811460"
  },
  {
    "text": "to fail successfully as we've shown you in in this case",
    "start": "1811460",
    "end": "1815919"
  },
  {
    "text": "become more interoperable and could help their results become more consistent while we realize that many vendors might",
    "start": "1821539",
    "end": "1827600"
  },
  {
    "text": "not have a lot of incentives to collaborate with their competition it would make it easier for everybody's",
    "start": "1827600",
    "end": "1832700"
  },
  {
    "text": "users of these tools to trust their results also we've only scratched the surface of",
    "start": "1832700",
    "end": "1838580"
  },
  {
    "text": "potentially malicious techniques so over time it would help if the tool makers adopt a more adversarial approach",
    "start": "1838580",
    "end": "1844279"
  },
  {
    "text": "thinking about how people like us are going to try and bypass them so you're watching this and you're like",
    "start": "1844279",
    "end": "1850460"
  },
  {
    "text": "okay well that was all cool but I'm not involved in the development of these tools so what can I do about this",
    "start": "1850460",
    "end": "1856760"
  },
  {
    "text": "one recommendation check for unusual behavior what are you expecting to see in your environment does everything look",
    "start": "1856760",
    "end": "1863600"
  },
  {
    "text": "like you expect everyone's going to have different answers to this because everyone's environment is different do you know",
    "start": "1863600",
    "end": "1870020"
  },
  {
    "text": "your environment if you don't starting to do that would be a good first step",
    "start": "1870020",
    "end": "1875179"
  },
  {
    "text": "if you do know what to look for are you expecting to have zero cves as a result",
    "start": "1875179",
    "end": "1880279"
  },
  {
    "text": "are you expecting to have upx packing or Sim links in your build process if not that's weird and you should probably go",
    "start": "1880279",
    "end": "1887000"
  },
  {
    "text": "check out what's going on you can and should validate all of the inputs and processes for how you build",
    "start": "1887000",
    "end": "1893179"
  },
  {
    "text": "container images to ensure that they are following your policies for what a well-formed artifact might look like",
    "start": "1893179",
    "end": "1898520"
  },
  {
    "text": "so that they can be observed correctly by these tools and compliance teams who",
    "start": "1898520",
    "end": "1903919"
  },
  {
    "text": "use these results to assess the security of third-party software that they should be using should pay attention to what's",
    "start": "1903919",
    "end": "1909260"
  },
  {
    "text": "in the image not necessarily just the output of the tools yeah so when implementing these scanning",
    "start": "1909260",
    "end": "1915740"
  },
  {
    "text": "Tools in CI pipelines to enforce policies that block image builds or gate deployments just based on the results",
    "start": "1915740",
    "end": "1922279"
  },
  {
    "text": "it's important to consider what is being asked to the folks who build and maintain these images as the number of",
    "start": "1922279",
    "end": "1928460"
  },
  {
    "text": "images grows the number of scans and results needing resolution increases exponentially so this directly",
    "start": "1928460",
    "end": "1935600"
  },
  {
    "text": "translates to extra work and development friction for those image Builders which can cause an adversarial relationship to",
    "start": "1935600",
    "end": "1942980"
  },
  {
    "text": "develop with those security teams and that might be enough motivation to make it so that they choose the approach of",
    "start": "1942980",
    "end": "1948980"
  },
  {
    "text": "malicious compliance like we did today We're All in This Together and ideally teams are working with one",
    "start": "1948980",
    "end": "1955940"
  },
  {
    "text": "another to achieve larger goals so let's talk about that what are those goals",
    "start": "1955940",
    "end": "1961880"
  },
  {
    "text": "what problem are you trying to solve a lot of toil can be reduced by considering your threat model and how",
    "start": "1961880",
    "end": "1967820"
  },
  {
    "text": "these tools fit into it if you can make policy decisions strategically based on that your work will be much more",
    "start": "1967820",
    "end": "1974179"
  },
  {
    "text": "effective this will look a little bit different for everybody because everyone's threat model is different but",
    "start": "1974179",
    "end": "1980179"
  },
  {
    "text": "if you can place the results of these tools into that context whatever that context may be that will help in some",
    "start": "1980179",
    "end": "1987440"
  },
  {
    "text": "cases it might be helpful to consider whether or not the problem you're trying to solve can be solved by these tools at",
    "start": "1987440",
    "end": "1993980"
  },
  {
    "text": "all um I think it's really important to understand what these tools do and what",
    "start": "1993980",
    "end": "2000519"
  },
  {
    "text": "they don't do and how they work they're not magic boxes they're pieces of software and they work in relatively",
    "start": "2000519",
    "end": "2006940"
  },
  {
    "text": "predictable ways when you understand more about how they work it helps a lot when you're trying to understand where",
    "start": "2006940",
    "end": "2012340"
  },
  {
    "text": "and why they fail and how you can best use them another thing that I think all of this shows is the importance of trust in the",
    "start": "2012340",
    "end": "2020140"
  },
  {
    "text": "supply chain you know a quote I like about trust is a trusted person is someone who has the",
    "start": "2020140",
    "end": "2026559"
  },
  {
    "text": "power to betray you tools like scanners and s-bombs assume that you can trust the entity they",
    "start": "2026559",
    "end": "2032019"
  },
  {
    "text": "generated them and they really can't help you if the people that generated them turn out to be malicious or if they",
    "start": "2032019",
    "end": "2038559"
  },
  {
    "text": "just didn't do things right there's been a ton of effort lately and in the tooling to Define and improve the",
    "start": "2038559",
    "end": "2046120"
  },
  {
    "text": "security of your infrastructure and Supply chains but it seems like there's still quite a lot of work left for the",
    "start": "2046120",
    "end": "2051220"
  },
  {
    "text": "adopters to figure out how to get all of these things to work for themselves",
    "start": "2051220",
    "end": "2056098"
  },
  {
    "text": "we are often incentivized to be compliant but not necessarily secure",
    "start": "2056859",
    "end": "2063099"
  },
  {
    "text": "and these maligned incentives can make it easier to choose the path of malicious compliance",
    "start": "2063099",
    "end": "2068679"
  },
  {
    "text": "when what we really need to do is choose the path of security",
    "start": "2068679",
    "end": "2073618"
  },
  {
    "text": "might be the harder path but it's the right one and it's one that we can all walk together",
    "start": "2074080",
    "end": "2079540"
  },
  {
    "text": "the effort to improve the security of images and artifacts in our environments is something that each of us has a hand",
    "start": "2079540",
    "end": "2084940"
  },
  {
    "text": "in so let's go make things more secure together oh and uh one more thing",
    "start": "2084940",
    "end": "2091658"
  },
  {
    "text": "oh [Music] [Applause]",
    "start": "2091659",
    "end": "2101159"
  },
  {
    "text": "thank you all so much for coming everybody here are some links for the repo and base image for our demos if you",
    "start": "2102580",
    "end": "2108220"
  },
  {
    "text": "want to play along at home as well as some references that we think might be of interest if you scan this Goosey QR",
    "start": "2108220",
    "end": "2114579"
  },
  {
    "text": "code in the corner that goes to giving us feedback on this talk we'd love to hear from you and if you're in this room",
    "start": "2114579",
    "end": "2121180"
  },
  {
    "text": "don't leave because immediately after ours is B corpses talk on pod security admission and I know for a fact that one",
    "start": "2121180",
    "end": "2127720"
  },
  {
    "text": "is going to be a great time so thank you all so much for coming come find us if you want stickers because we have them",
    "start": "2127720",
    "end": "2133480"
  },
  {
    "text": "thank you you thank you everybody appreciate it",
    "start": "2133480",
    "end": "2137640"
  }
]