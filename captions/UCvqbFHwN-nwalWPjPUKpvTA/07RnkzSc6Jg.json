[
  {
    "text": "i think we can get started so uh welcome to this session we're going to talk about uh Kubernetes Kubernetes native uh",
    "start": "160",
    "end": "7839"
  },
  {
    "text": "development and um I don't know if you you're familiar with this term um it's",
    "start": "7839",
    "end": "13519"
  },
  {
    "text": "kind of I mean it's still software development right but our traditional way of development has typically or",
    "start": "13519",
    "end": "20160"
  },
  {
    "text": "traditionally been like yeah I'm going to develop my code and it works great on my local machine package it up maybe",
    "start": "20160",
    "end": "27119"
  },
  {
    "text": "throw it over the wall and somebody's going to deploy it on these uh kind of big application servers especially if",
    "start": "27119",
    "end": "33360"
  },
  {
    "text": "you're like us and you're Java developers and uh you know use as many resources as you want it doesn't matter",
    "start": "33360",
    "end": "39840"
  },
  {
    "text": "you know we have these big servers kubernetes native development is kind of different right you need to think about",
    "start": "39840",
    "end": "46320"
  },
  {
    "text": "uh the way that your applications are going to live on Kubernetes in a different way because on these clusters",
    "start": "46320",
    "end": "53760"
  },
  {
    "text": "what you want is applications that start up fast because they can be kind of rescheduled or maybe scale up or",
    "start": "53760",
    "end": "61160"
  },
  {
    "text": "whatever excuse me and um you want to make sure that the resource usage is going to be lower right because the",
    "start": "61160",
    "end": "67520"
  },
  {
    "text": "smaller your application is the more you're going to be able to make the most of these clusters uh in terms of density",
    "start": "67520",
    "end": "74640"
  },
  {
    "text": "and you know out of your money as well right so that's kind of what we need to think about as application developers",
    "start": "74640",
    "end": "81119"
  },
  {
    "text": "and that's what we're going to try to focus on a little bit in this session um you know some tools that we can use in",
    "start": "81119",
    "end": "87680"
  },
  {
    "text": "the CNCF landscape and a little bit out of that in the open source space to help application developers work with",
    "start": "87680",
    "end": "94400"
  },
  {
    "text": "Kubernetes without being Kubernetes experts so uh my name is Kevin Dubois",
    "start": "94400",
    "end": "99600"
  },
  {
    "text": "i'm a developer advocate at uh at Red Hat um I've been uh writing software for",
    "start": "99600",
    "end": "106320"
  },
  {
    "text": "the last 20 years um so I went from that more traditional world to the cloudnative world it's been uh it's been",
    "start": "106320",
    "end": "113439"
  },
  {
    "text": "an interesting journey and with me here is uh is Thomas yeah hi everyone i'm Thomas Vital i work at systematic",
    "start": "113439",
    "end": "120560"
  },
  {
    "text": "software company passionate about anything cloud native and Java related wrote a book about it uh a couple of",
    "start": "120560",
    "end": "126719"
  },
  {
    "text": "years ago and now I'm working with my friend Mauricio Salatino on a new book called Developer Experience on Kubernetes we're really excited we just",
    "start": "126719",
    "end": "133440"
  },
  {
    "text": "announced it yesterday uh so the first few chapters are available out there but let's get started so Kubernetes native",
    "start": "133440",
    "end": "140560"
  },
  {
    "text": "development at least as a minimum we want to work with containers somehow so the first ingredient is we need a",
    "start": "140560",
    "end": "146800"
  },
  {
    "text": "container runtime where to run our containers on our local uh machine so Podman desktop is the tool we're going",
    "start": "146800",
    "end": "152959"
  },
  {
    "text": "to use today it's a great tool it's open source it's been donated by Redhead as a CNCF sandbox project so the donation",
    "start": "152959",
    "end": "159519"
  },
  {
    "text": "process is ongoing um it's really great we can run and manage containers uh in",
    "start": "159519",
    "end": "165280"
  },
  {
    "text": "different ways as we'll see uh during the presentation uh we have an application we have a container runtime",
    "start": "165280",
    "end": "171280"
  },
  {
    "text": "what do we do next we have to package it as a container we might go directly and",
    "start": "171280",
    "end": "176400"
  },
  {
    "text": "write a docker file but in the cloud native ecosystem we have a great tool it's called cloud native build packs it",
    "start": "176400",
    "end": "182080"
  },
  {
    "text": "works in this way you don't have to write any docker file you take the source code and doesn't matter what type",
    "start": "182080",
    "end": "187840"
  },
  {
    "text": "of source code you can use your favorite programming language and framework because there's very wide support across",
    "start": "187840",
    "end": "193440"
  },
  {
    "text": "different languages and then using build packs for example the pac cli that comes with the project you get the production",
    "start": "193440",
    "end": "200080"
  },
  {
    "text": "ready image and this image will be production ready it will be designed and built in a way that is uh performant",
    "start": "200080",
    "end": "207440"
  },
  {
    "text": "that is secure so as a developer I get a really nice experience because I focus on my application source code and when I",
    "start": "207440",
    "end": "213519"
  },
  {
    "text": "have to build a container I just run one command i don't have to write and maintain a docker file because writing a",
    "start": "213519",
    "end": "218799"
  },
  {
    "text": "docker file is easy writing a Docker file which is production grade is not",
    "start": "218799",
    "end": "224000"
  },
  {
    "text": "that easy so let's give it a shot i have a Java application as an example but as",
    "start": "224000",
    "end": "230799"
  },
  {
    "text": "you can see it works with different types of languages uh you can use the p",
    "start": "230799",
    "end": "235920"
  },
  {
    "text": "CLI directly that comes with the project but lots of different uh frameworks also have build packs built in uh for example",
    "start": "235920",
    "end": "242640"
  },
  {
    "text": "in Java uh we're going to see examples in Springwood and Quarkus they both have build pack support out of the box so",
    "start": "242640",
    "end": "248640"
  },
  {
    "text": "what I can do is directly from uh my application I can",
    "start": "248640",
    "end": "254080"
  },
  {
    "text": "containerize it in this case I'm running this boot build image task and using buildox now I obtain a production grade",
    "start": "254080",
    "end": "261440"
  },
  {
    "text": "container image that I can just deploy to production but first I want to run it",
    "start": "261440",
    "end": "266560"
  },
  {
    "text": "locally so I have my image I have podman h running on my local environment so I",
    "start": "266560",
    "end": "272880"
  },
  {
    "text": "can run my container image let's do that i can say podman run and give it a port 8080",
    "start": "272880",
    "end": "282800"
  },
  {
    "text": "and then the container image that I just built which is called",
    "start": "282800",
    "end": "289479"
  },
  {
    "text": "buildpax version 1000 and now it's running we can even test",
    "start": "289479",
    "end": "295240"
  },
  {
    "text": "it i can send a HTTP request to the root endpoint london baby all right it's",
    "start": "295240",
    "end": "302800"
  },
  {
    "text": "working what's next we want to eventually deploy it to Kubernetes now",
    "start": "302800",
    "end": "308160"
  },
  {
    "text": "one way of doing it is provided by Podman desktop directly because with Podman I can uh spin up a cluster very",
    "start": "308160",
    "end": "314840"
  },
  {
    "text": "easily if I go here in the settings besides running Podman I can actually uh",
    "start": "314840",
    "end": "320320"
  },
  {
    "text": "create a cluster using mini cube or kind in this case I use kind to create a",
    "start": "320320",
    "end": "325440"
  },
  {
    "text": "cluster it's very easy you can do it directly from the UI uh you choose a name for your cluster it even uh",
    "start": "325440",
    "end": "332320"
  },
  {
    "text": "configures an ingress controller out of the box that means that whatever application you're running in the cluster is also exposed to your local",
    "start": "332320",
    "end": "338880"
  },
  {
    "text": "environment so you don't have to deal with port forwarding and understand all the uh low-level details of how",
    "start": "338880",
    "end": "344560"
  },
  {
    "text": "Kubernetes networking works so you get a really nice out of the box experience as an application developer and once I have",
    "start": "344560",
    "end": "351360"
  },
  {
    "text": "that I could go ahead and define my Kubernetes manifest and all of that but",
    "start": "351360",
    "end": "356400"
  },
  {
    "text": "once I have a container uh Podman has a very nice feature so I have my container",
    "start": "356400",
    "end": "361919"
  },
  {
    "text": "image down here what I can do is say uh deploy to Kubernetes so directly from",
    "start": "361919",
    "end": "368520"
  },
  {
    "text": "here I get all the manifest autogenerated for me let's say demo",
    "start": "368520",
    "end": "374400"
  },
  {
    "text": "build packs i can provide different parameters but all the defaults are fine with me and then I can just say deploy",
    "start": "374400",
    "end": "381520"
  },
  {
    "text": "and now I have my application deployed as a pod in Kubernetes i didn't have to write any YAML file and I get also a",
    "start": "381520",
    "end": "389039"
  },
  {
    "text": "nice Kubernetes dashboard directly from here where I can monitor all the resources and we should probably find",
    "start": "389039",
    "end": "395120"
  },
  {
    "text": "our demo build packod in here and it's running now this is really great it's",
    "start": "395120",
    "end": "400160"
  },
  {
    "text": "quite convenient but if we have to do this every day as part of our daily development workflow uh things might get",
    "start": "400160",
    "end": "406800"
  },
  {
    "text": "a bit uh too slow we really want to achieve a fast feedback loop right so there must be some better way of doing",
    "start": "406800",
    "end": "413680"
  },
  {
    "text": "that yeah so we saw how you can deploy a pod to a local Kubernetes cluster but of",
    "start": "413680",
    "end": "420880"
  },
  {
    "text": "course um deploying a pod is not necessarily how you're going to go to production right you usually are going",
    "start": "420880",
    "end": "426720"
  },
  {
    "text": "to need to deploy uh our good old YAML right at the very minim minimum you're",
    "start": "426720",
    "end": "432080"
  },
  {
    "text": "going to need to deploy uh to create a deployment so you can see here kind of an example of a deployment and a service",
    "start": "432080",
    "end": "439280"
  },
  {
    "text": "so if you've already worked with Kubernetes you you're probably familiar with these concepts but this is kind of",
    "start": "439280",
    "end": "444800"
  },
  {
    "text": "the very minimum that you need uh for deployment to Kubernetes and then with that it's uh just writing some YAML so",
    "start": "444800",
    "end": "452080"
  },
  {
    "text": "it's easy right i mean all our all our developers they love their YAML uh not really and then but with the deployment",
    "start": "452080",
    "end": "458880"
  },
  {
    "text": "in the service you say \"Okay we're going to go to Kubernetes but it's not ready for production.\" And that's the key for",
    "start": "458880",
    "end": "465599"
  },
  {
    "text": "developers to to keep in mind it's not just about deploying an application in a container to Kubernetes there's more",
    "start": "465599",
    "end": "472479"
  },
  {
    "text": "that we need to think about so here's an example of an application that was deployed in a container and uh it's uh",
    "start": "472479",
    "end": "481120"
  },
  {
    "text": "you know it it starts up and it has a dependency on Kafka cluster has",
    "start": "481120",
    "end": "486720"
  },
  {
    "text": "dependency on a database and you can see here that it actually takes 2.6 6",
    "start": "486720",
    "end": "491840"
  },
  {
    "text": "seconds in this case to establish the connection with the database and with the Kafka cluster so in those 2.6",
    "start": "491840",
    "end": "499120"
  },
  {
    "text": "seconds we're actually having a downtime because Kubernetes sees that the container has started up and it says",
    "start": "499120",
    "end": "505919"
  },
  {
    "text": "okay cool we'll send some traffic to the to the container but of course the application itself is not ready yet so",
    "start": "505919",
    "end": "513440"
  },
  {
    "text": "of course what we need to think about is how to tell Kubernetes that we actually are ready to receive traffic so in the",
    "start": "513440",
    "end": "520880"
  },
  {
    "text": "Kubernetes world you have these probes you have readiness probes you have livveness uh probes and startup probes",
    "start": "520880",
    "end": "527040"
  },
  {
    "text": "to tell Kubernetes that the application has started up that it's ready to receive traffic and that it's also still",
    "start": "527040",
    "end": "533680"
  },
  {
    "text": "alive right so even after it's started up that if something goes wrong uh maybe",
    "start": "533680",
    "end": "539839"
  },
  {
    "text": "the pod loses the connection with the database or something that well at that point we're not really alive anymore so",
    "start": "539839",
    "end": "545920"
  },
  {
    "text": "this is something that developers need to keep in mind because we need to provide this kind of information to our",
    "start": "545920",
    "end": "553200"
  },
  {
    "text": "platform engineer to our platform team to say these are the endpoints that you should call from Kubernetes to know",
    "start": "553200",
    "end": "559839"
  },
  {
    "text": "whether my application is healthy to receive traffic so of course again a",
    "start": "559839",
    "end": "565680"
  },
  {
    "text": "little bit of YAML then uh we probably want to integrate some sort of environment variables maybe connection",
    "start": "565680",
    "end": "571680"
  },
  {
    "text": "strings or database usernames and passwords so that's something that you typically pass in via things like config",
    "start": "571680",
    "end": "579680"
  },
  {
    "text": "maps and secrets um whether you want to just use secrets or a vault or something that's kind of uh you know irrelevant",
    "start": "579680",
    "end": "586399"
  },
  {
    "text": "you do need to at least be aware as a developer where are those values going to come from and how should I integrate",
    "start": "586399",
    "end": "593360"
  },
  {
    "text": "those into my application as well and then very kind of uh contentious issue",
    "start": "593360",
    "end": "601200"
  },
  {
    "text": "with a lot of developers that I speak to is that they need to be aware of the res",
    "start": "601200",
    "end": "607120"
  },
  {
    "text": "resource usage of their applications so they need to know kind of let's say at",
    "start": "607120",
    "end": "613040"
  },
  {
    "text": "least more or less how how much memory we're going to use how much CPU we're going to use because that allows the",
    "start": "613040",
    "end": "620000"
  },
  {
    "text": "platform team to determine like how much space do we need to reserve for these",
    "start": "620000",
    "end": "625600"
  },
  {
    "text": "applications in our Kubernetes cluster so you can provide requests to make sure that hey I need at least this amount of",
    "start": "625600",
    "end": "632320"
  },
  {
    "text": "CPU and memory and then potentially limits depends on who you ask uh whether",
    "start": "632320",
    "end": "637360"
  },
  {
    "text": "you should implement limits but limits basically tell the Kubernetes cluster if",
    "start": "637360",
    "end": "642720"
  },
  {
    "text": "the application goes beyond this uh usage of memory then kill the pod start it back up or if it uses more CPU then",
    "start": "642720",
    "end": "649680"
  },
  {
    "text": "start throttling it right so because there are other applications running on this cluster we need to make sure that",
    "start": "649680",
    "end": "654880"
  },
  {
    "text": "it's fair for everyone so again more YAML Um so developers they're not Kubernetes",
    "start": "654880",
    "end": "662399"
  },
  {
    "text": "experts they're not going to know exactly how to write all this YAML so how can we help them so in the Java",
    "start": "662399",
    "end": "670240"
  },
  {
    "text": "world there's uh there's some solutions in the general developer developer uh",
    "start": "670240",
    "end": "675680"
  },
  {
    "text": "space as well um I'm going to talk specifically about uh a new Java stack that's uh that's Quarkus where you can",
    "start": "675680",
    "end": "682880"
  },
  {
    "text": "actually as a developer uh define and I'm sorry if it's a little bit small in",
    "start": "682880",
    "end": "688079"
  },
  {
    "text": "the back but you can define in your application properties something that Java developers are pretty familiar with",
    "start": "688079",
    "end": "694000"
  },
  {
    "text": "uh what kind of uh connections you're going to use what kind of secrets you want to implement uh what kind of uh",
    "start": "694000",
    "end": "701040"
  },
  {
    "text": "container image you want to build what kind of uh resource usage and whatever more so you can define that in your",
    "start": "701040",
    "end": "706399"
  },
  {
    "text": "application properties and then Quarkus can actually translate that into a Kubernetes YAML so let's look at this in",
    "start": "706399",
    "end": "713120"
  },
  {
    "text": "a in a little demo uh that I recorded so this is a Java application and I'm going",
    "start": "713120",
    "end": "718560"
  },
  {
    "text": "to add a dependency Kubernetes and a Kubernetes config extension to my",
    "start": "718560",
    "end": "723680"
  },
  {
    "text": "Quarkus application and you'll see that in the target folder you a new Kubernetes folder is created with a",
    "start": "723680",
    "end": "730959"
  },
  {
    "text": "Kubernetes YAML file and you can see it has a service account it has a role binding it has uh to to allow access to",
    "start": "730959",
    "end": "738720"
  },
  {
    "text": "secrets it has our deployment and it has our service so it generates all this YAML kind of for the developers so they",
    "start": "738720",
    "end": "745440"
  },
  {
    "text": "don't need to do all that and then uh you can see here in the application properties that's where we actually have",
    "start": "745440",
    "end": "751360"
  },
  {
    "text": "those uh configurations uh defined so we translate that to cap uh to Kubernetes",
    "start": "751360",
    "end": "757839"
  },
  {
    "text": "uh a YAML file that we can then deploy so here you can see that for example we also configured you know our memory",
    "start": "757839",
    "end": "764399"
  },
  {
    "text": "usage and our CPUs and uh we have that then uh the health endpoints we can also",
    "start": "764399",
    "end": "770560"
  },
  {
    "text": "add those so you add another extension for health and it automatically configures health endpoints for you it",
    "start": "770560",
    "end": "776560"
  },
  {
    "text": "knows that you have a database dependency a Kafka dependency so it's going to add all those health points and",
    "start": "776560",
    "end": "781920"
  },
  {
    "text": "make sure that uh you have a livveness check for your database for your Kafka and so on and then going back to your",
    "start": "781920",
    "end": "788720"
  },
  {
    "text": "Kubernetes YAML you can now that those livveness and end uh those livveness and readiness probes and everything are also",
    "start": "788720",
    "end": "795600"
  },
  {
    "text": "added back to that Kubernetes YAML file so it automatically kind of goes back and forth and make sure it's all added",
    "start": "795600",
    "end": "802399"
  },
  {
    "text": "there so this is not your grandma's Java right this is pretty cool stuff um and it also starts up much faster it's much",
    "start": "802399",
    "end": "809680"
  },
  {
    "text": "more smaller so this is really kind of cloudnative development here you can see you can use Quirkus to do the image push",
    "start": "809680",
    "end": "816880"
  },
  {
    "text": "and also build so it's going to build the application build a container image push it to a registry and then now we",
    "start": "816880",
    "end": "822560"
  },
  {
    "text": "can use Quark is deployed to actually apply that Kubernetes YAML to a cluster",
    "start": "822560",
    "end": "827760"
  },
  {
    "text": "and so in a moment we're going to see that it's uh generating some stuff now it's deploying all those different uh",
    "start": "827760",
    "end": "834560"
  },
  {
    "text": "components so service accounts uh RO bindings and whatever more and then it's deployed and we can check that uh really",
    "start": "834560",
    "end": "841360"
  },
  {
    "text": "there's the resource limits configured the health endpoints and everything so you know in terms of developer",
    "start": "841360",
    "end": "847839"
  },
  {
    "text": "experience this is what we're looking for right this is Kubernetes native development for Java developers um so",
    "start": "847839",
    "end": "856399"
  },
  {
    "text": "now what about serverless because this is an interesting concept for developers",
    "start": "856399",
    "end": "861519"
  },
  {
    "text": "no more servers right at least not for the developers to necessarily worry about so the promise of serverless is",
    "start": "861519",
    "end": "868240"
  },
  {
    "text": "that you as a developer don't need to worry about you know like how it's going to be deployed uh and how more",
    "start": "868240",
    "end": "874800"
  },
  {
    "text": "importantly it's also going to be scaling so with serverless you kind of get autoscaling out of the box so in the",
    "start": "874800",
    "end": "881600"
  },
  {
    "text": "CNCF space on Kubernetes there's a project K native that does exactly this",
    "start": "881600",
    "end": "887360"
  },
  {
    "text": "kind of uh promise right so it allows you to use serverless on Kubernetes so I",
    "start": "887360",
    "end": "893199"
  },
  {
    "text": "recorded another little demo and this time because we talk a lot about uh Java maybe we should branch out so in this",
    "start": "893199",
    "end": "899440"
  },
  {
    "text": "case uh I'll create uh a go application so here you can see with Kubernetes you",
    "start": "899440",
    "end": "904720"
  },
  {
    "text": "can do K and funk create a name for the fun for the function and then uh language go and that creates a function",
    "start": "904720",
    "end": "911360"
  },
  {
    "text": "you can use K native with containers as well but in this case we're carrying a function then function build and that's",
    "start": "911360",
    "end": "917279"
  },
  {
    "text": "actually going to build uh our um our source code that it's scaffolded into a",
    "start": "917279",
    "end": "922720"
  },
  {
    "text": "container image um and then uh push it to or eventually push it to a registry",
    "start": "922720",
    "end": "928480"
  },
  {
    "text": "as well so here we can see that the function was built you can see the source code that was scaffolded so you",
    "start": "928480",
    "end": "933600"
  },
  {
    "text": "as a as a Go developer can now kind of uh change the function to however you want so if you're a Go developer this",
    "start": "933600",
    "end": "940079"
  },
  {
    "text": "should look somewhat uh familiar to you so add your uh add your custom code here",
    "start": "940079",
    "end": "945920"
  },
  {
    "text": "and then uh you know you can build it and then deploy it so K and funk deploy is going to actually deploy uh push your",
    "start": "945920",
    "end": "954000"
  },
  {
    "text": "uh source code in a container image push it to a registry and then deploy that as a serverless function so in this case",
    "start": "954000",
    "end": "960880"
  },
  {
    "text": "you can see I had to put my uh credentials to push it to a container uh registry and you can see now it's",
    "start": "960880",
    "end": "967279"
  },
  {
    "text": "deployed on uh on Kubernetes in this case open shift and our application is up and running so we can invoke it so",
    "start": "967279",
    "end": "973920"
  },
  {
    "text": "you can do that with K native as well so you can do K native funk uh invoke to actually invoke uh the function and you",
    "start": "973920",
    "end": "981600"
  },
  {
    "text": "can see it gets uh we get a nice response or we can just use uh the uh",
    "start": "981600",
    "end": "986639"
  },
  {
    "text": "endpoints that was uh exposed as well so K native also takes care of the ingress so we don't need to worry about that and",
    "start": "986639",
    "end": "992959"
  },
  {
    "text": "you can see it responded and we have uh in in the open shift case it also created a route and a pod which is now",
    "start": "992959",
    "end": "1000560"
  },
  {
    "text": "running um now if we wait a minute we we're going to see that because we're",
    "start": "1000560",
    "end": "1005600"
  },
  {
    "text": "not calling the function anymore it's going to notice that no more traffic is going to the pods we're going to scale",
    "start": "1005600",
    "end": "1011040"
  },
  {
    "text": "it and now there's no more pods running we're going to wait for traffic to come in and so now I'm going to call the",
    "start": "1011040",
    "end": "1016160"
  },
  {
    "text": "function again and then uh we're going to see that it wakes back up scales up a pod or multiple pods in case there's",
    "start": "1016160",
    "end": "1023040"
  },
  {
    "text": "more traffic and so we have serverless kind of out of the box with just a few commands um and this is all running in",
    "start": "1023040",
    "end": "1029280"
  },
  {
    "text": "Kubernetes with uh CNCF projects yeah and it's really nice because they're all poly tools so under the hood Keny",
    "start": "1029280",
    "end": "1035520"
  },
  {
    "text": "Functions uses build packs to build images that works across different languages kennedy functions itself support spinning up these out of the box",
    "start": "1035520",
    "end": "1043438"
  },
  {
    "text": "functions based on different languages that's really great and seamless experience but so far we've been working",
    "start": "1043439",
    "end": "1049760"
  },
  {
    "text": "with a mostly with a single application and when we start integrating you mentioned Kafka earlier or a database",
    "start": "1049760",
    "end": "1056480"
  },
  {
    "text": "things get more complicated because we can get it to work having a single application containerized and deployed",
    "start": "1056480",
    "end": "1061760"
  },
  {
    "text": "to Kubernetes that's fine but when we are in our development environment how can we consume all these different uh",
    "start": "1061760",
    "end": "1068080"
  },
  {
    "text": "application dependencies it could be a database it could be uh an identity management service we have different",
    "start": "1068080",
    "end": "1074880"
  },
  {
    "text": "options of course one option is going this route where we have a Kubernetes cluster either locally or in the cloud",
    "start": "1074880",
    "end": "1080799"
  },
  {
    "text": "and we hook up our development environment on it but do we really need Kubernetes for local",
    "start": "1080799",
    "end": "1086840"
  },
  {
    "text": "development now it might seem weird since we're talking about Kubernetes native development without Kubernetes",
    "start": "1086840",
    "end": "1093280"
  },
  {
    "text": "but let's take a step back so across different languages uh maybe you're using Java you're using Python you're",
    "start": "1093280",
    "end": "1099679"
  },
  {
    "text": "using Node.js JS we actually been having very good developer experiences for a while for example uh in Node.js I can",
    "start": "1099679",
    "end": "1108160"
  },
  {
    "text": "say yarn dev and uh my application is both compiled is up and running and",
    "start": "1108160",
    "end": "1113600"
  },
  {
    "text": "every time I make a change is reloaded automatically the same happens with Java or with Python so maybe we can reuse",
    "start": "1113600",
    "end": "1120000"
  },
  {
    "text": "some of that known development experience instead of inventing something completely different but we",
    "start": "1120000",
    "end": "1125760"
  },
  {
    "text": "still have the problem of how do we provide the these dependencies how about databases we have different tools also",
    "start": "1125760",
    "end": "1132240"
  },
  {
    "text": "that we can use in the cloud native ecosystem one of them is test containers test containers uh lets you run in a",
    "start": "1132240",
    "end": "1138960"
  },
  {
    "text": "programmatic way lightweight containers as part of the application workflow and we'll see in a moment a demo uh we'll",
    "start": "1138960",
    "end": "1144799"
  },
  {
    "text": "also have a look at Micros micros is also a CNCF project and whenever you",
    "start": "1144799",
    "end": "1150240"
  },
  {
    "text": "have to integrate and test against different APIs it could be HTTP APIs it could be a synchronous APIs messaging uh",
    "start": "1150240",
    "end": "1157280"
  },
  {
    "text": "it's really useful so let's try now to establish a development experience",
    "start": "1157280",
    "end": "1163240"
  },
  {
    "text": "without Kubernetes for the local environment let's start introducing test containers to the mix as I said test",
    "start": "1163240",
    "end": "1170400"
  },
  {
    "text": "containers is a polylo tool so maybe in Java if you want to integrate with rabbit MQ there's a way to uh declare",
    "start": "1170400",
    "end": "1176880"
  },
  {
    "text": "that dependency or maybe you're building a Python application and you want to integrate with keylo keylo is a CNCF",
    "start": "1176880",
    "end": "1183200"
  },
  {
    "text": "project for identity and access management you can do it using test containers how about go same thing maybe",
    "start": "1183200",
    "end": "1189679"
  },
  {
    "text": "you want to integrate with a PostgreSQL database you can define it programmatically this is a nice alternative to a compos file and as",
    "start": "1189679",
    "end": "1197200"
  },
  {
    "text": "additional bonus you can use this not only for testing but also for development so let's uh have a look at",
    "start": "1197200",
    "end": "1203520"
  },
  {
    "text": "how it could work i have uh an application now that a Java",
    "start": "1203520",
    "end": "1211320"
  },
  {
    "text": "application let me zoom in i run it as I would usually do in the",
    "start": "1211320",
    "end": "1217760"
  },
  {
    "text": "context this is a spring boot application so I'm used to run it with boot run and I'm not changing that i'll",
    "start": "1217760",
    "end": "1224240"
  },
  {
    "text": "keep running the same command from the different folder right there but now",
    "start": "1224240",
    "end": "1229440"
  },
  {
    "text": "what's happening under the hood that my application is starting but not just my application because this application is",
    "start": "1229440",
    "end": "1235280"
  },
  {
    "text": "actually using test containers to provision an OLAM service now Olama is a",
    "start": "1235280",
    "end": "1241520"
  },
  {
    "text": "way that you can use to run large language models locally so there's lots of talks about AI at this conference so",
    "start": "1241520",
    "end": "1247840"
  },
  {
    "text": "what I'm doing here is actually integrating my Java application with the AI models and I can show you if I go in",
    "start": "1247840",
    "end": "1254080"
  },
  {
    "text": "the container section here we can see that there's an O lama container that's",
    "start": "1254080",
    "end": "1259360"
  },
  {
    "text": "uh provisioned by test containers so when I start the application I don't just get my application up and running i",
    "start": "1259360",
    "end": "1264799"
  },
  {
    "text": "also get lama so if I now go and test the",
    "start": "1264799",
    "end": "1270600"
  },
  {
    "text": "application let's uh ask a question it could be",
    "start": "1270600",
    "end": "1276799"
  },
  {
    "text": "um what's the capital of England because I'm really creative with questions uh",
    "start": "1276799",
    "end": "1283760"
  },
  {
    "text": "what's that uh oh yeah it's like",
    "start": "1283760",
    "end": "1290320"
  },
  {
    "text": "this and now I get an answer this answer is parsed by a model that is running in",
    "start": "1290840",
    "end": "1296880"
  },
  {
    "text": "lama and I can use this approach with any kind of dependency both at the development time and the at testing time",
    "start": "1296880",
    "end": "1302799"
  },
  {
    "text": "this is really great because it means I don't need a cluster i don't uh because having a cluster locally means also that",
    "start": "1302799",
    "end": "1308159"
  },
  {
    "text": "you're responsible for it so it might be really interesting here it says uh London was established in 1962 that's uh",
    "start": "1308159",
    "end": "1316960"
  },
  {
    "text": "okay interesting okay this is great so something is really wrong here right and",
    "start": "1316960",
    "end": "1322320"
  },
  {
    "text": "when we use large language models things get even more wrong so I want to argue here because we talk a lot about",
    "start": "1322320",
    "end": "1328520"
  },
  {
    "text": "observability whenever we go in production i would like to say that",
    "start": "1328520",
    "end": "1333919"
  },
  {
    "text": "observability is not just for production using something like open telemetry should belong to a development",
    "start": "1333919",
    "end": "1339600"
  },
  {
    "text": "environment as well now for large language models it's extremely important to have some kind of observability on a",
    "start": "1339600",
    "end": "1345919"
  },
  {
    "text": "local environment but in general normal feature development I really would like to visualize whatever I'm coding so why",
    "start": "1345919",
    "end": "1353039"
  },
  {
    "text": "do I have to wait until it's in production to get a nice dashboard or maybe a nice trace so I can see the",
    "start": "1353039",
    "end": "1358159"
  },
  {
    "text": "request flowing through the system i want open telemetry full open telemetry system running on a local environment",
    "start": "1358159",
    "end": "1364960"
  },
  {
    "text": "how can I do that of course I can have a Kubernetes platform running locally but",
    "start": "1364960",
    "end": "1370080"
  },
  {
    "text": "we just talked about test containers so I can actually use task containers also for establishing an observability",
    "start": "1370080",
    "end": "1376640"
  },
  {
    "text": "platform and that's what I'm doing here yeah and so for developers this is really nice right because they don't need to deal with you know how to set up",
    "start": "1376640",
    "end": "1383520"
  },
  {
    "text": "this entire stack on a Kubernetes and manage all these different components so it's really nice that you can just it's",
    "start": "1383520",
    "end": "1390000"
  },
  {
    "text": "amazing I have defined here in Java these two dependency one for lama and one for open telemetry and I got lama as",
    "start": "1390000",
    "end": "1396720"
  },
  {
    "text": "you saw but let's investigate why we get a probably weird answer from the model so what is running under the hood i have",
    "start": "1396720",
    "end": "1403679"
  },
  {
    "text": "graphana up and running you can see it's running locally through test containers",
    "start": "1403679",
    "end": "1408720"
  },
  {
    "text": "i didn't have to configure anything this is zero configuration zero code it's just out of the box when I run the",
    "start": "1408720",
    "end": "1414559"
  },
  {
    "text": "application so we can probably go and check uh the trace now for the",
    "start": "1414559",
    "end": "1419720"
  },
  {
    "text": "application and let's zoom in so I sent a request to the chat",
    "start": "1419720",
    "end": "1425240"
  },
  {
    "text": "endpoint that eventually called a very tiny model this is a model from hugging",
    "start": "1425240",
    "end": "1430880"
  },
  {
    "text": "face it's called small llm2 or whatever is pronounced so it's really small so",
    "start": "1430880",
    "end": "1436400"
  },
  {
    "text": "it's probably very prone to hallucination based on the task it's important to uh try out and evaluate",
    "start": "1436400",
    "end": "1443760"
  },
  {
    "text": "different models based on the task and if we don't have this kind of observability it's really hard to do that right here we can see exactly what",
    "start": "1443760",
    "end": "1450960"
  },
  {
    "text": "is going on under the hood and improve our application and again if you have a",
    "start": "1450960",
    "end": "1456640"
  },
  {
    "text": "database you have Kafka you can follow all the traces locally without any extra",
    "start": "1456640",
    "end": "1462279"
  },
  {
    "text": "configuration all right how about other APIs though",
    "start": "1462279",
    "end": "1467440"
  },
  {
    "text": "because we've been talking about thirdparty services but we also have other APIs we want to integrate with yeah absolutely so especially when we're",
    "start": "1467440",
    "end": "1474159"
  },
  {
    "text": "running on uh Kubernetes we're we'll most likely have distributed systems where they need to interact right so as",
    "start": "1474159",
    "end": "1480960"
  },
  {
    "text": "developers again does that mean that we need to figure out uh an entire Kubernetes cluster and set up all the",
    "start": "1480960",
    "end": "1487440"
  },
  {
    "text": "different components to try to test our application um that's that's uh that's a",
    "start": "1487440",
    "end": "1492480"
  },
  {
    "text": "lot of work right so in the CNCF space is a new uh well a relatively new project uh which is called Micros and it",
    "start": "1492480",
    "end": "1499600"
  },
  {
    "text": "allows you to uh work with APIs uh mock them and then run them potentially also",
    "start": "1499600",
    "end": "1506320"
  },
  {
    "text": "as uh as test containers in your local development flow but you can also integrate this project in your uh",
    "start": "1506320",
    "end": "1513400"
  },
  {
    "text": "deployment uh flow in your CI/CD flow to mock some uh some interesting data to",
    "start": "1513400",
    "end": "1519520"
  },
  {
    "text": "test uh service individually and then uh automate your entire cycle based on",
    "start": "1519520",
    "end": "1525039"
  },
  {
    "text": "those the same sets of data that you were testing on your local machine now this is a really interesting project it",
    "start": "1525039",
    "end": "1531360"
  },
  {
    "text": "also has an operator that you can deploy on Kubernetes so it kind of spans the entire kind of uh life cycle from",
    "start": "1531360",
    "end": "1538159"
  },
  {
    "text": "development to actually you know almost to production because of course on production you you don't want to be",
    "start": "1538159",
    "end": "1544240"
  },
  {
    "text": "mocking your data but it helps you uh kind of uh simplify this whole uh this",
    "start": "1544240",
    "end": "1549440"
  },
  {
    "text": "whole life cycle this supports not just APIs it also supports uh for example Kafka and messaging and all that so it's",
    "start": "1549440",
    "end": "1556240"
  },
  {
    "text": "uh in different protocols so it's an an interesting project um you can of course",
    "start": "1556240",
    "end": "1561919"
  },
  {
    "text": "use the CLI to automate everything there's uh different APIs or you can use the the nice uh user interface as well",
    "start": "1561919",
    "end": "1569919"
  },
  {
    "text": "so definitely a project that you want to check out yeah and that's a great combination so we have a development",
    "start": "1569919",
    "end": "1576799"
  },
  {
    "text": "workflow now where we can work on microservices in isolation thanks to test containers and micro but how about",
    "start": "1576799",
    "end": "1583200"
  },
  {
    "text": "production so the moment we reach production we want to bind our applications with the actual services",
    "start": "1583200",
    "end": "1589120"
  },
  {
    "text": "and there's a nice API from the Kubernetes project itself it's called service binding API and that is really",
    "start": "1589120",
    "end": "1595840"
  },
  {
    "text": "great in order to separate the concerns because as an application developer I declare that my application requires for",
    "start": "1595840",
    "end": "1602640"
  },
  {
    "text": "example a posgrql database and an Lama inference service for large language",
    "start": "1602640",
    "end": "1607919"
  },
  {
    "text": "models but then the platform itself is responsible for fulfilling that request",
    "start": "1607919",
    "end": "1614000"
  },
  {
    "text": "so we have this very nice separation of concerns now as a developer I might write these few lines of YAML code in",
    "start": "1614000",
    "end": "1621039"
  },
  {
    "text": "order to declare my intent but we would also like to achieve a YAML approach",
    "start": "1621039",
    "end": "1626799"
  },
  {
    "text": "right so if you have uh some kind of uh um developer portal maybe in your",
    "start": "1626799",
    "end": "1632559"
  },
  {
    "text": "company on top of uh your platform uh you might even more simplifying this uh",
    "start": "1632559",
    "end": "1637919"
  },
  {
    "text": "uh procedure for example here I have a backstage instance uh I can uh choose a",
    "start": "1637919",
    "end": "1644159"
  },
  {
    "text": "certain uh golden path here for example I want to build an AI application and I have the possibility to choose different",
    "start": "1644159",
    "end": "1651200"
  },
  {
    "text": "uh large language model providers maybe I want to choose Mistral AI that's a great provider because all their models",
    "start": "1651200",
    "end": "1657520"
  },
  {
    "text": "are uh open sourced Apache 2 licensed so I can both use the cloud service but also run them locally in O Lama uh for",
    "start": "1657520",
    "end": "1664559"
  },
  {
    "text": "development and testing purposes uh or I can choose Lama directly i can choose the database and now what happens when I",
    "start": "1664559",
    "end": "1671679"
  },
  {
    "text": "uh bootstrap this project is that for the local environment I get all the test containers and micro micro configuration",
    "start": "1671679",
    "end": "1678559"
  },
  {
    "text": "but then when it's ultimately deployed to kubernetes then I get all the service bindings for the actual services so once",
    "start": "1678559",
    "end": "1685919"
  },
  {
    "text": "again as a developer I don't have to uh deal with config map secrets and maybe ordering via ticket get to the platform",
    "start": "1685919",
    "end": "1692799"
  },
  {
    "text": "team like that I won't provision a new llama service right exactly right",
    "start": "1692799",
    "end": "1699200"
  },
  {
    "text": "okay so we have these two main uh um ways of going right we have the uh local",
    "start": "1699200",
    "end": "1707039"
  },
  {
    "text": "development workflow based on Kubernetes we saw also an alternative without Kubernetes but ultimately it's all about",
    "start": "1707039",
    "end": "1712320"
  },
  {
    "text": "developer experience yeah so uh to kind of conclude where we where we're at with",
    "start": "1712320",
    "end": "1719120"
  },
  {
    "text": "Kubernetes native development what we need is fast feedback loops to make sure",
    "start": "1719120",
    "end": "1724159"
  },
  {
    "text": "that everything is working the way that we're supposed to that we can get that same kind of experience that we're doing",
    "start": "1724159",
    "end": "1730559"
  },
  {
    "text": "on our local development that that pretty much matches with what uh is going to happen on the Kubernetes",
    "start": "1730559",
    "end": "1736240"
  },
  {
    "text": "cluster that we can try to reduce the cognitive load of you know this whole kind of uh landscape of Kubernetes and",
    "start": "1736240",
    "end": "1743679"
  },
  {
    "text": "all the tools around that that for developers who like to focus on you know their actual development task that they",
    "start": "1743679",
    "end": "1750640"
  },
  {
    "text": "don't get overwhelmed with everything around that and then uh finally uh we want sorry we're both hitting the thing",
    "start": "1750640",
    "end": "1757679"
  },
  {
    "text": "at the same and of course we want developer joy right we want to make sure that developers are happy uh focusing on",
    "start": "1757679",
    "end": "1764799"
  },
  {
    "text": "what makes sense for the organization because if developers are happy they're going to create really cool solutions",
    "start": "1764799",
    "end": "1770399"
  },
  {
    "text": "that are robust and that are going to bring uh you know uh good value to",
    "start": "1770399",
    "end": "1776120"
  },
  {
    "text": "everybody um so I think that's it right yeah thank you very much for joining us",
    "start": "1776120",
    "end": "1782000"
  },
  {
    "text": "and if you like uh our talk please share the feedback if you have any um inputs",
    "start": "1782000",
    "end": "1788240"
  },
  {
    "text": "for us we would greatly appreciate to hear from you you can find the source code also i'm having another",
    "start": "1788240",
    "end": "1794080"
  },
  {
    "text": "presentation with my friend Mauricio also about developer experience so feel free to join there and thank you very",
    "start": "1794080",
    "end": "1799919"
  },
  {
    "text": "much for joining yeah thank you",
    "start": "1799919",
    "end": "1804360"
  }
]