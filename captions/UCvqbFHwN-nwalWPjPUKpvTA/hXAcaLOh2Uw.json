[
  {
    "text": "we have a few team members that could not make it uh today one of them was ill for covid one of them couldn't make make",
    "start": "1640",
    "end": "7839"
  },
  {
    "text": "it because they're in the UK um so we're going to try to do our best to cover for them so apologize if it's a little bit",
    "start": "7839",
    "end": "14320"
  },
  {
    "text": "Rocky",
    "start": "14320",
    "end": "16678"
  },
  {
    "text": "here there exists an age-old trade-off between having good abstraction and having the absolute best possible",
    "start": "25519",
    "end": "31960"
  },
  {
    "text": "performance one of the key benefits of kubernetes is abstraction making it",
    "start": "31960",
    "end": "37280"
  },
  {
    "text": "easier to scale out applications using a cloud native approach today in our short-handed panel we'll be discussing",
    "start": "37280",
    "end": "43120"
  },
  {
    "text": "the usage of kubernetes in Telco and Edge where workloads are highly latency",
    "start": "43120",
    "end": "48199"
  },
  {
    "text": "and throughput sensitive um and also Jitter sensitive and have historically been scaled up using techniques to",
    "start": "48199",
    "end": "54760"
  },
  {
    "text": "squeeze every last bit of process and network performance out of the computers",
    "start": "54760",
    "end": "61920"
  },
  {
    "text": "the Need for Speed the need for low latency and the need for scale cause developers to adopt kubernetes to deploy",
    "start": "63440",
    "end": "68960"
  },
  {
    "text": "workloads onto compute but bypass kubernetes networking instead connectivity to carry",
    "start": "68960",
    "end": "75520"
  },
  {
    "text": "Edge and Telco network is done largely with uh routers expensive routers and",
    "start": "75520",
    "end": "81840"
  },
  {
    "text": "srov uh single rot IO virtualization this allows uh Edge and",
    "start": "81840",
    "end": "87680"
  },
  {
    "text": "Telco to be deployed as containers and pods under standard server infrastructure using kubernetes but they are not",
    "start": "87680",
    "end": "93759"
  },
  {
    "text": "interconnected and scaled out using native kubernetes",
    "start": "93759",
    "end": "98159"
  },
  {
    "text": "networking last year at cubec con 2022 several of our presenters not including",
    "start": "109680",
    "end": "115240"
  },
  {
    "text": "me held a similar panel on how optimize software and new hardware accelerators dpu and ipu can be used to accelerate",
    "start": "115240",
    "end": "122600"
  },
  {
    "text": "kubernetes networking underneath the existing abstraction of kubernetes",
    "start": "122600",
    "end": "128200"
  },
  {
    "text": "networking what is running in the containers does not change except that they experience a much faster lower",
    "start": "129119",
    "end": "134280"
  },
  {
    "text": "latency Network our panel today is applying this concept to Edge and Telco",
    "start": "134280",
    "end": "141000"
  },
  {
    "text": "workloads um so this is the panel uh me and nil um my name is Ian kulage I",
    "start": "147280",
    "end": "153239"
  },
  {
    "text": "work at Google Cloud on uh Google distributed Cloud um nabil's from",
    "start": "153239",
    "end": "159720"
  },
  {
    "text": "Bloomberg um and uh I'll be covering the motivating use case of Telco and Nabil",
    "start": "159720",
    "end": "165440"
  },
  {
    "text": "will be covering the value of offload uh the value of standardization and then we'll be presenting a video on neur",
    "start": "165440",
    "end": "174400"
  },
  {
    "text": "section of course the graphic does not",
    "start": "178760",
    "end": "183440"
  },
  {
    "text": "render okay I don't know why the graphic is not rendering but it's basically just a Nick with some virtual functions um so",
    "start": "185920",
    "end": "192319"
  },
  {
    "text": "srov has been used for years to help containers and virtual machines uh believe that they are experiencing the",
    "start": "192319",
    "end": "198920"
  },
  {
    "text": "use of a single network card um and also allowing them to get direct access to",
    "start": "198920",
    "end": "205319"
  },
  {
    "text": "the PCI bus so they can um bypass uh colel networking um typically using dpdk",
    "start": "205319",
    "end": "212560"
  },
  {
    "text": "to achieve uh high throughput low latency uh",
    "start": "212560",
    "end": "218560"
  },
  {
    "text": "requirements the problem with srov is that many details of the hardware leak up into workload",
    "start": "221239",
    "end": "227680"
  },
  {
    "text": "orchestration um this is a blowup of the srov network node um resource I forget",
    "start": "227680",
    "end": "234000"
  },
  {
    "text": "what it's called from the SRV Network operator and it's got a couple of fields that are always peculiar to the",
    "start": "234000",
    "end": "240519"
  },
  {
    "text": "particular Nick that you're deploying so Intel has a Nick or melanox has a Nick um there's always some valid",
    "start": "240519",
    "end": "247640"
  },
  {
    "text": "combination of these fields that works for that particular",
    "start": "247640",
    "end": "252040"
  },
  {
    "text": "Nick but more importantly the major problem with srov is that it doesn't let you use these powerful kubernetes",
    "start": "255600",
    "end": "261919"
  },
  {
    "text": "networking features like Network policies or service load balancing instead you have to roll your own stacks",
    "start": "261919",
    "end": "268120"
  },
  {
    "text": "for these kind of things or just not get",
    "start": "268120",
    "end": "272280"
  },
  {
    "text": "them um some smaller nitpicks on specific to the implementation of SV",
    "start": "277400",
    "end": "283520"
  },
  {
    "text": "Network operator is that um to change the configuration of a node",
    "start": "283520",
    "end": "289600"
  },
  {
    "text": "requires the workloads to be drained from the node um and also various",
    "start": "289600",
    "end": "295680"
  },
  {
    "text": "network cards have different techniques or um implementation with within sov Network operator to enable sov in the",
    "start": "295680",
    "end": "302120"
  },
  {
    "text": "first place so like for example with the melanox Nick there's an MST config program that gets included in there and",
    "start": "302120",
    "end": "308320"
  },
  {
    "text": "it gets run automatically and everybody's happy but with Intel Nick the same functionality is not included",
    "start": "308320",
    "end": "314680"
  },
  {
    "text": "so you have to do it your",
    "start": "314680",
    "end": "318160"
  },
  {
    "text": "yourself when carriers are looking to cloudify their ran or core networks what they're really trying to do is",
    "start": "323120",
    "end": "328840"
  },
  {
    "text": "modularize infrastructure kubernetes is the system to do this um using Google distributed",
    "start": "328840",
    "end": "334880"
  },
  {
    "text": "Cloud as an example we provide managed kubernetes infrastructure to allow T Telco customers to have kubernetes",
    "start": "334880",
    "end": "341039"
  },
  {
    "text": "Network to to have kubernetes throughout all different areas of their network from the radio Access Network to the",
    "start": "341039",
    "end": "346240"
  },
  {
    "text": "core Network to public Cloud they get the same experience all the way",
    "start": "346240",
    "end": "351240"
  },
  {
    "text": "through with this modularity goal in mind ultimately we need to Aspire to have fungible Cloud environment where",
    "start": "353160",
    "end": "360000"
  },
  {
    "text": "applications are not sensitive to the exact Machinery or network cards that they're running on um this enables networks to become uh",
    "start": "360000",
    "end": "369080"
  },
  {
    "text": "truly Cloud where workloads are portable and transferable to different areas for example an operator could easily spin up",
    "start": "369080",
    "end": "375319"
  },
  {
    "text": "a UPF between public cloud and on-prem uh without having to worry about",
    "start": "375319",
    "end": "380680"
  },
  {
    "text": "what network card is being deployed on the machine or if srov is supported at",
    "start": "380680",
    "end": "387638"
  },
  {
    "text": "all",
    "start": "388400",
    "end": "391400"
  },
  {
    "text": "May thanks uh so what I'm going to talk about really is uh the offload uh so",
    "start": "394639",
    "end": "401560"
  },
  {
    "text": "what we'll do first we'll just quick refresher of what offload means um and",
    "start": "401560",
    "end": "406639"
  },
  {
    "text": "then we'll talk a bit about the control plane what we're targed to do and what we've done so far and then share some",
    "start": "406639",
    "end": "412000"
  },
  {
    "text": "experimental results uh that uh demonstrate the value of offload and we'll conclude with some goals uh",
    "start": "412000",
    "end": "418120"
  },
  {
    "text": "related to this part of the presentation so as just refresher what",
    "start": "418120",
    "end": "423520"
  },
  {
    "text": "we mean by offload usually is offloading packet processing as well some controling functions from the host CPU",
    "start": "423520",
    "end": "430199"
  },
  {
    "text": "uh to the hardware or to the neck uh in general these are we talk about dpus ipus in here uh in this context because",
    "start": "430199",
    "end": "436440"
  },
  {
    "text": "they have uh basic processing um an arm usual an arm cluster that allow you to",
    "start": "436440",
    "end": "442039"
  },
  {
    "text": "do control control plane processing in addition to Hardware offload for the data plane",
    "start": "442039",
    "end": "447680"
  },
  {
    "text": "functions example of things that we'd like to do in Hardware uh basically is policy enforcement encryption load",
    "start": "447680",
    "end": "454319"
  },
  {
    "text": "balance load balancing uh some statistics in addition to as I said earlier Network control planes such as",
    "start": "454319",
    "end": "460720"
  },
  {
    "text": "bgp for example being offloaded to uh to the uh dpu IU in the context of Calico",
    "start": "460720",
    "end": "467159"
  },
  {
    "text": "as an example and I'll use Calico in here because some of the experiments that I'm going to share a bit later uh",
    "start": "467159",
    "end": "473440"
  },
  {
    "text": "based are based on Calico some solutions that exist in the marketplace for thep ipu come from",
    "start": "473440",
    "end": "480360"
  },
  {
    "text": "several vendors uh and here are examples uh Intel ipu uh this is a product that's",
    "start": "480360",
    "end": "486000"
  },
  {
    "text": "available from Intel as it says AMD pendu uh dpu as well as",
    "start": "486000",
    "end": "492479"
  },
  {
    "text": "Nvidia so why are we doing this what are the drivers really what we're trying to achieve some of these we could consider",
    "start": "492479",
    "end": "498720"
  },
  {
    "text": "them to be drivers or anticipations of the value that we could derive from offload if you look at the origin of",
    "start": "498720",
    "end": "504120"
  },
  {
    "text": "this grass we have like kind of the origin being host based B basically everything being done at the host CPU",
    "start": "504120",
    "end": "510120"
  },
  {
    "text": "nothing offloaded uh and then what we're trying to achieve really or try to demonstrate and therefore uh prove the",
    "start": "510120",
    "end": "516839"
  },
  {
    "text": "value for is where the offload is so we're we're anticipating that there will be uh basically uh performance",
    "start": "516839",
    "end": "524000"
  },
  {
    "text": "optimization across multiple Dimensions along power uh or total power that's",
    "start": "524000",
    "end": "529240"
  },
  {
    "text": "what I want to put in because some people anticipate that the the dpus ipus",
    "start": "529240",
    "end": "534480"
  },
  {
    "text": "rightly so are going to use more power but it's not about the component power but the total power on the the server",
    "start": "534480",
    "end": "539640"
  },
  {
    "text": "really the other dimension is security how can we improve security as a result of offloading certain functions uh to",
    "start": "539640",
    "end": "546920"
  },
  {
    "text": "the to the dpu ipu and throughput that's what accelerators really give you the",
    "start": "546920",
    "end": "552200"
  },
  {
    "text": "other dimension is really uh total uh CPU cost saving the host CPUs are",
    "start": "552200",
    "end": "557360"
  },
  {
    "text": "generally being made to really for application processing so use them for the best thing that they're made for uh",
    "start": "557360",
    "end": "562800"
  },
  {
    "text": "that's really what that is so how could we offload CPU Cycles from doing Network",
    "start": "562800",
    "end": "568640"
  },
  {
    "text": "functions if you will such as policy enforce enforcement forwarding statistic collection and so forth uh to the",
    "start": "568640",
    "end": "575360"
  },
  {
    "text": "hardware to the DP ipu and and save the CPU cycles for application processing",
    "start": "575360",
    "end": "580920"
  },
  {
    "text": "and the other dimension is really the total cost so that cuts you on multiple Dimension whether it's power real estate",
    "start": "580920",
    "end": "586760"
  },
  {
    "text": "density of compute and so for in a given real estate some of these as you'll see later",
    "start": "586760",
    "end": "592959"
  },
  {
    "text": "we kind of conducted experiment that show value uh some of some of the others are still at least in and pretty kind of",
    "start": "592959",
    "end": "600800"
  },
  {
    "text": "uh evenhanded comparison we're still trying to uh show the value for or not right so it's about proving value",
    "start": "600800",
    "end": "609360"
  },
  {
    "text": "really so let's start in here we presented this slide last year uh during uh a similar plan that we've done at",
    "start": "609640",
    "end": "616200"
  },
  {
    "text": "cucon in Detroit the aim in here is really to to have uh to hit the security",
    "start": "616200",
    "end": "621519"
  },
  {
    "text": "basically uh we we are looking at the Target architecture for the control plan integration uh between what will happen",
    "start": "621519",
    "end": "628279"
  },
  {
    "text": "between the the compute slash uh Network and control plane that usually we refer",
    "start": "628279",
    "end": "633600"
  },
  {
    "text": "to as the sdn solution and a server or a physical host that will have uh dpu ipu",
    "start": "633600",
    "end": "639839"
  },
  {
    "text": "plugged into it the the point is the intention here is not to go through all the slide in detail but to say the path",
    "start": "639839",
    "end": "646880"
  },
  {
    "text": "in here to come from the control plane through a trusted path uh which is not running uh workload uh basic application",
    "start": "646880",
    "end": "654079"
  },
  {
    "text": "workloads so we'll come through the thep ipu and then we we really kind of control the instantiation and the",
    "start": "654079",
    "end": "661240"
  },
  {
    "text": "workloads and observe what's being instantiated from The Trusted domain to the less trusted domain which is a host",
    "start": "661240",
    "end": "667360"
  },
  {
    "text": "CPU and therefore there are integration that have to happen between the control plane running on the host CPU and the",
    "start": "667360",
    "end": "673680"
  },
  {
    "text": "control plane running in the dpu together with the control plane of the compute like kubernetes control plane",
    "start": "673680",
    "end": "679440"
  },
  {
    "text": "Master as well as the the sdn control plane like what we could have with Calico and the other",
    "start": "679440",
    "end": "685519"
  },
  {
    "text": "Solutions So to that Target what we've done we've done an mentation uh this is",
    "start": "685519",
    "end": "690680"
  },
  {
    "text": "still within our four walls if you want to put it that way where we started that journey and the initial Journey we",
    "start": "690680",
    "end": "696519"
  },
  {
    "text": "didn't do the full offload but rather what we aimed to do that integrate the current way in which uh kubernetes and",
    "start": "696519",
    "end": "703480"
  },
  {
    "text": "Calo run uh basically mainly on the with their components on the host CPU and try",
    "start": "703480",
    "end": "708959"
  },
  {
    "text": "to to develop what's needed to offload the data plane functions to the dpu ipu",
    "start": "708959",
    "end": "714880"
  },
  {
    "text": "so in that in that Journey basically we developed about seven agents uh that end up doing that integration that allow you",
    "start": "714880",
    "end": "721760"
  },
  {
    "text": "to to offload the forwarding plane to to offload meaning the FIB in particular uh",
    "start": "721760",
    "end": "728200"
  },
  {
    "text": "that will be learned in uh in the in the control plane on the host CPU so want to we want to offload that FIB uh to the",
    "start": "728200",
    "end": "735120"
  },
  {
    "text": "data plane on the dpu ipu and the other one is to upload the policies and I'm going to talk about policies in here we",
    "start": "735120",
    "end": "741839"
  },
  {
    "text": "also looked at encryption and we'll look at that as well from experimental results the when we say the data plane",
    "start": "741839",
    "end": "748120"
  },
  {
    "text": "in here obviously on the DP ipu there is what we call in networking as slow path",
    "start": "748120",
    "end": "753199"
  },
  {
    "text": "if you want to put that way or compute complex that's usually the UN processor so we do that integration between the",
    "start": "753199",
    "end": "758680"
  },
  {
    "text": "control plane that's what you see in yellow these are the agents that we implemented to to kind of splice a",
    "start": "758680",
    "end": "764800"
  },
  {
    "text": "control plane between the dpu ipu and the host CPU so that we could exchange that information to be programmed in the",
    "start": "764800",
    "end": "771279"
  },
  {
    "text": "hardware once we get it to the control plane in the dpu ipu on the arm then we upload it to the ASC on that dpu ipu and",
    "start": "771279",
    "end": "777920"
  },
  {
    "text": "that's where the the actual forwarding path is and the policy enforcement is happening in the",
    "start": "777920",
    "end": "784000"
  },
  {
    "text": "hardware so we use this architecture basically to conduct an experiment using",
    "start": "784000",
    "end": "789040"
  },
  {
    "text": "Calico doesn't have to be Calico but in this case we use Calico so this is very basic experimental setup where we have",
    "start": "789040",
    "end": "795639"
  },
  {
    "text": "two servers interconnected via 25 gig we have a source running in a pod and another pod running basically u in here",
    "start": "795639",
    "end": "803279"
  },
  {
    "text": "I perf and you see in here two colors uh red and yellow that I want to call out what red is really related to",
    "start": "803279",
    "end": "810040"
  },
  {
    "text": "application Level processing and what yellow is related to the network layer processing in the in the host kernel",
    "start": "810040",
    "end": "816839"
  },
  {
    "text": "basically think about this way and this is very important because what we're trying to look at that how much of the",
    "start": "816839",
    "end": "822399"
  },
  {
    "text": "CPU Cycles on the host is taken by the application which if you remember I said this really what the CPUs are meant for",
    "start": "822399",
    "end": "829279"
  },
  {
    "text": "and which portion of that CPU if you will is taking up by the by the network",
    "start": "829279",
    "end": "834360"
  },
  {
    "text": "layer processing and that's really what I want to call out so this is a basic experiment that",
    "start": "834360",
    "end": "840959"
  },
  {
    "text": "was done again in here there are many much more data behind this and many more other experiments uh but that shows an",
    "start": "840959",
    "end": "847360"
  },
  {
    "text": "example where where we had Calico you see Calico running on the host this is today Calico with ebpf uh Calico",
    "start": "847360",
    "end": "854399"
  },
  {
    "text": "offloaded and then we generated the Dos attack so this is basically a single flow for which we're measuring",
    "start": "854399",
    "end": "860880"
  },
  {
    "text": "performance um that's what you see in the in the in the blue uh triangles that",
    "start": "860880",
    "end": "865920"
  },
  {
    "text": "you see in here and the performance in here is trut in particular that's what you see in the blue triangle and what I",
    "start": "865920",
    "end": "871399"
  },
  {
    "text": "want to call attention to the network layer processing on the on the in the kernel which is the yellow versus the",
    "start": "871399",
    "end": "877600"
  },
  {
    "text": "application layer processing that's done in the red so when we have everything done in the Calico on the host you could",
    "start": "877600",
    "end": "883440"
  },
  {
    "text": "see good amount of the it's full CPU core is taking up this is measured in CPU cores so it's taken up by the by the",
    "start": "883440",
    "end": "891839"
  },
  {
    "text": "the network layer basically that's Sayo and about 90% of the second P core is",
    "start": "891839",
    "end": "897399"
  },
  {
    "text": "being taken off by the applications and total we achieve roughly about 19 gbit per second under the experiment that we",
    "start": "897399",
    "end": "904079"
  },
  {
    "text": "had we offloaded some of that stuff we we basically decreased about roughly",
    "start": "904079",
    "end": "909240"
  },
  {
    "text": "about 10% the the the the the the network layer consumption of CPU on the",
    "start": "909240",
    "end": "914800"
  },
  {
    "text": "CPU and we increased a little bit the application processing and this very single case where we have a single flow",
    "start": "914800",
    "end": "920720"
  },
  {
    "text": "now what we did we end up generating large number of flows about 250k flows per second consider them to be an attack",
    "start": "920720",
    "end": "927880"
  },
  {
    "text": "but they could be large number of flows anyhow being generated whether legitimate or not but in here the action was to drop them therefore the attack",
    "start": "927880",
    "end": "934440"
  },
  {
    "text": "part and as you see in the third in the third bar uh as you're looking at it on",
    "start": "934440",
    "end": "940160"
  },
  {
    "text": "the right which says Calo host under dos the CP the CPU uh Network layer",
    "start": "940160",
    "end": "946000"
  },
  {
    "text": "processing had jumped up to 100% the application what's available for the",
    "start": "946000",
    "end": "951360"
  },
  {
    "text": "application had reduced had shrunk from 90% to about 50 50% or so but more",
    "start": "951360",
    "end": "957040"
  },
  {
    "text": "importantly you see the good putut of of that workflow that's legitimate had dropped from 19 gbit to about 7 gbits",
    "start": "957040",
    "end": "964319"
  },
  {
    "text": "and that's a negative effect that you see when we when we offload the control plane function sorry the data plane",
    "start": "964319",
    "end": "970160"
  },
  {
    "text": "function of policy enforcement L3 L4 policy enforcement to the hardware we",
    "start": "970160",
    "end": "975360"
  },
  {
    "text": "regain actually the the application processing so you can see that most of the the red jumped up became more",
    "start": "975360",
    "end": "981759"
  },
  {
    "text": "dominant than the yellow that's really application ler processing and we restored back the the the good put for",
    "start": "981759",
    "end": "988319"
  },
  {
    "text": "that legitimate float to 19 gabit per second all right that's kind of an example where a float could become uh",
    "start": "988319",
    "end": "994959"
  },
  {
    "text": "very useful so really the general observation that uh there is consistent results that",
    "start": "994959",
    "end": "1001920"
  },
  {
    "text": "we observed across this experiment and other experiments uh for uh for packet forwarding in packets per second uh",
    "start": "1001920",
    "end": "1008319"
  },
  {
    "text": "under attack attack or legitimate traffic and as a function of the number of flows per second this is the flow",
    "start": "1008319",
    "end": "1013600"
  },
  {
    "text": "rate that we call uh there is efficient utilization of host CPU because the host CPU is spending more time in doing",
    "start": "1013600",
    "end": "1020759"
  },
  {
    "text": "application layer processing and less time doing control layer processing uh sorry uh Network layer processing and",
    "start": "1020759",
    "end": "1027000"
  },
  {
    "text": "then as an observation although we didn't show it in here there are different approaches today to do the networking solution one of them is based",
    "start": "1027000",
    "end": "1033438"
  },
  {
    "text": "on ovs Calo is another and so forth some of these approaches are based on what we",
    "start": "1033439",
    "end": "1038640"
  },
  {
    "text": "call packet driven data plane uh data plane programmability so for example in",
    "start": "1038640",
    "end": "1044558"
  },
  {
    "text": "ovs you you you wait for the first packet to come in the the control paint for OBS will have kind of what needs to",
    "start": "1044559",
    "end": "1050919"
  },
  {
    "text": "be done for a given flow but or for a given characteristics of the flow when it sees the first packet it programs the",
    "start": "1050919",
    "end": "1057039"
  },
  {
    "text": "flow in the in the data path and from there on you start exercising whatever actions you want on that flow whether",
    "start": "1057039",
    "end": "1062840"
  },
  {
    "text": "processing or packet drop or or or Allah or whatever it is you exercise at that point in time so that's really",
    "start": "1062840",
    "end": "1069240"
  },
  {
    "text": "programmability of the data plane driven by the first packet comes in whereas control plane uh programmability is",
    "start": "1069240",
    "end": "1075440"
  },
  {
    "text": "driven top down if you will from the control plane and that's what we do in C and the observation is that control",
    "start": "1075440",
    "end": "1080640"
  },
  {
    "text": "plane basically driven approach to PR programming the data path yields often",
    "start": "1080640",
    "end": "1085960"
  },
  {
    "text": "better results in total and we could talk about that on the side after this meeting if if anybody is interested with",
    "start": "1085960",
    "end": "1092360"
  },
  {
    "text": "that the other uh experiment that we looked at is really the value of encryption encryption is pretty costly",
    "start": "1092360",
    "end": "1098600"
  },
  {
    "text": "operation when it's done in software even when you have uh the DS set basically where you have the the",
    "start": "1098600",
    "end": "1104400"
  },
  {
    "text": "instruction set uh from some of these CPUs like the Intel CPUs so most of the experiment that we conducted we",
    "start": "1104400",
    "end": "1110760"
  },
  {
    "text": "conducted with and without uh EES basically so that we we look at the",
    "start": "1110760",
    "end": "1116799"
  },
  {
    "text": "performance and we looked also at the offload of the encryption uh to uh to the to the dpu ipu in this",
    "start": "1116799",
    "end": "1123760"
  },
  {
    "text": "case so there is system under test in here uh basically a pod that's running a",
    "start": "1123760",
    "end": "1129400"
  },
  {
    "text": "traffic generator we had engine X running in the context of VM that's the system under test what we've done that",
    "start": "1129400",
    "end": "1136679"
  },
  {
    "text": "we uh We've initiated couple of sessions at a time on each session we made up to",
    "start": "1136679",
    "end": "1142159"
  },
  {
    "text": "th requests and we repeated that over 25 seconds and we repeated those test over 3 second to get statistically",
    "start": "1142159",
    "end": "1148720"
  },
  {
    "text": "significant results and that's what I'm going to show in here what I want to call your attention in here this is a",
    "start": "1148720",
    "end": "1154640"
  },
  {
    "text": "lot of data being generated as you can see on the x-axis uh this is uh the",
    "start": "1154640",
    "end": "1159799"
  },
  {
    "text": "encryption result as a function of the file size being transferred uh and uh",
    "start": "1159799",
    "end": "1165000"
  },
  {
    "text": "what we're measuring in here is through put uh relative to utilization so this is really what you're achieving in",
    "start": "1165000",
    "end": "1171320"
  },
  {
    "text": "throughput relative to how many CPU Cycles as you could see the the the the",
    "start": "1171320",
    "end": "1176679"
  },
  {
    "text": "larger the file transfers May really the the longer the the the session duration",
    "start": "1176679",
    "end": "1182080"
  },
  {
    "text": "is and that's what I want to call back in the in the gray and I'll talk about ktls and so forth what they mean but in",
    "start": "1182080",
    "end": "1188200"
  },
  {
    "text": "the gray you see the gray compared to the blue as the file size that being transferred over this connection",
    "start": "1188200",
    "end": "1193840"
  },
  {
    "text": "increases you get much much better if you will or incrementally more better performance with the offload uh to the",
    "start": "1193840",
    "end": "1200919"
  },
  {
    "text": "point that you get at one file size about twice uh the throughput that you get with uh offload compared to host",
    "start": "1200919",
    "end": "1208240"
  },
  {
    "text": "based encryption if you want to put that way and that's to the to the to the far right hand side as you notice we focus",
    "start": "1208240",
    "end": "1214440"
  },
  {
    "text": "on encryption because that's really what we we aimed to really to to look at at what performance it uh it shows what",
    "start": "1214440",
    "end": "1220840"
  },
  {
    "text": "kind of performance Improvement or not right so we start with the neutral position if you will with anticipation",
    "start": "1220840",
    "end": "1226320"
  },
  {
    "text": "that we'll have better performance when we FL we used in this case ktls or TLS in general so we looked at user plane",
    "start": "1226320",
    "end": "1232960"
  },
  {
    "text": "TLS we looked at kernel based TLS as well as ktls offload um as as a means to",
    "start": "1232960",
    "end": "1239080"
  },
  {
    "text": "to look at encryption obviously the encryption could also apply to IPC so the the value in here is about",
    "start": "1239080",
    "end": "1244520"
  },
  {
    "text": "encryption not about whether TLS or not but we use TLS as to do the the testing",
    "start": "1244520",
    "end": "1249760"
  },
  {
    "text": "in here as as a conduit for this testing then the other way we look at it",
    "start": "1249760",
    "end": "1256240"
  },
  {
    "text": "as transactional uh so how many Quest can you do for given set of for given CPU Cycles again as you see in here U as",
    "start": "1256240",
    "end": "1264159"
  },
  {
    "text": "the file sizes grow then we we get better per performance again compared the the gray to to uh to Blue but also",
    "start": "1264159",
    "end": "1271760"
  },
  {
    "text": "when we have very short transactions uh you could see that user plane becomes",
    "start": "1271760",
    "end": "1276880"
  },
  {
    "text": "much more becomes more uh more performant if you want to put that way and the reason for that because there is",
    "start": "1276880",
    "end": "1282919"
  },
  {
    "text": "overhead and trying to in setting up uh the session in the hardware so the more",
    "start": "1282919",
    "end": "1288520"
  },
  {
    "text": "the shorter the duration the more flows you have and therefore you're spending overhead in programming the the data",
    "start": "1288520",
    "end": "1293840"
  },
  {
    "text": "plane although like you're not using for too long and that's really where where the performance comes in so the longer",
    "start": "1293840",
    "end": "1299400"
  },
  {
    "text": "the duration of the TLs session the better off you are usually so what are we aiming to do from",
    "start": "1299400",
    "end": "1306480"
  },
  {
    "text": "here uh really in here so we I showed you an example of a Target that we're aiming for and what we've implemented so",
    "start": "1306480",
    "end": "1313159"
  },
  {
    "text": "far but in general this you could call it as goals as well as call Action to really enable dpus apus in standardized",
    "start": "1313159",
    "end": "1319840"
  },
  {
    "text": "way uh what we need to really look at is how do we integrate the compute and and",
    "start": "1319840",
    "end": "1324880"
  },
  {
    "text": "network control plane uh for the dpus dpu dpus and ipus to achieve trust or",
    "start": "1324880",
    "end": "1330840"
  },
  {
    "text": "security uh to achieve performance uh as well to offload the control plane functions uh in coordination with the",
    "start": "1330840",
    "end": "1337640"
  },
  {
    "text": "control plane functions on the between the host CPU and the the dpu ipu and finally this is one of the data plan",
    "start": "1337640",
    "end": "1344000"
  },
  {
    "text": "function was which is polic programmability to drive for it to be control driven the other thing while we're",
    "start": "1344000",
    "end": "1350840"
  },
  {
    "text": "talking about kubernetes in here not at at all end points in a lot of environments are containers basically",
    "start": "1350840",
    "end": "1356919"
  },
  {
    "text": "but we have a lot of cases where we have bare metal mvms so the idea in here is to try to enable that also for for this",
    "start": "1356919",
    "end": "1363720"
  },
  {
    "text": "type of end points which is goes beyond just container workloads but also to Bare Metal npms so what's happening in",
    "start": "1363720",
    "end": "1371000"
  },
  {
    "text": "the standard today uh to enable that and this is a slide from our colleague vipen who could make it today with us there is",
    "start": "1371000",
    "end": "1378159"
  },
  {
    "text": "an effort in uh in OPI going on right now uh for focus on the dpu ipus uh one",
    "start": "1378159",
    "end": "1384840"
  },
  {
    "text": "of the major initiative there they have is really on the life cycle management because some people look at these as",
    "start": "1384840",
    "end": "1390240"
  },
  {
    "text": "systems inside other systems so you have a server as a system and then you have the the dpu ipu inside it so which has",
    "start": "1390240",
    "end": "1397559"
  },
  {
    "text": "its own usually network interface as well as its own CPU complex and you need",
    "start": "1397559",
    "end": "1403159"
  },
  {
    "text": "to really manage software on it and you need to manage the life cycle of that so the OPI is looking at that there are set",
    "start": "1403159",
    "end": "1408559"
  },
  {
    "text": "of apis being developed also the on the in the in OPI um dpk is another set of",
    "start": "1408559",
    "end": "1415919"
  },
  {
    "text": "tools that uh that have been um have been standardized and there is work going on today in p4c uh this is uh work",
    "start": "1415919",
    "end": "1424279"
  },
  {
    "text": "that's happening uh in a working group and being looked up to be carried with an OPI uh for standardization you have",
    "start": "1424279",
    "end": "1430600"
  },
  {
    "text": "this slide that are reference to this uh to this material and what what the body OPI is doing in this particular case uh",
    "start": "1430600",
    "end": "1437000"
  },
  {
    "text": "relation to these things that you could take a look at so Ian back to",
    "start": "1437000",
    "end": "1443600"
  },
  {
    "text": "you yeah so next we have nepur",
    "start": "1445080",
    "end": "1450640"
  },
  {
    "text": "section my name is superer I work for Intel ipu team speakers before me have",
    "start": "1452640",
    "end": "1458240"
  },
  {
    "text": "touched upon KS enhancement features performance Kings and specialized heart B and need for",
    "start": "1458240",
    "end": "1464799"
  },
  {
    "text": "standardization so where do we go from here we have these two open source efforts going on in pet that are",
    "start": "1464799",
    "end": "1471159"
  },
  {
    "text": "somewhat interdependent to bring in Cloud native approach while benefiting from hardw acceleration let me go over",
    "start": "1471159",
    "end": "1478520"
  },
  {
    "text": "some and explain how one of the proposals in kues",
    "start": "1478520",
    "end": "1485760"
  },
  {
    "text": "enhancement is for an agent model where agent runs in a pod it does not rely on CNA conflex but gathers all required",
    "start": "1485760",
    "end": "1492799"
  },
  {
    "text": "data from kubernetes apis by watch of objects this agent implements rule based",
    "start": "1492799",
    "end": "1499559"
  },
  {
    "text": "access and control provides for loose coupling and a good abstraction point for supporting various Hardware vendor",
    "start": "1499559",
    "end": "1506480"
  },
  {
    "text": "sdks the hardware SDK apis generally club functionalities like Hardware provisioning rule offloads PF reset",
    "start": "1506480",
    "end": "1513919"
  },
  {
    "text": "functions stats and others the second basic one is related to networking IT addresses multiple",
    "start": "1513919",
    "end": "1521520"
  },
  {
    "text": "Network attachments to a pod this is required for Edge clouds for segregating",
    "start": "1521520",
    "end": "1526640"
  },
  {
    "text": "control and RPL traffic for instance the f1c and f1u interfaces between CU and",
    "start": "1526640",
    "end": "1533480"
  },
  {
    "text": "du this proposal introduces two new objects pod Network and pod Network",
    "start": "1533480",
    "end": "1539200"
  },
  {
    "text": "attachment these two objects with parameters and provider would enable agent to identify uniquely and assign",
    "start": "1539200",
    "end": "1545480"
  },
  {
    "text": "the hardware device functions to the parts dpdk based CNF use devices like",
    "start": "1545480",
    "end": "1552279"
  },
  {
    "text": "srov for meeting the stringent performance and latency requirements of various 3gpp service types these lead",
    "start": "1552279",
    "end": "1559760"
  },
  {
    "text": "abstraction and Cloud native approach today these are done to device plugins",
    "start": "1559760",
    "end": "1564919"
  },
  {
    "text": "the spec that is not address is trining of these devices on termination of a pod",
    "start": "1564919",
    "end": "1570559"
  },
  {
    "text": "there are proposals from the community to use health check and Readiness failures from the applications R to",
    "start": "1570559",
    "end": "1576440"
  },
  {
    "text": "traffic for this to work it has to be done in conjunction with Hardware CK",
    "start": "1576440",
    "end": "1581720"
  },
  {
    "text": "apis that clean up Flo rules and call function level resets for proper Q",
    "start": "1581720",
    "end": "1586880"
  },
  {
    "text": "draining this brings to ipd K.I kubernetes",
    "start": "1586880",
    "end": "1594200"
  },
  {
    "text": "offload recipe using the proposals mentioned earlier recipe leverages this",
    "start": "1594200",
    "end": "1600279"
  },
  {
    "text": "agent model to offload networking flows to P4 data plane it has been done using",
    "start": "1600279",
    "end": "1605360"
  },
  {
    "text": "Calico CN as implementation supports external airplane the offload includes service",
    "start": "1605360",
    "end": "1612640"
  },
  {
    "text": "load balancing Network policies virtual switching and routing on primary Network the Hardware generated stats at flow and",
    "start": "1612640",
    "end": "1620080"
  },
  {
    "text": "connection level give visibility into every flow and number of connections per end points for intelligent tuning tuning",
    "start": "1620080",
    "end": "1627559"
  },
  {
    "text": "with the help of community we have to bring service implementation on non primary networks too we are working",
    "start": "1627559",
    "end": "1634760"
  },
  {
    "text": "towards standardization of agent and manager components through OPI model allows for keeping the vendor SDK step",
    "start": "1634760",
    "end": "1642640"
  },
  {
    "text": "uh completely abstracted and running on trusted ipu domain agent follows the rle",
    "start": "1642640",
    "end": "1647720"
  },
  {
    "text": "based access and control semantics that's bringing key security controls in",
    "start": "1647720",
    "end": "1653039"
  },
  {
    "text": "access to Hardware SDC Resources with the recipe benefiting from Hardware acceleration offloads",
    "start": "1653039",
    "end": "1660480"
  },
  {
    "text": "adaptive device skes quas and congestion control we can meet the 3G PP kpi",
    "start": "1660480",
    "end": "1667120"
  },
  {
    "text": "requirements for H cloud deployments while enforcing security at various tiers of",
    "start": "1667120",
    "end": "1673360"
  },
  {
    "text": "networking the added benefit can be seen by uploading Compu intensive flows like",
    "start": "1673360",
    "end": "1678559"
  },
  {
    "text": "ip6 to Hardware keeping latencies low and freeing up course Intel supports no",
    "start": "1678559",
    "end": "1685640"
  },
  {
    "text": "feature plugin to advertise features like supported instruction sets RDMA",
    "start": "1685640",
    "end": "1691200"
  },
  {
    "text": "look aside inline encryption and other node labels so that these functions can",
    "start": "1691200",
    "end": "1697120"
  },
  {
    "text": "only be enabled on the nodes that support it the word is uh ongoing to get",
    "start": "1697120",
    "end": "1702960"
  },
  {
    "text": "all the device drivers Upstream to the kernel Intel is also working with wider TP DK Community to bring in P more",
    "start": "1702960",
    "end": "1709200"
  },
  {
    "text": "drivers for the next generation of Intel networking devices my name is Dean daily from uh",
    "start": "1709200",
    "end": "1716080"
  },
  {
    "text": "Intel and I'm so sorry that I'm unable to meet with you today I got covid wasn't able to travel but what I wanted",
    "start": "1716080",
    "end": "1723000"
  },
  {
    "text": "to do was summarize uh some of the points that were made in our panel and also talk about where we go",
    "start": "1723000",
    "end": "1730120"
  },
  {
    "text": "next so if you look at the types of things that all of our different panelists brought up uh Ian talked about",
    "start": "1730440",
    "end": "1738000"
  },
  {
    "text": "having multiple networks being able to drain traffic as it has gone through sov",
    "start": "1738000",
    "end": "1745039"
  },
  {
    "text": "and having security uh built into the system those three items are already in",
    "start": "1745039",
    "end": "1752159"
  },
  {
    "text": "progress both in the enhanced kubernetes projects and also in this working",
    "start": "1752159",
    "end": "1758200"
  },
  {
    "text": "example that we have on ipk which is part of OPI and so we're working through",
    "start": "1758200",
    "end": "1763640"
  },
  {
    "text": "these items one by one see how we can get them to work see how we can make sure that we preserve those abstractions",
    "start": "1763640",
    "end": "1770960"
  },
  {
    "text": "so that the uh end workload doesn't have to change it can still remain sov it can",
    "start": "1770960",
    "end": "1776919"
  },
  {
    "text": "still remain to use the kubernetes networking that's already taking advantage of but it gets that faster",
    "start": "1776919",
    "end": "1783679"
  },
  {
    "text": "Network gets that lower latency so that you can expand the set of workloads that can run on top of it and then what uh",
    "start": "1783679",
    "end": "1791760"
  },
  {
    "text": "niil was talking about is are these benefits of these new devices as you go",
    "start": "1791760",
    "end": "1797320"
  },
  {
    "text": "Beyond optimized software you can actually have these hardware dpus and ipus that give you even better",
    "start": "1797320",
    "end": "1804559"
  },
  {
    "text": "performance lower latency and can start to integrate these functions that are",
    "start": "1804559",
    "end": "1809880"
  },
  {
    "text": "usually very expensive in software like crypto into your pipeline and be able to get that at a hardware level of",
    "start": "1809880",
    "end": "1816840"
  },
  {
    "text": "performance and these are also things that we have been integrating into ipk and also things that are part of these",
    "start": "1816840",
    "end": "1824240"
  },
  {
    "text": "kubernetes enhancements going forward and then once we get there we need to be",
    "start": "1824240",
    "end": "1829279"
  },
  {
    "text": "able to have it be standard so that uh you're you know uh still buying into the",
    "start": "1829279",
    "end": "1836200"
  },
  {
    "text": "kubernetes ecosystem and not having to use any specific interfaces for a",
    "start": "1836200",
    "end": "1842039"
  },
  {
    "text": "particular Nick or device or special software solution and so uh what we have",
    "start": "1842039",
    "end": "1848720"
  },
  {
    "text": "found in ipk is that Calico is offering this data plane API which we think is a",
    "start": "1848720",
    "end": "1854440"
  },
  {
    "text": "great starting point for being able to standardize not just the interface for the applications but also the interface",
    "start": "1854440",
    "end": "1861639"
  },
  {
    "text": "for the the folks uh deploying these clusters uh maintaining them over",
    "start": "1861639",
    "end": "1869600"
  },
  {
    "text": "time and so that brings us to where should we go next is that this and these",
    "start": "1869600",
    "end": "1875760"
  },
  {
    "text": "enhancement proposals have already started to come out and they give us some very important features that we",
    "start": "1875760",
    "end": "1881480"
  },
  {
    "text": "need uh to be able to accelerate this network we need to be able to uh enable these applications to continue to have",
    "start": "1881480",
    "end": "1888639"
  },
  {
    "text": "multiple networks so you can separate your Edge or Telco workload connectivity",
    "start": "1888639",
    "end": "1895000"
  },
  {
    "text": "from the regular connectivity into the Pod and we need to be able to have uh allow people to use their existing cnis",
    "start": "1895000",
    "end": "1903440"
  },
  {
    "text": "but also have the cnis enable this agent model so the cnis can report to an",
    "start": "1903440",
    "end": "1908919"
  },
  {
    "text": "optimized data plane uh such as VPP or dpu ipu to tell it hey there's a new",
    "start": "1908919",
    "end": "1915880"
  },
  {
    "text": "route there's a new policy there's a new endpoint so that we can accelerate that where when it's",
    "start": "1915880",
    "end": "1921880"
  },
  {
    "text": "available and we want to take all those Concepts that are being proposed and bring them into a working example so we",
    "start": "1921880",
    "end": "1928799"
  },
  {
    "text": "have open source code being developed in the open uh that you can use to see if",
    "start": "1928799",
    "end": "1936720"
  },
  {
    "text": "that works for your acceleration solution of choice and also be able to run it with your real workloads and see",
    "start": "1936720",
    "end": "1943440"
  },
  {
    "text": "the benefit uh uh of of this acceleration uh in your system and then",
    "start": "1943440",
    "end": "1950679"
  },
  {
    "text": "once we uh have that working example running uh there is a community that's",
    "start": "1950679",
    "end": "1955919"
  },
  {
    "text": "being built around open programmable infrastructure called OPI which ipk is a",
    "start": "1955919",
    "end": "1961200"
  },
  {
    "text": "part of and this is where we want to standardize a lot of these different data plane apis that can be used not",
    "start": "1961200",
    "end": "1967279"
  },
  {
    "text": "just for kubernetes but for other uh environments different control planes that should all end up using the same",
    "start": "1967279",
    "end": "1974360"
  },
  {
    "text": "kind of constructs for routing and forwarding load balancing things like that and so uh to summarize you know",
    "start": "1974360",
    "end": "1982799"
  },
  {
    "text": "we're making great progress here but uh we wanted to bring this forum to you to",
    "start": "1982799",
    "end": "1988279"
  },
  {
    "text": "be able to bring it to your attention of what the the um potential is and uh I'm",
    "start": "1988279",
    "end": "1994159"
  },
  {
    "text": "going to give it back to the lucky gentlemen who are actually there with you in person to uh uh uh summarize and",
    "start": "1994159",
    "end": "2001320"
  },
  {
    "text": "and bring us home thank you so much and uh have a good conference yes thanks",
    "start": "2001320",
    "end": "2008559"
  },
  {
    "text": "Dan um hopefully it's clear that uh offloading kubernetes uh networking",
    "start": "2008559",
    "end": "2013799"
  },
  {
    "text": "paves the way for fungible Telco Cloud workloads um with performance parity of",
    "start": "2013799",
    "end": "2019200"
  },
  {
    "text": "optimized systems thank you",
    "start": "2019200",
    "end": "2023200"
  },
  {
    "text": "everyone",
    "start": "2024720",
    "end": "2027720"
  }
]