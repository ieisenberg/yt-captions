[
  {
    "start": "0",
    "end": "72000"
  },
  {
    "text": "hello everyone Welcome to our talk on building salsa 3 Conformity testers for artifacts generated on GitHub",
    "start": "0",
    "end": "8540"
  },
  {
    "text": "my name is Esther Ellie and I'm a software engineer on the Google open source security team and I also work on",
    "start": "10080",
    "end": "15900"
  },
  {
    "text": "Faison a team about open source FHA transpilers this is my co-speaker Ian",
    "start": "15900",
    "end": "21900"
  },
  {
    "text": "Lewis uh yes I'm Ian Lewis I'm a developer Advocate at Google Cloud",
    "start": "21900",
    "end": "28920"
  },
  {
    "text": "um working on container and supply chain security and uh I'm currently on loan to",
    "start": "28920",
    "end": "35100"
  },
  {
    "text": "the Google open source security team uh working on salsa tooling",
    "start": "35100",
    "end": "41600"
  },
  {
    "text": "all right thanks so first we'll be going over some background information on a testers and",
    "start": "42360",
    "end": "48840"
  },
  {
    "text": "salsa 3 conformants then I'll be handing it over to Ian who will be discussing the challenges in building in a tester",
    "start": "48840",
    "end": "55500"
  },
  {
    "text": "after that I'll go over an example a tester that we've created that's based on containers and then Ian will finally",
    "start": "55500",
    "end": "62520"
  },
  {
    "text": "finish it off with diving into our templatized framework for our testers which we're calling the delegated a tester",
    "start": "62520",
    "end": "69680"
  },
  {
    "text": "all right so many of you are already familiar with",
    "start": "70560",
    "end": "75720"
  },
  {
    "start": "72000",
    "end": "72000"
  },
  {
    "text": "the software delivery Pipeline and the complexity that exists at each of these stages as an open source engineer one could be",
    "start": "75720",
    "end": "82259"
  },
  {
    "text": "both a developer of a software delivery Pipeline and also a consumer of other",
    "start": "82259",
    "end": "88560"
  },
  {
    "text": "people's software delivery pipelines even at the same time perhaps either by pulling in dependencies and so forth",
    "start": "88560",
    "end": "95220"
  },
  {
    "text": "each software project has these dependencies that are pulled in from other Upstream developers and then used to create your own new software",
    "start": "95220",
    "end": "102180"
  },
  {
    "text": "but during any of these stages from either the source and the build pulling independency and then all the way to",
    "start": "102180",
    "end": "108060"
  },
  {
    "text": "deploying your resource anything can go wrong which may cause a software supply chain",
    "start": "108060",
    "end": "113220"
  },
  {
    "text": "attack so the threats and attack factors in",
    "start": "113220",
    "end": "119159"
  },
  {
    "text": "this are all kind of marked at each of these stages by through these links between let's say the source and the",
    "start": "119159",
    "end": "125100"
  },
  {
    "text": "build and also what can occur at one of these stages like during the build and there have been many sort of countless",
    "start": "125100",
    "end": "131039"
  },
  {
    "text": "examples of real attacks that have happened in the past couple of years in each one of these places",
    "start": "131039",
    "end": "136860"
  },
  {
    "text": "so at the start for example you might imagine that code could be committed to a source repository repository or even",
    "start": "136860",
    "end": "143160"
  },
  {
    "text": "perhaps that those Source Control Systems could be compromised themselves the same thing could happen maybe at the",
    "start": "143160",
    "end": "148500"
  },
  {
    "text": "bills where maybe perhaps bad uh dependencies could be injected but also the build platform itself may be",
    "start": "148500",
    "end": "154739"
  },
  {
    "text": "compromised and then likewise through all of these um a compromise could exist both at the",
    "start": "154739",
    "end": "160140"
  },
  {
    "text": "place where uh translations are happening or through the links that are happening between",
    "start": "160140",
    "end": "165420"
  },
  {
    "text": "these stages with so many different attempts potential attack factors at each step",
    "start": "165420",
    "end": "171239"
  },
  {
    "text": "it's really hard to trust that each of these uh in conglomerate are actually happening",
    "start": "171239",
    "end": "176879"
  },
  {
    "text": "um in full with trust so on the flip side there are projects like",
    "start": "176879",
    "end": "183180"
  },
  {
    "start": "180000",
    "end": "180000"
  },
  {
    "text": "the salsa framework and others that are creating Frameworks for securing this pipeline in a methodical way",
    "start": "183180",
    "end": "188220"
  },
  {
    "text": "at each of these steps you could imagine information being used to validate that potentially a transformation or that the",
    "start": "188220",
    "end": "194879"
  },
  {
    "text": "event actually occurred safely but if we want to automate these validations with code we do need to",
    "start": "194879",
    "end": "200879"
  },
  {
    "text": "start with some data the data that I'm going to be talking about is really these attestations and",
    "start": "200879",
    "end": "207060"
  },
  {
    "start": "203000",
    "end": "203000"
  },
  {
    "text": "this out of station represents a proof of an event which makes claims explicit about how the event was performed what",
    "start": "207060",
    "end": "214019"
  },
  {
    "text": "the outputs were and everything that went into the process of creating that output essentially it allows that user",
    "start": "214019",
    "end": "219599"
  },
  {
    "text": "to trace a particular output which we are going to call subjects from the inputs with the bills process that's",
    "start": "219599",
    "end": "225299"
  },
  {
    "text": "specified in the environment so in software and particular in the",
    "start": "225299",
    "end": "231599"
  },
  {
    "text": "software delivery pipeline the relevant attestations may be things like code scanning code commits Source repository",
    "start": "231599",
    "end": "238379"
  },
  {
    "text": "control scanning build provenance which may help that build step",
    "start": "238379",
    "end": "244319"
  },
  {
    "text": "um software component analysis which may help determine what sorts of build dependencies are going in and things",
    "start": "244319",
    "end": "250980"
  },
  {
    "text": "like package repository attestations and there's many many more as you can see there were tons of places and attacks",
    "start": "250980",
    "end": "257280"
  },
  {
    "text": "where things could go wrong and each of these could benefit with some data and attestations that would describe what is",
    "start": "257280",
    "end": "263940"
  },
  {
    "text": "actually occurring so for example one of these may be an",
    "start": "263940",
    "end": "270180"
  },
  {
    "start": "267000",
    "end": "267000"
  },
  {
    "text": "s-bomb attestation what this information may tell you is what is going on from that dependency to that build step and",
    "start": "270180",
    "end": "276900"
  },
  {
    "text": "help someone who's consuming that software be able to determine what source of dependencies went into that",
    "start": "276900",
    "end": "281940"
  },
  {
    "text": "production and were there any ones that were vulnerable to either a potential cve at the time or",
    "start": "281940",
    "end": "289380"
  },
  {
    "text": "potentially a cve that may has arisen now so it can also help people who are",
    "start": "289380",
    "end": "295320"
  },
  {
    "text": "involved in their own sdlc to determine what sorts of dependencies are going on in their own projects so",
    "start": "295320",
    "end": "302220"
  },
  {
    "text": "like this is just one example relevant to this whole build and dependency portion of the sdlc of an attestation",
    "start": "302220",
    "end": "308460"
  },
  {
    "text": "that you might use during your sdlc um release so for example maybe you want to block a release from being published",
    "start": "308460",
    "end": "316800"
  },
  {
    "text": "um until you check that there are no vulnerable dependencies",
    "start": "316800",
    "end": "321800"
  },
  {
    "start": "321000",
    "end": "321000"
  },
  {
    "text": "however now if we assume that we actually have some attestation data for",
    "start": "321960",
    "end": "327060"
  },
  {
    "text": "example f-bombs or maybe build out of stations or Source out of stations the next step is actually figuring out how",
    "start": "327060",
    "end": "332880"
  },
  {
    "text": "to trust the content of them before taking action in the software delivery pipeline for example you might want to",
    "start": "332880",
    "end": "339120"
  },
  {
    "text": "decide to allow a publication to a package repository only if the builds",
    "start": "339120",
    "end": "344580"
  },
  {
    "text": "were successfully created by an actor or CI CD provider that you expected",
    "start": "344580",
    "end": "351000"
  },
  {
    "text": "if we don't verify these attestations malicious actors could inject those malicious artifacts or tamper with the",
    "start": "351000",
    "end": "357000"
  },
  {
    "text": "build process in the sdlc but also provide a malicious attestation alongside them so without actually doing",
    "start": "357000",
    "end": "363660"
  },
  {
    "text": "some sort of trust or verification process you would have no way of determining whether your attestations",
    "start": "363660",
    "end": "369240"
  },
  {
    "text": "were actually useful or not so with the verification process we",
    "start": "369240",
    "end": "374639"
  },
  {
    "text": "require two things the first is integrity so this is that the attacker could not rewrite or tamper with an",
    "start": "374639",
    "end": "381300"
  },
  {
    "text": "original attestation so essentially once it's been created there's no way to sort of tamper or rewrite the content of that",
    "start": "381300",
    "end": "388740"
  },
  {
    "text": "without detection and the second this property of authenticity and non-forigibility rely on the trust of",
    "start": "388740",
    "end": "395220"
  },
  {
    "text": "our attestation provider so authenticity ensures that we can identify the attestation Creator I like the person",
    "start": "395220",
    "end": "401759"
  },
  {
    "text": "that's going to create that attestation so that we can create a policy later in the pipeline that verifies the authorship of the attestation",
    "start": "401759",
    "end": "408479"
  },
  {
    "text": "with that verification of the author we can determine non-forigibility and",
    "start": "408479",
    "end": "414479"
  },
  {
    "text": "non-perishability is the property that the attestation content could not be influenced by users even the ones",
    "start": "414479",
    "end": "419759"
  },
  {
    "text": "operating the sdlc pipeline so in this case let's say I'm triggering a build on",
    "start": "419759",
    "end": "426240"
  },
  {
    "text": "the attestation that would be created about the build process could not be influenced by me",
    "start": "426240",
    "end": "433520"
  },
  {
    "text": "determining complete zero trust in the system so think that the attestation",
    "start": "434220",
    "end": "440340"
  },
  {
    "text": "provider is creating an out of station that is in in uninterferable",
    "start": "440340",
    "end": "447000"
  },
  {
    "text": "um transparent isolated um and both from the build and from the users",
    "start": "447000",
    "end": "453060"
  },
  {
    "text": "who are creating those builds themselves so now I'm going to hand it off to Ian",
    "start": "453060",
    "end": "458699"
  },
  {
    "text": "to talk about how to actually create a build how to build a tester in full",
    "start": "458699",
    "end": "466698"
  },
  {
    "text": "cool great so let's uh go to the next slide so in order to kind of understand a",
    "start": "466979",
    "end": "474960"
  },
  {
    "start": "472000",
    "end": "472000"
  },
  {
    "text": "little bit more about what um agitation attestation is and what uh is",
    "start": "474960",
    "end": "482160"
  },
  {
    "text": "actually kind of happening we need to kind of understand a little bit about a testers and what a testers actually do",
    "start": "482160",
    "end": "488880"
  },
  {
    "text": "um and the idea that a tester is for a",
    "start": "488880",
    "end": "493979"
  },
  {
    "text": "tester is that they attest to something that happened so the idea is that like in a tester a test to the details of an",
    "start": "493979",
    "end": "500580"
  },
  {
    "text": "event that happened um in most cases this is some sort of like software build or some sort of uh",
    "start": "500580",
    "end": "508560"
  },
  {
    "text": "scan like software scan um as Oscar mentioned things like generating s-bombs uh these sorts of",
    "start": "508560",
    "end": "515520"
  },
  {
    "text": "things can be attested to um and that typically like the event that we're attesting to is going to be",
    "start": "515520",
    "end": "522180"
  },
  {
    "text": "something that generates some sort of artifact so in this case I scan results or a binary or some sort of uh software",
    "start": "522180",
    "end": "529920"
  },
  {
    "text": "package and another really key important uh aspect",
    "start": "529920",
    "end": "536640"
  },
  {
    "text": "to an attester is that it's going to be a testing to that thing happening but being completely isolated from the",
    "start": "536640",
    "end": "543180"
  },
  {
    "text": "actual event happening so your software build itself as Oscar mentions can't modify uh the",
    "start": "543180",
    "end": "551760"
  },
  {
    "text": "um modify the attestation or change anything that the tester does",
    "start": "551760",
    "end": "558920"
  },
  {
    "text": "um so this means that essentially the tester can't be impersonated",
    "start": "559800",
    "end": "565320"
  },
  {
    "text": "um and so this is something like you know like a notary or some sort of like witness to invent like like a",
    "start": "565320",
    "end": "571740"
  },
  {
    "text": "wedding or something where you have an actual person that's separate from the actual people going through the process",
    "start": "571740",
    "end": "577800"
  },
  {
    "text": "that attest to the fact that it actually happened and the right people were there",
    "start": "577800",
    "end": "583380"
  },
  {
    "text": "okay next slide so what happens if the build platform",
    "start": "583380",
    "end": "589800"
  },
  {
    "text": "kind of itself doesn't really support a test at a station yet right like the build platform itself can't attest to",
    "start": "589800",
    "end": "595500"
  },
  {
    "text": "the builds happening um or it's just providing sort of a set of you know build pipeline Primitives or",
    "start": "595500",
    "end": "602820"
  },
  {
    "text": "things like that um can we one of the uh problems that we",
    "start": "602820",
    "end": "607920"
  },
  {
    "text": "faced was like could we decouple the attestation logic from the build platform itself",
    "start": "607920",
    "end": "613500"
  },
  {
    "text": "um and use essentially just the The Primitives that the build platform",
    "start": "613500",
    "end": "618779"
  },
  {
    "text": "provides in order to do attestation of a build happening separate separate to the",
    "start": "618779",
    "end": "624540"
  },
  {
    "text": "attestation so next slide",
    "start": "624540",
    "end": "629880"
  },
  {
    "start": "629000",
    "end": "629000"
  },
  {
    "text": "so one of the things that we did was we came up with a kind of General framework for how to build a testers on top of a",
    "start": "629880",
    "end": "638339"
  },
  {
    "text": "an existing build platform so this would be like your normal CI systems and in",
    "start": "638339",
    "end": "643800"
  },
  {
    "text": "our case uh our main target so far has been GitHub but this kind of General",
    "start": "643800",
    "end": "649019"
  },
  {
    "text": "concept applied could apply to other CI systems",
    "start": "649019",
    "end": "654180"
  },
  {
    "text": "um if they don't if they provide the right types of build produce and we'll talk a little bit more about like what",
    "start": "654180",
    "end": "659339"
  },
  {
    "text": "the actual requirements of those build permits would be for us to be able to build a testers but",
    "start": "659339",
    "end": "665519"
  },
  {
    "text": "um this sort of concept could apply there so the idea is that like we use the",
    "start": "665519",
    "end": "671459"
  },
  {
    "text": "existing kind of build premise so in the case of like say GitHub actions I'm talking about things like jobs or like",
    "start": "671459",
    "end": "676920"
  },
  {
    "text": "uh build you know build steps and the things that GitHub actions provides to you in its API",
    "start": "676920",
    "end": "683399"
  },
  {
    "text": "um and the tester you know performs this build",
    "start": "683399",
    "end": "688860"
  },
  {
    "text": "process and attests to the process um but the building siding are like built",
    "start": "688860",
    "end": "696540"
  },
  {
    "text": "so that done so that they're isolated from each other and this is done using the the aspects of the actual uh",
    "start": "696540",
    "end": "704459"
  },
  {
    "text": "framework itself so next slide",
    "start": "704459",
    "end": "710399"
  },
  {
    "text": "so the idea is that like your build and artifact your build and your uh generate",
    "start": "710399",
    "end": "715980"
  },
  {
    "text": "generating your prominence and signing of prominence using like doing the attestation itself",
    "start": "715980",
    "end": "721380"
  },
  {
    "text": "is done in a in separate VMS or in completely isolated jobs",
    "start": "721380",
    "end": "727860"
  },
  {
    "text": "um and this makes it so that the bills can't actually interfere with the inner the uh the um attestation step but",
    "start": "727860",
    "end": "736140"
  },
  {
    "text": "doesn't necessarily require then require that the build platform actually support the adaptation",
    "start": "736140",
    "end": "741660"
  },
  {
    "text": "um so we can actually kind of build that on top of the build platform but still get have the isolation uh requirements",
    "start": "741660",
    "end": "747779"
  },
  {
    "text": "or properties that we want so what we do with the build step is we",
    "start": "747779",
    "end": "753600"
  },
  {
    "text": "build it in our secure VM and then we press the artifact digest uh from the",
    "start": "753600",
    "end": "758880"
  },
  {
    "text": "results to our uh attestation step using the normal kind of inputs and outputs so",
    "start": "758880",
    "end": "766019"
  },
  {
    "text": "this is another kind of requirement this we have like a a secure way of or a mon modifiable way",
    "start": "766019",
    "end": "773940"
  },
  {
    "text": "of doing inputs and outputs between jobs to next slide",
    "start": "773940",
    "end": "780560"
  },
  {
    "text": "um so the attestation step after we've done the build will record The",
    "start": "783540",
    "end": "791300"
  },
  {
    "text": "Trusted uh system parameters so these are the things uh the parameters coming from the build platform and the",
    "start": "791300",
    "end": "796980"
  },
  {
    "text": "environment as well as external parameters these are inputs to your build step",
    "start": "796980",
    "end": "802800"
  },
  {
    "text": "and record things like the artifact digest and the and information about the",
    "start": "802800",
    "end": "808139"
  },
  {
    "text": "overall environment and the build process in order to give you a what we call provenance which is a",
    "start": "808139",
    "end": "815279"
  },
  {
    "text": "set of metadata that tells you about how the build happened and what sort of parameters or what sort of inputs were",
    "start": "815279",
    "end": "822120"
  },
  {
    "text": "used into the build process and then tells you what the actual output was",
    "start": "822120",
    "end": "829399"
  },
  {
    "text": "okay next slide um and then once we've generated that",
    "start": "829920",
    "end": "835380"
  },
  {
    "text": "metadata uh as part of our attestation set we're going to sign that",
    "start": "835380",
    "end": "840959"
  },
  {
    "text": "metadata using a trusted uh private key infrastructure so our public uh you know",
    "start": "840959",
    "end": "848820"
  },
  {
    "text": "PK are probably key infrastructure so this is like um like a uh way of",
    "start": "848820",
    "end": "858680"
  },
  {
    "text": "so this will tell us that the prominence is trustworthy because uh",
    "start": "858839",
    "end": "865560"
  },
  {
    "text": "cryptographically signed it we can verify that signature later um and one of the things that we do",
    "start": "865560",
    "end": "871260"
  },
  {
    "text": "ourselves is so that in store instead of having to have static keys that we've generated ourselves",
    "start": "871260",
    "end": "877380"
  },
  {
    "text": "um and we have to manage storing the keys we use uh the machine identity",
    "start": "877380",
    "end": "883100"
  },
  {
    "text": "which is essentially oidc the oadc provider on uh on GitHub or the ovp",
    "start": "883100",
    "end": "891560"
  },
  {
    "text": "oicdc provider provided by the build platform in order to generate signing certificates that we then use to sign",
    "start": "891560",
    "end": "898980"
  },
  {
    "text": "the uh the provenance and this is a gives us a way of signing the Providence and using tickets",
    "start": "898980",
    "end": "905760"
  },
  {
    "text": "that can be short-lived and we don't need to manage the storage and the uh",
    "start": "905760",
    "end": "911760"
  },
  {
    "text": "the security as of those keys quite as much so next slide",
    "start": "911760",
    "end": "918860"
  },
  {
    "start": "919000",
    "end": "919000"
  },
  {
    "text": "so once we've done all of that signing and generating the stuff we need to be able to verify that at the end uh you",
    "start": "920519",
    "end": "926820"
  },
  {
    "text": "know before we make any decisions about like actually using the the stuff that was generated by the uh",
    "start": "926820",
    "end": "933420"
  },
  {
    "text": "by this process or buy our build process so the verification project process is",
    "start": "933420",
    "end": "939600"
  },
  {
    "text": "essentially establishing trust making sure that this metadata hasn't been altered or changed in any way",
    "start": "939600",
    "end": "946199"
  },
  {
    "text": "um so this process is basically just verifying that the statement is subject is Right are the is the artifact that",
    "start": "946199",
    "end": "952260"
  },
  {
    "text": "I'm going to use the actual artifact that's being described uh then we verify",
    "start": "952260",
    "end": "957720"
  },
  {
    "text": "the signature on the attestation to make sure that the signature is uh describing the the provenance",
    "start": "957720",
    "end": "964560"
  },
  {
    "text": "correctly uh has signed the prominence and then we also can verify the proofer",
    "start": "964560",
    "end": "969720"
  },
  {
    "text": "identity so this is like um verifying the uh the machine identities that we've um",
    "start": "969720",
    "end": "976139"
  },
  {
    "text": "that we were using to generate the search as well um and then once you've established trust by using it through a verification",
    "start": "976139",
    "end": "982620"
  },
  {
    "text": "process you could then like use that metadata in things like policy engines or things like that in order to actually",
    "start": "982620",
    "end": "989100"
  },
  {
    "text": "make a decision about how to use the package or how to use the artifact",
    "start": "989100",
    "end": "994680"
  },
  {
    "text": "um next slide so in summary like building in a tester",
    "start": "994680",
    "end": "1000139"
  },
  {
    "text": "like is um possible on top of uh build uh build",
    "start": "1000139",
    "end": "1008120"
  },
  {
    "text": "platforms without the build platform necessarily supporting it but implementing it is is pretty hard and it",
    "start": "1008120",
    "end": "1015920"
  },
  {
    "text": "requires some specialized security knowledge um so individual package developers shouldn't",
    "start": "1015920",
    "end": "1023300"
  },
  {
    "text": "really need to be knowledgeable about these types of details we really want to be able to provide",
    "start": "1023300",
    "end": "1029839"
  },
  {
    "text": "some sort of off-the-shelf solution that people can use in order to just add it",
    "start": "1029839",
    "end": "1035839"
  },
  {
    "text": "to their build Pipeline and um so that people can just kind of like use",
    "start": "1035839",
    "end": "1042079"
  },
  {
    "text": "that off the shelf and don't have to have this specialized knowledge so that's that's one of the the main",
    "start": "1042079",
    "end": "1049520"
  },
  {
    "text": "things that we want to accomplish with uh the projects that we've been working on",
    "start": "1049520",
    "end": "1056020"
  },
  {
    "text": "so now I'll turn it back to to Asura and she can talk about some of the the actual uh projects that we've been using",
    "start": "1057080",
    "end": "1063500"
  },
  {
    "text": "developing in order to make use of this kind of generalized framework",
    "start": "1063500",
    "end": "1070160"
  },
  {
    "text": "all right um thanks so yeah so I'll quickly describe a container-based a",
    "start": "1070160",
    "end": "1075320"
  },
  {
    "text": "tester which was one of the testers that we recently created specifically to Target a variety of use cases",
    "start": "1075320",
    "end": "1082520"
  },
  {
    "start": "1082000",
    "end": "1082000"
  },
  {
    "text": "thank you so as Ian mentioned the generate Providence step in the tester records",
    "start": "1082520",
    "end": "1088400"
  },
  {
    "text": "information about the build process and the inputs for the build but because the tester must perform the",
    "start": "1088400",
    "end": "1094640"
  },
  {
    "text": "build so that's why there's that the grade build is inside the the Reddit Tester the tester must be configured to",
    "start": "1094640",
    "end": "1100580"
  },
  {
    "text": "understand the semantics of the external parameters and also be able to determine",
    "start": "1100580",
    "end": "1106340"
  },
  {
    "text": "what the build process is in order to perform that and then generate the",
    "start": "1106340",
    "end": "1111500"
  },
  {
    "text": "information about it in the provenance in a separate job as an example if you want to see what",
    "start": "1111500",
    "end": "1118820"
  },
  {
    "text": "that kind of looks like here's a snippet of that provenance that's included and there's a small record called a bill",
    "start": "1118820",
    "end": "1125900"
  },
  {
    "text": "definition which is responsible for describing the inputs and type of builds so in this case this is a salsa",
    "start": "1125900",
    "end": "1132380"
  },
  {
    "text": "Frameworks also GitHub generator go build so it's very specific to the go ecosystem which takes a source URI with",
    "start": "1132380",
    "end": "1141200"
  },
  {
    "text": "a con with a specified digest and a config file in order to",
    "start": "1141200",
    "end": "1146860"
  },
  {
    "text": "configure a build but that specificity and that inclusion",
    "start": "1146860",
    "end": "1152240"
  },
  {
    "text": "of information in the provenance means we kind of have a problem problem is in order to produce an",
    "start": "1152240",
    "end": "1158480"
  },
  {
    "text": "attestation record like that we need to have a go specific attester so this whole entire red boxes go",
    "start": "1158480",
    "end": "1165679"
  },
  {
    "text": "specific and it's one that knows what those external parameters are to expect I.E that Source in that contact file and",
    "start": "1165679",
    "end": "1172340"
  },
  {
    "text": "what to perform in that build and then it has knowledge to do the attestation",
    "start": "1172340",
    "end": "1177380"
  },
  {
    "text": "recording in a separate job but then that means that we also need one for the rust ecosystem and then also",
    "start": "1177380",
    "end": "1184940"
  },
  {
    "text": "one for maybe the node ecosystem and then one for scorecard out of stations and one for cves",
    "start": "1184940",
    "end": "1191600"
  },
  {
    "text": "and then we just kind of get into this mess so we came to a problem that we needed to solve of how generic can these build",
    "start": "1191600",
    "end": "1199100"
  },
  {
    "text": "processes be while still being useful in other words we can't really maintain this many builders that have deep",
    "start": "1199100",
    "end": "1205640"
  },
  {
    "text": "knowledge of the build process and are able to create that rich provenance information build definition",
    "start": "1205640",
    "end": "1211360"
  },
  {
    "text": "but fortunately there are existing solutions to creating build or at least",
    "start": "1211360",
    "end": "1216440"
  },
  {
    "text": "a generic template or platform for what a build might look like across different ecosystems with common configuration",
    "start": "1216440",
    "end": "1224059"
  },
  {
    "text": "and that also happens to provide isolation um and reproducibility sometimes",
    "start": "1224059",
    "end": "1231940"
  },
  {
    "text": "and this is a the end that which we created",
    "start": "1236840",
    "end": "1242559"
  },
  {
    "text": "and then to this end we created one type of Builder that would allow for these different types of ecosystems and Target",
    "start": "1249260",
    "end": "1254299"
  },
  {
    "text": "types and it's already in widespread use which is using container images",
    "start": "1254299",
    "end": "1259520"
  },
  {
    "text": "so the use case here is we could maybe create a single common tester built off of using container images",
    "start": "1259520",
    "end": "1266720"
  },
  {
    "text": "with a common configuration that would allow anyone in a variety of different ecosystems to be able to create their",
    "start": "1266720",
    "end": "1272360"
  },
  {
    "text": "build so with this container-based build tester would do",
    "start": "1272360",
    "end": "1279620"
  },
  {
    "text": "is to create a artifact or a binary whatever it is a scan given a base image",
    "start": "1279620",
    "end": "1287299"
  },
  {
    "text": "that packages the tooling required to create that binary it also takes a build command that is",
    "start": "1287299",
    "end": "1292640"
  },
  {
    "text": "needed to invoke That Base image to perform the build and also the specified output path so does it expect",
    "start": "1292640",
    "end": "1299840"
  },
  {
    "text": "to create a dist folder or does it expect to create a a scanner Json and so",
    "start": "1299840",
    "end": "1306380"
  },
  {
    "text": "on so this means that we can allow any tool chainer ecosystem so long as it package inside that container image by",
    "start": "1306380",
    "end": "1312799"
  },
  {
    "text": "the the tool creator um what happens then in the Providence is that it identifies those inputs which",
    "start": "1312799",
    "end": "1318980"
  },
  {
    "text": "mean that identifies the base image that was pulled in the execution command because of that a consumer of that",
    "start": "1318980",
    "end": "1325159"
  },
  {
    "text": "artifact may be able to inspect that attestation record and potentially reproduce or re at least",
    "start": "1325159",
    "end": "1332179"
  },
  {
    "text": "recreate the process of that build so the idea behind this was that there",
    "start": "1332179",
    "end": "1338240"
  },
  {
    "text": "are many examples of container tools that are are used in supply chain",
    "start": "1338240",
    "end": "1343400"
  },
  {
    "text": "security so for example Trevi or osc scanner or scorecard scanner and also work",
    "start": "1343400",
    "end": "1349520"
  },
  {
    "text": "that's being done by others to create build attestations based on this common",
    "start": "1349520",
    "end": "1354919"
  },
  {
    "text": "type of build language so taking a look at the resulting provenance we see something similar to",
    "start": "1354919",
    "end": "1361220"
  },
  {
    "start": "1357000",
    "end": "1357000"
  },
  {
    "text": "the go one where we have a container-based fill type along with the source repository that",
    "start": "1361220",
    "end": "1368480"
  },
  {
    "text": "was used to be mounted in the container",
    "start": "1368480",
    "end": "1372760"
  },
  {
    "text": "the Builder image which is used for the base image and also the command that was used to invoke the build",
    "start": "1376460",
    "end": "1383240"
  },
  {
    "text": "so these are all specified within that external parameters which are again the inputs to that build",
    "start": "1383240",
    "end": "1389419"
  },
  {
    "text": "so with all three of these pieces after a user establishes trust which is that piece of verification that Ian",
    "start": "1389419",
    "end": "1395840"
  },
  {
    "start": "1391000",
    "end": "1391000"
  },
  {
    "text": "described before by determining that that prominent statement itself is actually trusted",
    "start": "1395840",
    "end": "1401000"
  },
  {
    "text": "now you can validate the contents inside that statement so sometimes this is as simple as is this",
    "start": "1401000",
    "end": "1407480"
  },
  {
    "text": "the correct Builder image that I expect so for example if I had a scorecard Json is this actually a scorecard based image",
    "start": "1407480",
    "end": "1413720"
  },
  {
    "text": "that was distributed by openssf or if I'm using a container image that I",
    "start": "1413720",
    "end": "1421039"
  },
  {
    "text": "packaged myself is this base image the one that I packaged so we do have to do",
    "start": "1421039",
    "end": "1426140"
  },
  {
    "text": "this extra step of is this space image trusted and then you may optionally do this is the source repository trusted",
    "start": "1426140",
    "end": "1432320"
  },
  {
    "text": "that was actually used to create the bills and also potentially if the build is reproducible you could further then",
    "start": "1432320",
    "end": "1439100"
  },
  {
    "text": "validate that the build was reproduced by simply pulling the base image and then running it with a specified command",
    "start": "1439100",
    "end": "1446360"
  },
  {
    "text": "foreign ly I'm going to discuss a little bit about why the spill isn't",
    "start": "1446360",
    "end": "1453200"
  },
  {
    "start": "1448000",
    "end": "1448000"
  },
  {
    "text": "um enough sometimes so what I described before is a nice solution for a variety",
    "start": "1453200",
    "end": "1458240"
  },
  {
    "text": "of ecosystems that can be used in a single attester but it does require that that person who's Distributing the tool",
    "start": "1458240",
    "end": "1464900"
  },
  {
    "text": "packages all their logic inside a container so if let's say I will really want to use my cool scanner I have to",
    "start": "1464900",
    "end": "1472940"
  },
  {
    "text": "request that my control scanner is packaged inside a container image and also packaged inside a container image",
    "start": "1472940",
    "end": "1479299"
  },
  {
    "text": "in a way that I could run it against a source repository inside this tester",
    "start": "1479299",
    "end": "1484940"
  },
  {
    "text": "so now I'm going to hand it off to Ian to kind of describe what happens if that's not enough and what happens if",
    "start": "1484940",
    "end": "1490460"
  },
  {
    "text": "that tool provider doesn't have enough flexibility with just a container-based tester",
    "start": "1490460",
    "end": "1497380"
  },
  {
    "text": "awesome yeah so we've uh so as OS were mentioned one of the limitations of",
    "start": "1498980",
    "end": "1504140"
  },
  {
    "text": "using a container-based a tester is that you have to have everything packaged in the container and many ecosystems may",
    "start": "1504140",
    "end": "1511400"
  },
  {
    "text": "not have that kind of already done for them and so we came up with kind of a",
    "start": "1511400",
    "end": "1517460"
  },
  {
    "text": "separate uh way of solving this problem that we're calling the delegated tester framework and this allows people allows",
    "start": "1517460",
    "end": "1525740"
  },
  {
    "text": "kind of two build tool authors and other folks to use",
    "start": "1525740",
    "end": "1531080"
  },
  {
    "text": "um to build essentially what we're calling delegated attesters which or",
    "start": "1531080",
    "end": "1538159"
  },
  {
    "text": "that will allow people to um or tool authors and ecosystems to",
    "start": "1538159",
    "end": "1544159"
  },
  {
    "text": "create their own attesters so next slide",
    "start": "1544159",
    "end": "1551080"
  },
  {
    "start": "1550000",
    "end": "1550000"
  },
  {
    "text": "so we um the main problem that we want to solve",
    "start": "1551179",
    "end": "1557000"
  },
  {
    "text": "right is as I mentioned that tool owners want to create a tester we want two loaders to be able to create atone",
    "start": "1557000",
    "end": "1562340"
  },
  {
    "text": "testers for their own tooling so this means um like if you have something like uh",
    "start": "1562340",
    "end": "1568400"
  },
  {
    "text": "for example go release or for the go in the go uh ecosystem or you have npm for",
    "start": "1568400",
    "end": "1573860"
  },
  {
    "text": "the node.js ecosystem like different types of build tools used to package up software in order for to release it and",
    "start": "1573860",
    "end": "1581419"
  },
  {
    "text": "to publish it um we want people to be able to use those tools um and to also be able to uh use the uh",
    "start": "1581419",
    "end": "1591440"
  },
  {
    "text": "the attestation logic that we've developed um so next slide",
    "start": "1591440",
    "end": "1598340"
  },
  {
    "text": "and one of the ways that we've noticed that folks do this is",
    "start": "1598340",
    "end": "1603500"
  },
  {
    "text": "um at least on GitHub is many of the tool authors have their own kind of GitHub action that they've already",
    "start": "1603500",
    "end": "1608659"
  },
  {
    "text": "developed that people can just slot into their pipelines or slide into their workflows in order to actually run and",
    "start": "1608659",
    "end": "1615919"
  },
  {
    "text": "generate like their uh do their releases um and so our uh framework that we've",
    "start": "1615919",
    "end": "1622700"
  },
  {
    "text": "developed will allow you to wrap an existing GitHub action",
    "start": "1622700",
    "end": "1628940"
  },
  {
    "text": "um and to uh provide a GitHub action callback which we will then call to",
    "start": "1628940",
    "end": "1635600"
  },
  {
    "text": "actually do the build and so this can include the your already existing GitHub",
    "start": "1635600",
    "end": "1641240"
  },
  {
    "text": "action in order to actually perform the build and then we can generate provenance based on the action that you",
    "start": "1641240",
    "end": "1647840"
  },
  {
    "text": "uh your existing action um so this means that you don't have to like rewrite a lot of logic that you've",
    "start": "1647840",
    "end": "1653779"
  },
  {
    "text": "already developed and you're also using logic that's familiar to you like in the",
    "start": "1653779",
    "end": "1659299"
  },
  {
    "text": "case of GitHub actions um so this just gives uh you end users a",
    "start": "1659299",
    "end": "1664940"
  },
  {
    "text": "better experience um they don't need to know the details about like executing the tool itself",
    "start": "1664940",
    "end": "1670760"
  },
  {
    "text": "um and they don't the tool authors don't need to necessarily know about all about",
    "start": "1670760",
    "end": "1676159"
  },
  {
    "text": "attestation and how to do that securely",
    "start": "1676159",
    "end": "1681159"
  },
  {
    "text": "um and yeah so the the tester itself can actually make use of things like",
    "start": "1682039",
    "end": "1687200"
  },
  {
    "text": "github's Builder identity um and provide all of the the security benefits uh without anybody else having",
    "start": "1687200",
    "end": "1694220"
  },
  {
    "text": "to know about it next slide",
    "start": "1694220",
    "end": "1698620"
  },
  {
    "text": "um so this basically allows uh existing third-party tools to create a testers",
    "start": "1699799",
    "end": "1705200"
  },
  {
    "text": "um that uh and all of these uh",
    "start": "1705200",
    "end": "1711320"
  },
  {
    "text": "folks don't need to understand salsa there's really low overhead to integrate",
    "start": "1711320",
    "end": "1716600"
  },
  {
    "text": "because most you know particularly open source developers are using GitHub",
    "start": "1716600",
    "end": "1721940"
  },
  {
    "text": "actions and um already and so they don't need to",
    "start": "1721940",
    "end": "1727039"
  },
  {
    "text": "rewrite a lot a bunch of stuff uh the tool authors maintain authorship for",
    "start": "1727039",
    "end": "1734120"
  },
  {
    "text": "their uh their workflows or for their their ad tester",
    "start": "1734120",
    "end": "1739520"
  },
  {
    "text": "um so when an end user uses the tester they're using the tool authors a tester they don't have to uh create a new kind",
    "start": "1739520",
    "end": "1747080"
  },
  {
    "text": "of relationship or understand like the salsa framework or some other uh some",
    "start": "1747080",
    "end": "1752240"
  },
  {
    "text": "other organization or some other group they can consume something that the tool authors have written so in the case of",
    "start": "1752240",
    "end": "1758419"
  },
  {
    "text": "like say go releaser or npm they're using the npm Builder or a tester",
    "start": "1758419",
    "end": "1763760"
  },
  {
    "text": "they're using the go release or a tester so they've already they're already using that tool they're just now using a tool",
    "start": "1763760",
    "end": "1770419"
  },
  {
    "text": "a separate um you know and a tester that's provided by the tool authors",
    "start": "1770419",
    "end": "1776659"
  },
  {
    "text": "next slide so one of the kind of uh first",
    "start": "1776659",
    "end": "1783679"
  },
  {
    "start": "1779000",
    "end": "1779000"
  },
  {
    "text": "uh examples of or implementations that we've used this framework for is for the",
    "start": "1783679",
    "end": "1790279"
  },
  {
    "text": "node.js or npm attester that we've developed and this develops builds npm",
    "start": "1790279",
    "end": "1798080"
  },
  {
    "text": "packages um to provide and provide non-forcable prominence",
    "start": "1798080",
    "end": "1803740"
  },
  {
    "text": "and uses npm scripts which npm authors",
    "start": "1803740",
    "end": "1809000"
  },
  {
    "text": "are already familiar with so things like npm run build or whatever",
    "start": "1809000",
    "end": "1814299"
  },
  {
    "text": "are these type of scripts and you're defined in the package Json for your package",
    "start": "1814299",
    "end": "1820000"
  },
  {
    "text": "and this does all of the the normal uh",
    "start": "1820000",
    "end": "1825679"
  },
  {
    "text": "you know separated isolated provenance Generations that we've described earlier um",
    "start": "1825679",
    "end": "1831440"
  },
  {
    "text": "and then generates provenance for the package and provides um",
    "start": "1831440",
    "end": "1837320"
  },
  {
    "text": "an additional step to actually publish the the package itself um and what's really kind of special is",
    "start": "1837320",
    "end": "1844760"
  },
  {
    "text": "that npmjs.com or the npm public registry is now actually supporting uh",
    "start": "1844760",
    "end": "1851659"
  },
  {
    "text": "attaching provenance to your package as metadata and so you can actually see that associated with your package",
    "start": "1851659",
    "end": "1859159"
  },
  {
    "text": "and distribute it with your package in the registry so next slide",
    "start": "1859159",
    "end": "1866299"
  },
  {
    "text": "so you can see that on the registry itself if you look at the the web page for your package",
    "start": "1866299",
    "end": "1873020"
  },
  {
    "text": "um and from there you can check out some things like the links to the source code uh some links to the build script that",
    "start": "1873020",
    "end": "1879980"
  },
  {
    "text": "was used to generate the package um things like the public address entries that describe that this event",
    "start": "1879980",
    "end": "1886700"
  },
  {
    "text": "actually happened and provides kind of an audible auditable uh piece of",
    "start": "1886700",
    "end": "1892460"
  },
  {
    "text": "metadata that you can use for during verification um and so this provides a lot of extra",
    "start": "1892460",
    "end": "1898340"
  },
  {
    "text": "trust in your package when you've developed it and published it",
    "start": "1898340",
    "end": "1904720"
  },
  {
    "text": "as well as providing a way of actually verifying that strongly when you install",
    "start": "1904720",
    "end": "1910520"
  },
  {
    "text": "the package so next slide so finally we have like a way of",
    "start": "1910520",
    "end": "1917419"
  },
  {
    "start": "1915000",
    "end": "1915000"
  },
  {
    "text": "verifying these packages using uh the salsa verifier project that we've developed for verification",
    "start": "1917419",
    "end": "1924559"
  },
  {
    "text": "um and this allows you to do things like verify uh these signatures and verify",
    "start": "1924559",
    "end": "1930500"
  },
  {
    "text": "the things like the Builder IDs package names and versions as well as the source",
    "start": "1930500",
    "end": "1936740"
  },
  {
    "text": "code uh repository where it came from and we're working on ways of better",
    "start": "1936740",
    "end": "1942260"
  },
  {
    "text": "integrating these with the kind of native tooling for different ecosystems",
    "start": "1942260",
    "end": "1949179"
  },
  {
    "text": "so next slide so just wrapping up",
    "start": "1949340",
    "end": "1954919"
  },
  {
    "text": "um we are looking to um improve these different things and",
    "start": "1954919",
    "end": "1961580"
  },
  {
    "text": "expand to different ecosystems and um make these easier for people to consume",
    "start": "1961580",
    "end": "1968360"
  },
  {
    "text": "so you can go to the next slide so if you're interested in learning more",
    "start": "1968360",
    "end": "1973460"
  },
  {
    "text": "about supply chain security and some of the work that we're doing with the salsa",
    "start": "1973460",
    "end": "1979220"
  },
  {
    "text": "framework and um the the projects that we're",
    "start": "1979220",
    "end": "1984440"
  },
  {
    "text": "developing particularly the Celsius GitHub generator you can check those out at these links",
    "start": "1984440",
    "end": "1992440"
  },
  {
    "text": "these are the projects that we're typically working on but the uh we're looking at",
    "start": "1992440",
    "end": "2000399"
  },
  {
    "text": "kind of expanding not just to node.js or containers but also to other ecosystems",
    "start": "2000399",
    "end": "2005980"
  },
  {
    "text": "like python or um Ruby or those type of uh other language uh ecosystems",
    "start": "2005980",
    "end": "2014820"
  },
  {
    "text": "all right next slide and so thanks for for joining our talk",
    "start": "2014980",
    "end": "2022059"
  },
  {
    "text": "um and uh let's uh build a safer open source software ecosystem together",
    "start": "2022059",
    "end": "2029759"
  },
  {
    "text": "all right thanks everyone",
    "start": "2029860",
    "end": "2033000"
  }
]