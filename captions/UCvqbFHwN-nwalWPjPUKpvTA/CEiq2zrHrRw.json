[
  {
    "text": "okay cats up John later all right we're going to get started um skipping the",
    "start": "2179",
    "end": "7740"
  },
  {
    "text": "eyes the only thing I want to point that although I don't see Kathy on the calls or doesn't do any good to do that so let's skip that one okay so first of all",
    "start": "7740",
    "end": "14190"
  },
  {
    "text": "before we get to the media discussions we had a doodle poll for the face-to-face meeting the OSS summit we",
    "start": "14190",
    "end": "20160"
  },
  {
    "text": "only had four people so they can make it so we are not going to have an official meeting there we may choose to just sort",
    "start": "20160",
    "end": "25859"
  },
  {
    "text": "of a get-together just informal but definitely not be an official meeting if we do decide to meet so you guys don't",
    "start": "25859",
    "end": "31260"
  },
  {
    "text": "worry about that one I did start a doodle poll however for koukin and Shanghai I think we've had quite a few",
    "start": "31260",
    "end": "37710"
  },
  {
    "text": "people sign up for that one but I want to make sure you draw your guys attention to it because we actually do",
    "start": "37710",
    "end": "42750"
  },
  {
    "text": "have a intro and face to face sessions signed up for us and the coming weeks I",
    "start": "42750",
    "end": "48360"
  },
  {
    "text": "will start Google Docs or something to try to gather ideas for what people would like to discuss there and who will",
    "start": "48360",
    "end": "53520"
  },
  {
    "text": "be there to help present or whatever so forgot the logistics later but for right now there is a doodle poll for people to",
    "start": "53520",
    "end": "60210"
  },
  {
    "text": "sign up so we at least know who's going to be there let's try to get people to sign up by next week's phone call as",
    "start": "60210",
    "end": "66479"
  },
  {
    "text": "possible please just so we can get a accurateness of people all right all",
    "start": "66479",
    "end": "72780"
  },
  {
    "text": "right moving on then let's talk about pr's Rachel would you like to present",
    "start": "72780",
    "end": "79759"
  },
  {
    "text": "for which PR I'm sorry what other PR is",
    "start": "80090",
    "end": "85619"
  },
  {
    "text": "there yes yes okay real quick I use the",
    "start": "85619",
    "end": "91439"
  },
  {
    "text": "word just last week I didn't really I don't think so I just want to make sure",
    "start": "91439",
    "end": "98100"
  },
  {
    "text": "that everyone knew that I just want to",
    "start": "98100",
    "end": "106350"
  },
  {
    "text": "clip that okay cool thank you Dan appreciate - all right so I said yes you",
    "start": "106350",
    "end": "113640"
  },
  {
    "text": "want to share right yeah it says I cannot start there you go I had I had a stop sharing so yeah okay yesterday can",
    "start": "113640",
    "end": "123600"
  },
  {
    "text": "you see my screen yeah it's a little much small side there we go that's",
    "start": "123600",
    "end": "129119"
  },
  {
    "text": "better thank you so I'm gonna start by acknowledging that",
    "start": "129119",
    "end": "135510"
  },
  {
    "text": "we are slowing down progress that everyone is very eager to make and I'm sorry about that the thing that I do",
    "start": "135510",
    "end": "142290"
  },
  {
    "text": "want to say is that we're not doing it to be capricious or because we're acting in bad faith and we just want to like",
    "start": "142290",
    "end": "148560"
  },
  {
    "text": "stop the spec to point to that Spencer's opened up a PR proposing a proto",
    "start": "148560",
    "end": "155340"
  },
  {
    "text": "implementation and that's the open source format that is used extensively inside Google and outside Google Thomas",
    "start": "155340",
    "end": "161940"
  },
  {
    "text": "has created a sample repo that we're going to walk through as part of this demo but also we open sourced it so if",
    "start": "161940",
    "end": "168930"
  },
  {
    "text": "anyone wants to go look at it after this or in more detail or read through how it's working you can totally do that but",
    "start": "168930",
    "end": "176190"
  },
  {
    "text": "we are slowing it down but we're doing it because we think that if we make some changes now it will be more broadly",
    "start": "176190",
    "end": "181680"
  },
  {
    "text": "useful so that's that's what we're doing here um and if you can hold your",
    "start": "181680",
    "end": "187560"
  },
  {
    "text": "questions to the end we have lots of people in the call who are happy to answer all your questions and we just want to get through this presentation",
    "start": "187560",
    "end": "193650"
  },
  {
    "text": "fast as possible so to start proto means roughly two things there's a human",
    "start": "193650",
    "end": "201000"
  },
  {
    "text": "readable dot proto file it's written in the protobuf interface definition",
    "start": "201000",
    "end": "206160"
  },
  {
    "text": "language and that's used to generate multiple consumer event libraries and",
    "start": "206160",
    "end": "211380"
  },
  {
    "text": "coatings that kind of thing there's an example of what this looks like here on the right side one of those encoding is",
    "start": "211380",
    "end": "217560"
  },
  {
    "text": "the proto binary format and that is the other thing that we can use part of me",
    "start": "217560",
    "end": "223170"
  },
  {
    "text": "so to avoid confusion in this I'm going to refer to proto lane to refer to the",
    "start": "223170",
    "end": "229020"
  },
  {
    "text": "language that's the that's the thing that is human readable they can write that also generates a JSON encoding and",
    "start": "229020",
    "end": "235980"
  },
  {
    "text": "we are bending over backwards right now lets you define a cloud events message and put a link that will generate JSON",
    "start": "235980",
    "end": "241890"
  },
  {
    "text": "the spec compliant and you can read more about how it converts to JSON and I'm",
    "start": "241890",
    "end": "249180"
  },
  {
    "text": "going to refer to proto binary or by anything so we can define a cloud events",
    "start": "249180",
    "end": "257730"
  },
  {
    "text": "message and proto Ling and it will generate serialization for Pro JSON and proto jason serialization i've linked to",
    "start": "257730",
    "end": "264330"
  },
  {
    "text": "it's not incredibly restrictive but there are some restrictions a source of confusion",
    "start": "264330",
    "end": "269350"
  },
  {
    "text": "in previous conversations that we've had has been that the proto binary and adjacency relations are totally",
    "start": "269350",
    "end": "275290"
  },
  {
    "text": "independent that's not true if they're both generated by a common protein definition only a subset of a JSON can",
    "start": "275290",
    "end": "282580"
  },
  {
    "text": "be generated by Pro tolling it's pretty permissive but it enforces some guardrails and moving extensions to the",
    "start": "282580",
    "end": "289419"
  },
  {
    "text": "top level proper top level properties does make it impossible for us to define a spec compliant cloud of internal link",
    "start": "289419",
    "end": "296760"
  },
  {
    "text": "so we acknowledge up front that this extensions bag is just a slightly",
    "start": "296760",
    "end": "303250"
  },
  {
    "text": "clunkier API it makes the promotion process for Jason Y systems more complicated than it would",
    "start": "303250",
    "end": "308800"
  },
  {
    "text": "be if everything was at the top level and we're still asking for this because",
    "start": "308800",
    "end": "313810"
  },
  {
    "text": "we think it makes suspect more reliable and more useful and we have a demo to show why we think that's true the other",
    "start": "313810",
    "end": "320289"
  },
  {
    "text": "thing I want to say about proto is that it's used extensively by other scenes you have projects like kubernetes and g",
    "start": "320289",
    "end": "325780"
  },
  {
    "text": "RPC and if we want our spec to be a C&C project we think that it should play",
    "start": "325780",
    "end": "331090"
  },
  {
    "text": "well with other scenes new projects proto is used at companies that have",
    "start": "331090",
    "end": "336130"
  },
  {
    "text": "lots of popular api's and we would love for them to be able to support cloud events I just add like I wasn't sure how",
    "start": "336130",
    "end": "341889"
  },
  {
    "text": "many people are using so I just looked at the public mailing list and there are about 4,000 users and just scrolling through lots of them are big companies",
    "start": "341889",
    "end": "349620"
  },
  {
    "text": "publishing a cloud of its definition in portaling would let all those companies quickly start using cloud events within",
    "start": "349620",
    "end": "356229"
  },
  {
    "text": "their existing part of a system and if a cloud events JSON format cannot be",
    "start": "356229",
    "end": "362710"
  },
  {
    "text": "expressed in portaling then every single company that's using proto internally is going to have this higher cost to start",
    "start": "362710",
    "end": "368919"
  },
  {
    "text": "sending or receiving events so so I'm gonna say about that it's not proprietary so I'm gonna stop sharing",
    "start": "368919",
    "end": "376150"
  },
  {
    "text": "and I'm going to let Thomas share to walk through his demo this demo is using doug's Jason next tool and it's going to",
    "start": "376150",
    "end": "383979"
  },
  {
    "text": "show that we get non-deterministic behavior if we circumvent the proto Lange's guardrails for JSON",
    "start": "383979",
    "end": "390000"
  },
  {
    "text": "Thank You Rachel so one of the things that I wanted to focus on was that I",
    "start": "396710",
    "end": "402240"
  },
  {
    "text": "think to a large extent the discussions that we've been doing where we use proto",
    "start": "402240",
    "end": "408719"
  },
  {
    "text": "as an example aren't just about proto they're just those guardrails which I think are there for a reason so I had a git repo that I published",
    "start": "408719",
    "end": "416759"
  },
  {
    "text": "yesterday called versioning is hard I try to act as three different actors our",
    "start": "416759",
    "end": "423449"
  },
  {
    "text": "working group a smart library vendor and a an application development and I try",
    "start": "423449",
    "end": "430199"
  },
  {
    "text": "to do this all on the Jason spec as proposed where violates some of these",
    "start": "430199",
    "end": "435899"
  },
  {
    "text": "kind of guardrails and see what could",
    "start": "435899",
    "end": "441209"
  },
  {
    "text": "possibly happen so if you look at the gate history basically your screen Oh am",
    "start": "441209",
    "end": "447449"
  },
  {
    "text": "I not doing that I'm sorry I'm being technically enough which is very embarrassing for",
    "start": "447449",
    "end": "452759"
  },
  {
    "text": "presentation it says your screen were my",
    "start": "452759",
    "end": "461279"
  },
  {
    "text": "Oh desktop there yes I missed one of the dialog boxes anyone see it now um",
    "start": "461279",
    "end": "469110"
  },
  {
    "text": "anyways each of these is poking a little bit fun in our working group it's all has signed off by each commit acts as",
    "start": "469110",
    "end": "476879"
  },
  {
    "text": "one person but we can go ahead and look at some the final product we have some",
    "start": "476879",
    "end": "482159"
  },
  {
    "text": "fake cloud events and we will run the application at version 100 of our spec",
    "start": "482159",
    "end": "489689"
  },
  {
    "text": "where let's see we can see that these",
    "start": "489689",
    "end": "496159"
  },
  {
    "text": "that currently says that there is anything with an event ID property is a cloud event and anything else can be",
    "start": "496159",
    "end": "503729"
  },
  {
    "text": "parent they're just extensions out so this scope of the spec and then this is",
    "start": "503729",
    "end": "510059"
  },
  {
    "text": "the simple jason library unfortunately the jason that is being proposed is",
    "start": "510059",
    "end": "515550"
  },
  {
    "text": "incompatible with the default go compiler there has been aid out sending bug that i linked to that has been",
    "start": "515550",
    "end": "522510"
  },
  {
    "text": "around for many years go still cannot with the default compiler hand",
    "start": "522510",
    "end": "528029"
  },
  {
    "text": "unstructured properties so thankfully Doug tried to work around that so he has his special parser that I use and then",
    "start": "528029",
    "end": "536790"
  },
  {
    "text": "my application just basically loads it into Santino prints prints out the event ID and we're pretending that this is",
    "start": "536790",
    "end": "543480"
  },
  {
    "text": "also using the sample draped extension that we'd ratified yesterday or not yesterday last week and said it was",
    "start": "543480",
    "end": "548940"
  },
  {
    "text": "either sampled or a rate of one in something or it was not simple so if you run that at one point oh it was got",
    "start": "548940",
    "end": "557040"
  },
  {
    "text": "about 1 to 3 it was sampled at a rate one in 10 but now if we check out it 1.1",
    "start": "557040",
    "end": "568640"
  },
  {
    "text": "[Applause] so what happened is spec 1.1 got",
    "start": "568640",
    "end": "574529"
  },
  {
    "text": "announced it said hey we also have an event time property and by the way we've also noticed that everyone likes to use",
    "start": "574529",
    "end": "581100"
  },
  {
    "text": "sample drapes so we're going to now formally define it so the response for that is to do so just add those fields",
    "start": "581100",
    "end": "591209"
  },
  {
    "text": "to the Jason there the struct in our library and then suddenly when I try to",
    "start": "591209",
    "end": "596430"
  },
  {
    "text": "run that code though",
    "start": "596430",
    "end": "599540"
  },
  {
    "text": "it'll check I may have done did you pay",
    "start": "604350",
    "end": "623760"
  },
  {
    "text": "how much to the demo guards first there's the problem I mean not have",
    "start": "623760",
    "end": "629690"
  },
  {
    "text": "you're still trending event 1.0 budget from the edge when design isn't 1.1 I",
    "start": "629900",
    "end": "638150"
  },
  {
    "text": "wonder if",
    "start": "638150",
    "end": "641390"
  },
  {
    "text": "JTP oh that's the point is that you shouldn't this breaks even when you",
    "start": "647209",
    "end": "653160"
  },
  {
    "text": "don't change the data payload but let me",
    "start": "653160",
    "end": "665639"
  },
  {
    "text": "double check what's going on",
    "start": "665639",
    "end": "668569"
  },
  {
    "text": "Oh for some reason while you work see that is it useful if I talk about what we should expect to see how I can I can",
    "start": "679070",
    "end": "685250"
  },
  {
    "text": "even just edit it on the spot it seems for some reason I get tags got messed up I didn't have the change in this track",
    "start": "685250",
    "end": "691089"
  },
  {
    "text": "lead cloud events plan events that go if I just add the definition for this thing",
    "start": "691089",
    "end": "697839"
  },
  {
    "text": "like we called it sampled rate editing",
    "start": "697839",
    "end": "709819"
  },
  {
    "text": "the spec to actually match or adding the library to match the new spec means that",
    "start": "709819",
    "end": "714980"
  },
  {
    "text": "if I run this it now breaks my",
    "start": "714980",
    "end": "721040"
  },
  {
    "text": "application hasn't changed my spec changed what we thought was a forged compatible way we used the latest and",
    "start": "721040",
    "end": "729170"
  },
  {
    "text": "greatest tools from our own working group members and there was nothing that could actually be done to avoid breaking this application so whether we actually",
    "start": "729170",
    "end": "739040"
  },
  {
    "text": "choose to do this extensions or not I think my request is that either a we",
    "start": "739040",
    "end": "744680"
  },
  {
    "text": "treat extension separately always it so it's a very clear idea that it's extension or it's not extension or be at",
    "start": "744680",
    "end": "750470"
  },
  {
    "text": "least recognize that when something isn't a well-known extension if we promote it that there are some formats",
    "start": "750470",
    "end": "755480"
  },
  {
    "text": "and some libraries where this is a breaking change and that we would do it as a breaking change so I will yield my",
    "start": "755480",
    "end": "761060"
  },
  {
    "text": "time",
    "start": "761060",
    "end": "763089"
  },
  {
    "text": "you",
    "start": "771209",
    "end": "773269"
  },
  {
    "text": "okay now I'm going to jump back to presenting okay so the thing that we",
    "start": "778400",
    "end": "786750"
  },
  {
    "text": "want to take away from that demo is that so I can't increment my size hold on",
    "start": "786750",
    "end": "805700"
  },
  {
    "text": "okay so you can see my sides now right yes yep okay so the thing we want to",
    "start": "828620",
    "end": "837120"
  },
  {
    "text": "take away from this is that we need to balance for compatibility and extensibility in structured data and we",
    "start": "837120",
    "end": "843240"
  },
  {
    "text": "have a proposal for how to do that and that would lexical for all formats so",
    "start": "843240",
    "end": "849810"
  },
  {
    "text": "diving in for a second to for compatibility that's about adding new attributes the spec in future iterations without",
    "start": "849810",
    "end": "856800"
  },
  {
    "text": "breaking the existing event consumers they're still using the full version in JSON this is really straightforward",
    "start": "856800",
    "end": "862110"
  },
  {
    "text": "because JSON keys are strings if the keys are uniquely named there's no risk of collisions all the values are JSON",
    "start": "862110",
    "end": "868410"
  },
  {
    "text": "primitives and the future iterations of the spec that add new properties are assumed to be non breaking changes for",
    "start": "868410",
    "end": "874830"
  },
  {
    "text": "existing do something good so what do you mean by primitives JSON primitives",
    "start": "874830",
    "end": "880640"
  },
  {
    "text": "that's defined in the spec so we have a list but that's okay that's okay I can I",
    "start": "880640",
    "end": "887790"
  },
  {
    "text": "can send you a link to it later on so for compatibility in proto binaries a",
    "start": "887790",
    "end": "892800"
  },
  {
    "text": "little bit different why should have it consumed this is a question that we've gotten from a few people so I want to",
    "start": "892800",
    "end": "898410"
  },
  {
    "text": "just address this directly why should have it consumers using proto binary not use the unknown fields for extensions",
    "start": "898410",
    "end": "904500"
  },
  {
    "text": "and there are a few reasons unknown doesn't provide for compatibility because the top level keys are integers",
    "start": "904500",
    "end": "910260"
  },
  {
    "text": "and to avoid collisions you're going to have to use a high number integer to avoid that and so the normal low index",
    "start": "910260",
    "end": "916410"
  },
  {
    "text": "integers so when it is upgraded we're going to have to flip to a low index integer when it's really promoted to a",
    "start": "916410",
    "end": "922740"
  },
  {
    "text": "top-level speck it's very hard for us to use two extensions import of binary and",
    "start": "922740",
    "end": "928589"
  },
  {
    "text": "a bit can if they're out the top level event consumers would have to individually write an additional crow",
    "start": "928589",
    "end": "934050"
  },
  {
    "text": "tolling definition for the base spec and then combine two extensions into a new tag and if the extensions are in a",
    "start": "934050",
    "end": "940950"
  },
  {
    "text": "property Baggett's of a note fields then promoting them from property bags to an own field is a manger is a major change",
    "start": "940950",
    "end": "947520"
  },
  {
    "text": "not a minor change because we're going to have to like we're checking for it in one spot now we're going to check for in",
    "start": "947520",
    "end": "953730"
  },
  {
    "text": "another spot so even though it's a minor change for JSON to add a new thing it's to add a new property it's going to be a",
    "start": "953730",
    "end": "960540"
  },
  {
    "text": "major change for binary formats and this is a question I really want to draw people's attention to will the working",
    "start": "960540",
    "end": "966990"
  },
  {
    "text": "group be incrementing their semantic versioning only when a change breaks JSON only event consumers or when it",
    "start": "966990",
    "end": "972990"
  },
  {
    "text": "breaks anybody so diving into extensibility and that's about allowing",
    "start": "972990",
    "end": "978630"
  },
  {
    "text": "arbitrary attributes either the top level or in a property bags so things are not defined so extensibility versus",
    "start": "978630",
    "end": "985709"
  },
  {
    "text": "property bags has I'm going to talk about the pros own and talk about the cons here the pros first for event",
    "start": "985709",
    "end": "990959"
  },
  {
    "text": "consumers using a binary format extensions can be used without special handling a vendor specific extensions",
    "start": "990959",
    "end": "997170"
  },
  {
    "text": "for example sample rate is added two extensions Dickson Chen's property bag if it consumers can assign extensions to",
    "start": "997170",
    "end": "1003950"
  },
  {
    "text": "be a struct and there's a link to how that's defined struct is defined is there's a lot of work that's gone into",
    "start": "1003950",
    "end": "1010070"
  },
  {
    "text": "this to making sure that it can handle arbitrary values and that the conversion",
    "start": "1010070",
    "end": "1015380"
  },
  {
    "text": "between JSON and Purdue binary smooth so we can take advantage of that and for admit consumers that are using adjacent",
    "start": "1015380",
    "end": "1021560"
  },
  {
    "text": "only format exemptions can be used without special handling - so the cons of the property bag this is what I think",
    "start": "1021560",
    "end": "1027709"
  },
  {
    "text": "you're all very familiar with I'm going to tell you what you believe anyway promoting an extension to topple the attribute is a breaking change from both",
    "start": "1027709",
    "end": "1034188"
  },
  {
    "text": "the binary and the Jason formats for example if sample rate is widely used and then",
    "start": "1034189",
    "end": "1040199"
  },
  {
    "text": "promoted to be a top level attribute to be backwards compatible if the consumers are going to need to accept the 1.0",
    "start": "1040199",
    "end": "1048269"
  },
  {
    "text": "events or sample rates still Nixon chin bag and then to support 2.0 events the",
    "start": "1048269",
    "end": "1053340"
  },
  {
    "text": "consumers are going to start to look for example rated as a top level property so to avoid the breaking change that like",
    "start": "1053340",
    "end": "1059490"
  },
  {
    "text": "that's a primary motivation I think most people in the script feel for moving away from the property bag to put all extensions at the top level",
    "start": "1059490",
    "end": "1066799"
  },
  {
    "text": "so if we use extensibility via top level properties for Jason only",
    "start": "1066799",
    "end": "1072870"
  },
  {
    "text": "implementations this is fine as long as you're uniquely named and the promotion path is absolutely seamless event",
    "start": "1072870",
    "end": "1079230"
  },
  {
    "text": "consumers will seek no change between the attribute being an extension and being a known attribute but for pro",
    "start": "1079230",
    "end": "1084510"
  },
  {
    "text": "teliing implementations we can't easily handle top-level attributes so there are two workarounds the first one is to",
    "start": "1084510",
    "end": "1091169"
  },
  {
    "text": "handcrafts the proto binary adding the known attributes to an integer key",
    "start": "1091169",
    "end": "1096210"
  },
  {
    "text": "top-level attribute and adding unknown properties to property back this is going to require abandoning the built in",
    "start": "1096210",
    "end": "1102360"
  },
  {
    "text": "conversion between Jason and proto binary that's provided by Pro tolling and special casing that for cloud events",
    "start": "1102360",
    "end": "1108870"
  },
  {
    "text": "is going to be a pill fight for every system that we want to support this but inside Google and for everything that's",
    "start": "1108870",
    "end": "1114240"
  },
  {
    "text": "using pedaling so the second workaround is that event consumers could drop unknown attributes",
    "start": "1114240",
    "end": "1120360"
  },
  {
    "text": "but that is effectively dropping extensibility so we don't like that that's so the conclusions and our",
    "start": "1120360",
    "end": "1127320"
  },
  {
    "text": "requests our conclusion line if the extension bag is removed the JSON format cannot be expressed by pro delaying and",
    "start": "1127320",
    "end": "1134130"
  },
  {
    "text": "Google will be unable to avoid fracturing the spec because we're going to have to duplicate the JSON format and",
    "start": "1134130",
    "end": "1139440"
  },
  {
    "text": "it will differ at like so we're going to break into a format that is compatible",
    "start": "1139440",
    "end": "1144720"
  },
  {
    "text": "as totaling and a format that's compatible the spec we know that it's a",
    "start": "1144720",
    "end": "1150720"
  },
  {
    "text": "sacrifice for everyone that's an adjacent only system they're going to be giving up the cleaner JSON and the",
    "start": "1150720",
    "end": "1156450"
  },
  {
    "text": "seamless property promotion pass for for only JSON systems and we think this",
    "start": "1156450",
    "end": "1162269"
  },
  {
    "text": "change will be a good like we think that in giving that up it also makes it",
    "start": "1162269",
    "end": "1168360"
  },
  {
    "text": "useful to a much larger group so here's our hero requests",
    "start": "1168360",
    "end": "1173940"
  },
  {
    "text": "we know that if you're not using protein that this is height like we're asking",
    "start": "1173940",
    "end": "1179910"
  },
  {
    "text": "you to go out in a limb and think about how things will work in other situations that you're not dealing with right now",
    "start": "1179910",
    "end": "1186030"
  },
  {
    "text": "and we ask that you do that there's a conflict that we see coming down the road for force compatibility",
    "start": "1186030",
    "end": "1191520"
  },
  {
    "text": "accessibility it's using accessibility and then the ability to structure your data and so we would like the working",
    "start": "1191520",
    "end": "1197370"
  },
  {
    "text": "group to decide which goals we value in which they're willing to sacrifice if the working group wants to support or",
    "start": "1197370",
    "end": "1203520"
  },
  {
    "text": "wants to sacrifice support districts or if the working group can was has a plan",
    "start": "1203520",
    "end": "1210360"
  },
  {
    "text": "to only make breaking changes or to increment a major version when it breaks",
    "start": "1210360",
    "end": "1215880"
  },
  {
    "text": "Jason only systems that's something we would like to know sooner rather than later so that's it that's all I have and",
    "start": "1215880",
    "end": "1221850"
  },
  {
    "text": "we're happy to answer your questions okay so like we did last week I think it's important to have an ordered",
    "start": "1221850",
    "end": "1227610"
  },
  {
    "text": "discussion here so if you want to raise your hand to say something put a plus hand into the chat I'll do my best and",
    "start": "1227610",
    "end": "1233490"
  },
  {
    "text": "notice it and I reason I put my hand up it first is because you guys mentioned",
    "start": "1233490",
    "end": "1241050"
  },
  {
    "text": "my tool so if you can stop sharing for a sec I want to show one thing",
    "start": "1241050",
    "end": "1246140"
  },
  {
    "text": "okay hold on a second let me finish what",
    "start": "1246150",
    "end": "1253060"
  },
  {
    "text": "I was gonna say first then you can bend your necks I'm like you I can just find my I think that's it you guys can see",
    "start": "1253060",
    "end": "1260560"
  },
  {
    "text": "that right yeah okay so since Thomas was",
    "start": "1260560",
    "end": "1265570"
  },
  {
    "text": "using my tool and he if I heard him correctly making me a claim about how when you upgrade from one version",
    "start": "1265570",
    "end": "1272800"
  },
  {
    "text": "respect to next and you add a new optional property that was once an extension it's a breaking change there's",
    "start": "1272800",
    "end": "1278830"
  },
  {
    "text": "no way around that and that's technically not true in fact in that repo you can actually see I have an",
    "start": "1278830",
    "end": "1284620"
  },
  {
    "text": "example where I have a person version one but just named person version 2 with name and address with the assumption",
    "start": "1284620",
    "end": "1290950"
  },
  {
    "text": "that for the version 1 address was extra meaning was just that extra place where extensions go and so when you take this",
    "start": "1290950",
    "end": "1298390"
  },
  {
    "text": "Jason gets parsed we part the example shows you parse it into a version ones person and a version 2 person and you",
    "start": "1298390",
    "end": "1306670"
  },
  {
    "text": "can access it because the toolkit that I'm using which is the same thing that Thomas was using my little ext thing I",
    "start": "1306670",
    "end": "1312520"
  },
  {
    "text": "can actually address I got to access address from both structures with the",
    "start": "1312520",
    "end": "1318310"
  },
  {
    "text": "exact same line of code and you run it you actually get the exact same value coming out so my point here is not to",
    "start": "1318310",
    "end": "1325630"
  },
  {
    "text": "say that there won't ever be any problems my point was just it depends on what tooling that you're using going",
    "start": "1325630",
    "end": "1330730"
  },
  {
    "text": "forward and that's the way I just want to point out because I didn't want people to be mislead at least for my",
    "start": "1330730",
    "end": "1336070"
  },
  {
    "text": "tooling that there's this problem it can't be done when it can be done there's an example in that it shows it so with that Kathy I believe you're next",
    "start": "1336070",
    "end": "1343480"
  },
  {
    "text": "on the queue so you mentioned you know",
    "start": "1343480",
    "end": "1350530"
  },
  {
    "text": "this extension and back and do mean the you know the extension keyword we we",
    "start": "1350530",
    "end": "1357580"
  },
  {
    "text": "used to have are you referring to that yes that is very future so so okay so",
    "start": "1357580",
    "end": "1364440"
  },
  {
    "text": "yeah I just want to make sure you are you opposing top-level partner backs is",
    "start": "1364440",
    "end": "1370090"
  },
  {
    "text": "not that extension but you know we proposed some attribute which is of the",
    "start": "1370090",
    "end": "1376720"
  },
  {
    "text": "map format is yeah so so we're asking we're saying",
    "start": "1376720",
    "end": "1382990"
  },
  {
    "text": "that it is not compatible with Pro tolling generated JSON to have arbitrary",
    "start": "1382990",
    "end": "1389110"
  },
  {
    "text": "attributes at the top level but if they are in an extensions bag or in a known",
    "start": "1389110",
    "end": "1395340"
  },
  {
    "text": "in a known property that we have a type for that we can't handle it so you so",
    "start": "1395340",
    "end": "1402540"
  },
  {
    "text": "your point is if we put those into a known well-defined I'm back it's better",
    "start": "1402540",
    "end": "1410650"
  },
  {
    "text": "is that what you mean or is hardly yes yes it's better yes okay I see cool and",
    "start": "1410650",
    "end": "1423130"
  },
  {
    "text": "I think I'm next I'm not sure if I'm supposed to raise my hand to respond to these comments or not so in response to",
    "start": "1423130",
    "end": "1429880"
  },
  {
    "text": "the thing with the I do try to be if you check that github repo is intellectually",
    "start": "1429880",
    "end": "1434890"
  },
  {
    "text": "honest as possible I did actually disclaim this in the footnote uh Sarah pointed out so the",
    "start": "1434890",
    "end": "1441310"
  },
  {
    "text": "point of the discussion was trust me about structured formats of any kind not just proto and there is a workaround",
    "start": "1441310",
    "end": "1448450"
  },
  {
    "text": "with certain usage patterns that are okay I personally would not recommend the one that was just shown because I'd",
    "start": "1448450",
    "end": "1456070"
  },
  {
    "text": "actually recommend using tooth trucks because now with the example in the futures section anybody who says event",
    "start": "1456070",
    "end": "1463030"
  },
  {
    "text": "extras will invariably be broken you can escape out into a string only system",
    "start": "1463030",
    "end": "1469570"
  },
  {
    "text": "this is how some libraries do it for HTTP headers or you either access everything there's no like unknown",
    "start": "1469570",
    "end": "1474640"
  },
  {
    "text": "headers it's just everything was Jenny Venable launched I would argue at that point we're not talking about the",
    "start": "1474640",
    "end": "1479980"
  },
  {
    "text": "trade-offs of the structured system because you've gone to a map based system again I think it's an important",
    "start": "1479980",
    "end": "1487180"
  },
  {
    "text": "note though that throughout this demo we're fighting tools at many steps the way and though is I would like to have a",
    "start": "1487180",
    "end": "1495340"
  },
  {
    "text": "spec that is not possible to use right correctly but easy to use correctly my",
    "start": "1495340",
    "end": "1500890"
  },
  {
    "text": "personal trade-off that doesn't have to represent the groups is that I would rather have slightly more verbose but",
    "start": "1500890",
    "end": "1506380"
  },
  {
    "text": "very very hard to use incorrectly very hard to walk into trap where you but accidentally made something not more",
    "start": "1506380",
    "end": "1512080"
  },
  {
    "text": "compatible all right thank you Clements I believe you're next",
    "start": "1512080",
    "end": "1519289"
  },
  {
    "text": "yeah so there's a few observations first what I find interesting is that the",
    "start": "1519870",
    "end": "1525870"
  },
  {
    "text": "entire protobufs discussion is done through the lens of existing tooling and",
    "start": "1525870",
    "end": "1531919"
  },
  {
    "text": "really not it's not a protocol discussion and I find that a little odd",
    "start": "1531919",
    "end": "1537630"
  },
  {
    "text": "because we're really trying to build and drop and trying to build that kind of at",
    "start": "1537630",
    "end": "1542970"
  },
  {
    "text": "the protocol level and what I'm seeing is effectively lots of discussions about",
    "start": "1542970",
    "end": "1548549"
  },
  {
    "text": "tooling particularities and idiosyncrasies specifically around Jason",
    "start": "1548549",
    "end": "1554309"
  },
  {
    "text": "which I frankly don't understand because we have a canonical spec for Jason and",
    "start": "1554309",
    "end": "1560160"
  },
  {
    "text": "if the particular tooling that you're choosing is unable to handle this Jason",
    "start": "1560160",
    "end": "1566520"
  },
  {
    "text": "that we have which is you know a very straight forward flat structure then the",
    "start": "1566520",
    "end": "1573240"
  },
  {
    "text": "question is what the tooling is right I don't think there's any need for you",
    "start": "1573240",
    "end": "1580980"
  },
  {
    "text": "know using a like you what I see is that you're defining a proto document and you",
    "start": "1580980",
    "end": "1590100"
  },
  {
    "text": "seem to be insisting on using that particular document to also do all of the Jason's for serialization work that",
    "start": "1590100",
    "end": "1596640"
  },
  {
    "text": "you're doing and I find that choice rather odd and and I don't think since",
    "start": "1596640",
    "end": "1601650"
  },
  {
    "text": "we have a normative specification for how Jason Cloud events works it's unclear why that's even be made it why",
    "start": "1601650",
    "end": "1609540"
  },
  {
    "text": "that's even made a topic I would understand if you were to have an",
    "start": "1609540",
    "end": "1615450"
  },
  {
    "text": "argument about how it's impossible to serialize unknown fields at the top",
    "start": "1615450",
    "end": "1622200"
  },
  {
    "text": "level purely in the protobuf binary format but I don't understand the Jason",
    "start": "1622200",
    "end": "1628740"
  },
  {
    "text": "angle at all so that's one point second point if you are taking and I did a bit",
    "start": "1628740",
    "end": "1635520"
  },
  {
    "text": "of the math in a comment to your program submission in in the repo we have",
    "start": "1635520",
    "end": "1643140"
  },
  {
    "text": "currently eight a well-defined fields of those are four are required if you",
    "start": "1643140",
    "end": "1651000"
  },
  {
    "text": "are taking those if you were taking the road to basically making the entire",
    "start": "1651000",
    "end": "1658980"
  },
  {
    "text": "message not not strongly typed but if",
    "start": "1658980",
    "end": "1664920"
  },
  {
    "text": "you so position in basically if you were not doing positional encoding but if it",
    "start": "1664920",
    "end": "1669990"
  },
  {
    "text": "would all putting it into a dictionary which make it completely equivalent to Jason when I came up with is effectively",
    "start": "1669990",
    "end": "1677610"
  },
  {
    "text": "a overhead of four bytes per field and",
    "start": "1677610",
    "end": "1683100"
  },
  {
    "text": "if you squish it down and really make it positional then you can also get to and and use effectively a the capabilities",
    "start": "1683100",
    "end": "1691290"
  },
  {
    "text": "of the wire format that protobufs gives you um you could get to two bytes overhead per field which adds up to",
    "start": "1691290",
    "end": "1698250"
  },
  {
    "text": "between eight and sixteen bytes and that's still within the AAS 16 bytes",
    "start": "1698250",
    "end": "1705270"
  },
  {
    "text": "padding range which means if you sent this all over TLS overall the game that",
    "start": "1705270",
    "end": "1710850"
  },
  {
    "text": "you have by using positional encoding using protobuf might be completely going away just because you're using",
    "start": "1710850",
    "end": "1716010"
  },
  {
    "text": "encryption so for me the question is why are we going through all these all these",
    "start": "1716010",
    "end": "1722670"
  },
  {
    "text": "exercises if we can take the key value pair model naps arrays and values model",
    "start": "1722670",
    "end": "1730170"
  },
  {
    "text": "that jason has and it's also used by several other binary encoding message",
    "start": "1730170",
    "end": "1735420"
  },
  {
    "text": "pack XE if you take the the XML version or beasts on and and rather for the",
    "start": "1735420",
    "end": "1742800"
  },
  {
    "text": "rather particular case of a constrained type model that we have and you know",
    "start": "1742800",
    "end": "1750260"
  },
  {
    "text": "hardwired type model as it has as proto has it and also has surfed avid has it",
    "start": "1750260",
    "end": "1758030"
  },
  {
    "text": "why are we making all this effort for really effectively very minimal gain on",
    "start": "1758030",
    "end": "1763200"
  },
  {
    "text": "the wire all right I believe mark you're next",
    "start": "1763200",
    "end": "1771590"
  },
  {
    "text": "yes so you know what the presentation talked a lot about the versioning and",
    "start": "1772410",
    "end": "1779070"
  },
  {
    "text": "what my main question is didn't really address the difference between optional",
    "start": "1779070",
    "end": "1784680"
  },
  {
    "text": "and required fields where we had felt that optional fields would only require",
    "start": "1784680",
    "end": "1790230"
  },
  {
    "text": "a minor release as opposed to required",
    "start": "1790230",
    "end": "1796020"
  },
  {
    "text": "that would require a major release and it seemed like the presentation was really just talking about major releases",
    "start": "1796020",
    "end": "1801600"
  },
  {
    "text": "in required fields Rachel can you address that sure I address it now or",
    "start": "1801600",
    "end": "1809160"
  },
  {
    "text": "should we let people I don't know go ahead go ahead and respond because otherwise your own people may forget",
    "start": "1809160",
    "end": "1814770"
  },
  {
    "text": "what the question was so just go ahead and spawn okay so we did focus we focused on required fields because we",
    "start": "1814770",
    "end": "1821850"
  },
  {
    "text": "think that's a use case where it's breaking for everyone we did if you we",
    "start": "1821850",
    "end": "1827010"
  },
  {
    "text": "can talk more about minor releases that only have optional fields um since I'm",
    "start": "1827010",
    "end": "1836100"
  },
  {
    "text": "next anyways I can just add on till next Oh way to go ahead I'll defer my slot to",
    "start": "1836100",
    "end": "1841770"
  },
  {
    "text": "you go ahead oh I missed it you had done it twice oh it's just and say um the there we're not changing her stance at",
    "start": "1841770",
    "end": "1849240"
  },
  {
    "text": "all about adding brand new from clean cloth optional fields those should be acceptable as a minor revision I would",
    "start": "1849240",
    "end": "1856650"
  },
  {
    "text": "save for example if we added something that is already in the well-known extensions list we are quite aware that",
    "start": "1856650",
    "end": "1865770"
  },
  {
    "text": "this thing does exist and there is usage and that's ratifying an extension not",
    "start": "1865770",
    "end": "1872070"
  },
  {
    "text": "just adding a new property that we've never seen before but ratifying an extension is a breaking change that was",
    "start": "1872070",
    "end": "1877500"
  },
  {
    "text": "my suggestion and I think that's why we focus so much on major versions - Doug",
    "start": "1877500",
    "end": "1884250"
  },
  {
    "text": "okay okay and speaking now strictly from my point of view not as someone who's trying to run the meeting um but I did",
    "start": "1884250",
    "end": "1890880"
  },
  {
    "text": "want to point out something that the what Thomas was talking about my tool I",
    "start": "1890880",
    "end": "1896040"
  },
  {
    "text": "think you're implying my tool was kind of flattening everything into a value pairs and stuff you not able to use",
    "start": "1896040",
    "end": "1901560"
  },
  {
    "text": "structured processing that's actually not true it only does that for",
    "start": "1901560",
    "end": "1906620"
  },
  {
    "text": "properties not the ones that are well-known to the structure itself those you can still always access by direct",
    "start": "1906620",
    "end": "1912110"
  },
  {
    "text": "reference to the structured elements but I guess my question I've to have two",
    "start": "1912110",
    "end": "1918140"
  },
  {
    "text": "questions for you guys one is and the stuff that you guys posted yesterday it",
    "start": "1918140",
    "end": "1923179"
  },
  {
    "text": "made it sound like you guys were saying the existing Jason that we have in our spec is is not compatible with proto and",
    "start": "1923179",
    "end": "1931670"
  },
  {
    "text": "that you guys are going to be requesting changes to our existing Jason and I'd like clarification whether that's true",
    "start": "1931670",
    "end": "1936710"
  },
  {
    "text": "or not and my second question is a little bit of question a little bit a statement this notion of ratifying",
    "start": "1936710",
    "end": "1944000"
  },
  {
    "text": "extensions is something I think we need to almost get clarity on because the",
    "start": "1944000",
    "end": "1951799"
  },
  {
    "text": "spec by definition does not know about extensions period nor do we know about all possible extensions are out there so",
    "start": "1951799",
    "end": "1958370"
  },
  {
    "text": "this notion of ratify an extension being I'm sorry the notion of creating a brand new optional level property as an act",
    "start": "1958370",
    "end": "1966799"
  },
  {
    "text": "that is different from ratifying extension is just false they're both the exact same things the spec doesn't know",
    "start": "1966799",
    "end": "1973549"
  },
  {
    "text": "about extensions to the Specht everything is a brand new thing and we can never know for sure what is being",
    "start": "1973549",
    "end": "1978799"
  },
  {
    "text": "used as an extension someplace so to say that we're going to add something brand-new to the spec and therefore would have to worry about an existing",
    "start": "1978799",
    "end": "1984679"
  },
  {
    "text": "that existing thing to use etics is an extension just is not true everything could technically be used as an",
    "start": "1984679",
    "end": "1990500"
  },
  {
    "text": "extension so I'm not sure we can differentiate between those two so I like to get an answer to my your little",
    "start": "1990500",
    "end": "1995990"
  },
  {
    "text": "question though well our Jason need to change according to your guys request okay so it does not as it stands now but",
    "start": "1995990",
    "end": "2002470"
  },
  {
    "text": "if your PR that merges extension so extensions can begin top-level properties then it is not compliant",
    "start": "2002470",
    "end": "2009340"
  },
  {
    "text": "that's why this is coming to a head now okay cuz the PR that's out there right now for your proto stuff says it think",
    "start": "2009340",
    "end": "2015250"
  },
  {
    "text": "about all this is it what's in component it says the Jason from the spec is",
    "start": "2015250",
    "end": "2021820"
  },
  {
    "text": "incompatible with the Jason generated by proto I think the D that may have been",
    "start": "2021820",
    "end": "2028179"
  },
  {
    "text": "partially misspent misspeaking on that the we've been very worried obviously",
    "start": "2028179",
    "end": "2033400"
  },
  {
    "text": "about the extensions back a one case where we would actually still be not",
    "start": "2033400",
    "end": "2039520"
  },
  {
    "text": "to be fully compliant yet and I've been trying to pull in the core / - people is data the fact that data is so variable",
    "start": "2039520",
    "end": "2048639"
  },
  {
    "text": "in that like if is JSON inside a Jason spec it has one type of encoding and if it's bytes for example it's a byte",
    "start": "2048640",
    "end": "2055090"
  },
  {
    "text": "string the we currently got around it by",
    "start": "2055090",
    "end": "2061030"
  },
  {
    "text": "saying if it's Jason like we call it data and then we had to say something like bytes data for raw bytes those are",
    "start": "2061030",
    "end": "2069850"
  },
  {
    "text": "the two places I've seen effectively the three things that we can't do in a proto",
    "start": "2069850",
    "end": "2075490"
  },
  {
    "text": "compatible JSON are distinguished between a 0 value and empty value we",
    "start": "2075490",
    "end": "2081010"
  },
  {
    "text": "can't have like multiple indeterminate top-level fields from like not just a",
    "start": "2081010",
    "end": "2086889"
  },
  {
    "text": "mate hierarchy if it's just the working group that releases a new version there's version 1 in version 1.1 and",
    "start": "2086890",
    "end": "2092740"
  },
  {
    "text": "they were four words inverse compatible as Rachel covered if there's 20 people adding their extensions it's very hard",
    "start": "2092740",
    "end": "2099550"
  },
  {
    "text": "to coordinate with proto and then the third thing was just that mutable shape",
    "start": "2099550",
    "end": "2107680"
  },
  {
    "text": "idea like something is either A or B so we had to say that data is JSON like",
    "start": "2107680",
    "end": "2115390"
  },
  {
    "text": "when it is called data and it is binary when it's called bytes data someone was",
    "start": "2115390",
    "end": "2124420"
  },
  {
    "text": "speaking up because no one else in the queue but that sounds like what you're implying is you're asking us to defer",
    "start": "2124420",
    "end": "2130180"
  },
  {
    "text": "our JSON serialization format to whatever proto does not exactly like I",
    "start": "2130180",
    "end": "2136960"
  },
  {
    "text": "would I don't think that that's exactly can I can answer her Thomas language okay I like I would characterize it as",
    "start": "2136960",
    "end": "2145800"
  },
  {
    "text": "writing the JSON that we want and then trying to stay within boundaries that",
    "start": "2145800",
    "end": "2151030"
  },
  {
    "text": "exists because we have found bugs in the past because of them yeah I I have been",
    "start": "2151030",
    "end": "2160960"
  },
  {
    "text": "trying to take the Jason spec that the committee has come up with and treat that as gospel and reverse engineering",
    "start": "2160960",
    "end": "2169540"
  },
  {
    "text": "reporting back issues I don't obviously my life would be easier if we stayed in those complaints I don't I know that",
    "start": "2169540",
    "end": "2176180"
  },
  {
    "text": "that's to do that just because it makes people's life easier is not appropriate",
    "start": "2176180",
    "end": "2182420"
  },
  {
    "text": "in the group but I think to some extent it may be appropriate to say why were those decisions made by another group",
    "start": "2182420",
    "end": "2188750"
  },
  {
    "text": "and are those lessons that we can learn from ok Clemens I think your hands I'll",
    "start": "2188750",
    "end": "2196790"
  },
  {
    "text": "just observe that I find that trying to change the specification that an open",
    "start": "2196790",
    "end": "2202579"
  },
  {
    "text": "protocol specification to the particular limitations of a proprietary",
    "start": "2202579",
    "end": "2208750"
  },
  {
    "text": "serialization stack and and make demands out of that in open standards forum is",
    "start": "2208750",
    "end": "2216740"
  },
  {
    "text": "highly inappropriate I appreciate the moral high ground that you're trying to take there's no let me",
    "start": "2216740",
    "end": "2226579"
  },
  {
    "text": "be very clear right we have principles for what's eligible what's not in this",
    "start": "2226579",
    "end": "2235040"
  },
  {
    "text": "working group protobuf your entire stack is might be used fairly widely but your",
    "start": "2235040",
    "end": "2243530"
  },
  {
    "text": "stack is proprietary it is not under the umbrella of an open source foundation",
    "start": "2243530",
    "end": "2249530"
  },
  {
    "text": "and you can change it you control it as much as you like and and the cop and",
    "start": "2249530",
    "end": "2256250"
  },
  {
    "text": "Google does change it as it likes because we got prota - and you got pulled over three and you basically",
    "start": "2256250",
    "end": "2261530"
  },
  {
    "text": "control the destiny of that stack with anybody influencing it so as such it is",
    "start": "2261530",
    "end": "2267650"
  },
  {
    "text": "entirely proprietary there is no moral there's no more argument here I'm making an argument for you know principles of",
    "start": "2267650",
    "end": "2274790"
  },
  {
    "text": "how open standards are being created and what you're trying to do right now is to",
    "start": "2274790",
    "end": "2281750"
  },
  {
    "text": "go and say we're Google we're great or a big we have to stack and now this group needs to bend its",
    "start": "2281750",
    "end": "2289819"
  },
  {
    "text": "formats to the will of the particular artifact that we're using without even",
    "start": "2289819",
    "end": "2294950"
  },
  {
    "text": "looking at the reality of the wire and the focus on what you really need to",
    "start": "2294950",
    "end": "2301099"
  },
  {
    "text": "bring bring to the table and that's your binary format the JSON format that we have here is 100% orthogonal to the your",
    "start": "2301099",
    "end": "2311490"
  },
  {
    "text": "your tooling because you can use like everybody else just another library for",
    "start": "2311490",
    "end": "2318210"
  },
  {
    "text": "doing JSON parsing nobody's forcing you to use your library your library is",
    "start": "2318210",
    "end": "2323340"
  },
  {
    "text": "really good for creating the binary format but your library if it's not good for creating the JSON format well then",
    "start": "2323340",
    "end": "2329460"
  },
  {
    "text": "then that's oh but I don't see how the the working result of this working group",
    "start": "2329460",
    "end": "2334980"
  },
  {
    "text": "should Bend to the needs of a particular library like protobuf okay so let me",
    "start": "2334980",
    "end": "2341820"
  },
  {
    "text": "just keep loading at the Kyocera I believe you're next I just wanted to",
    "start": "2341820",
    "end": "2347930"
  },
  {
    "text": "follow up on a comment you made Doug where you said that having the",
    "start": "2347930",
    "end": "2353100"
  },
  {
    "text": "extensions at the top level would mean that we would never ratify an extension",
    "start": "2353100",
    "end": "2358910"
  },
  {
    "text": "yeah if it's difficult that's definite IM tended my point was that there was a",
    "start": "2361010",
    "end": "2366420"
  },
  {
    "text": "distinction being made between us adding a new property in version 1.1 and that",
    "start": "2366420",
    "end": "2373230"
  },
  {
    "text": "that's thing that's being added being completely brand new versus it being a known extension that's being promoted",
    "start": "2373230",
    "end": "2379860"
  },
  {
    "text": "and my point was that from a spec perspective there is no differentiation the spec knows about no extensions",
    "start": "2379860",
    "end": "2387330"
  },
  {
    "text": "period all we could do is add new optional properties in version 1.1 whether it's being used or not is",
    "start": "2387330",
    "end": "2394020"
  },
  {
    "text": "unknown to us and that it doesn't influence anything in my mind I mean in",
    "start": "2394020",
    "end": "2400620"
  },
  {
    "text": "terms of I mean you might use a implementation in order to make a case for it being promoted in the spec right",
    "start": "2400620",
    "end": "2407340"
  },
  {
    "text": "may be ratified in the spec but yes it shouldn't influence our decision however from a technical perspective I",
    "start": "2407340",
    "end": "2413400"
  },
  {
    "text": "mean I think this whole conversation is to talk about well we expect that people will be using the extensions in order to",
    "start": "2413400",
    "end": "2419940"
  },
  {
    "text": "try stuff out and and then we expect that it will be common that stuff that people have used and have",
    "start": "2419940",
    "end": "2426180"
  },
  {
    "text": "implementations in the wild that have extensions will then later be ratified in the spec and how do we technically",
    "start": "2426180",
    "end": "2433110"
  },
  {
    "text": "deal with that right that that is I think the subject of the discussion right yes yeah we expect that",
    "start": "2433110",
    "end": "2443160"
  },
  {
    "text": "to occur therefore we have to reason about how does our spec handle that and",
    "start": "2443160",
    "end": "2449600"
  },
  {
    "text": "you know and so that we need to think through like either we need to we could",
    "start": "2449600",
    "end": "2457650"
  },
  {
    "text": "go the route of saying this is adjacent only spec and we don't support any other",
    "start": "2457650",
    "end": "2463500"
  },
  {
    "text": "things and we're not interested in binary protocols right or we need to reason through these concerns and I",
    "start": "2463500",
    "end": "2469260"
  },
  {
    "text": "think that Thomas and Rachel have made good efforts to say that these are issues that would happen with many any",
    "start": "2469260",
    "end": "2476970"
  },
  {
    "text": "structured binary protocol and it just makes it more difficult not impossible to implement and we have to think about",
    "start": "2476970",
    "end": "2484110"
  },
  {
    "text": "what we value as a community in forming the specification okay thank you I",
    "start": "2484110",
    "end": "2490860"
  },
  {
    "text": "believe I'm next so the net effect though of trying to",
    "start": "2490860",
    "end": "2496770"
  },
  {
    "text": "make a distinction like like what was being imposed here of no extension is being promoted and is that you basically",
    "start": "2496770",
    "end": "2503520"
  },
  {
    "text": "treat every single extension I'm sorry you have to treat every single new property that gets added can someone go",
    "start": "2503520",
    "end": "2510330"
  },
  {
    "text": "a meter for typing yeah you guys got to treat every new property that gets added to our spec as a know an extension",
    "start": "2510330",
    "end": "2517080"
  },
  {
    "text": "because obviously someone's probably been using it otherwise they wouldn't be adding it and then that's gonna be a",
    "start": "2517080",
    "end": "2522570"
  },
  {
    "text": "major bump according to what you guys are asking for so any change to our spec in terms of new properties being added",
    "start": "2522570",
    "end": "2528930"
  },
  {
    "text": "will result in a major version bump regardless of this PR what you guys are suggesting now the other thing is the",
    "start": "2528930",
    "end": "2537060"
  },
  {
    "text": "reason I really raised my hand was I'm Miller confused about why this specification is so problematic because",
    "start": "2537060",
    "end": "2543960"
  },
  {
    "text": "there are a ton of other JSON specs out there that have Jason civilizations that allow properties to appear at the top",
    "start": "2543960",
    "end": "2549810"
  },
  {
    "text": "and I've never heard of one that tries to ban new properties that stuff like that",
    "start": "2549810",
    "end": "2555000"
  },
  {
    "text": "that's all are we forcing people to put things in certain buckets or saying you can't use Brian every performance with",
    "start": "2555000",
    "end": "2561630"
  },
  {
    "text": "it I've never come across another spec like I thought maybe my scope issues are limited so I'd really like it if someone",
    "start": "2561630",
    "end": "2567090"
  },
  {
    "text": "could point me to another spec that has these type the problems and were forced to make these choices that were being asked to",
    "start": "2567090",
    "end": "2572440"
  },
  {
    "text": "make because I cannot find one I really want to see another example of that and that way I can see why they made those",
    "start": "2572440",
    "end": "2578710"
  },
  {
    "text": "choices okay who's next Nikki",
    "start": "2578710",
    "end": "2584650"
  },
  {
    "text": "I believe injured after you okay go for it oh and to be clear like I am NOT",
    "start": "2584650",
    "end": "2591130"
  },
  {
    "text": "trying to put my foot down and say that are Jason must be dictated by Fredo I'm",
    "start": "2591130",
    "end": "2597790"
  },
  {
    "text": "a trying to raise awareness of what tooling is I think that we should have a goal to consider the practicality of",
    "start": "2597790",
    "end": "2603910"
  },
  {
    "text": "implementing certain things certain features of a language respec are easier to implement and others Jason is no",
    "start": "2603910",
    "end": "2609520"
  },
  {
    "text": "exception the other thing is just effectively giving putting the choice of google's",
    "start": "2609520",
    "end": "2617079"
  },
  {
    "text": "road map on the committee's hand that when we eventually try to add support for GR pc having published a profile in",
    "start": "2617079",
    "end": "2624819"
  },
  {
    "text": "open source will de facto imply a Jason spec and we are stuck between a rock and",
    "start": "2624819",
    "end": "2632740"
  },
  {
    "text": "a hard place we cannot prohibit someone from taking a proto and using the generated JSON version and at the same time we can't",
    "start": "2632740",
    "end": "2640599"
  },
  {
    "text": "without help reconcile them and so we're trying to put it in committees hand of which do you prefer and it's absolutely okay if there's a formal declaration",
    "start": "2640599",
    "end": "2646990"
  },
  {
    "text": "that we understand Google said that this would cause this implication go ahead we",
    "start": "2646990",
    "end": "2653589"
  },
  {
    "text": "just want to make sure that that's actually in submitted somewhere that we're trying as hard as we can to not fracture this back okay is there anybody",
    "start": "2653589",
    "end": "2663160"
  },
  {
    "text": "else in the queue but I don't focus so so does anybody I'd like to make any",
    "start": "2663160",
    "end": "2668410"
  },
  {
    "text": "other comments questions okay we have 12 minutes left now",
    "start": "2668410",
    "end": "2674049"
  },
  {
    "text": "last week's called Thomas Clemons you said there was a proof of concept stuff",
    "start": "2674049",
    "end": "2679500"
  },
  {
    "text": "do you want to go over that in five minutes or skip it I would I would prefer so this this basically made made",
    "start": "2679500",
    "end": "2686380"
  },
  {
    "text": "a similar point that you made here in your POC that's you know we can we can",
    "start": "2686380",
    "end": "2694930"
  },
  {
    "text": "be following the the words of the wise Sam Ruby expect more",
    "start": "2694930",
    "end": "2702170"
  },
  {
    "text": "and have a specification that allows extra stuff also as Tim just pointed out",
    "start": "2702170",
    "end": "2710230"
  },
  {
    "text": "JSON and XML have been super super successful with that it's very possible",
    "start": "2710230",
    "end": "2716000"
  },
  {
    "text": "to make binary formats to make binary formats also use that and so my",
    "start": "2716000",
    "end": "2725750"
  },
  {
    "text": "prototype I don't want to spend much time on it I pasted the link basically",
    "start": "2725750",
    "end": "2730970"
  },
  {
    "text": "illustrates that you can have an extensions bag if you need it in a binary format and still make that",
    "start": "2730970",
    "end": "2736730"
  },
  {
    "text": "compatible with having no extensions really in the core spec and have the the the text format including the binary",
    "start": "2736730",
    "end": "2743630"
  },
  {
    "text": "ones deal without an extension back and having the extension not having new sentence backers from last it's actually",
    "start": "2743630",
    "end": "2750890"
  },
  {
    "text": "allowing for better extensibility as proven in HTTP as proven in Jason as",
    "start": "2750890",
    "end": "2756110"
  },
  {
    "text": "proven in X and now okay any last comments or questions okay",
    "start": "2756110",
    "end": "2765020"
  },
  {
    "text": "in that case what I'd like to do oh I'm so going color yeah there are two your comments in the chat one from steel and",
    "start": "2765020",
    "end": "2771800"
  },
  {
    "text": "while for me it was acting more where's the proto to Jade from me coming from",
    "start": "2771800",
    "end": "2777470"
  },
  {
    "text": "because I just I currently require JSON format to work and that needs answering and I'd like some context around I put",
    "start": "2777470",
    "end": "2784730"
  },
  {
    "text": "the poor footnote and the versioning is forever which doesn't it just basically",
    "start": "2784730",
    "end": "2790640"
  },
  {
    "text": "say that this could be built using the map and what you can I'm not familiar",
    "start": "2790640",
    "end": "2797360"
  },
  {
    "text": "with photos oh my dear one but I like to get some clarification on that",
    "start": "2797360",
    "end": "2802810"
  },
  {
    "text": "how much Rachel I didn't did you restate that sorry the",
    "start": "2802870",
    "end": "2811430"
  },
  {
    "text": "connections were it looks alright yeah well if you have the chance there's",
    "start": "2811430",
    "end": "2816800"
  },
  {
    "text": "a question from Steve oh they second to last message where is the proto where is",
    "start": "2816800",
    "end": "2825830"
  },
  {
    "text": "this proto to Jason did it need coming from okay I can take that so if we",
    "start": "2825830",
    "end": "2832370"
  },
  {
    "text": "define a message format in proto then it will let us take incoming JSON",
    "start": "2832370",
    "end": "2840440"
  },
  {
    "text": "format cloud events handle that easily and then convert it to proto binary and",
    "start": "2840440",
    "end": "2849530"
  },
  {
    "text": "this is not just like an internal need this is the thing that we think is useful does that capture what you're",
    "start": "2849530",
    "end": "2857210"
  },
  {
    "text": "looking for yes Django okay and may wanna elaborate on your question then",
    "start": "2857210",
    "end": "2863950"
  },
  {
    "text": "yeah the footnote in the Tamaki's Rhett oh it says the library would have to be",
    "start": "2863950",
    "end": "2871610"
  },
  {
    "text": "to be built off a map wouldn't that fix the issue you're",
    "start": "2871610",
    "end": "2877280"
  },
  {
    "text": "saying of or within that I'm not understanding it so the problem is not",
    "start": "2877280",
    "end": "2884060"
  },
  {
    "text": "that it is impossible to create a correct library it's at the intuitive thing that many reasonable developers",
    "start": "2884060",
    "end": "2891050"
  },
  {
    "text": "would have done will put them in a trap so the the problem is not like if you",
    "start": "2891050",
    "end": "2897680"
  },
  {
    "text": "look at the the repo there's a git commit with every author look at the persona labeled in each one and it's",
    "start": "2897680",
    "end": "2906140"
  },
  {
    "text": "really hard to say like who was the bad person or who's the like junior",
    "start": "2906140",
    "end": "2911780"
  },
  {
    "text": "developer who made this mistake and I'm trying to as I say raise awareness about",
    "start": "2911780",
    "end": "2919390"
  },
  {
    "text": "about the fact that these things it is a good tool should be easy to use and hard to misuse a good spec should be easy to",
    "start": "2920560",
    "end": "2927470"
  },
  {
    "text": "implement and hard to implement in a bad way and I think that we can do better as far as making sure that we have a spec",
    "start": "2927470",
    "end": "2935510"
  },
  {
    "text": "with fewer rough edges around the library implementation also with respect to the Jason question this is actually a",
    "start": "2935510",
    "end": "2943490"
  },
  {
    "text": "fairly common use of proto like we even internally use proto for in memory structures because we know we can hand",
    "start": "2943490",
    "end": "2949790"
  },
  {
    "text": "it off to anything even a sidecar server and so the proto compiler the code",
    "start": "2949790",
    "end": "2956390"
  },
  {
    "text": "generation that it has generates objects that can be read from both perdu binary",
    "start": "2956390",
    "end": "2961430"
  },
  {
    "text": "and from Jason's okay so I think that we're basically done plus almost at a time so here's",
    "start": "2961430",
    "end": "2968290"
  },
  {
    "text": "what I'd like to do we're gonna kick off the vote right now I'm gonna go through the list of companies are voting rights",
    "start": "2968290",
    "end": "2973360"
  },
  {
    "text": "ask if they'd want to vote right now and you're basically what you're doing is voting YES for the PR no on the PR this",
    "start": "2973360",
    "end": "2980260"
  },
  {
    "text": "is the PR - they remove the bag it's to",
    "start": "2980260",
    "end": "2986860"
  },
  {
    "text": "77 right so a yes vote means you want to approve the PR a no vote you don't want",
    "start": "2986860",
    "end": "2992170"
  },
  {
    "text": "to approve the PR you can choose to abstain if you are either not on a call",
    "start": "2992170",
    "end": "2997320"
  },
  {
    "text": "obviously or you would choose to defer your vote until later just say so that's",
    "start": "2997320",
    "end": "3003630"
  },
  {
    "text": "fine we'll get people who cannot vote now or don't want to vote in how until next week's beginning and next week's",
    "start": "3003630",
    "end": "3009720"
  },
  {
    "text": "phone call you know noon eastern times when the vote ends but for people who want to go right now in this call I'd",
    "start": "3009720",
    "end": "3016170"
  },
  {
    "text": "like to go through the roll call okay so Adobe AIR oh here's anybody from um yes",
    "start": "3016170",
    "end": "3021870"
  },
  {
    "text": "I'm here Doug and I vote yes okay Alibaba someone from is Ryan on the call okay",
    "start": "3021870",
    "end": "3029610"
  },
  {
    "text": "Rachel for Google I don't know okay Huawei great yes I'm some so if this a",
    "start": "3029610",
    "end": "3042150"
  },
  {
    "text": "vote for the for what for remove well the mood that this is PR 277 which",
    "start": "3042150",
    "end": "3048000"
  },
  {
    "text": "removes the bag and then you're also saying that people could vote um asynchronously if they want to what's",
    "start": "3048000",
    "end": "3054780"
  },
  {
    "text": "happened yes if you if you want more time to think you have until noon eastern next Thursday to vote so you don't have all",
    "start": "3054780",
    "end": "3060330"
  },
  {
    "text": "right now if you don't want to get that you can defer until later okay I'd like to understand more about the concerns",
    "start": "3060330",
    "end": "3066450"
  },
  {
    "text": "and then you know so so this just removed that extension yeah right right",
    "start": "3066450",
    "end": "3073910"
  },
  {
    "text": "Cathy this is just 277 I suggest you don't vote now unless you you you'll get",
    "start": "3074610",
    "end": "3079740"
  },
  {
    "text": "to 77 and and and decide because I don't want I don't want you to feel rushed so I would suggest that you take time to",
    "start": "3079740",
    "end": "3085560"
  },
  {
    "text": "review the PR is that okay you have until noon next week to vote okay my VM",
    "start": "3085560",
    "end": "3093180"
  },
  {
    "text": "it's gonna vote yes Ken all right Chris from Jay s foundation ok Microsoft boots",
    "start": "3093180",
    "end": "3103740"
  },
  {
    "text": "yes Danner NAIC yo what the per the",
    "start": "3103740",
    "end": "3112200"
  },
  {
    "text": "later okay got it someone from gnats or",
    "start": "3112200",
    "end": "3117240"
  },
  {
    "text": "cinavia a little different Oh later okay Norse from Erin Lucas team abstain okay",
    "start": "3117240",
    "end": "3125390"
  },
  {
    "text": "Oracle we we will defer okay ASAP",
    "start": "3125390",
    "end": "3131250"
  },
  {
    "text": "yeah okay Collins are surface I don't there on the call they'll check anybody",
    "start": "3131250",
    "end": "3137700"
  },
  {
    "text": "from service okay I think Mark had to leave early but I'm just double check mark you so there okay hey Brad Oh",
    "start": "3137700",
    "end": "3145400"
  },
  {
    "text": "before I'd like to look a bit more into the process but I'm leaning toward the",
    "start": "3145400",
    "end": "3151920"
  },
  {
    "text": "ass but how do you perform at that's fine the first fine shivram okay so just to be clear we have",
    "start": "3151920",
    "end": "3161910"
  },
  {
    "text": "until or you guys have until noon Eastern next Thursday to vote please",
    "start": "3161910",
    "end": "3168570"
  },
  {
    "text": "what I'm gonna do is I'm going to take the voting that's here right now put it into a comment inside the PR through",
    "start": "3168570",
    "end": "3174060"
  },
  {
    "text": "these what is that five companies and then you guys can vote by putting an LG",
    "start": "3174060",
    "end": "3179580"
  },
  {
    "text": "TM or a not LG TM into the PR itself and then we will close it down next Thursday",
    "start": "3179580",
    "end": "3185910"
  },
  {
    "text": "at noon eastern sound okay to everybody yep how could you put this link into the",
    "start": "3185910",
    "end": "3192530"
  },
  {
    "text": "meat in minutes the you don't you don't need a link to this this isn't a minutes already knew the top is the attendance",
    "start": "3192530",
    "end": "3198590"
  },
  {
    "text": "tracker but what I'm going to do is I'm going to take the current voting and stick it into the issue itself or the PR",
    "start": "3198590",
    "end": "3203900"
  },
  {
    "text": "itself yes okay so with that we're",
    "start": "3203900",
    "end": "3209270"
  },
  {
    "text": "almost at a time obviously one all the time to hit another issue let me go ahead and through the roll call again we",
    "start": "3209270",
    "end": "3214520"
  },
  {
    "text": "actually quite a few people join larger-than-normal johnboll is straight you there and see if you're on if you're",
    "start": "3214520",
    "end": "3219530"
  },
  {
    "text": "typing think oh I'm you so John Paul Auster are you there John Mitchell okay",
    "start": "3219530",
    "end": "3229540"
  },
  {
    "text": "John Chiang yes thank you David Lyle yes I'm here and Jos Sherman show you",
    "start": "3229540",
    "end": "3239150"
  },
  {
    "text": "there okay Matt Rakowski here Thank You Klaus see you there you okay Kathy I",
    "start": "3239150",
    "end": "3247160"
  },
  {
    "text": "heard Erica erica des what about Rocky",
    "start": "3247160",
    "end": "3254090"
  },
  {
    "text": "I'm here next one I love that name by the way um Renato Renato are you there",
    "start": "3254090",
    "end": "3263080"
  },
  {
    "text": "hey what about yang Jung Lee thank you what about Luciano Luciano and there's a",
    "start": "3263080",
    "end": "3273650"
  },
  {
    "text": "someone I'll call with Chris Chris's iPhone I think is the thing Chris with Hawaii are you there",
    "start": "3273650",
    "end": "3280750"
  },
  {
    "text": "okay is there anybody on the call that I missed from the attendance oh I'm sorry Doug Doug meet Lori there you go thank",
    "start": "3280750",
    "end": "3288710"
  },
  {
    "text": "you Doug I got you okay anybody else I'm s in attendance okay I bet we have a whole two minutes",
    "start": "3288710",
    "end": "3296150"
  },
  {
    "text": "left is there any really quick topic people would like to bring up okay in that case",
    "start": "3296150",
    "end": "3302510"
  },
  {
    "text": "I have one thing Kathy just remind her you have a Pete you have an AI to open up PR just upload the workflow doc to",
    "start": "3302510",
    "end": "3307850"
  },
  {
    "text": "the server this working group repo oh yes I do that okay cool thank you just",
    "start": "3307850",
    "end": "3313820"
  },
  {
    "text": "wondering might do that all right in that case we're done oh you guys very much very exciting ball",
    "start": "3313820",
    "end": "3319100"
  },
  {
    "text": "thanks guys okay bye",
    "start": "3319100",
    "end": "3323200"
  }
]