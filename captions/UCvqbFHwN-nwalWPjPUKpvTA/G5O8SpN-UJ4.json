[
  {
    "text": "so I'm Jonathan TR from B Dan and today",
    "start": "199",
    "end": "3320"
  },
  {
    "text": "I'm going to talk about ketry so ketry",
    "start": "3320",
    "end": "6560"
  },
  {
    "text": "is a global traing system for kubernetes",
    "start": "6560",
    "end": "9719"
  },
  {
    "text": "control plane and so let me start with",
    "start": "9719",
    "end": "12759"
  },
  {
    "text": "what is a tracing",
    "start": "12759",
    "end": "15639"
  },
  {
    "text": "system so a tracing system is of course",
    "start": "17320",
    "end": "20039"
  },
  {
    "text": "a system of traces and each Trace is a",
    "start": "20039",
    "end": "23080"
  },
  {
    "text": "tree of spans so what is a span a span",
    "start": "23080",
    "end": "26840"
  },
  {
    "text": "is a scope of processing with events",
    "start": "26840",
    "end": "29160"
  },
  {
    "text": "attached to it so one definition is a",
    "start": "29160",
    "end": "32680"
  },
  {
    "text": "tracing system finds data to the life",
    "start": "32680",
    "end": "34920"
  },
  {
    "text": "cycle of a single transactional object",
    "start": "34920",
    "end": "38120"
  },
  {
    "text": "but the question is how do we Define a",
    "start": "38120",
    "end": "40079"
  },
  {
    "text": "transactional object for the",
    "start": "40079",
    "end": "42800"
  },
  {
    "text": "conventional LPC architecture you can",
    "start": "42800",
    "end": "45000"
  },
  {
    "text": "see from the screenshot in this corner",
    "start": "45000",
    "end": "48160"
  },
  {
    "text": "it is an example screenshot from yaka UI",
    "start": "48160",
    "end": "50840"
  },
  {
    "text": "which is an open source tracing uh",
    "start": "50840",
    "end": "53199"
  },
  {
    "text": "tracing visualization tool and we",
    "start": "53199",
    "end": "55719"
  },
  {
    "text": "usually determine the RPC systems span",
    "start": "55719",
    "end": "59120"
  },
  {
    "text": "hierarchy using the Scopes between the",
    "start": "59120",
    "end": "61879"
  },
  {
    "text": "synchronous RPC surface core so the",
    "start": "61879",
    "end": "64838"
  },
  {
    "text": "corer surface in RPC architecture is the",
    "start": "64839",
    "end": "67640"
  },
  {
    "text": "parent scope of the C",
    "start": "67640",
    "end": "70040"
  },
  {
    "text": "Surface but in terms of kubernetes what",
    "start": "70040",
    "end": "73159"
  },
  {
    "text": "would fit the equivalent",
    "start": "73159",
    "end": "75439"
  },
  {
    "text": "definition if we reuse the same",
    "start": "75439",
    "end": "77600"
  },
  {
    "text": "interation from RPC system a trace would",
    "start": "77600",
    "end": "80520"
  },
  {
    "text": "be one API serf",
    "start": "80520",
    "end": "82520"
  },
  {
    "text": "request but what is the significance of",
    "start": "82520",
    "end": "85079"
  },
  {
    "text": "such an API Sur",
    "start": "85079",
    "end": "88159"
  },
  {
    "text": "request turns out that an AP request",
    "start": "88400",
    "end": "91759"
  },
  {
    "text": "just edits an object in the etcd object",
    "start": "91759",
    "end": "94439"
  },
  {
    "text": "store of a kubernetes cluster and what",
    "start": "94439",
    "end": "97399"
  },
  {
    "text": "we you can't really tell a lot from a",
    "start": "97399",
    "end": "99799"
  },
  {
    "text": "single request if we look at a bigger",
    "start": "99799",
    "end": "102720"
  },
  {
    "text": "picture the kubernetes is actually an",
    "start": "102720",
    "end": "105360"
  },
  {
    "text": "asynchronous choreography and there is",
    "start": "105360",
    "end": "108040"
  },
  {
    "text": "no Central coordinator to tell the",
    "start": "108040",
    "end": "110479"
  },
  {
    "text": "controllers what to do and controllers",
    "start": "110479",
    "end": "113240"
  },
  {
    "text": "would watch for object changes and",
    "start": "113240",
    "end": "115280"
  },
  {
    "text": "perform reconciliations in response and",
    "start": "115280",
    "end": "118280"
  },
  {
    "text": "each reconciliation is an action that",
    "start": "118280",
    "end": "120960"
  },
  {
    "text": "moves the system from the current state",
    "start": "120960",
    "end": "123119"
  },
  {
    "text": "to the actual State uh to the design",
    "start": "123119",
    "end": "125439"
  },
  {
    "text": "State and in this B system each API Sur",
    "start": "125439",
    "end": "129039"
  },
  {
    "text": "request is just a consequence of a",
    "start": "129039",
    "end": "131400"
  },
  {
    "text": "Reconciliation which is a small step in",
    "start": "131400",
    "end": "133920"
  },
  {
    "text": "the back picture of the entire feedback",
    "start": "133920",
    "end": "137200"
  },
  {
    "text": "system for formed by the controllers",
    "start": "137200",
    "end": "140000"
  },
  {
    "text": "working",
    "start": "140000",
    "end": "142200"
  },
  {
    "text": "together so if this is a bit abstract as",
    "start": "142200",
    "end": "145720"
  },
  {
    "text": "talk with an analogy I would like to",
    "start": "145720",
    "end": "147959"
  },
  {
    "text": "visualize the K cluster as a part of",
    "start": "147959",
    "end": "150440"
  },
  {
    "text": "soup so initially this soup only has a",
    "start": "150440",
    "end": "153640"
  },
  {
    "text": "few",
    "start": "153640",
    "end": "154440"
  },
  {
    "text": "notes then when we create a replica set",
    "start": "154440",
    "end": "157319"
  },
  {
    "text": "in this soup the replica set controller",
    "start": "157319",
    "end": "159959"
  },
  {
    "text": "will observe this repli new replica",
    "start": "159959",
    "end": "163120"
  },
  {
    "text": "set then in response this replica set",
    "start": "163120",
    "end": "165920"
  },
  {
    "text": "controller will add some new pots to the",
    "start": "165920",
    "end": "168080"
  },
  {
    "text": "soup and this pot alone just just float",
    "start": "168080",
    "end": "171319"
  },
  {
    "text": "in the soup but they do not do anything",
    "start": "171319",
    "end": "173560"
  },
  {
    "text": "either but there is a Schuler the skul",
    "start": "173560",
    "end": "176760"
  },
  {
    "text": "is like a spatula that will stir the",
    "start": "176760",
    "end": "178640"
  },
  {
    "text": "parts and the noes together together",
    "start": "178640",
    "end": "180480"
  },
  {
    "text": "then the parts will spine to the node",
    "start": "180480",
    "end": "183159"
  },
  {
    "text": "and this binding is then observed by the",
    "start": "183159",
    "end": "185319"
  },
  {
    "text": "CET on the Node then the CET will start",
    "start": "185319",
    "end": "188120"
  },
  {
    "text": "running the",
    "start": "188120",
    "end": "189599"
  },
  {
    "text": "container then when an infection",
    "start": "189599",
    "end": "192200"
  },
  {
    "text": "controller removes the partt from the",
    "start": "192200",
    "end": "193760"
  },
  {
    "text": "soap then the CET in response stops",
    "start": "193760",
    "end": "196400"
  },
  {
    "text": "running the",
    "start": "196400",
    "end": "197560"
  },
  {
    "text": "container so what can we tell from this",
    "start": "197560",
    "end": "200599"
  },
  {
    "text": "story we can see that each component",
    "start": "200599",
    "end": "203159"
  },
  {
    "text": "only knows about the input and output",
    "start": "203159",
    "end": "205680"
  },
  {
    "text": "objects so we do not know why each",
    "start": "205680",
    "end": "208280"
  },
  {
    "text": "controller did something we only see the",
    "start": "208280",
    "end": "210640"
  },
  {
    "text": "consequence of the decisions which is",
    "start": "210640",
    "end": "212480"
  },
  {
    "text": "the object updates so for example a",
    "start": "212480",
    "end": "215720"
  },
  {
    "text": "replica set controller sees the number",
    "start": "215720",
    "end": "217799"
  },
  {
    "text": "of Nooks is less than number of designed",
    "start": "217799",
    "end": "219720"
  },
  {
    "text": "replicas so it creates a PO but is this",
    "start": "219720",
    "end": "223599"
  },
  {
    "text": "why is the number different is this",
    "start": "223599",
    "end": "225319"
  },
  {
    "text": "caused by uh deployment scaling or",
    "start": "225319",
    "end": "227360"
  },
  {
    "text": "caused by Port eviction or did both",
    "start": "227360",
    "end": "230000"
  },
  {
    "text": "events happen at the same time and the",
    "start": "230000",
    "end": "232319"
  },
  {
    "text": "rep set controller just happened to",
    "start": "232319",
    "end": "234079"
  },
  {
    "text": "reconcile them in the same process and",
    "start": "234079",
    "end": "237400"
  },
  {
    "text": "if both happen at the same time then",
    "start": "237400",
    "end": "239400"
  },
  {
    "text": "what would be the parents parents span",
    "start": "239400",
    "end": "242000"
  },
  {
    "text": "Above This",
    "start": "242000",
    "end": "243400"
  },
  {
    "text": "scope and there's no good answer to this",
    "start": "243400",
    "end": "246879"
  },
  {
    "text": "so T we cannot use this RPC approach to",
    "start": "246879",
    "end": "251040"
  },
  {
    "text": "explain the causal hierarchy of this",
    "start": "251040",
    "end": "254680"
  },
  {
    "text": "community system because there's no",
    "start": "254680",
    "end": "256639"
  },
  {
    "text": "direct Cal relationship between",
    "start": "256639",
    "end": "258199"
  },
  {
    "text": "different",
    "start": "258199",
    "end": "260720"
  },
  {
    "text": "objects so the ultimate problem is the",
    "start": "260799",
    "end": "264040"
  },
  {
    "text": "components have no knowledge about other",
    "start": "264040",
    "end": "266280"
  },
  {
    "text": "components they can only explain their",
    "start": "266280",
    "end": "268120"
  },
  {
    "text": "own actions if each component is its own",
    "start": "268120",
    "end": "271440"
  },
  {
    "text": "island of data and for example the",
    "start": "271440",
    "end": "274120"
  },
  {
    "text": "scheduler only knows that it scheduled a",
    "start": "274120",
    "end": "276440"
  },
  {
    "text": "part somewhere and the deployment",
    "start": "276440",
    "end": "278520"
  },
  {
    "text": "controller only knows that it updated a",
    "start": "278520",
    "end": "280560"
  },
  {
    "text": "replica",
    "start": "280560",
    "end": "282400"
  },
  {
    "text": "set so without a global tracing system",
    "start": "282400",
    "end": "285199"
  },
  {
    "text": "we have to visit each of these islands",
    "start": "285199",
    "end": "287800"
  },
  {
    "text": "and analyze the data component by",
    "start": "287800",
    "end": "289800"
  },
  {
    "text": "component which is a very libous",
    "start": "289800",
    "end": "292479"
  },
  {
    "text": "operation so how can we connect these",
    "start": "292479",
    "end": "294800"
  },
  {
    "text": "isolated pieces of information together",
    "start": "294800",
    "end": "296960"
  },
  {
    "text": "automatically",
    "start": "296960",
    "end": "299960"
  },
  {
    "text": "so let's look at what we know for sure",
    "start": "300440",
    "end": "303440"
  },
  {
    "text": "an operation on the same object it",
    "start": "303440",
    "end": "305560"
  },
  {
    "text": "should necessarily affect another",
    "start": "305560",
    "end": "307160"
  },
  {
    "text": "operation on the the second operation on",
    "start": "307160",
    "end": "309880"
  },
  {
    "text": "the same object because it affects the",
    "start": "309880",
    "end": "312120"
  },
  {
    "text": "input of the second reconciliation for",
    "start": "312120",
    "end": "314639"
  },
  {
    "text": "example both components operating on",
    "start": "314639",
    "end": "316880"
  },
  {
    "text": "this engine X pod they will affect each",
    "start": "316880",
    "end": "320120"
  },
  {
    "text": "other so they should be vied in the same",
    "start": "320120",
    "end": "323120"
  },
  {
    "text": "same trace and on the other hand",
    "start": "323120",
    "end": "327520"
  },
  {
    "text": "operations on different objects but if",
    "start": "327520",
    "end": "329800"
  },
  {
    "text": "they are related they should also they",
    "start": "329800",
    "end": "332080"
  },
  {
    "text": "will also affect each other for example",
    "start": "332080",
    "end": "334960"
  },
  {
    "text": "both the port and the deployment",
    "start": "334960",
    "end": "337840"
  },
  {
    "text": "controllers reconation both of them",
    "start": "337840",
    "end": "340479"
  },
  {
    "text": "affect uh related to the replica set Eng",
    "start": "340479",
    "end": "342960"
  },
  {
    "text": "gen next so they should be corated as",
    "start": "342960",
    "end": "345520"
  },
  {
    "text": "well so this gives us a key idea can we",
    "start": "345520",
    "end": "349600"
  },
  {
    "text": "connect the events based on the",
    "start": "349600",
    "end": "351240"
  },
  {
    "text": "relationship of the objects that the",
    "start": "351240",
    "end": "353160"
  },
  {
    "text": "event is",
    "start": "353160",
    "end": "355919"
  },
  {
    "text": "for so with the appreci appreciation",
    "start": "356160",
    "end": "359360"
  },
  {
    "text": "that we cannot and do not need to invert",
    "start": "359360",
    "end": "361960"
  },
  {
    "text": "the ca of relationship we can simplify",
    "start": "361960",
    "end": "364240"
  },
  {
    "text": "the problem a bit the user story is as a",
    "start": "364240",
    "end": "368039"
  },
  {
    "text": "users who just wants to debut a problem",
    "start": "368039",
    "end": "371240"
  },
  {
    "text": "I want to see a sufficiently small",
    "start": "371240",
    "end": "373840"
  },
  {
    "text": "sample of relevant and consecutive",
    "start": "373840",
    "end": "376280"
  },
  {
    "text": "events because events happening in a",
    "start": "376280",
    "end": "378919"
  },
  {
    "text": "short period are most likely relevant",
    "start": "378919",
    "end": "381840"
  },
  {
    "text": "One update will trigger another",
    "start": "381840",
    "end": "383440"
  },
  {
    "text": "controller to update for example the",
    "start": "383440",
    "end": "386280"
  },
  {
    "text": "creation of the part will immediately",
    "start": "386280",
    "end": "388400"
  },
  {
    "text": "lead to the po pot binding event because",
    "start": "388400",
    "end": "391919"
  },
  {
    "text": "the scheduler reconciles in response to",
    "start": "391919",
    "end": "394479"
  },
  {
    "text": "the PO creation event and another",
    "start": "394479",
    "end": "396759"
  },
  {
    "text": "example is after the image is put",
    "start": "396759",
    "end": "399599"
  },
  {
    "text": "successfully the CET will respond to",
    "start": "399599",
    "end": "402080"
  },
  {
    "text": "this updated image presence on the note",
    "start": "402080",
    "end": "404400"
  },
  {
    "text": "and it will start running the",
    "start": "404400",
    "end": "406840"
  },
  {
    "text": "container so this means events relevant",
    "start": "406840",
    "end": "409759"
  },
  {
    "text": "to the same object on the same timeline",
    "start": "409759",
    "end": "412280"
  },
  {
    "text": "provides a great deal of eight to",
    "start": "412280",
    "end": "414319"
  },
  {
    "text": "trouble",
    "start": "414319",
    "end": "416360"
  },
  {
    "text": "shooting now let's extend to multiple",
    "start": "416360",
    "end": "418720"
  },
  {
    "text": "objects changes in one object may also",
    "start": "418720",
    "end": "421599"
  },
  {
    "text": "result in objects on another object and",
    "start": "421599",
    "end": "424360"
  },
  {
    "text": "such objects also happen in a short",
    "start": "424360",
    "end": "426360"
  },
  {
    "text": "period of time but as the relationship",
    "start": "426360",
    "end": "428599"
  },
  {
    "text": "between two objects decays the CH of",
    "start": "428599",
    "end": "431199"
  },
  {
    "text": "them being relevant also",
    "start": "431199",
    "end": "433560"
  },
  {
    "text": "reduces so we can measure the relevance",
    "start": "433560",
    "end": "436400"
  },
  {
    "text": "of objects as an separate Dimension oral",
    "start": "436400",
    "end": "439319"
  },
  {
    "text": "to the horizontal timeline so in terms",
    "start": "439319",
    "end": "442160"
  },
  {
    "text": "of tracing this means we have the",
    "start": "442160",
    "end": "444240"
  },
  {
    "text": "horizontal axis which is the time and",
    "start": "444240",
    "end": "446840"
  },
  {
    "text": "the vertical axis which is the spans",
    "start": "446840",
    "end": "449639"
  },
  {
    "text": "corresponding to the relevance between",
    "start": "449639",
    "end": "451720"
  },
  {
    "text": "objects where the span hierarchy implies",
    "start": "451720",
    "end": "455240"
  },
  {
    "text": "how closely the objects are related so",
    "start": "455240",
    "end": "458039"
  },
  {
    "text": "in this example trace the deployments",
    "start": "458039",
    "end": "460479"
  },
  {
    "text": "are most closely related to the replica",
    "start": "460479",
    "end": "463199"
  },
  {
    "text": "sets so we can see that they are",
    "start": "463199",
    "end": "465080"
  },
  {
    "text": "displayed hor vertically together and",
    "start": "465080",
    "end": "467680"
  },
  {
    "text": "the parts are also of the same part are",
    "start": "467680",
    "end": "469680"
  },
  {
    "text": "also displayed next to the replica set",
    "start": "469680",
    "end": "473240"
  },
  {
    "text": "and in this red square uh red rectangle",
    "start": "473240",
    "end": "476919"
  },
  {
    "text": "the first event in the deployment is a",
    "start": "476919",
    "end": "480360"
  },
  {
    "text": "scaling event and it triggers the",
    "start": "480360",
    "end": "482520"
  },
  {
    "text": "scaling of the RC set which then caus",
    "start": "482520",
    "end": "485560"
  },
  {
    "text": "the creation of these two parts and we",
    "start": "485560",
    "end": "488199"
  },
  {
    "text": "can tell that there are related events",
    "start": "488199",
    "end": "490319"
  },
  {
    "text": "based on the distance between this this",
    "start": "490319",
    "end": "493319"
  },
  {
    "text": "events on the",
    "start": "493319",
    "end": "494639"
  },
  {
    "text": "trace so this determines the structure",
    "start": "494639",
    "end": "497280"
  },
  {
    "text": "of visualization in",
    "start": "497280",
    "end": "500319"
  },
  {
    "text": "ketry and now we will look at how ketry",
    "start": "501319",
    "end": "504639"
  },
  {
    "text": "FS up the traces with",
    "start": "504639",
    "end": "507319"
  },
  {
    "text": "data so the first question to consider",
    "start": "507319",
    "end": "509879"
  },
  {
    "text": "is what events do we actually want to",
    "start": "509879",
    "end": "512479"
  },
  {
    "text": "see first we have the native kubernetes",
    "start": "512479",
    "end": "515399"
  },
  {
    "text": "events which are high level astract",
    "start": "515399",
    "end": "517959"
  },
  {
    "text": "summarized by the components for the",
    "start": "517959",
    "end": "520279"
  },
  {
    "text": "users and they are Define they are",
    "start": "520279",
    "end": "522599"
  },
  {
    "text": "designed to be user friendly which is",
    "start": "522599",
    "end": "524680"
  },
  {
    "text": "why they show up in the C control",
    "start": "524680",
    "end": "526440"
  },
  {
    "text": "describ command and looking at these",
    "start": "526440",
    "end": "529160"
  },
  {
    "text": "commands can give us an impression of",
    "start": "529160",
    "end": "531320"
  },
  {
    "text": "the entire flow of events but this are",
    "start": "531320",
    "end": "534040"
  },
  {
    "text": "just very high level information when",
    "start": "534040",
    "end": "536360"
  },
  {
    "text": "something goes wrong or when the",
    "start": "536360",
    "end": "538399"
  },
  {
    "text": "component is still under development and",
    "start": "538399",
    "end": "540640"
  },
  {
    "text": "events are not comprehensive enough yet",
    "start": "540640",
    "end": "543160"
  },
  {
    "text": "and we want to get more information that",
    "start": "543160",
    "end": "545800"
  },
  {
    "text": "can be collected automatically without",
    "start": "545800",
    "end": "548000"
  },
  {
    "text": "the many work of requesting the specific",
    "start": "548000",
    "end": "551560"
  },
  {
    "text": "information from the component",
    "start": "551560",
    "end": "553959"
  },
  {
    "text": "development so this leads to the second",
    "start": "553959",
    "end": "556160"
  },
  {
    "text": "level which is the object",
    "start": "556160",
    "end": "558279"
  },
  {
    "text": "changes the object changes are the",
    "start": "558279",
    "end": "560480"
  },
  {
    "text": "interface of communication between",
    "start": "560480",
    "end": "562440"
  },
  {
    "text": "components so if something we identify",
    "start": "562440",
    "end": "565399"
  },
  {
    "text": "something is wrong let's say in",
    "start": "565399",
    "end": "566959"
  },
  {
    "text": "component B something is wrong then B",
    "start": "566959",
    "end": "569959"
  },
  {
    "text": "must have read some object in the in the",
    "start": "569959",
    "end": "572800"
  },
  {
    "text": "API server where this object is",
    "start": "572800",
    "end": "575560"
  },
  {
    "text": "different and this difference is caused",
    "start": "575560",
    "end": "577920"
  },
  {
    "text": "by another component a which rise to",
    "start": "577920",
    "end": "580760"
  },
  {
    "text": "this object so if we just look at which",
    "start": "580760",
    "end": "583680"
  },
  {
    "text": "objects are different and we identify",
    "start": "583680",
    "end": "585959"
  },
  {
    "text": "which object has is writing to this",
    "start": "585959",
    "end": "588920"
  },
  {
    "text": "object uh which controlls are writing to",
    "start": "588920",
    "end": "591399"
  },
  {
    "text": "this object then we can know that",
    "start": "591399",
    "end": "593440"
  },
  {
    "text": "component a is the real source of the",
    "start": "593440",
    "end": "595839"
  },
  {
    "text": "problem that caused the effective",
    "start": "595839",
    "end": "598600"
  },
  {
    "text": "symptom reot in component B so we can",
    "start": "598600",
    "end": "601640"
  },
  {
    "text": "use this object changes to locate the",
    "start": "601640",
    "end": "604200"
  },
  {
    "text": "exact problematic",
    "start": "604200",
    "end": "605959"
  },
  {
    "text": "component and once we have identified",
    "start": "605959",
    "end": "608240"
  },
  {
    "text": "the problematic components we would",
    "start": "608240",
    "end": "610440"
  },
  {
    "text": "further drill down to the component",
    "start": "610440",
    "end": "611839"
  },
  {
    "text": "losss these are the low level details of",
    "start": "611839",
    "end": "614399"
  },
  {
    "text": "logic within the component and with a",
    "start": "614399",
    "end": "616760"
  },
  {
    "text": "very high amount of noise and as I just",
    "start": "616760",
    "end": "619200"
  },
  {
    "text": "mentioned component loocks component",
    "start": "619200",
    "end": "621680"
  },
  {
    "text": "locks do not know about the behavior of",
    "start": "621680",
    "end": "624000"
  },
  {
    "text": "other components so these locks only",
    "start": "624000",
    "end": "626600"
  },
  {
    "text": "make sense after we know the input state",
    "start": "626600",
    "end": "629320"
  },
  {
    "text": "from the object",
    "start": "629320",
    "end": "632079"
  },
  {
    "text": "changes so how do we collect object",
    "start": "632279",
    "end": "634959"
  },
  {
    "text": "changes in ketry this data come from two",
    "start": "634959",
    "end": "638240"
  },
  {
    "text": "sources which are the audit lock and the",
    "start": "638240",
    "end": "640880"
  },
  {
    "text": "object list watch informance the audit",
    "start": "640880",
    "end": "644040"
  },
  {
    "text": "locks provide the metadata about a",
    "start": "644040",
    "end": "646480"
  },
  {
    "text": "request such as what object C got",
    "start": "646480",
    "end": "649079"
  },
  {
    "text": "changed when did the change succeed and",
    "start": "649079",
    "end": "651839"
  },
  {
    "text": "who performed the change and these are",
    "start": "651839",
    "end": "654040"
  },
  {
    "text": "all very important information that are",
    "start": "654040",
    "end": "656240"
  },
  {
    "text": "V to identifying the ca of the problem",
    "start": "656240",
    "end": "660079"
  },
  {
    "text": "but it doesn't provide the most",
    "start": "660079",
    "end": "661440"
  },
  {
    "text": "important information which is what did",
    "start": "661440",
    "end": "663720"
  },
  {
    "text": "the effect what did the request actually",
    "start": "663720",
    "end": "666160"
  },
  {
    "text": "change what are the fields that got",
    "start": "666160",
    "end": "669360"
  },
  {
    "text": "modified and this is why we need a",
    "start": "669360",
    "end": "671680"
  },
  {
    "text": "second separate latch",
    "start": "671680",
    "end": "674399"
  },
  {
    "text": "event uh listwatch client to tell us",
    "start": "674399",
    "end": "677560"
  },
  {
    "text": "what data the request actually",
    "start": "677560",
    "end": "679600"
  },
  {
    "text": "change so which is consumed by the ketry",
    "start": "679600",
    "end": "684720"
  },
  {
    "text": "controller so ketry Dees two components",
    "start": "684720",
    "end": "688040"
  },
  {
    "text": "the controller component",
    "start": "688040",
    "end": "689800"
  },
  {
    "text": "received the watch events from API",
    "start": "689800",
    "end": "691760"
  },
  {
    "text": "server to compare the old and new",
    "start": "691760",
    "end": "694240"
  },
  {
    "text": "objects and store the difference as",
    "start": "694240",
    "end": "696519"
  },
  {
    "text": "inside the uh KV",
    "start": "696519",
    "end": "699240"
  },
  {
    "text": "store and this cat store using the",
    "start": "699240",
    "end": "702920"
  },
  {
    "text": "object and resource version as the key",
    "start": "702920",
    "end": "705639"
  },
  {
    "text": "and then the ketric consumer will",
    "start": "705639",
    "end": "707800"
  },
  {
    "text": "receive the audit event from the API",
    "start": "707800",
    "end": "709639"
  },
  {
    "text": "server then it will associate each audit",
    "start": "709639",
    "end": "712920"
  },
  {
    "text": "event with the corresponding diff from",
    "start": "712920",
    "end": "715519"
  },
  {
    "text": "the cetric controller and format all the",
    "start": "715519",
    "end": "718120"
  },
  {
    "text": "metadata as a span and then just send",
    "start": "718120",
    "end": "720240"
  },
  {
    "text": "the trace to the send it to the trace",
    "start": "720240",
    "end": "723880"
  },
  {
    "text": "collector so this is for the object",
    "start": "723880",
    "end": "726320"
  },
  {
    "text": "changes and for the component locks on",
    "start": "726320",
    "end": "729040"
  },
  {
    "text": "the other hand it has a much higher",
    "start": "729040",
    "end": "731200"
  },
  {
    "text": "volume of data so the required capacity",
    "start": "731200",
    "end": "734040"
  },
  {
    "text": "of each component is much greater than",
    "start": "734040",
    "end": "735959"
  },
  {
    "text": "the core control plane and it is mostly",
    "start": "735959",
    "end": "739120"
  },
  {
    "text": "unbounded so we prefer isolated capacity",
    "start": "739120",
    "end": "742320"
  },
  {
    "text": "management and isolated query time so",
    "start": "742320",
    "end": "744720"
  },
  {
    "text": "that's the users do not have to pay the",
    "start": "744720",
    "end": "746720"
  },
  {
    "text": "query time for data they do not want so",
    "start": "746720",
    "end": "749720"
  },
  {
    "text": "to achieve this we will store the",
    "start": "749720",
    "end": "751680"
  },
  {
    "text": "component locks as separate traces which",
    "start": "751680",
    "end": "754360"
  },
  {
    "text": "are aggregated with the kilometry object",
    "start": "754360",
    "end": "757240"
  },
  {
    "text": "trace on demand when the user when we",
    "start": "757240",
    "end": "759760"
  },
  {
    "text": "display it to the",
    "start": "759760",
    "end": "761079"
  },
  {
    "text": "user to be specific we have two types of",
    "start": "761079",
    "end": "764560"
  },
  {
    "text": "components one type is the central",
    "start": "764560",
    "end": "766600"
  },
  {
    "text": "controller Central controller traces",
    "start": "766600",
    "end": "769040"
  },
  {
    "text": "they are also stored in a centralized",
    "start": "769040",
    "end": "770839"
  },
  {
    "text": "storage but they have their own traces",
    "start": "770839",
    "end": "773480"
  },
  {
    "text": "independent of the CET traces they",
    "start": "773480",
    "end": "776079"
  },
  {
    "text": "retain the original format as defined by",
    "start": "776079",
    "end": "778560"
  },
  {
    "text": "the component authors so we do not need",
    "start": "778560",
    "end": "780839"
  },
  {
    "text": "to modify the this components to adapt",
    "start": "780839",
    "end": "783760"
  },
  {
    "text": "to the ketry format instead the ketry",
    "start": "783760",
    "end": "787240"
  },
  {
    "text": "user which is a downstream of the",
    "start": "787240",
    "end": "789880"
  },
  {
    "text": "centralized controller as well as ketry",
    "start": "789880",
    "end": "792839"
  },
  {
    "text": "they will maintain the configuration",
    "start": "792839",
    "end": "794680"
  },
  {
    "text": "that interpress the structural taging",
    "start": "794680",
    "end": "796600"
  },
  {
    "text": "format of the component into the",
    "start": "796600",
    "end": "798399"
  },
  {
    "text": "identifier Keys such as the object name",
    "start": "798399",
    "end": "801720"
  },
  {
    "text": "or resource version or the audit ID so",
    "start": "801720",
    "end": "804720"
  },
  {
    "text": "when we display the trace the gometry",
    "start": "804720",
    "end": "806760"
  },
  {
    "text": "front end can just join this traces into",
    "start": "806760",
    "end": "809839"
  },
  {
    "text": "the object Trace as required by the",
    "start": "809839",
    "end": "812519"
  },
  {
    "text": "user meanwhile no traces have even",
    "start": "812519",
    "end": "815720"
  },
  {
    "text": "higher volum than centralized",
    "start": "815720",
    "end": "817360"
  },
  {
    "text": "controllers most of the note level",
    "start": "817360",
    "end": "819800"
  },
  {
    "text": "tracing data are actually the detailed",
    "start": "819800",
    "end": "822279"
  },
  {
    "text": "phases of a pot's life cycle and the pot",
    "start": "822279",
    "end": "825320"
  },
  {
    "text": "is usually already the most common",
    "start": "825320",
    "end": "827519"
  },
  {
    "text": "resource in the K cluster so these two",
    "start": "827519",
    "end": "830320"
  },
  {
    "text": "multiplied together would generate a",
    "start": "830320",
    "end": "832279"
  },
  {
    "text": "very huge amount of data so to reduce",
    "start": "832279",
    "end": "834880"
  },
  {
    "text": "the bandwidth cost as well as the cost",
    "start": "834880",
    "end": "837600"
  },
  {
    "text": "of indexing the tra in the centralized",
    "start": "837600",
    "end": "840639"
  },
  {
    "text": "storage we will instead store this",
    "start": "840639",
    "end": "842880"
  },
  {
    "text": "traces in the local in the local file",
    "start": "842880",
    "end": "845759"
  },
  {
    "text": "system so we create a b DB y Trace",
    "start": "845759",
    "end": "850240"
  },
  {
    "text": "storage on each note and maintain the",
    "start": "850240",
    "end": "853000"
  },
  {
    "text": "note will maintain its own cleanup",
    "start": "853000",
    "end": "855120"
  },
  {
    "text": "cycle then when we display the trace of",
    "start": "855120",
    "end": "857639"
  },
  {
    "text": "a note of a p or a part then since we",
    "start": "857639",
    "end": "861360"
  },
  {
    "text": "already know the note IP address the",
    "start": "861360",
    "end": "863680"
  },
  {
    "text": "ketry front end can simply call the",
    "start": "863680",
    "end": "865720"
  },
  {
    "text": "trace agent on the note to retrieve the",
    "start": "865720",
    "end": "868639"
  },
  {
    "text": "trace",
    "start": "868639",
    "end": "871040"
  },
  {
    "text": "directly so now we have solved the",
    "start": "871160",
    "end": "873320"
  },
  {
    "text": "problem of collecting the data from for",
    "start": "873320",
    "end": "875480"
  },
  {
    "text": "the data uh in the",
    "start": "875480",
    "end": "878360"
  },
  {
    "text": "spans but there is one more piece of the",
    "start": "878360",
    "end": "881560"
  },
  {
    "text": "P view which is the hierarchy of the",
    "start": "881560",
    "end": "883880"
  },
  {
    "text": "spans or in other words inferring the",
    "start": "883880",
    "end": "886440"
  },
  {
    "text": "relation between objects and in fact in",
    "start": "886440",
    "end": "889839"
  },
  {
    "text": "kubernetes that is an idiomatic",
    "start": "889839",
    "end": "891800"
  },
  {
    "text": "indication for such relations which is",
    "start": "891800",
    "end": "894160"
  },
  {
    "text": "the only reference field in the metadata",
    "start": "894160",
    "end": "896480"
  },
  {
    "text": "of each",
    "start": "896480",
    "end": "897800"
  },
  {
    "text": "object this owner reference implies that",
    "start": "897800",
    "end": "900320"
  },
  {
    "text": "the owned object is Created from and",
    "start": "900320",
    "end": "902680"
  },
  {
    "text": "controlled by the referen owner and this",
    "start": "902680",
    "end": "905839"
  },
  {
    "text": "automatically suggests that the owner",
    "start": "905839",
    "end": "908040"
  },
  {
    "text": "object should be the span of the owned",
    "start": "908040",
    "end": "910920"
  },
  {
    "text": "object and there are also other",
    "start": "910920",
    "end": "913279"
  },
  {
    "text": "application specific rules depending on",
    "start": "913279",
    "end": "915279"
  },
  {
    "text": "the specific object semantics as well",
    "start": "915279",
    "end": "917720"
  },
  {
    "text": "for example PS are related to the notes",
    "start": "917720",
    "end": "921480"
  },
  {
    "text": "they are scheduled on and the secet they",
    "start": "921480",
    "end": "924160"
  },
  {
    "text": "have to mount another example for ham",
    "start": "924160",
    "end": "927279"
  },
  {
    "text": "trust is that object man by the same",
    "start": "927279",
    "end": "929560"
  },
  {
    "text": "hand releas should be related to each",
    "start": "929560",
    "end": "932120"
  },
  {
    "text": "other and in multicluster scenarios the",
    "start": "932120",
    "end": "935360"
  },
  {
    "text": "objects might also link to another",
    "start": "935360",
    "end": "937279"
  },
  {
    "text": "cluster that controls them for example",
    "start": "937279",
    "end": "939560"
  },
  {
    "text": "in the case of C Federation or C admal",
    "start": "939560",
    "end": "942480"
  },
  {
    "text": "that would be the Federated object so",
    "start": "942480",
    "end": "945480"
  },
  {
    "text": "these are all ad hoc features that we",
    "start": "945480",
    "end": "947519"
  },
  {
    "text": "cannot enumerate exhaustively because",
    "start": "947519",
    "end": "949920"
  },
  {
    "text": "this depend on the how other controllers",
    "start": "949920",
    "end": "952839"
  },
  {
    "text": "interpret this",
    "start": "952839",
    "end": "954519"
  },
  {
    "text": "objects currently ketry supports linking",
    "start": "954519",
    "end": "957519"
  },
  {
    "text": "these objects by reference ing the",
    "start": "957519",
    "end": "959519"
  },
  {
    "text": "Custer kind and name of the related",
    "start": "959519",
    "end": "962199"
  },
  {
    "text": "object in a custom annotation written by",
    "start": "962199",
    "end": "964360"
  },
  {
    "text": "the user and in the future we will also",
    "start": "964360",
    "end": "966959"
  },
  {
    "text": "support expression link uh an expression",
    "start": "966959",
    "end": "969920"
  },
  {
    "text": "based linking rule API so that ketry can",
    "start": "969920",
    "end": "973319"
  },
  {
    "text": "inert this connections based on the",
    "start": "973319",
    "end": "975759"
  },
  {
    "text": "domain Knowledge from the",
    "start": "975759",
    "end": "979000"
  },
  {
    "text": "user and similar to the component locks",
    "start": "979480",
    "end": "982720"
  },
  {
    "text": "the bread and the depth of the linking",
    "start": "982720",
    "end": "984800"
  },
  {
    "text": "relation is also ounded for example when",
    "start": "984800",
    "end": "987759"
  },
  {
    "text": "we query for the when we cre for a port",
    "start": "987759",
    "end": "991440"
  },
  {
    "text": "we will link to the replic set it",
    "start": "991440",
    "end": "993920"
  },
  {
    "text": "belongs to and as well as the 500 other",
    "start": "993920",
    "end": "997720"
  },
  {
    "text": "p in the same replica set as well as the",
    "start": "997720",
    "end": "1000079"
  },
  {
    "text": "HT notes that this PS were scheduled to",
    "start": "1000079",
    "end": "1002759"
  },
  {
    "text": "and the other 2,000 PS that are",
    "start": "1002759",
    "end": "1005079"
  },
  {
    "text": "scheduled on this notes so of course",
    "start": "1005079",
    "end": "1007079"
  },
  {
    "text": "this is not what the user would expect",
    "start": "1007079",
    "end": "1008759"
  },
  {
    "text": "the quy to",
    "start": "1008759",
    "end": "1010160"
  },
  {
    "text": "contain so as a result we have to split",
    "start": "1010160",
    "end": "1012959"
  },
  {
    "text": "each object to its own separate Trace as",
    "start": "1012959",
    "end": "1016279"
  },
  {
    "text": "well furthermore to avoid a Trace from",
    "start": "1016279",
    "end": "1019240"
  },
  {
    "text": "growing indefinitely we create a new",
    "start": "1019240",
    "end": "1021720"
  },
  {
    "text": "Trace every 30 minutes to allow the",
    "start": "1021720",
    "end": "1023880"
  },
  {
    "text": "storage to compact the old",
    "start": "1023880",
    "end": "1027160"
  },
  {
    "text": "Trace so when the user queries for a",
    "start": "1027160",
    "end": "1030319"
  },
  {
    "text": "part we just follow the object links",
    "start": "1030319",
    "end": "1033120"
  },
  {
    "text": "that the user opts in to follow like",
    "start": "1033120",
    "end": "1035640"
  },
  {
    "text": "like in these blue lines and then we",
    "start": "1035640",
    "end": "1037918"
  },
  {
    "text": "will also for each object we will select",
    "start": "1037919",
    "end": "1040438"
  },
  {
    "text": "the half hour traces that are",
    "start": "1040439",
    "end": "1043480"
  },
  {
    "text": "intersecting with the create time range",
    "start": "1043480",
    "end": "1045678"
  },
  {
    "text": "by the user and these traces will all be",
    "start": "1045679",
    "end": "1048319"
  },
  {
    "text": "merged in the front end to a single",
    "start": "1048319",
    "end": "1050480"
  },
  {
    "text": "trace then we can finally give the user",
    "start": "1050480",
    "end": "1052720"
  },
  {
    "text": "an impression of the entire choreography",
    "start": "1052720",
    "end": "1055160"
  },
  {
    "text": "of an in a single",
    "start": "1055160",
    "end": "1057480"
  },
  {
    "text": "page so this architecture allows us to",
    "start": "1057480",
    "end": "1060200"
  },
  {
    "text": "support the large scale of clusters in",
    "start": "1060200",
    "end": "1062400"
  },
  {
    "text": "bans currently we are supporting around",
    "start": "1062400",
    "end": "1065080"
  },
  {
    "text": "10 billion daily events from more than",
    "start": "1065080",
    "end": "1067559"
  },
  {
    "text": "600 clusters in a single region and we",
    "start": "1067559",
    "end": "1070160"
  },
  {
    "text": "have achieved a P99 endtoend latency of",
    "start": "1070160",
    "end": "1073440"
  },
  {
    "text": "around 30 SEC uh 13 seconds and in each",
    "start": "1073440",
    "end": "1077039"
  },
  {
    "text": "cluster we deploy two instan of the",
    "start": "1077039",
    "end": "1079679"
  },
  {
    "text": "ketry controller to listwatch objects",
    "start": "1079679",
    "end": "1081840"
  },
  {
    "text": "together this redundancy mechanism will",
    "start": "1081840",
    "end": "1084520"
  },
  {
    "text": "prevent data loss when the active",
    "start": "1084520",
    "end": "1086919"
  },
  {
    "text": "instance R object changes to the KV cach",
    "start": "1086919",
    "end": "1090480"
  },
  {
    "text": "and when it goes down for a few seconds",
    "start": "1090480",
    "end": "1093240"
  },
  {
    "text": "the lead it will lose the leader list",
    "start": "1093240",
    "end": "1094840"
  },
  {
    "text": "and the other instance will become",
    "start": "1094840",
    "end": "1096400"
  },
  {
    "text": "active and it will flush the perfect",
    "start": "1096400",
    "end": "1099600"
  },
  {
    "text": "events in the past few seconds into the",
    "start": "1099600",
    "end": "1101720"
  },
  {
    "text": "KV cache as for the audit loocks they",
    "start": "1101720",
    "end": "1104799"
  },
  {
    "text": "are collected through a global audit",
    "start": "1104799",
    "end": "1106520"
  },
  {
    "text": "repb hook and sent through a c message",
    "start": "1106520",
    "end": "1109320"
  },
  {
    "text": "kill then the cetric consumer will it",
    "start": "1109320",
    "end": "1112880"
  },
  {
    "text": "has 200 partitions it will merge the",
    "start": "1112880",
    "end": "1115559"
  },
  {
    "text": "audit locks with the object changes into",
    "start": "1115559",
    "end": "1117880"
  },
  {
    "text": "the spans written into the trace",
    "start": "1117880",
    "end": "1121480"
  },
  {
    "text": "storage and then as we just saw the",
    "start": "1121480",
    "end": "1123640"
  },
  {
    "text": "kilometry front end which is the uh yaka",
    "start": "1123640",
    "end": "1126600"
  },
  {
    "text": "storage plugin it will merch the this",
    "start": "1126600",
    "end": "1130200"
  },
  {
    "text": "traces from the a consumer with other",
    "start": "1130200",
    "end": "1133080"
  },
  {
    "text": "controllers and maybe the data from the",
    "start": "1133080",
    "end": "1135720"
  },
  {
    "text": "node agents into a single trace and",
    "start": "1135720",
    "end": "1137840"
  },
  {
    "text": "presents them to the users through the",
    "start": "1137840",
    "end": "1139760"
  },
  {
    "text": "Yaga UI so this is the architecture of",
    "start": "1139760",
    "end": "1144760"
  },
  {
    "text": "ketry and now let's look at a few",
    "start": "1144880",
    "end": "1147520"
  },
  {
    "text": "apprise scenarios for",
    "start": "1147520",
    "end": "1150679"
  },
  {
    "text": "ketry so in our first case the user",
    "start": "1150960",
    "end": "1153799"
  },
  {
    "text": "created a deployment with only one",
    "start": "1153799",
    "end": "1155600"
  },
  {
    "text": "replica but the monitoring system shows",
    "start": "1155600",
    "end": "1158559"
  },
  {
    "text": "that they we have actually created many",
    "start": "1158559",
    "end": "1160679"
  },
  {
    "text": "instances of the same deployment so",
    "start": "1160679",
    "end": "1162960"
  },
  {
    "text": "let's check the climic trace of the",
    "start": "1162960",
    "end": "1165159"
  },
  {
    "text": "deployment and each tree of parts to see",
    "start": "1165159",
    "end": "1167840"
  },
  {
    "text": "what happened",
    "start": "1167840",
    "end": "1170520"
  },
  {
    "text": "first of all we can see that the user",
    "start": "1170520",
    "end": "1172240"
  },
  {
    "text": "attempted to stop this crazy po creation",
    "start": "1172240",
    "end": "1175400"
  },
  {
    "text": "at 23 minutes and this attempt was",
    "start": "1175400",
    "end": "1178679"
  },
  {
    "text": "successful there are no more P Creations",
    "start": "1178679",
    "end": "1181080"
  },
  {
    "text": "after 23 minutes but before that there",
    "start": "1181080",
    "end": "1184360"
  },
  {
    "text": "was a PO creation every 5",
    "start": "1184360",
    "end": "1186600"
  },
  {
    "text": "minutes as for the created Parts the CP",
    "start": "1186600",
    "end": "1190480"
  },
  {
    "text": "controller manager did not attempt to do",
    "start": "1190480",
    "end": "1193039"
  },
  {
    "text": "anything with them after the initial",
    "start": "1193039",
    "end": "1194880"
  },
  {
    "text": "creation it did not even try to delete",
    "start": "1194880",
    "end": "1197760"
  },
  {
    "text": "or update them even not even failed",
    "start": "1197760",
    "end": "1201960"
  },
  {
    "text": "attempts however the replica controller",
    "start": "1201960",
    "end": "1204320"
  },
  {
    "text": "could create the PO successfully because",
    "start": "1204320",
    "end": "1206919"
  },
  {
    "text": "the successful create event implies that",
    "start": "1206919",
    "end": "1209280"
  },
  {
    "text": "the create request was",
    "start": "1209280",
    "end": "1211559"
  },
  {
    "text": "successfully executed and acknowledged",
    "start": "1211559",
    "end": "1214039"
  },
  {
    "text": "by the controller so why does it keep",
    "start": "1214039",
    "end": "1216400"
  },
  {
    "text": "creating more",
    "start": "1216400",
    "end": "1217559"
  },
  {
    "text": "replicas from the from the audit L we",
    "start": "1217559",
    "end": "1220240"
  },
  {
    "text": "can see that the replica count in the",
    "start": "1220240",
    "end": "1222120"
  },
  {
    "text": "replica status never got updated not",
    "start": "1222120",
    "end": "1225000"
  },
  {
    "text": "even during the offset generation status",
    "start": "1225000",
    "end": "1227760"
  },
  {
    "text": "update at uh tr3 minutes so this rules",
    "start": "1227760",
    "end": "1231120"
  },
  {
    "text": "out transis of replica set controller",
    "start": "1231120",
    "end": "1233559"
  },
  {
    "text": "having an error during the status",
    "start": "1233559",
    "end": "1235360"
  },
  {
    "text": "aggregation but it implies a simply",
    "start": "1235360",
    "end": "1237760"
  },
  {
    "text": "incorrect calculation of the replica",
    "start": "1237760",
    "end": "1240320"
  },
  {
    "text": "status and by Design we know that this",
    "start": "1240320",
    "end": "1242919"
  },
  {
    "text": "aggregation is based on the shed part",
    "start": "1242919",
    "end": "1245039"
  },
  {
    "text": "informal cach in the C controller",
    "start": "1245039",
    "end": "1247240"
  },
  {
    "text": "manager so this implies a possible",
    "start": "1247240",
    "end": "1250640"
  },
  {
    "text": "inconsistency between the synchronous",
    "start": "1250640",
    "end": "1252799"
  },
  {
    "text": "create request and asynchronous watch",
    "start": "1252799",
    "end": "1255240"
  },
  {
    "text": "streams in the C controll",
    "start": "1255240",
    "end": "1257400"
  },
  {
    "text": "manager and another hint was the 5",
    "start": "1257400",
    "end": "1260080"
  },
  {
    "text": "minutes Sy we just saw so what is",
    "start": "1260080",
    "end": "1262919"
  },
  {
    "text": "special about this 5 minute",
    "start": "1262919",
    "end": "1266440"
  },
  {
    "text": "period if we do a quick dat grab from",
    "start": "1266440",
    "end": "1269240"
  },
  {
    "text": "the commed source code we will see find",
    "start": "1269240",
    "end": "1271559"
  },
  {
    "text": "this expectations time out constant it",
    "start": "1271559",
    "end": "1274320"
  },
  {
    "text": "is the time to resend a replica set",
    "start": "1274320",
    "end": "1276640"
  },
  {
    "text": "after the controller expects and updates",
    "start": "1276640",
    "end": "1278960"
  },
  {
    "text": "but did not receive it so we could nail",
    "start": "1278960",
    "end": "1282080"
  },
  {
    "text": "the issue it is caused by the inform",
    "start": "1282080",
    "end": "1284480"
  },
  {
    "text": "part inform getting out of s and this",
    "start": "1284480",
    "end": "1287120"
  },
  {
    "text": "promps us to check the audit locks for",
    "start": "1287120",
    "end": "1289360"
  },
  {
    "text": "the cube controller manager list watch",
    "start": "1289360",
    "end": "1291279"
  },
  {
    "text": "request and eventually we discover that",
    "start": "1291279",
    "end": "1294120"
  },
  {
    "text": "there is a list time problem due to an",
    "start": "1294120",
    "end": "1296360"
  },
  {
    "text": "oversiz cluster so the effect is simple",
    "start": "1296360",
    "end": "1298960"
  },
  {
    "text": "we simply increase the API service",
    "start": "1298960",
    "end": "1301039"
  },
  {
    "text": "request time out limit this is the first",
    "start": "1301039",
    "end": "1305320"
  },
  {
    "text": "case as for the second case we have an",
    "start": "1305320",
    "end": "1309559"
  },
  {
    "text": "so uh some background is that we have an",
    "start": "1309559",
    "end": "1311720"
  },
  {
    "text": "internal component called cluster Matrix",
    "start": "1311720",
    "end": "1314480"
  },
  {
    "text": "it is a Le electric controller so if the",
    "start": "1314480",
    "end": "1317840"
  },
  {
    "text": "active in instance is down another",
    "start": "1317840",
    "end": "1319600"
  },
  {
    "text": "instance will take over its work so the",
    "start": "1319600",
    "end": "1322080"
  },
  {
    "text": "responsibility of this component is to",
    "start": "1322080",
    "end": "1324080"
  },
  {
    "text": "collect cluster data and write every",
    "start": "1324080",
    "end": "1326559"
  },
  {
    "text": "minute into a custom resource object",
    "start": "1326559",
    "end": "1329000"
  },
  {
    "text": "called cluster",
    "start": "1329000",
    "end": "1330360"
  },
  {
    "text": "resource and in this case we are",
    "start": "1330360",
    "end": "1332880"
  },
  {
    "text": "investigating an alarm revealed that the",
    "start": "1332880",
    "end": "1335679"
  },
  {
    "text": "last update time stamp of cluster",
    "start": "1335679",
    "end": "1337440"
  },
  {
    "text": "resource is lagging",
    "start": "1337440",
    "end": "1339559"
  },
  {
    "text": "behind so the first step of cost is to",
    "start": "1339559",
    "end": "1342600"
  },
  {
    "text": "verify that this really happened by",
    "start": "1342600",
    "end": "1344640"
  },
  {
    "text": "tracking the cluster resource object on",
    "start": "1344640",
    "end": "1347080"
  },
  {
    "text": "ketry we found out that there was a",
    "start": "1347080",
    "end": "1349760"
  },
  {
    "text": "pause for around 50 minutes indeed it",
    "start": "1349760",
    "end": "1352880"
  },
  {
    "text": "was a Le leader elected component so why",
    "start": "1352880",
    "end": "1356120"
  },
  {
    "text": "didn't the second instance take over",
    "start": "1356120",
    "end": "1358279"
  },
  {
    "text": "then we can check the leader list Trace",
    "start": "1358279",
    "end": "1361240"
  },
  {
    "text": "in the the the trace below and we can",
    "start": "1361240",
    "end": "1363640"
  },
  {
    "text": "see all this Dan vertical lines which",
    "start": "1363640",
    "end": "1366320"
  },
  {
    "text": "indicate that there is a active list",
    "start": "1366320",
    "end": "1369120"
  },
  {
    "text": "renewal every several seconds so the",
    "start": "1369120",
    "end": "1372360"
  },
  {
    "text": "list renewal never stopped so the leader",
    "start": "1372360",
    "end": "1375279"
  },
  {
    "text": "instance we thought to be down is",
    "start": "1375279",
    "end": "1377039"
  },
  {
    "text": "actually still asserting to the T that",
    "start": "1377039",
    "end": "1379200"
  },
  {
    "text": "it is the leader but it is not doing any",
    "start": "1379200",
    "end": "1382760"
  },
  {
    "text": "work so if we look into the further",
    "start": "1382760",
    "end": "1385240"
  },
  {
    "text": "details there was a burst of updates",
    "start": "1385240",
    "end": "1388279"
  },
  {
    "text": "request at 44 minutes right after the",
    "start": "1388279",
    "end": "1390960"
  },
  {
    "text": "period without",
    "start": "1390960",
    "end": "1392240"
  },
  {
    "text": "updates so it seems that all updates got",
    "start": "1392240",
    "end": "1395360"
  },
  {
    "text": "blocked synchronously until 44 minutes",
    "start": "1395360",
    "end": "1398200"
  },
  {
    "text": "and this indicates a possible stop the",
    "start": "1398200",
    "end": "1400400"
  },
  {
    "text": "road but in the custom Matrix controller",
    "start": "1400400",
    "end": "1404400"
  },
  {
    "text": "and if we cross check the competent loss",
    "start": "1404400",
    "end": "1406480"
  },
  {
    "text": "of this controller that was also a bur",
    "start": "1406480",
    "end": "1408559"
  },
  {
    "text": "of lcks after the silence period So",
    "start": "1408559",
    "end": "1412279"
  },
  {
    "text": "eventually all these symptoms hinted us",
    "start": "1412279",
    "end": "1414480"
  },
  {
    "text": "to discover um system level problem that",
    "start": "1414480",
    "end": "1418400"
  },
  {
    "text": "caused a malfunctional dis IO so all the",
    "start": "1418400",
    "end": "1422000"
  },
  {
    "text": "klock cost will handang the cortin",
    "start": "1422000",
    "end": "1425360"
  },
  {
    "text": "because the dis was malfunctional and",
    "start": "1425360",
    "end": "1429400"
  },
  {
    "text": "klock is a blocking operation so all the",
    "start": "1429400",
    "end": "1433240"
  },
  {
    "text": "all the goroutines get blocked and the",
    "start": "1433240",
    "end": "1435480"
  },
  {
    "text": "Le lead election gtin doesn't write any",
    "start": "1435480",
    "end": "1438240"
  },
  {
    "text": "law lost so turns out the leader list",
    "start": "1438240",
    "end": "1440400"
  },
  {
    "text": "did not get",
    "start": "1440400",
    "end": "1442600"
  },
  {
    "text": "lost so these are two cases of trouble",
    "start": "1442600",
    "end": "1445960"
  },
  {
    "text": "shooting through ketry but in addition",
    "start": "1445960",
    "end": "1448640"
  },
  {
    "text": "to troubl shooting there are also other",
    "start": "1448640",
    "end": "1452320"
  },
  {
    "text": "scenarios in which we can use ketry for",
    "start": "1452320",
    "end": "1454919"
  },
  {
    "text": "example in e2e test we can run chetry",
    "start": "1454919",
    "end": "1458600"
  },
  {
    "text": "with the test cluster used in e2e test",
    "start": "1458600",
    "end": "1461279"
  },
  {
    "text": "to record the events during the test run",
    "start": "1461279",
    "end": "1464080"
  },
  {
    "text": "so if a flecky test appears we just need",
    "start": "1464080",
    "end": "1466559"
  },
  {
    "text": "to compare the events in the successful",
    "start": "1466559",
    "end": "1469159"
  },
  {
    "text": "and the fied runs to identify which Step",
    "start": "1469159",
    "end": "1472039"
  },
  {
    "text": "went",
    "start": "1472039",
    "end": "1472960"
  },
  {
    "text": "wrong in that case we no longer need to",
    "start": "1472960",
    "end": "1475799"
  },
  {
    "text": "retain the successful or filed test",
    "start": "1475799",
    "end": "1477760"
  },
  {
    "text": "environments for debuging you just need",
    "start": "1477760",
    "end": "1479600"
  },
  {
    "text": "to compare the two",
    "start": "1479600",
    "end": "1481279"
  },
  {
    "text": "traces and running ketry in the CI also",
    "start": "1481279",
    "end": "1484360"
  },
  {
    "text": "produces a side product which is the",
    "start": "1484360",
    "end": "1486880"
  },
  {
    "text": "trace of an example life cycle in your",
    "start": "1486880",
    "end": "1489159"
  },
  {
    "text": "controller so you can use this example",
    "start": "1489159",
    "end": "1493039"
  },
  {
    "text": "Trace in your documentation to visualize",
    "start": "1493039",
    "end": "1495240"
  },
  {
    "text": "the component",
    "start": "1495240",
    "end": "1496440"
  },
  {
    "text": "architecture and in fact ketry GitHub",
    "start": "1496440",
    "end": "1500760"
  },
  {
    "text": "repository already has a CI workflow",
    "start": "1500760",
    "end": "1503440"
  },
  {
    "text": "that does exactly this and the result is",
    "start": "1503440",
    "end": "1505919"
  },
  {
    "text": "hosted on the GitHub pages so you can",
    "start": "1505919",
    "end": "1508559"
  },
  {
    "text": "scan the K on the right to view this uh",
    "start": "1508559",
    "end": "1511720"
  },
  {
    "text": "this example Trace through the yaka UI",
    "start": "1511720",
    "end": "1514799"
  },
  {
    "text": "this is an example of a normal",
    "start": "1514799",
    "end": "1516279"
  },
  {
    "text": "deployment creation scaling and roll out",
    "start": "1516279",
    "end": "1519080"
  },
  {
    "text": "and upgrade roll out and delion so this",
    "start": "1519080",
    "end": "1522080"
  },
  {
    "text": "uses a set up from our quick start using",
    "start": "1522080",
    "end": "1524840"
  },
  {
    "text": "a kind cluster and deploying ketry with",
    "start": "1524840",
    "end": "1527720"
  },
  {
    "text": "stalker so if you have a Linux machine",
    "start": "1527720",
    "end": "1530039"
  },
  {
    "text": "in hand and you have this installed you",
    "start": "1530039",
    "end": "1532039"
  },
  {
    "text": "can try the quick start tutorial on the",
    "start": "1532039",
    "end": "1534640"
  },
  {
    "text": "our GitHub repository yourself now and",
    "start": "1534640",
    "end": "1536960"
  },
  {
    "text": "it has a 5 minute tutorial to set up",
    "start": "1536960",
    "end": "1539279"
  },
  {
    "text": "your local cluster to play",
    "start": "1539279",
    "end": "1541320"
  },
  {
    "text": "with as for the production usage we also",
    "start": "1541320",
    "end": "1543880"
  },
  {
    "text": "provide a h Char for in cluster",
    "start": "1543880",
    "end": "1545799"
  },
  {
    "text": "deployment although some manual",
    "start": "1545799",
    "end": "1547760"
  },
  {
    "text": "configuration would be required to set",
    "start": "1547760",
    "end": "1549559"
  },
  {
    "text": "up the audit web",
    "start": "1549559",
    "end": "1552360"
  },
  {
    "text": "hook as for the future directions there",
    "start": "1552799",
    "end": "1555760"
  },
  {
    "text": "are some features that we are planning",
    "start": "1555760",
    "end": "1557360"
  },
  {
    "text": "to support in C",
    "start": "1557360",
    "end": "1560240"
  },
  {
    "text": "uh the first feature is the scriptable",
    "start": "1560440",
    "end": "1562440"
  },
  {
    "text": "linking rules which I have just",
    "start": "1562440",
    "end": "1563760"
  },
  {
    "text": "mentioned about the part",
    "start": "1563760",
    "end": "1566200"
  },
  {
    "text": "in the custom object relation",
    "start": "1566200",
    "end": "1569679"
  },
  {
    "text": "semantics and we are also planning to",
    "start": "1569679",
    "end": "1571720"
  },
  {
    "text": "open source a note level component that",
    "start": "1571720",
    "end": "1573720"
  },
  {
    "text": "uses ebpf to trace the actions below the",
    "start": "1573720",
    "end": "1576840"
  },
  {
    "text": "CET level and report them to the",
    "start": "1576840",
    "end": "1580000"
  },
  {
    "text": "essential uh to join them with the ketry",
    "start": "1580000",
    "end": "1583320"
  },
  {
    "text": "output and in the future we can also",
    "start": "1583320",
    "end": "1585559"
  },
  {
    "text": "explore the possibility to Analyze This",
    "start": "1585559",
    "end": "1588279"
  },
  {
    "text": "Trace output using automatic diagnosis",
    "start": "1588279",
    "end": "1591039"
  },
  {
    "text": "because the main feature of ketry is",
    "start": "1591039",
    "end": "1594559"
  },
  {
    "text": "that it extracts the relevant data in a",
    "start": "1594559",
    "end": "1597159"
  },
  {
    "text": "large pool of observability data into a",
    "start": "1597159",
    "end": "1600520"
  },
  {
    "text": "smaller Trace so this is a perfect input",
    "start": "1600520",
    "end": "1603799"
  },
  {
    "text": "to fit into some automatic analysis",
    "start": "1603799",
    "end": "1607080"
  },
  {
    "text": "tools such as some L",
    "start": "1607080",
    "end": "1611000"
  },
  {
    "text": "models okay so this is uh that's all for",
    "start": "1612000",
    "end": "1615279"
  },
  {
    "text": "my presentation today so any any",
    "start": "1615279",
    "end": "1620520"
  },
  {
    "text": "questions Al you can also feel free to",
    "start": "1620760",
    "end": "1623039"
  },
  {
    "text": "ask in English or",
    "start": "1623039",
    "end": "1626039"
  },
  {
    "text": "Chinese uh could we come a bit closer",
    "start": "1633640",
    "end": "1637480"
  },
  {
    "text": "because there's no microphone in this",
    "start": "1637480",
    "end": "1640679"
  },
  {
    "text": "room I think I think we have no",
    "start": "1640679",
    "end": "1642600"
  },
  {
    "text": "microphone you might have to come closer",
    "start": "1642600",
    "end": "1645360"
  },
  {
    "text": "okay so in terms of the performance of",
    "start": "1645360",
    "end": "1647640"
  },
  {
    "text": "ketry because we adopt a distributed",
    "start": "1647640",
    "end": "1651880"
  },
  {
    "text": "architecture so each cluster deploys its",
    "start": "1651880",
    "end": "1655440"
  },
  {
    "text": "own instance of ketry controllers with",
    "start": "1655440",
    "end": "1658320"
  },
  {
    "text": "uh with the rency system I just",
    "start": "1658320",
    "end": "1660360"
  },
  {
    "text": "mentioned and in the so the stress for",
    "start": "1660360",
    "end": "1665799"
  },
  {
    "text": "each cluster is restricted to the",
    "start": "1665799",
    "end": "1668640"
  },
  {
    "text": "controller itself and as for the global",
    "start": "1668640",
    "end": "1670960"
  },
  {
    "text": "control plane the re the aage consumer",
    "start": "1670960",
    "end": "1675480"
  },
  {
    "text": "is a also a partitioned message kill",
    "start": "1675480",
    "end": "1678399"
  },
  {
    "text": "consumer so we can also scale out by",
    "start": "1678399",
    "end": "1681840"
  },
  {
    "text": "scaling of the number of partitions and",
    "start": "1681840",
    "end": "1685159"
  },
  {
    "text": "um so the so all of these are",
    "start": "1685159",
    "end": "1688399"
  },
  {
    "text": "distributed and can be horizontally",
    "start": "1688399",
    "end": "1690840"
  },
  {
    "text": "scalable",
    "start": "1690840",
    "end": "1693840"
  },
  {
    "text": "[Music]",
    "start": "1730710",
    "end": "1732399"
  },
  {
    "text": "un ready",
    "start": "1732399",
    "end": "1733919"
  },
  {
    "text": "theine okay so if you have other",
    "start": "1733919",
    "end": "1737039"
  },
  {
    "text": "questions if you don't want to ask us",
    "start": "1737039",
    "end": "1739360"
  },
  {
    "text": "here you can also find us on the KB uh",
    "start": "1739360",
    "end": "1743080"
  },
  {
    "text": "display Bo in the S12 in the B room 3 to",
    "start": "1743080",
    "end": "1748360"
  },
  {
    "text": "four so thank you everyone",
    "start": "1748360",
    "end": "1752880"
  }
]