[
  {
    "text": "hi introduction is 50 inspired my name's Emiliana Birnbaum I work at a company",
    "start": "780",
    "end": "6690"
  },
  {
    "text": "site Hill and we are maintained errs for aspire and spiffy I also work inside",
    "start": "6690",
    "end": "14570"
  },
  {
    "text": "right so what we're gonna do is just go over an introduction to what spiffy",
    "start": "14570",
    "end": "21510"
  },
  {
    "text": "inspire is and just just show it to everyone out of curiosity how many",
    "start": "21510",
    "end": "26939"
  },
  {
    "text": "people here have heard of spiffy inspire or okay sweet so here we go so we have a",
    "start": "26939",
    "end": "35550"
  },
  {
    "text": "bunch of talks at @q con so there's obviously this one tomorrow",
    "start": "35550",
    "end": "41070"
  },
  {
    "text": "evan gilman and shawn Crampton are doing a zero trust service mesh with calico so",
    "start": "41070",
    "end": "47190"
  },
  {
    "text": "that's happening at 11:05 and then we're also doing a deep dive into spiffy at",
    "start": "47190",
    "end": "54140"
  },
  {
    "text": "1450 tomorrow and what we're gonna do there is really get into spire running",
    "start": "54140",
    "end": "60000"
  },
  {
    "text": "on kubernetes so one of the main things that we've been doing since the last coop con is really fix updating spire to",
    "start": "60000",
    "end": "68760"
  },
  {
    "text": "be able to run cleanly on on kubernetes and we're gonna do a whole demo and talk about that then we have a secure",
    "start": "68760",
    "end": "76259"
  },
  {
    "text": "multi-cloud with cross clusters and that's being presented by Evan just here",
    "start": "76259",
    "end": "81390"
  },
  {
    "text": "right give up to seven and then to wrap it up we have a talk with uber security",
    "start": "81390",
    "end": "87330"
  },
  {
    "text": "and how to build our workload identic platform and that's going to be Tyler Julian and Dan Feldman so there's a lot",
    "start": "87330",
    "end": "95250"
  },
  {
    "text": "of stuff that we're presenting so what's spiffy so what really what",
    "start": "95250",
    "end": "102960"
  },
  {
    "text": "we're doing is we're it's in a universal identity for workloads so we don't only solve authentication but with policy we",
    "start": "102960",
    "end": "111570"
  },
  {
    "text": "could solve all the problems and the way we really do this is by",
    "start": "111570",
    "end": "118080"
  },
  {
    "text": "defining a standard provable way to provide an identity to a workload and",
    "start": "118080",
    "end": "123720"
  },
  {
    "text": "also a standard way of obtaining that workload and validating it and spiffy is",
    "start": "123720",
    "end": "132840"
  },
  {
    "text": "really it's made up of four different specs and we'll talk about each of those",
    "start": "132840",
    "end": "138680"
  },
  {
    "text": "and the first you know we what we do is the spiffy ID which is how we identify",
    "start": "138680",
    "end": "143910"
  },
  {
    "text": "the workload there's actually document that we served that to that workload and",
    "start": "143910",
    "end": "150330"
  },
  {
    "text": "we expose this through a workload API to deliver that document and then the last",
    "start": "150330",
    "end": "156120"
  },
  {
    "text": "thing that we've been working on is a Federation API so this is what a spiffy",
    "start": "156120",
    "end": "162480"
  },
  {
    "text": "ID looks like it's really modeled as URI it's just basically just a structured",
    "start": "162480",
    "end": "168120"
  },
  {
    "text": "string we don't really prescribe how you should you should what data you should put in there and if we break it down the",
    "start": "168120",
    "end": "176220"
  },
  {
    "text": "trust domain is the domain for that for that URI which really describes the the root of",
    "start": "176220",
    "end": "182010"
  },
  {
    "text": "trust for where those workloads live everything after that the file path is",
    "start": "182010",
    "end": "187110"
  },
  {
    "text": "really the workload name and you could really think of this as a primary key for a workload or username for workload",
    "start": "187110",
    "end": "195319"
  },
  {
    "text": "now the next thing is that verify will document the yes fade currently we",
    "start": "195770",
    "end": "201840"
  },
  {
    "text": "support two different types of best fades we have an x.509 s vid and a jot s",
    "start": "201840",
    "end": "206880"
  },
  {
    "text": "fade and we started with x.509 certificates as the underlying doctype",
    "start": "206880",
    "end": "212670"
  },
  {
    "text": "and it made the most sense because it was widely deployed and understood and",
    "start": "212670",
    "end": "219590"
  },
  {
    "text": "and what we really did and in the spec is described what goes in that certificate in the beginning what we",
    "start": "220700",
    "end": "227820"
  },
  {
    "text": "really were doing was describing and figuring out what actual expo nines extensions we'd want to use where we",
    "start": "227820",
    "end": "235410"
  },
  {
    "text": "would actually store the this the spiffy ID in the document which we put in the San URI and then we also described how",
    "start": "235410",
    "end": "244110"
  },
  {
    "text": "to validate that cert and the spiffy ID within it the other the other document that we",
    "start": "244110",
    "end": "251190"
  },
  {
    "text": "just recently published is a ja des vid which what we what to spectrally says it",
    "start": "251190",
    "end": "256230"
  },
  {
    "text": "constraints what the algo does and the Josie headers that the the ja s fit",
    "start": "256230",
    "end": "263700"
  },
  {
    "text": "supports and what would the JA des but does it just supports signing of the job",
    "start": "263700",
    "end": "269900"
  },
  {
    "text": "so that's the I'd any document the third part of the of what we're doing of what",
    "start": "269900",
    "end": "274950"
  },
  {
    "text": "we support is the workload API so that the workload API is a standardized local",
    "start": "274950",
    "end": "280470"
  },
  {
    "text": "interface where you a workload could contact that API and the API will return",
    "start": "280470",
    "end": "286440"
  },
  {
    "text": "the identity to that caller it really answers a question Who am I so when the workload comes up it talks that API and",
    "start": "286440",
    "end": "293460"
  },
  {
    "text": "the after it goes through a process that we call attestation and I'll talk more about that in spire we return the",
    "start": "293460",
    "end": "299580"
  },
  {
    "text": "identity to that to that workload and what we really do is that we ensure that we have a platform agnostic way of",
    "start": "299580",
    "end": "306690"
  },
  {
    "text": "providing this data so what we because",
    "start": "306690",
    "end": "314100"
  },
  {
    "text": "it's agnostic and we this would this also works on kubernetes or TCP or other",
    "start": "314100",
    "end": "319620"
  },
  {
    "text": "platforms that you have or bare-metal and then the next thing what we've",
    "start": "319620",
    "end": "325140"
  },
  {
    "text": "really been working on recently is Federation and we've just wrapped up all the spec work in Federation and we're",
    "start": "325140",
    "end": "331979"
  },
  {
    "text": "actually in the process of implementing that inside of spire so with with",
    "start": "331979",
    "end": "337140"
  },
  {
    "text": "Federation what we have is the ability to have two different spire clusters",
    "start": "337140",
    "end": "344330"
  },
  {
    "text": "talk to each other with which spiffy compliant IDPs and the idea is that once",
    "start": "344330",
    "end": "353039"
  },
  {
    "text": "we have the the API and the spec that we could have other other fabrics that",
    "start": "353039",
    "end": "359669"
  },
  {
    "text": "support that that that's back and we could fight with those those other different systems so if if it's not",
    "start": "359669",
    "end": "367169"
  },
  {
    "text": "spiffy but something else that implements the Federation API we'd be able to peer with that and have the",
    "start": "367169",
    "end": "372630"
  },
  {
    "text": "workloads in the two different environments talk to each other and even if they don't support the workload API",
    "start": "372630",
    "end": "378120"
  },
  {
    "text": "we'd be able to to communicate with it if they deliver a certificate a different way such as sto",
    "start": "378120",
    "end": "385630"
  },
  {
    "text": "with the way it delivers shirts and the other thing is that the Federation API",
    "start": "385630",
    "end": "393710"
  },
  {
    "text": "is compliant with JW KS spec so what we're also doing is that it's we could",
    "start": "393710",
    "end": "399860"
  },
  {
    "text": "support Oh IDC Federation where we could fire a twith Oh a DC compliant system so",
    "start": "399860",
    "end": "406610"
  },
  {
    "text": "that that really makes up what what spiffy is those those four different documents now the next thing we have is",
    "start": "406610",
    "end": "414470"
  },
  {
    "text": "spire spire would actually what spire is is the code base that we've written with",
    "start": "414470",
    "end": "419870"
  },
  {
    "text": "with the community to support the spec to supply and implement the workload API",
    "start": "419870",
    "end": "427010"
  },
  {
    "text": "and the Federation API so you know first",
    "start": "427010",
    "end": "432590"
  },
  {
    "text": "I want to kind of it's it's kind of crazy as we've kind of started the",
    "start": "432590",
    "end": "437660"
  },
  {
    "text": "community that there was a recent meetup in Japan led by a team at Z lab and",
    "start": "437660",
    "end": "444020"
  },
  {
    "text": "Tomoya who saw me and they had a great presentation great slides and I actually",
    "start": "444020",
    "end": "450669"
  },
  {
    "text": "they inspired me and I copied a little bit of them but I just want to make sure I give him credit because it was really",
    "start": "450669",
    "end": "457130"
  },
  {
    "text": "really good stuff out there but what we're showing here is that you know as",
    "start": "457130",
    "end": "462200"
  },
  {
    "text": "you have two different trust domains and different applications in those domains you could assign spiffy IDs to the",
    "start": "462200",
    "end": "469669"
  },
  {
    "text": "different items the different workloads in that system and then you know we",
    "start": "469669",
    "end": "474680"
  },
  {
    "text": "allow them to talk to each other right that's basically the crux of Federation and and what we supply with which spire",
    "start": "474680",
    "end": "481810"
  },
  {
    "text": "so looking at spire it's really made up of two different elements there's a spire server and inspire agent that you",
    "start": "481810",
    "end": "488150"
  },
  {
    "text": "have to install in each node that you want to to to run inside of your of your",
    "start": "488150",
    "end": "494960"
  },
  {
    "text": "fleet and what the spire server does it supplies this identity mapping node attestation",
    "start": "494960",
    "end": "500090"
  },
  {
    "text": "which is how do we identify the node that's in your in your fleet it actually",
    "start": "500090",
    "end": "505550"
  },
  {
    "text": "also signs your s feeds and issues them and it also supports the Federation API",
    "start": "505550",
    "end": "512050"
  },
  {
    "text": "the agent will expose this workload API and it also does the workload",
    "start": "512050",
    "end": "518419"
  },
  {
    "text": "attestation which is how it figures out what the who the workload is so we'll",
    "start": "518419",
    "end": "524449"
  },
  {
    "text": "just do a walk-through and the first thing is I'd like to thank Evan Gilman",
    "start": "524449",
    "end": "532790"
  },
  {
    "text": "and his artisinal arrows again inspired by his slides and explaining how this",
    "start": "532790",
    "end": "538790"
  },
  {
    "text": "this stuff works but what we're doing is that as you soon as you start up your",
    "start": "538790",
    "end": "543920"
  },
  {
    "text": "spire server we could generate a self-signed certificate which will be the root of trust for all the workloads",
    "start": "543920",
    "end": "551120"
  },
  {
    "text": "running in your in your fleet and it will be used to sign all the all the s",
    "start": "551120",
    "end": "558620"
  },
  {
    "text": "vids for the workloads that are managed by that one server we also have the",
    "start": "558620",
    "end": "563689"
  },
  {
    "text": "ability to use an upstream PGI system so we have a plug-in model where you could",
    "start": "563689",
    "end": "571370"
  },
  {
    "text": "actually plug it into another another piece another PKI system that you have so you could chain these together if you",
    "start": "571370",
    "end": "577339"
  },
  {
    "text": "don't want to just use the self-signed cert inside of the inside of the plain",
    "start": "577339",
    "end": "582829"
  },
  {
    "text": "vanilla spire server and then the last thing we do is that we expose this registration API this is this is how you",
    "start": "582829",
    "end": "590240"
  },
  {
    "text": "define what a workload looks like so what we do is we have properties for a",
    "start": "590240",
    "end": "597500"
  },
  {
    "text": "workload that we call selectors and those selectors will dictate how we how",
    "start": "597500",
    "end": "603829"
  },
  {
    "text": "we identify that that workload running in your fleet so as an example you know",
    "start": "603829",
    "end": "610699"
  },
  {
    "text": "here we have an example registration where we were basically saying that",
    "start": "610699",
    "end": "619000"
  },
  {
    "text": "whoever's running in the main space payments and with the service account staging and it has this docker image",
    "start": "619000",
    "end": "625550"
  },
  {
    "text": "we're going to identify that as the payment web workload and deliver that",
    "start": "625550",
    "end": "630970"
  },
  {
    "text": "that estimate to that workload in that that's managed through that registration",
    "start": "630970",
    "end": "636920"
  },
  {
    "text": "API so we'll just do look at a spire server coming up so we're running this",
    "start": "636920",
    "end": "644089"
  },
  {
    "text": "on a plant and as as soon as we come up the that",
    "start": "644089",
    "end": "650240"
  },
  {
    "text": "server could attest any any agent running on the on its that in its",
    "start": "650240",
    "end": "656269"
  },
  {
    "text": "environment so when the the agent comes up the the the note comes up the agent",
    "start": "656269",
    "end": "663649"
  },
  {
    "text": "wakes up and it's whole thing is proving it is who it is right it's it's doing",
    "start": "663649",
    "end": "669290"
  },
  {
    "text": "the no data station pieces which means that we're giving that node in its",
    "start": "669290",
    "end": "674450"
  },
  {
    "text": "initial identity which we call the the parent ID so the the the attest are on",
    "start": "674450",
    "end": "682339"
  },
  {
    "text": "that on that spiffy on that on that node will gather proof right it'll gather",
    "start": "682339",
    "end": "689149"
  },
  {
    "text": "whatever whatever data it needs to send back to the spire server to prove it is who it says it is in AWS this would be",
    "start": "689149",
    "end": "697640"
  },
  {
    "text": "an iid and in in kubernetes we just we've just created a sat and piece at a",
    "start": "697640",
    "end": "706310"
  },
  {
    "text": "tester to use the account token at testers to prove who that workload is",
    "start": "706310",
    "end": "711940"
  },
  {
    "text": "but this whole system is pluggable where we could have we could use at x.509",
    "start": "711940",
    "end": "719480"
  },
  {
    "text": "certificates on a box or or tokens and you could generate beforehand to to",
    "start": "719480",
    "end": "725089"
  },
  {
    "text": "attest that that node is who it is so once that happens the spire agent will",
    "start": "725089",
    "end": "731420"
  },
  {
    "text": "present that that proof back to the spire server and then the spire server",
    "start": "731420",
    "end": "738079"
  },
  {
    "text": "will we'll go back and talk to the platform with whatever API it exposes",
    "start": "738079",
    "end": "744110"
  },
  {
    "text": "and then again we do this through plugins so we have a node attest to plug-in that we could expand and use",
    "start": "744110",
    "end": "751610"
  },
  {
    "text": "different ones for different platforms so for for kubernetes we could use piece",
    "start": "751610",
    "end": "756980"
  },
  {
    "text": "at or sat a testers to verify that the the node is who it says it is and then",
    "start": "756980",
    "end": "763339"
  },
  {
    "text": "after that process is done we will deliver the s feedback to that agent for",
    "start": "763339",
    "end": "769040"
  },
  {
    "text": "distribution so on but that so that that agent now has that that's the identity",
    "start": "769040",
    "end": "775790"
  },
  {
    "text": "of the of the node so now going forward when it goes back and talks to spire server it's going to use that",
    "start": "775790",
    "end": "781910"
  },
  {
    "text": "certificate to salish M TLS between the spire age and inspire service well we've",
    "start": "781910",
    "end": "788119"
  },
  {
    "text": "really done here is we've identified the the node that the agents running on so",
    "start": "788119",
    "end": "793489"
  },
  {
    "text": "the next part is how do we identify the workload that is running on that system so the way a spire does this is that the",
    "start": "793489",
    "end": "802489"
  },
  {
    "text": "spire agents running on that box and we are we're exposing this local socket",
    "start": "802489",
    "end": "809509"
  },
  {
    "text": "that exposes the API so the interesting thing here is that this is an",
    "start": "809509",
    "end": "815239"
  },
  {
    "text": "unauthenticated API call right so any the work look could come up and talk to",
    "start": "815239",
    "end": "821779"
  },
  {
    "text": "the socket we don't have to inject a credential or a secret for that",
    "start": "821779",
    "end": "827089"
  },
  {
    "text": "communication what we rely on is the process that we call attestation",
    "start": "827089",
    "end": "832309"
  },
  {
    "text": "where we could introspect that workload see who it is see if it matches the pattern that we've registered beforehand",
    "start": "832309",
    "end": "839269"
  },
  {
    "text": "and then identify the workload as as the as the identified as the set of",
    "start": "839269",
    "end": "844669"
  },
  {
    "text": "selectors that we previously registered so when the workload comes up it'll",
    "start": "844669",
    "end": "851329"
  },
  {
    "text": "it'll try to talk to that to that API socket and again the way we do our",
    "start": "851329",
    "end": "856879"
  },
  {
    "text": "testers their pluggable so we could run this we could attest through a Linux kernel or we have a kubernetes tester",
    "start": "856879",
    "end": "864979"
  },
  {
    "text": "and you could write different ones we could look at docker docker images or",
    "start": "864979",
    "end": "871839"
  },
  {
    "text": "Linux primitives that we could also use to attest that piece of code and in",
    "start": "871839",
    "end": "877039"
  },
  {
    "text": "order to validate the attestation so once the work look comes up he talks to",
    "start": "877039",
    "end": "882889"
  },
  {
    "text": "the he talks to the API socket and we basically kick off attestation so what",
    "start": "882889",
    "end": "889519"
  },
  {
    "text": "that means is the spire agent figures out what process tried to talk to it and then it'll find the process and then run",
    "start": "889519",
    "end": "896989"
  },
  {
    "text": "through the set of selectors against that workload and then it'll gather all",
    "start": "896989",
    "end": "902959"
  },
  {
    "text": "that information and then see if it's something that was registered beforehand",
    "start": "902959",
    "end": "909040"
  },
  {
    "text": "so that's that's just that process and if it does match we we deliver a",
    "start": "909040",
    "end": "915430"
  },
  {
    "text": "certificate the s vid - to that workload so now it could use that and we've",
    "start": "915430",
    "end": "920810"
  },
  {
    "text": "identified that that unique piece of code ran through those so that that's uh",
    "start": "920810",
    "end": "930170"
  },
  {
    "text": "you know an explanation of what spire is and spiffy so what I'm gonna do now is I'm gonna hand it off to to Scott to",
    "start": "930170",
    "end": "938480"
  },
  {
    "text": "talk about the latest updates on the actual project so you want to yeah sure",
    "start": "938480",
    "end": "945640"
  },
  {
    "text": "all right so a lot has happened since Q Khan in December in Seattle so we've",
    "start": "945640",
    "end": "952100"
  },
  {
    "text": "merged over a hundred and twenty pull requests we have three releases that",
    "start": "952100",
    "end": "958250"
  },
  {
    "text": "have been published there's been 18 different contributors to the project we've introduced 13 major features and",
    "start": "958250",
    "end": "964520"
  },
  {
    "text": "then also published some getting started guys in sample configurations that make it pretty easy to to get started and",
    "start": "964520",
    "end": "971600"
  },
  {
    "text": "give spire a try there's a few specific contributors we kind of want to call out",
    "start": "971600",
    "end": "978320"
  },
  {
    "text": "for putting in some some pretty big features so Matthew and Matt from square",
    "start": "978320",
    "end": "984590"
  },
  {
    "text": "contributed my sequel datastore Tyler from uber contributed no data station",
    "start": "984590",
    "end": "990410"
  },
  {
    "text": "using SSH certificates Michael from Square contributed support so that the",
    "start": "990410",
    "end": "997250"
  },
  {
    "text": "AWS secrets manager can be used as an upstream signing authority Andrew from",
    "start": "997250",
    "end": "1003130"
  },
  {
    "text": "uber submitted the ability to specify a common name or DNS name and x.509 this s",
    "start": "1003130",
    "end": "1009730"
  },
  {
    "text": "vid so that you can kind of customize some of the additional fields in the S vid and then there's been some other",
    "start": "1009730",
    "end": "1015510"
  },
  {
    "text": "contributors from the community as well for spiffy which is a specification",
    "start": "1015510",
    "end": "1023010"
  },
  {
    "text": "there's a cig spec group and there's been a couple of updates to that as well",
    "start": "1023010",
    "end": "1028630"
  },
  {
    "text": "since since the last cube con spec for for jot s vids has been completed and",
    "start": "1028630",
    "end": "1034720"
  },
  {
    "text": "the spire implementation for that is available and then a draft for Federation has been stabilized",
    "start": "1034720",
    "end": "1042220"
  },
  {
    "text": "and that draught really covers specifications for the spiffy trust domain and the bundle format for",
    "start": "1042220",
    "end": "1048550"
  },
  {
    "text": "federating last night spire 0.8 was",
    "start": "1048550",
    "end": "1054100"
  },
  {
    "text": "released from here in Barcelona some of the things that went into spire 0.8 is a",
    "start": "1054100",
    "end": "1059980"
  },
  {
    "text": "I mentioned the secret manager using AWS secret manager in the upstream CA we",
    "start": "1059980",
    "end": "1067000"
  },
  {
    "text": "have introduced telemetry so that metrics from spire can be pushed into your favorite metric system we've",
    "start": "1067000",
    "end": "1075700"
  },
  {
    "text": "introduced some plugin and host services and and what those services are is if you are writing a plug-in for spire with",
    "start": "1075700",
    "end": "1082840"
  },
  {
    "text": "plugin services you can provide a set of kind of standardized callbacks that spire will use to provide or inform",
    "start": "1082840",
    "end": "1090610"
  },
  {
    "text": "spire of information around your plugin you might want to use that for health checks or liveness probes for example so",
    "start": "1090610",
    "end": "1096820"
  },
  {
    "text": "if your plugin wants to go a little bit more deeper into determining if if",
    "start": "1096820",
    "end": "1101830"
  },
  {
    "text": "things are okay and then host services are sort of the opposite side of that so something like telemetry",
    "start": "1101830",
    "end": "1107500"
  },
  {
    "text": "is a standardized interface that your plugin can use to to push your own metrics in through spire we've",
    "start": "1107500",
    "end": "1114760"
  },
  {
    "text": "introduced the kubernetes bundle notifier plugin and this can be used to replace the bootstraps certificate and",
    "start": "1114760",
    "end": "1123820"
  },
  {
    "text": "upstream CA with another implementation where spire server injects the",
    "start": "1123820",
    "end": "1129190"
  },
  {
    "text": "certificate bundle directly into kubernetes and then that gets mounted within agents so that you don't have to",
    "start": "1129190",
    "end": "1135880"
  },
  {
    "text": "provide a static certificate for bootstrapping the agent or if you're using currently an a static upstream",
    "start": "1135880",
    "end": "1142810"
  },
  {
    "text": "certificate that goes away as well so it makes it a little bit easier to use the",
    "start": "1142810",
    "end": "1148030"
  },
  {
    "text": "self-signed certificate and spire server just manages rotation of that all all",
    "start": "1148030",
    "end": "1153160"
  },
  {
    "text": "automatically and then finally a nested spire so nested spire although this this seems",
    "start": "1153160",
    "end": "1160450"
  },
  {
    "text": "like it's a lot like Federation it's it's very different it allows a topology of multiple spire servers within a",
    "start": "1160450",
    "end": "1166330"
  },
  {
    "text": "single trust domain so at the top that might be a master spire server running in a secure environment maybe on the",
    "start": "1166330",
    "end": "1173680"
  },
  {
    "text": "left is kubernetes and maybe on the is your on-prem datacenter or some other",
    "start": "1173680",
    "end": "1178690"
  },
  {
    "text": "cloud so this allows all of these environments to work together in a single trust domain but your workloads",
    "start": "1178690",
    "end": "1185350"
  },
  {
    "text": "don't have to communicate back to that master server instead those calls are dispatched through a local spire server",
    "start": "1185350",
    "end": "1190990"
  },
  {
    "text": "so it allows you to sort of wall in a little bit each environment and keep",
    "start": "1190990",
    "end": "1197650"
  },
  {
    "text": "that master spire server more secure I'm gonna go through no I'm not gonna go",
    "start": "1197650",
    "end": "1203500"
  },
  {
    "text": "through each of these one by one this is our change list for spire 0.8 but we",
    "start": "1203500",
    "end": "1209320"
  },
  {
    "text": "really want to call out the things in red these were all contributed by people",
    "start": "1209320",
    "end": "1215710"
  },
  {
    "text": "out in the community by others then then Scytale which is really great and",
    "start": "1215710",
    "end": "1222179"
  },
  {
    "text": "actually we're we're near the end so if you want to try it out on github you'll",
    "start": "1222179",
    "end": "1227320"
  },
  {
    "text": "find the see the spiffy specs specification at the first link the spire reckless reference implementation",
    "start": "1227320",
    "end": "1232929"
  },
  {
    "text": "at the second link and then we're on slack at at that location yep any",
    "start": "1232929",
    "end": "1240580"
  },
  {
    "text": "questions and I think just one second the moderator will come and grab this",
    "start": "1240580",
    "end": "1247000"
  },
  {
    "text": "microphone and",
    "start": "1247000",
    "end": "1249750"
  },
  {
    "text": "yeah I have one question that I would like to protect my workload with spiffy",
    "start": "1262530",
    "end": "1267660"
  },
  {
    "text": "and it's kind of a certificate or jobs okay but I wonder how can with my",
    "start": "1267660",
    "end": "1275790"
  },
  {
    "text": "workload to attest it that certificate wherever it comes from or did the spiffy",
    "start": "1275790",
    "end": "1282810"
  },
  {
    "text": "token that's the connecting service shows me it's white because you",
    "start": "1282810",
    "end": "1288210"
  },
  {
    "text": "mentioned that it's a MPLS and that's for sure than when I stopped using MPLS",
    "start": "1288210",
    "end": "1294180"
  },
  {
    "text": "it also proved that the other party who connects to my upload process the secret",
    "start": "1294180",
    "end": "1300660"
  },
  {
    "text": "key with jot there I need whenever you find it that's what it service",
    "start": "1300660",
    "end": "1308850"
  },
  {
    "text": "connecting to me I need to get the public key from somewhere to what they did but also this token when it comes",
    "start": "1308850",
    "end": "1316670"
  },
  {
    "text": "can be stolen so how can i when I writing a service verifying that the",
    "start": "1316670",
    "end": "1324770"
  },
  {
    "text": "beefy identity which is given to me when it's connecting it's legitimate",
    "start": "1324770",
    "end": "1332720"
  },
  {
    "text": "so I'm just gonna repeat your question to make sure I understood you're asking",
    "start": "1337100",
    "end": "1342590"
  },
  {
    "text": "where the the key material that is used to validate spiffy IDs are coming from",
    "start": "1342590",
    "end": "1348780"
  },
  {
    "text": "so in the case of x.509 CIA in a case of JWT the public is",
    "start": "1348780",
    "end": "1354740"
  },
  {
    "text": "great",
    "start": "1360000",
    "end": "1363000"
  },
  {
    "text": "I see",
    "start": "1367960",
    "end": "1371370"
  },
  {
    "text": "I see so you're asking how can you",
    "start": "1373740",
    "end": "1381450"
  },
  {
    "text": "secure workloads using spire agent without having to necessarily update",
    "start": "1381450",
    "end": "1387420"
  },
  {
    "text": "your application to speak TLS yeah so",
    "start": "1387420",
    "end": "1394340"
  },
  {
    "text": "spire agent exposes that workload API socket that you saw on the diagram out",
    "start": "1394340",
    "end": "1399450"
  },
  {
    "text": "of that socket comes the authentication material so that is the certificates and jot tokens and also comes the public use",
    "start": "1399450",
    "end": "1406140"
  },
  {
    "text": "for verifying so there's two AP is supported on that workload API the first",
    "start": "1406140",
    "end": "1411420"
  },
  {
    "text": "is called spiffy workload API which is a specification standard the second",
    "start": "1411420",
    "end": "1417059"
  },
  {
    "text": "supports envoy SDS API which is how on voice such as certificates so some",
    "start": "1417059",
    "end": "1424320"
  },
  {
    "text": "people will put a proxy in front of their workload and use the proxy to terminate mt LS and to do JWT",
    "start": "1424320",
    "end": "1430950"
  },
  {
    "text": "verification the spire project does not do this on its own but it will work with",
    "start": "1430950",
    "end": "1437340"
  },
  {
    "text": "envoy and that you can point envoy at the spire agent inspire agent will feed at the certificates and then you",
    "start": "1437340",
    "end": "1442440"
  },
  {
    "text": "configure envoy to validate does that answer it so for envoy we had a helper",
    "start": "1442440",
    "end": "1451950"
  },
  {
    "text": "that would do the verification for the for the job",
    "start": "1451950",
    "end": "1456350"
  },
  {
    "text": "so it seemed like most of what was covered mainly covered service",
    "start": "1458400",
    "end": "1464070"
  },
  {
    "text": "authentication is there any sort of support for service authorization no so",
    "start": "1464070",
    "end": "1470710"
  },
  {
    "text": "we don't we we just do authentication so there's other so OPA just put out a blog",
    "start": "1470710",
    "end": "1476980"
  },
  {
    "text": "post showing how they could do authorization with a spiffy ID and the project is really considered the main",
    "start": "1476980",
    "end": "1484330"
  },
  {
    "text": "focus of the project is how to identify a workload in any environment and deliver all the identities to that",
    "start": "1484330",
    "end": "1491830"
  },
  {
    "text": "workload through this API we felt that doing authorization was way too big for",
    "start": "1491830",
    "end": "1497620"
  },
  {
    "text": "us and just wanted to be really laser focused on authentication and identifying the workloads but huh",
    "start": "1497620",
    "end": "1505830"
  },
  {
    "text": "Mars talked yes there's a talk tomorrow that kind of shows how we could do that with with Calico Thanks",
    "start": "1505830",
    "end": "1513130"
  },
  {
    "text": "I have a couple of questions one is when",
    "start": "1513130",
    "end": "1521230"
  },
  {
    "text": "you talk about invoice and spiffy basically you're giving an identity to",
    "start": "1521230",
    "end": "1526690"
  },
  {
    "text": "the sidecar right not to the service yes so any service that for example if I'm",
    "start": "1526690",
    "end": "1533320"
  },
  {
    "text": "managing to impersonate the service speaking with the sidecar you don't that's out of that domain that's kind of",
    "start": "1533320",
    "end": "1541060"
  },
  {
    "text": "like a yes or no question I just wanna understand that and the second thing is that I'm thinking about is what's",
    "start": "1541060",
    "end": "1548320"
  },
  {
    "text": "preventing me as a as an attacker as a hacker to impersonate services using",
    "start": "1548320",
    "end": "1555520"
  },
  {
    "text": "speedy certificates so what kind of validation is done that the one is providing me the specificity a",
    "start": "1555520",
    "end": "1561520"
  },
  {
    "text": "certificate is actually the the same process I gave it to rather than attributes or stuff like that right so",
    "start": "1561520",
    "end": "1571420"
  },
  {
    "text": "for the Faurot so the way you could talk to the API is through envoy right or",
    "start": "1571420",
    "end": "1577900"
  },
  {
    "text": "through libraries that we support right so we have libraries in go see and and",
    "start": "1577900",
    "end": "1584580"
  },
  {
    "text": "in Java right so you could do TLS determination in-process so you don't have that Eric",
    "start": "1584580",
    "end": "1591200"
  },
  {
    "text": "between the your workload and that and that an envoy or whatever proxy are",
    "start": "1591200",
    "end": "1596810"
  },
  {
    "text": "using so yeah you are verifying the you are verifying the the proxy not the",
    "start": "1596810",
    "end": "1603770"
  },
  {
    "text": "actual workload so it really you know that is up to you how you deploy it and obviously when you have that flexibility",
    "start": "1603770",
    "end": "1610970"
  },
  {
    "text": "it comes it comes at a price and you have an air gap between that but that's why we also supply those those those",
    "start": "1610970",
    "end": "1618440"
  },
  {
    "text": "libraries for you to use and the second question was about how do I know that I'm not being spoofed by by different",
    "start": "1618440",
    "end": "1626810"
  },
  {
    "text": "system or hacker and really that's you know we what we're doing is that we're",
    "start": "1626810",
    "end": "1632570"
  },
  {
    "text": "defining these fingerprints for that code right so if you hook it up to your your build pipeline and you want to",
    "start": "1632570",
    "end": "1638030"
  },
  {
    "text": "register those through that and there's that signature that use that that's all that we could verify right we don't do",
    "start": "1638030",
    "end": "1645700"
  },
  {
    "text": "we don't quarantine the code or anything right we're just trying to match that fingerprint that we know about so if",
    "start": "1645700",
    "end": "1652880"
  },
  {
    "text": "somebody spoofs and goes into your system it starts registering their own things and obviously you have problems",
    "start": "1652880",
    "end": "1659810"
  },
  {
    "text": "there but we don't we don't the only thing we could do is just say that look this is the pattern that we're looking",
    "start": "1659810",
    "end": "1666020"
  },
  {
    "text": "for and that's what we could apply right so obviously the the tight of the pattern is and the more control you have",
    "start": "1666020",
    "end": "1672500"
  },
  {
    "text": "over it the the better right but we've done a you know we have a whole talk and",
    "start": "1672500",
    "end": "1678290"
  },
  {
    "text": "analysis that we did with the CNC F showing all the all the security you know aspects of spiffy and you know what",
    "start": "1678290",
    "end": "1685970"
  },
  {
    "text": "are the what are the different attacks and what kind of vulnerabilities you know are there if you if you pop one",
    "start": "1685970",
    "end": "1691400"
  },
  {
    "text": "node or if you pop a serve or obviously you have bigger problems there so we",
    "start": "1691400",
    "end": "1696890"
  },
  {
    "text": "could we could supply that I mean that's out there there's a whole spreadsheet just showing the the analysis that we",
    "start": "1696890",
    "end": "1703400"
  },
  {
    "text": "did",
    "start": "1703400",
    "end": "1705550"
  },
  {
    "text": "any more questions",
    "start": "1710409",
    "end": "1713279"
  },
  {
    "text": "I'm curious whether or not this is suitable for say using with like a",
    "start": "1717870",
    "end": "1723570"
  },
  {
    "text": "virtual TPM yeah you wanna yeah yes very",
    "start": "1723570",
    "end": "1730679"
  },
  {
    "text": "much so so you know Emiliano mentioned that spire is very pluggable there's a",
    "start": "1730679",
    "end": "1736679"
  },
  {
    "text": "lot of really important aspects of operation of this kind of system which are kind of offloaded to plug-in so you",
    "start": "1736679",
    "end": "1743520"
  },
  {
    "text": "can make implementations which have different backings one of those plugins is called key manager plugin is used for",
    "start": "1743520",
    "end": "1749070"
  },
  {
    "text": "key storage so on the server we have a interface that looks very much like pkcs 11 that you can use for HS empty storage",
    "start": "1749070",
    "end": "1755610"
  },
  {
    "text": "and on the agent we have an interface available which is similar which will which you can use to wrap keys with TPMS",
    "start": "1755610",
    "end": "1761010"
  },
  {
    "text": "and things like this we don't have a TPM key manager plug-in implementation in",
    "start": "1761010",
    "end": "1766529"
  },
  {
    "text": "the open-source project just yet but you can certainly write your own and bring it in and we would love a contribution",
    "start": "1766529",
    "end": "1773190"
  },
  {
    "text": "if you're interested in doing something like that yeah yeah I mean the one thing is I didn't go over all the different",
    "start": "1773190",
    "end": "1779370"
  },
  {
    "text": "kind of glossed over all the different plugins that we support but we have for the CA the upstream CA the testers",
    "start": "1779370",
    "end": "1786659"
  },
  {
    "text": "actually the data store is also pluggable and also the yeah and it's",
    "start": "1786659",
    "end": "1792059"
  },
  {
    "text": "only recently I think that cloud providers are beginning to expose those kinds of things so we're looking forward to that as well",
    "start": "1792059",
    "end": "1797370"
  },
  {
    "text": "yeah any other questions",
    "start": "1797370",
    "end": "1803419"
  },
  {
    "text": "right uh I just I know Scott's gonna hate this but it's one to show a picture",
    "start": "1803670",
    "end": "1808690"
  },
  {
    "text": "of a cat because we've never had a cat picture and Scott that didn't want to do it so I'm gonna do it okay thanks a lot",
    "start": "1808690",
    "end": "1818940"
  },
  {
    "text": "we're here all week thank you",
    "start": "1818940",
    "end": "1823740"
  }
]