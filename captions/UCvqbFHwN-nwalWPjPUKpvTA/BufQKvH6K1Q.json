[
  {
    "text": "hi everyone uh this is overview and state of liberty so welcome",
    "start": "2040",
    "end": "9179"
  },
  {
    "text": "um so I'm going to start with show hands sorry to do this but who here has heard",
    "start": "9179",
    "end": "14639"
  },
  {
    "text": "the word service mesh before should be everyone because I just said it",
    "start": "14639",
    "end": "21420"
  },
  {
    "text": "uh who who could explain what a service mesh is about half the people maybe who has used",
    "start": "21420",
    "end": "29640"
  },
  {
    "text": "a service mesh before more people somehow",
    "start": "29640",
    "end": "35420"
  },
  {
    "text": "uh who's using a service mesh in production that's still a good number what about who's using Linker D in production",
    "start": "36660",
    "end": "43920"
  },
  {
    "text": "still still pretty good I have to ask this to stroke my ego uh yeah so speaking of my ego my name is",
    "start": "43920",
    "end": "51300"
  },
  {
    "text": "Alex I am a Lincoln maintainer I've been working on Linker D since the beginning of Liberty I'm very proud to be part of",
    "start": "51300",
    "end": "58920"
  },
  {
    "text": "the project uh liquidy is a very cool project it's",
    "start": "58920",
    "end": "64500"
  },
  {
    "text": "used by a lot of different organizations all over the world and has been for a long time uh it's uh we have a very",
    "start": "64500",
    "end": "72180"
  },
  {
    "text": "vibrant open source community so if you ever pop into the Lincoln slack or go",
    "start": "72180",
    "end": "77280"
  },
  {
    "text": "onto GitHub you'll see lots of issues lots of pull requests lots of activity people helping each other in slack it's",
    "start": "77280",
    "end": "82619"
  },
  {
    "text": "uh it's really it's really nice we're a cncf project we are a graduated project",
    "start": "82619",
    "end": "88860"
  },
  {
    "text": "um and we're very proud to be there",
    "start": "88860",
    "end": "93439"
  },
  {
    "text": "uh so what does Linker D2 so link ready is a service mesh for for those who were uh said they were not able to explain",
    "start": "95460",
    "end": "101340"
  },
  {
    "text": "what a service mesh is uh a service mesh or in our case or as we use the term means that there is a sidecar proxy in",
    "start": "101340",
    "end": "108780"
  },
  {
    "text": "every pod or in every pod that's part of the service mesh and all Network traffic uh for that pod that is either leaving",
    "start": "108780",
    "end": "114659"
  },
  {
    "text": "the Pod or coming in is redirected and intercepted by that proxy and that proxy handles that traffic and is able to add",
    "start": "114659",
    "end": "121320"
  },
  {
    "text": "a bunch of functionality there like observability so you can get things like golden metrics for request rate success",
    "start": "121320",
    "end": "129239"
  },
  {
    "text": "rate latency Etc you can see your uh service topology because you know who is calling who you",
    "start": "129239",
    "end": "136680"
  },
  {
    "text": "can get reliability features like retries and timeouts load balancing traffic shifting a b deploys",
    "start": "136680",
    "end": "142459"
  },
  {
    "text": "latency aware load balancing which is a really neat feature so you can shift traffic automatically to replicas that",
    "start": "142459",
    "end": "148440"
  },
  {
    "text": "are being faster and shifted away from replicas that are being slower um and then perhaps the most important",
    "start": "148440",
    "end": "154680"
  },
  {
    "text": "thing uh transparent mtls between all services on by default so this is the thing that people are usually uh most",
    "start": "154680",
    "end": "161220"
  },
  {
    "text": "interested in or or a lot of people kind of come to linkerty or service mesh for first is they want mtls and they don't",
    "start": "161220",
    "end": "167580"
  },
  {
    "text": "want to work for it they just want to install ingridi and have it work which is which is what we do and of course you can do things like",
    "start": "167580",
    "end": "174120"
  },
  {
    "text": "cert management rotation and access policy which I will talk more about in a",
    "start": "174120",
    "end": "180840"
  },
  {
    "text": "little bit um and I meant to say this earlier but actually the way I want to do this talk",
    "start": "180840",
    "end": "187080"
  },
  {
    "text": "is I want to talk about what is new and likerty what is coming up soon on the",
    "start": "187080",
    "end": "192659"
  },
  {
    "text": "roadmap but I want to get through all of that kind of as quickly as I can to leave a lot of time if possible for",
    "start": "192659",
    "end": "197940"
  },
  {
    "text": "questions uh because I really want this to be a little more interactive and to hear what you all want to know about",
    "start": "197940",
    "end": "203340"
  },
  {
    "text": "linkready and hopefully answer that so if we get to the end and there's no questions that will be very awkward for",
    "start": "203340",
    "end": "208500"
  },
  {
    "text": "me okay so so what's the kind of the",
    "start": "208500",
    "end": "213900"
  },
  {
    "text": "philosophy behind Lincoln um Liberty has gone through a couple of iterations there was a previous version",
    "start": "213900",
    "end": "219540"
  },
  {
    "text": "of LinkedIn called link ready one which was written on the jvm and we learned a lot of things from that it was very very",
    "start": "219540",
    "end": "225540"
  },
  {
    "text": "powerful very very configurable uh and while that was really awesome it was",
    "start": "225540",
    "end": "231180"
  },
  {
    "text": "also very hard to use and a lot of people you know who are trying to use it kind of had the experience of like well",
    "start": "231180",
    "end": "237360"
  },
  {
    "text": "you know what we're trying to do why why doesn't it just work why do I have to configure all of this stuff and so we",
    "start": "237360",
    "end": "242519"
  },
  {
    "text": "took a lot of those lessons into into what we sometimes call Linker D2 or we've kind of dropped the two which is called Linker D now",
    "start": "242519",
    "end": "248819"
  },
  {
    "text": "um and the idea is it should just work right out of the box for 99.9 of use cases you should be able to just install",
    "start": "248819",
    "end": "255060"
  },
  {
    "text": "it and it should do the right thing um and you know anything that needs user",
    "start": "255060",
    "end": "261180"
  },
  {
    "text": "input or needs user configuration should kind of come after that you shouldn't have",
    "start": "261180",
    "end": "266580"
  },
  {
    "text": "that as an upfront uh barrier to getting started the other big philosophy that we had for",
    "start": "266580",
    "end": "272880"
  },
  {
    "text": "this project was for it to be really really lightweight and really really low resource utilization so that's why we",
    "start": "272880",
    "end": "280259"
  },
  {
    "text": "wrote a proxy from scratch we're not using Envoy or any other kind of off-the-shelf proxy for link review we",
    "start": "280259",
    "end": "286139"
  },
  {
    "text": "have a proxy called the Linker D2 proxy it's written in Rust and it's designed to be as lightweight and fast as",
    "start": "286139",
    "end": "292440"
  },
  {
    "text": "possible um and operational Simplicity has kind of been like one of the most important",
    "start": "292440",
    "end": "297840"
  },
  {
    "text": "things from the beginning is that this should not only be easy to get started with and easy to install but also easy",
    "start": "297840",
    "end": "303720"
  },
  {
    "text": "to operate over time and easy to reason about and easy to know what's happening in your system without having to",
    "start": "303720",
    "end": "309180"
  },
  {
    "text": "understand a lot of kind of black magic or or weird you know things that are happening",
    "start": "309180",
    "end": "315979"
  },
  {
    "text": "uh so like I mentioned we use a specially built micro proxy it's very boring to anyone who operates it which",
    "start": "318840",
    "end": "324840"
  },
  {
    "text": "is the goal it's called the link 52 proxy um and it's uh it's something we're",
    "start": "324840",
    "end": "330479"
  },
  {
    "text": "really proud of it's kind of one of the most invisible parts of the service mesh because as an operator you should never have to worry about it uh but it's got",
    "start": "330479",
    "end": "336539"
  },
  {
    "text": "some very very cool technology under the hood it's it's written in rust on some like Cutting Edge libraries that we",
    "start": "336539",
    "end": "342180"
  },
  {
    "text": "helped develop like Tokyo and Hyper nh2 and Tower um and you know because it's written in",
    "start": "342180",
    "end": "347400"
  },
  {
    "text": "Rust we get a lot of security benefits from that as well we don't have to worry about certain classes of memory issues",
    "start": "347400",
    "end": "354660"
  },
  {
    "text": "um but as I said it's like the philosophy is that the proxy should be in implementation detail it's not something that we ever think a operator",
    "start": "354660",
    "end": "361620"
  },
  {
    "text": "should have to worry about",
    "start": "361620",
    "end": "364460"
  },
  {
    "text": "and so this kind of leads into our philosophy on security uh we want to you",
    "start": "366720",
    "end": "371880"
  },
  {
    "text": "know have secure foundations we want to be built on secure libraries in Secure languages and we want to leverage",
    "start": "371880",
    "end": "377460"
  },
  {
    "text": "kubernetes as much as possible and be kubernetes native as much as possible so that means for example when we're doing",
    "start": "377460",
    "end": "383699"
  },
  {
    "text": "mtls all of the mcls identities are bootstrapped from kubernetes service",
    "start": "383699",
    "end": "389759"
  },
  {
    "text": "accounts and so that's kind of the Primitive that we we build everything on top of and in order to be secure you really",
    "start": "389759",
    "end": "396840"
  },
  {
    "text": "need to reduce the barriers to security because security features that nobody uses are not useful so mtls is on by",
    "start": "396840",
    "end": "403199"
  },
  {
    "text": "default there's nothing you need to do to configure it because we know you've got a service account that's your credential to getting a certificate once",
    "start": "403199",
    "end": "410400"
  },
  {
    "text": "you've got a certificate you can do mtls and so we have workload identity and all",
    "start": "410400",
    "end": "415440"
  },
  {
    "text": "this stuff just kind of works without needing any special configuration",
    "start": "415440",
    "end": "421520"
  },
  {
    "text": "uh this is what people like to ask us about all the time is what's the difference between Linker D and istio",
    "start": "424919",
    "end": "429960"
  },
  {
    "text": "and how do the two compare I don't want to go through all of these points um especially because these two projects",
    "start": "429960",
    "end": "436139"
  },
  {
    "text": "are both changing at rapid Paces so you know anything that's true here one day",
    "start": "436139",
    "end": "441419"
  },
  {
    "text": "might not be true the next uh but I think like the biggest difference is just in philosophy in that you know the",
    "start": "441419",
    "end": "447720"
  },
  {
    "text": "link ready project is really really focused on operability and simplicity rather than trying to satisfy every use",
    "start": "447720",
    "end": "455160"
  },
  {
    "text": "case under the sun and I think that's what makes it easier to use and what what makes people have",
    "start": "455160",
    "end": "461759"
  },
  {
    "text": "more confidence in it and it's what uh means it can go to production faster",
    "start": "461759",
    "end": "468440"
  },
  {
    "text": "um there's also a lot of performance benefits I think to using the Lincoln proxy uh we've done some really interesting benchmarks which you can",
    "start": "468660",
    "end": "475380"
  },
  {
    "text": "look up if you're interested okay so what's new in the project over",
    "start": "475380",
    "end": "484020"
  },
  {
    "text": "the past yeah year or so uh solitary 211 was a really exciting",
    "start": "484020",
    "end": "491340"
  },
  {
    "text": "release I forget when this came out but sometime in the last year",
    "start": "491340",
    "end": "496380"
  },
  {
    "text": "um and this is when we first added um server-side authorization so you know we've had mtls for a long",
    "start": "496380",
    "end": "503639"
  },
  {
    "text": "time which has given us authentication we know when one service calls another we know who that is they have an",
    "start": "503639",
    "end": "509039"
  },
  {
    "text": "identity that identity is bootstrapped from the service account uh and so we know you know we know who is calling who",
    "start": "509039",
    "end": "515279"
  },
  {
    "text": "but for the first time in 211 we gave you the ability to restrict who you",
    "start": "515279",
    "end": "520800"
  },
  {
    "text": "would accept requests from so the service could say I would only like to accept requests from this other service",
    "start": "520800",
    "end": "526740"
  },
  {
    "text": "or I would only like to request accept requests from this other subnet you know",
    "start": "526740",
    "end": "532380"
  },
  {
    "text": "or some combination thereof and so finally there was fine grain access control and you could start implementing",
    "start": "532380",
    "end": "538019"
  },
  {
    "text": "those those policies which a lot of people were asking for and are very very useful",
    "start": "538019",
    "end": "543660"
  },
  {
    "text": "um and this took us a while to kind of figure out what model we wanted to use here",
    "start": "543660",
    "end": "548880"
  },
  {
    "text": "um we wanted to do it in a way that was kubernetes native and felt natural to people who were in kubernetes and didn't",
    "start": "548880",
    "end": "555000"
  },
  {
    "text": "have to be a whole new system that people had to learn kind of on top of what they already knew",
    "start": "555000",
    "end": "561000"
  },
  {
    "text": "um so we introduced a new resource type called server this lets you define you know a specific port on your workload",
    "start": "561000",
    "end": "568740"
  },
  {
    "text": "um and as soon as you have a server then you can start to Define authorizations",
    "start": "568740",
    "end": "574560"
  },
  {
    "text": "to say here are the identities which are allowed to access this server and that's",
    "start": "574560",
    "end": "580380"
  },
  {
    "text": "all enforced on the server side uh so it's very secure and again because we have the sidecar model where we have",
    "start": "580380",
    "end": "587339"
  },
  {
    "text": "proxies inside the Pod each pod kind of becomes its own trust barrier and it can",
    "start": "587339",
    "end": "592620"
  },
  {
    "text": "say it can decide for itself you know what traffic it's deciding to accept and and what it's not based on those",
    "start": "592620",
    "end": "598200"
  },
  {
    "text": "policies um there were a bunch of other things in",
    "start": "598200",
    "end": "604440"
  },
  {
    "text": "that uh release which were really exciting uh specifically uh a grpc",
    "start": "604440",
    "end": "609660"
  },
  {
    "text": "retries was something that was long term coming a long time coming so we've had retries and Linker D for a long time but",
    "start": "609660",
    "end": "616080"
  },
  {
    "text": "they've been very restricted in type in terms of what types of requests can be retried so specifically anything with a",
    "start": "616080",
    "end": "623279"
  },
  {
    "text": "body we were never able to retry before because we would have to buffer that body so that if that request eventually",
    "start": "623279",
    "end": "629160"
  },
  {
    "text": "fails we would have that body so we could send it again um so that buffering was something we added in 211 so that for for grpc",
    "start": "629160",
    "end": "636420"
  },
  {
    "text": "requests in particular where there's always a body on the request uh we could retry those uh up to a maximum payload",
    "start": "636420",
    "end": "643080"
  },
  {
    "text": "64k so we'll buffer a certain amount and this is another philosophy about about",
    "start": "643080",
    "end": "648720"
  },
  {
    "text": "Linker D is that and something that we get kind of from working in Rust is we get to make very conscious decisions",
    "start": "648720",
    "end": "654120"
  },
  {
    "text": "about uh how much uh data we're buffering in the proxy you know we have",
    "start": "654120",
    "end": "659880"
  },
  {
    "text": "fixed size cues we know that uh we can decide",
    "start": "659880",
    "end": "665160"
  },
  {
    "text": "how much we want to buffer and how much we want to use things like back pressure to push push stuff back and make sure",
    "start": "665160",
    "end": "672360"
  },
  {
    "text": "that we're not growing our resource uh usage Beyond what's acceptable",
    "start": "672360",
    "end": "678600"
  },
  {
    "text": "uh we also made a bunch of performance improvements and we're always kind of having one eye on performance to make sure that we're not you know having",
    "start": "678600",
    "end": "684959"
  },
  {
    "text": "anything run away um and a lot of other cool features too",
    "start": "684959",
    "end": "691579"
  },
  {
    "text": "um the other big thing that happened in 211 is that we we changed the control plane architecture a little bit in that we added a new piece of it called the",
    "start": "694200",
    "end": "701399"
  },
  {
    "text": "policy controller and the policy controller is very important for serving",
    "start": "701399",
    "end": "706620"
  },
  {
    "text": "the policy API which which allows all that server-side policy access control that I just talked about but what's",
    "start": "706620",
    "end": "712320"
  },
  {
    "text": "exciting here is the policy was our first controller which was written in Rust so before this all of the control plane",
    "start": "712320",
    "end": "718920"
  },
  {
    "text": "was written in go and the proxy was written in Rust and so this was the first time we had rust kind of entering",
    "start": "718920",
    "end": "724500"
  },
  {
    "text": "the control plane side of things uh and this I think is a very very exciting development because we got to kind of",
    "start": "724500",
    "end": "730740"
  },
  {
    "text": "try out uh what it was like to write a controller in Rust you know typically the zero written go there's a lot of go",
    "start": "730740",
    "end": "737040"
  },
  {
    "text": "ecosystem around kubernetes controllers there's a lot of really good libraries for writing controllers in go uh but",
    "start": "737040",
    "end": "743820"
  },
  {
    "text": "that ecosystem on the rough side is really starting to develop now and it was you know I worked a bit on that that",
    "start": "743820",
    "end": "749880"
  },
  {
    "text": "policy control and it was a joy to write actually I was dreading a little bit when when I first got started because",
    "start": "749880",
    "end": "755279"
  },
  {
    "text": "I'm like oh man writing a controller in Rust is going to be a nightmare but it was great so I think those libraries",
    "start": "755279",
    "end": "760680"
  },
  {
    "text": "have really matured a lot and I'm excited to kind of as we develop more",
    "start": "760680",
    "end": "766260"
  },
  {
    "text": "things in the control plane to do more and more of it in Rust I think that's really really exciting",
    "start": "766260",
    "end": "772760"
  },
  {
    "text": "uh okay so fast forward uh to 212 which is the most recent release of linker d",
    "start": "776519",
    "end": "781980"
  },
  {
    "text": "uh this kind of took the server-side authorization a step farther so one of",
    "start": "781980",
    "end": "788220"
  },
  {
    "text": "the big drawbacks with the uh server-side authorization that we had into 11 is that all the authorization we",
    "start": "788220",
    "end": "794279"
  },
  {
    "text": "said it was fine grained but it was fine grained per server which meant per Port so you could say you know this port has this policy this port has this policy",
    "start": "794279",
    "end": "801300"
  },
  {
    "text": "these are the types of requests that it'll accept and here's who it'll accept it from uh but what we really found is",
    "start": "801300",
    "end": "808500"
  },
  {
    "text": "that we needed to get even more fine-grained than that and have per route policy which meant to take a look at the hcp path or method and decide you",
    "start": "808500",
    "end": "817139"
  },
  {
    "text": "know is this a liveness check if so it needs a different authorization you know",
    "start": "817139",
    "end": "823500"
  },
  {
    "text": "policy than if this is you know scraping the metrics or if this is an application",
    "start": "823500",
    "end": "828600"
  },
  {
    "text": "request or if this is something else so people ran into a lot of problems specifically with liveness probes",
    "start": "828600",
    "end": "834660"
  },
  {
    "text": "because those were coming from the kublet they were not authenticated they were not part of the mesh so in a lot of",
    "start": "834660",
    "end": "841500"
  },
  {
    "text": "cases we were rejecting them because people set up you know their their servers and their authorization policies",
    "start": "841500",
    "end": "846740"
  },
  {
    "text": "and uh those liveness probes were failing and then the application was failing because it was detected as down",
    "start": "846740",
    "end": "852839"
  },
  {
    "text": "uh so this kind of helped us clean that up a lot and meant that we can now do",
    "start": "852839",
    "end": "858360"
  },
  {
    "text": "authorization per route we could say this route uh you know these these clients can talk to this route and these",
    "start": "858360",
    "end": "864360"
  },
  {
    "text": "clients can talk to this route and and it gives us a lot more control uh so that's been a huge step forward",
    "start": "864360",
    "end": "871200"
  },
  {
    "text": "the other reason why this is really exciting is because when we were",
    "start": "871200",
    "end": "876420"
  },
  {
    "text": "developing this feature we needed some way for uh people to specify which routes you know were were allowed and",
    "start": "876420",
    "end": "882959"
  },
  {
    "text": "which routes were not so we needed users to have some with to specify what is a route and it turns out that similar work was",
    "start": "882959",
    "end": "890459"
  },
  {
    "text": "already happening at the same time in the Gateway API where as part of the Gateway API for Ingress is you also need to Define what is a route",
    "start": "890459",
    "end": "897000"
  },
  {
    "text": "and this is a really good opportunity because we could use those types and we could kind of make sure that we were",
    "start": "897000",
    "end": "903240"
  },
  {
    "text": "developing this in a direction that was compatible with what kubernetes was doing and what what the Gateway API was",
    "start": "903240",
    "end": "909420"
  },
  {
    "text": "doing and so that's what we did we used the Gateway API type the HTTP route type",
    "start": "909420",
    "end": "914760"
  },
  {
    "text": "from the Gateway API to Define HTTP routes and you can attach server policy",
    "start": "914760",
    "end": "919920"
  },
  {
    "text": "onto those in Linker D so you can say here's an HTTP route and you know when",
    "start": "919920",
    "end": "925079"
  },
  {
    "text": "talking to this server on this route here's the authorization policy that you should use and I think this sets us up uh in a good",
    "start": "925079",
    "end": "933120"
  },
  {
    "text": "direction because um right now there's ongoing work on the gamma project which is a project to",
    "start": "933120",
    "end": "940019"
  },
  {
    "text": "adapt the Gateway API for service measures in general so this is obviously something that's of of quite a bit of",
    "start": "940019",
    "end": "946620"
  },
  {
    "text": "interest to us and uh it means that we're kind of well set up to be compatible with that and we're very",
    "start": "946620",
    "end": "952740"
  },
  {
    "text": "involved in that conversation so the Gateway API is very cool if you have not",
    "start": "952740",
    "end": "957839"
  },
  {
    "text": "checked it out I'm doing a talk tomorrow uh about the uh the Gateway API and",
    "start": "957839",
    "end": "963899"
  },
  {
    "text": "specifically how Lincoln uses it so if you're interested in hearing more about that I will be talking about that tomorrow",
    "start": "963899",
    "end": "968940"
  },
  {
    "text": "uh but in the meantime just know it's very very cool",
    "start": "968940",
    "end": "973579"
  },
  {
    "text": "uh what else oh yeah and we also added kind of automatic uh support for health checks so that means that even if you",
    "start": "974459",
    "end": "981420"
  },
  {
    "text": "don't manually configure that you know these are the paths for uh that you've",
    "start": "981420",
    "end": "987480"
  },
  {
    "text": "defined as health checks we will admit those automatically because we know what they are because they're in your spec",
    "start": "987480",
    "end": "993300"
  },
  {
    "text": "they're in your your container spec and we know those are coming from the couplet so as long as they're coming",
    "start": "993300",
    "end": "998519"
  },
  {
    "text": "from the right place we don't require mtls on them and that'll just work so that's been a big quality of life Improvement there",
    "start": "998519",
    "end": "1006160"
  },
  {
    "text": "okay so what's coming up next in the future",
    "start": "1014899",
    "end": "1019120"
  },
  {
    "text": "um so liquidity 213 will be our next release I don't know exactly when it's",
    "start": "1020600",
    "end": "1025760"
  },
  {
    "text": "planned to come out when it's ready um but the major Focus for 213 is going to be client-side policy so in 212 and",
    "start": "1025760",
    "end": "1032178"
  },
  {
    "text": "211 the major Focus was on server-side policy specifically admission policy we wanted to say you know we're going to",
    "start": "1032179",
    "end": "1038298"
  },
  {
    "text": "let these things in or we're going to deny them based on their identity on 213 we really want to focus on uh",
    "start": "1038299",
    "end": "1044959"
  },
  {
    "text": "client side policy uh and there's a few things the client-side policy is a very very broad topic there's a lot of things",
    "start": "1044959",
    "end": "1051440"
  },
  {
    "text": "in there but uh specifically we wanted to focus on uh header-based routing and",
    "start": "1051440",
    "end": "1056600"
  },
  {
    "text": "circuit breaking in particular these are two features that have been highly highly requested uh and so you know it's",
    "start": "1056600",
    "end": "1064039"
  },
  {
    "text": "the natural time to kind of take what we learned doing server policy and and move that over to the client side",
    "start": "1064039",
    "end": "1070820"
  },
  {
    "text": "so again we want to continue the the path that we've gone on using the HTTP",
    "start": "1070820",
    "end": "1076039"
  },
  {
    "text": "route type from the Gateway API and potentially other types from the Gateway API to do this in a way that feels very",
    "start": "1076039",
    "end": "1081320"
  },
  {
    "text": "kubernetes native and kubernetes very natural to anybody who's running in kubernetes uh so for example HTTP routes have these",
    "start": "1081320",
    "end": "1089960"
  },
  {
    "text": "things called back ends or back-end refs which are very useful for ingresses because as an Ingress you want to say okay for this route here's where I'm",
    "start": "1089960",
    "end": "1096140"
  },
  {
    "text": "going to send this request to um in the same way it's kind of also natural to use that for East-West",
    "start": "1096140",
    "end": "1102140"
  },
  {
    "text": "traffic when saying well when I send a request that matches this route to this service",
    "start": "1102140",
    "end": "1108140"
  },
  {
    "text": "um you know actually I want to send it to this other backend instead or I want to split it and send a portion of that",
    "start": "1108140",
    "end": "1114740"
  },
  {
    "text": "traffic to this back end instead or I want to split it based on a header and say for this header I want to go here and this header I want to go here",
    "start": "1114740",
    "end": "1121820"
  },
  {
    "text": "so that's something we're working on uh right now uh that's very very exciting",
    "start": "1121820",
    "end": "1127640"
  },
  {
    "text": "um we've also had a lot of requests for circuit breaking this is a kind of this is an interesting one and a little bit of a nebulous one because everybody who",
    "start": "1127640",
    "end": "1134000"
  },
  {
    "text": "asks for Circle breaking means something different by it uh so we're never quite sure exactly what that means but I think",
    "start": "1134000",
    "end": "1140780"
  },
  {
    "text": "in general there's this need to do um to specify load balance or policy and load",
    "start": "1140780",
    "end": "1147020"
  },
  {
    "text": "balancer policy encompasses a lot of things so for link ready right now what we do is we do uh this load balancing",
    "start": "1147020",
    "end": "1153679"
  },
  {
    "text": "algorithm called Yuma ewma exponentially weighted moving average uh which is a",
    "start": "1153679",
    "end": "1159679"
  },
  {
    "text": "very very cool algorithm that takes a look at historical latency data and uses",
    "start": "1159679",
    "end": "1165260"
  },
  {
    "text": "that to weight how much traffic should go to each back end so if you see some back ends are performing very well they'll get more traffic other back ends",
    "start": "1165260",
    "end": "1172100"
  },
  {
    "text": "which are performing more poorly they'll get less traffic and that will kind of automatically adjust uh over time as the",
    "start": "1172100",
    "end": "1178700"
  },
  {
    "text": "performance of those back ends changes over time and it's really really good at",
    "start": "1178700",
    "end": "1184220"
  },
  {
    "text": "minimizing latency so that's what we use in 100 of cases we always use Yuma and",
    "start": "1184220",
    "end": "1190220"
  },
  {
    "text": "it performs great but there's kind of this this desire for some people to say well actually I want",
    "start": "1190220",
    "end": "1196160"
  },
  {
    "text": "a little more input on how load balancing happens I want to do",
    "start": "1196160",
    "end": "1201260"
  },
  {
    "text": "um I want to have more control over when back ends are in the pool or out of the",
    "start": "1201260",
    "end": "1206299"
  },
  {
    "text": "pool and this is kind of the what people call circuit breaking to say well if there's been a bunch of failures on this back end maybe I want to kick that out",
    "start": "1206299",
    "end": "1212780"
  },
  {
    "text": "of the load balancer pool for a while let that back end recover before I bring it back in",
    "start": "1212780",
    "end": "1218240"
  },
  {
    "text": "um and so there's a lot of surface area here for configuration to say well exactly how do you want load balancing to behave and so client policy is a",
    "start": "1218240",
    "end": "1225320"
  },
  {
    "text": "really natural place for users to be able to specify that configuration and say well maybe we need different",
    "start": "1225320",
    "end": "1230360"
  },
  {
    "text": "policies for different routes maybe this route is fundamentally you know behaves differently and it needs a different",
    "start": "1230360",
    "end": "1235460"
  },
  {
    "text": "load balancer policy than this other one maybe we want circuit breaking over here but we don't want it over here",
    "start": "1235460",
    "end": "1241160"
  },
  {
    "text": "because you know the nature of those Services is different",
    "start": "1241160",
    "end": "1245620"
  },
  {
    "text": "um now if you are a link to the expert uh you may recognize that some of this",
    "start": "1246320",
    "end": "1251720"
  },
  {
    "text": "sounds kind of familiar from service profiles so service profiles are something that's in linkurdy today and",
    "start": "1251720",
    "end": "1257059"
  },
  {
    "text": "it's a way of specifying which routes are retryable and which routes have timeouts uh",
    "start": "1257059",
    "end": "1264100"
  },
  {
    "text": "and you know that's got a lot of overlap with what I just talked about being able to specify client policy because retries",
    "start": "1264100",
    "end": "1270500"
  },
  {
    "text": "and timeouts are client policy um and so kind of because there's this",
    "start": "1270500",
    "end": "1276200"
  },
  {
    "text": "overlap we want to kind of start slowly to move away from service profiles for",
    "start": "1276200",
    "end": "1281600"
  },
  {
    "text": "configuring these things and start moving towards something that feels more natural in kubernetes which is by doing",
    "start": "1281600",
    "end": "1287600"
  },
  {
    "text": "things with HTTP routes and with the Gateway API so this isn't going to be a hard cut over uh we're going to kind of",
    "start": "1287600",
    "end": "1293900"
  },
  {
    "text": "slowly start to deprecate things from service profiles and move them over to the new the new world of hdb routes and",
    "start": "1293900",
    "end": "1301159"
  },
  {
    "text": "and Gateway API um just because that feels a lot more a lot more kubernetes easy",
    "start": "1301159",
    "end": "1306980"
  },
  {
    "text": "uh and so we'll kind of slowly slowly migrate that functionality over",
    "start": "1306980",
    "end": "1312559"
  },
  {
    "text": "um kind of overtime and you know as I said before we've got our eye on gamma we're",
    "start": "1312559",
    "end": "1317659"
  },
  {
    "text": "very involved in those conversations and uh to the extent possible we want to be",
    "start": "1317659",
    "end": "1322700"
  },
  {
    "text": "compatible with gamma we want to have all that uh server side and client-side",
    "start": "1322700",
    "end": "1327919"
  },
  {
    "text": "functionality be configured in a way that that makes sense",
    "start": "1327919",
    "end": "1333620"
  },
  {
    "text": "with the Gateway API",
    "start": "1333620",
    "end": "1336880"
  },
  {
    "text": "uh so if this sounds interesting uh we would love for you to get involved all",
    "start": "1339860",
    "end": "1345799"
  },
  {
    "text": "the development is open source of course on GitHub so you can kind of follow along you can file issues you can open",
    "start": "1345799",
    "end": "1350840"
  },
  {
    "text": "PRS if you are trying to run Linker D and you run into any problems you can always hop into the linkready slack the",
    "start": "1350840",
    "end": "1358360"
  },
  {
    "text": "slack.linkerty.io and there's always people maintainers and other users who",
    "start": "1358360",
    "end": "1363380"
  },
  {
    "text": "are there helping each other out and just being friendly and nice",
    "start": "1363380",
    "end": "1368559"
  },
  {
    "text": "uh we've got some mailing lists that are that are from the cncf that we announced releases to and and make other",
    "start": "1368559",
    "end": "1374419"
  },
  {
    "text": "announcements too uh there have been some security audits that we've done which are very interesting if you care",
    "start": "1374419",
    "end": "1381200"
  },
  {
    "text": "to read security audits um and yeah we would love to uh love to",
    "start": "1381200",
    "end": "1386539"
  },
  {
    "text": "have everyone participate um if you are looking for a more kind of",
    "start": "1386539",
    "end": "1391880"
  },
  {
    "text": "Hands-On way of learning about Linker D there is a Hands-On service mesh academy",
    "start": "1391880",
    "end": "1397840"
  },
  {
    "text": "uh the next one is in November um and that really gets you kind of",
    "start": "1397840",
    "end": "1403880"
  },
  {
    "text": "Hands-On and teaches you right down to the nitty-gritty uh the details about linkridi that you uh might not be able",
    "start": "1403880",
    "end": "1411080"
  },
  {
    "text": "to pick up on your own so if that is of interest to you I highly recommend that you check it out",
    "start": "1411080",
    "end": "1417460"
  },
  {
    "text": "uh and if you are running uh Linker D in in production and you need a little bit",
    "start": "1419480",
    "end": "1425600"
  },
  {
    "text": "extra help or you want to alleviate some of that uh burden of uh of running it uh",
    "start": "1425600",
    "end": "1431480"
  },
  {
    "text": "buoyant offers a fully managed linkerty so it will take care of things like automatic upgrades and certificate",
    "start": "1431480",
    "end": "1438559"
  },
  {
    "text": "rotation and alerts and stuff like that which just takes some of the administrative burden off of you and you",
    "start": "1438559",
    "end": "1445340"
  },
  {
    "text": "know makes it a little bit easier it gives you one less thing to to worry about so uh point.io demo if you're interested",
    "start": "1445340",
    "end": "1453140"
  },
  {
    "text": "in getting a demo of that okay so hopefully I went fast enough",
    "start": "1453140",
    "end": "1459799"
  },
  {
    "text": "there to to leave a lot of time for for questions um and I want to know what you want to",
    "start": "1459799",
    "end": "1464960"
  },
  {
    "text": "know about Linker d",
    "start": "1464960",
    "end": "1467860"
  },
  {
    "text": "uh so istio is going to have something like a proximus mode using ambient mesh",
    "start": "1475700",
    "end": "1482860"
  },
  {
    "text": "do you have any plans along those lines anything yeah good question yes the question was",
    "start": "1482860",
    "end": "1490340"
  },
  {
    "text": "um istio's got an ambient proxy proxilis mode this link or do you ever going to have something like that probably not uh",
    "start": "1490340",
    "end": "1496220"
  },
  {
    "text": "so we're rarely tied to the sidecar model we think it has a lot of advantages uh in terms of security and",
    "start": "1496220",
    "end": "1502100"
  },
  {
    "text": "in terms of operability and understandability the Pod is a very natural security boundary and so when",
    "start": "1502100",
    "end": "1508760"
  },
  {
    "text": "you do something with like ambient where you take that that proxy and you run it somewhere else and you have it kind of",
    "start": "1508760",
    "end": "1514220"
  },
  {
    "text": "be multi-tenant you lose a lot of those those benefits and you've got one proxy serving multiple different pods uh those",
    "start": "1514220",
    "end": "1521360"
  },
  {
    "text": "security boundaries get a little bit more muddled you know you have keys from multiple different accounts potentially",
    "start": "1521360",
    "end": "1527059"
  },
  {
    "text": "uh coexisting in that one proxy so we don't see kind of any major advantages",
    "start": "1527059",
    "end": "1533539"
  },
  {
    "text": "to that that that sidecarless model that kind of outweigh outweigh the drawbacks",
    "start": "1533539",
    "end": "1538700"
  },
  {
    "text": "so we're we're we're probably in it with the sidecar for for at least the medium to long term",
    "start": "1538700",
    "end": "1546100"
  },
  {
    "text": "yeah that's that's a great point so the uh someone just pointed out that link already one had that architecture and that's true uh Linker D1 had a per node",
    "start": "1548779",
    "end": "1557059"
  },
  {
    "text": "proxy and you know one of the lessons that we learned from that was that there's a lot of drawbacks to that and",
    "start": "1557059",
    "end": "1562400"
  },
  {
    "text": "it's very difficult to do security uh correctly in that model and it's very difficult you know it introduces a lot",
    "start": "1562400",
    "end": "1568159"
  },
  {
    "text": "of complexity uh that you can uh drop if you go to this more isolated model of",
    "start": "1568159",
    "end": "1574820"
  },
  {
    "text": "proxy per bod uh hi uh we've been running LinkedIn",
    "start": "1574820",
    "end": "1581419"
  },
  {
    "text": "production since 2020 um but we're on 2.9 and",
    "start": "1581419",
    "end": "1587539"
  },
  {
    "text": "it's hard to upgrade like it's it's like a one-way upgrade and for production workloads",
    "start": "1587539",
    "end": "1593659"
  },
  {
    "text": "um it's very hard to guarantee that",
    "start": "1593659",
    "end": "1599179"
  },
  {
    "text": "like we can revert if there's a problem especially since you have to like rotate everything to get do you have",
    "start": "1599179",
    "end": "1604640"
  },
  {
    "text": "recommendations like for us right now the plan is like to safely upgrade to a",
    "start": "1604640",
    "end": "1610159"
  },
  {
    "text": "new version is to have a separate cluster like a because a separate",
    "start": "1610159",
    "end": "1615320"
  },
  {
    "text": "cluster that's running the exact same workloads the same network but it's got a differently greedy on your one and then if something goes back",
    "start": "1615320",
    "end": "1621620"
  },
  {
    "text": "we just switch over our Network to the older cluster yeah yeah so the question is is how do",
    "start": "1621620",
    "end": "1628580"
  },
  {
    "text": "you how do you upgrade in a way that you have confidence that you can can roll back and and I I hear that it has been",
    "start": "1628580",
    "end": "1635240"
  },
  {
    "text": "an issue in the past that uh rollbacks to a previous version have been very very difficult we're trying to get",
    "start": "1635240",
    "end": "1640880"
  },
  {
    "text": "better about that kind of going forward um but it is you know historically a problem",
    "start": "1640880",
    "end": "1646460"
  },
  {
    "text": "um my advice to you is if you're running into problems just try and engage with the liquidity team you know directly we",
    "start": "1646460",
    "end": "1651980"
  },
  {
    "text": "can try and help you sort out you know the specifics um",
    "start": "1651980",
    "end": "1657200"
  },
  {
    "text": "but uh yeah going going backwards doing it downgrade has not been something that has been a great experience in the past",
    "start": "1657200",
    "end": "1662480"
  },
  {
    "text": "so I hear that",
    "start": "1662480",
    "end": "1665440"
  },
  {
    "text": "so um obviously that with the new server-side policies you can enforce security within Linker D",
    "start": "1675919",
    "end": "1682820"
  },
  {
    "text": "um is there a security reason to do both um you know is it I know you're",
    "start": "1682820",
    "end": "1688400"
  },
  {
    "text": "enforcing a proxy but is it you know a concern that we should apply it on both sides you know potentially if we have",
    "start": "1688400",
    "end": "1694820"
  },
  {
    "text": "pods that we don't want anything talking to do you need to do it twice or is it is one good enough",
    "start": "1694820",
    "end": "1700580"
  },
  {
    "text": "it's a question about whether you would also do kind of security in the application as well no I mean on like",
    "start": "1700580",
    "end": "1706400"
  },
  {
    "text": "the firewall level so you could do it on the on the link or D level and on the firewall level you know through the cni",
    "start": "1706400",
    "end": "1712340"
  },
  {
    "text": "type deal I see I see yeah I mean you could it's kind of like a belt and suspenders type of approach they're",
    "start": "1712340",
    "end": "1717380"
  },
  {
    "text": "they're slightly different things you know when linkerty talks about uh security and mtls what we're talking",
    "start": "1717380",
    "end": "1723620"
  },
  {
    "text": "about is workload identity so we have these identities which are tied to certificates which are bootstrapped from",
    "start": "1723620",
    "end": "1728720"
  },
  {
    "text": "from service account tokens so you know we don't necessarily say that you know",
    "start": "1728720",
    "end": "1735020"
  },
  {
    "text": "this request is uh you know coming from a certain place but rather it has this identity this cryptographic identity",
    "start": "1735020",
    "end": "1741620"
  },
  {
    "text": "which represents this workload and so you know if you want another layer on",
    "start": "1741620",
    "end": "1747020"
  },
  {
    "text": "top of that or below that uh that can potentially make sense as well it's kind of just a different it's a different layer and it's a different thing",
    "start": "1747020",
    "end": "1754840"
  },
  {
    "text": "um for the cryptographic identity and the and the certificates are how are you guys issuing that is it through an Acme",
    "start": "1755000",
    "end": "1760399"
  },
  {
    "text": "do you link into like an Acme provider using cert manager are you handling that entirely within Linker d",
    "start": "1760399",
    "end": "1766700"
  },
  {
    "text": "uh it's by default it's handled entirely by Liberty we do integrate with start manager so for example if you want",
    "start": "1766700",
    "end": "1772760"
  },
  {
    "text": "automatic certificate rotation cert manager can do that and that works great in the default case we generate all of",
    "start": "1772760",
    "end": "1778700"
  },
  {
    "text": "that uh all of those certificates inside of linker D and those are you know kind of bootstrapped up from the service",
    "start": "1778700",
    "end": "1784159"
  },
  {
    "text": "account tokens but that trust chain is kind of all you know all there it's not connected to like a well-known CA or",
    "start": "1784159",
    "end": "1790820"
  },
  {
    "text": "anything like that okay so if you wanted to operate like your own Acme compliance CA and hook it into cert manager would",
    "start": "1790820",
    "end": "1796399"
  },
  {
    "text": "you still be able to get the same like identity management rotation yep yep you can supply your own trust root your own",
    "start": "1796399",
    "end": "1802340"
  },
  {
    "text": "tour manager and that'll all kind of get hung off of that cool thank you",
    "start": "1802340",
    "end": "1808360"
  },
  {
    "text": "uh thank you for the presentation it was great um so I'm a long time SEO user but also a fan of linker D personally",
    "start": "1809299",
    "end": "1816620"
  },
  {
    "text": "um so one of the things that I was looking at is in terms of like day two operations in terms of visibility SEO",
    "start": "1816620",
    "end": "1823100"
  },
  {
    "text": "for example makes it very easy to do something like chiali is there something in the community that's equivalent",
    "start": "1823100",
    "end": "1828380"
  },
  {
    "text": "inside the Linker D Community or is there an opportunity is that something as a community we should like look at or",
    "start": "1828380",
    "end": "1833899"
  },
  {
    "text": "in terms of viewing you know traffic routing inside the cluster yeah so a lot of that is kind of built",
    "start": "1833899",
    "end": "1839779"
  },
  {
    "text": "into the lucrative Vis extension you know if you use the link review physics extension you can get things like service maps and dashboards and and so",
    "start": "1839779",
    "end": "1846799"
  },
  {
    "text": "on uh so a lot of the functionality that's in in chially is also kind of available through through the linkready",
    "start": "1846799",
    "end": "1852140"
  },
  {
    "text": "dashboard um but kind of on top of that all that data is in Prometheus and you can build",
    "start": "1852140",
    "end": "1858020"
  },
  {
    "text": "you know any visualization visualization you want on top of that",
    "start": "1858020",
    "end": "1862898"
  },
  {
    "text": "uh two quick questions you mentioned that the control plane was down to three components but I counted five on the slide so are there some doubling up",
    "start": "1874580",
    "end": "1880760"
  },
  {
    "text": "there uh and take a look see whether I'm wrong or the diagram's",
    "start": "1880760",
    "end": "1886220"
  },
  {
    "text": "wrong so the destination and policy controllers they're split out here but",
    "start": "1886220",
    "end": "1892700"
  },
  {
    "text": "they're in one they're kind of bundled together in one pot the public API doesn't exist anymore",
    "start": "1892700",
    "end": "1898159"
  },
  {
    "text": "and that's three so the slide is slightly wrong okay uh yeah the slide's really old because also I think your",
    "start": "1898159",
    "end": "1903620"
  },
  {
    "text": "Twitter handle was wrong on there um but I found you an ethology um the other one you mentioned briefly",
    "start": "1903620",
    "end": "1908779"
  },
  {
    "text": "you had something about back pressure does this Linker D provide a back pressure mechanism yes that's a great question uh so for back pressure you",
    "start": "1908779",
    "end": "1914779"
  },
  {
    "text": "know we uh we use kind of the HTTP back pressure mechanism so uh as uh kind of",
    "start": "1914779",
    "end": "1921200"
  },
  {
    "text": "the proxy handles traffic it it takes those bytes in and sends them out and as soon as it sends them out kind of",
    "start": "1921200",
    "end": "1927020"
  },
  {
    "text": "signals you know Upstream that is ready for more kind of using the natural connection Windows of http",
    "start": "1927020",
    "end": "1933820"
  },
  {
    "text": "hi um so I'm interested in uh Linker D's uh so talking about your authorization",
    "start": "1937279",
    "end": "1944179"
  },
  {
    "text": "policies it's on a pod to pod kind of uh this workload authorization",
    "start": "1944179",
    "end": "1949940"
  },
  {
    "text": "um does Linker do you have a story around like user authorization between pods or accessing services or endpoints",
    "start": "1949940",
    "end": "1956659"
  },
  {
    "text": "in uh positive maybe further on the stack that a Gateway wouldn't be able to",
    "start": "1956659",
    "end": "1961880"
  },
  {
    "text": "necessarily block that traffic uh yeah good question uh no uh so we've always kind of been focused",
    "start": "1961880",
    "end": "1968659"
  },
  {
    "text": "on on workload identity rather than user identity um I think that may change a little bit in the future as we start to take on",
    "start": "1968659",
    "end": "1974480"
  },
  {
    "text": "more Ingress functionality um I think that's a more natural place for that uh but kind of for now all of",
    "start": "1974480",
    "end": "1980659"
  },
  {
    "text": "the East West stuff is all uh workload off",
    "start": "1980659",
    "end": "1985419"
  },
  {
    "text": "uh yeah sure I can take this one and then uh yeah the question was uh can you explain the difference between East West",
    "start": "1993080",
    "end": "1998240"
  },
  {
    "text": "and North South traffic north south generally refers to stuff coming in from the outside world so coming in through the Ingress of the Gateway and then East",
    "start": "1998240",
    "end": "2005200"
  },
  {
    "text": "West is service to service within the cluster for one service in a cluster to another service also in the cluster",
    "start": "2005200",
    "end": "2012059"
  },
  {
    "text": "uh so similar to the question that he asked like is there any plan to I guess work with something like open policy",
    "start": "2012059",
    "end": "2018820"
  },
  {
    "text": "agent to have like data policies on service to service traffic uh yeah potentially I mean if there",
    "start": "2018820",
    "end": "2026019"
  },
  {
    "text": "aren't any kind of plans right now but uh open policy agent is something we've looked at in the past and it's very interesting and it's definitely",
    "start": "2026019",
    "end": "2031600"
  },
  {
    "text": "potentially useful for a lot of stuff uh but we don't have anything concrete right now",
    "start": "2031600",
    "end": "2037480"
  },
  {
    "text": "can you say anything about the communication between your data plane and control plane so for example in",
    "start": "2037480",
    "end": "2042580"
  },
  {
    "text": "istio they use something called XTF because that's what on y exposes yep but",
    "start": "2042580",
    "end": "2047980"
  },
  {
    "text": "I guess I don't know can you say anything about what kind of protocol you use sure uh so question is about what's",
    "start": "2047980",
    "end": "2053440"
  },
  {
    "text": "what's the how does the communication between the control plane and the data plane work um you know conceptually it's very",
    "start": "2053440",
    "end": "2058720"
  },
  {
    "text": "similar to the XDS apis from Envoy but it's a separate uh jrpc API so control",
    "start": "2058720",
    "end": "2063760"
  },
  {
    "text": "plane each of the control plane components exposes some grpc API um and the the proxies connect to the",
    "start": "2063760",
    "end": "2070060"
  },
  {
    "text": "control plane to to get that information so conceptually very similar to XDS but a different thing",
    "start": "2070060",
    "end": "2077220"
  },
  {
    "text": "okay I think that's I think that's fine thank you everybody uh I'll be hanging out if you want to ask me more questions",
    "start": "2077320",
    "end": "2084060"
  }
]