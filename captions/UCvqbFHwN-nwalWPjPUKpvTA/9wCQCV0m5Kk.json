[
  {
    "text": "we go all right thanks everyone for joining us today",
    "start": "80",
    "end": "6000"
  },
  {
    "text": "welcome to today's cncf live webinar managing iot devices from kubernetes",
    "start": "6000",
    "end": "12400"
  },
  {
    "text": "with ocry i'm libby schultz and i'll be moderating today's webinar i'm going to read our",
    "start": "12400",
    "end": "17440"
  },
  {
    "text": "code of conduct and then i will hand it over to kate goldenring software engineer at microsoft",
    "start": "17440",
    "end": "23519"
  },
  {
    "text": "a few housekeeping items before we get started during the webinar you're not able to speak but you can enter all of",
    "start": "23519",
    "end": "30080"
  },
  {
    "text": "your questions into our lovely chat box go ahead and say hi to us tell us where you're watching from and leave your",
    "start": "30080",
    "end": "37120"
  },
  {
    "text": "questions here we will get to as many as we can at the end this",
    "start": "37120",
    "end": "42800"
  },
  {
    "text": "is an official webinar for the cncf and as such is subject to the code of conduct please do not add anything to the",
    "start": "42800",
    "end": "49120"
  },
  {
    "text": "chatter questions that would be in violation of that code of conduct and please be respectful of your fellow",
    "start": "49120",
    "end": "54239"
  },
  {
    "text": "participants and our presenter please also note that the slides and recording will be posted later today to",
    "start": "54239",
    "end": "61199"
  },
  {
    "text": "the online programs page at community.cncf.io under online programs and will also be",
    "start": "61199",
    "end": "67840"
  },
  {
    "text": "available via your registration link and the recording will also be on our online programs youtube playlist",
    "start": "67840",
    "end": "74960"
  },
  {
    "text": "with that i will hand it over to kate to kick things off awesome thank you libby well hello",
    "start": "74960",
    "end": "81759"
  },
  {
    "text": "everyone um so today we're going to be talking about awkry specifically how awkward can be used to",
    "start": "81759",
    "end": "87360"
  },
  {
    "text": "both discover and manage iot devices from kubernetes",
    "start": "87360",
    "end": "92960"
  },
  {
    "text": "and just to kick it off who am i my name is kate i'm a software engineer at microsoft and i'm the",
    "start": "92960",
    "end": "100240"
  },
  {
    "text": "maintainer and core developer of ocari which is a cncf sandbox project and beyond that",
    "start": "100240",
    "end": "106880"
  },
  {
    "text": "i'm generally very active in the open source community focusing on contributing to rust and kubernetes",
    "start": "106880",
    "end": "112320"
  },
  {
    "text": "projects one that you may know of is crestlet which is another cncf sandbox project which enables running",
    "start": "112320",
    "end": "117920"
  },
  {
    "text": "webassembly modules on kubernetes itself um so feel free to follow me on either",
    "start": "117920",
    "end": "123600"
  },
  {
    "text": "of my socials but today we're really focusing in on ocarina so let's talk about what we're",
    "start": "123600",
    "end": "129679"
  },
  {
    "text": "going to talk about um i want to back up and talk about the motivation behind ocari and where it",
    "start": "129679",
    "end": "135040"
  },
  {
    "text": "came from and then we'll talk a little bit about what ocari is go through some scenarios",
    "start": "135040",
    "end": "140560"
  },
  {
    "text": "iot edge scenarios that can be simplified with ocari then we'll look a little bit at ocry's architecture and",
    "start": "140560",
    "end": "146800"
  },
  {
    "text": "all this is going to lead up to a demo of using ocry to discover ip cameras and then use them in a",
    "start": "146800",
    "end": "153760"
  },
  {
    "text": "streaming application context and then go one step further of managing these devices by performing a firmware upgrade",
    "start": "153760",
    "end": "160239"
  },
  {
    "text": "on them and then we'll end with talking about what's next for rockery and then throughout this presentation",
    "start": "160239",
    "end": "166720"
  },
  {
    "text": "feel free to put any questions you have in the chat we'll have plenty of time at the end and we'll address all those questions",
    "start": "166720",
    "end": "173120"
  },
  {
    "text": "that we can and then at the end of all the slides here we have a link to awk's",
    "start": "173120",
    "end": "178239"
  },
  {
    "text": "documentation so that'll also link out to our github and other resources such as our slack so",
    "start": "178239",
    "end": "183360"
  },
  {
    "text": "feel free to navigate to there maybe bookmark it explore during presentations",
    "start": "183360",
    "end": "191599"
  },
  {
    "text": "so looking at the motivation oftentimes kubernetes is run in the cloud where you have racks observers",
    "start": "191599",
    "end": "197760"
  },
  {
    "text": "that not only themselves are very homogeneous in their compute and resources but also their environment",
    "start": "197760",
    "end": "204480"
  },
  {
    "text": "it's very static however on the edge not only are these nodes themselves very heterogeneous so",
    "start": "204480",
    "end": "210640"
  },
  {
    "text": "they support different amounts of compute but also is their environment so you have all these tiny iot devices",
    "start": "210640",
    "end": "217920"
  },
  {
    "text": "devices think mcu class sensors controllers etc and",
    "start": "217920",
    "end": "223760"
  },
  {
    "text": "not only are there a bunch of different ones but also they're constantly scaling up and scaling down",
    "start": "223760",
    "end": "229760"
  },
  {
    "text": "and oftentimes these devices are too small to run kubernetes themselves so they may be mcu class devices that",
    "start": "229760",
    "end": "237200"
  },
  {
    "text": "kind of have one fixed function or maybe they don't want to be modified to run kubernetes so think brownfield",
    "start": "237200",
    "end": "242959"
  },
  {
    "text": "devices so ocari came from the question of how can we dynamically leverage these",
    "start": "242959",
    "end": "248319"
  },
  {
    "text": "devices in a kubernetes cluster when these devices themselves can't run kubernetes",
    "start": "248319",
    "end": "253920"
  },
  {
    "text": "and so the goal of ocry is to create an open source standard way to connect these devices to a kubernetes cluster",
    "start": "253920",
    "end": "260479"
  },
  {
    "text": "and manage these devices from a cluster which is really why awkry stands for",
    "start": "260479",
    "end": "266240"
  },
  {
    "text": "kubernetes resource interface it aims to be that interface that abstracts the way the details of discovering and using iot",
    "start": "266240",
    "end": "273600"
  },
  {
    "text": "devices on the edge and it does that by first discovering the devices so",
    "start": "273600",
    "end": "279680"
  },
  {
    "text": "we look across the network locally on the device or attached to the device across the network locally on the node",
    "start": "279680",
    "end": "286400"
  },
  {
    "text": "or attach the node for these devices and then for every device that ocari discovers it connects it to the cluster",
    "start": "286400",
    "end": "292720"
  },
  {
    "text": "by creating a kubernetes resource to represent device um and then we have a controller that",
    "start": "292720",
    "end": "299040"
  },
  {
    "text": "can automatically deploy workloads to discover devices and what's unique about ocari is that",
    "start": "299040",
    "end": "304400"
  },
  {
    "text": "because it is really focused on the edge ocry actually means edge in greek",
    "start": "304400",
    "end": "310479"
  },
  {
    "text": "we handle those occurrences that are more common on the edge such as devices dynamically",
    "start": "310479",
    "end": "316479"
  },
  {
    "text": "disappearing maybe there's a loss of connectivity to the device or devices all of a sudden coming online and ocry",
    "start": "316479",
    "end": "323360"
  },
  {
    "text": "will see that it'll remove the kubernetes resource we've created to represent that device it'll bring down",
    "start": "323360",
    "end": "329039"
  },
  {
    "text": "the workload that we've automatically deployed to use that device and then if new devices come online we'll",
    "start": "329039",
    "end": "334479"
  },
  {
    "text": "automatically see that deploy appropriate workloads also because we're focused on the edge",
    "start": "334479",
    "end": "340639"
  },
  {
    "text": "we were built in rust to optimize to being as low footprint as possible and we really work on",
    "start": "340639",
    "end": "347440"
  },
  {
    "text": "and we run all of our tests on some of the common lightweight kubernetes distributions such as k3s and microkates",
    "start": "347440",
    "end": "355360"
  },
  {
    "text": "and a final note mentioned this earlier but we are a community based project we're open sourced and a cncf sandbox",
    "start": "355360",
    "end": "362800"
  },
  {
    "text": "project and this becomes really important when we talk about um the way ocarie does discovery because the more",
    "start": "362800",
    "end": "369280"
  },
  {
    "text": "people working on ocarina the more types of devices ocari can discover",
    "start": "369280",
    "end": "374400"
  },
  {
    "text": "so like i mentioned there are a lot of tiny iot devices out there on the edge",
    "start": "374800",
    "end": "381759"
  },
  {
    "text": "so what iot devices can awkward discover one thing to note is that iot devices do",
    "start": "381759",
    "end": "387120"
  },
  {
    "text": "not need to be modified to work with ocari our goal is to not run anything on the devices themselves they're",
    "start": "387120",
    "end": "392319"
  },
  {
    "text": "oftentimes too small to even put anything on them rather we want to communicate via the",
    "start": "392319",
    "end": "397759"
  },
  {
    "text": "protocols that they already speak so we call this pattern of communication that we make with these devices our",
    "start": "397759",
    "end": "403840"
  },
  {
    "text": "discovery handlers and they're oftentimes just protocol implementations and currently occurring has support for",
    "start": "403840",
    "end": "410000"
  },
  {
    "text": "three discovery handlers specifically we have support for udev for discovering devices on the local linux device file",
    "start": "410000",
    "end": "416560"
  },
  {
    "text": "system so these can be any usb device such as usb cameras usb microphones or",
    "start": "416560",
    "end": "421840"
  },
  {
    "text": "they can be embedded devices such as gpus we also have support for discovering industrial machinery via opc",
    "start": "421840",
    "end": "428800"
  },
  {
    "text": "ua and finally we have support for discovering ip cameras via the onvif",
    "start": "428800",
    "end": "434479"
  },
  {
    "text": "protocol and that's the one that we're kind of highlighting in our demo scenarios today however the thing to note is that our",
    "start": "434479",
    "end": "440960"
  },
  {
    "text": "discovery interface is fully extensible it's simply a grpc interface",
    "start": "440960",
    "end": "446000"
  },
  {
    "text": "um so if you wanted to add support for discovering a new set of devices via a new protocol all you need to do is",
    "start": "446000",
    "end": "451599"
  },
  {
    "text": "implement that interface um and that discovery handler which is the implementation of that interface can",
    "start": "451599",
    "end": "458319"
  },
  {
    "text": "run in its own pod so you can simply install ocry vr helm chart and just add um with our template your discovery",
    "start": "458319",
    "end": "465039"
  },
  {
    "text": "handler and already you've enabled ocari to discover a new set of devices so we have community members working on",
    "start": "465039",
    "end": "471280"
  },
  {
    "text": "discovery handlers for zerocomp which discovers mdns based devices and co-op for constrained",
    "start": "471280",
    "end": "478160"
  },
  {
    "text": "devices and i linked at the bottom these slides which we'll share out after this um",
    "start": "478160",
    "end": "483840"
  },
  {
    "text": "the direct uh link to the documentation that describes how to go about making a discovery handler",
    "start": "483840",
    "end": "491560"
  },
  {
    "text": "so originally when ocarie was created we are really focusing on device use specifically we had this one scenario in",
    "start": "492160",
    "end": "499199"
  },
  {
    "text": "mind where ocry would discover devices and deploy a long-running pod that acted",
    "start": "499199",
    "end": "504960"
  },
  {
    "text": "as an information broker so you can imagine um say we had some",
    "start": "504960",
    "end": "510960"
  },
  {
    "text": "of um say we had an ip camera you're constantly this is example show later pulling streams of frames from that",
    "start": "510960",
    "end": "518080"
  },
  {
    "text": "camera or say you wanted to constantly be monitoring the temperature of the thermometer um those were kind of the",
    "start": "518080",
    "end": "524080"
  },
  {
    "text": "scenarios we were originally looking at another one would be a protocol translation gateway so maybe you discover a usb camera and a broker",
    "start": "524080",
    "end": "531279"
  },
  {
    "text": "that's this long running pod advertises as an ip camera and so out of this came the term broker",
    "start": "531279",
    "end": "538560"
  },
  {
    "text": "being for the workloads that occurs controller automatically deploys on your behalf to discovered devices",
    "start": "538560",
    "end": "544959"
  },
  {
    "text": "however um as archery evolved there became a desire to have single task",
    "start": "544959",
    "end": "550399"
  },
  {
    "text": "kubernetes jobs deployed to discover devices and so in our latest released awkry",
    "start": "550399",
    "end": "556480"
  },
  {
    "text": "version 0.8.4 we added support for deploying kubernetes jobs to discover devices so",
    "start": "556480",
    "end": "563040"
  },
  {
    "text": "this opens up the world for more management scenarios for rockery and so those are kind of the two buckets to",
    "start": "563040",
    "end": "568720"
  },
  {
    "text": "kind of focus in when thinking about using ocarin you can use awkward to of course discover devices and then beyond",
    "start": "568720",
    "end": "574240"
  },
  {
    "text": "that you can use operate to either use devices kind of process information from devices or to manage devices via its new",
    "start": "574240",
    "end": "581519"
  },
  {
    "text": "support for kubernetes jobs and so we're going to highlight both of those scenarios in the end with our demo",
    "start": "581519",
    "end": "588399"
  },
  {
    "text": "so let's look at some common let's look at a iot um scenario on the edge and talk about",
    "start": "588399",
    "end": "595120"
  },
  {
    "text": "how you could do it today without ocry and then we'll look at how you can use these iot devices um",
    "start": "595120",
    "end": "601839"
  },
  {
    "text": "in a more abstracted way with ocarin so",
    "start": "601839",
    "end": "607360"
  },
  {
    "text": "in this scenario let's say you're a farmer and um you have an issue on your farm",
    "start": "607360",
    "end": "612480"
  },
  {
    "text": "you have some coyotes that are coming in and eating your chickens and you've decided you want to solve",
    "start": "612480",
    "end": "617920"
  },
  {
    "text": "this problem and you have some um you have some i.t background so you decide to set up an iot scenario where you're",
    "start": "617920",
    "end": "624959"
  },
  {
    "text": "essentially going to install some ip cameras on your farm do some inferencing to identify the",
    "start": "624959",
    "end": "630320"
  },
  {
    "text": "coyotes and ultimately alert you that you need to go out and scare away the coyotes and save your chickens",
    "start": "630320",
    "end": "637360"
  },
  {
    "text": "so you decide to do this from the cloud and you take a microservice approach",
    "start": "637360",
    "end": "642399"
  },
  {
    "text": "deploying one frame server pod to each camera and what this frame server pod will do is it'll connect to the rtsp url",
    "start": "642399",
    "end": "649760"
  },
  {
    "text": "of a specific camera and grab the footage from that camera and basically serve it over some interface",
    "start": "649760",
    "end": "655680"
  },
  {
    "text": "so you deploy one of those for each camera and then you deploy an imprinting pod",
    "start": "655680",
    "end": "660800"
  },
  {
    "text": "that uses a gpu to do some coyote identification and then finally you have an alerting",
    "start": "660800",
    "end": "667120"
  },
  {
    "text": "pod that will ultimately tell you to go out and scare away the coyotes so this is all doable and however you're",
    "start": "667120",
    "end": "674320"
  },
  {
    "text": "on a farm it's um on the edge and maybe you have some latency issues or maybe you want to follow the law laws of data",
    "start": "674320",
    "end": "681200"
  },
  {
    "text": "gravity and process data closer to where it originates so you decide you are going to install a",
    "start": "681200",
    "end": "687279"
  },
  {
    "text": "server directly on your farm and you're optimistic about scaling out your farm maybe you think you're going",
    "start": "687279",
    "end": "692959"
  },
  {
    "text": "to add some fields or add some chicken coops where you might need another server so you go ahead and add it to a",
    "start": "692959",
    "end": "698079"
  },
  {
    "text": "kubernetes cluster to easily scale out your deployment um we can walk through the same um",
    "start": "698079",
    "end": "706079"
  },
  {
    "text": "setup that we had in the cloud and let's look to the right of the screen and see kind of the steps involved with this so",
    "start": "706079",
    "end": "712480"
  },
  {
    "text": "that we can see how they change with ocry so now one thing to note is the only",
    "start": "712480",
    "end": "717519"
  },
  {
    "text": "information that's going to the cloud is that final alerting information the rest is being processed locally on the edge",
    "start": "717519",
    "end": "724720"
  },
  {
    "text": "so we do the same thing we deploy a frame server to each camera manually configuring exactly what camera",
    "start": "724720",
    "end": "731600"
  },
  {
    "text": "it should be grabbing frames from then we deploy an imprinting pod and that imprinting pod needs to know how to",
    "start": "731600",
    "end": "738320"
  },
  {
    "text": "find that gpu and connect to it it needs to know how to pull the information from each of the frame server pods",
    "start": "738320",
    "end": "744560"
  },
  {
    "text": "and then it'll pass the information off to the alerting pod this is all doable again it only took",
    "start": "744560",
    "end": "750800"
  },
  {
    "text": "four steps that's not horrible but what happens as the environment changes what happens if a camera goes down so now",
    "start": "750800",
    "end": "758240"
  },
  {
    "text": "that frame server may be erroring um and maybe you need to send someone out into the field to fix that camera to get",
    "start": "758240",
    "end": "764800"
  },
  {
    "text": "that server back running or maybe you need to manually bring down that frame server",
    "start": "764800",
    "end": "770160"
  },
  {
    "text": "what happens is if you add one two three cameras to your environment scale out your iot deployment well you need to go",
    "start": "770160",
    "end": "777519"
  },
  {
    "text": "and manually deploy each frame server and configure it to talk to the appropriate camera",
    "start": "777519",
    "end": "783120"
  },
  {
    "text": "say you do in fact um get another chicken coop install another node",
    "start": "783120",
    "end": "788560"
  },
  {
    "text": "well you need to now deploy another inferencing pod to gain the advantages of another gpu",
    "start": "788560",
    "end": "795760"
  },
  {
    "text": "and attach that to your learning pod so one thing to note here is as the environment continues to change you'll",
    "start": "795760",
    "end": "801519"
  },
  {
    "text": "need to continue to interact with the cluster and make management interactions",
    "start": "801519",
    "end": "806639"
  },
  {
    "text": "however we'll see that with ocry all you need to do is three initial configuration steps",
    "start": "806639",
    "end": "812800"
  },
  {
    "text": "and then the environment can continue to change you can continue to scale up and scale down your iot deployment and ocre",
    "start": "812800",
    "end": "819519"
  },
  {
    "text": "will adjust on your behalf so let's look at that same setup we had previously",
    "start": "819519",
    "end": "826320"
  },
  {
    "text": "but you'll note that our first step here was installing ocari and you can do that via helm which is",
    "start": "826320",
    "end": "831680"
  },
  {
    "text": "basically the package manager for kubernetes so now that we have helm uh sorry now that we have ocry installed on our",
    "start": "831680",
    "end": "838240"
  },
  {
    "text": "cluster which is that green box um we can go ahead and tell aukri what to find",
    "start": "838240",
    "end": "843839"
  },
  {
    "text": "and what to deploy to what it finds and you do that via ocry's custom resource definition called a configuration",
    "start": "843839",
    "end": "850959"
  },
  {
    "text": "so in the configuration there's two main sections to look at the first is the discovery handler and",
    "start": "850959",
    "end": "857040"
  },
  {
    "text": "that's what we were talking about earlier it's the protocol discovery protocol that you want aucry to use to",
    "start": "857040",
    "end": "862160"
  },
  {
    "text": "find your devices so in this case we're specifying onbiff to find these ip cameras",
    "start": "862160",
    "end": "867760"
  },
  {
    "text": "not depicted here you can also add some filters then you want to specify what broker or",
    "start": "867760",
    "end": "874079"
  },
  {
    "text": "what workloads you want deployed automatically to discovered cameras so",
    "start": "874079",
    "end": "879440"
  },
  {
    "text": "here we're going to specify for the ip cameras we want to deploy a frame server to each camera",
    "start": "879440",
    "end": "886000"
  },
  {
    "text": "so after applying that to your cluster ocry will discover the cameras and automatically deploy a frame server",
    "start": "886000",
    "end": "892800"
  },
  {
    "text": "to each camera what you'll also see is and then it provisions each of those frame servers to connect to a specific",
    "start": "892800",
    "end": "899839"
  },
  {
    "text": "camera it does all that for you what you'll also see is this larger blue box that represents a service layer so",
    "start": "899839",
    "end": "907040"
  },
  {
    "text": "aubry can also automate the creation of services it can create services for each device or each broker and it can also",
    "start": "907040",
    "end": "913839"
  },
  {
    "text": "create a service that contains the output of all the brokers or devices of a configuration so you'll see here it's",
    "start": "913839",
    "end": "919839"
  },
  {
    "text": "the latter one we have one service that can be pointed to to get all the frames from all the cameras and that's",
    "start": "919839",
    "end": "926320"
  },
  {
    "text": "ultimately the service that the inferencing pod can point to um and know exactly how to get all those frames",
    "start": "926320",
    "end": "933759"
  },
  {
    "text": "speaking of the inferencing pod we can now go ahead and configure ocry to discover",
    "start": "933759",
    "end": "939040"
  },
  {
    "text": "a gpu using ocry's uw discovery handler and then deploy an imprinting pod so",
    "start": "939040",
    "end": "944800"
  },
  {
    "text": "this is just another configuration after applying that to the cluster ocari will find the gpu",
    "start": "944800",
    "end": "951920"
  },
  {
    "text": "deploy an inferencing pod and now we have our entire setup",
    "start": "951920",
    "end": "956959"
  },
  {
    "text": "so what happens as the environment changes say you add cameras ocari will discover them and immediately deploy frame",
    "start": "956959",
    "end": "963600"
  },
  {
    "text": "servers say you add a node aqua will detect the new gpu and immediately",
    "start": "963600",
    "end": "968639"
  },
  {
    "text": "deploy another inferencing pod so you can see the environment can continue to change but we're only going to have",
    "start": "968639",
    "end": "974000"
  },
  {
    "text": "those original three steps so this really illustrates all together how awkward can simplify device use on",
    "start": "974000",
    "end": "980480"
  },
  {
    "text": "the edge let's look at that second bucket that we talked about which was device management",
    "start": "980480",
    "end": "987519"
  },
  {
    "text": "so same scenario we had previously but now our objective is to not only use the devices but also",
    "start": "987519",
    "end": "993839"
  },
  {
    "text": "manage them so in this case we want to perform a firmer upgrade of these cameras",
    "start": "993839",
    "end": "999279"
  },
  {
    "text": "you can see we've added here at the bottom the firmware version let's say they're all at version one and our goal",
    "start": "999279",
    "end": "1004399"
  },
  {
    "text": "is to get them to firmware version two so we can do this once again with another awkry configuration",
    "start": "1004399",
    "end": "1010880"
  },
  {
    "text": "in this case once again we're using onvif because we're discovering the ip cameras and our workload now is going to be a",
    "start": "1010880",
    "end": "1017440"
  },
  {
    "text": "job um with a specified image that is a firmware upgrade so once you apply that to your cluster",
    "start": "1017440",
    "end": "1024558"
  },
  {
    "text": "you'll see we now have an upgrade job deployed to each camera and the result will be that the cameras went to version",
    "start": "1024559",
    "end": "1031280"
  },
  {
    "text": "two and this is actually really similar to the demo that we're going to show at the end of this talk it's going to show a",
    "start": "1031280",
    "end": "1037839"
  },
  {
    "text": "use scenario and then we're going to perform a firmware upgrade on these cameras",
    "start": "1037839",
    "end": "1043039"
  },
  {
    "text": "so let's zoom in to what that green box was in our scenarios being awkry and look at",
    "start": "1043760",
    "end": "1049600"
  },
  {
    "text": "its architecture a little so ocari has an agent that runs on every single node in the cluster and a",
    "start": "1049600",
    "end": "1056000"
  },
  {
    "text": "controller that runs on the control plane the agent does the work of discovering the nodes sorry discovering",
    "start": "1056000",
    "end": "1061919"
  },
  {
    "text": "the iot devices and creating kubernetes resources to represent them and the controller does the work of deploying",
    "start": "1061919",
    "end": "1068880"
  },
  {
    "text": "your specified brokers to the discover devices so the flow of this as we saw the first",
    "start": "1068880",
    "end": "1076160"
  },
  {
    "text": "step is to install ocry's first custom resource definition it's configuration and as you mentioned earlier in that",
    "start": "1076160",
    "end": "1082480"
  },
  {
    "text": "configuration you specify what you want to find via the discovery handler",
    "start": "1082480",
    "end": "1087679"
  },
  {
    "text": "and you specify what you want to deploy to what you find via the broker and then you can also here specify some services",
    "start": "1087679",
    "end": "1094640"
  },
  {
    "text": "that you want automatically deployed once a configuration is applied the agent will look across the network",
    "start": "1094640",
    "end": "1101120"
  },
  {
    "text": "locally on the node attached to the node etc it will tell the discovery handler to look for those devices",
    "start": "1101120",
    "end": "1107120"
  },
  {
    "text": "for each device that's discovered it'll create a kubernetes resource to represent that device",
    "start": "1107120",
    "end": "1112400"
  },
  {
    "text": "using the device plug-in framework and it will also create a second custom resource definition the instance to",
    "start": "1112400",
    "end": "1118720"
  },
  {
    "text": "represent that device and the instance not only represents the device but it also represents what nodes",
    "start": "1118720",
    "end": "1124640"
  },
  {
    "text": "can see the device it also has a list of what workloads are currently using the",
    "start": "1124640",
    "end": "1130400"
  },
  {
    "text": "device and it even has connectivity information in it so for example for an ip camera it",
    "start": "1130400",
    "end": "1136160"
  },
  {
    "text": "would have the ip address mac address rtsp url all the information that a",
    "start": "1136160",
    "end": "1141440"
  },
  {
    "text": "broker would need in order to know what device to connect to",
    "start": "1141440",
    "end": "1147200"
  },
  {
    "text": "then the awkry controller will see an instance that's been created for a device and it will deploy",
    "start": "1147200",
    "end": "1153520"
  },
  {
    "text": "the broker you specified in your configuration to one of the nodes that can see that device",
    "start": "1153520",
    "end": "1159520"
  },
  {
    "text": "and that broker will connect to the device take whatever actions it was intended to do",
    "start": "1159520",
    "end": "1166160"
  },
  {
    "text": "one thing to note is that this broker and this diagram we put the word custom broker because that's really what you",
    "start": "1166160",
    "end": "1172000"
  },
  {
    "text": "bring to ocari we've created this platform for discovering and automating the deployment and then it is your",
    "start": "1172000",
    "end": "1177760"
  },
  {
    "text": "workload that we will deploy on your behalf and so in our demos there are samples that we've created but this",
    "start": "1177760",
    "end": "1184000"
  },
  {
    "text": "could really be anything that you intend to do with a device",
    "start": "1184000",
    "end": "1189279"
  },
  {
    "text": "and all of this is kicked off via an installation with helm which as i mentioned earlier is the package manager",
    "start": "1189919",
    "end": "1195679"
  },
  {
    "text": "for kubernetes and we can break down this installation a little and see that by default the",
    "start": "1195679",
    "end": "1202320"
  },
  {
    "text": "awkward controller and agent are installed and then you can additionally set what discovery handlers you want",
    "start": "1202320",
    "end": "1208720"
  },
  {
    "text": "deployed to each node um and then you can build that configuration which is really just yaml via this helm",
    "start": "1208720",
    "end": "1215200"
  },
  {
    "text": "installation so you can give it a name you can specify what workload so in this case we're",
    "start": "1215200",
    "end": "1221200"
  },
  {
    "text": "specifying an upgrade broker and you can even set this um setting called capacity",
    "start": "1221200",
    "end": "1227440"
  },
  {
    "text": "and capacity is how you specify how many use a device at once",
    "start": "1227440",
    "end": "1233039"
  },
  {
    "text": "so this is really important with shared devices so say you have an ip camera that four nodes can see but you only",
    "start": "1233039",
    "end": "1240559"
  },
  {
    "text": "want three workloads using this device at once you could set this capacity to three and that would mean that only",
    "start": "1240559",
    "end": "1247440"
  },
  {
    "text": "three nodes could use this device at once even though all four can use it so it's way that you can manage um",
    "start": "1247440",
    "end": "1254080"
  },
  {
    "text": "how much um it's way you can manage not overloading a device and making sure that um it's not being um requested too",
    "start": "1254080",
    "end": "1262799"
  },
  {
    "text": "much so with that being said let's kind of",
    "start": "1262799",
    "end": "1269440"
  },
  {
    "text": "walk through the demo that we're gonna show it's gonna look pretty similar to our earlier scenarios",
    "start": "1269440",
    "end": "1276000"
  },
  {
    "text": "but you'll see our demo is going to consist of two intel nook nodes",
    "start": "1276000",
    "end": "1281440"
  },
  {
    "text": "they're both running ubuntu 20.04 and they're going to be connected via a",
    "start": "1281440",
    "end": "1286480"
  },
  {
    "text": "k3s cluster which is a common kubernetes distribution for edge scenarios",
    "start": "1286480",
    "end": "1292080"
  },
  {
    "text": "and you'll see that we'll have two ip cameras on the network and these cameras are going to be mocked iv cameras so",
    "start": "1292080",
    "end": "1298720"
  },
  {
    "text": "they're full implementations of the onvif server and um discovery service however um",
    "start": "1298720",
    "end": "1306159"
  },
  {
    "text": "we're mocking them so that they can support the um juice the update system firmware handle that's",
    "start": "1306159",
    "end": "1313520"
  },
  {
    "text": "a part of the onvif device management and so when you call out to that upgrade system",
    "start": "1313520",
    "end": "1319679"
  },
  {
    "text": "firmware these cameras will call their upgrade service which will then reboot them with an incremented firmware",
    "start": "1319679",
    "end": "1326000"
  },
  {
    "text": "version so we'll have these two ip cameras on the network and our goal is to discover",
    "start": "1326000",
    "end": "1332080"
  },
  {
    "text": "them and then um we want to use them via a streaming application so",
    "start": "1332080",
    "end": "1337200"
  },
  {
    "text": "we're going to deploy like in our first scenario frame servers to connect to the cameras grab the frames and serve them",
    "start": "1337200",
    "end": "1344799"
  },
  {
    "text": "and then we're going to ultimately have some application that's going to consume the frames from those cameras and",
    "start": "1344799",
    "end": "1349919"
  },
  {
    "text": "display them so let's walk through what that looks like so we'll install ocry with the with",
    "start": "1349919",
    "end": "1356240"
  },
  {
    "text": "an onvif configuration um and specifying a frame server broker",
    "start": "1356240",
    "end": "1362240"
  },
  {
    "text": "and we'll see that um a configuration is going to be visible in the cluster and then the agent will discover the",
    "start": "1362240",
    "end": "1368880"
  },
  {
    "text": "cameras and create two instances one for each camera and then the controller is going to",
    "start": "1368880",
    "end": "1374880"
  },
  {
    "text": "deploy those frame server pods and you'll note here that even though there's two cameras there's four frame",
    "start": "1374880",
    "end": "1380799"
  },
  {
    "text": "server pods that are gonna be deployed and that's because we're gonna set capacity to two so we're gonna allow each node to use",
    "start": "1380799",
    "end": "1388080"
  },
  {
    "text": "these cameras and the reason we want to do that is say one node were to go down it creates a highly available scenario",
    "start": "1388080",
    "end": "1394480"
  },
  {
    "text": "where the other node is still processing the camera is still grabbing frames from them and so our application will",
    "start": "1394480",
    "end": "1399600"
  },
  {
    "text": "constantly be getting the streams you'll also notice that we're going to",
    "start": "1399600",
    "end": "1405440"
  },
  {
    "text": "use the ability to automatically create services and we're going to have a service not only to point to each",
    "start": "1405440",
    "end": "1411760"
  },
  {
    "text": "individual camera's output but also to point to the output of all the cameras and our streaming application will point",
    "start": "1411760",
    "end": "1418320"
  },
  {
    "text": "to both of those services and we'll see how we'll have a feed showing all of the frames from all cameras and a feed",
    "start": "1418320",
    "end": "1424159"
  },
  {
    "text": "showing one feed from each camera as well so we'll have um created a scenario",
    "start": "1424159",
    "end": "1430320"
  },
  {
    "text": "where we have this application that's benefiting from the work offering's done and then we'll take the scenario one",
    "start": "1430320",
    "end": "1435440"
  },
  {
    "text": "step further and show how we can use ocry to manage these devices and perform a firmware upgrade so we're going to",
    "start": "1435440",
    "end": "1442159"
  },
  {
    "text": "install another configuration this one's going to be an upgrade configuration that specifies",
    "start": "1442159",
    "end": "1448000"
  },
  {
    "text": "an upgrade broker and then the controller will ultimately deploy those jobs that will do an",
    "start": "1448000",
    "end": "1454720"
  },
  {
    "text": "upgrade of these cameras and they'll go to version 2.0",
    "start": "1454720",
    "end": "1460159"
  },
  {
    "text": "great so now we can jump into the demo",
    "start": "1460159",
    "end": "1464799"
  },
  {
    "text": "and i'm going to just voice over it here and we'll go ahead and play it",
    "start": "1466240",
    "end": "1471679"
  },
  {
    "text": "so the first thing to notice in this demo is that we have these two test cameras on our network",
    "start": "1471679",
    "end": "1477760"
  },
  {
    "text": "um you can see that both of them have firmware version 1.0 and these are the cameras that we're trying to discover",
    "start": "1477760",
    "end": "1484000"
  },
  {
    "text": "and use with our streaming application and then ultimately we want to upgrade their firmware increment it up to",
    "start": "1484000",
    "end": "1489360"
  },
  {
    "text": "version two with a an upgrade job um and so the first thing we're gonna do is",
    "start": "1489360",
    "end": "1496799"
  },
  {
    "text": "look at what our cluster setup is so we'll just simply query with um",
    "start": "1496799",
    "end": "1502080"
  },
  {
    "text": "cubectl getnode which we're going to do in a second here",
    "start": "1502080",
    "end": "1508320"
  },
  {
    "text": "great and you'll see here that we have a two node cluster as we saw in our diagram running k3s version 1.21",
    "start": "1509840",
    "end": "1518000"
  },
  {
    "text": "and now we're ready to install ocry with its helm chart so we're going to",
    "start": "1518000",
    "end": "1523520"
  },
  {
    "text": "deploy our onbit discovery handlers we're going to create a configuration",
    "start": "1523520",
    "end": "1528799"
  },
  {
    "text": "and in that configuration we're specifying that we're going to first use um deploy our frame servers to",
    "start": "1528799",
    "end": "1535600"
  },
  {
    "text": "each discovered device and notice that we put capacity as 2 so we'll have a broker deployed to",
    "start": "1535600",
    "end": "1543279"
  },
  {
    "text": "each device on each node so we should have a total of four you'll see here that we have an agent and deployed to",
    "start": "1543279",
    "end": "1549200"
  },
  {
    "text": "each node and one controller and an onvif discovery handler deployed to each node we had two instances pop up one for",
    "start": "1549200",
    "end": "1555760"
  },
  {
    "text": "each camera and now um we have four pods those frame server pods that are pending",
    "start": "1555760",
    "end": "1561039"
  },
  {
    "text": "and about to start and you'll see once they started now we also have services that were created um one for each camera",
    "start": "1561039",
    "end": "1568240"
  },
  {
    "text": "those longer services and then one larger service to point to the output of all the cameras so all of that was",
    "start": "1568240",
    "end": "1574720"
  },
  {
    "text": "immediately created via r1 installation so now let's go ahead and visualize this",
    "start": "1574720",
    "end": "1581200"
  },
  {
    "text": "with our streaming application this is a sample application we created for demo purposes the only thing we're",
    "start": "1581200",
    "end": "1586480"
  },
  {
    "text": "changing here is we're specifying we want to use the onvif services and um now we can watch and confirm that",
    "start": "1586480",
    "end": "1593200"
  },
  {
    "text": "it's running quickly popped up and now we want to access this",
    "start": "1593200",
    "end": "1599600"
  },
  {
    "text": "application locally so we're just going to grab the port of it and do some port forwarding to see",
    "start": "1599600",
    "end": "1606000"
  },
  {
    "text": "it locally on the computer",
    "start": "1606000",
    "end": "1609960"
  },
  {
    "text": "so now we can finally see our camera streams you'll see that this top box is",
    "start": "1619200",
    "end": "1624320"
  },
  {
    "text": "pointing to both cameras so it's pointing to the larger service created by ocry and the top bottom two frames",
    "start": "1624320",
    "end": "1630480"
  },
  {
    "text": "are each pointing to the service for each individual camera um so at this point uh we know that",
    "start": "1630480",
    "end": "1637440"
  },
  {
    "text": "we've successfully used ocari and we have an application benefiting from the work of ocarina now we want to perform an upgrade of",
    "start": "1637440",
    "end": "1644399"
  },
  {
    "text": "these cameras so to do that we're going to install another configuration",
    "start": "1644399",
    "end": "1649679"
  },
  {
    "text": "and this time we're only installing the configuration so you'll see we're disabling",
    "start": "1649679",
    "end": "1654720"
  },
  {
    "text": "the default features of our home chart the controller the agent some are back configurations and specifying a broker job since this",
    "start": "1654720",
    "end": "1662159"
  },
  {
    "text": "is a short-lived upgrade job and specifying the image for that we created for this demo",
    "start": "1662159",
    "end": "1669600"
  },
  {
    "text": "so we're ready to go ahead and install it",
    "start": "1669600",
    "end": "1674960"
  },
  {
    "text": "and once this installs it's going to be pretty quick we're going to immediately see two jobs created one for each device",
    "start": "1681039",
    "end": "1687520"
  },
  {
    "text": "and then two pods created that are part of that job so if we look we'll see yep we have two",
    "start": "1687520",
    "end": "1692799"
  },
  {
    "text": "jobs that were immediately created and now we have two pods at the bottom there that are pending",
    "start": "1692799",
    "end": "1699679"
  },
  {
    "text": "and once they run now they're completed so that means they successfully upgraded the cameras or starting and",
    "start": "1699679",
    "end": "1706000"
  },
  {
    "text": "upgrades so as can be expected when a camera is upgrading it's going to restart so we'll see that our stream we don't",
    "start": "1706000",
    "end": "1712159"
  },
  {
    "text": "have any streams coming from the cameras for the time being and for our our firmware upgrade suite that we set up it",
    "start": "1712159",
    "end": "1719919"
  },
  {
    "text": "um simulates an upgrade by doing a 30 second timeout during the reboot",
    "start": "1719919",
    "end": "1725120"
  },
  {
    "text": "and it's going to restart the cameras um and increment their firmware version so",
    "start": "1725120",
    "end": "1730320"
  },
  {
    "text": "we'll see that these are going to come back online there they are um and if we refresh we'll see now the",
    "start": "1730320",
    "end": "1736320"
  },
  {
    "text": "firmware's at version 2.0",
    "start": "1736320",
    "end": "1740799"
  },
  {
    "text": "great so this demo showed how you can use ocry to both use these devices and",
    "start": "1741440",
    "end": "1746559"
  },
  {
    "text": "an application context and also how you can perform management actions specifically we showed firmware upgrade",
    "start": "1746559",
    "end": "1753200"
  },
  {
    "text": "via our new support of deploying kubernetes jobs",
    "start": "1753200",
    "end": "1758398"
  },
  {
    "text": "great um so let's talk about what we showed that ocari can support",
    "start": "1759279",
    "end": "1764480"
  },
  {
    "text": "and what ocari does not yet support when it comes to device management so",
    "start": "1764480",
    "end": "1769840"
  },
  {
    "text": "what we added in our latest release was the ability to add a full kubernetes job spec to offers",
    "start": "1769840",
    "end": "1776159"
  },
  {
    "text": "configuration you used to only be able to add a full kubernetes pod spec now it can be a job spec so this means that",
    "start": "1776159",
    "end": "1782960"
  },
  {
    "text": "anything you can do with kubernetes jobs you can use do with ocarina",
    "start": "1782960",
    "end": "1788000"
  },
  {
    "text": "so you can specify how many completions the job needs to have how many should run in",
    "start": "1788000",
    "end": "1793679"
  },
  {
    "text": "parallel how many times it's allowed to back off um before completely terminating and failing so",
    "start": "1793679",
    "end": "1800720"
  },
  {
    "text": "all that comes out of the box with kubernetes you can do with ocry and that's really to say like awkari is very",
    "start": "1800720",
    "end": "1806240"
  },
  {
    "text": "com 100 kubernetes native um we support and run on all kubernetes and do what kubernetes can do",
    "start": "1806240",
    "end": "1812399"
  },
  {
    "text": "um what we do not support is currently is more of a managed rollout and",
    "start": "1812399",
    "end": "1819039"
  },
  {
    "text": "um kind of configuring what how those jobs should be deployed themselves um so for example say you had",
    "start": "1819039",
    "end": "1826320"
  },
  {
    "text": "nine cameras and you wanted to upgrade three at a time we don't have a declarative way of doing that currently",
    "start": "1826320",
    "end": "1832320"
  },
  {
    "text": "what you could do though is what we didn't show is in awkwards configuration you can specify some filters in that",
    "start": "1832320",
    "end": "1838720"
  },
  {
    "text": "discovery handler section so you could use opry to discover all nine of your cameras",
    "start": "1838720",
    "end": "1844320"
  },
  {
    "text": "and then you can add filters to say okay only upgrade these cameras with these ip addresses and you could deploy that",
    "start": "1844320",
    "end": "1850960"
  },
  {
    "text": "upgrade configuration and then modify it with the next three ip addresses and then x3",
    "start": "1850960",
    "end": "1856640"
  },
  {
    "text": "um but something more declarative to say like three at a time does not yet come",
    "start": "1856640",
    "end": "1862000"
  },
  {
    "text": "with ocry another thing that we do support is you can continue like i was mentioning to",
    "start": "1862000",
    "end": "1867519"
  },
  {
    "text": "deploy multiple configurations to use different to use same devices or different devices",
    "start": "1867519",
    "end": "1872640"
  },
  {
    "text": "in different ways what we would love to support and would have been useful in this demo",
    "start": "1872640",
    "end": "1878480"
  },
  {
    "text": "is showing some of that management information in the awkward instance so you saw that we had to show the onvif",
    "start": "1878480",
    "end": "1884240"
  },
  {
    "text": "device manager to look at the firmware version of these cameras well it would be great if all of that information such",
    "start": "1884240",
    "end": "1890960"
  },
  {
    "text": "as the firmware version was in the operating instance it's well itself along with that connectivity",
    "start": "1890960",
    "end": "1896799"
  },
  {
    "text": "information so with that being said um that is the",
    "start": "1896799",
    "end": "1902960"
  },
  {
    "text": "content of what i wanted to share with regards to device use and management with ocari",
    "start": "1902960",
    "end": "1908480"
  },
  {
    "text": "if you're interested in learning more our documentation website there docs.ocary.sh",
    "start": "1908480",
    "end": "1914080"
  },
  {
    "text": "will kind of lead you to all the important resources namely our github our slack",
    "start": "1914080",
    "end": "1919360"
  },
  {
    "text": "and on it you can find some demos so we have our signature demo is it helps you set",
    "start": "1919360",
    "end": "1925919"
  },
  {
    "text": "up some mock usb cameras discover and view them with that same streaming application we showed in our demo",
    "start": "1925919",
    "end": "1932320"
  },
  {
    "text": "if you want to reproduce this demo including the mock ip camera setup and the firmware upgrade suite",
    "start": "1932320",
    "end": "1938559"
  },
  {
    "text": "um i threw together a hackmd that that models this demo um so this is that's at",
    "start": "1938559",
    "end": "1943600"
  },
  {
    "text": "the bottom of the slide feel free to check that out um and we may move that to our documentation site and make it more of",
    "start": "1943600",
    "end": "1950240"
  },
  {
    "text": "an official demo and then finally uh we have a slack on the kubernetes slack um it's the ocry",
    "start": "1950240",
    "end": "1957279"
  },
  {
    "text": "channel um and we do monthly zooms which was actually this morning so um next month",
    "start": "1957279",
    "end": "1962799"
  },
  {
    "text": "uh feel free to hop on and discuss there and then if you want more of an overview",
    "start": "1962799",
    "end": "1968080"
  },
  {
    "text": "of akri another um introduction we presented at kubecon europe last year",
    "start": "1968080",
    "end": "1974320"
  },
  {
    "text": "and that included a bit more detail on our discovery handler interface so if you're interested in what does that grpc",
    "start": "1974320",
    "end": "1981039"
  },
  {
    "text": "interface look like and what was the motivation behind it that talk would be a great reference for that",
    "start": "1981039",
    "end": "1986720"
  },
  {
    "text": "um so with that said we have plenty of time for questions and i can go ahead and start looking",
    "start": "1986720",
    "end": "1993519"
  },
  {
    "text": "through the chat now and please continue to add questions",
    "start": "1993519",
    "end": "1998799"
  },
  {
    "text": "there um looks like we have a couple if you want to dig in",
    "start": "2002840",
    "end": "2008320"
  },
  {
    "text": "awesome yeah i hope people ended up being able to hear me um",
    "start": "2008320",
    "end": "2014080"
  },
  {
    "text": "check and see yeah um so with one of the supports uh one of the questions we got from james liu was does awkry support",
    "start": "2014799",
    "end": "2022320"
  },
  {
    "text": "discovering iot device devices using modbus so currently we only support uw",
    "start": "2022320",
    "end": "2027840"
  },
  {
    "text": "opcway and onvif but modbus is definitely something we've thought about supporting and there's been some",
    "start": "2027840",
    "end": "2033679"
  },
  {
    "text": "discussion around it and it certainly we could support so um if that's something",
    "start": "2033679",
    "end": "2038799"
  },
  {
    "text": "you're interested in um contributing please check out the link that i showed earlier or go to",
    "start": "2038799",
    "end": "2045320"
  },
  {
    "text": "docs.org.sh and it'll get you there um",
    "start": "2045320",
    "end": "2050399"
  },
  {
    "text": "yeah related to the previous question um",
    "start": "2050720",
    "end": "2056158"
  },
  {
    "text": "so zerocomp was another one um so yeah we have someone contributing to zerocomp",
    "start": "2056159",
    "end": "2062240"
  },
  {
    "text": "they um kind of they took a break from the implementation but they got really far",
    "start": "2062240",
    "end": "2068560"
  },
  {
    "text": "um one of the issues we had with ziracomp is um so zircon is essentially mdns so um",
    "start": "2068560",
    "end": "2075919"
  },
  {
    "text": "device device communication with a discovery service on top of it and that discovery service um",
    "start": "2075919",
    "end": "2083118"
  },
  {
    "text": "it uses the hobby demon which is kind of bulky and so we had to pause on that",
    "start": "2083119",
    "end": "2089440"
  },
  {
    "text": "implementation because at the time when it was being supported our discovery handlers were embedded in the agent so",
    "start": "2089440",
    "end": "2095679"
  },
  {
    "text": "adding support for zerocomp really bulked up the size of our agent um and so we paused there but now that",
    "start": "2095679",
    "end": "2102400"
  },
  {
    "text": "our model is extend uh we have our new extensibility model and our discovery handlers running their own pods it's a",
    "start": "2102400",
    "end": "2108240"
  },
  {
    "text": "really good time to circle back to that implementation um that pr um should be revived and if you're interested in",
    "start": "2108240",
    "end": "2114960"
  },
  {
    "text": "reviving that please go to our github and check that out um it would be",
    "start": "2114960",
    "end": "2120640"
  },
  {
    "text": "good to get some more momentum behind that implementation it's definitely something that we got really far with",
    "start": "2120640",
    "end": "2126000"
  },
  {
    "text": "there's even like a proposal up on describing the motivation behind it and everything on our documentation",
    "start": "2126000",
    "end": "2132880"
  },
  {
    "text": "um thank you um tobias for providing the hack and d link that i put here",
    "start": "2132880",
    "end": "2138320"
  },
  {
    "text": "um another question can we deploy the different application",
    "start": "2138320",
    "end": "2144160"
  },
  {
    "text": "pods based on the camera property or capability um but okay great um so",
    "start": "2144160",
    "end": "2150880"
  },
  {
    "text": "say that you have different cameras um so",
    "start": "2150880",
    "end": "2156400"
  },
  {
    "text": "maybe you have a camera at your house um one's at the front door and one's at the back door and you want a different",
    "start": "2156400",
    "end": "2162560"
  },
  {
    "text": "broker deployed to the one at the front door as the one deployed at the back door um if",
    "start": "2162560",
    "end": "2168320"
  },
  {
    "text": "currently with our onbiff discovery handler the information it gets from a device",
    "start": "2168320",
    "end": "2173359"
  },
  {
    "text": "i believe is ip address mac address and application and camera name",
    "start": "2173359",
    "end": "2179040"
  },
  {
    "text": "so if you were to name your cameras differently so maybe you named all the cameras that",
    "start": "2179040",
    "end": "2184640"
  },
  {
    "text": "needed one broker one thing and all the cameras that needed another broker another thing um you could create two",
    "start": "2184640",
    "end": "2190400"
  },
  {
    "text": "different configurations to deploy different brokers to each of them um beyond that um other details like",
    "start": "2190400",
    "end": "2198720"
  },
  {
    "text": "um deploying brokers to ones that had oh we also have scopes that's another thing with ip",
    "start": "2198720",
    "end": "2205440"
  },
  {
    "text": "cameras so um you can query any scope on the camera and kind of filter it down what devices you're targeting that way",
    "start": "2205440",
    "end": "2211680"
  },
  {
    "text": "so you could add a scope um to target them that way and if there's anything that our",
    "start": "2211680",
    "end": "2217280"
  },
  {
    "text": "discovery handler doesn't um make specific enough that you would want to add like extra filtering um that's also",
    "start": "2217280",
    "end": "2224480"
  },
  {
    "text": "a feature request that you could add on ocari if there was something else that you wanted to target more devices that were more",
    "start": "2224480",
    "end": "2230480"
  },
  {
    "text": "specific um is anyone working on building energy",
    "start": "2230480",
    "end": "2235599"
  },
  {
    "text": "management applications without create like bachnet um or bacnet i'm not familiar with bacnet maybe if someone in",
    "start": "2235599",
    "end": "2242720"
  },
  {
    "text": "the chat wants to add more context there um but uh energy management application so",
    "start": "2242720",
    "end": "2250079"
  },
  {
    "text": "my assumption based on what this question is is maybe you have a broker that's monitoring the consumption or use",
    "start": "2250079",
    "end": "2256560"
  },
  {
    "text": "of a device um that would be a long running pod maybe you're doing some ml there to kind of",
    "start": "2256560",
    "end": "2264560"
  },
  {
    "text": "warn you hey this device is using too much energy at the moment or just to kind of gather data on energy",
    "start": "2264560",
    "end": "2270400"
  },
  {
    "text": "management i could see that being a scenario i'm not even sure if that's what you're asking about since i'm not familiar with bacnet but um would love",
    "start": "2270400",
    "end": "2277920"
  },
  {
    "text": "to hear more about that and maybe if you want to start a conversation about that james you can add an issue",
    "start": "2277920",
    "end": "2284560"
  },
  {
    "text": "on ocry um and we can have more of a conversation and kind of look at it",
    "start": "2284560",
    "end": "2290480"
  },
  {
    "text": "more in detail and people in the community can pitch in there too also our slack would be a good place to throw that question",
    "start": "2290480",
    "end": "2298320"
  },
  {
    "text": "um okay so another question um is awkari similar to digital twin",
    "start": "2298320",
    "end": "2304640"
  },
  {
    "text": "we get that question a lot you didn't read too much into ocari um so the idea",
    "start": "2304640",
    "end": "2309839"
  },
  {
    "text": "behind digital twins is that you kind of create a representation of a device so",
    "start": "2309839",
    "end": "2316079"
  },
  {
    "text": "you have um a device and it has all these different",
    "start": "2316079",
    "end": "2322000"
  },
  {
    "text": "settings or maybe the digital twin states what firmware the device should have maybe it's states we're talking i",
    "start": "2322000",
    "end": "2328880"
  },
  {
    "text": "pre camera context maybe it states um what zoom it should have all these things and then the assumption is as you",
    "start": "2328880",
    "end": "2335440"
  },
  {
    "text": "modify the digital twin um there'll be some kind of um workload that's working",
    "start": "2335440",
    "end": "2342320"
  },
  {
    "text": "near the device that will make sure that it manages the device to match that digital twin um there are similarities",
    "start": "2342320",
    "end": "2348400"
  },
  {
    "text": "there um the main thing with awkrays that it adds in that",
    "start": "2348400",
    "end": "2354240"
  },
  {
    "text": "discovery part and it is kubernetes native so ocari is",
    "start": "2354240",
    "end": "2359520"
  },
  {
    "text": "for kubernetes run on kubernetes and we didn't really get into this detail but the underlying implementation of ocry is",
    "start": "2359520",
    "end": "2366560"
  },
  {
    "text": "it uses the device plug-in interface so how the device plug-in interface works is it really was intended for",
    "start": "2366560",
    "end": "2373839"
  },
  {
    "text": "static devices so like gpus embedded in servers um but we took it further and used it",
    "start": "2373839",
    "end": "2380480"
  },
  {
    "text": "for network and shared devices um and because of that you have this like kubernetes",
    "start": "2380480",
    "end": "2385839"
  },
  {
    "text": "presentation of a device um and that leads to a scenario where you could um with pods you can request",
    "start": "2385839",
    "end": "2393119"
  },
  {
    "text": "cpu and memory and with ocry enable scenarios where you can request an ip camera um so it does have circling back",
    "start": "2393119",
    "end": "2401200"
  },
  {
    "text": "it has a similar feels digital twin um but there's a lot more kubernetes um to",
    "start": "2401200",
    "end": "2406880"
  },
  {
    "text": "it um",
    "start": "2406880",
    "end": "2412240"
  },
  {
    "text": "an implement do you happen to have a whole implementation list that support the discovery interface um that would be great to have because",
    "start": "2412240",
    "end": "2419920"
  },
  {
    "text": "we know that we support the three that i've mentioned a few times but um i'm not sure how many",
    "start": "2419920",
    "end": "2425839"
  },
  {
    "text": "people in the um community have their own so i think some people have worked on mqtt i feel",
    "start": "2425839",
    "end": "2432319"
  },
  {
    "text": "like there was another one that i hadn't heard of that someone was working on and it'd be great kind of you know how there's um",
    "start": "2432319",
    "end": "2438400"
  },
  {
    "text": "supported kubernetes clients in different languages it would be nice to have a list of like this is what other",
    "start": "2438400",
    "end": "2443680"
  },
  {
    "text": "community members are providing um but we don't have that um currently",
    "start": "2443680",
    "end": "2450079"
  },
  {
    "text": "um does ocry implement uh integrate with the cd solutions um like rancher fleet",
    "start": "2451520",
    "end": "2458400"
  },
  {
    "text": "if yes can we claim that implementing different rollout strategies is just a matter of configuration in fleet um i",
    "start": "2458400",
    "end": "2464400"
  },
  {
    "text": "haven't used rancher fleet um i would imagine um k3s as a rancher product um",
    "start": "2464400",
    "end": "2471359"
  },
  {
    "text": "we should be able to implement uh integrate with it so ocarina can run on um ideally any kubernetes we run all of",
    "start": "2471359",
    "end": "2478000"
  },
  {
    "text": "our end tests on microcase under kubernetes we've tested on k zeros",
    "start": "2478000",
    "end": "2483680"
  },
  {
    "text": "aks um eks um i would assume it can run on ranchers solutions um with rancher fleet if it's",
    "start": "2483680",
    "end": "2491680"
  },
  {
    "text": "continuous deployment solutions um so basically you're saying",
    "start": "2491680",
    "end": "2497040"
  },
  {
    "text": "have rancher fleet do the work of the deployment um so basically the",
    "start": "2497040",
    "end": "2504480"
  },
  {
    "text": "ocarina agent could do all the discovery and resource creation and then maybe you would use rancher fleet to do your",
    "start": "2504480",
    "end": "2511359"
  },
  {
    "text": "deployment scenarios that's that probably is very possible and very powerful um so the controller and agent",
    "start": "2511359",
    "end": "2519040"
  },
  {
    "text": "are completely independent and so say rancher fleet had a way of watching for crds",
    "start": "2519040",
    "end": "2524800"
  },
  {
    "text": "um and taking actions based on that that may be a really um useful tool for my",
    "start": "2524800",
    "end": "2530480"
  },
  {
    "text": "kind of honing into what management could look like with ocari so if you're interested in trying that out i would love to see where that goes",
    "start": "2530480",
    "end": "2537520"
  },
  {
    "text": "um thank you for the clarification on bacnet building automation control net anyone else is curious about it i would",
    "start": "2537520",
    "end": "2543920"
  },
  {
    "text": "love to look into that a little bit more um and",
    "start": "2543920",
    "end": "2552480"
  },
  {
    "text": "so roadmap um another so we had a comment um about ocari being kind of",
    "start": "2555440",
    "end": "2561680"
  },
  {
    "text": "like service discovery with kubernetes um yeah i think that is a fair summary of",
    "start": "2561680",
    "end": "2567359"
  },
  {
    "text": "what awkry is um using ocry with azure digital twin",
    "start": "2567359",
    "end": "2572720"
  },
  {
    "text": "um we've had an issue up on ocarie with that um and there is definitely some power there",
    "start": "2572720",
    "end": "2579920"
  },
  {
    "text": "um but we have not taken uh steps towards that currently",
    "start": "2579920",
    "end": "2585599"
  },
  {
    "text": "um yeah i think we got through most of the questions there um",
    "start": "2585599",
    "end": "2592400"
  },
  {
    "text": "feel free i'll all settle in for another few minutes i mean we have",
    "start": "2592400",
    "end": "2597680"
  },
  {
    "text": "until the end of the hour but if people are still um chewing over some questions",
    "start": "2597680",
    "end": "2602960"
  },
  {
    "text": "feel free to post them here we can wait a couple more minutes and then we might just end a little early and i believe um",
    "start": "2602960",
    "end": "2609839"
  },
  {
    "text": "libby mentioned that there's a slack we can go to to continue to chat um or edric actually posted the link to ocry",
    "start": "2609839",
    "end": "2616960"
  },
  {
    "text": "slack where you can continue to join a conversation as well",
    "start": "2616960",
    "end": "2624640"
  },
  {
    "text": "awesome i did just post the slack link for cncf",
    "start": "2627200",
    "end": "2632720"
  },
  {
    "text": "as well so there's plenty of places for everyone to get the info they're looking for",
    "start": "2632720",
    "end": "2639838"
  },
  {
    "text": "are there any other questions",
    "start": "2640160",
    "end": "2643520"
  },
  {
    "text": "all right well thank you everyone for joining us kate thank you so much for your webinar",
    "start": "2647040",
    "end": "2653920"
  },
  {
    "text": "and all your great content um everyone hit her up at the all of the handles and",
    "start": "2653920",
    "end": "2660880"
  },
  {
    "text": "links that are provided and um join us again for another cncf live",
    "start": "2660880",
    "end": "2666560"
  },
  {
    "text": "webinar and uh we'll see you all next time and thanks again oh wait one more",
    "start": "2666560",
    "end": "2675400"
  },
  {
    "text": "um okay great last question um can you discuss what the community",
    "start": "2676880",
    "end": "2682640"
  },
  {
    "text": "has been doing with ocry and um",
    "start": "2682640",
    "end": "2687760"
  },
  {
    "text": "in pillars or production um so what has awkward been doing what",
    "start": "2687760",
    "end": "2693440"
  },
  {
    "text": "production scenarios have been used with ocari um yeah so we currently um were a pre-release so",
    "start": "2693440",
    "end": "2701839"
  },
  {
    "text": "we don't have any production solutions a lot of what's going on right now is in the research space so there's um",
    "start": "2701839",
    "end": "2708079"
  },
  {
    "text": "research communities that are trying out ocarina with devices um and a lot of our demos are kind of in",
    "start": "2708079",
    "end": "2714240"
  },
  {
    "text": "that research mode but there hasn't been production scenarios that i'm aware of right now we're kind of in that um specking out",
    "start": "2714240",
    "end": "2720800"
  },
  {
    "text": "phase where people are kind of bringing their ideas and looking at incorporating ocari um it'll take a little bit of a",
    "start": "2720800",
    "end": "2726560"
  },
  {
    "text": "push um some community involvement to get us to a place where we are fully release ready",
    "start": "2726560",
    "end": "2733280"
  },
  {
    "text": "and there are production scenarios",
    "start": "2733280",
    "end": "2737040"
  },
  {
    "text": "awesome well i think with that last question um thank you for having me libby and um for",
    "start": "2741599",
    "end": "2750079"
  },
  {
    "text": "letting us talk about akri and i appreciate all the great questions this is awesome thank you all so much",
    "start": "2750079",
    "end": "2756000"
  },
  {
    "text": "and we will see you next time everybody have a great afternoon",
    "start": "2756000",
    "end": "2761720"
  }
]