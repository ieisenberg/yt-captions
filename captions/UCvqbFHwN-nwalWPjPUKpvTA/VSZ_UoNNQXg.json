[
  {
    "text": "my name is Larissa I'm a software engineer with the Adobe experience platform group",
    "start": "240",
    "end": "5580"
  },
  {
    "text": "I've been mostly developing back-end services so I'm an application developer but I've always had an interest in",
    "start": "5580",
    "end": "12540"
  },
  {
    "text": "Automation and just making it easier for application developer to experiment new",
    "start": "12540",
    "end": "17760"
  },
  {
    "text": "stuff and I have here my colleague hello hopefully you can hear me my name",
    "start": "17760",
    "end": "23340"
  },
  {
    "text": "is januz I also work for Adobe as an architect wanted to say that I'm really excited to",
    "start": "23340",
    "end": "28859"
  },
  {
    "text": "be here and had some had the chance to witness some really great talks at",
    "start": "28859",
    "end": "34140"
  },
  {
    "text": "kubecon So today we're here to talk about some of our experience with GitHub set Adobe",
    "start": "34140",
    "end": "40200"
  },
  {
    "text": "take it away so our story towards GitHub started in",
    "start": "40200",
    "end": "46700"
  },
  {
    "text": "2020 2019 apparently with this migration to kubernetes then but this is also true",
    "start": "46700",
    "end": "54180"
  },
  {
    "text": "today teams could get direct access to clusters so they started bringing and",
    "start": "54180",
    "end": "59760"
  },
  {
    "text": "maintaining their own deployment tools such as Spinnaker and sybol Jenkins maybe you had this problem also if",
    "start": "59760",
    "end": "66960"
  },
  {
    "text": "you're coming from a big company I at least heard it this week a few times that people are consolidating their CI",
    "start": "66960",
    "end": "73200"
  },
  {
    "text": "CD on top of a single Tech stack so Adobe wanted to do the same so last year",
    "start": "73200",
    "end": "79280"
  },
  {
    "text": "this migration towards let's say kubernetes native patterns and tools",
    "start": "79280",
    "end": "85439"
  },
  {
    "text": "such as githubs and Argo CD started uh the thing is that before Argo CD",
    "start": "85439",
    "end": "91920"
  },
  {
    "text": "we've built over and over fully automated deployment Pipelines that would deploy to production in a safe",
    "start": "91920",
    "end": "98400"
  },
  {
    "text": "quick and recoverable Manner and we kind of developed those practices and we wanted to take those practices with us",
    "start": "98400",
    "end": "104759"
  },
  {
    "text": "in this github's journey so I'm going to spend some time",
    "start": "104759",
    "end": "110040"
  },
  {
    "text": "um going a bit to through some practices that are foundational for us for our",
    "start": "110040",
    "end": "115200"
  },
  {
    "text": "cicd and then we will go through the main let's say topics of these talks uh",
    "start": "115200",
    "end": "120659"
  },
  {
    "text": "some tips about the challenges uh we found ourselves into and some tips about",
    "start": "120659",
    "end": "126479"
  },
  {
    "text": "managing infrastructure so some of the foundational uh practices are well the",
    "start": "126479",
    "end": "133800"
  },
  {
    "text": "first one we are doing trunk-based development we have a single long-lived branch and with githubs we handle environments",
    "start": "133800",
    "end": "141180"
  },
  {
    "text": "as directories in that branch the second one is that we are promoting",
    "start": "141180",
    "end": "146760"
  },
  {
    "text": "our code automatically through environments we deploy to dev then to Stage then to prod",
    "start": "146760",
    "end": "153000"
  },
  {
    "text": "stopping the line if something fails now if environments are directories in git",
    "start": "153000",
    "end": "159720"
  },
  {
    "text": "promotion is going to be about orchestrating commits between git pads",
    "start": "159720",
    "end": "165360"
  },
  {
    "text": "and although there is no automated promotion in Argo CD and there is neither automated rollback we do that",
    "start": "165360",
    "end": "171660"
  },
  {
    "text": "with Argo workflows uh also if something fails I don't just",
    "start": "171660",
    "end": "177599"
  },
  {
    "text": "want to stop the line I want to recover as fast as possible from that so uh we",
    "start": "177599",
    "end": "183540"
  },
  {
    "text": "want to instantly roll back and if promotion our git commits rolling back",
    "start": "183540",
    "end": "188580"
  },
  {
    "text": "is going to be about uh reverting those git commits and you can see on the right side of the screen uh how a",
    "start": "188580",
    "end": "196319"
  },
  {
    "text": "rollback actually looks for one of our repositories today so I'm briefly going",
    "start": "196319",
    "end": "202080"
  },
  {
    "text": "through this because we already had a talk at argocon last year where we went",
    "start": "202080",
    "end": "207540"
  },
  {
    "text": "into details about all these practices especially this one and if you want to see what this workflow actually executes",
    "start": "207540",
    "end": "214980"
  },
  {
    "text": "I recommend you to go and watch that one another practice that we've been doing",
    "start": "214980",
    "end": "221220"
  },
  {
    "text": "and we've been migrating to Argo is deploying pull requests into preview environments this is very useful because",
    "start": "221220",
    "end": "227959"
  },
  {
    "text": "yeah we can test in isolation parallel features we are working as a team and it",
    "start": "227959",
    "end": "234840"
  },
  {
    "text": "also opens the gate for uh Auto merging updates such as Library updates with",
    "start": "234840",
    "end": "240720"
  },
  {
    "text": "tools such as renovate because we can make sure that those changes are",
    "start": "240720",
    "end": "245940"
  },
  {
    "text": "deployed and tested in preview before they reach the main branch so and the last two practices are all",
    "start": "245940",
    "end": "253260"
  },
  {
    "text": "about minimizing impact we have wave deployments which would we do with",
    "start": "253260",
    "end": "259199"
  },
  {
    "text": "Argo workflow dag template and the last one is about rollout rollout actually",
    "start": "259199",
    "end": "265979"
  },
  {
    "text": "helps us a lot because we can now bring Progressive deployments Progressive",
    "start": "265979",
    "end": "271160"
  },
  {
    "text": "delivery to microservices that for greater set of microservices because",
    "start": "271160",
    "end": "278639"
  },
  {
    "text": "it was harder before to do this to do the setup with spinnakarina Kayenta",
    "start": "278639",
    "end": "285560"
  },
  {
    "text": "but Argo CD and githubs are very great tools to create and orchestrate",
    "start": "285720",
    "end": "293160"
  },
  {
    "text": "continuous deployment however there are some things that came out of the box with tools like Spinnaker which require",
    "start": "293160",
    "end": "300060"
  },
  {
    "text": "work in Argo and that for that work we needed to come",
    "start": "300060",
    "end": "305520"
  },
  {
    "text": "with some Creative Solutions so I'm going to walk you through some of the tips we have from the use cases",
    "start": "305520",
    "end": "312600"
  },
  {
    "text": "we've got in Adobe experience platform the first one is about",
    "start": "312600",
    "end": "318540"
  },
  {
    "text": "um service dependencies in practice you'll often need to deploy applications in a",
    "start": "318540",
    "end": "324000"
  },
  {
    "text": "particular order like you would want your infrastructure to be deployed first or the monitoring stack or the secret",
    "start": "324000",
    "end": "329699"
  },
  {
    "text": "operator and then the application I have here a very simple example with a secret",
    "start": "329699",
    "end": "335160"
  },
  {
    "text": "operator marked by the way you can do this with sync waves and the secrets operator is marked with sync wave -1",
    "start": "335160",
    "end": "342860"
  },
  {
    "text": "my application doesn't specify a sync wave and that places it in the sync wave",
    "start": "342860",
    "end": "348720"
  },
  {
    "text": "zero so it's fairly simple Argo CD is going to deploy first my secret operator and when that's healthy it's going to",
    "start": "348720",
    "end": "355740"
  },
  {
    "text": "continue with my application okay this is simple let's add some complexity with hooks",
    "start": "355740",
    "end": "362580"
  },
  {
    "text": "so I hook that part of different synchronization phases than the one you",
    "start": "362580",
    "end": "368639"
  },
  {
    "text": "just saw then the sync phase you can have multiple pre-sync hooks then the sink phase and in the end multiple post",
    "start": "368639",
    "end": "375419"
  },
  {
    "text": "think hook I added here a post think job named test it's not a random name and we",
    "start": "375419",
    "end": "383639"
  },
  {
    "text": "will see it in a few seconds and let's suppose that this job spins up some pods",
    "start": "383639",
    "end": "389759"
  },
  {
    "text": "that some pod that's running some tests and the tests are failing",
    "start": "389759",
    "end": "394919"
  },
  {
    "text": "contrary to expectation the Argo CD app health will not reflect that job",
    "start": "394919",
    "end": "402479"
  },
  {
    "text": "resource status the app will say I'm healthy I don't care for the job because",
    "start": "402479",
    "end": "407759"
  },
  {
    "text": "hooks are not desired state so Hoops are just some scripts you can use to achieve",
    "start": "407759",
    "end": "414720"
  },
  {
    "text": "a desired State they are they are transient they are created and removed over and over but they are not desired",
    "start": "414720",
    "end": "421080"
  },
  {
    "text": "state uh moreover for the same reason if you have just hooks defined and you don't",
    "start": "421080",
    "end": "427380"
  },
  {
    "text": "actually have a state to to think the hooks will not get executed",
    "start": "427380",
    "end": "433400"
  },
  {
    "text": "but I still have this use case of running tested at Adobe uh actually I",
    "start": "433400",
    "end": "438840"
  },
  {
    "text": "have the use case of running post deployment tests such as functional integrational and so on and you might",
    "start": "438840",
    "end": "444300"
  },
  {
    "text": "say wait a second you talked about Argo rollouts why would you want to run test",
    "start": "444300",
    "end": "450120"
  },
  {
    "text": "post deployment since you have rollouts and you can run them pre-deployment or even during the the deployment",
    "start": "450120",
    "end": "457400"
  },
  {
    "text": "that works fine for production for Dev actually you don't want to",
    "start": "457400",
    "end": "462599"
  },
  {
    "text": "replicate all those Canary steps in depth you don't want to reduce the",
    "start": "462599",
    "end": "467880"
  },
  {
    "text": "impact you want to reduce the overall deployment time and perhaps the better reason is that",
    "start": "467880",
    "end": "473340"
  },
  {
    "text": "yeah alcohol doesn't really work yet with streaming applications and in Adobe",
    "start": "473340",
    "end": "479639"
  },
  {
    "text": "experience platform we have a lot of streaming applications so what can we do",
    "start": "479639",
    "end": "485099"
  },
  {
    "text": "the first option would be to assert that Health outside the Argo City",
    "start": "485099",
    "end": "491160"
  },
  {
    "text": "so argosity is going to say I'm healthy but it's going going to Output some extra information about the phases",
    "start": "491160",
    "end": "498000"
  },
  {
    "text": "phases that failed particularly this hook so I can take that output and parse",
    "start": "498000",
    "end": "503039"
  },
  {
    "text": "it in another CD tool which is my Argo workflow and decide based on that and",
    "start": "503039",
    "end": "508620"
  },
  {
    "text": "this is what we are actually doing the Argo workflow will parse this output and in this case it will stop and roll back",
    "start": "508620",
    "end": "517260"
  },
  {
    "text": "another option uh would be to make the test desired State as you can see I",
    "start": "517260",
    "end": "522599"
  },
  {
    "text": "removed the sink hook and I have a sink wave here this is very tricky to do honestly",
    "start": "522599",
    "end": "528800"
  },
  {
    "text": "because jobs are meant to be one-time events in kubernetes to have them synced every time you need",
    "start": "528800",
    "end": "535920"
  },
  {
    "text": "to remove them beforehand you can achieve that with a pre-sync hook at least until Argosy this adds better",
    "start": "535920",
    "end": "543720"
  },
  {
    "text": "support for replacement of resources such as job however I would not recommend this",
    "start": "543720",
    "end": "549480"
  },
  {
    "text": "unless you don't have any other option we have other use cases about",
    "start": "549480",
    "end": "556620"
  },
  {
    "text": "environment configuration so I think in the last year github's users were very concerned with changing",
    "start": "556620",
    "end": "563880"
  },
  {
    "text": "the source code and promoting that new container image three environment you saw that we are",
    "start": "563880",
    "end": "571380"
  },
  {
    "text": "doing that with Argo workflow there are teams doing it with GitHub actions in combinations with Argo CD notification",
    "start": "571380",
    "end": "578100"
  },
  {
    "text": "or they are doing it in combination with argosity image updater which you should",
    "start": "578100",
    "end": "583440"
  },
  {
    "text": "always use with with Git writebacks always with Git write backs to be GitHub friendly",
    "start": "583440",
    "end": "589260"
  },
  {
    "text": "but yeah there are some other changes my application is subject to such as",
    "start": "589260",
    "end": "594779"
  },
  {
    "text": "business configuration and the most common example here is adding a new environment variable",
    "start": "594779",
    "end": "600600"
  },
  {
    "text": "and I often need to change deployment configuration the underlying hand chart",
    "start": "600600",
    "end": "605640"
  },
  {
    "text": "or the kubernetes Manifest so why do I have this issue of making",
    "start": "605640",
    "end": "611339"
  },
  {
    "text": "these changes in config there is a practice recommended from the",
    "start": "611339",
    "end": "616620"
  },
  {
    "text": "hargo city community that you should separate your source code from the configuration code there are various",
    "start": "616620",
    "end": "622800"
  },
  {
    "text": "reasons you would want to do that like you don't want to trigger unnecessary CI builds if you changed only the config",
    "start": "622800",
    "end": "629519"
  },
  {
    "text": "maybe you want to enforce ownership because you have different teams and it's easier to do that with two",
    "start": "629519",
    "end": "634980"
  },
  {
    "text": "repositories however there are ways to address those issues you can filter CI events to not trigger unnecessary builds",
    "start": "634980",
    "end": "641399"
  },
  {
    "text": "you can use code owners to achieve that kind of ownership at the folder level",
    "start": "641399",
    "end": "648060"
  },
  {
    "text": "but the problem I have with these two repo approach is let's say I need to change the source code but I also need",
    "start": "648060",
    "end": "654779"
  },
  {
    "text": "to add an environment variable once I merge the pull request changing my source code that change that",
    "start": "654779",
    "end": "661500"
  },
  {
    "text": "container image tag is going to be promoted automatically until prod up after product actually",
    "start": "661500",
    "end": "669680"
  },
  {
    "text": "whereas to change the config I need to do another PR in another repository and",
    "start": "669680",
    "end": "675300"
  },
  {
    "text": "prsr manual they are breaking my continuous deployment pipeline um",
    "start": "675300",
    "end": "680399"
  },
  {
    "text": "so yeah the struggle here is putting everything in one single release and I",
    "start": "680399",
    "end": "685860"
  },
  {
    "text": "want to emphasize a bit how important that is because it's especially important when you are migrating of a",
    "start": "685860",
    "end": "692339"
  },
  {
    "text": "tool like us like with migrating of Spinnaker which had this out of the box uh and I heard a few other I heard a",
    "start": "692339",
    "end": "700560"
  },
  {
    "text": "talk actually from sneak earlier this week having the same issue and they were",
    "start": "700560",
    "end": "705959"
  },
  {
    "text": "mentioning the cognitive load this has on their developer too 100 multiple uh",
    "start": "705959",
    "end": "711420"
  },
  {
    "text": "repositories so you can say to me now okay you have ways of addressing those initial issues",
    "start": "711420",
    "end": "718380"
  },
  {
    "text": "about the two two repository approach do it in a single repo and I can do that I",
    "start": "718380",
    "end": "724620"
  },
  {
    "text": "can now atomically change both config and source code however I have another",
    "start": "724620",
    "end": "730140"
  },
  {
    "text": "issue my CI and part of my CV start in the same time the config is going going to",
    "start": "730140",
    "end": "737399"
  },
  {
    "text": "get shipped once I merge it immediately after I'm ordered and my source code is",
    "start": "737399",
    "end": "743940"
  },
  {
    "text": "still being built by the CI but you can say okay you presented us",
    "start": "743940",
    "end": "750540"
  },
  {
    "text": "hooks why wouldn't you use a priesting hook to just wait for the CI before",
    "start": "750540",
    "end": "755700"
  },
  {
    "text": "triggering the scene and actually I can do that with my technique because it it",
    "start": "755700",
    "end": "761040"
  },
  {
    "text": "might take me so some time because it's not that easy but let's say I can do that however I have",
    "start": "761040",
    "end": "767100"
  },
  {
    "text": "other issues which revolve around code or config organization",
    "start": "767100",
    "end": "772980"
  },
  {
    "text": "um okay I hope this shows okay so with environment per uh folder",
    "start": "772980",
    "end": "779820"
  },
  {
    "text": "you need to define a git state for all of your environment a disclaimer here we are using Helm and",
    "start": "779820",
    "end": "787139"
  },
  {
    "text": "in Helm the templates folder will be um sorry",
    "start": "787139",
    "end": "792720"
  },
  {
    "text": "will be at the place where we will just put our manifests our deployment",
    "start": "792720",
    "end": "799500"
  },
  {
    "text": "services and so on uh the duplication here is obvious I have templates over",
    "start": "799500",
    "end": "805019"
  },
  {
    "text": "all over the place so what can I do is use an umbrella chart instead and the",
    "start": "805019",
    "end": "811680"
  },
  {
    "text": "idea about this is Define templates just here at the bottom of my screen in a",
    "start": "811680",
    "end": "817019"
  },
  {
    "text": "single place Define the chart in a single place and then reference that all over the other charts",
    "start": "817019",
    "end": "824160"
  },
  {
    "text": "that are supposed to be rendering environments and I have here an example of a Helm",
    "start": "824160",
    "end": "829560"
  },
  {
    "text": "charts we actually use in one of our repositories you can see that it uses",
    "start": "829560",
    "end": "834660"
  },
  {
    "text": "dependencies to reference other versions charts I can't I kind of solve the duplication",
    "start": "834660",
    "end": "841139"
  },
  {
    "text": "problem but I have and I have another problem which is about overlays",
    "start": "841139",
    "end": "846899"
  },
  {
    "text": "so using Helm for customize will allow you",
    "start": "846899",
    "end": "853500"
  },
  {
    "text": "to Define manifest without repeating yourself right as you can see here I have a values a",
    "start": "853500",
    "end": "859800"
  },
  {
    "text": "base values file which acts as a base and as I go",
    "start": "859800",
    "end": "865200"
  },
  {
    "text": "through the hierarchy of folders I Define more specific overlays or values",
    "start": "865200",
    "end": "870540"
  },
  {
    "text": "files this is fine because I want to use dry and that do not repeat myself but this",
    "start": "870540",
    "end": "878399"
  },
  {
    "text": "isn't quite compatible with promotion so if a developer wants to do a change for",
    "start": "878399",
    "end": "884820"
  },
  {
    "text": "all the environments he or she they will go and change that",
    "start": "884820",
    "end": "890699"
  },
  {
    "text": "they will do that change at the top level at the base level because it makes sense and they want to comply with dry",
    "start": "890699",
    "end": "897000"
  },
  {
    "text": "however that will trigger a reconciliation and a deployment in all",
    "start": "897000",
    "end": "904320"
  },
  {
    "text": "of the Clusters including production bypassing promotion and this is a big No-No I",
    "start": "904320",
    "end": "910320"
  },
  {
    "text": "don't want to deploy directly to production so there is a pattern documented from",
    "start": "910320",
    "end": "917760"
  },
  {
    "text": "code fresh actually saying that you can do this uh change",
    "start": "917760",
    "end": "922920"
  },
  {
    "text": "very specifically and you do that for all the environment and at the end in the last commit you",
    "start": "922920",
    "end": "930600"
  },
  {
    "text": "can just de-duplicate basically the the common configs in the base",
    "start": "930600",
    "end": "936720"
  },
  {
    "text": "and this last commit it will not trigger another deployment because basically the reconciled manifests are the same",
    "start": "936720",
    "end": "943740"
  },
  {
    "text": "nothing changed however I find it hard to implement this especially in our organization because again developers",
    "start": "943740",
    "end": "951420"
  },
  {
    "text": "need to need to be trained to know how to do this incrementally and this this is a very different way",
    "start": "951420",
    "end": "958680"
  },
  {
    "text": "from what they did before Argos DD and of course I have multiple commits here",
    "start": "958680",
    "end": "965100"
  },
  {
    "text": "multiple pull requests and this is this also breaks my continuous deployment",
    "start": "965100",
    "end": "971339"
  },
  {
    "text": "so the conclusion we came up with is that we cannot use the git environment",
    "start": "971339",
    "end": "976940"
  },
  {
    "text": "state to neither declare charts in order to organize them with overlays so what",
    "start": "976940",
    "end": "984060"
  },
  {
    "text": "we do we declare church and overlays next to the source code so that so that",
    "start": "984060",
    "end": "989940"
  },
  {
    "text": "the developer can evolve this uh together however this",
    "start": "989940",
    "end": "996000"
  },
  {
    "text": "uh first repository is no gate State there's no Argo CD controller watching",
    "start": "996000",
    "end": "1001279"
  },
  {
    "text": "and applying that when I do a change here I have an automated process which is my CD my",
    "start": "1001279",
    "end": "1008660"
  },
  {
    "text": "Argo workflow that's going to mirror these changes in an actual git State and during this mirroring is going to",
    "start": "1008660",
    "end": "1015019"
  },
  {
    "text": "promote also on the right side of the screen I have",
    "start": "1015019",
    "end": "1020300"
  },
  {
    "text": "the actual git State what the argosity control is actually monitoring in this repo is just for deployment",
    "start": "1020300",
    "end": "1027558"
  },
  {
    "text": "purposes and should be changed only through automated tools tools",
    "start": "1027559",
    "end": "1032720"
  },
  {
    "text": "so how does my cicd pipeline look like when I do this stage uh now I don't only",
    "start": "1032720",
    "end": "1042100"
  },
  {
    "text": "promote let's say I don't only create a new container image I also push a new",
    "start": "1042100",
    "end": "1048380"
  },
  {
    "text": "chart version in my CI and I also passed around the revision show for that commit",
    "start": "1048380",
    "end": "1053600"
  },
  {
    "text": "and in my CD workflow every promote step is going to promote the image promote",
    "start": "1053600",
    "end": "1059780"
  },
  {
    "text": "the chart and it's also going to copy those uh specific configuration for that",
    "start": "1059780",
    "end": "1065720"
  },
  {
    "text": "environment and it's going to do that for all the other environments ensuring testing and automated drawback if that's",
    "start": "1065720",
    "end": "1073039"
  },
  {
    "text": "the case and a single note I just want to make here is that we actually support only these two layer overlays so the",
    "start": "1073039",
    "end": "1080120"
  },
  {
    "text": "values the base one is going to be promoted together with the chart three environments and the other ones are",
    "start": "1080120",
    "end": "1086900"
  },
  {
    "text": "going to be copied around basically and that's because this limitation of two layering it's because we are still",
    "start": "1086900",
    "end": "1094160"
  },
  {
    "text": "using Helm in the other repository if we would switch to render manifest here",
    "start": "1094160",
    "end": "1100000"
  },
  {
    "text": "that would help us to have many more layering on this side",
    "start": "1100000",
    "end": "1107559"
  },
  {
    "text": "thank you um okay so not sure if you've picked up on it we're really big on CI CD so we uh",
    "start": "1110000",
    "end": "1117740"
  },
  {
    "text": "believe in having these uh fully automated uh promotion workflows",
    "start": "1117740",
    "end": "1122900"
  },
  {
    "text": "starting from the moment that you know a developer commits uh a change basically",
    "start": "1122900",
    "end": "1128179"
  },
  {
    "text": "a PR gets merged and the reason is you know we're trying to have this streamlined cicd process that helps us",
    "start": "1128179",
    "end": "1135140"
  },
  {
    "text": "to react quickly to any kind of you know changes in requirements so that whenever",
    "start": "1135140",
    "end": "1140840"
  },
  {
    "text": "there's a change needed what we do is we quickly iterate on it and we uh we have",
    "start": "1140840",
    "end": "1147620"
  },
  {
    "text": "a CI CD workflow that actually makes us confident about the you know the the feature that we're building and we're",
    "start": "1147620",
    "end": "1154940"
  },
  {
    "text": "also shipping it directly to production so every commit basically gets to production as fast as possible there's",
    "start": "1154940",
    "end": "1159980"
  },
  {
    "text": "no um like one-time release happening uh every week or every month we just deploy",
    "start": "1159980",
    "end": "1166340"
  },
  {
    "text": "every uh commit to production and it's important because we're also going to talk about how we manage infrastructure",
    "start": "1166340",
    "end": "1173539"
  },
  {
    "text": "the thing is that today um we have this workflow about you know",
    "start": "1173539",
    "end": "1180559"
  },
  {
    "text": "deploying applications but infrastructure is sort of treated separately and maybe this will look",
    "start": "1180559",
    "end": "1187700"
  },
  {
    "text": "familiar to you for us you know it's been uh typically about using terraform",
    "start": "1187700",
    "end": "1194179"
  },
  {
    "text": "I think you know Adobe is a large company so we can't really speak for the entire company but at least in our group",
    "start": "1194179",
    "end": "1199940"
  },
  {
    "text": "which is about 600 Engineers uh most people most teams use terraform so",
    "start": "1199940",
    "end": "1205340"
  },
  {
    "text": "whether you know they're using terraform with this local uh",
    "start": "1205340",
    "end": "1211400"
  },
  {
    "text": "feedback loop trying things out with a reform and then you know doing plan and then doing apply",
    "start": "1211400",
    "end": "1217480"
  },
  {
    "text": "or whether you know that actually is then picked up by some sort of a CI we",
    "start": "1217480",
    "end": "1223880"
  },
  {
    "text": "you know use Spinnaker in the past so once the changes were in git for terraform there would be some sort of",
    "start": "1223880",
    "end": "1230660"
  },
  {
    "text": "see I think those changes and then applying them automatically and even I think with uh you know with",
    "start": "1230660",
    "end": "1237740"
  },
  {
    "text": "the adoption of terraform Enterprise which happened in our group we had a",
    "start": "1237740",
    "end": "1243320"
  },
  {
    "text": "more I think a better framework you know for making these changes because now uh",
    "start": "1243320",
    "end": "1251120"
  },
  {
    "text": "the the roles of developers and operations were much more well defined you know in terms of responsibilities",
    "start": "1251120",
    "end": "1257679"
  },
  {
    "text": "and again the process I think sort of grew in",
    "start": "1257679",
    "end": "1262700"
  },
  {
    "text": "I think in not only in structure but also in Security in the way it's supposed to work",
    "start": "1262700",
    "end": "1268580"
  },
  {
    "text": "um however we still have a problem the main problem today",
    "start": "1268580",
    "end": "1275120"
  },
  {
    "text": "um you know for me as a developer as an architect working with a few teams the main problem that I see today is that we",
    "start": "1275120",
    "end": "1281539"
  },
  {
    "text": "have an A workflow for provisioning infrastructure you know and it doesn't really matter if it's terraform simply",
    "start": "1281539",
    "end": "1288559"
  },
  {
    "text": "terraform or if it's terraform Enterprise and you have different workspaces but we have this workflow",
    "start": "1288559",
    "end": "1296419"
  },
  {
    "text": "um that is actually separate it's distinct from the workflow to you know to deploy applications to build and",
    "start": "1296419",
    "end": "1302900"
  },
  {
    "text": "deploy applications and the problem is that they have to meet in the middle",
    "start": "1302900",
    "end": "1308000"
  },
  {
    "text": "and this actually leads to a bunch of problems that you know I've seen a lot of times one is it's actually quite inefficient",
    "start": "1308000",
    "end": "1314960"
  },
  {
    "text": "because you have these various teams or sometimes it's even the same team but with different",
    "start": "1314960",
    "end": "1321500"
  },
  {
    "text": "um different roles in the team that handle one or the other that have to work together on workflows and then have",
    "start": "1321500",
    "end": "1330020"
  },
  {
    "text": "to meet in the middle so it's actually quite inefficient the other is that the risk of Errors is actually higher",
    "start": "1330020",
    "end": "1336380"
  },
  {
    "text": "because again it's not developed in the in the same time it's not deployed at the same time",
    "start": "1336380",
    "end": "1341900"
  },
  {
    "text": "um it also leads to a longer feedback loop which is quite a problem because again we're big on CI CD so if the",
    "start": "1341900",
    "end": "1349220"
  },
  {
    "text": "feedback loop uh increases then you know it's not really effective so you're kind of missing out on the whole idea of cicd",
    "start": "1349220",
    "end": "1355640"
  },
  {
    "text": "right and finally something that I've I found uh happens very often and you know maybe",
    "start": "1355640",
    "end": "1362059"
  },
  {
    "text": "you've seen this before as a company um as a large company we've been using a",
    "start": "1362059",
    "end": "1367640"
  },
  {
    "text": "lot of tools like many tools and I think it's great like in the ecosystem there are so many tools and there's all so",
    "start": "1367640",
    "end": "1373760"
  },
  {
    "text": "many ways to to build things the problem is that sometimes you have to not only understand and be able to",
    "start": "1373760",
    "end": "1380900"
  },
  {
    "text": "use but also graphs the complexity of so many tools that it sometimes becomes unmanageable I think at least if you",
    "start": "1380900",
    "end": "1388159"
  },
  {
    "text": "look at the organization from uh you know from a scale perspective like how",
    "start": "1388159",
    "end": "1393380"
  },
  {
    "text": "how much can you scale your development if your every team has to understand not",
    "start": "1393380",
    "end": "1399380"
  },
  {
    "text": "only Jenkins and Spinnaker or Argo CD but they also have to understand kubernetes of course they have to",
    "start": "1399380",
    "end": "1405620"
  },
  {
    "text": "understand many other technologies that they use so it becomes unmanageable at some point and this is what we you know what we're",
    "start": "1405620",
    "end": "1413179"
  },
  {
    "text": "we've been facing and some of the problems that have been um I think um big for us",
    "start": "1413179",
    "end": "1420380"
  },
  {
    "text": "so I've been looking and I've been working with some folks to figure out okay what would be a common approach",
    "start": "1420380",
    "end": "1426200"
  },
  {
    "text": "what would be a way for us to have a single unified approach for developing and deploying applications but",
    "start": "1426200",
    "end": "1432440"
  },
  {
    "text": "infrastructure as well um the idea being that we can iterate faster in the end and if we iterate",
    "start": "1432440",
    "end": "1439039"
  },
  {
    "text": "faster then we actually increase quality and we uh you know we have a faster time",
    "start": "1439039",
    "end": "1444500"
  },
  {
    "text": "to Market and we respond faster to customer needs which in the end is I think the goal um for us all",
    "start": "1444500",
    "end": "1452600"
  },
  {
    "text": "so um what we're saying is hey we should have a single unified cicd process a",
    "start": "1452600",
    "end": "1458299"
  },
  {
    "text": "single way to to make things and then have a single source of Truth for deployments and I think you're sort of",
    "start": "1458299",
    "end": "1465260"
  },
  {
    "text": "picking up on where I'm going with this so we're looking at Cross plane",
    "start": "1465260",
    "end": "1470480"
  },
  {
    "text": "um crosslane is you know the way to transform your kubernetes cluster into a control plane and I think that the",
    "start": "1470480",
    "end": "1476840"
  },
  {
    "text": "Mantra of cross-plane and I think even I heard this in a presentation today or yesterday sorry",
    "start": "1476840",
    "end": "1483020"
  },
  {
    "text": "um is that you know as long as there's an API you can you know you can configure cross plane with a provider to",
    "start": "1483020",
    "end": "1489799"
  },
  {
    "text": "connect to it you know order pizza right um so for those of you who if you're not",
    "start": "1489799",
    "end": "1496640"
  },
  {
    "text": "familiar with it a real simplistic view is that you know as an in an application you can actually",
    "start": "1496640",
    "end": "1503480"
  },
  {
    "text": "use manage what cross-plane calls manage resources uh typically via claims",
    "start": "1503480",
    "end": "1510080"
  },
  {
    "text": "um and then crossbane will actually uh watch those claims and uh through the use of providers uh connect to let's say",
    "start": "1510080",
    "end": "1517340"
  },
  {
    "text": "public Cloud infrastructure and you know send up your your infrastructure that's the gist of it",
    "start": "1517340",
    "end": "1523100"
  },
  {
    "text": "of course in reality it's actually a bit more uh the model is actually more complex you can have a separation of",
    "start": "1523100",
    "end": "1529039"
  },
  {
    "text": "roles in the company you can have operations people work on compositions and you know developers use a more let's",
    "start": "1529039",
    "end": "1536539"
  },
  {
    "text": "say simple abstraction using planes so the way Argo which we have been",
    "start": "1536539",
    "end": "1544100"
  },
  {
    "text": "migrating to and cross-plane work together is that we actually keep the application",
    "start": "1544100",
    "end": "1551539"
  },
  {
    "text": "manifest like uh you know a deployment configuration but also the infra manifests like the infra provisioning",
    "start": "1551539",
    "end": "1558679"
  },
  {
    "text": "claims we keep them in the same repo and then we have Argo CD sync and deploy that just as as usual right it's not any",
    "start": "1558679",
    "end": "1566539"
  },
  {
    "text": "different than what we've seen before and then a deployment which happens in a",
    "start": "1566539",
    "end": "1571820"
  },
  {
    "text": "different cluster where we actually deploy the application that deployment contains the cross plane",
    "start": "1571820",
    "end": "1577159"
  },
  {
    "text": "manifest which cross planes picks up and then uses to actually provision the",
    "start": "1577159",
    "end": "1582380"
  },
  {
    "text": "infrastructure in you know our public infrastructure so I'm going to walk you",
    "start": "1582380",
    "end": "1587659"
  },
  {
    "text": "really fast through a simple example let's say we have a rest API you know",
    "start": "1587659",
    "end": "1594020"
  },
  {
    "text": "that collects audit events and then exposes some sort of an API to query them right and we're going to use",
    "start": "1594020",
    "end": "1599720"
  },
  {
    "text": "postgres for this uh it's a simple example we're going to use passwords let's say in in a cloud",
    "start": "1599720",
    "end": "1606020"
  },
  {
    "text": "and then we're going to put a firewall in front of it so that you know only certain IPS can you know can connect to",
    "start": "1606020",
    "end": "1612799"
  },
  {
    "text": "it so the way we would do this is like a you know like I was saying earlier we're",
    "start": "1612799",
    "end": "1618140"
  },
  {
    "text": "using a Helm so we would extend the helm chart with let's say a few resources which are cross-plane",
    "start": "1618140",
    "end": "1624559"
  },
  {
    "text": "resources we know we Define a resource Group a server maybe a database",
    "start": "1624559",
    "end": "1630140"
  },
  {
    "text": "um and it would look like this I'm using the outbound provider for Azure here as you",
    "start": "1630140",
    "end": "1637039"
  },
  {
    "text": "can see selected we are basically sending up a flexible server a password server",
    "start": "1637039",
    "end": "1643039"
  },
  {
    "text": "and you know because I'm a smart guy I'm also making sure that um you know I get the uh cross-plane",
    "start": "1643039",
    "end": "1649580"
  },
  {
    "text": "resources to be synced before the application so I'm using sync ways uh with Argo",
    "start": "1649580",
    "end": "1655520"
  },
  {
    "text": "um and um hopefully you can see this um so uh this is Argos may I go see the",
    "start": "1655520",
    "end": "1660620"
  },
  {
    "text": "application trying to sync and what you can see here is that I have my let's say server resource that's",
    "start": "1660620",
    "end": "1668299"
  },
  {
    "text": "um in fact managed by crosslane and it shows up as synced everything's good I also have my DB which has been you know",
    "start": "1668299",
    "end": "1675440"
  },
  {
    "text": "synced it's all fine and then my deployment is progressing I have a pod that's being",
    "start": "1675440",
    "end": "1681279"
  },
  {
    "text": "stood up um if I look at the server",
    "start": "1681279",
    "end": "1687260"
  },
  {
    "text": "um you know the details it shows up as okay in Argo but if I look at my pod",
    "start": "1687260",
    "end": "1694279"
  },
  {
    "text": "shows up as degraded and then if I go into the logs I can see that it",
    "start": "1694279",
    "end": "1699500"
  },
  {
    "text": "actually times out and the reason is that even though my servers seems up to be uh you know",
    "start": "1699500",
    "end": "1707000"
  },
  {
    "text": "have been provisioned by Argo and crosslane in reality",
    "start": "1707000",
    "end": "1712100"
  },
  {
    "text": "um it's only been requested so the server has only been you know requested for provisioning to cross-plane but in",
    "start": "1712100",
    "end": "1717559"
  },
  {
    "text": "in reality it hasn't been yet uh created and the main reason is that Argo CD will",
    "start": "1717559",
    "end": "1723320"
  },
  {
    "text": "actually look when it you know determines the the health of an application it actually looks at the",
    "start": "1723320",
    "end": "1729200"
  },
  {
    "text": "state of the cross-plane resource so the you know the resource here is nothing in the cluster but not at the actual",
    "start": "1729200",
    "end": "1735020"
  },
  {
    "text": "provision infrastructure so your server might still be you know um being raised while uh the the",
    "start": "1735020",
    "end": "1742580"
  },
  {
    "text": "cross-plane resource will say everything's good to solve that I don't think you can see it but I'll",
    "start": "1742580",
    "end": "1749000"
  },
  {
    "text": "try to walk you through it to solve that we're using custom resource health checks in Argo CD so you can",
    "start": "1749000",
    "end": "1755720"
  },
  {
    "text": "um basically configure your Argos CD in its config map or you can even build argosity with it",
    "start": "1755720",
    "end": "1761360"
  },
  {
    "text": "and then we're taking some of the resources that we're using and adding custom health checks for them",
    "start": "1761360",
    "end": "1767480"
  },
  {
    "text": "so that depends on the way the provider works but we're basically picking up on some of the events that are being said",
    "start": "1767480",
    "end": "1773480"
  },
  {
    "text": "in some of the statuses for instance you know if the status is true for the event ready it",
    "start": "1773480",
    "end": "1782299"
  },
  {
    "text": "means that the infrastructure has actually been provisioned and you know we can also treat some error scenarios",
    "start": "1782299",
    "end": "1788480"
  },
  {
    "text": "and if I try again this time with this configuration updated in Argo I can see that now my application shows up as out",
    "start": "1788480",
    "end": "1795020"
  },
  {
    "text": "of sync while it's waiting for the database server to be provisioned and",
    "start": "1795020",
    "end": "1800360"
  },
  {
    "text": "then here I can have the firewall I see the firewall rules being created as well",
    "start": "1800360",
    "end": "1805760"
  },
  {
    "text": "and then I have my database being provisioned and only then after the infrastructure",
    "start": "1805760",
    "end": "1810860"
  },
  {
    "text": "has actually been provisioned in Azure in our cloud do we see the deployments happening my",
    "start": "1810860",
    "end": "1818600"
  },
  {
    "text": "application deployments um and now the port shows as healthy and",
    "start": "1818600",
    "end": "1824419"
  },
  {
    "text": "the application shows it's synced and healthy and um you know looking at the application I can see it's running I um",
    "start": "1824419",
    "end": "1832039"
  },
  {
    "text": "I can even you know make a few queries against it and it's actually functional",
    "start": "1832039",
    "end": "1837980"
  },
  {
    "text": "so the way this all fits together because I think this is where we're sort of hinting to is that we're adding",
    "start": "1837980",
    "end": "1846559"
  },
  {
    "text": "um provisioning infrastructure as part of the application deployment The",
    "start": "1846559",
    "end": "1852500"
  },
  {
    "text": "Continuous CI CD pipeline so we're taking application and infrastructure",
    "start": "1852500",
    "end": "1858140"
  },
  {
    "text": "through the same kind of workflow and we're promoting it from uh",
    "start": "1858140",
    "end": "1863659"
  },
  {
    "text": "into Stage to prod [Music] and finally just want to end up with a",
    "start": "1863659",
    "end": "1870740"
  },
  {
    "text": "few takeaways um we kind of skipped through some some things for the sake of time so you know",
    "start": "1870740",
    "end": "1877159"
  },
  {
    "text": "in reality you would probably use compositions and claims with cross-plane don't use managed resources directly",
    "start": "1877159",
    "end": "1882740"
  },
  {
    "text": "that's actually not a good pattern and also I think that there are a lot of",
    "start": "1882740",
    "end": "1888799"
  },
  {
    "text": "things in order to be able to do this kind of uh um full ciacd Pipeline and deploy each",
    "start": "1888799",
    "end": "1894679"
  },
  {
    "text": "commit to production you actually need to make a lot of due diligence beforehand and we do that and if you",
    "start": "1894679",
    "end": "1900559"
  },
  {
    "text": "want to check that out it's actually in the presentation like I said was referencing earlier that we did at",
    "start": "1900559",
    "end": "1905659"
  },
  {
    "text": "arborcon last year second I see I feel like the cicd",
    "start": "1905659",
    "end": "1910760"
  },
  {
    "text": "ecosystem is really vibrant I you know I love Argo but I also feel like",
    "start": "1910760",
    "end": "1917000"
  },
  {
    "text": "um you know these best practices are still in the works third because we have this sort of",
    "start": "1917000",
    "end": "1923960"
  },
  {
    "text": "distributed system we have control plane clusters and then many remote clusters where the elements actually happen",
    "start": "1923960",
    "end": "1930580"
  },
  {
    "text": "monitoring and observability are really important and you know they're quite problematic at scale and four that this",
    "start": "1930580",
    "end": "1938240"
  },
  {
    "text": "problem about you know multi-cluster multi-tenancy um with Argo but also with cross plane",
    "start": "1938240",
    "end": "1943880"
  },
  {
    "text": "is actually quite hard to to figure out and I think we're still sort of uh working through it",
    "start": "1943880",
    "end": "1951440"
  },
  {
    "text": "yeah so that being said that that's this concludes our presentation um if you have any questions there are",
    "start": "1951440",
    "end": "1957500"
  },
  {
    "text": "mics on the side of the of the room thank you [Applause]",
    "start": "1957500",
    "end": "1965099"
  }
]