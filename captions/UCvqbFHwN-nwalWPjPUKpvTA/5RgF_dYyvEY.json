[
  {
    "text": "okay good afternoon everyone today i'm going to present the virtual cluster a practical kubernetes hardware tendency",
    "start": "80",
    "end": "6799"
  },
  {
    "text": "solution so multi tenancy has been us",
    "start": "6799",
    "end": "14719"
  },
  {
    "text": "required by many kubernetes users for a long time from company's perspective multi-tenancy",
    "start": "14719",
    "end": "20800"
  },
  {
    "text": "impact both the infrastructure cost and the rd efficiency two things that",
    "start": "20800",
    "end": "25840"
  },
  {
    "text": "are very important for companies growth however in kubernetes",
    "start": "25840",
    "end": "31199"
  },
  {
    "text": "uh that multiple users should consume the shared cluster resource in your isolated manner is not easy",
    "start": "31199",
    "end": "38000"
  },
  {
    "text": "this is because in original kubernetes design the design was focusing on the single",
    "start": "38000",
    "end": "44320"
  },
  {
    "text": "tenant use cases and it works great for single tenant use use cases",
    "start": "44320",
    "end": "49760"
  },
  {
    "text": "but if we want to provide strong isolation in kubernetes most of the core components including",
    "start": "49760",
    "end": "55600"
  },
  {
    "text": "its control plan and the data plan need enhancements some innovations have",
    "start": "55600",
    "end": "60640"
  },
  {
    "text": "been done for example nowadays kubernetes supports sandbox runtime to provide vm level",
    "start": "60640",
    "end": "66799"
  },
  {
    "text": "computer resource isolation and the kubernetes api server provides name space api for metadata isolation",
    "start": "66799",
    "end": "74080"
  },
  {
    "text": "but there's still many isolation requirements has not been met",
    "start": "74080",
    "end": "79840"
  },
  {
    "text": "let us reduce the problem scope a little bit a little bit by looking at the control plane only",
    "start": "81119",
    "end": "86400"
  },
  {
    "text": "is this possible for the native community to support the following multiple tenant users run their",
    "start": "86400",
    "end": "92560"
  },
  {
    "text": "workloads in a shared resource pool are managed by a kubernetes but",
    "start": "92560",
    "end": "98320"
  },
  {
    "text": "each users can only manage their own workloads and pass and no matter what",
    "start": "98320",
    "end": "104159"
  },
  {
    "text": "they do other tenants shouldn't get to be affected in terms of the security stability and manageability in other",
    "start": "104159",
    "end": "112000"
  },
  {
    "text": "words is this possible to provide a complete control plan isolation in kubernetes",
    "start": "112000",
    "end": "117920"
  },
  {
    "text": "another problem is can this be done natively yes we can build another path layer to",
    "start": "117920",
    "end": "124880"
  },
  {
    "text": "encapsulate the kubernetes cluster to provide us complete control print isolation but",
    "start": "124880",
    "end": "131599"
  },
  {
    "text": "this over introduced non-trivial integration cost for the tenant in order to use the new pass",
    "start": "131599",
    "end": "138160"
  },
  {
    "text": "unfortunately the native kubernetes cannot achieve both",
    "start": "138160",
    "end": "143280"
  },
  {
    "text": "in this talk we will see how virtual cluster can provide complete control isolation",
    "start": "143280",
    "end": "150239"
  },
  {
    "text": "natively so that the user doesn't need to pay any integration cost",
    "start": "150239",
    "end": "156640"
  },
  {
    "text": "a little bit a brief introduction to myself my name is feiko i'm a senior staff engineer from alibaba",
    "start": "156640",
    "end": "162720"
  },
  {
    "text": "cloud i work in the cloud native application platform team i'm currently leading a few communities",
    "start": "162720",
    "end": "169599"
  },
  {
    "text": "related projects in the area of service kubernetes workload management",
    "start": "169599",
    "end": "174959"
  },
  {
    "text": "and edge compute here is outline of today's talk first i",
    "start": "174959",
    "end": "182000"
  },
  {
    "text": "will present the virtual cluster architecture design now i will talk about some technical",
    "start": "182000",
    "end": "188000"
  },
  {
    "text": "challenges that we face and how we solve them i will show some experimental results to",
    "start": "188000",
    "end": "193360"
  },
  {
    "text": "show that virtual cluster is a practical solution and then i will also compare virtual",
    "start": "193360",
    "end": "199200"
  },
  {
    "text": "cluster with some other solutions and give a quick summary about the project status",
    "start": "199200",
    "end": "205680"
  },
  {
    "text": "in the end i will give a short demo okay before i move on i want to",
    "start": "205680",
    "end": "212080"
  },
  {
    "text": "emphasize that this talk solely addresses kubernetes control pronunciation problems",
    "start": "212080",
    "end": "217440"
  },
  {
    "text": "and the data pro isolation technique techniques will not be discussed in this talk and some of the existing solutions may",
    "start": "217440",
    "end": "224080"
  },
  {
    "text": "be referred if they are publicly available for example the sandbox container technique",
    "start": "224080",
    "end": "231200"
  },
  {
    "text": "okay before we design our multiple mart tenancy solution",
    "start": "232959",
    "end": "240000"
  },
  {
    "text": "we need to be clear about the threat model that we are tackling so we assume that the tenant users are",
    "start": "240000",
    "end": "246400"
  },
  {
    "text": "not trustworthy therefore exposing class scope resources is dangerous",
    "start": "246400",
    "end": "252840"
  },
  {
    "text": "um uh there can be security concerns when doing well when doing this of course um the",
    "start": "252840",
    "end": "259600"
  },
  {
    "text": "tenant users shouldn't be granted permissions to operate on the class scope resource as well",
    "start": "259600",
    "end": "265840"
  },
  {
    "text": "the tenant user may generate harmful usage patterns for example the denial of service",
    "start": "265840",
    "end": "271280"
  },
  {
    "text": "attacks but sometimes those those harmful patents is not",
    "start": "271280",
    "end": "276720"
  },
  {
    "text": "generated on purpose it can be an accident so uh and",
    "start": "276720",
    "end": "283440"
  },
  {
    "text": "and and lastly the tenant users may serve other users as well so it will make their it make it",
    "start": "283440",
    "end": "290320"
  },
  {
    "text": "even harder to predict the calendar user's behavior we assume that the containers are not",
    "start": "290320",
    "end": "296720"
  },
  {
    "text": "safe so overall if you look at this threat model they are typical in cloud environments but they may also apply",
    "start": "296720",
    "end": "304160"
  },
  {
    "text": "in the internal organization as well let's see how upstream kubernetes can do about this",
    "start": "304160",
    "end": "311840"
  },
  {
    "text": "namespace is the kubernetes building api for tenant abstraction but with a shared control plan using",
    "start": "312479",
    "end": "319759"
  },
  {
    "text": "named space odin is not enough to provide strong isolation by sharing the control plan we",
    "start": "319759",
    "end": "325759"
  },
  {
    "text": "have a legacy and a classic noise neighbor problem for example if tenon a may have a lot of",
    "start": "325759",
    "end": "331840"
  },
  {
    "text": "parts and if he keeps listing his parts and the tenant b may get a slower response from the api",
    "start": "331840",
    "end": "338639"
  },
  {
    "text": "server it will become even worse if canon b runs a more",
    "start": "338639",
    "end": "343680"
  },
  {
    "text": "important application compared to canon ace application the kubernetes nav space api does is not",
    "start": "343680",
    "end": "351919"
  },
  {
    "text": "a talent aware which means a tenant may list all the name spaces in the api server which can be a problem",
    "start": "351919",
    "end": "359199"
  },
  {
    "text": "because sometimes the namespace name can may contain the sensitive information",
    "start": "359199",
    "end": "365759"
  },
  {
    "text": "the tenant users cannot install class scope resource which means they cannot install crds",
    "start": "365759",
    "end": "372400"
  },
  {
    "text": "web hooks create scope rows etcetera this limitation can be a big help mode",
    "start": "372400",
    "end": "378639"
  },
  {
    "text": "for many many kubernetes use cases overall we need to find a way to enhance",
    "start": "378639",
    "end": "385280"
  },
  {
    "text": "the current namespace based multi-tenancy model in a kubernetes",
    "start": "385280",
    "end": "391520"
  },
  {
    "text": "i think there are there are many possible solutions to achieve a stronger as a",
    "start": "393280",
    "end": "398319"
  },
  {
    "text": "isolation model in kubernetes uh but when we design virtual cluster",
    "start": "398319",
    "end": "403520"
  },
  {
    "text": "our primary concerns are in four aspects the first is a compatibility we need to",
    "start": "403520",
    "end": "409520"
  },
  {
    "text": "make we need to make sure our solution doesn't change any api existing api so in order to reduce the",
    "start": "409520",
    "end": "416960"
  },
  {
    "text": "100 users integration cost the second one is the complexity so we aim to leverage kubernetes extensions",
    "start": "416960",
    "end": "425199"
  },
  {
    "text": "and don't change any kubernetes core components for scalability we we targeted to",
    "start": "425199",
    "end": "432800"
  },
  {
    "text": "our use cases to support hundreds or even thousands tenants",
    "start": "432800",
    "end": "439520"
  },
  {
    "text": "to share one kubernetes cluster so the solution has to be scaled the last way is the cost i think it is",
    "start": "440639",
    "end": "448000"
  },
  {
    "text": "okay to have a trade-off between the isolation level and the cost but the cost has to be as small as",
    "start": "448000",
    "end": "455280"
  },
  {
    "text": "possible now let's look at the our design",
    "start": "455280",
    "end": "462479"
  },
  {
    "text": "in virtual cluster each tenant user has a dedicated tenant control plan which we call the",
    "start": "462479",
    "end": "468240"
  },
  {
    "text": "tenant master a tenant mask includes api server controller manager and",
    "start": "468240",
    "end": "474240"
  },
  {
    "text": "atcb the tenant master life cycle is managed by a tenant operator which",
    "start": "474240",
    "end": "480080"
  },
  {
    "text": "runs in the supermaster the supermaster is the kubernetes cluster that manages the actual node",
    "start": "480080",
    "end": "485919"
  },
  {
    "text": "resource the tenant user operates in the tenant master directly",
    "start": "485919",
    "end": "491520"
  },
  {
    "text": "and that there is a single controller which copies the objects from the talent",
    "start": "491520",
    "end": "496800"
  },
  {
    "text": "master to the supermaster for part provision the node couplet watches the supermaster",
    "start": "496800",
    "end": "504160"
  },
  {
    "text": "and create create the actual container using the sandbox runtime for computer resource isolation since",
    "start": "504160",
    "end": "511680"
  },
  {
    "text": "the kubrick in the node olin can execute the supermaster we need to find a way for tenant a user",
    "start": "511680",
    "end": "517680"
  },
  {
    "text": "to access their parts using login or streaming apis in order to do this we add a proxy",
    "start": "517680",
    "end": "525760"
  },
  {
    "text": "in each node called vian agent in in the tenant master there is a",
    "start": "525760",
    "end": "530880"
  },
  {
    "text": "version of the object which maps to the physical node that the attendant part is actually running on",
    "start": "530880",
    "end": "538320"
  },
  {
    "text": "the version of the object points to the via agent so that the video agent can proxy all",
    "start": "538320",
    "end": "544640"
  },
  {
    "text": "the tenants requested to the couplet over if you look at this architecture",
    "start": "544640",
    "end": "550080"
  },
  {
    "text": "concept wise now the supermaster becomes a part resource provider",
    "start": "550080",
    "end": "555760"
  },
  {
    "text": "and other tenant objects management and rba control happens in the tenant master and all the",
    "start": "555760",
    "end": "563519"
  },
  {
    "text": "workload controllers extensions crds operators are installing the tenant master",
    "start": "563519",
    "end": "569519"
  },
  {
    "text": "directory based on the user's demand",
    "start": "569519",
    "end": "576720"
  },
  {
    "text": "okay let's see how this design fits fits in our criteria",
    "start": "576720",
    "end": "583120"
  },
  {
    "text": "from compatibility perspective we didn't change any object api and semantics and we can",
    "start": "583120",
    "end": "590160"
  },
  {
    "text": "always support the upstream kubernetes versions people may ask the differences between a",
    "start": "590160",
    "end": "595200"
  },
  {
    "text": "virtual object and a virtual couplet in virtual in virtual cluster each",
    "start": "595200",
    "end": "600640"
  },
  {
    "text": "virtual node has a one-to-one mapping to the actual physical node which means the part affinity and the",
    "start": "600640",
    "end": "606480"
  },
  {
    "text": "pattern of affinity semantics are the same as before but the virtual cubelet does not",
    "start": "606480",
    "end": "611760"
  },
  {
    "text": "necessarily represent a physical node in many cases it represents a group of",
    "start": "611760",
    "end": "617040"
  },
  {
    "text": "nodes hence the node semantic actually changed in terms of complexity complexity",
    "start": "617040",
    "end": "626079"
  },
  {
    "text": "our thinker only seen 12 api objects from the tenant masters for c to the supermaster not all of the tenant",
    "start": "626079",
    "end": "633519"
  },
  {
    "text": "objects and everything is done using the kubernetes tensions the",
    "start": "633519",
    "end": "638640"
  },
  {
    "text": "complexity is limited for scalability we find that one sinker",
    "start": "638640",
    "end": "644880"
  },
  {
    "text": "can support hundreds of tenant masters without much performance impact so we will show some experimental",
    "start": "644880",
    "end": "651120"
  },
  {
    "text": "results later overall the solution is scalable",
    "start": "651120",
    "end": "656959"
  },
  {
    "text": "the tenant master cost is always concerned but if you look at the kubernetes design it",
    "start": "657360",
    "end": "663200"
  },
  {
    "text": "is actually similar to unix micro kernel the api server is concise and small and",
    "start": "663200",
    "end": "669040"
  },
  {
    "text": "most of the logic are implemented in the client side also a one kubernetes master pro tenant",
    "start": "669040",
    "end": "676160"
  },
  {
    "text": "user is a kind of standard in many cloud service products such as the aws eks and the article of",
    "start": "676160",
    "end": "683279"
  },
  {
    "text": "ask overall i think the cost is acceptable well the benefits of this design are",
    "start": "683279",
    "end": "690399"
  },
  {
    "text": "clear there are no noise neighbors anymore and when tenants cannot see other tenants",
    "start": "690399",
    "end": "696000"
  },
  {
    "text": "objects at all if one tenant hits the security vulnerability",
    "start": "696000",
    "end": "701360"
  },
  {
    "text": "and only that tenants get affected the tenant user has a full control over the",
    "start": "701360",
    "end": "706480"
  },
  {
    "text": "tenant master which provides the best user experience",
    "start": "706480",
    "end": "712160"
  },
  {
    "text": "next i'm going to describe some challenges that we face when we implement the virtual cluster",
    "start": "714000",
    "end": "720800"
  },
  {
    "text": "so the biggest challenge we have is actually to provide a virtual cluster video for each tenant",
    "start": "721440",
    "end": "727839"
  },
  {
    "text": "let me explain it in virtual cluster one tenant path",
    "start": "727839",
    "end": "733040"
  },
  {
    "text": "has three entities one part object intended master a part object in supermaster and",
    "start": "733040",
    "end": "740160"
  },
  {
    "text": "a part containers running in nodes created by the couplet",
    "start": "740160",
    "end": "745519"
  },
  {
    "text": "the sinker doesn't change the part name but it has to change the partner space",
    "start": "745519",
    "end": "750560"
  },
  {
    "text": "in order to avoid potential naming conflict in supermaster basically we will add a prefix to each",
    "start": "750560",
    "end": "756720"
  },
  {
    "text": "namespace in the supermaster but the problem is that the user can log",
    "start": "756720",
    "end": "762880"
  },
  {
    "text": "into the parts that are running in a supermaster but we have to make sure the user recognizes his parts running",
    "start": "762880",
    "end": "770240"
  },
  {
    "text": "his tenant kubernetes instead of the supermaster which means inside the part the service",
    "start": "770240",
    "end": "777279"
  },
  {
    "text": "service account dns settings and namespace has to have to represent the tenant",
    "start": "777279",
    "end": "783120"
  },
  {
    "text": "config configure tenant master configurations it sounds like we have to change the couplet to achieve",
    "start": "783120",
    "end": "789680"
  },
  {
    "text": "this but in fact we didn't do that",
    "start": "789680",
    "end": "795440"
  },
  {
    "text": "the thinker doesn't magic it manipulates the pod template like a mutation web hook for all the",
    "start": "795440",
    "end": "802000"
  },
  {
    "text": "environmental variables service recorder secrets hosa lines and the dns config",
    "start": "802000",
    "end": "807680"
  },
  {
    "text": "so that all the configurations in the tenant master are used the thing can also ensure the data the",
    "start": "807680",
    "end": "814720"
  },
  {
    "text": "data consistency between the the tenant master and the supermaster basically the tenant master is the",
    "start": "814720",
    "end": "820800"
  },
  {
    "text": "source of the truth for the object spec and the supermaster is the source of the truth",
    "start": "820800",
    "end": "826160"
  },
  {
    "text": "for the object status in the end the user is not aware of the super",
    "start": "826160",
    "end": "831360"
  },
  {
    "text": "master at all literally you don't need to change any of your yaml files when using canon",
    "start": "831360",
    "end": "836480"
  },
  {
    "text": "master it should just work",
    "start": "836480",
    "end": "842079"
  },
  {
    "text": "synchro is a very powerful controller in virtual cluster it has a full control over all the",
    "start": "842079",
    "end": "848000"
  },
  {
    "text": "masters but we have to make sure that the sync doesn't generate too many requests to",
    "start": "848000",
    "end": "853040"
  },
  {
    "text": "all the masters for consistency check we leveraged kubernetes",
    "start": "853040",
    "end": "858399"
  },
  {
    "text": "least and watching mechanism if you look inside the sinker they are per object reconciler which",
    "start": "858399",
    "end": "865199"
  },
  {
    "text": "synchronize the object based on the states in the tenant master informal caches and",
    "start": "865199",
    "end": "870639"
  },
  {
    "text": "the supermassive informal cache the idea is that by looking by comparing",
    "start": "870639",
    "end": "876000"
  },
  {
    "text": "the cache states we can minimize the pressure that a thinker may apply to all the masters",
    "start": "876000",
    "end": "881920"
  },
  {
    "text": "regardless how many objects needs to be synchronized",
    "start": "881920",
    "end": "886639"
  },
  {
    "text": "okay next i'm going to pre present some experiment results",
    "start": "888560",
    "end": "893760"
  },
  {
    "text": "we conduct some stress tests uh in experiment we set up a hundred tenant",
    "start": "893760",
    "end": "898800"
  },
  {
    "text": "master doing concurrent product creation the number of created parts is increased from 1k to",
    "start": "898800",
    "end": "905600"
  },
  {
    "text": "10k and there is only one single controller in a supermaster we install 100 virtual",
    "start": "905600",
    "end": "912720"
  },
  {
    "text": "correlate to simulate a 100 node cluster which also means that",
    "start": "912720",
    "end": "918000"
  },
  {
    "text": "the times depending node during part creation is skipped because we use uh virtual corporate",
    "start": "918000",
    "end": "925920"
  },
  {
    "text": "this test mainly evaluates the performance of the control plane",
    "start": "925920",
    "end": "931120"
  },
  {
    "text": "the left figure shows the histogram of part creation time in 10k pass case so this is a very",
    "start": "931120",
    "end": "938959"
  },
  {
    "text": "stressful parallel workload the part creation time is determined the one part",
    "start": "938959",
    "end": "944639"
  },
  {
    "text": "becomes ready in the tenant master in the baseline case all parts are created in the tenant must",
    "start": "944639",
    "end": "951920"
  },
  {
    "text": "in the super master directly so from this figure we can see that when using virtual cluster about",
    "start": "951920",
    "end": "959519"
  },
  {
    "text": "80 percent of parts are created within the baseline time range the vc has a longer",
    "start": "959519",
    "end": "967440"
  },
  {
    "text": "pairs because of the queuing latencies in the sinker the right figure shows the workout time",
    "start": "967440",
    "end": "974560"
  },
  {
    "text": "of creating r parts for different number of parts the smaller",
    "start": "974560",
    "end": "979600"
  },
  {
    "text": "value the better from this figure we can see that we can see that the vc",
    "start": "979600",
    "end": "986079"
  },
  {
    "text": "doesn't bring significant throughput degradation in the very stressful 10k",
    "start": "986079",
    "end": "992000"
  },
  {
    "text": "pass case there is about 70 percent of slowdown which i think is",
    "start": "992000",
    "end": "997360"
  },
  {
    "text": "acceptable now let's look at the synchronous cost",
    "start": "997360",
    "end": "1003040"
  },
  {
    "text": "the simplest resource consumption doesn't scale this is because the supermaster has its",
    "start": "1003040",
    "end": "1008320"
  },
  {
    "text": "own stupid limit so the sinker cannot drive the load",
    "start": "1008320",
    "end": "1013600"
  },
  {
    "text": "infinitely by burning resources and the other cues in the sinker are back of rate limited",
    "start": "1013600",
    "end": "1020560"
  },
  {
    "text": "queues the sinker is stateless uh in the 10k parts case we find that",
    "start": "1020560",
    "end": "1026079"
  },
  {
    "text": "the skate recovery time for the sinker can be is less than one minute when sinker",
    "start": "1026079",
    "end": "1031918"
  },
  {
    "text": "restarts in the worst case where sinker really becomes a bottleneck",
    "start": "1031919",
    "end": "1037038"
  },
  {
    "text": "it can be horizontally scaled easily in a normal unstressful case the extra",
    "start": "1037039",
    "end": "1043678"
  },
  {
    "text": "latency added by the sinker is usually less than a few milliseconds",
    "start": "1043679",
    "end": "1049600"
  },
  {
    "text": "okay virtual cluster is not the first trial there are other solutions that address",
    "start": "1051360",
    "end": "1056720"
  },
  {
    "text": "the kubernetes control plane isolation problem i think case 3v is probably the closest",
    "start": "1056720",
    "end": "1063679"
  },
  {
    "text": "one compared to virtual cluster in k3b each user has a dedicated control plan",
    "start": "1063679",
    "end": "1069840"
  },
  {
    "text": "which is a modified case 3s api server to compare in virtual",
    "start": "1069840",
    "end": "1075120"
  },
  {
    "text": "cluster we didn't change upstream api server also increased 3v it follows a per",
    "start": "1075120",
    "end": "1081120"
  },
  {
    "text": "tenant sinker model which i think is not necessary uh if you look if you",
    "start": "1081120",
    "end": "1086400"
  },
  {
    "text": "look at the experiment experiment results i showed just now one sinker can support multiple",
    "start": "1086400",
    "end": "1092840"
  },
  {
    "text": "tenants there is another project called actos which modifies the eps server to support",
    "start": "1092840",
    "end": "1100080"
  },
  {
    "text": "the new tenant apis i think all the existing plugins have to be changed as a consequence",
    "start": "1100080",
    "end": "1106960"
  },
  {
    "text": "also in october's if you use a shared control plan for all the you for all the users",
    "start": "1106960",
    "end": "1112720"
  },
  {
    "text": "then the noise neighbor problem still exists",
    "start": "1112720",
    "end": "1117840"
  },
  {
    "text": "from high level consider wise the single controller and the virtual corporate have",
    "start": "1117840",
    "end": "1123520"
  },
  {
    "text": "similarities but the virtual couplet uh use simplified provider interface",
    "start": "1123520",
    "end": "1129919"
  },
  {
    "text": "so it always has some compatibility issues",
    "start": "1129919",
    "end": "1137039"
  },
  {
    "text": "okay last last let me give a quick summary about this project so virtual cluster is a multi-tenancy",
    "start": "1137039",
    "end": "1143200"
  },
  {
    "text": "working group project it passed 99 of the kubernetes conformance test",
    "start": "1143200",
    "end": "1148960"
  },
  {
    "text": "the failed ones are not supported for example there is a one field test case asked for changing the super",
    "start": "1148960",
    "end": "1154480"
  },
  {
    "text": "master sub domain which is not supported in virtual cluster virtual class has complete unit tests",
    "start": "1154480",
    "end": "1161200"
  },
  {
    "text": "and annual test cases which covered more than 70 of the code it supports both the cloud and on-prem",
    "start": "1161200",
    "end": "1168960"
  },
  {
    "text": "kubernetes clusters the solution has been used in icloud service product and it gains",
    "start": "1168960",
    "end": "1175919"
  },
  {
    "text": "more and more interest from the community as well so feel free to give a try and then let us know your thoughts the",
    "start": "1175919",
    "end": "1182799"
  },
  {
    "text": "comments and the requirements and we appreciate your help okay next i'm going to give a quick",
    "start": "1182799",
    "end": "1190799"
  },
  {
    "text": "a short demo for virtual cluster",
    "start": "1190799",
    "end": "1194559"
  },
  {
    "text": "in this demo i'm going to use kubernetes dashboard the left dashboard connects to the supermaster",
    "start": "1196400",
    "end": "1202720"
  },
  {
    "text": "we have already installed one virtual cluster in the supermaster as you can see there are a bunch of new",
    "start": "1202720",
    "end": "1208400"
  },
  {
    "text": "namespaces showing up this namespace is the root namespace",
    "start": "1208400",
    "end": "1216400"
  },
  {
    "text": "the tenant must parts are installed inside this namespace",
    "start": "1216400",
    "end": "1221600"
  },
  {
    "text": "you have api server controller manager and etc",
    "start": "1221600",
    "end": "1226158"
  },
  {
    "text": "the other namespaces are synchronized from the tenant master",
    "start": "1226960",
    "end": "1232400"
  },
  {
    "text": "the right dashboard classical canon master and if you look at name spaces we have a regular kubernetes name spaces",
    "start": "1233039",
    "end": "1239840"
  },
  {
    "text": "plus a dashboard namespace the default namespace in the tenant master is empty",
    "start": "1239840",
    "end": "1247600"
  },
  {
    "text": "so the corresponding name space in the supermaster",
    "start": "1247600",
    "end": "1253279"
  },
  {
    "text": "it is also empty now let's try to create an nginx service",
    "start": "1256400",
    "end": "1263600"
  },
  {
    "text": "in a tenant master using staffordset",
    "start": "1263600",
    "end": "1277840"
  },
  {
    "text": "as you can see the part is actually created in the supermaster and the part status",
    "start": "1282400",
    "end": "1288880"
  },
  {
    "text": "is synchronized to the tenant master inside in the tenant master we have a",
    "start": "1288880",
    "end": "1295039"
  },
  {
    "text": "stable set called my nginx but in a supermaster the safer set is",
    "start": "1295039",
    "end": "1301840"
  },
  {
    "text": "not seen which means the workload management happens in the talent master",
    "start": "1301840",
    "end": "1308320"
  },
  {
    "text": "now let's try to create another part to see if we can access the nginx",
    "start": "1309360",
    "end": "1315520"
  },
  {
    "text": "service in the tenant master",
    "start": "1315520",
    "end": "1319840"
  },
  {
    "text": "the part is really simple",
    "start": "1322480",
    "end": "1325760"
  },
  {
    "text": "and yes it is created now let's try to log inside the pod",
    "start": "1328559",
    "end": "1336880"
  },
  {
    "text": "you can see the engineering service showing up in the enviro the environment variable and let's see",
    "start": "1339440",
    "end": "1346159"
  },
  {
    "text": "if the tenant dns works here",
    "start": "1346159",
    "end": "1350320"
  },
  {
    "text": "the service name is mynginx the namespace is default",
    "start": "1352960",
    "end": "1361840"
  },
  {
    "text": "yes it works",
    "start": "1364400",
    "end": "1367200"
  },
  {
    "text": "okay that's the end of my presentation i'm happy to go live on and answer any",
    "start": "1373520",
    "end": "1378720"
  },
  {
    "text": "of your questions thanks everyone",
    "start": "1378720",
    "end": "1389840"
  },
  {
    "text": "hello everyone",
    "start": "1391360",
    "end": "1394000"
  },
  {
    "text": "yeah so i think there are some i hope you guys can hear me uh it seems like there's some technical",
    "start": "1399039",
    "end": "1405760"
  },
  {
    "text": "issue the the demo video is not showing up in the screen um but i think i upload my whole slides",
    "start": "1405760",
    "end": "1413600"
  },
  {
    "text": "uh in the",
    "start": "1413600",
    "end": "1417840"
  },
  {
    "text": "thank you you will now be placed into conference reported",
    "start": "1469200",
    "end": "1476720"
  },
  {
    "text": "hello",
    "start": "1484840",
    "end": "1487840"
  },
  {
    "text": "hello",
    "start": "1498840",
    "end": "1501840"
  },
  {
    "text": "is the phone bridge not coming in",
    "start": "1534480",
    "end": "1543840"
  },
  {
    "text": "um okay sorry i think there are some technical difficulties to play with the",
    "start": "1544960",
    "end": "1551600"
  },
  {
    "text": "demo video uh let me see how kind i think i need to work with the team to",
    "start": "1551600",
    "end": "1557600"
  },
  {
    "text": "make sure that the record the recording the session has a video shows up um another thing is uh",
    "start": "1557600",
    "end": "1566320"
  },
  {
    "text": "i think in the in the in the session page i can i try",
    "start": "1566320",
    "end": "1572320"
  },
  {
    "text": "to if i can upload the um the slides back directly and the video is embedded in the slide deck",
    "start": "1572320",
    "end": "1577919"
  },
  {
    "text": "so if you guys have time you can just try to play it locally if i download the ppk let me see",
    "start": "1577919",
    "end": "1583919"
  },
  {
    "text": "if i can do that after session but by now i can try to answer some of",
    "start": "1583919",
    "end": "1589760"
  },
  {
    "text": "the questions that some guys already ask [Music]",
    "start": "1589760",
    "end": "1596240"
  },
  {
    "text": "i think mark uh mark just mark caller just ask the question how do",
    "start": "1596240",
    "end": "1602640"
  },
  {
    "text": "you manage the network isolation to actually prevent unwanted traffic um i think that's a",
    "start": "1602640",
    "end": "1609600"
  },
  {
    "text": "great question for our the in the multi-tenancy area but as i mentioned in the flight so this",
    "start": "1609600",
    "end": "1615760"
  },
  {
    "text": "slide doesn't cover the uh the data plane isolation uh of course the network solution",
    "start": "1615760",
    "end": "1621520"
  },
  {
    "text": "is in part i think there are parts they combine both the control pronunciation and vertical isolation",
    "start": "1621520",
    "end": "1628559"
  },
  {
    "text": "i uh and i do believe there are a lot of ways to try to prevent the r1d traffic in a multitesting model",
    "start": "1628559",
    "end": "1636159"
  },
  {
    "text": "but i didn't include it as a general practice best practice because the network startups in all the",
    "start": "1636159",
    "end": "1642320"
  },
  {
    "text": "different vendors are so different for instance in some vendors car vendors use an epc to do you know",
    "start": "1642320",
    "end": "1649120"
  },
  {
    "text": "a narrow isolation for individual parts so in real scenario or even the cognitive",
    "start": "1649120",
    "end": "1654960"
  },
  {
    "text": "service the upstream community service may not work because the cookie proxy has to you know access the node in a network",
    "start": "1654960",
    "end": "1662720"
  },
  {
    "text": "stack um basically i try to make things a little bit simpler there are a few things that i can do",
    "start": "1662720",
    "end": "1669440"
  },
  {
    "text": "first if you if we use the vpc model uh one way that we have tried internally",
    "start": "1669440",
    "end": "1675279"
  },
  {
    "text": "is that we kind of change the kuvi proxy to inject rows into the each you know parts",
    "start": "1675279",
    "end": "1682320"
  },
  {
    "text": "directly instead of in part namespace directly instead of the whole network namespace that's one way you can",
    "start": "1682320",
    "end": "1688559"
  },
  {
    "text": "do uh if you if you don't use the vbc network",
    "start": "1688559",
    "end": "1693840"
  },
  {
    "text": "um something that we can do is we can use the upstream you know network policy to let cra csa cna plug in to",
    "start": "1693840",
    "end": "1702640"
  },
  {
    "text": "do the network isolation between the namespaces the nice thing of virtual cluster is the other tenant name spaces are",
    "start": "1702640",
    "end": "1709840"
  },
  {
    "text": "synchronized to supermaster so exactly that is the one you were mapping between the tenant namespace and the",
    "start": "1709840",
    "end": "1714960"
  },
  {
    "text": "supermaster namespace so uh one way that i see some of the vcu user has tried is",
    "start": "1714960",
    "end": "1721039"
  },
  {
    "text": "they can come up with their own network policy uh create throws policies into the",
    "start": "1721039",
    "end": "1726320"
  },
  {
    "text": "tenant the master and the supermaster double sink the policy and the cna plugin can honor those",
    "start": "1726320",
    "end": "1732480"
  },
  {
    "text": "policies um then to uh to provide the network isolation between",
    "start": "1732480",
    "end": "1737760"
  },
  {
    "text": "them spaces as a as native kubernetes does uh i hope i address some of your concepts but if you",
    "start": "1737760",
    "end": "1744720"
  },
  {
    "text": "did have more concerns let's check later in the slack channel about the network isolation",
    "start": "1744720",
    "end": "1751840"
  },
  {
    "text": "there is a one question from the kathy uh who asked is what's your class to use",
    "start": "1751840",
    "end": "1758000"
  },
  {
    "text": "in production by any any users so currently we have virtual class has been uniting uh",
    "start": "1758000",
    "end": "1763760"
  },
  {
    "text": "some internal uh the the product but uh it has not been exposed to any",
    "start": "1763760",
    "end": "1768960"
  },
  {
    "text": "use yet so in our model is the service product so there is a small you know part layer to encapsulate",
    "start": "1768960",
    "end": "1776399"
  },
  {
    "text": "the virtual cluster so the the end the user doesn't directly access to the virtual cluster",
    "start": "1776399",
    "end": "1782320"
  },
  {
    "text": "um but i don't think there is a uh a technical difficulty is to impose the",
    "start": "1782320",
    "end": "1787840"
  },
  {
    "text": "virtuality and the user because in theory many of the existing service products",
    "start": "1787840",
    "end": "1793200"
  },
  {
    "text": "kubernetes does all the same thing uh each tenant has its own tenant",
    "start": "1793200",
    "end": "1798240"
  },
  {
    "text": "uh the virtual the tenant master and uh that's the interface that we can",
    "start": "1798240",
    "end": "1803520"
  },
  {
    "text": "provide um owning additional concerts that i can think of is",
    "start": "1803520",
    "end": "1808799"
  },
  {
    "text": "the um the privileges the recovery you think about what are",
    "start": "1808799",
    "end": "1815360"
  },
  {
    "text": "the rights you know service account kind of what are the right permissions that these channels can operate on the",
    "start": "1815360",
    "end": "1820720"
  },
  {
    "text": "virtual cluster but for not exactly the security perspective most likely",
    "start": "1820720",
    "end": "1826399"
  },
  {
    "text": "for the stability perspective you don't want tenants you you you know easily to to make some mistakes",
    "start": "1826399",
    "end": "1832399"
  },
  {
    "text": "and break down this virtual cluster um the tooling wise",
    "start": "1832399",
    "end": "1837679"
  },
  {
    "text": "um i see some challenges on the tooling so as far as i can see now the biggest",
    "start": "1837679",
    "end": "1844320"
  },
  {
    "text": "challenge is the dns um the we have to in kernel model we",
    "start": "1844320",
    "end": "1849919"
  },
  {
    "text": "have to make slightly change if you look at our uh github page i i i explained how did",
    "start": "1849919",
    "end": "1856240"
  },
  {
    "text": "we just store the tenanted dns uh that probably just has a one line change to the upstream uh coding sg in",
    "start": "1856240",
    "end": "1862799"
  },
  {
    "text": "order include cooperate uh with this model for the to make sure",
    "start": "1862799",
    "end": "1869919"
  },
  {
    "text": "the tenant dns works um but that'll be we provide a guideline in the github page and they should",
    "start": "1869919",
    "end": "1875200"
  },
  {
    "text": "it is very straightforward and you can easily understand what i'm trying to do in there in the",
    "start": "1875200",
    "end": "1881679"
  },
  {
    "text": "queue allow the dns work um",
    "start": "1881679",
    "end": "1893840"
  },
  {
    "text": "oh okay i gotta the latest question is um uh the question is from way",
    "start": "1897679",
    "end": "1905279"
  },
  {
    "text": "uh the question is i cannot link the multi-tenant project to solve this concept so okay",
    "start": "1905279",
    "end": "1912399"
  },
  {
    "text": "so do you have any thoughts on it so let me explain a little bit so in my opinion",
    "start": "1912399",
    "end": "1918320"
  },
  {
    "text": "the service in the service contact subject the problem the whole problem the the idea is",
    "start": "1918320",
    "end": "1924640"
  },
  {
    "text": "we will have a node which is shared by multiple tenants so the the tenant users",
    "start": "1924640",
    "end": "1932879"
  },
  {
    "text": "doesn't have the the ownership over the node resource they only have ownership to the part resource so that's the whole",
    "start": "1933120",
    "end": "1940000"
  },
  {
    "text": "idea of having this you know uh virtual cluster objects basically uh we are allowed in a supermaster which",
    "start": "1940000",
    "end": "1947200"
  },
  {
    "text": "is we which we should actually imagine the node resource but the the node resource",
    "start": "1947200",
    "end": "1952960"
  },
  {
    "text": "can be provided by many many tenants so in the older model",
    "start": "1952960",
    "end": "1958080"
  },
  {
    "text": "so in all the multi cluster models each channel will have a dedicated cluster but rose battery clusters",
    "start": "1958080",
    "end": "1964399"
  },
  {
    "text": "also connect to a dedicated approval node so rose nodes can only use by one of the",
    "start": "1964399",
    "end": "1970320"
  },
  {
    "text": "tenants in order to provide strong isolation uh the problem is the u no node utilization cannot be optimized because",
    "start": "1970320",
    "end": "1976480"
  },
  {
    "text": "if the tenant doesn't use the rules no resource the nodes will become just idle",
    "start": "1976480",
    "end": "1981679"
  },
  {
    "text": "um the the whole purpose of this service model is trying to improve the node utilization make sure you know the",
    "start": "1981679",
    "end": "1989279"
  },
  {
    "text": "the the hardware resource can be used by many tenants without any uh interference",
    "start": "1989279",
    "end": "1995519"
  },
  {
    "text": "or any you know uh isolation concerts between those tenants so that's why we start we start this",
    "start": "1995519",
    "end": "2002480"
  },
  {
    "text": "project and if you look at our model um the node",
    "start": "2002480",
    "end": "2008480"
  },
  {
    "text": "we do expose unlike virtual coordinators so the node is completely abstracted uh we try to you know maximize the you",
    "start": "2008480",
    "end": "2015440"
  },
  {
    "text": "know the the the node semantics in the kubernetes so that's why in our virtual cluster",
    "start": "2015440",
    "end": "2022720"
  },
  {
    "text": "we have a virtual node object which actually maps to the real node so you can see the everything that you",
    "start": "2022720",
    "end": "2029039"
  },
  {
    "text": "probably about load capacity no name uh what are the parts running in the node",
    "start": "2029039",
    "end": "2034159"
  },
  {
    "text": "so those information are available so uh from the tenant's perspective uh but the",
    "start": "2034159",
    "end": "2040320"
  },
  {
    "text": "but the users just um can cannot say that i'm dominating you know that nobody else can use",
    "start": "2040320",
    "end": "2046000"
  },
  {
    "text": "it at this moment node is just a part research provider there's no ownership",
    "start": "2046000",
    "end": "2051599"
  },
  {
    "text": "for the node so notice ownership is belongs to the supermaster so that's uh so that's a",
    "start": "2051599",
    "end": "2058560"
  },
  {
    "text": "that's my view to you know mapping this project to your service concept uh i hope i address your content",
    "start": "2058560",
    "end": "2065040"
  },
  {
    "text": "so if you do have more questions about this so uh we can check later in the",
    "start": "2065040",
    "end": "2071919"
  },
  {
    "text": "channel um let me see",
    "start": "2072839",
    "end": "2089839"
  },
  {
    "text": "okay that's all the questions i have got so far um let me see if i missed anything",
    "start": "2100240",
    "end": "2108079"
  },
  {
    "text": "yeah i do apologize that the the the demo video is not showing up um yeah we have some problems while i do",
    "start": "2115280",
    "end": "2121839"
  },
  {
    "text": "the video recording uh i hope we can resolve it uh later and uh",
    "start": "2121839",
    "end": "2128720"
  },
  {
    "text": "especially if you have a replay um in the youtube somewhere and that demo will show up uh",
    "start": "2128720",
    "end": "2135440"
  },
  {
    "text": "also i try to you know see if i can upload the powerpoint directory in the project page um",
    "start": "2135440",
    "end": "2143599"
  },
  {
    "text": "all right it's almost the time and thanks a lot for joining this session and uh um i i'm going to be online",
    "start": "2143599",
    "end": "2151760"
  },
  {
    "text": "on the select channel",
    "start": "2151760",
    "end": "2155839"
  }
]