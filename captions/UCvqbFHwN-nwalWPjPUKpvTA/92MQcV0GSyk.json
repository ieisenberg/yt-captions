[
  {
    "start": "0",
    "end": "76000"
  },
  {
    "text": "good afternoon everybody I am Catholic envoys and I'm here to introduce this",
    "start": "210",
    "end": "6930"
  },
  {
    "text": "talk but just one little piece of logistics at the end of the talk if you",
    "start": "6930",
    "end": "13049"
  },
  {
    "text": "have a question please raise your hands I'm gonna try to run the mic so your question gets recorded as well and so if",
    "start": "13049",
    "end": "21300"
  },
  {
    "text": "you're in this room you know that there's more to kubernetes the docker and our my fellow CN CF ambassador here",
    "start": "21300",
    "end": "29609"
  },
  {
    "text": "to Estes he gave a talk about Solana on what other container runtimes are and he",
    "start": "29609",
    "end": "36960"
  },
  {
    "text": "is here today to talk about why the",
    "start": "36960",
    "end": "42600"
  },
  {
    "text": "there this other container container runtimes exist and it might become handy",
    "start": "42600",
    "end": "48660"
  },
  {
    "text": "if you make a choice to use something other than the most popular one today",
    "start": "48660",
    "end": "54090"
  },
  {
    "text": "and fill as this is a distinguished engineer from the office of the CTO at",
    "start": "54090",
    "end": "59820"
  },
  {
    "text": "IBM he's also a founding maintainer of the CN CF container GE runtime project",
    "start": "59820",
    "end": "65610"
  },
  {
    "text": "so he seems to be the perfect person to give this talk today welcome thank you all right thank you very much so yeah",
    "start": "65610",
    "end": "74070"
  },
  {
    "text": "with that introduction I guess first you know it's again with the runtimes talk",
    "start": "74070",
    "end": "80900"
  },
  {
    "start": "76000",
    "end": "76000"
  },
  {
    "text": "yeah so that I kind of a one-trick pony I talk about run times because that's",
    "start": "80900",
    "end": "87390"
  },
  {
    "text": "what I've been working on for about the last five years started contributing to",
    "start": "87390",
    "end": "94020"
  },
  {
    "text": "docker in 2015 2014 late 2014 and",
    "start": "94020",
    "end": "100850"
  },
  {
    "text": "obviously moved to container D and maintainer there so it's an area of",
    "start": "100850",
    "end": "106079"
  },
  {
    "text": "interest to me and obviously with kubernetes and the adoption of the CRI",
    "start": "106079",
    "end": "112939"
  },
  {
    "text": "it seems to be an interesting topic people seem to to be interested to",
    "start": "112939",
    "end": "118649"
  },
  {
    "text": "understand you know why do these things exist what are the options why are there options so in Barcelona I gave this talk",
    "start": "118649",
    "end": "125960"
  },
  {
    "text": "and my goal was wouldn't be really cool to like demo all of them",
    "start": "125960",
    "end": "132140"
  },
  {
    "text": "and that just meant like I raced through like switching screens and trying to get different clusters running and it was",
    "start": "132140",
    "end": "138530"
  },
  {
    "text": "sort of like okay wow so you ran a bunch of containers and different runtimes why",
    "start": "138530",
    "end": "144890"
  },
  {
    "text": "didn't you tell me like what's good and bad or you know why do these things exist so I submitted this part to talk",
    "start": "144890",
    "end": "151550"
  },
  {
    "text": "where I won't do a single demo so hopefully that's not going to be too boring but instead I'll talk about a",
    "start": "151550",
    "end": "158180"
  },
  {
    "text": "little bit try and answer some of those questions that people asked at the end of the talk in Barcelona and we'll see",
    "start": "158180",
    "end": "165020"
  },
  {
    "text": "if we can fit it in because again it's it's a lot of information here's a couple slides that again if you weren't",
    "start": "165020",
    "end": "170510"
  },
  {
    "text": "in Barcelona the background was OCI the open container initiative has brought us",
    "start": "170510",
    "end": "176030"
  },
  {
    "text": "to the place where we have a standardized idea of what a container is",
    "start": "176030",
    "end": "181760"
  },
  {
    "text": "from a runtime image and now even distribution standpoint such that we can",
    "start": "181760",
    "end": "187610"
  },
  {
    "text": "have multiple registries we can have multiple runtimes and we can all agree what that means on and have",
    "start": "187610",
    "end": "195080"
  },
  {
    "text": "interoperability if you add to that the CRI so kubernetes has the container",
    "start": "195080",
    "end": "200390"
  },
  {
    "text": "runtime interface as you can see it's not really a new thing anymore this blog",
    "start": "200390",
    "end": "205580"
  },
  {
    "text": "post from 2016 you know shows we're just now coming up on three years since the",
    "start": "205580",
    "end": "212060"
  },
  {
    "text": "CRI came into kubernetes 1.5 and in kubernetes container years that's like",
    "start": "212060",
    "end": "218390"
  },
  {
    "text": "ages ago hopefully none of you are so running kubernetes 1.5 if you are",
    "start": "218390",
    "end": "224540"
  },
  {
    "text": "there's a few Seavey's you probably want to know about but again with OSI I and",
    "start": "224540",
    "end": "231019"
  },
  {
    "text": "CRI we now have this sort of open playing field where if you implement the",
    "start": "231019",
    "end": "236570"
  },
  {
    "text": "CRI and you follow those the high specs you can be a runtime underneath",
    "start": "236570",
    "end": "241640"
  },
  {
    "text": "kubernetes and so we looked at this picture I've fixed it in a few places that I kept getting complaints that I",
    "start": "241640",
    "end": "248750"
  },
  {
    "start": "242000",
    "end": "242000"
  },
  {
    "text": "wasn't showing all the realities so below docker you obviously still have container D and run C so if you say I'm",
    "start": "248750",
    "end": "256010"
  },
  {
    "text": "running docker you're also running container D you're also running run C again we talked about CRI container D",
    "start": "256010",
    "end": "263570"
  },
  {
    "text": "which drives container and then run si creo and then we didn't",
    "start": "263570",
    "end": "270050"
  },
  {
    "text": "talk as much in Barcelona about the Shem API underneath container D but that's what exposes the ability to have some of",
    "start": "270050",
    "end": "277190"
  },
  {
    "text": "these other Isolators like katha firecracker G visor and then singularity",
    "start": "277190",
    "end": "283669"
  },
  {
    "text": "I think I mentioned briefly in Barcelona and again we'll mention it briefly here and the way if I if you were setting up",
    "start": "283669",
    "end": "291050"
  },
  {
    "text": "your own cluster and you know doing Kelcey Hightower's kubernetes the hard",
    "start": "291050",
    "end": "297139"
  },
  {
    "text": "way at some point you'd come up to this couplet you know - - contain a runtime",
    "start": "297139",
    "end": "302450"
  },
  {
    "text": "and and runtime endpoint this is the place where you could say here's my CRI I'm using docker I'm using container D",
    "start": "302450",
    "end": "309979"
  },
  {
    "text": "yummies and cRIO these other Isolators and again I showed this in Barcelona can",
    "start": "309979",
    "end": "317030"
  },
  {
    "text": "use runtime class so again we'll talk about that briefly or annotations as a",
    "start": "317030",
    "end": "322250"
  },
  {
    "text": "way to say hey Kubla I want you to actually tell the CRI that this is the",
    "start": "322250",
    "end": "329300"
  },
  {
    "text": "runtime I want to use and I want to use firecracker as the isolator so that's",
    "start": "329300",
    "end": "334669"
  },
  {
    "text": "kind of where we are this report came out I think just last week or two weeks ago from cystic and I you know I I don't",
    "start": "334669",
    "end": "344510"
  },
  {
    "start": "335000",
    "end": "335000"
  },
  {
    "text": "put this up to prove a point that hey you know docker one or container d1 or creo is is only 4% it's it's the fact",
    "start": "344510",
    "end": "352970"
  },
  {
    "text": "that reality is even with multiple choices docker has been kind of the",
    "start": "352970",
    "end": "359270"
  },
  {
    "text": "default for for many years and continues to be the lion's share of usage in",
    "start": "359270",
    "end": "365180"
  },
  {
    "text": "kubernetes clusters for runtimes we don't have a prior report I don't think Cystic had this kind of",
    "start": "365180",
    "end": "372020"
  },
  {
    "text": "data in the prior report so it's hard to say who's growing and who's who's",
    "start": "372020",
    "end": "378580"
  },
  {
    "text": "diminishing but obviously in the years future we can kind of look at the trends",
    "start": "378580",
    "end": "384669"
  },
  {
    "text": "but really again the the the interesting fact here is that that docker is still",
    "start": "384669",
    "end": "391160"
  },
  {
    "text": "running the lion's share of clusters out there obviously container D has been",
    "start": "391160",
    "end": "396680"
  },
  {
    "text": "sort of production-ready for just a year or two and so we're seeing growth there and then creo also being used in",
    "start": "396680",
    "end": "404210"
  },
  {
    "text": "OpenShift and and if you read the report they expect that number to grow as OpenShift installations switch from",
    "start": "404210",
    "end": "411139"
  },
  {
    "text": "docker to creo for example an open shift for and rail 8 that'll be the default the default so let's walk through kind",
    "start": "411139",
    "end": "420800"
  },
  {
    "text": "of these three main choices when again before we talk about sandboxes and special Isolators let's just look at",
    "start": "420800",
    "end": "427310"
  },
  {
    "text": "these three main runtimes so you know there's not a whole lot to say here if you've been around this community you",
    "start": "427310",
    "end": "434090"
  },
  {
    "start": "429000",
    "end": "429000"
  },
  {
    "text": "know what docker is it's the runtime that kind of started this whole thing obviously hopefully you're aware that",
    "start": "434090",
    "end": "441500"
  },
  {
    "text": "kubernetes never had a way to run containers it was always using a container runtime and that happened to",
    "start": "441500",
    "end": "447229"
  },
  {
    "text": "be docker from day one others came later rocket was introduced before the CRI so",
    "start": "447229",
    "end": "455090"
  },
  {
    "text": "there was rocket Nettie's maybe some of you use that but docker again has been",
    "start": "455090",
    "end": "460460"
  },
  {
    "text": "kind of the default and the de facto standard docker itself is is multiple",
    "start": "460460",
    "end": "466699"
  },
  {
    "text": "things and obviously many of you have probably heard the news in the last week or two that the enterprise part of this",
    "start": "466699",
    "end": "475370"
  },
  {
    "text": "suite if you want to think of it as that has been sold to moranto so obviously",
    "start": "475370",
    "end": "481340"
  },
  {
    "text": "the future will tell kind of where that path goes in the future but docker seee",
    "start": "481340",
    "end": "487760"
  },
  {
    "text": "remains with docker based on the mobi project so you've got the you know the",
    "start": "487760",
    "end": "492949"
  },
  {
    "text": "Claudia daemon build container D run C notary some of these are CMC F",
    "start": "492949",
    "end": "498010"
  },
  {
    "text": "contributed projects and an enterprise added a bunch of things around that",
    "start": "498010",
    "end": "503930"
  },
  {
    "text": "including a kubernetes distribution in addition to swarm and then docker desktop you know gave you this in recent",
    "start": "503930",
    "end": "511250"
  },
  {
    "text": "year as a single node kind of kubernetes setup as well as swarm on Mac and Windows so again why why would you use",
    "start": "511250",
    "end": "519770"
  },
  {
    "text": "docker obviously many tools and deployers are still defaulting to docker if that wasn't the case then that Cystic",
    "start": "519770",
    "end": "526970"
  },
  {
    "text": "report would probably have shown us some different it does have some value in in a cluster",
    "start": "526970",
    "end": "536459"
  },
  {
    "text": "where you kind of have a mixed use of your nodes where you expect other tools are expecting either the docker API",
    "start": "536459",
    "end": "543180"
  },
  {
    "text": "socket or expecting docker commands to just work you shouldn't be relying on",
    "start": "543180",
    "end": "549720"
  },
  {
    "text": "this but you know again in cluster build has been relying on the API socket there",
    "start": "549720",
    "end": "555330"
  },
  {
    "text": "are solutions to this which is why I'm saying you really shouldn't be relying on this in 2019 with projects like",
    "start": "555330",
    "end": "562320"
  },
  {
    "text": "Tecton and others but again there's there was a simplification here that",
    "start": "562320",
    "end": "568200"
  },
  {
    "text": "many people relied on and made it simple if docker is your it your runtime underneath kubernetes that means you can",
    "start": "568200",
    "end": "574170"
  },
  {
    "text": "also use the docker api people were mounting it as a volume mount inside a",
    "start": "574170",
    "end": "579390"
  },
  {
    "text": "container you get easy access to docker commands which also means you give easy access to hackers to then do anything",
    "start": "579390",
    "end": "586680"
  },
  {
    "text": "they want on your node which is the reason you shouldn't do that but again say we're a docker enterprise customer",
    "start": "586680",
    "end": "592950"
  },
  {
    "text": "obviously docker as a choice for your cluster gave you support from docker now",
    "start": "592950",
    "end": "598470"
  },
  {
    "text": "mer Antos and gave you no fur for a subset of users who wanted this idea I",
    "start": "598470",
    "end": "605310"
  },
  {
    "text": "can choose swarm or I can choose kubernetes you've got that so again",
    "start": "605310",
    "end": "610380"
  },
  {
    "text": "there's challenges here but you know let's just be real the docker engine is",
    "start": "610380",
    "end": "616320"
  },
  {
    "text": "a time-tested production deployed runtime that's been you know when you see huge numbers being shown on the the",
    "start": "616320",
    "end": "624630"
  },
  {
    "text": "keynote stage most likely the docker engine is involved in those massive",
    "start": "624630",
    "end": "630029"
  },
  {
    "text": "clusters that are doing very interesting things container D container d many of",
    "start": "630029",
    "end": "636029"
  },
  {
    "text": "you probably are aware and you heard from the intro you know just to admit I",
    "start": "636029",
    "end": "641459"
  },
  {
    "text": "have a bias I've been part of the container D project since it was created",
    "start": "641459",
    "end": "647810"
  },
  {
    "text": "it was donated to the CN CF in early 2017 by docker and effectively you know",
    "start": "647810",
    "end": "658230"
  },
  {
    "start": "656000",
    "end": "656000"
  },
  {
    "text": "I do not have time to walk you through this beautiful architecture picture that derek has put together which the teaser",
    "start": "658230",
    "end": "666090"
  },
  {
    "text": "is tomorrow we're having our mini summit for container D here at coop con and",
    "start": "666090",
    "end": "671820"
  },
  {
    "text": "we'll walk through this architecture go through you know these components but",
    "start": "671820",
    "end": "677010"
  },
  {
    "text": "effectively there's a set of ways to drive container D most likely through an",
    "start": "677010",
    "end": "682080"
  },
  {
    "text": "API through the CRI if you're using it underneath kubernetes that drives a set",
    "start": "682080",
    "end": "687120"
  },
  {
    "text": "of distinctive services like content image store namespaces etc that can",
    "start": "687120",
    "end": "693780"
  },
  {
    "text": "drive through the shim API any number of runtimes underneath whether that's run C",
    "start": "693780",
    "end": "698790"
  },
  {
    "text": "by default or catta or firecracker or G visor and across a number of",
    "start": "698790",
    "end": "705000"
  },
  {
    "text": "architectures including windows support which is is maturing and in 1:3 which we",
    "start": "705000",
    "end": "712140"
  },
  {
    "text": "just released recently is more complete so I won't read everything on this chart",
    "start": "712140",
    "end": "719180"
  },
  {
    "text": "adoption I think has been interesting we use it an IBM cloud for our managed",
    "start": "719180",
    "end": "725250"
  },
  {
    "text": "kubernetes offering google has ax as an option in GAE so if you're creating a",
    "start": "725250",
    "end": "731160"
  },
  {
    "text": "new cluster creating node pools you can select the container D image and use",
    "start": "731160",
    "end": "738690"
  },
  {
    "text": "container D as your image as your engine although I believe if you don't make a",
    "start": "738690",
    "end": "743730"
  },
  {
    "text": "choice you end up still with docker Alibaba public cloud is also using",
    "start": "743730",
    "end": "749130"
  },
  {
    "text": "container D they have a project called pouch which also heavily uses container",
    "start": "749130",
    "end": "754680"
  },
  {
    "text": "D and I think the value of that architecture that we didn't get to talk about is we've gotten feedback that it",
    "start": "754680",
    "end": "761970"
  },
  {
    "text": "has a very clean API and extends extension points there was a great talk from some of the AWS firecracker folks",
    "start": "761970",
    "end": "769830"
  },
  {
    "text": "yesterday on some of the ways that they've used those extension points but",
    "start": "769830",
    "end": "775290"
  },
  {
    "text": "that's led to a lot of different uses and and extensions some of them are",
    "start": "775290",
    "end": "780480"
  },
  {
    "text": "listed here k3s from Rancher from Darren Shepherd uses container D the new Azure",
    "start": "780480",
    "end": "788430"
  },
  {
    "text": "teleport feature uses the container D snapshot or there's a great blog post on that so again the extensibility and and",
    "start": "788430",
    "end": "795810"
  },
  {
    "text": "- to extend container D has been I think one of the the big values of why people",
    "start": "795810",
    "end": "802380"
  },
  {
    "text": "have chosen container D both with container D and creo because the engine",
    "start": "802380",
    "end": "807870"
  },
  {
    "text": "is simpler and smaller you end up with lower memory CPU footprint and we've had",
    "start": "807870",
    "end": "813300"
  },
  {
    "text": "a big focus on stability and performance in container D so again I've already",
    "start": "813300",
    "end": "818910"
  },
  {
    "text": "mentioned about extensibility the other things we've done in container D I think",
    "start": "818910",
    "end": "825210"
  },
  {
    "text": "have been valuable and a reason why some people are choosing it we have clear sort of support terms for our releases",
    "start": "825210",
    "end": "832080"
  },
  {
    "text": "so we're back porting fixes we have very clear release structures how things get",
    "start": "832080",
    "end": "838529"
  },
  {
    "text": "back ported when they're back ported there's also a significant sort of by",
    "start": "838529",
    "end": "844200"
  },
  {
    "text": "default hardening and testing that happens just by nature of every docker installation also uses container D so",
    "start": "844200",
    "end": "851070"
  },
  {
    "text": "there's tens of millions of engines out there that are using container D today which has given us a great amount of",
    "start": "851070",
    "end": "857550"
  },
  {
    "text": "testing like I mentioned maturing windows support especially in 1:3 and above and",
    "start": "857550",
    "end": "864660"
  },
  {
    "text": "the shim API allowing the plug ability that we'll talk about with some of the the specialized Isolators and again",
    "start": "864660",
    "end": "872520"
  },
  {
    "text": "there's a lot of cool things happening with the snapshot or API and remote proxy plugins so again the azure",
    "start": "872520",
    "end": "880710"
  },
  {
    "text": "teleport google has a project called c RFS and we're working with cern on their",
    "start": "880710",
    "end": "886410"
  },
  {
    "text": "c VMFS to allow you to basically pre populate layers across a cluster and",
    "start": "886410",
    "end": "893160"
  },
  {
    "text": "then instead of pulling from a registry automatically using those so again these are these are values that are in",
    "start": "893160",
    "end": "899940"
  },
  {
    "text": "container D because of the design and because of the way the API was put together for extensibility so let's talk",
    "start": "899940",
    "end": "907230"
  },
  {
    "start": "907000",
    "end": "907000"
  },
  {
    "text": "about creo you've already missed it but there was an intro to creo yesterday",
    "start": "907230",
    "end": "913230"
  },
  {
    "text": "from runo and one of his colleagues this was the chart when we you can",
    "start": "913230",
    "end": "919470"
  },
  {
    "text": "already get the slides from from sked but obviously there'll be a video",
    "start": "919470",
    "end": "924690"
  },
  {
    "text": "available as well of the intro talk again I think the the main point about",
    "start": "924690",
    "end": "931060"
  },
  {
    "text": "Krios architecture is that there's a couple libraries you can go look at them on github so containers slash image and",
    "start": "931060",
    "end": "938930"
  },
  {
    "text": "container slash storage these are implementations of the storage back-end so think of that like container",
    "start": "938930",
    "end": "945589"
  },
  {
    "text": "these snapshot and container slash image being that representation of an OCI",
    "start": "945589",
    "end": "951139"
  },
  {
    "text": "image and the API around that and so cRIO is built over run see with these",
    "start": "951139",
    "end": "956839"
  },
  {
    "text": "two kind of standardized libraries and a set of services that obviously work with kubernetes and the CRI to give you a",
    "start": "956839",
    "end": "965259"
  },
  {
    "text": "purely kind of OCI based engine hence the name",
    "start": "965259",
    "end": "970880"
  },
  {
    "text": "cRIO so directly supporting the OCI specs that was one of their design",
    "start": "970880",
    "end": "976610"
  },
  {
    "text": "points starting at these two shared libraries which again containers image",
    "start": "976610",
    "end": "982370"
  },
  {
    "text": "and container storage given they kind of standardize around this their tools build a scope EO pod man can actually",
    "start": "982370",
    "end": "990139"
  },
  {
    "text": "utilize the same store as creo as a kubernetes runtime and so therefore you",
    "start": "990139",
    "end": "996709"
  },
  {
    "text": "get sort of these suite of tools that all work together and and have sort of",
    "start": "996709",
    "end": "1001899"
  },
  {
    "text": "the same on disk representation of these pieces obviously used in Red Hat's",
    "start": "1001899",
    "end": "1009310"
  },
  {
    "text": "OpenShift sousei also has their containers of service using creo it's",
    "start": "1009310",
    "end": "1016510"
  },
  {
    "text": "now provided via rail so rl8 includes all the suite of tools and they don't",
    "start": "1016510",
    "end": "1023110"
  },
  {
    "text": "have have the docker RPMs and a ton X so if your based on rel using fedora then",
    "start": "1023110",
    "end": "1031569"
  },
  {
    "text": "obviously there's kind of a natural alignment with these tools from Red Hat",
    "start": "1031569",
    "end": "1037199"
  },
  {
    "text": "so again the Y kind of relates to those things you know openshift now fully",
    "start": "1037199",
    "end": "1042428"
  },
  {
    "text": "supports and defaults to creo delivered via okd and you get this alignment if",
    "start": "1042429",
    "end": "1048880"
  },
  {
    "text": "you're if you're on rel if you're using rel you you get an engine fully enabled",
    "start": "1048880",
    "end": "1054340"
  },
  {
    "text": "for SELinux synergy with the other tools that they've created around that the",
    "start": "1054340",
    "end": "1059799"
  },
  {
    "text": "scope EO build man build and Padma and family and",
    "start": "1059799",
    "end": "1065380"
  },
  {
    "text": "again I think I had there their quote another slide but as they'd like to say",
    "start": "1065380",
    "end": "1071770"
  },
  {
    "text": "just enough runtime for kubernetes and nothing more so they have a very tight release cycle with the kubernetes",
    "start": "1071770",
    "end": "1078010"
  },
  {
    "text": "release cycle so creo 1.16 is for kubernetes 1.16 so we've talked about",
    "start": "1078010",
    "end": "1087520"
  },
  {
    "text": "docker container d creo the next part is",
    "start": "1087520",
    "end": "1093070"
  },
  {
    "text": "is really you know once once you've obviously made a choice about a general",
    "start": "1093070",
    "end": "1098410"
  },
  {
    "text": "kind of Linux container runtime there's this whole aspect that that you've",
    "start": "1098410",
    "end": "1105430"
  },
  {
    "text": "probably heard about where people are saying well you know what about multi-tenancy use cases serverless use",
    "start": "1105430",
    "end": "1111970"
  },
  {
    "text": "cases and I want more isolation than just Linux C groups and namespaces and so in kubernetes 112 runtime class was",
    "start": "1111970",
    "end": "1120550"
  },
  {
    "text": "introduced there had been maybe you know there was the untrusted flag for for a",
    "start": "1120550",
    "end": "1127840"
  },
  {
    "text": "pods back and earlier kubernetes releases this kind of replaced that to",
    "start": "1127840",
    "end": "1133810"
  },
  {
    "text": "say I can now register runtimes in my cluster and then in a pods back I",
    "start": "1133810",
    "end": "1139810"
  },
  {
    "text": "can I can specify that this pod should use this runtime class and the CRI",
    "start": "1139810",
    "end": "1146040"
  },
  {
    "text": "implementing runtime should be able to map that to an actual shim or binary",
    "start": "1146040",
    "end": "1151060"
  },
  {
    "text": "that it wants to run and so I demoed that in in Barcelona using firecrackers",
    "start": "1151060",
    "end": "1159160"
  },
  {
    "text": "Jim and cat Ashim and G visor so again",
    "start": "1159160",
    "end": "1164890"
  },
  {
    "text": "just to kind of set the stage Annabel just tweeted this out I think over the",
    "start": "1164890",
    "end": "1171370"
  },
  {
    "text": "weekend or I guess it was on day zero the cloud native security day I wasn't here yet but Ian coldwater said if",
    "start": "1171370",
    "end": "1180430"
  },
  {
    "text": "you're not doing container isolations it's important to know what can happen if someone compromises that container",
    "start": "1180430",
    "end": "1185860"
  },
  {
    "text": "and then Annabelle kind of addenda with no time like the present to go look at G",
    "start": "1185860",
    "end": "1191350"
  },
  {
    "text": "visor and kind of container so again there's there's significant increased interest in these additional",
    "start": "1191350",
    "end": "1198520"
  },
  {
    "text": "Isolators and sandboxes again I'm no expert here there are experts here at",
    "start": "1198520",
    "end": "1205030"
  },
  {
    "text": "the conference but it was an area of interest to me so I did a little bit of reading and research and wrote this in fuck-you article that got published a",
    "start": "1205030",
    "end": "1212290"
  },
  {
    "text": "few months ago just talking about this kind of new marriage of hypervisors and",
    "start": "1212290",
    "end": "1217480"
  },
  {
    "text": "containers and so out of that you know I drew this picture to kind of help think",
    "start": "1217480",
    "end": "1224260"
  },
  {
    "start": "1221000",
    "end": "1221000"
  },
  {
    "text": "through and I have a feeling in the back of this room some of that may not be so readable but it's part of the article",
    "start": "1224260",
    "end": "1230650"
  },
  {
    "text": "that you can easily find an info queue to help think through why someone would",
    "start": "1230650",
    "end": "1237100"
  },
  {
    "text": "care about adding this extra layer of isolation and so if you think about sort",
    "start": "1237100",
    "end": "1243280"
  },
  {
    "text": "of standardized containers there are a set of tools that you can use to kind of",
    "start": "1243280",
    "end": "1249660"
  },
  {
    "text": "significantly reduce that attack surface of your container you can you",
    "start": "1249660",
    "end": "1254710"
  },
  {
    "text": "automatically get an app armor profile with docker but you could create your own and do more restrictions you get a",
    "start": "1254710",
    "end": "1261549"
  },
  {
    "text": "set comm profile with the docker run time and with container D but you could",
    "start": "1261549",
    "end": "1267010"
  },
  {
    "text": "restrict it further you can in fact some people are starting to create some interesting tools to help create SATCOM",
    "start": "1267010",
    "end": "1274210"
  },
  {
    "text": "profiles based on running your application and and trapping syscalls",
    "start": "1274210",
    "end": "1279299"
  },
  {
    "text": "there's Linux capabilities that are already reduced some just by nature of using a container runtime but you can",
    "start": "1279299",
    "end": "1286780"
  },
  {
    "text": "reduce that further you can do that in kubernetes and a pod step pod spec by dropping further capabilities you can do",
    "start": "1286780",
    "end": "1293380"
  },
  {
    "text": "that with the docker client or the other runtimes and then obviously there's",
    "start": "1293380",
    "end": "1298929"
  },
  {
    "text": "namespaces and C groups so you can reduce you can restrict CPU utilization you can strict memory use so these are",
    "start": "1298929",
    "end": "1306070"
  },
  {
    "text": "kind of the knobs that we've had for just pure Linux containers but we're still running on that host kernel and",
    "start": "1306070",
    "end": "1312610"
  },
  {
    "text": "there's still this syscall interface that even if we restrict it to some degree it's still exposed even from",
    "start": "1312610",
    "end": "1320169"
  },
  {
    "text": "within a container and as the in cold water said you know we don't know",
    "start": "1320169",
    "end": "1325960"
  },
  {
    "text": "what future escapes CVS etcetera may exist in that space and so we're left",
    "start": "1325960",
    "end": "1331240"
  },
  {
    "text": "potentially with exploits that that even can get out of these layers of our sort",
    "start": "1331240",
    "end": "1337809"
  },
  {
    "text": "of defense and depth strategy so by adding in this case you know on the right side I'm showing like a V mmm then",
    "start": "1337809",
    "end": "1345610"
  },
  {
    "text": "now you have a kernel that firecracker is inserted or cata containers as",
    "start": "1345610",
    "end": "1350860"
  },
  {
    "text": "inserted the now this is called boundary for your container is only for your container only with this isolated kernel",
    "start": "1350860",
    "end": "1358090"
  },
  {
    "text": "and things like firecracker add a set comp profile underneath that heavily",
    "start": "1358090",
    "end": "1364029"
  },
  {
    "text": "restricts the exposure of even that V mm to the host kernel and so these are the",
    "start": "1364029",
    "end": "1371230"
  },
  {
    "text": "kinds of things that people are looking at and thinking about when they're implementing you know serverless",
    "start": "1371230",
    "end": "1377279"
  },
  {
    "text": "functions of service offerings where you're definitely going to be running untrusted code and wanting this further",
    "start": "1377279",
    "end": "1384789"
  },
  {
    "text": "further levels of isolation so we'll",
    "start": "1384789",
    "end": "1389909"
  },
  {
    "text": "probably have to speed up a little bit through cata G visor and firecracker but",
    "start": "1389909",
    "end": "1396789"
  },
  {
    "text": "again I wanted to at least give kind of the what and why for each of these this",
    "start": "1396789",
    "end": "1402669"
  },
  {
    "start": "1397000",
    "end": "1397000"
  },
  {
    "text": "is a picture that Eric Ernst provided just recently I think Eric's here",
    "start": "1402669",
    "end": "1409390"
  },
  {
    "text": "somewhere and and can tell you all about counter containers that I can't tell you about but again their architecture is",
    "start": "1409390",
    "end": "1415809"
  },
  {
    "text": "again using a shim underneath container D that can drive the qmu based",
    "start": "1415809",
    "end": "1422409"
  },
  {
    "text": "hypervisor they also have support for fire cracker as a back-end as well it",
    "start": "1422409",
    "end": "1428200"
  },
  {
    "text": "obviously creates that that OS image that has the kernel has an agent starts",
    "start": "1428200",
    "end": "1433990"
  },
  {
    "text": "your container inside the the guest and gives you that level of isolation from",
    "start": "1433990",
    "end": "1441309"
  },
  {
    "text": "the host the background of the project some of you may or may not know Intel",
    "start": "1441309",
    "end": "1448450"
  },
  {
    "text": "clear containers of hyper SH where the predecessors they've now joined forces",
    "start": "1448450",
    "end": "1453700"
  },
  {
    "text": "together under the cat a name I already mentioned they have cue",
    "start": "1453700",
    "end": "1458740"
  },
  {
    "text": "as a default but also added support for firecracker last fall they can work with",
    "start": "1458740",
    "end": "1464860"
  },
  {
    "text": "dr. creo and container D and support kind of a general-purpose kubernetes use",
    "start": "1464860",
    "end": "1470110"
  },
  {
    "text": "case they have great you know Doc's getting started that can help you try",
    "start": "1470110",
    "end": "1475960"
  },
  {
    "text": "that out and governance there under the OpenStack foundation and have multi",
    "start": "1475960",
    "end": "1482320"
  },
  {
    "text": "architecture support very interestingly by two-by-twos cloud released an",
    "start": "1482320",
    "end": "1491140"
  },
  {
    "text": "interesting white paper that has tons of details about their use of cata that is a great read and this is a medium post",
    "start": "1491140",
    "end": "1498730"
  },
  {
    "text": "that has links to the white paper and also gives you some of the contacts for that so again why would you choose cata",
    "start": "1498730",
    "end": "1505980"
  },
  {
    "text": "if you have this desire for additional isolation than just the pure Linux",
    "start": "1505980",
    "end": "1511210"
  },
  {
    "text": "container primitives you prefer hypervisor of a hypervisor based versus",
    "start": "1511210",
    "end": "1517510"
  },
  {
    "text": "like the G Weiser model which we'll talk about in a second if you need broad multi architecture support kind of has",
    "start": "1517510",
    "end": "1525190"
  },
  {
    "text": "that and there's fewer restrictions out of the box than the way fire cracker is set up because fire cracker has a",
    "start": "1525190",
    "end": "1532029"
  },
  {
    "text": "narrower focus - again AWS created it more focused on the lambda use case",
    "start": "1532029",
    "end": "1539340"
  },
  {
    "text": "versus katas more general-purpose use case alright so moving along let's talk",
    "start": "1539340",
    "end": "1545380"
  },
  {
    "text": "about fire cracker again these diagrams are going to be",
    "start": "1545380",
    "end": "1552250"
  },
  {
    "start": "1546000",
    "end": "1546000"
  },
  {
    "text": "pretty hard to read I think from the back of the room but these are directly",
    "start": "1552250",
    "end": "1557710"
  },
  {
    "text": "from the github project for the fire cracker micro VM again a lot of",
    "start": "1557710",
    "end": "1564669"
  },
  {
    "text": "similarities with cata in that they're handling the creation of the VM inserting the kernel they have created a",
    "start": "1564669",
    "end": "1573510"
  },
  {
    "text": "snapshot ER implementation that they contributed to container D dev mapper so",
    "start": "1573510",
    "end": "1580570"
  },
  {
    "text": "using the device mapper for storage and so that can be used by both fire",
    "start": "1580570",
    "end": "1585789"
  },
  {
    "text": "crackers shim as well as cata also as a way to use",
    "start": "1585789",
    "end": "1590980"
  },
  {
    "text": "the new device mapper snapshot or within container D so again one of the",
    "start": "1590980",
    "end": "1598960"
  },
  {
    "text": "attractions of firecracker is the idea that the vmm was written in rust",
    "start": "1598960",
    "end": "1604019"
  },
  {
    "text": "originating from a google project it does have a very narrow focus around the",
    "start": "1604019",
    "end": "1610840"
  },
  {
    "text": "lamda use case so there are certain restrictions that they accepted for",
    "start": "1610840",
    "end": "1616240"
  },
  {
    "text": "firecracker because it fits their model you can use it standalone or they have",
    "start": "1616240",
    "end": "1621399"
  },
  {
    "text": "written a shim for container D and as I also have this idea of a jailer adding C",
    "start": "1621399",
    "end": "1628480"
  },
  {
    "text": "group and set com restrictions on their vmm which runs on top of that",
    "start": "1628480",
    "end": "1636450"
  },
  {
    "text": "interestingly since Barcelona there have been a few projects that have wrapped",
    "start": "1636600",
    "end": "1641649"
  },
  {
    "text": "firecracker with some additional capability so we've works has ignite and",
    "start": "1641649",
    "end": "1647049"
  },
  {
    "text": "then more recently the fire cube project and so this is again kind of this",
    "start": "1647049",
    "end": "1653139"
  },
  {
    "text": "marriage of I want container like youth use model but I want hypervisors of vm's",
    "start": "1653139",
    "end": "1660700"
  },
  {
    "text": "in the background and so those are two interesting projects to go look at if you're interested so why would you",
    "start": "1660700",
    "end": "1668350"
  },
  {
    "text": "choose firecracker if that narrow use case and that use model fits what you're",
    "start": "1668350",
    "end": "1673419"
  },
  {
    "text": "looking for and you don't need the general purpose container use case so",
    "start": "1673419",
    "end": "1678669"
  },
  {
    "text": "for example volume mounts don't work and the way firecracker is set up today",
    "start": "1678669",
    "end": "1684600"
  },
  {
    "text": "maybe you're attracted to the security promises of the rough space vmm or maybe",
    "start": "1684600",
    "end": "1690580"
  },
  {
    "text": "you know this ignite and fire cube these projects are of interest to you all",
    "start": "1690580",
    "end": "1698019"
  },
  {
    "start": "1698000",
    "end": "1698000"
  },
  {
    "text": "right so G Weiser so Ian gave a talk",
    "start": "1698019",
    "end": "1703090"
  },
  {
    "text": "over the weekend at cloud native rejects and so he shared this diagram with me I",
    "start": "1703090",
    "end": "1711010"
  },
  {
    "text": "also have a link to his entire talk about running an untrusted code in kubernetes so the architecture of G",
    "start": "1711010",
    "end": "1718360"
  },
  {
    "text": "Weiser is different because we're not talking about hyper-v lightly hypervisor isolation",
    "start": "1718360",
    "end": "1723909"
  },
  {
    "text": "at this point they have sentry which is basically a a set of Linux system calls",
    "start": "1723909",
    "end": "1732249"
  },
  {
    "text": "implemented in userspace written and go it's joined by another architecture",
    "start": "1732249",
    "end": "1740919"
  },
  {
    "text": "piece called gopher which handles the file system access and so Google is",
    "start": "1740919",
    "end": "1747609"
  },
  {
    "text": "using gee visor and Google cloud run there's a lot of great information online about how they're using gee visor",
    "start": "1747609",
    "end": "1754479"
  },
  {
    "text": "for that for again this increased isolation and security boundary you can",
    "start": "1754479",
    "end": "1760569"
  },
  {
    "text": "use it as a run sirrah plate replacement so they have a run SC they also have a",
    "start": "1760569",
    "end": "1766419"
  },
  {
    "text": "shim implementation again that I used to demonstrate running G visor underneath",
    "start": "1766419",
    "end": "1772959"
  },
  {
    "text": "container D in Barcelona sentry doesn't implement every system call out there",
    "start": "1772959",
    "end": "1779069"
  },
  {
    "text": "and it also by default intercepts sis calls via P trace which has some",
    "start": "1779069",
    "end": "1784899"
  },
  {
    "text": "performance impact although they are they have an experimental KVM based",
    "start": "1784899",
    "end": "1790209"
  },
  {
    "text": "method as well that gains some of that back again the interest the draw here",
    "start": "1790209",
    "end": "1798069"
  },
  {
    "text": "for G visor maybe the the hypervisor model isn't necessarily of interest to",
    "start": "1798069",
    "end": "1805209"
  },
  {
    "text": "you but this idea that that your system calls from your container aren't going",
    "start": "1805209",
    "end": "1810429"
  },
  {
    "text": "through your host kernel but going against G visors implementations again",
    "start": "1810429",
    "end": "1816129"
  },
  {
    "text": "you're going to have to accept that there's some limited functionality there they did put out a blog post several",
    "start": "1816129",
    "end": "1822309"
  },
  {
    "text": "months ago just showing some of the additions they made in the in the first year of G visor so they are adding",
    "start": "1822309",
    "end": "1829869"
  },
  {
    "text": "syscalls there they're removing some of the incompleteness of some of the file",
    "start": "1829869",
    "end": "1835809"
  },
  {
    "text": "system interfaces so again this is an obvious alternative to the hypervisor",
    "start": "1835809",
    "end": "1842319"
  },
  {
    "text": "model and has less management so again you're not going to have a custom kernel",
    "start": "1842319",
    "end": "1847329"
  },
  {
    "text": "being inserted and booted and you don't have some of the agents involved in the",
    "start": "1847329",
    "end": "1853509"
  },
  {
    "text": "other model so two final pieces in the last few minutes I talked",
    "start": "1853509",
    "end": "1860470"
  },
  {
    "start": "1856000",
    "end": "1856000"
  },
  {
    "text": "briefly about nabla this is a open source project the IBM Research created",
    "start": "1860470",
    "end": "1866470"
  },
  {
    "text": "it's based around Yoona kernels on top of a very highly restricted set count",
    "start": "1866470",
    "end": "1874390"
  },
  {
    "text": "profile so they again the eunuch er no that is booted running your container has very limited access to the host",
    "start": "1874390",
    "end": "1881680"
  },
  {
    "text": "kernel the big limitation is that nabla forces you to rebuild a lot of your",
    "start": "1881680",
    "end": "1887530"
  },
  {
    "text": "container images against a special set of basis that the nabla team created",
    "start": "1887530",
    "end": "1893140"
  },
  {
    "text": "they'd love to remove that limitation but for now that makes it very hard to to really have adoption because you",
    "start": "1893140",
    "end": "1900490"
  },
  {
    "text": "can't just point to an image on docker hub and expect it to work with nabla and then singularity I mentioned because in",
    "start": "1900490",
    "end": "1907750"
  },
  {
    "start": "1906000",
    "end": "1906000"
  },
  {
    "text": "the last year they did implement both OC I support and implemented a CRI I think",
    "start": "1907750",
    "end": "1916240"
  },
  {
    "text": "it would have been awesome if they had made just a shim using the shim API for container D would it kept them from",
    "start": "1916240",
    "end": "1922420"
  },
  {
    "text": "having to implement the whole CRI but if you haven't heard of singularity it's an HPC focused runtime focused on the",
    "start": "1922420",
    "end": "1931360"
  },
  {
    "text": "academic research community not demon based so again if you know anything",
    "start": "1931360",
    "end": "1937390"
  },
  {
    "text": "about HPC clusters it works a lot better with some of the workload orchestrators",
    "start": "1937390",
    "end": "1942940"
  },
  {
    "text": "they already have in that world and they also have their an image format called",
    "start": "1942940",
    "end": "1949660"
  },
  {
    "text": "SIF and again there again if you're in that space you've probably heard of them if not you you probably haven't so in",
    "start": "1949660",
    "end": "1959140"
  },
  {
    "start": "1953000",
    "end": "1953000"
  },
  {
    "text": "summary the creation of OCI the fact",
    "start": "1959140",
    "end": "1964480"
  },
  {
    "text": "that we now all agree on what an images on the runtime spec on distribution we",
    "start": "1964480",
    "end": "1971170"
  },
  {
    "text": "have this comment under underpinning that allows for people to innovate in the space but yet we all have",
    "start": "1971170",
    "end": "1976420"
  },
  {
    "text": "interoperability we're not using a different registry for COD on a different registry for firecracker or",
    "start": "1976420",
    "end": "1984100"
  },
  {
    "text": "different register for creo so that's the goodness we have today CRI then",
    "start": "1984100",
    "end": "1989740"
  },
  {
    "text": "allows kubernetes the plug ability for container runtimes and",
    "start": "1989740",
    "end": "1994860"
  },
  {
    "text": "really you know we continue to see options growing in the space lots of innovation around this the sandbox idea",
    "start": "1994860",
    "end": "2002399"
  },
  {
    "text": "with G Weiser cata firecracker and others and really it's up to you you",
    "start": "2002399",
    "end": "2007740"
  },
  {
    "text": "know I I can't tell you that you absolutely should use docker or container to York Rio or you should",
    "start": "2007740",
    "end": "2014190"
  },
  {
    "text": "enable cata you know based on your threat model your use case what you're building you know obviously that",
    "start": "2014190",
    "end": "2021299"
  },
  {
    "text": "hopefully will lead you based on some of the pros and cons I've shared based on some of the architectural choices that",
    "start": "2021299",
    "end": "2028620"
  },
  {
    "text": "that each of these projects made so with",
    "start": "2028620",
    "end": "2033630"
  },
  {
    "text": "that unless I'm confused I think I may be totally out of time or maybe I have",
    "start": "2033630",
    "end": "2038700"
  },
  {
    "text": "30 seconds but one or two questions",
    "start": "2038700",
    "end": "2044539"
  },
  {
    "text": "hey guys going to quick ones it seems like the term runtime is a little",
    "start": "2048889",
    "end": "2053908"
  },
  {
    "text": "overloaded docker container dear uncie do you have a way of D conflicting those",
    "start": "2053909",
    "end": "2058980"
  },
  {
    "text": "and then the other one is just with container D and Dockers and say both use container D maybe I mean you said it but",
    "start": "2058980",
    "end": "2065250"
  },
  {
    "text": "maybe I missed it why would I use one versus the other yeah so so I'm horrible and did",
    "start": "2065250",
    "end": "2071849"
  },
  {
    "text": "mystifying the idea of Renta I mean I there's some blog posts out there that tried to say we should call one thing an",
    "start": "2071849",
    "end": "2077820"
  },
  {
    "text": "engine and one thing a runtime I've been very nonspecific I think the term we're",
    "start": "2077820",
    "end": "2085589"
  },
  {
    "text": "gonna use tomorrow in the container D summit is like low-level runtime and sort of high-level runtime I don't know",
    "start": "2085589",
    "end": "2092220"
  },
  {
    "text": "if that helps at all to your your second point what you're missing with container",
    "start": "2092220",
    "end": "2101520"
  },
  {
    "text": "D container D is really made for embedding in a system like kubernetes so all the developer workflow around docker",
    "start": "2101520",
    "end": "2109349"
  },
  {
    "text": "build you know docker push some of these exist in our kind of CTR tool but CTR is",
    "start": "2109349",
    "end": "2116640"
  },
  {
    "text": "not meant to be kind of a full-featured developer environment so that's really",
    "start": "2116640",
    "end": "2121800"
  },
  {
    "text": "where docker comes into play you know and again all the suite of things around that weather",
    "start": "2121800",
    "end": "2127980"
  },
  {
    "text": "urine dachshund compose or or other pieces of that ecosystem sure you said",
    "start": "2127980",
    "end": "2144300"
  },
  {
    "text": "that Padma and bilder were useful tools for cryo how does cryo relate to lib pod then yes a limb pod is shared among",
    "start": "2144300",
    "end": "2155310"
  },
  {
    "text": "those tools I think I mean it's a library shared across Padma and cRIO",
    "start": "2155310",
    "end": "2163140"
  },
  {
    "text": "does anyone right so so pod yeah I I",
    "start": "2163140",
    "end": "2176430"
  },
  {
    "text": "think from my understanding the existence of containers image container storage lid pot is so there's not",
    "start": "2176430",
    "end": "2182460"
  },
  {
    "text": "duplicated code across both the developer tools as well as the runtime cRIO I don't know if that is that clear",
    "start": "2182460",
    "end": "2192150"
  },
  {
    "text": "yep all right well I will I'm willing to hang out here for a little bit but I",
    "start": "2192150",
    "end": "2198240"
  },
  {
    "text": "think we're over time so thanks very much for coming [Applause]",
    "start": "2198240",
    "end": "2208260"
  }
]