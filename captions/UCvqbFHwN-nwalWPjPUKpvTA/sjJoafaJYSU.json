[
  {
    "start": "0",
    "end": "70000"
  },
  {
    "text": "hi my name is carsten schnitter",
    "start": "960",
    "end": "3679"
  },
  {
    "text": "i work as a development expert at sap",
    "start": "3679",
    "end": "6560"
  },
  {
    "text": "business technology platform",
    "start": "6560",
    "end": "8800"
  },
  {
    "text": "my team provides logging services for",
    "start": "8800",
    "end": "10719"
  },
  {
    "text": "applications running on that platform",
    "start": "10719",
    "end": "13200"
  },
  {
    "text": "today i want to share our experience",
    "start": "13200",
    "end": "15839"
  },
  {
    "text": "with fluency",
    "start": "15839",
    "end": "16880"
  },
  {
    "text": "when providing logging for cloud foundry",
    "start": "16880",
    "end": "19039"
  },
  {
    "text": "applications",
    "start": "19039",
    "end": "20720"
  },
  {
    "text": "let's have a short look how logging in",
    "start": "20720",
    "end": "22880"
  },
  {
    "text": "cloud foundry works",
    "start": "22880",
    "end": "24320"
  },
  {
    "text": "an application can write its logs to",
    "start": "24320",
    "end": "27039"
  },
  {
    "text": "standard out and standard error",
    "start": "27039",
    "end": "29439"
  },
  {
    "text": "those logs are collected by the cloud",
    "start": "29439",
    "end": "31679"
  },
  {
    "text": "foundry lobby gator system",
    "start": "31679",
    "end": "33280"
  },
  {
    "text": "running in the container runtime it can",
    "start": "33280",
    "end": "36000"
  },
  {
    "text": "forward",
    "start": "36000",
    "end": "36719"
  },
  {
    "text": "the application locks as well as the",
    "start": "36719",
    "end": "39040"
  },
  {
    "text": "access locks coming from the go router",
    "start": "39040",
    "end": "41280"
  },
  {
    "text": "via syslog any component that receives",
    "start": "41280",
    "end": "44559"
  },
  {
    "text": "such a syslog",
    "start": "44559",
    "end": "45680"
  },
  {
    "text": "stream is called a syslog tray i want",
    "start": "45680",
    "end": "48800"
  },
  {
    "text": "today to show you",
    "start": "48800",
    "end": "49920"
  },
  {
    "text": "how to set up fluentd as such resistor",
    "start": "49920",
    "end": "52160"
  },
  {
    "text": "tray that means",
    "start": "52160",
    "end": "53760"
  },
  {
    "text": "i will explain how to register a system",
    "start": "53760",
    "end": "56000"
  },
  {
    "text": "training cloud foundry",
    "start": "56000",
    "end": "57520"
  },
  {
    "text": "in general and then how to configure",
    "start": "57520",
    "end": "60000"
  },
  {
    "text": "fluency as such as the stock endpoint",
    "start": "60000",
    "end": "62640"
  },
  {
    "text": "how to pass the application logs and",
    "start": "62640",
    "end": "65040"
  },
  {
    "text": "finally",
    "start": "65040",
    "end": "65840"
  },
  {
    "text": "how to pass the access logs from the go",
    "start": "65840",
    "end": "68080"
  },
  {
    "text": "router",
    "start": "68080",
    "end": "70080"
  },
  {
    "start": "70000",
    "end": "167000"
  },
  {
    "text": "so let's start with configuration of the",
    "start": "70080",
    "end": "72720"
  },
  {
    "text": "system tray",
    "start": "72720",
    "end": "73760"
  },
  {
    "text": "we assume that fluid d is already",
    "start": "73760",
    "end": "76640"
  },
  {
    "text": "running",
    "start": "76640",
    "end": "77280"
  },
  {
    "text": "and we know the url to fluid d",
    "start": "77280",
    "end": "80720"
  },
  {
    "text": "what we now need is the service binding",
    "start": "80720",
    "end": "82799"
  },
  {
    "text": "to forward the logs",
    "start": "82799",
    "end": "84080"
  },
  {
    "text": "that can be a service binding to a",
    "start": "84080",
    "end": "85520"
  },
  {
    "text": "user-provided service which we will use",
    "start": "85520",
    "end": "87600"
  },
  {
    "text": "here",
    "start": "87600",
    "end": "88320"
  },
  {
    "text": "or any other managed service so the",
    "start": "88320",
    "end": "91439"
  },
  {
    "text": "steps for user provided service are",
    "start": "91439",
    "end": "93680"
  },
  {
    "text": "first register and create a",
    "start": "93680",
    "end": "95840"
  },
  {
    "text": "user-provided service",
    "start": "95840",
    "end": "97360"
  },
  {
    "text": "and then bind our application to that",
    "start": "97360",
    "end": "99920"
  },
  {
    "text": "service instance",
    "start": "99920",
    "end": "101360"
  },
  {
    "text": "so let's have a look at an example we",
    "start": "101360",
    "end": "103600"
  },
  {
    "text": "say fluentd",
    "start": "103600",
    "end": "104799"
  },
  {
    "text": "is running at the url",
    "start": "104799",
    "end": "107960"
  },
  {
    "text": "fluentd.example.com",
    "start": "107960",
    "end": "109520"
  },
  {
    "text": "and we also have an application running",
    "start": "109520",
    "end": "111119"
  },
  {
    "text": "on cloud foundry by the name of",
    "start": "111119",
    "end": "113040"
  },
  {
    "text": "my app we will create a service with the",
    "start": "113040",
    "end": "115840"
  },
  {
    "text": "name",
    "start": "115840",
    "end": "116159"
  },
  {
    "text": "fluentd logs for the forwarding we can",
    "start": "116159",
    "end": "118960"
  },
  {
    "text": "choose between three protocols",
    "start": "118960",
    "end": "120880"
  },
  {
    "text": "the first one we will use is plain",
    "start": "120880",
    "end": "122719"
  },
  {
    "text": "syslog and there are",
    "start": "122719",
    "end": "124240"
  },
  {
    "text": "more secure options with tls support for",
    "start": "124240",
    "end": "127119"
  },
  {
    "text": "syslog or syslog over https",
    "start": "127119",
    "end": "130560"
  },
  {
    "text": "so let's use the cfcli commands",
    "start": "130560",
    "end": "133599"
  },
  {
    "text": "for this thing so first we create a user",
    "start": "133599",
    "end": "137120"
  },
  {
    "text": "provided service with the name fluid",
    "start": "137120",
    "end": "139360"
  },
  {
    "text": "minus logs and then with the minus l",
    "start": "139360",
    "end": "141840"
  },
  {
    "text": "switch",
    "start": "141840",
    "end": "142480"
  },
  {
    "text": "we give it the syslogtrain url that",
    "start": "142480",
    "end": "145360"
  },
  {
    "text": "points to our running fluency instance",
    "start": "145360",
    "end": "148959"
  },
  {
    "text": "then we bind our app maya",
    "start": "148959",
    "end": "152080"
  },
  {
    "text": "to the newly created service instance",
    "start": "152080",
    "end": "154640"
  },
  {
    "text": "fluentd",
    "start": "154640",
    "end": "155440"
  },
  {
    "text": "logs and that's all there is",
    "start": "155440",
    "end": "158560"
  },
  {
    "text": "a word of caution you need to secure the",
    "start": "158560",
    "end": "161280"
  },
  {
    "text": "fluency",
    "start": "161280",
    "end": "161920"
  },
  {
    "text": "instance you are binding here against",
    "start": "161920",
    "end": "164319"
  },
  {
    "text": "unwanted excess",
    "start": "164319",
    "end": "166720"
  },
  {
    "text": "so what do we see at the fluent design",
    "start": "166720",
    "end": "169440"
  },
  {
    "start": "167000",
    "end": "269000"
  },
  {
    "text": "incoming messages will have the",
    "start": "169440",
    "end": "170879"
  },
  {
    "text": "following format",
    "start": "170879",
    "end": "172239"
  },
  {
    "text": "and you will get them by configuring a",
    "start": "172239",
    "end": "174959"
  },
  {
    "text": "source",
    "start": "174959",
    "end": "175519"
  },
  {
    "text": "type syslog the message format is",
    "start": "175519",
    "end": "179560"
  },
  {
    "text": "ifc5424",
    "start": "179560",
    "end": "180959"
  },
  {
    "text": "and the transport will usually be tcp",
    "start": "180959",
    "end": "183680"
  },
  {
    "text": "depending on the cloud foundry",
    "start": "183680",
    "end": "185200"
  },
  {
    "text": "configuration can also be udp",
    "start": "185200",
    "end": "187680"
  },
  {
    "text": "so let's have a look at the parts of",
    "start": "187680",
    "end": "189360"
  },
  {
    "text": "this message the first",
    "start": "189360",
    "end": "191040"
  },
  {
    "text": "is the priority that is default to info",
    "start": "191040",
    "end": "193920"
  },
  {
    "text": "by cloud foundry",
    "start": "193920",
    "end": "195519"
  },
  {
    "text": "and next thing is the ingestion",
    "start": "195519",
    "end": "197360"
  },
  {
    "text": "timestamp that means the time stem",
    "start": "197360",
    "end": "199360"
  },
  {
    "text": "when the cloud fountain logic data",
    "start": "199360",
    "end": "200959"
  },
  {
    "text": "received the message",
    "start": "200959",
    "end": "202560"
  },
  {
    "text": "and then there is information on the",
    "start": "202560",
    "end": "204799"
  },
  {
    "text": "origin of the message so this is the awk",
    "start": "204799",
    "end": "206879"
  },
  {
    "text": "name the space name",
    "start": "206879",
    "end": "208159"
  },
  {
    "text": "and the apnea unfortunately all three",
    "start": "208159",
    "end": "210640"
  },
  {
    "text": "kind of information",
    "start": "210640",
    "end": "212080"
  },
  {
    "text": "a little bit unhelpful if you really",
    "start": "212080",
    "end": "214640"
  },
  {
    "text": "want to distinguish",
    "start": "214640",
    "end": "216239"
  },
  {
    "text": "the log messages the first really useful",
    "start": "216239",
    "end": "218640"
  },
  {
    "text": "thing is the app id",
    "start": "218640",
    "end": "220159"
  },
  {
    "text": "i use the placeholder here for the uuid",
    "start": "220159",
    "end": "222640"
  },
  {
    "text": "that is usually there",
    "start": "222640",
    "end": "224159"
  },
  {
    "text": "and the next thing is the source type i",
    "start": "224159",
    "end": "227040"
  },
  {
    "text": "will explain about the source type",
    "start": "227040",
    "end": "228799"
  },
  {
    "text": "later on so all of this you get just",
    "start": "228799",
    "end": "231599"
  },
  {
    "text": "from the sister configuration to the",
    "start": "231599",
    "end": "233360"
  },
  {
    "text": "left",
    "start": "233360",
    "end": "234080"
  },
  {
    "text": "but as you can see there are more parts",
    "start": "234080",
    "end": "236239"
  },
  {
    "text": "the first part is the so-called",
    "start": "236239",
    "end": "237760"
  },
  {
    "text": "structured",
    "start": "237760",
    "end": "238959"
  },
  {
    "text": "syslog data and this contains all the cf",
    "start": "238959",
    "end": "242560"
  },
  {
    "text": "metadata to attribute the logs to its",
    "start": "242560",
    "end": "245439"
  },
  {
    "text": "source",
    "start": "245439",
    "end": "246159"
  },
  {
    "text": "i will explain how to pass this part in",
    "start": "246159",
    "end": "248480"
  },
  {
    "text": "the next slide",
    "start": "248480",
    "end": "249840"
  },
  {
    "text": "and the final part is the log message",
    "start": "249840",
    "end": "251760"
  },
  {
    "text": "itself and depending on the source",
    "start": "251760",
    "end": "254000"
  },
  {
    "text": "type there can be different formats in",
    "start": "254000",
    "end": "255840"
  },
  {
    "text": "the log message so it can be the",
    "start": "255840",
    "end": "257759"
  },
  {
    "text": "application log messages",
    "start": "257759",
    "end": "259440"
  },
  {
    "text": "it can be the assess logs from the go",
    "start": "259440",
    "end": "261440"
  },
  {
    "text": "router or it can be",
    "start": "261440",
    "end": "263520"
  },
  {
    "text": "run time events from cloud foundry and i",
    "start": "263520",
    "end": "265919"
  },
  {
    "text": "will explain",
    "start": "265919",
    "end": "266720"
  },
  {
    "text": "that one as well so let's have a look on",
    "start": "266720",
    "end": "270240"
  },
  {
    "start": "269000",
    "end": "378000"
  },
  {
    "text": "how to pass the metadata",
    "start": "270240",
    "end": "272479"
  },
  {
    "text": "so the extra data field will look",
    "start": "272479",
    "end": "274639"
  },
  {
    "text": "something like is",
    "start": "274639",
    "end": "275840"
  },
  {
    "text": "what you see below this contains a lot",
    "start": "275840",
    "end": "279120"
  },
  {
    "text": "of source identification",
    "start": "279120",
    "end": "280800"
  },
  {
    "text": "so it will tell you the app the message",
    "start": "280800",
    "end": "283680"
  },
  {
    "text": "originated from the space the app was",
    "start": "283680",
    "end": "285680"
  },
  {
    "text": "deployed in",
    "start": "285680",
    "end": "286479"
  },
  {
    "text": "and the order the space belongs to and",
    "start": "286479",
    "end": "288720"
  },
  {
    "text": "also if the application is running in",
    "start": "288720",
    "end": "290880"
  },
  {
    "text": "multiple instances",
    "start": "290880",
    "end": "292080"
  },
  {
    "text": "you can distinguish the running",
    "start": "292080",
    "end": "293600"
  },
  {
    "text": "instances by the instance id",
    "start": "293600",
    "end": "295600"
  },
  {
    "text": "also contained in this metadata and then",
    "start": "295600",
    "end": "298240"
  },
  {
    "text": "there is",
    "start": "298240",
    "end": "298880"
  },
  {
    "text": "more information and this is information",
    "start": "298880",
    "end": "301680"
  },
  {
    "text": "about the cloud foundry runtime",
    "start": "301680",
    "end": "303680"
  },
  {
    "text": "so you will get to know what the ego",
    "start": "303680",
    "end": "306479"
  },
  {
    "text": "cell the deployment was running on",
    "start": "306479",
    "end": "308479"
  },
  {
    "text": "what the ip of the cell was and such",
    "start": "308479",
    "end": "310800"
  },
  {
    "text": "things",
    "start": "310800",
    "end": "312320"
  },
  {
    "text": "so to pass the extra data as below",
    "start": "312320",
    "end": "316160"
  },
  {
    "text": "we apply a three-step process the first",
    "start": "316160",
    "end": "319120"
  },
  {
    "text": "is the pre-processing that just removes",
    "start": "319120",
    "end": "320960"
  },
  {
    "text": "the brackets",
    "start": "320960",
    "end": "321840"
  },
  {
    "text": "at the beginning at the end of the",
    "start": "321840",
    "end": "323520"
  },
  {
    "text": "content then we pass the metadata fields",
    "start": "323520",
    "end": "327199"
  },
  {
    "text": "you and for this we use the labeled tab",
    "start": "327199",
    "end": "330320"
  },
  {
    "text": "separated value filter",
    "start": "330320",
    "end": "332560"
  },
  {
    "text": "because then we don't need to know how",
    "start": "332560",
    "end": "334080"
  },
  {
    "text": "the fields are called",
    "start": "334080",
    "end": "335600"
  },
  {
    "text": "and finally there's a post-processing",
    "start": "335600",
    "end": "337600"
  },
  {
    "text": "step you will notice that cloud foundry",
    "start": "337600",
    "end": "340560"
  },
  {
    "text": "quotes all the values and that one we",
    "start": "340560",
    "end": "342479"
  },
  {
    "text": "want to remove",
    "start": "342479",
    "end": "344320"
  },
  {
    "text": "so in configuration this looks as",
    "start": "344320",
    "end": "346880"
  },
  {
    "text": "follows",
    "start": "346880",
    "end": "347520"
  },
  {
    "text": "removing the brackets is a small ruby",
    "start": "347520",
    "end": "350000"
  },
  {
    "text": "code snippet",
    "start": "350000",
    "end": "351360"
  },
  {
    "text": "then you see the configuration for the",
    "start": "351360",
    "end": "353120"
  },
  {
    "text": "lts me parsing rule",
    "start": "353120",
    "end": "355120"
  },
  {
    "text": "so also very basic and finally in the",
    "start": "355120",
    "end": "358000"
  },
  {
    "text": "post-processing step",
    "start": "358000",
    "end": "359520"
  },
  {
    "text": "when we remove the quotes this again is",
    "start": "359520",
    "end": "361680"
  },
  {
    "text": "done with a small ruby expression",
    "start": "361680",
    "end": "363840"
  },
  {
    "text": "but here you need to know the name of",
    "start": "363840",
    "end": "365520"
  },
  {
    "text": "the fields so this is no longer dynamic",
    "start": "365520",
    "end": "368560"
  },
  {
    "text": "but still you specify",
    "start": "368560",
    "end": "371840"
  },
  {
    "text": "all the fields you want to have so you",
    "start": "371840",
    "end": "373440"
  },
  {
    "text": "don't need to take all just the ones",
    "start": "373440",
    "end": "375199"
  },
  {
    "text": "that are interesting to you",
    "start": "375199",
    "end": "378160"
  },
  {
    "start": "378000",
    "end": "484000"
  },
  {
    "text": "so now we have the metadata we know",
    "start": "378160",
    "end": "380560"
  },
  {
    "text": "where the message came from let's see",
    "start": "380560",
    "end": "382400"
  },
  {
    "text": "for the message itself so there are",
    "start": "382400",
    "end": "384240"
  },
  {
    "text": "different message formats",
    "start": "384240",
    "end": "385759"
  },
  {
    "text": "depending on the source type the first",
    "start": "385759",
    "end": "388639"
  },
  {
    "text": "part",
    "start": "388639",
    "end": "389360"
  },
  {
    "text": "everything that starts with app slash",
    "start": "389360",
    "end": "391919"
  },
  {
    "text": "these are messages that come from the",
    "start": "391919",
    "end": "393600"
  },
  {
    "text": "application",
    "start": "393600",
    "end": "394240"
  },
  {
    "text": "itself it's jobs or the sidecast that",
    "start": "394240",
    "end": "397440"
  },
  {
    "text": "are",
    "start": "397440",
    "end": "398319"
  },
  {
    "text": "deployed by the user by the application",
    "start": "398319",
    "end": "400800"
  },
  {
    "text": "developer",
    "start": "400800",
    "end": "401600"
  },
  {
    "text": "and this is user generated format and",
    "start": "401600",
    "end": "404080"
  },
  {
    "text": "here is",
    "start": "404080",
    "end": "404800"
  },
  {
    "text": "where you put your custom routes",
    "start": "404800",
    "end": "406560"
  },
  {
    "text": "depending on the application you are",
    "start": "406560",
    "end": "408000"
  },
  {
    "text": "looking at",
    "start": "408000",
    "end": "409360"
  },
  {
    "text": "then there is rtr that stands for",
    "start": "409360",
    "end": "412720"
  },
  {
    "text": "go router so these are the access logs",
    "start": "412720",
    "end": "415199"
  },
  {
    "text": "this is plain text",
    "start": "415199",
    "end": "416639"
  },
  {
    "text": "and it's basically an extended apache",
    "start": "416639",
    "end": "418880"
  },
  {
    "text": "log format",
    "start": "418880",
    "end": "419919"
  },
  {
    "text": "and i will show how to pass this with",
    "start": "419919",
    "end": "421919"
  },
  {
    "text": "the general reg x pattern",
    "start": "421919",
    "end": "424240"
  },
  {
    "text": "and finally there are a lot of source",
    "start": "424240",
    "end": "427280"
  },
  {
    "text": "types",
    "start": "427280",
    "end": "428080"
  },
  {
    "text": "like api staging loggregator ssh and",
    "start": "428080",
    "end": "431440"
  },
  {
    "text": "cell",
    "start": "431440",
    "end": "432160"
  },
  {
    "text": "and these are runtime events from cloud",
    "start": "432160",
    "end": "434080"
  },
  {
    "text": "foundry they are in plain text",
    "start": "434080",
    "end": "436400"
  },
  {
    "text": "and we leave them just as is",
    "start": "436400",
    "end": "439840"
  },
  {
    "text": "so if you have this kind of different",
    "start": "439840",
    "end": "443120"
  },
  {
    "text": "formats there are two approaches you can",
    "start": "443120",
    "end": "444880"
  },
  {
    "text": "take",
    "start": "444880",
    "end": "446080"
  },
  {
    "text": "the first one is to use the multi-format",
    "start": "446080",
    "end": "448240"
  },
  {
    "text": "parser plugin and that's the one i will",
    "start": "448240",
    "end": "450000"
  },
  {
    "text": "showcase",
    "start": "450000",
    "end": "450960"
  },
  {
    "text": "and the second one is to really switch",
    "start": "450960",
    "end": "452639"
  },
  {
    "text": "the parsing by the source time",
    "start": "452639",
    "end": "455039"
  },
  {
    "text": "so how would this configuration look",
    "start": "455039",
    "end": "456720"
  },
  {
    "text": "like so",
    "start": "456720",
    "end": "458319"
  },
  {
    "text": "here you see the multi-format parser in",
    "start": "458319",
    "end": "461440"
  },
  {
    "text": "action for the application i assume it",
    "start": "461440",
    "end": "464479"
  },
  {
    "text": "would write a json format",
    "start": "464479",
    "end": "466319"
  },
  {
    "text": "so that's the first part the second part",
    "start": "466319",
    "end": "468960"
  },
  {
    "text": "is the go",
    "start": "468960",
    "end": "469520"
  },
  {
    "text": "router logs i left the expression out",
    "start": "469520",
    "end": "471680"
  },
  {
    "text": "here because it's rather lengthy",
    "start": "471680",
    "end": "473440"
  },
  {
    "text": "and i will show it on the next slide and",
    "start": "473440",
    "end": "475919"
  },
  {
    "text": "the last one is just the format",
    "start": "475919",
    "end": "477680"
  },
  {
    "text": "none for all the then runtime events",
    "start": "477680",
    "end": "481840"
  },
  {
    "text": "okay now how do we pass the router logs",
    "start": "481840",
    "end": "485919"
  },
  {
    "start": "484000",
    "end": "578000"
  },
  {
    "text": "of course this is an assess log so it",
    "start": "485919",
    "end": "487840"
  },
  {
    "text": "has a lot of fields",
    "start": "487840",
    "end": "489919"
  },
  {
    "text": "the first fields are fixed in format and",
    "start": "489919",
    "end": "492720"
  },
  {
    "text": "they are very similar to apache logs",
    "start": "492720",
    "end": "494960"
  },
  {
    "text": "so you get for every request the host",
    "start": "494960",
    "end": "497520"
  },
  {
    "text": "the user the method and the protocol",
    "start": "497520",
    "end": "500319"
  },
  {
    "text": "and also requests and response sizes and",
    "start": "500319",
    "end": "503520"
  },
  {
    "text": "such",
    "start": "503520",
    "end": "503919"
  },
  {
    "text": "things and then there is an additional",
    "start": "503919",
    "end": "506800"
  },
  {
    "text": "optional fields",
    "start": "506800",
    "end": "508160"
  },
  {
    "text": "in and they depend on the go router",
    "start": "508160",
    "end": "510240"
  },
  {
    "text": "configuration",
    "start": "510240",
    "end": "511199"
  },
  {
    "text": "so they may differ from different cloud",
    "start": "511199",
    "end": "513039"
  },
  {
    "text": "foundry installations",
    "start": "513039",
    "end": "514399"
  },
  {
    "text": "so there might be http headers for",
    "start": "514399",
    "end": "516800"
  },
  {
    "text": "instance for tracing like zipkin or open",
    "start": "516800",
    "end": "518959"
  },
  {
    "text": "tracing there might be response times or",
    "start": "518959",
    "end": "521440"
  },
  {
    "text": "again",
    "start": "521440",
    "end": "521839"
  },
  {
    "text": "some metadata about the application so",
    "start": "521839",
    "end": "525040"
  },
  {
    "text": "if you want to pass such a router lock",
    "start": "525040",
    "end": "527360"
  },
  {
    "text": "the expression that i will give now",
    "start": "527360",
    "end": "529519"
  },
  {
    "text": "needs to take care of this so again we",
    "start": "529519",
    "end": "532880"
  },
  {
    "text": "can use two steps the first",
    "start": "532880",
    "end": "534480"
  },
  {
    "text": "is to pass the fixed format you find the",
    "start": "534480",
    "end": "536959"
  },
  {
    "text": "expression down below",
    "start": "536959",
    "end": "538399"
  },
  {
    "text": "so you see it is rather lengthy but it's",
    "start": "538399",
    "end": "541600"
  },
  {
    "text": "just",
    "start": "541600",
    "end": "542000"
  },
  {
    "text": "taken from the apache two filter and",
    "start": "542000",
    "end": "544560"
  },
  {
    "text": "extended a little bit to cover",
    "start": "544560",
    "end": "546800"
  },
  {
    "text": "more fields and also to take care of the",
    "start": "546800",
    "end": "549440"
  },
  {
    "text": "quotes that cloud foundry",
    "start": "549440",
    "end": "550880"
  },
  {
    "text": "once again emits and once you have this",
    "start": "550880",
    "end": "553760"
  },
  {
    "text": "you notice",
    "start": "553760",
    "end": "554399"
  },
  {
    "text": "at the very end there is an additional",
    "start": "554399",
    "end": "556480"
  },
  {
    "text": "data field",
    "start": "556480",
    "end": "557519"
  },
  {
    "text": "and that will contain all the optional",
    "start": "557519",
    "end": "559279"
  },
  {
    "text": "periods and this is the second step",
    "start": "559279",
    "end": "562080"
  },
  {
    "text": "you can pass the optional fields just as",
    "start": "562080",
    "end": "564720"
  },
  {
    "text": "we pass the cf metadata it's basically",
    "start": "564720",
    "end": "566959"
  },
  {
    "text": "again key value pairs",
    "start": "566959",
    "end": "569120"
  },
  {
    "text": "but this is now a very cloud foundry",
    "start": "569120",
    "end": "571360"
  },
  {
    "text": "configuration specific thing",
    "start": "571360",
    "end": "573200"
  },
  {
    "text": "so this needs to be tailored to your",
    "start": "573200",
    "end": "575920"
  },
  {
    "text": "landscape",
    "start": "575920",
    "end": "577760"
  },
  {
    "text": "so summarizing all of this cloud foundry",
    "start": "577760",
    "end": "580959"
  },
  {
    "start": "578000",
    "end": "611000"
  },
  {
    "text": "can forward lots of applications",
    "start": "580959",
    "end": "583040"
  },
  {
    "text": "via syslog brains fluently can easily",
    "start": "583040",
    "end": "587200"
  },
  {
    "text": "receive those messages as a the",
    "start": "587200",
    "end": "588959"
  },
  {
    "text": "syslogtrain",
    "start": "588959",
    "end": "590320"
  },
  {
    "text": "and if you want to pass the incoming",
    "start": "590320",
    "end": "592560"
  },
  {
    "text": "messages",
    "start": "592560",
    "end": "593440"
  },
  {
    "text": "you will require an advanced ruleset to",
    "start": "593440",
    "end": "596560"
  },
  {
    "text": "first pass the syslog part",
    "start": "596560",
    "end": "598480"
  },
  {
    "text": "and then take care of the metadata and",
    "start": "598480",
    "end": "600399"
  },
  {
    "text": "the log messages",
    "start": "600399",
    "end": "602079"
  },
  {
    "text": "and the three kind of formats of log",
    "start": "602079",
    "end": "604320"
  },
  {
    "text": "messages you will get",
    "start": "604320",
    "end": "606079"
  },
  {
    "text": "so i hope this presentation is",
    "start": "606079",
    "end": "608079"
  },
  {
    "text": "interesting to you",
    "start": "608079",
    "end": "609200"
  },
  {
    "text": "and thank you for your intention",
    "start": "609200",
    "end": "613519"
  }
]