[
  {
    "start": "0",
    "end": "99000"
  },
  {
    "text": "alright it looks like our numbers have stabilized and we'll go ahead and get started welcome to today's CMC s webinar",
    "start": "30",
    "end": "7290"
  },
  {
    "text": "service operation i'm taylor nard marketing manager at CNCs and I'd like",
    "start": "7290",
    "end": "13349"
  },
  {
    "text": "to thank you all for joining us today I'd also like to welcome today's presenter film Vasanti creator of fishin",
    "start": "13349",
    "end": "20010"
  },
  {
    "text": "a.m. which is an open source server list framework he'll be talking about service",
    "start": "20010",
    "end": "25830"
  },
  {
    "text": "applications on kubernetes today so just a few housekeeping items before we get started you as an attendee are not able",
    "start": "25830",
    "end": "33989"
  },
  {
    "text": "to speak during the webinar so there is a Q&A box at the bottom of your screen so if you have any questions during the",
    "start": "33989",
    "end": "40230"
  },
  {
    "text": "webinar please feel free to drop them in there and then they get to many as we can at the end also the session is being",
    "start": "40230",
    "end": "46829"
  },
  {
    "text": "recorded and will be sent out afterwards along with the link to the presentation usually within about 24 hours so with",
    "start": "46829",
    "end": "54420"
  },
  {
    "text": "that I'll hand it over to them to introduce himself and get started thanks Caitlin and hey everyone I'm some banana",
    "start": "54420",
    "end": "61949"
  },
  {
    "text": "I work at platform 9 on the on the vision framework I created this",
    "start": "61949",
    "end": "67710"
  },
  {
    "text": "framework about a year and change months ago and most of this talk is not really",
    "start": "67710",
    "end": "76710"
  },
  {
    "text": "a specific deficient we've we've thought a lot about how server less and fazz",
    "start": "76710",
    "end": "83009"
  },
  {
    "text": "effects operations and how it is affected by by DevOps both technically",
    "start": "83009",
    "end": "90090"
  },
  {
    "text": "and and organizationally and we're going to talk about that today",
    "start": "90090",
    "end": "95220"
  },
  {
    "text": "so really quick intro to what fish in itself is it's an open source could be",
    "start": "95220",
    "end": "101340"
  },
  {
    "start": "99000",
    "end": "99000"
  },
  {
    "text": "Nettie's native server less function or fast framework if you're familiar with",
    "start": "101340",
    "end": "106560"
  },
  {
    "text": "AWS lambda the the idea is very similar except that it's open source and you can",
    "start": "106560",
    "end": "112140"
  },
  {
    "text": "run it in the kubernetes cluster which means you can run it on premise in the cloud wherever you can run kubernetes",
    "start": "112140",
    "end": "119570"
  },
  {
    "text": "the main design goals of this framework are that it's easy to use so you don't have a steep learning curve the goal is",
    "start": "119570",
    "end": "127680"
  },
  {
    "text": "to make developers very productive and it's also designed to be to be",
    "start": "127680",
    "end": "133569"
  },
  {
    "text": "in actual its actual runtime performance and more specifically its we've tried to",
    "start": "133569",
    "end": "140739"
  },
  {
    "text": "make tunable cost performance trade-offs and we will go into this a little more",
    "start": "140739",
    "end": "145900"
  },
  {
    "text": "deeply later in the presentation but but first I'd like to do you know zoom out a",
    "start": "145900",
    "end": "151659"
  },
  {
    "text": "bit and and motivate serverless itself a",
    "start": "151659",
    "end": "157200"
  },
  {
    "start": "153000",
    "end": "153000"
  },
  {
    "text": "lot of the motivation for serverless has been around developer productivity the",
    "start": "157200",
    "end": "163659"
  },
  {
    "text": "idea that developers can focus just an application code and have frameworks",
    "start": "163659",
    "end": "169389"
  },
  {
    "text": "take care of more and more of the interests infrastructure layers and and",
    "start": "169389",
    "end": "175659"
  },
  {
    "text": "civilus frameworks have been very successful at that the the other",
    "start": "175659",
    "end": "180760"
  },
  {
    "text": "motivation has been has been economics related which is that services that are",
    "start": "180760",
    "end": "186879"
  },
  {
    "text": "idle ideally you shouldn't be paying for them so you you want to pay just for what you use and both these motivations",
    "start": "186879",
    "end": "194319"
  },
  {
    "text": "mean that serverless is going to occupy a really important part of the software stack and",
    "start": "194319",
    "end": "200040"
  },
  {
    "text": "importantly even though we're talking about paying just for what you use there are on-premise benefits too and and",
    "start": "200040",
    "end": "206919"
  },
  {
    "text": "again we'll go into this a little deeper but generally the idea is that you can improve your resource utilization even",
    "start": "206919",
    "end": "213549"
  },
  {
    "text": "if you can't directly see how it affects your your costs so now that we talked",
    "start": "213549",
    "end": "223750"
  },
  {
    "start": "220000",
    "end": "220000"
  },
  {
    "text": "about server less and the developer benefits as well as the cost benefits",
    "start": "223750",
    "end": "230250"
  },
  {
    "text": "what does it really mean to take several less apps into production we want all",
    "start": "230250",
    "end": "235389"
  },
  {
    "text": "these productivity advantages we think it's useful both in the public cloud and in the data center but what we really",
    "start": "235389",
    "end": "243219"
  },
  {
    "text": "want is to be able to go faster both safely and at scale and and let's dive",
    "start": "243219",
    "end": "250359"
  },
  {
    "text": "into what that means that the general idea of DevOps has always been that we",
    "start": "250359",
    "end": "256989"
  },
  {
    "text": "want we want productivity but we also want safety we want to reduce the risk",
    "start": "256989",
    "end": "262599"
  },
  {
    "text": "of deployments and we want we want to do all this at scale not just scale of infrastructure",
    "start": "262599",
    "end": "269350"
  },
  {
    "text": "but also the scale of the organization so you know there are various versions",
    "start": "269350",
    "end": "275170"
  },
  {
    "start": "273000",
    "end": "273000"
  },
  {
    "text": "of this pipeline but in general any organization has a pipeline through",
    "start": "275170",
    "end": "280390"
  },
  {
    "text": "which changes go from the developers environment all the way to the end-user",
    "start": "280390",
    "end": "286660"
  },
  {
    "text": "so a typical pipeline might have some sort of pre mode checks these may run on",
    "start": "286660",
    "end": "293050"
  },
  {
    "text": "the developers laptop or in a CI system and they run before the code affects",
    "start": "293050",
    "end": "298630"
  },
  {
    "text": "anybody else other than that developer assuming those checks are passed you go",
    "start": "298630",
    "end": "303640"
  },
  {
    "text": "to the next step which is building and packaging to make this thing ready for distribution then it goes through some",
    "start": "303640",
    "end": "310420"
  },
  {
    "text": "more steps of validation and approval if there's a staging environment it goes",
    "start": "310420",
    "end": "316570"
  },
  {
    "text": "there and this this is an environment that's as close to production as possible but doesn't actually affect",
    "start": "316570",
    "end": "321670"
  },
  {
    "text": "production users and finally it gets deployed to production but that's not",
    "start": "321670",
    "end": "327400"
  },
  {
    "text": "the end you still have to make sure that it stays up that it's healthy and so on and having done all these steps that",
    "start": "327400",
    "end": "334990"
  },
  {
    "text": "code is now ready for that change is now ready to be shipped to the end-user so",
    "start": "334990",
    "end": "341020"
  },
  {
    "text": "so the general idea of DevOps if you notice so many of these steps are basically about safety about making sure",
    "start": "341020",
    "end": "346510"
  },
  {
    "text": "that your change doesn't doesn't break things for the end-user doesn't break your your product and your applications",
    "start": "346510",
    "end": "353160"
  },
  {
    "text": "so what does this mean for fast how what what specific concrete ideas and steps",
    "start": "353160",
    "end": "360910"
  },
  {
    "text": "and recommendations can we take from this so we took a shot at at making some",
    "start": "360910",
    "end": "366430"
  },
  {
    "start": "366000",
    "end": "366000"
  },
  {
    "text": "patterns and and figuring out how they apply to fast and serverless I'm just",
    "start": "366430",
    "end": "374350"
  },
  {
    "text": "gonna quickly go through these but we'll dive into each of them in a lot of detail they're really the beginning of",
    "start": "374350",
    "end": "380260"
  },
  {
    "text": "everything is how you specify your applications and that that kind of sets the stage for what your tooling can and",
    "start": "380260",
    "end": "386230"
  },
  {
    "text": "cannot do and we're going to argue that declarative configuration is really the",
    "start": "386230",
    "end": "391390"
  },
  {
    "text": "best way it is to specify applications we're gonna talk about live reload so that you get fast feedback on bugs about",
    "start": "391390",
    "end": "398860"
  },
  {
    "text": "record replay for better and debugging and as we go closer to the",
    "start": "398860",
    "end": "404260"
  },
  {
    "text": "later stages they're more related to production and operations so we'll talk about reducing deployment risk with",
    "start": "404260",
    "end": "410350"
  },
  {
    "text": "canneries we'll talk about monitoring metrics tracing logs alerts all that stuff and finally we will take a little",
    "start": "410350",
    "end": "417880"
  },
  {
    "text": "bit of a tour into cost optimization which is a pretty big topic",
    "start": "417880",
    "end": "423280"
  },
  {
    "text": "okay so let's dive into the first one how how do you specify our applications what is the best way to to tell the",
    "start": "423280",
    "end": "430510"
  },
  {
    "text": "system what your application is is made of where are the functions where are the",
    "start": "430510",
    "end": "436620"
  },
  {
    "text": "events and so on so there's two broadly",
    "start": "436620",
    "end": "443590"
  },
  {
    "start": "440000",
    "end": "440000"
  },
  {
    "text": "two ways of specifying or configuring an application for such that it's ready for",
    "start": "443590",
    "end": "448600"
  },
  {
    "text": "deployment there's the imperative way which is essentially composed of you know a",
    "start": "448600",
    "end": "453610"
  },
  {
    "text": "series of verbs so you say take this do that copy this file here execute that",
    "start": "453610",
    "end": "459430"
  },
  {
    "text": "file there you know open this port there and so on and these are very imperative",
    "start": "459430",
    "end": "465520"
  },
  {
    "text": "steps they're essentially like if you imagine using something like ansible or even a bash script that does a",
    "start": "465520",
    "end": "471039"
  },
  {
    "text": "deployment those those things are typically embedded by contrast the other",
    "start": "471039",
    "end": "477310"
  },
  {
    "text": "way to do this is to use declarative configurations and here you don't really",
    "start": "477310",
    "end": "482470"
  },
  {
    "text": "say how to do a thing you just say what the end state should be so you say",
    "start": "482470",
    "end": "488039"
  },
  {
    "text": "ensure that this file exists on this server or in this cluster or ensure that",
    "start": "488039",
    "end": "493930"
  },
  {
    "text": "this resource exists over here ensure that it's up ensure that there's so-and-so number of replicas ensure that",
    "start": "493930",
    "end": "501039"
  },
  {
    "text": "it's healthy and things like that and and it sounds kind of subtle but the",
    "start": "501039",
    "end": "506080"
  },
  {
    "text": "what's enabled by declarative stuff is it's pretty different from what's enabled by imperative things and these",
    "start": "506080",
    "end": "513250"
  },
  {
    "text": "the this general difference between imperative and declarative applies to how you how you specify where your",
    "start": "513250",
    "end": "520959"
  },
  {
    "text": "source is how you package it how you configure it how you deploy it the whole",
    "start": "520959",
    "end": "526870"
  },
  {
    "text": "pipeline of of deploying and specifying an application so",
    "start": "526870",
    "end": "531930"
  },
  {
    "text": "so why declarative first of all if you've specified your app declaratively",
    "start": "531930",
    "end": "537510"
  },
  {
    "start": "535000",
    "end": "535000"
  },
  {
    "text": "you have without actually deploying it you have a way to you have you can have",
    "start": "537510",
    "end": "544050"
  },
  {
    "text": "tools that actually understand something about the configuration and this allows you to do validation so for example",
    "start": "544050",
    "end": "550770"
  },
  {
    "text": "suppose you write a function that depends on some other service and you",
    "start": "550770",
    "end": "556290"
  },
  {
    "text": "can specify that in your configuration then your validator can actually check that the config is kind of consistent",
    "start": "556290",
    "end": "563580"
  },
  {
    "text": "right that that the function whatever the function references actually exists somewhere else in that same",
    "start": "563580",
    "end": "569580"
  },
  {
    "text": "configuration so you can look you can look at the configuration as a whole as",
    "start": "569580",
    "end": "575100"
  },
  {
    "text": "either one app or even a set of apps and you can and you can look for consistency",
    "start": "575100",
    "end": "580200"
  },
  {
    "text": "within that within that set and this is really powerful because you can find bugs before you even hit a single",
    "start": "580200",
    "end": "586440"
  },
  {
    "text": "cluster now that you've had now that you have a valid config you can do one-click",
    "start": "586440",
    "end": "594510"
  },
  {
    "text": "deploys using the tool that can understand that declarative configuration and and this is powerful",
    "start": "594510",
    "end": "600450"
  },
  {
    "text": "because the person doing the deploy doesn't have to know anything about the internals of the application we'll dive",
    "start": "600450",
    "end": "607050"
  },
  {
    "text": "into this a lot more but the other thing about declarative config is that because",
    "start": "607050",
    "end": "615330"
  },
  {
    "text": "it doesn't say how to actually how to actually reach the end state the tooling",
    "start": "615330",
    "end": "621180"
  },
  {
    "text": "is free to to figure out how to do that and that means it can work both on a clean slate but also on a somewhat messy",
    "start": "621180",
    "end": "630060"
  },
  {
    "text": "state that may be existing so for example you've done you've installed",
    "start": "630060",
    "end": "635280"
  },
  {
    "text": "version 1 of your system and you've applied it using a declarative config",
    "start": "635280",
    "end": "640860"
  },
  {
    "text": "and you want to do an upgrade and you've done some arbitrary set of changes you've added some stuff you've removed",
    "start": "640860",
    "end": "646470"
  },
  {
    "text": "some stuff you've changed other things all you have to do is the same thing",
    "start": "646470",
    "end": "651600"
  },
  {
    "text": "that you did for the initial deploy and the tooling can figure out what this state of the cluster is and what your",
    "start": "651600",
    "end": "657090"
  },
  {
    "text": "desired state is and reconcile all of the differences now the other",
    "start": "657090",
    "end": "664250"
  },
  {
    "text": "benefits are around how you can how you can actually use the artifact of the",
    "start": "664250",
    "end": "671300"
  },
  {
    "text": "configuration itself in other words your configs can live in in a git repo or in",
    "start": "671300",
    "end": "677930"
  },
  {
    "text": "whatever version control system you're using so you can version everything and",
    "start": "677930",
    "end": "682970"
  },
  {
    "text": "this this actually has benefits other than versioning itself so first of all it lets you collaborate between various",
    "start": "682970",
    "end": "690500"
  },
  {
    "text": "teams that are responsible for the config so maybe developers are responsible for some parts operations",
    "start": "690500",
    "end": "696230"
  },
  {
    "text": "folks are responsible for others and they can all collaborate in one version control system everyone's changes are",
    "start": "696230",
    "end": "701450"
  },
  {
    "text": "visible to everyone else and if you if you make sure that your cluster for",
    "start": "701450",
    "end": "706940"
  },
  {
    "text": "example is deployed automatically from this repository then you can also use",
    "start": "706940",
    "end": "712130"
  },
  {
    "text": "this repository as a as a sort of knowledge base for what your cluster",
    "start": "712130",
    "end": "717920"
  },
  {
    "text": "state is or should be at least if your cluster ever deviates from that state you can simply apply this configuration",
    "start": "717920",
    "end": "724520"
  },
  {
    "text": "again to the cluster so you can do all these little automations that map the",
    "start": "724520",
    "end": "730010"
  },
  {
    "text": "the repository to the cluster and again we'll talk about that a little more in detail when we do the demo a nice",
    "start": "730010",
    "end": "738650"
  },
  {
    "text": "benefit of versioning is obviously rollback so let's say you go through all",
    "start": "738650",
    "end": "744140"
  },
  {
    "text": "these steps but you finally find that something went wrong your new version breaks in some unique way in production",
    "start": "744140",
    "end": "751900"
  },
  {
    "text": "there's nothing - there's no major loss",
    "start": "751900",
    "end": "757550"
  },
  {
    "text": "here because you can always just roll back to a previous version and use the automation that deploys from this",
    "start": "757550",
    "end": "764270"
  },
  {
    "text": "repository - to make sure the cluster also rolls back to the previous version so you version your application and your",
    "start": "764270",
    "end": "770930"
  },
  {
    "text": "configs especially if you version them in the same repo then that makes rollback really easy and this general",
    "start": "770930",
    "end": "777620"
  },
  {
    "text": "idea has been called git ops where you map a cluster to a repo and you get all these nice benefits another little",
    "start": "777620",
    "end": "785690"
  },
  {
    "text": "benefit and we'll go into this in the demo also is that once you've specified your configuration declaratively",
    "start": "785690",
    "end": "793610"
  },
  {
    "text": "again the tooling is is free to optimize how exactly that lies are done so in any kind of",
    "start": "793610",
    "end": "800700"
  },
  {
    "text": "developer situation where you want really fast feedback you can just have",
    "start": "800700",
    "end": "805860"
  },
  {
    "text": "tools that watch files on your local file system and let you live test so you update a functions code and it updates",
    "start": "805860",
    "end": "812760"
  },
  {
    "text": "immediately in a cluster and it can be an actual real cluster so if it depends on other services in kubernetes you can",
    "start": "812760",
    "end": "819060"
  },
  {
    "text": "just test your function just like that",
    "start": "819060",
    "end": "823459"
  },
  {
    "text": "so I'd like to go a little deeper into how fission itself does declarative config kubernetes has a concept called",
    "start": "824420",
    "end": "834149"
  },
  {
    "start": "830000",
    "end": "830000"
  },
  {
    "text": "custom resources and these are essentially a sort of arbitrary extension mechanism for the kubernetes",
    "start": "834149",
    "end": "841020"
  },
  {
    "text": "api and it lets you use the kubernetes patterns on any other resources so",
    "start": "841020",
    "end": "847170"
  },
  {
    "text": "fission resources such as functions environments which are the containers",
    "start": "847170",
    "end": "853110"
  },
  {
    "text": "that run those functions and triggers which bind the external events into function locations all of these things",
    "start": "853110",
    "end": "859440"
  },
  {
    "text": "are specified as kubernetes custom resources and just like any other kubernetes resource like a deployment or",
    "start": "859440",
    "end": "866310"
  },
  {
    "text": "a service they can be stored as yeah Mille or json files stored on disk version controlled and so on so you get",
    "start": "866310",
    "end": "873060"
  },
  {
    "text": "all of these benefits by using kubernetes custom resources now the",
    "start": "873060",
    "end": "879029"
  },
  {
    "text": "thing about about these yeah Milland JSON files is that nobody really wants to write them from scratch their syntax",
    "start": "879029",
    "end": "886800"
  },
  {
    "text": "tends to grow the amount of learning you have to do tends to tends to only",
    "start": "886800",
    "end": "892589"
  },
  {
    "text": "increase even if you have good defaults you sometimes have to fill out quite a bit of boilerplate anyone familiar with",
    "start": "892589",
    "end": "900300"
  },
  {
    "text": "kubernetes Yama's is familiar with this pane you typically copy pasting a lot but that's a little error-prone",
    "start": "900300",
    "end": "908070"
  },
  {
    "text": "so with fission what we did is we we we have tools that create the initial",
    "start": "908070",
    "end": "913620"
  },
  {
    "text": "configuration and dump it in a tree and then all you have to do is kind of make small edits to the yamen instead of",
    "start": "913620",
    "end": "919950"
  },
  {
    "text": "writing it from scratch and also besides the custom resources use the same kind",
    "start": "919950",
    "end": "926700"
  },
  {
    "text": "of declarative idea for specifying packaging for specifying where",
    "start": "926700",
    "end": "931900"
  },
  {
    "text": "application source code lives and how it's packaged and uploaded and built and",
    "start": "931900",
    "end": "936910"
  },
  {
    "text": "so on so once you have once you have these specifications in fission fission",
    "start": "936910",
    "end": "944740"
  },
  {
    "text": "has two tools that let you work with these specs one is the validator it",
    "start": "944740",
    "end": "950560"
  },
  {
    "text": "checks for consistency so it checks for missing references or it checks for unused things and it also checks for",
    "start": "950560",
    "end": "958090"
  },
  {
    "text": "common errors like you know invalid characters in a name things that that",
    "start": "958090",
    "end": "964420"
  },
  {
    "text": "aren't good practices and so on and it gives you a handy sort of error",
    "start": "964420",
    "end": "969880"
  },
  {
    "text": "messages that you can go and fix in your yeah Mille before you've actually deployed it once you're happy with with",
    "start": "969880",
    "end": "976840"
  },
  {
    "text": "the state of your config you can actually apply it and you can do this too to any kubernetes cluster so whether",
    "start": "976840",
    "end": "984220"
  },
  {
    "text": "it's mini cube on your laptop or your production cluster you use the same command to deploy your application and",
    "start": "984220",
    "end": "990070"
  },
  {
    "text": "that's apply your specifications so this goes through all the steps it packages",
    "start": "990070",
    "end": "995320"
  },
  {
    "text": "your source code it uploads this to the cluster depending on the language there",
    "start": "995320",
    "end": "1000780"
  },
  {
    "text": "may be a build pipeline and it also creates upgrades or deletes as necessary",
    "start": "1000780",
    "end": "1006150"
  },
  {
    "text": "the kubernetes resources the functions environments triggers and so on so we're",
    "start": "1006150",
    "end": "1013590"
  },
  {
    "text": "gonna go through each of these patterns and just demo all of them in sequence at the end so I'd like to talk a little bit",
    "start": "1013590",
    "end": "1020610"
  },
  {
    "text": "about live reload live reload is familiar in in some domains to do",
    "start": "1020610",
    "end": "1026670"
  },
  {
    "text": "developers especially web development and this is a really pleasant kind of developer experience you're just typing",
    "start": "1026670",
    "end": "1035040"
  },
  {
    "text": "your source code somewhere in your ID and you hit the Save button and you switch to either a browser or a test",
    "start": "1035040",
    "end": "1042390"
  },
  {
    "text": "environment and you can just immediately test your function you don't have to run any scripts you're just somewhere in the",
    "start": "1042390",
    "end": "1049860"
  },
  {
    "text": "background a tool is running that's making the cluster equal to two your",
    "start": "1049860",
    "end": "1055740"
  },
  {
    "text": "source code so what's what's the point of doing this the the real one of the",
    "start": "1055740",
    "end": "1064650"
  },
  {
    "start": "1058000",
    "end": "1058000"
  },
  {
    "text": "the ideas of DevOps is to accelerate feedback loops and it's it's",
    "start": "1064650",
    "end": "1069930"
  },
  {
    "text": "consistently true at various stages that the sooner you find a bug the cheaper it",
    "start": "1069930",
    "end": "1076290"
  },
  {
    "text": "is to fix and this is quite nonlinear so if you find a bug within minutes of",
    "start": "1076290",
    "end": "1083150"
  },
  {
    "text": "creating it of of writing the code then all you have to do is you know go back",
    "start": "1083150",
    "end": "1089580"
  },
  {
    "text": "to that same environment and fix it but if you find it say three months after",
    "start": "1089580",
    "end": "1095580"
  },
  {
    "text": "you wrote it then you've probably deployed it it's affected users you have to have to dig deeper into into why the",
    "start": "1095580",
    "end": "1104460"
  },
  {
    "text": "bug occurred typically the developer has sort of you know paged out the context from their head so so really live reload",
    "start": "1104460",
    "end": "1112170"
  },
  {
    "text": "is a sort of big benefit in being able to create good quality code and again",
    "start": "1112170",
    "end": "1120240"
  },
  {
    "text": "any any system that has declarative configs is in a good position to to",
    "start": "1120240",
    "end": "1126630"
  },
  {
    "text": "create live reload tooling and again coming to fission the same apply tools",
    "start": "1126630",
    "end": "1132600"
  },
  {
    "start": "1131000",
    "end": "1131000"
  },
  {
    "text": "can be used to to do live reload so you just add the watch option to to the spec",
    "start": "1132600",
    "end": "1139290"
  },
  {
    "text": "apply command and and this this runs a continuous loop where it watches the",
    "start": "1139290",
    "end": "1145890"
  },
  {
    "text": "file system it gets alerted whenever you save the file in an IDE and it pushes it to a test cluster which again it just",
    "start": "1145890",
    "end": "1153030"
  },
  {
    "text": "uses your Nettie's configuration this process typically takes a second or two of course it depends on how big your",
    "start": "1153030",
    "end": "1159930"
  },
  {
    "text": "your function is how big your changes are how much rebuilds need to be done but typically a few seconds is all it",
    "start": "1159930",
    "end": "1166560"
  },
  {
    "text": "takes and a note that you're testing on a real kubernetes cluster so if your",
    "start": "1166560",
    "end": "1171810"
  },
  {
    "text": "function talks to a database you can just run a sort of test instance of that data based on that cluster and and you",
    "start": "1171810",
    "end": "1178410"
  },
  {
    "text": "have a fairly high fidelity test going on so again fast feedback leads to",
    "start": "1178410",
    "end": "1184770"
  },
  {
    "text": "higher quality code continuing this of being able to test and debug things a",
    "start": "1184770",
    "end": "1193960"
  },
  {
    "text": "really interesting pattern is record replay record replay is not new and it's",
    "start": "1193960",
    "end": "1200890"
  },
  {
    "text": "been tried in various environments at over various points and you know in the",
    "start": "1200890",
    "end": "1206049"
  },
  {
    "text": "history of our of our infrastructure stacks but there's a few things about",
    "start": "1206049",
    "end": "1212950"
  },
  {
    "text": "faz that make record replay really suitable but before that I just want to",
    "start": "1212950",
    "end": "1218679"
  },
  {
    "text": "quickly define what more precisely what it actually is so the idea is that all",
    "start": "1218679",
    "end": "1225820"
  },
  {
    "text": "the events that can invoke a function you record them in some form in some sort of log such that you can read those",
    "start": "1225820",
    "end": "1233470"
  },
  {
    "text": "events back and you can simulate them again on the same functions or on even on different functions and there's two",
    "start": "1233470",
    "end": "1240820"
  },
  {
    "text": "broad benefits to this you can test so you can replay either an event that",
    "start": "1240820",
    "end": "1247390"
  },
  {
    "text": "actually worked on a previous version and let's say you make a new version you want to make sure that the new version",
    "start": "1247390",
    "end": "1252960"
  },
  {
    "text": "hasn't broken anything that used to work in the old version so you can replay a good set of events that used to work on",
    "start": "1252960",
    "end": "1259630"
  },
  {
    "text": "the old version essentially this is regression testing but made much more",
    "start": "1259630",
    "end": "1264850"
  },
  {
    "text": "painless you can also use it for actually testing a bug-fix so if anyone",
    "start": "1264850",
    "end": "1270130"
  },
  {
    "text": "broke a previous version and you think you fixed it you can verify this by by",
    "start": "1270130",
    "end": "1275140"
  },
  {
    "text": "rerunning that event on a newer version so the regression testing and bug fix testing and also a really cool usage is",
    "start": "1275140",
    "end": "1283270"
  },
  {
    "text": "debugging so you can if you find let's say that any event broke something in",
    "start": "1283270",
    "end": "1288460"
  },
  {
    "text": "production but you you can almost never take a debugger into your production environment and attach it because it",
    "start": "1288460",
    "end": "1295779"
  },
  {
    "text": "will it'll break your actual production environment but you can take a recording of what happened in the production",
    "start": "1295779",
    "end": "1301659"
  },
  {
    "text": "environment and debug it in in a separate test environment so",
    "start": "1301659",
    "end": "1310470"
  },
  {
    "text": "things that that make this idea good for fast one is that fast functions are",
    "start": "1311110",
    "end": "1317020"
  },
  {
    "text": "typically stateless so they don't have any in memory state they're designed to be able to to be able to be terminated",
    "start": "1317020",
    "end": "1325929"
  },
  {
    "text": "and restarted at any point they kind of expect to be short-lived and because of that we don't have to replay every event",
    "start": "1325929",
    "end": "1333040"
  },
  {
    "text": "since the beginning of time the state of function is pretty much determined by",
    "start": "1333040",
    "end": "1339070"
  },
  {
    "text": "the event that invokes it and possibly the other services that it talks to and",
    "start": "1339070",
    "end": "1346150"
  },
  {
    "text": "the other thing is that phase functions are short-lived so if you're debugging strategy involved",
    "start": "1346150",
    "end": "1351730"
  },
  {
    "text": "going into an instance of a function after something bad has happened and poking around at some state and trying",
    "start": "1351730",
    "end": "1358600"
  },
  {
    "text": "to figure out what went wrong in the function that doesn't work well because the faz framework may have killed that",
    "start": "1358600",
    "end": "1364600"
  },
  {
    "text": "function already so there may be nothing left to inspect so record replay really helps you with stateless things that may",
    "start": "1364600",
    "end": "1372840"
  },
  {
    "text": "that may not be alive by the time you get around to to trying to debug the problem broadly there's two use cases",
    "start": "1372840",
    "end": "1381309"
  },
  {
    "start": "1380000",
    "end": "1380000"
  },
  {
    "text": "here a developer in their own tight change and test cycle can use record",
    "start": "1381309",
    "end": "1387340"
  },
  {
    "text": "replay that just makes testing easier so you can for example manually do some",
    "start": "1387340",
    "end": "1392950"
  },
  {
    "text": "sort of interaction with your function with recording switched on and then you can replay that all of the events that",
    "start": "1392950",
    "end": "1399070"
  },
  {
    "text": "occurred there and this is essentially an automated way to to do testing and",
    "start": "1399070",
    "end": "1405640"
  },
  {
    "text": "the other way is that operations teams can enable recording on some sort of subset of production traffic for example",
    "start": "1405640",
    "end": "1412630"
  },
  {
    "text": "you can record only the requests that cause errors and then that log can be",
    "start": "1412630",
    "end": "1418330"
  },
  {
    "text": "given to the development team as part of a bug report and the dev team can simply",
    "start": "1418330",
    "end": "1425110"
  },
  {
    "text": "take that log dump it into their dev cluster and reproduce the problem and debug it",
    "start": "1425110",
    "end": "1430270"
  },
  {
    "text": "they can even verify their change on the same events and then ship that change",
    "start": "1430270",
    "end": "1435370"
  },
  {
    "text": "back to the operations team so up until now a lot of these features have been",
    "start": "1435370",
    "end": "1440950"
  },
  {
    "text": "mostly dev optimizations making devs productive trying to increase quality by",
    "start": "1440950",
    "end": "1447250"
  },
  {
    "text": "reporting bugs faster but this last idea essentially improves collaboration",
    "start": "1447250",
    "end": "1453010"
  },
  {
    "text": "between ops and devs and and it lets ups",
    "start": "1453010",
    "end": "1458200"
  },
  {
    "text": "teams give far more precise bug reports to two devs so imagine getting paged",
    "start": "1458200",
    "end": "1464530"
  },
  {
    "text": "with a link that when you click it takes it straight into a debugger that that's",
    "start": "1464530",
    "end": "1471790"
  },
  {
    "text": "already loaded with the event that broke your function and all you have to do is step through it look at your code and",
    "start": "1471790",
    "end": "1477310"
  },
  {
    "text": "figure out what went wrong so so essentially we can record replay can",
    "start": "1477310",
    "end": "1485130"
  },
  {
    "text": "automate and make pain free the steps of reproducing a bug and that leaves the",
    "start": "1485130",
    "end": "1490390"
  },
  {
    "text": "devs just to deal with the actual bug in the application so in fission we have a",
    "start": "1490390",
    "end": "1497530"
  },
  {
    "start": "1496000",
    "end": "1496000"
  },
  {
    "text": "built in record replay system it can store HTTP requests for now it's mostly",
    "start": "1497530",
    "end": "1504430"
  },
  {
    "text": "based on HTTP it can also also store the responses and then you can do filtering",
    "start": "1504430",
    "end": "1510430"
  },
  {
    "text": "based on that so you can say you know find me the recordings that failed or find means recordings that succeeded or",
    "start": "1510430",
    "end": "1517270"
  },
  {
    "text": "find me the recordings that took a long time so replay the slow requests and you",
    "start": "1517270",
    "end": "1522880"
  },
  {
    "text": "can replay on demand and lets you create configuration for how exactly these",
    "start": "1522880",
    "end": "1529540"
  },
  {
    "text": "events are stored and how they're retained and you can of course replay",
    "start": "1529540",
    "end": "1535330"
  },
  {
    "text": "either on the same function or on a new version or you can run a debugger on the",
    "start": "1535330",
    "end": "1540790"
  },
  {
    "text": "old version so moving on to two more",
    "start": "1540790",
    "end": "1546840"
  },
  {
    "text": "production edge practices I'd like to talk a little bit about incremental",
    "start": "1546840",
    "end": "1553540"
  },
  {
    "text": "deployment specifically cannery deployments the general idea of cannery",
    "start": "1553540",
    "end": "1559240"
  },
  {
    "text": "deployments is is reducing risk at the last step of the pipeline",
    "start": "1559240",
    "end": "1567029"
  },
  {
    "start": "1561000",
    "end": "1561000"
  },
  {
    "text": "even if every step of the pipeline the primer checks the staging the validation",
    "start": "1567800",
    "end": "1572990"
  },
  {
    "text": "approval CI even if all of that is really good",
    "start": "1572990",
    "end": "1578650"
  },
  {
    "text": "production itself tends to have unique unique problems that can that can break",
    "start": "1578650",
    "end": "1584950"
  },
  {
    "text": "your code in unique ways so even after all qualification it is a good practice",
    "start": "1584950",
    "end": "1590230"
  },
  {
    "text": "to do instead of shipping a new version to 100% of your users to just take it to",
    "start": "1590230",
    "end": "1598000"
  },
  {
    "text": "deploy it to the cluster but only send a fraction of users to that new version and often these can be some sort of dog",
    "start": "1598000",
    "end": "1607240"
  },
  {
    "text": "food users or users who have signed up for beta and so on and then you monitor",
    "start": "1607240",
    "end": "1612460"
  },
  {
    "text": "whether your API your services are succeeding or are",
    "start": "1612460",
    "end": "1617920"
  },
  {
    "text": "healthy with that with that new version",
    "start": "1617920",
    "end": "1623230"
  },
  {
    "text": "so if that's happening you can gradually increase that percentage and if it's not",
    "start": "1623230",
    "end": "1628780"
  },
  {
    "text": "happening you can roll back so just just to explain more concretely if you have a version v1 you've tested and qualified",
    "start": "1628780",
    "end": "1636340"
  },
  {
    "start": "1632000",
    "end": "1632000"
  },
  {
    "text": "v2 the idea is to deploy both v1 and v2 but only send some fraction of users to",
    "start": "1636340",
    "end": "1643630"
  },
  {
    "text": "v2 so that's the idea of canneries and you you have to monitor whether v2 is",
    "start": "1643630",
    "end": "1653170"
  },
  {
    "text": "succeeding so that brings us to to the next idea which is that if you have to",
    "start": "1653170",
    "end": "1658930"
  },
  {
    "text": "monitor whether a version is succeeding there's there's some potential for",
    "start": "1658930",
    "end": "1665620"
  },
  {
    "start": "1663000",
    "end": "1663000"
  },
  {
    "text": "automation there so especially in a fast system because we're running specific",
    "start": "1665620",
    "end": "1672640"
  },
  {
    "text": "functions the framework knows whether that function succeeded or failed usually so we can define some sort of",
    "start": "1672640",
    "end": "1681840"
  },
  {
    "text": "threshold for errors and say that if function is erroring out a lot more than",
    "start": "1681840",
    "end": "1688120"
  },
  {
    "text": "it used to then we should not proceed with the candidate deployment and conversely if it's doing well then we should keep",
    "start": "1688120",
    "end": "1695200"
  },
  {
    "text": "gradually increasing the traffic that goes into that function so you can actually automate that whole loop of of",
    "start": "1695200",
    "end": "1703020"
  },
  {
    "text": "increasing the the traffic to v2 and fission has automated kennedys built",
    "start": "1703020",
    "end": "1710710"
  },
  {
    "start": "1708000",
    "end": "1708000"
  },
  {
    "text": "into the framework you you can configure various parameters so the fraction of traffic for a new",
    "start": "1710710",
    "end": "1717400"
  },
  {
    "text": "version the threshold that defines an error and let me go to a picture instead",
    "start": "1717400",
    "end": "1724420"
  },
  {
    "start": "1724000",
    "end": "1724000"
  },
  {
    "text": "and usually if you if you if you draw let's say on the y-axis a fraction of",
    "start": "1724420",
    "end": "1731290"
  },
  {
    "text": "traffic and on the x-axis this time and let's say the blue version is your old",
    "start": "1731290",
    "end": "1737200"
  },
  {
    "text": "version and the green version is is the new one so before before that start to the left",
    "start": "1737200",
    "end": "1743770"
  },
  {
    "text": "of that one hundred percent of your traffic goes to the old version and and nothing goes to the new version even though it's deployed and at some point",
    "start": "1743770",
    "end": "1751000"
  },
  {
    "text": "you define you say okay let's send ten percent of traffic to to the new version",
    "start": "1751000",
    "end": "1756160"
  },
  {
    "text": "so now 95 percent is going to the old version and ten put aside 90 percent is going to the old one and ten percent to",
    "start": "1756160",
    "end": "1764590"
  },
  {
    "text": "the new one and the system is monitoring whether this is succeeding all of these",
    "start": "1764590",
    "end": "1771970"
  },
  {
    "text": "all of the parts of this picture and figure able so the the width of that step is the interval of the canary",
    "start": "1771970",
    "end": "1778690"
  },
  {
    "text": "deployment the height of the step is the increment that occurs at each step so essentially you can define how fast your",
    "start": "1778690",
    "end": "1785740"
  },
  {
    "text": "rollout occurs and it can be over the course of minutes or even the course of several days it it depends on how much",
    "start": "1785740",
    "end": "1794200"
  },
  {
    "text": "traffic you're getting whether you're getting enough of a sample size within",
    "start": "1794200",
    "end": "1799260"
  },
  {
    "text": "within the window and there's kind of interesting things to tune here in a in",
    "start": "1799260",
    "end": "1805330"
  },
  {
    "text": "a cannery deployment so we're go into this a little more in the demo but I'd",
    "start": "1805330",
    "end": "1811510"
  },
  {
    "text": "like to switch a little bit too to the monitoring side of the house in general",
    "start": "1811510",
    "end": "1820020"
  },
  {
    "text": "various any kind of production environment has a need for people to be",
    "start": "1820020",
    "end": "1826300"
  },
  {
    "text": "able to understand the system's performance where it's going wrong and this is a this is a really deep topic",
    "start": "1826300",
    "end": "1833980"
  },
  {
    "start": "1832000",
    "end": "1832000"
  },
  {
    "text": "monitoring in general we can talk about logs metrics alerts tracing",
    "start": "1833980",
    "end": "1841410"
  },
  {
    "text": "observability in general but I'd like to focus on just two or three things and how they can help service the first",
    "start": "1841410",
    "end": "1849309"
  },
  {
    "text": "one is is log aggregation this one is essential to several assistants because",
    "start": "1849309",
    "end": "1855840"
  },
  {
    "text": "functions are short-lived so if a function just logs to some sort of local storage that storage is likely to have",
    "start": "1855840",
    "end": "1864160"
  },
  {
    "text": "disappeared by the time a developer or an Operations person tries to look at those logs so you need to take these",
    "start": "1864160",
    "end": "1869710"
  },
  {
    "text": "logs and ship them somewhere there's good open source tools for this flu and",
    "start": "1869710",
    "end": "1875049"
  },
  {
    "text": "D is really common in the kubernetes world it has integrations that that can",
    "start": "1875049",
    "end": "1883179"
  },
  {
    "text": "ship logs to almost every commonly used log aggregation system elastic is a",
    "start": "1883179",
    "end": "1889270"
  },
  {
    "text": "popular open source stack for for shipping logs in to and fission",
    "start": "1889270",
    "end": "1895710"
  },
  {
    "text": "integrates with flu and D and configure set such that flu India is shipping out",
    "start": "1895710",
    "end": "1901330"
  },
  {
    "text": "your logs from from your function so you don't really have to worry about the function going away you can always",
    "start": "1901330",
    "end": "1906520"
  },
  {
    "text": "access its logs metrics are",
    "start": "1906520",
    "end": "1913530"
  },
  {
    "text": "variety of tools here but the open-source Prometheus system is is",
    "start": "1914590",
    "end": "1920500"
  },
  {
    "text": "great again it's in heavy production news in on various kubernetes",
    "start": "1920500",
    "end": "1925840"
  },
  {
    "text": "deployments and it also has alert manager which lets you define complex",
    "start": "1925840",
    "end": "1930880"
  },
  {
    "text": "rules for what kinds of metrics should lead to what kinds of alerts this is",
    "start": "1930880",
    "end": "1936460"
  },
  {
    "text": "open tracing and Jaeger is an open-source implementation of of the",
    "start": "1936460",
    "end": "1941710"
  },
  {
    "text": "open tracing standard and tracing is really nice in civilized systems because",
    "start": "1941710",
    "end": "1947850"
  },
  {
    "text": "there's so many pieces that are there's so many moving parts that you want to be able to to see how a request flowed",
    "start": "1947850",
    "end": "1954669"
  },
  {
    "text": "through your system and and where where it cost more time so I'm not going to",
    "start": "1954669",
    "end": "1963279"
  },
  {
    "text": "deep into each of these but just to talk quickly about metrics we already talked",
    "start": "1963279",
    "end": "1968470"
  },
  {
    "start": "1968000",
    "end": "1968000"
  },
  {
    "text": "about log aggregation efficient tracks various things about a function since",
    "start": "1968470",
    "end": "1973980"
  },
  {
    "text": "since it routes requests into your function it knows how long that request took it knows whether that request",
    "start": "1973980",
    "end": "1979570"
  },
  {
    "text": "succeeded or failed so your function itself does not have to write any kind of Prometheus integration it's built",
    "start": "1979570",
    "end": "1986320"
  },
  {
    "text": "into fish in itself and if you install prometheus in the same cluster as vision it finds the cluster it finds the fish",
    "start": "1986320",
    "end": "1993850"
  },
  {
    "text": "and deployment using annotations and it just stores all these metrics so you can",
    "start": "1993850",
    "end": "1999279"
  },
  {
    "text": "keep track of your function runtimes the actual rate of function calls which",
    "start": "1999279",
    "end": "2004580"
  },
  {
    "text": "errors are most likely uncommon and so on and of course you can build",
    "start": "2004580",
    "end": "2009720"
  },
  {
    "text": "dashboards with refiner and use alert manager to to page yourself if something goes wrong I'm gonna dive a little bit",
    "start": "2009720",
    "end": "2018390"
  },
  {
    "text": "into the topic of cost optimization the general idea is that almost every system",
    "start": "2018390",
    "end": "2026190"
  },
  {
    "text": "has cost performance trade-offs in the public cloud several assistants like",
    "start": "2026190",
    "end": "2032580"
  },
  {
    "text": "lambda let you pay exactly for what you use typically build in some sort of sub",
    "start": "2032580",
    "end": "2038190"
  },
  {
    "text": "second intervals but you pay a premium for this elasticity the trade-offs get",
    "start": "2038190",
    "end": "2043500"
  },
  {
    "text": "worse as your usage gets higher so if you have a batch job that takes hours or even",
    "start": "2043500",
    "end": "2048780"
  },
  {
    "text": "days or weeks to run the pricing on systems like lambda gets a little bit",
    "start": "2048780",
    "end": "2055560"
  },
  {
    "text": "worse than the pricing are and things like ec2 now in the on-premise world you",
    "start": "2055560",
    "end": "2061020"
  },
  {
    "text": "still care about CPU and memory utilization even though you aren't directly measuring it as as operational",
    "start": "2061020",
    "end": "2068700"
  },
  {
    "text": "expense so resources the resources used should be proportional to actual demand",
    "start": "2068700",
    "end": "2073889"
  },
  {
    "text": "so that anything else that needs those resources can actually get at them so",
    "start": "2073890",
    "end": "2079470"
  },
  {
    "text": "we're not going into the we're not going to do a big treatise on cost optimization in the public and private",
    "start": "2079470",
    "end": "2085980"
  },
  {
    "text": "cloud but in general if you can pull off clever use of reserved instances and",
    "start": "2085980",
    "end": "2092700"
  },
  {
    "text": "equivalents on other clouds you can gain a lot of cost savings if your workloads",
    "start": "2092700",
    "end": "2098520"
  },
  {
    "text": "can fit a spot and spot instances on AWS or preemptable instances on Google you",
    "start": "2098520",
    "end": "2104910"
  },
  {
    "text": "can also yield big savings but this tends to be a little tricky because workloads actually need to be able to",
    "start": "2104910",
    "end": "2112890"
  },
  {
    "text": "tolerate very short-lived instances but fast systems are a great fit for this",
    "start": "2112890",
    "end": "2117930"
  },
  {
    "text": "so-so spot and reenter balances are both cheaper and a good fit for for file systems in general you always want to",
    "start": "2117930",
    "end": "2126630"
  },
  {
    "text": "carefully configure your resource limits of whatever you're running in a cluster whether it's public private and that",
    "start": "2126630",
    "end": "2133650"
  },
  {
    "text": "allows order scaling to be more efficient so schedulers can actually plan placement more correctly when your",
    "start": "2133650",
    "end": "2139830"
  },
  {
    "text": "resource limits are are accurate and if you have auto scaling on the cluster",
    "start": "2139830",
    "end": "2145590"
  },
  {
    "text": "itself then you can actually grow the cluster and the utilization within the",
    "start": "2145590",
    "end": "2151590"
  },
  {
    "text": "cluster as demand grows and this lets you actually map your operational expenses to resource usage I want to",
    "start": "2151590",
    "end": "2160590"
  },
  {
    "start": "2160000",
    "end": "2160000"
  },
  {
    "text": "dive a little bit deeper into one specific cost optimization which is really important in the survey less",
    "start": "2160590",
    "end": "2166200"
  },
  {
    "text": "world and that's the that's the one that makes idle services free so if a service",
    "start": "2166200",
    "end": "2171930"
  },
  {
    "text": "has zero usage let's say every weekend or or if it's used very intermittently",
    "start": "2171930",
    "end": "2176970"
  },
  {
    "text": "then we don't want to be paying us even a small constant fee for that service",
    "start": "2176970",
    "end": "2182930"
  },
  {
    "text": "conversely we want that service to be able to start quickly and be available",
    "start": "2182930",
    "end": "2188280"
  },
  {
    "text": "whenever there is demand for it so so these are conflicting requirements we want Idol to be free but we want low",
    "start": "2188280",
    "end": "2194820"
  },
  {
    "text": "latency whenever demand actually arises so this this is the goal start problem",
    "start": "2194820",
    "end": "2201440"
  },
  {
    "text": "in fission we solve this cold start problem with a pool of containers that",
    "start": "2201440",
    "end": "2207000"
  },
  {
    "start": "2203000",
    "end": "2203000"
  },
  {
    "text": "are that are already running on the cluster there's lots of configurable and tunable bits here I'm just going to",
    "start": "2207000",
    "end": "2214590"
  },
  {
    "text": "point out the documentation in the end but essentially there is there's a lot",
    "start": "2214590",
    "end": "2220110"
  },
  {
    "text": "of tuning that can be done here and you can you can move between points on the",
    "start": "2220110",
    "end": "2227310"
  },
  {
    "start": "2226000",
    "end": "2226000"
  },
  {
    "text": "cost performance trade-off so you can have functions that don't use the pool at all and have a high latency to start",
    "start": "2227310",
    "end": "2235530"
  },
  {
    "text": "up or you can use functions that are always running where you do pay a certain constant cost even if the",
    "start": "2235530",
    "end": "2241740"
  },
  {
    "text": "function is idle but there's very low latency even if you have very bursty usage and that kind of thing is useful",
    "start": "2241740",
    "end": "2249210"
  },
  {
    "text": "when you have much higher latency demands and you don't particularly care",
    "start": "2249210",
    "end": "2255450"
  },
  {
    "text": "about the cost of those functions but most people will be somewhere in the middle and you can use the pool to to",
    "start": "2255450",
    "end": "2262290"
  },
  {
    "text": "load functions on the order of tens or hundreds of milliseconds into into this pool interestingly because you're using",
    "start": "2262290",
    "end": "2271440"
  },
  {
    "text": "an open source stack kubernetes and fission you're not subject to the lambda",
    "start": "2271440",
    "end": "2276540"
  },
  {
    "text": "a pricing model so if you're if your workload doesn't fit the the use the",
    "start": "2276540",
    "end": "2284430"
  },
  {
    "text": "users that lambda optimizes for so for example if you have a batch workload or you're using your functions for almost",
    "start": "2284430",
    "end": "2292530"
  },
  {
    "text": "all day or even several hours a day you can use the cheapest possible instance",
    "start": "2292530",
    "end": "2297660"
  },
  {
    "text": "that works for you so you can use a reserved instances if you're using your functions a lot and you can use spart instances if if you",
    "start": "2297660",
    "end": "2304710"
  },
  {
    "text": "aren't using your functions a lot and even on-prem usage can have cost savings",
    "start": "2304710",
    "end": "2310619"
  },
  {
    "text": "because you can you can utilize your infrastructure better",
    "start": "2310619",
    "end": "2316520"
  },
  {
    "text": "more generally fishing lets you configure CPU and memory resource usage on your functions you can also also to",
    "start": "2316550",
    "end": "2324630"
  },
  {
    "text": "various art of scaling parameters such as when you actually trigger increase in",
    "start": "2324630",
    "end": "2331080"
  },
  {
    "text": "the number of replicas and when you trigger reduction you can also trigger the start and end of those so if you set",
    "start": "2331080",
    "end": "2338640"
  },
  {
    "text": "minimum scale to 2-0 your you actually have idle equals free if you set it more than zero you you've guaranteed a low",
    "start": "2338640",
    "end": "2345990"
  },
  {
    "text": "latency for your api's okay so we talked",
    "start": "2345990",
    "end": "2351870"
  },
  {
    "text": "about a lot of things I'd like to demo some of them and I'm going to quickly do",
    "start": "2351870",
    "end": "2357240"
  },
  {
    "start": "2357000",
    "end": "2357000"
  },
  {
    "text": "a little hello world talk about declarative configs again and show how they work in fission in particular I'm",
    "start": "2357240",
    "end": "2364860"
  },
  {
    "text": "gonna do a quick little live reload demo I'm going to show you a small record replay demo and then we'll kick off a",
    "start": "2364860",
    "end": "2372360"
  },
  {
    "text": "cannery deployment on a cluster so let's see here we go okay so the first one is",
    "start": "2372360",
    "end": "2382560"
  },
  {
    "text": "let's just start with hello world okay so I have a kubernetes cluster this is a",
    "start": "2382560",
    "end": "2390570"
  },
  {
    "text": "5 node cluster on gke",
    "start": "2390570",
    "end": "2394880"
  },
  {
    "text": "okay so yeah this is just to show that I have a",
    "start": "2396680",
    "end": "2401740"
  },
  {
    "text": "could be nice cluster I have installed fishin and Prometheus on this cluster",
    "start": "2401740",
    "end": "2406770"
  },
  {
    "text": "I'm not gonna dive into each individual component but fission of course runs as",
    "start": "2406770",
    "end": "2412180"
  },
  {
    "text": "a set of services on kubernetes itself here's a simple hello world JavaScript",
    "start": "2412180",
    "end": "2418780"
  },
  {
    "text": "function it's written in modern JavaScript using async await and it",
    "start": "2418780",
    "end": "2424420"
  },
  {
    "text": "receives a context which contains the event that actually caused that function to be invoked and it can return any",
    "start": "2424420",
    "end": "2431250"
  },
  {
    "text": "status that that gets converted to the HTTP status then can return a body and",
    "start": "2431250",
    "end": "2436570"
  },
  {
    "text": "there's other ways to return but this is a simple hello world so so we use the simplest way",
    "start": "2436570",
    "end": "2442680"
  },
  {
    "text": "we create efficient environment so efficient environment is essentially the runtime container that knows how to run",
    "start": "2444860",
    "end": "2450980"
  },
  {
    "text": "that function all of the components in fission are language agnostic except the",
    "start": "2450980",
    "end": "2456980"
  },
  {
    "text": "environments which each of which is specific to a certain language so this one failed because I had already",
    "start": "2456980",
    "end": "2463220"
  },
  {
    "text": "pre-created it and its parts are have been running for a while on the kubernetes cluster these parts are idle",
    "start": "2463220",
    "end": "2470960"
  },
  {
    "text": "they they haven't loaded the function yet they're just waiting for for a function to be loaded so they're already",
    "start": "2470960",
    "end": "2476780"
  },
  {
    "text": "running they're deployed they have an IP address this is what gives us the cold start optimization",
    "start": "2476780",
    "end": "2483560"
  },
  {
    "text": "so now we've created the function we've still not given a part to it we've just really just uploaded it and created a",
    "start": "2483560",
    "end": "2490320"
  },
  {
    "text": "custom resource on kubernetes for this function",
    "start": "2490320",
    "end": "2494510"
  },
  {
    "text": "route this essentially says when you do a get request on the /hello path to the",
    "start": "2495910",
    "end": "2503410"
  },
  {
    "text": "fission router service you invoke the function hello so let's actually run the function and",
    "start": "2503410",
    "end": "2513329"
  },
  {
    "text": "in the function a few times the first time it takes about half a second the second time it takes about 150",
    "start": "2513660",
    "end": "2521380"
  },
  {
    "text": "milliseconds and this is in the statistical test there's some variability here but typically the the",
    "start": "2521380",
    "end": "2527619"
  },
  {
    "text": "first one is where you incur the code start overhead and subsequent requests are just hitting a cached function and",
    "start": "2527619",
    "end": "2538170"
  },
  {
    "text": "the difference between these two is your cold start overhead there's better ways to measure this using Prometheus but",
    "start": "2538170",
    "end": "2544770"
  },
  {
    "text": "this is just hello world okay so if you notice here we created functions using",
    "start": "2544770",
    "end": "2550280"
  },
  {
    "text": "using an imperative model we said create this function upload this source code",
    "start": "2550280",
    "end": "2556070"
  },
  {
    "text": "and in fact when if the function had already existed that that would have",
    "start": "2556070",
    "end": "2561210"
  },
  {
    "text": "failed so this isn't a very automation friendly style this is more suited to",
    "start": "2561210",
    "end": "2567030"
  },
  {
    "text": "learning and experimenting but it's really it's a really sort of user",
    "start": "2567030",
    "end": "2572340"
  },
  {
    "text": "friendly way to create a function so how do we combine these two and you know",
    "start": "2572340",
    "end": "2577620"
  },
  {
    "text": "keep that ease of use but also become more automation friendly and so for that",
    "start": "2577620",
    "end": "2584780"
  },
  {
    "text": "stepping back to this hello world demo I forgot to tell you that the part is now actually labeled with that function name",
    "start": "2584780",
    "end": "2591530"
  },
  {
    "text": "so you can use usual kubernetes tools to find that part if you have any kind of",
    "start": "2591530",
    "end": "2597710"
  },
  {
    "text": "external log aggregation system like say stack driver on google or at AQL and sun",
    "start": "2597710",
    "end": "2603120"
  },
  {
    "text": "on amazon you can you can search for this function by label and you will find",
    "start": "2603120",
    "end": "2608760"
  },
  {
    "text": "your loss fusion also builds in a little log database optionally so you can use commands to find those logs but I'd like",
    "start": "2608760",
    "end": "2617730"
  },
  {
    "text": "to go into into declarative specifications so I'm just going to",
    "start": "2617730",
    "end": "2626010"
  },
  {
    "text": "blitz through some of the demo here so we so we get time for for Q&A",
    "start": "2626010",
    "end": "2631910"
  },
  {
    "text": "do the same thing except that we passed a spec option so this does not affect the cluster in any way but it's the same",
    "start": "2633590",
    "end": "2640520"
  },
  {
    "text": "command that you ran to create your function this time the function is in go so so I can show you how builds work",
    "start": "2640520",
    "end": "2647060"
  },
  {
    "text": "this is a yeah you don't really need to understand it unless for example you",
    "start": "2647060",
    "end": "2652460"
  },
  {
    "text": "want to change execution and order scaling parameters but most users can",
    "start": "2652460",
    "end": "2658220"
  },
  {
    "text": "can get away without really understanding most of that llamó so now we we actually apply that",
    "start": "2658220",
    "end": "2664490"
  },
  {
    "text": "function note that we got a little warning because we did not specify the environment in the same specification so",
    "start": "2664490",
    "end": "2673310"
  },
  {
    "text": "we get a little consistency warning saying hey this this is not a good practice if you want your application to",
    "start": "2673310",
    "end": "2679520"
  },
  {
    "text": "be fully self-contained then your environment should also be specified in this in this configuration and if you're",
    "start": "2679520",
    "end": "2685790"
  },
  {
    "text": "doing something more production-ready that's you probably want to make sure you get rid of all these warnings by by",
    "start": "2685790",
    "end": "2690800"
  },
  {
    "text": "doing by doing what they suggest here we see the build has actually succeeded so",
    "start": "2690800",
    "end": "2697660"
  },
  {
    "text": "we can actually invoke that function it's again it's just a hello world all of the demos in this little demo today",
    "start": "2697660",
    "end": "2705230"
  },
  {
    "text": "are hello world so yeah fission function test is really the same as curl it just",
    "start": "2705230",
    "end": "2711770"
  },
  {
    "text": "invokes the function and gives you the result back it has a little bit of dev friendliness tricks like giving you logs",
    "start": "2711770",
    "end": "2718370"
  },
  {
    "text": "automatically if something breaks so and",
    "start": "2718370",
    "end": "2723620"
  },
  {
    "text": "I'm just gonna demo live reload here so you can simply provide the watch option",
    "start": "2723620",
    "end": "2730430"
  },
  {
    "text": "do the same apply command and let me just find my editor",
    "start": "2730430",
    "end": "2736030"
  },
  {
    "text": "you can see my editor but",
    "start": "2741980",
    "end": "2745540"
  },
  {
    "text": "so I just edited this file the tooling notices various things I'm going to kill",
    "start": "2747380",
    "end": "2758970"
  },
  {
    "text": "then I'm gonna just invoke the function manually again to show that it actually",
    "start": "2758970",
    "end": "2765870"
  },
  {
    "text": "worked actually works okay so you notice",
    "start": "2765870",
    "end": "2771570"
  },
  {
    "text": "that I changed the source code there I did not manually invoke any kind of build simply the live reload system",
    "start": "2771570",
    "end": "2778440"
  },
  {
    "text": "noticed that the file changed it did invoke the build the build is part of",
    "start": "2778440",
    "end": "2785340"
  },
  {
    "text": "the built-in fishing go environment which I had pre created and already exists on this on this framework so I'm",
    "start": "2785340",
    "end": "2794070"
  },
  {
    "text": "sorry on this deployment so there's a go node.js Python all already set up on this environment and that's what allowed",
    "start": "2794070",
    "end": "2801390"
  },
  {
    "text": "the function to be built so that's so that's live reload I'm gonna I'm gonna",
    "start": "2801390",
    "end": "2807420"
  },
  {
    "text": "move on from here to record replay again trying to make sure we have time for",
    "start": "2807420",
    "end": "2813570"
  },
  {
    "text": "questions let's see so this is again a really simple demo that this time you",
    "start": "2813570",
    "end": "2820980"
  },
  {
    "text": "didn't buy thon and it's a function that takes a query parameter and says hello",
    "start": "2820980",
    "end": "2826470"
  },
  {
    "text": "so it you can imagine it as the target of a form that asked you your name so we",
    "start": "2826470",
    "end": "2832560"
  },
  {
    "text": "create that function set up a root and now we enabled recording for this function so this is just a symbol",
    "start": "2832560",
    "end": "2838710"
  },
  {
    "text": "recorder it records every single event that invokes that function so now I provide an argument to two that",
    "start": "2838710",
    "end": "2844950"
  },
  {
    "text": "functions saying name equals world and that essentially is hello world again so",
    "start": "2844950",
    "end": "2853110"
  },
  {
    "text": "you can actually view your recording here and you can replay that recording",
    "start": "2853110",
    "end": "2858630"
  },
  {
    "text": "so this is the recording it actually tells you that it was a get they ran the function hi that was two hundred okay",
    "start": "2858630",
    "end": "2865530"
  },
  {
    "text": "this is the HTTP trigger that caused the invocation of that function so",
    "start": "2865530",
    "end": "2870600"
  },
  {
    "text": "everything is recorded the response is also recorded but isn't shown here and we can simply replay that request by by",
    "start": "2870600",
    "end": "2878400"
  },
  {
    "text": "request ID so this is a simple demo the the replay is replayed on the same",
    "start": "2878400",
    "end": "2883830"
  },
  {
    "text": "function but you can also just modify the function and replay it and then you",
    "start": "2883830",
    "end": "2889500"
  },
  {
    "text": "can use therefore regression testing or debugging that is there's also an unreleased bit",
    "start": "2889500",
    "end": "2895730"
  },
  {
    "text": "will be where you can simply pass - - debug and to drop you in - it'll it'll",
    "start": "2895730",
    "end": "2903020"
  },
  {
    "text": "output a debugger configuration for an IDE and you can just open your ID and start connecting to a remote debugger",
    "start": "2903020",
    "end": "2909950"
  },
  {
    "text": "and debug your your function which is already in the environment that that",
    "start": "2909950",
    "end": "2915470"
  },
  {
    "text": "caused your error so moving on to cannery deployments I'm going to run",
    "start": "2915470",
    "end": "2923930"
  },
  {
    "text": "through half of this and show you just the end because candidate deployments are typically slow so again we have a",
    "start": "2923930",
    "end": "2934490"
  },
  {
    "text": "fission cluster kubernetes cluster nodejs is set up and we have two functions so that's version one and this",
    "start": "2934490",
    "end": "2942170"
  },
  {
    "text": "version two they don't do anything significantly different other than tell you what version they are so so this is",
    "start": "2942170",
    "end": "2949190"
  },
  {
    "text": "the interesting part we create a route which - to the outside world looks just",
    "start": "2949190",
    "end": "2954770"
  },
  {
    "text": "like any other route I'll get request to a certain URL except that we define two",
    "start": "2954770",
    "end": "2959960"
  },
  {
    "text": "functions not one and we give them weights so v2 gets weighed 0 + v1 gets",
    "start": "2959960",
    "end": "2965540"
  },
  {
    "text": "weighed hundred so these are proportional so 100 percent of traffic is sent to 2 V 1 + 0 % 2 V 2 now let's",
    "start": "2965540",
    "end": "2975740"
  },
  {
    "text": "start sending some traffic to do this to this function and I'm gonna switch to my",
    "start": "2975740",
    "end": "2982820"
  },
  {
    "text": "Prometheus deployment and ok",
    "start": "2982820",
    "end": "2990100"
  },
  {
    "text": "so here we can see the traffic starts coming in the red function is v1 and the",
    "start": "2990160",
    "end": "2996830"
  },
  {
    "text": "blue line is v2 since we're short on time I'm not gonna wait for the entire",
    "start": "2996830",
    "end": "3003330"
  },
  {
    "text": "cannery to actually complete but just to quickly show you what's possible there",
    "start": "3003330",
    "end": "3008860"
  },
  {
    "text": "is you can create a configuration you can give it the two versions your",
    "start": "3008860",
    "end": "3015130"
  },
  {
    "text": "current version and your last version you can specify what route to actually",
    "start": "3015130",
    "end": "3020770"
  },
  {
    "text": "update and you can specify the speed at which that that switchover should happen",
    "start": "3020770",
    "end": "3026830"
  },
  {
    "text": "so this is saying that every 30 seconds 10% of traffic should be sent to v2 and",
    "start": "3026830",
    "end": "3033520"
  },
  {
    "text": "if more then % a function invocation fail you should call it quits and roll",
    "start": "3033520",
    "end": "3038950"
  },
  {
    "text": "back completely to v1 and all of this is automated simply by creating this configuration so you can see a little",
    "start": "3038950",
    "end": "3049360"
  },
  {
    "text": "bit that this is already happening but I'm just gonna switch tabs to to where I already ran this a few hours ago so the",
    "start": "3049360",
    "end": "3056710"
  },
  {
    "text": "red function here is the one and the green one is v2 so back here V 100% of",
    "start": "3056710",
    "end": "3065380"
  },
  {
    "text": "traffic and as you can see v2 starts to",
    "start": "3065380",
    "end": "3071020"
  },
  {
    "text": "get traffic there's a cut over point at which they're close to 50% that keeps",
    "start": "3071020",
    "end": "3077350"
  },
  {
    "text": "progressing because both functions because because v2 is successful here and when that when the intervals over v2",
    "start": "3077350",
    "end": "3087070"
  },
  {
    "text": "has a hundred percent of traffic so this is still going on in the new one but I'd",
    "start": "3087070",
    "end": "3094510"
  },
  {
    "text": "like to quickly switch back to a few links that that you can use to follow up",
    "start": "3094510",
    "end": "3102119"
  },
  {
    "text": "I'm not going to go too deep into fish in itself but there's functions",
    "start": "3102119",
    "end": "3107800"
  },
  {
    "text": "environments triggers I already spoke about this a bit we can we can cover",
    "start": "3107800",
    "end": "3113109"
  },
  {
    "text": "this in later offline if you like with the support for various languages and",
    "start": "3113109",
    "end": "3118300"
  },
  {
    "text": "triggers and I'd like to leave you with the few links fish and",
    "start": "3118300",
    "end": "3123910"
  },
  {
    "start": "3119000",
    "end": "3119000"
  },
  {
    "text": "has links to to the installation and documentation here's github links and installation",
    "start": "3123910",
    "end": "3130390"
  },
  {
    "text": "links some of what I've demoed is unreleased but is on branches on github",
    "start": "3130390",
    "end": "3136480"
  },
  {
    "text": "so cannery deployments are coming in vision 0 11 we're currently at 0 10 you",
    "start": "3136480",
    "end": "3142030"
  },
  {
    "text": "can always follow github milestones to see precisely when and what is coming out release by release and finally we'd",
    "start": "3142030",
    "end": "3148960"
  },
  {
    "text": "love to talk to you on slack joiner slack slack deficient our i/o talk to us on Twitter and I'm gonna leave the slide",
    "start": "3148960",
    "end": "3157210"
  },
  {
    "text": "up here and see if there's time for questions",
    "start": "3157210",
    "end": "3162150"
  },
  {
    "text": "awesome thanks um for the great presentation let's try and get to a few",
    "start": "3163230",
    "end": "3168630"
  },
  {
    "text": "questions within the next five minutes and then if we don't get to any we'll make sure everyone gets their answer",
    "start": "3168630",
    "end": "3173850"
  },
  {
    "text": "after the fact yes so how does Beck handle ingress annotations with respect",
    "start": "3173850",
    "end": "3180690"
  },
  {
    "text": "to fission function such as north-south via an API gateway yeah so so this is",
    "start": "3180690",
    "end": "3189990"
  },
  {
    "text": "kind of almost any kubernetes resource can be can be specified declaratively",
    "start": "3189990",
    "end": "3196980"
  },
  {
    "text": "right the ingress answer is a little bit longer so one thing we we did with our",
    "start": "3196980",
    "end": "3205410"
  },
  {
    "text": "HTTP triggers is we have a little flag that that you can just set to true and",
    "start": "3205410",
    "end": "3212190"
  },
  {
    "text": "any HTTP trigger with that flag set to true creates an ingress resource",
    "start": "3212190",
    "end": "3219270"
  },
  {
    "text": "automatically so there's a fission controller running that's watching these resources and creates an increase",
    "start": "3219270",
    "end": "3225090"
  },
  {
    "text": "resource if you specify that you want one and assuming your cluster is set up with an interest controller that causes",
    "start": "3225090",
    "end": "3231450"
  },
  {
    "text": "ingress to actually create a route into your function",
    "start": "3231450",
    "end": "3239150"
  },
  {
    "text": "you there's other things you can do and I'm not gonna go deeper into into",
    "start": "3240470",
    "end": "3246050"
  },
  {
    "text": "managing ingress itself but you can use all your standard kubernetes tools cube",
    "start": "3246050",
    "end": "3253160"
  },
  {
    "text": "CDL itself helm and so on to manage other non fission resources",
    "start": "3253160",
    "end": "3260500"
  },
  {
    "text": "should I go the next question yeah some excellent where an efficient",
    "start": "3261539",
    "end": "3267890"
  },
  {
    "text": "of them stored I assume this is about record replay so the there's an optional",
    "start": "3267890",
    "end": "3277280"
  },
  {
    "text": "assuming you enable the recording feature today they're just stored in Redis and it's you know installed with a",
    "start": "3277280",
    "end": "3285290"
  },
  {
    "text": "certain amount of limited memory and you can define when when and how they are deleted but the the feature itself has",
    "start": "3285290",
    "end": "3293810"
  },
  {
    "text": "an abstraction layer so they can be stored in other databases or even s3 and",
    "start": "3293810",
    "end": "3298850"
  },
  {
    "text": "so on but today it's just Redis I hope",
    "start": "3298850",
    "end": "3306230"
  },
  {
    "text": "that answers the question well yes if that doesn't please them drop traffic",
    "start": "3306230",
    "end": "3312380"
  },
  {
    "text": "question back in the Q&A tab and where are the recorded requests persisted so",
    "start": "3312380",
    "end": "3320060"
  },
  {
    "text": "today they are not well you can you can set up again this is the same question",
    "start": "3320060",
    "end": "3326570"
  },
  {
    "text": "the the Redis setup can be installed with persistence or without it",
    "start": "3326570",
    "end": "3332780"
  },
  {
    "text": "you can also dump them from the CLI and then you know you can have custom",
    "start": "3332780",
    "end": "3338150"
  },
  {
    "text": "tooling that that works with those recordings so you can create a test from",
    "start": "3338150",
    "end": "3343250"
  },
  {
    "text": "it load it back into another cluster and replay them but today the answer is you",
    "start": "3343250",
    "end": "3350960"
  },
  {
    "text": "can just set up greatest persistence",
    "start": "3350960",
    "end": "3354310"
  },
  {
    "text": "all right often so is it possible to set",
    "start": "3356230",
    "end": "3361460"
  },
  {
    "text": "up dependencies to be used by the function ah yes thanks for asking that",
    "start": "3361460",
    "end": "3369130"
  },
  {
    "text": "the fission environments have actually have two containers that that are part",
    "start": "3369130",
    "end": "3376130"
  },
  {
    "text": "of them there's the runtime and the build time and you saw this a little bit with go where we where we do builds so",
    "start": "3376130",
    "end": "3383000"
  },
  {
    "text": "this any function has two archives associated with the source and the",
    "start": "3383000",
    "end": "3389390"
  },
  {
    "text": "deployment and the source can specify requirements like in Python you can have",
    "start": "3389390",
    "end": "3394700"
  },
  {
    "text": "a requirements or txt no Jess you can have packaged or JSON and each language has some sort of equivalent and the",
    "start": "3394700",
    "end": "3402380"
  },
  {
    "text": "builder will take care of actually fetching those creating an artifact from that storing it I can point a",
    "start": "3402380",
    "end": "3411380"
  },
  {
    "text": "documentation for for how to actually use this stuff and they're examples in on github under the examples directory",
    "start": "3411380",
    "end": "3418100"
  },
  {
    "text": "for for both Python node and go so so",
    "start": "3418100",
    "end": "3424610"
  },
  {
    "text": "yeah dependencies can be automatically pulled the other way is to actually make custom environment so you can store them",
    "start": "3424610",
    "end": "3430490"
  },
  {
    "text": "in your container and this tends to be a kind of Finnish use case like if you have some sort of binary that isn't",
    "start": "3430490",
    "end": "3436790"
  },
  {
    "text": "present in in in the in the repositories of those languages but yeah dependencies",
    "start": "3436790",
    "end": "3443510"
  },
  {
    "text": "are well supported through the builders",
    "start": "3443510",
    "end": "3447280"
  },
  {
    "text": "okay great we're almost on time I wanted to sort of plug a very closely related",
    "start": "3448550",
    "end": "3457830"
  },
  {
    "text": "project that might be useful to folks and that's efficient workflows so just",
    "start": "3457830",
    "end": "3463200"
  },
  {
    "text": "go to the vision dot IO and we have much deeper information on the workflow",
    "start": "3463200",
    "end": "3468270"
  },
  {
    "text": "system which lets you orchestrate functions together okay all right so we",
    "start": "3468270",
    "end": "3477420"
  },
  {
    "text": "are at the top of the hour now so thank you everyone for joining us today just a reminder that the recording",
    "start": "3477420",
    "end": "3483270"
  },
  {
    "text": "and slides will be online within 24 hours and thank you so much for a great",
    "start": "3483270",
    "end": "3488520"
  },
  {
    "text": "presentation and we look forward to seeing everyone at a future of CMC s webinar have a great day the one thank",
    "start": "3488520",
    "end": "3494490"
  },
  {
    "text": "you for attending everyone thanks Caitlin",
    "start": "3494490",
    "end": "3497839"
  }
]