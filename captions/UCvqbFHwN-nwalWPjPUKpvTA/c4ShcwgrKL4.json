[
  {
    "text": "okay I think we're on thanks for hanging in here end of the day on Friday we've",
    "start": "30",
    "end": "7020"
  },
  {
    "text": "heard a lot about serverless over the last few days mostly about functions as a service that there's a lot of",
    "start": "7020",
    "end": "13259"
  },
  {
    "text": "excitement around functions and I'm certainly super excited about functions but today I'm going to fold in another",
    "start": "13259",
    "end": "21199"
  },
  {
    "text": "important piece of the puzzle which is around serverless api's which combined",
    "start": "21199",
    "end": "27779"
  },
  {
    "text": "with serverless compute allow developers to keep pace with a very fast changing",
    "start": "27779",
    "end": "34100"
  },
  {
    "text": "business world and technical landscape in this talk I'm going to dive into some",
    "start": "34100",
    "end": "39180"
  },
  {
    "text": "real-world use cases that highlight patterns that I've been seeing with",
    "start": "39180",
    "end": "45090"
  },
  {
    "text": "serverless and what works and doesn't work so well first what's serviced it",
    "start": "45090",
    "end": "52980"
  },
  {
    "text": "spent a bunch of time with the CNCs service working group where we talked a lot about this term that has now become",
    "start": "52980",
    "end": "60270"
  },
  {
    "text": "a bit of a buzzword and it really boils down to a few things which is this is",
    "start": "60270",
    "end": "70470"
  },
  {
    "text": "just your code you can focus on building",
    "start": "70470",
    "end": "76369"
  },
  {
    "text": "deploying running your application without provisioning servers without worrying about VMs and it scales up",
    "start": "76369",
    "end": "84630"
  },
  {
    "text": "according to traffic and scales back down again when you don't need it and you only pay for what you use when",
    "start": "84630",
    "end": "92430"
  },
  {
    "text": "people talk about serverless around here mostly we're talking about service compute lambda was released in 2014",
    "start": "92430",
    "end": "100009"
  },
  {
    "text": "IBM which you just heard about at least open wisk as open source software in 2016 and",
    "start": "100009",
    "end": "106710"
  },
  {
    "text": "later the hosted version of IBM cloud functions we've got your functions and",
    "start": "106710",
    "end": "111780"
  },
  {
    "text": "Google Cloud functions I think Google App Engine also meets the definition of",
    "start": "111780",
    "end": "118680"
  },
  {
    "text": "server lists it was launched in 2008 I think before service was a term it Auto",
    "start": "118680",
    "end": "126420"
  },
  {
    "text": "scales up as you need it and scales back down to zero when you're not using it",
    "start": "126420",
    "end": "132410"
  },
  {
    "text": "this early service contender enabled the spectacular launch of Pokemon go and also powers snapchat today but what's",
    "start": "132410",
    "end": "141290"
  },
  {
    "text": "driving all this serverless excitement I would argue that it's the growth of api's this is a chart of the growth of",
    "start": "141290",
    "end": "153350"
  },
  {
    "text": "business values delivered through api's which the programmable web has been",
    "start": "153350",
    "end": "158930"
  },
  {
    "text": "tracking since 2006 developers today just expect that they can connect to",
    "start": "158930",
    "end": "166390"
  },
  {
    "text": "data enrichment services with thousands of lookups often just costing pennies",
    "start": "166390",
    "end": "172220"
  },
  {
    "text": "and there's a wide array of transactional api's that you can use for",
    "start": "172220",
    "end": "177860"
  },
  {
    "text": "payment and e-commerce pretty much anything you want to do that has been done a lot of times you can find an API",
    "start": "177860",
    "end": "186170"
  },
  {
    "text": "and just pay for usage most of these api's I would call Surrealists they auto",
    "start": "186170",
    "end": "193550"
  },
  {
    "text": "scale up and down you don't need to manage servers and you only pay for what you use here are some api's that are the",
    "start": "193550",
    "end": "203959"
  },
  {
    "text": "ones that are used in the use cases that I picked I want to go through these just say that since you may not know",
    "start": "203959",
    "end": "209540"
  },
  {
    "text": "recognize all the logos on the chart you're familiar with them when you come across them in the top row there's",
    "start": "209540",
    "end": "216080"
  },
  {
    "text": "Google Cloud storage and Amazon s3 which are you know kind of the the original serverless API is where you can upload",
    "start": "216080",
    "end": "224060"
  },
  {
    "text": "an incredible amount of data and download files and/or blobs and it",
    "start": "224060",
    "end": "232850"
  },
  {
    "text": "scales a core magically in the background and the cloud providers do",
    "start": "232850",
    "end": "239570"
  },
  {
    "text": "all the work to manage large amounts of infrastructure then there's pub/sub and",
    "start": "239570",
    "end": "247120"
  },
  {
    "text": "publish/subscribe google cloud pubs pubs pub/sub and amazon SNS which allow you",
    "start": "247120",
    "end": "255470"
  },
  {
    "text": "to often stitch these things together so you can publish a message on a topic and",
    "start": "255470",
    "end": "261500"
  },
  {
    "text": "receive it and somebody else can receive it often a different part of your infrastructure your service application also featured",
    "start": "261500",
    "end": "269289"
  },
  {
    "text": "in this talk are cloud datastore which is a beloved no sequel datastore which",
    "start": "269289",
    "end": "276900"
  },
  {
    "text": "allows you to build an application where the performance of that application",
    "start": "276900",
    "end": "282310"
  },
  {
    "text": "scales with the size of the results set not the amount of data that's in the system so you can build something small",
    "start": "282310",
    "end": "288370"
  },
  {
    "text": "and expect that as your app scales with number of users and with amount of data",
    "start": "288370",
    "end": "293380"
  },
  {
    "text": "your performance will be the same the next generation of this is Google Cloud",
    "start": "293380",
    "end": "298419"
  },
  {
    "text": "Fire Store which combines with the firebase SDK to allow real-time data",
    "start": "298419",
    "end": "303580"
  },
  {
    "text": "updates to the client and has the same properties of cloud datastore and then",
    "start": "303580",
    "end": "309789"
  },
  {
    "text": "we've got Google bigquery which is used for data big data analytics and Google",
    "start": "309789",
    "end": "316150"
  },
  {
    "text": "Cloud vision which is one of the many Google cloud machine learning api's and then there's a number of other API is",
    "start": "316150",
    "end": "321639"
  },
  {
    "text": "there's stripe which is used for payment the magnito API which is used for e-commerce and lucky seat which is used",
    "start": "321639",
    "end": "329500"
  },
  {
    "text": "to pick winners and a lottery so I'm going to go through six server list",
    "start": "329500",
    "end": "334570"
  },
  {
    "text": "patterns and in choosing these case studies I tried to find examples that",
    "start": "334570",
    "end": "342280"
  },
  {
    "text": "showcase the most common patterns that I'm seeing in real world applications and places where I see that developers",
    "start": "342280",
    "end": "349449"
  },
  {
    "text": "are seeing the most success with serverless so the first pattern the most",
    "start": "349449",
    "end": "357820"
  },
  {
    "text": "common one in terms of usage of functions in terms of the number of functions executed our data pipelines or",
    "start": "357820",
    "end": "366130"
  },
  {
    "text": "the extract transform load pattern so typically a log file will be uploaded to",
    "start": "366130",
    "end": "374169"
  },
  {
    "text": "an s3 or Google Cloud Storage bucket that will trigger a function which does some processing and then stores the",
    "start": "374169",
    "end": "380979"
  },
  {
    "text": "results in a database often these are long pipelines that do many things that call machine learning api's or api's to",
    "start": "380979",
    "end": "389409"
  },
  {
    "text": "find out more data and or validate the data that's being sent through then the",
    "start": "389409",
    "end": "397960"
  },
  {
    "text": "next most common use case is notifications so in classically you",
    "start": "397960",
    "end": "404880"
  },
  {
    "text": "would need to stand up a server and pull for changes if you want to see that something changed in a particular query",
    "start": "404880",
    "end": "411800"
  },
  {
    "text": "now instead you can just listen for that change and have a function triggered of",
    "start": "411800",
    "end": "419910"
  },
  {
    "text": "course it doesn't have to be a data storage query it could be any API where",
    "start": "419910",
    "end": "425970"
  },
  {
    "text": "that a state change maybe it's done doing a time intensive task maybe it",
    "start": "425970",
    "end": "431940"
  },
  {
    "text": "notices something different in the world that triggers a function computer",
    "start": "431940",
    "end": "437220"
  },
  {
    "text": "compared with traditional API construction we can think of it as registering a query with a callback that",
    "start": "437220",
    "end": "443430"
  },
  {
    "text": "is notified when there's something new in the result set or when there's something that was",
    "start": "443430",
    "end": "448770"
  },
  {
    "text": "deleted or when one of the results changed and it changes how you",
    "start": "448770",
    "end": "455820"
  },
  {
    "text": "constructor code and it dramatically simplifies these kinds of notifications",
    "start": "455820",
    "end": "462020"
  },
  {
    "text": "of course you can also just do notifications by email SMS text or what",
    "start": "462020",
    "end": "468000"
  },
  {
    "text": "have you very closely related to notifications or real-time updates illustrated here is firestore which does",
    "start": "468000",
    "end": "474930"
  },
  {
    "text": "a lot of the heavy lifting for you combined with the firebase SDK so that you can listen for events on the on the",
    "start": "474930",
    "end": "481169"
  },
  {
    "text": "client and write a serverless app that just runs in your browser your mobile app and reflects changes to the user but",
    "start": "481169",
    "end": "489720"
  },
  {
    "text": "people are doing this same pattern wiring it all together with custom code",
    "start": "489720",
    "end": "495240"
  },
  {
    "text": "and you can see a lot of examples of that out in the world the next pattern",
    "start": "495240",
    "end": "503159"
  },
  {
    "text": "is content management so this is probably the most commonly used example",
    "start": "503159",
    "end": "508880"
  },
  {
    "text": "where of the makes thumbnail or you upload a big image and that triggers a",
    "start": "508880",
    "end": "515640"
  },
  {
    "text": "function which then resizes the image and stores a small version of it in a",
    "start": "515640",
    "end": "522180"
  },
  {
    "text": "database then client access is something",
    "start": "522180",
    "end": "527220"
  },
  {
    "text": "that I don't hear talked about but I see used incredibly frequently so there's a number of different",
    "start": "527220",
    "end": "533550"
  },
  {
    "text": "serverless authentication system probably there are many more that I don't have direct experience with but in",
    "start": "533550",
    "end": "541769"
  },
  {
    "text": "this case what you're doing is a mobile app or web app will call on the south",
    "start": "541769",
    "end": "547830"
  },
  {
    "text": "end occasion system and allow the user to log in and then subsequently the user has a token that can be easily validated",
    "start": "547830",
    "end": "554790"
  },
  {
    "text": "on the server side and that token is passed to a function the function can validate that the user is whoever they",
    "start": "554790",
    "end": "561630"
  },
  {
    "text": "think it should be and then the function holds the key to the API and this is very important because you can't have",
    "start": "561630",
    "end": "567779"
  },
  {
    "text": "your API keys that bill you or a certain number of API transactions out there in",
    "start": "567779",
    "end": "574680"
  },
  {
    "text": "the wild so this client same client access pattern is built into fire store",
    "start": "574680",
    "end": "581779"
  },
  {
    "text": "and then there's fire based rules on the server side which lets you declare what",
    "start": "581779",
    "end": "587790"
  },
  {
    "text": "parts can be accessed and that's and we're working very closely with OPA so",
    "start": "587790",
    "end": "593339"
  },
  {
    "text": "you can do that same type of pattern in the open source using open it OPA",
    "start": "593339",
    "end": "601670"
  },
  {
    "text": "one pattern that kind of surprised me to see so frequently is live data migration",
    "start": "601730",
    "end": "607470"
  },
  {
    "text": "although once I started hearing about it of course it's it's a great use of",
    "start": "607470",
    "end": "612750"
  },
  {
    "text": "serverless so in this case you have of course your your data source or my drum",
    "start": "612750",
    "end": "619709"
  },
  {
    "text": "migrating from needs to support events but during your migration you can have",
    "start": "619709",
    "end": "626190"
  },
  {
    "text": "no downtime because a right to the data store triggers a function then you write",
    "start": "626190",
    "end": "631620"
  },
  {
    "text": "to the new place and then and that's my",
    "start": "631620",
    "end": "638100"
  },
  {
    "text": "list of six common serverless patterns and what i'm going to do next is dive",
    "start": "638100",
    "end": "646020"
  },
  {
    "text": "into for use cases from a wide range of domains using different technologies",
    "start": "646020",
    "end": "652350"
  },
  {
    "text": "where you can see these patterns at work the first one is Hawkins dynamics so",
    "start": "652350",
    "end": "660839"
  },
  {
    "text": "these are Hawkins dynamics is a sports science company",
    "start": "660839",
    "end": "666640"
  },
  {
    "text": "focused on providing cutting-edge hardware and software systems for measuring and assessing athletic",
    "start": "666640",
    "end": "673040"
  },
  {
    "text": "performance and potential so these are these force plates are these big plates on the ground right",
    "start": "673040",
    "end": "679850"
  },
  {
    "text": "and you're an athlete and you put one foot on each plate you jump and when you",
    "start": "679850",
    "end": "685040"
  },
  {
    "text": "land it detects the force of your landing and it it then conveys all of",
    "start": "685040",
    "end": "693530"
  },
  {
    "text": "that to give you visibility into how you",
    "start": "693530",
    "end": "699710"
  },
  {
    "text": "were jumping and your athletic performance or to your coach so I'll dive into how this works so",
    "start": "699710",
    "end": "707870"
  },
  {
    "text": "these force plates are connected wirelessly to an android app and they",
    "start": "707870",
    "end": "713540"
  },
  {
    "text": "send the data to the android app and then the android and that that's great",
    "start": "713540",
    "end": "720110"
  },
  {
    "text": "because it works offline you don't have to be connected to the wider Internet and the the force plates and the Android",
    "start": "720110",
    "end": "727850"
  },
  {
    "text": "app a lot work together and then when the Android app is online it authenticates to fire store with",
    "start": "727850",
    "end": "735500"
  },
  {
    "text": "firebase off and then sends data to fire store and then the coach no matter where",
    "start": "735500",
    "end": "742850"
  },
  {
    "text": "they are in the world can view the athletic performance of that's happening",
    "start": "742850",
    "end": "749210"
  },
  {
    "text": "right now in real time or over time and the athlete or their coach can view the",
    "start": "749210",
    "end": "756950"
  },
  {
    "text": "performance data and this is an exactly an incredible example of serverless at",
    "start": "756950",
    "end": "763250"
  },
  {
    "text": "work and it was only when I dug into this particular case store study and was",
    "start": "763250",
    "end": "770240"
  },
  {
    "text": "talking to the developer that I learned that they had a live migration that they",
    "start": "770240",
    "end": "777170"
  },
  {
    "text": "had done using Google Cloud functions as well so they previously had been on the",
    "start": "777170",
    "end": "784190"
  },
  {
    "text": "firebase real-time database and so what they did when they wanted to migrate to",
    "start": "784190",
    "end": "789200"
  },
  {
    "text": "a fire store is they added a Google cloud function so that every time the Android app wrote to the real-time",
    "start": "789200",
    "end": "796160"
  },
  {
    "text": "database it would write to it would call the trigger the function",
    "start": "796160",
    "end": "801799"
  },
  {
    "text": "and then write to firestore and this allowed them to roll out a new version",
    "start": "801799",
    "end": "809029"
  },
  {
    "text": "of the Android app that talked to firestore and then once all of their",
    "start": "809029",
    "end": "816049"
  },
  {
    "text": "users had been upgraded they could shut down the real-time database and remove the cloud function and then they've done",
    "start": "816049",
    "end": "822110"
  },
  {
    "text": "the whole migration with no disruption in service and it's a lovely story and I've seen that type of use case",
    "start": "822110",
    "end": "828489"
  },
  {
    "text": "replicated by a lot of companies and it's really a nice use of service the",
    "start": "828489",
    "end": "834920"
  },
  {
    "text": "second case study very different domain the Hamilton musical is very popular in",
    "start": "834920",
    "end": "843319"
  },
  {
    "text": "the United States so this is a musical about US history and they built a mobile app for the",
    "start": "843319",
    "end": "851360"
  },
  {
    "text": "musical and a mobile app that's for musical is is not the product right the",
    "start": "851360",
    "end": "857720"
  },
  {
    "text": "product is the musical so the mobile app really needs to be delivered at relatively low cost and be operated by",
    "start": "857720",
    "end": "865149"
  },
  {
    "text": "non-technical folks whose primary job is they're not mobile apps the app was",
    "start": "865149",
    "end": "871579"
  },
  {
    "text": "developed by Posse a digital agency that used server lists to stay focused on the",
    "start": "871579",
    "end": "876589"
  },
  {
    "text": "app and their users and I'll go through a few parts of three different parts of",
    "start": "876589",
    "end": "884360"
  },
  {
    "text": "the app where they use service the first is for the lottery so one of this very",
    "start": "884360",
    "end": "890509"
  },
  {
    "text": "very popular musical has been going to different cities in the United States and it is always sold out one of the",
    "start": "890509",
    "end": "896299"
  },
  {
    "text": "things they do that is really lovely is they reserved a number of VIP seats for",
    "start": "896299",
    "end": "902209"
  },
  {
    "text": "just $10 so when when this was in San Francisco like a hundred thousand people",
    "start": "902209",
    "end": "909829"
  },
  {
    "text": "would enter this lottery every day and my friend entered the lottery every day",
    "start": "909829",
    "end": "916999"
  },
  {
    "text": "for four months and then we actually we're able to see Hamilton three days before it closed it was amazing so think",
    "start": "916999",
    "end": "925610"
  },
  {
    "text": "you can imagine this is a lot of spikey traffic perfect use case for serverless so how does that work exactly",
    "start": "925610",
    "end": "932760"
  },
  {
    "text": "so the mobile app authenticates with firebase authentication that also saves",
    "start": "932760",
    "end": "939329"
  },
  {
    "text": "the profile data to the real-time database and then people can sign up for the lottery I think after 4 p.m. the",
    "start": "939329",
    "end": "946230"
  },
  {
    "text": "previous day or something and then on a timer",
    "start": "946230",
    "end": "951360"
  },
  {
    "text": "every on a cron job with App Engine cron I think every morning at 9 a.m. they",
    "start": "951360",
    "end": "957769"
  },
  {
    "text": "call out to lucky seat which is an API specifically built to fairly randomize",
    "start": "957769",
    "end": "967529"
  },
  {
    "text": "the winning ticket and then the real-time database that that winning ticket has written to the real-time",
    "start": "967529",
    "end": "973290"
  },
  {
    "text": "database which notifies the client the",
    "start": "973290",
    "end": "978389"
  },
  {
    "text": "second use case the second part of the app is really a content management system until I ran my own mobile",
    "start": "978389",
    "end": "986430"
  },
  {
    "text": "development company several years ago I never realized that major TV shows and",
    "start": "986430",
    "end": "992870"
  },
  {
    "text": "theater productions usually have their own mobile app it's it's a thing so the",
    "start": "992870",
    "end": "1001459"
  },
  {
    "text": "app needs a way for the operator on the backend to provide content and typically",
    "start": "1001459",
    "end": "1006800"
  },
  {
    "text": "this is somebody in the entertainment industry who's fairly technical but not a programmer so so the admin web app",
    "start": "1006800",
    "end": "1015519"
  },
  {
    "text": "allows for uploading images to Google Cloud storage and then that triggers a",
    "start": "1015519",
    "end": "1021110"
  },
  {
    "text": "function which which then can size the images for all the different mobile",
    "start": "1021110",
    "end": "1026298"
  },
  {
    "text": "devices right then back to Google Cloud storage also write metadata to the real time database and that sync to the app",
    "start": "1026299",
    "end": "1032150"
  },
  {
    "text": "pretty straightforward and then the last use case is merchandising so they so",
    "start": "1032150",
    "end": "1039290"
  },
  {
    "text": "it's typical for a mobile developer they don't need to build a whole ecommerce catalog in this case they used the",
    "start": "1039290",
    "end": "1046040"
  },
  {
    "text": "magento api and and then they use stripe for payments and having a function in",
    "start": "1046040",
    "end": "1052190"
  },
  {
    "text": "between allows them to keep their keys on the server side my third use case is",
    "start": "1052190",
    "end": "1058510"
  },
  {
    "text": "guess work which is a machine learning startup that helps ecommerce companies",
    "start": "1058510",
    "end": "1064309"
  },
  {
    "text": "in emerging markets recommend products for first-time buyers on their site when a new user arrives at",
    "start": "1064309",
    "end": "1074539"
  },
  {
    "text": "the site guesswork analyzes a lot of data points where a new user is coming",
    "start": "1074539",
    "end": "1079970"
  },
  {
    "text": "from such as an email campaign for t-shirts or a fashion blog about shoes",
    "start": "1079970",
    "end": "1085159"
  },
  {
    "text": "as well as device type and geography and from all that data comes up with a",
    "start": "1085159",
    "end": "1091190"
  },
  {
    "text": "recommendation so let's dive in this is a specific use case where they worked",
    "start": "1091190",
    "end": "1097159"
  },
  {
    "text": "with Zalora in Southeast Asia to bring better ecommerce recommendations to",
    "start": "1097159",
    "end": "1102169"
  },
  {
    "text": "their customers so the person comes to the website and for their e-commerce",
    "start": "1102169",
    "end": "1109850"
  },
  {
    "text": "visit through the Google tag manager which embeds the firestore SDK it writes",
    "start": "1109850",
    "end": "1117700"
  },
  {
    "text": "information about the visit to fire store and that triggers a couple of data",
    "start": "1117700",
    "end": "1122720"
  },
  {
    "text": "pipelines so first a google cloud function triggered off the right stores",
    "start": "1122720",
    "end": "1131150"
  },
  {
    "text": "the data in bigquery that's then available to the recommendation engine to query another Google cloud function",
    "start": "1131150",
    "end": "1138159"
  },
  {
    "text": "uses the vision API and this is really interesting what they found was that",
    "start": "1138159",
    "end": "1143659"
  },
  {
    "text": "because they served so many different languages the metadata that was taxed",
    "start": "1143659",
    "end": "1148909"
  },
  {
    "text": "about the product wasn't that reliable to find good product info so they",
    "start": "1148909",
    "end": "1154460"
  },
  {
    "text": "actually may use the image of the product to analyze its metadata about",
    "start": "1154460",
    "end": "1161870"
  },
  {
    "text": "the product and feed that into that recommendation engine and then they can",
    "start": "1161870",
    "end": "1168770"
  },
  {
    "text": "do real-time notifications to the client for anonymous users and then for",
    "start": "1168770",
    "end": "1173809"
  },
  {
    "text": "registered users they can periodically send email so this is the whole picture together and this architecture made it",
    "start": "1173809",
    "end": "1180860"
  },
  {
    "text": "easier to make changes which allowed them to easily set up a be testing which",
    "start": "1180860",
    "end": "1186070"
  },
  {
    "text": "significantly increased the quality of their recommendations and their revenue",
    "start": "1186070",
    "end": "1192039"
  },
  {
    "text": "so with serverless guesswork bootstrapped their company grew a",
    "start": "1192039",
    "end": "1197240"
  },
  {
    "text": "business that now serves a hundred million users with just three developers the last one",
    "start": "1197240",
    "end": "1205340"
  },
  {
    "text": "which is my favorite story is semi os-- which provides 24/7 monitoring of your",
    "start": "1205340",
    "end": "1213580"
  },
  {
    "text": "orchard so this is the semi o Skateway",
    "start": "1213580",
    "end": "1219820"
  },
  {
    "text": "standing in the orchard and they you",
    "start": "1219820",
    "end": "1225530"
  },
  {
    "text": "can't see in the trees there are devices hanging in the trees which collect data and send them to the Gateway and there's",
    "start": "1225530",
    "end": "1234350"
  },
  {
    "text": "also ways that the Gateway can communicate back and control the pest",
    "start": "1234350",
    "end": "1240530"
  },
  {
    "text": "population or control irrigation and then the Gateway talks to the cloud in",
    "start": "1240530",
    "end": "1247070"
  },
  {
    "text": "this case periodically the Gateway uploads its logs of IOT data and images",
    "start": "1247070",
    "end": "1252980"
  },
  {
    "text": "to s3 and then as three when it gets new data triggers and SNS sends a message on",
    "start": "1252980",
    "end": "1262400"
  },
  {
    "text": "an SNS topic which hops over to Google cloud and adds a message to a pub sub",
    "start": "1262400",
    "end": "1269600"
  },
  {
    "text": "topic which triggers a cloud function which then writes to cloud datastore",
    "start": "1269600",
    "end": "1275410"
  },
  {
    "text": "then elastic Beanstalk runs their traditional web app and gets the data of",
    "start": "1275410",
    "end": "1283370"
  },
  {
    "text": "cloud datastore and presents the data to the farmer who runs the orchard who can",
    "start": "1283370",
    "end": "1290120"
  },
  {
    "text": "then act on that data it was surprising to me how some developers so easily mix",
    "start": "1290120",
    "end": "1297980"
  },
  {
    "text": "and match services across clouds in this case semiosis was using AWS for their",
    "start": "1297980",
    "end": "1303770"
  },
  {
    "text": "whole back-end infrastructure but they really love cloud datastore so they hooked it up a server list and",
    "start": "1303770",
    "end": "1309770"
  },
  {
    "text": "we're seeing more and more that it's not that people are wed to a single cloud",
    "start": "1309770",
    "end": "1314840"
  },
  {
    "text": "they're mixing and matching great products together and this makes sense",
    "start": "1314840",
    "end": "1322790"
  },
  {
    "text": "when you reflect on the fact that they're using a lot of different api's and that no cloud provider offers all",
    "start": "1322790",
    "end": "1329840"
  },
  {
    "text": "the api's they need anyhow so these are my six service patterns",
    "start": "1329840",
    "end": "1335100"
  },
  {
    "text": "that I came up with but this is only part of the story there are also some pain points that I",
    "start": "1335100",
    "end": "1340260"
  },
  {
    "text": "wanted to share with you some people are saying that serverless is zero ops but I",
    "start": "1340260",
    "end": "1347220"
  },
  {
    "text": "feel a little conflicted about that it certainly reduces your officers burden we don't have to manage servers and VMs",
    "start": "1347220",
    "end": "1354240"
  },
  {
    "text": "anymore and that's great but even if you're not manning servers you still have a kind of ops you have to",
    "start": "1354240",
    "end": "1361680"
  },
  {
    "text": "make sure your app works and I've been hearing people talk about this as app",
    "start": "1361680",
    "end": "1367380"
  },
  {
    "text": "ops I don't know if that words gonna stick but how do you know your apps working in production what are you doing",
    "start": "1367380",
    "end": "1373230"
  },
  {
    "text": "it fails you still have to worry about these things one of the key challenges",
    "start": "1373230",
    "end": "1379710"
  },
  {
    "text": "is observability you need to pay attention to when your services services are failing and with server lists you",
    "start": "1379710",
    "end": "1388410"
  },
  {
    "text": "typically have many small functions connected via events an end user might",
    "start": "1388410",
    "end": "1393560"
  },
  {
    "text": "observe a failure many hops away from the root cause when we build apps with",
    "start": "1393560",
    "end": "1400740"
  },
  {
    "text": "server lists we're actually building a distributed system and those of you who've built infrastructure who are",
    "start": "1400740",
    "end": "1407070"
  },
  {
    "text": "coming from a world of this is easier because I'm not managing my whole cluster you're familiar with what you",
    "start": "1407070",
    "end": "1414030"
  },
  {
    "text": "might need to do to hook this up we also have a lot of application developers that are coming from client-side",
    "start": "1414030",
    "end": "1422220"
  },
  {
    "text": "development where this is a whole new world and I think as service providers",
    "start": "1422220",
    "end": "1427470"
  },
  {
    "text": "we all have to think about how do we give people these tools just make this easier but to some degree it's about",
    "start": "1427470",
    "end": "1434370"
  },
  {
    "text": "what your app does what are the signals that you need to make sure your app",
    "start": "1434370",
    "end": "1440190"
  },
  {
    "text": "works so we need to be thoughtful about logging setting up monitoring and alerting and doesn't come for free then",
    "start": "1440190",
    "end": "1448760"
  },
  {
    "text": "what happens when something goes wrong you have to debug it things are different when your VM is there has a",
    "start": "1448760",
    "end": "1457650"
  },
  {
    "text": "problem in scales down to zero you have to debug it differently you you can't",
    "start": "1457650",
    "end": "1463080"
  },
  {
    "text": "use the same tricks that maybe you did when you when you just ran VM as",
    "start": "1463080",
    "end": "1468669"
  },
  {
    "text": "yourself you with with every service platform right now you have to do a a",
    "start": "1468669",
    "end": "1475029"
  },
  {
    "text": "bit of experimentation to get your work flow down there's a lot of activity in this space and I expect things will get better but it's--but Wild West right now",
    "start": "1475029",
    "end": "1481960"
  },
  {
    "text": "and then security security is different sort of with a cloud native micro",
    "start": "1481960",
    "end": "1488559"
  },
  {
    "text": "services architecture your security boundary is going to be a bit different you need to be thoughtful about key",
    "start": "1488559",
    "end": "1495309"
  },
  {
    "text": "management but remember the exact same security issues we've always had you still have so serverless does reduce",
    "start": "1495309",
    "end": "1504009"
  },
  {
    "text": "your ops version but doesn't go opps burden it doesn't go away you're still",
    "start": "1504009",
    "end": "1509169"
  },
  {
    "text": "responsible for making sure your app works so sometimes servers can be nice like",
    "start": "1509169",
    "end": "1518200"
  },
  {
    "text": "serverless isn't for all things if you have a long live job if you have",
    "start": "1518200",
    "end": "1523599"
  },
  {
    "text": "sustained throughput sometimes it's cheaper and easier to just manage your Vin's if you already have an ops team",
    "start": "1523599",
    "end": "1531059"
  },
  {
    "text": "maybe you know that's fine VMs can be",
    "start": "1531059",
    "end": "1536559"
  },
  {
    "text": "nice so in summary there's a lot of",
    "start": "1536559",
    "end": "1545470"
  },
  {
    "text": "patterns that are emerging that I think",
    "start": "1545470",
    "end": "1550509"
  },
  {
    "text": "are really exciting that we're starting to see how these things fit together and what service is really good for what",
    "start": "1550509",
    "end": "1556779"
  },
  {
    "text": "we're seeing over and over again is that serverless enables developer velocity and flexibility the key value that I've",
    "start": "1556779",
    "end": "1565539"
  },
  {
    "text": "seen over and over again is delivering business value with fast time to market",
    "start": "1565539",
    "end": "1573119"
  },
  {
    "text": "with server lists even though right now it might be a little painful delivering",
    "start": "1573119",
    "end": "1580539"
  },
  {
    "text": "business value three months early because you didn't have to build the infrastructure you would normally build",
    "start": "1580539",
    "end": "1586080"
  },
  {
    "text": "can make a dramatic difference in the solution that you're providing and can",
    "start": "1586080",
    "end": "1592720"
  },
  {
    "text": "make a big change to your business so now I'd like to open the floor for some",
    "start": "1592720",
    "end": "1597820"
  },
  {
    "text": "questions [Applause]",
    "start": "1597820",
    "end": "1609269"
  },
  {
    "text": "yes oh the question was about firebase",
    "start": "1615030",
    "end": "1624190"
  },
  {
    "text": "real-time database versus cloud fire story so firebase real-time database is",
    "start": "1624190",
    "end": "1631030"
  },
  {
    "text": "the original firebase product that's vertically scalable it scales really high but there's a limit and but it's",
    "start": "1631030",
    "end": "1638890"
  },
  {
    "text": "very very good for incredibly high throughput low latency interactions so",
    "start": "1638890",
    "end": "1644560"
  },
  {
    "text": "if you're doing like a shared whiteboard for our base real time database is for you cloud firestore has global scale and has",
    "start": "1644560",
    "end": "1653200"
  },
  {
    "text": "all the properties of cloud datastore and so it's the logical successor while",
    "start": "1653200",
    "end": "1658360"
  },
  {
    "text": "also not handling some key use cases of the real-time database so they're they've each got their niche other",
    "start": "1658360",
    "end": "1665950"
  },
  {
    "text": "questions yes",
    "start": "1665950",
    "end": "1674279"
  },
  {
    "text": "so um so the question was about CloudFlare which i've heard of this but",
    "start": "1698300",
    "end": "1703950"
  },
  {
    "text": "I haven't used it myself where they allow you to put a function at the edge",
    "start": "1703950",
    "end": "1710450"
  },
  {
    "text": "so that you can have a little bit of logic before rendering whatever is being",
    "start": "1710450",
    "end": "1717300"
  },
  {
    "text": "accessed and so it doesn't fit into my six patterns and I'm not saying that these six patterns are all the patterns",
    "start": "1717300",
    "end": "1723050"
  },
  {
    "text": "these are just the most common ones that I've seen and I'm involved with Google cloud functions and firebase and a",
    "start": "1723050",
    "end": "1730230"
  },
  {
    "text": "number of cloud products that are focused on application development so I",
    "start": "1730230",
    "end": "1736890"
  },
  {
    "text": "may be seeing just one swath of serverless yeah I think that a lot of",
    "start": "1736890",
    "end": "1742980"
  },
  {
    "text": "patterns are still yet to emerge yes",
    "start": "1742980",
    "end": "1749780"
  },
  {
    "text": "the evolution of deployment and zero ops well I think that see ICD is being",
    "start": "1758860",
    "end": "1764770"
  },
  {
    "text": "embraced by the industry continuous integration and continuous deployment and and really what I've seen successful",
    "start": "1764770",
    "end": "1775549"
  },
  {
    "text": "in that space is that people have very good monitoring and alerting",
    "start": "1775549",
    "end": "1785299"
  },
  {
    "text": "because automated testing is great I wouldn't I don't feel safe without it",
    "start": "1785299",
    "end": "1790700"
  },
  {
    "text": "but in your test environment you can only test so many things and what you really want to know is that when you",
    "start": "1790700",
    "end": "1795980"
  },
  {
    "text": "roll out what's the health of the system after that rollout and be very quickly alerted to that and so so I think that",
    "start": "1795980",
    "end": "1804410"
  },
  {
    "text": "we're going to see we're already starting to see a lot of evolution in this space and a lot of new tools in the",
    "start": "1804410",
    "end": "1810890"
  },
  {
    "text": "space of how do we detect the health of a system and everything from and we're",
    "start": "1810890",
    "end": "1817400"
  },
  {
    "text": "going beyond like traditionally you know 10 years ago my teams were thinking",
    "start": "1817400",
    "end": "1824720"
  },
  {
    "text": "about like the ramp you know what was a system out of RAM you know it's this",
    "start": "1824720",
    "end": "1830870"
  },
  {
    "text": "getting hot and CPU and now we're seeing people looking at business metrics and",
    "start": "1830870",
    "end": "1837580"
  },
  {
    "text": "really thinking about like is this working right is is my app still",
    "start": "1837580",
    "end": "1844010"
  },
  {
    "text": "delivering value because my my machines could be running fine but they no longer",
    "start": "1844010",
    "end": "1851780"
  },
  {
    "text": "functions in the way that it intended to so I think that type of application",
    "start": "1851780",
    "end": "1857540"
  },
  {
    "text": "monitoring we're going to see much more sophistication around another question",
    "start": "1857540",
    "end": "1865090"
  },
  {
    "text": "back there",
    "start": "1865090",
    "end": "1868299"
  },
  {
    "text": "so the question is how long should functions run well I think that all the",
    "start": "1894960",
    "end": "1902309"
  },
  {
    "text": "different proud cloud cloud providers have limits to how long their functions",
    "start": "1902309",
    "end": "1907590"
  },
  {
    "text": "run and and I know that's that's a pain point for some folks and I think that",
    "start": "1907590",
    "end": "1913590"
  },
  {
    "text": "will you know we'll sort of see how that plays out in the industry in terms of",
    "start": "1913590",
    "end": "1918690"
  },
  {
    "text": "you know does it must like must H must",
    "start": "1918690",
    "end": "1927570"
  },
  {
    "text": "it be a short-lived job for it to live in the serverless world like in reality",
    "start": "1927570",
    "end": "1935419"
  },
  {
    "text": "what every function framework in the world is 9 minutes oh it's I didn't",
    "start": "1936440",
    "end": "1942899"
  },
  {
    "text": "realize that was a Google specific question nine minutes for Google is",
    "start": "1942899",
    "end": "1952200"
  },
  {
    "text": "there another cry don't know where we are on time yes",
    "start": "1952200",
    "end": "1957890"
  },
  {
    "text": "so yeah the question was why why are our users using one cloud provider over",
    "start": "2022350",
    "end": "2028509"
  },
  {
    "text": "another why use Google cloud functions or AWS lambda and you know and there's",
    "start": "2028509",
    "end": "2034480"
  },
  {
    "text": "some feature differences but primarily what I'm seeing is that well there's some folks that some of the big",
    "start": "2034480",
    "end": "2041230"
  },
  {
    "text": "companies want to have multiple cloud providers for redundancy but most",
    "start": "2041230",
    "end": "2046750"
  },
  {
    "text": "commonly there's a particular product that they love on one cloud provider and",
    "start": "2046750",
    "end": "2052480"
  },
  {
    "text": "another product that they love on a different cloud provider and they just use those two things just the way like",
    "start": "2052480",
    "end": "2057970"
  },
  {
    "text": "well I might use stripe for payments you know like that doesn't mean that I'm",
    "start": "2057970",
    "end": "2063550"
  },
  {
    "text": "like unloyal to Google cloud platform then that they're not seeing the",
    "start": "2063550",
    "end": "2069190"
  },
  {
    "text": "platform's as I must use all of these things in one category and some of the things like a lot of a lot of the C",
    "start": "2069190",
    "end": "2075908"
  },
  {
    "text": "reasons we see people using Google cloud is because of the wide array of ml options and so people will use functions",
    "start": "2075909",
    "end": "2083460"
  },
  {
    "text": "along with the set of products that are vented that they really like another",
    "start": "2083460",
    "end": "2092020"
  },
  {
    "text": "question all right well I'll be around afterwards thank you very much",
    "start": "2092020",
    "end": "2098020"
  },
  {
    "text": "[Applause]",
    "start": "2098020",
    "end": "2100250"
  }
]