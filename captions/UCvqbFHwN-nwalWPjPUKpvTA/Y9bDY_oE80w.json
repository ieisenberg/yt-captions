[
  {
    "text": "well hey everyone thank you for showing up this is a this is a good turnout alright so my name is Colin Sullivan I'm",
    "start": "30",
    "end": "7680"
  },
  {
    "text": "product manager and Nats and we'll give you a quick introduction to Nats today",
    "start": "7680",
    "end": "13250"
  },
  {
    "text": "so first let's talk about messaging what is messaging wikipedia defines a",
    "start": "13250",
    "end": "19199"
  },
  {
    "text": "messaging as message oriented middleware which is what Nats is it's software hardware infrastructure supporting the",
    "start": "19199",
    "end": "25470"
  },
  {
    "text": "sending and receiving messages between distributed systems I kind of like Ken klinken Stein's description middleware",
    "start": "25470",
    "end": "32640"
  },
  {
    "text": "is the intersection of the stuff that network engineers don't want to do with the stuff application developers don't",
    "start": "32640",
    "end": "38010"
  },
  {
    "text": "want to do we don't mention this one we're interviewing so why does CN CF",
    "start": "38010",
    "end": "43950"
  },
  {
    "text": "need messaging as cloud technology has matured distributed systems architecture",
    "start": "43950",
    "end": "51030"
  },
  {
    "text": "has been disrupted via decomposition we've moved from these these large monolithic applications to microservices",
    "start": "51030",
    "end": "59039"
  },
  {
    "text": "spread out all over the place and communications has lagged a bit a technologies needed to address some very",
    "start": "59039",
    "end": "65820"
  },
  {
    "text": "some use cases we need multiple messaging patterns bundled into one technology location transparency I",
    "start": "65820",
    "end": "73320"
  },
  {
    "text": "shouldn't have to know exactly where everything is to connect to it the decoupling of data producers and",
    "start": "73320",
    "end": "79110"
  },
  {
    "text": "consumers and built-in load balancing Nats was created specifically to meet",
    "start": "79110",
    "end": "84570"
  },
  {
    "text": "these needs for the next generation of cloud native applications now what is",
    "start": "84570",
    "end": "90060"
  },
  {
    "text": "Nats Nats is a seven-year-old production proven cloud native messaging system",
    "start": "90060",
    "end": "95310"
  },
  {
    "text": "made for developers and operators who just want to do their jobs people who don't want to worry about messaging just",
    "start": "95310",
    "end": "101159"
  },
  {
    "text": "want something simple that works the DNA of Nats what what makes Nats up what's",
    "start": "101159",
    "end": "106860"
  },
  {
    "text": "behind it is performance simplicity security and availability Nats is built from the ground up to be",
    "start": "106860",
    "end": "114390"
  },
  {
    "text": "cloud native and we have common message patterns support including request reply publish subscribe and load-balanced cue",
    "start": "114390",
    "end": "121649"
  },
  {
    "text": "subscribers so how did Nats come about NASA's created by Derek Collison Derek's",
    "start": "121649",
    "end": "128489"
  },
  {
    "text": "been building messaging systems upwards of 25 years he started at 10 Co whereas chief architect developing a",
    "start": "128489",
    "end": "135950"
  },
  {
    "text": "lot of the messaging systems there he was a technical director at Google he architected Cloud Foundry CTO and chief",
    "start": "135950",
    "end": "142459"
  },
  {
    "text": "architect at VMware and formerly at Apps era which was container container based",
    "start": "142459",
    "end": "149390"
  },
  {
    "text": "technology and now he's founder and CEO at cinavia where we maintain that and we do have a",
    "start": "149390",
    "end": "158989"
  },
  {
    "text": "very engaged user community quite a few contributions a very healthy slack community too so an overview Nance is",
    "start": "158989",
    "end": "167090"
  },
  {
    "text": "pure publish/subscribe and based on this we build common message patterns on top",
    "start": "167090",
    "end": "172760"
  },
  {
    "text": "we support a clustering of servers with built-in Auto discovery we've got",
    "start": "172760",
    "end": "177829"
  },
  {
    "text": "clients for over 30 programming languages log base streaming to guaranteed message delivery and then we",
    "start": "177829",
    "end": "185510"
  },
  {
    "text": "also have some CN CF integrations Prometheus nats exporter for exporting nats metrics into Prometheus and a",
    "start": "185510",
    "end": "192530"
  },
  {
    "text": "kubernetes operator nat supports a range of technical use cases general messaging",
    "start": "192530",
    "end": "199220"
  },
  {
    "text": "in the cloud micro services transport control planes service discovery we're",
    "start": "199220",
    "end": "204620"
  },
  {
    "text": "also found an IOT mobile and Big Data - out messaging I need to get one message out to many thousands of subscribers",
    "start": "204620",
    "end": "212560"
  },
  {
    "text": "replacing our augmenting legacy messaging well as I said Nikki know we're finding that many of our users as",
    "start": "212560",
    "end": "219799"
  },
  {
    "text": "they move from on-prem to the cloud find that their legacy old do-it-yourself",
    "start": "219799",
    "end": "224930"
  },
  {
    "text": "messaging technologies just don't fit the bill and they find that Nats really helps them with it we have many users",
    "start": "224930",
    "end": "232310"
  },
  {
    "text": "and adopters two of my favorite use cases so one user came and told me and I",
    "start": "232310",
    "end": "239030"
  },
  {
    "text": "don't know if I can say who they are but they said we cannot replace Nats unless we pull fuel rods that's don't want to",
    "start": "239030",
    "end": "248989"
  },
  {
    "text": "lose too much sleep over that but that's how we're liable Nats is for our users and the other use case I love is Nats on",
    "start": "248989",
    "end": "257269"
  },
  {
    "text": "a cell phone and when the cell phone vibrates too much their application",
    "start": "257269",
    "end": "263090"
  },
  {
    "text": "sends a message over Nats through to the cloud that aggregates and listen for these when too many vibrations",
    "start": "263090",
    "end": "269050"
  },
  {
    "text": "happen in one spot it's an earlier earthquake detection system so it's not saving lives I love that it's called the",
    "start": "269050",
    "end": "275950"
  },
  {
    "text": "circular world so some contribution statistics 200 contributors we have 30",
    "start": "275950",
    "end": "283930"
  },
  {
    "text": "public repositories about 25 million NAT server dr. hub pulls about 7 million at",
    "start": "283930",
    "end": "289300"
  },
  {
    "text": "streaming server pools a healthy slack community and pretty good cadence of Nats releases about 20 over the last",
    "start": "289300",
    "end": "296280"
  },
  {
    "text": "what six years or four years so about five a year now before we go on let's",
    "start": "296280",
    "end": "302710"
  },
  {
    "text": "talk about messaging patterns in general oops so Nats has three built-in patterns",
    "start": "302710",
    "end": "310380"
  },
  {
    "text": "publish/subscribe so that's where you publish data to a subject and the subjects just a string in that so some",
    "start": "310380",
    "end": "316690"
  },
  {
    "text": "identifiers publish they do a subject where one to many subscribers will",
    "start": "316690",
    "end": "322090"
  },
  {
    "text": "receive the data this is a fan-out so I might have a thousand subscribers listening to the same subject and I send",
    "start": "322090",
    "end": "328720"
  },
  {
    "text": "a message from a publisher to this and it gets fanned out to your thousands of subscribers we also have a request reply",
    "start": "328720",
    "end": "335350"
  },
  {
    "text": "that's where you send a request message and we still use underlying publish",
    "start": "335350",
    "end": "341050"
  },
  {
    "text": "subscribe but we use guaranteed unique subjects I see you send a request message on a unique subject with a",
    "start": "341050",
    "end": "347440"
  },
  {
    "text": "unique reply and that creates a logical one-on-one requests reply we also have",
    "start": "347440",
    "end": "353770"
  },
  {
    "text": "load balance cue subscribers so these are subscribers that are bundled together in a group and they're all",
    "start": "353770",
    "end": "361510"
  },
  {
    "text": "listening on the same subject but the server will only send a message to one",
    "start": "361510",
    "end": "366970"
  },
  {
    "text": "of these subscribers and if you can start out with a group of one where that subscriber will receive every single",
    "start": "366970",
    "end": "373330"
  },
  {
    "text": "message pub its published to that subject and then let's say you want to auto scale all you do is add another",
    "start": "373330",
    "end": "379180"
  },
  {
    "text": "subscriber no additional configuration this is the perfect cloud auto scaling",
    "start": "379180",
    "end": "384760"
  },
  {
    "text": "situation and then what happens is a server distributes the load of messages between that subscriber and you can",
    "start": "384760",
    "end": "390940"
  },
  {
    "text": "continue to scale up or down without any configuration changes so let's talk",
    "start": "390940",
    "end": "398050"
  },
  {
    "text": "about Nats DNA performance and scalability simplicity security and availability or what makeup",
    "start": "398050",
    "end": "404970"
  },
  {
    "text": "Nats a good way to think about things is that's it's just what you need and none",
    "start": "404970",
    "end": "410310"
  },
  {
    "text": "of what you don't we try to be very very simple and easy to use so let's talk",
    "start": "410310",
    "end": "415530"
  },
  {
    "text": "about performance performance is a part of every single decision we make any PR",
    "start": "415530",
    "end": "421979"
  },
  {
    "text": "we merge we look for performance we take a look we take a very very careful analysis of the fast path you know is",
    "start": "421979",
    "end": "429389"
  },
  {
    "text": "this gonna require extra locking are there extra memory copies can I get by without locking or are there even system",
    "start": "429389",
    "end": "436500"
  },
  {
    "text": "primitives that are more efficient so we look at that and we also design for scale so anytime we start looking at in",
    "start": "436500",
    "end": "443789"
  },
  {
    "text": "addition to the protocol we think all right what happens if I multiply this by a million by ten million that's how we",
    "start": "443789",
    "end": "453060"
  },
  {
    "text": "think about Nats and scalability and we found keeping that simple has worked extremely well but just as important as",
    "start": "453060",
    "end": "461310"
  },
  {
    "text": "how we do this and how we look at performance is what we haven't implemented we try to",
    "start": "461310",
    "end": "467580"
  },
  {
    "text": "minimize state in the corn at server so we in corn ATS basic Nats we don't",
    "start": "467580",
    "end": "474270"
  },
  {
    "text": "provide any message guarantees we provide at most once it's up to the application to make sure the message",
    "start": "474270",
    "end": "479820"
  },
  {
    "text": "gets there sounds a little fragile I'll discuss that more in a bit we don't support transactions nor do we support",
    "start": "479820",
    "end": "486840"
  },
  {
    "text": "message schemas Nats as payload agnostic nor things like mqt T's last will and",
    "start": "486840",
    "end": "492810"
  },
  {
    "text": "testament or if you're familiar with JMS message groups these are all things people have asked for us and you know I",
    "start": "492810",
    "end": "498690"
  },
  {
    "text": "hate to say no but it's not part of net but what this yields is 18 million",
    "start": "498690",
    "end": "506039"
  },
  {
    "text": "messages a second with multiple streams we've gotten up to around 80 million",
    "start": "506039",
    "end": "512729"
  },
  {
    "text": "messages a second so Nats can perform extremely well because of these core",
    "start": "512729",
    "end": "518430"
  },
  {
    "text": "values we maintain let's talk about simplicity we aim for ease of use from",
    "start": "518430",
    "end": "525990"
  },
  {
    "text": "installation through operation we have a single binary it's a very small docker image spins up very quickly no",
    "start": "525990",
    "end": "533279"
  },
  {
    "text": "external dependencies our protocol itself is simple it's tech space with",
    "start": "533279",
    "end": "538410"
  },
  {
    "text": "just a handful of verbs that are used we've got very easy to you parse JSON return for monitoring endpoints and in a",
    "start": "538410",
    "end": "546149"
  },
  {
    "text": "very straightforward configuration with",
    "start": "546149",
    "end": "551309"
  },
  {
    "text": "such little configuration clients only require a Ural and credentials and servers only really need well there's",
    "start": "551309",
    "end": "557939"
  },
  {
    "text": "one configuration file that you don't even have to use and a few command line parameters so clustering is automatic",
    "start": "557939",
    "end": "564829"
  },
  {
    "text": "and how this how this works with simplicity is that you configure just a couple seed servers and as you want to",
    "start": "564829",
    "end": "571800"
  },
  {
    "text": "scale up your cluster point them to these seed servers and everything talks",
    "start": "571800",
    "end": "577680"
  },
  {
    "text": "about everything else your cluster topology is shared and you don't have to",
    "start": "577680",
    "end": "583170"
  },
  {
    "text": "configure your cluster statically you can grow or shrink as you need to",
    "start": "583170",
    "end": "588740"
  },
  {
    "text": "supported clients are also notified of these cluster topology changes so that means you don't have to configure your",
    "start": "588740",
    "end": "594569"
  },
  {
    "text": "clients as to where every node and your NAT server cluster is you just need one or two they learn about the rest and",
    "start": "594569",
    "end": "601009"
  },
  {
    "text": "there's a very straightforward and simple API here's an example go program",
    "start": "601009",
    "end": "607639"
  },
  {
    "text": "you connect we're gonna be nice and defer close and then you publish you",
    "start": "607639",
    "end": "615660"
  },
  {
    "text": "publish a message you publish it to a very simple topic or subject and then",
    "start": "615660",
    "end": "621959"
  },
  {
    "text": "since Nats its payload agnostic I just pass a byte array of hello and then I",
    "start": "621959",
    "end": "627089"
  },
  {
    "text": "flushed just to make sure that the message gets out before the application ends and I want to check for errors",
    "start": "627089",
    "end": "632870"
  },
  {
    "text": "here's a Java subscriber that will receive and print that message i connect passing a girl and a port optionally I",
    "start": "632870",
    "end": "640379"
  },
  {
    "text": "could include user credentials in there or include user credentials in that connect call itself and then I subscribe",
    "start": "640379",
    "end": "646980"
  },
  {
    "text": "give it a lambda function or just prints out that it received a message and that subscribe waits in another thread and",
    "start": "646980",
    "end": "653550"
  },
  {
    "text": "you just sit and wait for messages that's how simple a simple math subscriber is let's talk a bit about",
    "start": "653550",
    "end": "660629"
  },
  {
    "text": "security nat secures distributed systems through TLS user token based",
    "start": "660629",
    "end": "666240"
  },
  {
    "text": "authentication and authorization you can update these at any time through a configuration",
    "start": "666240",
    "end": "672909"
  },
  {
    "text": "reload so you don't have to take the net server down to change these we have TLS",
    "start": "672909",
    "end": "678579"
  },
  {
    "text": "support so we support its it's simple configuration the NAT server we support",
    "start": "678579",
    "end": "684939"
  },
  {
    "text": "bi-directional TLS with client-side certificates certificate authorities are supported we default to the most secure",
    "start": "684939",
    "end": "691449"
  },
  {
    "text": "ciphers but you can override these and override curve preferences in case",
    "start": "691449",
    "end": "698589"
  },
  {
    "text": "you're connecting with older legacy systems credentials with the username or password or token are associated with",
    "start": "698589",
    "end": "705429"
  },
  {
    "text": "the connection so when you connect you pass your credentials and any credentials we store you can be crypt",
    "start": "705429",
    "end": "711699"
  },
  {
    "text": "them so that operators reading a configuration file or operators that may have seen how the NAT server was started",
    "start": "711699",
    "end": "717699"
  },
  {
    "text": "will never see the password we have authorization with permission based",
    "start": "717699",
    "end": "722859"
  },
  {
    "text": "roles all it boils down to is who can publish to what topics or subjects and",
    "start": "722859",
    "end": "729189"
  },
  {
    "text": "who can subscribe to what subjects and again we have configuration reload where you can update add or remove TLS",
    "start": "729189",
    "end": "735939"
  },
  {
    "text": "certificates add or remove credentials and grant or revoke permissions the",
    "start": "735939",
    "end": "740979"
  },
  {
    "text": "sanae dia team we're working on a new architecture and look for this in several months where no private keys or",
    "start": "740979",
    "end": "747849"
  },
  {
    "text": "passwords will be stored on the system and availability here's where Nats",
    "start": "747849",
    "end": "754719"
  },
  {
    "text": "really differentiates itself from other messaging systems so Nats prioritizes",
    "start": "754719",
    "end": "760059"
  },
  {
    "text": "the health and availability of the system as a whole rather than trying to service one particular client so we",
    "start": "760059",
    "end": "766689"
  },
  {
    "text": "think of it as like a dial tone Nats is always on anytime you go to connect it's always on but it achieves",
    "start": "766689",
    "end": "772959"
  },
  {
    "text": "this through what I've called selfish optimization so you have a badly",
    "start": "772959",
    "end": "778419"
  },
  {
    "text": "behaving client a slow consumer who's not keeping up the server needs resources to to handle that consumer",
    "start": "778419",
    "end": "785229"
  },
  {
    "text": "right well what Nats does is it cuts the consumer off in the interest of keeping",
    "start": "785229",
    "end": "790479"
  },
  {
    "text": "the system as a whole resilient other badly behaving clients if you send garbage Nets cuts you off",
    "start": "790479",
    "end": "797079"
  },
  {
    "text": "right away we also have full mess string of the GNAT servers and what this",
    "start": "797079",
    "end": "803420"
  },
  {
    "text": "means is that no matter which server Goes Down which pod you kill there's",
    "start": "803420",
    "end": "809959"
  },
  {
    "text": "going to be other ones that know about the system as a whole and it's self-healing if you bring up the pod",
    "start": "809959",
    "end": "817070"
  },
  {
    "text": "that you took down it'll automatically reconnect to the cluster clients also",
    "start": "817070",
    "end": "822519"
  },
  {
    "text": "automatically reconnect to the server's they know in the cluster so I spoke",
    "start": "822519",
    "end": "831560"
  },
  {
    "text": "earlier about Auto discovery so the resizing of a server cluster can be",
    "start": "831560",
    "end": "836660"
  },
  {
    "text": "facilitated through Auto discovery you like I said you start with a few seed servers and then add servers topology",
    "start": "836660",
    "end": "843920"
  },
  {
    "text": "changes are propagated throughout the cluster allowing servers to join the full mesh supported clients are also",
    "start": "843920",
    "end": "851060"
  },
  {
    "text": "aware of topology changes internal knowledge of the cluster topologies propagated to all the clients and you",
    "start": "851060",
    "end": "858260"
  },
  {
    "text": "they can automatically failover to new servers in the cluster so that means as you add new servers to the cluster",
    "start": "858260",
    "end": "864320"
  },
  {
    "text": "clients can actually connect to new servers they never originally knew about this is huge in cloud computing because",
    "start": "864320",
    "end": "871490"
  },
  {
    "text": "as you all know pods come up and go down images come up and go down so this",
    "start": "871490",
    "end": "877850"
  },
  {
    "text": "results in no configuration changes for clients when the cluster or topology changes some of our users really like",
    "start": "877850",
    "end": "887300"
  },
  {
    "text": "the resilience of Nats you know hundreds of days of uptime simplicity is a",
    "start": "887300",
    "end": "894160"
  },
  {
    "text": "prerequisite for reliability and we found this to be true by keeping things really simple",
    "start": "894160",
    "end": "900860"
  },
  {
    "text": "we found that we can build large scalable systems so let's talk a bit",
    "start": "900860",
    "end": "906649"
  },
  {
    "text": "about delivery modes how badly do I need a message and so first what are delivery",
    "start": "906649",
    "end": "912410"
  },
  {
    "text": "modes delivery mode is just a guarantee of the message being delivered so at",
    "start": "912410",
    "end": "917630"
  },
  {
    "text": "most once is really it's no guarantee of delivery messages can be lost it's up to your application to realize the message",
    "start": "917630",
    "end": "924290"
  },
  {
    "text": "can be lost it sounds really fragile but it's not that's how the internet works today just",
    "start": "924290",
    "end": "930680"
  },
  {
    "text": "think about your HTTP requests you don't know if they're going to get there you timeout you we try now there are cases where you",
    "start": "930680",
    "end": "937850"
  },
  {
    "text": "need at least once messaging so a message will always be delivered but in some cases it can be delivered more than",
    "start": "937850",
    "end": "944600"
  },
  {
    "text": "once these cases are pretty rare or you know typically you'll have both parts",
    "start": "944600",
    "end": "950990"
  },
  {
    "text": "the client and the server going on at the same time come back up you might get the same message redeliver but nowadays",
    "start": "950990",
    "end": "958760"
  },
  {
    "text": "most people are designing their applications to be idempotent so hopefully they'll handle this case and",
    "start": "958760",
    "end": "964910"
  },
  {
    "text": "then there's exactly once which I argues unnecessary especially with the advent",
    "start": "964910",
    "end": "971360"
  },
  {
    "text": "of the 12 factor app but it's also very very complex and this complexity really",
    "start": "971360",
    "end": "978530"
  },
  {
    "text": "slows things down so cornets provides at",
    "start": "978530",
    "end": "984380"
  },
  {
    "text": "most once delivery guarantees and this is your your internet quality of",
    "start": "984380",
    "end": "989840"
  },
  {
    "text": "delivery Nats streaming provides at least once delivery guarantees so you'll get the",
    "start": "989840",
    "end": "995600"
  },
  {
    "text": "same you'll get a message guaranteed to be delivered but you might get it more than once Nats streaming so what is nat",
    "start": "995600",
    "end": "1003010"
  },
  {
    "text": "streaming that streaming is a data system powered by Nats so rather than build this into our core Nats",
    "start": "1003010",
    "end": "1010060"
  },
  {
    "text": "infrastructure we've layered it on top so some of the features include at least once delivery you can replay by time or",
    "start": "1010060",
    "end": "1017530"
  },
  {
    "text": "sequence number so you can say give me the last hours worth of messages on this on this subject or give me every message",
    "start": "1017530",
    "end": "1024040"
  },
  {
    "text": "since sequence number 500 there's last value caching you can use it when you",
    "start": "1024040",
    "end": "1029890"
  },
  {
    "text": "come up as your application give me the last value give me the last message that was received for initialization you have the",
    "start": "1029890",
    "end": "1037120"
  },
  {
    "text": "concept of durable subscribers where you'll continue to get the stream of",
    "start": "1037120",
    "end": "1042819"
  },
  {
    "text": "messages and if communication is interrupted anyway your client goes down",
    "start": "1042820",
    "end": "1047980"
  },
  {
    "text": "loses connectivity with the server when it comes back up it'll pick up exactly where it left off you've got rate",
    "start": "1047980",
    "end": "1055330"
  },
  {
    "text": "matching per subscriber I mentioned slow consumers with core Nats with NAT",
    "start": "1055330",
    "end": "1060550"
  },
  {
    "text": "streaming it feeds data it sends messages to consumers at the rate they",
    "start": "1060550",
    "end": "1066160"
  },
  {
    "text": "can handle so you might have one can sumer receiving messages at 5,000",
    "start": "1066160",
    "end": "1071590"
  },
  {
    "text": "messages a second and another one that can process five messages a second Nats will rate limit these for you we've got",
    "start": "1071590",
    "end": "1079750"
  },
  {
    "text": "memory file or database storage and high availability through fault tolerant or clustered configurations this clustering",
    "start": "1079750",
    "end": "1086710"
  },
  {
    "text": "is a little bit different than core Nats it sits on top of cornets and actually uses raft and then we can scale through",
    "start": "1086710",
    "end": "1092590"
  },
  {
    "text": "partitioning where some NAT streaming servers might handle a subset of subjects and other NAT streaming servers",
    "start": "1092590",
    "end": "1099520"
  },
  {
    "text": "might handle a different subset of subjects how do we monitor Nats well",
    "start": "1099520",
    "end": "1105940"
  },
  {
    "text": "each server is monitoring it and pendant Lee and I go back to the very very simple case we make things simple you",
    "start": "1105940",
    "end": "1113410"
  },
  {
    "text": "simply enable a monitoring port and then pull an endpoint for metrics we have a",
    "start": "1113410",
    "end": "1118480"
  },
  {
    "text": "variety of metrics you can pull and then the simplicity allows you to build more complex tooling on top monitoring",
    "start": "1118480",
    "end": "1125740"
  },
  {
    "text": "information is JSON formatted very easy to parse so some of the tooling you can",
    "start": "1125740",
    "end": "1133150"
  },
  {
    "text": "build on top and wally here actually wrote nat stop which is a great",
    "start": "1133150",
    "end": "1138580"
  },
  {
    "text": "development tool to look at the server and see what's going on if you've used top they should look you",
    "start": "1138580",
    "end": "1143679"
  },
  {
    "text": "know somewhat familiar but for the enterprise we've written a gnat's",
    "start": "1143679",
    "end": "1148990"
  },
  {
    "text": "prometheus exporter that pulls metrics from the nat server let's Prometheus",
    "start": "1148990",
    "end": "1154120"
  },
  {
    "text": "aggregate it and then you know we we use Griffin as a dashboard use your favorite dashboard and you can view Nats metrics",
    "start": "1154120",
    "end": "1161530"
  },
  {
    "text": "like this what's coming up in the future",
    "start": "1161530",
    "end": "1166929"
  },
  {
    "text": "of Nats will have extended client support for n keys which would be a utility for public key signatures",
    "start": "1166929",
    "end": "1173590"
  },
  {
    "text": "utilizing edie 255 one nine will have cloud provider integrations events that",
    "start": "1173590",
    "end": "1180040"
  },
  {
    "text": "might happen in Google or Amazon will surface in two Nats and let you consume those events we've discussed extensible",
    "start": "1180040",
    "end": "1188530"
  },
  {
    "text": "security a plug-in security plug-in so you can plug in your own custom or other",
    "start": "1188530",
    "end": "1193870"
  },
  {
    "text": "common authentication and authorization systems we're looking at features to",
    "start": "1193870",
    "end": "1199540"
  },
  {
    "text": "connect and bridge clusters and at server to create a gnat's deployment at a",
    "start": "1199540",
    "end": "1204900"
  },
  {
    "text": "global scale and this is big I know I know it's big but we want to be able to provide connectivity between millions",
    "start": "1204900",
    "end": "1210960"
  },
  {
    "text": "and you gotta aim high billions of clients think clusters upon clusters",
    "start": "1210960",
    "end": "1216630"
  },
  {
    "text": "upon clusters of NAT servers that are able to communicate and then we're going",
    "start": "1216630",
    "end": "1222120"
  },
  {
    "text": "to continue work on integrations with other CN CF projects including more support for Prometheus and kubernetes if",
    "start": "1222120",
    "end": "1229700"
  },
  {
    "text": "you want to contribute we welcome contributions of all kinds some ways include highlighting your natchez or",
    "start": "1229700",
    "end": "1236370"
  },
  {
    "text": "insights and the nach nats blog you can fix a bug you can add fix or clarify",
    "start": "1236370",
    "end": "1241740"
  },
  {
    "text": "documentation it's sometimes embarrassing the number of typos PRS we get you can propose or add a feature",
    "start": "1241740",
    "end": "1250220"
  },
  {
    "text": "and/or just present your own Nats project at meetups we get quite a few of those so now let me go to it I'll do a",
    "start": "1250220",
    "end": "1259050"
  },
  {
    "text": "quick demo and talked about how simple Nats is I'll just show you what the",
    "start": "1259050",
    "end": "1265770"
  },
  {
    "text": "protocol looks like I call this the human Nats client so I'm going to start",
    "start": "1265770",
    "end": "1271890"
  },
  {
    "text": "on that server here I started it with - D - V which stands for debug verbose",
    "start": "1271890",
    "end": "1277320"
  },
  {
    "text": "it's going to print out absolutely everything and instead of a client I've written I'm gonna use telnet I've",
    "start": "1277320",
    "end": "1289080"
  },
  {
    "text": "connected so I've connected the NAT server the NAT servers were turned some",
    "start": "1289080",
    "end": "1294150"
  },
  {
    "text": "information back with like the server ID some authorization information whether",
    "start": "1294150",
    "end": "1300510"
  },
  {
    "text": "or not I need to use TLS the max payload things I can use in my client to make my",
    "start": "1300510",
    "end": "1307500"
  },
  {
    "text": "client more resilient and then I'm also going to tell that here",
    "start": "1307500",
    "end": "1313430"
  },
  {
    "text": "so now I've got two clients this one's going to subscribe so what I did is I",
    "start": "1317559",
    "end": "1330980"
  },
  {
    "text": "subscribed to a subject called Coupland Nats and I gave it an ID of 1 the IDS",
    "start": "1330980",
    "end": "1337490"
  },
  {
    "text": "the ID is required because you might want to have multiple subscribers on the same subject within an application and",
    "start": "1337490",
    "end": "1343490"
  },
  {
    "text": "now what I'm going to do down here is gonna publish to cube con Nats and I'm",
    "start": "1343490",
    "end": "1352009"
  },
  {
    "text": "gonna say I'm gonna publish 5 bytes",
    "start": "1352009",
    "end": "1355480"
  },
  {
    "text": "there we go so here's this is how simple the Nats protocol is and human nets client Wally",
    "start": "1357220",
    "end": "1368450"
  },
  {
    "text": "will be giving the deep dive where I'll have much more in-depth demos a little",
    "start": "1368450",
    "end": "1374960"
  },
  {
    "text": "bit later on but at this point I'd like to open it up for any questions yes so I",
    "start": "1374960",
    "end": "1388730"
  },
  {
    "text": "have three questions ok there first the first one is when you said the server",
    "start": "1388730",
    "end": "1394700"
  },
  {
    "text": "was distributing the load between the subscribers which already algorithm is",
    "start": "1394700",
    "end": "1400220"
  },
  {
    "text": "using is like doing a round robin or so with cornets it's random okay with with",
    "start": "1400220",
    "end": "1406970"
  },
  {
    "text": "net streaming it's actually the client that has the least number of outstanding",
    "start": "1406970",
    "end": "1413690"
  },
  {
    "text": "messages so it's the the client that's least busy is the one that gets the new",
    "start": "1413690",
    "end": "1419029"
  },
  {
    "text": "message when you said I'm 18 million messages of which size is the payload in that case",
    "start": "1419029",
    "end": "1426860"
  },
  {
    "text": "for example I think that was 128 bytes I don't have to look good but the last",
    "start": "1426860",
    "end": "1434330"
  },
  {
    "text": "question sorry free no one's related like is it compatible",
    "start": "1434330",
    "end": "1439429"
  },
  {
    "text": "with I saw in the payload you put bytes so is it compatible with any data",
    "start": "1439429",
    "end": "1444950"
  },
  {
    "text": "serialization formats like a bro protocol for any anything you want to put in",
    "start": "1444950",
    "end": "1451820"
  },
  {
    "text": "there and in fact net streaming uses protobuf okay so what we do not",
    "start": "1451820",
    "end": "1457880"
  },
  {
    "text": "streaming is we convert our streaming data into protobufs and then use core Nats basic nets to send it but Nance's",
    "start": "1457880",
    "end": "1465650"
  },
  {
    "text": "payload agnostic anything you want to send it perfect good thank you",
    "start": "1465650",
    "end": "1471940"
  },
  {
    "text": "I have follow a few the conference regarding service mesh before coming",
    "start": "1476540",
    "end": "1483650"
  },
  {
    "text": "here I'm kind of surprised to see middleware still how do you position this compared",
    "start": "1483650",
    "end": "1491900"
  },
  {
    "text": "to a service mesh because for me the service mesh was to take this kind of middle way to cut it into what they call",
    "start": "1491900",
    "end": "1498170"
  },
  {
    "text": "proxy and to put as a sidecar next to each and every piece of software which",
    "start": "1498170",
    "end": "1504080"
  },
  {
    "text": "makes the whole system self provisioning instead of Auto provisioning that's a",
    "start": "1504080",
    "end": "1514340"
  },
  {
    "text": "good question yeah so we do have some",
    "start": "1514340",
    "end": "1519980"
  },
  {
    "text": "features and Nats that we haven't talked about that we can go into more depth as",
    "start": "1519980",
    "end": "1525740"
  },
  {
    "text": "far as message patterns and stuff that kind of might fall outside of the",
    "start": "1525740",
    "end": "1530960"
  },
  {
    "text": "service mesh I agree there is some overlap there but Nats is almost more",
    "start": "1530960",
    "end": "1538040"
  },
  {
    "text": "specialized if you have different patterns you want to use that don't fall into service service match you can use",
    "start": "1538040",
    "end": "1543800"
  },
  {
    "text": "it okay and second question and the episode regarding the streaming parts",
    "start": "1543800",
    "end": "1549860"
  },
  {
    "text": "the the demonstration I have seen is extremely similar to what Kefka is offering for instance how do you",
    "start": "1549860",
    "end": "1556280"
  },
  {
    "text": "differentiate nuts in the streaming part and an ik FK cluster well first first",
    "start": "1556280",
    "end": "1561890"
  },
  {
    "text": "let me say they're very similar in that they are log based streaming products so",
    "start": "1561890",
    "end": "1567290"
  },
  {
    "text": "so they're similar they're a big differentiator is the net streaming",
    "start": "1567290",
    "end": "1572990"
  },
  {
    "text": "clients don't have to keep track of an offset so that is actually kept inside",
    "start": "1572990",
    "end": "1578360"
  },
  {
    "text": "the server and that means you can make the clients very very simple operations",
    "start": "1578360",
    "end": "1583400"
  },
  {
    "text": "don't to worry about where a client left off they don't have to worry about losing that offset Nats takes care of that for",
    "start": "1583400",
    "end": "1589760"
  },
  {
    "text": "you and are yelling the replaying then do you have feature to to replay messages we do we do server side yeah I",
    "start": "1589760",
    "end": "1598910"
  },
  {
    "text": "mean what you do is you create a subscriber and it's created a new subscriber saying I want to receive messages and by the way start me at the",
    "start": "1598910",
    "end": "1606289"
  },
  {
    "text": "last an hour ago or start me yesterday at 3 p.m. or just give me the last",
    "start": "1606289",
    "end": "1612080"
  },
  {
    "text": "message thank you sure hi I've got a",
    "start": "1612080",
    "end": "1618470"
  },
  {
    "text": "quick question if you have a setup where you have multiple methis with high",
    "start": "1618470",
    "end": "1624679"
  },
  {
    "text": "availability enabled or some set up and what happens so is there is there some resiliency in",
    "start": "1624679",
    "end": "1632120"
  },
  {
    "text": "memory or do you use the multiple service to distribute the load in a way that one what if one goes down messages",
    "start": "1632120",
    "end": "1638720"
  },
  {
    "text": "or losts mess with core Nats messages are lost and that's because we only give",
    "start": "1638720",
    "end": "1645440"
  },
  {
    "text": "the at most once delivery guarantee and what it makes our algorithm to keep",
    "start": "1645440",
    "end": "1653390"
  },
  {
    "text": "state within the servers very very simple and we don't actually have to keep exact state in the servers because",
    "start": "1653390",
    "end": "1660350"
  },
  {
    "text": "we don't give that guarantee in that streaming we do have that at least once",
    "start": "1660350",
    "end": "1666440"
  },
  {
    "text": "guarantee so nat streaming uses a different algorithm on top of that that uses raft okay thanks",
    "start": "1666440",
    "end": "1675640"
  },
  {
    "text": "the very short question Kafka was already mentioned we're using RabbitMQ",
    "start": "1678190",
    "end": "1683300"
  },
  {
    "text": "right now so not streaming client would be the solution can you give good reasons to switch to Nats",
    "start": "1683300",
    "end": "1690100"
  },
  {
    "text": "don't make me compare at Nats - rabbit",
    "start": "1690100",
    "end": "1695380"
  },
  {
    "text": "rabbit rabbit is rabbits more of like a Swiss Army knife right it does a whole",
    "start": "1696580",
    "end": "1703850"
  },
  {
    "text": "lot of things and Nats is is very specialized Nance is specialized and",
    "start": "1703850",
    "end": "1709520"
  },
  {
    "text": "works well you know in the cloud works very well for deployments that need",
    "start": "1709520",
    "end": "1717050"
  },
  {
    "text": "extremely high performance so what I would invite you to do is compare the",
    "start": "1717050",
    "end": "1723800"
  },
  {
    "text": "both and then let us know what you think please write a blog question ok is there",
    "start": "1723800",
    "end": "1732860"
  },
  {
    "text": "some way maybe with not streaming that you can enforce ordering guarantees if you want well actually we do have",
    "start": "1732860",
    "end": "1739850"
  },
  {
    "text": "ordering guarantees so on a single connection or source ordered guarantee",
    "start": "1739850",
    "end": "1744950"
  },
  {
    "text": "so that means you get the same order that messages were published and that's in core Nats as well as NAT streaming",
    "start": "1744950",
    "end": "1753190"
  },
  {
    "text": "okay so we've consumed the consumer will get always get the messages in the order in which they are produced yes yeah",
    "start": "1753190",
    "end": "1760400"
  },
  {
    "text": "unless you lose connectivity or something like that then ordering guarantee is guaranteed and NAT",
    "start": "1760400",
    "end": "1765680"
  },
  {
    "text": "streaming but in core Nats it's up to your application then right if he might",
    "start": "1765680",
    "end": "1771380"
  },
  {
    "text": "publish a message and not realize it wasn't delivered and published another one so it's at that point it's up to",
    "start": "1771380",
    "end": "1777260"
  },
  {
    "text": "your application to guarantee ordering unless you're using that streaming which will guarantee order one more question",
    "start": "1777260",
    "end": "1782980"
  },
  {
    "text": "what is the language support for nuts for different languages I don't for example Kafka has awful support for PHP",
    "start": "1782980",
    "end": "1789680"
  },
  {
    "text": "and Python we have PHP Python node c-sharp Java golang rust Ruby Weaver",
    "start": "1789680",
    "end": "1804110"
  },
  {
    "text": "lling right yeah I said I think I said c-sharp we have a lot",
    "start": "1804110",
    "end": "1812110"
  },
  {
    "text": "no did I mention note thanks I have a",
    "start": "1812110",
    "end": "1822110"
  },
  {
    "text": "pub/sub case and I wanted to ask about Altaf occasionally our ization so you",
    "start": "1822110",
    "end": "1828950"
  },
  {
    "text": "said to connect you need to identification some token and password or username a password doesn't matter and you said to reload credentials you",
    "start": "1828950",
    "end": "1836419"
  },
  {
    "text": "need to reload some configs that means the server knows - of course the credentials is there API to manage those",
    "start": "1836419",
    "end": "1842809"
  },
  {
    "text": "credentials on a server site no there's no API you have to either write",
    "start": "1842809",
    "end": "1848149"
  },
  {
    "text": "something to modify the file or just modify the file yourself and then",
    "start": "1848149",
    "end": "1854860"
  },
  {
    "text": "trigger a reload and that's actually why in the future we have the extensible authority would be to allow users to",
    "start": "1854860",
    "end": "1861860"
  },
  {
    "text": "write their own way to do that real time yeah this was my third question so this",
    "start": "1861860",
    "end": "1867470"
  },
  {
    "text": "extensible plugin for the identification is really nice and the authorizations",
    "start": "1867470",
    "end": "1873019"
  },
  {
    "text": "what the users can do after they pop us up is there any pattern matching like if",
    "start": "1873019",
    "end": "1878059"
  },
  {
    "text": "the user a connects he can only publish to queue called a or something like that there is we have what's called wild",
    "start": "1878059",
    "end": "1885950"
  },
  {
    "text": "carding yes and yeah and that that would probably take quite a while to explain but basically if you remember I did cube",
    "start": "1885950",
    "end": "1893630"
  },
  {
    "text": "con dot Nats right you can suck each one of those we consider a token you can",
    "start": "1893630",
    "end": "1899090"
  },
  {
    "text": "substitute one of those tokens with either a star which means anything matches that token or greater than which",
    "start": "1899090",
    "end": "1906289"
  },
  {
    "text": "means anything beyond that token and it's it's a simple pattern matching but",
    "start": "1906289",
    "end": "1912289"
  },
  {
    "text": "it will work for if I want a certain subset of subjects for users to be authorized on you can use wild carding",
    "start": "1912289",
    "end": "1919669"
  },
  {
    "text": "to do that yeah thank you sure I think there was someone in the back corner that's been I'm sorry",
    "start": "1919669",
    "end": "1930030"
  },
  {
    "text": "Oh headers no no header support that's",
    "start": "1930030",
    "end": "1938940"
  },
  {
    "text": "part of the simplicity part of Nats I can share you know what what you can do",
    "start": "1938940",
    "end": "1944430"
  },
  {
    "text": "is look at Nats streaming and what we did for that was we actually needed headers for NAT streaming so we use",
    "start": "1944430",
    "end": "1951390"
  },
  {
    "text": "protobufs on top of that to almost build a custom protocol on top of nets does",
    "start": "1951390",
    "end": "1960810"
  },
  {
    "text": "that make sense okay small question do",
    "start": "1960810",
    "end": "1970680"
  },
  {
    "text": "have not streaming replication on mirroring when you have 20 clustered deployment I'm so sorry I couldn't hear",
    "start": "1970680",
    "end": "1977850"
  },
  {
    "text": "you do you have a replication solution for not streaming on mirroring oh yes",
    "start": "1977850",
    "end": "1985410"
  },
  {
    "text": "well somebody has contributed a mirroring solution for NAT streaming so",
    "start": "1985410",
    "end": "1990420"
  },
  {
    "text": "you know I imagine something along the lines of two geographically separated sites and you want to create a mirror I",
    "start": "1990420",
    "end": "1997020"
  },
  {
    "text": "actually think that was RI paneer right who did the NAT streaming mirror and we",
    "start": "1997020",
    "end": "2002810"
  },
  {
    "text": "actually have a link to that on our website",
    "start": "2002810",
    "end": "2006190"
  },
  {
    "text": "just click on dr i guess and archiving of of the streamed logs i what's the",
    "start": "2013500",
    "end": "2023409"
  },
  {
    "text": "story there so so if i want to say after 30 days",
    "start": "2023409",
    "end": "2028510"
  },
  {
    "text": "archived somewhere and then potentially at some point restore so i can replay",
    "start": "2028510",
    "end": "2033940"
  },
  {
    "text": "from times error is there any way to kind of accommodate that you can do that",
    "start": "2033940",
    "end": "2039399"
  },
  {
    "text": "so what happens is exactly that after a period of time or certain size of",
    "start": "2039399",
    "end": "2044740"
  },
  {
    "text": "messages that have accumulated the nat streaming server will trigger either a",
    "start": "2044740",
    "end": "2050908"
  },
  {
    "text": "particular either they'll either partition the file and take about a quarter of it off and archive it for you",
    "start": "2050909",
    "end": "2056710"
  },
  {
    "text": "or it can trigger a script where you can do whatever you want with that chunk of file and move it to some long-term",
    "start": "2056710",
    "end": "2062648"
  },
  {
    "text": "storage so then the streaming server will keep operating you don't have any manual intervention you necessarily need",
    "start": "2062649",
    "end": "2068320"
  },
  {
    "text": "to do and does that happen by topic or for the whole thing that's for the whole",
    "start": "2068320",
    "end": "2075580"
  },
  {
    "text": "thing",
    "start": "2075580",
    "end": "2077820"
  },
  {
    "text": "okay any more questions um the storage",
    "start": "2088350",
    "end": "2096520"
  },
  {
    "text": "architecture you've got a choice of two options secretive file and can you add more detail behind that what sort of",
    "start": "2096520",
    "end": "2104830"
  },
  {
    "text": "detail were you so is there a sharding architecture are you replicating to two",
    "start": "2104830",
    "end": "2110560"
  },
  {
    "text": "different pods at the same time how does the resilience work okay so we've got a",
    "start": "2110560",
    "end": "2117160"
  },
  {
    "text": "couple different stories there one is we've got a fault-tolerant pair you can set up one is live one is warm and live",
    "start": "2117160",
    "end": "2125440"
  },
  {
    "text": "one goes down the warm takes over it's your responsibility to make sure that that data store your persistent value",
    "start": "2125440",
    "end": "2131290"
  },
  {
    "text": "and claim there is backed up we have another we've got full clustering where",
    "start": "2131290",
    "end": "2137940"
  },
  {
    "text": "and that uses raft where you have independent file so let's say you had three of them you might have three",
    "start": "2137940",
    "end": "2145090"
  },
  {
    "text": "different persistent volume claims and they would all maintain consistency through the raft protocol over net",
    "start": "2145090",
    "end": "2151360"
  },
  {
    "text": "streaming sure we good oh okay all right",
    "start": "2151360",
    "end": "2163380"
  },
  {
    "text": "do we have a concept of consumer group like in Kafka can you can you go into a",
    "start": "2167940",
    "end": "2174330"
  },
  {
    "text": "bit more detail okay okay so yeah so it",
    "start": "2174330",
    "end": "2197280"
  },
  {
    "text": "sounds like the load balancer we have is very similar to what you're describing thank you",
    "start": "2197280",
    "end": "2204410"
  },
  {
    "text": "not at this time we were planning maybe sometime early next year but yeah we",
    "start": "2215310",
    "end": "2222660"
  },
  {
    "text": "don't have a timeline on that quite yet",
    "start": "2222660",
    "end": "2225859"
  },
  {
    "text": "yeah the so the question was the server was very verbose about what it was",
    "start": "2239240",
    "end": "2246000"
  },
  {
    "text": "displaying yes yes that's because it was in verbose mode if I turned it off you",
    "start": "2246000",
    "end": "2251430"
  },
  {
    "text": "wouldn't have seen anything happening",
    "start": "2251430",
    "end": "2254839"
  },
  {
    "text": "all right well come find us we have t-shirts and swag please get your",
    "start": "2258110",
    "end": "2265080"
  },
  {
    "text": "sticker and thank you very much",
    "start": "2265080",
    "end": "2271430"
  }
]