[
  {
    "text": "hello everyone my name is Vijay Samuel",
    "start": "60",
    "end": "2700"
  },
  {
    "text": "and I'm the architect of the observatory",
    "start": "2700",
    "end": "5580"
  },
  {
    "text": "platform at eBay",
    "start": "5580",
    "end": "7680"
  },
  {
    "text": "hello I'm Nick bordash and I'm the lead",
    "start": "7680",
    "end": "9660"
  },
  {
    "text": "engineer of the observability platform",
    "start": "9660",
    "end": "11280"
  },
  {
    "text": "eBay",
    "start": "11280",
    "end": "12300"
  },
  {
    "text": "uh we're gonna spend the next few",
    "start": "12300",
    "end": "15240"
  },
  {
    "text": "minutes uh talking about how we use",
    "start": "15240",
    "end": "18480"
  },
  {
    "text": "continuous profiling in our production",
    "start": "18480",
    "end": "20820"
  },
  {
    "text": "environments to monitor our",
    "start": "20820",
    "end": "23400"
  },
  {
    "text": "observability platform which are mostly",
    "start": "23400",
    "end": "26160"
  },
  {
    "text": "comprised of kubernetes deployments",
    "start": "26160",
    "end": "30300"
  },
  {
    "text": "that said uh let's spend a few minutes",
    "start": "30300",
    "end": "33360"
  },
  {
    "text": "knowing what the pillars of",
    "start": "33360",
    "end": "35700"
  },
  {
    "text": "observability are what is continuous",
    "start": "35700",
    "end": "39300"
  },
  {
    "text": "profiling specifically in that what is",
    "start": "39300",
    "end": "42840"
  },
  {
    "text": "the architecture that we use today to do",
    "start": "42840",
    "end": "44940"
  },
  {
    "text": "continuous profiling some examples on",
    "start": "44940",
    "end": "47899"
  },
  {
    "text": "how we are benefiting from the usage of",
    "start": "47899",
    "end": "52320"
  },
  {
    "text": "continuous profiling with real real",
    "start": "52320",
    "end": "53700"
  },
  {
    "text": "world optimizations that we have done",
    "start": "53700",
    "end": "56520"
  },
  {
    "text": "and the savings that we see in that",
    "start": "56520",
    "end": "58100"
  },
  {
    "text": "we'll do a quick demo and then talk",
    "start": "58100",
    "end": "61559"
  },
  {
    "text": "about",
    "start": "61559",
    "end": "62359"
  },
  {
    "text": "the potential that we see with",
    "start": "62359",
    "end": "64559"
  },
  {
    "text": "continuous profiling given that it's a",
    "start": "64559",
    "end": "66659"
  },
  {
    "text": "very",
    "start": "66659",
    "end": "67700"
  },
  {
    "text": "new space",
    "start": "67700",
    "end": "69860"
  },
  {
    "text": "in in observability and how it can",
    "start": "69860",
    "end": "73260"
  },
  {
    "text": "evolve in the long run",
    "start": "73260",
    "end": "76260"
  },
  {
    "text": "so that's it uh we are used to talking",
    "start": "76260",
    "end": "80580"
  },
  {
    "text": "about the three pillars of observability",
    "start": "80580",
    "end": "82700"
  },
  {
    "text": "uh which are logs logs can be uh",
    "start": "82700",
    "end": "86939"
  },
  {
    "text": "structured or unstructured depending on",
    "start": "86939",
    "end": "89280"
  },
  {
    "text": "nomenclature you could even split this",
    "start": "89280",
    "end": "91320"
  },
  {
    "text": "pillar into two pillars uh between logs",
    "start": "91320",
    "end": "94320"
  },
  {
    "text": "and events but typically they are",
    "start": "94320",
    "end": "98060"
  },
  {
    "text": "strings that are generated by loggers",
    "start": "98060",
    "end": "103380"
  },
  {
    "text": "like slf4j or the zap we are written",
    "start": "103380",
    "end": "106799"
  },
  {
    "text": "into a file or written out through gcp",
    "start": "106799",
    "end": "111000"
  },
  {
    "text": "grpc or http",
    "start": "111000",
    "end": "113579"
  },
  {
    "text": "we have metrics which is uh continuous",
    "start": "113579",
    "end": "117720"
  },
  {
    "text": "time series data any measure that you",
    "start": "117720",
    "end": "120659"
  },
  {
    "text": "have in the system that you want to emit",
    "start": "120659",
    "end": "123000"
  },
  {
    "text": "periodically or expose you typically go",
    "start": "123000",
    "end": "126479"
  },
  {
    "text": "for metrics some common examples are",
    "start": "126479",
    "end": "129479"
  },
  {
    "text": "CPU usage the number of requests that",
    "start": "129479",
    "end": "132720"
  },
  {
    "text": "you're encountering or the latency",
    "start": "132720",
    "end": "135840"
  },
  {
    "text": "profile that you see for a for a for a",
    "start": "135840",
    "end": "138660"
  },
  {
    "text": "given request",
    "start": "138660",
    "end": "140580"
  },
  {
    "text": "uh tracing allows you to have a record",
    "start": "140580",
    "end": "145560"
  },
  {
    "text": "of the request execution through",
    "start": "145560",
    "end": "148319"
  },
  {
    "text": "massively distributed systems so",
    "start": "148319",
    "end": "151020"
  },
  {
    "text": "um if you have a user interface that's",
    "start": "151020",
    "end": "153180"
  },
  {
    "text": "making a bunch of API calls",
    "start": "153180",
    "end": "156780"
  },
  {
    "text": "um how the request flow navigates",
    "start": "156780",
    "end": "158940"
  },
  {
    "text": "through all the micro Services you",
    "start": "158940",
    "end": "160800"
  },
  {
    "text": "should be able to elegantly see if you",
    "start": "160800",
    "end": "163379"
  },
  {
    "text": "are using distributed spacing across all",
    "start": "163379",
    "end": "166560"
  },
  {
    "text": "the micro services that are of Interest",
    "start": "166560",
    "end": "169200"
  },
  {
    "text": "and the final one which is the new kid",
    "start": "169200",
    "end": "172680"
  },
  {
    "text": "on the Block is basically profiles uh",
    "start": "172680",
    "end": "176160"
  },
  {
    "text": "profiles go all the way down to the code",
    "start": "176160",
    "end": "178500"
  },
  {
    "text": "level consumption numbers so you can see",
    "start": "178500",
    "end": "181319"
  },
  {
    "text": "how much CPU you are spending or how",
    "start": "181319",
    "end": "184319"
  },
  {
    "text": "much memory is being used at each and",
    "start": "184319",
    "end": "186840"
  },
  {
    "text": "every uh",
    "start": "186840",
    "end": "188599"
  },
  {
    "text": "method level and",
    "start": "188599",
    "end": "192140"
  },
  {
    "text": "uh it basically gives you an idea of how",
    "start": "192140",
    "end": "195540"
  },
  {
    "text": "the program behaves over a period of",
    "start": "195540",
    "end": "197700"
  },
  {
    "text": "time",
    "start": "197700",
    "end": "198620"
  },
  {
    "text": "across various functions that are",
    "start": "198620",
    "end": "201780"
  },
  {
    "text": "involved",
    "start": "201780",
    "end": "203459"
  },
  {
    "text": "so what is your profile",
    "start": "203459",
    "end": "205379"
  },
  {
    "text": "uh profiles provide performance metrics",
    "start": "205379",
    "end": "209459"
  },
  {
    "text": "at the most granular level possible",
    "start": "209459",
    "end": "211879"
  },
  {
    "text": "historically they have been viewed as uh",
    "start": "211879",
    "end": "214920"
  },
  {
    "text": "very expensive because uh what are",
    "start": "214920",
    "end": "218519"
  },
  {
    "text": "called Trace level uh profilers they",
    "start": "218519",
    "end": "221760"
  },
  {
    "text": "they collect very granular information",
    "start": "221760",
    "end": "223140"
  },
  {
    "text": "and the way that they collect them is uh",
    "start": "223140",
    "end": "225900"
  },
  {
    "text": "is typically very expensive so you",
    "start": "225900",
    "end": "227940"
  },
  {
    "text": "cannot keep running them all the time",
    "start": "227940",
    "end": "230099"
  },
  {
    "text": "because the application would degrade in",
    "start": "230099",
    "end": "232739"
  },
  {
    "text": "performance substantially",
    "start": "232739",
    "end": "235040"
  },
  {
    "text": "uh and there are various types of",
    "start": "235040",
    "end": "238019"
  },
  {
    "text": "profiles that you can take you can do a",
    "start": "238019",
    "end": "240480"
  },
  {
    "text": "CPU profile or a heap profile mutex IO",
    "start": "240480",
    "end": "244019"
  },
  {
    "text": "GPU and then there may be",
    "start": "244019",
    "end": "246720"
  },
  {
    "text": "a different kind of profiles that are",
    "start": "246720",
    "end": "249360"
  },
  {
    "text": "very specific to a language so uh go is",
    "start": "249360",
    "end": "252540"
  },
  {
    "text": "a good example for that where you have a",
    "start": "252540",
    "end": "254220"
  },
  {
    "text": "go routine profile as well with which",
    "start": "254220",
    "end": "257280"
  },
  {
    "text": "you can analyze all the core routines",
    "start": "257280",
    "end": "258720"
  },
  {
    "text": "that are being spawned by a given",
    "start": "258720",
    "end": "261239"
  },
  {
    "text": "program",
    "start": "261239",
    "end": "262199"
  },
  {
    "text": "and you get the information of why up a",
    "start": "262199",
    "end": "266639"
  },
  {
    "text": "certain part of the server resources are",
    "start": "266639",
    "end": "268199"
  },
  {
    "text": "being consumed and you can get a lot of",
    "start": "268199",
    "end": "271160"
  },
  {
    "text": "Statistics uh down to the line number of",
    "start": "271160",
    "end": "275639"
  },
  {
    "text": "your program",
    "start": "275639",
    "end": "278160"
  },
  {
    "text": "continuous profiling the is a concept",
    "start": "278160",
    "end": "281100"
  },
  {
    "text": "where you take an action and over a",
    "start": "281100",
    "end": "284160"
  },
  {
    "text": "period of time you keep doing the same",
    "start": "284160",
    "end": "286139"
  },
  {
    "text": "thing over and over again",
    "start": "286139",
    "end": "288060"
  },
  {
    "text": "um so yeah or recently with the Advent",
    "start": "288060",
    "end": "291060"
  },
  {
    "text": "of sampling profilers",
    "start": "291060",
    "end": "294139"
  },
  {
    "text": "doing uh the uh the profiling itself has",
    "start": "294139",
    "end": "298860"
  },
  {
    "text": "become a lot cheaper uh",
    "start": "298860",
    "end": "301740"
  },
  {
    "text": "what basically does is that or or a",
    "start": "301740",
    "end": "305639"
  },
  {
    "text": "certain granularity you keep picking",
    "start": "305639",
    "end": "307860"
  },
  {
    "text": "samples of information that you care",
    "start": "307860",
    "end": "310919"
  },
  {
    "text": "about and that information over a period",
    "start": "310919",
    "end": "313620"
  },
  {
    "text": "of time can be viewed you can aggregate",
    "start": "313620",
    "end": "315180"
  },
  {
    "text": "it uh and you can you can you can Trend",
    "start": "315180",
    "end": "319139"
  },
  {
    "text": "it and do many things with that",
    "start": "319139",
    "end": "321060"
  },
  {
    "text": "so there are several products that uh",
    "start": "321060",
    "end": "323220"
  },
  {
    "text": "products or projects that allowed us to",
    "start": "323220",
    "end": "325560"
  },
  {
    "text": "do that some of them are pyroscope uh",
    "start": "325560",
    "end": "330060"
  },
  {
    "text": "CNC cncf has something called pixie",
    "start": "330060",
    "end": "332699"
  },
  {
    "text": "there's parka and a profiles are",
    "start": "332699",
    "end": "335460"
  },
  {
    "text": "catching up to a a certain level that",
    "start": "335460",
    "end": "338280"
  },
  {
    "text": "even open Telemetry has its own",
    "start": "338280",
    "end": "340940"
  },
  {
    "text": "working group that is bringing profile",
    "start": "340940",
    "end": "345419"
  },
  {
    "text": "as a standard into the into the open",
    "start": "345419",
    "end": "348840"
  },
  {
    "text": "Telemetry project",
    "start": "348840",
    "end": "350419"
  },
  {
    "text": "profiles can uh in the in the context of",
    "start": "350419",
    "end": "353880"
  },
  {
    "text": "continuous profiling can be collected",
    "start": "353880",
    "end": "356400"
  },
  {
    "text": "either through scraping which people who",
    "start": "356400",
    "end": "359880"
  },
  {
    "text": "are familiar with golang golang has the",
    "start": "359880",
    "end": "362520"
  },
  {
    "text": "concept of P Prof uh a p Prof HTTP",
    "start": "362520",
    "end": "365880"
  },
  {
    "text": "endpoint can be periodically pulled to",
    "start": "365880",
    "end": "368940"
  },
  {
    "text": "be able to find uh all this uh",
    "start": "368940",
    "end": "371900"
  },
  {
    "text": "periodically collect all the samples for",
    "start": "371900",
    "end": "375240"
  },
  {
    "text": "that given application the other way is",
    "start": "375240",
    "end": "377340"
  },
  {
    "text": "to be able to push where you have a",
    "start": "377340",
    "end": "380880"
  },
  {
    "text": "standard client that either an open",
    "start": "380880",
    "end": "382979"
  },
  {
    "text": "source project or a vendor project a",
    "start": "382979",
    "end": "384780"
  },
  {
    "text": "vendor product ships out you add a few",
    "start": "384780",
    "end": "387840"
  },
  {
    "text": "lines of boilerplate code into your",
    "start": "387840",
    "end": "389940"
  },
  {
    "text": "application",
    "start": "389940",
    "end": "392000"
  },
  {
    "text": "announcing which endpoint the the",
    "start": "392000",
    "end": "395280"
  },
  {
    "text": "profiles need to be published into and",
    "start": "395280",
    "end": "398160"
  },
  {
    "text": "the application will periodically push",
    "start": "398160",
    "end": "400639"
  },
  {
    "text": "samples into the back end and the final",
    "start": "400639",
    "end": "403380"
  },
  {
    "text": "one is",
    "start": "403380",
    "end": "404660"
  },
  {
    "text": "instrumentation the instrument free",
    "start": "404660",
    "end": "406979"
  },
  {
    "text": "approach where you use something like",
    "start": "406979",
    "end": "408900"
  },
  {
    "text": "ebpf where a module is loaded into the",
    "start": "408900",
    "end": "412080"
  },
  {
    "text": "kernel and that is responsible for",
    "start": "412080",
    "end": "415979"
  },
  {
    "text": "extracting all the the profiles out",
    "start": "415979",
    "end": "420419"
  },
  {
    "text": "so how did we go about doing this",
    "start": "420419",
    "end": "423960"
  },
  {
    "text": "um we we looked at various uh open",
    "start": "423960",
    "end": "426960"
  },
  {
    "text": "source projects and we landed on",
    "start": "426960",
    "end": "429919"
  },
  {
    "text": "pyroscope as one of them uh it was a it",
    "start": "429919",
    "end": "433860"
  },
  {
    "text": "was relatively easy to set up it had a",
    "start": "433860",
    "end": "435900"
  },
  {
    "text": "very nice user experience for us to",
    "start": "435900",
    "end": "437880"
  },
  {
    "text": "visualize uh profiling data and it also",
    "start": "437880",
    "end": "440759"
  },
  {
    "text": "has some Nifty features where you can do",
    "start": "440759",
    "end": "443220"
  },
  {
    "text": "side by side view look at the difference",
    "start": "443220",
    "end": "445759"
  },
  {
    "text": "uh between various profiles and even",
    "start": "445759",
    "end": "450560"
  },
  {
    "text": "upload ad hoc profiles to to see it",
    "start": "450560",
    "end": "454319"
  },
  {
    "text": "using their user experience",
    "start": "454319",
    "end": "456539"
  },
  {
    "text": "uh initially we started it as an",
    "start": "456539",
    "end": "459539"
  },
  {
    "text": "experiment where we used our",
    "start": "459539",
    "end": "462979"
  },
  {
    "text": "pre-production environment to do some",
    "start": "462979",
    "end": "465419"
  },
  {
    "text": "load and performance analysis where we",
    "start": "465419",
    "end": "467940"
  },
  {
    "text": "had pyroscope deployed in in the",
    "start": "467940",
    "end": "469860"
  },
  {
    "text": "pre-production namespace let it run",
    "start": "469860",
    "end": "472500"
  },
  {
    "text": "against",
    "start": "472500",
    "end": "473539"
  },
  {
    "text": "our metrics platform so that any new",
    "start": "473539",
    "end": "477240"
  },
  {
    "text": "build that we are considering to release",
    "start": "477240",
    "end": "479580"
  },
  {
    "text": "we could gain some insights from a",
    "start": "479580",
    "end": "482280"
  },
  {
    "text": "profiling perspective we saw good amount",
    "start": "482280",
    "end": "485280"
  },
  {
    "text": "of success to the points where now we",
    "start": "485280",
    "end": "487440"
  },
  {
    "text": "are deploying it to another production",
    "start": "487440",
    "end": "488759"
  },
  {
    "text": "namespaces as well",
    "start": "488759",
    "end": "490919"
  },
  {
    "text": "um so that if there is an incident",
    "start": "490919",
    "end": "494360"
  },
  {
    "text": "the profiles are already there for us",
    "start": "494360",
    "end": "496860"
  },
  {
    "text": "too",
    "start": "496860",
    "end": "497900"
  },
  {
    "text": "View at a later point in time so right",
    "start": "497900",
    "end": "500699"
  },
  {
    "text": "now what we do is we given that",
    "start": "500699",
    "end": "502680"
  },
  {
    "text": "pyroscope uses the",
    "start": "502680",
    "end": "504740"
  },
  {
    "text": "Prometheus service Discovery we we add",
    "start": "504740",
    "end": "508740"
  },
  {
    "text": "an important annotations on all the",
    "start": "508740",
    "end": "511700"
  },
  {
    "text": "deployments or staple sets that we are",
    "start": "511700",
    "end": "514020"
  },
  {
    "text": "interested in uh collecting profiles and",
    "start": "514020",
    "end": "516659"
  },
  {
    "text": "we set it to a 10 second uh uh polling",
    "start": "516659",
    "end": "520800"
  },
  {
    "text": "period",
    "start": "520800",
    "end": "523039"
  },
  {
    "text": "so",
    "start": "526560",
    "end": "527519"
  },
  {
    "text": "um as BJ was saying with the our current",
    "start": "527519",
    "end": "529680"
  },
  {
    "text": "the deployment architecture for this",
    "start": "529680",
    "end": "531240"
  },
  {
    "text": "it's nothing",
    "start": "531240",
    "end": "532560"
  },
  {
    "text": "um fancy uh you know the primary",
    "start": "532560",
    "end": "534480"
  },
  {
    "text": "motivator is VJ touched on a bit was",
    "start": "534480",
    "end": "537480"
  },
  {
    "text": "that",
    "start": "537480",
    "end": "538560"
  },
  {
    "text": "um you know uh we we were looking at",
    "start": "538560",
    "end": "541500"
  },
  {
    "text": "continuous profiling kind of from two uh",
    "start": "541500",
    "end": "545339"
  },
  {
    "text": "perspectives",
    "start": "545339",
    "end": "546600"
  },
  {
    "text": "um for me which was we want to have",
    "start": "546600",
    "end": "549180"
  },
  {
    "text": "profiling data available in the event",
    "start": "549180",
    "end": "552420"
  },
  {
    "text": "that we need to do active triaging for",
    "start": "552420",
    "end": "554160"
  },
  {
    "text": "something that requires it because a lot",
    "start": "554160",
    "end": "555899"
  },
  {
    "text": "of times not a lot of times but",
    "start": "555899",
    "end": "557519"
  },
  {
    "text": "sometimes metrics or like logs does not",
    "start": "557519",
    "end": "559920"
  },
  {
    "text": "really show us what we need another one",
    "start": "559920",
    "end": "562260"
  },
  {
    "text": "is that",
    "start": "562260",
    "end": "563519"
  },
  {
    "text": "um when you run systems at high scale",
    "start": "563519",
    "end": "566940"
  },
  {
    "text": "you're always looking for places to kind",
    "start": "566940",
    "end": "568860"
  },
  {
    "text": "of save costs and have things run",
    "start": "568860",
    "end": "570959"
  },
  {
    "text": "cheaper and having profiles simply on",
    "start": "570959",
    "end": "573240"
  },
  {
    "text": "hand whenever you want them makes it a",
    "start": "573240",
    "end": "575519"
  },
  {
    "text": "lot easier for any engineer to kind of",
    "start": "575519",
    "end": "577260"
  },
  {
    "text": "just go in whenever they have some free",
    "start": "577260",
    "end": "579360"
  },
  {
    "text": "time and just start poking around",
    "start": "579360",
    "end": "581220"
  },
  {
    "text": "um and maybe you catch things if you're",
    "start": "581220",
    "end": "582600"
  },
  {
    "text": "lucky",
    "start": "582600",
    "end": "583920"
  },
  {
    "text": "um so our setup is uh like I said simple",
    "start": "583920",
    "end": "586920"
  },
  {
    "text": "we basically have multiple kubernetes",
    "start": "586920",
    "end": "589320"
  },
  {
    "text": "clusters internally and we have",
    "start": "589320",
    "end": "591660"
  },
  {
    "text": "different name spaces for our different",
    "start": "591660",
    "end": "593940"
  },
  {
    "text": "um you know observability offerings and",
    "start": "593940",
    "end": "597420"
  },
  {
    "text": "we just deploy a pyroscope into each one",
    "start": "597420",
    "end": "600360"
  },
  {
    "text": "of those namespaces in that cluster to",
    "start": "600360",
    "end": "602459"
  },
  {
    "text": "do",
    "start": "602459",
    "end": "603300"
  },
  {
    "text": "the the scraping and things like that",
    "start": "603300",
    "end": "605540"
  },
  {
    "text": "there's no requirement for us at the",
    "start": "605540",
    "end": "608339"
  },
  {
    "text": "moment to do any type of querying across",
    "start": "608339",
    "end": "610800"
  },
  {
    "text": "them or anything like that so it's a",
    "start": "610800",
    "end": "612060"
  },
  {
    "text": "very just vanilla just deployment",
    "start": "612060",
    "end": "613800"
  },
  {
    "text": "configured uh scrape whatever is locally",
    "start": "613800",
    "end": "616560"
  },
  {
    "text": "based on whatever the annotations are",
    "start": "616560",
    "end": "618060"
  },
  {
    "text": "set on the Pod specs and we're good to",
    "start": "618060",
    "end": "621540"
  },
  {
    "text": "go we just have the the profiling data",
    "start": "621540",
    "end": "624839"
  },
  {
    "text": "available whenever we we need it",
    "start": "624839",
    "end": "628399"
  },
  {
    "text": "so um some typical questions just to get",
    "start": "629720",
    "end": "633360"
  },
  {
    "text": "out of the way",
    "start": "633360",
    "end": "634860"
  },
  {
    "text": "um so as Vijay was saying you know",
    "start": "634860",
    "end": "636899"
  },
  {
    "text": "historically profiling has been",
    "start": "636899",
    "end": "639300"
  },
  {
    "text": "considered somewhat expensive and this",
    "start": "639300",
    "end": "641160"
  },
  {
    "text": "is probably debatable depending on the",
    "start": "641160",
    "end": "642779"
  },
  {
    "text": "runtime that you're on",
    "start": "642779",
    "end": "644459"
  },
  {
    "text": "um at least for us our stack is",
    "start": "644459",
    "end": "646380"
  },
  {
    "text": "primarily golang",
    "start": "646380",
    "end": "648180"
  },
  {
    "text": "um and it's incredibly cheap",
    "start": "648180",
    "end": "650100"
  },
  {
    "text": "um in the sense that you know even",
    "start": "650100",
    "end": "651720"
  },
  {
    "text": "polling every 10 seconds we don't really",
    "start": "651720",
    "end": "653880"
  },
  {
    "text": "notice anything like if there's any CPU",
    "start": "653880",
    "end": "657060"
  },
  {
    "text": "consumption going on with any of our",
    "start": "657060",
    "end": "658860"
  },
  {
    "text": "services it's lost in the in the signal",
    "start": "658860",
    "end": "660660"
  },
  {
    "text": "noise and we can't even really tell I",
    "start": "660660",
    "end": "663060"
  },
  {
    "text": "know there are some exceptions with this",
    "start": "663060",
    "end": "664500"
  },
  {
    "text": "depending on the the run time that",
    "start": "664500",
    "end": "666839"
  },
  {
    "text": "you're on",
    "start": "666839",
    "end": "667800"
  },
  {
    "text": "um things like that and like like lock",
    "start": "667800",
    "end": "669240"
  },
  {
    "text": "and mutex profiling can have impacts and",
    "start": "669240",
    "end": "671579"
  },
  {
    "text": "you have to be kind of careful things",
    "start": "671579",
    "end": "672540"
  },
  {
    "text": "like that but generally speaking it's",
    "start": "672540",
    "end": "674220"
  },
  {
    "text": "easy enough to just keep it on",
    "start": "674220",
    "end": "675420"
  },
  {
    "text": "indefinitely",
    "start": "675420",
    "end": "677579"
  },
  {
    "text": "um in terms of like storage uh for",
    "start": "677579",
    "end": "679920"
  },
  {
    "text": "profiles this is where",
    "start": "679920",
    "end": "682260"
  },
  {
    "text": "um we've had some of I think the most",
    "start": "682260",
    "end": "684240"
  },
  {
    "text": "trouble so to speak um in the sense that",
    "start": "684240",
    "end": "687420"
  },
  {
    "text": "um they're surprisingly large uh",
    "start": "687420",
    "end": "690360"
  },
  {
    "text": "depending on how many pods you have",
    "start": "690360",
    "end": "692700"
  },
  {
    "text": "um deployed into our namespace with the",
    "start": "692700",
    "end": "694440"
  },
  {
    "text": "setup that we have",
    "start": "694440",
    "end": "696300"
  },
  {
    "text": "um so we've had to kind of aggressively",
    "start": "696300",
    "end": "699779"
  },
  {
    "text": "um uh have the tiering",
    "start": "699779",
    "end": "702000"
  },
  {
    "text": "um aggregation set up on pyroscope to",
    "start": "702000",
    "end": "704820"
  },
  {
    "text": "where we don't keep 10 second profiles",
    "start": "704820",
    "end": "707100"
  },
  {
    "text": "around for very long because we just run",
    "start": "707100",
    "end": "708779"
  },
  {
    "text": "out of disk space on a single uh",
    "start": "708779",
    "end": "711060"
  },
  {
    "text": "pyroscope pod",
    "start": "711060",
    "end": "712620"
  },
  {
    "text": "um so that that seems to be the largest",
    "start": "712620",
    "end": "714779"
  },
  {
    "text": "challenge at the moment",
    "start": "714779",
    "end": "716700"
  },
  {
    "text": "um and then we just rely on like longer",
    "start": "716700",
    "end": "718440"
  },
  {
    "text": "sampled uh data",
    "start": "718440",
    "end": "722000"
  },
  {
    "text": "um and then of course the question is",
    "start": "724260",
    "end": "726240"
  },
  {
    "text": "did we find any any benefit out of this",
    "start": "726240",
    "end": "728339"
  },
  {
    "text": "as opposed to for example just",
    "start": "728339",
    "end": "730560"
  },
  {
    "text": "you know going and doing ad hoc you know",
    "start": "730560",
    "end": "733440"
  },
  {
    "text": "profiling hitting a p props endpoint",
    "start": "733440",
    "end": "735720"
  },
  {
    "text": "using the go tool chain to look at",
    "start": "735720",
    "end": "737339"
  },
  {
    "text": "things and stuff like that and the",
    "start": "737339",
    "end": "738360"
  },
  {
    "text": "answer is yes because which which we'll",
    "start": "738360",
    "end": "740279"
  },
  {
    "text": "get into with a couple examples here",
    "start": "740279",
    "end": "743399"
  },
  {
    "text": "uh so the first one",
    "start": "743399",
    "end": "745800"
  },
  {
    "text": "um so this was an interesting uh example",
    "start": "745800",
    "end": "748620"
  },
  {
    "text": "in that um like I was saying because of",
    "start": "748620",
    "end": "751320"
  },
  {
    "text": "how convenient it was that the profiles",
    "start": "751320",
    "end": "753779"
  },
  {
    "text": "were just readily available this was",
    "start": "753779",
    "end": "755940"
  },
  {
    "text": "something that I noticed in the morning",
    "start": "755940",
    "end": "757440"
  },
  {
    "text": "just having coffee like looking at email",
    "start": "757440",
    "end": "759600"
  },
  {
    "text": "and then just",
    "start": "759600",
    "end": "761220"
  },
  {
    "text": "poking around profiles because I was",
    "start": "761220",
    "end": "762959"
  },
  {
    "text": "curious",
    "start": "762959",
    "end": "764100"
  },
  {
    "text": "um so this is from one of our",
    "start": "764100",
    "end": "765959"
  },
  {
    "text": "um uh ingestion services and uh What uh",
    "start": "765959",
    "end": "769980"
  },
  {
    "text": "with the picture at the bottom is the",
    "start": "769980",
    "end": "772200"
  },
  {
    "text": "CPU CPU profile we can see that the the",
    "start": "772200",
    "end": "775380"
  },
  {
    "text": "top uh Contender for the the CPU usage",
    "start": "775380",
    "end": "778440"
  },
  {
    "text": "was an internal uh method for the go run",
    "start": "778440",
    "end": "781980"
  },
  {
    "text": "time",
    "start": "781980",
    "end": "783000"
  },
  {
    "text": "um called map it or next",
    "start": "783000",
    "end": "785160"
  },
  {
    "text": "um and based on the cost stack this is",
    "start": "785160",
    "end": "787800"
  },
  {
    "text": "coming from a part of the code that's",
    "start": "787800",
    "end": "790980"
  },
  {
    "text": "effectively delete like resetting a map",
    "start": "790980",
    "end": "793620"
  },
  {
    "text": "state so clearing it because we want to",
    "start": "793620",
    "end": "795360"
  },
  {
    "text": "reuse the memory",
    "start": "795360",
    "end": "796800"
  },
  {
    "text": "um and it was quite surprising to see",
    "start": "796800",
    "end": "799200"
  },
  {
    "text": "this uh in uh in in the profile showing",
    "start": "799200",
    "end": "802500"
  },
  {
    "text": "up because for those that are maybe",
    "start": "802500",
    "end": "805620"
  },
  {
    "text": "unaware of",
    "start": "805620",
    "end": "807240"
  },
  {
    "text": "some of the the goaling internals and",
    "start": "807240",
    "end": "809700"
  },
  {
    "text": "optimizations that it does",
    "start": "809700",
    "end": "811560"
  },
  {
    "text": "um the the the code that we see in the",
    "start": "811560",
    "end": "813899"
  },
  {
    "text": "context versus 4K uh over range deletes",
    "start": "813899",
    "end": "816779"
  },
  {
    "text": "uh the the uh key from a map",
    "start": "816779",
    "end": "820019"
  },
  {
    "text": "um that's the idiomatic way and go to",
    "start": "820019",
    "end": "822660"
  },
  {
    "text": "basically delete everything out of a map",
    "start": "822660",
    "end": "825240"
  },
  {
    "text": "and uh at you know at first sight it",
    "start": "825240",
    "end": "828180"
  },
  {
    "text": "seems wildly inefficient as opposed to",
    "start": "828180",
    "end": "830519"
  },
  {
    "text": "other languages like on the jvm where",
    "start": "830519",
    "end": "832320"
  },
  {
    "text": "you might have like a clear or a",
    "start": "832320",
    "end": "833760"
  },
  {
    "text": "truncate method or something like that",
    "start": "833760",
    "end": "835139"
  },
  {
    "text": "however the go run time is smart enough",
    "start": "835139",
    "end": "838620"
  },
  {
    "text": "to see this and it actually optimizes it",
    "start": "838620",
    "end": "840959"
  },
  {
    "text": "to not iterate over the map and it calls",
    "start": "840959",
    "end": "842700"
  },
  {
    "text": "something called um uh map clear instead",
    "start": "842700",
    "end": "846779"
  },
  {
    "text": "um so the question came up why is map",
    "start": "846779",
    "end": "849180"
  },
  {
    "text": "clear not being called here which should",
    "start": "849180",
    "end": "852000"
  },
  {
    "text": "make this not show up in the profile",
    "start": "852000",
    "end": "855060"
  },
  {
    "text": "um why is it calling method or next",
    "start": "855060",
    "end": "857639"
  },
  {
    "text": "um so that's what we need to figure out",
    "start": "857639",
    "end": "859139"
  },
  {
    "text": "based on this uh next slide PJ",
    "start": "859139",
    "end": "863160"
  },
  {
    "text": "so",
    "start": "863160",
    "end": "864779"
  },
  {
    "text": "um because of the nature of this problem",
    "start": "864779",
    "end": "866459"
  },
  {
    "text": "there is no easy way to uh at least I",
    "start": "866459",
    "end": "869279"
  },
  {
    "text": "could think of to figure this out",
    "start": "869279",
    "end": "870540"
  },
  {
    "text": "without dropping into some assembly",
    "start": "870540",
    "end": "872940"
  },
  {
    "text": "um so the first step was well we can",
    "start": "872940",
    "end": "875540"
  },
  {
    "text": "compile the source file uh that uh uh",
    "start": "875540",
    "end": "880019"
  },
  {
    "text": "for this code uh the that the map being",
    "start": "880019",
    "end": "883019"
  },
  {
    "text": "deleted and see what the compiler is",
    "start": "883019",
    "end": "885120"
  },
  {
    "text": "telling us that it's doing and we can",
    "start": "885120",
    "end": "886920"
  },
  {
    "text": "see that the compiler actually says that",
    "start": "886920",
    "end": "888779"
  },
  {
    "text": "it's going to create a call to runtime",
    "start": "888779",
    "end": "891480"
  },
  {
    "text": "map clear so the question is why is it",
    "start": "891480",
    "end": "894300"
  },
  {
    "text": "not showing up like that in the profile",
    "start": "894300",
    "end": "896579"
  },
  {
    "text": "so the next step was okay well",
    "start": "896579",
    "end": "899160"
  },
  {
    "text": "maybe something else is going so we'll",
    "start": "899160",
    "end": "901380"
  },
  {
    "text": "we'll compile",
    "start": "901380",
    "end": "903720"
  },
  {
    "text": "um a source file that calls that instead",
    "start": "903720",
    "end": "906959"
  },
  {
    "text": "of just the source file itself",
    "start": "906959",
    "end": "908880"
  },
  {
    "text": "um and see if there's a difference and",
    "start": "908880",
    "end": "910500"
  },
  {
    "text": "we can see in this case instead of",
    "start": "910500",
    "end": "912420"
  },
  {
    "text": "saying map clear for the same line of",
    "start": "912420",
    "end": "914160"
  },
  {
    "text": "code is saying map editor next now",
    "start": "914160",
    "end": "917160"
  },
  {
    "text": "um so",
    "start": "917160",
    "end": "918660"
  },
  {
    "text": "the the particular function where we're",
    "start": "918660",
    "end": "921660"
  },
  {
    "text": "resetting the map is small enough that",
    "start": "921660",
    "end": "923399"
  },
  {
    "text": "it was probably being inlined by the",
    "start": "923399",
    "end": "925199"
  },
  {
    "text": "compiler so the question was well is for",
    "start": "925199",
    "end": "927959"
  },
  {
    "text": "some reason",
    "start": "927959",
    "end": "929760"
  },
  {
    "text": "um code inlining like making this",
    "start": "929760",
    "end": "932579"
  },
  {
    "text": "optimization not happen so that was an",
    "start": "932579",
    "end": "934980"
  },
  {
    "text": "experiment to try out so we that you can",
    "start": "934980",
    "end": "937079"
  },
  {
    "text": "see a PR diff",
    "start": "937079",
    "end": "938639"
  },
  {
    "text": "um in the picture where we just said",
    "start": "938639",
    "end": "940320"
  },
  {
    "text": "okay we're just not going to inline this",
    "start": "940320",
    "end": "941880"
  },
  {
    "text": "particular method and see if the problem",
    "start": "941880",
    "end": "943320"
  },
  {
    "text": "goes away",
    "start": "943320",
    "end": "945860"
  },
  {
    "text": "um so then as some initial validation",
    "start": "948959",
    "end": "951660"
  },
  {
    "text": "um we check the initial source file and",
    "start": "951660",
    "end": "954300"
  },
  {
    "text": "make sure that it's still calling",
    "start": "954300",
    "end": "955260"
  },
  {
    "text": "runtime map clear after we added the the",
    "start": "955260",
    "end": "957180"
  },
  {
    "text": "note inline annotation and then we do",
    "start": "957180",
    "end": "961079"
  },
  {
    "text": "the same check on another source file",
    "start": "961079",
    "end": "963300"
  },
  {
    "text": "that's calling it and we can see that",
    "start": "963300",
    "end": "966060"
  },
  {
    "text": "um now it's not making any reference to",
    "start": "966060",
    "end": "968820"
  },
  {
    "text": "run time anything it's just making a",
    "start": "968820",
    "end": "971100"
  },
  {
    "text": "reference to that method um since we're",
    "start": "971100",
    "end": "973019"
  },
  {
    "text": "not inlining anymore so that means that",
    "start": "973019",
    "end": "975180"
  },
  {
    "text": "it should be getting that it should be a",
    "start": "975180",
    "end": "976860"
  },
  {
    "text": "runtime map clear now",
    "start": "976860",
    "end": "979139"
  },
  {
    "text": "um and after deploying the change we can",
    "start": "979139",
    "end": "982500"
  },
  {
    "text": "see that",
    "start": "982500",
    "end": "983820"
  },
  {
    "text": "um runtime map clear is being uh is in",
    "start": "983820",
    "end": "986399"
  },
  {
    "text": "that call Stacked out instead of method",
    "start": "986399",
    "end": "988260"
  },
  {
    "text": "or next so",
    "start": "988260",
    "end": "990480"
  },
  {
    "text": "um the the uh interesting thing about",
    "start": "990480",
    "end": "993540"
  },
  {
    "text": "this particular problem is how nuanced",
    "start": "993540",
    "end": "996240"
  },
  {
    "text": "as it was",
    "start": "996240",
    "end": "997259"
  },
  {
    "text": "um given that it was the top CPU",
    "start": "997259",
    "end": "998940"
  },
  {
    "text": "Contender on this service it actually",
    "start": "998940",
    "end": "1000380"
  },
  {
    "text": "saved us 12 CPU for something that was",
    "start": "1000380",
    "end": "1003259"
  },
  {
    "text": "so silly in a sense",
    "start": "1003259",
    "end": "1006759"
  },
  {
    "text": "okay and then another example which is",
    "start": "1008120",
    "end": "1010399"
  },
  {
    "text": "uh memory related",
    "start": "1010399",
    "end": "1012199"
  },
  {
    "text": "um so in this uh particular case",
    "start": "1012199",
    "end": "1015380"
  },
  {
    "text": "um this uh",
    "start": "1015380",
    "end": "1017000"
  },
  {
    "text": "was the result of uh myself doing some",
    "start": "1017000",
    "end": "1020240"
  },
  {
    "text": "premature uh optimization that uh we",
    "start": "1020240",
    "end": "1023240"
  },
  {
    "text": "caught after the fact",
    "start": "1023240",
    "end": "1025220"
  },
  {
    "text": "um so I was at the time I was in the uh",
    "start": "1025220",
    "end": "1028220"
  },
  {
    "text": "Habit we were rewriting a lot of our",
    "start": "1028220",
    "end": "1030620"
  },
  {
    "text": "um kind of internal apis and the",
    "start": "1030620",
    "end": "1033319"
  },
  {
    "text": "majority a large majority of our API",
    "start": "1033319",
    "end": "1035418"
  },
  {
    "text": "calls uh highly benefit from various",
    "start": "1035419",
    "end": "1038298"
  },
  {
    "text": "types of memory pooling and things like",
    "start": "1038299",
    "end": "1039980"
  },
  {
    "text": "that",
    "start": "1039980",
    "end": "1041240"
  },
  {
    "text": "um and so for this particular service in",
    "start": "1041240",
    "end": "1044000"
  },
  {
    "text": "this API call",
    "start": "1044000",
    "end": "1045860"
  },
  {
    "text": "um I just blindly made the same",
    "start": "1045860",
    "end": "1047600"
  },
  {
    "text": "assumption and kind of just rolled",
    "start": "1047600",
    "end": "1048799"
  },
  {
    "text": "forward with it",
    "start": "1048799",
    "end": "1050059"
  },
  {
    "text": "um but what we can see is um with the",
    "start": "1050059",
    "end": "1053059"
  },
  {
    "text": "this diff of",
    "start": "1053059",
    "end": "1055039"
  },
  {
    "text": "um kind of a an older version of the",
    "start": "1055039",
    "end": "1056840"
  },
  {
    "text": "service and a newer one is on the left",
    "start": "1056840",
    "end": "1059240"
  },
  {
    "text": "side",
    "start": "1059240",
    "end": "1060320"
  },
  {
    "text": "um there's a the majority of the Heap",
    "start": "1060320",
    "end": "1063140"
  },
  {
    "text": "memory is being taken up by one",
    "start": "1063140",
    "end": "1065059"
  },
  {
    "text": "particular method and this method just",
    "start": "1065059",
    "end": "1068840"
  },
  {
    "text": "really manages a a memory buffer for",
    "start": "1068840",
    "end": "1072740"
  },
  {
    "text": "kind of um receiving uh updating updated",
    "start": "1072740",
    "end": "1076220"
  },
  {
    "text": "uh RPC decalls and things like that",
    "start": "1076220",
    "end": "1079400"
  },
  {
    "text": "um and in hindsight for some context uh",
    "start": "1079400",
    "end": "1082220"
  },
  {
    "text": "it was a case to where well upon startup",
    "start": "1082220",
    "end": "1084799"
  },
  {
    "text": "and getting",
    "start": "1084799",
    "end": "1086419"
  },
  {
    "text": "um uh uh responses from a particular uh",
    "start": "1086419",
    "end": "1090140"
  },
  {
    "text": "Upstream service the buffer might be",
    "start": "1090140",
    "end": "1092299"
  },
  {
    "text": "really big",
    "start": "1092299",
    "end": "1094220"
  },
  {
    "text": "um initially and then we would never see",
    "start": "1094220",
    "end": "1096440"
  },
  {
    "text": "that much data come over again you'd get",
    "start": "1096440",
    "end": "1098000"
  },
  {
    "text": "these tiny incremental updates so it was",
    "start": "1098000",
    "end": "1101000"
  },
  {
    "text": "probably a huge waste to have that whole",
    "start": "1101000",
    "end": "1103880"
  },
  {
    "text": "thing cooled",
    "start": "1103880",
    "end": "1105620"
  },
  {
    "text": "um so on the right side we can see well",
    "start": "1105620",
    "end": "1107539"
  },
  {
    "text": "if we just removed the pooling what",
    "start": "1107539",
    "end": "1110059"
  },
  {
    "text": "happens and we can see that by removing",
    "start": "1110059",
    "end": "1111860"
  },
  {
    "text": "that pooling we were able to reduce the",
    "start": "1111860",
    "end": "1113600"
  },
  {
    "text": "memory by roughly 50 percent",
    "start": "1113600",
    "end": "1117340"
  },
  {
    "text": "and then just for some additional",
    "start": "1120140",
    "end": "1121820"
  },
  {
    "text": "validation we had uh three deployments",
    "start": "1121820",
    "end": "1124460"
  },
  {
    "text": "of this going",
    "start": "1124460",
    "end": "1126320"
  },
  {
    "text": "um the",
    "start": "1126320",
    "end": "1128000"
  },
  {
    "text": "um the ones in uh on the on the uh the",
    "start": "1128000",
    "end": "1131720"
  },
  {
    "text": "memory side of the graph we can see",
    "start": "1131720",
    "end": "1133400"
  },
  {
    "text": "cluster 134 and 137 are running the old",
    "start": "1133400",
    "end": "1137360"
  },
  {
    "text": "version that was doing the pooling and",
    "start": "1137360",
    "end": "1139400"
  },
  {
    "text": "then 129 was running the new one without",
    "start": "1139400",
    "end": "1142460"
  },
  {
    "text": "the pooling and we see the memory and",
    "start": "1142460",
    "end": "1144799"
  },
  {
    "text": "again at least even from the metrics is",
    "start": "1144799",
    "end": "1147020"
  },
  {
    "text": "showing that roughly half of the memory",
    "start": "1147020",
    "end": "1148820"
  },
  {
    "text": "is being used and then just for some",
    "start": "1148820",
    "end": "1150679"
  },
  {
    "text": "additional um to see if there's any CPU",
    "start": "1150679",
    "end": "1152780"
  },
  {
    "text": "impact on the right side we said that",
    "start": "1152780",
    "end": "1154220"
  },
  {
    "text": "there there's no notable CPU impact so",
    "start": "1154220",
    "end": "1157340"
  },
  {
    "text": "this was a clear case of this is like we",
    "start": "1157340",
    "end": "1159380"
  },
  {
    "text": "had a buffer for no good reason it was",
    "start": "1159380",
    "end": "1161360"
  },
  {
    "text": "actually ended up doing us some harm",
    "start": "1161360",
    "end": "1164620"
  },
  {
    "text": "uh given that we see we see good benefit",
    "start": "1167620",
    "end": "1171860"
  },
  {
    "text": "we also wanted to do a quick demo uh for",
    "start": "1171860",
    "end": "1174860"
  },
  {
    "text": "people to be aware of how to use these",
    "start": "1174860",
    "end": "1178039"
  },
  {
    "text": "profilers so that being said let me move",
    "start": "1178039",
    "end": "1181220"
  },
  {
    "text": "to my terminal",
    "start": "1181220",
    "end": "1183380"
  },
  {
    "text": "uh uh what I've done is uh I've I've",
    "start": "1183380",
    "end": "1186799"
  },
  {
    "text": "I've cloned the pyroscope repository on",
    "start": "1186799",
    "end": "1190820"
  },
  {
    "text": "my local and they have some good",
    "start": "1190820",
    "end": "1193100"
  },
  {
    "text": "examples on uh how you can do profiling",
    "start": "1193100",
    "end": "1197299"
  },
  {
    "text": "against various languages and whatnot so",
    "start": "1197299",
    "end": "1200360"
  },
  {
    "text": "I picked the easy one which we are very",
    "start": "1200360",
    "end": "1202700"
  },
  {
    "text": "familiar with I picked the go example so",
    "start": "1202700",
    "end": "1206299"
  },
  {
    "text": "they have a Docker compose file where",
    "start": "1206299",
    "end": "1210020"
  },
  {
    "text": "they're using the golang hot rod which",
    "start": "1210020",
    "end": "1213860"
  },
  {
    "text": "is a very common uh",
    "start": "1213860",
    "end": "1216039"
  },
  {
    "text": "playground app that is built to",
    "start": "1216039",
    "end": "1218600"
  },
  {
    "text": "demonstrate various observability",
    "start": "1218600",
    "end": "1221360"
  },
  {
    "text": "functions like Matrix logs and traces",
    "start": "1221360",
    "end": "1224440"
  },
  {
    "text": "along with it pyroscope is also deployed",
    "start": "1224440",
    "end": "1228559"
  },
  {
    "text": "and Jaeger is",
    "start": "1228559",
    "end": "1230720"
  },
  {
    "text": "deployed as well so that you can see",
    "start": "1230720",
    "end": "1233900"
  },
  {
    "text": "um you use the hot rod app it shows you",
    "start": "1233900",
    "end": "1236660"
  },
  {
    "text": "sample traces navigate to the traces and",
    "start": "1236660",
    "end": "1240140"
  },
  {
    "text": "in turn for this demo specifically we we",
    "start": "1240140",
    "end": "1243080"
  },
  {
    "text": "show the usage of pyroscope",
    "start": "1243080",
    "end": "1245960"
  },
  {
    "text": "um so I already have uh these containers",
    "start": "1245960",
    "end": "1250280"
  },
  {
    "text": "running so that there is some amount of",
    "start": "1250280",
    "end": "1252140"
  },
  {
    "text": "profiles that are already built",
    "start": "1252140",
    "end": "1256120"
  },
  {
    "text": "back to",
    "start": "1261760",
    "end": "1264320"
  },
  {
    "text": "the browser",
    "start": "1264320",
    "end": "1267320"
  },
  {
    "text": "so I go to localhost 8080 where I can",
    "start": "1274580",
    "end": "1279799"
  },
  {
    "text": "see the hot rod application that's there",
    "start": "1279799",
    "end": "1282340"
  },
  {
    "text": "I'll make some sample API calls to",
    "start": "1282340",
    "end": "1285740"
  },
  {
    "text": "generate some amount of traffic",
    "start": "1285740",
    "end": "1289900"
  },
  {
    "text": "uh this application in itself you could",
    "start": "1290360",
    "end": "1293419"
  },
  {
    "text": "use it to use the Jaeger UI and look at",
    "start": "1293419",
    "end": "1296600"
  },
  {
    "text": "the distributed traces but let's go to",
    "start": "1296600",
    "end": "1298880"
  },
  {
    "text": "the pyroscope UI which is on 40 40.",
    "start": "1298880",
    "end": "1304940"
  },
  {
    "text": "uh so when you come into the UI it gives",
    "start": "1304940",
    "end": "1308900"
  },
  {
    "text": "you the ability to",
    "start": "1308900",
    "end": "1311799"
  },
  {
    "text": "apply certain tags",
    "start": "1311799",
    "end": "1314299"
  },
  {
    "text": "and also look at a bunch of applications",
    "start": "1314299",
    "end": "1316340"
  },
  {
    "text": "that are there so by default pyroscope",
    "start": "1316340",
    "end": "1319400"
  },
  {
    "text": "is being profiled by itself",
    "start": "1319400",
    "end": "1323080"
  },
  {
    "text": "we can see the",
    "start": "1323080",
    "end": "1325840"
  },
  {
    "text": "uh hot rod application that's there and",
    "start": "1325840",
    "end": "1328940"
  },
  {
    "text": "all the profiles that are being",
    "start": "1328940",
    "end": "1330080"
  },
  {
    "text": "collected for it CPU go routines",
    "start": "1330080",
    "end": "1332559"
  },
  {
    "text": "and then the objects that",
    "start": "1332559",
    "end": "1336200"
  },
  {
    "text": "um our beans have been seen by the",
    "start": "1336200",
    "end": "1338539"
  },
  {
    "text": "profiler the allocations",
    "start": "1338539",
    "end": "1340480"
  },
  {
    "text": "and the News objects along with the",
    "start": "1340480",
    "end": "1342860"
  },
  {
    "text": "space so you can you can pick one of",
    "start": "1342860",
    "end": "1345500"
  },
  {
    "text": "them uh there is a Time picker where you",
    "start": "1345500",
    "end": "1350360"
  },
  {
    "text": "can select the time and you can see some",
    "start": "1350360",
    "end": "1355280"
  },
  {
    "text": "you can see the profile for for that",
    "start": "1355280",
    "end": "1357380"
  },
  {
    "text": "during this time period how much time",
    "start": "1357380",
    "end": "1359240"
  },
  {
    "text": "you spent on various methods that are",
    "start": "1359240",
    "end": "1363260"
  },
  {
    "text": "there",
    "start": "1363260",
    "end": "1364659"
  },
  {
    "text": "you can view it both in a tabular view",
    "start": "1364659",
    "end": "1367280"
  },
  {
    "text": "and also in a flame graph which is what",
    "start": "1367280",
    "end": "1371120"
  },
  {
    "text": "we typically are used to if we talk",
    "start": "1371120",
    "end": "1373460"
  },
  {
    "text": "about profiles",
    "start": "1373460",
    "end": "1374980"
  },
  {
    "text": "there is the option for doing ad hoc",
    "start": "1374980",
    "end": "1379340"
  },
  {
    "text": "profiling where you can",
    "start": "1379340",
    "end": "1383020"
  },
  {
    "text": "upload the",
    "start": "1383020",
    "end": "1385900"
  },
  {
    "text": "you can either do a a single view or a",
    "start": "1385900",
    "end": "1389419"
  },
  {
    "text": "comparison diff view we'll take a look",
    "start": "1389419",
    "end": "1391460"
  },
  {
    "text": "at that next but this allows for being",
    "start": "1391460",
    "end": "1396559"
  },
  {
    "text": "able to do",
    "start": "1396559",
    "end": "1399380"
  },
  {
    "text": "uh do profiling without having to",
    "start": "1399380",
    "end": "1402080"
  },
  {
    "text": "actually continuous profile you can",
    "start": "1402080",
    "end": "1403640"
  },
  {
    "text": "always do it uh ad hoc as well",
    "start": "1403640",
    "end": "1407480"
  },
  {
    "text": "um let's go to the comparison view next",
    "start": "1407480",
    "end": "1411220"
  },
  {
    "text": "uh so the comparison view allows you to",
    "start": "1411220",
    "end": "1414440"
  },
  {
    "text": "either compare",
    "start": "1414440",
    "end": "1416380"
  },
  {
    "text": "two different",
    "start": "1416380",
    "end": "1418480"
  },
  {
    "text": "instances or even the same instance but",
    "start": "1418480",
    "end": "1422720"
  },
  {
    "text": "different time periods a typical use",
    "start": "1422720",
    "end": "1426020"
  },
  {
    "text": "case for this would be I have a known",
    "start": "1426020",
    "end": "1428780"
  },
  {
    "text": "good build that's running I have a",
    "start": "1428780",
    "end": "1430820"
  },
  {
    "text": "canary that that was deployed as part of",
    "start": "1430820",
    "end": "1435380"
  },
  {
    "text": "a new rollout the canary is not behaving",
    "start": "1435380",
    "end": "1437480"
  },
  {
    "text": "well so how do I look at what is the",
    "start": "1437480",
    "end": "1441440"
  },
  {
    "text": "difference between both bills or a",
    "start": "1441440",
    "end": "1444980"
  },
  {
    "text": "certain period there was an issue that",
    "start": "1444980",
    "end": "1447020"
  },
  {
    "text": "happened uh between steady state and",
    "start": "1447020",
    "end": "1450260"
  },
  {
    "text": "during the issue how do I know what was",
    "start": "1450260",
    "end": "1452659"
  },
  {
    "text": "going on that was different compared to",
    "start": "1452659",
    "end": "1455179"
  },
  {
    "text": "the normal so we do the same thing here",
    "start": "1455179",
    "end": "1457940"
  },
  {
    "text": "let's uh",
    "start": "1457940",
    "end": "1460340"
  },
  {
    "text": "pick an instance given that I only have",
    "start": "1460340",
    "end": "1462860"
  },
  {
    "text": "one we can do a timeline diff where",
    "start": "1462860",
    "end": "1467419"
  },
  {
    "text": "uh",
    "start": "1467419",
    "end": "1469520"
  },
  {
    "text": "let me pick one here and I think this",
    "start": "1469520",
    "end": "1472880"
  },
  {
    "text": "was the time when",
    "start": "1472880",
    "end": "1475159"
  },
  {
    "text": "um I ran few API calls so now you have a",
    "start": "1475159",
    "end": "1479120"
  },
  {
    "text": "side by side view of uh of the flame",
    "start": "1479120",
    "end": "1482419"
  },
  {
    "text": "graphs the bottom you have a side by",
    "start": "1482419",
    "end": "1484159"
  },
  {
    "text": "side view of",
    "start": "1484159",
    "end": "1485620"
  },
  {
    "text": "the The tabular View",
    "start": "1485620",
    "end": "1489039"
  },
  {
    "text": "and basically it gives you the",
    "start": "1489039",
    "end": "1491179"
  },
  {
    "text": "opportunity to analyze what was going on",
    "start": "1491179",
    "end": "1494059"
  },
  {
    "text": "at that point in time the disk view",
    "start": "1494059",
    "end": "1497919"
  },
  {
    "text": "basically shows you any differences so",
    "start": "1497919",
    "end": "1501679"
  },
  {
    "text": "in this case you can see more time being",
    "start": "1501679",
    "end": "1504080"
  },
  {
    "text": "spent on serving HTTP calls because",
    "start": "1504080",
    "end": "1506659"
  },
  {
    "text": "obviously they made a few HTTP calls at",
    "start": "1506659",
    "end": "1509840"
  },
  {
    "text": "that at that point in time",
    "start": "1509840",
    "end": "1513340"
  },
  {
    "text": "more than the user experience of a given",
    "start": "1514120",
    "end": "1517100"
  },
  {
    "text": "project or product I think the the",
    "start": "1517100",
    "end": "1519260"
  },
  {
    "text": "important part is that we have the",
    "start": "1519260",
    "end": "1521539"
  },
  {
    "text": "ability here to be able to collect all",
    "start": "1521539",
    "end": "1524779"
  },
  {
    "text": "these profiles and store them in a place",
    "start": "1524779",
    "end": "1528380"
  },
  {
    "text": "where we can come back to at any point",
    "start": "1528380",
    "end": "1530360"
  },
  {
    "text": "in time and be able to view them as as",
    "start": "1530360",
    "end": "1534260"
  },
  {
    "text": "necessary",
    "start": "1534260",
    "end": "1536419"
  },
  {
    "text": "so that being said let's go back to the",
    "start": "1536419",
    "end": "1540140"
  },
  {
    "text": "slides",
    "start": "1540140",
    "end": "1542559"
  },
  {
    "text": "what is the potential that we see in all",
    "start": "1544100",
    "end": "1546260"
  },
  {
    "text": "of this",
    "start": "1546260",
    "end": "1548240"
  },
  {
    "text": "um",
    "start": "1548240",
    "end": "1549159"
  },
  {
    "text": "first and foremost",
    "start": "1549159",
    "end": "1551380"
  },
  {
    "text": "one of the harder things to observe when",
    "start": "1551380",
    "end": "1556760"
  },
  {
    "text": "you are deploying things at scale",
    "start": "1556760",
    "end": "1559240"
  },
  {
    "text": "it's very easy to monitor a rollout",
    "start": "1559240",
    "end": "1563679"
  },
  {
    "text": "identify if kpis or golden signals are",
    "start": "1563679",
    "end": "1567740"
  },
  {
    "text": "going out of the ordinary alert rollback",
    "start": "1567740",
    "end": "1571760"
  },
  {
    "text": "and things like that but what about slow",
    "start": "1571760",
    "end": "1574520"
  },
  {
    "text": "bleeds like memory leaks that are",
    "start": "1574520",
    "end": "1576799"
  },
  {
    "text": "progressing over a period of time a",
    "start": "1576799",
    "end": "1580100"
  },
  {
    "text": "profile makes it very easy to analyze",
    "start": "1580100",
    "end": "1582880"
  },
  {
    "text": "these kinds of",
    "start": "1582880",
    "end": "1585640"
  },
  {
    "text": "slow bleeds that are there but you could",
    "start": "1585640",
    "end": "1588980"
  },
  {
    "text": "also have a detection mechanisms that",
    "start": "1588980",
    "end": "1592460"
  },
  {
    "text": "are put in place where you detect such a",
    "start": "1592460",
    "end": "1594620"
  },
  {
    "text": "scenario and maybe you roll back to the",
    "start": "1594620",
    "end": "1599720"
  },
  {
    "text": "last stable build",
    "start": "1599720",
    "end": "1601700"
  },
  {
    "text": "and this also and",
    "start": "1601700",
    "end": "1603820"
  },
  {
    "text": "you can given that you can view profiles",
    "start": "1603820",
    "end": "1608539"
  },
  {
    "text": "across various time periods it also",
    "start": "1608539",
    "end": "1610760"
  },
  {
    "text": "gives you the opportunity to compare",
    "start": "1610760",
    "end": "1612799"
  },
  {
    "text": "okay where exactly do you think that the",
    "start": "1612799",
    "end": "1616220"
  },
  {
    "text": "memory leak will be and things like that",
    "start": "1616220",
    "end": "1618820"
  },
  {
    "text": "uh so three click RCA so an RCA is a",
    "start": "1618820",
    "end": "1621919"
  },
  {
    "text": "root cause analysis",
    "start": "1621919",
    "end": "1624020"
  },
  {
    "text": "um with the the concept of exemplars uh",
    "start": "1624020",
    "end": "1627200"
  },
  {
    "text": "in metrics it is now possible for us to",
    "start": "1627200",
    "end": "1629960"
  },
  {
    "text": "say start from an alert uh view a metric",
    "start": "1629960",
    "end": "1634419"
  },
  {
    "text": "click on an Exemplar that's there on a",
    "start": "1634419",
    "end": "1637159"
  },
  {
    "text": "metric and then you can go to a trace",
    "start": "1637159",
    "end": "1639020"
  },
  {
    "text": "and then from a trace you can go to",
    "start": "1639020",
    "end": "1642700"
  },
  {
    "text": "blogs so that's typically what's dubbed",
    "start": "1642700",
    "end": "1645919"
  },
  {
    "text": "as a three click RCA but with the Advent",
    "start": "1645919",
    "end": "1648020"
  },
  {
    "text": "of profiles",
    "start": "1648020",
    "end": "1649760"
  },
  {
    "text": "you could even say take it a step",
    "start": "1649760",
    "end": "1651620"
  },
  {
    "text": "further to say that",
    "start": "1651620",
    "end": "1654100"
  },
  {
    "text": "when you're on the trace as long as the",
    "start": "1654100",
    "end": "1657880"
  },
  {
    "text": "trace has a reference to a profile you",
    "start": "1657880",
    "end": "1662659"
  },
  {
    "text": "can go from alert to metric to trace to",
    "start": "1662659",
    "end": "1666320"
  },
  {
    "text": "profile and then you can start observing",
    "start": "1666320",
    "end": "1669380"
  },
  {
    "text": "what things are happening at a method",
    "start": "1669380",
    "end": "1672020"
  },
  {
    "text": "level",
    "start": "1672020",
    "end": "1673159"
  },
  {
    "text": "um so this should in theory help Drive",
    "start": "1673159",
    "end": "1677720"
  },
  {
    "text": "reduction in the time to triage",
    "start": "1677720",
    "end": "1680720"
  },
  {
    "text": "uh and the final one which we felt the",
    "start": "1680720",
    "end": "1684559"
  },
  {
    "text": "most value in our uh uh limited but uh",
    "start": "1684559",
    "end": "1688220"
  },
  {
    "text": "powerful way of using convenience",
    "start": "1688220",
    "end": "1690620"
  },
  {
    "text": "profiling uh is to see continuous cost",
    "start": "1690620",
    "end": "1693620"
  },
  {
    "text": "savings uh whenever we write new code or",
    "start": "1693620",
    "end": "1697940"
  },
  {
    "text": "even just sit with a cup of coffee and",
    "start": "1697940",
    "end": "1700820"
  },
  {
    "text": "look at how things are behaving on our",
    "start": "1700820",
    "end": "1703880"
  },
  {
    "text": "production environment it give the these",
    "start": "1703880",
    "end": "1706220"
  },
  {
    "text": "profiles give us the opportunity to",
    "start": "1706220",
    "end": "1709400"
  },
  {
    "text": "really get down and optimize uh optimize",
    "start": "1709400",
    "end": "1712279"
  },
  {
    "text": "the code and this means that we are",
    "start": "1712279",
    "end": "1714980"
  },
  {
    "text": "going to reduce the amount of CPU and",
    "start": "1714980",
    "end": "1716600"
  },
  {
    "text": "memory we are utilizing",
    "start": "1716600",
    "end": "1718960"
  },
  {
    "text": "and",
    "start": "1718960",
    "end": "1721419"
  },
  {
    "text": "in turn we are not wasting resources",
    "start": "1721419",
    "end": "1726679"
  },
  {
    "text": "so that being said we are happy to take",
    "start": "1728539",
    "end": "1731299"
  },
  {
    "text": "questions offline",
    "start": "1731299",
    "end": "1733779"
  },
  {
    "text": "and thank you very much for your time",
    "start": "1733779",
    "end": "1737980"
  },
  {
    "text": "thank you",
    "start": "1738200",
    "end": "1740799"
  }
]