[
  {
    "start": "0",
    "end": "51000"
  },
  {
    "text": "here to talk about API authorization a little bit about myself before we start um I've been doing",
    "start": "120",
    "end": "6640"
  },
  {
    "text": "software for Developers for well over 30 years uh I helped uh co-found the net",
    "start": "6640",
    "end": "12120"
  },
  {
    "text": "team back at Microsoft later on uh the Azure project as well where I was the general manager for a bunch of teams but",
    "start": "12120",
    "end": "19400"
  },
  {
    "text": "one team that was uh became the Azure active directory team that's where I got my taste for identity and access um and",
    "start": "19400",
    "end": "26519"
  },
  {
    "text": "over the last you know I would say 12 13 years I've been working in the open source world uh first on things like",
    "start": "26519",
    "end": "32480"
  },
  {
    "text": "openstack and Cloud Foundry later on on kubernetes uh and puppet and uh I love",
    "start": "32480",
    "end": "38399"
  },
  {
    "text": "startups Aero is my third one and when I'm not start uping I'm skiing and I'm actually really sore that",
    "start": "38399",
    "end": "46640"
  },
  {
    "text": "uh Park city is opening one week from Friday so I'm missing it by a week all",
    "start": "46640",
    "end": "52199"
  },
  {
    "start": "51000",
    "end": "255000"
  },
  {
    "text": "right so first uh little primer who knows the difference between authentication and",
    "start": "52199",
    "end": "58480"
  },
  {
    "text": "authorization all right I won't have to belabor this point most people call this oth and don't differentiate",
    "start": "58480",
    "end": "63760"
  },
  {
    "text": "authentication is did the user prove that they are who they say they are back when I started in this industry was",
    "start": "63760",
    "end": "68799"
  },
  {
    "text": "always a user ID and a password now it's like magic links and you know pass Keys",
    "start": "68799",
    "end": "74040"
  },
  {
    "text": "Biometrics and so on and so forth um whereas authorization is what can the",
    "start": "74040",
    "end": "79439"
  },
  {
    "text": "user do inside of your application what permissions do they have now that they're logged in authentication fairly",
    "start": "79439",
    "end": "86040"
  },
  {
    "text": "mature space again uh you know 20 years ago we had s uh some of my teams worked on saml back",
    "start": "86040",
    "end": "92560"
  },
  {
    "text": "when I was at Microsoft we've had open ID connect for 11 years now OA 2 for",
    "start": "92560",
    "end": "98000"
  },
  {
    "text": "about 15 mature space and you have a set of developer services that make it so",
    "start": "98000",
    "end": "103720"
  },
  {
    "text": "that you don't have to build authentication you can choose Cognito or ozero or OCTA or uh Azure active",
    "start": "103720",
    "end": "111600"
  },
  {
    "text": "directory this is a solved problem whereas authorization not a solved",
    "start": "111600",
    "end": "117079"
  },
  {
    "text": "problem so what are the standards for authorization what's the open ID connect for authorization",
    "start": "117079",
    "end": "123200"
  },
  {
    "text": "anybody there's none right uh now a hat tip to a talk that I'm giving tomorrow",
    "start": "123200",
    "end": "129360"
  },
  {
    "text": "which is called open ID ozen the open ID connect of authorization uh we're trying",
    "start": "129360",
    "end": "135200"
  },
  {
    "text": "to actually go build uh a standard like open ID connect for authorization but it's still obviously in its infancy",
    "start": "135200",
    "end": "141599"
  },
  {
    "text": "developer Services anybody can tell me what is the off zero of",
    "start": "141599",
    "end": "146920"
  },
  {
    "text": "authorization nobody because there isn't any there are half a dozen startups like ours like Aero that are trying to go",
    "start": "146920",
    "end": "153959"
  },
  {
    "text": "build one of those things but again it's an early space so the bottom line is that everybody has had to build their",
    "start": "153959",
    "end": "160680"
  },
  {
    "text": "own everybody rolls their own and there are a bunch of problems associated with that first of all first and foremost bad",
    "start": "160680",
    "end": "166720"
  },
  {
    "text": "security I'll get back to that in a second the second is as you roll out a microservices architecture you have a",
    "start": "166720",
    "end": "172159"
  },
  {
    "text": "bunch of inconsistency every microservices does it differently super hard to Wrangle all that complexity and",
    "start": "172159",
    "end": "177800"
  },
  {
    "text": "then the third is opportunity cost you're doing a bunch of undifferentiated heavy lifting building authorization",
    "start": "177800",
    "end": "184239"
  },
  {
    "text": "into each one of these apis or applications instead of using something off the shelf and back to security um",
    "start": "184239",
    "end": "191440"
  },
  {
    "text": "don't take my word for it the oasp which is the organization that looks at all the vulnerabilities and web applications",
    "start": "191440",
    "end": "198799"
  },
  {
    "text": "ranks broken access control as the number one on their top 10 list of",
    "start": "198799",
    "end": "204200"
  },
  {
    "text": "vulnerabilities uh they estimate that are whopping 94% of the applications that they test",
    "start": "204200",
    "end": "209519"
  },
  {
    "text": "exist IIT some form of broken access control so a real problem now it's not all doom and gloom uh we finally are",
    "start": "209519",
    "end": "216080"
  },
  {
    "text": "seeing the you know moment for authorization starting with all the tech companies so Google back in 2020 wrote a",
    "start": "216080",
    "end": "223360"
  },
  {
    "text": "paper called zanbar which was a seminal paper it's kind of like the map reduce paper but for authorization and in it",
    "start": "223360",
    "end": "229799"
  },
  {
    "text": "they describe how they do authorization for all the Google properties like Google Docs Google Drive you know Google",
    "start": "229799",
    "end": "236000"
  },
  {
    "text": "Calendar uh cloud and so on and so forth a bunch of other companies followed suits so Airbnb wrote about theirs in it",
    "start": "236000",
    "end": "242959"
  },
  {
    "text": "Netflix Uber Reddit Carta they all wrote about their authorization uh systems and",
    "start": "242959",
    "end": "248720"
  },
  {
    "text": "we've now been able to glean some patterns and in our attempt to democratize it for everybody else so let",
    "start": "248720",
    "end": "255400"
  },
  {
    "start": "255000",
    "end": "348000"
  },
  {
    "text": "me contrast what we call Cloud native authorization against what the current state of the world is or traditional or",
    "start": "255400",
    "end": "262240"
  },
  {
    "text": "old school authorization across three axes the What the how and the when so what you're authorizing in course in in",
    "start": "262240",
    "end": "270199"
  },
  {
    "text": "a traditional authorization is typically a tenant you're a viewer on a tenant you that means that you have access to all",
    "start": "270199",
    "end": "276440"
  },
  {
    "text": "the resources in the tenant you write the enforcement logic using IF and switch statements that basically look at",
    "start": "276440",
    "end": "282960"
  },
  {
    "text": "Scopes that you've stuck in your access token and figure out whether you know like that particular user has that scope",
    "start": "282960",
    "end": "289160"
  },
  {
    "text": "if they don't then you uh deny the operation and you do the C like you figure out whether the user is",
    "start": "289160",
    "end": "295800"
  },
  {
    "text": "authorized or not at login time right so like during l in you know you figure out what Scopes to put in an access token",
    "start": "295800",
    "end": "302440"
  },
  {
    "text": "and then that token is good for a couple hours or a couple of days and that user has that permission because that user",
    "start": "302440",
    "end": "308280"
  },
  {
    "text": "has a bearer token um the cloud native version of this is fine grained policy",
    "start": "308280",
    "end": "314280"
  },
  {
    "text": "based and real time I'm going to repeat those words a lot in this presentation fine grain means meaning not at the",
    "start": "314280",
    "end": "319960"
  },
  {
    "text": "tenant level but at the resource level does this user have this permission on this document right policy based meaning",
    "start": "319960",
    "end": "326479"
  },
  {
    "text": "we're extracting all those if and switch statements out of the application logic and expressing them in a domain specific",
    "start": "326479",
    "end": "333440"
  },
  {
    "text": "language um and that enables separation of Duties and then lastly real time we",
    "start": "333440",
    "end": "339759"
  },
  {
    "text": "want to make sure that permissions are evaluated right before you grant or deny access to a protected resource",
    "start": "339759",
    "end": "346199"
  },
  {
    "text": "continuous enforcement so let's go into these three things in a little bit more detail so",
    "start": "346199",
    "end": "352880"
  },
  {
    "text": "the evolution of fine grade Access Control I'm old enough to remember the 80s where we had Unix systems and you",
    "start": "352880",
    "end": "358479"
  },
  {
    "text": "had nine bits on the resources that you authorized those resources were files or iodes uh and so you had read write and",
    "start": "358479",
    "end": "365639"
  },
  {
    "text": "execute bits across user uh group and other and that was all of the scope all",
    "start": "365639",
    "end": "370840"
  },
  {
    "text": "of the fine gradness that you had on authorization uh everything was a file so that was your system and you were",
    "start": "370840",
    "end": "377039"
  },
  {
    "text": "kind of stuck with it uh it was kind of complicated because auditing every file that users had access to was like not",
    "start": "377039",
    "end": "383599"
  },
  {
    "text": "really a practical matter um from that we had we uh had an evolution into arbac",
    "start": "383599",
    "end": "389560"
  },
  {
    "text": "ro-based Access Control where the idea was you had a directory like an ldap directory or active directory that had a",
    "start": "389560",
    "end": "396199"
  },
  {
    "text": "bunch of groups and users had um you know were members of those groups and typically in a business application like",
    "start": "396199",
    "end": "402360"
  },
  {
    "text": "sap you figured out whether the user had a particular role by asking whether it was a member of an ldap group um it",
    "start": "402360",
    "end": "409720"
  },
  {
    "text": "helped but it turned out that um you had what's called role explosion in that world when I left Microsoft in 2011 we",
    "start": "409720",
    "end": "417919"
  },
  {
    "text": "had 100,000 employees anybody Venture a guess on how many groups we had when I left",
    "start": "417919",
    "end": "424360"
  },
  {
    "text": "Microsoft 300,000 very good guesses very good guesses but it was impossible to",
    "start": "424360",
    "end": "430000"
  },
  {
    "text": "know who had access to what out of that came the fine grained approaches so in",
    "start": "430000",
    "end": "435160"
  },
  {
    "text": "the 20 2020s you had exaco which represented the U you know the the new",
    "start": "435160",
    "end": "441280"
  },
  {
    "text": "world of attribute based Access Control exaco was a sister spec to samel but uh",
    "start": "441280",
    "end": "446440"
  },
  {
    "text": "who has heard of xacml no one exactly oh one one person",
    "start": "446440",
    "end": "451680"
  },
  {
    "text": "excellent because exact mod didn't exactly take the World by storm but the idea was you have attributes on users",
    "start": "451680",
    "end": "457120"
  },
  {
    "text": "attributes on resources you could write a policy and so this worked if you had things like top secret attributes on a",
    "start": "457120",
    "end": "463440"
  },
  {
    "text": "resource on a document and a top secret clearance you could match that up and figure out that this user yes had access",
    "start": "463440",
    "end": "469800"
  },
  {
    "text": "to that document the problem was that most applications didn't share attributes so you had attribute",
    "start": "469800",
    "end": "475199"
  },
  {
    "text": "explosion and finally you have What's called the relationship based Access Control model which is what Google repop",
    "start": "475199",
    "end": "481879"
  },
  {
    "text": "poiz with it zanar paper and the idea there is that you model um these uh",
    "start": "481879",
    "end": "487840"
  },
  {
    "text": "subjects and objects as a graph and you evaluate permissions based on uh relationships between subjects and",
    "start": "487840",
    "end": "494319"
  },
  {
    "text": "objects by walking that graph and finding a path that carries that permission between the subject and the",
    "start": "494319",
    "end": "500120"
  },
  {
    "text": "object so uh does Eve have access to this document well Eve if Eve is in this group and this group has viewer access",
    "start": "500120",
    "end": "506960"
  },
  {
    "text": "to this folder and this document is inside this folder then yes Eve has access to this document we'll get back",
    "start": "506960",
    "end": "513518"
  },
  {
    "text": "to ABAC and reback later because those are the main uh ecosystems within the cloud native authorization world but",
    "start": "513519",
    "end": "520680"
  },
  {
    "start": "520000",
    "end": "600000"
  },
  {
    "text": "first let's talk about policy based Access Control uh so the idea here as I said Is Lifting Access Control logic out",
    "start": "520680",
    "end": "526920"
  },
  {
    "text": "of the application and expressing it in its own domain specific language here I",
    "start": "526920",
    "end": "532040"
  },
  {
    "text": "have an example of an Opa policy I hope people can see this uh Opa has a",
    "start": "532040",
    "end": "537200"
  },
  {
    "text": "language called Rego uh it is the surface Syntax for Opa and topaz and this policy basically says allow the",
    "start": "537200",
    "end": "544680"
  },
  {
    "text": "operation if the uh users Department property is operations super simple",
    "start": "544680",
    "end": "550320"
  },
  {
    "text": "policy uh but what that enables you to do is take all of those if and switch statements out of your code and instead",
    "start": "550320",
    "end": "557519"
  },
  {
    "text": "encapsulate them in middleware that can call an externalized authorization processor and answer to the question",
    "start": "557519",
    "end": "564200"
  },
  {
    "text": "does this user have this permission on this resource um and it gives you a bunch of benefits uh you can store an",
    "start": "564200",
    "end": "571399"
  },
  {
    "text": "version of policy just like application is code this is why this is called policy is code every policy change is",
    "start": "571399",
    "end": "576959"
  },
  {
    "text": "part of a git log uh change log a git change log the policy can be evolved",
    "start": "576959",
    "end": "582320"
  },
  {
    "text": "separately by uh a team that can reason about all of the different policies for all the microservices and finally you",
    "start": "582320",
    "end": "588959"
  },
  {
    "text": "can build these policies into mutable images you can sign them you can practice a secure software supply chain",
    "start": "588959",
    "end": "594880"
  },
  {
    "text": "on them just so you can infrastructure as code or anything that's an oci image",
    "start": "594880",
    "end": "600040"
  },
  {
    "start": "600000",
    "end": "707000"
  },
  {
    "text": "the last practice is real-time access checks so we like to say done correctly",
    "start": "600040",
    "end": "605120"
  },
  {
    "text": "authorization is a distributed systems problem why because unlike login which",
    "start": "605120",
    "end": "610440"
  },
  {
    "text": "happens once a session so it can it can take 500 milliseconds a second you",
    "start": "610440",
    "end": "616440"
  },
  {
    "text": "amortize that over the entire session authorization on the other hand is in the critical path of every application",
    "start": "616440",
    "end": "623760"
  },
  {
    "text": "request so you can't take a 100 millisecond or even a 50 millisecond network round trip to find out whether a",
    "start": "623760",
    "end": "629320"
  },
  {
    "text": "user has a permission on a resource that authorizer has to run close to your application that means it's either",
    "start": "629320",
    "end": "635920"
  },
  {
    "text": "deployed as a sidecar if you need a millisecond authorization latency that's your budget or maybe you know like it's",
    "start": "635920",
    "end": "643040"
  },
  {
    "text": "deployed as a microservice in the same the same region the same kubernetes cluster if you're okay with 10",
    "start": "643040",
    "end": "648800"
  },
  {
    "text": "milliseconds um but you know everything all the decisions have to be computed over local data at the same time you",
    "start": "648800",
    "end": "655639"
  },
  {
    "text": "want to authorize locally but manage centrally you want a central control plan to manage all the artifacts uh that",
    "start": "655639",
    "end": "661959"
  },
  {
    "text": "are used for authorization so as an example users groups group memberships the source of Truth for that is an",
    "start": "661959",
    "end": "668160"
  },
  {
    "text": "identity provider you want to be able to flow any changes all the way out to the edge authorizers so that they have uh",
    "start": "668160",
    "end": "674360"
  },
  {
    "text": "all the up-to-date information likewise policies are stored in versions in Source control you want to build them",
    "start": "674360",
    "end": "680680"
  },
  {
    "text": "into immutable images and then distribute them to all of the uh Edge authorizers and lastly I'm not going to",
    "start": "680680",
    "end": "686480"
  },
  {
    "text": "touch too much on this topic but it's an important topic decision logs fine grain decision logs basically allow you to",
    "start": "686480",
    "end": "693000"
  },
  {
    "text": "find out everything that a user did uh and those are super important for compliance and forensics you want to be",
    "start": "693000",
    "end": "699360"
  },
  {
    "text": "able to centralize those into the control plan as well so again done correctly uh authorization is a",
    "start": "699360",
    "end": "705279"
  },
  {
    "text": "distributed systems problem so now let me talk about the State of Affairs today",
    "start": "705279",
    "end": "710839"
  },
  {
    "start": "707000",
    "end": "868000"
  },
  {
    "text": "the state of the ecosystem in Cloud native authorization and what the open source landscape is we have two centers",
    "start": "710839",
    "end": "716880"
  },
  {
    "text": "of gravity the policy is code camp which is the aback Camp the open policy agent",
    "start": "716880",
    "end": "722480"
  },
  {
    "text": "is basically the torch bear for that uh you know that world it's the uh successor to exaco and there's a lot to",
    "start": "722480",
    "end": "729519"
  },
  {
    "text": "like about it it's a mature graduated open- Source uh cncf project that's been",
    "start": "729519",
    "end": "734800"
  },
  {
    "text": "graduated for three and a half years now uh it's a general purpose flexible engine and uh it really is uh tailor",
    "start": "734800",
    "end": "742000"
  },
  {
    "text": "made for ABAC but there are some ad uh disadvantages too uh first of all the language Rego has a little bit of a high",
    "start": "742000",
    "end": "748839"
  },
  {
    "text": "learning curve around it uh it gives you it has no opinions so it doesn't give you any help in modeling your domain and",
    "start": "748839",
    "end": "756240"
  },
  {
    "text": "lastly um it has a good policy plane but it really has no data plane so figuring",
    "start": "756240",
    "end": "761839"
  },
  {
    "text": "out how to bring data to the engine is an exercise left to the reader uh that's a big problem um Alternatives here",
    "start": "761839",
    "end": "768120"
  },
  {
    "text": "include casbin which is a favorite uh go uh project uh Cedar which comes out of",
    "start": "768120",
    "end": "774519"
  },
  {
    "text": "uh the AWS folks and a few others the policy is data Camp is the opposite",
    "start": "774519",
    "end": "779680"
  },
  {
    "text": "whereas policy is code ABAC systems are mostly stateless policy is data reback",
    "start": "779680",
    "end": "784800"
  },
  {
    "text": "says no authorization is all about the state the relationships between the subjects and objects need to be stored",
    "start": "784800",
    "end": "791240"
  },
  {
    "text": "by the authorizer it's got almost the opposite trade-offs right so first of all it's a very opinionated model uh Opa",
    "start": "791240",
    "end": "798079"
  },
  {
    "text": "has no opinions zanar is very opinionated and it's really tailor made for being able to answer questions like",
    "start": "798079",
    "end": "803199"
  },
  {
    "text": "the Google drive question does this user have read permission on this particular document by mod modeling all of these",
    "start": "803199",
    "end": "810040"
  },
  {
    "text": "resources including parents and containment and and so on and so forth uh on the negative side Google didn't",
    "start": "810040",
    "end": "817320"
  },
  {
    "text": "open source anything they didn't even write a spec they wrote a technical report and so there are half a dozen",
    "start": "817320",
    "end": "823399"
  },
  {
    "text": "competing open source implementations uh around how to do Zanzibar each one of them has a different schema language and",
    "start": "823399",
    "end": "829040"
  },
  {
    "text": "a data language and it's kind of hard to go outside of the strict reback model",
    "start": "829040",
    "end": "834120"
  },
  {
    "text": "few Alternatives here open fga is one of them uh that's a cncf Sandbox project but but um I'm partial to Topaz which is",
    "start": "834120",
    "end": "841880"
  },
  {
    "text": "in full disclosure the project that my company sponsors and is the maintainer of topaz we like to say is the best of",
    "start": "841880",
    "end": "848079"
  },
  {
    "text": "both worlds we're seeing that uh you know kind of that technique emerge you you you don't want to ask uh you know do",
    "start": "848079",
    "end": "854959"
  },
  {
    "text": "I need this or that you want you actually need both of them you want Opa as the aback side and you want a",
    "start": "854959",
    "end": "860560"
  },
  {
    "text": "Zanzibar style directory we've linked them both together into a single open source project and I'm going to use that",
    "start": "860560",
    "end": "866120"
  },
  {
    "text": "uh for the demos naturally here um before I get to the demo I want to go through um you know one last thing here",
    "start": "866120",
    "end": "872880"
  },
  {
    "start": "868000",
    "end": "995000"
  },
  {
    "text": "which is discussion of enforcement points okay so externalized my authorization got it where do I actually",
    "start": "872880",
    "end": "879480"
  },
  {
    "text": "call this thing from right so you know the first thing is during the authentication ceremony yes I poo pooed",
    "start": "879480",
    "end": "886560"
  },
  {
    "text": "the idea of using Scopes in Access tokens as permissions and yes I don't Advocate that that is a best practice",
    "start": "886560",
    "end": "893519"
  },
  {
    "text": "but that is a common practice and that's your first line of defense in a zero trust defensive in depth architecture so",
    "start": "893519",
    "end": "900320"
  },
  {
    "text": "the first thing that you can do your react app can as it's you know logging in it can talk to you know the identity",
    "start": "900320",
    "end": "906480"
  },
  {
    "text": "provider that can call a topaz authorizer get back a set of Scopes to",
    "start": "906480",
    "end": "911639"
  },
  {
    "text": "put in the access token and put that in the JWT now that that's done the second",
    "start": "911639",
    "end": "916880"
  },
  {
    "text": "line of defense is the API Gateway so you're going to make a call using the jot into uh the API gway that's where",
    "start": "916880",
    "end": "924320"
  },
  {
    "text": "it's going to be intercepted by a filter and you can basically then check whether",
    "start": "924320",
    "end": "929440"
  },
  {
    "text": "this user can execute or can invoke this particular endpoint so this is what I",
    "start": "929440",
    "end": "935079"
  },
  {
    "text": "call medium grained authorization you don't have you know kind of like it's not as fine grained as a resource level",
    "start": "935079",
    "end": "941279"
  },
  {
    "text": "but at least it gives you the ability to uh consistently enforce whether users can invoke uh these endpoints in your um",
    "start": "941279",
    "end": "949399"
  },
  {
    "text": "in your uh across your API estate right and typically this is made easier",
    "start": "949399",
    "end": "954680"
  },
  {
    "text": "because you have a machine readable description like an open API spec or a protobot for something uh for your",
    "start": "954680",
    "end": "960480"
  },
  {
    "text": "service and lastly if that check passes you can then um forward that request to",
    "start": "960480",
    "end": "966720"
  },
  {
    "text": "the you know the service the API typically you'll abstract um you know kind of that authorization call using",
    "start": "966720",
    "end": "973199"
  },
  {
    "text": "middleware from one of your uh Native languages and then that middle wear will call an external uh authorization system",
    "start": "973199",
    "end": "980759"
  },
  {
    "text": "like topaz uh this time passing the jot as the identity and ask whether this",
    "start": "980759",
    "end": "986360"
  },
  {
    "text": "identity has this permission on this particular resource get an answer back and then allow uh or deny access to that",
    "start": "986360",
    "end": "993120"
  },
  {
    "text": "uh that that particular operation so with that said um I'm going to demo how",
    "start": "993120",
    "end": "998519"
  },
  {
    "text": "to do this at the API level uh as opposed to the the the you know kind of the application Level you can abstract",
    "start": "998519",
    "end": "1005279"
  },
  {
    "text": "what it looks like for the application I have a QR code here by the way if people want to follow along there's a video for",
    "start": "1005279",
    "end": "1011199"
  },
  {
    "text": "this and there's a set of resources on on how to do this but the first thing that we're going to do is import an open",
    "start": "1011199",
    "end": "1016959"
  },
  {
    "text": "API spec um which will uh basically bring in all of the end points uh from",
    "start": "1016959",
    "end": "1024480"
  },
  {
    "text": "that open API spec and basically make that that reback data relationship based data um the second thing we're going to",
    "start": "1024480",
    "end": "1031400"
  },
  {
    "text": "do is set up a set of relationships we're going to have some protagonists uh you know we like Rick and Morty so Rick",
    "start": "1031400",
    "end": "1036720"
  },
  {
    "text": "is going to be the Evil Genius and uh Morty is going to be his Grand grandson",
    "start": "1036720",
    "end": "1042480"
  },
  {
    "text": "sidekick uh and we're going to set up these relationships that'll essentially entitle users or groups to access uh",
    "start": "1042480",
    "end": "1050400"
  },
  {
    "text": "these these endpoints and lastly we're going to enforce from the Gateway we picked zupo as an API Gateway it's a",
    "start": "1050400",
    "end": "1056240"
  },
  {
    "text": "modern API Gateway it's also open API native but you can do this with pretty much anything great so I'm going to get",
    "start": "1056240",
    "end": "1063000"
  },
  {
    "text": "out of the slide deck here switch over to oh yeah I got logged out this is when",
    "start": "1063000",
    "end": "1069400"
  },
  {
    "text": "we see whether the conference Wi-Fi works or not and it does I think I",
    "start": "1069400",
    "end": "1076080"
  },
  {
    "text": "hope uh or not okay great so um I've already instantiated one of our uh",
    "start": "1076080",
    "end": "1082360"
  },
  {
    "text": "templates here um I'm using the assero U manage control plan here but you can use",
    "start": "1082360",
    "end": "1088000"
  },
  {
    "text": "topaz the open source uh project uh it has the same exact UI um I have I get B",
    "start": "1088000",
    "end": "1094840"
  },
  {
    "text": "basically a policy instance that policy instance has some Rego in it so it's the",
    "start": "1094840",
    "end": "1100400"
  },
  {
    "text": "simplest possible Rego it basically allows uh the operation by delegating to",
    "start": "1100400",
    "end": "1105880"
  },
  {
    "text": "the Zanzibar the reback processor and more uh more importantly I can actually",
    "start": "1105880",
    "end": "1111240"
  },
  {
    "text": "go add a uh I can import an open API spec here I have a uh open API spec for",
    "start": "1111240",
    "end": "1117799"
  },
  {
    "text": "a to-do application I'm going to actually grab the raw URL for that uh go",
    "start": "1117799",
    "end": "1123840"
  },
  {
    "text": "paste it in here call this service cubec con uh to do could everybody see this by",
    "start": "1123840",
    "end": "1130440"
  },
  {
    "text": "the way resolution Wise It's good okay excellent um so it's found uh a number",
    "start": "1130440",
    "end": "1136200"
  },
  {
    "text": "of different endpoints uh I'm actually not going to import these twice I already have them in here uh but what",
    "start": "1136200",
    "end": "1141280"
  },
  {
    "text": "that uh will do is it will populate uh the model and we've basically have uh an",
    "start": "1141280",
    "end": "1148280"
  },
  {
    "text": "API authorization model that has a couple of resource types one is a service and the other one is an endpoint",
    "start": "1148280",
    "end": "1155200"
  },
  {
    "text": "it's actually easier to for developers to read this uh using the AML as opposed",
    "start": "1155200",
    "end": "1160240"
  },
  {
    "text": "to the graph here uh so a service has a set of permissions and a set of relationships that Grant those",
    "start": "1160240",
    "end": "1165960"
  },
  {
    "text": "permissions through an algebra uh and then and an endpoint also has a permission called can invoke which is",
    "start": "1165960",
    "end": "1172000"
  },
  {
    "text": "granted through a set of either directly through an invoker relationship or through the parent relationship the",
    "start": "1172000",
    "end": "1177799"
  },
  {
    "text": "parent service relationships um and we have a set of objects that we imported",
    "start": "1177799",
    "end": "1183640"
  },
  {
    "text": "so first of all we have a set of services here uh we have a pet store API we have a to-do list API we're going to",
    "start": "1183640",
    "end": "1189000"
  },
  {
    "text": "deal with a to-do list here it has uh the six end points that I just showed uh deleting to-dos and uh you know getting",
    "start": "1189000",
    "end": "1195960"
  },
  {
    "text": "to-dos creating new to-dos and so on um and then finally we have a set of users so the users uh have been entitled in a",
    "start": "1195960",
    "end": "1203640"
  },
  {
    "text": "particular manner so Rick for example is the e evil genius so he's a direct member of the global deleters group that",
    "start": "1203640",
    "end": "1209960"
  },
  {
    "text": "has basically all of the HTTP methods um you know across all these uh these apis",
    "start": "1209960",
    "end": "1215520"
  },
  {
    "text": "including the to-do list uh and so on and so forth and then um uh Morty he's",
    "start": "1215520",
    "end": "1221559"
  },
  {
    "text": "not a super user he is just a regular user uh he's me a member of the editor",
    "start": "1221559",
    "end": "1227159"
  },
  {
    "text": "group the editor group is is a member of the viewer group The viewer group has uh read access to all the to-do list API so",
    "start": "1227159",
    "end": "1233919"
  },
  {
    "text": "this is how you can actually go entitle users um now finally let's go to our U",
    "start": "1233919",
    "end": "1240280"
  },
  {
    "text": "zupo portal which is you know kind of the API Gateway that I chose to do this uh this demo with and we're going to try",
    "start": "1240280",
    "end": "1247000"
  },
  {
    "text": "to invoke uh the first thing I did was I set up a filter here uh which calls out",
    "start": "1247000",
    "end": "1252039"
  },
  {
    "text": "to the assero system um right before granting or denying access to that particular uh request so I'm I'm going",
    "start": "1252039",
    "end": "1258799"
  },
  {
    "text": "to go invoke this particular API uh using first of all Rick's bear token now remember Rick is the Evil Genius so he",
    "start": "1258799",
    "end": "1266000"
  },
  {
    "text": "can do everything I'll go click on test here and we got a 200 okay uh if I use",
    "start": "1266000",
    "end": "1271559"
  },
  {
    "text": "Mor's uh bear token here uh and try to do the same thing that should fail with a 403",
    "start": "1271559",
    "end": "1278400"
  },
  {
    "text": "because Morty is not a Evil Genius a global deleter but you know oh like let's go demonstrate what realtime",
    "start": "1278400",
    "end": "1285200"
  },
  {
    "text": "authorization looks like let's entitle Morty to uh break the glass access",
    "start": "1285200",
    "end": "1290440"
  },
  {
    "text": "against this API so I'm going to go find the delete API here here it is um I'm",
    "start": "1290440",
    "end": "1296200"
  },
  {
    "text": "going to make Morty I could make Morty uh one of the groups that Morty is a member of uh uh an invoker of this but",
    "start": "1296200",
    "end": "1303679"
  },
  {
    "text": "I'm going to actually entitle Morty himself I'm going to add this relationship I'm going to go back to the zupo portal I'm going to click test",
    "start": "1303679",
    "end": "1310559"
  },
  {
    "text": "again and sure enough I have a 200 okay so you know I very easily was able to in",
    "start": "1310559",
    "end": "1317039"
  },
  {
    "text": "real time authorize more on this particular API and and likewise I can go",
    "start": "1317039",
    "end": "1322159"
  },
  {
    "text": "with one click of a button here or a API call uh more likely revoke access for",
    "start": "1322159",
    "end": "1327520"
  },
  {
    "text": "Morty I can go click cont test again and of course now he is forbidden now why is",
    "start": "1327520",
    "end": "1333640"
  },
  {
    "text": "this a big deal it's a big deal because now all of the relationships are known to the system so I can actually ask all",
    "start": "1333640",
    "end": "1339640"
  },
  {
    "text": "sorts of governance um you know kind of questions let's find all the users that can access a particular endpoint so",
    "start": "1339640",
    "end": "1347039"
  },
  {
    "text": "let's go look at for the the same endpoint the delete endpoint that we just talked about uh and see who can",
    "start": "1347039",
    "end": "1352600"
  },
  {
    "text": "invoke it if I invoke that um it's just Rick right so and likewise I can ask the",
    "start": "1352600",
    "end": "1360320"
  },
  {
    "text": "exact opposite question for Beth for example what end points can she invoke I get back a list and of course",
    "start": "1360320",
    "end": "1368000"
  },
  {
    "text": "all of this is you know kind of something that you can automate um and use an API for so I can issue a curl",
    "start": "1368000",
    "end": "1375520"
  },
  {
    "text": "here and get back the same results so um you're basically you know you're starting to get a glimpse of how I can",
    "start": "1375520",
    "end": "1381640"
  },
  {
    "text": "create a whole workflow for all of my apis as they new open API specs drop I",
    "start": "1381640",
    "end": "1387760"
  },
  {
    "text": "can basically push the definitions out into a centralized authorization system",
    "start": "1387760",
    "end": "1392919"
  },
  {
    "text": "like topaz or acerto and entitle People based on group membership that they have in say my IDP that's basically the",
    "start": "1392919",
    "end": "1399640"
  },
  {
    "text": "workflow that I'm advocating for here so just to you know kind of bring this home",
    "start": "1399640",
    "end": "1404720"
  },
  {
    "text": "because I have only a couple minutes left um going through the what we call the principles of cloud native",
    "start": "1404720",
    "end": "1410320"
  },
  {
    "start": "1406000",
    "end": "1478000"
  },
  {
    "text": "authorization if you're trying to build one of these at home I strongly suggest you follow you know the following principles you want to make it fine",
    "start": "1410320",
    "end": "1416919"
  },
  {
    "text": "grained policy based real time we've already talked about those I won't um keep pushing on them you want to make it",
    "start": "1416919",
    "end": "1422799"
  },
  {
    "text": "centrally managed and you want to make sure they collect decision logs for compliance and forensics super important",
    "start": "1422799",
    "end": "1428960"
  },
  {
    "text": "uh for large uh large organizations and then from a non-functional perspective I",
    "start": "1428960",
    "end": "1434039"
  },
  {
    "text": "have requirements like you want to be able to authorize super simple uh so that it's easier for a developer to",
    "start": "1434039",
    "end": "1439720"
  },
  {
    "text": "actually use the middleware than to actually roll out their own you want it to integrate with everything you have",
    "start": "1439720",
    "end": "1444880"
  },
  {
    "text": "API gateways and identity providers and so on and so forth and lastly you want to make it based on open source and and",
    "start": "1444880",
    "end": "1451080"
  },
  {
    "text": "open Technologies like Opa topaz and oci so this is topaz this is the project",
    "start": "1451080",
    "end": "1457039"
  },
  {
    "text": "that I was quickly demoing here it's a QR code uh we like to say it's fast flexible and easy topaz does",
    "start": "1457039",
    "end": "1463720"
  },
  {
    "text": "authorization in under millisecond it's flexible it does all the backs a back R back reback or any combination and it's",
    "start": "1463720",
    "end": "1470799"
  },
  {
    "text": "uh easy to incorporate uh you bring it in in under 5 minutes or your next one's",
    "start": "1470799",
    "end": "1476039"
  },
  {
    "text": "free as you like to say um lastly uh I know that I don't really have time for",
    "start": "1476039",
    "end": "1481640"
  },
  {
    "start": "1478000",
    "end": "1519000"
  },
  {
    "text": "questions uh but if you want to find me here's a QR code with my schedule just schedule some time I'm given two other",
    "start": "1481640",
    "end": "1488000"
  },
  {
    "text": "talks uh one about ozen which I Ford referenced um you know uh a few minutes",
    "start": "1488000",
    "end": "1493919"
  },
  {
    "text": "ago one about the uh policy engines Showdown Friday at 2 p.m. you can find me uh at the uh cncf project kiosk area",
    "start": "1493919",
    "end": "1503440"
  },
  {
    "text": "17b on Thursday between 1:30 and 5:00 pm. uh and if you want to connect on slack or uh just you know schedule some",
    "start": "1503440",
    "end": "1510600"
  },
  {
    "text": "time outside of cucon those are my socials so thank you so much and have a great rest of your app",
    "start": "1510600",
    "end": "1517330"
  },
  {
    "text": "[Applause]",
    "start": "1517330",
    "end": "1521950"
  },
  {
    "start": "1519000",
    "end": "1825000"
  },
  {
    "text": "Devcon Mike back on all right any questions",
    "start": "1523080",
    "end": "1530320"
  },
  {
    "text": "nobody nobody really not all at the same time yes man with a red",
    "start": "1532159",
    "end": "1537279"
  },
  {
    "text": "shirt oh um all right you'll want to come up to the mic too so it gets recorded um so that demo you showed",
    "start": "1537279",
    "end": "1544480"
  },
  {
    "text": "where you could see who had permissions to so forth that was using the reback model but wasn't taking into account any",
    "start": "1544480",
    "end": "1549760"
  },
  {
    "text": "of the caveats that might be in the rioo is that correct that's exactly correct okay great you're exactly right now we",
    "start": "1549760",
    "end": "1556399"
  },
  {
    "text": "do have uh some work uh some some stuff in the works that will actually incorporate the what you call caveats",
    "start": "1556399",
    "end": "1563240"
  },
  {
    "text": "which is a spiceb term but you know what we call like the policy part of the",
    "start": "1563240",
    "end": "1568360"
  },
  {
    "text": "evaluation to be able to take that into account as well but that's a very asud observation the reback model allows you",
    "start": "1568360",
    "end": "1574279"
  },
  {
    "text": "to you know do searches on the graph um if you want to go outside of that then you know that's a more complicated",
    "start": "1574279",
    "end": "1580320"
  },
  {
    "text": "procedure yes so if I want to do this in a kind of B2B play is there a way to",
    "start": "1580320",
    "end": "1585880"
  },
  {
    "text": "make it so it's more multi-tenant so that each customer of mine has their own space to play in yes so we have a you",
    "start": "1585880",
    "end": "1593039"
  },
  {
    "text": "know every project every authorization system does it differently but Aero has a multi-tenant directory a multi-tenant",
    "start": "1593039",
    "end": "1599480"
  },
  {
    "text": "authorizer so that you can basically map uh every one of your customers tenant every one of your tenants as you know",
    "start": "1599480",
    "end": "1606159"
  },
  {
    "text": "your customers into uh an assero tenant that is isolated so you can run every",
    "start": "1606159",
    "end": "1611240"
  },
  {
    "text": "tenant can run its own model if you want to uh and its own policy if you want to as well okay not not to steal time but",
    "start": "1611240",
    "end": "1618480"
  },
  {
    "text": "just second question you gave a great example for a backend service which is the majority of what most of us do I get",
    "start": "1618480",
    "end": "1623520"
  },
  {
    "text": "that what if it is not a backend service what if it's um temporal or Pulsar or some other system not necessarily",
    "start": "1623520",
    "end": "1630640"
  },
  {
    "text": "service do you have Integrations for that great question um and the answer is",
    "start": "1630640",
    "end": "1636679"
  },
  {
    "text": "uh it it all depends so we for example built systems that will map that will",
    "start": "1636679",
    "end": "1642760"
  },
  {
    "text": "Shadow like say all the permissions in Google Drive so that you can do things",
    "start": "1642760",
    "end": "1648000"
  },
  {
    "text": "like like um retrieval augmented generation uh that takes permissions",
    "start": "1648000",
    "end": "1653039"
  },
  {
    "text": "into account and so there are Integrations you know with various systems we have uh you know an ETL open",
    "start": "1653039",
    "end": "1660279"
  },
  {
    "text": "source ETL pipeline called uh DS load that allows you to essentially flow uh",
    "start": "1660279",
    "end": "1666320"
  },
  {
    "text": "permission changes into the assort of directory so that you can keep those in sync but there's no magic here right",
    "start": "1666320",
    "end": "1672440"
  },
  {
    "text": "you're either going to have to uh you know kind of like have a source of Truth and then flow that into an extract",
    "start": "1672440",
    "end": "1678880"
  },
  {
    "text": "database that is your authorization system or you're going to treat your authorization system as the source of",
    "start": "1678880",
    "end": "1684720"
  },
  {
    "text": "Truth another question Yeah question um there we go y uh you showed uh",
    "start": "1684720",
    "end": "1692039"
  },
  {
    "text": "authorization at the API level for granting access and being able to invoke uh have you done anything with taking it",
    "start": "1692039",
    "end": "1698480"
  },
  {
    "text": "a step further where they would have access to invoke the API but may not have should not have access to certain",
    "start": "1698480",
    "end": "1704159"
  },
  {
    "text": "elements that would come back as part of a response from that API that's awesome question as well you can definitely put",
    "start": "1704159",
    "end": "1710240"
  },
  {
    "text": "a response filter and do some filtering um although I would say that the system that I demoed here is like supposed to",
    "start": "1710240",
    "end": "1717679"
  },
  {
    "text": "be lightweight and turny so that it really does things at the endpoint level we certainly have customers that have",
    "start": "1717679",
    "end": "1723360"
  },
  {
    "text": "written more sophisticated filters where they've even figured out the resource context from you know whether it's a",
    "start": "1723360",
    "end": "1729919"
  },
  {
    "text": "payload or whether it's a URL you know component or something like that maybe it's comes from a header and they're",
    "start": "1729919",
    "end": "1735760"
  },
  {
    "text": "able to go Corral that information make a call to the uh authorizer and actually",
    "start": "1735760",
    "end": "1741000"
  },
  {
    "text": "do fine grained access control and then do filtering on the way back so I would say the trade-offs on whether you do it",
    "start": "1741000",
    "end": "1746919"
  },
  {
    "text": "in the app or API itself or whether you do it at the Gateway are you know like",
    "start": "1746919",
    "end": "1752080"
  },
  {
    "text": "the Gateway is a big hammer right so the nice thing about the Gateway is you can enforce uh you know a layer of security",
    "start": "1752080",
    "end": "1758799"
  },
  {
    "text": "across all of your apis in a very consistent manner without having any access to the source code but really you",
    "start": "1758799",
    "end": "1765360"
  },
  {
    "text": "know in my opinion there's no substitute for actually having ultimately the the codee itself the API code itself do its",
    "start": "1765360",
    "end": "1772880"
  },
  {
    "text": "own uh fine gr authorization because only that code knows for sure what needs",
    "start": "1772880",
    "end": "1778720"
  },
  {
    "text": "to happen like what what is the resource for example some apis will get some ID",
    "start": "1778720",
    "end": "1784279"
  },
  {
    "text": "Go Fish out something from a database and have something you know that comes back that is required like that is",
    "start": "1784279",
    "end": "1790120"
  },
  {
    "text": "really the required context to make that uh authorization call that's not something that you want the gateway to",
    "start": "1790120",
    "end": "1795480"
  },
  {
    "text": "do the Gateway needs to execute in a small number of milliseconds uh whereas the application can do a little bit more",
    "start": "1795480",
    "end": "1801559"
  },
  {
    "text": "uh processing so that's why I say you can use something like topaz both for API authorization at the Gateway level",
    "start": "1801559",
    "end": "1807720"
  },
  {
    "text": "as well as uh for you know at the at the API itself do we have any other do you have",
    "start": "1807720",
    "end": "1814919"
  },
  {
    "text": "more time or are we all done with questions I think we're out of time says",
    "start": "1814919",
    "end": "1820440"
  },
  {
    "text": "Mark so we're out of time all right thank you so much",
    "start": "1820440",
    "end": "1825919"
  }
]