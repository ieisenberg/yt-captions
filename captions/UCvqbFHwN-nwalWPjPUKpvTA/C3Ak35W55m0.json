[
  {
    "text": "all right i think it is about time for us to get started um thank you for making the trek out to",
    "start": "320",
    "end": "7600"
  },
  {
    "text": "the event center i know this is probably like the farthest building or farthest farthest room away from the",
    "start": "7600",
    "end": "12960"
  },
  {
    "text": "banquet hall um this is the sig auth deep dive so uh i'm mike this is margo",
    "start": "12960",
    "end": "20640"
  },
  {
    "text": "hello um i'm margo um i'm a software engineer uh for vmware tanzu i work on",
    "start": "20640",
    "end": "27119"
  },
  {
    "text": "pinniped which is part of tonzu's authentication sack",
    "start": "27119",
    "end": "32238"
  },
  {
    "text": "and i'm mike i'm a software engineer at google i've been working on gk and kubernetes for",
    "start": "32239",
    "end": "37680"
  },
  {
    "text": "almost seven years actually over seven years now and i am a",
    "start": "37680",
    "end": "42800"
  },
  {
    "text": "co-chair and tl of sig auth so",
    "start": "42800",
    "end": "47680"
  },
  {
    "text": "this afternoon i'm going to give you a little bit of an intro to sigoth",
    "start": "48000",
    "end": "54879"
  },
  {
    "text": "walk through kind of review uh what we did over the last year or year",
    "start": "54879",
    "end": "61199"
  },
  {
    "text": "and a half and then highlight a couple enhancements that are underway",
    "start": "61199",
    "end": "67280"
  },
  {
    "text": "um that i think are interesting and then i'm going to hand it off to margot she's going to walk through an",
    "start": "67280",
    "end": "72479"
  },
  {
    "text": "implementation of a client go exec auth plugin",
    "start": "72479",
    "end": "78640"
  },
  {
    "text": "to get you give you kind of a feel of how to extend control client authentication",
    "start": "78640",
    "end": "86640"
  },
  {
    "text": "and yeah and then we'll wrap it up and go to questions so uh",
    "start": "86640",
    "end": "92400"
  },
  {
    "text": "so sig auth what we do this is our patron xqcd comic",
    "start": "92400",
    "end": "98400"
  },
  {
    "text": "the kubernetes community is uh",
    "start": "98400",
    "end": "103119"
  },
  {
    "text": "very uh inventive um they're doing a lot of cool things all the time",
    "start": "103600",
    "end": "109119"
  },
  {
    "text": "i can i consider like sig os responsibility to make sure that you know operators and security",
    "start": "109119",
    "end": "114320"
  },
  {
    "text": "administrators are you know able to you know draw i i guess",
    "start": "114320",
    "end": "120719"
  },
  {
    "text": "guard rails around what engineers are doing um you know examples of maybe auth relevant features in",
    "start": "120719",
    "end": "127840"
  },
  {
    "text": "kubernetes are um you know uh new new new flags in the security",
    "start": "127840",
    "end": "134640"
  },
  {
    "text": "context of a pod that you that an administrator might want to control um",
    "start": "134640",
    "end": "139680"
  },
  {
    "text": "uh maybe cross name namespace pvc references where specific volume claim references um maybe taints",
    "start": "139680",
    "end": "147360"
  },
  {
    "text": "and tolerations that are used for node isolation",
    "start": "147360",
    "end": "151440"
  },
  {
    "text": "so this is our mission statement so sigoth is responsible for features and kubernetes that control and protect",
    "start": "152400",
    "end": "158239"
  },
  {
    "text": "access to the api and other core components this includes authentication and authorization but also encompasses",
    "start": "158239",
    "end": "164239"
  },
  {
    "text": "features like odd logging and security policy so this is like on paper uh what the sigoth",
    "start": "164239",
    "end": "172319"
  },
  {
    "text": "mission statement is over the last um you know many years that sigoth has existed and been meeting we've kind of",
    "start": "172319",
    "end": "179280"
  },
  {
    "text": "adopted um ownership of various things that don't really fit neatly",
    "start": "179280",
    "end": "184800"
  },
  {
    "text": "into this definition and we can talk about those later uh if you aren't aware already there's a",
    "start": "184800",
    "end": "192480"
  },
  {
    "text": "newly established as of in the last year sig called the six security",
    "start": "192480",
    "end": "199040"
  },
  {
    "text": "who you know might take over various things that have fallen on the sigoth community in the past",
    "start": "199040",
    "end": "206239"
  },
  {
    "text": "so this is a full list of sub-projects on the left side these are sub projects",
    "start": "207200",
    "end": "212799"
  },
  {
    "text": "that are in uh kubernetes core code base so github.com kubernetes kubernetes",
    "start": "212799",
    "end": "218560"
  },
  {
    "text": "audit logging subsystem all authenticators um authorizers including you know our back",
    "start": "218560",
    "end": "224799"
  },
  {
    "text": "abac node authorizer um uh certificates api and related",
    "start": "224799",
    "end": "229920"
  },
  {
    "text": "infrastructure so um uh any entry signers uh or approvers for",
    "start": "229920",
    "end": "236400"
  },
  {
    "text": "um uh the the infrastructure that cubelet uses to do certificate rotation for voltage",
    "start": "236400",
    "end": "242640"
  },
  {
    "text": "server and client certificates encryption at rest so that would be the kms plugin for encrypting",
    "start": "242640",
    "end": "250319"
  },
  {
    "text": "data stored in ncd at rest node isolation and identity so",
    "start": "250319",
    "end": "256239"
  },
  {
    "text": "uh the the authorizer and admission controller responsible for um uh preventing cross node uh escalations",
    "start": "256239",
    "end": "265199"
  },
  {
    "text": "um policy management such as you know uh our back and also uh pod security",
    "start": "265199",
    "end": "271120"
  },
  {
    "text": "admission um and anything service kubernetes service account related um so out of tree we have kind of a",
    "start": "271120",
    "end": "278960"
  },
  {
    "text": "multi-tenancy working group um and they have kind of uh incubator",
    "start": "278960",
    "end": "284240"
  },
  {
    "text": "project out of that incubator came into hierarchical namespace controller which is a project",
    "start": "284240",
    "end": "290080"
  },
  {
    "text": "that is focused on synchronizing policy uh",
    "start": "290080",
    "end": "296400"
  },
  {
    "text": "across a hierarchy of name spaces and the secret store csi driver which is",
    "start": "296400",
    "end": "302000"
  },
  {
    "text": "uh a csi driver that integrates with various secret stores i think azure gcp aws and",
    "start": "302000",
    "end": "310880"
  },
  {
    "text": "vault right now all have plugins and they expose kind of a secrets api but",
    "start": "310880",
    "end": "316560"
  },
  {
    "text": "rather than having the secrets to be stored in scd they are stored you know in your secret manager of",
    "start": "316560",
    "end": "322240"
  },
  {
    "text": "choice and coming soon so this is a recently uh i guess currently going through induction uh",
    "start": "322240",
    "end": "329759"
  },
  {
    "text": "subproject so the cube rbac proxy is a pretty widely used popular project um",
    "start": "329759",
    "end": "337440"
  },
  {
    "text": "and we have recently decided to make it an official sagasa project",
    "start": "337440",
    "end": "343440"
  },
  {
    "text": "not sure if i said it but at any point just raise your hand if you have questions",
    "start": "343440",
    "end": "349039"
  },
  {
    "text": "so what have we done in the last year and a half so pod security admission is ga in",
    "start": "349759",
    "end": "356400"
  },
  {
    "text": "125 which is the upcoming upcoming release of kubernetes we also just recently merged apr to",
    "start": "356400",
    "end": "363919"
  },
  {
    "text": "delete pod security policy from the kubernetes codebase so that's a",
    "start": "363919",
    "end": "369039"
  },
  {
    "text": "huge accomplishment certificates api went to ga with a couple new features",
    "start": "369039",
    "end": "375120"
  },
  {
    "text": "specifically like signer partitioning the exec auth plugin which we uh cube",
    "start": "375120",
    "end": "380800"
  },
  {
    "text": "control credential providers are now ga um that's what margo will be speaking on later uh token requests ga and secret",
    "start": "380800",
    "end": "387840"
  },
  {
    "text": "source csi drivers ga so uh looking forward i have a couple",
    "start": "387840",
    "end": "394160"
  },
  {
    "text": "clips to highlight um the first one is um you know going through review right now it's uh something called trust",
    "start": "394160",
    "end": "399600"
  },
  {
    "text": "anchor sets so right now um various things like uh",
    "start": "399600",
    "end": "405919"
  },
  {
    "text": "kubernetes itself um istio",
    "start": "405919",
    "end": "410720"
  },
  {
    "text": "the certificate manager need to have a need common need to distribute certificate bundles to",
    "start": "411360",
    "end": "418560"
  },
  {
    "text": "all pods in a cluster right now the state of the art to do that is a config map since config maps can only be",
    "start": "418560",
    "end": "424080"
  },
  {
    "text": "referenced um by pods in the same name space as the config map you end up",
    "start": "424080",
    "end": "429680"
  },
  {
    "text": "synchronizing uh config maps like that have the same data across you know many namespaces has presented a",
    "start": "429680",
    "end": "436880"
  },
  {
    "text": "scalability issues um in clusters with many namespaces",
    "start": "436880",
    "end": "442000"
  },
  {
    "text": "um you know uh because that data is stored in std and has to be scanned and you know read into cubase over memory so",
    "start": "442000",
    "end": "448960"
  },
  {
    "text": "i would think of this trust anchor set as a global object so that that data can",
    "start": "448960",
    "end": "454479"
  },
  {
    "text": "be uh you know stored once and referenced across the entire cluster",
    "start": "454479",
    "end": "460560"
  },
  {
    "text": "it's i if you've ever written like a dynamic web hook configuration you also have to embed",
    "start": "461039",
    "end": "467680"
  },
  {
    "text": "you know a certificate for qbps server to",
    "start": "467680",
    "end": "473520"
  },
  {
    "text": "establish a connection to the web hook so these should will also be referenceable",
    "start": "473520",
    "end": "478879"
  },
  {
    "text": "and you won't have to do that i know that you know in the current mechanism is kind of gross",
    "start": "478879",
    "end": "485759"
  },
  {
    "text": "and not super portable it's hard to write helm charts that have dynamic weft",
    "start": "485759",
    "end": "491120"
  },
  {
    "text": "configs for that reason the next one is",
    "start": "491120",
    "end": "496639"
  },
  {
    "text": "kmsv2 so this is the extension point that is used for",
    "start": "496639",
    "end": "504000"
  },
  {
    "text": "encryption at rest the current kms extension point has been alpha for a",
    "start": "504000",
    "end": "510240"
  },
  {
    "text": "very long time um it had over the years of working with it a couple",
    "start": "510240",
    "end": "516880"
  },
  {
    "text": "issues have come up um uh the um",
    "start": "516880",
    "end": "522560"
  },
  {
    "text": "it is hard for an administrator to understand what the storage version of a um you know secret that might be",
    "start": "522560",
    "end": "528399"
  },
  {
    "text": "encrypted is like what key um it was encrypted at uh the health check right",
    "start": "528399",
    "end": "533760"
  },
  {
    "text": "now uh that cubelet our qapi server does on the kms plugin is to do it encrypt decrypt it's not actually",
    "start": "533760",
    "end": "539920"
  },
  {
    "text": "um you know uh potentially very thorough and um",
    "start": "539920",
    "end": "546640"
  },
  {
    "text": "there is a fundamental scalability limit with the current model because um you",
    "start": "546640",
    "end": "551760"
  },
  {
    "text": "know uh right now if like when cube api server starts and it loads its secret cache there could be you know ten",
    "start": "551760",
    "end": "557920"
  },
  {
    "text": "thousand secrets um it will serially decrypt each one of those and uh",
    "start": "557920",
    "end": "563680"
  },
  {
    "text": "each one of those has to make a round trip to the um kms provider which could be you",
    "start": "563680",
    "end": "569200"
  },
  {
    "text": "know a remote service that's expensive so this enhancement plans to solve all of",
    "start": "569200",
    "end": "576080"
  },
  {
    "text": "these problems and we will be introducing a",
    "start": "576080",
    "end": "581279"
  },
  {
    "text": "v2 alpha 1 version of that kms plug-in api that should",
    "start": "581279",
    "end": "587440"
  },
  {
    "text": "address most of these major issues",
    "start": "587440",
    "end": "591040"
  },
  {
    "text": "and so as i mentioned token requests and bound service account",
    "start": "592880",
    "end": "598160"
  },
  {
    "text": "tokens are now ga so i think as of 123 rather than getting a secret backed",
    "start": "598160",
    "end": "605360"
  },
  {
    "text": "token in your pod you will get a bound service gun token that is rotated",
    "start": "605360",
    "end": "611360"
  },
  {
    "text": "by the cubelet it's time bound uh it's audience bound so",
    "start": "611360",
    "end": "617120"
  },
  {
    "text": "while that is awesome those secrets are still um those old",
    "start": "617120",
    "end": "622480"
  },
  {
    "text": "service gun token secrets are still created um which is not a great thing",
    "start": "622480",
    "end": "628160"
  },
  {
    "text": "but we can't just turn off the token controller because um you know we expect that some users are still",
    "start": "628160",
    "end": "634880"
  },
  {
    "text": "using uh taking those tokens and maybe putting them in jenkins or like a github action toss on the kit to their cube api",
    "start": "634880",
    "end": "641600"
  },
  {
    "text": "server so we are planning on trying to stop auto creation",
    "start": "641600",
    "end": "648399"
  },
  {
    "text": "and remove unused tokens basically by trying to detect whether",
    "start": "648399",
    "end": "654079"
  },
  {
    "text": "those tokens are in use somewhere else um",
    "start": "654079",
    "end": "660160"
  },
  {
    "text": "and with that i will hand it over to margo",
    "start": "660160",
    "end": "665920"
  },
  {
    "text": "uh hey everyone uh so today i'm going to be walking you through a sample",
    "start": "665920",
    "end": "672800"
  },
  {
    "text": "implementation of a client go credential plugin um so what is a client go credential",
    "start": "672800",
    "end": "680399"
  },
  {
    "text": "plugin so um it's a way for uh clientgo to",
    "start": "680399",
    "end": "685760"
  },
  {
    "text": "call out to an external command to",
    "start": "685760",
    "end": "691519"
  },
  {
    "text": "get user credentials out of band so the plugin can implement some kind of protocol specific logic",
    "start": "691519",
    "end": "698160"
  },
  {
    "text": "like for example an ldap login or oauth login",
    "start": "698160",
    "end": "703440"
  },
  {
    "text": "and then pass back opaque credentials uh for for clango to use and by extension",
    "start": "703440",
    "end": "709200"
  },
  {
    "text": "um you know keep ctl to use typically",
    "start": "709200",
    "end": "714880"
  },
  {
    "text": "usually then on the server side that requires um like a web hook authenticator",
    "start": "714880",
    "end": "720480"
  },
  {
    "text": "to interpret the credential to take that opaque token and make it into something meaningful for the",
    "start": "720480",
    "end": "725839"
  },
  {
    "text": "kubernetes api server so like when a user executes a cube ctl",
    "start": "725839",
    "end": "732000"
  },
  {
    "text": "command they're uh invoking the qctl binary",
    "start": "732000",
    "end": "737040"
  },
  {
    "text": "which is then in turn executing um clientgo",
    "start": "737040",
    "end": "742839"
  },
  {
    "text": "clientgo takes that cube ctl command and makes a request to the kubernetes",
    "start": "742839",
    "end": "748560"
  },
  {
    "text": "api server uh based on that command",
    "start": "748560",
    "end": "754079"
  },
  {
    "text": "when you add a credential plugin into the mix",
    "start": "754079",
    "end": "759120"
  },
  {
    "text": "before you make that request to the kubernetes api server client go invokes the credential plug-in",
    "start": "759120",
    "end": "764959"
  },
  {
    "text": "which then does some out-of-band authentication and returns a credential to clay and go",
    "start": "764959",
    "end": "772639"
  },
  {
    "text": "and so this is kind of a nice way to extend kubernetes because",
    "start": "772639",
    "end": "778079"
  },
  {
    "text": "grenades can't necessarily natively support every auth protocol out there there's just a lot of different ways",
    "start": "778079",
    "end": "784320"
  },
  {
    "text": "that people do things saml ldap and so people can",
    "start": "784320",
    "end": "789360"
  },
  {
    "text": "bring their own out of band authentication and still be able to use that with kubernetes",
    "start": "789360",
    "end": "796880"
  },
  {
    "text": "um and so then once that uh credential plugin returns the credential",
    "start": "796880",
    "end": "804000"
  },
  {
    "text": "to client go it gives us this opaque token um clientgo",
    "start": "804000",
    "end": "809440"
  },
  {
    "text": "makes the request to guaran's api server and now it has a bearer token",
    "start": "809440",
    "end": "814800"
  },
  {
    "text": "attached to that request and then after that happens the kubernetes",
    "start": "814800",
    "end": "821279"
  },
  {
    "text": "kubernetes api server is typically set up with um a web hook authenticator or maybe an odc",
    "start": "821279",
    "end": "828480"
  },
  {
    "text": "authenticator the token itself is opaque to kubernetes",
    "start": "828480",
    "end": "834480"
  },
  {
    "text": "so then grays makes this a token review",
    "start": "834480",
    "end": "840079"
  },
  {
    "text": "that the webhook authenticator is then uh waiting to see and it it sees that this token review has uh",
    "start": "840079",
    "end": "847440"
  },
  {
    "text": "this bearer token uh and it's able to interpret the token uh so that the kubernetes api server can",
    "start": "847440",
    "end": "854720"
  },
  {
    "text": "use it uh for you know things like access control you know take this user info that is now",
    "start": "854720",
    "end": "862000"
  },
  {
    "text": "interpreted to tell us the username and and use that uh for whatever it needs",
    "start": "862000",
    "end": "870240"
  },
  {
    "text": "typically the way this is set up is uh your user has a cube config",
    "start": "870240",
    "end": "876000"
  },
  {
    "text": "and that cube config has uh the exact uh",
    "start": "876000",
    "end": "881360"
  },
  {
    "text": "field and within that it's it's calling some command so this is you know some a path to some binary that exists",
    "start": "881360",
    "end": "888560"
  },
  {
    "text": "on the machine uh it's got an api version uh it's got some arguments that are uh",
    "start": "888560",
    "end": "894639"
  },
  {
    "text": "called with the the command that you're calling um and then it's got some information about uh",
    "start": "894639",
    "end": "900720"
  },
  {
    "text": "whether this needs to be interactive so whether when cube ctl is invoked it needs to be",
    "start": "900720",
    "end": "907839"
  },
  {
    "text": "in an environment with a tty and it's also got an install hint so",
    "start": "907839",
    "end": "914560"
  },
  {
    "text": "uh when you call this this binary like if it's not found in the user's path it's just a little",
    "start": "914560",
    "end": "920240"
  },
  {
    "text": "helper to tell them maybe where to go uh to",
    "start": "920240",
    "end": "926560"
  },
  {
    "text": "install it uh so i'm going to walk through the simple",
    "start": "926560",
    "end": "932079"
  },
  {
    "text": "plug-in now this is uh based on my experience with um pinpad the project",
    "start": "932079",
    "end": "939440"
  },
  {
    "text": "that i work on but it's pretty simplified um so this one is written in go but you don't",
    "start": "939440",
    "end": "945600"
  },
  {
    "text": "necessarily have to write the plugin and go because the inputs and outputs are all",
    "start": "945600",
    "end": "950639"
  },
  {
    "text": "through standard out so you know if you wanted to write a credential plug-in in any",
    "start": "950639",
    "end": "956160"
  },
  {
    "text": "other programming language that's also totally possible uh this one is going to be done using",
    "start": "956160",
    "end": "962079"
  },
  {
    "text": "the oidc password grant so it's going to take the users a",
    "start": "962079",
    "end": "967360"
  },
  {
    "text": "username and password from the cli and then it's going to",
    "start": "967360",
    "end": "972720"
  },
  {
    "text": "take some information about the oidc configuration",
    "start": "972720",
    "end": "978000"
  },
  {
    "text": "it's going to get an id token and then it's going to package it in an exact",
    "start": "978000",
    "end": "983040"
  },
  {
    "text": "credential which is the format that clanko expects to see uh this credential so that it can send",
    "start": "983040",
    "end": "990000"
  },
  {
    "text": "to the kubernetes api server uh so the entry point for this is just going to be a pretty simple cobra",
    "start": "990000",
    "end": "997360"
  },
  {
    "text": "command so this is just a pretty common way for",
    "start": "997360",
    "end": "1002560"
  },
  {
    "text": "go command line utilities to be created it's going to have two flags",
    "start": "1002560",
    "end": "1008959"
  },
  {
    "text": "both of them are going to be required in this case and when you run this command it's going to run this",
    "start": "1008959",
    "end": "1015839"
  },
  {
    "text": "command called run no idc login um taking those those flags and passing",
    "start": "1015839",
    "end": "1022639"
  },
  {
    "text": "them in as parameters to the function uh another thing that's typically uh",
    "start": "1022639",
    "end": "1029520"
  },
  {
    "text": "part of that initialization is uh the kubernetes exec info so when client",
    "start": "1029520",
    "end": "1036798"
  },
  {
    "text": "go invokes a plugin it passes some data via the kubernetes exact info environment",
    "start": "1036799",
    "end": "1042959"
  },
  {
    "text": "variable so uh this data comes directly from the cubeconfig and it contains stuff like",
    "start": "1042959",
    "end": "1049760"
  },
  {
    "text": "information about the target cluster so this should be useful for example",
    "start": "1049760",
    "end": "1056160"
  },
  {
    "text": "if you have a cluster or you know some authenticator on your cluster that's looking for a specific audience and that",
    "start": "1056160",
    "end": "1062880"
  },
  {
    "text": "information is based on which cluster it's running on then in order to allow",
    "start": "1062880",
    "end": "1069120"
  },
  {
    "text": "your credential plugin to craft the token correctly it needs to",
    "start": "1069120",
    "end": "1074559"
  },
  {
    "text": "know some information about the cluster so another important thing uh to think",
    "start": "1074559",
    "end": "1082080"
  },
  {
    "text": "about when you're creating one of these uh credential plugins is caching so",
    "start": "1082080",
    "end": "1087679"
  },
  {
    "text": "uh we we need the cache credentials so you don't have to fetch the same token every single time",
    "start": "1087679",
    "end": "1094480"
  },
  {
    "text": "you make like a cube ctl request these uh credential plugins are invoked you know",
    "start": "1094480",
    "end": "1101360"
  },
  {
    "text": "every time that you run the command they're short-lived so",
    "start": "1101360",
    "end": "1106400"
  },
  {
    "text": "maintaining that say somehow so you don't have to repeat yourself it's pretty important uh this is going to be",
    "start": "1106400",
    "end": "1112080"
  },
  {
    "text": "uh stored on the local file system uh so just like within the user's home",
    "start": "1112080",
    "end": "1118240"
  },
  {
    "text": "directory they're gonna have uh some config yummy file uh and it's gonna be",
    "start": "1118240",
    "end": "1124080"
  },
  {
    "text": "keyed off of uh the arguments uh sent to",
    "start": "1124080",
    "end": "1130559"
  },
  {
    "text": "the command so uh you know in this case is gonna be the issuer and the client id so if you",
    "start": "1130559",
    "end": "1139200"
  },
  {
    "text": "issue the same command with the exact same arguments you should get the same token back",
    "start": "1139200",
    "end": "1146400"
  },
  {
    "text": "from your file system uh so this is what we're going to do to",
    "start": "1146400",
    "end": "1151600"
  },
  {
    "text": "get the file from the cache so we're going to create this this cache key based on the issuer the client id and",
    "start": "1151600",
    "end": "1158000"
  },
  {
    "text": "the scopes so some of this is pretty oidc specific but",
    "start": "1158000",
    "end": "1163039"
  },
  {
    "text": "you know in any case you want to have uh some way to",
    "start": "1163039",
    "end": "1168880"
  },
  {
    "text": "to keep track of of how it was called um it's going to get the token and this uh",
    "start": "1168880",
    "end": "1174720"
  },
  {
    "text": "cash.get token uh is is just uh",
    "start": "1174720",
    "end": "1180160"
  },
  {
    "text": "a helper that uh gets it from the local file system",
    "start": "1180160",
    "end": "1185200"
  },
  {
    "text": "you know parses that yaml uh and then it's gonna you know if there is a value in in your uh cache then",
    "start": "1185200",
    "end": "1192960"
  },
  {
    "text": "uh you know it's gonna get it it's gonna check whether it's expired you know if you have a cache but it's been",
    "start": "1192960",
    "end": "1200160"
  },
  {
    "text": "like several days or something since you've used it then you want to make sure that you're not just like passing",
    "start": "1200160",
    "end": "1205360"
  },
  {
    "text": "back this this out of date cash token just because you have a value in the cash so you know you're you're",
    "start": "1205360",
    "end": "1213280"
  },
  {
    "text": "doing that check and then if that's the case then we're good we don't need to you know",
    "start": "1213280",
    "end": "1218960"
  },
  {
    "text": "redo you know a network request to your idc at any provider or you know in case of a different identity provider than",
    "start": "1218960",
    "end": "1225840"
  },
  {
    "text": "that out-of-band authentication either uh and then uh at the end if you",
    "start": "1225840",
    "end": "1232559"
  },
  {
    "text": "did have to get a new token uh then we'll come back to that but at the",
    "start": "1232559",
    "end": "1239039"
  },
  {
    "text": "end uh you can put the token back at the cash key so that the next time the process is invoked",
    "start": "1239039",
    "end": "1245600"
  },
  {
    "text": "you can get it back out and you don't have to do it all over again",
    "start": "1245600",
    "end": "1250640"
  },
  {
    "text": "uh another important uh thing that you may need to do as part of",
    "start": "1250640",
    "end": "1255679"
  },
  {
    "text": "a credential plug-in is reading information from standard in so you know",
    "start": "1255679",
    "end": "1261280"
  },
  {
    "text": "maybe username and password so if you do want to",
    "start": "1261280",
    "end": "1266480"
  },
  {
    "text": "read from standard in uh you can set the interactive mode in your cubeconfig so that can be to",
    "start": "1266480",
    "end": "1273200"
  },
  {
    "text": "if available or always in the case of always if you do not have a tty available",
    "start": "1273200",
    "end": "1279360"
  },
  {
    "text": "and these are like is not going to be able to type something into standard in um then uh",
    "start": "1279360",
    "end": "1285280"
  },
  {
    "text": "the the cube ctl command will immediately fail and it won't even try to invoke the plugin",
    "start": "1285280",
    "end": "1291120"
  },
  {
    "text": "if you don't want to do interactive mode there's other ways you know you can get some information from a file or from",
    "start": "1291120",
    "end": "1297120"
  },
  {
    "text": "environment variables so those are other ways that you can have one of these plugins that",
    "start": "1297120",
    "end": "1303039"
  },
  {
    "text": "don't involve uh interaction so i'm going to actually try to do this",
    "start": "1303039",
    "end": "1308799"
  },
  {
    "text": "in my ide so bear with me while i try to",
    "start": "1308799",
    "end": "1314799"
  },
  {
    "text": "switch into go land",
    "start": "1314799",
    "end": "1318440"
  },
  {
    "text": "okay sort of",
    "start": "1321600",
    "end": "1325480"
  },
  {
    "text": "we had technical difficulties with this before the talk so yeah we tried to figure it all out but",
    "start": "1338720",
    "end": "1344400"
  },
  {
    "text": "uh",
    "start": "1344400",
    "end": "1347400"
  },
  {
    "text": "all right i feel less bad now",
    "start": "1349840",
    "end": "1353760"
  },
  {
    "text": "ah there we go okay bigger font all right cool yeah perfect zoom in",
    "start": "1357360",
    "end": "1363760"
  },
  {
    "text": "uh yeah",
    "start": "1363760",
    "end": "1367480"
  },
  {
    "text": "did that even bigger command plus maybe",
    "start": "1375280",
    "end": "1380639"
  },
  {
    "text": "sorry i don't know why command plus isn't",
    "start": "1385360",
    "end": "1392320"
  },
  {
    "text": "operating like i expected to um",
    "start": "1392480",
    "end": "1397279"
  },
  {
    "text": "so is this i could try to if this is super",
    "start": "1397600",
    "end": "1402799"
  },
  {
    "text": "unreadable uh try to do it via",
    "start": "1402799",
    "end": "1409120"
  },
  {
    "text": "we should have caught this before yeah",
    "start": "1409120",
    "end": "1413280"
  },
  {
    "text": "command shift s",
    "start": "1414960",
    "end": "1417840"
  },
  {
    "text": "no close um",
    "start": "1421120",
    "end": "1427559"
  },
  {
    "text": "um do you want to just uh talk through it and verbosely yeah sure",
    "start": "1430799",
    "end": "1436880"
  },
  {
    "text": "just yeah try to try to keep it cool so um this getusername and password",
    "start": "1436880",
    "end": "1442000"
  },
  {
    "text": "function is in this case it's for odc password grant so it's going to take these values and then it's going to",
    "start": "1442000",
    "end": "1449039"
  },
  {
    "text": "pass them to an oidc identity provider that's going to give us a token back with some information about the user",
    "start": "1449039",
    "end": "1455039"
  },
  {
    "text": "this function actually works both in interactive and non-interactive environments so",
    "start": "1455039",
    "end": "1460559"
  },
  {
    "text": "it's you know there's a way to get it from an environment variable you know for example if you",
    "start": "1460559",
    "end": "1465919"
  },
  {
    "text": "have some like machine identity and you're trying to",
    "start": "1465919",
    "end": "1471679"
  },
  {
    "text": "run something in your ci system and you you want your service account to authenticate uh you can",
    "start": "1471679",
    "end": "1479440"
  },
  {
    "text": "just pass these environment variables through but if you have like a human user who's just trying to log in",
    "start": "1479440",
    "end": "1485279"
  },
  {
    "text": "then we're going to prompt them for value so",
    "start": "1485279",
    "end": "1490320"
  },
  {
    "text": "that here is you know it's getting you know calling os.getnn under the hood",
    "start": "1490320",
    "end": "1498840"
  },
  {
    "text": "uh and then it's running uh this prompt for value",
    "start": "1498840",
    "end": "1504159"
  },
  {
    "text": "uh bear with me because this is a little bit indirect for uh",
    "start": "1504159",
    "end": "1510240"
  },
  {
    "text": "testing reasons um so we can do a dependency injection but the actual",
    "start": "1510240",
    "end": "1515679"
  },
  {
    "text": "implementation here uh is this prompt for value function",
    "start": "1515679",
    "end": "1521840"
  },
  {
    "text": "is first checking whether we have a terminal uh it's",
    "start": "1521840",
    "end": "1527279"
  },
  {
    "text": "printing out uh a prompt saying like enter your username here basically uh",
    "start": "1527279",
    "end": "1535039"
  },
  {
    "text": "and uh then it's creating a channel uh",
    "start": "1535039",
    "end": "1542080"
  },
  {
    "text": "with the the result of the user typing in their username uh you know and then in this separate",
    "start": "1542080",
    "end": "1547200"
  },
  {
    "text": "process it's it's waiting here for the user to type their username and then press enter and then",
    "start": "1547200",
    "end": "1554159"
  },
  {
    "text": "it's passing it back to that channel um and [Music]",
    "start": "1554159",
    "end": "1561890"
  },
  {
    "text": "at the end of that you know it's just gonna trim spaces and",
    "start": "1562480",
    "end": "1568000"
  },
  {
    "text": "return the value once it gets that result there is a little bit of a different way",
    "start": "1568000",
    "end": "1574159"
  },
  {
    "text": "that you have to handle passwords from usernames you can imagine people when they're typing their",
    "start": "1574159",
    "end": "1579760"
  },
  {
    "text": "username they want to see it as they're typing it but that's not what you want",
    "start": "1579760",
    "end": "1584960"
  },
  {
    "text": "for passwords you uh you want that to be hidden as you're",
    "start": "1584960",
    "end": "1591279"
  },
  {
    "text": "typing it you don't want to just see your password in plain access you're writing it and there's actually a built-in go",
    "start": "1591279",
    "end": "1598480"
  },
  {
    "text": "standard library function uh called read password that uh",
    "start": "1598480",
    "end": "1604080"
  },
  {
    "text": "hides local echo so that you don't have that uh displayed as you're typing",
    "start": "1604080",
    "end": "1609360"
  },
  {
    "text": "it um and other than that it's",
    "start": "1609360",
    "end": "1614880"
  },
  {
    "text": "it's kind of similar time check",
    "start": "1614880",
    "end": "1619919"
  },
  {
    "text": "okay",
    "start": "1620640",
    "end": "1623640"
  },
  {
    "text": "attempt going back to firefox",
    "start": "1626480",
    "end": "1631559"
  },
  {
    "text": "ah all right so command shift f",
    "start": "1644080",
    "end": "1649840"
  },
  {
    "text": "um",
    "start": "1651360",
    "end": "1654360"
  },
  {
    "text": "and then yeah hit slideshow beautiful all right uh",
    "start": "1658399",
    "end": "1663440"
  },
  {
    "text": "yeah oh and then the yeah the last step here is yeah we're gonna package the token into an exec credential which is",
    "start": "1663440",
    "end": "1668880"
  },
  {
    "text": "the format uh expected by clientgo it's going to this is using uh",
    "start": "1668880",
    "end": "1674720"
  },
  {
    "text": "glycos libraries because it's in golang which is pretty handy we take that token that we get back uh which i'm you know",
    "start": "1674720",
    "end": "1681760"
  },
  {
    "text": "kind of gonna hand wave over because that's pretty specific to oidc and you'd do that differently if you",
    "start": "1681760",
    "end": "1687279"
  },
  {
    "text": "were using a different type of uh auth uh sorry but yeah so you take that and then you",
    "start": "1687279",
    "end": "1693840"
  },
  {
    "text": "serialize it and send it standard out and clanko can then do all that stuff to send it to the api server",
    "start": "1693840",
    "end": "1701360"
  },
  {
    "text": "awesome thank you margo um so yeah i wanted to do one more highlight so",
    "start": "1701600",
    "end": "1707440"
  },
  {
    "text": "well what margo just talked about is a ga feature of kubernetes we actually have some future plans for it um",
    "start": "1707440",
    "end": "1714000"
  },
  {
    "text": "uh this is the last highlight so client exec proxy auth um",
    "start": "1714000",
    "end": "1719760"
  },
  {
    "text": "is currently a proposal that is under review it allows for uh richer support",
    "start": "1719760",
    "end": "1725440"
  },
  {
    "text": "for authentication protocols such as like request signing protocols um for example awsv4 or um you know",
    "start": "1725440",
    "end": "1732559"
  },
  {
    "text": "kerberos uh and i kind of think of it as like the counterpart of authenticating proxies",
    "start": "1732559",
    "end": "1738080"
  },
  {
    "text": "which is a model for extending kubernetes authentication that you know some users use",
    "start": "1738080",
    "end": "1746398"
  },
  {
    "text": "and that concludes our content so",
    "start": "1746640",
    "end": "1753200"
  },
  {
    "text": "these slides will be posted on the website if you guys want to click",
    "start": "1753200",
    "end": "1758240"
  },
  {
    "text": "through to on any of the links that you saw but so we have we have a slack channel if you want to get a hold of us",
    "start": "1758240",
    "end": "1763279"
  },
  {
    "text": "at uh sigoth we meet every two weeks",
    "start": "1763279",
    "end": "1768559"
  },
  {
    "text": "uh wednesday 11 pacific time we have a mailing list that you can join",
    "start": "1768559",
    "end": "1773679"
  },
  {
    "text": "and a really long agenda dock feel free to drop an agenda item on at any time join our meeting",
    "start": "1773679",
    "end": "1780000"
  },
  {
    "text": "we love having new people and a lot of exciting stuff going on so",
    "start": "1780000",
    "end": "1785360"
  },
  {
    "text": "um with that i think we have five minutes for questions",
    "start": "1785360",
    "end": "1790640"
  },
  {
    "text": "um",
    "start": "1790640",
    "end": "1793640"
  },
  {
    "text": "all right so one question about the credentials authentication",
    "start": "1803440",
    "end": "1809520"
  },
  {
    "text": "so i've been using it for a while now but there's i've been experiencing issues when it",
    "start": "1809520",
    "end": "1816480"
  },
  {
    "text": "comes to the authentication failing so in my case i'm using another cli in the background",
    "start": "1816480",
    "end": "1823039"
  },
  {
    "text": "to grab the token and the azure cli in this case and",
    "start": "1823039",
    "end": "1828799"
  },
  {
    "text": "when the azure cli needs to be authenticated you need to do that out of band",
    "start": "1828799",
    "end": "1834080"
  },
  {
    "text": "and this means that if i do fail the this",
    "start": "1834080",
    "end": "1839600"
  },
  {
    "text": "binary the client execute will will try to run it",
    "start": "1839600",
    "end": "1845120"
  },
  {
    "text": "multiple times so it will try to like run five six times in a row and there's no way to tell it that you shouldn't",
    "start": "1845120",
    "end": "1852000"
  },
  {
    "text": "retry you should just stop and wait do you understand the question yeah um i i think i'd recall this github issue",
    "start": "1852000",
    "end": "1860080"
  },
  {
    "text": "so that the idea was initially to on 401 to re-exact",
    "start": "1860080",
    "end": "1865679"
  },
  {
    "text": "the plug-in um and that had keeping track of",
    "start": "1865679",
    "end": "1870799"
  },
  {
    "text": "you know multiple clients within a process has been a problem but um",
    "start": "1870799",
    "end": "1878320"
  },
  {
    "text": "yeah basically uh we try to fix those as we find them like",
    "start": "1878320",
    "end": "1885200"
  },
  {
    "text": "people creating two clients with two authenticators but uh sometimes those re-creep in and we don't",
    "start": "1885200",
    "end": "1890960"
  },
  {
    "text": "have like we haven't figured out a holistic solution for it yet so just file github issues and yeah all right thank you",
    "start": "1890960",
    "end": "1899679"
  },
  {
    "text": "any other questions a couple",
    "start": "1900159",
    "end": "1904919"
  },
  {
    "text": "thanks for the good talk um i have a question about the trust anchor sets and like kind of kind of like a high level",
    "start": "1906240",
    "end": "1912159"
  },
  {
    "text": "question so i understand that this is also going to be used to distribute like cas for um tls between workloads um",
    "start": "1912159",
    "end": "1921440"
  },
  {
    "text": "so i'm kind of interested why why does it make sense to",
    "start": "1921440",
    "end": "1926480"
  },
  {
    "text": "include the sim tree and like in general um how do you maybe um decide like which pop because like",
    "start": "1926480",
    "end": "1933440"
  },
  {
    "text": "before like upstream there wasn't really functionality that much in upstream um for workload tls i'm interested whether",
    "start": "1933440",
    "end": "1939360"
  },
  {
    "text": "you already have like a model which bits for which bits it makes sense to include entry and what should be out of three",
    "start": "1939360",
    "end": "1945840"
  },
  {
    "text": "and why yes so that's a great question so um i i think",
    "start": "1945840",
    "end": "1951279"
  },
  {
    "text": "like if we were trying to accomplish this for just",
    "start": "1951279",
    "end": "1956799"
  },
  {
    "text": "uh for example like cert manager um maybe a csi driver makes sense uh",
    "start": "1956799",
    "end": "1962080"
  },
  {
    "text": "because then you know somebody can accomplish that auditory i think uh",
    "start": "1962080",
    "end": "1967120"
  },
  {
    "text": "my main motivation for implementing stuff within the kubernetes code base is",
    "start": "1967120",
    "end": "1973120"
  },
  {
    "text": "one to make use of it in quark kubernetes so we have um uh serp bundles that we are distributing",
    "start": "1973120",
    "end": "1979039"
  },
  {
    "text": "to every single name space and that does present a scalability issue",
    "start": "1979039",
    "end": "1984240"
  },
  {
    "text": "with kubernetes itself so that motivates me to have it entry also for um you know an entry api to",
    "start": "1984240",
    "end": "1991279"
  },
  {
    "text": "reference it um it really needs to be at least the api defined uh",
    "start": "1991279",
    "end": "1997120"
  },
  {
    "text": "within the kubernetes core code base so um yeah like",
    "start": "1997120",
    "end": "2005159"
  },
  {
    "text": "so i guess at a high level um you know if we want to use it from like core api groups or",
    "start": "2005840",
    "end": "2012960"
  },
  {
    "text": "for a core functionality of kubernetes um we usually try to implement an entry and then otherwise",
    "start": "2012960",
    "end": "2018960"
  },
  {
    "text": "definitely prototype outside until you know we find some rationale to bring it in maybe the other motivation might",
    "start": "2018960",
    "end": "2026159"
  },
  {
    "text": "be if like everybody in the world is using a specific out of tree thing then it probably makes sense",
    "start": "2026159",
    "end": "2032640"
  },
  {
    "text": "to bring it in street yeah hey thank you for the nice presentation",
    "start": "2032640",
    "end": "2038480"
  },
  {
    "text": "in the demo i'm very excited about that because i'm working on something similar at the moment for for 2fa especially because",
    "start": "2038480",
    "end": "2045039"
  },
  {
    "text": "that's something also a little bit finicky topic on the command line usually um do you have a repo or some",
    "start": "2045039",
    "end": "2050878"
  },
  {
    "text": "docs available somewhere with this kind of uh sample code that you just showed",
    "start": "2050879",
    "end": "2055919"
  },
  {
    "text": "like also the whole workflow with like both on the client side and then also the server side maybe what needs to be",
    "start": "2055919",
    "end": "2061520"
  },
  {
    "text": "done there and what needs to be set up uh so",
    "start": "2061520",
    "end": "2068158"
  },
  {
    "text": "so a lot of the the client side code is taken from the project that i work on",
    "start": "2069119",
    "end": "2074398"
  },
  {
    "text": "which is uh piped although uh i should warn you there's a lot of other like complicated stuff that's",
    "start": "2074399",
    "end": "2080960"
  },
  {
    "text": "hidden away there uh i don't know if you have a better answer for some of the you know",
    "start": "2080960",
    "end": "2086720"
  },
  {
    "text": "the sample of a web hook authenticator and that side of things so that link on the bottom is the kep it's",
    "start": "2086720",
    "end": "2093520"
  },
  {
    "text": "actually fairly thorough documentation on uh the design",
    "start": "2093520",
    "end": "2099040"
  },
  {
    "text": "of these plugins and how like we expect them to work i think we should probably also add to this slide a link to your",
    "start": "2099040",
    "end": "2105359"
  },
  {
    "text": "uh the code that you walk through which is on github and then we will post these slides",
    "start": "2105359",
    "end": "2110720"
  },
  {
    "text": "uh on the schedule um after this so yeah",
    "start": "2110720",
    "end": "2116320"
  },
  {
    "text": "another okay uh we're out of time so if you have other questions just come grab me i'll be right outside",
    "start": "2116320",
    "end": "2123680"
  },
  {
    "text": "um awesome thank you so much everyone [Applause]",
    "start": "2123680",
    "end": "2133859"
  }
]