[
  {
    "start": "0",
    "end": "71000"
  },
  {
    "text": "welcome everyone to this uh afternoon session about security and name spaces",
    "start": "480",
    "end": "7720"
  },
  {
    "text": "uh talk is named keeping kubernetes safe the low down on lock name spaces and uh",
    "start": "7720",
    "end": "13559"
  },
  {
    "text": "yeah I quickly go about the introduction uh my name is Marco de benedictis I am a",
    "start": "13559",
    "end": "18720"
  },
  {
    "text": "senior consultant in control plane we uh do everything Cloud native and devops",
    "start": "18720",
    "end": "24720"
  },
  {
    "text": "and obviously security you might have seen me uh well at our booth or at the",
    "start": "24720",
    "end": "30599"
  },
  {
    "text": "capture the flag event yesterday and today I'm based in Italy uh and uh yeah",
    "start": "30599",
    "end": "37320"
  },
  {
    "text": "I all the PHD in computer and control engineering uh I've been doing uh cyber",
    "start": "37320",
    "end": "42520"
  },
  {
    "text": "security consultancy for a number of years more recently I'm also being uh quite involved with some of the uh cncf",
    "start": "42520",
    "end": "50920"
  },
  {
    "text": "uh security tag uh activities as well as yeah I was just um that's actually a",
    "start": "50920",
    "end": "57520"
  },
  {
    "text": "very nice thing we we actually just published a a new security certification uh the kubernetes and",
    "start": "57520",
    "end": "64760"
  },
  {
    "text": "Cloud native security associate and I was fortunate enough to be uh one of the developers so yeah check that out um so",
    "start": "64760",
    "end": "72560"
  },
  {
    "start": "71000",
    "end": "145000"
  },
  {
    "text": "this to Keys yeah you you might have well guessed about Nam spaces and uh uh",
    "start": "72560",
    "end": "79280"
  },
  {
    "text": "yeah the security features that are U either namespace aware or bound to uh to",
    "start": "79280",
    "end": "84920"
  },
  {
    "text": "Nam spaces and uh uh the reason we um I want to do this talk is basically to go",
    "start": "84920",
    "end": "90320"
  },
  {
    "text": "through what can go wrong if our name spaces aren't configured properly from the security standpoint or someone can",
    "start": "90320",
    "end": "98119"
  },
  {
    "text": "uh can tamper with their configuration and um what I also want to uh to leave",
    "start": "98119",
    "end": "103720"
  },
  {
    "text": "you with is a number of mitigations you can effectively enforce in your clusters if you're running any uh in production",
    "start": "103720",
    "end": "110799"
  },
  {
    "text": "and yeah you will see this is nothing expensive actually um The Talk itself is motivated",
    "start": "110799",
    "end": "117320"
  },
  {
    "text": "by uh the security reviews we do the threat models we do uh in control plane",
    "start": "117320",
    "end": "122759"
  },
  {
    "text": "where we see many customers uh relying on lot of security features which depend",
    "start": "122759",
    "end": "128360"
  },
  {
    "text": "on uh very U very secure namespace configuration and what we see is that",
    "start": "128360",
    "end": "133680"
  },
  {
    "text": "they don't always really realize what's the impact of a Mis configuration on a namespace level so uh yeah that's",
    "start": "133680",
    "end": "140160"
  },
  {
    "text": "basically U yeah why I'm I'm talking about you uh about this with you so we",
    "start": "140160",
    "end": "146319"
  },
  {
    "start": "145000",
    "end": "195000"
  },
  {
    "text": "all know about uh kubernetes name spaces uh they are not a security uh feature by",
    "start": "146319",
    "end": "152360"
  },
  {
    "text": "by itself but uh we use them for logically grouping resources in a",
    "start": "152360",
    "end": "157640"
  },
  {
    "text": "cluster so uh they definitely make our life easier for organizing resources in",
    "start": "157640",
    "end": "162879"
  },
  {
    "text": "a cluster uh they are not a security feature as I said so they don't do not",
    "start": "162879",
    "end": "168040"
  },
  {
    "text": "provide any form of isolation and uh uh yeah but we will see that many many",
    "start": "168040",
    "end": "173080"
  },
  {
    "text": "security features depend on them whenever we uh we spin up a new",
    "start": "173080",
    "end": "178319"
  },
  {
    "text": "cluster few names space spes are created by default we don't need to to cover them but yeah obviously you will know",
    "start": "178319",
    "end": "184040"
  },
  {
    "text": "about Cube uh system which holds the control plane components and we",
    "start": "184040",
    "end": "189519"
  },
  {
    "text": "typically spin up new name spaces as we as we build applications on on",
    "start": "189519",
    "end": "195440"
  },
  {
    "text": "kubernetes um not all resources are namespaced so um yeah this is the output",
    "start": "195560",
    "end": "201640"
  },
  {
    "text": "of the uh API Das uh resources uh command and uh yeah many resources are",
    "start": "201640",
    "end": "210040"
  },
  {
    "text": "Global to the whole cluster you will see this with the namespace uh column yeah interestingly enough of",
    "start": "210040",
    "end": "217519"
  },
  {
    "text": "course name spaces are a global resource right so this is a quote which comes",
    "start": "217519",
    "end": "224680"
  },
  {
    "start": "221000",
    "end": "253000"
  },
  {
    "text": "straight from the um kubernetes uh documentation I hope they haven't",
    "start": "224680",
    "end": "230640"
  },
  {
    "text": "changed it just before this talk because it would be very embarassing but this is actually telling us that um yeah you",
    "start": "230640",
    "end": "238319"
  },
  {
    "text": "don't really need name spaces on un you are you're running like tens of apps or you are use you have like tens of users",
    "start": "238319",
    "end": "244879"
  },
  {
    "text": "for your cluster so you start using them uh when you need the features they provide which is kind of",
    "start": "244879",
    "end": "253040"
  },
  {
    "start": "253000",
    "end": "287000"
  },
  {
    "text": "true uh this is another quote from another documentation page uh which is",
    "start": "253040",
    "end": "258680"
  },
  {
    "text": "very very specific just telling us that yeah using namespaces is optional so is that is that true well uh",
    "start": "258680",
    "end": "268479"
  },
  {
    "text": "definitely from the security standpoint uh yeah the the first key takeaway that I'd like you to um yeah to",
    "start": "268479",
    "end": "276080"
  },
  {
    "text": "get from this talk is that they areen really optional and we will now discuss a number of use cases which well well",
    "start": "276080",
    "end": "283680"
  },
  {
    "text": "well where Nam spaces are are very very important so first one I want to mention",
    "start": "283680",
    "end": "289120"
  },
  {
    "start": "287000",
    "end": "340000"
  },
  {
    "text": "here obviously is role based Access Control where Nam spaces provide an essential feature to make sure that",
    "start": "289120",
    "end": "297000"
  },
  {
    "text": "authorization is properly enforced in a class at the users or at the workload",
    "start": "297000",
    "end": "302199"
  },
  {
    "text": "level through service accounts don't need to go through uh the different arbu",
    "start": "302199",
    "end": "307960"
  },
  {
    "text": "resources obviously but here we have an example of a role which grants us some some level of access to a number of",
    "start": "307960",
    "end": "315800"
  },
  {
    "text": "resources through verbs and this is associated uh to a user through a role",
    "start": "315800",
    "end": "320880"
  },
  {
    "text": "binding in a specific Nam space and why is that good because if we have two name",
    "start": "320880",
    "end": "325960"
  },
  {
    "text": "spaces and we want to segregate access to a user to the first name space we can",
    "start": "325960",
    "end": "331120"
  },
  {
    "text": "effectively do that and if we are not really segregating our applications in different name spaces this becomes way",
    "start": "331120",
    "end": "337960"
  },
  {
    "text": "way harder moving on to uh networking we",
    "start": "337960",
    "end": "344759"
  },
  {
    "start": "340000",
    "end": "418000"
  },
  {
    "text": "will see a number of slides here with with regards to this and there are actually several networking features",
    "start": "344759",
    "end": "351440"
  },
  {
    "text": "that depends on on M spaces configuration uh first one we see here is actually the internal DNS resolution",
    "start": "351440",
    "end": "359080"
  },
  {
    "text": "in in a kubernetes cluster so by default all services and pods get DNS name in in",
    "start": "359080",
    "end": "365759"
  },
  {
    "text": "a cluster where the name space obviously is is is also part of that and why is",
    "start": "365759",
    "end": "371400"
  },
  {
    "text": "that important well because this allows us effectively to um have interc",
    "start": "371400",
    "end": "377800"
  },
  {
    "text": "container network communication in our cluster which is also AC cross name spaces and this all comes by default and",
    "start": "377800",
    "end": "385199"
  },
  {
    "text": "for free and we don't need to care about the IP addresses of our pods right and and and obviously the",
    "start": "385199",
    "end": "391840"
  },
  {
    "text": "services so um yeah another important thing we want to mention here obviously",
    "start": "391840",
    "end": "397680"
  },
  {
    "text": "this is a security talk so is that by default through these uh DNS names cross",
    "start": "397680",
    "end": "404759"
  },
  {
    "text": "Nam space communication is also allowed and yeah there are there's no default",
    "start": "404759",
    "end": "410919"
  },
  {
    "text": "Network segregation in kubernetes clusters unless we uh we effectively enforce Network policies in",
    "start": "410919",
    "end": "418120"
  },
  {
    "start": "418000",
    "end": "480000"
  },
  {
    "text": "it so this is an example you see an implementation of a network policy on",
    "start": "418120",
    "end": "423720"
  },
  {
    "text": "the left and yeah kind of a picture depicting it on on the right we have",
    "start": "423720",
    "end": "428879"
  },
  {
    "text": "this pod which belongs to a DB name space which has a a network policy which",
    "start": "428879",
    "end": "435720"
  },
  {
    "text": "is basically allowing traffic to eat only from specific Nam spaces and this",
    "start": "435720",
    "end": "442440"
  },
  {
    "text": "is achieved through a namespace selector um yeah configuration uh in this particular",
    "start": "442440",
    "end": "449080"
  },
  {
    "text": "example this configuration is actually targeting other name Spaces by their name through a specific label which is",
    "start": "449080",
    "end": "456720"
  },
  {
    "text": "kubernetes do/ metadata name but we will talk about this uh later on uh the",
    "start": "456720",
    "end": "462280"
  },
  {
    "text": "important bit about this configuration is that the Pod belonging to the other",
    "start": "462280",
    "end": "467360"
  },
  {
    "text": "name space for example the one on top cannot really talk to u to our uh DB pod",
    "start": "467360",
    "end": "473759"
  },
  {
    "text": "because there's no allowed network conf uh communication Ingress network communication through that",
    "start": "473759",
    "end": "481440"
  },
  {
    "start": "480000",
    "end": "559000"
  },
  {
    "text": "this is a bit of a newer feature I'm not sure how many of you are familiar with the Gateway API this is GA since uh",
    "start": "481680",
    "end": "488599"
  },
  {
    "text": "October 2023 and uh yeah I wasn't really familiar with it but when I started",
    "start": "488599",
    "end": "494400"
  },
  {
    "text": "researching into it a little bit more I came across a very interesting feature they provide which is called cross",
    "start": "494400",
    "end": "500479"
  },
  {
    "text": "namespace uh routing and this basically allows us to uh Implement uh separation",
    "start": "500479",
    "end": "506960"
  },
  {
    "text": "of Duties with a centralized Gateway management where the Gateway is",
    "start": "506960",
    "end": "512719"
  },
  {
    "text": "instantiated in like a platform name space and different HTTP routes can be",
    "start": "512719",
    "end": "519000"
  },
  {
    "text": "implemented into application name spaces so effectively the Gateway configuration",
    "start": "519000",
    "end": "524480"
  },
  {
    "text": "which includes like TLS and yeah like platform level configuration is kind of",
    "start": "524480",
    "end": "530680"
  },
  {
    "text": "centralized uh way away from um the applications which only manage the",
    "start": "530680",
    "end": "538440"
  },
  {
    "text": "routes this feature also depends on namespace selectors so this effectively",
    "start": "538440",
    "end": "544560"
  },
  {
    "text": "allows in this example only the first two applications to uh get public",
    "start": "544560",
    "end": "550560"
  },
  {
    "text": "Ingress while the third application which is supposed to be like a private application is not allow this this level",
    "start": "550560",
    "end": "557040"
  },
  {
    "text": "of access so moving on from uh networking",
    "start": "557040",
    "end": "563720"
  },
  {
    "start": "559000",
    "end": "664000"
  },
  {
    "text": "Let's uh quickly talk about security context so this slide is obviously is",
    "start": "563720",
    "end": "569519"
  },
  {
    "text": "talking about po security standards which are available since uh 125 they",
    "start": "569519",
    "end": "575399"
  },
  {
    "text": "are the replacement to uh PSPs and they're kind of handy because they allow",
    "start": "575399",
    "end": "580560"
  },
  {
    "text": "you to Define uh restrictions at the Pod and container security context and it's",
    "start": "580560",
    "end": "586839"
  },
  {
    "text": "I mean you do it just by specifying different levels so each level is mapped",
    "start": "586839",
    "end": "592160"
  },
  {
    "text": "to a set of constraints and we have privileged Baseline and restricted and",
    "start": "592160",
    "end": "598480"
  },
  {
    "text": "for each of these levels you can actually Define an action which tells the PO security admission controller",
    "start": "598480",
    "end": "605320"
  },
  {
    "text": "what to do if a violation happens on the level so you can effectively enforce a",
    "start": "605320",
    "end": "610959"
  },
  {
    "text": "restricted level like in this example on top which would block a pod running as",
    "start": "610959",
    "end": "616160"
  },
  {
    "text": "route but you can also have like a baseline level for example which is enforced or you could only like audit or",
    "start": "616160",
    "end": "623160"
  },
  {
    "text": "warn the user if a violation happens one important thing I want to",
    "start": "623160",
    "end": "629040"
  },
  {
    "text": "mention on this before we move on is that once again name space are very very important because po security standards",
    "start": "629040",
    "end": "636200"
  },
  {
    "text": "are defined at the name Space level so if you end up with an application with a",
    "start": "636200",
    "end": "641320"
  },
  {
    "text": "ton of microservices and maybe some of them maybe only one of them requires you to relax the security context",
    "start": "641320",
    "end": "648760"
  },
  {
    "text": "restrictions because maybe as to run with some level of privileges you will end up with lowering the level of um",
    "start": "648760",
    "end": "655680"
  },
  {
    "text": "restrictions on all the different pods in that name space so that's where additional namespace segregation might",
    "start": "655680",
    "end": "662000"
  },
  {
    "text": "come into place um yeah we talk about arbach um",
    "start": "662000",
    "end": "668600"
  },
  {
    "start": "664000",
    "end": "720000"
  },
  {
    "text": "networking and security context but uh we also need to mention like Resource Management which also has a lot to do",
    "start": "668600",
    "end": "676320"
  },
  {
    "text": "with name spaces uh won't do much on these slides just want to mention that",
    "start": "676320",
    "end": "681959"
  },
  {
    "text": "resource quotas and limit ranges are two important uh kubernetes features which",
    "start": "681959",
    "end": "687680"
  },
  {
    "text": "are also Nam Space Bound with the resource quotas you set limits",
    "start": "687680",
    "end": "692959"
  },
  {
    "text": "to um storage compute and object count within an let's say at the namespace",
    "start": "692959",
    "end": "699839"
  },
  {
    "text": "level sorry and uh uh the uh the security benefit of this is that you can",
    "start": "699839",
    "end": "706200"
  },
  {
    "text": "effectively limit the risk of nois Neighbors in a cluster where one application takes too many resources and",
    "start": "706200",
    "end": "713760"
  },
  {
    "text": "basically renders other applications like non responsive in a in a cluster um",
    "start": "713760",
    "end": "719959"
  },
  {
    "text": "I've mentioned limit ranges as an additional feature on this I see them as kind of complementary to uh to Resource",
    "start": "719959",
    "end": "727800"
  },
  {
    "start": "720000",
    "end": "760000"
  },
  {
    "text": "quotas because with limit ranges you can effectively Define limits for individual",
    "start": "727800",
    "end": "734360"
  },
  {
    "text": "containers pods or uh persistent volume claims within a name space so while the",
    "start": "734360",
    "end": "740839"
  },
  {
    "text": "resource quote applies to the whole namespace level these uh the limit ranges affect the individual instances",
    "start": "740839",
    "end": "747560"
  },
  {
    "text": "of these resources Within within each Nam space and you also get an",
    "start": "747560",
    "end": "753160"
  },
  {
    "text": "interesting bonus which is to inject a default compute requests and limits for",
    "start": "753160",
    "end": "758760"
  },
  {
    "text": "your pods so is that it have have I con",
    "start": "758760",
    "end": "764639"
  },
  {
    "start": "760000",
    "end": "875000"
  },
  {
    "text": "convinced you or not about like why security and Nam spaces are kind of uh",
    "start": "764639",
    "end": "769839"
  },
  {
    "text": "have something to do together well it's actually more than what I've just talked about and we don't have time to cover",
    "start": "769839",
    "end": "775639"
  },
  {
    "text": "all the use cases obviously but I'd like to mention here for example multi-tenancy considerations right uh",
    "start": "775639",
    "end": "782560"
  },
  {
    "text": "there's no single definition for soft multitenancy but typically the way I see it is that when you are sharing the same",
    "start": "782560",
    "end": "789320"
  },
  {
    "text": "cluster among different tenants so you might have I don't know a tenant per name space or set of name spaces with I",
    "start": "789320",
    "end": "796399"
  },
  {
    "text": "don't know a single control plane or a number of virtualized control planes as I said there's no official definition",
    "start": "796399",
    "end": "803360"
  },
  {
    "text": "but obviously if we are considering multitenancy that's where name spaces are very important because different ANS",
    "start": "803360",
    "end": "810839"
  },
  {
    "text": "deploy their applications into different name spaces and we need to make sure that one application is not uh yeah",
    "start": "810839",
    "end": "818040"
  },
  {
    "text": "lowering the security of the whole cluster or compromising other applications other use cases are like uh",
    "start": "818040",
    "end": "824600"
  },
  {
    "text": "I don't know secrets to pull images from private Registries which are typically defined at the namespace level as well",
    "start": "824600",
    "end": "831360"
  },
  {
    "text": "custom resource definitions which can be Global or namespace and obviously uh Global globally defined crds are kind of",
    "start": "831360",
    "end": "839279"
  },
  {
    "text": "risky because if you are able to to act on a global crd you can modify",
    "start": "839279",
    "end": "844320"
  },
  {
    "text": "configuration of at the cluster level rather than let's say at the namespace level so that's also important and yeah",
    "start": "844320",
    "end": "851199"
  },
  {
    "text": "one final uh one final example is also like PVS and PVCs where this is kind of",
    "start": "851199",
    "end": "857839"
  },
  {
    "text": "kind of interesting because persistent volumes are Global but persistent volume claims are namespaced so you can",
    "start": "857839",
    "end": "863759"
  },
  {
    "text": "effectively end up with um some other application like uh getting hold of a PV",
    "start": "863759",
    "end": "869560"
  },
  {
    "text": "because a PVC gets deployed before the one you are going to to deploy so there's a lot of",
    "start": "869560",
    "end": "876279"
  },
  {
    "start": "875000",
    "end": "921000"
  },
  {
    "text": "considerations here right and basically what um I want to to tell you about this",
    "start": "876279",
    "end": "882880"
  },
  {
    "text": "is that uh although kubernetes Nam spaces are not a security features they",
    "start": "882880",
    "end": "888600"
  },
  {
    "text": "have a lot to do with security so um in particular a lot of the things that U",
    "start": "888600",
    "end": "895839"
  },
  {
    "text": "yeah can go wrong are about misconfiguration and in control pain we see this this all the time uh",
    "start": "895839",
    "end": "902759"
  },
  {
    "text": "misconfiguration is truly a leading cause of cloud insecurity and many many",
    "start": "902759",
    "end": "909160"
  },
  {
    "text": "threats are generated by either misconfiguration or lack of audit or any",
    "start": "909160",
    "end": "914440"
  },
  {
    "text": "of any configuration so we need to care about this a lot or bad things will will",
    "start": "914440",
    "end": "921040"
  },
  {
    "start": "921000",
    "end": "933000"
  },
  {
    "text": "happen so let's now uh yeah present some",
    "start": "921040",
    "end": "926440"
  },
  {
    "text": "uh examples of threats to our clusters based on uh namespace",
    "start": "926440",
    "end": "932240"
  },
  {
    "text": "misconfiguration and the first thing that I want to mention here is one interesting let's say",
    "start": "932240",
    "end": "940199"
  },
  {
    "start": "933000",
    "end": "1000000"
  },
  {
    "text": "um operation which might not be that clear but it's actually uh yeah readily",
    "start": "940199",
    "end": "946959"
  },
  {
    "text": "available for you in any cluster really so Nam spaces themselves are a global resource I've said that but uh a role",
    "start": "946959",
    "end": "956040"
  },
  {
    "text": "with a role binding which allows you like to patch an name space is enough to",
    "start": "956040",
    "end": "961279"
  },
  {
    "text": "modify an existing name space okay so this might sound counterintuitive but uh",
    "start": "961279",
    "end": "968000"
  },
  {
    "text": "yeah effectively if you have this level of access which is is displayed here in",
    "start": "968000",
    "end": "973279"
  },
  {
    "text": "in in the slide you are able to patch a namespace and why is that a security issue well we've just talked about many",
    "start": "973279",
    "end": "981279"
  },
  {
    "text": "security and like networking functionalities which are bound to namespace labels so patching a nam space",
    "start": "981279",
    "end": "987880"
  },
  {
    "text": "means that you can affect effectively modifi labels or even add new labels and",
    "start": "987880",
    "end": "993319"
  },
  {
    "text": "yeah we talked about poort security standards Network policies where like namespace selectors are are very",
    "start": "993319",
    "end": "999440"
  },
  {
    "text": "important so we'll now uh look into more detail about like a practical uh",
    "start": "999440",
    "end": "1006240"
  },
  {
    "start": "1000000",
    "end": "1094000"
  },
  {
    "text": "escalation of privilege um where yeah effectively like a nam space relabeling",
    "start": "1006240",
    "end": "1012399"
  },
  {
    "text": "is is the attack Vector so if you are able to um relabel a namespace and you",
    "start": "1012399",
    "end": "1018279"
  },
  {
    "text": "are running a cluster with po security standards you might be able to bypass existing security context restriction",
    "start": "1018279",
    "end": "1025678"
  },
  {
    "text": "restrictions sorry just by enforcing like a privileged level which basically bypasses all security controls if that's",
    "start": "1025679",
    "end": "1032959"
  },
  {
    "text": "the case Next Step would be to run privileged pod and if you are actually able to run a privileged pod then yeah",
    "start": "1032959",
    "end": "1040558"
  },
  {
    "text": "you are going to harm a cluster and I I hope I'm not saying anything which is",
    "start": "1040559",
    "end": "1045798"
  },
  {
    "text": "surprising you by talking about privileges PS but uh like an example here is that for example if you are able",
    "start": "1045799",
    "end": "1052440"
  },
  {
    "text": "to run a privileged pod you can like mount a host file system break out on the underlying node this might be like a",
    "start": "1052440",
    "end": "1059919"
  },
  {
    "text": "worker node so you might only be able to get information from other application pods but this might include like data",
    "start": "1059919",
    "end": "1066440"
  },
  {
    "text": "stores this might be CI pipelines so there might be secretes there but if you",
    "start": "1066440",
    "end": "1071600"
  },
  {
    "text": "are very unlucky and this is an onframe cluster the PO might even be scheduled",
    "start": "1071600",
    "end": "1077159"
  },
  {
    "text": "like on a control plane node by using using uh yeah specific uh configurations to force a pod on a master node and you",
    "start": "1077159",
    "end": "1084520"
  },
  {
    "text": "might even be able to to steal highly privileged tokens uh and yeah that's",
    "start": "1084520",
    "end": "1090240"
  },
  {
    "text": "really game over for the old cluster talking about Network policies",
    "start": "1090240",
    "end": "1097360"
  },
  {
    "start": "1094000",
    "end": "1135000"
  },
  {
    "text": "and labeling uh well you might be able as an attacker to bypass an existing",
    "start": "1097360",
    "end": "1104600"
  },
  {
    "text": "Network policy restriction through relabeling of an space so in this",
    "start": "1104600",
    "end": "1109960"
  },
  {
    "text": "example here we have this other NS which wasn't previously uh able to talk to our",
    "start": "1109960",
    "end": "1116480"
  },
  {
    "text": "DB but if you understand that the as an attacker so if you get information about",
    "start": "1116480",
    "end": "1122720"
  },
  {
    "text": "how the namespace selector is built through a network policy in the DB Nam space and you can effectively relabel",
    "start": "1122720",
    "end": "1129679"
  },
  {
    "text": "your name space you might Grant yourself additional access okay and example on the Gateway API is",
    "start": "1129679",
    "end": "1137720"
  },
  {
    "start": "1135000",
    "end": "1179000"
  },
  {
    "text": "very very similar so don't want to spend much time on this so yeah basically namespace selectors are used with",
    "start": "1137720",
    "end": "1144360"
  },
  {
    "text": "Gateway uh API cross namespace routing so if you can modify for example this",
    "start": "1144360",
    "end": "1150200"
  },
  {
    "text": "public Gateway uh label in in your name space you might provide yeah an existing",
    "start": "1150200",
    "end": "1158280"
  },
  {
    "text": "um HTTP route uh public Ingress and",
    "start": "1158280",
    "end": "1163440"
  },
  {
    "text": "effectively this can uh yeah result in in very bad things like hijacking of",
    "start": "1163440",
    "end": "1169240"
  },
  {
    "text": "shared gateways exfiltration of data uh unauthorized access to uh yeah internal",
    "start": "1169240",
    "end": "1176080"
  },
  {
    "text": "facing applications once again talking about",
    "start": "1176080",
    "end": "1182200"
  },
  {
    "start": "1179000",
    "end": "1300000"
  },
  {
    "text": "networking and name spaces this uh this this attack doesn't have to do with uh",
    "start": "1182200",
    "end": "1188440"
  },
  {
    "text": "with labels but with how name spaces are named and this might not be uh might not",
    "start": "1188440",
    "end": "1194640"
  },
  {
    "text": "be so straightforward so bear with me so do the uh way internal DNS uh resolution",
    "start": "1194640",
    "end": "1201679"
  },
  {
    "text": "Works uh we might be able to spoof DNS",
    "start": "1201679",
    "end": "1207120"
  },
  {
    "text": "names by naming our Nam spaces as top level domains so in this example here we",
    "start": "1207120",
    "end": "1213720"
  },
  {
    "text": "have a namespace which is created with the com uh name and we create a service",
    "start": "1213720",
    "end": "1218919"
  },
  {
    "text": "in it which is called GitHub and effectively uh yeah any pod any client",
    "start": "1218919",
    "end": "1225760"
  },
  {
    "text": "which is just using a relative DNS look up in our cluster we'll use the local",
    "start": "1225760",
    "end": "1232159"
  },
  {
    "text": "domain search list for um this DNS name which is displayed at the bottom of this",
    "start": "1232159",
    "end": "1239080"
  },
  {
    "text": "slide this is this is injected through cords and effectively this might end up",
    "start": "1239080",
    "end": "1245520"
  },
  {
    "text": "with a DNS resolution which is local to the cluster and not on the public internet so depending on the way DNS",
    "start": "1245520",
    "end": "1252640"
  },
  {
    "text": "resolution is performed either in a relative gen lookup or or an absolute lookup you might end up with uh with",
    "start": "1252640",
    "end": "1260039"
  },
  {
    "text": "this uh um local DNS lookup to actually work which means that you can spoof an",
    "start": "1260039",
    "end": "1266400"
  },
  {
    "text": "existing public domain and maybe use that for I don't know maybe downloading",
    "start": "1266400",
    "end": "1272240"
  },
  {
    "text": "some malicious code into your pod or yeah other bad stuff this is actually one of the few",
    "start": "1272240",
    "end": "1279080"
  },
  {
    "text": "things that uh are actually mentioned in the kubernetes documentation I want to mention that so if you look at the",
    "start": "1279080",
    "end": "1285520"
  },
  {
    "text": "documentation about Nam spaces they tell you that you stent allow tldd named name",
    "start": "1285520",
    "end": "1292200"
  },
  {
    "text": "spaces okay but obviously there's there's no buil-in support for that we will see something later on about",
    "start": "1292200",
    "end": "1300640"
  },
  {
    "start": "1300000",
    "end": "1483000"
  },
  {
    "text": "this last uh kind of threat I want to talk about is obviously a very broad",
    "start": "1300640",
    "end": "1306159"
  },
  {
    "text": "category this is denial of service I'm pretty sure everybody knows what this means and in the context of name spaces",
    "start": "1306159",
    "end": "1313520"
  },
  {
    "text": "this has to do with improper uh resource quot limit range configuration or",
    "start": "1313520",
    "end": "1319840"
  },
  {
    "text": "non-existent configuration of those things and some of the examples we get",
    "start": "1319840",
    "end": "1325080"
  },
  {
    "text": "here are for example noisy neighbors actually taking over of a cluster with",
    "start": "1325080",
    "end": "1330120"
  },
  {
    "text": "the lack of resource quotas which which can be a big problem because uh even",
    "start": "1330120",
    "end": "1335320"
  },
  {
    "text": "system pods running on the same cluster might become unresponsive due to noise enabl or controllers operators and",
    "start": "1335320",
    "end": "1342760"
  },
  {
    "text": "effectively this will uh yeah this will break your cluster or make your whole",
    "start": "1342760",
    "end": "1348080"
  },
  {
    "text": "cluster un responsible so you have to be careful with this um talking about",
    "start": "1348080",
    "end": "1353279"
  },
  {
    "text": "storage couple of interesting examples the the first one is a bit more trivial",
    "start": "1353279",
    "end": "1358559"
  },
  {
    "text": "probably uh if you don't have any kind of limit on your PVC sizes you might end up with filling up your storage uh very",
    "start": "1358559",
    "end": "1365720"
  },
  {
    "text": "quickly which might be your dis if you're using like local storage drivers or even like cloud storage and this",
    "start": "1365720",
    "end": "1372679"
  },
  {
    "text": "might actually also be like a billing problem if you're using um cloud storage",
    "start": "1372679",
    "end": "1378159"
  },
  {
    "text": "um another interesting thing which is also found in the in the kubernetes docs is that Secrets themselves can get",
    "start": "1378159",
    "end": "1385120"
  },
  {
    "text": "pretty big so you might want to have limits on the number of Secrets you can",
    "start": "1385120",
    "end": "1390320"
  },
  {
    "text": "instantiate per name space because that's also a possibility for like",
    "start": "1390320",
    "end": "1395440"
  },
  {
    "text": "creating many many secrets so much that you exhaust the uh node storage which",
    "start": "1395440",
    "end": "1401360"
  },
  {
    "text": "will once again result in uh rendering the cluster non-responsive which might",
    "start": "1401360",
    "end": "1407000"
  },
  {
    "text": "yeah make it yeah nonfunctioning um talking about limit",
    "start": "1407000",
    "end": "1413240"
  },
  {
    "text": "ranges and and um yeah here in this context there's one particular example",
    "start": "1413240",
    "end": "1418919"
  },
  {
    "text": "which is also interesting with regards to uh misconfiguration which is that if you don't set your limits right you might",
    "start": "1418919",
    "end": "1426559"
  },
  {
    "text": "end up with causing denial of service for yourself for all the pods whose request for a specific resource like",
    "start": "1426559",
    "end": "1434440"
  },
  {
    "text": "compute U exceeds the defined limits so if you define find limits be be mindful",
    "start": "1434440",
    "end": "1440679"
  },
  {
    "text": "of the uh yeah the the actual um load of your application",
    "start": "1440679",
    "end": "1447240"
  },
  {
    "text": "right and yeah the final the final thought about this is that all I've been talking about is already scary if you're",
    "start": "1447240",
    "end": "1455039"
  },
  {
    "text": "running your cluster for for your company but if this is like a multi-tenancy scenario so these are",
    "start": "1455039",
    "end": "1460600"
  },
  {
    "text": "different teams these are maybe different uh yeah organizations this can",
    "start": "1460600",
    "end": "1466080"
  },
  {
    "text": "get even worse so you obious will end up with yeah breaking up breaking down like",
    "start": "1466080",
    "end": "1472039"
  },
  {
    "text": "the isolation model within kubernetes rendering other tenants in response non- responsive which uh yeah will be will",
    "start": "1472039",
    "end": "1480080"
  },
  {
    "text": "definitely be a bigger issue in this context so uh this is just an example",
    "start": "1480080",
    "end": "1486520"
  },
  {
    "start": "1483000",
    "end": "1507000"
  },
  {
    "text": "this is just a subset of threats that are U yeah depend on namespace",
    "start": "1486520",
    "end": "1492440"
  },
  {
    "text": "misconfiguration so what can we do about it to make this this better for us and",
    "start": "1492440",
    "end": "1499080"
  },
  {
    "text": "the uh the good part about this is that we don't need to buy fancy software to solve most of this this is the this is",
    "start": "1499080",
    "end": "1505440"
  },
  {
    "text": "the important bit so first of all yeah we I mean I I I talk about this all the",
    "start": "1505440",
    "end": "1511960"
  },
  {
    "start": "1507000",
    "end": "1597000"
  },
  {
    "text": "time as yeah doing as I'm doing security all the time is least privilege our back",
    "start": "1511960",
    "end": "1517760"
  },
  {
    "text": "is still the probably the most important mitigation you need to put in place so",
    "start": "1517760",
    "end": "1524080"
  },
  {
    "text": "uh you should carefully understand if your use case requires any form of",
    "start": "1524080",
    "end": "1530080"
  },
  {
    "text": "access to namespace objects readon namespace objects should be the default if you need access to Nam spaces unless",
    "start": "1530080",
    "end": "1537600"
  },
  {
    "text": "your application or operator or whatever actually needs to uh to modify them this",
    "start": "1537600",
    "end": "1543240"
  },
  {
    "text": "also means and yeah we have we have a quote here a very famous quote this",
    "start": "1543240",
    "end": "1548919"
  },
  {
    "text": "means that you should not have wild cards as much as possible on resources",
    "start": "1548919",
    "end": "1554520"
  },
  {
    "text": "and verbs when defining roles in a cluster um you should also be careful about uh",
    "start": "1554520",
    "end": "1562279"
  },
  {
    "text": "cluster R bindings we haven't really talked about that a lot because cluster roll bindings effectively only apply to",
    "start": "1562279",
    "end": "1568480"
  },
  {
    "text": "Cluster roles so this will grant you some level of access on global resources most of the time and if an attacker has",
    "start": "1568480",
    "end": "1575600"
  },
  {
    "text": "any any access to them this is a likely point of escalation because they will try to move towards name spaces that",
    "start": "1575600",
    "end": "1582840"
  },
  {
    "text": "yeah hold most sensitive data in a cluster um final remark on this",
    "start": "1582840",
    "end": "1589200"
  },
  {
    "text": "regardless of you allowing changes to Nam spaces you should log them audit",
    "start": "1589200",
    "end": "1594960"
  },
  {
    "text": "them regularly so it's safe is it safe to actually Grant read access to Nam spaces",
    "start": "1594960",
    "end": "1602799"
  },
  {
    "start": "1597000",
    "end": "1646000"
  },
  {
    "text": "well kind of as we've seen so far Nam spaces can",
    "start": "1602799",
    "end": "1608120"
  },
  {
    "text": "still leak a lot of information which is not sensitive per se but might be useful for attackers like if you can list all",
    "start": "1608120",
    "end": "1615760"
  },
  {
    "text": "name spaces in a cluster for example you might understand understand that there are specific cluster components running",
    "start": "1615760",
    "end": "1621480"
  },
  {
    "text": "or that there are specific applications running and we know that namespace names are also part of the DNS names of those",
    "start": "1621480",
    "end": "1629120"
  },
  {
    "text": "applications uh obviously if you can get um an understanding of how namespace is",
    "start": "1629120",
    "end": "1635120"
  },
  {
    "text": "configured you understand if there's a pod security standard level attached to",
    "start": "1635120",
    "end": "1640240"
  },
  {
    "text": "it or if there are any custom labels that might be used by by",
    "start": "1640240",
    "end": "1646559"
  },
  {
    "start": "1646000",
    "end": "1694000"
  },
  {
    "text": "attackers yeah one final remark I have about namespace selectors is that and we",
    "start": "1646559",
    "end": "1652480"
  },
  {
    "text": "just touched on this in one of the earlier slides is that whenever you have namespace selectors you should be uh",
    "start": "1652480",
    "end": "1659240"
  },
  {
    "text": "looking into using the um kubernetes metadata name immutable label this",
    "start": "1659240",
    "end": "1667240"
  },
  {
    "text": "explicitly uh requires the owner of the resource which has a namespace selector",
    "start": "1667240",
    "end": "1672480"
  },
  {
    "text": "to mention the name spaces which are allowed to access that resource by name",
    "start": "1672480",
    "end": "1677679"
  },
  {
    "text": "and OB L this might be a bit more maintenance effort because you cannot use just whatever label but at least",
    "start": "1677679",
    "end": "1684360"
  },
  {
    "text": "this cannot be modified or deleted by attackers so a lot of the of the of the",
    "start": "1684360",
    "end": "1689399"
  },
  {
    "text": "attacks we've seen before might be mitigated by by having this approach when talking about uh",
    "start": "1689399",
    "end": "1696519"
  },
  {
    "start": "1694000",
    "end": "1747000"
  },
  {
    "text": "multitenancy soft multitenancy uh our recommendation is that Nam spaces",
    "start": "1696519",
    "end": "1702679"
  },
  {
    "text": "shouldn't be uh really managed by the tenants so we look like into internal",
    "start": "1702679",
    "end": "1708480"
  },
  {
    "text": "development platforms nowadays and a lot of resources can be self-provisioned by these by these platforms but Nam spaces",
    "start": "1708480",
    "end": "1715519"
  },
  {
    "text": "shouldn't really be self-provisioned and actually tenants shouldn't really uh",
    "start": "1715519",
    "end": "1721559"
  },
  {
    "text": "have a say on the labels which are applied to this to the name spaces or even the names that are applied to these",
    "start": "1721559",
    "end": "1727840"
  },
  {
    "text": "name spaces this should be um assigned by the platform admins if possible and",
    "start": "1727840",
    "end": "1734399"
  },
  {
    "text": "uh if you if you want to enforce these or if you need for example your tenants to have some some access to name spaces",
    "start": "1734399",
    "end": "1740960"
  },
  {
    "text": "that's where additional um controls can be implemented through policy engines",
    "start": "1740960",
    "end": "1746960"
  },
  {
    "text": "and uh yeah I'll be very quick about this this is a you will see now a number of examples about um policies these are",
    "start": "1746960",
    "end": "1756080"
  },
  {
    "start": "1747000",
    "end": "1794000"
  },
  {
    "text": "all kerno policies there's no particular reason for for that uh Opa Gat keeper",
    "start": "1756080",
    "end": "1761240"
  },
  {
    "text": "obviously is another important one but uh what I'm going uh I want to show show",
    "start": "1761240",
    "end": "1766399"
  },
  {
    "text": "here is that you can implement fairly easy policies which can still provide additional restrictions on what your",
    "start": "1766399",
    "end": "1773240"
  },
  {
    "text": "tenants or users can do on the Nam spaces and like this example here for example will force well will forbid any",
    "start": "1773240",
    "end": "1781799"
  },
  {
    "text": "uh change to La labels into name spaces which are named as like prod Das",
    "start": "1781799",
    "end": "1787919"
  },
  {
    "text": "something those this like a naming convention for this example for all production name",
    "start": "1787919",
    "end": "1793399"
  },
  {
    "text": "spaces another example I have here for you is with regards to the top level domains we talked about earlier you",
    "start": "1793399",
    "end": "1800440"
  },
  {
    "start": "1794000",
    "end": "1823000"
  },
  {
    "text": "could Implement a policy around that which will basically just not allow the creation of name spaces with those",
    "start": "1800440",
    "end": "1807080"
  },
  {
    "text": "identifiers uh interesting thing about it is that I downloaded the full list from",
    "start": "1807080",
    "end": "1812840"
  },
  {
    "text": "I and I created a policy about this and it got like the yaml file got like 60",
    "start": "1812840",
    "end": "1818240"
  },
  {
    "text": "kilobytes long so yeah kind of a big one but it works um final final policy I have for",
    "start": "1818240",
    "end": "1826360"
  },
  {
    "start": "1823000",
    "end": "1848000"
  },
  {
    "text": "you we haven't really talked about about this but it is an additional Safeguard you might want to disallow the creation",
    "start": "1826360",
    "end": "1832720"
  },
  {
    "text": "of cube Das something name spaces uh just as a safe measure against attackers",
    "start": "1832720",
    "end": "1839000"
  },
  {
    "text": "trying to hide themselves in your cluster okay so you might you might not realize that but that's actually",
    "start": "1839000",
    "end": "1845240"
  },
  {
    "text": "something which is quite quite important so uh yeah we finally reached",
    "start": "1845240",
    "end": "1851320"
  },
  {
    "start": "1848000",
    "end": "1927000"
  },
  {
    "text": "the end of this of this presentation uh key takeways for you I strongly believe like kubernetes",
    "start": "1851320",
    "end": "1858639"
  },
  {
    "text": "name spaces have grown from an optional feature as the documentation says to uh",
    "start": "1858639",
    "end": "1865039"
  },
  {
    "text": "actually it's Cornerstone for several security features in our cluster so",
    "start": "1865039",
    "end": "1870799"
  },
  {
    "text": "although they they do not provide any isolation by themselves a lot of security uh functionalities are based of",
    "start": "1870799",
    "end": "1877960"
  },
  {
    "text": "them uh misconfiguration is a real thing and uh therefore you should restrict",
    "start": "1877960",
    "end": "1883760"
  },
  {
    "text": "what users can do and you should audit changes to your namespace B in",
    "start": "1883760",
    "end": "1888880"
  },
  {
    "text": "production least privilege is uh the most important mitigation alongside the",
    "start": "1888880",
    "end": "1894919"
  },
  {
    "text": "use of immutable labels which sounds like a trivial thing but actually isn't",
    "start": "1894919",
    "end": "1900279"
  },
  {
    "text": "and this is all for free if you then need to implement additional safeguards",
    "start": "1900279",
    "end": "1905799"
  },
  {
    "text": "and yeah this might be more relevant for example for multi- tency scenarios you can leverage policy engines which",
    "start": "1905799",
    "end": "1912679"
  },
  {
    "text": "although complex can help you define these additional safeguards which you can't imp ment with arbach alone so with",
    "start": "1912679",
    "end": "1920799"
  },
  {
    "text": "that said thank you very much and",
    "start": "1920799",
    "end": "1926159"
  },
  {
    "text": "uh",
    "start": "1926159",
    "end": "1929159"
  }
]