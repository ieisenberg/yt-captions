[
  {
    "start": "0",
    "end": "55000"
  },
  {
    "text": "so this is the open policy agent introduction session so I hope",
    "start": "690",
    "end": "5730"
  },
  {
    "text": "everybody's here for the open intro session if you're not here for this it's a good time to time to leave so before I",
    "start": "5730",
    "end": "13200"
  },
  {
    "text": "get started how many people here have heard about OPA before okay a few of you",
    "start": "13200",
    "end": "19230"
  },
  {
    "text": "and is anybody using OPA today or have you actually tried it for POC or an",
    "start": "19230",
    "end": "24480"
  },
  {
    "text": "experiment okay one person okay great so I think everybody here is in the right",
    "start": "24480",
    "end": "29820"
  },
  {
    "text": "place hopefully we can help you audible so my name is Tauron I'm an engineer at",
    "start": "29820",
    "end": "37469"
  },
  {
    "text": "styro and I'm one of the co-creators of the open policy agent styro is the",
    "start": "37469",
    "end": "42989"
  },
  {
    "text": "company that created open policy agent I'm an engineer there I work primarily on OPA if you've been on the OPA slack then",
    "start": "42989",
    "end": "49800"
  },
  {
    "text": "you'll know me as T sandal on there and on Twitter my name is Sam Turin so",
    "start": "49800",
    "end": "56360"
  },
  {
    "start": "55000",
    "end": "157000"
  },
  {
    "text": "before I dive into the details what I'm gonna do just kind of give an overview of OPA and the background so the project",
    "start": "56360",
    "end": "65100"
  },
  {
    "text": "itself was started in the beginning of 2016 that's Tyra and the goal of the",
    "start": "65100",
    "end": "70650"
  },
  {
    "text": "project when we started it was to basically provide a building block that would help unify policy enforcement",
    "start": "70650",
    "end": "77369"
  },
  {
    "text": "across a range of different technology and over the last year and a half or two",
    "start": "77369",
    "end": "83970"
  },
  {
    "text": "years we've had a lot of growth in terms of the number of end users that are using the pop of the project to solve",
    "start": "83970",
    "end": "90390"
  },
  {
    "text": "all kinds of different policy use cases in their organizations so today",
    "start": "90390",
    "end": "95479"
  },
  {
    "text": "companies like Netflix use OPA to enforce access control over internal",
    "start": "95479",
    "end": "101729"
  },
  {
    "text": "resources over internal micro-service api's companies like chef are using OPA",
    "start": "101729",
    "end": "106860"
  },
  {
    "text": "to deliver I am capabilities in their products they ship to their customers and there are",
    "start": "106860",
    "end": "114000"
  },
  {
    "text": "dozens of companies like Medallia and CloudFlare and State Street and more that are all using open to enforce all",
    "start": "114000",
    "end": "120479"
  },
  {
    "text": "kinds of policies or guardrails or constraints over their platforms over things like kubernetes clusters so today",
    "start": "120479",
    "end": "127469"
  },
  {
    "text": "opens being used for a variety different use cases around admission control and API authorization and more things like",
    "start": "127469",
    "end": "132569"
  },
  {
    "text": "risk management and and it's now a CNC F incubating project as well so as of April it was",
    "start": "132569",
    "end": "138510"
  },
  {
    "text": "promoted up from the sandbox which we joined last year to incubating and we",
    "start": "138510",
    "end": "144269"
  },
  {
    "text": "have about 60 different people that have contributed to the project we have over 900 people on our slack organization",
    "start": "144269",
    "end": "149909"
  },
  {
    "text": "we've got over 2,000 stars we have over 20 integrations with other projects in that in a cloud native ecosystem so just",
    "start": "149909",
    "end": "159030"
  },
  {
    "text": "to kind of motivate the problem and kind of explain why OVA exists imagine you know imagine you have a large",
    "start": "159030",
    "end": "164099"
  },
  {
    "text": "application right you have a micro service based architecture and you know you have some portal which your",
    "start": "164099",
    "end": "170670"
  },
  {
    "text": "customers connect to right and they maybe they connect to that portal to to buy things for their pets or to do all",
    "start": "170670",
    "end": "176700"
  },
  {
    "text": "kinds of you know online shopping or something like that and that application is implemented by a set of micro",
    "start": "176700",
    "end": "183120"
  },
  {
    "text": "services right so you have a service that does payments right it processes all the payments that the customers are",
    "start": "183120",
    "end": "188250"
  },
  {
    "text": "making you have a service that handles account data you have a service that deals with promotions a service that",
    "start": "188250",
    "end": "194280"
  },
  {
    "text": "does notifications that talks to partner api's some of these services talk to you know internal databases that you're",
    "start": "194280",
    "end": "200340"
  },
  {
    "text": "running like like my sequel others talk to external services like s3 right so this is a very typical kind of",
    "start": "200340",
    "end": "206609"
  },
  {
    "text": "architecture from in modern organizations right now the problem is is that today somebody like Alice a",
    "start": "206609",
    "end": "213090"
  },
  {
    "text": "developer often has complete access to all of the services that make up that",
    "start": "213090",
    "end": "218609"
  },
  {
    "text": "application right Alice's is a developer of the company and so she often has to",
    "start": "218609",
    "end": "223859"
  },
  {
    "text": "troubleshoot the services that make up the application and so she has complete you know access to the portal and all of",
    "start": "223859",
    "end": "229949"
  },
  {
    "text": "the payment services and account services and so on right and so this this is this is important because Alice",
    "start": "229949",
    "end": "235769"
  },
  {
    "text": "often needs to debug these services and access them and do things with them but at the same time it's it's risky right",
    "start": "235769",
    "end": "241530"
  },
  {
    "text": "because if she decides that she wants to look up Bob's credit card number or she wants to look up Bob's private",
    "start": "241530",
    "end": "247379"
  },
  {
    "text": "information she can do that right she has a lot of permissions in the system so to address that what we want to do is",
    "start": "247379",
    "end": "255659"
  },
  {
    "text": "put you know authorization or access control checks in each one of these locations right so we we would want to",
    "start": "255659",
    "end": "261900"
  },
  {
    "text": "go into the payment service and add API authorization we want to go into the account service and do the same and so on and so forth right",
    "start": "261900",
    "end": "267190"
  },
  {
    "text": "and in some cases we might have to deal with external authorization systems like s3 right or AWS I am the problem though",
    "start": "267190",
    "end": "276550"
  },
  {
    "text": "with having to go in and do authorization or access control in every single one of these services is that it",
    "start": "276550",
    "end": "281590"
  },
  {
    "text": "raises a number of questions right it might be easy to do it in one service on its own but when you look at a large",
    "start": "281590",
    "end": "286660"
  },
  {
    "text": "application you know in a large organization there are all kinds of questions that come up when you're thinking about access control and",
    "start": "286660",
    "end": "292450"
  },
  {
    "text": "authorization so for example you know what do you do when the Information Security Department comes along and they",
    "start": "292450",
    "end": "299740"
  },
  {
    "text": "have near new policies for you to enforce what are you doing legal or compliance have the same right how do",
    "start": "299740",
    "end": "305080"
  },
  {
    "text": "you how do you address this across a large range of services moreover how do you delegate control to your end-users",
    "start": "305080",
    "end": "310720"
  },
  {
    "text": "right how do you give end-users the ability to specify the policies that govern access to their to their data how",
    "start": "310720",
    "end": "316420"
  },
  {
    "text": "do you roll out changes for the policy right the policy is going to change at some point that's just a fact how do you",
    "start": "316420",
    "end": "322330"
  },
  {
    "text": "how do you do that you have to you know release a new version of the of the service well that might be that might be",
    "start": "322330",
    "end": "327820"
  },
  {
    "text": "complicated or painful right you want to just make a change to the policy moreover how do you access you know how",
    "start": "327820",
    "end": "333850"
  },
  {
    "text": "do you write policies that leverage external context right a lot of the time the policies that make sense in large organizations depend on you know",
    "start": "333850",
    "end": "340630"
  },
  {
    "text": "external databases or external context within the organization things like you know HR database or an application",
    "start": "340630",
    "end": "345669"
  },
  {
    "text": "database and so on right so how do you how you get that kind of data down to the policy engine how do you get it into",
    "start": "345669",
    "end": "350919"
  },
  {
    "text": "the policy engine how do you make use of it inside of the policies you know and also like how you render UI is based on",
    "start": "350919",
    "end": "357040"
  },
  {
    "text": "policy how do you test your policies for correctness how do you know that the policies you've got in place are actually doing what you expect them to",
    "start": "357040",
    "end": "363760"
  },
  {
    "text": "do right and and how do you do this you know when you have hundreds of services or in dozens of different languages that",
    "start": "363760",
    "end": "369669"
  },
  {
    "text": "have all kinds of different you know identity protocols that they use to authenticate users that run in different",
    "start": "369669",
    "end": "375550"
  },
  {
    "text": "kinds of execution environments like containers and bare metal and so on and so forth right but the problem doesn't",
    "start": "375550",
    "end": "382090"
  },
  {
    "text": "really stop at the application layer it also exists at the platform layer right so this this application happens to run",
    "start": "382090",
    "end": "387640"
  },
  {
    "text": "on kubernetes and again Alice has kind",
    "start": "387640",
    "end": "393010"
  },
  {
    "text": "of full access to kubernetes right she is responsible for providing configurations to kubernetes that define",
    "start": "393010",
    "end": "398800"
  },
  {
    "text": "you know ingresses and pods and she controls network policy for her application and she is",
    "start": "398800",
    "end": "404830"
  },
  {
    "text": "responsible for creating persistent volume claims and all that kind of stuff right well the problem with giving alice",
    "start": "404830",
    "end": "411339"
  },
  {
    "text": "direct access to compute storage network resources is that a lot of things can go wrong right Alice can create an ingress",
    "start": "411339",
    "end": "418779"
  },
  {
    "text": "that conflicts with another ingress in another namespace and so suddenly when she creates that conflicting ingress",
    "start": "418779",
    "end": "424809"
  },
  {
    "text": "traffic is no longer being routed to the right place right it's going to her development her development instance she",
    "start": "424809",
    "end": "432369"
  },
  {
    "text": "can easily run you know vulnerable container images with no not vulnerable ities right there's nothing stopping Alice from just saying deploy this image",
    "start": "432369",
    "end": "439809"
  },
  {
    "text": "from from docker hub and run it right there's nothing stopping Alice from instantiating a network policy that",
    "start": "439809",
    "end": "446110"
  },
  {
    "text": "allows outgoing you know egress traffic to any IP address in the world right",
    "start": "446110",
    "end": "451449"
  },
  {
    "text": "there's nothing stopping that again and again you know yeah Alice isn't stopped from she can instantiate pods that don't",
    "start": "451449",
    "end": "458949"
  },
  {
    "text": "put any but limits on CPU and memory right so you can have runaway resource usage right so there are all kinds of",
    "start": "458949",
    "end": "466360"
  },
  {
    "text": "different policy concerns across the stack right and so this is why we why we created the OPA policy agent at styro",
    "start": "466360",
    "end": "473529"
  },
  {
    "text": "was because we wanted to provide a building block that would help a unify policy enforcement across a wide range of services so you know if you look at",
    "start": "473529",
    "end": "481419"
  },
  {
    "text": "different services or technology today they typically have their own you know access control or policy or",
    "start": "481419",
    "end": "486969"
  },
  {
    "text": "authorization systems and the problem is that if you're in a large organization you have every single one of these",
    "start": "486969",
    "end": "492009"
  },
  {
    "text": "components in your in your system and so to manage the access control rules becomes very difficult because you have",
    "start": "492009",
    "end": "498249"
  },
  {
    "text": "to go into each one of those systems and and modify the policy right well wouldn't it be better if we had one kind",
    "start": "498249",
    "end": "504879"
  },
  {
    "text": "of building block one policy system that could plug into all these different components and that would give you",
    "start": "504879",
    "end": "510189"
  },
  {
    "text": "basically a single way a centralized way of managing policy so this is why you create created open we wanted to",
    "start": "510189",
    "end": "515529"
  },
  {
    "text": "basically unify policy enforcement across the stack and so this is this is",
    "start": "515529",
    "end": "520809"
  },
  {
    "text": "just a picture that we that we often show this is an example of you know all the different kinds of integrations we",
    "start": "520809",
    "end": "525970"
  },
  {
    "text": "have with OPA now we have integrations with kubernetes obviously for admission control we have integrations with",
    "start": "525970",
    "end": "531279"
  },
  {
    "text": "various micro service frameworks and service projects we have people",
    "start": "531279",
    "end": "537460"
  },
  {
    "text": "using OPA to enforce policies on public clouds with things like for SETI in Google Cloud and terraform and then we",
    "start": "537460",
    "end": "544750"
  },
  {
    "text": "have other other integrations for produced cases like data protection and data filtering and so on so what is what",
    "start": "544750",
    "end": "553810"
  },
  {
    "text": "is open exactly well OPA is what we say we call it a",
    "start": "553810",
    "end": "559090"
  },
  {
    "text": "general-purpose policy engine and what that means is that it's domain agnostic",
    "start": "559090",
    "end": "564280"
  },
  {
    "text": "but to understand it simply we can look at a single service so say you know you were responsible for implementing the",
    "start": "564280",
    "end": "569980"
  },
  {
    "text": "salary service within your within your company right so this service is responsible for serving salary data for",
    "start": "569980",
    "end": "576760"
  },
  {
    "text": "employees right so the service exposes is an API that allows you to look up the salary for any given employee right so",
    "start": "576760",
    "end": "583690"
  },
  {
    "text": "you can send a get to the service for a slash salary slash Bob and you provide your credentials in the authorization",
    "start": "583690",
    "end": "589750"
  },
  {
    "text": "header and the salary service will return the salary for that an employee but obviously when when you look up an",
    "start": "589750",
    "end": "597250"
  },
  {
    "text": "employee's salary you know that needs to be authorized right you don't want anybody to be able to see your salary and so that that that authorization",
    "start": "597250",
    "end": "604810"
  },
  {
    "text": "process is a policy decision and so with OPA the way this works is that the",
    "start": "604810",
    "end": "609850"
  },
  {
    "text": "salary service queries OPA for the policy decision for the authorization decision and when it query is OPA for",
    "start": "609850",
    "end": "616390"
  },
  {
    "text": "that decision it supplies a bunch of attributes and so in this case it would supply things like the HTTP method from",
    "start": "616390",
    "end": "623350"
  },
  {
    "text": "the incoming request the path from the incoming request the user that's making the request and so on all right and so",
    "start": "623350",
    "end": "630010"
  },
  {
    "text": "then OPA will take those attributes and it will evaluate them against policies and data that you've given to OPA to",
    "start": "630010",
    "end": "636580"
  },
  {
    "text": "produce a decision like allow or deny which it'll send back to the service to be enforced so the important thing to",
    "start": "636580",
    "end": "643030"
  },
  {
    "text": "keep in mind with OPA is that policy what it does is at a high level fundamentally is it decouples policy",
    "start": "643030",
    "end": "649300"
  },
  {
    "text": "enforcement from policy decision-making and once you do that once you've decoupled enforcement from",
    "start": "649300",
    "end": "655120"
  },
  {
    "text": "decision-making it opens up a number of interesting opportunities now when we",
    "start": "655120",
    "end": "661600"
  },
  {
    "text": "say that OPA is general purpose we really mean it when we say it's dome an agnostic we really mean it",
    "start": "661600",
    "end": "666839"
  },
  {
    "text": "so I was talking about the salary service a second ago but you could substitute salary service for all kinds",
    "start": "666839",
    "end": "672779"
  },
  {
    "text": "of different components you could it could be a you know it could be an API gateway it could be a service proxy like",
    "start": "672779",
    "end": "678269"
  },
  {
    "text": "envoy it could be a custom internal micro service it could be you know an SSH daemon it could be you know an",
    "start": "678269",
    "end": "684600"
  },
  {
    "text": "object store like SEF right this is why we call open domain agnostic because it",
    "start": "684600",
    "end": "689999"
  },
  {
    "text": "can plug into all these different kinds of services now in order to make that work we made",
    "start": "689999",
    "end": "695910"
  },
  {
    "text": "certain design decisions when we started open and one of them was that OPA itself wasn't going to be coupled to any",
    "start": "695910",
    "end": "701879"
  },
  {
    "text": "project or domain-specific data model so the attributes that you supply to OPA in",
    "start": "701879",
    "end": "707339"
  },
  {
    "text": "the policy query can be arbitrary JSON values you can supply any JSON data you",
    "start": "707339",
    "end": "712649"
  },
  {
    "text": "want in the policy query method and path and user are not special in any way",
    "start": "712649",
    "end": "717930"
  },
  {
    "text": "they're just JSON data that gets supplied as input to the policy engine and then similarly the output from the",
    "start": "717930",
    "end": "724920"
  },
  {
    "text": "policy can be any JSON values so a second ago I showed true or false being sent back but you can generate numbers",
    "start": "724920",
    "end": "730499"
  },
  {
    "text": "you can generate strings you could generate large complex objects that represent your policy decision so OPA",
    "start": "730499",
    "end": "737670"
  },
  {
    "text": "itself basically helps you decouple policy enforcement from policy decision making and it does that by remaining you",
    "start": "737670",
    "end": "745019"
  },
  {
    "text": "know domain agnostic it sees JSON data coming in in the queries it sees JSON data being evaluated and it sees JSON",
    "start": "745019",
    "end": "751980"
  },
  {
    "text": "data being sent back to the service for enforcement now when you use OPA",
    "start": "751980",
    "end": "759179"
  },
  {
    "start": "756000",
    "end": "806000"
  },
  {
    "text": "the first thing that you come in count that you encounter is opus policy language and that language is called",
    "start": "759179",
    "end": "764790"
  },
  {
    "text": "Rago and Rago is basically a high-level declarative language that is purpose-built for OPA that is really",
    "start": "764790",
    "end": "772410"
  },
  {
    "text": "good at expressing policies or answers to questions like can user X perform",
    "start": "772410",
    "end": "777779"
  },
  {
    "text": "operation Y on lease or Z right or you know which rules which invariants",
    "start": "777779",
    "end": "783749"
  },
  {
    "text": "would this workload violate if it were to be deployed or which records should",
    "start": "783749",
    "end": "788790"
  },
  {
    "text": "Bob be allowed to see so I'm going to show an example of Ray go in a few minutes but the thing to keep in mind is",
    "start": "788790",
    "end": "795600"
  },
  {
    "text": "that it's a high-level declarative language and it's really good at basically letting you write strengths over you know large sets of",
    "start": "795600",
    "end": "802170"
  },
  {
    "text": "JSON data large unstructured sets of JSON data now when you actually use OPA",
    "start": "802170",
    "end": "809870"
  },
  {
    "start": "806000",
    "end": "954000"
  },
  {
    "text": "you have different options so conceptually they're all the same but depending on your use case some options",
    "start": "809870",
    "end": "816810"
  },
  {
    "text": "make more sense than others so if you're building services in go you can actually embed OPA directly as a library inside",
    "start": "816810",
    "end": "823589"
  },
  {
    "text": "of your service just as a go library but if you're not building services and go then you can run it as a daemon and we typically",
    "start": "823589",
    "end": "831389"
  },
  {
    "text": "recommend that what you do is you run it as a sidecar container or sidecar daemon or a host level daemon so the model is",
    "start": "831389",
    "end": "838410"
  },
  {
    "text": "very similar either it's either it's a library embedded inside of your service or it's a daemon that's running next to",
    "start": "838410",
    "end": "843690"
  },
  {
    "text": "your service ideally on the same machine the reason that we recommend that you do this the reason that you recommend that",
    "start": "843690",
    "end": "849630"
  },
  {
    "text": "you take oppa and you run it next to your service is that it reduces the impact on availability and it reduces",
    "start": "849630",
    "end": "856620"
  },
  {
    "text": "the impact on performance if every single time your service has to make a policy decision it has to call out over",
    "start": "856620",
    "end": "862949"
  },
  {
    "text": "the network then there's gonna be a lot of latency introduced into the request path right and if you're building like",
    "start": "862949",
    "end": "868410"
  },
  {
    "text": "micro services for example you know there might be several micro services involved in the handling of a particular",
    "start": "868410",
    "end": "873690"
  },
  {
    "text": "application request and if at every single hop in that chain you have to call out over the network then it's gonna blow your SLA you're not gonna",
    "start": "873690",
    "end": "879750"
  },
  {
    "text": "believe me your your your SLA similarly if oppa has to color it rather if your service has to call it over the network",
    "start": "879750",
    "end": "885690"
  },
  {
    "text": "every time it has to make a decision then the network might get slow it might go down the host that opens running on might die and then your service will be",
    "start": "885690",
    "end": "892620"
  },
  {
    "text": "able to get policy decisions back and so it's gonna basically fail close and you're not me serving traffic right so you're gonna have downtime so oppa from",
    "start": "892620",
    "end": "900000"
  },
  {
    "text": "the very beginning was designed with this model of acting as a host local cache for policy decisions what it does",
    "start": "900000",
    "end": "905910"
  },
  {
    "text": "is it enables distributed policy enforcement you take oppa and you run it next to your service in order to make",
    "start": "905910",
    "end": "912839"
  },
  {
    "text": "that happen we made certain design decisions again so the first of which was that all the policy and data that oppa uses to make decisions all of that",
    "start": "912839",
    "end": "918899"
  },
  {
    "text": "is kept in memory when you ask Oprah for a policy decision it has all the data and the rules it needs to resolve that",
    "start": "918899",
    "end": "925949"
  },
  {
    "text": "that query and send back an answer so it's not going to call out when you ask it for a decision to another service",
    "start": "925949",
    "end": "931860"
  },
  {
    "text": "it's not gonna ask another service for more data on its own you can extend oppa you can",
    "start": "931860",
    "end": "937620"
  },
  {
    "text": "you can in your policy you can do an HTTP call out to get more data and you can extend oppa by plugging into by",
    "start": "937620",
    "end": "944370"
  },
  {
    "text": "adding a plug-in to it to call out to get more data but on its own it's not going to do that on its own it has all",
    "start": "944370",
    "end": "949709"
  },
  {
    "text": "the policy data it needs to make decisions in memory now that obviously",
    "start": "949709",
    "end": "955290"
  },
  {
    "start": "954000",
    "end": "1090000"
  },
  {
    "text": "begs certain questions which are you know where do the policies and data come from right you can't just have the",
    "start": "955290",
    "end": "960300"
  },
  {
    "text": "policies and data sitting in memory I'd hope that it never never goes down so in order to get policy and data down to",
    "start": "960300",
    "end": "966029"
  },
  {
    "text": "oppa and in order to control and observe oppa we have a set of management api's so for example we have the bundle",
    "start": "966029",
    "end": "973170"
  },
  {
    "text": "service API which you use to send policy and data down to oppa basically oppa",
    "start": "973170",
    "end": "978569"
  },
  {
    "text": "will periodically call out to the bundle service and ask for the latest version of policy and data and if there's a new",
    "start": "978569",
    "end": "984240"
  },
  {
    "text": "version then it gets downloaded we have the status service API which you can",
    "start": "984240",
    "end": "989249"
  },
  {
    "text": "implement to receive status updates from oppa those status updates tell you whether the version of policy and data",
    "start": "989249",
    "end": "996329"
  },
  {
    "text": "that oppa has activated that it's currently running with right so you can use this to detect you know is it up-to-date are the Europe is up-to-date",
    "start": "996329",
    "end": "1001759"
  },
  {
    "text": "or have they encountered errors in trying to activate the most recent bundle of policy and data and we also",
    "start": "1001759",
    "end": "1008149"
  },
  {
    "text": "have a what we call the decision log service API which you can implement to receive audit logs from oppa so every",
    "start": "1008149",
    "end": "1013790"
  },
  {
    "text": "time oppa makes a policy decision it keeps a record of that policy decision and then it periodically uploads batches",
    "start": "1013790",
    "end": "1020509"
  },
  {
    "text": "of those those decisions to to the decision log service and so that decision log service is useful from an",
    "start": "1020509",
    "end": "1026630"
  },
  {
    "text": "audit perspective now because now you have a record of all the policy decisions that have been made by all the oppa's in your system but it's also",
    "start": "1026630",
    "end": "1032808"
  },
  {
    "text": "useful for capturing data for things like debugging and test purposes and",
    "start": "1032809",
    "end": "1038449"
  },
  {
    "text": "then in addition to all the the management api's we have tooling that help you basically build test and debug",
    "start": "1038449",
    "end": "1044240"
  },
  {
    "text": "your policies so we have an interactive shell that you can use on the command line to experiment with policies we have",
    "start": "1044240",
    "end": "1050390"
  },
  {
    "text": "a test framework so you can actually write unit tests for your custom policies which is really useful for you know making sure that your policies are",
    "start": "1050390",
    "end": "1056510"
  },
  {
    "text": "correct right part of the idea behind OPA is that policies should be treated as code you know just like you want to",
    "start": "1056510",
    "end": "1062360"
  },
  {
    "text": "treat infrastructure as code OPA basically delivers policy as code and so we give you a framework that you can use to write you",
    "start": "1062360",
    "end": "1068990"
  },
  {
    "text": "know unit tests for your policies then we have a bunch of other tools command line tools that you know format your",
    "start": "1068990",
    "end": "1074750"
  },
  {
    "text": "policies do all kinds of semantic checks as well as IDE integrations so if you start writing policy for for real I",
    "start": "1074750",
    "end": "1081380"
  },
  {
    "text": "recommend that you check out the vs code Visual Studio code plugin it's it's very powerful it helps you kind of interact",
    "start": "1081380",
    "end": "1087020"
  },
  {
    "text": "with the policies inside of yeah it's got a very nice thing so what I do now is run through a quick example of how",
    "start": "1087020",
    "end": "1094520"
  },
  {
    "start": "1090000",
    "end": "1558000"
  },
  {
    "text": "you would implement policies inside of OPA and so the policy that I'm going to implement says that employees should be",
    "start": "1094520",
    "end": "1099530"
  },
  {
    "text": "able to read their own salary as well as the salary of anyone that they manage",
    "start": "1099530",
    "end": "1105430"
  },
  {
    "text": "and so to do this I'm going to use the OPA playground the Rago playground this",
    "start": "1105430",
    "end": "1111350"
  },
  {
    "text": "is a new service that we that we created earlier this year and the service has",
    "start": "1111350",
    "end": "1116960"
  },
  {
    "text": "some nice features that I'm gonna kind of run through and explain explain to you as I go so this is the policy that",
    "start": "1116960",
    "end": "1122090"
  },
  {
    "text": "you see when you start off and I was going to delete that and so to implement this policy remember we want the first",
    "start": "1122090",
    "end": "1128630"
  },
  {
    "text": "rule basically needs to say that employees can access their own salary and the second policy says that",
    "start": "1128630",
    "end": "1136610"
  },
  {
    "text": "employees can access the salary of",
    "start": "1136610",
    "end": "1142300"
  },
  {
    "text": "people they manage so to implement the first rule what I'm",
    "start": "1142300",
    "end": "1149080"
  },
  {
    "text": "gonna do is create a rule called allow and I'm gonna say that allow is true if",
    "start": "1149080",
    "end": "1154379"
  },
  {
    "text": "the input actually wait let's back up a second in order to test this out I'm gonna have to define some input data and",
    "start": "1154379",
    "end": "1161649"
  },
  {
    "text": "so the the playground lets you do that it lets you put input data in the browser here and so I'm gonna say that",
    "start": "1161649",
    "end": "1167710"
  },
  {
    "text": "for example the input method is get again this is just from the slides before and the path say is salary Bob so",
    "start": "1167710",
    "end": "1177849"
  },
  {
    "text": "this is a lookup for Bob's salary and I'm gonna say the user making the request is Bob so to write the rule for",
    "start": "1177849",
    "end": "1185440"
  },
  {
    "text": "the first case what I'm going to do is say I'm gonna say the rule is called allow and allow is true if input method",
    "start": "1185440",
    "end": "1194320"
  },
  {
    "text": "is get an input path is salary employee",
    "start": "1194320",
    "end": "1200859"
  },
  {
    "text": "ID and input user is employee ID",
    "start": "1200859",
    "end": "1208349"
  },
  {
    "text": "so this rule says allow is true if input method matches get an input path matches",
    "start": "1211570",
    "end": "1217450"
  },
  {
    "text": "salary employee ID and input user matches employee ID so the expressions and the body of the rule are ANDed",
    "start": "1217450",
    "end": "1224409"
  },
  {
    "text": "together the interesting thing about this rule is this this employee ID here so this",
    "start": "1224409",
    "end": "1229899"
  },
  {
    "text": "employee ID is a variable and what happens when oppa evaluates rules is it",
    "start": "1229899",
    "end": "1235539"
  },
  {
    "text": "looks for bindings for those variables values for the variables that make all of the statements in the body of the",
    "start": "1235539",
    "end": "1241269"
  },
  {
    "text": "rule true so for it in this case in order for allowed to be true all the",
    "start": "1241269",
    "end": "1246369"
  },
  {
    "text": "statements in the body of the rule have to be true so oppa is going to search here to find whether employee ID can",
    "start": "1246369",
    "end": "1252999"
  },
  {
    "text": "match all of these expressions so one of the powerful things about the playground is that you can evaluate it here so I",
    "start": "1252999",
    "end": "1260679"
  },
  {
    "text": "just clicked output and it'll take a second and you can see that today right now the output is true right because",
    "start": "1260679",
    "end": "1267099"
  },
  {
    "text": "I've I basically got Bob looking at Bob's own salary and so that should be allowed but if I change this change this",
    "start": "1267099",
    "end": "1274779"
  },
  {
    "text": "and I say Alice is looking at Bob's salary oops then it's undefined the reason it's undefined is because none of the",
    "start": "1274779",
    "end": "1280599"
  },
  {
    "text": "statements in the body of the rule match so typically what you'll see in Opa policy is is something like this they'll say default allow is false so this means",
    "start": "1280599",
    "end": "1287470"
  },
  {
    "text": "that if allow doesn't match then it'll take this default value on and now if I go and I evaluate this and we wait for",
    "start": "1287470",
    "end": "1295779"
  },
  {
    "text": "the network",
    "start": "1295779",
    "end": "1297989"
  },
  {
    "text": "there we go now it's false okay now one",
    "start": "1304600",
    "end": "1309710"
  },
  {
    "text": "of the powerful things about Oprah is that you can actually evaluate pretty much any part of the policy you want so if I don't select anything and I just",
    "start": "1309710",
    "end": "1316310"
  },
  {
    "text": "ask for the output you can see that basically prints allow is false so",
    "start": "1316310",
    "end": "1322070"
  },
  {
    "text": "what's happening here is that hope is basically telling you the values of all the rules in the body and right now we only have one rule it's called allow but",
    "start": "1322070",
    "end": "1329210"
  },
  {
    "text": "you can actually go further than that so you can actually select parts of the rule and hit evaluate and it'll print",
    "start": "1329210",
    "end": "1334760"
  },
  {
    "text": "the answer what do you think is gonna happen when I do this it's now we've got",
    "start": "1334760",
    "end": "1340640"
  },
  {
    "text": "a variable inside the inside the query well it's gonna tell us the value of",
    "start": "1340640",
    "end": "1346520"
  },
  {
    "text": "that variable when the rule got evaluated and in this case it got down to Bob all right so if I go and I select",
    "start": "1346520",
    "end": "1353090"
  },
  {
    "text": "the last one it's gonna be undefined because obviously input user does not equal Bob it doesn't equal employee ID",
    "start": "1353090",
    "end": "1360520"
  },
  {
    "text": "okay so that's that's the first part of the policy to implement the second part of the policy we're gonna need to do a",
    "start": "1360520",
    "end": "1366500"
  },
  {
    "text": "little bit more so we're gonna need some data in this case to decide whether or",
    "start": "1366500",
    "end": "1372140"
  },
  {
    "text": "not one employee is a manager of the other and so what I'm going to do is just define that data here in the policy",
    "start": "1372140",
    "end": "1379580"
  },
  {
    "text": "I'm only gonna do this because it makes it easier to kind of show and to interact with in the playground typically this kind of data would be",
    "start": "1379580",
    "end": "1385880"
  },
  {
    "text": "loaded into open just as raw JSON it wouldn't be encoded inside the policy or",
    "start": "1385880",
    "end": "1391430"
  },
  {
    "text": "it would be passed as input so like in this case you know the management chain for an employee could just come inside of like a token or something like that",
    "start": "1391430",
    "end": "1398470"
  },
  {
    "text": "so in this case we'll say that Bob is managed by Alice and Fred and Alice is",
    "start": "1398470",
    "end": "1405530"
  },
  {
    "text": "managed by Fred",
    "start": "1405530",
    "end": "1410620"
  },
  {
    "text": "so I've defined this as basically a map of strings to sets and so Bob is managed",
    "start": "1411240",
    "end": "1417070"
  },
  {
    "text": "by Alice and Fred and Alice is managed by Fred now in order to make use of this data I'm going to add another rule and",
    "start": "1417070",
    "end": "1423160"
  },
  {
    "text": "it's gonna just be called allow again so we're gonna say allow is true if input method is get and input path is salary",
    "start": "1423160",
    "end": "1434680"
  },
  {
    "text": "employee idea but this time instead of checking whether the input user is the",
    "start": "1434680",
    "end": "1441160"
  },
  {
    "text": "employee ID I'm gonna check whether the input user is a manager of the employee and so to",
    "start": "1441160",
    "end": "1448270"
  },
  {
    "text": "do that we're gonna do a look-up on the managers so we're gonna say give us the manager or rather the managers for the",
    "start": "1448270",
    "end": "1454810"
  },
  {
    "text": "employee and then we're gonna ask whether the input user is inside of that set so one of the things that you'll",
    "start": "1454810",
    "end": "1461590"
  },
  {
    "text": "find in Rago that's very frequent are these these references we call them these are basically performing lookups",
    "start": "1461590",
    "end": "1467140"
  },
  {
    "text": "on these JSON documents and so now if I",
    "start": "1467140",
    "end": "1472630"
  },
  {
    "text": "go back and i refresh the policy decision now it's true because alice is a is a rather the manager of Bob if I",
    "start": "1472630",
    "end": "1481570"
  },
  {
    "text": "change this to Bob and I tried to get Bob to look up say Fred's salary that would be rather that'll be denied so the",
    "start": "1481570",
    "end": "1489760"
  },
  {
    "text": "allow will be false now typically if I was doing this for real I wouldn't just",
    "start": "1489760",
    "end": "1495880"
  },
  {
    "text": "test everything with with the input data here what I would do is I would write a bunch of test rules to verify that the",
    "start": "1495880",
    "end": "1502720"
  },
  {
    "text": "behavior is correct so I would say for example allow must be true when given",
    "start": "1502720",
    "end": "1507790"
  },
  {
    "text": "certain input so for example when you know method is get and user is Bob and",
    "start": "1507790",
    "end": "1515950"
  },
  {
    "text": "the the path is for Bob salary",
    "start": "1515950",
    "end": "1520679"
  },
  {
    "text": "and so then I can go and evaluate that oops parse error sorry with input as and so",
    "start": "1525030",
    "end": "1535230"
  },
  {
    "text": "here you can see that tests allow is true because the statements in the body were held and so I would basically build",
    "start": "1535230",
    "end": "1540240"
  },
  {
    "text": "up a bunch of these test cases to ensure that the logic that I'd express above was correct alright so that is it for",
    "start": "1540240",
    "end": "1553679"
  },
  {
    "text": "the demo there when you go to start",
    "start": "1553679",
    "end": "1560820"
  },
  {
    "start": "1558000",
    "end": "1699000"
  },
  {
    "text": "using OPA for the first time you might be looking for integrations with existing projects in the ecosystem and",
    "start": "1560820",
    "end": "1566280"
  },
  {
    "text": "so we have a number of them and I think they're over 28 or 25 now we have a number of integrations with different",
    "start": "1566280",
    "end": "1571650"
  },
  {
    "text": "projects for doing admission control that's one of the main use cases that people have for open today they want to",
    "start": "1571650",
    "end": "1577169"
  },
  {
    "text": "enforce different kinds of policies over their platforms and so for that we have integrations with kubernetes people use",
    "start": "1577169",
    "end": "1582360"
  },
  {
    "text": "OPA with terraform we have another integration with docker that's very similar and the idea there is you just want to enforce certain policies over",
    "start": "1582360",
    "end": "1588380"
  },
  {
    "text": "configurations that developers are supplying you know when they deploy their applications right so you want to",
    "start": "1588380",
    "end": "1593640"
  },
  {
    "text": "say things like only you know container images must come from the corporate image registry or you want to say that",
    "start": "1593640",
    "end": "1599789"
  },
  {
    "text": "all workloads need to have you know CPU and memory limits supplied when they're when they're deployed or you want to you",
    "start": "1599789",
    "end": "1605100"
  },
  {
    "text": "know prevent conflicting aggresses from being created for example the other main category of use cases we have is around",
    "start": "1605100",
    "end": "1611130"
  },
  {
    "text": "API authorization typically in micro service environments and so we have a bunch of different integrations with",
    "start": "1611130",
    "end": "1616350"
  },
  {
    "text": "projects like sto and envoy and Kong and linker D and spraying and more and the idea there is that you want to you know",
    "start": "1616350",
    "end": "1622140"
  },
  {
    "text": "provide you know obviously I am or you know access control policies for you for your internal you know environments and",
    "start": "1622140",
    "end": "1628049"
  },
  {
    "text": "so you want to you know you know for example deny test scripts from accessing production services you want to you know",
    "start": "1628049",
    "end": "1633659"
  },
  {
    "text": "prevent analysts from accessing you know sensitive data and so on and so forth but we have a long list of other",
    "start": "1633659",
    "end": "1639630"
  },
  {
    "text": "integrations so for example we have a Pam plugin for four oppa where basically you can enforce you can use open to",
    "start": "1639630",
    "end": "1646080"
  },
  {
    "text": "enforce access control policies over SSH and sudo we have one user of oppa where",
    "start": "1646080",
    "end": "1651679"
  },
  {
    "text": "basically they they have a policy in place that says that developers are only allowed to ssh into",
    "start": "1651679",
    "end": "1657799"
  },
  {
    "text": "machines that are running applications that that developer work works on right",
    "start": "1657799",
    "end": "1662809"
  },
  {
    "text": "and there has to be actually an open ticket for that for that application at that time otherwise they can't get on the machines and that that just resolves",
    "start": "1662809",
    "end": "1668779"
  },
  {
    "text": "like a long-standing problem and system administration of people getting added to connect groups and things like that and then never getting taken out right",
    "start": "1668779",
    "end": "1674929"
  },
  {
    "text": "so this way you know you have a flexible context-aware method of enforcing policy over SSH and sudo and then we have a",
    "start": "1674929",
    "end": "1682159"
  },
  {
    "text": "bunch of other integrations with projects like safe and Kafka and Mineo for doing different kinds of data protection use cases you know a lot of",
    "start": "1682159",
    "end": "1689269"
  },
  {
    "text": "large organizations are building out data lakes internally and there's definitely a need for you know",
    "start": "1689269",
    "end": "1694279"
  },
  {
    "text": "fine-grained attribute based access control there and OPA really enables that so what I thought I'd do is just",
    "start": "1694279",
    "end": "1701090"
  },
  {
    "start": "1699000",
    "end": "1779000"
  },
  {
    "text": "highlight a couple of the you know users that are that are running with open today in production we talked about some",
    "start": "1701090",
    "end": "1706909"
  },
  {
    "text": "of this a couple months ago at the CN CF TOC meeting but I'm just gonna kind of",
    "start": "1706909",
    "end": "1712039"
  },
  {
    "text": "highlight them again here so one of the users of okhla today is Netflix they were one of the earliest adopters of the",
    "start": "1712039",
    "end": "1718519"
  },
  {
    "text": "project and today they're basically using OPA to enforce a variety of different access control policies across",
    "start": "1718519",
    "end": "1724190"
  },
  {
    "text": "there you know internal environments right so they have a large micro service based environment and they you know they",
    "start": "1724190",
    "end": "1731379"
  },
  {
    "text": "developers there use a variety of different languages and frameworks and they have different kinds of execution",
    "start": "1731379",
    "end": "1737210"
  },
  {
    "text": "environments where these services run and so that the challenge there was to find you know a way of expressing",
    "start": "1737210",
    "end": "1743179"
  },
  {
    "text": "policies over this very heterogeneous and ephemeral kind of you know environment and so they they looked at",
    "start": "1743179",
    "end": "1748609"
  },
  {
    "text": "OPA and they decided to adopt it and build it into their internal security platform and what they found was that",
    "start": "1748609",
    "end": "1753799"
  },
  {
    "text": "the ability to you know leverage contextual information to load arbitrary context into the policy engine then use",
    "start": "1753799",
    "end": "1759350"
  },
  {
    "text": "that to inform policy decisions they found that very very valuable and they found it very valuable to use a single",
    "start": "1759350",
    "end": "1765980"
  },
  {
    "text": "language essentially to express policies across a wide range of different languages and frameworks and so we have",
    "start": "1765980",
    "end": "1772220"
  },
  {
    "text": "actually have taught from coop con Austin 2017 if your entrance is interested to see how they're using it",
    "start": "1772220",
    "end": "1777440"
  },
  {
    "text": "check that out another company that's using open today for a similar of a",
    "start": "1777440",
    "end": "1782899"
  },
  {
    "start": "1779000",
    "end": "1834000"
  },
  {
    "text": "different use case is chef so it's again it's an API authorization use case but it's a little bit different because chef",
    "start": "1782899",
    "end": "1788509"
  },
  {
    "text": "is obviously software vendor they ship you know software to enterprises and anytime you",
    "start": "1788509",
    "end": "1794190"
  },
  {
    "text": "ship a software product to an enterprise you have to deliver I am functionality you have to deliver authentication and authorization and",
    "start": "1794190",
    "end": "1800250"
  },
  {
    "text": "accounting and so for chef oppa basically provides an engine a building block that helps them get to market",
    "start": "1800250",
    "end": "1805920"
  },
  {
    "text": "faster they don't have to go and reinvent this this authorization engine from scratch they can basically take",
    "start": "1805920",
    "end": "1811290"
  },
  {
    "text": "oppa and with a bit of policy in place they're able to deliver an AWS I am style policy to their customers inside",
    "start": "1811290",
    "end": "1818700"
  },
  {
    "text": "of their products and actually today they're also using some more advanced features in Opa like partial evaluation",
    "start": "1818700",
    "end": "1824720"
  },
  {
    "text": "and so if you're interested in this I would check out it's actually open source if you go to chef automate on",
    "start": "1824720",
    "end": "1830250"
  },
  {
    "text": "github you can find examples of that and how they've architected it and then",
    "start": "1830250",
    "end": "1836280"
  },
  {
    "start": "1834000",
    "end": "1881000"
  },
  {
    "text": "finally an example of a company that's using oppa for kubernetes is Intuit so into it you know uses oppa as a",
    "start": "1836280",
    "end": "1843690"
  },
  {
    "text": "validating and mutating admission controller in kubernetes and they use it to enforce a variety of different security and multi-tenancy and risk",
    "start": "1843690",
    "end": "1850710"
  },
  {
    "text": "management policies across a large set of clusters and a large set of namespaces for them they run you know",
    "start": "1850710",
    "end": "1857130"
  },
  {
    "text": "large multi they have large multi tenant workloads deployed on kubernetes and it's very important that they're able to",
    "start": "1857130",
    "end": "1862890"
  },
  {
    "text": "put kind of safeguards in place to prevent different you know applications from interacting with each other in bad ways and again we did we did a talk with",
    "start": "1862890",
    "end": "1870270"
  },
  {
    "text": "them at coop con seattle in 2018 so if you're interested in admission control in kubernetes and how companies like",
    "start": "1870270",
    "end": "1876030"
  },
  {
    "text": "Intuit and Capital One are using using opa bert for that check out that talk so",
    "start": "1876030",
    "end": "1882720"
  },
  {
    "start": "1881000",
    "end": "2334000"
  },
  {
    "text": "that's it we've got about four minutes left for questions i'll point out that there are two talks later today that are",
    "start": "1882720",
    "end": "1887970"
  },
  {
    "text": "related to policy so one is the talk on gatekeeper by Craig Peters at Microsoft that's it's 6:15 if you're interested in",
    "start": "1887970",
    "end": "1895200"
  },
  {
    "text": "how you can use OPA to enforce policies in kubernetes for admission control go",
    "start": "1895200",
    "end": "1900750"
  },
  {
    "text": "to that talk I think it'll be really interesting there's also the the kubernetes policy working group deep",
    "start": "1900750",
    "end": "1907110"
  },
  {
    "text": "dive session from Howard at Huawei happening at the same time so you'll have to pick which one you want to go to but both of those should be great",
    "start": "1907110",
    "end": "1912690"
  },
  {
    "text": "sessions if you're interested in the code behind the project check out open policy agent slash OPA on github",
    "start": "1912690",
    "end": "1919410"
  },
  {
    "text": "and if you have questions or anything like that feel free to join the slack organization and post your questions on there so with that I'm happy to do some",
    "start": "1919410",
    "end": "1927600"
  },
  {
    "text": "Q&A right now if anybody has questions otherwise thank you very much for coming",
    "start": "1927600",
    "end": "1933500"
  },
  {
    "text": "[Applause]",
    "start": "1934110",
    "end": "1937330"
  },
  {
    "text": "they want it recorded so hi too many integrations where this can be mapped to",
    "start": "1939350",
    "end": "1946710"
  },
  {
    "text": "all claims so the claims are given out based on policy to generate claims or to",
    "start": "1946710",
    "end": "1952830"
  },
  {
    "text": "validate claims like his boot both there are there are people looking at using",
    "start": "1952830",
    "end": "1958950"
  },
  {
    "text": "OPA to generate the claims that go into it into a token you can definitely do that because those are that's just JSON",
    "start": "1958950",
    "end": "1964560"
  },
  {
    "text": "so it's just a different kind of policy decision we don't have specific examples of that on the website what we do have",
    "start": "1964560",
    "end": "1970020"
  },
  {
    "text": "though in OPA is a set of built-in functions for doing things like string",
    "start": "1970020",
    "end": "1975210"
  },
  {
    "text": "manipulation and math and all that kind of stuff but we also have built-in functions for interacting with JSON web",
    "start": "1975210",
    "end": "1980910"
  },
  {
    "text": "tokens so if you want to basically pass a JSON web token as input to the policy and then inside the policy you know",
    "start": "1980910",
    "end": "1986910"
  },
  {
    "text": "verify the signature and validate things like not before and expiring all that you can easily do that with them within",
    "start": "1986910",
    "end": "1993420"
  },
  {
    "text": "the policy range",
    "start": "1993420",
    "end": "1995990"
  },
  {
    "text": "I'm not sure if you know there was another product created by Bosch common name the same century right it's also a",
    "start": "1999510",
    "end": "2006530"
  },
  {
    "text": "product I related to apologize code can you do a quick comparison between OPA",
    "start": "2006530",
    "end": "2011690"
  },
  {
    "text": "and sin surgery so the the question is you know how does OPA policy agent compared to sentinel which is hashey",
    "start": "2011690",
    "end": "2018890"
  },
  {
    "text": "corpse policy's code project and the answer is that they're both similar they",
    "start": "2018890",
    "end": "2023900"
  },
  {
    "text": "both aim to you know allow you to express policy as code I guess the main",
    "start": "2023900",
    "end": "2029150"
  },
  {
    "text": "difference at a very high level is that sentinel is you know it's a closed source proprietary feature of their",
    "start": "2029150",
    "end": "2035210"
  },
  {
    "text": "enterprise hashey core products right so it's not open source and it's really I",
    "start": "2035210",
    "end": "2040610"
  },
  {
    "text": "think focused those kinds of policies that you apply to you know the platform right to hash your projects right like",
    "start": "2040610",
    "end": "2046610"
  },
  {
    "text": "vault and terraform and so on so OPA is a little bit more general purpose and",
    "start": "2046610",
    "end": "2051889"
  },
  {
    "text": "that you can kind of use it as a like a building block a library for all kinds of different policies at different levels of the stack at the language",
    "start": "2051890",
    "end": "2059419"
  },
  {
    "text": "level there are some differences opens a little bit more declarative whereas the sentinel language is a little bit more imperative it's more like JavaScript",
    "start": "2059419",
    "end": "2066169"
  },
  {
    "text": "which has pros and cons associated with it so I can I'm happy to chat about that more offline if you're interested it's a",
    "start": "2066169",
    "end": "2074060"
  },
  {
    "text": "pretty long answer I think good thank you yeah I think there's a couple of questions at the back",
    "start": "2074060",
    "end": "2080440"
  },
  {
    "text": "hi just a quick question you find to embed opa into embedded device with the",
    "start": "2082679",
    "end": "2091589"
  },
  {
    "text": "relatively constrained memory do you have any idea about the size of the OPA",
    "start": "2091589",
    "end": "2098440"
  },
  {
    "text": "codebase or the binary or the image so the binary is about 20 megabytes in size",
    "start": "2098440",
    "end": "2106800"
  },
  {
    "text": "so the memory usage is fairly low about 20 megabytes if you're just running it",
    "start": "2106800",
    "end": "2112119"
  },
  {
    "text": "without anything inside of it obviously the amount of memory that it's gonna consume at runtime depends on how much",
    "start": "2112119",
    "end": "2118240"
  },
  {
    "text": "policy and data you load into it so it kind of depends on the types of policies you need to express but it is it is",
    "start": "2118240",
    "end": "2124420"
  },
  {
    "text": "fairly lightweight we don't have very many dependencies in the project itself it's written in go so I don't know how",
    "start": "2124420",
    "end": "2130780"
  },
  {
    "text": "how that would work for your environment but that's one thing to keep in mind I will mention that one of the things that",
    "start": "2130780",
    "end": "2137140"
  },
  {
    "text": "we're working on that's more speculative learn more long term is support for taking the OPA policies and compiling",
    "start": "2137140",
    "end": "2143290"
  },
  {
    "text": "them into web assembly and so with that I think we might be able to deliver like an even smaller memory footprint for the",
    "start": "2143290",
    "end": "2150670"
  },
  {
    "text": "policy innovation yeah so a question you",
    "start": "2150670",
    "end": "2156369"
  },
  {
    "text": "had an example on how to implement policies across the enterprise where you",
    "start": "2156369",
    "end": "2163030"
  },
  {
    "text": "can look salaries just for the people who manage and then you said that some",
    "start": "2163030",
    "end": "2168819"
  },
  {
    "text": "organizational structure can be imported into OPA using a JSON structure yeah",
    "start": "2168819",
    "end": "2174880"
  },
  {
    "text": "would that require some reboots and restart of the service or it's all seamless from the from the application",
    "start": "2174880",
    "end": "2183549"
  },
  {
    "text": "perspective so it should be it can be hitless so there are two ways of loading policy and data into OPA one is through",
    "start": "2183549",
    "end": "2190690"
  },
  {
    "text": "the bundled service API that I mentioned basically open will periodically download policy data from a remote",
    "start": "2190690",
    "end": "2196960"
  },
  {
    "text": "service and reload it on the fly without affecting policy queries the other is that you can push policy and data into",
    "start": "2196960",
    "end": "2203020"
  },
  {
    "text": "OPA it has an API allows you just push policy and data in through HTTP API that",
    "start": "2203020",
    "end": "2208390"
  },
  {
    "text": "works it's a little bit more complicated I think though to design that into your system in a way that's you know",
    "start": "2208390",
    "end": "2213940"
  },
  {
    "text": "and correct so we generally recommend people start with the bundle service model and then you know if they need",
    "start": "2213940",
    "end": "2219640"
  },
  {
    "text": "push kind of capabilities later on they can always and the other question would",
    "start": "2219640",
    "end": "2225549"
  },
  {
    "text": "be do push all the policies to all micro-services or you can push just the",
    "start": "2225549",
    "end": "2232119"
  },
  {
    "text": "policies that they relate to that micro service - that's a good question so so open itself is just the decision engine",
    "start": "2232119",
    "end": "2238150"
  },
  {
    "text": "all it does is it just says given the policies that you give it you know answer answer questions right it doesn't decide which policies go down",
    "start": "2238150",
    "end": "2244809"
  },
  {
    "text": "to OVA right so that's sort of up to you as the implementer of the control plane around OPA that's sort of that's sort of",
    "start": "2244809",
    "end": "2251079"
  },
  {
    "text": "the challenge that we don't tackle within OPA itself thank you very much cool one more question",
    "start": "2251079",
    "end": "2257770"
  },
  {
    "text": "okay I think we're little bit over time I'm happy to answer so it's a given",
    "start": "2257770",
    "end": "2267460"
  },
  {
    "text": "giving us making a lot of decisions in the organization so can be facing a lot of volume so it has to be quick very",
    "start": "2267460",
    "end": "2274359"
  },
  {
    "text": "very fast so do you have a general idea about performance like how long does it take to make a decision yep",
    "start": "2274359",
    "end": "2281200"
  },
  {
    "text": "so we sort of have two profiles for OPA policies one profile is kind of or we",
    "start": "2281200",
    "end": "2287770"
  },
  {
    "text": "call it the linear time profile or linear time fragment of lopa and that's sort of targeted at API authorization",
    "start": "2287770",
    "end": "2293710"
  },
  {
    "text": "policies if you do write your policies in a way that is that falls into that fragment then OPA will index the the",
    "start": "2293710",
    "end": "2300160"
  },
  {
    "text": "rules for you and it can answer policy queries in like under 100 microseconds",
    "start": "2300160",
    "end": "2305440"
  },
  {
    "text": "in a lot of cases or under a millisecond is usually our budget that's the number that we got from Netflix the other category of use cases is like more",
    "start": "2305440",
    "end": "2311829"
  },
  {
    "text": "around platform kind of policies over say a kubernetes cluster and in that case you often have to do a large search",
    "start": "2311829",
    "end": "2316839"
  },
  {
    "text": "over like the state of the cluster in order to make the decision and so there the the budget for latency is a little",
    "start": "2316839",
    "end": "2323140"
  },
  {
    "text": "bit higher because of that search operation right so it depends on the on the use case but typically under a",
    "start": "2323140",
    "end": "2328329"
  },
  {
    "text": "millisecond for API opposition okay thank you",
    "start": "2328329",
    "end": "2332849"
  }
]