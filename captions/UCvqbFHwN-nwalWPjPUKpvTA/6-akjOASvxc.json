[
  {
    "text": "hello everyone welcome to the session",
    "start": "2639",
    "end": "5400"
  },
  {
    "text": "today today's topic it is building",
    "start": "5400",
    "end": "8420"
  },
  {
    "text": "multi-talent routing and scaling with",
    "start": "8420",
    "end": "11160"
  },
  {
    "text": "Android",
    "start": "11160",
    "end": "12900"
  },
  {
    "text": "I'm the speaker I mean pen",
    "start": "12900",
    "end": "15719"
  },
  {
    "text": "I'm from the Amazon web service happy to",
    "start": "15719",
    "end": "19380"
  },
  {
    "text": "be here to talk about the topic with you",
    "start": "19380",
    "end": "22439"
  },
  {
    "text": "guys today",
    "start": "22439",
    "end": "24919"
  },
  {
    "text": "so a little bit self-introduction about",
    "start": "25760",
    "end": "29099"
  },
  {
    "text": "myself",
    "start": "29099",
    "end": "30599"
  },
  {
    "text": "I'm the senior engineer from AWS based",
    "start": "30599",
    "end": "33780"
  },
  {
    "text": "in Seattle I'm the family engineer of",
    "start": "33780",
    "end": "36960"
  },
  {
    "text": "the AWS app Runner I participated in",
    "start": "36960",
    "end": "41219"
  },
  {
    "text": "building the sales mode products from",
    "start": "41219",
    "end": "43440"
  },
  {
    "text": "zero to one and which it in the 2021.",
    "start": "43440",
    "end": "48239"
  },
  {
    "text": "the product I'm working",
    "start": "48239",
    "end": "50719"
  },
  {
    "text": "activities closely in the AWS is the",
    "start": "50719",
    "end": "55820"
  },
  {
    "text": "including app rounder the Amazon ECS",
    "start": "55820",
    "end": "59760"
  },
  {
    "text": "elastic container service the AWS Market",
    "start": "59760",
    "end": "63180"
  },
  {
    "text": "which is focused on the serverless",
    "start": "63180",
    "end": "65158"
  },
  {
    "text": "containers compute and elastic beam",
    "start": "65159",
    "end": "68460"
  },
  {
    "text": "stock",
    "start": "68460",
    "end": "69780"
  },
  {
    "text": "so my expertise I will focus on the",
    "start": "69780",
    "end": "73619"
  },
  {
    "text": "cloud native containers and sublease",
    "start": "73619",
    "end": "77100"
  },
  {
    "text": "compute and open source",
    "start": "77100",
    "end": "79979"
  },
  {
    "text": "so I'm also pretty passionate in the",
    "start": "79979",
    "end": "83640"
  },
  {
    "text": "open source Community I'm the founder",
    "start": "83640",
    "end": "86820"
  },
  {
    "text": "and the maintainer of the cloud native",
    "start": "86820",
    "end": "89520"
  },
  {
    "text": "and service Meetup community",
    "start": "89520",
    "end": "93119"
  },
  {
    "text": "you can find me in the GitHub and",
    "start": "93119",
    "end": "96000"
  },
  {
    "text": "Twitter I'm pretty active there",
    "start": "96000",
    "end": "99979"
  },
  {
    "text": "so I want to show a little bit the",
    "start": "100979",
    "end": "104280"
  },
  {
    "text": "motivation to have this talk today",
    "start": "104280",
    "end": "108680"
  },
  {
    "text": "I want to share the journey from the end",
    "start": "109140",
    "end": "112079"
  },
  {
    "text": "user point of view by using Envoy",
    "start": "112079",
    "end": "115259"
  },
  {
    "text": "I want to also give back to the",
    "start": "115259",
    "end": "117240"
  },
  {
    "text": "community to share the lessons learned",
    "start": "117240",
    "end": "120360"
  },
  {
    "text": "and experience by using Amway as a",
    "start": "120360",
    "end": "123420"
  },
  {
    "text": "builder and hope it brings value to the",
    "start": "123420",
    "end": "126780"
  },
  {
    "text": "community and help the products growth",
    "start": "126780",
    "end": "131520"
  },
  {
    "text": "and I also want to use this opportunity",
    "start": "131520",
    "end": "134879"
  },
  {
    "text": "to sense and appreciate all the support",
    "start": "134879",
    "end": "139080"
  },
  {
    "text": "from the Amway community no matter it is",
    "start": "139080",
    "end": "142400"
  },
  {
    "text": "internal or external by the way",
    "start": "142400",
    "end": "146700"
  },
  {
    "text": "um Amazon has uh internal interest group",
    "start": "146700",
    "end": "149459"
  },
  {
    "text": "for the Amway proxy with like around",
    "start": "149459",
    "end": "153920"
  },
  {
    "text": "160 people I'm the founder and",
    "start": "153920",
    "end": "157379"
  },
  {
    "text": "maintainer of lead Channel",
    "start": "157379",
    "end": "160260"
  },
  {
    "text": "I also want to send to the platform and",
    "start": "160260",
    "end": "163379"
  },
  {
    "text": "I want to use this platform for the",
    "start": "163379",
    "end": "165540"
  },
  {
    "text": "future discussion and communication I'm",
    "start": "165540",
    "end": "168599"
  },
  {
    "text": "the fan of kubecon for years I'm really",
    "start": "168599",
    "end": "171599"
  },
  {
    "text": "happy and excited YouTube here to talk",
    "start": "171599",
    "end": "174420"
  },
  {
    "text": "with you guys for the topic",
    "start": "174420",
    "end": "178160"
  },
  {
    "text": "a little bit introduction for apron",
    "start": "180780",
    "end": "184019"
  },
  {
    "text": "as I mentioned before so AWS App",
    "start": "184019",
    "end": "187140"
  },
  {
    "text": "Partners G8 in the 2021 is a fully",
    "start": "187140",
    "end": "191040"
  },
  {
    "text": "managed service that makes it easy for",
    "start": "191040",
    "end": "194459"
  },
  {
    "text": "computers to quickly deploy container",
    "start": "194459",
    "end": "197159"
  },
  {
    "text": "web service and APS at a scale with less",
    "start": "197159",
    "end": "200640"
  },
  {
    "text": "and zero infrastructure experience",
    "start": "200640",
    "end": "203700"
  },
  {
    "text": "required",
    "start": "203700",
    "end": "205440"
  },
  {
    "text": "here is our official website feel free",
    "start": "205440",
    "end": "207959"
  },
  {
    "text": "to check it out",
    "start": "207959",
    "end": "210739"
  },
  {
    "text": "so from the user point of view that",
    "start": "210920",
    "end": "214920"
  },
  {
    "text": "problem provides managed experience for",
    "start": "214920",
    "end": "217920"
  },
  {
    "text": "customers app hosting request the",
    "start": "217920",
    "end": "220980"
  },
  {
    "text": "routing load balancing and auto scaling",
    "start": "220980",
    "end": "225019"
  },
  {
    "text": "networking the Ingress egress both",
    "start": "225019",
    "end": "228620"
  },
  {
    "text": "observability",
    "start": "228620",
    "end": "230180"
  },
  {
    "text": "cicd deployment and safe deployment and",
    "start": "230180",
    "end": "234120"
  },
  {
    "text": "more",
    "start": "234120",
    "end": "235140"
  },
  {
    "text": "so customer just need to have their",
    "start": "235140",
    "end": "238200"
  },
  {
    "text": "GitHub source code or the ECR image",
    "start": "238200",
    "end": "241319"
  },
  {
    "text": "private or public and deploy the image",
    "start": "241319",
    "end": "245159"
  },
  {
    "text": "of source code connection to a problem",
    "start": "245159",
    "end": "248000"
  },
  {
    "text": "apprent will directly make it up and",
    "start": "248000",
    "end": "251700"
  },
  {
    "text": "running for your web app and or API",
    "start": "251700",
    "end": "254640"
  },
  {
    "text": "service",
    "start": "254640",
    "end": "255659"
  },
  {
    "text": "and I prom to",
    "start": "255659",
    "end": "258260"
  },
  {
    "text": "output outcome and public URL for",
    "start": "258260",
    "end": "262079"
  },
  {
    "text": "clients to access",
    "start": "262079",
    "end": "264860"
  },
  {
    "text": "apron is a multi-region supported",
    "start": "267180",
    "end": "270600"
  },
  {
    "text": "and it is mainly focused on API and web",
    "start": "270600",
    "end": "273840"
  },
  {
    "text": "server",
    "start": "273840",
    "end": "274860"
  },
  {
    "text": "it accepts the HTTP request and it",
    "start": "274860",
    "end": "278460"
  },
  {
    "text": "supports concurrent request",
    "start": "278460",
    "end": "280800"
  },
  {
    "text": "and it also focus on the long time",
    "start": "280800",
    "end": "283320"
  },
  {
    "text": "running servers which is today's word",
    "start": "283320",
    "end": "287120"
  },
  {
    "text": "most popular and",
    "start": "287120",
    "end": "290360"
  },
  {
    "text": "typical traditional workloads",
    "start": "290360",
    "end": "295439"
  },
  {
    "text": "to build that problem",
    "start": "298560",
    "end": "300660"
  },
  {
    "text": "to support the management user",
    "start": "300660",
    "end": "303000"
  },
  {
    "text": "experience Web Runner",
    "start": "303000",
    "end": "304800"
  },
  {
    "text": "including the request routing and load",
    "start": "304800",
    "end": "307199"
  },
  {
    "text": "balancing",
    "start": "307199",
    "end": "308940"
  },
  {
    "text": "what's the responsibility of the request",
    "start": "308940",
    "end": "311699"
  },
  {
    "text": "router",
    "start": "311699",
    "end": "312840"
  },
  {
    "text": "you may ask",
    "start": "312840",
    "end": "314639"
  },
  {
    "text": "so app owner needs a request router on",
    "start": "314639",
    "end": "318360"
  },
  {
    "text": "the back end to help online",
    "start": "318360",
    "end": "320600"
  },
  {
    "text": "multi-tenant request loading in",
    "start": "320600",
    "end": "323940"
  },
  {
    "text": "different AWS regions",
    "start": "323940",
    "end": "326280"
  },
  {
    "text": "and it provides the URL for customer to",
    "start": "326280",
    "end": "330060"
  },
  {
    "text": "access and online surrounding",
    "start": "330060",
    "end": "332460"
  },
  {
    "text": "application instance",
    "start": "332460",
    "end": "335039"
  },
  {
    "text": "for their containers",
    "start": "335039",
    "end": "338100"
  },
  {
    "text": "and we need a request router to be in",
    "start": "338100",
    "end": "340919"
  },
  {
    "text": "the middle between the URL and",
    "start": "340919",
    "end": "343080"
  },
  {
    "text": "application instances to do the routing",
    "start": "343080",
    "end": "346259"
  },
  {
    "text": "to do load balancing and to do the",
    "start": "346259",
    "end": "348900"
  },
  {
    "text": "traffic uh splitting",
    "start": "348900",
    "end": "352639"
  },
  {
    "text": "product requirement",
    "start": "353400",
    "end": "355500"
  },
  {
    "text": "I like this because this is the",
    "start": "355500",
    "end": "357419"
  },
  {
    "text": "motivation",
    "start": "357419",
    "end": "359840"
  },
  {
    "text": "multi-regions region expensible of",
    "start": "360500",
    "end": "364320"
  },
  {
    "text": "course we need to make sure we can build",
    "start": "364320",
    "end": "366539"
  },
  {
    "text": "new regions all the time with the",
    "start": "366539",
    "end": "369539"
  },
  {
    "text": "solution with the existing architecture",
    "start": "369539",
    "end": "373199"
  },
  {
    "text": "you need to be multi-tenant",
    "start": "373199",
    "end": "375780"
  },
  {
    "text": "we are serving hundreds and millions",
    "start": "375780",
    "end": "378680"
  },
  {
    "text": "customers as a platform and solution so",
    "start": "378680",
    "end": "382500"
  },
  {
    "text": "we need a requested router to be",
    "start": "382500",
    "end": "384120"
  },
  {
    "text": "multi-tenant available",
    "start": "384120",
    "end": "386639"
  },
  {
    "text": "Auto scaling we need to be scalable and",
    "start": "386639",
    "end": "390479"
  },
  {
    "text": "we need to",
    "start": "390479",
    "end": "392060"
  },
  {
    "text": "fail because in the future we're going",
    "start": "392060",
    "end": "394440"
  },
  {
    "text": "to face more and more traffic and",
    "start": "394440",
    "end": "396120"
  },
  {
    "text": "workloads",
    "start": "396120",
    "end": "397259"
  },
  {
    "text": "safe deployment of course it is one of",
    "start": "397259",
    "end": "400259"
  },
  {
    "text": "the basic requirements for the customer",
    "start": "400259",
    "end": "402600"
  },
  {
    "text": "product",
    "start": "402600",
    "end": "403740"
  },
  {
    "text": "observable it need to be manageable and",
    "start": "403740",
    "end": "407280"
  },
  {
    "text": "provides necessary insights",
    "start": "407280",
    "end": "411020"
  },
  {
    "text": "so with the product requirements the",
    "start": "412380",
    "end": "414900"
  },
  {
    "text": "technical challenges will be obvious",
    "start": "414900",
    "end": "418740"
  },
  {
    "text": "they need to be high throughputs",
    "start": "418740",
    "end": "422039"
  },
  {
    "text": "high performance",
    "start": "422039",
    "end": "424560"
  },
  {
    "text": "higher availability",
    "start": "424560",
    "end": "426720"
  },
  {
    "text": "have reliability",
    "start": "426720",
    "end": "428940"
  },
  {
    "text": "think about your website you don't want",
    "start": "428940",
    "end": "431280"
  },
  {
    "text": "it to be down for a couple minutes or",
    "start": "431280",
    "end": "433080"
  },
  {
    "text": "seconds even",
    "start": "433080",
    "end": "434720"
  },
  {
    "text": "extensibility of course we need to build",
    "start": "434720",
    "end": "437460"
  },
  {
    "text": "more and more features on top of it",
    "start": "437460",
    "end": "440220"
  },
  {
    "text": "security",
    "start": "440220",
    "end": "442699"
  },
  {
    "text": "large number of concurrence connections",
    "start": "443039",
    "end": "445440"
  },
  {
    "text": "as we mentioned that we accept the",
    "start": "445440",
    "end": "448560"
  },
  {
    "text": "concurrent requests which means for the",
    "start": "448560",
    "end": "450660"
  },
  {
    "text": "requested rotor there may be a large",
    "start": "450660",
    "end": "453060"
  },
  {
    "text": "number of connections happen in the same",
    "start": "453060",
    "end": "455280"
  },
  {
    "text": "time",
    "start": "455280",
    "end": "457520"
  },
  {
    "text": "is different with product level of",
    "start": "458880",
    "end": "461280"
  },
  {
    "text": "probability we need to request or router",
    "start": "461280",
    "end": "463440"
  },
  {
    "text": "also provides of the B10 visibility for",
    "start": "463440",
    "end": "465740"
  },
  {
    "text": "Builders to understand what's going on",
    "start": "465740",
    "end": "468300"
  },
  {
    "text": "in the middle and what's going on",
    "start": "468300",
    "end": "471240"
  },
  {
    "text": "um for the application activity and",
    "start": "471240",
    "end": "473639"
  },
  {
    "text": "workloads",
    "start": "473639",
    "end": "476240"
  },
  {
    "text": "so we think about the family-based",
    "start": "478380",
    "end": "480900"
  },
  {
    "text": "required router",
    "start": "480900",
    "end": "482699"
  },
  {
    "text": "and we see an open source age and so is",
    "start": "482699",
    "end": "485880"
  },
  {
    "text": "proxy designed for native",
    "start": "485880",
    "end": "488759"
  },
  {
    "text": "Cloud applications it provides features",
    "start": "488759",
    "end": "492539"
  },
  {
    "text": "like Auto process architecture",
    "start": "492539",
    "end": "495479"
  },
  {
    "text": "it is pretty light weighted and portable",
    "start": "495479",
    "end": "500000"
  },
  {
    "text": "HTTP layer 7 protein",
    "start": "500000",
    "end": "504620"
  },
  {
    "text": "grpc ready and easy for Builders build",
    "start": "505220",
    "end": "508680"
  },
  {
    "text": "the micro service around it",
    "start": "508680",
    "end": "512099"
  },
  {
    "text": "bestly in class overdose",
    "start": "512099",
    "end": "514919"
  },
  {
    "text": "provides necessary with BT for the",
    "start": "514919",
    "end": "517800"
  },
  {
    "text": "system and service on the line",
    "start": "517800",
    "end": "521459"
  },
  {
    "text": "Microsoft is friendly",
    "start": "521459",
    "end": "524839"
  },
  {
    "text": "and it also provides to manage the open",
    "start": "525660",
    "end": "528000"
  },
  {
    "text": "source version available by the AWS app",
    "start": "528000",
    "end": "531120"
  },
  {
    "text": "mesh",
    "start": "531120",
    "end": "533339"
  },
  {
    "text": "so we choose Amway as our request load",
    "start": "533339",
    "end": "536220"
  },
  {
    "text": "base",
    "start": "536220",
    "end": "538399"
  },
  {
    "text": "I want to talk more a little bit the",
    "start": "539760",
    "end": "542220"
  },
  {
    "text": "auto process architecture how we provide",
    "start": "542220",
    "end": "544740"
  },
  {
    "text": "it",
    "start": "544740",
    "end": "545640"
  },
  {
    "text": "so I only works with any programming",
    "start": "545640",
    "end": "548100"
  },
  {
    "text": "language",
    "start": "548100",
    "end": "549899"
  },
  {
    "text": "friendly we can write the application in",
    "start": "549899",
    "end": "553260"
  },
  {
    "text": "goal in Java in C plus plus and any",
    "start": "553260",
    "end": "557399"
  },
  {
    "text": "other languages",
    "start": "557399",
    "end": "559800"
  },
  {
    "text": "and we can Bridge together between all",
    "start": "559800",
    "end": "562380"
  },
  {
    "text": "of them and Its Behavior is identical",
    "start": "562380",
    "end": "565220"
  },
  {
    "text": "regardless of the applications",
    "start": "565220",
    "end": "567300"
  },
  {
    "text": "programming language or the operating",
    "start": "567300",
    "end": "569880"
  },
  {
    "text": "system they are running on",
    "start": "569880",
    "end": "572279"
  },
  {
    "text": "Web Runner we are using product",
    "start": "572279",
    "end": "575100"
  },
  {
    "text": "and we write the service in C plus plus",
    "start": "575100",
    "end": "578100"
  },
  {
    "text": "in Java in Golden",
    "start": "578100",
    "end": "581220"
  },
  {
    "text": "they can iterate with Amway",
    "start": "581220",
    "end": "583680"
  },
  {
    "text": "uh",
    "start": "583680",
    "end": "585180"
  },
  {
    "text": "with no Gap",
    "start": "585180",
    "end": "587459"
  },
  {
    "text": "and it breaks out all the boundaries of",
    "start": "587459",
    "end": "589920"
  },
  {
    "text": "programming languages the auto process",
    "start": "589920",
    "end": "593339"
  },
  {
    "text": "architecture is beneficial as it gives",
    "start": "593339",
    "end": "595740"
  },
  {
    "text": "the consistent see across the language",
    "start": "595740",
    "end": "598680"
  },
  {
    "text": "and application Stacks you can get an",
    "start": "598680",
    "end": "602100"
  },
  {
    "text": "independent life cycle",
    "start": "602100",
    "end": "605240"
  },
  {
    "text": "talking about the building and we based",
    "start": "606800",
    "end": "609540"
  },
  {
    "text": "request filter",
    "start": "609540",
    "end": "611339"
  },
  {
    "text": "so first building blocks",
    "start": "611339",
    "end": "614220"
  },
  {
    "text": "so aren't we supports the bootstrap",
    "start": "614220",
    "end": "617040"
  },
  {
    "text": "configuration which is the key to make",
    "start": "617040",
    "end": "619200"
  },
  {
    "text": "our way up and running",
    "start": "619200",
    "end": "621600"
  },
  {
    "text": "here we use the dynamic resources",
    "start": "621600",
    "end": "623519"
  },
  {
    "text": "because the application instances change",
    "start": "623519",
    "end": "625560"
  },
  {
    "text": "all the time",
    "start": "625560",
    "end": "628160"
  },
  {
    "text": "and look in the architecture this is a",
    "start": "628560",
    "end": "630779"
  },
  {
    "text": "very typical Android usage architecture",
    "start": "630779",
    "end": "632760"
  },
  {
    "text": "you can find in any way",
    "start": "632760",
    "end": "636080"
  },
  {
    "text": "you can you should have a country plan",
    "start": "636660",
    "end": "639540"
  },
  {
    "text": "to pass through all the configurations",
    "start": "639540",
    "end": "641640"
  },
  {
    "text": "you need for Amway runtime",
    "start": "641640",
    "end": "644160"
  },
  {
    "text": "we will have a login Matrix system to",
    "start": "644160",
    "end": "646500"
  },
  {
    "text": "collect and aggregate the water data and",
    "start": "646500",
    "end": "648779"
  },
  {
    "text": "insights from the Conway runtime",
    "start": "648779",
    "end": "651000"
  },
  {
    "text": "activity",
    "start": "651000",
    "end": "652740"
  },
  {
    "text": "we should have a human streamer which is",
    "start": "652740",
    "end": "655320"
  },
  {
    "text": "stream out all the outputs of downward",
    "start": "655320",
    "end": "657660"
  },
  {
    "text": "activity and workloads",
    "start": "657660",
    "end": "660920"
  },
  {
    "text": "talking about Android itself",
    "start": "662579",
    "end": "665420"
  },
  {
    "text": "there are four building blocks for the",
    "start": "665420",
    "end": "667920"
  },
  {
    "text": "unweight selves internal",
    "start": "667920",
    "end": "670740"
  },
  {
    "text": "so first one is listener listener is the",
    "start": "670740",
    "end": "674880"
  },
  {
    "text": "name Network location for example the IP",
    "start": "674880",
    "end": "678480"
  },
  {
    "text": "address plus the port",
    "start": "678480",
    "end": "680459"
  },
  {
    "text": "so I only receive the request through",
    "start": "680459",
    "end": "682440"
  },
  {
    "text": "listeners",
    "start": "682440",
    "end": "684740"
  },
  {
    "text": "roads roses the configurations in the",
    "start": "684740",
    "end": "687959"
  },
  {
    "text": "HTTP connect manager filter",
    "start": "687959",
    "end": "690899"
  },
  {
    "text": "match the incoming quests like a",
    "start": "690899",
    "end": "693680"
  },
  {
    "text": "URI and handles and Define where the",
    "start": "693680",
    "end": "697680"
  },
  {
    "text": "traffic is sent",
    "start": "697680",
    "end": "699480"
  },
  {
    "text": "clusters",
    "start": "699480",
    "end": "701760"
  },
  {
    "text": "cluster is a group of Upstream hosts",
    "start": "701760",
    "end": "705000"
  },
  {
    "text": "that accept the traffic",
    "start": "705000",
    "end": "707040"
  },
  {
    "text": "for Road",
    "start": "707040",
    "end": "708660"
  },
  {
    "text": "list of host or IP addresses on which",
    "start": "708660",
    "end": "712320"
  },
  {
    "text": "service is listening",
    "start": "712320",
    "end": "715640"
  },
  {
    "text": "endpoints",
    "start": "715740",
    "end": "718560"
  },
  {
    "text": "which is a source application instance",
    "start": "718560",
    "end": "720600"
  },
  {
    "text": "and the Upstream IBS",
    "start": "720600",
    "end": "724699"
  },
  {
    "text": "we will talk about them one by one",
    "start": "725360",
    "end": "728399"
  },
  {
    "text": "first the listeners",
    "start": "728399",
    "end": "731459"
  },
  {
    "text": "listen",
    "start": "731459",
    "end": "733339"
  },
  {
    "text": "ER is the act is the component which is",
    "start": "733339",
    "end": "736740"
  },
  {
    "text": "listening or the external HTTP requests",
    "start": "736740",
    "end": "739800"
  },
  {
    "text": "and it will operate on Pax payloads",
    "start": "739800",
    "end": "743040"
  },
  {
    "text": "received requests and roll to the next",
    "start": "743040",
    "end": "745380"
  },
  {
    "text": "component block",
    "start": "745380",
    "end": "748700"
  },
  {
    "text": "roads",
    "start": "749399",
    "end": "750600"
  },
  {
    "text": "so Amway will be the CRX of load",
    "start": "750600",
    "end": "753240"
  },
  {
    "text": "balancing and layer 7 request proxy",
    "start": "753240",
    "end": "756600"
  },
  {
    "text": "layer",
    "start": "756600",
    "end": "757860"
  },
  {
    "text": "if maintaining a map of the service URL",
    "start": "757860",
    "end": "760440"
  },
  {
    "text": "to the application instance IPS and load",
    "start": "760440",
    "end": "764040"
  },
  {
    "text": "incoming request to a proper endpoints",
    "start": "764040",
    "end": "768120"
  },
  {
    "text": "it also mapping a domain",
    "start": "768120",
    "end": "771420"
  },
  {
    "text": "from the service URL for example hello",
    "start": "771420",
    "end": "774839"
  },
  {
    "text": "world here to the Upstream endpoints",
    "start": "774839",
    "end": "780260"
  },
  {
    "text": "clusters",
    "start": "781019",
    "end": "782639"
  },
  {
    "text": "200 clusters as the application service",
    "start": "782639",
    "end": "786360"
  },
  {
    "text": "for here",
    "start": "786360",
    "end": "788399"
  },
  {
    "text": "each service version going to be",
    "start": "788399",
    "end": "790860"
  },
  {
    "text": "assigned an Android cluster and the",
    "start": "790860",
    "end": "793740"
  },
  {
    "text": "configurations will be updated through",
    "start": "793740",
    "end": "796079"
  },
  {
    "text": "the Army cluster Discovery service the",
    "start": "796079",
    "end": "798779"
  },
  {
    "text": "short name is CDs",
    "start": "798779",
    "end": "802339"
  },
  {
    "text": "end point",
    "start": "803160",
    "end": "805079"
  },
  {
    "text": "the Upstream endpoints updated with the",
    "start": "805079",
    "end": "808320"
  },
  {
    "text": "Army endpoint Discovery service with the",
    "start": "808320",
    "end": "810600"
  },
  {
    "text": "short name is EDS",
    "start": "810600",
    "end": "812639"
  },
  {
    "text": "and it supports the dynamic and auto",
    "start": "812639",
    "end": "815220"
  },
  {
    "text": "scaling and also covers health check",
    "start": "815220",
    "end": "819480"
  },
  {
    "text": "which is part of it is the unhealthy",
    "start": "819480",
    "end": "822720"
  },
  {
    "text": "endpoint Reaper",
    "start": "822720",
    "end": "825920"
  },
  {
    "text": "I want to talk about the middle layer",
    "start": "828420",
    "end": "831180"
  },
  {
    "text": "between the listen and Roads",
    "start": "831180",
    "end": "834240"
  },
  {
    "text": "it's called HTTP Connection Manager show",
    "start": "834240",
    "end": "837180"
  },
  {
    "text": "name is HCM",
    "start": "837180",
    "end": "839940"
  },
  {
    "text": "actual CM it is a network layer filter",
    "start": "839940",
    "end": "843480"
  },
  {
    "text": "in the translator real bytes into http",
    "start": "843480",
    "end": "847860"
  },
  {
    "text": "it handles access login",
    "start": "847860",
    "end": "850740"
  },
  {
    "text": "request ID generation",
    "start": "850740",
    "end": "853260"
  },
  {
    "text": "tracing",
    "start": "853260",
    "end": "854760"
  },
  {
    "text": "Handler manipulation retry policy",
    "start": "854760",
    "end": "857959"
  },
  {
    "text": "timeout setting traffic waves and Road",
    "start": "857959",
    "end": "862980"
  },
  {
    "text": "Waiters",
    "start": "862980",
    "end": "865579"
  },
  {
    "text": "for accuracy I am the road use the",
    "start": "868440",
    "end": "872160"
  },
  {
    "text": "information from the income requests for",
    "start": "872160",
    "end": "874800"
  },
  {
    "text": "example the whole store also retenders",
    "start": "874800",
    "end": "876800"
  },
  {
    "text": "and matches it to an upstream cluster",
    "start": "876800",
    "end": "880139"
  },
  {
    "text": "through the virtual host or routing",
    "start": "880139",
    "end": "882300"
  },
  {
    "text": "rules",
    "start": "882300",
    "end": "883860"
  },
  {
    "text": "activity filters use the road",
    "start": "883860",
    "end": "886320"
  },
  {
    "text": "configuration that contains other row",
    "start": "886320",
    "end": "888959"
  },
  {
    "text": "table for the HTTP routine",
    "start": "888959",
    "end": "892699"
  },
  {
    "text": "and a set of handles can be specified to",
    "start": "893699",
    "end": "897120"
  },
  {
    "text": "match the request the rotor checks",
    "start": "897120",
    "end": "900680"
  },
  {
    "text": "request handles against all the",
    "start": "900680",
    "end": "903360"
  },
  {
    "text": "specified Handles in the road config",
    "start": "903360",
    "end": "905880"
  },
  {
    "text": "some match includes the branch present",
    "start": "905880",
    "end": "910339"
  },
  {
    "text": "string inward match",
    "start": "910339",
    "end": "914779"
  },
  {
    "text": "HCM filters also support query",
    "start": "915560",
    "end": "918720"
  },
  {
    "text": "parameters matching the TRS context",
    "start": "918720",
    "end": "922019"
  },
  {
    "text": "matching and the grpc wrote in matching",
    "start": "922019",
    "end": "925440"
  },
  {
    "text": "for routine",
    "start": "925440",
    "end": "928040"
  },
  {
    "text": "and always supports traffic splitting to",
    "start": "929040",
    "end": "933120"
  },
  {
    "text": "different roads within the same virtual",
    "start": "933120",
    "end": "935399"
  },
  {
    "text": "host",
    "start": "935399",
    "end": "936300"
  },
  {
    "text": "we can split the traffic between the two",
    "start": "936300",
    "end": "939360"
  },
  {
    "text": "or more Upstream clusters",
    "start": "939360",
    "end": "942180"
  },
  {
    "text": "the traffic speed happens on runtime",
    "start": "942180",
    "end": "945779"
  },
  {
    "text": "percentage or weighted clusters",
    "start": "945779",
    "end": "950600"
  },
  {
    "text": "so I will support two types of the",
    "start": "951899",
    "end": "956040"
  },
  {
    "text": "health check active and passive",
    "start": "956040",
    "end": "960300"
  },
  {
    "text": "with active health check",
    "start": "960300",
    "end": "962660"
  },
  {
    "text": "are we periodically send the requests to",
    "start": "962660",
    "end": "965940"
  },
  {
    "text": "them points to check its status",
    "start": "965940",
    "end": "968639"
  },
  {
    "text": "with the passive health check and we",
    "start": "968639",
    "end": "971519"
  },
  {
    "text": "monitors hold endpoints response to",
    "start": "971519",
    "end": "974279"
  },
  {
    "text": "connections",
    "start": "974279",
    "end": "976440"
  },
  {
    "text": "you can use either of them depending on",
    "start": "976440",
    "end": "978600"
  },
  {
    "text": "use case",
    "start": "978600",
    "end": "981079"
  },
  {
    "text": "load balancing",
    "start": "981240",
    "end": "983160"
  },
  {
    "text": "load balancing is very important because",
    "start": "983160",
    "end": "986160"
  },
  {
    "text": "it is a way to Distributing traffic",
    "start": "986160",
    "end": "988800"
  },
  {
    "text": "between the multiple endpoints in a",
    "start": "988800",
    "end": "991680"
  },
  {
    "text": "single",
    "start": "991680",
    "end": "992699"
  },
  {
    "text": "service and a single Upstream cluster",
    "start": "992699",
    "end": "996000"
  },
  {
    "text": "the reason to distribute traffic across",
    "start": "996000",
    "end": "999060"
  },
  {
    "text": "multiple endpoints is because we want to",
    "start": "999060",
    "end": "1002420"
  },
  {
    "text": "make the best use of the resource",
    "start": "1002420",
    "end": "1005779"
  },
  {
    "text": "it helps the cost cost effective for the",
    "start": "1005779",
    "end": "1009560"
  },
  {
    "text": "product or for your applications",
    "start": "1009560",
    "end": "1013480"
  },
  {
    "text": "retrines",
    "start": "1015560",
    "end": "1017000"
  },
  {
    "text": "and will allow the real twice",
    "start": "1017000",
    "end": "1019940"
  },
  {
    "text": "and a lot of set in the retry policy at",
    "start": "1019940",
    "end": "1022759"
  },
  {
    "text": "the virtual host level",
    "start": "1022759",
    "end": "1024438"
  },
  {
    "text": "at the HTTP connect manager and then",
    "start": "1024439",
    "end": "1028400"
  },
  {
    "text": "also the road level based on the",
    "start": "1028400",
    "end": "1030319"
  },
  {
    "text": "conditions",
    "start": "1030319",
    "end": "1032240"
  },
  {
    "text": "for example if there's a photo nice test",
    "start": "1032240",
    "end": "1035480"
  },
  {
    "text": "scores return",
    "start": "1035480",
    "end": "1036918"
  },
  {
    "text": "from the end point then we can set the",
    "start": "1036919",
    "end": "1040100"
  },
  {
    "text": "retrace",
    "start": "1040100",
    "end": "1041540"
  },
  {
    "text": "then retrace will happen the stimulus on",
    "start": "1041540",
    "end": "1045798"
  },
  {
    "text": "the Upstream of other available instance",
    "start": "1045799",
    "end": "1050120"
  },
  {
    "text": "we can set the files on state code we",
    "start": "1050120",
    "end": "1052940"
  },
  {
    "text": "can set the files on the priority level",
    "start": "1052940",
    "end": "1055460"
  },
  {
    "text": "depend on your use case",
    "start": "1055460",
    "end": "1058779"
  },
  {
    "text": "circuit breaker",
    "start": "1060020",
    "end": "1062299"
  },
  {
    "text": "this pattern prevents additional",
    "start": "1062299",
    "end": "1064880"
  },
  {
    "text": "failures managing access to failing",
    "start": "1064880",
    "end": "1068179"
  },
  {
    "text": "services",
    "start": "1068179",
    "end": "1069200"
  },
  {
    "text": "it allows us to feel quickly and apply",
    "start": "1069200",
    "end": "1072620"
  },
  {
    "text": "back pressure Downstream as soon as",
    "start": "1072620",
    "end": "1074600"
  },
  {
    "text": "possible it is best practice",
    "start": "1074600",
    "end": "1077840"
  },
  {
    "text": "we can configure Breakers threshold for",
    "start": "1077840",
    "end": "1081320"
  },
  {
    "text": "each Road priority separately and",
    "start": "1081320",
    "end": "1083539"
  },
  {
    "text": "globally",
    "start": "1083539",
    "end": "1086019"
  },
  {
    "text": "timeout always supports multiple",
    "start": "1088960",
    "end": "1092419"
  },
  {
    "text": "configurable timeouts depending on your",
    "start": "1092419",
    "end": "1094700"
  },
  {
    "text": "scenarios",
    "start": "1094700",
    "end": "1096559"
  },
  {
    "text": "for example there's a request timeout",
    "start": "1096559",
    "end": "1099320"
  },
  {
    "text": "specified some amount of time only waits",
    "start": "1099320",
    "end": "1102500"
  },
  {
    "text": "for the Intel request to be received",
    "start": "1102500",
    "end": "1105200"
  },
  {
    "text": "there are also Idol 10 miles represent",
    "start": "1105200",
    "end": "1108080"
  },
  {
    "text": "one Downstream or Upstream connection",
    "start": "1108080",
    "end": "1110780"
  },
  {
    "text": "gets terminated if there are no active",
    "start": "1110780",
    "end": "1114140"
  },
  {
    "text": "streams",
    "start": "1114140",
    "end": "1116620"
  },
  {
    "text": "create an emitter",
    "start": "1117880",
    "end": "1120200"
  },
  {
    "text": "always supports Global and local retina",
    "start": "1120200",
    "end": "1123679"
  },
  {
    "text": "meter to the Upstream endpoints",
    "start": "1123679",
    "end": "1128080"
  },
  {
    "text": "we finish the arm with sales building",
    "start": "1130880",
    "end": "1133520"
  },
  {
    "text": "blocks let's step back and see the old",
    "start": "1133520",
    "end": "1137360"
  },
  {
    "text": "architecture the control plan component",
    "start": "1137360",
    "end": "1141799"
  },
  {
    "text": "generally you compute the customized",
    "start": "1141799",
    "end": "1144620"
  },
  {
    "text": "control plan for Amway runtime",
    "start": "1144620",
    "end": "1147320"
  },
  {
    "text": "it will responsible for a service",
    "start": "1147320",
    "end": "1150080"
  },
  {
    "text": "cluster Discovery CDs and service",
    "start": "1150080",
    "end": "1153620"
  },
  {
    "text": "endpoint Discovery EDS",
    "start": "1153620",
    "end": "1156740"
  },
  {
    "text": "and it was also responsible to passing",
    "start": "1156740",
    "end": "1159380"
  },
  {
    "text": "all the root or unconfigurations",
    "start": "1159380",
    "end": "1161299"
  },
  {
    "text": "necessary for Amway runtime activity to",
    "start": "1161299",
    "end": "1164240"
  },
  {
    "text": "the Android",
    "start": "1164240",
    "end": "1166660"
  },
  {
    "text": "it can be viewed as the grp so we're",
    "start": "1166700",
    "end": "1169280"
  },
  {
    "text": "listening on a defined port",
    "start": "1169280",
    "end": "1173500"
  },
  {
    "text": "family account needs to be updated",
    "start": "1174919",
    "end": "1177980"
  },
  {
    "text": "with latest service information at",
    "start": "1177980",
    "end": "1180679"
  },
  {
    "text": "runtime",
    "start": "1180679",
    "end": "1182179"
  },
  {
    "text": "so I will discover Dynamic Resources by",
    "start": "1182179",
    "end": "1185120"
  },
  {
    "text": "curing the management servers using XDS",
    "start": "1185120",
    "end": "1187940"
  },
  {
    "text": "which is full name is the Discovery",
    "start": "1187940",
    "end": "1190700"
  },
  {
    "text": "service apis",
    "start": "1190700",
    "end": "1193280"
  },
  {
    "text": "the dynamic resource I'm in here",
    "start": "1193280",
    "end": "1195320"
  },
  {
    "text": "including customers and endpoints",
    "start": "1195320",
    "end": "1199340"
  },
  {
    "text": "and we request Resources with",
    "start": "1199340",
    "end": "1201799"
  },
  {
    "text": "subscriptions by initialing grpc stream",
    "start": "1201799",
    "end": "1205160"
  },
  {
    "text": "from unwind client to the management",
    "start": "1205160",
    "end": "1207799"
  },
  {
    "text": "server",
    "start": "1207799",
    "end": "1210519"
  },
  {
    "text": "talking a little bit more about the",
    "start": "1212480",
    "end": "1214340"
  },
  {
    "text": "cluster and endpoint Discovery cluster",
    "start": "1214340",
    "end": "1217160"
  },
  {
    "text": "can't be configured and always through",
    "start": "1217160",
    "end": "1219559"
  },
  {
    "text": "the CTS Discovery service API and",
    "start": "1219559",
    "end": "1222980"
  },
  {
    "text": "endpoint going to be updated through the",
    "start": "1222980",
    "end": "1226220"
  },
  {
    "text": "Eds Discovery service API",
    "start": "1226220",
    "end": "1230559"
  },
  {
    "text": "all of these apis are open source",
    "start": "1231260",
    "end": "1234200"
  },
  {
    "text": "an app router used the CDs API",
    "start": "1234200",
    "end": "1236900"
  },
  {
    "text": "dynamically update clusters",
    "start": "1236900",
    "end": "1239600"
  },
  {
    "text": "and EDS to update endpoints per cluster",
    "start": "1239600",
    "end": "1244900"
  },
  {
    "text": "location metrics is a Diana component",
    "start": "1246500",
    "end": "1249200"
  },
  {
    "text": "which is important to collection all the",
    "start": "1249200",
    "end": "1252080"
  },
  {
    "text": "insights and activity data",
    "start": "1252080",
    "end": "1254960"
  },
  {
    "text": "how we can configure exposed metrics",
    "start": "1254960",
    "end": "1257600"
  },
  {
    "text": "locally",
    "start": "1257600",
    "end": "1258620"
  },
  {
    "text": "and the static sync let's receive the",
    "start": "1258620",
    "end": "1261500"
  },
  {
    "text": "metrics immediately from our way and",
    "start": "1261500",
    "end": "1263720"
  },
  {
    "text": "good order collection aggregation",
    "start": "1263720",
    "end": "1266179"
  },
  {
    "text": "for the metrics such as 2xx 5xx request",
    "start": "1266179",
    "end": "1271220"
  },
  {
    "text": "account can eventually forward it to",
    "start": "1271220",
    "end": "1274100"
  },
  {
    "text": "Locus and Metric service",
    "start": "1274100",
    "end": "1277240"
  },
  {
    "text": "it can be built as a grpc service",
    "start": "1277460",
    "end": "1279860"
  },
  {
    "text": "listening and Define port",
    "start": "1279860",
    "end": "1283600"
  },
  {
    "text": "and all the collected metrics and logs",
    "start": "1284539",
    "end": "1287120"
  },
  {
    "text": "can be",
    "start": "1287120",
    "end": "1289039"
  },
  {
    "text": "routed to the",
    "start": "1289039",
    "end": "1291100"
  },
  {
    "text": "popular Cloud native observous solutions",
    "start": "1291100",
    "end": "1294500"
  },
  {
    "text": "for example the cloud watch which is for",
    "start": "1294500",
    "end": "1297679"
  },
  {
    "text": "Matrix and logging and managing the",
    "start": "1297679",
    "end": "1300679"
  },
  {
    "text": "service for promises for monitoring and",
    "start": "1300679",
    "end": "1303559"
  },
  {
    "text": "open Telemetry or graphene or x-ray",
    "start": "1303559",
    "end": "1308679"
  },
  {
    "text": "the last component is the even streamer",
    "start": "1310460",
    "end": "1314480"
  },
  {
    "text": "it is responsible for reporting service",
    "start": "1314480",
    "end": "1317240"
  },
  {
    "text": "status and health check results for the",
    "start": "1317240",
    "end": "1320120"
  },
  {
    "text": "only runtime",
    "start": "1320120",
    "end": "1321740"
  },
  {
    "text": "it also can be viewed as the grp's",
    "start": "1321740",
    "end": "1324200"
  },
  {
    "text": "resource listening on defined port",
    "start": "1324200",
    "end": "1327880"
  },
  {
    "text": "and all of this health check and Status",
    "start": "1329780",
    "end": "1332840"
  },
  {
    "text": "results will be used in the supporting",
    "start": "1332840",
    "end": "1335539"
  },
  {
    "text": "service like safe deployment",
    "start": "1335539",
    "end": "1337880"
  },
  {
    "text": "blue green deployment or automatic",
    "start": "1337880",
    "end": "1341000"
  },
  {
    "text": "scaling load balancing and request",
    "start": "1341000",
    "end": "1344000"
  },
  {
    "text": "floating",
    "start": "1344000",
    "end": "1346419"
  },
  {
    "text": "so we finish all the functionalities of",
    "start": "1349280",
    "end": "1351679"
  },
  {
    "text": "Amway related ecosystem let's talk about",
    "start": "1351679",
    "end": "1355340"
  },
  {
    "text": "how to make our way based system in",
    "start": "1355340",
    "end": "1358460"
  },
  {
    "text": "production readiness",
    "start": "1358460",
    "end": "1360260"
  },
  {
    "text": "so besides the functional readiness",
    "start": "1360260",
    "end": "1363200"
  },
  {
    "text": "we need to make sure the capacity",
    "start": "1363200",
    "end": "1365000"
  },
  {
    "text": "management is under control",
    "start": "1365000",
    "end": "1367580"
  },
  {
    "text": "it includes the CPU and memory",
    "start": "1367580",
    "end": "1370400"
  },
  {
    "text": "consumption because it is high",
    "start": "1370400",
    "end": "1372620"
  },
  {
    "text": "performance has to improved we want to",
    "start": "1372620",
    "end": "1374720"
  },
  {
    "text": "make sure there's nothing which is out",
    "start": "1374720",
    "end": "1376520"
  },
  {
    "text": "of the expectation",
    "start": "1376520",
    "end": "1379340"
  },
  {
    "text": "we also need to make sure the",
    "start": "1379340",
    "end": "1381320"
  },
  {
    "text": "performance and the scalability for the",
    "start": "1381320",
    "end": "1383299"
  },
  {
    "text": "Amway system",
    "start": "1383299",
    "end": "1385159"
  },
  {
    "text": "and same time the security for example",
    "start": "1385159",
    "end": "1387679"
  },
  {
    "text": "details how you prevent the their",
    "start": "1387679",
    "end": "1390820"
  },
  {
    "text": "details which is in the place",
    "start": "1390820",
    "end": "1395200"
  },
  {
    "text": "and also an operational Readiness items",
    "start": "1395900",
    "end": "1398659"
  },
  {
    "text": "including the monitors and labs",
    "start": "1398659",
    "end": "1402940"
  },
  {
    "text": "to ramp up",
    "start": "1405919",
    "end": "1408620"
  },
  {
    "text": "so the only brings values in building a",
    "start": "1408620",
    "end": "1413299"
  },
  {
    "text": "very solid request relative",
    "start": "1413299",
    "end": "1416480"
  },
  {
    "text": "with the Manning features",
    "start": "1416480",
    "end": "1420020"
  },
  {
    "text": "High throughput",
    "start": "1420020",
    "end": "1421940"
  },
  {
    "text": "and the performance requests",
    "start": "1421940",
    "end": "1424580"
  },
  {
    "text": "routing and load balancing",
    "start": "1424580",
    "end": "1427640"
  },
  {
    "text": "portability extensibility",
    "start": "1427640",
    "end": "1431480"
  },
  {
    "text": "reliability and availability",
    "start": "1432020",
    "end": "1435020"
  },
  {
    "text": "of course it provides very very good",
    "start": "1435020",
    "end": "1438559"
  },
  {
    "text": "observability",
    "start": "1438559",
    "end": "1440960"
  },
  {
    "text": "easy for Builders management online",
    "start": "1440960",
    "end": "1443720"
  },
  {
    "text": "system and extends the system to build",
    "start": "1443720",
    "end": "1448100"
  },
  {
    "text": "new things on top of it",
    "start": "1448100",
    "end": "1451720"
  },
  {
    "text": "with all the Army related topic finish I",
    "start": "1453860",
    "end": "1457340"
  },
  {
    "text": "also want to introduce a little bit on",
    "start": "1457340",
    "end": "1459799"
  },
  {
    "text": "The Apprentice public roadmap",
    "start": "1459799",
    "end": "1463000"
  },
  {
    "text": "Runner as a product has a public roadmap",
    "start": "1463000",
    "end": "1466100"
  },
  {
    "text": "in the GitHub",
    "start": "1466100",
    "end": "1467900"
  },
  {
    "text": "we received and collect custom request",
    "start": "1467900",
    "end": "1471500"
  },
  {
    "text": "and also we interact with customer",
    "start": "1471500",
    "end": "1474440"
  },
  {
    "text": "directly",
    "start": "1474440",
    "end": "1475940"
  },
  {
    "text": "actively on roadmap to share our plan",
    "start": "1475940",
    "end": "1479840"
  },
  {
    "text": "share what we are working on",
    "start": "1479840",
    "end": "1482480"
  },
  {
    "text": "thank you there are also couple items",
    "start": "1482480",
    "end": "1485120"
  },
  {
    "text": "which is related to request routing",
    "start": "1485120",
    "end": "1487880"
  },
  {
    "text": "and boxing in a parameter",
    "start": "1487880",
    "end": "1490640"
  },
  {
    "text": "for example the private service support",
    "start": "1490640",
    "end": "1495940"
  },
  {
    "text": "additional X forwarded Handler support",
    "start": "1496419",
    "end": "1499880"
  },
  {
    "text": "and web support and configuration",
    "start": "1499880",
    "end": "1503480"
  },
  {
    "text": "timeout support",
    "start": "1503480",
    "end": "1505760"
  },
  {
    "text": "we are happy to receive your feedback",
    "start": "1505760",
    "end": "1509659"
  },
  {
    "text": "and feel free to check it out and let us",
    "start": "1509659",
    "end": "1512780"
  },
  {
    "text": "know how we can do better",
    "start": "1512780",
    "end": "1516280"
  },
  {
    "text": "this is all the things I want to talk",
    "start": "1518780",
    "end": "1520640"
  },
  {
    "text": "about here so thank you again to be in",
    "start": "1520640",
    "end": "1524720"
  },
  {
    "text": "the session and also I will leave the",
    "start": "1524720",
    "end": "1527840"
  },
  {
    "text": "rest of the time for the Q and A",
    "start": "1527840",
    "end": "1531860"
  },
  {
    "text": "thanks",
    "start": "1531860",
    "end": "1534400"
  }
]