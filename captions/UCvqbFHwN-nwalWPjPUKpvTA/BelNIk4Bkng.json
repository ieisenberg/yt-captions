[
  {
    "text": "okay thank you thank you everyone for being here um uh today talk will be uh",
    "start": "160",
    "end": "5400"
  },
  {
    "text": "about enhancing cyber security um through case Engineering in uh Cloud native environment uh before we start",
    "start": "5400",
    "end": "12599"
  },
  {
    "text": "let me introduce myself and my uh friend Tran I'm Rafi kabi uh I've been in the",
    "start": "12599",
    "end": "17680"
  },
  {
    "text": "cloud native security uh since 2017 and I've been working with cytic um",
    "start": "17680",
    "end": "23320"
  },
  {
    "text": "since 4 years right now mainly advocating customer in Europe and Middle East around Cloud native security and",
    "start": "23320",
    "end": "29640"
  },
  {
    "text": "obser ability uh for those who don't know Cy we are Cloud native um security and observability platform we are",
    "start": "29640",
    "end": "36640"
  },
  {
    "text": "offering protection and observability for your Cloud native assets and we are the company behind Falco the open source",
    "start": "36640",
    "end": "42840"
  },
  {
    "text": "trade detection and response uh donated to Falco to a cncf and being promoted",
    "start": "42840",
    "end": "48480"
  },
  {
    "text": "back in in February and hey guys my name is shyen I'm a senior software engineer at a",
    "start": "48480",
    "end": "54359"
  },
  {
    "text": "company called harness uh where we sort of focus on software delivery so we",
    "start": "54359",
    "end": "60000"
  },
  {
    "text": "create products around um Cloud cost management chaos engineering cicd things",
    "start": "60000",
    "end": "65040"
  },
  {
    "text": "like that I've also been a maintainer of lmas chaos for the past 3 to four years and which is a cncf incubating project",
    "start": "65040",
    "end": "71360"
  },
  {
    "text": "uh on chaos engineering and I've also been associated with cncf through LFX mentorships and uh been an active chaos",
    "start": "71360",
    "end": "78119"
  },
  {
    "text": "engineering practitioner so you can find my social media links as well in the slide awesome um so what we have today",
    "start": "78119",
    "end": "86079"
  },
  {
    "text": "uh part of the agenda the first thing we will be uh talking about the Cloud native application and the difference in",
    "start": "86079",
    "end": "92439"
  },
  {
    "text": "the threat landscape uh then we be introducing case engineering and cyber",
    "start": "92439",
    "end": "97560"
  },
  {
    "text": "resiliency and we will link this uh to um to how to enhance the cyber security",
    "start": "97560",
    "end": "103360"
  },
  {
    "text": "using case engineering uh practice uh we'll talk about the solution that we're presenting today uh the way that we",
    "start": "103360",
    "end": "109719"
  },
  {
    "text": "combine uh both the case engineering and the thread detection and response uh to build the best um robust and resilient",
    "start": "109719",
    "end": "117640"
  },
  {
    "text": "system um and finally we be talking about the tools that we choose um and",
    "start": "117640",
    "end": "123039"
  },
  {
    "text": "they are open source on the second half we'll be looking at a real Hands-On demo of how you can do chaos Engineering in",
    "start": "123039",
    "end": "129479"
  },
  {
    "text": "practice we'll take a look at the next steps uh and the takeaways from this uh",
    "start": "129479",
    "end": "134480"
  },
  {
    "text": "talk nice so um let's say um in the Legacy World U it was a little bit more",
    "start": "134480",
    "end": "141640"
  },
  {
    "text": "or less easy to protect your application because usually they are either inside the VM or they are running on physical",
    "start": "141640",
    "end": "148720"
  },
  {
    "text": "services and and the usual way that you've been running to protect this application is just putting a firewall",
    "start": "148720",
    "end": "155480"
  },
  {
    "text": "in front on this application and you be able to detect any anormal or",
    "start": "155480",
    "end": "160879"
  },
  {
    "text": "intrusion uh this is no longer the case when it come to Cloud because first of all the cloud is exposed is the public",
    "start": "160879",
    "end": "167000"
  },
  {
    "text": "services and even if you have an HRI environment is still you are still exposing to um to the to to the real",
    "start": "167000",
    "end": "174440"
  },
  {
    "text": "world so also we have this kind of services that are part of your infrastructure that that um help you um",
    "start": "174440",
    "end": "181319"
  },
  {
    "text": "to innovate and build faster but uh the problem actually that the team they are owning those services that they can",
    "start": "181319",
    "end": "187200"
  },
  {
    "text": "insatiate Services they may be um misconfigured and so on and you need to",
    "start": "187200",
    "end": "192480"
  },
  {
    "text": "control the access for the services both for your for your team and your for the service account that you are using um",
    "start": "192480",
    "end": "199159"
  },
  {
    "text": "and because this is bring a lot of services talking together it would be really hard to dedi any unusual activity",
    "start": "199159",
    "end": "206000"
  },
  {
    "text": "under the hood so in a naal um if you take a cloud native appli we can see that it's coming with uh",
    "start": "206000",
    "end": "213159"
  },
  {
    "text": "workloads that are running as containers running as serverless or maybe just evm",
    "start": "213159",
    "end": "218200"
  },
  {
    "text": "that you shifted and lifted from your imp Prem environment and they are running on top of kubernets or container",
    "start": "218200",
    "end": "223920"
  },
  {
    "text": "as Services either they are public or in Cloud but you have all these um let's",
    "start": "223920",
    "end": "229159"
  },
  {
    "text": "say um surrounded services that you need like storage like Management Services service bus and so on using identity and",
    "start": "229159",
    "end": "236280"
  },
  {
    "text": "access management as well and of course all the networking and Security Services and you see it's it's going from a",
    "start": "236280",
    "end": "241640"
  },
  {
    "text": "simple application that is running on a VM to big picture like this so the main",
    "start": "241640",
    "end": "247120"
  },
  {
    "text": "challenges that uh the surface attack become very very Dynamic um regarding to this services that you can uh spin up",
    "start": "247120",
    "end": "253959"
  },
  {
    "text": "very easily and the thread AER today they are using the same tools let's say that if you are using terraform or any",
    "start": "253959",
    "end": "259680"
  },
  {
    "text": "other Tool uh to easily deploy your Cloud infrastructure the attackers will be the same tools to speed the attack so",
    "start": "259680",
    "end": "266000"
  },
  {
    "text": "it's it's race between you and them and the Theus system and microservice oriented architecture will arise the",
    "start": "266000",
    "end": "272240"
  },
  {
    "text": "attack Surface by generating a long number of of of cause within the distributed system um the other",
    "start": "272240",
    "end": "278880"
  },
  {
    "text": "challenge that you have today that um the Legacy tools are not um attended um into to to cover the cloud Security in",
    "start": "278880",
    "end": "285919"
  },
  {
    "text": "terms of visibility and by the end you will find yourself that the delivery is much faster than security uh um",
    "start": "285919",
    "end": "293680"
  },
  {
    "text": "procedure that you are applying so this is the most um the top challenges now building software in this",
    "start": "293680",
    "end": "299800"
  },
  {
    "text": "Cloud native era is a lot more complicated than it used to be because we have to think about how our software",
    "start": "299800",
    "end": "305199"
  },
  {
    "text": "is run on different environment we have to manage CI and deployment and uh we also use Advanced Dev practices like",
    "start": "305199",
    "end": "312000"
  },
  {
    "text": "Canary releases so we need to handle multiple environments and uh things like de development staging production and",
    "start": "312000",
    "end": "318000"
  },
  {
    "text": "keep everything in sync U and with good configuration so not just that but security has become more and more",
    "start": "318000",
    "end": "323560"
  },
  {
    "text": "complicated too with focus on zero trust environments testing monitoring everything is crucial now and we also",
    "start": "323560",
    "end": "330240"
  },
  {
    "text": "compared uh if we compare this to the past we see that we just had a couple of pipelines to manage uh but today's Cloud",
    "start": "330240",
    "end": "336639"
  },
  {
    "text": "native world has new challenges and New Opportunities which we should embrace and also think about how we can make our systems more",
    "start": "336639",
    "end": "343319"
  },
  {
    "text": "reliable now uh the cloud native applications often depend on many different microservices and platforms",
    "start": "343319",
    "end": "350360"
  },
  {
    "text": "which can increase the risk of failures in the old days of devops would build our software and deploy it uh but now",
    "start": "350360",
    "end": "356560"
  },
  {
    "text": "we're building and shipping much more often 10 times more uh than before in this rapid cycle we",
    "start": "356560",
    "end": "362960"
  },
  {
    "text": "sometimes also Overlook testing the underlying infrastructure uh which can lead to issues that are hard to spot",
    "start": "362960",
    "end": "368720"
  },
  {
    "text": "with so many moving Parts it is also crucial that every layer of our system is Thoroughly tested to maintain uh the",
    "start": "368720",
    "end": "374919"
  },
  {
    "text": "reliability and to understand reliability better let's uh take a look at what causes Down",
    "start": "374919",
    "end": "380880"
  },
  {
    "text": "times now we know that down times refer to a period where a system of service is unreliable and uh it goes down due to",
    "start": "380880",
    "end": "388479"
  },
  {
    "text": "various issues we'll take a look at some of the issues uh but a few common issues would be the operational failures like",
    "start": "388479",
    "end": "395400"
  },
  {
    "text": "capacity problems or ineffective Incident Management uh something like application failures which could be due",
    "start": "395400",
    "end": "401680"
  },
  {
    "text": "to excessive logging that slows down your system uh or things like infrastructural failures like uh",
    "start": "401680",
    "end": "407680"
  },
  {
    "text": "unavailable regions or network outages uh now to understand how this can impact",
    "start": "407680",
    "end": "413440"
  },
  {
    "text": "or these impacts could be significant let's take a look at a few examples we'll start with an SLA violation uh",
    "start": "413440",
    "end": "419160"
  },
  {
    "text": "that happened lack which led to $8 million payout which did not only impact the company's Revenue but also their",
    "start": "419160",
    "end": "425440"
  },
  {
    "text": "reputation we'll also take an example of Wells Fargo where a simple power shut down in a data center which happened due",
    "start": "425440",
    "end": "431479"
  },
  {
    "text": "to smoke caused loss of transaction and their direct deposit checks when really reflecting in the accounts so single",
    "start": "431479",
    "end": "437599"
  },
  {
    "text": "hour of downtime costed around $100,000 uh lastly we'll take another look at British Airways where around 400",
    "start": "437599",
    "end": "444840"
  },
  {
    "text": "flights were cancelled 55,000 passengers were stranded uh which was around 100 $1 million in losses when we did a root",
    "start": "444840",
    "end": "452560"
  },
  {
    "text": "cause analysis they found that uh it was a debugging issue in one of the servers which cascaded to the other servers",
    "start": "452560",
    "end": "458000"
  },
  {
    "text": "which impacted the building system so we see how important uh managing your down times is and larger organizations like",
    "start": "458000",
    "end": "465240"
  },
  {
    "text": "lingin Facebook Etc are also practicing chaos today now we can't really overlook this",
    "start": "465240",
    "end": "472840"
  },
  {
    "text": "which is uh the recent crowd strike outage which had a major impact across the industry and it not only reflected",
    "start": "472840",
    "end": "479639"
  },
  {
    "text": "the security posture of uh you know numerous businesses but also highlighted the Reliance that we have on cloud-based",
    "start": "479639",
    "end": "486520"
  },
  {
    "text": "Solutions today and it is crucial that we have like a robust reliable system to",
    "start": "486520",
    "end": "492319"
  },
  {
    "text": "plan uh how we can manage such critical failures now we also often are faced by",
    "start": "492319",
    "end": "499680"
  },
  {
    "text": "Bad actors that are constantly trying to uh look out for vulnerabilities to exploit within our Cloud native system",
    "start": "499680",
    "end": "506240"
  },
  {
    "text": "and with the increasing complexity we often uh see attackers find more opportunities to breach systems and",
    "start": "506240",
    "end": "512200"
  },
  {
    "text": "access your sensitive data uh they target weaknesses in the microservices and often use the underlying",
    "start": "512200",
    "end": "517839"
  },
  {
    "text": "infrastructure to find and exploit security gaps um and therefore it is crucial that we uh stay vigilant and um",
    "start": "517839",
    "end": "524480"
  },
  {
    "text": "SEC our systems against these ever evolving Bad actors or",
    "start": "524480",
    "end": "529519"
  },
  {
    "text": "threats so that is where we introduce chaos engineering now what how can we Define it chaos engineering is the",
    "start": "529519",
    "end": "536680"
  },
  {
    "text": "discipline of experimenting on a system in order order to build confidence in your systems capability to withstand any",
    "start": "536680",
    "end": "543360"
  },
  {
    "text": "kind of disruptions in production or to put it simply we intentionally Break Stuff uh in a controlled environment to",
    "start": "543360",
    "end": "549519"
  },
  {
    "text": "check the resilience of your system so okay um why we uh what is the",
    "start": "549519",
    "end": "555600"
  },
  {
    "text": "case engineering um in in the cyber security the case Engineering in the cyber security is the fact that you",
    "start": "555600",
    "end": "561880"
  },
  {
    "text": "using the same patterns and practice um appli to cyber security by uh introducing uh controlled um um case",
    "start": "561880",
    "end": "569800"
  },
  {
    "text": "system um to measure the system resiliency and discover unnown patterns",
    "start": "569800",
    "end": "575200"
  },
  {
    "text": "for your resiliency in terms of cyber security um I put here the definition from mitigant",
    "start": "575200",
    "end": "581240"
  },
  {
    "text": "yeah uh so um one question it would it may come to your mind we have we have already some R team strategies we have",
    "start": "581240",
    "end": "588320"
  },
  {
    "text": "pen testing we have adversary imation why we need case engineering and that's a good question so let's let's see the",
    "start": "588320",
    "end": "594360"
  },
  {
    "text": "difference between the three of them and what what is bring it more by Cas engineering first of all the pentest",
    "start": "594360",
    "end": "600200"
  },
  {
    "text": "um is usually focusing on specific assets and it's defining um a limited scope you are not testing your all",
    "start": "600200",
    "end": "606560"
  },
  {
    "text": "infrastructure you are testing uh web application or a part of your structure",
    "start": "606560",
    "end": "611880"
  },
  {
    "text": "and also um they are conducted periodically there is usually uh companies they don't run pen testing uh",
    "start": "611880",
    "end": "618880"
  },
  {
    "text": "in a continuous way on the second hand um the aders emulation it usually um um",
    "start": "618880",
    "end": "626279"
  },
  {
    "text": "run against like specific thread actors um an attack scenario um usually in a",
    "start": "626279",
    "end": "631680"
  },
  {
    "text": "specific um geopolitic scenario and you are focusing mainly on a specific attack",
    "start": "631680",
    "end": "637440"
  },
  {
    "text": "boxer that is coming and techniques that is coming from from a particular adversary or a threat group uh on the",
    "start": "637440",
    "end": "644000"
  },
  {
    "text": "other side uh the security case engineering will be uh mainly um introducing controlled failure uh to",
    "start": "644000",
    "end": "650880"
  },
  {
    "text": "know the unknown and to observe how the system is responding to this um uh to",
    "start": "650880",
    "end": "656360"
  },
  {
    "text": "these attacks or this case um scenarios and uh recover from it and it's um",
    "start": "656360",
    "end": "661639"
  },
  {
    "text": "usually because it's a new uh Paradigm in the cloud native um ecosystem it's usually an ongoing practice that you can",
    "start": "661639",
    "end": "668160"
  },
  {
    "text": "include in your uh cicd pipeline for example so and natural this is the main",
    "start": "668160",
    "end": "673800"
  },
  {
    "text": "um Adventures that coming uh with case Engineering in terms of security uh you",
    "start": "673800",
    "end": "678920"
  },
  {
    "text": "have a productive approach that you can apply um you can integrate it easily in your security pipeline um and also it",
    "start": "678920",
    "end": "685920"
  },
  {
    "text": "will provide you with the continuous feedback and Improvement at your",
    "start": "685920",
    "end": "691240"
  },
  {
    "text": "system so let's see where we can practice chaos security chaos engineering effectively as of today uh",
    "start": "691240",
    "end": "697959"
  },
  {
    "text": "we generally don't recommend going head first into production because uh you",
    "start": "697959",
    "end": "703160"
  },
  {
    "text": "want might want to test the waters so we start with your local environment for initial testing and then you move to the",
    "start": "703160",
    "end": "708959"
  },
  {
    "text": "development environment to simulate disruptions during the build process so next once you're comfortable you use the",
    "start": "708959",
    "end": "714399"
  },
  {
    "text": "staging environment to see how the system handles issues in a setting that mimics production and finally when you",
    "start": "714399",
    "end": "720320"
  },
  {
    "text": "are happy that um everything is pretty good we are using the same setup in production you can apply chos",
    "start": "720320",
    "end": "725440"
  },
  {
    "text": "Engineering in the production environment to uh ensure your system remains resilient now reliability isn't usually",
    "start": "725440",
    "end": "733000"
  },
  {
    "text": "a direct goal in security but it does impact the final product or service as",
    "start": "733000",
    "end": "738040"
  },
  {
    "text": "we address other challenges it is important to check that the systems known resilience remains intact and that",
    "start": "738040",
    "end": "744720"
  },
  {
    "text": "no new bugs are being introduced uh so make sure you're not inadvertently compromising reliability because you're",
    "start": "744720",
    "end": "751000"
  },
  {
    "text": "practicing chaos engineering so considering how much developer time is being spent uh you should see that if",
    "start": "751000",
    "end": "756920"
  },
  {
    "text": "fixing reliability issues is a thing you should do or you know introducing chaos engineering is something you should",
    "start": "756920",
    "end": "763560"
  },
  {
    "text": "do now these are certain uh processes or principles that we follow when we do",
    "start": "763560",
    "end": "768639"
  },
  {
    "text": "chaos engineering it is generally a methodical approach to enhance your systems resilience so there's like a few",
    "start": "768639",
    "end": "774519"
  },
  {
    "text": "processes that we should uh do in a step-wise manner so starting with first step being selecting the system that you",
    "start": "774519",
    "end": "780880"
  },
  {
    "text": "would want to Target first then you choose the fall to simulate your hypothesis U and hypothesis could be",
    "start": "780880",
    "end": "786800"
  },
  {
    "text": "anything that uh would sort of construct your chaos scenario so secondly the thirdly the chaos scenario that you",
    "start": "786800",
    "end": "793480"
  },
  {
    "text": "would run would have all the faults that you selected and when you're injecting the chaos you should uh lastly observe",
    "start": "793480",
    "end": "799519"
  },
  {
    "text": "the results to validate and improve your system uh and use those learnings uh after your chaos is",
    "start": "799519",
    "end": "805760"
  },
  {
    "text": "finished some of the existing solutions that are present today they often take a reactive approach which means they focus",
    "start": "805760",
    "end": "812000"
  },
  {
    "text": "on root cause analysis rather than you know proactive failure testing so it's always like something is happened and",
    "start": "812000",
    "end": "817519"
  },
  {
    "text": "now we'll find out how and why uh but they are not you know upfront they are not proactively doing a failure testing",
    "start": "817519",
    "end": "823560"
  },
  {
    "text": "they often lack Automation and are driven by op steam they are not really integrated into cicd which means you are",
    "start": "823560",
    "end": "829079"
  },
  {
    "text": "losing an automation uh and also there's no active practice of game days today so this result in missed opportunities for",
    "start": "829079",
    "end": "835560"
  },
  {
    "text": "early failure detection and system improvements so better approach that we suggest is to emphasize on the",
    "start": "835560",
    "end": "842240"
  },
  {
    "text": "collaboration through a centralized control plane for your chaos experiments and U offer robust and ready to use",
    "start": "842240",
    "end": "848600"
  },
  {
    "text": "experiments via either a public a private Hub or like a central repository where you can host a plethora of",
    "start": "848600",
    "end": "853920"
  },
  {
    "text": "multiple fults which you can pick and choose rather than going and creating itself creating them yourself uh also it",
    "start": "853920",
    "end": "859800"
  },
  {
    "text": "should integrate into your cicd system for Automation and provide observability with metrics to assess your impact so",
    "start": "859800",
    "end": "865880"
  },
  {
    "text": "this would help manage your slos and errors so we did discuss about some of the",
    "start": "865880",
    "end": "872040"
  },
  {
    "text": "solutions that are better but is it really the best solution when we are considering security uh we have to do a",
    "start": "872040",
    "end": "879160"
  },
  {
    "text": "bit more since it's security K engineering so we have to gain kernel level visibility which allows us to",
    "start": "879160",
    "end": "884480"
  },
  {
    "text": "detect sophisticated threats that traditional methods might miss um our off our approach offers comprehensive",
    "start": "884480",
    "end": "891759"
  },
  {
    "text": "security coverage it should address potential uh blind spots that exist in the chaos engineering framework today uh",
    "start": "891759",
    "end": "898079"
  },
  {
    "text": "and also with uh realtime threat detection it's easier that as in when the newer threats or attackers are",
    "start": "898079",
    "end": "903880"
  },
  {
    "text": "coming in we can respond more quickly to security incidents so we should have the",
    "start": "903880",
    "end": "909360"
  },
  {
    "text": "ability to create our own customized rules or U policies to ensure that uh certain security measures are taken and",
    "start": "909360",
    "end": "916519"
  },
  {
    "text": "no Bad actors can inject anything in your system so um today we we pick for you",
    "start": "916519",
    "end": "923399"
  },
  {
    "text": "two potential tools that you can use both of them are open source and both of",
    "start": "923399",
    "end": "928800"
  },
  {
    "text": "them R cncf projects the first one is Falco uh which is the cloud native security uh tools designed for L system",
    "start": "928800",
    "end": "936399"
  },
  {
    "text": "for containers kubernets and Cloud um and it's provide a real time detection",
    "start": "936399",
    "end": "941440"
  },
  {
    "text": "for for the threat based on the rotes that you define and the second one is",
    "start": "941440",
    "end": "946519"
  },
  {
    "text": "lmas chaos which is the open source uh Cloud native chaos engineering tool so it's a cncf incubating project as of now",
    "start": "946519",
    "end": "953759"
  },
  {
    "text": "and you can use it to simulate multiple faults and create your own V SDK and",
    "start": "953759",
    "end": "959040"
  },
  {
    "text": "then sort of simulate a hypothesis and chos scenario out of it so let's take a",
    "start": "959040",
    "end": "964160"
  },
  {
    "text": "look at uh the architecture of it on a brief overview and then we'll take a deeper dive into the individual uh chaos",
    "start": "964160",
    "end": "970800"
  },
  {
    "text": "injection how it happens so in the middle we have the chaos Center so there are two uh aspects there's a control",
    "start": "970800",
    "end": "977319"
  },
  {
    "text": "plane and there's an execution plane so in the control plane in the middle we have the chaos Center which hosts your different uh uh API authentication layer",
    "start": "977319",
    "end": "984759"
  },
  {
    "text": "the graph ql layer and your databases and on the execution layer we have the limus agents that are deployed we also",
    "start": "984759",
    "end": "991120"
  },
  {
    "text": "have certain crds that we use like the chaos operator and a few other crds which are essential to detect U your",
    "start": "991120",
    "end": "998000"
  },
  {
    "text": "target application uh where chaos should run and things like that and this is also essentially the part where your",
    "start": "998000",
    "end": "1003279"
  },
  {
    "text": "target application is resding so your it might be your name spaces your um demo application or things like that so if we",
    "start": "1003279",
    "end": "1009880"
  },
  {
    "text": "dive into the uh chaos injection architecture is broken down into three main crds the chaos engine crd the chaos",
    "start": "1009880",
    "end": "1016399"
  },
  {
    "text": "experiment CD and the chaos result CD so start let's start with this thing called chaos Hub so this is our Central",
    "start": "1016399",
    "end": "1022480"
  },
  {
    "text": "repository where all our faults are hosted so things like u b delete uh Network outage node drain any kind of",
    "start": "1022480",
    "end": "1029319"
  },
  {
    "text": "scenario or fault that you want to figure out is located in chaos Hub uh chaos experiment C is the one where it's",
    "start": "1029319",
    "end": "1035438"
  },
  {
    "text": "like a template a blueprint of what you want to do so it will host a structure of your U chaos injection so it will say",
    "start": "1035439",
    "end": "1042360"
  },
  {
    "text": "um how long do you want the chaos to run what parts do you want to Target things like that so chaos engine CR is the one",
    "start": "1042360",
    "end": "1047480"
  },
  {
    "text": "where you can tune these and once you tune it chaos operator sits at the middle and it sort of reconciles the",
    "start": "1047480",
    "end": "1053080"
  },
  {
    "text": "entire step and figures out that okay you want to Target this application is it even present in your cluster or maybe",
    "start": "1053080",
    "end": "1058919"
  },
  {
    "text": "it is present but do you have the correct permissions to execute chaos so it does all those activities via chaos",
    "start": "1058919",
    "end": "1064880"
  },
  {
    "text": "operator and then it spawns up something called chaos Runner and the chaos Runner spawns up multiple chaos jobs now these",
    "start": "1064880",
    "end": "1071080"
  },
  {
    "text": "chaos jobs are the ones that are responsible for injecting chaos in your system once it is finished our chaos",
    "start": "1071080",
    "end": "1076960"
  },
  {
    "text": "injection is finished it'll save it in another CR which is called chaos result CR and using this chaos result you can",
    "start": "1076960",
    "end": "1082960"
  },
  {
    "text": "then export the metrics to some observability tool that you use maybe open Telemetry New Relic or Prometheus",
    "start": "1082960",
    "end": "1090400"
  },
  {
    "text": "so you can use this metrics via chaos result and then you can use it with your own",
    "start": "1090400",
    "end": "1096840"
  },
  {
    "text": "tools okay on the other hand uh for the thread detection and response we be using Falco uh which is um um graduated",
    "start": "1096840",
    "end": "1105080"
  },
  {
    "text": "by cncf but back in um in February um we have like more than 50 million pools um",
    "start": "1105080",
    "end": "1112679"
  },
  {
    "text": "and it's main to detect um thread across kubernetes containers Hostess and and",
    "start": "1112679",
    "end": "1118200"
  },
  {
    "text": "Cloud environment so you have here the link to the project page and the link to the GitHub um of the",
    "start": "1118200",
    "end": "1124400"
  },
  {
    "text": "project so how it's working and the who so fu is is deployed as an agent so you",
    "start": "1124400",
    "end": "1130720"
  },
  {
    "text": "can um uh use it um um for as a Damon said or um as a d running with the Linux",
    "start": "1130720",
    "end": "1138240"
  },
  {
    "text": "system and there is two methods to run FAL either using the kernel model or using an ebpf probe and this ebpf probe",
    "start": "1138240",
    "end": "1145840"
  },
  {
    "text": "or kernel model will be scraping um the events from the Kel theing but there um",
    "start": "1145840",
    "end": "1152360"
  },
  {
    "text": "all the events will go there and based on that we'll be reading those events and it will go to the Falco State engine",
    "start": "1152360",
    "end": "1159640"
  },
  {
    "text": "when it'll be um analyzed and it be also uh pass it to see the different parts of",
    "start": "1159640",
    "end": "1165240"
  },
  {
    "text": "the the event um we arange the event with the different me data that we gather either from the container engine",
    "start": "1165240",
    "end": "1171880"
  },
  {
    "text": "the kubernetes engine or as well the cloud engine and the reason behind this when we raise an alert later we be able",
    "start": "1171880",
    "end": "1178440"
  },
  {
    "text": "to locate where the the failure is happening and also we have rule matching so you start defining the rules there",
    "start": "1178440",
    "end": "1184520"
  },
  {
    "text": "someone who's writing under etc for example um some requisit that you don't",
    "start": "1184520",
    "end": "1190039"
  },
  {
    "text": "want it to write there so you'll be um also doing DET me on different uh",
    "start": "1190039",
    "end": "1195600"
  },
  {
    "text": "strategies and finally uh when an event happen it will be raising a so Falco is",
    "start": "1195600",
    "end": "1202240"
  },
  {
    "text": "not just for system codes it's not just for containers uh but it has a plugable",
    "start": "1202240",
    "end": "1207480"
  },
  {
    "text": "system that you can use whatever the source of the logs or events is coming whatever is kubernets uh Cloud logs",
    "start": "1207480",
    "end": "1215080"
  },
  {
    "text": "GitHub maybe OCTA as well we be this state of of detection and we have Falco",
    "start": "1215080",
    "end": "1220240"
  },
  {
    "text": "side kick which is another extra project that will Define you as a kind of UI and",
    "start": "1220240",
    "end": "1225679"
  },
  {
    "text": "by the end um also you have to to send the event in different notification Channel whatever it's like maybe using a",
    "start": "1225679",
    "end": "1232799"
  },
  {
    "text": "seam like elastic shirt or if if it's higher priority you want to to notify someone by email so just keep in mind",
    "start": "1232799",
    "end": "1239600"
  },
  {
    "text": "it's not just containers um system codes today the the demo will be running with containers but you can apply the same",
    "start": "1239600",
    "end": "1246440"
  },
  {
    "text": "stuff with different um uh Cloud native ecosystems um yeah actually we can move",
    "start": "1246440",
    "end": "1253600"
  },
  {
    "text": "to the handon labs um we have the G repository um that we prepared for you we have the seource code there uh with",
    "start": "1253600",
    "end": "1260520"
  },
  {
    "text": "both the case engineering scenario uh plus the detection rules that we created",
    "start": "1260520",
    "end": "1265679"
  },
  {
    "text": "so you can um tested on your own after the conference um and we have also uh",
    "start": "1265679",
    "end": "1271720"
  },
  {
    "text": "prepared um a demo application for you it's quite funny called it potato demo",
    "start": "1271720",
    "end": "1277240"
  },
  {
    "text": "application and it's giving you like a nice smell like this with the 546",
    "start": "1277240",
    "end": "1282840"
  },
  {
    "text": "microservices the main one that is calling uh for microservices which is the left and",
    "start": "1282840",
    "end": "1288679"
  },
  {
    "text": "right arm the left and um the right leg and then the heart and we'll be using",
    "start": "1288679",
    "end": "1293840"
  },
  {
    "text": "this application to run the chaos um scenario and um see how how the",
    "start": "1293840",
    "end": "1299440"
  },
  {
    "text": "application is behaving and how we are able to detect um um um the Mis",
    "start": "1299440",
    "end": "1305159"
  },
  {
    "text": "configuration with with FCO so you have also the S code of the",
    "start": "1305159",
    "end": "1311080"
  },
  {
    "text": "application so this is um what we have done part of the of the lab um we deployed um Falco we deployed the lmus",
    "start": "1311080",
    "end": "1318720"
  },
  {
    "text": "case engineering uh Plus theato application uh then we'll be running the",
    "start": "1318720",
    "end": "1324039"
  },
  {
    "text": "case engineering and we'll be using Falco for for the security so it's straightforward",
    "start": "1324039",
    "end": "1331000"
  },
  {
    "text": "process sorry okay so the uh First Step would be",
    "start": "1332080",
    "end": "1339200"
  },
  {
    "text": "to install litmas which rafik already mentioned so once you have everything install we are going to run the Pod DNS",
    "start": "1339200",
    "end": "1345080"
  },
  {
    "text": "poof as the first fall and then monitor the application p so while the chos is running we'll see a spoof a DNS spoof",
    "start": "1345080",
    "end": "1351960"
  },
  {
    "text": "happening and then once the spoof is happened because FAL is running in our colel level so anything that it changes",
    "start": "1351960",
    "end": "1358840"
  },
  {
    "text": "as part of the chaos would be detected by Falco so if you take a look at the rule specifically would you want to",
    "start": "1358840",
    "end": "1365360"
  },
  {
    "text": "explain the rule yeah exactly so the rule if you can see a faler is coming with a rule name with a description uh",
    "start": "1365360",
    "end": "1371440"
  },
  {
    "text": "that's like for your team to be able to detect which kind of rule and then we have the condition and those condition",
    "start": "1371440",
    "end": "1377400"
  },
  {
    "text": "are the conditions where the rule should be um should be triggered uh you can see",
    "start": "1377400",
    "end": "1382760"
  },
  {
    "text": "here that we are saying if there is any change if if if it's a container and there is a change to/ Etc just resolve.",
    "start": "1382760",
    "end": "1390400"
  },
  {
    "text": "comom and make by a user calleded rout in this case I would like to to highlight that there is an access um",
    "start": "1390400",
    "end": "1397360"
  },
  {
    "text": "that is that is that is happening on my my file that is done by this specific user you can see that we are also",
    "start": "1397360",
    "end": "1403120"
  },
  {
    "text": "displaying the metadata and we can have different priority uh warning alert Etc",
    "start": "1403120",
    "end": "1408960"
  },
  {
    "text": "and then we can also have tags to to to locate the type of of the RO so the idea",
    "start": "1408960",
    "end": "1414480"
  },
  {
    "text": "here um that you can you can easily deploy these to one of your environment and and then test it",
    "start": "1414480",
    "end": "1421000"
  },
  {
    "text": "so okay so let's do a handson demo yeah we have the video demo within the",
    "start": "1421000",
    "end": "1426080"
  },
  {
    "text": "presentation but cheyan we we run it um live right now okay give me a minute so we have our",
    "start": "1426080",
    "end": "1433640"
  },
  {
    "text": "application could you uh please show the the repository before yeah oh yeah",
    "start": "1433640",
    "end": "1438960"
  },
  {
    "text": "sure see yeah third one so this is the uh GitHub repository that we already",
    "start": "1438960",
    "end": "1445720"
  },
  {
    "text": "have it's a part of the slide so and the slides are attached to the shed link as well so when you open the cubec con um",
    "start": "1445720",
    "end": "1451279"
  },
  {
    "text": "schedule you'll be able to see the slides through there as well you can go to this repository as uh also there's a",
    "start": "1451279",
    "end": "1456520"
  },
  {
    "text": "tiny URL for this and you'll see the Falco rules the individual HTTP and the DNS chos that we have prepared for the",
    "start": "1456520",
    "end": "1463200"
  },
  {
    "text": "the demo for and uh also the architecture for each of them so if you let's say for example open the DNS",
    "start": "1463200",
    "end": "1468440"
  },
  {
    "text": "scales you should be able to see the exact uh processes the inputs and the architecture for the individual uh demos",
    "start": "1468440",
    "end": "1475279"
  },
  {
    "text": "so if you want to do a deart dive you can do so as well cool so we have our uh lmus chos",
    "start": "1475279",
    "end": "1483159"
  },
  {
    "text": "deployed and we also have our Potato Head application deployed so before moving forward let me just give you uh a",
    "start": "1483159",
    "end": "1490200"
  },
  {
    "text": "service breakdown of potato head so as you can see sorry as you can",
    "start": "1490200",
    "end": "1497320"
  },
  {
    "text": "see we have all these different services and uh we are specifically going to",
    "start": "1497320",
    "end": "1502360"
  },
  {
    "text": "Target the left arm and we are going to spoof it to another service called left arm V2 now this is particularly",
    "start": "1502360",
    "end": "1507679"
  },
  {
    "text": "something we have deployed it doesn't have to be in this case this service could be anything that a bad actor is deploying so it could be something in",
    "start": "1507679",
    "end": "1513640"
  },
  {
    "text": "their cluster or something they have deployed in your cluster or like a malware which they can",
    "start": "1513640",
    "end": "1520520"
  },
  {
    "text": "inject into your system so this is something we want to spoof to or redirect to come back you can see see we have uh",
    "start": "1520520",
    "end": "1530320"
  },
  {
    "text": "this sport DNS proof fault so this fault came from chaos sub if you remember the chaos injection architecture so what",
    "start": "1530320",
    "end": "1536799"
  },
  {
    "text": "it's doing is it's targeting this app kind of deployment targeting the demo name space where my Potato Head application is deciding and the app",
    "start": "1536799",
    "end": "1543320"
  },
  {
    "text": "label uh to narrow down the search is name equal to potato mean now this tune fall is what I uh talked about the chaos",
    "start": "1543320",
    "end": "1549880"
  },
  {
    "text": "engine crd so this is where you're tuning the different aspects of your fault uh and in this case there are some",
    "start": "1549880",
    "end": "1555120"
  },
  {
    "text": "default values what is of importance is this guy called spoof map so what spoof map is doing it's basically taking an",
    "start": "1555120",
    "end": "1562320"
  },
  {
    "text": "input of which service you want to give us an input and which service you want it to spoof so in this case we are",
    "start": "1562320",
    "end": "1567640"
  },
  {
    "text": "spoofing potato left arm to potato left arm version two so this version two this is because we're doing a demo we are",
    "start": "1567640",
    "end": "1573559"
  },
  {
    "text": "putting a safe image but just imagine if this wasn't a safe image and an attacker gets access by doing a DNS wof so this",
    "start": "1573559",
    "end": "1580880"
  },
  {
    "text": "is the only change we're doing there's nothing uh extra there are just few parameters like the duration and all and",
    "start": "1580880",
    "end": "1586039"
  },
  {
    "text": "for probes we are just adding a basic probe which is an HTTP probe checking if the potato health application is uh",
    "start": "1586039",
    "end": "1592240"
  },
  {
    "text": "healthy or not so that's it we will just go ahead save this and",
    "start": "1592240",
    "end": "1597559"
  },
  {
    "text": "run so while we run uh we the application first installs your chaos fults and then it moves into the actual",
    "start": "1597559",
    "end": "1604919"
  },
  {
    "text": "chaos execution so what we should see once the chaos injection starts is uh",
    "start": "1604919",
    "end": "1610559"
  },
  {
    "text": "Let me refresh so you see the hand these are",
    "start": "1610559",
    "end": "1616559"
  },
  {
    "text": "different Services by the way the had the hand and the left leg the right leg so because the hand is using a different",
    "start": "1616559",
    "end": "1621880"
  },
  {
    "text": "image right now so it's U taking the value from that image from that service but once it's poofed it should take the",
    "start": "1621880",
    "end": "1628720"
  },
  {
    "text": "value or take the entire U image uh from the other the version to image so once chaos is injected we'll see this hand go",
    "start": "1628720",
    "end": "1634640"
  },
  {
    "text": "up or your data or your application being spoofed so if I come back uh we'll",
    "start": "1634640",
    "end": "1640320"
  },
  {
    "text": "see the logs that the application is installed let's wait for a few minutes it'll switch to",
    "start": "1640320",
    "end": "1646760"
  },
  {
    "text": "the DNS poof it'll so internally how it works is we have a",
    "start": "1646760",
    "end": "1652559"
  },
  {
    "text": "DNS Interceptor so what it does is change the name server uh so that that's why it writes to the HC resolve. conon",
    "start": "1652559",
    "end": "1659120"
  },
  {
    "text": "and that is also the Falco rule we are detecting or we are you know kept in the bottom so that it can detect that so",
    "start": "1659120",
    "end": "1664919"
  },
  {
    "text": "it's starting execution we'll go back we'll refresh and we should see the hand",
    "start": "1664919",
    "end": "1671159"
  },
  {
    "text": "getting spoofed a minute once the yeah here you",
    "start": "1671159",
    "end": "1676360"
  },
  {
    "text": "go so one of the services that was targeted did change you can see there's some network issues which is why this",
    "start": "1676360",
    "end": "1682519"
  },
  {
    "text": "main body isn't showing up but yeah these are different services so you can get you get the point uh so the hand the",
    "start": "1682519",
    "end": "1687960"
  },
  {
    "text": "left arm is being spoofed to the other version which is the arm V2 so that was a part of the chaos injection now since",
    "start": "1687960",
    "end": "1695279"
  },
  {
    "text": "we already also have Falco installed so Falco is also supposed to detect the same so if we go back to the terminal",
    "start": "1695279",
    "end": "1701399"
  },
  {
    "text": "and we check for the Falco rule let's do",
    "start": "1701399",
    "end": "1708039"
  },
  {
    "text": "logs so we are checking um for the uh specific Falco Rule and grapping for any",
    "start": "1709559",
    "end": "1716360"
  },
  {
    "text": "warnings that might have come if we do that we'll see that it would detect the",
    "start": "1716360",
    "end": "1722320"
  },
  {
    "text": "access to Etc resolve. and you can see there's a warning and we have specifically added a",
    "start": "1722320",
    "end": "1728600"
  },
  {
    "text": "label called cubec con so that it's easier for you to see and it says access to EDC resolve. detected by the root",
    "start": "1728600",
    "end": "1734519"
  },
  {
    "text": "user which is us so yeah there you go FAL is actually detect it and this is an underlying layer uh which you should uh",
    "start": "1734519",
    "end": "1742000"
  },
  {
    "text": "consider uh keeping because there could be Corner level modifications easily done by a bad",
    "start": "1742000",
    "end": "1747360"
  },
  {
    "text": "actor so let's jump back to the",
    "start": "1747360",
    "end": "1751519"
  },
  {
    "text": "slides okay",
    "start": "1762039",
    "end": "1766039"
  },
  {
    "text": "second yeah we have prepared as well a second scenario here um that you can try",
    "start": "1777440",
    "end": "1782559"
  },
  {
    "text": "uh by yourself uh we put the demo as well part of of the slides which is trying to modify HTTP heater in a kuet",
    "start": "1782559",
    "end": "1790159"
  },
  {
    "text": "SP and um and and detected by F it's the same way we have the HTTP um heater",
    "start": "1790159",
    "end": "1797000"
  },
  {
    "text": "modifier for that is coming with lmos uh we run the reques against the the web application and then we'll be monitoring",
    "start": "1797000",
    "end": "1804440"
  },
  {
    "text": "the application and using FAL to detect any un normal activity this is can be very useful in web application when we",
    "start": "1804440",
    "end": "1810440"
  },
  {
    "text": "would like to make sure that if anything happen on the request and someone like playe with redetect or location will be",
    "start": "1810440",
    "end": "1816679"
  },
  {
    "text": "able easily to detect those stuff um the rule is yeah actually",
    "start": "1816679",
    "end": "1822240"
  },
  {
    "text": "because we are testing the rules we are trying to uh to to write the file and then we are trying to find if there is",
    "start": "1822240",
    "end": "1828159"
  },
  {
    "text": "any any direction using the custom HTTP heers um that we have been um we have",
    "start": "1828159",
    "end": "1834399"
  },
  {
    "text": "been implemented um you have the video here um I think we don't have enough",
    "start": "1834399",
    "end": "1839519"
  },
  {
    "text": "time to run so we can yeah we can skip this one but you have the video part of the presentation that we share",
    "start": "1839519",
    "end": "1846919"
  },
  {
    "text": "later and let's go hey so for the next level yeah yeah so if you want to take",
    "start": "1846919",
    "end": "1853120"
  },
  {
    "text": "this to the next level you should try implementing something like red teaming where you specifically make mimic one of",
    "start": "1853120",
    "end": "1858639"
  },
  {
    "text": "your um targeted chaos injection or you target a specific service and you mimic",
    "start": "1858639",
    "end": "1864000"
  },
  {
    "text": "the same uh we also want to introduce uh collaboration in this so there's not just U you or you know a small team",
    "start": "1864000",
    "end": "1871000"
  },
  {
    "text": "doing it so there should be cross functional collaboration and you should enhance your automation not just using",
    "start": "1871000",
    "end": "1876159"
  },
  {
    "text": "um pipelines but also introducing stuff like Geth ups and uh you should continuously introduce a feedback loop",
    "start": "1876159",
    "end": "1881639"
  },
  {
    "text": "so as to not being stuck by running it once or twice and then just forgetting about it so this should be like a",
    "start": "1881639",
    "end": "1887120"
  },
  {
    "text": "continuous process introduced via feedback loop and yes um yeah the",
    "start": "1887120",
    "end": "1893600"
  },
  {
    "text": "takeaways from um today um cause you need to keep in mind that the cloud native um system exceed traditional",
    "start": "1893600",
    "end": "1900960"
  },
  {
    "text": "security patterns so you need to keep the same race or the same um Pace as as",
    "start": "1900960",
    "end": "1907200"
  },
  {
    "text": "as as those that they are trying to to hug into your system um you need to know as well that cyber criminals they are",
    "start": "1907200",
    "end": "1913279"
  },
  {
    "text": "using the same automation tool that you are using to automate your Cloud so um they are they going with the same speed",
    "start": "1913279",
    "end": "1918919"
  },
  {
    "text": "as you uh we learn how we can um um introduce some CH engineering to apply a",
    "start": "1918919",
    "end": "1924960"
  },
  {
    "text": "zero trust um uh Network strategy and um yeah we discover some VAB we discover",
    "start": "1924960",
    "end": "1932480"
  },
  {
    "text": "vulnerabilities that you can in like check with chaos experiment so once you do this you can use your chaos results",
    "start": "1932480",
    "end": "1939039"
  },
  {
    "text": "to discover certain vulnerabilities and you enhance the detection and response capabilities once you start implementing",
    "start": "1939039",
    "end": "1945039"
  },
  {
    "text": "a process like chos engineering and then of course you gain actionable zero trust strategies once you do it so doesn't",
    "start": "1945039",
    "end": "1951039"
  },
  {
    "text": "always have to be zero trust from the beginning but you can simulate something uh like a zero trust environment once you move into the practice of chaos",
    "start": "1951039",
    "end": "1959159"
  },
  {
    "text": "engineering so to talk about some of the things uh in the future our future scope",
    "start": "1959399",
    "end": "1965120"
  },
  {
    "text": "we want to in introduce like increased support for chaos against nons infrastructure so what we saw today was",
    "start": "1965120",
    "end": "1971519"
  },
  {
    "text": "a specific kubernetes uh infrastructural chaos but we want to introduce support for more uh we want more application",
    "start": "1971519",
    "end": "1978720"
  },
  {
    "text": "specific care so things like Cassandra or things like you know or something where you target a database or",
    "start": "1978720",
    "end": "1984480"
  },
  {
    "text": "a specific application directly uh we want to improve the chaos SDK which is used currently to create your user",
    "start": "1984480",
    "end": "1990799"
  },
  {
    "text": "defined experiments and also add more and more probe types to support U you know diverse steady state hypothesis",
    "start": "1990799",
    "end": "1997600"
  },
  {
    "text": "yeah in addition to that we can think about adding uh more case type uh to the",
    "start": "1997600",
    "end": "2002880"
  },
  {
    "text": "to the platform uh we also put here uh both the Falco training um and the lmos",
    "start": "2002880",
    "end": "2008440"
  },
  {
    "text": "training um tutorials that you have both on the on the website so if someone wanted to to start playing with uh",
    "start": "2008440",
    "end": "2015880"
  },
  {
    "text": "within the example that we provided uh during uh the demo that will be a very good start for",
    "start": "2015880",
    "end": "2021760"
  },
  {
    "text": "you I think that's all from us today and thank you very much for being here thank",
    "start": "2021760",
    "end": "2027320"
  },
  {
    "text": "you so much",
    "start": "2027320",
    "end": "2030638"
  }
]