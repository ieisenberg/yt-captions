[
  {
    "start": "0",
    "end": "61000"
  },
  {
    "text": "so hey everyone my name is mihai and uh",
    "start": "320",
    "end": "2800"
  },
  {
    "text": "together with muru unfortunately can't",
    "start": "2800",
    "end": "5040"
  },
  {
    "text": "be here today i'm going to be talking to",
    "start": "5040",
    "end": "6960"
  },
  {
    "text": "you about data process scale with",
    "start": "6960",
    "end": "9040"
  },
  {
    "text": "k-native inventors",
    "start": "9040",
    "end": "12000"
  },
  {
    "text": "so a bit about us i'm a principal",
    "start": "12000",
    "end": "14240"
  },
  {
    "text": "software engineer at optum and i work on",
    "start": "14240",
    "end": "16320"
  },
  {
    "text": "data streaming and i'm also a bentley's",
    "start": "16320",
    "end": "18480"
  },
  {
    "text": "contributor",
    "start": "18480",
    "end": "19760"
  },
  {
    "text": "and muro is a staff software engineer at",
    "start": "19760",
    "end": "21840"
  },
  {
    "text": "box and he works on container platforms",
    "start": "21840",
    "end": "24720"
  },
  {
    "text": "uh he's an open source contributor and",
    "start": "24720",
    "end": "26960"
  },
  {
    "text": "he's also part of the creative steering",
    "start": "26960",
    "end": "28560"
  },
  {
    "text": "committee member representing end users",
    "start": "28560",
    "end": "33039"
  },
  {
    "text": "and for today we're going to cover",
    "start": "33440",
    "end": "35040"
  },
  {
    "text": "canadian auto scaling how that works",
    "start": "35040",
    "end": "38000"
  },
  {
    "text": "bentos itself and why it's useful and",
    "start": "38000",
    "end": "40800"
  },
  {
    "text": "how you can use it",
    "start": "40800",
    "end": "42480"
  },
  {
    "text": "how to combine benthos and k native and",
    "start": "42480",
    "end": "45039"
  },
  {
    "text": "what are the benefits",
    "start": "45039",
    "end": "46719"
  },
  {
    "text": "and i'll do a demo on sentiment analysis",
    "start": "46719",
    "end": "49440"
  },
  {
    "text": "on twitter data using these two",
    "start": "49440",
    "end": "50960"
  },
  {
    "text": "components in mix",
    "start": "50960",
    "end": "54079"
  },
  {
    "text": "and now i have to play a video from muru",
    "start": "54399",
    "end": "56239"
  },
  {
    "text": "who like i said unfortunately can't be",
    "start": "56239",
    "end": "57920"
  },
  {
    "text": "here and he'll cover the first part on",
    "start": "57920",
    "end": "60000"
  },
  {
    "text": "ktv auto scaling",
    "start": "60000",
    "end": "62000"
  },
  {
    "text": "and then we're going to be talking about",
    "start": "62000",
    "end": "63760"
  },
  {
    "text": "my favorite feature in canada",
    "start": "63760",
    "end": "65840"
  },
  {
    "text": "which is the k native port auto scaling",
    "start": "65840",
    "end": "67920"
  },
  {
    "text": "yeah the other favorite feature of main",
    "start": "67920",
    "end": "70240"
  },
  {
    "text": "is the developer experience that you get",
    "start": "70240",
    "end": "72159"
  },
  {
    "text": "out of k native",
    "start": "72159",
    "end": "73439"
  },
  {
    "text": "uh what i mean by developer experience",
    "start": "73439",
    "end": "75040"
  },
  {
    "text": "is like uh",
    "start": "75040",
    "end": "77200"
  },
  {
    "text": "you create one creative search and that",
    "start": "77200",
    "end": "78960"
  },
  {
    "text": "creates all the deployment k native",
    "start": "78960",
    "end": "80960"
  },
  {
    "text": "sorry kubernetes artifacts for you",
    "start": "80960",
    "end": "83439"
  },
  {
    "text": "apart from that you also get auto tls",
    "start": "83439",
    "end": "85680"
  },
  {
    "text": "and the custom domain things like that",
    "start": "85680",
    "end": "87920"
  },
  {
    "text": "so about k native auto scaling",
    "start": "87920",
    "end": "91280"
  },
  {
    "text": "um how does canada provide this auto",
    "start": "91280",
    "end": "93680"
  },
  {
    "text": "scaling for you",
    "start": "93680",
    "end": "94880"
  },
  {
    "text": "there are two metrics",
    "start": "94880",
    "end": "96479"
  },
  {
    "text": "that",
    "start": "96479",
    "end": "97600"
  },
  {
    "text": "it could use one is concurrency number",
    "start": "97600",
    "end": "99680"
  },
  {
    "text": "of concurrent request your application",
    "start": "99680",
    "end": "101119"
  },
  {
    "text": "receives or number of requests per",
    "start": "101119",
    "end": "102720"
  },
  {
    "text": "second the default one is concurrency",
    "start": "102720",
    "end": "105439"
  },
  {
    "text": "and the default value is 100. for",
    "start": "105439",
    "end": "108159"
  },
  {
    "text": "example you create a canadian service",
    "start": "108159",
    "end": "109600"
  },
  {
    "text": "without changing any default values and",
    "start": "109600",
    "end": "111840"
  },
  {
    "text": "you send in like 150 request your",
    "start": "111840",
    "end": "113840"
  },
  {
    "text": "application",
    "start": "113840",
    "end": "114880"
  },
  {
    "text": "you should have two parts of location",
    "start": "114880",
    "end": "116479"
  },
  {
    "text": "running",
    "start": "116479",
    "end": "117520"
  },
  {
    "text": "and this could be changed based on your",
    "start": "117520",
    "end": "119040"
  },
  {
    "text": "needs it could be either concurrency or",
    "start": "119040",
    "end": "120560"
  },
  {
    "text": "request per second and you can change",
    "start": "120560",
    "end": "122000"
  },
  {
    "text": "this value around and if you see who is",
    "start": "122000",
    "end": "123840"
  },
  {
    "text": "sending these requests to you it could",
    "start": "123840",
    "end": "125200"
  },
  {
    "text": "be end users like millions of end users",
    "start": "125200",
    "end": "127360"
  },
  {
    "text": "accessing our application",
    "start": "127360",
    "end": "128959"
  },
  {
    "text": "or it could be uh",
    "start": "128959",
    "end": "130959"
  },
  {
    "text": "an application calling your apis or it",
    "start": "130959",
    "end": "133520"
  },
  {
    "text": "could be you could be leveraging k",
    "start": "133520",
    "end": "134800"
  },
  {
    "text": "native event",
    "start": "134800",
    "end": "136000"
  },
  {
    "text": "and which could source data from",
    "start": "136000",
    "end": "137280"
  },
  {
    "text": "multiple event sources and send it out",
    "start": "137280",
    "end": "138800"
  },
  {
    "text": "to your application since this",
    "start": "138800",
    "end": "141120"
  },
  {
    "text": "isn't pushing the request to the kinetic",
    "start": "141120",
    "end": "143120"
  },
  {
    "text": "service we call this like push-based",
    "start": "143120",
    "end": "144720"
  },
  {
    "text": "auto scheme",
    "start": "144720",
    "end": "147280"
  },
  {
    "text": "um there is another set of use cases",
    "start": "147280",
    "end": "150480"
  },
  {
    "text": "like batch use cases like the data which",
    "start": "150480",
    "end": "153360"
  },
  {
    "text": "is in database or csv can we use k",
    "start": "153360",
    "end": "155280"
  },
  {
    "text": "native uh or auto scaling to speed up",
    "start": "155280",
    "end": "157519"
  },
  {
    "text": "the process",
    "start": "157519",
    "end": "158720"
  },
  {
    "text": "yes you could but you have to develop a",
    "start": "158720",
    "end": "161360"
  },
  {
    "text": "component which is like for each use",
    "start": "161360",
    "end": "163120"
  },
  {
    "text": "case",
    "start": "163120",
    "end": "164000"
  },
  {
    "text": "which uh takes the data from pulls it",
    "start": "164000",
    "end": "166160"
  },
  {
    "text": "from our database and send it over to",
    "start": "166160",
    "end": "168640"
  },
  {
    "text": "the k native service",
    "start": "168640",
    "end": "170640"
  },
  {
    "text": "and since it pulls the data we call it",
    "start": "170640",
    "end": "172400"
  },
  {
    "text": "like full-based auto scaling and what i",
    "start": "172400",
    "end": "174319"
  },
  {
    "text": "mean by like a special component or a",
    "start": "174319",
    "end": "175920"
  },
  {
    "text": "bespoke component is like suppose if you",
    "start": "175920",
    "end": "178000"
  },
  {
    "text": "want to source data from a csv you need",
    "start": "178000",
    "end": "180080"
  },
  {
    "text": "to develop a component which can source",
    "start": "180080",
    "end": "181599"
  },
  {
    "text": "it from csv like let's say",
    "start": "181599",
    "end": "183440"
  },
  {
    "text": "you want to process like hundred",
    "start": "183440",
    "end": "184480"
  },
  {
    "text": "thousand records it has to take it and",
    "start": "184480",
    "end": "186560"
  },
  {
    "text": "then it has your chunk it it has to",
    "start": "186560",
    "end": "188000"
  },
  {
    "text": "parallelly call your canadian servers",
    "start": "188000",
    "end": "189440"
  },
  {
    "text": "like maybe 100 question parallel with 10",
    "start": "189440",
    "end": "191680"
  },
  {
    "text": "records per request to get the",
    "start": "191680",
    "end": "193920"
  },
  {
    "text": "uh",
    "start": "193920",
    "end": "194640"
  },
  {
    "text": "auto scaling and the process to be done",
    "start": "194640",
    "end": "196959"
  },
  {
    "text": "quickly wouldn't it be nice if there was",
    "start": "196959",
    "end": "199519"
  },
  {
    "text": "a component which could integrate with",
    "start": "199519",
    "end": "201599"
  },
  {
    "text": "multiple data sources and it's just",
    "start": "201599",
    "end": "203519"
  },
  {
    "text": "configurable and it could also integrate",
    "start": "203519",
    "end": "205840"
  },
  {
    "text": "with multiple things we don't even need",
    "start": "205840",
    "end": "207280"
  },
  {
    "text": "multiple things we just need like http",
    "start": "207280",
    "end": "209360"
  },
  {
    "text": "grpcc to send the data over and it is",
    "start": "209360",
    "end": "212080"
  },
  {
    "text": "scalable based on",
    "start": "212080",
    "end": "215440"
  },
  {
    "text": "the load and is it is resilient to",
    "start": "215440",
    "end": "218400"
  },
  {
    "text": "failures if there's any failure during",
    "start": "218400",
    "end": "220480"
  },
  {
    "text": "the whole processing it's able to catch",
    "start": "220480",
    "end": "222159"
  },
  {
    "text": "up",
    "start": "222159",
    "end": "222879"
  },
  {
    "text": "and last but not the least observable",
    "start": "222879",
    "end": "225599"
  },
  {
    "text": "we should be able to observe the whole",
    "start": "225599",
    "end": "227120"
  },
  {
    "text": "process",
    "start": "227120",
    "end": "228319"
  },
  {
    "text": "um to talk about this component uh",
    "start": "228319",
    "end": "232480"
  },
  {
    "text": "i'm going to hand it over to my",
    "start": "232480",
    "end": "233760"
  },
  {
    "text": "co-presenter me here",
    "start": "233760",
    "end": "236879"
  },
  {
    "text": "thank you all over you may",
    "start": "236879",
    "end": "240000"
  },
  {
    "start": "239000",
    "end": "439000"
  },
  {
    "text": "yeah so that was uh moru's part and",
    "start": "240000",
    "end": "243040"
  },
  {
    "text": "thank you for listening to that and",
    "start": "243040",
    "end": "244319"
  },
  {
    "text": "sorry we had a bit of technical",
    "start": "244319",
    "end": "245519"
  },
  {
    "text": "difficulties",
    "start": "245519",
    "end": "247120"
  },
  {
    "text": "um",
    "start": "247120",
    "end": "248640"
  },
  {
    "text": "so let me go to the next part of the",
    "start": "248640",
    "end": "250879"
  },
  {
    "text": "talk",
    "start": "250879",
    "end": "252480"
  },
  {
    "text": "and i'm going to go into benthos here",
    "start": "252480",
    "end": "256639"
  },
  {
    "text": "so what is benthus and as ashley jeff's",
    "start": "256880",
    "end": "260079"
  },
  {
    "text": "the bentley's creator likes to describe",
    "start": "260079",
    "end": "261759"
  },
  {
    "text": "it it's fancy stream processing made",
    "start": "261759",
    "end": "264240"
  },
  {
    "text": "operationally mundane and what he means",
    "start": "264240",
    "end": "266560"
  },
  {
    "text": "by this is that bentos is a very simple",
    "start": "266560",
    "end": "268800"
  },
  {
    "text": "thing it's a single static binary",
    "start": "268800",
    "end": "271280"
  },
  {
    "text": "um",
    "start": "271280",
    "end": "272080"
  },
  {
    "text": "it supports many sources and many things",
    "start": "272080",
    "end": "274800"
  },
  {
    "text": "like real time batch file storage etc",
    "start": "274800",
    "end": "278639"
  },
  {
    "text": "um",
    "start": "278639",
    "end": "279600"
  },
  {
    "text": "and you have a configuration for it and",
    "start": "279600",
    "end": "281520"
  },
  {
    "text": "in the configuration you specify your",
    "start": "281520",
    "end": "283440"
  },
  {
    "text": "sources your syncs",
    "start": "283440",
    "end": "285120"
  },
  {
    "text": "and then various operations that have to",
    "start": "285120",
    "end": "287759"
  },
  {
    "text": "happen on the messages as they are in",
    "start": "287759",
    "end": "289360"
  },
  {
    "text": "flight from a source to a sync",
    "start": "289360",
    "end": "291680"
  },
  {
    "text": "and what kind of operations do i mean",
    "start": "291680",
    "end": "293520"
  },
  {
    "text": "well you can do transformations like",
    "start": "293520",
    "end": "295680"
  },
  {
    "text": "imagine a schema migration for various",
    "start": "295680",
    "end": "297680"
  },
  {
    "text": "messages",
    "start": "297680",
    "end": "298800"
  },
  {
    "text": "um filtering like if you want to drop",
    "start": "298800",
    "end": "300880"
  },
  {
    "text": "some messages you don't care about you",
    "start": "300880",
    "end": "302479"
  },
  {
    "text": "can just",
    "start": "302479",
    "end": "303840"
  },
  {
    "text": "uh do that",
    "start": "303840",
    "end": "305440"
  },
  {
    "text": "or hydration if you want to um",
    "start": "305440",
    "end": "308800"
  },
  {
    "text": "certain fields in the messages need to",
    "start": "308800",
    "end": "310479"
  },
  {
    "text": "be adjusted somehow and hydrated",
    "start": "310479",
    "end": "314320"
  },
  {
    "text": "or enhanced",
    "start": "314320",
    "end": "315759"
  },
  {
    "text": "enrichments if you want to like for",
    "start": "315759",
    "end": "317440"
  },
  {
    "text": "example get data from some other source",
    "start": "317440",
    "end": "320240"
  },
  {
    "text": "and put it in the original message and",
    "start": "320240",
    "end": "322080"
  },
  {
    "text": "enhance it and then send it to the",
    "start": "322080",
    "end": "323280"
  },
  {
    "text": "output",
    "start": "323280",
    "end": "325680"
  },
  {
    "text": "and why bentos well as you probably",
    "start": "325680",
    "end": "327680"
  },
  {
    "text": "guessed by now it's written in go",
    "start": "327680",
    "end": "329120"
  },
  {
    "text": "there's the go go for here",
    "start": "329120",
    "end": "330960"
  },
  {
    "text": "it's performant and simple so you know",
    "start": "330960",
    "end": "333520"
  },
  {
    "text": "very good at this kind of small",
    "start": "333520",
    "end": "335520"
  },
  {
    "text": "workflows where you launch it as a",
    "start": "335520",
    "end": "336960"
  },
  {
    "text": "lambda and it does the thing",
    "start": "336960",
    "end": "339600"
  },
  {
    "text": "it supports yaml and qe configs well q",
    "start": "339600",
    "end": "342400"
  },
  {
    "text": "is kind of a recent addition which is",
    "start": "342400",
    "end": "344080"
  },
  {
    "text": "used to drag the yaml config for bentos",
    "start": "344080",
    "end": "347680"
  },
  {
    "text": "it's stateless so it doesn't store any",
    "start": "347680",
    "end": "350000"
  },
  {
    "text": "state locally about the messages that",
    "start": "350000",
    "end": "352080"
  },
  {
    "text": "are inside",
    "start": "352080",
    "end": "353440"
  },
  {
    "text": "uh",
    "start": "353440",
    "end": "354639"
  },
  {
    "text": "in flight in ventus",
    "start": "354639",
    "end": "356720"
  },
  {
    "text": "you can however configure a cache for it",
    "start": "356720",
    "end": "358800"
  },
  {
    "text": "so for example if you want to",
    "start": "358800",
    "end": "360880"
  },
  {
    "text": "um",
    "start": "360880",
    "end": "361840"
  },
  {
    "text": "have something like an improcess cache",
    "start": "361840",
    "end": "363919"
  },
  {
    "text": "or external cache you can do that",
    "start": "363919",
    "end": "366479"
  },
  {
    "text": "and it's extendable so as i said it's",
    "start": "366479",
    "end": "368000"
  },
  {
    "text": "written in go you can import it as a",
    "start": "368000",
    "end": "369520"
  },
  {
    "text": "library create a custom bentos binary",
    "start": "369520",
    "end": "372240"
  },
  {
    "text": "with your own additions and have that as",
    "start": "372240",
    "end": "374639"
  },
  {
    "text": "a custom functionality",
    "start": "374639",
    "end": "377919"
  },
  {
    "text": "so let's combine them uh we can take",
    "start": "378319",
    "end": "380479"
  },
  {
    "text": "ventus we can take k native serving put",
    "start": "380479",
    "end": "383280"
  },
  {
    "text": "them together and see how this thing",
    "start": "383280",
    "end": "385280"
  },
  {
    "text": "works and how you can get k native to",
    "start": "385280",
    "end": "387440"
  },
  {
    "text": "the total scaling for it and",
    "start": "387440",
    "end": "390479"
  },
  {
    "text": "do whatever you want for your pool based",
    "start": "390479",
    "end": "392800"
  },
  {
    "text": "auto scaling model that moore was",
    "start": "392800",
    "end": "394560"
  },
  {
    "text": "introducing back then back in the video",
    "start": "394560",
    "end": "398720"
  },
  {
    "text": "and for the demo that i'm presenting",
    "start": "398960",
    "end": "400720"
  },
  {
    "text": "here um i'm going to have a local",
    "start": "400720",
    "end": "402960"
  },
  {
    "text": "kubernetes cluster which is going to be",
    "start": "402960",
    "end": "404479"
  },
  {
    "text": "kind basically and it's going to run k",
    "start": "404479",
    "end": "406800"
  },
  {
    "text": "native serving and canadian serving is",
    "start": "406800",
    "end": "409360"
  },
  {
    "text": "going to auto scale this sentiment",
    "start": "409360",
    "end": "410720"
  },
  {
    "text": "analysis lambda which i'm going to show",
    "start": "410720",
    "end": "413039"
  },
  {
    "text": "in a minute",
    "start": "413039",
    "end": "414639"
  },
  {
    "text": "and bentos is going to run here on the",
    "start": "414639",
    "end": "416319"
  },
  {
    "text": "side as a separate process and there's",
    "start": "416319",
    "end": "418319"
  },
  {
    "text": "going to be a database in my case i just",
    "start": "418319",
    "end": "420080"
  },
  {
    "text": "have a postgres locally running",
    "start": "420080",
    "end": "422479"
  },
  {
    "text": "and there's a source and sync table and",
    "start": "422479",
    "end": "425039"
  },
  {
    "text": "bentos is going to read data from the",
    "start": "425039",
    "end": "426720"
  },
  {
    "text": "source",
    "start": "426720",
    "end": "427680"
  },
  {
    "text": "batch load it",
    "start": "427680",
    "end": "429039"
  },
  {
    "text": "and then it's going to construct this",
    "start": "429039",
    "end": "430400"
  },
  {
    "text": "batches that it's going to send for",
    "start": "430400",
    "end": "432080"
  },
  {
    "text": "processing for the sentimental isis app",
    "start": "432080",
    "end": "434800"
  },
  {
    "text": "and then it's going to batch store in",
    "start": "434800",
    "end": "436639"
  },
  {
    "text": "the sync the data that it gets",
    "start": "436639",
    "end": "440240"
  },
  {
    "start": "439000",
    "end": "875000"
  },
  {
    "text": "and having said that i'm going to go",
    "start": "440800",
    "end": "442479"
  },
  {
    "text": "into the demo and please bear with me",
    "start": "442479",
    "end": "444319"
  },
  {
    "text": "because this is going to be kind of",
    "start": "444319",
    "end": "445440"
  },
  {
    "text": "complex and i hope i",
    "start": "445440",
    "end": "447520"
  },
  {
    "text": "it won't blow up on me",
    "start": "447520",
    "end": "451479"
  },
  {
    "text": "right",
    "start": "452960",
    "end": "455360"
  },
  {
    "text": "so i have a pretty long readme here and",
    "start": "456560",
    "end": "458240"
  },
  {
    "text": "i'm gonna try to go through it and",
    "start": "458240",
    "end": "459759"
  },
  {
    "text": "hopefully everything is gonna work what",
    "start": "459759",
    "end": "461919"
  },
  {
    "text": "i did do in advance is i i did deploy",
    "start": "461919",
    "end": "464639"
  },
  {
    "text": "the k native serving cluster and kind so",
    "start": "464639",
    "end": "468000"
  },
  {
    "text": "everything there should be already",
    "start": "468000",
    "end": "469520"
  },
  {
    "text": "running let's just go through that oops",
    "start": "469520",
    "end": "473520"
  },
  {
    "text": "hopefully it's gonna work so yeah we",
    "start": "476479",
    "end": "478160"
  },
  {
    "text": "have creative serving running here and",
    "start": "478160",
    "end": "479919"
  },
  {
    "text": "all the um",
    "start": "479919",
    "end": "481599"
  },
  {
    "text": "uh kind stuff running in there and i'm",
    "start": "481599",
    "end": "484960"
  },
  {
    "text": "just gonna launch here um",
    "start": "484960",
    "end": "486500"
  },
  {
    "text": "[Music]",
    "start": "486500",
    "end": "487680"
  },
  {
    "text": "a watch on my pods so i can see things",
    "start": "487680",
    "end": "489840"
  },
  {
    "text": "coming up so there's no pods yet in here",
    "start": "489840",
    "end": "494160"
  },
  {
    "text": "so what i want to do now is create my",
    "start": "494160",
    "end": "495919"
  },
  {
    "text": "lambda and by the way this is probably a",
    "start": "495919",
    "end": "497599"
  },
  {
    "text": "good time to mention that my lambda is",
    "start": "497599",
    "end": "499599"
  },
  {
    "text": "actually a bentos the custom vent",
    "start": "499599",
    "end": "501280"
  },
  {
    "text": "assistance which imports sentiment",
    "start": "501280",
    "end": "503280"
  },
  {
    "text": "analysis library",
    "start": "503280",
    "end": "506479"
  },
  {
    "text": "and to show you what i mean um",
    "start": "506479",
    "end": "509440"
  },
  {
    "text": "there's this deploy bentos vader script",
    "start": "509440",
    "end": "512000"
  },
  {
    "text": "here which basically has inside it a",
    "start": "512000",
    "end": "514959"
  },
  {
    "text": "pretty boring native configuration with",
    "start": "514959",
    "end": "517120"
  },
  {
    "text": "a with a bunch of annotations",
    "start": "517120",
    "end": "519279"
  },
  {
    "text": "you can see i'm setting the target rps",
    "start": "519279",
    "end": "521518"
  },
  {
    "text": "to 200",
    "start": "521519",
    "end": "522800"
  },
  {
    "text": "and auto scale max 10 instances so i",
    "start": "522800",
    "end": "525200"
  },
  {
    "text": "don't blow up my laptop and it's",
    "start": "525200",
    "end": "526959"
  },
  {
    "text": "checking the window every six seconds um",
    "start": "526959",
    "end": "530240"
  },
  {
    "text": "right so let",
    "start": "530240",
    "end": "532000"
  },
  {
    "text": "let's do that",
    "start": "532000",
    "end": "535399"
  },
  {
    "text": "whoops",
    "start": "536480",
    "end": "538800"
  },
  {
    "text": "so we created the config for our",
    "start": "541200",
    "end": "544640"
  },
  {
    "text": "benthos vader vader being the sentiment",
    "start": "544640",
    "end": "546800"
  },
  {
    "text": "analysis library that i'm using",
    "start": "546800",
    "end": "549040"
  },
  {
    "text": "and now i'm launching uh benthos vader",
    "start": "549040",
    "end": "551760"
  },
  {
    "text": "so this is running that keynative crd",
    "start": "551760",
    "end": "554800"
  },
  {
    "text": "and starting it up and we can see here",
    "start": "554800",
    "end": "556480"
  },
  {
    "text": "the first bentos",
    "start": "556480",
    "end": "558160"
  },
  {
    "text": "benthos vader pod coming up uh it takes",
    "start": "558160",
    "end": "560800"
  },
  {
    "text": "like 20 seconds to start up so i'm just",
    "start": "560800",
    "end": "562800"
  },
  {
    "text": "waiting for it",
    "start": "562800",
    "end": "564240"
  },
  {
    "text": "um",
    "start": "564240",
    "end": "565440"
  },
  {
    "text": "and the meantime",
    "start": "565440",
    "end": "566959"
  },
  {
    "text": "uh",
    "start": "566959",
    "end": "568080"
  },
  {
    "text": "we have this curl command here",
    "start": "568080",
    "end": "569920"
  },
  {
    "text": "pre-prepared",
    "start": "569920",
    "end": "571200"
  },
  {
    "text": "okay you see it came up so it's running",
    "start": "571200",
    "end": "573279"
  },
  {
    "text": "it's healthy",
    "start": "573279",
    "end": "574560"
  },
  {
    "text": "uh and if i run my curl command",
    "start": "574560",
    "end": "577600"
  },
  {
    "text": "oops",
    "start": "577600",
    "end": "579920"
  },
  {
    "text": "uh you can see here all the way at the",
    "start": "580399",
    "end": "582160"
  },
  {
    "text": "bottom that it did produce this output",
    "start": "582160",
    "end": "584480"
  },
  {
    "text": "so i said hey you know uh i love benthos",
    "start": "584480",
    "end": "588640"
  },
  {
    "text": "and it computed the sentiment for this",
    "start": "588640",
    "end": "590560"
  },
  {
    "text": "and it came up with a bunch of numbers",
    "start": "590560",
    "end": "592640"
  },
  {
    "text": "that i'm not going to try to explain",
    "start": "592640",
    "end": "593920"
  },
  {
    "text": "detail but it looks pretty positive like",
    "start": "593920",
    "end": "596000"
  },
  {
    "text": "it's a positive number here",
    "start": "596000",
    "end": "597839"
  },
  {
    "text": "um right and we have one pod running so",
    "start": "597839",
    "end": "600720"
  },
  {
    "text": "now what i want to do is start my",
    "start": "600720",
    "end": "602399"
  },
  {
    "text": "database so i'm going to start the",
    "start": "602399",
    "end": "604079"
  },
  {
    "text": "postgres in docker",
    "start": "604079",
    "end": "607360"
  },
  {
    "text": "and i'm going to populate the database",
    "start": "607839",
    "end": "611600"
  },
  {
    "text": "and",
    "start": "612000",
    "end": "613120"
  },
  {
    "text": "i managed to sneak in here another",
    "start": "613120",
    "end": "614480"
  },
  {
    "text": "benthos which actually loads the data",
    "start": "614480",
    "end": "616160"
  },
  {
    "text": "into postgres just for fun",
    "start": "616160",
    "end": "619839"
  },
  {
    "text": "so now let's look at our data",
    "start": "620000",
    "end": "623600"
  },
  {
    "text": "so if we select",
    "start": "627839",
    "end": "630079"
  },
  {
    "text": "count",
    "start": "630079",
    "end": "633079"
  },
  {
    "text": "oh whoops",
    "start": "635760",
    "end": "638560"
  },
  {
    "text": "we see we have about",
    "start": "638640",
    "end": "640720"
  },
  {
    "text": "almost 1500 records in here and in our",
    "start": "640720",
    "end": "643279"
  },
  {
    "text": "sink we don't have anything",
    "start": "643279",
    "end": "645760"
  },
  {
    "text": "sync",
    "start": "645760",
    "end": "647519"
  },
  {
    "text": "yeah and then if we look at our source",
    "start": "647519",
    "end": "649760"
  },
  {
    "text": "let's just have a quick look-see at it",
    "start": "649760",
    "end": "652480"
  },
  {
    "text": "uh yeah we have this id and we have the",
    "start": "652480",
    "end": "654800"
  },
  {
    "text": "text of the tweets um",
    "start": "654800",
    "end": "657200"
  },
  {
    "text": "yeah it doesn't matter too much it's",
    "start": "657200",
    "end": "659120"
  },
  {
    "text": "just a bunch of stuff",
    "start": "659120",
    "end": "662160"
  },
  {
    "text": "right",
    "start": "662320",
    "end": "664399"
  },
  {
    "text": "and now i want to launch a prometheus",
    "start": "664399",
    "end": "666720"
  },
  {
    "text": "instance just to show you a bunch of",
    "start": "666720",
    "end": "668160"
  },
  {
    "text": "metrics",
    "start": "668160",
    "end": "670560"
  },
  {
    "text": "and i have a url ready made for it",
    "start": "670560",
    "end": "673279"
  },
  {
    "text": "here and as you can see there's no data",
    "start": "673279",
    "end": "675920"
  },
  {
    "text": "yet so i'm not pulling anything out from",
    "start": "675920",
    "end": "677839"
  },
  {
    "text": "under my sleeve",
    "start": "677839",
    "end": "679440"
  },
  {
    "text": "and now what i want to do is run bentos",
    "start": "679440",
    "end": "682079"
  },
  {
    "text": "and this is the bentos that does the",
    "start": "682079",
    "end": "684480"
  },
  {
    "text": "batch loading from the source table that",
    "start": "684480",
    "end": "686480"
  },
  {
    "text": "i showed you in the diagram and the",
    "start": "686480",
    "end": "687760"
  },
  {
    "text": "slides",
    "start": "687760",
    "end": "690000"
  },
  {
    "text": "and the config for it that i have is",
    "start": "690000",
    "end": "692320"
  },
  {
    "text": "here oops",
    "start": "692320",
    "end": "694079"
  },
  {
    "text": "so it has an input which is the postgres",
    "start": "694079",
    "end": "696720"
  },
  {
    "text": "with the source table svx everything it",
    "start": "696720",
    "end": "698640"
  },
  {
    "text": "has a pipeline where i'm reaching out",
    "start": "698640",
    "end": "701040"
  },
  {
    "text": "into this lambda and i'm asking it for",
    "start": "701040",
    "end": "703519"
  },
  {
    "text": "the sentiment analysis data and then the",
    "start": "703519",
    "end": "706160"
  },
  {
    "text": "output is here which puts the data in",
    "start": "706160",
    "end": "708560"
  },
  {
    "text": "the sink",
    "start": "708560",
    "end": "709680"
  },
  {
    "text": "and it just puts those four fields that",
    "start": "709680",
    "end": "711920"
  },
  {
    "text": "are computed and i'm applying a bunch of",
    "start": "711920",
    "end": "714000"
  },
  {
    "text": "output batching just such that this",
    "start": "714000",
    "end": "715839"
  },
  {
    "text": "output is fast enough to show you the",
    "start": "715839",
    "end": "717519"
  },
  {
    "text": "auto scaling",
    "start": "717519",
    "end": "718880"
  },
  {
    "text": "um",
    "start": "718880",
    "end": "720720"
  },
  {
    "text": "so if we go back here",
    "start": "720720",
    "end": "723279"
  },
  {
    "text": "and i time my bentos this is going to",
    "start": "723279",
    "end": "725839"
  },
  {
    "text": "take about 30 seconds something so we",
    "start": "725839",
    "end": "728320"
  },
  {
    "text": "can see here on the right that our one",
    "start": "728320",
    "end": "730399"
  },
  {
    "text": "pod is running and it's spinning another",
    "start": "730399",
    "end": "732240"
  },
  {
    "text": "one up just because it realized that",
    "start": "732240",
    "end": "734160"
  },
  {
    "text": "it's doing a bunch more requests than",
    "start": "734160",
    "end": "736079"
  },
  {
    "text": "one can handle",
    "start": "736079",
    "end": "737920"
  },
  {
    "text": "if you remember i configured this",
    "start": "737920",
    "end": "741519"
  },
  {
    "text": "here with 200 rps",
    "start": "743040",
    "end": "746320"
  },
  {
    "text": "um yeah so it's still churning along we",
    "start": "746320",
    "end": "748639"
  },
  {
    "text": "can actually um look at our database if",
    "start": "748639",
    "end": "751440"
  },
  {
    "text": "we want to but i'm just going to leave",
    "start": "751440",
    "end": "752800"
  },
  {
    "text": "it",
    "start": "752800",
    "end": "754880"
  },
  {
    "text": "let's see",
    "start": "755279",
    "end": "758680"
  },
  {
    "text": "sink",
    "start": "766160",
    "end": "768079"
  },
  {
    "text": "right",
    "start": "768079",
    "end": "769040"
  },
  {
    "text": "so it's almost there",
    "start": "769040",
    "end": "770959"
  },
  {
    "text": "i hope it's going to work well because",
    "start": "770959",
    "end": "772720"
  },
  {
    "text": "like it's a local demo so my laptop",
    "start": "772720",
    "end": "774880"
  },
  {
    "text": "sometimes is slower it's faster it",
    "start": "774880",
    "end": "776480"
  },
  {
    "text": "depends on how this",
    "start": "776480",
    "end": "777920"
  },
  {
    "text": "containers are initialized and before it",
    "start": "777920",
    "end": "780639"
  },
  {
    "text": "was a bit faster but anyway let's just",
    "start": "780639",
    "end": "782720"
  },
  {
    "text": "bear with it",
    "start": "782720",
    "end": "785279"
  },
  {
    "text": "there we go it finished it finished in",
    "start": "785519",
    "end": "787040"
  },
  {
    "text": "one minute and a few seconds so we're",
    "start": "787040",
    "end": "789120"
  },
  {
    "text": "good now let's try to play with the",
    "start": "789120",
    "end": "791040"
  },
  {
    "text": "bentos config a bit",
    "start": "791040",
    "end": "793120"
  },
  {
    "text": "and here i'm going to use six threads",
    "start": "793120",
    "end": "795200"
  },
  {
    "text": "instead of one",
    "start": "795200",
    "end": "796560"
  },
  {
    "text": "to talk to this vader service",
    "start": "796560",
    "end": "799279"
  },
  {
    "text": "benthos vader service so if we run this",
    "start": "799279",
    "end": "801760"
  },
  {
    "text": "again",
    "start": "801760",
    "end": "803519"
  },
  {
    "text": "uh hopefully this time you should be",
    "start": "803519",
    "end": "805040"
  },
  {
    "text": "faster and we should see a bunch more",
    "start": "805040",
    "end": "806880"
  },
  {
    "text": "pods coming up here like two of them",
    "start": "806880",
    "end": "809040"
  },
  {
    "text": "already came up",
    "start": "809040",
    "end": "811120"
  },
  {
    "text": "three",
    "start": "811120",
    "end": "812240"
  },
  {
    "text": "so things are going better and if we",
    "start": "812240",
    "end": "814320"
  },
  {
    "text": "look at our",
    "start": "814320",
    "end": "816959"
  },
  {
    "text": "output data if i still have it i closed",
    "start": "816959",
    "end": "818880"
  },
  {
    "text": "it okay great",
    "start": "818880",
    "end": "820320"
  },
  {
    "text": "um",
    "start": "820320",
    "end": "822560"
  },
  {
    "text": "yeah",
    "start": "826839",
    "end": "828639"
  },
  {
    "text": "it's putting more data in the sink",
    "start": "828639",
    "end": "831279"
  },
  {
    "text": "and it should finish hopefully a bit",
    "start": "831279",
    "end": "832800"
  },
  {
    "text": "faster than last time",
    "start": "832800",
    "end": "835920"
  },
  {
    "text": "uh like i said it's a bit temperamental",
    "start": "837120",
    "end": "839279"
  },
  {
    "text": "depending on how docker initializes the",
    "start": "839279",
    "end": "840959"
  },
  {
    "text": "containers and i see it",
    "start": "840959",
    "end": "842800"
  },
  {
    "text": "it took well 38 seconds it was a bit",
    "start": "842800",
    "end": "845440"
  },
  {
    "text": "faster previously but i think we did",
    "start": "845440",
    "end": "847279"
  },
  {
    "text": "better like we ran a few more pods here",
    "start": "847279",
    "end": "849680"
  },
  {
    "text": "and now just for to drive it home like",
    "start": "849680",
    "end": "851600"
  },
  {
    "text": "we can look in prometheus here to see",
    "start": "851600",
    "end": "853279"
  },
  {
    "text": "what we did so we see initially we run",
    "start": "853279",
    "end": "855920"
  },
  {
    "text": "it here",
    "start": "855920",
    "end": "857120"
  },
  {
    "text": "and we had about",
    "start": "857120",
    "end": "859199"
  },
  {
    "text": "uh 260",
    "start": "859199",
    "end": "861279"
  },
  {
    "text": "messages process per second by the",
    "start": "861279",
    "end": "863839"
  },
  {
    "text": "lambda and over here we reached a peak",
    "start": "863839",
    "end": "866240"
  },
  {
    "text": "of 478 and for some reason it dipped",
    "start": "866240",
    "end": "868959"
  },
  {
    "text": "down a bit i'm not sure why but like i",
    "start": "868959",
    "end": "871040"
  },
  {
    "text": "said it's running locally so it's a bit",
    "start": "871040",
    "end": "872480"
  },
  {
    "text": "temperamental",
    "start": "872480",
    "end": "875120"
  },
  {
    "start": "875000",
    "end": "1013000"
  },
  {
    "text": "so yeah that kind of shows you what i",
    "start": "875519",
    "end": "877600"
  },
  {
    "text": "wanted to demo",
    "start": "877600",
    "end": "879920"
  },
  {
    "text": "and if i go back to my slides i just",
    "start": "879920",
    "end": "882399"
  },
  {
    "text": "want to say in summary k native supports",
    "start": "882399",
    "end": "884639"
  },
  {
    "text": "push based auto scaling",
    "start": "884639",
    "end": "886720"
  },
  {
    "text": "but for pool based auto scaling we",
    "start": "886720",
    "end": "888639"
  },
  {
    "text": "require bespoke components and bentos is",
    "start": "888639",
    "end": "891040"
  },
  {
    "text": "one way of doing this it provides all",
    "start": "891040",
    "end": "893120"
  },
  {
    "text": "this um functionality for free it's",
    "start": "893120",
    "end": "896000"
  },
  {
    "text": "configurable and it lets us use a lot of",
    "start": "896000",
    "end": "898959"
  },
  {
    "text": "components and we can write a bunch of",
    "start": "898959",
    "end": "900959"
  },
  {
    "text": "bentos dsl to transform our messages and",
    "start": "900959",
    "end": "903920"
  },
  {
    "text": "it's like a kubernetes native",
    "start": "903920",
    "end": "905360"
  },
  {
    "text": "application that can be run supports all",
    "start": "905360",
    "end": "907279"
  },
  {
    "text": "the probes we need all the metrics also",
    "start": "907279",
    "end": "910079"
  },
  {
    "text": "things that make it an ideal choice for",
    "start": "910079",
    "end": "912399"
  },
  {
    "text": "this kind of workflow",
    "start": "912399",
    "end": "915440"
  },
  {
    "text": "and with that i want to say thank you",
    "start": "915440",
    "end": "916959"
  },
  {
    "text": "and i will take any questions you might",
    "start": "916959",
    "end": "918880"
  },
  {
    "text": "have",
    "start": "918880",
    "end": "920280"
  },
  {
    "text": "[Music]",
    "start": "920280",
    "end": "923549"
  },
  {
    "text": "[Applause]",
    "start": "923850",
    "end": "930199"
  },
  {
    "text": "thank you for the great talk quick",
    "start": "934800",
    "end": "936240"
  },
  {
    "text": "question uh concurrency or request-based",
    "start": "936240",
    "end": "938560"
  },
  {
    "text": "auto-scaling what's your take on this",
    "start": "938560",
    "end": "940160"
  },
  {
    "text": "and can you hear me very",
    "start": "940160",
    "end": "942480"
  },
  {
    "text": "slightly can you maybe speak a bit",
    "start": "942480",
    "end": "944000"
  },
  {
    "text": "louder okay uh question on concurrency",
    "start": "944000",
    "end": "946720"
  },
  {
    "text": "or request-based auto-scaling i saw you",
    "start": "946720",
    "end": "948639"
  },
  {
    "text": "using request-based autoscaling yeah",
    "start": "948639",
    "end": "950639"
  },
  {
    "text": "first of first question why did you pick",
    "start": "950639",
    "end": "952320"
  },
  {
    "text": "that one and second which one would you",
    "start": "952320",
    "end": "954079"
  },
  {
    "text": "recommend for users",
    "start": "954079",
    "end": "955600"
  },
  {
    "text": "yeah it's it kind of depends like here",
    "start": "955600",
    "end": "957600"
  },
  {
    "text": "it was mostly because of uh so",
    "start": "957600",
    "end": "959920"
  },
  {
    "text": "the question is uh why did they use rps",
    "start": "959920",
    "end": "962959"
  },
  {
    "text": "instead of uh",
    "start": "962959",
    "end": "965839"
  },
  {
    "text": "anything else and this depends on like",
    "start": "965839",
    "end": "967839"
  },
  {
    "text": "how you run the demo i i run it here",
    "start": "967839",
    "end": "970079"
  },
  {
    "text": "locally and uh",
    "start": "970079",
    "end": "971680"
  },
  {
    "text": "kind of i try to fit around with the",
    "start": "971680",
    "end": "973600"
  },
  {
    "text": "parameters to make it show something",
    "start": "973600",
    "end": "975839"
  },
  {
    "text": "useful but i think in production things",
    "start": "975839",
    "end": "978240"
  },
  {
    "text": "will be very different so it really",
    "start": "978240",
    "end": "979920"
  },
  {
    "text": "depends on your workflow and a more",
    "start": "979920",
    "end": "982160"
  },
  {
    "text": "realistic test case to figure out what",
    "start": "982160",
    "end": "984160"
  },
  {
    "text": "is the best way to configure k native",
    "start": "984160",
    "end": "986240"
  },
  {
    "text": "total scale the app",
    "start": "986240",
    "end": "988399"
  },
  {
    "text": "but i don't have a realistic setup so i",
    "start": "988399",
    "end": "990720"
  },
  {
    "text": "can't really play with it to give",
    "start": "990720",
    "end": "992720"
  },
  {
    "text": "informed advice hope that helps",
    "start": "992720",
    "end": "996320"
  },
  {
    "text": "any other question",
    "start": "996320",
    "end": "999040"
  },
  {
    "text": "questions",
    "start": "1001440",
    "end": "1003839"
  },
  {
    "text": "okay",
    "start": "1003839",
    "end": "1004800"
  },
  {
    "text": "well thank you mihai i'm maru remotely",
    "start": "1004800",
    "end": "1009279"
  },
  {
    "text": "yeah thank you thank you everyone thank",
    "start": "1009360",
    "end": "1011360"
  },
  {
    "text": "you",
    "start": "1011360",
    "end": "1014360"
  }
]