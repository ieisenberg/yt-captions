[
  {
    "text": "because developer experience engineered",
    "start": "0",
    "end": "2220"
  },
  {
    "text": "grammarly and teach devops people or",
    "start": "2220",
    "end": "4980"
  },
  {
    "text": "keeps teach devops to the people with",
    "start": "4980",
    "end": "7500"
  },
  {
    "text": "different background and skill sets",
    "start": "7500",
    "end": "10559"
  },
  {
    "text": "thank you they for being here with us at",
    "start": "10559",
    "end": "13559"
  },
  {
    "text": "the stage as yours hey thank you for",
    "start": "13559",
    "end": "15900"
  },
  {
    "text": "introduction hi everyone I'm thrilled to",
    "start": "15900",
    "end": "18900"
  },
  {
    "text": "be here today actually uh I want to",
    "start": "18900",
    "end": "21779"
  },
  {
    "text": "share our case study of using kubernetes",
    "start": "21779",
    "end": "24359"
  },
  {
    "text": "Carpenter and some other tools to build",
    "start": "24359",
    "end": "26580"
  },
  {
    "text": "a scalable and cost efficient",
    "start": "26580",
    "end": "28140"
  },
  {
    "text": "infrastructure for CI runners",
    "start": "28140",
    "end": "30720"
  },
  {
    "text": "it is built around gitlab and AWS and I",
    "start": "30720",
    "end": "34860"
  },
  {
    "text": "believe you'll find some helpful tips or",
    "start": "34860",
    "end": "36899"
  },
  {
    "text": "insights for yourself even if you prefer",
    "start": "36899",
    "end": "39300"
  },
  {
    "text": "some other Ci or Cloud product",
    "start": "39300",
    "end": "42180"
  },
  {
    "text": "let me introduce myself first I'm",
    "start": "42180",
    "end": "44399"
  },
  {
    "text": "sergiva solenko I've been an I.T staff",
    "start": "44399",
    "end": "46200"
  },
  {
    "text": "for about 12 years and currently working",
    "start": "46200",
    "end": "48719"
  },
  {
    "text": "at grammarly and I love it my focus area",
    "start": "48719",
    "end": "51780"
  },
  {
    "text": "is cicd and I'm a big fan of AWS and",
    "start": "51780",
    "end": "55500"
  },
  {
    "text": "hashicor product offerings",
    "start": "55500",
    "end": "57840"
  },
  {
    "text": "here is what I'm going to cover in this",
    "start": "57840",
    "end": "60059"
  },
  {
    "text": "talk",
    "start": "60059",
    "end": "60719"
  },
  {
    "text": "for starters the context why we decided",
    "start": "60719",
    "end": "64080"
  },
  {
    "text": "to create a new cicd infra and how the",
    "start": "64080",
    "end": "66659"
  },
  {
    "text": "whole back end infra and code management",
    "start": "66659",
    "end": "68520"
  },
  {
    "text": "look in general then I will explain how",
    "start": "68520",
    "end": "71760"
  },
  {
    "text": "the one account contains our CI CD infra",
    "start": "71760",
    "end": "74880"
  },
  {
    "text": "and how CI job get access to resources",
    "start": "74880",
    "end": "78119"
  },
  {
    "text": "in other AWS accounts after that we will",
    "start": "78119",
    "end": "81540"
  },
  {
    "text": "meet the carpenter not provisioner and I",
    "start": "81540",
    "end": "84000"
  },
  {
    "text": "will explain how it works and how we use",
    "start": "84000",
    "end": "86040"
  },
  {
    "text": "it then you will see what challenges we",
    "start": "86040",
    "end": "89040"
  },
  {
    "text": "have around Carpenter and how we deal",
    "start": "89040",
    "end": "91320"
  },
  {
    "text": "with them using the kivarna project",
    "start": "91320",
    "end": "93380"
  },
  {
    "text": "finally I will talk about the way we use",
    "start": "93380",
    "end": "96420"
  },
  {
    "text": "the gear Ops approaches with argocd to",
    "start": "96420",
    "end": "99060"
  },
  {
    "text": "deploy all that stuff and keep it up to",
    "start": "99060",
    "end": "101280"
  },
  {
    "text": "date I will do my best to make that",
    "start": "101280",
    "end": "103680"
  },
  {
    "text": "presentation interesting for you whether",
    "start": "103680",
    "end": "105780"
  },
  {
    "text": "you are proficient in the kubernetes",
    "start": "105780",
    "end": "107340"
  },
  {
    "text": "world or just starting your journey",
    "start": "107340",
    "end": "109200"
  },
  {
    "text": "let's go",
    "start": "109200",
    "end": "111060"
  },
  {
    "text": "our backend infrastructure is hosted at",
    "start": "111060",
    "end": "113820"
  },
  {
    "text": "AWS we have around 200 accounts",
    "start": "113820",
    "end": "116520"
  },
  {
    "text": "government with AWS organization and the",
    "start": "116520",
    "end": "119460"
  },
  {
    "text": "number keeps growing",
    "start": "119460",
    "end": "121439"
  },
  {
    "text": "why do we need that many accounts some",
    "start": "121439",
    "end": "123360"
  },
  {
    "text": "might ask well a single AWS account",
    "start": "123360",
    "end": "126079"
  },
  {
    "text": "represents their environment like QA",
    "start": "126079",
    "end": "129000"
  },
  {
    "text": "report or product for some project some",
    "start": "129000",
    "end": "131819"
  },
  {
    "text": "back-end service each account has its",
    "start": "131819",
    "end": "134640"
  },
  {
    "text": "own VPC and Transit getaways help us to",
    "start": "134640",
    "end": "137400"
  },
  {
    "text": "connect accounts with each other when",
    "start": "137400",
    "end": "139260"
  },
  {
    "text": "needed",
    "start": "139260",
    "end": "140640"
  },
  {
    "text": "we use a self uh self-hosted gitlab to",
    "start": "140640",
    "end": "144300"
  },
  {
    "text": "arrange development and code management",
    "start": "144300",
    "end": "145860"
  },
  {
    "text": "process code projects repositories are",
    "start": "145860",
    "end": "149700"
  },
  {
    "text": "organized in groups by teams that",
    "start": "149700",
    "end": "151860"
  },
  {
    "text": "develop these projects around 400 users",
    "start": "151860",
    "end": "154920"
  },
  {
    "text": "maintain around 1500 projects by this",
    "start": "154920",
    "end": "157920"
  },
  {
    "text": "day and because we want to maximize",
    "start": "157920",
    "end": "160319"
  },
  {
    "text": "collaboration we need to make sure that",
    "start": "160319",
    "end": "163080"
  },
  {
    "text": "everyone can contribute to any project",
    "start": "163080",
    "end": "165599"
  },
  {
    "text": "this actually poses three challenges",
    "start": "165599",
    "end": "168300"
  },
  {
    "text": "well maybe more but like three main",
    "start": "168300",
    "end": "170160"
  },
  {
    "text": "challenges I would say",
    "start": "170160",
    "end": "171959"
  },
  {
    "text": "if everyone can contribute to everything",
    "start": "171959",
    "end": "174599"
  },
  {
    "text": "they need to run CI for feature branches",
    "start": "174599",
    "end": "177599"
  },
  {
    "text": "and sometimes run tests in QA or Pro of",
    "start": "177599",
    "end": "180780"
  },
  {
    "text": "projects they do not own and sometimes",
    "start": "180780",
    "end": "183599"
  },
  {
    "text": "they need to manage or update AWS",
    "start": "183599",
    "end": "185940"
  },
  {
    "text": "resources in that accounts",
    "start": "185940",
    "end": "187860"
  },
  {
    "text": "and we need to keep it secure and",
    "start": "187860",
    "end": "190080"
  },
  {
    "text": "auditable",
    "start": "190080",
    "end": "192060"
  },
  {
    "text": "the previous version of the CI infra we",
    "start": "192060",
    "end": "194700"
  },
  {
    "text": "had could solve this but in a way that",
    "start": "194700",
    "end": "198180"
  },
  {
    "text": "would still have a big room for",
    "start": "198180",
    "end": "199800"
  },
  {
    "text": "improvement so to speak well CI Runners",
    "start": "199800",
    "end": "203099"
  },
  {
    "text": "were deployed in every AWS account there",
    "start": "203099",
    "end": "206220"
  },
  {
    "text": "was no Auto scaling for Runner instances",
    "start": "206220",
    "end": "208440"
  },
  {
    "text": "we had a self-service with best gas",
    "start": "208440",
    "end": "211379"
  },
  {
    "text": "provisioning when users picked desired",
    "start": "211379",
    "end": "214680"
  },
  {
    "text": "instance size and there was no capacity",
    "start": "214680",
    "end": "217680"
  },
  {
    "text": "review later",
    "start": "217680",
    "end": "218879"
  },
  {
    "text": "and when several gitlab projects needed",
    "start": "218879",
    "end": "221519"
  },
  {
    "text": "access to the same AWS account we had",
    "start": "221519",
    "end": "224459"
  },
  {
    "text": "more and more Runners instances created",
    "start": "224459",
    "end": "226739"
  },
  {
    "text": "in that AWS account",
    "start": "226739",
    "end": "229140"
  },
  {
    "text": "so let me explain now how we solved all",
    "start": "229140",
    "end": "231840"
  },
  {
    "text": "that what Solutions look like and what",
    "start": "231840",
    "end": "234540"
  },
  {
    "text": "the cost looks like",
    "start": "234540",
    "end": "236819"
  },
  {
    "text": "and that leads us to the one CI account",
    "start": "236819",
    "end": "239760"
  },
  {
    "text": "through them all section",
    "start": "239760",
    "end": "242220"
  },
  {
    "text": "we decided to go with elastic community",
    "start": "242220",
    "end": "244260"
  },
  {
    "text": "service in a separate account as the",
    "start": "244260",
    "end": "246720"
  },
  {
    "text": "platform for cicd because we wanted a",
    "start": "246720",
    "end": "249659"
  },
  {
    "text": "centralized Resource Management we",
    "start": "249659",
    "end": "251700"
  },
  {
    "text": "needed to keep up with the networking",
    "start": "251700",
    "end": "253500"
  },
  {
    "text": "model across the organization we wanted",
    "start": "253500",
    "end": "255840"
  },
  {
    "text": "more and more customization for CI and",
    "start": "255840",
    "end": "259019"
  },
  {
    "text": "of course we needed the horizontal",
    "start": "259019",
    "end": "260579"
  },
  {
    "text": "scaling while network access is fairly",
    "start": "260579",
    "end": "263400"
  },
  {
    "text": "simple and based on Transit getaway Road",
    "start": "263400",
    "end": "266100"
  },
  {
    "text": "and quiz combination of Security Group",
    "start": "266100",
    "end": "267960"
  },
  {
    "text": "rules the IM access was a challenge we",
    "start": "267960",
    "end": "270900"
  },
  {
    "text": "needed to solve how CI job in CI account",
    "start": "270900",
    "end": "274080"
  },
  {
    "text": "would access other AWS accounts",
    "start": "274080",
    "end": "278040"
  },
  {
    "text": "we leverage service accounts and",
    "start": "278040",
    "end": "279900"
  },
  {
    "text": "kubernetes to solve that gitlab can",
    "start": "279900",
    "end": "282300"
  },
  {
    "text": "specify a custom service account for",
    "start": "282300",
    "end": "284280"
  },
  {
    "text": "support that contains a running CI job",
    "start": "284280",
    "end": "287280"
  },
  {
    "text": "we also need an openid connect provider",
    "start": "287280",
    "end": "289919"
  },
  {
    "text": "for the cluster to make a cross account",
    "start": "289919",
    "end": "291720"
  },
  {
    "text": "I am I am role assumption from the Pod",
    "start": "291720",
    "end": "294479"
  },
  {
    "text": "running inside that cluster AWS accounts",
    "start": "294479",
    "end": "297660"
  },
  {
    "text": "for the projects have a special IM roles",
    "start": "297660",
    "end": "300000"
  },
  {
    "text": "they are used by CI jobs and they trust",
    "start": "300000",
    "end": "303540"
  },
  {
    "text": "their assumption only to the defined",
    "start": "303540",
    "end": "306000"
  },
  {
    "text": "open ID provider",
    "start": "306000",
    "end": "307620"
  },
  {
    "text": "let me clarify that using the diagram",
    "start": "307620",
    "end": "310680"
  },
  {
    "text": "so here is a pod with a CI job that bot",
    "start": "310680",
    "end": "314460"
  },
  {
    "text": "has a service account with an annotation",
    "start": "314460",
    "end": "316560"
  },
  {
    "text": "that represents an IM role in another",
    "start": "316560",
    "end": "319440"
  },
  {
    "text": "AWS account",
    "start": "319440",
    "end": "321000"
  },
  {
    "text": "through the open ID both effectively",
    "start": "321000",
    "end": "323340"
  },
  {
    "text": "assumes the IM role inside another AWS",
    "start": "323340",
    "end": "325860"
  },
  {
    "text": "account but that role has a special",
    "start": "325860",
    "end": "328199"
  },
  {
    "text": "trust policy that not only limits the",
    "start": "328199",
    "end": "330539"
  },
  {
    "text": "scope of principles to the open ID",
    "start": "330539",
    "end": "332280"
  },
  {
    "text": "provider of our cluster but also allows",
    "start": "332280",
    "end": "335759"
  },
  {
    "text": "assumption only to service accounts",
    "start": "335759",
    "end": "339419"
  },
  {
    "text": "but it is way much simpler for users all",
    "start": "339419",
    "end": "343259"
  },
  {
    "text": "they need to do is specify the account",
    "start": "343259",
    "end": "345300"
  },
  {
    "text": "name in the CI configuration and the RCI",
    "start": "345300",
    "end": "348479"
  },
  {
    "text": "job will be able to access AWS resources",
    "start": "348479",
    "end": "351180"
  },
  {
    "text": "in that account",
    "start": "351180",
    "end": "353100"
  },
  {
    "text": "you might notice additional CI job",
    "start": "353100",
    "end": "355199"
  },
  {
    "text": "variables in that example",
    "start": "355199",
    "end": "357120"
  },
  {
    "text": "this is how users can set the desired",
    "start": "357120",
    "end": "359759"
  },
  {
    "text": "amount of resources per CI job or for",
    "start": "359759",
    "end": "362639"
  },
  {
    "text": "the whole Pipeline and then leads and",
    "start": "362639",
    "end": "365460"
  },
  {
    "text": "that actually leads us to the next part",
    "start": "365460",
    "end": "367440"
  },
  {
    "text": "of my talk",
    "start": "367440",
    "end": "369479"
  },
  {
    "text": "resource provisioning and scheduling",
    "start": "369479",
    "end": "372900"
  },
  {
    "text": "we started with the well-known",
    "start": "372900",
    "end": "374639"
  },
  {
    "text": "kubernetes cluster autoscaler but soon",
    "start": "374639",
    "end": "377340"
  },
  {
    "text": "we switched to Carpenter quite fast once",
    "start": "377340",
    "end": "380820"
  },
  {
    "text": "we discovered its features and potential",
    "start": "380820",
    "end": "383580"
  },
  {
    "text": "Carpenter does not require node groups",
    "start": "383580",
    "end": "386039"
  },
  {
    "text": "and it's highly customizable in terms of",
    "start": "386039",
    "end": "388500"
  },
  {
    "text": "ec2 nodes types and purchasing options",
    "start": "388500",
    "end": "391500"
  },
  {
    "text": "Carpenter observes the aggregate",
    "start": "391500",
    "end": "393539"
  },
  {
    "text": "resource request of unshedled pause and",
    "start": "393539",
    "end": "396900"
  },
  {
    "text": "makes decision to launch and terminate",
    "start": "396900",
    "end": "399060"
  },
  {
    "text": "nodes to minimize scheduling latencies",
    "start": "399060",
    "end": "401460"
  },
  {
    "text": "and infrastructure cost at the same time",
    "start": "401460",
    "end": "404100"
  },
  {
    "text": "but it can also coexist and be aware of",
    "start": "404100",
    "end": "407100"
  },
  {
    "text": "nodes provisioned outside of Carpenter",
    "start": "407100",
    "end": "409319"
  },
  {
    "text": "and you can have several Carpenter",
    "start": "409319",
    "end": "411479"
  },
  {
    "text": "provisioner configurations in your",
    "start": "411479",
    "end": "412919"
  },
  {
    "text": "cluster",
    "start": "412919",
    "end": "414900"
  },
  {
    "text": "here is an example of carpenter",
    "start": "414900",
    "end": "416759"
  },
  {
    "text": "provisional configuration here we Define",
    "start": "416759",
    "end": "419460"
  },
  {
    "text": "instance families not types to allow",
    "start": "419460",
    "end": "422160"
  },
  {
    "text": "Carpenter to choose from but we set some",
    "start": "422160",
    "end": "425100"
  },
  {
    "text": "limitations skip only the smallest and",
    "start": "425100",
    "end": "427680"
  },
  {
    "text": "the biggest types we also set both",
    "start": "427680",
    "end": "430319"
  },
  {
    "text": "on-demand and spot purchasing options so",
    "start": "430319",
    "end": "432900"
  },
  {
    "text": "Carpenter could run spot when a user",
    "start": "432900",
    "end": "434940"
  },
  {
    "text": "needs that",
    "start": "434940",
    "end": "436979"
  },
  {
    "text": "so when gitlab projects found hundreds",
    "start": "436979",
    "end": "439560"
  },
  {
    "text": "of jobs therefore pods it is okay for us",
    "start": "439560",
    "end": "442680"
  },
  {
    "text": "if we have nodes that can accept jobs",
    "start": "442680",
    "end": "445500"
  },
  {
    "text": "they will be used if we don't Carpenter",
    "start": "445500",
    "end": "448500"
  },
  {
    "text": "will create as many as needed to meet",
    "start": "448500",
    "end": "450599"
  },
  {
    "text": "the resource demand and pause will be",
    "start": "450599",
    "end": "452639"
  },
  {
    "text": "scheduled there when that makes",
    "start": "452639",
    "end": "455699"
  },
  {
    "text": "Carpenter great for gitlab CI and for us",
    "start": "455699",
    "end": "458280"
  },
  {
    "text": "well because in that one's CI job ends",
    "start": "458280",
    "end": "461880"
  },
  {
    "text": "the Pod dies so it means when a node",
    "start": "461880",
    "end": "464759"
  },
  {
    "text": "becomes empty Carpenter will terminate",
    "start": "464759",
    "end": "467160"
  },
  {
    "text": "that node right away",
    "start": "467160",
    "end": "469680"
  },
  {
    "text": "while just in time not provisioning is",
    "start": "469680",
    "end": "472680"
  },
  {
    "text": "great for costs it is not so good for",
    "start": "472680",
    "end": "475139"
  },
  {
    "text": "user experience because not provisioning",
    "start": "475139",
    "end": "477840"
  },
  {
    "text": "takes some time",
    "start": "477840",
    "end": "479520"
  },
  {
    "text": "so we made some calculations and",
    "start": "479520",
    "end": "481440"
  },
  {
    "text": "experiments and decided to keep a",
    "start": "481440",
    "end": "483539"
  },
  {
    "text": "certain amount of instances always",
    "start": "483539",
    "end": "485039"
  },
  {
    "text": "running so the most active projects",
    "start": "485039",
    "end": "487500"
  },
  {
    "text": "could have much more chances for the CI",
    "start": "487500",
    "end": "489720"
  },
  {
    "text": "job to start and avoid losing time on",
    "start": "489720",
    "end": "492120"
  },
  {
    "text": "not provisioning we call those nodes",
    "start": "492120",
    "end": "493919"
  },
  {
    "text": "worm pools but just so you know",
    "start": "493919",
    "end": "496259"
  },
  {
    "text": "Carpenter supports TTL for empty nodes",
    "start": "496259",
    "end": "498599"
  },
  {
    "text": "as well so it can keep note alive even",
    "start": "498599",
    "end": "502199"
  },
  {
    "text": "empty for some time but again for our",
    "start": "502199",
    "end": "505080"
  },
  {
    "text": "use case and conditions the worm pulls",
    "start": "505080",
    "end": "507599"
  },
  {
    "text": "tactic works better at least for now",
    "start": "507599",
    "end": "510720"
  },
  {
    "text": "we keep that in balance with our budget",
    "start": "510720",
    "end": "513300"
  },
  {
    "text": "expectations and so far it is okay for",
    "start": "513300",
    "end": "515580"
  },
  {
    "text": "us to look at the usage metrics and",
    "start": "515580",
    "end": "517320"
  },
  {
    "text": "adjust the size of that so-called worm",
    "start": "517320",
    "end": "519419"
  },
  {
    "text": "pool time to time we believe it is fair",
    "start": "519419",
    "end": "521760"
  },
  {
    "text": "price for a better user experience",
    "start": "521760",
    "end": "525180"
  },
  {
    "text": "okay so a user can set an AWS account",
    "start": "525180",
    "end": "528600"
  },
  {
    "text": "and resource request from gitlab CI",
    "start": "528600",
    "end": "530640"
  },
  {
    "text": "config but how about other stuff control",
    "start": "530640",
    "end": "533459"
  },
  {
    "text": "of on-demand and spot launch or",
    "start": "533459",
    "end": "536760"
  },
  {
    "text": "sometimes GPU for ML related automation",
    "start": "536760",
    "end": "539160"
  },
  {
    "text": "or maybe they need a particular instance",
    "start": "539160",
    "end": "541800"
  },
  {
    "text": "type and family for whatever reasons",
    "start": "541800",
    "end": "543959"
  },
  {
    "text": "well gitlab cannot tell Carpenter how to",
    "start": "543959",
    "end": "546899"
  },
  {
    "text": "do that but there is another thing that",
    "start": "546899",
    "end": "549120"
  },
  {
    "text": "can",
    "start": "549120",
    "end": "550320"
  },
  {
    "text": "and here goes kivarno actually",
    "start": "550320",
    "end": "553820"
  },
  {
    "text": "I hope I pronounced this correctly",
    "start": "553820",
    "end": "556800"
  },
  {
    "text": "kuberno is a politic he's a police",
    "start": "556800",
    "end": "558720"
  },
  {
    "text": "engine a policy is just another kind of",
    "start": "558720",
    "end": "562140"
  },
  {
    "text": "kubernetes source so it integrates",
    "start": "562140",
    "end": "564420"
  },
  {
    "text": "seamlessly a policy can validate certain",
    "start": "564420",
    "end": "567300"
  },
  {
    "text": "conditions and mutate generate or delete",
    "start": "567300",
    "end": "569760"
  },
  {
    "text": "kubernetes resource on flight",
    "start": "569760",
    "end": "572700"
  },
  {
    "text": "Kevin runs as a dynamic admission",
    "start": "572700",
    "end": "574800"
  },
  {
    "text": "controller in a kubernetes cluster it",
    "start": "574800",
    "end": "577440"
  },
  {
    "text": "receives validating and mutated",
    "start": "577440",
    "end": "579060"
  },
  {
    "text": "admission callbacks from the cube IP",
    "start": "579060",
    "end": "580920"
  },
  {
    "text": "server and applies matching policies to",
    "start": "580920",
    "end": "583620"
  },
  {
    "text": "return results that enforce admission",
    "start": "583620",
    "end": "585720"
  },
  {
    "text": "policies or reject the requests",
    "start": "585720",
    "end": "588300"
  },
  {
    "text": "here is a policy example to elaborate on",
    "start": "588300",
    "end": "590640"
  },
  {
    "text": "that",
    "start": "590640",
    "end": "591480"
  },
  {
    "text": "we check the annotations of the pots",
    "start": "591480",
    "end": "594240"
  },
  {
    "text": "here gitlab allows certain arbitrary",
    "start": "594240",
    "end": "597120"
  },
  {
    "text": "annotation in the kite in the cyclonfig",
    "start": "597120",
    "end": "599399"
  },
  {
    "text": "so if we have capacity type spot",
    "start": "599399",
    "end": "602220"
  },
  {
    "text": "annotation we add tolerations and not",
    "start": "602220",
    "end": "604800"
  },
  {
    "text": "selector fields to support configuration",
    "start": "604800",
    "end": "606600"
  },
  {
    "text": "before it's shadowed and when it gets to",
    "start": "606600",
    "end": "609240"
  },
  {
    "text": "shadowing Carpenter processes at that",
    "start": "609240",
    "end": "611760"
  },
  {
    "text": "Fields respectively and the Pod gets",
    "start": "611760",
    "end": "614100"
  },
  {
    "text": "placed onto the spot instance",
    "start": "614100",
    "end": "616440"
  },
  {
    "text": "and again it is much simpler for users",
    "start": "616440",
    "end": "619019"
  },
  {
    "text": "they only need to add that annotation",
    "start": "619019",
    "end": "621720"
  },
  {
    "text": "explicitly in the job config if they",
    "start": "621720",
    "end": "624180"
  },
  {
    "text": "want to run CI job on a spot instance",
    "start": "624180",
    "end": "627420"
  },
  {
    "text": "another example is the even spread of",
    "start": "627420",
    "end": "630420"
  },
  {
    "text": "pause across availability Zone",
    "start": "630420",
    "end": "632399"
  },
  {
    "text": "this is applied by default to all ports",
    "start": "632399",
    "end": "634620"
  },
  {
    "text": "no user interaction here we need to make",
    "start": "634620",
    "end": "637260"
  },
  {
    "text": "sure that we use all availability zones",
    "start": "637260",
    "end": "639720"
  },
  {
    "text": "and therefore subnets to avoid IP",
    "start": "639720",
    "end": "642660"
  },
  {
    "text": "address shortage in any of them this",
    "start": "642660",
    "end": "645180"
  },
  {
    "text": "example concludes caverno topic and lead",
    "start": "645180",
    "end": "647640"
  },
  {
    "text": "us to the final part of the talk",
    "start": "647640",
    "end": "650339"
  },
  {
    "text": "our approach to Cluster management and",
    "start": "650339",
    "end": "652500"
  },
  {
    "text": "deployments",
    "start": "652500",
    "end": "654360"
  },
  {
    "text": "we choose arborcd because it aligns with",
    "start": "654360",
    "end": "657480"
  },
  {
    "text": "our approach to a list to infrastructure",
    "start": "657480",
    "end": "659579"
  },
  {
    "text": "Management in a declarative github's way",
    "start": "659579",
    "end": "662279"
  },
  {
    "text": "and it offers us a template based",
    "start": "662279",
    "end": "664620"
  },
  {
    "text": "approach for the setup with a high",
    "start": "664620",
    "end": "666360"
  },
  {
    "text": "degree of flexibility as you can see we",
    "start": "666360",
    "end": "669300"
  },
  {
    "text": "have a lot of stuff managed by Argo so",
    "start": "669300",
    "end": "671640"
  },
  {
    "text": "let me explain two main approaches we",
    "start": "671640",
    "end": "673560"
  },
  {
    "text": "use to make that happen",
    "start": "673560",
    "end": "675660"
  },
  {
    "text": "in Argo a logical group of kubernetes",
    "start": "675660",
    "end": "678660"
  },
  {
    "text": "resources defined by manifest is called",
    "start": "678660",
    "end": "681300"
  },
  {
    "text": "an application we have many applications",
    "start": "681300",
    "end": "683880"
  },
  {
    "text": "in Argo that support the purpose and",
    "start": "683880",
    "end": "686220"
  },
  {
    "text": "work of our eks cluster and their set",
    "start": "686220",
    "end": "689339"
  },
  {
    "text": "and configuration are static defined in",
    "start": "689339",
    "end": "691860"
  },
  {
    "text": "the code base manually and update it",
    "start": "691860",
    "end": "694320"
  },
  {
    "text": "only when we need it they share some",
    "start": "694320",
    "end": "696720"
  },
  {
    "text": "common values so for example environment",
    "start": "696720",
    "end": "699300"
  },
  {
    "text": "variables name and the environment name",
    "start": "699300",
    "end": "702480"
  },
  {
    "text": "I mean Argo offers an approach to manage",
    "start": "702480",
    "end": "705540"
  },
  {
    "text": "that kind of setup it is called the app",
    "start": "705540",
    "end": "707820"
  },
  {
    "text": "of apps there is a parent app with specs",
    "start": "707820",
    "end": "711360"
  },
  {
    "text": "for its children a Helm chart",
    "start": "711360",
    "end": "713519"
  },
  {
    "text": "child apps also Helm charts are",
    "start": "713519",
    "end": "716279"
  },
  {
    "text": "organized into sub-projects so we don't",
    "start": "716279",
    "end": "719399"
  },
  {
    "text": "add new apps to that frequently so it's",
    "start": "719399",
    "end": "722160"
  },
  {
    "text": "a convenient way for us to manage this",
    "start": "722160",
    "end": "724019"
  },
  {
    "text": "however things get more interesting if",
    "start": "724019",
    "end": "726959"
  },
  {
    "text": "you have a dynamic set of applications",
    "start": "726959",
    "end": "729720"
  },
  {
    "text": "I know it's been a lot but",
    "start": "729720",
    "end": "732660"
  },
  {
    "text": "um if you remember from that beginning",
    "start": "732660",
    "end": "734519"
  },
  {
    "text": "of the presentation there are service",
    "start": "734519",
    "end": "736860"
  },
  {
    "text": "accounts that we use to provide access",
    "start": "736860",
    "end": "738839"
  },
  {
    "text": "for CI job to other AWS accounts right",
    "start": "738839",
    "end": "741660"
  },
  {
    "text": "so we have a lot of gitlab groups and a",
    "start": "741660",
    "end": "744540"
  },
  {
    "text": "lot of AWS accounts and because we'll",
    "start": "744540",
    "end": "746880"
  },
  {
    "text": "follow the principle of least privilege",
    "start": "746880",
    "end": "748920"
  },
  {
    "text": "we do not allow access to anywhere for",
    "start": "748920",
    "end": "751800"
  },
  {
    "text": "every gitlab project by default instead",
    "start": "751800",
    "end": "754560"
  },
  {
    "text": "we have a self-service portal where",
    "start": "754560",
    "end": "757260"
  },
  {
    "text": "users can request the needed access",
    "start": "757260",
    "end": "759140"
  },
  {
    "text": "effectively it means creating a service",
    "start": "759140",
    "end": "761519"
  },
  {
    "text": "account with a needed annotation for the",
    "start": "761519",
    "end": "763740"
  },
  {
    "text": "IM role and putting it into the",
    "start": "763740",
    "end": "766560"
  },
  {
    "text": "namespace of a particular gitlab group",
    "start": "766560",
    "end": "769160"
  },
  {
    "text": "therefore we have a dynamic set of",
    "start": "769160",
    "end": "771720"
  },
  {
    "text": "resources here because users initiate",
    "start": "771720",
    "end": "774060"
  },
  {
    "text": "their creation and the number of gitlab",
    "start": "774060",
    "end": "776220"
  },
  {
    "text": "groups and AWS accounts is not static",
    "start": "776220",
    "end": "778920"
  },
  {
    "text": "Argo has another approach to deal with",
    "start": "778920",
    "end": "781019"
  },
  {
    "text": "that it is called the application set",
    "start": "781019",
    "end": "782940"
  },
  {
    "text": "application set is a customer source",
    "start": "782940",
    "end": "785579"
  },
  {
    "text": "that generates configs from templates it",
    "start": "785579",
    "end": "788279"
  },
  {
    "text": "supports different methods for",
    "start": "788279",
    "end": "789720"
  },
  {
    "text": "generating the content for example based",
    "start": "789720",
    "end": "792420"
  },
  {
    "text": "on files and folders content or a list",
    "start": "792420",
    "end": "794519"
  },
  {
    "text": "of values",
    "start": "794519",
    "end": "795720"
  },
  {
    "text": "the application set controller is",
    "start": "795720",
    "end": "798180"
  },
  {
    "text": "installed on site arborcd within the",
    "start": "798180",
    "end": "800459"
  },
  {
    "text": "same namespace and the controller",
    "start": "800459",
    "end": "802440"
  },
  {
    "text": "automatically generates Arbor City",
    "start": "802440",
    "end": "804300"
  },
  {
    "text": "applications based on the contents of a",
    "start": "804300",
    "end": "807060"
  },
  {
    "text": "new application set custom resource",
    "start": "807060",
    "end": "810180"
  },
  {
    "text": "as an example take a look at this we",
    "start": "810180",
    "end": "813120"
  },
  {
    "text": "have a set of gitlab groups described in",
    "start": "813120",
    "end": "815519"
  },
  {
    "text": "Json that we use for generator we also",
    "start": "815519",
    "end": "818820"
  },
  {
    "text": "have some files that contain values for",
    "start": "818820",
    "end": "821399"
  },
  {
    "text": "the support and resources needed to",
    "start": "821399",
    "end": "823139"
  },
  {
    "text": "create the Argo application",
    "start": "823139",
    "end": "824880"
  },
  {
    "text": "so when a new request comes from a user",
    "start": "824880",
    "end": "827820"
  },
  {
    "text": "it contains pre-generated values for",
    "start": "827820",
    "end": "830220"
  },
  {
    "text": "service account and information about",
    "start": "830220",
    "end": "832200"
  },
  {
    "text": "gitlab group combining that with the",
    "start": "832200",
    "end": "834779"
  },
  {
    "text": "rest of the configs Argo creates a new",
    "start": "834779",
    "end": "837060"
  },
  {
    "text": "application that makes the CI job to the",
    "start": "837060",
    "end": "839639"
  },
  {
    "text": "AWS account access possible another cool",
    "start": "839639",
    "end": "842339"
  },
  {
    "text": "thing here is that changes met to the",
    "start": "842339",
    "end": "844980"
  },
  {
    "text": "application set in template will",
    "start": "844980",
    "end": "848220"
  },
  {
    "text": "automatically be applied to every",
    "start": "848220",
    "end": "849899"
  },
  {
    "text": "generated application this kind of helps",
    "start": "849899",
    "end": "852180"
  },
  {
    "text": "when you suddenly decide to change your",
    "start": "852180",
    "end": "853920"
  },
  {
    "text": "name and Convention for example",
    "start": "853920",
    "end": "856620"
  },
  {
    "text": "once again a loop from the user's",
    "start": "856620",
    "end": "858779"
  },
  {
    "text": "perspective a user interacts with a",
    "start": "858779",
    "end": "861000"
  },
  {
    "text": "simple web form and our automation tool",
    "start": "861000",
    "end": "863700"
  },
  {
    "text": "do the rest a special service called",
    "start": "863700",
    "end": "865680"
  },
  {
    "text": "platformer processes the form data and",
    "start": "865680",
    "end": "868380"
  },
  {
    "text": "creates a merge request with the needed",
    "start": "868380",
    "end": "870180"
  },
  {
    "text": "changes to Argo once changes are merged",
    "start": "870180",
    "end": "872880"
  },
  {
    "text": "to the main branch Argo applies them in",
    "start": "872880",
    "end": "875220"
  },
  {
    "text": "the cluster ultimately users can access",
    "start": "875220",
    "end": "877920"
  },
  {
    "text": "AWS accounts from their CI jobs in the",
    "start": "877920",
    "end": "880440"
  },
  {
    "text": "projects",
    "start": "880440",
    "end": "881579"
  },
  {
    "text": "last but not least the money while I may",
    "start": "881579",
    "end": "886019"
  },
  {
    "text": "not share the exact numbers I still want",
    "start": "886019",
    "end": "888779"
  },
  {
    "text": "to give you an overview of what we had",
    "start": "888779",
    "end": "890880"
  },
  {
    "text": "versus what we have long story short the",
    "start": "890880",
    "end": "894120"
  },
  {
    "text": "new infra costs almost five times less",
    "start": "894120",
    "end": "896279"
  },
  {
    "text": "compared to the previous one we have not",
    "start": "896279",
    "end": "898740"
  },
  {
    "text": "yet finished with the cleanup of the old",
    "start": "898740",
    "end": "900600"
  },
  {
    "text": "infrastructure because some projects",
    "start": "900600",
    "end": "902519"
  },
  {
    "text": "have their reasons to migrate slowly but",
    "start": "902519",
    "end": "905100"
  },
  {
    "text": "you can see that even if this sum the",
    "start": "905100",
    "end": "907680"
  },
  {
    "text": "new infra cost with leftovers it is",
    "start": "907680",
    "end": "910500"
  },
  {
    "text": "still drastically lower than it was",
    "start": "910500",
    "end": "913440"
  },
  {
    "text": "that was the final slide thank you for",
    "start": "913440",
    "end": "915660"
  },
  {
    "text": "your attention I hope my presentation",
    "start": "915660",
    "end": "917459"
  },
  {
    "text": "was helpful to you",
    "start": "917459",
    "end": "920540"
  },
  {
    "text": "[Music]",
    "start": "921210",
    "end": "930910"
  },
  {
    "text": "[Applause]",
    "start": "930910",
    "end": "933130"
  },
  {
    "text": "[Music]",
    "start": "933130",
    "end": "956160"
  },
  {
    "text": "foreign",
    "start": "956160",
    "end": "959160"
  },
  {
    "text": "[Music]",
    "start": "960090",
    "end": "979080"
  },
  {
    "text": "[Music]",
    "start": "981390",
    "end": "990629"
  },
  {
    "text": "[Music]",
    "start": "993720",
    "end": "996759"
  },
  {
    "text": "[Music]",
    "start": "1003590",
    "end": "1009809"
  },
  {
    "text": "foreign",
    "start": "1030199",
    "end": "1032500"
  },
  {
    "text": "[Music]",
    "start": "1039780",
    "end": "1040740"
  },
  {
    "text": "[Applause]",
    "start": "1040740",
    "end": "1042000"
  },
  {
    "text": "[Music]",
    "start": "1042000",
    "end": "1045220"
  },
  {
    "text": "[Applause]",
    "start": "1054490",
    "end": "1058910"
  },
  {
    "text": "[Applause]",
    "start": "1060910",
    "end": "1064089"
  },
  {
    "text": "foreign",
    "start": "1065179",
    "end": "1067600"
  },
  {
    "text": "[Music]",
    "start": "1071880",
    "end": "1080819"
  }
]