[
  {
    "text": "so in this presentation we will be explaining how to do or how to solve TLS at scale more specifically we'll",
    "start": "80",
    "end": "6960"
  },
  {
    "text": "actually be going into um Eric setup the setup that Eric created for one of his",
    "start": "6960",
    "end": "12719"
  },
  {
    "text": "clients uh where he's actually using manager in a very advanced way um he set",
    "start": "12719",
    "end": "18640"
  },
  {
    "text": "it up such that it's usable within a multi-tenant environment and such that all these tenants can self-service their",
    "start": "18640",
    "end": "25920"
  },
  {
    "text": "own certificates my name is Tim i work for Cyber Arc um I'm a search management",
    "start": "25920",
    "end": "31920"
  },
  {
    "text": "maintainer and so is Eric and I'm Eric uh I work as a contractor but for many",
    "start": "31920",
    "end": "38399"
  },
  {
    "text": "years I've been working for the startnet the Norwegian TSO which is responsible",
    "start": "38399",
    "end": "43600"
  },
  {
    "text": "for the transmission of energy in the Norwegian power",
    "start": "43600",
    "end": "48399"
  },
  {
    "text": "grid okay so a bit more about manager third manager like probably most of you",
    "start": "49559",
    "end": "56320"
  },
  {
    "text": "already know is a CNCF graduated project and we are very interested in solving",
    "start": "56320",
    "end": "63440"
  },
  {
    "text": "X509 on Kubernetes and Open Shift um so if",
    "start": "63440",
    "end": "69520"
  },
  {
    "text": "you look at search manager on GitHub this organization we have a couple projects that are very interesting and",
    "start": "69520",
    "end": "77200"
  },
  {
    "text": "the most important one of course is search manager itself you have trust manager approve a policy uh and a few",
    "start": "77200",
    "end": "82880"
  },
  {
    "text": "others we'll actually go into those uh later uh we're a fairly popular project",
    "start": "82880",
    "end": "88799"
  },
  {
    "text": "i think we have almost 12,000 GitHub stars uh 400 contributors and we are",
    "start": "88799",
    "end": "96240"
  },
  {
    "text": "being downloaded many many times per day um and today we will actually be talking",
    "start": "96240",
    "end": "104000"
  },
  {
    "text": "about how Eric is using Manager um but that wasn't always the case I think",
    "start": "104000",
    "end": "110680"
  },
  {
    "text": "so when Eric started uh with this client he actually didn't",
    "start": "110680",
    "end": "116240"
  },
  {
    "text": "use any search manager at all so he went from zero to the point where he is at right now which is actually being a",
    "start": "116240",
    "end": "122560"
  },
  {
    "text": "search manager maintainer it's like a amazing story basically",
    "start": "122560",
    "end": "127959"
  },
  {
    "text": "um so in this presentation we'll try to actually uh take you through the journey",
    "start": "127959",
    "end": "133440"
  },
  {
    "text": "that Eric made and kind of show also how he set up search manager for his client",
    "start": "133440",
    "end": "138480"
  },
  {
    "text": "and how he um really got into this very advanced use case",
    "start": "138480",
    "end": "144480"
  },
  {
    "text": "yeah so first uh a bit of context here um I'm used to work as an application",
    "start": "144480",
    "end": "151120"
  },
  {
    "text": "developer for many years uh also for startnet um so before joining the our",
    "start": "151120",
    "end": "157440"
  },
  {
    "text": "platform team uh this was a situation we have uh multiple Kubernetes clusters and",
    "start": "157440",
    "end": "163920"
  },
  {
    "text": "multiple Kafka clusters running on VM so not running on on Kubernetes uh I was",
    "start": "163920",
    "end": "169840"
  },
  {
    "text": "using this environment uh as a developer but uh after some time I I joined the",
    "start": "169840",
    "end": "176879"
  },
  {
    "text": "application team um this setup was created by a project",
    "start": "176879",
    "end": "183200"
  },
  {
    "text": "that uh had a lot of applications spin up in a cluster doing a lot of",
    "start": "183200",
    "end": "188360"
  },
  {
    "text": "stuff so but there was some challenges because of time constraints",
    "start": "188360",
    "end": "194720"
  },
  {
    "text": "kafka was uh set up without any authentication at all meaning that data",
    "start": "194720",
    "end": "200080"
  },
  {
    "text": "was available for anyone with access to the cluster inside our networks",
    "start": "200080",
    "end": "208280"
  },
  {
    "text": "um we the uh we have a lot of tenants um",
    "start": "208280",
    "end": "214640"
  },
  {
    "text": "meaning independent teams that that work on their own schedule uh they typically use micros service architecture meaning",
    "start": "214640",
    "end": "222400"
  },
  {
    "text": "we have a thousand of workloads running in our Kubernetes clusters",
    "start": "222400",
    "end": "228000"
  },
  {
    "text": "so um at some point there was a new major project on the horizon which was",
    "start": "228000",
    "end": "234319"
  },
  {
    "text": "supposed to uh take care of automatic balancing of the market of energy um",
    "start": "234319",
    "end": "242120"
  },
  {
    "text": "and it was really no option to keep this situation without uh any authentication",
    "start": "242120",
    "end": "248159"
  },
  {
    "text": "we had to secure the data so we started looking into this and",
    "start": "248159",
    "end": "253519"
  },
  {
    "text": "um we first we decided we wanted to use the native authorization mechanism in",
    "start": "253519",
    "end": "259199"
  },
  {
    "text": "Kafka which is called Kafka ACL but we needed to find a way to authenticate",
    "start": "259199",
    "end": "265120"
  },
  {
    "text": "these workloads uh so just going to touch into what options",
    "start": "265120",
    "end": "272960"
  },
  {
    "text": "you have with Kafka you basically have two options you can either use uh what Kafka call susle",
    "start": "272960",
    "end": "279919"
  },
  {
    "text": "uh that there exists some variants of it but the in general it requires you to be",
    "start": "279919",
    "end": "287199"
  },
  {
    "text": "integrated with an identity provider and also requiring some kind of registration",
    "start": "287199",
    "end": "292960"
  },
  {
    "text": "process in the identity provider uh in addition you have the option of",
    "start": "292960",
    "end": "299680"
  },
  {
    "text": "using SSL uh which is also the Kafka name for it which means you can authenticate using",
    "start": "299680",
    "end": "308479"
  },
  {
    "text": "MTLS um we work in an organization with uh",
    "start": "308759",
    "end": "315039"
  },
  {
    "text": "working in a traditional way so a lot of manual processes so we wanted to investigate the NTLS option first",
    "start": "315039",
    "end": "323759"
  },
  {
    "text": "um in order to not be dependent on any registration process in in any identity",
    "start": "323759",
    "end": "329800"
  },
  {
    "text": "provider uh so we looked at how it works in Kafka and we soon find out that Kafka",
    "start": "329800",
    "end": "335360"
  },
  {
    "text": "doesn't support certificate revocations so that was an important take from from",
    "start": "335360",
    "end": "340400"
  },
  {
    "text": "from this initial uh discovery that we had to head for relatively short",
    "start": "340400",
    "end": "347280"
  },
  {
    "text": "lifetime of the certificate",
    "start": "347280",
    "end": "351160"
  },
  {
    "text": "so to do the authentication we of as you say we we add wanted to add MTLS",
    "start": "353000",
    "end": "360240"
  },
  {
    "text": "authentication um for since we had a lot of",
    "start": "360240",
    "end": "366840"
  },
  {
    "text": "microservices we were sure that we really had to automate this there was no way we're going to going to handle uh",
    "start": "366840",
    "end": "373520"
  },
  {
    "text": "the numbers here with uh the number of application and also the short lifetime",
    "start": "373520",
    "end": "380400"
  },
  {
    "text": "For the same reason we uh we wanted uh our users to be self-provisioning",
    "start": "381840",
    "end": "387680"
  },
  {
    "text": "provision because they they wanted to work independently and be able to do",
    "start": "387680",
    "end": "392800"
  },
  {
    "text": "this without having to go through some kind of manual process asking",
    "start": "392800",
    "end": "397840"
  },
  {
    "text": "um for certificates so first of all we did some",
    "start": "397840",
    "end": "402960"
  },
  {
    "text": "proof of concept uh you probably have heard of this um",
    "start": "402960",
    "end": "408560"
  },
  {
    "text": "open- source project Spiffy and Spir uh they look pretty interesting since they",
    "start": "408560",
    "end": "414639"
  },
  {
    "text": "really tailor for what we're trying to do here uh about workload identities so we decided to try that",
    "start": "414639",
    "end": "422599"
  },
  {
    "text": "first um so we tried to set up Spy but we had some challenges running it on our",
    "start": "422599",
    "end": "429360"
  },
  {
    "text": "target Kubernetes clusters which are Open Shift uh this is caused by uh open shift",
    "start": "429360",
    "end": "436960"
  },
  {
    "text": "enforcing s Linux and some of the spir components uh are conflicting with uh",
    "start": "436960",
    "end": "444080"
  },
  {
    "text": "some some of some as Linux policies which means you have to do additional work uh most of these issues are solved",
    "start": "444080",
    "end": "450960"
  },
  {
    "text": "now there's still one open there's a link there but there is a even a workar",
    "start": "450960",
    "end": "456319"
  },
  {
    "text": "around available for it so now we we run spy in uh our dev",
    "start": "456319",
    "end": "463000"
  },
  {
    "text": "cluster but at the time we did we couldn't make it work so we had to look for something else uh so we found search",
    "start": "463000",
    "end": "470520"
  },
  {
    "text": "manager it looked pretty interesting since we are uh uh working",
    "start": "470520",
    "end": "476000"
  },
  {
    "text": "in an airgap environment we cannot use search manager for the most typical use case which is to get certificates from",
    "start": "476000",
    "end": "482879"
  },
  {
    "text": "let's encrypt um after the work with Spiffy and Spy we wanted to take something out",
    "start": "482879",
    "end": "489440"
  },
  {
    "text": "of it uh the X509 SVIDS so we set a goal of of trying to use SER manager to",
    "start": "489440",
    "end": "497039"
  },
  {
    "text": "create certificate that look like they could come from Spir that means uh the",
    "start": "497039",
    "end": "502800"
  },
  {
    "text": "certificate should contain a URI attribute and uh here is one example on",
    "start": "502800",
    "end": "508639"
  },
  {
    "text": "on how a a spiffy ID might look like for a Kubernetes workload in our in our case we decided",
    "start": "508639",
    "end": "515760"
  },
  {
    "text": "to define the trust domain which is kind of the host name if you look at this as a URL so you know which which cluster",
    "start": "515760",
    "end": "522399"
  },
  {
    "text": "the workload lives in uh and it also vital for us to know which name space the workload is running in uh because we",
    "start": "522399",
    "end": "531200"
  },
  {
    "text": "use a multi-tenant model where the tenants share the cluster so one tenant will have one name space or multiple",
    "start": "531200",
    "end": "537920"
  },
  {
    "text": "namespace and other tenants will have other namespaces so that was very important for us we didn't care too much",
    "start": "537920",
    "end": "543120"
  },
  {
    "text": "about the service account at the point because that's inside the same namespace so it's it's governed by the same tenant",
    "start": "543120",
    "end": "550240"
  },
  {
    "text": "but there is a huge challenge with the with search manager in itself because search manager is made for making it",
    "start": "550240",
    "end": "555600"
  },
  {
    "text": "easy to to to issue certificates so considering the",
    "start": "555600",
    "end": "561160"
  },
  {
    "text": "multi-tenency we first of all had to prevent their tenants to tip on each",
    "start": "561160",
    "end": "566320"
  },
  {
    "text": "other toes you should only get a certificate which the tenant is entitled to receive",
    "start": "566320",
    "end": "572640"
  },
  {
    "text": "and we also wanted some way of enforcing the uh xfag svids because we're going to",
    "start": "572640",
    "end": "577680"
  },
  {
    "text": "use that information on the authorization layer in Kafka with the Kafka",
    "start": "577680",
    "end": "584640"
  },
  {
    "text": "ACL so for the v1 version um which we had a very short uh deadline for about 6",
    "start": "586040",
    "end": "593399"
  },
  {
    "text": "months we had to solve this really fast and cut some corners i'm going to say",
    "start": "593399",
    "end": "599760"
  },
  {
    "text": "how we explain how we did it the first one was to try to set up",
    "start": "599760",
    "end": "606399"
  },
  {
    "text": "search manager for multi-tenency uh we use private PI meaning we have a shared common uh root",
    "start": "606399",
    "end": "613200"
  },
  {
    "text": "CA and uh we are supposed to use it we could of course create our own PKI but",
    "start": "613200",
    "end": "618560"
  },
  {
    "text": "that was not an option that we thought was very interesting",
    "start": "618560",
    "end": "624640"
  },
  {
    "text": "so um we decided to set up a cluster issuer and since a cluster issuer is",
    "start": "624640",
    "end": "630560"
  },
  {
    "text": "available throughout the cluster we needed a way to to control the access to this search manager",
    "start": "630560",
    "end": "637560"
  },
  {
    "text": "issuer so the first thing we did was to disable the arbback permissions for uh",
    "start": "637560",
    "end": "644160"
  },
  {
    "text": "access to the search manager custom resources but that only solves part of the problem",
    "start": "644160",
    "end": "651720"
  },
  {
    "text": "because the search manager also have the ingress shim enabled by default so we had to disable it because",
    "start": "651720",
    "end": "660880"
  },
  {
    "text": "uh if the ingression is enabled you can just get a certificate by annotating an",
    "start": "660880",
    "end": "666120"
  },
  {
    "text": "ingress and our users are pretty self-provisioned for other resources in the cluster and we didn't want to change",
    "start": "666120",
    "end": "674040"
  },
  {
    "text": "that at the time we could uh also not consider any CSI drivers for the same",
    "start": "674040",
    "end": "680480"
  },
  {
    "text": "reasons because they're they all end up in the certificate request that we wanted to block our user from getting",
    "start": "680480",
    "end": "685920"
  },
  {
    "text": "access to so now we had everything locked down but how would our users get access",
    "start": "685920",
    "end": "692480"
  },
  {
    "text": "to to this feature controllers of",
    "start": "692480",
    "end": "698600"
  },
  {
    "text": "course can you see this it might be a bit small no it's okay on the top um we",
    "start": "698600",
    "end": "704480"
  },
  {
    "text": "have the green box uh saying application operator this was an operator we already had in our clusters uh with it the main",
    "start": "704480",
    "end": "712079"
  },
  {
    "text": "goal of this operator is to provide a simplified way for our users to schedule a workload it it basically creates a",
    "start": "712079",
    "end": "719519"
  },
  {
    "text": "deployment uh as a minimum and and then by by adjusting the the spec",
    "start": "719519",
    "end": "725279"
  },
  {
    "text": "specification on the application resource you can enable more feature without having to create all the",
    "start": "725279",
    "end": "730560"
  },
  {
    "text": "underlying resources so it's very opinionated application resource so the first thing this must",
    "start": "730560",
    "end": "737680"
  },
  {
    "text": "must be available for the users that are using application resource but we didn't",
    "start": "737680",
    "end": "742800"
  },
  {
    "text": "we we didn't want to force our users to use applications because we have other users that are using other types of",
    "start": "742800",
    "end": "748399"
  },
  {
    "text": "workloads like a stateful set or doing other stuff so we decided in this case",
    "start": "748399",
    "end": "753440"
  },
  {
    "text": "to use the service account as the controller for the feature",
    "start": "753440",
    "end": "760000"
  },
  {
    "text": "so by just adding a simple annotation to the service account uh we created a new controller identity",
    "start": "760000",
    "end": "767120"
  },
  {
    "text": "provider which watches the service accounts and uh interacts with sort",
    "start": "767120",
    "end": "772399"
  },
  {
    "text": "manager creating a resource matching that service account um and then sort manager kicks",
    "start": "772399",
    "end": "780480"
  },
  {
    "text": "in and and does it its usual stuff you're probably aware of this uh it issues the certificate and returns the",
    "start": "780480",
    "end": "786959"
  },
  {
    "text": "certificate inside a secret uh which can then can be mounted by by",
    "start": "786959",
    "end": "792560"
  },
  {
    "text": "the by the workload pods we're going to look a bit more into",
    "start": "792560",
    "end": "798000"
  },
  {
    "text": "details here uh you're probably familiar with this but uh maybe not all of",
    "start": "798000",
    "end": "803399"
  },
  {
    "text": "you so manager uh returns a certificate in",
    "start": "803399",
    "end": "809360"
  },
  {
    "text": "in a secret together with a private key this allows a workload like in this case",
    "start": "809360",
    "end": "815920"
  },
  {
    "text": "the Kafka client to mount TLS.CRT and TLS.key and by this way it's possible to",
    "start": "815920",
    "end": "823600"
  },
  {
    "text": "enable an MTLS to the Kafka cluster which has is uh certificate and private",
    "start": "823600",
    "end": "831079"
  },
  {
    "text": "key but there is a minor challenge here we also need uh",
    "start": "831079",
    "end": "837120"
  },
  {
    "text": "some trust establishments but in our case we are kind of lucky because we're using our",
    "start": "837120",
    "end": "843440"
  },
  {
    "text": "internal PI and the all certificates are rooted in our shared company",
    "start": "843440",
    "end": "849600"
  },
  {
    "text": "CA that's why I say on the top here don't do this um but I said we we just",
    "start": "850199",
    "end": "855760"
  },
  {
    "text": "have six months so we had to cut some corners this was one of them we knew it was wrong s manager provides also CA crt",
    "start": "855760",
    "end": "863519"
  },
  {
    "text": "inside the certificate secret and since it's actually contains the certificate we were looking for company CA we",
    "start": "863519",
    "end": "870959"
  },
  {
    "text": "decided to mount CA.CRT inside the pod and use that as",
    "start": "870959",
    "end": "876079"
  },
  {
    "text": "the trust anchor for the Kafka client and this is obviously wrong and",
    "start": "876079",
    "end": "881600"
  },
  {
    "text": "Tim will explain more why yes so if you're doing this please",
    "start": "881600",
    "end": "890320"
  },
  {
    "text": "um pay attention because like Eric said this is not what you should be doing um",
    "start": "890320",
    "end": "896320"
  },
  {
    "text": "actually the first resource you can kind of um look at if you are in this situation",
    "start": "896320",
    "end": "902880"
  },
  {
    "text": "is our website we have a page there where we",
    "start": "902880",
    "end": "907920"
  },
  {
    "text": "um give a couple of bullet points on why you shouldn't do this uh the one that applies here is that by directly",
    "start": "907920",
    "end": "916639"
  },
  {
    "text": "mounting CA.CRT CRT it's very hard or it's impossible basically to do a um CA",
    "start": "916639",
    "end": "923279"
  },
  {
    "text": "root rotation if or it's impossible to do a CA root",
    "start": "923279",
    "end": "929199"
  },
  {
    "text": "rotation if you don't want to have any downtime so any rotation will will result in downtime because there is",
    "start": "929199",
    "end": "936079"
  },
  {
    "text": "actually a proper process that you have to go through to do root rotation which is impossible with this CA crt um and in",
    "start": "936079",
    "end": "943839"
  },
  {
    "text": "this example there's actually another problem um and that is that we are using",
    "start": "943839",
    "end": "949560"
  },
  {
    "text": "the CA of the the Kafka client u chain",
    "start": "949560",
    "end": "955040"
  },
  {
    "text": "certificate chain while what we actually want to verify is of course the identity",
    "start": "955040",
    "end": "960160"
  },
  {
    "text": "of the Kafka server so for example um one case in which this will go wrong is",
    "start": "960160",
    "end": "967199"
  },
  {
    "text": "if the cuffer client is suddenly rooted in a different CA in the new company",
    "start": "967199",
    "end": "973880"
  },
  {
    "text": "CA so in this case what will happen is because we are mounting the CA crt in",
    "start": "973880",
    "end": "980880"
  },
  {
    "text": "the client in the trust store the client will suddenly only start trusting the um",
    "start": "980880",
    "end": "987600"
  },
  {
    "text": "certificates rooted in the new company CA but like we said before the Kafka's",
    "start": "987600",
    "end": "992959"
  },
  {
    "text": "cluster is still using the old company CA and so this is like this weird situation where because the Kafka client",
    "start": "992959",
    "end": "999440"
  },
  {
    "text": "actually changed root CA is also started trusting a different uh CA so what we",
    "start": "999440",
    "end": "1005839"
  },
  {
    "text": "should do instead is we should actually trust the company CA um the root of this",
    "start": "1005839",
    "end": "1011600"
  },
  {
    "text": "cluster CA uh chain so this is actually the right arrow that we should draw um",
    "start": "1011600",
    "end": "1017519"
  },
  {
    "text": "but this is not that easy because that isn't normally available in the cluster",
    "start": "1017519",
    "end": "1022720"
  },
  {
    "text": "eric like he said he had that CA crt available so he just used it um and also",
    "start": "1022720",
    "end": "1029360"
  },
  {
    "text": "in his case this wasn't like a different CA so he didn't see any problems but once you're kind of changing your setup",
    "start": "1029360",
    "end": "1036079"
  },
  {
    "text": "then you get into these problems and this is like an instant way to get uh you",
    "start": "1036079",
    "end": "1041438"
  },
  {
    "text": "into some trouble and to get some downtime um there's actually a good solution for",
    "start": "1041439",
    "end": "1047678"
  },
  {
    "text": "this um something that Eric I think implemented in his next version of his tool or his setup yeah just showing this",
    "start": "1047679",
    "end": "1055679"
  },
  {
    "text": "uh short title slide uh there were some issues in V1 uh it's it was running in",
    "start": "1055679",
    "end": "1061600"
  },
  {
    "text": "production there were no real issues with it uh and it was a huge success but",
    "start": "1061600",
    "end": "1068640"
  },
  {
    "text": "uh we started knowing that a root rotation was approaching so we needed to",
    "start": "1068640",
    "end": "1074960"
  },
  {
    "text": "solve this some way because we didn't want our workloads to break break down",
    "start": "1074960",
    "end": "1080480"
  },
  {
    "text": "uh and we also had requests for using search manager for other use cases so the way we had to lock down search",
    "start": "1080480",
    "end": "1087360"
  },
  {
    "text": "manager was really unfortunate so we're looking for ways to to solve this and Tim will explain more about how we we",
    "start": "1087360",
    "end": "1094400"
  },
  {
    "text": "solved the first thing so in this slide you can actually see",
    "start": "1094400",
    "end": "1099679"
  },
  {
    "text": "what you should do instead of what Eric did with the c.crt um field of the certificate of the",
    "start": "1099679",
    "end": "1106160"
  },
  {
    "text": "secrets instead what you should use is trust manager another project that we have um I'm a great salesman I know uh",
    "start": "1106160",
    "end": "1114240"
  },
  {
    "text": "so this is uh another controller that you install on the cluster and you configure it through these bundle",
    "start": "1114240",
    "end": "1120320"
  },
  {
    "text": "resources which is a custom resource that you can uh use once you install trust manager and basically trust",
    "start": "1120320",
    "end": "1127520"
  },
  {
    "text": "manager kind of allows you to configure a set of sources containing a set of uh",
    "start": "1127520",
    "end": "1132640"
  },
  {
    "text": "certificates that you want to trust and then as output",
    "start": "1132640",
    "end": "1137760"
  },
  {
    "text": "uh of this bundle actually new config maps are created across different namespaces that you can then mount in",
    "start": "1137760",
    "end": "1142960"
  },
  {
    "text": "your uh container where you actually wanting to have those certificates in your",
    "start": "1142960",
    "end": "1148039"
  },
  {
    "text": "trust bundle um so in this case we have a bundle that contains company CA and",
    "start": "1148039",
    "end": "1156080"
  },
  {
    "text": "the cafe client chain is has migrated to new company but that's not a problem because the trust bundle is still uh",
    "start": "1156080",
    "end": "1163200"
  },
  {
    "text": "containing company C instead so the caf client will actually be able to do MTLS without any issues",
    "start": "1163200",
    "end": "1169280"
  },
  {
    "text": "so what happens now if we also decide that the Kafka server or the Kafka",
    "start": "1169280",
    "end": "1174320"
  },
  {
    "text": "cluster um wants to migrate to the new CA right then in order to do that",
    "start": "1174320",
    "end": "1180160"
  },
  {
    "text": "without any downtime the first thing you have to do before you do anything is you actually want to make sure that all the",
    "start": "1180160",
    "end": "1185440"
  },
  {
    "text": "clients also start trusting the new company CA and the easy way to do that with this with this trust manager bundle",
    "start": "1185440",
    "end": "1191760"
  },
  {
    "text": "and that this wasn't be possible before with with the CARTT field is you",
    "start": "1191760",
    "end": "1196960"
  },
  {
    "text": "actually just add another CA to this trust bundle so you add the new company CA to the trust bundle and now the",
    "start": "1196960",
    "end": "1204360"
  },
  {
    "text": "client just supports both and once you do this and once you",
    "start": "1204360",
    "end": "1209679"
  },
  {
    "text": "restart all clients make sure that they all load in this new um trust bundle you can actually start porting",
    "start": "1209679",
    "end": "1216960"
  },
  {
    "text": "over all the Kafka clusters to the new company CA to identities that root in this new company CA because those will",
    "start": "1216960",
    "end": "1223039"
  },
  {
    "text": "be trusted by the client now too so you can have this mix of new company C identities and old company C8 identities",
    "start": "1223039",
    "end": "1230559"
  },
  {
    "text": "um and once you fully migrate to all new company CA identities you can actually untrust the old company",
    "start": "1230559",
    "end": "1236919"
  },
  {
    "text": "CA so that's the full migration kind of explained and that's why you should use trust manager because this is not",
    "start": "1236919",
    "end": "1242880"
  },
  {
    "text": "possible to do um without any downtime if you're just using CA.RT then it will just instantaneously switch from company",
    "start": "1242880",
    "end": "1250000"
  },
  {
    "text": "CA to new company CA and like half of your applications will break uh this is what the resource looks like",
    "start": "1250000",
    "end": "1256320"
  },
  {
    "text": "in YAML so you have this bundle um with a set of sources defined that",
    "start": "1256320",
    "end": "1263200"
  },
  {
    "text": "live in config maps and then you have the target which is also config map a namespace selector which says in which",
    "start": "1263200",
    "end": "1269760"
  },
  {
    "text": "conf in which name spaces these config maps should be created so that the there they are available to be mounted the",
    "start": "1269760",
    "end": "1275080"
  },
  {
    "text": "pots and then Eric will now explain in more detail the second problem he solved",
    "start": "1275080",
    "end": "1280159"
  },
  {
    "text": "in V2 yeah the second problem was that we wanted to unlock search manager again but we still had the same requirements",
    "start": "1280159",
    "end": "1286559"
  },
  {
    "text": "that I introduced with um after some time a new project popped up called",
    "start": "1286559",
    "end": "1292320"
  },
  {
    "text": "approve a policy um that is a a a",
    "start": "1292320",
    "end": "1297600"
  },
  {
    "text": "plug-in for search manager which allows you to define policies uh of what how the certificate should",
    "start": "1297600",
    "end": "1303679"
  },
  {
    "text": "look like and where they should be available uh in our case they were almost feature complete for what we try",
    "start": "1303679",
    "end": "1310080"
  },
  {
    "text": "trying to solve at least on the um on some parts of it but what we were missing was to kind of uh attach the",
    "start": "1310080",
    "end": "1317600"
  },
  {
    "text": "policy to the name space because since we again are running multiple tenants in in a cluster we want to ensure that uh",
    "start": "1317600",
    "end": "1325360"
  },
  {
    "text": "the certificates somehow is linked to where the namespace of the certificate is",
    "start": "1325360",
    "end": "1330919"
  },
  {
    "text": "requested but that was solved by contributing the cell support which is a really cool feature uh I think",
    "start": "1330919",
    "end": "1337120"
  },
  {
    "text": "personally so it can be have a lot of other use cases you probably know cell from from upstream kubernetes",
    "start": "1337120",
    "end": "1343760"
  },
  {
    "text": "uh now Tim is going to explain a bit more on the details of approval policy",
    "start": "1343760",
    "end": "1349440"
  },
  {
    "text": "yes so by sorry sorry um so by introducing approval policy we could",
    "start": "1349440",
    "end": "1356000"
  },
  {
    "text": "reverse all the things that we have done uh previously so now certificates and",
    "start": "1356000",
    "end": "1361280"
  },
  {
    "text": "certificate requests were available and also in grion we want to experiment with And we are also considering uh the CSI",
    "start": "1361280",
    "end": "1368159"
  },
  {
    "text": "driver sorry about that yes so as Eric explained he opened up the all these",
    "start": "1368159",
    "end": "1375200"
  },
  {
    "text": "resources again to his tenants but now we need a different way to kind of protect uh which certificates are being",
    "start": "1375200",
    "end": "1381360"
  },
  {
    "text": "issued and which are not and so the way you do that is through these approval plugins",
    "start": "1381360",
    "end": "1388440"
  },
  {
    "text": "so let's go through the whole flow here okay so a tenant creates a certificate",
    "start": "1388440",
    "end": "1394000"
  },
  {
    "text": "that results in a certificate request being created automatically or they can also directly create a certificate",
    "start": "1394000",
    "end": "1399600"
  },
  {
    "text": "request automatic uh manually and then a certificate request is really the",
    "start": "1399600",
    "end": "1404799"
  },
  {
    "text": "resource that will be considered by a sub manager issuer but before that happens the issuer will actually check",
    "start": "1404799",
    "end": "1411600"
  },
  {
    "text": "does this certificate request have a a um a condition a approval condition that",
    "start": "1411600",
    "end": "1418400"
  },
  {
    "text": "is set to approved if it doesn't have that it will actually wait if it has one that's set to denied it will actually",
    "start": "1418400",
    "end": "1423600"
  },
  {
    "text": "say \"Okay I'll not do anything with this uh certificate request.\" So by default when you install S manager there's this",
    "start": "1423600",
    "end": "1430400"
  },
  {
    "text": "approve all approver which approves all the certific requests it sees which is great to get started but what Eric",
    "start": "1430400",
    "end": "1436880"
  },
  {
    "text": "needed is some more control um and for that you can actually disable",
    "start": "1436880",
    "end": "1442559"
  },
  {
    "text": "the default approver and instead use approved policy an approved policy is this plug-in that you can configure",
    "start": "1442559",
    "end": "1447600"
  },
  {
    "text": "through these certificate request policy resources this is basically a",
    "start": "1447600",
    "end": "1452640"
  },
  {
    "text": "description of what certificate requests you want to approve",
    "start": "1452640",
    "end": "1457919"
  },
  {
    "text": "um when you see them so in this case this is a policy that will approve",
    "start": "1457919",
    "end": "1464000"
  },
  {
    "text": "client certificates and the one check that it will perform here is that all the URIs",
    "start": "1464000",
    "end": "1469360"
  },
  {
    "text": "in the client certificates actually uh starts with this spiffy prefix and the",
    "start": "1469360",
    "end": "1476000"
  },
  {
    "text": "spiffy prefix in this case contains the name space of this certificate request resource so that way we are sure that",
    "start": "1476000",
    "end": "1482400"
  },
  {
    "text": "when a certificate request is created um before it gets issued we actually",
    "start": "1482400",
    "end": "1488480"
  },
  {
    "text": "make sure that the uh URI in that in that certificate request actually matches the name space in which the",
    "start": "1488480",
    "end": "1494799"
  },
  {
    "text": "certificate request lives and that way uh we make sure that there's like no certific request created for another",
    "start": "1494799",
    "end": "1500799"
  },
  {
    "text": "tenant or another namespace um in Eric's setup the same you can also use to",
    "start": "1500799",
    "end": "1508159"
  },
  {
    "text": "configure server certificates and here instead we actually do checks on the DNS names",
    "start": "1508159",
    "end": "1513279"
  },
  {
    "text": "instead also check that they this case have a suffix with uh the name",
    "start": "1513279",
    "end": "1520039"
  },
  {
    "text": "space so to to conclude when you want to scale your TLS setup there are three",
    "start": "1520039",
    "end": "1527440"
  },
  {
    "text": "things that are very important but first scale is kind of a very hard problem to",
    "start": "1527440",
    "end": "1533520"
  },
  {
    "text": "solve um because you have many certificates you also have many tenants",
    "start": "1533520",
    "end": "1538799"
  },
  {
    "text": "which different requirements with different requirements um also many clusters possible so the",
    "start": "1538799",
    "end": "1545200"
  },
  {
    "text": "first thing you want to solve is you want to automate like the very basics you want to automate the certificate life cycle um and also the distribution",
    "start": "1545200",
    "end": "1552720"
  },
  {
    "text": "so for that use search manager trust manager the second thing that we saw is you want to make sure that once that is",
    "start": "1552720",
    "end": "1558760"
  },
  {
    "text": "automated you can give the tenants in your setup the ability to kind of",
    "start": "1558760",
    "end": "1564799"
  },
  {
    "text": "self-provision everything um but you want them to be able to do that without",
    "start": "1564799",
    "end": "1569919"
  },
  {
    "text": "breaking all the tenants so you set up policies um and these policies you can",
    "start": "1569919",
    "end": "1575360"
  },
  {
    "text": "configure through approval policy and then the last one we didn't really talk about this um but it's also very",
    "start": "1575360",
    "end": "1580799"
  },
  {
    "text": "important you have to make sure that all your automation is monitored so that when something goes wrong when automation breaks you get an alert or",
    "start": "1580799",
    "end": "1587440"
  },
  {
    "text": "when a policy is not adhered to uh you also are notified of that so that's the",
    "start": "1587440",
    "end": "1594240"
  },
  {
    "text": "conclusion thank you for listening i would like to hear if there are any questions and any kind of feedback you",
    "start": "1594240",
    "end": "1599440"
  },
  {
    "text": "can leave through this QR code thank you",
    "start": "1599440",
    "end": "1603799"
  },
  {
    "text": "microphone there if uh questions",
    "start": "1609279",
    "end": "1613880"
  },
  {
    "text": "how are you doing the monitoring um well there are multiple different",
    "start": "1616080",
    "end": "1621600"
  },
  {
    "text": "solutions for that i think I'm not sure which one Eric is using i think maybe some matrix metrics prometrius metrics",
    "start": "1621600",
    "end": "1628880"
  },
  {
    "text": "yes and like the cube states matrix or Yeah we use some of this i'm looking in",
    "start": "1628880",
    "end": "1635279"
  },
  {
    "text": "this direction my clustering is here also um we also set up some custom",
    "start": "1635279",
    "end": "1640480"
  },
  {
    "text": "monitoring of the CA um because we want to know what's the",
    "start": "1640480",
    "end": "1645600"
  },
  {
    "text": "earliest certificate that expires in your chain and get an early warning about that one so we we typically use",
    "start": "1645600",
    "end": "1653640"
  },
  {
    "text": "Prometheus Grafana there also very various uh",
    "start": "1653640",
    "end": "1660720"
  },
  {
    "text": "commercial solutions available for that mount the trust bundle in the pod do you",
    "start": "1660720",
    "end": "1668159"
  },
  {
    "text": "mount it the normal way because the trust bundle is delivered as a in a config map",
    "start": "1668159",
    "end": "1674080"
  },
  {
    "text": "if it changes then how oh that's a good question I had actually in my recent",
    "start": "1674080",
    "end": "1680480"
  },
  {
    "text": "presentation prepared we use a community project called Reloader some of you",
    "start": "1680480",
    "end": "1685760"
  },
  {
    "text": "might have heard of it so that way it it watches a config map or a secret and",
    "start": "1685760",
    "end": "1690960"
  },
  {
    "text": "whenever it changes uh it will trigger a rolling update of your workload",
    "start": "1690960",
    "end": "1697520"
  },
  {
    "text": "that's also very important for the certificates themselves when they change the trust store probably won't",
    "start": "1697520",
    "end": "1703520"
  },
  {
    "text": "change that much but the certificate itself when it changes you must make sure that the application loads a new",
    "start": "1703520",
    "end": "1709840"
  },
  {
    "text": "certificate in time otherwise you'll have uh downtime basically first over there hi when you were initially doing",
    "start": "1709840",
    "end": "1717200"
  },
  {
    "text": "the migrations and when you had the thousand services um and using the trust bundle uh did you have any issues like",
    "start": "1717200",
    "end": "1723760"
  },
  {
    "text": "for example when I when I when I got used There was an issue where some of",
    "start": "1723760",
    "end": "1729360"
  },
  {
    "text": "the services were using like some certain libraries which all which were only checking the first certificate in",
    "start": "1729360",
    "end": "1734399"
  },
  {
    "text": "the bundle uh no looking at the change we didn't have a problem with that there",
    "start": "1734399",
    "end": "1740960"
  },
  {
    "text": "are no change in the CI bundle there's only typically only root certificates like self-signed certificates in the",
    "start": "1740960",
    "end": "1747440"
  },
  {
    "text": "bundle you have the root yeah but they're both self-signed so they're not chains really",
    "start": "1747440",
    "end": "1754000"
  },
  {
    "text": "they're they're form different chains there yeah don't use that",
    "start": "1754000",
    "end": "1762000"
  },
  {
    "text": "um do you have an issue have you compared issuers with your private CA um",
    "start": "1762000",
    "end": "1767360"
  },
  {
    "text": "or you have a signing certificate in cluster uh we had different solution over time",
    "start": "1767360",
    "end": "1773279"
  },
  {
    "text": "we started out with a CA issuer uh we we so we had to order a",
    "start": "1773279",
    "end": "1779120"
  },
  {
    "text": "intermediate or subordinate CA inside our private PI which we initially",
    "start": "1779120",
    "end": "1784159"
  },
  {
    "text": "installed as a CIA issure it's not recommended it's it's not that secure so now we're running it externally so we",
    "start": "1784159",
    "end": "1790480"
  },
  {
    "text": "run it in Hashik of vault using the PI engine so manager just sends the",
    "start": "1790480",
    "end": "1795679"
  },
  {
    "text": "certificate signing request to vault and you get the signed certificate back so manager takes care of the of the",
    "start": "1795679",
    "end": "1802640"
  },
  {
    "text": "automation and and all this renewal and I think that allows us also to set up",
    "start": "1802640",
    "end": "1807840"
  },
  {
    "text": "extra uh security in vault because we also",
    "start": "1807840",
    "end": "1812880"
  },
  {
    "text": "have the the policy again repeated in vault so as an extra layer yep thank you",
    "start": "1812880",
    "end": "1821120"
  },
  {
    "text": "the one thing that you cannot do or that's harder to do is um in fault you",
    "start": "1821120",
    "end": "1826720"
  },
  {
    "text": "cannot say for example that the name space has to be in the URI so therefore you need approved policy cuz it isn't",
    "start": "1826720",
    "end": "1833440"
  },
  {
    "text": "aware of what namespace is so you could also solve that by having like different issuers in each name space that makes it",
    "start": "1833440",
    "end": "1839760"
  },
  {
    "text": "so that you have you have to have very a lot of uh different issuers basically but we also we we used the the policies",
    "start": "1839760",
    "end": "1847039"
  },
  {
    "text": "involved to kind of we have one issue per cluster so we ensure the first part of the spiffy id so we know that uh",
    "start": "1847039",
    "end": "1854080"
  },
  {
    "text": "we're not having environments going across",
    "start": "1854080",
    "end": "1859720"
  },
  {
    "text": "Any more questions",
    "start": "1860240",
    "end": "1863799"
  },
  {
    "text": "okay thank you for listening thank you",
    "start": "1865919",
    "end": "1870440"
  }
]