[
  {
    "text": "thanks everyone for coming uh my name is wano Kaiser I'm with Nvidia in the cloud native team um my main responsibilities",
    "start": "160",
    "end": "8000"
  },
  {
    "text": "are kada and confidential containers and today I want to talk about a topic from Silicon to service the full stack",
    "start": "8000",
    "end": "15200"
  },
  {
    "text": "ensuring confidentiality in sess GPU clo functions so who has been in uh cucon EU",
    "start": "15200",
    "end": "23480"
  },
  {
    "text": "in Paris may have seen my talk on confident confidential containers with GPU and Rec LMS so just recap what we've",
    "start": "23480",
    "end": "30320"
  },
  {
    "text": "done in the space right uh I talked about the road to confidential Computing what we've done in the space uh why",
    "start": "30320",
    "end": "36200"
  },
  {
    "text": "we've chosen Kata for for implementing confidential compute with the gpus on",
    "start": "36200",
    "end": "42640"
  },
  {
    "text": "kubernetes uh explained a little bit about the GPU enablement stack uh the virualization reference architecture uh",
    "start": "42640",
    "end": "48600"
  },
  {
    "text": "what we need to take care about um to enable Advanced use cases like GPU direct RDMA or GDs uh how we implemented",
    "start": "48600",
    "end": "56440"
  },
  {
    "text": "confidential containers and then as an example uh how we can run regular lamps",
    "start": "56440",
    "end": "61719"
  },
  {
    "text": "with confidential containers um I link the recording so if everybody interested on the lowlevel details what I've done",
    "start": "61719",
    "end": "67200"
  },
  {
    "text": "in this space uh go check it out um today I want to expand on the use",
    "start": "67200",
    "end": "74320"
  },
  {
    "text": "cases that we are doing with confidential containers and uh role of the working groups that we established",
    "start": "74320",
    "end": "80000"
  },
  {
    "text": "in the Upstream community so one of the working groups is our confidential",
    "start": "80000",
    "end": "85280"
  },
  {
    "text": "containers use case working group um different companies from IBM M redhead",
    "start": "85280",
    "end": "90720"
  },
  {
    "text": "uh Nvidia uh Intel IMD are involved in all of this and we identified three",
    "start": "90720",
    "end": "96399"
  },
  {
    "text": "major use cases that we want to enable and push forward Upstream uh number one",
    "start": "96399",
    "end": "101759"
  },
  {
    "text": "is Federated learning uh which includes um a data clean room so we have",
    "start": "101759",
    "end": "107880"
  },
  {
    "text": "different peers and integration server working in one confidential environment",
    "start": "107880",
    "end": "113200"
  },
  {
    "text": "so we need to share this environment and provide a data clean room for multiple personas uh which also ties into multi",
    "start": "113200",
    "end": "119520"
  },
  {
    "text": "party Computing right it's not only a single note where we running a confidential container it's multiple notes and we need to take care care of",
    "start": "119520",
    "end": "125920"
  },
  {
    "text": "that um the other big topic is of course if you're running a confidential environment everything needs to be",
    "start": "125920",
    "end": "131480"
  },
  {
    "text": "trusted be it your build pipeline your cicd pipeline so we have several members",
    "start": "131480",
    "end": "136840"
  },
  {
    "text": "of our community they are working on the supply chain security right uh all things related to as bombs Provence uh",
    "start": "136840",
    "end": "143920"
  },
  {
    "text": "cicd and repeatability of of builds and attestation of builds and deliverables that we are having in the Enclave or a",
    "start": "143920",
    "end": "151040"
  },
  {
    "text": "confidential envirment uh and of course generative AI Rec llms nyss um how to",
    "start": "151040",
    "end": "157560"
  },
  {
    "text": "properly deploy them how to properly secure them um so essentially all of those use cases one thing in common we",
    "start": "157560",
    "end": "164000"
  },
  {
    "text": "have different parties running in the enclave and it we need to make sure that we are providing a clean room a",
    "start": "164000",
    "end": "170239"
  },
  {
    "text": "confidential clean room for all of those parties involved um I link also uh a",
    "start": "170239",
    "end": "175720"
  },
  {
    "text": "document of the Upstream community so you can read up on those use cases with some slides and presentation about",
    "start": "175720",
    "end": "184079"
  },
  {
    "text": "that um anybody working in a confidential Computing use case not",
    "start": "184120",
    "end": "189519"
  },
  {
    "text": "Red's architecture so we have a dedicated um working group that is",
    "start": "189519",
    "end": "195280"
  },
  {
    "text": "mainly focused on attestation uh trusty is our attestation pipeline in confidential containers um currently",
    "start": "195280",
    "end": "203319"
  },
  {
    "text": "most of the conventional environments are kind of concentrated on on one note",
    "start": "203319",
    "end": "209080"
  },
  {
    "text": "and doing the at a station at the beginning of the of the run but you have workloads that are running maybe for",
    "start": "209080",
    "end": "215560"
  },
  {
    "text": "weeks or for months and uh one thing we are looking into it is doing things like",
    "start": "215560",
    "end": "221000"
  },
  {
    "text": "periodic attestation runs so if you have a lot of noes coming in and coming out all those and attestation entities needs",
    "start": "221000",
    "end": "226959"
  },
  {
    "text": "to be uh attested and verified and also we want to um disable replay attacks",
    "start": "226959",
    "end": "233079"
  },
  {
    "text": "example if you have a confidential storage you want to may have a periodic run to verify that your confidential",
    "start": "233079",
    "end": "239760"
  },
  {
    "text": "storage is still in the state that you're expecting it um and then I said before we have multiple Persona support",
    "start": "239760",
    "end": "245560"
  },
  {
    "text": "imagine a a cloud provider is providing the infrastructure then you have the model",
    "start": "245560",
    "end": "250720"
  },
  {
    "text": "owner who is providing the third party model and then you have the the user who is maybe having x-ray images uh using",
    "start": "250720",
    "end": "257440"
  },
  {
    "text": "this model and every of those personas needs to be attested against each other and needs to be verified um so this is",
    "start": "257440",
    "end": "264479"
  },
  {
    "text": "also a big Topic in in our trusty working group how to accomplish this uh and then we have things like composite",
    "start": "264479",
    "end": "270440"
  },
  {
    "text": "attestation support So if you imagine you have a lot of attestation entities coming in and out of your confidential",
    "start": "270440",
    "end": "276080"
  },
  {
    "text": "environment um you want to make sure that you're not getting any race uh conditions and that um those attestation",
    "start": "276080",
    "end": "283639"
  },
  {
    "text": "of those entities um are being done in a proper manner and in the right time",
    "start": "283639",
    "end": "289320"
  },
  {
    "text": "because there are some timing attacks especially on the hardware level where you have different policies and testation runs so what we are thinking",
    "start": "289320",
    "end": "295360"
  },
  {
    "text": "is of how we can composite uh all those in testation entities maybe in one report or are we doing like a round",
    "start": "295360",
    "end": "302039"
  },
  {
    "text": "probin at the station on and stuff like that so those those are the questions that we try to answer um and how to do",
    "start": "302039",
    "end": "307280"
  },
  {
    "text": "it properly uh and then of course another big topic is runtime Integrity um systems can change during the runtime",
    "start": "307280",
    "end": "314479"
  },
  {
    "text": "and we want to catch that and if everything breaks we want to have uh a signal or some alert that something is",
    "start": "314479",
    "end": "321759"
  },
  {
    "text": "changed um as I said before most of the environments are single note um we need",
    "start": "321759",
    "end": "328080"
  },
  {
    "text": "also to care take care about a global State station so a global State about multiple notes multiple clusters or",
    "start": "328080",
    "end": "333880"
  },
  {
    "text": "maybe even multiple availability zones right so you have a global State and you need to attest your complete Global",
    "start": "333880",
    "end": "339120"
  },
  {
    "text": "State and of course identity management you need to know who is coming in into your secure Enclave who is coming out so",
    "start": "339120",
    "end": "344919"
  },
  {
    "text": "you always need a proper identity uh of your Hardware devices of your peers of",
    "start": "344919",
    "end": "350160"
  },
  {
    "text": "your notes of your everything that's coming in and coming out of your uh secq",
    "start": "350160",
    "end": "356680"
  },
  {
    "text": "enclave and really the the main focus of confidential containers is like the lift",
    "start": "357039",
    "end": "363080"
  },
  {
    "text": "and shift strategy that we have right run your code without any modifications so uh we have support for the major",
    "start": "363080",
    "end": "371160"
  },
  {
    "text": "Hardware te speed S&P TDX arm CCA uh risk 5 kov is coming and ibmse uh we can",
    "start": "371160",
    "end": "378360"
  },
  {
    "text": "run on any infrastructure be it on Prem CSP or or hybrid and and on also any",
    "start": "378360",
    "end": "384680"
  },
  {
    "text": "model of deployment be serverless or manage communities uh we are trying to enable all of those use this is uh with",
    "start": "384680",
    "end": "390680"
  },
  {
    "text": "with confidential containers meaning a pretty good lift and shift strategy so that you can run your container as a",
    "start": "390680",
    "end": "396360"
  },
  {
    "text": "traditional container as a CA container or if you wish as a confidential",
    "start": "396360",
    "end": "401319"
  },
  {
    "text": "container all the work before that we've seen with CMM is or confidential VMS or",
    "start": "403720",
    "end": "410120"
  },
  {
    "text": "tees or enclaves is making those enclaves more secure but one thing we",
    "start": "410120",
    "end": "416919"
  },
  {
    "text": "left out ofs side is the host and uh and a big topic that we are currently",
    "start": "416919",
    "end": "422440"
  },
  {
    "text": "working on is full stack a station so what you essentially want to do is you",
    "start": "422440",
    "end": "428720"
  },
  {
    "text": "want to protect your complete environment and your silicon from the Silicon up to the container right if we",
    "start": "428720",
    "end": "436280"
  },
  {
    "text": "looking at uh various attacks that we currently have like PK fail where uh",
    "start": "436280",
    "end": "443080"
  },
  {
    "text": "most many of the BIOS or firmware vendors are shipping uh untrusted Keys",
    "start": "443080",
    "end": "449000"
  },
  {
    "text": "meaning your secure boot is broken your measured boot is broken so essentially your ufi is already broken right and",
    "start": "449000",
    "end": "455199"
  },
  {
    "text": "then on top of that we are running the kernel and your kernel is broken because we don't have proper measured Boot and",
    "start": "455199",
    "end": "461080"
  },
  {
    "text": "then on on top of of that um in the operating system since the ufi is broken",
    "start": "461080",
    "end": "466639"
  },
  {
    "text": "kernel is open uh is broken your operating system is as well broken right so you have U the aoex is for example a",
    "start": "466639",
    "end": "474120"
  },
  {
    "text": "attack on cvms where you can disrupt tees uh with malicious notification",
    "start": "474120",
    "end": "479599"
  },
  {
    "text": "which is uh interrupt over flooding so you you can create a attack on cvms if",
    "start": "479599",
    "end": "485560"
  },
  {
    "text": "your horse host is not protected right um I know there's a lot of ebpf tools uh",
    "start": "485560",
    "end": "492879"
  },
  {
    "text": "around there and uh they're trying to protect the host but the problem with with that or any other tool that's",
    "start": "492879",
    "end": "499120"
  },
  {
    "text": "that's running on your Linux system is they're trying to ensure the Integrity of the runtime on which they are",
    "start": "499120",
    "end": "505759"
  },
  {
    "text": "depending on right so you have a cyclic dependency uh you cannot you cannot",
    "start": "505759",
    "end": "511000"
  },
  {
    "text": "protect the very same rtime that you're running in because if it's broken you are broken so and ebpf is more of a",
    "start": "511000",
    "end": "518640"
  },
  {
    "text": "observability tool than a security tool so just to",
    "start": "518640",
    "end": "526680"
  },
  {
    "text": "uh to give you an impression even if ebpf and all those uh tools are working",
    "start": "526680",
    "end": "533720"
  },
  {
    "text": "um C GLE it's a austri mathematician um",
    "start": "533720",
    "end": "539079"
  },
  {
    "text": "he I don't know if you guys are familiar with the incompleteness theorem but a sufficiently complex formal system there",
    "start": "539079",
    "end": "546240"
  },
  {
    "text": "are propositions and aums in this system that you cannot be proven true or false and that's the same that we can apply on",
    "start": "546240",
    "end": "552640"
  },
  {
    "text": "the runtime right you have tools in your runtime um and any attempt to approve",
    "start": "552640",
    "end": "557800"
  },
  {
    "text": "the Integrity of the runtime environment within itself creates a circular dependency as noted right and this makes",
    "start": "557800",
    "end": "563839"
  },
  {
    "text": "it uh impossible to establish absolute trust without relying on a external or a",
    "start": "563839",
    "end": "569399"
  },
  {
    "text": "higher level uh verification so you cannot attest yourself that that's the point and ebpf tries to attest itself it",
    "start": "569399",
    "end": "575680"
  },
  {
    "text": "it tries to attest the host and that's not that's not working mathematically even if it's working mathematically",
    "start": "575680",
    "end": "581480"
  },
  {
    "text": "there are still propositions then you do that you cannot",
    "start": "581480",
    "end": "586399"
  },
  {
    "text": "prove okay how how does for example the CSP are doing the uh verification how",
    "start": "587200",
    "end": "595000"
  },
  {
    "text": "they are protecting uh the run so as I said before it needs to be a Auto box uh",
    "start": "595000",
    "end": "600800"
  },
  {
    "text": "solution right if you as an example I'm taking here a Nitro so if you look at",
    "start": "600800",
    "end": "606320"
  },
  {
    "text": "AWS Nitro they are running those Nitro cards out of the host right the the host does not have any control about the",
    "start": "606320",
    "end": "612640"
  },
  {
    "text": "Nitro cards uh the flow is from the ec2 control plane to the Nitro cards and",
    "start": "612640",
    "end": "617760"
  },
  {
    "text": "from the Nitro cards they're Imagining the Nitro hypervisor and essentially all the instances that that that you have on",
    "start": "617760",
    "end": "623680"
  },
  {
    "text": "the host so there's no back channel uh the Nitro hypervisor cannot talk to the nitr cards and the Nitro cards cannot",
    "start": "623680",
    "end": "629040"
  },
  {
    "text": "talk to to the ec2 plane so there's no way back to really to the uh most powerful instances here and",
    "start": "629040",
    "end": "637079"
  },
  {
    "text": "um I also showed here the A6 and aoms right so the other thing is how can we",
    "start": "637079",
    "end": "643200"
  },
  {
    "text": "protect also the A6 uh because a malicious attacker could reprogram our e prompts and your A6 are running a a",
    "start": "643200",
    "end": "649839"
  },
  {
    "text": "faulty code what Nitro does is they have a service processor and they can hold",
    "start": "649839",
    "end": "655760"
  },
  {
    "text": "their CPU in reset and um during this reset the management uh nitr cart is is",
    "start": "655760",
    "end": "665639"
  },
  {
    "text": "attesting and measuring all the e promps and uh every ASC has on the iceb sare",
    "start": "665639",
    "end": "673040"
  },
  {
    "text": "bus they have a hook there where can they measure the eom and the fummer and",
    "start": "673040",
    "end": "678240"
  },
  {
    "text": "they can verify it with uh gold measurements they have so everything that's loaded from the eprom is checked",
    "start": "678240",
    "end": "684399"
  },
  {
    "text": "by the Nitro card so they're protecting the A6 and then on top of it they have a TPM meaning um they can protect um uh",
    "start": "684399",
    "end": "693200"
  },
  {
    "text": "the loaded hypervisor and uh the CPU is holding reset until all those fimber uh",
    "start": "693200",
    "end": "700560"
  },
  {
    "text": "kernel host kernel host guest FS Nitro hypervisor all the components are really",
    "start": "700560",
    "end": "705760"
  },
  {
    "text": "verified and it's always the same pattern right in a net station you measure something and compare it to",
    "start": "705760",
    "end": "710800"
  },
  {
    "text": "expected values the host has no access to all of those um functionalities it's",
    "start": "710800",
    "end": "715920"
  },
  {
    "text": "all out of bound as I said before it needs to be I outof bound oh high privilege um entity to verify that the",
    "start": "715920",
    "end": "723320"
  },
  {
    "text": "host running is that the host is running in a a genuine and an expected uh state",
    "start": "723320",
    "end": "731000"
  },
  {
    "text": "so this is on the cloud right but if you're looking on on Prem if you're interested how to do this on on Prem there's a company called oxide computers",
    "start": "731000",
    "end": "737800"
  },
  {
    "text": "they are essentially doing the very same thing they have a service processor they can hold the uh CPU in in reset they",
    "start": "737800",
    "end": "744480"
  },
  {
    "text": "have a root of trust and you need a root of trust you need to start uh trusting",
    "start": "744480",
    "end": "749760"
  },
  {
    "text": "some entity and um the root of trust is holding like all the keys and endorsement keys to protect other",
    "start": "749760",
    "end": "755920"
  },
  {
    "text": "secrets and as as I said Service Pro processor holds the CPU in reset until",
    "start": "755920",
    "end": "762920"
  },
  {
    "text": "all the measurements are done until all fil is checked and and measured and attested and only then the the CPU is",
    "start": "762920",
    "end": "769760"
  },
  {
    "text": "released and the CPU can then run on the host create a hypervisor and do all the all the other things uh that we need um",
    "start": "769760",
    "end": "776560"
  },
  {
    "text": "they have some more features like secure secret storage with is completely offloaded from the host so you don't",
    "start": "776560",
    "end": "781800"
  },
  {
    "text": "sharing any secrets on the host so any workload running on the host will not have access to any to any",
    "start": "781800",
    "end": "788680"
  },
  {
    "text": "secrets right with this autoband management and additional root of trust",
    "start": "790480",
    "end": "795839"
  },
  {
    "text": "uh we kind of have green lights on the A6 on the eoms",
    "start": "795839",
    "end": "801360"
  },
  {
    "text": "uh we have now measured measured boot secure boot with ufi and kernel uh all",
    "start": "801360",
    "end": "807079"
  },
  {
    "text": "backed up by by the TPM uh but still we we didn't solve anything on the host",
    "start": "807079",
    "end": "813000"
  },
  {
    "text": "because measured boot stops when you have your Linux prompt running right so what can we do additionally on the",
    "start": "813000",
    "end": "819440"
  },
  {
    "text": "operating system uh to prevent us like as mentioned here from the a",
    "start": "819440",
    "end": "826040"
  },
  {
    "text": "attacks so one thing uh is runtime Integrity of the operating system so",
    "start": "826040",
    "end": "831680"
  },
  {
    "text": "there are tools like dmverity and Fs Varity so essentially those tools are building a Merle tree this is those are",
    "start": "831680",
    "end": "837959"
  },
  {
    "text": "essentially heshes of so in the end you have an hash or a fingerprint of your",
    "start": "837959",
    "end": "843360"
  },
  {
    "text": "operating system of your file system um that you can compare to",
    "start": "843360",
    "end": "848800"
  },
  {
    "text": "expected value and then we have the Integrity measurement architecture of Linux and evm uh those essentially are",
    "start": "848800",
    "end": "856399"
  },
  {
    "text": "also signed files uh cryto cryptographically measured files and metadata uh that you can again compare",
    "start": "856399",
    "end": "862680"
  },
  {
    "text": "to some expected values um and then there are approaches like a immutable operating system red corus on to core so",
    "start": "862680",
    "end": "870040"
  },
  {
    "text": "that you're just preventing uh have own a that you're preventing um accidental",
    "start": "870040",
    "end": "876279"
  },
  {
    "text": "rights to your user uh petition and stuff like that and then",
    "start": "876279",
    "end": "881920"
  },
  {
    "text": "um one problem we have with KVM and plus",
    "start": "882800",
    "end": "888800"
  },
  {
    "text": "vmm be Q Cloud hypervisor uh or or other vmss that are",
    "start": "888800",
    "end": "894399"
  },
  {
    "text": "running is uh that they're sharing the very same kernel right uh that's it's the same same problems we have with",
    "start": "894399",
    "end": "901519"
  },
  {
    "text": "containers that's why we are doing the sand boxing uh at the first place uh a breakout can still create a d dyo",
    "start": "901519",
    "end": "908199"
  },
  {
    "text": "service on the other VMS so if you're on a host you can attack those other VMS uh if you're running a confidential",
    "start": "908199",
    "end": "913399"
  },
  {
    "text": "container data is still encrypted but you can still uh kill off all those qo like a kill all qo and then all the VMS",
    "start": "913399",
    "end": "920320"
  },
  {
    "text": "are gone so that's the problem and that's what we're looking also Upstream is uh to run cata and confidential",
    "start": "920320",
    "end": "926000"
  },
  {
    "text": "containers uh with a type one hypervisor right why do we need an operating system why do we need a full-blown operating",
    "start": "926000",
    "end": "931880"
  },
  {
    "text": "system running underneath our VM we just need VM",
    "start": "931880",
    "end": "936759"
  },
  {
    "text": "management the the challenge that we have on csps they're providing usvm so uh to run C containers we kind of need",
    "start": "939440",
    "end": "946920"
  },
  {
    "text": "Nest visualization but we also don't need it Nest visualization can introduce a lot of problems security issues",
    "start": "946920",
    "end": "952560"
  },
  {
    "text": "performance issues um so one way how to solve that is uh to remove nest ation uh",
    "start": "952560",
    "end": "959800"
  },
  {
    "text": "so everybody who is familiar with zen zen had this primary VM and the secondary VM and the primary VM was uh",
    "start": "959800",
    "end": "967440"
  },
  {
    "text": "managing all those user user VMS on the same L1 level so they do not have any nested visualization um it's a simple",
    "start": "967440",
    "end": "975000"
  },
  {
    "text": "more simplified architecture uh it flattens the virtualization hierarchy so all VMS are running as L1 guests we",
    "start": "975000",
    "end": "981560"
  },
  {
    "text": "don't have we don't need any L2 guests uh more performance we have more security gains and of course we have",
    "start": "981560",
    "end": "988360"
  },
  {
    "text": "reduced uh resource usage on the right side uh this is just an example how how",
    "start": "988360",
    "end": "993519"
  },
  {
    "text": "could you accomplish this with the acon hypervisor this is soron typon hypervisor uh similar model to Zen you",
    "start": "993519",
    "end": "1000199"
  },
  {
    "text": "have a service VM which is doing all the resource management uh and you have then on the",
    "start": "1000199",
    "end": "1005920"
  },
  {
    "text": "same level the the US of VMS um and and Freeda Turtles is the reference to the",
    "start": "1005920",
    "end": "1011079"
  },
  {
    "text": "turtles project uh which introduced the concept of Nest visualization uh in KVM",
    "start": "1011079",
    "end": "1018360"
  },
  {
    "text": "right and one one implementation of of this uh secondary VM pattern is uh",
    "start": "1019279",
    "end": "1025839"
  },
  {
    "text": "confidential containers P pods um essentially you have a primary VM which",
    "start": "1025839",
    "end": "1032480"
  },
  {
    "text": "is the worker note on a CSP instance right and the Pod",
    "start": "1032480",
    "end": "1038839"
  },
  {
    "text": "is is run in a own CSP VM instance right we are not doing the nest fation inside",
    "start": "1038839",
    "end": "1045079"
  },
  {
    "text": "of the veran note we have this perer VM which is run as a own CSP instance so we",
    "start": "1045079",
    "end": "1050440"
  },
  {
    "text": "have decoupled the worker node from the workload and you can even with this model you can even completely decouple",
    "start": "1050440",
    "end": "1057360"
  },
  {
    "text": "the control plane from your worker Noe you could have could run your control plane on Prem and have your worker node",
    "start": "1057360",
    "end": "1063039"
  },
  {
    "text": "on the CSP and your workload on the CSP running so the you can decou your workload from the worker note and you",
    "start": "1063039",
    "end": "1069320"
  },
  {
    "text": "can completely decou it from your control plane which enables us to uh run",
    "start": "1069320",
    "end": "1076520"
  },
  {
    "text": "confidential containers also as a hbd hybrid Cloud right you can run your port",
    "start": "1076520",
    "end": "1081760"
  },
  {
    "text": "on Prem with the local VM uh that you're running and then vers out to the csps",
    "start": "1081760",
    "end": "1088320"
  },
  {
    "text": "with with peer pods all completely transparent lift and shift the only interface is the Pod like in kubernetes",
    "start": "1088320",
    "end": "1094080"
  },
  {
    "text": "you just change the runtime class uh from PE pods to local VM or Kata",
    "start": "1094080",
    "end": "1101080"
  },
  {
    "text": "container right so we we taken care about the A6 ufi kernel operating system",
    "start": "1107360",
    "end": "1113320"
  },
  {
    "text": "um yeah I'm still having the operating system like as red because uh if your",
    "start": "1113320",
    "end": "1118720"
  },
  {
    "text": "CVM is misconfigured you have SSH access to them operating system can still go into your CVM right um",
    "start": "1118720",
    "end": "1127080"
  },
  {
    "text": "so threet model what we're looking also is yeah we do not trust the guest as well because the computation container",
    "start": "1127080",
    "end": "1133440"
  },
  {
    "text": "runs inside of the guest VM and essentially the guest VM is only used to spin up the container to handle the life",
    "start": "1133440",
    "end": "1138840"
  },
  {
    "text": "cycle of the container so we essentially don't need a sophisticated or full-blown operating system in the in the VM as",
    "start": "1138840",
    "end": "1145960"
  },
  {
    "text": "well um and all those artifacts that are running in the CVM like the firmware",
    "start": "1145960",
    "end": "1152000"
  },
  {
    "text": "guest kernel and guest FS are coming from the host so if you if you have a malicious host he could provide",
    "start": "1152000",
    "end": "1157480"
  },
  {
    "text": "malicious uh AR effects for your CVM so you're running um a malicious code in",
    "start": "1157480",
    "end": "1163039"
  },
  {
    "text": "there again in on the guest we can do the runtime Integrity as well uh the very same tools that I mentioned before",
    "start": "1163039",
    "end": "1169520"
  },
  {
    "text": "DM FS Varity IMA evm immutable o um and",
    "start": "1169520",
    "end": "1175840"
  },
  {
    "text": "but one big topic is um you know if you're doing like the CQ boot you have",
    "start": "1175840",
    "end": "1180960"
  },
  {
    "text": "measurements you have a TPM where you can uh store your or protect your",
    "start": "1180960",
    "end": "1186280"
  },
  {
    "text": "measurements um in a hardware Enclave uh if we doing in a guest how we are",
    "start": "1186280",
    "end": "1191400"
  },
  {
    "text": "protecting those measurements because they could be manipulated and the attestation report could uh you know",
    "start": "1191400",
    "end": "1196840"
  },
  {
    "text": "give you wrong uh wrong measurements outside to the to the attestation or to the remote attestation",
    "start": "1196840",
    "end": "1203880"
  },
  {
    "text": "entities um those runtime measurements um can be protected via attestation",
    "start": "1203880",
    "end": "1209880"
  },
  {
    "text": "inside of the CVM um there are report Fields ination report which you can extend uh TDX has a rtmr which is a",
    "start": "1209880",
    "end": "1218240"
  },
  {
    "text": "runtime measurement register which is essentially a TPM PCR uh register where you can extend hashes um but one thing",
    "start": "1218240",
    "end": "1226960"
  },
  {
    "text": "uh the community was looking into is how can we leverage uh vtpm vtpm in a in a",
    "start": "1226960",
    "end": "1232400"
  },
  {
    "text": "guest uh obviously we cannot pass through a vtpm from the host uh because",
    "start": "1232400",
    "end": "1237559"
  },
  {
    "text": "we do not trust the host and we would need to have a we need to protect if we are pass through a vtpm uh it need to be",
    "start": "1237559",
    "end": "1246640"
  },
  {
    "text": "uh a software implementation because you cannot virtualize a hardware TPM",
    "start": "1246640",
    "end": "1252080"
  },
  {
    "text": "um and if you are pass through a virtualized DPM from the house you need",
    "start": "1252080",
    "end": "1257360"
  },
  {
    "text": "to protect it somewh you would need to run this as well in a in a confidential Enclave to protect it from the host or",
    "start": "1257360",
    "end": "1262760"
  },
  {
    "text": "from other tenants that you're running so one idea the community has there are um high privilege uh firmware running",
    "start": "1262760",
    "end": "1270200"
  },
  {
    "text": "inside of the cvms one is coconut svsm and Microsoft recently announced open",
    "start": "1270200",
    "end": "1275480"
  },
  {
    "text": "HCL which is a high privilege firm running in a special VM level so if you",
    "start": "1275480",
    "end": "1281159"
  },
  {
    "text": "look at S&P S&P can run um can run applications inside of the CM on",
    "start": "1281159",
    "end": "1286760"
  },
  {
    "text": "different VM privilege levels and uh they're on privilege level zero we are",
    "start": "1286760",
    "end": "1291960"
  },
  {
    "text": "running this uh custom Hardware which can emulate a vtpm privilege level one would run the kernel and priv level two",
    "start": "1291960",
    "end": "1298360"
  },
  {
    "text": "would run the operating system and as as higher you go you have less and less privileges so level two cannot access",
    "start": "1298360",
    "end": "1305279"
  },
  {
    "text": "level one and level one cannot access level two so the vtpm is protected from the kernel and from the from the user space uh vtpm inide of cvms are",
    "start": "1305279",
    "end": "1313320"
  },
  {
    "text": "stateless uh we are not saving we are not saving any State uh but topic is",
    "start": "1313320",
    "end": "1319440"
  },
  {
    "text": "really how do you manufacture a TPM inside of a CVM because usually a hardware TPM is uh manufactured with the",
    "start": "1319440",
    "end": "1328000"
  },
  {
    "text": "endorsement key when it's built into the server and with vpms you need this to do",
    "start": "1328000",
    "end": "1333360"
  },
  {
    "text": "on the fly so if you if you're instant Ching your vtpm you're creating a endorsement key you can bound this to",
    "start": "1333360",
    "end": "1339640"
  },
  {
    "text": "the attestation report of the CPU and you have the certificate chain up to the uh CPU vendor so you Pro that your",
    "start": "1339640",
    "end": "1346600"
  },
  {
    "text": "endorsement key is valid and from there you can uh derive storage keys and all the other TPM related stuff that you",
    "start": "1346600",
    "end": "1353039"
  },
  {
    "text": "would do um there are some discussions Upstream because some of the some of the",
    "start": "1353039",
    "end": "1360000"
  },
  {
    "text": "folks do not think that the TPM is the right interface to protect measurements inside of a CVM so there are some",
    "start": "1360000",
    "end": "1365159"
  },
  {
    "text": "discussions going on uh on the Kernel side on the user space side also in our community on containers how to protect",
    "start": "1365159",
    "end": "1371679"
  },
  {
    "text": "those measurements uh correctly because as I said TDX has rtmr uh S&P has does",
    "start": "1371679",
    "end": "1376799"
  },
  {
    "text": "not have something like that uh C is doing it completely different and all other other enclaves are having their",
    "start": "1376799",
    "end": "1382440"
  },
  {
    "text": "own",
    "start": "1382440",
    "end": "1384679"
  },
  {
    "text": "implementation right as I said before uh the guas VM is just a deployment vehicle",
    "start": "1388320",
    "end": "1393840"
  },
  {
    "text": "we don't really need a full-blown operating system running there for the confidential containers use case um what",
    "start": "1393840",
    "end": "1400559"
  },
  {
    "text": "we're working on is on guest kernel hardening you know just uh stripping down all the options that we do not need",
    "start": "1400559",
    "end": "1406240"
  },
  {
    "text": "uh a distalized GFS only have the libraries and uh some of the binaries",
    "start": "1406240",
    "end": "1411279"
  },
  {
    "text": "that we need to life cycle the the container uh we are not running a full-blown operating system uh also",
    "start": "1411279",
    "end": "1417720"
  },
  {
    "text": "fimber hardening disabling disabling features and parts that we do not need",
    "start": "1417720",
    "end": "1422760"
  },
  {
    "text": "um and then we have the container payload right uh one thing you could",
    "start": "1422760",
    "end": "1428679"
  },
  {
    "text": "imagine um since we don't have any tools in the guest FS uh aneka could use the",
    "start": "1428679",
    "end": "1434520"
  },
  {
    "text": "container as a payload because the container is saved in the in the VM and use those tools that he deployed by a",
    "start": "1434520",
    "end": "1440520"
  },
  {
    "text": "container inside of the VM uh how we protecting against this is using a cinux on app armor so that no container",
    "start": "1440520",
    "end": "1446720"
  },
  {
    "text": "context can execute anything on as an in the host context so you're uh protecting",
    "start": "1446720",
    "end": "1451960"
  },
  {
    "text": "the guas VM from running a container payload binary so essentially we want to create a void for the attacker without",
    "start": "1451960",
    "end": "1458360"
  },
  {
    "text": "the possibility to enumerate anything or any Lal movement as you see I have uh still a",
    "start": "1458360",
    "end": "1466080"
  },
  {
    "text": "question mark on a container right we can sign the container um verify that the container",
    "start": "1466080",
    "end": "1472640"
  },
  {
    "text": "is coming from a registry that they're expecting of but how do we know what the container is deploying right what are",
    "start": "1472640",
    "end": "1477720"
  },
  {
    "text": "the tools in there what are the packages that you're running in there uh and this is where as bombs comes into play right",
    "start": "1477720",
    "end": "1484000"
  },
  {
    "text": "we need an inventory of all those components that are running in our stack uh we want to know if we need to react",
    "start": "1484000",
    "end": "1490440"
  },
  {
    "text": "on a CV or a buck fix uh be the container be the guest FS or be in the",
    "start": "1490440",
    "end": "1495760"
  },
  {
    "text": "operating system so we're keeping track of the inventory what is running on our stack and uh we are verifying all the",
    "start": "1495760",
    "end": "1503720"
  },
  {
    "text": "signature of the S bombs of the containers of the firmware guest kernels all files that are needed there are",
    "start": "1503720",
    "end": "1510440"
  },
  {
    "text": "signed and need to be need to be attested so essentially what we want to do is verify all signature as bomb",
    "start": "1510440",
    "end": "1517840"
  },
  {
    "text": "certificates via VIA remote at a station right we need to build to we need to build a chain of trust from the Silicon",
    "start": "1517840",
    "end": "1525559"
  },
  {
    "text": "up to the container as bom and only if all all those parts are green verified and tested we can say okay we are",
    "start": "1525559",
    "end": "1531720"
  },
  {
    "text": "running a trusted",
    "start": "1531720",
    "end": "1534480"
  },
  {
    "text": "stack how we doing attestation again trustee is our testation pipeline we are",
    "start": "1537039",
    "end": "1542360"
  },
  {
    "text": "extending uh trustee to support all of the use cases that I currently uh explained here um the problem with CSP",
    "start": "1542360",
    "end": "1551120"
  },
  {
    "text": "attestation is that they are attesting themselves right so that's the problem",
    "start": "1551120",
    "end": "1556600"
  },
  {
    "text": "um usually you want to attest the environment where are you running as a workload owner uh and that's where",
    "start": "1556600",
    "end": "1564080"
  },
  {
    "text": "trustee comes into place so you can deploy trustee on your trusted uh infrastructure and then attest your",
    "start": "1564080",
    "end": "1569200"
  },
  {
    "text": "confidential containers workloads and uh vtpm quotes and the S bombs and the",
    "start": "1569200",
    "end": "1574360"
  },
  {
    "text": "signature of all the complete stack right and measure and test every layer trust only what you",
    "start": "1574360",
    "end": "1582720"
  },
  {
    "text": "verify but this comes then to Cloud functions and why we are",
    "start": "1584039",
    "end": "1589840"
  },
  {
    "text": "doing like the full St station uh running serverless because Cloud",
    "start": "1589840",
    "end": "1595000"
  },
  {
    "text": "functions are running on shared abstracted infrastructure where the underlying layers are hidden but crucial to security right those points of views",
    "start": "1595000",
    "end": "1602480"
  },
  {
    "text": "are from the cloud function provider the function as a service provider or from the workload uh owner who is looking at",
    "start": "1602480",
    "end": "1609640"
  },
  {
    "text": "that we have opaque layers right we don't know anything about the hardware we want to make sure that the hardware hypervisor operating system all the",
    "start": "1609640",
    "end": "1616120"
  },
  {
    "text": "artifacts that we are deploying are in a state that the user expects it and vice versa so the user also expect that all",
    "start": "1616120",
    "end": "1622360"
  },
  {
    "text": "the tools and artifacts and layers are protected so that uh multi- tency is",
    "start": "1622360",
    "end": "1628120"
  },
  {
    "text": "kind of possible because we want all protect from other multi other tencies on the very same very same um Hardware",
    "start": "1628120",
    "end": "1636200"
  },
  {
    "text": "uh resources are shared right we have potential for data leakage malicious inferencing denial of service between",
    "start": "1636200",
    "end": "1642600"
  },
  {
    "text": "tenants uh all the vulnerabilities in Hardware or fmer can impact uh function",
    "start": "1642600",
    "end": "1648200"
  },
  {
    "text": "without the knowledge of the user who is running the cloud function or the infrastructure owner",
    "start": "1648200",
    "end": "1655399"
  },
  {
    "text": "um right and uh the last point is really if we if the runtime operating",
    "start": "1656640",
    "end": "1663480"
  },
  {
    "text": "system or other layers are unmeasured they can be tempered with impacting function Integrity data security so",
    "start": "1663480",
    "end": "1671039"
  },
  {
    "text": "measure everything verify everything attest everything make sure that every layer of your stack is attested and uh",
    "start": "1671039",
    "end": "1677640"
  },
  {
    "text": "verifi yeah what's the last slide any",
    "start": "1677640",
    "end": "1686960"
  },
  {
    "text": "questions that's on our on on our road map yeah update yeah that's a good good",
    "start": "1690080",
    "end": "1695679"
  },
  {
    "text": "point you need if you find a CV or bug you need to update the guest kernel or the guest FS or any other parts of your",
    "start": "1695679",
    "end": "1702240"
  },
  {
    "text": "fare on the on the for the CVM yeah",
    "start": "1702240",
    "end": "1708840"
  },
  {
    "text": "uh hello you mentioned that one Avenue for securing this would be the guest",
    "start": "1709080",
    "end": "1714159"
  },
  {
    "text": "kernel wouldn't need to be a full-blown kernel if we're running Cloud functions with arbitrary workloads don't we need",
    "start": "1714159",
    "end": "1719600"
  },
  {
    "text": "yeah you're hard to understand I don't know why your mic is so when when we're running um the guest",
    "start": "1719600",
    "end": "1726799"
  },
  {
    "text": "colel you mentioned one Avenue for securing would be to run something less than that just to run K agent for",
    "start": "1726799",
    "end": "1733640"
  },
  {
    "text": "example yeah the K agent is running yeah but the in the guest kernel we don't need support like for all the file",
    "start": "1733640",
    "end": "1739360"
  },
  {
    "text": "system we do not support for the all the uh gazillion options that we have it's really a strip down guest kernel uh with",
    "start": "1739360",
    "end": "1747600"
  },
  {
    "text": "20 to 30 options enabled wouldn't the the workload need a full-blown like Linux kernel for the workload I'm making",
    "start": "1747600",
    "end": "1755039"
  },
  {
    "text": "a sis call in my function container image right well we need to Define what the",
    "start": "1755039",
    "end": "1760360"
  },
  {
    "text": "full-blown kernel is no it does not need all the options so we're stripping down so yeah we are testing all the workloads",
    "start": "1760360",
    "end": "1766519"
  },
  {
    "text": "that are running on it but we are disabling options that we don't really need gotcha so that'd be something in",
    "start": "1766519",
    "end": "1772279"
  },
  {
    "text": "our contract that we say yeah this is what we support right so it's always the",
    "start": "1772279",
    "end": "1777679"
  },
  {
    "text": "CIS call interface between the workload and the kernel that you need to fortify right uh you still so a A veral can",
    "start": "1777679",
    "end": "1784799"
  },
  {
    "text": "still break out out of the container right but then you are on the on the gestri and that's where you're saying okay create a void if you are only on a",
    "start": "1784799",
    "end": "1791840"
  },
  {
    "text": "type one hypervisor or if you if you have a guest Kel which only has uh some",
    "start": "1791840",
    "end": "1796880"
  },
  {
    "text": "libraries and some binary you don't have a shell you don't have any LS you cannot enumerate anything uh",
    "start": "1796880",
    "end": "1802519"
  },
  {
    "text": "there's not much a a AER can do only what I mentioned before having the container uh dropping down the payload",
    "start": "1802519",
    "end": "1809799"
  },
  {
    "text": "to have more tools but then we are protecting it with as Linux so that the container context cannot be run with the",
    "start": "1809799",
    "end": "1815440"
  },
  {
    "text": "gvm context thank you yeah uh one more question uh so you",
    "start": "1815440",
    "end": "1822640"
  },
  {
    "text": "mentioned that uh during that uh you you do attestation against CSP",
    "start": "1822640",
    "end": "1828919"
  },
  {
    "text": "uh but I think if I'm not mistaken it's possible to uh run a testation against",
    "start": "1828919",
    "end": "1834840"
  },
  {
    "text": "um the chip manufacturer uh can you say it again it's it's really hard to understand the",
    "start": "1834840",
    "end": "1841039"
  },
  {
    "text": "mic I don't know what's what's happening uh I think it's um if I'm if",
    "start": "1841039",
    "end": "1847120"
  },
  {
    "text": "I'm not mistaken it's possible to uh do attestation against the chip",
    "start": "1847120",
    "end": "1852600"
  },
  {
    "text": "manufacturer like if you have Intel's chip then uh you can attest against the",
    "start": "1852600",
    "end": "1858919"
  },
  {
    "text": "Services running in Intel right if you have a SGI chip for example yeah so is",
    "start": "1858919",
    "end": "1865360"
  },
  {
    "text": "that possible to mitigate that issue using uh attestation against the",
    "start": "1865360",
    "end": "1871960"
  },
  {
    "text": "uh chip manufacturer and not a CSP that does that make sense the question oh yeah you're asking against",
    "start": "1871960",
    "end": "1878080"
  },
  {
    "text": "the CPU manufacturer yeah yeah that's what we're doing yeah we so we are we are testing against this uh CPU uh if",
    "start": "1878080",
    "end": "1884240"
  },
  {
    "text": "you're running SMP against AMD right and we are using the AMD certificate change right on a CSP you can do that right you",
    "start": "1884240",
    "end": "1891039"
  },
  {
    "text": "can use trusty on a CSP to attest the AMD CPU you don't need to use the csps",
    "start": "1891039",
    "end": "1896919"
  },
  {
    "text": "uh at the station Services because in the end you don't know what what they are running and how they are doing",
    "start": "1896919",
    "end": "1903120"
  },
  {
    "text": "it hi hi uh so this might be a very knif question but in gcp if if we are running",
    "start": "1911039",
    "end": "1918360"
  },
  {
    "text": "serverless functions yeah how do we do the attestation uh with trusty like how",
    "start": "1918360",
    "end": "1924120"
  },
  {
    "text": "does that work uh that that's a good question uh my main focus is on Prem where we have",
    "start": "1924120",
    "end": "1930039"
  },
  {
    "text": "control over everything that's a complete different uh discussion with csps right I cannot answer that all",
    "start": "1930039",
    "end": "1936559"
  },
  {
    "text": "right thank you make sense well the at least once you have",
    "start": "1936559",
    "end": "1942799"
  },
  {
    "text": "your CVM you can attest all those things that you're running in the CVM right your your workloads or your your runtime",
    "start": "1942799",
    "end": "1949840"
  },
  {
    "text": "measurements that you're doing you you can still do your runtime Integrity on a CVM you are responsible for the operating system right after the CVM",
    "start": "1949840",
    "end": "1956559"
  },
  {
    "text": "boots up you are responsible for those stuff and you can attest those other stuff but on the the underlying parts",
    "start": "1956559",
    "end": "1962679"
  },
  {
    "text": "that's a CSP thing so you need to think about well you can attest the CPU right without the CSP",
    "start": "1962679",
    "end": "1970960"
  },
  {
    "text": "any other questions once twice thank you all for listening",
    "start": "1980600",
    "end": "1988180"
  },
  {
    "text": "[Applause]",
    "start": "1988180",
    "end": "1991359"
  }
]