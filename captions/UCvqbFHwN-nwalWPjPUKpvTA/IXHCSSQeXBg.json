[
  {
    "text": "this is the session on expanding the capabilities of kubernetes Access Control if that's not why you're here",
    "start": "240",
    "end": "6160"
  },
  {
    "text": "door is right back there um all right so as we get started",
    "start": "6160",
    "end": "13040"
  },
  {
    "text": "I think it makes sense to understand who's up here and who's telling you and why you should listen um I myself I'm",
    "start": "13040",
    "end": "18119"
  },
  {
    "text": "the co-founder of a company called ozed um as explicitly an authorization company so that ties straight into this",
    "start": "18119",
    "end": "24560"
  },
  {
    "text": "talk um formerly I worked at a company called coros uh coros got acquired by Red Hat Red Hat got acquired by IBM and",
    "start": "24560",
    "end": "31599"
  },
  {
    "text": "I decided to start my own company um I'm an oci maintainer so that's the specification that defines what",
    "start": "31599",
    "end": "37200"
  },
  {
    "text": "containers are uh so I also do that and then I've been around in this space since kind of the beginning since before kubernetes existed in the container",
    "start": "37200",
    "end": "43600"
  },
  {
    "text": "ecosystem I've created a bunch of different projects in that time spice DB which is my current company does but also things like operator framework um",
    "start": "43600",
    "end": "51120"
  },
  {
    "text": "Lucas yeah hi hi everyone um yeah I've also been here for for some nine years",
    "start": "51120",
    "end": "56960"
  },
  {
    "text": "or something um I kind of uh represent the kubernetes side and like um have",
    "start": "56960",
    "end": "62519"
  },
  {
    "text": "been thinking about how can we evolve kubernetes in these directions um been",
    "start": "62519",
    "end": "67840"
  },
  {
    "text": "doing some Cube stuff like Cube admin and and similar things in the past um",
    "start": "67840",
    "end": "75320"
  },
  {
    "text": "also doing the Cloud meetups for example in Finland and you should definitely come to the kubernetes Community Days",
    "start": "75320",
    "end": "81600"
  },
  {
    "text": "that we're organizing in Helsinki in May next year cool all right so this talk",
    "start": "81600",
    "end": "87640"
  },
  {
    "text": "has an agenda because authorization is a pretty de topic we don't want to get caught in Weeds um so we're going to",
    "start": "87640",
    "end": "93520"
  },
  {
    "text": "give a very quick overview through the foundations of authorization so everyone's on the same page going into this then we're going to take stock of",
    "start": "93520",
    "end": "100119"
  },
  {
    "text": "what kubernetes does for authorization these are things that probably yall are familiar with um but then we're going to",
    "start": "100119",
    "end": "105680"
  },
  {
    "text": "talk about the challenges that exist with those Primitives um and kind of the problems that they are not addressing",
    "start": "105680",
    "end": "112000"
  },
  {
    "text": "and then we're going to kind of dive into future looking and uh technologies that are going to help us kind of evolve",
    "start": "112000",
    "end": "117159"
  },
  {
    "text": "with kubernetes um so I think it's by obligation that you always have this",
    "start": "117159",
    "end": "122759"
  },
  {
    "text": "slide when you're talking about authorization um there's this terminology o and it's really ambiguous",
    "start": "122759",
    "end": "128840"
  },
  {
    "text": "whether someone is talking about authentication or authorization um for this uh this talk the focus is entirely",
    "start": "128840",
    "end": "136000"
  },
  {
    "text": "on authorization so not authentication and I prefer these completely",
    "start": "136000",
    "end": "141239"
  },
  {
    "text": "alternative terms uh terms because I think they're far less ambiguous um",
    "start": "141239",
    "end": "146280"
  },
  {
    "text": "that's identity for authentication and permissions for authorization um and it's not just beginners that kind",
    "start": "146280",
    "end": "152080"
  },
  {
    "text": "of make this mistake when they they missp um even staff Engineers or very very senior Engineers often we'll say",
    "start": "152080",
    "end": "158440"
  },
  {
    "text": "the wrong term um but at the core uh of every permissions check it's this one",
    "start": "158440",
    "end": "164519"
  },
  {
    "text": "question can a particular principle perform an action on a resource and it gets kind of confusing because there's a",
    "start": "164519",
    "end": "170640"
  },
  {
    "text": "million different words for all these different um kind of variables so instead of principal someone might say",
    "start": "170640",
    "end": "177080"
  },
  {
    "text": "user they might say subject they might say identity um um they might say policy instead of action or verb or permission",
    "start": "177080",
    "end": "184560"
  },
  {
    "text": "um or they might say entity for resource and it all just gets confusing but at the end of the day checking a permission",
    "start": "184560",
    "end": "189959"
  },
  {
    "text": "is just this core question but um the software then has to",
    "start": "189959",
    "end": "196720"
  },
  {
    "text": "look very similar right if uh they're all just trying to answer the same question and kind of if you ask Gartner",
    "start": "196720",
    "end": "202879"
  },
  {
    "text": "they would give you this diagram which is kind of using some Enterprise jargon um I I tend to think it's kind of",
    "start": "202879",
    "end": "209200"
  },
  {
    "text": "outdated and kind of makes the problem look over complicated um but it has the same kind of terminology problem that",
    "start": "209200",
    "end": "214680"
  },
  {
    "text": "off does where it's kind of using This Acronym pxp where there is p pip PDP which makes",
    "start": "214680",
    "end": "222560"
  },
  {
    "text": "it super confusing to know what you're talking about um and then it also is really focused on where and not what uh",
    "start": "222560",
    "end": "229680"
  },
  {
    "text": "and so like for example they're talking about p as policy enforcement point so that's you're talking about Point like",
    "start": "229680",
    "end": "235840"
  },
  {
    "text": "where um but there is something good with this model which is it introd the idea of kind of separating the",
    "start": "235840",
    "end": "241720"
  },
  {
    "text": "enforcement of a policy from actually Computing and um running the authorization logic that is making the",
    "start": "241720",
    "end": "247560"
  },
  {
    "text": "decision um so as an alternative I like this far more simplified model where we",
    "start": "247560",
    "end": "252599"
  },
  {
    "text": "just break it down into an engine models and data um I really like the metaphor of a courtroom for describing this so in",
    "start": "252599",
    "end": "259359"
  },
  {
    "text": "a courtroom you kind of have a judge or jury and that's kind of what I call the engine in this and they interpret laws",
    "start": "259359",
    "end": "267160"
  },
  {
    "text": "along with facts and evidence from the case uh together to ultimately make a decision of whether someone is",
    "start": "267160",
    "end": "273560"
  },
  {
    "text": "guilty so that's what all authorization software looks like there are models that kind of Define like the rules and shape of everything then there's data",
    "start": "273560",
    "end": "279960"
  },
  {
    "text": "which are similar to the facts involved and then an engine interprets those two things together to say yes or no someone",
    "start": "279960",
    "end": "285240"
  },
  {
    "text": "has access to do the thing they're trying to do so we make this a little bit more concrete um this is kind of what Opa or",
    "start": "285240",
    "end": "292919"
  },
  {
    "text": "Cedar like a policy engine looks like in that system and we can kind of s to see",
    "start": "292919",
    "end": "298520"
  },
  {
    "text": "where the different components of these these languages fit in so Opa for example the actual interpreter is an",
    "start": "298520",
    "end": "304479"
  },
  {
    "text": "engine it's going to actually be doing the interpretation um but Rego or the cedar policy language that's kind of the",
    "start": "304479",
    "end": "310520"
  },
  {
    "text": "model section that's where you're going to Define these policies that are more static um and this really highlights uh",
    "start": "310520",
    "end": "317639"
  },
  {
    "text": "an important point which is this empty box of where does the data come from when you're using these types of systems",
    "start": "317639",
    "end": "323840"
  },
  {
    "text": "um there's a bunch of different projects in the ecosystem out there trying to kind of fill in this box in various ways",
    "start": "323840",
    "end": "329240"
  },
  {
    "text": "for I use cases um but really these policy uh languages uh really U shine",
    "start": "329240",
    "end": "336440"
  },
  {
    "text": "best when you have very little data input or are working with requests that have all the context they need to make",
    "start": "336440",
    "end": "341800"
  },
  {
    "text": "the decision um in the in the actual payload of the request um cool but that data is",
    "start": "341800",
    "end": "350319"
  },
  {
    "text": "actually super important because if we're talking about consistency with data uh you can get into a whole world",
    "start": "350319",
    "end": "356080"
  },
  {
    "text": "of problems and especially if you're making authorization decision that's a a security flaw if you give access to the",
    "start": "356080",
    "end": "362680"
  },
  {
    "text": "wrong thing or don't give access to the uh right thing so um kind of leaning on that courtroom metaphor what happens if",
    "start": "362680",
    "end": "369520"
  },
  {
    "text": "you apply old laws to a new crime or new laws are applied to an old crime or old facts are applied to a new crime like",
    "start": "369520",
    "end": "376120"
  },
  {
    "text": "people will go to jail and like the cases won't make any sense right so we have the exact same problems in",
    "start": "376120",
    "end": "382039"
  },
  {
    "text": "authorization if you're using outdated models or outdated data when you make these decisions you're possibly giving",
    "start": "382039",
    "end": "387360"
  },
  {
    "text": "access to a thing that you otherwise shouldn't this is a good segue into what privilege",
    "start": "387360",
    "end": "393240"
  },
  {
    "text": "escalation is um I'm sure most people here are familiar with this because they probably have to patch their own",
    "start": "393240",
    "end": "398720"
  },
  {
    "text": "software um and fix security flaws in that software but effectively privilege",
    "start": "398720",
    "end": "403960"
  },
  {
    "text": "escalation is just when um the model you have in your head doesn't match reality and someone gets access to a thing they",
    "start": "403960",
    "end": "409840"
  },
  {
    "text": "otherwise shouldn't uh this is usually caused basically by either an incorrect",
    "start": "409840",
    "end": "414919"
  },
  {
    "text": "model or the complexity that comes uh with Crossing what we call Trust domains",
    "start": "414919",
    "end": "420479"
  },
  {
    "text": "so uh examples of some trust domains in the kubernetes ecosystem are things like the pods and cgroups the Machine the",
    "start": "420479",
    "end": "427440"
  },
  {
    "text": "network the kubernetes name space the cluster the identity provider and then any other clusters in a multicluster",
    "start": "427440",
    "end": "433039"
  },
  {
    "text": "system so you can see how there's this kind of stack of all these different um",
    "start": "433039",
    "end": "438160"
  },
  {
    "text": "domains and there's plenty of users or programs that are constantly Crossing",
    "start": "438160",
    "end": "443319"
  },
  {
    "text": "through these domains in ways that you wouldn't really expect so for example if you use something like C manager in your",
    "start": "443319",
    "end": "449240"
  },
  {
    "text": "cluster that is a global resource provisioning these things across your whole cluster but you as an individual user with",
    "start": "449240",
    "end": "455400"
  },
  {
    "text": "access to create an instance or uh create some of these certificates are actually um creating that resource and",
    "start": "455400",
    "end": "462199"
  },
  {
    "text": "then this Global thing is working on your behalf Crossing all the way up to the cluster level domain um so you can",
    "start": "462199",
    "end": "467919"
  },
  {
    "text": "see how a lot of this is very confusing and um it's really easy to introduce new",
    "start": "467919",
    "end": "473080"
  },
  {
    "text": "things so there's even XKCD for this as there is with all things um and it's",
    "start": "473080",
    "end": "478400"
  },
  {
    "text": "really describing this endless cycle where you create a trust domain users ask for more features which kind of",
    "start": "478400",
    "end": "484800"
  },
  {
    "text": "cross the trust domains and then you kind of like Circle them and create even bigger trust domains and then the loop",
    "start": "484800",
    "end": "491280"
  },
  {
    "text": "basically just continues where constantly um you're kind of creating these new trust domains and then expanding them at infin",
    "start": "491280",
    "end": "498800"
  },
  {
    "text": "item so Lucas is going to give an example so so one example of this in in",
    "start": "498800",
    "end": "504680"
  },
  {
    "text": "Cube uh very specific is you are a able to create a deployment for example cool",
    "start": "504680",
    "end": "510520"
  },
  {
    "text": "um deployment is inside of namespace so it's already inside of a trust boundary but then you can refer to a secret in",
    "start": "510520",
    "end": "517800"
  },
  {
    "text": "this payload of the deployment while you might not have actually access to get that secret directly um so what's going",
    "start": "517800",
    "end": "524760"
  },
  {
    "text": "to happen is as Mo many of you know is the deployment controller takes the",
    "start": "524760",
    "end": "530640"
  },
  {
    "text": "deployment creates a replica set the replica set controller takes that replica set creates a pod the cuet takes",
    "start": "530640",
    "end": "537640"
  },
  {
    "text": "a pod and cuet has ACC access to all of those secrets so the cuet can get the",
    "start": "537640",
    "end": "543000"
  },
  {
    "text": "secret mounted into the the Pod and now you have have that and this is a kind of",
    "start": "543000",
    "end": "550040"
  },
  {
    "text": "very straightforward example but when you start looking at all of these possible privilege escalation cases you",
    "start": "550040",
    "end": "557040"
  },
  {
    "text": "start getting this into this graph that you see here uh by data dog uh they made a cube Hound project where they kind of",
    "start": "557040",
    "end": "564839"
  },
  {
    "text": "um made a fictional cluster um but kind of with with sensible settings and stuff and they",
    "start": "564839",
    "end": "571079"
  },
  {
    "text": "they put everything in a graph they have there I mean a lot of well documented",
    "start": "571079",
    "end": "576240"
  },
  {
    "text": "attack PAAD in Cube where for example you take over a service account or or you can read a secret that you shouldn't",
    "start": "576240",
    "end": "582120"
  },
  {
    "text": "be able to use that secret to to go further in the cluster and um yeah there were hundreds",
    "start": "582120",
    "end": "587760"
  },
  {
    "text": "of of uh you know getting to Cluster admin access you know through this even from the the kind of entry point of the",
    "start": "587760",
    "end": "594640"
  },
  {
    "text": "cluster so it's it's kind of a an interesting like these controllers",
    "start": "594640",
    "end": "600120"
  },
  {
    "text": "should be secure monitors but it's very very hard to do that",
    "start": "600120",
    "end": "605200"
  },
  {
    "text": "um in in a generic s or there's no way to do that in a generic sense and uh and",
    "start": "605200",
    "end": "610279"
  },
  {
    "text": "you need to be very skilled to to kind of consider that in your API design cool all right so there's a",
    "start": "610279",
    "end": "618839"
  },
  {
    "text": "history in kind of researching authorization and the models that um folks are familiar with in this slide I",
    "start": "618839",
    "end": "626200"
  },
  {
    "text": "basically just outlined the ones that people are really likely to already be familiar with but there's plenty of other research that have been going on",
    "start": "626200",
    "end": "632760"
  },
  {
    "text": "for the past few decades the thing with this is I feel like a lot of folks out there look at the history of database",
    "start": "632760",
    "end": "639760"
  },
  {
    "text": "research and they go oh people have been studying this for decades I probably shouldn't build this myself like they're",
    "start": "639760",
    "end": "645600"
  },
  {
    "text": "probably experts that study this that should be building this but then they look at authorization which is even more security critical and they go I bet I",
    "start": "645600",
    "end": "651920"
  },
  {
    "text": "could probably build this myself probably not the best idea how hard can an e check in API server be",
    "start": "651920",
    "end": "658600"
  },
  {
    "text": "exactly hard can it be um but the the thing that I also kind of want to highlight with this is um a lot of the",
    "start": "658600",
    "end": "665880"
  },
  {
    "text": "stuff has been documented in kind of research but then also there's implementations in software that kind of",
    "start": "665880",
    "end": "673480"
  },
  {
    "text": "coincide or come either earlier or after the research was published um notably",
    "start": "673480",
    "end": "679720"
  },
  {
    "text": "here you can see uh the third option aback it had a research paper written in",
    "start": "679720",
    "end": "684880"
  },
  {
    "text": "2015 probably everyone thinks that's like really cuttingedge stuff but actually it was in mult in 1965 it was",
    "start": "684880",
    "end": "691200"
  },
  {
    "text": "how they were securing the file system all the way back in the day so a lot of people think that like wow I'm doing the",
    "start": "691200",
    "end": "696639"
  },
  {
    "text": "latest best practices they probably think something like arbac is the latest best practice but it actually isn't and",
    "start": "696639",
    "end": "701880"
  },
  {
    "text": "a lot of these systems have been around and a lot of the concepts have been around for 50 plus",
    "start": "701880",
    "end": "707760"
  },
  {
    "text": "years um but that was us covering authorization super super fast now",
    "start": "707760",
    "end": "713600"
  },
  {
    "text": "you're up to date um but we really need to start talking about kubernetes because that's why we're here at least",
    "start": "713600",
    "end": "719040"
  },
  {
    "text": "that's half the conference here um so we're going to dive a little bit more into how kubernetes works so in order",
    "start": "719040",
    "end": "725720"
  },
  {
    "text": "for you to be able to answer the question of can a user do this uh well you need to know what who the user is",
    "start": "725720",
    "end": "732000"
  },
  {
    "text": "and uh for kubernetes there's a couple of well-known modes for resolving this",
    "start": "732000",
    "end": "737279"
  },
  {
    "text": "question um you can authenticate the user through oidc tokens uh you can kind",
    "start": "737279",
    "end": "743040"
  },
  {
    "text": "of have kubernetes hook out send a web hook to something else outside of it which will answer the same question of",
    "start": "743040",
    "end": "749000"
  },
  {
    "text": "what what user is this talken about or you use a client",
    "start": "749000",
    "end": "754120"
  },
  {
    "text": "certificate um well a CA for for authenticating then we get to the",
    "start": "754120",
    "end": "760600"
  },
  {
    "text": "authorization stage and now we have the user information so like username a couple of groups maybe a uid and some",
    "start": "760600",
    "end": "767320"
  },
  {
    "text": "maybe some extra information and then at this point we don't have the body deserialized yet because we don't want",
    "start": "767320",
    "end": "773920"
  },
  {
    "text": "that a random person would send us a huge amount of of data for us to process when they were actually not allowed to",
    "start": "773920",
    "end": "780920"
  },
  {
    "text": "do so in the first place um so and here like for the authoriz authorization",
    "start": "780920",
    "end": "786639"
  },
  {
    "text": "strategies we have well Cube arback or and web hooks as well and once they pass",
    "start": "786639",
    "end": "793920"
  },
  {
    "text": "that and we figure out that they are able to I don't create deployments then we actually look at the deployment like",
    "start": "793920",
    "end": "799880"
  },
  {
    "text": "okay so is this data any good uh this notably only happens on create update delete requests uh and",
    "start": "799880",
    "end": "806279"
  },
  {
    "text": "connect and here you have some other options again there web hook I mean KU is super extensible it's really nice um",
    "start": "806279",
    "end": "812519"
  },
  {
    "text": "of course web hooks have some uh runtime um challenges as well but uh but it's",
    "start": "812519",
    "end": "818839"
  },
  {
    "text": "it's it's possible uh one of the new things that we're going to talk about in a bit is uh the use of common expression",
    "start": "818839",
    "end": "824600"
  },
  {
    "text": "language or cell as a way to kind of writing these um validation uh and",
    "start": "824600",
    "end": "830360"
  },
  {
    "text": "admission uh validating and mutating admission controllers so like adding policies checking that well for example",
    "start": "830360",
    "end": "838519"
  },
  {
    "text": "the you have you're using secure images in your in your U cluster then answering",
    "start": "838519",
    "end": "846720"
  },
  {
    "text": "the the question of who can do what or like can I do this for example is called uh a subject access review in kubernetes",
    "start": "846720",
    "end": "853519"
  },
  {
    "text": "if you ever come across that um the roles in kubus so Q barback",
    "start": "853519",
    "end": "859040"
  },
  {
    "text": "is is divided into two part the roles and this kind of selects uh either on a uh cluster wide scope or in a namespace",
    "start": "859040",
    "end": "865959"
  },
  {
    "text": "scope uh select uh resource So based on their attributes so it's",
    "start": "865959",
    "end": "871279"
  },
  {
    "text": "actually this is kind of more about attributes it's about object um name name space API Group and and resource in",
    "start": "871279",
    "end": "879000"
  },
  {
    "text": "the context of like deployment or or pod or things like that and then it relates",
    "start": "879000",
    "end": "884160"
  },
  {
    "text": "those to some actions you can do on that then the second The Binding actually",
    "start": "884160",
    "end": "889519"
  },
  {
    "text": "gives you then well this user is bound to this role so that's very classic RB",
    "start": "889519",
    "end": "896480"
  },
  {
    "text": "um then next it's what's good about the this model is that it's very extensible it's an open API um you can add your",
    "start": "896480",
    "end": "903720"
  },
  {
    "text": "custom verbs you can add custom sub resources you can use custom resources",
    "start": "903720",
    "end": "908959"
  },
  {
    "text": "and this all works the same it's not specific to just kubernetes uh Native things and if you are user that can edit",
    "start": "908959",
    "end": "915959"
  },
  {
    "text": "these roles actually you cannot expand your uh set of privileges um so even",
    "start": "915959",
    "end": "921040"
  },
  {
    "text": "though I can edit a role within my namespace I cannot create cluster wide things or or kind of delegate stuff I",
    "start": "921040",
    "end": "928040"
  },
  {
    "text": "already don't have access to but it's not a language it's um well it's an API",
    "start": "928040",
    "end": "933319"
  },
  {
    "text": "that it's declarative but it can do only so many things and um one of the means to expand",
    "start": "933319",
    "end": "940240"
  },
  {
    "text": "these over time has been U using a common expression language uh which is a",
    "start": "940240",
    "end": "945720"
  },
  {
    "text": "non-tour complete expression language so we can um look at before running it we",
    "start": "945720",
    "end": "952360"
  },
  {
    "text": "can know how what is the cost of running it in terms of CPU and memory and stuff like that so we this is very important",
    "start": "952360",
    "end": "958399"
  },
  {
    "text": "in API servers so we don't use um well a lot of a lot of those and and kind of",
    "start": "958399",
    "end": "964560"
  },
  {
    "text": "get malicious expressions in there um so that's that's been rolling out in across",
    "start": "964560",
    "end": "970240"
  },
  {
    "text": "all of kubernetes API surface lately uh one example of this is in the structured authentication and authorization",
    "start": "970240",
    "end": "977120"
  },
  {
    "text": "configuration um there been a long-standing effort I we started talking about it in 2017 something like",
    "start": "977120",
    "end": "983040"
  },
  {
    "text": "that uh on removing or I mean extending the the flags making the",
    "start": "983040",
    "end": "990079"
  },
  {
    "text": "API Serv better than using Flags when when uh running the cube API server and instead use some structured file well we",
    "start": "990079",
    "end": "997920"
  },
  {
    "text": "all love yaml so you have a lot of yaml there um you get to choose for example",
    "start": "997920",
    "end": "1003199"
  },
  {
    "text": "multiple uh oidc authenticators you can have multiple web hook authorizers um",
    "start": "1003199",
    "end": "1009920"
  },
  {
    "text": "you can write your own Expressions so if if you have a prefix in your IDC thing you can remove the prefix and maybe add",
    "start": "1009920",
    "end": "1016079"
  },
  {
    "text": "some other prefix before kind of resolving username and all all things like that and um this is a very",
    "start": "1016079",
    "end": "1024480"
  },
  {
    "text": "powerful um powerful feature in recent versions cool and then in kubernetes 131",
    "start": "1024480",
    "end": "1030558"
  },
  {
    "text": "we got label and field authorization um this is super powerful uh except it's limited in a couple different ways um so",
    "start": "1030559",
    "end": "1037600"
  },
  {
    "text": "what this actually lets you do is on certain web hook requests um the ones listed here list watching delete",
    "start": "1037600",
    "end": "1043400"
  },
  {
    "text": "collections uh you actually do get access to some of the selectors uh that um are kind of driving the aaki kind of",
    "start": "1043400",
    "end": "1050440"
  },
  {
    "text": "aspects of uh kubernetes authorization um and this fixes a couple different use",
    "start": "1050440",
    "end": "1055720"
  },
  {
    "text": "cases um it makes it so uh you can kind of lock down certain things a great example is if you are a controller",
    "start": "1055720",
    "end": "1062799"
  },
  {
    "text": "that's kind of delegating access to Secrets um you can lock down the access to the secrets that you can actually",
    "start": "1062799",
    "end": "1068360"
  },
  {
    "text": "view on the cluster um so another example would be like if you're an Ingress controller um making sure that",
    "start": "1068360",
    "end": "1074160"
  },
  {
    "text": "you're locked down specifically to only seeing the certificates that you need um to drive Ingress rather than all the all",
    "start": "1074160",
    "end": "1080360"
  },
  {
    "text": "the uh all the secrets in that name space um this also solves a pretty important security problem with uh the",
    "start": "1080360",
    "end": "1087320"
  },
  {
    "text": "kuet which the kuet could previously be kind of like God mode and see all the pods in the cluster before now we can",
    "start": "1087320",
    "end": "1092840"
  },
  {
    "text": "limit its view down to just specifically the pods on it on the particular node it that it owns um but uh most importantly",
    "start": "1092840",
    "end": "1100960"
  },
  {
    "text": "this is kind of not uh kind of Silver Bullet for solving multi-tenancy or generic kind of filtering of listing",
    "start": "1100960",
    "end": "1107640"
  },
  {
    "text": "resources in kubernetes all of this was kind of um just a modest extension to the existing web hooks in a way that's",
    "start": "1107640",
    "end": "1114120"
  },
  {
    "text": "kind of meeting uh meeting some of the concerns we have today with um just uh",
    "start": "1114120",
    "end": "1120039"
  },
  {
    "text": "what we've already built yeah we want to go step by step uh making things",
    "start": "1120039",
    "end": "1125320"
  },
  {
    "text": "better um so I kind of had this slide to go over the the gotas that everyone kind",
    "start": "1125320",
    "end": "1131200"
  },
  {
    "text": "of knows about today with kubernetes um these are the things that's not doing well uh a really good example is",
    "start": "1131200",
    "end": "1138159"
  },
  {
    "text": "basically it's limited querying capabilities so you can't really ask um",
    "start": "1138159",
    "end": "1143720"
  },
  {
    "text": "what are all the all what are all the resources I can access in the system Beyond uh a particular name space um",
    "start": "1143720",
    "end": "1149960"
  },
  {
    "text": "there's no question or no API that you can say um who are all the people that have access to modify this particular",
    "start": "1149960",
    "end": "1155679"
  },
  {
    "text": "resource um so it's very onedimensional you can only ask the question um can I perform this action on this particular",
    "start": "1155679",
    "end": "1161600"
  },
  {
    "text": "thing um you can't model anything in terms of deny rules where um the access",
    "start": "1161600",
    "end": "1167039"
  },
  {
    "text": "is accepted by default but then you say excluding these particular things um because that actually would require a",
    "start": "1167039",
    "end": "1173159"
  },
  {
    "text": "design where you have to have multiple layers of processing the authorization logic um there's really no impersonation",
    "start": "1173159",
    "end": "1179880"
  },
  {
    "text": "sorry impersonation framework um or yeah there is but like yeah I mean no delegation yeah",
    "start": "1179880",
    "end": "1187799"
  },
  {
    "text": "there's no real delegation so the main use case for this there is impersonation but there is no way for you to say I'm a",
    "start": "1187799",
    "end": "1193280"
  },
  {
    "text": "controller acting on behalf of this particular user um let me maintain my current privileges but for the sake of",
    "start": "1193280",
    "end": "1199280"
  },
  {
    "text": "this particular one action I'm going to perform it on behalf of this other user um so that is kind of a limitation",
    "start": "1199280",
    "end": "1206919"
  },
  {
    "text": "that's really frustrating if you're out there writing custom controllers um then there's no kind of temporality to any of",
    "start": "1206919",
    "end": "1212200"
  },
  {
    "text": "this so you can't say um we're having a incident um an outage right now we want",
    "start": "1212200",
    "end": "1217960"
  },
  {
    "text": "to give access to this person cluster wide to solve that outage for the next hour but like they shouldn't forever",
    "start": "1217960",
    "end": "1223880"
  },
  {
    "text": "have access uh God Mode for this cluster just trying to fix this this problem",
    "start": "1223880",
    "end": "1229440"
  },
  {
    "text": "um then any form of kind of of inheritance only works kind of at the",
    "start": "1229440",
    "end": "1234760"
  },
  {
    "text": "the cluster wide scope so you can't really get super granular with kind of delegating access there and then all",
    "start": "1234760",
    "end": "1241640"
  },
  {
    "text": "this is eventually consistent so if you want to have guarantees that you've revoked access and going forward someone",
    "start": "1241640",
    "end": "1248320"
  },
  {
    "text": "will not accidentally see something you really don't have that guarantee and that that kind of central problem of",
    "start": "1248320",
    "end": "1254360"
  },
  {
    "text": "changing access but still eventually resolving it where folks could gain access to to something they shouldn't",
    "start": "1254360",
    "end": "1259720"
  },
  {
    "text": "see is called the new enemy problem so these are some some of the things but",
    "start": "1259720",
    "end": "1265320"
  },
  {
    "text": "now we're what we're here for is like how do we go forward how do we make some of these things better the reasons why",
    "start": "1265320",
    "end": "1272279"
  },
  {
    "text": "these haven't been solded for example the um field and label selectors I think issue was opened in 2015 16 something",
    "start": "1272279",
    "end": "1280640"
  },
  {
    "text": "like that um and there are problems also like implementing solutions to these uh",
    "start": "1280640",
    "end": "1286720"
  },
  {
    "text": "which are because they really hard but um we would like to well with this",
    "start": "1286720",
    "end": "1292000"
  },
  {
    "text": "talk we're going to show a couple of things we can do um couple of solutions but really like for you all in the",
    "start": "1292000",
    "end": "1297760"
  },
  {
    "text": "audience um come and join the community and kind of see how do we how do we fix these how do we uh lock some of the",
    "start": "1297760",
    "end": "1304760"
  },
  {
    "text": "things down while not solving we we won't have anything that will solve all of these problems at the same",
    "start": "1304760",
    "end": "1310880"
  },
  {
    "text": "time cool so y yeah and so we're we're",
    "start": "1310880",
    "end": "1316480"
  },
  {
    "text": "going to cover kind of like what the future foundations of kubernetes looks like as well um just because all this",
    "start": "1316480",
    "end": "1322200"
  },
  {
    "text": "stuff has to work going forward we're trying to like solve the authorization problems but also as kubernetes itself",
    "start": "1322200",
    "end": "1327480"
  },
  {
    "text": "is changing we need to solve authorization problems for the future yep so one of the kind of when when",
    "start": "1327480",
    "end": "1335120"
  },
  {
    "text": "we're using more and more um kubernetes as a generic control plane framework these issues starts to pop up uh if we",
    "start": "1335120",
    "end": "1342559"
  },
  {
    "text": "talk about Federation then we know that well first we need to authenticate the",
    "start": "1342559",
    "end": "1347840"
  },
  {
    "text": "user how how do we authenticate users across different kubernetes clusters uh well there's different ways I mean you",
    "start": "1347840",
    "end": "1354039"
  },
  {
    "text": "can do it with oidc uh and some other things but spify is really uh all about",
    "start": "1354039",
    "end": "1360039"
  },
  {
    "text": "how to um how to get one trust domain to trust another trust domain and it really",
    "start": "1360039",
    "end": "1366880"
  },
  {
    "text": "excels at that so it's going to be interesting to see how these things evolve um going forward and how we can",
    "start": "1366880",
    "end": "1373640"
  },
  {
    "text": "integrate more natively there then if we have different levels of",
    "start": "1373640",
    "end": "1378919"
  },
  {
    "text": "trust domains we want to have often some some kind of policy which apply globally or you know like in a more General sense",
    "start": "1378919",
    "end": "1387240"
  },
  {
    "text": "but you actually need to do the authorization decisions always locally um if you in order to be available so",
    "start": "1387240",
    "end": "1394880"
  },
  {
    "text": "you need to sync partial partially authorization data between different trust domains and there are I mean you",
    "start": "1394880",
    "end": "1402559"
  },
  {
    "text": "can do this with controller runtime you can build your own controllers to do this but we're still yet to find one of",
    "start": "1402559",
    "end": "1408080"
  },
  {
    "text": "some kind of a little bit higher level that would kind of help us with some of the syncing problems or common um Corner",
    "start": "1408080",
    "end": "1415320"
  },
  {
    "text": "cases and then there's a principle that you can use that is kind of bind principle upwards or resources downwards",
    "start": "1415320",
    "end": "1422039"
  },
  {
    "text": "so I have example here um here is an example of how you can structure if you",
    "start": "1422039",
    "end": "1428200"
  },
  {
    "text": "have a three structure of of global region and local if we call it like that and you have a global rule then that",
    "start": "1428200",
    "end": "1436400"
  },
  {
    "text": "Global rule should bind to Global princi principles but if you want to have inheritance then you can bind either to",
    "start": "1436400",
    "end": "1443080"
  },
  {
    "text": "the the global resources or to resources downwards this means that if you do it",
    "start": "1443080",
    "end": "1448720"
  },
  {
    "text": "then you need to sync also this this Global kind of bindings um down to the",
    "start": "1448720",
    "end": "1453840"
  },
  {
    "text": "the more finer levels but then the interesting one is I'm in the middle here where you have a kind of region",
    "start": "1453840",
    "end": "1460880"
  },
  {
    "text": "level Rule now it's you might want to bind to the the kind of global identities or you",
    "start": "1460880",
    "end": "1467440"
  },
  {
    "text": "want to bind to the region level identities but then you shouldn't be able to bind to resources above your",
    "start": "1467440",
    "end": "1474880"
  },
  {
    "text": "level because then you could start kind of seeing up um or maybe it's uh that's",
    "start": "1474880",
    "end": "1480279"
  },
  {
    "text": "what you want but then you're U changing the trust domains or then you're breaking through trust domains so this",
    "start": "1480279",
    "end": "1486880"
  },
  {
    "text": "this kind of examp this is an example of how you can kind of um make a tree like",
    "start": "1486880",
    "end": "1492159"
  },
  {
    "text": "system um at least have some isolation um between each other um notably if if",
    "start": "1492159",
    "end": "1498039"
  },
  {
    "text": "this a kubernetes system um you can actually have a namespace cope service account if that was the smallest level",
    "start": "1498039",
    "end": "1504679"
  },
  {
    "text": "actually look cluster wide so it actually doesn't adhere to to this principle by the sign but but still that",
    "start": "1504679",
    "end": "1512240"
  },
  {
    "text": "gives some complications sometimes then kcp there was a really good um Talk from",
    "start": "1512240",
    "end": "1518080"
  },
  {
    "text": "Stefan um just uh the previous talk about kcp um it's a generic framework",
    "start": "1518080",
    "end": "1525039"
  },
  {
    "text": "for taking kubernetes but removing everything that is called container related so we're left with um apis like",
    "start": "1525039",
    "end": "1532720"
  },
  {
    "text": "namespace secret config map and and such uh but there's no deployments no node",
    "start": "1532720",
    "end": "1538360"
  },
  {
    "text": "and and these things and this really the project is about this cncf project it's",
    "start": "1538360",
    "end": "1543799"
  },
  {
    "text": "about focusing on three different levels of of kind of personas the platform",
    "start": "1543799",
    "end": "1548840"
  },
  {
    "text": "Builders and then service providers the service providers you could think of like as an app",
    "start": "1548840",
    "end": "1554080"
  },
  {
    "text": "store um where you you make the apps and then the platform builders in install apps and then the consumers are the",
    "start": "1554080",
    "end": "1561720"
  },
  {
    "text": "users of the phone and um here we're running into some limitations and and",
    "start": "1561720",
    "end": "1567840"
  },
  {
    "text": "thinking what is the best way forward one example um this is also a playground for these the new kind of ideas in the",
    "start": "1567840",
    "end": "1576080"
  },
  {
    "text": "space and then here is uh the delegation idea that we talked about um has a proposal in kcp to call be called a",
    "start": "1576080",
    "end": "1583520"
  },
  {
    "text": "warrant um so you can kind of act as yourself but get someone else's privileges for a short amount of",
    "start": "1583520",
    "end": "1591080"
  },
  {
    "text": "time similar to the set effective uid or set uid in in Linux cool so that's kind",
    "start": "1591080",
    "end": "1600000"
  },
  {
    "text": "of the Future Vision of kubernetes right it's kind of starting to abstract itself Beyond just even containers um so how",
    "start": "1600000",
    "end": "1607240"
  },
  {
    "text": "are we going to move forward with kind of authorization in that space um so uh",
    "start": "1607240",
    "end": "1612399"
  },
  {
    "text": "I think if we go back to the research that I was showing earlier uh it makes sense to start with what was the latest",
    "start": "1612399",
    "end": "1618120"
  },
  {
    "text": "um um the latest is is actually called reback which is relationship based access control um and in 2019 the thing",
    "start": "1618120",
    "end": "1625600"
  },
  {
    "text": "that actually made this popular was that Google wrote a paper on it um they called the paper Zanzibar after the",
    "start": "1625600",
    "end": "1631159"
  },
  {
    "text": "internal system that Google uses to power their product suite and check uh permissions across everything so that",
    "start": "1631159",
    "end": "1636720"
  },
  {
    "text": "drives all the permissions on uh Google photos uh Google Docs Gmail um all the",
    "start": "1636720",
    "end": "1642480"
  },
  {
    "text": "way through to their Cloud as well um so spice DV um which is a",
    "start": "1642480",
    "end": "1648480"
  },
  {
    "text": "project my company works on so I am biased um is a database that is modeled basically after Google's zanar paper uh",
    "start": "1648480",
    "end": "1655600"
  },
  {
    "text": "we follow the principles in that paper to the T and then kind of extend it Beyond Google isms um that only pertain",
    "start": "1655600",
    "end": "1661679"
  },
  {
    "text": "to deploying uh deployments inside of Google and make it kind of more friendly for companies external of Google to",
    "start": "1661679",
    "end": "1667559"
  },
  {
    "text": "actually use this stuff in their own applications uh conceptually you can think of it as a database that stores",
    "start": "1667559",
    "end": "1672640"
  },
  {
    "text": "authorization data and indexes it specifically for asking questions related to access control um the really",
    "start": "1672640",
    "end": "1680120"
  },
  {
    "text": "powerful concept with this is actually it lets you have a platform team operate your authorization stack so you can have",
    "start": "1680120",
    "end": "1687039"
  },
  {
    "text": "one centralized deployment of this where you can enforce best practices and have experts kind of consult across your",
    "start": "1687039",
    "end": "1692679"
  },
  {
    "text": "whole business to understand and make sure that you're doing the best practices for authorization and there's actually a",
    "start": "1692679",
    "end": "1699279"
  },
  {
    "text": "cncf project um that is similar to this it's uh spb isn't the only one trying to do this and that's octo open fga so you",
    "start": "1699279",
    "end": "1706440"
  },
  {
    "text": "can also go explore kind of the Computing Technologies in the space um but if we kind of frame it like",
    "start": "1706440",
    "end": "1713080"
  },
  {
    "text": "I framed Opa earlier you can see that there is kind of the data the schema and the engine um in this case it's space",
    "start": "1713080",
    "end": "1719799"
  },
  {
    "text": "TV's query engine but all this kind of fits in one box because it is a database so the data actually lives inside of",
    "start": "1719799",
    "end": "1725799"
  },
  {
    "text": "spice DB and is managed by spice DB and that way you can actually account for the consistency uh of the data when",
    "start": "1725799",
    "end": "1731120"
  },
  {
    "text": "you're actually making queries um so this actually checks all the boxes that we were looking at",
    "start": "1731120",
    "end": "1736200"
  },
  {
    "text": "before but that didn't the question of like how this would look like integrated in kubernetes um so at Paris cucon Paris",
    "start": "1736200",
    "end": "1746000"
  },
  {
    "text": "uh we actually launched a cube API proxy that's powered by TB this explicitly sits in front of the",
    "start": "1746000",
    "end": "1752080"
  },
  {
    "text": "kubernetes API and kind of man in the middle is your traffic but what it lets you do is Define your own custom TB",
    "start": "1752080",
    "end": "1758720"
  },
  {
    "text": "schema and data that is then checked whenever requests flow into kubernetes",
    "start": "1758720",
    "end": "1764399"
  },
  {
    "text": "so you could have a completely different uh application uh that is driving all your users that has all of its",
    "start": "1764399",
    "end": "1770360"
  },
  {
    "text": "authorization logic and it has absolutely nothing to do with kubernetes but it actually does Define the cluster",
    "start": "1770360",
    "end": "1775799"
  },
  {
    "text": "admins on your cluster um and that can actually start making authorization decisions on behalf of kubernetes so you",
    "start": "1775799",
    "end": "1782799"
  },
  {
    "text": "can actually just kind of either turn off kubernetes authorization Al together and rely on this or use it in combination with an external system",
    "start": "1782799",
    "end": "1789200"
  },
  {
    "text": "that's checking everything before and after um and the reason why we built this as an API proxy is because of the",
    "start": "1789200",
    "end": "1794360"
  },
  {
    "text": "limitations in the web hooks that we were kind of mentioning earlier so SP DB uh Cube API proxy can actually filter",
    "start": "1794360",
    "end": "1800919"
  },
  {
    "text": "individual results coming out of list um list apis so you can only actually see",
    "start": "1800919",
    "end": "1806080"
  },
  {
    "text": "views of the cluster that you have access to um and on an individual resource basis not on like a whole",
    "start": "1806080",
    "end": "1812200"
  },
  {
    "text": "namespace basis um and it definitely solves a bunch of the problems that uh we were talking about earlier with uh",
    "start": "1812200",
    "end": "1818559"
  },
  {
    "text": "asking different questions like discoverability who can perform these operations who are all the people that can manipulate this particular resource",
    "start": "1818559",
    "end": "1825799"
  },
  {
    "text": "um we hand all the synchronization for you and then uh it's really really easy to delegate uh for a different users",
    "start": "1825799",
    "end": "1831559"
  },
  {
    "text": "permissions because that's all just built into spice TB um but it does have this caveat of kind of running in this",
    "start": "1831559",
    "end": "1836720"
  },
  {
    "text": "privileged um position in front of the cube API server for today so here's kind of a visualization of that you can see",
    "start": "1836720",
    "end": "1842440"
  },
  {
    "text": "kind of the model that Lucas presented earlier all lives inside of kubernetes and then we kind of pre-check requests",
    "start": "1842440",
    "end": "1849279"
  },
  {
    "text": "coming into that and then we filter results coming out of that yep and then there's another nice",
    "start": "1849279",
    "end": "1856440"
  },
  {
    "text": "project by Micah here in the audience as well um where he's integrating Cedar",
    "start": "1856440",
    "end": "1862919"
  },
  {
    "text": "with cetes and um the reason that we would like to do",
    "start": "1862919",
    "end": "1868399"
  },
  {
    "text": "this is if we looked at the admission authorization and admission they are separate stages um but and you need",
    "start": "1868399",
    "end": "1876200"
  },
  {
    "text": "separate languages so rback in one and then uh common expression uh common expression language in one um but with",
    "start": "1876200",
    "end": "1883799"
  },
  {
    "text": "with something like this you could model both U stages at once so have one language where we' say that uh let this",
    "start": "1883799",
    "end": "1891120"
  },
  {
    "text": "user do this only if the body is like this um so then it's conditional and actually would Traverse that and we'll",
    "start": "1891120",
    "end": "1898120"
  },
  {
    "text": "we'll see if we can get some of those capabilities into into kuet as well um Cedar is a noning complete uh language",
    "start": "1898120",
    "end": "1905919"
  },
  {
    "text": "as well it's even analyzable fully by by kind of mats um and um open source um",
    "start": "1905919",
    "end": "1912559"
  },
  {
    "text": "made by Amazon and um here in this this kind of experiment we can also do kind of this policy theing uh which is a hard",
    "start": "1912559",
    "end": "1920279"
  },
  {
    "text": "problem but but solvable um we can kind of store uh the policies in for example",
    "start": "1920279",
    "end": "1927600"
  },
  {
    "text": "uh kuet crds or some other data store um but no data is kind of we don't need the",
    "start": "1927600",
    "end": "1934200"
  },
  {
    "text": "data here in this case um there's some experimental partial evaluation so like",
    "start": "1934200",
    "end": "1939760"
  },
  {
    "text": "these kind of lookup type queries could possibly be done um but that's still to be to be kind of determined um and then",
    "start": "1939760",
    "end": "1948440"
  },
  {
    "text": "one of the things I'm excited about is that if you have a front proxy then giving it only per permissions to uh",
    "start": "1948440",
    "end": "1955159"
  },
  {
    "text": "impersonate some kind types of users with a in a in some trust domain um so",
    "start": "1955159",
    "end": "1961080"
  },
  {
    "text": "here is what that would look like now instead of being before and after kubernetes it's actually hooking",
    "start": "1961080",
    "end": "1967360"
  },
  {
    "text": "out in the middle of the uh kubernetes request chain um twice and um handling",
    "start": "1967360",
    "end": "1973720"
  },
  {
    "text": "it all like with with one language um so that that that's a second solution or",
    "start": "1973720",
    "end": "1979039"
  },
  {
    "text": "kind of idea to to tackle some of these problems as again I said like we don't have a solution that would tackle every",
    "start": "1979039",
    "end": "1985720"
  },
  {
    "text": "problem um I don't think necessarily such a thing exists but um the third one",
    "start": "1985720",
    "end": "1991519"
  },
  {
    "text": "would be that like we could build a lot of controllers right so in the example of of uh I mean you can essentially",
    "start": "1991519",
    "end": "1997840"
  },
  {
    "text": "solve any problem in computer science by another level of indirection according to the famous quote um and uh for",
    "start": "1997840",
    "end": "2005159"
  },
  {
    "text": "example if roles and role bindings in don't have a TTL we can make a controller that just deletes them after",
    "start": "2005159",
    "end": "2011200"
  },
  {
    "text": "some time uh we can make different types of other delegation semantics and and things but um what we're trying to",
    "start": "2011200",
    "end": "2018799"
  },
  {
    "text": "figure out here is like what are the U right levels of sophistication between uh core and out of core um and also can",
    "start": "2018799",
    "end": "2026799"
  },
  {
    "text": "we find some projects that work for a sufficient um kind of large mass of of users uh for these um similar problems",
    "start": "2026799",
    "end": "2035880"
  },
  {
    "text": "and then finally going back to a privilege privilege escalation example",
    "start": "2035880",
    "end": "2040960"
  },
  {
    "text": "um you can actually solve this today by a user um being able to uh create a",
    "start": "2040960",
    "end": "2047559"
  },
  {
    "text": "deployment which would refer to a secret that they don't have access to you can prevent this using the a common",
    "start": "2047559",
    "end": "2052839"
  },
  {
    "text": "expression common expression language rule you see it's a little bit lengthy in the beginning because we need to kind",
    "start": "2052839",
    "end": "2058240"
  },
  {
    "text": "of Traverse the object the Json object but once you get there you can actually ask the authorizer that is the current",
    "start": "2058240",
    "end": "2063919"
  },
  {
    "text": "user able to see the secret that is being referenced so it's going to make make this kind of call to the kuet",
    "start": "2063919",
    "end": "2071200"
  },
  {
    "text": "authorizer so that's kind of that's kind of cool but um yeah there's more yeah so",
    "start": "2071200",
    "end": "2078000"
  },
  {
    "text": "kubernetes is just the first step right like the rest of this conference the second half of it is the cloud native ecosystem there's a whole bunch of tools",
    "start": "2078000",
    "end": "2084398"
  },
  {
    "text": "out there that are all integrating with kubernetes and all those tools also need to be thinking about how their",
    "start": "2084399",
    "end": "2089520"
  },
  {
    "text": "authorization is working and um in tandem with kubernetes itself so a really great example of that would be",
    "start": "2089520",
    "end": "2096158"
  },
  {
    "text": "Argo CD often given privilege um a system completely external to kubernetes",
    "start": "2096159",
    "end": "2101640"
  },
  {
    "text": "but is manipulating kubernetes and creating all the resources on your behalf it' be really great if that was",
    "start": "2101640",
    "end": "2106680"
  },
  {
    "text": "kind of cohesively managed with one single authorization system um if",
    "start": "2106680",
    "end": "2112280"
  },
  {
    "text": "there's one kind of takeaway from the stock that you get uh it should be that authorization is super complex and you",
    "start": "2112280",
    "end": "2117480"
  },
  {
    "text": "should not be rolling your own please do not try to implement it yourself without at least first evaluating existing",
    "start": "2117480",
    "end": "2122920"
  },
  {
    "text": "Tooling in the space and existing models uh that uh are out there so you at least familiar yourself with some of the",
    "start": "2122920",
    "end": "2128640"
  },
  {
    "text": "problems that you're going to face in the future um and then the ultimate goal of this is to kind of have this Docker",
    "start": "2128640",
    "end": "2134480"
  },
  {
    "text": "moment that we had with containers back in the day where everyone kind of was able to gather around common solutions",
    "start": "2134480",
    "end": "2140640"
  },
  {
    "text": "to solving these problems in a generic fashion where we could all kind of build on top of and be kind of supportive of",
    "start": "2140640",
    "end": "2146680"
  },
  {
    "text": "each other so with that I want to thank everyone um if you saw any project in",
    "start": "2146680",
    "end": "2152680"
  },
  {
    "text": "this talk that was interesting to you please join their communities everything we mentioned was open source so they're all kind of of uh looking for more",
    "start": "2152680",
    "end": "2158800"
  },
  {
    "text": "contributors and more interest and then also uhet is hiring um if you're looking",
    "start": "2158800",
    "end": "2164079"
  },
  {
    "text": "to work on a database as an engineer um we have open roles for that and is upbound hiring at all yes yeah of course",
    "start": "2164079",
    "end": "2171720"
  },
  {
    "text": "everyone is hiring um yeah thanks everyone",
    "start": "2171720",
    "end": "2176920"
  }
]