[
  {
    "text": "hey everyone welcome to this webinar on the project updates of open source litmus and what are the new set of features",
    "start": "80",
    "end": "7200"
  },
  {
    "text": "that we have been working on and added on the open source product my name is shayan i'm a senior software",
    "start": "7200",
    "end": "12320"
  },
  {
    "text": "engineer at harness and i've been closely working with the litmus open source project since the past two years",
    "start": "12320",
    "end": "17359"
  },
  {
    "text": "and also mainly working on the litmus 2.0 and the features associated with it now before",
    "start": "17359",
    "end": "23039"
  },
  {
    "text": "we move on just wanted to quickly add that we're really excited to do this and thank you for having us",
    "start": "23039",
    "end": "29439"
  },
  {
    "text": "the agenda for today is about the new features that we have added on latepass 2.0 and not just the core features since",
    "start": "29439",
    "end": "36399"
  },
  {
    "text": "i'm pretty sure you have already heard about the product and looked at the features that this bus 2.0 comes with",
    "start": "36399",
    "end": "43120"
  },
  {
    "text": "but rather the development features and the developer centric focus features that we have added to the",
    "start": "43120",
    "end": "49120"
  },
  {
    "text": "open source platform and also we are going to take a look at two different use cases to help understand how litmus",
    "start": "49120",
    "end": "54960"
  },
  {
    "text": "is actually being used in the world right now how litmus is adopted by different clients",
    "start": "54960",
    "end": "60239"
  },
  {
    "text": "we are also going to finish it with a small demo where we'll be seeing how uh the new enhanced features of litmus",
    "start": "60239",
    "end": "66000"
  },
  {
    "text": "can be put to use in a much in a commercial application so before we jump into the new developer",
    "start": "66000",
    "end": "72640"
  },
  {
    "text": "centric uh features that we have added uh just a quick refresher of what litmus is for",
    "start": "72640",
    "end": "77840"
  },
  {
    "text": "all the new users out there so litmus is a cross cloud cloud native chaos engineering tool set or a framework you",
    "start": "77840",
    "end": "84479"
  },
  {
    "text": "can also say that which helps not only srs but also developers and different personas any any personas try out chaos",
    "start": "84479",
    "end": "92720"
  },
  {
    "text": "with seamless integration and automation that will help you ease your chaos engineering journey so you can choose",
    "start": "92720",
    "end": "99040"
  },
  {
    "text": "different experiments you can create scenarios out of them and then you can run your workflows and do chaos in a",
    "start": "99040",
    "end": "104799"
  },
  {
    "text": "much simpler way with the help of that mask now assuming some of the community users",
    "start": "104799",
    "end": "111119"
  },
  {
    "text": "are present here and have already used clickmas we are going to take a look at the developer centric uh and the",
    "start": "111119",
    "end": "116560"
  },
  {
    "text": "developer focus features that we have added to help ease both the developers as well as the community users the",
    "start": "116560",
    "end": "121680"
  },
  {
    "text": "community uh contributors that have been working closely with us so previously we already had the ability",
    "start": "121680",
    "end": "128800"
  },
  {
    "text": "to add probes but we have also worked upon that and improved the",
    "start": "128800",
    "end": "134319"
  },
  {
    "text": "probe addition capability so now you can also once once you've added a probe now you can also go ahead and edit the same",
    "start": "134319",
    "end": "139599"
  },
  {
    "text": "probe previously we did not have the capability but now you can edit it uh like previously you have to delete the",
    "start": "139599",
    "end": "145280"
  },
  {
    "text": "entire thing and then create a new thing which was uh quite a bit of a pain when you",
    "start": "145280",
    "end": "150400"
  },
  {
    "text": "uh are thinking about constructing new probes and thinking of the hypothesis",
    "start": "150400",
    "end": "155519"
  },
  {
    "text": "and doing the steady state validation with groups so it's better that you get an edit option so now you do and you can",
    "start": "155519",
    "end": "162160"
  },
  {
    "text": "change the probe types in the same edit feature so you can just completely change the probe all together with this new probe editing feature",
    "start": "162160",
    "end": "169519"
  },
  {
    "text": "we have also improved the tune workflow section when you customize the scenarios so now you can also edit the sequences",
    "start": "169519",
    "end": "176239"
  },
  {
    "text": "so let's say you have two or two or more than two experiments in your same scenario then you can also go to edit",
    "start": "176239",
    "end": "182000"
  },
  {
    "text": "sequence and then customize your sequence put them in serial put them in parallel based on your requirements you",
    "start": "182000",
    "end": "187200"
  },
  {
    "text": "can also have a combination of both and also in the yaml section you can also update the same steps and that should be",
    "start": "187200",
    "end": "192800"
  },
  {
    "text": "visibly that should be visually visible in the error sequence as well and",
    "start": "192800",
    "end": "198080"
  },
  {
    "text": "there's also the option to go to the configuration wizard which is the pencil icon that you see on the different experiments in the table so there you",
    "start": "198080",
    "end": "204720"
  },
  {
    "text": "will have the option to tune your environments give certain values to your environment which will be reflected to the kiosk engine",
    "start": "204720",
    "end": "210879"
  },
  {
    "text": "and also at the bottom of the table you would also get advanced uh advanced options so in there you can select the",
    "start": "210879",
    "end": "216959"
  },
  {
    "text": "port gc strategy if you want to clean out all the different pods uh post chaos and then also if you want to add things",
    "start": "216959",
    "end": "223200"
  },
  {
    "text": "and tolerations to your particular chaos experiments then you can also do that kind of advanced configuration to that",
    "start": "223200",
    "end": "230799"
  },
  {
    "text": "third we have the ability to upgrade a kiosk delegate so let's say you are on the latest version of litmus you're",
    "start": "230799",
    "end": "236319"
  },
  {
    "text": "running your litmus workflows on the deployed with the latest version of litmus but uh the",
    "start": "236319",
    "end": "241840"
  },
  {
    "text": "community has pushed a few uh you you're a bit behind on the upgrade part so let's say the community",
    "start": "241840",
    "end": "248000"
  },
  {
    "text": "has pushed a new feature a new upgrade of the kiosk delegate so with with the new versions of litmus what you would be",
    "start": "248000",
    "end": "254560"
  },
  {
    "text": "able to notice is there's an upgrade option at the kiosk delegate side so if if you're on a latest deployed version",
    "start": "254560",
    "end": "261120"
  },
  {
    "text": "of litmus and there's an upgrade available of your gears delegate then it must litmus would suggest that you go",
    "start": "261120",
    "end": "266720"
  },
  {
    "text": "ahead and update your kiosk delegate to the latest version so if you're already on the latest version the button would be disabled but if you are not if you",
    "start": "266720",
    "end": "273680"
  },
  {
    "text": "are a little lagging behind on the update then litmus will show you the option to upgrade your chaos delegate to the latest version",
    "start": "273680",
    "end": "280320"
  },
  {
    "text": "next we have added a more secure our back with update to the apis this rbac",
    "start": "280320",
    "end": "285680"
  },
  {
    "text": "security updates have been added about to the api as well as to the ui so this",
    "start": "285680",
    "end": "290960"
  },
  {
    "text": "was mostly um a bug addressed uh from reported from",
    "start": "290960",
    "end": "296400"
  },
  {
    "text": "the community side which is addressed by us which is uh there are two uh our back permissions just editor",
    "start": "296400",
    "end": "302639"
  },
  {
    "text": "and the viewer so as a viewer you shouldn't be able to access certain pages certain",
    "start": "302639",
    "end": "308800"
  },
  {
    "text": "apis certain you shouldn't be able to do certain perform operations as a viewer",
    "start": "308800",
    "end": "314240"
  },
  {
    "text": "which where there was a few leaked cases where you would be able to create a scenario",
    "start": "314240",
    "end": "320400"
  },
  {
    "text": "or view and like go to the editing section of a particular workflow which you shouldn't be able to do as a viewer so",
    "start": "320400",
    "end": "327759"
  },
  {
    "text": "those things are addressed and now we have added a more secure hardback so now let's say a viewer is given the specific",
    "start": "327759",
    "end": "334160"
  },
  {
    "text": "screen through different api calls even you wouldn't be able to do so because the our back checks are also added to",
    "start": "334160",
    "end": "340000"
  },
  {
    "text": "the api so now the apis are hardened as well as the ui so now a viewer should not be able to view screens which are",
    "start": "340000",
    "end": "345919"
  },
  {
    "text": "only accessible via the admin and the editor also there have been uh requests of uh",
    "start": "345919",
    "end": "352720"
  },
  {
    "text": "adding the support of running or scheduling a basic cargo workflows rather than just uh chaos workflow so",
    "start": "352720",
    "end": "358479"
  },
  {
    "text": "previously we had the support of running different kinds of chaos workflows which were also argo workflows but we didn't",
    "start": "358479",
    "end": "364800"
  },
  {
    "text": "had the support to clearly run a very stripped down simple version of a basic cargo workflow so now we have modified",
    "start": "364800",
    "end": "371520"
  },
  {
    "text": "our back-end and we have added the support of uh just scheduling a basic argo workflow as well",
    "start": "371520",
    "end": "377280"
  },
  {
    "text": "so if you uh directly take on argo workflow from argo and try to run it on our platform that should work as of now",
    "start": "377280",
    "end": "385120"
  },
  {
    "text": "similarly once kubernetes moved once kubernetes updated to 1.22.0 and above",
    "start": "385120",
    "end": "390160"
  },
  {
    "text": "uh there were a few apis there were a few manifests deployments that users coming from the community side were",
    "start": "390160",
    "end": "395680"
  },
  {
    "text": "trying and they were unable to execute them because uh we didn't had support for 22 and above so we have also",
    "start": "395680",
    "end": "403680"
  },
  {
    "text": "addressed that and currently we do support uh all communities versions on 122 and above",
    "start": "403680",
    "end": "409599"
  },
  {
    "text": "we also added the support for ipv6 and to ensure that we have a better",
    "start": "409599",
    "end": "415919"
  },
  {
    "text": "end-to-end uh capability and to end uh strictness of all the different builds",
    "start": "415919",
    "end": "420960"
  },
  {
    "text": "and continually do this kind of deployments via nightly builds or via",
    "start": "420960",
    "end": "426479"
  },
  {
    "text": "regular ci checks we have done that we have ensured we do better testing and we have added more e2e test suits to cover",
    "start": "426479",
    "end": "434080"
  },
  {
    "text": "all aspects of this uh development so when we push or when we",
    "start": "434080",
    "end": "439919"
  },
  {
    "text": "complete our work by the end of the day there's al always multiple nightly builds happening so that it ensures and",
    "start": "439919",
    "end": "445840"
  },
  {
    "text": "also it gives you the report so that it ensures that you that you know the status of your deployments so we have also added the",
    "start": "445840",
    "end": "452400"
  },
  {
    "text": "ability to skip ssl verification so let's say in case of um applying a manifesto",
    "start": "452400",
    "end": "458800"
  },
  {
    "text": "you are trying to connect an agent so if you want to skip the ssl verification there is very much an option to do so",
    "start": "458800",
    "end": "464000"
  },
  {
    "text": "now so we have added feature so you can just provide the flag and you should be able to you should have the ability to",
    "start": "464000",
    "end": "469599"
  },
  {
    "text": "skip your ssl verification if your use case demands so also for developers also for",
    "start": "469599",
    "end": "476319"
  },
  {
    "text": "both the community developers as well as the developers in the core team you have improved the log functionality of the",
    "start": "476319",
    "end": "482800"
  },
  {
    "text": "different servers that we use so that way whenever you encounter a bug or whenever you encounter a",
    "start": "482800",
    "end": "488720"
  },
  {
    "text": "specific log that you're looking for let's say an asian connection or a subscriber connection so those log",
    "start": "488720",
    "end": "494000"
  },
  {
    "text": "metrics have been uh enhanced so now you you'll be getting better events you'll be getting better results so that way",
    "start": "494000",
    "end": "500800"
  },
  {
    "text": "you uh would be knowing what exactly went wrong or what exactly is happening so we have enhanced",
    "start": "500800",
    "end": "507120"
  },
  {
    "text": "that part of logs both uh for the development as well as for the productions uh production setup for",
    "start": "507120",
    "end": "512880"
  },
  {
    "text": "production when you visit the kiosk engine log so when you go to the show the workflow and you check the logs",
    "start": "512880",
    "end": "518640"
  },
  {
    "text": "there the pod logs they have better highlighting so let's say if a probes uh was resulted in success or failure or if",
    "start": "518640",
    "end": "525519"
  },
  {
    "text": "the experiment the verdict everything resulted in success or failure you'd be having that individual line uh",
    "start": "525519",
    "end": "531120"
  },
  {
    "text": "highlighted out as either green red or if it's a warning so those kind of things so we have taken measures to",
    "start": "531120",
    "end": "537600"
  },
  {
    "text": "enhance the logs both for the production as well as the development side now on the internal side we have also migrated",
    "start": "537600",
    "end": "543519"
  },
  {
    "text": "the project collection that we use so the project collection was used mainly to store metadata of the project of of",
    "start": "543519",
    "end": "548640"
  },
  {
    "text": "your litmus projects previously it was in the litmus database now we have shifted that to the authentication",
    "start": "548640",
    "end": "553920"
  },
  {
    "text": "database and also apart from just this shift we have also done uh internal code refactor",
    "start": "553920",
    "end": "559839"
  },
  {
    "text": "of the authentication server to enhance and improve security we have also added",
    "start": "559839",
    "end": "565040"
  },
  {
    "text": "enhancements in the cmd probe uh specifically in the source tab so previously we had the option to provide",
    "start": "565040",
    "end": "570880"
  },
  {
    "text": "source just as an inline source but with the latest updates we have added we have restructured it and we you can add",
    "start": "570880",
    "end": "577120"
  },
  {
    "text": "images and host network separately as a part of the source configuration we have",
    "start": "577120",
    "end": "582560"
  },
  {
    "text": "also hardened the litmus alpine images that were used in different litmuscas tools and also the e2a",
    "start": "582560",
    "end": "589519"
  },
  {
    "text": "pipeline to monitor all the pipeline builds uh have been created so there's nightly bills and and a whole e2e",
    "start": "589519",
    "end": "596480"
  },
  {
    "text": "dashboard that you can explore where you can see the different uh builds for individual workflows for",
    "start": "596480",
    "end": "603360"
  },
  {
    "text": "each of the experiments etc and also lastly uh we of course are working on new experiments so",
    "start": "603360",
    "end": "609839"
  },
  {
    "text": "experiments like aws az experiment azure disk laws etc so those new different",
    "start": "609839",
    "end": "615760"
  },
  {
    "text": "kind of experiments have also been added to the public chaos hub now let's take a look at",
    "start": "615760",
    "end": "621600"
  },
  {
    "text": "what ifood is what the company does and what was the use case that they",
    "start": "621600",
    "end": "626880"
  },
  {
    "text": "switched to using litmus and how it was actually helping them with the challenges that they faced ifood is one",
    "start": "626880",
    "end": "633519"
  },
  {
    "text": "of the most demanded latin american online food ordering platform and they have uh they have delivered more than 60",
    "start": "633519",
    "end": "639760"
  },
  {
    "text": "million orders each month they do deliver more than 60 million orders each month",
    "start": "639760",
    "end": "644959"
  },
  {
    "text": "it was founded in 2011 and it aimed to provide a better and a quicker solution for online phone delivery",
    "start": "644959",
    "end": "651839"
  },
  {
    "text": "with uh innovative systems so that user can order deliveries on the internet with uh no hassle and with ease of use",
    "start": "651839",
    "end": "659680"
  },
  {
    "text": "so with over 80 percent of the market share geographically ifood covers most cities and regions in brazil especially",
    "start": "659680",
    "end": "666399"
  },
  {
    "text": "in the brazil's uh financial center of sao paulo now what were the exact challenges that were faced by ifood",
    "start": "666399",
    "end": "674399"
  },
  {
    "text": "and why did they think that the solutions they had didn't really work out specific to their",
    "start": "674399",
    "end": "680720"
  },
  {
    "text": "specific use cases now due to its growing popularity of course because they were serving such a",
    "start": "680720",
    "end": "686880"
  },
  {
    "text": "huge amount of customers they decided to break their existing monolithic architecture into several",
    "start": "686880",
    "end": "692240"
  },
  {
    "text": "micro services so that they can scale better so this decision of moving from monolithic",
    "start": "692240",
    "end": "698480"
  },
  {
    "text": "to a micro service oriented architecture of course came with this came with its",
    "start": "698480",
    "end": "703920"
  },
  {
    "text": "works but also it came with much more complexity and additional costs so that was one why they were trying to",
    "start": "703920",
    "end": "711279"
  },
  {
    "text": "look for solutions to handle this kind of complexities and to deal with resiliency the more and",
    "start": "711279",
    "end": "717040"
  },
  {
    "text": "more they scale false like database services going out of business message brokers crashing and",
    "start": "717040",
    "end": "723200"
  },
  {
    "text": "the entire region of cloud providers going down due to different kind of outages and also network bandwidth",
    "start": "723200",
    "end": "729120"
  },
  {
    "text": "dropping uh without notice uh where definitely some other challenges and these are",
    "start": "729120",
    "end": "734399"
  },
  {
    "text": "like these are uh definitions of different outages that might happen to your systems to your",
    "start": "734399",
    "end": "740399"
  },
  {
    "text": "applications so these were some of the major problems that ifood was facing in",
    "start": "740399",
    "end": "745600"
  },
  {
    "text": "latin america and they wanted to mitigate these challenges because the user base was growing and they wanted to give them a seamless access to their",
    "start": "745600",
    "end": "753040"
  },
  {
    "text": "delivery platform now they decided to tighten up the reliability by continuously doing load tests and bare",
    "start": "753040",
    "end": "758880"
  },
  {
    "text": "minimum chaos experiments but the solutions that they were using at the time uh lacked specific use case driven",
    "start": "758880",
    "end": "765279"
  },
  {
    "text": "functionality so if they had certain scenarios in mind they wouldn't be able to do it but they will be able to target",
    "start": "765279",
    "end": "772000"
  },
  {
    "text": "and do basic cares but based on the problems mentioned above they wanted",
    "start": "772000",
    "end": "777120"
  },
  {
    "text": "something some solutions which can tether to their specific use cases and also the ability",
    "start": "777120",
    "end": "782720"
  },
  {
    "text": "to customize their own uh kind of scenarios based on their experience and use them",
    "start": "782720",
    "end": "789600"
  },
  {
    "text": "automatically as a in an automated fashion so they uh also had the requirement to",
    "start": "789600",
    "end": "795839"
  },
  {
    "text": "know which users perform what kind of chaos uh to enable a better back control in production so that let's say because",
    "start": "795839",
    "end": "802480"
  },
  {
    "text": "chaos testing uh requires uh an amount of responsibility when you're doing it so they wanted to know which user is",
    "start": "802480",
    "end": "809040"
  },
  {
    "text": "performing what kind of cures because if they're doing it on production or let's on a specific environment",
    "start": "809040",
    "end": "814560"
  },
  {
    "text": "and if something goes horribly wrong because of a specific uh chaos experiment then they would like to",
    "start": "814560",
    "end": "820800"
  },
  {
    "text": "know which user performed what experiment and what was the scale of it uh what exactly did it target so those",
    "start": "820800",
    "end": "826800"
  },
  {
    "text": "kind of things they wanted to know which user performed what uh and enabled better our back controls",
    "start": "826800",
    "end": "832800"
  },
  {
    "text": "and the current kiosk engineering solutions they were using uh was not really automated and it also had limited",
    "start": "832800",
    "end": "839199"
  },
  {
    "text": "number of experiments but with the amount of ideas that ifood had regarding the",
    "start": "839199",
    "end": "845680"
  },
  {
    "text": "scenarios they wanted to create uh these kind of things they wanted to customize the experiments and eliminate manual",
    "start": "845680",
    "end": "852320"
  },
  {
    "text": "cost as much as possible because they wanted to have these ideas created custom",
    "start": "852320",
    "end": "857839"
  },
  {
    "text": "scenarios and also automate the same and have it running by itself rather than doing it manually so these are some of",
    "start": "857839",
    "end": "864240"
  },
  {
    "text": "the challenges that they faced and one of the main challenges downtime which is why",
    "start": "864240",
    "end": "869760"
  },
  {
    "text": "the thought came into their mind to switch to an automated chaos tool",
    "start": "869760",
    "end": "875920"
  },
  {
    "text": "so what exactly would go wrong if you have down times right so",
    "start": "875920",
    "end": "882079"
  },
  {
    "text": "right off the bat there's a loss of customer confidence which is the biggest uh let down if you have an application",
    "start": "882079",
    "end": "888079"
  },
  {
    "text": "with a huge base of customer and uh there's a time there's even a slight amount of downtime uh you would have a",
    "start": "888079",
    "end": "894320"
  },
  {
    "text": "loss of customer confidence and not to also mention the amount of costs that you might incur in that time frame so",
    "start": "894320",
    "end": "901440"
  },
  {
    "text": "the average down time for an outage is reported to be about 79 minutes and the",
    "start": "901440",
    "end": "906720"
  },
  {
    "text": "average cost of these down times are about 84 000 so which is uh",
    "start": "906720",
    "end": "912880"
  },
  {
    "text": "huge considering uh in that uh period of time let's say even if it's not 79 minutes even if it's five minutes",
    "start": "912880",
    "end": "920480"
  },
  {
    "text": "uh in that five minutes millions of users could have ideally clicked on or",
    "start": "920480",
    "end": "926160"
  },
  {
    "text": "wanted to get food or wanted to have something delivered or just wanted to check out your platform so that is the",
    "start": "926160",
    "end": "931440"
  },
  {
    "text": "main thing when there's down time so you have a huge amount of customer confidence that is lost also the damage",
    "start": "931440",
    "end": "937040"
  },
  {
    "text": "to brands integrity if if a certain outage is faced by them so i would consider those two as the main",
    "start": "937040",
    "end": "943600"
  },
  {
    "text": "points to note when you have down times now how litmus exactly is helping ifood",
    "start": "943600",
    "end": "948800"
  },
  {
    "text": "now litmus came in with the idea of providing a lot of chaos experiments which suited their requirements because",
    "start": "948800",
    "end": "955360"
  },
  {
    "text": "litmus has the ability to add your own private hubs as well as the public hub which litmus has is also",
    "start": "955360",
    "end": "962240"
  },
  {
    "text": "filled up with over 50 plus experiments so one of those experiments they can usually pick up and then add on top of",
    "start": "962240",
    "end": "968800"
  },
  {
    "text": "it and it comes and it covers a range of different types of experiments so i",
    "start": "968800",
    "end": "974560"
  },
  {
    "text": "would really like that idea of having to uh customize something that they can use",
    "start": "974560",
    "end": "980560"
  },
  {
    "text": "for their specific requirements because there were multiple options multiple areas uh that litmus was touching",
    "start": "980560",
    "end": "987040"
  },
  {
    "text": "so they went with a declarative approach which helped them customize these kiosk experiments and then target the",
    "start": "987040",
    "end": "993040"
  },
  {
    "text": "chaos engineer and target the chaos engine further to add their own ends and attune that specifically to their",
    "start": "993040",
    "end": "999120"
  },
  {
    "text": "requirement well it must also give them the ability to uh fine grain these are back controls by having integration with",
    "start": "999120",
    "end": "1005600"
  },
  {
    "text": "decks so they integrated with the authentication service called x",
    "start": "1005600",
    "end": "1010800"
  },
  {
    "text": "and authenticated users still atmospheres which restricted their services as a developer to target",
    "start": "1010800",
    "end": "1016480"
  },
  {
    "text": "specific applications where they can inject chaos so that gave them the ability to",
    "start": "1016480",
    "end": "1021519"
  },
  {
    "text": "restrict certain users to perform certain activities and gave the r back level control that they were",
    "start": "1021519",
    "end": "1027360"
  },
  {
    "text": "initially looking for we also gave them the ability to construct a workflow as a cron now",
    "start": "1027360",
    "end": "1032880"
  },
  {
    "text": "because they wanted to automate and also and save manual labor because we have the option to even save it save the",
    "start": "1032880",
    "end": "1039199"
  },
  {
    "text": "different scenarios as a template for later use so that aided with easier automation and auto chaos even after",
    "start": "1039199",
    "end": "1045038"
  },
  {
    "text": "specific intervals so that is one so that is one feature that they considered handy and that is something that is",
    "start": "1045039",
    "end": "1050080"
  },
  {
    "text": "helping them to automate this entire process and remove manual labor as much as possible so yeah",
    "start": "1050080",
    "end": "1055600"
  },
  {
    "text": "that was uh one of the stories that ifood currently is using litmus for and to continue with",
    "start": "1055600",
    "end": "1063120"
  },
  {
    "text": "the next use case and also the demo i would like to hand it over to nilanjan and he can guide you with the rest",
    "start": "1063120",
    "end": "1070480"
  },
  {
    "text": "hello let us take a look at another end user use case hello doc hello doc is the most popular all-around",
    "start": "1070480",
    "end": "1078640"
  },
  {
    "text": "healthcare application in indonesia a rapidly growing startup founded in 2016",
    "start": "1078640",
    "end": "1083760"
  },
  {
    "text": "the mission is to simplify and bring quality healthcare across indonesia hallo dock has partnered with more than",
    "start": "1083760",
    "end": "1090720"
  },
  {
    "text": "4000 pharmacies in over 100 cities to bring medicine to people's doorsteps",
    "start": "1090720",
    "end": "1095919"
  },
  {
    "text": "recently they have launched a premium appointment service that partners with more than 500 hospitals for booking",
    "start": "1095919",
    "end": "1102559"
  },
  {
    "text": "their doctor appointments using the application the platform is composed of several",
    "start": "1102559",
    "end": "1108160"
  },
  {
    "text": "microservices hosted across hybrid infrastructure elements mainly on a managed kubernetes cloud with an",
    "start": "1108160",
    "end": "1114880"
  },
  {
    "text": "intricately designed communication framework halodoc has leveraged aws cloud services",
    "start": "1114880",
    "end": "1120640"
  },
  {
    "text": "such as rds lambda ms3 and consumes a significant suit of open source tooling",
    "start": "1120640",
    "end": "1127200"
  },
  {
    "text": "especially from the cncf landscape to support these core services",
    "start": "1127200",
    "end": "1133600"
  },
  {
    "text": "while operating a platform of such scale where newer services are onboarded quite frequently it's quite plausible to",
    "start": "1133600",
    "end": "1141280"
  },
  {
    "text": "encounter service down times due to an unanticipated causes it's not an isolated incident where",
    "start": "1141280",
    "end": "1148160"
  },
  {
    "text": "newly added services go down which eventually get mitigated after much effort",
    "start": "1148160",
    "end": "1153600"
  },
  {
    "text": "that affects the team and end users in a system with the kind of dependencies that halodoc had it was",
    "start": "1153600",
    "end": "1161039"
  },
  {
    "text": "prudent to test and measure service availability across a host of failure scenarios",
    "start": "1161039",
    "end": "1166799"
  },
  {
    "text": "this needed to be done before going live and occasionally after it albeit in a more controlled manner",
    "start": "1166799",
    "end": "1173600"
  },
  {
    "text": "hence chaos engineering was found suitable to supplement the existing qa",
    "start": "1173600",
    "end": "1180000"
  },
  {
    "text": "with comprehensive automated test suits and periodic performance testing analysis to make the platform",
    "start": "1180000",
    "end": "1187200"
  },
  {
    "text": "more robust the major requirements that halodoc",
    "start": "1187200",
    "end": "1192799"
  },
  {
    "text": "chaos engineering practices sought to include first being kubernetes native",
    "start": "1192799",
    "end": "1198080"
  },
  {
    "text": "halodoc uses kubernetes as the underlying platform for majority of the",
    "start": "1198080",
    "end": "1203679"
  },
  {
    "text": "business services including hosting tools that operate and manage observability across their fleet of",
    "start": "1203679",
    "end": "1210080"
  },
  {
    "text": "clusters they also needed a chaos tool that could be deployed and managed on arm64 that is",
    "start": "1210080",
    "end": "1217120"
  },
  {
    "text": "aws gravitron based kubernetes as well as the ability to express a chaos test",
    "start": "1217120",
    "end": "1223360"
  },
  {
    "text": "in kubernetes as language that is resource yamls second being wide range of experiments",
    "start": "1223360",
    "end": "1230400"
  },
  {
    "text": "considering the microservices span across several frameworks and languages such as java python c plus plus and",
    "start": "1230400",
    "end": "1237360"
  },
  {
    "text": "golang it was vital to subject them to varied service level faults",
    "start": "1237360",
    "end": "1243440"
  },
  {
    "text": "add to it the hybrid nature of the infrastructure varied aws services",
    "start": "1243440",
    "end": "1250240"
  },
  {
    "text": "and the ability to target non-kubernetes entities like cloud instances disks etc",
    "start": "1250240",
    "end": "1257039"
  },
  {
    "text": "becomes clear furthermore the application developers were required to",
    "start": "1257039",
    "end": "1262400"
  },
  {
    "text": "be able to build their own faults and integrate them into the suit and have",
    "start": "1262400",
    "end": "1268000"
  },
  {
    "text": "them orchestrated in a similar fashion to the cloud native faults",
    "start": "1268000",
    "end": "1273039"
  },
  {
    "text": "chaos scenario definition there was a need for full-fledged chaos scenarios that combined faults with some",
    "start": "1273039",
    "end": "1280400"
  },
  {
    "text": "custom validation depending on the use case as the chaos jets were expected to run in an",
    "start": "1280400",
    "end": "1286960"
  },
  {
    "text": "automated fashion after the initial experimentation or establishing a good fit",
    "start": "1286960",
    "end": "1292880"
  },
  {
    "text": "hello doc also uses a variety of synthetic load tools mapped to the families of microservices in its test",
    "start": "1292880",
    "end": "1300960"
  },
  {
    "text": "environment that they wanted to leverage as part of the chaos experiments to make it more effective and derive",
    "start": "1300960",
    "end": "1308159"
  },
  {
    "text": "greater confidence security features the tired staging environments at",
    "start": "1308159",
    "end": "1314400"
  },
  {
    "text": "halodoc are multi-user shared by environments accessed by dedicated",
    "start": "1314400",
    "end": "1319520"
  },
  {
    "text": "service owners sre teams with frequent upgrade to their applications",
    "start": "1319520",
    "end": "1324880"
  },
  {
    "text": "hello doc needed a tool with the ability to isolate the chaos view for respective",
    "start": "1324880",
    "end": "1330320"
  },
  {
    "text": "teams with admin controls in place for the possible blast radius contain",
    "start": "1330320",
    "end": "1336480"
  },
  {
    "text": "this allied with the standard security considerations around running the third party containers were required",
    "start": "1336480",
    "end": "1344400"
  },
  {
    "text": "observations hallo dock relies heavily on observability both for monitoring",
    "start": "1344400",
    "end": "1350640"
  },
  {
    "text": "application or infrastructure behavior the stack includes new relic prometheus grafana elasticsearch etc as well as for",
    "start": "1350640",
    "end": "1359280"
  },
  {
    "text": "reporting and analysis they use allure for test reports and lighthouse for service analytics",
    "start": "1359280",
    "end": "1367200"
  },
  {
    "text": "it was only judicious to choose a chaos framework that can provide with enough",
    "start": "1367200",
    "end": "1372400"
  },
  {
    "text": "data to ingest in terms of logs metrics and events lastly community support hello doc saw",
    "start": "1372400",
    "end": "1379760"
  },
  {
    "text": "value in an open source project that has a strong community around the tool with approachable",
    "start": "1379760",
    "end": "1385440"
  },
  {
    "text": "maintenance who could see reasons in the issues raised and the proposed enhancements while keeping a welcoming",
    "start": "1385440",
    "end": "1392080"
  },
  {
    "text": "environment for users who can contribute back hence hello dog chose led per squares",
    "start": "1392080",
    "end": "1399919"
  },
  {
    "text": "which met the requirement criterias to a great extent while having a road map and release cartons that align well",
    "start": "1399919",
    "end": "1407120"
  },
  {
    "text": "to their needs and pace another reason for choosing latvia's chaos is the ktop support which allowed",
    "start": "1407120",
    "end": "1413840"
  },
  {
    "text": "for the automation of chaos experiments halodoc has also contributed towards",
    "start": "1413840",
    "end": "1419760"
  },
  {
    "text": "better user experience in the chaos center and improving the security of the platform from them",
    "start": "1419760",
    "end": "1427279"
  },
  {
    "text": "halodoc's initial efforts with litmus involved manually creating chaos engine custom resources targeting the",
    "start": "1427360",
    "end": "1433760"
  },
  {
    "text": "application ports to verify their behavior this in itself proved beneficial with",
    "start": "1433760",
    "end": "1440400"
  },
  {
    "text": "some interesting application behavior unheard in the development process",
    "start": "1440400",
    "end": "1445760"
  },
  {
    "text": "eventually the experiments were crafted with right validations using litmus",
    "start": "1445760",
    "end": "1450799"
  },
  {
    "text": "probes to form chaos workflow resources that can be invoked programmatically and",
    "start": "1450799",
    "end": "1455919"
  },
  {
    "text": "automate the process of hypothesis validation during the chaos today these chaos workflows are stored",
    "start": "1455919",
    "end": "1463679"
  },
  {
    "text": "in a dedicated git repository are mapped to a respective application services via",
    "start": "1463679",
    "end": "1468960"
  },
  {
    "text": "subscription mechanism and are triggered upon app upgrade via the litmus even tracker service residing within the",
    "start": "1468960",
    "end": "1475760"
  },
  {
    "text": "staging cluster while the chaos experiments on staging are used as a gating mechanism for",
    "start": "1475760",
    "end": "1481840"
  },
  {
    "text": "deployment into production the team at halodoc believes firmly in the merits of",
    "start": "1481840",
    "end": "1487279"
  },
  {
    "text": "testing and production scheduled chaos experiments are used to conduct automated game days in the",
    "start": "1487279",
    "end": "1494000"
  },
  {
    "text": "production environment with a mapping between the fault type and load conditions that are devised based on the",
    "start": "1494000",
    "end": "1500880"
  },
  {
    "text": "usage and traffic patterns the results of these experiments are then fed into a data lake for further",
    "start": "1500880",
    "end": "1508000"
  },
  {
    "text": "analysis by the development teams while the reports from the chaos center the control plane component of the",
    "start": "1508000",
    "end": "1515039"
  },
  {
    "text": "litmus chaos especially those around comparisons of the resiliency score of scenarios are",
    "start": "1515039",
    "end": "1521520"
  },
  {
    "text": "also leveraged for high level views the personal involved in creating or",
    "start": "1521520",
    "end": "1526559"
  },
  {
    "text": "maintaining the and tracking the chaos tests on staging are largely developers and",
    "start": "1526559",
    "end": "1533120"
  },
  {
    "text": "extended tech teams belonging to different verticals while the game days are exclusively",
    "start": "1533120",
    "end": "1539440"
  },
  {
    "text": "carried out by the members of the sre team the upgrades to the of the chaos",
    "start": "1539440",
    "end": "1545279"
  },
  {
    "text": "microservices on the clusters are carried out in much of the same fashion as any other tooling with the",
    "start": "1545279",
    "end": "1552159"
  },
  {
    "text": "application undergoing standard scans and checks in the gitlab pipelines with",
    "start": "1552159",
    "end": "1557760"
  },
  {
    "text": "that we are all set for a demonstration of litmus where we'll see that how we",
    "start": "1557760",
    "end": "1562960"
  },
  {
    "text": "can inject chaos into a kubernetes application to assess its resiliency see",
    "start": "1562960",
    "end": "1568320"
  },
  {
    "text": "you in the demo hello there and welcome to the demo on litmus chaos but before",
    "start": "1568320",
    "end": "1573679"
  },
  {
    "text": "we actually jump into creating some chaos as you can see i'm here in my chaos center i would like to bring your",
    "start": "1573679",
    "end": "1579440"
  },
  {
    "text": "attention to the booty cap the booty cap is basically an e-commerce",
    "start": "1579440",
    "end": "1585200"
  },
  {
    "text": "microservice application which is completely composed of kubernetes microservices",
    "start": "1585200",
    "end": "1590640"
  },
  {
    "text": "you have your typical sections of an e-commerce application such as the different products that you can buy the",
    "start": "1590640",
    "end": "1596960"
  },
  {
    "text": "product descriptions for each one of them and you also have something like a for",
    "start": "1596960",
    "end": "1602159"
  },
  {
    "text": "cart for example where you would essentially store all the items that you are meaning to check out and pay for",
    "start": "1602159",
    "end": "1609279"
  },
  {
    "text": "so what we are going to do today as part of our demo is basically we are going to",
    "start": "1609279",
    "end": "1614559"
  },
  {
    "text": "inject some chaos within this boutique application and see how does it face",
    "start": "1614559",
    "end": "1620080"
  },
  {
    "text": "against the injected chaos to be more specific what we are going to do today is we are going to",
    "start": "1620080",
    "end": "1626400"
  },
  {
    "text": "use our http chaos experiments which is one of the newly added chaos experiments",
    "start": "1626400",
    "end": "1632320"
  },
  {
    "text": "and will target it against this particular card service which is a microservice within the kubernetes and",
    "start": "1632320",
    "end": "1639600"
  },
  {
    "text": "see what is its effect on our application before we actually jump to doing some of",
    "start": "1639600",
    "end": "1646320"
  },
  {
    "text": "the chaos i would also like to show you this dashboard which is a grafana dashboard",
    "start": "1646320",
    "end": "1652799"
  },
  {
    "text": "for our boutique application as you can see right now the metrics that we can observe here in",
    "start": "1652799",
    "end": "1660000"
  },
  {
    "text": "the dashboards are indicative of a normal system behavior we have a black box exporter which",
    "start": "1660000",
    "end": "1666480"
  },
  {
    "text": "indicates the service endpoint is quite healthy and the probe success percentage",
    "start": "1666480",
    "end": "1671679"
  },
  {
    "text": "for the same is 100 therefore and we can also see the queries per",
    "start": "1671679",
    "end": "1676720"
  },
  {
    "text": "second of the cart lies somewhere in the range of 60 to 40 f uh qps or ops",
    "start": "1676720",
    "end": "1682960"
  },
  {
    "text": "basically which is indicative of a normal system behavior and the access duration or you can see the latency is",
    "start": "1682960",
    "end": "1690480"
  },
  {
    "text": "also quite low right now which is in vicinity of somewhere 2.4 2. 2.8 seconds which is quite normal",
    "start": "1690480",
    "end": "1698720"
  },
  {
    "text": "so yeah with that we can actually go ahead and target our chaos within our",
    "start": "1698720",
    "end": "1703840"
  },
  {
    "text": "application using an http chaos experiment to do so in my chaos center i'll first",
    "start": "1703840",
    "end": "1711200"
  },
  {
    "text": "of all schedule a chaos scenario i'll choose the self agent that i have",
    "start": "1711200",
    "end": "1716240"
  },
  {
    "text": "and go next then i'll choose chaos up because that's where my baud http latency experiment",
    "start": "1716240",
    "end": "1722720"
  },
  {
    "text": "the experiments is situated then i'll go next and then we can name this",
    "start": "1722720",
    "end": "1730799"
  },
  {
    "text": "scott kiosk scenario since we are targeting the cart",
    "start": "1731120",
    "end": "1737159"
  },
  {
    "text": "and over here we need to now add our experiment which happens to be pod",
    "start": "1739039",
    "end": "1745200"
  },
  {
    "text": "http latency now that we have added our chaos",
    "start": "1745200",
    "end": "1751440"
  },
  {
    "text": "experiments we just need to simply uh fill up this experiment in a way that",
    "start": "1751440",
    "end": "1756480"
  },
  {
    "text": "we are specifying the exact details of our chaos so that the experiment can",
    "start": "1756480",
    "end": "1762399"
  },
  {
    "text": "target the requisite pod and the resource that via target that we want to",
    "start": "1762399",
    "end": "1767440"
  },
  {
    "text": "target so for that i'll first of all go next over here",
    "start": "1767440",
    "end": "1774640"
  },
  {
    "text": "and here in the application name space we need to choose the name space in which our boutique applies so that",
    "start": "1774799",
    "end": "1782080"
  },
  {
    "text": "happens to be litmus for now since we have installed it in the same name space as of litmus chaos",
    "start": "1782080",
    "end": "1787760"
  },
  {
    "text": "and for the application kind well it is a deployment the cart is present as a deployment here",
    "start": "1787760",
    "end": "1793760"
  },
  {
    "text": "and if we check for the label we can see that the litmus chaos performs",
    "start": "1793760",
    "end": "1799520"
  },
  {
    "text": "your kubernetes resource discovery so that it can fetch the",
    "start": "1799520",
    "end": "1805120"
  },
  {
    "text": "label for our cart service over here so we'll choose app is equal to cart service",
    "start": "1805120",
    "end": "1810799"
  },
  {
    "text": "now it's worth mentioning that we have only one port under this deployment which we are going to target right now",
    "start": "1810799",
    "end": "1817760"
  },
  {
    "text": "so let us see what would be the effect on our application when we are targeting the only prison pod",
    "start": "1817760",
    "end": "1825520"
  },
  {
    "text": "so we'll go next from here and at this point we can add a litmus probe so what is a litmus probe well for",
    "start": "1825520",
    "end": "1833279"
  },
  {
    "text": "the uninitiated litmus probes are a way to automate the process of hypothesis validation in a simple and declarative",
    "start": "1833279",
    "end": "1840559"
  },
  {
    "text": "manner what we are going to do is we are going to define a criteria for this probe and",
    "start": "1840559",
    "end": "1846559"
  },
  {
    "text": "it the probe will basically validate this criteria when we are injecting our cures and this would allow us to",
    "start": "1846559",
    "end": "1853520"
  },
  {
    "text": "validate whether that condition is fulfilled or not as part of this experiment and help us to determine the",
    "start": "1853520",
    "end": "1860399"
  },
  {
    "text": "outcome of this experiment so to do so i'll first of all add a new probe",
    "start": "1860399",
    "end": "1865919"
  },
  {
    "text": "i'll go for let's say a cart probe over here that's the name of the probe and it would be a",
    "start": "1865919",
    "end": "1871760"
  },
  {
    "text": "type of an http probe which will be running in a continuous mode that is throughout the experiment in a",
    "start": "1871760",
    "end": "1877200"
  },
  {
    "text": "continuous fashion before we fill up any of the pro properties i'll",
    "start": "1877200",
    "end": "1882880"
  },
  {
    "text": "first of all try to bring your attention to what we are going to do as part of this http probe we are going to validate",
    "start": "1882880",
    "end": "1889279"
  },
  {
    "text": "the end point of this cart",
    "start": "1889279",
    "end": "1895679"
  },
  {
    "text": "of this cart here in the booty cap so we are just going to provide the url",
    "start": "1895679",
    "end": "1901120"
  },
  {
    "text": "over here for the cart and the condition that we are going to enforce to be checked",
    "start": "1901120",
    "end": "1907840"
  },
  {
    "text": "is we are expecting a response code of 200 whenever we are performing a get request so what would",
    "start": "1907840",
    "end": "1914799"
  },
  {
    "text": "happen is that we'll be performing a http get request at this particular end",
    "start": "1914799",
    "end": "1921200"
  },
  {
    "text": "point in a continuous fashion throughout the duration of the experiment",
    "start": "1921200",
    "end": "1927760"
  },
  {
    "text": "now we can go ahead and specify a few pro properties that is what is the timeout after which the probe",
    "start": "1927760",
    "end": "1935200"
  },
  {
    "text": "would time out basically with fail so let us give this as three seconds and how many times shall we retry in an",
    "start": "1935200",
    "end": "1942880"
  },
  {
    "text": "event where our probe is actually failing so we can set this as once we can retry once just to be sure and then",
    "start": "1942880",
    "end": "1949679"
  },
  {
    "text": "what is the interval that we want to uh have between the successive probe",
    "start": "1949679",
    "end": "1954880"
  },
  {
    "text": "iteration so we can see that this can be one so with that uh we are pretty much done",
    "start": "1954880",
    "end": "1961600"
  },
  {
    "text": "with expressing our probe in a declarative fashion as you saw and that's all you",
    "start": "1961600",
    "end": "1966799"
  },
  {
    "text": "need to basically to initialize a probe and check your application steady state",
    "start": "1966799",
    "end": "1972159"
  },
  {
    "text": "conditions during the chaos so with that i'll add the probe and go",
    "start": "1972159",
    "end": "1977200"
  },
  {
    "text": "next lastly in the last step we just need to specify a few environment parameters for",
    "start": "1977200",
    "end": "1983440"
  },
  {
    "text": "the experiment so these are the parameters through which the experiment would run first is the total chaos",
    "start": "1983440",
    "end": "1988880"
  },
  {
    "text": "duration so we'll be running this for a duration of 60 seconds which seems plausible and for the latency uh what",
    "start": "1988880",
    "end": "1995919"
  },
  {
    "text": "i'll do is i'll add a very big latency which would essentially go ahead and",
    "start": "1995919",
    "end": "2003679"
  },
  {
    "text": "block our http request for this latency value and this is in milliseconds so i'm adding an http",
    "start": "2003679",
    "end": "2009840"
  },
  {
    "text": "latency of 80 000 milliseconds which appears to be very large so we'll see",
    "start": "2009840",
    "end": "2015120"
  },
  {
    "text": "what happens when we are applying this large of a latency to this experiment",
    "start": "2015120",
    "end": "2021760"
  },
  {
    "text": "also we need to provide our target service port so this is the port that we are targeting for that deployment",
    "start": "2021760",
    "end": "2028799"
  },
  {
    "text": "service so let us try to see what this target service port looks like within our",
    "start": "2028799",
    "end": "2034960"
  },
  {
    "text": "kubernetes terminal that is using cubectl so what i'll do is i'll try to list down",
    "start": "2034960",
    "end": "2040799"
  },
  {
    "text": "all the services that we have",
    "start": "2040799",
    "end": "2047440"
  },
  {
    "text": "over here you can see that we have a card service and the card service has a port of 7070 so we'll be using this as",
    "start": "2047440",
    "end": "2055440"
  },
  {
    "text": "our target port",
    "start": "2055440",
    "end": "2059078"
  },
  {
    "text": "lastly i need to also specify our container rundown so i'm using a container d runtime so i'll just",
    "start": "2060800",
    "end": "2067440"
  },
  {
    "text": "promptly go ahead and mention the container runtime as well as these socket paths",
    "start": "2067440",
    "end": "2074599"
  },
  {
    "text": "with that we are ready to go ahead but not before we actually",
    "start": "2081119",
    "end": "2086480"
  },
  {
    "text": "specify the parts affected percentage so this is the percentage of the parts that we are meaning to target",
    "start": "2086480",
    "end": "2092878"
  },
  {
    "text": "so the minimum number of parts that this experiment will target is one",
    "start": "2092879",
    "end": "2098560"
  },
  {
    "text": "and above that like whatever percentage we are specifying over here would be the",
    "start": "2098560",
    "end": "2105119"
  },
  {
    "text": "uh would be the percentage that it will go ahead and target so i'll mention 50 over here 50",
    "start": "2105119",
    "end": "2111119"
  },
  {
    "text": "would essentially mean half of the parts that are as part of our deployment but since we have only one part right now so",
    "start": "2111119",
    "end": "2118079"
  },
  {
    "text": "it would go ahead and target only one part so with that we can finish up over here",
    "start": "2118079",
    "end": "2124160"
  },
  {
    "text": "and i'll make revert schedule to false what this will do is that basically it won't delete any of the application or",
    "start": "2124160",
    "end": "2131200"
  },
  {
    "text": "basically the experiment uh metadata that that is getting created",
    "start": "2131200",
    "end": "2136240"
  },
  {
    "text": "during the experiment execution this includes all the pods or the workflow resources that we are having as part of",
    "start": "2136240",
    "end": "2142880"
  },
  {
    "text": "the experiment so this would allow us to retain the locks so that we can view them",
    "start": "2142880",
    "end": "2149599"
  },
  {
    "text": "with that i'll go next and we can specify a weight for our",
    "start": "2149599",
    "end": "2155119"
  },
  {
    "text": "calculation of the resiliency score at the end of the test so we can keep it at",
    "start": "2155119",
    "end": "2160320"
  },
  {
    "text": "at 10 since we have only one chaos experiment and it doesn't really matter what uh weight we are providing here as",
    "start": "2160320",
    "end": "2166880"
  },
  {
    "text": "we only have one experiment we can go next now and i would like to schedule now",
    "start": "2166880",
    "end": "2173839"
  },
  {
    "text": "next",
    "start": "2173839",
    "end": "2176160"
  },
  {
    "text": "so this is the summary of our entire chaos experiment what we just created",
    "start": "2180720",
    "end": "2186079"
  },
  {
    "text": "let us actually go ahead and create this chaos scenario",
    "start": "2186079",
    "end": "2192720"
  },
  {
    "text": "so our chaos scenario has been successfully created over here as you can see",
    "start": "2198960",
    "end": "2204000"
  },
  {
    "text": "it's running so let us actually wait for a while for the experiment to get initialized so",
    "start": "2204000",
    "end": "2211760"
  },
  {
    "text": "you can see right now that the kiosk experiment is getting installed the pod http latency experiment is getting",
    "start": "2211760",
    "end": "2217839"
  },
  {
    "text": "installed right now as part of this step",
    "start": "2217839",
    "end": "2221920"
  },
  {
    "text": "all right so with that our installation of the chaos experiment is over and now we can see that the pause",
    "start": "2225040",
    "end": "2231359"
  },
  {
    "text": "pod latency http latency experiment has in fact started so what we can do is that",
    "start": "2231359",
    "end": "2238480"
  },
  {
    "text": "we can verify whether this the effects of this experiment in real time using our",
    "start": "2238480",
    "end": "2244720"
  },
  {
    "text": "absurdity dashboard that is the grafana dashboard you can see that due to the chaos",
    "start": "2244720",
    "end": "2250720"
  },
  {
    "text": "annotation applied by the kiosk exporter we are able to see the impact of the chaos here in the dashboard",
    "start": "2250720",
    "end": "2259280"
  },
  {
    "text": "we can observe that due to the experiment running",
    "start": "2259440",
    "end": "2265839"
  },
  {
    "text": "the qps is going up right now and this is only explainable due to the",
    "start": "2265839",
    "end": "2273280"
  },
  {
    "text": "impact of the experiment what we are doing is we are essentially applying a very large latency on our uh on our cart",
    "start": "2273280",
    "end": "2280560"
  },
  {
    "text": "service application and therefore we can see that the axis duration or the latency is increasing exponentially",
    "start": "2280560",
    "end": "2288000"
  },
  {
    "text": "while the qps is also taking a hit you can see that the mean qps indicated",
    "start": "2288000",
    "end": "2295119"
  },
  {
    "text": "in yellow is going up while the uh while the 99 percent or the immediate",
    "start": "2295119",
    "end": "2301760"
  },
  {
    "text": "qps is in fact going down so this indicate that indeed our application is affected and",
    "start": "2301760",
    "end": "2307680"
  },
  {
    "text": "to confirm that if we refresh our cards you can see that we don't really get a",
    "start": "2307680",
    "end": "2314800"
  },
  {
    "text": "response from our application the response is still pending",
    "start": "2314800",
    "end": "2322320"
  },
  {
    "text": "and we can see that it says something has failed",
    "start": "2322320",
    "end": "2327359"
  },
  {
    "text": "and there are some logs and basically some information for debugging it sees 500",
    "start": "2327359",
    "end": "2333200"
  },
  {
    "text": "internal server error which makes sense because we have essentially added a very large latency and right now the",
    "start": "2333200",
    "end": "2340400"
  },
  {
    "text": "front end is not getting any information from the cart and hence we are observing this error",
    "start": "2340400",
    "end": "2347359"
  },
  {
    "text": "if we go back to our application dashboard right now we can see that the chaos duration has in fact passed",
    "start": "2347359",
    "end": "2355920"
  },
  {
    "text": "and uh at this stage we can see that the experiment is effectively getting over",
    "start": "2355920",
    "end": "2361599"
  },
  {
    "text": "we are right now in the post cure stage where viktor's effect has been reverted hopefully and",
    "start": "2361599",
    "end": "2368560"
  },
  {
    "text": "what we would like to right now understand is what this cost to our application what we saw in real time is",
    "start": "2368560",
    "end": "2374720"
  },
  {
    "text": "that well our application is unavailable but during the chaos it's very much important to validate what it's",
    "start": "2374720",
    "end": "2381200"
  },
  {
    "text": "happening in an automated fashion so for that let's first of all try to",
    "start": "2381200",
    "end": "2386640"
  },
  {
    "text": "see whether our application has ended or not okay it's still going on",
    "start": "2386640",
    "end": "2393040"
  },
  {
    "text": "let us first of all wait for the experiment to complete",
    "start": "2393040",
    "end": "2399760"
  },
  {
    "text": "as we wait for our experiment to conclude we can see that the service metrics are again regaining",
    "start": "2400880",
    "end": "2407520"
  },
  {
    "text": "a normal system behavior the access duration is going down",
    "start": "2407520",
    "end": "2413040"
  },
  {
    "text": "the card qps is returning to its normal state somewhat and",
    "start": "2413040",
    "end": "2418640"
  },
  {
    "text": "for for the black box exporter that is the probe success percentage that we have",
    "start": "2418640",
    "end": "2424880"
  },
  {
    "text": "it's also getting back to a normal 100 percent as part of our experiment run we can see",
    "start": "2424880",
    "end": "2431839"
  },
  {
    "text": "that it failed but before we analyze that why it failed and what does the log indicate let us try to actually refresh",
    "start": "2431839",
    "end": "2438880"
  },
  {
    "text": "this page yeah you can see that the chaos has been in fact reverted uh",
    "start": "2438880",
    "end": "2444560"
  },
  {
    "text": "we can see that there's no remnant of the 500 internal error that we were",
    "start": "2444560",
    "end": "2449920"
  },
  {
    "text": "getting since the uh the effects of the chaos have been removed for now",
    "start": "2449920",
    "end": "2455680"
  },
  {
    "text": "so if we go back to our chaos center let us try to analyze that what went wrong",
    "start": "2455680",
    "end": "2460800"
  },
  {
    "text": "in this experimentation and what does litmus has to say about it if we go inside the table view and try",
    "start": "2460800",
    "end": "2466720"
  },
  {
    "text": "to view the logs and results we can see that we have all the experiment logs over here",
    "start": "2466720",
    "end": "2473359"
  },
  {
    "text": "as part of our experiment logs of course we are first of all getting all the different",
    "start": "2473359",
    "end": "2479839"
  },
  {
    "text": "experiment metrics for example the running pod over here this is the name of the pod that we are targeting card",
    "start": "2479839",
    "end": "2485920"
  },
  {
    "text": "service then we are also seeing the run properties of the probe over here that",
    "start": "2485920",
    "end": "2491200"
  },
  {
    "text": "is the timeout the interval or the retries everything is",
    "start": "2491200",
    "end": "2497440"
  },
  {
    "text": "here after that we are in fact going for the actual experiment",
    "start": "2497440",
    "end": "2503040"
  },
  {
    "text": "so in the course of time you can see that initially we were getting an actual value of 200 when the probe was running",
    "start": "2503040",
    "end": "2509200"
  },
  {
    "text": "which makes sense before since before the chaos there was uh the service was working correctly and",
    "start": "2509200",
    "end": "2515839"
  },
  {
    "text": "henceforth we were getting a 200 response code as expected but during the chaos well we didn't quite got a 200",
    "start": "2515839",
    "end": "2524640"
  },
  {
    "text": "response code which can be seen over here in this log it says that",
    "start": "2524640",
    "end": "2530000"
  },
  {
    "text": "actual value is 500 which is not expected to the expected value of 200 and this is in sync with what we saw",
    "start": "2530000",
    "end": "2537040"
  },
  {
    "text": "earlier in our application uh in the browser as well basically we saw",
    "start": "2537040",
    "end": "2543359"
  },
  {
    "text": "that we are getting a 500 internal error and therefore this has been the cause of",
    "start": "2543359",
    "end": "2549520"
  },
  {
    "text": "the failure of this experiment as you can see the probe status has failed",
    "start": "2549520",
    "end": "2555599"
  },
  {
    "text": "and therefore the experiment has failed",
    "start": "2555599",
    "end": "2560640"
  },
  {
    "text": "so this shows that how litmus can be leveraged litmus probes can be leveraged",
    "start": "2560640",
    "end": "2566480"
  },
  {
    "text": "to automate the process of the hypothesis validation during the chaos",
    "start": "2566480",
    "end": "2572400"
  },
  {
    "text": "and how you can use the logs for verifying the perfect cause of your",
    "start": "2572400",
    "end": "2578640"
  },
  {
    "text": "failure of your experiment or passage of an experiment using litmus chaos we can",
    "start": "2578640",
    "end": "2584079"
  },
  {
    "text": "also get a quick summary of the entire experiment using the chaos result where",
    "start": "2584079",
    "end": "2589280"
  },
  {
    "text": "we can see that the experiment status is completed but the",
    "start": "2589280",
    "end": "2594800"
  },
  {
    "text": "verdict is failed and the probe success percentage is zero for the probe that we have defined that",
    "start": "2594800",
    "end": "2600960"
  },
  {
    "text": "is the card proof we can see that it says better next time for the continuous mode which means that well it has failed",
    "start": "2600960",
    "end": "2608720"
  },
  {
    "text": "so with that we saw that how we can validate the experiment how we can use atmospheres in",
    "start": "2608720",
    "end": "2615680"
  },
  {
    "text": "order to validate our chaos experiments resiliency so we got the information and the",
    "start": "2615680",
    "end": "2623680"
  },
  {
    "text": "validation that well something is not quite right our with our application and some component of it at least is weak",
    "start": "2623680",
    "end": "2631680"
  },
  {
    "text": "so how can we make it more resilient in this case so the most perfect or plausible",
    "start": "2631680",
    "end": "2639280"
  },
  {
    "text": "explanation could be we can just uh bump up the number of parts that we have as part of our",
    "start": "2639280",
    "end": "2645280"
  },
  {
    "text": "application deployment so let us actually try to do that we have one part right now let's",
    "start": "2645280",
    "end": "2651280"
  },
  {
    "text": "scale it up to maybe two parts and re-run this experiment and see how this experimentation goes then",
    "start": "2651280",
    "end": "2659359"
  },
  {
    "text": "i'll go back to my terminal and what i'll do is i'll try to",
    "start": "2659359",
    "end": "2666400"
  },
  {
    "text": "scale up the card service deployment which is the deployment enabling the",
    "start": "2666400",
    "end": "2671680"
  },
  {
    "text": "cart to two replicas",
    "start": "2671680",
    "end": "2677480"
  },
  {
    "text": "let us try to determine whether the scaling is done or not using this watch",
    "start": "2678240",
    "end": "2685599"
  },
  {
    "text": "command so as you can see right now the scaling is still going on the pod is",
    "start": "2685599",
    "end": "2691200"
  },
  {
    "text": "getting created let us wait for a while for the scaling to complete",
    "start": "2691200",
    "end": "2697400"
  },
  {
    "text": "all right with that we have now successfully scaled our card service deployment to",
    "start": "2704240",
    "end": "2709520"
  },
  {
    "text": "two ports so now the question remains that what would be the behavior of the experiment",
    "start": "2709520",
    "end": "2716079"
  },
  {
    "text": "in this case right now if we are targeting 50 of the pods that is only one out of the two parts",
    "start": "2716079",
    "end": "2722480"
  },
  {
    "text": "will our application be able to sustain the chaos let us try to find out",
    "start": "2722480",
    "end": "2727760"
  },
  {
    "text": "so for that what i'll do is i'll simply go to the chaos scenarios to the schedules",
    "start": "2727760",
    "end": "2735359"
  },
  {
    "text": "over here we have the card chaos scenario schedule that we had created just now which we run as part of the",
    "start": "2738079",
    "end": "2744240"
  },
  {
    "text": "earlier experimentation and i'll just simply read on the schedule",
    "start": "2744240",
    "end": "2750640"
  },
  {
    "text": "what this will in effect do is that it would read on the same workflow that we created last time and it would run the",
    "start": "2750640",
    "end": "2757520"
  },
  {
    "text": "same pod http chaos pod http latency chaos experiment",
    "start": "2757520",
    "end": "2763280"
  },
  {
    "text": "one once more this time around let us try to observe the effects of the chaos again",
    "start": "2763280",
    "end": "2770720"
  },
  {
    "text": "using the application dashboard but before that let us wait for a while for the experiment to start",
    "start": "2770720",
    "end": "2776450"
  },
  {
    "text": "[Music]",
    "start": "2776450",
    "end": "2781599"
  },
  {
    "text": "all right with that our pod http latency has actually started",
    "start": "2781599",
    "end": "2786640"
  },
  {
    "text": "so let us head back to our application dashboard the bootiecap dashboard",
    "start": "2786640",
    "end": "2791839"
  },
  {
    "text": "we can see that slowly our chaos experiment is taking place over",
    "start": "2791839",
    "end": "2798079"
  },
  {
    "text": "here the chaos annotation is quite uh prominent over here",
    "start": "2798079",
    "end": "2804560"
  },
  {
    "text": "but what we are observing here in this case is that so far our steady state seems to be maintain",
    "start": "2804560",
    "end": "2812079"
  },
  {
    "text": "the probe success percentage for the end point of the card service seems to be",
    "start": "2812079",
    "end": "2817359"
  },
  {
    "text": "stable there's no deviation in the proof success",
    "start": "2817359",
    "end": "2822960"
  },
  {
    "text": "percentage and for the cards as well we can see a slight",
    "start": "2822960",
    "end": "2829200"
  },
  {
    "text": "change in the qps that we have over here right now it's slightly varying in the range of",
    "start": "2829200",
    "end": "2836079"
  },
  {
    "text": "100 and our",
    "start": "2836079",
    "end": "2841680"
  },
  {
    "text": "access duration service is also spiking up a bit it's in vicinity of 2.5 minutes right now",
    "start": "2842480",
    "end": "2850240"
  },
  {
    "text": "which is not too bad so yeah it seems that the chaos is doing",
    "start": "2850240",
    "end": "2855599"
  },
  {
    "text": "something to our application the qps is steadily increasing and",
    "start": "2855599",
    "end": "2860880"
  },
  {
    "text": "the access duration the latency is kind of flattering out but yeah the most",
    "start": "2860880",
    "end": "2866640"
  },
  {
    "text": "important question remains is the application still available so for that i'll simply refresh",
    "start": "2866640",
    "end": "2872559"
  },
  {
    "text": "and as you can see this time around it's not going down we are not uh waiting for any response code or",
    "start": "2872559",
    "end": "2878559"
  },
  {
    "text": "anything as such it's still accessible no matter uh what the application",
    "start": "2878559",
    "end": "2883680"
  },
  {
    "text": "dashboard is showing to compare the result of the application dashboard i'll actually like to compare",
    "start": "2883680",
    "end": "2890160"
  },
  {
    "text": "them side by side maybe with 15 minutes yeah",
    "start": "2890160",
    "end": "2895680"
  },
  {
    "text": "so this time around you can see that although we observed a spike in the",
    "start": "2895680",
    "end": "2901520"
  },
  {
    "text": "access duration for the card service it's much less compared to",
    "start": "2901520",
    "end": "2909359"
  },
  {
    "text": "our earlier expectation it's almost half which makes sense because we have added one more probe and uh sorry we have",
    "start": "2909359",
    "end": "2916079"
  },
  {
    "text": "added one more part and that is mitigating the effects of the chaos in effect and therefore helping the",
    "start": "2916079",
    "end": "2922480"
  },
  {
    "text": "application to sustain the chaos this allows for a much scalable and much",
    "start": "2922480",
    "end": "2929119"
  },
  {
    "text": "more reliable solution around our chaos scenarios where even if one pot goes",
    "start": "2929119",
    "end": "2935760"
  },
  {
    "text": "down there will be another part which can sustain the chaos running at the same time so with that we",
    "start": "2935760",
    "end": "2943760"
  },
  {
    "text": "we can see that our chaos duration has essentially passed we can go back to our application",
    "start": "2943760",
    "end": "2950559"
  },
  {
    "text": "right now and we can see that well even after removal of the chaos everything is fine",
    "start": "2950559",
    "end": "2956319"
  },
  {
    "text": "everything is working in order and we can wait for our chaos experiment to complete to observe its effect and as",
    "start": "2956319",
    "end": "2963599"
  },
  {
    "text": "you can see the chaos experiment is this time around it's completed over here so let us try to observe the locks this",
    "start": "2963599",
    "end": "2969680"
  },
  {
    "text": "time although we can already see that it has passed but let us try to still validate using the logs in the kiosk",
    "start": "2969680",
    "end": "2974960"
  },
  {
    "text": "result if we take a look at the logs this time around we can see that of course before",
    "start": "2974960",
    "end": "2980480"
  },
  {
    "text": "the experiment as well we were getting an expected value of 200 as well as actual value of 200 that is the response",
    "start": "2980480",
    "end": "2987359"
  },
  {
    "text": "code which makes sense and this time around every time we are performing this",
    "start": "2987359",
    "end": "2992800"
  },
  {
    "text": "check we are always getting a 200 response code and there is no response",
    "start": "2992800",
    "end": "2997920"
  },
  {
    "text": "time out this time that is we are right on track with what we observed within the",
    "start": "2997920",
    "end": "3004720"
  },
  {
    "text": "uh browser as well for the application when we were refreshing the website was available throughout the experiment",
    "start": "3004720",
    "end": "3012079"
  },
  {
    "text": "duration and as a result of this our probe has in fact passed as you can see the card",
    "start": "3012079",
    "end": "3017839"
  },
  {
    "text": "proof has passed and this in turn made uh ensure that our application our",
    "start": "3017839",
    "end": "3025359"
  },
  {
    "text": "experiment is passing we can observe the same from our chaos results as you can see over here",
    "start": "3025359",
    "end": "3032240"
  },
  {
    "text": "the experiment status is completed while the vertex is passed with the probe",
    "start": "3032240",
    "end": "3037520"
  },
  {
    "text": "success percentage of 100 since we had only one probe and it passed therefore the probe success percentage is 100 and",
    "start": "3037520",
    "end": "3044480"
  },
  {
    "text": "the continuous probe that we had defined by the name of card probe it has passed",
    "start": "3044480",
    "end": "3050720"
  },
  {
    "text": "so yeah with that we conclude the demonstration of litmus chaos we saw that how we can use the http chaos",
    "start": "3050720",
    "end": "3057680"
  },
  {
    "text": "latency to validate the behavior of a kubernetes application",
    "start": "3057680",
    "end": "3063200"
  },
  {
    "text": "when we are applying a latency of of a value to our kubernetes microservice and we also saw that how",
    "start": "3063200",
    "end": "3070880"
  },
  {
    "text": "you can define litmus probes within the litmus kiosk experiments in order to",
    "start": "3070880",
    "end": "3076079"
  },
  {
    "text": "automate the process of hypothesis validation during the chaos with that i'd like to wrap up this demo",
    "start": "3076079",
    "end": "3082079"
  },
  {
    "text": "thank you so much",
    "start": "3082079",
    "end": "3085280"
  }
]