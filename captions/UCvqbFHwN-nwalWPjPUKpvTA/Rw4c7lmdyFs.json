[
  {
    "text": "hello everyone um welcome everyone to our talk let's start it's really amazing to see",
    "start": "560",
    "end": "6960"
  },
  {
    "text": "so many people coming to our talk today uh looks like this topic of renaming metrics is really uh you know important",
    "start": "6960",
    "end": "14880"
  },
  {
    "text": "um so it's very relevant and hopefully that's why you are here um so yeah we have really exciting content for you so",
    "start": "14880",
    "end": "21840"
  },
  {
    "text": "let's let's go let's not waste our time so why we are here today uh imagine the following scenario you have a counter",
    "start": "21840",
    "end": "28640"
  },
  {
    "text": "metric that is exposed and scraped you know from some example application exporter or production application it's",
    "start": "28640",
    "end": "35520"
  },
  {
    "text": "very important right this metric is very important you use it in on important alert dashboard maybe it's using you",
    "start": "35520",
    "end": "41760"
  },
  {
    "text": "know are you are using it for autoscaling and you know and SLO tools and so on and if this query stops",
    "start": "41760",
    "end": "47760"
  },
  {
    "text": "working you have essentially a production incident uh for example if you use it in autoscaling if this query",
    "start": "47760",
    "end": "54000"
  },
  {
    "text": "is you know broken then you cannot scale your workloads for customers you cannot start things so it's super serious thing",
    "start": "54000",
    "end": "60160"
  },
  {
    "text": "imagine that and it happens right suddenly after the underlying you know server application that was giving us",
    "start": "60160",
    "end": "66880"
  },
  {
    "text": "those metrics um this application restarts and suddenly after that we don't have the query working again so",
    "start": "66880",
    "end": "73600"
  },
  {
    "text": "what happened after some stressful debugging you kind of like take a look and you realize that the application",
    "start": "73600",
    "end": "79439"
  },
  {
    "text": "with this key metric was upgraded to a new version and this new version actually renamed a metric and made a",
    "start": "79439",
    "end": "85920"
  },
  {
    "text": "small you know naming changes to the metric um so what's worse is not only a metric name but actually a couple of",
    "start": "85920",
    "end": "92640"
  },
  {
    "text": "labels right so it change you know integer to my number and um category to",
    "start": "92640",
    "end": "97680"
  },
  {
    "text": "class and then label value change through you know to get uppercase just because maybe you know it was clearer",
    "start": "97680",
    "end": "103280"
  },
  {
    "text": "and and easier to read um in our experience it's actually a very very",
    "start": "103280",
    "end": "108880"
  },
  {
    "text": "common scenario um and it it causes a lot of friction for both consumers of",
    "start": "108880",
    "end": "114000"
  },
  {
    "text": "course users who have their queries broken suddenly out of nowhere but also for producers for maintainers like us",
    "start": "114000",
    "end": "120320"
  },
  {
    "text": "who are afraid to rename metrics literally because it can cause possibly those issues right and the honest truth",
    "start": "120320",
    "end": "126399"
  },
  {
    "text": "about this talk is that when we proposed it in October um we maybe had a small vision how to fix it how to improve it",
    "start": "126399",
    "end": "133520"
  },
  {
    "text": "um but we also knew that the current solutions to solve this are kind of weak or not existing so We were kind of like",
    "start": "133520",
    "end": "140480"
  },
  {
    "text": "okay this talk will be a little bit of moaning and sadness but actually it surprised even us that in the CNCF CNCF",
    "start": "140480",
    "end": "148239"
  },
  {
    "text": "ecosystem both open telemetry and Prometheus communities worked on a already there are existing core",
    "start": "148239",
    "end": "154879"
  },
  {
    "text": "fundamental pieces that combine together allows something truly truly magical",
    "start": "154879",
    "end": "160239"
  },
  {
    "text": "right so imagine there is a way to pin your quer metrics to a certain version",
    "start": "160239",
    "end": "166720"
  },
  {
    "text": "like you do with your code dependencies right like you do with your G branch like you do with your HTTP requests so",
    "start": "166720",
    "end": "174000"
  },
  {
    "text": "today talk is exactly about that we want to show you a prototype of of a solution to this problem in Prometheio ecosystem",
    "start": "174000",
    "end": "181599"
  },
  {
    "text": "um using several pieces uh from open telemetry project as well and and give you a chance to give us a feedback as a",
    "start": "181599",
    "end": "188239"
  },
  {
    "text": "Prometheus maintainers developers uh if this is something you would like to see in a next version if it's something",
    "start": "188239",
    "end": "194080"
  },
  {
    "text": "you'd like to do with your metrics so um this is the plan for the next uh you know 20 minutes and we do this in a",
    "start": "194080",
    "end": "200959"
  },
  {
    "text": "three sections first we'll talk about why renames even are you know problematic why we have to do them uh",
    "start": "200959",
    "end": "207280"
  },
  {
    "text": "how to handle um you know the renames in the current state of the things and what could be possible future uh short-term",
    "start": "207280",
    "end": "213920"
  },
  {
    "text": "short-term future actually in Prometheus uh but before that a short introduction I'm here with Ariana hello everybody my",
    "start": "213920",
    "end": "221519"
  },
  {
    "text": "name is Ariana and uh I am a Prometheus maintainer i'm a software engineer at SA",
    "start": "221519",
    "end": "227120"
  },
  {
    "text": "streaming well starting Monday wish me luck and uh um yeah uh I have a",
    "start": "227120",
    "end": "232159"
  },
  {
    "text": "background in the music business yeah so my hobbies well not hobbies like real passions are uh",
    "start": "232159",
    "end": "238560"
  },
  {
    "text": "synthesizers and history of art apart from coding of course what about you BK",
    "start": "238560",
    "end": "243599"
  },
  {
    "text": "sure my name is Bwami Podka but you can call me Bartekch um I'm I work at Google i'm a tech lead for a Google managed",
    "start": "243599",
    "end": "249760"
  },
  {
    "text": "Prometheio service i maintain Prometheio's project and several you know ecosystem project like client",
    "start": "249760",
    "end": "254959"
  },
  {
    "text": "Golang for example um I love generally go and and you know I have maintain other projects I co-author Tanos project",
    "start": "254959",
    "end": "262000"
  },
  {
    "text": "as well I'm active in the CNCF and uh I also wrote a book called efficient go",
    "start": "262000",
    "end": "267360"
  },
  {
    "text": "and um I I just love solutions that are you know efficient and and pragmatic and recently I also start",
    "start": "267360",
    "end": "274320"
  },
  {
    "text": "motorcycleycling so some kind of adventures uh I really recommend those okay so let's",
    "start": "274320",
    "end": "280759"
  },
  {
    "text": "Absolutely so let's start by addressing our first question which is why it is",
    "start": "280759",
    "end": "286000"
  },
  {
    "text": "hard to rename matrix but if you think of it it's not like renaming matrix per se that it's hard right it's like",
    "start": "286000",
    "end": "291440"
  },
  {
    "text": "avoiding the bad consequences of the renaming um so but before we delve further into the matter let's establish",
    "start": "291440",
    "end": "298320"
  },
  {
    "text": "what we mean by renaming matrix what what does mean so changing a metric name",
    "start": "298320",
    "end": "304240"
  },
  {
    "text": "quite obviously falls into this category well but also changing the label names or label values with some semantic",
    "start": "304240",
    "end": "311520"
  },
  {
    "text": "equivalent of course is also part of a metric renaming but then there's also the particular case where you might want",
    "start": "311520",
    "end": "318479"
  },
  {
    "text": "to change the the unit in the metric name and then you would have to change of course also the label value which is",
    "start": "318479",
    "end": "323680"
  },
  {
    "text": "even more difficult because then you also have to change the sample uh value because the unit has changed so now that",
    "start": "323680",
    "end": "329840"
  },
  {
    "text": "we know what what we mean by by metric renames uh let's see why this is not",
    "start": "329840",
    "end": "335120"
  },
  {
    "text": "trivial so when you rename a metric uh this breaks everything relying on that",
    "start": "335120",
    "end": "340479"
  },
  {
    "text": "on that original metric like user queries like dashboards like automation",
    "start": "340479",
    "end": "345520"
  },
  {
    "text": "like alerts recordings you know etc lot lots of things so rem renaming metrics",
    "start": "345520",
    "end": "351440"
  },
  {
    "text": "also not trivial because whenever you have like a matrix overall it's difficult to communicate this to the end",
    "start": "351440",
    "end": "357280"
  },
  {
    "text": "user in a in an effective and timely manner and no matter like how long the grace period you give your end users no",
    "start": "357280",
    "end": "363600"
  },
  {
    "text": "matter how big that is how long that is then in any case some is going to be taken by surprise and you don't know how",
    "start": "363600",
    "end": "370319"
  },
  {
    "text": "um you know the consequences are going to be and the extent of those consequences um that's unpredictable",
    "start": "370319",
    "end": "376639"
  },
  {
    "text": "very often and things are even more difficult when your end users have distributed systems because then you",
    "start": "376639",
    "end": "382400"
  },
  {
    "text": "have to sync many components like for example the client part the collection",
    "start": "382400",
    "end": "387440"
  },
  {
    "text": "storage part the consumptions part like the dashboards and everything and thus needs fixing in multiple places you know",
    "start": "387440",
    "end": "393759"
  },
  {
    "text": "in a way that everything is uh harmonious and synchronized and that's not trivial at all so after having told",
    "start": "393759",
    "end": "400960"
  },
  {
    "text": "you about all of these problems you might wonder but we really have to do this like really really",
    "start": "400960",
    "end": "407360"
  },
  {
    "text": "uh often yes you really have because uh sometimes it's really more than sometimes it's really inevitable like",
    "start": "407360",
    "end": "413919"
  },
  {
    "text": "for example when you have to uh apply new recommendations um and adapting new you know adapting to",
    "start": "413919",
    "end": "420479"
  },
  {
    "text": "naming conventions like base units and suffixes you see we have a lot nice cornucopia format uh on or when you have",
    "start": "420479",
    "end": "427919"
  },
  {
    "text": "to uh switch from uh you know different different kind of of metric metric",
    "start": "427919",
    "end": "434080"
  },
  {
    "text": "ecosystems like from Prometheus to open telemetry or the other way around and you see that the syntax of the naming of",
    "start": "434080",
    "end": "439759"
  },
  {
    "text": "the metric is incompatible i mean you have to deal with those dots somehow and uh sometimes you might you might you",
    "start": "439759",
    "end": "446560"
  },
  {
    "text": "know happen to name your metric in a way that you think it makes sense but then maybe you use like in this example a",
    "start": "446560",
    "end": "452960"
  },
  {
    "text": "prefix uh sorry a suffix that is actually like kind of reserved like in open matrix uh uh let let's let's",
    "start": "452960",
    "end": "458479"
  },
  {
    "text": "pretend well not pretend this is actually a Java uh uh a Java um",
    "start": "458479",
    "end": "463520"
  },
  {
    "text": "application mean and uh if this is instrumented with Prometheus client Java for example and you have like uh this",
    "start": "463520",
    "end": "470160"
  },
  {
    "text": "metric ending with underscore created client Java is going to trim that and if you have another metric that was called",
    "start": "470160",
    "end": "475520"
  },
  {
    "text": "exactly the same but without that suffix of course there is a collision so you have to find some sort of a schamotage",
    "start": "475520",
    "end": "480560"
  },
  {
    "text": "in this case it's like adding another underscore at the end of the underscore created Um in any case you have to do",
    "start": "480560",
    "end": "487680"
  },
  {
    "text": "that and uh then sometimes I mean you respect all the conventions all the all",
    "start": "487680",
    "end": "492800"
  },
  {
    "text": "the the formal things uh all the suffix and all the rules and etc but then you",
    "start": "492800",
    "end": "497840"
  },
  {
    "text": "really you really realize I should have named this metric better this does not convey the meaning that it has I mean",
    "start": "497840",
    "end": "503520"
  },
  {
    "text": "this is right like no but but then you know uh this is something that we",
    "start": "503520",
    "end": "508879"
  },
  {
    "text": "experienced like last year when we were doing some housekeeping and client golan permits client golan we were like doing",
    "start": "508879",
    "end": "514479"
  },
  {
    "text": "some housekeeping um in the uh go runtime metrics that the client supports and we realized that there were really",
    "start": "514479",
    "end": "521360"
  },
  {
    "text": "metrics that you know this name doesn't really make exactly sense it could be named really better like this one you",
    "start": "521360",
    "end": "527600"
  },
  {
    "text": "read go GC duration seconds GC stands for garbage collection and you think what does this measure the cycle the",
    "start": "527600",
    "end": "534080"
  },
  {
    "text": "duration of the garbage collection cycle right no it does not do that it's actually the duration of the stop the",
    "start": "534080",
    "end": "540160"
  },
  {
    "text": "word phase of the garbage collection cycle but that's misleading right so we really really really wanted to change",
    "start": "540160",
    "end": "545519"
  },
  {
    "text": "that but we got scared we got scared because we realized like the the magnitude of the repercussions uh",
    "start": "545519",
    "end": "551920"
  },
  {
    "text": "because of all the users that client Golang has and since it was like okay it's compliant for all the rest of no",
    "start": "551920",
    "end": "557600"
  },
  {
    "text": "let's not do that but this gives me gives me the access to lead you into uh straight into the next",
    "start": "557600",
    "end": "563640"
  },
  {
    "text": "section which is uh what strategies can we use uh this day right now to mitigate",
    "start": "563640",
    "end": "570160"
  },
  {
    "text": "the unwanted effects uh of rename so migration strategies basically so we",
    "start": "570160",
    "end": "576000"
  },
  {
    "text": "came up with uh five categories um under which the the main um um the main",
    "start": "576000",
    "end": "582080"
  },
  {
    "text": "currently available implementation strategies fall into conceptually so this is not like an official taxonomy by",
    "start": "582080",
    "end": "587760"
  },
  {
    "text": "all means just something that we came up with and made sense like a way of grouping uh these different strategies",
    "start": "587760",
    "end": "593760"
  },
  {
    "text": "so let's go through them uh and their pros and cons as anticipated the first is the no change",
    "start": "593760",
    "end": "600959"
  },
  {
    "text": "strategy so when you have like a stable project that is really popular like client Golang uh you might not want to",
    "start": "600959",
    "end": "609519"
  },
  {
    "text": "to to change the matrix because changing would be way worse than actually not changing uh we for example in client",
    "start": "609519",
    "end": "617040"
  },
  {
    "text": "Golan have uh like on top of dynamic go runtime metrics which are which can change every time there is a new go",
    "start": "617040",
    "end": "622959"
  },
  {
    "text": "version we have like a sort of protection layer so that with stability test so that the changes that every time",
    "start": "622959",
    "end": "629360"
  },
  {
    "text": "can can be uh made to the go runtime matrix uh on the go team side do not pro",
    "start": "629360",
    "end": "635519"
  },
  {
    "text": "propagate automatically into our client uh also um like open telemetry uh has uh",
    "start": "635519",
    "end": "643079"
  },
  {
    "text": "um you know the same thing happening with semantic convention they have uh stability uh tests and frameworks to",
    "start": "643079",
    "end": "650079"
  },
  {
    "text": "make sure that you deprecate um an old mink instead of renaming it um and also",
    "start": "650079",
    "end": "655519"
  },
  {
    "text": "uh Kubernetes the Kubernetes framework uh for SIG instrumentation also has uh um this kind of",
    "start": "655519",
    "end": "662600"
  },
  {
    "text": "tests but if when you do decide to go for a change what are the choices available well the first one is you know",
    "start": "662600",
    "end": "670320"
  },
  {
    "text": "the most intuitive probably documented change so one notable example again is the Kubernetes uh SIG instrumentation",
    "start": "670320",
    "end": "676800"
  },
  {
    "text": "framework that generates uh documents related to uh metric changes and their stability automatically uh open",
    "start": "676800",
    "end": "684320"
  },
  {
    "text": "telemetry semantic convention same like an analogous thing um they also you also",
    "start": "684320",
    "end": "689839"
  },
  {
    "text": "can generate documentation from definition and their stability and uh deprecation level so what is the pro",
    "start": "689839",
    "end": "696079"
  },
  {
    "text": "here of course it's like a centralized source of truth and it's also at the same time a way to communicate to your",
    "start": "696079",
    "end": "702399"
  },
  {
    "text": "users like you know uh at the same time but doesn't that doesn't do the",
    "start": "702399",
    "end": "707600"
  },
  {
    "text": "practical work i mean you have that but then your metrics still stay unchanged",
    "start": "707600",
    "end": "712880"
  },
  {
    "text": "so you have to do the work yourself somehow so what do you have if you can",
    "start": "712880",
    "end": "718000"
  },
  {
    "text": "if you don't want to choose that then maybe you could rely on translating uh all the versions of the same matrix uh",
    "start": "718000",
    "end": "723920"
  },
  {
    "text": "of the same matrix to a certain known version like you would do for example in Prometheus um you know with reabeling",
    "start": "723920",
    "end": "731279"
  },
  {
    "text": "via this uh um parameter uh called metric re label config and uh I think",
    "start": "731279",
    "end": "736399"
  },
  {
    "text": "those data dog does something uh similar with vector but in any case um the the",
    "start": "736399",
    "end": "741920"
  },
  {
    "text": "advantage here is that you have the same version in storage so that's good but then what what are drawbacks that this",
    "start": "741920",
    "end": "748240"
  },
  {
    "text": "is like a kind of a let's say superficial kind of thing because okay it uh it it is like affecting the labels",
    "start": "748240",
    "end": "756639"
  },
  {
    "text": "and the metadata uh but it does not touch the samples and also like if you",
    "start": "756639",
    "end": "762880"
  },
  {
    "text": "were to switch to uh query time versus uh write time that would not be easy at",
    "start": "762880",
    "end": "769160"
  },
  {
    "text": "all so what's next you could also go for uh writing all known versions of the",
    "start": "769160",
    "end": "775120"
  },
  {
    "text": "same matrix an example of which in Prometheus is uh uh doing this with record new rule um the pro is that okay",
    "start": "775120",
    "end": "783200"
  },
  {
    "text": "you can still use the old and the new names um and this allows you to um you",
    "start": "783200",
    "end": "788800"
  },
  {
    "text": "know for a for kind of a gradual transition between the two but the problem is that during this migration",
    "start": "788800",
    "end": "795920"
  },
  {
    "text": "that by the way you don't really know like how long it's going to last uh you have to account for double the storage",
    "start": "795920",
    "end": "802880"
  },
  {
    "text": "because you will have to to to make space for both things at the same time for for as long as the migration lasts",
    "start": "802880",
    "end": "809920"
  },
  {
    "text": "and of course uh that gets even worse when uh there is more than one update for a single metric and this is really",
    "start": "809920",
    "end": "816399"
  },
  {
    "text": "ma really super manual as a burden and it's not trick it's very tricky in",
    "start": "816399",
    "end": "821560"
  },
  {
    "text": "practice so the last current strategy that we identified uh and we called like",
    "start": "821560",
    "end": "828480"
  },
  {
    "text": "we called it like version read basically or we categorize it under version read is uh um the practice for which you pin",
    "start": "828480",
    "end": "835839"
  },
  {
    "text": "a metric to a certain version when you query it so in Prometheus it would correspond for example to making queries",
    "start": "835839",
    "end": "842800"
  },
  {
    "text": "using the or operator um as illustrated this is not super recommended of course or you could even",
    "start": "842800",
    "end": "850079"
  },
  {
    "text": "um like in a very naive way like using uh you could also use um um label",
    "start": "850079",
    "end": "855760"
  },
  {
    "text": "replace uh on the name lab on the on the name because name under the hood is a",
    "start": "855760",
    "end": "861279"
  },
  {
    "text": "label itself a special label but still a label and doing something like a bit yeah very unorthodox probably like I",
    "start": "861279",
    "end": "867839"
  },
  {
    "text": "don't know label replace old metric name new metric name old metric something like that and this probably like really",
    "start": "867839",
    "end": "874079"
  },
  {
    "text": "sounds farfetched but in any case at least Theoretically the pros would be no need for right time changes um client",
    "start": "874079",
    "end": "881440"
  },
  {
    "text": "storage can ingest whatever no need for double right cost but of course as already hinted at the cons like for uh",
    "start": "881440",
    "end": "890720"
  },
  {
    "text": "version version done this way as things stand now",
    "start": "890720",
    "end": "896160"
  },
  {
    "text": "um as far as this or solution or label replace solution is that the burden the",
    "start": "896160",
    "end": "901360"
  },
  {
    "text": "manual burden is high it's impossible to assert for all co for all consumers and of course it's can be very inaccurate in",
    "start": "901360",
    "end": "908800"
  },
  {
    "text": "some cases when there are trans transitions when the two things are overlapping so to recap as you can see",
    "start": "908800",
    "end": "916959"
  },
  {
    "text": "no strategy um nowadays at the current state is without significant drawbacks",
    "start": "916959",
    "end": "924839"
  },
  {
    "text": "however the version read has enormous potential we found out but we need to",
    "start": "924839",
    "end": "930240"
  },
  {
    "text": "make it automatic so is there a way to avoid those promql complexities and",
    "start": "930240",
    "end": "936000"
  },
  {
    "text": "manual operations in other words can we do better can we devise a way to make",
    "start": "936000",
    "end": "941040"
  },
  {
    "text": "rename seamless in Prometheus what do you think B good question Ariana so I we feel there is there is and it's actually",
    "start": "941040",
    "end": "947680"
  },
  {
    "text": "pretty uh pretty accessible so let's recap you know um how to implement a",
    "start": "947680",
    "end": "953839"
  },
  {
    "text": "version read in Prometheus as it sends in automatic way so what we learned so far right when the metric is renamed in",
    "start": "953839",
    "end": "960240"
  },
  {
    "text": "prime use well the moment the changes are deployed your queries suddenly just",
    "start": "960240",
    "end": "965440"
  },
  {
    "text": "stop working hiddenly as well so it's not only crashing they're not crashing there it's actually the results are not",
    "start": "965440",
    "end": "971519"
  },
  {
    "text": "true anymore so it's actually much worse scenario to be in so how we solve this we first well have to establish some",
    "start": "971519",
    "end": "978639"
  },
  {
    "text": "kind of schema some kind of definition something that captures the things that can change right like metric name like",
    "start": "978639",
    "end": "985600"
  },
  {
    "text": "unit label name label values uh if you have like maybe a set of known values",
    "start": "985600",
    "end": "991040"
  },
  {
    "text": "and even a type right and it could be as easy as a YAML file something that can be clearly versioned and referenced um",
    "start": "991040",
    "end": "998800"
  },
  {
    "text": "from for all of those different components and this alone is extremely extremely valuable for various things",
    "start": "998800",
    "end": "1005040"
  },
  {
    "text": "you can generate documentation out of it you know what what metrics your organization or application has you can",
    "start": "1005040",
    "end": "1012079"
  },
  {
    "text": "validate schemas you can you know um and you know validate them test them to see",
    "start": "1012079",
    "end": "1018000"
  },
  {
    "text": "what is the impact of certain changes but moreover you can easily generate SDK",
    "start": "1018000",
    "end": "1023519"
  },
  {
    "text": "code from the schema to a different languages right so for example here we generated this schema into go uh you",
    "start": "1023519",
    "end": "1031280"
  },
  {
    "text": "know go code with promeuse client Golang uh which we maintain with Ariana and",
    "start": "1031280",
    "end": "1036480"
  },
  {
    "text": "this code is not only not not only like automatically done for us but it's more type- safe you can notice that labels",
    "start": "1036480",
    "end": "1043360"
  },
  {
    "text": "are not strings anymore you can kind of have a type of it um it's actually faster there's potential to to have it",
    "start": "1043360",
    "end": "1049280"
  },
  {
    "text": "faster and uh have faster implementation of the instrumentation itself and it's like just less um less room for mistakes",
    "start": "1049280",
    "end": "1056640"
  },
  {
    "text": "but for our naming problem there is even bigger benefit the moment let's say name changes we can kind of capture that as",
    "start": "1056640",
    "end": "1063280"
  },
  {
    "text": "another version let's say 1.1 from this we can really trivally generate a",
    "start": "1063280",
    "end": "1068559"
  },
  {
    "text": "transformation or change lock file that tells consumer consumers how to upgrade",
    "start": "1068559",
    "end": "1073840"
  },
  {
    "text": "and downgrade this metric the uh downgrade the shape of this metric right for the same semantic ID let's say um",
    "start": "1073840",
    "end": "1081520"
  },
  {
    "text": "similar to any kind of schema migration you would see in a posgress or any other relational database this transformation",
    "start": "1081520",
    "end": "1088320"
  },
  {
    "text": "logic actually works pretty well for more complex transformations as well so we can capture upgrade and downgrade uh",
    "start": "1088320",
    "end": "1094640"
  },
  {
    "text": "for metric names units actually if we have a value transformation because the the moment unit changes you have to",
    "start": "1094640",
    "end": "1101200"
  },
  {
    "text": "really map uh your samples to a different unit as well um label name changes label value changes in future we",
    "start": "1101200",
    "end": "1108400"
  },
  {
    "text": "can potentially explore even you know changes like label splits and label merges and this works for multiple",
    "start": "1108400",
    "end": "1114480"
  },
  {
    "text": "changes layers on top of it very easily as well so let's see how schema helps for our renaming scenario right um when",
    "start": "1114480",
    "end": "1121600"
  },
  {
    "text": "your metric will be schematized and as you know promeius generally were schemaless now you can have some of your",
    "start": "1121600",
    "end": "1127919"
  },
  {
    "text": "metrics important metrics pointing to certain schema you'll be able to import autogenerated code for this metric in",
    "start": "1127919",
    "end": "1134960"
  },
  {
    "text": "your go in your code which will assure the correct schema and also assure the correct reference to the schema then",
    "start": "1134960",
    "end": "1141600"
  },
  {
    "text": "every series in every stage of the uh of generation collection storage um and",
    "start": "1141600",
    "end": "1147280"
  },
  {
    "text": "consumption follows the schema and have its version reference for example as a promuse label now with the schema",
    "start": "1147280",
    "end": "1154880"
  },
  {
    "text": "information available for consumers users could be able to maybe uh when",
    "start": "1154880",
    "end": "1160240"
  },
  {
    "text": "they are making queries for important dashboards and alerts and tools can pin a metric used in this queries to a",
    "start": "1160240",
    "end": "1167200"
  },
  {
    "text": "certain schema and a version and this way the moment a new definition comes in",
    "start": "1167200",
    "end": "1174080"
  },
  {
    "text": "uh just on the on the on the YAML file and imagine that nothing is and and it",
    "start": "1174080",
    "end": "1179120"
  },
  {
    "text": "renamed let's say a metric even if there is literally no deployment change no",
    "start": "1179120",
    "end": "1184480"
  },
  {
    "text": "code change it just kind of like the definition just upgraded you will be able to kind of reference a new name uh",
    "start": "1184480",
    "end": "1191120"
  },
  {
    "text": "a new version of and use new name of this metric immediately in your consum consumption for example in your",
    "start": "1191120",
    "end": "1196880"
  },
  {
    "text": "dashboard and it will work because Prometer or any other back end will be able to fetch change log transformation",
    "start": "1196880",
    "end": "1203679"
  },
  {
    "text": "and do the conversion on the fly and then when application starts to adopt this version slowly uh it doesn't",
    "start": "1203679",
    "end": "1210960"
  },
  {
    "text": "matter from the consumption side this will still work as it as it is and then even when a new version that never seen",
    "start": "1210960",
    "end": "1217520"
  },
  {
    "text": "before and never consumption never even captured ex you know will be will be there you know things will still work so",
    "start": "1217520",
    "end": "1224320"
  },
  {
    "text": "it allows essentially a huge flexibility on on on both producer and consumer Right um and you know allows multiple",
    "start": "1224320",
    "end": "1231840"
  },
  {
    "text": "cases okay so how to do it in practice uh how to have it in the next Promeaterius release if you really want",
    "start": "1231840",
    "end": "1238000"
  },
  {
    "text": "to so we think there is practical answer and and we have to combine a following",
    "start": "1238000",
    "end": "1243200"
  },
  {
    "text": "elements uh to implement this so we need a schema definition transformation we need reference syntax and schema engine",
    "start": "1243200",
    "end": "1250280"
  },
  {
    "text": "implementation lots of work yeah but turns out we have actually many of those",
    "start": "1250280",
    "end": "1255840"
  },
  {
    "text": "things fundamental things already in existing CNCF ecosystem so we need schema right but we don't need to",
    "start": "1255840",
    "end": "1262320"
  },
  {
    "text": "actually redesign the schema yaml spec and and and have the whole ecosystem for that because open telemetry exists right",
    "start": "1262320",
    "end": "1268799"
  },
  {
    "text": "of course and we have a standardized schema spec uh for all the telemetry pieces not only metric actually on top",
    "start": "1268799",
    "end": "1275039"
  },
  {
    "text": "of schema itself open telemetry already defines uh hundreds of metrics that anybody can reuse so the schema is",
    "start": "1275039",
    "end": "1281679"
  },
  {
    "text": "already used um and they could be used in primitus ecosystem um in fact open",
    "start": "1281679",
    "end": "1287360"
  },
  {
    "text": "telemetry has a rich tool set to perform operations on top of the schema um so",
    "start": "1287360",
    "end": "1292640"
  },
  {
    "text": "the main tool is called weaver it's actually called written in rust but it's very flexible and it's already able to",
    "start": "1292640",
    "end": "1298880"
  },
  {
    "text": "validate schemas generate documentation code transformations and so on and you know two maintainers Lauren and Josh",
    "start": "1298880",
    "end": "1305440"
  },
  {
    "text": "have had an amazing talk two days ago so once it is on uh on YouTube please check it out the tool is amazing and we are",
    "start": "1305440",
    "end": "1311840"
  },
  {
    "text": "using it in our prototype so yes you totally can define Prometheus metrics using Prometheus",
    "start": "1311840",
    "end": "1319039"
  },
  {
    "text": "naming convention in open telemetry schema so of course it's a little bit maybe um sometimes awkward because you",
    "start": "1319039",
    "end": "1325840"
  },
  {
    "text": "know in Prometheus we have labels not attributes and so on we have uh metric types not instrument but you know there",
    "start": "1325840",
    "end": "1332640"
  },
  {
    "text": "could be some um overlay with more kind of like promeuse friendly names but you could use to it and actually um it's",
    "start": "1332640",
    "end": "1339440"
  },
  {
    "text": "pretty pragmatic one note is that I kind of tried to make it uh more pragmatic so this this yaml is kind of simplified",
    "start": "1339440",
    "end": "1346159"
  },
  {
    "text": "version of open telemetry schema and we propose to add a special flag in ras sorry in weaver uh do you know simple so",
    "start": "1346159",
    "end": "1354080"
  },
  {
    "text": "to make it kind of pragmatic for promuse users who knows maybe they will accept that um but I think there is it is not",
    "start": "1354080",
    "end": "1360320"
  },
  {
    "text": "not super difficult to do that as a Prometheus user who may be used to um defining metric in the hard-coded code",
    "start": "1360320",
    "end": "1366880"
  },
  {
    "text": "right so it's not too bad um thanks of that well we need to have transformations so I was showing you a a",
    "start": "1366880",
    "end": "1373679"
  },
  {
    "text": "certain YAML format but of course open telemetry already thought about this and there is a transformation format",
    "start": "1373679",
    "end": "1379760"
  },
  {
    "text": "unfortunately is limited there are no limitations to this format it was just not designed it was designed for a first",
    "start": "1379760",
    "end": "1385360"
  },
  {
    "text": "iteration and you know open telemetry knows about this and there are different proposals to improve it um and I just we",
    "start": "1385360",
    "end": "1392000"
  },
  {
    "text": "just came up with some new format that could be a new version new format for open telemetry it could be something",
    "start": "1392000",
    "end": "1397120"
  },
  {
    "text": "only for prime use what I really tried to what we really tried to do with this format particularly is to have it",
    "start": "1397120",
    "end": "1403039"
  },
  {
    "text": "efficient for consumer use so we we made it spec specifically useful for uh",
    "start": "1403039",
    "end": "1408080"
  },
  {
    "text": "backends to quickly look it up on the fly so we really we really wanted to make it very efficient and pragmatic um",
    "start": "1408080",
    "end": "1415200"
  },
  {
    "text": "so anyway we come with this i think it's pretty useful um we'll be discussing with open telemetry community what could",
    "start": "1415200",
    "end": "1421520"
  },
  {
    "text": "be the eventual version uh but for prototypes we could totally use this and autogenerate that from open telemetry",
    "start": "1421520",
    "end": "1427600"
  },
  {
    "text": "schema right now we need syntax uh sorry reference syntax so how we reference this schema you know somehow users could",
    "start": "1427600",
    "end": "1435360"
  },
  {
    "text": "be able to pin their queries and how storage uh will be able to capture the link between metric and the schema this",
    "start": "1435360",
    "end": "1442080"
  },
  {
    "text": "already exists as well right right so open telemetry have a schema URL which is this notion of telling essentially",
    "start": "1442080",
    "end": "1448240"
  },
  {
    "text": "where is your schema definitions and schema artifacts as well the generated artifacts and you use it usually via",
    "start": "1448240",
    "end": "1454400"
  },
  {
    "text": "some you know GitHub repo and you can fetch it very quickly and um you reference it by some whatever um URL and",
    "start": "1454400",
    "end": "1462320"
  },
  {
    "text": "the version as well so uh we can totally leverage that we could put that as a label and the moment query is having the",
    "start": "1462320",
    "end": "1469440"
  },
  {
    "text": "special selector which like normal selector but with schema special metric it will actually do the magic it will",
    "start": "1469440",
    "end": "1475279"
  },
  {
    "text": "actually do the um translation uh maybe one one more one",
    "start": "1475279",
    "end": "1480559"
  },
  {
    "text": "thing to note is that there are more efficient ways so I'll be proposing some",
    "start": "1480559",
    "end": "1486000"
  },
  {
    "text": "maybe improvements to this ideally it's not a schema URL is a schema ID but",
    "start": "1486000",
    "end": "1491279"
  },
  {
    "text": "those are new since I think a schema URL is good enough for a first iteration um and yeah finally we have to combine",
    "start": "1491279",
    "end": "1497440"
  },
  {
    "text": "everything into something that uses all of it and in fact we already implemented that it's kind of around thousand lines",
    "start": "1497440",
    "end": "1504159"
  },
  {
    "text": "and uh the schema engine itself and it's as easy as adding a one component in",
    "start": "1504159",
    "end": "1509679"
  },
  {
    "text": "code between promql engine in Prometheus and storage layer that do the transformation in a in a transparent way",
    "start": "1509679",
    "end": "1515760"
  },
  {
    "text": "and here we go so let's do the tricky stuff and do live demo what do you think",
    "start": "1515760",
    "end": "1521039"
  },
  {
    "text": "should we do it yes so let me start uh to mirror",
    "start": "1521039",
    "end": "1528840"
  },
  {
    "text": "mirroring let's see how that goes and let's do this oh beautiful so let me a",
    "start": "1528840",
    "end": "1536400"
  },
  {
    "text": "little bit make it smaller yeah okay so here we go this is our query that broke",
    "start": "1536400",
    "end": "1542159"
  },
  {
    "text": "right and uh why it broke because there is a new version of the same metric",
    "start": "1542159",
    "end": "1547520"
  },
  {
    "text": "called you know with a change name and then my number in class so naive way that Ariana mentioned would be to add",
    "start": "1547520",
    "end": "1554400"
  },
  {
    "text": "the or statement right yes and we said this is not ideal for various things",
    "start": "1554400",
    "end": "1559679"
  },
  {
    "text": "it's just complex and of course look what happened it's actually a different series and because not only but because",
    "start": "1559679",
    "end": "1565760"
  },
  {
    "text": "of metric name but also because of uh label names that are totally conflicting so it's not ideal and also you don't",
    "start": "1565760",
    "end": "1572480"
  },
  {
    "text": "want manually to do this so instead you can tell uh Prometheus in this case that",
    "start": "1572480",
    "end": "1578559"
  },
  {
    "text": "hey actually my uh metric has a schema and it's actually old metric from one zero schema and everything works right",
    "start": "1578559",
    "end": "1584880"
  },
  {
    "text": "so it's on the fly super fast um and you can totally use a new version at some",
    "start": "1584880",
    "end": "1591360"
  },
  {
    "text": "point you like actually I like the new version right so let me use a new",
    "start": "1591360",
    "end": "1596480"
  },
  {
    "text": "version I have to actually bump the version of the schema actually version two and then I have to rename my labels",
    "start": "1596480",
    "end": "1604159"
  },
  {
    "text": "uh because of course it's a new version and someone decided it would be good idea to change so why not I can do that",
    "start": "1604159",
    "end": "1610400"
  },
  {
    "text": "as well so this is um already yeah pretty pretty flexible and the main the",
    "start": "1610400",
    "end": "1616080"
  },
  {
    "text": "main kind of like source of of this those possibilities is this kind of um transformation file which allows me",
    "start": "1616080",
    "end": "1623039"
  },
  {
    "text": "allows kind of promuse to go and find the exact spot of what's query desired",
    "start": "1623039",
    "end": "1628960"
  },
  {
    "text": "to have and how to get there and how to kind of translate matchers I'm selecting",
    "start": "1628960",
    "end": "1634240"
  },
  {
    "text": "through in storage and then how to translate something that comes from the storage back to desired uh version so",
    "start": "1634240",
    "end": "1640400"
  },
  {
    "text": "it's totally doable it's totally fast and I want to show you one more thing so here are here's a histogram that",
    "start": "1640400",
    "end": "1647360"
  },
  {
    "text": "actually changed um a unit which is not so trivial because it's not only metric",
    "start": "1647360",
    "end": "1653919"
  },
  {
    "text": "name that changed but actually of course a value right and of course milliseconds you can see the values are quite large",
    "start": "1653919",
    "end": "1660720"
  },
  {
    "text": "because there are milliseconds and then seconds the new version is kind of uh you know in seconds so the value is",
    "start": "1660720",
    "end": "1667120"
  },
  {
    "text": "smaller so you can totally represent old metric as a new metric so I want only",
    "start": "1667120",
    "end": "1672240"
  },
  {
    "text": "seconds because that's recommended actually have base units and this will totally work and you can confirm that by",
    "start": "1672240",
    "end": "1677679"
  },
  {
    "text": "checking you know where this metric comes from it comes from do from the application who exposes one zero metrics",
    "start": "1677679",
    "end": "1683760"
  },
  {
    "text": "and we totally expose one zero metric as one two dotmetric and value change as",
    "start": "1683760",
    "end": "1689279"
  },
  {
    "text": "well so um it just you know translated on demand so you can do amazing amazing",
    "start": "1689279",
    "end": "1694640"
  },
  {
    "text": "things with that so back to our talk if I can do it yes there's by the way there",
    "start": "1694640",
    "end": "1700080"
  },
  {
    "text": "is a full video on YouTube I already share on linkadin you can totally rewatch again uh for the demo but let's",
    "start": "1700080",
    "end": "1707360"
  },
  {
    "text": "go I don't want to actually do this how to switch do this yes okay bonus part so",
    "start": "1707360",
    "end": "1716960"
  },
  {
    "text": "there is this kind of funny interesting thing happening in the ecosystem for like last two years so Prometheus has",
    "start": "1716960",
    "end": "1723600"
  },
  {
    "text": "its own metric convention right it has those suffixes it has underscores And open telemetry at some point designed a",
    "start": "1723600",
    "end": "1731360"
  },
  {
    "text": "different metric convention uh naming convention which is incompatible with prime use right they had the reasons",
    "start": "1731360",
    "end": "1736880"
  },
  {
    "text": "it's okay they decided to use dots which are not allowed which used to be not allowed and decided to not use suffixes",
    "start": "1736880",
    "end": "1743360"
  },
  {
    "text": "which in our opinion as a prime use maintainers essentially removes uh many many advantages of using promql in yaml",
    "start": "1743360",
    "end": "1750799"
  },
  {
    "text": "files because when you look on the yaml file you you don't have a system that will tell you oh this is a seconds or",
    "start": "1750799",
    "end": "1756640"
  },
  {
    "text": "this is a counter Like so having that in name is actually crucial but ecosystem",
    "start": "1756640",
    "end": "1762320"
  },
  {
    "text": "wants to have this name and that's okay and this solution actually allows um a",
    "start": "1762320",
    "end": "1768159"
  },
  {
    "text": "single metric have two versions and you can decide if open telemetry users uh",
    "start": "1768159",
    "end": "1773679"
  },
  {
    "text": "want to kind of have exactly the same open tele open telemetry metric um they can totally use a version that has this",
    "start": "1773679",
    "end": "1779520"
  },
  {
    "text": "metric uh and it would translate to this open telemetry version of it and then you know uh if uh there is Prometheus",
    "start": "1779520",
    "end": "1786399"
  },
  {
    "text": "fan and like super strict person who loves this um user experience of",
    "start": "1786399",
    "end": "1791679"
  },
  {
    "text": "Prometheus naming they can use that as well so that's amazing because we are we can support both",
    "start": "1791679",
    "end": "1799360"
  },
  {
    "text": "so we are uh almost at the end and uh what are the learnings here where",
    "start": "1799360",
    "end": "1805919"
  },
  {
    "text": "basically the learnings are that uh you know renaming matrix is actually is",
    "start": "1805919",
    "end": "1811120"
  },
  {
    "text": "actually very hard and uh it's not trivial then uh you also",
    "start": "1811120",
    "end": "1817159"
  },
  {
    "text": "yeah having having schema for your for for your metric is actually a very cool",
    "start": "1817159",
    "end": "1822240"
  },
  {
    "text": "thing is does a lot of benefits weaver CLI from open telemetry is absolutely",
    "start": "1822240",
    "end": "1828520"
  },
  {
    "text": "amazing and uh these schemas actually work for Prometheus too and so of course",
    "start": "1828520",
    "end": "1834880"
  },
  {
    "text": "you know there's some work to be done towards uh uh having more simplicity in this more um having more efficient u",
    "start": "1834880",
    "end": "1842960"
  },
  {
    "text": "format transformation etc and uh to improve the schema URL as as BK said with going towards like an schema ID but",
    "start": "1842960",
    "end": "1852640"
  },
  {
    "text": "we can work together towards you know this seamless renames in Prometheus and the ecosystem for a better",
    "start": "1852640",
    "end": "1860039"
  },
  {
    "text": "world and uh yeah uh we're going to be at the Prometheus booth um yeah we so",
    "start": "1860039",
    "end": "1865919"
  },
  {
    "text": "that's it thank you very much first of all and we'll be here I don't think we have time for questions so we'll be here for a bit and then Prometheus booth",
    "start": "1865919",
    "end": "1872399"
  },
  {
    "text": "today and tomorrow and please check the demo please check the pull request review it so we can have that feature",
    "start": "1872399",
    "end": "1879520"
  },
  {
    "text": "please let us know if you if you'd like to put schema on your Prometheus metrics and and really Yeah thank you so much",
    "start": "1879520",
    "end": "1885279"
  },
  {
    "text": "thank you for having us",
    "start": "1885279",
    "end": "1888919"
  }
]