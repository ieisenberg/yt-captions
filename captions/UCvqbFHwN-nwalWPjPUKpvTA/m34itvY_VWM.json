[
  {
    "text": "all right welcome is everyone",
    "start": "840",
    "end": "3040"
  },
  {
    "text": "sufficiently",
    "start": "3040",
    "end": "4920"
  },
  {
    "text": "caffinated so as Bill said I'm Jacob",
    "start": "4920",
    "end": "8120"
  },
  {
    "text": "I'll be your captain today during this",
    "start": "8120",
    "end": "10639"
  },
  {
    "text": "rather fast-paced journey through Linux",
    "start": "10639",
    "end": "14639"
  },
  {
    "text": "API for placing sockets together that we",
    "start": "14639",
    "end": "17680"
  },
  {
    "text": "call sock map so fasten your seat bels",
    "start": "17680",
    "end": "20800"
  },
  {
    "text": "and let's",
    "start": "20800",
    "end": "22720"
  },
  {
    "text": "go um who am I why am I here talking to",
    "start": "22720",
    "end": "25840"
  },
  {
    "text": "you why I work at cler on the Linux team",
    "start": "25840",
    "end": "30119"
  },
  {
    "text": "where we deal with rolling out fresh",
    "start": "30119",
    "end": "32439"
  },
  {
    "text": "kers into production that's my one role",
    "start": "32439",
    "end": "35840"
  },
  {
    "text": "I also have a second role which is more",
    "start": "35840",
    "end": "38320"
  },
  {
    "text": "important to this stock I I am a com",
    "start": "38320",
    "end": "40559"
  },
  {
    "text": "container of this Linux API or a feature",
    "start": "40559",
    "end": "44200"
  },
  {
    "text": "called sock",
    "start": "44200",
    "end": "46800"
  },
  {
    "text": "map uh couple things about this talk um",
    "start": "46800",
    "end": "50480"
  },
  {
    "text": "it will be good if you have a little bit",
    "start": "50480",
    "end": "52280"
  },
  {
    "text": "of networking knowledge and you know the",
    "start": "52280",
    "end": "55600"
  },
  {
    "text": "basics of BPF it will be definitely",
    "start": "55600",
    "end": "57800"
  },
  {
    "text": "easier to follow and how you know if you",
    "start": "57800",
    "end": "60519"
  },
  {
    "text": "if you uh know a little bit how",
    "start": "60519",
    "end": "62399"
  },
  {
    "text": "containers are buil what technologies we",
    "start": "62399",
    "end": "64878"
  },
  {
    "text": "use there what we um aim to achieve",
    "start": "64879",
    "end": "68360"
  },
  {
    "text": "today well I hope you'll know that sop",
    "start": "68360",
    "end": "70960"
  },
  {
    "text": "exists after this St and you will be",
    "start": "70960",
    "end": "73640"
  },
  {
    "text": "able to uh say if it may be fits your",
    "start": "73640",
    "end": "76520"
  },
  {
    "text": "use case if it could be applicable to",
    "start": "76520",
    "end": "79040"
  },
  {
    "text": "your workloads and if so you'll also",
    "start": "79040",
    "end": "81759"
  },
  {
    "text": "feel ready and know where to you know uh",
    "start": "81759",
    "end": "85280"
  },
  {
    "text": "look into",
    "start": "85280",
    "end": "87479"
  },
  {
    "text": "more uh our agenda for today today is",
    "start": "87479",
    "end": "90759"
  },
  {
    "text": "prepacked uh we're going to start uh",
    "start": "90759",
    "end": "93399"
  },
  {
    "text": "with taking a look what can s do for us",
    "start": "93399",
    "end": "95960"
  },
  {
    "text": "then we're going to actually find out",
    "start": "95960",
    "end": "98240"
  },
  {
    "text": "what suap is because uh you know at this",
    "start": "98240",
    "end": "100759"
  },
  {
    "text": "point we don't know yet uh when I'm",
    "start": "100759",
    "end": "102880"
  },
  {
    "text": "going to see how to set it up uh after",
    "start": "102880",
    "end": "106600"
  },
  {
    "text": "that sock map you know operates of in",
    "start": "106600",
    "end": "108680"
  },
  {
    "text": "socket so we're going to look how you",
    "start": "108680",
    "end": "110920"
  },
  {
    "text": "get your sock sockets into sock map then",
    "start": "110920",
    "end": "114360"
  },
  {
    "text": "we're going to go over the",
    "start": "114360",
    "end": "116399"
  },
  {
    "text": "configurations which we can set up with",
    "start": "116399",
    "end": "118759"
  },
  {
    "text": "soap to splice sockets and we're going",
    "start": "118759",
    "end": "121280"
  },
  {
    "text": "to finish it off with some real life use",
    "start": "121280",
    "end": "125200"
  },
  {
    "text": "cases so what can Sak map do for you or",
    "start": "125200",
    "end": "129399"
  },
  {
    "text": "actually what can suap do for container",
    "start": "129399",
    "end": "132560"
  },
  {
    "text": "networking well if you have in Linux to",
    "start": "132560",
    "end": "135360"
  },
  {
    "text": "networking name spaces and for are two",
    "start": "135360",
    "end": "138080"
  },
  {
    "text": "processes each in their own networking",
    "start": "138080",
    "end": "140480"
  },
  {
    "text": "name space they would like to talk over",
    "start": "140480",
    "end": "142599"
  },
  {
    "text": "talk to each other over sockets over",
    "start": "142599",
    "end": "145519"
  },
  {
    "text": "networking uh kind of as as if you had",
    "start": "145519",
    "end": "148480"
  },
  {
    "text": "in kubernetes two pods that are on the",
    "start": "148480",
    "end": "150560"
  },
  {
    "text": "same node right then in order for these",
    "start": "150560",
    "end": "153640"
  },
  {
    "text": "processes to exchange messages they the",
    "start": "153640",
    "end": "156200"
  },
  {
    "text": "message needs to go all the way through",
    "start": "156200",
    "end": "158200"
  },
  {
    "text": "the network Stack Down to the virtual",
    "start": "158200",
    "end": "161480"
  },
  {
    "text": "networking layer probably vth pair or",
    "start": "161480",
    "end": "164720"
  },
  {
    "text": "you know vth with some routing in",
    "start": "164720",
    "end": "166440"
  },
  {
    "text": "between and up again up the whole",
    "start": "166440",
    "end": "168599"
  },
  {
    "text": "network stack to reach the destination",
    "start": "168599",
    "end": "171200"
  },
  {
    "text": "process so there's some overhead to",
    "start": "171200",
    "end": "174159"
  },
  {
    "text": "that what St map can offer here is a",
    "start": "174159",
    "end": "177519"
  },
  {
    "text": "bypass where we can create a shortcut",
    "start": "177519",
    "end": "180440"
  },
  {
    "text": "puth between the two sockets so the",
    "start": "180440",
    "end": "183360"
  },
  {
    "text": "messages flow straight from the you know",
    "start": "183360",
    "end": "186680"
  },
  {
    "text": "the input socket The Source socket into",
    "start": "186680",
    "end": "189040"
  },
  {
    "text": "the target the destination",
    "start": "189040",
    "end": "191519"
  },
  {
    "text": "soet that way we uh we save on some of",
    "start": "191519",
    "end": "195280"
  },
  {
    "text": "the overhead of passing through the",
    "start": "195280",
    "end": "197120"
  },
  {
    "text": "network",
    "start": "197120",
    "end": "198239"
  },
  {
    "text": "stack so let's actually see how that",
    "start": "198239",
    "end": "201159"
  },
  {
    "text": "looks in action we can uh set it up",
    "start": "201159",
    "end": "203680"
  },
  {
    "text": "without too much effort ourselves if if",
    "start": "203680",
    "end": "206080"
  },
  {
    "text": "you have a Linux VM or a machine running",
    "start": "206080",
    "end": "209360"
  },
  {
    "text": "Linux we will need two network name",
    "start": "209360",
    "end": "212080"
  },
  {
    "text": "spaces uh we need to put put a virtual",
    "start": "212080",
    "end": "215040"
  },
  {
    "text": "link between them a v",
    "start": "215040",
    "end": "217680"
  },
  {
    "text": "per we bring our interfaces up so now we",
    "start": "217680",
    "end": "220879"
  },
  {
    "text": "have L2 networking between these Network",
    "start": "220879",
    "end": "224239"
  },
  {
    "text": "namespaces we assign some addresses so",
    "start": "224239",
    "end": "226720"
  },
  {
    "text": "we have now L3 networking between them",
    "start": "226720",
    "end": "230040"
  },
  {
    "text": "and in one of the network Nam spaces",
    "start": "230040",
    "end": "231760"
  },
  {
    "text": "we're going to run a TCP server that's",
    "start": "231760",
    "end": "234360"
  },
  {
    "text": "just going to be listening for incoming",
    "start": "234360",
    "end": "236799"
  },
  {
    "text": "connections and in the other one we're",
    "start": "236799",
    "end": "238840"
  },
  {
    "text": "going to run a TC client that's going to",
    "start": "238840",
    "end": "241239"
  },
  {
    "text": "be doing requests and waiting for a",
    "start": "241239",
    "end": "243799"
  },
  {
    "text": "response from the server so it's kind of",
    "start": "243799",
    "end": "245799"
  },
  {
    "text": "like a request response Benchmark",
    "start": "245799",
    "end": "248360"
  },
  {
    "text": "emulating simulating and RPC",
    "start": "248360",
    "end": "251840"
  },
  {
    "text": "workload and you know our Benchmark tool",
    "start": "251840",
    "end": "254560"
  },
  {
    "text": "is going to measure the latency of",
    "start": "254560",
    "end": "256440"
  },
  {
    "text": "request response so this is our Baseline",
    "start": "256440",
    "end": "259799"
  },
  {
    "text": "uh what I got when I run it on my laptop",
    "start": "259799",
    "end": "261880"
  },
  {
    "text": "was something like five 5.8",
    "start": "261880",
    "end": "265360"
  },
  {
    "text": "micros now we're going to repeat the",
    "start": "265360",
    "end": "267840"
  },
  {
    "text": "same experiment but this time using the",
    "start": "267840",
    "end": "269800"
  },
  {
    "text": "sock map bypass right so to set that up",
    "start": "269800",
    "end": "273479"
  },
  {
    "text": "first we need to load a couple of BPF",
    "start": "273479",
    "end": "275639"
  },
  {
    "text": "programs and create a BPF map we're",
    "start": "275639",
    "end": "278240"
  },
  {
    "text": "going to talk about these programs and",
    "start": "278240",
    "end": "280680"
  },
  {
    "text": "Maps",
    "start": "280680",
    "end": "282240"
  },
  {
    "text": "later then we need to do a little bit of",
    "start": "282240",
    "end": "284560"
  },
  {
    "text": "setup we actually need to attach one of",
    "start": "284560",
    "end": "286360"
  },
  {
    "text": "the programs to to a BPF",
    "start": "286360",
    "end": "288880"
  },
  {
    "text": "map and we need to do one more thing we",
    "start": "288880",
    "end": "291360"
  },
  {
    "text": "need to create a c group uh so that",
    "start": "291360",
    "end": "294759"
  },
  {
    "text": "we'll be able to get our hands on the",
    "start": "294759",
    "end": "297039"
  },
  {
    "text": "sockets and configure the splicing",
    "start": "297039",
    "end": "301320"
  },
  {
    "text": "now one last thing to to get out our",
    "start": "301320",
    "end": "303080"
  },
  {
    "text": "hands on the sockets we also need to",
    "start": "303080",
    "end": "304880"
  },
  {
    "text": "attach another BPF program to that c",
    "start": "304880",
    "end": "307120"
  },
  {
    "text": "group we're going to talk about that",
    "start": "307120",
    "end": "308479"
  },
  {
    "text": "later as",
    "start": "308479",
    "end": "310639"
  },
  {
    "text": "well so now that we have this setup we",
    "start": "310639",
    "end": "313560"
  },
  {
    "text": "move our shell uh into the C group so",
    "start": "313560",
    "end": "316639"
  },
  {
    "text": "all child processes are going to be also",
    "start": "316639",
    "end": "318759"
  },
  {
    "text": "started inside that c group and once",
    "start": "318759",
    "end": "321520"
  },
  {
    "text": "again we start our TCP",
    "start": "321520",
    "end": "323960"
  },
  {
    "text": "server in one network Nam space and we",
    "start": "323960",
    "end": "327080"
  },
  {
    "text": "run the client in the other and we",
    "start": "327080",
    "end": "329960"
  },
  {
    "text": "measure the latency and for invest setup",
    "start": "329960",
    "end": "333120"
  },
  {
    "text": "I got something like 4.7 microc on",
    "start": "333120",
    "end": "336960"
  },
  {
    "text": "average so you know uh there was less",
    "start": "336960",
    "end": "339919"
  },
  {
    "text": "code in the network path so the latency",
    "start": "339919",
    "end": "343319"
  },
  {
    "text": "went down I mean if you're running an",
    "start": "343319",
    "end": "345800"
  },
  {
    "text": "RPC workload double digit Improvement",
    "start": "345800",
    "end": "348840"
  },
  {
    "text": "without modifying the application yeah I",
    "start": "348840",
    "end": "351680"
  },
  {
    "text": "would consider it perhaps and you also",
    "start": "351680",
    "end": "354520"
  },
  {
    "text": "don't have to believe me uh maybe I made",
    "start": "354520",
    "end": "357240"
  },
  {
    "text": "a mistake running this Benchmark you can",
    "start": "357240",
    "end": "359800"
  },
  {
    "text": "grab it and run it yourself the code is",
    "start": "359800",
    "end": "361800"
  },
  {
    "text": "on",
    "start": "361800",
    "end": "364039"
  },
  {
    "text": "GitHub now that you know whatman can do",
    "start": "364160",
    "end": "367280"
  },
  {
    "text": "let's talk about what actually sock map",
    "start": "367280",
    "end": "369479"
  },
  {
    "text": "is what do we mean by that so when we",
    "start": "369479",
    "end": "371800"
  },
  {
    "text": "say sock map we actually mean two things",
    "start": "371800",
    "end": "375680"
  },
  {
    "text": "first of all it's it's a collection uh",
    "start": "375680",
    "end": "378199"
  },
  {
    "text": "data type that is implemented inside the",
    "start": "378199",
    "end": "380560"
  },
  {
    "text": "Linux kernel for holding uh references",
    "start": "380560",
    "end": "383960"
  },
  {
    "text": "to socket",
    "start": "383960",
    "end": "385479"
  },
  {
    "text": "objects uh when dat type is exposed to",
    "start": "385479",
    "end": "388280"
  },
  {
    "text": "your programs to users space as a BPF",
    "start": "388280",
    "end": "390680"
  },
  {
    "text": "map which is like we know a key value",
    "start": "390680",
    "end": "393479"
  },
  {
    "text": "stores that user space programs and BPF",
    "start": "393479",
    "end": "396319"
  },
  {
    "text": "programs can use to exchange data and as",
    "start": "396319",
    "end": "399039"
  },
  {
    "text": "I mentioned it holds uh references to",
    "start": "399039",
    "end": "401520"
  },
  {
    "text": "sockets but these are weak references so",
    "start": "401520",
    "end": "404120"
  },
  {
    "text": "that means that uh sock map doesn't keep",
    "start": "404120",
    "end": "407199"
  },
  {
    "text": "the socket objects",
    "start": "407199",
    "end": "410240"
  },
  {
    "text": "alive then the second uh meaning behind",
    "start": "410400",
    "end": "414000"
  },
  {
    "text": "silk map is um that's an API which we",
    "start": "414000",
    "end": "417759"
  },
  {
    "text": "with which we can enforce policy which",
    "start": "417759",
    "end": "420199"
  },
  {
    "text": "is just a fancy term for filtering",
    "start": "420199",
    "end": "422199"
  },
  {
    "text": "packets and redirect steer messages",
    "start": "422199",
    "end": "425520"
  },
  {
    "text": "packets between two",
    "start": "425520",
    "end": "427199"
  },
  {
    "text": "sockets and that these policies and",
    "start": "427199",
    "end": "429759"
  },
  {
    "text": "these redirect rules are expressed as",
    "start": "429759",
    "end": "432240"
  },
  {
    "text": "BPF programs which we're going to learn",
    "start": "432240",
    "end": "434840"
  },
  {
    "text": "more about later and these BPF programs",
    "start": "434840",
    "end": "438440"
  },
  {
    "text": "in order to be activated they need to be",
    "start": "438440",
    "end": "440720"
  },
  {
    "text": "hooked somewhere into the sorted",
    "start": "440720",
    "end": "444360"
  },
  {
    "text": "layer all right we have a rough idea",
    "start": "444440",
    "end": "446879"
  },
  {
    "text": "what s map is so now let's um see how do",
    "start": "446879",
    "end": "450319"
  },
  {
    "text": "we set it all",
    "start": "450319",
    "end": "452919"
  },
  {
    "text": "up so to splice two sockets together we",
    "start": "452919",
    "end": "456840"
  },
  {
    "text": "first of all need the sockets right so",
    "start": "456840",
    "end": "459759"
  },
  {
    "text": "these need to be connected or of always",
    "start": "459759",
    "end": "462240"
  },
  {
    "text": "established sockets that we're going to",
    "start": "462240",
    "end": "463960"
  },
  {
    "text": "be operating on it doesn't matter if uh",
    "start": "463960",
    "end": "467319"
  },
  {
    "text": "we're going to operate on sockets that",
    "start": "467319",
    "end": "469759"
  },
  {
    "text": "have been actively opened so when we're",
    "start": "469759",
    "end": "472199"
  },
  {
    "text": "making an outgoing connection from our",
    "start": "472199",
    "end": "474440"
  },
  {
    "text": "process or sockets that have been",
    "start": "474440",
    "end": "476360"
  },
  {
    "text": "passively open so when we're just",
    "start": "476360",
    "end": "478280"
  },
  {
    "text": "accepting and coming connection what's",
    "start": "478280",
    "end": "480800"
  },
  {
    "text": "import what is important is that it is a",
    "start": "480800",
    "end": "483120"
  },
  {
    "text": "connected",
    "start": "483120",
    "end": "484400"
  },
  {
    "text": "socket we have a socket we're going to",
    "start": "484400",
    "end": "486479"
  },
  {
    "text": "leave it there um what kind of sockets",
    "start": "486479",
    "end": "489840"
  },
  {
    "text": "we can operate on well not every kind of",
    "start": "489840",
    "end": "492479"
  },
  {
    "text": "socket but the ones that are probably",
    "start": "492479",
    "end": "495319"
  },
  {
    "text": "most used within Network workloads and",
    "start": "495319",
    "end": "498199"
  },
  {
    "text": "even some of the more exotic ones like",
    "start": "498199",
    "end": "500800"
  },
  {
    "text": "visok which is used to communicate",
    "start": "500800",
    "end": "503960"
  },
  {
    "text": "between uh the hypervisor and the guest",
    "start": "503960",
    "end": "508440"
  },
  {
    "text": "VM",
    "start": "508440",
    "end": "510520"
  },
  {
    "text": "right once we have a socket then we need",
    "start": "510520",
    "end": "512959"
  },
  {
    "text": "to create our BPF map that is going to",
    "start": "512959",
    "end": "516039"
  },
  {
    "text": "be populated with references to the",
    "start": "516039",
    "end": "518440"
  },
  {
    "text": "sockets so to create a BPF map we just",
    "start": "518440",
    "end": "521200"
  },
  {
    "text": "do it like for any other BPF map either",
    "start": "521200",
    "end": "525120"
  },
  {
    "text": "directly using the BPF cisal or more",
    "start": "525120",
    "end": "527760"
  },
  {
    "text": "probably using a library wrapper uh of a",
    "start": "527760",
    "end": "531399"
  },
  {
    "text": "library of our choice like ebpf go that",
    "start": "531399",
    "end": "533839"
  },
  {
    "text": "selum uses or maybe Li BPF the reference",
    "start": "533839",
    "end": "536959"
  },
  {
    "text": "implementation of a BPF rer",
    "start": "536959",
    "end": "540839"
  },
  {
    "text": "library or you can create it uh from the",
    "start": "540839",
    "end": "544160"
  },
  {
    "text": "command line as well that's what I use",
    "start": "544160",
    "end": "546760"
  },
  {
    "text": "uh for",
    "start": "546760",
    "end": "549399"
  },
  {
    "text": "experimenting um now we actually have",
    "start": "549760",
    "end": "552880"
  },
  {
    "text": "two flavors two variants of this sock",
    "start": "552880",
    "end": "556560"
  },
  {
    "text": "map container uh one called sock map uh",
    "start": "556560",
    "end": "561480"
  },
  {
    "text": "which is keyed by an integer value so",
    "start": "561480",
    "end": "564440"
  },
  {
    "text": "that's pretty simple type you know we",
    "start": "564440",
    "end": "566959"
  },
  {
    "text": "have a number and that Maps do du to a",
    "start": "566959",
    "end": "569880"
  },
  {
    "text": "socket and the other one that is a",
    "start": "569880",
    "end": "571880"
  },
  {
    "text": "little bit more flexible called soash",
    "start": "571880",
    "end": "574880"
  },
  {
    "text": "where your key is an arbitrary binary",
    "start": "574880",
    "end": "578000"
  },
  {
    "text": "data blob that maps to a socket",
    "start": "578000",
    "end": "580839"
  },
  {
    "text": "reference so the data blob can be",
    "start": "580839",
    "end": "583160"
  },
  {
    "text": "anything you want it can be a string it",
    "start": "583160",
    "end": "585680"
  },
  {
    "text": "can be a serialized for tle yeah um one",
    "start": "585680",
    "end": "590320"
  },
  {
    "text": "thing to note uh these uh types should",
    "start": "590320",
    "end": "592640"
  },
  {
    "text": "not be confused with something called",
    "start": "592640",
    "end": "594360"
  },
  {
    "text": "sock array that also exists in the Linux",
    "start": "594360",
    "end": "598320"
  },
  {
    "text": "kernel",
    "start": "598320",
    "end": "600200"
  },
  {
    "text": "all right uh so we have a socket we have",
    "start": "600200",
    "end": "602839"
  },
  {
    "text": "our BPF map then we also need a BPF",
    "start": "602839",
    "end": "605800"
  },
  {
    "text": "program which will be expressing our",
    "start": "605800",
    "end": "608640"
  },
  {
    "text": "redirect logic uh so we do that we by",
    "start": "608640",
    "end": "612839"
  },
  {
    "text": "loading a program using BPF CIS and",
    "start": "612839",
    "end": "615560"
  },
  {
    "text": "there are two kinds of programs that",
    "start": "615560",
    "end": "617399"
  },
  {
    "text": "we're going to use for placing sockets",
    "start": "617399",
    "end": "619399"
  },
  {
    "text": "with sock map we're going to see later",
    "start": "619399",
    "end": "622480"
  },
  {
    "text": "which one we use in which",
    "start": "622480",
    "end": "626079"
  },
  {
    "text": "situation that BPF program is actually",
    "start": "626079",
    "end": "628720"
  },
  {
    "text": "going to be using the sock map we have",
    "start": "628720",
    "end": "631079"
  },
  {
    "text": "created because that's how the BPF",
    "start": "631079",
    "end": "633920"
  },
  {
    "text": "programs the soap BPF programs select",
    "start": "633920",
    "end": "636920"
  },
  {
    "text": "the sockets when redirecting",
    "start": "636920",
    "end": "640720"
  },
  {
    "text": "packets also BPF programs they once",
    "start": "640920",
    "end": "645040"
  },
  {
    "text": "loaded they need to be activated and we",
    "start": "645040",
    "end": "647680"
  },
  {
    "text": "activate BPF programs by attaching them",
    "start": "647680",
    "end": "649920"
  },
  {
    "text": "somewhere in this case we attach our BPF",
    "start": "649920",
    "end": "653160"
  },
  {
    "text": "programs to the S",
    "start": "653160",
    "end": "656639"
  },
  {
    "text": "map okay once we have all that set up we",
    "start": "657079",
    "end": "660120"
  },
  {
    "text": "can finally insert our socket into our",
    "start": "660120",
    "end": "663480"
  },
  {
    "text": "BPF map and we uh can do that with a",
    "start": "663480",
    "end": "668000"
  },
  {
    "text": "bbfc called Map update LM one thing to",
    "start": "668000",
    "end": "671440"
  },
  {
    "text": "note very important you can only insert",
    "start": "671440",
    "end": "673800"
  },
  {
    "text": "sockets into sock map only once you have",
    "start": "673800",
    "end": "676200"
  },
  {
    "text": "attached your BPF programs to it",
    "start": "676200",
    "end": "678760"
  },
  {
    "text": "otherwise your redirecting logic won't",
    "start": "678760",
    "end": "682360"
  },
  {
    "text": "operate on your",
    "start": "682360",
    "end": "685279"
  },
  {
    "text": "sockets so let's look uh a little bit",
    "start": "685279",
    "end": "688360"
  },
  {
    "text": "more at the last step right how do we",
    "start": "688360",
    "end": "691320"
  },
  {
    "text": "actually can insert get sockets into the",
    "start": "691320",
    "end": "694279"
  },
  {
    "text": "sock",
    "start": "694279",
    "end": "695240"
  },
  {
    "text": "map so in the simplest case we have a",
    "start": "695240",
    "end": "699279"
  },
  {
    "text": "user space process that owns both the",
    "start": "699279",
    "end": "703079"
  },
  {
    "text": "BPF map s map and a socket in this case",
    "start": "703079",
    "end": "706880"
  },
  {
    "text": "it's a it's a simple uh scenario where",
    "start": "706880",
    "end": "709399"
  },
  {
    "text": "your process will just make a bpfc call",
    "start": "709399",
    "end": "712240"
  },
  {
    "text": "and you can uh insert a reference to a",
    "start": "712240",
    "end": "715360"
  },
  {
    "text": "socket into",
    "start": "715360",
    "end": "717000"
  },
  {
    "text": "sock but this is usually not the case",
    "start": "717000",
    "end": "719320"
  },
  {
    "text": "case in real life usually there will be",
    "start": "719320",
    "end": "722360"
  },
  {
    "text": "one process that has access to your BPF",
    "start": "722360",
    "end": "725079"
  },
  {
    "text": "map and another process that will have",
    "start": "725079",
    "end": "727399"
  },
  {
    "text": "access to the sockets on which you",
    "start": "727399",
    "end": "729279"
  },
  {
    "text": "actually want to operate what you can do",
    "start": "729279",
    "end": "731639"
  },
  {
    "text": "then well you can resort to something",
    "start": "731639",
    "end": "733760"
  },
  {
    "text": "like voluntary socket hand over where",
    "start": "733760",
    "end": "736399"
  },
  {
    "text": "you will have these two processes",
    "start": "736399",
    "end": "738680"
  },
  {
    "text": "talking over a Unix socket and sending",
    "start": "738680",
    "end": "741800"
  },
  {
    "text": "over a file descriptor to your connected",
    "start": "741800",
    "end": "745600"
  },
  {
    "text": "socket from one process to",
    "start": "745600",
    "end": "748160"
  },
  {
    "text": "another",
    "start": "748160",
    "end": "750320"
  },
  {
    "text": "that of course requires you to be able",
    "start": "750320",
    "end": "752399"
  },
  {
    "text": "to modify both processes if you don't",
    "start": "752399",
    "end": "756040"
  },
  {
    "text": "have uh if you don't have that",
    "start": "756040",
    "end": "758399"
  },
  {
    "text": "possibility then you can also resort to",
    "start": "758399",
    "end": "761519"
  },
  {
    "text": "stealing file descriptors to sockets",
    "start": "761519",
    "end": "764360"
  },
  {
    "text": "from another process or getting a",
    "start": "764360",
    "end": "766279"
  },
  {
    "text": "duplicate file descriptor using a PFD",
    "start": "766279",
    "end": "769399"
  },
  {
    "text": "gfd cisal that has been in Linux for",
    "start": "769399",
    "end": "772680"
  },
  {
    "text": "some time um it's however it's a it's a",
    "start": "772680",
    "end": "775839"
  },
  {
    "text": "privileged",
    "start": "775839",
    "end": "778120"
  },
  {
    "text": "operation",
    "start": "778120",
    "end": "780279"
  },
  {
    "text": "finally there's one more way to get your",
    "start": "780279",
    "end": "782839"
  },
  {
    "text": "hands on on on on sockets and insert",
    "start": "782839",
    "end": "786480"
  },
  {
    "text": "them into sock map this one we have this",
    "start": "786480",
    "end": "789040"
  },
  {
    "text": "is what we have seen in use in our demo",
    "start": "789040",
    "end": "791399"
  },
  {
    "text": "in the beginning you can also attach a",
    "start": "791399",
    "end": "794639"
  },
  {
    "text": "special BPF program type called so Ops",
    "start": "794639",
    "end": "797839"
  },
  {
    "text": "to a control group and this program will",
    "start": "797839",
    "end": "801040"
  },
  {
    "text": "be called whenever a connected socket is",
    "start": "801040",
    "end": "804279"
  },
  {
    "text": "created either passively or actively and",
    "start": "804279",
    "end": "807839"
  },
  {
    "text": "this and it will be able to uh take this",
    "start": "807839",
    "end": "810839"
  },
  {
    "text": "socket object and put it into",
    "start": "810839",
    "end": "814920"
  },
  {
    "text": "s all right we have a little bit of an",
    "start": "816519",
    "end": "819360"
  },
  {
    "text": "idea how do we set it up now let's uh",
    "start": "819360",
    "end": "822320"
  },
  {
    "text": "look in what scenarios we can actually",
    "start": "822320",
    "end": "825079"
  },
  {
    "text": "redirect data from one soet to",
    "start": "825079",
    "end": "828920"
  },
  {
    "text": "another there are four different",
    "start": "828920",
    "end": "831720"
  },
  {
    "text": "redirect scenarios that uh in which we",
    "start": "831720",
    "end": "834320"
  },
  {
    "text": "can set up sock",
    "start": "834320",
    "end": "837639"
  },
  {
    "text": "map first one we're going to call as",
    "start": "837639",
    "end": "840240"
  },
  {
    "text": "send to local so this is this is the",
    "start": "840240",
    "end": "842839"
  },
  {
    "text": "scenario that we have already seen where",
    "start": "842839",
    "end": "845759"
  },
  {
    "text": "uh two local processes communicate with",
    "start": "845759",
    "end": "848480"
  },
  {
    "text": "each",
    "start": "848480",
    "end": "849480"
  },
  {
    "text": "other so we have uh an input socket to",
    "start": "849480",
    "end": "853920"
  },
  {
    "text": "which one process rides and then the",
    "start": "853920",
    "end": "855920"
  },
  {
    "text": "data is redirected and is received or",
    "start": "855920",
    "end": "858320"
  },
  {
    "text": "read out from another socket if you're",
    "start": "858320",
    "end": "860959"
  },
  {
    "text": "familiar with other mechanisms for",
    "start": "860959",
    "end": "863880"
  },
  {
    "text": "splicing sockets this is similar to",
    "start": "863880",
    "end": "866079"
  },
  {
    "text": "creating a socket PA or if we move away",
    "start": "866079",
    "end": "869800"
  },
  {
    "text": "from sockets it's like a",
    "start": "869800",
    "end": "873440"
  },
  {
    "text": "pipe how do we set it up with sock map",
    "start": "873440",
    "end": "876519"
  },
  {
    "text": "well we'll have this BPF program in",
    "start": "876519",
    "end": "878800"
  },
  {
    "text": "between that we'll be doing the",
    "start": "878800",
    "end": "880519"
  },
  {
    "text": "redirecting and this will be an SK",
    "start": "880519",
    "end": "883160"
  },
  {
    "text": "message BPF program that we attach to SK",
    "start": "883160",
    "end": "887199"
  },
  {
    "text": "message verdict hooked that program will",
    "start": "887199",
    "end": "889720"
  },
  {
    "text": "call a helper which will select a socket",
    "start": "889720",
    "end": "893759"
  },
  {
    "text": "our output socket in addition we need to",
    "start": "893759",
    "end": "897240"
  },
  {
    "text": "uh set an Ingress flag on the",
    "start": "897240",
    "end": "901480"
  },
  {
    "text": "helper so this is uh what a sample",
    "start": "901480",
    "end": "904680"
  },
  {
    "text": "program like that looks like yep it's uh",
    "start": "904680",
    "end": "908360"
  },
  {
    "text": "it will likely have some logic that will",
    "start": "908360",
    "end": "911440"
  },
  {
    "text": "uh make a decision which socket to",
    "start": "911440",
    "end": "913199"
  },
  {
    "text": "select and then it will call the helper",
    "start": "913199",
    "end": "915600"
  },
  {
    "text": "I",
    "start": "915600",
    "end": "917759"
  },
  {
    "text": "mentioned uh we can't redirect uh from",
    "start": "918000",
    "end": "921560"
  },
  {
    "text": "any kind to any kind and this",
    "start": "921560",
    "end": "923639"
  },
  {
    "text": "configuration just from TCP sockets to",
    "start": "923639",
    "end": "926519"
  },
  {
    "text": "to any other socket kind but vet",
    "start": "926519",
    "end": "930959"
  },
  {
    "text": "then a different configuration is sent",
    "start": "932120",
    "end": "934560"
  },
  {
    "text": "to",
    "start": "934560",
    "end": "935279"
  },
  {
    "text": "erress uh in this configuration we uh",
    "start": "935279",
    "end": "938680"
  },
  {
    "text": "one process sends a message from a",
    "start": "938680",
    "end": "941000"
  },
  {
    "text": "socket but we actually don't pass it",
    "start": "941000",
    "end": "943600"
  },
  {
    "text": "down the network stack instead we",
    "start": "943600",
    "end": "945360"
  },
  {
    "text": "redirect it to another socket and send",
    "start": "945360",
    "end": "947720"
  },
  {
    "text": "it out pass it down to the network St",
    "start": "947720",
    "end": "950440"
  },
  {
    "text": "from the that other socket so this is",
    "start": "950440",
    "end": "953120"
  },
  {
    "text": "kind of like",
    "start": "953120",
    "end": "954800"
  },
  {
    "text": "splicing um from a pipe to a socket",
    "start": "954800",
    "end": "960680"
  },
  {
    "text": "in this scenario we again use a an SK",
    "start": "960680",
    "end": "963560"
  },
  {
    "text": "message BPF program to do our work we",
    "start": "963560",
    "end": "966959"
  },
  {
    "text": "set it up the same way as before uh the",
    "start": "966959",
    "end": "970000"
  },
  {
    "text": "only difference is that we don't set the",
    "start": "970000",
    "end": "972000"
  },
  {
    "text": "Ingress flag this time when we call our",
    "start": "972000",
    "end": "974480"
  },
  {
    "text": "redirect",
    "start": "974480",
    "end": "976560"
  },
  {
    "text": "helper uh this configuration is uh",
    "start": "976560",
    "end": "979279"
  },
  {
    "text": "really limited we can only use it TCP to",
    "start": "979279",
    "end": "982079"
  },
  {
    "text": "easp to TCP um yeah I guess it could be",
    "start": "982079",
    "end": "985920"
  },
  {
    "text": "extended forther we just haven't had any",
    "start": "985920",
    "end": "988040"
  },
  {
    "text": "use cases for",
    "start": "988040",
    "end": "990839"
  },
  {
    "text": "R now uh something completely different",
    "start": "990839",
    "end": "994600"
  },
  {
    "text": "a whole different family of for direct",
    "start": "994600",
    "end": "997360"
  },
  {
    "text": "scenarios is scenarios that related",
    "start": "997360",
    "end": "1000279"
  },
  {
    "text": "Ingress to erress so in what situation",
    "start": "1000279",
    "end": "1003199"
  },
  {
    "text": "does it happen so this is useful in a",
    "start": "1003199",
    "end": "1007120"
  },
  {
    "text": "situation where you have an L7 Network",
    "start": "1007120",
    "end": "1010120"
  },
  {
    "text": "proxy so a proxy that simply reads from",
    "start": "1010120",
    "end": "1013600"
  },
  {
    "text": "one socket and just pushes data R writes",
    "start": "1013600",
    "end": "1016480"
  },
  {
    "text": "data out another socket and it doesn't",
    "start": "1016480",
    "end": "1019079"
  },
  {
    "text": "touch modify the data that it pushes",
    "start": "1019079",
    "end": "1021319"
  },
  {
    "text": "from one socket to another so examples",
    "start": "1021319",
    "end": "1024240"
  },
  {
    "text": "of such programs would be the soat",
    "start": "1024240",
    "end": "1026959"
  },
  {
    "text": "utility or the systemd socket",
    "start": "1026959",
    "end": "1031839"
  },
  {
    "text": "proxy what soap can offer here is an",
    "start": "1032199",
    "end": "1035280"
  },
  {
    "text": "offload mechanism so instead of invoking",
    "start": "1035280",
    "end": "1038678"
  },
  {
    "text": "your process every time you need to copy",
    "start": "1038679",
    "end": "1041000"
  },
  {
    "text": "data from one socket to another you can",
    "start": "1041000",
    "end": "1043400"
  },
  {
    "text": "instead set up sock map so the copying",
    "start": "1043400",
    "end": "1047558"
  },
  {
    "text": "happens within the",
    "start": "1047559",
    "end": "1050840"
  },
  {
    "text": "Jal right so as I mentioned we the data",
    "start": "1051520",
    "end": "1055200"
  },
  {
    "text": "comes in from the network stack into the",
    "start": "1055200",
    "end": "1057799"
  },
  {
    "text": "socket receive queue and we redirect it",
    "start": "1057799",
    "end": "1060240"
  },
  {
    "text": "to our output socket and passed out",
    "start": "1060240",
    "end": "1063360"
  },
  {
    "text": "through the network stack again so it",
    "start": "1063360",
    "end": "1065320"
  },
  {
    "text": "would be like splicing from a socket",
    "start": "1065320",
    "end": "1068280"
  },
  {
    "text": "through a pipe to another",
    "start": "1068280",
    "end": "1070880"
  },
  {
    "text": "socket in this scenario we need to use",
    "start": "1070880",
    "end": "1073320"
  },
  {
    "text": "the other kind of the BPF program I",
    "start": "1073320",
    "end": "1075600"
  },
  {
    "text": "mentioned the SK SKB program because",
    "start": "1075600",
    "end": "1078559"
  },
  {
    "text": "this time if you're familiar a little",
    "start": "1078559",
    "end": "1080400"
  },
  {
    "text": "bit with network internals of Linux",
    "start": "1080400",
    "end": "1082840"
  },
  {
    "text": "we're operating on packets not on",
    "start": "1082840",
    "end": "1085000"
  },
  {
    "text": "messages hence the name we attach it to",
    "start": "1085000",
    "end": "1088240"
  },
  {
    "text": "to a different kind of uh hook dedicated",
    "start": "1088240",
    "end": "1091400"
  },
  {
    "text": "for this type of program and similarly",
    "start": "1091400",
    "end": "1093880"
  },
  {
    "text": "we also call a BPF helper to to choose",
    "start": "1093880",
    "end": "1097600"
  },
  {
    "text": "that Target",
    "start": "1097600",
    "end": "1099480"
  },
  {
    "text": "socket this is the most versatile",
    "start": "1099480",
    "end": "1102320"
  },
  {
    "text": "configuration that we supper today you",
    "start": "1102320",
    "end": "1104720"
  },
  {
    "text": "can redirect from any kind of socket to",
    "start": "1104720",
    "end": "1107520"
  },
  {
    "text": "to any other",
    "start": "1107520",
    "end": "1109960"
  },
  {
    "text": "finally the last redir",
    "start": "1109960",
    "end": "1112760"
  },
  {
    "text": "setup when data comes in packet comes in",
    "start": "1112760",
    "end": "1116559"
  },
  {
    "text": "from the network stack we receive it in",
    "start": "1116559",
    "end": "1119039"
  },
  {
    "text": "one socket but then we don't read it out",
    "start": "1119039",
    "end": "1122240"
  },
  {
    "text": "from that socket instead we redirect it",
    "start": "1122240",
    "end": "1124159"
  },
  {
    "text": "and read it out from another socket so",
    "start": "1124159",
    "end": "1126960"
  },
  {
    "text": "like splicing from a socket to a",
    "start": "1126960",
    "end": "1130840"
  },
  {
    "text": "pipe again the same uh kind of program",
    "start": "1130840",
    "end": "1134200"
  },
  {
    "text": "as before but because we're going with",
    "start": "1134200",
    "end": "1138440"
  },
  {
    "text": "the user space we now need to set the",
    "start": "1138440",
    "end": "1141440"
  },
  {
    "text": "Ingress flag when invoking our redirect",
    "start": "1141440",
    "end": "1146679"
  },
  {
    "text": "helper um here we also have almost full",
    "start": "1147159",
    "end": "1150280"
  },
  {
    "text": "flexibility any to any but vso if you",
    "start": "1150280",
    "end": "1153480"
  },
  {
    "text": "don't if you know what vs is for",
    "start": "1153480",
    "end": "1156440"
  },
  {
    "text": "redirecting uh to vok and reading it out",
    "start": "1156440",
    "end": "1160679"
  },
  {
    "text": "doesn't really make sense so that's why",
    "start": "1160679",
    "end": "1162679"
  },
  {
    "text": "it's not",
    "start": "1162679",
    "end": "1164640"
  },
  {
    "text": "supported all right I know it's a lot",
    "start": "1164640",
    "end": "1167360"
  },
  {
    "text": "and it's all bit complicated",
    "start": "1167360",
    "end": "1169480"
  },
  {
    "text": "so here's a cheat sheet that uh you can",
    "start": "1169480",
    "end": "1172760"
  },
  {
    "text": "go back to if you ever uh need to set it",
    "start": "1172760",
    "end": "1176520"
  },
  {
    "text": "up",
    "start": "1176520",
    "end": "1178799"
  },
  {
    "text": "yourself all right so uh let's finish it",
    "start": "1179919",
    "end": "1182960"
  },
  {
    "text": "off with a quick look at some real life",
    "start": "1182960",
    "end": "1185280"
  },
  {
    "text": "use",
    "start": "1185280",
    "end": "1187600"
  },
  {
    "text": "cases right this is a cium plus ebpf dat",
    "start": "1187760",
    "end": "1192440"
  },
  {
    "text": "so let's look at how cium uh used to uh",
    "start": "1192440",
    "end": "1196720"
  },
  {
    "text": "use uh splicing with Sak",
    "start": "1196720",
    "end": "1199360"
  },
  {
    "text": "so uh uh had this setup where they",
    "start": "1199360",
    "end": "1203640"
  },
  {
    "text": "would do transparent L7 filtering so we",
    "start": "1203640",
    "end": "1207440"
  },
  {
    "text": "would have an application running in one",
    "start": "1207440",
    "end": "1209640"
  },
  {
    "text": "container and sending out data and what",
    "start": "1209640",
    "end": "1213280"
  },
  {
    "text": "we could do in what could do was uh",
    "start": "1213280",
    "end": "1216280"
  },
  {
    "text": "kind of redirect these messages so they",
    "start": "1216280",
    "end": "1219360"
  },
  {
    "text": "are instead read out through transparent",
    "start": "1219360",
    "end": "1222200"
  },
  {
    "text": "proxy the proxy then looks at the",
    "start": "1222200",
    "end": "1225000"
  },
  {
    "text": "message and makes a decision whether we",
    "start": "1225000",
    "end": "1226960"
  },
  {
    "text": "should pass it or maybe drop it and if",
    "start": "1226960",
    "end": "1230039"
  },
  {
    "text": "the decision is passed then we're going",
    "start": "1230039",
    "end": "1232280"
  },
  {
    "text": "to send it back down but through the",
    "start": "1232280",
    "end": "1235640"
  },
  {
    "text": "same socket that the application is",
    "start": "1235640",
    "end": "1238120"
  },
  {
    "text": "using because that socket might have",
    "start": "1238120",
    "end": "1239960"
  },
  {
    "text": "some additional",
    "start": "1239960",
    "end": "1242400"
  },
  {
    "text": "setup um so um Can you spot uh maybe the",
    "start": "1242400",
    "end": "1246679"
  },
  {
    "text": "patterns that we saw the redirection",
    "start": "1246679",
    "end": "1248600"
  },
  {
    "text": "patterns that we saw",
    "start": "1248600",
    "end": "1250360"
  },
  {
    "text": "here well the first one is sent to local",
    "start": "1250360",
    "end": "1253880"
  },
  {
    "text": "where we our application sends a message",
    "start": "1253880",
    "end": "1257640"
  },
  {
    "text": "from a socket but is is received by our",
    "start": "1257640",
    "end": "1260640"
  },
  {
    "text": "proxy",
    "start": "1260640",
    "end": "1262400"
  },
  {
    "text": "process while the other one is sent to",
    "start": "1262400",
    "end": "1265120"
  },
  {
    "text": "ESS where we send from one socket but",
    "start": "1265120",
    "end": "1268120"
  },
  {
    "text": "the message actually ingresses into the",
    "start": "1268120",
    "end": "1270640"
  },
  {
    "text": "network stack from a different",
    "start": "1270640",
    "end": "1273960"
  },
  {
    "text": "socket another real life use case that",
    "start": "1273960",
    "end": "1276480"
  },
  {
    "text": "we know about comes from bance the",
    "start": "1276480",
    "end": "1278840"
  },
  {
    "text": "company behind Tik Tok um what they had",
    "start": "1278840",
    "end": "1282240"
  },
  {
    "text": "is uh a client server architecture where",
    "start": "1282240",
    "end": "1285559"
  },
  {
    "text": "the client and the server were",
    "start": "1285559",
    "end": "1287000"
  },
  {
    "text": "communicating over Unix",
    "start": "1287000",
    "end": "1289960"
  },
  {
    "text": "pockets and they needed to migrate it to",
    "start": "1289960",
    "end": "1293679"
  },
  {
    "text": "a setup where the server keeps running",
    "start": "1293679",
    "end": "1296880"
  },
  {
    "text": "on the host while the clients have been",
    "start": "1296880",
    "end": "1299400"
  },
  {
    "text": "moved into VMS and uh well it didn't",
    "start": "1299400",
    "end": "1303159"
  },
  {
    "text": "make sense for them to reite all the",
    "start": "1303159",
    "end": "1305360"
  },
  {
    "text": "clients uh to switch away from Unix",
    "start": "1305360",
    "end": "1309640"
  },
  {
    "text": "sockets because that was too much effort",
    "start": "1309640",
    "end": "1312880"
  },
  {
    "text": "uh so instead they decided to build a",
    "start": "1312880",
    "end": "1315679"
  },
  {
    "text": "bridge a proxy uh that would",
    "start": "1315679",
    "end": "1319320"
  },
  {
    "text": "Bridge the Unix socket clients with a",
    "start": "1319320",
    "end": "1321320"
  },
  {
    "text": "server that is now on host so has to use",
    "start": "1321320",
    "end": "1324240"
  },
  {
    "text": "some kind different uh Network protocol",
    "start": "1324240",
    "end": "1327400"
  },
  {
    "text": "to communicate with for that they used",
    "start": "1327400",
    "end": "1330480"
  },
  {
    "text": "sock map to offload the proxy work into",
    "start": "1330480",
    "end": "1334760"
  },
  {
    "text": "the kernel so that it has less",
    "start": "1334760",
    "end": "1339240"
  },
  {
    "text": "overhead then we actually iterated on",
    "start": "1339240",
    "end": "1341720"
  },
  {
    "text": "this",
    "start": "1341720",
    "end": "1342919"
  },
  {
    "text": "design and they even managed to avoid",
    "start": "1342919",
    "end": "1346320"
  },
  {
    "text": "the overhead of virtual networking vinck",
    "start": "1346320",
    "end": "1349720"
  },
  {
    "text": "networking from the guest VM to the host",
    "start": "1349720",
    "end": "1353159"
  },
  {
    "text": "by adding support for VX into the sock",
    "start": "1353159",
    "end": "1356080"
  },
  {
    "text": "map so using soine they managed to build",
    "start": "1356080",
    "end": "1359360"
  },
  {
    "text": "this exotic proxy that uh splices",
    "start": "1359360",
    "end": "1363480"
  },
  {
    "text": "together uni sockets and V",
    "start": "1363480",
    "end": "1365799"
  },
  {
    "text": "sockets and I think you can probably",
    "start": "1365799",
    "end": "1367919"
  },
  {
    "text": "spot the patterns here because it's just",
    "start": "1367919",
    "end": "1371360"
  },
  {
    "text": "Ingress to Ingress uh red Direction but",
    "start": "1371360",
    "end": "1374960"
  },
  {
    "text": "in both",
    "start": "1374960",
    "end": "1377440"
  },
  {
    "text": "ways",
    "start": "1377440",
    "end": "1379600"
  },
  {
    "text": "so if that fits your use case where do",
    "start": "1379600",
    "end": "1381760"
  },
  {
    "text": "you go to learn more uh I definitely",
    "start": "1381760",
    "end": "1384520"
  },
  {
    "text": "recommend the doc Commendation in the",
    "start": "1384520",
    "end": "1386440"
  },
  {
    "text": "cural uh it links to some test code that",
    "start": "1386440",
    "end": "1390279"
  },
  {
    "text": "shows more advanced uses of this",
    "start": "1390279",
    "end": "1392960"
  },
  {
    "text": "API uh you should also definitely check",
    "start": "1392960",
    "end": "1396480"
  },
  {
    "text": "out Daniel and Jones talked about how",
    "start": "1396480",
    "end": "1399159"
  },
  {
    "text": "you can use sock map together with",
    "start": "1399159",
    "end": "1401760"
  },
  {
    "text": "ktls um if you want a different point of",
    "start": "1401760",
    "end": "1404679"
  },
  {
    "text": "view at L7 proxy use case and check out",
    "start": "1404679",
    "end": "1408880"
  },
  {
    "text": "my colleague Marx work and then so map",
    "start": "1408880",
    "end": "1412640"
  },
  {
    "text": "can be used also for completely",
    "start": "1412640",
    "end": "1415080"
  },
  {
    "text": "different stuff uh steering connections",
    "start": "1415080",
    "end": "1417760"
  },
  {
    "text": "to sockets I have another talk about",
    "start": "1417760",
    "end": "1420039"
  },
  {
    "text": "that so if you're interested give it a",
    "start": "1420039",
    "end": "1423400"
  },
  {
    "text": "look um you can reach me out uh on",
    "start": "1423400",
    "end": "1426600"
  },
  {
    "text": "social media I'll be here till Friday",
    "start": "1426600",
    "end": "1429320"
  },
  {
    "text": "feel free to chat me up I also hang out",
    "start": "1429320",
    "end": "1431919"
  },
  {
    "text": "on some networking mail list and",
    "start": "1431919",
    "end": "1434960"
  },
  {
    "text": "slack the slid and code is on gith",
    "start": "1434960",
    "end": "1439240"
  },
  {
    "text": "so thank you for your",
    "start": "1439240",
    "end": "1442640"
  },
  {
    "text": "attention",
    "start": "1444159",
    "end": "1447159"
  }
]