[
  {
    "text": "hi everyone thanks for coming thanks for walking across the street in the rain and we're gonna get started my talk is a",
    "start": "380",
    "end": "11099"
  },
  {
    "text": "vision for API machinery and it's my vision and Who am I",
    "start": "11099",
    "end": "16730"
  },
  {
    "text": "since I've been here a long time but there's many people at this conference and maybe you don't know me i'm i'm",
    "start": "16730",
    "end": "23910"
  },
  {
    "text": "daniel Smith I've been working on kubernetes since before was open-source I work for Google there's some contact",
    "start": "23910",
    "end": "29550"
  },
  {
    "text": "information so although the the some of the details in this talk might just be",
    "start": "29550",
    "end": "35070"
  },
  {
    "text": "my vision in particular I think the broad strokes are shared by a lot of",
    "start": "35070",
    "end": "40200"
  },
  {
    "text": "people and so I hope you'll agree with me so I've divided this talk into three",
    "start": "40200",
    "end": "46860"
  },
  {
    "text": "sections and these are the most original sections you've ever seen I'm sure where we came from where we are and where we",
    "start": "46860",
    "end": "53489"
  },
  {
    "text": "should go as a project so so first where did we come from and I want to tell you",
    "start": "53489",
    "end": "59100"
  },
  {
    "text": "three stories here the first story is kubernetes up in to the right and I",
    "start": "59100",
    "end": "66390"
  },
  {
    "text": "don't even need to say too much about this story I think you all know that kubernetes has been incredibly",
    "start": "66390",
    "end": "71729"
  },
  {
    "text": "successful the amount of uptake has just been phenomenal there's something like",
    "start": "71729",
    "end": "77009"
  },
  {
    "text": "8,000 people here at this conference which is like 10x growth for every year",
    "start": "77009",
    "end": "82380"
  },
  {
    "text": "of the project or something ridiculous is really crazy so and and the reason I",
    "start": "82380",
    "end": "90810"
  },
  {
    "text": "tell I say that is just to sort of set the set the stage for everything that I'm going to say next and the next thing",
    "start": "90810",
    "end": "97500"
  },
  {
    "text": "I want to talk about is our is our code so I want to give you just a very very brief tour of where did our code for API",
    "start": "97500",
    "end": "104850"
  },
  {
    "text": "machinery how did it evolve how did where do we start what's our what is our trajectory so I",
    "start": "104850",
    "end": "111000"
  },
  {
    "text": "went and dug up some of the very earliest code for API machinery very",
    "start": "111000",
    "end": "116969"
  },
  {
    "text": "earliest like this is this is from a revision where I move things into an API package instead of having it scattered",
    "start": "116969",
    "end": "123990"
  },
  {
    "text": "all over so here's the here's the endpoints object you can see there's no header",
    "start": "123990",
    "end": "131180"
  },
  {
    "text": "there's a very brief comment there there's no real structure and below it I",
    "start": "131180",
    "end": "138120"
  },
  {
    "text": "have the function that parses it you don't have to understand this the point is is very simple there's not much here",
    "start": "138120",
    "end": "145860"
  },
  {
    "text": "there's no machinery really we had to write a parse X for every X in the system not very user-friendly not very",
    "start": "145860",
    "end": "155580"
  },
  {
    "text": "repeatable easy to make mistakes shortly after that I think it was probably me",
    "start": "155580",
    "end": "162540"
  },
  {
    "text": "we've got a JSON base here which is embedded into every type so we have some consistent things here we have a sort of",
    "start": "162540",
    "end": "168540"
  },
  {
    "text": "a type and an ID and a timestamp we've got JSON and the ML tags now and",
    "start": "168540",
    "end": "175890"
  },
  {
    "text": "and we're starting to get to the point where we could probably have some generic Marshall and Marshall functions",
    "start": "175890",
    "end": "181640"
  },
  {
    "text": "not long after that we have we've changed the name to type meta it's grown",
    "start": "181640",
    "end": "188250"
  },
  {
    "text": "more things got some comments not long",
    "start": "188250",
    "end": "193680"
  },
  {
    "text": "after that you can see it gets longer and longer it goes off the screen I didn't even pull up a recent one",
    "start": "193680",
    "end": "199140"
  },
  {
    "text": "because all that happens is it just gets longer and longer and add some prototypes and you can see now we've got",
    "start": "199140",
    "end": "204209"
  },
  {
    "text": "detailed documentation on every field the machinery like puts that out into the discovery documents so the point of",
    "start": "204209",
    "end": "212040"
  },
  {
    "text": "this is to is to show you that the trajectory is getting more complicated more sophisticated more features more",
    "start": "212040",
    "end": "218120"
  },
  {
    "text": "places for you to document your intent and the machinery does more things for",
    "start": "218120",
    "end": "223590"
  },
  {
    "text": "you like I'm not showing you the the code for serializing and deserializing because we could spend the whole talk on",
    "start": "223590",
    "end": "229410"
  },
  {
    "text": "that and that's not what you came here for the final story I want to tell you about where we've been is about sort of",
    "start": "229410",
    "end": "237450"
  },
  {
    "text": "conceptually the path that we've walked together as a community as an",
    "start": "237450",
    "end": "243180"
  },
  {
    "text": "open-source community scheduling cluster workloads and and I call this the abstraction treadmill so I",
    "start": "243180",
    "end": "250139"
  },
  {
    "text": "want to introduce the the how do I manage function which you you give it a thing and it spits out a way",
    "start": "250139",
    "end": "256400"
  },
  {
    "text": "you manage that thing before kubernetes came into existence the the industry I",
    "start": "256400",
    "end": "262490"
  },
  {
    "text": "would say knew how to manage at least two things computers can be managed as",
    "start": "262490",
    "end": "268699"
  },
  {
    "text": "VMS binaries and dependencies can be packaged into into containers it makes them easier to manage on kubernetes",
    "start": "268699",
    "end": "277790"
  },
  {
    "text": "first came out we had pods replica sets and and deployments as management",
    "start": "277790",
    "end": "283040"
  },
  {
    "text": "technologies although replica sets had a different name at the time I won't go",
    "start": "283040",
    "end": "288350"
  },
  {
    "text": "into that as kubernetes grew up we grew more management systems for four pods",
    "start": "288350",
    "end": "294620"
  },
  {
    "text": "and and and I think you all probably know like pods or collections of containers replicas sets are striping",
    "start": "294620",
    "end": "303530"
  },
  {
    "text": "pods across machines deployments take replica sets and let you add a staged",
    "start": "303530",
    "end": "308960"
  },
  {
    "text": "rollout but we've come up with more interesting ways of managing pods staple",
    "start": "308960",
    "end": "314870"
  },
  {
    "text": "sets that are particularly complicated and interesting and so you end up with a",
    "start": "314870",
    "end": "320990"
  },
  {
    "text": "question how do you manage your daemon sets your staple sets your deployments one way is Q control apply maybe you",
    "start": "320990",
    "end": "329780"
  },
  {
    "text": "have a CI CD system cute control apply works particularly well if there's not much in the way of parameterization you",
    "start": "329780",
    "end": "335900"
  },
  {
    "text": "have to pass to these things maybe if you're a little bit more complicated you have a CI CD system but if your workload",
    "start": "335900",
    "end": "344660"
  },
  {
    "text": "is even more complicated and you know something specific about it you can do better you can write a custom operator",
    "start": "344660",
    "end": "350410"
  },
  {
    "text": "and so then the obvious question is how",
    "start": "350410",
    "end": "355520"
  },
  {
    "text": "do you manage your custom operator and as you walk the the abstraction ladder",
    "start": "355520",
    "end": "362270"
  },
  {
    "text": "here your stuff is getting more and more abstract but that means the interface is getting simpler and simpler unless you're doing wrong but the interface",
    "start": "362270",
    "end": "368419"
  },
  {
    "text": "should be getting simpler and simpler and this means eventually you're going to get to something that you can manage with very few",
    "start": "368419",
    "end": "375480"
  },
  {
    "text": "templatized variable so you can you can basically manage it with the deployment use queue control apply and and you know",
    "start": "375480",
    "end": "382620"
  },
  {
    "text": "worst case you can layer it again so you end up with an operator operator and I want I want to say that that that's",
    "start": "382620",
    "end": "389040"
  },
  {
    "text": "that's where I stop so you know you don't need to get more complicated than that you don't need to get more abstract than that right an operator operators just",
    "start": "389040",
    "end": "396300"
  },
  {
    "text": "another operator so we can manage an arbitrary amount of technical",
    "start": "396300",
    "end": "402150"
  },
  {
    "text": "infrastructure with the concepts that we've developed we don't need to develop more concepts all we need is api's per",
    "start": "402150",
    "end": "409500"
  },
  {
    "text": "operators okay so with that thought in",
    "start": "409500",
    "end": "414960"
  },
  {
    "text": "mind let's talk about where we are as a project kubernetes the the prata and i'm",
    "start": "414960",
    "end": "421950"
  },
  {
    "text": "gonna compare and contrast kubernetes and api machinery which maybe you've never thought of before doings but bear",
    "start": "421950",
    "end": "428700"
  },
  {
    "text": "with me I think it'll be interesting so so kubernetes the the project has a consistent API and some people like to",
    "start": "428700",
    "end": "435150"
  },
  {
    "text": "say resource model because API by itself can be a confusing word sometimes people",
    "start": "435150",
    "end": "441390"
  },
  {
    "text": "think of individual API calls like a put or a get or if you're doing something",
    "start": "441390",
    "end": "446940"
  },
  {
    "text": "more custom with G RPC like you can just have arbitrary words so I'm not talking about that I'm talking about the the",
    "start": "446940",
    "end": "452220"
  },
  {
    "text": "resource model right like all of the resources the kubernetes exposes have",
    "start": "452220",
    "end": "457380"
  },
  {
    "text": "the same verbs the same words and by the way when I say resource I mean that the type I like to call individual items",
    "start": "457380",
    "end": "464250"
  },
  {
    "text": "objects just in case that's not clear so the kubernetes has a consistent resource",
    "start": "464250",
    "end": "470520"
  },
  {
    "text": "model it is compartmental and reusable and and this means like the the things",
    "start": "470520",
    "end": "476190"
  },
  {
    "text": "that we make API objects for the things that we make resources for are you there",
    "start": "476190",
    "end": "482370"
  },
  {
    "text": "there are little pieces of functionality that you can mix up and combine with with operators and controllers and higher level abstractions so API",
    "start": "482370",
    "end": "490170"
  },
  {
    "text": "machinery in contrast supports an extensible API and we have two primary",
    "start": "490170",
    "end": "495920"
  },
  {
    "text": "modes of extensions I'm going to argue one is types or you can you can add more resources to the system",
    "start": "495920",
    "end": "501690"
  },
  {
    "text": "the other one is policy you can you can have like admission web hooks or",
    "start": "501690",
    "end": "507409"
  },
  {
    "text": "authorization Web books so there's like two two primary dimensions of extensible",
    "start": "507409",
    "end": "513279"
  },
  {
    "text": "plugin hooks and API machinery so what's the difference between API machinery and",
    "start": "513279",
    "end": "519318"
  },
  {
    "text": "kubernetes I'm gonna do go through some compare and contrast slides real quick",
    "start": "519319",
    "end": "524750"
  },
  {
    "text": "so kubernetes and API machinery both have api's kubernetes api czar you know",
    "start": "524750",
    "end": "531740"
  },
  {
    "text": "and these are not complete lists these are just to give you the idea so the the real list for kubernetes api is is quite",
    "start": "531740",
    "end": "537800"
  },
  {
    "text": "long but deployment pod endpoints node like services those are those are kubernetes specific api's api machinery",
    "start": "537800",
    "end": "545329"
  },
  {
    "text": "api's are much more general like custom resource definition that's CRTs is how you the primary way of adding types of",
    "start": "545329",
    "end": "552050"
  },
  {
    "text": "the system API service the way of adding aggregated api is ordered addition",
    "start": "552050",
    "end": "557689"
  },
  {
    "text": "another way of adding types to the system namespace a container for other types other objects webhook",
    "start": "557689",
    "end": "564889"
  },
  {
    "text": "configuration object these are api machinery api's all of these things are served out of the binary cube api server",
    "start": "564889",
    "end": "572290"
  },
  {
    "text": "so operationally if you've ever tried to run kubernetes api server is one of the",
    "start": "572290",
    "end": "579110"
  },
  {
    "text": "binaries you run and it runs a collection of code some of it is kubernetes specific and some of it i'll",
    "start": "579110",
    "end": "584870"
  },
  {
    "text": "argue is api machinery specific the kubernetes code is like the all the",
    "start": "584870",
    "end": "589910"
  },
  {
    "text": "handlers for the built-in resources the the validation code right so so like node pod you know the the validation",
    "start": "589910",
    "end": "597050"
  },
  {
    "text": "code there's some especially interesting custom sub sub resource handlers like",
    "start": "597050",
    "end": "602420"
  },
  {
    "text": "the the logs employing or the proxy or the port forward like those those like",
    "start": "602420",
    "end": "608449"
  },
  {
    "text": "break glass ways of getting out of the kubernetes api model api sir api",
    "start": "608449",
    "end": "615230"
  },
  {
    "text": "machinery on the other hand we own the aggregator which is like the front door of api server the the thing that serves",
    "start": "615230",
    "end": "622069"
  },
  {
    "text": "the c or DS the policy hook calls the the entire framework around which you",
    "start": "622069",
    "end": "627680"
  },
  {
    "text": "insert your resource handlers into so we own large parts of it and and it's kind",
    "start": "627680",
    "end": "633769"
  },
  {
    "text": "of like mixed together everybody publishes their api api machinery",
    "start": "633769",
    "end": "639559"
  },
  {
    "text": "unfortunately publishes in the same places kubernetes but we also have some some meta stuff in",
    "start": "639559",
    "end": "646400"
  },
  {
    "text": "another place controllers the other aspect like all the business logic of",
    "start": "646400",
    "end": "651800"
  },
  {
    "text": "kubernetes goes into controllers so so kubernetes has the controllers that",
    "start": "651800",
    "end": "656960"
  },
  {
    "text": "enact your will for the deployments replica sets in points nodes you know",
    "start": "656960",
    "end": "662090"
  },
  {
    "text": "all ticket stuff in the API machinery also it has some controllers because we we own some facets of the system so the",
    "start": "662090",
    "end": "668360"
  },
  {
    "text": "two main ones are the the namespace lifecycle like delete a namespace it goes and cleans up all the objects that",
    "start": "668360",
    "end": "674390"
  },
  {
    "text": "are sitting in that namespace we also in the garbage collector so you delete the root of a tree of objects and it walks",
    "start": "674390",
    "end": "682250"
  },
  {
    "text": "them and deletes them for you so that that's API machinery owned and all of",
    "start": "682250",
    "end": "688220"
  },
  {
    "text": "this stuff is in controller manager in addition and and I've broken out here",
    "start": "688220",
    "end": "693650"
  },
  {
    "text": "like obviously the controllers I just mentioned live there but in addition like API machinery also owns the like",
    "start": "693650",
    "end": "700090"
  },
  {
    "text": "framework that you use to to write controllers so like there's this reflector that watches API changes and",
    "start": "700090",
    "end": "706880"
  },
  {
    "text": "former that like packages those up work you that what's you shard those across multiple threads all nearly all of the",
    "start": "706880",
    "end": "714530"
  },
  {
    "text": "controllers use this mechanism and and if I were splitting it up into even more",
    "start": "714530",
    "end": "720550"
  },
  {
    "text": "fine-grained detail I would say that some of the controllers in in the controller manager are clouds specific",
    "start": "720550",
    "end": "726910"
  },
  {
    "text": "but there's another effort working on on that problem so more abstractly I'll say",
    "start": "726910",
    "end": "734900"
  },
  {
    "text": "meta stuff is all API machinery and by meta I mean like stuff that is about other stuff so so like the the object",
    "start": "734900",
    "end": "743450"
  },
  {
    "text": "meta the the data that we put at the top of every object to help you introspect the system that's that's the format of",
    "start": "743450",
    "end": "750230"
  },
  {
    "text": "that is owned by API machinery the concept of optimistic concurrency that you can write and read objects in a safe",
    "start": "750230",
    "end": "758450"
  },
  {
    "text": "way even in the face of many other readers and writers that's that's API machinery concept owner references which",
    "start": "758450",
    "end": "765410"
  },
  {
    "text": "power the garbage collector the various wire formats for both for watch and for proto the",
    "start": "765410",
    "end": "772870"
  },
  {
    "text": "status their return format this is all stuff that API machinery owns on the other hand concrete stuff like like",
    "start": "772870",
    "end": "779800"
  },
  {
    "text": "specifically applied stuff is mostly kubernetes specific so liveness",
    "start": "779800",
    "end": "786070"
  },
  {
    "text": "readiness checks like that is not an API Machinery concept that's a very specific contract between cubelet and the pods",
    "start": "786070",
    "end": "793270"
  },
  {
    "text": "that is running the containers that is running service selectors yeah there's a listener I'm not gonna read it to you",
    "start": "793270",
    "end": "799060"
  },
  {
    "text": "API machinery I tried to think of like what are concrete decisions that API machinery has made one that came to mind",
    "start": "799060",
    "end": "805420"
  },
  {
    "text": "is the flat namespace hierarchy the fact that you don't have namespaces nested that's an example there might be a few",
    "start": "805420",
    "end": "811630"
  },
  {
    "text": "others but that's that was the clearest one that came to mind so on a somewhat",
    "start": "811630",
    "end": "817870"
  },
  {
    "text": "more sad note both API machinery and kubernetes have some operational issues how many of you here have ever tried to",
    "start": "817870",
    "end": "824560"
  },
  {
    "text": "upgrade your kubernetes installation okay so did you have a good experience",
    "start": "824560",
    "end": "830680"
  },
  {
    "text": "every time yeah it's tricky right API",
    "start": "830680",
    "end": "836590"
  },
  {
    "text": "machinery also has some some issues there's no coordination between replicas",
    "start": "836590",
    "end": "842740"
  },
  {
    "text": "of API server for example I'm sure especially as people add more series to the system we're gonna get requests to",
    "start": "842740",
    "end": "849520"
  },
  {
    "text": "scale to support larger numbers of objects and we've already gotten with these requests that's something that I",
    "start": "849520",
    "end": "857530"
  },
  {
    "text": "haven't seen discussed too much if at all is that these operational issues kind of have a cross product all right",
    "start": "857530",
    "end": "863890"
  },
  {
    "text": "so there's there's like there's concerns that are basically completely kubernetes like i want to add a field to my view on",
    "start": "863890",
    "end": "870340"
  },
  {
    "text": "resource there's concerns that are almost entirely api machinery i want to add a new proto format and these things",
    "start": "870340",
    "end": "878110"
  },
  {
    "text": "like since we roll out right now changes in both at the same time and lockstep",
    "start": "878110",
    "end": "883740"
  },
  {
    "text": "it's it's a it's hard to be sure that you've tested the the whole cross-product right yeah so in spite of",
    "start": "883740",
    "end": "893320"
  },
  {
    "text": "that kubernetes clearly has lots of uptake as I mentioned at the beginning okay so",
    "start": "893320",
    "end": "898730"
  },
  {
    "text": "forward-looking this this section I've also got three three parts what are our",
    "start": "898730",
    "end": "906150"
  },
  {
    "text": "goals is first so I think our goal is a",
    "start": "906150",
    "end": "911190"
  },
  {
    "text": "product as a project we've got two groups of people that we want to support",
    "start": "911190",
    "end": "916950"
  },
  {
    "text": "the kubernetes ecosystem and the kubernetes project and then I really want to argue that these are the this is",
    "start": "916950",
    "end": "921960"
  },
  {
    "text": "actually the same group of people or or that at least that we can we can work in",
    "start": "921960",
    "end": "927510"
  },
  {
    "text": "a way that it makes improvements for both groups at the same time so when I",
    "start": "927510",
    "end": "932730"
  },
  {
    "text": "think of the the ecosystem in particular I think interoperability is like the primary thing that you need for an",
    "start": "932730",
    "end": "938820"
  },
  {
    "text": "ecosystem because if your components can't talk to each other you don't really have an ecosystem you have a",
    "start": "938820",
    "end": "944610"
  },
  {
    "text": "bunch of islands for interoperability like there's there's client-side",
    "start": "944610",
    "end": "949890"
  },
  {
    "text": "interoperability like Cube control I I think I think cube control is if we do",
    "start": "949890",
    "end": "959070"
  },
  {
    "text": "things right you should only need to keep control as a command-line client and and I'm this also applies to",
    "start": "959070",
    "end": "966260"
  },
  {
    "text": "libraries for languages right now there's a bunch of functionality and queue control that you basically have to",
    "start": "966260",
    "end": "973440"
  },
  {
    "text": "rewrite if you want to do it from like Python or Java or something so I've only",
    "start": "973440",
    "end": "978990"
  },
  {
    "text": "written cube control down here but this this loop basically solves a problem for all of the the client code yeah we still",
    "start": "978990",
    "end": "987810"
  },
  {
    "text": "need some client-side constructs like the controller the framework II bits we've written for controllers but",
    "start": "987810",
    "end": "993960"
  },
  {
    "text": "basically like if stuff doesn't work for C or DS stuff in Q control it doesn't work for C or DS move something to the",
    "start": "993960",
    "end": "1000320"
  },
  {
    "text": "feature just to the server and just keep going until everything works seamlessly",
    "start": "1000320",
    "end": "1006320"
  },
  {
    "text": "for CR DS and I think phil has already started fill-in team are already working on that",
    "start": "1006320",
    "end": "1012410"
  },
  {
    "text": "so I'm not gonna focus on it too much the next part which I'll spend a little",
    "start": "1012410",
    "end": "1018110"
  },
  {
    "text": "bit more time on is server side up interoperability how many of you have",
    "start": "1018110",
    "end": "1024290"
  },
  {
    "text": "seen one of these before I'm sure none of you have a legacy system that you need to man but maybe you know somebody who does so",
    "start": "1024290",
    "end": "1031790"
  },
  {
    "text": "there's there's sort of two ways that you can hook up a legacy system with kubernetes like like a control plane",
    "start": "1031790",
    "end": "1038060"
  },
  {
    "text": "type legacy system like maybe it's your your network switches or who knows what it is so this first one is really the",
    "start": "1038060",
    "end": "1044360"
  },
  {
    "text": "recommended way of doing this it is it is really the Gibbs appliance the the",
    "start": "1044360",
    "end": "1051050"
  },
  {
    "text": "the primitives they expect and it lets you cleanly command your legacy system",
    "start": "1051050",
    "end": "1057680"
  },
  {
    "text": "the way it expects and this is this is like clients are here they read and",
    "start": "1057680",
    "end": "1062750"
  },
  {
    "text": "write to as you've made a C or D then you've also written a controller which",
    "start": "1062750",
    "end": "1068000"
  },
  {
    "text": "reads from the CR D it sends imperative commands over to your legacy system and",
    "start": "1068000",
    "end": "1073130"
  },
  {
    "text": "its got like a pull loop or maybe if your legacy system supports a pub/sub it can watch it or something like that",
    "start": "1073130",
    "end": "1078380"
  },
  {
    "text": "and it pulls data from your legacy system and writes the status back to this year D and this this if this looks",
    "start": "1078380",
    "end": "1084440"
  },
  {
    "text": "familiar it's basically exactly the operator pattern just applied to a legacy system so this is this is really",
    "start": "1084440",
    "end": "1092720"
  },
  {
    "text": "the way I recommend you hook up a legacy system to the urban at ease control plane I I think it's it's it's actually",
    "start": "1092720",
    "end": "1099020"
  },
  {
    "text": "one of the better stories for this because you can just write your control plant your controller separate you don't",
    "start": "1099020",
    "end": "1105350"
  },
  {
    "text": "have to recompile anything about API server so I recommend this however I've",
    "start": "1105350",
    "end": "1111170"
  },
  {
    "text": "had multiple people requests to bring their own API server and I you know I",
    "start": "1111170",
    "end": "1119090"
  },
  {
    "text": "can't recommend this but people want to do it so what is it what does it take to",
    "start": "1119090",
    "end": "1126200"
  },
  {
    "text": "to to hook up your API server as a source of truth basically the the design",
    "start": "1126200",
    "end": "1133190"
  },
  {
    "text": "looks like this so you've got the aggregator you make any API service and and you've got some sort of shim or",
    "start": "1133190",
    "end": "1139070"
  },
  {
    "text": "something between your legacy system and the aggregator so if we zoom in there",
    "start": "1139070",
    "end": "1144770"
  },
  {
    "text": "it's pretty easy to imagine how you can write a write a shim to take like a post command and turn it into a create on",
    "start": "1144770",
    "end": "1151010"
  },
  {
    "text": "your legacy system right and put get lists these are pretty easy it's less",
    "start": "1151010",
    "end": "1156980"
  },
  {
    "text": "easy to imagine how you really implement watch with the with the semantics and and so my my point of",
    "start": "1156980",
    "end": "1163520"
  },
  {
    "text": "putting this up here isn't that I think this is a great thing or that we should spend a lot of time supporting it my point is that it's not clear to people",
    "start": "1163520",
    "end": "1170510"
  },
  {
    "text": "how they would even do this right we haven't written down what exactly it means to be interoperable from a server",
    "start": "1170510",
    "end": "1176779"
  },
  {
    "text": "perspective is it required for people to implement watch I would like to say it is I think that that is a really",
    "start": "1176779",
    "end": "1183049"
  },
  {
    "text": "important part of the kubernetes api experience but it's hard and we haven't we haven't written down the",
    "start": "1183049",
    "end": "1189230"
  },
  {
    "text": "compatibility guidelines so that that's really my point in bringing this up is",
    "start": "1189230",
    "end": "1195460"
  },
  {
    "text": "it's hard to be interoperable and clear guidelines or the difference between your legacy systems looking like this or",
    "start": "1195460",
    "end": "1202429"
  },
  {
    "text": "like this so how can we support the kubernetes project at the same time I",
    "start": "1202429",
    "end": "1209210"
  },
  {
    "text": "actually think as there's a there's a drive to like do more and more API",
    "start": "1209210",
    "end": "1214820"
  },
  {
    "text": "societies I think we can really support both the kubernetes project specifically",
    "start": "1214820",
    "end": "1220220"
  },
  {
    "text": "and the ecosystem at large with many of the same actions so so clarifying our",
    "start": "1220220",
    "end": "1225980"
  },
  {
    "text": "boundaries conformance testing I think these are these are great uses of our",
    "start": "1225980",
    "end": "1232190"
  },
  {
    "text": "time even if we weren't considering the ecosystem at large and just the the kubernetes project itself okay so this",
    "start": "1232190",
    "end": "1241490"
  },
  {
    "text": "is the fun part is now I'm going to give you a series of ideas and increasingly",
    "start": "1241490",
    "end": "1247130"
  },
  {
    "text": "harebrained perhaps but I really think that many of these are composable like",
    "start": "1247130",
    "end": "1252529"
  },
  {
    "text": "we can pick and choose which ones we do and I think all of them drive at a better way of operating in general so",
    "start": "1252529",
    "end": "1260720"
  },
  {
    "text": "and and I might get a little technical here and talk a little bit about the the internals but this is gonna be far from",
    "start": "1260720",
    "end": "1267380"
  },
  {
    "text": "a complete proposal this is just to give you a flavor for the for the sort of things that I'd like to see us do in the",
    "start": "1267380",
    "end": "1272600"
  },
  {
    "text": "future so like I mentioned before today we run",
    "start": "1272600",
    "end": "1280909"
  },
  {
    "text": "the API server and it's got a lot of stuff built into it so client talks to",
    "start": "1280909",
    "end": "1286639"
  },
  {
    "text": "the aggregator which might forward to the built-in kubernetes kubernetes resource handlers and if it's not there",
    "start": "1286639",
    "end": "1294139"
  },
  {
    "text": "am i forward to the sierra tea api server but there's also the aggregator might send you off to the metrics api",
    "start": "1294139",
    "end": "1300619"
  },
  {
    "text": "server or some other API servers and that's through like network connections",
    "start": "1300619",
    "end": "1306190"
  },
  {
    "text": "what if we split this apart so we actually had a process that was owned by",
    "start": "1306309",
    "end": "1311869"
  },
  {
    "text": "a guy machinery and separate processes that were owned by the kubernetes project at large I I'm thinking in",
    "start": "1311869",
    "end": "1319369"
  },
  {
    "text": "particular of the the CBE we had the other day it'd be great to be great to",
    "start": "1319369",
    "end": "1325129"
  },
  {
    "text": "have been able to upgrade this aggregator front door without touching the rest of the system I have another",
    "start": "1325129",
    "end": "1331489"
  },
  {
    "text": "slide about that in a second this is just a sketch of a design it does",
    "start": "1331489",
    "end": "1337309"
  },
  {
    "text": "increase the operational complexity a little bit I personally think it's worth it you can come to the API machinery sig",
    "start": "1337309",
    "end": "1343489"
  },
  {
    "text": "List and argue with me if you don't but the the basic idea is like let's let's",
    "start": "1343489",
    "end": "1348679"
  },
  {
    "text": "move the the kubernetes built-ins let's move them out to a separate API server like maybe for performance we need to",
    "start": "1348679",
    "end": "1353809"
  },
  {
    "text": "use a UNIX domain socket or something like that to communicate with it and co-locate it with the front door here",
    "start": "1353809",
    "end": "1360169"
  },
  {
    "text": "but the basic idea is to clarify who is responsible for what component right",
    "start": "1360169",
    "end": "1365659"
  },
  {
    "text": "like I'd like a binary that API machinery owns and a binary that the the",
    "start": "1365659",
    "end": "1370820"
  },
  {
    "text": "kubernetes project owns right maybe maybe even most like like at that point",
    "start": "1370820",
    "end": "1377330"
  },
  {
    "text": "it's no longer like my personal problem but I think it would be nifty if that kubernetes owned process maybe they can",
    "start": "1377330",
    "end": "1384879"
  },
  {
    "text": "individual owners of api's and there could either switch their thing to a C or D or maybe they could operate a API",
    "start": "1384879",
    "end": "1391969"
  },
  {
    "text": "server binary that serves just that API so that so there's complete ownership of the component right this of course is",
    "start": "1391969",
    "end": "1399589"
  },
  {
    "text": "just as just a sketch it's I've got my little construction worker in the corner there to tell you it's not a detailed",
    "start": "1399589",
    "end": "1405109"
  },
  {
    "text": "design it's definitely not implemented you can even imagine moving the CRD process out also so the miners get even",
    "start": "1405109",
    "end": "1413450"
  },
  {
    "text": "simpler I depending on who is in your cluster and how isolated you want them",
    "start": "1413450",
    "end": "1419210"
  },
  {
    "text": "to be I could even imagine the C or D API server doing something crazy like working a new process for every for",
    "start": "1419210",
    "end": "1424760"
  },
  {
    "text": "every C or D I don't know interesting idea hopefully so the other",
    "start": "1424760",
    "end": "1431630"
  },
  {
    "text": "main binary in our system is a controller manager and today we have all",
    "start": "1431630",
    "end": "1437690"
  },
  {
    "text": "the controllers in one place and like there's some that are logically API machinery as I mentioned there's some that are logically kubernetes there's",
    "start": "1437690",
    "end": "1445250"
  },
  {
    "text": "many that are logically belonged at the cloud provider and there's already a",
    "start": "1445250",
    "end": "1450410"
  },
  {
    "text": "work-in-progress to split that out so we're soon going to have a controller manager and a cloud controller manager",
    "start": "1450410",
    "end": "1456440"
  },
  {
    "text": "but maybe we should think about having three you should run the API Machinery controllers in one and the built-in",
    "start": "1456440",
    "end": "1463460"
  },
  {
    "text": "controllers and the cloud provider controllers like three is not that many more than two so why not go even further",
    "start": "1463460",
    "end": "1472070"
  },
  {
    "text": "and just run every controller in its own binary and I've heard two reasons the",
    "start": "1472070",
    "end": "1477560"
  },
  {
    "text": "the one that I buy is on this slide like it's expensive every controller",
    "start": "1477560",
    "end": "1484310"
  },
  {
    "text": "basically caches every object in the system so it's very expensive to split them out",
    "start": "1484310",
    "end": "1490100"
  },
  {
    "text": "into into many separate binaries expensive at runtime in terms of RAM and CPU the other argument I've heard is",
    "start": "1490100",
    "end": "1497600"
  },
  {
    "text": "that it is more much more operationally complex to do this I don't actually personally buy that one I think like",
    "start": "1497600",
    "end": "1503720"
  },
  {
    "text": "we're software engineers this is what we do we can figure that one out the cost one is a little bit harder so let's",
    "start": "1503720",
    "end": "1514070"
  },
  {
    "text": "let's let's talk about more more crazy ideas I don't know maybe they're not that crazy I don't think they're crazy so what if we refactored our process I'm",
    "start": "1514070",
    "end": "1521930"
  },
  {
    "text": "I'm actually personally frustrated with the cadence of releases of the the kubernetes project at large both in",
    "start": "1521930",
    "end": "1529010"
  },
  {
    "text": "terms of like how long it takes to fix something in terms of people rush to get",
    "start": "1529010",
    "end": "1534980"
  },
  {
    "text": "in at the last minute because these releases happen like every three months or something so there's really not that many trains leaving the station",
    "start": "1534980",
    "end": "1541220"
  },
  {
    "text": "it's very important to get your feature on one eye I would really love and and",
    "start": "1541220",
    "end": "1546350"
  },
  {
    "text": "so those are those are like constraints faced by the kubernetes system right like not everybody wants to update their",
    "start": "1546350",
    "end": "1551360"
  },
  {
    "text": "their their cluster all the time so it's hard but we API machinery don't",
    "start": "1551360",
    "end": "1558530"
  },
  {
    "text": "necessarily need to face those constraints so if we have binary level components that we own why not release",
    "start": "1558530",
    "end": "1565580"
  },
  {
    "text": "them more frequently like every two weeks like right and and the when the",
    "start": "1565580",
    "end": "1571280"
  },
  {
    "text": "kubernetes project finishes their release cycle and they were ready to ship they pick the API machinery loop",
    "start": "1571280",
    "end": "1578660"
  },
  {
    "text": "release that's green and has the features they want right so I I think that that idea is really appealing to me",
    "start": "1578660",
    "end": "1585320"
  },
  {
    "text": "I know I am motivated personally when I can put a change in and and it goes",
    "start": "1585320",
    "end": "1591650"
  },
  {
    "text": "through the pipeline and it's live and I don't have to worry about it right the",
    "start": "1591650",
    "end": "1596660"
  },
  {
    "text": "the broader kubernetes release cycle makes that really hard like for some changes especially API changes you have",
    "start": "1596660",
    "end": "1602840"
  },
  {
    "text": "to it's not a very complicated change it's just got to be split among so many releases like you might be spending a",
    "start": "1602840",
    "end": "1608210"
  },
  {
    "text": "year on on on some field deprecation removal we've been so really what I'm",
    "start": "1608210",
    "end": "1616070"
  },
  {
    "text": "saying here is the kubernetes version is sort of one dimension of your cluster and the API machinery version is sort of",
    "start": "1616070",
    "end": "1622220"
  },
  {
    "text": "a different dimension and I think it's totally legitimate that you may want to change your schemas but not your",
    "start": "1622220",
    "end": "1628130"
  },
  {
    "text": "mechanism that is like get the new the new version of your kubernetes objects I",
    "start": "1628130",
    "end": "1633260"
  },
  {
    "text": "think it's also legitimate that you might want to change mechanisms but not your schemas like I want to get a",
    "start": "1633260",
    "end": "1639020"
  },
  {
    "text": "security fix but I don't want to change my pod semantics right especially the",
    "start": "1639020",
    "end": "1647800"
  },
  {
    "text": "recent CV we had an API machinery I didn't fill this out but above it by my",
    "start": "1647800",
    "end": "1652850"
  },
  {
    "text": "accounting it's ten days since less cv I didn't fill it out because I wasn't sure",
    "start": "1652850",
    "end": "1657890"
  },
  {
    "text": "there wasn't gonna be another one so yeah I think it would have been great to",
    "start": "1657890",
    "end": "1664010"
  },
  {
    "text": "to have that flaw located specifically in",
    "start": "1664010",
    "end": "1669610"
  },
  {
    "text": "one binary so you can get the fix for that without worrying that you're changing the semantic behavior of your",
    "start": "1669610",
    "end": "1676119"
  },
  {
    "text": "kubernetes resources right because those if those things are located and completely separate binaries you don't",
    "start": "1676119",
    "end": "1683440"
  },
  {
    "text": "worry about that and basically what I'm saying is there's different risk profiles for an API Machinery upgrade",
    "start": "1683440",
    "end": "1688659"
  },
  {
    "text": "versus a kubernetes api upgrade so",
    "start": "1688659",
    "end": "1694440"
  },
  {
    "text": "thinking even even more large-scale what",
    "start": "1694440",
    "end": "1701200"
  },
  {
    "text": "if we did a little social structure refactoring I can actually imagine a github org for API machinery maybe we",
    "start": "1701200",
    "end": "1708070"
  },
  {
    "text": "need to come up with a better name but I can I can actually man imagine making",
    "start": "1708070",
    "end": "1713739"
  },
  {
    "text": "larger changes to the kubernetes project that enable us to move faster and",
    "start": "1713739",
    "end": "1719279"
  },
  {
    "text": "encourage us to encourage us to build the right things there's there's a sort",
    "start": "1719279",
    "end": "1727210"
  },
  {
    "text": "of joke law out there that you end up shipping your org so if we want to ship",
    "start": "1727210",
    "end": "1732580"
  },
  {
    "text": "things in a certain way maybe we need to refactor our organization organization to to facilitate that all right so is",
    "start": "1732580",
    "end": "1743859"
  },
  {
    "text": "there any actual practical way to make these changes or is this a vision that",
    "start": "1743859",
    "end": "1749409"
  },
  {
    "text": "cannot be realized and I think there's sort of two approaches we could take to",
    "start": "1749409",
    "end": "1755230"
  },
  {
    "text": "to make progress towards some of these goals the first one and I'm sorry but",
    "start": "1755230",
    "end": "1761919"
  },
  {
    "text": "I'm mentioning some technical details about the kubernetes project we have",
    "start": "1761919",
    "end": "1767440"
  },
  {
    "text": "this staging directory the first one is we could focus on the staging directory this is this has been our way",
    "start": "1767440",
    "end": "1773350"
  },
  {
    "text": "classically of carving out pieces of the kubernetes project that we want to expose externally like the the client",
    "start": "1773350",
    "end": "1778989"
  },
  {
    "text": "library or API machinery or whatever so we could we could embrace that and add",
    "start": "1778989",
    "end": "1784149"
  },
  {
    "text": "even more things to it and I know staging is everybody's favorite",
    "start": "1784149",
    "end": "1789279"
  },
  {
    "text": "directory but I think there is maybe a better way which is basically",
    "start": "1789279",
    "end": "1796900"
  },
  {
    "text": "make a new repository set up the process that we want to have in that repository",
    "start": "1796900",
    "end": "1802200"
  },
  {
    "text": "and that includes like healthy development test release practices so basically get our release story in order",
    "start": "1802200",
    "end": "1808890"
  },
  {
    "text": "and then move a small piece of functionality over consume that in the",
    "start": "1808890",
    "end": "1814450"
  },
  {
    "text": "main repository and just keep repeating that process I think this is has a",
    "start": "1814450",
    "end": "1820750"
  },
  {
    "text": "better chance of eventually arriving at the release semantics that I would really like to see and repeat until",
    "start": "1820750",
    "end": "1827909"
  },
  {
    "text": "everybody's happy so it sounds like a lot of work is it worth it and I have",
    "start": "1827909",
    "end": "1837580"
  },
  {
    "text": "these are the factors that I that I think are relevant this is really a growth rate multiplier on the ecosystem",
    "start": "1837580",
    "end": "1844020"
  },
  {
    "text": "one could argue that the ecosystem has been having no problem with growing but I think it could be growing even faster",
    "start": "1844020",
    "end": "1849730"
  },
  {
    "text": "and healthier this gives architectural clarity for new entrants to the system right like you",
    "start": "1849730",
    "end": "1855789"
  },
  {
    "text": "come into kubernetes you read our Docs it's not clear like if you're reading a general principle a general fact about",
    "start": "1855789",
    "end": "1861039"
  },
  {
    "text": "all the resources or a specific thing about a specific resource if you dig into the code it's not clear if you're",
    "start": "1861039",
    "end": "1867779"
  },
  {
    "text": "writing some some code that or if you're modifying some code that needs to go to",
    "start": "1867779",
    "end": "1872830"
  },
  {
    "text": "an individual API author or to the API machinery sig often in our triage",
    "start": "1872830",
    "end": "1878140"
  },
  {
    "text": "meeting we're like this is not a ciggy I'm machinery this is like SEC architecture this is no because you're",
    "start": "1878140",
    "end": "1883450"
  },
  {
    "text": "you're changing there's no thing or this is the storage because you're adding this storied API so I think that that's",
    "start": "1883450",
    "end": "1889870"
  },
  {
    "text": "actually worth quite a lot and this is sort of tautologically true but if we do",
    "start": "1889870",
    "end": "1896350"
  },
  {
    "text": "this we end up with improved testing and confidence because usually it's impossible to do this without really",
    "start": "1896350",
    "end": "1902620"
  },
  {
    "text": "good tests that represent what kubernetes does with the API machinery outputs so and my personal opinion I",
    "start": "1902620",
    "end": "1910270"
  },
  {
    "text": "think our velocity in terms of features would be slower at first perhaps but",
    "start": "1910270",
    "end": "1915370"
  },
  {
    "text": "eventually get faster and it's it's definitely like it's not an it's not a",
    "start": "1915370",
    "end": "1920559"
  },
  {
    "text": "law it's not an important part of velocity but in terms of number commits lines of code changes I",
    "start": "1920559",
    "end": "1926809"
  },
  {
    "text": "think that's just definitely going to be faster this way I mean it's good in",
    "start": "1926809",
    "end": "1934070"
  },
  {
    "text": "terms of morale to be able to like make progress but I think the important",
    "start": "1934070",
    "end": "1940340"
  },
  {
    "text": "things are the other ones on this slide so this brings me to the end of my talk",
    "start": "1940340",
    "end": "1947169"
  },
  {
    "text": "if you like these ideas or you want to try and talk me out of it you can join the API machinery mailing",
    "start": "1947169",
    "end": "1955820"
  },
  {
    "text": "list come to our meeting I think we'll probably have to talk about some of this and the sega architecture mailing list",
    "start": "1955820",
    "end": "1963320"
  },
  {
    "text": "in a meeting so i would love to hear your feedback I think it'd be great to",
    "start": "1963320",
    "end": "1969799"
  },
  {
    "text": "I've heard from a lot of people today or at this conference that they like this",
    "start": "1969799",
    "end": "1975919"
  },
  {
    "text": "general these general ideas so I hope that you'll join me so thank you I think",
    "start": "1975919",
    "end": "1988010"
  },
  {
    "text": "I have a few minutes for questions so",
    "start": "1988010",
    "end": "1992740"
  },
  {
    "text": "what's the reason behind the flat namespace hierarchy yeah yeah for no",
    "start": "1995799",
    "end": "2002470"
  },
  {
    "text": "hierarchy that's actually a good question I you know I think that what decision might have been made while I",
    "start": "2002470",
    "end": "2008320"
  },
  {
    "text": "was out on paternity leave",
    "start": "2008320",
    "end": "2011158"
  },
  {
    "text": "Etsy doesn't have a query well it's a common TD doesn't have a query yeah Etsy",
    "start": "2017100",
    "end": "2022630"
  },
  {
    "text": "doesn't have an accurate Etsy doesn't have an aggregation mechanism but it actually is a directory structure so you",
    "start": "2022630",
    "end": "2029020"
  },
  {
    "text": "could like imagine nesting the namespace objects no I think I think it was",
    "start": "2029020",
    "end": "2034990"
  },
  {
    "text": "simplicity it is having a hierarchy makes things complicated and it wasn't",
    "start": "2034990",
    "end": "2040960"
  },
  {
    "text": "clear at the time whether that complexity would be a good idea or not",
    "start": "2040960",
    "end": "2046440"
  },
  {
    "text": "[Music] yes the question is does this pretty much reduce the API surface to API",
    "start": "2078739",
    "end": "2086398"
  },
  {
    "text": "server with the Sierra T implementation and just controllers and I think the answer is mostly there's a couple",
    "start": "2086399",
    "end": "2093269"
  },
  {
    "text": "exceptions which are some of the built-in resources do a few extra things that you can't do with a CRT and I'm not",
    "start": "2093269",
    "end": "2099960"
  },
  {
    "text": "sure it'd be a good idea to do with the Sierra T for example the service optic",
    "start": "2099960",
    "end": "2105239"
  },
  {
    "text": "will allocate an IP address for you that is not a thing that we would support",
    "start": "2105239",
    "end": "2110430"
  },
  {
    "text": "about maybe you could implement it with a web hook but I don't I don't know and I don't think you would want to yeah",
    "start": "2110430",
    "end": "2116369"
  },
  {
    "text": "David is shaking his head - yeah so I think yes and I think the kubernetes api",
    "start": "2116369",
    "end": "2122450"
  },
  {
    "text": "objects API resources that that don't support this yet should be changed like",
    "start": "2122450",
    "end": "2127739"
  },
  {
    "text": "maybe those were like specifically the surface with the IP allocation I think that was a poor architectural decision",
    "start": "2127739",
    "end": "2134009"
  },
  {
    "text": "at the beginning it should have been handled asynchronously by a controller",
    "start": "2134009",
    "end": "2139039"
  },
  {
    "text": "some resources I think it would be fairly easy but I think many races many",
    "start": "2144319",
    "end": "2149849"
  },
  {
    "text": "resources would require like care and attention which is basically why I",
    "start": "2149849",
    "end": "2155339"
  },
  {
    "text": "suggest leaving the the binary and we can make it the problem of the people",
    "start": "2155339",
    "end": "2160619"
  },
  {
    "text": "who own the API maybe they will see the benefits maybe not either way",
    "start": "2160619",
    "end": "2167299"
  },
  {
    "text": "because I think it's a great idea to move machinery and you guys refer to parts of always setting like machinery",
    "start": "2170210",
    "end": "2175340"
  },
  {
    "text": "can be its own project or but the thing",
    "start": "2175340",
    "end": "2181400"
  },
  {
    "text": "that scared me be glossed over it when you made that split you started redirecting clients too directly to",
    "start": "2181400",
    "end": "2187340"
  },
  {
    "text": "nodes to do things like proxy and exact",
    "start": "2187340",
    "end": "2191650"
  },
  {
    "text": "so you're talking about this this box particular this cluster of proxy service thing yeah so I I did gloss over it and",
    "start": "2197680",
    "end": "2207680"
  },
  {
    "text": "the question is that's a large change so really I think what I'd like is for so",
    "start": "2207680",
    "end": "2214160"
  },
  {
    "text": "so we had a major CVE and in the proxy code basically and these endpoints are",
    "start": "2214160",
    "end": "2221090"
  },
  {
    "text": "not really very natural ones for from a perspective of the the kubernetes resource model so and and I haven't",
    "start": "2221090",
    "end": "2228760"
  },
  {
    "text": "obviously I don't have a detailed design proposal but the basic sketch here the idea is the aggregators extended so that",
    "start": "2228760",
    "end": "2236360"
  },
  {
    "text": "we can register sub resources and redirect those to to external services",
    "start": "2236360",
    "end": "2244240"
  },
  {
    "text": "and it wouldn't have to be directing people directly to nodes like III see",
    "start": "2244240",
    "end": "2249380"
  },
  {
    "text": "like a like a parallel service like it like a like a control plane type service",
    "start": "2249380",
    "end": "2255770"
  },
  {
    "text": "that handles stage requests and then like basically take the code that's currently today an API server move it to",
    "start": "2255770",
    "end": "2262010"
  },
  {
    "text": "a separate service redirect clients to that service III and this is this is isolation reasons maybe I'm overtraining",
    "start": "2262010",
    "end": "2269480"
  },
  {
    "text": "on the CV we had but no no no yeah",
    "start": "2269480",
    "end": "2277520"
  },
  {
    "text": "that's not what I was not proposing yeah yeah yeah I want a different front door for the proxy code so we can run in a",
    "start": "2277520",
    "end": "2283640"
  },
  {
    "text": "different security domain cool",
    "start": "2283640",
    "end": "2289470"
  },
  {
    "text": "discussions about adding relationship little bit up between objects for an early sort of little gap so here you",
    "start": "2289470",
    "end": "2296190"
  },
  {
    "text": "know people for logic so the question is whether we've thought",
    "start": "2296190",
    "end": "2301890"
  },
  {
    "text": "about adding some relationship information to the to the metadata for objects we do have the controller",
    "start": "2301890",
    "end": "2307710"
  },
  {
    "text": "reference or the sorry the owner reference field and that's garbage collector uses that does that not serve",
    "start": "2307710",
    "end": "2314640"
  },
  {
    "text": "your needs yeah so so so the question is",
    "start": "2314640",
    "end": "2339440"
  },
  {
    "text": "right like we leave services to connect to their pods with label selectors could",
    "start": "2339440",
    "end": "2345510"
  },
  {
    "text": "we do that in some more general way I think actually we've discussed adding garbage collector like a new concept for",
    "start": "2345510",
    "end": "2352230"
  },
  {
    "text": "the garbage collector which lets you denote in your in your open API",
    "start": "2352230",
    "end": "2358710"
  },
  {
    "text": "discovery that this particular set of field is a reference to some other object so that would actually be really",
    "start": "2358710",
    "end": "2364619"
  },
  {
    "text": "powerful is like it'd be useful not just for the garbage collector but you could follow you could like navigate the",
    "start": "2364619",
    "end": "2369859"
  },
  {
    "text": "directory tree generically okay last probably last question",
    "start": "2369859",
    "end": "2376730"
  },
  {
    "text": "yeah I think the question is like why is it so hard to get a delete protection",
    "start": "2397660",
    "end": "2402880"
  },
  {
    "text": "and I think that's actually that's actually a good question and I think",
    "start": "2402880",
    "end": "2408619"
  },
  {
    "text": "there's maybe some simple things we could do to add one the final lasers are not ideal because once you once you've",
    "start": "2408619",
    "end": "2414859"
  },
  {
    "text": "entered the delete pipeline there's no return so I think there's actually change a relatively simple general",
    "start": "2414859",
    "end": "2423109"
  },
  {
    "text": "change that we can make to solve that problem please pipe up on the API",
    "start": "2423109",
    "end": "2428119"
  },
  {
    "text": "machinery mailing list yeah especially if you have time to help us okay thank",
    "start": "2428119",
    "end": "2433700"
  },
  {
    "text": "you everybody [Applause]",
    "start": "2433700",
    "end": "2439889"
  }
]