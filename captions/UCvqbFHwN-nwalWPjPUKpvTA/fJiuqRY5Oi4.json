[
  {
    "text": "all right I think it's about time to get started thank you everyone so much for coming to the very last session of what",
    "start": "4799",
    "end": "12960"
  },
  {
    "text": "I think has been an amazing week because everybody had a great week yeah",
    "start": "12960",
    "end": "18480"
  },
  {
    "text": "glad to hear it so you have come to a session about psyllium networking uh was",
    "start": "20460",
    "end": "26640"
  },
  {
    "text": "anybody at psylliumcon on Tuesday quite a few hands excellence and uh while you",
    "start": "26640",
    "end": "34020"
  },
  {
    "text": "were at that you might have heard us talking about psyllium mesh yes we have",
    "start": "34020",
    "end": "39480"
  },
  {
    "text": "lots of meshes so hopefully what I'm going to show today will clear up some of that mesh",
    "start": "39480",
    "end": "46379"
  },
  {
    "text": "all right so I think we all are familiar with the",
    "start": "46379",
    "end": "51719"
  },
  {
    "text": "idea of psyllium connecting pods within kubernetes cluster and a lot of you will",
    "start": "51719",
    "end": "57480"
  },
  {
    "text": "have come across cluster mesh which is how we connect multiple clusters together",
    "start": "57480",
    "end": "63480"
  },
  {
    "text": "and we've had a few features in psyllium for quite a while things like support",
    "start": "63480",
    "end": "68760"
  },
  {
    "text": "for external workloads kind of simplifying all of this into one",
    "start": "68760",
    "end": "75420"
  },
  {
    "text": "thing that we're calling psyllium mesh I'm going to explain to you how really we're using some very",
    "start": "75420",
    "end": "81600"
  },
  {
    "text": "kind of fundamental basic concepts within kubernetes to connect workloads",
    "start": "81600",
    "end": "87299"
  },
  {
    "text": "whether they're in the same cluster different clusters or not in kubernetes at all",
    "start": "87299",
    "end": "94520"
  },
  {
    "text": "so psyllium mesh what are the requirements we want to connect workloads in multiple clusters and also",
    "start": "94619",
    "end": "101640"
  },
  {
    "text": "in non-kubernetes environments we want to be able to connect in public cloud and in our own premises we want to be",
    "start": "101640",
    "end": "109439"
  },
  {
    "text": "secure which involves both Network policies and authenticated and encrypted",
    "start": "109439",
    "end": "115619"
  },
  {
    "text": "connections talk so it seems traditional that we",
    "start": "115619",
    "end": "122640"
  },
  {
    "text": "should have some Star Wars references I'm not sure it's exactly Canon but we're basically going along the lines of",
    "start": "122640",
    "end": "129599"
  },
  {
    "text": "force awakens right same services and endpoints are kubernetes",
    "start": "129599",
    "end": "136739"
  },
  {
    "text": "Concepts and I think you're all pretty familiar with Services maybe we should just have a",
    "start": "136739",
    "end": "143400"
  },
  {
    "text": "quick look at what we mean when we say endpoints so we're going to go to Jackie the",
    "start": "143400",
    "end": "148920"
  },
  {
    "text": "planet Jackie and bb-8 is going to be able to talk to the resistance service",
    "start": "148920",
    "end": "154140"
  },
  {
    "text": "on jakku I don't know if you remember the storyline in the force awakens but basically the resistance is the",
    "start": "154140",
    "end": "159959"
  },
  {
    "text": "organization run by General Leia against the first order who are the bad guys",
    "start": "159959",
    "end": "167900"
  },
  {
    "text": "so I have a kind cluster here that's called is that big enough we are okay at",
    "start": "168060",
    "end": "174000"
  },
  {
    "text": "the back a bit more let's go with that all right",
    "start": "174000",
    "end": "180360"
  },
  {
    "text": "all right so I have a kind cluster on Jackie and I currently have I think bb-8 is here",
    "start": "180360",
    "end": "188760"
  },
  {
    "text": "yeah and I'm going to deploy the resistance",
    "start": "188760",
    "end": "194120"
  },
  {
    "text": "in Jackie oh apply even",
    "start": "194640",
    "end": "201860"
  },
  {
    "text": "it's all live right you'll tell me when I do things wrong okay and that is going to create some",
    "start": "203159",
    "end": "210440"
  },
  {
    "text": "pods and we have a service okay and so if I exec into bb-8",
    "start": "210440",
    "end": "221459"
  },
  {
    "text": "I should be able to curl the resistance",
    "start": "221580",
    "end": "225799"
  },
  {
    "text": "[Music] um if we look at the pods and we look at their IP addresses",
    "start": "228110",
    "end": "235860"
  },
  {
    "text": "we can see there are three pods and they've got these IP addresses 65 203",
    "start": "235860",
    "end": "242280"
  },
  {
    "text": "47. and if we look at the kubernetes endpoints",
    "start": "242280",
    "end": "249959"
  },
  {
    "text": "we'll see here there's a service called resistance and it has those three IP",
    "start": "251580",
    "end": "257400"
  },
  {
    "text": "addresses 203 65 and 47 that corresponds",
    "start": "257400",
    "end": "263220"
  },
  {
    "text": "and we also have psyllium endpoints that represent the same",
    "start": "263220",
    "end": "268860"
  },
  {
    "text": "the same thing so this is psyllium's representation of those exact same endpoints we can see the same IP",
    "start": "268860",
    "end": "276300"
  },
  {
    "text": "addresses there 265 203 47. okay good",
    "start": "276300",
    "end": "283699"
  },
  {
    "text": "so the uh this is actually R2D2 if r2dc is in the",
    "start": "284160",
    "end": "291600"
  },
  {
    "text": "other uh cluster which we'll go to in a moment he can look up the resistance",
    "start": "291600",
    "end": "296880"
  },
  {
    "text": "service and get an IP address that was that is the same as the service and then that gets load balanced or that request",
    "start": "296880",
    "end": "303419"
  },
  {
    "text": "gets load balanced to one of those pod endpoints",
    "start": "303419",
    "end": "308639"
  },
  {
    "text": "and the fundamental thing in kubernetes I probably haven't shown you anything new",
    "start": "308639",
    "end": "313680"
  },
  {
    "text": "there psyllium knows about those services and it knows about those",
    "start": "313680",
    "end": "319620"
  },
  {
    "text": "endpoints so I showed you the uh the crd that corresponds to the endpoints we",
    "start": "319620",
    "end": "325320"
  },
  {
    "text": "could also exec into the psyllium pod and see the same endpoint list",
    "start": "325320",
    "end": "332580"
  },
  {
    "text": "and they would look like this it's just a basic connectivity inside a",
    "start": "332580",
    "end": "339479"
  },
  {
    "text": "cluster what do we need to do if we have multiple clusters so",
    "start": "339479",
    "end": "345360"
  },
  {
    "text": "the resistance base is in the planet I think it is a planet Dakar and we want to be able to have a",
    "start": "345360",
    "end": "352560"
  },
  {
    "text": "resistance service there as well so let's go to the uh",
    "start": "352560",
    "end": "358199"
  },
  {
    "text": "kind cluster which is on the car",
    "start": "358199",
    "end": "363919"
  },
  {
    "text": "and here is where R2D2 is I'm pretty sure",
    "start": "363919",
    "end": "369060"
  },
  {
    "text": "and okay a bad guy as well and we'll make sure there is some",
    "start": "369060",
    "end": "375900"
  },
  {
    "text": "resistance running here",
    "start": "375900",
    "end": "379100"
  },
  {
    "text": "okay and that's going to be very similar to what we just saw",
    "start": "382199",
    "end": "387900"
  },
  {
    "text": "now we have those two different clusters one thing that's different about what I just",
    "start": "387900",
    "end": "393660"
  },
  {
    "text": "deployed in Dakar is it's annotated to say it's a global Service",
    "start": "393660",
    "end": "399000"
  },
  {
    "text": "and this is all you need to do in cluster mesh to say that your services are Global they're accessible from all",
    "start": "399000",
    "end": "406560"
  },
  {
    "text": "of the Clusters in the cluster mesh I do need to go and make sure that's true in jakku as well so let's just",
    "start": "406560",
    "end": "414139"
  },
  {
    "text": "uncomment that I'm going to have to go back to the other cluster oops",
    "start": "415560",
    "end": "421500"
  },
  {
    "text": "and that was back on Jackie we just need to reapply that resistance",
    "start": "421500",
    "end": "428940"
  },
  {
    "text": "file okay so we've made a very small annotation on the service",
    "start": "428940",
    "end": "435000"
  },
  {
    "text": "but now from Jackie if bb-8 if I go back a bit I should find eventually there we",
    "start": "435000",
    "end": "441599"
  },
  {
    "text": "go if bb-8 sends a message to the resistance sometimes he's going to get a",
    "start": "441599",
    "end": "447419"
  },
  {
    "text": "response from the resistance on the base inject in the car and sometimes it will come from hopefully eventually yes the",
    "start": "447419",
    "end": "455639"
  },
  {
    "text": "original message that we saw on jacket so that service is accessible from",
    "start": "455639",
    "end": "461039"
  },
  {
    "text": "either cluster but we they're just Services still what about the endpoints well let's look at",
    "start": "461039",
    "end": "469740"
  },
  {
    "text": "the service first on Jackie the service looks exactly the same it's called resistance",
    "start": "469740",
    "end": "475380"
  },
  {
    "text": "let's look at the end points so from kubernetes point of view it's",
    "start": "475380",
    "end": "482759"
  },
  {
    "text": "still only got these three endpoints and those three are running in Jackie",
    "start": "482759",
    "end": "488940"
  },
  {
    "text": "that seems a little bit strange let's look at the psyllium endpoints",
    "start": "488940",
    "end": "494659"
  },
  {
    "text": "okay that also still only has the three endpoints what's going on let's have a",
    "start": "496319",
    "end": "502680"
  },
  {
    "text": "look at the uh what's happening inside the Pod inside the psyllium politium",
    "start": "502680",
    "end": "507720"
  },
  {
    "text": "agent so that's the name of this agent",
    "start": "507720",
    "end": "513740"
  },
  {
    "text": "oop I've actually applied that correctly um",
    "start": "514200",
    "end": "519959"
  },
  {
    "text": "so I'm going to exec into the psyllium pod and we can run commands directly on",
    "start": "519959",
    "end": "526020"
  },
  {
    "text": "psyllium here and let's look at the service list from inside the agent",
    "start": "526020",
    "end": "531540"
  },
  {
    "text": "okay here this is we can just check that this is",
    "start": "531540",
    "end": "537240"
  },
  {
    "text": "the right service that I'm looking at so the service for the resistance end in 64. that corresponds to this here",
    "start": "537240",
    "end": "544560"
  },
  {
    "text": "but from the psyllium agent's point of view we've actually got six endpoints",
    "start": "544560",
    "end": "549839"
  },
  {
    "text": "and three of them have this act two which is the second cluster in the",
    "start": "549839",
    "end": "555180"
  },
  {
    "text": "cluster mesh so it's a very simple change from",
    "start": "555180",
    "end": "560820"
  },
  {
    "text": "psyllium's point of view these are just IP addresses that have to be reachable",
    "start": "560820",
    "end": "566000"
  },
  {
    "text": "so bb-8 on jakku is able to reach",
    "start": "566459",
    "end": "572519"
  },
  {
    "text": "the service in either location if we went to Dakar",
    "start": "572519",
    "end": "578580"
  },
  {
    "text": "we could actually change things to have local service affinity I'm going to go back to",
    "start": "578580",
    "end": "585019"
  },
  {
    "text": "the planet Jakarta kind to car",
    "start": "585019",
    "end": "592279"
  },
  {
    "text": "and this is where R2D2 is hanging out and I need to just reapply this",
    "start": "592920",
    "end": "601080"
  },
  {
    "text": "change that I've just made so that it's local affinity resistance",
    "start": "601080",
    "end": "607320"
  },
  {
    "text": "car and now what that's going to mean is if R2D2 asks for assistance from the",
    "start": "607320",
    "end": "614700"
  },
  {
    "text": "resistance we're going to prefer getting a response from the local cluster",
    "start": "614700",
    "end": "620760"
  },
  {
    "text": "so let's do that let's see",
    "start": "620760",
    "end": "626459"
  },
  {
    "text": "called resistance these should always say that they come from the base on the car",
    "start": "626459",
    "end": "633240"
  },
  {
    "text": "and however many times we do this we'll never get load balance to the service on Jackie",
    "start": "633240",
    "end": "639120"
  },
  {
    "text": "so we have this ability to load balance across multiple clusters or to prefer local Services we could also prefer",
    "start": "639120",
    "end": "646140"
  },
  {
    "text": "remote Services which could be really handy if we're trying to turn down the service on the local cluster in favor of",
    "start": "646140",
    "end": "653880"
  },
  {
    "text": "moving to a different cluster okay so",
    "start": "653880",
    "end": "659820"
  },
  {
    "text": "from psyllium's point of view they're just end points really simple we don't need any sort of",
    "start": "659820",
    "end": "666660"
  },
  {
    "text": "special abstraction to understand how to load balance to these endpoints that are",
    "start": "666660",
    "end": "672300"
  },
  {
    "text": "not within the local cluster and we can extend that to",
    "start": "672300",
    "end": "678500"
  },
  {
    "text": "environments outside of kubernetes all we really need is an IP address that",
    "start": "678500",
    "end": "685920"
  },
  {
    "text": "we can route to so I don't know if you remember at the end",
    "start": "685920",
    "end": "691500"
  },
  {
    "text": "of the the force awakens we find that Luke Skywalker has been",
    "start": "691500",
    "end": "697260"
  },
  {
    "text": "hanging out on the planet Act 2 and act 2 is not a cluster he's pretty isolated it's a VM all on its own",
    "start": "697260",
    "end": "705420"
  },
  {
    "text": "okay so uh let's see act two if I look at my uh",
    "start": "705420",
    "end": "713399"
  },
  {
    "text": "docker containers we can see",
    "start": "713399",
    "end": "718680"
  },
  {
    "text": "there's the Dakar cluster there's the Jackie cluster I have a local registry",
    "start": "718680",
    "end": "723959"
  },
  {
    "text": "and here is a VM this is where Luke is hanging out",
    "start": "723959",
    "end": "729899"
  },
  {
    "text": "okay so how can we communicate with Luke",
    "start": "729899",
    "end": "735720"
  },
  {
    "text": "R2 actually knows how to communicate to Luke so",
    "start": "735720",
    "end": "740940"
  },
  {
    "text": "what we need is an endpoint on the uh in the car",
    "start": "740940",
    "end": "748380"
  },
  {
    "text": "that just happens to be external to the cluster",
    "start": "748380",
    "end": "753660"
  },
  {
    "text": "so I need to okay",
    "start": "753660",
    "end": "758760"
  },
  {
    "text": "make sure I'm in the right context I am in Dakar and",
    "start": "758760",
    "end": "764820"
  },
  {
    "text": "this is what I need to do I'm going to add and I need to actually run this inside",
    "start": "764820",
    "end": "771240"
  },
  {
    "text": "the psyllium pod so let me just get the pod",
    "start": "771240",
    "end": "777860"
  },
  {
    "text": "cute into there um",
    "start": "780120",
    "end": "786079"
  },
  {
    "text": "copy that too soon so this IP address here the 172 19 100.2 that's the VM",
    "start": "788579",
    "end": "796019"
  },
  {
    "text": "Act 2. so",
    "start": "796019",
    "end": "801420"
  },
  {
    "text": "okay so that's created an endpoint and if we look at those endpoints",
    "start": "801420",
    "end": "809399"
  },
  {
    "text": "they're quite hard to read because there's there's a lot of text going to come out here but we should be able to",
    "start": "809399",
    "end": "814500"
  },
  {
    "text": "see uh somewhere up here we'll find there it is",
    "start": "814500",
    "end": "820740"
  },
  {
    "text": "there's our Jedi Luke who happens to be hanging out",
    "start": "820740",
    "end": "825839"
  },
  {
    "text": "at this IP address R2D2 com route directly to that so he",
    "start": "825839",
    "end": "834180"
  },
  {
    "text": "needs a service we need a service we're not going to have a pod there's just going to be a service",
    "start": "834180",
    "end": "840000"
  },
  {
    "text": "that we're going to deploy",
    "start": "840000",
    "end": "843079"
  },
  {
    "text": "okay lick",
    "start": "848100",
    "end": "853519"
  },
  {
    "text": "okay so now we've got a service called leak and that should mean that if we exactly into R2-D2",
    "start": "854459",
    "end": "862860"
  },
  {
    "text": "we should be able to reach Luke",
    "start": "865860",
    "end": "871440"
  },
  {
    "text": "there we go great so we've been able to get a response from that workload that",
    "start": "871440",
    "end": "877740"
  },
  {
    "text": "happens to be running in a VM and all we had to do was make sure there was an endpoint associated with that",
    "start": "877740",
    "end": "884639"
  },
  {
    "text": "vm's IP address",
    "start": "884639",
    "end": "887899"
  },
  {
    "text": "okay and here's the slide version for if it didn't work and the uh if the demo Gods weren't smiling on us",
    "start": "889800",
    "end": "896160"
  },
  {
    "text": "so we basically just got a service with an IP address and that IP address",
    "start": "896160",
    "end": "901380"
  },
  {
    "text": "corresponds to an entering the service list in fact we could just look at that let's just make sure",
    "start": "901380",
    "end": "907740"
  },
  {
    "text": "let's get the silly and pod again and exec into that again",
    "start": "907740",
    "end": "916380"
  },
  {
    "text": "and we should be able to see service list",
    "start": "916380",
    "end": "921079"
  },
  {
    "text": "diet there's our service that corresponds to Luke right at the end there and it's load balancing to one",
    "start": "922380",
    "end": "929459"
  },
  {
    "text": "end point which is the VM",
    "start": "929459",
    "end": "933320"
  },
  {
    "text": "be really useful if you wanted to connect to a workload that's external",
    "start": "935820",
    "end": "940980"
  },
  {
    "text": "but what if you want to then migrate that workload from its VM you turn it",
    "start": "940980",
    "end": "947279"
  },
  {
    "text": "into a containerized workload and you want to start running it under kubernetes we could actually do something like this",
    "start": "947279",
    "end": "954000"
  },
  {
    "text": "where we also deploy it as a pod and we can start load balancing between the VM",
    "start": "954000",
    "end": "959760"
  },
  {
    "text": "and the Pod because it's just an endpoint doesn't matter from the services perspective or From psyllium's",
    "start": "959760",
    "end": "966600"
  },
  {
    "text": "perspective it's just an IP address so let's do that we have here",
    "start": "966600",
    "end": "973339"
  },
  {
    "text": "Jedi pod which is basically Luke he's going to say something slightly different this time if we",
    "start": "973339",
    "end": "980180"
  },
  {
    "text": "deploy that just make sure I'm in the right yes",
    "start": "980180",
    "end": "985040"
  },
  {
    "text": "so Jedi yaml so hopefully now if we are R2D2",
    "start": "985680",
    "end": "994740"
  },
  {
    "text": "and we talked to Luke",
    "start": "994740",
    "end": "999980"
  },
  {
    "text": "we sometimes see the message from the local pod and sometimes see the message from the VM",
    "start": "1000920",
    "end": "1007880"
  },
  {
    "text": "it's going to show me lots of it there we go so we've got load balancing between a workload on the VM and the",
    "start": "1007880",
    "end": "1013880"
  },
  {
    "text": "same a pod running the equivalent service locally in the cluster",
    "start": "1013880",
    "end": "1020079"
  },
  {
    "text": "one of the really nice things about doing this with psyllium is that we can protect those",
    "start": "1022220",
    "end": "1027860"
  },
  {
    "text": "flows the network flows between workloads whether they're external or",
    "start": "1027860",
    "end": "1033260"
  },
  {
    "text": "within clusters locally or remotely using network policies because the network policy doesn't care",
    "start": "1033260",
    "end": "1040819"
  },
  {
    "text": "whether the the IP address whether that endpoint is local or remote it just",
    "start": "1040819",
    "end": "1046880"
  },
  {
    "text": "knows it as an endpoint and the policy either applies or doesn't so we could do something like this where",
    "start": "1046880",
    "end": "1053780"
  },
  {
    "text": "we ensure that only resistance traffic can flow to that to those endpoints",
    "start": "1053780",
    "end": "1061880"
  },
  {
    "text": "so let's apply I've got a",
    "start": "1061880",
    "end": "1068299"
  },
  {
    "text": "cluster-wide Network policy we can",
    "start": "1068299",
    "end": "1073520"
  },
  {
    "text": "apply and that's going to make sure that only resistance",
    "start": "1073520",
    "end": "1078679"
  },
  {
    "text": "containers will be able to communicate with Luke so if I am",
    "start": "1078679",
    "end": "1085039"
  },
  {
    "text": "show you that I have both kylo and R2D2 here",
    "start": "1085039",
    "end": "1091039"
  },
  {
    "text": "and if I am acting as r2dt",
    "start": "1091039",
    "end": "1096260"
  },
  {
    "text": "you've already seen this um",
    "start": "1096260",
    "end": "1100840"
  },
  {
    "text": "we should be able to speak to leak it's all working fine but if I am a",
    "start": "1101660",
    "end": "1108140"
  },
  {
    "text": "member of the first order as kylo Ren is then that's just gonna",
    "start": "1108140",
    "end": "1116500"
  },
  {
    "text": "hang because the packet's been dropped due to network policy",
    "start": "1116960",
    "end": "1124480"
  },
  {
    "text": "okay so now I'm going to turn to a different demo that's been set up by Martinez my colleague Martinez",
    "start": "1125360",
    "end": "1132980"
  },
  {
    "text": "uh where he's actually got this running in uh partly in Google cloud and partly",
    "start": "1132980",
    "end": "1139400"
  },
  {
    "text": "in AWS and using this exact same kind of endpoint feature to",
    "start": "1139400",
    "end": "1146120"
  },
  {
    "text": "have client VMS on one side of what we're calling a mesh tunnel and a",
    "start": "1146120",
    "end": "1151640"
  },
  {
    "text": "workload an nginx pod running in a completely different cloud",
    "start": "1151640",
    "end": "1156980"
  },
  {
    "text": "so let's see if we can see this working okay",
    "start": "1156980",
    "end": "1164080"
  },
  {
    "text": "so here are my what's running in gcp we can see an",
    "start": "1164720",
    "end": "1171919"
  },
  {
    "text": "nginx service and I've got also a",
    "start": "1171919",
    "end": "1177380"
  },
  {
    "text": "AWS and if I look at the services there we can see again an nginx",
    "start": "1177380",
    "end": "1184880"
  },
  {
    "text": "service there but what we're gonna do we're going to communicate from",
    "start": "1184880",
    "end": "1190820"
  },
  {
    "text": "Google Cloud via this Transit VM to",
    "start": "1190820",
    "end": "1196340"
  },
  {
    "text": "the AWS cluster so we can't go directly from these VMS or we can't go directly to",
    "start": "1196340",
    "end": "1202940"
  },
  {
    "text": "this kubernetes cluster we're going to go via this VM and so that means that because this the",
    "start": "1202940",
    "end": "1210020"
  },
  {
    "text": "transit one is on Google Cloud we're going to use the service address on Google cloud from these two different",
    "start": "1210020",
    "end": "1216440"
  },
  {
    "text": "clients so that should mean",
    "start": "1216440",
    "end": "1223039"
  },
  {
    "text": "here's here's one of those VMS called good clients let me just get that IP address sorry",
    "start": "1223039",
    "end": "1230840"
  },
  {
    "text": "it's Google Cloud no it isn't that's AWS this one's Google Cloud",
    "start": "1230840",
    "end": "1237220"
  },
  {
    "text": "so I should be able to get an nginx response from that address and we do",
    "start": "1238340",
    "end": "1244520"
  },
  {
    "text": "whereas if I go to the bad client and make the same request that's timing",
    "start": "1244520",
    "end": "1252140"
  },
  {
    "text": "out and again that's because of network policy and we can also see that if I find the",
    "start": "1252140",
    "end": "1259520"
  },
  {
    "text": "right screen yeah we can see that in Hubble Hubble UI",
    "start": "1259520",
    "end": "1266059"
  },
  {
    "text": "and yeah there we go so we can see on the",
    "start": "1266059",
    "end": "1271100"
  },
  {
    "text": "left here it might be a little bit small let's try and make that a bit bigger we can see some",
    "start": "1271100",
    "end": "1278120"
  },
  {
    "text": "traffic from the good VM and the bad VM disappearing quite quickly now I've made",
    "start": "1278120",
    "end": "1283160"
  },
  {
    "text": "it so we can see the packets being dropped from the bad VM",
    "start": "1283160",
    "end": "1289640"
  },
  {
    "text": "okay that was amazing the demos all worked nothing broke",
    "start": "1289640",
    "end": "1296980"
  },
  {
    "text": "[Music] all right",
    "start": "1298190",
    "end": "1304280"
  },
  {
    "text": "so something that I haven't shown you there is this idea of authentication and encryption and I'll be honest that is",
    "start": "1304280",
    "end": "1310220"
  },
  {
    "text": "not quite ready to demo but we're making a lot of really good progress here you",
    "start": "1310220",
    "end": "1315559"
  },
  {
    "text": "may well have seen us talking about this next Generation Mutual authentication and encryption and what's Happening Here",
    "start": "1315559",
    "end": "1322880"
  },
  {
    "text": "is we use an identity management system spiffy is going to be the first integration here",
    "start": "1322880",
    "end": "1329179"
  },
  {
    "text": "to get identities for the workloads that are going to communicate",
    "start": "1329179",
    "end": "1334460"
  },
  {
    "text": "and those might be Services inside the cluster they could be external Services",
    "start": "1334460",
    "end": "1339740"
  },
  {
    "text": "doesn't really matter because again it's just about having an identity that we can associate with the endpoints that",
    "start": "1339740",
    "end": "1347419"
  },
  {
    "text": "back up a service so we have these certificates we do a handshake",
    "start": "1347419",
    "end": "1355100"
  },
  {
    "text": "at the start of the connection and then we can use that to to",
    "start": "1355100",
    "end": "1360140"
  },
  {
    "text": "um establish authentication inject the the subsequent certificates into the kernel",
    "start": "1360140",
    "end": "1367340"
  },
  {
    "text": "so that we can use that for encrypting the traffic between those workloads doesn't matter whether they're in",
    "start": "1367340",
    "end": "1374780"
  },
  {
    "text": "cluster or out of cluster you may have seen us talking about this in the context of service mesh but it's useful",
    "start": "1374780",
    "end": "1380659"
  },
  {
    "text": "for so many other scenarios as well so that's coming along quite nicely the",
    "start": "1380659",
    "end": "1387799"
  },
  {
    "text": "data path part of that is already in Cillian 1.13 and there's more worker",
    "start": "1387799",
    "end": "1393380"
  },
  {
    "text": "foot on the kind of configuration side the control plane side if you like",
    "start": "1393380",
    "end": "1399860"
  },
  {
    "text": "well it's going to be really nice about this is you can specify the requirements for authentication and encryption as",
    "start": "1399860",
    "end": "1407780"
  },
  {
    "text": "part of the network policy so again it's we're not having to create a whole load",
    "start": "1407780",
    "end": "1413000"
  },
  {
    "text": "of new abstractions we can use the existing abstractions but extend them to say not only am I going to allow traffic",
    "start": "1413000",
    "end": "1420799"
  },
  {
    "text": "between these endpoints and those endpoints but I'm going to require that communication to be",
    "start": "1420799",
    "end": "1427220"
  },
  {
    "text": "authenticated and optionally encrypted we do have users who actually want it to be",
    "start": "1427220",
    "end": "1434000"
  },
  {
    "text": "authenticated but not necessarily paying the encryption cost so that's another nice feature about this next-gen",
    "start": "1434000",
    "end": "1440780"
  },
  {
    "text": "approach being able to independently have the encryption or",
    "start": "1440780",
    "end": "1446740"
  },
  {
    "text": "optionally have the encryption I should say",
    "start": "1446740",
    "end": "1451059"
  },
  {
    "text": "last thing that you may want to well the last thing that I'm going to speak about that you might want to do in terms of",
    "start": "1452059",
    "end": "1458120"
  },
  {
    "text": "connecting to external workloads is the idea of",
    "start": "1458120",
    "end": "1463240"
  },
  {
    "text": "advertising those Services over bgp networks so your clusters could be",
    "start": "1463240",
    "end": "1468740"
  },
  {
    "text": "very distributed and using bgp to communicate between them",
    "start": "1468740",
    "end": "1474140"
  },
  {
    "text": "so for example when any member of the resistance wants to go to The Cantina in tacodana they probably have to use bgp",
    "start": "1474140",
    "end": "1481400"
  },
  {
    "text": "to get there so",
    "start": "1481400",
    "end": "1487340"
  },
  {
    "text": "wrapping up pretty quickly today but then I guess that means we'll have time for either questions or you get to go",
    "start": "1487340",
    "end": "1493820"
  },
  {
    "text": "home wrapping up what do we have we have the ability to connect workloads we've",
    "start": "1493820",
    "end": "1501679"
  },
  {
    "text": "always had the ability to connect workloads with psyllium but now those workloads could be in any kubernetes",
    "start": "1501679",
    "end": "1508400"
  },
  {
    "text": "cluster or in any non-kubernetes environment so long as we have an IP address that we can reach them through",
    "start": "1508400",
    "end": "1514580"
  },
  {
    "text": "that could be ipv4 it could be IPv6 that could be in your choice of public",
    "start": "1514580",
    "end": "1521900"
  },
  {
    "text": "Cloud it could be in an on-prem environment you've seen gcp and AWS",
    "start": "1521900",
    "end": "1527120"
  },
  {
    "text": "their communicating using psyllium mesh all secured with network policies and",
    "start": "1527120",
    "end": "1534679"
  },
  {
    "text": "the work is coming along very nicely to use that next-gen mtls to provide the",
    "start": "1534679",
    "end": "1541520"
  },
  {
    "text": "authentication handshake and the encryption between those workloads",
    "start": "1541520",
    "end": "1546620"
  },
  {
    "text": "thank you very much actually did anybody manage to pick up some books either my book or Natalia's books over the over",
    "start": "1546620",
    "end": "1553460"
  },
  {
    "text": "the course of the week excellent good if you didn't manage to pick up a physical copy of the books today you can download",
    "start": "1553460",
    "end": "1560539"
  },
  {
    "text": "them from isavailant.com and they'll give you some insights into the ebpf",
    "start": "1560539",
    "end": "1566120"
  },
  {
    "text": "technology that underpins psyllium the other thing I'll mention on this slide is isovalent.com Labs where there",
    "start": "1566120",
    "end": "1575539"
  },
  {
    "text": "are a lot of really great sandboxed Labs tutorials that can walk you through",
    "start": "1575539",
    "end": "1581659"
  },
  {
    "text": "things like the bgp connections that I didn't have time to show you today",
    "start": "1581659",
    "end": "1587140"
  },
  {
    "text": "and many many other aspects of psyllium",
    "start": "1587140",
    "end": "1592220"
  },
  {
    "text": "so with that thank you very much and I hope you've had a wonderful keep on",
    "start": "1592220",
    "end": "1598778"
  },
  {
    "text": "and I guess there is time for some questions if anybody has some I don't know how we're supposed to do",
    "start": "1607880",
    "end": "1613940"
  },
  {
    "text": "with them oh apparently there's microphones in the on the two sides",
    "start": "1613940",
    "end": "1621700"
  },
  {
    "text": "so my question goes regarding connecting to external service so you should you",
    "start": "1631000",
    "end": "1636559"
  },
  {
    "text": "have to create an endpoint using cilium is it possible to do it a native way with kubernetes endpoints",
    "start": "1636559",
    "end": "1644620"
  },
  {
    "text": "I'm going to say yes yes and no so there's the concept of an external workload where you might run a psyllium",
    "start": "1645500",
    "end": "1651980"
  },
  {
    "text": "agent co-located with that workload in which case yes",
    "start": "1651980",
    "end": "1658640"
  },
  {
    "text": "what I did there yeah I I configured it manually and I think that probably uh speaks to the experiment experimental",
    "start": "1658640",
    "end": "1666620"
  },
  {
    "text": "nature of this there will need to be some control plane to configure these endpoints in a more usable fashion yeah",
    "start": "1666620",
    "end": "1673220"
  },
  {
    "text": "okay thanks so supposing you have a service that is",
    "start": "1673220",
    "end": "1681140"
  },
  {
    "text": "redundantly served by two different clusters to the external world",
    "start": "1681140",
    "end": "1686419"
  },
  {
    "text": "let's say you want to expose these those such Services through ingresses in",
    "start": "1686419",
    "end": "1692240"
  },
  {
    "text": "either cluster uh could the the increases in either cluster connect",
    "start": "1692240",
    "end": "1698140"
  },
  {
    "text": "seamlessly to the back-end services in in both of them yes I could",
    "start": "1698140",
    "end": "1703400"
  },
  {
    "text": "um I'm pretty sure we have a blog post a nice surveillance blog post that shows",
    "start": "1703400",
    "end": "1709460"
  },
  {
    "text": "exactly that because I'm pretty sure I saw the diagram in the last few days and it has exactly that two different",
    "start": "1709460",
    "end": "1715760"
  },
  {
    "text": "ingresses into two different clusters and then kind of backed by",
    "start": "1715760",
    "end": "1721659"
  },
  {
    "text": "celium ingresses or could be any English is it transparent to the Ingress yes",
    "start": "1721659",
    "end": "1726679"
  },
  {
    "text": "transparent to the Ingress yeah thank you very much",
    "start": "1726679",
    "end": "1731500"
  },
  {
    "text": "yeah just to expand on that from the ingress's point of view it's just talking to a service so it doesn't",
    "start": "1732740",
    "end": "1738799"
  },
  {
    "text": "matter what the Ingress is it's just a service underneath again",
    "start": "1738799",
    "end": "1744500"
  },
  {
    "text": "kubernetes kind of fundamental concepts here",
    "start": "1744500",
    "end": "1749320"
  },
  {
    "text": "yeah so thanks for the presentation for uh really good stuff in the demo where you are setting setting up the end point",
    "start": "1750140",
    "end": "1758000"
  },
  {
    "text": "for local outside of the cluster and you had to set up services working this service be a headless one or it should",
    "start": "1758000",
    "end": "1764539"
  },
  {
    "text": "be a cluster IP service uh it could be headless yeah it doesn't",
    "start": "1764539",
    "end": "1771620"
  },
  {
    "text": "yeah don't think it matters I mean depends how you're going to address that service but",
    "start": "1771620",
    "end": "1777799"
  },
  {
    "text": "yeah I mean what uh like what we have tested before uh with the with the",
    "start": "1777799",
    "end": "1783440"
  },
  {
    "text": "cilium service mesh uh it it wasn't able to support uh services like to you know",
    "start": "1783440",
    "end": "1789860"
  },
  {
    "text": "split traffic and load balance between different uh ports behind the service between different Services when they're",
    "start": "1789860",
    "end": "1797059"
  },
  {
    "text": "when the service in front of them is headless so I'm surprised by that I'm I'm not",
    "start": "1797059",
    "end": "1803720"
  },
  {
    "text": "going to say I've tried it myself so I I'm not it seems a little surprising but we can",
    "start": "1803720",
    "end": "1809600"
  },
  {
    "text": "take that offline and figure out if there's a reason for that yeah sure okay yeah sorry",
    "start": "1809600",
    "end": "1816559"
  },
  {
    "text": "one over here so for the example with a look that was in outside in the VM I assume that in that example the boards",
    "start": "1816919",
    "end": "1824480"
  },
  {
    "text": "directly talk to that IP of the VM of look without even introducing the",
    "start": "1824480",
    "end": "1830899"
  },
  {
    "text": "the service now it was going via the service so",
    "start": "1830899",
    "end": "1836659"
  },
  {
    "text": "um but the IP was not directly routable to because there was nothing running in the VM of look right",
    "start": "1836659",
    "end": "1843260"
  },
  {
    "text": "so in the VM of Luke it's just the so we're we're trying to get to the I",
    "start": "1843260",
    "end": "1848600"
  },
  {
    "text": "wonder if I can find the diagram do do",
    "start": "1848600",
    "end": "1854260"
  },
  {
    "text": "yeah no let's go to the one where it's just here so Luke has Luke's VM or the",
    "start": "1854840",
    "end": "1860899"
  },
  {
    "text": "active VM has an IP address we put in place a service",
    "start": "1860899",
    "end": "1867260"
  },
  {
    "text": "so that R2D2 could address the I mean use DNS to look up the IP address of the",
    "start": "1867260",
    "end": "1874940"
  },
  {
    "text": "service and then the service was backed by the endpoint that happened to be external okay so the question is",
    "start": "1874940",
    "end": "1881740"
  },
  {
    "text": "beforehandi AP it could connect right oh I see if if he",
    "start": "1881740",
    "end": "1886940"
  },
  {
    "text": "knew directly the yes um if it's rootable from yeah",
    "start": "1886940",
    "end": "1893539"
  },
  {
    "text": "because we don't create anything special the VMS of the cluster or nodes are have",
    "start": "1893539",
    "end": "1900620"
  },
  {
    "text": "routes that yeah if it's if it's readable from that so now of course they are here and so the follow-up is could",
    "start": "1900620",
    "end": "1906679"
  },
  {
    "text": "we do something that the port of the service of look is not open so it's not reachable directly if",
    "start": "1906679",
    "end": "1913760"
  },
  {
    "text": "even if you know the AP so somehow in another city you made into",
    "start": "1913760",
    "end": "1919700"
  },
  {
    "text": "the VM of Luke advertises routes but it's not the kubernetes cluster would that be possible",
    "start": "1919700",
    "end": "1925580"
  },
  {
    "text": "and have an agent inside looks VM to to join the network yeah yeah so you",
    "start": "1925580",
    "end": "1933799"
  },
  {
    "text": "could uh I mean another approach would be and and we do have this in in",
    "start": "1933799",
    "end": "1939799"
  },
  {
    "text": "the external workloads um approach is to have a kind of",
    "start": "1939799",
    "end": "1946460"
  },
  {
    "text": "uh a kubernetes cluster running but without",
    "start": "1946460",
    "end": "1951740"
  },
  {
    "text": "the workloads necessarily being pods okay you know there could be like host Network okay accessible addresses okay",
    "start": "1951740",
    "end": "1958880"
  },
  {
    "text": "yeah thanks yeah hi so uh is the psyllium mesh new",
    "start": "1958880",
    "end": "1967460"
  },
  {
    "text": "feature or is it the name for all of these features you were presenting that's a really great question uh I",
    "start": "1967460",
    "end": "1974059"
  },
  {
    "text": "think we are experimenting with that name and seeing whether it I I think of it as covering",
    "start": "1974059",
    "end": "1981320"
  },
  {
    "text": "the whole thing because that's what Salim should be about should be about connecting all your workloads",
    "start": "1981320",
    "end": "1988100"
  },
  {
    "text": "without you having to think too hard about exactly what the mechanism is between them",
    "start": "1988100",
    "end": "1993140"
  },
  {
    "text": "um in order to implement what we're calling cilium mesh we're having to you know",
    "start": "1993140",
    "end": "1999080"
  },
  {
    "text": "there is a little bit of change in the ability to add those endpoints",
    "start": "1999080",
    "end": "2004539"
  },
  {
    "text": "and um you know still work in progress around the kind of control plane for",
    "start": "2004539",
    "end": "2009580"
  },
  {
    "text": "those external endpoints um but yeah to my mind meshes the whole thing but we'll we'll see what what",
    "start": "2009580",
    "end": "2015820"
  },
  {
    "text": "Settles thank you",
    "start": "2015820",
    "end": "2019679"
  }
]