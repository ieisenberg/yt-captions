[
  {
    "start": "0",
    "end": "57000"
  },
  {
    "text": "all right hello and welcome um I hope",
    "start": "320",
    "end": "4120"
  },
  {
    "text": "you guys have a great conference day so",
    "start": "4120",
    "end": "6080"
  },
  {
    "text": "far with me here on stage is pierangelo",
    "start": "6080",
    "end": "9120"
  },
  {
    "text": "dilato my name is Matias fenov we both",
    "start": "9120",
    "end": "11960"
  },
  {
    "text": "work at redet and we are actually",
    "start": "11960",
    "end": "13920"
  },
  {
    "text": "maintainers and contributors to K native",
    "start": "13920",
    "end": "16560"
  },
  {
    "text": "Eventing as well as Cloud events and you",
    "start": "16560",
    "end": "19160"
  },
  {
    "text": "will learn about both in this talk um",
    "start": "19160",
    "end": "21920"
  },
  {
    "text": "the title is declarative event driven",
    "start": "21920",
    "end": "23599"
  },
  {
    "text": "application patterns with conative",
    "start": "23599",
    "end": "25320"
  },
  {
    "text": "Eventing and now let's see what we have",
    "start": "25320",
    "end": "27240"
  },
  {
    "text": "on the agenda today so first we do a",
    "start": "27240",
    "end": "30119"
  },
  {
    "text": "little bit of an introduction of Eda and",
    "start": "30119",
    "end": "32640"
  },
  {
    "text": "how that actually relates to kubernetes",
    "start": "32640",
    "end": "34600"
  },
  {
    "text": "or what are the options there then the",
    "start": "34600",
    "end": "36760"
  },
  {
    "text": "biggest part of this presentation is",
    "start": "36760",
    "end": "38719"
  },
  {
    "text": "that you will learn about some practical",
    "start": "38719",
    "end": "40520"
  },
  {
    "text": "patterns um well established Eda",
    "start": "40520",
    "end": "42800"
  },
  {
    "text": "patterns implemented with conative",
    "start": "42800",
    "end": "44280"
  },
  {
    "text": "Eventing and also making usage of the",
    "start": "44280",
    "end": "46600"
  },
  {
    "text": "cncf cloud event standard that is um",
    "start": "46600",
    "end": "49800"
  },
  {
    "text": "part of Ka native Eventing and then at",
    "start": "49800",
    "end": "52000"
  },
  {
    "text": "the end hopefully we will have some time",
    "start": "52000",
    "end": "53640"
  },
  {
    "text": "for question and",
    "start": "53640",
    "end": "56718"
  },
  {
    "text": "answers okay first let's take a look at",
    "start": "57199",
    "end": "59680"
  },
  {
    "text": "the Basics Eda forgetting kubernetes for",
    "start": "59680",
    "end": "62680"
  },
  {
    "text": "a moment so Eda event driven",
    "start": "62680",
    "end": "65799"
  },
  {
    "text": "architectures um are basically a well",
    "start": "65799",
    "end": "68720"
  },
  {
    "text": "established thing it's a paradigm that",
    "start": "68720",
    "end": "71320"
  },
  {
    "text": "you find very often in solutions that uh",
    "start": "71320",
    "end": "74840"
  },
  {
    "text": "cater microservices so with events you",
    "start": "74840",
    "end": "77560"
  },
  {
    "text": "can then trigger a microservice or your",
    "start": "77560",
    "end": "79640"
  },
  {
    "text": "service application uh and it will then",
    "start": "79640",
    "end": "82280"
  },
  {
    "text": "either spin up in a Serv kind of",
    "start": "82280",
    "end": "84720"
  },
  {
    "text": "ecosystem whenever it's invoked or it",
    "start": "84720",
    "end": "86799"
  },
  {
    "text": "just runs there um yeah and usually Eda",
    "start": "86799",
    "end": "90640"
  },
  {
    "text": "systems they come with a set of typical",
    "start": "90640",
    "end": "93439"
  },
  {
    "text": "building blocks the first one is the",
    "start": "93439",
    "end": "95920"
  },
  {
    "text": "event producers those basically generate",
    "start": "95920",
    "end": "98000"
  },
  {
    "text": "the events like in our example here on",
    "start": "98000",
    "end": "99920"
  },
  {
    "text": "the slide deck we have um access to like",
    "start": "99920",
    "end": "102640"
  },
  {
    "text": "kfka mongod or whatsoever so now from",
    "start": "102640",
    "end": "106000"
  },
  {
    "text": "the event producer perspective there's",
    "start": "106000",
    "end": "108280"
  },
  {
    "text": "another interesting component that's uh",
    "start": "108280",
    "end": "110600"
  },
  {
    "text": "called the event router in the abstract",
    "start": "110600",
    "end": "113399"
  },
  {
    "text": "EDI principles so the event router is",
    "start": "113399",
    "end": "116079"
  },
  {
    "text": "basically used to ingest the events into",
    "start": "116079",
    "end": "118039"
  },
  {
    "text": "the system and to some degree all Eda",
    "start": "118039",
    "end": "121799"
  },
  {
    "text": "style um components have some sort of",
    "start": "121799",
    "end": "124000"
  },
  {
    "text": "filtering for routing like when a",
    "start": "124000",
    "end": "126240"
  },
  {
    "text": "certain filter is matching it is then",
    "start": "126240",
    "end": "128640"
  },
  {
    "text": "actually forwarding all of the events to",
    "start": "128640",
    "end": "131000"
  },
  {
    "text": "the particular consumers so and the",
    "start": "131000",
    "end": "133400"
  },
  {
    "text": "consumers are as they as the name",
    "start": "133400",
    "end": "135760"
  },
  {
    "text": "applies they received events and consume",
    "start": "135760",
    "end": "137720"
  },
  {
    "text": "them and you can basically um leverage",
    "start": "137720",
    "end": "141680"
  },
  {
    "text": "the uh incoming event payload and",
    "start": "141680",
    "end": "143879"
  },
  {
    "text": "process that and do uh even work with",
    "start": "143879",
    "end": "147120"
  },
  {
    "text": "return another event and then you could",
    "start": "147120",
    "end": "148680"
  },
  {
    "text": "basically uh trigger are the",
    "start": "148680",
    "end": "150560"
  },
  {
    "text": "microservices being involved and the",
    "start": "150560",
    "end": "152599"
  },
  {
    "text": "whole benefit of Eda TI applications is",
    "start": "152599",
    "end": "155280"
  },
  {
    "text": "that you have definitely a loose",
    "start": "155280",
    "end": "156599"
  },
  {
    "text": "coupling of your microservices you can",
    "start": "156599",
    "end": "158480"
  },
  {
    "text": "focus on interoperability system like",
    "start": "158480",
    "end": "161360"
  },
  {
    "text": "you have one team that owns one service",
    "start": "161360",
    "end": "164000"
  },
  {
    "text": "and another one is a different language",
    "start": "164000",
    "end": "165920"
  },
  {
    "text": "uh provided owned by a different team so",
    "start": "165920",
    "end": "168920"
  },
  {
    "text": "they are Loosely coupled there so now",
    "start": "168920",
    "end": "171200"
  },
  {
    "text": "let's take a look at K native Eventing K",
    "start": "171200",
    "end": "174319"
  },
  {
    "text": "native Eventing actually is a kubernetes",
    "start": "174319",
    "end": "177239"
  },
  {
    "text": "native infrastructure piece um",
    "start": "177239",
    "end": "180440"
  },
  {
    "text": "that actually ships a lot of these",
    "start": "180440",
    "end": "182239"
  },
  {
    "text": "building blocks that are from the",
    "start": "182239",
    "end": "183480"
  },
  {
    "text": "established Ed patterns and that is all",
    "start": "183480",
    "end": "185480"
  },
  {
    "text": "provided there by you under the covers",
    "start": "185480",
    "end": "188560"
  },
  {
    "text": "ctive Eventing uses the cloud event",
    "start": "188560",
    "end": "191000"
  },
  {
    "text": "standard as the format to exchange",
    "start": "191000",
    "end": "194360"
  },
  {
    "text": "events between the components are you",
    "start": "194360",
    "end": "196920"
  },
  {
    "text": "guys familiar with the cncf cloud events",
    "start": "196920",
    "end": "200560"
  },
  {
    "text": "specification just a handful okay so the",
    "start": "200560",
    "end": "203519"
  },
  {
    "text": "benefit about the cloud events is it is",
    "start": "203519",
    "end": "206400"
  },
  {
    "text": "not really a new API um for instance",
    "start": "206400",
    "end": "209439"
  },
  {
    "text": "talk about Kafka or",
    "start": "209439",
    "end": "211680"
  },
  {
    "text": "HTTP the body of the cloud event is",
    "start": "211680",
    "end": "214560"
  },
  {
    "text": "actually the payload and Cloud event in",
    "start": "214560",
    "end": "217239"
  },
  {
    "text": "addition introduces metad data like",
    "start": "217239",
    "end": "219400"
  },
  {
    "text": "specific headers that are defined so",
    "start": "219400",
    "end": "222439"
  },
  {
    "text": "Cloud events on their own are",
    "start": "222439",
    "end": "223680"
  },
  {
    "text": "interoperable and backwards compatible",
    "start": "223680",
    "end": "225560"
  },
  {
    "text": "so if you have an httt HTTP Cloud event",
    "start": "225560",
    "end": "229040"
  },
  {
    "text": "it's just some extra HTTP headers on",
    "start": "229040",
    "end": "231360"
  },
  {
    "text": "your request same with Kafka the",
    "start": "231360",
    "end": "234840"
  },
  {
    "text": "specification Kafka record is the data",
    "start": "234840",
    "end": "237519"
  },
  {
    "text": "and then you have Kafka headers as the",
    "start": "237519",
    "end": "239400"
  },
  {
    "text": "repres presentation of this metadata",
    "start": "239400",
    "end": "241959"
  },
  {
    "text": "yeah so we use cloud events behind the",
    "start": "241959",
    "end": "244480"
  },
  {
    "text": "scenes um our event producers are called",
    "start": "244480",
    "end": "247200"
  },
  {
    "text": "sources those are declarative crds we",
    "start": "247200",
    "end": "250200"
  },
  {
    "text": "also have the option that you can run",
    "start": "250200",
    "end": "251560"
  },
  {
    "text": "your own container and at the end of the",
    "start": "251560",
    "end": "253840"
  },
  {
    "text": "days these are adapters into third party",
    "start": "253840",
    "end": "255840"
  },
  {
    "text": "systems and then they uh read the native",
    "start": "255840",
    "end": "258840"
  },
  {
    "text": "format and they then ingest it to the",
    "start": "258840",
    "end": "261720"
  },
  {
    "text": "broker API that we have so the broker",
    "start": "261720",
    "end": "264680"
  },
  {
    "text": "acts as the router for events and as a",
    "start": "264680",
    "end": "267600"
  },
  {
    "text": "trigger API so the trigger is doing the",
    "start": "267600",
    "end": "269360"
  },
  {
    "text": "match",
    "start": "269360",
    "end": "270280"
  },
  {
    "text": "like you Define criteria on cloud event",
    "start": "270280",
    "end": "273960"
  },
  {
    "text": "um meta attributes or or metadata that",
    "start": "273960",
    "end": "276240"
  },
  {
    "text": "you have like I want to only process",
    "start": "276240",
    "end": "278520"
  },
  {
    "text": "event that comes from Source X or Y or Z",
    "start": "278520",
    "end": "281520"
  },
  {
    "text": "and whenever the trigger is being",
    "start": "281520",
    "end": "283160"
  },
  {
    "text": "applied and matching it will go to the",
    "start": "283160",
    "end": "285400"
  },
  {
    "text": "syns and the things any application that",
    "start": "285400",
    "end": "289360"
  },
  {
    "text": "works as a standard deployment with a",
    "start": "289360",
    "end": "291639"
  },
  {
    "text": "regular kubernetes service works fine",
    "start": "291639",
    "end": "294400"
  },
  {
    "text": "here um we also have building blocks in",
    "start": "294400",
    "end": "297800"
  },
  {
    "text": "ctive Eventing that offers preconfigured",
    "start": "297800",
    "end": "300720"
  },
  {
    "text": "things for instance we have a Kafka",
    "start": "300720",
    "end": "302199"
  },
  {
    "text": "think so the Kafka think when you use",
    "start": "302199",
    "end": "304520"
  },
  {
    "text": "that the incoming HTTP request Cloud",
    "start": "304520",
    "end": "307360"
  },
  {
    "text": "event is then persisted as a Kafka",
    "start": "307360",
    "end": "309639"
  },
  {
    "text": "native record with the proper header",
    "start": "309639",
    "end": "311680"
  },
  {
    "text": "sections there as I mentioned before in",
    "start": "311680",
    "end": "313919"
  },
  {
    "text": "a preconfigured topic that you can",
    "start": "313919",
    "end": "316400"
  },
  {
    "text": "declaratively set in inside of the",
    "start": "316400",
    "end": "319479"
  },
  {
    "text": "Manifest for the Kafka",
    "start": "319479",
    "end": "321440"
  },
  {
    "start": "321000",
    "end": "340000"
  },
  {
    "text": "think now we will learn a little bit of",
    "start": "321440",
    "end": "325840"
  },
  {
    "text": "patterns all right so this is the list",
    "start": "326680",
    "end": "329840"
  },
  {
    "text": "we want to show you uh some are like",
    "start": "329840",
    "end": "332440"
  },
  {
    "text": "simpler and we want to provide some",
    "start": "332440",
    "end": "334600"
  },
  {
    "text": "insights into them and some are like",
    "start": "334600",
    "end": "336240"
  },
  {
    "text": "more advanced and uh hopefully they you",
    "start": "336240",
    "end": "339160"
  },
  {
    "text": "will learn something new so the first",
    "start": "339160",
    "end": "341400"
  },
  {
    "start": "340000",
    "end": "466000"
  },
  {
    "text": "one is like deers syn and",
    "start": "341400",
    "end": "343680"
  },
  {
    "text": "retries this is a pattern that you",
    "start": "343680",
    "end": "347160"
  },
  {
    "text": "usually use for um when a consumer could",
    "start": "347160",
    "end": "351880"
  },
  {
    "text": "fail and usually is always the answer",
    "start": "351880",
    "end": "354440"
  },
  {
    "text": "and um you want to provide a also an",
    "start": "354440",
    "end": "358840"
  },
  {
    "text": "additional consumer that is going to",
    "start": "358840",
    "end": "360360"
  },
  {
    "text": "receive an event when the consumer the",
    "start": "360360",
    "end": "364080"
  },
  {
    "text": "original consumer fails um and the the",
    "start": "364080",
    "end": "368560"
  },
  {
    "text": "important part is that you need to think",
    "start": "368560",
    "end": "370080"
  },
  {
    "text": "about you know how many retries we are",
    "start": "370080",
    "end": "371919"
  },
  {
    "text": "going to to configure the system in a",
    "start": "371919",
    "end": "374280"
  },
  {
    "text": "way that we retry the requests that",
    "start": "374280",
    "end": "376479"
  },
  {
    "text": "failed to be sent to the consumer and",
    "start": "376479",
    "end": "380000"
  },
  {
    "text": "the the particular configuration and",
    "start": "380000",
    "end": "382319"
  },
  {
    "text": "numbers are based of course on the",
    "start": "382319",
    "end": "384919"
  },
  {
    "text": "service that is is receiving events and",
    "start": "384919",
    "end": "389160"
  },
  {
    "text": "and I long for example that service can",
    "start": "389160",
    "end": "391440"
  },
  {
    "text": "stay down uh if something fails uh in",
    "start": "391440",
    "end": "395800"
  },
  {
    "text": "this case we have the retry number the",
    "start": "395800",
    "end": "399560"
  },
  {
    "text": "backoff policy and back off delay and as",
    "start": "399560",
    "end": "401880"
  },
  {
    "text": "well as the DAT sync which is a",
    "start": "401880",
    "end": "403599"
  },
  {
    "text": "reference to in this case another broker",
    "start": "403599",
    "end": "405440"
  },
  {
    "text": "but you can reference any sort of other",
    "start": "405440",
    "end": "407599"
  },
  {
    "text": "sync or event consumer that Matias was",
    "start": "407599",
    "end": "409880"
  },
  {
    "text": "showing",
    "start": "409880",
    "end": "411000"
  },
  {
    "text": "earlier what's nice about Eventing also",
    "start": "411000",
    "end": "413800"
  },
  {
    "text": "is that when uh the request fails to be",
    "start": "413800",
    "end": "417560"
  },
  {
    "text": "consumed by a consumer um we also add",
    "start": "417560",
    "end": "421240"
  },
  {
    "text": "additional Cloud events adders to the",
    "start": "421240",
    "end": "423680"
  },
  {
    "text": "event itself which is in this case",
    "start": "423680",
    "end": "426039"
  },
  {
    "text": "conative error code conative error data",
    "start": "426039",
    "end": "428599"
  },
  {
    "text": "and conative error destination so that",
    "start": "428599",
    "end": "432039"
  },
  {
    "text": "um eventually you can uh basically get",
    "start": "432039",
    "end": "435840"
  },
  {
    "text": "the reason why that event was not",
    "start": "435840",
    "end": "438319"
  },
  {
    "text": "received by the consumer and hopefully",
    "start": "438319",
    "end": "441039"
  },
  {
    "text": "debug the",
    "start": "441039",
    "end": "442120"
  },
  {
    "text": "application or uh change the",
    "start": "442120",
    "end": "444840"
  },
  {
    "text": "configuration in this case we use sctive",
    "start": "444840",
    "end": "447160"
  },
  {
    "text": "error data is a b 64",
    "start": "447160",
    "end": "450039"
  },
  {
    "text": "uh uh value because the cloud events",
    "start": "450039",
    "end": "454479"
  },
  {
    "text": "specification basically has can only",
    "start": "454479",
    "end": "457800"
  },
  {
    "text": "contain as a value a subset of",
    "start": "457800",
    "end": "460039"
  },
  {
    "text": "characters so basally for Works in this",
    "start": "460039",
    "end": "463039"
  },
  {
    "text": "case and that's it for the first pattern",
    "start": "463039",
    "end": "465879"
  },
  {
    "text": "uh so we can check out the next",
    "start": "465879",
    "end": "469120"
  },
  {
    "start": "466000",
    "end": "603000"
  },
  {
    "text": "one thank you so the next one is um a",
    "start": "469120",
    "end": "473000"
  },
  {
    "text": "very old pattern it's actually first",
    "start": "473000",
    "end": "474639"
  },
  {
    "text": "time mentioned in the book from gor Hoy",
    "start": "474639",
    "end": "476840"
  },
  {
    "text": "Enterprise Integration patterns that's",
    "start": "476840",
    "end": "478440"
  },
  {
    "text": "like almost 21 years years old book and",
    "start": "478440",
    "end": "481759"
  },
  {
    "text": "yeah the benefit of this pattern is",
    "start": "481759",
    "end": "483199"
  },
  {
    "text": "actually avoiding large payloads which",
    "start": "483199",
    "end": "486159"
  },
  {
    "text": "in the ecosystem of the cloud means also",
    "start": "486159",
    "end": "488520"
  },
  {
    "text": "you will reduce your",
    "start": "488520",
    "end": "490319"
  },
  {
    "text": "savings the nice party is actually as",
    "start": "490319",
    "end": "493199"
  },
  {
    "text": "the link underneath provides this um",
    "start": "493199",
    "end": "496199"
  },
  {
    "text": "pattern is actually implemented and",
    "start": "496199",
    "end": "497919"
  },
  {
    "text": "specified with the cloud event",
    "start": "497919",
    "end": "499560"
  },
  {
    "text": "specification itself so what that means",
    "start": "499560",
    "end": "502440"
  },
  {
    "text": "you see the attribute data ref that's an",
    "start": "502440",
    "end": "505039"
  },
  {
    "text": "optional extension attribute that you",
    "start": "505039",
    "end": "506960"
  },
  {
    "text": "can have and you point a URL in this",
    "start": "506960",
    "end": "509039"
  },
  {
    "text": "case it's the web or HTP URL you can",
    "start": "509039",
    "end": "511520"
  },
  {
    "text": "have also like things that mean uh have",
    "start": "511520",
    "end": "514200"
  },
  {
    "text": "conjectural meaning within your own",
    "start": "514200",
    "end": "516000"
  },
  {
    "text": "organization the benefit really here",
    "start": "516000",
    "end": "518399"
  },
  {
    "text": "also is that if you just do not ship",
    "start": "518399",
    "end": "521000"
  },
  {
    "text": "around the data you may save some money",
    "start": "521000",
    "end": "524000"
  },
  {
    "text": "but you can also have uh some sort of",
    "start": "524000",
    "end": "526000"
  },
  {
    "text": "like fine grain access control because",
    "start": "526000",
    "end": "528360"
  },
  {
    "text": "you ensure when you only sent a",
    "start": "528360",
    "end": "530440"
  },
  {
    "text": "reference the consumer has to actually",
    "start": "530440",
    "end": "533160"
  },
  {
    "text": "get access to the system and read the",
    "start": "533160",
    "end": "535120"
  },
  {
    "text": "data so this is kind of a protection",
    "start": "535120",
    "end": "536920"
  },
  {
    "text": "mechanism built into the pattern there",
    "start": "536920",
    "end": "538519"
  },
  {
    "text": "as well it's not just for for Coast",
    "start": "538519",
    "end": "540320"
  },
  {
    "text": "savings but uh every consumer kind of",
    "start": "540320",
    "end": "543760"
  },
  {
    "text": "downloads the material the data behind",
    "start": "543760",
    "end": "546839"
  },
  {
    "text": "the firewall so to say and only can",
    "start": "546839",
    "end": "548800"
  },
  {
    "text": "access the data when he really has",
    "start": "548800",
    "end": "550920"
  },
  {
    "text": "permission to do",
    "start": "550920",
    "end": "552320"
  },
  {
    "text": "so the um this is an code snippet for a",
    "start": "552320",
    "end": "557240"
  },
  {
    "text": "producer that sets the",
    "start": "557240",
    "end": "559079"
  },
  {
    "text": "reference so today every Library that's",
    "start": "559079",
    "end": "562600"
  },
  {
    "text": "Cloud event compined should have some",
    "start": "562600",
    "end": "565000"
  },
  {
    "text": "set extension where you give the name of",
    "start": "565000",
    "end": "567079"
  },
  {
    "text": "the extension and then the value so it",
    "start": "567079",
    "end": "568839"
  },
  {
    "text": "will end up in a um in a HTTP header for",
    "start": "568839",
    "end": "571640"
  },
  {
    "text": "instance or in a Kafka header wherever",
    "start": "571640",
    "end": "573399"
  },
  {
    "text": "you use um in java Cloud event SDK we",
    "start": "573399",
    "end": "577680"
  },
  {
    "text": "have a Setter for this data ref already",
    "start": "577680",
    "end": "580120"
  },
  {
    "text": "and for the goang SDK there is a",
    "start": "580120",
    "end": "582040"
  },
  {
    "text": "proposed API that says like add data ref",
    "start": "582040",
    "end": "584600"
  },
  {
    "text": "extension the way the real difference is",
    "start": "584600",
    "end": "587000"
  },
  {
    "text": "here you upit the actual name of the",
    "start": "587000",
    "end": "588839"
  },
  {
    "text": "attribute so that's done for you by the",
    "start": "588839",
    "end": "590519"
  },
  {
    "text": "library and the consumption on the other",
    "start": "590519",
    "end": "592680"
  },
  {
    "text": "side is the same like you you basically",
    "start": "592680",
    "end": "594920"
  },
  {
    "text": "either get like the value of that header",
    "start": "594920",
    "end": "597079"
  },
  {
    "text": "for the data ref or you have some getter",
    "start": "597079",
    "end": "600120"
  },
  {
    "text": "mechanism for the um data ref extension",
    "start": "600120",
    "end": "604959"
  },
  {
    "start": "603000",
    "end": "682000"
  },
  {
    "text": "attribute okay next one even",
    "start": "607000",
    "end": "609839"
  },
  {
    "text": "transformation um for this one basically",
    "start": "609839",
    "end": "612839"
  },
  {
    "text": "the idea is that we want to uh the use",
    "start": "612839",
    "end": "615320"
  },
  {
    "text": "case for this parent is usually when we",
    "start": "615320",
    "end": "617920"
  },
  {
    "text": "want to provide some form of a different",
    "start": "617920",
    "end": "620320"
  },
  {
    "text": "form of the event the original event and",
    "start": "620320",
    "end": "622160"
  },
  {
    "text": "transform it into a different form um",
    "start": "622160",
    "end": "626120"
  },
  {
    "text": "for for example in this case we have uh",
    "start": "626120",
    "end": "629440"
  },
  {
    "text": "an order event in this case is like",
    "start": "629440",
    "end": "632160"
  },
  {
    "text": "using the V1 schema and we want to",
    "start": "632160",
    "end": "636120"
  },
  {
    "text": "transform it to a V2",
    "start": "636120",
    "end": "638120"
  },
  {
    "text": "schema uh and this is what a cloud",
    "start": "638120",
    "end": "641240"
  },
  {
    "text": "events in Jone looks like",
    "start": "641240",
    "end": "644279"
  },
  {
    "text": "um for uh with Eventing we we can",
    "start": "644279",
    "end": "647839"
  },
  {
    "text": "Eventing we can so we can specify",
    "start": "647839",
    "end": "649880"
  },
  {
    "text": "trigger filter on for example events",
    "start": "649880",
    "end": "652639"
  },
  {
    "text": "with the V1 data",
    "start": "652639",
    "end": "656079"
  },
  {
    "text": "schema and uh point to a function that",
    "start": "656079",
    "end": "660639"
  },
  {
    "text": "uh and the function looks like this one",
    "start": "660639",
    "end": "663040"
  },
  {
    "text": "uh you pretty much get an event you",
    "start": "663040",
    "end": "665560"
  },
  {
    "text": "transform it to a V2 and set the data",
    "start": "665560",
    "end": "669040"
  },
  {
    "text": "schema to V2 as well and you return it",
    "start": "669040",
    "end": "671720"
  },
  {
    "text": "that's all you need to do and we handle",
    "start": "671720",
    "end": "674680"
  },
  {
    "text": "the rest basically and combined with",
    "start": "674680",
    "end": "676920"
  },
  {
    "text": "also retries we also Endor you know",
    "start": "676920",
    "end": "679959"
  },
  {
    "text": "delivery",
    "start": "679959",
    "end": "681399"
  },
  {
    "text": "failures um okay that's the next one",
    "start": "681399",
    "end": "686680"
  },
  {
    "start": "682000",
    "end": "880000"
  },
  {
    "text": "sequence yeah the next pattern sequence",
    "start": "688079",
    "end": "690600"
  },
  {
    "text": "is actually a declarative component that",
    "start": "690600",
    "end": "692959"
  },
  {
    "text": "we have in K native um Eventing as a",
    "start": "692959",
    "end": "696200"
  },
  {
    "text": "provided type um it kind of is based on",
    "start": "696200",
    "end": "700639"
  },
  {
    "text": "the uh Enterprise Integration patterns",
    "start": "700639",
    "end": "702880"
  },
  {
    "text": "like for the orchestration and",
    "start": "702880",
    "end": "704720"
  },
  {
    "text": "choreography um it also may be that some",
    "start": "704720",
    "end": "708000"
  },
  {
    "text": "of you are familiar with AWS step",
    "start": "708000",
    "end": "709680"
  },
  {
    "text": "functions what it really allows you is",
    "start": "709680",
    "end": "712440"
  },
  {
    "text": "uh the sequence allows you like an in",
    "start": "712440",
    "end": "714040"
  },
  {
    "text": "ordered execution of a number of like",
    "start": "714040",
    "end": "716160"
  },
  {
    "text": "services that you are doing there so on",
    "start": "716160",
    "end": "718360"
  },
  {
    "text": "the right hand side here here we have",
    "start": "718360",
    "end": "719720"
  },
  {
    "text": "some um yeah overview of like some",
    "start": "719720",
    "end": "722279"
  },
  {
    "text": "function or service for ordering and",
    "start": "722279",
    "end": "724639"
  },
  {
    "text": "delivery first of all the sequence is",
    "start": "724639",
    "end": "727279"
  },
  {
    "text": "like the umbrella here um when it",
    "start": "727279",
    "end": "730639"
  },
  {
    "text": "receives the event it gives it to the",
    "start": "730639",
    "end": "732440"
  },
  {
    "text": "order um service the dead letter sync",
    "start": "732440",
    "end": "735920"
  },
  {
    "text": "and delivery guarantees that P Angelo",
    "start": "735920",
    "end": "738120"
  },
  {
    "text": "mentioned in the first pattern they are",
    "start": "738120",
    "end": "740079"
  },
  {
    "text": "also applying here if for instance the",
    "start": "740079",
    "end": "743040"
  },
  {
    "text": "event could not be delivered to that",
    "start": "743040",
    "end": "744839"
  },
  {
    "text": "order service you can configure um yeah",
    "start": "744839",
    "end": "748480"
  },
  {
    "text": "fallback mean like a dead letter Sy",
    "start": "748480",
    "end": "750480"
  },
  {
    "text": "basically here so when that is all cool",
    "start": "750480",
    "end": "753160"
  },
  {
    "text": "and the event goes back to the sequence",
    "start": "753160",
    "end": "755800"
  },
  {
    "text": "the orchestration process then goes and",
    "start": "755800",
    "end": "757639"
  },
  {
    "text": "it gives it to the the next service in",
    "start": "757639",
    "end": "759199"
  },
  {
    "text": "this case the delivery one",
    "start": "759199",
    "end": "761199"
  },
  {
    "text": "here on this slide you see the Manifest",
    "start": "761199",
    "end": "765320"
  },
  {
    "text": "the yaml for this one and I made a",
    "start": "765320",
    "end": "767519"
  },
  {
    "text": "particular difference here the first",
    "start": "767519",
    "end": "769160"
  },
  {
    "text": "reference is the first step so they are",
    "start": "769160",
    "end": "770920"
  },
  {
    "text": "in ordered executed you see here the API",
    "start": "770920",
    "end": "774000"
  },
  {
    "text": "version I have mentioned here serving K",
    "start": "774000",
    "end": "776360"
  },
  {
    "text": "native V1 so you can use K native",
    "start": "776360",
    "end": "778320"
  },
  {
    "text": "serving um crds there however ctive",
    "start": "778320",
    "end": "781279"
  },
  {
    "text": "Eventing I mentioned that um in the",
    "start": "781279",
    "end": "783399"
  },
  {
    "text": "beginning is not just required to run",
    "start": "783399",
    "end": "785959"
  },
  {
    "text": "with ctive serving it just works with",
    "start": "785959",
    "end": "787800"
  },
  {
    "text": "any kind of vanilla uh standard",
    "start": "787800",
    "end": "790560"
  },
  {
    "text": "kubernetes V1 services so it can be your",
    "start": "790560",
    "end": "794760"
  },
  {
    "text": "regular application that's here and then",
    "start": "794760",
    "end": "797519"
  },
  {
    "text": "finally the reply is basically the final",
    "start": "797519",
    "end": "800519"
  },
  {
    "text": "consumer of the whole chain of um",
    "start": "800519",
    "end": "804480"
  },
  {
    "text": "executed functions or Services here the",
    "start": "804480",
    "end": "807519"
  },
  {
    "text": "nice thing here is as well you can also",
    "start": "807519",
    "end": "810279"
  },
  {
    "text": "not just reference yet any another",
    "start": "810279",
    "end": "812079"
  },
  {
    "text": "service here you can also send the event",
    "start": "812079",
    "end": "815000"
  },
  {
    "text": "back to another sequence so you can have",
    "start": "815000",
    "end": "817199"
  },
  {
    "text": "like from one sequence to another to",
    "start": "817199",
    "end": "818920"
  },
  {
    "text": "another Etc that's all really up to",
    "start": "818920",
    "end": "821839"
  },
  {
    "text": "you so here's a little demo um so we",
    "start": "821839",
    "end": "825760"
  },
  {
    "text": "have one source uh that is generating an",
    "start": "825760",
    "end": "828240"
  },
  {
    "text": "event is a regular text message says",
    "start": "828240",
    "end": "830720"
  },
  {
    "text": "hello pares and that uh uses the HTP",
    "start": "830720",
    "end": "834000"
  },
  {
    "text": "call to the URL of the sequence so the",
    "start": "834000",
    "end": "837079"
  },
  {
    "text": "sequence crd similar to to the previous",
    "start": "837079",
    "end": "839639"
  },
  {
    "text": "one where you saw the Manifest has two",
    "start": "839639",
    "end": "842040"
  },
  {
    "text": "functions in ordered execution and",
    "start": "842040",
    "end": "844959"
  },
  {
    "text": "eventually it goes to a sync so the",
    "start": "844959",
    "end": "847279"
  },
  {
    "text": "first function that's being seen here is",
    "start": "847279",
    "end": "849240"
  },
  {
    "text": "a simple event",
    "start": "849240",
    "end": "851560"
  },
  {
    "text": "Transformer similar to what pangel",
    "start": "851560",
    "end": "853639"
  },
  {
    "text": "showed before we see what we received we",
    "start": "853639",
    "end": "856279"
  },
  {
    "text": "received a message saying hello parice",
    "start": "856279",
    "end": "858440"
  },
  {
    "text": "and it does a transformation it appends",
    "start": "858440",
    "end": "860240"
  },
  {
    "text": "something there in the second function",
    "start": "860240",
    "end": "862240"
  },
  {
    "text": "you see whatever the first one was",
    "start": "862240",
    "end": "864759"
  },
  {
    "text": "producing is received here and it",
    "start": "864759",
    "end": "866519"
  },
  {
    "text": "depends another one I handle by the",
    "start": "866519",
    "end": "868279"
  },
  {
    "text": "second and then the final just gets the",
    "start": "868279",
    "end": "871120"
  },
  {
    "text": "entire Cloud event because it was just",
    "start": "871120",
    "end": "872959"
  },
  {
    "text": "forwarded there so you get the transform",
    "start": "872959",
    "end": "875399"
  },
  {
    "text": "message here um from the",
    "start": "875399",
    "end": "880000"
  },
  {
    "start": "880000",
    "end": "1015000"
  },
  {
    "text": "thing all right the last one this this",
    "start": "881560",
    "end": "884560"
  },
  {
    "text": "probably needs it's on talk but we are",
    "start": "884560",
    "end": "886680"
  },
  {
    "text": "going to try our best the outbox pattern",
    "start": "886680",
    "end": "889600"
  },
  {
    "text": "is um a pattern that is",
    "start": "889600",
    "end": "892560"
  },
  {
    "text": "usually",
    "start": "892560",
    "end": "894160"
  },
  {
    "text": "um at least it should be used for when a",
    "start": "894160",
    "end": "898360"
  },
  {
    "text": "service us usually is writing some",
    "start": "898360",
    "end": "901160"
  },
  {
    "text": "records on on a database and then",
    "start": "901160",
    "end": "903240"
  },
  {
    "text": "eventually sends an event to a broker or",
    "start": "903240",
    "end": "905440"
  },
  {
    "text": "something else usually is very useful",
    "start": "905440",
    "end": "908320"
  },
  {
    "text": "when you have multiple steps and you",
    "start": "908320",
    "end": "911440"
  },
  {
    "text": "talk with different systems that are",
    "start": "911440",
    "end": "913440"
  },
  {
    "text": "like outside your",
    "start": "913440",
    "end": "915560"
  },
  {
    "text": "control and uh what's kind of uh clear",
    "start": "915560",
    "end": "919880"
  },
  {
    "text": "from this diagram is that like these two",
    "start": "919880",
    "end": "923040"
  },
  {
    "text": "operations are non transactional and",
    "start": "923040",
    "end": "925000"
  },
  {
    "text": "therefore um if for example send uh",
    "start": "925000",
    "end": "929000"
  },
  {
    "text": "fails for some reason the record in the",
    "start": "929000",
    "end": "931120"
  },
  {
    "text": "database is still written to it so um",
    "start": "931120",
    "end": "935480"
  },
  {
    "text": "and this you know of course here we have",
    "start": "935480",
    "end": "937360"
  },
  {
    "text": "only two operations but it can be",
    "start": "937360",
    "end": "939560"
  },
  {
    "text": "arbitrary number of",
    "start": "939560",
    "end": "941120"
  },
  {
    "text": "operations",
    "start": "941120",
    "end": "943079"
  },
  {
    "text": "um and so the this parent is like um",
    "start": "943079",
    "end": "947360"
  },
  {
    "text": "introducing a different",
    "start": "947360",
    "end": "950519"
  },
  {
    "text": "database uh design in a way we have two",
    "start": "950519",
    "end": "954079"
  },
  {
    "text": "tables for example in this case we have",
    "start": "954079",
    "end": "956240"
  },
  {
    "text": "order table and outbox table and and um",
    "start": "956240",
    "end": "961000"
  },
  {
    "text": "in in in this case what's uh the",
    "start": "961000",
    "end": "963839"
  },
  {
    "text": "solution is to in a transactional way",
    "start": "963839",
    "end": "967360"
  },
  {
    "text": "writing both to the order table and to",
    "start": "967360",
    "end": "970680"
  },
  {
    "text": "the outbox",
    "start": "970680",
    "end": "972440"
  },
  {
    "text": "table and uh attaching change data",
    "start": "972440",
    "end": "976199"
  },
  {
    "text": "capture system uh one very popular is",
    "start": "976199",
    "end": "979560"
  },
  {
    "text": "the buium and um the beum is also",
    "start": "979560",
    "end": "983720"
  },
  {
    "text": "integrated well with KTIV venting you",
    "start": "983720",
    "end": "985680"
  },
  {
    "text": "can just use a um you can point to a",
    "start": "985680",
    "end": "988920"
  },
  {
    "text": "broker and it's going to send events to",
    "start": "988920",
    "end": "991319"
  },
  {
    "text": "uh from your database to to a broker and",
    "start": "991319",
    "end": "995199"
  },
  {
    "text": "also it's ensuring that you have um The",
    "start": "995199",
    "end": "999440"
  },
  {
    "text": "Ordering of events is like the correct",
    "start": "999440",
    "end": "1001519"
  },
  {
    "text": "one as the service is writing them and",
    "start": "1001519",
    "end": "1004120"
  },
  {
    "text": "also simplifies what it calls event",
    "start": "1004120",
    "end": "1005959"
  },
  {
    "text": "sourcing on the consumer",
    "start": "1005959",
    "end": "1008360"
  },
  {
    "text": "side um hopefully this kind of give you",
    "start": "1008360",
    "end": "1012160"
  },
  {
    "text": "an overview and you want to learn more",
    "start": "1012160",
    "end": "1014279"
  },
  {
    "text": "about uh conative Eventing Cloud events",
    "start": "1014279",
    "end": "1017839"
  },
  {
    "start": "1015000",
    "end": "1501000"
  },
  {
    "text": "or anything given driven application",
    "start": "1017839",
    "end": "1020240"
  },
  {
    "text": "we're building them yeah we are going to",
    "start": "1020240",
    "end": "1022079"
  },
  {
    "text": "stay by the kive kiosk or red out Boot",
    "start": "1022079",
    "end": "1025400"
  },
  {
    "text": "and these are a few resources KET",
    "start": "1025400",
    "end": "1027480"
  },
  {
    "text": "website and a few blog posts as well as",
    "start": "1027480",
    "end": "1030160"
  },
  {
    "text": "gab pros and yeah uh if you have any",
    "start": "1030160",
    "end": "1034600"
  },
  {
    "text": "questions please ask",
    "start": "1034600",
    "end": "1037839"
  },
  {
    "text": "them one note um I saw bunch of you were",
    "start": "1037839",
    "end": "1040918"
  },
  {
    "text": "taking pictures from the diagrams and",
    "start": "1040919",
    "end": "1042520"
  },
  {
    "text": "patterns the slides are already uploaded",
    "start": "1042520",
    "end": "1045160"
  },
  {
    "text": "however we did some tweaks before this",
    "start": "1045160",
    "end": "1047839"
  },
  {
    "text": "after this you we will updated but it's",
    "start": "1047839",
    "end": "1049720"
  },
  {
    "text": "already like roughly there so you can",
    "start": "1049720",
    "end": "1051880"
  },
  {
    "text": "already find it on the sket website",
    "start": "1051880",
    "end": "1055960"
  },
  {
    "text": "[Applause]",
    "start": "1060820",
    "end": "1064059"
  },
  {
    "text": "whatsoever there's the first",
    "start": "1064760",
    "end": "1067600"
  },
  {
    "text": "question thank you one question I have",
    "start": "1067600",
    "end": "1070960"
  },
  {
    "text": "in in general all these patterns the",
    "start": "1070960",
    "end": "1072640"
  },
  {
    "text": "idea is the is far and forget so anybody",
    "start": "1072640",
    "end": "1076039"
  },
  {
    "text": "just submits this event and something",
    "start": "1076039",
    "end": "1079080"
  },
  {
    "text": "will happen that's probably the idea but",
    "start": "1079080",
    "end": "1082320"
  },
  {
    "text": "how how do you suggest to use when for",
    "start": "1082320",
    "end": "1084720"
  },
  {
    "text": "example the sender sends a malform event",
    "start": "1084720",
    "end": "1088400"
  },
  {
    "text": "for example we SP a schema on the",
    "start": "1088400",
    "end": "1090640"
  },
  {
    "text": "payload and the schema is not correct",
    "start": "1090640",
    "end": "1092880"
  },
  {
    "text": "it's missing Fields how is suppose the",
    "start": "1092880",
    "end": "1095320"
  },
  {
    "text": "sender to at least know something went",
    "start": "1095320",
    "end": "1098159"
  },
  {
    "text": "wrong so in C read the question yeah was",
    "start": "1098159",
    "end": "1101640"
  },
  {
    "text": "with a mic it was understood So in",
    "start": "1101640",
    "end": "1103679"
  },
  {
    "text": "theory um the cloud event itself also",
    "start": "1103679",
    "end": "1106760"
  },
  {
    "text": "has a reference for a data schema so so",
    "start": "1106760",
    "end": "1108880"
  },
  {
    "text": "if you send inproper data the receiver",
    "start": "1108880",
    "end": "1111480"
  },
  {
    "text": "endpoint should in theory do the",
    "start": "1111480",
    "end": "1113480"
  },
  {
    "text": "validation there however that's",
    "start": "1113480",
    "end": "1115480"
  },
  {
    "text": "currently not yet there but that's",
    "start": "1115480",
    "end": "1117400"
  },
  {
    "text": "something that would be the the theory",
    "start": "1117400",
    "end": "1119559"
  },
  {
    "text": "for for",
    "start": "1119559",
    "end": "1121000"
  },
  {
    "text": "this yeah he would receive a return code",
    "start": "1121000",
    "end": "1123480"
  },
  {
    "text": "error then like it is hdp the",
    "start": "1123480",
    "end": "1127360"
  },
  {
    "text": "kentor yeah when he accept it and sends",
    "start": "1129799",
    "end": "1132280"
  },
  {
    "text": "the wrong message it would receive back",
    "start": "1132280",
    "end": "1134200"
  },
  {
    "text": "the error code from the HTP sers it's",
    "start": "1134200",
    "end": "1136320"
  },
  {
    "text": "HTP applications at the end of the day",
    "start": "1136320",
    "end": "1138159"
  },
  {
    "text": "when you sender event you send an HTP",
    "start": "1138159",
    "end": "1140240"
  },
  {
    "text": "request against the conative",
    "start": "1140240",
    "end": "1143400"
  },
  {
    "text": "principles the bker would not accept the",
    "start": "1143880",
    "end": "1146559"
  },
  {
    "text": "request if the",
    "start": "1146559",
    "end": "1148720"
  },
  {
    "text": "schema it should be yes",
    "start": "1148720",
    "end": "1152159"
  },
  {
    "text": "yeah another question around the schema",
    "start": "1152159",
    "end": "1155600"
  },
  {
    "text": "validation itself is that actually",
    "start": "1155600",
    "end": "1157640"
  },
  {
    "text": "coming in because we've been looking at",
    "start": "1157640",
    "end": "1158679"
  },
  {
    "text": "using um Cloud events and what have you",
    "start": "1158679",
    "end": "1161559"
  },
  {
    "text": "and schema validation off the payload",
    "start": "1161559",
    "end": "1163640"
  },
  {
    "text": "itself is kind of one of the biggest not",
    "start": "1163640",
    "end": "1166120"
  },
  {
    "text": "going to say headaches but you know",
    "start": "1166120",
    "end": "1167799"
  },
  {
    "text": "challenges that that we've still got",
    "start": "1167799",
    "end": "1170000"
  },
  {
    "text": "that's right and the the schema",
    "start": "1170000",
    "end": "1171600"
  },
  {
    "text": "validation so to say is currently also",
    "start": "1171600",
    "end": "1173159"
  },
  {
    "text": "not really available in that sense but",
    "start": "1173159",
    "end": "1174640"
  },
  {
    "text": "it's a general theory so this is",
    "start": "1174640",
    "end": "1176240"
  },
  {
    "text": "currently not possible but that is",
    "start": "1176240",
    "end": "1178200"
  },
  {
    "text": "something that we have on our agenda",
    "start": "1178200",
    "end": "1179640"
  },
  {
    "text": "that we want to do you can end up also",
    "start": "1179640",
    "end": "1182400"
  },
  {
    "text": "in a very nightmare situation when you",
    "start": "1182400",
    "end": "1184080"
  },
  {
    "text": "have to do all of this one like you",
    "start": "1184080",
    "end": "1185360"
  },
  {
    "text": "would potentially also need a schema",
    "start": "1185360",
    "end": "1186679"
  },
  {
    "text": "registry Etc yeah yeah exactly",
    "start": "1186679",
    "end": "1189640"
  },
  {
    "text": "yeah one more is is the broker available",
    "start": "1189640",
    "end": "1193799"
  },
  {
    "text": "if you've got VMS outside of of",
    "start": "1193799",
    "end": "1195960"
  },
  {
    "text": "kubernetes we've we've got kind of a",
    "start": "1195960",
    "end": "1197559"
  },
  {
    "text": "hybrid approach you know got Legacy or",
    "start": "1197559",
    "end": "1199840"
  },
  {
    "text": "monoliths and we've got microservices",
    "start": "1199840",
    "end": "1202039"
  },
  {
    "text": "can can we get access to the broker yeah",
    "start": "1202039",
    "end": "1204400"
  },
  {
    "text": "the broker in the cluster is an instance",
    "start": "1204400",
    "end": "1207520"
  },
  {
    "text": "that has a reachable HTTP URL so you can",
    "start": "1207520",
    "end": "1211120"
  },
  {
    "text": "also expose that for instance if you run",
    "start": "1211120",
    "end": "1213159"
  },
  {
    "text": "on on open shift or something like that",
    "start": "1213159",
    "end": "1215400"
  },
  {
    "text": "you have me mechanism that the the",
    "start": "1215400",
    "end": "1217520"
  },
  {
    "text": "service there's a service like a",
    "start": "1217520",
    "end": "1219559"
  },
  {
    "text": "kubernetes service is is there and you",
    "start": "1219559",
    "end": "1222080"
  },
  {
    "text": "have a URL pass that points to the name",
    "start": "1222080",
    "end": "1224640"
  },
  {
    "text": "of the broker with that URL and you can",
    "start": "1224640",
    "end": "1226840"
  },
  {
    "text": "definitely expose your service to the",
    "start": "1226840",
    "end": "1229200"
  },
  {
    "text": "outbound world so you can install a kive",
    "start": "1229200",
    "end": "1233000"
  },
  {
    "text": "broker implementation on your cluster",
    "start": "1233000",
    "end": "1234919"
  },
  {
    "text": "exposed just at one endpoint and you can",
    "start": "1234919",
    "end": "1236960"
  },
  {
    "text": "do a curve from your machine against it",
    "start": "1236960",
    "end": "1238880"
  },
  {
    "text": "with a public URL so that just works",
    "start": "1238880",
    "end": "1241400"
  },
  {
    "text": "fine",
    "start": "1241400",
    "end": "1243760"
  },
  {
    "text": "yes hi uh May IC for the observability",
    "start": "1245440",
    "end": "1251440"
  },
  {
    "text": "tool for uh a handling application is",
    "start": "1251440",
    "end": "1255520"
  },
  {
    "text": "there any different inside this this",
    "start": "1255520",
    "end": "1258640"
  },
  {
    "text": "this pattern was all the same depends on",
    "start": "1258640",
    "end": "1262840"
  },
  {
    "text": "the",
    "start": "1262840",
    "end": "1263559"
  },
  {
    "text": "deand sorry what was the question uh for",
    "start": "1263559",
    "end": "1266280"
  },
  {
    "text": "the observability to like a tet or log",
    "start": "1266280",
    "end": "1271320"
  },
  {
    "text": "for arror handling in this pattern yeah",
    "start": "1271320",
    "end": "1275799"
  },
  {
    "text": "what's the question what can you do for",
    "start": "1275799",
    "end": "1277360"
  },
  {
    "text": "error handling yeah such like the M",
    "start": "1277360",
    "end": "1283200"
  },
  {
    "text": "broker break or the latest thing is too",
    "start": "1283200",
    "end": "1285960"
  },
  {
    "text": "heavy and we need to to improve",
    "start": "1285960",
    "end": "1289559"
  },
  {
    "text": "you mean when the broker itself has",
    "start": "1289559",
    "end": "1291600"
  },
  {
    "text": "problems in processing that one it would",
    "start": "1291600",
    "end": "1294120"
  },
  {
    "text": "return to a not ready state in the",
    "start": "1294120",
    "end": "1295919"
  },
  {
    "text": "kubernetes you would basic a broker is a",
    "start": "1295919",
    "end": "1297880"
  },
  {
    "text": "crd is is basically every broker that",
    "start": "1297880",
    "end": "1299880"
  },
  {
    "text": "you have in the system is a CR so it is",
    "start": "1299880",
    "end": "1302000"
  },
  {
    "text": "constantly reconciled and you would see",
    "start": "1302000",
    "end": "1303919"
  },
  {
    "text": "the state of the broker if that's ready",
    "start": "1303919",
    "end": "1305880"
  },
  {
    "text": "or not what we were showing here is more",
    "start": "1305880",
    "end": "1308080"
  },
  {
    "text": "application specifics like when you send",
    "start": "1308080",
    "end": "1310240"
  },
  {
    "text": "something and the broker is not able to",
    "start": "1310240",
    "end": "1312000"
  },
  {
    "text": "redistribute it it would eventually send",
    "start": "1312000",
    "end": "1314159"
  },
  {
    "text": "it to that letter sync and it would in",
    "start": "1314159",
    "end": "1316559"
  },
  {
    "text": "addition add extra metadata what and",
    "start": "1316559",
    "end": "1318919"
  },
  {
    "text": "showed so then in the dead letter think",
    "start": "1318919",
    "end": "1320880"
  },
  {
    "text": "when you fetch events from the dead",
    "start": "1320880",
    "end": "1322240"
  },
  {
    "text": "letter think you have these extra",
    "start": "1322240",
    "end": "1323480"
  },
  {
    "text": "headers and you can see why it was not",
    "start": "1323480",
    "end": "1325679"
  },
  {
    "text": "delivered but if your broker for",
    "start": "1325679",
    "end": "1327799"
  },
  {
    "text": "instance has problems because the Kafka",
    "start": "1327799",
    "end": "1329480"
  },
  {
    "text": "is going down the broker type as a CR",
    "start": "1329480",
    "end": "1332200"
  },
  {
    "text": "basically is no longer in the ready",
    "start": "1332200",
    "end": "1333799"
  },
  {
    "text": "state it would reconcil to Falls and you",
    "start": "1333799",
    "end": "1335679"
  },
  {
    "text": "would see that as a normal it's like any",
    "start": "1335679",
    "end": "1337559"
  },
  {
    "text": "other crd that you have in kubernetes if",
    "start": "1337559",
    "end": "1339880"
  },
  {
    "text": "they are no longer ready you you have",
    "start": "1339880",
    "end": "1341679"
  },
  {
    "text": "definitely mechanics to see this is",
    "start": "1341679",
    "end": "1343200"
  },
  {
    "text": "something wrong there yes but that's",
    "start": "1343200",
    "end": "1345440"
  },
  {
    "text": "more an operational aspect not just the",
    "start": "1345440",
    "end": "1347440"
  },
  {
    "text": "application specifics",
    "start": "1347440",
    "end": "1349840"
  },
  {
    "text": "okay",
    "start": "1349840",
    "end": "1352440"
  },
  {
    "text": "cool there's one more in the",
    "start": "1352919",
    "end": "1356840"
  },
  {
    "text": "back okay so uh my question is regarding",
    "start": "1360000",
    "end": "1363679"
  },
  {
    "text": "maybe not exactly about the patterns but",
    "start": "1363679",
    "end": "1366640"
  },
  {
    "text": "when I see flows of the data and the",
    "start": "1366640",
    "end": "1368640"
  },
  {
    "text": "sequences I wonder how Native Eventing",
    "start": "1368640",
    "end": "1373200"
  },
  {
    "text": "can help me visualize or monitor the",
    "start": "1373200",
    "end": "1376240"
  },
  {
    "text": "flow of the data to have a High overview",
    "start": "1376240",
    "end": "1379520"
  },
  {
    "text": "of what is the data how is the data is",
    "start": "1379520",
    "end": "1382320"
  },
  {
    "text": "flowing through the system and where are",
    "start": "1382320",
    "end": "1384120"
  },
  {
    "text": "the breaking",
    "start": "1384120",
    "end": "1386679"
  },
  {
    "text": "points you want to say pandro is",
    "start": "1388279",
    "end": "1392960"
  },
  {
    "text": "on yeah he he has very insights on",
    "start": "1393919",
    "end": "1397240"
  },
  {
    "text": "tracing and monitoring I give the mic",
    "start": "1397240",
    "end": "1399240"
  },
  {
    "text": "Tobe",
    "start": "1399240",
    "end": "1401600"
  },
  {
    "text": "him so so in terms of visualization what",
    "start": "1404400",
    "end": "1407919"
  },
  {
    "text": "we provide is",
    "start": "1407919",
    "end": "1409600"
  },
  {
    "text": "mostly uh every time you op through",
    "start": "1409600",
    "end": "1413679"
  },
  {
    "text": "broker sequence or channel uh we of",
    "start": "1413679",
    "end": "1417200"
  },
  {
    "text": "course",
    "start": "1417200",
    "end": "1418320"
  },
  {
    "text": "export uh tracing spans and what we",
    "start": "1418320",
    "end": "1422679"
  },
  {
    "text": "suggest for visualization is using",
    "start": "1422679",
    "end": "1424960"
  },
  {
    "text": "basically sending all these tracing span",
    "start": "1424960",
    "end": "1427000"
  },
  {
    "text": "to any sort of integration that supports",
    "start": "1427000",
    "end": "1429480"
  },
  {
    "text": "zip format usually open Telemetry or",
    "start": "1429480",
    "end": "1434200"
  },
  {
    "text": "um um Jagger for example and and visual",
    "start": "1434200",
    "end": "1438600"
  },
  {
    "text": "ize their you know the flow in the",
    "start": "1438600",
    "end": "1440880"
  },
  {
    "text": "system that's I think the",
    "start": "1440880",
    "end": "1443279"
  },
  {
    "text": "easiest",
    "start": "1443279",
    "end": "1444960"
  },
  {
    "text": "uh but of course you can also",
    "start": "1444960",
    "end": "1447480"
  },
  {
    "text": "technically use the we we haven't really",
    "start": "1447480",
    "end": "1450960"
  },
  {
    "text": "built that but you know we don't have a",
    "start": "1450960",
    "end": "1452679"
  },
  {
    "text": "UI but technically for example in open",
    "start": "1452679",
    "end": "1455799"
  },
  {
    "text": "shift we have that part where we",
    "start": "1455799",
    "end": "1458159"
  },
  {
    "text": "visualize these CRS into a topology view",
    "start": "1458159",
    "end": "1462720"
  },
  {
    "text": "pretty much but it's not you know in the",
    "start": "1462720",
    "end": "1467200"
  },
  {
    "text": "kubernetes space because technically as",
    "start": "1467200",
    "end": "1469080"
  },
  {
    "text": "a community we don't have expertise into",
    "start": "1469080",
    "end": "1471640"
  },
  {
    "text": "UI development you know so maybe join",
    "start": "1471640",
    "end": "1476320"
  },
  {
    "text": "us any more",
    "start": "1476799",
    "end": "1479000"
  },
  {
    "text": "questions okay thank you so",
    "start": "1479000",
    "end": "1483000"
  },
  {
    "text": "much and uh the conative Boost is open",
    "start": "1484720",
    "end": "1488760"
  },
  {
    "text": "tomorrow morning 9:00 something like",
    "start": "1488760",
    "end": "1491720"
  },
  {
    "text": "that 10:00 so a bunch of us will be",
    "start": "1491720",
    "end": "1495080"
  },
  {
    "text": "hanging out there through the course of",
    "start": "1495080",
    "end": "1496840"
  },
  {
    "text": "the week so show up there ask more",
    "start": "1496840",
    "end": "1499240"
  },
  {
    "text": "questions thanks again for attending",
    "start": "1499240",
    "end": "1503278"
  }
]