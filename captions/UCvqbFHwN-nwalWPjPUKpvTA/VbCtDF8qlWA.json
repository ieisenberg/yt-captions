[
  {
    "text": "hello welcome everyone um today we will be talking",
    "start": "120",
    "end": "5160"
  },
  {
    "text": "about how to go secretless with SE manager so my name is Tim this is Ash",
    "start": "5160",
    "end": "11040"
  },
  {
    "text": "we're both SE management maintainers and we both work for Fifi which recently has been acquired by C",
    "start": "11040",
    "end": "18199"
  },
  {
    "text": "Arc so let's start with s manager what is s manager in one sentence SE manager",
    "start": "18199",
    "end": "24840"
  },
  {
    "text": "is the best way to get x59 certificates if you're running any kind of workload",
    "start": "24840",
    "end": "30000"
  },
  {
    "text": "in kubernetes basically CT manager uses the kubernetes API so you can use the API to",
    "start": "30000",
    "end": "36760"
  },
  {
    "text": "interact with CT manager to request certificates and then it will automatically provision those certificates for you and make sure that",
    "start": "36760",
    "end": "44160"
  },
  {
    "text": "they are renewed in time so you don't have any outages applications that then get these",
    "start": "44160",
    "end": "49680"
  },
  {
    "text": "certificates they can use them to do server and client authentication and basically as you see",
    "start": "49680",
    "end": "56079"
  },
  {
    "text": "in the diagram search manager kind of acts as a as a intermediary between your application and a certificate Authority",
    "start": "56079",
    "end": "63440"
  },
  {
    "text": "it requests certificates for the application and then it places the obtain certificates close to the",
    "start": "63440",
    "end": "69840"
  },
  {
    "text": "application so it can be used by the application but C is more than just a",
    "start": "69840",
    "end": "75479"
  },
  {
    "text": "technical solution it's actually a whole community of people who are interested in pki who are interested in kubernetes",
    "start": "75479",
    "end": "81840"
  },
  {
    "text": "controllers that kind of fun stuff and I'm very honored to announce here for",
    "start": "81840",
    "end": "87880"
  },
  {
    "text": "the first time um at Cube that se manager has reached the cncf",
    "start": "87880",
    "end": "94320"
  },
  {
    "text": "graduated",
    "start": "94320",
    "end": "97000"
  },
  {
    "text": "status if you don't know what it is it's basically a label to recognize the",
    "start": "102320",
    "end": "107600"
  },
  {
    "text": "quality of the project the quality of the community and also all the effort that we put in the e in the project um I",
    "start": "107600",
    "end": "115399"
  },
  {
    "text": "would like to thank all the contributors all the users and also the the rest of",
    "start": "115399",
    "end": "122159"
  },
  {
    "text": "the maintainers for ofert manager I think it has been an amazing journey to get to this point and I mean",
    "start": "122159",
    "end": "129280"
  },
  {
    "text": "this just one step in this journey we'll continue working on the project we'll continue growing all these stats that you see on the screen and we'll continue",
    "start": "129280",
    "end": "136560"
  },
  {
    "text": "improving the project on that note if you want to",
    "start": "136560",
    "end": "143599"
  },
  {
    "text": "contribute if you're if you're feeling inspired by this talk um please reach out reach out to us you can use this",
    "start": "143599",
    "end": "150160"
  },
  {
    "text": "codes to learn more um we're always open to new people who are interested in this",
    "start": "150160",
    "end": "155239"
  },
  {
    "text": "space who are interested in controllers um so feel free to join",
    "start": "155239",
    "end": "161760"
  },
  {
    "text": "us so then for the second part of the talk or of the title of the talk",
    "start": "162760",
    "end": "170200"
  },
  {
    "text": "secretless basically if we're talking about secretless we mean by",
    "start": "170599",
    "end": "175920"
  },
  {
    "text": "that the fact that no secrets are shared across machine in your system so no secrets are shared",
    "start": "175920",
    "end": "184000"
  },
  {
    "text": "over the wire um an easy way to explain what secretless is is by explaining what it's",
    "start": "184000",
    "end": "190040"
  },
  {
    "text": "not so if you have like username password solution uh if you store a",
    "start": "190040",
    "end": "196319"
  },
  {
    "text": "username password somewhere in secret that's not secretless if you have like a onetime token that's not secretless if",
    "start": "196319",
    "end": "202959"
  },
  {
    "text": "you have any kind of shared secret that's not secretless what is secretless however is",
    "start": "202959",
    "end": "209799"
  },
  {
    "text": "if you're generating a secret locally but you're not sharing it for example you generate a um a key locally and then",
    "start": "209799",
    "end": "217159"
  },
  {
    "text": "you use that key to solve challenges that's still a secretless solution so today we will be talking about how to",
    "start": "217159",
    "end": "224200"
  },
  {
    "text": "make your issuance process um fully secretless although we will try to do",
    "start": "224200",
    "end": "232799"
  },
  {
    "text": "that as much as possible um there is one big catch here and that's Js Js are kind",
    "start": "232799",
    "end": "242400"
  },
  {
    "text": "of secretless they have a lot of the um Goods properties of secretless solutions",
    "start": "242400",
    "end": "247439"
  },
  {
    "text": "but ultimately you will end up still sharing this secret JDT value so it's",
    "start": "247439",
    "end": "253360"
  },
  {
    "text": "almost there also I would like to mention cus",
    "start": "253360",
    "end": "258680"
  },
  {
    "text": "with capital S um here we're actually talking about a solution that doesn't use any secret resources so kubernetes",
    "start": "258680",
    "end": "265880"
  },
  {
    "text": "secret resources this is another thing that we will try to achieve on top of secretless will also make it",
    "start": "265880",
    "end": "274360"
  },
  {
    "text": "secretless so let's start by looking at the issuance process of SE manager and",
    "start": "274960",
    "end": "280479"
  },
  {
    "text": "let's see how we can make this fully secretless thank you very much so yeah C",
    "start": "280479",
    "end": "288639"
  },
  {
    "text": "manager uh as Tim mentioned is a tool for provisioning x509 certificates and",
    "start": "288639",
    "end": "293880"
  },
  {
    "text": "to do that we need someone somewhere that we can get X5 own certificates from so if we're looking at this Di C manager",
    "start": "293880",
    "end": "300520"
  },
  {
    "text": "needs to talk to a certificate Authority um in practice there are many different",
    "start": "300520",
    "end": "305560"
  },
  {
    "text": "certificate authorities that CER manager supports so um we are going to be using specific examples here but it doesn't",
    "start": "305560",
    "end": "312039"
  },
  {
    "text": "really matter what they are uh what matters is there's a lot of options and uh there are some commonalities among",
    "start": "312039",
    "end": "319039"
  },
  {
    "text": "all of these different types of uh of issuer so let's look at the process of",
    "start": "319039",
    "end": "324639"
  },
  {
    "text": "doing this then how how do we actually issue a certificate so um if you're familiar with x509 or TLS certificates",
    "start": "324639",
    "end": "331680"
  },
  {
    "text": "you'll sort of you may have heard these terms before what C manager does is creates what we call a CSR which is a",
    "start": "331680",
    "end": "337919"
  },
  {
    "text": "certificate signing request it sends that to the certificate authority to get it signed the certificate Authority is",
    "start": "337919",
    "end": "344440"
  },
  {
    "text": "the sort of organization computer whatever that controls the the key of the of the issuer um we've thrown some",
    "start": "344440",
    "end": "351479"
  },
  {
    "text": "examples here obviously Veni hashiko Vault um Al has one there's one in gcp",
    "start": "351479",
    "end": "357280"
  },
  {
    "text": "let encrypt is probably the most popular one um that we see that people use inert manager um the key is once the",
    "start": "357280",
    "end": "364840"
  },
  {
    "text": "certificate Authority is done with it it will send it back to CT manager the challenge that we have is",
    "start": "364840",
    "end": "370479"
  },
  {
    "text": "that se manager needs to be able to talk to that CA right we can't just send random CSR off and expect to get a reply",
    "start": "370479",
    "end": "377840"
  },
  {
    "text": "we need to show that we're allowed to talk to the CA and we need to show that we're allowed to request whatever we're",
    "start": "377840",
    "end": "383280"
  },
  {
    "text": "requesting in the certificate so if I want a certificate for example.com I need to be able to prove that I can get",
    "start": "383280",
    "end": "389840"
  },
  {
    "text": "a certificate for example.com again if you if you've used let encrypt you're probably familiar with that kind of",
    "start": "389840",
    "end": "397160"
  },
  {
    "text": "process so the simplest solution for talking to a CA is a static secret right",
    "start": "397160",
    "end": "402880"
  },
  {
    "text": "um we're using the inbuilt Hashi Cort Vault issue here as an example but then it really doesn't matter um what matters",
    "start": "402880",
    "end": "410199"
  },
  {
    "text": "is that what we're saying is hey SE manager go read this secret that we've that we've created and use the token",
    "start": "410199",
    "end": "415879"
  },
  {
    "text": "that's in that and you send that off to the issuer um it's it's very conceptually simple",
    "start": "415879",
    "end": "422120"
  },
  {
    "text": "there's there's nothing particularly Difficult about this idea um but it's unsurprisingly as we started with it",
    "start": "422120",
    "end": "428720"
  },
  {
    "text": "it's not the best solution that you can have the issue here is that any secret",
    "start": "428720",
    "end": "434800"
  },
  {
    "text": "really needs to be able to be rotated we're obviously intimately familiar with that um with x509",
    "start": "434800",
    "end": "440840"
  },
  {
    "text": "certificates um these static tokens are also really high value targets uh if if someone steals them they can pretend to",
    "start": "440840",
    "end": "448160"
  },
  {
    "text": "be C manager they can issue certificates as though they were sir manager that's not good um they also tend towards being",
    "start": "448160",
    "end": "455919"
  },
  {
    "text": "manually set up so um things like gith UPS which you consider a best practice",
    "start": "455919",
    "end": "461280"
  },
  {
    "text": "uh that's pretty difficult to do with this kind of thing it's not impossible but often you see this kind of approach and it's kind of manual and it's not",
    "start": "461280",
    "end": "469120"
  },
  {
    "text": "great so what's better well better would be um workload Identity or machine",
    "start": "469120",
    "end": "475879"
  },
  {
    "text": "Identity or some other name for the the concept this is the idea of using something inherent to the environment",
    "start": "475879",
    "end": "482319"
  },
  {
    "text": "that we're in to uh authenticate to the ca that we want to talk to the same",
    "start": "482319",
    "end": "487560"
  },
  {
    "text": "applies for a lot of other um types of workload but here we're just talking about talking to the ca um in kubernetes",
    "start": "487560",
    "end": "494039"
  },
  {
    "text": "the sort of standard way of doing workload identity would be using a kubernetes service account token every",
    "start": "494039",
    "end": "500159"
  },
  {
    "text": "workload that's running in kubernetes has an Associated service account of some kind and you can get tokens from",
    "start": "500159",
    "end": "506000"
  },
  {
    "text": "the kubernetes API server that uh represent your workload so then if C manager can fetch",
    "start": "506000",
    "end": "512800"
  },
  {
    "text": "that workload identity it can send that off to the certificate Authority instead um hopefully if we've configured the",
    "start": "512800",
    "end": "519599"
  },
  {
    "text": "certificate Authority correctly it will accept that and use that in place of any other kind of secret and then send back",
    "start": "519599",
    "end": "525240"
  },
  {
    "text": "an x509 identity that we can use so we sort of plug the workload identity into the issuance life cycle so what does",
    "start": "525240",
    "end": "532560"
  },
  {
    "text": "that look like well L yaml for a start um so here again using the Vault example",
    "start": "532560",
    "end": "538760"
  },
  {
    "text": "but it doesn't have to Vault um we're referring to whatever service account we we may be using and uh we're specifying",
    "start": "538760",
    "end": "546320"
  },
  {
    "text": "in this case the role that we'll use in the ca but again not not hugely important what is important here is that",
    "start": "546320",
    "end": "552600"
  },
  {
    "text": "um when I'm creating this resource in kubernetes I'm not having to specify any secrets I've just told certain manager",
    "start": "552600",
    "end": "559000"
  },
  {
    "text": "how to go and get a secret which is the key um so workload entity is is kind of",
    "start": "559000",
    "end": "566160"
  },
  {
    "text": "secretless um that we we we've got a chart here where we're showing that static secrets are all in red so they're",
    "start": "566160",
    "end": "572640"
  },
  {
    "text": "danger um the the approach we're using here with service account tokens in",
    "start": "572640",
    "end": "578720"
  },
  {
    "text": "kubernetes um has some green here right the specifically you can restrict who",
    "start": "578720",
    "end": "584000"
  },
  {
    "text": "will accept these JS you don't need to share any secrets to be able to trust the JWT or or jot um and what's really",
    "start": "584000",
    "end": "593440"
  },
  {
    "text": "useful is that they actually are time limited so they will expire even if I steal the J UT eventually it will run",
    "start": "593440",
    "end": "599120"
  },
  {
    "text": "out I'd have to steal another one to be able to continue um abusing it all this said I am a certified JWT",
    "start": "599120",
    "end": "607120"
  },
  {
    "text": "hater like I I will use any opportunity to hate on them because you do have to send this over the wire when you're",
    "start": "607120",
    "end": "613880"
  },
  {
    "text": "talking to the ca you send the JWT verbatim that means if I'm spying on your communication I can just take it",
    "start": "613880",
    "end": "620959"
  },
  {
    "text": "and use it so it's it's secretless it's certainly a lot more secretless in that you're not having to configure a static",
    "start": "620959",
    "end": "627640"
  },
  {
    "text": "secret but it's not fully secretless um and and there in Li of the r Tim hinted",
    "start": "627640",
    "end": "632720"
  },
  {
    "text": "at this earlier as well there is a better solution than this still which would be X of9 inserts surpris I like",
    "start": "632720",
    "end": "638760"
  },
  {
    "text": "x59 inserts um the beauty of that is that you wouldn't need to send anything",
    "start": "638760",
    "end": "643920"
  },
  {
    "text": "you just use the private key that you have locally um to prove that you own the certificate um then that you can use",
    "start": "643920",
    "end": "651040"
  },
  {
    "text": "that to talk to the server this would be something like Mutual TLS if you're familiar with that um this is better as",
    "start": "651040",
    "end": "657839"
  },
  {
    "text": "I say it's we've got it all in green so it must be better but actually the important thing here is that most",
    "start": "657839",
    "end": "663399"
  },
  {
    "text": "issuers don't support this that the problem that you're going to have here is that um you need a x509 insert to be",
    "start": "663399",
    "end": "669560"
  },
  {
    "text": "able to get a different x509 CT so you end up in a a sort of place where you need something like spiffy or something",
    "start": "669560",
    "end": "675000"
  },
  {
    "text": "like that conveniently we're doing a talk last thing on Friday about spiffy so if you uh if if you like this maybe",
    "start": "675000",
    "end": "680600"
  },
  {
    "text": "come along to that if you're still going to be around um but that's enough talk about issuance let's pass back over to Tim and",
    "start": "680600",
    "end": "687600"
  },
  {
    "text": "talk about provisioning instead thank you so we have seen how to do the",
    "start": "687600",
    "end": "695120"
  },
  {
    "text": "issuance parts of the certificate flow and how to do that secretless using these uh service",
    "start": "695120",
    "end": "702600"
  },
  {
    "text": "account tokens however when we are provisioning certificates using C manager by default",
    "start": "702600",
    "end": "710320"
  },
  {
    "text": "what we will provision is actually a kubernetes secret so normally what you do in seert",
    "start": "710320",
    "end": "717240"
  },
  {
    "text": "manager is you create a certificate resource and that certificate resource has a secret name in it that's actually",
    "start": "717240",
    "end": "724720"
  },
  {
    "text": "the target where the issued certificate together with the private key will be stored",
    "start": "724720",
    "end": "731399"
  },
  {
    "text": "now you might have noticed when I was talking about kubernetes secrets that doesn't really",
    "start": "731399",
    "end": "737639"
  },
  {
    "text": "sound secretless right so in order to fix that we can actually use an add-on",
    "start": "737639",
    "end": "743680"
  },
  {
    "text": "that we also uh maintain under theer manager project called CSI driver where",
    "start": "743680",
    "end": "749639"
  },
  {
    "text": "we don't use certificate resources instead what we do is we created a CSI",
    "start": "749639",
    "end": "756279"
  },
  {
    "text": "driver that allows you to request certificates through volume",
    "start": "756279",
    "end": "761440"
  },
  {
    "text": "amounts so this is an example of a of a pot where we configured a volume",
    "start": "762240",
    "end": "768560"
  },
  {
    "text": "referring to the CER manager CSI driver and through the volume attributes we actually specify what issue we want to",
    "start": "768560",
    "end": "774880"
  },
  {
    "text": "use and also some of the attributes that we want um in the certificate itself",
    "start": "774880",
    "end": "780199"
  },
  {
    "text": "so if we use this s manager will directly or the CSI driver will directly",
    "start": "780199",
    "end": "786760"
  },
  {
    "text": "create the private key and the certificate in the volume and it will not store that in cluster",
    "start": "786760",
    "end": "793680"
  },
  {
    "text": "state so there will be no secret resource instead it will be on the file",
    "start": "793680",
    "end": "799199"
  },
  {
    "text": "system of that container um even better is it will not",
    "start": "799199",
    "end": "804480"
  },
  {
    "text": "even leave the notes on which the CSI driver is running like CSI driver runs on each each note um so it will stay on",
    "start": "804480",
    "end": "812000"
  },
  {
    "text": "the same note will not leave that note and it will also stay in memory so the CSI driver solution that we developed is",
    "start": "812000",
    "end": "819519"
  },
  {
    "text": "purely based on memory mounts and it doesn't store anything on disk so that's",
    "start": "819519",
    "end": "824600"
  },
  {
    "text": "great solution sounds perfect but there are some disadvantages too it's not",
    "start": "824600",
    "end": "830240"
  },
  {
    "text": "ideal for each workload so um for",
    "start": "830240",
    "end": "835680"
  },
  {
    "text": "example well what's typical for CSI drivers is that the the volume Mount is of course Very tightly coupled to the",
    "start": "835680",
    "end": "842639"
  },
  {
    "text": "pot so every time that you restart the pot or you reschedule it a new",
    "start": "842639",
    "end": "848320"
  },
  {
    "text": "certificate has to be issued and that requires you to use an issuer that is",
    "start": "848320",
    "end": "853600"
  },
  {
    "text": "very cheap in its issuance process right so typically this will be like um an",
    "start": "853600",
    "end": "859480"
  },
  {
    "text": "issue that connects to your private uh pki infrastructure you you shouldn't use this like with lets encrypt or anything",
    "start": "859480",
    "end": "865680"
  },
  {
    "text": "like that then it will take a very long time for your container to Startup and you'll be uh hitting like rate limiting",
    "start": "865680",
    "end": "873440"
  },
  {
    "text": "issues very soon so that's how to do the provisioning",
    "start": "873440",
    "end": "878800"
  },
  {
    "text": "step fully secretless we also saw how to do the issuance step fully secretless let's now",
    "start": "878800",
    "end": "886040"
  },
  {
    "text": "see this in practice Let's uh try a little demo so",
    "start": "886040",
    "end": "893600"
  },
  {
    "text": "um yeah not sure how to do this with a microphone I could you",
    "start": "893600",
    "end": "900320"
  },
  {
    "text": "the world's most expensive microphone stand so I have a cluster here um",
    "start": "900320",
    "end": "906920"
  },
  {
    "text": "running and it's basically a simple kind cluster on this kind cluster I installed SE",
    "start": "906920",
    "end": "913399"
  },
  {
    "text": "manager also the CSI driver like we mentioned before and a volt instance which I'll be using as the um pki",
    "start": "913399",
    "end": "921360"
  },
  {
    "text": "solution for this setup so you can actually see that these",
    "start": "921360",
    "end": "928160"
  },
  {
    "text": "components are already running in the cluster um the next step now is to",
    "start": "928160",
    "end": "933319"
  },
  {
    "text": "configure volt so that it can be used as the pki",
    "start": "933319",
    "end": "940160"
  },
  {
    "text": "solution so I created a root certificate and it configured everything",
    "start": "941600",
    "end": "946959"
  },
  {
    "text": "in order to use that root certificate to issue certificates then in the next script",
    "start": "946959",
    "end": "952759"
  },
  {
    "text": "I'll actually configure Vault to accept the service account tokens that we um",
    "start": "952759",
    "end": "958480"
  },
  {
    "text": "that we generate in the cluster so that we can use these service account tokens to authenticate to Vault and to request",
    "start": "958480",
    "end": "965360"
  },
  {
    "text": "certificates from",
    "start": "965360",
    "end": "968079"
  },
  {
    "text": "Vault so this will be the same for every CA solution basically what we do is we",
    "start": "972959",
    "end": "978720"
  },
  {
    "text": "point the um the ca to a open ID connect",
    "start": "978720",
    "end": "984199"
  },
  {
    "text": "endpoint at which it will uh find the JDS uh Keys it will use those keys to",
    "start": "984199",
    "end": "991120"
  },
  {
    "text": "validate the JS that it gets the service account tokens JS and it will validate",
    "start": "991120",
    "end": "996560"
  },
  {
    "text": "these by matching them with the service account name and the service account",
    "start": "996560",
    "end": "1002000"
  },
  {
    "text": "name space that we specify here so after that is setup um the whole PPI setup is",
    "start": "1002000",
    "end": "1008000"
  },
  {
    "text": "done and now we can configure our seert manager issuer so for this issue",
    "start": "1008000",
    "end": "1014880"
  },
  {
    "text": "we we first start with creating a service account so this is a service account that will be used to create the",
    "start": "1014880",
    "end": "1020360"
  },
  {
    "text": "service account tokens um we give SE manager the permission to request certificate uh",
    "start": "1020360",
    "end": "1027160"
  },
  {
    "text": "request service account tokens for this service account and then we configure the issuer",
    "start": "1027160",
    "end": "1033558"
  },
  {
    "text": "to talk to default instance um and use the service account that we just created",
    "start": "1033559",
    "end": "1041039"
  },
  {
    "text": "and then last step is to actually create our workload use the CSI driver volume",
    "start": "1048960",
    "end": "1055039"
  },
  {
    "text": "and refer to this issue that we just created in the volume attributes also",
    "start": "1055039",
    "end": "1060200"
  },
  {
    "text": "here we we specify that we want certificate um for domain name",
    "start": "1060200",
    "end": "1065400"
  },
  {
    "text": "example.com but typically this will be something that identifies your um",
    "start": "1065400",
    "end": "1070640"
  },
  {
    "text": "workloads for example when you're trying to set up a mtls connection",
    "start": "1070640",
    "end": "1077360"
  },
  {
    "text": "so you see the the container is now being created here if we run this again we see that it",
    "start": "1085840",
    "end": "1094039"
  },
  {
    "text": "started so this means that the CSI driver was able to um provision this",
    "start": "1094039",
    "end": "1100120"
  },
  {
    "text": "Mount and the stiff is actually issued so you'll see if you look for the stiffer request resources that there is",
    "start": "1100120",
    "end": "1107000"
  },
  {
    "text": "now a stiffer request resource that was issued um and that was used by the CSI driver to obtain the stiff",
    "start": "1107000",
    "end": "1114760"
  },
  {
    "text": "cut so that's this one um so now we have the cut let's take",
    "start": "1114960",
    "end": "1121280"
  },
  {
    "text": "a look at the workload container and let's look at",
    "start": "1121280",
    "end": "1126799"
  },
  {
    "text": "the location where we mounted the certificate",
    "start": "1126799",
    "end": "1131960"
  },
  {
    "text": "so now we're in the container um and let's first of all list the files in",
    "start": "1144520",
    "end": "1150240"
  },
  {
    "text": "this folder we see there are three files um if you're familiar with seert manager",
    "start": "1150240",
    "end": "1156760"
  },
  {
    "text": "always three files the ca. CRT contains the ca certificate or like the best",
    "start": "1156760",
    "end": "1162320"
  },
  {
    "text": "guess of what we think the C certificate is ts. CRT contains the full chain",
    "start": "1162320",
    "end": "1168159"
  },
  {
    "text": "starting from the leave um until the chain until the root certificate it might not contain the root certificate",
    "start": "1168159",
    "end": "1173720"
  },
  {
    "text": "since that's not really necessary if you're running a server and then TLS key will actually contain the private key um",
    "start": "1173720",
    "end": "1181039"
  },
  {
    "text": "related to that Lea certificate or for that Lea certificate so what we can do",
    "start": "1181039",
    "end": "1186080"
  },
  {
    "text": "now is show the certificate itself so the Lea",
    "start": "1186080",
    "end": "1191520"
  },
  {
    "text": "certificate and here we see we have a Lea certificate it was",
    "start": "1191520",
    "end": "1198159"
  },
  {
    "text": "issued by this um root CA that's actually what we configured in the fult",
    "start": "1198159",
    "end": "1205240"
  },
  {
    "text": "pki setup and in the common names or in the uh s we will actually see the DNS name",
    "start": "1205240",
    "end": "1212320"
  },
  {
    "text": "example.com so that's the full demo that's how everything works and that's how you can secretless secretless",
    "start": "1212320",
    "end": "1220120"
  },
  {
    "text": "request certificates using search manager",
    "start": "1220120",
    "end": "1224760"
  },
  {
    "text": "so I'm I'm really glad that uh it's quite simple to set that up because my arm was really starting to get tired",
    "start": "1229559",
    "end": "1235080"
  },
  {
    "text": "there um so let's recap on what we just saw um because it does look a bit like",
    "start": "1235080",
    "end": "1241679"
  },
  {
    "text": "just commands on a terminal obviously that's what the demo was but there's quite a lot of important steps in that",
    "start": "1241679",
    "end": "1247320"
  },
  {
    "text": "the key thing is that authentication is important right it's it's easy to set up so manager to get certificates for you",
    "start": "1247320",
    "end": "1254039"
  },
  {
    "text": "but you have to think about how so manager will do that and it's possible with a lot of issuers to do better than",
    "start": "1254039",
    "end": "1259400"
  },
  {
    "text": "just sort of a static secret or or relying on something else um you can avoid static Secrets if possible what we",
    "start": "1259400",
    "end": "1265880"
  },
  {
    "text": "saw there was because Vault was running inside that kubernetes cluster it was able to get the public keys of the of",
    "start": "1265880",
    "end": "1272919"
  },
  {
    "text": "the kubernetes service account tokens and validate that way um rather than",
    "start": "1272919",
    "end": "1277960"
  },
  {
    "text": "having to rely on a static secret um it's it's subtle but it is incredibly powerful to be able to do that the other",
    "start": "1277960",
    "end": "1284760"
  },
  {
    "text": "important thing that we saw was that we had no secret resource that's a kubernetes secret resource with a",
    "start": "1284760",
    "end": "1290159"
  },
  {
    "text": "capital S um because we use CSI driver so that pod um has has no permissions to",
    "start": "1290159",
    "end": "1297240"
  },
  {
    "text": "read Secrets it doesn't need to be able to read any secrets if if I broke into that pod and and did Evil things I",
    "start": "1297240",
    "end": "1303720"
  },
  {
    "text": "wouldn't be able to read any Secret at all I don't need to be able to it's all on it appears as though it's on the dis",
    "start": "1303720",
    "end": "1309039"
  },
  {
    "text": "even though it's actually stored in memory and practice um there's plenty more details on CSI driver on S manager.",
    "start": "1309039",
    "end": "1315679"
  },
  {
    "text": "which is our website um Tim mentioned this earlier but this works best with something like private pki um that's",
    "start": "1315679",
    "end": "1322159"
  },
  {
    "text": "most of the issuers that aren't called Acme or that's encrypt um using this for Acme will lead to a bad time you'll",
    "start": "1322159",
    "end": "1329520"
  },
  {
    "text": "you'll exhaust your rate limit and and it's not really for that uh in that case secrets are probably a pretty good way",
    "start": "1329520",
    "end": "1335600"
  },
  {
    "text": "of of doing that but you can you can use uh you can get publicly trusted SS through other methods as well that",
    "start": "1335600",
    "end": "1341679"
  },
  {
    "text": "aren't AC me and and still benefit from CSI driver um so we're going to start to",
    "start": "1341679",
    "end": "1348720"
  },
  {
    "text": "wrap up the uh main section here um one thing I'd say now is that if you have",
    "start": "1348720",
    "end": "1354880"
  },
  {
    "text": "any questions uh that you want to ask there will be questions at the end um now might be a good time to make your",
    "start": "1354880",
    "end": "1360600"
  },
  {
    "text": "way over to the the microphone that's located there um because this is just sort of a bit of information a bit more",
    "start": "1360600",
    "end": "1366080"
  },
  {
    "text": "information first of all um we have a booth here at C manager as a graduated",
    "start": "1366080",
    "end": "1372320"
  },
  {
    "text": "project we get a full-time Booth um here at ccom uh we're in Kiosk 10A if you uh",
    "start": "1372320",
    "end": "1379279"
  },
  {
    "text": "look for the project Pavilion you'll find us standing there This Is Us in Chicago last year um we are",
    "start": "1379279",
    "end": "1387279"
  },
  {
    "text": "printing physical X9 certificates which I think are universally regarded as good",
    "start": "1387279",
    "end": "1392679"
  },
  {
    "text": "swag so you can come and pick up one of these and there's actually a QR code on the back that will let you download the",
    "start": "1392679",
    "end": "1398480"
  },
  {
    "text": "certificate we're issuing um my my Spiel is that we have a Raspberry Pi running inside the booth that's running CT",
    "start": "1398480",
    "end": "1404320"
  },
  {
    "text": "manager so this is a full endtoend demo of CT manager you'll be able to download a certificate that we issued and uh I",
    "start": "1404320",
    "end": "1410480"
  },
  {
    "text": "think it expires in 30 years so it probably be it'll be good for a while",
    "start": "1410480",
    "end": "1416600"
  },
  {
    "text": "I'm being careful not to show the back so you can't steal my certificate because I just printed that this morning um also because we've graduated",
    "start": "1416600",
    "end": "1425520"
  },
  {
    "text": "um this year and and we're so happy to be announcing that we have a ton of Swag",
    "start": "1425520",
    "end": "1431279"
  },
  {
    "text": "um there is everything from keychains to uh little pins that you can have uh",
    "start": "1431279",
    "end": "1437559"
  },
  {
    "text": "we've got stickers of course course shiny and nonin shiny we've even got some temporary tattoos if you're really into your",
    "start": "1437559",
    "end": "1443480"
  },
  {
    "text": "certificates um we do also usually we use blue wax to do the seals on these",
    "start": "1443480",
    "end": "1448600"
  },
  {
    "text": "certificates but we've got gold because of course we're celebrating um yeah please do come along",
    "start": "1448600",
    "end": "1455880"
  },
  {
    "text": "if if you do the whole endtoend demo with the certificate we also have T-shirts to give away as just to sort of",
    "start": "1455880",
    "end": "1461000"
  },
  {
    "text": "keep the the swag train going but the main thing is the certificates let's be honest um so thank you all very much for",
    "start": "1461000",
    "end": "1467679"
  },
  {
    "text": "listening we have a feedback QR code here um if if you enjoyed this if you didn't enjoy this please leave feedback",
    "start": "1467679",
    "end": "1473000"
  },
  {
    "text": "we'd really appreciate that um we'd also really appreciate any questions anyone might have we're more than happy to chat",
    "start": "1473000",
    "end": "1478399"
  },
  {
    "text": "about this um about CT manager more generally um we just like talking about certificates so please do feel free",
    "start": "1478399",
    "end": "1484480"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "1484480",
    "end": "1494809"
  },
  {
    "text": "no questions the microphone just in the middle of the room if you do have any",
    "start": "1498480",
    "end": "1504480"
  },
  {
    "text": "questions over",
    "start": "1504480",
    "end": "1507760"
  },
  {
    "text": "here guys I do have a question so I love to see when projects say hey we have a",
    "start": "1518520",
    "end": "1523679"
  },
  {
    "text": "clear path to joining the community becoming a maintainer if I were to ask",
    "start": "1523679",
    "end": "1529279"
  },
  {
    "text": "what is the best way somebody can get involved that would be helpful for the",
    "start": "1529279",
    "end": "1534880"
  },
  {
    "text": "project what would you say Okay so the question was what's the uh the best way to get involved to be helpful for the",
    "start": "1534880",
    "end": "1541360"
  },
  {
    "text": "project so anything like um um there's plenty of work that goes into a project",
    "start": "1541360",
    "end": "1547520"
  },
  {
    "text": "like this right a key thing in that is is um code obviously we write a lot of",
    "start": "1547520",
    "end": "1553080"
  },
  {
    "text": "code to do this stuff but we also have uh plenty of documentation that need",
    "start": "1553080",
    "end": "1558399"
  },
  {
    "text": "doing answering questions in slack for people that are familiar with how Ser manager works that's really powerful um",
    "start": "1558399",
    "end": "1565960"
  },
  {
    "text": "so what we actually have uh on the S manager website is a full uh guide on",
    "start": "1565960",
    "end": "1572360"
  },
  {
    "text": "getting involved it's got links to meetings and slack and all that good stuff um if you if you drop into our",
    "start": "1572360",
    "end": "1578120"
  },
  {
    "text": "slack Channel and ask a question we'll more than happily point you in the right direction um as we as we Zoom back to",
    "start": "1578120",
    "end": "1584679"
  },
  {
    "text": "the QR code there you go so that the all all you need to know is there basically",
    "start": "1584679",
    "end": "1589720"
  },
  {
    "text": "um we can help uh on slack easily awesome thanks s thank",
    "start": "1589720",
    "end": "1595360"
  },
  {
    "text": "you hi thanks for the talk um super quick question does CSI driver currently",
    "start": "1595360",
    "end": "1600880"
  },
  {
    "text": "supports uh rotation of certificates or is only on",
    "start": "1600880",
    "end": "1606360"
  },
  {
    "text": "Mount yeah so if you're using CSI driver the certificate will be uh rotated for",
    "start": "1606600",
    "end": "1611760"
  },
  {
    "text": "you so it will it will be a file that changes on the file system",
    "start": "1611760",
    "end": "1617240"
  },
  {
    "text": "basically that was a easy question um so just two questions one for uh transient",
    "start": "1617240",
    "end": "1624159"
  },
  {
    "text": "workloads like workers getting certificates of talk to servers um when the pods go away do revocation lists get",
    "start": "1624159",
    "end": "1631240"
  },
  {
    "text": "updated so that's not used anymore or you know to prevent people from lifting certificate",
    "start": "1631240",
    "end": "1639080"
  },
  {
    "text": "elsewise I didn't fully understand the question but maybe asked it sorry could you could you just repeat that quickly",
    "start": "1639120",
    "end": "1644480"
  },
  {
    "text": "right so once a certificate's issued for my pod and it's mounted but my pod goes away does that certificate go on a",
    "start": "1644480",
    "end": "1650799"
  },
  {
    "text": "revocation list to get you know unused so the question is about revocation um",
    "start": "1650799",
    "end": "1656240"
  },
  {
    "text": "so C manager does not support revocation and revocation is an incredibly uh controversial topic within within",
    "start": "1656240",
    "end": "1661960"
  },
  {
    "text": "certificate enthusiasts um we don't do any revocation there's no reason that we couldn't make an attempt at it but it's",
    "start": "1661960",
    "end": "1668720"
  },
  {
    "text": "very difficult in kubernetes to know when something is being deleted and be sure that it is being deleted so if if",
    "start": "1668720",
    "end": "1676200"
  },
  {
    "text": "theoretically we could hook into like a pod life cycle and know for sure that it's been deleted we could theoretically",
    "start": "1676200",
    "end": "1681760"
  },
  {
    "text": "revoke that certificate and create a crl um in practice we can't ever",
    "start": "1681760",
    "end": "1687120"
  },
  {
    "text": "guarantee that or be sure about that so we don't try um but what we're what we",
    "start": "1687120",
    "end": "1693880"
  },
  {
    "text": "generally do rather than uh worry about crls or anything like that is is try to encourage the shortest lifetime possible",
    "start": "1693880",
    "end": "1700399"
  },
  {
    "text": "and we work in that direction so that even if once the once the pod's done like even if you stole it you want to",
    "start": "1700399",
    "end": "1706360"
  },
  {
    "text": "get it for half an hour and then the SE done anyway you know um if if you're",
    "start": "1706360",
    "end": "1711559"
  },
  {
    "text": "really interested in revocation um the the contributing page first like like",
    "start": "1711559",
    "end": "1717080"
  },
  {
    "text": "would be interested in talking about it I can't imagine it being on the road map anytime soon because it's not generally",
    "start": "1717080",
    "end": "1724559"
  },
  {
    "text": "well used in the community but it's it's an interesting question thank you one more thing maybe to add to that",
    "start": "1724559",
    "end": "1731279"
  },
  {
    "text": "like it's per perfectly fine if you're doing mtls to have like stif Cates that are only one hour in uh validity so then",
    "start": "1731279",
    "end": "1739519"
  },
  {
    "text": "probably your revocation list will take longer to be updated and will be cached longer than the life cycle of the actual",
    "start": "1739519",
    "end": "1746120"
  },
  {
    "text": "certificates so that's kind of the solution that we think is more elegant right now um but there is there are some",
    "start": "1746120",
    "end": "1754360"
  },
  {
    "text": "uh different views on that definitely does the CSI driver work with",
    "start": "1754360",
    "end": "1759880"
  },
  {
    "text": "external issuers yeah definitely so if",
    "start": "1759880",
    "end": "1765000"
  },
  {
    "text": "you um so the question was uh does CSI driver work with external",
    "start": "1765000",
    "end": "1772158"
  },
  {
    "text": "issuers so if we if we look at this diagram basically um I I maybe forgot to",
    "start": "1773600",
    "end": "1779880"
  },
  {
    "text": "tell you this but both sides are really really um pluggable and replaceable so",
    "start": "1779880",
    "end": "1787120"
  },
  {
    "text": "both the provisioning part of s manager and the issuance part of s manager can be replaced um like you're saying the",
    "start": "1787120",
    "end": "1795720"
  },
  {
    "text": "issuance part by default s manager has like certain issuers that it installs but those issues are like",
    "start": "1795720",
    "end": "1803440"
  },
  {
    "text": "almost identical in in terms of implementations to um external issuers",
    "start": "1803440",
    "end": "1808480"
  },
  {
    "text": "but those you just have to install separately um but you can kind of mix and match every kind of solution with uh",
    "start": "1808480",
    "end": "1816159"
  },
  {
    "text": "provisioning Solutions and issu solutions so yeah um if you take a look at the AML here um you just have to",
    "start": "1816159",
    "end": "1823120"
  },
  {
    "text": "specify the right issuer kind and issuer group to point to your external issuer and it it should work just like any",
    "start": "1823120",
    "end": "1828559"
  },
  {
    "text": "other issuer okay thanks thank you hey there so my questions about like",
    "start": "1828559",
    "end": "1836600"
  },
  {
    "text": "uh microservice architecture and open ey DC connect when you're using that with mtls right do you guys have like a good",
    "start": "1836600",
    "end": "1841880"
  },
  {
    "text": "like first point starter application to use for that authentication besides",
    "start": "1841880",
    "end": "1847519"
  },
  {
    "text": "Vault like what keycloak or something in there to be able to not have to go in do",
    "start": "1847519",
    "end": "1853559"
  },
  {
    "text": "all thec tokens and then pass them back into your applications",
    "start": "1853559",
    "end": "1859760"
  },
  {
    "text": "um so your questions around if we have like a a quick start where should I start yeah yeah um that's an excellent",
    "start": "1859760",
    "end": "1866559"
  },
  {
    "text": "question well first of all another opportunity to plug our talk on Friday like we we um so obviously the code for",
    "start": "1866559",
    "end": "1871679"
  },
  {
    "text": "that will be open source and and if you can't make it it's the last one of the day then then it will all be on YouTube",
    "start": "1871679",
    "end": "1877120"
  },
  {
    "text": "obviously um but there'll be details there on how how we're approaching doing something like that with with SE manager",
    "start": "1877120",
    "end": "1884080"
  },
  {
    "text": "like acting as as a spiffy server and issuing identities that way that'll show kind of the the the bones",
    "start": "1884080",
    "end": "1891000"
  },
  {
    "text": "of it if you like um I'm not sure if we have anything exactly like that on the",
    "start": "1891000",
    "end": "1896200"
  },
  {
    "text": "website currently that would be an excellent uh point of contribution if we could uh show that tutorial that would",
    "start": "1896200",
    "end": "1901519"
  },
  {
    "text": "be excellent but um fundamentally it's it doesn't change much from one",
    "start": "1901519",
    "end": "1908760"
  },
  {
    "text": "certificate to many certificates right the the workflow doesn't change that much um we we know from some testing",
    "start": "1908760",
    "end": "1915039"
  },
  {
    "text": "unfortunately our colleague Richard isn't here but he's done a lot of testing in this regard we know sir manager can scale to you know high like",
    "start": "1915039",
    "end": "1922880"
  },
  {
    "text": "high amounts of certificates um a lot of certificates in in bursts as well um it's by scaling the C manager pod it's",
    "start": "1922880",
    "end": "1930399"
  },
  {
    "text": "quite easy to to change that um so it it's certainly doable I'm not sure that I have anything excellent to point you",
    "start": "1930399",
    "end": "1936760"
  },
  {
    "text": "at unfortunately but if like we'd happily talk more about it yeah so I guess the one last follow question with",
    "start": "1936760",
    "end": "1942639"
  },
  {
    "text": "each one of those pods that gets created that has let's say the CSI driver that's each in a additional certificate for",
    "start": "1942639",
    "end": "1949799"
  },
  {
    "text": "each pod each pod is individualized at that too so you could use that for audit like looks and and anding yeah so um an",
    "start": "1949799",
    "end": "1958120"
  },
  {
    "text": "interesting thing about CSI driver is that if if I'm just creating a certain manager certificate resource it's the CT",
    "start": "1958120",
    "end": "1964120"
  },
  {
    "text": "manager controller that creates the private key and that's kind of CPU intensive something that's kind of",
    "start": "1964120",
    "end": "1969799"
  },
  {
    "text": "interesting about CSI driver is that each pod creates it itself kind of thing it um it spreads the workload out across",
    "start": "1969799",
    "end": "1975919"
  },
  {
    "text": "many nodes it's not just the SE manager controller which is uh handling all that load so yeah each pod gets its own",
    "start": "1975919",
    "end": "1982480"
  },
  {
    "text": "individual identity which is is powerful for some workloads anyway but it also is",
    "start": "1982480",
    "end": "1987679"
  },
  {
    "text": "about where the the heavy lifting gets done with the generation of the private key excellent thank you thank you very",
    "start": "1987679",
    "end": "1995360"
  },
  {
    "text": "much any more questions anyone back up um I don't have a use case but I'm",
    "start": "1995360",
    "end": "2002600"
  },
  {
    "text": "just thinking through each pod getting its own certificates what we do with stateful set where we may want to say",
    "start": "2002600",
    "end": "2009919"
  },
  {
    "text": "have the same certificate for each you know numbers one through five kind of thing right so the the questions about",
    "start": "2009919",
    "end": "2016279"
  },
  {
    "text": "um stateful sets and uh what you might do in that situation I think with a stateful set probably CSI driver would",
    "start": "2016279",
    "end": "2023120"
  },
  {
    "text": "work in a lot of cases um having a different private key doesn't necessarily cause you any harm if if if",
    "start": "2023120",
    "end": "2029639"
  },
  {
    "text": "each pod is representing the same identity I think that's fair to say um if you definitely need it to be exactly",
    "start": "2029639",
    "end": "2035559"
  },
  {
    "text": "the same certificate which I wouldn't expect to be the case in a lot of a lot of situations a certain manager",
    "start": "2035559",
    "end": "2041360"
  },
  {
    "text": "certificate would would solve that quite neatly obviously then it will be stored in kubernetes secret but um that SEC one",
    "start": "2041360",
    "end": "2048358"
  },
  {
    "text": "secret can be referred to by all the pods and and handled that",
    "start": "2048359",
    "end": "2054039"
  },
  {
    "text": "way anything anything to add a glowing review um any more questions from anyone",
    "start": "2054639",
    "end": "2062079"
  },
  {
    "text": "at all okay um thank you all so much for listening and hanging around uh really",
    "start": "2062079",
    "end": "2067839"
  },
  {
    "text": "appreciate it",
    "start": "2067839",
    "end": "2071200"
  }
]