[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "hi everybody welcome to our talk about developing and debugging web assembly filters i'm yuval kujavi",
    "start": "1280",
    "end": "7680"
  },
  {
    "text": "chief architect at solo io and i'm shane o'donnell a software engineer at solo.io",
    "start": "7680",
    "end": "14639"
  },
  {
    "text": "let's talk a little bit about the agenda for today we'll start with isro and envoy we'll do a little bit of an overview",
    "start": "15120",
    "end": "21840"
  },
  {
    "text": "then we'll talk about how to build and deploy webassembly filters onto your service",
    "start": "21840",
    "end": "26960"
  },
  {
    "text": "mesh and then we'll talk about how we troubleshoot and debug these web assembly filters",
    "start": "26960",
    "end": "34000"
  },
  {
    "text": "let's talk a little bit about uh it's your adoption that we see in the industry",
    "start": "34000",
    "end": "42559"
  },
  {
    "text": "so we like to divide it to this fourth step the first step we see is kind of a crawl step where",
    "start": "42559",
    "end": "48480"
  },
  {
    "text": "people need support for abstract mitsuo they're just testing it out they need long-term support",
    "start": "48480",
    "end": "54640"
  },
  {
    "text": "they're beginning to learn what service mesh means technically and operationally",
    "start": "54640",
    "end": "61199"
  },
  {
    "text": "then the next step is people add on more features we call it the walk phase they're doing",
    "start": "61199",
    "end": "66560"
  },
  {
    "text": "maybe a developer portal maybe an ingress api gateway start to use empty lists for zero trust",
    "start": "66560",
    "end": "74479"
  },
  {
    "text": "security start to use the observability features once they get more confidence they",
    "start": "74479",
    "end": "81439"
  },
  {
    "text": "usually go to the stage we call the run stage which involves more delegating",
    "start": "81439",
    "end": "86720"
  },
  {
    "text": "responsibilities to different teams with the various objects that allow delegation",
    "start": "86720",
    "end": "92720"
  },
  {
    "text": "a web assembly filters to enrich the data plane uh once the once organizations feel",
    "start": "92720",
    "end": "101360"
  },
  {
    "text": "comfortable in this step the next step is really taking full advantage of the service",
    "start": "101360",
    "end": "106640"
  },
  {
    "text": "mesh you know multi-cluster meshes federated services that can fail over to each",
    "start": "106640",
    "end": "111759"
  },
  {
    "text": "other etc with that i'll hand it off to shane to give us",
    "start": "111759",
    "end": "117200"
  },
  {
    "text": "some of the background on the ico and android filters so let's do a quick overview of istio's",
    "start": "117200",
    "end": "123840"
  },
  {
    "start": "120000",
    "end": "165000"
  },
  {
    "text": "architecture istio deploys a sidecar proxy to each microservice running in your service",
    "start": "123840",
    "end": "128879"
  },
  {
    "text": "mesh these sidecars are each instances of envoy proxy which we collectively refer to as the",
    "start": "128879",
    "end": "134560"
  },
  {
    "text": "data plane this data plane of envoy proxies is controlled by what we call the control plane in istio's case this",
    "start": "134560",
    "end": "141040"
  },
  {
    "text": "is this cod and istiod will communicate these configuration updates from the control plane into the data plane",
    "start": "141040",
    "end": "147680"
  },
  {
    "text": "once our customers start looking at istio one of the first questions they ask us is how do we extend it we want to build something like dlp data",
    "start": "147680",
    "end": "154319"
  },
  {
    "text": "loss prevention or waff web application firewall or any other any other number of",
    "start": "154319",
    "end": "160000"
  },
  {
    "text": "transformations and custom business logic that you're not going to get with envoy filters right out of the box",
    "start": "160000",
    "end": "165120"
  },
  {
    "start": "165000",
    "end": "205000"
  },
  {
    "text": "now luckily envoy's incredibly powerful and it provides us with a really really powerful extension layer inside",
    "start": "165120",
    "end": "171680"
  },
  {
    "text": "of its filter chain so the filter chain out of the box will give us some really helpful filters like external off and rate limiting",
    "start": "171680",
    "end": "177760"
  },
  {
    "text": "but it also gives us the ability to build our own custom native envoy filter now this does have some drawbacks first",
    "start": "177760",
    "end": "184400"
  },
  {
    "text": "of all you have to write the filter in c plus plus and second of all you have to actually compile the filter into envoy",
    "start": "184400",
    "end": "190400"
  },
  {
    "text": "which means you need to be familiar with the bazel build system which is non-trivial and you have to be familiar with",
    "start": "190400",
    "end": "196239"
  },
  {
    "text": "compiling the entire envoy tool chain which takes a lot of time and a lot of power and it's not that easy to do luckily",
    "start": "196239",
    "end": "203440"
  },
  {
    "text": "this is where webassembly comes to the rescue so what is webassembly webassembly is a",
    "start": "203440",
    "end": "208640"
  },
  {
    "start": "205000",
    "end": "233000"
  },
  {
    "text": "binary format that was originally meant to run on the web it was meant to run non-javascript languages",
    "start": "208640",
    "end": "214239"
  },
  {
    "text": "inside of a browser context because it was designed to run inside of a browser context it's built with simplicity security and",
    "start": "214239",
    "end": "220959"
  },
  {
    "text": "performance in mind but these attributes are also incredibly desirable when running in other contexts",
    "start": "220959",
    "end": "226080"
  },
  {
    "text": "the context we're especially interested in here is running inside of the envoy data plane or more specifically inside of the",
    "start": "226080",
    "end": "231680"
  },
  {
    "text": "filter chain so what does that look like rather than having a native custom envoy filter now we're running",
    "start": "231680",
    "end": "238560"
  },
  {
    "text": "envoy's built-in wasn't filter and passing it are wasn't filter as code this means that it has all of the",
    "start": "238560",
    "end": "244400"
  },
  {
    "text": "advantages of the other envoy configuration such that if you want to add or remove a wasn't filter or update its",
    "start": "244400",
    "end": "249680"
  },
  {
    "text": "configuration you don't need to restart the proxy there's zero downtime it's also secure and reliable wasm's",
    "start": "249680",
    "end": "256639"
  },
  {
    "text": "going to run inside of an isolated vm in addition to that not just you you can",
    "start": "256639",
    "end": "262240"
  },
  {
    "text": "run not only c plus filters but any other language that's implemented the wasm api runtime",
    "start": "262240",
    "end": "268080"
  },
  {
    "text": "right now these languages include tiny go c plus plus assembly script and rust it's got near",
    "start": "268080",
    "end": "275360"
  },
  {
    "text": "native performance which means you can run this on your data path and handle real requests at production scale and it's sustainable",
    "start": "275360",
    "end": "281840"
  },
  {
    "text": "because you're just maintaining wasn't filters you don't need to rebuild all of envoy and worry about what happens when envoy",
    "start": "281840",
    "end": "287120"
  },
  {
    "text": "pushes new security patches so i'm going to pass it back to yuval to",
    "start": "287120",
    "end": "292320"
  },
  {
    "text": "talk a little bit about user experience",
    "start": "292320",
    "end": "297440"
  },
  {
    "start": "295000",
    "end": "323000"
  },
  {
    "text": "let's talk a little bit about the user experience and we like to start with this tweet from salman height just to",
    "start": "297440",
    "end": "303520"
  },
  {
    "text": "demonstrate the power of web assembly here summon the creator of docker",
    "start": "303520",
    "end": "308880"
  },
  {
    "text": "mentions that if wasserman was he existed in 2008 he wouldn't have needed to create docker",
    "start": "308880",
    "end": "315600"
  },
  {
    "text": "this can demonstrate the power of webassembly and that it can unlock",
    "start": "315600",
    "end": "320720"
  },
  {
    "text": "many use cases in the data plane we like to separate the technology from",
    "start": "320720",
    "end": "328160"
  },
  {
    "start": "323000",
    "end": "355000"
  },
  {
    "text": "the the user experience right with docker the technology wasn't new",
    "start": "328160",
    "end": "334000"
  },
  {
    "text": "linux containers were already there docker made it really easy to build and",
    "start": "334000",
    "end": "339680"
  },
  {
    "text": "distribute those containers uh same goes with webassembly webassembly exists today",
    "start": "339680",
    "end": "345919"
  },
  {
    "text": "in envoy but to use it today there's a lot of stuff you need to do on your own and with the glue mesh web",
    "start": "345919",
    "end": "352320"
  },
  {
    "text": "assembly hub we aim to simplify that so let's talk a little bit about the",
    "start": "352320",
    "end": "358319"
  },
  {
    "start": "355000",
    "end": "366000"
  },
  {
    "text": "life cycle from the developer writing the code until the filler ends up in your android data",
    "start": "358319",
    "end": "364080"
  },
  {
    "text": "plane serving requests so the first step is to build a filter",
    "start": "364080",
    "end": "370080"
  },
  {
    "start": "366000",
    "end": "432000"
  },
  {
    "text": "now envoy web assembly filters need to adhere to the envoy api",
    "start": "370080",
    "end": "375600"
  },
  {
    "text": "application binary interface that's the interface between envoy and the filter that's how anwar",
    "start": "375600",
    "end": "381520"
  },
  {
    "text": "knows how to interact with the filter we have pre-packaged filters in several languages and we",
    "start": "381520",
    "end": "388880"
  },
  {
    "text": "allow you to quickly and easily get started with mesh ctl blue mesh command line",
    "start": "388880",
    "end": "395360"
  },
  {
    "text": "tool we've added the wasm sub command that allows you to easily initialize a filter with this",
    "start": "395360",
    "end": "402880"
  },
  {
    "text": "mesh cdl wasn't in it creates a base filter so you can start writing",
    "start": "402880",
    "end": "409280"
  },
  {
    "text": "code in addition in order to build each language has its own",
    "start": "409280",
    "end": "415120"
  },
  {
    "text": "built-ins used to build a filter so we provide the messenger wasn't built",
    "start": "415120",
    "end": "420319"
  },
  {
    "text": "in order to build a filter from code to web assembly and package it as an oci",
    "start": "420319",
    "end": "427599"
  },
  {
    "text": "image and i get to why we use an oci image in just a second",
    "start": "427599",
    "end": "433599"
  },
  {
    "start": "432000",
    "end": "467000"
  },
  {
    "text": "so the power of oci images is that it can be pushed and pulled",
    "start": "433840",
    "end": "439199"
  },
  {
    "text": "to a registry much like docker images we provide webassembly hub as a",
    "start": "439199",
    "end": "444560"
  },
  {
    "text": "community resource where you can sign up for free and push and pull your images too",
    "start": "444560",
    "end": "450960"
  },
  {
    "text": "so the next step in the workflow would be to push this image to a registry in this example to webassembly hub to",
    "start": "450960",
    "end": "458080"
  },
  {
    "text": "make it available later to be pulled into the cluster much like",
    "start": "458080",
    "end": "463440"
  },
  {
    "text": "you're doing today with your docker images",
    "start": "463440",
    "end": "467680"
  },
  {
    "start": "467000",
    "end": "487000"
  },
  {
    "text": "in order to facilitate that we created the wasan artifact image specification which specifies how to package a wasan",
    "start": "468879",
    "end": "477120"
  },
  {
    "text": "binary into an oci image so that glue mesh and other tools know how to retrieve it and send it to",
    "start": "477120",
    "end": "485360"
  },
  {
    "text": "android the way glue mesh sends",
    "start": "485360",
    "end": "492000"
  },
  {
    "start": "487000",
    "end": "558000"
  },
  {
    "text": "the extension to envoy is using what's called an envoy an extension",
    "start": "492000",
    "end": "497360"
  },
  {
    "text": "config discovery service this allows us to configure onward to",
    "start": "497360",
    "end": "503680"
  },
  {
    "text": "grab additional extensions like web assembly filters from a separate control plane",
    "start": "503680",
    "end": "511199"
  },
  {
    "text": "separating the life cycle of regular mesh configuration and your webassembly filter",
    "start": "511199",
    "end": "519279"
  },
  {
    "text": "in this example we use we use mesh ctl wasam deploy to create a filter deployment crd that",
    "start": "519279",
    "end": "526640"
  },
  {
    "text": "glue mesh will then uh use to create an android filter ico cd to",
    "start": "526640",
    "end": "532640"
  },
  {
    "text": "inject this ecds extension onto onboard anway subsequently",
    "start": "532640",
    "end": "538320"
  },
  {
    "text": "will contact bluemesh and get the wasan binary and will load it and",
    "start": "538320",
    "end": "544640"
  },
  {
    "text": "activate it on the request path this request injects the filter that we just built and pushed",
    "start": "544640",
    "end": "551760"
  },
  {
    "text": "into the app rating workload in a cluster called management cluster",
    "start": "551760",
    "end": "559680"
  },
  {
    "start": "558000",
    "end": "590000"
  },
  {
    "text": "the last step as far as development goes is we may want to do source level debugging and that's not",
    "start": "559680",
    "end": "566000"
  },
  {
    "text": "something that we currently have but it's something we're working on and it is to provide a message yell",
    "start": "566000",
    "end": "571440"
  },
  {
    "text": "debug command that will allow you to source level debug your filter",
    "start": "571440",
    "end": "576640"
  },
  {
    "text": "as you are developing it and with that let's see a quick demo",
    "start": "576640",
    "end": "583040"
  },
  {
    "text": "that shows all the commands we took up until now used in practice",
    "start": "583040",
    "end": "591440"
  },
  {
    "start": "590000",
    "end": "663000"
  },
  {
    "text": "all right let's see a quick demo for the wasam developer experience with glue mesh",
    "start": "591440",
    "end": "597040"
  },
  {
    "text": "so first of all on the left side of the screen you can see the glue mesh console",
    "start": "597040",
    "end": "602079"
  },
  {
    "text": "it gives you a nice overview of your deployment status if we drill down to the meshes tab you can see that we have two",
    "start": "602079",
    "end": "608800"
  },
  {
    "text": "cluster management cluster in the remote cluster and they're connected with a single virtual mesh",
    "start": "608800",
    "end": "615440"
  },
  {
    "text": "and you can see the various traffic target workloads and possibly kind of a high level",
    "start": "615440",
    "end": "621040"
  },
  {
    "text": "overview of what's going on you can also drill down to the policy tab to see specific policies now we have",
    "start": "621040",
    "end": "629040"
  },
  {
    "text": "added a wasm plugin into the mesh ctl command line mesh ctl is the command",
    "start": "629040",
    "end": "635519"
  },
  {
    "text": "line that comes along with glue mesh we've added what the capabilities of",
    "start": "635519",
    "end": "640959"
  },
  {
    "text": "wasmi to mesh ctl using the wasam plugin and let's see how the developer workflow",
    "start": "640959",
    "end": "648000"
  },
  {
    "text": "for deploying a wasm extension to the mesh works so the first",
    "start": "648000",
    "end": "653360"
  },
  {
    "text": "thing we'll do we'll start with mesh ctl wasm in it we'll give it the name of the filter we",
    "start": "653360",
    "end": "659839"
  },
  {
    "text": "want to create and the language in this case rust this extracts a template for an easy",
    "start": "659839",
    "end": "667680"
  },
  {
    "start": "663000",
    "end": "1164000"
  },
  {
    "text": "getting started experience so let's open up the code and see what we're working with",
    "start": "667680",
    "end": "673360"
  },
  {
    "text": "as you can see in this example we implement the http response header so this method will be",
    "start": "673360",
    "end": "679040"
  },
  {
    "text": "called every time an http requested made the response is returned",
    "start": "679040",
    "end": "684800"
  },
  {
    "text": "and as the response headers are returned this function here will be called and in this",
    "start": "684800",
    "end": "690880"
  },
  {
    "text": "case what we can see we have a few lines just to make it a bit more interesting and it sets a response header hello",
    "start": "690880",
    "end": "698959"
  },
  {
    "text": "and with the default value world plus this number which comes out to be one all right so",
    "start": "698959",
    "end": "705519"
  },
  {
    "text": "now that we have the code we want to the next step would be to build this",
    "start": "705519",
    "end": "710639"
  },
  {
    "text": "filter into a wasa binary we have a command for that as well so messy dl build we tell it the language",
    "start": "710639",
    "end": "718320"
  },
  {
    "text": "so it can select the right tool chain to build with we tell it how to tag the resulting",
    "start": "718320",
    "end": "725519"
  },
  {
    "text": "wasn't filter and in our case this wasn't filler will be packaged as an oci",
    "start": "725519",
    "end": "731839"
  },
  {
    "text": "image that will be sent or pushed uh in the next step to webassembly hub so we give",
    "start": "731839",
    "end": "738079"
  },
  {
    "text": "it an image name that contains webassembly hub and my username in webassembly webassemblyhub",
    "start": "738079",
    "end": "744160"
  },
  {
    "text": "now this is very similar to how docker images work and lastly we give it the folder that",
    "start": "744160",
    "end": "751760"
  },
  {
    "text": "contains the filter so building pulls in a container with",
    "start": "751760",
    "end": "757040"
  },
  {
    "text": "build tools in this case it has a bazel and it's running and building",
    "start": "757040",
    "end": "762399"
  },
  {
    "text": "the filter it's happening live so it'll take a minute i'll",
    "start": "762399",
    "end": "768880"
  },
  {
    "text": "in the meantime i'll mention that after the filter is built the resulting wasam file will get",
    "start": "768880",
    "end": "775600"
  },
  {
    "text": "packaged in an oci image that will be stored on your local",
    "start": "775600",
    "end": "782399"
  },
  {
    "text": "machine and then in the next step what we'll do is actually push it to webassembly hub",
    "start": "782399",
    "end": "789680"
  },
  {
    "text": "all right everything built successfully image was tagged everything looking good",
    "start": "789680",
    "end": "795839"
  },
  {
    "text": "so let's move on to the next step mesh cdl push and what this does it's very similar to how docker push works",
    "start": "795839",
    "end": "802720"
  },
  {
    "text": "it'll push this image from the local cache into webassembly hub io so it's",
    "start": "802720",
    "end": "808399"
  },
  {
    "text": "available wherever it's needed next all right so far so good the image is",
    "start": "808399",
    "end": "815040"
  },
  {
    "text": "pushed so let's move on to the next step and the next step is to deploy the image",
    "start": "815040",
    "end": "821519"
  },
  {
    "text": "right so so far we have the limit the image in our local machine we have it in webassembly hub",
    "start": "821519",
    "end": "827680"
  },
  {
    "text": "we need to get it to the service mesh right and in this case we'll use the message dl wasn't deploy command so you",
    "start": "827680",
    "end": "834160"
  },
  {
    "text": "can see here messaging wasn't deployed to ico",
    "start": "834160",
    "end": "839360"
  },
  {
    "text": "to our current management cluster the deployment that",
    "start": "839360",
    "end": "846880"
  },
  {
    "text": "we want to create that's the filter deployment it's going to be the ed header this is the name of the crd that will be",
    "start": "846880",
    "end": "854240"
  },
  {
    "text": "created to express the extension right so everything is",
    "start": "854240",
    "end": "860240"
  },
  {
    "text": "managed with crds and the result of this command will be a crd that glue mesh will process",
    "start": "860240",
    "end": "867040"
  },
  {
    "text": "and inject the filter the wasam extension into the workload so",
    "start": "867040",
    "end": "874079"
  },
  {
    "text": "this is the name of the filter deployment crd that is about to be created we give it obviously the namespace and",
    "start": "874079",
    "end": "880959"
  },
  {
    "text": "the image this is the image we just pushed to webassembly hub",
    "start": "880959",
    "end": "886320"
  },
  {
    "text": "we give it the cluster because remember glue mesh can deploy this into multiple clusters so",
    "start": "886320",
    "end": "892880"
  },
  {
    "text": "this is the cluster where we wanted the the filter to apply to and we give",
    "start": "892880",
    "end": "898079"
  },
  {
    "text": "it the label of the workload that we want the filter to apply to so in this case",
    "start": "898079",
    "end": "903279"
  },
  {
    "text": "to the ratings app in the cluster that is management cluster",
    "start": "903279",
    "end": "908320"
  },
  {
    "text": "all right and let's deploy that so far so good and now that it's",
    "start": "908320",
    "end": "914320"
  },
  {
    "text": "deployed you can see that if we'll go to the wasm tab in glue mesh you can see that there was some filter",
    "start": "914320",
    "end": "920560"
  },
  {
    "text": "here as well so with with the ui we'd really try to give you a full",
    "start": "920560",
    "end": "926240"
  },
  {
    "text": "360 view of what's happening in your service mesh all right next step",
    "start": "926240",
    "end": "934800"
  },
  {
    "text": "we're going to test that it's actually working here is the step where i cross my fingers so",
    "start": "934800",
    "end": "940800"
  },
  {
    "text": "what we're doing here is essentially x again to the product page pod",
    "start": "940800",
    "end": "946000"
  },
  {
    "text": "and from the product page pod we're going to curl the ratings pod right in if everything works well",
    "start": "946000",
    "end": "953680"
  },
  {
    "text": "we will see exactly the hello world one header now you'll notice that the header",
    "start": "953680",
    "end": "958959"
  },
  {
    "text": "is lowercase here because with envoy all headers are normalized and are lowercase",
    "start": "958959",
    "end": "964639"
  },
  {
    "text": "and the value is exactly world and one which is exactly what we expect it to be so so far",
    "start": "964639",
    "end": "972639"
  },
  {
    "text": "everything is looking good so this is kind of the basic demo of what we have today",
    "start": "972639",
    "end": "978160"
  },
  {
    "text": "for a full developer workflow starting from deploying a",
    "start": "978160",
    "end": "986639"
  },
  {
    "text": "source code template that we can start working with making it easy building it into a wason filter with the",
    "start": "986639",
    "end": "993440"
  },
  {
    "text": "correct build tools pushing it to a binary registry right an oci",
    "start": "993440",
    "end": "1000959"
  },
  {
    "text": "registry where the filter can be hosted and then pulling that to the cluster injecting it to our",
    "start": "1000959",
    "end": "1008000"
  },
  {
    "text": "workload and these are all things that we have today and that you can experiment with",
    "start": "1008000",
    "end": "1013519"
  },
  {
    "text": "now i would like to give a brief look into the future and this is not something we have just yet this is more",
    "start": "1013519",
    "end": "1018720"
  },
  {
    "text": "of an illustration of our plans ahead and that's debugging and one of the challenges",
    "start": "1018720",
    "end": "1024000"
  },
  {
    "text": "with web assembly is source level debugging it's not something that's easy",
    "start": "1024000",
    "end": "1029120"
  },
  {
    "text": "to do today especially not in envoy so for this demo we prepared on",
    "start": "1029120",
    "end": "1034319"
  },
  {
    "text": "an example on how we think this is going to look like and the way it's going to work we're",
    "start": "1034319",
    "end": "1040160"
  },
  {
    "text": "going to add an stl debug wasn't which will actually attach lodb to the envoy",
    "start": "1040160",
    "end": "1047280"
  },
  {
    "text": "and using a special runtime can also source level debug the wasan",
    "start": "1047280",
    "end": "1054400"
  },
  {
    "text": "filter itself so if we'll go here to my history of commands we can break",
    "start": "1054400",
    "end": "1059840"
  },
  {
    "text": "on http response headers",
    "start": "1059840",
    "end": "1066640"
  },
  {
    "text": "all right this is obviously unresolved because the filter is not loaded yet we hit run we let android loader now",
    "start": "1066640",
    "end": "1074400"
  },
  {
    "text": "because this a wasam runtime needs to generate the debug symbol we'll take it a minute to",
    "start": "1074400",
    "end": "1079919"
  },
  {
    "text": "run you can see it's still loading the",
    "start": "1079919",
    "end": "1086480"
  },
  {
    "text": "listeners let's clear this screen oh here we go",
    "start": "1086480",
    "end": "1092799"
  },
  {
    "text": "nevermind all right so and you can see that two locations were",
    "start": "1092840",
    "end": "1100320"
  },
  {
    "text": "added to breakpoint one so now in order to trigger the breakpoint i obviously need some sort of",
    "start": "1100320",
    "end": "1106640"
  },
  {
    "text": "a response so let me just curl localhost so i can get a request and a response",
    "start": "1106640",
    "end": "1112080"
  },
  {
    "text": "and this is this this demo is for an envoy i'm i'm running locally as we mentioned it's not yet",
    "start": "1112080",
    "end": "1117520"
  },
  {
    "text": "ready so let me kill that curl all right now we can see",
    "start": "1117520",
    "end": "1124480"
  },
  {
    "text": "uh first breakpoint is just happened to be a function with the same name that we don't care about so let's continue",
    "start": "1124480",
    "end": "1131919"
  },
  {
    "text": "we can see that we break exactly in this function with this code and we can step",
    "start": "1131919",
    "end": "1137360"
  },
  {
    "text": "through it as we would any other program",
    "start": "1137360",
    "end": "1144240"
  },
  {
    "text": "and obviously resume execution and that will allow us to use the tools that we're familiar",
    "start": "1146080",
    "end": "1151520"
  },
  {
    "text": "with to also debug web assembly filters",
    "start": "1151520",
    "end": "1157440"
  },
  {
    "text": "and that's all for the demo",
    "start": "1157600",
    "end": "1165840"
  },
  {
    "start": "1164000",
    "end": "1253000"
  },
  {
    "text": "and with that i'll pass it on to shane",
    "start": "1166240",
    "end": "1170160"
  },
  {
    "text": "let's go back here",
    "start": "1175600",
    "end": "1179840"
  },
  {
    "text": "thanks you all so attaching a debugger is incredibly powerful and it's one of the most requested features that our",
    "start": "1180799",
    "end": "1186640"
  },
  {
    "text": "users who are using wasm filters are asking for and we're really happy to be working on that but most of the time when you're working",
    "start": "1186640",
    "end": "1193039"
  },
  {
    "text": "in an environment it's not a single mesh single cluster single service environment that's just easy to attach a single debugger to",
    "start": "1193039",
    "end": "1199039"
  },
  {
    "text": "it usually looks something a little bit more like this you know you've got multiple clusters maybe you've got some load balancers and",
    "start": "1199039",
    "end": "1204960"
  },
  {
    "text": "databases and all kinds of different infrastructure going on in there so let's look at a few tools that we have to help you",
    "start": "1204960",
    "end": "1210960"
  },
  {
    "text": "debug and troubleshoot in production that are a little bit more suited to use at scale",
    "start": "1210960",
    "end": "1217120"
  },
  {
    "text": "and with that this is a good time to start with a demo so this is what our demo environment looks like we've got two clusters",
    "start": "1219440",
    "end": "1225919"
  },
  {
    "text": "they both have an istio mesh installed on them and each of them has about half of the istio",
    "start": "1225919",
    "end": "1231679"
  },
  {
    "text": "book info example installed so the cluster on the left that which we're calling the management cluster has reviews v1 and v2 the cluster on the",
    "start": "1231679",
    "end": "1238720"
  },
  {
    "text": "right has reviews v3 for example both clusters are managed by",
    "start": "1238720",
    "end": "1244240"
  },
  {
    "text": "glue mesh in what we call a virtual mesh so it acts as one logical mesh which",
    "start": "1244240",
    "end": "1249520"
  },
  {
    "text": "just makes it a little easier to to manage so let's jump right into the terminal here just to kind of see what",
    "start": "1249520",
    "end": "1254880"
  },
  {
    "start": "1253000",
    "end": "1640000"
  },
  {
    "text": "this looks like i'm running canines here and you can see on the left we've got our management cluster and on the right",
    "start": "1254880",
    "end": "1260000"
  },
  {
    "text": "we've got our remote cluster note that we've got some things running just in one cluster like product page",
    "start": "1260000",
    "end": "1265200"
  },
  {
    "text": "and some things running on the second cluster like the details one thing i'd like to call attention to",
    "start": "1265200",
    "end": "1270880"
  },
  {
    "text": "before we jump into our code editor is that we've got a wasm deployment here for our ratings um",
    "start": "1270880",
    "end": "1278480"
  },
  {
    "text": "service where we're exposing some metrics i'm just taking a quick look at what this looks like you can see that we've defined our",
    "start": "1278480",
    "end": "1284799"
  },
  {
    "text": "webassembly filter i've actually built and deployed and uploaded this to webassembly hub ahead of time just so we can save a little",
    "start": "1284799",
    "end": "1290000"
  },
  {
    "text": "bit of time on the demo and you've already seen how all that works in our previous demo",
    "start": "1290000",
    "end": "1295280"
  },
  {
    "text": "and then you can see here we've got a workload selector we can specify which clusters this is going to and then we've got a selector by app name",
    "start": "1295280",
    "end": "1301520"
  },
  {
    "text": "so you can see this is going to all of the ratings apps in the book info name spaces across both clusters",
    "start": "1301520",
    "end": "1308240"
  },
  {
    "text": "okay so jumping into the actual code here a bit now",
    "start": "1310960",
    "end": "1316080"
  },
  {
    "text": "we can see that well i guess first let's start what does this filter do so this is a webassembly",
    "start": "1316080",
    "end": "1323039"
  },
  {
    "text": "filter written in rust and it's it's pretty basic uh we're kind of using this as an example to show the different ways you can debug things but",
    "start": "1323039",
    "end": "1329840"
  },
  {
    "text": "essentially it will par it will accumulate the body it'll buffer it as",
    "start": "1329840",
    "end": "1335120"
  },
  {
    "text": "we're receiving the stream and then once we've got it all it'll parse it out into json uh if you're familiar with the istio",
    "start": "1335120",
    "end": "1340960"
  },
  {
    "text": "book info app where because we have this on the rating service we're going to aggregate all of the ratings and",
    "start": "1340960",
    "end": "1346400"
  },
  {
    "text": "determine what the average review out of five stars is so we're going to be discussing three",
    "start": "1346400",
    "end": "1352080"
  },
  {
    "text": "different ways we can kind of debug here some of them are suitable for production some of them are more suitable for a development environment",
    "start": "1352080",
    "end": "1357679"
  },
  {
    "text": "first let's talk about debug logs and this is one of those things that's a little bit more appropriate to use in a development environment maybe your local",
    "start": "1357679",
    "end": "1363840"
  },
  {
    "text": "environment it's a very heavy tool and it has a performance impact but it can be really useful for",
    "start": "1363840",
    "end": "1368960"
  },
  {
    "text": "especially the early stages of development development where you're trying to figure out exactly where something's going wrong and",
    "start": "1368960",
    "end": "1374080"
  },
  {
    "text": "pinpoint exactly where a bug is running in a really advanced multi-cluster deployment so how this",
    "start": "1374080",
    "end": "1379919"
  },
  {
    "text": "works is we just use the envoy abi which exposes a function called log and",
    "start": "1379919",
    "end": "1385679"
  },
  {
    "text": "we're just passing at the log level of debug in this particular example",
    "start": "1385679",
    "end": "1391200"
  },
  {
    "text": "we log once the request is received and we log the body once we have it and then finally",
    "start": "1391200",
    "end": "1396559"
  },
  {
    "text": "we log the average reviews so we should see all of these in the debug logs",
    "start": "1396559",
    "end": "1404480"
  },
  {
    "text": "so what does this actually look like let's jump back to our terminal here",
    "start": "1407039",
    "end": "1412080"
  },
  {
    "text": "um okay so we can we can clear out the remote cluster get a little bit more space because we're kind of focusing on",
    "start": "1412080",
    "end": "1417840"
  },
  {
    "text": "the cluster that has the glue mesh management plane installed on it just be aware that this is a multi-cluster environment",
    "start": "1417840",
    "end": "1424720"
  },
  {
    "text": "so the first thing to enable logs on any envoy is that we need to crank up the log level in order to do",
    "start": "1424720",
    "end": "1430640"
  },
  {
    "text": "that we will be interfacing with the admin api so to do that we have to expose",
    "start": "1430640",
    "end": "1436240"
  },
  {
    "text": "port 15000 on the rating service and with that port exposed we're going",
    "start": "1436240",
    "end": "1442159"
  },
  {
    "text": "to crank up the log levels",
    "start": "1442159",
    "end": "1445840"
  },
  {
    "text": "and just to kind of show you how that works if you're not familiar with the envoy logging api we're just doing a simple post to",
    "start": "1447279",
    "end": "1454320"
  },
  {
    "text": "slash logging and we're specifically cranking up the component wasn't to debug level so you can see here everything else all",
    "start": "1454320",
    "end": "1461679"
  },
  {
    "text": "of the other components are still left at warning and then here at the bottom you can see wasm is up to debug",
    "start": "1461679",
    "end": "1467919"
  },
  {
    "text": "now that wasm is at the debug level we can make a few requests so how this is going to work is we're",
    "start": "1469440",
    "end": "1476400"
  },
  {
    "text": "going to exec execute a curl request from the product page going into the ratings page or the",
    "start": "1476400",
    "end": "1483039"
  },
  {
    "text": "rating service i should say so this rating service is going to be the one that has our filter installed or",
    "start": "1483039",
    "end": "1488559"
  },
  {
    "text": "it already has our filter installed once we do a few curls here you can see we get the",
    "start": "1488559",
    "end": "1494080"
  },
  {
    "text": "the request back and then if we actually look at the logs here we should see our debug logs",
    "start": "1494080",
    "end": "1500480"
  },
  {
    "text": "and because there are debug logs we can just get the logs directly with cube ctl i'm",
    "start": "1500480",
    "end": "1507919"
  },
  {
    "text": "getting them specifically from the istio proxy pod and then i'm just going to grip wasm log because that's what all of our wasn't",
    "start": "1507919",
    "end": "1513679"
  },
  {
    "text": "logs are prepended with the debug logs are obviously going to be very very verbose",
    "start": "1513679",
    "end": "1520080"
  },
  {
    "text": "so we want to make sure that we are only looking at the wasn't ones for this example",
    "start": "1520080",
    "end": "1526960"
  },
  {
    "text": "so here we can see our wasn't logs let's give a little bit more space here you",
    "start": "1527120",
    "end": "1532880"
  },
  {
    "text": "can see on http response body which is what we saw previously in our code and then you",
    "start": "1532880",
    "end": "1538559"
  },
  {
    "text": "can see the body gets printed out here this is the body of the response and finally you can see the review which we've calculated as part of",
    "start": "1538559",
    "end": "1544640"
  },
  {
    "text": "our filter just jumping back to our filter real quick kind of tighten that together you can",
    "start": "1544640",
    "end": "1550640"
  },
  {
    "text": "see on http response body which we just saw in our logs you can see the word bodies printed out the actual body",
    "start": "1550640",
    "end": "1555919"
  },
  {
    "text": "itself and then finally down here you can see the log level",
    "start": "1555919",
    "end": "1561440"
  },
  {
    "text": "so that's the first way in order in order for us to debug things in a complex environment again like i said debugging is",
    "start": "1561520",
    "end": "1568799"
  },
  {
    "text": "definitely something that you want to do in a a local or dev environment it's not really well suited to use in production",
    "start": "1568799",
    "end": "1576320"
  },
  {
    "text": "there is a performance impact so if you want to do more logging at the production level at high scale without",
    "start": "1576320",
    "end": "1581919"
  },
  {
    "text": "impacting your performance how we do that is something called access logging so for access logging how it works in",
    "start": "1581919",
    "end": "1588480"
  },
  {
    "text": "envoy is that it's a little interesting so we we set a property in our case we're",
    "start": "1588480",
    "end": "1593520"
  },
  {
    "text": "calling it average reviews and the average reviews property is a filter state object",
    "start": "1593520",
    "end": "1599200"
  },
  {
    "text": "that we're setting uh for envoy by itself it doesn't really do much but",
    "start": "1599200",
    "end": "1604320"
  },
  {
    "text": "in in glue mesh we've created a crd called access log record which lets you",
    "start": "1604320",
    "end": "1610240"
  },
  {
    "text": "configure at a fine grain level which workloads and in some cases even which headers to match so that you're only getting the",
    "start": "1610240",
    "end": "1616720"
  },
  {
    "text": "logs that you really care about at any given time and we've exposed a api in our",
    "start": "1616720",
    "end": "1623600"
  },
  {
    "text": "glue mesh enterprise networking pod which can expose exactly which logs you need to look at at any given time",
    "start": "1623600",
    "end": "1630480"
  },
  {
    "text": "so what does this access log yaml look like how do we configure exactly what gets logged and what we want to look at",
    "start": "1630480",
    "end": "1637120"
  },
  {
    "text": "so what we're going to do is take a quick look back in our terminal we're going to look at this access log",
    "start": "1637120",
    "end": "1642720"
  },
  {
    "start": "1640000",
    "end": "1830000"
  },
  {
    "text": "record and this is the customer resource i was talking about earlier you can see here we're only applying it to requests on the path slash rating",
    "start": "1642720",
    "end": "1649360"
  },
  {
    "text": "slash one we are applying it to both clusters and you know you could scale this up to however many clusters you have in inside",
    "start": "1649360",
    "end": "1655279"
  },
  {
    "text": "of your infrastructure and what we need to do for this to to work is we need to",
    "start": "1655279",
    "end": "1661919"
  },
  {
    "text": "expose the uh enterprise networking pods port 8080. so i'm just going to do that",
    "start": "1661919",
    "end": "1667679"
  },
  {
    "text": "here that's because our enterprise networking pod exposes a glue mesh api for",
    "start": "1667679",
    "end": "1673919"
  },
  {
    "text": "monitoring this for observability purposes we're then going to call that api which is the slash",
    "start": "1673919",
    "end": "1680000"
  },
  {
    "text": "observability logs and we're going to watch it so this is a live stream that we're going to keep open",
    "start": "1680000",
    "end": "1686399"
  },
  {
    "text": "and then finally we're just going to make a few more requests again same request we made earlier where",
    "start": "1686399",
    "end": "1692320"
  },
  {
    "text": "it's from the product page to the ratings service",
    "start": "1692320",
    "end": "1697440"
  },
  {
    "text": "so make a few requests here and then if we full screen this because",
    "start": "1697440",
    "end": "1703520"
  },
  {
    "text": "we're running a little low on space you can see we're getting response code 200 and we should have filter state objects in here so let's",
    "start": "1703520",
    "end": "1710240"
  },
  {
    "text": "take a quick peek",
    "start": "1710240",
    "end": "1713200"
  },
  {
    "text": "um [Music] maybe i shouldn't have said so many",
    "start": "1715279",
    "end": "1721200"
  },
  {
    "text": "requests but here we go filter state objects so one thing to note is it is of bytes",
    "start": "1721200",
    "end": "1727039"
  },
  {
    "text": "value here and that's because our wasm filter didn't actually know the data type when it was saving it we just saved it as",
    "start": "1727039",
    "end": "1732640"
  },
  {
    "text": "bytes but it's worth noting you can see here that it's nc41 is the value and that's just the byte value so if i",
    "start": "1732640",
    "end": "1739120"
  },
  {
    "text": "get out of this and then i do nc41 and just pipe it to base64 decode",
    "start": "1739120",
    "end": "1746720"
  },
  {
    "text": "and echo that result back out again you can see that's 4.5 which is the 4.5 stars average review that we calculated",
    "start": "1746720",
    "end": "1753120"
  },
  {
    "text": "in our service so this is something that we've piped through from our filter that gets executed on the request path but",
    "start": "1753120",
    "end": "1760080"
  },
  {
    "text": "it's handled by this access lock access logging architecture which is you know architected so that it can be",
    "start": "1760080",
    "end": "1766000"
  },
  {
    "text": "run on the data path in production at scale without crippling your performance so this is this is really handy and this is",
    "start": "1766000",
    "end": "1772000"
  },
  {
    "text": "something you can leave on in a real production environment which is great",
    "start": "1772000",
    "end": "1776880"
  },
  {
    "text": "so lastly the last thing we're going to talk about is metrics so i'm going to jump back to the code",
    "start": "1778080",
    "end": "1783840"
  },
  {
    "text": "for a sec and we already talked about our logging",
    "start": "1783840",
    "end": "1788880"
  },
  {
    "text": "and we already talked about our access logging but the other thing that we've",
    "start": "1788880",
    "end": "1794559"
  },
  {
    "text": "done in this filter is we've defined some custom metrics you can see up here in line 17 and 18. so we've got a metric for when the",
    "start": "1794559",
    "end": "1803279"
  },
  {
    "text": "json that we're parsing in the filter is parsed okay which we're calling okay and then we've got one for when the pricing",
    "start": "1803279",
    "end": "1809360"
  },
  {
    "text": "fails and they're defined up here at the top and then you can see down here where we're executing them",
    "start": "1809360",
    "end": "1815679"
  },
  {
    "text": "if it's a success we're doing record metric metric okay and then right here at the bottom when",
    "start": "1815679",
    "end": "1821440"
  },
  {
    "text": "it's a failure we're going to record a failure and the great thing about these metrics is that they're exposed as your standard",
    "start": "1821440",
    "end": "1827919"
  },
  {
    "text": "envoy metrics so if we jump back to our terminal here let's just exit some of these guys and get more",
    "start": "1827919",
    "end": "1834840"
  },
  {
    "start": "1830000",
    "end": "1897000"
  },
  {
    "text": "space we don't need that port forward anymore",
    "start": "1834840",
    "end": "1842080"
  },
  {
    "text": "okay so we should be able to curl localhost 15000 stats and then we're just going to grab for debug",
    "start": "1842880",
    "end": "1849440"
  },
  {
    "text": "filter which is part of our stats so you can see here we've got two error requests recorded and 10",
    "start": "1849440",
    "end": "1854480"
  },
  {
    "text": "okay requests and these are the two metrics that we define in our filter if for example i make a good request",
    "start": "1854480",
    "end": "1860720"
  },
  {
    "text": "to ratings v1 and then i look at these stats again you",
    "start": "1860720",
    "end": "1866240"
  },
  {
    "text": "can see it's gone from 10 to 11. similarly if i make a request to a bad",
    "start": "1866240",
    "end": "1871519"
  },
  {
    "text": "url that's not the accepted ratings one and then we look at the stats again",
    "start": "1871519",
    "end": "1876880"
  },
  {
    "text": "you can see it's gone from two to three and the great thing about these metrics is that they're first-class citizens in",
    "start": "1876880",
    "end": "1882080"
  },
  {
    "text": "unvoiced stats so you can export these to prometheus you can get them in a grafana dashboard where you can set up alerting",
    "start": "1882080",
    "end": "1888320"
  },
  {
    "text": "on them depending on how important they are you know this is just a really powerful tool especially for something in production that you want to just keep an",
    "start": "1888320",
    "end": "1894159"
  },
  {
    "text": "eye on and set alerting to this is this is great so in summary we've looked at how you",
    "start": "1894159",
    "end": "1900080"
  },
  {
    "start": "1897000",
    "end": "1950000"
  },
  {
    "text": "can attach a debugger to do dev level debugging we've looked at how you can look at debugger logs",
    "start": "1900080",
    "end": "1906320"
  },
  {
    "text": "inside of your filters we've also looked at more production appropriate use cases like access logging and metrics which",
    "start": "1906320",
    "end": "1911760"
  },
  {
    "text": "you can use in your clusters at scale we've looked at the entire life cycle of a wasm",
    "start": "1911760",
    "end": "1917200"
  },
  {
    "text": "filter of how you can go about building it how you can publish it to a registry how you can discover",
    "start": "1917200",
    "end": "1922480"
  },
  {
    "text": "filters that other people have written and published up to the registry and how you can deploy it across your cluster we've highlighted the ease of",
    "start": "1922480",
    "end": "1929120"
  },
  {
    "text": "use of all of this throughout the ecosystem as well as the various languages you can use to write these filters in",
    "start": "1929120",
    "end": "1934720"
  },
  {
    "text": "and we've shown you that we've given you the tools of how to do this in a multi-cluster multi-mesh environment",
    "start": "1934720",
    "end": "1941200"
  },
  {
    "text": "thanks very much for listening to our talk if you want to learn more please check out solo.i o or webassemblyhub.io",
    "start": "1941919",
    "end": "1948840"
  },
  {
    "text": "thanks",
    "start": "1948840",
    "end": "1951840"
  }
]