[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "welcome to the cloud native build packs inter talks today we're gonna be talking about the cloud natives build pack",
    "start": "319",
    "end": "5879"
  },
  {
    "text": "project which is currently in the CNC F sandbox we're gonna talk them about the tooling this project provides and how it",
    "start": "5879",
    "end": "12960"
  },
  {
    "text": "can help you turn your application into a container image I'm Emily Casey I'm an",
    "start": "12960",
    "end": "19770"
  },
  {
    "text": "engineer at pivotal and I work on the cloud native build packs contributor team at pivotal I'm also a maintainer of",
    "start": "19770",
    "end": "26279"
  },
  {
    "text": "the platform and implementation sub teams of the project hi I'm Terrence Lee I work at Heroku as",
    "start": "26279",
    "end": "35280"
  },
  {
    "text": "an engineer helped create the original bill packs API and one of the founding members of the cloud named bill packs",
    "start": "35280",
    "end": "40800"
  },
  {
    "text": "project on some of these other fine folks in the front of the room and so",
    "start": "40800",
    "end": "46789"
  },
  {
    "start": "45000",
    "end": "196000"
  },
  {
    "text": "with kubernetes we have a great way to orchestrate and run images but you",
    "start": "46789",
    "end": "52110"
  },
  {
    "text": "actually need images to start with to actually run it in a coop cluster and finally the built PACs provide a great",
    "start": "52110",
    "end": "59640"
  },
  {
    "text": "way to take your application and turn it into a docker image that you can run in your cluster and it Maps layers",
    "start": "59640",
    "end": "67170"
  },
  {
    "text": "logically to the layers that make sense in your application itself with relatively zero configuration of white",
    "start": "67170",
    "end": "74220"
  },
  {
    "text": "cloud native build pack specific configuration that you have to do to actually make that application work and",
    "start": "74220",
    "end": "80850"
  },
  {
    "text": "it's actually built on top of this kind of older Bill packs thing that was invented in 2011 by Heroku and so we've",
    "start": "80850",
    "end": "88710"
  },
  {
    "text": "been running kind of the ideas that kind of made cloud native bill packs that it",
    "start": "88710",
    "end": "94350"
  },
  {
    "text": "is today which started in 2018 from concepts that we've been doing in production between both from pivotal",
    "start": "94350",
    "end": "100530"
  },
  {
    "text": "over the last seven or eight years and we wanted to kind of bring all those great ideologies to this container",
    "start": "100530",
    "end": "106649"
  },
  {
    "text": "ecosystem and bring kind of some of those methodologies there and so at the",
    "start": "106649",
    "end": "112409"
  },
  {
    "text": "end when you actually build an image you get this image that allows you to have these reproducible builds that allow you",
    "start": "112409",
    "end": "118530"
  },
  {
    "text": "to kind of inspect these images without and unpacking the image itself and create images that have like these",
    "start": "118530",
    "end": "125240"
  },
  {
    "text": "logical layer mappings and so as a project there's kind of a few important",
    "start": "125240",
    "end": "131940"
  },
  {
    "text": "parts of the cloud native Belle PACs project there's at its core the specification itself and",
    "start": "131940",
    "end": "137380"
  },
  {
    "text": "we like to call lifecycle kind of the implementation of the spec and so",
    "start": "137380",
    "end": "142580"
  },
  {
    "text": "there's kind of two different contracts that are there there's the bill pack API",
    "start": "142580",
    "end": "147830"
  },
  {
    "text": "which is the part where lifecycle will actually go ahead and run the bill packs and execute them to actually produce",
    "start": "147830",
    "end": "153410"
  },
  {
    "text": "that image as well as the platform API so a platform can BC take the lifecycle",
    "start": "153410",
    "end": "159620"
  },
  {
    "text": "and run the resulting images and kind of launch the resulting processes and stuff",
    "start": "159620",
    "end": "166190"
  },
  {
    "text": "and set the environments and things like that and so the platform that we provide out",
    "start": "166190",
    "end": "171800"
  },
  {
    "text": "of the project is this project called PAC which is geared towards local development and it's kind of our",
    "start": "171800",
    "end": "176930"
  },
  {
    "text": "reference implementation of what a platform could look like geared towards local development with like a local docker daemon and so this is a",
    "start": "176930",
    "end": "185060"
  },
  {
    "text": "high-level diagram that shows kind of taking a source image or taking source",
    "start": "185060",
    "end": "190160"
  },
  {
    "text": "running it through PAC and kind of getting those resulting image and Emily's gonna run through a demo that",
    "start": "190160",
    "end": "196310"
  },
  {
    "start": "196000",
    "end": "660000"
  },
  {
    "text": "kind of walks through what that looks like and you'll have a much better understanding of what that diagram looks like all right so let's dive right in I",
    "start": "196310",
    "end": "204470"
  },
  {
    "text": "have a sample node application here and I have a pack CLI installed I'm gonna",
    "start": "204470",
    "end": "210500"
  },
  {
    "text": "run PAC build I'm gonna provide it with a tag in a registry where I can export",
    "start": "210500",
    "end": "218570"
  },
  {
    "text": "this app I can provide the publish flag which tells PAC to export the image",
    "start": "218570",
    "end": "223579"
  },
  {
    "text": "directly into the registry which is the most performant way to run pack so let's give this a go",
    "start": "223579",
    "end": "230290"
  },
  {
    "text": "so what PAC is doing here is taking the",
    "start": "232000",
    "end": "237650"
  },
  {
    "text": "lifecycle and running it in a series of docker containers in my local docker demon in a minute we're gonna dive into",
    "start": "237650",
    "end": "244340"
  },
  {
    "text": "the details of what is specifically happening in each of these lifecycle steps you can see the headings for the",
    "start": "244340",
    "end": "250220"
  },
  {
    "text": "different lifecycle phases but zooming out at a really high level what we've done here is selected a group of bill",
    "start": "250220",
    "end": "257419"
  },
  {
    "text": "paxton during this lifecycle phase called detection so here we have the",
    "start": "257419",
    "end": "262940"
  },
  {
    "text": "node engine bill pack and the yarn pack and their virgins you might notice that this version is called old which is",
    "start": "262940",
    "end": "269530"
  },
  {
    "text": "something we're going to come back to you and update later if you're clever you might have guessed that now in the",
    "start": "269530",
    "end": "275320"
  },
  {
    "text": "building phase each of these build packs execute and it contributes dependencies",
    "start": "275320",
    "end": "281200"
  },
  {
    "text": "that end up at the final image so the node engine build pack is contributing nodejs",
    "start": "281200",
    "end": "286930"
  },
  {
    "text": "the yarn build pack is contributing modules they are writing these",
    "start": "286930",
    "end": "293560"
  },
  {
    "text": "dependencies to specific locations in the file system and at the end here the exporter is wrapping all of this up to",
    "start": "293560",
    "end": "301000"
  },
  {
    "text": "create an image so now that I've built this image I can use pack to learn a",
    "start": "301000",
    "end": "306580"
  },
  {
    "text": "little bit more about my image so let's use this pack inspect image command and",
    "start": "306580",
    "end": "312670"
  },
  {
    "text": "we can see some info here so we see what build packs were used to create the image the dependency and a players are",
    "start": "312670",
    "end": "321010"
  },
  {
    "text": "added on top of what we call a run image which provides the operating system in",
    "start": "321010",
    "end": "326080"
  },
  {
    "text": "those dependencies and you can see information about the tag where we found the run image and the specific run image",
    "start": "326080",
    "end": "332260"
  },
  {
    "text": "we use at build time finally if we provide the build materials flag to you",
    "start": "332260",
    "end": "338950"
  },
  {
    "text": "this command we can see more details about the specific dependencies that were installed into this image so for",
    "start": "338950",
    "end": "345669"
  },
  {
    "text": "example we can see that we installed node 10 16 3 we can see the URI it",
    "start": "345669",
    "end": "352000"
  },
  {
    "text": "originally came from and the licenses associated with it stuff like that so",
    "start": "352000",
    "end": "359290"
  },
  {
    "text": "zooming back out now we can look at this diagram with what's going on and pack and understand it a little more deeply",
    "start": "359290",
    "end": "366690"
  },
  {
    "text": "when pack executed those lifecycle steps the containers it ran and were created",
    "start": "366690",
    "end": "372910"
  },
  {
    "text": "from an image called a builder image and the builder image is a packaging of a set of build packs and a life cycle",
    "start": "372910",
    "end": "379480"
  },
  {
    "text": "they're compatible with so pack adds the source code to containers created from",
    "start": "379480",
    "end": "385780"
  },
  {
    "text": "the Builder image runs the lifecycle phases and in the end you get an app image that starts with a run image which",
    "start": "385780",
    "end": "393039"
  },
  {
    "text": "it comes from our stack layer which represents the operating system in this pack which is with semantically meaningful",
    "start": "393039",
    "end": "400370"
  },
  {
    "text": "layers one for each dependency and the application layer and the modifications the bill pack might have made to your",
    "start": "400370",
    "end": "407030"
  },
  {
    "text": "application on top so diving a little bit into what happens in each lifecycle",
    "start": "407030",
    "end": "412820"
  },
  {
    "text": "step during the detect phase the lifecycle executes the detect binary in",
    "start": "412820",
    "end": "419000"
  },
  {
    "text": "each build pack and what happens during the detect phase is the build pack looks at the application source and determines",
    "start": "419000",
    "end": "425630"
  },
  {
    "text": "whether and how it should run so for example if I have a package tree son and",
    "start": "425630",
    "end": "430639"
  },
  {
    "text": "a yarn lock file the node build pack is going to say yes I can build this app",
    "start": "430639",
    "end": "435950"
  },
  {
    "text": "and the yarn build pack will - and together they'll make a build pack group that will execute at Build time in a",
    "start": "435950",
    "end": "442460"
  },
  {
    "text": "case where for example we didn't have a yarn lock file we might get the node and NPM build packs collaborating to build",
    "start": "442460",
    "end": "449030"
  },
  {
    "text": "the application so detection happens in parallel in order to be performant",
    "start": "449030",
    "end": "458300"
  },
  {
    "text": "but we still want to allow the bill packs to collaborate with each other because one build pack might need a",
    "start": "458300",
    "end": "463400"
  },
  {
    "text": "dependency from an upstream build pack in order to execute its piece of the build so this is facilitated with a",
    "start": "463400",
    "end": "469850"
  },
  {
    "text": "concept called the build plan so as the bill packs detects they can write into the build plan dependencies that they",
    "start": "469850",
    "end": "476960"
  },
  {
    "text": "either provide or require so after detection has run on all the bill paxton",
    "start": "476960",
    "end": "482050"
  },
  {
    "text": "looks at the output to find a build plan where all the provides match requires",
    "start": "482050",
    "end": "487130"
  },
  {
    "text": "and that's the first group where that is true as the group that's selected and",
    "start": "487130",
    "end": "492349"
  },
  {
    "text": "those build packs will run on this first build we're going to skip over restoring",
    "start": "492349",
    "end": "498050"
  },
  {
    "text": "analyze because they become important for efficiency on the rebuild step so",
    "start": "498050",
    "end": "503330"
  },
  {
    "text": "we're gonna move ahead to the build phase of the lifecycle when the",
    "start": "503330",
    "end": "508789"
  },
  {
    "text": "lifecycle executes build the lifecycle builder will call the build binary and",
    "start": "508789",
    "end": "514669"
  },
  {
    "text": "each build pack and this is really like the meat of the build and what most people think about when they think about",
    "start": "514669",
    "end": "519890"
  },
  {
    "text": "build packs so the build packs will run they'll look at the source code and they",
    "start": "519890",
    "end": "525709"
  },
  {
    "text": "will provide dependencies like nodejs or yarn or node modules in layers right",
    "start": "525709",
    "end": "535930"
  },
  {
    "text": "now they're directories on the file system so once we have those directories",
    "start": "535930",
    "end": "541570"
  },
  {
    "text": "on the file system we can turn each of those directories into a layer and so",
    "start": "541570",
    "end": "546820"
  },
  {
    "text": "the export phase basically converts all that stuff into the resulting image that you can run at the end of it and so once",
    "start": "546820",
    "end": "555190"
  },
  {
    "text": "we've done export you actually have a runnable image that you could duck a run you can run your coop cluster and what-have-you and finally there's the",
    "start": "555190",
    "end": "562390"
  },
  {
    "text": "caching phase and so this is what we're this is done to basically take anything that a Bill pack author my team that can",
    "start": "562390",
    "end": "570250"
  },
  {
    "text": "be used to basically save steps or processing time in a future build or a subsequent build so an example this",
    "start": "570250",
    "end": "577300"
  },
  {
    "text": "might be like the node modules once we have that you don't have to fresh install it every time so kind of taking",
    "start": "577300",
    "end": "585250"
  },
  {
    "text": "a different view and slice of what this looks like if we look at what the docker image layers could look like here on the",
    "start": "585250",
    "end": "593770"
  },
  {
    "text": "right-hand side so in the export phase we're going to in the Bill pack that Emily showed off we have that no models",
    "start": "593770",
    "end": "600760"
  },
  {
    "text": "directory of all that kind of be node library dependencies that are included in there there's no engine which",
    "start": "600760",
    "end": "607660"
  },
  {
    "text": "represents the runtime itself like the version of node you're going to run on that was like 10 16 3 in that example",
    "start": "607660",
    "end": "613200"
  },
  {
    "text": "the application specific code so this lives in the workspace directory but basically the source code and any",
    "start": "613200",
    "end": "619420"
  },
  {
    "text": "mutations that they'll pack needs to do on that directory to make the app runnable as well as the stack image and",
    "start": "619420",
    "end": "626350"
  },
  {
    "text": "then any of the layered and build configuration sits in a layer and those make up kind of the OCI image that gets",
    "start": "626350",
    "end": "633970"
  },
  {
    "text": "run and then in addition to that we have these cache layers which can be used and",
    "start": "633970",
    "end": "640750"
  },
  {
    "text": "kept separate from the actual export image so as Bill pact author you can have say like the NPM cache live in this",
    "start": "640750",
    "end": "647860"
  },
  {
    "text": "cache layer because you don't actually need it to boot or run your application so we have the separate set of things",
    "start": "647860",
    "end": "655120"
  },
  {
    "text": "that we want to cache that we may or may not want in the final exported image and",
    "start": "655120",
    "end": "660820"
  },
  {
    "start": "660000",
    "end": "1058000"
  },
  {
    "text": "so with that we'll look at our rebuild on this exactly not as I made changes so",
    "start": "660820",
    "end": "666550"
  },
  {
    "text": "let's come back to our app and we pointed out that we installed node 10 16 3 so let's say I want to update the",
    "start": "666550",
    "end": "675190"
  },
  {
    "text": "minor version of node when I first ran this pack build I didn't supply builder because I have a default builder set on",
    "start": "675190",
    "end": "682960"
  },
  {
    "text": "the system but let's take a look at the default builder that we're using so we",
    "start": "682960",
    "end": "696730"
  },
  {
    "text": "can use to pack inspect builder command to look at all the bill packs on this builder and the order they protect in we",
    "start": "696730",
    "end": "703660"
  },
  {
    "text": "can see this old version of the node engine build pack so I have an updated",
    "start": "703660",
    "end": "709480"
  },
  {
    "text": "builder here that we can look at and it's almost exactly the same but it has",
    "start": "709480",
    "end": "715000"
  },
  {
    "text": "the new version of the build pack so let's say I want to rebuild with this new builder I can add the Builder flag",
    "start": "715000",
    "end": "727090"
  },
  {
    "text": "here and supply the name of this builder image now generally you wouldn't",
    "start": "727090",
    "end": "738160"
  },
  {
    "text": "necessarily update your builders by pointing at a different time you'd be pointing at one builder tag that a group",
    "start": "738160",
    "end": "745870"
  },
  {
    "text": "like cloud foundry or Heroku would constantly be publishing bill pack updates too but we're gonna do it like this for the sake of the demo and we can",
    "start": "745870",
    "end": "753130"
  },
  {
    "text": "see on rebuild that our new known engine bill pack as detected we're restoring",
    "start": "753130",
    "end": "759070"
  },
  {
    "text": "cache layers and metadata we're gonna describe a little bit more about what's going on there in a second and during",
    "start": "759070",
    "end": "764740"
  },
  {
    "text": "the build phase the node engine build pack sees that the layer is out of date",
    "start": "764740",
    "end": "770650"
  },
  {
    "text": "compared to what it wants the version of this dependency to be so we'll install the newer version of known the yarn",
    "start": "770650",
    "end": "778090"
  },
  {
    "text": "built back can actually go ahead and just reuse the cache layer because this version I've noticed a bi compatible with the previous version when we come",
    "start": "778090",
    "end": "785860"
  },
  {
    "text": "down into the exporting things we can see that only one new layer with an",
    "start": "785860",
    "end": "792280"
  },
  {
    "text": "actual dependency in it had to be added and uploaded here the config layer gets regenerated every",
    "start": "792280",
    "end": "799470"
  },
  {
    "text": "time so we can pack inspect our image",
    "start": "799470",
    "end": "805290"
  },
  {
    "text": "here and look at the dependencies and we can see that we by just pointing at a",
    "start": "805290",
    "end": "812520"
  },
  {
    "text": "new a builder we were able to get updates to our dependencies so let's",
    "start": "812520",
    "end": "818700"
  },
  {
    "text": "dive into a little bit of detail what was happening in each of those lifecycle containers detect same as last time",
    "start": "818700",
    "end": "824810"
  },
  {
    "text": "during restore layers that we put into the cache were returned to the",
    "start": "824810",
    "end": "831210"
  },
  {
    "text": "filesystem in order to help build packs build more quickly either because they",
    "start": "831210",
    "end": "836940"
  },
  {
    "text": "need those dependencies at Build time or because it's easier to make a small change to the cache layer than to",
    "start": "836940",
    "end": "842640"
  },
  {
    "text": "regenerate it from scratch during analyze the analyzer looks at the",
    "start": "842640",
    "end": "849210"
  },
  {
    "text": "actual OCI image that was generated last time and writes metadata about the layers to the filesystem so an example",
    "start": "849210",
    "end": "856650"
  },
  {
    "text": "of this might be like a nude tamil file describing the version of node that was in the previous image and it will",
    "start": "856650",
    "end": "863430"
  },
  {
    "text": "include metadata like the version that was in that layer the reason we do this is so that build packs can use this",
    "start": "863430",
    "end": "869580"
  },
  {
    "text": "information to decide whether they want to bother regenerating a layer or not so if a build pack says you know this",
    "start": "869580",
    "end": "878040"
  },
  {
    "text": "version is the version I want and this is a exported layer they can just leave",
    "start": "878040",
    "end": "883470"
  },
  {
    "text": "that file and do nothing and the layer will be reused from the previous image",
    "start": "883470",
    "end": "888620"
  },
  {
    "text": "finally the build phase executes like we saw in the first build except that now",
    "start": "888620",
    "end": "894120"
  },
  {
    "text": "the build packs can use the metadata to only rebuild layers that they want to change they can use the cache to speed",
    "start": "894120",
    "end": "900630"
  },
  {
    "text": "up that build so what's different this time with export is that we actually",
    "start": "900630",
    "end": "905820"
  },
  {
    "text": "only have to export or update layers that have actually changed so anything that hasn't changed so like the no",
    "start": "905820",
    "end": "912360"
  },
  {
    "text": "models directory from before doesn't actually need to be repost the registry because if we're reusing that existing",
    "start": "912360",
    "end": "919230"
  },
  {
    "text": "layer from the registry itself so we can simply speed up time to export of the",
    "start": "919230",
    "end": "925470"
  },
  {
    "text": "stuff that we actually need to do and then similarly with caching there's check show some of each the different",
    "start": "925470",
    "end": "932280"
  },
  {
    "text": "caching layers that we want to use and so in this case we only need to update the note engine cache layer because",
    "start": "932280",
    "end": "939390"
  },
  {
    "text": "that's the only one that's actually updated we didn't even actually run yarn install to actually update those",
    "start": "939390",
    "end": "945360"
  },
  {
    "text": "dependencies could we're just reusing that layer so going through kind of the layer breakdown example again as we go",
    "start": "945360",
    "end": "951720"
  },
  {
    "text": "through it so Emily I was talking about restore so we're actually go ahead and restore those images are those caching",
    "start": "951720",
    "end": "957720"
  },
  {
    "text": "layers if possible if they're available and make those available to build what analysis we're going to go ahead and",
    "start": "957720",
    "end": "963720"
  },
  {
    "text": "read that configuration so that node Tamil file Emily I was talking about and provide that so the bill pact",
    "start": "963720",
    "end": "969390"
  },
  {
    "text": "can make intelligent decisions during the build process of whether it needs to recalculate those layers and then once",
    "start": "969390",
    "end": "975540"
  },
  {
    "text": "we've actually set up and done the build parts that we need to do we can export and in this case for example we've run",
    "start": "975540",
    "end": "982740"
  },
  {
    "text": "through we're just updating the configuration and the node engine because in the yarn build path we're not",
    "start": "982740",
    "end": "987840"
  },
  {
    "text": "actually running yard and solver just reusing that layer and then with caching there's a similar optimisation where",
    "start": "987840",
    "end": "995300"
  },
  {
    "text": "since we're not actually changing any other cache layers we're only going to be updating the node engine one for the",
    "start": "995300",
    "end": "1001610"
  },
  {
    "text": "cache so it can be used in an updated version of it in the future builds that",
    "start": "1001610",
    "end": "1006620"
  },
  {
    "text": "we're doing so that's kind of what it looks like to just do like development",
    "start": "1006620",
    "end": "1011660"
  },
  {
    "text": "where you're just building images and running them but once you're actually doing that you're probably going to be",
    "start": "1011660",
    "end": "1016940"
  },
  {
    "text": "putting this in production and running it and so one of the easiest ways to illustrate some of the day two or kind",
    "start": "1016940",
    "end": "1022760"
  },
  {
    "text": "of production operations you're going to do would be like patching this nodejs application in case there's an operating",
    "start": "1022760",
    "end": "1028520"
  },
  {
    "text": "system well with cv that you have to handle and so snick released an article this year about you know like the top 30",
    "start": "1028520",
    "end": "1036050"
  },
  {
    "text": "docker images has all these vulnerabilities in them and actually you",
    "start": "1036050",
    "end": "1042230"
  },
  {
    "text": "can actually just swap out kind of the underlying base image that we've been talking about to actually mitigate a",
    "start": "1042230",
    "end": "1047360"
  },
  {
    "text": "good chunk of those CDs so just updating your keeping your operating system up-to-date actually handles a good",
    "start": "1047360",
    "end": "1053420"
  },
  {
    "text": "amount of the vulnerabilities that people been finding in these very popular docker images and so Emily's gonna walk through what that looks like",
    "start": "1053420",
    "end": "1059630"
  },
  {
    "text": "with clouded Belle packs reason pack all right so let's come back to look at",
    "start": "1059630",
    "end": "1067000"
  },
  {
    "text": "our image here so the operating system",
    "start": "1067000",
    "end": "1072760"
  },
  {
    "text": "and the operating system packages are in what we call the base layers which come from the space image here we can see",
    "start": "1072760",
    "end": "1080230"
  },
  {
    "text": "that we originally looked at this one of these run images tags to find a run",
    "start": "1080230",
    "end": "1087040"
  },
  {
    "text": "image to build on top of the tool we'll select the run image that's on the",
    "start": "1087040",
    "end": "1092530"
  },
  {
    "text": "registry you're exporting to for maximum efficiency and then this base image includes the specific image that we",
    "start": "1092530",
    "end": "1099250"
  },
  {
    "text": "built on top of that running time like the image digest so I actually have an",
    "start": "1099250",
    "end": "1105429"
  },
  {
    "text": "updated version of this run image here and I'm gonna push it up to my registry",
    "start": "1105429",
    "end": "1114029"
  },
  {
    "text": "and now we can rebase this application and it should replace the base layers on",
    "start": "1114179",
    "end": "1121900"
  },
  {
    "text": "this image with the new base layers we pushed to the registry I'm going to do",
    "start": "1121900",
    "end": "1127540"
  },
  {
    "text": "with the publish like oh my gosh okay you can see it's much faster when you're",
    "start": "1127540",
    "end": "1133480"
  },
  {
    "text": "operating directly against the registry so now the weave rebase this image we",
    "start": "1133480",
    "end": "1140530"
  },
  {
    "text": "can take a look and I don't know if remember the SHA from last time you probably don't but the base layers",
    "start": "1140530",
    "end": "1147070"
  },
  {
    "text": "have changed and I'm realizing we forgot to show this image actually runs last",
    "start": "1147070",
    "end": "1152440"
  },
  {
    "text": "time so that we've made a couple changes to it let's actually pull it down to run it not that one",
    "start": "1152440",
    "end": "1161760"
  },
  {
    "text": "I'm just giving it a little environment variables pork to run on so let's give this a go",
    "start": "1171020",
    "end": "1183290"
  },
  {
    "text": "so you probably have a existing running",
    "start": "1183290",
    "end": "1191810"
  },
  {
    "text": "thing on that or stop it or just give it let's just do it nine different port",
    "start": "1191810",
    "end": "1196950"
  },
  {
    "text": "here for a second alright guys I didn't clean up from practice okay there we go so let's come",
    "start": "1196950",
    "end": "1208020"
  },
  {
    "text": "over here and this application is very interesting I just grabbed a Cloud",
    "start": "1208020",
    "end": "1214350"
  },
  {
    "text": "Foundry sample application but you can see that just by running pack build we were able to generate an image that we",
    "start": "1214350",
    "end": "1220830"
  },
  {
    "text": "can run and these updates have allowed us to keep working the image so let's",
    "start": "1220830",
    "end": "1232350"
  },
  {
    "text": "talk about what is happening during rebase image normally have OS layers and",
    "start": "1232350",
    "end": "1239790"
  },
  {
    "text": "language runtime layers and application layers on top of that so we maintain a logical separation between the",
    "start": "1239790",
    "end": "1245640"
  },
  {
    "text": "application layers and the operating system layers and operating system packages so imagine there's a CBE in the",
    "start": "1245640",
    "end": "1252570"
  },
  {
    "text": "operating system we can upload to the registry a new image that contains a",
    "start": "1252570",
    "end": "1258480"
  },
  {
    "text": "patched operating system and these two images have a guaranteed between them",
    "start": "1258480",
    "end": "1265350"
  },
  {
    "text": "called ABI compatibility so application binary interface compatibility and what that means is all of these layers these",
    "start": "1265350",
    "end": "1272550"
  },
  {
    "text": "application layers that we've built can run exactly as they are on top of the",
    "start": "1272550",
    "end": "1278310"
  },
  {
    "text": "new you base layers and this because we're building on top of a boon to Bionic this is a guarantee provided to",
    "start": "1278310",
    "end": "1284220"
  },
  {
    "text": "us by canonical so what we can do is create a new image directly against the",
    "start": "1284220",
    "end": "1289500"
  },
  {
    "text": "registry not by rebuilding or re uploading anything other than a config",
    "start": "1289500",
    "end": "1295200"
  },
  {
    "text": "file that describes an image that combines these base layers for the application layers",
    "start": "1295200",
    "end": "1300630"
  },
  {
    "text": "and a manifest file for that image so that's a great example of like doing it",
    "start": "1300630",
    "end": "1307740"
  },
  {
    "text": "for a single app but I mean if you're rolling this out in production you're probably not doing it for a single application you're probably gonna be",
    "start": "1307740",
    "end": "1312990"
  },
  {
    "text": "doing at scale with the cluster of applications out there and so potentially if you run to a thing where",
    "start": "1312990",
    "end": "1320400"
  },
  {
    "text": "there is a CV that you have to apply you have to actually deal with that for every single application in your fleet and that means that you have to figure",
    "start": "1320400",
    "end": "1328830"
  },
  {
    "text": "out some mitigation strategy for writing this with docker to figure out like how that actually works right so if you're",
    "start": "1328830",
    "end": "1335160"
  },
  {
    "text": "doing this what docker file traditionally that means for every different base image you have to actually figure out a strategy for",
    "start": "1335160",
    "end": "1341130"
  },
  {
    "text": "actually mitigating that for each different base image you're doing and then in the best case scenario where",
    "start": "1341130",
    "end": "1346230"
  },
  {
    "text": "it's all the same you still have to do a rebuild across the entire fleet for every type of application you're running",
    "start": "1346230",
    "end": "1352050"
  },
  {
    "text": "which if you have a small fleet that maybe that's a few hours to a few days to just even do the rebuild before you",
    "start": "1352050",
    "end": "1358140"
  },
  {
    "text": "actually roll it out in the worst case if it doesn't rebuild cleaning you have to find engineering time to actually go",
    "start": "1358140",
    "end": "1363720"
  },
  {
    "text": "ahead and fix your application to account for the new changes with those",
    "start": "1363720",
    "end": "1370200"
  },
  {
    "text": "patches and so we're gonna take a look at what that looks like",
    "start": "1370200",
    "end": "1375660"
  },
  {
    "start": "1375000",
    "end": "1967000"
  },
  {
    "text": "doing that with kpac with cloud metal packs so we talked about how by",
    "start": "1375660",
    "end": "1385970"
  },
  {
    "text": "implementing the platform API any platform to take advantage of the core functionality of the lifecycle and the",
    "start": "1385970",
    "end": "1392760"
  },
  {
    "text": "cloud native build packs building technology so we talked about one",
    "start": "1392760",
    "end": "1398850"
  },
  {
    "text": "platform which was pack and pack provides the UX has optimized for a developer workstation it's a local CLI",
    "start": "1398850",
    "end": "1405720"
  },
  {
    "text": "it has an imperative flow now we're gonna talk about key pack which is a pivotal open source project that uses a",
    "start": "1405720",
    "end": "1413220"
  },
  {
    "text": "set of custom kubernetes resources and controllers to manage many images and it",
    "start": "1413220",
    "end": "1421110"
  },
  {
    "text": "provides a declarative API and it's well-suited to rebuilding many images",
    "start": "1421110",
    "end": "1428070"
  },
  {
    "text": "with Clannad build packs SQL so it's the same core building technology but wrapped in a UX",
    "start": "1428070",
    "end": "1433920"
  },
  {
    "text": "it's optimized for a different use case so let's take a minute and look at an",
    "start": "1433920",
    "end": "1442350"
  },
  {
    "text": "architectural overview of k pack these boxes highlighted and teal are custom",
    "start": "1442350",
    "end": "1449850"
  },
  {
    "text": "resources in K pack at the heart of K pack is the image resource so in the",
    "start": "1449850",
    "end": "1456870"
  },
  {
    "text": "image resource you can declaratively describe the image we want to see you living at a particular tag in the",
    "start": "1456870",
    "end": "1464100"
  },
  {
    "text": "container registry so you can say I want source from this branch from my git repo",
    "start": "1464100",
    "end": "1469770"
  },
  {
    "text": "and I want it to be built with a specific builder and then every time that the reality falls out of date with",
    "start": "1469770",
    "end": "1477270"
  },
  {
    "text": "the desired configuration either because uh gopac gets updated or the source changes ki pack will schedule a bill so an image",
    "start": "1477270",
    "end": "1485850"
  },
  {
    "text": "is a mutable config and every time that the system reconciles and makes an",
    "start": "1485850",
    "end": "1492660"
  },
  {
    "text": "immutable build so it builds map 1 2 1 2 die dress in the image registry and this",
    "start": "1492660",
    "end": "1498330"
  },
  {
    "text": "image describes the desired state at a mutable tag so let's go ahead and take a",
    "start": "1498330",
    "end": "1506340"
  },
  {
    "text": "look at",
    "start": "1506340",
    "end": "1509029"
  },
  {
    "text": "so I'm gonna repeat the question for the recording the question is what goes to the right of this page so this system",
    "start": "1546100",
    "end": "1551779"
  },
  {
    "text": "and it is generating builds and that's great and all but like what is responsible for knowing what to do with",
    "start": "1551779",
    "end": "1558740"
  },
  {
    "text": "certain builds and also like do I want to do something different because it was built for a different reason like a",
    "start": "1558740",
    "end": "1564380"
  },
  {
    "text": "rebase we sort of think of that as outside of the scope of the cloud and",
    "start": "1564380",
    "end": "1572149"
  },
  {
    "text": "build packs project but there definitely are people building tools that use things like this as a building block in",
    "start": "1572149",
    "end": "1578899"
  },
  {
    "text": "the process of creating a higher level abstraction like the Rif team for",
    "start": "1578899",
    "end": "1584480"
  },
  {
    "text": "example like uses kpac as a component in their function service so they plug this",
    "start": "1584480",
    "end": "1592130"
  },
  {
    "text": "set of ceará DS in and you generate a bunch of images and then a larger set of",
    "start": "1592130",
    "end": "1598130"
  },
  {
    "text": "ceará DS that describe higher-level concepts like a function or an application take care of deploying those",
    "start": "1598130",
    "end": "1605950"
  },
  {
    "text": "but if you want to do",
    "start": "1605950",
    "end": "1611380"
  },
  {
    "text": "I think the bill PACs take responsibility for providing all the",
    "start": "1621770",
    "end": "1627290"
  },
  {
    "text": "information that a platform we need in order to make those determinations right",
    "start": "1627290",
    "end": "1633980"
  },
  {
    "text": "so like either creating a derivative image config so I want to rebase this one particular image that I have to put",
    "start": "1633980",
    "end": "1640760"
  },
  {
    "text": "the prod not just what's on master stuff like that yeah the build resources are",
    "start": "1640760",
    "end": "1657679"
  },
  {
    "text": "annotated with the reason for the bill",
    "start": "1657679",
    "end": "1661659"
  },
  {
    "text": "no problem you're making us jumping in here we're gonna get to other platforms later all",
    "start": "1663220",
    "end": "1670070"
  },
  {
    "text": "right sorry let's rebase multiple images so I have kpac installed here I have taken the",
    "start": "1670070",
    "end": "1679910"
  },
  {
    "text": "liberty of installing a builder image",
    "start": "1679910",
    "end": "1686150"
  },
  {
    "text": "here so I created that configuration that points at a tang and kpac has",
    "start": "1686150",
    "end": "1696470"
  },
  {
    "text": "populated it with the bill PACs it found on this image and that builder image has",
    "start": "1696470",
    "end": "1702290"
  },
  {
    "text": "a reference tool run image tag and we can also see the particular digest reference of the run image at that Tang",
    "start": "1702290",
    "end": "1710230"
  },
  {
    "text": "also created a couple images here demo apps 1 3 3 they're simple Java apps and",
    "start": "1710230",
    "end": "1718460"
  },
  {
    "text": "we're gonna see what it would look like to rebase all of your images right now it's only 3 but this could easily on a",
    "start": "1718460",
    "end": "1725030"
  },
  {
    "text": "large cluster scale to many images being managed this way so let's first of all",
    "start": "1725030",
    "end": "1735140"
  },
  {
    "text": "let's talk about how these images got built because I think that's interesting if we go over here we're gonna have this",
    "start": "1735140",
    "end": "1743929"
  },
  {
    "text": "Long's utility we can look at the original build that was used to create",
    "start": "1743929",
    "end": "1751880"
  },
  {
    "text": "the first version of this image and this should look very familiar because this is almost exactly the",
    "start": "1751880",
    "end": "1758750"
  },
  {
    "text": "output you're getting from the packs e1ke pack ran the same lifecycle in a",
    "start": "1758750",
    "end": "1764150"
  },
  {
    "text": "series of containers in a pot and kubernetes but the like core technology",
    "start": "1764150",
    "end": "1769160"
  },
  {
    "text": "here being used is the same this is a Java app not like the known app that we",
    "start": "1769160",
    "end": "1774710"
  },
  {
    "text": "built originally so now that we have this app because it's being built with",
    "start": "1774710",
    "end": "1781670"
  },
  {
    "text": "the same life cycle as annotated with the same metadata so we can inspect this",
    "start": "1781670",
    "end": "1789350"
  },
  {
    "text": "image and see the Java build packs that contributed to this build and the",
    "start": "1789350",
    "end": "1795730"
  },
  {
    "text": "specific run image that we have here so like last time I actually have an",
    "start": "1795730",
    "end": "1803440"
  },
  {
    "text": "updated version of this run image that I'm not going to push up to the registry",
    "start": "1803440",
    "end": "1811120"
  },
  {
    "text": "so because k pack is watching the image at the builder tag and that includes a",
    "start": "1813460",
    "end": "1820760"
  },
  {
    "text": "run image tag it should see that this",
    "start": "1820760",
    "end": "1826670"
  },
  {
    "text": "run image the digest that this tag has changed and it will update the builder",
    "start": "1826670",
    "end": "1831860"
  },
  {
    "text": "for us it's gonna take a couple seconds so we're just gonna watch it goes there",
    "start": "1831860",
    "end": "1840350"
  },
  {
    "text": "it goes alright so now that this run images change Capek knows that all these",
    "start": "1840350",
    "end": "1846980"
  },
  {
    "text": "images need to be rebase in order to match their desired config so if we get",
    "start": "1846980",
    "end": "1852500"
  },
  {
    "text": "the builds before we ran this we only had one build for each app but now we",
    "start": "1852500",
    "end": "1857630"
  },
  {
    "text": "have extra builds these are real aces we",
    "start": "1857630",
    "end": "1863630"
  },
  {
    "text": "can see and a Nick was interested in seeing the reason for the bill so I wasn't planning on doing this but I'm",
    "start": "1863630",
    "end": "1869060"
  },
  {
    "text": "going to show you",
    "start": "1869060",
    "end": "1871540"
  },
  {
    "text": "if I cannot type it all right so you can",
    "start": "1878730",
    "end": "1885460"
  },
  {
    "text": "see the reason for this build was types back meaning that it's a rebus and if we",
    "start": "1885460",
    "end": "1892000"
  },
  {
    "text": "inspect the image we can see that we have updated the run image and simply by pushing this one run image it's able to",
    "start": "1892000",
    "end": "1900730"
  },
  {
    "text": "get a rebase of all the appropriate images on my cluster and we for this",
    "start": "1900730",
    "end": "1909100"
  },
  {
    "text": "example for a stack but this would work with a built a cup date as well thanks",
    "start": "1909100",
    "end": "1915400"
  },
  {
    "text": "Emily so I guess I'm kind of just recapping a little bit we we were talking about the",
    "start": "1915400",
    "end": "1920500"
  },
  {
    "text": "contacts before I guess the demo /x questions and you know like we're",
    "start": "1920500",
    "end": "1928120"
  },
  {
    "text": "talking about like how long it would actually take to mitigate this at scale if you're using like docker files in production and Emily you kind of",
    "start": "1928120",
    "end": "1935200"
  },
  {
    "text": "showcase like doing that rebase like it for her the only took a few minutes but you can imagine maybe it takes a little",
    "start": "1935200",
    "end": "1940750"
  },
  {
    "text": "bit longer if you have a bunch of different builds you have to do across entire fleet and so this is the thing",
    "start": "1940750",
    "end": "1946510"
  },
  {
    "text": "that scale is relatively well and actually can be done relatively quickly especially in comparison to what you",
    "start": "1946510",
    "end": "1953470"
  },
  {
    "text": "have to do with a rebuild per app so this is rebasing with kpac so just you",
    "start": "1953470",
    "end": "1960460"
  },
  {
    "text": "know another platform that is leveraging cloud and build packs with a totally different UX like we're talking about",
    "start": "1960460",
    "end": "1966790"
  },
  {
    "text": "and so really at the end of the day climb and Bill packs are kind of wound",
    "start": "1966790",
    "end": "1973540"
  },
  {
    "start": "1967000",
    "end": "2043000"
  },
  {
    "text": "to some of dr. next questions like building blocks where different platforms or services that want to take",
    "start": "1973540",
    "end": "1980410"
  },
  {
    "text": "a management can have different UX and parameters of what they want to do but it's just providing the primitives to",
    "start": "1980410",
    "end": "1985540"
  },
  {
    "text": "actually do image building for things like applications and so both plat",
    "start": "1985540",
    "end": "1991330"
  },
  {
    "text": "finding Roku are actually working on various climate bill packs to kind of take advantage of some of this stuff",
    "start": "1991330",
    "end": "1997500"
  },
  {
    "text": "with the Google cloud run project they have",
    "start": "1997500",
    "end": "2002640"
  },
  {
    "text": "a thing where you can click a button with Google cloud run and it will actually build an app using Bill packs",
    "start": "2002640",
    "end": "2007740"
  },
  {
    "text": "or docker files project RIF is a I just like function functions as a service",
    "start": "2007740",
    "end": "2015870"
  },
  {
    "text": "that basically uses cloud native bill packs as building blocks to kind of provide this like high-level abstraction",
    "start": "2015870",
    "end": "2022860"
  },
  {
    "text": "for building functions so at the end you still do get this OCI image that you can run but it's using their own set of CMBS",
    "start": "2022860",
    "end": "2030809"
  },
  {
    "text": "underneath to actually make that happen so build packs are being used kind of as",
    "start": "2030809",
    "end": "2036000"
  },
  {
    "text": "a foundational piece to actually provide this kind of image building service across a bunch of different platforms",
    "start": "2036000",
    "end": "2041789"
  },
  {
    "text": "and hopefully through the demos in this presentation you're able to see that",
    "start": "2041789",
    "end": "2047960"
  },
  {
    "start": "2043000",
    "end": "2168000"
  },
  {
    "text": "bill packs have a lot of pretty great properties surrounding them so when we talk about reusable one things that was",
    "start": "2047960",
    "end": "2054868"
  },
  {
    "text": "nice and the kpac demo is that like there was this same unified build pipeline of the lifecycle and using like",
    "start": "2054869",
    "end": "2061260"
  },
  {
    "text": "a very small subset of bill packs whereas if you ever deployed a file in production and your company you probably",
    "start": "2061260",
    "end": "2066510"
  },
  {
    "text": "have this kind of sprawling snowflakes of docker files per apps your checking in a docker file per repo and and all",
    "start": "2066510",
    "end": "2074638"
  },
  {
    "text": "the demo apps and apps that people are using bill packs on you're not checking in the actual build pack into your app",
    "start": "2074639",
    "end": "2081570"
  },
  {
    "text": "like it is a kind of separate thing that can be reused across multiple applications through the use of of",
    "start": "2081570",
    "end": "2088158"
  },
  {
    "text": "basically the build configuration the caching we can base we can choose what",
    "start": "2088159",
    "end": "2094440"
  },
  {
    "text": "we need to actually do work for rebuilding for both the image itself as well as pushing to the registry so",
    "start": "2094440",
    "end": "2100580"
  },
  {
    "text": "things that can be fast should be fast you saw through the node example that",
    "start": "2100580",
    "end": "2106349"
  },
  {
    "text": "we're using multiple kind of smaller modules bill packs a compose like this node bill pack so it means that if you",
    "start": "2106349",
    "end": "2114089"
  },
  {
    "text": "need to replace a certain component like maybe you want to I like a few years ago when iOS was thing and potentially the",
    "start": "2114089",
    "end": "2120450"
  },
  {
    "text": "platform you're working on doesn't support it you could write your own like I OGS engine bill packed us up that in",
    "start": "2120450",
    "end": "2125520"
  },
  {
    "text": "or I guess more realize realistic examples like if you're working with Java you need to replace the runtime you",
    "start": "2125520",
    "end": "2131160"
  },
  {
    "text": "can replace like the JDK or Jerry like Bill pack that's installing that and say you're on",
    "start": "2131160",
    "end": "2136540"
  },
  {
    "text": "you want to use the kind of Amazon's proprietary jdk in that case right and",
    "start": "2136540",
    "end": "2141640"
  },
  {
    "text": "so you could just write a bill pack that leverages the rest of those components but just replaces that one piece and",
    "start": "2141640",
    "end": "2147400"
  },
  {
    "text": "then finally they're kind of secured out of the gate with these authors who are actually maintaining and patching this",
    "start": "2147400",
    "end": "2152620"
  },
  {
    "text": "stuff with the metadata that's provided you don't actually have to unpack the docker image itself to kind of look at",
    "start": "2152620",
    "end": "2159040"
  },
  {
    "text": "it for compliance or other reasons there and with features like rebase you can actually roll out d0 patches relatively",
    "start": "2159040",
    "end": "2166020"
  },
  {
    "text": "quickly and so should check it out go to",
    "start": "2166020",
    "end": "2171130"
  },
  {
    "text": "the bill packs i/o website you can go and download basically the easiest way to get started is through the pack",
    "start": "2171130",
    "end": "2177160"
  },
  {
    "text": "CLI that we've demoed throughout this presentation the latest version is 0.5 most people don't have to go ahead and",
    "start": "2177160",
    "end": "2184330"
  },
  {
    "text": "like just write a bill pack to get started as part of the builders that are kind of suggested in the PAC CLI you can",
    "start": "2184330",
    "end": "2191110"
  },
  {
    "text": "use the hokum Cloud Foundry builders that support probably most of the languages you'll be worked you care or",
    "start": "2191110",
    "end": "2196510"
  },
  {
    "text": "work with today if you just go to the bill packs io sites you can check out documentation",
    "start": "2196510",
    "end": "2202630"
  },
  {
    "text": "for getting started can kind of walk through a lot of this stuff that we've talked about in this presentation we're",
    "start": "2202630",
    "end": "2208300"
  },
  {
    "text": "pretty active on slack working with various contributors if you want to get involved or have questions fairly active",
    "start": "2208300",
    "end": "2213820"
  },
  {
    "text": "on there there's a mailing list and then we also have a deep dive talk being done by Steven and Joe tomorrow at 5:20 where",
    "start": "2213820",
    "end": "2221470"
  },
  {
    "text": "they're gonna kind of dig into production build packs and kind of how they work and you can get a better feel",
    "start": "2221470",
    "end": "2227200"
  },
  {
    "text": "of like what it takes actually kind of write this stuff in brush them Thanks",
    "start": "2227200",
    "end": "2233790"
  },
  {
    "text": "looks like we have like seven minutes so do people have someone have questions if",
    "start": "2237500",
    "end": "2243170"
  },
  {
    "start": "2238000",
    "end": "2271000"
  },
  {
    "text": "you do please come SEP up on the mic so it can get recorded for the video this",
    "start": "2243170",
    "end": "2255050"
  },
  {
    "text": "is relatively quick one some of this seems to overlap at least conceptually with the cloud native application bundle",
    "start": "2255050",
    "end": "2260540"
  },
  {
    "text": "spec do you know if anybody's working on combining this with that or do they conflict with each other or do they",
    "start": "2260540",
    "end": "2266210"
  },
  {
    "text": "complement each other or like are they totally unaware of each other right now we're aware of the cloud Nate C NAB",
    "start": "2266210",
    "end": "2275020"
  },
  {
    "text": "project I don't think we're doing anything that conflicts with it we're not really doing anything that also",
    "start": "2275020",
    "end": "2281600"
  },
  {
    "text": "makes us like make a scene ab out of it so like you can't do it PAC building get us C not out of that project but I think",
    "start": "2281600",
    "end": "2290090"
  },
  {
    "text": "C NAB has a significant bigger scope as far as like packaging concerns right because it talks about both like what",
    "start": "2290090",
    "end": "2296330"
  },
  {
    "text": "you're installing locally on your machine and how it like it's a pretty generic it has it's a huge specification",
    "start": "2296330",
    "end": "2301910"
  },
  {
    "text": "with a pretty generic scope of like what it can contain and I think the the bill",
    "start": "2301910",
    "end": "2307490"
  },
  {
    "text": "PACs project is much more concerned around deploying like services and applications in kind of those use cases",
    "start": "2307490",
    "end": "2313010"
  },
  {
    "text": "to production",
    "start": "2313010",
    "end": "2315790"
  },
  {
    "text": "all right could you explain how this might integrate with your CI CD server",
    "start": "2323680",
    "end": "2329290"
  },
  {
    "text": "do you just run pack commands in there or how do you run it so you can as like",
    "start": "2329290",
    "end": "2337090"
  },
  {
    "text": "a simple first path start by running pack in a CI CD server but the more up",
    "start": "2337090",
    "end": "2342130"
  },
  {
    "text": "way to do it is to integrate the lifecycle directly with some of these CI CD tools so one example is we provide",
    "start": "2342130",
    "end": "2348580"
  },
  {
    "text": "like template in the Tecton catalog Tecton is like an example CI CD tool and",
    "start": "2348580",
    "end": "2355120"
  },
  {
    "text": "it will just execute the lifecycle directly in a series of containers so the Tecton tool itself is doing the",
    "start": "2355120",
    "end": "2363580"
  },
  {
    "text": "orchestration and that's nice because you don't have the problem of like running docker in docker like you would",
    "start": "2363580",
    "end": "2370030"
  },
  {
    "text": "if you used a pack C like so directly integrating a lifecycle is better where it's possible yeah",
    "start": "2370030",
    "end": "2375820"
  },
  {
    "start": "2375000",
    "end": "2438000"
  },
  {
    "text": "that being said it's pretty easy to think like leverage and run it on like a",
    "start": "2375820",
    "end": "2380830"
  },
  {
    "text": "circle or Travis or some of the well-known third-party eyesore services",
    "start": "2380830",
    "end": "2386110"
  },
  {
    "text": "hey it seems like the process would be if I'm a developer that I'm still coding locally on everything then using Packer",
    "start": "2386110",
    "end": "2393040"
  },
  {
    "text": "kpac to deploy it out to my cluster have you all looked at integrating with some of the other tools not integrating but",
    "start": "2393040",
    "end": "2400210"
  },
  {
    "text": "taking the same approach as well for like local development so things like octet oh and telepresence things that",
    "start": "2400210",
    "end": "2405970"
  },
  {
    "text": "can sync changes over to a running container is that completely out of scope of what you're trying to do with packs does that make sense what I'm",
    "start": "2405970",
    "end": "2412990"
  },
  {
    "text": "asking so you're talking about sort of like as you're developing syncing and updating on the fly yeah it's definitely",
    "start": "2412990",
    "end": "2418780"
  },
  {
    "text": "something we've talked about I don't think we have a proposal",
    "start": "2418780",
    "end": "2424710"
  },
  {
    "text": "yeah we and so we've talked about like in the spec there's actually been developing that we've talked about it's",
    "start": "2437430",
    "end": "2444460"
  },
  {
    "start": "2438000",
    "end": "2603000"
  },
  {
    "text": "not implemented yet and there's probably still much more work to be done on it so I don't think we have anything that does",
    "start": "2444460",
    "end": "2451210"
  },
  {
    "text": "exactly what you're talking about but it's definitely something that is not out of scope it's just a lot of the",
    "start": "2451210",
    "end": "2457600"
  },
  {
    "text": "focuses today since we're still in beta has been on kind of production use cases",
    "start": "2457600",
    "end": "2462640"
  },
  {
    "text": "and in production ization so getting like production level images and running them and and having a good process for",
    "start": "2462640",
    "end": "2468280"
  },
  {
    "text": "maintaining those things but we're definitely interested in both like better sort around testing and",
    "start": "2468280",
    "end": "2473650"
  },
  {
    "text": "development as well going back to this yet going back to the CI CD question",
    "start": "2473650",
    "end": "2479040"
  },
  {
    "text": "does the lifecycle also include like QA automation scenarios and all that or",
    "start": "2479040",
    "end": "2485530"
  },
  {
    "text": "this is life cycle only just packing and exporting the image out from the CI CD",
    "start": "2485530",
    "end": "2496120"
  },
  {
    "text": "perspective one of the spike in CI CD there these are called pipelines right you were you have the build stage you",
    "start": "2496120",
    "end": "2502990"
  },
  {
    "text": "have like an automation test stage acceptance test or whatever so that is that incorporated into life cycle that's",
    "start": "2502990",
    "end": "2509770"
  },
  {
    "text": "what my question is No okay so like how like one example how you might fit into",
    "start": "2509770",
    "end": "2516040"
  },
  {
    "text": "a pipeline is say you have source code you might want to run your unit test first and then you use the life cycle to",
    "start": "2516040",
    "end": "2523000"
  },
  {
    "text": "build an image and then that image becomes your immutable artifact and then you can deploy it and like run",
    "start": "2523000",
    "end": "2528580"
  },
  {
    "text": "acceptance tests against that and that artifact is what moves down the pipeline yes but I don't think we're thinking",
    "start": "2528580",
    "end": "2535480"
  },
  {
    "text": "about in the near future about running tests as part of the lifecycle",
    "start": "2535480",
    "end": "2542040"
  },
  {
    "text": "so how do i distribute how do we distribute builders and build packs within the organization how do I make",
    "start": "2543640",
    "end": "2550120"
  },
  {
    "text": "sure that everyone what's the distribution mechanism to make sure people in my organization don't have an",
    "start": "2550120",
    "end": "2555640"
  },
  {
    "text": "older version the wrong version or an older version of the build back so if you have what I'm going to build our",
    "start": "2555640",
    "end": "2561970"
  },
  {
    "text": "image and you have this image on a registry all the tools we've demoed today will always try to pull the newest",
    "start": "2561970",
    "end": "2568960"
  },
  {
    "text": "version from the registry before running so it does that by default you can also distribute build packs in what we call",
    "start": "2568960",
    "end": "2576910"
  },
  {
    "text": "build package is our new specification for distributing them and that all works",
    "start": "2576910",
    "end": "2582490"
  },
  {
    "text": "by the same mechanism it's like packaging build packs in an OCI image and we try to always pull when",
    "start": "2582490",
    "end": "2588250"
  },
  {
    "text": "something as a village it checks for new ones on each run so you never have to worry yeah I noticed there your version",
    "start": "2588250",
    "end": "2593860"
  },
  {
    "text": "is beta how mature is this project for usage is it production ready is it I",
    "start": "2593860",
    "end": "2601800"
  },
  {
    "text": "mean yeah so we're we're getting to a point where stuff is for the most part",
    "start": "2602820",
    "end": "2610900"
  },
  {
    "start": "2603000",
    "end": "2699000"
  },
  {
    "text": "not backwards breaking I think we just made a significant backwards breaking thing relatively recently but for the",
    "start": "2610900",
    "end": "2617920"
  },
  {
    "text": "most part a lot of the stuff going forward were not doing a lot of breaking changes and for the most part any kind",
    "start": "2617920",
    "end": "2624400"
  },
  {
    "text": "of breaking changes would fall on the kind of bill they've tend to fall in like the bill packed API side so like I",
    "start": "2624400",
    "end": "2632380"
  },
  {
    "text": "guess for a production level usage it it kind depends on like like if you're",
    "start": "2632380",
    "end": "2637600"
  },
  {
    "text": "using the local Cloud Foundry build packs you know like they've been used for a while depending on what bill packs are",
    "start": "2637600",
    "end": "2643780"
  },
  {
    "text": "using and but if you're like writing your own I think it's much more dependent on like whether the build",
    "start": "2643780",
    "end": "2649690"
  },
  {
    "text": "packs you're writing you feel are also production-ready in that sense as far as lifecycle and other things like we",
    "start": "2649690",
    "end": "2655420"
  },
  {
    "text": "definitely have these chases where people are using it in production and people are leveraging it so yes like",
    "start": "2655420",
    "end": "2661300"
  },
  {
    "text": "we've had to make some braking changes but we've also are conscious about those things and we do versioning and R+ of",
    "start": "2661300",
    "end": "2668380"
  },
  {
    "text": "like not wanting to actually break users that are running it now and also if you're using a maintained platform that",
    "start": "2668380",
    "end": "2674230"
  },
  {
    "text": "can encapsulate you from the breaking changes so we might make a break one of those api's right now at this stage in beta but the platform is",
    "start": "2674230",
    "end": "2681850"
  },
  {
    "text": "capable of knowing which API it's running against and doing the right thing so for most use cases you wouldn't",
    "start": "2681850",
    "end": "2687760"
  },
  {
    "text": "even feel many of the braking changes it mostly falls on my platform authors and",
    "start": "2687760",
    "end": "2692920"
  },
  {
    "text": "if I wrote if I write custom build packs the API is that they rely on my change in future versions yeah well so like one",
    "start": "2692920",
    "end": "2700900"
  },
  {
    "start": "2699000",
    "end": "2767000"
  },
  {
    "text": "of the things we provide is a library called labelled pack for go and for the",
    "start": "2700900",
    "end": "2706870"
  },
  {
    "text": "foremost like kind of breaking style things we will deprecated stuff and so",
    "start": "2706870",
    "end": "2712660"
  },
  {
    "text": "you the library itself will continue to work for the most part on like the next",
    "start": "2712660",
    "end": "2718780"
  },
  {
    "text": "release and then kind of give you that time to update your Bill pack to kind of take an account those changes if there's",
    "start": "2718780",
    "end": "2726040"
  },
  {
    "text": "there's I think only been one time where we haven't done that because it was really like hard to actually maintain",
    "start": "2726040",
    "end": "2732790"
  },
  {
    "text": "both of those things at one time but oftentimes a little like if we defecate",
    "start": "2732790",
    "end": "2737890"
  },
  {
    "text": "an n/bar for like a new one like the Lib Bill pack we'll just account to do both",
    "start": "2737890",
    "end": "2743830"
  },
  {
    "text": "of those things so you don't really have to kind of make those changes thank you",
    "start": "2743830",
    "end": "2752350"
  },
  {
    "text": "for the talk question on what accounts for the security modules like a Parma or",
    "start": "2752350",
    "end": "2759250"
  },
  {
    "text": "a sec aam in the build process or is that a responsibility of whoever provides the container image I think",
    "start": "2759250",
    "end": "2767860"
  },
  {
    "start": "2767000",
    "end": "2861000"
  },
  {
    "text": "that's that's definitely something that is taken account by who's providing the kind of container image so like when",
    "start": "2767860",
    "end": "2774910"
  },
  {
    "text": "you're providing the stack or kind of base or run images like like the bill",
    "start": "2774910",
    "end": "2780190"
  },
  {
    "text": "packs of cells are not out of the box and provide like a app security thing how the gate is part of the project but",
    "start": "2780190",
    "end": "2788190"
  },
  {
    "text": "yeah like the container image should have I guess like those rules and stuff in place",
    "start": "2788190",
    "end": "2795089"
  },
  {
    "text": "all right sorry hi you said that your base images",
    "start": "2801780",
    "end": "2808950"
  },
  {
    "text": "are based on Ubuntu do you update these images so in the example we're running",
    "start": "2808950",
    "end": "2817770"
  },
  {
    "text": "the base image was based on a boon to the project itself doesn't provide maintained stacks but both Claude",
    "start": "2817770",
    "end": "2826920"
  },
  {
    "text": "foundry and Heroku do provide maintained stacks that like push updated base",
    "start": "2826920",
    "end": "2833160"
  },
  {
    "text": "images within a certain window after every CVE notification yeah and those",
    "start": "2833160",
    "end": "2844470"
  },
  {
    "text": "are kept up to date because we maintain them for our own customers independent of kind of the cloud native build packs project but they're free - yes yeah all",
    "start": "2844470",
    "end": "2856380"
  },
  {
    "text": "right looks like that's it thank you [Applause]",
    "start": "2856380",
    "end": "2863289"
  }
]