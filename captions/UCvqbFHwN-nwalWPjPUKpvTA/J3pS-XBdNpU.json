[
  {
    "start": "0",
    "end": "30000"
  },
  {
    "text": "hello everyone and welcome to hacking and defending kubernetes clusters we'll",
    "start": "240",
    "end": "6060"
  },
  {
    "text": "do it live you've got myself James lovely France I",
    "start": "6060",
    "end": "12240"
  },
  {
    "text": "am a security engineer at control plane I lead our penetration testing services purple teaming uh deliver training and",
    "start": "12240",
    "end": "20039"
  },
  {
    "text": "workshops and facilitate CTF events and scenarios such as the one we run at",
    "start": "20039",
    "end": "25560"
  },
  {
    "text": "kubecon events like this one all right hi I'm Fabian I'm a security",
    "start": "25560",
    "end": "32700"
  },
  {
    "start": "30000",
    "end": "52000"
  },
  {
    "text": "architect also with control plane and I'm passionate about all things Automation and security",
    "start": "32700",
    "end": "38780"
  },
  {
    "text": "especially supply chain Security in the last year we spoke at six.com and some",
    "start": "38780",
    "end": "44520"
  },
  {
    "text": "Community Days and meetups in around Berlin where I'm also located",
    "start": "44520",
    "end": "50480"
  },
  {
    "start": "52000",
    "end": "99000"
  },
  {
    "text": "so what we're going to talk about today we'll do a high level overview of what threat modeling is and why it might be",
    "start": "53460",
    "end": "59820"
  },
  {
    "text": "important to you and then we'll go through six exploit scenarios at PACE",
    "start": "59820",
    "end": "66260"
  },
  {
    "text": "look at the uh and so in each of those individual scenarios uh we'll have a",
    "start": "66260",
    "end": "72420"
  },
  {
    "text": "little bit of a look at the impact of the attack uh",
    "start": "72420",
    "end": "77760"
  },
  {
    "text": "and then we will map uh through to controls that we would use to prevent",
    "start": "77760",
    "end": "83220"
  },
  {
    "text": "against some of the techniques that we demonstrate and have a little bit of a discussion",
    "start": "83220",
    "end": "88860"
  },
  {
    "text": "about those sort of mitigation strategies then at the end we'll summarize and have",
    "start": "88860",
    "end": "94680"
  },
  {
    "text": "a look at what we've learned in the session",
    "start": "94680",
    "end": "98240"
  },
  {
    "start": "99000",
    "end": "195000"
  },
  {
    "text": "all right as as James mentioned let's first Define the term threat model or the exercise of threat modeling so what",
    "start": "99840",
    "end": "106680"
  },
  {
    "text": "is this in a threat model session you should really Define and also address the risks of your system right why would",
    "start": "106680",
    "end": "113820"
  },
  {
    "text": "you want to do this of course we want to find security issues before someone else does hopefully before it goes into",
    "start": "113820",
    "end": "120420"
  },
  {
    "text": "production um so to prevent this we want to do this as soon as possible so if you have a new",
    "start": "120420",
    "end": "127200"
  },
  {
    "text": "system for example do a threat model session as soon as an architecture is available or even an architecture draft",
    "start": "127200",
    "end": "133500"
  },
  {
    "text": "can be used as input here if you have a system that is to be",
    "start": "133500",
    "end": "138540"
  },
  {
    "text": "extended this is usually done with the means of a user story or something similar so you can use that piece to",
    "start": "138540",
    "end": "145379"
  },
  {
    "text": "think about like new risks being introduced into the system and how to mitigate them",
    "start": "145379",
    "end": "151319"
  },
  {
    "text": "so who should join these threat model sessions right this is a group exercise so you should really bring everyone to",
    "start": "151319",
    "end": "158099"
  },
  {
    "text": "the table your developers your sres who know how to run this stuff in production",
    "start": "158099",
    "end": "163800"
  },
  {
    "text": "bring your security folks and everyone with domain knowledge or like special",
    "start": "163800",
    "end": "169140"
  },
  {
    "text": "knowledge about the system everyone can can bring insights to the table and you find more risks together",
    "start": "169140",
    "end": "175379"
  },
  {
    "text": "and you find more appropriate mitigations together as well",
    "start": "175379",
    "end": "180900"
  },
  {
    "text": "really this is just a quick overview if you want to learn more on how to do threat modeling Rowan gave a great talk",
    "start": "180900",
    "end": "187980"
  },
  {
    "text": "at a previous kubecon so check out his talk for a like an in-depth discussion",
    "start": "187980",
    "end": "193319"
  },
  {
    "text": "of the topic so they're great many resources out",
    "start": "193319",
    "end": "199680"
  },
  {
    "start": "195000",
    "end": "258000"
  },
  {
    "text": "there to assist you in your threat model session we will be using today the",
    "start": "199680",
    "end": "205080"
  },
  {
    "text": "Microsoft threat Matrix for kubernetes it presents you with a lot of tactics or",
    "start": "205080",
    "end": "211739"
  },
  {
    "text": "entry points an attacker could use to gain access to your system but it also",
    "start": "211739",
    "end": "216840"
  },
  {
    "text": "presents you with the mitigations to take to prevent this from ever happening to your cluster",
    "start": "216840",
    "end": "223200"
  },
  {
    "text": "um all of our six scenarios are based on this threat Matrix and we will reference the same mitigations they do as well",
    "start": "223200",
    "end": "229459"
  },
  {
    "text": "of course there are more resources out there specialized for example the container Matrix or the cncf financial",
    "start": "229459",
    "end": "236159"
  },
  {
    "text": "group for example worked on a set of attack trees which are really helpful to",
    "start": "236159",
    "end": "241200"
  },
  {
    "text": "think about or get in the mindset of an attacker because usually it needs more than one vulnerability to really take",
    "start": "241200",
    "end": "247799"
  },
  {
    "text": "over your system or access your database right so you need to follow a whole path of a text and these are Tech trees like",
    "start": "247799",
    "end": "254700"
  },
  {
    "text": "visualize them very nicely so scenario one will be about Discovery",
    "start": "254700",
    "end": "262620"
  },
  {
    "start": "258000",
    "end": "304000"
  },
  {
    "text": "and initial access same steps an attacker would also take but before we dive into the scenario",
    "start": "262620",
    "end": "269960"
  },
  {
    "text": "let me set the stage briefly so we will run all the scenarios on a cube ADM",
    "start": "269960",
    "end": "275699"
  },
  {
    "text": "based cluster but all the steps will work on any type of kubernetes distribution right so you can run it on",
    "start": "275699",
    "end": "282419"
  },
  {
    "text": "a cloud provider manage kubernetes such as a gke for example or you can run it",
    "start": "282419",
    "end": "287699"
  },
  {
    "text": "on your developer laptop with like micro kubernetes and I really encourage you to take the same steps right it's very",
    "start": "287699",
    "end": "294300"
  },
  {
    "text": "powerful to see how an attack plays out you can watch your system and see which which parts are affected",
    "start": "294300",
    "end": "302419"
  },
  {
    "text": "thank you all right we've done this before so it's fine",
    "start": "304199",
    "end": "310039"
  },
  {
    "text": "all right so first nothing up my sleeve right so if we look at our cluster there is nothing deployed",
    "start": "310740",
    "end": "317040"
  },
  {
    "text": "with Helm if we look at the name spaces and the pots we can see as I said this is a cube ADM based cluster I'd applied",
    "start": "317040",
    "end": "323880"
  },
  {
    "text": "The Weave net cni for the networking component and now I as an administrator I'm tasked",
    "start": "323880",
    "end": "331440"
  },
  {
    "text": "to deploy Jupiter hub for those who don't know Jupiter hub is a application yeah sorry it's fixed",
    "start": "331440",
    "end": "339180"
  },
  {
    "text": "size the next ones will be better jupyter Hub is an application to run",
    "start": "339180",
    "end": "344280"
  },
  {
    "text": "python programs in an interactive manner so it's very popular with like",
    "start": "344280",
    "end": "349440"
  },
  {
    "text": "scientists data science NLP and so on so I as an admin I just follow the the",
    "start": "349440",
    "end": "356759"
  },
  {
    "text": "docs of Jupiter Hub I deploy the helm chart and have it running in no time",
    "start": "356759",
    "end": "363120"
  },
  {
    "text": "so now we step into the shoes of the attacker attackers continuously monitor all the",
    "start": "363120",
    "end": "369300"
  },
  {
    "text": "routable IP addresses of the internet and they do something called Port scanning right so you can do this on",
    "start": "369300",
    "end": "374759"
  },
  {
    "text": "your own with a tool like nmap and here we scan the ports 30k and up so these",
    "start": "374759",
    "end": "380400"
  },
  {
    "text": "are the node parts and we can see that every external participant in the network can discover",
    "start": "380400",
    "end": "387300"
  },
  {
    "text": "the open port 31 903",
    "start": "387300",
    "end": "392400"
  },
  {
    "text": "and if we check this is exactly the port that is advertised or used by the public proxy of the Jupiter deployment",
    "start": "392400",
    "end": "400800"
  },
  {
    "text": "so if you use those same information the IP and the part we can go to a web browser",
    "start": "400800",
    "end": "406380"
  },
  {
    "text": "browse there and because it's a new application or freshly deployed application default credentials of",
    "start": "406380",
    "end": "411900"
  },
  {
    "text": "coursework so Jupiter Hub is a very powerful application and it makes it super easy",
    "start": "411900",
    "end": "418319"
  },
  {
    "text": "for both the devs but also attackers to directly launch a terminal from your browser and get execution in the pot",
    "start": "418319",
    "end": "426960"
  },
  {
    "text": "so getting initial access to a system is quite easy as you can see with just a",
    "start": "426960",
    "end": "432300"
  },
  {
    "text": "few misconfiguration steps so maybe let's recap briefly so the admin deployed as",
    "start": "432300",
    "end": "439319"
  },
  {
    "start": "434000",
    "end": "512000"
  },
  {
    "text": "per Jupiter up the helm chart they enable the node Port service because like let's face it setting up a load",
    "start": "439319",
    "end": "445020"
  },
  {
    "text": "balancer is kind of pain in the butt um they of course didn't change the user",
    "start": "445020",
    "end": "450660"
  },
  {
    "text": "and default password and they were asked to deploy a really powerful application with lots of permissions",
    "start": "450660",
    "end": "457740"
  },
  {
    "text": "so mitigations for for this right you should restrict your traffic via Network segmentation kubernetes uses a lot of",
    "start": "457740",
    "end": "465419"
  },
  {
    "text": "parts not just node parts to basically manage the the control plane",
    "start": "465419",
    "end": "470759"
  },
  {
    "text": "um or the back end of kubernetes and you should really lock those down only make them accessible to those components or",
    "start": "470759",
    "end": "477660"
  },
  {
    "text": "user users who really need the access and secondly as with every application",
    "start": "477660",
    "end": "483840"
  },
  {
    "text": "you should use strong authentication delete default passwords and users this",
    "start": "483840",
    "end": "489000"
  },
  {
    "text": "is not specific to kubernetes and even better use two-factor authentication if",
    "start": "489000",
    "end": "494340"
  },
  {
    "text": "you for example use this load balancer you can do this in a single point and even set up things like IP allow lists",
    "start": "494340",
    "end": "502139"
  },
  {
    "text": "and so on to yeah make your system even harder against the text",
    "start": "502139",
    "end": "507599"
  },
  {
    "text": "so now James will talk about persistence",
    "start": "507599",
    "end": "511759"
  },
  {
    "start": "512000",
    "end": "850000"
  },
  {
    "text": "so once our attacker has that initial initial access is maybe found a vulnerability or something exposed that",
    "start": "513180",
    "end": "519240"
  },
  {
    "text": "shouldn't be they're going to want to want to look uh see what they can do and enumerate their",
    "start": "519240",
    "end": "526260"
  },
  {
    "text": "environment so for",
    "start": "526260",
    "end": "530779"
  },
  {
    "text": "however I can spell there we go",
    "start": "536640",
    "end": "542160"
  },
  {
    "text": "how does that size at the back",
    "start": "542160",
    "end": "545480"
  },
  {
    "text": "I know I have no brightness control I don't know if any of The Tech Guys",
    "start": "549600",
    "end": "554760"
  },
  {
    "text": "can dim the lights maybe at the front",
    "start": "554760",
    "end": "558740"
  },
  {
    "text": "thank you thank you very much hopefully that's a bit better",
    "start": "591060",
    "end": "596660"
  },
  {
    "text": "so for this scenario uh we're look we're getting our initial access through a",
    "start": "599220",
    "end": "604260"
  },
  {
    "text": "leaked Secret [Laughter]",
    "start": "604260",
    "end": "610960"
  },
  {
    "text": "so something by the sound of it that you're familiar with um but this is in this example",
    "start": "611279",
    "end": "618720"
  },
  {
    "text": "uh leaked through a git repository we can see a git commit here this could be in a public GitHub",
    "start": "618720",
    "end": "626040"
  },
  {
    "text": "repo um maybe even uh a file in an S3 bucket",
    "start": "626040",
    "end": "632519"
  },
  {
    "text": "I'll leave to your imagination but from the context the attacker can see that",
    "start": "632519",
    "end": "637800"
  },
  {
    "text": "the key in the config file is called token gives us a little bit of",
    "start": "637800",
    "end": "643080"
  },
  {
    "text": "a hint and through previous enumeration the attacker knows that the there",
    "start": "643080",
    "end": "648779"
  },
  {
    "text": "this environment has kubernetes clusters running so the attackers makes uh",
    "start": "648779",
    "end": "656760"
  },
  {
    "text": "an educated guess and here we set up the cube CTL binary to",
    "start": "656760",
    "end": "663360"
  },
  {
    "text": "use the token against the API server of the kubernetes cluster that we have",
    "start": "663360",
    "end": "669779"
  },
  {
    "text": "previously enumerated in the environment so we can see the tokens being used by",
    "start": "669779",
    "end": "675480"
  },
  {
    "text": "the CLI Arc down here we're using the server IP address of the",
    "start": "675480",
    "end": "683579"
  },
  {
    "text": "API server that previously enumerated and ignoring CA certificate for now",
    "start": "683579",
    "end": "691100"
  },
  {
    "text": "so we'll set this up as an alias just to make next commands a little easier and issue a version command",
    "start": "692040",
    "end": "699480"
  },
  {
    "text": "just to check basic connectivity and we can see with the server version returned",
    "start": "699480",
    "end": "704579"
  },
  {
    "text": "to us that gives us initial indication at least our basic connectivity is working and then we'll",
    "start": "704579",
    "end": "711120"
  },
  {
    "text": "go and the attacker will go ahead and we'll likely enumerate what permissions they have",
    "start": "711120",
    "end": "716519"
  },
  {
    "text": "so I'll have to shrink this down a little bit",
    "start": "716519",
    "end": "722300"
  },
  {
    "text": "to make sense hopefully you can still read or get the gist of that at the back",
    "start": "723740",
    "end": "731100"
  },
  {
    "text": "but here we can see the permissions associated with this token",
    "start": "731100",
    "end": "736399"
  },
  {
    "text": "which are largely default so these top lines are default permissions that are",
    "start": "736399",
    "end": "741600"
  },
  {
    "text": "available to tokens for querying what they can do just as we're",
    "start": "741600",
    "end": "747540"
  },
  {
    "text": "doing now and these non-resource URLs are default as well which is kind of just Discovery based but of Interest are",
    "start": "747540",
    "end": "755940"
  },
  {
    "text": "the Pod permissions deployment missions and namespace permissions which are definitely not",
    "start": "755940",
    "end": "762660"
  },
  {
    "text": "default and have been added to this token",
    "start": "762660",
    "end": "766459"
  },
  {
    "text": "so the attacker is then going to use these credentials to start enumerating cluster at which point",
    "start": "769320",
    "end": "775700"
  },
  {
    "text": "and start trying to make the most of those privileges",
    "start": "775700",
    "end": "781320"
  },
  {
    "text": "so here the attacker is running a benign command ID in a container",
    "start": "781320",
    "end": "787019"
  },
  {
    "text": "and checking output just to check that command ran successfully uh",
    "start": "787019",
    "end": "792600"
  },
  {
    "text": "and then after that the attacker may look to create persistence at the kubernetes level",
    "start": "792600",
    "end": "798139"
  },
  {
    "text": "so here using a slightly different resource type of deployment which affords them",
    "start": "798139",
    "end": "805079"
  },
  {
    "text": "a level of persistence you could say um",
    "start": "805079",
    "end": "809720"
  },
  {
    "text": "just as the workload is more likely to be recreated if for any reason it was",
    "start": "810480",
    "end": "815579"
  },
  {
    "text": "killed off so you can hit see here the creation of the deployments using our benign ID",
    "start": "815579",
    "end": "822360"
  },
  {
    "text": "command we'll check that the workload is creating and that the command has run",
    "start": "822360",
    "end": "829500"
  },
  {
    "text": "successfully and then demonstrate if whatever reason",
    "start": "829500",
    "end": "835740"
  },
  {
    "text": "uh the Pod was killed it's recreated",
    "start": "835740",
    "end": "841500"
  },
  {
    "text": "in the API server sort of giving us a slightly better chance of persisting in",
    "start": "841500",
    "end": "846600"
  },
  {
    "text": "that cluster long term so what have we witnessed here",
    "start": "846600",
    "end": "852540"
  },
  {
    "start": "850000",
    "end": "875000"
  },
  {
    "text": "our attacker has found some credential externally not in our infrastructure",
    "start": "852540",
    "end": "858540"
  },
  {
    "text": "or in a public facing part or infrastructure and has managed to execute commands and got a foothold in",
    "start": "858540",
    "end": "864120"
  },
  {
    "text": "our infrastructure so this may allow them to do further enumeration",
    "start": "864120",
    "end": "870079"
  },
  {
    "text": "and maybe exploit other things in our infra",
    "start": "870300",
    "end": "875300"
  },
  {
    "start": "875000",
    "end": "946000"
  },
  {
    "text": "how would we mitigate against this so the first option here is restricting access to the API server on",
    "start": "876839",
    "end": "884579"
  },
  {
    "text": "a network level at the very least we can Implement an IP allow list",
    "start": "884579",
    "end": "890220"
  },
  {
    "text": "uh restricting access to that API server um even better would be",
    "start": "890220",
    "end": "896699"
  },
  {
    "text": "putting it in a private Network that only we had access to",
    "start": "896699",
    "end": "901579"
  },
  {
    "text": "further to that we can restrict what sort of things attackers are able to run in our clusters uh through gating images",
    "start": "903000",
    "end": "910440"
  },
  {
    "text": "through a policy framework such as opio caberno or if we're using private",
    "start": "910440",
    "end": "916620"
  },
  {
    "text": "networking it might just not have external access and then",
    "start": "916620",
    "end": "922079"
  },
  {
    "text": "in addition to that we want to restrict people from running",
    "start": "922079",
    "end": "929519"
  },
  {
    "text": "workloads with any additional Privileges and potentially escalating",
    "start": "929519",
    "end": "934680"
  },
  {
    "text": "escalating their privilege to something that's undesirable so we can again use one of those policy Frameworks or",
    "start": "934680",
    "end": "940740"
  },
  {
    "text": "something inbuilt like security standards to restrict these",
    "start": "940740",
    "end": "946339"
  },
  {
    "text": "so talking of privilege escalation we're looking at that in a little bit more detail in this next scenario",
    "start": "947459",
    "end": "954019"
  },
  {
    "text": "so in this demo the attacker has landed in a privileged container",
    "start": "967980",
    "end": "973079"
  },
  {
    "text": "so this is either the attackers managed to create a privileged container an exec into it or they landed in one through a",
    "start": "973079",
    "end": "980339"
  },
  {
    "text": "vulnerability uh in in a workload and here they're enumerating what's",
    "start": "980339",
    "end": "986579"
  },
  {
    "text": "available to them and the attackers found that there are unmasked devices in the container",
    "start": "986579",
    "end": "995240"
  },
  {
    "text": "and is enumerating through those devices to see what they are",
    "start": "995639",
    "end": "1001660"
  },
  {
    "text": "so here the attacker has found that the one of the devices looks like a primary",
    "start": "1001820",
    "end": "1007959"
  },
  {
    "text": "file system for a VM and so they're mounting that file system",
    "start": "1007959",
    "end": "1014420"
  },
  {
    "text": "into the container and verifying the contents of the device",
    "start": "1014420",
    "end": "1021699"
  },
  {
    "text": "and here we can see it looks like a root file system and uh",
    "start": "1021740",
    "end": "1027438"
  },
  {
    "text": "is a good chance that it will be the host OS",
    "start": "1027439",
    "end": "1032780"
  },
  {
    "text": "so at this point Taco may look to jump directly into the host which could",
    "start": "1032780",
    "end": "1038418"
  },
  {
    "text": "be achieved for the number of methods maybe a malicious Cron job back during bash RC but in this instance",
    "start": "1038419",
    "end": "1045678"
  },
  {
    "text": "we're going to drop uh malicious or a key SSH key under our",
    "start": "1045679",
    "end": "1052100"
  },
  {
    "text": "control into the authorized key file of the root user",
    "start": "1052100",
    "end": "1056620"
  },
  {
    "text": "from here the attacker would be able to SSH into the VM host and completely bypass containerization",
    "start": "1061160",
    "end": "1069520"
  },
  {
    "start": "1072000",
    "end": "1092000"
  },
  {
    "text": "so what have we seen here the attacker has started off in that initial foothold and has",
    "start": "1073880",
    "end": "1081020"
  },
  {
    "text": "privilege escalated onto the VM which may allow them further escalation or",
    "start": "1081020",
    "end": "1086660"
  },
  {
    "text": "access to further resources for abuse",
    "start": "1086660",
    "end": "1091360"
  },
  {
    "start": "1092000",
    "end": "1142000"
  },
  {
    "text": "what can we do to prevent some of this some of these type of attacks so",
    "start": "1093919",
    "end": "1100880"
  },
  {
    "text": "really there's very only a few limited use cases for use of the privilege container they",
    "start": "1101120",
    "end": "1107660"
  },
  {
    "text": "should absolutely not be used in day-to-day workloads so auditing our clusters to make sure we're not using",
    "start": "1107660",
    "end": "1114020"
  },
  {
    "text": "these kind of privileges as much as possible it's really important",
    "start": "1114020",
    "end": "1119720"
  },
  {
    "text": "the reach recently introduced uh pod security standards is an excellent way to prevent these kind of breakouts",
    "start": "1119720",
    "end": "1126320"
  },
  {
    "text": "just because the Baseline default prevents a lot of mischief and as it's built",
    "start": "1126320",
    "end": "1133340"
  },
  {
    "text": "directly into kubernetes is quite easy to use",
    "start": "1133340",
    "end": "1138640"
  },
  {
    "text": "I'll hand back to Fabian for the next scenario all right thank you James",
    "start": "1138679",
    "end": "1144380"
  },
  {
    "start": "1142000",
    "end": "1363000"
  },
  {
    "text": "so next scenario will be about authorized or in this case unauthorized access",
    "start": "1144380",
    "end": "1151120"
  },
  {
    "text": "so the brightness is not a feature that's definitely a bug so in this scenario we're deploying just",
    "start": "1158600",
    "end": "1165020"
  },
  {
    "text": "a plain old pot into the kubernetes cluster as you can see here there's no magic in the spec right it's just a",
    "start": "1165020",
    "end": "1171200"
  },
  {
    "text": "container image getting deployed and we're using a image with cubectl in",
    "start": "1171200",
    "end": "1176419"
  },
  {
    "text": "it to interact with the kubernetes API can exchange this for any other tool",
    "start": "1176419",
    "end": "1181700"
  },
  {
    "text": "that can do Network requests like curl or roll your own",
    "start": "1181700",
    "end": "1186760"
  },
  {
    "text": "so once we have the Pod scheduled to be deployed we can act like into it",
    "start": "1186760",
    "end": "1194120"
  },
  {
    "text": "and as we can see without having any additional things in our hot spec",
    "start": "1194120",
    "end": "1200440"
  },
  {
    "text": "there's a secret available in the pot at VAR around Secrets kubernetes IO and",
    "start": "1200440",
    "end": "1207080"
  },
  {
    "text": "that's the service account so each part in kubernetes gets the service account to talk to the",
    "start": "1207080",
    "end": "1212780"
  },
  {
    "text": "kubernetes API and as we did in a previous scenario we can now use the can I command to",
    "start": "1212780",
    "end": "1219860"
  },
  {
    "text": "basically list all the permissions we have with that token now we can see it gives us a lot of permissions to query",
    "start": "1219860",
    "end": "1227360"
  },
  {
    "text": "additional information about the environment so an attacker could use this to for example query all the API",
    "start": "1227360",
    "end": "1233299"
  },
  {
    "text": "resources we have in the cluster and we can see on the bottom right hand side for example the tecton the crds for",
    "start": "1233299",
    "end": "1239660"
  },
  {
    "text": "tecton are available in the cluster so this would give an attacker an idea to look for further vulnerabilities look at",
    "start": "1239660",
    "end": "1246140"
  },
  {
    "text": "non-vulabilities and tecton and leverage those to like continue their journey through our cluster",
    "start": "1246140",
    "end": "1253460"
  },
  {
    "text": "um so same for the API versions We can also query those with the token we are not allowed to",
    "start": "1253460",
    "end": "1260120"
  },
  {
    "text": "query like pods or Secrets not even in the same namespace so it's somewhat limited but still has",
    "start": "1260120",
    "end": "1266600"
  },
  {
    "text": "some value to an attacker so what can we do about this there's an",
    "start": "1266600",
    "end": "1272000"
  },
  {
    "text": "additional flag in the pots back we can set which is called Auto Mount service account token which by default is true",
    "start": "1272000",
    "end": "1278840"
  },
  {
    "text": "so we get the service account token or we should definitely set this to false for every part who does not need to talk",
    "start": "1278840",
    "end": "1286280"
  },
  {
    "text": "to the kubernetes API as we can see when we exit again into the container there's no more service",
    "start": "1286280",
    "end": "1293000"
  },
  {
    "text": "account for us to use and therefore we don't have access to these additional information",
    "start": "1293000",
    "end": "1299559"
  },
  {
    "text": "so other way around now we have an application that actually needs to talk to the kubernetes API and instead of",
    "start": "1300080",
    "end": "1307280"
  },
  {
    "text": "using that default service account or extending it we should really create our own service account",
    "start": "1307280",
    "end": "1314480"
  },
  {
    "text": "so to to do that we create the resource of the service account for our machine user we create a role that is allowed to",
    "start": "1314480",
    "end": "1321980"
  },
  {
    "text": "get and list secrets in the default namespace and we attach those two resources",
    "start": "1321980",
    "end": "1327559"
  },
  {
    "text": "together with a role binding and then the pots back now we can specify the service account name and",
    "start": "1327559",
    "end": "1334760"
  },
  {
    "text": "this service account will now be made available inside our pod",
    "start": "1334760",
    "end": "1341380"
  },
  {
    "text": "again we exact into the pot and with Cube CTL for example we can see that we",
    "start": "1341840",
    "end": "1347299"
  },
  {
    "text": "can now query the secret but we can also list all the other secrets and namespace which may or may not have been intended",
    "start": "1347299",
    "end": "1354380"
  },
  {
    "text": "but we see here that for example there's a Docker credential available in the same name space which we can now read",
    "start": "1354380",
    "end": "1360620"
  },
  {
    "text": "out so let's recap briefly so every plot has",
    "start": "1360620",
    "end": "1367760"
  },
  {
    "start": "1363000",
    "end": "1402000"
  },
  {
    "text": "this default service account and we should really disable this via the shown",
    "start": "1367760",
    "end": "1373400"
  },
  {
    "text": "config field um and we again should use least privileged principle so even when we",
    "start": "1373400",
    "end": "1380480"
  },
  {
    "text": "Define custom roles for our services to use make sure to really lock them down",
    "start": "1380480",
    "end": "1385580"
  },
  {
    "text": "as much as possible you cannot only list um like limited to the namespace but you",
    "start": "1385580",
    "end": "1392299"
  },
  {
    "text": "can also limit it to specific resources the verbs so pay attention to all those things to only give the required amount",
    "start": "1392299",
    "end": "1399200"
  },
  {
    "text": "of permissions so next scenario is about poisoned image",
    "start": "1399200",
    "end": "1407059"
  },
  {
    "start": "1402000",
    "end": "1594000"
  },
  {
    "text": "in the container registry and for that scenario",
    "start": "1407059",
    "end": "1412760"
  },
  {
    "text": "they do like the gifts a lot more nice to see",
    "start": "1412760",
    "end": "1417880"
  },
  {
    "text": "in demo 5 we will now use the docker credentials",
    "start": "1419620",
    "end": "1424880"
  },
  {
    "text": "we discovered in the previous scenario to attack the container registry of our kubernetes cluster",
    "start": "1424880",
    "end": "1431419"
  },
  {
    "text": "so we can see here for example we have a deployment in our kubernetes cluster which is called awesome cats",
    "start": "1431419",
    "end": "1437659"
  },
  {
    "text": "which is hosting some cat pictures seems like the perfect Target for me",
    "start": "1437659",
    "end": "1445120"
  },
  {
    "text": "we can configure the docker credentials we found in the previous step and use a",
    "start": "1445120",
    "end": "1450500"
  },
  {
    "text": "tool such as crane which is very powerful to do like weird operations on container registries",
    "start": "1450500",
    "end": "1455860"
  },
  {
    "text": "you can like standard scenario list at least the versions of a of an image",
    "start": "1455860",
    "end": "1462320"
  },
  {
    "text": "and we can also fetch the digest so we can see here there are four versions of",
    "start": "1462320",
    "end": "1467600"
  },
  {
    "text": "this container image available in the registry and latest is always a nice Target for an attacker to see",
    "start": "1467600",
    "end": "1474140"
  },
  {
    "text": "and we will see in a second why so we will grab the digest of that latest image which is like the",
    "start": "1474140",
    "end": "1480620"
  },
  {
    "text": "fingerprint behind that image and we can use another Docker file to",
    "start": "1480620",
    "end": "1485900"
  },
  {
    "text": "basically now extend the image we have discovered right so we start from the image but then we eject whatever code we",
    "start": "1485900",
    "end": "1492919"
  },
  {
    "text": "want we hide it as an init as H and we extend the entry point",
    "start": "1492919",
    "end": "1498860"
  },
  {
    "text": "to execute our script before like the previous entry point is called again so",
    "start": "1498860",
    "end": "1505159"
  },
  {
    "text": "we're not raising any suspicion by by breaking their service so after building and pushing that image",
    "start": "1505159",
    "end": "1513880"
  },
  {
    "text": "we can re-fetch the digests and we can see that this has really changed so this",
    "start": "1514940",
    "end": "1520340"
  },
  {
    "text": "was 8 8b4 now it's 3E and we have a different image behind",
    "start": "1520340",
    "end": "1525500"
  },
  {
    "text": "that latest text right we just overwrote it so as you could expect is that our code",
    "start": "1525500",
    "end": "1532039"
  },
  {
    "text": "is now running on kubernetes but that's not the case so we can see there is no",
    "start": "1532039",
    "end": "1537260"
  },
  {
    "text": "command executed this is because kubernetes is not like watching the tags in the registry it is only downloading",
    "start": "1537260",
    "end": "1544820"
  },
  {
    "text": "the image if necessary so we as an attacker need to force the part to get",
    "start": "1544820",
    "end": "1550640"
  },
  {
    "text": "redeployed usually you find a lot of vulnerabilities for web servers where you just crash them so the pot dies gets",
    "start": "1550640",
    "end": "1557539"
  },
  {
    "text": "rescheduled and the image gets gets downloaded again um I would simulate this by just scaling",
    "start": "1557539",
    "end": "1564080"
  },
  {
    "text": "down scaling up but you can find those malicious payloads easily to crash a lot",
    "start": "1564080",
    "end": "1570380"
  },
  {
    "text": "of web servers so once the rollout was successful and the pot is rescheduled",
    "start": "1570380",
    "end": "1575960"
  },
  {
    "text": "we can query the service again we can see the service works fine no one is",
    "start": "1575960",
    "end": "1581480"
  },
  {
    "text": "checking or double checking but we can see that now I'm in your system our code is executed and we can do whatever we",
    "start": "1581480",
    "end": "1588320"
  },
  {
    "text": "want in the system",
    "start": "1588320",
    "end": "1591220"
  },
  {
    "start": "1594000",
    "end": "1624000"
  },
  {
    "text": "all right so what have we witnessed we used the league container credentials",
    "start": "1595100",
    "end": "1600620"
  },
  {
    "text": "and the Lessons Learned here is really we need to protect also the external cluster dependencies right usually you",
    "start": "1600620",
    "end": "1606679"
  },
  {
    "text": "have container Registries but also config repositories if you're doing git Ops we have deployment pipelines and secret",
    "start": "1606679",
    "end": "1613400"
  },
  {
    "text": "managers and all of these have power over our cluster they can be abused by an attacker to gain some sort of control",
    "start": "1613400",
    "end": "1620860"
  },
  {
    "text": "of what is happening inside our cluster so specific mitigations for this attack",
    "start": "1620860",
    "end": "1627200"
  },
  {
    "start": "1624000",
    "end": "1693000"
  },
  {
    "text": "is really to pin by hash so any kind of of tag that can be overwritten by an",
    "start": "1627200",
    "end": "1632779"
  },
  {
    "text": "attacker is a nice Target if an attacker adds code to your container image the",
    "start": "1632779",
    "end": "1638179"
  },
  {
    "text": "hash will change so now if you pin by hash the attacker has two problems right they need to attack the image but they",
    "start": "1638179",
    "end": "1645200"
  },
  {
    "text": "also need to attack the deployment file and change the reference in there to get their malicious code deployed which",
    "start": "1645200",
    "end": "1651020"
  },
  {
    "text": "makes it even harder for them going one step further we can also use container signing so only deploy images",
    "start": "1651020",
    "end": "1658279"
  },
  {
    "text": "that are signed by us if we do that the attacker now also needs to gain access",
    "start": "1658279",
    "end": "1663679"
  },
  {
    "text": "to the private key and sign the image before it can get even scheduled in kubernetes",
    "start": "1663679",
    "end": "1670760"
  },
  {
    "text": "and lastly we should really use short-lived secrets we heard this a lot but if the credential for the docker",
    "start": "1670760",
    "end": "1677840"
  },
  {
    "text": "registry is long-lived the attacker also controls this attack Vector for a very very long time if we make those short",
    "start": "1677840",
    "end": "1684799"
  },
  {
    "text": "lift the attacker really is is on the timer to get that attack out there and maybe we can lock them out before they",
    "start": "1684799",
    "end": "1690679"
  },
  {
    "text": "can get to the next step is about evasion and James bull speak",
    "start": "1690679",
    "end": "1698179"
  },
  {
    "start": "1693000",
    "end": "1700000"
  },
  {
    "text": "about that so once we've gone or the attacker has",
    "start": "1698179",
    "end": "1703640"
  },
  {
    "start": "1700000",
    "end": "1847000"
  },
  {
    "text": "gone to all this effort to get access to our clusters",
    "start": "1703640",
    "end": "1709100"
  },
  {
    "text": "maintain their existence there they may want to avoid being detected by",
    "start": "1709100",
    "end": "1716900"
  },
  {
    "text": "the administrators so we'll have a look at that",
    "start": "1716900",
    "end": "1722659"
  },
  {
    "text": "in this scenario",
    "start": "1722659",
    "end": "1725679"
  },
  {
    "text": "so at the kubernetes level one thing that we're given is a resource called events",
    "start": "1732860",
    "end": "1739039"
  },
  {
    "text": "which is the same as any other resource but it is kind of a meta resource",
    "start": "1739039",
    "end": "1745779"
  },
  {
    "text": "implemented by kubernetes to give us information about what's happening in the",
    "start": "1745779",
    "end": "1750799"
  },
  {
    "text": "in the control plane and in the cluster so we can see normally this has a whole",
    "start": "1750799",
    "end": "1757880"
  },
  {
    "text": "load of information about what's happening so for example we're looking here at",
    "start": "1757880",
    "end": "1764000"
  },
  {
    "text": "uh fairly vanilla cluster but even then there's a lot of information we can see information about Cube proxy",
    "start": "1764000",
    "end": "1771860"
  },
  {
    "text": "some control playing components here as as I said we're in a cube ADM based cluster",
    "start": "1771860",
    "end": "1777980"
  },
  {
    "text": "um there's some Calico stuff here as that's the cni we're using it's a whole lot of information",
    "start": "1777980",
    "end": "1784039"
  },
  {
    "text": "um and if we're if we're a malicious actor there'll be some information in here",
    "start": "1784039",
    "end": "1789860"
  },
  {
    "text": "about the workloads that we've been creating and what we've been doing to the cluster which is potentially undesirable",
    "start": "1789860",
    "end": "1797179"
  },
  {
    "text": "so what we can do is just delete the information",
    "start": "1797179",
    "end": "1802720"
  },
  {
    "text": "and as shown it's all gone easy as that",
    "start": "1805580",
    "end": "1810860"
  },
  {
    "text": "so this is a little bit suspicious I don't know about you but if if I",
    "start": "1810860",
    "end": "1816080"
  },
  {
    "text": "came to my cluster tomorrow and saw no events whatsoever think something very fishy would have happened",
    "start": "1816080",
    "end": "1823159"
  },
  {
    "text": "so a more skilled adapter a more skilled attacker sorry may go through and",
    "start": "1823159",
    "end": "1828320"
  },
  {
    "text": "selectively delete events but on the kubernetes level this",
    "start": "1828320",
    "end": "1833480"
  },
  {
    "text": "would be a great way to start avoiding some detection by",
    "start": "1833480",
    "end": "1839320"
  },
  {
    "text": "administrative and security teams",
    "start": "1839320",
    "end": "1843460"
  },
  {
    "start": "1847000",
    "end": "1928000"
  },
  {
    "text": "so one of the issues here is that this uh this attack",
    "start": "1848659",
    "end": "1854179"
  },
  {
    "text": "is a little distribution dependent so if you're running in a cloud provider",
    "start": "1854179",
    "end": "1860539"
  },
  {
    "text": "it's more than likely that your events will be shipped off to the cloud provider's logging solution",
    "start": "1860539",
    "end": "1866480"
  },
  {
    "text": "um so therefore venting uh deleting event logs in the cluster won't delete",
    "start": "1866480",
    "end": "1871580"
  },
  {
    "text": "them in the logging solution so it's not quite as useful in that scenario but it's definitely worth",
    "start": "1871580",
    "end": "1879080"
  },
  {
    "text": "checking because it'll depend on the setup but if you're if you're in a provider that manages the control plane",
    "start": "1879080",
    "end": "1885080"
  },
  {
    "text": "for you they'll have made a decision about how they handle logs so it's very it's dependent on which provider or",
    "start": "1885080",
    "end": "1891260"
  },
  {
    "text": "distribution you use as to what they're doing there as to how effective this would be",
    "start": "1891260",
    "end": "1897279"
  },
  {
    "text": "again looking looking at the level of privilege an attacker needs to do this there's very few scenarios in which a",
    "start": "1897500",
    "end": "1904580"
  },
  {
    "text": "user needs delete events it should really only be restricted to",
    "start": "1904580",
    "end": "1910820"
  },
  {
    "text": "to be up like cluster admin I'm really struggling to think of any legitimate",
    "start": "1910820",
    "end": "1916100"
  },
  {
    "text": "use cases for this um and so yeah reviewing reviewing these",
    "start": "1916100",
    "end": "1921559"
  },
  {
    "text": "permissions to make sure they're not unnecessarily distributed is key",
    "start": "1921559",
    "end": "1927760"
  },
  {
    "start": "1928000",
    "end": "1995000"
  },
  {
    "text": "so looking back at all these scenarios what have we looked what have we understood today",
    "start": "1929419",
    "end": "1935179"
  },
  {
    "text": "so hopefully some of these scenarios have helped you understand why some of the best security",
    "start": "1935179",
    "end": "1941600"
  },
  {
    "text": "best practice exists and what the impact of some of these exploits is",
    "start": "1941600",
    "end": "1947480"
  },
  {
    "text": "hopefully you'll be able to take some of the resources we've linked to today away from this session and that'll",
    "start": "1947480",
    "end": "1955120"
  },
  {
    "text": "help you some of your threat modeling exercises going forward and hopefully we've communicated some of",
    "start": "1955120",
    "end": "1961039"
  },
  {
    "text": "the importance of threat modeling to you to help you contextualize and prioritize",
    "start": "1961039",
    "end": "1966380"
  },
  {
    "text": "some of the risks you or your org May encounter so we realize this is quite a rapid run",
    "start": "1966380",
    "end": "1973340"
  },
  {
    "text": "through a lot of the topics we've talked about today if you have any questions about threat modeling or any of the exploits or scenarios we've run through",
    "start": "1973340",
    "end": "1979880"
  },
  {
    "text": "please feel free to ask questions or drop by at the end of the session and ask us more Are we more than happy to",
    "start": "1979880",
    "end": "1985880"
  },
  {
    "text": "chat about any of it to you thank you",
    "start": "1985880",
    "end": "1990759"
  },
  {
    "text": "that's the last slide we're running there's a couple of sessions of our threat modeling available to those that",
    "start": "1996200",
    "end": "2002980"
  },
  {
    "text": "are interested where we're running 20-minute sessions um as a company you're more than welcome if",
    "start": "2002980",
    "end": "2009220"
  },
  {
    "text": "you've got any organizational problems although there's I think a couple left this afternoon so yeah come and chat",
    "start": "2009220",
    "end": "2015880"
  },
  {
    "text": "afterwards also if you're interested we have a booth in all five and jobs available",
    "start": "2015880",
    "end": "2021820"
  },
  {
    "text": "thank you",
    "start": "2021820",
    "end": "2024360"
  }
]