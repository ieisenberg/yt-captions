[
  {
    "start": "0",
    "end": "11000"
  },
  {
    "text": "right good afternoon everyone thanks very much for staying right to the end to listen to us we hope to make it worth",
    "start": "240",
    "end": "8250"
  },
  {
    "text": "your while my my group and Irene's groups have been collaborating for the past few years",
    "start": "8250",
    "end": "14400"
  },
  {
    "start": "11000",
    "end": "11000"
  },
  {
    "text": "actually on a pretty exciting project to take the research that she did as part of her PhD thesis and expanded to a",
    "start": "14400",
    "end": "21150"
  },
  {
    "text": "fully fledged open-source project within the CNC F so that's what we're gonna talk to you about today you know as a",
    "start": "21150",
    "end": "29250"
  },
  {
    "start": "27000",
    "end": "27000"
  },
  {
    "text": "brief overview will provide some back some context to motivate rate why we did",
    "start": "29250",
    "end": "35550"
  },
  {
    "text": "this work and the problems that we believe exists that need to be solved then we'll look briefly at the different",
    "start": "35550",
    "end": "41489"
  },
  {
    "text": "kinds of skills required to build and run modern applications and we'll briefly touch on a broader effort to",
    "start": "41489",
    "end": "47370"
  },
  {
    "text": "create a full distributed operating system and then zoom in to the most interesting part of it which i think is",
    "start": "47370",
    "end": "53070"
  },
  {
    "text": "the micro service runtime system Irene will describe in some detail how all of",
    "start": "53070",
    "end": "59280"
  },
  {
    "text": "this stuff works and some of the interesting findings from her research and then to convince you that this is",
    "start": "59280",
    "end": "65100"
  },
  {
    "text": "not all smoke and mirrors one of my colleagues the new will give us a demo of some of the stuff in action hopefully",
    "start": "65100",
    "end": "72299"
  },
  {
    "text": "that'll help you do kind of some of the stuff is a bit abstract and difficult to wrap your head around so demos can be",
    "start": "72299",
    "end": "77640"
  },
  {
    "text": "useful to illustrate what's possible we're pretty short of time we got a lot",
    "start": "77640",
    "end": "83909"
  },
  {
    "text": "of material to cover so I'm gonna move fairly quickly and we should have some time being the last session I guess",
    "start": "83909",
    "end": "89009"
  },
  {
    "text": "we'll have some time to overlap with Q&A right so long time ago applications were",
    "start": "89009",
    "end": "99479"
  },
  {
    "start": "96000",
    "end": "96000"
  },
  {
    "text": "pretty simple they typically supported a single user ran on a single machine platform and",
    "start": "99479",
    "end": "105659"
  },
  {
    "text": "only ran on one operating system for example these are things like text",
    "start": "105659",
    "end": "110759"
  },
  {
    "text": "editors and document viewers and calendars and even browsers actually were you know some to some extent in",
    "start": "110759",
    "end": "116369"
  },
  {
    "text": "that category and life was you know",
    "start": "116369",
    "end": "121770"
  },
  {
    "text": "pretty good single operating single machine operating systems work fairly well Linux Windows Mac etc Android even",
    "start": "121770",
    "end": "131180"
  },
  {
    "text": "and all of these provide you know great abstractions for those kinds of",
    "start": "131180",
    "end": "137030"
  },
  {
    "text": "applications local processes virtual machine sorry virtual memory file systems locks",
    "start": "137030",
    "end": "142489"
  },
  {
    "text": "all of these things are kind of indispensable when writing applications on a single machine and for the most",
    "start": "142489",
    "end": "148670"
  },
  {
    "text": "part you know if you wanted to build an application you could do it in one or maybe two languages and everything was good the problem is that relatively",
    "start": "148670",
    "end": "158599"
  },
  {
    "text": "suddenly everything changed so cloud computing happened everybody moved to",
    "start": "158599",
    "end": "164000"
  },
  {
    "text": "smartphones mobile first strategies etc the ubiquitous connectivity happened",
    "start": "164000",
    "end": "169700"
  },
  {
    "text": "with high speed high bandwidth networks and suddenly everything changed so the",
    "start": "169700",
    "end": "175609"
  },
  {
    "text": "types of applications changed suddenly we had you know social media and these kinds of things but in addition to that",
    "start": "175609",
    "end": "182510"
  },
  {
    "text": "all of the stuff that previously was single user also became you know collaborative multi-user applications",
    "start": "182510",
    "end": "188650"
  },
  {
    "text": "none of this is surprising but it's important to note that there's some fairly big differences in the the nature",
    "start": "188650",
    "end": "197209"
  },
  {
    "text": "of the applications and the kinds of development that you need to do you know and even today my aquarium at home has",
    "start": "197209",
    "end": "203569"
  },
  {
    "text": "you know Raspberry Pi installed in it and that thing talks to the cloud and controls the temperature of my fish and",
    "start": "203569",
    "end": "209750"
  },
  {
    "text": "a variety of other things so it really has become pretty ubiquitous now in",
    "start": "209750",
    "end": "217430"
  },
  {
    "text": "practice yeah sorry I forgot about my animation so these things get you know",
    "start": "217430",
    "end": "222530"
  },
  {
    "text": "suddenly get very complicated you've got lots of machines lots of people sometimes not very reliable network",
    "start": "222530",
    "end": "229819"
  },
  {
    "text": "connectivity and you've got to try and write applications that run in this environment and unsurprisingly people",
    "start": "229819",
    "end": "234919"
  },
  {
    "text": "are tearing the hair out so one of the reasons why there's the cloud native computing foundation exists is because",
    "start": "234919",
    "end": "240769"
  },
  {
    "text": "this stuff is hard kubernetes was obviously one of the first big tools that the people used to try and you know",
    "start": "240769",
    "end": "247699"
  },
  {
    "text": "wrestle with us complexity now you can partition your applications up into into",
    "start": "247699",
    "end": "253159"
  },
  {
    "text": "containers and use things like kubernetes but it's still relatively difficult",
    "start": "253159",
    "end": "258359"
  },
  {
    "text": "so Along Came essentially the CNC F containers kubernetes microservices etc",
    "start": "258359",
    "end": "265830"
  },
  {
    "text": "and this was definitely a big step in the correct direction so we could as I said decompose our applications into",
    "start": "265830",
    "end": "273389"
  },
  {
    "text": "independently deployable containers and a lot of this work sort of started in",
    "start": "273389",
    "end": "279300"
  },
  {
    "text": "the early to mid-2000s but particularly at companies like Google and Amazon and",
    "start": "279300",
    "end": "285569"
  },
  {
    "text": "as you know become a reasonably mainstream these days most of you know",
    "start": "285569",
    "end": "291509"
  },
  {
    "text": "well you know all the things on the slide and things have got better so the reason you're here is because you know that all this is good programmatically",
    "start": "291509",
    "end": "298069"
  },
  {
    "text": "orchestrated declaratively driven configurations different languages can be used in every single container you",
    "start": "298069",
    "end": "304889"
  },
  {
    "text": "can hook these together with things like link ID and Envoy and this do and you can you know your SRS can run these",
    "start": "304889",
    "end": "311099"
  },
  {
    "text": "things and your developers can develop them however the problem is somebody's",
    "start": "311099",
    "end": "316770"
  },
  {
    "start": "315000",
    "end": "315000"
  },
  {
    "text": "still got to write the code that runs in those containers and it turns out that that is actually extremely difficult to",
    "start": "316770",
    "end": "323159"
  },
  {
    "text": "do and very difficult to do reliably and in a way that actually gives you the",
    "start": "323159",
    "end": "328949"
  },
  {
    "text": "application the properties that that you want and it can be done and companies",
    "start": "328949",
    "end": "334229"
  },
  {
    "text": "like Google and Amazon have been doing it for a very long time but they also have you know somewhere around a hundred",
    "start": "334229",
    "end": "339930"
  },
  {
    "text": "thousand pretty good software engineers and they they spend a lot of them building these resilient scalable",
    "start": "339930",
    "end": "346740"
  },
  {
    "text": "systems problem is that your mere mortal application developer doesn't necessarily or your company that needs",
    "start": "346740",
    "end": "354210"
  },
  {
    "text": "to build some end-user application it doesn't necessarily have you know tens of thousands of the best distributed",
    "start": "354210",
    "end": "359849"
  },
  {
    "text": "system software engineers in the world so the kinds of problems that people run into very frequently are things like",
    "start": "359849",
    "end": "366810"
  },
  {
    "text": "distributed concurrency synchronization how do you you know make unreliable",
    "start": "366810",
    "end": "372060"
  },
  {
    "text": "networks look reliable from a remote procedure call point of view how do you handle faults disconnections",
    "start": "372060",
    "end": "377639"
  },
  {
    "text": "reconnections retries leader elections sharding for horizontal scaling all of",
    "start": "377639",
    "end": "383520"
  },
  {
    "text": "these things are actually pretty complex distributed systems problems that we're forcing application developers to have",
    "start": "383520",
    "end": "390669"
  },
  {
    "text": "to understand and and use and as I mentioned some of these some areas of",
    "start": "390669",
    "end": "396310"
  },
  {
    "text": "these have been partially fulfilled by things like service measures for example but there isn't really a single platform",
    "start": "396310",
    "end": "402550"
  },
  {
    "text": "that you can sit down at and write an application and know that you've got all the primitives that you need in order to",
    "start": "402550",
    "end": "408129"
  },
  {
    "text": "build a good distributed application and you know if you contrast this with with a single machine appliqué operating",
    "start": "408129",
    "end": "414400"
  },
  {
    "text": "system something like Linux you know everybody assumes that every single single machine operating system whether",
    "start": "414400",
    "end": "420129"
  },
  {
    "text": "it's Linux Windows Android etc is going to provide virtual memory file systems",
    "start": "420129",
    "end": "425860"
  },
  {
    "text": "locks these kinds of things but we don't actually have the equivalent things for",
    "start": "425860",
    "end": "430900"
  },
  {
    "text": "distributed systems are the ones on the list on the slide we don't have a standard implementation on every",
    "start": "430900",
    "end": "436150"
  },
  {
    "text": "platform and we think there should be one so not surprisingly these are",
    "start": "436150",
    "end": "443139"
  },
  {
    "text": "distributed system problems these are the things that you know Android tanenbaum and these kinds of people have",
    "start": "443139",
    "end": "448599"
  },
  {
    "text": "been teaching computer science and nerds for quite a few decades now in the same",
    "start": "448599",
    "end": "453729"
  },
  {
    "text": "way that you know when you study computer science you learn about how virtual memory managers work and you understand how TCP sliding windows work",
    "start": "453729",
    "end": "460089"
  },
  {
    "text": "but we don't expect application programmers to actually like write TCP sliding windows in their applications or",
    "start": "460089",
    "end": "466479"
  },
  {
    "text": "decide which memory needs to go on disk and which needs to go in RAM that should be you know abstracted away which at the",
    "start": "466479",
    "end": "472210"
  },
  {
    "text": "moment it is not really in distributed systems so the question is what do we do",
    "start": "472210",
    "end": "479979"
  },
  {
    "text": "about this so we clearly need you know people to solve these problems who are",
    "start": "479979",
    "end": "486580"
  },
  {
    "text": "not necessarily application developers and they are pretty specialized so I just want to do a quick diversion here",
    "start": "486580",
    "end": "493319"
  },
  {
    "text": "and talk about this terminology that I'm using an application developer is not necessarily something that everybody",
    "start": "493319",
    "end": "499419"
  },
  {
    "start": "494000",
    "end": "494000"
  },
  {
    "text": "understands certainly not a standard term in the industry so I just wanted to make it clear in my mind what what I'm",
    "start": "499419",
    "end": "506379"
  },
  {
    "text": "talking about here so so I think there's a large amount of very necessary specialization that's developed around",
    "start": "506379",
    "end": "512380"
  },
  {
    "text": "this area so on the left hand side you have application developers these these are the kinds of people who",
    "start": "512380",
    "end": "518770"
  },
  {
    "text": "know a particular application domain very well you know whether it's travel finance banking social networking",
    "start": "518770",
    "end": "524860"
  },
  {
    "text": "whatever they know what their systems need to do they know what their customers want they know what functionality they need they don't",
    "start": "524860",
    "end": "531340"
  },
  {
    "text": "really give a hoot about Paxos or distributed systems algorithms or exponential back-off",
    "start": "531340",
    "end": "537250"
  },
  {
    "text": "or TCP sliding windows for that matter then in the middle there you have system",
    "start": "537250",
    "end": "542920"
  },
  {
    "text": "developer or what I've called system developers and in particular distributed systems developers so these are the kind of people who are really interested in",
    "start": "542920",
    "end": "549040"
  },
  {
    "text": "understanding and solving hard distributed systems problems but they are in extremely short supply they also",
    "start": "549040",
    "end": "555190"
  },
  {
    "text": "cost a very large amount of money typically and more problematically they don't actually understand your business",
    "start": "555190",
    "end": "560740"
  },
  {
    "text": "needs really and typically they're not that interested in them they're more interested in distributed systems problems and then of course we have the",
    "start": "560740",
    "end": "567610"
  },
  {
    "text": "SR ease or DevOps people and these are also very specialized also very expensive typically and these are the",
    "start": "567610",
    "end": "574570"
  },
  {
    "text": "people that understand how your actual application behaves in real life when",
    "start": "574570",
    "end": "579790"
  },
  {
    "text": "your customers hit your application what happens you know what are the sharding systems look like what are the overload",
    "start": "579790",
    "end": "586150"
  },
  {
    "text": "situations look like how much capacity do you need all these kinds of things once again they're not necessarily",
    "start": "586150",
    "end": "592300"
  },
  {
    "text": "distributed systems experts and they're certainly not necessarily application domain experts but they do understand",
    "start": "592300",
    "end": "598750"
  },
  {
    "text": "how to run systems well and so I think it's very useful to understand these",
    "start": "598750",
    "end": "604540"
  },
  {
    "text": "distinctions of course in some cases you can get individual people who have all of these skills and perhaps fulfill all",
    "start": "604540",
    "end": "610270"
  },
  {
    "text": "of these functions but my experience has been that you know sres are exceptionally good at running very",
    "start": "610270",
    "end": "616630"
  },
  {
    "text": "reliable systems and application developers are should be very good at understanding their application domain",
    "start": "616630",
    "end": "622420"
  },
  {
    "text": "and we shouldn't try and force people to kind of be jack-of-all-trades and not very good at any of these things so what",
    "start": "622420",
    "end": "630880"
  },
  {
    "text": "do we do about this is the question so we don't have time to go into all the details but we have this umbrella",
    "start": "630880",
    "end": "636250"
  },
  {
    "text": "project which we've called a Meno RS basically we think that that ultimately what we need is a distributed operating",
    "start": "636250",
    "end": "642970"
  },
  {
    "text": "system and we think that that will probably be comprised of at least a few subsystems one of which needs to manage",
    "start": "642970",
    "end": "650260"
  },
  {
    "text": "this tributed microsystem microservices and that's what we'll be focusing on today we think that you know synchronized",
    "start": "650260",
    "end": "658480"
  },
  {
    "text": "distributed memory shared memory of some sort is is also super useful and we have",
    "start": "658480",
    "end": "663999"
  },
  {
    "text": "some prototypes of systems that we think will be useful there obviously persistent storage transactional",
    "start": "663999",
    "end": "671040"
  },
  {
    "text": "variably consistent persistent storage is very useful and security and privacy",
    "start": "671040",
    "end": "677829"
  },
  {
    "text": "obviously is very important but also very difficult actually in distributed system so those are the areas that we",
    "start": "677829",
    "end": "683230"
  },
  {
    "text": "think we need to tackle we're only going to speak about Amina run but I just wanted to give you a little bit of context of where this where this project",
    "start": "683230",
    "end": "689649"
  },
  {
    "text": "fits in so again I'm not going to dwell on the details of this slide but just to let you know that we think that what we",
    "start": "689649",
    "end": "696459"
  },
  {
    "start": "690000",
    "end": "690000"
  },
  {
    "text": "really want to be thinking about is distributed cloud native applications as a thing that run you know that we don't",
    "start": "696459",
    "end": "702730"
  },
  {
    "text": "have to go and you know decide which pieces need to go into which machines the operating system should should take",
    "start": "702730",
    "end": "708999"
  },
  {
    "text": "care of some of that stuff we need a unified system that provides these micro",
    "start": "708999",
    "end": "715509"
  },
  {
    "text": "service runtime environment memory management storage etc and it needs to",
    "start": "715509",
    "end": "721300"
  },
  {
    "text": "run across all operating systems and be programmable from all programming languages otherwise we don't really live",
    "start": "721300",
    "end": "728620"
  },
  {
    "text": "up to the promise of of this new world this is a lot of research has been going",
    "start": "728620",
    "end": "735970"
  },
  {
    "text": "on for several years at the University of Washington and Irene will be stepping up in a few moments to dive us into some",
    "start": "735970",
    "end": "741250"
  },
  {
    "text": "of the the work that she did with her team there and then after that work was done and around about the time when",
    "start": "741250",
    "end": "747009"
  },
  {
    "text": "Irene was publishing a PhD I came across it and we decided that this was you know worth turning into a big open source",
    "start": "747009",
    "end": "753490"
  },
  {
    "text": "project that people could actually use on an ongoing basis the research wasn't intended for that purpose it was really",
    "start": "753490",
    "end": "759540"
  },
  {
    "text": "exploratory to figure out you know what the space looked like and what we needed so in particular their academic papers",
    "start": "759540",
    "end": "766179"
  },
  {
    "text": "and things floating around which cover a lot of this material some of the terminology just to sort of warn you is",
    "start": "766179",
    "end": "771339"
  },
  {
    "text": "different so over time we discovered that certain terms we use we're confusing we for example renamed this",
    "start": "771339",
    "end": "777100"
  },
  {
    "text": "sapphire system to amino run and a variety of other things so if you see contradictory terms floating around",
    "start": "777100",
    "end": "783400"
  },
  {
    "text": "you'll hopefully understand the origin listings right so we're gonna look at",
    "start": "783400",
    "end": "788890"
  },
  {
    "text": "what the goals were the architecture how it works particularly these deployment managers which are a pretty key part of",
    "start": "788890",
    "end": "794860"
  },
  {
    "text": "of the Amina run system some of Irene's experience in evaluation they did some tests and came up with some pretty",
    "start": "794860",
    "end": "801130"
  },
  {
    "text": "interesting observations and data as I mentioned the new is going to give us a demo to prove it's not all smoke and",
    "start": "801130",
    "end": "806200"
  },
  {
    "text": "mirrors and hopefully if we manage to keep you everyone awake for long enough we will manage to have a Q&A session at",
    "start": "806200",
    "end": "813790"
  },
  {
    "text": "the end so our goals you know the",
    "start": "813790",
    "end": "818950"
  },
  {
    "start": "814000",
    "end": "814000"
  },
  {
    "text": "primary goals that we had with that we want to separate application logic from",
    "start": "818950",
    "end": "824170"
  },
  {
    "text": "code from deployment code so that different people can do different things so that goes back to my slide about s",
    "start": "824170",
    "end": "830920"
  },
  {
    "text": "Ari's versus application developers versus system developers and then we also want to allow these people",
    "start": "830920",
    "end": "836670"
  },
  {
    "text": "particularly the sres and system programmers to choose deployment approaches that meet the application",
    "start": "836670",
    "end": "843100"
  },
  {
    "text": "requirements and and be able to change these deployments without modifying the applications so we don't think that it's",
    "start": "843100",
    "end": "849850"
  },
  {
    "text": "a good idea for applications actually know anything about sharding or load balancing or error recovery or any of",
    "start": "849850",
    "end": "856750"
  },
  {
    "text": "these things because they're not really related to application logic we would prefer to separate that out into",
    "start": "856750",
    "end": "862090"
  },
  {
    "text": "different part of the system which can be dealt with by expert programs in those domains and run by people who know",
    "start": "862090",
    "end": "868450"
  },
  {
    "text": "what they're doing with them in addition of course we wanted to be super simple to understand and use must be",
    "start": "868450",
    "end": "873640"
  },
  {
    "text": "high-performance and it must support all the different programming languages that everybody knows and loves I I've been",
    "start": "873640",
    "end": "879700"
  },
  {
    "text": "around long enough that I've come to the conclusion they're trying to convince someone to use a programming language they don't like is not very successful",
    "start": "879700",
    "end": "887710"
  },
  {
    "text": "in practice very often so I decided not to try and do that and we we definitely don't want to reinvent any wheels or",
    "start": "887710",
    "end": "895120"
  },
  {
    "text": "compete with any you know existing systems that solve some of these problems well so there are service",
    "start": "895120",
    "end": "901600"
  },
  {
    "text": "measures out there we're not trying to you know put service measures out of business we just want to create a sort",
    "start": "901600",
    "end": "906970"
  },
  {
    "text": "of a cohesive platform that people can use and plug in the service measures of their choice and",
    "start": "906970",
    "end": "914040"
  },
  {
    "text": "right so I think around about now is",
    "start": "915200",
    "end": "920310"
  },
  {
    "text": "when I start handing things over to Irene and I'm running out of time so let",
    "start": "920310",
    "end": "926910"
  },
  {
    "text": "me think what else I want to say before I hand over to her I'm gonna skip a few",
    "start": "926910",
    "end": "933660"
  },
  {
    "start": "932000",
    "end": "932000"
  },
  {
    "text": "slides here so we'll give you an",
    "start": "933660",
    "end": "938700"
  },
  {
    "text": "overview of the architecture and then describe all of these layers in a little bit more detail at the top we've got the application itself which runs in a",
    "start": "938700",
    "end": "946200"
  },
  {
    "text": "uniform environment that spans across mobile devices cloud servers and edge devices and at the bottom there's a",
    "start": "946200",
    "end": "952500"
  },
  {
    "text": "deployment kernel that runs everywhere the application does and provides a uniform environment for applications",
    "start": "952500",
    "end": "959430"
  },
  {
    "text": "with basic deployment services and you know it's very convenient and easy to",
    "start": "959430",
    "end": "965730"
  },
  {
    "text": "run and manage the deployment kernel layer and therefore everything on top of it on top of kubernetes and we do that",
    "start": "965730",
    "end": "972660"
  },
  {
    "text": "that's our sort of default deployment mechanism but it's not required or fundamental to to Amino itself and just",
    "start": "972660",
    "end": "981120"
  },
  {
    "text": "to give you an idea of what a you know in practice deployment like might look like and I apologize for the not very",
    "start": "981120",
    "end": "987780"
  },
  {
    "text": "good color scheme here but basically we have this big distributed cloud application broken up into micro",
    "start": "987780",
    "end": "994170"
  },
  {
    "text": "services and obviously each one of those micro services might be further decomposed into into other modules each",
    "start": "994170",
    "end": "1000620"
  },
  {
    "text": "one of these micro services is run by one or more deployment managers in the in that layer in the middle there and",
    "start": "1000620",
    "end": "1006440"
  },
  {
    "text": "all of these run on top of essentially a distributed kernel which provides all the heavy lifting you know the thing",
    "start": "1006440",
    "end": "1012560"
  },
  {
    "text": "that moves processes around and and intercepts various different system",
    "start": "1012560",
    "end": "1017930"
  },
  {
    "text": "calls and using this kind of approach it becomes very straightforward to for",
    "start": "1017930",
    "end": "1024500"
  },
  {
    "text": "example automatically migrate micro services to optimize for any given",
    "start": "1024500",
    "end": "1030110"
  },
  {
    "text": "property latency or power consumption anything like that",
    "start": "1030110",
    "end": "1035140"
  },
  {
    "text": "and we want to do all of this with support for multiple languages I'm gonna",
    "start": "1037830",
    "end": "1044130"
  },
  {
    "text": "skip over most of the slide what I would like to mention briefly before handing",
    "start": "1044130",
    "end": "1049170"
  },
  {
    "start": "1048000",
    "end": "1048000"
  },
  {
    "text": "over to Irene is that we did quite a bit of work to support multiple languages and we we used a thing called DRA vm",
    "start": "1049170",
    "end": "1055350"
  },
  {
    "text": "which some of you may have come across I'm not going to go into detail we definitely don't have time but but I wanted to just mention that it's a high",
    "start": "1055350",
    "end": "1061740"
  },
  {
    "text": "performance polyglot meaning multi-language virtual machine in the sense of a JVM not in the sense of a of",
    "start": "1061740",
    "end": "1068970"
  },
  {
    "text": "an OpenStack virtual machine and it provides support for both ahead of time",
    "start": "1068970",
    "end": "1075120"
  },
  {
    "text": "compilation and therefore native execution or just-in-time compilation it's embeddable in other environments so",
    "start": "1075120",
    "end": "1082350"
  },
  {
    "text": "you can actually embed it inside the database to run these things you can embed it inside the open JDK or you can",
    "start": "1082350",
    "end": "1088050"
  },
  {
    "text": "run it standalone and the particular thing that it buys us is the ability to one you know produce different parts of",
    "start": "1088050",
    "end": "1095400"
  },
  {
    "text": "the application in different languages and yet be able to easily transfer data",
    "start": "1095400",
    "end": "1101130"
  },
  {
    "text": "structures and things like that between the different parts of the language but also the the kernel the deployment",
    "start": "1101130",
    "end": "1106500"
  },
  {
    "text": "managers in the application can also be run in different languages without the language boundaries getting in the way",
    "start": "1106500",
    "end": "1111510"
  },
  {
    "text": "and just to be clear some of these diagrams we're going to show you are going to show you know all these layers and pieces of software this stuff all",
    "start": "1111510",
    "end": "1118020"
  },
  {
    "text": "gets compiled away into a single binary a single process so you don't need to",
    "start": "1118020",
    "end": "1123120"
  },
  {
    "text": "worry too much about you know inter process communication and network connections and all that stuff other than obviously between machines but as",
    "start": "1123120",
    "end": "1129810"
  },
  {
    "text": "soon wherever you have multiple of these layers on the same machine they all get compiled away into nothing effectively",
    "start": "1129810",
    "end": "1135960"
  },
  {
    "text": "and with no further ado I'm gonna hand over Tyree",
    "start": "1135960",
    "end": "1142730"
  },
  {
    "text": "hi so Quinton told you a bit about what the",
    "start": "1147950",
    "end": "1153390"
  },
  {
    "text": "amino runtimes goals are and what it's capable of what I'm gonna talk about is",
    "start": "1153390",
    "end": "1158460"
  },
  {
    "text": "sort of the nitty-gritty technical details of how it actually does all of this magic so the key idea behind the",
    "start": "1158460",
    "end": "1166620"
  },
  {
    "text": "amino runtime is that we divide the run time into a deployment management layer",
    "start": "1166620",
    "end": "1172350"
  },
  {
    "text": "and a deployment kernel and the deployment kernel is the very lowest",
    "start": "1172350",
    "end": "1177930"
  },
  {
    "text": "layer oh these are our micro services is the very lowest layer of the amino",
    "start": "1177930",
    "end": "1184440"
  },
  {
    "start": "1184000",
    "end": "1184000"
  },
  {
    "text": "runtime and what the deployment kernel does is it does essentially those best-effort mechanisms that you need for",
    "start": "1184440",
    "end": "1191640"
  },
  {
    "text": "running any microt service so it provides instantiation of your amino",
    "start": "1191640",
    "end": "1197640"
  },
  {
    "text": "microservices it automatically replicates them tracks them it can move them and it can also find your amino",
    "start": "1197640",
    "end": "1207000"
  },
  {
    "text": "micro-services so you can essentially make a call transparently from any amino microservice to any other amino",
    "start": "1207000",
    "end": "1213600"
  },
  {
    "text": "micro-service without having to you know do a lot of complicated lookup and RPC",
    "start": "1213600",
    "end": "1220130"
  },
  {
    "text": "management finally the most important task of the deployment kernel is",
    "start": "1220130",
    "end": "1226140"
  },
  {
    "text": "actually to manage and distribute deployment managers so deployment manager is in essence they live on the",
    "start": "1226140",
    "end": "1235320"
  },
  {
    "text": "deployment kernel servers and they live in a layer above the deployment kernel and they provide guarantees that are in",
    "start": "1235320",
    "end": "1241740"
  },
  {
    "text": "addition to these basic micro server for service mechanisms that you might want",
    "start": "1241740",
    "end": "1248240"
  },
  {
    "text": "one of the things I say about the deployment managers is their that they're sort of the magic sauce there",
    "start": "1248240",
    "end": "1254040"
  },
  {
    "text": "are libraries that make all of the magic happen for all of these complex coordination tasks that you might want",
    "start": "1254040",
    "end": "1260040"
  },
  {
    "text": "to do across and between your micro services so deployment manager is",
    "start": "1260040",
    "end": "1265620"
  },
  {
    "start": "1264000",
    "end": "1264000"
  },
  {
    "text": "actually work by interposing on RPC to and between micro services and what they",
    "start": "1265620",
    "end": "1274770"
  },
  {
    "text": "can do is they can do things like create multiple copies of a microservice and then every time",
    "start": "1274770",
    "end": "1280859"
  },
  {
    "text": "that microservice receives a call it will route the call to all of those copies rather than just one it can also",
    "start": "1280859",
    "end": "1288749"
  },
  {
    "text": "do things like shard a micro service and then route our pcs to that micro service",
    "start": "1288749",
    "end": "1294509"
  },
  {
    "text": "to the correct shard and then finally micro service calls and events this",
    "start": "1294509",
    "end": "1301259"
  },
  {
    "text": "interposition that these deployment managers are doing they're completely",
    "start": "1301259",
    "end": "1306499"
  },
  {
    "text": "transparent to the application right they're completely transparent to the micro services themselves because they",
    "start": "1306499",
    "end": "1312299"
  },
  {
    "text": "happen before the RPC reaches the micro service and so that means that you can",
    "start": "1312299",
    "end": "1317669"
  },
  {
    "text": "actually as an application program or easily choose and then change your mind about what kind of deployment manager",
    "start": "1317669",
    "end": "1324809"
  },
  {
    "text": "you might want for example you might start out having just a single copy of your micro service running but then",
    "start": "1324809",
    "end": "1332399"
  },
  {
    "text": "decide you need to later shard it and this can be done without changing any of your application code the other thing",
    "start": "1332399",
    "end": "1338580"
  },
  {
    "text": "that we can do with deployment managers is arbitrarily combine them so we would obviously like to be able to have shards",
    "start": "1338580",
    "end": "1345479"
  },
  {
    "text": "that are replicated replicas that you might be able to do transactions distributed transactions across and so",
    "start": "1345479",
    "end": "1352019"
  },
  {
    "text": "on so the way that the deployment",
    "start": "1352019",
    "end": "1357960"
  },
  {
    "text": "manager management layer works is that for each micro service the programmer",
    "start": "1357960",
    "end": "1363599"
  },
  {
    "text": "chooses a single deployment manager so you might choose for some of your micro services say that you need to replicate",
    "start": "1363599",
    "end": "1370589"
  },
  {
    "text": "for fault tolerance you would choose a replication deployment manager for some of your other micro services you might",
    "start": "1370589",
    "end": "1377099"
  },
  {
    "text": "choose things like code offloading if you want to move your code somewhere",
    "start": "1377099",
    "end": "1382529"
  },
  {
    "text": "where there's a more powerful machine or maybe one that has a GPU or some other service that it's able to offer we offer",
    "start": "1382529",
    "end": "1391799"
  },
  {
    "text": "a library of deployment managers that cover as lots of categories of what we expect to be standard problems for",
    "start": "1391799",
    "end": "1398700"
  },
  {
    "text": "application programmers to solve today so things like caching checkpointing replication sharding and scaling we have",
    "start": "1398700",
    "end": "1406889"
  },
  {
    "text": "a selection of libraries of deployment manager for each category so not everyone has to",
    "start": "1406889",
    "end": "1415260"
  },
  {
    "start": "1408000",
    "end": "1408000"
  },
  {
    "text": "do cashing in the same way you can you do caching using a lease you can do caching using some sort of timeout you",
    "start": "1415260",
    "end": "1423179"
  },
  {
    "text": "can do caching using an explicit lock so this is a list of some of the deployment",
    "start": "1423179",
    "end": "1428610"
  },
  {
    "text": "managers that we have built we continue to expand on them and the deployment manager library is very much extensible",
    "start": "1428610",
    "end": "1434730"
  },
  {
    "text": "and this is entirely due to the way that the amino runtime is architected so I'm",
    "start": "1434730",
    "end": "1441840"
  },
  {
    "text": "going to talk next about how each deployment manager actually works to give you an idea about how SR ease or",
    "start": "1441840",
    "end": "1449220"
  },
  {
    "start": "1442000",
    "end": "1442000"
  },
  {
    "text": "these distributed systems people can actually build additional deployment managers based on their needs or their",
    "start": "1449220",
    "end": "1456270"
  },
  {
    "text": "research so the deployment manager API takes each deployment manager and splits",
    "start": "1456270",
    "end": "1463409"
  },
  {
    "text": "it into three components so each deployment manager must consist of some server-side code which these amino",
    "start": "1463409",
    "end": "1471750"
  },
  {
    "text": "runtime will co-locate with the micro service itself some client-side code which the amino runtime collocates with",
    "start": "1471750",
    "end": "1479549"
  },
  {
    "text": "the callers of the micro service and then a centralized group coordinator",
    "start": "1479549",
    "end": "1484760"
  },
  {
    "text": "component which is located on a fault-tolerant service that's provided by the immuno runtime so to make all of",
    "start": "1484760",
    "end": "1492419"
  },
  {
    "text": "this a little bit more concrete I'll explain exactly what happens so you write code for each of these deployment",
    "start": "1492419",
    "end": "1498960"
  },
  {
    "start": "1495000",
    "end": "1495000"
  },
  {
    "text": "managers and the deployment managers invoke the code automatically on each RPC so you start out with your micro",
    "start": "1498960",
    "end": "1506220"
  },
  {
    "text": "Service write it runs on some server somewhere in your kubernetes container then you decide that you want to",
    "start": "1506220",
    "end": "1513090"
  },
  {
    "text": "replicate this micro service so how do we go about doing that well we have a",
    "start": "1513090",
    "end": "1520140"
  },
  {
    "text": "single copy of our micro service which we place in a kubernetes container and",
    "start": "1520140",
    "end": "1526350"
  },
  {
    "text": "then we create a server-side deployment manager that runs next to it on the same",
    "start": "1526350",
    "end": "1532620"
  },
  {
    "text": "deployment on the same kernel server then we can create another copy which",
    "start": "1532620",
    "end": "1537960"
  },
  {
    "text": "gets its own copy of the server the server deployment manager so these are just code that get invoked by",
    "start": "1537960",
    "end": "1545400"
  },
  {
    "text": "Amino runtime on the deployment kernels when the micro Service receives an RPC",
    "start": "1545400",
    "end": "1553580"
  },
  {
    "text": "so these managers they can talk to each other within a single address space so",
    "start": "1553580",
    "end": "1559440"
  },
  {
    "text": "essentially the Amino runtime is providing transparent RPC between the",
    "start": "1559440",
    "end": "1564830"
  },
  {
    "text": "deployment managers between the components of a single deployment manager then each to reach each",
    "start": "1564830",
    "end": "1572040"
  },
  {
    "text": "Microsystems service each application goes through a stub in order to call the",
    "start": "1572040",
    "end": "1578100"
  },
  {
    "text": "micro service this is where the magic happens of the amino runtime deployment kernel where it looks up where the micro",
    "start": "1578100",
    "end": "1584520"
  },
  {
    "text": "service lives and makes the RPC to the micro service depending on where it's",
    "start": "1584520",
    "end": "1589980"
  },
  {
    "text": "been deployed and so with this stub we we collate locate a little bit of code",
    "start": "1589980",
    "end": "1596400"
  },
  {
    "text": "that we call the piece of the deployment manager that's the client component so",
    "start": "1596400",
    "end": "1601890"
  },
  {
    "text": "each stub gets its own bit of client code client-side code and that code gets invoked every time the another micro",
    "start": "1601890",
    "end": "1609780"
  },
  {
    "text": "service makes a call to this micro service and then when the call reaches the server or the kubernetes container",
    "start": "1609780",
    "end": "1616140"
  },
  {
    "text": "where the micro service is running first we invoke the server-side deployment manager before we up call into the",
    "start": "1616140",
    "end": "1622950"
  },
  {
    "text": "application itself or the micro service itself and then finally all of these can",
    "start": "1622950",
    "end": "1628950"
  },
  {
    "text": "communicate with the centralized group deployment manager which is we consider",
    "start": "1628950",
    "end": "1634410"
  },
  {
    "text": "a centralized and fault tolerant component so this can do things like choose leaders for your replica group it",
    "start": "1634410",
    "end": "1643500"
  },
  {
    "text": "can decide you know who holds leases for how long and other things like that so the people who write deployment managers",
    "start": "1643500",
    "end": "1652080"
  },
  {
    "text": "don't have to handle this kind of stuff themselves so I'm gonna be a little bit",
    "start": "1652080",
    "end": "1660240"
  },
  {
    "start": "1656000",
    "end": "1656000"
  },
  {
    "text": "more detailed about what happens when you actually make an RPC to a micro service that's running on top of a",
    "start": "1660240",
    "end": "1666150"
  },
  {
    "text": "replication deployment manager so in the beginning the deployment manager is going to instantiate three copies each",
    "start": "1666150",
    "end": "1672840"
  },
  {
    "text": "in separate kubernetes containers of the micro service",
    "start": "1672840",
    "end": "1678149"
  },
  {
    "text": "whenever we start the actually running",
    "start": "1678149",
    "end": "1685139"
  },
  {
    "text": "the micro service we are going to choose a leader for the micro service out of the three replicas and any calls that",
    "start": "1685139",
    "end": "1692099"
  },
  {
    "text": "come from inside the application are actually going to be forwarded to the leader first the server deployment",
    "start": "1692099",
    "end": "1698339"
  },
  {
    "text": "manager will then replicate that call to the other copies and up call into all",
    "start": "1698339",
    "end": "1704549"
  },
  {
    "text": "three copies at the same time before replying with the response to this client and so in this way essentially by",
    "start": "1704549",
    "end": "1712709"
  },
  {
    "text": "interposing on the RPC to the micro service we're able to transparently provide replication essentially state",
    "start": "1712709",
    "end": "1720719"
  },
  {
    "text": "machine replication without having to actually write that explicit code into the application itself so we can do",
    "start": "1720719",
    "end": "1729749"
  },
  {
    "text": "something similar for offloading so this is where the micro service might be",
    "start": "1729749",
    "end": "1735179"
  },
  {
    "text": "running on some node that doesn't have as much computational ability as it might like so in the immuno runtime case",
    "start": "1735179",
    "end": "1742349"
  },
  {
    "text": "this could actually be a edge node or a mobile device what we do then is we",
    "start": "1742349",
    "end": "1749789"
  },
  {
    "text": "essentially just create another copy of the micro service on the cloud and we forward calls to the local micro service",
    "start": "1749789",
    "end": "1757709"
  },
  {
    "text": "that might be on at a slightly underpowered node and if we find that the performance is not good enough the",
    "start": "1757709",
    "end": "1763939"
  },
  {
    "text": "deployment manager can actually transparently forward the call to the instantiation that it's made on a",
    "start": "1763939",
    "end": "1770009"
  },
  {
    "text": "beefier cloud machine without having to interact with the application code at all and so it's able to do this",
    "start": "1770009",
    "end": "1776129"
  },
  {
    "text": "completely transparently under the covers we can do the same thing for caching so this is perhaps where the",
    "start": "1776129",
    "end": "1782339"
  },
  {
    "start": "1778000",
    "end": "1778000"
  },
  {
    "text": "latency is too high to your micro service and you want to move the micro",
    "start": "1782339",
    "end": "1787499"
  },
  {
    "text": "service closer to you so essentially what happens in the caching deployment",
    "start": "1787499",
    "end": "1793769"
  },
  {
    "text": "manager is sort of an inverse of the offloading one we have some master that's running on a cloud server but",
    "start": "1793769",
    "end": "1800309"
  },
  {
    "text": "that we decide the latency is too high so then instead what we do is from the",
    "start": "1800309",
    "end": "1806429"
  },
  {
    "text": "colleague the purse the other micro service or mobile device that's making the call to this",
    "start": "1806429",
    "end": "1811680"
  },
  {
    "text": "micro-service we actually create a copy of the micro service and cache it inside",
    "start": "1811680",
    "end": "1817710"
  },
  {
    "text": "the client-side deployment manager so in that case we can now have much lower",
    "start": "1817710",
    "end": "1823620"
  },
  {
    "text": "latency access to our local copy of the micro service but of course we now we have to keep that micro so risk",
    "start": "1823620",
    "end": "1830130"
  },
  {
    "text": "consistent or coordinated somehow with the master micro service so hopefully",
    "start": "1830130",
    "end": "1836370"
  },
  {
    "text": "this gives you some idea of how these deployment managers can transparently under the covers do a lot of the",
    "start": "1836370",
    "end": "1841470"
  },
  {
    "text": "coordination the applications today would normally have to do in the application itself I'd like to note that",
    "start": "1841470",
    "end": "1848070"
  },
  {
    "text": "we can actually also do much more sophisticated stateful my object",
    "start": "1848070",
    "end": "1853260"
  },
  {
    "text": "migration under the covers without letting the application know because",
    "start": "1853260",
    "end": "1859020"
  },
  {
    "text": "every RPC is done through the Amino runtime the immuno runtime has actually the ability to move micro services",
    "start": "1859020",
    "end": "1865320"
  },
  {
    "text": "wherever it would like based on metrics like minimizing latency between the",
    "start": "1865320",
    "end": "1871200"
  },
  {
    "text": "micro services or minimizing throughput or optimizing your power usage right and",
    "start": "1871200",
    "end": "1879150"
  },
  {
    "text": "you can imagine that this becomes actually a pretty complicated distributed problem because you want to",
    "start": "1879150",
    "end": "1884700"
  },
  {
    "text": "do a full optimization with all of the information that you have of how much",
    "start": "1884700",
    "end": "1889740"
  },
  {
    "text": "computation each node is doing and how much communication there is between the two between the different micro services",
    "start": "1889740",
    "end": "1896100"
  },
  {
    "text": "so this is actually something that you'll see in the demo in a minute so we can also compose deployment managers",
    "start": "1896100",
    "end": "1903320"
  },
  {
    "start": "1900000",
    "end": "1900000"
  },
  {
    "text": "this is essentially done through chaining so every time an RPC is made we",
    "start": "1903320",
    "end": "1908670"
  },
  {
    "text": "go through a chain we could potentially go through a chain of deployment managers in order to achieve all of the",
    "start": "1908670",
    "end": "1914130"
  },
  {
    "text": "properties that we want for a particular micro Service as you can imagine this does eventually get pretty complicated",
    "start": "1914130",
    "end": "1920520"
  },
  {
    "text": "which is actually why it's important that application programmers don't have to do this and it's done under the",
    "start": "1920520",
    "end": "1926100"
  },
  {
    "text": "covers with configuration by sres or distributed systems programmers all",
    "start": "1926100",
    "end": "1931830"
  },
  {
    "text": "right so to wrap up i'm going to talk a little bit about some experiments that we did with our initial prototype of the",
    "start": "1931830",
    "end": "1938910"
  },
  {
    "text": "amino runtime we ran our experiments on a series of Nexus devices and",
    "start": "1938910",
    "end": "1944700"
  },
  {
    "start": "1941000",
    "end": "1941000"
  },
  {
    "text": "cloud servers connected through Wi-Fi and a 4G connection basically so the",
    "start": "1944700",
    "end": "1951000"
  },
  {
    "text": "first thing we're gonna look at is what happens in a peer-to-peer multiplayer game when we use different amino",
    "start": "1951000",
    "end": "1956700"
  },
  {
    "text": "deployment managers to place the micro-services in different ways so",
    "start": "1956700",
    "end": "1962519"
  },
  {
    "text": "initially oh so the x-axis here gives the different deployments and then the",
    "start": "1962519",
    "end": "1968700"
  },
  {
    "text": "y-axis gives you the latency of making each move in the game these results are probably about five years old so take",
    "start": "1968700",
    "end": "1975539"
  },
  {
    "text": "them with a grain of salt so the first the first thing that we tried was",
    "start": "1975539",
    "end": "1984029"
  },
  {
    "text": "actually just placing the micro-service in the cloud and having the two clients share and access the micro-service",
    "start": "1984029",
    "end": "1989610"
  },
  {
    "text": "together so that gives you roughly even latency for both players for both read",
    "start": "1989610",
    "end": "1994740"
  },
  {
    "text": "and write now we can actually just dynamically move the microservice if we would like to one of the players devices",
    "start": "1994740",
    "end": "2001070"
  },
  {
    "text": "so in this case we've moved it to player Juan's device so this has been done without any application code changes",
    "start": "2001070",
    "end": "2007850"
  },
  {
    "text": "whatsoever we're just dynamically moving or migrating the micro-service to the user's device and you can see that",
    "start": "2007850",
    "end": "2013909"
  },
  {
    "text": "player one suddenly gets much better performance and player two sees a slight increase in its performance now",
    "start": "2013909",
    "end": "2021529"
  },
  {
    "text": "alternatively we can deploy the Micra service in some peer-to-peer way where each player's device actually hosts a",
    "start": "2021529",
    "end": "2029690"
  },
  {
    "text": "copy of the game or micro service by itself and so in this case you can see that both players are getting great read",
    "start": "2029690",
    "end": "2036169"
  },
  {
    "text": "latency because they're able to read their own local copy of the micro service but when they have to write they",
    "start": "2036169",
    "end": "2042200"
  },
  {
    "text": "have to write to both their local copy and their opponent's copy and update all of the players and so in this case",
    "start": "2042200",
    "end": "2048740"
  },
  {
    "text": "writing becomes much more expensive we can see similar results for taking a",
    "start": "2048740",
    "end": "2056388"
  },
  {
    "start": "2052000",
    "end": "2052000"
  },
  {
    "text": "physics engine basically for a mobile game and moving it between a running on",
    "start": "2056389",
    "end": "2061608"
  },
  {
    "text": "the mobile device and running on the cloud so when we have a phone we are able to run the physics engine on the",
    "start": "2061609",
    "end": "2068780"
  },
  {
    "text": "phone but at quite a high expense if we have a tablet we have slightly better",
    "start": "2068780",
    "end": "2074888"
  },
  {
    "text": "performance actually and so our extension is able to run much faster",
    "start": "2074889",
    "end": "2080148"
  },
  {
    "text": "alternatively we can actually move the physics engine on to as a micro service",
    "start": "2080149",
    "end": "2085169"
  },
  {
    "text": "on to the cloud where the performance sort of shifts right so most of the",
    "start": "2085169",
    "end": "2092220"
  },
  {
    "text": "performance is going to be spent communicating with the remote micro service and then the cost of actually",
    "start": "2092220",
    "end": "2098160"
  },
  {
    "text": "running the physics engine is going to go down significantly because it's able to run on a bigger beefier cloud server",
    "start": "2098160",
    "end": "2103890"
  },
  {
    "text": "and then when we run over something like a 4G network the network becomes even",
    "start": "2103890",
    "end": "2109260"
  },
  {
    "text": "more expensive and so you might decide to change your your placement of these",
    "start": "2109260",
    "end": "2115590"
  },
  {
    "text": "micro services based on the whether the user is using Wi-Fi or 4G and whether they're moving around so that's pretty",
    "start": "2115590",
    "end": "2125010"
  },
  {
    "start": "2122000",
    "end": "2122000"
  },
  {
    "text": "much it for all of the details about how the amino runtime works I will give it",
    "start": "2125010",
    "end": "2132060"
  },
  {
    "text": "back to Quintin to summarize and talk about what the next steps are for this project and then we still have negative",
    "start": "2132060",
    "end": "2139800"
  },
  {
    "text": "two minutes for the demo hello yeah so",
    "start": "2139800",
    "end": "2151800"
  },
  {
    "text": "yeah we've run terribly over time I'm sorry about that but we're nearly done and given that there no more talks I",
    "start": "2151800",
    "end": "2157140"
  },
  {
    "text": "guess that's not too serious so yeah I think we've we've looked at",
    "start": "2157140",
    "end": "2162450"
  },
  {
    "text": "the summary as there are numerous things we would still like to do this stuff is",
    "start": "2162450",
    "end": "2167700"
  },
  {
    "start": "2163000",
    "end": "2163000"
  },
  {
    "text": "is you know usable at the moment but it I wouldn't you know deploy any banking",
    "start": "2167700",
    "end": "2174030"
  },
  {
    "text": "applications on it just yet but it's getting there we also have there's some limitations to the state migration so",
    "start": "2174030",
    "end": "2180690"
  },
  {
    "text": "for example if your application has state that sits outside of your micro Service you know an external file or something sitting in the operating",
    "start": "2180690",
    "end": "2187170"
  },
  {
    "text": "system that doesn't magically migrate with your micro service so we can do some pretty straightforward things to",
    "start": "2187170",
    "end": "2192720"
  },
  {
    "text": "make that work better there's some rough edges between certain combinations of languages we you know we support a large",
    "start": "2192720",
    "end": "2198390"
  },
  {
    "text": "number of languages and depending on the permutations there's some slightly funky things that happen which we'd like to",
    "start": "2198390",
    "end": "2203700"
  },
  {
    "text": "clean up we would like to build some more plugins for external systems like things like you know a CD and tea",
    "start": "2203700",
    "end": "2209440"
  },
  {
    "text": "and sto and these kinds of things which clearly can be well used inside a",
    "start": "2209440",
    "end": "2214540"
  },
  {
    "text": "deployment manager and then we're also very interested in in Federation's and",
    "start": "2214540",
    "end": "2219910"
  },
  {
    "text": "disconnected edge computing scenarios so we've done some work on that area and",
    "start": "2219910",
    "end": "2225220"
  },
  {
    "text": "we've run some things in those kind of contexts but we're not totally sure that everything works you know the original",
    "start": "2225220",
    "end": "2230710"
  },
  {
    "text": "design was not was not explicitly created for that all right feel free to",
    "start": "2230710",
    "end": "2238180"
  },
  {
    "start": "2237000",
    "end": "2237000"
  },
  {
    "text": "get involved this is all open source we just open sourced it literally like two days ago one day ago there's a slack",
    "start": "2238180",
    "end": "2245200"
  },
  {
    "text": "channel as a website github repo you can go and have a look there and certainly getting in touch with us if you're at",
    "start": "2245200",
    "end": "2250810"
  },
  {
    "text": "all interested in this stuff and I would like to then hand over to Vanunu's gonna",
    "start": "2250810",
    "end": "2256450"
  },
  {
    "text": "give us a little bit of a demo as I said to hopefully show everyone that this is",
    "start": "2256450",
    "end": "2263440"
  },
  {
    "text": "not just smoke and mirrors what I have to do is figure out how to mirror the",
    "start": "2263440",
    "end": "2270010"
  },
  {
    "text": "displays and we were not brave enough to [Music]",
    "start": "2270010",
    "end": "2275700"
  },
  {
    "text": "do a live demo given how flaky the network is but here we go so you can you",
    "start": "2275700",
    "end": "2284380"
  },
  {
    "text": "can maximize it there and you can push play there talking to that thing",
    "start": "2284380",
    "end": "2291750"
  },
  {
    "text": "I'll be giving the demo on automatic object migration now it's for face",
    "start": "2292590",
    "end": "2298420"
  },
  {
    "text": "recognition microservice left down one is not an object monitoring system it's",
    "start": "2298420",
    "end": "2304960"
  },
  {
    "text": "a part of BK and the right above it run KS one what you are seeing is a kernel server so I'll be and the right",
    "start": "2304960",
    "end": "2313810"
  },
  {
    "text": "side top one is a cloud kernel server and the left right bottom one is an",
    "start": "2313810",
    "end": "2319000"
  },
  {
    "text": "application that is the place where we run the client",
    "start": "2319000",
    "end": "2323160"
  },
  {
    "text": "so we are starting an OMS now starting a",
    "start": "2331549",
    "end": "2339690"
  },
  {
    "text": "kind of server kind of server gets registered to the OMF",
    "start": "2339690",
    "end": "2344240"
  },
  {
    "text": "now we are running the cloud kana server we have more CPU capacity there so",
    "start": "2418260",
    "end": "2425730"
  },
  {
    "text": "microservice will be migrated from the application client side to the kernel server it migrated just now",
    "start": "2425730",
    "end": "2433309"
  },
  {
    "text": "frame rate is increasing now because it has more CPU power",
    "start": "2441660",
    "end": "2447110"
  },
  {
    "text": "we have reached 11 a frame processing per second",
    "start": "2467640",
    "end": "2474270"
  },
  {
    "text": "if we see it has improved much when we ran it turn the kernel server to application client again when we didn't",
    "start": "2487430",
    "end": "2493999"
  },
  {
    "text": "on the cloud kind of server that it has reached well now so better the CPU power",
    "start": "2493999",
    "end": "2499819"
  },
  {
    "text": "is but it is migrating there",
    "start": "2499819",
    "end": "2503589"
  },
  {
    "text": "yeah you're done",
    "start": "2516960",
    "end": "2520130"
  },
  {
    "text": "you have any questions thank you very",
    "start": "2522440",
    "end": "2530820"
  },
  {
    "text": "much for staying til the end we were around for Q&A if anyone has any questions or anything they want to",
    "start": "2530820",
    "end": "2536700"
  },
  {
    "text": "discuss we're happy to take questions",
    "start": "2536700",
    "end": "2541369"
  },
  {
    "text": "[Applause] yeah that's a good question so so the way it works is the running process you",
    "start": "2543910",
    "end": "2550690"
  },
  {
    "text": "can imagine it's actually a class an instance of a class that is being migrated and that has state in it so",
    "start": "2550690",
    "end": "2557950"
  },
  {
    "text": "what we do is we freeze the state we move the state to the other side and then we load that into a virtual machine",
    "start": "2557950",
    "end": "2563050"
  },
  {
    "text": "with that state and then we carry on running and because we have it built into the deployment manager layer we",
    "start": "2563050",
    "end": "2568810"
  },
  {
    "text": "have things like retries and there may be replicas of this thing so it you know the system takes care of making sure",
    "start": "2568810",
    "end": "2575140"
  },
  {
    "text": "they no fail our pcs it's a train that process any other questions I noticed",
    "start": "2575140",
    "end": "2590110"
  },
  {
    "text": "from 25 years ago when I was students and I thought about this by Andrew Tenenbaum but you have to write that",
    "start": "2590110",
    "end": "2598060"
  },
  {
    "text": "finally in production yeah that that's a",
    "start": "2598060",
    "end": "2603850"
  },
  {
    "text": "that's actually a very good question and one that comes up quite regularly you know we've seen these kinds of things for a very long time DCE and there are",
    "start": "2603850",
    "end": "2610690"
  },
  {
    "text": "lots of things you know in the 90s that did this I think they were you know combination of factors that just made",
    "start": "2610690",
    "end": "2618760"
  },
  {
    "text": "them not become ubiquitous you know we didn't have public clouds in those days we didn't have mobile devices we had",
    "start": "2618760",
    "end": "2626380"
  },
  {
    "text": "warring UNIX vendors trying to you know outdo each other we had standards",
    "start": "2626380",
    "end": "2631630"
  },
  {
    "text": "committees trying to come up with standards for these things and I think you know no one of those things",
    "start": "2631630",
    "end": "2638200"
  },
  {
    "text": "necessarily explains why they didn't take off but I think in combination they",
    "start": "2638200",
    "end": "2643810"
  },
  {
    "text": "just prevented this from becoming ubiquitous the other I think the other",
    "start": "2643810",
    "end": "2649570"
  },
  {
    "text": "thing that that is pretty important is there was this kind of notion that that",
    "start": "2649570",
    "end": "2654820"
  },
  {
    "text": "you could just take any object oriented program and just like scatter the objects all over the over the network",
    "start": "2654820",
    "end": "2660250"
  },
  {
    "text": "and and you know it should be transparent and we discovered that that doesn't work like it explicitly does not",
    "start": "2660250",
    "end": "2666610"
  },
  {
    "text": "work you need to tell the programmer that this is a micro service this is remote this is gonna fail it doesn't",
    "start": "2666610",
    "end": "2673240"
  },
  {
    "text": "need to be replicated and it's fundamentally different than a you know object that's on your machine in your same physical address space if you if",
    "start": "2673240",
    "end": "2680280"
  },
  {
    "text": "you try and blow that then you know things just don't work so we explicitly don't do that anything else thank you",
    "start": "2680280",
    "end": "2692190"
  },
  {
    "text": "very much again [Music] [Applause]",
    "start": "2692190",
    "end": "2699129"
  }
]