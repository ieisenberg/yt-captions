[
  {
    "start": "0",
    "end": "98000"
  },
  {
    "text": "okay wonderful so welcome to the Jaeger project introduction my name is Judith",
    "start": "30",
    "end": "5700"
  },
  {
    "text": "SEPA Sean Crowley I'm a software engineer at redhead I work on the key ally project on the distributed tracing",
    "start": "5700",
    "end": "12809"
  },
  {
    "text": "team so I work on a mission to tracing components and I'm a maintainer on the",
    "start": "12809",
    "end": "18600"
  },
  {
    "text": "Jaeger project and a collaborator on open tracing and as a maintainer of Jager I'm here talking to you today so",
    "start": "18600",
    "end": "25820"
  },
  {
    "text": "this is a double session so we have the project introduction and right after",
    "start": "25820",
    "end": "31140"
  },
  {
    "text": "that we have the deep dive the plan was to have someone from uber here delivering as well but he's got some",
    "start": "31140",
    "end": "37890"
  },
  {
    "text": "visa issues so he could not join us here in Barcelona so the plan now is then to",
    "start": "37890",
    "end": "46079"
  },
  {
    "text": "have like 30 minutes introduction section plus five or ten minutes of Q&A",
    "start": "46079",
    "end": "53129"
  },
  {
    "text": "and then some five minutes of likely small break so if you already interested",
    "start": "53129",
    "end": "59910"
  },
  {
    "text": "only in the intro part you can I skip the second part and attempt something else and as well for other people who",
    "start": "59910",
    "end": "65790"
  },
  {
    "text": "know about Jaeger already but refer only to watch a dip dive so we have a five",
    "start": "65790",
    "end": "71640"
  },
  {
    "text": "minute break between those two blocks right then and of course I'll be here so you can still ask questions after that",
    "start": "71640",
    "end": "79040"
  },
  {
    "text": "and for the second half we have it very similar so half an hour for the dip dive",
    "start": "79040",
    "end": "84990"
  },
  {
    "text": "and the remaining of the time then for questions and answers",
    "start": "84990",
    "end": "91340"
  },
  {
    "text": "whoops okay so it's very hard to talk about",
    "start": "93799",
    "end": "99090"
  },
  {
    "start": "98000",
    "end": "328000"
  },
  {
    "text": "eager and not talk about tracing or distributed tracing so here is a tracing",
    "start": "99090",
    "end": "104700"
  },
  {
    "text": "solution but what exactly is done a disability racing so if you've been to any other tracing talks this week or",
    "start": "104700",
    "end": "113040"
  },
  {
    "text": "perhaps some open telemetry talks then you've probably seen some introduction to tracing but for those of you who are",
    "start": "113040",
    "end": "120030"
  },
  {
    "text": "still new to tracing we use that to",
    "start": "120030",
    "end": "125040"
  },
  {
    "text": "understand what our application is doing right so we have Micro Services or we have some distributed system",
    "start": "125040",
    "end": "132280"
  },
  {
    "text": "and we have calls between the services and we want to visualize individual",
    "start": "132280",
    "end": "137740"
  },
  {
    "text": "business transactions as they flow across our infra so imagine that we have",
    "start": "137740",
    "end": "143410"
  },
  {
    "text": "one HTTP request reaching our franching service and as part of processing that HTTP request to make some database calls",
    "start": "143410",
    "end": "150459"
  },
  {
    "text": "and we then go to an external micro service and that micro service goes through yet another micro service and so",
    "start": "150459",
    "end": "156820"
  },
  {
    "text": "on and tracing then shows you the picture of that request that original request as it flows across all these",
    "start": "156820",
    "end": "163120"
  },
  {
    "text": "three or more micro services including database calls that we make in between right so and in summary this with the",
    "start": "163120",
    "end": "171040"
  },
  {
    "text": "tracing it tells us the story of a request as it flows across all the services now we need by tracing or we",
    "start": "171040",
    "end": "180220"
  },
  {
    "text": "use tracing in general to understand problems right so to do root cause",
    "start": "180220",
    "end": "186190"
  },
  {
    "text": "analysis so we see that we have a specific or we have problems with our system across a specific time stamp or",
    "start": "186190",
    "end": "193600"
  },
  {
    "text": "time range and we then filter all the traces or all the requests that affected",
    "start": "193600",
    "end": "199510"
  },
  {
    "text": "that service or that that machine on that time range and then we can take",
    "start": "199510",
    "end": "206920"
  },
  {
    "text": "into each one of those traces and understand what happened there so as you",
    "start": "206920",
    "end": "211959"
  },
  {
    "text": "can imagine this is very useful for network latency or to visualize if we",
    "start": "211959",
    "end": "217150"
  },
  {
    "text": "have unnecessary calls and things like that and the way it works is actually quite simple right Tracy works by",
    "start": "217150",
    "end": "226269"
  },
  {
    "text": "propagating context so when we call from one service when I go from one service",
    "start": "226269",
    "end": "231519"
  },
  {
    "text": "to another we serialize our context in one place and we sent this context along",
    "start": "231519",
    "end": "237130"
  },
  {
    "text": "with the payload to the next service in HTTP terms it typically means that we",
    "start": "237130",
    "end": "243610"
  },
  {
    "text": "store the context as a HTTP header on the outgoing HTTP request so if we are",
    "start": "243610",
    "end": "250570"
  },
  {
    "text": "on a micro service and we are calling the second one we just add another HTTP header on the other side with this",
    "start": "250570",
    "end": "256359"
  },
  {
    "text": "serialize and whenever you create trace information",
    "start": "256359",
    "end": "260910"
  },
  {
    "text": "he's asked me to ask you to go to the meet off there because we have people standing there yeah thank you",
    "start": "263030",
    "end": "272210"
  },
  {
    "text": "okay thank you very much right so then how does it work then we serialize",
    "start": "288840",
    "end": "295530"
  },
  {
    "text": "context on one side and on the other side on the second third fourth level",
    "start": "295530",
    "end": "300840"
  },
  {
    "text": "micro-service we look up the HTTP headers and if we have a header with the",
    "start": "300840",
    "end": "305970"
  },
  {
    "text": "context with this realize that and whenever we create new new trace information we use that as our starting",
    "start": "305970",
    "end": "312840"
  },
  {
    "text": "point now the context here might be a little bit too abstract but typically it just means an ID right so we create an",
    "start": "312840",
    "end": "319650"
  },
  {
    "text": "ID at the very first point of touch of in our system and we propagate that ID downstream so that's basically how it",
    "start": "319650",
    "end": "326310"
  },
  {
    "text": "works but we are not here to talk much about tracing in general right we are",
    "start": "326310",
    "end": "331710"
  },
  {
    "start": "328000",
    "end": "749000"
  },
  {
    "text": "here to talk about the Jager and our final goal here with Jager or with tracing in general is to have a screen",
    "start": "331710",
    "end": "338310"
  },
  {
    "text": "like this so I'm running now is a very quick demo showing you what there is and",
    "start": "338310",
    "end": "343440"
  },
  {
    "text": "how it actually works and that yeah so I have here or a hat",
    "start": "343440",
    "end": "353580"
  },
  {
    "text": "here planned to run a demo using East geo because you know you still but as",
    "start": "353580",
    "end": "361440"
  },
  {
    "text": "you can see here some things are not working so I have a backup backup plan here so I have three micro services they",
    "start": "361440",
    "end": "370680"
  },
  {
    "text": "are built using a new Java framework called Quercus so Perkins is a framework",
    "start": "370680",
    "end": "377220"
  },
  {
    "text": "for cloud native job applications I'm not here to talk much about the queries",
    "start": "377220",
    "end": "383789"
  },
  {
    "text": "but perhaps I should just say that applications built using queries they",
    "start": "383789",
    "end": "388979"
  },
  {
    "text": "are very small and they compile - binary - to machine code so there you can just",
    "start": "388979",
    "end": "395220"
  },
  {
    "text": "execute them and place them on docker images so they're very fast to boot and",
    "start": "395220",
    "end": "400850"
  },
  {
    "text": "consume very little memory so that's key to called native applications right so",
    "start": "400850",
    "end": "406350"
  },
  {
    "text": "that we can scale very quickly I have them a second micro service also built",
    "start": "406350",
    "end": "411690"
  },
  {
    "text": "using car keys and a third one",
    "start": "411690",
    "end": "415460"
  },
  {
    "text": "alright looks like it's working and I'm",
    "start": "418850",
    "end": "427560"
  },
  {
    "text": "then opening the eager website and I'm",
    "start": "427560",
    "end": "433140"
  },
  {
    "text": "just copying you know from from j√§ger I we go to the getting started page which",
    "start": "433140",
    "end": "438540"
  },
  {
    "text": "is this one here and I'm just gonna copy that docker command that we see there",
    "start": "438540",
    "end": "444860"
  },
  {
    "text": "into mr. pubb's which is this terminal here",
    "start": "445610",
    "end": "451310"
  },
  {
    "text": "and I'm not copying the ministry because we want to see all the logs",
    "start": "452060",
    "end": "458690"
  },
  {
    "text": "okay so Jager is running our three micro services they are running as well and",
    "start": "462290",
    "end": "468600"
  },
  {
    "text": "I've been just can you guys in the back to see the code here the different okay cool and I'm just then running like",
    "start": "468600",
    "end": "475560"
  },
  {
    "text": "three HTTP requests to the first service now we don't know this application and",
    "start": "475560",
    "end": "482550"
  },
  {
    "text": "we know pretty much nothing about what it does but we can use eager to visualize what happened right",
    "start": "482550",
    "end": "489810"
  },
  {
    "text": "so I have here two traces array that I created before but those are the three",
    "start": "489810",
    "end": "496920"
  },
  {
    "text": "new requests that we're in right so for each request that we have we see all the data on one trace and I think it is now",
    "start": "496920",
    "end": "505770"
  },
  {
    "text": "too small for you Desna back and now we have here all the individual operations",
    "start": "505770",
    "end": "513599"
  },
  {
    "text": "that were executed as part of that business transaction right so that initial HTTP request reached our service",
    "start": "513599",
    "end": "521490"
  },
  {
    "text": "or on as a get request on it slash so",
    "start": "521490",
    "end": "527430"
  },
  {
    "text": "HTTP localhost 8080 slash as they get request so we see that information here",
    "start": "527430",
    "end": "534600"
  },
  {
    "text": "and that then called the submit order operation and this is something that I",
    "start": "534600",
    "end": "540060"
  },
  {
    "text": "manually added to my code this operation here so I'm able to do explicit instrumentation for those who know about",
    "start": "540060",
    "end": "547070"
  },
  {
    "text": "what instrumentation general and then we have another automatic span here so each line",
    "start": "547070",
    "end": "556440"
  },
  {
    "text": "here is called a span in tracing right and that represent a represents a unit",
    "start": "556440",
    "end": "562140"
  },
  {
    "text": "of work so this is basically okay right",
    "start": "562140",
    "end": "567780"
  },
  {
    "text": "so we see all the the information about individual requests we don't only have",
    "start": "567780",
    "end": "574230"
  },
  {
    "text": "this view here the timeline view we also have the graph view so we are also able",
    "start": "574230",
    "end": "580830"
  },
  {
    "text": "to see what what is what are all the operations that were called as part of",
    "start": "580830",
    "end": "586770"
  },
  {
    "text": "this HTTP request in a graph do we see each call each service has a",
    "start": "586770",
    "end": "592800"
  },
  {
    "text": "color so we see that there are three services here being touched it's a little bit difficult to read when you",
    "start": "592800",
    "end": "599190"
  },
  {
    "text": "know when you have a lot of nodes here but if you over one of those here you",
    "start": "599190",
    "end": "605970"
  },
  {
    "text": "see more details of what that's been we can color them also by time so we see",
    "start": "605970",
    "end": "611220"
  },
  {
    "text": "which spans to most of the time and this kind of view here is also the base for",
    "start": "611220",
    "end": "618590"
  },
  {
    "text": "comparing traces so if we have one same trace and if we have one error trace we",
    "start": "618590",
    "end": "628020"
  },
  {
    "text": "can compare both or we can compare even more traces and see what are the",
    "start": "628020",
    "end": "634050"
  },
  {
    "text": "differences between them and it uses the dif syntax so in this case here we don't have any difference so it's great right",
    "start": "634050",
    "end": "639390"
  },
  {
    "text": "but if we had spends only on the a side not also missing on the B side it will",
    "start": "639390",
    "end": "646890"
  },
  {
    "text": "be read following the diff colors and the opposite meaning be having more Spanish",
    "start": "646890",
    "end": "654630"
  },
  {
    "text": "than a would be colored in green yeah",
    "start": "654630",
    "end": "661200"
  },
  {
    "text": "and so this is basically a here in the UI part right",
    "start": "661200",
    "end": "666260"
  },
  {
    "text": "it sees what it is the final outcome so once you have everything working once you have j√§ger are running in my case",
    "start": "666260",
    "end": "673200"
  },
  {
    "text": "here as a docker container once you have your applications instrumented in any way that you can submit your application",
    "start": "673200",
    "end": "678600"
  },
  {
    "text": "with manual instrumentation with by a framework instrumentation beat by a",
    "start": "678600",
    "end": "684060"
  },
  {
    "text": "service mash instrumentation that I wish I could show you here once you have all",
    "start": "684060",
    "end": "690120"
  },
  {
    "text": "those instrumentation code in place you should you would be able to see data",
    "start": "690120",
    "end": "695760"
  },
  {
    "text": "here on here",
    "start": "695760",
    "end": "698990"
  },
  {
    "text": "besides the comparison and search of the traces we also have a basic graph view",
    "start": "704130",
    "end": "710730"
  },
  {
    "text": "or service graph view here right so this is not a hundred percent accurate when",
    "start": "710730",
    "end": "716970"
  },
  {
    "text": "you when you have sources which are not traced or not instrumented so I would",
    "start": "716970",
    "end": "722190"
  },
  {
    "text": "not rely on that for architectures that you know where you're starting to trace",
    "start": "722190",
    "end": "729180"
  },
  {
    "text": "things because you are then missing points here but it's still very useful if you know for food applications you",
    "start": "729180",
    "end": "737160"
  },
  {
    "text": "see what are the dependencies between those services",
    "start": "737160",
    "end": "742280"
  },
  {
    "text": "okay so this is basically a very high-level overview of what is here but",
    "start": "748450",
    "end": "754660"
  },
  {
    "start": "749000",
    "end": "835000"
  },
  {
    "text": "so if you are a developer what is what is your free right so either if for",
    "start": "754660",
    "end": "761450"
  },
  {
    "text": "developers is basically the the docker image that we just ran when you are",
    "start": "761450",
    "end": "766490"
  },
  {
    "text": "developing when you are debugging issues so we start the Jager backend components as a docker container but more",
    "start": "766490",
    "end": "775300"
  },
  {
    "text": "importantly it is the tracer that you plug within your application so you instrument your application you use",
    "start": "775300",
    "end": "781180"
  },
  {
    "text": "framework instrumentation libraries and and then Jager for you becomes only the",
    "start": "781180",
    "end": "787490"
  },
  {
    "text": "component that the actual tracer the thing that actually knows how to record data right so the instrumentation that",
    "start": "787490",
    "end": "794060"
  },
  {
    "text": "you use is your description of what should be recorded what should be measured and the tracer or the client is",
    "start": "794060",
    "end": "801590"
  },
  {
    "text": "the thing that actually knows how to do that now if you don't want to use the other client or the eager tracer so your",
    "start": "801590",
    "end": "809030"
  },
  {
    "text": "client and tracer day their de name to name is for the same thing but if you",
    "start": "809030",
    "end": "814580"
  },
  {
    "text": "decide not to use the Jager tracer you can use open senses or in the future open telemetry and plug a exporter for",
    "start": "814580",
    "end": "822980"
  },
  {
    "text": "Jager all right so you can you can have the same tracer for application and just",
    "start": "822980",
    "end": "827990"
  },
  {
    "text": "change the exporter if you decide to change to or from Jager in the future",
    "start": "827990",
    "end": "834190"
  },
  {
    "text": "now if you are an ops person then eager means something different to you first",
    "start": "834190",
    "end": "842330"
  },
  {
    "text": "it means the things that you have to deploy maintain in production like the whole infrared year itself but perhaps",
    "start": "842330",
    "end": "850250"
  },
  {
    "text": "more importantly or more useful than that is the tool that you use to do the",
    "start": "850250",
    "end": "856910"
  },
  {
    "text": "root cause analysis or to visualize what your what your micro service is I are doing basically so if you if you find if",
    "start": "856910",
    "end": "864440"
  },
  {
    "text": "you detect an issue using some matrix tools or or dashboards you can probably",
    "start": "864440",
    "end": "870320"
  },
  {
    "text": "zoom in into individual requests and once you once you you know you know that",
    "start": "870320",
    "end": "875390"
  },
  {
    "text": "we know that M range where your problems are happening you can select all the",
    "start": "875390",
    "end": "880700"
  },
  {
    "text": "traces from that period of time and then looking to individual traces so the",
    "start": "880700",
    "end": "885709"
  },
  {
    "text": "Jaeger is your tool for that you can deploy Jaeger on pretty much everywhere",
    "start": "885709",
    "end": "891500"
  },
  {
    "text": "right so bare metal you can deploy we have wineries for Mac OS or Windows and for of course Linux C's ya cube con so I",
    "start": "891500",
    "end": "902000"
  },
  {
    "text": "assume everyone here is running kubernetes so you can of course run your",
    "start": "902000",
    "end": "907760"
  },
  {
    "text": "own kubernetes or up or kubernetes distributions like openshift",
    "start": "907760",
    "end": "913990"
  },
  {
    "text": "yeah so the other is actually a they built itself following the micro",
    "start": "913990",
    "end": "920870"
  },
  {
    "start": "915000",
    "end": "1192000"
  },
  {
    "text": "services approach right so we have quite a lot of components here one of them is very separate from the others",
    "start": "920870",
    "end": "927350"
  },
  {
    "text": "this is what we depend on the situation we call that the your client in depending we call that the tracer so the",
    "start": "927350",
    "end": "934339"
  },
  {
    "text": "ager client we typically say when we talk about in in the context of talking to the backend component right so we",
    "start": "934339",
    "end": "940610"
  },
  {
    "text": "have the client in the backend and we use the term tracer typically when we talk about from the perspective of the",
    "start": "940610",
    "end": "946459"
  },
  {
    "text": "instrumented application so your your micro services and then we have on the",
    "start": "946459",
    "end": "952399"
  },
  {
    "text": "one agent so the agent is a is a component runs very close to your",
    "start": "952399",
    "end": "957620"
  },
  {
    "text": "application and receives data from the tracer we have a collector receiving data from either the client or they the",
    "start": "957620",
    "end": "965120"
  },
  {
    "text": "agent any stores data into a storage we have a query or UI and they're both part",
    "start": "965120",
    "end": "971300"
  },
  {
    "text": "of the same binary even though they are technically separated and we have an",
    "start": "971300",
    "end": "976579"
  },
  {
    "text": "investor so the interests are one of the list storage the storage mechanisms for the collector is kafka so the collector",
    "start": "976579",
    "end": "983120"
  },
  {
    "text": "can write to Kafka and in gestured and reads the stream from Kafka and writes",
    "start": "983120",
    "end": "988910"
  },
  {
    "text": "to the primary storage so in terms of",
    "start": "988910",
    "end": "994670"
  },
  {
    "text": "features that we have for the future so right now Jagr is doing very well the",
    "start": "994670",
    "end": "1001779"
  },
  {
    "text": "collection part of the things right so we'll average open tracing",
    "start": "1001779",
    "end": "1007180"
  },
  {
    "text": "open sensors in open telemetry in the future for an instrumentation part and for the collection part and then on the",
    "start": "1007180",
    "end": "1014560"
  },
  {
    "text": "back end we we are very good at storing this data on somewhere right so in the",
    "start": "1014560",
    "end": "1019660"
  },
  {
    "text": "receiving is area in digesting ingesting this data and historian that summer and",
    "start": "1019660",
    "end": "1025949"
  },
  {
    "text": "this is somewhere currently is elasticsearch and cassandra for",
    "start": "1025949",
    "end": "1031900"
  },
  {
    "text": "production workloads but also we support local storage via badger and in memory",
    "start": "1031900",
    "end": "1038740"
  },
  {
    "text": "storage as well in right I mean it the version 112 was just merged was just",
    "start": "1038740",
    "end": "1045790"
  },
  {
    "text": "released and include support for storage players so if Cassandra or elasticsearch",
    "start": "1045790",
    "end": "1051070"
  },
  {
    "text": "is not your thing you can write your own plugin and use your own storage and it",
    "start": "1051070",
    "end": "1056620"
  },
  {
    "text": "uses chart we see plugins or magic or planes and basically it right there plug",
    "start": "1056620",
    "end": "1063340"
  },
  {
    "text": "in and respond to a certain API and year then asks your plug-in to store data or",
    "start": "1063340",
    "end": "1070059"
  },
  {
    "text": "to retrieve some data and you you know how to do that stuff with with a storage",
    "start": "1070059",
    "end": "1075250"
  },
  {
    "text": "that you choose in this way then the",
    "start": "1075250",
    "end": "1083230"
  },
  {
    "text": "eager does not need to maintain a huge set of storage mechanisms the second big",
    "start": "1083230",
    "end": "1092710"
  },
  {
    "text": "thing that we have is adaptive sampling so sampling is basically the technique",
    "start": "1092710",
    "end": "1099600"
  },
  {
    "text": "to choose which traces to restore and which trace is to drop all right so if",
    "start": "1099600",
    "end": "1105370"
  },
  {
    "text": "you have a huge load in your application you probably do not want to restore all the traces and then we use this",
    "start": "1105370",
    "end": "1113530"
  },
  {
    "text": "technique call them simply so we decide on its sampling strategy so a like by the four year comes with a probabilistic",
    "start": "1113530",
    "end": "1121240"
  },
  {
    "text": "sampling strategy of 1 in 1,000 so there is a chance of one more thousand a dirt",
    "start": "1121240",
    "end": "1127150"
  },
  {
    "text": "racer are being sampled so being stored but the whole light the whole when it",
    "start": "1127150",
    "end": "1134470"
  },
  {
    "text": "will be nice or very good to have the backend define the same thing based on actual usage right so if you have a",
    "start": "1134470",
    "end": "1141630"
  },
  {
    "text": "low traffic application you probably want to restore everything and if you have a high load or very critical",
    "start": "1141630",
    "end": "1148240"
  },
  {
    "text": "application you probably want to restore one a few traces and those decisions",
    "start": "1148240",
    "end": "1154059"
  },
  {
    "text": "could probably be made by the j√§ger back-end and this is then what we call",
    "start": "1154059",
    "end": "1160300"
  },
  {
    "text": "adaptive sampling and the third big topic is data mining right so as I",
    "start": "1160300",
    "end": "1167680"
  },
  {
    "text": "mentioned we are very good at collecting the data but we don't have anything right now to analyze the data that we",
    "start": "1167680",
    "end": "1173230"
  },
  {
    "text": "collected so if you are interested in this topic of data mining in general in",
    "start": "1173230",
    "end": "1180300"
  },
  {
    "text": "machine learning in AI come talk to us because we need input we need feedback",
    "start": "1180300",
    "end": "1187360"
  },
  {
    "text": "and we need to brainstorm this kind of thing and that kind of is a good hook to",
    "start": "1187360",
    "end": "1196090"
  },
  {
    "start": "1192000",
    "end": "1413000"
  },
  {
    "text": "the next topic so for those of you been to the keynote this morning you've",
    "start": "1196090",
    "end": "1201670"
  },
  {
    "text": "probably seen a slide asking for you to",
    "start": "1201670",
    "end": "1206790"
  },
  {
    "text": "contribute to your communities right so if you use Jaeger we very much welcome",
    "start": "1206790",
    "end": "1213070"
  },
  {
    "text": "your contribution contributions no matter which kind of contribution you send us if you're a coder you can look",
    "start": "1213070",
    "end": "1221470"
  },
  {
    "text": "for the good first issues that we are going to show you right now but we we don't need only coders we need people",
    "start": "1221470",
    "end": "1228010"
  },
  {
    "text": "who help other people as well we need documentation help we need brainstorming",
    "start": "1228010",
    "end": "1233770"
  },
  {
    "text": "help we meet every couple weeks on Fridays Friday afternoons here in in Europe",
    "start": "1233770",
    "end": "1240240"
  },
  {
    "text": "where we discuss not only the problems that we are having right now but also things that we want for the future so",
    "start": "1240240",
    "end": "1247120"
  },
  {
    "text": "even if you don't contribute to Jaeger in a more traditional sense if you have",
    "start": "1247120",
    "end": "1254020"
  },
  {
    "text": "like half an hour to spare on a Friday afternoon I would really like to see you",
    "start": "1254020",
    "end": "1259450"
  },
  {
    "text": "there on our on our cause and then we",
    "start": "1259450",
    "end": "1264500"
  },
  {
    "text": "I'm gonna show you how to really get started quickly with Jaeger our github",
    "start": "1264500",
    "end": "1269600"
  },
  {
    "text": "repo is on the yogurt racing organization and in there we have quite",
    "start": "1269600",
    "end": "1275660"
  },
  {
    "text": "a lot of repositories right so we have 22 repositories for those of you who know golang it's you know you have a",
    "start": "1275660",
    "end": "1283610"
  },
  {
    "text": "wide variety of options there to choose from but we also have the UI repo with a",
    "start": "1283610",
    "end": "1290390"
  },
  {
    "text": "Java Script and all this fancy front-end stuff that I don't understand anything about that we have a yeegar operators",
    "start": "1290390",
    "end": "1297650"
  },
  {
    "text": "operators are also in vogue here so you probably heard a lot about operators and that we have a cooperator for you to",
    "start": "1297650",
    "end": "1303290"
  },
  {
    "text": "help us shape shape as well but also if",
    "start": "1303290",
    "end": "1308660"
  },
  {
    "text": "you are not a goal developer you can help with the clients right so we have C plus plus client C sharp clients we need",
    "start": "1308660",
    "end": "1315260"
  },
  {
    "text": "help with PHP as well Ruby Python yeah",
    "start": "1315260",
    "end": "1320440"
  },
  {
    "text": "or Java as well of course and the the best way to start contributing is to",
    "start": "1320440",
    "end": "1327800"
  },
  {
    "text": "enter any of the require any of the ripples that I've just shown here go to",
    "start": "1327800",
    "end": "1333410"
  },
  {
    "text": "the issues tab and fight one labelled good first issue right so we have here",
    "start": "1333410",
    "end": "1340640"
  },
  {
    "text": "on the main repo we have 18 such issues if you if you need any assistance in",
    "start": "1340640",
    "end": "1347360"
  },
  {
    "text": "getting started we are on Gator we are on the mailing list you can just pop up",
    "start": "1347360",
    "end": "1353420"
  },
  {
    "text": "there or even here on github issues you can just leave a comment on those issues ask for guidance or asking if the item",
    "start": "1353420",
    "end": "1360650"
  },
  {
    "text": "is still free for you to start contributing and someone from the team would be more than happy to assist you",
    "start": "1360650",
    "end": "1370910"
  },
  {
    "text": "in your first contribution yeah so",
    "start": "1370910",
    "end": "1377000"
  },
  {
    "text": "that's what I had for this first part now I know that those introduction sessions they are quite rich in",
    "start": "1377000",
    "end": "1384170"
  },
  {
    "text": "questions so I left so we have about ten minutes for questions spend yeah so",
    "start": "1384170",
    "end": "1392750"
  },
  {
    "text": "I'm ready to take a rest for some yeah",
    "start": "1392750",
    "end": "1400540"
  },
  {
    "text": "thanks for a very good introduction so I think a popular question is things like logging versus telemetry or all traces",
    "start": "1410050",
    "end": "1418900"
  },
  {
    "start": "1413000",
    "end": "2051000"
  },
  {
    "text": "so auditing logging and trace is like what is really the differences architectural II and when to use when",
    "start": "1418900",
    "end": "1426050"
  },
  {
    "text": "and I can see things like sampling when logs becomes when that's ready and so forth",
    "start": "1426050",
    "end": "1431210"
  },
  {
    "text": "thank you I'm not find it right now but",
    "start": "1431210",
    "end": "1440510"
  },
  {
    "text": "there is a very nice Venn diagram that shows when to use which where I can I",
    "start": "1440510",
    "end": "1452450"
  },
  {
    "text": "can show you later basically because I have to look it up but basically so we have those three pillars or three",
    "start": "1452450",
    "end": "1459260"
  },
  {
    "text": "signals of their ability or the three sources of signals one of them is metrics and metrics are things that you",
    "start": "1459260",
    "end": "1465800"
  },
  {
    "text": "like they are aggregate of all so you can count things or you can store things in a histogram so those are metrics and",
    "start": "1465800",
    "end": "1471650"
  },
  {
    "text": "that's clear belongs there now logs according to this Venn diagram",
    "start": "1471650",
    "end": "1477620"
  },
  {
    "text": "that I have in mind is a logs or event and those are typically life cycle",
    "start": "1477620",
    "end": "1484010"
  },
  {
    "text": "events so your application is starting up then you record an event on a log file trace is their request scoped so",
    "start": "1484010",
    "end": "1491840"
  },
  {
    "text": "everything that pertains to your two individual requests should be part of your tracing signal and that's typically",
    "start": "1491840",
    "end": "1499670"
  },
  {
    "text": "called a spend right so a span is similar to one log entry in the sense",
    "start": "1499670",
    "end": "1504740"
  },
  {
    "text": "that it records it's one unit of work or one unit of measurement and so that's",
    "start": "1504740",
    "end": "1513980"
  },
  {
    "text": "that's the rule of thumb so if you if you think if you are recording something that is",
    "start": "1513980",
    "end": "1519350"
  },
  {
    "text": "was coped then I see I see that as a belonging to tracing and if it is like",
    "start": "1519350",
    "end": "1525830"
  },
  {
    "text": "lifecycle or related to your application as a whole then it's logging not just to",
    "start": "1525830",
    "end": "1533539"
  },
  {
    "text": "complement that I would not use extensive logging inside tracings",
    "start": "1533539",
    "end": "1538910"
  },
  {
    "text": "right because I think it is if you have too many if your traffic is too low is",
    "start": "1538910",
    "end": "1545630"
  },
  {
    "text": "too heavy then you kind of have too many log entries inside a span and that's not",
    "start": "1545630",
    "end": "1552559"
  },
  {
    "text": "what tracing solutions were made for that it's not price now any other",
    "start": "1552559",
    "end": "1562159"
  },
  {
    "text": "questions so I have stickers for the best questions yeah",
    "start": "1562159",
    "end": "1569830"
  },
  {
    "text": "hi thank you for the talk for something",
    "start": "1578480",
    "end": "1583770"
  },
  {
    "text": "how do you make sure that it is representative of well the load that is",
    "start": "1583770",
    "end": "1589260"
  },
  {
    "text": "hitting your services what's the second part if the if the tracing is it simply",
    "start": "1589260",
    "end": "1597090"
  },
  {
    "text": "is representative of the mill yeah maybe basically if you take just one in a",
    "start": "1597090",
    "end": "1603090"
  },
  {
    "text": "thousand requests if I want to investigate a specific problem maybe the",
    "start": "1603090",
    "end": "1608940"
  },
  {
    "text": "issue is in the rest of the requests is not in that specific right yeah that",
    "start": "1608940",
    "end": "1619140"
  },
  {
    "text": "should come also with part of so this also belongs just simply in general right and how that is implemented then",
    "start": "1619140",
    "end": "1626400"
  },
  {
    "text": "it kind of is different we have a so you",
    "start": "1626400",
    "end": "1631650"
  },
  {
    "text": "can implement your own same playing strategy and you can you can create the strategies saying that if it is about",
    "start": "1631650",
    "end": "1637679"
  },
  {
    "text": "this endpoint here then I want to record all the time if it is not about this endpoint then I want to record one 1000",
    "start": "1637679",
    "end": "1645870"
  },
  {
    "text": "or so so you can do that by extending or vice by specifying your own sink playing",
    "start": "1645870",
    "end": "1651960"
  },
  {
    "text": "strategy I might be wrong here but I believe that the sampling strategy that",
    "start": "1651960",
    "end": "1658350"
  },
  {
    "text": "we support already so I know for sure that we support unloading as a JSON your",
    "start": "1658350",
    "end": "1663809"
  },
  {
    "text": "strategies based on service names and I think operation names as well so you can",
    "start": "1663809",
    "end": "1668909"
  },
  {
    "text": "say that for all these bands that are named following this pattern here I want",
    "start": "1668909",
    "end": "1673980"
  },
  {
    "text": "to follow these strategy so I think this already supported out-of-the-box but I'm not quite sure about the operation name",
    "start": "1673980",
    "end": "1679710"
  },
  {
    "text": "part I'm sure about this service part hi",
    "start": "1679710",
    "end": "1687720"
  },
  {
    "text": "so just to get that right the sampling strategy is configurable yeah but not at",
    "start": "1687720",
    "end": "1694110"
  },
  {
    "text": "run time at the moment you can change right yes so we don't have the adaptive",
    "start": "1694110",
    "end": "1700260"
  },
  {
    "text": "part but it is / you can configure it first service per",
    "start": "1700260",
    "end": "1705570"
  },
  {
    "text": "operation question mark there is a question you know my question is about",
    "start": "1705570",
    "end": "1720140"
  },
  {
    "text": "the topology of the calls your farmer can trace the HTTP synchronous calls is",
    "start": "1720140",
    "end": "1728730"
  },
  {
    "text": "it able to trace the synchronous calls using Africa as the middle yeah yeah",
    "start": "1728730",
    "end": "1734970"
  },
  {
    "text": "yeah so that belongs to an instrumentation part that's kind of outside of Iger so",
    "start": "1734970",
    "end": "1741120"
  },
  {
    "text": "that belongs more into to open tracing or open senses and open telemetry in the",
    "start": "1741120",
    "end": "1746460"
  },
  {
    "text": "future but yes the main idea there so there is the notion this notion of",
    "start": "1746460",
    "end": "1752100"
  },
  {
    "text": "contacts propagation right so you create these a context somewhere and you serialize that context and say so in",
    "start": "1752100",
    "end": "1759180"
  },
  {
    "text": "case of Kafka we could send the the span context as part of the metadata of the",
    "start": "1759180",
    "end": "1764670"
  },
  {
    "text": "message or of the Kafka item yeah so you sent that and then whoever consumes that information then this your",
    "start": "1764670",
    "end": "1771330"
  },
  {
    "text": "lies the the metadata this relies they spent context and then whenever it creates new spans it says I belong to",
    "start": "1771330",
    "end": "1778290"
  },
  {
    "text": "the trace idea XYZ as you say always",
    "start": "1778290",
    "end": "1784860"
  },
  {
    "text": "there is HTTP Tracy can you also trace some lower level protocols like TCP UDP",
    "start": "1784860",
    "end": "1790350"
  },
  {
    "text": "like for the next quick or something like this yeah there is there is a lot",
    "start": "1790350",
    "end": "1796470"
  },
  {
    "text": "of talk about that like integrating application level tracing with things",
    "start": "1796470",
    "end": "1804330"
  },
  {
    "text": "like cate-cate rays and x-rays and peach",
    "start": "1804330",
    "end": "1811500"
  },
  {
    "text": "trees and things like that some more to this level I think it might be possible",
    "start": "1811500",
    "end": "1818460"
  },
  {
    "text": "I don't think it might be desirable it might be might not be I I don't have an",
    "start": "1818460",
    "end": "1824880"
  },
  {
    "text": "answer if it is but the thing is so it could it could work",
    "start": "1824880",
    "end": "1830390"
  },
  {
    "text": "I just so the thing is I believe that the the target consumers of this",
    "start": "1830419",
    "end": "1835969"
  },
  {
    "text": "information are different people all right so when we talk about application level tracing we are we're talking",
    "start": "1835969",
    "end": "1842840"
  },
  {
    "text": "mostly about developers are devops looking into you know business reasons of why things are failing or you know",
    "start": "1842840",
    "end": "1848989"
  },
  {
    "text": "application reasons we do see network latency as well which is quite useful",
    "start": "1848989",
    "end": "1854570"
  },
  {
    "text": "but then when you go down to that level or when you want to see more information about that then it requires an expertise",
    "start": "1854570",
    "end": "1861049"
  },
  {
    "text": "which is typically held by another teams",
    "start": "1861049",
    "end": "1865658"
  },
  {
    "text": "question about what you see of multi-tenancy options out there okay we",
    "start": "1870129",
    "end": "1875629"
  },
  {
    "text": "have implemented one way we have yoga instances that are funded with kind of",
    "start": "1875629",
    "end": "1880849"
  },
  {
    "text": "an annual phase know an LDAP based authentication approximate and then we share the same Cassandra database on the",
    "start": "1880849",
    "end": "1888739"
  },
  {
    "text": "me with a lot of individual key spaces I think they're called white so to kind of keep the traces individually separated",
    "start": "1888739",
    "end": "1895369"
  },
  {
    "text": "what are the yeah lieutenancy your managed service Yaeger options to you",
    "start": "1895369",
    "end": "1901279"
  },
  {
    "text": "see out there so we have a blog post on",
    "start": "1901279",
    "end": "1911539"
  },
  {
    "text": "multi-tenancy or what are all the options for multi-tenancy when it comes to Jager and I'm not sure",
    "start": "1911539",
    "end": "1918919"
  },
  {
    "text": "if it's yeah it's not here on there on the front page but it's is our medium blog a publication and you can just look",
    "start": "1918919",
    "end": "1926749"
  },
  {
    "text": "at their archives but basically tenancy is a is a is something that means",
    "start": "1926749",
    "end": "1933259"
  },
  {
    "text": "different things for different people and we we have a constant discussion or an open topic on around multi-tenancy",
    "start": "1933259",
    "end": "1940820"
  },
  {
    "text": "for I think two years now mainly because you can achieve already multi-tenancy",
    "start": "1940820",
    "end": "1947539"
  },
  {
    "text": "just like you mentioned by by having different instances talking to different our key spaces in the in the back and C",
    "start": "1947539",
    "end": "1955339"
  },
  {
    "text": "is certainly the most popular way of doing a tenancy but that's one way of seeing tenancy right so this",
    "start": "1955339",
    "end": "1962440"
  },
  {
    "text": "Tennessee on data level but then we have a Tennessee on an authorization as well",
    "start": "1962440",
    "end": "1967509"
  },
  {
    "text": "so probably I do want people to have access to traces belonging to two different tenants or I have requirements",
    "start": "1967509",
    "end": "1975730"
  },
  {
    "text": "like I'm in the healthcare industry and I have requirements to have data X strictly split from you know terms",
    "start": "1975730",
    "end": "1982840"
  },
  {
    "text": "between tenants so I it is possible to do quite a lot of scenarios playing with",
    "start": "1982840",
    "end": "1989409"
  },
  {
    "text": "how you deploy Jaeger and it is very lightweight so your itself is I mean the",
    "start": "1989409",
    "end": "1995379"
  },
  {
    "text": "only one binary is 30 megabytes or something like that so it's really",
    "start": "1995379",
    "end": "2001200"
  },
  {
    "text": "lightweight so it is not very costly to deploy a lot of j√§ger instances on your infra of course it costs to maintain",
    "start": "2001200",
    "end": "2008039"
  },
  {
    "text": "those instances but the the costs in",
    "start": "2008039",
    "end": "2013440"
  },
  {
    "text": "terms of RAM or resources network resources and so on they are not very different",
    "start": "2013440",
    "end": "2018919"
  },
  {
    "text": "does that answer the question okay",
    "start": "2018919",
    "end": "2023299"
  },
  {
    "text": "okay so we have now then a short break for those of you who want to stay for",
    "start": "2029980",
    "end": "2036279"
  },
  {
    "text": "the deep dive session I appreciate for those of you who've had enough for your",
    "start": "2036279",
    "end": "2041380"
  },
  {
    "text": "figure I expect to see you on the community sometime thank you",
    "start": "2041380",
    "end": "2048750"
  },
  {
    "text": "right so I'm very glad that you are still here this is now the deep dive",
    "start": "2050579",
    "end": "2056919"
  },
  {
    "start": "2051000",
    "end": "2347000"
  },
  {
    "text": "session do we have people here who were not during the intro session can you",
    "start": "2056919",
    "end": "2063220"
  },
  {
    "text": "raise our hands if you were not here for the intro session okay so for us for for",
    "start": "2063220",
    "end": "2070270"
  },
  {
    "text": "you so you know me but for the other guys there I'm not privy hello which we",
    "start": "2070270",
    "end": "2077138"
  },
  {
    "text": "could not join us so he's not delivering the dip dive session I'm here on his on his behalf I'm jealousy by Jean crony",
    "start": "2077139",
    "end": "2084790"
  },
  {
    "text": "I'm a software engineer at Red Hat but I'm here today as a maintainer on the Jaeger project so for the majority of",
    "start": "2084790",
    "end": "2092230"
  },
  {
    "text": "you who were here during the intro session you've seen a slide just like this before where I listed all the",
    "start": "2092230",
    "end": "2099819"
  },
  {
    "text": "components that are part of Jaeger but I",
    "start": "2099819",
    "end": "2106630"
  },
  {
    "text": "I I'm personally very bad when I see these kind of lists and I don't see how",
    "start": "2106630",
    "end": "2111760"
  },
  {
    "text": "things move so I try to come up with a flow diagram and this whole diagram is",
    "start": "2111760",
    "end": "2118660"
  },
  {
    "text": "kind of show it kind of shows how Europe might be deployed but it's not 100%",
    "start": "2118660",
    "end": "2124270"
  },
  {
    "text": "accurate or on that term on that aspect it only shows the components that we had on the previous slide all right so we",
    "start": "2124270",
    "end": "2131380"
  },
  {
    "text": "have our application is in the example from front previous session it is a",
    "start": "2131380",
    "end": "2137230"
  },
  {
    "text": "participation and as part of that application we embed a a tracer a client",
    "start": "2137230",
    "end": "2143890"
  },
  {
    "text": "all right as a part as a library to our application now for a job application it",
    "start": "2143890",
    "end": "2149530"
  },
  {
    "text": "might be that the client might be in the same war file it might be the same ear",
    "start": "2149530",
    "end": "2155920"
  },
  {
    "text": "file might be in the same jar file for a go application it belongs to the same binary",
    "start": "2155920",
    "end": "2162300"
  },
  {
    "text": "but in four other languages it's very similar right so it belongs to the package of your application that's the",
    "start": "2162300",
    "end": "2169290"
  },
  {
    "text": "client the client is a component that knows the how to record things so you",
    "start": "2169290",
    "end": "2175140"
  },
  {
    "text": "use of a tracing of entry of instances to tell their what to record and the",
    "start": "2175140",
    "end": "2180930"
  },
  {
    "text": "client knows how to record things typically when you don't specify",
    "start": "2180930",
    "end": "2186900"
  },
  {
    "text": "otherwise the client will just create this data create those pens pack them",
    "start": "2186900",
    "end": "2193860"
  },
  {
    "text": "into batches and send this ball of spans over the wall and expect something on",
    "start": "2193860",
    "end": "2200370"
  },
  {
    "text": "the other side of the wall to catch all those spans and that's something on the",
    "start": "2200370",
    "end": "2206040"
  },
  {
    "text": "other side of the wall is the agent right the analogy here is because the",
    "start": "2206040",
    "end": "2211680"
  },
  {
    "text": "client sends data via UDP and UDP we don't have any queries right so we just",
    "start": "2211680",
    "end": "2216930"
  },
  {
    "text": "fire-and-forget requests so packets to a specific port",
    "start": "2216930",
    "end": "2222870"
  },
  {
    "text": "and if there is nothing on that port listen which and that will just get lost or if the other side or if anything",
    "start": "2222870",
    "end": "2228870"
  },
  {
    "text": "happens to the connection data is just lost now because the agent is typically",
    "start": "2228870",
    "end": "2233880"
  },
  {
    "text": "on localhost we don't have much of those UDP reliability issues right so it works",
    "start": "2233880",
    "end": "2241560"
  },
  {
    "text": "quite well here now the point is then that the agent runs on the same machine",
    "start": "2241560",
    "end": "2246660"
  },
  {
    "text": "reducing the load on the application itself and then the agent is responsible for sending this data to the backend to",
    "start": "2246660",
    "end": "2254940"
  },
  {
    "text": "the collector in a more reliable way by TCP perhaps using HTTP on top of TCP of",
    "start": "2254940",
    "end": "2263520"
  },
  {
    "text": "course or maybe a RPC or thrift or you know so how it actually sends you say is",
    "start": "2263520",
    "end": "2270420"
  },
  {
    "text": "a it doesn't matter but it's in a more reliable way and then from the collector",
    "start": "2270420",
    "end": "2275640"
  },
  {
    "text": "we store data into permanent storage so Cassandra elasticsearch or some are",
    "start": "2275640",
    "end": "2283290"
  },
  {
    "text": "ephemeral so in memory or perhaps local storage by a badger or even something",
    "start": "2283290",
    "end": "2290070"
  },
  {
    "text": "new that you write yourself using storage plugins then once data is only storage our",
    "start": "2290070",
    "end": "2297850"
  },
  {
    "text": "current component retrieves data from from the Fonda storage typically on",
    "start": "2297850",
    "end": "2304180"
  },
  {
    "text": "behalf of the UI so the UI calls the permian library get things from these to",
    "start": "2304180",
    "end": "2309970"
  },
  {
    "text": "merge and then there is a alternative path which is up there or up there we",
    "start": "2309970",
    "end": "2317170"
  },
  {
    "text": "have them a Kafka setup or Africa cluster where then the collector instead",
    "start": "2317170",
    "end": "2324070"
  },
  {
    "text": "of writing to storage it writes to Kafka and then in gesture which is a new component reads a stream from Kafka and",
    "start": "2324070",
    "end": "2331030"
  },
  {
    "text": "then stores data into the storage the whole point here being that we remove",
    "start": "2331030",
    "end": "2336370"
  },
  {
    "text": "pressure or we make the connection between collector and new storage anymore we make it more elastic right so",
    "start": "2336370",
    "end": "2344110"
  },
  {
    "text": "we are able to absorb more pressure now a little bit more details about each of",
    "start": "2344110",
    "end": "2351700"
  },
  {
    "start": "2347000",
    "end": "2409000"
  },
  {
    "text": "those components so the tracer typically so we have the tracers for most of the",
    "start": "2351700",
    "end": "2358030"
  },
  {
    "text": "major languages right so Java C++ C sharp go we have tracers or clients for",
    "start": "2358030",
    "end": "2365350"
  },
  {
    "text": "other languages as well we have Community Supported tracers and",
    "start": "2365350",
    "end": "2371190"
  },
  {
    "text": "what they all have in common is that they support or they implement the open tracing specification and API soar",
    "start": "2371190",
    "end": "2378160"
  },
  {
    "text": "interfaces so there is no eager API so to speak right so your application is",
    "start": "2378160",
    "end": "2385120"
  },
  {
    "text": "only talking open tracing and when you plug the Jaeger tracer it's able to use",
    "start": "2385120",
    "end": "2392320"
  },
  {
    "text": "your open trace instrumentation to create data based on that and then there",
    "start": "2392320",
    "end": "2397630"
  },
  {
    "text": "is of course the ability to use order tracers like open census and in the future again open telemetry but I",
    "start": "2397630",
    "end": "2406240"
  },
  {
    "text": "technically just not belong to the tracer component now the agent as I",
    "start": "2406240",
    "end": "2411490"
  },
  {
    "start": "2409000",
    "end": "2487000"
  },
  {
    "text": "mentioned is a component running local to your application and it acts like a",
    "start": "2411490",
    "end": "2416500"
  },
  {
    "text": "bridge right between your application and a collector the agent is a local",
    "start": "2416500",
    "end": "2421570"
  },
  {
    "text": "host what is actually then localhost nowadays all right so if you are running on bare",
    "start": "2421570",
    "end": "2426640"
  },
  {
    "text": "metal that's clear that's your bare metal but if you are running on kubernetes then what is your localhost",
    "start": "2426640",
    "end": "2433060"
  },
  {
    "text": "is it your pod is it your node and you decide where to run the agent as long as",
    "start": "2433060",
    "end": "2439750"
  },
  {
    "text": "it's you know on the same on localhost or very close to your application because remember the whole purpose of",
    "start": "2439750",
    "end": "2446050"
  },
  {
    "text": "the agent is to receive data via UDP so it has to be somewhere where Europe is",
    "start": "2446050",
    "end": "2451990"
  },
  {
    "text": "reliable all right so in kubernetes is typically the same pod so it's a sidecar",
    "start": "2451990",
    "end": "2457930"
  },
  {
    "text": "to your applicator plot application and that that's that works very well now for",
    "start": "2457930",
    "end": "2464380"
  },
  {
    "text": "the cases where it is you have you know thousands of pods that means they have",
    "start": "2464380",
    "end": "2469870"
  },
  {
    "text": "thousands of agents and even though the agent itself is very small I think it is close to 15 or 20 megabytes in size of",
    "start": "2469870",
    "end": "2478150"
  },
  {
    "text": "the binary it might still be you know if you have thousands of pots and it's too much and then you may want to use daemon",
    "start": "2478150",
    "end": "2485200"
  },
  {
    "text": "sets instead and then our own on the collector side so the collector is a",
    "start": "2485200",
    "end": "2491290"
  },
  {
    "start": "2487000",
    "end": "2574000"
  },
  {
    "text": "component that receives data from the agent by default but the clients can also talk directly to the collector so I",
    "start": "2491290",
    "end": "2498460"
  },
  {
    "text": "can configure my client to use a TCP connection to the collector instead of UDP to the agent the whole purpose of",
    "start": "2498460",
    "end": "2506740"
  },
  {
    "text": "the collector history receives data it then cleans up the data a little bit do",
    "start": "2506740",
    "end": "2513490"
  },
  {
    "text": "some processing with with timings right because this will this rigid systems we",
    "start": "2513490",
    "end": "2519250"
  },
  {
    "text": "cannot always rely on the clocks being in sync and the collector is the right",
    "start": "2519250",
    "end": "2524590"
  },
  {
    "text": "place for us to do some clock skew right so we are just a timing based on information that we know basically a",
    "start": "2524590",
    "end": "2531520"
  },
  {
    "text": "spend that was reported as a child of another span cannot have started but",
    "start": "2531520",
    "end": "2536770"
  },
  {
    "text": "before such span right so we do some some such logic belongs them to the",
    "start": "2536770",
    "end": "2543220"
  },
  {
    "text": "collector but if I know the the main goal of the collector is to write things",
    "start": "2543220",
    "end": "2549700"
  },
  {
    "text": "to a storage so it receives data image in different range of formats so it accepts the rain",
    "start": "2549700",
    "end": "2555910"
  },
  {
    "text": "from your proprietary format or in Zipkin format and in the future if we",
    "start": "2555910",
    "end": "2562059"
  },
  {
    "text": "have such a standard for for this kind of data we just add a new endpoint to the collector and then the second main",
    "start": "2562059",
    "end": "2571539"
  },
  {
    "text": "goal is right are those things to a permanent place and then we have an",
    "start": "2571539",
    "end": "2577509"
  },
  {
    "start": "2574000",
    "end": "2596000"
  },
  {
    "text": "adjuster so the adjuster is a relatively new component and it reads basically",
    "start": "2577509",
    "end": "2584500"
  },
  {
    "text": "data from Kafka so the collector one of the backend storage is for for the collector is Kafka or rewrite their main",
    "start": "2584500",
    "end": "2591640"
  },
  {
    "text": "gesture just reads this dream from Kafka we have the query so the query provides",
    "start": "2591640",
    "end": "2599230"
  },
  {
    "start": "2596000",
    "end": "2651000"
  },
  {
    "text": "the critical point provides some rest endpoints now those rest endpoints are",
    "start": "2599230",
    "end": "2604569"
  },
  {
    "text": "not documented or not well documented yet and they are not part of the public API but we do intend to build an API for",
    "start": "2604569",
    "end": "2613000"
  },
  {
    "text": "you to interact with Jaeger with a Jaeger query so that you can build your",
    "start": "2613000",
    "end": "2619210"
  },
  {
    "text": "own analysis tools and you can retrieve spends that you care about perhaps you are also listening to these dreams from",
    "start": "2619210",
    "end": "2625990"
  },
  {
    "text": "Kafka and storing data somewhere so you know the trace ID so you could get the trace from Jaeger based on search ID",
    "start": "2625990",
    "end": "2635220"
  },
  {
    "text": "yeah so basically it reads from from the backing storage now backing storage might also be your own storage plug-in",
    "start": "2635220",
    "end": "2642279"
  },
  {
    "text": "so we call your storage storage plug-in by a jar PC which is asking for data and",
    "start": "2642279",
    "end": "2648309"
  },
  {
    "text": "you return data to Jaeger and finally the why so the UI cuts data directly",
    "start": "2648309",
    "end": "2656890"
  },
  {
    "start": "2651000",
    "end": "2680000"
  },
  {
    "text": "from the query right so the main consumer of the query is a why when we",
    "start": "2656890",
    "end": "2663430"
  },
  {
    "text": "have features that we've seen on a previous session here so you can list a traces we a few traces we have different",
    "start": "2663430",
    "end": "2669940"
  },
  {
    "text": "types of views the the Timeline view we have the graph view we can do comparison",
    "start": "2669940",
    "end": "2677859"
  },
  {
    "text": "of off traces and we have a very basic service graph",
    "start": "2677859",
    "end": "2683339"
  },
  {
    "text": "no those are quite a lot of components right and it's probably complex to",
    "start": "2690170",
    "end": "2697740"
  },
  {
    "text": "deploy and manage all of that but as I mentioned at the very beginning of that",
    "start": "2697740",
    "end": "2703800"
  },
  {
    "text": "at a slide with a flow chart that does not necessarily represent how we deploy",
    "start": "2703800",
    "end": "2710100"
  },
  {
    "text": "Jaeger so we can deploy all of those components into one single binary so we have one binary called all in one and it",
    "start": "2710100",
    "end": "2716670"
  },
  {
    "text": "just download that binary and you just run that binary and contains pretty much everything it does not have been gesture",
    "start": "2716670",
    "end": "2724980"
  },
  {
    "text": "or the client tracer because the client tracer belongs to your application and then gesture is not part of the",
    "start": "2724980",
    "end": "2730950"
  },
  {
    "text": "all-in-one but pretty much everything else is there so you can just docker run just like we did on a demo blocker run",
    "start": "2730950",
    "end": "2737910"
  },
  {
    "text": "and one specific image and it's now when you move to production though you",
    "start": "2737910",
    "end": "2743640"
  },
  {
    "text": "probably want to at least split the query from the collector because the collector has to be really high",
    "start": "2743640",
    "end": "2750390"
  },
  {
    "text": "available and highly scalable and the why or the query is probably a low",
    "start": "2750390",
    "end": "2755460"
  },
  {
    "text": "traffic application so it can can be on its own pod with I don't know one",
    "start": "2755460",
    "end": "2760980"
  },
  {
    "text": "replicas whereas the collector probably should be distributed with a lot of",
    "start": "2760980",
    "end": "2766470"
  },
  {
    "text": "replicas but how you actually deploy",
    "start": "2766470",
    "end": "2771990"
  },
  {
    "start": "2770000",
    "end": "2854000"
  },
  {
    "text": "that how you you install this component also depends on on your interest so you",
    "start": "2771990",
    "end": "2777869"
  },
  {
    "text": "can either deploy in a very traditional sense with bare metal or on bare metal",
    "start": "2777869",
    "end": "2783180"
  },
  {
    "text": "and then you manage that with system D files or whatever process monitoring -",
    "start": "2783180",
    "end": "2788940"
  },
  {
    "text": "or process management tool that you choose again you specify which",
    "start": "2788940",
    "end": "2795960"
  },
  {
    "text": "components you run or you can install a Jaeger by a helm so there is a helmet",
    "start": "2795960",
    "end": "2801420"
  },
  {
    "text": "art for you you can just specify the chart values and you install the the",
    "start": "2801420",
    "end": "2806940"
  },
  {
    "text": "chart and I have a new Jaeger running there a new word option for",
    "start": "2806940",
    "end": "2813210"
  },
  {
    "text": "installing yogurt is via the yogurt operator so you install you can install",
    "start": "2813210",
    "end": "2818260"
  },
  {
    "text": "them the eager operator by a helm as well and then you can install individual",
    "start": "2818260",
    "end": "2824230"
  },
  {
    "text": "instances of eager via the operator so you create a CRA a custom resource just",
    "start": "2824230",
    "end": "2830590"
  },
  {
    "text": "like any other kubernetes object saying I want a Jager I want with a strategy production and I'm my elasticsearch is",
    "start": "2830590",
    "end": "2838450"
  },
  {
    "text": "here and then you pass that to kubernetes yeah and operator picks up",
    "start": "2838450",
    "end": "2843490"
  },
  {
    "text": "this new CR and builds a new deployment for you a new instance of Jager for you with all the right components on the",
    "start": "2843490",
    "end": "2850270"
  },
  {
    "text": "right sizes on the right places the user",
    "start": "2850270",
    "end": "2855310"
  },
  {
    "start": "2854000",
    "end": "3061000"
  },
  {
    "text": "can be tweaked or configured I need you we have a lot of options there and it's",
    "start": "2855310",
    "end": "2862390"
  },
  {
    "text": "very it's pretty much impossible to add all those options in only a couple slides so what I have here tell you is",
    "start": "2862390",
    "end": "2868980"
  },
  {
    "text": "for every component we have a Help option as well so with the binary or the",
    "start": "2868980",
    "end": "2875710"
  },
  {
    "text": "docker image you just pass the minus minus help option you have a list a",
    "start": "2875710",
    "end": "2880900"
  },
  {
    "text": "complete list of configuration options and hopefully each one of those have meaningful descriptions but if not then",
    "start": "2880900",
    "end": "2890980"
  },
  {
    "text": "open an issue furnace but it should be self so the description should be quite",
    "start": "2890980",
    "end": "2896350"
  },
  {
    "text": "easy to actually quite descriptive each",
    "start": "2896350",
    "end": "2901630"
  },
  {
    "text": "one of those options can also be specified as an environment variable following the you know typical cloud",
    "start": "2901630",
    "end": "2909430"
  },
  {
    "text": "native applications and but if you prefer configuration files you can",
    "start": "2909430",
    "end": "2914890"
  },
  {
    "text": "specify a yellow file or a Tom ll file with all the options and pass through",
    "start": "2914890",
    "end": "2920050"
  },
  {
    "text": "the components now if there is in the operator then you probably are going to configure the instance using the CR",
    "start": "2920050",
    "end": "2925330"
  },
  {
    "text": "right so inside this yard you specify that my elasticsearch is in this place here and",
    "start": "2925330",
    "end": "2931290"
  },
  {
    "text": "the praetorium takes care of creating the right the right way of specifying",
    "start": "2931290",
    "end": "2937660"
  },
  {
    "text": "that option to the underlying eager component",
    "start": "2937660",
    "end": "2942330"
  },
  {
    "text": "yeah now yeah also I mean if you installed earlier in your you know",
    "start": "2943689",
    "end": "2949569"
  },
  {
    "text": "kubernetes or your parental beat on using all-in-one be it using individual",
    "start": "2949569",
    "end": "2956679"
  },
  {
    "text": "production individual components if you need to monitor that right I mean you",
    "start": "2956679",
    "end": "2962589"
  },
  {
    "text": "probably not want to just install you ever but you also want to monitor it each point point has its own slash",
    "start": "2962589",
    "end": "2970599"
  },
  {
    "text": "metrics and point and by default it outputs promise to use metrics now the",
    "start": "2970599",
    "end": "2979660"
  },
  {
    "text": "beauty of operators is that we can tie everything together so if there is an prometheus operator running on the same",
    "start": "2979660",
    "end": "2986799"
  },
  {
    "text": "cluster the Jaeger operator you just add the proper annotations to the components",
    "start": "2986799",
    "end": "2992289"
  },
  {
    "text": "and the previous operator is able to also discover the Jaeger components",
    "start": "2992289",
    "end": "2998049"
  },
  {
    "text": "alright so you don't have to do anything if you have both operators running they",
    "start": "2998049",
    "end": "3003119"
  },
  {
    "text": "just find each other and metrics just flow to Prometheus now if you if from is",
    "start": "3003119",
    "end": "3009390"
  },
  {
    "text": "Prometheus it's not your thing you wish to expose all these metrics are using X",
    "start": "3009390",
    "end": "3015749"
  },
  {
    "text": "part we have quite a lot of options",
    "start": "3015749",
    "end": "3022469"
  },
  {
    "text": "there pretty much everything that we have as an internal state we store as a",
    "start": "3022469",
    "end": "3027599"
  },
  {
    "text": "collage or as metrics or histograms so it is it is quite perhaps not easy but",
    "start": "3027599",
    "end": "3037140"
  },
  {
    "text": "it's quite whatever you want to measure",
    "start": "3037140",
    "end": "3042779"
  },
  {
    "text": "from j√§ger you can probably measure using the metrics that we have already so you can measure how many spans we",
    "start": "3042779",
    "end": "3049049"
  },
  {
    "text": "received how many traces we received and we have that information also per service so you can monitor individual",
    "start": "3049049",
    "end": "3056039"
  },
  {
    "text": "traces for individual services",
    "start": "3056039",
    "end": "3059929"
  },
  {
    "start": "3061000",
    "end": "3236000"
  },
  {
    "text": "yeah and then performance to me so how",
    "start": "3061450",
    "end": "3067420"
  },
  {
    "text": "many of you are using eager already okay that's a good number and how many of you",
    "start": "3067420",
    "end": "3074740"
  },
  {
    "text": "have heard about dropped Spence or spans been dropped I mean if you have faced decision yeah",
    "start": "3074740",
    "end": "3080230"
  },
  {
    "text": "one here is that well it sort of yes so",
    "start": "3080230",
    "end": "3094240"
  },
  {
    "text": "the thing is for Jaeger was designed to be very resilient meaning you should not",
    "start": "3094240",
    "end": "3100660"
  },
  {
    "text": "be able to break Jaeger you should you should not you should not crash because you are sending too much data to it all",
    "start": "3100660",
    "end": "3107410"
  },
  {
    "text": "right so if you are if you are sending thousands of spends per second the Jaeger will then if Jaeger is not able",
    "start": "3107410",
    "end": "3114430"
  },
  {
    "text": "to consume that or to ingest all this data here we start dropping Spence because it is desirable to not record",
    "start": "3114430",
    "end": "3122380"
  },
  {
    "text": "things that we may have already similar data from the past or we are gonna have",
    "start": "3122380",
    "end": "3128079"
  },
  {
    "text": "in the future so we just drop data instead of crashing the VM or instead of having a om killer process from",
    "start": "3128079",
    "end": "3135309"
  },
  {
    "text": "kubernetes just killing our pod now the thing is it is not the best default that",
    "start": "3135309",
    "end": "3141760"
  },
  {
    "text": "we have there because it is very conservative meaning if you have a machine with 10 gigabytes of RAM and you",
    "start": "3141760",
    "end": "3148780"
  },
  {
    "text": "just run the de-ager only one for instance then even with moderate load",
    "start": "3148780",
    "end": "3155859"
  },
  {
    "text": "you are having dropped spans because the queue size is more so we store everything in queues inside here and for",
    "start": "3155859",
    "end": "3167770"
  },
  {
    "text": "each one of those queues we have workers and we pick items from this from this queue each worker picks items from from",
    "start": "3167770",
    "end": "3174520"
  },
  {
    "text": "the queues and process those items so in case of the collector each worker is store is responsible for storing data on",
    "start": "3174520",
    "end": "3181660"
  },
  {
    "text": "this storage so if the queue size is not big enough then data has been trough even though you have more than",
    "start": "3181660",
    "end": "3187960"
  },
  {
    "text": "a memory for that it is very hard to come up with a reasonable default we",
    "start": "3187960",
    "end": "3194680"
  },
  {
    "text": "have one github issue where we intend to automatically adjust the size of those",
    "start": "3194680",
    "end": "3201460"
  },
  {
    "text": "cues based on information that we are able to gather over time so if we know that spans are on average of I don't",
    "start": "3201460",
    "end": "3209619"
  },
  {
    "text": "know 2k and we are allocated 2 gigabytes than we are able to come up with reasonable queue sizes that's not there",
    "start": "3209619",
    "end": "3217150"
  },
  {
    "text": "yet before this feature is implemented I recommend you taking a look at the",
    "start": "3217150",
    "end": "3222220"
  },
  {
    "text": "performance tuning guide and that provides a a nice rule of thumb values",
    "start": "3222220",
    "end": "3229480"
  },
  {
    "text": "for the penny or how to come up with those numbers for specific scenarios and",
    "start": "3229480",
    "end": "3237730"
  },
  {
    "text": "then we we have again this similar call-to-action to the previous",
    "start": "3237730",
    "end": "3243849"
  },
  {
    "text": "presentation I cannot emphasize that enough that our we need your help we",
    "start": "3243849",
    "end": "3249280"
  },
  {
    "text": "need I mean I some of you raise your hands when I asked if you're using Jaeger so we special need you to tell us how we",
    "start": "3249280",
    "end": "3258339"
  },
  {
    "text": "were using Jaeger what is your missing for you what what do you want from us and perhaps even",
    "start": "3258339",
    "end": "3266320"
  },
  {
    "text": "better if you can publish a blog post by specifying how you're using Jaeger right",
    "start": "3266320",
    "end": "3272339"
  },
  {
    "text": "again we have bi-weekly meetings so join us and talk to us and even before me to",
    "start": "3272339",
    "end": "3279880"
  },
  {
    "text": "brainstorm and I'm not showing how to find good issues again as most of you",
    "start": "3279880",
    "end": "3285820"
  },
  {
    "text": "know how to do that but basically on our github repositories all of them we have",
    "start": "3285820",
    "end": "3294160"
  },
  {
    "text": "for all of them we have issues labeled with a good first issue yeah that's what",
    "start": "3294160",
    "end": "3304900"
  },
  {
    "text": "I had for a deep dive now similar to that one typically we have good",
    "start": "3304900",
    "end": "3310839"
  },
  {
    "text": "questions here at the end so I saved a good chunk of time for their questions",
    "start": "3310839",
    "end": "3319400"
  },
  {
    "text": "thank you very much for your presentation i was wondering with the drops pants is that also being recorded",
    "start": "3330839",
    "end": "3336939"
  },
  {
    "start": "3333000",
    "end": "3600000"
  },
  {
    "text": "in a way that you know that the whole trace is then broken yes yeah so yeah so",
    "start": "3336939",
    "end": "3347799"
  },
  {
    "text": "the way that simply works saintly is made at the first span so at the root",
    "start": "3347799",
    "end": "3353410"
  },
  {
    "text": "span but if there is any other span that was chopped after that then that span is",
    "start": "3353410",
    "end": "3359019"
  },
  {
    "text": "not gonna show up in the UI now if that is the root span so if it is the first span that we generated for a",
    "start": "3359019",
    "end": "3366249"
  },
  {
    "text": "specific trace then you see a specific message on the UI saying like so people",
    "start": "3366249",
    "end": "3373989"
  },
  {
    "text": "who face the the drop spans problem probably knows this trace without parent",
    "start": "3373989",
    "end": "3379749"
  },
  {
    "text": "ID bug right but it's not really a bug",
    "start": "3379749",
    "end": "3385029"
  },
  {
    "text": "it's just that the the print span was dropped so yeah you have a you have a",
    "start": "3385029",
    "end": "3390909"
  },
  {
    "text": "missing span in your trace okay thank you here Oh unless you have a simple",
    "start": "3390909",
    "end": "3407739"
  },
  {
    "text": "question for me does dagger support automatically HTTP that's Jaeger support",
    "start": "3407739",
    "end": "3416469"
  },
  {
    "text": "automatic HTTP injection where the",
    "start": "3416469",
    "end": "3422019"
  },
  {
    "text": "request ID for incoming requests from browser can be traced in there if I",
    "start": "3422019",
    "end": "3430989"
  },
  {
    "text": "understood the question correctly so you ever see if a year supports that making the connection between incoming and",
    "start": "3430989",
    "end": "3436390"
  },
  {
    "text": "outgoing HTTP requests automatically is that it yeah okay and that is a",
    "start": "3436390",
    "end": "3442799"
  },
  {
    "text": "instrumentation problem that is solved by open tracing or open telemetry but",
    "start": "3442799",
    "end": "3447880"
  },
  {
    "text": "yeah I mean so three yeah so the thing is the the tracing or the instrumentation part it",
    "start": "3447880",
    "end": "3454910"
  },
  {
    "text": "calls the tracer to inject the context into the payload and Yerger just provide",
    "start": "3454910",
    "end": "3461330"
  },
  {
    "text": "all the interfaces that you both inject and extract the context from from the payload okay so in is that possible that",
    "start": "3461330",
    "end": "3472700"
  },
  {
    "text": "this injection will fail because when the OSA when when",
    "start": "3472700",
    "end": "3479000"
  },
  {
    "text": "yeah because sometimes when the HTTP header is injected then load balancer or",
    "start": "3479000",
    "end": "3486350"
  },
  {
    "text": "any other external control could drop",
    "start": "3486350",
    "end": "3491390"
  },
  {
    "text": "that header so if the load balancer is removing the context this pen or the",
    "start": "3491390",
    "end": "3499310"
  },
  {
    "text": "context header then there is nothing we can do then we're going to start a new trace probably all right so you end up",
    "start": "3499310",
    "end": "3506690"
  },
  {
    "text": "having multiple because I mean the decision of to create a new trace or not is whether we have a spent context or",
    "start": "3506690",
    "end": "3513140"
  },
  {
    "text": "not and the context comes typically with you know it's a peer requester or inside",
    "start": "3513140",
    "end": "3518630"
  },
  {
    "text": "a a message and if we cannot find a a context there then we just start a new",
    "start": "3518630",
    "end": "3523670"
  },
  {
    "text": "trace so you may end up having multiple traces for the same business transaction okay thank you I think I mean I had the",
    "start": "3523670",
    "end": "3537770"
  },
  {
    "text": "expectation just like by looking at your explanation on the drop packages because of a couple of things and I'm sharing my",
    "start": "3537770",
    "end": "3543260"
  },
  {
    "text": "view so that you can I can hear your comment as well which is there is a buffering you said like there is like",
    "start": "3543260",
    "end": "3548690"
  },
  {
    "text": "those pans are sent in batches so anytime the pods are recycled or the application crashed for some reason we",
    "start": "3548690",
    "end": "3554870"
  },
  {
    "text": "started non cleanly then you would be losing some gems and the same was UDP I",
    "start": "3554870",
    "end": "3559970"
  },
  {
    "text": "mean I think UDP if it's localhost with the pub that is very minimal but I mean if it's",
    "start": "3559970",
    "end": "3565130"
  },
  {
    "text": "a demon set with very a lot of odds then there can be a way sometimes that you",
    "start": "3565130",
    "end": "3571580"
  },
  {
    "text": "can mess up a little too right yeah so technically for a given set they're on",
    "start": "3571580",
    "end": "3576920"
  },
  {
    "text": "the same host so unless there is it wrong with the software networking level then then but",
    "start": "3576920",
    "end": "3585830"
  },
  {
    "text": "I mean it's just so typically Europe is not reliable over real network right",
    "start": "3585830",
    "end": "3591260"
  },
  {
    "text": "over the cables in that case that's why",
    "start": "3591260",
    "end": "3596540"
  },
  {
    "text": "it is good to have on the same physical whole-step today at least but yeah",
    "start": "3596540",
    "end": "3602180"
  },
  {
    "text": "you're right I mean if data is dropped somewhere then we don't have a reference for that there are some use cases for",
    "start": "3602180",
    "end": "3610960"
  },
  {
    "text": "requiring data that is recorded to be stored that's not typically how tracing",
    "start": "3610960",
    "end": "3617750"
  },
  {
    "text": "has been seen because most of the traces when you in stop to look at them most of the traces and most of these",
    "start": "3617750",
    "end": "3624230"
  },
  {
    "text": "pens actually or I mean the similar spends they're the same right and tape",
    "start": "3624230",
    "end": "3629660"
  },
  {
    "text": "may may be different in a few milliseconds here a few milliseconds there but if you compare most traces for",
    "start": "3629660",
    "end": "3635600"
  },
  {
    "text": "the single business transit for one business transaction they're pretty much the same so the idea of drop-in spans is",
    "start": "3635600",
    "end": "3642110"
  },
  {
    "text": "that it's it's okay if you drop one of those traces because it is similar to order 50 that happened at the same time",
    "start": "3642110",
    "end": "3648730"
  },
  {
    "text": "and I think the conclusion then was traces like may be relevant to our in the discussion on my earlier question we",
    "start": "3648730",
    "end": "3655280"
  },
  {
    "text": "should not be expecting them to be hundred percent and 100 percent over time we cannot I mean guarantee that but",
    "start": "3655280",
    "end": "3661970"
  },
  {
    "text": "we do maybe we don't want to have this to happen as well but also it cannot be",
    "start": "3661970",
    "end": "3667760"
  },
  {
    "text": "used for things like auditing or stuff where you really need to keep track of us that was received right yeah there",
    "start": "3667760",
    "end": "3674060"
  },
  {
    "text": "are two sides to that one is you right now you absolutely should not rely on",
    "start": "3674060",
    "end": "3679340"
  },
  {
    "text": "our audit data up in there but it should be your goal when configuring eager to",
    "start": "3679340",
    "end": "3685580"
  },
  {
    "text": "store everything so when you configure a girl you should provisioning a girl you should configure it so that it it it's",
    "start": "3685580",
    "end": "3692930"
  },
  {
    "text": "able to accept and consume all the data that you report right so if you are dropping spends it's a sign that you",
    "start": "3692930",
    "end": "3699860"
  },
  {
    "text": "should be doing something about that if you're constantly dropping spins then you should either change the",
    "start": "3699860",
    "end": "3706130"
  },
  {
    "text": "configuration or change the size of your machine things like that so I would not say that",
    "start": "3706130",
    "end": "3712039"
  },
  {
    "text": "it's expected to have this appearance being dropped but it's not I mean it is",
    "start": "3712039",
    "end": "3717380"
  },
  {
    "text": "a symptom of something all right so you should take care of that but you don't have to you know wake up at 2:00 a.m.",
    "start": "3717380",
    "end": "3723079"
  },
  {
    "text": "because of some drops pants the other side of the question is on use cases",
    "start": "3723079",
    "end": "3728119"
  },
  {
    "text": "where you need all this data there so there are some use cases that we could probably fulfilling with traces but for",
    "start": "3728119",
    "end": "3736520"
  },
  {
    "text": "that we need wear until delivery so all the database-generated has been reported in stored and things like that and we",
    "start": "3736520",
    "end": "3743150"
  },
  {
    "text": "don't have that yet yep and the last question for me is you said the collector does that at just times or",
    "start": "3743150",
    "end": "3749539"
  },
  {
    "text": "like like real times yeah so how this is this is happening it is very simple",
    "start": "3749539",
    "end": "3754579"
  },
  {
    "text": "logic and basically it's what I what I mentioned right so if we have two spans",
    "start": "3754579",
    "end": "3760849"
  },
  {
    "text": "one as a child of the other and this one here is on the own timing information",
    "start": "3760849",
    "end": "3766339"
  },
  {
    "text": "there we say that it is it has started before the parent then we adjust that to be like here you know so that's pretty",
    "start": "3766339",
    "end": "3773150"
  },
  {
    "text": "much all we do yeah we just guess there",
    "start": "3773150",
    "end": "3780500"
  },
  {
    "text": "was another question yeah yeah maybe it's just a little bit of a comment on the differences between the UDP protocol",
    "start": "3780500",
    "end": "3787400"
  },
  {
    "text": "and the HTTP protocol if anybody is trying to kind of run Yaga as a managed service and you want to have it",
    "start": "3787400",
    "end": "3794170"
  },
  {
    "text": "externally exposed on the conductor side the only protocol that's kind of easy to",
    "start": "3794170",
    "end": "3799849"
  },
  {
    "text": "add authentication upon that you can also use Lars from some of the standard opens raisin paste libraries that's HTTP",
    "start": "3799849",
    "end": "3807260"
  },
  {
    "text": "right so you can inject authentication authorization you know headers into the HTTP protocol",
    "start": "3807260",
    "end": "3814609"
  },
  {
    "text": "but that's not something you can do on the UDP part of on the backside of the",
    "start": "3814609",
    "end": "3819710"
  },
  {
    "text": "agent so anybody looking at you know running it with authentication on the",
    "start": "3819710",
    "end": "3825020"
  },
  {
    "text": "connector scientists you to explore you know just add a proxy in front of the on the connector with a some kind of yeah",
    "start": "3825020",
    "end": "3832730"
  },
  {
    "text": "authentication credential - yeah and or baritone or you know a classical HTTP authorization",
    "start": "3832730",
    "end": "3840440"
  },
  {
    "text": "here yeah so what one yeah that's much accurate one one extra thing I would add",
    "start": "3840440",
    "end": "3847220"
  },
  {
    "text": "is we just like a couple months or even less than that where is support for the G RPC",
    "start": "3847220",
    "end": "3852710"
  },
  {
    "text": "connection between the agent and the collector and we can now do also education in between in theory I have",
    "start": "3852710",
    "end": "3859640"
  },
  {
    "text": "not tried but we can use the same approach there so we should be able to place proxies to the authentication",
    "start": "3859640",
    "end": "3866150"
  },
  {
    "text": "between agent collector so I would be",
    "start": "3866150",
    "end": "3873110"
  },
  {
    "text": "also interested since we heard in the in the keynotes already about this the future so where is it going so how can",
    "start": "3873110",
    "end": "3880460"
  },
  {
    "text": "we then in the future correlate this stuff so for example usually if I see a",
    "start": "3880460",
    "end": "3889310"
  },
  {
    "text": "service degrading I already see it in the the metrics that I get from the",
    "start": "3889310",
    "end": "3894470"
  },
  {
    "text": "proxies that I have deployed with my services so how can I then get this all",
    "start": "3894470",
    "end": "3899780"
  },
  {
    "text": "together so Tracy is very good to look into things that failed to look at very",
    "start": "3899780",
    "end": "3907210"
  },
  {
    "text": "specific requests that failed so if if you know that that business transaction",
    "start": "3907210",
    "end": "3912620"
  },
  {
    "text": "failed or if you know you know the time range and then you you see like one trace with a exclamation mark then you",
    "start": "3912620",
    "end": "3919700"
  },
  {
    "text": "open that one then you see the whole transaction you see why things failed so",
    "start": "3919700",
    "end": "3924980"
  },
  {
    "text": "that that's like the second step in the root cause analysis the first step is seeing that something is wrong when a",
    "start": "3924980",
    "end": "3930950"
  },
  {
    "text": "dashboard and the whole idea there anything that's what most people are",
    "start": "3930950",
    "end": "3936650"
  },
  {
    "text": "doing nowadays when they provide tracing solutions is you zoom into that time range and from that you see the logs and",
    "start": "3936650",
    "end": "3944870"
  },
  {
    "text": "you see the traces during the keynote he was talking about linking log entries to",
    "start": "3944870",
    "end": "3950420"
  },
  {
    "text": "traces that kind of requires the context to be available for logs as well right",
    "start": "3950420",
    "end": "3955790"
  },
  {
    "text": "so when you create a new span or when you log something if there is a span opened around this log statement then it",
    "start": "3955790",
    "end": "3962990"
  },
  {
    "text": "adds a trace ID or the spinergy to the log entry and only with that you can blink",
    "start": "3962990",
    "end": "3968400"
  },
  {
    "text": "individual so then it would be of course nice to have this triggering that the",
    "start": "3968400",
    "end": "3975420"
  },
  {
    "text": "disbands don't get dropped at all cost alright yeah yeah so so if your metrics",
    "start": "3975420",
    "end": "3981510"
  },
  {
    "text": "reach a certain threshold then you ensure that this service traces all the",
    "start": "3981510",
    "end": "3986670"
  },
  {
    "text": "requests that there is one heart problem in tracing and that is knowing when to",
    "start": "3986670",
    "end": "3992400"
  },
  {
    "text": "sample things and be a hundred percent accurate all right so we don't know we do not want to record or it is not",
    "start": "3992400",
    "end": "4000559"
  },
  {
    "text": "desirable to record to same spans or to",
    "start": "4000559",
    "end": "4005869"
  },
  {
    "text": "same traces if everything is fine I mean we are just gonna delete them and in the",
    "start": "4005869",
    "end": "4011750"
  },
  {
    "text": "heart problem there is determining after the fact what we store and what we don't",
    "start": "4011750",
    "end": "4017450"
  },
  {
    "text": "store and that's called in the table based sampling right so we decide to sample not at the head of the trace but",
    "start": "4017450",
    "end": "4023450"
  },
  {
    "text": "at tail right no it's easy a hard",
    "start": "4023450",
    "end": "4028730"
  },
  {
    "text": "problem because as you can imagine on microservices we may have one service running on one node another service",
    "start": "4028730",
    "end": "4036109"
  },
  {
    "text": "running on another node and they don't talk to each other about tracing what they do is service a since de Lautrec",
    "start": "4036109",
    "end": "4042740"
  },
  {
    "text": "Jaeger service B since the other trigger and Jaeger then I stitches all those things together on the on the UI so if",
    "start": "4042740",
    "end": "4050779"
  },
  {
    "text": "things fail there on a service B that service B has to talk the chat has to",
    "start": "4050779",
    "end": "4055970"
  },
  {
    "text": "tell service a not true or to trace or not just simple not too simple that now",
    "start": "4055970",
    "end": "4062089"
  },
  {
    "text": "that while that might sound simple for to services when you have like hundreds of services as part of one transaction",
    "start": "4062089",
    "end": "4067869"
  },
  {
    "text": "it becomes very complicated so there are kind of a couple of solutions but no",
    "start": "4067869",
    "end": "4073160"
  },
  {
    "text": "real solution right now",
    "start": "4073160",
    "end": "4076808"
  },
  {
    "text": "Yeah right this and then you just roll it just didn't do rolling of the logs",
    "start": "4081570",
    "end": "4087630"
  },
  {
    "text": "and drop logs and yeah yeah so if I ran",
    "start": "4087630",
    "end": "4098270"
  },
  {
    "text": "some container or something in a poll Kemah younger automatically attached",
    "start": "4098270",
    "end": "4103890"
  },
  {
    "text": "labels for labels to expand yes and it does it just so you hear attaches Logs",
    "start": "4103890",
    "end": "4111720"
  },
  {
    "text": "with attaches labels with the host name and with ap name by default and also the",
    "start": "4111720",
    "end": "4118650"
  },
  {
    "text": "same play strategy that was used for that trace yeah it does not by default",
    "start": "4118650",
    "end": "4126000"
  },
  {
    "text": "but it might there is so depending on the client that you so if you see the",
    "start": "4126000",
    "end": "4131370"
  },
  {
    "text": "Java client you can specify in an environment variable called eager",
    "start": "4131370",
    "end": "4137130"
  },
  {
    "text": "underscore tags and those are static labels to add to all these bands for",
    "start": "4137130",
    "end": "4142650"
  },
  {
    "text": "that application and then you can use the I think it's called up upward API or",
    "start": "4142650",
    "end": "4148680"
  },
  {
    "text": "something like that for from kubernetes just say well for inside that environment variable I want to store the",
    "start": "4148680",
    "end": "4154920"
  },
  {
    "text": "plot name as well but you know the plot name is kind of moot because it is the",
    "start": "4154920",
    "end": "4160170"
  },
  {
    "text": "the container name and it is their host name so it is recorded already right so the host name on that span already",
    "start": "4160170",
    "end": "4167460"
  },
  {
    "text": "reflects the plot name but you can use that API to to specify others",
    "start": "4167460",
    "end": "4173279"
  },
  {
    "text": "information from the node",
    "start": "4173280",
    "end": "4176298"
  },
  {
    "text": "no no well not automatically especially because Jaeger was not meant to run only",
    "start": "4178890",
    "end": "4184650"
  },
  {
    "text": "on kubernetes but it's something that you know I would encourage you to open",
    "start": "4184650",
    "end": "4190258"
  },
  {
    "text": "an issue on the Jaeger project and discuss that because I think we should be able to be it smart enough to",
    "start": "4190259",
    "end": "4195960"
  },
  {
    "text": "determine whether we are running on kubernetes and if we are running there then we can probably get those tags from",
    "start": "4195960",
    "end": "4203730"
  },
  {
    "text": "you know from from from kubernetes even if the yoga client is not doing that we",
    "start": "4203730",
    "end": "4209430"
  },
  {
    "text": "can probably do that with a Jaeger operator so when the a corporator sees your application it can probably change",
    "start": "4209430",
    "end": "4216390"
  },
  {
    "text": "the yogurt tags environment variable to include information open an issue for us",
    "start": "4216390",
    "end": "4221580"
  },
  {
    "text": "let's let's discuss that this wonder it's on the question of what to do how",
    "start": "4221580",
    "end": "4228660"
  },
  {
    "text": "to decide when to do a trade trace if there's an error that you need to debug I mean if you wanna HTTP",
    "start": "4228660",
    "end": "4234450"
  },
  {
    "text": "protocol you can kind of inject in the header from the outside we need to be able to control your client that is",
    "start": "4234450",
    "end": "4239760"
  },
  {
    "text": "initiating your request but you can eject that you want to have a forced tracing started if you have a low sample",
    "start": "4239760",
    "end": "4247710"
  },
  {
    "text": "rate and you want to make sure to actually make a trace on that you can kind of tail on the Aster client that",
    "start": "4247710",
    "end": "4254520"
  },
  {
    "text": "you would like to have a forced tracing started which could be helpful sometimes if you can control your your client yeah",
    "start": "4254520",
    "end": "4262770"
  },
  {
    "text": "yeah we have a question on the other",
    "start": "4262770",
    "end": "4268380"
  },
  {
    "text": "side so this side of the room dominated now we are ready for the next side",
    "start": "4268380",
    "end": "4275030"
  },
  {
    "text": "surely good tracing comes for a price on resources I need is there any assumption",
    "start": "4278980",
    "end": "4286220"
  },
  {
    "text": "I can take on how much more capacity I know I need in my kubernetes cluster if",
    "start": "4286220",
    "end": "4293180"
  },
  {
    "text": "I enable tracing for simply everything I'm very glad that we finally had the",
    "start": "4293180",
    "end": "4300380"
  },
  {
    "text": "performance question it was it took I don't know 40 minutes to get this",
    "start": "4300380",
    "end": "4306800"
  },
  {
    "text": "question we so she's not here but we had",
    "start": "4306800",
    "end": "4313670"
  },
  {
    "text": "a talk yesterday on that on that specific topic so the talk was what is the performance overhead of tracing and",
    "start": "4313670",
    "end": "4321410"
  },
  {
    "text": "and this was the the subject of Gabriella's internship so the person who",
    "start": "4321410",
    "end": "4326630"
  },
  {
    "text": "delivered the talk yesterday and basically the outcome is instrumentation",
    "start": "4326630",
    "end": "4331790"
  },
  {
    "text": "itself is not costing you anything so you know instrumenting your application",
    "start": "4331790",
    "end": "4338420"
  },
  {
    "text": "is the costs are very it's not very high or there's not any cost at all actually",
    "start": "4338420",
    "end": "4346880"
  },
  {
    "text": "because most applications like in Java it is the head code and the JVM would",
    "start": "4346880",
    "end": "4352490"
  },
  {
    "text": "just remove that now in terms of when you plug a concrete tracer like Yeager's",
    "start": "4352490",
    "end": "4358640"
  },
  {
    "text": "then of course you are doing something then you are paying something so when",
    "start": "4358640",
    "end": "4364130"
  },
  {
    "text": "you for in process tracing like when you have one HTTP request and then you have",
    "start": "4364130",
    "end": "4369290"
  },
  {
    "text": "all the database calls and you are instrumenting all the database calls then those the collection of that kind",
    "start": "4369290",
    "end": "4376250"
  },
  {
    "text": "of data is potentially costing you around 15% of throughput all right so",
    "start": "4376250",
    "end": "4382250"
  },
  {
    "text": "when you provision things and you should provision probably with a one or two",
    "start": "4382250",
    "end": "4388730"
  },
  {
    "text": "nodes more for tracing I mean one or two nodes more it's really relative but I",
    "start": "4388730",
    "end": "4395930"
  },
  {
    "text": "think 15% is not a high price to pay for this kind of observability",
    "start": "4395930",
    "end": "4402239"
  },
  {
    "text": "and when you but then when you do communicate over the network communication one service to another",
    "start": "4402239",
    "end": "4408480"
  },
  {
    "text": "service and you're measuring how long that communication is taking then the costs are very low and your network",
    "start": "4408480",
    "end": "4416400"
  },
  {
    "text": "connection itself costs you far more than observing that connection so it you",
    "start": "4416400",
    "end": "4422460"
  },
  {
    "text": "don't need any extra resources for that",
    "start": "4422460",
    "end": "4425989"
  },
  {
    "text": "okay so I guess that's pretty much it thank you very much for attending and once again join us",
    "start": "4431760",
    "end": "4438720"
  },
  {
    "text": "[Applause]",
    "start": "4438720",
    "end": "4443149"
  }
]