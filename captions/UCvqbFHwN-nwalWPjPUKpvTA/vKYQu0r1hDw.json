[
  {
    "start": "0",
    "end": "170000"
  },
  {
    "text": "okay let's get started would like to thank everyone for joining us for today's cncf webinar",
    "start": "10320",
    "end": "17680"
  },
  {
    "text": "multi-cluster and multi-cloud service mesh with cncs kuma and envoy i'm jerry fallon and i will be",
    "start": "17680",
    "end": "24880"
  },
  {
    "text": "moderating today's webinar we would like to welcome our presenter today marco palladino",
    "start": "24880",
    "end": "30480"
  },
  {
    "text": "cto and co-founder of kong just a few housekeeping items before we get started",
    "start": "30480",
    "end": "35520"
  },
  {
    "text": "during the webinar you are not able to talk as an attendee there is a q a box at the bottom of your screen so please feel free to drop your",
    "start": "35520",
    "end": "42079"
  },
  {
    "text": "questions in there and we'll get to as many as we can at the end this is an official webinar of the cncf",
    "start": "42079",
    "end": "47120"
  },
  {
    "text": "and as such is subject to the cncf code of conduct please do not add anything to the chat",
    "start": "47120",
    "end": "52480"
  },
  {
    "text": "or questions that are in violation of the code of conduct please be respectful of all your fellow participants and presenters",
    "start": "52480",
    "end": "59199"
  },
  {
    "text": "please also note that the recording and slides will be posted later today to the cncf webinar page at cncf dot io slash webinars and with",
    "start": "59199",
    "end": "66799"
  },
  {
    "text": "that i'll hand it over to marco for today's presentation thank you so much my name is marco i'm",
    "start": "66799",
    "end": "74080"
  },
  {
    "text": "the cto and co-founder of kong and um and today i'm excited to be",
    "start": "74080",
    "end": "79840"
  },
  {
    "text": "showing you the result of many weeks and many months of work that we have done with the community and",
    "start": "79840",
    "end": "86720"
  },
  {
    "text": "the users around cuma when it comes to the multi-cloud and multi-cluster deployment",
    "start": "86720",
    "end": "92560"
  },
  {
    "text": "of a service mesh so when we look at service mesh deployments multi-cluster multi-cloud including a",
    "start": "92560",
    "end": "99280"
  },
  {
    "text": "hybrid of containers and virtual machines in the same service mesh this is probably one of the most complex",
    "start": "99280",
    "end": "105439"
  },
  {
    "text": "service mesh deployments that anybody or any product can address when it comes to when it comes to",
    "start": "105439",
    "end": "111759"
  },
  {
    "text": "service mesh like i said my name is marco i'm the cto and co-founder at kong",
    "start": "111759",
    "end": "117759"
  },
  {
    "text": "kuma was initially built uh at kong and then donated to the cncf",
    "start": "117759",
    "end": "124640"
  },
  {
    "text": "foundation as a sandbox project making it the first envoy based service mesh to ever the first",
    "start": "124640",
    "end": "132160"
  },
  {
    "text": "onway-based service mesh to be donated and accepted in in the foundation so today i'm going to be",
    "start": "132160",
    "end": "138959"
  },
  {
    "text": "presenting an overview on cuma what it is why we built it what problems it solves",
    "start": "138959",
    "end": "146640"
  },
  {
    "text": "and then we're going to be firing up the terminal so i want the majority of this presentation to really be a live demo where you can see",
    "start": "146640",
    "end": "154400"
  },
  {
    "text": "how kuma can run in a multi-cloud and multi-cluster deployment and then on top of that we're going to be doing a few",
    "start": "154400",
    "end": "160000"
  },
  {
    "text": "things like for example enabling zero trust security enabling traffic permission acl",
    "start": "160000",
    "end": "165280"
  },
  {
    "text": "traffic routing across different zones so let's not waste any time let's dive into it cuma was born",
    "start": "165280",
    "end": "172319"
  },
  {
    "start": "170000",
    "end": "405000"
  },
  {
    "text": "in uh september 2019 by kong and it was donated by cncf as a sandbox project when we built kuma",
    "start": "172319",
    "end": "180879"
  },
  {
    "text": "um you know we we built it because if you're familiar with kong kong is a connectivity company that",
    "start": "180879",
    "end": "188640"
  },
  {
    "text": "started uh by creating an api gateway kong gateway back in 2015 and in one of the one of",
    "start": "188640",
    "end": "196159"
  },
  {
    "text": "the things that our users and enterprise customers were asking us was to be able to extend",
    "start": "196159",
    "end": "201519"
  },
  {
    "text": "the connectivity use case not just at the edge not just across different applications but also",
    "start": "201519",
    "end": "206879"
  },
  {
    "text": "being able to support connectivity across all the services that our applications are going to be using",
    "start": "206879",
    "end": "212560"
  },
  {
    "text": "to to provide the final product and so as part of that part of that work we started working on",
    "start": "212560",
    "end": "219760"
  },
  {
    "text": "actually using service meshes that were available out there and integrate them within our offering and we quickly realized that",
    "start": "219760",
    "end": "228560"
  },
  {
    "text": "those existing service measures were not going to be a good fit for us for a couple of reasons first service mesh and service mesh",
    "start": "228560",
    "end": "235439"
  },
  {
    "text": "projects out there for a long time have been very very hard to use very hard to scale very hard to consume",
    "start": "235439",
    "end": "243519"
  },
  {
    "text": "most of the service mesh products and projects that are available to us are not going to be supporting multiple",
    "start": "243519",
    "end": "250400"
  },
  {
    "text": "meshes on top of the same cluster whereas we are working with users and with customers",
    "start": "250400",
    "end": "255840"
  },
  {
    "text": "that do not necessarily always want a large service mesh across every application",
    "start": "255840",
    "end": "261600"
  },
  {
    "text": "across every line of business but they want to be able to provision different service meshes that are",
    "start": "261600",
    "end": "267040"
  },
  {
    "text": "isolated from each other on top of the same control plane without having to deploy",
    "start": "267040",
    "end": "272400"
  },
  {
    "text": "one deployment of service mesh for each mesh that they want to create so they needed a more scalable system to",
    "start": "272400",
    "end": "278560"
  },
  {
    "text": "to support multiple teams in order to reduce the team coordination that is required to manage",
    "start": "278560",
    "end": "284880"
  },
  {
    "text": "to manage all of these measures and as well as to improve security so that one team cannot possibly",
    "start": "284880",
    "end": "290000"
  },
  {
    "text": "bring down another team's mesh by for example introducing a wrong policy and uh and we needed something that",
    "start": "290000",
    "end": "296400"
  },
  {
    "text": "could support not only kubernetes environments but also virtual machine environments as",
    "start": "296400",
    "end": "301600"
  },
  {
    "text": "well as being able to mix and match those virtual machine and container environments together within",
    "start": "301600",
    "end": "307440"
  },
  {
    "text": "the service mesh not only on the data plane but also on the control plane long story short none of the projects",
    "start": "307440",
    "end": "313840"
  },
  {
    "text": "out there were working for us and this is why we decided to build queue then after building kuma we",
    "start": "313840",
    "end": "318960"
  },
  {
    "text": "donated kuma and kuma today provides a very unique set of features that we are not going to be finding",
    "start": "318960",
    "end": "324880"
  },
  {
    "text": "in any other service mesh available in the landscape uh and in in the in the market um and",
    "start": "324880",
    "end": "330880"
  },
  {
    "text": "thanks to that very unique set of features today we're seeing lots of adoption when it comes to when it comes to",
    "start": "330880",
    "end": "336880"
  },
  {
    "text": "uh you know users adopting skew map to build their own service meshes in either a single zone or multi-zone",
    "start": "336880",
    "end": "343120"
  },
  {
    "text": "capacity as well as enterprise organizations that are using cuma to create a service mesh that the",
    "start": "343120",
    "end": "349840"
  },
  {
    "text": "enterprise architects can then uh utilize to provision connectivity",
    "start": "349840",
    "end": "355360"
  },
  {
    "text": "across each application in each team that the application teams are building and the thing about service mesh uh it",
    "start": "355360",
    "end": "362639"
  },
  {
    "text": "really is that the the features that service mesh provides all the zero trust security all the observability all the traffic",
    "start": "362639",
    "end": "369680"
  },
  {
    "text": "routing and traffic reliability these are things that if we do not use a service mesh are",
    "start": "369680",
    "end": "375039"
  },
  {
    "text": "things that we have to build ourselves and so really by using a service mesh we can improve the efficiency",
    "start": "375039",
    "end": "381120"
  },
  {
    "text": "of the application teams that can stop managing the network and they can focus on the things that they should be",
    "start": "381120",
    "end": "387360"
  },
  {
    "text": "working on the products the applications whereas the architects get control of that connectivity",
    "start": "387360",
    "end": "392639"
  },
  {
    "text": "so that we can build more reliable architectures moving forward and so we've been working with the users or we're working with organizations",
    "start": "392639",
    "end": "398319"
  },
  {
    "text": "when it comes to kuma and we're seeing lots of success into deploying a service mesh that just works in production now",
    "start": "398319",
    "end": "406560"
  },
  {
    "start": "405000",
    "end": "535000"
  },
  {
    "text": "before i jump into why qma is unique um let's look at why we actually need a",
    "start": "406560",
    "end": "411759"
  },
  {
    "text": "service mesh and and usually there is there is many different use cases but we can sum them up in these three main scenarios we need to",
    "start": "411759",
    "end": "419360"
  },
  {
    "text": "have a service mesh because the more applications we build and the more connectivity we create",
    "start": "419360",
    "end": "424400"
  },
  {
    "text": "and connectivity it is at the backbone of every modern application if our connections",
    "start": "424400",
    "end": "430080"
  },
  {
    "text": "are not reliable they're not secure then our applications are not reliable as well they're down and if our",
    "start": "430080",
    "end": "436639"
  },
  {
    "text": "applications are down then our business is going to suffer from it so it's important that as we",
    "start": "436639",
    "end": "441759"
  },
  {
    "text": "build more applications and inevitably we introduce more connectivity as we transition to microservices",
    "start": "441759",
    "end": "447440"
  },
  {
    "text": "as we create more and more of that connectivity we can connect the services together in a reliable way in a secure way and we",
    "start": "447440",
    "end": "454720"
  },
  {
    "text": "can then observe all that's happening among these more complex networking topology",
    "start": "454720",
    "end": "460080"
  },
  {
    "text": "and so service mesh has been used to do that to discover the services to connect them to enable that reliable connections so that the teams",
    "start": "460080",
    "end": "466879"
  },
  {
    "text": "don't have to build that by themselves in a fragmented way but we can provide that as as part of",
    "start": "466879",
    "end": "472000"
  },
  {
    "text": "the underlying infrastructure provisioning that the architects are are provisioning to the application teams whenever the",
    "start": "472000",
    "end": "478479"
  },
  {
    "text": "the teams want to create something as well as we can enable zero trust security models to assign a certificate and an identity",
    "start": "478479",
    "end": "485840"
  },
  {
    "text": "really to every service that's running within our mesh as well as encrypting the traffic from one service to another and",
    "start": "485840",
    "end": "492080"
  },
  {
    "text": "then finally understanding uh what are the traces what are the metrics what are the logs",
    "start": "492080",
    "end": "497120"
  },
  {
    "text": "among all the services that we are running and in kuma by the way it is not",
    "start": "497120",
    "end": "502879"
  },
  {
    "text": "something that we can use only for traditional apis or",
    "start": "502879",
    "end": "508400"
  },
  {
    "text": "api protocols like http or jrpc but we can use scuma in front of anything that makes or",
    "start": "508400",
    "end": "515039"
  },
  {
    "text": "receives a request over tcp which means that we can use a service mesh not just for",
    "start": "515039",
    "end": "520320"
  },
  {
    "text": "the apis and the services that we create but also for services that we adopt for example a",
    "start": "520320",
    "end": "526399"
  },
  {
    "text": "database for example an event collector like kafka so anything that makes a request or receives a request",
    "start": "526399",
    "end": "532399"
  },
  {
    "text": "is a service for service mesh and kuma supports that and and if you look at kuma from a high",
    "start": "532399",
    "end": "539519"
  },
  {
    "start": "535000",
    "end": "676000"
  },
  {
    "text": "level overview qma is a control plane that implements the xds api",
    "start": "539519",
    "end": "545519"
  },
  {
    "text": "that the tamboy supports and so we bundle envoy as our data plane proxy technology",
    "start": "545519",
    "end": "552240"
  },
  {
    "text": "in kuma in such a way that in order to use schema we do not need to have any prior experience",
    "start": "552240",
    "end": "557600"
  },
  {
    "text": "or knowledge of envoy humble can get quite complex when it comes to the configuration it's a very versatile networking primitive",
    "start": "557600",
    "end": "565440"
  },
  {
    "text": "and and we understand that in order to use a service mesh learning envoy maybe a non-starter for",
    "start": "565440",
    "end": "572160"
  },
  {
    "text": "some users and so we we abstract away the bootstrap configuration of envoy the entire envoy",
    "start": "572160",
    "end": "578000"
  },
  {
    "text": "experience into our qma data plane process with that said there is still a chance",
    "start": "578000",
    "end": "584880"
  },
  {
    "text": "for power users to go deeper and change the underlying proxy configuration that amway supports",
    "start": "584880",
    "end": "590959"
  },
  {
    "text": "by using what we call the proxy template so long story short qm is a control plane that supports soundboy where we support",
    "start": "590959",
    "end": "597360"
  },
  {
    "text": "the sidecar model of amboy we automatically inject a sidecar next to our services next to",
    "start": "597360",
    "end": "603279"
  },
  {
    "text": "our workloads and we can run this service mesh on both kubernetes and virtual machines",
    "start": "603279",
    "end": "609120"
  },
  {
    "text": "on both single zone deployments or multi-zone a zone can be a kubernetes cluster it",
    "start": "609120",
    "end": "614800"
  },
  {
    "text": "can be a platform can be a cloud it can be a vpc we can slice and dice it however we want",
    "start": "614800",
    "end": "620079"
  },
  {
    "text": "and we can connect the service mesh across both of these environments it is built for the enterprise architects that deploys the",
    "start": "620079",
    "end": "626959"
  },
  {
    "text": "service mesh once across all the zones that they want to support and then they can create virtual meshes",
    "start": "626959",
    "end": "633519"
  },
  {
    "text": "for each application each team um you know from from one installation",
    "start": "633519",
    "end": "639040"
  },
  {
    "text": "of the service mesh it is easy to install easy to use easy to scale simplicity really has been a big focus",
    "start": "639040",
    "end": "645920"
  },
  {
    "text": "when it came to cuma we wanted to simplify how kuma could be adopted",
    "start": "645920",
    "end": "650959"
  },
  {
    "text": "in the in the community and among the user base and by doing and we really spent lots of time to",
    "start": "650959",
    "end": "657279"
  },
  {
    "text": "think of of simplicity really as almost as a feature we wanted this to be to be simple to use and because it is",
    "start": "657279",
    "end": "665279"
  },
  {
    "text": "part of cncf it is built with the same governance the same neutrality the same openness as any other cncf",
    "start": "665279",
    "end": "673120"
  },
  {
    "text": "project like for example envoy which we support natively so why cuma let's take a deeper look",
    "start": "673120",
    "end": "679680"
  },
  {
    "start": "676000",
    "end": "832000"
  },
  {
    "text": "into the feature set that kuma provides and then let's look at this feature set live in a demo so ql",
    "start": "679680",
    "end": "686320"
  },
  {
    "text": "like i said was built in in such a way that it would scale across multiple applications not just",
    "start": "686320",
    "end": "692720"
  },
  {
    "text": "when it comes to creating one large mesh which is the simplest deployment of a service mesh we can think of but also when it comes to provisioning",
    "start": "692720",
    "end": "699760"
  },
  {
    "text": "individual meshes that we can then create for each application each team or each line of",
    "start": "699760",
    "end": "704959"
  },
  {
    "text": "business and so really when it comes to cuma we wanted to create one deployment that could",
    "start": "704959",
    "end": "710399"
  },
  {
    "text": "virtualize all of these different measures in each mesh it is going to be powered by its own",
    "start": "710399",
    "end": "715760"
  },
  {
    "text": "certificate authority back-end which means that there is uh there is um isolation built",
    "start": "715760",
    "end": "722079"
  },
  {
    "text": "in among these different meshes um by doing so we deploy chemo once",
    "start": "722079",
    "end": "727120"
  },
  {
    "text": "and then we can run it as many meshes as we want it is universal because it runs everywhere it runs on kubernetes it runs",
    "start": "727120",
    "end": "733680"
  },
  {
    "text": "on open shift it runs on virtual machine based workloads and we can also mix and match those workloads kuma creates an overlay",
    "start": "733680",
    "end": "740880"
  },
  {
    "text": "across our kubernetes clusters across our virtual machine based workloads and on top of that overlay",
    "start": "740880",
    "end": "746800"
  },
  {
    "text": "we can then apply service mesh policies like neutral tls like observability like",
    "start": "746800",
    "end": "752000"
  },
  {
    "text": "circuit breakers like health checks like tracing in order to govern how the traffic and",
    "start": "752000",
    "end": "757440"
  },
  {
    "text": "the connectivity among all of these different environments it is going to be working and we can do that in a quite flexible",
    "start": "757440",
    "end": "763839"
  },
  {
    "text": "way every new service or any new environment any new workload that is being created in cuma also",
    "start": "763839",
    "end": "771120"
  },
  {
    "text": "supports custom attributes that we can use in order to determine how those policies for example like",
    "start": "771120",
    "end": "777120"
  },
  {
    "text": "routing should work in a very fine-grained way for example we're working with some",
    "start": "777120",
    "end": "783600"
  },
  {
    "text": "financial users that are going to be running a service mesh across multiple countries because they support applications that",
    "start": "783600",
    "end": "790480"
  },
  {
    "text": "have been deployed at a global scale and so one of the things that they need to be able to do",
    "start": "790480",
    "end": "796720"
  },
  {
    "text": "is preventing some traffic certain traffic path uh to ever leaving the country and so",
    "start": "796720",
    "end": "803920"
  },
  {
    "text": "they can tag their workloads with a country name for example and then they can apply traffic routing",
    "start": "803920",
    "end": "808959"
  },
  {
    "text": "policies on top of those attributes that are customized in this case the country to determine how routing works and",
    "start": "808959",
    "end": "815519"
  },
  {
    "text": "because of the built-in multi-zone connectivity we we provide one of the best",
    "start": "815519",
    "end": "821120"
  },
  {
    "text": "implementations in kuma of multi-zone multi-cluster multi-cloud",
    "start": "821120",
    "end": "826240"
  },
  {
    "text": "support that the industry has ever seen when it comes to a service mesh and i'm going to be exploring this",
    "start": "826240",
    "end": "831760"
  },
  {
    "text": "in just a second if you're familiar with service match",
    "start": "831760",
    "end": "837680"
  },
  {
    "start": "832000",
    "end": "970000"
  },
  {
    "text": "which which i assume you are you know that this has two benefits first and foremost the application teams they stop managing",
    "start": "837680",
    "end": "844320"
  },
  {
    "text": "the network they become consumers of connectivity likewise we're using kubernetes",
    "start": "844320",
    "end": "849440"
  },
  {
    "text": "to abstract away data center operations we're going to be using something like huma to abstract away connectivity",
    "start": "849440",
    "end": "856320"
  },
  {
    "text": "across any applications that the developers are building before service mesh the developers were",
    "start": "856320",
    "end": "862480"
  },
  {
    "text": "also building that connectivity they were managing it they were securing it they were observing it in different",
    "start": "862480",
    "end": "867519"
  },
  {
    "text": "programming languages with lots of fragmentation and so they become consumers now of that connectivity as opposed as",
    "start": "867519",
    "end": "872880"
  },
  {
    "text": "opposed to being the builders of that connectivity and this in turn makes them more productive and the",
    "start": "872880",
    "end": "878240"
  },
  {
    "text": "architects who are provisioning this infrastructure get control on the most important thing that any",
    "start": "878240",
    "end": "883440"
  },
  {
    "text": "modern application must do right and that is connectivity it is built on top of envoy",
    "start": "883440",
    "end": "889199"
  },
  {
    "text": "we really like envoy as a networking primitive we didn't think we needed to build another networking stack for",
    "start": "889199",
    "end": "896160"
  },
  {
    "text": "managing uh the the data plane proxy communication so we're effectively leveraging",
    "start": "896160",
    "end": "901360"
  },
  {
    "text": "the the envoy uh runtime to do all of that which as you know it is very stable and",
    "start": "901360",
    "end": "907279"
  },
  {
    "text": "there is uh you know the entire industry is rallying around it so humble was definitely the best choice for us",
    "start": "907279",
    "end": "912880"
  },
  {
    "text": "when it came to when it came to supporting a data plane technology um and and we made sure that we could do",
    "start": "912880",
    "end": "919600"
  },
  {
    "text": "things in a very simple way and so for example we're going to be seeing in the demo enabling neutral tls with automatic ca",
    "start": "919600",
    "end": "926800"
  },
  {
    "text": "uh creation and automatic certificate issuance and rotation it is a one-click process with human one",
    "start": "926800",
    "end": "933440"
  },
  {
    "text": "click we deploy it we run the mutual telus policy and everything else has been taken care of by human",
    "start": "933440",
    "end": "939519"
  },
  {
    "text": "as well as we provide uh you know kuma provides some um provides some integrations with",
    "start": "939519",
    "end": "946480"
  },
  {
    "text": "prometheus with grafana with with tracing uh providers uh and we also have",
    "start": "946480",
    "end": "952480"
  },
  {
    "text": "uh you know chips with grafana dashboards out of the box so if you want to get some charts real quick we we don't have to build them",
    "start": "952480",
    "end": "959279"
  },
  {
    "text": "from scratch they are coming with with queue itself bundled into the project and so this is uh this",
    "start": "959279",
    "end": "965519"
  },
  {
    "text": "is again in the context of making sure that everybody could get could get up and running very quickly",
    "start": "965519",
    "end": "971440"
  },
  {
    "start": "970000",
    "end": "1344000"
  },
  {
    "text": "of course there is then traffic routing policies that allow us to do blue green deployments allows us to do canary releases in a standardized way",
    "start": "971440",
    "end": "978079"
  },
  {
    "text": "across every environment and if you look at the multi-zone support that cuba",
    "start": "978079",
    "end": "983920"
  },
  {
    "text": "provides this is really where where kuma excels um into into deploying",
    "start": "983920",
    "end": "989519"
  },
  {
    "text": "into support in complex networking environments so first and foremost when running a service mesh in a distributed way there is going to be two",
    "start": "989519",
    "end": "996399"
  },
  {
    "text": "different challenges first how do we propagate the service mesh policies across each one of the zones the regions",
    "start": "996399",
    "end": "1003920"
  },
  {
    "text": "the clusters that we want to support and second how do we enable cross zone connectivity from one region",
    "start": "1003920",
    "end": "1012240"
  },
  {
    "text": "to another and kuma does that by supporting this global remote control",
    "start": "1012240",
    "end": "1017759"
  },
  {
    "text": "plan separation which automatically takes care of all of this for us so we're going to be having a global",
    "start": "1017759",
    "end": "1023440"
  },
  {
    "text": "control plane that we're going to be using for changing the state of the service",
    "start": "1023440",
    "end": "1029520"
  },
  {
    "text": "mesh across every zone so the global is the primary if you wish it's the read write control plane that",
    "start": "1029520",
    "end": "1037038"
  },
  {
    "text": "is going to be used to apply service mesh policies across any mesh we may have across any zone we may be supporting and",
    "start": "1037039",
    "end": "1044079"
  },
  {
    "text": "then we have as many remote control planes as the zones that we want to support the remote control planes are going to be",
    "start": "1044079",
    "end": "1050720"
  },
  {
    "text": "synchronizing with a global control plane out of the box so whatever whatever we're pushing inside of the global",
    "start": "1050720",
    "end": "1056160"
  },
  {
    "text": "control plane will be automatically distributed across any any remote control plane and",
    "start": "1056160",
    "end": "1061679"
  },
  {
    "text": "the remote control planes will be the ones in charge of accepting connections from the data",
    "start": "1061679",
    "end": "1066960"
  },
  {
    "text": "plane proxies that we're going to be starting in each one of these different zones by",
    "start": "1066960",
    "end": "1072080"
  },
  {
    "text": "having a global and remote control plane separation we can abstract away how policies are",
    "start": "1072080",
    "end": "1077200"
  },
  {
    "text": "being synchronized in a distributed service mesh as well as we are creating a highly available",
    "start": "1077200",
    "end": "1084080"
  },
  {
    "text": "service mesh in such a way that if one remote stops working for whatever reason",
    "start": "1084080",
    "end": "1089520"
  },
  {
    "text": "the other remotes are not being affected by it and when the data planes are starting",
    "start": "1089520",
    "end": "1095520"
  },
  {
    "text": "into each one of these different environments they're connecting to the remote obviously using xds",
    "start": "1095520",
    "end": "1100960"
  },
  {
    "text": "over grcp and http 2 and in order to keep the stack quite similar we have built our own",
    "start": "1100960",
    "end": "1107840"
  },
  {
    "text": "extension of xds called kds the kuma discovery service that enables the communication between",
    "start": "1107840",
    "end": "1114000"
  },
  {
    "text": "the remote control planes and the global control plane",
    "start": "1114000",
    "end": "1118720"
  },
  {
    "text": "therefore we're going to be using jrpc and http 2 all the way from the data planes to the",
    "start": "1119200",
    "end": "1125039"
  },
  {
    "text": "remote and from the remote to the global control plane so this has been created with the goal",
    "start": "1125039",
    "end": "1131039"
  },
  {
    "text": "of keeping things quite simple when it comes to this distributed communication",
    "start": "1131039",
    "end": "1136480"
  },
  {
    "text": "now the second problem is enabling the cross zone connectivity across these different zones and to do",
    "start": "1136480",
    "end": "1143039"
  },
  {
    "text": "that we have uh enabled a different mode for the data plane so you can have",
    "start": "1143039",
    "end": "1149840"
  },
  {
    "text": "a data plane in standard mode which is a proxy effectively and you can have a data plane in ingress mode and when you deploy the",
    "start": "1149840",
    "end": "1156720"
  },
  {
    "text": "data playing the cuba data plane in ingress mode then that can be used as the",
    "start": "1156720",
    "end": "1162559"
  },
  {
    "text": "ingress to accept traffic from another zone into into the zone with ingress is being",
    "start": "1162559",
    "end": "1168880"
  },
  {
    "text": "deployed so the ingress will effectively is effectively the component that out of the box enables this",
    "start": "1168880",
    "end": "1176080"
  },
  {
    "text": "cross-zone communication when when uh a request comes to the ingress we're doing an sni",
    "start": "1176080",
    "end": "1182320"
  },
  {
    "text": "lookup to determine what is the ultimate service that we're trying to consume and then",
    "start": "1182320",
    "end": "1187679"
  },
  {
    "text": "the ingress will be in charge of practicing that request to the service that we that",
    "start": "1187679",
    "end": "1192799"
  },
  {
    "text": "that that the original source service wanted to use now the ingress alone would not be very",
    "start": "1192799",
    "end": "1200880"
  },
  {
    "text": "effectful effective if it didn't come with a built-in service discovery and so",
    "start": "1200880",
    "end": "1206640"
  },
  {
    "text": "the remote control plane also comes with its own service discovery that allows us to discover",
    "start": "1206640",
    "end": "1212159"
  },
  {
    "text": "not just the services within one zone but also it's a distributed service discovery also the services that belong to a",
    "start": "1212159",
    "end": "1218960"
  },
  {
    "text": "different zone and so depending on our traffic routing rules depending on the health",
    "start": "1218960",
    "end": "1224320"
  },
  {
    "text": "of our services the discovery is going to be resolving our services to either the local zone",
    "start": "1224320",
    "end": "1229919"
  },
  {
    "text": "or to another zone in order to enable these cross-zone connectivity out of the box",
    "start": "1229919",
    "end": "1235760"
  },
  {
    "text": "all of these it's much harder to explain than to than to watch and see live and so um i want to pull up my",
    "start": "1235760",
    "end": "1243120"
  },
  {
    "text": "terminal real quick and then show you how these works works with with live with a live application live demo now",
    "start": "1243120",
    "end": "1250960"
  },
  {
    "text": "the zones by the way can be like i said different kubernetes clusters they can be container based but our",
    "start": "1250960",
    "end": "1257760"
  },
  {
    "text": "zones can also be virtual machine based zones and so for example we can run this on um",
    "start": "1257760",
    "end": "1263360"
  },
  {
    "text": "aws you know ec2 we can run this on top of any virtual machine physical data",
    "start": "1263360",
    "end": "1268400"
  },
  {
    "text": "centers kuma also supports environments that typically other service measures do not",
    "start": "1268400",
    "end": "1273520"
  },
  {
    "text": "support uh like for example aws ecs or fargate yes you can use qman instead of",
    "start": "1273520",
    "end": "1280960"
  },
  {
    "text": "app mesh for those far gate deployments and for those aws ecs deployments as well and that is",
    "start": "1280960",
    "end": "1288000"
  },
  {
    "text": "thanks to the universal capability that we have built not just on the data planes but on the control planes as well",
    "start": "1288000",
    "end": "1295919"
  },
  {
    "text": "um kuma comes with a gui out of the box we're going to be using these quite extensively to look at the state of our resources it",
    "start": "1295919",
    "end": "1303039"
  },
  {
    "text": "comes with native kubernetes crds if we run on kubernetes it comes with universal clis and http api",
    "start": "1303039",
    "end": "1310400"
  },
  {
    "text": "we can effectively integrate cuma with any automation we have built inside of our environments",
    "start": "1310400",
    "end": "1318559"
  },
  {
    "text": "it comes with policies policies that implement security traffic control observability and we can also",
    "start": "1318559",
    "end": "1324799"
  },
  {
    "text": "leverage all the underlying policies and filters that envoy supports",
    "start": "1324799",
    "end": "1330000"
  },
  {
    "text": "by using the proxy template template policy that kuma uh that kuma offers and so effectively",
    "start": "1330000",
    "end": "1335200"
  },
  {
    "text": "we have available to us all the cuma policies as well as the entire envoy proxy ecosystem and filters",
    "start": "1335200",
    "end": "1341600"
  },
  {
    "text": "if we want to go a little bit lower level and and one of the things that's quite interesting you know when working with",
    "start": "1341600",
    "end": "1347919"
  },
  {
    "start": "1344000",
    "end": "1466000"
  },
  {
    "text": "the users and uh and the organizations that are using tumor today one of the things that we've realized is",
    "start": "1347919",
    "end": "1354559"
  },
  {
    "text": "that uh kuma is being used for a couple of reasons so besides implementing a mesh",
    "start": "1354559",
    "end": "1359919"
  },
  {
    "text": " is also being used to accelerate the transition to kubernetes kubernetes is",
    "start": "1359919",
    "end": "1365280"
  },
  {
    "text": "for many users a journey it's not an end state so they're moving to kubernetes they're slowly shifting and",
    "start": "1365280",
    "end": "1371919"
  },
  {
    "text": "transitioning their applications to kubernetes and what we found out was that",
    "start": "1371919",
    "end": "1377919"
  },
  {
    "text": "supporting virtual machine based workloads in combination with container-based workloads",
    "start": "1377919",
    "end": "1383840"
  },
  {
    "text": "allows for a more gradual transition to kubernetes therefore making it easier and simpler",
    "start": "1383840",
    "end": "1391520"
  },
  {
    "text": "for anybody to adopt kubernetes more and more and and then another thing that we've noticed is that service mesh",
    "start": "1391520",
    "end": "1398080"
  },
  {
    "text": "help some of our users reduce cost in a significant way when it comes to when it comes to",
    "start": "1398080",
    "end": "1404320"
  },
  {
    "text": "adopting adopting a service mesh a service mesh implements a client-side load balancing",
    "start": "1404320",
    "end": "1409760"
  },
  {
    "text": "pattern for example and by using a service mesh we can remove the enterprise load",
    "start": "1409760",
    "end": "1415600"
  },
  {
    "text": "balancers that we're using today in front of every service therefore saving significant a significant amount",
    "start": "1415600",
    "end": "1422159"
  },
  {
    "text": "of money for some of the users that that have been using human who are talking about a seven figure eight figure cost saving",
    "start": "1422159",
    "end": "1429919"
  },
  {
    "text": "into removing away all those enterprise contracts for load balancers and you know",
    "start": "1429919",
    "end": "1435440"
  },
  {
    "text": "enterprise load balancers and so on by using a service mesh and because we don't have that extra hop",
    "start": "1435440",
    "end": "1441360"
  },
  {
    "text": "in the network the service mesh even though it implements a cycle practice proxy pattern it implements it it",
    "start": "1441360",
    "end": "1448880"
  },
  {
    "text": "improves the overall performance of our systems because if there is no load balancer",
    "start": "1448880",
    "end": "1454559"
  },
  {
    "text": "there is no extra hop in the network therefore we can get rid of extra network latency so we can accelerate to",
    "start": "1454559",
    "end": "1460559"
  },
  {
    "text": "kubernetes we can reduce cost and we can improve performance",
    "start": "1460559",
    "end": "1466960"
  },
  {
    "start": "1466000",
    "end": "1613000"
  },
  {
    "text": "there is another mode that qma supports uh for the proxy data planes there is",
    "start": "1468159",
    "end": "1474240"
  },
  {
    "text": "the standard one then there is the ingress which i've explained and then there is another mode and this mode is called the gateway mode",
    "start": "1474240",
    "end": "1481520"
  },
  {
    "text": "you know service mesh for certain use cases it's not applicable let's say that we want to expose apis to",
    "start": "1481520",
    "end": "1487679"
  },
  {
    "text": "an ecosystem of partners let's say that we want to expose it to mobile apps",
    "start": "1487679",
    "end": "1493600"
  },
  {
    "text": "well in these kind of examples we cannot support a service mesh because we cannot force a third-party",
    "start": "1493600",
    "end": "1501760"
  },
  {
    "text": "developer to install a sidecar next to their applications even assuming that that's even possible",
    "start": "1501760",
    "end": "1507760"
  },
  {
    "text": "and and then we don't want their sidecar which runs outside of the organization to connect to our control plane which",
    "start": "1507760",
    "end": "1514400"
  },
  {
    "text": "runs inside of the organization the sidecar obviously requires connections to the control plane to provision the",
    "start": "1514400",
    "end": "1520159"
  },
  {
    "text": "certificates and the policies and so on so there is for example at the edge you know service mesh cannot be used as a",
    "start": "1520159",
    "end": "1526799"
  },
  {
    "text": "pattern in a practical way and so what we're seeing is uh more and",
    "start": "1526799",
    "end": "1531919"
  },
  {
    "text": "more users more and more customers trying to do this in combination with an api gateway now",
    "start": "1531919",
    "end": "1538720"
  },
  {
    "text": "to do that kuma supports a gateway mode in our data planes so you can use any gateway out there to work with",
    "start": "1538720",
    "end": "1546880"
  },
  {
    "text": "qma in order to apply any user governance or onboarding flows you may have on the gateway itself",
    "start": "1546880",
    "end": "1553120"
  },
  {
    "text": "and then enter the mesh you know as effectively making the gateway an",
    "start": "1553120",
    "end": "1558159"
  },
  {
    "text": "ingress to the mesh and of course kong you know that built kuma also is the",
    "start": "1558159",
    "end": "1563360"
  },
  {
    "text": "maker of kong gateway which is also open source and we built an open source integration with with kong but he could be using any",
    "start": "1563360",
    "end": "1569600"
  },
  {
    "text": "gateway really and um and if you want to uh egress the mesh uh we also have the the",
    "start": "1569600",
    "end": "1576880"
  },
  {
    "text": "same concept the gateway data plane that can be used as an egress point for all traffic that's going outside",
    "start": "1576880",
    "end": "1583279"
  },
  {
    "text": "outside of that mesh so effectively kuma understands the north-south east-west",
    "start": "1583279",
    "end": "1589120"
  },
  {
    "text": "requirements that a typical user has a typical organization has and we try to address that with the",
    "start": "1589120",
    "end": "1595279"
  },
  {
    "text": "gateway data planes when it comes to connecting different meshes together or at the edge and",
    "start": "1595279",
    "end": "1600720"
  },
  {
    "text": "with the ingress gateway when it comes to connecting services inside the same mesh",
    "start": "1600720",
    "end": "1607840"
  },
  {
    "text": "but across different zones i think that uh it's time for the demo",
    "start": "1607840",
    "end": "1615760"
  },
  {
    "start": "1613000",
    "end": "1766000"
  },
  {
    "text": "so we can see we can see how how humor runs and so right now uh i have deployed kuma on uh on a quite",
    "start": "1615760",
    "end": "1624159"
  },
  {
    "text": "quite complex environment so i'm running qma on aws and i'm running qma on gcp it's a multi-zone deployment that is",
    "start": "1624159",
    "end": "1630640"
  },
  {
    "text": "also multi-cloud but the thing is on aws i'm running on ec2",
    "start": "1630640",
    "end": "1635760"
  },
  {
    "text": "whereas on gcp i'm running on gke so this is a multi-cloud multi-region hybrid containers and",
    "start": "1635760",
    "end": "1643679"
  },
  {
    "text": "virtual machine service mesh and now we're going to be seeing how all of this works together",
    "start": "1643679",
    "end": "1649200"
  },
  {
    "text": "so that we can enable connections from ec from the virtual machines to different",
    "start": "1649200",
    "end": "1654640"
  },
  {
    "text": "regions and different zones and vice versa so first and foremost uh you can see that there is a kuma global",
    "start": "1654640",
    "end": "1661120"
  },
  {
    "text": "uh containing a cluster being deployed on gke and this is where",
    "start": "1661120",
    "end": "1666159"
  },
  {
    "text": "i have my control plane running in global mode the global control plane it is important",
    "start": "1666159",
    "end": "1671360"
  },
  {
    "text": "so that out of the box without having to build it ourselves we can synchronize the service mesh policies across multiple zones",
    "start": "1671360",
    "end": "1678080"
  },
  {
    "text": "and then on each one of these other clusters qmi east and kuma west for example as well as in ec2 i'm running my remote",
    "start": "1678080",
    "end": "1685919"
  },
  {
    "text": "control planes so if you remember if you remember the diagram the architecture there's going to be one global and then",
    "start": "1685919",
    "end": "1691760"
  },
  {
    "text": "one remote for each zone we want to support and so there is this zone here with a remote and then there is",
    "start": "1691760",
    "end": "1698159"
  },
  {
    "text": "going to be these different zones here east and west each one with their own remote as well",
    "start": "1698159",
    "end": "1703760"
  },
  {
    "text": "uh and this is running on containers ec2 and this is running on kubernetes so let's connect let's connect to the global to see",
    "start": "1703760",
    "end": "1710240"
  },
  {
    "text": "what's the state of our resources so right now i'm connecting to the global",
    "start": "1710240",
    "end": "1715279"
  },
  {
    "text": "gke control plane and if i if i look at so first and foremost if i",
    "start": "1715279",
    "end": "1721679"
  },
  {
    "text": "look at the namespaces we're seeing that there is one human system namespace and if i look inside of",
    "start": "1721679",
    "end": "1728080"
  },
  {
    "text": "this human system namespace we can see the control plane running",
    "start": "1728080",
    "end": "1733120"
  },
  {
    "text": "i can i can now port forward the control plane so that we can",
    "start": "1733120",
    "end": "1740080"
  },
  {
    "text": "access the gui and by default uh it is on port 5681",
    "start": "1740080",
    "end": "1748799"
  },
  {
    "text": "so if i do this and i open a new a new browser uh by the way the gui",
    "start": "1748799",
    "end": "1755360"
  },
  {
    "text": "it's running on top of of the api that that kuma provides and so for example if we go on slash meshes",
    "start": "1755360",
    "end": "1761279"
  },
  {
    "text": "we can see all the meshes that we have there is three different meshes right now but if i go on slash gui we can see the",
    "start": "1761279",
    "end": "1767039"
  },
  {
    "start": "1766000",
    "end": "1931000"
  },
  {
    "text": "gui the gui it's built on top of the same restful api",
    "start": "1767039",
    "end": "1772480"
  },
  {
    "text": "that you can integrate with anything else so there's nothing that the gui does that you cannot automate um there's going to be three different",
    "start": "1772480",
    "end": "1778720"
  },
  {
    "text": "zones uh there is a zone on aws there is a zone on gcpg east and then there is a zone on gcp gke west",
    "start": "1778720",
    "end": "1786080"
  },
  {
    "text": "and um i have deployed a very simple demo application for each one of these of these different",
    "start": "1786080",
    "end": "1791840"
  },
  {
    "text": "zones the demo app is quite simple it's a demo application backend that",
    "start": "1791840",
    "end": "1797039"
  },
  {
    "text": "provides a front-end we can consume with the browser that allows us to increment a counter on redis i'm going to be",
    "start": "1797039",
    "end": "1803520"
  },
  {
    "text": "showing you the demo app in a second it's quite simple so there's going to be two services redis and demo app on aws",
    "start": "1803520",
    "end": "1811440"
  },
  {
    "text": "as you can see here so these are the attributes that kuma automatically creates but we can also",
    "start": "1811440",
    "end": "1817039"
  },
  {
    "text": "create our own uh and then there is going to be our demo app and our redis being deployed on gcp gke east",
    "start": "1817039",
    "end": "1825360"
  },
  {
    "text": "and we're going to be having the same thing demo app and red is being deployed on gke",
    "start": "1825360",
    "end": "1830480"
  },
  {
    "text": "west so basically each zone has the same demo app and red is being",
    "start": "1830480",
    "end": "1835600"
  },
  {
    "text": "deployed all over uh and of course that is not a requirement we could have you know demo app been deployed on only",
    "start": "1835600",
    "end": "1842159"
  },
  {
    "text": "on one region and red is on another um you know we can really mix and match our workloads however we want",
    "start": "1842159",
    "end": "1849039"
  },
  {
    "text": "and we're going to be having three different ingresses data planes one for each zone aws gke east and gk",
    "start": "1849039",
    "end": "1856720"
  },
  {
    "text": "west to enable this cross zone communication as you can see here i have three meshes so right now if",
    "start": "1856720",
    "end": "1862399"
  },
  {
    "text": "i go on my default mesh i see all my data planes but let's say that we want to create a mesh",
    "start": "1862399",
    "end": "1867519"
  },
  {
    "text": "for another team uh these are empty it's an empty virtual service mesh on top of this",
    "start": "1867519",
    "end": "1872640"
  },
  {
    "text": "deployment of tumor so this is really one control plane to support the entire org um",
    "start": "1872640",
    "end": "1878159"
  },
  {
    "text": "so let's go ahead and consume the application so i can show you what it does um if i go on my",
    "start": "1878159",
    "end": "1885600"
  },
  {
    "text": "on um on ec2 so right now i'm consuming i'm consuming the demo app that's",
    "start": "1885600",
    "end": "1891200"
  },
  {
    "text": "running on virtual machines i can see that the demo app uh allows me to increment",
    "start": "1891200",
    "end": "1896960"
  },
  {
    "text": "a counter on on redis and redis right now it's also running on the same zone as",
    "start": "1896960",
    "end": "1902559"
  },
  {
    "text": "the demo app so this is this is telling us what is the counter value for the radius instance that we're hitting",
    "start": "1902559",
    "end": "1908080"
  },
  {
    "text": "and what is the zone that we're consuming now because we i don't have mutual tls enabled",
    "start": "1908080",
    "end": "1913440"
  },
  {
    "text": "right now cross zone connectivity it is not going to be working so let's go back into looking the stats for my mesh as",
    "start": "1913440",
    "end": "1920799"
  },
  {
    "text": "you can see here mutual class is disabled so let's go ahead and apply the mutual tls on top of",
    "start": "1920799",
    "end": "1926640"
  },
  {
    "text": "our default mesh so that we can enable this cross zone communication so let's do that by exploring all the",
    "start": "1926640",
    "end": "1933600"
  },
  {
    "text": "policies that kuma provides uh we're adding more and more policies uh you know every on every release",
    "start": "1933600",
    "end": "1939600"
  },
  {
    "text": "so we're we're very quick into introducing more and more capability but you can find here",
    "start": "1939600",
    "end": "1945360"
  },
  {
    "text": "what you would expect from a service mesh so let's apply mutual tls",
    "start": "1945360",
    "end": "1950399"
  },
  {
    "text": "there is different backend providers that you can support we can create our own certificate authority",
    "start": "1950399",
    "end": "1955600"
  },
  {
    "text": "automatically if you use built-in or you can provide your own certificate and key so for each example there is a",
    "start": "1955600",
    "end": "1962799"
  },
  {
    "text": "kubernetes example that we can apply with cube cattle and then there is a universal example for control planes that are running on",
    "start": "1962799",
    "end": "1969120"
  },
  {
    "text": "virtual machines that we can apply with qmacado which is our own cli so this is for teams that are not",
    "start": "1969120",
    "end": "1976240"
  },
  {
    "text": "familiar with kubernetes yet but the resource is quite similar to the kubernetes one so in order to",
    "start": "1976240",
    "end": "1981600"
  },
  {
    "text": "enable mutual tls we're going to be updating our default mesh object with a mutual telus property",
    "start": "1981600",
    "end": "1987200"
  },
  {
    "text": "that enables the following mutual test back-end and this back-end is a built-in backend",
    "start": "1987200",
    "end": "1993120"
  },
  {
    "text": "which means we are generating automatically the certificate authority uh root certificate and key",
    "start": "1993120",
    "end": "1999360"
  },
  {
    "text": "and automatically we're going to be rotating the proxy the data plane proxy certificates every day",
    "start": "1999360",
    "end": "2005679"
  },
  {
    "text": "so it doesn't matter how many zones we support how many meshes we have how many how many proxies we're running",
    "start": "2005679",
    "end": "2011600"
  },
  {
    "text": "and connecting to the mesh we may have a hundred thousand data plane proxies running cuba will",
    "start": "2011600",
    "end": "2017279"
  },
  {
    "text": "take care of rotating those certificates for us within all of these different proxies with with",
    "start": "2017279",
    "end": "2023279"
  },
  {
    "text": "one resource and this is the resource we're going to be applying so let's go ahead and update update my",
    "start": "2023279",
    "end": "2029200"
  },
  {
    "text": "mesh so that it provides uh it enables mutual talents now uh one of the things that you will",
    "start": "2029200",
    "end": "2035519"
  },
  {
    "text": "notice is that as soon as i enable mutual tls the traffic will stop working if we do not have a traffic",
    "start": "2035519",
    "end": "2042799"
  },
  {
    "text": "permission policy so let me show you this live so i'm going to be auto incrementing auto incrementing radius",
    "start": "2042799",
    "end": "2049440"
  },
  {
    "text": "and then pulling up the terminal and from the terminal i am going to be",
    "start": "2049440",
    "end": "2056000"
  },
  {
    "text": "i am going to be applying this resource that we have just uh the mutual telus resource for the",
    "start": "2056000",
    "end": "2062079"
  },
  {
    "text": "default mesh so as soon as i apply this and i press enter we'll see that the traffic will stop",
    "start": "2062079",
    "end": "2067919"
  },
  {
    "text": "working and that is by design now that every service has an identity we need to enable traffic permission",
    "start": "2067919",
    "end": "2074480"
  },
  {
    "text": "to determine what service can consume what other service and we can do that by specifying what",
    "start": "2074480",
    "end": "2079919"
  },
  {
    "text": "source can consume what destination and so we can use any tumor tag in this case i'm using the",
    "start": "2079919",
    "end": "2085520"
  },
  {
    "text": "human io service tag uh you know you can find all the tags from the gui for example",
    "start": "2085520",
    "end": "2091118"
  },
  {
    "text": "uh i'm using the uh the cumulative service tag to determine that every service must be able to consume every other",
    "start": "2091119",
    "end": "2097760"
  },
  {
    "text": "service and so i'm gonna go here and create the echo command i'm piping inside of kubernetes",
    "start": "2097760",
    "end": "2104079"
  },
  {
    "text": "instead of the global control plane to determine this behavior and as soon as i do that two things are going to happen the",
    "start": "2104079",
    "end": "2110160"
  },
  {
    "text": "traffic will start working out of the box and out of the box without no other traffic routing rule the traffic",
    "start": "2110160",
    "end": "2117359"
  },
  {
    "text": "will cross zones automatically so if i enter this we create a traffic permission",
    "start": "2117359",
    "end": "2122800"
  },
  {
    "text": "and now depending on depending on the load balancing routing policies we have by now for now",
    "start": "2122800",
    "end": "2128960"
  },
  {
    "text": "i'm just using the default one we see how our virtual machine demo application is consuming",
    "start": "2128960",
    "end": "2134720"
  },
  {
    "text": "different radis instances one for each zone that we support automatically out of the box across",
    "start": "2134720",
    "end": "2140720"
  },
  {
    "text": "multiple clouds across multiple regions effectively creating a hybrid mesh that",
    "start": "2140720",
    "end": "2145920"
  },
  {
    "text": "is also containers and virtual machines at the same time the counters are going to be different depending on what",
    "start": "2145920",
    "end": "2152079"
  },
  {
    "text": "zone what radis i'm going to be hitting when it comes to the increment and so",
    "start": "2152079",
    "end": "2157440"
  },
  {
    "text": "we're going to be seeing that depending on the zone this is going to different regions this happens out of the box",
    "start": "2157440",
    "end": "2163680"
  },
  {
    "text": "right now once we install the global we installed the remote all of this happens out of the box we created this network",
    "start": "2163680",
    "end": "2169280"
  },
  {
    "text": "overlay that really simplifies simplifies how we manage connectivity across complex networking topologies",
    "start": "2169280",
    "end": "2176000"
  },
  {
    "text": "now let's say that for example we want to redirect our traffic to one specific zone so we don't want",
    "start": "2176000",
    "end": "2182640"
  },
  {
    "text": "this round-robin across multiple zones but we want to only target",
    "start": "2182640",
    "end": "2187920"
  },
  {
    "text": "specific zones it's very simple to do with kuma uh with kuma we can go and apply the",
    "start": "2187920",
    "end": "2193599"
  },
  {
    "text": "traffic route policy which allows us to determine how we want",
    "start": "2193599",
    "end": "2198640"
  },
  {
    "text": "routing to work across our services and across our zones so let's go ahead and create a traffic routing policy",
    "start": "2198640",
    "end": "2206400"
  },
  {
    "text": "let me make this a little bit smaller so let's create a traffic routing policy that for these uh traffic path",
    "start": "2206960",
    "end": "2214880"
  },
  {
    "text": "it is going to be load balancing the request in this way that we're going to be specifying so let's go ahead and fetch the service",
    "start": "2214880",
    "end": "2221280"
  },
  {
    "text": "name for our demo app so basically i'm saying i want all sorts of traffic that's being originated by",
    "start": "2221280",
    "end": "2227920"
  },
  {
    "text": "our demo app that consumes redis the right is service",
    "start": "2227920",
    "end": "2233759"
  },
  {
    "text": "i want 100 of the traffic to consume redis to consume redis on just one zone so i",
    "start": "2234079",
    "end": "2241920"
  },
  {
    "text": "want i want to consume redis on let's say on gke east so i can do this",
    "start": "2241920",
    "end": "2249359"
  },
  {
    "text": "and then i can echo these instead of cube cattle in order to apply the resource on my",
    "start": "2249359",
    "end": "2255839"
  },
  {
    "text": "global control plane if you notice here the global control plane is automatically",
    "start": "2255839",
    "end": "2261200"
  },
  {
    "text": "propagating these policies across all the remotes all of that happens out of the box we don't have to build it ourselves",
    "start": "2261200",
    "end": "2266640"
  },
  {
    "text": "so if i enter this traffic route after this traffic route has been propagated automatically we should be seeing our",
    "start": "2266640",
    "end": "2274320"
  },
  {
    "text": "demo app only consuming this zone the gke east zone so let's go ahead and create the",
    "start": "2274320",
    "end": "2279599"
  },
  {
    "text": "traffic route and as you can see eventually it will be propagated and now",
    "start": "2279599",
    "end": "2287359"
  },
  {
    "text": "we're hitting only one specific zone let's say that we want to go 50 percent on aws 50 on gk we can still",
    "start": "2287359",
    "end": "2295119"
  },
  {
    "text": "do that by updating our traffic route by having a weight of 50 to gk east and then i'm gonna just copy",
    "start": "2295119",
    "end": "2302640"
  },
  {
    "text": "paste this and a weight of 50 to our aws zone and if i update my",
    "start": "2302640",
    "end": "2312880"
  },
  {
    "text": "if i update my traffic route policy and i enter this we should be seeing aws coming up half",
    "start": "2312880",
    "end": "2319040"
  },
  {
    "text": "of the times this is how simple it is to route across different zones",
    "start": "2319040",
    "end": "2324480"
  },
  {
    "text": "different environments or perhaps even do data center traffic shifting in case we do have",
    "start": "2324480",
    "end": "2329839"
  },
  {
    "text": "problems with one data center and we want to keep the uptime of our application running right so so",
    "start": "2329839",
    "end": "2336079"
  },
  {
    "text": "far uh we've seen the multi-zone deployment with multi-cloud there is much more that we can see when it comes to",
    "start": "2336079",
    "end": "2341599"
  },
  {
    "text": "kuma as a matter of fact i also did a presentation at service mesh con",
    "start": "2341599",
    "end": "2347359"
  },
  {
    "text": "at kubecon this year so i suggest you look at that recording as well to see",
    "start": "2347440",
    "end": "2352720"
  },
  {
    "text": "how we can enable observability metrics as well on top of all of this and then of course you can go ahead and apply any policy",
    "start": "2352720",
    "end": "2359359"
  },
  {
    "text": "that qma offers to enable this behavior this is the service mesh that we have created",
    "start": "2359359",
    "end": "2365760"
  },
  {
    "text": "to support these complex networking environments and now let's say that there is another team wanting to have its own mesh their own",
    "start": "2365760",
    "end": "2371599"
  },
  {
    "text": "mesh because they are working on another project or another application let's say that they're working on their",
    "start": "2371599",
    "end": "2377440"
  },
  {
    "text": "mobile app we can easily create a new mesh policy",
    "start": "2377440",
    "end": "2383839"
  },
  {
    "text": "inside of our cluster",
    "start": "2384079",
    "end": "2387280"
  },
  {
    "text": "oops if i refresh we're now having our mobile app here and this is a brand new mesh that can",
    "start": "2394839",
    "end": "2401760"
  },
  {
    "text": "support any workloads any data plane process from pretty much any of the zones that we support so one deployment of our mesh",
    "start": "2401760",
    "end": "2408880"
  },
  {
    "text": "to support as many service meshes as we want and you know like i said there's much more to it that we didn't show the gateway data planes",
    "start": "2408880",
    "end": "2415280"
  },
  {
    "text": "but i'll be happy i'll be happy to you know go accept requests for future demos so i",
    "start": "2415280",
    "end": "2420400"
  },
  {
    "text": "can show these kind of things um all right so to recap we are running huma",
    "start": "2420400",
    "end": "2425680"
  },
  {
    "text": "on top of multiple clouds multiple regions kubernetes and virtual machines on aws and gcp with the term we we have",
    "start": "2425680",
    "end": "2433040"
  },
  {
    "text": "provisioned some applications on both environments with that we we have seen the zero trust",
    "start": "2433040",
    "end": "2438240"
  },
  {
    "text": "security model with neutral has automatically been provisioned we've seen the traffic permissions we can also explore",
    "start": "2438240",
    "end": "2444079"
  },
  {
    "text": "uh we can also explore the gui to to determine to determine our our",
    "start": "2444079",
    "end": "2450079"
  },
  {
    "text": "policies and our routing rules by the way or the cli we've seen the traffic permissions acl we've seen traffic",
    "start": "2450079",
    "end": "2456720"
  },
  {
    "text": "routing for data for zone shifting across vms and containers and we took a look at the gui that kuma",
    "start": "2456720",
    "end": "2465200"
  },
  {
    "text": "provides when it comes to understanding what is going on when it comes to our resources so thank you so much",
    "start": "2465200",
    "end": "2470319"
  },
  {
    "text": "and if you have any questions i believe that now we're starting our q a session",
    "start": "2470319",
    "end": "2475520"
  },
  {
    "text": "well thank you very much marco for a wonderful presentation and demo um we have plenty of time for questions",
    "start": "2475520",
    "end": "2482319"
  },
  {
    "text": "15 minutes to be exact so please feel free to drop any questions you have into the q a box",
    "start": "2482319",
    "end": "2488079"
  },
  {
    "text": "um we have one already can we play i forgot sorry sorry sorry sorry i forgot uh i'm",
    "start": "2488079",
    "end": "2493839"
  },
  {
    "text": "so sorry about this i forgot about one thing uh starting from tomorrow uh we have our kong summit it's a",
    "start": "2493839",
    "end": "2500480"
  },
  {
    "text": "digital and free event where we're going to be exploring more and more how you know technologies like huma that",
    "start": "2500480",
    "end": "2508000"
  },
  {
    "text": "are vendor neutral part of cncf are going to be working with for example the con gateway",
    "start": "2508000",
    "end": "2513359"
  },
  {
    "text": "and we're going to be seeing the full stack on how that uh you know works together when it comes to",
    "start": "2513359",
    "end": "2518800"
  },
  {
    "text": "even more complex networking networking topologies okay thank you very much um so we have a",
    "start": "2518800",
    "end": "2526480"
  },
  {
    "text": "couple questions here in the q a box um can we please see the traffic logs tab",
    "start": "2526480",
    "end": "2531520"
  },
  {
    "text": "or could you talk briefly about the capabilities yeah so for traffic logs um so let me go",
    "start": "2531520",
    "end": "2538960"
  },
  {
    "start": "2536000",
    "end": "2691000"
  },
  {
    "text": "back to the browser uh we can we can see that traffic log is a policy we can apply on",
    "start": "2538960",
    "end": "2546240"
  },
  {
    "text": "top of uh on top of our meshes and by by using traffic logs we can",
    "start": "2546240",
    "end": "2553040"
  },
  {
    "text": "determine what source of traffic what traffic path we want to log",
    "start": "2553040",
    "end": "2559200"
  },
  {
    "text": "uh inside from from the service mesh to a third-party system like for example splunk like clock stash",
    "start": "2559200",
    "end": "2564240"
  },
  {
    "text": "or like really anything that accepts a tcp connection so we can log to files we can log to tcp",
    "start": "2564240",
    "end": "2570400"
  },
  {
    "text": "but the nice thing about this is that as you can see here we can also specify different backends for",
    "start": "2570400",
    "end": "2576880"
  },
  {
    "text": "different traffic sources and path this has been built because some of our users",
    "start": "2576880",
    "end": "2582240"
  },
  {
    "text": "they are going to be logging traffic that's being executed from",
    "start": "2582240",
    "end": "2587599"
  },
  {
    "text": "different data centers or different zones to different systems not necessarily always to a centralized system",
    "start": "2587599",
    "end": "2594720"
  },
  {
    "text": "and so you can determine if you want all traffic to be logged inside of of of one splunk instance or log stash",
    "start": "2594720",
    "end": "2601359"
  },
  {
    "text": "instance or if you want to segment how logs are are being applied across different zones and across different traffic pads",
    "start": "2601359",
    "end": "2607680"
  },
  {
    "text": "right and you can also exclude traffic pads from logs that perhaps are too sensitive to be logged so there is there",
    "start": "2607680",
    "end": "2613119"
  },
  {
    "text": "is a lot that goes into this but the logs they they provide uh you know we also provide examples on",
    "start": "2613119",
    "end": "2620240"
  },
  {
    "text": "on on how to visualize these logs using logstash uh but basically the logs are are going",
    "start": "2620240",
    "end": "2625520"
  },
  {
    "text": "to be uh creating a new line for each request that is being either sent or received",
    "start": "2625520",
    "end": "2631200"
  },
  {
    "text": "from inside the mesh and usually logs are going to be applied in combination to traffic metrics and",
    "start": "2631200",
    "end": "2636240"
  },
  {
    "text": "traffic traces to have a better context of of the observability within the service mesh so when it comes",
    "start": "2636240",
    "end": "2642160"
  },
  {
    "text": "to observability uh there is also default grafana dashboards that you can use and starting",
    "start": "2642160",
    "end": "2648319"
  },
  {
    "text": "from the next version of qma we added 50 more charts that allows us to determine what is the state of",
    "start": "2648319",
    "end": "2654640"
  },
  {
    "text": "any mesh may be running on top of kuma across both the data plane to data plane communication path as well",
    "start": "2654640",
    "end": "2661280"
  },
  {
    "text": "as the control plane to data plane uh communication path when it comes to the control plane itself",
    "start": "2661280",
    "end": "2666319"
  },
  {
    "text": "so there is a lot of work that has been done when it comes to observability and logs metrics and traces are basically usually",
    "start": "2666319",
    "end": "2673599"
  },
  {
    "text": "typically being used together to provide the full picture of our traffic and this is l4",
    "start": "2673599",
    "end": "2678960"
  },
  {
    "text": "so it is working for any system that's part of the mesh including databases including log",
    "start": "2678960",
    "end": "2684640"
  },
  {
    "text": "collectors anything that anything that listens or makes requests over tcp okay",
    "start": "2684640",
    "end": "2691520"
  },
  {
    "start": "2691000",
    "end": "2991000"
  },
  {
    "text": "kuma seems awesome i'm wondering about the drawbacks is there any overhead due to the global",
    "start": "2691520",
    "end": "2697359"
  },
  {
    "text": "control plane we are making sure that the overheads",
    "start": "2697359",
    "end": "2703920"
  },
  {
    "text": "are quite small because we you know even with kong we we understood that being able to support",
    "start": "2703920",
    "end": "2710160"
  },
  {
    "text": "smaller instances for our cloud vendors it is going to be a big a big you know component in the overall",
    "start": "2710160",
    "end": "2716800"
  },
  {
    "text": "roi of using a service mesh i know that your boss is looking at the overall expense when it comes to",
    "start": "2716800",
    "end": "2723200"
  },
  {
    "text": "deploying a mesh and so we built this in such a way that it could run on smaller machines and could be",
    "start": "2723200",
    "end": "2728560"
  },
  {
    "text": "very optimized for the global the only thing that we need is a cluster of kubernetes or virtual",
    "start": "2728560",
    "end": "2734240"
  },
  {
    "text": "machine that is going to be accepting the resources into the global control plane you can run the global control plane in a highly",
    "start": "2734240",
    "end": "2740000"
  },
  {
    "text": "available way and the remote control planes and the global control planes can be scaled independently",
    "start": "2740000",
    "end": "2745359"
  },
  {
    "text": "which means that if you have some zones that have more data planes than others you can scale them independently you do",
    "start": "2745359",
    "end": "2752240"
  },
  {
    "text": "not have to scale them all at once the same way so if anything it gives us a little bit more flexibility",
    "start": "2752240",
    "end": "2757760"
  },
  {
    "text": "when it comes to running a distributed service mesh across multiple clouds and across multiple zones so the",
    "start": "2757760",
    "end": "2763280"
  },
  {
    "text": "drawbacks if i have to find one it is that we have to find a place to deploy the global so the global",
    "start": "2763280",
    "end": "2768800"
  },
  {
    "text": "would be yet another component that needs to run but it's inevitable if",
    "start": "2768800",
    "end": "2774880"
  },
  {
    "text": "we want that automatic synchronization across different remote zones other service meshes for example they do not",
    "start": "2774880",
    "end": "2781119"
  },
  {
    "text": "provide that automatic synchronization which means that you're on the hook for building it with kuma you don't have",
    "start": "2781119",
    "end": "2786800"
  },
  {
    "text": "to build it it comes out of the box and it comes under the form of a global control plane",
    "start": "2786800",
    "end": "2793440"
  },
  {
    "text": "if we need to control certain data to be in a zone that is different from where global can from where the",
    "start": "2795280",
    "end": "2800720"
  },
  {
    "text": "global control plane is how will that look like yeah so in my demo the global control",
    "start": "2800720",
    "end": "2807599"
  },
  {
    "text": "plane cluster was not processing any data whatsoever so",
    "start": "2807599",
    "end": "2812960"
  },
  {
    "text": "that we were using the global to apply our mesh policies like mutual tls",
    "start": "2812960",
    "end": "2819359"
  },
  {
    "text": "like routing like traffic permission but the global per se was never on the execution path of our",
    "start": "2819359",
    "end": "2826560"
  },
  {
    "text": "requests the requests were going directly from one zone to another without going to the global um and so",
    "start": "2826560",
    "end": "2833839"
  },
  {
    "text": "we we we are keeping that outside of the the global control plane it is it is",
    "start": "2833839",
    "end": "2840640"
  },
  {
    "text": "only being used to automatically propagate these service mesh policies in in a way to propagate the resources",
    "start": "2840640",
    "end": "2847280"
  },
  {
    "text": "across across the remotes um but i'm not really sure if i answered the question could you please repeat it",
    "start": "2847280",
    "end": "2853760"
  },
  {
    "text": "uh yes bring it back up here if we need to control certain data to be",
    "start": "2853760",
    "end": "2859599"
  },
  {
    "text": "in a zone that is different from where the global control plane is what will it look like yeah so i think i",
    "start": "2859599",
    "end": "2866640"
  },
  {
    "text": "did actually answer the question so yeah so the the the data never ever reaches the global",
    "start": "2866640",
    "end": "2872319"
  },
  {
    "text": "control plane the global control plane only communicates with the remote ones the remote control planes are the ones",
    "start": "2872319",
    "end": "2878160"
  },
  {
    "text": "that are in charge of the run zone and the proxy in the requests are",
    "start": "2878160",
    "end": "2883280"
  },
  {
    "text": "actually never even hitting the remote control planes in the first place they're going directly from one data plane to another the remote control",
    "start": "2883280",
    "end": "2889119"
  },
  {
    "text": "planes if the state of our data plane process changes is on the hook for then updating the data plane proxy",
    "start": "2889119",
    "end": "2894880"
  },
  {
    "text": "configuration which is built on top of envoy okay now what's the story of the global",
    "start": "2894880",
    "end": "2901359"
  },
  {
    "text": "control plan goes down is it a spof a single point of failure i think that's what he's referencing",
    "start": "2901359",
    "end": "2907920"
  },
  {
    "text": "if the global control plane goes down the remote control planes are going to be having the latest",
    "start": "2907920",
    "end": "2913040"
  },
  {
    "text": "snapshot of the service mesh resources uh that that we have applied so if the",
    "start": "2913040",
    "end": "2918720"
  },
  {
    "text": "global control plane goes down nothing will happen on our remote zones and that is one of the reasons why",
    "start": "2918720",
    "end": "2924319"
  },
  {
    "text": "having global and remote it actually comes in quite handy for a couple of reasons yes we get that automatic",
    "start": "2924319",
    "end": "2930559"
  },
  {
    "text": "synchronization but then also we get a little bit more high availability because each remote",
    "start": "2930559",
    "end": "2935760"
  },
  {
    "text": "control plane is fully responsible of the run zone and if the global goes down it's not",
    "start": "2935760",
    "end": "2940800"
  },
  {
    "text": "affecting and if a remote goes down as well it's not affecting other zones so effectively it's as if each zone is is living",
    "start": "2940800",
    "end": "2949280"
  },
  {
    "text": "um independently from each other but when the global control plane goes back online then if you're applying new service mesh",
    "start": "2949280",
    "end": "2956160"
  },
  {
    "text": "resources we're going to be we're going to be propagating those as soon as it comes back online so the only",
    "start": "2956160",
    "end": "2961200"
  },
  {
    "text": "problem you would have is not being able to change the state of your mesh resources because we need the global for that",
    "start": "2961200",
    "end": "2967040"
  },
  {
    "text": "but again the global can also be configured in a highly available way and so we can determine",
    "start": "2967040",
    "end": "2972240"
  },
  {
    "text": "we can deploy in such a way that we can tolerate those kind of failures by distributing the global control plane as",
    "start": "2972240",
    "end": "2977760"
  },
  {
    "text": "well excellent we have about seven minutes left for questions so if",
    "start": "2977760",
    "end": "2984720"
  },
  {
    "text": "anyone has any last-minute questions that they would like to ask please feel free to drop them into the q a box we have plenty of time",
    "start": "2984720",
    "end": "2992720"
  },
  {
    "start": "2991000",
    "end": "3076000"
  },
  {
    "text": "if you want to run the demo i just ran you can go on comma.your slash install uh it provides installation for pretty",
    "start": "2992720",
    "end": "2998880"
  },
  {
    "text": "much uh different different environments like i said it's not just kubernetes but it's also",
    "start": "2998880",
    "end": "3004079"
  },
  {
    "text": "virtual machines of course it's helm open shift and so on and if you go on documentation",
    "start": "3004079",
    "end": "3009920"
  },
  {
    "text": "and you go on multi-zone mode under deployments we we show the instructions that you can",
    "start": "3009920",
    "end": "3016720"
  },
  {
    "text": "run to install the global control plane to install the remote control plane and then to activate",
    "start": "3016720",
    "end": "3022160"
  },
  {
    "text": "the remote control planes so everything that you've seen can be easily replicated by by following",
    "start": "3022160",
    "end": "3028160"
  },
  {
    "text": "the docs okay",
    "start": "3028160",
    "end": "3033920"
  },
  {
    "text": "do we have any more questions at all from anyone",
    "start": "3034720",
    "end": "3041838"
  },
  {
    "text": "today we've seen a very complex deployment of service mesh of course this can also be used in a standalone mode which have not been",
    "start": "3045920",
    "end": "3053119"
  },
  {
    "text": "showing um which is the more traditional service mesh deployment in one zone one",
    "start": "3053119",
    "end": "3060079"
  },
  {
    "text": "cluster there's only one control plane there's no global no remote there's only one control plane and then you have data planes connecting to it",
    "start": "3060079",
    "end": "3067359"
  },
  {
    "text": "so that's also an option how does kuma behave in a single",
    "start": "3067359",
    "end": "3073280"
  },
  {
    "text": "kubernetes control plane the multi-zone data plane yeah so",
    "start": "3073280",
    "end": "3079599"
  },
  {
    "text": "let me see i think i actually do have i should have a mini cube running so let's see",
    "start": "3079599",
    "end": "3086160"
  },
  {
    "text": "uh i can show you right now so um this is",
    "start": "3086160",
    "end": "3093040"
  },
  {
    "text": "a mini cube running on my computer uh actually it's not uh let me let me",
    "start": "3093040",
    "end": "3099040"
  },
  {
    "text": "show you real quick but basically you can install it where is my cube",
    "start": "3099040",
    "end": "3104720"
  },
  {
    "text": "i don't have it actually i do not have it so this is gonna take probably a little bit too long but let's see",
    "start": "3104720",
    "end": "3110000"
  },
  {
    "text": "i i need to restart my my mini cube but basically you can you can type this one line of one you",
    "start": "3110000",
    "end": "3115760"
  },
  {
    "text": "can use our cli you can use the helm charts but basically if you want to install qma in one control plane",
    "start": "3115760",
    "end": "3121200"
  },
  {
    "text": "it's schema calorie install control plane you pipe these inside of kubernetes cube cattle and that's it uh",
    "start": "3121200",
    "end": "3126880"
  },
  {
    "text": "there is there is going to be a standalone deployment of qma within that one",
    "start": "3126880",
    "end": "3132079"
  },
  {
    "text": "specific zone now the thing the difference between standalone mode and multi-zone mode is that in",
    "start": "3132079",
    "end": "3138960"
  },
  {
    "text": "multi-zone you can add more remote zones you can add more you know you can distribute the mesh whereas in standalone you only have one",
    "start": "3138960",
    "end": "3145680"
  },
  {
    "text": "control plane inside inside of the cluster you can scale it you can you know run it within the context of that",
    "start": "3145680",
    "end": "3152000"
  },
  {
    "text": "cluster but unless you have a flat networking topology you're not going to be able to support",
    "start": "3152000",
    "end": "3158319"
  },
  {
    "text": "other other zones unless like i said you have a flat network topology so you have",
    "start": "3158319",
    "end": "3164240"
  },
  {
    "text": "class you have data planes running outside of that specific cluster that can directly communicate with the",
    "start": "3164240",
    "end": "3170400"
  },
  {
    "text": "control plane so uh right now i do i do have i do have an empty",
    "start": "3170400",
    "end": "3176559"
  },
  {
    "text": "uh an empty mini cube if i want to install kuma in standalone mode i just pipe this into",
    "start": "3176559",
    "end": "3184720"
  },
  {
    "text": "um oh i'm sorry i think i'm running i'm running the wrong version of kuma uh",
    "start": "3184720",
    "end": "3190720"
  },
  {
    "text": "anyways you can you can do this one sec let me show you",
    "start": "3190720",
    "end": "3197680"
  },
  {
    "text": "real quick oh no it's not working",
    "start": "3197680",
    "end": "3209440"
  },
  {
    "text": "it's not working because my environment is messed up that's quite all right yeah",
    "start": "3209440",
    "end": "3217839"
  },
  {
    "text": "so let me",
    "start": "3217839",
    "end": "3223839"
  },
  {
    "text": "let's see kuma let me uh enable let me",
    "start": "3237280",
    "end": "3243599"
  },
  {
    "text": "enable this okay perfect okay so if we go if you go inside of the qmi",
    "start": "3243599",
    "end": "3248880"
  },
  {
    "text": "i've just downloaded uh in iran in iran queue makado",
    "start": "3248880",
    "end": "3254319"
  },
  {
    "text": "install control plane and i pipe this inside of kubernetes let's see this time",
    "start": "3254319",
    "end": "3260800"
  },
  {
    "text": "it should work there we go so now we have kuma running uh in stand-alone mode",
    "start": "3260800",
    "end": "3266000"
  },
  {
    "text": "inside of my mini cube and this will create a human system namespace and inside of the schema system namespace we're going to be having the",
    "start": "3266000",
    "end": "3271520"
  },
  {
    "text": "control plane which is now getting downloaded and going up and running and so if i do",
    "start": "3271520",
    "end": "3277200"
  },
  {
    "text": "if i do deploy if i do port forward this local control plane",
    "start": "3277200",
    "end": "3283680"
  },
  {
    "text": "this local control plane from my mini cube we will see",
    "start": "3283680",
    "end": "3293839"
  },
  {
    "text": "control plane uh we will see my standalone control",
    "start": "3294960",
    "end": "3301599"
  },
  {
    "text": "plane up and running i know that it's standalone because if i go to the gui",
    "start": "3301599",
    "end": "3307119"
  },
  {
    "text": "it says standalone up here in the top right corner so this is a standalone",
    "start": "3307119",
    "end": "3312160"
  },
  {
    "text": "it's a standalone kubernetes that only has one zone we cannot add any more zones and so we can deploy",
    "start": "3312160",
    "end": "3317760"
  },
  {
    "text": "we can deploy uh the demo application and automatically will be injecting the car",
    "start": "3317760",
    "end": "3323280"
  },
  {
    "text": "um and and this would be and this would be the the you know the standalone mode",
    "start": "3323280",
    "end": "3331280"
  },
  {
    "text": "of of running or running the service mesh if there is any other question i can i",
    "start": "3331280",
    "end": "3336799"
  },
  {
    "text": "can answer those questions in your demo can you explain why the traffic stayed in one zone before",
    "start": "3336799",
    "end": "3343200"
  },
  {
    "text": "a mutual tls was enabled",
    "start": "3343200",
    "end": "3349838"
  },
  {
    "text": "before mutual tls was enabled traffic from one zone could not leave the zone",
    "start": "3350240",
    "end": "3356799"
  },
  {
    "text": "so i was consuming my demo application from aws and it was increasing the counter of",
    "start": "3356799",
    "end": "3362559"
  },
  {
    "text": "redis that also was running on aws as soon as they enabled mutual tls in traffic permissions",
    "start": "3362559",
    "end": "3368880"
  },
  {
    "text": "we enabled security across the across multiple zones and kuma at that point enabled",
    "start": "3368880",
    "end": "3376400"
  },
  {
    "text": "automatically cross zone communication of course you can enable or disable this behavior by then",
    "start": "3376400",
    "end": "3382079"
  },
  {
    "text": "applying a traffic routing rule that determines you know if you really want that traffic to be",
    "start": "3382079",
    "end": "3387359"
  },
  {
    "text": "uh you know to be happening across multiple zones and if you want that traffic to stay within a zone and by the way here we",
    "start": "3387359",
    "end": "3393760"
  },
  {
    "text": "automatically injected the control plane in standalone mode and we can see that the demo application is up and running",
    "start": "3393760",
    "end": "3398960"
  },
  {
    "text": "uh and the data planes are online so we automatically inject those cycle proxies for you and now this",
    "start": "3398960",
    "end": "3404319"
  },
  {
    "text": "is ready to go so from here we can now apply mutual tls we can now apply traffic permissions observability and so on",
    "start": "3404319",
    "end": "3411599"
  },
  {
    "text": "okay is it possible to change from a standalone to a multi zone easily",
    "start": "3411599",
    "end": "3420319"
  },
  {
    "text": "that this is a very good question and that it will be but not now now",
    "start": "3420799",
    "end": "3427440"
  },
  {
    "text": "if if we in order to change to change from standalone to multi-zone",
    "start": "3427440",
    "end": "3433680"
  },
  {
    "text": "we effectively have to start a new deployment of the mesh and then make those workloads",
    "start": "3433680",
    "end": "3440319"
  },
  {
    "text": "part of of the new deployment of the service mesh so we cannot so far we cannot transition",
    "start": "3440319",
    "end": "3447920"
  },
  {
    "text": "a standalone control plane to a multi-zone control plane just like that",
    "start": "3447920",
    "end": "3453040"
  },
  {
    "text": "but good news it is something that has been requested before and it's obviously something that we",
    "start": "3453040",
    "end": "3458079"
  },
  {
    "text": "want to we want to change in order to enable a more easier consumption of cuma",
    "start": "3458079",
    "end": "3464240"
  },
  {
    "text": "for those environments that over time may be growing across multiple zones so there is a",
    "start": "3464240",
    "end": "3470160"
  },
  {
    "text": "there is a so that's one answer and the second answer is if you know that you're running kuma in something that is going to",
    "start": "3470160",
    "end": "3476880"
  },
  {
    "text": "become multi-zone then i suggest deploying it as a multi-zone since day one",
    "start": "3476880",
    "end": "3481920"
  },
  {
    "text": "if we think that that could be an option but we're working on on this to make it simple to to upgrade a",
    "start": "3481920",
    "end": "3487359"
  },
  {
    "text": "standalone control plane into a global control plane okay well that just about does it for",
    "start": "3487359",
    "end": "3493920"
  },
  {
    "text": "all the time that we have today i'd like to thank marco again for a wonderful presentation and demo and thank you to everyone for",
    "start": "3493920",
    "end": "3501200"
  },
  {
    "text": "taking time out of their day for joining us today as i said before today's webinar and present",
    "start": "3501200",
    "end": "3508319"
  },
  {
    "text": "and slides will be on the cncf website at cncf dot io slash webinars",
    "start": "3508319",
    "end": "3514400"
  },
  {
    "text": "thank you all again for attending today take care stay safe and we will see you all next time",
    "start": "3514400",
    "end": "3520480"
  },
  {
    "text": "thank you bye",
    "start": "3520480",
    "end": "3525680"
  }
]