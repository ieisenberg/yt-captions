[
  {
    "start": "0",
    "end": "23000"
  },
  {
    "text": "[Music]",
    "start": "0",
    "end": "6629"
  },
  {
    "text": "hi everyone i hope you're having a great",
    "start": "10240",
    "end": "12000"
  },
  {
    "text": "cubicon",
    "start": "12000",
    "end": "13280"
  },
  {
    "text": "my name is john janeshig from mirandis",
    "start": "13280",
    "end": "15440"
  },
  {
    "text": "in this video i'll be demonstrating",
    "start": "15440",
    "end": "16800"
  },
  {
    "text": "mirantis container cloud a tool for",
    "start": "16800",
    "end": "18880"
  },
  {
    "text": "delivering consistent container",
    "start": "18880",
    "end": "20240"
  },
  {
    "text": "orchestration clusters across one",
    "start": "20240",
    "end": "22000"
  },
  {
    "text": "more or many different infrastructures",
    "start": "22000",
    "end": "24160"
  },
  {
    "text": "as many are aware miranda's acquired",
    "start": "24160",
    "end": "26000"
  },
  {
    "text": "docker enterprise from docker about a",
    "start": "26000",
    "end": "27680"
  },
  {
    "text": "year ago",
    "start": "27680",
    "end": "28480"
  },
  {
    "text": "we've had two releases since that time",
    "start": "28480",
    "end": "30320"
  },
  {
    "text": "the first being an upgrade to the core",
    "start": "30320",
    "end": "31920"
  },
  {
    "text": "cluster model now called mirantis",
    "start": "31920",
    "end": "33680"
  },
  {
    "text": "cluster engine",
    "start": "33680",
    "end": "34960"
  },
  {
    "text": "which provides kubernetes and swarm",
    "start": "34960",
    "end": "36880"
  },
  {
    "text": "orchestration over multiple node types",
    "start": "36880",
    "end": "38719"
  },
  {
    "text": "and which now includes istio ingress as",
    "start": "38719",
    "end": "40559"
  },
  {
    "text": "well as calco networking as defaults",
    "start": "40559",
    "end": "43360"
  },
  {
    "start": "43000",
    "end": "121000"
  },
  {
    "text": "the second release about six weeks ago",
    "start": "43360",
    "end": "45280"
  },
  {
    "text": "was the thing i'll be focusing on mostly",
    "start": "45280",
    "end": "46879"
  },
  {
    "text": "in this demo",
    "start": "46879",
    "end": "47840"
  },
  {
    "text": "it's called mirantis container cloud its",
    "start": "47840",
    "end": "50320"
  },
  {
    "text": "goal is to help",
    "start": "50320",
    "end": "51199"
  },
  {
    "text": "solve cloud journey problems for",
    "start": "51199",
    "end": "52960"
  },
  {
    "text": "developers ic operators and",
    "start": "52960",
    "end": "54559"
  },
  {
    "text": "organizations",
    "start": "54559",
    "end": "56320"
  },
  {
    "text": "today a lot of organizations are coming",
    "start": "56320",
    "end": "57920"
  },
  {
    "text": "to terms with kubernetes or maybe",
    "start": "57920",
    "end": "59520"
  },
  {
    "text": "somewhat simpler kinds of container",
    "start": "59520",
    "end": "61120"
  },
  {
    "text": "orchestration like swarm",
    "start": "61120",
    "end": "62559"
  },
  {
    "text": "at the same time as they're exploring",
    "start": "62559",
    "end": "64080"
  },
  {
    "text": "and sort of trying to refine hybrid",
    "start": "64080",
    "end": "65760"
  },
  {
    "text": "cloud or multi-cloud",
    "start": "65760",
    "end": "67680"
  },
  {
    "text": "so they have doi clusters in-house maybe",
    "start": "67680",
    "end": "70080"
  },
  {
    "text": "several types they have more types maybe",
    "start": "70080",
    "end": "72080"
  },
  {
    "text": "in public cloud flavors",
    "start": "72080",
    "end": "73680"
  },
  {
    "text": "and this model is fun for a while so",
    "start": "73680",
    "end": "75280"
  },
  {
    "text": "long as stakes are low and nobody asks",
    "start": "75280",
    "end": "77280"
  },
  {
    "text": "hard or scary questions like",
    "start": "77280",
    "end": "79119"
  },
  {
    "text": "okay how do we keep all these clusters",
    "start": "79119",
    "end": "80720"
  },
  {
    "text": "updated how do we easily provide",
    "start": "80720",
    "end": "82720"
  },
  {
    "text": "clusters via self-service over in",
    "start": "82720",
    "end": "84560"
  },
  {
    "text": "environments or",
    "start": "84560",
    "end": "85759"
  },
  {
    "text": "how do we monitor all these things in",
    "start": "85759",
    "end": "87280"
  },
  {
    "text": "one place or how do we build out any",
    "start": "87280",
    "end": "89439"
  },
  {
    "text": "kind of deep ci that works more or less",
    "start": "89439",
    "end": "91200"
  },
  {
    "text": "the same way",
    "start": "91200",
    "end": "91840"
  },
  {
    "text": "everywhere and helps us enforce",
    "start": "91840",
    "end": "93280"
  },
  {
    "text": "enterprise policies like preventing",
    "start": "93280",
    "end": "94960"
  },
  {
    "text": "unscanned unsigned unpromoted images",
    "start": "94960",
    "end": "96799"
  },
  {
    "text": "from getting executed in production",
    "start": "96799",
    "end": "99119"
  },
  {
    "text": "and clearly this becomes unskill",
    "start": "99119",
    "end": "100880"
  },
  {
    "text": "friendly quickly so then folks sometimes",
    "start": "100880",
    "end": "103119"
  },
  {
    "text": "fear in the other direction and go",
    "start": "103119",
    "end": "104640"
  },
  {
    "text": "all in on one provider but depending on",
    "start": "104640",
    "end": "107119"
  },
  {
    "text": "how you do that",
    "start": "107119",
    "end": "108079"
  },
  {
    "text": "this may lock you into very deep and",
    "start": "108079",
    "end": "109840"
  },
  {
    "text": "expensive stack",
    "start": "109840",
    "end": "111360"
  },
  {
    "text": "it may limit the way you design",
    "start": "111360",
    "end": "112880"
  },
  {
    "text": "workflows and workloads",
    "start": "112880",
    "end": "114640"
  },
  {
    "text": "it may limit how you build out into",
    "start": "114640",
    "end": "116079"
  },
  {
    "text": "multi-cloud and into edge and other",
    "start": "116079",
    "end": "117840"
  },
  {
    "text": "places so it constrains choice in",
    "start": "117840",
    "end": "119600"
  },
  {
    "text": "meaningful ways",
    "start": "119600",
    "end": "121680"
  },
  {
    "start": "121000",
    "end": "169000"
  },
  {
    "text": "so miranda's wanted to solve this",
    "start": "121680",
    "end": "123119"
  },
  {
    "text": "problem we wanted to let people deploy",
    "start": "123119",
    "end": "125360"
  },
  {
    "text": "ready for work clusters configured",
    "start": "125360",
    "end": "127280"
  },
  {
    "text": "okay within some limits pretty much",
    "start": "127280",
    "end": "129280"
  },
  {
    "text": "however people wanted",
    "start": "129280",
    "end": "130479"
  },
  {
    "text": "anywhere they liked on private clouds",
    "start": "130479",
    "end": "132800"
  },
  {
    "text": "public clouds or bare metal",
    "start": "132800",
    "end": "134640"
  },
  {
    "text": "we wanted to do a good job of",
    "start": "134640",
    "end": "136319"
  },
  {
    "text": "integrating them with services provided",
    "start": "136319",
    "end": "137920"
  },
  {
    "text": "by their host infrastructures and clouds",
    "start": "137920",
    "end": "139920"
  },
  {
    "text": "so folks would get state",
    "start": "139920",
    "end": "140800"
  },
  {
    "text": "state-of-the-art production-ready",
    "start": "140800",
    "end": "142319"
  },
  {
    "text": "clusters that performed great",
    "start": "142319",
    "end": "144000"
  },
  {
    "text": "and were cost optimized to their",
    "start": "144000",
    "end": "145360"
  },
  {
    "text": "environments we wanted to deliver them",
    "start": "145360",
    "end": "147680"
  },
  {
    "text": "already telemetrized for metrics",
    "start": "147680",
    "end": "149440"
  },
  {
    "text": "analytics so",
    "start": "149440",
    "end": "150480"
  },
  {
    "text": "operators and developers could drill in",
    "start": "150480",
    "end": "152239"
  },
  {
    "text": "from wherever they are while also",
    "start": "152239",
    "end": "154000"
  },
  {
    "text": "providing a single point of integration",
    "start": "154000",
    "end": "155519"
  },
  {
    "text": "for stuff like notifications",
    "start": "155519",
    "end": "157360"
  },
  {
    "text": "and we wanted operators to be able to",
    "start": "157360",
    "end": "158959"
  },
  {
    "text": "life cycle manage scale clusters up and",
    "start": "158959",
    "end": "161280"
  },
  {
    "text": "down",
    "start": "161280",
    "end": "161680"
  },
  {
    "text": "update upgrade or retire child clusters",
    "start": "161680",
    "end": "164480"
  },
  {
    "text": "easily",
    "start": "164480",
    "end": "165280"
  },
  {
    "text": "with no downtime for applications or",
    "start": "165280",
    "end": "167120"
  },
  {
    "text": "control plane functionality",
    "start": "167120",
    "end": "169360"
  },
  {
    "start": "169000",
    "end": "210000"
  },
  {
    "text": "so that's what miranda's container cloud",
    "start": "169360",
    "end": "171120"
  },
  {
    "text": "is it's a kubernetes cluster running",
    "start": "171120",
    "end": "173040"
  },
  {
    "text": "management and lcm and observability",
    "start": "173040",
    "end": "175680"
  },
  {
    "text": "usually integrated with corporate",
    "start": "175680",
    "end": "177040"
  },
  {
    "text": "directory so it has a single source of",
    "start": "177040",
    "end": "178640"
  },
  {
    "text": "truth for iam everywhere",
    "start": "178640",
    "end": "180959"
  },
  {
    "text": "you can put it anywhere convenient for",
    "start": "180959",
    "end": "182480"
  },
  {
    "text": "example on an internal infrastructure as",
    "start": "182480",
    "end": "184640"
  },
  {
    "text": "a service cloud",
    "start": "184640",
    "end": "185760"
  },
  {
    "text": "it can then manage local and remote",
    "start": "185760",
    "end": "187599"
  },
  {
    "text": "infrastructures and deploy an",
    "start": "187599",
    "end": "189360"
  },
  {
    "text": "lcm workaday clusters configured however",
    "start": "189360",
    "end": "192400"
  },
  {
    "text": "you can build self-service portals that",
    "start": "192400",
    "end": "194159"
  },
  {
    "text": "talk directly to the container cloud",
    "start": "194159",
    "end": "195680"
  },
  {
    "text": "instance api and give developers teams",
    "start": "195680",
    "end": "197840"
  },
  {
    "text": "and operators clusters as they need them",
    "start": "197840",
    "end": "199840"
  },
  {
    "text": "wherever that might happen to be and all",
    "start": "199840",
    "end": "201519"
  },
  {
    "text": "the clusters are consistent",
    "start": "201519",
    "end": "203120"
  },
  {
    "text": "so you get dead simple to relatively",
    "start": "203120",
    "end": "205040"
  },
  {
    "text": "easy workload portability among them and",
    "start": "205040",
    "end": "207120"
  },
  {
    "text": "you can use whatever tools you like to",
    "start": "207120",
    "end": "208480"
  },
  {
    "text": "automate around all of them",
    "start": "208480",
    "end": "210720"
  },
  {
    "start": "210000",
    "end": "260000"
  },
  {
    "text": "so what i'm going to do now is a demo",
    "start": "210720",
    "end": "213440"
  },
  {
    "text": "that's",
    "start": "213440",
    "end": "214239"
  },
  {
    "text": "pretty much the same as you might",
    "start": "214239",
    "end": "216159"
  },
  {
    "text": "experience yourself if you went to our",
    "start": "216159",
    "end": "217599"
  },
  {
    "text": "website went to the download page",
    "start": "217599",
    "end": "219280"
  },
  {
    "text": "downloaded the product and its license",
    "start": "219280",
    "end": "221040"
  },
  {
    "text": "and install it yourself i'm going to",
    "start": "221040",
    "end": "222799"
  },
  {
    "text": "deploy this uh instance of container",
    "start": "222799",
    "end": "225519"
  },
  {
    "text": "cloud on aws",
    "start": "225519",
    "end": "227280"
  },
  {
    "text": "then i'm going to use it to deploy a",
    "start": "227280",
    "end": "228640"
  },
  {
    "text": "child cluster then access that cluster",
    "start": "228640",
    "end": "230640"
  },
  {
    "text": "several different ways",
    "start": "230640",
    "end": "232080"
  },
  {
    "text": "on the way exploring observability and",
    "start": "232080",
    "end": "234319"
  },
  {
    "text": "other features",
    "start": "234319",
    "end": "235439"
  },
  {
    "text": "it's not a flashy demo we're looking for",
    "start": "235439",
    "end": "237760"
  },
  {
    "text": "simple painless",
    "start": "237760",
    "end": "238720"
  },
  {
    "text": "secure consistency so you can ship",
    "start": "238720",
    "end": "240879"
  },
  {
    "text": "software faster",
    "start": "240879",
    "end": "242319"
  },
  {
    "text": "note that throughout the demo the flow",
    "start": "242319",
    "end": "244159"
  },
  {
    "text": "of time will be altered to avoid boredom",
    "start": "244159",
    "end": "246400"
  },
  {
    "text": "here's christopher plummer from the 1978",
    "start": "246400",
    "end": "248560"
  },
  {
    "text": "movie star crash",
    "start": "248560",
    "end": "249599"
  },
  {
    "text": "with more imperial battleship",
    "start": "249599",
    "end": "254400"
  },
  {
    "text": "halt the flow of time",
    "start": "254400",
    "end": "257540"
  },
  {
    "text": "[Music]",
    "start": "257540",
    "end": "261959"
  },
  {
    "start": "260000",
    "end": "382000"
  },
  {
    "text": "to begin installing an instance of",
    "start": "263199",
    "end": "264720"
  },
  {
    "text": "container cloud you download a starter",
    "start": "264720",
    "end": "266400"
  },
  {
    "text": "shell script and a license file from",
    "start": "266400",
    "end": "267960"
  },
  {
    "text": "mirantis.com and put them in a",
    "start": "267960",
    "end": "269600"
  },
  {
    "text": "convenient place",
    "start": "269600",
    "end": "270639"
  },
  {
    "text": "then you make the script executable and",
    "start": "270639",
    "end": "272320"
  },
  {
    "text": "run it then copy the license file into",
    "start": "272320",
    "end": "274800"
  },
  {
    "text": "that subdirectory",
    "start": "274800",
    "end": "277120"
  },
  {
    "text": "next since we're deploying this instance",
    "start": "277120",
    "end": "278880"
  },
  {
    "text": "of container cloud on aws",
    "start": "278880",
    "end": "280880"
  },
  {
    "text": "we need to open up a template file in",
    "start": "280880",
    "end": "282639"
  },
  {
    "text": "the template aws subdirectory",
    "start": "282639",
    "end": "285199"
  },
  {
    "text": "and copy in the ami id of an appropriate",
    "start": "285199",
    "end": "287520"
  },
  {
    "text": "host os image",
    "start": "287520",
    "end": "288800"
  },
  {
    "text": "in this case i'm using an ami for ubuntu",
    "start": "288800",
    "end": "291199"
  },
  {
    "text": "1804 lts",
    "start": "291199",
    "end": "292479"
  },
  {
    "text": "in an ssd configuration now we export",
    "start": "292479",
    "end": "296000"
  },
  {
    "text": "credential variables for the",
    "start": "296000",
    "end": "297199"
  },
  {
    "text": "administrative account that will be used",
    "start": "297199",
    "end": "298720"
  },
  {
    "text": "to define resources to host the instance",
    "start": "298720",
    "end": "301039"
  },
  {
    "text": "this is the only time an administrative",
    "start": "301039",
    "end": "302800"
  },
  {
    "text": "role with high privileges is required",
    "start": "302800",
    "end": "306479"
  },
  {
    "text": "and then we run the preliminary deployer",
    "start": "306479",
    "end": "308479"
  },
  {
    "text": "which creates a cloud formation template",
    "start": "308479",
    "end": "310240"
  },
  {
    "text": "to create resources for the cluster",
    "start": "310240",
    "end": "314000"
  },
  {
    "text": "this creates a bootstrap user for us",
    "start": "314880",
    "end": "317039"
  },
  {
    "text": "with more limited permissions used to",
    "start": "317039",
    "end": "318800"
  },
  {
    "text": "actually deploy software under the",
    "start": "318800",
    "end": "320320"
  },
  {
    "text": "machines",
    "start": "320320",
    "end": "322400"
  },
  {
    "text": "we retrieve the bootstrap users aws id",
    "start": "322400",
    "end": "325520"
  },
  {
    "text": "and secret key and use them to replace",
    "start": "325520",
    "end": "328400"
  },
  {
    "text": "the values of the administrative account",
    "start": "328400",
    "end": "332320"
  },
  {
    "text": "that's all the configuration required",
    "start": "333759",
    "end": "335360"
  },
  {
    "text": "for our deployment so now we run the",
    "start": "335360",
    "end": "336960"
  },
  {
    "text": "main bootstrap script",
    "start": "336960",
    "end": "339440"
  },
  {
    "text": "imperial battleship accelerate the flow",
    "start": "339440",
    "end": "342160"
  },
  {
    "text": "of",
    "start": "342160",
    "end": "342720"
  },
  {
    "text": "time and there we are",
    "start": "342720",
    "end": "346320"
  },
  {
    "text": "boom easy peasy so then we should save",
    "start": "346320",
    "end": "349840"
  },
  {
    "text": "all that useful information and we",
    "start": "349840",
    "end": "351360"
  },
  {
    "text": "should look in our cast bootstrap",
    "start": "351360",
    "end": "352639"
  },
  {
    "text": "directory where the deployer has",
    "start": "352639",
    "end": "353759"
  },
  {
    "text": "thoughtfully left us a coup config file",
    "start": "353759",
    "end": "355600"
  },
  {
    "text": "for the container cloud host and a",
    "start": "355600",
    "end": "357039"
  },
  {
    "text": "password xyaml file",
    "start": "357039",
    "end": "358400"
  },
  {
    "text": "containing important system passwords",
    "start": "358400",
    "end": "360639"
  },
  {
    "text": "we're going to grab the password for the",
    "start": "360639",
    "end": "361919"
  },
  {
    "text": "key cloak security system and use it to",
    "start": "361919",
    "end": "363840"
  },
  {
    "text": "change all the passwords for the three",
    "start": "363840",
    "end": "365280"
  },
  {
    "text": "default account",
    "start": "365280",
    "end": "366000"
  },
  {
    "text": "roles called operator writer and reader",
    "start": "366000",
    "end": "368080"
  },
  {
    "text": "to something harder to guess than",
    "start": "368080",
    "end": "369360"
  },
  {
    "text": "password",
    "start": "369360",
    "end": "370720"
  },
  {
    "text": "of course there is a simple way of",
    "start": "370720",
    "end": "372080"
  },
  {
    "text": "injecting passwords prior to deployment",
    "start": "372080",
    "end": "373840"
  },
  {
    "text": "but i didn't do it because i'm",
    "start": "373840",
    "end": "375440"
  },
  {
    "text": "lazy now i can log into the container",
    "start": "375440",
    "end": "379840"
  },
  {
    "text": "cloud instance itself",
    "start": "379840",
    "end": "382800"
  },
  {
    "text": "creating a child cluster is very simple",
    "start": "382800",
    "end": "384720"
  },
  {
    "text": "start by clicking create cluster and",
    "start": "384720",
    "end": "386479"
  },
  {
    "text": "give your cluster a name",
    "start": "386479",
    "end": "388400"
  },
  {
    "text": "then add machines at least three manager",
    "start": "388400",
    "end": "390720"
  },
  {
    "text": "nodes and two workers",
    "start": "390720",
    "end": "392240"
  },
  {
    "text": "just enough to permit a zero downtime",
    "start": "392240",
    "end": "393919"
  },
  {
    "text": "rolling update with some headroom free",
    "start": "393919",
    "end": "395680"
  },
  {
    "text": "to stop and drain nodes of each type",
    "start": "395680",
    "end": "397360"
  },
  {
    "text": "neatly under normal loading",
    "start": "397360",
    "end": "399520"
  },
  {
    "text": "again we alter the flow of time and now",
    "start": "399520",
    "end": "402319"
  },
  {
    "text": "we have a child cluster",
    "start": "402319",
    "end": "403600"
  },
  {
    "text": "we can visit the cluster's web ui using",
    "start": "403600",
    "end": "405759"
  },
  {
    "text": "the key cloak-based single sign-on",
    "start": "405759",
    "end": "408240"
  },
  {
    "text": "the web ui lets us examine nodes explore",
    "start": "408240",
    "end": "410720"
  },
  {
    "text": "objects in the cluster and edit and",
    "start": "410720",
    "end": "412240"
  },
  {
    "text": "change their definitions",
    "start": "412240",
    "end": "414400"
  },
  {
    "text": "we can see the stack light namespace for",
    "start": "414400",
    "end": "416400"
  },
  {
    "text": "example in which telemetry deployments",
    "start": "416400",
    "end": "418240"
  },
  {
    "text": "and related life cycle management reside",
    "start": "418240",
    "end": "420800"
  },
  {
    "text": "we can also see how the deployer has",
    "start": "420800",
    "end": "422400"
  },
  {
    "text": "configured persistent volume claims on",
    "start": "422400",
    "end": "424319"
  },
  {
    "text": "aws block storage",
    "start": "424319",
    "end": "425840"
  },
  {
    "text": "just one example of how container cloud",
    "start": "425840",
    "end": "427599"
  },
  {
    "text": "pursues optimal deployment strategies",
    "start": "427599",
    "end": "429440"
  },
  {
    "text": "for the different host infrastructures",
    "start": "429440",
    "end": "430880"
  },
  {
    "text": "it manages",
    "start": "430880",
    "end": "431919"
  },
  {
    "text": "we can also download a client bundle for",
    "start": "431919",
    "end": "434000"
  },
  {
    "text": "our user",
    "start": "434000",
    "end": "437680"
  },
  {
    "text": "back on our laptop we can unzip it and",
    "start": "437680",
    "end": "439680"
  },
  {
    "text": "source the env",
    "start": "439680",
    "end": "441039"
  },
  {
    "text": "sh file to enable coupe ctl connectivity",
    "start": "441039",
    "end": "446000"
  },
  {
    "text": "we also have a cube yaml file defining",
    "start": "446319",
    "end": "448960"
  },
  {
    "text": "our new cluster and the most convenient",
    "start": "448960",
    "end": "450400"
  },
  {
    "text": "way to use that",
    "start": "450400",
    "end": "451199"
  },
  {
    "text": "is to fire up lens the kubernetes ide",
    "start": "451199",
    "end": "453840"
  },
  {
    "text": "and add the new cluster with a single",
    "start": "453840",
    "end": "455520"
  },
  {
    "text": "click",
    "start": "455520",
    "end": "457680"
  },
  {
    "text": "as you'll notice lens immediately finds",
    "start": "457680",
    "end": "459520"
  },
  {
    "text": "the cluster's existing prometheus",
    "start": "459520",
    "end": "461360"
  },
  {
    "text": "and can show us simple metrics helpful",
    "start": "461360",
    "end": "463120"
  },
  {
    "text": "for programming and forensics",
    "start": "463120",
    "end": "464960"
  },
  {
    "text": "lens can also show us logs let us sign",
    "start": "464960",
    "end": "467360"
  },
  {
    "text": "into container shells and provide smart",
    "start": "467360",
    "end": "469199"
  },
  {
    "text": "context to wear terminals to automate",
    "start": "469199",
    "end": "470879"
  },
  {
    "text": "common transactions like those performed",
    "start": "470879",
    "end": "472560"
  },
  {
    "text": "with coop ctl edit",
    "start": "472560",
    "end": "474000"
  },
  {
    "text": "and permit direct use of cube ctl with",
    "start": "474000",
    "end": "475919"
  },
  {
    "text": "automatic credential management",
    "start": "475919",
    "end": "479840"
  },
  {
    "text": "jumping back into container cloud we can",
    "start": "480319",
    "end": "482240"
  },
  {
    "text": "view operational metrics for the child",
    "start": "482240",
    "end": "483919"
  },
  {
    "text": "cluster by clicking on its grafana",
    "start": "483919",
    "end": "485520"
  },
  {
    "text": "button",
    "start": "485520",
    "end": "486479"
  },
  {
    "text": "as you'd expect this opens a pretty",
    "start": "486479",
    "end": "488080"
  },
  {
    "text": "comprehensive survey dashboard of course",
    "start": "488080",
    "end": "490000"
  },
  {
    "text": "entirely customizable",
    "start": "490000",
    "end": "491440"
  },
  {
    "text": "one of a very large hierarchy of",
    "start": "491440",
    "end": "493120"
  },
  {
    "text": "included dashboards that lets operators",
    "start": "493120",
    "end": "495280"
  },
  {
    "text": "quickly survey and explore the health of",
    "start": "495280",
    "end": "496720"
  },
  {
    "text": "the container cloud instance itself",
    "start": "496720",
    "end": "498639"
  },
  {
    "text": "any distributed region managers and the",
    "start": "498639",
    "end": "500639"
  },
  {
    "text": "entire collective child clusters at any",
    "start": "500639",
    "end": "502639"
  },
  {
    "text": "desired level of detail",
    "start": "502639",
    "end": "504400"
  },
  {
    "text": "so that's the quick start without all",
    "start": "504400",
    "end": "506560"
  },
  {
    "text": "the alterations in the flow of time and",
    "start": "506560",
    "end": "508240"
  },
  {
    "text": "end-to-end proof of concept deployment",
    "start": "508240",
    "end": "509759"
  },
  {
    "text": "of container cloud takes about 52",
    "start": "509759",
    "end": "511680"
  },
  {
    "text": "minutes",
    "start": "511680",
    "end": "512479"
  },
  {
    "text": "which isn't a huge investment for a",
    "start": "512479",
    "end": "513919"
  },
  {
    "text": "solution that can help you simplify",
    "start": "513919",
    "end": "515440"
  },
  {
    "text": "secure",
    "start": "515440",
    "end": "516000"
  },
  {
    "text": "create consistency manage from the top",
    "start": "516000",
    "end": "517839"
  },
  {
    "text": "and ship software faster",
    "start": "517839",
    "end": "519599"
  },
  {
    "text": "we hope you'll stop by mirandas.com",
    "start": "519599",
    "end": "521680"
  },
  {
    "text": "download container cloud and take it for",
    "start": "521680",
    "end": "523279"
  },
  {
    "text": "a test drive soon",
    "start": "523279",
    "end": "524399"
  },
  {
    "text": "if you have any questions reach out to",
    "start": "524399",
    "end": "525839"
  },
  {
    "text": "me on email thank you",
    "start": "525839",
    "end": "530399"
  }
]