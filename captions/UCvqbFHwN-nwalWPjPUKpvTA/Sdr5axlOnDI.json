[
  {
    "text": "hi all uh I'm Aiden I'm one of the billpacks.io team leads and I want to",
    "start": "0",
    "end": "6960"
  },
  {
    "text": "talk today about multi-architecture images surprisingly or I don't know what I",
    "start": "6960",
    "end": "12000"
  },
  {
    "text": "don't really have any answers in this talk but I would like to ask a lot of questions",
    "start": "12000",
    "end": "17160"
  },
  {
    "text": "um but firstly as I said I kind of got to introduce myself and then I'd like to get a picture of",
    "start": "17160",
    "end": "22560"
  },
  {
    "text": "your general knowledge of of build packs I've spoken to some people already just to see where things are so as I",
    "start": "22560",
    "end": "29340"
  },
  {
    "text": "mentioned I'm Aiden I'm part of a team in Bloomberg that develops app or platforms on which are",
    "start": "29340",
    "end": "35880"
  },
  {
    "text": "AI engineers at Bloomberg depend and for us Bill packs are a critical component because they allow the",
    "start": "35880",
    "end": "42000"
  },
  {
    "text": "Bloomberg AI Engineers to achieve High Velocity when they iterate on experiments",
    "start": "42000",
    "end": "48180"
  },
  {
    "text": "so I'm also a bill paxterio team lead where I mostly help with documentation so if you find any problems with the",
    "start": "48180",
    "end": "53460"
  },
  {
    "text": "documentation you can just shout at me um in this talk I want to give a brief",
    "start": "53460",
    "end": "60840"
  },
  {
    "text": "overview on the state of Bill Pax in 2022 I want to present some motivation around",
    "start": "60840",
    "end": "66600"
  },
  {
    "text": "why we might want multi-architecture images and then I'm going to present kind of",
    "start": "66600",
    "end": "71700"
  },
  {
    "text": "three high-level approaches to implementing multi-architecture images as I said it's important to note that we",
    "start": "71700",
    "end": "77939"
  },
  {
    "text": "don't yet actually have a solution for this um but I'm trying to ask a lot of questions",
    "start": "77939",
    "end": "83220"
  },
  {
    "text": "um and I'm not going to get down and deep into the code in this talk so it should be a high level the key Focus though is to accelerate",
    "start": "83220",
    "end": "90840"
  },
  {
    "text": "the discussion around multi-architecture images and to encourage kind of uh design",
    "start": "90840",
    "end": "97200"
  },
  {
    "text": "questions around it so I've spoken to some of you but um could I get maybe a hands up if you're",
    "start": "97200",
    "end": "103920"
  },
  {
    "text": "kind of interested in build packs but haven't yet done very much with them oh wow interesting that's over half the",
    "start": "103920",
    "end": "110700"
  },
  {
    "text": "talk so certainly I've got some stuff in this talk certainly early on that will hopefully uh wet your appetite and you",
    "start": "110700",
    "end": "116520"
  },
  {
    "text": "can talk to me later about more details of the buildbacks.io booth um hands up here if you've got a",
    "start": "116520",
    "end": "122220"
  },
  {
    "text": "reasonable amount of experience with Bill packs there's a couple of people here whose ways of amount of experience",
    "start": "122220",
    "end": "127439"
  },
  {
    "text": "okay great I'm certainly going to be leaning on those of you uh to contribute to the this talk or the questions later",
    "start": "127439",
    "end": "133739"
  },
  {
    "text": "on and then I do recognize some faces Stephen and Max you are the uh season",
    "start": "133739",
    "end": "140640"
  },
  {
    "text": "build packs users but are there any kind of seasoned Bill packed veterans out there in the audience oh you're hiding in the back there",
    "start": "140640",
    "end": "146879"
  },
  {
    "text": "fantastic Matt you just Matt's giving me kind of half yeah he's only a k-pak",
    "start": "146879",
    "end": "152400"
  },
  {
    "text": "developer but hey so what are build packs is kind of um an interesting question to ask in the first",
    "start": "152400",
    "end": "158040"
  },
  {
    "text": "the way I like to talk about build packs is to say that there are a declarative way to translate application source code",
    "start": "158040",
    "end": "164340"
  },
  {
    "text": "into a production image right and I can give you hopefully a",
    "start": "164340",
    "end": "169739"
  },
  {
    "text": "little demo of what I mean by this I'm going to start with a",
    "start": "169739",
    "end": "175140"
  },
  {
    "text": "fairly standard hello world python project yep it's got a example.pi it's a",
    "start": "175140",
    "end": "181140"
  },
  {
    "text": "fast API service um what I'm going to do is",
    "start": "181140",
    "end": "187019"
  },
  {
    "text": "what am I going to do I'm going to CD into the directory and then I'm going to eventually run pack a CLI tool to build",
    "start": "187019",
    "end": "194099"
  },
  {
    "text": "the output image so again I've started with a standard python project I've run the pack Tool uh the build pack process",
    "start": "194099",
    "end": "201900"
  },
  {
    "text": "will introspect your project source code to determine to determine what build packs contribute to the build",
    "start": "201900",
    "end": "208379"
  },
  {
    "text": "and then during the build phase a bit later on what it tends to do or build packs kind of commonly do is they",
    "start": "208379",
    "end": "215099"
  },
  {
    "text": "provide an application runtime in this case it's going to be a python runtime they install application dependencies in",
    "start": "215099",
    "end": "220980"
  },
  {
    "text": "this case it's going to be installing some pip dependencies that were in the requirements.txt file and then it's got",
    "start": "220980",
    "end": "226620"
  },
  {
    "text": "to apply some kind of configuration settings in this case I've used a Heroku style proc file so it's going to",
    "start": "226620",
    "end": "232799"
  },
  {
    "text": "configure an entry point into my image using that that proc file if you don't know what the Pro Crystal proc file is",
    "start": "232799",
    "end": "238319"
  },
  {
    "text": "you can talk to me later or ask a question about it um so the sales pitch for build packs",
    "start": "238319",
    "end": "245819"
  },
  {
    "text": "that was a build done dusted but the sales pitch no I don't need that demo slide that was only for a fallback",
    "start": "245819",
    "end": "253379"
  },
  {
    "text": "is that we tend to produce or we try and produce small and targeted production images the builds are replicatable meaning that",
    "start": "253379",
    "end": "262139"
  },
  {
    "text": "if you rebuild an image using the same application source with the same uh dependencies with the exact same",
    "start": "262139",
    "end": "268139"
  },
  {
    "text": "dependencies it leads for to a byte for byte reproducible image this is",
    "start": "268139",
    "end": "273240"
  },
  {
    "text": "important in some regulated Industries yeah we've also got a nice",
    "start": "273240",
    "end": "278780"
  },
  {
    "text": "property of build packs the idea of being rebasable the ability to switch out our run image with a small registry",
    "start": "278780",
    "end": "285720"
  },
  {
    "text": "update if you want to talk about rebase or see uh in a bit more depth have a",
    "start": "285720",
    "end": "291000"
  },
  {
    "text": "visit of the build pack spoof later I'm not going to go into it in this talk but it is a really neat operation",
    "start": "291000",
    "end": "298800"
  },
  {
    "text": "so build packs or more properly known as Cloud native buildpacks is a cncf",
    "start": "298800",
    "end": "304380"
  },
  {
    "text": "project go team cncf come on people don't want to get it yet",
    "start": "304380",
    "end": "310139"
  },
  {
    "text": "yay right Cloud native build packs are the third generation of an approach that was",
    "start": "310139",
    "end": "316680"
  },
  {
    "text": "originally pioneered by kind of Heroku and people are pivotal about a decade ago so the ideas that are in this have",
    "start": "316680",
    "end": "323100"
  },
  {
    "text": "been around for a long time we do though have some really nice emerging features in 2022",
    "start": "323100",
    "end": "330000"
  },
  {
    "text": "um we have started or we've actually released some um experimental support to configure build",
    "start": "330000",
    "end": "336960"
  },
  {
    "text": "and run images using a restricted Docker file syntax which is quite neat we've got some better support this",
    "start": "336960",
    "end": "343380"
  },
  {
    "text": "quarter for user profiles on an image and there's hopefully soon some easier tooling to start writing new build packs",
    "start": "343380",
    "end": "350220"
  },
  {
    "text": "coming on stream but in addition to the individual open source contributions we have had in this",
    "start": "350220",
    "end": "356880"
  },
  {
    "text": "quarter contributions from 13 different companies which shows you that it is a a live project with a lot of different",
    "start": "356880",
    "end": "363240"
  },
  {
    "text": "contributors from multi multiple vendors so it is you know it's precisely what we'd like to see in a cncf project being",
    "start": "363240",
    "end": "370080"
  },
  {
    "text": "multi multi-vendor but what do we actually do at buildpacks.io we actively maintain a",
    "start": "370080",
    "end": "376320"
  },
  {
    "text": "number of specifications as an end user and most of you are here to think about it from an end user",
    "start": "376320",
    "end": "382860"
  },
  {
    "text": "perspective you should never really need to read these specifications however as a bill Pax author you might",
    "start": "382860",
    "end": "389699"
  },
  {
    "text": "from time to time have to dip into the build pack interface specification",
    "start": "389699",
    "end": "394800"
  },
  {
    "text": "well that kind of leads me to talk about the kind of people that we consider when we're developing these specifications",
    "start": "394800",
    "end": "401220"
  },
  {
    "text": "we keep in mind kind of three Target user groups uh first being and most importantly",
    "start": "401220",
    "end": "406860"
  },
  {
    "text": "frankly being the application Developers um application developers we would say",
    "start": "406860",
    "end": "413039"
  },
  {
    "text": "use something called we call a platform to build an image you've already seen an example of a platform in the demo that I",
    "start": "413039",
    "end": "419400"
  },
  {
    "text": "showed pack is an example build Pack's platform and application developers unsurprisingly just want to build an",
    "start": "419400",
    "end": "425940"
  },
  {
    "text": "image the second audience would be Bill Pack's authors these people are open source",
    "start": "425940",
    "end": "432840"
  },
  {
    "text": "contributors or maybe they're developing some company internal buildbacks",
    "start": "432840",
    "end": "438600"
  },
  {
    "text": "uh they tend to want to provide composable functionality to their application Developers",
    "start": "438600",
    "end": "446300"
  },
  {
    "text": "for them obviously we provide the specifications we provide the specification of the of the platform and",
    "start": "446880",
    "end": "452460"
  },
  {
    "text": "we provide a library lib CNB library and go which allows them to write build packs for their end users",
    "start": "452460",
    "end": "459900"
  },
  {
    "text": "Python and rust lib CNB like bindings are available from from other sources and you can also write build packs in in",
    "start": "459900",
    "end": "466740"
  },
  {
    "text": "bash or the technology that of your choice finally those the use case for platform",
    "start": "466740",
    "end": "472440"
  },
  {
    "text": "operators these are the people who run the platforms to build the production images",
    "start": "472440",
    "end": "479160"
  },
  {
    "text": "um often these users want to enforce project-wide or corporate-wide policies",
    "start": "479160",
    "end": "484979"
  },
  {
    "text": "for example they might want to say that you can build images on our platform but",
    "start": "484979",
    "end": "490139"
  },
  {
    "text": "we're going to enforce the policy that you can only ever use an internal mirror",
    "start": "490139",
    "end": "495180"
  },
  {
    "text": "to resolve pip dependencies or npm dependencies or so on and so forth",
    "start": "495180",
    "end": "501060"
  },
  {
    "text": "so these are the kind of free user groups that we keep in mind when we're developing the specifications",
    "start": "501060",
    "end": "507720"
  },
  {
    "text": "and there are multiple implementations of these there's not just one implementation of the build packs platform",
    "start": "507720",
    "end": "513959"
  },
  {
    "text": "um it seems appropriate to open given that we're our Cube come with k-pak which I'll say a little bit more about",
    "start": "513959",
    "end": "520500"
  },
  {
    "text": "in the next slide but it's a kubernetes controller kubernetes operator for building images it's currently",
    "start": "520500",
    "end": "526320"
  },
  {
    "text": "maintained by VMware as an open source project and I kind of questionally going to look at new here and say that cloud",
    "start": "526320",
    "end": "533640"
  },
  {
    "text": "foundries coreify is derived from kpac or based on kback",
    "start": "533640",
    "end": "538800"
  },
  {
    "text": "kind of maybe nothing he's kind of nodding I gotta take that",
    "start": "538800",
    "end": "544740"
  },
  {
    "text": "as confirmation other platforms are pack it's a command line tool provided by us at buildpax.io",
    "start": "544740",
    "end": "551519"
  },
  {
    "text": "on the CMB project and the pack tool is used with a lot of",
    "start": "551519",
    "end": "557580"
  },
  {
    "text": "other projects it's used quite often in GitHub actions it's used in circle CI",
    "start": "557580",
    "end": "563100"
  },
  {
    "text": "it's used on a lot of places where build packs are used to build an image Tech tones and open source CI CD",
    "start": "563100",
    "end": "570180"
  },
  {
    "text": "platform it's maintained by The Continuous delivery Foundation spring boots interestingly is also a",
    "start": "570180",
    "end": "576300"
  },
  {
    "text": "build packs platform they use the build pack steps underneath to Output an oci",
    "start": "576300",
    "end": "581760"
  },
  {
    "text": "image for your spring application and then there's other platforms out there Salesforce is functions uses build",
    "start": "581760",
    "end": "588600"
  },
  {
    "text": "packs to power their functions as a service platform so there's a lot of implementations and a lot of different",
    "start": "588600",
    "end": "594480"
  },
  {
    "text": "uses of things out there and kind of news flash",
    "start": "594480",
    "end": "599760"
  },
  {
    "text": "as of two weeks ago there is an open proposal uh to um",
    "start": "599760",
    "end": "606480"
  },
  {
    "text": "donate K-pop to the billpacks.io cncf project so thank you very much Matt and all the",
    "start": "606480",
    "end": "612720"
  },
  {
    "text": "other people at VMware this is kind of cool",
    "start": "612720",
    "end": "616459"
  },
  {
    "text": "um we're really excited about this and we hope to be able to accept the proposal soon you know modular all the",
    "start": "617760",
    "end": "623580"
  },
  {
    "text": "work that has to be done there's always work involved in these things so um I've said that there are many",
    "start": "623580",
    "end": "629399"
  },
  {
    "text": "platforms for buildbacks um and there are many platforms that use build packs to produce an output image",
    "start": "629399",
    "end": "635880"
  },
  {
    "text": "and there are many implementations themselves of build packs from multiple different vendors",
    "start": "635880",
    "end": "641220"
  },
  {
    "text": "at piquetto is an open source and vendor neutral project that implements a set of",
    "start": "641220",
    "end": "646320"
  },
  {
    "text": "build packs the Salesforce people have Heroku no uh",
    "start": "646320",
    "end": "651360"
  },
  {
    "text": "Bill packs for Heroku which Target the Heroku cloud or the Heroku platform Google has a set of build packs that",
    "start": "651360",
    "end": "657420"
  },
  {
    "text": "they've authored which largely targets uh Google Cloud run and the VMware folk",
    "start": "657420",
    "end": "663600"
  },
  {
    "text": "have a set of build packs which are some of them are derived from the paquetto build packs and they target vmware's",
    "start": "663600",
    "end": "669480"
  },
  {
    "text": "tanzu Cloud platform you can search for the build packs if you need a build pack to fit your needs",
    "start": "669480",
    "end": "675540"
  },
  {
    "text": "at registry.buildpacks.io but it's often a case that other companies also have internal buildbacks",
    "start": "675540",
    "end": "682740"
  },
  {
    "text": "for example at Bloomberg we primarily use a potato build packs and",
    "start": "682740",
    "end": "688140"
  },
  {
    "text": "then we extend them with custom build packs where we need to have some kind of custom functionality",
    "start": "688140",
    "end": "693540"
  },
  {
    "text": "so it might be interesting at this stage particularly given that most of us in the room are new to build packs to have",
    "start": "693540",
    "end": "698820"
  },
  {
    "text": "a look at how a platform would go about building an image there's plenty of seats down to fund people if you want to",
    "start": "698820",
    "end": "704399"
  },
  {
    "text": "just filter your way in or on this side as well",
    "start": "704399",
    "end": "709279"
  },
  {
    "text": "so interestingly most end users will interact with a platform like Pac or",
    "start": "709800",
    "end": "716100"
  },
  {
    "text": "kpac rather than interacting with with the build packs themselves and yeah suppose we have that hello",
    "start": "716100",
    "end": "722100"
  },
  {
    "text": "world python application and we like how the piketo build packs for example build python applications well",
    "start": "722100",
    "end": "728820"
  },
  {
    "text": "we tell pack to use and Trust the piquetto Builder which is what you saw in the demo earlier I had a pack build",
    "start": "728820",
    "end": "736320"
  },
  {
    "text": "example and I passed in a builder as a command line flag which was the paquero Builder and most Builders contain four",
    "start": "736320",
    "end": "743399"
  },
  {
    "text": "things so the Builder image is the build image on with our which our python application is built and I've kind of",
    "start": "743399",
    "end": "749279"
  },
  {
    "text": "used a gray box here to represent the Builder on the right hand side of the diagram",
    "start": "749279",
    "end": "755100"
  },
  {
    "text": "um the Builder contains a collection of build packs um the blue boxes here represent the collection of build packs",
    "start": "755100",
    "end": "762000"
  },
  {
    "text": "and it contains a reference to a run image that's the green box on the on the diagram and finally Builders tend to",
    "start": "762000",
    "end": "768959"
  },
  {
    "text": "contain a copy of the buildbacks.iosteps binary um the buildback steps I've kind of",
    "start": "768959",
    "end": "775019"
  },
  {
    "text": "denoted with these kind of down arrows these Chevrons here that are colored purple and pink we'll come to those in a minute",
    "start": "775019",
    "end": "781200"
  },
  {
    "text": "so it is worth looking at how pack and the bill pack steps interact to produce an image",
    "start": "781200",
    "end": "786240"
  },
  {
    "text": "and in the most straightforward case and that's the only case I've got to consider today is the most straightforward case",
    "start": "786240",
    "end": "791639"
  },
  {
    "text": "the platform spins up the Builder image as a container it mounts the application source code and does whatever the",
    "start": "791639",
    "end": "797760"
  },
  {
    "text": "mounting it needs to do and then it invokes the build pack steps in a particular order",
    "start": "797760",
    "end": "803040"
  },
  {
    "text": "and that order is the order that they're given here we start with the analyze step and the key role of the analyze",
    "start": "803040",
    "end": "809160"
  },
  {
    "text": "step is pretty much just to bug out early if you don't have access to read and write to a registry so for example",
    "start": "809160",
    "end": "816240"
  },
  {
    "text": "we don't want to perform a full build if we can't access the Run image on your registry",
    "start": "816240",
    "end": "822480"
  },
  {
    "text": "now I've colored as you can see the detect step in pink like I've called the build step and think because these are",
    "start": "822480",
    "end": "829019"
  },
  {
    "text": "generally of more interest to the um buildpax end users",
    "start": "829019",
    "end": "834560"
  },
  {
    "text": "in the detect phase what happens is that each individual build pack provides its own detect binary the detect build step",
    "start": "834600",
    "end": "841740"
  },
  {
    "text": "runs the detect binaries of each build pack and finds out which build pack can",
    "start": "841740",
    "end": "846779"
  },
  {
    "text": "which build packs contribute to the build now we've seen this in the demo earlier if I scroll back up",
    "start": "846779",
    "end": "854100"
  },
  {
    "text": "you can see that one of the first phases is the detect and that in this uh this",
    "start": "854100",
    "end": "859139"
  },
  {
    "text": "Builder contains a number of images that are build packs that I can't read what does it say over there on the left hand",
    "start": "859139",
    "end": "864180"
  },
  {
    "text": "side how many images are build packs does this Builder contain see nine but only six of them contribute",
    "start": "864180",
    "end": "871320"
  },
  {
    "text": "to the build so the detect phase of all nine has run but only six of them have recognized that this is a python project",
    "start": "871320",
    "end": "876959"
  },
  {
    "text": "and that we need to contribute builds are part of the build for this python project the other three are node.js",
    "start": "876959",
    "end": "882600"
  },
  {
    "text": "build packs and obviously a node.js build pack a related build pack don't contribute to a python budget",
    "start": "882600",
    "end": "888839"
  },
  {
    "text": "fantastic cool so finds out what could build packs",
    "start": "888839",
    "end": "894779"
  },
  {
    "text": "contribute to the build and then it outputs at the end of this stage a build plan and a build order for running the",
    "start": "894779",
    "end": "900240"
  },
  {
    "text": "build packs in there is a restore phase which is next and Bill pack support cashing out at",
    "start": "900240",
    "end": "906420"
  },
  {
    "text": "many levels I'm not going to go into the depths of this in this talk particularly because of the the variety of caching",
    "start": "906420",
    "end": "912420"
  },
  {
    "text": "techniques that can be implemented in build packs but the restore phase restores previously cached layers from",
    "start": "912420",
    "end": "917880"
  },
  {
    "text": "volumes or from a registry next phase is the build phase and this",
    "start": "917880",
    "end": "923519"
  },
  {
    "text": "is a particularly interesting one to those us end users it takes the build order computed by the detect phase",
    "start": "923519",
    "end": "930600"
  },
  {
    "text": "and then each bill pack each individual build pack contributes a build binary and the build process executes the build",
    "start": "930600",
    "end": "937680"
  },
  {
    "text": "binary of each build pack in the order given in the build order so I think some",
    "start": "937680",
    "end": "943139"
  },
  {
    "text": "details here are probably a little bit appropriate you can see the build order that I've",
    "start": "943139",
    "end": "948600"
  },
  {
    "text": "kind of put in the middle of this diagram and what we can see is that the uh each",
    "start": "948600",
    "end": "954240"
  },
  {
    "text": "build pack is is executed in the build order that's given and the input to each individual build pack is a subset of the",
    "start": "954240",
    "end": "960899"
  },
  {
    "text": "bill plan that is useful to that particular build pack we'll call this a build pack plan",
    "start": "960899",
    "end": "966600"
  },
  {
    "text": "it took me about three months to figure out that those were different things",
    "start": "966600",
    "end": "971360"
  },
  {
    "text": "so in the case uh in this particular case there's kind of a python distribution pill pack that contributes",
    "start": "972120",
    "end": "978600"
  },
  {
    "text": "a c python runtime to the as a layer to the image there's a pip install build pack that's going to contribute at least",
    "start": "978600",
    "end": "985920"
  },
  {
    "text": "a layer containing the application dependencies probably some caching stuff as well which I'm completely ignoring",
    "start": "985920",
    "end": "990959"
  },
  {
    "text": "right now and then there's the proc file build pack which is contributor layer containing the entry point of the",
    "start": "990959",
    "end": "996360"
  },
  {
    "text": "application and in all cases a full software bill of materials is provided for each layer",
    "start": "996360",
    "end": "1002839"
  },
  {
    "text": "finally we've got the kind of export phase and given all the layers produced by the",
    "start": "1002839",
    "end": "1008240"
  },
  {
    "text": "build phase the export phase produces an oci image on top of the Run image that",
    "start": "1008240",
    "end": "1013820"
  },
  {
    "text": "was a part of the Builder not all the layers are exported as part of the image you know I have ignored",
    "start": "1013820",
    "end": "1019880"
  },
  {
    "text": "some details there may be caching layers there may be build only layers those are not exported as part of the image but",
    "start": "1019880",
    "end": "1025520"
  },
  {
    "text": "they may be used for speeding up rebuilds in future and the export phase doesn't show that",
    "start": "1025520",
    "end": "1030798"
  },
  {
    "text": "the cache layers are correctly cached now I get to talk about something really really exciting",
    "start": "1030799",
    "end": "1036980"
  },
  {
    "text": "but I've only got to touch on it and the person you really need to bug about this is a person called Natalie at the",
    "start": "1036980",
    "end": "1042079"
  },
  {
    "text": "buildpacks.io booth now I've given you one slide here on this but this feature has taken many months to implement so",
    "start": "1042079",
    "end": "1048919"
  },
  {
    "text": "I'm really underselling her work here but we released this month a new experimental feature and the feature",
    "start": "1048919",
    "end": "1054679"
  },
  {
    "text": "adds new build steps which allows us to extend build and run images uh the input to the extended phase is a",
    "start": "1054679",
    "end": "1061340"
  },
  {
    "text": "very restricted Docker file we certainly do not allow and don't intend to allow the full syntax and expressiveness of",
    "start": "1061340",
    "end": "1066919"
  },
  {
    "text": "Docker files but currently the Restriction already allows you to change the Run image the way we've currently",
    "start": "1066919",
    "end": "1071960"
  },
  {
    "text": "implemented it so we expect to increase the subset of dockerfile syntax that we do support",
    "start": "1071960",
    "end": "1077539"
  },
  {
    "text": "and going forward we will have a supportive mechanism for using native packages meaning that if you're",
    "start": "1077539",
    "end": "1082940"
  },
  {
    "text": "extending a Debian or Ubuntu image you should be able to apt get install some packages or if you're extending a rail",
    "start": "1082940",
    "end": "1089179"
  },
  {
    "text": "based image you'll be able to dnf and store some RPM packages",
    "start": "1089179",
    "end": "1094280"
  },
  {
    "text": "and that brings me to thinking about things in terms of platforms the PAC platform itself is uh oh timing",
    "start": "1094280",
    "end": "1103039"
  },
  {
    "text": "released on multiple platforms the build steps which I'll actually give a name to now it's called lifecycle uh is released",
    "start": "1103039",
    "end": "1110000"
  },
  {
    "text": "on multiple platforms and the build and run images are available on multiple platforms the build packs themselves are",
    "start": "1110000",
    "end": "1115880"
  },
  {
    "text": "you know primarily designed and they're implemented and tested are to run on AMD 64. I'm going to use the kind of go",
    "start": "1115880",
    "end": "1122539"
  },
  {
    "text": "names for these platforms so AMD 64 what we might know is x8664 and other terminology",
    "start": "1122539",
    "end": "1128720"
  },
  {
    "text": "so the piqueto the sales force the Google the tanzu and our build packs.io billpacks all support Linux and AMD 64",
    "start": "1128720",
    "end": "1136280"
  },
  {
    "text": "and are all tested in for that it is unfortunately not the same case",
    "start": "1136280",
    "end": "1141320"
  },
  {
    "text": "for Linux on arm 64. we find that still that pack life cycle the build and run",
    "start": "1141320",
    "end": "1146660"
  },
  {
    "text": "images uh on our are available on arm 64 for from many providers of build packs but in",
    "start": "1146660",
    "end": "1153799"
  },
  {
    "text": "general sorry but in general uh there's only partial support for Linux and arm 64 from pretty",
    "start": "1153799",
    "end": "1161240"
  },
  {
    "text": "much any of the providers of build packs and the question is why would be we be",
    "start": "1161240",
    "end": "1166760"
  },
  {
    "text": "interested in this in the first place why are we interested in kind of AMD 64 and arm 64. well as I said you know the",
    "start": "1166760",
    "end": "1173720"
  },
  {
    "text": "platforms on K-POP are pack and kpac are released on multiple architectures however with this talk we're",
    "start": "1173720",
    "end": "1180140"
  },
  {
    "text": "particularly interested in the output image and many of us are interested in deploying output applications on both AMD 64 and",
    "start": "1180140",
    "end": "1188059"
  },
  {
    "text": "arm 64. this is largely because the cloud providers currently support both",
    "start": "1188059",
    "end": "1193640"
  },
  {
    "text": "of these Hardware platforms so you can you know you can get a server from a a",
    "start": "1193640",
    "end": "1198799"
  },
  {
    "text": "cloud provider that is an arm64 server if we have support for two platforms our",
    "start": "1198799",
    "end": "1204799"
  },
  {
    "text": "AMD 64 now I'm 64 then in future it should be easier to support other platforms like some kind of mips 64",
    "start": "1204799",
    "end": "1211039"
  },
  {
    "text": "platform and it's also the case that Developers at the moment have AMD 64 or arm 64",
    "start": "1211039",
    "end": "1218120"
  },
  {
    "text": "laptops this nice shiny new Mac M1 that I have is an arm 64 machine",
    "start": "1218120",
    "end": "1223220"
  },
  {
    "text": "and we'd like to make the development process experience as neat and efficient for developers using non-amd 64 Hardware",
    "start": "1223220",
    "end": "1230059"
  },
  {
    "text": "so suppose I'm really scoping the questions around multi-architecture support at the moment to considering",
    "start": "1230059",
    "end": "1236299"
  },
  {
    "text": "Linux and AMD 64 and Linux and arm 64. so how do we go about supporting",
    "start": "1236299",
    "end": "1244059"
  },
  {
    "text": "multi-architecture at buildpax is it simply the case that if we provide arm",
    "start": "1244059",
    "end": "1249500"
  },
  {
    "text": "64 build packs then the problem is solved well I kind of want to think",
    "start": "1249500",
    "end": "1254539"
  },
  {
    "text": "about the problem from the perspective of each of our three user groups",
    "start": "1254539",
    "end": "1260240"
  },
  {
    "text": "um from the perspective of an application developer an application developer as we figured out before just",
    "start": "1260240",
    "end": "1265580"
  },
  {
    "text": "wants to build a production image and it seems reasonable to provide some way for the application developers to choose an",
    "start": "1265580",
    "end": "1272419"
  },
  {
    "text": "output image architecture in this case I've given them a dash dash platform Linux arm 64.",
    "start": "1272419",
    "end": "1279260"
  },
  {
    "text": "and if we continue to use pack as an example you can see how this this might be implemented or this might be",
    "start": "1279260",
    "end": "1284900"
  },
  {
    "text": "presented and the output would be a collection of layers represented by a single image manifest",
    "start": "1284900",
    "end": "1290960"
  },
  {
    "text": "it might be useful or at least that's what I'm intending to do I just got to take a quick look at the oci our",
    "start": "1290960",
    "end": "1296539"
  },
  {
    "text": "multi-architecture oci manifests just to convince ourselves that the user",
    "start": "1296539",
    "end": "1301580"
  },
  {
    "text": "experience could be as straightforward as what I'm claiming here",
    "start": "1301580",
    "end": "1306919"
  },
  {
    "text": "so in this here uh if you've not seen this kind of stuff before I'm using crane which is a really nice tool to",
    "start": "1306919",
    "end": "1314000"
  },
  {
    "text": "view the Manifest of the official busy box image and I've filtered this in some ways Because the actual output manifest",
    "start": "1314000",
    "end": "1320299"
  },
  {
    "text": "that crane shows is you know hundreds of lines long and what we can see here is an image",
    "start": "1320299",
    "end": "1325580"
  },
  {
    "text": "index contained which contains multiple manifests and each manifest in the image",
    "start": "1325580",
    "end": "1331159"
  },
  {
    "text": "index contains a platform property and so from the perspective of our end user they can run you know podman run",
    "start": "1331159",
    "end": "1337880"
  },
  {
    "text": "BusyBox or Docker run busy box and the container engine chooses the most appropriate image for their particular",
    "start": "1337880",
    "end": "1344720"
  },
  {
    "text": "platform so in general we can produce multi-architecture images",
    "start": "1344720",
    "end": "1350960"
  },
  {
    "text": "by providing manifest lists and the Manifest list on the left hand side of",
    "start": "1350960",
    "end": "1356960"
  },
  {
    "text": "this diagram is a list of manifests with the platform metadata and from the",
    "start": "1356960",
    "end": "1362000"
  },
  {
    "text": "Manifest list you can find the image for your platform so this is all part of the oci specification for images that we all",
    "start": "1362000",
    "end": "1368419"
  },
  {
    "text": "know and love that we've all been running for probably many years at this stage",
    "start": "1368419",
    "end": "1374559"
  },
  {
    "text": "from the perspective of billpack authors though the question becomes a little bit more complex and I'm aware that many",
    "start": "1376100",
    "end": "1382100"
  },
  {
    "text": "there aren't many of us in the room who are build packs authors or who want to be buildbox authors but Bill Peck's",
    "start": "1382100",
    "end": "1388280"
  },
  {
    "text": "authors do need to support language specific technology stacks for example build pack authors might want to provide",
    "start": "1388280",
    "end": "1394820"
  },
  {
    "text": "a list or a set of build packs to support applications written in go now the go ecosystem is designed to",
    "start": "1394820",
    "end": "1401480"
  },
  {
    "text": "really smoothly support this multi-architecture use case which is great however it's not the case if you're",
    "start": "1401480",
    "end": "1408380"
  },
  {
    "text": "providing a set of build packs that support python or node.js or Ruby or even Java or other technology stacks for",
    "start": "1408380",
    "end": "1415820"
  },
  {
    "text": "example the if you're providing python build packs that provide a python runtime you need to have a python",
    "start": "1415820",
    "end": "1422179"
  },
  {
    "text": "runtime that's available for your AMD 64 and your arm 64 platform it's also the",
    "start": "1422179",
    "end": "1427820"
  },
  {
    "text": "case that um you know build packs contribute that contribute dependencies and they need to be aware of",
    "start": "1427820",
    "end": "1433159"
  },
  {
    "text": "architectural differences for example many pip dependencies under the hood use",
    "start": "1433159",
    "end": "1438740"
  },
  {
    "text": "GCC or something to compile native components for each platform so our approach to building to",
    "start": "1438740",
    "end": "1446000"
  },
  {
    "text": "supporting multi-architecture build packs also needs to be able to support Bill Pack's authors in maintaining their",
    "start": "1446000",
    "end": "1451880"
  },
  {
    "text": "current high quality of code bases so we need to support them to test on multiple architectures",
    "start": "1451880",
    "end": "1458860"
  },
  {
    "text": "and finally look at the multi-architecture images from the perspective of a platform operator",
    "start": "1459260",
    "end": "1464900"
  },
  {
    "text": "a platform operator probably wants to pick and choose the architectures that they support for production builds",
    "start": "1464900",
    "end": "1471799"
  },
  {
    "text": "and the question arises do all operators have access to the actual Target Hardware at build time so for example or",
    "start": "1471799",
    "end": "1478520"
  },
  {
    "text": "that is to say would an operator want to build all images on AMD 64 Hardware that they have available but actually allow",
    "start": "1478520",
    "end": "1485360"
  },
  {
    "text": "deployment on both AMD 64 and arm 64. so of the three classes of build pack users",
    "start": "1485360",
    "end": "1493760"
  },
  {
    "text": "platform operators these people who run a build our kpac instance for example",
    "start": "1493760",
    "end": "1499400"
  },
  {
    "text": "they need to uh figure out how to support multi-architecture build packs to build multi-architecture images build",
    "start": "1499400",
    "end": "1505100"
  },
  {
    "text": "pack authors I want a probably want a mechanism to distinguish architectures",
    "start": "1505100",
    "end": "1510500"
  },
  {
    "text": "and then actually test their build packs on multiple architectures",
    "start": "1510500",
    "end": "1515840"
  },
  {
    "text": "and finally last but the most important class of user application developers need only be aware probably of the",
    "start": "1515840",
    "end": "1522860"
  },
  {
    "text": "architectures that their platform is intended or their application is intended to support",
    "start": "1522860",
    "end": "1529059"
  },
  {
    "text": "I'm I'm going to argue uh that there are kind of three main approaches to",
    "start": "1529159",
    "end": "1534500"
  },
  {
    "text": "considering generating multi-architectures images there's a cross compilation approach an emulation approach and a bare metal approach and",
    "start": "1534500",
    "end": "1541520"
  },
  {
    "text": "again if you're new to build packs maybe this kind of next four or five minutes of the talk is going to uh not",
    "start": "1541520",
    "end": "1547400"
  },
  {
    "text": "particularly uh apply to you but you know hopefully we learned something fun anyway 10 minutes thank you very much",
    "start": "1547400",
    "end": "1554179"
  },
  {
    "text": "at the end of this entire process whatever implementation week Technique we use we want something that I'm going",
    "start": "1554179",
    "end": "1560120"
  },
  {
    "text": "to diagram like this I'm going to present it like this we want an image manifest list and we want that image",
    "start": "1560120",
    "end": "1566480"
  },
  {
    "text": "manifest list to point at architecture specific images but in this instance we",
    "start": "1566480",
    "end": "1571640"
  },
  {
    "text": "want architecture specific layers the Run image for md64 and I wrote a limit",
    "start": "1571640",
    "end": "1577279"
  },
  {
    "text": "for AMD 64. we want architecture specific layers on top of those but we also might want to be able to share some",
    "start": "1577279",
    "end": "1583159"
  },
  {
    "text": "non-architecture specific layers between the two images",
    "start": "1583159",
    "end": "1588039"
  },
  {
    "text": "so um what would happen or how would we do go about doing this if we use the cross",
    "start": "1588440",
    "end": "1594380"
  },
  {
    "text": "compilation process so in this diagram I've drawn kind of a representation of the Builder on top",
    "start": "1594380",
    "end": "1600980"
  },
  {
    "text": "which I introduced a bit earlier uh I've drawn below that in the bottom left hand corner a representation of how",
    "start": "1600980",
    "end": "1607159"
  },
  {
    "text": "packed in this case I've chosen one platform it might execute the build steps or some of the build steps and I'm",
    "start": "1607159",
    "end": "1613400"
  },
  {
    "text": "using that kind of stacked image layers diagram in the in the bottom right hand corner to represent the output image",
    "start": "1613400",
    "end": "1618860"
  },
  {
    "text": "and assuming that we have an AMD 64 host machine we might only need to provide a",
    "start": "1618860",
    "end": "1624500"
  },
  {
    "text": "single amd64 Builder which points to the Run image for each which points to multiple Run images one for each output",
    "start": "1624500",
    "end": "1631460"
  },
  {
    "text": "architecture and the host build packs could cross compile native dependencies for the Target run architecture so",
    "start": "1631460",
    "end": "1638240"
  },
  {
    "text": "internally a platform like Pac could run a single detect process and then",
    "start": "1638240",
    "end": "1643760"
  },
  {
    "text": "wouldn't build an export process per Target architecture",
    "start": "1643760",
    "end": "1648520"
  },
  {
    "text": "in short though ah click yay the cross compilation approach is most",
    "start": "1649279",
    "end": "1655700"
  },
  {
    "text": "simple for platform operators it's probably most simple for the people that we probably don't need to simplify the",
    "start": "1655700",
    "end": "1660860"
  },
  {
    "text": "process for the course compilation approach really does probably make life difficult for",
    "start": "1660860",
    "end": "1666980"
  },
  {
    "text": "end users who may find that their native dependencies or their python apple or",
    "start": "1666980",
    "end": "1672260"
  },
  {
    "text": "python dependencies which have NATO's dependencies simply don't cross compile putting them in the situation where they",
    "start": "1672260",
    "end": "1677659"
  },
  {
    "text": "have to talk to the Upstream developers to make things easily cross compile so you know pros and cons but I'm kind",
    "start": "1677659",
    "end": "1684980"
  },
  {
    "text": "of leaning on the side of cons for this approach",
    "start": "1684980",
    "end": "1688720"
  },
  {
    "text": "what did we use kind of an emulation in place of uh cross compilation suppose",
    "start": "1690679",
    "end": "1696620"
  },
  {
    "text": "again we're on the amd64 machine and the Builder image then requires a run image per Target architecture a set of build",
    "start": "1696620",
    "end": "1703880"
  },
  {
    "text": "packs for per Target architecture so the Builder itself is now effectively composed of two different builders and a",
    "start": "1703880",
    "end": "1710480"
  },
  {
    "text": "life cycle binary per Target architecture again the platform could perform a single detect phase",
    "start": "1710480",
    "end": "1716960"
  },
  {
    "text": "but it has to spin up virtual or emulated instances of the other other steps for most output Target platforms",
    "start": "1716960",
    "end": "1725600"
  },
  {
    "text": "now again pros and cons of this approach I'm keeping an eye on time um",
    "start": "1725600",
    "end": "1732140"
  },
  {
    "text": "so while we have to provide build packs or uh for each Target platform I would argue that we kind of aim platform",
    "start": "1732140",
    "end": "1739820"
  },
  {
    "text": "parity for end users and by that I mean that if your dependency is supported on",
    "start": "1739820",
    "end": "1745820"
  },
  {
    "text": "the target platform an arm64 platform it's highly likely to compile on an emulator for that Target platform",
    "start": "1745820",
    "end": "1753980"
  },
  {
    "text": "of course the problem with ambulation is that it incurs the emulator overhead and we're restricted to the architectures",
    "start": "1753980",
    "end": "1760640"
  },
  {
    "text": "that emulators such as something like qemu support which gives us the kind of final uh of",
    "start": "1760640",
    "end": "1767360"
  },
  {
    "text": "the three approaches that I want to present today that uh there's a bare metal approach",
    "start": "1767360",
    "end": "1773419"
  },
  {
    "text": "where we assume that the platform operation operator has the hardware available for all target platforms",
    "start": "1773419",
    "end": "1779419"
  },
  {
    "text": "unlike the case in the emulator approach we need a builder to provide this effectively two different Builders so a",
    "start": "1779419",
    "end": "1785120"
  },
  {
    "text": "single Builder image that that points to two different builders and where the bare metal approach",
    "start": "1785120",
    "end": "1790159"
  },
  {
    "text": "differs is that the platform needs to coordinate building between two different hosts now again what's clear in this case is",
    "start": "1790159",
    "end": "1798320"
  },
  {
    "text": "that using multiple bare metal holes will introduce new failure modes for platforms that we may not may or may not",
    "start": "1798320",
    "end": "1804740"
  },
  {
    "text": "want to um to to consider to put into a platform that is to say the",
    "start": "1804740",
    "end": "1811220"
  },
  {
    "text": "platform now has to deal with the networking failures uh when talking to multiple bare metal hosts",
    "start": "1811220",
    "end": "1817039"
  },
  {
    "text": "and this can impact both end users and platform operators however end users in this case would",
    "start": "1817039",
    "end": "1823520"
  },
  {
    "text": "benefit from native compilation speeds on all platforms which is certainly a bonus",
    "start": "1823520",
    "end": "1829399"
  },
  {
    "text": "so to summarize all this oh I need to look at this slide what I've done so far is kind of outline",
    "start": "1829399",
    "end": "1836240"
  },
  {
    "text": "the build packs process so hopefully those of you who are in need to build packs I've learned a little bit about the buildbox process I briefly all too",
    "start": "1836240",
    "end": "1843740"
  },
  {
    "text": "briefly consider the new extender functionality which has taken us months to develop and is really a cool piece of",
    "start": "1843740",
    "end": "1849200"
  },
  {
    "text": "functionality and I've presented three approaches to implementing multi-architecture image builds that is",
    "start": "1849200",
    "end": "1854240"
  },
  {
    "text": "cross compilation Hardware emulation or the bare metal approach of having multiple hosts",
    "start": "1854240",
    "end": "1860059"
  },
  {
    "text": "and why I've done this is because I want to accelerate this discussion around multi-architecture images as I said I",
    "start": "1860059",
    "end": "1866779"
  },
  {
    "text": "have no actual Solutions in this talk I really only have questions",
    "start": "1866779",
    "end": "1872600"
  },
  {
    "text": "so what are the next step well platforms I think need to be able to create oci manifest in indices or oci manufacts",
    "start": "1872600",
    "end": "1879980"
  },
  {
    "text": "indexes this is independent of the approach that we take to generate the multi-architecture images no matter",
    "start": "1879980",
    "end": "1886580"
  },
  {
    "text": "which of these three approaches we choose we still have to generate multi oci manifest indexes",
    "start": "1886580",
    "end": "1893659"
  },
  {
    "text": "and depending on the approach that we choose platforms may need to consume multi-architecture builders and nicely",
    "start": "1893659",
    "end": "1900679"
  },
  {
    "text": "after a conversation yesterday with Steve and I think we're closer to this goal than I originally thought we were when I started writing this talk",
    "start": "1900679",
    "end": "1906860"
  },
  {
    "text": "so where does that leave us well we want your opinions people there are links here to to GitHub issues",
    "start": "1906860",
    "end": "1913279"
  },
  {
    "text": "that discuss different aspects of the multi-argate of multi-architecture images please visit these give us your",
    "start": "1913279",
    "end": "1919580"
  },
  {
    "text": "opinion give us some feedback and if you get there that's where I can talk if",
    "start": "1919580",
    "end": "1925159"
  },
  {
    "text": "GitHub isn't your communication tool of choice then find us at the buildpacks.io booth where we can see you face to face",
    "start": "1925159",
    "end": "1931100"
  },
  {
    "text": "and talk with you finally thank you very much for your time I hope",
    "start": "1931100",
    "end": "1937880"
  },
  {
    "text": "this is the start of a conversation and you know if you can't visit the bill Pax Booth please catch up with us async",
    "start": "1937880",
    "end": "1944120"
  },
  {
    "text": "either on the bill packs community on slack on the cncf slack on Twitter or",
    "start": "1944120",
    "end": "1949340"
  },
  {
    "text": "you know contribute some code on GitHub thank you very much for your time [Applause]",
    "start": "1949340",
    "end": "1960140"
  },
  {
    "text": "a timekeeping friend is around somewhere do I have time to take a question or two",
    "start": "1960860",
    "end": "1966399"
  },
  {
    "text": "I don't know yes we have time to take a question anyone got any questions",
    "start": "1966620",
    "end": "1972500"
  },
  {
    "text": "hi um I've got to give you a mic",
    "start": "1972500",
    "end": "1976960"
  },
  {
    "text": "I'll just shout it out and I'll repeat it then",
    "start": "1978200",
    "end": "1981940"
  },
  {
    "text": "right uh the question is why would I want to use something like build packs as opposed to Docker files it's it's a",
    "start": "1987200",
    "end": "1992600"
  },
  {
    "text": "common question that we get I'm going to give you the kind of one minute answer um Docker files are great I really liked",
    "start": "1992600",
    "end": "1999980"
  },
  {
    "text": "what they do what I have found or what many of us have found is that if we've",
    "start": "1999980",
    "end": "2005140"
  },
  {
    "text": "got tens or hundreds of projects uh it then becomes difficult to maintain",
    "start": "2005140",
    "end": "2010600"
  },
  {
    "text": "sometimes difficult to maintain Docker Falls particularly as things change over time so for example",
    "start": "2010600",
    "end": "2016320"
  },
  {
    "text": "python36 has recently fallen out of support I think",
    "start": "2016320",
    "end": "2021700"
  },
  {
    "text": "um and what we'd like to do is upgrade all the applications that use python36 to at least python37",
    "start": "2021700",
    "end": "2028120"
  },
  {
    "text": "now in the docker files approach you write a bot or something that goes along scans each Docker file and and does the",
    "start": "2028120",
    "end": "2035500"
  },
  {
    "text": "update in place maybe it submits a PR in the build packs approach particularly when I use a centralized uh build form",
    "start": "2035500",
    "end": "2042220"
  },
  {
    "text": "like kpac what I basically say is that python37 now becomes the default Builder",
    "start": "2042220",
    "end": "2048040"
  },
  {
    "text": "and effectively because we've got s-bombs or we've got knowledge of what goes on in all of our images we can say",
    "start": "2048040",
    "end": "2053740"
  },
  {
    "text": "let's rebuild all those images that used Python 360 to use python37 instead",
    "start": "2053740",
    "end": "2059260"
  },
  {
    "text": "so there's advantages to the buildbacks approach they're faster in a lot of respects it's easier from my perspective",
    "start": "2059260",
    "end": "2066220"
  },
  {
    "text": "to centralize a lot of the policy that I need to roll out to the rest of my developers in my company and it takes",
    "start": "2066220",
    "end": "2071378"
  },
  {
    "text": "load cognitive load off my developers some of my developers or some of the developers that we have are well all of",
    "start": "2071379",
    "end": "2077919"
  },
  {
    "text": "them are brilliant but a lot of them are very specialized and if I ask them to write a Docker file of course they can",
    "start": "2077919",
    "end": "2083618"
  },
  {
    "text": "because they're brilliant but it's really taking them away from their bread and butter which might be some kind of a",
    "start": "2083619",
    "end": "2089440"
  },
  {
    "text": "AI machine learning stuff or financial analytics or that kind of stuff and if I can take that cognitive load off them",
    "start": "2089440",
    "end": "2095440"
  },
  {
    "text": "and put it onto a team of one or two people who can centralize all this and all this policy well we make a lot of",
    "start": "2095440",
    "end": "2101800"
  },
  {
    "text": "problems go away does that answer your question yeah fantastic and talk to me at the booth if you want some more the in-depth answers",
    "start": "2101800",
    "end": "2109180"
  },
  {
    "text": "he's also the time keeper so if he gives you the Mikey definitely have time to answer to ask the question thank you I",
    "start": "2109180",
    "end": "2114520"
  },
  {
    "text": "was wondering how do you allow users to inject their own dependencies you made the python example let's say one of the",
    "start": "2114520",
    "end": "2121359"
  },
  {
    "text": "hundred projects has some C library that they install in their Docker container but like how does that work if they all",
    "start": "2121359",
    "end": "2127240"
  },
  {
    "text": "have a build pack that's centrally managed yeah no that's a really good question I probably don't have time to",
    "start": "2127240",
    "end": "2132640"
  },
  {
    "text": "get to the depths of it right now but the wait three minutes thanks what we end up what you end up doing is writing",
    "start": "2132640",
    "end": "2139240"
  },
  {
    "text": "your applications like you normally would so in a python case because many of us are familiar with that it's common",
    "start": "2139240",
    "end": "2145119"
  },
  {
    "text": "to have a requirements.txt or you put your dependencies in your Pi project.tommel file under the requires",
    "start": "2145119",
    "end": "2151599"
  },
  {
    "text": "thing that new thing that I haven't quite figured out yet right A C library that's a more",
    "start": "2151599",
    "end": "2159520"
  },
  {
    "text": "difficult question generally speaking for python dependencies if they compile their own C libraries that works if you",
    "start": "2159520",
    "end": "2166480"
  },
  {
    "text": "want to install a C library well um I think the best answer is those",
    "start": "2166480",
    "end": "2172240"
  },
  {
    "text": "would normally be installed well how has the best way to answer this question I've done it in two or three different",
    "start": "2172240",
    "end": "2178119"
  },
  {
    "text": "ways one way is a hack which I'm not going to tell you about um the other way is that you might",
    "start": "2178119",
    "end": "2184540"
  },
  {
    "text": "install the C library on the Run image to start with and now with the new",
    "start": "2184540",
    "end": "2190060"
  },
  {
    "text": "approach of allowing Docker files to switch the Run image you can switch between a lot of the Run images depending on",
    "start": "2190060",
    "end": "2196780"
  },
  {
    "text": "what's building on top of them but previously what I would do if there's a common C library that a lot of our",
    "start": "2196780",
    "end": "2202060"
  },
  {
    "text": "application developers use I would install that as part using RPM or our",
    "start": "2202060",
    "end": "2207280"
  },
  {
    "text": "apt-get On The Run image that we shipped to everything fantastic thank you very much",
    "start": "2207280",
    "end": "2214140"
  },
  {
    "text": "one more question please",
    "start": "2214420",
    "end": "2217619"
  },
  {
    "text": "go into that example you had of running it natively and you've got multiple hosts and potentially running those",
    "start": "2220720",
    "end": "2227079"
  },
  {
    "text": "builds in parallel is the mercep something that you have to like manually orchestrate together or is that",
    "start": "2227079",
    "end": "2235060"
  },
  {
    "text": "something that potentially each build stream could do and potentially uh have",
    "start": "2235060",
    "end": "2241900"
  },
  {
    "text": "the map has to be created dynamically no that that's it I mean I think that the question needs to be asked the way I'm",
    "start": "2241900",
    "end": "2248859"
  },
  {
    "text": "currently thinking about it is that yes they can run in parallel uh each of the output images might get pushed to a",
    "start": "2248859",
    "end": "2256180"
  },
  {
    "text": "registry and then at the end of all that you might have some kind of process that kicks in and computes the Manifest list",
    "start": "2256180",
    "end": "2262599"
  },
  {
    "text": "for um for all the output images for from the different Target architectures but it does lead to the questions like",
    "start": "2262599",
    "end": "2269200"
  },
  {
    "text": "if I want to build for two architectures and if one of the hosts fails this is a",
    "start": "2269200",
    "end": "2275020"
  },
  {
    "text": "a failure mode that we previously hadn't had to consider in in uh buildpax",
    "start": "2275020",
    "end": "2280180"
  },
  {
    "text": "platforms so how do we handle that how do we Port that to the end user is that something",
    "start": "2280180",
    "end": "2285220"
  },
  {
    "text": "that we want to support um our platform operators comfortable with this approach",
    "start": "2285220",
    "end": "2290500"
  },
  {
    "text": "um I think you're asking the right questions and uh I I don't have any answers at this stage",
    "start": "2290500",
    "end": "2297460"
  },
  {
    "text": "brilliant um thank you very much for being a wonderful audience um and billparks.io Booth downstairs",
    "start": "2297460",
    "end": "2303099"
  },
  {
    "text": "around with all the all the cncf projects come down and find us and get some nice swag",
    "start": "2303099",
    "end": "2309838"
  },
  {
    "text": "[Applause]",
    "start": "2310210",
    "end": "2313739"
  }
]