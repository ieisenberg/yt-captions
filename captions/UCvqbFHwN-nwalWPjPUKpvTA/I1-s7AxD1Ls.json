[
  {
    "text": "so welcome good morning so yeah it's cool that this",
    "start": "399",
    "end": "6560"
  },
  {
    "text": "started so uh welcome to kubecon and today we are going to talk about",
    "start": "6560",
    "end": "12480"
  },
  {
    "text": "when kimuras is your platform and some design patterns for extensible controllers so my name is",
    "start": "12480",
    "end": "18960"
  },
  {
    "text": "rafael i work for suse i've been working with with kubernetes for",
    "start": "18960",
    "end": "24240"
  },
  {
    "text": "five years and a half already and yeah i have i have contributed a little",
    "start": "24240",
    "end": "29760"
  },
  {
    "text": "to cube admin for example and with me it's fabrizio hello everyone i'm fabrizio pandini i'm",
    "start": "29760",
    "end": "36320"
  },
  {
    "text": "staff engineer at vmware i'm tech lead in seacrest and c-class",
    "start": "36320",
    "end": "41440"
  },
  {
    "text": "life cycle and i also work to the in the class rpi project",
    "start": "41440",
    "end": "46559"
  },
  {
    "text": "so before starting today let's let's take a",
    "start": "46559",
    "end": "52160"
  },
  {
    "text": "look at the problem that we are trying to solve so",
    "start": "52160",
    "end": "58399"
  },
  {
    "text": "today more and more people are developing kubernetes extension",
    "start": "58399",
    "end": "64080"
  },
  {
    "text": "developing a controller is becoming a mainstream practice to solve a problem in a cloud-native way",
    "start": "64080",
    "end": "71280"
  },
  {
    "text": "you can use a tool like kuber builder operator sdk to create a kubernetes",
    "start": "71280",
    "end": "76479"
  },
  {
    "text": "controller in few minutes and and the idea is that the controller can watch a",
    "start": "76479",
    "end": "82880"
  },
  {
    "text": "customer resource and basically reconcile the state of your system to the to the to the desired state that you",
    "start": "82880",
    "end": "89360"
  },
  {
    "text": "define in the spec this is great we we all know this uh this pattern",
    "start": "89360",
    "end": "95119"
  },
  {
    "text": "but what happened when your business problems became complex",
    "start": "95119",
    "end": "101680"
  },
  {
    "text": "basically you get to align that every developer",
    "start": "101680",
    "end": "106720"
  },
  {
    "text": "must cross where your controller alone is not enough to solve the problem",
    "start": "106720",
    "end": "113040"
  },
  {
    "text": "so today presentation is about sharing some pattern some lesson learned",
    "start": "113040",
    "end": "119520"
  },
  {
    "text": "about how to cross this line and i before starting i i will just to point",
    "start": "119520",
    "end": "127439"
  },
  {
    "text": "out that what we are showing today is based on experience the business periods of rafael working on projects",
    "start": "127439",
    "end": "134160"
  },
  {
    "text": "like cuba warden is basing on experience that we learned in cluster api",
    "start": "134160",
    "end": "139360"
  },
  {
    "text": "and there are also some idea on how we can improve this in the future",
    "start": "139360",
    "end": "145360"
  },
  {
    "text": "yeah so now that the premium statement is clear um it's fine to start introducing the prior the the answer to",
    "start": "148400",
    "end": "154560"
  },
  {
    "text": "the to the question or to the problem and so when we are designing extensible controllers there",
    "start": "154560",
    "end": "161040"
  },
  {
    "text": "are mainly two ways to do that and one way is to extend the capabilities of a",
    "start": "161040",
    "end": "166800"
  },
  {
    "text": "single controller but that quickly gets out of hand because it's hard to maintain it's it's hard to keep track of",
    "start": "166800",
    "end": "173360"
  },
  {
    "text": "everything and the other uh it's in case you need more than you can have",
    "start": "173360",
    "end": "180000"
  },
  {
    "text": "more than one controller in order to reconcile all these resources",
    "start": "180000",
    "end": "185040"
  },
  {
    "text": "but then you need to you need to keep track of of everything and they need you need to orchestrate them somehow so in",
    "start": "185040",
    "end": "192239"
  },
  {
    "text": "the next slides uh what we are going to do is to check this last part for now",
    "start": "192239",
    "end": "198720"
  },
  {
    "text": "so before starting let's clarify uh some terms because there are some loaded terms in in this in this thing and so",
    "start": "198720",
    "end": "205040"
  },
  {
    "text": "for example uh the controller what we refer as a controller in this stock and in general is just a single reconciled",
    "start": "205040",
    "end": "211040"
  },
  {
    "text": "loop of a resource so what we are doing is just going through a resource and reconciling the the the expect the aspect of the",
    "start": "211040",
    "end": "218080"
  },
  {
    "text": "state with the real estate of the of the resource then a manager an operator",
    "start": "218080",
    "end": "223760"
  },
  {
    "text": "is a set of controllers so you can think of it as the cube controller manager for example",
    "start": "223760",
    "end": "229680"
  },
  {
    "text": "a custom resource is an instance of a custom resource definition and then we have the owners in concept",
    "start": "229680",
    "end": "236799"
  },
  {
    "text": "which is a controller owns a resource and is this controller they're responsible for driving the observed",
    "start": "236799",
    "end": "244319"
  },
  {
    "text": "state of a resource to the desired state of this resource and then the act of watching is being",
    "start": "244319",
    "end": "251519"
  },
  {
    "text": "being be interested in in something happening in the cluster so we need to act um before because of that in order",
    "start": "251519",
    "end": "258799"
  },
  {
    "text": "to drive our resource to the desired state of what we observed in the world",
    "start": "258799",
    "end": "265120"
  },
  {
    "text": "okay so finally it's time to start talking about design pattern and for warming up",
    "start": "266240",
    "end": "272720"
  },
  {
    "text": "let's start to focus on our first family of design pattern and",
    "start": "272720",
    "end": "278479"
  },
  {
    "text": "and what we are focusing on is how to orchestrate many controllers it could seem",
    "start": "278479",
    "end": "284720"
  },
  {
    "text": "counterintuitive starting from many controllers",
    "start": "284720",
    "end": "290000"
  },
  {
    "text": "but in reality we have this kind of pattern in kubernetes since the beginning so we",
    "start": "290000",
    "end": "296400"
  },
  {
    "text": "start from this set of pattern because we hope that they are familiar to the audience and",
    "start": "296400",
    "end": "301759"
  },
  {
    "text": "and this will basically help to build up uh for the rest of the presentation",
    "start": "301759",
    "end": "307759"
  },
  {
    "text": "more specifically we are going to look at three partners today a controller watch",
    "start": "307759",
    "end": "312960"
  },
  {
    "text": "two controllers watching the same object or many controller watching a set of",
    "start": "312960",
    "end": "319280"
  },
  {
    "text": "related object and the last one is api contracts",
    "start": "319280",
    "end": "325199"
  },
  {
    "text": "yeah so let's start with let's start talking about what's in um about the controls",
    "start": "325199",
    "end": "330720"
  },
  {
    "text": "what's in the same object so idea is pretty simple we have one controller that is responsible that owns a custom",
    "start": "330720",
    "end": "337440"
  },
  {
    "text": "resource and is responsible for driving this resource in this case for example if you think about cluster api we can",
    "start": "337440",
    "end": "343520"
  },
  {
    "text": "say that machine controller owns the machine custom resource so just as a reminder let's let's i'm going to repeat",
    "start": "343520",
    "end": "349759"
  },
  {
    "text": "that again the idea is that you have the the external world that is this machine",
    "start": "349759",
    "end": "355039"
  },
  {
    "text": "real machine somewheres at some cloud for example and what i'm going to do",
    "start": "355039",
    "end": "360080"
  },
  {
    "text": "here is to drive the the the where i observe in the world to the desired state of this resource so this would",
    "start": "360080",
    "end": "366880"
  },
  {
    "text": "mean zoning and so say that we want to extend this uh this controller and we don't want to",
    "start": "366880",
    "end": "374240"
  },
  {
    "text": "introduce more logic into it so one straightforward way would be that we have yet another controller in this case",
    "start": "374240",
    "end": "380960"
  },
  {
    "text": "for example we want to create backups so we have the volumes backup controller and it's going to do backups from time",
    "start": "380960",
    "end": "387280"
  },
  {
    "text": "to time when we want it to do but for example we are going to to delete a machine right now and we want",
    "start": "387280",
    "end": "393039"
  },
  {
    "text": "to to make a backup right before this machine is really deleted so what we can do for example instead of putting that",
    "start": "393039",
    "end": "399199"
  },
  {
    "text": "logic into the machine controller which will make it harder to maintain harder to understand we have just the volumes",
    "start": "399199",
    "end": "405520"
  },
  {
    "text": "backup controller that is just doing the backup and what it's going to do is something is going to add a finalizer to",
    "start": "405520",
    "end": "411440"
  },
  {
    "text": "other to our resource and this volumes backup controller for example is going to to watch for this object and when it",
    "start": "411440",
    "end": "418160"
  },
  {
    "text": "finds a deletion time stamp on it it's going to do all the triggering of the backup and then when it's done it will",
    "start": "418160",
    "end": "424080"
  },
  {
    "text": "remove the finalizer and so kubernetes will garbage collect the resource so in the end the machine customer the machine",
    "start": "424080",
    "end": "430479"
  },
  {
    "text": "custom resource will get garbage collected when we have the final backup of the machine before even it's",
    "start": "430479",
    "end": "436960"
  },
  {
    "text": "completely gone",
    "start": "436960",
    "end": "439759"
  },
  {
    "text": "so some lessons learned here use when you want to make progress after",
    "start": "443199",
    "end": "449520"
  },
  {
    "text": "a precondition is met in this case for example the delete on timestamp of the controller is non-null and i want to do",
    "start": "449520",
    "end": "455520"
  },
  {
    "text": "something like i want to do a backup right now the pros is that the repos the responsibility is very well defined i'm",
    "start": "455520",
    "end": "461199"
  },
  {
    "text": "not adding complexity to the controller that i have i i am adding this on another controller that is doing only",
    "start": "461199",
    "end": "466720"
  },
  {
    "text": "this uh it's a battle tested pattern we know it very well in kubernetes and we",
    "start": "466720",
    "end": "471759"
  },
  {
    "text": "see this on lots of controllers that are very widely used",
    "start": "471759",
    "end": "476960"
  },
  {
    "text": "and and some cons for example is that yeah you you need to orchestrate somehow so in this case you could add",
    "start": "476960",
    "end": "483039"
  },
  {
    "text": "annotations or you could have something to to to sequence your operations if you are working with with a single resource",
    "start": "483039",
    "end": "490800"
  },
  {
    "text": "and then uh there is behavioral dependencies between controllers that are not very well documented we'll go through that later on uh but yeah the we",
    "start": "490800",
    "end": "497840"
  },
  {
    "text": "we need to document this kind of behavioral dependencies and this is this is a kind of this of this pattern",
    "start": "497840",
    "end": "504319"
  },
  {
    "text": "okay let's move to a slightly more complex uh pattern and also this is existing",
    "start": "504319",
    "end": "510560"
  },
  {
    "text": "kubernetes since the early days so we are using an example from kubernetes you all know you all",
    "start": "510560",
    "end": "517039"
  },
  {
    "text": "know that there is a deployment controller that owns the deployment and",
    "start": "517039",
    "end": "522240"
  },
  {
    "text": "when the primary is reconciled what happens is that it creates another resource",
    "start": "522240",
    "end": "529519"
  },
  {
    "text": "which is the replica set so let's talk for a second on on what is",
    "start": "529519",
    "end": "535519"
  },
  {
    "text": "happening is that there is a relation between two customer",
    "start": "535519",
    "end": "541040"
  },
  {
    "text": "resources in this the simplest way to document this relation is saying that",
    "start": "541040",
    "end": "546720"
  },
  {
    "text": "this is a parent-child relation okay and second",
    "start": "546720",
    "end": "551760"
  },
  {
    "text": "there is also like an intimate knowledge between those pieces so the deployment",
    "start": "551760",
    "end": "558160"
  },
  {
    "text": "controller know exactly what a replica set is how the spec is done how the",
    "start": "558160",
    "end": "564320"
  },
  {
    "text": "status uh updates so",
    "start": "564320",
    "end": "569440"
  },
  {
    "text": "those are the principle of this pattern and the last bit is that there is we have a second controller",
    "start": "569680",
    "end": "576720"
  },
  {
    "text": "that basically owns and is responsible for for for the replica set",
    "start": "576720",
    "end": "582800"
  },
  {
    "text": "the first controller close the loop by watching",
    "start": "582800",
    "end": "588000"
  },
  {
    "text": "how the replica set is is uh progressing and basically rolling up the state at",
    "start": "588000",
    "end": "593360"
  },
  {
    "text": "deployment level so this is a pattern that we i hope that we we all known",
    "start": "593360",
    "end": "599360"
  },
  {
    "text": "but generalizing a little bit when we can reuse this pattern",
    "start": "599360",
    "end": "605279"
  },
  {
    "text": "so when the the main point is that we can reuse this pattern when there is a relation a",
    "start": "605279",
    "end": "611760"
  },
  {
    "text": "parent-child semantic relation between the the object that that you control",
    "start": "611760",
    "end": "617600"
  },
  {
    "text": "what are the pros is that this is battle tested it exists in",
    "start": "617600",
    "end": "622880"
  },
  {
    "text": "kubernetes and it it scaled well you can have different layering of complexity",
    "start": "622880",
    "end": "628800"
  },
  {
    "text": "machine deployment replica set and pod which are controlled by the kubelet also",
    "start": "628800",
    "end": "634480"
  },
  {
    "text": "we we all now know very well that it could become",
    "start": "634480",
    "end": "639760"
  },
  {
    "text": "pretty sophisticated you can add history exchange rollbacks",
    "start": "639760",
    "end": "646399"
  },
  {
    "text": "deployment strategy so it is a pretty powerful pattern what are",
    "start": "646399",
    "end": "651760"
  },
  {
    "text": "the cons is that we have two resources two customer resources we have two controller and",
    "start": "651760",
    "end": "659040"
  },
  {
    "text": "whenever the progressing of your process gets stuck is harder to debug you don't know",
    "start": "659040",
    "end": "666320"
  },
  {
    "text": "exactly to which controller locks to look etc etc",
    "start": "666320",
    "end": "671839"
  },
  {
    "text": "and the same is that given this intimate knowledge of the object whenever you want to change",
    "start": "671839",
    "end": "678640"
  },
  {
    "text": "something basically you have impact on on two on two controllers",
    "start": "678640",
    "end": "685279"
  },
  {
    "text": "okay after introducing these two first pattern which which are",
    "start": "686839",
    "end": "692399"
  },
  {
    "text": "our history let's start talking a little bit uh about something more complex or more fun",
    "start": "692399",
    "end": "699519"
  },
  {
    "text": "so we start talking about a pattern that we call a api contract",
    "start": "699519",
    "end": "706640"
  },
  {
    "text": "this we are using an example for cluster api so we have the a machine controller",
    "start": "706640",
    "end": "713120"
  },
  {
    "text": "that basically owns the machine and we all know that a machine could be creating on different type of",
    "start": "713120",
    "end": "720079"
  },
  {
    "text": "infrastructure in this example is we are using the sphere infrastructure but what",
    "start": "720079",
    "end": "725279"
  },
  {
    "text": "if we want to create our machine on a different infrastructure aws gte whatever",
    "start": "725279",
    "end": "733680"
  },
  {
    "text": "we don't want to rewrite a different machine controller we want",
    "start": "733680",
    "end": "738959"
  },
  {
    "text": "to use the same and what is the key to make this possible the key to to make this",
    "start": "738959",
    "end": "745360"
  },
  {
    "text": "possible is basically to identify a small set of fields",
    "start": "745360",
    "end": "750959"
  },
  {
    "text": "that are common to all the machine infrastructure implementation",
    "start": "750959",
    "end": "757200"
  },
  {
    "text": "for making this simple but it is pretty realistic we assume that",
    "start": "757200",
    "end": "762240"
  },
  {
    "text": "all the machine at the end has to have a field that is called machine infrastructure",
    "start": "762240",
    "end": "769120"
  },
  {
    "text": "ready that basically feedback to the to the machine controller the only information that he",
    "start": "769120",
    "end": "774480"
  },
  {
    "text": "cares about my machine is ready okay this field basically is our api contract",
    "start": "774480",
    "end": "782639"
  },
  {
    "text": "and by using this api contract what we can do we can create",
    "start": "782639",
    "end": "788560"
  },
  {
    "text": "a controller that owns the machine implementation but given that the dependencies between this layer down and",
    "start": "788560",
    "end": "796320"
  },
  {
    "text": "the layer up is a well-known field basically the lower level is",
    "start": "796320",
    "end": "802560"
  },
  {
    "text": "swappable and this is pretty powerful in cluster api we are using these extensively so",
    "start": "802560",
    "end": "810480"
  },
  {
    "text": "lesser learner using this part when we can use it when there is this",
    "start": "810480",
    "end": "816800"
  },
  {
    "text": "semantic relation between object between an object and a set of related",
    "start": "816800",
    "end": "822240"
  },
  {
    "text": "objects in the key word in this case is set and the example was machine and all the",
    "start": "822240",
    "end": "828480"
  },
  {
    "text": "machine infrastructure implementation okay second and",
    "start": "828480",
    "end": "834079"
  },
  {
    "text": "for most important part is that we can use this pattern when there is a it is",
    "start": "834079",
    "end": "839360"
  },
  {
    "text": "possible to identify a set of common api fields between all the machine implementation this makes the pattern",
    "start": "839360",
    "end": "846000"
  },
  {
    "text": "generic in the example we discussed about status infrastructure already",
    "start": "846000",
    "end": "851680"
  },
  {
    "text": "the pro it allows whoppable implementation it is powerful in class api where",
    "start": "851680",
    "end": "859199"
  },
  {
    "text": "i don't know more than 30 implementation of machine infrastructure so it works",
    "start": "859199",
    "end": "864240"
  },
  {
    "text": "well we use this extensively what are the cons is that",
    "start": "864240",
    "end": "869600"
  },
  {
    "text": "in order to agree agree to it to this contract is something that required discussion among",
    "start": "869600",
    "end": "875839"
  },
  {
    "text": "all the stakeholder of the stakeholder so it requires a certain degree of",
    "start": "875839",
    "end": "880880"
  },
  {
    "text": "communication and i think the classroom api community to make this possible",
    "start": "880880",
    "end": "886720"
  },
  {
    "text": "another downside also the contract is defined most probably over time you have to evolve it",
    "start": "886959",
    "end": "893680"
  },
  {
    "text": "and these again require coordination etc etc and the last bit of information is that",
    "start": "893680",
    "end": "900800"
  },
  {
    "text": "given that you cannot basically when you implement your machine controller you don't know the the concrete",
    "start": "900800",
    "end": "906720"
  },
  {
    "text": "implementation of the machine infrastructure when you implement your controller you",
    "start": "906720",
    "end": "912320"
  },
  {
    "text": "are required to use unstructured client or the gener or the generic client from",
    "start": "912320",
    "end": "917680"
  },
  {
    "text": "client go for assessing the field and this makes writing your code a little bit more",
    "start": "917680",
    "end": "924839"
  },
  {
    "text": "complex yeah one question for it so in that case uh what it's called is that since the this is the contract is so",
    "start": "924839",
    "end": "931600"
  },
  {
    "text": "small it's also easier to maintain i guess right yeah if i can give a recommendation is that",
    "start": "931600",
    "end": "938639"
  },
  {
    "text": "one tip to make this uh pattern sustainable is that when you define your contract so the common surface of api",
    "start": "938639",
    "end": "946399"
  },
  {
    "text": "between all the mobilization you have to keep as small as possible this make easier to manage and evolve over time",
    "start": "946399",
    "end": "956399"
  },
  {
    "text": "okay so great so far so good so we started from looking at how we can",
    "start": "957680",
    "end": "963839"
  },
  {
    "text": "observe one one resource with different controllers then we saw how we can have",
    "start": "963839",
    "end": "970480"
  },
  {
    "text": "strictly custom resources or even hierarchical custom resources managed and then we saw how we can have",
    "start": "970480",
    "end": "977839"
  },
  {
    "text": "a very small field of set of fields that we can put as a contract",
    "start": "977839",
    "end": "983600"
  },
  {
    "text": "now it's time to shift perspective so instead of working on on this space we are going to see how",
    "start": "983600",
    "end": "990000"
  },
  {
    "text": "we can extend a single controller and so the first one is is uh the",
    "start": "990000",
    "end": "996240"
  },
  {
    "text": "simpler one so when it comes to extend the capabilities of a single controller the first thing to notice is that this",
    "start": "996240",
    "end": "1001920"
  },
  {
    "text": "approach is not used extensively in kubernetes so we can see that for example you can plug your own scheduler",
    "start": "1001920",
    "end": "1009360"
  },
  {
    "text": "which is slightly different but you can you can do that you also have dynamic admission control but this is not really",
    "start": "1009360",
    "end": "1014720"
  },
  {
    "text": "a controller so you could say that you already have some kind of extensibility but for example the scheduler example",
    "start": "1014720",
    "end": "1020320"
  },
  {
    "text": "that i put is just replacing the scheduler is not like extending it so despite the idea of extending a control",
    "start": "1020320",
    "end": "1026798"
  },
  {
    "text": "is not yet used in core kubernetes extensively we see that on the ecosystem this is",
    "start": "1026799",
    "end": "1033360"
  },
  {
    "text": "getting traction more and more and so we are going to talk about two main designs",
    "start": "1033360",
    "end": "1038558"
  },
  {
    "text": "that will allow allow us to do this so it's one of it is in process",
    "start": "1038559",
    "end": "1043678"
  },
  {
    "text": "extensions and the other is out of process extensions so first the first one is improx",
    "start": "1043679",
    "end": "1050559"
  },
  {
    "text": "extension so the simplest way to extend a controller is to just introduce support for plugins so you could you",
    "start": "1050559",
    "end": "1057200"
  },
  {
    "text": "could think of it as selling out to a binary that you just call from the controller or using some more",
    "start": "1057200",
    "end": "1062559"
  },
  {
    "text": "sophisticated things uh like for example a plug-in or a hazy core plug-in for example",
    "start": "1062559",
    "end": "1068480"
  },
  {
    "text": "for instance one thing that you you should you should have into account is how you are going to deploy this binary",
    "start": "1068480",
    "end": "1073840"
  },
  {
    "text": "how you are going to make this binary visible to your controller so for example the bellair cli what it does",
    "start": "1073840",
    "end": "1080080"
  },
  {
    "text": "when you perform the installation you say which back-end you want to use and so it will create a it will download the",
    "start": "1080080",
    "end": "1085919"
  },
  {
    "text": "binary for you on a sidecar and so you have other examples like for example core dns if",
    "start": "1085919",
    "end": "1091760"
  },
  {
    "text": "you want to extend core dns with your specific logic you have to rebuild it so it's like different approaches to the",
    "start": "1091760",
    "end": "1097840"
  },
  {
    "text": "same problem but for example the coordinates one is a simpler approach to to the problem",
    "start": "1097840",
    "end": "1104720"
  },
  {
    "text": "so let's let's look into into the lessons learned about this one so",
    "start": "1104720",
    "end": "1110400"
  },
  {
    "text": "it's it's it's cool uh when you can execute external banners because this is the other problem uh this is running",
    "start": "1110400",
    "end": "1117280"
  },
  {
    "text": "in our in in the same name space as our controller can we trust this binary what it's going to do um for for the pros",
    "start": "1117280",
    "end": "1124720"
  },
  {
    "text": "this is similar to the cni and the valero model we already know it works we we have uh already people using that",
    "start": "1124720",
    "end": "1131679"
  },
  {
    "text": "and also the exp the error space is narrow in the sense that we don't have the network in the middle for example so",
    "start": "1131679",
    "end": "1138160"
  },
  {
    "text": "we just have a binary we call it and we wait and for for cons we need to do some kind",
    "start": "1138160",
    "end": "1144400"
  },
  {
    "text": "of binary either download or registration ahead of time so uh that's that's something that",
    "start": "1144400",
    "end": "1150880"
  },
  {
    "text": "we have to do so uh it's also hard to prevent side effects for example produced by the binary uh we need to",
    "start": "1150880",
    "end": "1157200"
  },
  {
    "text": "understand what the binary is doing is it can you run it again um it's it's the kind of problems that we find with maybe",
    "start": "1157200",
    "end": "1165200"
  },
  {
    "text": "binaries that we don't control completely and of course you need to have binary compatibility uh this is usually is not",
    "start": "1165200",
    "end": "1171840"
  },
  {
    "text": "a problem maybe but you need the os and the architecture of your machine to",
    "start": "1171840",
    "end": "1177039"
  },
  {
    "text": "match the controller where the controller is running and so because of that there is a",
    "start": "1177039",
    "end": "1182559"
  },
  {
    "text": "variant of that one that is we see also this coming more and more over time i'm",
    "start": "1182559",
    "end": "1188000"
  },
  {
    "text": "not going to put a lot of time into that but this is just the variant of webassembly instead of having a binary",
    "start": "1188000",
    "end": "1193520"
  },
  {
    "text": "binary that needs to match our os and our architecture it's a webassembly binary and our controller just creates a",
    "start": "1193520",
    "end": "1200080"
  },
  {
    "text": "runtime for webassembly and runs it and a good a good thing about this it's",
    "start": "1200080",
    "end": "1206320"
  },
  {
    "text": "basically the same it's only you can see that the the pros is um [Music]",
    "start": "1206320",
    "end": "1212400"
  },
  {
    "text": "it is going to run everywhere uh and it's also uh more like it's more",
    "start": "1212400",
    "end": "1217600"
  },
  {
    "text": "isolated than the previous one because this is going to run on our web assembly runtime and so this is this is more more",
    "start": "1217600",
    "end": "1224000"
  },
  {
    "text": "controlled okay so",
    "start": "1224000",
    "end": "1229679"
  },
  {
    "text": "now the alternative to in process plugin of course is out of",
    "start": "1229679",
    "end": "1234799"
  },
  {
    "text": "process plugin let's see how this can work so",
    "start": "1234799",
    "end": "1241840"
  },
  {
    "text": "in the solution that we are presenting what what we're proposing is that your controller needs an additional component",
    "start": "1242000",
    "end": "1249039"
  },
  {
    "text": "we are calling it essential management this extension management is",
    "start": "1249039",
    "end": "1254720"
  },
  {
    "text": "something that is responsible to watch for which plugin exists in your system",
    "start": "1254720",
    "end": "1262799"
  },
  {
    "text": "how we can define which plugin is in your system an idea is that to use",
    "start": "1262799",
    "end": "1268080"
  },
  {
    "text": "another an additional cr in the example we are calling webook configuration customer source",
    "start": "1268080",
    "end": "1275360"
  },
  {
    "text": "that basically extract or define",
    "start": "1275360",
    "end": "1280480"
  },
  {
    "text": "where your plugin is so it gives the or it gives the",
    "start": "1280480",
    "end": "1285760"
  },
  {
    "text": "ci bundle to connect it and everything is necessary to for your system to talk with the plugin it acts",
    "start": "1285760",
    "end": "1294080"
  },
  {
    "text": "as a disk discovery mechanism basically when the plugin is discovered the next",
    "start": "1294080",
    "end": "1301360"
  },
  {
    "text": "step is you also inside your controller you also",
    "start": "1301360",
    "end": "1306640"
  },
  {
    "text": "have your controller car logic so the plugin get registered in your",
    "start": "1306640",
    "end": "1313600"
  },
  {
    "text": "core logic so whenever uh customer resource get reconciled",
    "start": "1313600",
    "end": "1320400"
  },
  {
    "text": "and whenever something has to be done your call logic at this point is capable",
    "start": "1320400",
    "end": "1325840"
  },
  {
    "text": "to call the plugin which is responsible from",
    "start": "1325840",
    "end": "1331039"
  },
  {
    "text": "some additional behavior or or",
    "start": "1331039",
    "end": "1336720"
  },
  {
    "text": "that basically it extends your controller so taking a",
    "start": "1337039",
    "end": "1342480"
  },
  {
    "text": "a little bit step back on this pattern few things are worth to notice so",
    "start": "1342480",
    "end": "1348640"
  },
  {
    "text": "the core idea of this pattern is to run plug-in in a separate process",
    "start": "1348640",
    "end": "1356159"
  },
  {
    "text": "that's the main goal everything else the discovery mechanism that we discussed",
    "start": "1356159",
    "end": "1362559"
  },
  {
    "text": "is plumbing is something that helps us",
    "start": "1362559",
    "end": "1367840"
  },
  {
    "text": "to reach the final goal that is to run the plugin it can be it could be implemented in a",
    "start": "1367840",
    "end": "1373520"
  },
  {
    "text": "different flavor uh we showed that this implementation because it's it",
    "start": "1373520",
    "end": "1379760"
  },
  {
    "text": "uh reminds the how the dynamic extension of a book works so",
    "start": "1379760",
    "end": "1385520"
  },
  {
    "text": "maybe that some of you are familiar to the web mutation web configuration and stuff",
    "start": "1385520",
    "end": "1390799"
  },
  {
    "text": "like that so it is the same let me say approach second things were to notice is that",
    "start": "1390799",
    "end": "1398080"
  },
  {
    "text": "with respect to the previous pattern there is a lot of moving parts",
    "start": "1398080",
    "end": "1404720"
  },
  {
    "text": "this is something that that we have to keep in mind so let's talk about",
    "start": "1405280",
    "end": "1412240"
  },
  {
    "text": "lesson learned so when when you have to use it when it",
    "start": "1412240",
    "end": "1417440"
  },
  {
    "text": "makes sense basically to [Music] take charge of all these components",
    "start": "1417440",
    "end": "1424159"
  },
  {
    "text": "point number one is that when your plugin basically require different",
    "start": "1424159",
    "end": "1430159"
  },
  {
    "text": "security context i make you an example in cluster api our controller are have a pretty",
    "start": "1430159",
    "end": "1437200"
  },
  {
    "text": "powerful airbag permission most specifically they can access for",
    "start": "1437200",
    "end": "1442320"
  },
  {
    "text": "instance the cloud identity of stuff and we don't want that bargain",
    "start": "1442320",
    "end": "1448000"
  },
  {
    "text": "to be run with the same identity because it could be dangerous so running by running the plugin into",
    "start": "1448000",
    "end": "1454559"
  },
  {
    "text": "separate processing into a separate port we can assign the plugin a dedicated security context with very",
    "start": "1454559",
    "end": "1461600"
  },
  {
    "text": "limited airbag permission",
    "start": "1461600",
    "end": "1466960"
  },
  {
    "text": "the second pro or the second reason for use this pattern is this pattern basically allows you to add",
    "start": "1466960",
    "end": "1474240"
  },
  {
    "text": "or remove plugins at a time which is a pretty powerful",
    "start": "1474240",
    "end": "1479600"
  },
  {
    "text": "feature to to have so",
    "start": "1479600",
    "end": "1484880"
  },
  {
    "text": "another pro is that um your plugin run is a separate process so",
    "start": "1485440",
    "end": "1492720"
  },
  {
    "text": "if the the plugin basically cannot screw up the the the the core controller the",
    "start": "1492720",
    "end": "1500320"
  },
  {
    "text": "worst thing that he can do is that it does not give an answer but your your controller continues to run",
    "start": "1500320",
    "end": "1508640"
  },
  {
    "text": "another nice thing is that you have the option to deploy plug-in like you deploy any application on",
    "start": "1509520",
    "end": "1516000"
  },
  {
    "text": "kubernetes at the end it is a pod with a deployment with a security account and all this stuff",
    "start": "1516000",
    "end": "1522960"
  },
  {
    "text": "let's talk about the cons a little bit the controller is adept in this is as",
    "start": "1522960",
    "end": "1530000"
  },
  {
    "text": "now as a dependencies with an external service and this is sometimes annoying because you have to",
    "start": "1530000",
    "end": "1536320"
  },
  {
    "text": "take care of authorization authentication network policies network",
    "start": "1536320",
    "end": "1542720"
  },
  {
    "text": "failure policies back pressure basically everything that gets into the picture when you call an external service when",
    "start": "1542720",
    "end": "1549919"
  },
  {
    "text": "you make a network call the last point is that there are also some organizational implications in this",
    "start": "1549919",
    "end": "1557279"
  },
  {
    "text": "pattern because you can have basically two different person which are responsible of what gets into",
    "start": "1557279",
    "end": "1565120"
  },
  {
    "text": "into the system so if you have a person that is responsible to manage the web book",
    "start": "1565120",
    "end": "1571279"
  },
  {
    "text": "configuration this person is is basically able to get",
    "start": "1571279",
    "end": "1576480"
  },
  {
    "text": "which plugin gets used and this is a sort of security mechanism that can help",
    "start": "1576480",
    "end": "1583600"
  },
  {
    "text": "in organizations yeah i i won't talk too much about this",
    "start": "1583600",
    "end": "1588880"
  },
  {
    "text": "one but this is the is the same as the previous one only that the service instead of being outside of the network",
    "start": "1588880",
    "end": "1594720"
  },
  {
    "text": "is inside of ours of our same pod so it serves the network uh the network",
    "start": "1594720",
    "end": "1600080"
  },
  {
    "text": "namespace of the kernel so you can just reach your your service through the localhost so that's that's the variant",
    "start": "1600080",
    "end": "1606559"
  },
  {
    "text": "of this one so yeah this one has also implications",
    "start": "1606559",
    "end": "1612080"
  },
  {
    "text": "because it's again going to be in the same name space but also you don't have to go to the network which is uh",
    "start": "1612080",
    "end": "1618640"
  },
  {
    "text": "you have to measure okay we are nearly",
    "start": "1618640",
    "end": "1624320"
  },
  {
    "text": "at the end of this presentation about extensible design pattern and there is one",
    "start": "1624320",
    "end": "1630559"
  },
  {
    "text": "and for maybe the most important question that we still have to answer what is next in this journey what is",
    "start": "1630559",
    "end": "1637520"
  },
  {
    "text": "next in an extensible controller so before trying to answer to the question",
    "start": "1637520",
    "end": "1643919"
  },
  {
    "text": "i think there are two points that that we should we should recognize",
    "start": "1643919",
    "end": "1648960"
  },
  {
    "text": "first is that everyone everyone in this room have a common goal",
    "start": "1648960",
    "end": "1654880"
  },
  {
    "text": "to use kubernetes to solve complex which are more and more complex",
    "start": "1654880",
    "end": "1661279"
  },
  {
    "text": "more challenging we use cases the second thing that we have to recognize is that this is a",
    "start": "1661279",
    "end": "1667440"
  },
  {
    "text": "are the problem is something that we cannot solve alone it's something that we have to solve to",
    "start": "1667440",
    "end": "1674000"
  },
  {
    "text": "solve as a community yeah so with this in mind that there is",
    "start": "1674000",
    "end": "1679679"
  },
  {
    "text": "there is a set of problems to get solved there is a lot this list is very long but for example the first question is",
    "start": "1679679",
    "end": "1685679"
  },
  {
    "text": "how to document behavioral dependencies so we we know how to document apis we have api documentation but how we",
    "start": "1685679",
    "end": "1691520"
  },
  {
    "text": "document behavioral dependencies like this control is going to be that and then this one is going to pause until this happens this kind of thing textual",
    "start": "1691520",
    "end": "1699039"
  },
  {
    "text": "it's not so good right so how we do that um how to make it easier to back when a",
    "start": "1699039",
    "end": "1704080"
  },
  {
    "text": "resource is not is not progressing why this resource is still on pending what is going on we have we have we have ways",
    "start": "1704080",
    "end": "1710080"
  },
  {
    "text": "to do that and seek instrumentation is going is working on that is providing us a really good tools to do that but still",
    "start": "1710080",
    "end": "1716080"
  },
  {
    "text": "this is an open question and also how to define contracts for extensibility points how we are going to do that how",
    "start": "1716080",
    "end": "1721600"
  },
  {
    "text": "we are going to also document that so we have a lot of questions so the",
    "start": "1721600",
    "end": "1727279"
  },
  {
    "text": "next point is how as a community we can react to this so",
    "start": "1727279",
    "end": "1732960"
  },
  {
    "text": "do we need some framework in cluster api we are starting we are developing we have a proposal and we are matching some",
    "start": "1732960",
    "end": "1740000"
  },
  {
    "text": "code with relate with something related that we call runtime sdk which is at the",
    "start": "1740000",
    "end": "1745279"
  },
  {
    "text": "end it is a small framework that is designed to help you to manage out of processes",
    "start": "1745279",
    "end": "1750840"
  },
  {
    "text": "extension can we generalize this as a community can we make it reusable across projects so",
    "start": "1750840",
    "end": "1758720"
  },
  {
    "text": "everyone don't have to reinvent the wheel same applies to decisions like",
    "start": "1758720",
    "end": "1764240"
  },
  {
    "text": "binary versus webassembly if as a community we can",
    "start": "1764240",
    "end": "1769440"
  },
  {
    "text": "agree on which one of the two we prefer basically we can start working together",
    "start": "1769440",
    "end": "1775919"
  },
  {
    "text": "to a set of library that will make the life of the next person implementing a controller much easier and finally we",
    "start": "1775919",
    "end": "1783039"
  },
  {
    "text": "can have also the same approach to to promote like how do we package our",
    "start": "1783039",
    "end": "1788559"
  },
  {
    "text": "plugin how do we distributed them do do we have to reinvent something",
    "start": "1788559",
    "end": "1794000"
  },
  {
    "text": "or we can rely on standard like oci or something else that exists today",
    "start": "1794000",
    "end": "1800880"
  },
  {
    "text": "so in conclusion extensible controller is a very interesting topic",
    "start": "1800880",
    "end": "1808159"
  },
  {
    "text": "and despite the work that we did in some project we we agree that there is still",
    "start": "1808159",
    "end": "1815360"
  },
  {
    "text": "much to to explore in this space and and the only way that we know is by",
    "start": "1815360",
    "end": "1821039"
  },
  {
    "text": "try and even some time failing so it is",
    "start": "1821039",
    "end": "1826880"
  },
  {
    "text": "a challenge but also an opportunity so let's work together to",
    "start": "1826880",
    "end": "1831919"
  },
  {
    "text": "improve the art of developing extensible controllers",
    "start": "1831919",
    "end": "1836960"
  },
  {
    "text": "thank you everyone [Applause]",
    "start": "1836960",
    "end": "1845380"
  },
  {
    "text": "thank you so much a great session we have now five minutes for q a if anyone has any questions",
    "start": "1846000",
    "end": "1852000"
  },
  {
    "text": "um we're going to repeat them for the virtual audience so any hands for questions",
    "start": "1852000",
    "end": "1858240"
  },
  {
    "text": "no this is such a good great session so no one has any questions but you can obviously probably speak with the",
    "start": "1858240",
    "end": "1863840"
  },
  {
    "text": "speakers after the session and within kubecon as well so thank you everyone",
    "start": "1863840",
    "end": "1869200"
  },
  {
    "text": "thank you enjoy thank you",
    "start": "1869200",
    "end": "1874519"
  }
]