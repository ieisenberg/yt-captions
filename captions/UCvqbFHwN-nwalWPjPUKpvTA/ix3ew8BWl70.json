[
  {
    "start": "0",
    "end": "87000"
  },
  {
    "text": "rb1 who's joining us today welcome to today's CN CF our bernard on Oh an um a",
    "start": "30",
    "end": "7040"
  },
  {
    "text": "open application model or um a teen centric app model for applicant helpers",
    "start": "7040",
    "end": "13559"
  },
  {
    "text": "and operators Perrin chief community program manager at Microsoft and uh native and masseter I'll be moderating",
    "start": "13559",
    "end": "20369"
  },
  {
    "text": "today's webinar we'd like to welcome our presenter today Mackenzie Olsen program at address off um just to start a few",
    "start": "20369",
    "end": "28529"
  },
  {
    "text": "housekeeping items or we start during the webinar you are not putting people to talker",
    "start": "28529",
    "end": "33780"
  },
  {
    "text": "attendee there is a Q&A box at the bottom of your screen please feel free",
    "start": "33780",
    "end": "39660"
  },
  {
    "text": "to drop in your questions there and we'll get to as many as we can this is an official webinar of the CCF",
    "start": "39660",
    "end": "46800"
  },
  {
    "text": "and asset and as such is subject to the CNCs code of conduct do not add anything",
    "start": "46800",
    "end": "53489"
  },
  {
    "text": "to the chat or questions that would be in violation of that code of conduct particularly please be respectful of all",
    "start": "53489",
    "end": "59730"
  },
  {
    "text": "your fellow participants in person and with that I will hand it over to Mackenzie to kick off today's presentations great thank you Karen just",
    "start": "59730",
    "end": "68670"
  },
  {
    "text": "as a heads up we have a couple of moderators from the open application model on the chat so if you ask any",
    "start": "68670",
    "end": "75540"
  },
  {
    "text": "questions during the presentation they'll be fielding those and if there any that I want to bring up I'll speak",
    "start": "75540",
    "end": "82259"
  },
  {
    "text": "to those as well all right so as we're",
    "start": "82259",
    "end": "88350"
  },
  {
    "start": "87000",
    "end": "87000"
  },
  {
    "text": "all well aware kubernetes has provided a really useful set of api's to help us orchestrate our container primitives but",
    "start": "88350",
    "end": "96479"
  },
  {
    "text": "there are a lot of resources to keep track of you have your basic objects with your pods your services you can",
    "start": "96479",
    "end": "103470"
  },
  {
    "text": "separate them with namespaces and then on top of that you have different layers of abstraction to choose from depending",
    "start": "103470",
    "end": "110130"
  },
  {
    "text": "on your requirements between deployments daemon sets stateful sets replica sets",
    "start": "110130",
    "end": "116189"
  },
  {
    "text": "etc and with all these different resources it becomes difficult to see",
    "start": "116189",
    "end": "121290"
  },
  {
    "text": "what the original application topology and runtime requirements were for us",
    "start": "121290",
    "end": "126750"
  },
  {
    "text": "that raises the question you know how can we stitch all of these discrete resources into an easily operable apple",
    "start": "126750",
    "end": "133140"
  },
  {
    "text": "kitchen and at this point you might be asking yourself hasn't home solved this",
    "start": "133140",
    "end": "139470"
  },
  {
    "text": "problem for us home is a fantastic package manager specifically for kubernetes resources it's great for",
    "start": "139470",
    "end": "146850"
  },
  {
    "text": "bundling your files together but it doesn't provide any guidance on how we'd want to model the application itself",
    "start": "146850",
    "end": "152700"
  },
  {
    "text": "it's still entirely up to you on how you want to fit all of those individual LEGO pieces together into your application so",
    "start": "152700",
    "end": "162930"
  },
  {
    "start": "162000",
    "end": "162000"
  },
  {
    "text": "leading up to the open application model we talked to a lot of different folks and asked them questions about how they",
    "start": "162930",
    "end": "169770"
  },
  {
    "text": "do their develops practices specifically with relationship to their orchestrators",
    "start": "169770",
    "end": "175100"
  },
  {
    "text": "and we noticed a couple interesting themes among larger companies or enterprises we would see really large",
    "start": "175100",
    "end": "183060"
  },
  {
    "text": "ratios in favour of application developers to infrastructure operators or application operators which makes",
    "start": "183060",
    "end": "189930"
  },
  {
    "text": "sense because the way clusters work today you can host many many applications inside of the same cluster",
    "start": "189930",
    "end": "196470"
  },
  {
    "text": "a lot of companies even had different teams working within the same pods each",
    "start": "196470",
    "end": "202230"
  },
  {
    "text": "producing their own containerized application and having them live in there and with that came a lot of",
    "start": "202230",
    "end": "208799"
  },
  {
    "text": "difficulty in terms of communicating between the development teams and the operation teams specifically it would",
    "start": "208799",
    "end": "215910"
  },
  {
    "text": "work maybe well when the company was smaller but as it continued to grow in scale the communication problem became",
    "start": "215910",
    "end": "222090"
  },
  {
    "text": "much harder [Music] so a couple of themes of unwanted to",
    "start": "222090",
    "end": "230819"
  },
  {
    "text": "cell problem lots of homemade paths and fast layers were built on top of the",
    "start": "230819",
    "end": "235920"
  },
  {
    "text": "orchestrator to try and separate it away from the developers while still leaving enough room for the developers to",
    "start": "235920",
    "end": "243629"
  },
  {
    "text": "specify what the runtime requirements for their workloads would be it would",
    "start": "243629",
    "end": "249030"
  },
  {
    "text": "work fairly well but there'd be a lot of leaks of orchestration level concepts up to the developers another another",
    "start": "249030",
    "end": "255360"
  },
  {
    "text": "solution that we saw companies coming up with were really complex the ICD pipelines meant to really stop the",
    "start": "255360",
    "end": "262860"
  },
  {
    "text": "developer concerns at containerization but it was not enough for a lot of",
    "start": "262860",
    "end": "268440"
  },
  {
    "text": "development teams to to specify the dependencies for their services and they",
    "start": "268440",
    "end": "273570"
  },
  {
    "text": "were still having to communicate with the operations teams not to mention if something went wrong with these really",
    "start": "273570",
    "end": "278639"
  },
  {
    "text": "complex the ICD pipelines it becomes very costly to fix so with all these",
    "start": "278639",
    "end": "287639"
  },
  {
    "text": "things these concepts in mind we came up with the open application model so it's",
    "start": "287639",
    "end": "293669"
  },
  {
    "text": "an open source specification to help us define cloud native applications we're really trying to solve how distributed",
    "start": "293669",
    "end": "300720"
  },
  {
    "text": "applications are composed and then transferred to those who are responsible for operating them we're currently in a",
    "start": "300720",
    "end": "307320"
  },
  {
    "text": "pre-release v1 alpha one stage but we're working on a second release that should be coming out here soon so there are",
    "start": "307320",
    "end": "316830"
  },
  {
    "start": "315000",
    "end": "315000"
  },
  {
    "text": "three main guiding principles for the first being we really want this to be an",
    "start": "316830",
    "end": "323130"
  },
  {
    "text": "application focused model bringing the attention back to the developers and",
    "start": "323130",
    "end": "328289"
  },
  {
    "text": "their applications and removing the focus from this container infrastructure",
    "start": "328289",
    "end": "333500"
  },
  {
    "text": "we also wanted to provide a model that worked well for separation of concerns so I'll be diving into the personas in a",
    "start": "333500",
    "end": "341250"
  },
  {
    "text": "little bit but essentially we wanted this model to work well for larger",
    "start": "341250",
    "end": "346410"
  },
  {
    "text": "companies that may have this clear separation between the development and in the operations but also not be so",
    "start": "346410",
    "end": "353729"
  },
  {
    "text": "complex that for smaller smaller companies you know that the model wouldn't be overwhelming that if you had one person doing",
    "start": "353729",
    "end": "360490"
  },
  {
    "text": "everything from app development to to cluster ops they could still use this",
    "start": "360490",
    "end": "365830"
  },
  {
    "text": "model and gain benefits from it and set themselves up for success if the company was to scale and grow lastly there's",
    "start": "365830",
    "end": "373930"
  },
  {
    "text": "this growing growing ask for the application to be brought to different environments whether that be cloud an",
    "start": "373930",
    "end": "380980"
  },
  {
    "text": "edge between multi cloud hybrid deployments so we wanted to write a",
    "start": "380980",
    "end": "386620"
  },
  {
    "text": "model that would help folks have a very consistent application that they could plug across all these different",
    "start": "386620",
    "end": "392860"
  },
  {
    "text": "environments so who-who are we trying to",
    "start": "392860",
    "end": "400390"
  },
  {
    "start": "396000",
    "end": "396000"
  },
  {
    "text": "cater towards we have three main personas they don't necessarily need to be separated people as I mentioned",
    "start": "400390",
    "end": "407920"
  },
  {
    "text": "earlier that could be one person doing it all or it could be three separate roles the first and foremost being the",
    "start": "407920",
    "end": "415270"
  },
  {
    "text": "application developer and their their main job is to focus on delivering code in a platform neutral setting then",
    "start": "415270",
    "end": "423910"
  },
  {
    "text": "there's the application operator who is essentially adding runtime characteristics to what to the code and",
    "start": "423910",
    "end": "431770"
  },
  {
    "text": "that the application developer is producing so this could be things like Auto scale it could be applying traffic",
    "start": "431770",
    "end": "439180"
  },
  {
    "text": "management identity etc and lastly we have our infrastructure operators so",
    "start": "439180",
    "end": "445750"
  },
  {
    "text": "those are the folks who are configuring the environments to satisfy any unique operating requirements for the",
    "start": "445750",
    "end": "453130"
  },
  {
    "text": "application",
    "start": "453130",
    "end": "455820"
  },
  {
    "start": "459000",
    "end": "459000"
  },
  {
    "text": "so ohm has four four main constructs that you really need to get familiar",
    "start": "459130",
    "end": "464390"
  },
  {
    "text": "with before you can get up and running we'll start with components components",
    "start": "464390",
    "end": "472250"
  },
  {
    "start": "471000",
    "end": "471000"
  },
  {
    "text": "purpose is to encapsulate application code so here we're defining runtime",
    "start": "472250",
    "end": "478610"
  },
  {
    "text": "requirements so like what the workload type would look like we've also provided",
    "start": "478610",
    "end": "483650"
  },
  {
    "text": "a place for developers to specify parameters that might be overwritten by application operators you'll see",
    "start": "483650",
    "end": "490160"
  },
  {
    "text": "resource requirements health and liveliness probes fairly similar requirements to what you would see in a",
    "start": "490160",
    "end": "496220"
  },
  {
    "text": "pod specification so once you have your",
    "start": "496220",
    "end": "502520"
  },
  {
    "start": "501000",
    "end": "501000"
  },
  {
    "text": "components we want to add additional runtime functionality to them and we do that with something called traits so",
    "start": "502520",
    "end": "510200"
  },
  {
    "text": "these are discretionary runtime overlays that help us apply this operational functionality so we have our component",
    "start": "510200",
    "end": "517880"
  },
  {
    "text": "let's say it's a web server and we want to allow traffic to flow into it we",
    "start": "517880",
    "end": "524900"
  },
  {
    "text": "might add something like an ingress trait to that component that way you can",
    "start": "524900",
    "end": "530510"
  },
  {
    "text": "get the traffic coming in and it's fairly pluggable so you can use it various different ingresses if that's",
    "start": "530510",
    "end": "538370"
  },
  {
    "text": "what you needed to do so now that we",
    "start": "538370",
    "end": "544310"
  },
  {
    "start": "542000",
    "end": "542000"
  },
  {
    "text": "have our components you might be collecting a lot of these and you may",
    "start": "544310",
    "end": "549680"
  },
  {
    "text": "need some way to group these together so that's where we came up with the idea of application scopes their discretionary",
    "start": "549680",
    "end": "556430"
  },
  {
    "text": "application boundaries where you can group components based on their behavior",
    "start": "556430",
    "end": "561860"
  },
  {
    "text": "so an example of this may be you have a set of components that you want to have",
    "start": "561860",
    "end": "567530"
  },
  {
    "text": "live in the same subnet we would have a specific network application scope that",
    "start": "567530",
    "end": "574160"
  },
  {
    "text": "you could place them all in another example could of a behavior that you",
    "start": "574160",
    "end": "580310"
  },
  {
    "text": "might want to group components by could be health so if you have a set of",
    "start": "580310",
    "end": "585410"
  },
  {
    "text": "components that are dependent very tended on each other and you want to make sure that they are all running and",
    "start": "585410",
    "end": "590910"
  },
  {
    "text": "healthy you would place them within the same health scope and lastly we have an",
    "start": "590910",
    "end": "602070"
  },
  {
    "start": "599000",
    "end": "599000"
  },
  {
    "text": "application configuration so this defines the application deployment so it's kind of important to understand the",
    "start": "602070",
    "end": "608970"
  },
  {
    "text": "distinction between application scopes and configurations scopes is all about grouping components together based on a",
    "start": "608970",
    "end": "614790"
  },
  {
    "text": "common characteristic application configuration is how we're going to take these three concepts we've learned about",
    "start": "614790",
    "end": "620720"
  },
  {
    "text": "components traits and scopes and instantiate them its totally reusable so",
    "start": "620720",
    "end": "627120"
  },
  {
    "text": "if you end up creating an application configuration your components go live",
    "start": "627120",
    "end": "632910"
  },
  {
    "text": "the traits are applied and they're living inside the scopes and you can use this application configuration as an it",
    "start": "632910",
    "end": "639149"
  },
  {
    "text": "is essentially a template to stamp this out as many times as you want or make modifications as need be so putting",
    "start": "639149",
    "end": "651779"
  },
  {
    "start": "649000",
    "end": "649000"
  },
  {
    "text": "together these forming constructs components traits scopes and application",
    "start": "651779",
    "end": "657540"
  },
  {
    "text": "configurations with the personas we described earlier we have the application developers who are authoring",
    "start": "657540",
    "end": "665070"
  },
  {
    "text": "the component schematic so this is essentially a container pods back along",
    "start": "665070",
    "end": "671100"
  },
  {
    "text": "with a workload type which I'll dive into in a little bit and any parameters",
    "start": "671100",
    "end": "676380"
  },
  {
    "text": "that they might need to have over in by the application operator so they write",
    "start": "676380",
    "end": "682170"
  },
  {
    "text": "those application operator we'll go ahead and pick the necessary components that they want to deploy IDE necessary",
    "start": "682170",
    "end": "690300"
  },
  {
    "text": "traits such as ingress another example perhaps could be auto scale they could",
    "start": "690300",
    "end": "696390"
  },
  {
    "text": "apply necessary scopes so a network scope and then deployed on to the",
    "start": "696390",
    "end": "703170"
  },
  {
    "text": "environment that has been configured by the infrastructure operator these arrows",
    "start": "703170",
    "end": "708990"
  },
  {
    "text": "probably don't point towards temporal ordering most likely you have the",
    "start": "708990",
    "end": "714089"
  },
  {
    "text": "environment already configured before you go ahead and execute these two steps",
    "start": "714089",
    "end": "719720"
  },
  {
    "start": "721000",
    "end": "721000"
  },
  {
    "text": "so a simple example of what an application might look like here we have",
    "start": "722040",
    "end": "729280"
  },
  {
    "text": "two components a singleton server which is a workload type and then a database",
    "start": "729280",
    "end": "736780"
  },
  {
    "text": "component and from here I've added an ingress trait saying I want traffic to",
    "start": "736780",
    "end": "742660"
  },
  {
    "text": "flow into this front-end component and then a manual of scalar trait applied to",
    "start": "742660",
    "end": "749020"
  },
  {
    "text": "the second component a manual scalar trait is essentially a way of declaring how many replicas you want for a",
    "start": "749020",
    "end": "755920"
  },
  {
    "text": "component to run at a given time both of these are looking inside of the",
    "start": "755920",
    "end": "761410"
  },
  {
    "text": "same same Network so that's the general architecture what",
    "start": "761410",
    "end": "767590"
  },
  {
    "text": "does the yem will look like that supports these these constructs so here",
    "start": "767590",
    "end": "773710"
  },
  {
    "text": "we have an example of a component schematic for both of those pieces I described earlier so the web server the",
    "start": "773710",
    "end": "781750"
  },
  {
    "text": "web UI we specified the workload type here which is a singleton server this",
    "start": "781750",
    "end": "788350"
  },
  {
    "text": "means that we want one instance of this running at maximum we can see here there",
    "start": "788350",
    "end": "795010"
  },
  {
    "text": "is a database connection string the developer doesn't have but they are going to parameterize it so it can be",
    "start": "795010",
    "end": "801520"
  },
  {
    "text": "overridden later by the application operator and they've also provided the",
    "start": "801520",
    "end": "807820"
  },
  {
    "text": "container necessary container information so the image required resources ports and that environment",
    "start": "807820",
    "end": "815800"
  },
  {
    "text": "variable that's being overwritten as a parameter for the back-end piece we have",
    "start": "815800",
    "end": "821380"
  },
  {
    "text": "a MongoDB a containerized version there are no parameters for this that they are",
    "start": "821380",
    "end": "828220"
  },
  {
    "text": "including they're just specifying the resources and necessary ports you can",
    "start": "828220",
    "end": "833380"
  },
  {
    "text": "see here this is of a slightly different workload type this is a server the main",
    "start": "833380",
    "end": "838630"
  },
  {
    "text": "difference between a single team server in a server is that we would expect multiple instances of this to be running",
    "start": "838630",
    "end": "845050"
  },
  {
    "text": "which is why you can see earlier we've added a manual scalar tree the",
    "start": "845050",
    "end": "851950"
  },
  {
    "text": "application developer doesn't Fairley care how many how many vert number how many replicas will be running",
    "start": "851950",
    "end": "859030"
  },
  {
    "text": "of this specific component they just want to surface up to the application operator okay I would like more than one",
    "start": "859030",
    "end": "865990"
  },
  {
    "text": "instance of this to be running so diving",
    "start": "865990",
    "end": "872320"
  },
  {
    "text": "a little bit more into workload types so this is a concept that's specific to",
    "start": "872320",
    "end": "878170"
  },
  {
    "start": "874000",
    "end": "874000"
  },
  {
    "text": "components right now we have six supported workload types in ohm server",
    "start": "878170",
    "end": "885520"
  },
  {
    "text": "singleton server worker singleton worker tasks singleton tasks and it's sharing a",
    "start": "885520",
    "end": "892630"
  },
  {
    "text": "specific specific pieces of information about how that component should be run",
    "start": "892630",
    "end": "897880"
  },
  {
    "text": "so for servers we expect there to be a service endpoint and we expect it to be",
    "start": "897880",
    "end": "903700"
  },
  {
    "text": "demonized and the main difference between those first two rows again is the number of replicas running that same",
    "start": "903700",
    "end": "910240"
  },
  {
    "text": "pattern holds true for workers as well as tasks difference going down the list",
    "start": "910240",
    "end": "915640"
  },
  {
    "text": "is that there are no end points for the workers or the tasks and workers will",
    "start": "915640",
    "end": "923040"
  },
  {
    "text": "essentially restart whereas tasks will not restart once they have completed whatever they're trying to execute all",
    "start": "923040",
    "end": "931630"
  },
  {
    "text": "of these are containerized as well so these these will all be represented with that set of parameters asking for image",
    "start": "931630",
    "end": "940270"
  },
  {
    "text": "resources etc so that's that's",
    "start": "940270",
    "end": "949030"
  },
  {
    "start": "945000",
    "end": "945000"
  },
  {
    "text": "essentially all the information that needs to be provided from the application developer about what and how",
    "start": "949030",
    "end": "955030"
  },
  {
    "text": "the component will run now as for traits and scopes so for components we have to",
    "start": "955030",
    "end": "960970"
  },
  {
    "text": "fill out that component schematic where the developer is surfacing up necessary information for core traits and scopes",
    "start": "960970",
    "end": "967840"
  },
  {
    "text": "we don't necessarily need to fill out that we do not fill out that same same",
    "start": "967840",
    "end": "973090"
  },
  {
    "text": "schematic instead these are defined on the own specification because these are",
    "start": "973090",
    "end": "978310"
  },
  {
    "text": "essentially core to the open application model so in order to know what",
    "start": "978310",
    "end": "983350"
  },
  {
    "text": "parameters we need to fill out you visit the ohm specification and you can see what what traits and scopes are",
    "start": "983350",
    "end": "990760"
  },
  {
    "text": "supported here we have a manual scalar trait and it's fairly simple you only",
    "start": "990760",
    "end": "996010"
  },
  {
    "text": "need one parameter which is replica count you can see here it doesn't apply",
    "start": "996010",
    "end": "1001529"
  },
  {
    "text": "to all of the various workload types those being specific types of components",
    "start": "1001529",
    "end": "1006959"
  },
  {
    "text": "which makes sense you wouldn't want to add a manual scalar trait to a singleton",
    "start": "1006959",
    "end": "1013320"
  },
  {
    "text": "server because by definition you should only have one instance of singleton server running at any time so we're",
    "start": "1013320",
    "end": "1020519"
  },
  {
    "text": "setting up some guardrails to set to set our relationship between our application",
    "start": "1020519",
    "end": "1025918"
  },
  {
    "text": "developer an application operator up for success the same same concept holds true",
    "start": "1025919",
    "end": "1032400"
  },
  {
    "text": "for application scopes here's an example of our network scope you can see their",
    "start": "1032400",
    "end": "1038280"
  },
  {
    "text": "current information being a network ID a subnet ID and then an Internet gateway",
    "start": "1038280",
    "end": "1044730"
  },
  {
    "text": "type we list out the complete set of required complete set of parameters some",
    "start": "1044730",
    "end": "1051059"
  },
  {
    "text": "are required some are not so going back",
    "start": "1051059",
    "end": "1057390"
  },
  {
    "start": "1055000",
    "end": "1055000"
  },
  {
    "text": "to our sample application we had our web front-end our database back-end so here",
    "start": "1057390",
    "end": "1064440"
  },
  {
    "text": "I've just modeled them in the same file because they're yanil and the application developer has provided this",
    "start": "1064440",
    "end": "1070620"
  },
  {
    "text": "information the application operator is going to go ahead and pick out its nessus",
    "start": "1070620",
    "end": "1077070"
  },
  {
    "text": "so we want to pull out that web UI and we're going to pull out that MongoDB the",
    "start": "1077070",
    "end": "1083490"
  },
  {
    "text": "parameters have already been filled in there and we're just applying the necessary traits and scopes so for that",
    "start": "1083490",
    "end": "1090090"
  },
  {
    "text": "MongoDB we give it an instance name we've also given it a manual scalar",
    "start": "1090090",
    "end": "1096240"
  },
  {
    "text": "treat and we're going to set the replica count to 3 we want it living inside the",
    "start": "1096240",
    "end": "1101429"
  },
  {
    "text": "same Network scope which we have instantiated above for web UI",
    "start": "1101429",
    "end": "1106650"
  },
  {
    "text": "we've given we filled out that parameter there so our DB secret that we had left",
    "start": "1106650",
    "end": "1112710"
  },
  {
    "text": "just as a parameter this is where we're actually providing the string and we've also",
    "start": "1112710",
    "end": "1118419"
  },
  {
    "text": "and ingress tribe trait to allow traffic to flow in to that to that front end and",
    "start": "1118419",
    "end": "1124029"
  },
  {
    "text": "also made sure that it was applied in the same Network scope another",
    "start": "1124029",
    "end": "1130330"
  },
  {
    "text": "interesting thing about application configurations is you only need either",
    "start": "1130330",
    "end": "1135789"
  },
  {
    "text": "an application scope or a component to deploy a configuration so if I wanted to",
    "start": "1135789",
    "end": "1143590"
  },
  {
    "text": "go ahead and actually set up all my scopes ahead of time because I have a good idea of what my grouping constructs",
    "start": "1143590",
    "end": "1149590"
  },
  {
    "text": "will look like you could go ahead and just instantiate a network scope and then add the components in later by just",
    "start": "1149590",
    "end": "1156279"
  },
  {
    "text": "referencing the name here so now that we",
    "start": "1156279",
    "end": "1164649"
  },
  {
    "text": "have a better idea of what these main constructs are in the model how can I use the specification in practice so we",
    "start": "1164649",
    "end": "1173590"
  },
  {
    "start": "1172000",
    "end": "1172000"
  },
  {
    "text": "have a couple different existing old implementations there's rudder which we'll talk about in",
    "start": "1173590",
    "end": "1180009"
  },
  {
    "text": "a little more depth here soon and then alibaba's Enterprise distributed application service and Alibaba is a",
    "start": "1180009",
    "end": "1187059"
  },
  {
    "text": "resource orchestration service so rudder",
    "start": "1187059",
    "end": "1194200"
  },
  {
    "start": "1192000",
    "end": "1192000"
  },
  {
    "text": "is our kubernetes reference implementation it is a open source",
    "start": "1194200",
    "end": "1200139"
  },
  {
    "text": "project it works on any kubernetes cluster so this could be a managed",
    "start": "1200139",
    "end": "1205659"
  },
  {
    "text": "kubernetes such as eks or aks or just an entire full-fledged kubernetes cluster",
    "start": "1205659",
    "end": "1210999"
  },
  {
    "text": "you have running on your fans that you manage all up so rudder supports all",
    "start": "1210999",
    "end": "1216820"
  },
  {
    "text": "core own constructs so those core workload types I was talking about",
    "start": "1216820",
    "end": "1221859"
  },
  {
    "text": "earlier all should work within rudder and the high-level flow here so the",
    "start": "1221859",
    "end": "1229989"
  },
  {
    "text": "application developer is specifying its components application operators pulling",
    "start": "1229989",
    "end": "1236049"
  },
  {
    "text": "them together inside of an application configuration by applying the necessary trades and scopes bringing back home you",
    "start": "1236049",
    "end": "1244600"
  },
  {
    "text": "can pull all these Hamill files together in a helmet art and deploy the way you",
    "start": "1244600",
    "end": "1250809"
  },
  {
    "text": "interface with rudder is through Q control so you can use the same tools that you're",
    "start": "1250809",
    "end": "1257410"
  },
  {
    "text": "familiar with today if you are an infrastructure or application operator",
    "start": "1257410",
    "end": "1262809"
  },
  {
    "text": "who's used to working with kubernetes the Q control and all of the kubernetes",
    "start": "1262809",
    "end": "1268120"
  },
  {
    "text": "friendly tools will still be at your disposal and then you have this great layer of abstraction that you can",
    "start": "1268120",
    "end": "1274660"
  },
  {
    "text": "surface up to your application developers and infrastructure operators or sorry not infrastructure operators",
    "start": "1274660",
    "end": "1281740"
  },
  {
    "text": "just your application developers so how does the implementation architecture",
    "start": "1281740",
    "end": "1289299"
  },
  {
    "start": "1283000",
    "end": "1283000"
  },
  {
    "text": "work so we have the application model itself which is the interface to the",
    "start": "1289299",
    "end": "1295480"
  },
  {
    "text": "application developers where they're specifying necessary traits and scopes from there the implementation translates",
    "start": "1295480",
    "end": "1303160"
  },
  {
    "text": "so you have a out of scale trait the implementation goes and decides how it",
    "start": "1303160",
    "end": "1311260"
  },
  {
    "text": "will be how it's going to be executed upon and then the infrastructure is essentially determines of what platform",
    "start": "1311260",
    "end": "1319000"
  },
  {
    "text": "features are available how it'll be how will be executed on the hardware and the",
    "start": "1319000",
    "end": "1325390"
  },
  {
    "text": "orchestrator and whatnot so here the orchestrator would be kubernetes platform features or all the features",
    "start": "1325390",
    "end": "1332860"
  },
  {
    "text": "that would be supported in kubernetes today",
    "start": "1332860",
    "end": "1338100"
  },
  {
    "text": "hey I have a question or someone submitted two questions so they said we",
    "start": "1341760",
    "end": "1347620"
  },
  {
    "text": "use the works flux and have written a lot of our own operators and see our DS is there a way to adopt ohm as a",
    "start": "1347620",
    "end": "1353950"
  },
  {
    "text": "standard way of defining operational and security semantics for our components and workloads without adopting something",
    "start": "1353950",
    "end": "1361120"
  },
  {
    "text": "like rudder without adopting something like rudder",
    "start": "1361120",
    "end": "1368130"
  },
  {
    "text": "it's at this point you would have to",
    "start": "1368130",
    "end": "1373990"
  },
  {
    "text": "write your own implementation rudder is essentially how we expect folks to",
    "start": "1373990",
    "end": "1381570"
  },
  {
    "text": "interface at this time with open application model you could another way",
    "start": "1381570",
    "end": "1388120"
  },
  {
    "text": "you can go about doing this is using rudder for the core treats but if you have existing operators and CR DS we're",
    "start": "1388120",
    "end": "1395620"
  },
  {
    "text": "working on trying to make actually a good segue the model more extensible to",
    "start": "1395620",
    "end": "1401470"
  },
  {
    "text": "existing resources that you have today so instead of working only within that",
    "start": "1401470",
    "end": "1408460"
  },
  {
    "text": "set of core components tradeking scopes we'd hope that you could model those existing CRTs somehow with extension",
    "start": "1408460",
    "end": "1417010"
  },
  {
    "text": "points which lends itself really nicely",
    "start": "1417010",
    "end": "1422110"
  },
  {
    "start": "1419000",
    "end": "1419000"
  },
  {
    "text": "to this next cut this next talking point almond extensibility so you heard me",
    "start": "1422110",
    "end": "1427870"
  },
  {
    "text": "talking a lot about core core constructs earlier on these must be supported by",
    "start": "1427870",
    "end": "1433060"
  },
  {
    "text": "own compliant implementations and then there are extended workload types or",
    "start": "1433060",
    "end": "1438300"
  },
  {
    "text": "extensions traits and scopes these are optionally supported by own compliant implementations so this could",
    "start": "1438300",
    "end": "1445660"
  },
  {
    "text": "be an example of where you have your existing C IDs you want to plug it in how can we set up the application model",
    "start": "1445660",
    "end": "1454330"
  },
  {
    "text": "to consume these in a way that that's that's pluggable and you can still model",
    "start": "1454330",
    "end": "1461200"
  },
  {
    "text": "it with the open application model using those core using these same set of VMO",
    "start": "1461200",
    "end": "1466900"
  },
  {
    "text": "with components traits and scopes so yeah these are our set",
    "start": "1466900",
    "end": "1474310"
  },
  {
    "start": "1471000",
    "end": "1471000"
  },
  {
    "text": "core constructs so as I mentioned earlier you have those six four component workload types you have two",
    "start": "1474310",
    "end": "1483210"
  },
  {
    "text": "different scope types at this point we have our network scope and our health scope and we have one existing traped",
    "start": "1483210",
    "end": "1491190"
  },
  {
    "text": "core trait type which is manual scalar a good example of an extended trait might",
    "start": "1491190",
    "end": "1500320"
  },
  {
    "text": "be an auto scaler so at first glance you might think this seems fairly basic and",
    "start": "1500320",
    "end": "1505840"
  },
  {
    "text": "you would want to include this in your set of core trait types but to try and",
    "start": "1505840",
    "end": "1511510"
  },
  {
    "text": "model all the different ways people might want to auto scale is very difficult and we can't capture it's",
    "start": "1511510",
    "end": "1518350"
  },
  {
    "text": "difficult to capture it all within one long list of parameters thus we have left that open to be an extension trait",
    "start": "1518350",
    "end": "1526120"
  },
  {
    "text": "to let you define how you want to auto get Auto scale specifically and choose",
    "start": "1526120",
    "end": "1532480"
  },
  {
    "text": "what those parameters are that you want to surface up from your application operator to your application developer",
    "start": "1532480",
    "end": "1541050"
  },
  {
    "text": "so here's an example of a mix of core core constructs and extension constructs",
    "start": "1542160",
    "end": "1549760"
  },
  {
    "text": "so we have our component which has a work load type of server and we're",
    "start": "1549760",
    "end": "1556240"
  },
  {
    "text": "having traffic flow in via our ingress trait so I described an ingress to Trey",
    "start": "1556240",
    "end": "1562150"
  },
  {
    "text": "a little bit earlier it's actually not a core trait but it's an extension trait",
    "start": "1562150",
    "end": "1567340"
  },
  {
    "text": "is implemented in rudder but that means if you want to go and use let's say",
    "start": "1567340",
    "end": "1572620"
  },
  {
    "text": "alibaba's II does implementation they could perhaps have an ingress trait but",
    "start": "1572620",
    "end": "1578200"
  },
  {
    "text": "it might require a different set of parameters or it might have a slightly different behavior another example of an",
    "start": "1578200",
    "end": "1587470"
  },
  {
    "text": "extended workload type might be a database component so instead of having a containerized database I want an",
    "start": "1587470",
    "end": "1596800"
  },
  {
    "text": "actual like a sequel database running in Azure not containerized how can I model",
    "start": "1596800",
    "end": "1602680"
  },
  {
    "text": "this as a component and have it be part of my overall application so these are two examples of extension",
    "start": "1602680",
    "end": "1610560"
  },
  {
    "text": "points that so these resources aren't necessarily implemented by all the different implementations but they're",
    "start": "1610560",
    "end": "1617940"
  },
  {
    "text": "still useful and I want my developers to be describing these or my application operates to be describing these in the",
    "start": "1617940",
    "end": "1624450"
  },
  {
    "text": "same manner that they're describing all the different aspects of their application with those component",
    "start": "1624450",
    "end": "1631350"
  },
  {
    "text": "schematics and putting them together in an application configuration so up and",
    "start": "1631350",
    "end": "1640800"
  },
  {
    "start": "1639000",
    "end": "1639000"
  },
  {
    "text": "coming as I kind of mentioned earlier ohm is not well positioned for infrastructure operators who are",
    "start": "1640800",
    "end": "1646440"
  },
  {
    "text": "interested in implementing extended workload types or extension trades and scopes so in our second draft were",
    "start": "1646440",
    "end": "1654230"
  },
  {
    "text": "focusing on making all more flexible for infrastructure operators by including existing resources into the old runtime",
    "start": "1654230",
    "end": "1662300"
  },
  {
    "text": "we we want to make this easier for folks and find a way to also make sure that we",
    "start": "1662300",
    "end": "1668910"
  },
  {
    "text": "can share share these extended workload types so if you know someone's come up",
    "start": "1668910",
    "end": "1674340"
  },
  {
    "text": "with a great idea we want the community to be able to grab onto it and use it as",
    "start": "1674340",
    "end": "1679590"
  },
  {
    "text": "well if they're interested in that same implementation I have more question",
    "start": "1679590",
    "end": "1688710"
  },
  {
    "text": "for you do you consider as a new and private opposite direction versus home",
    "start": "1688710",
    "end": "1694559"
  },
  {
    "text": "don't you think that the path from home that the path from home description to",
    "start": "1694559",
    "end": "1700140"
  },
  {
    "text": "kubernetes is more direct than home to helm the only thing the path from ohm",
    "start": "1700140",
    "end": "1709230"
  },
  {
    "text": "description to kubernetes is more I",
    "start": "1709230",
    "end": "1714890"
  },
  {
    "text": "guess what what what is more direct mean",
    "start": "1716120",
    "end": "1721529"
  },
  {
    "text": "I would need a little bit of elaboration there if any of my moderators I feel",
    "start": "1721529",
    "end": "1727470"
  },
  {
    "text": "like they have an answer to that okay we",
    "start": "1727470",
    "end": "1732750"
  },
  {
    "text": "can come back to that another question was is there a source to image app",
    "start": "1732750",
    "end": "1738840"
  },
  {
    "text": "contracts wrapped into the model now or in the future or would this I assume",
    "start": "1738840",
    "end": "1744990"
  },
  {
    "text": "would this be an extension that would be implemented by others and so there is no source to image construct right now but",
    "start": "1744990",
    "end": "1754260"
  },
  {
    "text": "we're looking ways of incorporating technologies like K native that have",
    "start": "1754260",
    "end": "1759950"
  },
  {
    "text": "build but I guess it's now known as Tecton pipelines ways of describing those with ohm so that you could",
    "start": "1759950",
    "end": "1767580"
  },
  {
    "text": "leverage existing solutions that would help you take source to image there but",
    "start": "1767580",
    "end": "1773220"
  },
  {
    "text": "now right now it's not exactly it's not a first-class citizen in the open application model",
    "start": "1773220",
    "end": "1779870"
  },
  {
    "text": "yeah I server ask that first question if you want to kind of flush that question out of it we can come back to that",
    "start": "1784010",
    "end": "1790590"
  },
  {
    "text": "otherwise you are free to continue okay sounds good all right lastly community",
    "start": "1790590",
    "end": "1799820"
  },
  {
    "text": "so if you're interested in getting involved there's a couple of different",
    "start": "1799820",
    "end": "1806100"
  },
  {
    "start": "1803000",
    "end": "1803000"
  },
  {
    "text": "ways we have a getter channel which is linked above here we have bi-weekly",
    "start": "1806100",
    "end": "1811640"
  },
  {
    "text": "community calls the next one is coming up on 2:25 10:30 a.m. PST where we're",
    "start": "1811640",
    "end": "1818130"
  },
  {
    "text": "talking a lot about these these upcoming that I mentioned earlier we have a",
    "start": "1818130",
    "end": "1825090"
  },
  {
    "text": "community calendar that you can subscribe to we will be at cube Con at",
    "start": "1825090",
    "end": "1830580"
  },
  {
    "text": "the end of March beginning of April the talks are not on there yet but we have a",
    "start": "1830580",
    "end": "1836279"
  },
  {
    "text": "couple so stay tuned if you want to hear more from us and lastly contributions to",
    "start": "1836279",
    "end": "1843179"
  },
  {
    "text": "our tree buzz we have the specification repo itself as well as rudder which is",
    "start": "1843179",
    "end": "1849299"
  },
  {
    "text": "our open-source kubernetes implementation and lastly I didn't link it here but we have a samples repo so if",
    "start": "1849299",
    "end": "1856350"
  },
  {
    "text": "you are enjoying rudder or have tried it out and have a cool application that",
    "start": "1856350",
    "end": "1861450"
  },
  {
    "text": "you've modeled with us we'd love to have more contributions there so we can have different reference architectures to",
    "start": "1861450",
    "end": "1868350"
  },
  {
    "text": "point to so those are all great ways to get involved if you are interested and",
    "start": "1868350",
    "end": "1875029"
  },
  {
    "text": "with that I'll open it up to any additional questions anyone might have",
    "start": "1875029",
    "end": "1882230"
  },
  {
    "text": "and just a reminder if you have questions you can drop them in the Q&A box at the bottom of the zoom window and",
    "start": "1893410",
    "end": "1901390"
  },
  {
    "text": "we'll see if we can get a few questions",
    "start": "1901390",
    "end": "1905680"
  },
  {
    "text": "someone asked you mentioned some changes coming up in the next release can you elaborate yeah so the next release again",
    "start": "1928390",
    "end": "1939679"
  },
  {
    "text": "we're gonna be focusing on making a more flexible for infrastructure operators allowing them to include existing",
    "start": "1939679",
    "end": "1946490"
  },
  {
    "text": "resources so we're trying to make that extension extended workload type",
    "start": "1946490",
    "end": "1952280"
  },
  {
    "text": "extension transcripts story stronger if you want more details beyond that I'd",
    "start": "1952280",
    "end": "1959360"
  },
  {
    "text": "really suggest coming to our community meeting on this point we'll be talking",
    "start": "1959360",
    "end": "1964730"
  },
  {
    "text": "to that and some more specifics",
    "start": "1964730",
    "end": "1968200"
  },
  {
    "text": "you",
    "start": "1973100",
    "end": "1975160"
  },
  {
    "text": "you you",
    "start": "1980740",
    "end": "1986090"
  },
  {
    "text": "you",
    "start": "2010700",
    "end": "2012760"
  },
  {
    "text": "let's give it one more minute for questions all right well great thanks",
    "start": "2021150",
    "end": "2055840"
  },
  {
    "text": "McKenzie for our wonderful presentation that's all the time we have for questions today thanks everyone for",
    "start": "2055840",
    "end": "2062440"
  },
  {
    "text": "joining us today the webinar recording and slides will be online later today and we look forward to seeing you all at",
    "start": "2062440",
    "end": "2069610"
  },
  {
    "text": "a future ciencia webinar",
    "start": "2069610",
    "end": "2073169"
  }
]