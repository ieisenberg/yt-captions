[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "so welcome to my presentation I'm chef Eric I work for a head and this",
    "start": "170",
    "end": "7700"
  },
  {
    "text": "presentation was supposed to be a tutorial about how to write external dynamic provision when I submit a talk",
    "start": "7700",
    "end": "15590"
  },
  {
    "text": "next time in the tutorial but then I got a 40 minute slot so what kind of",
    "start": "15590",
    "end": "21330"
  },
  {
    "text": "tutorial can I do in 40 minutes so this will be a presentation and you can do",
    "start": "21330",
    "end": "26820"
  },
  {
    "text": "the coding as a homework so before I",
    "start": "26820",
    "end": "31830"
  },
  {
    "text": "start about external dynamic provisioning I have a brief introduction about storage in kubernetes and how it",
    "start": "31830",
    "end": "39390"
  },
  {
    "text": "works because you need to know the core concept before writing you code so the",
    "start": "39390",
    "end": "46800"
  },
  {
    "start": "45000",
    "end": "116000"
  },
  {
    "text": "all the containers in kubernetes are state less they don't have state they",
    "start": "46800",
    "end": "53010"
  },
  {
    "text": "are started even you start they have lost their data and cooperatives",
    "start": "53010",
    "end": "60510"
  },
  {
    "text": "persistent volume framework is there to resist mistake so if a pot wants to have",
    "start": "60510",
    "end": "68330"
  },
  {
    "text": "some storage to store some data it has to ask for a person value so I start",
    "start": "68330",
    "end": "77460"
  },
  {
    "text": "with your with what I call static pravesh storage",
    "start": "77460",
    "end": "83070"
  },
  {
    "text": "static storage provisioning which is available in comparative since forever and except it expects that somebody in",
    "start": "83070",
    "end": "91369"
  },
  {
    "text": "your organization creates some kind of volumes it can be NFS it can be ice",
    "start": "91369",
    "end": "97680"
  },
  {
    "text": "castle and it can be amazing EBS whatever and it creates them before running kubernetes so let's say I have",
    "start": "97680",
    "end": "105750"
  },
  {
    "text": "free some storage volumes somewhere in winter infrastructure in my network and I need to know how kubernetes that there",
    "start": "105750",
    "end": "113549"
  },
  {
    "text": "are free volumes available so in COBOL it is I create a persistent volume",
    "start": "113549",
    "end": "119490"
  },
  {
    "start": "116000",
    "end": "256000"
  },
  {
    "text": "object each for each storage volume is this persistent volume object it's just a pointer to remote storage",
    "start": "119490",
    "end": "126119"
  },
  {
    "text": "asset just ask abilities hey Lisa and as for him somewhere in my instruct",
    "start": "126119",
    "end": "131940"
  },
  {
    "text": "infrastructure it has all the information to mount the volume so it",
    "start": "131940",
    "end": "137190"
  },
  {
    "text": "has NFS address and the share name if you are used using ice cozied has IP",
    "start": "137190",
    "end": "144000"
  },
  {
    "text": "address of the portal and one number or if you are a Muslim then it has name of",
    "start": "144000",
    "end": "149910"
  },
  {
    "text": "the Amazon EBS so now if a user wants to",
    "start": "149910",
    "end": "156780"
  },
  {
    "text": "store data somewhere on on one of his volumes the user creates another",
    "start": "156780",
    "end": "164340"
  },
  {
    "text": "kubernetes object which is persistent volume claim it tells kubernetes hey I",
    "start": "164340",
    "end": "170580"
  },
  {
    "text": "want I don't know 10 gigabytes of data please find a volume for me and what",
    "start": "170580",
    "end": "176670"
  },
  {
    "text": "kubernetes does it looks at existing volumes push the volumes find some and",
    "start": "176670",
    "end": "182670"
  },
  {
    "text": "combines the claim and the volume together so now finally user can run a",
    "start": "182670",
    "end": "190770"
  },
  {
    "text": "pot and the cubelet on the node mounts",
    "start": "190770",
    "end": "199650"
  },
  {
    "text": "it goes through all these objects to burn these objects and it mounts the storage asset so that's how storage",
    "start": "199650",
    "end": "206940"
  },
  {
    "text": "works in Coburg notice there is this persistent volume is a pointer to some storage asset somewhere in your network",
    "start": "206940",
    "end": "213350"
  },
  {
    "text": "there is a claim it it is a request for storage and there's a pot who uses the",
    "start": "213350",
    "end": "220290"
  },
  {
    "text": "claim that points to a volume that points to a storage so let's what icon",
    "start": "220290",
    "end": "226890"
  },
  {
    "text": "static provisioning we have to provision this volume ahead so that doesn't scale",
    "start": "226890",
    "end": "232110"
  },
  {
    "text": "well because you don't know how many volumes you you will need you know what size is to create so that's not good so",
    "start": "232110",
    "end": "240780"
  },
  {
    "text": "in kubernetes yeah and you have big organization or big faster than whisper",
    "start": "240780",
    "end": "248250"
  },
  {
    "text": "certain volumes are usually admins admin domain there is somebody who cares about this and user cares about disclaims and",
    "start": "248250",
    "end": "255180"
  },
  {
    "text": "pots so in when the two we introduced dynamic provisioning so there is no",
    "start": "255180",
    "end": "260669"
  },
  {
    "start": "256000",
    "end": "293000"
  },
  {
    "text": "static volume provisioned anywhere ahead user just creates the claim I want 10",
    "start": "260669",
    "end": "266880"
  },
  {
    "text": "gigabyte volume just do something and give me 10 gigabyte volume and what",
    "start": "266880",
    "end": "272400"
  },
  {
    "text": "kubernetes does it has several very plugins we have one for Amazon GCE and",
    "start": "272400",
    "end": "279890"
  },
  {
    "text": "cinder in kubernetes 1.2 and it magically provisions the volume in the",
    "start": "279890",
    "end": "287930"
  },
  {
    "text": "cloud using API calls to Amazon GC or cinder and it creates the constant",
    "start": "287930",
    "end": "296729"
  },
  {
    "start": "293000",
    "end": "330000"
  },
  {
    "text": "volume objects automatically and it binds and you can use you can use it in",
    "start": "296729",
    "end": "302310"
  },
  {
    "text": "the pod so this is good much better than before but this is limited to what",
    "start": "302310",
    "end": "309060"
  },
  {
    "text": "supportive in kubernetes these voting machines are hard-coded so if you have",
    "start": "309060",
    "end": "315270"
  },
  {
    "text": "new cool storage appliance you bought",
    "start": "315270",
    "end": "321320"
  },
  {
    "text": "them sorry kubernetes can't provision stuff on there this is a brief history",
    "start": "321320",
    "end": "331080"
  },
  {
    "start": "330000",
    "end": "464000"
  },
  {
    "text": "how the claim looks like the object that the user creates and the user creates",
    "start": "331080",
    "end": "340830"
  },
  {
    "text": "the claim and he wants user space I want something that's right about and why I",
    "start": "340830",
    "end": "346530"
  },
  {
    "text": "want some I won't do bigger bites of it and in kubernetes wanted to we added a",
    "start": "346530",
    "end": "353610"
  },
  {
    "text": "veggie connotation notice this alpha here the enable dynamic provisioning if",
    "start": "353610",
    "end": "361200"
  },
  {
    "text": "it is enabled on the cluster so whenever user submits describe this magical tration dynamic provisioning happens",
    "start": "361200",
    "end": "370400"
  },
  {
    "text": "in wonder - this was suboptimal because you can't say what do you want you do",
    "start": "373080",
    "end": "379629"
  },
  {
    "text": "want something fast something cheap something free you can say anything and we implemented just the",
    "start": "379629",
    "end": "387340"
  },
  {
    "text": "basics on the cloud so on Amazon you get SSD volume on GCE you get Hydra life I",
    "start": "387340",
    "end": "393969"
  },
  {
    "text": "think and on still on OpenStack syndrome yet whatever is default on cinder and users were not happy about that so in",
    "start": "393969",
    "end": "404909"
  },
  {
    "text": "1.4 we introduced beta annotation and storage classes now the user can say",
    "start": "404909",
    "end": "414819"
  },
  {
    "text": "what class of storage he wants I want something fast and we introduced",
    "start": "414819",
    "end": "421319"
  },
  {
    "text": "storage class object is a new object in component is not for where we say that",
    "start": "421319",
    "end": "426849"
  },
  {
    "text": "fast when the administrator says that fast means I want it on AWS I want I Oh",
    "start": "426849",
    "end": "436060"
  },
  {
    "text": "PS provision volume and I want 50 IO",
    "start": "436060",
    "end": "441699"
  },
  {
    "text": "operations per second per gigabyte so if the user wants four gigabytes we",
    "start": "441699",
    "end": "448029"
  },
  {
    "text": "multiply it and we provision a volume that has 200 cups per seconds guaranteed",
    "start": "448029",
    "end": "455860"
  },
  {
    "text": "in Amazon so again this is hard-coded in the provisions we have in 1.4 we had",
    "start": "455860",
    "end": "465009"
  },
  {
    "start": "464000",
    "end": "483000"
  },
  {
    "text": "again Amazon GC an openstack and in 1.5 we have many more but these are are",
    "start": "465009",
    "end": "471729"
  },
  {
    "text": "hard-coded in kubernetes and that's not enough so what I did in 1.5 if I could",
    "start": "471729",
    "end": "485979"
  },
  {
    "start": "483000",
    "end": "556000"
  },
  {
    "text": "external dynamic provisioning here is the reference to PR and there is this",
    "start": "485979",
    "end": "495180"
  },
  {
    "text": "document where is it which defines sort of",
    "start": "495180",
    "end": "501840"
  },
  {
    "text": "protocol between kubernetes and the dynamic provisioners so you can turn you",
    "start": "501840",
    "end": "512070"
  },
  {
    "text": "can write a piece of code that lives outside of kubernetes it can be it can",
    "start": "512070",
    "end": "517349"
  },
  {
    "text": "be a demon it can be stretched appliance it can be put inside the kubernetes why not it doesn't really matter and here",
    "start": "517349",
    "end": "524010"
  },
  {
    "text": "are some rules if you obey those then kubernetes will accept volumes from you",
    "start": "524010",
    "end": "530100"
  },
  {
    "text": "and they will seamlessly fit into",
    "start": "530100",
    "end": "536430"
  },
  {
    "text": "communities and user can create volumes dynamically in your infrastructure your",
    "start": "536430",
    "end": "542550"
  },
  {
    "text": "stretch infrastructure whatever it is the list of rules is quite long they are",
    "start": "542550",
    "end": "550800"
  },
  {
    "text": "really simple and I will cover them in my presentation so what this proposal",
    "start": "550800",
    "end": "558090"
  },
  {
    "start": "556000",
    "end": "703000"
  },
  {
    "text": "does this PR earth and it has been merged in 205 is that introduced new",
    "start": "558090",
    "end": "565530"
  },
  {
    "text": "annotation so if kubernetes sees a new",
    "start": "565530",
    "end": "570540"
  },
  {
    "text": "person volume claim that user wants some do you mean it looks at the storage",
    "start": "570540",
    "end": "579090"
  },
  {
    "text": "class that the user wants and if kubernetes can't provision the class",
    "start": "579090",
    "end": "584250"
  },
  {
    "text": "that means it's one of these sorting plugins I showed you earlier its proficiency and if it doesn't know how",
    "start": "584250",
    "end": "590640"
  },
  {
    "text": "to provision some crazy storage then it just puts this annotation on the claim",
    "start": "590640",
    "end": "599090"
  },
  {
    "text": "and it's up to the external provision her to watch kubernetes api server for",
    "start": "599090",
    "end": "607050"
  },
  {
    "text": "these crimes with this strange annotation and provisioned volume the",
    "start": "607050",
    "end": "612210"
  },
  {
    "text": "proto I said this document defines the protocol is not a network protocol it's not like send this request you get this",
    "start": "612210",
    "end": "621090"
  },
  {
    "text": "response now it's not Network protocol it's a set of annotations that",
    "start": "621090",
    "end": "627529"
  },
  {
    "text": "are set on the kubernetes objects so the",
    "start": "627529",
    "end": "632779"
  },
  {
    "text": "external dynamic provisional must-watch api server so and what you can do in",
    "start": "632779",
    "end": "643459"
  },
  {
    "text": "this dynamic provision or you can provision the storage a set of course and in the end we have to create the",
    "start": "643459",
    "end": "649069"
  },
  {
    "text": "personal volume object in kubernetes api server and this personal volume object",
    "start": "649069",
    "end": "654499"
  },
  {
    "text": "is limited to what is already supported in kubernetes so you can create NFS you",
    "start": "654499",
    "end": "662329"
  },
  {
    "text": "can create as expensive Gluster Ceph amazon cocoa by broken whatever volume",
    "start": "662329",
    "end": "670399"
  },
  {
    "text": "but mostly volume that is supported by kubernetes and",
    "start": "670399",
    "end": "675850"
  },
  {
    "text": "incapabilities we also have a flex volume again that means that you can",
    "start": "675850",
    "end": "682490"
  },
  {
    "text": "provision flex volume and that means that whenever kubernetes wants to mount",
    "start": "682490",
    "end": "688550"
  },
  {
    "text": "this volume it executes external script or binary which can be anything so you",
    "start": "688550",
    "end": "695149"
  },
  {
    "text": "can mount use your your own to boot among multi edition looked so how this",
    "start": "695149",
    "end": "707149"
  },
  {
    "start": "703000",
    "end": "860000"
  },
  {
    "text": "external provision should work as I said if it must subscribe to the API server",
    "start": "707149",
    "end": "715870"
  },
  {
    "text": "and it which is for changes for person green claims objects so whenever new a PVC is created it",
    "start": "715870",
    "end": "725420"
  },
  {
    "text": "detects that and",
    "start": "725420",
    "end": "729339"
  },
  {
    "text": "it must it was checked that the external",
    "start": "731039",
    "end": "736289"
  },
  {
    "text": "provisioner must check if he is responsible for provisioning this PVC so",
    "start": "736289",
    "end": "744559"
  },
  {
    "text": "user my create claim that references to rich class 1 which references what do we",
    "start": "744559",
    "end": "753479"
  },
  {
    "text": "have Amazon producer this will be handled internally in warranties that if a user",
    "start": "753479",
    "end": "761759"
  },
  {
    "text": "wants to submit a claim which referenced which plus B then which reference this",
    "start": "761759",
    "end": "769769"
  },
  {
    "text": "provisional I don't know a and C I CMC guy from then this emc provisional must",
    "start": "769769",
    "end": "777449"
  },
  {
    "text": "detect that for me i am the one who is responsible for this claim as provisionally how the provisional",
    "start": "777449",
    "end": "784409"
  },
  {
    "text": "detects that it's written in the proposal in the documentation they just",
    "start": "784409",
    "end": "789509"
  },
  {
    "text": "watch the further annotation then the provisional creates the storage asset creates the pv the person volume must",
    "start": "789509",
    "end": "797519"
  },
  {
    "text": "point to the there is there are some fields in the pv object that respect to",
    "start": "797519",
    "end": "807689"
  },
  {
    "text": "the claim that led to the creation kubernetes discovers this new PDO object",
    "start": "807689",
    "end": "815609"
  },
  {
    "text": "it finishes the binding and that's it so",
    "start": "815609",
    "end": "821189"
  },
  {
    "text": "basically what the external provision of dust is the same like what the interim loss this isn't difficult it's pretty easy to",
    "start": "821189",
    "end": "830970"
  },
  {
    "text": "write a new provisional and we made it even easier we will see later what every",
    "start": "830970",
    "end": "838859"
  },
  {
    "text": "provisional must do is also it must do the deleting of modules because when the",
    "start": "838859",
    "end": "846329"
  },
  {
    "text": "volume is not longer necessarily somebody should delete it and only the thing that created it is no known is",
    "start": "846329",
    "end": "855239"
  },
  {
    "text": "known to delete it he's responsible for the deletion so if you know how communities",
    "start": "855239",
    "end": "864139"
  },
  {
    "start": "860000",
    "end": "879000"
  },
  {
    "text": "works when the user decides that he doesn't want the data anymore",
    "start": "864139",
    "end": "869540"
  },
  {
    "text": "it can be deleted then the use of TV's the claim it says I'm done with this TV",
    "start": "869540",
    "end": "875809"
  },
  {
    "text": "I don't need a beta please do whatever you want with that soap abilities",
    "start": "875809",
    "end": "881269"
  },
  {
    "start": "879000",
    "end": "898000"
  },
  {
    "text": "detects that it marks the PBS released and here comes the external provisional",
    "start": "881269",
    "end": "889009"
  },
  {
    "text": "coordinator the deleter must watch not only claims but also volumes it detects",
    "start": "889009",
    "end": "894920"
  },
  {
    "text": "a there is a volume I need to delete and the external datura do is the staunchest",
    "start": "894920",
    "end": "903550"
  },
  {
    "start": "898000",
    "end": "921000"
  },
  {
    "text": "volume and that's it simple so that's it",
    "start": "903550",
    "end": "915170"
  },
  {
    "text": "basically if you understood this then you know how to write external permission and the leader and to make",
    "start": "915170",
    "end": "920600"
  },
  {
    "text": "things even easier we inherited it some proof of concept which turned out into",
    "start": "920600",
    "end": "927410"
  },
  {
    "start": "921000",
    "end": "999000"
  },
  {
    "text": "NFS provisional so it's written by Matthew Vaughn he's sitting over there",
    "start": "927410",
    "end": "936279"
  },
  {
    "text": "and with this fing does if you can run as daemon it can run as the pod it can",
    "start": "936279",
    "end": "943999"
  },
  {
    "text": "run as the demon set we are thinking about running it as that said if you want and it does dynamic provisioning of",
    "start": "943999",
    "end": "951860"
  },
  {
    "text": "NFS volumes so if you are running a",
    "start": "951860",
    "end": "958329"
  },
  {
    "text": "small development cost faster on your notebook or in I don't know few machines",
    "start": "958329",
    "end": "963980"
  },
  {
    "text": "we have in your lab and you want to test pad set and dynamic provisioning and you",
    "start": "963980",
    "end": "971360"
  },
  {
    "text": "don't want to reach out to Google or Amazon or it's too complicated for you you want something you can develop on",
    "start": "971360",
    "end": "977540"
  },
  {
    "text": "then you can use this which can dynamically provisioned volumes you just create a claim and you get NFS share",
    "start": "977540",
    "end": "983449"
  },
  {
    "text": "somewhere and so it also serves as example how to",
    "start": "983449",
    "end": "988459"
  },
  {
    "text": "write this external provision herself if you know how to code in go it's open",
    "start": "988459",
    "end": "995749"
  },
  {
    "text": "source you can contribute which is our local there is documentation how to run",
    "start": "995749",
    "end": "1003339"
  },
  {
    "text": "it how to create a claim how to check it out to debug it and it's also prepare to",
    "start": "1003339",
    "end": "1013959"
  },
  {
    "text": "be extended we are not there yet we are thinking about splitting it into two parts one library for generic",
    "start": "1013959",
    "end": "1020619"
  },
  {
    "text": "provisioners and the NFS part in a different bit have proposed so you just",
    "start": "1020619",
    "end": "1027178"
  },
  {
    "text": "use the library plug the stuff that talks to your stretch infrastructure and",
    "start": "1027179",
    "end": "1034839"
  },
  {
    "text": "all this watching and creating and deleting component of kubernetes objects this will be in the library so you need",
    "start": "1034839",
    "end": "1041350"
  },
  {
    "text": "to pair but you can fork it and delete all this stuff and put your doors there",
    "start": "1041350",
    "end": "1050730"
  },
  {
    "text": "there is somewhere yes there is interface you have to follow so whenever",
    "start": "1050730",
    "end": "1057730"
  },
  {
    "text": "this provisioner wants to provision something it just all the watching all",
    "start": "1057730",
    "end": "1066070"
  },
  {
    "text": "the rest conditions and in Wendy finds out that there is you should provision",
    "start": "1066070",
    "end": "1071860"
  },
  {
    "text": "something that you implement just this one function that get some options like",
    "start": "1071860",
    "end": "1078120"
  },
  {
    "text": "capacity access modes whatever and you return a personal assistant volume",
    "start": "1078120",
    "end": "1085210"
  },
  {
    "text": "object and again it cares about this library will care about is inserting",
    "start": "1085210",
    "end": "1092350"
  },
  {
    "text": "into cooperatives and all the races involved and when there is something to delete then just this function is called",
    "start": "1092350",
    "end": "1099519"
  },
  {
    "text": "and you implement all this only to this provision and delete functions and that's it so enough about this it works",
    "start": "1099519",
    "end": "1110470"
  },
  {
    "start": "1108000",
    "end": "1139000"
  },
  {
    "text": "with kubernetes 1.4 1.5 is recommended",
    "start": "1110470",
    "end": "1116049"
  },
  {
    "text": "the reason is that this magical notation was introduced in",
    "start": "1116049",
    "end": "1123309"
  },
  {
    "text": "module five and it helped the provision error it simplifies the provisional",
    "start": "1123309",
    "end": "1128940"
  },
  {
    "text": "quite a lot and it fixes some erase",
    "start": "1128940",
    "end": "1133960"
  },
  {
    "text": "condition well not fixes it prevents some various conditions I will talk about resolutions",
    "start": "1133960",
    "end": "1140919"
  },
  {
    "start": "1139000",
    "end": "1619000"
  },
  {
    "text": "later I don't worry about them but really 1.5 is recommended the NFS part",
    "start": "1140919",
    "end": "1148360"
  },
  {
    "text": "is nice for production use and that's not because it's crappy this code the code is creepy the code is quite good but NFS the the",
    "start": "1148360",
    "end": "1156010"
  },
  {
    "text": "data is stored only one one note so if the note goes down then your data is lost and you are screwed so this it is",
    "start": "1156010",
    "end": "1163480"
  },
  {
    "text": "good for development for testing for this kind of use but I wouldn't put it",
    "start": "1163480",
    "end": "1168940"
  },
  {
    "text": "in the production if you want something reliable use lustre self or whatever",
    "start": "1168940",
    "end": "1174029"
  },
  {
    "text": "that can survive renewed being destroyed",
    "start": "1174029",
    "end": "1181140"
  },
  {
    "text": "and finally time for the Hmong so cross your fingers I need it because I'm not",
    "start": "1181230",
    "end": "1186730"
  },
  {
    "text": "sure if it really works so I have a claim I want",
    "start": "1186730",
    "end": "1192970"
  },
  {
    "text": "well one megabyte isn't much but okay and if storage class demo",
    "start": "1192970",
    "end": "1200860"
  },
  {
    "text": "ok I should show the class the storage",
    "start": "1200860",
    "end": "1206110"
  },
  {
    "text": "class name demo just refers to the dynamic provisioner so I will create",
    "start": "1206110",
    "end": "1215220"
  },
  {
    "text": "the qualms Sphinx I had the class I will",
    "start": "1217230",
    "end": "1227730"
  },
  {
    "text": "create a claim and the claim and the",
    "start": "1227730",
    "end": "1245130"
  },
  {
    "text": "claim is pending nothing was provisioned that's why because the provisional is not running",
    "start": "1245130",
    "end": "1250680"
  },
  {
    "text": "yet and kubernetes just gives some hints why it was not provisions because",
    "start": "1250680",
    "end": "1256790"
  },
  {
    "text": "kubernetes doesn't know anything about Matthew NFS and like says I don't I",
    "start": "1256790",
    "end": "1268320"
  },
  {
    "text": "won't mess with this crime either do something manually or run air pollution",
    "start": "1268320",
    "end": "1274230"
  },
  {
    "text": "so I will run the provisioner oh no I have just showed up people get PVC llamó",
    "start": "1274230",
    "end": "1284390"
  },
  {
    "text": "all the kubernetes the date is this annotation which tells the provisional",
    "start": "1284390",
    "end": "1291030"
  },
  {
    "text": "that a somebody who is responsible for Matthew slash NFS please provision base",
    "start": "1291030",
    "end": "1296340"
  },
  {
    "text": "and that's where the provisional comes I",
    "start": "1296340",
    "end": "1301730"
  },
  {
    "text": "create now I hope it works",
    "start": "1301730",
    "end": "1310220"
  },
  {
    "text": "of office running cool yet it's a pot",
    "start": "1315140",
    "end": "1323900"
  },
  {
    "text": "it's a pot that runs this office provisioner from the dita people it",
    "start": "1323900",
    "end": "1330300"
  },
  {
    "text": "serves an affair so it has some ports and it tells the code inside that the",
    "start": "1330300",
    "end": "1336390"
  },
  {
    "text": "provisional is responsible for Matt USB flash NFS so this parameter for the",
    "start": "1336390",
    "end": "1342470"
  },
  {
    "text": "daemon running inside the container that please provision everything works formative slash NFS and that's nothing",
    "start": "1342470",
    "end": "1351170"
  },
  {
    "text": "there is no secret sauce it's just a branch binary so at this time we got the",
    "start": "1351170",
    "end": "1363500"
  },
  {
    "text": "the claim get bound to something and if",
    "start": "1363500",
    "end": "1369780"
  },
  {
    "text": "I look at the PDS that this one appeared",
    "start": "1369780",
    "end": "1374630"
  },
  {
    "text": "filled at the yellow that the external provision provisioner provision",
    "start": "1376250",
    "end": "1382590"
  },
  {
    "text": "something that's an offence for you it refers to this share and on this host",
    "start": "1382590",
    "end": "1391170"
  },
  {
    "text": "and this is IP address of the container running the provision so I can finally",
    "start": "1391170",
    "end": "1400170"
  },
  {
    "text": "run a pot this is just a very stupid busy box pot which will mount everest",
    "start": "1400170",
    "end": "1408240"
  },
  {
    "text": "boundlessness claim",
    "start": "1408240",
    "end": "1411410"
  },
  {
    "text": "it was fast",
    "start": "1420519",
    "end": "1424120"
  },
  {
    "text": "so if I look exact this inside the best",
    "start": "1425760",
    "end": "1433440"
  },
  {
    "text": "spot I can see somewhere here that NFS",
    "start": "1433440",
    "end": "1443550"
  },
  {
    "text": "share is mounted to an ant test it's",
    "start": "1443550",
    "end": "1449700"
  },
  {
    "text": "empty but",
    "start": "1449700",
    "end": "1452330"
  },
  {
    "text": "I can create some file there and if now if I look at I don't remember to put",
    "start": "1455059",
    "end": "1463549"
  },
  {
    "text": "maybe enough this is the NFS provisioner",
    "start": "1463549",
    "end": "1474049"
  },
  {
    "text": "and insider NFS provision and it's serving export directory contains all",
    "start": "1474049",
    "end": "1482840"
  },
  {
    "text": "the shares that were created if I look inside then I have the hell over there",
    "start": "1482840",
    "end": "1488330"
  },
  {
    "text": "so the data now is stored in the container so when the container is",
    "start": "1488330",
    "end": "1493580"
  },
  {
    "text": "deleted or your data is lost of course you can amount something more persistent into this export directory",
    "start": "1493580",
    "end": "1500139"
  },
  {
    "text": "and it will exist so yes about the demo",
    "start": "1500139",
    "end": "1510669"
  },
  {
    "text": "maybe also deletion so I delete the pot",
    "start": "1510820",
    "end": "1521289"
  },
  {
    "text": "and now this takes time because this is a busy box running a loop which doesn't",
    "start": "1523999",
    "end": "1529620"
  },
  {
    "text": "react to stick turn so I need to I need to wait for timeout come on",
    "start": "1529620",
    "end": "1541460"
  },
  {
    "text": "who was this not now it's mine",
    "start": "1553780",
    "end": "1561749"
  },
  {
    "text": "you need PVC what was the name describe I think if I look the PV is going to so",
    "start": "1561749",
    "end": "1571929"
  },
  {
    "text": "their external provisional or some DDT in the volume and if I look inside when",
    "start": "1571929",
    "end": "1583869"
  },
  {
    "text": "the directories go on so it was I",
    "start": "1583869",
    "end": "1591879"
  },
  {
    "text": "thought we told you this is this enough explosion is pluggable you will need to implement two simple interfaces which",
    "start": "1591879",
    "end": "1599169"
  },
  {
    "text": "reach out to your storage infrastructure create the volume the storage asset and",
    "start": "1599169",
    "end": "1607320"
  },
  {
    "text": "or create or delete which asset this is better so this can change but it will be",
    "start": "1607529",
    "end": "1615909"
  },
  {
    "text": "the logic the idea is will be the same",
    "start": "1615909",
    "end": "1620249"
  },
  {
    "start": "1619000",
    "end": "1760000"
  },
  {
    "text": "okay so now the question is what to provision you get a claim you know that",
    "start": "1621149",
    "end": "1627159"
  },
  {
    "text": "you are responsible for provisioning it and what you should create actually so the claim contains a lot of information",
    "start": "1627159",
    "end": "1634299"
  },
  {
    "text": "inside it says what access mode the user wants that means that if the user wants",
    "start": "1634299",
    "end": "1641200"
  },
  {
    "text": "something that's read-only readable which is fine kind of useless or if it",
    "start": "1641200",
    "end": "1646629"
  },
  {
    "text": "should be writable or it could be mounted to many but it also contains the",
    "start": "1646629",
    "end": "1652239"
  },
  {
    "text": "capacity which says that how much data is going the user to store there so 10",
    "start": "1652239",
    "end": "1659529"
  },
  {
    "text": "gigabytes 20 right handle events and think that's not so obvious this",
    "start": "1659529",
    "end": "1664809"
  },
  {
    "text": "selector in the claim the user can say that he wants the president Illume that",
    "start": "1664809",
    "end": "1670570"
  },
  {
    "text": "has certain labels for example zone equals e east 1 or color equals blue so",
    "start": "1670570",
    "end": "1680649"
  },
  {
    "text": "the provisional was provision that something that has these labels that means that the provision needs to parse",
    "start": "1680649",
    "end": "1687999"
  },
  {
    "text": "the selector and if user wants something the test label",
    "start": "1687999",
    "end": "1693810"
  },
  {
    "text": "equals east one then the provisional needs to know what zone means that it",
    "start": "1693810",
    "end": "1699930"
  },
  {
    "text": "refers to available Diesel's probably the and the east one is name of the zone",
    "start": "1699930",
    "end": "1705150"
  },
  {
    "text": "and it has to reach to the storage infrastructure to provision the volume",
    "start": "1705150",
    "end": "1712470"
  },
  {
    "text": "in the right zone so that's quite important you have to parse the selector and if",
    "start": "1712470",
    "end": "1718320"
  },
  {
    "text": "the user wants something like shape equals rectangle and your provision",
    "start": "1718320",
    "end": "1724230"
  },
  {
    "text": "doesn't know what shape means and how to provision something was rectangular then it's perfectly okay to say no I won't",
    "start": "1724230",
    "end": "1732150"
  },
  {
    "text": "provision anything because I don't understand this selector that's perfectly okay but bear in mind if you",
    "start": "1732150",
    "end": "1740970"
  },
  {
    "text": "are provisioning something then the selector must be evaluated and you have to provision something that has matching",
    "start": "1740970",
    "end": "1747810"
  },
  {
    "text": "labels and the rest is quite obvious and it's written in the documentation you",
    "start": "1747810",
    "end": "1755250"
  },
  {
    "text": "have to first some annotations to make the rest of cooperative working and that stuff I mentioned something about race",
    "start": "1755250",
    "end": "1762660"
  },
  {
    "start": "1760000",
    "end": "1930000"
  },
  {
    "text": "conditions kubernetes is a very dynamic system objects come and go are deleted",
    "start": "1762660",
    "end": "1769170"
  },
  {
    "text": "created modified it's crazy to write some robust and stable code a",
    "start": "1769170",
    "end": "1777200"
  },
  {
    "text": "message here is that kubernetes worker and we'll fix it for you you don't need",
    "start": "1777200",
    "end": "1785010"
  },
  {
    "text": "to care much about it in their external provisions for example what can happen that user submits a claim you retake it",
    "start": "1785010",
    "end": "1792780"
  },
  {
    "text": "you start provisioning it takes some time and the user changes its mind and",
    "start": "1792780",
    "end": "1797880"
  },
  {
    "text": "do is the claim so we are probably something that this is not needed anymore and ok so you follow the",
    "start": "1797880",
    "end": "1805080"
  },
  {
    "text": "protocol you create a stretcher set you create the client you create instant volume submitted through kubernetes and",
    "start": "1805080",
    "end": "1812190"
  },
  {
    "text": "kubernetes and they detect it ok I have a personal volume and nobody",
    "start": "1812190",
    "end": "1817500"
  },
  {
    "text": "is interested in it and we are real market for deletion so you follow the",
    "start": "1817500",
    "end": "1823410"
  },
  {
    "text": "protocol you see a volume tradition related and that's it so from",
    "start": "1823410",
    "end": "1829230"
  },
  {
    "text": "yours from the extant provisional side there is no race the race is inside kubernetes and kubernetes and was it and",
    "start": "1829230",
    "end": "1835320"
  },
  {
    "text": "if it doesn't place for bugs because i did it wrong this thing happens when you",
    "start": "1835320",
    "end": "1843840"
  },
  {
    "text": "can run to provisioners why not and both of them detect there is a claim i need",
    "start": "1843840",
    "end": "1849990"
  },
  {
    "text": "to provision both create the storage ascent create the personal volume and it meets in kubernetes now kubernetes has",
    "start": "1849990",
    "end": "1856350"
  },
  {
    "text": "two volumes and he chooses one and the rest the second one is marked for division again so we follow the protocol",
    "start": "1856350",
    "end": "1863370"
  },
  {
    "text": "you create everything as you should and something is then marked for deletion",
    "start": "1863370",
    "end": "1869340"
  },
  {
    "text": "and you delete it no race in the external provisioning races in the kubernetes and it should work if not",
    "start": "1869340",
    "end": "1876090"
  },
  {
    "text": "again filled back and also when user",
    "start": "1876090",
    "end": "1884670"
  },
  {
    "text": "submits a claim we look at the existing Peavey's the static one i showed in the",
    "start": "1884670",
    "end": "1890130"
  },
  {
    "text": "first slide so if there is no static volume available we do design dynamic",
    "start": "1890130",
    "end": "1895590"
  },
  {
    "text": "provisioning again the external provisioning provisioner see that start",
    "start": "1895590",
    "end": "1901050"
  },
  {
    "text": "slowly preventing something and at the same time another user creates a static",
    "start": "1901050",
    "end": "1906690"
  },
  {
    "text": "volume in kubernetes sees hey that is the volume let's bind to it and in the",
    "start": "1906690",
    "end": "1911790"
  },
  {
    "text": "end you your provisional creates another volume and we have two volumes bound to",
    "start": "1911790",
    "end": "1918120"
  },
  {
    "text": "one crime and again kubernetes handles that so this message of this slide is",
    "start": "1918120",
    "end": "1923580"
  },
  {
    "text": "don't worry about race is too much info box if something happens",
    "start": "1923580",
    "end": "1929480"
  },
  {
    "start": "1930000",
    "end": "2046000"
  },
  {
    "text": "okay there could be in the future other",
    "start": "1931190",
    "end": "1937289"
  },
  {
    "text": "options how to do dynamic provisioning out of the kubernetes code on Monday we",
    "start": "1937289",
    "end": "1943350"
  },
  {
    "text": "had a storage tech meeting when we discussed how to extend flex volumes now the flex volume can just mount stuff",
    "start": "1943350",
    "end": "1950730"
  },
  {
    "text": "and we are thinking about extending it to also provision stuff so maybe in 1.6",
    "start": "1950730",
    "end": "1959580"
  },
  {
    "text": "maybe later we will have you could use flex volumes they will use different",
    "start": "1959580",
    "end": "1965940"
  },
  {
    "text": "protocol so stay alert",
    "start": "1965940",
    "end": "1971100"
  },
  {
    "text": "but the dynamic provision I described here will keep working so if you need",
    "start": "1971100",
    "end": "1977640"
  },
  {
    "text": "something now you can use the provisioning I described if you can wait and flex",
    "start": "1977640",
    "end": "1983700"
  },
  {
    "text": "looks like interesting to you then you can write and we have proposals for leap",
    "start": "1983700",
    "end": "1991049"
  },
  {
    "text": "for using clip storages volumes web storage is rice and libraries whole",
    "start": "1991049",
    "end": "1998399"
  },
  {
    "text": "framework how to use various storage technologies and lipst rich abstract",
    "start": "1998399",
    "end": "2008570"
  },
  {
    "text": "them and serves unified API the kubernetes to any other thing that wants",
    "start": "2008570",
    "end": "2016419"
  },
  {
    "text": "abstract storage to be honest I don't know how this ends up if it's going to",
    "start": "2016419",
    "end": "2023029"
  },
  {
    "text": "be merged or not or will end up as effects volume but you can watch this PR and if you have plugin for or driver for",
    "start": "2023029",
    "end": "2034309"
  },
  {
    "text": "lip storage then let us know maybe this can change again so that basically",
    "start": "2034309",
    "end": "2043549"
  },
  {
    "text": "concludes my presentation so this dynamic provisioning it works we have",
    "start": "2043549",
    "end": "2051290"
  },
  {
    "start": "2046000",
    "end": "2139000"
  },
  {
    "text": "this NFS provision error you can use in your testing or as a skeleton of",
    "start": "2051290",
    "end": "2058210"
  },
  {
    "text": "bigger if you have some storage appliance or something this can be taken",
    "start": "2058210",
    "end": "2065169"
  },
  {
    "text": "as example and yeah right",
    "start": "2065169",
    "end": "2071230"
  },
  {
    "text": "produce and the questions well you may",
    "start": "2071230",
    "end": "2078780"
  },
  {
    "text": "yeah it is a 11.5 even in 1.4 but they",
    "start": "2109770",
    "end": "2116589"
  },
  {
    "text": "are not they're not all the annotations you have to do some stuff manually but",
    "start": "2116589",
    "end": "2122800"
  },
  {
    "text": "it is possible to write provisional for 1.4 yes that's what is the was the",
    "start": "2122800",
    "end": "2133900"
  },
  {
    "text": "stance on static so this question is was the stance of",
    "start": "2133900",
    "end": "2141859"
  },
  {
    "start": "2139000",
    "end": "2209000"
  },
  {
    "text": "stetic personal volumes esthetic volumes",
    "start": "2141859",
    "end": "2147049"
  },
  {
    "text": "are not going to be faced out there will be there and the reason is legacy",
    "start": "2147049",
    "end": "2154190"
  },
  {
    "text": "storage if you have NFS share if I don't",
    "start": "2154190",
    "end": "2160970"
  },
  {
    "text": "know pictures or videos you need to process in Cooper naty's then you need",
    "start": "2160970",
    "end": "2167210"
  },
  {
    "text": "to weigh how to reach it so that's typical brownfield you have",
    "start": "2167210",
    "end": "2173839"
  },
  {
    "text": "some application running in your company and you want to use kubernetes to use",
    "start": "2173839",
    "end": "2179750"
  },
  {
    "text": "the old data you have since decades then static volumes that's it that I would",
    "start": "2179750",
    "end": "2187609"
  },
  {
    "text": "suggest everybody use dynamic provision everywhere you can because that's much",
    "start": "2187609",
    "end": "2192650"
  },
  {
    "text": "better you don't waste resources with recreating volumes and stuff so that's",
    "start": "2192650",
    "end": "2200690"
  },
  {
    "text": "it another question",
    "start": "2200690",
    "end": "2203950"
  },
  {
    "text": "yeah question is what happens if claim increases sighs and the answer is claim",
    "start": "2208540",
    "end": "2214310"
  },
  {
    "text": "do not create a claims are not resizable right now if you want to resize it you",
    "start": "2214310",
    "end": "2220609"
  },
  {
    "text": "get error that the object is immutable in the future we may extend it well we",
    "start": "2220609",
    "end": "2227030"
  },
  {
    "text": "will extend it we have couple of requests to extended that I don't know when the future is if this one does 61.7",
    "start": "2227030",
    "end": "2233660"
  },
  {
    "text": "I don't know so right now the volumes and claims are fixed size if the user",
    "start": "2233660",
    "end": "2240170"
  },
  {
    "text": "decides that he wants something bigger than it's up to the user to create a new claim you volume and move the data right",
    "start": "2240170",
    "end": "2248540"
  },
  {
    "text": "now",
    "start": "2248540",
    "end": "2250780"
  },
  {
    "start": "2259000",
    "end": "2304000"
  },
  {
    "text": "how is it with snapshots and back up again this is about dynamic provisioning and we don't recoupment is currently we",
    "start": "2259880",
    "end": "2267450"
  },
  {
    "text": "don't have any means to do snapshots but again we get requests we know about them and we will extend it there will be",
    "start": "2267450",
    "end": "2275550"
  },
  {
    "text": "snapshots but I don't know again I don't know when because these snapshots are pretty complicated because sometimes you",
    "start": "2275550",
    "end": "2282960"
  },
  {
    "text": "know always you need the application support so the application is to flash the caches and the memory so I don't",
    "start": "2282960",
    "end": "2291420"
  },
  {
    "text": "know how how this is going to happen and one sorry this you so how do we",
    "start": "2291420",
    "end": "2305400"
  },
  {
    "start": "2304000",
    "end": "2348000"
  },
  {
    "text": "guarantee that the volume was created when port needs it and we guaranteed it",
    "start": "2305400",
    "end": "2311760"
  },
  {
    "text": "in very simple way yeah so the user can",
    "start": "2311760",
    "end": "2320520"
  },
  {
    "text": "create a claim and the port at the same time it's perfectly okay but cube let",
    "start": "2320520",
    "end": "2327590"
  },
  {
    "text": "the stofflet ransom notes won't start the container until the the claim is",
    "start": "2327590",
    "end": "2334800"
  },
  {
    "text": "bound to something so it won't touch ports that are not fully bound to their",
    "start": "2334800",
    "end": "2342750"
  },
  {
    "text": "volumes",
    "start": "2342750",
    "end": "2345170"
  },
  {
    "start": "2348000",
    "end": "2402000"
  },
  {
    "text": "question is if induce dependencies the component is I don't think I think there",
    "start": "2349099",
    "end": "2354599"
  },
  {
    "text": "is just check somewhere in the qubit code that won't start the container",
    "start": "2354599",
    "end": "2359759"
  },
  {
    "text": "until everything is bound now the question oh so many questions there the guy in the back contain the",
    "start": "2359759",
    "end": "2372420"
  },
  {
    "text": "last body mass which is about generally guys I don't do continuous movements that that the future of flex volumes we",
    "start": "2372420",
    "end": "2380219"
  },
  {
    "text": "want to run flex volumes in containers maybe in 1.6 but no promises",
    "start": "2380219",
    "end": "2386930"
  },
  {
    "text": "yes you can create as many pots as you",
    "start": "2388910",
    "end": "2407999"
  },
  {
    "start": "2402000",
    "end": "2471000"
  },
  {
    "text": "want in a sequence of course and as long as the claim leaves the data is there so",
    "start": "2407999",
    "end": "2416999"
  },
  {
    "text": "you can create post delete ports use different words with the same datum as",
    "start": "2416999",
    "end": "2423269"
  },
  {
    "text": "perfectly okay but when the PVC when the claim is deleted visited the data so",
    "start": "2423269",
    "end": "2429569"
  },
  {
    "text": "piece people don't delete your claims you will deduce data the pet support",
    "start": "2429569",
    "end": "2438440"
  },
  {
    "text": "pack set contains template of the pot and template of the PVC so for every pet",
    "start": "2438440",
    "end": "2446190"
  },
  {
    "text": "you get new PVC and it works any other",
    "start": "2446190",
    "end": "2451829"
  },
  {
    "text": "questions store employee yeah you mentioned that",
    "start": "2451829",
    "end": "2462840"
  },
  {
    "text": "you already eat",
    "start": "2462840",
    "end": "2465770"
  },
  {
    "start": "2471000",
    "end": "2504000"
  },
  {
    "text": "well lots of storage vendors have some secret sauce than one they don't want to",
    "start": "2471579",
    "end": "2477230"
  },
  {
    "text": "expose that because if it is internal provisioner it's open-source that's one",
    "start": "2477230",
    "end": "2484010"
  },
  {
    "text": "thing and the second thing is you have",
    "start": "2484010",
    "end": "2489260"
  },
  {
    "text": "to pass a review and sentry standards to be inside kubernetes and that's quite hard and it's getting harder and harder",
    "start": "2489260",
    "end": "2497560"
  },
  {
    "text": "no offense like that was and the first",
    "start": "2499220",
    "end": "2508460"
  },
  {
    "start": "2504000",
    "end": "2572000"
  },
  {
    "text": "thing you want to really have different risk schedule you don't want to wait for",
    "start": "2508460",
    "end": "2517819"
  },
  {
    "text": "months for kubernetes to be released with your plugin if you do it externally you released it now and it's on the",
    "start": "2517819",
    "end": "2523640"
  },
  {
    "text": "market any other questions yeah",
    "start": "2523640",
    "end": "2530349"
  },
  {
    "text": "but it's what recognize that the same sports can satisfy that point because",
    "start": "2538400",
    "end": "2545190"
  },
  {
    "text": "it's here what I get",
    "start": "2545190",
    "end": "2548780"
  },
  {
    "text": "if you have two claims in two different namespaces they can't refer to the same",
    "start": "2551660",
    "end": "2559980"
  },
  {
    "text": "PV this is not possible you can't shut it out this way you need to yes every",
    "start": "2559980",
    "end": "2573270"
  },
  {
    "start": "2572000",
    "end": "2591000"
  },
  {
    "text": "claim is its own PB you can't have two claims shutting the same PV this is not possible",
    "start": "2573270",
    "end": "2579740"
  },
  {
    "text": "yeah do I need to run this NFS provision",
    "start": "2581660",
    "end": "2596190"
  },
  {
    "start": "2591000",
    "end": "2635000"
  },
  {
    "text": "or in privilege mode yes you need to but it doesn't match you can answer that",
    "start": "2596190",
    "end": "2605520"
  },
  {
    "text": "better than me the NFS server there doesn't run in in the car no it runs in",
    "start": "2605520",
    "end": "2611400"
  },
  {
    "text": "the user space and I don't remember the exact reason why it needs to be privileged actually ok it doesn't need",
    "start": "2611400",
    "end": "2618600"
  },
  {
    "text": "to be privileged",
    "start": "2618600",
    "end": "2621200"
  },
  {
    "text": "oh we can look at the pot so the",
    "start": "2624180",
    "end": "2636569"
  },
  {
    "start": "2635000",
    "end": "2654000"
  },
  {
    "text": "capabilities of the provisioning pot is system in and this year itself so it",
    "start": "2636569",
    "end": "2644010"
  },
  {
    "text": "needs some privileges but probably doesn't need to be like privileged container then an emphasis user space it",
    "start": "2644010",
    "end": "2656369"
  },
  {
    "start": "2654000",
    "end": "2674000"
  },
  {
    "text": "should be just user space demon doesn't need anything in control so any other",
    "start": "2656369",
    "end": "2665339"
  },
  {
    "text": "questions is this all then thank you for attention",
    "start": "2665339",
    "end": "2671930"
  }
]