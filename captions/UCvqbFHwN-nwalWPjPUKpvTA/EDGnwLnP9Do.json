[
  {
    "text": "all right i think it's a good time to start this webinar this introduction to",
    "start": "1360",
    "end": "6960"
  },
  {
    "text": "psyllium tetragon welcome all of you who have joined um to",
    "start": "6960",
    "end": "12160"
  },
  {
    "text": "once more go over housekeeping and logistics all of you who have joined you have been automatically muted um to make",
    "start": "12160",
    "end": "18480"
  },
  {
    "text": "the experience as inter as as least interruptive as possible if you have",
    "start": "18480",
    "end": "24000"
  },
  {
    "text": "questions uh feel free to ask them in the zoom chat as a message to everybody",
    "start": "24000",
    "end": "29679"
  },
  {
    "text": "and we will either answer them on air as we have time or answer them in the chats directly",
    "start": "29679",
    "end": "35680"
  },
  {
    "text": "this session is recorded and will make the recording available afterwards",
    "start": "35680",
    "end": "41040"
  },
  {
    "text": "presenting today will be myself thomas groff co-founder and cto of isovalent as well",
    "start": "41040",
    "end": "47440"
  },
  {
    "text": "as john fastband who has created the tetragon project originally and has also",
    "start": "47440",
    "end": "53199"
  },
  {
    "text": "been a long time silly maintainer also senior staff software engineer for",
    "start": "53199",
    "end": "58239"
  },
  {
    "text": "isovalent so let's jump in this uh series will be introducing",
    "start": "58239",
    "end": "64080"
  },
  {
    "text": "tetragon ebpf based security observability and runtime enforcement",
    "start": "64080",
    "end": "71119"
  },
  {
    "text": "what we'll cover today is why tetragon look into security observability cover",
    "start": "71119",
    "end": "78320"
  },
  {
    "text": "runtime enforcement look at a lot of examples of what can be done with",
    "start": "78320",
    "end": "83360"
  },
  {
    "text": "tetragon and then host a q a section so let's jump right in and get a first",
    "start": "83360",
    "end": "90479"
  },
  {
    "text": "overview of tetragon so what is tetragon tetragon is essentially a agent that can",
    "start": "90479",
    "end": "97119"
  },
  {
    "text": "run on any machine any linux machine this could be a kubernetes worker node it could also be a non-kubernetes node",
    "start": "97119",
    "end": "104479"
  },
  {
    "text": "essentially any machine and it will use ebpf to extract security relevant",
    "start": "104479",
    "end": "109680"
  },
  {
    "text": "observability and also provide runtime enforcement as you can see there is a lot of",
    "start": "109680",
    "end": "116240"
  },
  {
    "text": "different layers at which tetracon can extract value from or do enforce them in",
    "start": "116240",
    "end": "121920"
  },
  {
    "text": "starting from the lower levels such as data access file access the network a",
    "start": "121920",
    "end": "127360"
  },
  {
    "text": "variety of protocol parsers then name spacing or like name space technology in",
    "start": "127360",
    "end": "132480"
  },
  {
    "text": "the kernel whether these are network namespaces cpu mount name spaces as well as capabilities and privileged cape or",
    "start": "132480",
    "end": "138959"
  },
  {
    "text": "privileged access the virtual file system in terms of file access tcp layers for example to uh",
    "start": "138959",
    "end": "146239"
  },
  {
    "text": "introspect tcp sequence numbers identify sequence number attacks as well as the",
    "start": "146239",
    "end": "151440"
  },
  {
    "text": "system and process execution layer but it does not only or it does not only cover the system level it also covers",
    "start": "151440",
    "end": "158239"
  },
  {
    "text": "applications so we can also for example extract function calls or or function",
    "start": "158239",
    "end": "163920"
  },
  {
    "text": "traces look at executed code and so on very important tetragon is is",
    "start": "163920",
    "end": "170080"
  },
  {
    "text": "transparent which means no code changes are required all of the observability all of the",
    "start": "170080",
    "end": "176080"
  },
  {
    "text": "enforcement capabilities are provided completely transparently the all the observability data all the",
    "start": "176080",
    "end": "182800"
  },
  {
    "text": "policies that come in they are integrated with other systems and you can see many of them listed above",
    "start": "182800",
    "end": "189200"
  },
  {
    "text": "metrics for example prometheus grafana for a lot of the security relevant events they will typically go into an",
    "start": "189200",
    "end": "195200"
  },
  {
    "text": "siem can be streamed by a fluency to auto systems as well as for example grafana elasticsearch as well as open",
    "start": "195200",
    "end": "202080"
  },
  {
    "text": "telemetry or the raw json output tetragon is part of the psyllium project",
    "start": "202080",
    "end": "208159"
  },
  {
    "text": "family if that is automatically part of the cloud native computing foundation so",
    "start": "208159",
    "end": "213200"
  },
  {
    "text": "it is essentially a independent project from a technical perspective independent project on the distilling umbrella but",
    "start": "213200",
    "end": "220319"
  },
  {
    "text": "it essentially benefits and is governed by the psyllium open source governance",
    "start": "220319",
    "end": "226000"
  },
  {
    "text": "model let's jump into why tata gone in terms",
    "start": "226000",
    "end": "231519"
  },
  {
    "text": "of runtime security and security observability what is needed and why we created uh tetragon is because the",
    "start": "231519",
    "end": "238000"
  },
  {
    "text": "security has to be done in real time so when we protect workloads that are running we need to be able to detect",
    "start": "238000",
    "end": "245200"
  },
  {
    "text": "malicious activity in real time we need to be reporting when malicious events",
    "start": "245200",
    "end": "250239"
  },
  {
    "text": "occur and then even better prevent them before they perform any damage and we'll",
    "start": "250239",
    "end": "255760"
  },
  {
    "text": "look at a variety of examples on how that can be achieved this lists some of the activities that",
    "start": "255760",
    "end": "261759"
  },
  {
    "text": "we need to monitor in order to detect and report malicious intent such as",
    "start": "261759",
    "end": "267440"
  },
  {
    "text": "network traffic file i o activity running of executables or",
    "start": "267440",
    "end": "273199"
  },
  {
    "text": "process execution as well as system call activity and changes in the privileges",
    "start": "273199",
    "end": "278400"
  },
  {
    "text": "and namespace boundaries this can be done or has been done in a",
    "start": "278400",
    "end": "283440"
  },
  {
    "text": "variety of different ways in the past so we'll cover essentially why we have",
    "start": "283440",
    "end": "288560"
  },
  {
    "text": "created tetragon next by looking at existing solutions and existing of existing approaches and then compare",
    "start": "288560",
    "end": "294639"
  },
  {
    "text": "that to tetragon this includes ld preload ptrace secomp lsm and lsm edpf",
    "start": "294639",
    "end": "301120"
  },
  {
    "text": "as well as other approaches of etf to perform this type of security",
    "start": "301120",
    "end": "306639"
  },
  {
    "text": "this is probably the oldest or one of the oldest approaches ld preload so the ability to load a library into an",
    "start": "306639",
    "end": "313120"
  },
  {
    "text": "application without the awareness or without changing that application with ld preload we can essentially load a",
    "start": "313120",
    "end": "319759"
  },
  {
    "text": "library that will inject itself into the application and have all the system calls that the",
    "start": "319759",
    "end": "325919"
  },
  {
    "text": "application performs be handled by that library instead of by the kernel itself",
    "start": "325919",
    "end": "331520"
  },
  {
    "text": "this is called a system called proxy or ld preload proxy this is great but it",
    "start": "331520",
    "end": "337600"
  },
  {
    "text": "can be bypassed obviously if the binary of the application is statically linked ld",
    "start": "337600",
    "end": "343039"
  },
  {
    "text": "preload will have no effect and we lose all visibility as well as any enforcement that is done there is",
    "start": "343039",
    "end": "349520"
  },
  {
    "text": "ineffective so essentially this has quickly been abandoned from that perspective",
    "start": "349520",
    "end": "354560"
  },
  {
    "text": "we can do system call checking when we enter or when system calls enter the kernel at the syscall entry examples of",
    "start": "354560",
    "end": "361840"
  },
  {
    "text": "this rp trace cycomp as well as ebpfk probes or says call based entry or cisco",
    "start": "361840",
    "end": "368960"
  },
  {
    "text": "entry based edpf checks this is already massively better than lb",
    "start": "368960",
    "end": "374080"
  },
  {
    "text": "preload because the application cannot easily bypass the injection of this but",
    "start": "374080",
    "end": "379600"
  },
  {
    "text": "it is uh vulnerable to so-called t-o-c-t-t-o-u",
    "start": "379600",
    "end": "386080"
  },
  {
    "text": "attack so time of check versus time of use this means that the hook point when",
    "start": "386080",
    "end": "391919"
  },
  {
    "text": "the system call or when the ebpf program or that the solution sees the system call is before the last moment the",
    "start": "391919",
    "end": "399680"
  },
  {
    "text": "application can change system call arguments and you can see this in the picture here um essentially the hook is at the entry",
    "start": "399680",
    "end": "406960"
  },
  {
    "text": "but the system called handling copying the essentially the memory that contains",
    "start": "406960",
    "end": "412080"
  },
  {
    "text": "the system called arguments is after this entry point which means the application could actually create a",
    "start": "412080",
    "end": "417600"
  },
  {
    "text": "system called uh present arguments in the system call such as i want to open this file and then",
    "start": "417600",
    "end": "424000"
  },
  {
    "text": "the hook point runs it validates and afterwards the application could still change what file it wants to open",
    "start": "424000",
    "end": "431199"
  },
  {
    "text": "there's a couple of references here to conference talks that have listed details around this attack the most",
    "start": "431199",
    "end": "437520"
  },
  {
    "text": "well-known one is probably the phantom attack that has been covered at fcon 29",
    "start": "437520",
    "end": "442800"
  },
  {
    "text": "so what is important is that we need to make this check whatever system call a runtime enforcement check we perform it",
    "start": "442800",
    "end": "448240"
  },
  {
    "text": "needs to be done at the right level to be effective some of you may have heard of lsm or",
    "start": "448240",
    "end": "454479"
  },
  {
    "text": "linux security modules this is a relatively old api itself it allows to do linux",
    "start": "454479",
    "end": "461440"
  },
  {
    "text": "security checks or additional security enforcement at the right level and it is",
    "start": "461440",
    "end": "467199"
  },
  {
    "text": "a stable interface and is a very safe place to make checks but it is very static and it requires essentially",
    "start": "467199",
    "end": "473759"
  },
  {
    "text": "additional kernel modules then astronomers to load us additional lsm",
    "start": "473759",
    "end": "478800"
  },
  {
    "text": "probes better known or better suited is actually ebpf or bpf lsm that allows to",
    "start": "478800",
    "end": "485680"
  },
  {
    "text": "use ebpf to make lsm dynamic this is already a major step forward and",
    "start": "485680",
    "end": "491280"
  },
  {
    "text": "actually pretty close to what we want the problem with this is that it needs a kernel version 5.7 and it is limited to",
    "start": "491280",
    "end": "500319"
  },
  {
    "text": "the hook points that lsm itself provides so if any additional hook points are",
    "start": "500319",
    "end": "505360"
  },
  {
    "text": "needed we again need to change kernel code and the kernel requirement goes up even further",
    "start": "505360",
    "end": "511039"
  },
  {
    "text": "this is essentially why we have created psyllium tetragon so we want the same properties in terms of safety security",
    "start": "511039",
    "end": "517360"
  },
  {
    "text": "and hook points as ebpf lsm but we want to have or avoid the reason kernel",
    "start": "517360",
    "end": "523360"
  },
  {
    "text": "requirement and we want to add additional hook points that are not found in lsm as well as have the",
    "start": "523360",
    "end": "530800"
  },
  {
    "text": "flexibility to have multiple ebpf programs share state with each other using maps this is",
    "start": "530800",
    "end": "537760"
  },
  {
    "text": "the silo or the database item that you can see on the right here this allows for multiple coordinated",
    "start": "537760",
    "end": "544800"
  },
  {
    "text": "edpf programs to work together and we will see examples of why that matters later on it also allows us to do in",
    "start": "544800",
    "end": "552000"
  },
  {
    "text": "kernel event filtering so this is the basis of the high performance observability that ebpf and tetragon can",
    "start": "552000",
    "end": "559040"
  },
  {
    "text": "provide so let's jump right into observability here what is what is the type of",
    "start": "559040",
    "end": "565839"
  },
  {
    "text": "observability that um that tetragon can provide and i see the first question that came in as well what",
    "start": "565839",
    "end": "572480"
  },
  {
    "text": "will be one of the main differences use of tetragon with the datadog agent running",
    "start": "572480",
    "end": "577600"
  },
  {
    "text": "security runtime security features that's what can actually address that right away as",
    "start": "577600",
    "end": "583040"
  },
  {
    "text": "we go through the observability page here so the the basis of tetragon is this agent which uses in-kernel",
    "start": "583040",
    "end": "590240"
  },
  {
    "text": "collectors ebpf-based to collect a variety of different observability uh",
    "start": "590240",
    "end": "595760"
  },
  {
    "text": "data or a different observability data types process execution system call activity file",
    "start": "595760",
    "end": "601680"
  },
  {
    "text": "access tcp metadata name spacing information capability changes privileges uh",
    "start": "601680",
    "end": "608399"
  },
  {
    "text": "privilege changes data access on the storage side on the file exercise a lot",
    "start": "608399",
    "end": "613600"
  },
  {
    "text": "of different network activity visibility functions including raw layer 3 layer 4",
    "start": "613600",
    "end": "618880"
  },
  {
    "text": "as well as different protocols because of ebpf smart collector ability so ebpf has",
    "start": "618880",
    "end": "625839"
  },
  {
    "text": "specialized map types and functions such as stack traces and ring buffers and metrics and hash maps this can be done",
    "start": "625839",
    "end": "633040"
  },
  {
    "text": "very very effectively so we can combine this deep visibility so you can see across the stack we can extract",
    "start": "633040",
    "end": "639440"
  },
  {
    "text": "visibility from lower levels network storage all the way up into the application we can combine this deep",
    "start": "639440",
    "end": "646399"
  },
  {
    "text": "visibility with the transparency so it's our app agnostic and no changes to",
    "start": "646399",
    "end": "651760"
  },
  {
    "text": "the applications needed so far this is in line with other collectors as well many of them",
    "start": "651760",
    "end": "658079"
  },
  {
    "text": "also have pretty deep visibility where it where it becomes unique and different is the low overhead",
    "start": "658079",
    "end": "664880"
  },
  {
    "text": "you can see this smart collector item in the kernel portion of the tetragon piece there on the left",
    "start": "664880",
    "end": "671839"
  },
  {
    "text": "all of the filtering the aggregation is done in kernel which means we can",
    "start": "671839",
    "end": "677040"
  },
  {
    "text": "massively reduce the amount of data the amount of observability data that is sent from kernel so from the kernel",
    "start": "677040",
    "end": "683680"
  },
  {
    "text": "runtime to the tetragon agent this is the arrow in between kernel and the bigger being on top",
    "start": "683680",
    "end": "689519"
  },
  {
    "text": "and that is typically the biggest overhand so if we send a lot of observability data from the kernel into",
    "start": "689519",
    "end": "695519"
  },
  {
    "text": "the agent in user space that will impose a lot of foreign so the more filtering",
    "start": "695519",
    "end": "700560"
  },
  {
    "text": "the more aggregation we can do in kernel the lord overhead make a concrete example it is massively more efficient",
    "start": "700560",
    "end": "708480"
  },
  {
    "text": "to for example collect metrics such as a rate or a histogram in kernel compared",
    "start": "708480",
    "end": "714240"
  },
  {
    "text": "to sending individual events to the user space and accounting for the metric in",
    "start": "714240",
    "end": "719279"
  },
  {
    "text": "user space so that's the main difference to existing or other collectors ebpf gives",
    "start": "719279",
    "end": "726959"
  },
  {
    "text": "this like foundation this framework to to provide massively low overhead",
    "start": "726959",
    "end": "732399"
  },
  {
    "text": "observability um very similar to how perth some of you might heard have heard of the perth uh performance",
    "start": "732399",
    "end": "739279"
  },
  {
    "text": "troubleshooting and um perf trouble or tracing you tracing utility",
    "start": "739279",
    "end": "745200"
  },
  {
    "text": "that also uses the same mechanisms to provide high performance visibility more into the the function call and memory",
    "start": "745200",
    "end": "752480"
  },
  {
    "text": "and cpu consumption or memory and cpu usage aspects",
    "start": "752480",
    "end": "757760"
  },
  {
    "text": "lastly integrations um all of this visibility is useless if we cannot integrate this into existing systems um",
    "start": "757760",
    "end": "764720"
  },
  {
    "text": "what we currently support is prometheus profana a variety of sims or sims flu",
    "start": "764720",
    "end": "770560"
  },
  {
    "text": "and d open telemetry as well as elasticsearch but with the json export",
    "start": "770560",
    "end": "776160"
  },
  {
    "text": "and in particular with the prometheus capabilities this can for example also go into a datadock dashboarding or into",
    "start": "776160",
    "end": "782720"
  },
  {
    "text": "a variety of monitoring platforms that cloud providers offer",
    "start": "782720",
    "end": "788880"
  },
  {
    "text": "if we go into a bit of more details and then into examples first of all context is everything in",
    "start": "788880",
    "end": "795120"
  },
  {
    "text": "terms of security right so we need to understand as much content as possible and we'll see that as we go into the",
    "start": "795120",
    "end": "801519"
  },
  {
    "text": "examples next because the better the context the easier it will be to understand for security teams in log",
    "start": "801519",
    "end": "808720"
  },
  {
    "text": "files and the more accurate the alerts will be this means that based on logs",
    "start": "808720",
    "end": "813839"
  },
  {
    "text": "and alerts we can quicker and easier identify what is the cause and what is",
    "start": "813839",
    "end": "819600"
  },
  {
    "text": "affected so let's look at a couple of examples and we'll start very very basic and then go go further",
    "start": "819600",
    "end": "826320"
  },
  {
    "text": "i'm starting with very basic network interface metrics like how much traffic on what network interface right boring",
    "start": "826320",
    "end": "834000"
  },
  {
    "text": "but yes natural con can do this as well let's go further and let's look at for example tcp latency this is already a",
    "start": "834000",
    "end": "840160"
  },
  {
    "text": "lot more interesting transparently measuring the round trip time for tcp connections",
    "start": "840160",
    "end": "846160"
  },
  {
    "text": "combined with dns visibility so we can see the round trip time over time to a",
    "start": "846160",
    "end": "851279"
  },
  {
    "text": "variety of external dns endpoints or external endpoints uh and essentially labeled by",
    "start": "851279",
    "end": "858399"
  },
  {
    "text": "the dns name that was used so we can see the latency to stats.profile.org api.twitter.com a variety of aws",
    "start": "858399",
    "end": "865600"
  },
  {
    "text": "endpoints and so on already pretty interesting and all of things this is done completely transparently so you can",
    "start": "865600",
    "end": "871600"
  },
  {
    "text": "identify what connections what endpoints are subject to for example higher round-trip latency",
    "start": "871600",
    "end": "878639"
  },
  {
    "text": "but then also traffic accounting we can see what in this example a dashboard shows which kubernetes part is egressing",
    "start": "878639",
    "end": "885600"
  },
  {
    "text": "or transmitting how much traffic this is in case is on a pod level so i'm just at",
    "start": "885600",
    "end": "890880"
  },
  {
    "text": "the pod name level but this could also be annotated with the label that represents the name space the region the",
    "start": "890880",
    "end": "897440"
  },
  {
    "text": "availability zone so you can measure cross region or cross ac traffic easily with this as well",
    "start": "897440",
    "end": "903839"
  },
  {
    "text": "in another prometheus metric example we can look at tls and ssl two examples",
    "start": "903839",
    "end": "909600"
  },
  {
    "text": "here for example matching or extracting the sni name so what are the the",
    "start": "909600",
    "end": "915600"
  },
  {
    "text": "different sni domain names or host names that connections use so we can easily",
    "start": "915600",
    "end": "920639"
  },
  {
    "text": "see what our apps or what host names or our our apps reaching out to as well as tls",
    "start": "920639",
    "end": "927680"
  },
  {
    "text": "handshake so understanding what connection or which type of endpoint network endpoint is receiving",
    "start": "927680",
    "end": "934880"
  },
  {
    "text": "tls handshakes we could just annotate this further with for example tls version or cipher we'll see examples of",
    "start": "934880",
    "end": "942720"
  },
  {
    "text": "that next as i mentioned all of this observability can go into an sim such as elastics or",
    "start": "942720",
    "end": "949839"
  },
  {
    "text": "splunk or something else and then you can query this so this is an example query to detect weak or vulnerable tls",
    "start": "949839",
    "end": "957199"
  },
  {
    "text": "versions we can see that we are querying all events where we have tls information",
    "start": "957199",
    "end": "963600"
  },
  {
    "text": "that that implied tls version 1.0 or 1.1 and",
    "start": "963600",
    "end": "969519"
  },
  {
    "text": "then also i want to show things like the process name the namespace the pod name the sni",
    "start": "969519",
    "end": "975920"
  },
  {
    "text": "the port the ips the store time the pid and so on so we can get rich context",
    "start": "975920",
    "end": "982160"
  },
  {
    "text": "while we detect weak or vulnerable use of tls",
    "start": "982160",
    "end": "988399"
  },
  {
    "text": "diving deeper into the networking side this is an example of the networking related events when a connection happens",
    "start": "988399",
    "end": "994480"
  },
  {
    "text": "so we can observe everything from dns hdp and tcp so if you go from the top to",
    "start": "994480",
    "end": "1000399"
  },
  {
    "text": "the bottom you see at the very beginning a process is started curl and curl is is",
    "start": "1000399",
    "end": "1005839"
  },
  {
    "text": "essentially invoked with the argument psyllium dot io we can then see the dns resolution this is in this case this is",
    "start": "1005839",
    "end": "1012399"
  },
  {
    "text": "a kubernetes part so it will attempt to resolve a variety of different kubernetes service names um to",
    "start": "1012399",
    "end": "1018720"
  },
  {
    "text": "essentially expand this into what could be a kubernetes service name this all failed so it does not resolve until we",
    "start": "1018720",
    "end": "1025038"
  },
  {
    "text": "actually go and resolve 7. i o we see the ip returned then we see the connect",
    "start": "1025039",
    "end": "1030079"
  },
  {
    "text": "system call we see that this is a tcp connection we see hdp here we can see that that that cylinder i o actually",
    "start": "1030079",
    "end": "1037600"
  },
  {
    "text": "returns an http 301 um to essentially redirect us to the https version and",
    "start": "1037600",
    "end": "1044640"
  },
  {
    "text": "then we see that a socket gets opened we see the amount of traffic that that was",
    "start": "1044640",
    "end": "1049679"
  },
  {
    "text": "caused on that soccer both on receive and transmit so you see a variety of different um",
    "start": "1049679",
    "end": "1054880"
  },
  {
    "text": "observability data here from process execution to dns layer to connect system call itself all the",
    "start": "1054880",
    "end": "1061039"
  },
  {
    "text": "way into http traffic parsing but then go we can go more and go more",
    "start": "1061039",
    "end": "1066400"
  },
  {
    "text": "into the security side for example auditing what are all the ports on which",
    "start": "1066400",
    "end": "1071840"
  },
  {
    "text": "applications are listening on so we can query our entire database of tell me all",
    "start": "1071840",
    "end": "1077039"
  },
  {
    "text": "the parts which are listening on particular ports you can see the result at the bottom so we see what are the",
    "start": "1077039",
    "end": "1083760"
  },
  {
    "text": "parts with all the labels that are listening on for example port 9080 or port 5333",
    "start": "1083760",
    "end": "1090720"
  },
  {
    "text": "we see the actual binary so we see that in one case this is netcat essentially listening on port five three three two",
    "start": "1090720",
    "end": "1096960"
  },
  {
    "text": "three in other case this is a python application we can also see who has been invoking this um so we see that in one",
    "start": "1096960",
    "end": "1103200"
  },
  {
    "text": "case this was directly spawned from a shell in other case it was container d shim",
    "start": "1103200",
    "end": "1110080"
  },
  {
    "text": "we can detect dns bypass attempt so let's say a pod instead of talking to cube dns or kubernetes dns attempts to",
    "start": "1110480",
    "end": "1117600"
  },
  {
    "text": "directly talk to an external or outside dns server we can i can easily identify",
    "start": "1117600",
    "end": "1123200"
  },
  {
    "text": "such network flows and query them so in this example we see that there was a a workload with a set of labels running",
    "start": "1123200",
    "end": "1130960"
  },
  {
    "text": "in the tenant jobs name space that attempted to directly talk to an egress dns",
    "start": "1130960",
    "end": "1136480"
  },
  {
    "text": "when bypassed or attempted to bypass the cube dns or kubernetes dns server",
    "start": "1136480",
    "end": "1143200"
  },
  {
    "text": "go further and detect for example nmap or network map scans in this case filtering for",
    "start": "1143200",
    "end": "1150400"
  },
  {
    "text": "a specific value in the user agent field of an http scanner we can see not only",
    "start": "1150400",
    "end": "1156799"
  },
  {
    "text": "when that scan occurred what was the user agent but we also see what was the process name",
    "start": "1156799",
    "end": "1163120"
  },
  {
    "text": "what was the htg parameters what was the time and so on so we have full context",
    "start": "1163120",
    "end": "1168240"
  },
  {
    "text": "into when a particular http nmap scan or happened or occurred",
    "start": "1168240",
    "end": "1175280"
  },
  {
    "text": "of course moving away a little bit from the networking side tetrocone can also do raw system call and process execution",
    "start": "1175280",
    "end": "1181919"
  },
  {
    "text": "visibility this case it's showing the raw json output so on the right you can see a tracing policy and this tracing",
    "start": "1181919",
    "end": "1188320"
  },
  {
    "text": "policy uh essentially indicates that i want to observe all mount system calls",
    "start": "1188320",
    "end": "1194960"
  },
  {
    "text": "and it also shows what type of arguments we are interested in on the left you can see that the the",
    "start": "1194960",
    "end": "1201280"
  },
  {
    "text": "a small subset of the full context that we can provide obviously the process itself with the binary",
    "start": "1201280",
    "end": "1207919"
  },
  {
    "text": "the current working directory the uid the pid the start time the pod label information so what pod",
    "start": "1207919",
    "end": "1214640"
  },
  {
    "text": "name and what name space the power labels but then also all the way into the container image so container id the",
    "start": "1214640",
    "end": "1220960"
  },
  {
    "text": "image to show off the image uh the docker id as well as the entire process",
    "start": "1220960",
    "end": "1226080"
  },
  {
    "text": "ancestry this is just a very small subset of the four contexts that we can provide every event contains a massive",
    "start": "1226080",
    "end": "1233200"
  },
  {
    "text": "amount of context that goes along with it now it gets even more exciting because",
    "start": "1233200",
    "end": "1239120"
  },
  {
    "text": "we can combine the two together so we can combine this system called observability with network visibility",
    "start": "1239120",
    "end": "1245440"
  },
  {
    "text": "this is an example of the ui version of this that actually shows in this case a cluster a mini cube cluster a namespace",
    "start": "1245440",
    "end": "1252960"
  },
  {
    "text": "tenant jobs and there is a pod crawler and you can see the entire process",
    "start": "1252960",
    "end": "1258000"
  },
  {
    "text": "ancestry tree of not only the container itself but also the control plane of",
    "start": "1258000",
    "end": "1263280"
  },
  {
    "text": "kubernetes including cubelet you can see the process executions and which process",
    "start": "1263280",
    "end": "1269280"
  },
  {
    "text": "makes or attempts or has established what network connections the arrows or the lines those are the network",
    "start": "1269280",
    "end": "1275679"
  },
  {
    "text": "connections so we can see that there is a variety of in this case a node app uh",
    "start": "1275679",
    "end": "1281120"
  },
  {
    "text": "invoking server.js is reaching out to an external ip to elasticsearch and to api or",
    "start": "1281120",
    "end": "1287679"
  },
  {
    "text": "twitter and we also see that there is a reverse shell that has been invoked by a net cap this is the",
    "start": "1287679",
    "end": "1294240"
  },
  {
    "text": "the line at the bottom which is reaching out to another domain like this",
    "start": "1294240",
    "end": "1300400"
  },
  {
    "text": "blubberish not a reverse shell and we can see which individual process made this request from a networking",
    "start": "1300400",
    "end": "1306799"
  },
  {
    "text": "perspective would be very hard to spot this reverse shell from a system called perspective only would be very hard i",
    "start": "1306799",
    "end": "1313120"
  },
  {
    "text": "mean in this case it may be easy because the attacker was using not a reverse shell in the name to make the demo",
    "start": "1313120",
    "end": "1318320"
  },
  {
    "text": "easier in reality it will be very hard to spot this without this combined visibility this is showing kubernetes",
    "start": "1318320",
    "end": "1325919"
  },
  {
    "text": "specific example but this functionality is actually not keeping at a specific in any way",
    "start": "1325919",
    "end": "1331120"
  },
  {
    "text": "this can this this works for any process running on the linux machine",
    "start": "1331120",
    "end": "1337120"
  },
  {
    "text": "detect late process execution so actually very common you will have containers or workloads that run a",
    "start": "1337120",
    "end": "1343919"
  },
  {
    "text": "single binary and you want to identify what are containers what are workloads that have",
    "start": "1343919",
    "end": "1350080"
  },
  {
    "text": "a process or a binary executed sometime after the container was started and this",
    "start": "1350080",
    "end": "1356159"
  },
  {
    "text": "can this can often reveal a compromised pod or or container because this is not",
    "start": "1356159",
    "end": "1362880"
  },
  {
    "text": "what the application tool does let's say you have like a single statically combined uh binary running ass",
    "start": "1362880",
    "end": "1368080"
  },
  {
    "text": "application you can easily rule out that this container will never start a process or a binary like",
    "start": "1368080",
    "end": "1374400"
  },
  {
    "text": "10 seconds or one minute after the container has been started so you can easily identify hey let me know which",
    "start": "1374400",
    "end": "1380240"
  },
  {
    "text": "containers have had processes or binaries started one minute or 30",
    "start": "1380240",
    "end": "1385280"
  },
  {
    "text": "seconds after the container itself was started this is very likely actually reveals a compromised uh container or",
    "start": "1385280",
    "end": "1393360"
  },
  {
    "text": "pod or some other malicious intent monitoring file access so going down or",
    "start": "1393360",
    "end": "1400240"
  },
  {
    "text": "go moving over to the storage site this is showing a splunk integration here that shows which part which container",
    "start": "1400240",
    "end": "1407120"
  },
  {
    "text": "which workload is accessing certain files in this case we are we're monitoring in couple files so such as",
    "start": "1407120",
    "end": "1413520"
  },
  {
    "text": "etsy password ash history shadow file and we can see which part but also which",
    "start": "1413520",
    "end": "1419200"
  },
  {
    "text": "process is accessing what file and what is the file operation what is the operation they are performing that's",
    "start": "1419200",
    "end": "1425440"
  },
  {
    "text": "just the monitoring side of things then we can go further and look at for example network policy compliance and",
    "start": "1425440",
    "end": "1432240"
  },
  {
    "text": "look for what are what connections have been subject to what policies so we can",
    "start": "1432240",
    "end": "1437840"
  },
  {
    "text": "look at all the the allowed connections and identify what was the policy that",
    "start": "1437840",
    "end": "1443039"
  },
  {
    "text": "was used to allow this traffic and even more importantly we can identify what was allowed without any policy at all",
    "start": "1443039",
    "end": "1450080"
  },
  {
    "text": "for example so we can clearly we can clearly validate and audit whether we are achieving from a policy perspective",
    "start": "1450080",
    "end": "1457039"
  },
  {
    "text": "what we intended you can observe http and grpc this is",
    "start": "1457039",
    "end": "1462880"
  },
  {
    "text": "showing example where we show and detect cross-scripting attempts in the uri um",
    "start": "1462880",
    "end": "1468080"
  },
  {
    "text": "essentially querying in this case splunk with particular search query that will um",
    "start": "1468080",
    "end": "1475440"
  },
  {
    "text": "request or will show http flows with uh just with the name script in the uri um",
    "start": "1475440",
    "end": "1481520"
  },
  {
    "text": "in this case it just surfaced a simple cross scripting attempt here",
    "start": "1481520",
    "end": "1487679"
  },
  {
    "text": "now switching gears a bit and go into the enforcement side so we've seen the full width of observability um that we",
    "start": "1487679",
    "end": "1494400"
  },
  {
    "text": "can provide like from network to file to system call we can do enforcement on a vast majority",
    "start": "1494400",
    "end": "1502640"
  },
  {
    "text": "of this observability but before we go into complete examples a couple of high-level points on how this",
    "start": "1502640",
    "end": "1508799"
  },
  {
    "text": "enforcement works first of all it is preventive security to them to the",
    "start": "1508799",
    "end": "1514159"
  },
  {
    "text": "that's like the cornerstone the the most important aspect of tetragon so uh essentially preventing malicious um in",
    "start": "1514159",
    "end": "1522240"
  },
  {
    "text": "malicious actions or malicious attempts before they can do damage to the system",
    "start": "1522240",
    "end": "1527440"
  },
  {
    "text": "or to application this includes the system but also the network the file system as well as application behavior",
    "start": "1527440",
    "end": "1534720"
  },
  {
    "text": "it is synchronous and we'll get to that so it is essentially doing this in kernel in terms of policy we have a",
    "start": "1534720",
    "end": "1541200"
  },
  {
    "text": "couple of integrations you can define policies with kubernetes crds there is a",
    "start": "1541200",
    "end": "1546799"
  },
  {
    "text": "json api as well or a json configuration method as well as open policy agent that",
    "start": "1546799",
    "end": "1552720"
  },
  {
    "text": "can be used and we're looking to convert or looking to support converting from existing rule sets such as falco rule",
    "start": "1552720",
    "end": "1560480"
  },
  {
    "text": "sets or pod security policies as well so if there are other forms of intent where",
    "start": "1560480",
    "end": "1566320"
  },
  {
    "text": "you essentially already define what your application should be able to do or not",
    "start": "1566320",
    "end": "1571919"
  },
  {
    "text": "we will look at supporting them in terms of preventive actions from user",
    "start": "1571919",
    "end": "1577760"
  },
  {
    "text": "space um this is what we are trying to avoid or this is what what tachogon is not vulnerable to which",
    "start": "1577760",
    "end": "1585279"
  },
  {
    "text": "means that typically systems that rely on a observability with a user space",
    "start": "1585279",
    "end": "1591120"
  },
  {
    "text": "rule engine are essentially vulnerable to the following the part or application or the process",
    "start": "1591120",
    "end": "1597600"
  },
  {
    "text": "is compromised or has malicious intent and performs either an exploit or a",
    "start": "1597600",
    "end": "1603600"
  },
  {
    "text": "malicious attempt in the kernel and changes behavior or attempts something",
    "start": "1603600",
    "end": "1610840"
  },
  {
    "text": "maliciously the observability piece in the kernel let's say it's k-pro based or",
    "start": "1610840",
    "end": "1616640"
  },
  {
    "text": "it's second based will export this visibility with a asynchronous notification to the user space agent",
    "start": "1616640",
    "end": "1624240"
  },
  {
    "text": "running running there and you have a rule engine there this rule engine will consume this observability and will",
    "start": "1624240",
    "end": "1631039"
  },
  {
    "text": "detect that oh this observability indicates that something bad is going on and will then kill the container or kill",
    "start": "1631039",
    "end": "1637440"
  },
  {
    "text": "the process this is asynchronously so it happens essentially after the malicious attempt",
    "start": "1637440",
    "end": "1643840"
  },
  {
    "text": "has already been performed so while it is strictly better than not doing anything it can often already be too",
    "start": "1643840",
    "end": "1650960"
  },
  {
    "text": "late in terms of preventive action what tetragon does instead is doing this",
    "start": "1650960",
    "end": "1656960"
  },
  {
    "text": "filtering and this rule engine in the kernel so i think one of the question was how does this compare to falco this",
    "start": "1656960",
    "end": "1664000"
  },
  {
    "text": "is one of the big differences that instead of using evpf primarily from a",
    "start": "1664000",
    "end": "1669279"
  },
  {
    "text": "visibility extraction perspective tetragon does the filtering and the rule engine part in kernel which means that",
    "start": "1669279",
    "end": "1677039"
  },
  {
    "text": "as it processes the observability data in the kernel it can immediately kill",
    "start": "1677039",
    "end": "1682480"
  },
  {
    "text": "the process it can be and you can even prevent uh the activity itself so let's say",
    "start": "1682480",
    "end": "1688480"
  },
  {
    "text": "we have a system call that should not be allowed we will not allow that system call to be executed at all we will not",
    "start": "1688480",
    "end": "1694960"
  },
  {
    "text": "report that the system call happened and then kill the process in hindsight",
    "start": "1694960",
    "end": "1701039"
  },
  {
    "text": "looking at a couple of examples here this is an example how we can prevent",
    "start": "1701039",
    "end": "1706159"
  },
  {
    "text": "access to a sensitive file for example in this case edc shadow so we have a policy that essentially the policy is",
    "start": "1706159",
    "end": "1713440"
  },
  {
    "text": "not matching the examples no worries so the example is showing how this this is done for to protect uh authorized keys",
    "start": "1713440",
    "end": "1720799"
  },
  {
    "text": "file for ssh the example is showing this for egc shadow with very similar use case we want to prevent write access to",
    "start": "1720799",
    "end": "1728240"
  },
  {
    "text": "a particular file and tetragon will immediately kill the process that attempts to write to that file but",
    "start": "1728240",
    "end": "1734720"
  },
  {
    "text": "obviously all to be doing so just to open the file or read from the file and so on this is an example where we want",
    "start": "1734720",
    "end": "1741120"
  },
  {
    "text": "to allow reading from a file but immediately prevent any process or a particular process or a particular parts",
    "start": "1741120",
    "end": "1748080"
  },
  {
    "text": "to write to a particular set of files we can also do things like detecting",
    "start": "1748080",
    "end": "1753200"
  },
  {
    "text": "remounting of the root file system this is an example how this can be done using the pivot root system call",
    "start": "1753200",
    "end": "1761279"
  },
  {
    "text": "let me check for the question in the chat what are the available actions other than sick kill if any so obviously there",
    "start": "1761279",
    "end": "1769200"
  },
  {
    "text": "is an action that can provide visibility itself there is an action to sick kill",
    "start": "1769200",
    "end": "1774320"
  },
  {
    "text": "and for uh some of the hook points you can essentially prevent or essentially",
    "start": "1774320",
    "end": "1779679"
  },
  {
    "text": "change the return code so for example for a system call you can you can have the action say don't execute the",
    "start": "1779679",
    "end": "1786480"
  },
  {
    "text": "system call and return with an error instead so essentially when you are or when you're operating at a hook point",
    "start": "1786480",
    "end": "1792960"
  },
  {
    "text": "where you can change the verdict then obviously you want to prevent that photo processing and just return if you are",
    "start": "1792960",
    "end": "1800320"
  },
  {
    "text": "detecting something where the devotee cannot be changed then sick kill is is the best cause of or the best next step",
    "start": "1800320",
    "end": "1807760"
  },
  {
    "text": "and other other option is just to provide essentially an event to users face that particular",
    "start": "1807760",
    "end": "1815039"
  },
  {
    "text": "event or a particular behavior has been spotted",
    "start": "1815039",
    "end": "1820159"
  },
  {
    "text": "monitoring and preventing capabilities abuse so this example is showing uh when",
    "start": "1821440",
    "end": "1827200"
  },
  {
    "text": "the monitoring of capabilities is enabled and we're seeing here process execution that shows",
    "start": "1827200",
    "end": "1834159"
  },
  {
    "text": "a pod test pod um actually using ns enter to essentially change the",
    "start": "1834159",
    "end": "1841120"
  },
  {
    "text": "the mount the pid the network the uts and the ips name space and it can do so because it",
    "start": "1841120",
    "end": "1847279"
  },
  {
    "text": "has capsis admin privileges or capabilities so it is succeeding so we normally see that the",
    "start": "1847279",
    "end": "1854240"
  },
  {
    "text": "the ns enter process or command is executed we can also see that it performs set namespace functionality to",
    "start": "1854240",
    "end": "1861840"
  },
  {
    "text": "change or adjust namespacing context we then see a bash invoked and",
    "start": "1861840",
    "end": "1867760"
  },
  {
    "text": "we see that we can open and close xtc password but then when we try to write to the",
    "start": "1867760",
    "end": "1874159"
  },
  {
    "text": "password file we can still kill the process so this is making the important point that we can",
    "start": "1874159",
    "end": "1879919"
  },
  {
    "text": "that tetragon is not automatically vulnerable or not automatically subject",
    "start": "1879919",
    "end": "1885120"
  },
  {
    "text": "to the point that anybody with capsus admin can automatically access any file for example so tetragon",
    "start": "1885120",
    "end": "1892720"
  },
  {
    "text": "is independent from that perspective this shows both obviously the preventing file access again but",
    "start": "1892720",
    "end": "1898880"
  },
  {
    "text": "also the ability to monitor capability uh changes and capability context of any",
    "start": "1898880",
    "end": "1904559"
  },
  {
    "text": "system calling any runtime behavior observed",
    "start": "1904559",
    "end": "1909679"
  },
  {
    "text": "i think john already answered this question um so we'll move on and actually start summarizing a little bit",
    "start": "1912799",
    "end": "1919760"
  },
  {
    "text": "so we've seen a variety of things at this point we've seen tetragon be able to provide both observability across the",
    "start": "1919760",
    "end": "1927200"
  },
  {
    "text": "stack so we've seen file access we've seen data access we've seen a variety of",
    "start": "1927200",
    "end": "1933440"
  },
  {
    "text": "network behavior both from a connectivity perspective protocol parsing http dns tls you've seen",
    "start": "1933440",
    "end": "1940640"
  },
  {
    "text": "capabilities tracing so what are the capabilities is capsis admin is it capnet admin is it ppf so seeing what",
    "start": "1940640",
    "end": "1947519"
  },
  {
    "text": "are the capabilities of a particular system call or process execution or some",
    "start": "1947519",
    "end": "1952880"
  },
  {
    "text": "other criminal activity as well as privilege escalation so being able to understand the privilege that a",
    "start": "1952880",
    "end": "1959279"
  },
  {
    "text": "particular system call is subject to or is is equipped with the file access um you",
    "start": "1959279",
    "end": "1966399"
  },
  {
    "text": "know we've seen the tcp visibility with the round trip time visibility and one",
    "start": "1966399",
    "end": "1971760"
  },
  {
    "text": "of the initial slides as well as the raw system call visibility what are the system calls being made um as well as",
    "start": "1971760",
    "end": "1977840"
  },
  {
    "text": "the process execution including the process ancestor tree so understanding not only what is my process but who has",
    "start": "1977840",
    "end": "1984960"
  },
  {
    "text": "spawned me and who has spawned the process that spawned that process and so on",
    "start": "1984960",
    "end": "1990399"
  },
  {
    "text": "we've seen examples of prometheus metrics we've seen the example of grafana dashboards we've seen in",
    "start": "1990399",
    "end": "1995840"
  },
  {
    "text": "particular the splunk integration we've seen the json output that can be fed with fluency into any system you want",
    "start": "1995840",
    "end": "2002640"
  },
  {
    "text": "for example for example into an into an elasticsearch cluster um the tracing in",
    "start": "2002640",
    "end": "2008559"
  },
  {
    "text": "the metrics can also be exported using open telemetry if there is um desire",
    "start": "2008559",
    "end": "2013760"
  },
  {
    "text": "all of cilium all of tetragon is available on the following github",
    "start": "2013760",
    "end": "2019440"
  },
  {
    "text": "repo and we'll talk in a couple of minutes about what is has been released as open source and what is available",
    "start": "2019440",
    "end": "2026720"
  },
  {
    "text": "under i surveillance tetragon enterprise",
    "start": "2026720",
    "end": "2032200"
  },
  {
    "text": "before we do that let's jump back and answer this question are there any plans in maintaining rule sets or is this",
    "start": "2036320",
    "end": "2041679"
  },
  {
    "text": "already part of tetragon um so yes actually let's go through this slide because it mentions this so there is",
    "start": "2041679",
    "end": "2048079"
  },
  {
    "text": "essentially tetragon that is available in the in the and the cilium tetragon repository what is part of the open",
    "start": "2048079",
    "end": "2055919"
  },
  {
    "text": "source repository is the following from a visibility perspective the process and system called visibility that we've seen",
    "start": "2055919",
    "end": "2062398"
  },
  {
    "text": "all the layers through there for network visibility and file access monitoring as",
    "start": "2062399",
    "end": "2067440"
  },
  {
    "text": "well as basic capabilities and name spacing visibility and on the enforcement we can do the system call",
    "start": "2067440",
    "end": "2073919"
  },
  {
    "text": "based enforcement based on k probes and trace points in addition to that isovenant offers a",
    "start": "2073919",
    "end": "2080240"
  },
  {
    "text": "tetragon enterprise distribution first of all it's it's a hardened",
    "start": "2080240",
    "end": "2085679"
  },
  {
    "text": "enterprise distribution of tetragon so it has for example extended end-of-life support we of course offer enterprise",
    "start": "2085679",
    "end": "2093040"
  },
  {
    "text": "support for tetragon as well but then in addition to that it has advanced capabilities including extended network",
    "start": "2093040",
    "end": "2099920"
  },
  {
    "text": "visibility this for example includes the round trip time or the latency measurement on the tcp side as well as",
    "start": "2099920",
    "end": "2107040"
  },
  {
    "text": "the dns visibility the hdp and https visibility with ktls as well as all of",
    "start": "2107040",
    "end": "2113520"
  },
  {
    "text": "the tls visibility that we've seen it features the siem the siem integration directly with",
    "start": "2113520",
    "end": "2119599"
  },
  {
    "text": "splunk splunk caps the process and street three information so understanding the full context of who",
    "start": "2119599",
    "end": "2126320"
  },
  {
    "text": "has spawned whom as well as high performance protocol parsers and extended aggregation and filtering logic",
    "start": "2126320",
    "end": "2133680"
  },
  {
    "text": "on the file access side while the open source version features file access monitoring the enterprise version can",
    "start": "2133680",
    "end": "2140000"
  },
  {
    "text": "also do file integrity monitoring with documents shaw 256 as well",
    "start": "2140000",
    "end": "2146240"
  },
  {
    "text": "on the runtime or on the enforcement side the enterprise version features extended",
    "start": "2146240",
    "end": "2151359"
  },
  {
    "text": "runtime enforcement capabilities that are more automated so the system call based enforcement in the open source",
    "start": "2151359",
    "end": "2157520"
  },
  {
    "text": "version cid based or json-based can enforce rules as written the advanced",
    "start": "2157520",
    "end": "2162720"
  },
  {
    "text": "enterprise edition has additional automation around kubernetes and it has a baseline policy set which can do",
    "start": "2162720",
    "end": "2170480"
  },
  {
    "text": "threat detection for known threats as well as simplify the installation of",
    "start": "2170480",
    "end": "2176240"
  },
  {
    "text": "enforcement rules as well we have already a couple of covered a",
    "start": "2176240",
    "end": "2182160"
  },
  {
    "text": "couple of questions but i see more questions coming in um",
    "start": "2182160",
    "end": "2187359"
  },
  {
    "text": "can you run tetragon on a cluster mesh deployment and would applying tetragon policy follow the same principle of cmp",
    "start": "2187359",
    "end": "2195119"
  },
  {
    "text": "where you need to apply to each cluster manually versus a single touch point yes",
    "start": "2195119",
    "end": "2200560"
  },
  {
    "text": "you can apply tetragona you can run tetragon in a cluster mesh deployment tetragon can be deployed",
    "start": "2200560",
    "end": "2206960"
  },
  {
    "text": "it can be deployed independently of psyllium it does not require psyllium to run if selim is running tetragon will",
    "start": "2206960",
    "end": "2214320"
  },
  {
    "text": "extract additional visibility from cilium itself so it will benefit from a silver installation but it is not",
    "start": "2214320",
    "end": "2220480"
  },
  {
    "text": "required to be there in terms of policy the policies work exactly the same as the cilium network",
    "start": "2220480",
    "end": "2226480"
  },
  {
    "text": "policy in a cluster mesh context so you will have to uh install them or load them into individual clusters",
    "start": "2226480",
    "end": "2233280"
  },
  {
    "text": "on the in the enterprise versions we have tooling to automatically apply policies across",
    "start": "2233280",
    "end": "2238640"
  },
  {
    "text": "multiple clusters and i think john you want to answer a question here",
    "start": "2238640",
    "end": "2244560"
  },
  {
    "text": "yeah yeah i'll just answer it here um there was a question about if we use the trace points versus k-probes um because",
    "start": "2244560",
    "end": "2251599"
  },
  {
    "text": "our examples are k-probes so the tetragon base also knows how to do trace points",
    "start": "2251599",
    "end": "2256880"
  },
  {
    "text": "so if you want you could do trace points but the problem with trace points is they need to be at the cisco level or in specific spots",
    "start": "2256880",
    "end": "2264160"
  },
  {
    "text": "already in the kernel so we do use them in some places and tetragon will try to smartly use them in the right places and",
    "start": "2264160",
    "end": "2270160"
  },
  {
    "text": "and use k probes where i can our our policies might say k pros but under the cover that the sort of tetragon agent is",
    "start": "2270160",
    "end": "2276720"
  },
  {
    "text": "trying to find the best uh best sort of mechanism that your kernel can support to do the filters so on newer kernels",
    "start": "2276720",
    "end": "2283040"
  },
  {
    "text": "you'll even get um some of the more fancy uh hook points that that are sort of more efficient",
    "start": "2283040",
    "end": "2289920"
  },
  {
    "text": "so i think that should cover that question awesome great um",
    "start": "2289920",
    "end": "2296079"
  },
  {
    "text": "before we go to the q a um if you want to learn more um tetragon is covered in",
    "start": "2296079",
    "end": "2302880"
  },
  {
    "text": "the security observability for evpf booklet or report we have done with",
    "start": "2302880",
    "end": "2308160"
  },
  {
    "text": "o'reilly there's actually a bigger book coming on ebpf but for now you can",
    "start": "2308160",
    "end": "2313520"
  },
  {
    "text": "um you can freely download this security observable the vdpf that actually gives",
    "start": "2313520",
    "end": "2318560"
  },
  {
    "text": "an introduction to chat again and give some of the background why we have created tetragon as well tetragon is",
    "start": "2318560",
    "end": "2324880"
  },
  {
    "text": "also featured in the enterprise hands-on lapse um which gives you a way to try out tetragon and with",
    "start": "2324880",
    "end": "2332240"
  },
  {
    "text": "instruct actually get your get your hands dirty with tetragon without having",
    "start": "2332240",
    "end": "2337359"
  },
  {
    "text": "to install it yourself so it essentially sets up a sandbox environment for you so you can try and try try out tetragon and",
    "start": "2337359",
    "end": "2343599"
  },
  {
    "text": "play around with it as well as you can use the the virtual summer school that starts july 2019 um it's an entire day",
    "start": "2343599",
    "end": "2352160"
  },
  {
    "text": "focused on tetragon service smash and variety of other topics um the link is in the slides and",
    "start": "2352160",
    "end": "2359200"
  },
  {
    "text": "we'll make it available to all attendees afterwards as well if you are interested you can sign up",
    "start": "2359200",
    "end": "2365440"
  },
  {
    "text": "and i see a couple of questions are already coming in um let's see if anybody has questions uh",
    "start": "2365440",
    "end": "2372000"
  },
  {
    "text": "feel free to ask them in the chat and we'll be happy to answer i see cornelia is also posting all the links that's",
    "start": "2372000",
    "end": "2380839"
  },
  {
    "text": "great a comment from matthias a pack of easy installable security rules is missing like",
    "start": "2380839",
    "end": "2387359"
  },
  {
    "text": "uh like in falco yes uh in fact we we don't necessarily want to recreate",
    "start": "2387359",
    "end": "2392800"
  },
  {
    "text": "everything so as mentioned uh we are currently in implementing a file called rules",
    "start": "2392800",
    "end": "2398640"
  },
  {
    "text": "translators you can actually bring your falco rule sets whether this is the existing falco rule set that is in the",
    "start": "2398640",
    "end": "2404720"
  },
  {
    "text": "repository you may have your own and enforce them with tetragon um the benefit there is that you will",
    "start": "2404720",
    "end": "2410240"
  },
  {
    "text": "essentially benefit from the real-time enforcement behavior of touchagon so you can enforce",
    "start": "2410240",
    "end": "2416320"
  },
  {
    "text": "income with in-kernel capabilities instead of going to user space",
    "start": "2416320",
    "end": "2422480"
  },
  {
    "text": "let me check if there are other questions if you have more questions feel free to",
    "start": "2423040",
    "end": "2429119"
  },
  {
    "text": "post them to the chat i also check the q a section if somebody asked anything there",
    "start": "2429119",
    "end": "2437400"
  },
  {
    "text": "also john if you want to add anything uh to to any of the points uh feel free to do so as well",
    "start": "2438960",
    "end": "2446559"
  },
  {
    "text": "oh yeah i think i mean just if i i extend the kind of the low level details of the trace point for escape probe i just say",
    "start": "2447839",
    "end": "2454480"
  },
  {
    "text": "that some folks at the isabella are working on you know further reducing the overhead of some of these these hooks um",
    "start": "2454480",
    "end": "2460319"
  },
  {
    "text": "but for a tetragon it's not a for most of the tetragon hooks they're out of the hot pathway which is sort of the",
    "start": "2460319",
    "end": "2465440"
  },
  {
    "text": "advantage of doing these networking hooks versus sort of inline um",
    "start": "2465440",
    "end": "2471280"
  },
  {
    "text": "methods like if you were to think of like uh s flow or net flow where you grab every packet and then try to",
    "start": "2471280",
    "end": "2476480"
  },
  {
    "text": "analyze the data so tetragon works with the at the socket layer and in the kernel um",
    "start": "2476480",
    "end": "2482880"
  },
  {
    "text": "so a lot of these things are not hot path items so overhead is kind of minimalized it's not a per packet cost",
    "start": "2482880",
    "end": "2489359"
  },
  {
    "text": "it's a per connection cost yep",
    "start": "2489359",
    "end": "2494480"
  },
  {
    "text": "i also see another question that came in that's not strictly tetragonal related but we can of course also answer that so",
    "start": "2494480",
    "end": "2500000"
  },
  {
    "text": "i'm interested in a reaction on this and then a reference uh to the blog post uh from from buoyant or",
    "start": "2500000",
    "end": "2507200"
  },
  {
    "text": "linker d on side car proxies in service mesh um",
    "start": "2507200",
    "end": "2512480"
  },
  {
    "text": "so for those without the context we have released a service mesh uh part",
    "start": "2512480",
    "end": "2518079"
  },
  {
    "text": "as part of psyllium in a battle level last december and we are marking our the",
    "start": "2518079",
    "end": "2523359"
  },
  {
    "text": "salem service mesh ga with 1.12 coming out in about two to",
    "start": "2523359",
    "end": "2528560"
  },
  {
    "text": "three weeks um and the the big difference of psyllium service mesh is that it offers",
    "start": "2528560",
    "end": "2534160"
  },
  {
    "text": "in addition to the existing histogram integration it does offer a non-cycle or a site called free version",
    "start": "2534160",
    "end": "2540720"
  },
  {
    "text": "of a service mesh that allows to run either a per node proxy allows some of the service mesh functionality to be",
    "start": "2540720",
    "end": "2546880"
  },
  {
    "text": "done entirely in evpf without sidecar or to run the proxy in a different",
    "start": "2546880",
    "end": "2552079"
  },
  {
    "text": "granularity for example per name space or per service account and there is debate going on whether",
    "start": "2552079",
    "end": "2558640"
  },
  {
    "text": "this is uh whether this is the right model or what is the right model what is the better model and this blog post pointed out",
    "start": "2558640",
    "end": "2565359"
  },
  {
    "text": "several questions or several aspects i think there is a lot of good content in that blog post some of which which i",
    "start": "2565359",
    "end": "2571680"
  },
  {
    "text": "don't necessarily agree with so i think from a multi-tenancy perspective psyllium has been running um in a per",
    "start": "2571680",
    "end": "2578480"
  },
  {
    "text": "node proxy configuration for years very successful in very large deployments i think the claim that this is",
    "start": "2578480",
    "end": "2585359"
  },
  {
    "text": "a lot of hard work and impossible is is a bit weird because we are running in",
    "start": "2585359",
    "end": "2590880"
  },
  {
    "text": "that configuration um since years successfully and i think there is another angle which is very very",
    "start": "2590880",
    "end": "2596720"
  },
  {
    "text": "interesting the the claim or the the aspect that a per node proxy is",
    "start": "2596720",
    "end": "2603359"
  },
  {
    "text": "dangerous from a perspective of having a single proxy share multiple secrets",
    "start": "2603359",
    "end": "2608880"
  },
  {
    "text": "which is actually something that we agree with but we've found what we believe is a better solution which is to",
    "start": "2608880",
    "end": "2615680"
  },
  {
    "text": "actually extract the mtls portion outside of the datapath proxy entirely",
    "start": "2615680",
    "end": "2621599"
  },
  {
    "text": "and make it separate there is a blog post on this that has been released and we can link to it which essentially",
    "start": "2621599",
    "end": "2627920"
  },
  {
    "text": "shows a model where the mutual authentication is done with a separate",
    "start": "2627920",
    "end": "2633520"
  },
  {
    "text": "user space agent that could be per node or it could also be a very minimalistic sidecar per pod and it means that the",
    "start": "2633520",
    "end": "2640319"
  },
  {
    "text": "secret itself is or the keys or whatever the the the way the authentication is performed",
    "start": "2640319",
    "end": "2646720"
  },
  {
    "text": "is not in the data path at all which means that even if you run for example a web assembly extension or you are",
    "start": "2646720",
    "end": "2653680"
  },
  {
    "text": "running onway which has complex http processing even if that proxy gets compromised it does not compromise your",
    "start": "2653680",
    "end": "2660640"
  },
  {
    "text": "secret so we see that as a very ideal solution in terms of security from a mutual authentication perspective um",
    "start": "2660640",
    "end": "2668319"
  },
  {
    "text": "so i think that's also not necessarily a valid um argument against the sidecar",
    "start": "2668319",
    "end": "2673359"
  },
  {
    "text": "free model that said um we are not um in a position where we're saying nobody",
    "start": "2673359",
    "end": "2679920"
  },
  {
    "text": "should be running cycle free proxies at all in fact we've done the istio integration first and have been running",
    "start": "2679920",
    "end": "2685839"
  },
  {
    "text": "that for years uh with users so that's still kind of the first implementation we have done and then based on a lot of",
    "start": "2685839",
    "end": "2692079"
  },
  {
    "text": "user feedback who has or have requested can you find a way to run or provide",
    "start": "2692079",
    "end": "2697760"
  },
  {
    "text": "service mesh functionality without a site called implement this additional way of running service mesh i hope this",
    "start": "2697760",
    "end": "2703599"
  },
  {
    "text": "was a kind of sufficient answer to this i don't think there is necessarily a",
    "start": "2703599",
    "end": "2708640"
  },
  {
    "text": "right or wrong uh we are trying to operate as much as possible on user feedback and implement and provide what",
    "start": "2708640",
    "end": "2715119"
  },
  {
    "text": "our users uh are asking us for uh we're not preventing or trying to prevent",
    "start": "2715119",
    "end": "2720640"
  },
  {
    "text": "anybody from running a sidecar if that's the model they would like to run",
    "start": "2720640",
    "end": "2726079"
  },
  {
    "text": "another question is prometheus exporting supported in the open source flavor yes it is so the metrics and premium export",
    "start": "2726079",
    "end": "2733680"
  },
  {
    "text": "is supported the enterprise version does have additional visibility as",
    "start": "2733680",
    "end": "2739200"
  },
  {
    "text": "uh as laid out here in terms of dns http https tls the process ancestor tree as well as",
    "start": "2739200",
    "end": "2746400"
  },
  {
    "text": "some of the high performance protocol parsers and some of the network visibility is extended",
    "start": "2746400",
    "end": "2752160"
  },
  {
    "text": "but the metrics themselves the metric export is all in open source",
    "start": "2752160",
    "end": "2757280"
  },
  {
    "text": "don't know if this is the best place to ask but i would like to know where does tetragon write its events to i'm using",
    "start": "2757280",
    "end": "2763040"
  },
  {
    "text": "export finally modify and then reading it with tail follow uh this works but i'm sure there",
    "start": "2763040",
    "end": "2769280"
  },
  {
    "text": "is a better way i'm running tetragon natively on kubernetes uh maybe sean can",
    "start": "2769280",
    "end": "2776079"
  },
  {
    "text": "you answer that question briefly yeah yeah um yeah so many of our users will use",
    "start": "2776079",
    "end": "2781760"
  },
  {
    "text": "fluentd and then export this into their sim whatever whatever that happens to be",
    "start": "2781760",
    "end": "2787040"
  },
  {
    "text": "you can also use fluentd just to aggregate the logs and dump them somewhere else which is what i do a lot of times in development um if you just",
    "start": "2787040",
    "end": "2793760"
  },
  {
    "text": "have a lot of nodes you want to see all the logs aggregated there's so those are sort of the common",
    "start": "2793760",
    "end": "2799200"
  },
  {
    "text": "uh i say use cases that are in production there's also a grpc endpoint you can attach to we use it in mostly",
    "start": "2799200",
    "end": "2805760"
  },
  {
    "text": "for testing at this point but i mean you're welcome to hook to it and and sort of stream the events out as well if that's",
    "start": "2805760",
    "end": "2811760"
  },
  {
    "text": "that's interesting awesome another question is there any sort of",
    "start": "2811760",
    "end": "2816960"
  },
  {
    "text": "admin ui maybe integrated with hubble um there is integration with hubble ui",
    "start": "2816960",
    "end": "2823119"
  },
  {
    "text": "which means that we have not released this yet um we will release it soon integration where the visibility from a",
    "start": "2823119",
    "end": "2830480"
  },
  {
    "text": "runtime perspective will be essentially visualized in hubble ui",
    "start": "2830480",
    "end": "2836480"
  },
  {
    "text": "as part of the the hubble existing hubble ui all of these events can also be fed into timescape which is part of",
    "start": "2836480",
    "end": "2842960"
  },
  {
    "text": "our enterprise offering it's a time series database where you can essentially collect all of this observability and store it persistently",
    "start": "2842960",
    "end": "2850880"
  },
  {
    "text": "and then query it and again run hubble ui on top of that so the time series database actually offers",
    "start": "2850880",
    "end": "2857440"
  },
  {
    "text": "plain hubble api so you can run the the hubble observe cli the api the",
    "start": "2857440",
    "end": "2863520"
  },
  {
    "text": "hubble ui and all the hubble tooling on top of the timescape time series database again we will be looking into",
    "start": "2863520",
    "end": "2870640"
  },
  {
    "text": "policy into runtime policy management as well from a centralized perspective right now we have automation with a",
    "start": "2870640",
    "end": "2876400"
  },
  {
    "text": "variety of automation tools like cf engine puppet ansible and so on but we will be looking at providing something",
    "start": "2876400",
    "end": "2883040"
  },
  {
    "text": "similar as we have done with the network policy editor for the runtime site as well",
    "start": "2883040",
    "end": "2888720"
  },
  {
    "text": "now i see two questions in the q a section what's the expected resource usage of tetragon",
    "start": "2888720",
    "end": "2895599"
  },
  {
    "text": "per node it runs as a daemon set right so yes it runs as a demon set so there's an agent running on each node the",
    "start": "2895599",
    "end": "2902640"
  },
  {
    "text": "overhead will very much depend on the tracing policies that you load and the aggregation that you configure so if we",
    "start": "2902640",
    "end": "2910079"
  },
  {
    "text": "go back here um because of the the the flexibility of evpf we can do a lot of aggregation in",
    "start": "2910079",
    "end": "2918079"
  },
  {
    "text": "the call so depending on whether you want to see every single system call that is being made or whether you want",
    "start": "2918079",
    "end": "2924160"
  },
  {
    "text": "to see for example only namespace changes or only access to certain files the overhead will be very different very",
    "start": "2924160",
    "end": "2931359"
  },
  {
    "text": "or will differ it can be anywhere from one percent to 25 i would say so it really",
    "start": "2931359",
    "end": "2938400"
  },
  {
    "text": "depends on how much point you want to see and what what granularity do you want to aggregate and see",
    "start": "2938400",
    "end": "2944480"
  },
  {
    "text": "certain sensitive events or you want to have a full system call um system called lock what's the",
    "start": "2944480",
    "end": "2951280"
  },
  {
    "text": "pricing's pricing licensing model of tantragon enterprise tetragon enterprise is part of",
    "start": "2951280",
    "end": "2957440"
  },
  {
    "text": "um selling enterprise from from isovalent and we will embed this into",
    "start": "2957440",
    "end": "2962720"
  },
  {
    "text": "the price so it's very similar to salem enterprise it's a per node subscription that is at the base with a",
    "start": "2962720",
    "end": "2969599"
  },
  {
    "text": "scale discount as your infrastructure grows of course as i mentioned you can run um tetragon completely independently",
    "start": "2969599",
    "end": "2977760"
  },
  {
    "text": "of sodium so you can of course also purchase tetragon enterprise separately if you run both we will of",
    "start": "2977760",
    "end": "2984640"
  },
  {
    "text": "course give you a discount",
    "start": "2984640",
    "end": "2987838"
  },
  {
    "text": "let me see if there are any more questions we have a couple of minutes left so if you have more questions left feel free",
    "start": "2989839",
    "end": "2996839"
  },
  {
    "text": "to post them",
    "start": "2996839",
    "end": "3000319"
  },
  {
    "text": "but i think we have covered all the questions that were posted so let me maybe repeat the uh the follow-ups here",
    "start": "3005520",
    "end": "3012960"
  },
  {
    "text": "again so ebpf report the booklet great way to get involved and read more about",
    "start": "3012960",
    "end": "3018400"
  },
  {
    "text": "tetragon the hands-on lab with instruct great way within minutes you will have essentially a sandbox kubernetes",
    "start": "3018400",
    "end": "3025119"
  },
  {
    "text": "environment with tetragon installed and you can try out uh tetragon but also other aspects of southern enterprise and",
    "start": "3025119",
    "end": "3032160"
  },
  {
    "text": "then the virtual summer school day on july 19 where we will host tetragon as well as service mesh on top",
    "start": "3032160",
    "end": "3040400"
  },
  {
    "text": "of that there is a tetragon slack channel on the psyllium slack so if you go to psyllium dot io you will find a",
    "start": "3040400",
    "end": "3047440"
  },
  {
    "text": "button to dislike you can join the slack or slack server there is a tetragon",
    "start": "3047440",
    "end": "3052480"
  },
  {
    "text": "channel with all the tetragon developers on and most importantly if you want to get involved outside or in addition to",
    "start": "3052480",
    "end": "3060240"
  },
  {
    "text": "using tetragon feel free to contribute tetragon open source repository github",
    "start": "3060240",
    "end": "3066880"
  },
  {
    "text": "slash students tetragon um we very much encourage contributions in all forms",
    "start": "3066880",
    "end": "3072400"
  },
  {
    "text": "doesn't have to be code contributions but also let us know what features would you like to see we already got some",
    "start": "3072400",
    "end": "3078480"
  },
  {
    "text": "feedback today rule sets uh we would love to have a discussion what type of rule sets what integrations",
    "start": "3078480",
    "end": "3086960"
  },
  {
    "text": "do you want us to implement for example part security policies automatically that are getting deprecated do you want",
    "start": "3086960",
    "end": "3092400"
  },
  {
    "text": "us to support something other than the falco rule set and so on",
    "start": "3092400",
    "end": "3098800"
  },
  {
    "text": "with that i would like to thank everybody for attending this webinar",
    "start": "3098800",
    "end": "3104319"
  },
  {
    "text": "if you have more questions that you forgot to ask feel free to ask on slack feel free to reach out to me on twitter",
    "start": "3104319",
    "end": "3110319"
  },
  {
    "text": "to me or john we're happy to answer there as well and thank you a lot thanks a lot everybody",
    "start": "3110319",
    "end": "3117880"
  }
]