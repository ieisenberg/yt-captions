[
  {
    "text": "good afternoon everybody so my name is Matias I'm working with Ben at armo",
    "start": "160",
    "end": "6200"
  },
  {
    "text": "which is a security startup specialized in communities uh scanning and",
    "start": "6200",
    "end": "12719"
  },
  {
    "text": "hardening and yeah today we will talk about SE comp so",
    "start": "12719",
    "end": "21080"
  },
  {
    "text": "I will I have like few points to introduce what it is and then we are",
    "start": "21080",
    "end": "28119"
  },
  {
    "text": "really doing this un conference to get feedback from users whether you know it",
    "start": "28119",
    "end": "33160"
  },
  {
    "text": "and if you know it if you use it and if not trying to understand if it makes sense to",
    "start": "33160",
    "end": "39920"
  },
  {
    "text": "implement uh some capabilities into Cube scape or just if nobody cares",
    "start": "39920",
    "end": "47360"
  },
  {
    "text": "so what is SE comp so SE comp is uh a feature of the Linux kernel since",
    "start": "47360",
    "end": "54559"
  },
  {
    "text": "2.6 something like this so very old and um it enables to block uh C SCS",
    "start": "54559",
    "end": "63000"
  },
  {
    "text": "from the user space to the kernel space so you can also configure it to",
    "start": "63000",
    "end": "68720"
  },
  {
    "text": "just uh create warnings but usually we want to block it so why is it good to",
    "start": "68720",
    "end": "74400"
  },
  {
    "text": "use set comp well you can protect your canel from malicious apps because let's face it the Linux",
    "start": "74400",
    "end": "82799"
  },
  {
    "text": "canel has like dozens of Cs and few of them are are used by everybody and then",
    "start": "82799",
    "end": "89400"
  },
  {
    "text": "they are all those special management one that are never used and since they",
    "start": "89400",
    "end": "94479"
  },
  {
    "text": "are never used they have issues and people can abuse them so usually it's a",
    "start": "94479",
    "end": "100040"
  },
  {
    "text": "it's a good idea to restrict them and it's mostly harmless for most of the",
    "start": "100040",
    "end": "105200"
  },
  {
    "text": "applications so who learned about setcom for the first time right now did everyone know about it before",
    "start": "105200",
    "end": "113280"
  },
  {
    "text": "okay there are a few hands so that's that's good so somewhere we have done",
    "start": "113280",
    "end": "119159"
  },
  {
    "text": "something good that people learned seccom for the first time today so that's great and uh it's been one of the",
    "start": "119159",
    "end": "127560"
  },
  {
    "text": "main things in terms of isolation for containers uh so it's really important",
    "start": "127560",
    "end": "132879"
  },
  {
    "text": "topic and uh I hope we can only from containers I mean usually it's for",
    "start": "132879",
    "end": "137959"
  },
  {
    "text": "regular processes and and containers are special cases of processes uh so now if",
    "start": "137959",
    "end": "146280"
  },
  {
    "text": "if I can Circle back to kubernetes so SE comp has been available since",
    "start": "146280",
    "end": "152440"
  },
  {
    "text": "119 which means more than 3 years ago it was August 2020 and we haven't seen that much of an",
    "start": "152440",
    "end": "161800"
  },
  {
    "text": "adoption uh so usually what what you have available is like few built-in",
    "start": "161800",
    "end": "167599"
  },
  {
    "text": "profiles that are available in communities like mostly the default",
    "start": "167599",
    "end": "173120"
  },
  {
    "text": "one and uh you can or there is also the unrestricted",
    "start": "173120",
    "end": "178560"
  },
  {
    "text": "one which is not profile and when you create your your pods",
    "start": "178560",
    "end": "185879"
  },
  {
    "text": "uh yeah you can apply this these profiles to to the to to your",
    "start": "185879",
    "end": "190959"
  },
  {
    "text": "application but the the default one is like way too General so what is good is",
    "start": "190959",
    "end": "197560"
  },
  {
    "text": "usually to write your own profile but then you run into like problems of how",
    "start": "197560",
    "end": "203360"
  },
  {
    "text": "do I take this configuration which is a Linux configuration into all my nodes",
    "start": "203360",
    "end": "208840"
  },
  {
    "text": "how do I like synchronize and distribute these profiles and and kubernetes doesn't provide any mechanism for",
    "start": "208840",
    "end": "216319"
  },
  {
    "text": "this so maybe that's why people are not using it but that's all I had for like",
    "start": "216319",
    "end": "223799"
  },
  {
    "text": "an introduction now I would like to know if any of you is using SE comp in",
    "start": "223799",
    "end": "231920"
  },
  {
    "text": "kubernetes okay okay you want to talk more I can come over there if possible",
    "start": "232680",
    "end": "237840"
  },
  {
    "text": "if not",
    "start": "237840",
    "end": "241680"
  },
  {
    "text": "um we're using it a little I think it's the Mandate now is you have to have the runtime default but we're not making our",
    "start": "243840",
    "end": "250400"
  },
  {
    "text": "own and I don't even know how to make our own in our current environment okay",
    "start": "250400",
    "end": "256040"
  },
  {
    "text": "are you using like a plain kubernetes or like a special distribution like open shift or eks okay on eks",
    "start": "256040",
    "end": "265280"
  },
  {
    "text": "great yeah just to continue on that topic I remember there was was a feature",
    "start": "265280",
    "end": "271000"
  },
  {
    "text": "added called seccom default and by default it wasn't enabled in kubernetes",
    "start": "271000",
    "end": "277680"
  },
  {
    "text": "so then there were three different profiles that were uh created which were",
    "start": "277680",
    "end": "283880"
  },
  {
    "text": "sort of built in in some ways and runtime default was the default for the default SEC comp feature uh and that's",
    "start": "283880",
    "end": "291600"
  },
  {
    "text": "been uh available for the last few vers for folks to use I think you're you",
    "start": "291600",
    "end": "297320"
  },
  {
    "text": "probably using one of that yeah and uh there are some there is some very good",
    "start": "297320",
    "end": "303080"
  },
  {
    "text": "kubernetes documentation and some blogs uh where uh people have said like if you",
    "start": "303080",
    "end": "308600"
  },
  {
    "text": "want to create your own seccom profile how you could do it and uh when would",
    "start": "308600",
    "end": "313840"
  },
  {
    "text": "that be useful versus using runtime de4 so that's something to maybe look at and",
    "start": "313840",
    "end": "318960"
  },
  {
    "text": "consider later on any other questions or maybe why people haven't used comp okay",
    "start": "318960",
    "end": "325639"
  },
  {
    "text": "you you have more to talk so we we've started to roll it out",
    "start": "325639",
    "end": "332319"
  },
  {
    "text": "in small like places the one where we're like nervous about is like how guess how",
    "start": "332319",
    "end": "341520"
  },
  {
    "text": "do we like know we make this change and apps start failing or failing more than",
    "start": "341520",
    "end": "347520"
  },
  {
    "text": "usual that the cause is like this change mostly because like not there a lot of",
    "start": "347520",
    "end": "353280"
  },
  {
    "text": "stuff going on in nonpr and a lot of things are just broken by default so it's hard to tell like this is my fault",
    "start": "353280",
    "end": "359440"
  },
  {
    "text": "or is it somebody else's fault um so what's kind of like the recommended way to check for",
    "start": "359440",
    "end": "366960"
  },
  {
    "text": "that so yeah good question I I don't think you can uh start set comp in in",
    "start": "366960",
    "end": "373160"
  },
  {
    "text": "just warning mode uh by default in communities I'm not sure about",
    "start": "373160",
    "end": "379240"
  },
  {
    "text": "this so that would be one solution but",
    "start": "379240",
    "end": "384599"
  },
  {
    "text": "um what what we had in mind actually uh with ccape uh is to put some",
    "start": "384599",
    "end": "391840"
  },
  {
    "text": "instrumentation and uh check and list all the C calls that an application is doing during a normal",
    "start": "391840",
    "end": "398759"
  },
  {
    "text": "workload processing and and then gather this list and help you uh",
    "start": "398759",
    "end": "406639"
  },
  {
    "text": "Define profiles help you distribute those profiles and then enable for the Pod so we wanted to make it like more in",
    "start": "406639",
    "end": "414400"
  },
  {
    "text": "an automated way but it's it's a lot of work and I don't know if people people",
    "start": "414400",
    "end": "419520"
  },
  {
    "text": "are interested into this cuz how I see it uh it would be nice to",
    "start": "419520",
    "end": "425759"
  },
  {
    "text": "to have the the probes deployed in development you run all your test in in",
    "start": "425759",
    "end": "431280"
  },
  {
    "text": "development and then you generate profiles and you distribute profiles in your testing and production environment",
    "start": "431280",
    "end": "437599"
  },
  {
    "text": "so that you're not mixing them and uh yeah that's how we wanted to do",
    "start": "437599",
    "end": "442879"
  },
  {
    "text": "it so the Assumption here looks like is the dev is actually equivalent into",
    "start": "442879",
    "end": "449759"
  },
  {
    "text": "production and whatever you learn is probably going to match with production I don't know how much is it true for how",
    "start": "449759",
    "end": "456360"
  },
  {
    "text": "many of us that development environment matches production so that can be one of",
    "start": "456360",
    "end": "461440"
  },
  {
    "text": "the challenges I have a one more question so great and and I'm actually going to answer your question um because",
    "start": "461440",
    "end": "467800"
  },
  {
    "text": "we did a bunch of digging and research looking at this not specifically with kubernetes workloads but with more",
    "start": "467800",
    "end": "473400"
  },
  {
    "text": "General Linux applications and you know using them to do things and 99 per of",
    "start": "473400",
    "end": "480039"
  },
  {
    "text": "the time roughly you will stay within the common things you saw in your testing or your other environmental runs",
    "start": "480039",
    "end": "487800"
  },
  {
    "text": "but what that means is your application breaks all the time um if you want to use it for logging or something like",
    "start": "487800",
    "end": "493560"
  },
  {
    "text": "that it's fairly useful but um there are enough Corner cases related to weird",
    "start": "493560",
    "end": "499720"
  },
  {
    "text": "stuff that happens in situations with timing with some error handling case",
    "start": "499720",
    "end": "504919"
  },
  {
    "text": "getting triggered with other stuff like this that um you'll I think very quickly",
    "start": "504919",
    "end": "510840"
  },
  {
    "text": "run into problems or you'll be extra permissive and if you're extra permissive then you're not doing",
    "start": "510840",
    "end": "517240"
  },
  {
    "text": "yourself a service all right I I'll go to him first",
    "start": "517240",
    "end": "523360"
  },
  {
    "text": "and then",
    "start": "523360",
    "end": "525680"
  },
  {
    "text": "you yeah uh I mean that's that's the same with network policies right when",
    "start": "531080",
    "end": "536920"
  },
  {
    "text": "you you write Network policies uh you're based on like a default workload uh and",
    "start": "536920",
    "end": "544040"
  },
  {
    "text": "once you apply them you don't know if you need to add more because you don't see when they are blocked because the",
    "start": "544040",
    "end": "549079"
  },
  {
    "text": "the traffic that doesn't exist you don't see and it's the same with cises so yeah actually there's no good answer for",
    "start": "549079",
    "end": "557760"
  },
  {
    "text": "that yeah",
    "start": "558279",
    "end": "561600"
  },
  {
    "text": "yeah yeah yeah I think it's uh I want to add on to that I totally agree um in the",
    "start": "565240",
    "end": "571000"
  },
  {
    "text": "sense that um I think it has to do with the fact that is it is a CIS call level um policy and I think that like",
    "start": "571000",
    "end": "577480"
  },
  {
    "text": "something like a network policy I think is more easily kind of you can kind of understand what like Network calls you're prog is trying to make but almost",
    "start": "577480",
    "end": "583839"
  },
  {
    "text": "every app now is written a high level language like very few people are writing C and directly calling Linux CIS calls um and like for example like I",
    "start": "583839",
    "end": "590560"
  },
  {
    "text": "pulled up the container D like default runtime profile and you see like a ton of CIS calls that are like allowed and",
    "start": "590560",
    "end": "596240"
  },
  {
    "text": "then everything else is disallowed for example and like some of these like you've never heard of them uh because",
    "start": "596240",
    "end": "602079"
  },
  {
    "text": "you know like you said earlier there's so many Linux CIS calls out there uh and I think just like the difficulty of",
    "start": "602079",
    "end": "609320"
  },
  {
    "text": "working at the CIS call level like profiling is very difficult um and you",
    "start": "609320",
    "end": "614360"
  },
  {
    "text": "um like you said earlier uh you know going through every case like testing is a difficult problem profiling is a diff",
    "start": "614360",
    "end": "620399"
  },
  {
    "text": "difficult problem and I think that's like one of the big things that's just an issue with any sisol based system uh",
    "start": "620399",
    "end": "625880"
  },
  {
    "text": "not just set comp so I think we have to figure out like I think just if there's a better",
    "start": "625880",
    "end": "631399"
  },
  {
    "text": "way to profile things and just kind of be reasonably certain that it's not going to break things in a weird way more people be willing to use",
    "start": "631399",
    "end": "638440"
  },
  {
    "text": "it I think very well made points uh I'll come back to the gentleman at the",
    "start": "642800",
    "end": "651240"
  },
  {
    "text": "back this is really just more of a comment so uh for our given use case we were looking at set comp for runtime and",
    "start": "652440",
    "end": "661040"
  },
  {
    "text": "what we found is whenever that was turned up with policy we just had unexpected application behavior and our",
    "start": "661040",
    "end": "669320"
  },
  {
    "text": "um what we believed was happening is that underlying air handling that is not",
    "start": "669320",
    "end": "675519"
  },
  {
    "text": "part of set comp basically was in conflict with the unexpected behavior of",
    "start": "675519",
    "end": "681959"
  },
  {
    "text": "not receiving a system call return so when so just a recommendation for anyone",
    "start": "681959",
    "end": "687800"
  },
  {
    "text": "who is looking at this is is to start with observability first put it in turn",
    "start": "687800",
    "end": "693240"
  },
  {
    "text": "it on for logging see what the environment is doing be cognizant of the air handling that occurs around whether",
    "start": "693240",
    "end": "700920"
  },
  {
    "text": "it be uh well just air handling in general because that is probably going",
    "start": "700920",
    "end": "706480"
  },
  {
    "text": "to be the one of the largest conflicts in in reasons why your application has unexpected Behavior so once you have",
    "start": "706480",
    "end": "713519"
  },
  {
    "text": "observability then start to introduce policy in a stepbystep basis whether it",
    "start": "713519",
    "end": "719440"
  },
  {
    "text": "be uh you know group it together by function or or um you know related to",
    "start": "719440",
    "end": "726720"
  },
  {
    "text": "how your application is",
    "start": "726720",
    "end": "729759"
  },
  {
    "text": "working any other thoughts okay I see one",
    "start": "732839",
    "end": "738639"
  },
  {
    "text": "there so as much as like the narrow allow list is nicer for truly least",
    "start": "740839",
    "end": "746519"
  },
  {
    "text": "privilege the other option is like just denying dangerous calls or limiting things that you haven't tested like and",
    "start": "746519",
    "end": "753199"
  },
  {
    "text": "I guess a related question there is I'm actually kind of curious how consistent some of the default policies are because",
    "start": "753199",
    "end": "758600"
  },
  {
    "text": "I think there's some variants like as iur ring allowed in policies or not it notoriously also doesn't great",
    "start": "758600",
    "end": "764519"
  },
  {
    "text": "compatible set comp but some policies allow it and some don't such as I think Docker for example disallows it allows",
    "start": "764519",
    "end": "770760"
  },
  {
    "text": "it in the default policy but the Pod man set does I suspect that's used by cryo",
    "start": "770760",
    "end": "776079"
  },
  {
    "text": "also I'm curious like is there a consistency there or people using it to disable iing out of caution like Google",
    "start": "776079",
    "end": "782880"
  },
  {
    "text": "is now and I think some",
    "start": "782880",
    "end": "786760"
  },
  {
    "text": "environments anyone want to share experiences about",
    "start": "789920",
    "end": "795120"
  },
  {
    "text": "iing uh I think it is probably worth to take a step back for folks new to setcom",
    "start": "795720",
    "end": "802440"
  },
  {
    "text": "what runtime default is and how kubernetes works with container runtime",
    "start": "802440",
    "end": "809760"
  },
  {
    "text": "and how are we inheriting the SEC comp policies from the container and times anyone want to try and answer",
    "start": "809760",
    "end": "818680"
  },
  {
    "text": "that there you can also answer of course yeah",
    "start": "820240",
    "end": "827079"
  },
  {
    "text": "um the answer is I don't know I should know because I'm working in cuet uh most",
    "start": "827079",
    "end": "834600"
  },
  {
    "text": "of my free time uh yeah no",
    "start": "834600",
    "end": "840759"
  },
  {
    "text": "wa wa can you just yeah pass him the mic",
    "start": "841160",
    "end": "846440"
  },
  {
    "text": "because it's recorded So yeah so the two questions there I don't know are are they consistent was would be the first",
    "start": "846440",
    "end": "852920"
  },
  {
    "text": "question um which is some risk to like are you writing a generic open source app you want to run on all run times",
    "start": "852920",
    "end": "858440"
  },
  {
    "text": "generic clusters you want you want to fit in the common defaults so that would be like I don't know is the ecosystem consistent because I know there's there",
    "start": "858440",
    "end": "864680"
  },
  {
    "text": "is at least some variance in some of the run times uh and then the separate question was yeah I'm just curious if people are using it what what kinds of",
    "start": "864680",
    "end": "871079"
  },
  {
    "text": "assist calls are people frequently like out of caution",
    "start": "871079",
    "end": "875839"
  },
  {
    "text": "disabling I I can share I can share some history that I know and folks in",
    "start": "880880",
    "end": "886759"
  },
  {
    "text": "watching the recording or in the meeting room can correct me uh from what I",
    "start": "886759",
    "end": "893279"
  },
  {
    "text": "remember Docker was one of the first container run times that became popular",
    "start": "893279",
    "end": "898320"
  },
  {
    "text": "and the seccom filters that they developed were tested across multiple containers",
    "start": "898320",
    "end": "905759"
  },
  {
    "text": "in Docker Hub and the idea was if those containers are not failing there is a",
    "start": "905759",
    "end": "911440"
  },
  {
    "text": "good chance that the default profile is good enough and then eventually as uh kubernetes became more",
    "start": "911440",
    "end": "919440"
  },
  {
    "text": "and more popular there were more container run times uh container D cryo",
    "start": "919440",
    "end": "925240"
  },
  {
    "text": "and then there was a container runtime interface uh that also was created so",
    "start": "925240",
    "end": "931240"
  },
  {
    "text": "today how kubernetes kind of interacts with all of them is kubernetes in itself",
    "start": "931240",
    "end": "937000"
  },
  {
    "text": "uh when you say runtime default it's going to identify the container runtime",
    "start": "937000",
    "end": "942079"
  },
  {
    "text": "that we are using on the worker notes so for like a quick summary of kubernetes",
    "start": "942079",
    "end": "949040"
  },
  {
    "text": "architecture very high level uh there is a component called cuet uh that works",
    "start": "949040",
    "end": "955360"
  },
  {
    "text": "runs on every worker node and that's kind of like a local agent for kubernetes uh API server and all the",
    "start": "955360",
    "end": "962279"
  },
  {
    "text": "schedulers and controllers cuet will talk to any container and time that is available where they are able to",
    "start": "962279",
    "end": "968959"
  },
  {
    "text": "understand each other and uh based on that when cuet gets a request saying I",
    "start": "968959",
    "end": "974959"
  },
  {
    "text": "want to create a pod uh kuet will talk to container andun time and say like okay I want to create a pod which has",
    "start": "974959",
    "end": "982319"
  },
  {
    "text": "this container I know you can start containers and create ones please do it so in theory and I might probably got",
    "start": "982319",
    "end": "990000"
  },
  {
    "text": "some things wrong happy to for folks to correct me this is how it works and when the container is actually going to spun",
    "start": "990000",
    "end": "996240"
  },
  {
    "text": "up as a process that's when it will know which uh seccom profile is listed in the",
    "start": "996240",
    "end": "1002199"
  },
  {
    "text": "container run time and then as the container gets started as a process it",
    "start": "1002199",
    "end": "1008199"
  },
  {
    "text": "inherits that profile and says okay I'm only allowed these calls and everything else I'm not allowed so that's basically",
    "start": "1008199",
    "end": "1015319"
  },
  {
    "text": "how the whole kubernetes cuet container run time seccom default things work uh",
    "start": "1015319",
    "end": "1021720"
  },
  {
    "text": "to your question about like whether it's consistent across run times probably not",
    "start": "1021720",
    "end": "1027400"
  },
  {
    "text": "uh and uh that is another thing to consider as an as somebody who manages clusters is if I'm going to",
    "start": "1027400",
    "end": "1034640"
  },
  {
    "text": "change uh my kubernetes uh underlying infrastructure is my container and time",
    "start": "1034640",
    "end": "1041038"
  },
  {
    "text": "changing and if it's changing there is potentially unknown behavior that could",
    "start": "1041039",
    "end": "1046400"
  },
  {
    "text": "happen in applications and maybe once this call that you assumed was blocked is not blocked anymore and then there is",
    "start": "1046400",
    "end": "1053039"
  },
  {
    "text": "possible exploit that was not possible before which is now possible so lots",
    "start": "1053039",
    "end": "1058120"
  },
  {
    "text": "lots to think about but for folks who are new I just wanted to give some context so we can kind of go at the same",
    "start": "1058120",
    "end": "1064679"
  },
  {
    "text": "level and go from there any any other thoughts",
    "start": "1064679",
    "end": "1070840"
  },
  {
    "text": "questions profile profile is container based or node",
    "start": "1071280",
    "end": "1077400"
  },
  {
    "text": "based yeah I think you you answered it right so uh if I remember right you spec you",
    "start": "1077400",
    "end": "1084799"
  },
  {
    "text": "pick the name of a policy uh per node per per container in the podspec but the",
    "start": "1084799",
    "end": "1091039"
  },
  {
    "text": "actual Json of the policy is typically installed on dis because it's part of the the runtime configuration so each",
    "start": "1091039",
    "end": "1098000"
  },
  {
    "text": "node needs to have the configuration installed on it which one the things he mentioned is you need to distribute this policy to all your nodes or part of",
    "start": "1098000",
    "end": "1105159"
  },
  {
    "text": "updates or part of node installation but yes run when you schedule your pods or deploy them you need to you need to pick",
    "start": "1105159",
    "end": "1112000"
  },
  {
    "text": "from the list you've already installed which is",
    "start": "1112000",
    "end": "1117159"
  },
  {
    "text": "tricky can I create can I create a profile which only control which C call",
    "start": "1117360",
    "end": "1125360"
  },
  {
    "text": "my container can access",
    "start": "1125360",
    "end": "1130400"
  },
  {
    "text": "okay there's a default policy by default which is usually there's a default policy by default which most of of them",
    "start": "1131720",
    "end": "1138600"
  },
  {
    "text": "look close to what Docker started using a long time ago even though you're not using Docker likely um which",
    "start": "1138600",
    "end": "1144320"
  },
  {
    "text": "allows a pretty broad safe supposedly list of things that denies some",
    "start": "1144320",
    "end": "1150080"
  },
  {
    "text": "definitely privileged things but yes you can write your own least privilege narrow policy if you'd like or add",
    "start": "1150080",
    "end": "1156600"
  },
  {
    "text": "things back that are missing from the uh Docker policy like I think notably one I ran into personally was I'm I believe",
    "start": "1156600",
    "end": "1163120"
  },
  {
    "text": "trying to use usern name spaces inside of a container and the docker the default policies were disallowing it and",
    "start": "1163120",
    "end": "1170080"
  },
  {
    "text": "I had to add it sorry am I taking too much",
    "start": "1170080",
    "end": "1176760"
  },
  {
    "text": "time if this is the this is the case um since our company use commercial",
    "start": "1176760",
    "end": "1183520"
  },
  {
    "text": "runtime uh monitoring we use uh po AO twist lock and uh it's expensive um we",
    "start": "1183520",
    "end": "1191919"
  },
  {
    "text": "also go open source um I'm I have investigated",
    "start": "1191919",
    "end": "1197080"
  },
  {
    "text": "f um uh sponsored by CTIC it is open source and we also try to come up with",
    "start": "1197080",
    "end": "1205440"
  },
  {
    "text": "the uh SE profile I just do a very brief investigation and I found out is because",
    "start": "1205440",
    "end": "1212280"
  },
  {
    "text": "we are cloud provider um outage is is we have to pay customer if there is outage",
    "start": "1212280",
    "end": "1219320"
  },
  {
    "text": "it is impossible for us to train the container and generate the profile so",
    "start": "1219320",
    "end": "1225039"
  },
  {
    "text": "this I come up with idea I hope um you guys can give me an answer is that",
    "start": "1225039",
    "end": "1231520"
  },
  {
    "text": "possible that the open source uh sponsor can provide some sample profile from the",
    "start": "1231520",
    "end": "1238559"
  },
  {
    "text": "container for example we at The First beginning we only want container not run",
    "start": "1238559",
    "end": "1244799"
  },
  {
    "text": "in privileged mode not uh run in the host process ID and not have um",
    "start": "1244799",
    "end": "1252159"
  },
  {
    "text": "privilege escalation privilege so if um you guys can provide",
    "start": "1252159",
    "end": "1258720"
  },
  {
    "text": "profile which just prevent these options we can first enforce um these kinds of",
    "start": "1258720",
    "end": "1265159"
  },
  {
    "text": "control and later we can add more and more",
    "start": "1265159",
    "end": "1270200"
  },
  {
    "text": "on anyone want to take that okay cool uh I'll just summarize for everyone uh",
    "start": "1273760",
    "end": "1279400"
  },
  {
    "text": "there are different ways to control and isolate containers uh not running as",
    "start": "1279400",
    "end": "1285279"
  },
  {
    "text": "privilege not allowing to escalate to privilege uh not running as with host Network host",
    "start": "1285279",
    "end": "1290720"
  },
  {
    "text": "name space and stuff like that is there a way to control that and also then use",
    "start": "1290720",
    "end": "1296120"
  },
  {
    "text": "SE comp as an additional control so just in response to to that",
    "start": "1296120",
    "end": "1301679"
  },
  {
    "text": "comment that's kind of where we where we are right now is where we have divested",
    "start": "1301679",
    "end": "1307240"
  },
  {
    "text": "kind of the runtime control like SEC comp which actually does CIS call intercept we're investigating the use of",
    "start": "1307240",
    "end": "1315000"
  },
  {
    "text": "Falco just to have observability so that we can minimum enumerate any given application",
    "start": "1315000",
    "end": "1321640"
  },
  {
    "text": "what it's actually calling um and we can use Falco in conjunction with",
    "start": "1321640",
    "end": "1328440"
  },
  {
    "text": "other terms to do kind of remediation after the fact should a malicious CIS",
    "start": "1328440",
    "end": "1334640"
  },
  {
    "text": "call come through however that doesn't offer you kind of the preventative control that some commercial carriers",
    "start": "1334640",
    "end": "1340960"
  },
  {
    "text": "need in their instances um but in development that's a good strategy to have is to again use something like file",
    "start": "1340960",
    "end": "1348279"
  },
  {
    "text": "C to have observability first so that you enumerate out all of your given CIS",
    "start": "1348279",
    "end": "1353760"
  },
  {
    "text": "calls for an application second start with your set comp default profiles just to see if it",
    "start": "1353760",
    "end": "1361600"
  },
  {
    "text": "breaks uh you know uh kills containers creates abnormal application behavior",
    "start": "1361600",
    "end": "1368000"
  },
  {
    "text": "and then slowly introduce policy on top of that actually that's that's exactly what",
    "start": "1368000",
    "end": "1375240"
  },
  {
    "text": "we had in mind uh in ccape except we don't use FCO we use Inspector Gadget",
    "start": "1375240",
    "end": "1381039"
  },
  {
    "text": "but it's same um I I was maybe first a question and then",
    "start": "1381039",
    "end": "1387159"
  },
  {
    "text": "I um I was actually just going to mention Inspector Gadget um so we're using that um and I guess caveat we",
    "start": "1387159",
    "end": "1393720"
  },
  {
    "text": "haven't turned on the set comp feature yet we're using it for Network policies right now um but the idea is that",
    "start": "1393720",
    "end": "1400120"
  },
  {
    "text": "Inspector Gadget it's open source on GitHub um and it runs as a Damon set everywhere and then it will just",
    "start": "1400120",
    "end": "1405720"
  },
  {
    "text": "silently collect like traces and it's connecting network traces um and then at any given moment you can just ask it",
    "start": "1405720",
    "end": "1412360"
  },
  {
    "text": "like hey you know I want you to generate me a network policy um you know if you're like this long ago or just based",
    "start": "1412360",
    "end": "1418240"
  },
  {
    "text": "on whatever Trace you see for these different labels um and it will do that for you it will make you like a kuber network policy that you can then just",
    "start": "1418240",
    "end": "1423919"
  },
  {
    "text": "take and do qtl apply or whatever um and so it has a mode for that for set comp",
    "start": "1423919",
    "end": "1429520"
  },
  {
    "text": "um and I guess part of why I'm here is to have learn what would happen if I went and turn that on um like what would",
    "start": "1429520",
    "end": "1434799"
  },
  {
    "text": "break or what might I expect from there um but yeah you can maybe use that or we're going to try to use that um so to",
    "start": "1434799",
    "end": "1441520"
  },
  {
    "text": "have silently tracing like what is any of these containers doing and then in in",
    "start": "1441520",
    "end": "1446559"
  },
  {
    "text": "the future we can go in there and look and say okay that one was doing this that was doing that generate me a setc comp profile to to take with me and then",
    "start": "1446559",
    "end": "1454200"
  },
  {
    "text": "I can either like add or modify or take away or whatever I think that's like uh like",
    "start": "1454200",
    "end": "1460679"
  },
  {
    "text": "profiling is a very powerful theature of course but I think um the biggest issue is just like 99% of the time ideally",
    "start": "1460679",
    "end": "1467480"
  },
  {
    "text": "like you're application is running well it's running as expected nothing weirds going on but like that 1% of the time",
    "start": "1467480",
    "end": "1472840"
  },
  {
    "text": "where you have errors or you have like weird paths being taken is super important and and if you have um you know like you",
    "start": "1472840",
    "end": "1481000"
  },
  {
    "text": "turn on setcom based on some profile you did for a month of like you know a good performing application all of a sudden it gets an error and then it can't like",
    "start": "1481000",
    "end": "1487039"
  },
  {
    "text": "you know do any error mediation logging whatever you want to do there like that would be a very serious issue so you'd",
    "start": "1487039",
    "end": "1493000"
  },
  {
    "text": "have to be like very certain that you've tested like thoroughly before you can like become confident in that profile I",
    "start": "1493000",
    "end": "1498799"
  },
  {
    "text": "think that lack of confidence is one of the big things that like slows down ad um slows down adoption of set",
    "start": "1498799",
    "end": "1506360"
  },
  {
    "text": "comp yes you have to choose either be resilient or be",
    "start": "1506360",
    "end": "1512000"
  },
  {
    "text": "secure one of the things consider to consider too is the ability of your application to Auto scale or for Air",
    "start": "1513760",
    "end": "1520080"
  },
  {
    "text": "recovery the more resilient application is the more you can the more enforcement",
    "start": "1520080",
    "end": "1525480"
  },
  {
    "text": "you can have in your set comp policy however if your application isn't resilient if it's kind of more in the",
    "start": "1525480",
    "end": "1531559"
  },
  {
    "text": "pets versus the cow then you should really be have a very uh a very light",
    "start": "1531559",
    "end": "1538159"
  },
  {
    "text": "setcom policy I also add one question from",
    "start": "1538159",
    "end": "1545279"
  },
  {
    "text": "developer experience perspective when I've seen Secom",
    "start": "1545279",
    "end": "1550600"
  },
  {
    "text": "blocking something for my application I get a very unuseful error something like",
    "start": "1550600",
    "end": "1556080"
  },
  {
    "text": "operation not permitted or even worse and as a developer it can be hard",
    "start": "1556080",
    "end": "1562279"
  },
  {
    "text": "to know like okay is this something I did in my application is this something in the cluster is it the runtime that's",
    "start": "1562279",
    "end": "1568480"
  },
  {
    "text": "giving me problem any ideas from people working on this and using it in terms of",
    "start": "1568480",
    "end": "1575000"
  },
  {
    "text": "how to help developers know this is not you this is cluster managers or you need",
    "start": "1575000",
    "end": "1580399"
  },
  {
    "text": "to go to talk to kubernetes admins any ideas or",
    "start": "1580399",
    "end": "1585520"
  },
  {
    "text": "experiences okay Andy has",
    "start": "1586600",
    "end": "1592440"
  },
  {
    "text": "one je is uh it's a bit of a complex problem because the point of set comp is",
    "start": "1594279",
    "end": "1599919"
  },
  {
    "text": "to block those CIS calls in the kernel so passing information back into user",
    "start": "1599919",
    "end": "1605080"
  },
  {
    "text": "space is potentially or was considered originally potentially leaking data um there is something from chrisan Browner",
    "start": "1605080",
    "end": "1612720"
  },
  {
    "text": "who's one of the canonical guys who's done a lot of work around this called the set comp Notifier so it's a way of",
    "start": "1612720",
    "end": "1619159"
  },
  {
    "text": "kind of getting an outof band actual response back from the um what might",
    "start": "1619159",
    "end": "1624399"
  },
  {
    "text": "even be a seg fault sometimes for uh for the kernel um but yeah it's kind of intentionally opaque and it's really not",
    "start": "1624399",
    "end": "1631159"
  },
  {
    "text": "a very nice feature for a user um yeah sorry that's not a very productive",
    "start": "1631159",
    "end": "1639240"
  },
  {
    "text": "answer yeah I mean it's it's fair in some ways like there is a good rationally for both uh so that makes",
    "start": "1639240",
    "end": "1645600"
  },
  {
    "text": "sense any thoughts anything else anyone wants to",
    "start": "1645600",
    "end": "1650480"
  },
  {
    "text": "share yeah maybe yeah uh I wanted to say there are also other ways of blocking CS",
    "start": "1653120",
    "end": "1659799"
  },
  {
    "text": "like if if you take the the approach that Google had when they started the gvisor for instance they they intercept",
    "start": "1659799",
    "end": "1666840"
  },
  {
    "text": "CS not at the Kel level but as between userland and kland I don't know if it's",
    "start": "1666840",
    "end": "1674240"
  },
  {
    "text": "more effective it definitely has an impact on performance but uh",
    "start": "1674240",
    "end": "1680880"
  },
  {
    "text": "yeah I don't know if anyone is using other solutions to Block C calls so that was my",
    "start": "1680880",
    "end": "1688200"
  },
  {
    "text": "question I've yet to put any those in prod but yeah the other thing i' compared gvisor to is actually just using a VM based solution which",
    "start": "1689120",
    "end": "1695880"
  },
  {
    "text": "sometimes quite difficult in cloud with some of them disabling NE hypervisors but um yeah C of containers in many ways",
    "start": "1695880",
    "end": "1702760"
  },
  {
    "text": "I would actually compare to GV are more than anything else and they're different tradeoffs yeah my understanding is",
    "start": "1702760",
    "end": "1708360"
  },
  {
    "text": "gvisor has overhead for sure but it is lower fixed overhead so if you you like",
    "start": "1708360",
    "end": "1714720"
  },
  {
    "text": "it doesn't require tons of memory and things like everything's a little bit slower but it doesn't have tons of overhead words a VM has a moderate fixed",
    "start": "1714720",
    "end": "1721159"
  },
  {
    "text": "overhead but is actually quite efficient once it's running so as opposed to se comp which is mostly",
    "start": "1721159",
    "end": "1728279"
  },
  {
    "text": "free because it's already in the kernel but it has",
    "start": "1728279",
    "end": "1732080"
  },
  {
    "text": "limitations uh actually since the gvisor was mentioned I'm curious uh from the",
    "start": "1736399",
    "end": "1742559"
  },
  {
    "text": "monitoring and tracing standpoint for example if you are using ebpf for like",
    "start": "1742559",
    "end": "1747600"
  },
  {
    "text": "stack tracing and gvisor intercepts the call what actually you will see through",
    "start": "1747600",
    "end": "1753919"
  },
  {
    "text": "the entire stack what will be in the BPF because gvisor is essentially fakes the",
    "start": "1753919",
    "end": "1759679"
  },
  {
    "text": "call and fakes the interception and both level it's in user space in kernel space",
    "start": "1759679",
    "end": "1765559"
  },
  {
    "text": "as far as I understand so I'm I'm just curious if anybody tried to run ebpf",
    "start": "1765559",
    "end": "1770720"
  },
  {
    "text": "alone with gvisor or any other Tracer of the C calls and how the entire stack",
    "start": "1770720",
    "end": "1777080"
  },
  {
    "text": "will look",
    "start": "1777080",
    "end": "1779600"
  },
  {
    "text": "like okay already I haven't performed that",
    "start": "1782240",
    "end": "1787519"
  },
  {
    "text": "specific test but my understanding is is that the emulation of those cisal is actually done with a really small subset",
    "start": "1787519",
    "end": "1793760"
  },
  {
    "text": "of total cisal well that that's the set that they emulate but I think there's um there's a",
    "start": "1793760",
    "end": "1801799"
  },
  {
    "text": "diagram that I can't it's on their website somewhere it's probably also worth saying that um Google rolling back",
    "start": "1801799",
    "end": "1807480"
  },
  {
    "text": "G visor because they they had it around Cloud run because Cloud run was originally running on Bor and they were",
    "start": "1807480",
    "end": "1813519"
  },
  {
    "text": "like well see it's not safe enough to expose to users the Linux kernels not sufficient for our use um which is why",
    "start": "1813519",
    "end": "1819360"
  },
  {
    "text": "they rewrote it but then they've been just weird edge cases and uh certainly",
    "start": "1819360",
    "end": "1824480"
  },
  {
    "text": "the I think cloudm V3 is the latest Incarnation that they doing it just doesn't use gvisor so that on the one",
    "start": "1824480",
    "end": "1831200"
  },
  {
    "text": "hand but the other is there's a triangle graphic on on their website somewhere which shows the number of CST calls they",
    "start": "1831200",
    "end": "1836240"
  },
  {
    "text": "support and then the the ones they actually go down to from an actual system call level and it's not very many",
    "start": "1836240",
    "end": "1842679"
  },
  {
    "text": "so I think you'd see very confusing traces because they wouldn't",
    "start": "1842679",
    "end": "1847760"
  },
  {
    "text": "map um yeah again mediately be helpful answer but perhaps",
    "start": "1847760",
    "end": "1853440"
  },
  {
    "text": "not we got about couple minutes more uh uh I kind of want to end it on a nonse",
    "start": "1853880",
    "end": "1860200"
  },
  {
    "text": "comp note so do you answer your question right SEC comp is one of the many ways",
    "start": "1860200",
    "end": "1866360"
  },
  {
    "text": "we can continue to isolate containers and ports in our cluster I think three",
    "start": "1866360",
    "end": "1871880"
  },
  {
    "text": "of the things that you mentioned are already good ones that we can continue to use so I think that is always",
    "start": "1871880",
    "end": "1879760"
  },
  {
    "text": "important to consider in perspective like yes definitely use set comp it's",
    "start": "1879760",
    "end": "1886240"
  },
  {
    "text": "helpful it does lot uh but there is uh",
    "start": "1886240",
    "end": "1891799"
  },
  {
    "text": "uh to your question like have you uh played around with the recent Port security standards that were made part",
    "start": "1891799",
    "end": "1898919"
  },
  {
    "text": "of the cluster before uh I think in 125 and plus yeah so that would be something of",
    "start": "1898919",
    "end": "1906480"
  },
  {
    "text": "something what you looking for where it has three uh built-in standards in as",
    "start": "1906480",
    "end": "1912399"
  },
  {
    "text": "part of the cluster that do all the three things that you mentioned uh and then and some more",
    "start": "1912399",
    "end": "1917760"
  },
  {
    "text": "and they're based on different granularities there is a seccom field also to do the things that we all",
    "start": "1917760",
    "end": "1923720"
  },
  {
    "text": "discussed uh and that is something easy to kind of do on your laptop and just",
    "start": "1923720",
    "end": "1929279"
  },
  {
    "text": "see if your application works uh it starts with privileged Baseline and",
    "start": "1929279",
    "end": "1934919"
  },
  {
    "text": "restricted I think Baseline is a decent start with enough good enough depending",
    "start": "1934919",
    "end": "1940200"
  },
  {
    "text": "on your risk posture uh so that's where I would say like we can end like yes set",
    "start": "1940200",
    "end": "1945679"
  },
  {
    "text": "comp is great we should continue continue to explore and push the boundaries to make it better and in some",
    "start": "1945679",
    "end": "1951559"
  },
  {
    "text": "future world when you give a yaml of a pod it automatically generates a seccom profile for all of us and that would be",
    "start": "1951559",
    "end": "1958360"
  },
  {
    "text": "wonderful but we're not there yet so with that",
    "start": "1958360",
    "end": "1963158"
  }
]