[
  {
    "text": "okay let's get started thank you everyone for joining us today welcome to today's cncf webinar",
    "start": "13120",
    "end": "20160"
  },
  {
    "text": "aws controllers for kubernetes",
    "start": "20160",
    "end": "24560"
  },
  {
    "text": "i'm jerry fallon and i'll be moderating today's webinar we would like to welcome our presenter today jay pipes principal open source engineer",
    "start": "25599",
    "end": "32719"
  },
  {
    "text": "at amazon web services just a few housekeeping items before we get started during the webinar you are",
    "start": "32719",
    "end": "38239"
  },
  {
    "text": "not able to talk as an attendee there is a q a box at the bottom of your screen please feel free to drop your",
    "start": "38239",
    "end": "43520"
  },
  {
    "text": "questions in there and we'll get to as many as we can at the end this is an official webinar of the cncf",
    "start": "43520",
    "end": "48960"
  },
  {
    "text": "and as such is subject to the cncf code of conduct please do not add anything to the chat or questions that would be in violation",
    "start": "48960",
    "end": "55440"
  },
  {
    "text": "of the code of conduct please be respectful of your fellow participants and presenters please also note that the recording and",
    "start": "55440",
    "end": "61600"
  },
  {
    "text": "slides will be posted later today to the cncf webinar page at cncf dot io slash webinars and with",
    "start": "61600",
    "end": "68159"
  },
  {
    "text": "that i'll hand it over to jay for today's presentation thank you jerry i really appreciate the",
    "start": "68159",
    "end": "73920"
  },
  {
    "text": "opportunity so yeah today we're going to talk a little bit about this",
    "start": "73920",
    "end": "79200"
  },
  {
    "text": "ack project which is a brand new set of open source service controllers for",
    "start": "79200",
    "end": "86320"
  },
  {
    "text": "kubernetes that allows a bridging of the aws universe of",
    "start": "86320",
    "end": "92000"
  },
  {
    "text": "managed services with kubernetes so we're going to get started here with",
    "start": "92000",
    "end": "98640"
  },
  {
    "text": "what should be a pretty familiar story for lots of folks",
    "start": "98640",
    "end": "103759"
  },
  {
    "text": "and it's a story that sort of highlights what the benefits of ack are and where it fits into things so",
    "start": "103759",
    "end": "111040"
  },
  {
    "text": "we've got alice she is a web developer and she's a huge kubernetes fan of course she's developed this node.js",
    "start": "111040",
    "end": "118000"
  },
  {
    "text": "application for her internal department at her company and she's you know she's using modern",
    "start": "118000",
    "end": "124560"
  },
  {
    "text": "development practices and uh building her application into an immutable docker image and",
    "start": "124560",
    "end": "132160"
  },
  {
    "text": "um she's using she wore at least initially she chose to use sqlite as",
    "start": "132160",
    "end": "138720"
  },
  {
    "text": "sort of a simple storage database for her application and that was all fine and",
    "start": "138720",
    "end": "144879"
  },
  {
    "text": "dandy so alice being a huge kubernetes fan she",
    "start": "144879",
    "end": "150239"
  },
  {
    "text": "goes and deploys her application into a kubernetes cluster and she does this",
    "start": "150239",
    "end": "156080"
  },
  {
    "text": "usually using the normal cube cuddle ply for a deployment and a",
    "start": "156080",
    "end": "161360"
  },
  {
    "text": "service for some sort of top-level networking stuff and maybe she also does some um",
    "start": "161360",
    "end": "167680"
  },
  {
    "text": "ingress load mounts or um resources for her application and that's all fine",
    "start": "167680",
    "end": "173120"
  },
  {
    "text": "and dandy everything is running great until you know like 10 users try using",
    "start": "173120",
    "end": "179440"
  },
  {
    "text": "her site at once and kind of predictably sql light falls over because it's just not built for",
    "start": "179440",
    "end": "185280"
  },
  {
    "text": "that right and alice she realizes she's she's got to set up some sort of real database",
    "start": "185280",
    "end": "190879"
  },
  {
    "text": "and um she she knows that postgres is a real rdbms",
    "start": "190879",
    "end": "198000"
  },
  {
    "text": "right a real relational database management system that supports concurrent access and all this kind of stuff and",
    "start": "198000",
    "end": "203599"
  },
  {
    "text": "alice she's like i said a huge kubernetes user and so she googles you know hey how do i",
    "start": "203599",
    "end": "209680"
  },
  {
    "text": "set up postgres in kubernetes and of course there's lots of tutorials out there and they all kind of boil down to what",
    "start": "209680",
    "end": "216720"
  },
  {
    "text": "you see here on your screen right she creates a secret using cube cuddle and then uh persistent volume claims so she's got",
    "start": "216720",
    "end": "223920"
  },
  {
    "text": "some persistent storage for the database and the deployment file and the service",
    "start": "223920",
    "end": "230000"
  },
  {
    "text": "manifest right and she goes and deploys postgres and changes her application so that it",
    "start": "230000",
    "end": "235519"
  },
  {
    "text": "is connecting to her postgres cluster instead of sql light and",
    "start": "235519",
    "end": "241760"
  },
  {
    "text": "this all works great the only problem with that is now alice she is now in the dba game",
    "start": "241760",
    "end": "248799"
  },
  {
    "text": "right and that's not really what she had in mind uh she wanted to focus on writing",
    "start": "248799",
    "end": "254159"
  },
  {
    "text": "her application and not necessarily administering databases",
    "start": "254159",
    "end": "259199"
  },
  {
    "text": "so what is she to do right she hears about aws's rds database service right",
    "start": "259199",
    "end": "266320"
  },
  {
    "text": "which provides a managed relational database experience and um she thinks oh that's great you",
    "start": "266320",
    "end": "272880"
  },
  {
    "text": "know now i don't need to be the dba i'll just set up a an rds instance and",
    "start": "272880",
    "end": "278479"
  },
  {
    "text": "amazon will do all the heavy lifting around managing the the database instances but",
    "start": "278479",
    "end": "285280"
  },
  {
    "text": "she notices that there's a problem right so she goes to create this rds database instance and she logs into",
    "start": "285280",
    "end": "292800"
  },
  {
    "text": "the aws console and everything is just kind of like incongruent for alice right she really",
    "start": "292800",
    "end": "298320"
  },
  {
    "text": "she really loves her cozy kubernetes experience and having to like sort of like go into the web console and click through like a",
    "start": "298320",
    "end": "305120"
  },
  {
    "text": "wizard to create database instances is just not really what she wanted um i mean she didn't have to",
    "start": "305120",
    "end": "312160"
  },
  {
    "text": "use the aws console right she could have also used the aws cli tool",
    "start": "312160",
    "end": "317199"
  },
  {
    "text": "she could have used something like cloud formation or terraform you know all of those things are perfectly good tools",
    "start": "317199",
    "end": "323600"
  },
  {
    "text": "but at the end of the day those aren't kubernetes and alice really likes kubernetes she",
    "start": "323600",
    "end": "329440"
  },
  {
    "text": "wants to stick in her kubernetes cozy universe and use the kubernetes api",
    "start": "329440",
    "end": "334479"
  },
  {
    "text": "to manage all the resources in her application including the dependencies of those applications like a database",
    "start": "334479",
    "end": "341680"
  },
  {
    "text": "service she loves kubernetes but not quite enough to be a dba",
    "start": "341680",
    "end": "347919"
  },
  {
    "text": "right she wants to use rds so that it takes away all that like management of",
    "start": "347919",
    "end": "353199"
  },
  {
    "text": "database stuff away from her she doesn't have to deal with the pain point of all that administrative what can she",
    "start": "353199",
    "end": "359440"
  },
  {
    "text": "do well that's pretty much what ack is right it allows alice to",
    "start": "359440",
    "end": "367120"
  },
  {
    "text": "simply coop cuddle apply a kubernetes manifest that describes an rds database instance",
    "start": "367120",
    "end": "374160"
  },
  {
    "text": "in this case right so instead of logging into the aws web console or",
    "start": "374160",
    "end": "380240"
  },
  {
    "text": "using cloudformation or the aws cli or any of those non-kubernetes tools she just simply",
    "start": "380240",
    "end": "386800"
  },
  {
    "text": "writes the kubernetes manifest to the kubernetes api and boom an ack service controller for",
    "start": "386800",
    "end": "393440"
  },
  {
    "text": "rds takes over the management of the life cycle of that particular resource",
    "start": "393440",
    "end": "399919"
  },
  {
    "text": "and that's pretty much what ack is right it kind of boils down to let's allow",
    "start": "399919",
    "end": "406319"
  },
  {
    "text": "kubernetes users to to stay in the kubernetes api use the familiar kubernetes manifest",
    "start": "406319",
    "end": "414479"
  },
  {
    "text": "and configuration language but have a service custom controller for",
    "start": "414479",
    "end": "420880"
  },
  {
    "text": "kubernetes manage those resources in the aws apis um so you know hopefully ack was solving",
    "start": "420880",
    "end": "427840"
  },
  {
    "text": "alice's problems uh let's take a look sort of under the covers and see if it can help solve some of yours too",
    "start": "427840",
    "end": "436319"
  },
  {
    "text": "so um like i mentioned kubernetes experience for aws services it's kind of",
    "start": "436319",
    "end": "441440"
  },
  {
    "text": "providing a bridge right this sort of integration bridge between the aws services and i say aws managed",
    "start": "441440",
    "end": "448080"
  },
  {
    "text": "services here but it's really any aws service regardless of whether it's a",
    "start": "448080",
    "end": "453440"
  },
  {
    "text": "managed service like rds or something like that right so there are custom controllers",
    "start": "453440",
    "end": "461120"
  },
  {
    "text": "within the ack project one for each aws service so there's an s3 service controller for",
    "start": "461120",
    "end": "466639"
  },
  {
    "text": "ack and sns service controller for ack etc and like all custom controllers in the",
    "start": "466639",
    "end": "474639"
  },
  {
    "text": "kubernetes universe kubernetes stores the desired resource state right so when",
    "start": "474639",
    "end": "479680"
  },
  {
    "text": "alice writes a kubernetes manifest for an rds db instance kind",
    "start": "479680",
    "end": "486319"
  },
  {
    "text": "through to the kubernetes api she does so using cube cuddle apply kubernetes api server stores",
    "start": "486319",
    "end": "493840"
  },
  {
    "text": "what alice had requested as the desired resource date for her db instance",
    "start": "493840",
    "end": "500240"
  },
  {
    "text": "and then the ack service controller which is the kubernetes custom controller for that particular service",
    "start": "500240",
    "end": "506879"
  },
  {
    "text": "handles the life cycle of that managed service resource so in the case of the rds",
    "start": "506879",
    "end": "514080"
  },
  {
    "text": "ack service controller it will call create db instance in the rds api and manage",
    "start": "514080",
    "end": "520959"
  },
  {
    "text": "the life cycle of the db instance for the kubernetes user one important thing",
    "start": "520959",
    "end": "529040"
  },
  {
    "text": "that i like to bring up early on is that there is no use of cloud",
    "start": "529040",
    "end": "536399"
  },
  {
    "text": "formation in ack the reason i bring this up is um ack the aws controllers for",
    "start": "536399",
    "end": "542320"
  },
  {
    "text": "kubernetes project is um a sort of redesign or a rethink",
    "start": "542320",
    "end": "547440"
  },
  {
    "text": "of a project called the aws service operator or aso which uh an ex-colleague of mine",
    "start": "547440",
    "end": "554560"
  },
  {
    "text": "chris hein created back in 2018 and aso the aws service operator was a",
    "start": "554560",
    "end": "562640"
  },
  {
    "text": "fairly thin shim across cloud formation so when you for instance created an s3",
    "start": "562640",
    "end": "568480"
  },
  {
    "text": "bucket by uh the aws service operator what actually happened behind the scenes",
    "start": "568480",
    "end": "574000"
  },
  {
    "text": "was that a cloudformation stack was created and within that cloud formation stack an s3 bucket was created and when we",
    "start": "574000",
    "end": "581839"
  },
  {
    "text": "were thinking about how how do we redesign the aws service operator and sort of bring it into some some of the more",
    "start": "581839",
    "end": "587680"
  },
  {
    "text": "modern uh kubernetes client libraries and and controller runtime and that kind of thing",
    "start": "587680",
    "end": "592720"
  },
  {
    "text": "we were thinking well is that user experience really kind of surprising you know",
    "start": "592720",
    "end": "599279"
  },
  {
    "text": "i mean if if someone creates an s3 bucket via a kubernetes manifest and the service",
    "start": "599279",
    "end": "605600"
  },
  {
    "text": "controller actually creates a confirmation stack behind the scenes that creates that s3 bucket and then someone sort of logs",
    "start": "605600",
    "end": "612000"
  },
  {
    "text": "into the aws console or or looks at cloudwatch or something and sees that a cloud formation stack",
    "start": "612000",
    "end": "618000"
  },
  {
    "text": "was created is that we thought that was a surprising user experience and so we decided not to use",
    "start": "618000",
    "end": "624800"
  },
  {
    "text": "cloudformation uh within the design of ack and that's why i",
    "start": "624800",
    "end": "630000"
  },
  {
    "text": "put it here as i just to warn people you know this is a it's not just a thin",
    "start": "630000",
    "end": "636079"
  },
  {
    "text": "layer on top of cloud formation as i mentioned each aws service has",
    "start": "636079",
    "end": "642880"
  },
  {
    "text": "its own separate ack service controller way back when in the early sort of",
    "start": "642880",
    "end": "649920"
  },
  {
    "text": "design of ack we thought about making a single binary right which frankly is the way",
    "start": "649920",
    "end": "657120"
  },
  {
    "text": "that the aws service operator was structured right a single binary that could communicate with lots of different aws",
    "start": "657120",
    "end": "663760"
  },
  {
    "text": "services and manage the lifecycle of the resources in all of those apis",
    "start": "663760",
    "end": "669839"
  },
  {
    "text": "after discussing with a number of our more security conscious folks we decided that it was a better idea",
    "start": "669839",
    "end": "677760"
  },
  {
    "text": "to have separate service controller binaries for managing the resources in one",
    "start": "677760",
    "end": "684800"
  },
  {
    "text": "particular aws service and the reason for that was so that we could promote and",
    "start": "684800",
    "end": "691680"
  },
  {
    "text": "encourage a best practice of having a very finely scoped",
    "start": "691680",
    "end": "696959"
  },
  {
    "text": "set of im role policies that only allowed the i am role that the",
    "start": "696959",
    "end": "702959"
  },
  {
    "text": "service controller was executing in uh to manage the resources in one",
    "start": "702959",
    "end": "708320"
  },
  {
    "text": "particular api if we had a single binary the im role and the policy associated with",
    "start": "708320",
    "end": "715680"
  },
  {
    "text": "that i am role that was running that single binary would essentially need to have like this sort of super user",
    "start": "715680",
    "end": "721920"
  },
  {
    "text": "uh sort of god level scope and that's something that we didn't really uh want to promote and that's the",
    "start": "721920",
    "end": "728160"
  },
  {
    "text": "reason why we chose to create a separate separate service controller binaries one for each",
    "start": "728160",
    "end": "733600"
  },
  {
    "text": "service so we could you know fine grain scope that that i am role",
    "start": "733600",
    "end": "739600"
  },
  {
    "text": "what we would like to do this is a little bit aspirational as i'll i'll explain here in a second when",
    "start": "740079",
    "end": "746160"
  },
  {
    "text": "i talk about our release process but you will install ack service controllers",
    "start": "746160",
    "end": "751279"
  },
  {
    "text": "using helm or static manifest that we will distribute as artifacts for each of the",
    "start": "751279",
    "end": "756399"
  },
  {
    "text": "releases or we're actually putting together helper scripts like since we do have lots of these separate",
    "start": "756399",
    "end": "763600"
  },
  {
    "text": "ack service controllers one for each aws service and we do have lots and lots of aws",
    "start": "763600",
    "end": "769279"
  },
  {
    "text": "services i mean i think there's like what 107 aws service apis at this point or more",
    "start": "769279",
    "end": "775360"
  },
  {
    "text": "um we we knew that it's not a great user experience to actually ask people to you know manually",
    "start": "775360",
    "end": "781600"
  },
  {
    "text": "install either with helm install or or manually with like cube cuddle or customize or something",
    "start": "781600",
    "end": "787839"
  },
  {
    "text": "over 100 different service controllers and so we're writing some helper scripts that essentially automate",
    "start": "787839",
    "end": "793839"
  },
  {
    "text": "this process of installing service controllers for a list of services so that you don't",
    "start": "793839",
    "end": "800079"
  },
  {
    "text": "have to you know repeat the installation process",
    "start": "800079",
    "end": "805760"
  },
  {
    "text": "another important aspect of the ack design is that everything including the",
    "start": "806160",
    "end": "812720"
  },
  {
    "text": "controller implementation itself is generated so uh many of you might be familiar with a",
    "start": "812720",
    "end": "819920"
  },
  {
    "text": "project called cube builder right coupe builder is um it's frankly an",
    "start": "819920",
    "end": "825199"
  },
  {
    "text": "awesome project but it generates the code for custom kubernetes",
    "start": "825199",
    "end": "830880"
  },
  {
    "text": "controllers and the api types and it uses um a a set of libraries called",
    "start": "830880",
    "end": "839680"
  },
  {
    "text": "controller tools which has this controller gen binary in it that can generate the different crds and",
    "start": "839680",
    "end": "846480"
  },
  {
    "text": "deep copy files and and roles and all sorts of you know the sort of foundational stuff that you need",
    "start": "846480",
    "end": "852959"
  },
  {
    "text": "in a kubernetes custom controller what ku builder does not do however is",
    "start": "852959",
    "end": "859440"
  },
  {
    "text": "generate the controller implementation for you so basically what it does is it outputs",
    "start": "859440",
    "end": "864959"
  },
  {
    "text": "a stub of a controller and then it's up to you to to go ahead and write the go code for implementing that particular controller",
    "start": "864959",
    "end": "872240"
  },
  {
    "text": "well and that's all fine and dandy only we realized that with 170 plus aws",
    "start": "872240",
    "end": "879600"
  },
  {
    "text": "services hand building a an implementation of each service controller was just not",
    "start": "879600",
    "end": "885040"
  },
  {
    "text": "really feasible and so we set about to create a code generator that actually generates the full service",
    "start": "885040",
    "end": "892639"
  },
  {
    "text": "controller implementation and that includes the linkage with the aws sdk go",
    "start": "892639",
    "end": "898959"
  },
  {
    "text": "which is you know the library that we use to communicate with the backend aws services we have a sort of a small ack runtime",
    "start": "898959",
    "end": "907600"
  },
  {
    "text": "that provides this linkage you know between like a reconciling controller and the various",
    "start": "907600",
    "end": "912959"
  },
  {
    "text": "aws sdk go calls that we make but at the end of the day each service",
    "start": "912959",
    "end": "919279"
  },
  {
    "text": "controller is fully code generated and that's kind of what makes ack different from",
    "start": "919279",
    "end": "926240"
  },
  {
    "text": "some other things right another important thing to two important things to point out we",
    "start": "926240",
    "end": "932880"
  },
  {
    "text": "consult with the aws service teams in question to make sure that what we are generating",
    "start": "932880",
    "end": "938160"
  },
  {
    "text": "for their service controller actually you know is calling their api in a semantically and",
    "start": "938160",
    "end": "945120"
  },
  {
    "text": "behaviorally correct way so for instance we're working hand in hand with the elastic",
    "start": "945120",
    "end": "950639"
  },
  {
    "text": "team and the step functions and lambda team to make sure that the ack service controller for elastic",
    "start": "950639",
    "end": "956399"
  },
  {
    "text": "hash and set functions and lambda and sagemaker and these other services actually behaves the way that",
    "start": "956399",
    "end": "962880"
  },
  {
    "text": "they you know expect it to behave it's making calls in the way that it",
    "start": "962880",
    "end": "968160"
  },
  {
    "text": "should be and then finally there is absolutely nothing that is specific to eks so um",
    "start": "968160",
    "end": "976560"
  },
  {
    "text": "ack service controllers can be installed on any target kubernetes cluster whatsoever regardless of whether you",
    "start": "976560",
    "end": "982880"
  },
  {
    "text": "choose to use the the managed control plane uh flavor of eks",
    "start": "982880",
    "end": "989519"
  },
  {
    "text": "let's talk a little bit more about the code generation i mentioned that we generate the entire controller implementation and that is true",
    "start": "990320",
    "end": "997199"
  },
  {
    "text": "we actually have this multi-phased approach to code generation",
    "start": "997199",
    "end": "1002240"
  },
  {
    "text": "and we use as the source of truth the aws sdk go model or api models that are",
    "start": "1002240",
    "end": "1009600"
  },
  {
    "text": "actually included in the aws sdk go source repository we use these models which are json files",
    "start": "1009600",
    "end": "1016399"
  },
  {
    "text": "that describe each of the api operations and these things called shapes right which are essentially described the",
    "start": "1016399",
    "end": "1022839"
  },
  {
    "text": "payloads and resources of that top-level api anyway we use these model files we",
    "start": "1022839",
    "end": "1029760"
  },
  {
    "text": "consume them and when we generate the kubernetes api files right the the",
    "start": "1029760",
    "end": "1035199"
  },
  {
    "text": "go files that represent the custom resource definitions we",
    "start": "1035199",
    "end": "1040400"
  },
  {
    "text": "for each of the top level resources in the api that we identify and then once we do that we move on to",
    "start": "1040400",
    "end": "1046558"
  },
  {
    "text": "this second phase of generating this the the deep copy code the object",
    "start": "1046559",
    "end": "1052000"
  },
  {
    "text": "code for the kubernetes api machinery and we generate some crd configuration",
    "start": "1052000",
    "end": "1058000"
  },
  {
    "text": "files the the the yaml manifest that describe the particular custom resource definition",
    "start": "1058000",
    "end": "1063280"
  },
  {
    "text": "and then we generate the entire controller for the service so we generate the the rbok uh configuration stuff as well",
    "start": "1063280",
    "end": "1070400"
  },
  {
    "text": "so it's this sort of like multi-phased waterfall of of code generation that happens for",
    "start": "1070400",
    "end": "1077039"
  },
  {
    "text": "each of the services let's talk a little bit about access",
    "start": "1077039",
    "end": "1084400"
  },
  {
    "text": "control authorization off authy",
    "start": "1084400",
    "end": "1088880"
  },
  {
    "text": "i put a link here which if you go and download the the files or you can just",
    "start": "1089520",
    "end": "1094960"
  },
  {
    "text": "follow this link uh it has a diagram uh on that page and that diagram is",
    "start": "1094960",
    "end": "1102960"
  },
  {
    "text": "primarily there to focus your attention on the fact that there are two different",
    "start": "1102960",
    "end": "1108960"
  },
  {
    "text": "r boxes role-based access control systems in place with ack at any given time and that they",
    "start": "1108960",
    "end": "1116400"
  },
  {
    "text": "don't overlap with each other and it's very important to to understand how these different rbox",
    "start": "1116400",
    "end": "1122960"
  },
  {
    "text": "systems are used right so alice the kubernetes user that that calls coop",
    "start": "1122960",
    "end": "1129360"
  },
  {
    "text": "cuddle apply and passes in like uh rds",
    "start": "1129360",
    "end": "1134440"
  },
  {
    "text": "dbinstance.yaml file right alice is a kubernetes user",
    "start": "1134440",
    "end": "1140320"
  },
  {
    "text": "who is associated with a role a kubernetes role and that kubernetes role is has",
    "start": "1140320",
    "end": "1148000"
  },
  {
    "text": "a role binding which allows alice to read or write",
    "start": "1148000",
    "end": "1154720"
  },
  {
    "text": "custom resources of a particular kind in in alice's case it would be",
    "start": "1154880",
    "end": "1161600"
  },
  {
    "text": "rds.services.kates.aws forward slash db instance like that that would be the kind that she has",
    "start": "1162200",
    "end": "1167440"
  },
  {
    "text": "permission to uh create that is the kubernetes role based access",
    "start": "1167440",
    "end": "1173760"
  },
  {
    "text": "control system in in play right that once the kubernetes api receives a",
    "start": "1173760",
    "end": "1180240"
  },
  {
    "text": "request from alice and determines the role that she is operating under um it then",
    "start": "1180240",
    "end": "1186400"
  },
  {
    "text": "performs its authorization and access control to determine whether or not alice the",
    "start": "1186400",
    "end": "1192799"
  },
  {
    "text": "kubernetes user has the ability to write a custom resource of that kind to the",
    "start": "1192799",
    "end": "1199360"
  },
  {
    "text": "server however once that's done and the kubernetes api",
    "start": "1199360",
    "end": "1205360"
  },
  {
    "text": "server writes the custom resource representing the rds database instance to etcd",
    "start": "1205360",
    "end": "1210480"
  },
  {
    "text": "behind the scenes it returns success to alice um that is the end",
    "start": "1210480",
    "end": "1216799"
  },
  {
    "text": "of the kubernetes arbox scope at that point the ack service controller",
    "start": "1216799",
    "end": "1225280"
  },
  {
    "text": "for rds it has picked up in its reconciliation loop that there is a new custom resource",
    "start": "1225280",
    "end": "1231760"
  },
  {
    "text": "of kind you know rds db instance and then at that point it's going to",
    "start": "1231760",
    "end": "1237919"
  },
  {
    "text": "need to call the aws rds api right to manage the life cycle of db instances",
    "start": "1237919",
    "end": "1246320"
  },
  {
    "text": "in um a particular aws account and that rbox system the i am role based",
    "start": "1246320",
    "end": "1253039"
  },
  {
    "text": "arbog system is in place for the server or it's in place for the i am",
    "start": "1253039",
    "end": "1258480"
  },
  {
    "text": "role associated with the service account that the ack service controller runs as",
    "start": "1258480",
    "end": "1264320"
  },
  {
    "text": "and there is no overlap whatsoever between the kubernetes arbok that alice",
    "start": "1264320",
    "end": "1270320"
  },
  {
    "text": "you know is dick is uh controlled by and the i am role that the ack service",
    "start": "1270320",
    "end": "1276960"
  },
  {
    "text": "controller is using in order to determine whether it has the rights",
    "start": "1276960",
    "end": "1282159"
  },
  {
    "text": "to manage the life cycle in the rds api it's very important to understand like",
    "start": "1282159",
    "end": "1287840"
  },
  {
    "text": "the scope of where those two different rbox systems come into play",
    "start": "1287840",
    "end": "1293120"
  },
  {
    "text": "we are recommending um for those of you who are not familiar we have something called",
    "start": "1293120",
    "end": "1298559"
  },
  {
    "text": "pod irsa or pod im roles for service accounts it is our recommended way",
    "start": "1298559",
    "end": "1304080"
  },
  {
    "text": "of providing fine-grained iron permissions for a specific pod and this is in",
    "start": "1304080",
    "end": "1311600"
  },
  {
    "text": "uh contrast to the uh the default um uh",
    "start": "1311600",
    "end": "1318159"
  },
  {
    "text": "setup where the im role associated with the worker node the the kubelet is",
    "start": "1318159",
    "end": "1323840"
  },
  {
    "text": "running on uh those permissions are used uh by default for pods so with pod irsa you should be able",
    "start": "1323840",
    "end": "1331200"
  },
  {
    "text": "to associate an iron roll to the surface account that a specific pod is running at",
    "start": "1331200",
    "end": "1336799"
  },
  {
    "text": "and that im role is used in the ack service controller to determine the the policy the ion policy that it has in",
    "start": "1336799",
    "end": "1344159"
  },
  {
    "text": "order to make the calls to the aws rds api",
    "start": "1344159",
    "end": "1349600"
  },
  {
    "text": "all right so one last thing around authorization and access control",
    "start": "1351440",
    "end": "1356880"
  },
  {
    "text": "something i'm super excited about so one of the contributors to the ack project named amin hilali",
    "start": "1356880",
    "end": "1363280"
  },
  {
    "text": "he has been working on this project called cross account resource management or carm and when we realized that",
    "start": "1363280",
    "end": "1372480"
  },
  {
    "text": "okay we're going to be having lots of these different ack service controllers we we didn't want to have a user",
    "start": "1372480",
    "end": "1379840"
  },
  {
    "text": "experience where in order to control resources across multiple aws accounts",
    "start": "1379840",
    "end": "1385840"
  },
  {
    "text": "that the user would have to install an ack service controller in lots of different kubernetes clusters",
    "start": "1385840",
    "end": "1391760"
  },
  {
    "text": "each associated with a separate aws account we just like just did not want that user",
    "start": "1391760",
    "end": "1398000"
  },
  {
    "text": "experience of having to install hundreds of these service controllers so instead what the cross account resource",
    "start": "1398000",
    "end": "1404880"
  },
  {
    "text": "management project allows is for a cluster admin to associate an aws account id to a",
    "start": "1404880",
    "end": "1412880"
  },
  {
    "text": "kubernetes namespace via an annotation and when a user creates a custom resource",
    "start": "1412880",
    "end": "1420080"
  },
  {
    "text": "in that kubernetes namespace the ack service controller can say oh hey look there is an annotation i think it's",
    "start": "1420080",
    "end": "1428840"
  },
  {
    "text": "services.kates.aws.ford slash owner dash account dash id and it sees that annotation exists for",
    "start": "1428840",
    "end": "1434880"
  },
  {
    "text": "the namespace and as soon as it sees that it says okay i i'm going to need to call sts assume",
    "start": "1434880",
    "end": "1441279"
  },
  {
    "text": "role to pivot the aws client that's inside the ack service controller so that it can make",
    "start": "1441279",
    "end": "1449760"
  },
  {
    "text": "api calls against the aws api as a as a separate",
    "start": "1449760",
    "end": "1456640"
  },
  {
    "text": "aws owner account and in this way a single ack service controller can",
    "start": "1456640",
    "end": "1462320"
  },
  {
    "text": "manage the life cycle of resources across lots of different aws accounts so if",
    "start": "1462320",
    "end": "1467760"
  },
  {
    "text": "you're in an organization that has lots of different that manages lots of different aws accounts",
    "start": "1467760",
    "end": "1474480"
  },
  {
    "text": "this frankly should be like top of your mind as far as the the features that are coming soon to",
    "start": "1474480",
    "end": "1480640"
  },
  {
    "text": "ack because it'll make your life a whole lot easier",
    "start": "1480640",
    "end": "1486480"
  },
  {
    "text": "another thing what about secret stuff any of you who are familiar with the rds create db instance api call know that it",
    "start": "1486480",
    "end": "1494880"
  },
  {
    "text": "has a little bit of an issue you send the master user password in plain text in the create the create",
    "start": "1494880",
    "end": "1501840"
  },
  {
    "text": "db instance api call clearly that's not a kubernetes best practice and uh",
    "start": "1501840",
    "end": "1508159"
  },
  {
    "text": "obviously kubernetes best practice is to store secret stuff in secrets and then reference that",
    "start": "1508159",
    "end": "1513520"
  },
  {
    "text": "secret uh where you need to in your in your resources and your customer resource so",
    "start": "1513520",
    "end": "1520000"
  },
  {
    "text": "what the secret reference project does is uh implement basically that it replaces",
    "start": "1520000",
    "end": "1526720"
  },
  {
    "text": "the master user passwords data type underneath in in the custom resource definition from",
    "start": "1526720",
    "end": "1532480"
  },
  {
    "text": "string to a secret reference right um actually it's a key reference within",
    "start": "1532480",
    "end": "1537600"
  },
  {
    "text": "a secret and this allows um a cluster admin to set up a secret called dp secrets",
    "start": "1537600",
    "end": "1544640"
  },
  {
    "text": "with a key within that secret called master user password and they can control the the access and",
    "start": "1544640",
    "end": "1550640"
  },
  {
    "text": "and arbuck and all that kind of stuff on the secret themselves and then all alice needs to do",
    "start": "1550640",
    "end": "1556240"
  },
  {
    "text": "is reference that by name she doesn't need to uh do anything other than that",
    "start": "1556240",
    "end": "1563039"
  },
  {
    "text": "some other things that i'm excited about coming soon and when i say soon i mean within the next few months",
    "start": "1564000",
    "end": "1571279"
  },
  {
    "text": "okay so standardized aws tag representation for all ack resources um and then the second bullet point uh",
    "start": "1571279",
    "end": "1578640"
  },
  {
    "text": "tags that all uh custom resources within a namespace should have kind of related so the first one refers to the fact that",
    "start": "1578640",
    "end": "1586080"
  },
  {
    "text": "there across the the universe of aws service apis the way that tags are represented",
    "start": "1586080",
    "end": "1593760"
  },
  {
    "text": "meaning the data type that a tag takes is very inconsistent and you know some",
    "start": "1593760",
    "end": "1600320"
  },
  {
    "text": "some of the apis they allow tagging a resource on the create call like basically setting a",
    "start": "1600320",
    "end": "1607440"
  },
  {
    "text": "set of tags some uh don't allow that some of the service apis",
    "start": "1607440",
    "end": "1613200"
  },
  {
    "text": "represent it as a map of string to string other apis represent it as a list of structs",
    "start": "1613200",
    "end": "1618240"
  },
  {
    "text": "with a key and a value and then there's there's other representations as well this first bullet point is about having",
    "start": "1618240",
    "end": "1625279"
  },
  {
    "text": "ack standardize that representation so that any custom resource that ack manages",
    "start": "1625279",
    "end": "1631840"
  },
  {
    "text": "you represent you you specify the tags in spec.tags and it is a map of string to string",
    "start": "1631840",
    "end": "1637039"
  },
  {
    "text": "that's it no uh inconsistent representation of",
    "start": "1637039",
    "end": "1642080"
  },
  {
    "text": "the tag data structure the second bullet point is allowing um a specific set of aws",
    "start": "1642080",
    "end": "1649919"
  },
  {
    "text": "tags that all custom resources within a namespace should always have so if uh the cluster admin wants to make",
    "start": "1649919",
    "end": "1657679"
  },
  {
    "text": "sure that any rds instance that is created within namespace foo should be tagged with you know should",
    "start": "1657679",
    "end": "1663919"
  },
  {
    "text": "have an aws tag of bar then they would annotate the namespace with that set of",
    "start": "1663919",
    "end": "1669760"
  },
  {
    "text": "tags that should always be placed on db instance custom resources",
    "start": "1669760",
    "end": "1677919"
  },
  {
    "text": "finally common rate limiting and throttling support so i was actually talking with jason to",
    "start": "1677919",
    "end": "1683200"
  },
  {
    "text": "tybrus and the cluster api folks about how can we have a common rate",
    "start": "1683200",
    "end": "1688399"
  },
  {
    "text": "limiting and throttling support library for aws apis in ack that can be then referenced from",
    "start": "1688399",
    "end": "1695440"
  },
  {
    "text": "cluster api and um uh projects like crossplane",
    "start": "1695440",
    "end": "1700880"
  },
  {
    "text": "so that we don't have to like sort of constantly uh repeat ourselves and all of us are like work on various",
    "start": "1700880",
    "end": "1708480"
  },
  {
    "text": "variations of the same theme so this is a this common rate limiting and throttling support for",
    "start": "1708480",
    "end": "1713600"
  },
  {
    "text": "aws api calls is something that uh i'm really excited to get done in the next few",
    "start": "1713600",
    "end": "1719120"
  },
  {
    "text": "months and then finally there is uh this idea that look",
    "start": "1719120",
    "end": "1724960"
  },
  {
    "text": "you've created an s3 bucket or an rds database instance or an sns topic or sqsq or whatever",
    "start": "1724960",
    "end": "1732159"
  },
  {
    "text": "in the aws console completely outside of ack's knowledge and",
    "start": "1732159",
    "end": "1739200"
  },
  {
    "text": "you don't you want to essentially have ack start managing that resource well in this resource adoption",
    "start": "1739200",
    "end": "1746880"
  },
  {
    "text": "uh github issue and project we are allowing that so you will annotate the custom resource",
    "start": "1746880",
    "end": "1754399"
  },
  {
    "text": "with uh an arn an edo various resource name and that is an indication to the ack",
    "start": "1754399",
    "end": "1761760"
  },
  {
    "text": "service controller that it should expect that the resource with this particular arn",
    "start": "1761760",
    "end": "1767200"
  },
  {
    "text": "already exists and um it should just essentially place that resource under its own management as opposed to",
    "start": "1767200",
    "end": "1773760"
  },
  {
    "text": "attempting to recreate um a resource with that name",
    "start": "1773760",
    "end": "1781200"
  },
  {
    "text": "okay all right uh this is this final set of things i just want to discuss sort of how we're",
    "start": "1781200",
    "end": "1786240"
  },
  {
    "text": "handling the release cycle or the release cadence for ack as i've mentioned a few times",
    "start": "1786240",
    "end": "1792720"
  },
  {
    "text": "now there are well over 150 aws service apis we want to get to all",
    "start": "1792720",
    "end": "1798559"
  },
  {
    "text": "of them right we want to support all of them in ack but it's just it's not feasible to do that all in one",
    "start": "1798559",
    "end": "1804320"
  },
  {
    "text": "go so the way that we are thinking about it is we'll have we have these phases where a group of services",
    "start": "1804320",
    "end": "1812159"
  },
  {
    "text": "will get their controllers generated and then included in the ack source repository",
    "start": "1812159",
    "end": "1819520"
  },
  {
    "text": "and get binary docker images created and home charts created and pushed up",
    "start": "1819520",
    "end": "1825120"
  },
  {
    "text": "um to a docker registry and helm repository um these phases of",
    "start": "1825120",
    "end": "1832880"
  },
  {
    "text": "services are documented on the aws controllers for kubernetes",
    "start": "1832880",
    "end": "1839760"
  },
  {
    "text": "github page we have a project um that shows the sort of release map for these",
    "start": "1839760",
    "end": "1846559"
  },
  {
    "text": "phases of controllers we're going initially into what we're calling developer preview and that",
    "start": "1846559",
    "end": "1852080"
  },
  {
    "text": "essentially just means um the helm chart is not is not currently available",
    "start": "1852080",
    "end": "1858240"
  },
  {
    "text": "for easy installation and the way that you work with these service controllers is frankly not particularly user friendly",
    "start": "1858240",
    "end": "1865200"
  },
  {
    "text": "it's it's very sort of like developery you use uh test credentials and anyway",
    "start": "1865200",
    "end": "1871840"
  },
  {
    "text": "long story short it's not particularly user friendly in developer preview when we get a set of bugs for these",
    "start": "1871840",
    "end": "1880159"
  },
  {
    "text": "phases of service controllers and we get those bugs fixed and we're happy with",
    "start": "1880159",
    "end": "1885279"
  },
  {
    "text": "the stability of the service controllers then we'll move them into a beta phase and then we're aiming to",
    "start": "1885279",
    "end": "1891760"
  },
  {
    "text": "get these phases of controllers into ga within three months of placing them into developer preview",
    "start": "1891760",
    "end": "1899840"
  },
  {
    "text": "the services that we initially placed into developer preview are listed here s3 s sqs ecr dynamodb",
    "start": "1899840",
    "end": "1907200"
  },
  {
    "text": "and api gateway v2 of those unfortunately sqs had a bit of an issue",
    "start": "1907200",
    "end": "1913679"
  },
  {
    "text": "and it's not yet in the the ack source repository dynamodb",
    "start": "1913679",
    "end": "1920559"
  },
  {
    "text": "should be by the end of the week as well as api gateway v2 we're just waiting on a couple end-to-end",
    "start": "1920559",
    "end": "1925919"
  },
  {
    "text": "tests the next phase of ack service",
    "start": "1925919",
    "end": "1932320"
  },
  {
    "text": "controllers is rds elasticash we've got some parts of cloudfront",
    "start": "1932320",
    "end": "1937760"
  },
  {
    "text": "some parts of ec2 and eks and those should be coming out yeah the",
    "start": "1937760",
    "end": "1943200"
  },
  {
    "text": "next few weeks next couple weeks and then sorry after that we're",
    "start": "1943200",
    "end": "1948960"
  },
  {
    "text": "we're looking at um [Music] the kafka service we're looking at",
    "start": "1948960",
    "end": "1955120"
  },
  {
    "text": "lambda step functions uh and more so the project that you see here linked",
    "start": "1955120",
    "end": "1962159"
  },
  {
    "text": "you can go there and see the release road map of what we have planned what is currently targeting for developer preview and",
    "start": "1962159",
    "end": "1968159"
  },
  {
    "text": "currently like work in progress and then beta and ga after that",
    "start": "1968159",
    "end": "1974480"
  },
  {
    "text": "and i'll just wrap up by saying everything about ack is open source and uh we are absolutely",
    "start": "1974960",
    "end": "1982960"
  },
  {
    "text": "jazzed to get feedback from everybody and uh contributions if you feel like it um and uh these two links should get you",
    "start": "1982960",
    "end": "1990880"
  },
  {
    "text": "started going in the right direction so with that i will wrap up the presentation and i'm",
    "start": "1990880",
    "end": "1997360"
  },
  {
    "text": "looking forward to answering some questions that folks have thank you very much for a wonderful",
    "start": "1997360",
    "end": "2003919"
  },
  {
    "text": "presentation we have a few questions here how different is this from eks",
    "start": "2003919",
    "end": "2011679"
  },
  {
    "text": "uh all right so najib i hope i'm pronouncing your name right um so uh",
    "start": "2011679",
    "end": "2018480"
  },
  {
    "text": "ack is entirely different from eks eks is a service an aws service that",
    "start": "2018480",
    "end": "2025200"
  },
  {
    "text": "installs a managed control plane and recently a more managed data plane with managed",
    "start": "2025200",
    "end": "2030720"
  },
  {
    "text": "node groups but a managed control plane for kubernetes so um ack",
    "start": "2030720",
    "end": "2036720"
  },
  {
    "text": "is a set of kubernetes native applications kubernetes custom controllers that allow",
    "start": "2036720",
    "end": "2043120"
  },
  {
    "text": "a kubernetes native way of managing resources outside in the aws apis",
    "start": "2043120",
    "end": "2052240"
  },
  {
    "text": "okay can you elaborate on the level effort level of effort needed to run ack on any",
    "start": "2053119",
    "end": "2059118"
  },
  {
    "text": "kubernetes d stream um that's a that's a very good question uh",
    "start": "2059119",
    "end": "2067118"
  },
  {
    "text": "right now in developer preview unless you are pretty comfortable using things like",
    "start": "2067119",
    "end": "2073760"
  },
  {
    "text": "customize and you know manually deploying pods and deployments using cube cuddle i",
    "start": "2073760",
    "end": "2081040"
  },
  {
    "text": "would maybe wait a little while maybe a month or two until we get the initial phase of controllers into",
    "start": "2081040",
    "end": "2087679"
  },
  {
    "text": "beta which then we will have helm charts for those controllers",
    "start": "2087679",
    "end": "2092720"
  },
  {
    "text": "which will make frankly the the installation of management of ack service controllers um much",
    "start": "2092720",
    "end": "2100320"
  },
  {
    "text": "easier how are cross resource references implemented",
    "start": "2100839",
    "end": "2107279"
  },
  {
    "text": "thomas so uh i think it depends on the resource if",
    "start": "2107760",
    "end": "2116800"
  },
  {
    "text": "if it is within a specif okay so if it's within a",
    "start": "2116800",
    "end": "2122720"
  },
  {
    "text": "particular api for instance within rds",
    "start": "2122720",
    "end": "2128400"
  },
  {
    "text": "the if you look at the api call that references another resource",
    "start": "2128400",
    "end": "2135119"
  },
  {
    "text": "object within that api we may be replacing um the custom resource",
    "start": "2135119",
    "end": "2142240"
  },
  {
    "text": "definition field from let's say an arn to instead be an object reference",
    "start": "2142240",
    "end": "2149680"
  },
  {
    "text": "that refers to a different custom resource within the rds",
    "start": "2149680",
    "end": "2155760"
  },
  {
    "text": "set of custom resource definitions now if the if the cross",
    "start": "2155920",
    "end": "2162480"
  },
  {
    "text": "if the cross resource reference is across apis for instance",
    "start": "2162480",
    "end": "2168720"
  },
  {
    "text": "if it's api gateway to ec2 vpc or elastic",
    "start": "2168720",
    "end": "2175520"
  },
  {
    "text": "to ec2 security groups things like that we will likely continue to refer to",
    "start": "2175520",
    "end": "2182800"
  },
  {
    "text": "those things via arn and not have an object reference type uh i so much i hope that",
    "start": "2182800",
    "end": "2190560"
  },
  {
    "text": "uh answers your question please um please let me know if it didn't i think that's what you were asking but",
    "start": "2190560",
    "end": "2198640"
  },
  {
    "text": "okay uh so ryan's asking what kinds of tags does ack apply to create a aws resource is there a way to guard",
    "start": "2198720",
    "end": "2205839"
  },
  {
    "text": "against accidental cube cuddle delete even if it is just uh i really don't don't want to delete this",
    "start": "2205839",
    "end": "2212320"
  },
  {
    "text": "flag very nice um we haven't decided this yet there is an",
    "start": "2212320",
    "end": "2217760"
  },
  {
    "text": "issue if you go to the to the website the github site um that's on your screen now and go to",
    "start": "2217760",
    "end": "2225760"
  },
  {
    "text": "the issues list there is there are two issues you should search for something called",
    "start": "2225760",
    "end": "2231680"
  },
  {
    "text": "um uh just uh gosh i'm trying to remember um",
    "start": "2231680",
    "end": "2237440"
  },
  {
    "text": "destructive operations um or what i think it's either delete operations or destructive operations or",
    "start": "2237440",
    "end": "2244320"
  },
  {
    "text": "destructive behavior there is an issue that talks about um basically how how do we prevent deletion",
    "start": "2244320",
    "end": "2251920"
  },
  {
    "text": "of important resources i i think what'll end up happening is that we will have some annotations on",
    "start": "2251920",
    "end": "2259200"
  },
  {
    "text": "kubernetes namespace that will allow the ack service controller to be configured",
    "start": "2259200",
    "end": "2264400"
  },
  {
    "text": "in a certain way for crs in that particular kubernetes namespace to essentially",
    "start": "2264400",
    "end": "2270079"
  },
  {
    "text": "allow some sort of like deletion propagation or deletion policy or protection that kind of thing um it's",
    "start": "2270079",
    "end": "2277119"
  },
  {
    "text": "likely going to be fairly dependent on the aws api behind it and it's likely going to be",
    "start": "2277119",
    "end": "2284640"
  },
  {
    "text": "up to a cluster admin to to to configure a specific crd",
    "start": "2284640",
    "end": "2291280"
  },
  {
    "text": "or a specific custom resource type or kind um to behave in certain ways because",
    "start": "2291280",
    "end": "2297200"
  },
  {
    "text": "we've we've frankly run the gamut as far as feedback that we've gotten from people",
    "start": "2297200",
    "end": "2302480"
  },
  {
    "text": "some folks want ack just to just to take over management of the resource and just do the do the necessary and others are a lot",
    "start": "2302480",
    "end": "2309520"
  },
  {
    "text": "more skeptical about it and would like to have like deletion protection on",
    "start": "2309520",
    "end": "2315280"
  },
  {
    "text": "on objects and the other issue that um",
    "start": "2315280",
    "end": "2321520"
  },
  {
    "text": "that is related to tags there are two there's an issue that is around the",
    "start": "2321520",
    "end": "2327760"
  },
  {
    "text": "standardization of aws tags and the representation of those tags for custom resources that ack manages",
    "start": "2327760",
    "end": "2334720"
  },
  {
    "text": "and there is also an issue about what aws tags should be auto created on any custom resource that",
    "start": "2334720",
    "end": "2343200"
  },
  {
    "text": "that ack service controller is managing so there's there's two resources there",
    "start": "2343200",
    "end": "2348320"
  },
  {
    "text": "ryan i definitely encourage you to check out um sorry there's two issues there ryan i",
    "start": "2348320",
    "end": "2354000"
  },
  {
    "text": "definitely uh encourage you to comment and uh you know plus one or whatever",
    "start": "2354000",
    "end": "2360079"
  },
  {
    "text": "the um uh each of those issues so all right let's see najib is asking",
    "start": "2360079",
    "end": "2366560"
  },
  {
    "text": "will i still be charged for invoking apis through ack like one paying for invoking native aws yes absolutely so um look",
    "start": "2366560",
    "end": "2374960"
  },
  {
    "text": "uh ack doesn't remove the the charges for resources that it creates um the",
    "start": "2374960",
    "end": "2380960"
  },
  {
    "text": "charges are exactly the same so uh regardless of whether ack is the thing that ends up calling create db instance",
    "start": "2380960",
    "end": "2388800"
  },
  {
    "text": "for the rds api uh the the charges that you will accumulate",
    "start": "2388800",
    "end": "2393839"
  },
  {
    "text": "are exactly the same right so very similar to uh to cloud formation right",
    "start": "2393839",
    "end": "2400560"
  },
  {
    "text": "so there was announcements for something so anonymous is asking there was an announcement for something similar in",
    "start": "2400800",
    "end": "2407040"
  },
  {
    "text": "2018 was it admission controllers um not entirely sure about that",
    "start": "2407040",
    "end": "2414560"
  },
  {
    "text": "sorry anonymous you may be thinking about the aws service operator",
    "start": "2414560",
    "end": "2419599"
  },
  {
    "text": "which is the sort of one of the things that originated the idea for aws controllers",
    "start": "2419599",
    "end": "2425839"
  },
  {
    "text": "for kubernetes yeah uh you got it it's uh the service",
    "start": "2425839",
    "end": "2430960"
  },
  {
    "text": "operator for kubernetes right this is sort of the next generation of that the reincarnation of that",
    "start": "2430960",
    "end": "2438720"
  },
  {
    "text": "um if anyone would like to ask any more questions please go right ahead and do so we only have about 15 minutes left oh well",
    "start": "2438720",
    "end": "2446800"
  },
  {
    "text": "ack provide deeper visibility into the aws services",
    "start": "2446800",
    "end": "2452720"
  },
  {
    "text": "uh i don't know whether i don't think it will provide deeper",
    "start": "2452720",
    "end": "2457920"
  },
  {
    "text": "visibility i think that it will provide a different type of visibility najib so for",
    "start": "2457920",
    "end": "2466640"
  },
  {
    "text": "those users those aws customers or aws users that",
    "start": "2466640",
    "end": "2474720"
  },
  {
    "text": "prefer the kubernetes environment prefer the kubernetes api and tooling and",
    "start": "2474720",
    "end": "2481920"
  },
  {
    "text": "um you know the cube cuddle experience the way that they will have visibility",
    "start": "2481920",
    "end": "2486960"
  },
  {
    "text": "into aws resources will be different right they'll be able to make a call to coop cuddle",
    "start": "2486960",
    "end": "2493520"
  },
  {
    "text": "get db instances and see a list of their their rds database instances as opposed",
    "start": "2493520",
    "end": "2499599"
  },
  {
    "text": "to calling the aws cli tool or logging into the aws web console",
    "start": "2499599",
    "end": "2506480"
  },
  {
    "text": "if you're if you're referring to um you know the things like cloudtrail",
    "start": "2506480",
    "end": "2512640"
  },
  {
    "text": "or cloudwatch logs or that kind of thing there there's nothing about ack that's going to change the setup",
    "start": "2512640",
    "end": "2520319"
  },
  {
    "text": "and the uh auditability or traceability of of a particular aws",
    "start": "2520319",
    "end": "2527280"
  },
  {
    "text": "service what i would like to do and one of the one of",
    "start": "2527280",
    "end": "2533119"
  },
  {
    "text": "the things i was actually talking to a new contributor about this morning we need to get our prometheus metrics",
    "start": "2533119",
    "end": "2539359"
  },
  {
    "text": "story uh started and um one of one of the things that we would",
    "start": "2539359",
    "end": "2546800"
  },
  {
    "text": "like to do is have prometheus metrics that are dimensioned based on the aws",
    "start": "2546800",
    "end": "2552560"
  },
  {
    "text": "api call that ack service controllers are making so that you can see specifically how many and of what kind",
    "start": "2552560",
    "end": "2561359"
  },
  {
    "text": "the uh the aws client is is calling a specific aws api so you'll",
    "start": "2561359",
    "end": "2567440"
  },
  {
    "text": "be able to say you know like okay how many times is you know i don't know code deploy get deployments being called per",
    "start": "2567440",
    "end": "2573839"
  },
  {
    "text": "hour or something right we want to provide those types of metrics via a standardized set of prometheus",
    "start": "2573839",
    "end": "2580640"
  },
  {
    "text": "metrics that are dimensioned by uh what is called the operation identifier within the aws api",
    "start": "2580640",
    "end": "2589680"
  },
  {
    "text": "okay so is there any way of enabling cross account resource management uh yes there will be uh oh hi harish",
    "start": "2590720",
    "end": "2598640"
  },
  {
    "text": "uh so uh yes there will be um we're we're probably a couple weeks",
    "start": "2598640",
    "end": "2604880"
  },
  {
    "text": "out from the cross account resource management being fully enabled i merge the the code the the largest part",
    "start": "2604880",
    "end": "2611200"
  },
  {
    "text": "of the code which uh incorporates some caching mechanisms for namespaces",
    "start": "2611200",
    "end": "2616720"
  },
  {
    "text": "and um and config maps uh earlier last week we still need a little",
    "start": "2616720",
    "end": "2623119"
  },
  {
    "text": "bit of work there uh you will be able to quote enable the cross account resource management by",
    "start": "2623119",
    "end": "2629440"
  },
  {
    "text": "setting an annotation on a namespace",
    "start": "2629440",
    "end": "2634560"
  },
  {
    "text": "so look for that in the next uh two to three weeks",
    "start": "2634560",
    "end": "2639520"
  },
  {
    "text": "uh all right let's see uh najib i'm i'm sorry i i'm not entirely",
    "start": "2639680",
    "end": "2646960"
  },
  {
    "text": "uh following what you mean by native visibility of kubernetes perhaps you can elaborate a bit there",
    "start": "2646960",
    "end": "2653520"
  },
  {
    "text": "okay uh fahad is asking how do how to import existing resources in aws and securities manifest under ack",
    "start": "2653520",
    "end": "2660079"
  },
  {
    "text": "management for example if i don't want to delete my existing rds or s3 bucket",
    "start": "2660079",
    "end": "2665119"
  },
  {
    "text": "yeah so this was the adopt a resource functionality that i referred to",
    "start": "2665119",
    "end": "2671760"
  },
  {
    "text": "in a couple slides ago and the way that you will signal to ac",
    "start": "2671760",
    "end": "2678880"
  },
  {
    "text": "to the ack service controller that you want it to start managing the life cycle of a particular resource",
    "start": "2678880",
    "end": "2684319"
  },
  {
    "text": "is you will create the kubernetes manifest and within the annotations for",
    "start": "2684319",
    "end": "2689920"
  },
  {
    "text": "that custom resource you will have the owner account i'm sorry the um",
    "start": "2689920",
    "end": "2695520"
  },
  {
    "text": "uh arn the services.kates.aws forward slash",
    "start": "2695520",
    "end": "2700640"
  },
  {
    "text": "a-r-n and that will indicate that the ack service controller should expect",
    "start": "2700640",
    "end": "2706480"
  },
  {
    "text": "that that resource already exists and not try to to uh create it again",
    "start": "2706480",
    "end": "2712560"
  },
  {
    "text": "uh hi harrish howard harris is a member of the uks team so what do you think about leveraging",
    "start": "2712800",
    "end": "2718800"
  },
  {
    "text": "ack to do heavy lifting for aws cloud provider behind the scenes for managing and provisioning aws",
    "start": "2718800",
    "end": "2725359"
  },
  {
    "text": "resources instead of current uh implementation of aws cloud provider um i've actually thought about that",
    "start": "2725359",
    "end": "2730800"
  },
  {
    "text": "harris and i've had some conversations with some of the cluster api folks i've had",
    "start": "2730800",
    "end": "2737760"
  },
  {
    "text": "conversations with crossplane uh folks from from upbound about how do we",
    "start": "2737760",
    "end": "2744800"
  },
  {
    "text": "adapt the ack generate command line tool which is the primary code generator",
    "start": "2744800",
    "end": "2750560"
  },
  {
    "text": "inside of ack so that instead of spitting out you know kubernetes api types and a custom",
    "start": "2750560",
    "end": "2757359"
  },
  {
    "text": "controller implementation for ack service controllers that in it instead it spits out",
    "start": "2757359",
    "end": "2762720"
  },
  {
    "text": "basically all the the generated code for aws cloud provider or",
    "start": "2762720",
    "end": "2768800"
  },
  {
    "text": "in the case of crossplane the uh cloud i think it's cloud provider aws",
    "start": "2768800",
    "end": "2775040"
  },
  {
    "text": "uh package right so um i'm i'm actually got some prototype code",
    "start": "2775040",
    "end": "2780800"
  },
  {
    "text": "going locally where i've been playing around with this idea of making the the ack generate",
    "start": "2780800",
    "end": "2786560"
  },
  {
    "text": "um cli tool a lot more extensible so that it can kind of spit out go code that fulfills sort of non-ack",
    "start": "2786560",
    "end": "2794880"
  },
  {
    "text": "core use cases so yeah i think in the future it definitely will be",
    "start": "2794880",
    "end": "2801200"
  },
  {
    "text": "possible to to at least have ack service controllers provide a sort of",
    "start": "2801200",
    "end": "2807200"
  },
  {
    "text": "lower level lower layer of functionality that then could be built upon",
    "start": "2807200",
    "end": "2812319"
  },
  {
    "text": "in things like uh cluster api and crossplane okay so uh how is ack different from",
    "start": "2812319",
    "end": "2820640"
  },
  {
    "text": "crossplane i'll just uh knock this one out real quick uh so they're actually very complementary",
    "start": "2820640",
    "end": "2826240"
  },
  {
    "text": "technologies uh ack its entire mission is to provide a kubernetes native api",
    "start": "2826240",
    "end": "2834800"
  },
  {
    "text": "for managing aws resources that's it it's not trying to do anything more than that",
    "start": "2834800",
    "end": "2840720"
  },
  {
    "text": "crossplane has a much broader mission right crossplane has a mission to support",
    "start": "2840720",
    "end": "2846480"
  },
  {
    "text": "cross cloud meaning you know like to to gke and eks and aks and all different",
    "start": "2846480",
    "end": "2853040"
  },
  {
    "text": "cloud providers right and uh have some sort of standardization",
    "start": "2853040",
    "end": "2858160"
  },
  {
    "text": "for cluster creation kubernetes cluster creation as well as some of the managed service",
    "start": "2858160",
    "end": "2864319"
  },
  {
    "text": "creation for each of those different cloud providers so it's got a much broader mission",
    "start": "2864319",
    "end": "2869839"
  },
  {
    "text": "i think i well i hope that ack at least the code generator inside",
    "start": "2869839",
    "end": "2876319"
  },
  {
    "text": "of ack can in the future be um a library or or a sort of input",
    "start": "2876319",
    "end": "2884480"
  },
  {
    "text": "to the crossplane aws provider at least",
    "start": "2884480",
    "end": "2889760"
  },
  {
    "text": "and let's see will there be a performance penalty for using ack because of two hops now",
    "start": "2889760",
    "end": "2896079"
  },
  {
    "text": "one is ack and then native ada um no there there's there is no performance",
    "start": "2896079",
    "end": "2902400"
  },
  {
    "text": "penalty um there there actually isn't two hops uh so the the kubernetes user is communicating",
    "start": "2902400",
    "end": "2908720"
  },
  {
    "text": "with the kubernetes api right right and the ack service controller is communicating with the aws",
    "start": "2908720",
    "end": "2914400"
  },
  {
    "text": "api so it's not like the kubernetes user is",
    "start": "2914400",
    "end": "2919599"
  },
  {
    "text": "communicating with the aws api instead they're only talking to the kubernetes api and then",
    "start": "2919599",
    "end": "2924960"
  },
  {
    "text": "the service controller for ack is the thing that's communicating with the aws api",
    "start": "2924960",
    "end": "2931838"
  },
  {
    "text": "okay fine oh i think i already answered that",
    "start": "2934240",
    "end": "2939599"
  },
  {
    "text": "um uh so prometheus uh when i said",
    "start": "2940839",
    "end": "2946240"
  },
  {
    "text": "prometheus earlier i'm more referring to just the the format right of the the expected metrics",
    "start": "2946240",
    "end": "2954839"
  },
  {
    "text": "endpoint anyone has anything else to they would",
    "start": "2954839",
    "end": "2961119"
  },
  {
    "text": "like to ask we have about five minutes left i'd also like to point out something",
    "start": "2961119",
    "end": "2966720"
  },
  {
    "text": "that i didn't include here unfortunately but uh i'm i'm on the provider-aws",
    "start": "2966720",
    "end": "2973520"
  },
  {
    "text": "channel in the kubernetes slack community so please feel free to hit me up",
    "start": "2973520",
    "end": "2979760"
  },
  {
    "text": "with any questions that you might think of after this webinar i'm on there and happy to answer",
    "start": "2979760",
    "end": "2985599"
  },
  {
    "text": "questions",
    "start": "2985599",
    "end": "2987920"
  },
  {
    "text": "how is ha handled for ack controllers if the controller crashes in the middle of the rds s3 creation api call",
    "start": "2995760",
    "end": "3004000"
  },
  {
    "text": "good question so the way that we've built the service controllers should not",
    "start": "3004000",
    "end": "3011119"
  },
  {
    "text": "depend on um the leader election within kubernetes uh",
    "start": "3011119",
    "end": "3019119"
  },
  {
    "text": "i still need to um i still need to work on some",
    "start": "3019119",
    "end": "3025680"
  },
  {
    "text": "test cases to ensure that multiple ack service controllers multiple pods",
    "start": "3025680",
    "end": "3032880"
  },
  {
    "text": "running the same ack service controller can have concurrently executing",
    "start": "3032880",
    "end": "3040480"
  },
  {
    "text": "uh reconciliation loops and not trample on each other but there is there's nothing that we're",
    "start": "3040480",
    "end": "3046880"
  },
  {
    "text": "doing inside the ack service controller for instance setting a latest uh observed",
    "start": "3046880",
    "end": "3054960"
  },
  {
    "text": "version or latest observed um uh sort of state we're not setting that",
    "start": "3054960",
    "end": "3063200"
  },
  {
    "text": "um in a from the ack service controllers so",
    "start": "3063200",
    "end": "3068400"
  },
  {
    "text": "we're and the reason we're not doing that is because by having that latest observed version",
    "start": "3068400",
    "end": "3075200"
  },
  {
    "text": "field within the status of a custom resource you essentially force the architecture of the of the",
    "start": "3075200",
    "end": "3081520"
  },
  {
    "text": "controller to be uh a single writer and um we did not want that right we want to be",
    "start": "3081520",
    "end": "3088319"
  },
  {
    "text": "able to have multiple concurrent uh service controllers for the same service",
    "start": "3088319",
    "end": "3094400"
  },
  {
    "text": "be able to execute uh in in multiple pods and not have them trample over each other and one of the",
    "start": "3094400",
    "end": "3100400"
  },
  {
    "text": "ways to do that is to ensure that you're not writing bits of information into the status",
    "start": "3100400",
    "end": "3107520"
  },
  {
    "text": "struct the status field of a custom resource that represents the view of only a single writer and",
    "start": "3107520",
    "end": "3114480"
  },
  {
    "text": "that's what latest observed version actually is it's not the latest observed version for the resource",
    "start": "3114480",
    "end": "3119920"
  },
  {
    "text": "it's the latest observed version for that particular controller that is observing the resource and uh",
    "start": "3119920",
    "end": "3126720"
  },
  {
    "text": "by by getting rid of that we hope to to have a more concurrent approach",
    "start": "3126720",
    "end": "3132640"
  },
  {
    "text": "hope that answers your question uh will ack provide kubernetes secret integration yes absolutely it will um there's a",
    "start": "3132640",
    "end": "3140400"
  },
  {
    "text": "slide i'll kind of go up here oops whoops",
    "start": "3140400",
    "end": "3146079"
  },
  {
    "text": "i stopped screen sharing by accident uh yeah there is a set of slides that that",
    "start": "3146079",
    "end": "3152000"
  },
  {
    "text": "explain that they uh the there are some fields within",
    "start": "3152000",
    "end": "3157440"
  },
  {
    "text": "uh aws back-end api calls for instance create db instance where you're passing in a plain text",
    "start": "3157440",
    "end": "3164800"
  },
  {
    "text": "uh string we will be replacing those types of fields with secret",
    "start": "3164800",
    "end": "3170000"
  },
  {
    "text": "reference fields or fields with a secret reference data type",
    "start": "3170000",
    "end": "3175040"
  },
  {
    "text": "and that means that you'll be able to set up a kubernetes secret ahead of time",
    "start": "3175040",
    "end": "3180559"
  },
  {
    "text": "and then reference that reference a key within that secret from your custom resource",
    "start": "3180559",
    "end": "3195839"
  },
  {
    "text": "any planned integration with parameter store and secret manager uh for alternative to secrets managing",
    "start": "3204880",
    "end": "3210079"
  },
  {
    "text": "kubernetes um not within ack but that um",
    "start": "3210079",
    "end": "3216720"
  },
  {
    "text": "that actually i had a meeting with the aws config team recently about",
    "start": "3216720",
    "end": "3223200"
  },
  {
    "text": "a similar topic um find me on the provider aws channel on",
    "start": "3223200",
    "end": "3229440"
  },
  {
    "text": "slack and uh um we can chat about it there",
    "start": "3229440",
    "end": "3236559"
  },
  {
    "text": "anyone else have any last-minute questions at all we have about another minute or so before we wrap it up uh",
    "start": "3236559",
    "end": "3250240"
  },
  {
    "text": "fahad was asking earlier uh in the chat is there support for lambda in ack uh is there",
    "start": "3250240",
    "end": "3256000"
  },
  {
    "text": "any plans for serverless services support um not currently i'm aiming for mid to end",
    "start": "3256000",
    "end": "3262640"
  },
  {
    "text": "november for both lambda and step functions luckily both those apis are actually",
    "start": "3262640",
    "end": "3270079"
  },
  {
    "text": "fairly reasonable and sensible and uh and concrete with very few exceptions to",
    "start": "3270079",
    "end": "3277440"
  },
  {
    "text": "them um and very few inconsistencies so um",
    "start": "3277440",
    "end": "3282799"
  },
  {
    "text": "yeah we're aiming for mid mid to late november for both step functions and",
    "start": "3282799",
    "end": "3288240"
  },
  {
    "text": "lambda and once again uh thank you very much jerry and",
    "start": "3290839",
    "end": "3296160"
  },
  {
    "text": "for to the cncf for inviting me out here it's it's a pleasure it's our pleasure thank",
    "start": "3296160",
    "end": "3302319"
  },
  {
    "text": "you so much for joining us today that um should just about wrap up our",
    "start": "3302319",
    "end": "3307599"
  },
  {
    "text": "webinar for today as i said before today's recording and slides will be posted on the cncf webinar page",
    "start": "3307599",
    "end": "3314160"
  },
  {
    "text": "we'd like to thank everybody once again for joining us today and to you as well jay everyone take care stay safe and we will",
    "start": "3314160",
    "end": "3320799"
  },
  {
    "text": "see you next time",
    "start": "3320799",
    "end": "3327520"
  }
]