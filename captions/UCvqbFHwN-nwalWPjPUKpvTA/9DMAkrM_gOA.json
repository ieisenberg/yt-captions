[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "hello everyone my name is samhita i'm a",
    "start": "1040",
    "end": "3520"
  },
  {
    "text": "software engineer and technical",
    "start": "3520",
    "end": "5200"
  },
  {
    "text": "evangelist at union ai where we are",
    "start": "5200",
    "end": "7759"
  },
  {
    "text": "trying to make the orchestration of",
    "start": "7759",
    "end": "9519"
  },
  {
    "text": "machine learning easy to use i am here",
    "start": "9519",
    "end": "12080"
  },
  {
    "text": "today to talk about ml ops with flight",
    "start": "12080",
    "end": "14799"
  },
  {
    "text": "remove the barriers to successfully",
    "start": "14799",
    "end": "16640"
  },
  {
    "text": "implement machine learning for",
    "start": "16640",
    "end": "18000"
  },
  {
    "text": "production workloads",
    "start": "18000",
    "end": "20880"
  },
  {
    "text": "the crux of the stock is to know how",
    "start": "20880",
    "end": "23039"
  },
  {
    "text": "machine learning can be productionized",
    "start": "23039",
    "end": "25039"
  },
  {
    "text": "using a kubernetes native platform which",
    "start": "25039",
    "end": "27599"
  },
  {
    "text": "in our case is flight",
    "start": "27599",
    "end": "30960"
  },
  {
    "text": "let's get started by understanding how",
    "start": "30960",
    "end": "33440"
  },
  {
    "text": "ml ops differs from devops",
    "start": "33440",
    "end": "37520"
  },
  {
    "start": "37000",
    "end": "37000"
  },
  {
    "text": "to automate and smoothen the process of",
    "start": "37520",
    "end": "39600"
  },
  {
    "text": "software engineering we inculcate and",
    "start": "39600",
    "end": "42079"
  },
  {
    "text": "abide by a set of practices which we",
    "start": "42079",
    "end": "44000"
  },
  {
    "text": "call as devops devops or development",
    "start": "44000",
    "end": "47039"
  },
  {
    "text": "operations refers to bringing together",
    "start": "47039",
    "end": "49360"
  },
  {
    "text": "the development testing and operational",
    "start": "49360",
    "end": "51360"
  },
  {
    "text": "aspects of software development the best",
    "start": "51360",
    "end": "54000"
  },
  {
    "text": "practices include continuous integration",
    "start": "54000",
    "end": "56719"
  },
  {
    "text": "and delivery infrastructure as code",
    "start": "56719",
    "end": "59280"
  },
  {
    "text": "monitoring and logging communication and",
    "start": "59280",
    "end": "61760"
  },
  {
    "text": "collaboration and microservices",
    "start": "61760",
    "end": "65920"
  },
  {
    "text": "dev needs devops likewise ml needs ml",
    "start": "66080",
    "end": "69520"
  },
  {
    "text": "ops",
    "start": "69520",
    "end": "71119"
  },
  {
    "text": "however ml ops is a superset of devops",
    "start": "71119",
    "end": "74799"
  },
  {
    "text": "this is because models could deteriorate",
    "start": "74799",
    "end": "77360"
  },
  {
    "text": "over time why is that so models and data",
    "start": "77360",
    "end": "80880"
  },
  {
    "text": "are mutable they require constant",
    "start": "80880",
    "end": "83479"
  },
  {
    "text": "experimentation and iteration data could",
    "start": "83479",
    "end": "86640"
  },
  {
    "text": "be very complex it can be huge and it",
    "start": "86640",
    "end": "90000"
  },
  {
    "text": "may need to be pulled from multiple data",
    "start": "90000",
    "end": "92240"
  },
  {
    "text": "sources",
    "start": "92240",
    "end": "93360"
  },
  {
    "text": "infrastructure overhead we may have to",
    "start": "93360",
    "end": "95600"
  },
  {
    "text": "take care we'll have to take care of the",
    "start": "95600",
    "end": "97360"
  },
  {
    "text": "latency",
    "start": "97360",
    "end": "98880"
  },
  {
    "text": "higher processing power compute",
    "start": "98880",
    "end": "100640"
  },
  {
    "text": "requirements",
    "start": "100640",
    "end": "102000"
  },
  {
    "text": "and next comes hardware requirements",
    "start": "102000",
    "end": "104399"
  },
  {
    "text": "more often than not ml code needs gpus",
    "start": "104399",
    "end": "107439"
  },
  {
    "text": "so we'll have to set up gpus take care",
    "start": "107439",
    "end": "109600"
  },
  {
    "text": "of the memory requirements etc and",
    "start": "109600",
    "end": "112399"
  },
  {
    "text": "lastly we'll also have to",
    "start": "112399",
    "end": "115200"
  },
  {
    "text": "take care of the scale of operations",
    "start": "115200",
    "end": "117759"
  },
  {
    "text": "meaning the scalability of machine",
    "start": "117759",
    "end": "119759"
  },
  {
    "text": "learning models we'll have to ensure",
    "start": "119759",
    "end": "121520"
  },
  {
    "text": "that",
    "start": "121520",
    "end": "123758"
  },
  {
    "text": "in addition to the previously mentioned",
    "start": "124240",
    "end": "126719"
  },
  {
    "text": "challenges we'll also have to think",
    "start": "126719",
    "end": "128800"
  },
  {
    "text": "about arm which stands for auditability",
    "start": "128800",
    "end": "131680"
  },
  {
    "text": "reproducibility recoverability and",
    "start": "131680",
    "end": "134080"
  },
  {
    "text": "maintainability",
    "start": "134080",
    "end": "136879"
  },
  {
    "text": "auditability is the ability to backtrack",
    "start": "136879",
    "end": "138959"
  },
  {
    "text": "to the error source when a pipeline",
    "start": "138959",
    "end": "140720"
  },
  {
    "text": "execution fails it also includes data",
    "start": "140720",
    "end": "143680"
  },
  {
    "text": "lineage which means",
    "start": "143680",
    "end": "146160"
  },
  {
    "text": "to understand data that's being used and",
    "start": "146160",
    "end": "148800"
  },
  {
    "text": "transformed over time",
    "start": "148800",
    "end": "150640"
  },
  {
    "text": "reproducibility is the determinism of a",
    "start": "150640",
    "end": "153120"
  },
  {
    "text": "run are we able to reproduce the run",
    "start": "153120",
    "end": "155599"
  },
  {
    "text": "given the same set of inputs",
    "start": "155599",
    "end": "157920"
  },
  {
    "text": "recoverability is the ability to recover",
    "start": "157920",
    "end": "160319"
  },
  {
    "text": "when there is a pipeline failure and",
    "start": "160319",
    "end": "162480"
  },
  {
    "text": "maintainability is the iterative",
    "start": "162480",
    "end": "165040"
  },
  {
    "text": "development of machine learning",
    "start": "165040",
    "end": "166400"
  },
  {
    "text": "pipelines and enabling team",
    "start": "166400",
    "end": "168480"
  },
  {
    "text": "collaboration",
    "start": "168480",
    "end": "171480"
  },
  {
    "start": "170000",
    "end": "170000"
  },
  {
    "text": "ml ops comes with technical debt if you",
    "start": "171680",
    "end": "174560"
  },
  {
    "text": "look at this diagram ml code is only a",
    "start": "174560",
    "end": "177280"
  },
  {
    "text": "tiny fraction of the real-world ml",
    "start": "177280",
    "end": "179519"
  },
  {
    "text": "systems we'll have to take care of a lot",
    "start": "179519",
    "end": "181599"
  },
  {
    "text": "of components in ml ops say for example",
    "start": "181599",
    "end": "185120"
  },
  {
    "text": "we'll have to take care of resources",
    "start": "185120",
    "end": "187200"
  },
  {
    "text": "we'll have to take care of serving we'll",
    "start": "187200",
    "end": "189200"
  },
  {
    "text": "have to take care of monitoring etc",
    "start": "189200",
    "end": "192959"
  },
  {
    "text": "and hence we need a cohesive platform",
    "start": "192959",
    "end": "195599"
  },
  {
    "text": "that brings together different",
    "start": "195599",
    "end": "197040"
  },
  {
    "text": "components teams and models onto a",
    "start": "197040",
    "end": "199280"
  },
  {
    "text": "single platform components meaning the",
    "start": "199280",
    "end": "201599"
  },
  {
    "text": "components that i've talked about",
    "start": "201599",
    "end": "203040"
  },
  {
    "text": "earlier say surveying monitoring",
    "start": "203040",
    "end": "206080"
  },
  {
    "text": "teams because uh in mo we can have",
    "start": "206080",
    "end": "208879"
  },
  {
    "text": "multiple teams pertaining to multiple",
    "start": "208879",
    "end": "210959"
  },
  {
    "text": "domains and the teams may want to work",
    "start": "210959",
    "end": "213360"
  },
  {
    "text": "together they may want to collaborate",
    "start": "213360",
    "end": "215040"
  },
  {
    "text": "and hence the platform has to support",
    "start": "215040",
    "end": "216959"
  },
  {
    "text": "team collaboration multi-tenancy",
    "start": "216959",
    "end": "219760"
  },
  {
    "text": "to be specific and then",
    "start": "219760",
    "end": "222319"
  },
  {
    "text": "models uh we usually in machine learning",
    "start": "222319",
    "end": "224959"
  },
  {
    "text": "we usually do not work on a single model",
    "start": "224959",
    "end": "227200"
  },
  {
    "text": "we need multiple models we work on",
    "start": "227200",
    "end": "228959"
  },
  {
    "text": "multiple models so yeah that's how that",
    "start": "228959",
    "end": "231440"
  },
  {
    "text": "has to be supported too",
    "start": "231440",
    "end": "233360"
  },
  {
    "text": "moreover we also need an amalops",
    "start": "233360",
    "end": "235439"
  },
  {
    "text": "platform that is scalable extensible and",
    "start": "235439",
    "end": "237680"
  },
  {
    "text": "reliable",
    "start": "237680",
    "end": "239280"
  },
  {
    "text": "meet flight",
    "start": "239280",
    "end": "240799"
  },
  {
    "text": "flight is a kubernetes native workflow",
    "start": "240799",
    "end": "242959"
  },
  {
    "text": "automation platform for business",
    "start": "242959",
    "end": "244879"
  },
  {
    "text": "critical machine learning and data",
    "start": "244879",
    "end": "246720"
  },
  {
    "text": "processes at scale so flights built on",
    "start": "246720",
    "end": "249280"
  },
  {
    "text": "top of kubernetes and it's a workflow",
    "start": "249280",
    "end": "251680"
  },
  {
    "text": "automation platform that's that can be",
    "start": "251680",
    "end": "253920"
  },
  {
    "text": "used for mission critical machine",
    "start": "253920",
    "end": "256239"
  },
  {
    "text": "learning and data processes",
    "start": "256239",
    "end": "258880"
  },
  {
    "text": "the goal of flight is to provide a",
    "start": "258880",
    "end": "260639"
  },
  {
    "text": "reproducible incremental iterative and",
    "start": "260639",
    "end": "263199"
  },
  {
    "text": "extensible workflow automation platform",
    "start": "263199",
    "end": "265919"
  },
  {
    "text": "as a service for any organization its",
    "start": "265919",
    "end": "268560"
  },
  {
    "text": "focus is on user experience reliability",
    "start": "268560",
    "end": "271040"
  },
  {
    "text": "and correctness if you look at this",
    "start": "271040",
    "end": "272880"
  },
  {
    "text": "diagram we are separating machine",
    "start": "272880",
    "end": "275120"
  },
  {
    "text": "learning we are segregating machine",
    "start": "275120",
    "end": "276880"
  },
  {
    "text": "learning and operations so on the ml",
    "start": "276880",
    "end": "279040"
  },
  {
    "text": "side we have user teams and on the up",
    "start": "279040",
    "end": "280960"
  },
  {
    "text": "side we have flight and platform team",
    "start": "280960",
    "end": "283440"
  },
  {
    "text": "user teams usually consist of data",
    "start": "283440",
    "end": "285919"
  },
  {
    "text": "scientists ml engineers and so on and",
    "start": "285919",
    "end": "288639"
  },
  {
    "text": "they interact with the machine learning",
    "start": "288639",
    "end": "290240"
  },
  {
    "text": "frameworks and on the platform side on",
    "start": "290240",
    "end": "292639"
  },
  {
    "text": "the op side we have platform engineers",
    "start": "292639",
    "end": "295280"
  },
  {
    "text": "devops engineers who deal with cloud",
    "start": "295280",
    "end": "298320"
  },
  {
    "text": "cluster management resource management",
    "start": "298320",
    "end": "300320"
  },
  {
    "text": "so flight provides the capability to",
    "start": "300320",
    "end": "304000"
  },
  {
    "text": "separate uh",
    "start": "304000",
    "end": "305919"
  },
  {
    "text": "ml and ops to separate their concerns to",
    "start": "305919",
    "end": "308560"
  },
  {
    "text": "separate their responsibilities um and",
    "start": "308560",
    "end": "311360"
  },
  {
    "text": "yeah that's that's a very important",
    "start": "311360",
    "end": "313440"
  },
  {
    "text": "requirement of mo ops",
    "start": "313440",
    "end": "317360"
  },
  {
    "text": "the basic entities of flight are",
    "start": "317360",
    "end": "319120"
  },
  {
    "text": "workflow and task workflow is a sequence",
    "start": "319120",
    "end": "321759"
  },
  {
    "text": "of processes through which a work",
    "start": "321759",
    "end": "323840"
  },
  {
    "text": "through which a piece of work passes",
    "start": "323840",
    "end": "325280"
  },
  {
    "text": "from initiation to completion and task",
    "start": "325280",
    "end": "327759"
  },
  {
    "text": "is a fully independent unit of execution",
    "start": "327759",
    "end": "329919"
  },
  {
    "text": "and a first class entity of flight",
    "start": "329919",
    "end": "332880"
  },
  {
    "text": "so",
    "start": "332880",
    "end": "334240"
  },
  {
    "text": "simply speaking workflow is a collection",
    "start": "334240",
    "end": "336400"
  },
  {
    "text": "of tasks that are arranged in a specific",
    "start": "336400",
    "end": "338880"
  },
  {
    "text": "dependency graph so if you see this uh",
    "start": "338880",
    "end": "341840"
  },
  {
    "text": "if you see the diagram task two is",
    "start": "341840",
    "end": "344080"
  },
  {
    "text": "dependent on task one and task three is",
    "start": "344080",
    "end": "346320"
  },
  {
    "text": "dependent on task two which in turn is",
    "start": "346320",
    "end": "348720"
  },
  {
    "text": "dependent on task one so that's how we",
    "start": "348720",
    "end": "350960"
  },
  {
    "text": "model a workflow and a task",
    "start": "350960",
    "end": "354400"
  },
  {
    "text": "let's look at the challenges of ml",
    "start": "354400",
    "end": "356160"
  },
  {
    "text": "orchestration that flight solves",
    "start": "356160",
    "end": "359680"
  },
  {
    "start": "359000",
    "end": "359000"
  },
  {
    "text": "develop incrementally and constantly",
    "start": "359680",
    "end": "361680"
  },
  {
    "text": "iterate at scale so let's look at the",
    "start": "361680",
    "end": "363919"
  },
  {
    "text": "diagram the steps in the diagram to",
    "start": "363919",
    "end": "365840"
  },
  {
    "text": "understand what this means",
    "start": "365840",
    "end": "368000"
  },
  {
    "text": "the first step is to start with a job be",
    "start": "368000",
    "end": "370080"
  },
  {
    "text": "it a spark job a training job or a",
    "start": "370080",
    "end": "372000"
  },
  {
    "text": "future engineering job the second step",
    "start": "372000",
    "end": "374240"
  },
  {
    "text": "is to scale the job third step is to",
    "start": "374240",
    "end": "376639"
  },
  {
    "text": "create a pipeline and test it locally",
    "start": "376639",
    "end": "378880"
  },
  {
    "text": "fourth is to execute the pipeline on",
    "start": "378880",
    "end": "380720"
  },
  {
    "text": "demand fifth is to run the pipeline on a",
    "start": "380720",
    "end": "383280"
  },
  {
    "text": "schedule or in response to an event and",
    "start": "383280",
    "end": "386000"
  },
  {
    "text": "sixth is to retrieve the results or the",
    "start": "386000",
    "end": "387919"
  },
  {
    "text": "outputs so this is a generalized",
    "start": "387919",
    "end": "391280"
  },
  {
    "text": "pipeline architecture that flight",
    "start": "391280",
    "end": "393199"
  },
  {
    "text": "supports which in turn helps to develop",
    "start": "393199",
    "end": "395919"
  },
  {
    "text": "the code incrementally and also",
    "start": "395919",
    "end": "398319"
  },
  {
    "text": "constantly iterate at scale",
    "start": "398319",
    "end": "402240"
  },
  {
    "text": "and flight also supports having a",
    "start": "402319",
    "end": "404560"
  },
  {
    "text": "centrally managed infrastructure which",
    "start": "404560",
    "end": "407440"
  },
  {
    "text": "uh the platform teams can take care of",
    "start": "407440",
    "end": "410400"
  },
  {
    "text": "so there's a separation of concerns that",
    "start": "410400",
    "end": "412720"
  },
  {
    "text": "flight supports and hence uh we can uh",
    "start": "412720",
    "end": "416080"
  },
  {
    "text": "we can we can only have one centrally",
    "start": "416080",
    "end": "418319"
  },
  {
    "text": "managed infrastructure that the platform",
    "start": "418319",
    "end": "420720"
  },
  {
    "text": "teams can focus on and the user teams",
    "start": "420720",
    "end": "423680"
  },
  {
    "text": "can focus on the machine learning models",
    "start": "423680",
    "end": "426800"
  },
  {
    "text": "and",
    "start": "426800",
    "end": "427599"
  },
  {
    "text": "flight also supports access to resources",
    "start": "427599",
    "end": "430319"
  },
  {
    "text": "like gpu cpu and mem through code so",
    "start": "430319",
    "end": "433120"
  },
  {
    "text": "it's infrastructure as code",
    "start": "433120",
    "end": "435440"
  },
  {
    "text": "and it also supports automatic scaling",
    "start": "435440",
    "end": "437759"
  },
  {
    "text": "knobs to control cost multi-tenancy uh",
    "start": "437759",
    "end": "441280"
  },
  {
    "text": "architecture etc and as for efficiency",
    "start": "441280",
    "end": "444960"
  },
  {
    "text": "it supports spot machines and model",
    "start": "444960",
    "end": "446800"
  },
  {
    "text": "check pointing which we are gonna look",
    "start": "446800",
    "end": "448560"
  },
  {
    "text": "into later",
    "start": "448560",
    "end": "451599"
  },
  {
    "text": "next comes in ml experiments require",
    "start": "451599",
    "end": "454960"
  },
  {
    "text": "similar algorithms with different",
    "start": "454960",
    "end": "456560"
  },
  {
    "text": "parameters or inputs and hence there can",
    "start": "456560",
    "end": "458880"
  },
  {
    "text": "be altering behavior based on inputs so",
    "start": "458880",
    "end": "461360"
  },
  {
    "text": "if you look at this diagram",
    "start": "461360",
    "end": "463520"
  },
  {
    "text": "in the first uh the first one the first",
    "start": "463520",
    "end": "466000"
  },
  {
    "text": "diagram we have input as m1 and this is",
    "start": "466000",
    "end": "468800"
  },
  {
    "text": "the graph we have got this is the",
    "start": "468800",
    "end": "470080"
  },
  {
    "text": "dependency graph we have got and for",
    "start": "470080",
    "end": "472160"
  },
  {
    "text": "input m2 the dependency graph is the",
    "start": "472160",
    "end": "474560"
  },
  {
    "text": "same as the dependency graph we have got",
    "start": "474560",
    "end": "476960"
  },
  {
    "text": "for n1 and for input n the dependency",
    "start": "476960",
    "end": "480240"
  },
  {
    "text": "graph is totally different we have an",
    "start": "480240",
    "end": "482160"
  },
  {
    "text": "additional node and also dependency",
    "start": "482160",
    "end": "483919"
  },
  {
    "text": "structure is different so this is a very",
    "start": "483919",
    "end": "486720"
  },
  {
    "text": "common scenario and machine learning and",
    "start": "486720",
    "end": "488879"
  },
  {
    "text": "in flight this can be addressed using",
    "start": "488879",
    "end": "491039"
  },
  {
    "text": "the dynamic decorator",
    "start": "491039",
    "end": "494319"
  },
  {
    "start": "494000",
    "end": "494000"
  },
  {
    "text": "next comes memoize recover and reproduce",
    "start": "494319",
    "end": "497759"
  },
  {
    "text": "so let's look at the diagrams again",
    "start": "497759",
    "end": "500639"
  },
  {
    "text": "we have three nodes here right we have",
    "start": "500639",
    "end": "502720"
  },
  {
    "text": "three nodes the first two are successful",
    "start": "502720",
    "end": "504879"
  },
  {
    "text": "and the third one and the third one we",
    "start": "504879",
    "end": "506800"
  },
  {
    "text": "are basically storing the output of it",
    "start": "506800",
    "end": "509120"
  },
  {
    "text": "in cache so when",
    "start": "509120",
    "end": "511120"
  },
  {
    "text": "we run the code again when we run this",
    "start": "511120",
    "end": "513039"
  },
  {
    "text": "pipeline again using the same input what",
    "start": "513039",
    "end": "515919"
  },
  {
    "text": "happens is uh the the first two nodes",
    "start": "515919",
    "end": "518800"
  },
  {
    "text": "are successful all right and for the",
    "start": "518800",
    "end": "520880"
  },
  {
    "text": "third node flight",
    "start": "520880",
    "end": "522880"
  },
  {
    "text": "uh",
    "start": "522880",
    "end": "523680"
  },
  {
    "text": "fetches the data from cache instead of",
    "start": "523680",
    "end": "525920"
  },
  {
    "text": "executing it instead of re-executing it",
    "start": "525920",
    "end": "529200"
  },
  {
    "text": "that's the advantage with cache and next",
    "start": "529200",
    "end": "532160"
  },
  {
    "text": "comes the recover feature of flight",
    "start": "532160",
    "end": "533839"
  },
  {
    "text": "wherein we have a",
    "start": "533839",
    "end": "535920"
  },
  {
    "text": "pipeline again right the first two are",
    "start": "535920",
    "end": "538160"
  },
  {
    "text": "successful and the third one uh failed",
    "start": "538160",
    "end": "540480"
  },
  {
    "text": "the third node failed so what happens is",
    "start": "540480",
    "end": "542959"
  },
  {
    "text": "when we run this uh again when we run",
    "start": "542959",
    "end": "545360"
  },
  {
    "text": "the score again with the same input what",
    "start": "545360",
    "end": "547760"
  },
  {
    "text": "happens is it recovers",
    "start": "547760",
    "end": "550160"
  },
  {
    "text": "it's not just running but it's hitting",
    "start": "550160",
    "end": "551760"
  },
  {
    "text": "on the recover button that's available",
    "start": "551760",
    "end": "553200"
  },
  {
    "text": "on the flight ui that basically runs it",
    "start": "553200",
    "end": "555120"
  },
  {
    "text": "again so the successful executions are",
    "start": "555120",
    "end": "557600"
  },
  {
    "text": "copied and flight starts running from",
    "start": "557600",
    "end": "559839"
  },
  {
    "text": "the failed executions but it doesn't run",
    "start": "559839",
    "end": "562480"
  },
  {
    "text": "the successful execution so that's the",
    "start": "562480",
    "end": "564320"
  },
  {
    "text": "advantage of using the recover feature",
    "start": "564320",
    "end": "566640"
  },
  {
    "text": "in flight and there's also retries if",
    "start": "566640",
    "end": "569279"
  },
  {
    "text": "you see this uh you can set retries in",
    "start": "569279",
    "end": "571200"
  },
  {
    "text": "the task decorator so when you set",
    "start": "571200",
    "end": "573200"
  },
  {
    "text": "retries what happens is it tries to run",
    "start": "573200",
    "end": "575519"
  },
  {
    "text": "the pipeline again in the case it fails",
    "start": "575519",
    "end": "580079"
  },
  {
    "start": "580000",
    "end": "580000"
  },
  {
    "text": "next comes collaboration and",
    "start": "580640",
    "end": "582160"
  },
  {
    "text": "organizational scaling so if you look at",
    "start": "582160",
    "end": "584240"
  },
  {
    "text": "this diagram we have two teams right",
    "start": "584240",
    "end": "586560"
  },
  {
    "text": "team a and team b team a has two",
    "start": "586560",
    "end": "589120"
  },
  {
    "text": "pipelines which are using the which are",
    "start": "589120",
    "end": "591360"
  },
  {
    "text": "using a critical or complex algorithm",
    "start": "591360",
    "end": "593680"
  },
  {
    "text": "and team b has a pipeline which uses the",
    "start": "593680",
    "end": "596399"
  },
  {
    "text": "critical or complex algorithm that's",
    "start": "596399",
    "end": "598720"
  },
  {
    "text": "available or that's being used or that",
    "start": "598720",
    "end": "601600"
  },
  {
    "text": "has been built by team a and there's",
    "start": "601600",
    "end": "603680"
  },
  {
    "text": "also another pipeline wherein uh which",
    "start": "603680",
    "end": "606959"
  },
  {
    "text": "uses a pipeline that's built by team a",
    "start": "606959",
    "end": "609839"
  },
  {
    "text": "so uh how uh flight implicitly provides",
    "start": "609839",
    "end": "613600"
  },
  {
    "text": "support for uh reusability that's that's",
    "start": "613600",
    "end": "617040"
  },
  {
    "text": "implicitly provided by flight and for",
    "start": "617040",
    "end": "619279"
  },
  {
    "text": "the separation of concerns there's a",
    "start": "619279",
    "end": "621440"
  },
  {
    "text": "concept called project and domain in",
    "start": "621440",
    "end": "623200"
  },
  {
    "text": "flight what happens is uh project and",
    "start": "623200",
    "end": "625680"
  },
  {
    "text": "domain basically mean that uh say okay",
    "start": "625680",
    "end": "628640"
  },
  {
    "text": "let's understand that by an example uh",
    "start": "628640",
    "end": "630959"
  },
  {
    "text": "through an example so we have team a and",
    "start": "630959",
    "end": "633120"
  },
  {
    "text": "team b right so team a per attention",
    "start": "633120",
    "end": "635519"
  },
  {
    "text": "pertains to one project and team b",
    "start": "635519",
    "end": "637279"
  },
  {
    "text": "pertains to a different project now",
    "start": "637279",
    "end": "640640"
  },
  {
    "text": "both team a project and team pre project",
    "start": "640640",
    "end": "643360"
  },
  {
    "text": "have three domains each right one is",
    "start": "643360",
    "end": "646000"
  },
  {
    "text": "development there's uh staging and then",
    "start": "646000",
    "end": "648560"
  },
  {
    "text": "there's production so that's the project",
    "start": "648560",
    "end": "650399"
  },
  {
    "text": "and domain uh",
    "start": "650399",
    "end": "652399"
  },
  {
    "text": "concept so that's how we can separate",
    "start": "652399",
    "end": "655279"
  },
  {
    "text": "the concerns of team a and team b and",
    "start": "655279",
    "end": "658160"
  },
  {
    "text": "as mentioned previously reusability is",
    "start": "658160",
    "end": "660880"
  },
  {
    "text": "implicit you can just reuse the",
    "start": "660880",
    "end": "663200"
  },
  {
    "text": "workflows from different projects and",
    "start": "663200",
    "end": "665279"
  },
  {
    "text": "domains so that shouldn't be a problem",
    "start": "665279",
    "end": "668959"
  },
  {
    "start": "669000",
    "end": "669000"
  },
  {
    "text": "next comes extensibility of flight so",
    "start": "669839",
    "end": "672640"
  },
  {
    "text": "that's uh supported by flight uh",
    "start": "672640",
    "end": "676480"
  },
  {
    "text": "the extensibility is provided at three",
    "start": "676480",
    "end": "678640"
  },
  {
    "text": "levels at user level at platform level",
    "start": "678640",
    "end": "680720"
  },
  {
    "text": "and at organization level at user level",
    "start": "680720",
    "end": "683600"
  },
  {
    "text": "uh",
    "start": "683600",
    "end": "684480"
  },
  {
    "text": "you can you know use flight kit to add",
    "start": "684480",
    "end": "686320"
  },
  {
    "text": "your plugins and integrations at",
    "start": "686320",
    "end": "688480"
  },
  {
    "text": "platform level if at all you want to",
    "start": "688480",
    "end": "690240"
  },
  {
    "text": "extend your platform in terms of",
    "start": "690240",
    "end": "691920"
  },
  {
    "text": "distributed training support sparks",
    "start": "691920",
    "end": "693920"
  },
  {
    "text": "streaming that's possible through flight",
    "start": "693920",
    "end": "695600"
  },
  {
    "text": "pack and plug-in and you can also",
    "start": "695600",
    "end": "699519"
  },
  {
    "text": "extend organizations say you may want to",
    "start": "699600",
    "end": "702800"
  },
  {
    "text": "control costs or you may want to bring",
    "start": "702800",
    "end": "704560"
  },
  {
    "text": "capabilities in house that's possible",
    "start": "704560",
    "end": "706399"
  },
  {
    "text": "too",
    "start": "706399",
    "end": "708560"
  },
  {
    "text": "next let's look at the user level",
    "start": "708640",
    "end": "710160"
  },
  {
    "text": "concepts of flight",
    "start": "710160",
    "end": "712000"
  },
  {
    "start": "712000",
    "end": "712000"
  },
  {
    "text": "first comes tasks so task is the",
    "start": "712000",
    "end": "714079"
  },
  {
    "text": "building block of flight it's the",
    "start": "714079",
    "end": "715519"
  },
  {
    "text": "smallest unit of work in flight that",
    "start": "715519",
    "end": "717440"
  },
  {
    "text": "basically accepts inputs and gives our",
    "start": "717440",
    "end": "720880"
  },
  {
    "text": "gives outputs right and it has a strong",
    "start": "720880",
    "end": "723839"
  },
  {
    "text": "type interface all the inputs have to be",
    "start": "723839",
    "end": "726800"
  },
  {
    "text": "typed and it can also map to a backend",
    "start": "726800",
    "end": "729360"
  },
  {
    "text": "execution plugin it's decorative version",
    "start": "729360",
    "end": "732079"
  },
  {
    "text": "language and framework independent",
    "start": "732079",
    "end": "734639"
  },
  {
    "text": "next comes workflows so workflow is a",
    "start": "734639",
    "end": "737040"
  },
  {
    "start": "736000",
    "end": "736000"
  },
  {
    "text": "collection of tasks that are arranged in",
    "start": "737040",
    "end": "739200"
  },
  {
    "text": "a specific dependency graph so a",
    "start": "739200",
    "end": "741519"
  },
  {
    "text": "workflow is declarative it models data",
    "start": "741519",
    "end": "744240"
  },
  {
    "text": "flow through tasks it has a strongly",
    "start": "744240",
    "end": "746240"
  },
  {
    "text": "typed interface and yeah it's",
    "start": "746240",
    "end": "748320"
  },
  {
    "text": "declarative version and dynamically",
    "start": "748320",
    "end": "750320"
  },
  {
    "text": "recursive",
    "start": "750320",
    "end": "751920"
  },
  {
    "text": "this is an example of a flight code",
    "start": "751920",
    "end": "753839"
  },
  {
    "text": "snippet in python we have two tasks and",
    "start": "753839",
    "end": "756880"
  },
  {
    "text": "a workflow this workflow is basically uh",
    "start": "756880",
    "end": "760480"
  },
  {
    "text": "it basically encapsulates all the tasks",
    "start": "760480",
    "end": "762720"
  },
  {
    "text": "so here we are encapsulating total spend",
    "start": "762720",
    "end": "765519"
  },
  {
    "text": "and total spend is",
    "start": "765519",
    "end": "767519"
  },
  {
    "text": "in turn dependent on pay multiplier so",
    "start": "767519",
    "end": "769760"
  },
  {
    "text": "this is the dependency we are uh",
    "start": "769760",
    "end": "773040"
  },
  {
    "text": "basically trying to tell and that's what",
    "start": "773040",
    "end": "775200"
  },
  {
    "text": "flight captures",
    "start": "775200",
    "end": "776560"
  },
  {
    "text": "uh we are also setting cash to true and",
    "start": "776560",
    "end": "778560"
  },
  {
    "text": "cash version and the task for the pay",
    "start": "778560",
    "end": "780880"
  },
  {
    "text": "multi multiplier task and when we modify",
    "start": "780880",
    "end": "784000"
  },
  {
    "text": "the cash version what happens is flight",
    "start": "784000",
    "end": "786160"
  },
  {
    "text": "invalidates the previous cache and it",
    "start": "786160",
    "end": "789040"
  },
  {
    "text": "tries to run the task again so that's",
    "start": "789040",
    "end": "791360"
  },
  {
    "text": "the advantage of using cache version you",
    "start": "791360",
    "end": "793760"
  },
  {
    "text": "can also run all of this code locally",
    "start": "793760",
    "end": "796000"
  },
  {
    "text": "just like calling a python function by",
    "start": "796000",
    "end": "798000"
  },
  {
    "text": "sending the required arguments",
    "start": "798000",
    "end": "800800"
  },
  {
    "text": "if at all you want to scale your code",
    "start": "800800",
    "end": "802560"
  },
  {
    "text": "say you want to specify resources for",
    "start": "802560",
    "end": "804399"
  },
  {
    "text": "your tasks right how do you do that",
    "start": "804399",
    "end": "807279"
  },
  {
    "text": "so in the task you just specify your",
    "start": "807279",
    "end": "808959"
  },
  {
    "text": "resources say you want to specify cpus a",
    "start": "808959",
    "end": "811360"
  },
  {
    "text": "number of cpus memory gpus you can do",
    "start": "811360",
    "end": "814079"
  },
  {
    "text": "that and if at all you have spark code",
    "start": "814079",
    "end": "817279"
  },
  {
    "text": "uh you can specify the spark cluster",
    "start": "817279",
    "end": "819440"
  },
  {
    "text": "configuration by installing the flight",
    "start": "819440",
    "end": "821360"
  },
  {
    "text": "kit spark plug-in this is product",
    "start": "821360",
    "end": "823440"
  },
  {
    "text": "configuration and yeah that's that's",
    "start": "823440",
    "end": "825199"
  },
  {
    "text": "just uh that's the configuration for",
    "start": "825199",
    "end": "827199"
  },
  {
    "text": "this block spark cluster and you can",
    "start": "827199",
    "end": "829120"
  },
  {
    "text": "also specify retries so you are saying",
    "start": "829120",
    "end": "831120"
  },
  {
    "text": "retries as two what happens is if at all",
    "start": "831120",
    "end": "833839"
  },
  {
    "text": "the task fails it tries to run it again",
    "start": "833839",
    "end": "836959"
  },
  {
    "text": "right it if it's two so it tries to run",
    "start": "836959",
    "end": "839519"
  },
  {
    "text": "it twice if at all it fails again it",
    "start": "839519",
    "end": "841680"
  },
  {
    "text": "runs it again so it's twice and then",
    "start": "841680",
    "end": "844959"
  },
  {
    "text": "yeah you can also create a launch plan",
    "start": "844959",
    "end": "846959"
  },
  {
    "text": "uh launch plan is basically a plan that",
    "start": "846959",
    "end": "849760"
  },
  {
    "text": "flight uses to",
    "start": "849760",
    "end": "851839"
  },
  {
    "text": "launch or trigger a workflow so",
    "start": "851839",
    "end": "855040"
  },
  {
    "text": "calculate spend is the workflow we wanna",
    "start": "855040",
    "end": "858160"
  },
  {
    "text": "associate this particular launch plan",
    "start": "858160",
    "end": "860399"
  },
  {
    "text": "with we are also saying that this is the",
    "start": "860399",
    "end": "862959"
  },
  {
    "text": "schedule meaning run this every 10",
    "start": "862959",
    "end": "866000"
  },
  {
    "text": "minutes and we are also saying that uh",
    "start": "866000",
    "end": "869040"
  },
  {
    "text": "if at all the workflow fails send a",
    "start": "869040",
    "end": "871120"
  },
  {
    "text": "notification email notification to the",
    "start": "871120",
    "end": "874079"
  },
  {
    "text": "uh to a set of recipients so yeah",
    "start": "874079",
    "end": "878160"
  },
  {
    "start": "877000",
    "end": "877000"
  },
  {
    "text": "next let's look at workflow modalities",
    "start": "878160",
    "end": "880240"
  },
  {
    "text": "so dynamic is evaluated at runtime",
    "start": "880240",
    "end": "882720"
  },
  {
    "text": "whereas workflow is evaluated at compile",
    "start": "882720",
    "end": "885360"
  },
  {
    "text": "time here's an example of uh yeah",
    "start": "885360",
    "end": "888639"
  },
  {
    "text": "dynamic workflow we have a dynamic",
    "start": "888639",
    "end": "891040"
  },
  {
    "text": "workflow and we have a fur loop within",
    "start": "891040",
    "end": "893360"
  },
  {
    "text": "it where we are looping over multi-train",
    "start": "893360",
    "end": "895920"
  },
  {
    "text": "multi-valve multi-test which are the",
    "start": "895920",
    "end": "898880"
  },
  {
    "text": "parameters of this particular task which",
    "start": "898880",
    "end": "901519"
  },
  {
    "text": "of this particular function so uh",
    "start": "901519",
    "end": "904560"
  },
  {
    "text": "the number of times this loop is going",
    "start": "904560",
    "end": "906720"
  },
  {
    "text": "to run is dependent on the length of the",
    "start": "906720",
    "end": "909839"
  },
  {
    "text": "list that the user inputs so that's",
    "start": "909839",
    "end": "912160"
  },
  {
    "text": "that's the dynamism we uh that's the",
    "start": "912160",
    "end": "914720"
  },
  {
    "text": "dynamism we're uh i was talking about so",
    "start": "914720",
    "end": "917600"
  },
  {
    "text": "uh this dynamism uh is captured by",
    "start": "917600",
    "end": "920880"
  },
  {
    "text": "flight at runtime and that's when the",
    "start": "920880",
    "end": "923040"
  },
  {
    "text": "graph structure is built right",
    "start": "923040",
    "end": "926079"
  },
  {
    "text": "and also a point to notice uh within the",
    "start": "926079",
    "end": "928480"
  },
  {
    "text": "for loop we are calling two tasks one is",
    "start": "928480",
    "end": "930480"
  },
  {
    "text": "fit and one is predict so this",
    "start": "930480",
    "end": "932240"
  },
  {
    "text": "dependency is evaluated at runtime",
    "start": "932240",
    "end": "935839"
  },
  {
    "text": "awesome",
    "start": "935839",
    "end": "937600"
  },
  {
    "start": "936000",
    "end": "936000"
  },
  {
    "text": "so how do you",
    "start": "937600",
    "end": "939040"
  },
  {
    "text": "execute and",
    "start": "939040",
    "end": "940720"
  },
  {
    "text": "you know execute the flight workflows",
    "start": "940720",
    "end": "942880"
  },
  {
    "text": "and interact with the flight pattern",
    "start": "942880",
    "end": "945120"
  },
  {
    "text": "you can do that through flight ctl which",
    "start": "945120",
    "end": "946800"
  },
  {
    "text": "is the flights command line interface",
    "start": "946800",
    "end": "948480"
  },
  {
    "text": "you can",
    "start": "948480",
    "end": "949440"
  },
  {
    "text": "fetch and create executions you can",
    "start": "949440",
    "end": "951440"
  },
  {
    "text": "fetch all the results of your executions",
    "start": "951440",
    "end": "953519"
  },
  {
    "text": "you can visualize your workflow through",
    "start": "953519",
    "end": "955199"
  },
  {
    "text": "flightcle and you can do all kinds of",
    "start": "955199",
    "end": "957199"
  },
  {
    "text": "stuff that you want to do with the",
    "start": "957199",
    "end": "958720"
  },
  {
    "text": "flight back in",
    "start": "958720",
    "end": "961519"
  },
  {
    "text": "and you can also use a programmatic",
    "start": "963040",
    "end": "965920"
  },
  {
    "text": "python api to interact with the flight",
    "start": "965920",
    "end": "968079"
  },
  {
    "text": "backend and that's called flight remote",
    "start": "968079",
    "end": "970720"
  },
  {
    "text": "you can use flight remote to you know",
    "start": "970720",
    "end": "972720"
  },
  {
    "text": "trigger a workflow or fetch the results",
    "start": "972720",
    "end": "976160"
  },
  {
    "text": "and do",
    "start": "976160",
    "end": "977040"
  },
  {
    "text": "again do all kinds of stuff",
    "start": "977040",
    "end": "980240"
  },
  {
    "text": "let's look at a couple of pictures uh",
    "start": "980240",
    "end": "983199"
  },
  {
    "text": "to understand how the flight ui looks",
    "start": "983199",
    "end": "985519"
  },
  {
    "text": "like so here's a graph that cap that's",
    "start": "985519",
    "end": "988639"
  },
  {
    "text": "capturing all the dependencies between",
    "start": "988639",
    "end": "991519"
  },
  {
    "text": "multiple nodes",
    "start": "991519",
    "end": "993920"
  },
  {
    "text": "and this is a workflow page so whenever",
    "start": "993920",
    "end": "996560"
  },
  {
    "text": "you open a workflow and on the flight ui",
    "start": "996560",
    "end": "999759"
  },
  {
    "text": "this this is a typical uh",
    "start": "999759",
    "end": "1002800"
  },
  {
    "text": "uh",
    "start": "1002800",
    "end": "1004000"
  },
  {
    "text": "ui you know uh so we have multiple",
    "start": "1004000",
    "end": "1006639"
  },
  {
    "text": "workflow versions uh you can you should",
    "start": "1006639",
    "end": "1009279"
  },
  {
    "text": "be able to view all the workflow",
    "start": "1009279",
    "end": "1010880"
  },
  {
    "text": "versions you should be able to view all",
    "start": "1010880",
    "end": "1012399"
  },
  {
    "text": "the executions and you can also launch a",
    "start": "1012399",
    "end": "1014800"
  },
  {
    "text": "workflow just by a click just by click",
    "start": "1014800",
    "end": "1017600"
  },
  {
    "text": "of the button uh launch workflow button",
    "start": "1017600",
    "end": "1020240"
  },
  {
    "text": "so when you click on that a form opens",
    "start": "1020240",
    "end": "1022800"
  },
  {
    "text": "and you can give your inputs you can",
    "start": "1022800",
    "end": "1024880"
  },
  {
    "text": "also say give a service account that you",
    "start": "1024880",
    "end": "1027280"
  },
  {
    "text": "wanna associate your run with you can",
    "start": "1027280",
    "end": "1029760"
  },
  {
    "text": "also modify your workflow version the",
    "start": "1029760",
    "end": "1031918"
  },
  {
    "text": "version that you wanna use",
    "start": "1031919",
    "end": "1033678"
  },
  {
    "text": "and so on",
    "start": "1033679",
    "end": "1035438"
  },
  {
    "text": "and this is the uh error this is how the",
    "start": "1035439",
    "end": "1038959"
  },
  {
    "text": "error message looks like if at all",
    "start": "1038959",
    "end": "1041038"
  },
  {
    "text": "there's a failure so this helps with",
    "start": "1041039",
    "end": "1043678"
  },
  {
    "text": "debugging you can debug with ease and uh",
    "start": "1043679",
    "end": "1047918"
  },
  {
    "text": "flight also tells if it's a user error",
    "start": "1047919",
    "end": "1050240"
  },
  {
    "text": "or system error shows you the trace pack",
    "start": "1050240",
    "end": "1053200"
  },
  {
    "text": "and the error message",
    "start": "1053200",
    "end": "1056159"
  },
  {
    "start": "1057000",
    "end": "1057000"
  },
  {
    "text": "now what are the features uh that are",
    "start": "1057840",
    "end": "1060480"
  },
  {
    "text": "what are the features of flight for",
    "start": "1060480",
    "end": "1062160"
  },
  {
    "text": "platform folks so if at all there's a",
    "start": "1062160",
    "end": "1064240"
  },
  {
    "text": "platform failure you can recover",
    "start": "1064240",
    "end": "1066080"
  },
  {
    "text": "instantly using the recover button you",
    "start": "1066080",
    "end": "1068320"
  },
  {
    "text": "can manage your customers transparently",
    "start": "1068320",
    "end": "1070559"
  },
  {
    "text": "you can set platform by defaults project",
    "start": "1070559",
    "end": "1073360"
  },
  {
    "text": "domain resource limits so you can use",
    "start": "1073360",
    "end": "1075679"
  },
  {
    "text": "spot machines you can set compute limits",
    "start": "1075679",
    "end": "1078480"
  },
  {
    "text": "so all these are the features that are",
    "start": "1078480",
    "end": "1080160"
  },
  {
    "text": "available for platform folks",
    "start": "1080160",
    "end": "1084000"
  },
  {
    "text": "and now let's look at the kubernetes",
    "start": "1084080",
    "end": "1085760"
  },
  {
    "text": "side of flight",
    "start": "1085760",
    "end": "1088000"
  },
  {
    "start": "1088000",
    "end": "1088000"
  },
  {
    "text": "meaning the architecture so let's try to",
    "start": "1088000",
    "end": "1090960"
  },
  {
    "text": "understand all the components that are",
    "start": "1090960",
    "end": "1092480"
  },
  {
    "text": "here starting from the user so the user",
    "start": "1092480",
    "end": "1095120"
  },
  {
    "text": "authors workflows using the flight sdk",
    "start": "1095120",
    "end": "1098000"
  },
  {
    "text": "user compiles them and then registers",
    "start": "1098000",
    "end": "1100799"
  },
  {
    "text": "them using flight cli which is flight",
    "start": "1100799",
    "end": "1103520"
  },
  {
    "text": "ctl in our case registers flight ctl or",
    "start": "1103520",
    "end": "1107039"
  },
  {
    "text": "flight remote",
    "start": "1107039",
    "end": "1108400"
  },
  {
    "text": "and the registration happens after the",
    "start": "1108400",
    "end": "1110559"
  },
  {
    "text": "registration happens uh",
    "start": "1110559",
    "end": "1112799"
  },
  {
    "text": "basically what happens is the code gets",
    "start": "1112799",
    "end": "1115280"
  },
  {
    "text": "registered",
    "start": "1115280",
    "end": "1116720"
  },
  {
    "text": "and they are now available on the flight",
    "start": "1116720",
    "end": "1119200"
  },
  {
    "text": "admin so that's where we have all the",
    "start": "1119200",
    "end": "1121200"
  },
  {
    "text": "workflow and task information uh the",
    "start": "1121200",
    "end": "1123679"
  },
  {
    "text": "user also builds a docker container to",
    "start": "1123679",
    "end": "1126240"
  },
  {
    "text": "uh where where where all the",
    "start": "1126240",
    "end": "1128160"
  },
  {
    "text": "dependencies are present",
    "start": "1128160",
    "end": "1130000"
  },
  {
    "text": "and after the registration happens you",
    "start": "1130000",
    "end": "1133120"
  },
  {
    "text": "say the user is",
    "start": "1133120",
    "end": "1135039"
  },
  {
    "text": "the user wants to trigger the workflow",
    "start": "1135039",
    "end": "1137039"
  },
  {
    "text": "so what happens then uh flight propeller",
    "start": "1137039",
    "end": "1139520"
  },
  {
    "text": "comes into the picture so flight",
    "start": "1139520",
    "end": "1140880"
  },
  {
    "text": "propeller is a kubernetes operator and",
    "start": "1140880",
    "end": "1143039"
  },
  {
    "text": "it's part of data plane now flight admin",
    "start": "1143039",
    "end": "1145679"
  },
  {
    "text": "is the control plane and flight",
    "start": "1145679",
    "end": "1147200"
  },
  {
    "text": "propeller is the data plane so flight",
    "start": "1147200",
    "end": "1149440"
  },
  {
    "text": "propeller",
    "start": "1149440",
    "end": "1150880"
  },
  {
    "text": "executes the workflow guides the",
    "start": "1150880",
    "end": "1152559"
  },
  {
    "text": "workflow to completion and during that",
    "start": "1152559",
    "end": "1155200"
  },
  {
    "text": "process it can interact with other",
    "start": "1155200",
    "end": "1156960"
  },
  {
    "text": "kubernetes operators or it can also",
    "start": "1156960",
    "end": "1159440"
  },
  {
    "text": "interact with other kubernetes objects",
    "start": "1159440",
    "end": "1161760"
  },
  {
    "text": "or some external services and it guides",
    "start": "1161760",
    "end": "1164160"
  },
  {
    "text": "the workflow to completion and stores",
    "start": "1164160",
    "end": "1165840"
  },
  {
    "text": "the result in a cloud blob storage and",
    "start": "1165840",
    "end": "1168000"
  },
  {
    "text": "flight admin gets the results from the",
    "start": "1168000",
    "end": "1169760"
  },
  {
    "text": "cloud blob storage and shows it on the",
    "start": "1169760",
    "end": "1172080"
  },
  {
    "text": "flight dashboard which the user can view",
    "start": "1172080",
    "end": "1174000"
  },
  {
    "text": "so this is the work this is the basic",
    "start": "1174000",
    "end": "1176400"
  },
  {
    "text": "architecture of flight",
    "start": "1176400",
    "end": "1179840"
  },
  {
    "text": "next let's look at the flights ml",
    "start": "1180799",
    "end": "1182480"
  },
  {
    "text": "features",
    "start": "1182480",
    "end": "1183919"
  },
  {
    "text": "first comes intraodastic pointing",
    "start": "1183919",
    "end": "1186960"
  },
  {
    "start": "1184000",
    "end": "1184000"
  },
  {
    "text": "so running multiple epochs or different",
    "start": "1186960",
    "end": "1189200"
  },
  {
    "text": "iterations with the same data set can",
    "start": "1189200",
    "end": "1191120"
  },
  {
    "text": "take a long time hence the bootstrap",
    "start": "1191120",
    "end": "1193600"
  },
  {
    "text": "time may be high and creating task",
    "start": "1193600",
    "end": "1195760"
  },
  {
    "text": "boundaries can be expensive so we have",
    "start": "1195760",
    "end": "1198000"
  },
  {
    "text": "already looked at retries or recover",
    "start": "1198000",
    "end": "1201280"
  },
  {
    "text": "mechanisms available in flight now when",
    "start": "1201280",
    "end": "1203679"
  },
  {
    "text": "you recover a workflow what happens is",
    "start": "1203679",
    "end": "1206480"
  },
  {
    "text": "it's recovers from the failed node but",
    "start": "1206480",
    "end": "1208960"
  },
  {
    "text": "not from within the node if at all",
    "start": "1208960",
    "end": "1210720"
  },
  {
    "text": "there's a failure within the task it",
    "start": "1210720",
    "end": "1213200"
  },
  {
    "text": "doesn't know that it doesn't know that",
    "start": "1213200",
    "end": "1214799"
  },
  {
    "text": "it just runs the whole task or it just",
    "start": "1214799",
    "end": "1217200"
  },
  {
    "text": "runs the whole node but in machine",
    "start": "1217200",
    "end": "1219520"
  },
  {
    "text": "learning we can have tasks wherein uh",
    "start": "1219520",
    "end": "1222720"
  },
  {
    "text": "there can be multiple iterations within",
    "start": "1222720",
    "end": "1224799"
  },
  {
    "text": "it multiple epos it's compute expensive",
    "start": "1224799",
    "end": "1227919"
  },
  {
    "text": "time expensive and we want to we may",
    "start": "1227919",
    "end": "1230320"
  },
  {
    "text": "want to capture the exact failure point",
    "start": "1230320",
    "end": "1233200"
  },
  {
    "text": "and run from that point so in such a",
    "start": "1233200",
    "end": "1235440"
  },
  {
    "text": "case we can use intratastic pointing",
    "start": "1235440",
    "end": "1238159"
  },
  {
    "text": "flight offers a way to checkpoint",
    "start": "1238159",
    "end": "1239840"
  },
  {
    "text": "progress within a task execution",
    "start": "1239840",
    "end": "1242480"
  },
  {
    "text": "so how how does that happen how how do",
    "start": "1242480",
    "end": "1244640"
  },
  {
    "text": "you do that uh so this is a flight task",
    "start": "1244640",
    "end": "1247360"
  },
  {
    "text": "right in that you can initialize a",
    "start": "1247360",
    "end": "1249520"
  },
  {
    "text": "checkpoint it's available in the flight",
    "start": "1249520",
    "end": "1251120"
  },
  {
    "text": "kit library and after you you initialize",
    "start": "1251120",
    "end": "1254640"
  },
  {
    "text": "the checkpoint you just have to write",
    "start": "1254640",
    "end": "1256159"
  },
  {
    "text": "the required or the concerning you just",
    "start": "1256159",
    "end": "1258159"
  },
  {
    "text": "have to write the data to it",
    "start": "1258159",
    "end": "1260000"
  },
  {
    "text": "and so what happens is this opens up the",
    "start": "1260000",
    "end": "1262480"
  },
  {
    "text": "opportunity to use alternate compute",
    "start": "1262480",
    "end": "1264640"
  },
  {
    "text": "systems with lower guarantees like aws",
    "start": "1264640",
    "end": "1266960"
  },
  {
    "text": "part instances gcp preemptable instances",
    "start": "1266960",
    "end": "1270000"
  },
  {
    "text": "which offer great performance at much",
    "start": "1270000",
    "end": "1272320"
  },
  {
    "text": "lower price points as compared to their",
    "start": "1272320",
    "end": "1274159"
  },
  {
    "text": "on-demand or reserved alternative that's",
    "start": "1274159",
    "end": "1276400"
  },
  {
    "text": "the advantage of using intra-tested",
    "start": "1276400",
    "end": "1278880"
  },
  {
    "text": "pointing especially when building",
    "start": "1278880",
    "end": "1281360"
  },
  {
    "text": "machine learning models",
    "start": "1281360",
    "end": "1283760"
  },
  {
    "text": "let's also look at union emma which is",
    "start": "1283760",
    "end": "1286400"
  },
  {
    "text": "uh",
    "start": "1286400",
    "end": "1287520"
  },
  {
    "text": "which is a an interface that's built on",
    "start": "1287520",
    "end": "1289440"
  },
  {
    "text": "top of flight uh if you look at this",
    "start": "1289440",
    "end": "1291760"
  },
  {
    "text": "diagram so we have union ml app right uh",
    "start": "1291760",
    "end": "1294880"
  },
  {
    "text": "if at all you want if you're at all you",
    "start": "1294880",
    "end": "1296320"
  },
  {
    "text": "want to deploy this union mo app you can",
    "start": "1296320",
    "end": "1298799"
  },
  {
    "text": "deploy it either on a web app or on the",
    "start": "1298799",
    "end": "1301120"
  },
  {
    "text": "flight back in using flight kit and fast",
    "start": "1301120",
    "end": "1303760"
  },
  {
    "text": "api and there are train and project",
    "start": "1303760",
    "end": "1306080"
  },
  {
    "text": "endpoints respectively so union ml app",
    "start": "1306080",
    "end": "1308559"
  },
  {
    "text": "provides it's like the easiest way to",
    "start": "1308559",
    "end": "1310880"
  },
  {
    "text": "build and deploy machine learning micro",
    "start": "1310880",
    "end": "1312720"
  },
  {
    "text": "services right it's it because it's",
    "start": "1312720",
    "end": "1315520"
  },
  {
    "text": "flight compatible you can easily deploy",
    "start": "1315520",
    "end": "1318159"
  },
  {
    "text": "them and you need not really think about",
    "start": "1318159",
    "end": "1320240"
  },
  {
    "text": "mlaps",
    "start": "1320240",
    "end": "1322880"
  },
  {
    "text": "let's let's look at how the union ml",
    "start": "1322960",
    "end": "1325679"
  },
  {
    "text": "code has to be written you know the",
    "start": "1325679",
    "end": "1327520"
  },
  {
    "text": "anatomy of a union ml app first import",
    "start": "1327520",
    "end": "1330559"
  },
  {
    "text": "the required dependencies we are also",
    "start": "1330559",
    "end": "1332960"
  },
  {
    "text": "importing the union mo library",
    "start": "1332960",
    "end": "1335840"
  },
  {
    "text": "and then initialize the data set and",
    "start": "1335840",
    "end": "1338480"
  },
  {
    "text": "model here the data set that we are",
    "start": "1338480",
    "end": "1340480"
  },
  {
    "text": "using as digits data set and the model",
    "start": "1340480",
    "end": "1343520"
  },
  {
    "text": "is logistic regression",
    "start": "1343520",
    "end": "1345520"
  },
  {
    "text": "and then",
    "start": "1345520",
    "end": "1346400"
  },
  {
    "text": "we",
    "start": "1346400",
    "end": "1347360"
  },
  {
    "text": "have to initialize a reader method that",
    "start": "1347360",
    "end": "1349440"
  },
  {
    "text": "basically reads the data",
    "start": "1349440",
    "end": "1351760"
  },
  {
    "text": "or trainer method to train the data",
    "start": "1351760",
    "end": "1354240"
  },
  {
    "text": "predictor to predict the data to",
    "start": "1354240",
    "end": "1356480"
  },
  {
    "text": "generate predictions",
    "start": "1356480",
    "end": "1358080"
  },
  {
    "text": "and then evaluate it to evaluate the",
    "start": "1358080",
    "end": "1360400"
  },
  {
    "text": "model",
    "start": "1360400",
    "end": "1361440"
  },
  {
    "text": "so pretty much it you just have to write",
    "start": "1361440",
    "end": "1363919"
  },
  {
    "text": "a couple of simple functions and then",
    "start": "1363919",
    "end": "1366880"
  },
  {
    "text": "uh boom you or you have a uh",
    "start": "1366880",
    "end": "1370400"
  },
  {
    "text": "you have a production ready ml",
    "start": "1370400",
    "end": "1372080"
  },
  {
    "text": "application with you after you deploy it",
    "start": "1372080",
    "end": "1375280"
  },
  {
    "text": "so",
    "start": "1375280",
    "end": "1376080"
  },
  {
    "text": "you'll also have to make sure that you",
    "start": "1376080",
    "end": "1377919"
  },
  {
    "text": "decorate your functions right with",
    "start": "1377919",
    "end": "1380799"
  },
  {
    "text": "the required decorators in order to keep",
    "start": "1380799",
    "end": "1383280"
  },
  {
    "text": "it in sync in order to keep the code in",
    "start": "1383280",
    "end": "1385919"
  },
  {
    "text": "sync with the flight back end",
    "start": "1385919",
    "end": "1389039"
  },
  {
    "text": "because internally these are tasks and",
    "start": "1389039",
    "end": "1391600"
  },
  {
    "text": "workflows",
    "start": "1391600",
    "end": "1393679"
  },
  {
    "text": "and this is how you deploy right local",
    "start": "1393679",
    "end": "1395919"
  },
  {
    "text": "if you want to execute locally it's",
    "start": "1395919",
    "end": "1397679"
  },
  {
    "text": "pretty simple and if at all you want to",
    "start": "1397679",
    "end": "1399280"
  },
  {
    "text": "create a prediction micro service that's",
    "start": "1399280",
    "end": "1401039"
  },
  {
    "text": "simple too here's an example using fast",
    "start": "1401039",
    "end": "1403840"
  },
  {
    "text": "api so you just have to trigger the",
    "start": "1403840",
    "end": "1405520"
  },
  {
    "text": "server you just have to spin up the",
    "start": "1405520",
    "end": "1407440"
  },
  {
    "text": "server serve the model and then",
    "start": "1407440",
    "end": "1410320"
  },
  {
    "text": "hit the end point to get the predictions",
    "start": "1410320",
    "end": "1413840"
  },
  {
    "text": "finally an ecosystem of integrations is",
    "start": "1413840",
    "end": "1416320"
  },
  {
    "text": "what we are planning for so uh we",
    "start": "1416320",
    "end": "1418960"
  },
  {
    "text": "currently have integrated union ml with",
    "start": "1418960",
    "end": "1421600"
  },
  {
    "text": "fast api but we have plans to integrate",
    "start": "1421600",
    "end": "1423919"
  },
  {
    "text": "it with streamlit and flask we are also",
    "start": "1423919",
    "end": "1426720"
  },
  {
    "text": "planning to integrate it with other",
    "start": "1426720",
    "end": "1428559"
  },
  {
    "text": "hyper parameter optimization libraries",
    "start": "1428559",
    "end": "1431440"
  },
  {
    "text": "machine learning libraries aws lambda or",
    "start": "1431440",
    "end": "1434240"
  },
  {
    "text": "serverless and even driven service and",
    "start": "1434240",
    "end": "1436480"
  },
  {
    "text": "so on",
    "start": "1436480",
    "end": "1438640"
  },
  {
    "text": "lastly",
    "start": "1438640",
    "end": "1440080"
  },
  {
    "start": "1440000",
    "end": "1440000"
  },
  {
    "text": "let's look at a couple of envelopes best",
    "start": "1440080",
    "end": "1441919"
  },
  {
    "text": "practices",
    "start": "1441919",
    "end": "1444000"
  },
  {
    "text": "yeah so retrain models on a cadence",
    "start": "1444000",
    "end": "1446559"
  },
  {
    "text": "that's that's very important to keep",
    "start": "1446559",
    "end": "1448400"
  },
  {
    "text": "your model updated version your data and",
    "start": "1448400",
    "end": "1451120"
  },
  {
    "text": "code have a backup model for generating",
    "start": "1451120",
    "end": "1453440"
  },
  {
    "text": "predictions in the case when the main",
    "start": "1453440",
    "end": "1454960"
  },
  {
    "text": "model fails have ml related tests in ci",
    "start": "1454960",
    "end": "1458559"
  },
  {
    "text": "sanity check the data meaning ensure the",
    "start": "1458559",
    "end": "1461360"
  },
  {
    "text": "quality of your data",
    "start": "1461360",
    "end": "1464559"
  },
  {
    "text": "monitor your machine learning models",
    "start": "1465440",
    "end": "1467600"
  },
  {
    "text": "maintain a clean project structure",
    "start": "1467600",
    "end": "1469919"
  },
  {
    "text": "meaning segregate your model and data",
    "start": "1469919",
    "end": "1472960"
  },
  {
    "text": "code have pre-commit hooks to ensure the",
    "start": "1472960",
    "end": "1476000"
  },
  {
    "text": "quality of your code",
    "start": "1476000",
    "end": "1478960"
  },
  {
    "text": "finally",
    "start": "1478960",
    "end": "1480240"
  },
  {
    "text": "with flight you can code ship and scale",
    "start": "1480240",
    "end": "1483279"
  },
  {
    "text": "ml pipelines with ease",
    "start": "1483279",
    "end": "1487279"
  },
  {
    "text": "yeah if at all you want to learn more",
    "start": "1487279",
    "end": "1488960"
  },
  {
    "text": "about flight here other references take",
    "start": "1488960",
    "end": "1491840"
  },
  {
    "text": "a look at our website documentation and",
    "start": "1491840",
    "end": "1494000"
  },
  {
    "text": "repo",
    "start": "1494000",
    "end": "1495440"
  },
  {
    "text": "thank you very much",
    "start": "1495440",
    "end": "1499000"
  }
]