[
  {
    "text": "all right welcome everybody welcome welcome still people filing in uh I",
    "start": "480",
    "end": "6160"
  },
  {
    "text": "think there's more room in the back there but uh you know grateful to see all your all's faces today so let's get",
    "start": "6160",
    "end": "11280"
  },
  {
    "text": "this thing going this is the crossplane talk uh my name is Jared this is Nick uh",
    "start": "11280",
    "end": "16960"
  },
  {
    "text": "we are part of the leadership of the Crossplane project we've dedicated a good chunk of our careers now to",
    "start": "16960",
    "end": "22960"
  },
  {
    "text": "crossplane um so we're obviously very excited to talk about something we're very passionate about um as is usual for",
    "start": "22960",
    "end": "29599"
  },
  {
    "text": "CubeCons we have a very diverse range of uh like experience levels with",
    "start": "29599",
    "end": "35040"
  },
  {
    "text": "crossplane so some people are running it in production some people have not even heard of crossplane before and they're",
    "start": "35040",
    "end": "40480"
  },
  {
    "text": "curious about what it is so we do have to start this talk with 10 minutes of basic introductory stuff the people the",
    "start": "40480",
    "end": "46719"
  },
  {
    "text": "more crossplane pros might be a little bored with that but I guarantee you the second half uh is going to be quite",
    "start": "46719",
    "end": "52079"
  },
  {
    "text": "interesting as Nick is talking about the the future of crossplane a v2 of crossplane very exciting stuff you",
    "start": "52079",
    "end": "58719"
  },
  {
    "text": "haven't seen all right let's go so the basics what is crossplane so we like to",
    "start": "58719",
    "end": "64640"
  },
  {
    "text": "think of uh crossplane as a cloudnative control plane you basically use it to provision and manage all of your",
    "start": "64640",
    "end": "71360"
  },
  {
    "text": "resources uh you can take those resources you compose them into higher level abstractions and with those",
    "start": "71360",
    "end": "77119"
  },
  {
    "text": "abstractions you offer those to your developers so that they can self-service and provision and get the resources they",
    "start": "77119",
    "end": "82240"
  },
  {
    "text": "need uh Kubernetes is a great control plane for containers crossplane",
    "start": "82240",
    "end": "87840"
  },
  {
    "text": "basically extends Kubernetes and teaches it how to manage everything else um control planes are not a new concept",
    "start": "87840",
    "end": "94479"
  },
  {
    "text": "right cloud providers have been running control planes in their backends for years uh but now Crossplane gives you",
    "start": "94479",
    "end": "99920"
  },
  {
    "text": "the framework and the tooling that you need to build your own control plane your own platform",
    "start": "99920",
    "end": "105200"
  },
  {
    "text": "so the basic building blocks here we call these managed resources in crossplane uh so think about all the",
    "start": "105200",
    "end": "110960"
  },
  {
    "text": "different cloud providers out there all the different SAS offerings on premises software all that stuff there's",
    "start": "110960",
    "end": "116560"
  },
  {
    "text": "thousands and thousands of different resources and services out there crossplane aims to bring those into the",
    "start": "116560",
    "end": "122880"
  },
  {
    "text": "Kubernetes control plane and allow you to provision and manage them from the control plane in practice what that looks like",
    "start": "122880",
    "end": "129920"
  },
  {
    "text": "here with a little practical example is imagine an S3 bucket so this S3 bucket here uh crossplane is representing it as",
    "start": "129920",
    "end": "137120"
  },
  {
    "text": "an API object in the Kubernetes control plane so just like any other API object it's going to have a spec and some",
    "start": "137120",
    "end": "143120"
  },
  {
    "text": "declarative configuration that you basically specify your desired state for this bucket and then crossplane will go",
    "start": "143120",
    "end": "148400"
  },
  {
    "text": "take that desired state and apply it to the real world ending up with an S3 bucket just like any well- behaved um",
    "start": "148400",
    "end": "156000"
  },
  {
    "text": "Kubernetes API object they're going to have a status as well that's going to give you like the observed state of the",
    "start": "156000",
    "end": "161280"
  },
  {
    "text": "real resource out there in the real world the conditions um there there's going to be events that tell the history",
    "start": "161280",
    "end": "166560"
  },
  {
    "text": "of the life cycle the you know what's going on with that resource so they're all well all these you know thousands of",
    "start": "166560",
    "end": "173120"
  },
  {
    "text": "resources in crossplane that are in the Kubernetes control plane are well behaved Kubernetes API objects how does",
    "start": "173120",
    "end": "179440"
  },
  {
    "text": "this work probably like you expect imagine taking uh this bucket manifest as a user and you apply this S3 bucket",
    "start": "179440",
    "end": "185920"
  },
  {
    "text": "manifest to the control plane to the API server probably through GitOps or something like that",
    "start": "185920",
    "end": "191239"
  },
  {
    "text": "um the or there is a set of controllers in crossplane that are watching and",
    "start": "191239",
    "end": "196400"
  },
  {
    "text": "actively reconciling these resources with the real world so the S3 controller it will see get an event from the API",
    "start": "196400",
    "end": "202959"
  },
  {
    "text": "server it'll see that somebody has a desired state of a bucket it'll use the Amazon API to talk to AWS and provision",
    "start": "202959",
    "end": "209760"
  },
  {
    "text": "that bucket out there in the real world and matching the actual state with the desired state so we've got the building blocks",
    "start": "209760",
    "end": "216640"
  },
  {
    "text": "the basic building blocks in crossplane and these managed resources let's build them into an actual platform now so the",
    "start": "216640",
    "end": "224159"
  },
  {
    "text": "concept of composition is hugely important in crossplane basically it allows you to take these granular",
    "start": "224159",
    "end": "229599"
  },
  {
    "text": "resources assemble them compose them into higher level abstractions and then those abstractions are what you offer to",
    "start": "229599",
    "end": "235360"
  },
  {
    "text": "your developers so take for example if you want to compose together a GKE cluster node poolool network subnet",
    "start": "235360",
    "end": "241040"
  },
  {
    "text": "subnet all that stuff and then you want to offer that as a very simple cluster abstraction to your developers you give",
    "start": "241040",
    "end": "247519"
  },
  {
    "text": "them some limited configuration options and they basically are then able to provision workload clusters that are you",
    "start": "247519",
    "end": "253200"
  },
  {
    "text": "know in accordance with your golden path of the platform team uh you know and all that infrastructure complexity is hidden",
    "start": "253200",
    "end": "259440"
  },
  {
    "text": "away from them uh so it's a much easier experience to you know unblock your developers and get them going quickly to",
    "start": "259440",
    "end": "264800"
  },
  {
    "text": "production uh all of this is you know Kubernetes API right so any tool that knows Kubernetes can work with",
    "start": "264800",
    "end": "270320"
  },
  {
    "text": "crossplane and uh be compatible there so let's do a little visual here",
    "start": "270320",
    "end": "275759"
  },
  {
    "text": "um and spoiler alert This will be changing a bit for V2 when Nick gets on the stage and shows you all that but",
    "start": "275759",
    "end": "281040"
  },
  {
    "text": "let's think about the middle of this diagram here uh as a platform engineer you need to define your platform API for",
    "start": "281040",
    "end": "287280"
  },
  {
    "text": "your developers so you specify the schema the configuration knobs you want for them what is this abstraction that",
    "start": "287280",
    "end": "293840"
  },
  {
    "text": "you're exposing to your developers underneath the covers you have to define a composition the logic how what",
    "start": "293840",
    "end": "299199"
  },
  {
    "text": "resources are you composing together and how do you compose them together in practice let's look at this example here",
    "start": "299199",
    "end": "304880"
  },
  {
    "text": "again of uh say you as a platform engineer want to expose a platform API",
    "start": "304880",
    "end": "310240"
  },
  {
    "text": "for databases to your developers so you would go through the effort of defining the schema of that API what are the",
    "start": "310240",
    "end": "316560"
  },
  {
    "text": "configuration knobs I want to give my developers and then your developer comes along and she you can see here on the left side of the screen that she's like",
    "start": "316560",
    "end": "322800"
  },
  {
    "text": "okay I just want a small Postgress that's all I want the complexity underneath the covers is you know is",
    "start": "322800",
    "end": "328240"
  },
  {
    "text": "abstracted away and hidden in your platform there so you're at runtime for this small Postgress uh you know you",
    "start": "328240",
    "end": "334960"
  },
  {
    "text": "have a GCP composition for it maybe you have Alibaba maybe you have Azure or whatever maybe you have uh cheap or",
    "start": "334960",
    "end": "341199"
  },
  {
    "text": "expensive maybe you have silver or gold it doesn't matter you could have any number of compositions that define this",
    "start": "341199",
    "end": "346639"
  },
  {
    "text": "database abstraction and then for the GCP case that's going to be cloud SQL SQL user global address connection all",
    "start": "346639",
    "end": "352400"
  },
  {
    "text": "that sort of stuff so that's a bit of a practical look at it uh let's look at a little bit more details about how to do",
    "start": "352400",
    "end": "358160"
  },
  {
    "text": "this uh so to define the shape of your API define your platform API we have these what they're called composite",
    "start": "358160",
    "end": "364319"
  },
  {
    "text": "resource definitions you basically define your custom API group you're extending Kubernetes right you're you're you're giving Kubernetes a new API here",
    "start": "364319",
    "end": "371039"
  },
  {
    "text": "basically and so you can define the API group the kind and then the schema what are the configuration knobs that you",
    "start": "371039",
    "end": "376479"
  },
  {
    "text": "want your developers to have exposed then you have to write the the logic what what resources do you want to",
    "start": "376479",
    "end": "382479"
  },
  {
    "text": "compose together uh you know how do you want them to to happen and hugely important the way we do that in",
    "start": "382479",
    "end": "387759"
  },
  {
    "text": "crossplane is by running a pipeline of functions that's how you compose resources together in crossplane so",
    "start": "387759",
    "end": "394080"
  },
  {
    "text": "let's talk about functions for a bit because they're hugely important so basically in crossplane you're running a",
    "start": "394080",
    "end": "399280"
  },
  {
    "text": "pipeline of simple functions and that's how you compose resources together uh for all of those functions you can",
    "start": "399280",
    "end": "405199"
  },
  {
    "text": "basically use your language of choice there's a whole plethora of uh of",
    "start": "405199",
    "end": "410560"
  },
  {
    "text": "different languages that are supported now but the key part the really important part here is that you just",
    "start": "410560",
    "end": "415600"
  },
  {
    "text": "need to focus on the unique logic for your platform what does your platform need to do for your team and focus on",
    "start": "415600",
    "end": "421520"
  },
  {
    "text": "just codifying that your golden paths your configuration that's important to you let Crossplane do everything else",
    "start": "421520",
    "end": "426720"
  },
  {
    "text": "like managing the life cycle of these things doing all the heavy lifting you know garbage collection blah blah blah all that sort of stuff but you get to",
    "start": "426720",
    "end": "432960"
  },
  {
    "text": "define a simple pipeline of functions now when I say functions you might think quickly of like okay I have to write",
    "start": "432960",
    "end": "438479"
  },
  {
    "text": "code that's not true uh there's a whole ecosystem in crossplane of these uh",
    "start": "438479",
    "end": "444000"
  },
  {
    "text": "reusable functions that the community has built and the key takeaway here is that all of these functions basically",
    "start": "444000",
    "end": "450240"
  },
  {
    "text": "offer you a bunch of new experiences in crossplane of different a variety of",
    "start": "450240",
    "end": "455919"
  },
  {
    "text": "ways that you know to co to express your logic and build your platform uh so there's a whole spectrum of you know no",
    "start": "455919",
    "end": "461840"
  },
  {
    "text": "code declarative low code full code whatever you're most comfortable with use that you know they're not going to",
    "start": "461840",
    "end": "468000"
  },
  {
    "text": "force you into one particular way of building your platform use the language that you're most comfortable with maybe",
    "start": "468000",
    "end": "473039"
  },
  {
    "text": "that's a high level config language maybe that's a lower level general purpose programming language it doesn't matter use what you want and then you're",
    "start": "473039",
    "end": "479520"
  },
  {
    "text": "not stuck with just that only language each function uh in that pipeline uh could be whatever language you want so",
    "start": "479520",
    "end": "485680"
  },
  {
    "text": "you can mix them and match build the platform in the way you're most comfortable with so let's look at some examples uh we're going to go through",
    "start": "485680",
    "end": "492160"
  },
  {
    "text": "these quickly and not look at every line but for example with functions you can do templating and define like a variable",
    "start": "492160",
    "end": "497680"
  },
  {
    "text": "number of access keys you can use Python to define this S3 bucket if you like",
    "start": "497680",
    "end": "502919"
  },
  {
    "text": "Python you can use KCL to define like an EC2 instance for a variable number of regions you can use uh Q to define some",
    "start": "502919",
    "end": "510639"
  },
  {
    "text": "IM policies for uh a given set of ARS you can use pickle to make a config map",
    "start": "510639",
    "end": "516880"
  },
  {
    "text": "whatever there's like a whole spectrum of experiences here or drop down to a lower level programming language a",
    "start": "516880",
    "end": "522320"
  },
  {
    "text": "general purpose programming language like go then once you're using if you want to define your platform and build your platform with a general purpose",
    "start": "522320",
    "end": "528640"
  },
  {
    "text": "programming language now you can start using like the native tools of that language and you know unit tests and test frameworks and linting and you know",
    "start": "528640",
    "end": "535440"
  },
  {
    "text": "uh autocompletes intellisense language servers all that stuff um help you define your your platform as a software",
    "start": "535440",
    "end": "542040"
  },
  {
    "text": "project it's up to you basically all right So the last release in crossplane",
    "start": "542040",
    "end": "547839"
  },
  {
    "text": "was the 1.19 I think it was I was going to say last month but now we're in early April so it was actually February I",
    "start": "547839",
    "end": "553440"
  },
  {
    "text": "think I almost lied to you I'm sorry but recently enough one month ago let's say uh and so what we're focusing on there",
    "start": "553440",
    "end": "559040"
  },
  {
    "text": "is m continuing to mature crossplane the key uh APIs and features that folks are using and adopting in crossplane",
    "start": "559040",
    "end": "565680"
  },
  {
    "text": "continue to uh mature those so usage is now beta uh the claim server side apply is now beta and then we also learned a",
    "start": "565680",
    "end": "572640"
  },
  {
    "text": "mistake from one of our mistakes as well of how we promote code APIs and doing that in a safe way so you can upgrade",
    "start": "572640",
    "end": "578240"
  },
  {
    "text": "crossplane and downgrade crossplane as well across all the versions uh we learned some mistakes from that and you",
    "start": "578240",
    "end": "584000"
  },
  {
    "text": "know did a couple patch releases and have a good policy in place so that works really well uh and a couple of the things we worked on is basically making",
    "start": "584000",
    "end": "590880"
  },
  {
    "text": "crossplane more useful in more scenarios uh so some host network scenarios that were in high demand from the community work now being able to use private",
    "start": "590880",
    "end": "597440"
  },
  {
    "text": "repositories with the crossplane CLI just making it generally more useful for people and then last slide for me uh",
    "start": "597440",
    "end": "604240"
  },
  {
    "text": "next release 1.20 20 is going to be in early May so just about a month away uh so roadmap for that and ongoing as well",
    "start": "604240",
    "end": "611920"
  },
  {
    "text": "so the change logs feature in crossplane we've had it in runtime for a couple releases but we haven't actually rolled",
    "start": "611920",
    "end": "617040"
  },
  {
    "text": "it out to the providers yet and I think that's a really important feature because it basically lets you have like an audit log of everything crossplane's",
    "start": "617040",
    "end": "623120"
  },
  {
    "text": "doing to all of your resources why it's doing it when it's doing it how it's doing it where it's doing it all that stuff that'll be available in all the",
    "start": "623120",
    "end": "628560"
  },
  {
    "text": "providers so I think that's really important we're obviously going to continue maturing the important features the key feature areas and APIs that",
    "start": "628560",
    "end": "634240"
  },
  {
    "text": "everyone's using and adopting we're going to continue to mature those going to work on uh insight observability",
    "start": "634240",
    "end": "639760"
  },
  {
    "text": "metrics like more insight into what crossplane is doing that'll be a theme and then of course the future of",
    "start": "639760",
    "end": "644959"
  },
  {
    "text": "crossplane crossplane v2 which Nick will talk",
    "start": "644959",
    "end": "649839"
  },
  {
    "text": "about thanks Jared so Monday of this week we released a preview build of",
    "start": "650600",
    "end": "657360"
  },
  {
    "text": "crossplane v2 so it's out there it's released and it's something that you can try now our goal with crossbane v2 is to",
    "start": "657360",
    "end": "664160"
  },
  {
    "text": "make crossbane more useful for more things we also want to make it more intuitive and less opinionated compared to crossplane",
    "start": "664160",
    "end": "670200"
  },
  {
    "text": "v1 there's three major changes in crossbane v2 composite resources and our",
    "start": "670200",
    "end": "676040"
  },
  {
    "text": "namespaced manage resources in our namespaced and you can use composite resources to compose whatever you like",
    "start": "676040",
    "end": "681760"
  },
  {
    "text": "any Kubernetes resource as opposed to only crossplane resources over the last couple years at",
    "start": "681760",
    "end": "687360"
  },
  {
    "text": "KubeCon something that I while I was managing the crossplane booth something that I would frequently hear from people is \"I love crossplay for my",
    "start": "687360",
    "end": "693200"
  },
  {
    "text": "infrastructure abstractions I built cluster abstractions database abstractions etc what should I use for my apps or my microservices or things",
    "start": "693200",
    "end": "699519"
  },
  {
    "text": "that actually are using that infrastructure?\" And it got me thinking i was like why why not just use crossplane or why not at least allow",
    "start": "699519",
    "end": "706000"
  },
  {
    "text": "people to use crossplane so one of the themes with crossplane v2 is it's better suited to",
    "start": "706000",
    "end": "712120"
  },
  {
    "text": "building API abstractions for anything not just infrastructure and especially",
    "start": "712120",
    "end": "717200"
  },
  {
    "text": "for applications or microservices so composite resources XRS",
    "start": "717200",
    "end": "724160"
  },
  {
    "text": "are now namespaced jarrett touched on XRS before but as a quick recap these are Kubernetes custom resources that you",
    "start": "724160",
    "end": "730800"
  },
  {
    "text": "when I say you I'm typically meaning a platform engineer or something like that uh is defining so you teach Crossplain",
    "start": "730800",
    "end": "736399"
  },
  {
    "text": "that this type exists and you teach crossplane what a schema is here I show an app but it could be a billing front",
    "start": "736399",
    "end": "743200"
  },
  {
    "text": "end a web app an Acme database it's really entirely up to you so in crossplane v2 all XRS all composite",
    "start": "743200",
    "end": "750560"
  },
  {
    "text": "resources and all managed resources were cluster scoped uh there were reasons for this uh it was inspired by persistent",
    "start": "750560",
    "end": "757040"
  },
  {
    "text": "volume claims and uh persistent volumes in Kubernetes and it kind of made sense when we were thinking about it as a",
    "start": "757040",
    "end": "762079"
  },
  {
    "text": "infrastructure tool arguably but uh but in this modern world I don't think it makes sense anymore so we've just made",
    "start": "762079",
    "end": "767440"
  },
  {
    "text": "them names based what this means is we've lost an entire concept in crossplane there are no claims in",
    "start": "767440",
    "end": "773519"
  },
  {
    "text": "crossplane v2 claims were a namespace proxy you would create a claim in your namespace and then crossplane would respond by creating a cluster scripted",
    "start": "773519",
    "end": "780000"
  },
  {
    "text": "XR that was identical to the claim no need to do that anymore given that XRS",
    "start": "780000",
    "end": "785120"
  },
  {
    "text": "can now be cluster scoped another small change that you might see here if you're familiar with crossplane is on every XR",
    "start": "785120",
    "end": "791360"
  },
  {
    "text": "there's a couple of things that configure how crossplane works so the example on this uh uh YAML that you're looking at now is the composition",
    "start": "791360",
    "end": "797600"
  },
  {
    "text": "reference this is the part that tells crossplay when someone's create this creates this app use this configuration",
    "start": "797600",
    "end": "803360"
  },
  {
    "text": "to know what to do to know what resources to create in response to this app being created um previously all of these sort of",
    "start": "803360",
    "end": "809839"
  },
  {
    "text": "crossplay machinery fields were just top level under spec and this means that it would be easy for users to confuse stuff",
    "start": "809839",
    "end": "817200"
  },
  {
    "text": "that was crossplay machinery that they may not need to worry about with stuff that is actually important like the image in this example the image that the",
    "start": "817200",
    "end": "823600"
  },
  {
    "text": "app's going to run so we've moved all of these crossplay machinery fields under spectrosplane just to make it easy to",
    "start": "823600",
    "end": "829200"
  },
  {
    "text": "say hey you can ignore all the crossplane stuff under spectrosplane if it's not relevant to you as a",
    "start": "829200",
    "end": "835839"
  },
  {
    "text": "user should say most composite resources in our namespace uh when you saw the XRD",
    "start": "836120",
    "end": "841279"
  },
  {
    "text": "example earlier you'll notice it looks a lot like cross uh sorry a Kubernetes CRD custom resource definition uh and we've",
    "start": "841279",
    "end": "848079"
  },
  {
    "text": "taken the scope field that exists on CRDs and we just put that on XRDs so now you could choose whether your XRD is",
    "start": "848079",
    "end": "854079"
  },
  {
    "text": "namespaced or cluster script well you're choosing whether your XR is namespace or cluster script using",
    "start": "854079",
    "end": "860320"
  },
  {
    "text": "the XRD so I think I expect that like Kubernetes resources the vast majority",
    "start": "860320",
    "end": "866240"
  },
  {
    "text": "of XRS are going to be namespaced going forward but there are some interesting use cases for cluster scoped XRS so a",
    "start": "866240",
    "end": "872480"
  },
  {
    "text": "namespaced XR can compose can create resources in its namespace a clusters scoped XR can create clusters scoped",
    "start": "872480",
    "end": "879120"
  },
  {
    "text": "resources or resources in any name space so one thing I'm excited about with clusters scripted XRS is you can imagine",
    "start": "879120",
    "end": "884880"
  },
  {
    "text": "packaging up something like Argo CD or an operator using an XR building that API yourself and then using that to roll",
    "start": "884880",
    "end": "891120"
  },
  {
    "text": "out to clusters or control planes to uh to deploy",
    "start": "891120",
    "end": "895920"
  },
  {
    "text": "that in B2 i mentioned before manage resources are now namespaced this one's pretty straightforward uh right now as",
    "start": "897079",
    "end": "903839"
  },
  {
    "text": "of the preview we've only updated the AWS providers to have namespace managed resources uh the next couple of months",
    "start": "903839",
    "end": "909120"
  },
  {
    "text": "we'll update all of the providers to support namespace managed resources this means that when you're creating a namespace XR you can compose that XR of",
    "start": "909120",
    "end": "917279"
  },
  {
    "text": "namespace manage resources and I won't take too much time to explain the benefits of namespacing",
    "start": "917279",
    "end": "923760"
  },
  {
    "text": "in Kubernetes i presume that you're all familiar with it it's a tenency isolation lets you give people access to",
    "start": "923760",
    "end": "929920"
  },
  {
    "text": "create app XRS and maybe manage resources directly in one namespace but not others if you uh if you want",
    "start": "929920",
    "end": "935720"
  },
  {
    "text": "to and that gets to another thing that's more of a philosophical change with crossplane v2 in crossplane v1 we uh I",
    "start": "935720",
    "end": "942399"
  },
  {
    "text": "thought of it as kind of vertically integrated and what I mean by that is we told people you shouldn't really make",
    "start": "942399",
    "end": "947680"
  },
  {
    "text": "managed resources directly you shouldn't put managed resources in a helm chart you should create managed resources using a composite resource and the",
    "start": "947680",
    "end": "954320"
  },
  {
    "text": "opposite was also true we said composite resources were for crossblade managed resources not for arbitrary Kubernetes",
    "start": "954320",
    "end": "959399"
  },
  {
    "text": "resources we no longer hold that opinion with crossplay and v2 uh with everything becoming namespace to it to become it",
    "start": "959399",
    "end": "964880"
  },
  {
    "text": "makes a lot more sense to uh potentially create mandatory resources using another tool if you want to that's fine i think",
    "start": "964880",
    "end": "970320"
  },
  {
    "text": "it works best and great with composition but you don't have to use composition and similarly you can use composition to",
    "start": "970320",
    "end": "976079"
  },
  {
    "text": "compose whatever Kubernetes resources you want could be a deployment could be a service uh could be whatever you want",
    "start": "976079",
    "end": "982000"
  },
  {
    "text": "not just crossplane manage resources so let's uh show that now uh don't worry this diagram that looks",
    "start": "982000",
    "end": "988720"
  },
  {
    "text": "very complicated and weird is showing you how it used to work in crossplane v1 so technically in crossplane v1 you",
    "start": "988720",
    "end": "994320"
  },
  {
    "text": "could already compose whatever resource you liked but it was a little strange so what we're showing here is this example",
    "start": "994320",
    "end": "1000480"
  },
  {
    "text": "where the platform team has defined a new API and that API is an app and so",
    "start": "1000480",
    "end": "1005839"
  },
  {
    "text": "someone comes and they say all right cool I'm creating an app in my name space and what the platform team has said is when someone creates an app crossplane what I want you to do is",
    "start": "1005839",
    "end": "1011680"
  },
  {
    "text": "create a deployment a service and an RDS instance and you can see the machinery of how that works is the app claim gets",
    "start": "1011680",
    "end": "1018560"
  },
  {
    "text": "created in the namespace then crossplane jumps out of the namespace to the cluster scope creates an app XR which is just a mirror of the claim then that app",
    "start": "1018560",
    "end": "1025120"
  },
  {
    "text": "XR is composed of two objects for our Kubernetes provider which is weird in of",
    "start": "1025120",
    "end": "1030558"
  },
  {
    "text": "itself the Kubernetes provider for a service that runs on Kubernetes those clusters scoped object",
    "start": "1030559",
    "end": "1036959"
  },
  {
    "text": "manage resources would then jump back into the namespace create a deployment of a service and meanwhile the RDS instance would be clusters scoped so it",
    "start": "1036959",
    "end": "1043678"
  },
  {
    "text": "gets the job done you your user creates an app and out the other end comes a deployment service and name uh RDS",
    "start": "1043679",
    "end": "1050160"
  },
  {
    "text": "instance but it's more complicated than it needs to be so here's what that looks like in",
    "start": "1050160",
    "end": "1055760"
  },
  {
    "text": "crossplane v2 i think you'll agree that you know there's like at least three boxes missing from this diagram so it's",
    "start": "1055760",
    "end": "1061039"
  },
  {
    "text": "a lot simpler the user creates a namespace XR and crossplane responds by directly creating a deployment a service",
    "start": "1061039",
    "end": "1066960"
  },
  {
    "text": "and an RDS instance also namespaced and like I mentioned you don't have to use",
    "start": "1066960",
    "end": "1072720"
  },
  {
    "text": "manage resources at all here's the same thing user creates an app we create a deployment a service and a cloudnative",
    "start": "1072720",
    "end": "1078240"
  },
  {
    "text": "uh PG database cluster running Postgres in the cluster as opposed to running RDS",
    "start": "1078240",
    "end": "1083600"
  },
  {
    "text": "or some cloud service",
    "start": "1083600",
    "end": "1087480"
  },
  {
    "text": "crossplane v2 is backward compatible with crossplane v1 what this means is once crossplane v2 is g you'll be able",
    "start": "1088799",
    "end": "1095520"
  },
  {
    "text": "to upgrade from v1 to v2 and most people shouldn't have any breaking changes doing that there's two things we've done",
    "start": "1095520",
    "end": "1101200"
  },
  {
    "text": "that enable this one is I mentioned before that xrds have a namespace uh",
    "start": "1101200",
    "end": "1106640"
  },
  {
    "text": "have a scope field and it can be namespace or cluster scoped actually it can be namespace cluster scoped or legacy clusters scoped and if you set it",
    "start": "1106640",
    "end": "1113039"
  },
  {
    "text": "to legacy cluster script which will be the default for v1 of the xrd API uh then it will just create a v1 style kind",
    "start": "1113039",
    "end": "1120000"
  },
  {
    "text": "of legacy uh legacy xr so that xr will support claims it will not use spectrosplate it will work just like it works in crossbane v1 we're also adding",
    "start": "1120000",
    "end": "1128080"
  },
  {
    "text": "namespace manage resource support to all providers but we're not removing cluster scope to manage resources",
    "start": "1128080",
    "end": "1133919"
  },
  {
    "text": "so in crossbane v2 we'll consider v1 style clusters scoped uh xrs and v1",
    "start": "1133919",
    "end": "1139280"
  },
  {
    "text": "style clusters scope manage resources to be a legacy feature we intend for you to migrate away from those and start using",
    "start": "1139280",
    "end": "1145039"
  },
  {
    "text": "the name features but you don't have to do that as a forcing function to upgrade to v2 you can install v2 and all of your",
    "start": "1145039",
    "end": "1150880"
  },
  {
    "text": "v1 style stuff will still be supported we did take advantage of the",
    "start": "1150880",
    "end": "1157919"
  },
  {
    "text": "major version update to uh remove some features that have been deprecated for a couple of releases most notably",
    "start": "1157919",
    "end": "1163840"
  },
  {
    "text": "controller config which is a way to configure out providers it's been deprecated for like 11 releases never actually made it out of alpha uh but it",
    "start": "1163840",
    "end": "1170640"
  },
  {
    "text": "was heavily used uh so we finally pulled the band-aid there and so that's now gone in v2 uh and the other one that's",
    "start": "1170640",
    "end": "1176720"
  },
  {
    "text": "been deprecated for two going on three releases is native patch and transform this was the precursor to composition functions so if you are using native",
    "start": "1176720",
    "end": "1182960"
  },
  {
    "text": "patch and transform you do need to switch to composition functions before upgrading to crossplane v2 all right now I'm going to do a quick",
    "start": "1182960",
    "end": "1190320"
  },
  {
    "text": "demo of v2 i need to hand this microphone to Jared so it doesn't make a weird noise all",
    "start": "1190320",
    "end": "1197559"
  },
  {
    "text": "right so for this demo I'm just going to go through the get started composition guide that's in the new V2 docs for",
    "start": "1197559",
    "end": "1203520"
  },
  {
    "text": "crossplay we actually did quite a lot of work revamping the V2 documentation uh I hope that you can see this okay it's",
    "start": "1203520",
    "end": "1209440"
  },
  {
    "text": "about as big as I can make it so we're going to stick with the same app composite resource example our goal here",
    "start": "1209440",
    "end": "1216400"
  },
  {
    "text": "is we're going to create an app that looks like this you can see it's only got one field in spec the image and when",
    "start": "1216400",
    "end": "1222000"
  },
  {
    "text": "the app gets created we want crossplay to create a deployment and a service no manage resources nice and simple just",
    "start": "1222000",
    "end": "1227679"
  },
  {
    "text": "going to create a deployment and a service the uh replicas are going to be",
    "start": "1227679",
    "end": "1232720"
  },
  {
    "text": "copied from the deployment status and the address in the app status is going to be copied from the services status so",
    "start": "1232720",
    "end": "1237840"
  },
  {
    "text": "we need to do three things to uh create this new type of XR this new custom resource in Kubernetes we need to define",
    "start": "1237840",
    "end": "1243280"
  },
  {
    "text": "it we need to install a function and we need to configure how crossplane calls that function so first we define it by",
    "start": "1243280",
    "end": "1250320"
  },
  {
    "text": "creating an XRD defines the schema and teaches crossplane and Kubernetes that this app is the thing that exists it's",
    "start": "1250320",
    "end": "1256480"
  },
  {
    "text": "the X ID that we've got here i'm going to jump around a lot now from these windows i",
    "start": "1256480",
    "end": "1262120"
  },
  {
    "text": "apologize and I have uh this X ID here already so I'm going to create that X ID and just just so you know I'm not lying",
    "start": "1262120",
    "end": "1268720"
  },
  {
    "text": "to you that's the same X ID i promise um now that I've created this XRD Kubernetes knows that app is a thing",
    "start": "1268720",
    "end": "1274720"
  },
  {
    "text": "that exists and Crossplay knows that app is a thing that exists crossplay knows it's responsible for app it knows it should spin up a controller and start",
    "start": "1274720",
    "end": "1280640"
  },
  {
    "text": "reconciling apps but it has no idea what to do if you create one if you create one of these right now crossplay is just going to be like I I don't have an",
    "start": "1280640",
    "end": "1286640"
  },
  {
    "text": "implementation for this i just know I own it so next we need to install a function",
    "start": "1286640",
    "end": "1292480"
  },
  {
    "text": "that teaches Crossplay what to do uh for the purposes of this guide it's kind of more complicated as as Jared",
    "start": "1292480",
    "end": "1298559"
  },
  {
    "text": "touched on before but let's let's assume that uh uh a function is basically a pluggable configuration language that",
    "start": "1298559",
    "end": "1304720"
  },
  {
    "text": "lets you pick what configuration language you want to use to configure crossplane we've got four in this guide uh YAML is a bit boring and I want uh",
    "start": "1304720",
    "end": "1310880"
  },
  {
    "text": "you to pick what function I use so why don't you let me know by show of hands i'll ask for a show of hands in a second",
    "start": "1310880",
    "end": "1316720"
  },
  {
    "text": "would you like Helmstyle templated YAML Python or KCL which is a relatively new CNCF configuration language all right",
    "start": "1316720",
    "end": "1323520"
  },
  {
    "text": "show of hands for Helmstyle templated YAML",
    "start": "1323520",
    "end": "1328520"
  },
  {
    "text": "cool all right show of hands for Python",
    "start": "1330000",
    "end": "1334760"
  },
  {
    "text": "it's good i like Python that's my favorite uh show of hands for KCL oh I think KCL wins though all right",
    "start": "1335919",
    "end": "1343120"
  },
  {
    "text": "what do you think Jared it was pretty even but go with KCL kcl it is um all",
    "start": "1343120",
    "end": "1348480"
  },
  {
    "text": "right so now we would install this function uh I actually cheated because we're in conference Wi-Fi and I will",
    "start": "1348480",
    "end": "1354880"
  },
  {
    "text": "show you that I have actually installed all four of these functions already because crossplay would actually have to download them and I don't want it to",
    "start": "1354880",
    "end": "1360400"
  },
  {
    "text": "fail to download them uh so I what we have now is we've defined the app and we've also installed the function that",
    "start": "1360400",
    "end": "1366880"
  },
  {
    "text": "we're going to call but now we kind of need to connect the two together we need to tell crosswind okay when someone creates an app call this function with",
    "start": "1366880",
    "end": "1372480"
  },
  {
    "text": "this input uh so to know what to do let's jump back over here and then go",
    "start": "1372480",
    "end": "1378000"
  },
  {
    "text": "down to configure the composition and I'll show you what these look like briefly uh templated YAML looks like a",
    "start": "1378000",
    "end": "1383280"
  },
  {
    "text": "Helm chart python looks like Python uh quick note on Python uh some languages",
    "start": "1383280",
    "end": "1390480"
  },
  {
    "text": "actually support you you'll notice that this is like Python inside of a YAML document which is convenient for small and simple cases like this which is",
    "start": "1390480",
    "end": "1396720"
  },
  {
    "text": "pretty gross for more complicated things you probably want syntax highlighting and completion and things like that um for Python you can actually just like",
    "start": "1396720",
    "end": "1402960"
  },
  {
    "text": "write a function in Python and use your IDE so that's that's what I would do for a larger function but this is great for",
    "start": "1402960",
    "end": "1408159"
  },
  {
    "text": "something simple like this and then finally KCL which is what we're going to run with that's what KCL looks like it's",
    "start": "1408159",
    "end": "1414080"
  },
  {
    "text": "kind of a little bit Pythonic so apply composition",
    "start": "1414080",
    "end": "1422559"
  },
  {
    "text": "KCL going to make sure I don't have any other compositions in there great composition's there that means Crossplay knows what to do now when you create an",
    "start": "1422600",
    "end": "1428600"
  },
  {
    "text": "app i've got an app here there's the app super simple",
    "start": "1428600",
    "end": "1435320"
  },
  {
    "text": "all right so I've created that app so now crossplane is saying okay I've got this app i am going to look up what",
    "start": "1435360",
    "end": "1441600"
  },
  {
    "text": "composition I need so it's going to look up and find that there's only one composition it's going to use the KCL one that we just created and then it's",
    "start": "1441600",
    "end": "1447600"
  },
  {
    "text": "going to call function KCL with the input from that composition so let's see how that's",
    "start": "1447600",
    "end": "1452880"
  },
  {
    "text": "going all right that's looking promising oh it's it's actually done already I think so uh you can see here in these",
    "start": "1453159",
    "end": "1460880"
  },
  {
    "text": "events that it's selected the KCL composition that we created before and for a minute the deployment service",
    "start": "1460880",
    "end": "1466480"
  },
  {
    "text": "weren't ready but I can see that it is now synced and true so sync synced as true and ready is true so one of the",
    "start": "1466480",
    "end": "1473679"
  },
  {
    "text": "cool things about this all being namespaced and just like more of a normal Kubernetes resource compared to uh crossplane v1 is I can use the coupe",
    "start": "1473679",
    "end": "1480559"
  },
  {
    "text": "couple cube cuddle tree plugin on the app and it'll show me that the app is",
    "start": "1480559",
    "end": "1485840"
  },
  {
    "text": "true and it'll show the app's composed over deployment and service and all the things that they",
    "start": "1485840",
    "end": "1491240"
  },
  {
    "text": "entail that's ends the demo this is all namespaced hey that's the big change",
    "start": "1491240",
    "end": "1498200"
  },
  {
    "text": "thank you can I I want to come back over here i come back over here um Crossplay V2 is available today jared and I spent",
    "start": "1503440",
    "end": "1509760"
  },
  {
    "text": "a lot of effort on uh revamping the docs for Crossplane V2 as well uh so if you follow this URL or open this QR code",
    "start": "1509760",
    "end": "1516480"
  },
  {
    "text": "which we will show later once we finish the talk um that'll take you to the docs that'll teach you how to get started with crossplane v2 as a preview the",
    "start": "1516480",
    "end": "1523360"
  },
  {
    "text": "reason it's the preview is the actual design is still open we're still waiting to get more feedback from the community we wanted to give you something concrete",
    "start": "1523360",
    "end": "1528880"
  },
  {
    "text": "that you can install and kick the tires on and play around with and let us know if this is the right direction before we commit to it as the as the real future",
    "start": "1528880",
    "end": "1535279"
  },
  {
    "text": "of crossplane v2 i feel pretty good about it personally but I'm really excited to hear what you think uh so",
    "start": "1535279",
    "end": "1541279"
  },
  {
    "text": "definitely give us feedback on crossplane v2 and give us feedback on the new documentation that we've put out now I'll give you back to Jared to wrap",
    "start": "1541279",
    "end": "1547360"
  },
  {
    "text": "it up all right let's close it up here uh thank you Nick for showing us off all",
    "start": "1547360",
    "end": "1552400"
  },
  {
    "text": "that awesome V2 stuff um so you know once again like the project the crossplane project is nothing without",
    "start": "1552400",
    "end": "1557919"
  },
  {
    "text": "its community right um so more contributors are always welcome uh we",
    "start": "1557919",
    "end": "1563279"
  },
  {
    "text": "did recently author like a getting started guide for new contributors so if you go to the crossplane uh GitHub repo",
    "start": "1563279",
    "end": "1568640"
  },
  {
    "text": "it's in the contributing folder right there easy to find um there's a little QR code if you want to scan that too uh",
    "start": "1568640",
    "end": "1573919"
  },
  {
    "text": "but basically it kind of helps you understand the lay of the land of where do we need contributions in crossplane how do you get started with your first",
    "start": "1573919",
    "end": "1579600"
  },
  {
    "text": "contribution um like uh how do you find a good first issue all that sort of",
    "start": "1579600",
    "end": "1584720"
  },
  {
    "text": "stuff uh the docs definitely need help as well so there's a lot of places to pitch in and help out and this is kind",
    "start": "1584720",
    "end": "1589919"
  },
  {
    "text": "of your guide to figure out where to get started and how to become a crossplane contributor you know and key takeaway",
    "start": "1589919",
    "end": "1597039"
  },
  {
    "text": "from this slide crossplane.io go to the website there all these things are linked from there uh you know you can find the docs you can find our repos",
    "start": "1597039",
    "end": "1603360"
  },
  {
    "text": "blog all that sort of stuff so crossplane.io that's where to go to find out other ways to get involved and then",
    "start": "1603360",
    "end": "1609039"
  },
  {
    "text": "final slide here once again V2 this is the call to action folks uh we showed you off all this changes that we think",
    "start": "1609039",
    "end": "1615120"
  },
  {
    "text": "are really helpful to make crossplay more useful more like easier to use lots of great stuff there so try it out we'd",
    "start": "1615120",
    "end": "1621200"
  },
  {
    "text": "love to hear your feedback and thank you everybody for being here today",
    "start": "1621200",
    "end": "1626520"
  },
  {
    "text": "yep i think we got three minutes for questions uh so we will take anybody who has a",
    "start": "1632159",
    "end": "1637720"
  },
  {
    "text": "question yes I saw your hand first i'll come running to you oh you're faster than I am",
    "start": "1637720",
    "end": "1645919"
  },
  {
    "text": "right on hi uh thanks um does crossplane",
    "start": "1645919",
    "end": "1651080"
  },
  {
    "text": "has mechanism for fetching data similar to Terraform's data",
    "start": "1651080",
    "end": "1656640"
  },
  {
    "text": "uh in a way it's got primitives you can use to do that uh it doesn't have uh yet something that's",
    "start": "1656640",
    "end": "1663440"
  },
  {
    "text": "uh exactly the same as Terraform data sources we have two things you can use though we have what we call observe only",
    "start": "1663440",
    "end": "1668559"
  },
  {
    "text": "resources so you can create a resource and crossplane won't actually do anything in the cloud it'll just mirror",
    "start": "1668559",
    "end": "1674399"
  },
  {
    "text": "it back and then on top of that you can write functions that will then sort of load that up and sort of do interesting",
    "start": "1674399",
    "end": "1681600"
  },
  {
    "text": "stuff with it we're it's it's a common request to have something more like data sources and we think we've got the",
    "start": "1681600",
    "end": "1686799"
  },
  {
    "text": "primitives and we're thinking about what we want to do to build something a little bit more convenient than saying you have to write a function to do it so",
    "start": "1686799",
    "end": "1692720"
  },
  {
    "text": "kind of basically okay thank you",
    "start": "1692720",
    "end": "1698840"
  },
  {
    "text": "question anyone",
    "start": "1699520",
    "end": "1703120"
  },
  {
    "text": "else that hi thanks for the prayers I've got a",
    "start": "1705559",
    "end": "1712480"
  },
  {
    "text": "question is there a way to schedule the deployment of various resources or want to deploy one resource pair to another",
    "start": "1712480",
    "end": "1718399"
  },
  {
    "text": "one in corpse plane to schedule the order like [Music] um the deployment phases",
    "start": "1718399",
    "end": "1727200"
  },
  {
    "text": "I I think you were asking basically can you order the updates or creations right uh yes you can so because composition",
    "start": "1727200",
    "end": "1734480"
  },
  {
    "text": "functions are pretty open-ended uh what crossplane will do every time it calls a composition function it will say here's",
    "start": "1734480",
    "end": "1739840"
  },
  {
    "text": "the observed state of the world so you ask me to create a deployment in a service every time it calls the function it'll say hey I've made the service but",
    "start": "1739840",
    "end": "1745760"
  },
  {
    "text": "I'm still waiting on the deployment for example which means it's pretty trivial to add logic to your function to",
    "start": "1745760",
    "end": "1751200"
  },
  {
    "text": "basically say hey just don't create this service until the deployment's created or whatever sort of thing so yes you can",
    "start": "1751200",
    "end": "1757360"
  },
  {
    "text": "um but you do need to by default it doesn't by default it'll just create everything but because we give you a lot",
    "start": "1757360",
    "end": "1762640"
  },
  {
    "text": "of power it's relatively easy to do that and there are certain uh existing opinionated functions that support",
    "start": "1762640",
    "end": "1769440"
  },
  {
    "text": "configuration language that will kind of magically do that for you as well but it's kind of on a function by function layer okay thank you oh and then last",
    "start": "1769440",
    "end": "1776799"
  },
  {
    "text": "question was right over here if you're still here burden wait oh oh there you are",
    "start": "1776799",
    "end": "1784440"
  },
  {
    "text": "okay so is there any way to uh increase uh the reconstellation loop uh interval",
    "start": "1784440",
    "end": "1792159"
  },
  {
    "text": "so we won't get red limited in uh some providers yeah to wait to to like to throttle it",
    "start": "1792159",
    "end": "1800159"
  },
  {
    "text": "or to pause it or those sort of things exactly yeah yes there's a couple of configuration options that every provider exposes that basically allows",
    "start": "1800159",
    "end": "1807360"
  },
  {
    "text": "you to specify how often you want to be syncing resources or you know you can make them go slower basically and then",
    "start": "1807360",
    "end": "1813120"
  },
  {
    "text": "there's also the concept of a pause in crossplane where you can apply a pause annotation to resources and composite",
    "start": "1813120",
    "end": "1819120"
  },
  {
    "text": "resources and stuff and crossplane will stop reconciling it entirely then until you unpausep it exactly what I need",
    "start": "1819120",
    "end": "1824559"
  },
  {
    "text": "thank you so much awesome thank you for the talk yeah and that's never done just a quick follow up on that as well there is another feature that is hopefully",
    "start": "1824559",
    "end": "1831120"
  },
  {
    "text": "going to come out of alpha soon called real-time compositions this is more at the composition layer but um something that can cause things to be reconciled",
    "start": "1831120",
    "end": "1837600"
  },
  {
    "text": "more than you'd like is that at the composition layer where every 30 or 60 seconds polling and just checking",
    "start": "1837600",
    "end": "1843360"
  },
  {
    "text": "everything uh we have an implementation that uses sort of watches or kind of like pub sub uh so that you don't need",
    "start": "1843360",
    "end": "1850080"
  },
  {
    "text": "to be constantly pulling long story short when we get this to beta there'll be fewer reconciles in the system and",
    "start": "1850080",
    "end": "1855360"
  },
  {
    "text": "that's a priority for the soon something but even better cool yeah awesome so",
    "start": "1855360",
    "end": "1860960"
  },
  {
    "text": "that's all the time we have thank you everybody once again come to the booth and hang out more",
    "start": "1860960",
    "end": "1867240"
  }
]