[
  {
    "text": "hi everyone my name is John Osborne here with chain guard I'm going to give you a quick crash course on the six door",
    "start": "1800",
    "end": "8340"
  },
  {
    "text": "policy controller so let me share my screen here and I'll tell you a little bit about",
    "start": "8340",
    "end": "14940"
  },
  {
    "text": "wine here and uh why this talk so",
    "start": "14940",
    "end": "20100"
  },
  {
    "text": "my job at shin guard is to essentially take customers from the Journey of I",
    "start": "20100",
    "end": "26580"
  },
  {
    "text": "want to you know start my software supply chain Journey but now what right and you know I noticed there was a gap",
    "start": "26580",
    "end": "33780"
  },
  {
    "text": "missing in terms of educational content where you know customers would start",
    "start": "33780",
    "end": "39120"
  },
  {
    "text": "using six door to start signing their artifacts start signing their code start",
    "start": "39120",
    "end": "45300"
  },
  {
    "text": "signing s-bombs start signing various attestations or security scans Etc",
    "start": "45300",
    "end": "50660"
  },
  {
    "text": "but you know there wasn't a whole lot of examples out there around you know what",
    "start": "50660",
    "end": "55800"
  },
  {
    "text": "to do next with all that information there's plenty of examples in the six door docs around how to uh and a lot of",
    "start": "55800",
    "end": "63180"
  },
  {
    "text": "other places too around how to verify that a signature exists or that an",
    "start": "63180",
    "end": "68220"
  },
  {
    "text": "attestation exists or that an s-bomb exists but if you actually want to go towards that next step of creating",
    "start": "68220",
    "end": "73680"
  },
  {
    "text": "policies around your custom tooling around the content of some of these",
    "start": "73680",
    "end": "79560"
  },
  {
    "text": "attachments that attestations there's not a ton of things out there so the goal of this talk is to give you a",
    "start": "79560",
    "end": "87000"
  },
  {
    "text": "little bit of insights into a six-store policy controller how it works and then we're going to do a little bit of a",
    "start": "87000",
    "end": "92640"
  },
  {
    "text": "custom attestation by example where we sign a code review and then validate it",
    "start": "92640",
    "end": "98520"
  },
  {
    "text": "one step at a time and kind of build that out and I put all the code examples on a on a GitHub repo which is also I'll",
    "start": "98520",
    "end": "105840"
  },
  {
    "text": "share towards the end of the deck as well all right I'm not going to cover this is",
    "start": "105840",
    "end": "112619"
  },
  {
    "text": "more of a 201 little talk but I'm going to if you're if you're not too familiar with with Sig store I'm going to give",
    "start": "112619",
    "end": "118200"
  },
  {
    "text": "just a quick primer before I get into the policy controller aspect um which is uh the really the focus of",
    "start": "118200",
    "end": "124259"
  },
  {
    "text": "this presentation so Sig store itself you know really if we look at a lot of the software supply",
    "start": "124259",
    "end": "131039"
  },
  {
    "text": "chain threats that are out there where Signet Sig store comes in really is that",
    "start": "131039",
    "end": "137580"
  },
  {
    "text": "um it's very easy to use signing service so you can sign and verify all the handoffs",
    "start": "137580",
    "end": "143520"
  },
  {
    "text": "um and verify a lot of the dependencies that you're pulling into your organization and the idea is that I can",
    "start": "143520",
    "end": "149340"
  },
  {
    "text": "I can close off a Threat Vector by signing something and then verifying on the on the receiving end that something",
    "start": "149340",
    "end": "156959"
  },
  {
    "text": "hasn't been tampered with because I'm going to check the signatures I know the artifact hasn't been tampered with I can",
    "start": "156959",
    "end": "162720"
  },
  {
    "text": "check who signed it I can check some of the attached evidence to it which would",
    "start": "162720",
    "end": "169200"
  },
  {
    "text": "be an attestation for instance a security scan etc etc",
    "start": "169200",
    "end": "174959"
  },
  {
    "text": "so that was very quick um but if you if you look at a lot of the supply chain Frameworks that are out there um salsa",
    "start": "174959",
    "end": "180720"
  },
  {
    "text": "nist CIS there's a bunch of others that have just started to add software Supply",
    "start": "180720",
    "end": "186660"
  },
  {
    "text": "chaining software supply chain um guidance a lot of it really is around",
    "start": "186660",
    "end": "191940"
  },
  {
    "text": "signing in verif and verifying a lot of the different artifacts and handoffs in the environment so at a high level",
    "start": "191940",
    "end": "197459"
  },
  {
    "text": "that's where a six door can come and help because it's very easy to use and it can be automated very very easily for",
    "start": "197459",
    "end": "205739"
  },
  {
    "text": "people and machines to use so the whole really the whole purpose",
    "start": "205739",
    "end": "212640"
  },
  {
    "text": "around six door is that it's easy so that developers don't have to really have to manage Keys anymore so in this",
    "start": "212640",
    "end": "218220"
  },
  {
    "text": "case um this is just a screenshot where I'm signing a random yaml file and the way",
    "start": "218220",
    "end": "224340"
  },
  {
    "text": "it works this is in key list mode there's plenty of ways to sign with with Sig store not just keyless mode you can",
    "start": "224340",
    "end": "230700"
  },
  {
    "text": "automate with a KMS backend you can automate with your existing Keys a number of ways to do it but with keyless",
    "start": "230700",
    "end": "237299"
  },
  {
    "text": "mode what happens is similar to using any third-party app it logs it'll pop up and you can log in with another user or",
    "start": "237299",
    "end": "244200"
  },
  {
    "text": "log in with another identity provider as your user so in this case you can log in with Google or GitHub and then what's",
    "start": "244200",
    "end": "250080"
  },
  {
    "text": "going to happen on the back end is six store is going to take that oidt oidc token that you generated and it's going",
    "start": "250080",
    "end": "256799"
  },
  {
    "text": "to generate you an x509 certificate with the identity that was vetted from the",
    "start": "256799",
    "end": "262620"
  },
  {
    "text": "oidc token and that certificate's gonna be very short-lived in a lot of cases uh",
    "start": "262620",
    "end": "268199"
  },
  {
    "text": "10 minutes and um then you can sign your artifact and the signature will go in an",
    "start": "268199",
    "end": "274800"
  },
  {
    "text": "oci registry if it's a container image it'll go in the git commit if you're signing git commit etc etc",
    "start": "274800",
    "end": "282139"
  },
  {
    "text": "so I mentioned something called git sign that's really an extension of sixstore to sign git commits you can it's under",
    "start": "282600",
    "end": "289500"
  },
  {
    "text": "the six store get signed repo you can it's very easy you can essentially just enable it per repo or per for all your",
    "start": "289500",
    "end": "297479"
  },
  {
    "text": "repos and that's just a one-time thing and then every time you do a git commit it'll automatically pull up that pop-up",
    "start": "297479",
    "end": "303840"
  },
  {
    "text": "box and you can log in and sign your sign your artifacts on your git commits that way and as I mentioned it's stored",
    "start": "303840",
    "end": "310320"
  },
  {
    "text": "in the signature itself will actually be stored in the in the git commit and that's just to look at it uh here on",
    "start": "310320",
    "end": "316680"
  },
  {
    "text": "the right I took a screenshot showing the git log which will actually print out some of the um some of the information uh related to",
    "start": "316680",
    "end": "323580"
  },
  {
    "text": "the signature there now we want",
    "start": "323580",
    "end": "329460"
  },
  {
    "text": "um sixth storing and to be very easy to use so we can sign and verify all these things so I just put together a quick",
    "start": "329460",
    "end": "335280"
  },
  {
    "text": "primer on what the commands would look like but ultimately what you're doing here is really generating this kind of",
    "start": "335280",
    "end": "341460"
  },
  {
    "text": "supply chain metadata so you can if you sign something you'll have a signature if you you might sign certain evidence",
    "start": "341460",
    "end": "348600"
  },
  {
    "text": "like an s-bomb for example because of course you know an s-bomb is no good if it can be tampered with rates you're",
    "start": "348600",
    "end": "354479"
  },
  {
    "text": "gonna you might sign an s-bomb you might sign an attestation around provenance which is really how your code was built",
    "start": "354479",
    "end": "360900"
  },
  {
    "text": "so a lot of tools will spit out you know a lot of information like the git commit that was used or you know some of the",
    "start": "360900",
    "end": "366900"
  },
  {
    "text": "parameters and flags that were passed as part of the build you know you want to have that that body of evidence as your",
    "start": "366900",
    "end": "372720"
  },
  {
    "text": "um you know creating all these handoffs from development to production and it could be something as simple as",
    "start": "372720",
    "end": "378419"
  },
  {
    "text": "you know I ran a trivia scan against my container image or a sneak scan and I want to sign the output right because",
    "start": "378419",
    "end": "384000"
  },
  {
    "text": "later I want to verify that you know there were no critical cdes at the time of the time of scanning or just that I",
    "start": "384000",
    "end": "389639"
  },
  {
    "text": "to know that I just did the output or I just did the signing and I can sign off on that also",
    "start": "389639",
    "end": "395840"
  },
  {
    "text": "uh some big news um within the last couple weeks Six Tour went uh GA so cosine was this was a",
    "start": "396840",
    "end": "403620"
  },
  {
    "text": "little confusing for some people but cosine was already GA but recore and falsio the back end supporting services",
    "start": "403620",
    "end": "410120"
  },
  {
    "text": "specifically around keyless signing those are GA now so that's huge keyless",
    "start": "410120",
    "end": "415139"
  },
  {
    "text": "signings is great just because you can work it in with a lot of existing workflows especially for people adopting",
    "start": "415139",
    "end": "422100"
  },
  {
    "text": "salsa in these Frameworks where you want your build service to sign the artifacts so you can have cryptographic evidence",
    "start": "422100",
    "end": "428220"
  },
  {
    "text": "that something came from the build service and it hasn't been tampered with um now the services themselves going GA",
    "start": "428220",
    "end": "435960"
  },
  {
    "text": "that's huge but you know one of the things that people uh might miss with the announcement which is probably just",
    "start": "435960",
    "end": "441479"
  },
  {
    "text": "as big is the slos and on-call rotation that's happening now so that really started with a GitHub announcement and",
    "start": "441479",
    "end": "447120"
  },
  {
    "text": "partnership to back in August but there's a lot of big companies helping support six door now chin guards just",
    "start": "447120",
    "end": "453240"
  },
  {
    "text": "one of many um and so it's a it's a great project and um you know you can confidently sign",
    "start": "453240",
    "end": "459180"
  },
  {
    "text": "with uh and use six door especially if you look at all the the rapid adoption and uh and and high availability of it",
    "start": "459180",
    "end": "468560"
  },
  {
    "text": "uh another thing too is you know now that six door has gotten uh really just",
    "start": "469259",
    "end": "474300"
  },
  {
    "text": "you know generated that um generated that momentum behind it I wrote a little",
    "start": "474300",
    "end": "479819"
  },
  {
    "text": "script that pulls a lot of the artifacts off artifact Hub and they actually have a six-door uh flag in their API now so",
    "start": "479819",
    "end": "487199"
  },
  {
    "text": "um the last time I checked a week or two ago uh it was over 50 of the artifacts or at least the container images have",
    "start": "487199",
    "end": "493020"
  },
  {
    "text": "already been signed by six door and there's lots of programming languages too that are now adding signing so if I",
    "start": "493020",
    "end": "498060"
  },
  {
    "text": "go to use Python for instance I can validate the digital signature of python using using 64 and that's huge because",
    "start": "498060",
    "end": "504900"
  },
  {
    "text": "now I know that that python hasn't been tampered with and if you if you think about a lot of the way Enterprises kind of bring in",
    "start": "504900",
    "end": "510960"
  },
  {
    "text": "these releases you know it's checksum at Best But even that's kind of a one-time thing and the way things get handed off",
    "start": "510960",
    "end": "516659"
  },
  {
    "text": "internally or moved between enclaves or environments a lot of times you know we're not actually re-betting the",
    "start": "516659",
    "end": "523260"
  },
  {
    "text": "the um our artifacts make sure they haven't been tampered with and the fact that six store is getting used",
    "start": "523260",
    "end": "529380"
  },
  {
    "text": "um at such a high rate you know that's a lot of artifacts that we can validate that haven't been tampered with",
    "start": "529380",
    "end": "537260"
  },
  {
    "text": "so okay so on to the policy controller so the the six door policy controller itself is really a kubernetes",
    "start": "537360",
    "end": "544500"
  },
  {
    "text": "um uh admission web hook it's a it's a validating web hook and it gives you that go or no go aspect to it",
    "start": "544500",
    "end": "552660"
  },
  {
    "text": "now there's a lot of examples as I mentioned in the beginning the beginning of the talk around",
    "start": "552660",
    "end": "558720"
  },
  {
    "text": "um you know signing things with cosine running cosine you know verify verify to",
    "start": "558720",
    "end": "564420"
  },
  {
    "text": "verify the signature you can create an attestation with cosine a test and then you can verify the attestation with",
    "start": "564420",
    "end": "572100"
  },
  {
    "text": "cosine also using the cosine verify attestation command but ultimately if",
    "start": "572100",
    "end": "577620"
  },
  {
    "text": "you want to get more complex outside of just saying that those things exist you",
    "start": "577620",
    "end": "584279"
  },
  {
    "text": "start wanting to write your own policies that might match you know whatever things you have going on with your security posture or compliance or",
    "start": "584279",
    "end": "590519"
  },
  {
    "text": "regulatory Frameworks Etc you might have to create a custom policy and that's",
    "start": "590519",
    "end": "595980"
  },
  {
    "text": "really what the heart of this talk is about so before I get into customization just",
    "start": "595980",
    "end": "601500"
  },
  {
    "text": "want to throw in a few examples of what this might look like now these were actually public examples",
    "start": "601500",
    "end": "607800"
  },
  {
    "text": "um where people put in the logs so I I like to use real examples um this one was is part of salsa and uh",
    "start": "607800",
    "end": "615000"
  },
  {
    "text": "it's really where I think a lot of people are trying to get to so what this is is this would be for salsa level",
    "start": "615000",
    "end": "621060"
  },
  {
    "text": "three and it's um an authenticated and non-falsifiable build service so what that means",
    "start": "621060",
    "end": "627959"
  },
  {
    "text": "is that there's a everyone you know CI CD is not necessarily a novel idea at",
    "start": "627959",
    "end": "633480"
  },
  {
    "text": "this point you know a lot of people have built out CI CD pipelines and things like that but especially in a large",
    "start": "633480",
    "end": "639959"
  },
  {
    "text": "organization there's a lot of ways to get into the front door and a lot of times there's not necessarily",
    "start": "639959",
    "end": "645959"
  },
  {
    "text": "um a check or block that things actually went through the pipeline so what this would do is you you sign the build",
    "start": "645959",
    "end": "653339"
  },
  {
    "text": "service will actually sign itself not not a person would actually come from the build service and then on the",
    "start": "653339",
    "end": "659220"
  },
  {
    "text": "receiving end you could have a policy a six door policy that says I'm using the policy controller that says something",
    "start": "659220",
    "end": "665959"
  },
  {
    "text": "I've authenticated that there's cryptographic evidence that this came from the build service and hasn't been",
    "start": "665959",
    "end": "671160"
  },
  {
    "text": "tampered with so that would be one example another example might be a code review",
    "start": "671160",
    "end": "677420"
  },
  {
    "text": "this is part of salsa but also part of a lot of other Frameworks PCI now released",
    "start": "677420",
    "end": "683760"
  },
  {
    "text": "code reviews as part of their supply chain guidance for um uh for that they just released this",
    "start": "683760",
    "end": "691140"
  },
  {
    "text": "year and this isn't a standardized format yet but this is just one example of it it",
    "start": "691140",
    "end": "696779"
  },
  {
    "text": "might be an attestation which could just be a you know yaml or Json document and then you could validate using signatures",
    "start": "696779",
    "end": "703680"
  },
  {
    "text": "so in this case Dan and Kim both sign and then you could verify that they both signed the status station which would",
    "start": "703680",
    "end": "708839"
  },
  {
    "text": "have some metadata in it for instance and you could use different tools like if you use gitlab or GitHub especially",
    "start": "708839",
    "end": "716100"
  },
  {
    "text": "the Enterprise versions you can do code reviews and then you could have these attestations generated as part of that and attach them to artifacts so later",
    "start": "716100",
    "end": "723480"
  },
  {
    "text": "you have cryptographic evidence that a code review was done for certain things and then you could create policies",
    "start": "723480",
    "end": "728820"
  },
  {
    "text": "around this also last example s-bombs because there",
    "start": "728820",
    "end": "735420"
  },
  {
    "text": "really are a Hot Topic especially with cves that are that are out there now so you know I can sign my s-bomb which is",
    "start": "735420",
    "end": "742140"
  },
  {
    "text": "great because s-bombs aren't helpful if they can be tampered with so sign the s-bomb would would give you that",
    "start": "742140",
    "end": "747959"
  },
  {
    "text": "um that Integrity aspect to it but you might want to create a policy that says the s-bomb exists but then also actually",
    "start": "747959",
    "end": "755160"
  },
  {
    "text": "start validating the content of the s-bomb so in this case this is example A",
    "start": "755160",
    "end": "761160"
  },
  {
    "text": "Blog for Shell so we're just parsing the s-bomb to see if particular versions",
    "start": "761160",
    "end": "766260"
  },
  {
    "text": "that might be affected of the log4j API or log4j core would be part of the",
    "start": "766260",
    "end": "771360"
  },
  {
    "text": "s-bomb and I can create policies based around that and those could be policies that just warn you and flag you or they",
    "start": "771360",
    "end": "778740"
  },
  {
    "text": "could be policies that actually block on how to do that so that's all hypotheticals and not",
    "start": "778740",
    "end": "784920"
  },
  {
    "text": "expecting you to learn this yet I'm going to walk through it at a slower Pace once we actually get to building out the policies",
    "start": "784920",
    "end": "792620"
  },
  {
    "text": "so everything in say store for policy follows this crd called cluster image",
    "start": "793139",
    "end": "799019"
  },
  {
    "text": "policy and there's really three parts to it the first two are mandatory the third",
    "start": "799019",
    "end": "806339"
  },
  {
    "text": "one is not mandatory um the the first two are the first one's very simple it's just what images am I",
    "start": "806339",
    "end": "812579"
  },
  {
    "text": "going to apply this policy to right and so that's a URI to point to a registry I",
    "start": "812579",
    "end": "817680"
  },
  {
    "text": "can put in um wild cards in there if I want to the second piece is the authority so",
    "start": "817680",
    "end": "824459"
  },
  {
    "text": "that's actually what what or who signed them so in this case I'm going to have a",
    "start": "824459",
    "end": "831000"
  },
  {
    "text": "policy that says it had to be signed using six store it doesn't have to be um you know using the keyless signatures",
    "start": "831000",
    "end": "837480"
  },
  {
    "text": "in here this could be some sort of pointer and automation to longer lib keys or KMS using you know gcp or AWS or",
    "start": "837480",
    "end": "845760"
  },
  {
    "text": "whatever it may be there's a whole bunch of options in here the other piece to it is who signed it and that's really",
    "start": "845760",
    "end": "852420"
  },
  {
    "text": "important and I think I'll just pause there for a second because I think that's a pretty big fundamental difference between",
    "start": "852420",
    "end": "858959"
  },
  {
    "text": "typical you know signing that you may be used to and you know moving into more of a supply chain framework",
    "start": "858959",
    "end": "865980"
  },
  {
    "text": "um component to it so and what I mean by that is historically the way things have",
    "start": "865980",
    "end": "871440"
  },
  {
    "text": "normally been signed you really care more about the key because you're managing the key so you care more about",
    "start": "871440",
    "end": "876899"
  },
  {
    "text": "the private key and then you know validating that with the public key when",
    "start": "876899",
    "end": "881940"
  },
  {
    "text": "you go into adopt a supply chain framework you're not necessarily managing the keys all the time and",
    "start": "881940",
    "end": "887760"
  },
  {
    "text": "because things can be automated you do have a more granular identity associated",
    "start": "887760",
    "end": "893760"
  },
  {
    "text": "with the key so you know if we're being honest in a lot of you know Enterprise signing scenarios you know up until now",
    "start": "893760",
    "end": "901199"
  },
  {
    "text": "probably even include in that right A lot of times key is getting issued and they're not very",
    "start": "901199",
    "end": "906360"
  },
  {
    "text": "um granular it might be the it might be you know have a wider net as the entire",
    "start": "906360",
    "end": "912360"
  },
  {
    "text": "build service uses um the entire pipeline uses the same key right and a lot of times",
    "start": "912360",
    "end": "918260"
  },
  {
    "text": "especially more regulated organizations they probably don't even trust their developers with a key so you're not",
    "start": "918260",
    "end": "924600"
  },
  {
    "text": "really validating those developers signed it you might be um validating that they push somewhere and did something else right but with",
    "start": "924600",
    "end": "931500"
  },
  {
    "text": "sixstore you can get a lot more granular than that so this is a policy that we use internally at chain guard where we",
    "start": "931500",
    "end": "937440"
  },
  {
    "text": "make sure that if you want to sign a if you want to push a git commit to any of",
    "start": "937440",
    "end": "942959"
  },
  {
    "text": "our products this is something that we use this is actually the policy that we use is you have to authenticate and sign",
    "start": "942959",
    "end": "948660"
  },
  {
    "text": "you have to authenticate with Google and with hingard.dev email address which essentially means we use Google as our",
    "start": "948660",
    "end": "955279"
  },
  {
    "text": "authentication provider so essentially with our identity providers so essentially what that means is you have",
    "start": "955279",
    "end": "960720"
  },
  {
    "text": "to have a chain guard Dev email address and and sign in with it in order to",
    "start": "960720",
    "end": "966660"
  },
  {
    "text": "generate a valid uh signature now the third part is the optional",
    "start": "966660",
    "end": "972120"
  },
  {
    "text": "component to it those are attestations so I like to think of that as attachments or evidence and again that's",
    "start": "972120",
    "end": "978480"
  },
  {
    "text": "not necessarily a mandatory field but if you wanted to for instance you know sign",
    "start": "978480",
    "end": "984240"
  },
  {
    "text": "in spdx document and then you could create attestations around that so that would be okay I want to search for a",
    "start": "984240",
    "end": "990120"
  },
  {
    "text": "specific cve as an example that would be an attestation that you could sign and create a policy around",
    "start": "990120",
    "end": "997259"
  },
  {
    "text": "now the way these work is with a six door policy controller if you want to",
    "start": "997259",
    "end": "1002660"
  },
  {
    "text": "deploy an image to kubernetes it essentially works like this if you",
    "start": "1002660",
    "end": "1008079"
  },
  {
    "text": "if a single a single policy will pass if any Authority has signed to these things",
    "start": "1008079",
    "end": "1014300"
  },
  {
    "text": "now you can put in a whole and why why I say that is because you can put in a whole array of keys that would be valid",
    "start": "1014300",
    "end": "1020720"
  },
  {
    "text": "and attestations that would be valid if any of the valid Keys have signed any of the valid attestations that you include",
    "start": "1020720",
    "end": "1027500"
  },
  {
    "text": "well then it will pass if there's if you have multiple different policies well",
    "start": "1027500",
    "end": "1033980"
  },
  {
    "text": "then they all need to pass so if you had you know for instance a policy that says everything has to be signed by chain",
    "start": "1033980",
    "end": "1039558"
  },
  {
    "text": "guard but then you had another policy that said don't admit anything with the log for Shell vulnerability then it",
    "start": "1039559",
    "end": "1046459"
  },
  {
    "text": "would it would block um and I put a couple references down here if you wanted to go see what all",
    "start": "1046459",
    "end": "1052160"
  },
  {
    "text": "the fields could be but those are really at a high level it's these three components what am I what are the images",
    "start": "1052160",
    "end": "1057799"
  },
  {
    "text": "what are the signatures and what are the attachments really",
    "start": "1057799",
    "end": "1062440"
  },
  {
    "text": "now the way you turn this on and this is uh somewhat new also so in kubernetes",
    "start": "1063799",
    "end": "1069980"
  },
  {
    "text": "the way it'll enforce is by by namespace labels and that's the way it's been done",
    "start": "1069980",
    "end": "1075200"
  },
  {
    "text": "since early on in six store so I can just create a label for my namespace using policy sixstore.dev slash include",
    "start": "1075200",
    "end": "1083240"
  },
  {
    "text": "set that to true and it'll start go into enforcing mode if I wanted to do a break glass scenario",
    "start": "1083240",
    "end": "1089960"
  },
  {
    "text": "for instance you know coming in on the weekends and I don't want anything to block anymore whatever that may be I can just remove that label",
    "start": "1089960",
    "end": "1096620"
  },
  {
    "text": "assuming I'm I have that permission set up you know I'm a cluster administrator and that can do that now one thing that",
    "start": "1096620",
    "end": "1103940"
  },
  {
    "text": "just got pushed within the last few weeks so this might be new even if you're you know not new to six store uh",
    "start": "1103940",
    "end": "1109580"
  },
  {
    "text": "you might not have seen this unless you're following GitHub all the time is there is a more granular label selector",
    "start": "1109580",
    "end": "1114919"
  },
  {
    "text": "now so I can set things uh on a per namespace instance but I can also you",
    "start": "1114919",
    "end": "1120740"
  },
  {
    "text": "know have policies that apply to stateful sets or um deployments and and I can get a lot",
    "start": "1120740",
    "end": "1126620"
  },
  {
    "text": "more granular with that also now there's a lot there's a lot of images a lot of um examples of how to uh",
    "start": "1126620",
    "end": "1134960"
  },
  {
    "text": "create policies for images that are Upstream some of them are entering uh spread across a couple repos in the six",
    "start": "1134960",
    "end": "1141020"
  },
  {
    "text": "door repository we've also been creating a lot of these internally for customers",
    "start": "1141020",
    "end": "1146360"
  },
  {
    "text": "our goal is to push all these Upstream so look for that in the near future also",
    "start": "1146360",
    "end": "1152059"
  },
  {
    "text": "so if we create new policies for specific cves or other things that are that are out our goal is to start just",
    "start": "1152059",
    "end": "1157700"
  },
  {
    "text": "pushing these all into the six door repo we don't really want there to be secret sauce around that it should be",
    "start": "1157700",
    "end": "1164360"
  },
  {
    "text": "um the policy should be available for anybody to use",
    "start": "1164360",
    "end": "1168460"
  },
  {
    "text": "so uh also this is um somewhat new also is you can add",
    "start": "1169720",
    "end": "1175640"
  },
  {
    "text": "um for the cluster image policy you can actually add different modes so on a per policy basis and this will",
    "start": "1175640",
    "end": "1182539"
  },
  {
    "text": "be new for a lot of people but you can actually create um uh policies around what you want to",
    "start": "1182539",
    "end": "1188240"
  },
  {
    "text": "do when something does match so if you label the namespace I think by default what's going to happen is if the",
    "start": "1188240",
    "end": "1194600"
  },
  {
    "text": "namespace is labeled and the policy fails well then you'll be denied but you can set that to one mode which is really",
    "start": "1194600",
    "end": "1201620"
  },
  {
    "text": "helpful too if you want you know certain policies to be admitted but to flag a system somewhere but you don't",
    "start": "1201620",
    "end": "1207799"
  },
  {
    "text": "necessarily want to block or slow down based around the security posture right so that that's something that you can set on a per cluster basis or an A per",
    "start": "1207799",
    "end": "1215720"
  },
  {
    "text": "policy basis now building the cluster image policy",
    "start": "1215720",
    "end": "1223220"
  },
  {
    "text": "you'll see that there's some examples that are out there but they're pretty uh rudimentary I'd say",
    "start": "1223220",
    "end": "1229520"
  },
  {
    "text": "um you know you can look at these first two examples there's a million examples that'll show you just how to set up the",
    "start": "1229520",
    "end": "1235340"
  },
  {
    "text": "images and Authority Section you can also create a catch-all if you want to for you know static pass fail for",
    "start": "1235340",
    "end": "1242660"
  },
  {
    "text": "certain things all that's built in there but really the adaptations is where I want to focus most of this talk and",
    "start": "1242660",
    "end": "1249260"
  },
  {
    "text": "there's built-in schemas for things like spdx for things like Cyclone DX there's",
    "start": "1249260",
    "end": "1255980"
  },
  {
    "text": "built-in support for in Toto which is an attestation format but you also might just want to sign you know the ad",
    "start": "1255980",
    "end": "1262160"
  },
  {
    "text": "stations could be anything right so they could be just random Json that you have in-house tools and you want to build",
    "start": "1262160",
    "end": "1267320"
  },
  {
    "text": "policies around those outputs whatever it may be but you might notice this and",
    "start": "1267320",
    "end": "1272360"
  },
  {
    "text": "if you're if you look down the bottom the types can be in Rego or q and you",
    "start": "1272360",
    "end": "1279260"
  },
  {
    "text": "know Q is incredibly powerful language and so I'm going to give you a quick primer on how to validate some of this",
    "start": "1279260",
    "end": "1285140"
  },
  {
    "text": "some of these policies using queue for the rest of this talk",
    "start": "1285140",
    "end": "1290500"
  },
  {
    "text": "so at a high level now I think one of the things the gaps that it exists",
    "start": "1290960",
    "end": "1296059"
  },
  {
    "text": "probably if we're being fair in queue is that it's incredibly powerful but a lot",
    "start": "1296059",
    "end": "1301159"
  },
  {
    "text": "of the things that you can do with it are if you go look at the docs or I'll um you know kind of lumped together I",
    "start": "1301159",
    "end": "1308360"
  },
  {
    "text": "guess you could say and so if you but if you only care about creating six store policies you really only care about using Q for data validation now it's",
    "start": "1308360",
    "end": "1316460"
  },
  {
    "text": "it's really powerful if you look at a lot of the examples that are out there with q q can be used to generate",
    "start": "1316460",
    "end": "1322000"
  },
  {
    "text": "artifacts like terraform modules or ansible modules which I've seen we're actually used looking at it internally",
    "start": "1322000",
    "end": "1328159"
  },
  {
    "text": "to generate some of our artifacts as well um but for the Paul for the point of six",
    "start": "1328159",
    "end": "1333380"
  },
  {
    "text": "door policies you really only care about doing data validation so a few things",
    "start": "1333380",
    "end": "1338840"
  },
  {
    "text": "that you need to know the most about for data validation is that first is it's a superset",
    "start": "1338840",
    "end": "1344360"
  },
  {
    "text": "um of Json and that's great because then you can if you have an existing Json or",
    "start": "1344360",
    "end": "1350360"
  },
  {
    "text": "Json schema even better it becomes incredibly easy so if you have a tool that has a Json schema there's actually",
    "start": "1350360",
    "end": "1356659"
  },
  {
    "text": "a queue import commands that actually gives convert that entirely to Q if you want and then validate it in the dock if",
    "start": "1356659",
    "end": "1362000"
  },
  {
    "text": "you have random Json that you want to match against the policy the Q policy for data validation can actually just be",
    "start": "1362000",
    "end": "1367940"
  },
  {
    "text": "raw Json if you want to that's perfectly valid to do that also so it makes it very easy to adopt because virtually any",
    "start": "1367940",
    "end": "1374539"
  },
  {
    "text": "tool will output Json or something that can be converted to Json um the second is that it treats types",
    "start": "1374539",
    "end": "1381500"
  },
  {
    "text": "and values the same and you'll see that as as I do the validation so I can set something to be a string or I can set it",
    "start": "1381500",
    "end": "1388460"
  },
  {
    "text": "and then I can set it something uh more uh specific like for instance you know",
    "start": "1388460",
    "end": "1393559"
  },
  {
    "text": "the string might be my email address right and then I can create policies um that just get more granular as we go",
    "start": "1393559",
    "end": "1401840"
  },
  {
    "text": "um another piece is that it the order is irrelevant and so that's actually really helpful from a",
    "start": "1401840",
    "end": "1407539"
  },
  {
    "text": "um from a validation perspective because well one it just makes it less brittle but two if you get something really",
    "start": "1407539",
    "end": "1413840"
  },
  {
    "text": "complicated and there's a lot of inferred values well you can use this command which I'll demo for you or I get",
    "start": "1413840",
    "end": "1420620"
  },
  {
    "text": "a screen screenshot at least called trim Q trim there's a command line tool for Q and it'll remove all those things and",
    "start": "1420620",
    "end": "1427760"
  },
  {
    "text": "condense things very nicely and so it's a lot more easily uh readable uh and then you know Q's just very",
    "start": "1427760",
    "end": "1435500"
  },
  {
    "text": "flexible so you can create if you want things to be open for instance which you know if you're using Json you probably",
    "start": "1435500",
    "end": "1440780"
  },
  {
    "text": "do because there might be more Fields later or you can be uh very specific and have things closed that's really all up",
    "start": "1440780",
    "end": "1446179"
  },
  {
    "text": "to you so I wanted to walk through a specific example um and how it uh and how it builds out",
    "start": "1446179",
    "end": "1453860"
  },
  {
    "text": "um but I'm going to give you a little bit more material just so you can validate what some of the stuff is so Q",
    "start": "1453860",
    "end": "1460940"
  },
  {
    "text": "is a Json superset that's great opens up big big ecosystem",
    "start": "1460940",
    "end": "1466700"
  },
  {
    "text": "um I'm I don't program and go every day right so there's a lot of go extensions",
    "start": "1466700",
    "end": "1471860"
  },
  {
    "text": "where it can take a lot of uh you know open open API schemas and um you know",
    "start": "1471860",
    "end": "1477860"
  },
  {
    "text": "different things that might be have first class support and go and create you know Q data you know schemas and",
    "start": "1477860",
    "end": "1485600"
  },
  {
    "text": "things right that's great but I'm not a go programmer and I don't want to write a bunch of code just to validate a",
    "start": "1485600",
    "end": "1491000"
  },
  {
    "text": "policy right so Q has this great command line tool that you can download on their page and it's really helpful for",
    "start": "1491000",
    "end": "1496640"
  },
  {
    "text": "validating policies because if I have something with an existing Json schema that's great because I can just write Q",
    "start": "1496640",
    "end": "1503299"
  },
  {
    "text": "import and it'll output the queue if I have Q code I can just do Q output and",
    "start": "1503299",
    "end": "1510559"
  },
  {
    "text": "it'll output Json for me and then if I want to do some validation without using my images or anything at all just to you",
    "start": "1510559",
    "end": "1518480"
  },
  {
    "text": "know shift left and get um get you know that feedback loop to be really kind of lightweight I can just use qebell and",
    "start": "1518480",
    "end": "1524900"
  },
  {
    "text": "evaluate Json locally on my machine also so that's really helpful from that",
    "start": "1524900",
    "end": "1532039"
  },
  {
    "text": "perspective I mentioned that it ignores the orders",
    "start": "1532039",
    "end": "1537080"
  },
  {
    "text": "of the rules so this is a policy you also have to know or care too much about",
    "start": "1537080",
    "end": "1542360"
  },
  {
    "text": "what the syntax of it but what this policy is doing here on the right is it's",
    "start": "1542360",
    "end": "1547580"
  },
  {
    "text": "um it's checking against a serif so serif is an oasis standard for SAS Tools around standardizing some other output",
    "start": "1547580",
    "end": "1554840"
  },
  {
    "text": "and some some uh security scanning tools like in this case I use trivia can",
    "start": "1554840",
    "end": "1561380"
  },
  {
    "text": "output into serif which is great because if you have a bespoke tool you can write your own policy for it and that's easy",
    "start": "1561380",
    "end": "1567320"
  },
  {
    "text": "to do but if you have something that puts in a standardized format like serif well then you can use the same policy to",
    "start": "1567320",
    "end": "1572720"
  },
  {
    "text": "validate against multiple different outputs and so in this case I've got a tribute I had a tribute scan although",
    "start": "1572720",
    "end": "1578720"
  },
  {
    "text": "the output standardized and it's just going to look for cves with this score higher than 9.0 which would be a",
    "start": "1578720",
    "end": "1584419"
  },
  {
    "text": "critical cves and just since the the order is ignored",
    "start": "1584419",
    "end": "1589520"
  },
  {
    "text": "it's really helpful because it can reduce a lot of the boilerplate code you don't really want anything to be",
    "start": "1589520",
    "end": "1595580"
  },
  {
    "text": "um any uglier than it than it already is right um especially when we're looking at Json outputs and things we want things to be",
    "start": "1595580",
    "end": "1601279"
  },
  {
    "text": "concise and human readable uh and then because of that you can also",
    "start": "1601279",
    "end": "1607400"
  },
  {
    "text": "run Q trim so in this case I ran Q trim on that last one and it made things uh",
    "start": "1607400",
    "end": "1612740"
  },
  {
    "text": "you know a lot easier to read here if I had a lot of inferred values here well it could have given cropped those out so",
    "start": "1612740",
    "end": "1619039"
  },
  {
    "text": "it could even crop those down more but in this case I I pretty much always run Q trim just to have the most concise uh",
    "start": "1619039",
    "end": "1626059"
  },
  {
    "text": "policy that I that I need I don't really want any more text than I need in there",
    "start": "1626059",
    "end": "1632620"
  },
  {
    "text": "great so let's build this out in action I'm gonna go slow for this part but I'm not",
    "start": "1634640",
    "end": "1640820"
  },
  {
    "text": "expecting you know I wouldn't expect anybody to learn Q just from this presentation but my goal is to help you",
    "start": "1640820",
    "end": "1647960"
  },
  {
    "text": "learn uh what you can do with q kind of what it looks like and then give",
    "start": "1647960",
    "end": "1654200"
  },
  {
    "text": "you some examples and really just get you started if you have specific examples you know feel free to just tag",
    "start": "1654200",
    "end": "1659840"
  },
  {
    "text": "me in the six door slack I'll reply in there I'm happy to you know help anyone",
    "start": "1659840",
    "end": "1664880"
  },
  {
    "text": "that gets stuck we're also working with a Q team to get more examples that are out there but we want I think a good",
    "start": "1664880",
    "end": "1671659"
  },
  {
    "text": "goal what I'd like to get to is to the point where if you want to do anything that's not",
    "start": "1671659",
    "end": "1677299"
  },
  {
    "text": "um you know completely off the off the grid then there should be an example for at least to start with and",
    "start": "1677299",
    "end": "1683720"
  },
  {
    "text": "um and generate artifacts based around that you should be able to Fork something",
    "start": "1683720",
    "end": "1688940"
  },
  {
    "text": "essentially and make minimal changes to it unless you want to get really deep into the uh into the doing something",
    "start": "1688940",
    "end": "1695000"
  },
  {
    "text": "really custom so in this case I've got a code review format which uh this is just a sample",
    "start": "1695000",
    "end": "1702260"
  },
  {
    "text": "format that I've created and essentially we're going to validate three things incrementally and I'll talk about how to",
    "start": "1702260",
    "end": "1709640"
  },
  {
    "text": "do that and what this policy would look like so the first thing I'm going to do is validate this repository format here",
    "start": "1709640",
    "end": "1717100"
  },
  {
    "text": "then I'm going to validate that my email for the author came from example.com",
    "start": "1717100",
    "end": "1722360"
  },
  {
    "text": "because I don't want any I don't want code coming into my production environment unless it was written by my",
    "start": "1722360",
    "end": "1728840"
  },
  {
    "text": "company which is example.com and this one in this sense and then I want it to be to peer-reviewed so uh in this case",
    "start": "1728840",
    "end": "1735380"
  },
  {
    "text": "all I'm going to check is that the reviewer was not the same person as the",
    "start": "1735380",
    "end": "1740419"
  },
  {
    "text": "author so we want to make sure that the review is independent",
    "start": "1740419",
    "end": "1745600"
  },
  {
    "text": "so before I get into actually checking their repo I wanted to point this out",
    "start": "1745940",
    "end": "1751940"
  },
  {
    "text": "because this is um this is very important if you plan to create any custom policies make sure you",
    "start": "1751940",
    "end": "1757400"
  },
  {
    "text": "pay attention to this slide so in my example and if I click on this log here",
    "start": "1757400",
    "end": "1763179"
  },
  {
    "text": "it'll take me to the public recore instance where you can see where I signed this code review",
    "start": "1763179",
    "end": "1768620"
  },
  {
    "text": "and this link will work in the in the deck it's also in the readme which I put on the GitHub repo with all these",
    "start": "1768620",
    "end": "1774620"
  },
  {
    "text": "examples in it too but you'll notice when I sign this I use if I go back a",
    "start": "1774620",
    "end": "1780620"
  },
  {
    "text": "sec here I ran cosine a test so cosine the command line tool I tested to this",
    "start": "1780620",
    "end": "1786640"
  },
  {
    "text": "and I gave it the specific command I gave will be on the um will be on the",
    "start": "1786640",
    "end": "1792260"
  },
  {
    "text": "readme but and then I passed it this uh this Json file here as the predicate so",
    "start": "1792260",
    "end": "1799039"
  },
  {
    "text": "what it did was it put took that Json and put it inside a in Toto attestation",
    "start": "1799039",
    "end": "1806360"
  },
  {
    "text": "and when I want to validate this there's really just two Fields there's this data field and there's this timestamp field",
    "start": "1806360",
    "end": "1812720"
  },
  {
    "text": "now this might look a little new to you if you use cosine of test before because if you run cosine on the command line uh",
    "start": "1812720",
    "end": "1819919"
  },
  {
    "text": "and you're testing known formats it's not going to be all packed in here but the purposes of custom attestations and",
    "start": "1819919",
    "end": "1826100"
  },
  {
    "text": "using the six store controller everything just kind of gets put in this big string but don't worry it's still it's not a big deal at all there's",
    "start": "1826100",
    "end": "1832760"
  },
  {
    "text": "built-in tools to help fix that so really you have two options now you",
    "start": "1832760",
    "end": "1840020"
  },
  {
    "text": "can just parse that string out using Q so you can create a policy that just parses the string on the left in this",
    "start": "1840020",
    "end": "1846380"
  },
  {
    "text": "case I'm just using a regex so you know wouldn't expect anyone to necessarily know regex I know I always have to",
    "start": "1846380",
    "end": "1853220"
  },
  {
    "text": "Google regex format pretty much off the top of offline but on the left what I'm doing",
    "start": "1853220",
    "end": "1859340"
  },
  {
    "text": "is I'm just setting a simple policy to parse the string there now that'll this policy on the left will fail if the",
    "start": "1859340",
    "end": "1866000"
  },
  {
    "text": "phrase bad bad bad two bads are okay but three bads is just over the line so",
    "start": "1866000",
    "end": "1871340"
  },
  {
    "text": "um it all fails policy if it's got bad bad bad now this is usually good enough for a lot of things especially for",
    "start": "1871340",
    "end": "1878659"
  },
  {
    "text": "people just starting off because they might just want to validate that",
    "start": "1878659",
    "end": "1884240"
  },
  {
    "text": "um that something exists in the attestation or doesn't exist in the attestation and a lot of times a really common way to do",
    "start": "1884240",
    "end": "1891020"
  },
  {
    "text": "this might be you might be checking for a specific version of software or something in your s-bomb if you just",
    "start": "1891020",
    "end": "1897799"
  },
  {
    "text": "care that the pattern for that that specific file or thing you were looking at",
    "start": "1897799",
    "end": "1902960"
  },
  {
    "text": "was in the s-bomb all you have to do is here is only have to just write a regex that checks against that so it's very",
    "start": "1902960",
    "end": "1908539"
  },
  {
    "text": "very simple but if you want to check",
    "start": "1908539",
    "end": "1913820"
  },
  {
    "text": "um that things are nested inside element inside other elements you really want to do something very powerful with q q can",
    "start": "1913820",
    "end": "1922100"
  },
  {
    "text": "do a lot more things and Json can do there's logic to it there's you can even create conditional things in here that",
    "start": "1922100",
    "end": "1929600"
  },
  {
    "text": "would you know potentially do for loops and things like that but there's built-in tools to do that so",
    "start": "1929600",
    "end": "1935720"
  },
  {
    "text": "if you remember it was just one big long ugly string I can create another element in here",
    "start": "1935720",
    "end": "1942039"
  },
  {
    "text": "that and use a built-in Json encoder that comes as part of queue and create a",
    "start": "1942039",
    "end": "1948020"
  },
  {
    "text": "Json what they call a struct and then once I create a struct well then I can just start",
    "start": "1948020",
    "end": "1953480"
  },
  {
    "text": "um use that built-in Q package to create the Json and then I can start validating it just like I would using any other",
    "start": "1953480",
    "end": "1959500"
  },
  {
    "text": "queue aspect for Json and again if he was a Json superset so I could even put",
    "start": "1959500",
    "end": "1965120"
  },
  {
    "text": "raw Json in here if I wanted to so the first thing I'm going to do is",
    "start": "1965120",
    "end": "1972320"
  },
  {
    "text": "validate the repository so in this case I want to validate three things I want to validate that the branch is set to",
    "start": "1972320",
    "end": "1980059"
  },
  {
    "text": "either main or origin slash main that is just in queue is pretty simple",
    "start": "1980059",
    "end": "1985340"
  },
  {
    "text": "it's just that or bar we should all be familiar with that the second thing I'm going to do is I want to know that the",
    "start": "1985340",
    "end": "1992659"
  },
  {
    "text": "URI is came from my company so I want or my organization in GitHub so in this",
    "start": "1992659",
    "end": "1998600"
  },
  {
    "text": "case it's going to be the URI has to be github.com example because that's my",
    "start": "1998600",
    "end": "2004260"
  },
  {
    "text": "organizational uh GitHub my GitHub organization and then the third thing is that type",
    "start": "2004260",
    "end": "2011140"
  },
  {
    "text": "which you can see in the example is set to get I'm going to let that just be any old string that's perfectly fine",
    "start": "2011140",
    "end": "2016899"
  },
  {
    "text": "anything can be put in there because I don't necessarily know what that type might I don't know all the options that",
    "start": "2016899",
    "end": "2023019"
  },
  {
    "text": "type might be so I just put that little question mark in there and that'll allow for that and then since this is a I'm",
    "start": "2023019",
    "end": "2029919"
  },
  {
    "text": "creating essentially a schema here by adding the what they call a definition in queue with this hashtag and if I",
    "start": "2029919",
    "end": "2038260"
  },
  {
    "text": "don't add these dot dot dots it'll be what's called a closed struct which means that everything has to match",
    "start": "2038260",
    "end": "2044740"
  },
  {
    "text": "exactly but I won't be able to add more Fields later so typically what I like to do is add the dots just because which",
    "start": "2044740",
    "end": "2051398"
  },
  {
    "text": "makes the definition open so that way if you're if you're using Json there's a good chance that you might be adding",
    "start": "2051399",
    "end": "2057040"
  },
  {
    "text": "more things to a schema later so I like to uh have that flexibility",
    "start": "2057040",
    "end": "2062800"
  },
  {
    "text": "so in this case I'm going to check that predicate data so I'll just just like in",
    "start": "2062800",
    "end": "2068080"
  },
  {
    "text": "the last example I've got Json data here I'll Marshall it and then I'll just make sure that there's a repo field embedded",
    "start": "2068080",
    "end": "2074980"
  },
  {
    "text": "in that Json that matches this schema so I will",
    "start": "2074980",
    "end": "2081060"
  },
  {
    "text": "run that for you against this example",
    "start": "2081060",
    "end": "2086700"
  },
  {
    "text": "I'm only sharing my in here",
    "start": "2087820",
    "end": "2095099"
  },
  {
    "text": "and I'll share the rest of my screen to do that",
    "start": "2096280",
    "end": "2100980"
  },
  {
    "text": "sorry you have to look at me for a second all right",
    "start": "2114460",
    "end": "2120339"
  },
  {
    "text": "so I'm just going to write cosine verify I'm going to",
    "start": "2120339",
    "end": "2125920"
  },
  {
    "text": "add the repo check which was the um which was the queue statement that I",
    "start": "2125920",
    "end": "2131380"
  },
  {
    "text": "just showed you in the presentation and then I'll give it the slash type for custom and when we run this",
    "start": "2131380",
    "end": "2138579"
  },
  {
    "text": "it should verify and you'll see this we'll be validating against the queue signatures repo Dash check Dash queue",
    "start": "2138579",
    "end": "2147099"
  },
  {
    "text": "and then there's a bunch of garbly goop down here if I wanted to print this out to see what it looks like I can just use",
    "start": "2147099",
    "end": "2154359"
  },
  {
    "text": "JQ to do that and I think it would look",
    "start": "2154359",
    "end": "2160300"
  },
  {
    "text": "like this looks like",
    "start": "2160300",
    "end": "2167940"
  },
  {
    "text": "let's see",
    "start": "2169800",
    "end": "2173040"
  },
  {
    "text": "okay and I'll set that to",
    "start": "2181000",
    "end": "2187500"
  },
  {
    "text": "unfortunately it was encoded twice so let me see if I think I kept the command inside my",
    "start": "2193359",
    "end": "2199900"
  },
  {
    "text": "readme here so I'll check that",
    "start": "2199900",
    "end": "2203760"
  },
  {
    "text": "here we go all right",
    "start": "2206320",
    "end": "2210540"
  },
  {
    "text": "went off the grid somewhere",
    "start": "2211900",
    "end": "2215279"
  },
  {
    "text": "so there we go so that was the existing um Json which you saw in the code review and this part of the validation for the",
    "start": "2218740",
    "end": "2226420"
  },
  {
    "text": "repo check is just checking making sure that the repo follows that format it's got the Json needs a repo struct and it",
    "start": "2226420",
    "end": "2234339"
  },
  {
    "text": "needs to have a type field that's set to anything it needs to have the URI set to github.com example and it's got to have",
    "start": "2234339",
    "end": "2242079"
  },
  {
    "text": "a branch that is set to main or origin mean all right",
    "start": "2242079",
    "end": "2247540"
  },
  {
    "text": "next example",
    "start": "2247540",
    "end": "2250680"
  },
  {
    "text": "so second one is a lot simpler if I come up here all we're saying now is just the author",
    "start": "2255460",
    "end": "2262839"
  },
  {
    "text": "the author has to be a string and they have to have an email address that came from example.com because I want them to",
    "start": "2262839",
    "end": "2270640"
  },
  {
    "text": "you know be someone that works for my company of course so I can create that definition for that schema and then",
    "start": "2270640",
    "end": "2278200"
  },
  {
    "text": "all I'm going to do down here is just make sure that this Json has an author field and that author field equals the",
    "start": "2278200",
    "end": "2284440"
  },
  {
    "text": "author uh structure from um from my definition here so not too",
    "start": "2284440",
    "end": "2290980"
  },
  {
    "text": "difficult um just making sure the author is a string and it's got a string that ends with it at example.com",
    "start": "2290980",
    "end": "2297940"
  },
  {
    "text": "and you can see that's regex here more regex",
    "start": "2297940",
    "end": "2302820"
  },
  {
    "text": "so come back to my example here and",
    "start": "2302980",
    "end": "2310060"
  },
  {
    "text": "oh I'm gonna check changes the policy",
    "start": "2310060",
    "end": "2314579"
  },
  {
    "text": "file which is the queue this is just for checking locally I'll show you how to move this into the uh",
    "start": "2315220",
    "end": "2323079"
  },
  {
    "text": "into the repo or into the six-star policy controller when we get towards the end and you can see yep it validated",
    "start": "2323079",
    "end": "2330339"
  },
  {
    "text": "against that key policy author Dash email next let's see",
    "start": "2330339",
    "end": "2339480"
  },
  {
    "text": "finally the third thing I'm going to do is check that the it's an independent review so I'm going to check take the",
    "start": "2340480",
    "end": "2347079"
  },
  {
    "text": "author field which we already know is a string from the previous example and then I'm just going to make sure that this reviewer field that's also a string",
    "start": "2347079",
    "end": "2353500"
  },
  {
    "text": "and that they don't equal each other and this is a differentiator between Json and Q you wouldn't be able to really",
    "start": "2353500",
    "end": "2360880"
  },
  {
    "text": "compare Fields just doing raw Json right you just be able to know if they had certain you know traits about them but",
    "start": "2360880",
    "end": "2368140"
  },
  {
    "text": "with Q I can make sure that I can actually compare these values which makes it really powerful so I have a",
    "start": "2368140",
    "end": "2374020"
  },
  {
    "text": "reviewer and it's going to not equal the author there and then when I put this embed this down",
    "start": "2374020",
    "end": "2380920"
  },
  {
    "text": "inside my Json data all it's going to make sure it's a top level item so it's just going to make sure that all the",
    "start": "2380920",
    "end": "2386859"
  },
  {
    "text": "Json data that's there follows um follows that format",
    "start": "2386859",
    "end": "2392220"
  },
  {
    "text": "and so you can see I'm working with that's the",
    "start": "2395079",
    "end": "2400660"
  },
  {
    "text": "uh example from the slide and",
    "start": "2400660",
    "end": "2407140"
  },
  {
    "text": "I can run cosine verify again you don't have to necessarily write down all these commands they're all going to be on the",
    "start": "2407140",
    "end": "2413260"
  },
  {
    "text": "read on the readme with all the full examples",
    "start": "2413260",
    "end": "2417359"
  },
  {
    "text": "um",
    "start": "2421240",
    "end": "2423240"
  },
  {
    "text": "independent review",
    "start": "2430119",
    "end": "2432960"
  },
  {
    "text": "and it didn't like that it said well I got an error",
    "start": "2442260",
    "end": "2448359"
  },
  {
    "text": "um it said field not allowed repo okay this is actually a good um you know this breaking is not a is",
    "start": "2448359",
    "end": "2455260"
  },
  {
    "text": "not a bad thing to be showing here so why did this break well if I come back to the policy here I'm gonna go back to",
    "start": "2455260",
    "end": "2463240"
  },
  {
    "text": "my slide come back to the policy what it's saying is independent review okay well if you",
    "start": "2463240",
    "end": "2470020"
  },
  {
    "text": "remember I said if I didn't add these dots down here the struct is closed so",
    "start": "2470020",
    "end": "2475060"
  },
  {
    "text": "that means the repo information would now be invalid essentially it would say expect an attestation that only had",
    "start": "2475060",
    "end": "2482200"
  },
  {
    "text": "author and only had reviewer so I can make this struct open to fix this so what I'll do is I'll come back to my",
    "start": "2482200",
    "end": "2488800"
  },
  {
    "text": "independent review and I'm going to add these dots here",
    "start": "2488800",
    "end": "2494380"
  },
  {
    "text": "and that'll allow my repo data and I will run this again and that should work",
    "start": "2494380",
    "end": "2500859"
  },
  {
    "text": "perfect so that worked and before I forget I'm going to come back to my example here at the end and make sure",
    "start": "2500859",
    "end": "2509320"
  },
  {
    "text": "that these other ones also uh are validating against these things Okay",
    "start": "2509320",
    "end": "2516040"
  },
  {
    "text": "so I will update that slide screenshot before before I uh before I put this",
    "start": "2516040",
    "end": "2522339"
  },
  {
    "text": "online Okay so that's all just using cosine I haven't",
    "start": "2522339",
    "end": "2527920"
  },
  {
    "text": "even used the policy controller yet but I'm trying to show you shift left and just validating this step with with uh q",
    "start": "2527920",
    "end": "2534099"
  },
  {
    "text": "and once you have done that it's incredibly easy to use the six Torah policy controller because now you're",
    "start": "2534099",
    "end": "2539140"
  },
  {
    "text": "just actually copying and pasting so uh I can take all those definitions put",
    "start": "2539140",
    "end": "2544540"
  },
  {
    "text": "them all together you can run trim if you want to not mandatory but it'll help",
    "start": "2544540",
    "end": "2549880"
  },
  {
    "text": "um that that stuff then I can run cosine verify if I wanted to use cosine to double check that it's all working and",
    "start": "2549880",
    "end": "2556780"
  },
  {
    "text": "then once there I have like you all I get to do is copy and paste it in so I I",
    "start": "2556780",
    "end": "2562000"
  },
  {
    "text": "cropped it just for the purposes of running this example but I can if you",
    "start": "2562000",
    "end": "2567820"
  },
  {
    "text": "want to see the full example you can use that repo but it's nothing you haven't seen yet it's just the other definitions and then adding them in here as things",
    "start": "2567820",
    "end": "2575500"
  },
  {
    "text": "that are being validated so let me run that",
    "start": "2575500",
    "end": "2581380"
  },
  {
    "text": "and so what I'll do is",
    "start": "2581380",
    "end": "2589920"
  },
  {
    "text": "I'm going to turn on enforcements in my repo and then I'll put all these",
    "start": "2591000",
    "end": "2597460"
  },
  {
    "text": "things together I'll try to deploy this um",
    "start": "2597460",
    "end": "2603000"
  },
  {
    "text": "and I'm just going to use the chain guard enforce product to install this but it's not really part of it you could have installed the if you just wanted to",
    "start": "2603339",
    "end": "2609520"
  },
  {
    "text": "the policy controller aspect to it you could have done this uh separately and I imagine I probably got logged out",
    "start": "2609520",
    "end": "2615099"
  },
  {
    "text": "probably this point so I'm gonna log in real quick",
    "start": "2615099",
    "end": "2619920"
  },
  {
    "text": "you're not running Shane Garden Forest you don't necessarily have to care about this part but I'm just gonna use this as",
    "start": "2626619",
    "end": "2631960"
  },
  {
    "text": "a example to show what this would look like",
    "start": "2631960",
    "end": "2636838"
  },
  {
    "text": "and I installed the policy using the chain CTL policies aspect to it it's got",
    "start": "2637780",
    "end": "2642819"
  },
  {
    "text": "a policy called code review and again all that was is just policies we created",
    "start": "2642819",
    "end": "2649000"
  },
  {
    "text": "already copied and pasted into uh my six door my",
    "start": "2649000",
    "end": "2654460"
  },
  {
    "text": "cluster image policy crd and it's going to validate the predicate it's going to validate the repo the",
    "start": "2654460",
    "end": "2660640"
  },
  {
    "text": "author email and kind of review all that stuff you don't even have to use these definition Fields but they're helpful if",
    "start": "2660640",
    "end": "2666220"
  },
  {
    "text": "you want to um they're helpful for a lot of reasons one you could create these as packages",
    "start": "2666220",
    "end": "2672220"
  },
  {
    "text": "that get imported into different policies you're not doing a bunch of boilerplate things and then you could",
    "start": "2672220",
    "end": "2677980"
  },
  {
    "text": "you know if you had multiple authors for instance in the status station you just have to cross-reference them once so I like to use them as a default but if",
    "start": "2677980",
    "end": "2685000"
  },
  {
    "text": "you're doing something simple they're really not necessarily necessary at all and if you want to just validate with raw Json they're not necessary at all",
    "start": "2685000",
    "end": "2691240"
  },
  {
    "text": "either um but I copied and pasted that in there and then I'm going to",
    "start": "2691240",
    "end": "2697900"
  },
  {
    "text": "um that's my readme and it'll come back here and then",
    "start": "2697900",
    "end": "2704319"
  },
  {
    "text": "I will try to run this and I'm guessing this will pass because",
    "start": "2704319",
    "end": "2710500"
  },
  {
    "text": "um it does have that attachment so we hope it passes and great that passes but just",
    "start": "2710500",
    "end": "2717640"
  },
  {
    "text": "to keep us honest let's um let's go change the policy uh and you",
    "start": "2717640",
    "end": "2724240"
  },
  {
    "text": "know we'll mess it up on purpose just to make sure that it's working so let's see I'll delete that pod",
    "start": "2724240",
    "end": "2731579"
  },
  {
    "text": "so I'm sleeping let's speed up manually",
    "start": "2734920",
    "end": "2739260"
  },
  {
    "text": "somewhere in my history I've got it pretty cool zero",
    "start": "2742480",
    "end": "2747779"
  },
  {
    "text": "there we go you can see it you can see I've run this a lot of times so I can't remember commands so there we go",
    "start": "2750640",
    "end": "2757000"
  },
  {
    "text": "group ctOS leave the Pod grace period equals zero all right now just to keep us honest I will mess up",
    "start": "2757000",
    "end": "2764859"
  },
  {
    "text": "the policy on purpose we'll say that the example has to come from example.org",
    "start": "2764859",
    "end": "2771220"
  },
  {
    "text": "an example and then we will",
    "start": "2771220",
    "end": "2777240"
  },
  {
    "text": "delete that policy and add it back",
    "start": "2778599",
    "end": "2784200"
  },
  {
    "text": "and update it but just to be doubly sure that it's gone make sure there's no policies at all",
    "start": "2784839",
    "end": "2792460"
  },
  {
    "text": "and then we will install the policy again",
    "start": "2792460",
    "end": "2798099"
  },
  {
    "text": "and yo now it's giving us a warning because we didn't always said for our identity",
    "start": "2798099",
    "end": "2803859"
  },
  {
    "text": "was that uh it had to be signed by keystore because we didn't necessarily care about who's signing it for the purposes of this demo",
    "start": "2803859",
    "end": "2810099"
  },
  {
    "text": "um but if you wanted to you could add you know that had to be signed by uh you know had to become from your GitHub SSO",
    "start": "2810099",
    "end": "2816700"
  },
  {
    "text": "and it had to be signed from a chain guard Dev email address or whatever your you know corporate SSO is that's all information that you can set in there",
    "start": "2816700",
    "end": "2825240"
  },
  {
    "text": "um but now this is created and again this should break this time because uh we changed",
    "start": "2825280",
    "end": "2831160"
  },
  {
    "text": "let's see where do we change we changed this it's the author email",
    "start": "2831160",
    "end": "2836560"
  },
  {
    "text": "has to be example.org now right and that should fail because the this is what we attached to it as part of our",
    "start": "2836560",
    "end": "2842380"
  },
  {
    "text": "attestation was that the email address of the author is ends and example.com so",
    "start": "2842380",
    "end": "2847540"
  },
  {
    "text": "this should actually fail so if I go to run that same image again that passed uh let's hope this fails",
    "start": "2847540",
    "end": "2854920"
  },
  {
    "text": "the demo gods are with us and yes that",
    "start": "2854920",
    "end": "2860140"
  },
  {
    "text": "failed and it tells you that the author had an invalid email because the value",
    "start": "2860140",
    "end": "2865960"
  },
  {
    "text": "was example.com and that was out of the bounds um we uh expected or we had this",
    "start": "2865960",
    "end": "2872619"
  },
  {
    "text": "as the policy example.org so that is",
    "start": "2872619",
    "end": "2877780"
  },
  {
    "text": "um building it by example and that's towards the end of my presentation I put",
    "start": "2877780",
    "end": "2884020"
  },
  {
    "text": "all the code examples that I used for this on six door custom policies GitHub repo if you have specific examples about",
    "start": "2884020",
    "end": "2892020"
  },
  {
    "text": "syntax check the Q spec and also you know feel free to just tag me in the",
    "start": "2892020",
    "end": "2897339"
  },
  {
    "text": "slack Channel there's some if you're doing some basic stuff you just go to the sigster.dev site or check the six",
    "start": "2897339",
    "end": "2903640"
  },
  {
    "text": "door policy controller readme but if you're trying to create something custom and you know you're hitting some",
    "start": "2903640",
    "end": "2909339"
  },
  {
    "text": "troubles you know feel free to just tag me in the slack Channel and I can point you on your way",
    "start": "2909339",
    "end": "2914440"
  },
  {
    "text": "so thanks everyone for uh joining let me see back to my original uh appreciate",
    "start": "2914440",
    "end": "2921160"
  },
  {
    "text": "your time um hope this was helpful I know it was probably a little bit more advanced than we normally cover things on a um on a on",
    "start": "2921160",
    "end": "2928119"
  },
  {
    "text": "a webinar but um yeah I think there's been enough six door talks out there that hopefully you can grab one of those if you just want",
    "start": "2928119",
    "end": "2934180"
  },
  {
    "text": "you know really the high level uses and hopefully if you're creating policies that you found this helpful but if there's anything else you want to see",
    "start": "2934180",
    "end": "2939880"
  },
  {
    "text": "you know just uh feel free to reach out so thanks everyone talk to you later",
    "start": "2939880",
    "end": "2946920"
  }
]