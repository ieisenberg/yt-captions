[
  {
    "text": "if you don't know what this little uh creature is in the bottom right when when linardy graduated we had to uh pick",
    "start": "799",
    "end": "8880"
  },
  {
    "text": "a mascot you know because they have all those cute little animals for kubernetes and for go and all that and so we tried",
    "start": "8880",
    "end": "15240"
  },
  {
    "text": "to pick we tried to think of like what was the least cute animal that we could pick and lobster was the one that we",
    "start": "15240",
    "end": "22680"
  },
  {
    "text": "ended on and um it's actually a blue lobster which is very rare you know so",
    "start": "22680",
    "end": "27760"
  },
  {
    "text": "if you ever see one of those in the wild don't don't eat it and then we had to answer a bunch of questions about like is does this",
    "start": "27760",
    "end": "33239"
  },
  {
    "text": "Lobster what what gender is the lobster and I did a lot of research and it gets complicated so I'm I'm going to leave",
    "start": "33239",
    "end": "40680"
  },
  {
    "text": "that for for you all to research at home how to tell you know uh the gender of a",
    "start": "40680",
    "end": "47000"
  },
  {
    "text": "lobster all right I changed the subtitle just now those of you who were in the audience saw me do this live I promise",
    "start": "47000",
    "end": "52559"
  },
  {
    "text": "it being here does not make you a boring person despite this very boring title and the fact that I am boring I'm going",
    "start": "52559",
    "end": "58440"
  },
  {
    "text": "to try and make this really exciting this this is our uh linkerd maintainer kind of project update that we get to do",
    "start": "58440",
    "end": "64198"
  },
  {
    "text": "every cubec con so I really appreciate you uh coming out here and and listening to me and you know feel free to uh raise",
    "start": "64199",
    "end": "71320"
  },
  {
    "text": "your hand if you have a question at any point I'd love to make it more interactive and and not just me moning",
    "start": "71320",
    "end": "76799"
  },
  {
    "text": "but I may get lost in the in the beauty of what I'm saying so you know we'll see",
    "start": "76799",
    "end": "82079"
  },
  {
    "text": "how it goes all right this uh was supposed to be delivered by Alex uh unfortunately Alex is filling in for",
    "start": "82079",
    "end": "88840"
  },
  {
    "text": "another talk um so I'm going to be delivering this in herstead but Alex",
    "start": "88840",
    "end": "94119"
  },
  {
    "text": "will be delivering a talk that probably will be much more interesting than this one called 5 years of cloud native rust",
    "start": "94119",
    "end": "100119"
  },
  {
    "text": "that's today at 2:30 on level three I think you can if I did my QR code right you should be able to just scan that",
    "start": "100119",
    "end": "106200"
  },
  {
    "text": "otherwise you can just type in 1 R2 qn one of the things I'm only going to",
    "start": "106200",
    "end": "111520"
  },
  {
    "text": "mention very briefly in this talk but Alex is really going to go into is uh the investment in Rust that we've made",
    "start": "111520",
    "end": "116920"
  },
  {
    "text": "so you know it's been as you can see 5 years uh and a lot of what makes linkerd great today comes from this very early",
    "start": "116920",
    "end": "123520"
  },
  {
    "text": "decision and you know a lot of kind of the pain and suffering that came along with that to adopt rust and to and to",
    "start": "123520",
    "end": "129280"
  },
  {
    "text": "adopt this very particular approach where you know every aspect of the of of linker's data plan is um you know is",
    "start": "129280",
    "end": "135840"
  },
  {
    "text": "kind of informed by not just rust but around the asynchronous network ecosystem uh that's been built up in",
    "start": "135840",
    "end": "142160"
  },
  {
    "text": "Rust so please do attend this talk um so this me uh William Morgan",
    "start": "142160",
    "end": "148840"
  },
  {
    "text": "thank you for being here i' I used to do this talk a lot and I actually haven't done it for a couple years so uh you",
    "start": "148840",
    "end": "154080"
  },
  {
    "text": "know we'll see how it goes this is a picture of me fixing a toilet in the very early days of linker D development",
    "start": "154080",
    "end": "159400"
  },
  {
    "text": "this was basically my best contribution to the project um arguably at least that's what",
    "start": "159400",
    "end": "165920"
  },
  {
    "text": "some people have told me all right I'm going to do a very brief intro into what linkerd is and you know if you've seen",
    "start": "165920",
    "end": "171680"
  },
  {
    "text": "this a thousand times before then you know just bear with me uh it's a service mesh I'll I'll spend one slide",
    "start": "171680",
    "end": "177599"
  },
  {
    "text": "describing what that is uh it's known for being light for being fast for being security uh first and it's also known",
    "start": "177599",
    "end": "184480"
  },
  {
    "text": "for being simple and that's really the focus uh for us created by a company called buyant which I love um and please",
    "start": "184480",
    "end": "191680"
  },
  {
    "text": "you know pay us a lot of money uh seven over seven years in production 9500",
    "start": "191680",
    "end": "196920"
  },
  {
    "text": "slack channel members we're we're close to hitting 10,000 so if you haven't gone to slack. linkerd doio you don't have to",
    "start": "196920",
    "end": "202159"
  },
  {
    "text": "do anything just sign up so I can get this number to to 10,000 um if I see",
    "start": "202159",
    "end": "207280"
  },
  {
    "text": "anyone in here who's you know at the next talk at cubon Paris next year and we're not at 10,000 I'm going to be",
    "start": "207280",
    "end": "214000"
  },
  {
    "text": "upset at you for not joining um make sock puppet accounts if you need to everything's fair in the you know in",
    "start": "214000",
    "end": "220720"
  },
  {
    "text": "love and Cloud native uh lots of GitHub Stars lots of contributors uh weekly Edge releases and so on we were the",
    "start": "220720",
    "end": "227120"
  },
  {
    "text": "first uh service mesh to graduate uh the cntf a couple years ago and our job you",
    "start": "227120",
    "end": "232400"
  },
  {
    "text": "know the job of linard is to give every platform engineer in the world the tools that they need to create secure and",
    "start": "232400",
    "end": "238319"
  },
  {
    "text": "reliable and observable Cloud native applications so hopefully that resonates with you um if not then this may be a",
    "start": "238319",
    "end": "246920"
  },
  {
    "text": "very boring talk all right it's a link uh linkerd is a service mesh I promised I i' spend one slide on this you know so",
    "start": "246920",
    "end": "252439"
  },
  {
    "text": "the way I think about this uh is a service mesh is an infrastructure layer right so it's not something that the",
    "start": "252439",
    "end": "257600"
  },
  {
    "text": "developers have to interact with directly it's something that should be kind of provided to them as part of the infrastructure uh it's at the platform",
    "start": "257600",
    "end": "264600"
  },
  {
    "text": "layer and you know in a way it's kind of like this modern L7 capable Network so if you come from networking background",
    "start": "264600",
    "end": "270440"
  },
  {
    "text": "you're very used to you know what I would call L4 stuff which is you got packets and you know you've got IP",
    "start": "270440",
    "end": "276360"
  },
  {
    "text": "addresses and you're trying to deliver packets from this IP address to that IP address I know I'm like summarizing a a",
    "start": "276360",
    "end": "282360"
  },
  {
    "text": "lot of stuff in in a in a really short way um and then for but for linkerd we kind of think we're thinking about",
    "start": "282360",
    "end": "288160"
  },
  {
    "text": "things in in in L7 versus L4 which means we're thinking about rather than IP addresses we're thinking about workloads",
    "start": "288160",
    "end": "294280"
  },
  {
    "text": "you know or rather than uh and workload identities um you know rather than TCP P",
    "start": "294280",
    "end": "300039"
  },
  {
    "text": "connections and TCP packets we're thinking about um http2 connections and grpc messages and things like that and",
    "start": "300039",
    "end": "307080"
  },
  {
    "text": "and so it's it's kind of a different level um of uh of networking and you",
    "start": "307080",
    "end": "312360"
  },
  {
    "text": "know uh the goal for us is this should be uniform across your entire application so all these benefits you know you get kind of regardless of what",
    "start": "312360",
    "end": "319319"
  },
  {
    "text": "the application was written in and what team wrote it uh you shouldn't have to change your application for the most",
    "start": "319319",
    "end": "324800"
  },
  {
    "text": "part that's true there's always one or two little asterisks that we have to navigate through um and then our",
    "start": "324800",
    "end": "330080"
  },
  {
    "text": "implementation as I mentioned is is this idea called a micro proxy so we build it in Rust try and make it as small and as",
    "start": "330080",
    "end": "336360"
  },
  {
    "text": "lightweight and as single purpose as possible so if you're familiar with Envoy it's a general purpose proxy the",
    "start": "336360",
    "end": "341639"
  },
  {
    "text": "linkerd proxy is not general purpose you can't use it in any context other than linkerd um and that is part of what",
    "start": "341639",
    "end": "347479"
  },
  {
    "text": "allows us to to make it slim and trim uh and then we've got a control plane off to the side that kind of manages those",
    "start": "347479",
    "end": "353759"
  },
  {
    "text": "proxies for you and gives you the interaction points you know through crds or or or elsewhere um to to interact",
    "start": "353759",
    "end": "359800"
  },
  {
    "text": "with linkerd as a whole this make sense so far to everyone okay I see a lot of nodding",
    "start": "359800",
    "end": "366639"
  },
  {
    "text": "heads thank you come on in you're not too late I'm just going through the intro stuff all right what makes linkerd",
    "start": "366639",
    "end": "372440"
  },
  {
    "text": "so darn good um so for us we got a couple kind of design goals one is we want to make it just work so we want to",
    "start": "372440",
    "end": "378720"
  },
  {
    "text": "make it so if you have a functioning kubernetes application that runs today and you add linkerd the application",
    "start": "378720",
    "end": "384120"
  },
  {
    "text": "continues to function and you know 99% of the time we can do that uh of course there's always one to asterisks um and",
    "start": "384120",
    "end": "391280"
  },
  {
    "text": "it's also a very good way of finding out whether your developers have obeyed the standards when it comes to things like",
    "start": "391280",
    "end": "397319"
  },
  {
    "text": "HTP calls have they made assumptions about header ordering or about header casing and things like that you know",
    "start": "397319",
    "end": "402759"
  },
  {
    "text": "that's that'll be a fun uh fun Discovery for you uh as you add linkerd um because",
    "start": "402759",
    "end": "408639"
  },
  {
    "text": "we do require those we do require the applications to conform to those standards uh ultr light of course I've",
    "start": "408639",
    "end": "414440"
  },
  {
    "text": "talked about simple to operate you know that's kind of our promise to you is you are the poor souls who are going to be",
    "start": "414440",
    "end": "420479"
  },
  {
    "text": "on the hook for waking up at 3 in the morning if this thing goes down you know we want to minimize that as much as",
    "start": "420479",
    "end": "426879"
  },
  {
    "text": "possible and we want to give you the ability to just have in your head like is there a model of how this thing works and when things are behaving you know uh",
    "start": "426879",
    "end": "433800"
  },
  {
    "text": "contrary to that model you can ask a really informed question rather than just believing it's this black box of",
    "start": "433800",
    "end": "439280"
  },
  {
    "text": "magic you know complicated stuff uh and then of course we want to make it secure you know and and and treat that as um",
    "start": "439280",
    "end": "446400"
  },
  {
    "text": "kind of like the default Behavior not as something that you have to enable or configure to the to the extent that's",
    "start": "446400",
    "end": "452440"
  },
  {
    "text": "possible okay control plane data plane Etc um these slides are basically online",
    "start": "452440",
    "end": "459759"
  },
  {
    "text": "so you know if if anything I'm saying goes by too fast you'll you'll be able to to to find them all right the data",
    "start": "459759",
    "end": "466120"
  },
  {
    "text": "plan if I mentioned rust micro proxies not using Envoy okay this gives us a a whole bunch of interesting um kind of",
    "start": "466120",
    "end": "471680"
  },
  {
    "text": "characteristics you know part of this is it's part of our Security First approach so rust allows us if you're not familiar with rust really interesting language",
    "start": "471680",
    "end": "478720"
  },
  {
    "text": "the you know Al's talk later today we'll be uh we'll have a lot more examples actually I think she's got examples of",
    "start": "478720",
    "end": "484919"
  },
  {
    "text": "what things you can do in C++ that are terrible that the rust compiler will not let you do so there's some fun kind of",
    "start": "484919",
    "end": "491680"
  },
  {
    "text": "code side by side stuff there um but it allows us to avoid an entire class of memory vulnerabilities that are basically endemic to you know C and C++",
    "start": "491680",
    "end": "499080"
  },
  {
    "text": "code turns out no human being in the world can actually write safe C++ code um Beyond Hello World maybe ultra light",
    "start": "499080",
    "end": "506080"
  },
  {
    "text": "Ultra fast you know so we compile in native code um state-of-the-art networking stack all sorts of fun stuff in here uh you know and really we want",
    "start": "506080",
    "end": "512599"
  },
  {
    "text": "to we want to make this thing an implementation detail right so if you are a service mesh operator you should not and you become an expert in Linker",
    "start": "512599",
    "end": "518919"
  },
  {
    "text": "you should not have to become also an expert in the linkerd proxy all right now let's get into the",
    "start": "518919",
    "end": "526519"
  },
  {
    "text": "controversial stuff this is my opinion well okay yeah that's my opinion um so",
    "start": "526519",
    "end": "532680"
  },
  {
    "text": "there's kind of three you know if you're very familiar with the service mes landscape there's kind of three approaches people have taken there's",
    "start": "532680",
    "end": "537920"
  },
  {
    "text": "node proxies which actually came first because the very first version of linkerd was node proxies um there's",
    "start": "537920",
    "end": "543640"
  },
  {
    "text": "sidecars which is what we are today and then there's this newer idea of ambient ebf ebpf comes up a lot in some of these",
    "start": "543640",
    "end": "550240"
  },
  {
    "text": "conversations uh it's basically a red herring because ebpf is great for L4",
    "start": "550240",
    "end": "555600"
  },
  {
    "text": "features right we talked about the network and packets and things like that it's great it's amazing for that but it",
    "start": "555600",
    "end": "561040"
  },
  {
    "text": "can't really handle L7 features not the way that we that that the service Mees needs it to handle because the way that",
    "start": "561040",
    "end": "567440"
  },
  {
    "text": "the thing works is it is limited by by Design because you have to run these bite codes in the kernel right and so",
    "start": "567440",
    "end": "573480"
  },
  {
    "text": "you have to be very very strict on what you're allowing uh to run in the kernel so that's fine right it's not a knock on ebpf it's good for some things not good",
    "start": "573480",
    "end": "580079"
  },
  {
    "text": "for other things but what happens is when you make a sidecar free ebpf service mesh you end up using node",
    "start": "580079",
    "end": "585279"
  },
  {
    "text": "proxies and that actually is bad right because node proxies mean that you share all the TLs information it means you",
    "start": "585279",
    "end": "590600"
  },
  {
    "text": "share all of the requests from very disperate workloads all going through that single proxy um we saw this live",
    "start": "590600",
    "end": "597519"
  },
  {
    "text": "with Linker uh and firsthand with Linker 1.x which was node proxies um and uh you",
    "start": "597519",
    "end": "604279"
  },
  {
    "text": "know a lot of the initial adopters from uh of linker uh 1.0 uh told us how",
    "start": "604279",
    "end": "610720"
  },
  {
    "text": "painful this was so that was part of the kind of reinvention of of linker you know circuit 2018 to move into the",
    "start": "610720",
    "end": "616839"
  },
  {
    "text": "sidecar World um ambient is better I'm not going to talk too much about that it is very complicated um but at least has",
    "start": "616839",
    "end": "623200"
  },
  {
    "text": "better security pro properties um we did do a long exploration of ebpf I think the tldr and if you read this",
    "start": "623200",
    "end": "629760"
  },
  {
    "text": "um blog post that I wrote about it I think it's likely will add ebpf at some point to linkerd but I don't think it",
    "start": "629760",
    "end": "635160"
  },
  {
    "text": "really is going to change a lot for it um sidecars and micro proxies are the",
    "start": "635160",
    "end": "641519"
  },
  {
    "text": "the best solution after doing a throw analysis they continue to be the best solution um for for serious users have a",
    "start": "641519",
    "end": "648480"
  },
  {
    "text": "really clear operational and security boundary right that's a there's a huge benefit to that you've got a really",
    "start": "648480",
    "end": "653800"
  },
  {
    "text": "clear implementation of things like zero trust if you're an operator you know you have a model in your head that is very",
    "start": "653800",
    "end": "660639"
  },
  {
    "text": "straightforward and there's a lot to be said for that minimal resource usage of course if you're going to have side cars like you got to make them small because",
    "start": "660639",
    "end": "666240"
  },
  {
    "text": "if they're large then you know it's not that great um and there are some warts",
    "start": "666240",
    "end": "672760"
  },
  {
    "text": "around side cars in kubernetes like if any of you have tried to mesh you know cron jobs and or jobs things like that",
    "start": "672760",
    "end": "680680"
  },
  {
    "text": "uh you know it's it's annoying and you have to do some extra work those are slowly being uh fixed at the kubernetes level",
    "start": "680680",
    "end": "687839"
  },
  {
    "text": "so there's some really cool stuff happening with the sidecar um sidecar containers and and and stuff like that I",
    "start": "687839",
    "end": "694240"
  },
  {
    "text": "wrote a little blog post about this 1.28 was when they when those first came into Alpha in one29 they're going to I don't",
    "start": "694240",
    "end": "700120"
  },
  {
    "text": "know they're getting better fied in in some way so that's all to say at the end of all that you know ebpf probably is on",
    "start": "700120",
    "end": "706720"
  },
  {
    "text": "the road map for linky but I don't think it's going to change a whole lot um it's going to have a pretty minor effect okay",
    "start": "706720",
    "end": "713760"
  },
  {
    "text": "I'm going to jump with that let's see oh we're doing okay for time um but I'll",
    "start": "713760",
    "end": "719079"
  },
  {
    "text": "jump into uh kind of a little history of some of the recent releases and then I'm going to end with kind of what we're",
    "start": "719079",
    "end": "724959"
  },
  {
    "text": "building in the in the next release so 2.12 which is gosh I don't even remember when this was a couple couple releases",
    "start": "724959",
    "end": "731240"
  },
  {
    "text": "ago um introduced uh security policies that were per route so the the security",
    "start": "731240",
    "end": "738399"
  },
  {
    "text": "model for linkerd is that we can enforce remember because we have the side car and we're kind of you know at the at the",
    "start": "738399",
    "end": "744519"
  },
  {
    "text": "Pod boundary right and all traffic before it can touch the application on",
    "start": "744519",
    "end": "749839"
  },
  {
    "text": "that pod has to go through the proxy um we uh the security model is at that",
    "start": "749839",
    "end": "755440"
  },
  {
    "text": "point we can actually enforce you know what kinds of requests are allowed to talk to the application and you can describe those requests to us and you",
    "start": "755440",
    "end": "761320"
  },
  {
    "text": "can describe them in in any way that you want you know you can describe them based on IP addresses but you know we're",
    "start": "761320",
    "end": "767519"
  },
  {
    "text": "trying to move to the the security model of the future where we're talking about workload identities and things like that so you can describe them in terms of",
    "start": "767519",
    "end": "772560"
  },
  {
    "text": "workload identities and you can describe them in in terms of routes so you can say I am service B you're service a and",
    "start": "772560",
    "end": "779279"
  },
  {
    "text": "in order for a to talk to B you know it it is allowed to talk to B you know on",
    "start": "779279",
    "end": "784399"
  },
  {
    "text": "the slfu endpoint but not on the slash bar endpoint things like that right so",
    "start": "784399",
    "end": "789519"
  },
  {
    "text": "this is we're talking about workload identity and kind of per route or per grpc method",
    "start": "789519",
    "end": "795079"
  },
  {
    "text": "granularity the way that we implemented this is using this thing called the gateway API and I'm going to talk a little bit about the Gateway API because",
    "start": "795079",
    "end": "801279"
  },
  {
    "text": "it's kind of a a recurring theme for Linker and it's kind of this future Direction um that we're headed um so",
    "start": "801279",
    "end": "809440"
  },
  {
    "text": "this is an H example of an HTP route that permits certain requests to a server which is you know another type of",
    "start": "809440",
    "end": "815720"
  },
  {
    "text": "object called author's server and so you know the goal here is we want to give you kind of this really granular level",
    "start": "815720",
    "end": "821680"
  },
  {
    "text": "of control but we also want to do it in a standard a way as possible so rather than implementing you know uh link or D",
    "start": "821680",
    "end": "827880"
  },
  {
    "text": "specific crds we try and do it with the Gateway API again there's one or two asterisks to that statement um but by",
    "start": "827880",
    "end": "834480"
  },
  {
    "text": "and large that's that's a goal right and then 2.13 okay after that so that two",
    "start": "834480",
    "end": "839759"
  },
  {
    "text": "212 was very security focused right giving you those policies 213 now uh um",
    "start": "839759",
    "end": "846360"
  },
  {
    "text": "we're getting into uh uh kind of uh back to the world of routing away from security back to the world of routing",
    "start": "846360",
    "end": "852440"
  },
  {
    "text": "and giving you a similar capability with request routing so giving you the ability to say I want to Route traffic",
    "start": "852440",
    "end": "858240"
  },
  {
    "text": "you know um not just based on the kind of the the DNS uh name but based on",
    "start": "858240",
    "end": "863759"
  },
  {
    "text": "headers based on verbs we don't look at the body um for variety of reasons but this is a very fine grained way of",
    "start": "863759",
    "end": "870480"
  },
  {
    "text": "routing requests kind of dynamically based on these routes uh again configured with a Gateway API not with",
    "start": "870480",
    "end": "876720"
  },
  {
    "text": "SMI components if you've been a linky user for a while you're probably familiar with traffic splits and and",
    "start": "876720",
    "end": "882240"
  },
  {
    "text": "things like that those were based on this SMI um API in the modern world we're trying to move um off of SMI and",
    "start": "882240",
    "end": "889320"
  },
  {
    "text": "onto HTP route um and so we use that same object that was introduced in the previous release great so now you know now we're",
    "start": "889320",
    "end": "895600"
  },
  {
    "text": "starting to have like a really uniform configuration space and there's all sorts of interesting examples of of how",
    "start": "895600",
    "end": "900800"
  },
  {
    "text": "you can build upon this to do things like you know per user canaries and and and and stuff like",
    "start": "900800",
    "end": "906959"
  },
  {
    "text": "that uh the other thing we introduced here was circuit breaking uh so this is something you know I think came a little",
    "start": "906959",
    "end": "912639"
  },
  {
    "text": "late to to to Linker probably should have done earlier um and the idea here is like if an endpoint is failing right",
    "start": "912639",
    "end": "918759"
  },
  {
    "text": "we should just stop delivering traffic to it because we know it's failing and because reducing traffic to it might",
    "start": "918759",
    "end": "924160"
  },
  {
    "text": "allow it to recover right it might be dying because there's too much traffic so if you've got too many consecutive failures if the success rate is too low",
    "start": "924160",
    "end": "931160"
  },
  {
    "text": "then we're going to turn traffic um off and then as it recovers so we're going to Ping it every once in a while when it",
    "start": "931160",
    "end": "936800"
  },
  {
    "text": "recovers we'll start sending traffic back to it so that was 213 and then finally 214",
    "start": "936800",
    "end": "943319"
  },
  {
    "text": "is the most recent release so this is um uh flat Network",
    "start": "943319",
    "end": "949120"
  },
  {
    "text": "this is where we introduced flat Network multicluster so in 2.13 and earlier so Linker has had multicluster uh",
    "start": "949120",
    "end": "955279"
  },
  {
    "text": "capabilities for a long time and by what multicluster means in linker's case is the ability to send traffic from one",
    "start": "955279",
    "end": "961480"
  },
  {
    "text": "cluster to another kubernetes cluster in a way that's transparent to the",
    "start": "961480",
    "end": "966759"
  },
  {
    "text": "application so the application you know again I'm I'm service a and I'm talking to service B all I have to do is connect",
    "start": "966759",
    "end": "974120"
  },
  {
    "text": "to B like the normal way that I do and I don't have to know whether B is on the same cluster is on a different cluster",
    "start": "974120",
    "end": "980079"
  },
  {
    "text": "whether it's like halfway in between these clusters because I'm splitting traffic across them whether I'm in the middle of some kind of failover",
    "start": "980079",
    "end": "985920"
  },
  {
    "text": "operation that's all independent um you know from uh from uh from the",
    "start": "985920",
    "end": "992759"
  },
  {
    "text": "application point of view right you just talk to the service and so that gives you a lot of flexibility you know under the hood the way we implemented This was",
    "start": "992759",
    "end": "999920"
  },
  {
    "text": "um with a with a Gateway I'm sorry is there supposed to be a Gateway picture here okay there we go this makes a lot",
    "start": "999920",
    "end": "1005600"
  },
  {
    "text": "more sense right yes under the hood we have a Gateway on the destination side right so if you're workload one and",
    "start": "1005600",
    "end": "1011079"
  },
  {
    "text": "you're talking to workload two it goes through this Gateway object right and you don't the application doesn't know about that it's kind of happening under the hood the reason we did that is",
    "start": "1011079",
    "end": "1017639"
  },
  {
    "text": "because the primary use cases that we saw for multicluster in in kind of the early days of linker were kind of these",
    "start": "1017639",
    "end": "1023480"
  },
  {
    "text": "ad hoc use cases where I have a cluster over here and now you know separately we add this other cluster over there and it might be on a different cloud or it's in",
    "start": "1023480",
    "end": "1029678"
  },
  {
    "text": "a different zone or it's like you know owned by a different team and so this Gateway based approach was really nice",
    "start": "1029679",
    "end": "1034760"
  },
  {
    "text": "because all you had to do the only L4 requirement that you had here was you need to be able to establish a TCP",
    "start": "1034760",
    "end": "1040360"
  },
  {
    "text": "connection from the cluster on the left to that Gateway but that was it right we didn't make any other assumptions about",
    "start": "1040360",
    "end": "1046400"
  },
  {
    "text": "the the underlying networking now what we've seen uh you know more recently is",
    "start": "1046400",
    "end": "1052400"
  },
  {
    "text": "um if you if the underlying Network allows pods right yeah yeah great so right so if you actually do your network",
    "start": "1052400",
    "end": "1058600"
  },
  {
    "text": "setup you know in in kind of a a more Forward Thinking way and you can actually route the pods you know pods",
    "start": "1058600",
    "end": "1064919"
  },
  {
    "text": "can Route traffic to each other well then we can get rid of the Gateway right and then you end up with a very very",
    "start": "1064919",
    "end": "1070280"
  },
  {
    "text": "boring diagram that looks like this you know again workload one doesn't know where workload two is so Linker is kind",
    "start": "1070280",
    "end": "1076559"
  },
  {
    "text": "of taking care of that under the hood for you um but then you can you know you can get rid of that Gateway component this has a couple other nice benefits of",
    "start": "1076559",
    "end": "1083000"
  },
  {
    "text": "course you're not going through um Gateway so that's one fewer hop um and",
    "start": "1083000",
    "end": "1088159"
  },
  {
    "text": "uh you know you also preserve the identity on the from the left hand side so that's kind of",
    "start": "1088159",
    "end": "1093960"
  },
  {
    "text": "nice yeah",
    "start": "1093960",
    "end": "1100600"
  },
  {
    "text": "sure yeah so the question was what do you mean by an underlying Network that allows you to do this so the this is",
    "start": "1100600",
    "end": "1106480"
  },
  {
    "text": "basically a a shared flat Network so you have all the pods and my network you know engineering knowledge is about one",
    "start": "1106480",
    "end": "1113480"
  },
  {
    "text": "level deep so I'll describe this as best I can but it means that all the pods are",
    "start": "1113480",
    "end": "1118559"
  },
  {
    "text": "can Route traffic to each other they're on the sh same shared flat Network they have IP addresses that are uh unique",
    "start": "1118559",
    "end": "1125840"
  },
  {
    "text": "across all clusters not just unique within",
    "start": "1125840",
    "end": "1131080"
  },
  {
    "text": "the yeah that's right yeah that's right that's right and",
    "start": "1131080",
    "end": "1137080"
  },
  {
    "text": "if anyone wants to correct me on what that means raise your",
    "start": "1137080",
    "end": "1142600"
  },
  {
    "text": "hand don't Gat between the pods go straight from pod cider to pod cider",
    "start": "1145640",
    "end": "1153520"
  },
  {
    "text": "okay thank you",
    "start": "1153520",
    "end": "1157200"
  },
  {
    "text": "yeah so you know it's an alternative mode we didn't throw away the the first mode this is just if you're in this situation hey great you know we can save",
    "start": "1158640",
    "end": "1165120"
  },
  {
    "text": "you a component um and you know all sorts of interesting engineering challenges that I was kind of uh you know half exposed to here around service",
    "start": "1165120",
    "end": "1171159"
  },
  {
    "text": "Discovery and things like that um but the details are all in the you know the docs and blog posts and and stuff around",
    "start": "1171159",
    "end": "1177120"
  },
  {
    "text": "that um the other thing we did in 2.14 is we officially became conformant with",
    "start": "1177120",
    "end": "1182679"
  },
  {
    "text": "the Gateway API which is you know uh again I keep using those words basically",
    "start": "1182679",
    "end": "1188039"
  },
  {
    "text": "the Gateway API was or is um a a set of apis that was originally designed to",
    "start": "1188039",
    "end": "1194760"
  },
  {
    "text": "replace or to you know provide a successor to to the Ingress resource so the Ingress resource which we all know",
    "start": "1194760",
    "end": "1201679"
  },
  {
    "text": "and love you know was something that we often had to work around because it was so limited the Gateway API was designed",
    "start": "1201679",
    "end": "1207679"
  },
  {
    "text": "originally to to have this really expressive set of crds that you could use you know to describe the full set of",
    "start": "1207679",
    "end": "1214720"
  },
  {
    "text": "uh you know uh Behavior you want on on Ingress and they did a really good job in designing this API they did such a",
    "start": "1214720",
    "end": "1220960"
  },
  {
    "text": "you know so good of a job that actually a lot of it applies to the service mesh so at some point um you know that that",
    "start": "1220960",
    "end": "1227799"
  },
  {
    "text": "the gate API team said well gosh let's actually make this you know work for service meshes as well as for Ingress",
    "start": "1227799",
    "end": "1233640"
  },
  {
    "text": "and so they added this idea of different profiles and there's a mesh profile linkerd was the very first service mesh",
    "start": "1233640",
    "end": "1238720"
  },
  {
    "text": "to be fully conformant with the Gateway API mesh profile it's really exciting if you're like a deep kubernetes nerd if you're a user I don't know that it",
    "start": "1238720",
    "end": "1245200"
  },
  {
    "text": "really is that interesting except to say that it is a step towards a goal that",
    "start": "1245200",
    "end": "1250559"
  },
  {
    "text": "I'm kind of excited about which is we have a a fully uniform set of configuration for Linker D and for",
    "start": "1250559",
    "end": "1258360"
  },
  {
    "text": "Ingress with the same set of apis same set of uh you know crds and and types",
    "start": "1258360",
    "end": "1263720"
  },
  {
    "text": "and things like that and I think that will be a big benefit because then you know a you have some you know you have",
    "start": "1263720",
    "end": "1270360"
  },
  {
    "text": "some flexibility in terms of like you know here's the API for controlling my service mesh and maybe I swap out the",
    "start": "1270360",
    "end": "1275400"
  },
  {
    "text": "implementation underneath without having to change any of that and B you have one set of things that you're thinking about",
    "start": "1275400",
    "end": "1280640"
  },
  {
    "text": "when you're configuring Ingress and for measure one set of tools that you're working with I guess when you're configuring those two things and to me",
    "start": "1280640",
    "end": "1286640"
  },
  {
    "text": "that kind of makes sense because a a lot of the constraints you know and and and goals are the",
    "start": "1286640",
    "end": "1292960"
  },
  {
    "text": "same um there was you know things got a little the this standard is still evolving so there are one or two warts",
    "start": "1293919",
    "end": "1300400"
  },
  {
    "text": "when you're actually trying to do this um but uh so this is kind of I would say this is a stepping stone um but maybe",
    "start": "1300400",
    "end": "1306480"
  },
  {
    "text": "not the you know we're not at the final uh end state yet all right so 214 was",
    "start": "1306480",
    "end": "1311600"
  },
  {
    "text": "our most recent release now finally we're going to get to 215 so this is an exciting kind of announcement time um so",
    "start": "1311600",
    "end": "1317679"
  },
  {
    "text": "the goal for the next release is to add mesh expansion which is the ability to add off cluster non kubernetes things",
    "start": "1317679",
    "end": "1325279"
  },
  {
    "text": "into the mesh so that means we can run the data plane outside of kubernetes so",
    "start": "1325279",
    "end": "1333240"
  },
  {
    "text": "on the one hand that's really really easy because you know these rust micro proxies will run anywhere like we can",
    "start": "1333240",
    "end": "1339080"
  },
  {
    "text": "compile them for any architecture and they run you know it's just a binary they're actually you know we we did one clever thing early on which is we did",
    "start": "1339080",
    "end": "1344919"
  },
  {
    "text": "not make those proxies kubernetes specific at all they Linker specific so I need to talk to the linkerd API but",
    "start": "1344919",
    "end": "1351960"
  },
  {
    "text": "they don't know anything about kubernetes they don't have any assumptions in there that they're running on a kubernetes cluster or even in a in a container right they're just",
    "start": "1351960",
    "end": "1359000"
  },
  {
    "text": "regular old-fashioned binaries but you know that's the one simple aspect every other aspect of this is really really",
    "start": "1359000",
    "end": "1364400"
  },
  {
    "text": "hard um there's a whole set of challenges around well how do we do service Discovery how do we do um you",
    "start": "1364400",
    "end": "1369720"
  },
  {
    "text": "know network connectivity when we're running within kubernetes you know we have all these assumptions we can make",
    "start": "1369720",
    "end": "1374760"
  },
  {
    "text": "kubernetes gives us all these Primitives that we can build upon we can can you know oh you need to get the you know the",
    "start": "1374760",
    "end": "1381600"
  },
  {
    "text": "sidecar you know uh into every pod well sure you just use a mutating admission web hook controller and you know there",
    "start": "1381600",
    "end": "1388919"
  },
  {
    "text": "you go when you're out in the uh the world of VMS well you don't have any of those Primitives so you have to decide",
    "start": "1388919",
    "end": "1394559"
  },
  {
    "text": "okay which of these you know are we going to actually rebuild and which of these are we going to leave as a burden for you right the user um one that I",
    "start": "1394559",
    "end": "1402320"
  },
  {
    "text": "want to talk about briefly here because you know this one became really interesting is this idea of workload identity so all the policies that I",
    "start": "1402320",
    "end": "1409320"
  },
  {
    "text": "talked about earlier in in linkerd 2.12 right all of our kind of like authorization you know framework is",
    "start": "1409320",
    "end": "1415440"
  },
  {
    "text": "based on this concept of workload identity we don't want to use the IP address we don't want to trust the network right we want to trust",
    "start": "1415440",
    "end": "1421480"
  },
  {
    "text": "cryptographic proof of you know of strongly attested workload identity in",
    "start": "1421480",
    "end": "1426840"
  },
  {
    "text": "kubernetes land we can use your service account as the workload identity because that you know for purposes of security",
    "start": "1426840",
    "end": "1433120"
  },
  {
    "text": "it's basically tant amount to your identity once you're outside the cluster well we don't have that anymore anymore",
    "start": "1433120",
    "end": "1438320"
  },
  {
    "text": "right so now we have to come up with a way of providing identity for like an arbitrary application on an arbitrary VM",
    "start": "1438320",
    "end": "1445279"
  },
  {
    "text": "turns out there actually is a project that's basically solved this so that's great for us we don't have to reinvent the wheel it's called spiffy Inspire um",
    "start": "1445279",
    "end": "1454039"
  },
  {
    "text": "is anyone here used spiffy or is using it today raise your",
    "start": "1454039",
    "end": "1459480"
  },
  {
    "text": "hand don't be sh I see one half-hearted hand on the far",
    "start": "1459480",
    "end": "1464520"
  },
  {
    "text": "right anybody else that's it it's a graduated",
    "start": "1464520",
    "end": "1470320"
  },
  {
    "text": "project is anybody too embarrassed to admit that they use it raise your oh there we go okay two hands yeah all",
    "start": "1470320",
    "end": "1476880"
  },
  {
    "text": "right well I don't know what them I mean gosh okay maybe this was a bad idea well mostly I just don't want to",
    "start": "1476880",
    "end": "1483960"
  },
  {
    "text": "have to rebuild all this stuff so you know um right so you know and kind of the division here uh is that spiffy is a",
    "start": "1483960",
    "end": "1491440"
  },
  {
    "text": "standard you know and and Spire is effectively a reference implementation and all that spiffy does is it says hey",
    "start": "1491440",
    "end": "1497240"
  },
  {
    "text": "if you take you know what's called an x509 certificate and you format you know these fields in this way then you now",
    "start": "1497240",
    "end": "1503200"
  },
  {
    "text": "have a spiffy ID and you know there's it's more complicated than that there's like a jot version a JWT version and",
    "start": "1503200",
    "end": "1509600"
  },
  {
    "text": "things like that but it turns out those those uh you know those x509 certificates are exactly what you use",
    "start": "1509600",
    "end": "1515000"
  },
  {
    "text": "for TLS and including for linker's Mutual TLS so that integration is very very natural now the question is okay if",
    "start": "1515000",
    "end": "1521919"
  },
  {
    "text": "I have the standard for you know presenting identity that's kind of already implemented in in in linerty",
    "start": "1521919",
    "end": "1527240"
  },
  {
    "text": "well how do I actually get the identity for an arbitrary machine and that's where Spire comes in so you run Spire Spire gives you a spiffy certificate for",
    "start": "1527240",
    "end": "1536039"
  },
  {
    "text": "you know a workload or you know or whatever you're trying to attest so we're basically in late prototyping",
    "start": "1536039",
    "end": "1542039"
  },
  {
    "text": "stage with this it's going along really really well I expect to have a stable release I I should never do this I",
    "start": "1542039",
    "end": "1547440"
  },
  {
    "text": "should never put a date on a slide in a recorded fashion so editors just beep",
    "start": "1547440",
    "end": "1553039"
  },
  {
    "text": "out the next section please but early next year it's looking really good uh and I just wrote a blog post about this",
    "start": "1553039",
    "end": "1558480"
  },
  {
    "text": "a couple days ago if you want if you want to learn more yes",
    "start": "1558480",
    "end": "1563520"
  },
  {
    "text": "sir yeah great question the question was does spiffy Inspire for anyone who's",
    "start": "1569200",
    "end": "1575520"
  },
  {
    "text": "using it out there does that interact with certain manager you know does c manager do anything with spiffy Inspire",
    "start": "1575520",
    "end": "1582320"
  },
  {
    "text": "what about the one halfhearted hand over there you want to you want to tackle that I",
    "start": "1582320",
    "end": "1589600"
  },
  {
    "text": "okay so he beli Spire would be doing the rotation and management anybody have a different opinion yes over",
    "start": "1595279",
    "end": "1602480"
  },
  {
    "text": "there certain manager does interact with spiffy Inspire okay",
    "start": "1604520",
    "end": "1609960"
  },
  {
    "text": "great okay there's a combination you can use yeah okay great great yeah great",
    "start": "1609960",
    "end": "1616679"
  },
  {
    "text": "great question though um any other questions on this yes",
    "start": "1616679",
    "end": "1624320"
  },
  {
    "text": "sir yes that's right so you would run the pro question was do you run the proxy on the VM yes yeah you run the",
    "start": "1629440",
    "end": "1634840"
  },
  {
    "text": "proxy on the VM what you know how much help we can give you in delivering that proxy to the VM and",
    "start": "1634840",
    "end": "1641840"
  },
  {
    "text": "getting everything set up and all that is is kind of what we're exploring now but ultimately yes that proxy sits there",
    "start": "1641840",
    "end": "1648039"
  },
  {
    "text": "it gets an identity not from Linker DCA sitting on the cluster but from from spire and then it establishes a",
    "start": "1648039",
    "end": "1654720"
  },
  {
    "text": "connection to the control plane any other questions on this I'm",
    "start": "1654720",
    "end": "1662880"
  },
  {
    "text": "really excited about this because um you know it finally gets back to the the in",
    "start": "1662880",
    "end": "1668279"
  },
  {
    "text": "in linkerd 1.x for the elderly amongst us here who remember that we actually",
    "start": "1668279",
    "end": "1673519"
  },
  {
    "text": "were able to run on VMS and uh you know on maos and on Nomad and like you know",
    "start": "1673519",
    "end": "1678640"
  },
  {
    "text": "it's totally orchestrator independent and I'm excited to be able to at least get partially back that way the control",
    "start": "1678640",
    "end": "1683960"
  },
  {
    "text": "plane still has to run on kubernetes so we're really talking about the data plane that gets to expand um and this is also a good lesson",
    "start": "1683960",
    "end": "1690640"
  },
  {
    "text": "why you should never raise your hand when someone asks a question because then you'll be called on to you know to",
    "start": "1690640",
    "end": "1697399"
  },
  {
    "text": "answer follow-up questions okay and that's really it we've got 6 and a half minutes left um",
    "start": "1697399",
    "end": "1704399"
  },
  {
    "text": "so we can do a little more questions and answering if you want to get involved of course you can talk to you know you can talk to me uh all the development is",
    "start": "1704399",
    "end": "1711159"
  },
  {
    "text": "happening on GitHub we have slack. linkerd doio which please everyone join we can get to 10,000 people there um uh",
    "start": "1711159",
    "end": "1719240"
  },
  {
    "text": "we've got mailing lists if you want the formal announcements we do uh the cncf funds formal thirdparty uh security",
    "start": "1719240",
    "end": "1725440"
  },
  {
    "text": "audits yeah I think we have a pretty friendly and welcoming um Community I do have two quick ads um and then we'll",
    "start": "1725440",
    "end": "1732720"
  },
  {
    "text": "jump into questions uh buoyant itself runs these free engineer focused uh training things called service mesh",
    "start": "1732720",
    "end": "1739480"
  },
  {
    "text": "Academy so if you are interested in learning more about linkerd uh myself and a couple other uh of the Linker",
    "start": "1739480",
    "end": "1746200"
  },
  {
    "text": "folks do deliver this educational content I think it's pretty good we get pretty good reviews it's all free so you",
    "start": "1746200",
    "end": "1752480"
  },
  {
    "text": "don't have to do it um we also have an Enterprise distribution uh if you're running multi-az clusters especially and",
    "start": "1752480",
    "end": "1758760"
  },
  {
    "text": "spending lots of money please come talk to me afterwards and that's really it so 5 and",
    "start": "1758760",
    "end": "1764519"
  },
  {
    "text": "a half minutes exactly remaining any questions let me I'm I'm going to come to you in a second Amir let me start",
    "start": "1764519",
    "end": "1769760"
  },
  {
    "text": "over here yes",
    "start": "1769760",
    "end": "1772279"
  },
  {
    "text": "sir yeah great question so the question was you know Linker the data plate in lease is written in Rust what has the",
    "start": "1782559",
    "end": "1788120"
  },
  {
    "text": "experience been like you know what kind of advantages what's been bad the the right place to learn more about that is",
    "start": "1788120",
    "end": "1794360"
  },
  {
    "text": "at Alex's talk at 2:30 um because she's going to dive into all",
    "start": "1794360",
    "end": "1799519"
  },
  {
    "text": "of that stuff I'd say uh from my perspective it was a real gamble early",
    "start": "1799519",
    "end": "1804679"
  },
  {
    "text": "on because rust in 2018 was like uh you know the language was there but the ecosystem was like barely there um it's",
    "start": "1804679",
    "end": "1812279"
  },
  {
    "text": "really paid off though like almost everything that I think is really powerful and unique and and and amazing",
    "start": "1812279",
    "end": "1817679"
  },
  {
    "text": "about linkerd is because of that choice yeah great question but do do go to that",
    "start": "1817679",
    "end": "1823640"
  },
  {
    "text": "talk all right uh Amir",
    "start": "1823640",
    "end": "1829240"
  },
  {
    "text": "uh I do have some updates about Bo Cloud but I don't want to talk about them here because I want to keep it as open source",
    "start": "1831320",
    "end": "1837640"
  },
  {
    "text": "as possible but thank you I appreciate that question all right yes sir networking expert in the",
    "start": "1837640",
    "end": "1845080"
  },
  {
    "text": "middle so the question was when you're doing M mesh expansion there's configuration does that configuration",
    "start": "1856240",
    "end": "1861960"
  },
  {
    "text": "happen on the VMS or does it happen on the cluster I actually don't know the answer to that question I would my my",
    "start": "1861960",
    "end": "1869639"
  },
  {
    "text": "guess and you know Flynn back there please correct me if I'm wrong my guess would be there's going to be an amount of configuration that has to happen on",
    "start": "1869639",
    "end": "1876039"
  },
  {
    "text": "the VM because you have to tell if nothing else you have to tell the VM where you know where linkerd",
    "start": "1876039",
    "end": "1882279"
  },
  {
    "text": "is to talk about that all right yeah come come find Flynn or find myself",
    "start": "1882279",
    "end": "1887720"
  },
  {
    "text": "afterwards and we'll figure out the right answer but yeah great great question all right uh anyone else",
    "start": "1887720",
    "end": "1894120"
  },
  {
    "text": "another question we're going to sit in silence",
    "start": "1894120",
    "end": "1900880"
  },
  {
    "text": "lock the doors yes Joe",
    "start": "1900880",
    "end": "1905679"
  },
  {
    "text": "please",
    "start": "1916159",
    "end": "1919159"
  },
  {
    "text": "okay so the question was Joe here is a cheap skate and has",
    "start": "1925559",
    "end": "1931760"
  },
  {
    "text": "gpus and and you want to know can you can you use mesh expansion to bridge the GPU and your and your local kubernetes",
    "start": "1931760",
    "end": "1941440"
  },
  {
    "text": "cluster yeah yeah my understanding is yes as",
    "start": "1946080",
    "end": "1953320"
  },
  {
    "text": "long as those gpus can run like you know a a a b a Linux you know have enough",
    "start": "1953320",
    "end": "1959240"
  },
  {
    "text": "Linux Primitives that we can do like the networking stuff that we need to do and can run a binary then yeah that should be just",
    "start": "1959240",
    "end": "1965720"
  },
  {
    "text": "fine yes",
    "start": "1965720",
    "end": "1968880"
  },
  {
    "text": "sir yeah great question so the question was multicluster is that primarily targeted having many clusters in the",
    "start": "1976039",
    "end": "1981880"
  },
  {
    "text": "same region or could that be used for you know clusters in different regions or different clouds the Gateway approach",
    "start": "1981880",
    "end": "1988600"
  },
  {
    "text": "kind of the original approach doesn't care so yes you can use that in multiple clouds we we have adopters today who you",
    "start": "1988600",
    "end": "1994760"
  },
  {
    "text": "know are doing a multicloud approach and tie these things across you know from one Cloud to the next the that Gateway",
    "start": "1994760",
    "end": "2000720"
  },
  {
    "text": "connection is mtls you know so it's secure you can put it over the open internet and you can feel confident in",
    "start": "2000720",
    "end": "2006799"
  },
  {
    "text": "that the flat Network approach doesn't work across regions you need to have like the The L4 L3 L4 capabilities you know",
    "start": "2006799",
    "end": "2015039"
  },
  {
    "text": "sorted out there I believe please green hat correct me if I'm if I'm",
    "start": "2015039",
    "end": "2022360"
  },
  {
    "text": "wrong all right we got time for one last question",
    "start": "2022360",
    "end": "2028799"
  },
  {
    "text": "yes",
    "start": "2035960",
    "end": "2038960"
  },
  {
    "text": "yeah yeah okay so the question was uh we've talked a lot about the linkerd proxy but linkerd also has an init container it has an optional cni like",
    "start": "2044720",
    "end": "2052079"
  },
  {
    "text": "plug-in thing how does ebpf play with all of that um uh I so the way that I",
    "start": "2052079",
    "end": "2058919"
  },
  {
    "text": "see ebpf working with Linker and probably I'm going to be corrected on",
    "start": "2058919",
    "end": "2064000"
  },
  {
    "text": "this but my guess is the thing we can do there that would be most useful is if you were",
    "start": "2064000",
    "end": "2069440"
  },
  {
    "text": "doing a pure TCP proing through linery and you're asking us not to do any L7 metrics at all because this is an",
    "start": "2069440",
    "end": "2075679"
  },
  {
    "text": "application initiated TLS connection for example where we don't want a man in the middle it or it's you know some TCP",
    "start": "2075679",
    "end": "2081398"
  },
  {
    "text": "stream where you're just like I don't care just get it to the other side we could use ebpf to bypass the proxy and",
    "start": "2081399",
    "end": "2087158"
  },
  {
    "text": "just like wire those two things together would that be done at the you know",
    "start": "2087159",
    "end": "2092480"
  },
  {
    "text": "through the init container through the cni level I don't I don't know I'm not sure",
    "start": "2092480",
    "end": "2097560"
  },
  {
    "text": "but that's that's the intersection of the all of those words that you said that that that I'm aware of all right",
    "start": "2097560",
    "end": "2103160"
  },
  {
    "text": "thank you folks really appreciate your time here today I'll be here so come up and ask questions and use",
    "start": "2103160",
    "end": "2109440"
  },
  {
    "text": "linery",
    "start": "2111680",
    "end": "2114680"
  }
]