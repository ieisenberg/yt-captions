[
  {
    "start": "0",
    "end": "16000"
  },
  {
    "text": "[Applause] so before we get started I just want to",
    "start": "950",
    "end": "8220"
  },
  {
    "text": "remind you all that the slides are available online and all the code will be on get lab as well for your reference",
    "start": "8220",
    "end": "13469"
  },
  {
    "text": "after the question we're all here to ask",
    "start": "13469",
    "end": "18510"
  },
  {
    "start": "16000",
    "end": "58000"
  },
  {
    "text": "ourselves is how confident are you that you're not about to break production and",
    "start": "18510",
    "end": "24240"
  },
  {
    "text": "along with that comes the question house are in are you that the changes you're about to make do exactly what you expect",
    "start": "24240",
    "end": "31940"
  },
  {
    "text": "they meet all the requirements set forth by your p.m. engineering manager etc our",
    "start": "31940",
    "end": "38989"
  },
  {
    "text": "goal is to be able to deliver software quickly and reliably we talk about",
    "start": "38989",
    "end": "44430"
  },
  {
    "text": "continuous delivery a lot but how do we get there there are many tools and",
    "start": "44430",
    "end": "50340"
  },
  {
    "text": "techniques for building a robust deployment pipeline and today we hope to add one more to your toolbox the",
    "start": "50340",
    "end": "59550"
  },
  {
    "start": "58000",
    "end": "87000"
  },
  {
    "text": "services we built today often contain a large complex of web of dependencies our",
    "start": "59550",
    "end": "65158"
  },
  {
    "text": "services need to talk to databases storage buckets connect to message brokers we've got to make sure that we",
    "start": "65159",
    "end": "71430"
  },
  {
    "text": "have all of our permissions configured correctly and much more there are a lot of moving pieces to make everything",
    "start": "71430",
    "end": "77460"
  },
  {
    "text": "happen how can we set everything up in a way to ensure that we have everything",
    "start": "77460",
    "end": "83790"
  },
  {
    "text": "configured correctly well Sean and I were on the order management team at",
    "start": "83790",
    "end": "90479"
  },
  {
    "start": "87000",
    "end": "114000"
  },
  {
    "text": "Nordstrom we were faced with a challenge of how to continuously deliver an event-based architecture with confidence",
    "start": "90479",
    "end": "97799"
  },
  {
    "text": "it was a critical component to her ecosystem and we needed to be able to be certain we weren't going to break",
    "start": "97799",
    "end": "103710"
  },
  {
    "text": "anything we're super excited to be here with you all today sharing with you some of our experiences testing enterprise",
    "start": "103710",
    "end": "111119"
  },
  {
    "text": "software so before we get started let's",
    "start": "111119",
    "end": "117030"
  },
  {
    "start": "114000",
    "end": "157000"
  },
  {
    "text": "just go over some quick fundamentals when it comes to testing so our unit tests are going to focus on testing",
    "start": "117030",
    "end": "122880"
  },
  {
    "text": "those internal implementation details of our application so does this function I wrote behave the way that I expect",
    "start": "122880",
    "end": "130250"
  },
  {
    "text": "acceptance test on the other hand which you may some times here referred to as integration",
    "start": "130250",
    "end": "135819"
  },
  {
    "text": "test or a functional test these tests are going to test your entire service",
    "start": "135819",
    "end": "141180"
  },
  {
    "text": "along with its infrastructure and make sure if they're behaving the way that we",
    "start": "141180",
    "end": "146260"
  },
  {
    "text": "expect so these tests are just going to interact with your service at the periphery so given a particular output",
    "start": "146260",
    "end": "152109"
  },
  {
    "text": "input do I get the output that I expect on the other end when testing a",
    "start": "152109",
    "end": "158650"
  },
  {
    "text": "traditional micro service the setup is pretty straightforward we have some code that calls our service that's being",
    "start": "158650",
    "end": "164290"
  },
  {
    "text": "tested and then validates the response we often see this being done in a lower environment that's used for testing the",
    "start": "164290",
    "end": "171549"
  },
  {
    "text": "challenge with testing environments is that often become a bottleneck for deployments we also see it being a",
    "start": "171549",
    "end": "178930"
  },
  {
    "text": "challenge for developers to replicate this environment for local development and we see configuration drift between",
    "start": "178930",
    "end": "190629"
  },
  {
    "text": "production and our lower environments",
    "start": "190629",
    "end": "195959"
  },
  {
    "start": "196000",
    "end": "232000"
  },
  {
    "text": "another barrier to implementing a robust acceptance testing strategy is that our",
    "start": "196949",
    "end": "202090"
  },
  {
    "text": "architectures no longer look quite that simple our services are connecting to databases sending messages out into the abyss and",
    "start": "202090",
    "end": "210060"
  },
  {
    "text": "much more and on top of all this our architectures are constantly evolving",
    "start": "210060",
    "end": "216870"
  },
  {
    "text": "how can we how can we how can we set up our infrastructure and our deployment",
    "start": "216870",
    "end": "223840"
  },
  {
    "text": "strategy anyway and integrate that in to our testing suite sounds pretty complicated sure does Sean but were",
    "start": "223840",
    "end": "232959"
  },
  {
    "text": "these are ephemeral environments to do just that an ephemeral environment is a short-lived environment that we're gonna",
    "start": "232959",
    "end": "239139"
  },
  {
    "text": "spin up for testing and then teardown short-lived is subjective so for testing",
    "start": "239139",
    "end": "245859"
  },
  {
    "text": "we're going to want this to be quick if we're debugging or troubleshooting we may leave that environment up for a",
    "start": "245859",
    "end": "251229"
  },
  {
    "text": "little bit longer the bounds of our environment are also subjective to maintain agility we're going to want to",
    "start": "251229",
    "end": "257289"
  },
  {
    "text": "make sure we're only testing the particular micro service we're trying to deploy that means we're not gonna want",
    "start": "257289",
    "end": "263020"
  },
  {
    "text": "to spin up every micro service or a piece of infrastructure we haven't but we may need to spin up some extra",
    "start": "263020",
    "end": "269440"
  },
  {
    "text": "pieces of infrastructure to be able to properly validate our service for example if our service is writing an",
    "start": "269440",
    "end": "276970"
  },
  {
    "text": "outbound message to a pub sub topic will likely need a subscription to pull from that topic and validate the outbound",
    "start": "276970",
    "end": "284620"
  },
  {
    "text": "message was sent so how can we go about",
    "start": "284620",
    "end": "290530"
  },
  {
    "start": "287000",
    "end": "327000"
  },
  {
    "text": "spinning up one of these ephemeral environments that Erin's talking about so we're gonna want to leverage",
    "start": "290530",
    "end": "295870"
  },
  {
    "text": "infrastructure as code tools so there's a ton of tools out there there's cdk",
    "start": "295870",
    "end": "301230"
  },
  {
    "text": "confirmation ansible terraform plumie and many others and you can even use",
    "start": "301230",
    "end": "307960"
  },
  {
    "text": "bash scripts and a ton of set if you'd like but at the end of the day we're going to need to provision our",
    "start": "307960",
    "end": "313750"
  },
  {
    "text": "environment in a way that is consistently reproducible this will ensure that we are provisioning",
    "start": "313750",
    "end": "319570"
  },
  {
    "text": "provisioning our environment for our tests in the same way that we are provisioning for production so one of",
    "start": "319570",
    "end": "328480"
  },
  {
    "text": "the first things we're going to need is we're going to need a unique way to identify our environment one of the ways",
    "start": "328480",
    "end": "334419"
  },
  {
    "text": "that this can be done is just by configuring an environment variable and adding like sort of like a unique",
    "start": "334419",
    "end": "339970"
  },
  {
    "text": "identifier to it next we're going to",
    "start": "339970",
    "end": "344979"
  },
  {
    "start": "343000",
    "end": "364000"
  },
  {
    "text": "want to make sure that our infrastructure is templatized so on this",
    "start": "344979",
    "end": "350500"
  },
  {
    "text": "will allow us to associate specific tests and environments with our with the course or with their corresponding",
    "start": "350500",
    "end": "355690"
  },
  {
    "text": "resources so here you can see that we're doing that by just leveraging that variable that we could figure it in the",
    "start": "355690",
    "end": "360940"
  },
  {
    "text": "previous slide and we're using it when we go to define our infrastructure next we're going to want to make sure that",
    "start": "360940",
    "end": "366729"
  },
  {
    "start": "364000",
    "end": "381000"
  },
  {
    "text": "both our application as well as our tests are configurable this is going to",
    "start": "366729",
    "end": "373030"
  },
  {
    "text": "allow us to deploy that same exact version of our application to run our test against as what we will be",
    "start": "373030",
    "end": "379120"
  },
  {
    "text": "deploying to production and we're going to want to conditionally conditionally",
    "start": "379120",
    "end": "385990"
  },
  {
    "start": "381000",
    "end": "401000"
  },
  {
    "text": "provision test specific infrastructure so these extra resources are that we",
    "start": "385990",
    "end": "392650"
  },
  {
    "text": "need to deploy for our tests are going to we're going to use them to make validations against our resources that are running a product or that we'd be",
    "start": "392650",
    "end": "399280"
  },
  {
    "text": "the point and lastly we're going to want to make sure that we clean up our resources at",
    "start": "399280",
    "end": "405620"
  },
  {
    "start": "401000",
    "end": "413000"
  },
  {
    "text": "the end of every test run and this will make our environment ephemeral each",
    "start": "405620",
    "end": "413990"
  },
  {
    "start": "413000",
    "end": "477000"
  },
  {
    "text": "service is its own unique snowflake and only you have the context to make the",
    "start": "413990",
    "end": "419720"
  },
  {
    "text": "right call for your service we're gonna want to balance the speed of our test",
    "start": "419720",
    "end": "424880"
  },
  {
    "text": "with how closely our formal environment mimics production a kubernetes cluster takes significantly longer to spin up",
    "start": "424880",
    "end": "431990"
  },
  {
    "text": "than a pub subtopic to save time as well as money we may choose to run all of our",
    "start": "431990",
    "end": "437599"
  },
  {
    "text": "tests against one database instance whereas in production will likely want our own dedicated database instance",
    "start": "437599",
    "end": "446289"
  },
  {
    "text": "these longer-lived pieces of infrastructure can live in a separate repository and may even be owned by a",
    "start": "446289",
    "end": "452630"
  },
  {
    "text": "different team using configuration we can easily make these deviations between",
    "start": "452630",
    "end": "457880"
  },
  {
    "text": "environments there are no hard and fast rules here be sure not to undervalue",
    "start": "457880",
    "end": "465139"
  },
  {
    "text": "your time a faster accepting test suite means a faster deployment pipeline and",
    "start": "465139",
    "end": "470599"
  },
  {
    "text": "often in turn a quicker time to recovery",
    "start": "470599",
    "end": "475120"
  },
  {
    "text": "so today we've put together a simple demo for you all to demonstrate the effectiveness of integrating acceptance",
    "start": "477849",
    "end": "483889"
  },
  {
    "text": "testing with the ephemeral environments into your deployment process so our manager has tasked us with developing a",
    "start": "483889",
    "end": "491330"
  },
  {
    "text": "service that receives a message and upon receiving this message we'll go ahead and take that message and place it in a",
    "start": "491330",
    "end": "497630"
  },
  {
    "text": "storage bucket and then if that succeeds we're gonna publish a notification that",
    "start": "497630",
    "end": "505449"
  },
  {
    "text": "about this message that other downstream services can subscribe to by publishing",
    "start": "505449",
    "end": "511280"
  },
  {
    "text": "that message on a pub sub topic so whenever we go about developing a new",
    "start": "511280",
    "end": "519229"
  },
  {
    "text": "service we want to make sure that we established a solid deployment strategy up front this is gonna ensure that we're",
    "start": "519229",
    "end": "525709"
  },
  {
    "text": "building in quality from day one so before we get into the details of our service let's go ahead and take a look",
    "start": "525709",
    "end": "531620"
  },
  {
    "text": "at what our pipeline looks like so for today we're gonna be using gitlab",
    "start": "531620",
    "end": "537510"
  },
  {
    "start": "534000",
    "end": "585000"
  },
  {
    "text": "CI for all of our pipelines and the demo that you'll see today of course you can",
    "start": "537510",
    "end": "543690"
  },
  {
    "text": "apply any of these concepts and ECI CD system you may be using so here's an example of the pipeline that we have",
    "start": "543690",
    "end": "549209"
  },
  {
    "text": "running on master and it consists of four stages so our first stage here is test and build and this stage it",
    "start": "549209",
    "end": "557130"
  },
  {
    "text": "consists of three jobs so we have one job called test that's just gonna run our unit test and then we have two other",
    "start": "557130",
    "end": "562589"
  },
  {
    "text": "jobs that are building docker images so we're gonna be the building two docker images we're gonna be building one for our acceptance test and one for our",
    "start": "562589",
    "end": "569490"
  },
  {
    "text": "service application and one important thing to note is that we will be using that same docker image for of our",
    "start": "569490",
    "end": "577860"
  },
  {
    "text": "service application that we're going to deploy to run our tests against as what we will be deploying to production the",
    "start": "577860",
    "end": "586139"
  },
  {
    "start": "585000",
    "end": "614000"
  },
  {
    "text": "next stage in our pipeline is our acceptance test stage so this stage is",
    "start": "586139",
    "end": "591240"
  },
  {
    "text": "the stage that is actually going to run our acceptance test as well as spin up our ephemeral infrastructure so this",
    "start": "591240",
    "end": "599699"
  },
  {
    "text": "stage serves as a quality gate essentially preventing our application from being deployed to prod if any of our acceptance tests fail so this will",
    "start": "599699",
    "end": "608519"
  },
  {
    "text": "basically stop you know and faulty application from making it into production so before we continue I want",
    "start": "608519",
    "end": "616380"
  },
  {
    "start": "614000",
    "end": "667000"
  },
  {
    "text": "to quickly introduce Pulu me a bit more since it's the tool we'll be using the provision all over infrastructure in the",
    "start": "616380",
    "end": "622860"
  },
  {
    "text": "rest of the pipeline paluma is an open source infrastructure is code tool that",
    "start": "622860",
    "end": "628140"
  },
  {
    "text": "allows you to use a variety of programming languages to provision your infrastructure we currently support",
    "start": "628140",
    "end": "636529"
  },
  {
    "text": "typescript Python the.net languages and experimentally some other languages as",
    "start": "636529",
    "end": "642720"
  },
  {
    "text": "well you declare the infrastructure that you want and then the plumie CLI figures",
    "start": "642720",
    "end": "648660"
  },
  {
    "text": "out how to get there today we'll be using plumie to provision both our kubernetes and GCP resources which will",
    "start": "648660",
    "end": "656069"
  },
  {
    "text": "make it super easy for us to spin up our film all environments now that we have a",
    "start": "656069",
    "end": "661230"
  },
  {
    "text": "basic understanding of plumie Sean will walk us through how we integrate this into our pipeline",
    "start": "661230",
    "end": "667399"
  },
  {
    "start": "667000",
    "end": "728000"
  },
  {
    "text": "so coming back to our pipeline immediately following our acceptance stage we've got our preview stage so the",
    "start": "667470",
    "end": "675250"
  },
  {
    "text": "plumie CLI comes with a command called luma preview and this is essentially just going to do a dry run of all the",
    "start": "675250",
    "end": "681850"
  },
  {
    "text": "infrastructure that we're going to provision before we actually go to provision it so it's going to give us an idea of what resources are going to be",
    "start": "681850",
    "end": "688420"
  },
  {
    "text": "created updated or deleted before we actually go to make those changes so",
    "start": "688420",
    "end": "694170"
  },
  {
    "text": "many teams like to incorporate this into their code review process because it gives them a chance to validate all the",
    "start": "694170",
    "end": "701440"
  },
  {
    "text": "infrastructure that's going to be changed and all the resources they're going to be changed before they actually",
    "start": "701440",
    "end": "706840"
  },
  {
    "text": "move that it's a prod and the final stage in our pipeline is Pulu me up",
    "start": "706840",
    "end": "715330"
  },
  {
    "text": "so this is the stage that's actually going to go ahead and deploy our infrastructure as well as our service",
    "start": "715330",
    "end": "720400"
  },
  {
    "text": "application to prod assuming that all the other previous stages in our pipeline of passed of course okay so a",
    "start": "720400",
    "end": "729460"
  },
  {
    "start": "728000",
    "end": "749000"
  },
  {
    "text": "quick recap of our demo architecture we have our application that receives a message it places it in a bucket and",
    "start": "729460",
    "end": "736450"
  },
  {
    "text": "then sends out a notification on pub/sub we're going to use go to write our",
    "start": "736450",
    "end": "742510"
  },
  {
    "text": "application so let's go ahead and take a look at our go code",
    "start": "742510",
    "end": "747810"
  },
  {
    "start": "749000",
    "end": "866000"
  },
  {
    "text": "so are in our main go file and you can see we have configuration that we're",
    "start": "753700",
    "end": "760010"
  },
  {
    "text": "taking in we have this helper called get configuration value this is a helper function that just reads an environment",
    "start": "760010",
    "end": "766130"
  },
  {
    "text": "variable and if it's not present it shuts down our application this is",
    "start": "766130",
    "end": "771350"
  },
  {
    "text": "because everything we do today is gonna be configuration driven and if those variables are not set we've done something wrong and we want our",
    "start": "771350",
    "end": "777440"
  },
  {
    "text": "application to shut down these are also what's going to allow our application to talk to different resources and",
    "start": "777440",
    "end": "783770"
  },
  {
    "text": "different environments we then set up our clients to talk to our GCP resources",
    "start": "783770",
    "end": "790750"
  },
  {
    "text": "and then we set up two handlers we have a basic health endpoint and we have our",
    "start": "790750",
    "end": "798800"
  },
  {
    "text": "message handler which is what will be acceptance testing today let's go take a",
    "start": "798800",
    "end": "804020"
  },
  {
    "text": "look at that message handler at the very",
    "start": "804020",
    "end": "812930"
  },
  {
    "text": "top you see that we read in the request body and then we unmarshal that into an",
    "start": "812930",
    "end": "819200"
  },
  {
    "text": "inbound request this is just a simple JSON struct that has a message field if",
    "start": "819200",
    "end": "825350"
  },
  {
    "text": "we can't unmarshal it we return a 400 to our clients because they've sent us something that's incorrectly formatted",
    "start": "825350",
    "end": "832870"
  },
  {
    "text": "we then write the message to our bucket and return the object name that object",
    "start": "832870",
    "end": "840350"
  },
  {
    "text": "name is used to create a new message alert which is marshaled in two bytes",
    "start": "840350",
    "end": "846290"
  },
  {
    "text": "and those bytes are used to write to the pub sub topic as well as respond to our",
    "start": "846290",
    "end": "856340"
  },
  {
    "text": "client and we were still responding with a status accepted okay so now that we have basic understanding of our",
    "start": "856340",
    "end": "862340"
  },
  {
    "text": "application let's go back and look at our architecture so this diagram is a",
    "start": "862340",
    "end": "869930"
  },
  {
    "start": "866000",
    "end": "1199000"
  },
  {
    "text": "little bit overly simplified there's actually many more resources that we",
    "start": "869930",
    "end": "875900"
  },
  {
    "text": "need to create to make this all happen we need service account provision with the correct permissions we need to get a",
    "start": "875900",
    "end": "882140"
  },
  {
    "text": "key for that service account which make into a kubernetes secret and in volume out to our deployment we're also",
    "start": "882140",
    "end": "889430"
  },
  {
    "text": "going to have a kubernetes service with a cluster IP to load balancer application so we'll use paluma to spin",
    "start": "889430",
    "end": "898550"
  },
  {
    "text": "up all of these resources and every produce in a bowl manner let's go ahead and take a look at our code so in a",
    "start": "898550",
    "end": "907120"
  },
  {
    "text": "subdirectory called infrastructure we have our plumie program we're gonna be",
    "start": "907120",
    "end": "912170"
  },
  {
    "text": "using typescript today and the GCP as",
    "start": "912170",
    "end": "918200"
  },
  {
    "text": "well as kubernetes paluma providers so",
    "start": "918200",
    "end": "923300"
  },
  {
    "text": "at the very top you see we're taking in some GCP configuration we this is what",
    "start": "923300",
    "end": "929090"
  },
  {
    "text": "allows us to use the same program to spin up our thermal environment in a test project and then spin up our",
    "start": "929090",
    "end": "936650"
  },
  {
    "text": "production in our project we then have",
    "start": "936650",
    "end": "942260"
  },
  {
    "text": "some application specific configuration so we have our and which is our name of",
    "start": "942260",
    "end": "948140"
  },
  {
    "text": "our environment and so in production this would be like prod or production for one of our thermal environment this",
    "start": "948140",
    "end": "954620"
  },
  {
    "text": "is gonna be like test 1 2 3 and then we also taken our docker tag and this is so that we make sure we're always using",
    "start": "954620",
    "end": "960589"
  },
  {
    "text": "that same immutable image we then have our global stock reference and this is",
    "start": "960589",
    "end": "967550"
  },
  {
    "text": "those longer-lived pieces of infrastructure that we talked about earlier we have a kubernetes cluster and",
    "start": "967550",
    "end": "973670"
  },
  {
    "text": "a namespace we've set up we also have a service account for our acceptance test",
    "start": "973670",
    "end": "979339"
  },
  {
    "text": "and this is what our acceptance test will use to make validations against the GCP resources we also have this",
    "start": "979339",
    "end": "987700"
  },
  {
    "text": "conditional statement below which is the service account for our application in a",
    "start": "987700",
    "end": "995839"
  },
  {
    "text": "testing environment we're going to use our test service account and in production we're going to want to use",
    "start": "995839",
    "end": "1001390"
  },
  {
    "text": "our production service account this is how we can easily make deviations",
    "start": "1001390",
    "end": "1006580"
  },
  {
    "text": "between our environments using configuration we then set up a name",
    "start": "1006580",
    "end": "1012130"
  },
  {
    "text": "variable and this name variable is what we're going to use to name all of our pieces of infrastructure you see we we prepend the",
    "start": "1012130",
    "end": "1019040"
  },
  {
    "text": "environment name to it and this allows us to easily identify all of our test resources as well as make sure that we",
    "start": "1019040",
    "end": "1027438"
  },
  {
    "text": "can spin up multiple ephemeral environments at once so Shawn can be running a pipeline I can be running a",
    "start": "1027439",
    "end": "1032449"
  },
  {
    "text": "pipeline and since we each have our own unique pipe on an ID they're not gonna conflict we then set",
    "start": "1032449",
    "end": "1040850"
  },
  {
    "text": "up our DCP resources for our applications we're set up our topic and give our application permission to",
    "start": "1040850",
    "end": "1046880"
  },
  {
    "text": "publish to the topic we are going to create a bucket and give our application",
    "start": "1046880",
    "end": "1052430"
  },
  {
    "text": "permission to create objects we then set",
    "start": "1052430",
    "end": "1057860"
  },
  {
    "text": "up this cluster provider and this cluster provider will you'll see referenced below and it will make sure that we are deploying our kubernetes",
    "start": "1057860",
    "end": "1065150"
  },
  {
    "text": "resources to the correct cluster and namespace so we've provisioned the",
    "start": "1065150",
    "end": "1070880"
  },
  {
    "text": "correct permissions on our service account and now we need to get a key and we use that key to create a kubernetes",
    "start": "1070880",
    "end": "1077900"
  },
  {
    "text": "secret this is the first kubernetes resource we look at so I just want to take a second to talk about it a little",
    "start": "1077900",
    "end": "1083300"
  },
  {
    "text": "bit more so it looks very similar to a kubernetes manifest file that you may be familiar with the structure - all of",
    "start": "1083300",
    "end": "1090590"
  },
  {
    "text": "these are the same since we're using a programming language such as typescript we're gonna get some type safety",
    "start": "1090590",
    "end": "1096220"
  },
  {
    "text": "auto-completion things like that and we're also going to be able to reference that service account key that we just",
    "start": "1096220",
    "end": "1102560"
  },
  {
    "text": "created above so if we were using something else to provision our",
    "start": "1102560",
    "end": "1108350"
  },
  {
    "text": "infrastructure we may need a lot of bash magic to make this happen but here it's as easy as just referencing a variable",
    "start": "1108350",
    "end": "1116200"
  },
  {
    "text": "okay and then we have our deployment once again our deployment is looks very",
    "start": "1116200",
    "end": "1121940"
  },
  {
    "text": "similar to a kubernetes manifest file this is just going to actually be running our application you'll see we",
    "start": "1121940",
    "end": "1128330"
  },
  {
    "text": "get some things like reuse and drying out our code by creating those a playable above which we can reference",
    "start": "1128330",
    "end": "1134030"
  },
  {
    "text": "throughout our deployment as well as in our kubernetes service that you'll see below some other things to call out",
    "start": "1134030",
    "end": "1141020"
  },
  {
    "text": "about this deployment we have that docker tag that we talked about earlier",
    "start": "1141020",
    "end": "1147970"
  },
  {
    "text": "we have environment variables that were setting for our deployment and we can",
    "start": "1147970",
    "end": "1154490"
  },
  {
    "text": "reference that topic and bucket that we just created this is what's gonna configure the Go application that we saw",
    "start": "1154490",
    "end": "1161270"
  },
  {
    "text": "earlier and it's also was going to make sure that we're always talking to the correct resources in the correct",
    "start": "1161270",
    "end": "1167330"
  },
  {
    "text": "environment and lost them to call up here is that we have that volume amount",
    "start": "1167330",
    "end": "1172870"
  },
  {
    "text": "where we can just reference the secret last resource we have to create here is",
    "start": "1172870",
    "end": "1178670"
  },
  {
    "text": "our service and you can see where we referencing those app labels that",
    "start": "1178670",
    "end": "1184580"
  },
  {
    "text": "cluster provider again and so this is the same pluming program that will run for a few more environments as well as",
    "start": "1184580",
    "end": "1190490"
  },
  {
    "text": "production let's go ahead and take a look at how we're gonna accept and test this so since our service is not",
    "start": "1190490",
    "end": "1204800"
  },
  {
    "start": "1199000",
    "end": "1374000"
  },
  {
    "text": "publicly exposed we're gonna use a kubernetes job to run our acceptance test this is a great technique to use",
    "start": "1204800",
    "end": "1211820"
  },
  {
    "text": "when you're running CI from some external runners such as get lab CI or Travis our exception test will run in",
    "start": "1211820",
    "end": "1222290"
  },
  {
    "text": "the job and if our acceptance tests pass then our job will pass in our cept infest fail then our drought will fail",
    "start": "1222290",
    "end": "1228490"
  },
  {
    "text": "this is also what we'll actually be doing the validation to make sure service is operating correctly let's go",
    "start": "1228490",
    "end": "1234890"
  },
  {
    "text": "ahead and take a look at the go code that is our acceptance test so we have a",
    "start": "1234890",
    "end": "1241760"
  },
  {
    "text": "subdirectory called acceptance we have this acceptance underscore test go file you see that we're once again taking",
    "start": "1241760",
    "end": "1248570"
  },
  {
    "text": "configuration in everything we do is configuration driven so we want to make",
    "start": "1248570",
    "end": "1254059"
  },
  {
    "text": "sure our acceptance tests are validating against the correct resources we then",
    "start": "1254059",
    "end": "1261320"
  },
  {
    "text": "have our happy path test and we set up our clients to talk to our GCP resources",
    "start": "1261320",
    "end": "1267500"
  },
  {
    "text": "and then we create a test message and at",
    "start": "1267500",
    "end": "1272809"
  },
  {
    "text": "this point everyone's a little bit concerned because we've looked at go code we've looked at type script code",
    "start": "1272809",
    "end": "1280130"
  },
  {
    "text": "and you're wondering are we about to look at some Ruby code as well if you've",
    "start": "1280130",
    "end": "1285710"
  },
  {
    "text": "worked with me before you know that ruby is actually my dog and she often makes",
    "start": "1285710",
    "end": "1291350"
  },
  {
    "text": "her way into all of my tests and you're",
    "start": "1291350",
    "end": "1298310"
  },
  {
    "text": "also wondering how awesome ruby is and you can go and get blamed this line of code and see that I was not the one that wrote it okay so we then go and post a",
    "start": "1298310",
    "end": "1307340"
  },
  {
    "text": "test message and we validate that the status code was correct the status",
    "start": "1307340",
    "end": "1314150"
  },
  {
    "text": "accepted and then we read the response",
    "start": "1314150",
    "end": "1319700"
  },
  {
    "text": "body and validate that we can get the object name from it we then validate",
    "start": "1319700",
    "end": "1325430"
  },
  {
    "text": "that we've sent a message to pub/sub and",
    "start": "1325430",
    "end": "1329980"
  },
  {
    "text": "that that pub/sub message contains that same object name that was in the initial",
    "start": "1330520",
    "end": "1336410"
  },
  {
    "text": "work in the initial response and then we",
    "start": "1336410",
    "end": "1341570"
  },
  {
    "text": "validate that the message is stored in pub oh sorry the message is stored in our bucket and that the message matches that message",
    "start": "1341570",
    "end": "1349370"
  },
  {
    "text": "that we initially send the last thing we have to do is clean up the object and this is because we want to be able to",
    "start": "1349370",
    "end": "1355520"
  },
  {
    "text": "cleanly teardown our formal environment and we also have a side path test which",
    "start": "1355520",
    "end": "1363350"
  },
  {
    "text": "we post a message warning marshal and validate that we get back that 400 okay",
    "start": "1363350",
    "end": "1369500"
  },
  {
    "text": "so let's go back and look at our architecture one more time so we've",
    "start": "1369500",
    "end": "1377600"
  },
  {
    "start": "1374000",
    "end": "1542000"
  },
  {
    "text": "already looked at how we use paluma to spin up all those blue pieces of infrastructure and now we need to",
    "start": "1377600",
    "end": "1384230"
  },
  {
    "text": "conditionally provision six more pieces of infrastructure where need are our job",
    "start": "1384230",
    "end": "1389780"
  },
  {
    "text": "we're going to need correct permissions secret etc so let's go look at halloumi",
    "start": "1389780",
    "end": "1396470"
  },
  {
    "text": "and see how we are polluting code to see how we've provisioned that conditioning",
    "start": "1396470",
    "end": "1401920"
  },
  {
    "text": "the bottom of our index dot TS file so this was that type to a file that we walked through earlier and the right",
    "start": "1401920",
    "end": "1408680"
  },
  {
    "text": "under that service we have our conditional statement and we're using a program in language it's as easy as an if",
    "start": "1408680",
    "end": "1415310"
  },
  {
    "text": "statement if our environment starts with test then set up our acceptance test and",
    "start": "1415310",
    "end": "1420890"
  },
  {
    "text": "this doesn't just set them up it actually is going to also run the job since production doesn't start with test",
    "start": "1420890",
    "end": "1428150"
  },
  {
    "text": "it won't set up our acceptance test for prod let's click in and see what that",
    "start": "1428150",
    "end": "1433610"
  },
  {
    "text": "looks like so you can see we're setting",
    "start": "1433610",
    "end": "1440960"
  },
  {
    "text": "up a subscription for our topic we are",
    "start": "1440960",
    "end": "1447370"
  },
  {
    "text": "giving our acceptance test permission to subscribe we're giving our acceptance",
    "start": "1447370",
    "end": "1454610"
  },
  {
    "text": "test object admin rights and this is so that it can go and delete that objects",
    "start": "1454610",
    "end": "1460310"
  },
  {
    "text": "like we talked about earlier we then create a service account key and",
    "start": "1460310",
    "end": "1465950"
  },
  {
    "text": "kubernetes secret just like we did earlier except this time this is for our acceptance tests and then we create our",
    "start": "1465950",
    "end": "1477380"
  },
  {
    "text": "kubernetes job so a Cooper new job is actually going to be what's running our acceptance tests some things to call out",
    "start": "1477380",
    "end": "1485120"
  },
  {
    "text": "here you see that dr. tag again you see those configuration values easily being",
    "start": "1485120",
    "end": "1490130"
  },
  {
    "text": "passed in and at the very end you'll see the dependency on our our deployment so",
    "start": "1490130",
    "end": "1497450"
  },
  {
    "text": "this means that we will Pulu me we'll wait until our deployment is complete before it spins up the job the default",
    "start": "1497450",
    "end": "1506030"
  },
  {
    "text": "behavior of paluma will be to when we run pull me up to create all the",
    "start": "1506030",
    "end": "1512150"
  },
  {
    "text": "resources for us and that includes waiting for the job to run to completion",
    "start": "1512150",
    "end": "1517780"
  },
  {
    "text": "this is just the default behavior it's over writable but it works really well for us because it means that with one",
    "start": "1517780",
    "end": "1523850"
  },
  {
    "text": "follow me up command we're gonna spin up our thermal environment our acceptance test and just be able to look at the",
    "start": "1523850",
    "end": "1530570"
  },
  {
    "text": "exit code to determine whether our acceptance tests have passed or failed",
    "start": "1530570",
    "end": "1536050"
  },
  {
    "text": "made it through all the code Oh awesome",
    "start": "1537990",
    "end": "1545149"
  },
  {
    "start": "1542000",
    "end": "1567000"
  },
  {
    "text": "our pipeline has passed our application is deployed to production and businesses",
    "start": "1545149",
    "end": "1551369"
  },
  {
    "text": "out throwing a party that is celebrating all the new features that have been deployed and our customers are extremely",
    "start": "1551369",
    "end": "1557220"
  },
  {
    "text": "happy and of course we were able to do this by leveraging acceptance testing with the ephemeral environments that",
    "start": "1557220",
    "end": "1563519"
  },
  {
    "text": "gave us that confidence to move quickly not so fast",
    "start": "1563519",
    "end": "1568700"
  },
  {
    "start": "1567000",
    "end": "1913000"
  },
  {
    "text": "Monday morning rolls around and we have a new requirement instead of having your",
    "start": "1568700",
    "end": "1574379"
  },
  {
    "text": "application write directly to the pub subtopic we want our bucket to trigger the notification this means the",
    "start": "1574379",
    "end": "1582360"
  },
  {
    "text": "peripheral behavior of our application is going to remain identical but we're",
    "start": "1582360",
    "end": "1587369"
  },
  {
    "text": "gonna have to change both our application and your infrastructure luckily we've set ourselves up for",
    "start": "1587369",
    "end": "1593309"
  },
  {
    "text": "success by creating a robust pipeline and we'll be able to move quickly and",
    "start": "1593309",
    "end": "1598409"
  },
  {
    "text": "make this change so let's go ahead and look at the PR that we opened to make",
    "start": "1598409",
    "end": "1603600"
  },
  {
    "text": "this happen so you can see that we're removing our dependency on pub/sub for",
    "start": "1603600",
    "end": "1610499"
  },
  {
    "text": "application our application no longer needs to be able to publish the topic",
    "start": "1610499",
    "end": "1617690"
  },
  {
    "text": "but our bucket does need to be able to publish the topic we need to create the",
    "start": "1617690",
    "end": "1624779"
  },
  {
    "text": "GCP notification and then we're going to",
    "start": "1624779",
    "end": "1630600"
  },
  {
    "text": "delete a lot of stuff and I don't know about you all but I really like pr's where I just get to delete a lot of code so we're going to remove configuration",
    "start": "1630600",
    "end": "1638580"
  },
  {
    "text": "from our application there handler no longer needs that topic",
    "start": "1638580",
    "end": "1645528"
  },
  {
    "text": "yep we're moving it from our handler our handler doesn't need to write and we can remove that right to pub/sub helper okay",
    "start": "1648500",
    "end": "1655049"
  },
  {
    "text": "so let's go ahead and take a look up pipeline and see howl is dead Oh Shawn",
    "start": "1655049",
    "end": "1661260"
  },
  {
    "text": "it failed what happened I don't know let's go take a look at our acceptance that's Chavan see if we can figure out",
    "start": "1661260",
    "end": "1668429"
  },
  {
    "text": "what went wrong here so if we take a look at the output from our acceptance s",
    "start": "1668429",
    "end": "1674940"
  },
  {
    "text": "stage we can see that okay that we you",
    "start": "1674940",
    "end": "1680220"
  },
  {
    "text": "can see that we ran MPM install which was basically just bringing in all those dependencies that a plumie program you",
    "start": "1680220",
    "end": "1686130"
  },
  {
    "text": "get to run keep scrolling we can see",
    "start": "1686130",
    "end": "1691710"
  },
  {
    "text": "that we're setting up those configurable values that we've been talking about during the presentation and of course we",
    "start": "1691710",
    "end": "1697980"
  },
  {
    "text": "ran Pulu me up and here you can see that we're skipping the preview because this is just for our acceptance test so we're",
    "start": "1697980",
    "end": "1704370"
  },
  {
    "text": "just going to go ahead and just spin up all the infrastructure so of course this command deployed our service application",
    "start": "1704370",
    "end": "1710789"
  },
  {
    "text": "spun up all of our ephemeral infrastructure and of course ran that acceptance test job so if we keep",
    "start": "1710789",
    "end": "1717419"
  },
  {
    "text": "scrolling here let's see",
    "start": "1717419",
    "end": "1721549"
  },
  {
    "text": "we can see that our job was running and we can see that it failed so let's see",
    "start": "1725070",
    "end": "1730380"
  },
  {
    "text": "if we can take a look at that log output from our acceptance test job oh so we",
    "start": "1730380",
    "end": "1737700"
  },
  {
    "text": "can see it failed here it failed when we try to publish that message to pub/sub and it looks like it expected a value",
    "start": "1737700",
    "end": "1746910"
  },
  {
    "text": "but it got nil so it seems like our message payload was empty and we went to publish so we can see a few more",
    "start": "1746910",
    "end": "1754080"
  },
  {
    "text": "failures occurring here these all seem to be related to the failure above so we can keep scrolling and we think looks",
    "start": "1754080",
    "end": "1762900"
  },
  {
    "text": "good and at the end we are running our paluma destroy command so of course this",
    "start": "1762900",
    "end": "1768660"
  },
  {
    "text": "is going to tear down all of our infrastructure at the end of the test and that's it",
    "start": "1768660",
    "end": "1775620"
  },
  {
    "text": "so it looks like the issue was that our message was empty when we went to publish sorry push to change that fixes",
    "start": "1775620",
    "end": "1783840"
  },
  {
    "text": "this and we'll look at the different layers commit that was pushed so we set",
    "start": "1783840",
    "end": "1794580"
  },
  {
    "text": "payload format to none when any interview JSON it's easy to miss things",
    "start": "1794580",
    "end": "1800040"
  },
  {
    "text": "and code reviews you think you've done things correctly but until you've actually spun up an environment and run",
    "start": "1800040",
    "end": "1807000"
  },
  {
    "text": "code through it it's often difficult to know that things are working as they should",
    "start": "1807000",
    "end": "1812510"
  },
  {
    "text": "let's go ahead and take a look at this pipeline",
    "start": "1812510",
    "end": "1817040"
  },
  {
    "text": "so we see it's all green which is awesome you see that the stages are identical to those stages that Shawn",
    "start": "1822270",
    "end": "1828059"
  },
  {
    "text": "walked us through earlier on our merge request the difference here is that we don't do that",
    "start": "1828059",
    "end": "1833540"
  },
  {
    "text": "Pulu me up to production because it's a merge request we want to make sure we're validating everything correctly so we've",
    "start": "1833540",
    "end": "1838980"
  },
  {
    "text": "done our code review we know our acceptance tests are working let's go ahead and look at our plumie preview and",
    "start": "1838980",
    "end": "1845010"
  },
  {
    "text": "see actually before we do that can we scroll to the top I just want to show so",
    "start": "1845010",
    "end": "1850500"
  },
  {
    "text": "this pipeline took seven minutes and 55 seconds we often see somewhere between six minutes and eight minutes for a",
    "start": "1850500",
    "end": "1857190"
  },
  {
    "text": "pipeline to run on a merge request this is pretty fast to be building our acceptance test our service running our",
    "start": "1857190",
    "end": "1864210"
  },
  {
    "text": "acceptance test and during our preview let's go ahead and take a look at our plumie preview so as part of our merge",
    "start": "1864210",
    "end": "1873120"
  },
  {
    "text": "request review process we can look and validate that our infrastructure changes are the ones that we expect so we scroll",
    "start": "1873120",
    "end": "1881490"
  },
  {
    "text": "we see our plumie preview and then we can see a lot of the pieces of infrastructure or remaining identical",
    "start": "1881490",
    "end": "1888800"
  },
  {
    "text": "the difference is that we have a topic I am binding that we're adding we're",
    "start": "1888800",
    "end": "1894090"
  },
  {
    "text": "adding a notification our deployment is changing which is as expected since our",
    "start": "1894090",
    "end": "1900120"
  },
  {
    "text": "application has changed and removing the topic I am member so this looks great",
    "start": "1900120",
    "end": "1905520"
  },
  {
    "text": "and it looks like our merge request is ready to be merged using ephemeral",
    "start": "1905520",
    "end": "1915450"
  },
  {
    "start": "1913000",
    "end": "1923000"
  },
  {
    "text": "environments and acceptance testing we were able to iterate quickly and meet our new requirements and now it's time",
    "start": "1915450",
    "end": "1921150"
  },
  {
    "text": "to wrap things up acceptance testing allows you to move quickly if there's",
    "start": "1921150",
    "end": "1927960"
  },
  {
    "text": "any doubt in your mind about whether or not you're about to break production add another test automated testing ensures",
    "start": "1927960",
    "end": "1936660"
  },
  {
    "text": "our application works as it should today as well as six months from now when",
    "start": "1936660",
    "end": "1942600"
  },
  {
    "text": "you're out on vacation they document the behavior of our service so that you as",
    "start": "1942600",
    "end": "1948750"
  },
  {
    "text": "well as future team members have a better understanding of how it's meant to operate",
    "start": "1948750",
    "end": "1954659"
  },
  {
    "text": "and by being loosely coupled with implementation details we make sweeping changes to application and still",
    "start": "1954659",
    "end": "1961529"
  },
  {
    "text": "confidently push to production using",
    "start": "1961529",
    "end": "1967529"
  },
  {
    "text": "ephemeral environments with our acceptance test makes developers even more productive infrastructure is a",
    "start": "1967529",
    "end": "1973499"
  },
  {
    "text": "critical component of our application we need to be validating that our application is correctly interacting",
    "start": "1973499",
    "end": "1979679"
  },
  {
    "text": "with its defendant infrastructure being able to run these tests before merging",
    "start": "1979679",
    "end": "1985200"
  },
  {
    "text": "to master and being able to run multiple tests at once gives us those quick feedback loops and most importantly we",
    "start": "1985200",
    "end": "1994169"
  },
  {
    "text": "encourage all of our engineers to use automated testing there you have it",
    "start": "1994169",
    "end": "2000889"
  },
  {
    "start": "1999000",
    "end": "2028000"
  },
  {
    "text": "another tool for your toolbox thank you all for coming out today and I'm not",
    "start": "2000889",
    "end": "2005989"
  },
  {
    "text": "sure if we have time for questions nope we'll stick around outside the ballroom",
    "start": "2005989",
    "end": "2013059"
  },
  {
    "text": "thanks again as said feel free to ask questions outside in the hallway but God move out for the next talk thank you",
    "start": "2019710",
    "end": "2028919"
  }
]