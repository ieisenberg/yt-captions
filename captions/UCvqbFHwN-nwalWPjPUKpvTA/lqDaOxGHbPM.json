[
  {
    "start": "0",
    "end": "421000"
  },
  {
    "text": "hello everyone welcome to kubecon valencia",
    "start": "0",
    "end": "5200"
  },
  {
    "text": "we're here to talk about cloud native storage and the cncf storage tag",
    "start": "5200",
    "end": "11200"
  },
  {
    "text": "[Music] we're recording this and there are going to be some virtual uh questions",
    "start": "11200",
    "end": "16880"
  },
  {
    "text": "potentially as well and lisa mourinho over here is moderating the",
    "start": "16880",
    "end": "22000"
  },
  {
    "text": "uh the discussion so a little bit of introductions my name is",
    "start": "22000",
    "end": "27119"
  },
  {
    "text": "alex kirkop i'm the co-chair of the cncf storage tag and this is my co-presenter rafael",
    "start": "27119",
    "end": "34559"
  },
  {
    "text": "espositoli i i work for that as an architected openshift architect in consulting",
    "start": "34559",
    "end": "41680"
  },
  {
    "text": "we also had uh jinyang who was supposed to join us but unfortunately she couldn't travel at the last at the last",
    "start": "41680",
    "end": "47840"
  },
  {
    "text": "moment but we do have a little video clip from harry later on so that's cool",
    "start": "47840",
    "end": "53360"
  },
  {
    "text": "um so we're going to talk about a few things today um today we're going to talk about uh a little overview of the",
    "start": "53360",
    "end": "59440"
  },
  {
    "text": "tag and maybe if you're interested how you can join and and and help with the community we're going to talk a little bit about",
    "start": "59440",
    "end": "66080"
  },
  {
    "text": "cloud native storage and you know what it is and why it's important and then we're going to cover some of the",
    "start": "66080",
    "end": "72799"
  },
  {
    "text": "documents and materials that we've been working on in the tank like our landscape documents the performance and",
    "start": "72799",
    "end": "79040"
  },
  {
    "text": "benchmarking and also the disaster recovery and finally we're going to finish off",
    "start": "79040",
    "end": "84880"
  },
  {
    "text": "with a little view of some of the projects which are in the cncf landscape for",
    "start": "84880",
    "end": "90640"
  },
  {
    "text": "storage so by way of introduction the",
    "start": "90640",
    "end": "96159"
  },
  {
    "text": "cncf tank storage tag is the technical advisory group a couple of was created",
    "start": "96159",
    "end": "103200"
  },
  {
    "text": "a couple of years back and originally was called the sig but then we realized that there was too",
    "start": "103200",
    "end": "109280"
  },
  {
    "text": "much confusion between kubernetes cigs and cncf sig so we renamed the cncf sig to tags",
    "start": "109280",
    "end": "116399"
  },
  {
    "text": "um we're we're we meet uh every two weeks um or twice a",
    "start": "116399",
    "end": "122079"
  },
  {
    "text": "month uh on the at eight a.m pacific so five pm uh european",
    "start": "122079",
    "end": "128479"
  },
  {
    "text": "and we we have all of our calls online and everything is is public so please feel",
    "start": "128479",
    "end": "134560"
  },
  {
    "text": "free to join the tag is a group of diverse people we",
    "start": "134560",
    "end": "139760"
  },
  {
    "text": "have individual contributors we have um uh representatives from different storage",
    "start": "139760",
    "end": "146080"
  },
  {
    "text": "vendors but fundamentally they're all uh expert have provide expertise in our storage space um we have a number of",
    "start": "146080",
    "end": "153440"
  },
  {
    "text": "coaches tech leads and liaise with talk which is the technical operations committee",
    "start": "153440",
    "end": "160239"
  },
  {
    "text": "one of the things that the tag is designed to do is effectively to help scale the cncf so so",
    "start": "160239",
    "end": "166239"
  },
  {
    "text": "as the cncf keeps on scaling with hundreds of members and and end user",
    "start": "166239",
    "end": "171519"
  },
  {
    "text": "organizations we work with the toc to to help review projects and provide",
    "start": "171519",
    "end": "177760"
  },
  {
    "text": "expertise in our particular area and we help review and",
    "start": "177760",
    "end": "182959"
  },
  {
    "text": "do the due diligence on uh storage projects that are going through incubation or graduation within the",
    "start": "182959",
    "end": "189360"
  },
  {
    "text": "within the cncf and and finally we also prepare content to help end users understand",
    "start": "189360",
    "end": "196480"
  },
  {
    "text": "cloud-native storage and what kind of storage does in the environment so",
    "start": "196480",
    "end": "201920"
  },
  {
    "text": "i'm just going to touch on a couple of minutes on why cloud native storage is important i guess you're all here because you know",
    "start": "201920",
    "end": "208560"
  },
  {
    "text": "a little bit about it but i'll go out and say this there is no such thing as a stateless architecture",
    "start": "208560",
    "end": "216000"
  },
  {
    "text": "all applications everywhere store states somewhere whether it's a database a file",
    "start": "216000",
    "end": "221120"
  },
  {
    "text": "a key value store an object store or a file system",
    "start": "221120",
    "end": "226400"
  },
  {
    "text": "so this is an integral part of of each parts of the environment and and whilst",
    "start": "226400",
    "end": "231440"
  },
  {
    "text": "um in some of the cloud native spaces stateless was the focus for a number of years stateful applications are a thing",
    "start": "231440",
    "end": "238720"
  },
  {
    "text": "and all the database providers all the key value stores all the objects etc um provide a plethora of solutions for",
    "start": "238720",
    "end": "247040"
  },
  {
    "text": "this so a little bit about what cloud native storage is um a few of the key things are that it's",
    "start": "247040",
    "end": "254480"
  },
  {
    "text": "declarative and composable so in much the same way that developers should be able to define cpu memory networking",
    "start": "254480",
    "end": "262880"
  },
  {
    "text": "load balancers etc in in for their environment and for their application they should also be able to define the",
    "start": "262880",
    "end": "269120"
  },
  {
    "text": "requirements that they need from storage and the data services for high availability and disaster recovery",
    "start": "269120",
    "end": "275759"
  },
  {
    "text": "and we'll touch on a little bit of that later the other key important thing is that",
    "start": "275759",
    "end": "281360"
  },
  {
    "text": "cloud data storage is application-centric and what do i mean by that today",
    "start": "281360",
    "end": "287360"
  },
  {
    "text": "a lot of storage solutions are server-centric and we think of of storage in a very server or operating",
    "start": "287360",
    "end": "294000"
  },
  {
    "text": "system way where say volumes are presented to a particular server or databases are installed on us on a",
    "start": "294000",
    "end": "300960"
  },
  {
    "text": "specific server but what we what we're looking at with cloud native storage is is the portability of the storage",
    "start": "300960",
    "end": "307120"
  },
  {
    "text": "environment and the data services they're in right so whether you're accessing storage by um an api or",
    "start": "307120",
    "end": "313919"
  },
  {
    "text": "whether you're accessing it like it with a database or whether you're accessing storage volumes for example",
    "start": "313919",
    "end": "319680"
  },
  {
    "text": "you want the storage to be portable and move with the application and as as your application uh scales and",
    "start": "319680",
    "end": "328320"
  },
  {
    "text": "fails overs and and and gets automated by things like kubernetes um and i'll touch on this last point",
    "start": "328320",
    "end": "334720"
  },
  {
    "text": "here as well which is it's a bit cliche then some people roll their eyes but but i also think that",
    "start": "334720",
    "end": "339840"
  },
  {
    "text": "cloud native storage should be agile and what do i mean by that in cloud native environments you have lots of moving",
    "start": "339840",
    "end": "345440"
  },
  {
    "text": "parts um nodes come and go we get get rebuilt classes scale up and scale down on the",
    "start": "345440",
    "end": "352080"
  },
  {
    "text": "bands and and really you we need to think about how they perform and how",
    "start": "352080",
    "end": "357120"
  },
  {
    "text": "security and how availability is is made in that ever-changing",
    "start": "357120",
    "end": "362240"
  },
  {
    "text": "environment so um in the uh in the cloud native um",
    "start": "362240",
    "end": "370160"
  },
  {
    "text": "in the cncf storage tag one of the things we did to help uh end users work is we",
    "start": "370160",
    "end": "376240"
  },
  {
    "text": "created a storage white paper which describes some",
    "start": "376240",
    "end": "382160"
  },
  {
    "text": "of the attributes um that we would like to look at in terms of um in terms of",
    "start": "382160",
    "end": "387440"
  },
  {
    "text": "cloud native storage this was supposed to be presented by zhing so i'm going to play a quick five minute video um of",
    "start": "387440",
    "end": "394639"
  },
  {
    "text": "of the presentation here",
    "start": "394639",
    "end": "398720"
  },
  {
    "text": "is the audio",
    "start": "402720",
    "end": "406120"
  },
  {
    "text": "all right there's no audio from the video",
    "start": "410400",
    "end": "414680"
  },
  {
    "start": "421000",
    "end": "678000"
  },
  {
    "text": "storage systems have several storage attributes availability scalability performance",
    "start": "422319",
    "end": "428639"
  },
  {
    "text": "consistency and durability availability defines the ability to",
    "start": "428639",
    "end": "433840"
  },
  {
    "text": "access the data during failure conditions scalability can be measured by the",
    "start": "433840",
    "end": "439840"
  },
  {
    "text": "ability to scale the number of clients throughput or number of operations",
    "start": "439840",
    "end": "445039"
  },
  {
    "text": "the capacity and the number of components performance can be measured against",
    "start": "445039",
    "end": "450960"
  },
  {
    "text": "latency the number of operations per second and the throughput",
    "start": "450960",
    "end": "457120"
  },
  {
    "text": "consistency refers to the ability to access newly created data or updates",
    "start": "457120",
    "end": "463120"
  },
  {
    "text": "after it has been committed a system can either be eventually consistent or",
    "start": "463120",
    "end": "471039"
  },
  {
    "text": "actually consistent durability is affected by the data",
    "start": "471039",
    "end": "476160"
  },
  {
    "text": "production layers levels of redundancy the endurance of the storage media and ability to detect",
    "start": "476160",
    "end": "484160"
  },
  {
    "text": "corruption and recover the data there are several smudge layers that can",
    "start": "484160",
    "end": "491120"
  },
  {
    "text": "impact the storage attributes for example rather than directly access",
    "start": "491120",
    "end": "496160"
  },
  {
    "text": "resources a hypervisor can provide access to resources which could add excess",
    "start": "496160",
    "end": "502160"
  },
  {
    "text": "overhead storage topology describes the arrangement of storage and compute",
    "start": "502160",
    "end": "508240"
  },
  {
    "text": "resources and the data link between them this includes centralized",
    "start": "508240",
    "end": "514159"
  },
  {
    "text": "distributed sharded and hyper-converged topologies storage systems usually",
    "start": "514159",
    "end": "521039"
  },
  {
    "text": "have data production layer which adds redundancy this refers to raid erasure coding and",
    "start": "521039",
    "end": "527279"
  },
  {
    "text": "replicas storage systems usually provide data services in addition to the core storage",
    "start": "527279",
    "end": "534800"
  },
  {
    "text": "functions including replication snapshots clones and so on",
    "start": "534800",
    "end": "541360"
  },
  {
    "text": "so this system ultimately process data on physical study layer which is usually",
    "start": "541360",
    "end": "547680"
  },
  {
    "text": "non-volatile it has impacts on the overall performance and the long-term durability",
    "start": "547680",
    "end": "555519"
  },
  {
    "text": "in this diagram we can see that workloads consume storage through different data access interfaces",
    "start": "556480",
    "end": "563360"
  },
  {
    "text": "there are two categories of data access interfaces here we call them volumes and api",
    "start": "563360",
    "end": "569760"
  },
  {
    "text": "container orchestration system has interfaces for volumes which supports both block and file systems",
    "start": "569760",
    "end": "577839"
  },
  {
    "text": "under api we have object store api that stores for that stores or retrieves objects",
    "start": "577839",
    "end": "586000"
  },
  {
    "text": "note that there is a kubernetes six storage sub project called cozy container object",
    "start": "586000",
    "end": "591680"
  },
  {
    "text": "storage interface which introduces kubernetes apis to support",
    "start": "591680",
    "end": "597279"
  },
  {
    "text": "orchestration of object store operations for kubernetes workloads",
    "start": "597279",
    "end": "602399"
  },
  {
    "text": "it also introduces cozy as a set of grp's interfaces so that a",
    "start": "602399",
    "end": "607839"
  },
  {
    "text": "object story vendor can write a driver for provisioning accessing object stores",
    "start": "607839",
    "end": "613519"
  },
  {
    "text": "this is targeting alpha in kubernetes 1.25 release on the api we also have key",
    "start": "613519",
    "end": "620399"
  },
  {
    "text": "value stores and databases now let's take a look of the obstruction and",
    "start": "620399",
    "end": "627839"
  },
  {
    "text": "management interfaces the control plane interfaces here refers",
    "start": "627839",
    "end": "633120"
  },
  {
    "text": "to storage interface directly supported by seos",
    "start": "633120",
    "end": "638480"
  },
  {
    "text": "this includes container storage interface csi and the docker volume driver interface",
    "start": "638480",
    "end": "645839"
  },
  {
    "text": "this orange box here is an extension of control plane interfaces",
    "start": "645839",
    "end": "651040"
  },
  {
    "text": "for application api including key value store and databases",
    "start": "651040",
    "end": "656959"
  },
  {
    "text": "ceos currently don't have direct interfaces for it yet but we could have operators to support",
    "start": "656959",
    "end": "664640"
  },
  {
    "text": "key value stores or databases to work in kubernetes that's all i have for the storage",
    "start": "664640",
    "end": "671600"
  },
  {
    "text": "landscape white paper now i will hand it over to alex to talk about the performance by paper",
    "start": "671600",
    "end": "678720"
  },
  {
    "text": "thank you virtually so we'll move on so",
    "start": "678720",
    "end": "684160"
  },
  {
    "text": "after we after we put together the storage uh white paper which which effectively covers the attributes and",
    "start": "684160",
    "end": "690720"
  },
  {
    "text": "the different layers of the storage system and how they interact with each other which is which is so important to",
    "start": "690720",
    "end": "696399"
  },
  {
    "text": "to to understand nowadays because so many of the systems that we use",
    "start": "696399",
    "end": "701680"
  },
  {
    "text": "are formed of composite layers so for example you have file systems made up of object stores and databases built on key",
    "start": "701680",
    "end": "708880"
  },
  {
    "text": "value stores etc and therefore they inherit attributes around the way they scale and the way they're there they",
    "start": "708880",
    "end": "715680"
  },
  {
    "text": "perform um based on those different layers and we we then took the next step and",
    "start": "715680",
    "end": "721279"
  },
  {
    "text": "said what are we going to do after the storage white paper and we decided to pick on two attributes the performance",
    "start": "721279",
    "end": "727839"
  },
  {
    "text": "and disaster and recovery and availability to to do a bit more of a deep dive into",
    "start": "727839",
    "end": "734320"
  },
  {
    "text": "how we can how we can get to the bottom of some of these things so we put together um a white paper on",
    "start": "734320",
    "end": "740800"
  },
  {
    "text": "performance and what we're looking um to build in here and we're still open to to",
    "start": "740800",
    "end": "746320"
  },
  {
    "text": "drafts by the way so anybody who's who's open to contributing is very welcome",
    "start": "746320",
    "end": "751920"
  },
  {
    "text": "we're covering a number of different concepts so we we're looking at how to benchmark um databases primarily and",
    "start": "751920",
    "end": "759440"
  },
  {
    "text": "volumes as as two of the first main things and what we're looking to to and what we're covering is the basics so for",
    "start": "759440",
    "end": "766480"
  },
  {
    "text": "example what do we want to look at in terms of either operations or throughput because",
    "start": "766480",
    "end": "772720"
  },
  {
    "text": "sometimes it's more important to measure the the number of operations per second",
    "start": "772720",
    "end": "778240"
  },
  {
    "text": "for example if you're if you're talking about databases and transactions and sometimes it's much more important",
    "start": "778240",
    "end": "784000"
  },
  {
    "text": "to have say sequential throughput capabilities for um things like analytics for maybe something like",
    "start": "784000",
    "end": "789839"
  },
  {
    "text": "elasticsearch um and and those sort of systems can can have you know very different compromises",
    "start": "789839",
    "end": "796320"
  },
  {
    "text": "uh in terms of in terms of how they're put together and then trying to understand and",
    "start": "796320",
    "end": "801360"
  },
  {
    "text": "measure how things like the topology the data protection um the data reduction",
    "start": "801360",
    "end": "807279"
  },
  {
    "text": "and encryption affects the overall performance of the system both in terms of you know adding additional latency or",
    "start": "807279",
    "end": "814399"
  },
  {
    "text": "or affecting throughput but also in terms of um the the",
    "start": "814399",
    "end": "819440"
  },
  {
    "text": "additional um the additional levels of complexity or the additional um",
    "start": "819440",
    "end": "825120"
  },
  {
    "text": "topology differences that you see say between hyper-converged or disaggregated",
    "start": "825120",
    "end": "830320"
  },
  {
    "text": "systems or remote systems for example in in many of the discussions latency",
    "start": "830320",
    "end": "836639"
  },
  {
    "text": "tends to be a really big factor in in determining a lot of these things so we'll see",
    "start": "836639",
    "end": "842480"
  },
  {
    "text": "compromises on um or or you know different pros and cons between different systems between the data",
    "start": "842480",
    "end": "848959"
  },
  {
    "text": "protection and things like encryption and also the topology and that and the way that affects latency tends to",
    "start": "848959",
    "end": "855199"
  },
  {
    "text": "directly affect things like you know transactions per second in an environment so so often latency is one",
    "start": "855199",
    "end": "860720"
  },
  {
    "text": "of those key things but also currency so one of the one of the things we we",
    "start": "860720",
    "end": "866399"
  },
  {
    "text": "want to measure is how uh applications scale in these",
    "start": "866399",
    "end": "871600"
  },
  {
    "text": "environments and often concurrency is one of those is one of those key factors there where we we're talking about you",
    "start": "871600",
    "end": "877279"
  },
  {
    "text": "know how many um clients can connect in parallel how many parallel threads and how many parallel",
    "start": "877279",
    "end": "883760"
  },
  {
    "text": "cues can can can operate and of course in all of these systems caching happens at multiple layers you",
    "start": "883760",
    "end": "890320"
  },
  {
    "text": "know at the operating system layer at volume manager layers that's the file system layers page caches device layers",
    "start": "890320",
    "end": "897760"
  },
  {
    "text": "so it's important it's important to really understand what you're measuring and",
    "start": "897760",
    "end": "904480"
  },
  {
    "text": "what and how much of an impact the cache is having to those environments to actually get a real understanding of the of the",
    "start": "904480",
    "end": "910560"
  },
  {
    "text": "system and of course we also want to set a level playing field right so um understanding how to manage the",
    "start": "910560",
    "end": "917440"
  },
  {
    "text": "environment where you're doing performance testing or or benchmarking um and making sure that you have the",
    "start": "917440",
    "end": "923440"
  },
  {
    "text": "right headroom in both the the the environment whether it's you know bare metal or or cloud",
    "start": "923440",
    "end": "930160"
  },
  {
    "text": "and the headroom that the client needs to actually maximize the the performance testing",
    "start": "930160",
    "end": "936720"
  },
  {
    "text": "um one of the key takeaways though is that it's really important to",
    "start": "936720",
    "end": "942720"
  },
  {
    "text": "to focus on testing your your own applications in your own environments it's really really hard to",
    "start": "942720",
    "end": "950639"
  },
  {
    "text": "compare published results without a deep understanding of the test conditions and in fact so many so so so much of the paper is",
    "start": "950639",
    "end": "957600"
  },
  {
    "text": "actually dedicated to to the pitfalls and the common issues that that people",
    "start": "957600",
    "end": "962639"
  },
  {
    "text": "encounter when when doing performance benchmarking um i can't tell you how many benchmarks i've seen where",
    "start": "962639",
    "end": "970240"
  },
  {
    "text": "somebody has published for example oh i just got two gigabytes per second on my file system and then you ask them what",
    "start": "970240",
    "end": "975519"
  },
  {
    "text": "they're running on and they're running on a hard drive that can only give you 200 megabytes per second so they were",
    "start": "975519",
    "end": "981279"
  },
  {
    "text": "really only testing the speed of their cache rather than the speed of their file system for example so so those",
    "start": "981279",
    "end": "986880"
  },
  {
    "text": "those are the things that that we need to to look at um the next thing that we covered was",
    "start": "986880",
    "end": "992240"
  },
  {
    "text": "disaster recovery which um roughly is going to is going to take us through",
    "start": "992240",
    "end": "997360"
  },
  {
    "start": "997000",
    "end": "1441000"
  },
  {
    "text": "thank you alex hello can you hear me okay yes in this",
    "start": "997360",
    "end": "1003440"
  },
  {
    "text": "in the cloud native disaster recovery white paper we examine a question which is how should disaster recovery look",
    "start": "1003440",
    "end": "1011120"
  },
  {
    "text": "like in the cloud and we submit an approach to you which we propose an idea",
    "start": "1011120",
    "end": "1017120"
  },
  {
    "text": "which uh surprise we call cloud native disaster recovery and",
    "start": "1017120",
    "end": "1022560"
  },
  {
    "text": "it's um it's an approach that you should know about we don't say we don't think you should always use it but",
    "start": "1022560",
    "end": "1029360"
  },
  {
    "text": "i think it's good to know that this exists and it's an option and we have done some studies around it",
    "start": "1029360",
    "end": "1036160"
  },
  {
    "text": "now to compare and contrast uh clown native disaster recovery this approach that we",
    "start": "1036160",
    "end": "1041520"
  },
  {
    "text": "that we describe here in the white paper with uh traditional disaster recovery we let's let's use this table",
    "start": "1041520",
    "end": "1048558"
  },
  {
    "text": "uh and and look at the main differences so first of all the deployment the",
    "start": "1048559",
    "end": "1055200"
  },
  {
    "text": "architecture that we we see normally in big organization in large organizations",
    "start": "1055200",
    "end": "1061440"
  },
  {
    "text": "for traditional disaster recovery is active passive meaning we have a an active data center",
    "start": "1061440",
    "end": "1067360"
  },
  {
    "text": "or an active cloud region and when something goes wrong ever the workload is moved",
    "start": "1067360",
    "end": "1073280"
  },
  {
    "text": "somehow to to a passive uh location in cloud native disaster recovery we",
    "start": "1073280",
    "end": "1078880"
  },
  {
    "text": "want to do active active deployments the trigger for the",
    "start": "1078880",
    "end": "1086559"
  },
  {
    "text": "the detection and the trigger for the disaster so the decision that",
    "start": "1086880",
    "end": "1092000"
  },
  {
    "text": "we are experiencing a disaster situation and we have to start moving the workload",
    "start": "1092000",
    "end": "1097280"
  },
  {
    "text": "or reacting to it in traditional disaster recovery it's typically a human-based decision",
    "start": "1097280",
    "end": "1103360"
  },
  {
    "text": "uh something goes wrong all the alerts fire people meet and then they decide okay we cannot recover we need to",
    "start": "1103360",
    "end": "1110240"
  },
  {
    "text": "trigger the disaster recovery procedure in cloud native disaster recovery we want autonomous decisions",
    "start": "1110240",
    "end": "1117039"
  },
  {
    "text": "made by the system so autonomous decision and then also as we",
    "start": "1117039",
    "end": "1122080"
  },
  {
    "text": "see in the next line automated response to the disaster",
    "start": "1122080",
    "end": "1127600"
  },
  {
    "text": "the procedure itself normally what we see in a large organization is a mix of automated and manual tasks the better",
    "start": "1128000",
    "end": "1135440"
  },
  {
    "text": "the organization is the more automation there is but you know they need the trigger like we say is all like we said",
    "start": "1135440",
    "end": "1141200"
  },
  {
    "text": "is often human and then a human uh a human uh this you know",
    "start": "1141200",
    "end": "1148080"
  },
  {
    "text": "a task and then there are some other things that typically are done manually in in cloud native again we want",
    "start": "1148080",
    "end": "1155520"
  },
  {
    "text": "a fully automated recovery procedure and then with regards to the two main metrics that you",
    "start": "1155520",
    "end": "1162320"
  },
  {
    "text": "can use to measure how well you're doing disaster recovery the recovery time objective",
    "start": "1162320",
    "end": "1168240"
  },
  {
    "text": "which is how long does it take before you're up up and running again and the recovery",
    "start": "1168240",
    "end": "1174240"
  },
  {
    "text": "point objective which is how many transactions you have lost because",
    "start": "1174240",
    "end": "1180000"
  },
  {
    "text": "of the outage um when you recover uh in traditional dr for their",
    "start": "1180000",
    "end": "1186720"
  },
  {
    "text": "rto we usually are from zero if it's very good",
    "start": "1186720",
    "end": "1192640"
  },
  {
    "text": "organization two more likely ours in in cloud native dr",
    "start": "1192640",
    "end": "1199280"
  },
  {
    "text": "oops wow this is a disaster yeah inclinative dr",
    "start": "1199280",
    "end": "1205760"
  },
  {
    "text": "we are close to zero and it's really seconds uh it's the time for the l checks to",
    "start": "1205760",
    "end": "1211440"
  },
  {
    "text": "react and understand that there's a disaster and then and for the global advancer to swing the traffic",
    "start": "1211440",
    "end": "1217919"
  },
  {
    "text": "and for the rpo it's again zero two hours depending on what uh",
    "start": "1217919",
    "end": "1224559"
  },
  {
    "text": "what approach i use to to persist data um but in clarinet disaster recovery it's",
    "start": "1224559",
    "end": "1231760"
  },
  {
    "text": "exactly zero so i never lose data if i'm using a strongly consistent",
    "start": "1231760",
    "end": "1237440"
  },
  {
    "text": "consistent approach and it's theoretically unbounded but for you know practical deployment uh",
    "start": "1237440",
    "end": "1245039"
  },
  {
    "text": "close to zero if i'm using events for consistent deployment",
    "start": "1245039",
    "end": "1250720"
  },
  {
    "text": "and then looking at more at the organization side the owner of the disaster recovery procedure",
    "start": "1250720",
    "end": "1257600"
  },
  {
    "text": "in traditional dr it's actually the storage team it formally the application teams have to build",
    "start": "1257600",
    "end": "1264159"
  },
  {
    "text": "their own business continuity document process but what they usually do is they turn around to the storage team and they",
    "start": "1264159",
    "end": "1270880"
  },
  {
    "text": "ask what is your you know disaster recovery procedure what are your sla and then they adopt whatever the storage",
    "start": "1270880",
    "end": "1277120"
  },
  {
    "text": "team is doing in that organization so it's really the storage steam is driving the disaster recovery for the entire",
    "start": "1277120",
    "end": "1284159"
  },
  {
    "text": "company but in cloud native dr it's the the applica the application",
    "start": "1284159",
    "end": "1290240"
  },
  {
    "text": "teams are the owner of the disaster recovery procedure um and because",
    "start": "1290240",
    "end": "1296880"
  },
  {
    "text": "the dr is really a responsibility of the middleware in in clarinet vr",
    "start": "1296880",
    "end": "1302480"
  },
  {
    "text": "uh so it's going to be a responsibility of the database of the of the queue system of the cache and so those are the",
    "start": "1302480",
    "end": "1310320"
  },
  {
    "text": "middleware are now owned by middle products are now owned by the application team",
    "start": "1310320",
    "end": "1316159"
  },
  {
    "text": "and then in terms of capability this is a finding that we did that we discovered by actually implementing",
    "start": "1316159",
    "end": "1322400"
  },
  {
    "text": "these architectures uh in in terms of capability for traditional dr we usually rely on",
    "start": "1322400",
    "end": "1329600"
  },
  {
    "text": "storage capabilities in order to implement these architectures and and the disaster",
    "start": "1329600",
    "end": "1335039"
  },
  {
    "text": "recovery procedures so we use things like backup restore or volume replication synchronous or asynchronous",
    "start": "1335039",
    "end": "1341440"
  },
  {
    "text": "but in cloud native vr what we really need are capabilities from networking more than storage we need an ability to",
    "start": "1341440",
    "end": "1348960"
  },
  {
    "text": "communicate east west between our regions because because remember they are active",
    "start": "1348960",
    "end": "1355520"
  },
  {
    "text": "active so traffic is flowing and going to all of the locations and we need a good global of balancer something",
    "start": "1355520",
    "end": "1363120"
  },
  {
    "text": "that not only spreads the traffic but it also has some intelligence to understand",
    "start": "1363120",
    "end": "1368480"
  },
  {
    "text": "which locations are active and can swing the traffic automatically when when there is a problem",
    "start": "1368480",
    "end": "1375760"
  },
  {
    "text": "okay so in the white paper what you can find is",
    "start": "1375760",
    "end": "1380799"
  },
  {
    "text": "this definition that i just gave you then some other technique more technical definition",
    "start": "1380799",
    "end": "1386400"
  },
  {
    "text": "about what a failure domain is what h a and d r is we covered the cap theorem a little bit",
    "start": "1386400",
    "end": "1392559"
  },
  {
    "text": "and then of course if you're interested you should go and read about it much much more in depth but",
    "start": "1392559",
    "end": "1399200"
  },
  {
    "text": "all this new generation of middleware that can be deployed the way i described",
    "start": "1399200",
    "end": "1404480"
  },
  {
    "text": "is really built around the concepts of the cap theorem so it's something that we should know",
    "start": "1404480",
    "end": "1409679"
  },
  {
    "text": "and then we talk about the anatomy of this distributed state for workload",
    "start": "1409679",
    "end": "1415679"
  },
  {
    "text": "with shards replica and i'm going to show a little bit about that and then we talk about the consensus protocols that",
    "start": "1415679",
    "end": "1421840"
  },
  {
    "text": "are needed to coordinate all of the instances uh because obviously we have a multi-instance deployments for this",
    "start": "1421840",
    "end": "1427600"
  },
  {
    "text": "state for workloads and then we look at some reference implementations or",
    "start": "1427600",
    "end": "1433919"
  },
  {
    "text": "reference architectures for both strong consistency deployment and eventual consistent consistency deployments",
    "start": "1433919",
    "end": "1442720"
  },
  {
    "start": "1441000",
    "end": "1811000"
  },
  {
    "text": "so i'm gonna pick some of these things just to give you a little bit of um",
    "start": "1442799",
    "end": "1448559"
  },
  {
    "text": "overview what you can find in in the in in this white paper and i find this one",
    "start": "1448559",
    "end": "1453679"
  },
  {
    "text": "interesting this is the anatomy of a stateful application so if you abstract this stateful middleware enough you will",
    "start": "1453679",
    "end": "1461360"
  },
  {
    "text": "find that they're they all look the same whether it's a cache whether it's a queue system whether it's a database",
    "start": "1461360",
    "end": "1468559"
  },
  {
    "text": "or nosql database they always have a similar structure they have",
    "start": "1468559",
    "end": "1474240"
  },
  {
    "text": "uh replicas so that's that's how they achieve availability and then they are",
    "start": "1474240",
    "end": "1479600"
  },
  {
    "text": "partitions which is what they use to achieve scalability right and then uh in each instance they have",
    "start": "1479600",
    "end": "1486960"
  },
  {
    "text": "layers at least conceptual layers they have a storage layer they have a chord which is",
    "start": "1486960",
    "end": "1492159"
  },
  {
    "text": "the thing that communicates with the disc with the actual volumes and then they have a coordination layer which is what",
    "start": "1492159",
    "end": "1498400"
  },
  {
    "text": "helps coordinating with with the rest of the instances and then they have an api layer which really defines the identity",
    "start": "1498400",
    "end": "1505279"
  },
  {
    "text": "of the of the type of workload so that a queue system has a different api than a sql",
    "start": "1505279",
    "end": "1511679"
  },
  {
    "text": "system there are no sql system and then we have",
    "start": "1511679",
    "end": "1518720"
  },
  {
    "text": "in the coordination layer we can identify two kinds of coordination there is an inter-replica coordination to make",
    "start": "1518720",
    "end": "1525360"
  },
  {
    "text": "sure that every replica is doing the same thing and they're always aligned on the same",
    "start": "1525360",
    "end": "1530799"
  },
  {
    "text": "state the same view of the state and then we have an inter partition",
    "start": "1530799",
    "end": "1536799"
  },
  {
    "text": "coordination which is needed when this software supports inter partition",
    "start": "1536799",
    "end": "1542159"
  },
  {
    "text": "transactions so it's when for example",
    "start": "1542159",
    "end": "1548158"
  },
  {
    "text": "if you need to put two messages in in kafka",
    "start": "1548400",
    "end": "1554000"
  },
  {
    "text": "in different partitions with a single transaction there will be an interpretation transaction",
    "start": "1554000",
    "end": "1559600"
  },
  {
    "text": "um so then what we did is try to take some of these new generation",
    "start": "1559600",
    "end": "1566799"
  },
  {
    "text": "middleware and analyze them in terms of of the uh",
    "start": "1566799",
    "end": "1572720"
  },
  {
    "text": "coordination protocols that they use and what we find what we found out is that",
    "start": "1572720",
    "end": "1577760"
  },
  {
    "text": "raft and paxus obviously has are the two most common consensus protocol for the",
    "start": "1577760",
    "end": "1583039"
  },
  {
    "text": "replica coordination raft now being the preferred one because it's easy to to implement and on the",
    "start": "1583039",
    "end": "1591120"
  },
  {
    "text": "shard consensus protocol or partition consensus protocol the two-phase commit or",
    "start": "1591120",
    "end": "1596880"
  },
  {
    "text": "derivations of the surface commit is actually what's being used",
    "start": "1596880",
    "end": "1601840"
  },
  {
    "text": "and then i'm going to close with a little overview of the",
    "start": "1602320",
    "end": "1607200"
  },
  {
    "text": "reference architecture for a deployment of this kind of workloads on kubernetes",
    "start": "1607360",
    "end": "1614400"
  },
  {
    "text": "so you can see we have three here this is a strong consistent um deployment so",
    "start": "1614400",
    "end": "1620960"
  },
  {
    "text": "we we need three failure domain at least this is because",
    "start": "1620960",
    "end": "1626159"
  },
  {
    "text": "of the cap theorem and so we have the state workload that is",
    "start": "1626159",
    "end": "1631679"
  },
  {
    "text": "deployed in each of this failure domain you from there the yellow arrows",
    "start": "1631679",
    "end": "1637360"
  },
  {
    "text": "indicate the fact that they need to be able to talk to each other even across failure domain that's that's the",
    "start": "1637360",
    "end": "1643200"
  },
  {
    "text": "east-west network capability that i was mentioning before so if you're in kubernetes you need a",
    "start": "1643200",
    "end": "1648799"
  },
  {
    "text": "way to have inter-cluster communication um and there are you know several ways to do it",
    "start": "1648799",
    "end": "1654559"
  },
  {
    "text": "and then we have probably a front end in front of our database or stateful workload and",
    "start": "1654559",
    "end": "1660640"
  },
  {
    "text": "then we have a global balancer that is supposed to do some health checking",
    "start": "1660640",
    "end": "1667440"
  },
  {
    "text": "and decides to swing the traffic the other thing the other picture here",
    "start": "1667440",
    "end": "1673840"
  },
  {
    "text": "is another analysis that we do you because you should not just analyze",
    "start": "1673840",
    "end": "1679440"
  },
  {
    "text": "what happens when you lose an entire region but also what happens when a region is network partitioned but it's",
    "start": "1679440",
    "end": "1685919"
  },
  {
    "text": "still available and it's it's communicating still communicating",
    "start": "1685919",
    "end": "1690960"
  },
  {
    "text": "with external clients it's still able to communicate with the global balancer in this case with strongly consistent",
    "start": "1690960",
    "end": "1699440"
  },
  {
    "text": "workloads because the in the instances that are partitioned don't",
    "start": "1699520",
    "end": "1705840"
  },
  {
    "text": "have the strict majority so they they cannot create quorum they will put themselves",
    "start": "1705840",
    "end": "1711360"
  },
  {
    "text": "offline and the global balancer will be able to see that that that location is is not available",
    "start": "1711360",
    "end": "1718960"
  },
  {
    "text": "and will will swing the traffic to the available locations so even in this situation you",
    "start": "1718960",
    "end": "1724399"
  },
  {
    "text": "will get those rpo and rto that we were discussing before so",
    "start": "1724399",
    "end": "1730000"
  },
  {
    "text": "close to seconds of a lack of availability",
    "start": "1730000",
    "end": "1735679"
  },
  {
    "text": "and 0 and zero data loss and with that i'm going to give it back",
    "start": "1735679",
    "end": "1741200"
  },
  {
    "text": "to alex or singh actually i think",
    "start": "1741200",
    "end": "1746480"
  },
  {
    "text": "so um",
    "start": "1746480",
    "end": "1749960"
  },
  {
    "text": "um",
    "start": "1754720",
    "end": "1757720"
  },
  {
    "text": "you",
    "start": "1770640",
    "end": "1773640"
  },
  {
    "text": "okay great so so we talked about we talked about the disaster recovery so thank you",
    "start": "1781360",
    "end": "1786880"
  },
  {
    "text": "rafael we talked about uh performance and the white paper um one of the common things that we get asked in the tag is",
    "start": "1786880",
    "end": "1793279"
  },
  {
    "text": "is how do we work with the toc in terms of the the projects that get approved into",
    "start": "1793279",
    "end": "1800399"
  },
  {
    "text": "into the tac and then to join the foundation um so zhing is going to talk a little",
    "start": "1800399",
    "end": "1805840"
  },
  {
    "text": "bit about that now and hopefully i can get this",
    "start": "1805840",
    "end": "1810960"
  },
  {
    "text": "to play here we go cncm projects have three stages",
    "start": "1810960",
    "end": "1816159"
  },
  {
    "start": "1811000",
    "end": "1946000"
  },
  {
    "text": "sandbox is the earliest stage meaning the project is still experimental donating to cscf will help build a",
    "start": "1816159",
    "end": "1822799"
  },
  {
    "text": "stronger community around the project incubation is the second stage it means the project",
    "start": "1822799",
    "end": "1829840"
  },
  {
    "text": "has been used successfully in production and has a healthy number of commuters",
    "start": "1829840",
    "end": "1835360"
  },
  {
    "text": "moving for sandbox to incubation is supposed to be difficult it needs to",
    "start": "1835360",
    "end": "1840559"
  },
  {
    "text": "go through the due diligence review and graduation is the highest stage it",
    "start": "1840559",
    "end": "1847520"
  },
  {
    "text": "means the project has mainstream production use past security audits",
    "start": "1847520",
    "end": "1853520"
  },
  {
    "text": "and has committers from multiple organizations",
    "start": "1853520",
    "end": "1858398"
  },
  {
    "text": "i'm going to talk about graduated and incubating cncf storage projects juke is",
    "start": "1859279",
    "end": "1864960"
  },
  {
    "text": "a graduated project it is a cloud native storage orchestrator for kubernetes",
    "start": "1864960",
    "end": "1870480"
  },
  {
    "text": "it has stable support for staff and alpha support for nfs",
    "start": "1870480",
    "end": "1875679"
  },
  {
    "text": "leaders is a graduating project it is horizontally scaling of mysql",
    "start": "1875679",
    "end": "1883760"
  },
  {
    "text": "etcd is a graduated project it's a distributed key value store all kubernetes clusters use edcd as the",
    "start": "1883760",
    "end": "1891679"
  },
  {
    "text": "primary data store and thai kv is a graduated project techav is a distributed key value",
    "start": "1891679",
    "end": "1899200"
  },
  {
    "text": "database built in rust harbor is a graduated project",
    "start": "1899200",
    "end": "1904480"
  },
  {
    "text": "it's a cloud native registry project dragonfly is an incubating project it's",
    "start": "1904480",
    "end": "1910399"
  },
  {
    "text": "a p2p based cloud native image and file distribution system",
    "start": "1910399",
    "end": "1915519"
  },
  {
    "text": "longhorn just became an incubating project it's distributed block storage",
    "start": "1915519",
    "end": "1920559"
  },
  {
    "text": "system for kubernetes and finally we have a cube fs previously",
    "start": "1920559",
    "end": "1925760"
  },
  {
    "text": "triple fs that's newly incubated it's a distributed file system",
    "start": "1925760",
    "end": "1931039"
  },
  {
    "text": "and object store for cloud media apps so here shows a list of other 3d",
    "start": "1931039",
    "end": "1937919"
  },
  {
    "text": "projects in cncf there are a few more sandbox projects shown here",
    "start": "1937919",
    "end": "1943279"
  },
  {
    "text": "that's all we have for cncf projects awesome thank you jing um and i just",
    "start": "1943279",
    "end": "1950240"
  },
  {
    "start": "1946000",
    "end": "2046000"
  },
  {
    "text": "wanted to sort of cover off some of this process because we sometimes get questions from maintainers in this",
    "start": "1950240",
    "end": "1956559"
  },
  {
    "text": "where the we wanted to just clarify that the sandbox project tends to have a low bar to entry and those projects are",
    "start": "1956559",
    "end": "1963440"
  },
  {
    "text": "there for specifically there to help build the community the incubation projects have um",
    "start": "1963440",
    "end": "1970880"
  },
  {
    "text": "the most due diligence performed on them and those those projects are there to um",
    "start": "1970880",
    "end": "1977440"
  },
  {
    "text": "are there once they have production users and they have a number of maintainers within the within the environment um and graduated um",
    "start": "1977440",
    "end": "1985360"
  },
  {
    "text": "projects then is the is the final step where they go through um a process to",
    "start": "1985360",
    "end": "1991919"
  },
  {
    "text": "um perform security audits and additional checks um and have uh um",
    "start": "1991919",
    "end": "1997120"
  },
  {
    "text": "final governance uh and and um and distributed maintainers to to ensure",
    "start": "1997120",
    "end": "2004399"
  },
  {
    "text": "the longevity of the project okay",
    "start": "2004399",
    "end": "2009440"
  },
  {
    "text": "so with that um i'll be ending the talk but before we end i just wanted to again",
    "start": "2009919",
    "end": "2016559"
  },
  {
    "text": "invite everybody to join the community and join our attacks we'd love to hear from you if you have",
    "start": "2016559",
    "end": "2023039"
  },
  {
    "text": "uh if you're able to contribute um to to any of the white papers that we're building or help us with",
    "start": "2023039",
    "end": "2029919"
  },
  {
    "text": "the due diligence processes that we're working on in projects and of course",
    "start": "2029919",
    "end": "2035120"
  },
  {
    "text": "happy to take questions from anybody",
    "start": "2035120",
    "end": "2039679"
  },
  {
    "start": "2046000",
    "end": "2091000"
  },
  {
    "text": "this is more to do with the automated dr parts of the recovery process that you showed us",
    "start": "2046159",
    "end": "2052720"
  },
  {
    "text": "but um a lot of the workloads that are being run on keywords are now databases and in that case just a csi snapshot",
    "start": "2052720",
    "end": "2060560"
  },
  {
    "text": "wouldn't guarantee a consistent backup of the database itself this",
    "start": "2060560",
    "end": "2065839"
  },
  {
    "text": "specific database tooling needed to get that sort of an automated rpo going do you feel there's some synergies there",
    "start": "2065839",
    "end": "2072000"
  },
  {
    "text": "that could happen between databases and basic storage projects",
    "start": "2072000",
    "end": "2078000"
  },
  {
    "text": "hi hello",
    "start": "2079200",
    "end": "2082879"
  },
  {
    "text": "i'll i will use the mic",
    "start": "2085280",
    "end": "2089638"
  },
  {
    "start": "2091000",
    "end": "2191000"
  },
  {
    "text": "yeah in we use an extended definition of storage so for us also databases queue system",
    "start": "2091839",
    "end": "2100160"
  },
  {
    "text": "and and cache caches are storage not just file file system and object storage and block",
    "start": "2100160",
    "end": "2106640"
  },
  {
    "text": "storage so yes to build those architectures you need um stateful middleware",
    "start": "2106640",
    "end": "2113359"
  },
  {
    "text": "that you can deploy that way so i call it this new generation of of stateful",
    "start": "2113359",
    "end": "2119280"
  },
  {
    "text": "middleweight that was built around uh the cap theorem uh so not monolithic but inherently",
    "start": "2119280",
    "end": "2124880"
  },
  {
    "text": "distributed middleware and and and when you do that as i was trying to show with the picture let me",
    "start": "2124880",
    "end": "2131520"
  },
  {
    "text": "let me see if i can yeah um you see the synchronization happens at the",
    "start": "2131520",
    "end": "2137599"
  },
  {
    "text": "stateful middleware layer not at the storage layer so so these disks here",
    "start": "2137599",
    "end": "2143599"
  },
  {
    "text": "these volumes are completely unaware of each other that you don't need to take backup or volume snapshot and restore",
    "start": "2143599",
    "end": "2149920"
  },
  {
    "text": "all the synchronizations happens at the at transaction level and and",
    "start": "2149920",
    "end": "2156160"
  },
  {
    "text": "state for workload level so the key is choosing something",
    "start": "2156160",
    "end": "2161440"
  },
  {
    "text": "a product that can actually do that",
    "start": "2161440",
    "end": "2165200"
  },
  {
    "text": "and and just on that point it's it's it's it's how all of the different layers",
    "start": "2166480",
    "end": "2171520"
  },
  {
    "text": "work together right it's it's not about um like we discussed in the white paper you",
    "start": "2171520",
    "end": "2177040"
  },
  {
    "text": "get certain attributes of um availability or scalability through those different layers and and they need",
    "start": "2177040",
    "end": "2183680"
  },
  {
    "text": "to integrate well",
    "start": "2183680",
    "end": "2187319"
  },
  {
    "start": "2191000",
    "end": "2236000"
  },
  {
    "text": "there was also one question online that i will mention but it was is the talk going to be recorded and the answer is yes of course all the talks are recorded",
    "start": "2192320",
    "end": "2198640"
  },
  {
    "text": "and they are posted very quickly so who the person online that is the answer to that question",
    "start": "2198640",
    "end": "2205200"
  },
  {
    "text": "hi everybody hi guys thanks a lot great presentation i was wondering there's a lot of",
    "start": "2205200",
    "end": "2210320"
  },
  {
    "text": "movement for use cases that they need to achieve low latency and we move the",
    "start": "2210320",
    "end": "2215440"
  },
  {
    "text": "workloads to the ads are you considering these sort of ads",
    "start": "2215440",
    "end": "2221920"
  },
  {
    "text": "setups into your analysis and white papers",
    "start": "2221920",
    "end": "2227240"
  },
  {
    "text": "your microphone hasn't magically started working yet alex okay i'm not gonna need to go for a run",
    "start": "2228800",
    "end": "2233920"
  },
  {
    "text": "today so so the question was um low latency in",
    "start": "2233920",
    "end": "2240079"
  },
  {
    "start": "2236000",
    "end": "2401000"
  },
  {
    "text": "in kubernetes environments um i think what we're seeing is um and certainly",
    "start": "2240079",
    "end": "2245520"
  },
  {
    "text": "what i'm what i'm seeing with with sort of about the community that we work with and customers that i work with is that",
    "start": "2245520",
    "end": "2253520"
  },
  {
    "text": "the latency comes down to two factors primarily which is the physical media and and the overall",
    "start": "2253520",
    "end": "2261680"
  },
  {
    "text": "latency or through to our storage stack but also the networking right so some of the",
    "start": "2261680",
    "end": "2268000"
  },
  {
    "text": "some of the um some of the discussions that we were having earlier around the",
    "start": "2268000",
    "end": "2273040"
  },
  {
    "text": "different attributes and and where you make compromises um are exactly the sort of things that",
    "start": "2273040",
    "end": "2278880"
  },
  {
    "text": "affect latency so for example if you employ replicas you tend to get lower latency",
    "start": "2278880",
    "end": "2285440"
  },
  {
    "text": "but if you employ erasure coding you get higher latency if you do",
    "start": "2285440",
    "end": "2290720"
  },
  {
    "text": "replication across regions like rafaela was discussing you could get",
    "start": "2290720",
    "end": "2296160"
  },
  {
    "text": "high latency but you could also have eventual consistency in some of those in some of the scenarios to to improve",
    "start": "2296160",
    "end": "2302000"
  },
  {
    "text": "latency but we've seen we've seen um i've certainly seen environments doing",
    "start": "2302000",
    "end": "2307920"
  },
  {
    "text": "extremely low latency you know much lower than sub millisecond for",
    "start": "2307920",
    "end": "2313280"
  },
  {
    "text": "um for for database transactions and and it is definitely possible to achieve uh extremely low latency in in kubernetes",
    "start": "2313280",
    "end": "2320480"
  },
  {
    "text": "environments and we're seeing um both in uh environments and then on-prem you",
    "start": "2320480",
    "end": "2327359"
  },
  {
    "text": "know the availability of nvme disks for example that that supports hundreds of thousands of iops and",
    "start": "2327359",
    "end": "2334079"
  },
  {
    "text": "um 10 40 and 100 gig connections on on on cloud instances which is which is um",
    "start": "2334079",
    "end": "2341599"
  },
  {
    "text": "which can which can help it with all of those situations yeah um",
    "start": "2341599",
    "end": "2347200"
  },
  {
    "text": "no it's not done yet i think there was a edge component in the question right",
    "start": "2347200",
    "end": "2353040"
  },
  {
    "text": "yeah we we don't explicitly talk about edge um in this i don't think we have we have analyzed",
    "start": "2353040",
    "end": "2359520"
  },
  {
    "text": "that scenario much but i i think and i'm not an expert but the little that i've done for edge deployments i",
    "start": "2359520",
    "end": "2366160"
  },
  {
    "text": "think you are willing in those cases to sacrifice um you know latency i mean",
    "start": "2366160",
    "end": "2373280"
  },
  {
    "text": "consistency for latency so i have a quick local response and then when the network is available you synchronize",
    "start": "2373280",
    "end": "2379760"
  },
  {
    "text": "with with the central you know data center um",
    "start": "2379760",
    "end": "2385760"
  },
  {
    "text": "yeah you have to pick the right you know middleware for that kind of workload",
    "start": "2386079",
    "end": "2392400"
  },
  {
    "start": "2401000",
    "end": "2451000"
  },
  {
    "text": "hi please correct me if i am wrong but in your table of comparison between",
    "start": "2403359",
    "end": "2408480"
  },
  {
    "text": "traditional deployment and kubernetes deployment it's there is some kind of mismatching between h a and dr",
    "start": "2408480",
    "end": "2414079"
  },
  {
    "text": "for example in traditional deployment if i depl want to provide ha i deploy several instances from the same data",
    "start": "2414079",
    "end": "2420160"
  },
  {
    "text": "center on different data centers and provide east-west communication between them it can be active active active",
    "start": "2420160",
    "end": "2425920"
  },
  {
    "text": "passive so it's very close to your example in kubernetes on the same hand",
    "start": "2425920",
    "end": "2431440"
  },
  {
    "text": "in kubernetes maybe we need to provide some backup as well okay we deploying different data centers but backup and",
    "start": "2431440",
    "end": "2438800"
  },
  {
    "text": "restore we will require two maybe so",
    "start": "2438800",
    "end": "2444160"
  },
  {
    "text": "i didn't understand",
    "start": "2444160",
    "end": "2447680"
  },
  {
    "text": "so you're you're absolutely right and when we were putting that table together",
    "start": "2451440",
    "end": "2457599"
  },
  {
    "text": "we had quite a lot of debate as to what each of the terms should mean",
    "start": "2457599",
    "end": "2462720"
  },
  {
    "text": "um and you know what we what we decided on was it's impossible to count all of the",
    "start": "2462720",
    "end": "2469119"
  },
  {
    "text": "different possible scenarios and all of the different edge cases so we decided to to put together something that kind",
    "start": "2469119",
    "end": "2474720"
  },
  {
    "text": "of represented the the most informed i guess scenario and the most",
    "start": "2474720",
    "end": "2481359"
  },
  {
    "text": "common scenarios that that we were coming around with in in the actual document itself we then cover a lot more",
    "start": "2481359",
    "end": "2486720"
  },
  {
    "text": "details as to the the variations of those scenarios",
    "start": "2486720",
    "end": "2492760"
  },
  {
    "text": "thank you very much [Applause]",
    "start": "2500960",
    "end": "2506949"
  }
]