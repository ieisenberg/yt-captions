[
  {
    "start": "0",
    "end": "150000"
  },
  {
    "text": "all right we're gonna go ahead and get started i'd like to thank everyone who is joining us uh welcome to today's",
    "start": "27599",
    "end": "34160"
  },
  {
    "text": "cncf webinar achieving this privilege accessing kubernetes i'm around labe co-founder and vp of",
    "start": "34160",
    "end": "40000"
  },
  {
    "text": "product management at the policy i'll be moderating and co-presenting today's webinar i would like to",
    "start": "40000",
    "end": "45520"
  },
  {
    "text": "introduce my co-presenter daniel uh he's an oss engineer at aqua",
    "start": "45520",
    "end": "51760"
  },
  {
    "text": "uh danielle didn't want to butcher your last name so if you want to say when you present yourself later on it would be",
    "start": "51760",
    "end": "56840"
  },
  {
    "text": "awesome i wasn't sure how to pronounce it some",
    "start": "56840",
    "end": "62320"
  },
  {
    "text": "housekeeping items uh before we get started so during the webinar you are not able to",
    "start": "62320",
    "end": "68000"
  },
  {
    "text": "talk as an attendee there is a q a box at the bottom of your screen please feel free to drop your questions",
    "start": "68000",
    "end": "74479"
  },
  {
    "text": "in there and we'll get to as many as we can at the end this is an official webinar of the cncf",
    "start": "74479",
    "end": "82400"
  },
  {
    "text": "and as such is subject to the cncf code of conduct please do not add anything to the chat",
    "start": "82400",
    "end": "88640"
  },
  {
    "text": "or questions that would be in violation of that code of conduct basically please be respectful of all",
    "start": "88640",
    "end": "94159"
  },
  {
    "text": "your fellow participants and presenters please also note that the recording and",
    "start": "94159",
    "end": "100000"
  },
  {
    "text": "the slide will be posted later today to the cncf webinar page at https",
    "start": "100000",
    "end": "106360"
  },
  {
    "text": "[Music] www.cncf.io webinars with that i'll kick off today's",
    "start": "106360",
    "end": "112840"
  },
  {
    "text": "presentation",
    "start": "112840",
    "end": "115840"
  },
  {
    "text": "so um let's start so it's a pleasure to be here today my",
    "start": "118640",
    "end": "123680"
  },
  {
    "text": "name is iran as i just as you already know and i'm here to speak about kubernetes arbuck",
    "start": "123680",
    "end": "128800"
  },
  {
    "text": "and achieving this privilege in kubernetes with me today daniel who is going to with the help of the demo gods to demo",
    "start": "128800",
    "end": "135840"
  },
  {
    "text": "some of the topics we'll present i'm going to try in the brief",
    "start": "135840",
    "end": "141040"
  },
  {
    "text": "time that we have to educate you to the best that i can about the subject so let's see what's on our agenda today",
    "start": "141040",
    "end": "150160"
  },
  {
    "start": "150000",
    "end": "180000"
  },
  {
    "text": "we'll start with the pla with explaining how role-based access control or our back is implemented in kubernetes",
    "start": "150319",
    "end": "156879"
  },
  {
    "text": "double clicking on some of the common pitfalls you will encounter when you when using arbuck",
    "start": "156879",
    "end": "162480"
  },
  {
    "text": "we'll discuss some best practices you should consider finally we'll be able to tile tight",
    "start": "162480",
    "end": "168560"
  },
  {
    "text": "altogether and discuss this privilege last but not least we have a cool demo that daniel",
    "start": "168560",
    "end": "174720"
  },
  {
    "text": "prepared showing everything discussed",
    "start": "174720",
    "end": "179040"
  },
  {
    "start": "180000",
    "end": "238000"
  },
  {
    "text": "so i'll formally introduce myself i'm one of the founders and vp of product management at a policy",
    "start": "181040",
    "end": "186720"
  },
  {
    "text": "we're a kubernetes policy orchestration solution uh before that i was a co-founder at whitebox security where",
    "start": "186720",
    "end": "193280"
  },
  {
    "text": "we built an amazing data access governance solution whitebox security was acquired in 2015",
    "start": "193280",
    "end": "198640"
  },
  {
    "text": "by cell phone technologists uh i started my journey about 20 years ago as a system programmer",
    "start": "198640",
    "end": "204159"
  },
  {
    "text": "and uh i have many different interests as you can see um daniel why don't you",
    "start": "204159",
    "end": "209920"
  },
  {
    "text": "introduce yourself yeah thanks aaron hi everyone i'm an open source software engineer at aqua",
    "start": "209920",
    "end": "215760"
  },
  {
    "text": "i'm also the maintainer of a cube control hoopling who can plug-in a tool that we are going",
    "start": "215760",
    "end": "221120"
  },
  {
    "text": "to use during the demo to show you or troubleshoot some of the artwork config and i'm also the",
    "start": "221120",
    "end": "226239"
  },
  {
    "text": "maintainer of the harper cncf project",
    "start": "226239",
    "end": "231040"
  },
  {
    "text": "awesome let's uh let's get going thank you daniel so the concept of",
    "start": "233120",
    "end": "240560"
  },
  {
    "start": "238000",
    "end": "266000"
  },
  {
    "text": "role-based access control also known as arbuck has been around for many years now uh generally speaking it seems simple at",
    "start": "240560",
    "end": "247200"
  },
  {
    "text": "first however in some cases the rigidness of some of the implementations",
    "start": "247200",
    "end": "252319"
  },
  {
    "text": "and the nuances translates to a substantial effort another factor of an often overlooked is",
    "start": "252319",
    "end": "258320"
  },
  {
    "text": "that our book requirement requires ongoing maintenance as users and access are never idle",
    "start": "258320",
    "end": "265919"
  },
  {
    "start": "266000",
    "end": "323000"
  },
  {
    "text": "so arbuck like many other concepts is a compromise security wise we'd like every user human",
    "start": "267199",
    "end": "273600"
  },
  {
    "text": "or machine that operates in our system to have the access it needs nothing more nothing less",
    "start": "273600",
    "end": "279520"
  },
  {
    "text": "reality tells us that it's not always a simple task",
    "start": "279520",
    "end": "284479"
  },
  {
    "text": "operations wise we'd like to keep management in a reasonable level not requiring a whole team or an army to",
    "start": "284639",
    "end": "291280"
  },
  {
    "text": "take care of it various you know like something based",
    "start": "291280",
    "end": "296639"
  },
  {
    "text": "access control exists out there but the most common one is arbuck uh the main reason",
    "start": "296639",
    "end": "301759"
  },
  {
    "text": "is manageability arbuck means grouping access and assigning them directly or through groups to end users the",
    "start": "301759",
    "end": "309360"
  },
  {
    "text": "balance comes into play when you choose how many roles you will manage more roles means grander more granular",
    "start": "309360",
    "end": "315759"
  },
  {
    "text": "access not in our fault mean every change is a",
    "start": "315759",
    "end": "320639"
  },
  {
    "text": "headache a common misconception uh is trying to create an affinity between roles and",
    "start": "322840",
    "end": "329280"
  },
  {
    "start": "323000",
    "end": "337000"
  },
  {
    "text": "organizational jobs it's most probably not going to work just don't try it",
    "start": "329280",
    "end": "336319"
  },
  {
    "start": "337000",
    "end": "374000"
  },
  {
    "text": "so let's examine how kubernetes implemented our bug we have two types of roles uh the first",
    "start": "337680",
    "end": "344240"
  },
  {
    "text": "is called cluster roles grouping access for cluster scoped resources",
    "start": "344240",
    "end": "349440"
  },
  {
    "text": "enroll that does the same scoped in the namespace define roles does not grant access to",
    "start": "349440",
    "end": "355680"
  },
  {
    "text": "anyone and of course roles like in like um in general like all kubernetes objects",
    "start": "355680",
    "end": "362639"
  },
  {
    "text": "can be labeled and annotated and that is very useful when you need to search for roles based on those labels",
    "start": "362639",
    "end": "368479"
  },
  {
    "text": "and it's very helpful so what are roles made of they are made",
    "start": "368479",
    "end": "375280"
  },
  {
    "start": "374000",
    "end": "406000"
  },
  {
    "text": "out of rules rules are the building blocks of roles building rules is simple a rule is made",
    "start": "375280",
    "end": "380720"
  },
  {
    "text": "out of two parts verbs defining the action like get create delete",
    "start": "380720",
    "end": "385840"
  },
  {
    "text": "impersonate and resources you can take that action on so to summarize a role",
    "start": "385840",
    "end": "392080"
  },
  {
    "text": "holds a list of actions on objects later to be granted to users",
    "start": "392080",
    "end": "398479"
  },
  {
    "text": "and you can have multiple rules inside a single role",
    "start": "398479",
    "end": "408400"
  },
  {
    "start": "406000",
    "end": "472000"
  },
  {
    "text": "so wait what so what are the resources in kubernetes so kubernetes is an api first platform",
    "start": "408400",
    "end": "414000"
  },
  {
    "text": "and as such resources are basically api access there are three layers with every layer",
    "start": "414000",
    "end": "420160"
  },
  {
    "text": "filtering down the resources defined in the rule so if you see that the chart here",
    "start": "420160",
    "end": "425440"
  },
  {
    "text": "we start from the top level which is the api group representing multiple types of objects",
    "start": "425440",
    "end": "430960"
  },
  {
    "text": "for example the batch api group is a group containing jobs cron jobs etc uh the resource type",
    "start": "430960",
    "end": "438479"
  },
  {
    "text": "filters down the group to object type for example if i would write in the api group",
    "start": "438479",
    "end": "443520"
  },
  {
    "text": "batch and then in the resource type i would write jobs it would mean that i can access all the jobs",
    "start": "443520",
    "end": "449360"
  },
  {
    "text": "under under that group and finally the name which is the most specific resource",
    "start": "449360",
    "end": "454639"
  },
  {
    "text": "selection leaving all empty basically means everything so if we if we don't choose anything on the",
    "start": "454639",
    "end": "460880"
  },
  {
    "text": "resource if we put like an asterisk on all of them basically it means that we give access to everything",
    "start": "460880",
    "end": "466400"
  },
  {
    "text": "on the cluster or in the namespace",
    "start": "466400",
    "end": "470319"
  },
  {
    "start": "472000",
    "end": "507000"
  },
  {
    "text": "in kubernetes we have objects that are non-resources basically pointing to urls and allowing",
    "start": "473680",
    "end": "480879"
  },
  {
    "text": "access aligned kubernetes are back to actually control access to those urls",
    "start": "480879",
    "end": "486479"
  },
  {
    "text": "slash health is an example of one if you decide to use them remember they are cluster level objects",
    "start": "486479",
    "end": "494160"
  },
  {
    "text": "meaning access to them must be granted through cluster roles only and binded through cluster role binding",
    "start": "494160",
    "end": "500319"
  },
  {
    "text": "we'll talk about those bindings in in a few in a few slides",
    "start": "500319",
    "end": "507840"
  },
  {
    "start": "507000",
    "end": "530000"
  },
  {
    "text": "so subjects are kubernetes terms for users groups or basically anything",
    "start": "511199",
    "end": "518560"
  },
  {
    "text": "that is granted access to resources so don't say users say subject in kubernetes don't forget",
    "start": "518560",
    "end": "524159"
  },
  {
    "text": "that we're going to use that term from now on",
    "start": "524159",
    "end": "528320"
  },
  {
    "text": "so when assigning access we're basically tying up subjects with roles the access",
    "start": "531040",
    "end": "537279"
  },
  {
    "text": "can be granted directly or indirectly through groups kubernetes basically calculates the complete set of",
    "start": "537279",
    "end": "544240"
  },
  {
    "text": "permission sets and augments them all to figure out the effective access of the user or the group and then if",
    "start": "544240",
    "end": "551920"
  },
  {
    "text": "you're a user and you have access to multiple groups then you'll get you're actually a member of multiple groups all the effective access for the",
    "start": "551920",
    "end": "559120"
  },
  {
    "text": "from those group will be augmented to your to your user and then to your subject basically and then",
    "start": "559120",
    "end": "564560"
  },
  {
    "text": "effectively you will get all the access together luckily there is no there are no deny",
    "start": "564560",
    "end": "570160"
  },
  {
    "text": "rules in kubernetes hence less complexity for something which is already pretty complex",
    "start": "570160",
    "end": "575600"
  },
  {
    "text": "and we'll see that we can get to pretty complex scenarios with our back",
    "start": "575600",
    "end": "583760"
  },
  {
    "start": "585000",
    "end": "794000"
  },
  {
    "text": "so there are roughly five types of subjects uh in kubernetes so let's start from the",
    "start": "586560",
    "end": "592320"
  },
  {
    "text": "middle one that's the most common one and that's called the service account um",
    "start": "592320",
    "end": "597600"
  },
  {
    "text": "service accounts are objects of kubernetes they're managed internally per namespace",
    "start": "597600",
    "end": "603360"
  },
  {
    "text": "so when you you cannot create a service account for the cluster but once you create a namespace or using",
    "start": "603360",
    "end": "610079"
  },
  {
    "text": "the default namespace don't do it um you can you actually can",
    "start": "610079",
    "end": "615360"
  },
  {
    "text": "create a new service account for example you just do control create service account and it",
    "start": "615360",
    "end": "620880"
  },
  {
    "text": "will create a service account they are used to run workloads that's",
    "start": "620880",
    "end": "626959"
  },
  {
    "text": "the main purpose for those for those service accounts their access can be in the namespace in",
    "start": "626959",
    "end": "633040"
  },
  {
    "text": "their own namespace where they are defined or in other namespaces um where they are not defined uh meaning",
    "start": "633040",
    "end": "640399"
  },
  {
    "text": "you can assign access to a service account defined in namespace a in namespace b through row bindings",
    "start": "640399",
    "end": "646959"
  },
  {
    "text": "which we'll talk about and they can also get access to cluster",
    "start": "646959",
    "end": "652399"
  },
  {
    "text": "level resources or cluster wide by doing role binding to a cluster role",
    "start": "652399",
    "end": "660480"
  },
  {
    "text": "next are the service account groups these groups are automatically populated",
    "start": "660480",
    "end": "665600"
  },
  {
    "text": "a group per namespace exists so that name is system column service accounts colon and",
    "start": "665600",
    "end": "672160"
  },
  {
    "text": "then the namespace name and they are populated with all the service accounts in the namespace",
    "start": "672160",
    "end": "678959"
  },
  {
    "text": "and a global one populated with all service accounts in the cluster so that one is called system column",
    "start": "678959",
    "end": "685279"
  },
  {
    "text": "service accounts and you cannot control those groups they are automatically populated remember that",
    "start": "685279",
    "end": "693279"
  },
  {
    "text": "last inside the cluster are the special groups also automatically populated this includes groups like authenticated",
    "start": "693279",
    "end": "701279"
  },
  {
    "text": "which doesn't need explaining too much or unauthenticated which requires even less explaining",
    "start": "701279",
    "end": "707040"
  },
  {
    "text": "and masters which is pretty much self-explanatory but for example masters automatically are assigned to cluster admins in the",
    "start": "707040",
    "end": "713839"
  },
  {
    "text": "beginning um the users in the automated groups",
    "start": "713839",
    "end": "718959"
  },
  {
    "text": "cannot be controlled they are automatically populated so we'll talk about some best practices around",
    "start": "718959",
    "end": "724880"
  },
  {
    "text": "these groups later on in the slides to the right we have two types of",
    "start": "724880",
    "end": "730639"
  },
  {
    "text": "subjects that are not specifically tied up to the cluster they're not defined over there they're actually authenticated to",
    "start": "730639",
    "end": "737040"
  },
  {
    "text": "the cluster the first are idp user idp stands for identity provider",
    "start": "737040",
    "end": "743920"
  },
  {
    "text": "those are users authenticated into the cluster from an identity provider like uh like google like active",
    "start": "743920",
    "end": "751200"
  },
  {
    "text": "directory like azure active directory like aws users they can be authenticated to the",
    "start": "751200",
    "end": "756320"
  },
  {
    "text": "cluster and granted access like any other subject and they can get access in multiple",
    "start": "756320",
    "end": "763839"
  },
  {
    "text": "clusters and that's actually important last are the idp groups that are populated",
    "start": "763839",
    "end": "769680"
  },
  {
    "text": "with other idp groups and idp users and they can have access also in multiple clusters so when you think",
    "start": "769680",
    "end": "776160"
  },
  {
    "text": "about idp users they are get sorry they are getting access from the idp",
    "start": "776160",
    "end": "783279"
  },
  {
    "text": "groups that they are associated with or members of and then including themselves plus the special groups so",
    "start": "783279",
    "end": "789600"
  },
  {
    "text": "everything ties up together",
    "start": "789600",
    "end": "792959"
  },
  {
    "start": "794000",
    "end": "863000"
  },
  {
    "text": "so let's connect the dots we talked about granting access to subjects to them to do that we use role bindings",
    "start": "794720",
    "end": "802320"
  },
  {
    "text": "and cluster role bindings the bindings are almost always defined in the same scope of the role so for",
    "start": "802320",
    "end": "808160"
  },
  {
    "text": "example if you want to tie up um a role you will def in in a specific name namespace you will define a role",
    "start": "808160",
    "end": "814240"
  },
  {
    "text": "binding in that namespace if you want to tie up a cluster role you will define a cluster wall binding and tie",
    "start": "814240",
    "end": "821519"
  },
  {
    "text": "them up together the binding is for the whole role so",
    "start": "821519",
    "end": "827920"
  },
  {
    "text": "when you think about a role and think about the permission set or the rules inside the role",
    "start": "827920",
    "end": "833199"
  },
  {
    "text": "everything the whole package comes and is being assigned to the user",
    "start": "833199",
    "end": "839199"
  },
  {
    "text": "we can let the binding assign access to service accounts from any namespace which is not necessarily a good thing",
    "start": "839360",
    "end": "845279"
  },
  {
    "text": "and you also need to remember that binding is a one-to-one ratio with roles and you cannot edit it so there is an",
    "start": "845279",
    "end": "851760"
  },
  {
    "text": "affinity between a role and a role binding and if you want to edit it you basically need to",
    "start": "851760",
    "end": "857519"
  },
  {
    "text": "recreate it",
    "start": "857519",
    "end": "860240"
  },
  {
    "start": "863000",
    "end": "921000"
  },
  {
    "text": "so now that we have the complete picture let's just reiterate quickly uh roles",
    "start": "865440",
    "end": "872240"
  },
  {
    "text": "are scoped to a namespace they group permission sets called rules and assigned through role bindings to",
    "start": "872240",
    "end": "878800"
  },
  {
    "text": "subjects the role bindings are also an object remember it's not just the line it's not just something",
    "start": "878800",
    "end": "884240"
  },
  {
    "text": "that connects it's an object of its own cluster roles are scoped to the whole cluster and",
    "start": "884240",
    "end": "890560"
  },
  {
    "text": "group permission sets called rules cluster-wide assigning them is through cluster role",
    "start": "890560",
    "end": "895839"
  },
  {
    "text": "bindings to subjects there's an exception to what i just described between the cluster roles and",
    "start": "895839",
    "end": "902079"
  },
  {
    "text": "the the bindings and we'll discuss that later",
    "start": "902079",
    "end": "906320"
  },
  {
    "text": "and one important note when you're binding an idp object it doesn't say from which idp comes you",
    "start": "908000",
    "end": "915440"
  },
  {
    "text": "just put in the name and hope for the best",
    "start": "915440",
    "end": "927839"
  },
  {
    "start": "921000",
    "end": "979000"
  },
  {
    "text": "so kubernetes is no different than other systems implementing our back it is still not clear what a user can do",
    "start": "929360",
    "end": "936880"
  },
  {
    "text": "so to help us with that cubecontrol has a command called can i so it's a it's a normal type of command",
    "start": "936880",
    "end": "944240"
  },
  {
    "text": "inside queue control it allows us to check if we can do something before actually trying and failing or succeeding",
    "start": "944240",
    "end": "951519"
  },
  {
    "text": "it also supports impersonation letting admins check the access of any users usually it's for service accounts that's",
    "start": "951519",
    "end": "958880"
  },
  {
    "text": "the common use it does have some shortcoming it doesn't tell you how do you get the access",
    "start": "958880",
    "end": "964160"
  },
  {
    "text": "and that's i mean from what path it comes in and that's something daniel is going to",
    "start": "964160",
    "end": "969279"
  },
  {
    "text": "discuss uh that's the project that he's uh working on that's the plugin for cube control",
    "start": "969279",
    "end": "976000"
  },
  {
    "start": "979000",
    "end": "1029000"
  },
  {
    "text": "so now that we're kubernetes our back experts we realize that understanding effective access is not a",
    "start": "980560",
    "end": "986560"
  },
  {
    "text": "small fit yet it is a required capability and not just to check a specific permission",
    "start": "986560",
    "end": "993199"
  },
  {
    "text": "on a specific user we have direct versus indirect access we have resource definitions that is not",
    "start": "993199",
    "end": "1000399"
  },
  {
    "text": "so easy to understand right we have the resources and the filters that it down to the filters we have different",
    "start": "1000399",
    "end": "1007279"
  },
  {
    "text": "types of actions everything needs to be augmented together and then when we go",
    "start": "1007279",
    "end": "1012320"
  },
  {
    "text": "into a large scale multiple cluster hybrid multiple cloud providers it just doesn't",
    "start": "1012320",
    "end": "1019120"
  },
  {
    "text": "get any easier right so all of the above becomes pretty insane in large scales",
    "start": "1019120",
    "end": "1026079"
  },
  {
    "text": "even medium skills are not that easy so daniel why don't you share some examples with everyone",
    "start": "1026079",
    "end": "1033280"
  },
  {
    "start": "1029000",
    "end": "1125000"
  },
  {
    "text": "yeah so to rephrase again and to show you some of the commands here the first example is a command to",
    "start": "1033280",
    "end": "1040319"
  },
  {
    "text": "create a set of permissions this command creates",
    "start": "1040319",
    "end": "1045360"
  },
  {
    "text": "a rule with a single permission which grants a view access to a pod uh which is a built-in",
    "start": "1045360",
    "end": "1052880"
  },
  {
    "text": "kubernetes resource and we didn't wanted to show you yaml file which can be pretty obvious instead we are showing you a utility which is a dry",
    "start": "1052880",
    "end": "1060640"
  },
  {
    "text": "run flag so if you want to get hold of a yaml file you could add a dry run and the output flag so this will show",
    "start": "1060640",
    "end": "1067520"
  },
  {
    "text": "you the definition overall as i don't explain the first command doesn't grant any permission this is",
    "start": "1067520",
    "end": "1072960"
  },
  {
    "text": "just defines a set of rules which we called viewpods then the second command actually grants",
    "start": "1072960",
    "end": "1078880"
  },
  {
    "text": "binds this permission with a service account uh the webinar namespace",
    "start": "1078880",
    "end": "1084240"
  },
  {
    "text": "and the webinar name says admin those are the objects that we took from the demo that we are going to see",
    "start": "1084240",
    "end": "1089919"
  },
  {
    "text": "but again the second command is granting permission uh if you want to see what a given role",
    "start": "1089919",
    "end": "1096640"
  },
  {
    "text": "or a build in cluster role has which rules it contains you could use the describe command",
    "start": "1096640",
    "end": "1102640"
  },
  {
    "text": "and the last one is a something that we're going also to explain a little bit better",
    "start": "1102640",
    "end": "1108559"
  },
  {
    "text": "that you could actually create a role binding which refers to a cluster role this is mainly",
    "start": "1108559",
    "end": "1114320"
  },
  {
    "text": "for reusing definitions and just creating a binding within the namespace",
    "start": "1114320",
    "end": "1120880"
  },
  {
    "text": "yeah awesome thank you very much daniel and uh so let's talk about some advanced topics",
    "start": "1120880",
    "end": "1127600"
  },
  {
    "start": "1125000",
    "end": "1146000"
  },
  {
    "text": "one of them is actually the last command that daniel was showing so just to um remember remember the last command",
    "start": "1127600",
    "end": "1135840"
  },
  {
    "text": "that you see over there that's the uh um binding cluster role in using a normal role binding remember",
    "start": "1135840",
    "end": "1143760"
  },
  {
    "text": "that it's coming soon so um first",
    "start": "1143760",
    "end": "1148960"
  },
  {
    "start": "1146000",
    "end": "1218000"
  },
  {
    "text": "uh first of the advanced topic that we wanted to talk is the special service account called default",
    "start": "1148960",
    "end": "1154080"
  },
  {
    "text": "uh this account is auto-created in each namespace the name is default uh so if you think",
    "start": "1154080",
    "end": "1160960"
  },
  {
    "text": "about the default user in the default is going to be default default",
    "start": "1160960",
    "end": "1166320"
  },
  {
    "text": "and they and every workload first uses it to run itself when created",
    "start": "1166320",
    "end": "1172480"
  },
  {
    "text": "this account doesn't have anything however we see that because of the default usage",
    "start": "1172480",
    "end": "1177919"
  },
  {
    "text": "organizations uh often access to the effectively access to this account eventually makes",
    "start": "1177919",
    "end": "1184080"
  },
  {
    "text": "it much stronger so they're adding more and more access to that account because they're keeping it",
    "start": "1184080",
    "end": "1190480"
  },
  {
    "text": "as as the account running or the service account running the the workloads and they start adding and augmenting",
    "start": "1190480",
    "end": "1196799"
  },
  {
    "text": "more more permissions eventually um making it a very very strong user",
    "start": "1196799",
    "end": "1203120"
  },
  {
    "text": "let's not forget that using this account makes it makes your life harder by definition when it comes to tracing issues all the",
    "start": "1203120",
    "end": "1209600"
  },
  {
    "text": "workloads share the same account in the namespace it's it's very hard to understand who did what",
    "start": "1209600",
    "end": "1216000"
  },
  {
    "text": "don't use it um another advanced topic uh and this is",
    "start": "1217200",
    "end": "1223360"
  },
  {
    "start": "1218000",
    "end": "1318000"
  },
  {
    "text": "actually very advanced are the aggregated cluster roles um that's uh that's a level uh",
    "start": "1223360",
    "end": "1230320"
  },
  {
    "text": "300 400 i think and the reason for that is it's a",
    "start": "1230320",
    "end": "1235520"
  },
  {
    "text": "special behavior and it's not very simple to uh to see",
    "start": "1235520",
    "end": "1240640"
  },
  {
    "text": "that allows us to create smaller cluster roles that automatically rolls up their x rules to a bigger cluster role",
    "start": "1240640",
    "end": "1247440"
  },
  {
    "text": "the magic is actually being done by a controller in kubernetes that is looking for a",
    "start": "1247440",
    "end": "1253200"
  },
  {
    "text": "special syntax labels as you can see them here you see the the aggregator has the aggregation rule cluster role selectors",
    "start": "1253200",
    "end": "1259600"
  },
  {
    "text": "and then it has a specific specific match label that is going to use and then the",
    "start": "1259600",
    "end": "1264960"
  },
  {
    "text": "aggregation at the aggregated object or the aggregated cluster roles have the same label inside them",
    "start": "1264960",
    "end": "1271360"
  },
  {
    "text": "and then they just have that label and that way the controller knows how to put them all inside the actual problem",
    "start": "1271360",
    "end": "1278480"
  },
  {
    "text": "with using this this feature is that it makes something which is already not",
    "start": "1278480",
    "end": "1285679"
  },
  {
    "text": "very simple to understand even more complex because then you have",
    "start": "1285679",
    "end": "1291760"
  },
  {
    "text": "permissions that are or access levels which are kind of transparent to the to the to the",
    "start": "1291760",
    "end": "1297200"
  },
  {
    "text": "naked eye and you need to start digging in to actually understand what's going on they are being used and um one of them",
    "start": "1297200",
    "end": "1304240"
  },
  {
    "text": "is actually uh one of the main uses for them is when you create your own custom roles or crds",
    "start": "1304240",
    "end": "1309679"
  },
  {
    "text": "uh to roll them up to existing built-in roles like view and admin that would be the way to do it",
    "start": "1309679",
    "end": "1319840"
  },
  {
    "start": "1318000",
    "end": "1386000"
  },
  {
    "text": "and of course um that's the exception that we were talking about so what happens when you",
    "start": "1320480",
    "end": "1326960"
  },
  {
    "text": "use a role binding with a cluster role so the answer is actually pretty simple it takes that role definition",
    "start": "1326960",
    "end": "1333440"
  },
  {
    "text": "um and scoped it scope it down to the namespace of the cl of the uh of the role binding",
    "start": "1333440",
    "end": "1340799"
  },
  {
    "text": "is basically a method for creating a single role with common access and assigning it to service account",
    "start": "1340799",
    "end": "1346640"
  },
  {
    "text": "while scoping scoping it down to their namespace so for example if i will do a create",
    "start": "1346640",
    "end": "1353600"
  },
  {
    "text": "create pods in a cluster role and assign it using a role binding i will allow a service account",
    "start": "1353600",
    "end": "1359520"
  },
  {
    "text": "to create pods just in that namespace that's uh the simple uh the simplest",
    "start": "1359520",
    "end": "1365520"
  },
  {
    "text": "explanation to how that works again that makes understanding what's going on cumbersome",
    "start": "1365520",
    "end": "1371679"
  },
  {
    "text": "okay so it's sometimes adding some more roles uh might be some more setup work but",
    "start": "1371679",
    "end": "1378799"
  },
  {
    "text": "in the long term in the long run it's gonna it's gonna make your life probably easier than understanding how",
    "start": "1378799",
    "end": "1384320"
  },
  {
    "text": "this works so daniel over to you yeah here again i",
    "start": "1384320",
    "end": "1390559"
  },
  {
    "text": "don't want you to memorize all the commands this is just to reiterate what aram was explaining with the commands so the",
    "start": "1390559",
    "end": "1396240"
  },
  {
    "text": "first command is creating a cluster role because uh one another use case of",
    "start": "1396240",
    "end": "1401280"
  },
  {
    "text": "cluster rows is to grant permissions to the non uh res to the cluster scope resources so",
    "start": "1401280",
    "end": "1406720"
  },
  {
    "text": "in kubernetes we have you know namespace resources and cluster scope resources nodes are",
    "start": "1406720",
    "end": "1412159"
  },
  {
    "text": "cluster scope so we must use cluster roles to grant perm permissions right so that's the first",
    "start": "1412159",
    "end": "1418400"
  },
  {
    "text": "command and and as you can see uh we just define in the first command the set of",
    "start": "1418400",
    "end": "1424480"
  },
  {
    "text": "rules and the second command creates a cluster rule binding and associates the view nodes uh uh",
    "start": "1424480",
    "end": "1431760"
  },
  {
    "text": "cluster role to a webinar namespace admin service account another uh case",
    "start": "1431760",
    "end": "1437679"
  },
  {
    "text": "when you must use cluster rules is when you want to grant permission to the api endpoints like uh health checks or",
    "start": "1437679",
    "end": "1446000"
  },
  {
    "text": "readiness checks there is a bunch of endpoint urls exposed by the kubernetes api they are not kubernetes objects they",
    "start": "1446000",
    "end": "1453200"
  },
  {
    "text": "are not stored in cd uh but uh still you can control who has permission to um to access those",
    "start": "1453200",
    "end": "1461360"
  },
  {
    "text": "and and uh so the third and fourth command is like creating a role a cluster role and the cluster rule",
    "start": "1461360",
    "end": "1467760"
  },
  {
    "text": "binding and and the last command is just a preview we are going to demonstrate",
    "start": "1467760",
    "end": "1473200"
  },
  {
    "text": "lots of like sanity checks or lots of use cases for built-in auth can i command in this case",
    "start": "1473200",
    "end": "1480000"
  },
  {
    "text": "you can see that after creating all these arbuck objects a system",
    "start": "1480000",
    "end": "1488080"
  },
  {
    "text": "the service account is able to get the health endpoint",
    "start": "1488080",
    "end": "1494559"
  },
  {
    "text": "so yes i'm going to run similar commands during the demo at the end of the presentation",
    "start": "1494559",
    "end": "1500640"
  },
  {
    "text": "just uh don't hold your breath you don't need to write anything right now um we're we'll also share together with",
    "start": "1500640",
    "end": "1507440"
  },
  {
    "text": "the slides we'll also share the uh all the commands running as a script uh",
    "start": "1507440",
    "end": "1513360"
  },
  {
    "text": "attached to the presentation so no worries",
    "start": "1513360",
    "end": "1519200"
  },
  {
    "start": "1519000",
    "end": "1599000"
  },
  {
    "text": "so one of my favorite subjects uh is common pitfalls um what's uh where can i fail",
    "start": "1520720",
    "end": "1528799"
  },
  {
    "text": "and the first thing uh and that's actually a big big big problem in kubernetes and it's",
    "start": "1528799",
    "end": "1535520"
  },
  {
    "text": "it's not like that in in arabic implementations others you know if you",
    "start": "1535520",
    "end": "1540559"
  },
  {
    "text": "if you go to other hour back implementation you're not going to see that the first one is validation it just",
    "start": "1540559",
    "end": "1546159"
  },
  {
    "text": "doesn't exist so check and double check because you're not going to get a warning if your rules are not configured",
    "start": "1546159",
    "end": "1552400"
  },
  {
    "text": "correctly it won't work putting a role that doesn't exist in a binding just is not going to assign any",
    "start": "1552400",
    "end": "1558320"
  },
  {
    "text": "access if you put in a username that doesn't exist kubernetes is just going to let it fly",
    "start": "1558320",
    "end": "1564799"
  },
  {
    "text": "and you won't understand why things are not not working or why your user does not",
    "start": "1564799",
    "end": "1571039"
  },
  {
    "text": "get any access it doesn't check the subject and if you do a modification",
    "start": "1571039",
    "end": "1577120"
  },
  {
    "text": "it just doesn't check if whatever you modified is actually valid",
    "start": "1577120",
    "end": "1584720"
  },
  {
    "text": "that's another reason why keeping cluster hygiene is crucial okay verify that all the",
    "start": "1584720",
    "end": "1590960"
  },
  {
    "text": "objects are actually configured correctly is very important",
    "start": "1590960",
    "end": "1599840"
  },
  {
    "start": "1599000",
    "end": "1678000"
  },
  {
    "text": "the other one is the auto-populated groups it's a great feature um for for people you know",
    "start": "1600960",
    "end": "1608480"
  },
  {
    "text": "who used other arbuck systems you probably know that feature from there as well but they also",
    "start": "1608480",
    "end": "1615679"
  },
  {
    "text": "add to the complexity a member of those groups cannot be removed so hence any access granted to these",
    "start": "1615679",
    "end": "1622159"
  },
  {
    "text": "groups will be assigned to all users in them adding access is easy",
    "start": "1622159",
    "end": "1628000"
  },
  {
    "text": "but what we see is that taking it away is always an issue think well before adding any access to",
    "start": "1628000",
    "end": "1634320"
  },
  {
    "text": "those groups just give you an example actually from the white box days",
    "start": "1634320",
    "end": "1640080"
  },
  {
    "text": "if someone would just add access to a folder for example um to a group of users it might be very",
    "start": "1640080",
    "end": "1647600"
  },
  {
    "text": "simple but then taking it away can take years just to verify that no one is actually",
    "start": "1647600",
    "end": "1652640"
  },
  {
    "text": "using it and no one actually utilized it so we'll talk about removing access and",
    "start": "1652640",
    "end": "1659600"
  },
  {
    "text": "how to see some other data around it soon but remember that anytime that you want to add something",
    "start": "1659600",
    "end": "1666320"
  },
  {
    "text": "to one of those groups think carefully if that group actually needs it",
    "start": "1666320",
    "end": "1672880"
  },
  {
    "text": "again it's a shortcut but sometimes this shortcut is going to be is going to take you to the wrong way",
    "start": "1672960",
    "end": "1679039"
  },
  {
    "start": "1678000",
    "end": "1745000"
  },
  {
    "text": "so having said all that do we actually need the headache called list privilege um so this previous is what we discussed",
    "start": "1680159",
    "end": "1687200"
  },
  {
    "text": "in the you know in the first slide the signing just the required access for each user",
    "start": "1687200",
    "end": "1692399"
  },
  {
    "text": "um and basically um our approach to this or you could say our suggestion",
    "start": "1692399",
    "end": "1698640"
  },
  {
    "text": "is to have a service account service accounts defined with this privilege because they're defined to perform specific types of",
    "start": "1698640",
    "end": "1705600"
  },
  {
    "text": "actions and only those in the application that's why we also said you know keep a named",
    "start": "1705600",
    "end": "1710880"
  },
  {
    "text": "account and not the default account that way you're not creating too broad of of uh",
    "start": "1710880",
    "end": "1716240"
  },
  {
    "text": "uh of access for for users versus normal you know human beings um",
    "start": "1716240",
    "end": "1722799"
  },
  {
    "text": "where reality proves we need to have some wiggle room so keep it close to this privilege you",
    "start": "1722799",
    "end": "1728320"
  },
  {
    "text": "know don't just give them anything they want um but you don't have to keep it to the",
    "start": "1728320",
    "end": "1734320"
  },
  {
    "text": "strictest uh possible because that way your help desk or your people who",
    "start": "1734320",
    "end": "1740960"
  },
  {
    "text": "maintain this is going to have a big big headache",
    "start": "1740960",
    "end": "1745600"
  },
  {
    "start": "1745000",
    "end": "1821000"
  },
  {
    "text": "so a key method uh helping us to is basically to isolate risky access and",
    "start": "1747200",
    "end": "1753120"
  },
  {
    "text": "we want to isolate those risky access to designated roles and grouping those risky access bundles",
    "start": "1753120",
    "end": "1759039"
  },
  {
    "text": "as bundles that need to work together so for example the ability to create normally come would come with the",
    "start": "1759039",
    "end": "1764640"
  },
  {
    "text": "ability to modify to modify so you bundle them together in a in a role it does have again some",
    "start": "1764640",
    "end": "1772880"
  },
  {
    "text": "more overhead in the in the setup time but then ongoing it's going to make your",
    "start": "1772880",
    "end": "1778880"
  },
  {
    "text": "life easier so doing so will allow us when we need to remove types of access or to remove the whole bundle because",
    "start": "1778880",
    "end": "1785440"
  },
  {
    "text": "their normal access which is not risky is not about that bundle with those roles",
    "start": "1785440",
    "end": "1790720"
  },
  {
    "text": "so the non-risky is somewhat the wiggle room that i was talking about before it's less critical to control",
    "start": "1790720",
    "end": "1798960"
  },
  {
    "text": "i'm not i'm not saying that you should overlook it but you should pay more attention to the",
    "start": "1799120",
    "end": "1806159"
  },
  {
    "text": "risky roles while isolating the risky access is a good idea don't provide those risky roles to the",
    "start": "1806159",
    "end": "1812640"
  },
  {
    "text": "built-in groups remember the previous recommendation work together",
    "start": "1812640",
    "end": "1818080"
  },
  {
    "text": "on those so that takes us back uh where i said",
    "start": "1818080",
    "end": "1824880"
  },
  {
    "start": "1821000",
    "end": "1885000"
  },
  {
    "text": "arbuck is a compromise between security and operation um we we have to have the compromise",
    "start": "1824880",
    "end": "1831679"
  },
  {
    "text": "here um and eventually if you think about it the compromise is the service account",
    "start": "1831679",
    "end": "1839039"
  },
  {
    "text": "should be kept with the tightest control less privilege and normal users should be divided",
    "start": "1839039",
    "end": "1844399"
  },
  {
    "text": "with isolated roles and granted on a need to do basis and non-risky is more of a relaxed",
    "start": "1844399",
    "end": "1849919"
  },
  {
    "text": "manner but the wiggle room and the compromise is also the number of roles",
    "start": "1849919",
    "end": "1856080"
  },
  {
    "text": "and the number of rules inside each role so you need to find your",
    "start": "1856080",
    "end": "1862320"
  },
  {
    "text": "your right uh um ratio and not many roles that are too big that",
    "start": "1862320",
    "end": "1868559"
  },
  {
    "text": "contains too much but don't make them too small because then if a role equals a single a single um",
    "start": "1868559",
    "end": "1876720"
  },
  {
    "text": "rule then you basically didn't do anything you're not taking advantage of our buck",
    "start": "1876720",
    "end": "1884720"
  },
  {
    "start": "1885000",
    "end": "1939000"
  },
  {
    "text": "so another aspect that we should utilize in kubernetes to help us with less privilege and with",
    "start": "1886640",
    "end": "1893519"
  },
  {
    "text": "you know removing unused access and also you know for for tracing stuff is a great audit built",
    "start": "1893519",
    "end": "1900000"
  },
  {
    "text": "into the platform it helps us to determine if users are actually using their access",
    "start": "1900000",
    "end": "1905679"
  },
  {
    "text": "it's a stepping stone to be used when you want to remove access it requires us to enable the audit",
    "start": "1905679",
    "end": "1912320"
  },
  {
    "text": "analyze it and understand which access is not been utilized over time by our users",
    "start": "1912320",
    "end": "1917679"
  },
  {
    "text": "it's not a simple task hence you can use solutions that address these needs and also it also also automates",
    "start": "1917679",
    "end": "1926000"
  },
  {
    "text": "the analysis to determine what's used and what can be removed doing it manually is not that simple but",
    "start": "1926000",
    "end": "1932559"
  },
  {
    "text": "it's very useful when we're talking about uh analysis so daniel um take us through some of",
    "start": "1932559",
    "end": "1939679"
  },
  {
    "text": "those yeah again quickly during the demo you will see the live uh",
    "start": "1939679",
    "end": "1944880"
  },
  {
    "text": "update log entries uh but here we just wanted to demonstrate how it looks like from the server perspective so on the",
    "start": "1944880",
    "end": "1951440"
  },
  {
    "text": "left hand side we have a request http request to the kubernetes api which",
    "start": "1951440",
    "end": "1957279"
  },
  {
    "text": "is trying to list pods in the webinar namespace as an anonymous user and it is detected",
    "start": "1957279",
    "end": "1962960"
  },
  {
    "text": "obviously the the request is not permitted and uh it is recorded on the server side as a",
    "start": "1962960",
    "end": "1969519"
  },
  {
    "text": "forbidden uh status uh and you can see it as a notation like a forbidden and the",
    "start": "1969519",
    "end": "1975600"
  },
  {
    "text": "code 403 another example if we move on uh to the next slide",
    "start": "1975600",
    "end": "1982559"
  },
  {
    "text": "is uh also forbidden access but this time we are trying to get the list of pods in a webinar space passing",
    "start": "1982559",
    "end": "1990080"
  },
  {
    "text": "the [Music] token which is associated with the webinar ns admin however",
    "start": "1990080",
    "end": "1996240"
  },
  {
    "text": "this service account is not permitted to do so so again we were recognized as a service",
    "start": "1996240",
    "end": "2002080"
  },
  {
    "text": "account user not as on the previous side as an anonymous user but still we are forbidden only if we grant",
    "start": "2002080",
    "end": "2009279"
  },
  {
    "text": "permission to list pods in this particular namespace",
    "start": "2009279",
    "end": "2014720"
  },
  {
    "text": "through the role binding or cluster role binding we are allowed to get the list of pods and",
    "start": "2014720",
    "end": "2021200"
  },
  {
    "text": "useful information is in the annotation property of the audit log entry",
    "start": "2021200",
    "end": "2027440"
  },
  {
    "text": "which says which which role binding grants this permission to",
    "start": "2027440",
    "end": "2033530"
  },
  {
    "text": "[Music] to the to the request awesome",
    "start": "2033530",
    "end": "2038799"
  },
  {
    "text": "thanks daniel as daniel said we're going to see a bit more of that in the demo so really quickly to to go over the",
    "start": "2038799",
    "end": "2046000"
  },
  {
    "start": "2039000",
    "end": "2118000"
  },
  {
    "text": "uh um the way to achieve the steps for achieving this privilege in service accounts is basically it's",
    "start": "2046000",
    "end": "2052079"
  },
  {
    "text": "divided to day zero which is the setup time and day one plus which is the ongoing effort",
    "start": "2052079",
    "end": "2057358"
  },
  {
    "text": "the first step is to create a named account to be used in in the workload that way we can ensure",
    "start": "2057359",
    "end": "2062720"
  },
  {
    "text": "that only the required access is being granted to this user second isolate the rules",
    "start": "2062720",
    "end": "2068158"
  },
  {
    "text": "for the for that user to handle just him now this is the other way around from what we talked",
    "start": "2068159",
    "end": "2073280"
  },
  {
    "text": "about for normal users create a designated role for that enroll",
    "start": "2073280",
    "end": "2078480"
  },
  {
    "text": "bindings for that service account it will create some extra roles but it's worth it",
    "start": "2078480",
    "end": "2084560"
  },
  {
    "text": "the last setup phase is to set up the audit where we could track the usage but also to do some uh",
    "start": "2084560",
    "end": "2090158"
  },
  {
    "text": "some tracing day one plus involves granting access when our workloads",
    "start": "2090159",
    "end": "2095200"
  },
  {
    "text": "evolves and needs more access review the other records to determine what's used and lastly remove",
    "start": "2095200",
    "end": "2100480"
  },
  {
    "text": "unused access normally in a in a service account which is uh in an application that we know what",
    "start": "2100480",
    "end": "2107200"
  },
  {
    "text": "it's doing exactly we won't need to do too much on day one plus unless the application changes okay",
    "start": "2107200",
    "end": "2113359"
  },
  {
    "text": "if we do a good job on day zero uh we're clear",
    "start": "2113359",
    "end": "2118800"
  },
  {
    "start": "2118000",
    "end": "2199000"
  },
  {
    "text": "um some some take away from you know daniel experience and myself uh so first of all",
    "start": "2119200",
    "end": "2125680"
  },
  {
    "text": "use named accounts even if your workload doesn't require anything at the moment it will help you later on",
    "start": "2125680",
    "end": "2131200"
  },
  {
    "text": "even if it it when it needs one second and i know this is might seem",
    "start": "2131200",
    "end": "2137680"
  },
  {
    "text": "weird for some of you disable the auto mount of the token uh the token is basically the uh the",
    "start": "2137680",
    "end": "2143760"
  },
  {
    "text": "password of the service account and that actually means that uh that's the least the most is privileged because",
    "start": "2143760",
    "end": "2149520"
  },
  {
    "text": "it means it doesn't even log on uh if the workload doesn't need any access to the api server and you disable that that's fine third",
    "start": "2149520",
    "end": "2158480"
  },
  {
    "text": "uh consider every access granted to the built in groups once you grant uh those act that access it's gonna be",
    "start": "2158480",
    "end": "2164320"
  },
  {
    "text": "very hard to take it away as i said um fourth keep your clusters clean don't",
    "start": "2164320",
    "end": "2169920"
  },
  {
    "text": "leave loose ends if you if you stop using a roll just delete it if you stop using your roll binding just delete it service accounts that you",
    "start": "2169920",
    "end": "2176160"
  },
  {
    "text": "don't need delete them uh don't keep them uh out there um and lastly use audit even if you're",
    "start": "2176160",
    "end": "2182640"
  },
  {
    "text": "not going to analyze it uh it's going to reduce to reduce access it will help you later on",
    "start": "2182640",
    "end": "2187680"
  },
  {
    "text": "with operations and visibility so with that i'm going to hand it over to danielle um",
    "start": "2187680",
    "end": "2196720"
  },
  {
    "text": "floor is yours daniel um yeah thank you so uh what i have is",
    "start": "2197920",
    "end": "2204480"
  },
  {
    "text": "i have a single node minicube cluster in my environment you could use managed",
    "start": "2204480",
    "end": "2210960"
  },
  {
    "text": "cluster it doesn't really matter but then i also have a cube control configured to",
    "start": "2210960",
    "end": "2216640"
  },
  {
    "text": "connect to this cluster crew which is a cubecontrol plugins manager um i need that to install hook and",
    "start": "2216640",
    "end": "2222720"
  },
  {
    "text": "plugin and and i'm also using curl and openssl for some of the scripts that you are going",
    "start": "2222720",
    "end": "2227920"
  },
  {
    "text": "to see so yes you could install a hook and",
    "start": "2227920",
    "end": "2234079"
  },
  {
    "text": "plugin which is kind of a useful arbuck visualization tool there's",
    "start": "2234079",
    "end": "2239119"
  },
  {
    "text": "actually plenty of interesting plugins in the crew index this is one of the utilities that we",
    "start": "2239119",
    "end": "2245839"
  },
  {
    "text": "have developed at aqua and i would like to show you how useful it is",
    "start": "2245839",
    "end": "2250960"
  },
  {
    "text": "i have already installed it before so you saw it and let's start with the checking what is the um",
    "start": "2250960",
    "end": "2258640"
  },
  {
    "start": "2252000",
    "end": "2299000"
  },
  {
    "text": "current context and what is the context so whenever you install a cluster let's say you have a fresh mini cube cluster it",
    "start": "2258640",
    "end": "2265280"
  },
  {
    "text": "automatically configures a cubecontrol config regulation file and it points to",
    "start": "2265280",
    "end": "2270480"
  },
  {
    "text": "something which is called the current context so this current context usually has a all the credentials uh",
    "start": "2270480",
    "end": "2277680"
  },
  {
    "text": "to connect to the kubernetes api server uh server in this case uh by default minique is",
    "start": "2277680",
    "end": "2283440"
  },
  {
    "text": "using a tls so it is using a client uh certificate and this certificate is not stored in",
    "start": "2283440",
    "end": "2290000"
  },
  {
    "text": "the api it's external right but this certificate has a something which is called a",
    "start": "2290000",
    "end": "2296079"
  },
  {
    "text": "you know fields such as organization and uh common name and this is what it matters",
    "start": "2296079",
    "end": "2302800"
  },
  {
    "start": "2299000",
    "end": "2334000"
  },
  {
    "text": "so the only thing uh to remember from this executing this script is to uh to note the organization as you",
    "start": "2302800",
    "end": "2310079"
  },
  {
    "text": "can see the current user in the current context is a member of the system masters uh",
    "start": "2310079",
    "end": "2315440"
  },
  {
    "text": "i will show you why it is important later on um right so now uh as we said there is a",
    "start": "2315440",
    "end": "2321040"
  },
  {
    "text": "built-in command i think we had a typo on the on one of the slides this is cube control alf can i",
    "start": "2321040",
    "end": "2326640"
  },
  {
    "text": "uh command and for example we can use it to check whether we can create pods in the current namespace we could also",
    "start": "2326640",
    "end": "2333599"
  },
  {
    "text": "check if we can create pods in the cube system namespace and in both the answer is yes if we",
    "start": "2333599",
    "end": "2341360"
  },
  {
    "start": "2334000",
    "end": "2444000"
  },
  {
    "text": "[Music] are interested in seeing whether we can create pods in any namespace there is this dash",
    "start": "2341360",
    "end": "2347920"
  },
  {
    "text": "a or dash dash all namespaces flag however",
    "start": "2347920",
    "end": "2353359"
  },
  {
    "text": "i would like to see who else uh or what other you know bindings or permissions uh",
    "start": "2353359",
    "end": "2360960"
  },
  {
    "text": "that allow me to do all this pretty powerful things so this is where who can plugin comes in",
    "start": "2360960",
    "end": "2367119"
  },
  {
    "text": "if i ask who can plugin who can create pods in any namespace you will see that there is a subject",
    "start": "2367119",
    "end": "2374640"
  },
  {
    "text": "which is of type group so there is a group called system masters that is allowed to",
    "start": "2374640",
    "end": "2383359"
  },
  {
    "text": "uh create bots because of the cluster admin role binding so essentially what it means the default",
    "start": "2383359",
    "end": "2389280"
  },
  {
    "text": "user created by the mecube installation script is a member of system masters group which is very",
    "start": "2389280",
    "end": "2394880"
  },
  {
    "text": "powerful this proves that this is not the least privileged we are too powerful",
    "start": "2394880",
    "end": "2400160"
  },
  {
    "text": "and um let's go further uh building our command accepts this uh",
    "start": "2400160",
    "end": "2407119"
  },
  {
    "text": "wildcard and for example we can check who can do anything with any resource across the across the",
    "start": "2407119",
    "end": "2414800"
  },
  {
    "text": "cluster and again this system masters group allows us to do that so we can create",
    "start": "2414800",
    "end": "2419839"
  },
  {
    "text": "bots delete pods we can create nodes delete boards this is potentially dangerous",
    "start": "2419839",
    "end": "2425599"
  },
  {
    "text": "and again with cubecontrol who can plug in we have more information",
    "start": "2425599",
    "end": "2430880"
  },
  {
    "text": "about the cluster role bindings or role bindings it's not just yes no again we have the",
    "start": "2430880",
    "end": "2437040"
  },
  {
    "text": "system masters group that is causing all this let's call it travel in in the context of arbuck and list privilege",
    "start": "2437040",
    "end": "2444079"
  },
  {
    "start": "2444000",
    "end": "2503000"
  },
  {
    "text": "uh so what i want to demonstrate also is this uh we were talking about service",
    "start": "2444079",
    "end": "2450240"
  },
  {
    "text": "accounts and tokens right so the so the service account is associated with the secret and then the secret",
    "start": "2450240",
    "end": "2455839"
  },
  {
    "text": "contains a data which is a token so we could use cube control but also we can use",
    "start": "2455839",
    "end": "2461520"
  },
  {
    "text": "curl any http client to send this token to the api server and so typically",
    "start": "2461520",
    "end": "2468079"
  },
  {
    "text": "when you create a namespace as a best practice create a service",
    "start": "2468079",
    "end": "2474720"
  },
  {
    "text": "account which is dedicated for running the workloads right so here we are creating",
    "start": "2474720",
    "end": "2480000"
  },
  {
    "text": "a webinar namespace admin and and just to prove that there is a",
    "start": "2480000",
    "end": "2486480"
  },
  {
    "text": "default service account created as well right we have two service accounts and two corresponding secrets",
    "start": "2486480",
    "end": "2492079"
  },
  {
    "text": "but try it not using a default secret right this allows you to browse through the arbuck objects and",
    "start": "2492079",
    "end": "2499520"
  },
  {
    "text": "narrowing down the permissions uh yeah so as you can see uh",
    "start": "2499520",
    "end": "2506800"
  },
  {
    "start": "2503000",
    "end": "2540000"
  },
  {
    "text": "now we have this webinar namespace service account we could get the secret",
    "start": "2506800",
    "end": "2513440"
  },
  {
    "text": "associated with it um and then we can also extract the code",
    "start": "2513440",
    "end": "2519200"
  },
  {
    "text": "token this is by default a jwt token and then the last bit to send a request",
    "start": "2519200",
    "end": "2527760"
  },
  {
    "text": "to kubernetes api is to get the kubernetes api url from the current context and with that we could try",
    "start": "2527760",
    "end": "2534839"
  },
  {
    "text": "listing pods in the webinar namespace",
    "start": "2534839",
    "end": "2540799"
  },
  {
    "start": "2540000",
    "end": "2597000"
  },
  {
    "text": "so what you can see also in the bottom is the audit log the one that i mentioned and we had three slides showing the output of the",
    "start": "2542000",
    "end": "2549839"
  },
  {
    "text": "and because we sent an anonymous anonymous request to the api server uh we got the",
    "start": "2551119",
    "end": "2556800"
  },
  {
    "text": "forbidden status right we were identified as system anonymous",
    "start": "2556800",
    "end": "2562079"
  },
  {
    "text": "so let's go ahead and try sending the same request but this time we will pass the barrier token so there is no magic",
    "start": "2562079",
    "end": "2568000"
  },
  {
    "text": "the uh the access token associated with the service account is sent as a http header",
    "start": "2568000",
    "end": "2574319"
  },
  {
    "text": "and this time we were identified as a webinar namespace admin service account however we haven't",
    "start": "2574319",
    "end": "2581119"
  },
  {
    "text": "granted any permissions so this is forbidden as well so let's go ahead and fix it",
    "start": "2581119",
    "end": "2586960"
  },
  {
    "text": "whether anonymous or newly created service account they don't",
    "start": "2586960",
    "end": "2592640"
  },
  {
    "text": "have access to listing pods in a webinar namespace",
    "start": "2592640",
    "end": "2598319"
  },
  {
    "start": "2597000",
    "end": "2683000"
  },
  {
    "text": "one thing to fix it is to define a role uh with with the rules for for listing",
    "start": "2598319",
    "end": "2605200"
  },
  {
    "text": "parts but we can also reuse a built-in cluster rows whether it's a good idea or bad depends on your use case",
    "start": "2605200",
    "end": "2610640"
  },
  {
    "text": "for the sake of simplicity i'm going to reuse a built-in view cluster role just to demonstrate",
    "start": "2610640",
    "end": "2616240"
  },
  {
    "text": "that we can do that so if you describe this role and prep it for",
    "start": "2616240",
    "end": "2621760"
  },
  {
    "text": "permissions for pods you see that it has this get list watch rule which is all what we need",
    "start": "2621760",
    "end": "2628800"
  },
  {
    "text": "to list pods in a in a webinar namespace if we create a role binding so now we are creating a role binding",
    "start": "2628800",
    "end": "2635119"
  },
  {
    "text": "in the webinar namespace and we are referring to the service account that we have just created and the",
    "start": "2635119",
    "end": "2640560"
  },
  {
    "text": "cluster or view so the cluster role view is built in",
    "start": "2640560",
    "end": "2645839"
  },
  {
    "text": "set of permissions and now let's try again sending the same uh request and this",
    "start": "2645839",
    "end": "2652880"
  },
  {
    "text": "time we we it succeeded obviously we don't have any pods any workloads running in this",
    "start": "2652880",
    "end": "2659119"
  },
  {
    "text": "namespace but uh the request was allowed",
    "start": "2659119",
    "end": "2664160"
  },
  {
    "text": "and we can also see all that in the in the audit log there is always an entry uh with a annotations",
    "start": "2664160",
    "end": "2671280"
  },
  {
    "text": "um saying that it was allowed and also giving the reason you could troubleshoot and make sure",
    "start": "2671280",
    "end": "2678240"
  },
  {
    "text": "that this is exactly object that you want to grant permission through [Music]",
    "start": "2678240",
    "end": "2684319"
  },
  {
    "text": "if it didn't work for some reason in your environment then he there is this alf can i again",
    "start": "2684319",
    "end": "2691520"
  },
  {
    "text": "for the rescue it has this interesting dash dash list parameter which instead",
    "start": "2691520",
    "end": "2696960"
  },
  {
    "text": "of returning yes or no lists all permissions and another feature of this building command we are using impersonation so",
    "start": "2696960",
    "end": "2704000"
  },
  {
    "text": "remember uh when you learn run cube control it is using the current context and this current context has a current",
    "start": "2704000",
    "end": "2709599"
  },
  {
    "text": "user so without a dash dash s flag without this impersonation",
    "start": "2709599",
    "end": "2715040"
  },
  {
    "text": "we would ask kubernetes whether the system masters groups can list pods in",
    "start": "2715040",
    "end": "2720800"
  },
  {
    "text": "the webinar space right instead here we would like to check whether the service account has",
    "start": "2720800",
    "end": "2727119"
  },
  {
    "text": "those permissions if it's not enough you could narrow down to a verb",
    "start": "2727119",
    "end": "2732560"
  },
  {
    "text": "and the resource name and again using the impersonation you can see that the answer is yes very often i'm",
    "start": "2732560",
    "end": "2739599"
  },
  {
    "text": "checking uh whether uh i could do some disallowed functions so for example we",
    "start": "2739599",
    "end": "2745200"
  },
  {
    "text": "are talking about view permissions i want to make sure that the service account cannot create bots right",
    "start": "2745200",
    "end": "2750319"
  },
  {
    "text": "in my context with my demo so the answer is no if things go wrong you would like to see",
    "start": "2750319",
    "end": "2756400"
  },
  {
    "text": "why or whether a given subject has permission uh to a given uh",
    "start": "2756400",
    "end": "2764160"
  },
  {
    "text": "resource or not so this is where who can plugin gives you this information and the first row uh",
    "start": "2764160",
    "end": "2770880"
  },
  {
    "text": "actually the best is to read this output from the right to the left is you see that the service account in a",
    "start": "2770880",
    "end": "2776480"
  },
  {
    "text": "webinar namespace has a viewer all uh granted to the webinar namespace admin view",
    "start": "2776480",
    "end": "2783680"
  },
  {
    "text": "role binding so this those are the tools uh to to",
    "start": "2783680",
    "end": "2789040"
  },
  {
    "start": "2784000",
    "end": "2872000"
  },
  {
    "text": "troubleshoot and and create uh our back objects uh",
    "start": "2789040",
    "end": "2794480"
  },
  {
    "text": "another thing that i would like to show you is to see what happens when you create a",
    "start": "2794480",
    "end": "2799599"
  },
  {
    "text": "pod with a default service account you remember that in the webinar namespace we have a",
    "start": "2799599",
    "end": "2804880"
  },
  {
    "text": "default service account created if you don't specify it explicitly when you run a pod this is going to be",
    "start": "2804880",
    "end": "2810800"
  },
  {
    "text": "used and it is it is mounted at a particular path in the container file system right so i",
    "start": "2810800",
    "end": "2817920"
  },
  {
    "text": "have created the ipod in the webinar namespace i didn't specify any service account to run this",
    "start": "2817920",
    "end": "2823680"
  },
  {
    "text": "container with so this is the access token of the default service",
    "start": "2823680",
    "end": "2829680"
  },
  {
    "text": "account and also i can see that by default",
    "start": "2829680",
    "end": "2835599"
  },
  {
    "text": "it doesn't have any permission which is good as long as you don't grant extensive permission to the system",
    "start": "2835599",
    "end": "2840880"
  },
  {
    "text": "service accounts group this is what iranic was explaining that usually it's not a good idea because",
    "start": "2840880",
    "end": "2846800"
  },
  {
    "text": "someone might accidentally grant two wide permissions to this default service account or all service accounts in the cluster",
    "start": "2846800",
    "end": "2853920"
  },
  {
    "text": "and then even when you expect that a given pod is not permitted to do something",
    "start": "2853920",
    "end": "2859200"
  },
  {
    "text": "it actually is permitted to do so so um as you can see this is all",
    "start": "2859200",
    "end": "2866480"
  },
  {
    "text": "this is a set of permissions that we have for the default account and if we do this exercise and run",
    "start": "2866480",
    "end": "2874079"
  },
  {
    "start": "2872000",
    "end": "2919000"
  },
  {
    "text": "the ipod and specify the webinar namespace admin service account there is this service",
    "start": "2874079",
    "end": "2880720"
  },
  {
    "text": "account flag this time we have a different uh",
    "start": "2880720",
    "end": "2886079"
  },
  {
    "text": "token you have to believe me uh that it is different from the previous uh case uh but we can check it right uh",
    "start": "2886079",
    "end": "2893200"
  },
  {
    "text": "this time we can list bots actually we are running we are listing ipod",
    "start": "2893200",
    "end": "2898400"
  },
  {
    "text": "which is you know the the pod that we have just run and all that is also reflected in the in",
    "start": "2898400",
    "end": "2905839"
  },
  {
    "text": "the list of permissions uh if you remember we granted the view permission",
    "start": "2905839",
    "end": "2911680"
  },
  {
    "text": "uh to the service account and that's why we can list pods in particular",
    "start": "2911680",
    "end": "2917470"
  },
  {
    "text": "[Music] just quickly uh ariel mentioned you know",
    "start": "2917470",
    "end": "2923200"
  },
  {
    "text": "this cluster roles that you can extend them",
    "start": "2923200",
    "end": "2928319"
  },
  {
    "text": "uh through the aggregation mechanism and pretty typical",
    "start": "2928319",
    "end": "2934079"
  },
  {
    "text": "use case is that you know the the view cluster role uh this",
    "start": "2934079",
    "end": "2939119"
  },
  {
    "text": "has a rules for building resources such as spots deployments etc but it doesn't know about any extensions",
    "start": "2939119",
    "end": "2945440"
  },
  {
    "text": "or custom resources that you might create right in this example i have just created a crd which is coming from one",
    "start": "2945440",
    "end": "2951520"
  },
  {
    "text": "of our other open source projects but it doesn't really matter it's a crd so the custom resource which",
    "start": "2951520",
    "end": "2956960"
  },
  {
    "text": "represents a vulnerability report of a given workload and then let's see if uh",
    "start": "2956960",
    "end": "2964240"
  },
  {
    "text": "if uh i if we can get uh the list of vulnerability reports as a",
    "start": "2964319",
    "end": "2969839"
  },
  {
    "text": "webinar and as admin and by default if we don't grant this permission we are not allowed to do",
    "start": "2969839",
    "end": "2975119"
  },
  {
    "text": "that so what we can do we can actually create a cluster role which defines the",
    "start": "2975119",
    "end": "2983200"
  },
  {
    "text": "permission to view vulnerability reports and then instead of creating another",
    "start": "2983200",
    "end": "2990000"
  },
  {
    "text": "cluster role we could just annotate it with a special",
    "start": "2990000",
    "end": "2996079"
  },
  {
    "text": "label so we can label it with a uh [Music] with the uh just a sec",
    "start": "2996559",
    "end": "3005280"
  },
  {
    "text": "i just want to show you how it is triggered yeah so aggregate to view equals two it's in the",
    "start": "3005280",
    "end": "3010960"
  },
  {
    "text": "middle of there yeah exactly that's the magic so uh so we have to label the view vulnerabilities uh",
    "start": "3010960",
    "end": "3017520"
  },
  {
    "text": "cluster role with the rbac aggregate to view through view as you remember this is a built-in cluster",
    "start": "3017520",
    "end": "3023839"
  },
  {
    "text": "and then it is picked up by the controller which is running in a control plane and it is extending the set of",
    "start": "3023839",
    "end": "3030240"
  },
  {
    "text": "permissions of the building view cluster role we can prove that by describing the cluster",
    "start": "3030240",
    "end": "3037040"
  },
  {
    "text": "role as you can see here now we are eligible to list vulnerability reports",
    "start": "3037040",
    "end": "3042480"
  },
  {
    "text": "if we try again we should get the empty list of vulnerability reports",
    "start": "3042480",
    "end": "3047599"
  },
  {
    "text": "there there are no resources but because we haven't created any instance of a vulnerability report but still",
    "start": "3047599",
    "end": "3053760"
  },
  {
    "text": "we were allowed to do that and also something with eran said this",
    "start": "3053760",
    "end": "3060079"
  },
  {
    "text": "is cool feature but when you use who can plugin to",
    "start": "3060079",
    "end": "3065200"
  },
  {
    "text": "troubleshoot why we have this permission it will show you that it was granted through the cluster world view",
    "start": "3065200",
    "end": "3071119"
  },
  {
    "text": "right it doesn't show you this magic related to annotations etc maybe we can extend uh",
    "start": "3071119",
    "end": "3077599"
  },
  {
    "text": "this tool to include this information but uh it's pretty hard to troubleshoot uh so use it uh consciously",
    "start": "3077599",
    "end": "3085520"
  },
  {
    "text": "and i think with that uh yeah that was a demo that was a great demo daniel um we have",
    "start": "3085520",
    "end": "3092480"
  },
  {
    "start": "3087000",
    "end": "3387000"
  },
  {
    "text": "some questions uh actually um so let's uh i'll try to uh go through them quickly",
    "start": "3092480",
    "end": "3100160"
  },
  {
    "text": "uh and if you have more guys or girls or whoever feel free to uh to send them",
    "start": "3100160",
    "end": "3106079"
  },
  {
    "text": "through the q a um so uh the first one is um on the audit log when it is",
    "start": "3106079",
    "end": "3113119"
  },
  {
    "text": "successful if you get access from multiple access paths uh which one do you see in the",
    "start": "3113119",
    "end": "3118400"
  },
  {
    "text": "record do you want to take that one we actually discussed it yesterday i think yeah we discussed it yesterday and with",
    "start": "3118400",
    "end": "3124960"
  },
  {
    "text": "full honesty i haven't checked but i believe that they will be concatenated because i think uh as erin said when you create a set of",
    "start": "3124960",
    "end": "3132559"
  },
  {
    "text": "permissions for example when you create a role or a cluster role it is not validated by kubernetes this",
    "start": "3132559",
    "end": "3139680"
  },
  {
    "text": "works like that by design so you could create a you know binding to the non-existing",
    "start": "3139680",
    "end": "3147040"
  },
  {
    "text": "service account right because you're supposed to create it later on and that's why",
    "start": "3147040",
    "end": "3152319"
  },
  {
    "text": "i believe that the audit log will show all bindings that give you this",
    "start": "3152319",
    "end": "3157760"
  },
  {
    "text": "permission exactly so it's basically it's basically it's the same way that all arbuck",
    "start": "3157760",
    "end": "3163520"
  },
  {
    "text": "systems work it doesn't know which role actually is the effective because effectively all of them are effective",
    "start": "3163520",
    "end": "3170640"
  },
  {
    "text": "um so that one is uh it's a tricky question but the answer is",
    "start": "3170640",
    "end": "3176720"
  },
  {
    "text": "is unfortunately not very helpful uh in i mean from the kubernetes side um",
    "start": "3176720",
    "end": "3182720"
  },
  {
    "text": "so um another one is um how do how can i get and install the",
    "start": "3182720",
    "end": "3188800"
  },
  {
    "text": "who can plugin that's actually very much for you uh",
    "start": "3188800",
    "end": "3193839"
  },
  {
    "text": "yeah so who can plug in you could go to the aqua security github namespace and we have a cubecontrol",
    "start": "3193839",
    "end": "3200480"
  },
  {
    "text": "who can repository you could install it from sources but",
    "start": "3200480",
    "end": "3206000"
  },
  {
    "text": "the easier way is to install a crew crew is like brew for mac os",
    "start": "3206000",
    "end": "3211040"
  },
  {
    "text": "it's a package manager for installing various cube control plugins this index is growing",
    "start": "3211040",
    "end": "3216319"
  },
  {
    "text": "it has the search capability so we can find the hook and plugin if you search the index for our back uh keyword",
    "start": "3216319",
    "end": "3224640"
  },
  {
    "text": "and then with crew you can just uh run the cube cube control crew install",
    "start": "3224640",
    "end": "3230480"
  },
  {
    "text": "who can command so that's the easiest way",
    "start": "3230480",
    "end": "3235520"
  },
  {
    "text": "um awesome the last question i i'll take it it's uh can you get reports on all the access data",
    "start": "3235520",
    "end": "3240880"
  },
  {
    "text": "um so so basically um everything we saw here uh was around uh how do you investigate",
    "start": "3240880",
    "end": "3248160"
  },
  {
    "text": "a very specific uh problem or troubleshooting that you have someone that cannot access or if someone",
    "start": "3248160",
    "end": "3253839"
  },
  {
    "text": "have two has too much access but it's not looking at the broad picture so for example if i have this role and",
    "start": "3253839",
    "end": "3260079"
  },
  {
    "text": "what can it actually do or if i have uh different uh",
    "start": "3260079",
    "end": "3265680"
  },
  {
    "text": "different levels of access and i'm not sure which one is effective so that kind of thing is very hard to to",
    "start": "3265680",
    "end": "3271440"
  },
  {
    "text": "do with the uh off can i or with the who can they're more specific to",
    "start": "3271440",
    "end": "3276480"
  },
  {
    "text": "troubleshooting for something which is pinpointed uh you have uh different solutions a policy for",
    "start": "3276480",
    "end": "3281839"
  },
  {
    "text": "example is one of them that allows you to do stuff like that you get you get the full",
    "start": "3281839",
    "end": "3288079"
  },
  {
    "text": "picture of access including direct and indirect data and all of it uh comes uh in a very very",
    "start": "3288079",
    "end": "3294799"
  },
  {
    "text": "simple and searchable way",
    "start": "3294799",
    "end": "3299440"
  },
  {
    "text": "so yeah and if i could if i could add to that and something that i would like to rephrase is that anan said that we have",
    "start": "3300160",
    "end": "3307280"
  },
  {
    "text": "different types of subjects we have users we have groups and we have service accounts and only service account is stored in a",
    "start": "3307280",
    "end": "3313839"
  },
  {
    "text": "kubernetes as an object the users and groups are coming from the authorization",
    "start": "3313839",
    "end": "3320160"
  },
  {
    "text": "provider authorization planning plugin as you saw in the demo it can come from the certificate some field in the",
    "start": "3320160",
    "end": "3325839"
  },
  {
    "text": "certificate it can come from a scope of the jwt token but the thing is that",
    "start": "3325839",
    "end": "3333040"
  },
  {
    "text": "kubernetes doesn't have all this information stored in a cd",
    "start": "3333040",
    "end": "3338079"
  },
  {
    "text": "and accessible through the kubernetes api so that's why uh keep control out can i or who can fall",
    "start": "3338079",
    "end": "3344559"
  },
  {
    "text": "short if this information is not visible you need something more which gives you like an",
    "start": "3344559",
    "end": "3349839"
  },
  {
    "text": "overview of all the our back set and that's the biggest challenge so far uh",
    "start": "3349839",
    "end": "3354880"
  },
  {
    "text": "i think i agree that's awesome we're actually at the top of the hour",
    "start": "3354880",
    "end": "3362640"
  },
  {
    "text": "so if there are no more questions um i think we can uh the the webinar",
    "start": "3362640",
    "end": "3370160"
  },
  {
    "text": "recording and slides and also the the demo script will be online later today",
    "start": "3370160",
    "end": "3376240"
  },
  {
    "text": "and we're looking forward to seeing you at a future cncf webinar have a great day",
    "start": "3376240",
    "end": "3383200"
  },
  {
    "text": "thank you everyone",
    "start": "3383920",
    "end": "3389680"
  }
]