[
  {
    "text": "um hello everyone uh thanks for",
    "start": "280",
    "end": "2000"
  },
  {
    "text": "attending our talk Dr and Cubo I'm Von",
    "start": "2000",
    "end": "5560"
  },
  {
    "text": "sear joined by Al Patel we are both",
    "start": "5560",
    "end": "8880"
  },
  {
    "text": "senior software engineers at Nvidia uh",
    "start": "8880",
    "end": "11880"
  },
  {
    "text": "working for the GeForce now Cloud",
    "start": "11880",
    "end": "13960"
  },
  {
    "text": "infrastructure team so today we're going",
    "start": "13960",
    "end": "17000"
  },
  {
    "text": "to talk about how uh we at G4 snowcloud",
    "start": "17000",
    "end": "21320"
  },
  {
    "text": "have been using Cube word along with",
    "start": "21320",
    "end": "24279"
  },
  {
    "text": "Device plugins to run uh GPU powered",
    "start": "24279",
    "end": "27720"
  },
  {
    "text": "virtual machines so we will discuss some",
    "start": "27720",
    "end": "31240"
  },
  {
    "text": "of the limitations we have seen with the",
    "start": "31240",
    "end": "34559"
  },
  {
    "text": "DP framework uh we'll give a brief intro",
    "start": "34559",
    "end": "38320"
  },
  {
    "text": "to Dr uh Dynamic resource allocation and",
    "start": "38320",
    "end": "42760"
  },
  {
    "text": "how it solves the problems that we have",
    "start": "42760",
    "end": "45399"
  },
  {
    "text": "faced with uh DPS and finally uh we'll",
    "start": "45399",
    "end": "50039"
  },
  {
    "text": "talk about how cuboard can benefit from",
    "start": "50039",
    "end": "53719"
  },
  {
    "text": "moving to Dr and some technical details",
    "start": "53719",
    "end": "57399"
  },
  {
    "text": "of how it can be achieved",
    "start": "57399",
    "end": "60280"
  },
  {
    "text": "this talk is a proposal on how cird can",
    "start": "60280",
    "end": "64119"
  },
  {
    "text": "consume Dr and how we envision it",
    "start": "64119",
    "end": "67159"
  },
  {
    "text": "Downstream on our GeForce now Cloud so",
    "start": "67159",
    "end": "70840"
  },
  {
    "text": "keep in mind that Dr is still an alpha",
    "start": "70840",
    "end": "73479"
  },
  {
    "text": "feature as of kuties 130 and it's",
    "start": "73479",
    "end": "77080"
  },
  {
    "text": "expected to move to Beta and 132 so",
    "start": "77080",
    "end": "80040"
  },
  {
    "text": "there's a lot of churn and Dr uh that's",
    "start": "80040",
    "end": "82840"
  },
  {
    "text": "still happening and U when we do an",
    "start": "82840",
    "end": "85960"
  },
  {
    "text": "early adoption we do plan to keep that",
    "start": "85960",
    "end": "88439"
  },
  {
    "text": "in mind um so with that introduction",
    "start": "88439",
    "end": "91640"
  },
  {
    "text": "let's Del into the topic U so at at",
    "start": "91640",
    "end": "97000"
  },
  {
    "text": "GeForce now Cloud we have two primary",
    "start": "97000",
    "end": "100079"
  },
  {
    "text": "use cases for running VMS in our cluster",
    "start": "100079",
    "end": "104240"
  },
  {
    "text": "like the first one is to like run a VM",
    "start": "104240",
    "end": "106759"
  },
  {
    "text": "with a full GPU so the VM gets uh direct",
    "start": "106759",
    "end": "111040"
  },
  {
    "text": "access to the GPU while is B to the vfi",
    "start": "111040",
    "end": "114079"
  },
  {
    "text": "your driver uh this gives us maximum",
    "start": "114079",
    "end": "117200"
  },
  {
    "text": "performance uh for our virtual machine",
    "start": "117200",
    "end": "120600"
  },
  {
    "text": "and then our Second Use case is to be",
    "start": "120600",
    "end": "124119"
  },
  {
    "text": "able to create VMS with virtual gpus so",
    "start": "124119",
    "end": "128679"
  },
  {
    "text": "uh virtual gpus allow uh multiple VMS to",
    "start": "128679",
    "end": "132959"
  },
  {
    "text": "have simultaneous direct access to the",
    "start": "132959",
    "end": "135959"
  },
  {
    "text": "physical GPU so this allows us to run",
    "start": "135959",
    "end": "139000"
  },
  {
    "text": "more VMS on a node uh which is one or",
    "start": "139000",
    "end": "142280"
  },
  {
    "text": "two",
    "start": "142280",
    "end": "143000"
  },
  {
    "text": "gpus um at the same time so for each",
    "start": "143000",
    "end": "147599"
  },
  {
    "text": "virtual GPU we create what's called",
    "start": "147599",
    "end": "149920"
  },
  {
    "text": "called a mediated device that is passed",
    "start": "149920",
    "end": "152519"
  },
  {
    "text": "to the guest through the report domain",
    "start": "152519",
    "end": "155599"
  },
  {
    "text": "so the guest kernel treats these devices",
    "start": "155599",
    "end": "158160"
  },
  {
    "text": "as if it has a direct access to a",
    "start": "158160",
    "end": "160560"
  },
  {
    "text": "physical",
    "start": "160560",
    "end": "161480"
  },
  {
    "text": "GPU um and so yeah it thinks it's",
    "start": "161480",
    "end": "165000"
  },
  {
    "text": "working with a whole GPU while uh we",
    "start": "165000",
    "end": "168319"
  },
  {
    "text": "carve it out into virtual gpus now there",
    "start": "168319",
    "end": "172239"
  },
  {
    "text": "are different uh vgpu classes that uh",
    "start": "172239",
    "end": "176400"
  },
  {
    "text": "GPU can be sliced into so popularly we",
    "start": "176400",
    "end": "179480"
  },
  {
    "text": "use What's called the 2 is to one and",
    "start": "179480",
    "end": "182080"
  },
  {
    "text": "the 4S to1 vgpu classes uh which are GPU",
    "start": "182080",
    "end": "186200"
  },
  {
    "text": "sliced into two and four virtual gpus",
    "start": "186200",
    "end": "191959"
  },
  {
    "text": "respectively so uh we achieve these use",
    "start": "192000",
    "end": "196680"
  },
  {
    "text": "cases using the DP framework uh in",
    "start": "196680",
    "end": "201000"
  },
  {
    "text": "kubernetes so U for each GPU type uh",
    "start": "201000",
    "end": "206400"
  },
  {
    "text": "that we talked about in our use case we",
    "start": "206400",
    "end": "209200"
  },
  {
    "text": "have created a separate device plugin U",
    "start": "209200",
    "end": "212720"
  },
  {
    "text": "that uh so that we advertise one pass",
    "start": "212720",
    "end": "216360"
  },
  {
    "text": "through GPU uh two uh 2 to one vgpus and",
    "start": "216360",
    "end": "222120"
  },
  {
    "text": "four 4S to one vgpus and so we have a",
    "start": "222120",
    "end": "225239"
  },
  {
    "text": "separate plugin that manages U each of",
    "start": "225239",
    "end": "228920"
  },
  {
    "text": "these uh devices",
    "start": "228920",
    "end": "231879"
  },
  {
    "text": "individually so given a VMI spec like",
    "start": "231879",
    "end": "235599"
  },
  {
    "text": "the one we have on the left here um we",
    "start": "235599",
    "end": "239519"
  },
  {
    "text": "uh",
    "start": "239519",
    "end": "240319"
  },
  {
    "text": "we pass in a device name U which is uh",
    "start": "240319",
    "end": "244680"
  },
  {
    "text": "which is the device that we advertise",
    "start": "244680",
    "end": "246879"
  },
  {
    "text": "from our plug-in uh so when we have this",
    "start": "246879",
    "end": "251959"
  },
  {
    "text": "uh word controller will translate this",
    "start": "251959",
    "end": "254560"
  },
  {
    "text": "to a podspec where it puts this device",
    "start": "254560",
    "end": "257680"
  },
  {
    "text": "name and account uh to the resource",
    "start": "257680",
    "end": "261000"
  },
  {
    "text": "request in the part and um and then the",
    "start": "261000",
    "end": "265720"
  },
  {
    "text": "scheduler will schedule this pod onto a",
    "start": "265720",
    "end": "267880"
  },
  {
    "text": "note in the cluster uh um so the cuet on",
    "start": "267880",
    "end": "271280"
  },
  {
    "text": "the Node when it sees to spot it will",
    "start": "271280",
    "end": "274440"
  },
  {
    "text": "send an allocate request uh for the GPU",
    "start": "274440",
    "end": "278199"
  },
  {
    "text": "device requested uh to the device plugin",
    "start": "278199",
    "end": "282320"
  },
  {
    "text": "uh to the corresponding device plugin uh",
    "start": "282320",
    "end": "284919"
  },
  {
    "text": "in this case uh let's say it's a pass",
    "start": "284919",
    "end": "287280"
  },
  {
    "text": "through GPU so we'll send it to our pass",
    "start": "287280",
    "end": "289840"
  },
  {
    "text": "through GPU plugin U and then the plugin",
    "start": "289840",
    "end": "294600"
  },
  {
    "text": "is responsible for um",
    "start": "294600",
    "end": "298639"
  },
  {
    "text": "for putting that GPU in the vfi driver",
    "start": "298639",
    "end": "303199"
  },
  {
    "text": "and passing it back to cuet uh to create",
    "start": "303199",
    "end": "306639"
  },
  {
    "text": "the",
    "start": "306639",
    "end": "307520"
  },
  {
    "text": "part so the Pod once it comes up sees",
    "start": "307520",
    "end": "310880"
  },
  {
    "text": "this GPU uh through an environment",
    "start": "310880",
    "end": "313759"
  },
  {
    "text": "variable and then it passes it along to",
    "start": "313759",
    "end": "316360"
  },
  {
    "text": "the guest",
    "start": "316360",
    "end": "318520"
  },
  {
    "text": "V can you go to the next",
    "start": "318520",
    "end": "322400"
  },
  {
    "text": "slide so uh so our so yeah I talked",
    "start": "323800",
    "end": "328400"
  },
  {
    "text": "about how uh we use DPS to cater to our",
    "start": "328400",
    "end": "332639"
  },
  {
    "text": "use cases but our biggest gripe with uh",
    "start": "332639",
    "end": "336680"
  },
  {
    "text": "with Device plugins is that for each GPU",
    "start": "336680",
    "end": "340479"
  },
  {
    "text": "type that we want to run VMS with uh it",
    "start": "340479",
    "end": "343840"
  },
  {
    "text": "needs its own device plugin registered",
    "start": "343840",
    "end": "346680"
  },
  {
    "text": "with cuet so it means that uh for the",
    "start": "346680",
    "end": "351960"
  },
  {
    "text": "same physical GPU uh we advertise",
    "start": "351960",
    "end": "355759"
  },
  {
    "text": "multiple different sets of devices to",
    "start": "355759",
    "end": "357639"
  },
  {
    "text": "the cluster and um the problem with all",
    "start": "357639",
    "end": "361520"
  },
  {
    "text": "this is that all these different plugins",
    "start": "361520",
    "end": "364400"
  },
  {
    "text": "need to coordinate between each other uh",
    "start": "364400",
    "end": "367240"
  },
  {
    "text": "so that during allocation the physical",
    "start": "367240",
    "end": "371120"
  },
  {
    "text": "GPU can be served by only one plugin at",
    "start": "371120",
    "end": "373800"
  },
  {
    "text": "a time so when we have a pass through",
    "start": "373800",
    "end": "376479"
  },
  {
    "text": "GPU allocated we cannot uh we cannot",
    "start": "376479",
    "end": "379479"
  },
  {
    "text": "slice it into GPU",
    "start": "379479",
    "end": "381880"
  },
  {
    "text": "vgpus and uh no other plugin can work",
    "start": "381880",
    "end": "385560"
  },
  {
    "text": "with that pH physical",
    "start": "385560",
    "end": "388199"
  },
  {
    "text": "GPU now",
    "start": "388199",
    "end": "390240"
  },
  {
    "text": "uh the next problem we have is that the",
    "start": "390240",
    "end": "392800"
  },
  {
    "text": "device plug-in framework does not have a",
    "start": "392800",
    "end": "394639"
  },
  {
    "text": "delate API so for reference have posted",
    "start": "394639",
    "end": "399039"
  },
  {
    "text": "the whole uh DP spec on the right uh so",
    "start": "399039",
    "end": "403680"
  },
  {
    "text": "I talked about how uh the plugins need",
    "start": "403680",
    "end": "406759"
  },
  {
    "text": "to coordinate with each other during",
    "start": "406759",
    "end": "409199"
  },
  {
    "text": "allocation uh so the same holds for when",
    "start": "409199",
    "end": "412639"
  },
  {
    "text": "a VM is destroyed and the GPU needs to",
    "start": "412639",
    "end": "415240"
  },
  {
    "text": "be freed up um so we currently don't",
    "start": "415240",
    "end": "418319"
  },
  {
    "text": "have a mechanism to inform the device",
    "start": "418319",
    "end": "420960"
  },
  {
    "text": "plugins that the GPU is freed up and",
    "start": "420960",
    "end": "424479"
  },
  {
    "text": "that uh they can now reset their states",
    "start": "424479",
    "end": "427440"
  },
  {
    "text": "uh and all plugins can manage that",
    "start": "427440",
    "end": "431400"
  },
  {
    "text": "GPU so the next issue we have is that uh",
    "start": "431400",
    "end": "436400"
  },
  {
    "text": "the device plugins they currently only",
    "start": "436400",
    "end": "438440"
  },
  {
    "text": "work at the node level uh it's a it's a",
    "start": "438440",
    "end": "442479"
  },
  {
    "text": "plugin that runs alongside",
    "start": "442479",
    "end": "445199"
  },
  {
    "text": "cuet uh but currently there is no",
    "start": "445199",
    "end": "448400"
  },
  {
    "text": "cluster level compon component to manage",
    "start": "448400",
    "end": "451360"
  },
  {
    "text": "the state generated by these device",
    "start": "451360",
    "end": "454199"
  },
  {
    "text": "plugins and this can lead to races with",
    "start": "454199",
    "end": "458599"
  },
  {
    "text": "uh other cluster level components uh",
    "start": "458599",
    "end": "461639"
  },
  {
    "text": "primarily the",
    "start": "461639",
    "end": "463199"
  },
  {
    "text": "Schuler so when auler schedules a pod",
    "start": "463199",
    "end": "467000"
  },
  {
    "text": "onto the node um and until the Pod goes",
    "start": "467000",
    "end": "470840"
  },
  {
    "text": "through cuet admission where the",
    "start": "470840",
    "end": "474400"
  },
  {
    "text": "requested GPU is",
    "start": "474400",
    "end": "476120"
  },
  {
    "text": "allocated and uh the different",
    "start": "476120",
    "end": "480039"
  },
  {
    "text": "update what they advertise so the",
    "start": "480039",
    "end": "482879"
  },
  {
    "text": "scheduler will continue to see stale",
    "start": "482879",
    "end": "484960"
  },
  {
    "text": "inventory on the Node and uh if new pods",
    "start": "484960",
    "end": "488199"
  },
  {
    "text": "are created like before before this",
    "start": "488199",
    "end": "491960"
  },
  {
    "text": "state is updated then uh yeah SCH can",
    "start": "491960",
    "end": "495479"
  },
  {
    "text": "make a lot of uninformed decisions which",
    "start": "495479",
    "end": "498199"
  },
  {
    "text": "can lead to",
    "start": "498199",
    "end": "499280"
  },
  {
    "text": "unsuccessful uh for",
    "start": "499280",
    "end": "502560"
  },
  {
    "text": "admissions the next there are a couple",
    "start": "502560",
    "end": "505960"
  },
  {
    "text": "of other issues that we have seen uh one",
    "start": "505960",
    "end": "510280"
  },
  {
    "text": "scale is impacted when we operate with",
    "start": "510280",
    "end": "513240"
  },
  {
    "text": "this DP framework uh so essentially the",
    "start": "513240",
    "end": "516479"
  },
  {
    "text": "device plugin gets invoked as part of",
    "start": "516479",
    "end": "519159"
  },
  {
    "text": "cubet spoted mission uh but let's say",
    "start": "519159",
    "end": "522719"
  },
  {
    "text": "you have a large node with 8 gpus and",
    "start": "522719",
    "end": "526160"
  },
  {
    "text": "you want to run 16 VMS uh with the two",
    "start": "526160",
    "end": "530120"
  },
  {
    "text": "to one uh vgpu class gpus uh at the same",
    "start": "530120",
    "end": "534080"
  },
  {
    "text": "time then you need to wait for like all",
    "start": "534080",
    "end": "538880"
  },
  {
    "text": "uh 50 15 of these VMS to actually have",
    "start": "538880",
    "end": "542640"
  },
  {
    "text": "the gpus allocated before the 16th VM",
    "start": "542640",
    "end": "547079"
  },
  {
    "text": "gets its GPU allocated and then it can",
    "start": "547079",
    "end": "550200"
  },
  {
    "text": "go running uh so this takes up a lot of",
    "start": "550200",
    "end": "553360"
  },
  {
    "text": "time uh as you wait for all 16 of your",
    "start": "553360",
    "end": "556480"
  },
  {
    "text": "VMS to start",
    "start": "556480",
    "end": "559399"
  },
  {
    "text": "running so now I want to talk about some",
    "start": "559480",
    "end": "563200"
  },
  {
    "text": "of the exciting stuff uh which is Dr and",
    "start": "563200",
    "end": "566800"
  },
  {
    "text": "how Dr can help help me solve all these",
    "start": "566800",
    "end": "570240"
  },
  {
    "text": "problems so what is the aray uh it's a",
    "start": "570240",
    "end": "574640"
  },
  {
    "text": "new framework for vendors to provide",
    "start": "574640",
    "end": "577959"
  },
  {
    "text": "support for uh node level uh devices",
    "start": "577959",
    "end": "582240"
  },
  {
    "text": "like gpus or network",
    "start": "582240",
    "end": "584959"
  },
  {
    "text": "accelerators so this is meant to replace",
    "start": "584959",
    "end": "587760"
  },
  {
    "text": "the old and problematic uh device",
    "start": "587760",
    "end": "590440"
  },
  {
    "text": "plug-in framework which cannot support a",
    "start": "590440",
    "end": "593200"
  },
  {
    "text": "lot of our modern use cases we have for",
    "start": "593200",
    "end": "596000"
  },
  {
    "text": "running gpus uh on kubernetes",
    "start": "596000",
    "end": "599560"
  },
  {
    "text": "um so uh Dr driver it consists of a node",
    "start": "599560",
    "end": "604399"
  },
  {
    "text": "level cubet plugin and uh cluster level",
    "start": "604399",
    "end": "608760"
  },
  {
    "text": "uh vendor specific controller uh so in",
    "start": "608760",
    "end": "612320"
  },
  {
    "text": "kubernetes 130 the core kubernetes comes",
    "start": "612320",
    "end": "616800"
  },
  {
    "text": "with a built-in controller that manages",
    "start": "616800",
    "end": "620600"
  },
  {
    "text": "vendor Dr resources uh at cluster level",
    "start": "620600",
    "end": "623760"
  },
  {
    "text": "for us so straight out of the box",
    "start": "623760",
    "end": "626079"
  },
  {
    "text": "kubernetes can manage uh the Dr",
    "start": "626079",
    "end": "629519"
  },
  {
    "text": "resources at the cluster",
    "start": "629519",
    "end": "631839"
  },
  {
    "text": "level um so what does each of these do",
    "start": "631839",
    "end": "636200"
  },
  {
    "text": "uh so the cuet plugin it publishes the",
    "start": "636200",
    "end": "640079"
  },
  {
    "text": "devices that it's advertising uh in the",
    "start": "640079",
    "end": "642880"
  },
  {
    "text": "form of a resource slice object uh and",
    "start": "642880",
    "end": "647680"
  },
  {
    "text": "this object is stored uh directly on the",
    "start": "647680",
    "end": "650399"
  },
  {
    "text": "API server the API server communicates",
    "start": "650399",
    "end": "653720"
  },
  {
    "text": "with uh cuet and it it manages this",
    "start": "653720",
    "end": "658360"
  },
  {
    "text": "resource",
    "start": "658360",
    "end": "660600"
  },
  {
    "text": "now uh when a user wants to consume a",
    "start": "660600",
    "end": "663040"
  },
  {
    "text": "GPU they create what's called a resource",
    "start": "663040",
    "end": "666279"
  },
  {
    "text": "claim uh this is very similar to a PV",
    "start": "666279",
    "end": "670800"
  },
  {
    "text": "claim uh that you have for volumes and",
    "start": "670800",
    "end": "674680"
  },
  {
    "text": "uh this resource claim it includes how",
    "start": "674680",
    "end": "677480"
  },
  {
    "text": "many devices you want and what",
    "start": "677480",
    "end": "680519"
  },
  {
    "text": "capability or configuration your GPU",
    "start": "680519",
    "end": "683360"
  },
  {
    "text": "needs to be in um so the once a resource",
    "start": "683360",
    "end": "687600"
  },
  {
    "text": "claims created and",
    "start": "687600",
    "end": "689800"
  },
  {
    "text": "uh part is requested to be created the",
    "start": "689800",
    "end": "692839"
  },
  {
    "text": "kubernetes Schuler can uh evaluate",
    "start": "692839",
    "end": "696079"
  },
  {
    "text": "against the resource slices of all the",
    "start": "696079",
    "end": "698560"
  },
  {
    "text": "nodes in the cluster and can make an",
    "start": "698560",
    "end": "701079"
  },
  {
    "text": "informed decision which node to schedule",
    "start": "701079",
    "end": "704399"
  },
  {
    "text": "on also before it actually schedules the",
    "start": "704399",
    "end": "707560"
  },
  {
    "text": "Pod it will also update the resource",
    "start": "707560",
    "end": "710480"
  },
  {
    "text": "slice object uh for the node it picked",
    "start": "710480",
    "end": "715120"
  },
  {
    "text": "with the device that it allocated so",
    "start": "715120",
    "end": "718839"
  },
  {
    "text": "that uh uh any future scheduling",
    "start": "718839",
    "end": "722600"
  },
  {
    "text": "decisions will have to make uh works",
    "start": "722600",
    "end": "725000"
  },
  {
    "text": "with this updated",
    "start": "725000",
    "end": "728839"
  },
  {
    "text": "object next I want to talk about how Dr",
    "start": "729480",
    "end": "734040"
  },
  {
    "text": "solves the issues that I talked about",
    "start": "734040",
    "end": "737639"
  },
  {
    "text": "with the device plug-in",
    "start": "737639",
    "end": "739880"
  },
  {
    "text": "framework um so Dr drivers they manage",
    "start": "739880",
    "end": "745639"
  },
  {
    "text": "uh physical gpus as a whole and it",
    "start": "745639",
    "end": "748800"
  },
  {
    "text": "provide very prescriptive apis for how",
    "start": "748800",
    "end": "752199"
  },
  {
    "text": "your GPU needs to be configured uh so",
    "start": "752199",
    "end": "755440"
  },
  {
    "text": "that this eliminates the need for uh",
    "start": "755440",
    "end": "759160"
  },
  {
    "text": "having multiple plugins coordinating",
    "start": "759160",
    "end": "762040"
  },
  {
    "text": "between each other for the same physical",
    "start": "762040",
    "end": "764839"
  },
  {
    "text": "GPU um so the a single driver will",
    "start": "764839",
    "end": "768399"
  },
  {
    "text": "manage your GPU and uh whatever state",
    "start": "768399",
    "end": "771480"
  },
  {
    "text": "you want your GPU to be in is part of",
    "start": "771480",
    "end": "774040"
  },
  {
    "text": "your resource claim uh",
    "start": "774040",
    "end": "776720"
  },
  {
    "text": "request the next uh to the Dr framework",
    "start": "776720",
    "end": "780480"
  },
  {
    "text": "now it has a delate API and this API",
    "start": "780480",
    "end": "784320"
  },
  {
    "text": "gets invoked whenever resource claim is",
    "start": "784320",
    "end": "787440"
  },
  {
    "text": "deleted U so when the resource claim",
    "start": "787440",
    "end": "790680"
  },
  {
    "text": "goes away the resource s object uh on",
    "start": "790680",
    "end": "795440"
  },
  {
    "text": "the aps server would be updated and then",
    "start": "795440",
    "end": "798040"
  },
  {
    "text": "the scheduler will now U see the new",
    "start": "798040",
    "end": "800800"
  },
  {
    "text": "state before it makes uh new",
    "start": "800800",
    "end": "804880"
  },
  {
    "text": "decisions and yeah finally the scheduler",
    "start": "804880",
    "end": "808000"
  },
  {
    "text": "it always re refreshes its model uh",
    "start": "808000",
    "end": "811360"
  },
  {
    "text": "whenever a pod is created or deleted uh",
    "start": "811360",
    "end": "814480"
  },
  {
    "text": "using the allocate or deallocate apis um",
    "start": "814480",
    "end": "818720"
  },
  {
    "text": "to the central",
    "start": "818720",
    "end": "820120"
  },
  {
    "text": "controller and uh it uses this to make",
    "start": "820120",
    "end": "822959"
  },
  {
    "text": "its",
    "start": "822959",
    "end": "825240"
  },
  {
    "text": "decisions so now my colleague Al will",
    "start": "825360",
    "end": "828920"
  },
  {
    "text": "talk about how cubeb can benefit from Dr",
    "start": "828920",
    "end": "832680"
  },
  {
    "text": "and uh what its integration in keboard",
    "start": "832680",
    "end": "835920"
  },
  {
    "text": "uh looks like",
    "start": "835920",
    "end": "839399"
  },
  {
    "text": "introducing uh Concepts behind",
    "start": "840519",
    "end": "843160"
  },
  {
    "text": "the for the rest of this presentation",
    "start": "843160",
    "end": "846000"
  },
  {
    "text": "I'm going to be covering how a device",
    "start": "846000",
    "end": "848079"
  },
  {
    "text": "managed by Dr plugins can be used within",
    "start": "848079",
    "end": "850959"
  },
  {
    "text": "a cube word",
    "start": "850959",
    "end": "853600"
  },
  {
    "text": "VMI there are two main pieces of",
    "start": "854079",
    "end": "856519"
  },
  {
    "text": "orchestration involved here first",
    "start": "856519",
    "end": "859000"
  },
  {
    "text": "getting the devices to the B launcher",
    "start": "859000",
    "end": "861000"
  },
  {
    "text": "pod and second passing the devices from",
    "start": "861000",
    "end": "863839"
  },
  {
    "text": "word launcher to K KVM guest process the",
    "start": "863839",
    "end": "867480"
  },
  {
    "text": "first problem will will be handled by",
    "start": "867480",
    "end": "869920"
  },
  {
    "text": "the Kates Dr plugin um in the upcoming",
    "start": "869920",
    "end": "873320"
  },
  {
    "text": "slides I will be talking about the API",
    "start": "873320",
    "end": "875800"
  },
  {
    "text": "changes required to achieve this how",
    "start": "875800",
    "end": "878079"
  },
  {
    "text": "word launcher pod gets the device via",
    "start": "878079",
    "end": "880680"
  },
  {
    "text": "the KD plugin and finally we'll be",
    "start": "880680",
    "end": "883240"
  },
  {
    "text": "covering a couple of proposed approaches",
    "start": "883240",
    "end": "885600"
  },
  {
    "text": "to pass the device from work launcher",
    "start": "885600",
    "end": "887480"
  },
  {
    "text": "port to the K KVM guest",
    "start": "887480",
    "end": "891360"
  },
  {
    "text": "process let's quickly look at the API",
    "start": "891519",
    "end": "894399"
  },
  {
    "text": "changes needed to make this work the",
    "start": "894399",
    "end": "896839"
  },
  {
    "text": "picture on the left is picture on the",
    "start": "896839",
    "end": "899959"
  },
  {
    "text": "left of the screen is a VMI spec with",
    "start": "899959",
    "end": "902720"
  },
  {
    "text": "the needed API changes the first is the",
    "start": "902720",
    "end": "905880"
  },
  {
    "text": "red box which is a field under VMI spec",
    "start": "905880",
    "end": "909800"
  },
  {
    "text": "called resource",
    "start": "909800",
    "end": "911320"
  },
  {
    "text": "claims it is a list of resource claims",
    "start": "911320",
    "end": "914680"
  },
  {
    "text": "that this VMI is requesting with a name",
    "start": "914680",
    "end": "918120"
  },
  {
    "text": "and a source feed the name is just a",
    "start": "918120",
    "end": "921320"
  },
  {
    "text": "pointer used to refer the claim later in",
    "start": "921320",
    "end": "924360"
  },
  {
    "text": "the",
    "start": "924360",
    "end": "925920"
  },
  {
    "text": "spec the spec these spec fields will be",
    "start": "925920",
    "end": "929440"
  },
  {
    "text": "converted to word launcher pod spec by",
    "start": "929440",
    "end": "931720"
  },
  {
    "text": "the word controller when creating the",
    "start": "931720",
    "end": "935319"
  },
  {
    "text": "Pod further along in the blue box is the",
    "start": "935319",
    "end": "938600"
  },
  {
    "text": "claim being used by the",
    "start": "938600",
    "end": "940839"
  },
  {
    "text": "domain",
    "start": "940839",
    "end": "943160"
  },
  {
    "text": "oops there you can see that the claim",
    "start": "943160",
    "end": "945720"
  },
  {
    "text": "field with a reference pointer to the",
    "start": "945720",
    "end": "948079"
  },
  {
    "text": "resource claim and the name of the",
    "start": "948079",
    "end": "951519"
  },
  {
    "text": "device this field will be used to pass",
    "start": "951519",
    "end": "954160"
  },
  {
    "text": "the device from word launcher to the K",
    "start": "954160",
    "end": "956800"
  },
  {
    "text": "KVM guest process again the red box is",
    "start": "956800",
    "end": "959959"
  },
  {
    "text": "used to pass the device to the word",
    "start": "959959",
    "end": "962040"
  },
  {
    "text": "launcher pod the blue box is used to",
    "start": "962040",
    "end": "964600"
  },
  {
    "text": "pass the device from W launcher to kuk",
    "start": "964600",
    "end": "967279"
  },
  {
    "text": "kuk kbm guest",
    "start": "967279",
    "end": "970319"
  },
  {
    "text": "process let's dive um quickly um",
    "start": "972480",
    "end": "977759"
  },
  {
    "text": "into the first problem which is how the",
    "start": "977759",
    "end": "980880"
  },
  {
    "text": "device gets allocated to the W launcher",
    "start": "980880",
    "end": "983079"
  },
  {
    "text": "part so first the word controller",
    "start": "983079",
    "end": "985360"
  },
  {
    "text": "creates the part with a with a spec as",
    "start": "985360",
    "end": "988040"
  },
  {
    "text": "seen in the picture",
    "start": "988040",
    "end": "989560"
  },
  {
    "text": "picture notice how this spec um is",
    "start": "989560",
    "end": "993240"
  },
  {
    "text": "directly taken from the VMI spec as is",
    "start": "993240",
    "end": "997000"
  },
  {
    "text": "there is a resource claim list in the",
    "start": "997000",
    "end": "999199"
  },
  {
    "text": "port speec which refers to the actual",
    "start": "999199",
    "end": "1001560"
  },
  {
    "text": "resource claim on the left of the screen",
    "start": "1001560",
    "end": "1004279"
  },
  {
    "text": "this resource claim has the um",
    "start": "1004279",
    "end": "1006920"
  },
  {
    "text": "description of What GPU is required for",
    "start": "1006920",
    "end": "1009600"
  },
  {
    "text": "the um for the",
    "start": "1009600",
    "end": "1013279"
  },
  {
    "text": "VMI here are the steps that will be",
    "start": "1014040",
    "end": "1016759"
  },
  {
    "text": "executed by the kubernetes platform to",
    "start": "1016759",
    "end": "1019040"
  },
  {
    "text": "make this devices available to the",
    "start": "1019040",
    "end": "1021959"
  },
  {
    "text": "p as vun mentioned as as soon as the",
    "start": "1021959",
    "end": "1025798"
  },
  {
    "text": "driver",
    "start": "1025799",
    "end": "1026880"
  },
  {
    "text": "starts it the driver will register all",
    "start": "1026880",
    "end": "1030760"
  },
  {
    "text": "the available devices in the",
    "start": "1030760",
    "end": "1033600"
  },
  {
    "text": "API the API used here is the node",
    "start": "1033600",
    "end": "1036880"
  },
  {
    "text": "allocation State object notice two",
    "start": "1036880",
    "end": "1039959"
  },
  {
    "text": "things first the CD is owned by the Dr",
    "start": "1039959",
    "end": "1043480"
  },
  {
    "text": "driver and second the object is unique",
    "start": "1043480",
    "end": "1046520"
  },
  {
    "text": "for each node preferably named after",
    "start": "1046520",
    "end": "1048919"
  },
  {
    "text": "after the name of",
    "start": "1048919",
    "end": "1051720"
  },
  {
    "text": "the after this once the word launcher",
    "start": "1051720",
    "end": "1054640"
  },
  {
    "text": "pod is created with the resource claim",
    "start": "1054640",
    "end": "1057080"
  },
  {
    "text": "the Schuler looks for the nodes that can",
    "start": "1057080",
    "end": "1059679"
  },
  {
    "text": "satisfy the claim for the part and picks",
    "start": "1059679",
    "end": "1062080"
  },
  {
    "text": "a node once the Schuler picks a node the",
    "start": "1062080",
    "end": "1065760"
  },
  {
    "text": "device will be added added to the",
    "start": "1065760",
    "end": "1067840"
  },
  {
    "text": "allocated claims field in the node",
    "start": "1067840",
    "end": "1070640"
  },
  {
    "text": "allocation State",
    "start": "1070640",
    "end": "1073360"
  },
  {
    "text": "object now the Pod is ready to to land",
    "start": "1073360",
    "end": "1076480"
  },
  {
    "text": "on a node once the pod lens on the Node",
    "start": "1076480",
    "end": "1080640"
  },
  {
    "text": "the cubet calls node prepare resources",
    "start": "1080640",
    "end": "1083760"
  },
  {
    "text": "grpc call to make the device finally",
    "start": "1083760",
    "end": "1086880"
  },
  {
    "text": "ready for the port this is how the",
    "start": "1086880",
    "end": "1089559"
  },
  {
    "text": "device GPU for example can be accessed",
    "start": "1089559",
    "end": "1092919"
  },
  {
    "text": "in the word launcher",
    "start": "1092919",
    "end": "1095880"
  },
  {
    "text": "Port underneath the hoods what happens",
    "start": "1096880",
    "end": "1099799"
  },
  {
    "text": "is that once the driver has performed",
    "start": "1099799",
    "end": "1102000"
  },
  {
    "text": "the necessary operations to prepare the",
    "start": "1102000",
    "end": "1104080"
  },
  {
    "text": "device the driver generates generates a",
    "start": "1104080",
    "end": "1107159"
  },
  {
    "text": "Json file in the CDI spec form the",
    "start": "1107159",
    "end": "1110640"
  },
  {
    "text": "picture on the left is an example of the",
    "start": "1110640",
    "end": "1113039"
  },
  {
    "text": "Json file generated by a driver with CDI",
    "start": "1113039",
    "end": "1116400"
  },
  {
    "text": "spec CDI stands for container device",
    "start": "1116400",
    "end": "1119559"
  },
  {
    "text": "interface it is a new standard being",
    "start": "1119559",
    "end": "1121880"
  },
  {
    "text": "developed that describes a mechanism for",
    "start": "1121880",
    "end": "1124280"
  },
  {
    "text": "container run times to create containers",
    "start": "1124280",
    "end": "1126960"
  },
  {
    "text": "which are able to interact with",
    "start": "1126960",
    "end": "1129039"
  },
  {
    "text": "third-party",
    "start": "1129039",
    "end": "1130640"
  },
  {
    "text": "devices it is similar to cni or CSI for",
    "start": "1130640",
    "end": "1134880"
  },
  {
    "text": "those who are familiar with the cncf",
    "start": "1134880",
    "end": "1137559"
  },
  {
    "text": "landscape",
    "start": "1137559",
    "end": "1140559"
  },
  {
    "text": "once this file is generated the file has",
    "start": "1142760",
    "end": "1145400"
  },
  {
    "text": "all the necessary information needed by",
    "start": "1145400",
    "end": "1147600"
  },
  {
    "text": "the container runtime to give container",
    "start": "1147600",
    "end": "1150080"
  },
  {
    "text": "access to the device briefly glancing at",
    "start": "1150080",
    "end": "1154200"
  },
  {
    "text": "the CDI spec there are details like",
    "start": "1154200",
    "end": "1156880"
  },
  {
    "text": "vendor name in the kind field as well as",
    "start": "1156880",
    "end": "1160520"
  },
  {
    "text": "a list of",
    "start": "1160520",
    "end": "1162240"
  },
  {
    "text": "devices within the within each device",
    "start": "1162240",
    "end": "1165520"
  },
  {
    "text": "there are Fields like name and container",
    "start": "1165520",
    "end": "1168120"
  },
  {
    "text": "edits",
    "start": "1168120",
    "end": "1169400"
  },
  {
    "text": "the container edit section Has a Field",
    "start": "1169400",
    "end": "1171720"
  },
  {
    "text": "where driver can specify custom",
    "start": "1171720",
    "end": "1174120"
  },
  {
    "text": "environment variables um for the",
    "start": "1174120",
    "end": "1176159"
  },
  {
    "text": "container for this device and other",
    "start": "1176159",
    "end": "1178919"
  },
  {
    "text": "things like um Hooks and device",
    "start": "1178919",
    "end": "1182240"
  },
  {
    "text": "loes for anyone who wants to take a uh",
    "start": "1182240",
    "end": "1185559"
  },
  {
    "text": "deeper look at the CDI spec there is a",
    "start": "1185559",
    "end": "1188039"
  },
  {
    "text": "link mentioned here in the slides but um",
    "start": "1188039",
    "end": "1192200"
  },
  {
    "text": "at a high level this is how the device",
    "start": "1192200",
    "end": "1196039"
  },
  {
    "text": "gets injected into the word word",
    "start": "1196039",
    "end": "1198159"
  },
  {
    "text": "launcher",
    "start": "1198159",
    "end": "1200000"
  },
  {
    "text": "once the device is available to the word",
    "start": "1200000",
    "end": "1202120"
  },
  {
    "text": "launcher pod how can it be handed off to",
    "start": "1202120",
    "end": "1204760"
  },
  {
    "text": "the k k KVM guess process one of the",
    "start": "1204760",
    "end": "1208159"
  },
  {
    "text": "simplest ways to solve this problem is",
    "start": "1208159",
    "end": "1210440"
  },
  {
    "text": "via environment",
    "start": "1210440",
    "end": "1212880"
  },
  {
    "text": "variables the quickest way for Cub word",
    "start": "1212880",
    "end": "1215360"
  },
  {
    "text": "to support um Dr devices is to set to is",
    "start": "1215360",
    "end": "1219320"
  },
  {
    "text": "to have a set of Dr plugins that",
    "start": "1219320",
    "end": "1221440"
  },
  {
    "text": "generates this CDI spec",
    "start": "1221440",
    "end": "1223960"
  },
  {
    "text": "files on this CDI spec files will have",
    "start": "1223960",
    "end": "1228039"
  },
  {
    "text": "the right environment variables for um",
    "start": "1228039",
    "end": "1230559"
  },
  {
    "text": "Cube word to generate the correct dom",
    "start": "1230559",
    "end": "1233039"
  },
  {
    "text": "dom",
    "start": "1233039",
    "end": "1235399"
  },
  {
    "text": "XML when container runtime will pass",
    "start": "1236039",
    "end": "1238919"
  },
  {
    "text": "this um device to the um compute",
    "start": "1238919",
    "end": "1241840"
  },
  {
    "text": "container of word launcher pod it will",
    "start": "1241840",
    "end": "1244679"
  },
  {
    "text": "populate the environment variables um",
    "start": "1244679",
    "end": "1247440"
  },
  {
    "text": "that are specified in the CDI spec the",
    "start": "1247440",
    "end": "1250919"
  },
  {
    "text": "word launcher uh container can then look",
    "start": "1250919",
    "end": "1253520"
  },
  {
    "text": "at the environment variable based on the",
    "start": "1253520",
    "end": "1255960"
  },
  {
    "text": "claim name mentioned in this spec",
    "start": "1255960",
    "end": "1257760"
  },
  {
    "text": "earlier and find the right environment",
    "start": "1257760",
    "end": "1260320"
  },
  {
    "text": "variable to generate the correct Dom XML",
    "start": "1260320",
    "end": "1263360"
  },
  {
    "text": "as seen in the bottom picture in the",
    "start": "1263360",
    "end": "1266280"
  },
  {
    "text": "black",
    "start": "1266280",
    "end": "1268600"
  },
  {
    "text": "background while this is a quick and",
    "start": "1272640",
    "end": "1275240"
  },
  {
    "text": "easy way to extend the um existing",
    "start": "1275240",
    "end": "1278520"
  },
  {
    "text": "support for gpus in cubeo to um bra",
    "start": "1278520",
    "end": "1282720"
  },
  {
    "text": "devices a major drawback of this",
    "start": "1282720",
    "end": "1285360"
  },
  {
    "text": "approach is that any new C custom third",
    "start": "1285360",
    "end": "1289240"
  },
  {
    "text": "party devices that need to be adopted in",
    "start": "1289240",
    "end": "1292400"
  },
  {
    "text": "cubeo will each require a vendor to",
    "start": "1292400",
    "end": "1295679"
  },
  {
    "text": "write specific Dr drivers for c not just",
    "start": "1295679",
    "end": "1299960"
  },
  {
    "text": "that there will be there will be inry",
    "start": "1299960",
    "end": "1303840"
  },
  {
    "text": "changes needed to decode those",
    "start": "1303840",
    "end": "1306120"
  },
  {
    "text": "environment variables set by the drivers",
    "start": "1306120",
    "end": "1308720"
  },
  {
    "text": "and come up with the right Dom XML for",
    "start": "1308720",
    "end": "1313960"
  },
  {
    "text": "these since the approach for setting the",
    "start": "1314880",
    "end": "1317720"
  },
  {
    "text": "environment variable has extend",
    "start": "1317720",
    "end": "1320679"
  },
  {
    "text": "extensibility and flexibility issues is",
    "start": "1320679",
    "end": "1324480"
  },
  {
    "text": "there a way where the same API can be",
    "start": "1324480",
    "end": "1326760"
  },
  {
    "text": "supported with better cubeo Machinery",
    "start": "1326760",
    "end": "1329799"
  },
  {
    "text": "such that new device vendors can easily",
    "start": "1329799",
    "end": "1332600"
  },
  {
    "text": "make their custom devices um Expos via",
    "start": "1332600",
    "end": "1335919"
  },
  {
    "text": "Dr drivers work with cubeo",
    "start": "1335919",
    "end": "1340360"
  },
  {
    "text": "vmis assuming that the necessary details",
    "start": "1340360",
    "end": "1343760"
  },
  {
    "text": "needed to pass the devices from V",
    "start": "1343760",
    "end": "1346799"
  },
  {
    "text": "launcher to K KVM guest process can be",
    "start": "1346799",
    "end": "1349880"
  },
  {
    "text": "put into the API the node allocation",
    "start": "1349880",
    "end": "1352919"
  },
  {
    "text": "State API which is owned by the device",
    "start": "1352919",
    "end": "1355360"
  },
  {
    "text": "vendor um Cube word can then use a",
    "start": "1355360",
    "end": "1359919"
  },
  {
    "text": "sidecar hook to transfer or to translate",
    "start": "1359919",
    "end": "1363960"
  },
  {
    "text": "that uh node allocation State like",
    "start": "1363960",
    "end": "1367520"
  },
  {
    "text": "object into uh Dom XML needed for the uh",
    "start": "1367520",
    "end": "1373080"
  },
  {
    "text": "domain for this sidecar approach to work",
    "start": "1373080",
    "end": "1376760"
  },
  {
    "text": "um here are the steps that are needed",
    "start": "1376760",
    "end": "1380360"
  },
  {
    "text": "first when the VMI is created with the",
    "start": "1380360",
    "end": "1383039"
  },
  {
    "text": "resource claim what controller creates",
    "start": "1383039",
    "end": "1385640"
  },
  {
    "text": "the Pod with the side car",
    "start": "1385640",
    "end": "1387600"
  },
  {
    "text": "annotations as presented earlier the",
    "start": "1387600",
    "end": "1390360"
  },
  {
    "text": "pods land on the Node with the right Dr",
    "start": "1390360",
    "end": "1394440"
  },
  {
    "text": "devices once this happens the word word",
    "start": "1394440",
    "end": "1397520"
  },
  {
    "text": "Handler pod on the Node can get the node",
    "start": "1397520",
    "end": "1401480"
  },
  {
    "text": "allocation State like API object that",
    "start": "1401480",
    "end": "1405039"
  },
  {
    "text": "has all the details of the devices just",
    "start": "1405039",
    "end": "1407600"
  },
  {
    "text": "allocated and pass it to the work",
    "start": "1407600",
    "end": "1411120"
  },
  {
    "text": "launcher this would mean that we have to",
    "start": "1411120",
    "end": "1414039"
  },
  {
    "text": "extend the sync VMI grpc call to also",
    "start": "1414039",
    "end": "1418440"
  },
  {
    "text": "accept an additional",
    "start": "1418440",
    "end": "1420320"
  },
  {
    "text": "parameter that has the Json encoding for",
    "start": "1420320",
    "end": "1423400"
  },
  {
    "text": "node allocation State like",
    "start": "1423400",
    "end": "1426679"
  },
  {
    "text": "object this object then is passed to the",
    "start": "1426679",
    "end": "1430400"
  },
  {
    "text": "sidecar from the word launcher P um",
    "start": "1430400",
    "end": "1433880"
  },
  {
    "text": "through the undefined domain grpc method",
    "start": "1433880",
    "end": "1437760"
  },
  {
    "text": "and this method method is implemented by",
    "start": "1437760",
    "end": "1440080"
  },
  {
    "text": "the plug-in side car to generate the",
    "start": "1440080",
    "end": "1442440"
  },
  {
    "text": "ride or Dom",
    "start": "1442440",
    "end": "1445080"
  },
  {
    "text": "XML it could be seen on the pictures",
    "start": "1445080",
    "end": "1448440"
  },
  {
    "text": "that the prepared claim section in the",
    "start": "1448440",
    "end": "1451480"
  },
  {
    "text": "node allocation state has a custom PCI",
    "start": "1451480",
    "end": "1455279"
  },
  {
    "text": "address needed for this device um to",
    "start": "1455279",
    "end": "1458440"
  },
  {
    "text": "generate the right Dom XML that gets",
    "start": "1458440",
    "end": "1461200"
  },
  {
    "text": "passed through word Handler via word",
    "start": "1461200",
    "end": "1464120"
  },
  {
    "text": "launcher to the plugin side car and the",
    "start": "1464120",
    "end": "1466320"
  },
  {
    "text": "plugin side car has generated the",
    "start": "1466320",
    "end": "1468600"
  },
  {
    "text": "correct Dom XML for",
    "start": "1468600",
    "end": "1472039"
  },
  {
    "text": "it with this workflow one can imagine",
    "start": "1473600",
    "end": "1476679"
  },
  {
    "text": "that adop the adoption of new devices",
    "start": "1476679",
    "end": "1479960"
  },
  {
    "text": "like Hardware accelerators or network",
    "start": "1479960",
    "end": "1482279"
  },
  {
    "text": "accelerators will happen out of the tree",
    "start": "1482279",
    "end": "1485480"
  },
  {
    "text": "and the Dr drivers and sidecars can",
    "start": "1485480",
    "end": "1488799"
  },
  {
    "text": "coordinate with each other to pass",
    "start": "1488799",
    "end": "1491039"
  },
  {
    "text": "device metadata this will mean that",
    "start": "1491039",
    "end": "1493600"
  },
  {
    "text": "we'll have minimum entry changes um and",
    "start": "1493600",
    "end": "1497360"
  },
  {
    "text": "will mean that the the solution for this",
    "start": "1497360",
    "end": "1500679"
  },
  {
    "text": "particular uh problem is extensible for",
    "start": "1500679",
    "end": "1504919"
  },
  {
    "text": "U new and upcoming um host",
    "start": "1504919",
    "end": "1508520"
  },
  {
    "text": "devices it would also mean that the",
    "start": "1508520",
    "end": "1512039"
  },
  {
    "text": "implementation would be uh a little more",
    "start": "1512039",
    "end": "1515679"
  },
  {
    "text": "involved than the environment variable",
    "start": "1515679",
    "end": "1518159"
  },
  {
    "text": "approach and we would have to be careful",
    "start": "1518159",
    "end": "1522480"
  },
  {
    "text": "about making sure that the",
    "start": "1522480",
    "end": "1523960"
  },
  {
    "text": "implementation is Backward Compatible",
    "start": "1523960",
    "end": "1527159"
  },
  {
    "text": "and um both the environment variable as",
    "start": "1527159",
    "end": "1530720"
  },
  {
    "text": "well as the sidecar approaches",
    "start": "1530720",
    "end": "1534080"
  },
  {
    "text": "work as vun mentioned all of this uh",
    "start": "1534080",
    "end": "1537880"
  },
  {
    "text": "proposal is keeping the bra",
    "start": "1537880",
    "end": "1541360"
  },
  {
    "text": "implementation with kubernetes 130 um in",
    "start": "1541360",
    "end": "1545039"
  },
  {
    "text": "mind the the implementation is in Alpha",
    "start": "1545039",
    "end": "1549399"
  },
  {
    "text": "stage in 130 and will move to um beta",
    "start": "1549399",
    "end": "1553080"
  },
  {
    "text": "and um G states in the future releases",
    "start": "1553080",
    "end": "1556520"
  },
  {
    "text": "so all of the API field",
    "start": "1556520",
    "end": "1558760"
  },
  {
    "text": "that were um discussed in the um you",
    "start": "1558760",
    "end": "1562000"
  },
  {
    "text": "know proposed solution can be extended",
    "start": "1562000",
    "end": "1565080"
  },
  {
    "text": "with um the proposed beta um release of",
    "start": "1565080",
    "end": "1570679"
  },
  {
    "text": "Dr okay so with that this concludes our",
    "start": "1571520",
    "end": "1575760"
  },
  {
    "text": "presentation um we can open it up for",
    "start": "1575760",
    "end": "1578240"
  },
  {
    "text": "Q&A",
    "start": "1578240",
    "end": "1581240"
  },
  {
    "text": "uh there is a question I'm going to read",
    "start": "1588640",
    "end": "1591760"
  },
  {
    "text": "it out loud can Dr expose the device",
    "start": "1591760",
    "end": "1595600"
  },
  {
    "text": "information on the Node in other words",
    "start": "1595600",
    "end": "1598960"
  },
  {
    "text": "are the device information visible by",
    "start": "1598960",
    "end": "1601440"
  },
  {
    "text": "regular users yeah this is a great",
    "start": "1601440",
    "end": "1604000"
  },
  {
    "text": "question",
    "start": "1604000",
    "end": "1606000"
  },
  {
    "text": "so the way Dr uh exposes the information",
    "start": "1606000",
    "end": "1612039"
  },
  {
    "text": "is in um two ways one the Dr cuet",
    "start": "1612039",
    "end": "1617120"
  },
  {
    "text": "plug-in will stream name the um device",
    "start": "1617120",
    "end": "1620640"
  },
  {
    "text": "information to cuade through an uh grpc",
    "start": "1620640",
    "end": "1625919"
  },
  {
    "text": "API uh and second the same source of",
    "start": "1625919",
    "end": "1628960"
  },
  {
    "text": "truth will will be used to update the",
    "start": "1628960",
    "end": "1632600"
  },
  {
    "text": "kubernetes API the node allocation State",
    "start": "1632600",
    "end": "1635960"
  },
  {
    "text": "API that um we discussed um earlier in",
    "start": "1635960",
    "end": "1639399"
  },
  {
    "text": "the",
    "start": "1639399",
    "end": "1640279"
  },
  {
    "text": "slides having that information in the",
    "start": "1640279",
    "end": "1643320"
  },
  {
    "text": "API in the node specific uh d AR a",
    "start": "1643320",
    "end": "1648640"
  },
  {
    "text": "object will mean",
    "start": "1648640",
    "end": "1650679"
  },
  {
    "text": "that the node level devices are",
    "start": "1650679",
    "end": "1654440"
  },
  {
    "text": "available in the API and can be",
    "start": "1654440",
    "end": "1656960"
  },
  {
    "text": "coordinated across different uh",
    "start": "1656960",
    "end": "1659679"
  },
  {
    "text": "components of a distributed system",
    "start": "1659679",
    "end": "1661840"
  },
  {
    "text": "avoiding the races um that were",
    "start": "1661840",
    "end": "1664159"
  },
  {
    "text": "mentioned um earlier with their device",
    "start": "1664159",
    "end": "1668399"
  },
  {
    "text": "plugins um okay another question does",
    "start": "1670880",
    "end": "1674080"
  },
  {
    "text": "the second approach mean that the word",
    "start": "1674080",
    "end": "1676399"
  },
  {
    "text": "Handler needs more RB",
    "start": "1676399",
    "end": "1678720"
  },
  {
    "text": "to access um nor allocation",
    "start": "1678720",
    "end": "1683240"
  },
  {
    "text": "State yes um that would mean that we",
    "start": "1683440",
    "end": "1686799"
  },
  {
    "text": "would have to have additional rback um",
    "start": "1686799",
    "end": "1690080"
  },
  {
    "text": "in the protected Nam space to access the",
    "start": "1690080",
    "end": "1694039"
  },
  {
    "text": "um allocation node allocation State like",
    "start": "1694039",
    "end": "1697039"
  },
  {
    "text": "like object um which is um published by",
    "start": "1697039",
    "end": "1701720"
  },
  {
    "text": "the driver however what we thought is",
    "start": "1701720",
    "end": "1704880"
  },
  {
    "text": "that this problem could be solved by",
    "start": "1704880",
    "end": "1707399"
  },
  {
    "text": "role agre ation in the sense that um",
    "start": "1707399",
    "end": "1711519"
  },
  {
    "text": "whenever we have a new driver um coming",
    "start": "1711519",
    "end": "1714600"
  },
  {
    "text": "up or or published or needs to be",
    "start": "1714600",
    "end": "1718039"
  },
  {
    "text": "working with cubeo it would have a",
    "start": "1718039",
    "end": "1720440"
  },
  {
    "text": "specific uh role for its um driver",
    "start": "1720440",
    "end": "1725120"
  },
  {
    "text": "object that can have aggregated rback um",
    "start": "1725120",
    "end": "1728679"
  },
  {
    "text": "to the word Handler service",
    "start": "1728679",
    "end": "1732080"
  },
  {
    "text": "account this uh arbc in the future",
    "start": "1732080",
    "end": "1735960"
  },
  {
    "text": "versions of kubernetes could be",
    "start": "1735960",
    "end": "1738200"
  },
  {
    "text": "restricted",
    "start": "1738200",
    "end": "1739519"
  },
  {
    "text": "to um say that okay the the object is",
    "start": "1739519",
    "end": "1743480"
  },
  {
    "text": "for a particular node and only that uh",
    "start": "1743480",
    "end": "1747480"
  },
  {
    "text": "node can or only word Handler on that",
    "start": "1747480",
    "end": "1750559"
  },
  {
    "text": "node can have access to that particular",
    "start": "1750559",
    "end": "1753840"
  },
  {
    "text": "um Nas like object this Machinery um",
    "start": "1753840",
    "end": "1758480"
  },
  {
    "text": "could be provided by kubernetes in the",
    "start": "1758480",
    "end": "1760960"
  },
  {
    "text": "future releases and we tend we would",
    "start": "1760960",
    "end": "1763840"
  },
  {
    "text": "like to use that to make sure that um RB",
    "start": "1763840",
    "end": "1767200"
  },
  {
    "text": "is rest icted only to one particular",
    "start": "1767200",
    "end": "1770640"
  },
  {
    "text": "word Handler and",
    "start": "1770640",
    "end": "1773720"
  },
  {
    "text": "one okay I realize we are coming up to",
    "start": "1777399",
    "end": "1781320"
  },
  {
    "text": "time yeah that's great stuff you've",
    "start": "1781320",
    "end": "1784720"
  },
  {
    "text": "answered the question you've uh you've",
    "start": "1784720",
    "end": "1787200"
  },
  {
    "text": "come in at exactly 7 PM where I am 5:00",
    "start": "1787200",
    "end": "1790360"
  },
  {
    "text": "pm UTC well done H thank you so much for",
    "start": "1790360",
    "end": "1793360"
  },
  {
    "text": "your talk",
    "start": "1793360",
    "end": "1796080"
  }
]