[
  {
    "start": "0",
    "end": "37000"
  },
  {
    "text": "all right so they are asking us to start",
    "start": "199",
    "end": "3000"
  },
  {
    "text": "on time uh people will probably continue",
    "start": "3000",
    "end": "5160"
  },
  {
    "text": "to trickle in but let's get started so",
    "start": "5160",
    "end": "8000"
  },
  {
    "text": "hi everyone um welcome again to grp comp",
    "start": "8000",
    "end": "11320"
  },
  {
    "text": "and thank you all for coming out today",
    "start": "11320",
    "end": "13679"
  },
  {
    "text": "glad you could all make it uh my name is",
    "start": "13679",
    "end": "16000"
  },
  {
    "text": "Doug Folly I am the tech lead for grpc",
    "start": "16000",
    "end": "19240"
  },
  {
    "text": "go and today I'm joined by Lucho Franco",
    "start": "19240",
    "end": "22279"
  },
  {
    "text": "uh who's the owner of tonic which is the",
    "start": "22279",
    "end": "24400"
  },
  {
    "text": "leading implementation of grpc in Rust",
    "start": "24400",
    "end": "27359"
  },
  {
    "text": "and so today um we are are excited to",
    "start": "27359",
    "end": "31080"
  },
  {
    "text": "announce that we've been working",
    "start": "31080",
    "end": "32840"
  },
  {
    "text": "together uh for the past few months on a",
    "start": "32840",
    "end": "35000"
  },
  {
    "text": "new grpc implementation in Rust together",
    "start": "35000",
    "end": "39000"
  },
  {
    "start": "37000",
    "end": "121000"
  },
  {
    "text": "so um I'm sure we have some people here",
    "start": "39000",
    "end": "41440"
  },
  {
    "text": "today who are experienced R Developers",
    "start": "41440",
    "end": "43680"
  },
  {
    "text": "already uh but probably a lot of people",
    "start": "43680",
    "end": "46199"
  },
  {
    "text": "in the audience aren't very familiar",
    "start": "46199",
    "end": "47760"
  },
  {
    "text": "with the language so before we get",
    "start": "47760",
    "end": "49680"
  },
  {
    "text": "started I wanted to talk a little bit",
    "start": "49680",
    "end": "51600"
  },
  {
    "text": "about um rust itself and its growing",
    "start": "51600",
    "end": "54960"
  },
  {
    "text": "popularity um at last year's grpc",
    "start": "54960",
    "end": "57440"
  },
  {
    "text": "conference uh we received a lot of",
    "start": "57440",
    "end": "59079"
  },
  {
    "text": "questions uh from developers both",
    "start": "59079",
    "end": "61399"
  },
  {
    "text": "onstage and offstage um about supporting",
    "start": "61399",
    "end": "64478"
  },
  {
    "text": "rust and that was really the first time",
    "start": "64479",
    "end": "66600"
  },
  {
    "text": "that we started to uh strongly consider",
    "start": "66600",
    "end": "69159"
  },
  {
    "text": "a rust",
    "start": "69159",
    "end": "70320"
  },
  {
    "text": "implementation um also recently the",
    "start": "70320",
    "end": "73400"
  },
  {
    "text": "Linux kernel and the Android open source",
    "start": "73400",
    "end": "75520"
  },
  {
    "text": "project added support for developing and",
    "start": "75520",
    "end": "77840"
  },
  {
    "text": "rust um and that's a really great",
    "start": "77840",
    "end": "80159"
  },
  {
    "text": "advancement for the language um and this",
    "start": "80159",
    "end": "82320"
  },
  {
    "text": "is part of a wider industry Trend a lot",
    "start": "82320",
    "end": "84400"
  },
  {
    "text": "of a lot of projects are migrating to",
    "start": "84400",
    "end": "86479"
  },
  {
    "text": "rust or allowing rust in their in their",
    "start": "86479",
    "end": "88799"
  },
  {
    "text": "project um um and lastly the the r",
    "start": "88799",
    "end": "91840"
  },
  {
    "text": "Community is really growing fast uh in a",
    "start": "91840",
    "end": "94159"
  },
  {
    "text": "survey that was done last year over 3",
    "start": "94159",
    "end": "96680"
  },
  {
    "text": "million developers or 12% of all",
    "start": "96680",
    "end": "98560"
  },
  {
    "text": "developers were using rust which is",
    "start": "98560",
    "end": "100799"
  },
  {
    "text": "triple what it was two years",
    "start": "100799",
    "end": "102840"
  },
  {
    "text": "prior um and also in 2023 a stack",
    "start": "102840",
    "end": "106439"
  },
  {
    "text": "Overflow survey was done and declared",
    "start": "106439",
    "end": "110040"
  },
  {
    "text": "that rust was the most admired language",
    "start": "110040",
    "end": "111920"
  },
  {
    "text": "which meant that 85% of people that used",
    "start": "111920",
    "end": "114640"
  },
  {
    "text": "it wanted to continue using it in the",
    "start": "114640",
    "end": "116479"
  },
  {
    "text": "future for their work and this was the",
    "start": "116479",
    "end": "118360"
  },
  {
    "text": "highest among all languages that they",
    "start": "118360",
    "end": "121759"
  },
  {
    "start": "121000",
    "end": "369000"
  },
  {
    "text": "surveyed um and as you can see so on",
    "start": "121759",
    "end": "124920"
  },
  {
    "text": "Reddit r/ rust recently surpassed the go",
    "start": "124920",
    "end": "128399"
  },
  {
    "text": "subreddits subscriber count so um to",
    "start": "128399",
    "end": "131680"
  },
  {
    "text": "talk a little bit more about rust though",
    "start": "131680",
    "end": "132959"
  },
  {
    "text": "I wanted to hand over to",
    "start": "132959",
    "end": "135640"
  },
  {
    "text": "Lucha all right thank you so why rust",
    "start": "135640",
    "end": "139080"
  },
  {
    "text": "well consider these three things",
    "start": "139080",
    "end": "140640"
  },
  {
    "text": "performance reliability and productivity",
    "start": "140640",
    "end": "144120"
  },
  {
    "text": "most languages make you pick two of",
    "start": "144120",
    "end": "145720"
  },
  {
    "text": "these rust lets you pick all",
    "start": "145720",
    "end": "148840"
  },
  {
    "text": "three Russ has the ultimate performance",
    "start": "148840",
    "end": "151560"
  },
  {
    "text": "it offers low-level control of your",
    "start": "151560",
    "end": "153200"
  },
  {
    "text": "software has no built-in runtime so",
    "start": "153200",
    "end": "155560"
  },
  {
    "text": "there's no GC pauses keeping your tail",
    "start": "155560",
    "end": "157599"
  },
  {
    "text": "laten's pretty low and this means",
    "start": "157599",
    "end": "160400"
  },
  {
    "text": "predictable",
    "start": "160400",
    "end": "161840"
  },
  {
    "text": "performance for your latency sensitive",
    "start": "161840",
    "end": "164959"
  },
  {
    "text": "applications in addition rust has great",
    "start": "164959",
    "end": "167239"
  },
  {
    "text": "reliability it has a strong type system",
    "start": "167239",
    "end": "169720"
  },
  {
    "text": "that can detect many bugs while you're",
    "start": "169720",
    "end": "171280"
  },
  {
    "text": "writing the code it's memory safe has",
    "start": "171280",
    "end": "174319"
  },
  {
    "text": "great built-in language rules like move",
    "start": "174319",
    "end": "176080"
  },
  {
    "text": "semantics that come that are not built",
    "start": "176080",
    "end": "178800"
  },
  {
    "text": "in in a lot of languages but Russ has",
    "start": "178800",
    "end": "180159"
  },
  {
    "text": "chosen to make them built in and it has",
    "start": "180159",
    "end": "182879"
  },
  {
    "text": "borrow checking which is very famous",
    "start": "182879",
    "end": "184560"
  },
  {
    "text": "part of the language prevents race",
    "start": "184560",
    "end": "186519"
  },
  {
    "text": "conditions and other things that are",
    "start": "186519",
    "end": "187920"
  },
  {
    "text": "common in multi-threaded code all this",
    "start": "187920",
    "end": "189959"
  },
  {
    "text": "is checkfree by the",
    "start": "189959",
    "end": "191480"
  },
  {
    "text": "compiler finally productivity Russ",
    "start": "191480",
    "end": "194599"
  },
  {
    "text": "provides great error messages making it",
    "start": "194599",
    "end": "197200"
  },
  {
    "text": "really easy to use the language its",
    "start": "197200",
    "end": "199280"
  },
  {
    "text": "language server helps you effortlessly",
    "start": "199280",
    "end": "200959"
  },
  {
    "text": "write",
    "start": "200959",
    "end": "201799"
  },
  {
    "text": "code it has an easy to use build tool",
    "start": "201799",
    "end": "204200"
  },
  {
    "text": "called cargo and its tool chain",
    "start": "204200",
    "end": "206120"
  },
  {
    "text": "installer rust up is also extremely easy",
    "start": "206120",
    "end": "208239"
  },
  {
    "text": "to use and because of a strong type",
    "start": "208239",
    "end": "210280"
  },
  {
    "text": "system and great tooling refactoring",
    "start": "210280",
    "end": "212760"
  },
  {
    "text": "your code is super easy and can be done",
    "start": "212760",
    "end": "214879"
  },
  {
    "text": "at 3: in the morning with no",
    "start": "214879",
    "end": "217720"
  },
  {
    "text": "sleep now a little bit of history about",
    "start": "217720",
    "end": "219959"
  },
  {
    "text": "grpc and rust uh before 2019 there were",
    "start": "219959",
    "end": "223280"
  },
  {
    "text": "two main projects uh one was a pure rust",
    "start": "223280",
    "end": "225879"
  },
  {
    "text": "implementation that you know was",
    "start": "225879",
    "end": "227560"
  },
  {
    "text": "incomplete and had some performance",
    "start": "227560",
    "end": "228840"
  },
  {
    "text": "issues and the other one just wrapped",
    "start": "228840",
    "end": "231080"
  },
  {
    "text": "the C++ implementations for users that",
    "start": "231080",
    "end": "233840"
  },
  {
    "text": "wanted a pure rust uh grpc",
    "start": "233840",
    "end": "236159"
  },
  {
    "text": "implementation that was production ready",
    "start": "236159",
    "end": "237680"
  },
  {
    "text": "there was no option and this is where",
    "start": "237680",
    "end": "239159"
  },
  {
    "text": "tonic was born",
    "start": "239159",
    "end": "241079"
  },
  {
    "text": "tonic's goalss were to support the new",
    "start": "241079",
    "end": "242360"
  },
  {
    "text": "ay8 syntax which and be written pure",
    "start": "242360",
    "end": "245239"
  },
  {
    "text": "rust and to also be production",
    "start": "245239",
    "end": "248280"
  },
  {
    "text": "ready in addition the tonic project was",
    "start": "248280",
    "end": "250439"
  },
  {
    "text": "created by the Tokyo project maintainers",
    "start": "250439",
    "end": "251959"
  },
  {
    "text": "with the GOL supporting Tokyo out of the",
    "start": "251959",
    "end": "253519"
  },
  {
    "text": "box and its",
    "start": "253519",
    "end": "255199"
  },
  {
    "text": "ecosystem in 2024 tonic has become the",
    "start": "255199",
    "end": "257799"
  },
  {
    "text": "most popular grpc implementation in Rust",
    "start": "257799",
    "end": "260519"
  },
  {
    "text": "with over 64 million",
    "start": "260519",
    "end": "264120"
  },
  {
    "text": "downloads tonic by itself only",
    "start": "264120",
    "end": "266240"
  },
  {
    "text": "implements the grpc spec but does not do",
    "start": "266240",
    "end": "268759"
  },
  {
    "text": "any of the protuff en coding this is",
    "start": "268759",
    "end": "270520"
  },
  {
    "text": "where Prost comes into play Prost",
    "start": "270520",
    "end": "273520"
  },
  {
    "text": "provides a pure rust implementation of",
    "start": "273520",
    "end": "275039"
  },
  {
    "text": "the protuff spec it is designed to be",
    "start": "275039",
    "end": "276759"
  },
  {
    "text": "ergonomic for rust users for example it",
    "start": "276759",
    "end": "279000"
  },
  {
    "text": "works directly with Rush Str and it even",
    "start": "279000",
    "end": "281039"
  },
  {
    "text": "provides a derived macro that allows you",
    "start": "281039",
    "end": "282840"
  },
  {
    "text": "to implement protuff encoding and",
    "start": "282840",
    "end": "284919"
  },
  {
    "text": "decoding on pre-existing",
    "start": "284919",
    "end": "287600"
  },
  {
    "text": "structs tonic and Prost are great but",
    "start": "287600",
    "end": "290280"
  },
  {
    "text": "they do have some limitations tonic was",
    "start": "290280",
    "end": "292360"
  },
  {
    "text": "never designed for complex grpc use",
    "start": "292360",
    "end": "294479"
  },
  {
    "text": "cases but instead it was Target to get",
    "start": "294479",
    "end": "296280"
  },
  {
    "text": "people started with rust and writing",
    "start": "296280",
    "end": "298960"
  },
  {
    "text": "distributed systems in grpc due to this",
    "start": "298960",
    "end": "301560"
  },
  {
    "text": "there are some feature gaps in its",
    "start": "301560",
    "end": "303720"
  },
  {
    "text": "implementation some examples for Tonic",
    "start": "303720",
    "end": "306280"
  },
  {
    "text": "that does not support are service",
    "start": "306280",
    "end": "307919"
  },
  {
    "text": "configs which enable services to",
    "start": "307919",
    "end": "309680"
  },
  {
    "text": "configure client",
    "start": "309680",
    "end": "311080"
  },
  {
    "text": "Behavior as well it does not have",
    "start": "311080",
    "end": "312840"
  },
  {
    "text": "advanced name resolution and",
    "start": "312840",
    "end": "314160"
  },
  {
    "text": "configurable load balancing no Dynamic",
    "start": "314160",
    "end": "316240"
  },
  {
    "text": "connection management and does not",
    "start": "316240",
    "end": "317800"
  },
  {
    "text": "support XDS for prox service",
    "start": "317800",
    "end": "320080"
  },
  {
    "text": "meshes like tonic PR intentionally has",
    "start": "320080",
    "end": "323160"
  },
  {
    "text": "some deviations from the protus spec in",
    "start": "323160",
    "end": "324880"
  },
  {
    "text": "order to be as rust idiomatic and",
    "start": "324880",
    "end": "326759"
  },
  {
    "text": "ergonomic as possible some examples of",
    "start": "326759",
    "end": "329240"
  },
  {
    "text": "this include",
    "start": "329240",
    "end": "330160"
  },
  {
    "text": "lack of support for nonzero field",
    "start": "330160",
    "end": "331800"
  },
  {
    "text": "defaults no preservation of unknown",
    "start": "331800",
    "end": "333960"
  },
  {
    "text": "Fields when resterilize and in Pro",
    "start": "333960",
    "end": "336440"
  },
  {
    "text": "accessing nested unset messages can be a",
    "start": "336440",
    "end": "338720"
  },
  {
    "text": "little bit",
    "start": "338720",
    "end": "339880"
  },
  {
    "text": "tricky most of these trade-offs are fine",
    "start": "339880",
    "end": "342080"
  },
  {
    "text": "for most Russ users intending to use",
    "start": "342080",
    "end": "343639"
  },
  {
    "text": "grpc at a basic level but fall short for",
    "start": "343639",
    "end": "346400"
  },
  {
    "text": "larger consumers of grpc that need a",
    "start": "346400",
    "end": "348560"
  },
  {
    "text": "whole Fe need the whole feature set this",
    "start": "348560",
    "end": "351160"
  },
  {
    "text": "is the goal of the new grpc Russ",
    "start": "351160",
    "end": "352560"
  },
  {
    "text": "implementation to bridge the gap between",
    "start": "352560",
    "end": "354280"
  },
  {
    "text": "what tonic currently has with what the",
    "start": "354280",
    "end": "356759"
  },
  {
    "text": "other mature grp grpc implementations",
    "start": "356759",
    "end": "359319"
  },
  {
    "text": "provide",
    "start": "359319",
    "end": "360319"
  },
  {
    "text": "now I'll turn things back over to Doug",
    "start": "360319",
    "end": "361560"
  },
  {
    "text": "to talk more about the grpc Russ",
    "start": "361560",
    "end": "364919"
  },
  {
    "text": "project all right thank",
    "start": "365520",
    "end": "368000"
  },
  {
    "text": "you all right so given the limitations",
    "start": "368000",
    "end": "371280"
  },
  {
    "start": "369000",
    "end": "431000"
  },
  {
    "text": "that Lucio discussed um we're starting a",
    "start": "371280",
    "end": "373919"
  },
  {
    "text": "new implementation of grpc and rust with",
    "start": "373919",
    "end": "376240"
  },
  {
    "text": "the goal to provide a great rust",
    "start": "376240",
    "end": "378080"
  },
  {
    "text": "experience and all the features provided",
    "start": "378080",
    "end": "380240"
  },
  {
    "text": "by the other languages that we support",
    "start": "380240",
    "end": "382560"
  },
  {
    "text": "uh upon release this will be available",
    "start": "382560",
    "end": "384720"
  },
  {
    "text": "using the grpc crate name and I wanted",
    "start": "384720",
    "end": "387000"
  },
  {
    "text": "to say thank you to steepen kov who had",
    "start": "387000",
    "end": "390000"
  },
  {
    "text": "the name uh control over this name",
    "start": "390000",
    "end": "391720"
  },
  {
    "text": "before and transferred it over to us uh",
    "start": "391720",
    "end": "393960"
  },
  {
    "text": "for this project um grpc rust will be",
    "start": "393960",
    "end": "397160"
  },
  {
    "text": "entirely open source and it will be",
    "start": "397160",
    "end": "398840"
  },
  {
    "text": "fully supported by the grpc product",
    "start": "398840",
    "end": "401120"
  },
  {
    "text": "project under the cncf just like all of",
    "start": "401120",
    "end": "403639"
  },
  {
    "text": "our other languages um it will have the",
    "start": "403639",
    "end": "406120"
  },
  {
    "text": "full set of grpc features including all",
    "start": "406120",
    "end": "408560"
  },
  {
    "text": "of the things Lucho mentioned were",
    "start": "408560",
    "end": "410240"
  },
  {
    "text": "missing from tonic and interceptors",
    "start": "410240",
    "end": "413440"
  },
  {
    "text": "observability health checking retry and",
    "start": "413440",
    "end": "417280"
  },
  {
    "text": "more like tonic grpc rust will be a pure",
    "start": "417280",
    "end": "420560"
  },
  {
    "text": "rust",
    "start": "420560",
    "end": "421560"
  },
  {
    "text": "implementation design started earlier",
    "start": "421560",
    "end": "423680"
  },
  {
    "text": "this year implementation will begin soon",
    "start": "423680",
    "end": "427360"
  },
  {
    "text": "and we expect to release a version next",
    "start": "427360",
    "end": "431759"
  },
  {
    "start": "431000",
    "end": "623000"
  },
  {
    "text": "year and so we're also excited to",
    "start": "431759",
    "end": "434560"
  },
  {
    "text": "announce the release of uh Google's",
    "start": "434560",
    "end": "437319"
  },
  {
    "text": "protuff rust Library which will be",
    "start": "437319",
    "end": "439560"
  },
  {
    "text": "coming later this year uh this will also",
    "start": "439560",
    "end": "442240"
  },
  {
    "text": "be available on creates. using the",
    "start": "442240",
    "end": "444800"
  },
  {
    "text": "protuff crate name and stepan col",
    "start": "444800",
    "end": "447479"
  },
  {
    "text": "actually um had that name uh before as",
    "start": "447479",
    "end": "449800"
  },
  {
    "text": "well and donated that to Google for the",
    "start": "449800",
    "end": "452360"
  },
  {
    "text": "official project um prabu rust will be a",
    "start": "452360",
    "end": "455560"
  },
  {
    "text": "first class Google maintained",
    "start": "455560",
    "end": "457080"
  },
  {
    "text": "implementation just like we have for",
    "start": "457080",
    "end": "459280"
  },
  {
    "text": "Java C++ Python and other",
    "start": "459280",
    "end": "461879"
  },
  {
    "text": "implementations it will fully conform to",
    "start": "461879",
    "end": "463960"
  },
  {
    "text": "the Pabu",
    "start": "463960",
    "end": "465400"
  },
  {
    "text": "specification and it's actually already",
    "start": "465400",
    "end": "467360"
  },
  {
    "text": "in use within Google and it will be used",
    "start": "467360",
    "end": "469319"
  },
  {
    "text": "extensively by Google going",
    "start": "469319",
    "end": "471639"
  },
  {
    "text": "forward it will also have the same level",
    "start": "471639",
    "end": "474280"
  },
  {
    "text": "of support and release schedule as other",
    "start": "474280",
    "end": "476440"
  },
  {
    "text": "supported languages and in the future if",
    "start": "476440",
    "end": "479000"
  },
  {
    "text": "Google products offer any apis or sdks",
    "start": "479000",
    "end": "482440"
  },
  {
    "text": "that use protuff for rust then this is",
    "start": "482440",
    "end": "485120"
  },
  {
    "text": "the crate that we will use for",
    "start": "485120",
    "end": "487479"
  },
  {
    "text": "those for most open source users we",
    "start": "487479",
    "end": "490199"
  },
  {
    "text": "expect that protuff rust will be the",
    "start": "490199",
    "end": "491879"
  },
  {
    "text": "default option but it is possible that",
    "start": "491879",
    "end": "494000"
  },
  {
    "text": "PR may be a better fit for some use",
    "start": "494000",
    "end": "496840"
  },
  {
    "text": "cases and just like grpc and other",
    "start": "496840",
    "end": "499199"
  },
  {
    "text": "languages grpc rust will be usable with",
    "start": "499199",
    "end": "501639"
  },
  {
    "text": "any serialization including non- prabu",
    "start": "501639",
    "end": "504360"
  },
  {
    "text": "based serialization or protuff rust or",
    "start": "504360",
    "end": "507280"
  },
  {
    "text": "Pro or any any serial ation of your of",
    "start": "507280",
    "end": "510520"
  },
  {
    "text": "your CH",
    "start": "510520",
    "end": "511599"
  },
  {
    "text": "Choice um and lastly I'm happy to",
    "start": "511599",
    "end": "513919"
  },
  {
    "text": "announce that the first release will be",
    "start": "513919",
    "end": "515479"
  },
  {
    "text": "coming later this",
    "start": "515479",
    "end": "517399"
  },
  {
    "text": "year so going forward some of you may be",
    "start": "517399",
    "end": "519959"
  },
  {
    "text": "wondering what will happen to Tonic and",
    "start": "519959",
    "end": "522039"
  },
  {
    "text": "PR so tonic and PR are considered to be",
    "start": "522039",
    "end": "524680"
  },
  {
    "text": "mature and stable and suitable for",
    "start": "524680",
    "end": "526959"
  },
  {
    "text": "production but no new features are",
    "start": "526959",
    "end": "528760"
  },
  {
    "text": "planned for them grpc rust will provide",
    "start": "528760",
    "end": "532080"
  },
  {
    "text": "a new channel in server implementation",
    "start": "532080",
    "end": "534399"
  },
  {
    "text": "and it's not designed to be a dropin",
    "start": "534399",
    "end": "536320"
  },
  {
    "text": "replacement for Tonic however we will",
    "start": "536320",
    "end": "538800"
  },
  {
    "text": "try to reuse use as many tonic",
    "start": "538800",
    "end": "540640"
  },
  {
    "text": "abstractions as possible and the goal is",
    "start": "540640",
    "end": "543240"
  },
  {
    "text": "to fit nicely into the rust ecosystem",
    "start": "543240",
    "end": "545519"
  },
  {
    "text": "similar to how um you know tonic was",
    "start": "545519",
    "end": "548120"
  },
  {
    "text": "envisioned um and to make the migration",
    "start": "548120",
    "end": "550680"
  },
  {
    "text": "easiest we will provide a um a guide to",
    "start": "550680",
    "end": "554399"
  },
  {
    "text": "help existing users of tonic migrate to",
    "start": "554399",
    "end": "557399"
  },
  {
    "text": "grpc",
    "start": "557399",
    "end": "558640"
  },
  {
    "text": "rest tonic itself will be upstreamed",
    "start": "558640",
    "end": "561160"
  },
  {
    "text": "into the cncf project it will be moved",
    "start": "561160",
    "end": "563560"
  },
  {
    "text": "to the grpc GitHub repo and it will be",
    "start": "563560",
    "end": "565760"
  },
  {
    "text": "managed by our team exact details are to",
    "start": "565760",
    "end": "569880"
  },
  {
    "text": "be determined as design and",
    "start": "569880",
    "end": "571200"
  },
  {
    "text": "implementation continue but this is the",
    "start": "571200",
    "end": "574519"
  },
  {
    "text": "plan so to recap and also give some",
    "start": "574519",
    "end": "577240"
  },
  {
    "text": "rough Milestones on the work that we're",
    "start": "577240",
    "end": "579160"
  },
  {
    "text": "doing um the design and prototype for",
    "start": "579160",
    "end": "582240"
  },
  {
    "text": "grpc rust has already started um",
    "start": "582240",
    "end": "585160"
  },
  {
    "text": "implementation will begin soon uh",
    "start": "585160",
    "end": "587360"
  },
  {
    "text": "there's already a proof of concept uh",
    "start": "587360",
    "end": "590160"
  },
  {
    "text": "that's been done but it's it's very much",
    "start": "590160",
    "end": "592399"
  },
  {
    "text": "incomplete um but official",
    "start": "592399",
    "end": "594279"
  },
  {
    "text": "implementation will begin soon um and",
    "start": "594279",
    "end": "597040"
  },
  {
    "text": "that will occur in the tonic repo so if",
    "start": "597040",
    "end": "599399"
  },
  {
    "text": "you're looking for information or to see",
    "start": "599399",
    "end": "601839"
  },
  {
    "text": "updates that would be the place to find",
    "start": "601839",
    "end": "603560"
  },
  {
    "text": "that um basic Channel and server",
    "start": "603560",
    "end": "606200"
  },
  {
    "text": "implementations are expected to be",
    "start": "606200",
    "end": "608000"
  },
  {
    "text": "available for testing mainly uh in early",
    "start": "608000",
    "end": "611600"
  },
  {
    "text": "2025 uh with a stable 1.0 release",
    "start": "611600",
    "end": "614440"
  },
  {
    "text": "expected late next year and for XDS",
    "start": "614440",
    "end": "617959"
  },
  {
    "text": "support um that's a bigger undertaking",
    "start": "617959",
    "end": "620120"
  },
  {
    "text": "and so that'll be coming in the",
    "start": "620120",
    "end": "622040"
  },
  {
    "text": "following",
    "start": "622040",
    "end": "623600"
  },
  {
    "start": "623000",
    "end": "660000"
  },
  {
    "text": "year um so that is the end of the the",
    "start": "623600",
    "end": "627440"
  },
  {
    "text": "content that we had planned today",
    "start": "627440",
    "end": "628640"
  },
  {
    "text": "hopefully uh yall learned about what",
    "start": "628640",
    "end": "631240"
  },
  {
    "text": "we're working on and have some questions",
    "start": "631240",
    "end": "633480"
  },
  {
    "text": "so please feel free to ask now or you",
    "start": "633480",
    "end": "635480"
  },
  {
    "text": "can find us later in the",
    "start": "635480",
    "end": "638560"
  },
  {
    "text": "[Applause]",
    "start": "640680",
    "end": "646480"
  },
  {
    "text": "Halls thank you for the talk uh I just",
    "start": "646480",
    "end": "649240"
  },
  {
    "text": "have one question once you once you",
    "start": "649240",
    "end": "651839"
  },
  {
    "text": "finish this work is there a reason for",
    "start": "651839",
    "end": "654440"
  },
  {
    "text": "grpc C++ to exist like can you just wrap",
    "start": "654440",
    "end": "659480"
  },
  {
    "text": "so wrap that again yeah it's a it's an",
    "start": "659480",
    "end": "661720"
  },
  {
    "start": "660000",
    "end": "736000"
  },
  {
    "text": "interesting question um so definitely",
    "start": "661720",
    "end": "665200"
  },
  {
    "text": "there are Visions in our heads about how",
    "start": "665200",
    "end": "668360"
  },
  {
    "text": "we can take all of the great benefits",
    "start": "668360",
    "end": "670720"
  },
  {
    "text": "that Russ give us bundle it inside of a",
    "start": "670720",
    "end": "673000"
  },
  {
    "text": "C++ wrapper and provide this same",
    "start": "673000",
    "end": "675560"
  },
  {
    "text": "benefit to C++ programmers um that is so",
    "start": "675560",
    "end": "679440"
  },
  {
    "text": "far in the future that you know we have",
    "start": "679440",
    "end": "681560"
  },
  {
    "text": "no official plans for that yet but it's",
    "start": "681560",
    "end": "683680"
  },
  {
    "text": "certainly something that we've we've",
    "start": "683680",
    "end": "685120"
  },
  {
    "text": "entertained the idea of um it would need",
    "start": "685120",
    "end": "687360"
  },
  {
    "text": "to be either API compatible or would",
    "start": "687360",
    "end": "690240"
  },
  {
    "text": "require a migration and so there are",
    "start": "690240",
    "end": "691800"
  },
  {
    "text": "those considerations as well but yeah",
    "start": "691800",
    "end": "693800"
  },
  {
    "text": "good question thank",
    "start": "693800",
    "end": "696519"
  },
  {
    "text": "you and and uh my my question is uh",
    "start": "703480",
    "end": "707079"
  },
  {
    "text": "about rust itself I'm new to rust and so",
    "start": "707079",
    "end": "710120"
  },
  {
    "text": "memory need kind of Crash is the two",
    "start": "710120",
    "end": "712560"
  },
  {
    "text": "main pinpoint when we develop a C++",
    "start": "712560",
    "end": "716240"
  },
  {
    "text": "based um server right so and in the r in",
    "start": "716240",
    "end": "721399"
  },
  {
    "text": "the SL you mentioned there no GC uh does",
    "start": "721399",
    "end": "725200"
  },
  {
    "text": "that mean there's still application",
    "start": "725200",
    "end": "727480"
  },
  {
    "text": "Level need to handle all the leaking",
    "start": "727480",
    "end": "730320"
  },
  {
    "text": "handle all this crashing somewhere how",
    "start": "730320",
    "end": "734000"
  },
  {
    "text": "that uh get a handled yeah so rust",
    "start": "734000",
    "end": "737600"
  },
  {
    "start": "736000",
    "end": "803000"
  },
  {
    "text": "itself like doesn't prevent there is",
    "start": "737600",
    "end": "740320"
  },
  {
    "text": "it's still possible to leak but the uh",
    "start": "740320",
    "end": "742839"
  },
  {
    "text": "the main concept is that the language",
    "start": "742839",
    "end": "744680"
  },
  {
    "text": "itself as long as you don't use the",
    "start": "744680",
    "end": "746199"
  },
  {
    "text": "unsafe Escape hatches that are provided",
    "start": "746199",
    "end": "748519"
  },
  {
    "text": "what you're writing will statically",
    "start": "748519",
    "end": "750800"
  },
  {
    "text": "deallocate itself at the end of scope so",
    "start": "750800",
    "end": "752760"
  },
  {
    "text": "it uses um your classic uh scope",
    "start": "752760",
    "end": "757519"
  },
  {
    "text": "bindings to control when to deallocate",
    "start": "757519",
    "end": "761160"
  },
  {
    "text": "memory um but it provides tools to also",
    "start": "761160",
    "end": "763720"
  },
  {
    "text": "go above and beyond like reference",
    "start": "763720",
    "end": "765360"
  },
  {
    "text": "counting and things like you might know",
    "start": "765360",
    "end": "767680"
  },
  {
    "text": "available to you like in C++ like unique",
    "start": "767680",
    "end": "770000"
  },
  {
    "text": "pointer and shared pointer those are",
    "start": "770000",
    "end": "771480"
  },
  {
    "text": "things that are built into the standard",
    "start": "771480",
    "end": "772639"
  },
  {
    "text": "library that provide you tools to kind",
    "start": "772639",
    "end": "774800"
  },
  {
    "text": "of control the memory um so in theory",
    "start": "774800",
    "end": "777800"
  },
  {
    "text": "with Russ as long as you're not you",
    "start": "777800",
    "end": "779800"
  },
  {
    "text": "dereferencing pointers manually and",
    "start": "779800",
    "end": "781680"
  },
  {
    "text": "you're using the constructs that are",
    "start": "781680",
    "end": "782920"
  },
  {
    "text": "provided for you you're not going to",
    "start": "782920",
    "end": "784720"
  },
  {
    "text": "have any n pointer dreference issues um",
    "start": "784720",
    "end": "788240"
  },
  {
    "text": "or memory leaks though it is still",
    "start": "788240",
    "end": "790160"
  },
  {
    "text": "possible in some cases to create memory",
    "start": "790160",
    "end": "792480"
  },
  {
    "text": "leaks but in most basic uses of code",
    "start": "792480",
    "end": "795199"
  },
  {
    "text": "things will get deallocated at the end",
    "start": "795199",
    "end": "796880"
  },
  {
    "text": "of the scope or manage you know",
    "start": "796880",
    "end": "798959"
  },
  {
    "text": "dfference count or whatever that",
    "start": "798959",
    "end": "802440"
  },
  {
    "start": "803000",
    "end": "906000"
  },
  {
    "text": "is um it depends what type of crashes",
    "start": "803320",
    "end": "806360"
  },
  {
    "text": "you're talking about I mean like if it's",
    "start": "806360",
    "end": "807920"
  },
  {
    "text": "a dfference ing of a pointer which I",
    "start": "807920",
    "end": "810160"
  },
  {
    "text": "would imagine is the most common sort of",
    "start": "810160",
    "end": "812079"
  },
  {
    "text": "like seg faal style crashing that's",
    "start": "812079",
    "end": "814839"
  },
  {
    "text": "basically never going to happen in Rust",
    "start": "814839",
    "end": "817839"
  },
  {
    "text": "um I I'm putting a quotation mark on",
    "start": "817839",
    "end": "820279"
  },
  {
    "text": "that because it's still possible and we",
    "start": "820279",
    "end": "822199"
  },
  {
    "text": "do rap purely unsafe C style code with",
    "start": "822199",
    "end": "826320"
  },
  {
    "text": "abstractions and it's possible to have a",
    "start": "826320",
    "end": "828279"
  },
  {
    "text": "bug in that um but in general your code",
    "start": "828279",
    "end": "831959"
  },
  {
    "text": "won't crash for pointer style D",
    "start": "831959",
    "end": "834560"
  },
  {
    "text": "referencing things now rust doesn't",
    "start": "834560",
    "end": "836639"
  },
  {
    "text": "prevent you from you know having a",
    "start": "836639",
    "end": "840079"
  },
  {
    "text": "branch in your code that you didn't",
    "start": "840079",
    "end": "842000"
  },
  {
    "text": "expect and for your code to blow up that",
    "start": "842000",
    "end": "844519"
  },
  {
    "text": "is still possible but with the type",
    "start": "844519",
    "end": "846720"
  },
  {
    "text": "system and the borrow checking you kind",
    "start": "846720",
    "end": "849360"
  },
  {
    "text": "of prevent a lot of those very common",
    "start": "849360",
    "end": "852040"
  },
  {
    "text": "and frustrating kind of crashes where",
    "start": "852040",
    "end": "854360"
  },
  {
    "text": "you don't know where they're coming from",
    "start": "854360",
    "end": "856600"
  },
  {
    "text": "uh mainly segals because usually segals",
    "start": "856600",
    "end": "859079"
  },
  {
    "text": "don't provide you a line of where it",
    "start": "859079",
    "end": "860480"
  },
  {
    "text": "blew up um so Russ prevents those things",
    "start": "860480",
    "end": "863959"
  },
  {
    "text": "uh for sure oh just a quicker followup",
    "start": "863959",
    "end": "866600"
  },
  {
    "text": "um so when we trade off the Java Plus uh",
    "start": "866600",
    "end": "871480"
  },
  {
    "text": "ver C++ uh server right so one big",
    "start": "871480",
    "end": "875560"
  },
  {
    "text": "benefit for Java is if y IPC request",
    "start": "875560",
    "end": "879920"
  },
  {
    "text": "come in uh when the server handle that",
    "start": "879920",
    "end": "883040"
  },
  {
    "text": "this IPC something through some random",
    "start": "883040",
    "end": "886199"
  },
  {
    "text": "exception uh this can be uh caught um in",
    "start": "886199",
    "end": "890240"
  },
  {
    "text": "the server and uh uh handled in this",
    "start": "890240",
    "end": "893759"
  },
  {
    "text": "request and the other request can leave",
    "start": "893759",
    "end": "896880"
  },
  {
    "text": "um untouched right so for plus is do we",
    "start": "896880",
    "end": "900480"
  },
  {
    "text": "get the same benefit for the in the GPC",
    "start": "900480",
    "end": "905320"
  },
  {
    "text": "stack yeah so on top of the memory",
    "start": "905320",
    "end": "908079"
  },
  {
    "start": "906000",
    "end": "991000"
  },
  {
    "text": "safety right we prevent those entire",
    "start": "908079",
    "end": "909680"
  },
  {
    "text": "error cases there's kind of two",
    "start": "909680",
    "end": "911480"
  },
  {
    "text": "different error paths that Russ provide",
    "start": "911480",
    "end": "913160"
  },
  {
    "text": "one is your traditional error handling",
    "start": "913160",
    "end": "915920"
  },
  {
    "text": "which I think is what you're talking",
    "start": "915920",
    "end": "917040"
  },
  {
    "text": "about right let's say you know there's",
    "start": "917040",
    "end": "918839"
  },
  {
    "text": "some handleable error that comes from an",
    "start": "918839",
    "end": "921360"
  },
  {
    "text": "RPC call you get that return to you",
    "start": "921360",
    "end": "924320"
  },
  {
    "text": "without a crashing you basically get a a",
    "start": "924320",
    "end": "926160"
  },
  {
    "text": "result object return that either returns",
    "start": "926160",
    "end": "928519"
  },
  {
    "text": "something that is okay like a valid RPC",
    "start": "928519",
    "end": "930839"
  },
  {
    "text": "response or an error um and then the",
    "start": "930839",
    "end": "933079"
  },
  {
    "text": "other error path is a panic which is",
    "start": "933079",
    "end": "935000"
  },
  {
    "text": "kind of like your unhandled exception",
    "start": "935000",
    "end": "937279"
  },
  {
    "text": "path that you might have in Java um",
    "start": "937279",
    "end": "939959"
  },
  {
    "text": "there's no such thing as try catch and",
    "start": "939959",
    "end": "941360"
  },
  {
    "text": "rust there is a way to kind of catch a",
    "start": "941360",
    "end": "942920"
  },
  {
    "text": "panic but that's done at like the system",
    "start": "942920",
    "end": "944959"
  },
  {
    "text": "level to catch you know like oh I did",
    "start": "944959",
    "end": "946959"
  },
  {
    "text": "not expect this Panic to go off but 99%",
    "start": "946959",
    "end": "950040"
  },
  {
    "text": "of errors that are you would want to",
    "start": "950040",
    "end": "951880"
  },
  {
    "text": "handle come through the return type in",
    "start": "951880",
    "end": "955480"
  },
  {
    "text": "Rust it's a it's an enum essentially",
    "start": "955480",
    "end": "957160"
  },
  {
    "text": "that returns you know either successful",
    "start": "957160",
    "end": "959279"
  },
  {
    "text": "or false and so uh you would always",
    "start": "959279",
    "end": "961240"
  },
  {
    "text": "you're always forced to handle that as",
    "start": "961240",
    "end": "964600"
  },
  {
    "text": "well great could we talk a little bit",
    "start": "965360",
    "end": "967560"
  },
  {
    "text": "about the protuff feature set that you",
    "start": "967560",
    "end": "969880"
  },
  {
    "text": "expect to support so I took a look at",
    "start": "969880",
    "end": "971959"
  },
  {
    "text": "Prost and also rest protuff and um there",
    "start": "971959",
    "end": "974959"
  },
  {
    "text": "were a couple things that I'm hoping you",
    "start": "974959",
    "end": "976839"
  },
  {
    "text": "can confirm will be addressed uh one you",
    "start": "976839",
    "end": "980000"
  },
  {
    "text": "mentioned was support for missing Fields",
    "start": "980000",
    "end": "982839"
  },
  {
    "text": "um I think the Prost developer said I'm",
    "start": "982839",
    "end": "984600"
  },
  {
    "text": "not going to do that at all so uh there",
    "start": "984600",
    "end": "987279"
  },
  {
    "text": "was that one um maybe you could comment",
    "start": "987279",
    "end": "989920"
  },
  {
    "text": "on that and then I'll ask you about the",
    "start": "989920",
    "end": "990920"
  },
  {
    "text": "other one yeah we could yeah if you want",
    "start": "990920",
    "end": "992519"
  },
  {
    "start": "991000",
    "end": "1061000"
  },
  {
    "text": "to talk about what the Google protuff",
    "start": "992519",
    "end": "994639"
  },
  {
    "text": "rust has yeah that will be supported um",
    "start": "994639",
    "end": "998040"
  },
  {
    "text": "basically the the goal of the of the",
    "start": "998040",
    "end": "1000040"
  },
  {
    "text": "Google implementation is to fully",
    "start": "1000040",
    "end": "1001600"
  },
  {
    "text": "conform to the spec and behave exactly",
    "start": "1001600",
    "end": "1004360"
  },
  {
    "text": "like it does in the other major",
    "start": "1004360",
    "end": "1005959"
  },
  {
    "text": "languages so um yeah all of the behavior",
    "start": "1005959",
    "end": "1009639"
  },
  {
    "text": "around you know if there's an unset um",
    "start": "1009639",
    "end": "1012880"
  },
  {
    "text": "field like dealing with the default",
    "start": "1012880",
    "end": "1014279"
  },
  {
    "text": "value being nonzero if there's you know",
    "start": "1014279",
    "end": "1016920"
  },
  {
    "text": "unknown Fields those will get re",
    "start": "1016920",
    "end": "1018480"
  },
  {
    "text": "serialized so if you put them back on",
    "start": "1018480",
    "end": "1020120"
  },
  {
    "text": "the wire they'll come unchanged these",
    "start": "1020120",
    "end": "1021959"
  },
  {
    "text": "are things that aren't done in PR in",
    "start": "1021959",
    "end": "1023880"
  },
  {
    "text": "terms of PR um changing what it supports",
    "start": "1023880",
    "end": "1027160"
  },
  {
    "text": "I think that like what we have now with",
    "start": "1027160",
    "end": "1029000"
  },
  {
    "text": "PR is what we're going to end up with um",
    "start": "1029000",
    "end": "1031480"
  },
  {
    "text": "and unless there's a bug that needs",
    "start": "1031480",
    "end": "1032959"
  },
  {
    "text": "fixing or something like that um right",
    "start": "1032959",
    "end": "1036000"
  },
  {
    "text": "so I'm not really considering this more",
    "start": "1036000",
    "end": "1037640"
  },
  {
    "text": "of a bug yeah I'm not expecting anything",
    "start": "1037640",
    "end": "1039558"
  },
  {
    "text": "new to come to Pro but it's more about",
    "start": "1039559",
    "end": "1042360"
  },
  {
    "text": "the your the Google protuff",
    "start": "1042360",
    "end": "1045038"
  },
  {
    "text": "implementation so so what this means is",
    "start": "1045039",
    "end": "1047880"
  },
  {
    "text": "that if I have a buff that has some",
    "start": "1047880",
    "end": "1049960"
  },
  {
    "text": "known fields in my my Handler it gets a",
    "start": "1049960",
    "end": "1053160"
  },
  {
    "text": "message that has unknown Fields they'll",
    "start": "1053160",
    "end": "1055000"
  },
  {
    "text": "go someplace they'll be loaded into some",
    "start": "1055000",
    "end": "1057440"
  },
  {
    "text": "structure that I could then read to see",
    "start": "1057440",
    "end": "1059360"
  },
  {
    "text": "the Dynamics uh yeah unfortunately um",
    "start": "1059360",
    "end": "1063960"
  },
  {
    "text": "nobody from the Google protuff team",
    "start": "1063960",
    "end": "1065880"
  },
  {
    "text": "could make it here uh to the conference",
    "start": "1065880",
    "end": "1067840"
  },
  {
    "text": "otherwise I would refer you to them um",
    "start": "1067840",
    "end": "1069760"
  },
  {
    "text": "I'm just sort of delivering the the",
    "start": "1069760",
    "end": "1071120"
  },
  {
    "text": "announcement message from them um so I'm",
    "start": "1071120",
    "end": "1073960"
  },
  {
    "text": "not sure on this particular one I have",
    "start": "1073960",
    "end": "1076000"
  },
  {
    "text": "looked at their API a decent amount but",
    "start": "1076000",
    "end": "1078159"
  },
  {
    "text": "I don't uh recall offand the exact",
    "start": "1078159",
    "end": "1081000"
  },
  {
    "text": "answer to that I believe there should be",
    "start": "1081000",
    "end": "1082440"
  },
  {
    "text": "some way to access the unknown field so",
    "start": "1082440",
    "end": "1084240"
  },
  {
    "text": "the other thing that I really struggled",
    "start": "1084240",
    "end": "1085559"
  },
  {
    "text": "with was Json serialization of protuff",
    "start": "1085559",
    "end": "1088520"
  },
  {
    "text": "messages which is easy in the other",
    "start": "1088520",
    "end": "1091120"
  },
  {
    "text": "languages and it's just really difficult",
    "start": "1091120",
    "end": "1093440"
  },
  {
    "text": "in Russ so is that something that's",
    "start": "1093440",
    "end": "1095120"
  },
  {
    "text": "going to be built in or would I have to",
    "start": "1095120",
    "end": "1096760"
  },
  {
    "text": "add an option to get that with Russ",
    "start": "1096760",
    "end": "1099280"
  },
  {
    "text": "protuff uh I guess similar to the other",
    "start": "1099280",
    "end": "1101559"
  },
  {
    "text": "question I I honestly haven't heard",
    "start": "1101559",
    "end": "1103480"
  },
  {
    "text": "about that one but um I mean you can",
    "start": "1103480",
    "end": "1106400"
  },
  {
    "text": "certainly reach out to the protuff team",
    "start": "1106400",
    "end": "1108280"
  },
  {
    "text": "and if you're not getting a reply from",
    "start": "1108280",
    "end": "1110320"
  },
  {
    "text": "them you can let me know um but through",
    "start": "1110320",
    "end": "1112799"
  },
  {
    "text": "through their GitHub repo I think you",
    "start": "1112799",
    "end": "1114120"
  },
  {
    "text": "can create an issue and ask questions",
    "start": "1114120",
    "end": "1116039"
  },
  {
    "text": "like that I will say that for Google",
    "start": "1116039",
    "end": "1120159"
  },
  {
    "text": "internal usage unknown field support is",
    "start": "1120159",
    "end": "1123480"
  },
  {
    "text": "a hard",
    "start": "1123480",
    "end": "1124960"
  },
  {
    "text": "requirement you know learned that lesson",
    "start": "1124960",
    "end": "1128640"
  },
  {
    "text": "and years ago not surpris to me but",
    "start": "1128640",
    "end": "1131400"
  },
  {
    "text": "certainly surpris people that's so you",
    "start": "1131400",
    "end": "1135919"
  },
  {
    "text": "have confidence there will be a good",
    "start": "1135919",
    "end": "1137200"
  },
  {
    "text": "story there",
    "start": "1137200",
    "end": "1139320"
  },
  {
    "text": "Json is a space i p l attention",
    "start": "1139320",
    "end": "1142600"
  },
  {
    "text": "to unnown field absolutely yeah but I",
    "start": "1142600",
    "end": "1145960"
  },
  {
    "text": "think like having worked in client",
    "start": "1145960",
    "end": "1148400"
  },
  {
    "text": "libraries and things for Google apis",
    "start": "1148400",
    "end": "1150360"
  },
  {
    "text": "Json support was really important and so",
    "start": "1150360",
    "end": "1154440"
  },
  {
    "text": "I'm would be very surprised if it wasn't",
    "start": "1154440",
    "end": "1156559"
  },
  {
    "text": "but it'd be nice to hear that it is yeah",
    "start": "1156559",
    "end": "1158840"
  },
  {
    "text": "I mean the goal of the protuff R Us",
    "start": "1158840",
    "end": "1160760"
  },
  {
    "text": "project is to make protuff accessible",
    "start": "1160760",
    "end": "1163640"
  },
  {
    "text": "and rust for Google to use internally",
    "start": "1163640",
    "end": "1166400"
  },
  {
    "text": "and so any use cases that are important",
    "start": "1166400",
    "end": "1169039"
  },
  {
    "text": "for the other languages should be",
    "start": "1169039",
    "end": "1171320"
  },
  {
    "text": "important for us as well and so I would",
    "start": "1171320",
    "end": "1173280"
  },
  {
    "text": "be surprised to hear that any of these",
    "start": "1173280",
    "end": "1175000"
  },
  {
    "text": "things aren't done the same way as C++ I",
    "start": "1175000",
    "end": "1177600"
  },
  {
    "text": "think you sort of hinted that if go if",
    "start": "1177600",
    "end": "1180200"
  },
  {
    "text": "Google ever offered client libraries for",
    "start": "1180200",
    "end": "1182320"
  },
  {
    "text": "rust they would be based on this right",
    "start": "1182320",
    "end": "1184720"
  },
  {
    "text": "they'll be using protuff rust Google's",
    "start": "1184720",
    "end": "1186240"
  },
  {
    "text": "client libraries will use protuff rust",
    "start": "1186240",
    "end": "1189799"
  },
  {
    "text": "instead of pro",
    "start": "1189799",
    "end": "1192720"
  },
  {
    "text": "yes no yes uh yeah my question so we",
    "start": "1197120",
    "end": "1200760"
  },
  {
    "text": "have quite our or has quite a few use",
    "start": "1200760",
    "end": "1203200"
  },
  {
    "text": "cases for like usage of tonic and BOS",
    "start": "1203200",
    "end": "1206200"
  },
  {
    "text": "Prost um do you know what the migration",
    "start": "1206200",
    "end": "1209520"
  },
  {
    "text": "story is going to look like here if",
    "start": "1209520",
    "end": "1212200"
  },
  {
    "text": "assuming that tonic and Prost are going",
    "start": "1212200",
    "end": "1214200"
  },
  {
    "text": "to be kind of phased out as it's t being",
    "start": "1214200",
    "end": "1217640"
  },
  {
    "text": "taken over by Google so so definitely",
    "start": "1217640",
    "end": "1220360"
  },
  {
    "start": "1219000",
    "end": "1425000"
  },
  {
    "text": "the answer is that we don't know yet",
    "start": "1220360",
    "end": "1222240"
  },
  {
    "text": "because we haven't gotten there yet um",
    "start": "1222240",
    "end": "1224400"
  },
  {
    "text": "but we have some Vision or at least I",
    "start": "1224400",
    "end": "1226840"
  },
  {
    "text": "have some Vision on how you know the",
    "start": "1226840",
    "end": "1229320"
  },
  {
    "text": "project is going to grow up in this",
    "start": "1229320",
    "end": "1230720"
  },
  {
    "text": "sense um well first I I'll talk about",
    "start": "1230720",
    "end": "1232799"
  },
  {
    "text": "tonic like tonic and Prost I don't think",
    "start": "1232799",
    "end": "1234919"
  },
  {
    "text": "are going to be deprecated I don't like",
    "start": "1234919",
    "end": "1237000"
  },
  {
    "text": "that term it's going to be still",
    "start": "1237000",
    "end": "1238240"
  },
  {
    "text": "supported it's going to still be an",
    "start": "1238240",
    "end": "1240159"
  },
  {
    "text": "option for users so I don't expect that",
    "start": "1240159",
    "end": "1243200"
  },
  {
    "text": "that will just disappear off the plate",
    "start": "1243200",
    "end": "1245720"
  },
  {
    "text": "um migration wise the goal for this new",
    "start": "1245720",
    "end": "1249039"
  },
  {
    "text": "implementation is that like most of the",
    "start": "1249039",
    "end": "1251840"
  },
  {
    "text": "code that you touch or that you have",
    "start": "1251840",
    "end": "1253320"
  },
  {
    "text": "available to yourself will still be",
    "start": "1253320",
    "end": "1254640"
  },
  {
    "text": "usable uh granted as long as you don't",
    "start": "1254640",
    "end": "1256799"
  },
  {
    "text": "find any major issues or fundamental",
    "start": "1256799",
    "end": "1259559"
  },
  {
    "text": "problems which we're still currently in",
    "start": "1259559",
    "end": "1261240"
  },
  {
    "text": "the phase of exploring which is why I",
    "start": "1261240",
    "end": "1262559"
  },
  {
    "text": "can't tell you for sure um but if",
    "start": "1262559",
    "end": "1265679"
  },
  {
    "text": "everything goes to plan the idea is that",
    "start": "1265679",
    "end": "1267919"
  },
  {
    "text": "it should almost not be drop in but",
    "start": "1267919",
    "end": "1270480"
  },
  {
    "text": "Everything You Touch mostly as a user",
    "start": "1270480",
    "end": "1272200"
  },
  {
    "text": "should be workable and still continue to",
    "start": "1272200",
    "end": "1273880"
  },
  {
    "text": "work and what will happen is the like",
    "start": "1273880",
    "end": "1276559"
  },
  {
    "text": "deep level lowl implementation details",
    "start": "1276559",
    "end": "1279080"
  },
  {
    "text": "will kind of completely change right and",
    "start": "1279080",
    "end": "1281400"
  },
  {
    "text": "that's not something that you should",
    "start": "1281400",
    "end": "1282320"
  },
  {
    "text": "worry about because the API kind of",
    "start": "1282320",
    "end": "1284559"
  },
  {
    "text": "already encapsulates most of that um so",
    "start": "1284559",
    "end": "1287159"
  },
  {
    "text": "like I would like to say that the",
    "start": "1287159",
    "end": "1288159"
  },
  {
    "text": "migration will be pretty painless like",
    "start": "1288159",
    "end": "1291159"
  },
  {
    "text": "the vision that I have it should be",
    "start": "1291159",
    "end": "1292400"
  },
  {
    "text": "pretty simple but uh again like there's",
    "start": "1292400",
    "end": "1295200"
  },
  {
    "text": "still a lot of unknowns to uncover and",
    "start": "1295200",
    "end": "1297240"
  },
  {
    "text": "uh grpc seems simple but there's a lot",
    "start": "1297240",
    "end": "1299360"
  },
  {
    "text": "of complexities under the hood",
    "start": "1299360",
    "end": "1300440"
  },
  {
    "text": "especially when we get into stuff like",
    "start": "1300440",
    "end": "1301840"
  },
  {
    "text": "load balancing and XDS which is the",
    "start": "1301840",
    "end": "1304120"
  },
  {
    "text": "reason it doesn't exist currently in",
    "start": "1304120",
    "end": "1305440"
  },
  {
    "text": "tonic is because it's highly complicated",
    "start": "1305440",
    "end": "1308039"
  },
  {
    "text": "um and so you know we might uncover",
    "start": "1308039",
    "end": "1309760"
  },
  {
    "text": "things as we go but the goal will be to",
    "start": "1309760",
    "end": "1312320"
  },
  {
    "text": "make it as painless as possible and the",
    "start": "1312320",
    "end": "1314200"
  },
  {
    "text": "migration as simple as possible so that",
    "start": "1314200",
    "end": "1316279"
  },
  {
    "text": "way you know users like you that you",
    "start": "1316279",
    "end": "1318120"
  },
  {
    "text": "know are you're using pretty heavily",
    "start": "1318120",
    "end": "1319520"
  },
  {
    "text": "tonic and Prost uh shouldn't have that",
    "start": "1319520",
    "end": "1321880"
  },
  {
    "text": "much of migration now I think there",
    "start": "1321880",
    "end": "1324360"
  },
  {
    "text": "might be more paino migrating from Prost",
    "start": "1324360",
    "end": "1327320"
  },
  {
    "text": "to the new Proto buff rust I suspect um",
    "start": "1327320",
    "end": "1329880"
  },
  {
    "text": "that is definitely going to bleed more",
    "start": "1329880",
    "end": "1331360"
  },
  {
    "text": "into your code um and I have not touched",
    "start": "1331360",
    "end": "1335679"
  },
  {
    "text": "or sorry I've not seen the protu frost",
    "start": "1335679",
    "end": "1337520"
  },
  {
    "text": "code yet um but I knowing some of the",
    "start": "1337520",
    "end": "1340760"
  },
  {
    "text": "limitations with Prost and some of the",
    "start": "1340760",
    "end": "1342880"
  },
  {
    "text": "design goal differences I suspect that",
    "start": "1342880",
    "end": "1345000"
  },
  {
    "text": "that is going to probably be the larger",
    "start": "1345000",
    "end": "1347440"
  },
  {
    "text": "pain Point um um but again I think it's",
    "start": "1347440",
    "end": "1351039"
  },
  {
    "text": "in general that code is pretty isolated",
    "start": "1351039",
    "end": "1352840"
  },
  {
    "text": "and it shouldn't be too bad as long as",
    "start": "1352840",
    "end": "1354559"
  },
  {
    "text": "it doesn't you know leak everywhere so",
    "start": "1354559",
    "end": "1357080"
  },
  {
    "text": "um I think it's the most that we know",
    "start": "1357080",
    "end": "1359240"
  },
  {
    "text": "right now and definitely in the next few",
    "start": "1359240",
    "end": "1360880"
  },
  {
    "text": "months as we get towards the",
    "start": "1360880",
    "end": "1362880"
  },
  {
    "text": "implementation side of things we will",
    "start": "1362880",
    "end": "1365039"
  },
  {
    "text": "definitely uncover what that will look",
    "start": "1365039",
    "end": "1367840"
  },
  {
    "text": "like so right yeah I have seen the apis",
    "start": "1367840",
    "end": "1371080"
  },
  {
    "text": "from protuff rust and they are",
    "start": "1371080",
    "end": "1373240"
  },
  {
    "text": "substantially different because in PR",
    "start": "1373240",
    "end": "1376000"
  },
  {
    "text": "you directly access the fields of a",
    "start": "1376000",
    "end": "1377720"
  },
  {
    "text": "struct in order to uh get the message",
    "start": "1377720",
    "end": "1380080"
  },
  {
    "text": "data but in uh pru R Us they'll be",
    "start": "1380080",
    "end": "1382960"
  },
  {
    "text": "behind accessors instead so it's going",
    "start": "1382960",
    "end": "1385559"
  },
  {
    "text": "to look very different do we have time",
    "start": "1385559",
    "end": "1387760"
  },
  {
    "text": "for more questions um I think we one",
    "start": "1387760",
    "end": "1391240"
  },
  {
    "text": "more we might need to move the",
    "start": "1391240",
    "end": "1393400"
  },
  {
    "text": "discussion on theway make sure people",
    "start": "1393400",
    "end": "1396279"
  },
  {
    "text": "get for the next yeah so we can do one",
    "start": "1396279",
    "end": "1398200"
  },
  {
    "text": "more but then feel free to just find",
    "start": "1398200",
    "end": "1399760"
  },
  {
    "text": "Lucho or I",
    "start": "1399760",
    "end": "1402919"
  },
  {
    "text": "later is my turn okay go ahead uh yeah",
    "start": "1402919",
    "end": "1406159"
  },
  {
    "text": "so I just uh wanted to know is rust",
    "start": "1406159",
    "end": "1409480"
  },
  {
    "text": "approved language inside Google for",
    "start": "1409480",
    "end": "1412279"
  },
  {
    "text": "developing applications and so rust oh",
    "start": "1412279",
    "end": "1415159"
  },
  {
    "text": "sorry go ahead and the second part is uh",
    "start": "1415159",
    "end": "1417720"
  },
  {
    "text": "how many people in Google or outside",
    "start": "1417720",
    "end": "1420400"
  },
  {
    "text": "Google our staff for this entire effort",
    "start": "1420400",
    "end": "1423159"
  },
  {
    "text": "G grpc and",
    "start": "1423159",
    "end": "1424720"
  },
  {
    "text": "protuff um okay so inside of Google um",
    "start": "1424720",
    "end": "1428000"
  },
  {
    "start": "1425000",
    "end": "1477000"
  },
  {
    "text": "rust is kind of conditionally like",
    "start": "1428000",
    "end": "1431080"
  },
  {
    "text": "experimentally approved right now so we",
    "start": "1431080",
    "end": "1433400"
  },
  {
    "text": "are we are using it but not very widely",
    "start": "1433400",
    "end": "1436279"
  },
  {
    "text": "yet um and um in terms of this project",
    "start": "1436279",
    "end": "1441039"
  },
  {
    "text": "um at the this exact moment it's",
    "start": "1441039",
    "end": "1443919"
  },
  {
    "text": "essentially Lucho is helping me do some",
    "start": "1443919",
    "end": "1446400"
  },
  {
    "text": "design and I'm splitting my time between",
    "start": "1446400",
    "end": "1448279"
  },
  {
    "text": "go and rust um but we expect to be",
    "start": "1448279",
    "end": "1450600"
  },
  {
    "text": "Staffing up and actually doing real",
    "start": "1450600",
    "end": "1453039"
  },
  {
    "text": "implementation with uh two or three",
    "start": "1453039",
    "end": "1455240"
  },
  {
    "text": "people um working on this in the near",
    "start": "1455240",
    "end": "1458000"
  },
  {
    "text": "future like as soon as next quarter",
    "start": "1458000",
    "end": "1459480"
  },
  {
    "text": "potentially but yeah some of those",
    "start": "1459480",
    "end": "1461159"
  },
  {
    "text": "details are are TBD sorry I was going to",
    "start": "1461159",
    "end": "1464320"
  },
  {
    "text": "add like we're doing the planning for",
    "start": "1464320",
    "end": "1465720"
  },
  {
    "text": "next year so this is definitely one of",
    "start": "1465720",
    "end": "1467600"
  },
  {
    "text": "the top prior I will to more um for you",
    "start": "1467600",
    "end": "1471159"
  },
  {
    "text": "know the next few",
    "start": "1471159",
    "end": "1472919"
  },
  {
    "text": "years okay all right well thank you",
    "start": "1472919",
    "end": "1474919"
  },
  {
    "text": "everyone for coming enjoy the rest of",
    "start": "1474919",
    "end": "1476520"
  },
  {
    "text": "your day",
    "start": "1476520",
    "end": "1479559"
  }
]