[
  {
    "text": "welcome everybody to the open policy agent project intro and community update",
    "start": "80",
    "end": "6640"
  },
  {
    "text": "hey everyone my name is rita zang i'm an engineer at microsoft and i am one of the maintainers of the",
    "start": "6720",
    "end": "12639"
  },
  {
    "text": "gatekeeper project and i am patrick east an engineer at",
    "start": "12639",
    "end": "17680"
  },
  {
    "text": "styra and a open maintainer let's talk about the open policy agent",
    "start": "17680",
    "end": "24720"
  },
  {
    "text": "originally founded by styra in 2016 as open source donated to the cncf and",
    "start": "24720",
    "end": "30960"
  },
  {
    "text": "is a sandbox project in 2018 since then is grown to become an incubating project in 2019",
    "start": "30960",
    "end": "37760"
  },
  {
    "text": "and is currently on track for graduation the contributor base is pretty diverse",
    "start": "37760",
    "end": "43200"
  },
  {
    "text": "we've got 30 plus companies which includes both you know kind of the upstream usual suspects as well as",
    "start": "43200",
    "end": "49680"
  },
  {
    "text": "end users contributing back to oppa there's with that you know 150 plus developers i",
    "start": "49680",
    "end": "55680"
  },
  {
    "text": "think this slide maybe even a little old i think it's grown since then",
    "start": "55680",
    "end": "60719"
  },
  {
    "text": "the user base is also pretty extensive we list a few on here if you check out",
    "start": "60719",
    "end": "66159"
  },
  {
    "text": "the adopters file in the open policy agent repository you'll see that there's a lot of kind of name brand cncf landscape customers",
    "start": "66159",
    "end": "75119"
  },
  {
    "text": "so what is oppa why is there one like this first and foremost at its core you get rego a declarative",
    "start": "75119",
    "end": "81600"
  },
  {
    "text": "policy language this lets you concisely express policies in a way that",
    "start": "81600",
    "end": "86880"
  },
  {
    "text": "lets oppa evaluate them efficiently with the language you're getting all these built-in functions",
    "start": "86880",
    "end": "92640"
  },
  {
    "text": "that help you do very common policy things anything from math or you know handling jots is a very very",
    "start": "92640",
    "end": "99759"
  },
  {
    "text": "common use case in authorization as well as giving you a really nice sort",
    "start": "99759",
    "end": "104960"
  },
  {
    "text": "of uh expression like the syntax for expressing policy sort of logic it's you know it's",
    "start": "104960",
    "end": "112720"
  },
  {
    "text": "tailored for that it's 100 built to be a policy language the cool",
    "start": "112720",
    "end": "117920"
  },
  {
    "text": "thing is the performance optimizations that you get in oppa are pretty extensive uh not only can it do things like rule",
    "start": "117920",
    "end": "124479"
  },
  {
    "text": "indexing it can partially evaluate policies this means that you can pre-process a",
    "start": "124479",
    "end": "129840"
  },
  {
    "text": "policy decision ahead of time and then only process the unknown parts",
    "start": "129840",
    "end": "134959"
  },
  {
    "text": "at you know actual like authorization check time this language you get a runtime",
    "start": "134959",
    "end": "143200"
  },
  {
    "text": "which can be used as either a library everything's in golang or you can run it as a server so opa",
    "start": "143200",
    "end": "150560"
  },
  {
    "text": "provides a little http server that sits in front of the runtime and allows you to basically run it",
    "start": "150560",
    "end": "156560"
  },
  {
    "text": "very common as a side car a host level daemon the other thing you get with that server",
    "start": "156560",
    "end": "163680"
  },
  {
    "text": "and also available with the apis but most people use it with the server are the management apis",
    "start": "163680",
    "end": "168879"
  },
  {
    "text": "so the ability for oppa to basically give you like the the full",
    "start": "168879",
    "end": "174319"
  },
  {
    "text": "life cycle management of of how these these agents are going to be running so",
    "start": "174319",
    "end": "180800"
  },
  {
    "text": "the bundle service bundles basically being a pack of policies and data",
    "start": "180800",
    "end": "186159"
  },
  {
    "text": "that you can configure opa to go pull down and load and use status apis for oppa sending status out",
    "start": "186159",
    "end": "194239"
  },
  {
    "text": "logs everybody you know like for for authorization it's very important",
    "start": "194239",
    "end": "199280"
  },
  {
    "text": "that you keep track of what decisions were made oppa has a you know first class",
    "start": "199280",
    "end": "204319"
  },
  {
    "text": "feature for doing decision logging uh that log service gives you that high fidelity",
    "start": "204319",
    "end": "209840"
  },
  {
    "text": "uh record of what the agent has actually done as well as discovery api this thing",
    "start": "209840",
    "end": "216560"
  },
  {
    "text": "essentially lets you do dynamic configuration and policy distribution it's another bundle of configuration",
    "start": "216560",
    "end": "224799"
  },
  {
    "text": "the last piece of this puzzle is how do you make those policies how do you you know",
    "start": "224799",
    "end": "230239"
  },
  {
    "text": "optimize them uh so oppa provides a set of cli tools for letting you build test you know",
    "start": "230239",
    "end": "236959"
  },
  {
    "text": "check everything you need to do to these policies and the you know the source code for them as",
    "start": "236959",
    "end": "243120"
  },
  {
    "text": "well as integrations with vs code with soon to be intellij",
    "start": "243120",
    "end": "248560"
  },
  {
    "text": "lots of different editors plus functionality for doing tracing and",
    "start": "248560",
    "end": "254480"
  },
  {
    "text": "performance analysis profiling that sort of thing the last thing is the playground which i'm actually going to do a demo of in a",
    "start": "254480",
    "end": "260639"
  },
  {
    "text": "little bit so i won't go too far into that one right now",
    "start": "260639",
    "end": "265520"
  },
  {
    "text": "so at a high level the open policy agent is basically decoupling your",
    "start": "266160",
    "end": "272800"
  },
  {
    "text": "your service uh whether that's a server um you know some ssh you know linux pan module uh",
    "start": "272800",
    "end": "279520"
  },
  {
    "text": "or or you know i think a lot of these ones that we show in the example here are api authorization specific but a lot of",
    "start": "279520",
    "end": "286560"
  },
  {
    "text": "people use it for uh configuration testing as well you know if if you have some policy that you",
    "start": "286560",
    "end": "291840"
  },
  {
    "text": "need to apply on a set of structured json opa can do that the cool thing here is",
    "start": "291840",
    "end": "296880"
  },
  {
    "text": "the input can be any json oh it doesn't care it's it's general purpose it's agnostic to",
    "start": "296880",
    "end": "303759"
  },
  {
    "text": "any sort of you know domain so if that input that request is a you know serialized",
    "start": "303759",
    "end": "311199"
  },
  {
    "text": "uh terraform template that's fine if it's a jot from an api request also",
    "start": "311199",
    "end": "317759"
  },
  {
    "text": "fine you know it's it's all up to the the policy that you write to you know use that input",
    "start": "317759",
    "end": "325759"
  },
  {
    "text": "so on the bottom half of this diagram here you have the rego policy of course the",
    "start": "325759",
    "end": "332240"
  },
  {
    "text": "data that basically gives you the ability to have external data for opus sounds",
    "start": "332240",
    "end": "339919"
  },
  {
    "text": "really vague and that's because it is in the sense that it can be pretty much anything you want opa",
    "start": "339919",
    "end": "346479"
  },
  {
    "text": "provides an api to push data into it as well as bundling it with the policies",
    "start": "346479",
    "end": "351759"
  },
  {
    "text": "and pulling it in the cool part here is that this lets you do context aware decisions",
    "start": "351759",
    "end": "358880"
  },
  {
    "text": "so say you have a api authorization request coming in you may have a jot on there with some",
    "start": "358880",
    "end": "364960"
  },
  {
    "text": "information about the user but it may not have information about other resources or the ability to",
    "start": "364960",
    "end": "370960"
  },
  {
    "text": "connect that user to you know some other group that's maybe not listed in the job so the cool part then",
    "start": "370960",
    "end": "378240"
  },
  {
    "text": "is you can integrate opa so that the data it has available at that time you could have pushed in those they'll",
    "start": "378240",
    "end": "384160"
  },
  {
    "text": "say group permissions or other attribute information the last thing here is the policy",
    "start": "384160",
    "end": "389759"
  },
  {
    "text": "decision being any json value out so oftentimes you're going to have",
    "start": "389759",
    "end": "394960"
  },
  {
    "text": "a boolean a yes no was this allowed but that doesn't have to be the case it",
    "start": "394960",
    "end": "400160"
  },
  {
    "text": "can be a set of changes a set of warning messages i think a common cases for kubernetes",
    "start": "400160",
    "end": "407039"
  },
  {
    "text": "as an admission controller if you wanted to do mutating decisions oppa can return back a set of patches",
    "start": "407039",
    "end": "413840"
  },
  {
    "text": "that need to be applied so let me show you a quick demo i'm",
    "start": "413840",
    "end": "420240"
  },
  {
    "text": "going to open up the playground beautiful okay this is the open policy agent",
    "start": "420240",
    "end": "428319"
  },
  {
    "text": "playground the playground is a open public site it's hosted by styra um",
    "start": "428319",
    "end": "436240"
  },
  {
    "text": "everything here is you know ready to run latest versions of oppa",
    "start": "436240",
    "end": "442240"
  },
  {
    "text": "yeah i think uh you know if you're familiar with some of the like like the go playground or other things this is a sort of common",
    "start": "442240",
    "end": "448479"
  },
  {
    "text": "language tool nowadays um there's some instructions in here when you first open this up uh basically i'd",
    "start": "448479",
    "end": "455759"
  },
  {
    "text": "recommend anybody who does this read through the the sort of readme here at the top",
    "start": "455759",
    "end": "460960"
  },
  {
    "text": "um crash course into rego policy syntax uh this stuff starts with the the hash",
    "start": "460960",
    "end": "468560"
  },
  {
    "text": "mark is going to be a comment so the policy itself in this hello world",
    "start": "468560",
    "end": "473759"
  },
  {
    "text": "that you get kind of you know out of the box with the playground it basically is defining a",
    "start": "473759",
    "end": "478879"
  },
  {
    "text": "rule that says hello is false by default and then it's saying that hello is true if the",
    "start": "478879",
    "end": "486800"
  },
  {
    "text": "input dot message equals world so we can see over here on the right",
    "start": "486800",
    "end": "492240"
  },
  {
    "text": "hand side the input box uh again kind of back to that diagram",
    "start": "492240",
    "end": "497440"
  },
  {
    "text": "the input is any json the you know if as long as you can serialize it into json",
    "start": "497440",
    "end": "502800"
  },
  {
    "text": "it can be an open policy agent policy input",
    "start": "502800",
    "end": "507840"
  },
  {
    "text": "in this case we have message as a field the you know value being world so",
    "start": "507919",
    "end": "514719"
  },
  {
    "text": "you know the logic of our policy says that hello should be true i will click to evaluate and view the",
    "start": "514719",
    "end": "520880"
  },
  {
    "text": "results sure enough what we find is that yes hello is true",
    "start": "520880",
    "end": "526000"
  },
  {
    "text": "this is a very basic example so let me show you something a tiny bit more complex just to give a feel for what these can",
    "start": "526000",
    "end": "531519"
  },
  {
    "text": "look like the playground is is packaged with a bunch of uh",
    "start": "531519",
    "end": "537040"
  },
  {
    "text": "like example policies that you can use to get started let's look at a rule based example",
    "start": "537040",
    "end": "544640"
  },
  {
    "text": "uh again there's a bunch of information here on kind of you know getting started that sort of thing um what we're going",
    "start": "544640",
    "end": "550720"
  },
  {
    "text": "to do is jump down and look at the policy itself so what we've done is we've designed",
    "start": "550720",
    "end": "557600"
  },
  {
    "text": "we've we've specified a package so for each rego file a complete module",
    "start": "557600",
    "end": "565519"
  },
  {
    "text": "as we call them includes a package definition essentially saying this is the the path",
    "start": "565519",
    "end": "571839"
  },
  {
    "text": "at which all these rules exist um we're going to for this example be",
    "start": "571839",
    "end": "578160"
  },
  {
    "text": "showing a you know it's our back for an api authorization use case so the rule that we're interested in is",
    "start": "578160",
    "end": "585120"
  },
  {
    "text": "allow by default we're going to say allow is false so we're sort of saying that if",
    "start": "585120",
    "end": "591200"
  },
  {
    "text": "you know unless otherwise specified when we query for app dot rbac.allow uh",
    "start": "591200",
    "end": "599040"
  },
  {
    "text": "you know it should be false when we do want to allow is when the user is an admin this syntax",
    "start": "599040",
    "end": "606640"
  },
  {
    "text": "here is essentially showing that you have an allow rule that's true if user is admin",
    "start": "606640",
    "end": "613600"
  },
  {
    "text": "is true user is admin here is a rule which is defined down below so user is",
    "start": "613600",
    "end": "620880"
  },
  {
    "text": "admin is true if there is some variable i such that data dot user roles",
    "start": "620880",
    "end": "629279"
  },
  {
    "text": "uh and you know the lookup of input.user",
    "start": "629279",
    "end": "634320"
  },
  {
    "text": "at some element i is admin so what is all this when we're looking at data this is that",
    "start": "634320",
    "end": "641279"
  },
  {
    "text": "external data from the from that diagram that i was talking about so you'll notice there's another tab",
    "start": "641279",
    "end": "646640"
  },
  {
    "text": "over here a bunch of json data again anything json serializable you can put into opa",
    "start": "646640",
    "end": "654320"
  },
  {
    "text": "the user roles key so data dot user roles so user rules we'd see that",
    "start": "654320",
    "end": "661519"
  },
  {
    "text": "they're all keyed by the user so we say user roles look up",
    "start": "661519",
    "end": "667320"
  },
  {
    "text": "input.user our input backup here in the input panel is we have users alice so we can see",
    "start": "667320",
    "end": "675760"
  },
  {
    "text": "that under user roles alice and then inside of the user roles",
    "start": "675760",
    "end": "682720"
  },
  {
    "text": "we find an admin so what that means is there is some i in this expression",
    "start": "682720",
    "end": "689600"
  },
  {
    "text": "where we can make this this ex line 48 and everybody can see that but if if",
    "start": "689600",
    "end": "695920"
  },
  {
    "text": "this line is true then user is admin is true and",
    "start": "695920",
    "end": "702240"
  },
  {
    "text": "allow is true so checking that we evaluate this thing we can see that yes indeed allow is true",
    "start": "702240",
    "end": "710399"
  },
  {
    "text": "and we can see that user is admin is true um so this is just a really kind of you know high level example",
    "start": "710399",
    "end": "717120"
  },
  {
    "text": "of sort of how you can write these rules and what they kind of look like i would recommend that everybody try out",
    "start": "717120",
    "end": "723120"
  },
  {
    "text": "the playground and also go to the open policy agent documentation",
    "start": "723120",
    "end": "728639"
  },
  {
    "text": "the documentation is backed by the playground so all of the examples and and demos in there you can edit and",
    "start": "728639",
    "end": "735760"
  },
  {
    "text": "change and open up the playground as well all right back to slides",
    "start": "735760",
    "end": "744720"
  },
  {
    "text": "okay so we've talked a little bit about what opa is but how do you use it well let's take a",
    "start": "744720",
    "end": "751279"
  },
  {
    "text": "second look at the broader ecosystem right now you have policy everywhere",
    "start": "751279",
    "end": "758079"
  },
  {
    "text": "whether you know it or not um and your ci cd services you have policy you know when when does something get deployed when do",
    "start": "758079",
    "end": "764399"
  },
  {
    "text": "rules get run uh when when do jobs get run so um for kubernetes container management it's",
    "start": "764399",
    "end": "771120"
  },
  {
    "text": "obvious we have you know admission controllers we have pod security policies we have all this other stuff right",
    "start": "771120",
    "end": "776720"
  },
  {
    "text": "um apis of course authorization um that's you know it's",
    "start": "776720",
    "end": "783440"
  },
  {
    "text": "probably the biggest use case around databases filtering again authorization",
    "start": "783440",
    "end": "790560"
  },
  {
    "text": "you know what who's allowed to query for what data that's the sort of questions and then also of",
    "start": "790560",
    "end": "797360"
  },
  {
    "text": "course down in this bottom right corner public cloud we have terraform shown here but basically like how do you",
    "start": "797360",
    "end": "805040"
  },
  {
    "text": "manage infrastructure and the policies around that so you know is a user allowed to delete",
    "start": "805040",
    "end": "811440"
  },
  {
    "text": "all of the servers in the cluster probably not you should have a policy for that right",
    "start": "811440",
    "end": "817200"
  },
  {
    "text": "so all of these locations have an opa integration point and are prime",
    "start": "817200",
    "end": "823120"
  },
  {
    "text": "candidates for it all of these use cases have been you know sort of tried and true um",
    "start": "823120",
    "end": "830320"
  },
  {
    "text": "i think the main takeaway here anybody who's interested in using opa",
    "start": "830320",
    "end": "835600"
  },
  {
    "text": "and wanting to use it in any of those those uh you know places across the stack",
    "start": "835600",
    "end": "840639"
  },
  {
    "text": "go check out the opa integration index there's a shortened link here if you can",
    "start": "840639",
    "end": "846560"
  },
  {
    "text": "see the url in the screenshot it's the docs slash ecosystem",
    "start": "846560",
    "end": "852320"
  },
  {
    "text": "this thing is a live list showing you you know all the different integration points plugins and other",
    "start": "852320",
    "end": "858000"
  },
  {
    "text": "other tools that are built using opa to allow you to enforce these policies all across the stack in different places",
    "start": "858000",
    "end": "866720"
  },
  {
    "text": "i want to take a second to call out one of these integrations um it's a separate tool",
    "start": "866720",
    "end": "872800"
  },
  {
    "text": "uses opa as a library comp test i think at this point i would",
    "start": "872800",
    "end": "878079"
  },
  {
    "text": "guess that most people have at least heard of this in the kubernetes you know ecosystem",
    "start": "878079",
    "end": "883199"
  },
  {
    "text": "if you haven't i highly recommend you check it out uh this thing if if you're doing any kind of you know",
    "start": "883199",
    "end": "889760"
  },
  {
    "text": "infrastructure as code or even just like if you if you find yourself using config files",
    "start": "889760",
    "end": "896880"
  },
  {
    "text": "in production you should probably be looking at contest you know you'll find a use for it",
    "start": "896880",
    "end": "904560"
  },
  {
    "text": "at the end of the day it basically lets you do policy tests against config files",
    "start": "904560",
    "end": "912079"
  },
  {
    "text": "and this these config files can be anything from kubernetes manifest to terraform definitions to you know",
    "start": "912079",
    "end": "918000"
  },
  {
    "text": "several others here and this quote that i took from the readme um check out their website uh the docs",
    "start": "918000",
    "end": "924480"
  },
  {
    "text": "are pretty good i think the other thing to call out here is that the conftest project has officially moved",
    "start": "924480",
    "end": "930639"
  },
  {
    "text": "into the open policy agent organization so it's now an official part of oppa",
    "start": "930639",
    "end": "936959"
  },
  {
    "text": "uh so that's that's really cool i you know big shout out to the the conf test maintainers and everybody",
    "start": "936959",
    "end": "942160"
  },
  {
    "text": "who's been involved in that project it's very popular and with good reason",
    "start": "942160",
    "end": "948240"
  },
  {
    "text": "but we are at kubecon virtually and so i think everyone here probably is",
    "start": "948639",
    "end": "955199"
  },
  {
    "text": "interested in kubernetes uh so let's talk a little bit about kubernetes and oppa gatekeeper is a",
    "start": "955199",
    "end": "962560"
  },
  {
    "text": "customizable kubernetes admission web hook that allows us to enforce policies and",
    "start": "962560",
    "end": "967839"
  },
  {
    "text": "strengthen governance to extend security and governance in your kubernetes environment",
    "start": "967839",
    "end": "974240"
  },
  {
    "text": "now let's take a look at some of the motivations behind the project if your organization has been operating",
    "start": "974240",
    "end": "981120"
  },
  {
    "text": "kubernetes you probably have been looking for ways to control what end users can do on the cluster and ways to help",
    "start": "981120",
    "end": "988079"
  },
  {
    "text": "ensure the clusters are in conformance with company policies these policies may",
    "start": "988079",
    "end": "993199"
  },
  {
    "text": "be there to meet governance and legal requirements or to enforce best practices and organizational",
    "start": "993199",
    "end": "999759"
  },
  {
    "text": "conventions often the need for policy is discovered after your system is already running in",
    "start": "999759",
    "end": "1006240"
  },
  {
    "text": "production so introducing new policies can be dangerous and can often be a",
    "start": "1006240",
    "end": "1011680"
  },
  {
    "text": "breaking change does a new rule break a core piece of software can it bring down the entire stack with",
    "start": "1011680",
    "end": "1019040"
  },
  {
    "text": "gatekeeper you can preview the effect of policy changes in production clusters to prevent impacts on existing workloads",
    "start": "1019040",
    "end": "1028720"
  },
  {
    "text": "so here's a timeline of the gatekeeper projects in 2017 the v1 of gatekeeper with q",
    "start": "1031039",
    "end": "1038880"
  },
  {
    "text": "management was introduced and in 2018 microsoft donated the v2",
    "start": "1038880",
    "end": "1044959"
  },
  {
    "text": "of gatekeeper to the oppa organization and soon after microsoft google styra",
    "start": "1044959",
    "end": "1051039"
  },
  {
    "text": "and many others work together to bring the v3",
    "start": "1051039",
    "end": "1056240"
  },
  {
    "text": "of gatekeeper project and now in august 2020 we are preparing for the project to go",
    "start": "1056240",
    "end": "1063200"
  },
  {
    "text": "stable and we're going to talk a little bit more about all the changes that have",
    "start": "1063200",
    "end": "1068640"
  },
  {
    "text": "happened so let's take a look at how b3 works when",
    "start": "1068640",
    "end": "1075600"
  },
  {
    "text": "uh when we deploy the gatekeeper project to the cluster what happens is",
    "start": "1075600",
    "end": "1082320"
  },
  {
    "text": "when an admission request comes in the api server then sends the request to the gatekeeper",
    "start": "1082320",
    "end": "1088080"
  },
  {
    "text": "webhook and the webhook then receives a mission review request",
    "start": "1088080",
    "end": "1093200"
  },
  {
    "text": "and sends the data to opa for reviewing the request data against all the",
    "start": "1093200",
    "end": "1100000"
  },
  {
    "text": "policies that are currently in opa and once the decision has been",
    "start": "1100000",
    "end": "1105520"
  },
  {
    "text": "made then the data is sent back to gatekeeper and then gatekeeper then sends",
    "start": "1105520",
    "end": "1110559"
  },
  {
    "text": "the emission response as a deny or allow to the api server and",
    "start": "1110559",
    "end": "1117679"
  },
  {
    "text": "the audit functionality runs periodically in the cluster",
    "start": "1117679",
    "end": "1122799"
  },
  {
    "text": "and the data all the resources in the cluster are then evaluated periodically against",
    "start": "1122799",
    "end": "1130080"
  },
  {
    "text": "all the policies that are currently in opa gatekeeper is a dynamic configurable",
    "start": "1130080",
    "end": "1137440"
  },
  {
    "text": "emission controller so no reboot is required for any policy updates",
    "start": "1137440",
    "end": "1142720"
  },
  {
    "text": "the policies are configured via krm so that the policies are reusable",
    "start": "1142720",
    "end": "1147919"
  },
  {
    "text": "parameterized to encourage reusability for common policy needs the project is also built on top of",
    "start": "1147919",
    "end": "1154799"
  },
  {
    "text": "keybuilder here are some core functionalities of gatekeeper with the validating emission",
    "start": "1154799",
    "end": "1160480"
  },
  {
    "text": "control you can control what end users can do on the cluster with the dry run feature we can",
    "start": "1160480",
    "end": "1165919"
  },
  {
    "text": "gradually roll out new policies so that we can gain confidence in the policies before enforcing them we",
    "start": "1165919",
    "end": "1172880"
  },
  {
    "text": "can create referential policies to evaluate new admission request against existing resources",
    "start": "1172880",
    "end": "1179360"
  },
  {
    "text": "in the cluster we can write policies via configuration not code",
    "start": "1179360",
    "end": "1185039"
  },
  {
    "text": "then this can be done by creating constraint templates which are source code for rego rules and schema for",
    "start": "1185039",
    "end": "1191520"
  },
  {
    "text": "constraints and their parameters and the constraints can then be parameterized and easily configurable",
    "start": "1191520",
    "end": "1198160"
  },
  {
    "text": "by admins the audit functionality allows us to periodically evaluate resources",
    "start": "1198160",
    "end": "1203840"
  },
  {
    "text": "against these constraints and this allows us to have ongoing monitoring of cluster state",
    "start": "1203840",
    "end": "1210480"
  },
  {
    "text": "to help us detect and remediate any pre-existing misconfigurations",
    "start": "1210480",
    "end": "1215679"
  },
  {
    "text": "and with metrics we have prometheus endpoints to provide observability of the state of the",
    "start": "1215679",
    "end": "1222400"
  },
  {
    "text": "cluster and how things are working within gatekeeper",
    "start": "1222400",
    "end": "1227520"
  },
  {
    "text": "so since the last kubecon in december we've added a lot of new functionalities to gatekeeper so",
    "start": "1227520",
    "end": "1233840"
  },
  {
    "text": "let's go through the list first we have security audit completed by cncf security audit",
    "start": "1233840",
    "end": "1240720"
  },
  {
    "text": "and we've addressed all the security concerns as part of that audit and we've added new ways to exclude",
    "start": "1240720",
    "end": "1247840"
  },
  {
    "text": "namespaces you can either narrow the scope of resources for audit emission and sync within the config resources",
    "start": "1247840",
    "end": "1255840"
  },
  {
    "text": "or you can actually specify at the constraint level by adding",
    "start": "1255840",
    "end": "1262640"
  },
  {
    "text": "excluded namespaces as part of the constraint and we've added a mid label validating",
    "start": "1262640",
    "end": "1269679"
  },
  {
    "text": "web plug to lock down what excluded namespaces are actually",
    "start": "1269679",
    "end": "1274799"
  },
  {
    "text": "allowed to be excluded now with past security policy",
    "start": "1274799",
    "end": "1281039"
  },
  {
    "text": "sigoth has identified the need to decouple enforcement and decision making",
    "start": "1281039",
    "end": "1288000"
  },
  {
    "text": "and gatekeeper is referenced now as an alternative to kubernetes psps and we've added",
    "start": "1288000",
    "end": "1294559"
  },
  {
    "text": "semantic logging which allows us to get cluster-wide violating",
    "start": "1294559",
    "end": "1299919"
  },
  {
    "text": "resources from audit and emission violations within the gatekeeper logs and we've",
    "start": "1299919",
    "end": "1306960"
  },
  {
    "text": "added some audit enhancements which allows us to audit resources using discovery client",
    "start": "1306960",
    "end": "1313600"
  },
  {
    "text": "instead of relying on opa cache and we now have standalone audit to",
    "start": "1313600",
    "end": "1318720"
  },
  {
    "text": "separate the audit and the web hook component and we've enabled multipod deployment",
    "start": "1318720",
    "end": "1325280"
  },
  {
    "text": "for webhook and we've added readiness tracker to ensure caches have been loaded before serving",
    "start": "1325280",
    "end": "1332559"
  },
  {
    "text": "traffic and we've removed the dependency on finalizers so you no longer need to remove",
    "start": "1332559",
    "end": "1338720"
  },
  {
    "text": "finalizers when when you need to deploy a new gatekeeper",
    "start": "1338720",
    "end": "1344640"
  },
  {
    "text": "and we've added the capability to match resource based off object scope to support cluster scope",
    "start": "1344640",
    "end": "1351440"
  },
  {
    "text": "objects now let's take a look at a demo we've used agile bank in the past",
    "start": "1351440",
    "end": "1357679"
  },
  {
    "text": "for gatekeeper demos agile bank is in a highly regulated industry",
    "start": "1357679",
    "end": "1364400"
  },
  {
    "text": "and both developers and admins are unhappy with gatekeeper we want to free up",
    "start": "1364400",
    "end": "1370480"
  },
  {
    "text": "admins time managing all the policies in the cluster and we want to unblock developers",
    "start": "1370480",
    "end": "1377039"
  },
  {
    "text": "by enable self-serving in the past few kubecons we've shown you",
    "start": "1377039",
    "end": "1382799"
  },
  {
    "text": "how you can create your own gatekeeper policies today we're going to take a look at how",
    "start": "1382799",
    "end": "1387840"
  },
  {
    "text": "to use gatekeeper to create the same behavior as kubernetes psps it's important to",
    "start": "1387840",
    "end": "1393919"
  },
  {
    "text": "note that kubernetes psps has denied by default enforcement mechanism",
    "start": "1393919",
    "end": "1399520"
  },
  {
    "text": "what that means is once the psp emission controller is enabled without defining",
    "start": "1399520",
    "end": "1405440"
  },
  {
    "text": "any policies it will prevent any pots from being created in the cluster",
    "start": "1405440",
    "end": "1411120"
  },
  {
    "text": "in comparison gatekeeper has allow by default enforcement mechanism so this allows us",
    "start": "1411120",
    "end": "1417600"
  },
  {
    "text": "to gradually roll out the policies test the policies and gain confidence",
    "start": "1417600",
    "end": "1423279"
  },
  {
    "text": "before actually enforcing them so let's take a look at how to use",
    "start": "1423279",
    "end": "1428400"
  },
  {
    "text": "gatekeeper to disallow privileged containers from being created in the cluster",
    "start": "1428400",
    "end": "1434159"
  },
  {
    "text": "a privileged container is given access to all devices on the host this allows the container nearly all the",
    "start": "1434159",
    "end": "1441120"
  },
  {
    "text": "same access as processes running on the host",
    "start": "1441120",
    "end": "1446720"
  },
  {
    "text": "here as an admin of agile bank i want to be able to",
    "start": "1447039",
    "end": "1453840"
  },
  {
    "text": "ensure that no privileged containers are installed in the cluster",
    "start": "1453840",
    "end": "1460559"
  },
  {
    "text": "let's see how we can do that by enabling kubernetes pop security policy",
    "start": "1467520",
    "end": "1474240"
  },
  {
    "text": "so here in this cluster i have psp controller enabled and by default i have",
    "start": "1475679",
    "end": "1483600"
  },
  {
    "text": "a privileged psp that already enables privileged containers",
    "start": "1483600",
    "end": "1489120"
  },
  {
    "text": "in order to disable this behavior as you can see here i have a psb",
    "start": "1489120",
    "end": "1494559"
  },
  {
    "text": "that in disables privileged containers from running so next i'm going to deploy",
    "start": "1494559",
    "end": "1502320"
  },
  {
    "text": "this psp in the cluster and as you can see it is now enabled",
    "start": "1502320",
    "end": "1509520"
  },
  {
    "text": "and as a developer i'm going to try and create a pod that contains a",
    "start": "1509520",
    "end": "1515120"
  },
  {
    "text": "container that has the privileged security context enabled",
    "start": "1515120",
    "end": "1522240"
  },
  {
    "text": "let's see if this will block me from creating uh the pod in the",
    "start": "1522960",
    "end": "1530400"
  },
  {
    "text": "cluster and this psp basically blocks it from doing so next let's see if i",
    "start": "1530400",
    "end": "1540720"
  },
  {
    "text": "remove that and make sure that i do not enable this privilege permission by",
    "start": "1540720",
    "end": "1547600"
  },
  {
    "text": "default and it lets me create the pod correctly",
    "start": "1547600",
    "end": "1553840"
  },
  {
    "text": "so as an admin i think this is really good but what if i want to test",
    "start": "1553840",
    "end": "1561360"
  },
  {
    "text": "this behavior and test it before enforcing an impact users i can",
    "start": "1561360",
    "end": "1568880"
  },
  {
    "text": "use the dry run feature in gatekeeper so now in my cluster i already have",
    "start": "1568880",
    "end": "1574799"
  },
  {
    "text": "gatekeeper components installed and next i'm going to deploy the privilege",
    "start": "1574799",
    "end": "1582000"
  },
  {
    "text": "container constraint template and next i'm going to deploy the constraint",
    "start": "1582000",
    "end": "1591200"
  },
  {
    "text": "but in a dry run mode so i can test this",
    "start": "1591200",
    "end": "1596400"
  },
  {
    "text": "policy in the cluster before enforcing it so let's take a look at what the template looks like",
    "start": "1596400",
    "end": "1602000"
  },
  {
    "text": "um as we talked about it before the template actually contains the rego",
    "start": "1602000",
    "end": "1608559"
  },
  {
    "text": "rules that will be executed by oppa and the target enforcement point is",
    "start": "1608559",
    "end": "1615840"
  },
  {
    "text": "a mission kubernetes gatekeeper and within the rego i'm basically telling",
    "start": "1615840",
    "end": "1623200"
  },
  {
    "text": "oppa that the input review object for all containers and init containers",
    "start": "1623200",
    "end": "1629520"
  },
  {
    "text": "if the security contacts privilege is enabled then go ahead and disallow it",
    "start": "1629520",
    "end": "1637039"
  },
  {
    "text": "so now as a developer i'm going to try to create a pod with a container",
    "start": "1637360",
    "end": "1645440"
  },
  {
    "text": "with the security context privilege enabled",
    "start": "1645440",
    "end": "1650480"
  },
  {
    "text": "and because this is now in dry run mode it doesn't actually block any",
    "start": "1650480",
    "end": "1657039"
  },
  {
    "text": "updates in the cluster so let's take a look at what the dry run constraint looks like",
    "start": "1657039",
    "end": "1664880"
  },
  {
    "text": "now as we mentioned previously the constraint basically provides parameters to the",
    "start": "1664880",
    "end": "1671039"
  },
  {
    "text": "constraint template and here as you can see i'm creating a constraint",
    "start": "1671039",
    "end": "1676640"
  },
  {
    "text": "with the kind ps kubernetes psu privilege container which is defined here and",
    "start": "1676640",
    "end": "1685039"
  },
  {
    "text": "i am applying this policy on pods kind",
    "start": "1685039",
    "end": "1690799"
  },
  {
    "text": "and enforcement action is dry run now as an ammon",
    "start": "1690799",
    "end": "1698720"
  },
  {
    "text": "i want to see how many violating pots are actually running in the cluster",
    "start": "1698720",
    "end": "1704080"
  },
  {
    "text": "so let's take a look at the constraint and as you can see here i have total",
    "start": "1704080",
    "end": "1712080"
  },
  {
    "text": "violation two and here are the pods that are running with privileged containers",
    "start": "1712080",
    "end": "1717200"
  },
  {
    "text": "enabled so at this point i can actually go and",
    "start": "1717200",
    "end": "1722480"
  },
  {
    "text": "update these resources and i have",
    "start": "1722480",
    "end": "1727520"
  },
  {
    "text": "a pretty good idea of what the impact of this resource looks like so i am comfortable",
    "start": "1727520",
    "end": "1734080"
  },
  {
    "text": "with enforcing the policy in the cluster now now i'm going to deploy the constraint",
    "start": "1734080",
    "end": "1740880"
  },
  {
    "text": "again but not in dry run mode and what this looks like",
    "start": "1740880",
    "end": "1748720"
  },
  {
    "text": "is pretty much the same as before but the difference is with enforcement action dry run removed",
    "start": "1748720",
    "end": "1756240"
  },
  {
    "text": "let's see as a developer i'm going to try to create the same pod again",
    "start": "1756240",
    "end": "1762720"
  },
  {
    "text": "with privileged contacts enabled and let's see if this",
    "start": "1762720",
    "end": "1769120"
  },
  {
    "text": "actually blocks me from creating the resource and as you can see here the gatekeeper",
    "start": "1769120",
    "end": "1774799"
  },
  {
    "text": "webhook will deny this omission request and specify which policy",
    "start": "1774799",
    "end": "1783679"
  },
  {
    "text": "is in action and why um it was blocked so that's a demo to",
    "start": "1783679",
    "end": "1790799"
  },
  {
    "text": "demonstrate how you can use gatekeeper to roll out pot security policies and",
    "start": "1790799",
    "end": "1797039"
  },
  {
    "text": "enforce the security constraints in your cluster",
    "start": "1797039",
    "end": "1802240"
  },
  {
    "text": "and next let's talk about the current status of gatekeeper it is currently beta and we're working",
    "start": "1802240",
    "end": "1808720"
  },
  {
    "text": "towards moving into stable um so if you have any feedback issues",
    "start": "1808720",
    "end": "1813919"
  },
  {
    "text": "enhancements or requests please open an issue or join us on slack",
    "start": "1813919",
    "end": "1819120"
  },
  {
    "text": "or join us in our weekly community calls so here are some",
    "start": "1819120",
    "end": "1826080"
  },
  {
    "text": "potential growth in the future that we're looking at obviously move the project into stable",
    "start": "1826080",
    "end": "1833919"
  },
  {
    "text": "status and ensure that it's production ready and we are working on a feature that emit violations",
    "start": "1833919",
    "end": "1839840"
  },
  {
    "text": "as kubernetes events we're also looking into mutation and supporting external data",
    "start": "1839840",
    "end": "1847520"
  },
  {
    "text": "and we're also looking at enabling more audit functionalities more metrics and more policies",
    "start": "1847520",
    "end": "1855520"
  },
  {
    "text": "so that the communities can share some of the common best practices and more developer tools",
    "start": "1855520",
    "end": "1862799"
  },
  {
    "text": "to help us validate and test our policies thanks for",
    "start": "1862799",
    "end": "1868399"
  },
  {
    "text": "coming and we have lots of places where you can come join us talk to the open maintainers",
    "start": "1868399",
    "end": "1873760"
  },
  {
    "text": "give us feedback feature ideas anything you need first and foremost",
    "start": "1873760",
    "end": "1878799"
  },
  {
    "text": "github is where the projects are hosted and maintained we do all of our collaboration there so",
    "start": "1878799",
    "end": "1885039"
  },
  {
    "text": "check out the projects give them stars follow them also the slack channel is very active i",
    "start": "1885039",
    "end": "1891519"
  },
  {
    "text": "think all of the maintainers are there every day all day as well as tons of end users so if you",
    "start": "1891519",
    "end": "1897360"
  },
  {
    "text": "have questions comments concerns check it out it's really good starting point for you",
    "start": "1897360",
    "end": "1904240"
  },
  {
    "text": "and that's it thank you thanks alright bye",
    "start": "1904960",
    "end": "1911840"
  }
]