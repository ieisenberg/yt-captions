[
  {
    "text": "uh hello welcome to our really really",
    "start": "719",
    "end": "2679"
  },
  {
    "text": "specific open Telemetry collector",
    "start": "2679",
    "end": "6279"
  },
  {
    "text": "talk my name is Tyler helmouth I am a",
    "start": "6480",
    "end": "9280"
  },
  {
    "text": "maintainer of the open Telemetry",
    "start": "9280",
    "end": "10679"
  },
  {
    "text": "collector Tri repository and the open",
    "start": "10679",
    "end": "12799"
  },
  {
    "text": "Telemetry Helm trop repository I started",
    "start": "12799",
    "end": "15360"
  },
  {
    "text": "off as a user of open Telemetry about",
    "start": "15360",
    "end": "17199"
  },
  {
    "text": "two years ago uh and then I started to",
    "start": "17199",
    "end": "19160"
  },
  {
    "text": "start",
    "start": "19160",
    "end": "20160"
  },
  {
    "text": "contributing my name is Evan Bradley I",
    "start": "20160",
    "end": "22640"
  },
  {
    "text": "also help maintain the collector and",
    "start": "22640",
    "end": "24320"
  },
  {
    "text": "along with Tyler I'm one of the primary",
    "start": "24320",
    "end": "25960"
  },
  {
    "text": "contributors to OTL I didn't have much",
    "start": "25960",
    "end": "28480"
  },
  {
    "text": "experience with open cemetry prior",
    "start": "28480",
    "end": "30119"
  },
  {
    "text": "joining the project about a year ago but",
    "start": "30119",
    "end": "32279"
  },
  {
    "text": "it's been really great to be a part of",
    "start": "32279",
    "end": "33760"
  },
  {
    "text": "the",
    "start": "33760",
    "end": "34920"
  },
  {
    "text": "community so first I'd like to quickly",
    "start": "34920",
    "end": "37320"
  },
  {
    "text": "cover what we're going to talk about",
    "start": "37320",
    "end": "38440"
  },
  {
    "text": "today first we're going to talk about",
    "start": "38440",
    "end": "40719"
  },
  {
    "text": "why and how you could use the otel",
    "start": "40719",
    "end": "42399"
  },
  {
    "text": "collector to process data in your",
    "start": "42399",
    "end": "43800"
  },
  {
    "text": "Telemetry pipelines and how the open",
    "start": "43800",
    "end": "45760"
  },
  {
    "text": "Telemetry transformation language can",
    "start": "45760",
    "end": "47280"
  },
  {
    "text": "help you with that then we'll take a",
    "start": "47280",
    "end": "49440"
  },
  {
    "text": "look at OTL in action using a real world",
    "start": "49440",
    "end": "51600"
  },
  {
    "text": "use case and finally we'll tell you",
    "start": "51600",
    "end": "53600"
  },
  {
    "text": "about the current state of OTL and where",
    "start": "53600",
    "end": "55480"
  },
  {
    "text": "it's headed",
    "start": "55480",
    "end": "56520"
  },
  {
    "text": "next so before I start for anyone who",
    "start": "56520",
    "end": "59160"
  },
  {
    "text": "isn't familiar with with it the open",
    "start": "59160",
    "end": "60840"
  },
  {
    "text": "Telemetry collector is an observability",
    "start": "60840",
    "end": "62719"
  },
  {
    "text": "pipeline middleware that can receive",
    "start": "62719",
    "end": "64960"
  },
  {
    "text": "process and export data at scale The",
    "start": "64960",
    "end": "67240"
  },
  {
    "text": "Collector comes with a lot of",
    "start": "67240",
    "end": "68280"
  },
  {
    "text": "functionality but we're really just",
    "start": "68280",
    "end": "69640"
  },
  {
    "text": "going to be focusing on its processing",
    "start": "69640",
    "end": "71680"
  },
  {
    "text": "capabilities so why might you want to",
    "start": "71680",
    "end": "73439"
  },
  {
    "text": "use the collector well there's a lot of",
    "start": "73439",
    "end": "76479"
  },
  {
    "text": "or there's a lot of uh reasons on this",
    "start": "76479",
    "end": "78000"
  },
  {
    "text": "slide but the first big one is that you",
    "start": "78000",
    "end": "80000"
  },
  {
    "text": "can process at the edge processing at",
    "start": "80000",
    "end": "82439"
  },
  {
    "text": "the edge allows you to split this work",
    "start": "82439",
    "end": "83680"
  },
  {
    "text": "across multiple machines which can help",
    "start": "83680",
    "end": "85520"
  },
  {
    "text": "increase data throughput of your",
    "start": "85520",
    "end": "87360"
  },
  {
    "text": "pipeline it also gives you a chance to",
    "start": "87360",
    "end": "89320"
  },
  {
    "text": "control what data enters your pipeline",
    "start": "89320",
    "end": "90720"
  },
  {
    "text": "to begin with and how it looks coming in",
    "start": "90720",
    "end": "93079"
  },
  {
    "text": "for example you may want to remove",
    "start": "93079",
    "end": "94680"
  },
  {
    "text": "unnecessary data early on in your",
    "start": "94680",
    "end": "96280"
  },
  {
    "text": "pipeline to avoid racking up bandwith",
    "start": "96280",
    "end": "98119"
  },
  {
    "text": "costs your data may also contain pii",
    "start": "98119",
    "end": "101159"
  },
  {
    "text": "that isn't ever allowed to leave its",
    "start": "101159",
    "end": "102360"
  },
  {
    "text": "origin so it needs to be redacted or",
    "start": "102360",
    "end": "103960"
  },
  {
    "text": "removed as soon as possible you can run",
    "start": "103960",
    "end": "106640"
  },
  {
    "text": "the collector at the edge or anywhere",
    "start": "106640",
    "end": "108320"
  },
  {
    "text": "else in your pipeline because it can be",
    "start": "108320",
    "end": "109680"
  },
  {
    "text": "deployed anywhere it can be deployed in",
    "start": "109680",
    "end": "111759"
  },
  {
    "text": "containerized virtualized or even",
    "start": "111759",
    "end": "113680"
  },
  {
    "text": "functions as a service environments and",
    "start": "113680",
    "end": "115560"
  },
  {
    "text": "you can process data close to its",
    "start": "115560",
    "end": "116920"
  },
  {
    "text": "origins or further away such as at",
    "start": "116920",
    "end": "119360"
  },
  {
    "text": "critical points point of your pipeline",
    "start": "119360",
    "end": "121000"
  },
  {
    "text": "such as at the point of Ingress at the",
    "start": "121000",
    "end": "123280"
  },
  {
    "text": "boundary of a secure network you can",
    "start": "123280",
    "end": "125640"
  },
  {
    "text": "trust The Collector to adapt well to",
    "start": "125640",
    "end": "127000"
  },
  {
    "text": "these situations because it's fast and",
    "start": "127000",
    "end": "128840"
  },
  {
    "text": "versatile it has been written with high",
    "start": "128840",
    "end": "130759"
  },
  {
    "text": "throughput and low latency in mind so it",
    "start": "130759",
    "end": "132640"
  },
  {
    "text": "won't slow down your pipeline and it has",
    "start": "132640",
    "end": "134519"
  },
  {
    "text": "low CPU memory and dispas requirements",
    "start": "134519",
    "end": "137680"
  },
  {
    "text": "custom collector builds can also be made",
    "start": "137680",
    "end": "139319"
  },
  {
    "text": "to fit the situation at Hand by",
    "start": "139319",
    "end": "141120"
  },
  {
    "text": "selecting only the components you need",
    "start": "141120",
    "end": "143200"
  },
  {
    "text": "and for the cases where you can't find",
    "start": "143200",
    "end": "144440"
  },
  {
    "text": "anything that's already out there all",
    "start": "144440",
    "end": "146040"
  },
  {
    "text": "collector components are written using",
    "start": "146040",
    "end": "147319"
  },
  {
    "text": "the same core apis which means you can",
    "start": "147319",
    "end": "149239"
  },
  {
    "text": "leverage these to add your own code to",
    "start": "149239",
    "end": "150920"
  },
  {
    "text": "accompl accomplish a",
    "start": "150920",
    "end": "153040"
  },
  {
    "text": "task the flow of data through the",
    "start": "153040",
    "end": "154959"
  },
  {
    "text": "collector is organized into pipelines",
    "start": "154959",
    "end": "156800"
  },
  {
    "text": "which are composed of individual",
    "start": "156800",
    "end": "158000"
  },
  {
    "text": "components that each handle a particular",
    "start": "158000",
    "end": "159800"
  },
  {
    "text": "task The Collector has five classes of",
    "start": "159800",
    "end": "162000"
  },
  {
    "text": "components but the three that we're",
    "start": "162000",
    "end": "163319"
  },
  {
    "text": "going to focus on today are receivers",
    "start": "163319",
    "end": "165159"
  },
  {
    "text": "processors and",
    "start": "165159",
    "end": "166480"
  },
  {
    "text": "exporters this diagram shows an example",
    "start": "166480",
    "end": "168879"
  },
  {
    "text": "pipeline where data comes into the",
    "start": "168879",
    "end": "170400"
  },
  {
    "text": "collector at one of the points on the",
    "start": "170400",
    "end": "171519"
  },
  {
    "text": "left proceeds through the pipeline until",
    "start": "171519",
    "end": "173640"
  },
  {
    "text": "it's emitted on the right starting on",
    "start": "173640",
    "end": "175599"
  },
  {
    "text": "the left with receivers receivers take",
    "start": "175599",
    "end": "177599"
  },
  {
    "text": "data from an external source and",
    "start": "177599",
    "end": "179120"
  },
  {
    "text": "translate into P data the collector's",
    "start": "179120",
    "end": "181080"
  },
  {
    "text": "internal format that's based on the open",
    "start": "181080",
    "end": "182800"
  },
  {
    "text": "Telemetry protocol or",
    "start": "182800",
    "end": "184599"
  },
  {
    "text": "otop processors then take this data and",
    "start": "184599",
    "end": "187040"
  },
  {
    "text": "perform some kind of filtering editing",
    "start": "187040",
    "end": "188680"
  },
  {
    "text": "or additions onto it before forwarding",
    "start": "188680",
    "end": "190840"
  },
  {
    "text": "it on they both consume and emit P data",
    "start": "190840",
    "end": "193599"
  },
  {
    "text": "so they can be chained together within a",
    "start": "193599",
    "end": "195200"
  },
  {
    "text": "pipeline once processing is complete an",
    "start": "195200",
    "end": "197680"
  },
  {
    "text": "exporter will emit the data to its",
    "start": "197680",
    "end": "199200"
  },
  {
    "text": "destination in a desired format most",
    "start": "199200",
    "end": "201840"
  },
  {
    "text": "transformations of data happen inside",
    "start": "201840",
    "end": "203360"
  },
  {
    "text": "processors so we're going to be focusing",
    "start": "203360",
    "end": "204799"
  },
  {
    "text": "on those",
    "start": "204799",
    "end": "206280"
  },
  {
    "text": "today so let's take a look at a slightly",
    "start": "206280",
    "end": "208480"
  },
  {
    "text": "modified version of a real situation",
    "start": "208480",
    "end": "210239"
  },
  {
    "text": "seen by collector users suppose that we",
    "start": "210239",
    "end": "212680"
  },
  {
    "text": "want to monitor our kubernetes cluster",
    "start": "212680",
    "end": "214360"
  },
  {
    "text": "to quickly detect field deployments that",
    "start": "214360",
    "end": "216519"
  },
  {
    "text": "happen because our pods aren't starting",
    "start": "216519",
    "end": "218480"
  },
  {
    "text": "we can use the K object receiver to",
    "start": "218480",
    "end": "220280"
  },
  {
    "text": "monitor the cluster and collect the",
    "start": "220280",
    "end": "221640"
  },
  {
    "text": "events then forward these to our back",
    "start": "221640",
    "end": "223280"
  },
  {
    "text": "end that takes logs over",
    "start": "223280",
    "end": "225040"
  },
  {
    "text": "ltlp the logs have all the data we want",
    "start": "225040",
    "end": "227400"
  },
  {
    "text": "but we're seeing a few problems first",
    "start": "227400",
    "end": "229439"
  },
  {
    "text": "our kubernetes cluster is very active",
    "start": "229439",
    "end": "231360"
  },
  {
    "text": "and it turns out we're collecting way",
    "start": "231360",
    "end": "232439"
  },
  {
    "text": "too many events and it's costing us way",
    "start": "232439",
    "end": "234000"
  },
  {
    "text": "too much additionally the log payloads",
    "start": "234000",
    "end": "236519"
  },
  {
    "text": "are missing met uh metadata like the",
    "start": "236519",
    "end": "238560"
  },
  {
    "text": "associated pod and this is making it",
    "start": "238560",
    "end": "240720"
  },
  {
    "text": "difficult to efficiently query for them",
    "start": "240720",
    "end": "242280"
  },
  {
    "text": "in our back end we know the collector",
    "start": "242280",
    "end": "244159"
  },
  {
    "text": "should have some processors that could",
    "start": "244159",
    "end": "245239"
  },
  {
    "text": "help us out so let's figure out which",
    "start": "245239",
    "end": "246720"
  },
  {
    "text": "ones we should",
    "start": "246720",
    "end": "248000"
  },
  {
    "text": "use so first let's take a look at how",
    "start": "248000",
    "end": "250480"
  },
  {
    "text": "this processing might look prior to oddl",
    "start": "250480",
    "end": "253040"
  },
  {
    "text": "well we know that the collector has",
    "start": "253040",
    "end": "254159"
  },
  {
    "text": "processors that support each of the otel",
    "start": "254159",
    "end": "255680"
  },
  {
    "text": "signals processors are designed to work",
    "start": "255680",
    "end": "257759"
  },
  {
    "text": "with at least one signal between traces",
    "start": "257759",
    "end": "259600"
  },
  {
    "text": "metrics and logs our events are coming",
    "start": "259600",
    "end": "262079"
  },
  {
    "text": "in as logs so we're just looking for",
    "start": "262079",
    "end": "263639"
  },
  {
    "text": "processors that can work with",
    "start": "263639",
    "end": "265680"
  },
  {
    "text": "logs using the data that we have in our",
    "start": "265680",
    "end": "267880"
  },
  {
    "text": "logs we're looking for one or more",
    "start": "267880",
    "end": "269199"
  },
  {
    "text": "processor that can fill the fulfill the",
    "start": "269199",
    "end": "270960"
  },
  {
    "text": "following requirements we want to filter",
    "start": "270960",
    "end": "273039"
  },
  {
    "text": "out all of the excess logs using data",
    "start": "273039",
    "end": "274919"
  },
  {
    "text": "from the body first and then with the",
    "start": "274919",
    "end": "277120"
  },
  {
    "text": "logs that we keep we want to be able to",
    "start": "277120",
    "end": "278720"
  },
  {
    "text": "use their bodies to extract their log",
    "start": "278720",
    "end": "280240"
  },
  {
    "text": "levels and Associated pod onto the OTL",
    "start": "280240",
    "end": "282919"
  },
  {
    "text": "payload as",
    "start": "282919",
    "end": "284800"
  },
  {
    "text": "attributes so when we look closer while",
    "start": "284800",
    "end": "287000"
  },
  {
    "text": "there's a lot The Collector can do the",
    "start": "287000",
    "end": "288759"
  },
  {
    "text": "situation isn't so simple we've used The",
    "start": "288759",
    "end": "291320"
  },
  {
    "text": "Collector to process our metrics and",
    "start": "291320",
    "end": "292600"
  },
  {
    "text": "traces before but we're finding that a",
    "start": "292600",
    "end": "294360"
  },
  {
    "text": "lot of the functionality offered for",
    "start": "294360",
    "end": "295680"
  },
  {
    "text": "logs is different the configs for the",
    "start": "295680",
    "end": "298080"
  },
  {
    "text": "processors that we're looking at here",
    "start": "298080",
    "end": "299639"
  },
  {
    "text": "are different than the ones we've used",
    "start": "299639",
    "end": "300919"
  },
  {
    "text": "before despite doing pretty much similar",
    "start": "300919",
    "end": "302880"
  },
  {
    "text": "things and so we have to learn a whole",
    "start": "302880",
    "end": "304360"
  },
  {
    "text": "new config structure and once we learn",
    "start": "304360",
    "end": "306520"
  },
  {
    "text": "that config structure the real kicker is",
    "start": "306520",
    "end": "308199"
  },
  {
    "text": "that there's no way for us to even",
    "start": "308199",
    "end": "309320"
  },
  {
    "text": "access the log body in the way that we",
    "start": "309320",
    "end": "310720"
  },
  {
    "text": "want first filtering requires running a",
    "start": "310720",
    "end": "313280"
  },
  {
    "text": "regular expression on a stringified",
    "start": "313280",
    "end": "315320"
  },
  {
    "text": "version of the entire log body and this",
    "start": "315320",
    "end": "317280"
  },
  {
    "text": "is going to be really slow there's also",
    "start": "317280",
    "end": "319280"
  },
  {
    "text": "no way to lift data from the body onto",
    "start": "319280",
    "end": "321280"
  },
  {
    "text": "the",
    "start": "321280",
    "end": "322039"
  },
  {
    "text": "attributes taking a step back for a",
    "start": "322039",
    "end": "324000"
  },
  {
    "text": "minute what features would we like to",
    "start": "324000",
    "end": "325479"
  },
  {
    "text": "see in a more generalized solution to",
    "start": "325479",
    "end": "327000"
  },
  {
    "text": "our problems well first we'd like access",
    "start": "327000",
    "end": "329720"
  },
  {
    "text": "the full OTL payload in one place which",
    "start": "329720",
    "end": "331880"
  },
  {
    "text": "is going to be necessary for us to",
    "start": "331880",
    "end": "333440"
  },
  {
    "text": "access the specific parts of the body",
    "start": "333440",
    "end": "334919"
  },
  {
    "text": "for filtering a metadata extraction we'd",
    "start": "334919",
    "end": "337680"
  },
  {
    "text": "also like to be able to per operations",
    "start": "337680",
    "end": "339080"
  },
  {
    "text": "at any part of the payload so that we",
    "start": "339080",
    "end": "340800"
  },
  {
    "text": "can get things looking exactly how they",
    "start": "340800",
    "end": "342479"
  },
  {
    "text": "need to and finally we'd like it if our",
    "start": "342479",
    "end": "344880"
  },
  {
    "text": "prior experience with metrics and traces",
    "start": "344880",
    "end": "346479"
  },
  {
    "text": "would carry over when we're working with",
    "start": "346479",
    "end": "348880"
  },
  {
    "text": "logs so this is where OTL comes into",
    "start": "348880",
    "end": "351479"
  },
  {
    "text": "play OTL is a domain specific language",
    "start": "351479",
    "end": "354360"
  },
  {
    "text": "that specifically targets processing",
    "start": "354360",
    "end": "356160"
  },
  {
    "text": "data in The Collector it runs inside the",
    "start": "356160",
    "end": "358120"
  },
  {
    "text": "collector's process and is designed to",
    "start": "358120",
    "end": "360160"
  },
  {
    "text": "directly work with pataa which cuts out",
    "start": "360160",
    "end": "362039"
  },
  {
    "text": "the overhead of specialized execution",
    "start": "362039",
    "end": "363759"
  },
  {
    "text": "environments like language VMS a key",
    "start": "363759",
    "end": "366160"
  },
  {
    "text": "benefit of OTL is that it works very",
    "start": "366160",
    "end": "367800"
  },
  {
    "text": "well with P dat's hierarchical structure",
    "start": "367800",
    "end": "370319"
  },
  {
    "text": "you can see an example of this data",
    "start": "370319",
    "end": "371639"
  },
  {
    "text": "hierarchy in the log on the right just",
    "start": "371639",
    "end": "373919"
  },
  {
    "text": "like OTL Pata provides structure for",
    "start": "373919",
    "end": "376199"
  },
  {
    "text": "common information found in Telemetry",
    "start": "376199",
    "end": "378000"
  },
  {
    "text": "such as the resource or application that",
    "start": "378000",
    "end": "379759"
  },
  {
    "text": "produced the Telemetry or the",
    "start": "379759",
    "end": "381160"
  },
  {
    "text": "instrumentation that collected it both",
    "start": "381160",
    "end": "383120"
  },
  {
    "text": "of these are included in addition to the",
    "start": "383120",
    "end": "384720"
  },
  {
    "text": "data",
    "start": "384720",
    "end": "386520"
  },
  {
    "text": "itself an obvious question to ask is if",
    "start": "386520",
    "end": "389240"
  },
  {
    "text": "the collector is configured with yaml",
    "start": "389240",
    "end": "391680"
  },
  {
    "text": "why use a DSL on this case well using a",
    "start": "391680",
    "end": "394319"
  },
  {
    "text": "DSL for processing allows users to",
    "start": "394319",
    "end": "396120"
  },
  {
    "text": "easily express their desired",
    "start": "396120",
    "end": "397360"
  },
  {
    "text": "transformation compared to a yl",
    "start": "397360",
    "end": "399160"
  },
  {
    "text": "configuration it's substantially easier",
    "start": "399160",
    "end": "401400"
  },
  {
    "text": "to write edit and read the example",
    "start": "401400",
    "end": "404599"
  },
  {
    "text": "transformation on this slide showcases",
    "start": "404599",
    "end": "406639"
  },
  {
    "text": "the fact that o the OTL statement is way",
    "start": "406639",
    "end": "408960"
  },
  {
    "text": "less verbose than the equivalent AML",
    "start": "408960",
    "end": "410479"
  },
  {
    "text": "config and we also hope that OTL syntax",
    "start": "410479",
    "end": "412960"
  },
  {
    "text": "is going to feel familiar to many",
    "start": "412960",
    "end": "414199"
  },
  {
    "text": "collector users it's pretty simple and",
    "start": "414199",
    "end": "416560"
  },
  {
    "text": "it's very similar to popular programming",
    "start": "416560",
    "end": "418120"
  },
  {
    "text": "languages like python Javas script or",
    "start": "418120",
    "end": "420960"
  },
  {
    "text": "go so as a language OTL has been",
    "start": "420960",
    "end": "423879"
  },
  {
    "text": "carefully designed to be just",
    "start": "423879",
    "end": "425080"
  },
  {
    "text": "sophisticated enough to be sufficiently",
    "start": "425080",
    "end": "426759"
  },
  {
    "text": "expressive without having a high",
    "start": "426759",
    "end": "428080"
  },
  {
    "text": "learning curve or being difficult to",
    "start": "428080",
    "end": "429599"
  },
  {
    "text": "read to enable the user to do any sort",
    "start": "429599",
    "end": "431879"
  },
  {
    "text": "of transformation they would like OTL",
    "start": "431879",
    "end": "433759"
  },
  {
    "text": "comes with lots of built-in functions",
    "start": "433759",
    "end": "435360"
  },
  {
    "text": "that work on a variety of data types",
    "start": "435360",
    "end": "437000"
  },
  {
    "text": "that might be seen in any signal using",
    "start": "437000",
    "end": "439560"
  },
  {
    "text": "functions to do these operations also",
    "start": "439560",
    "end": "441440"
  },
  {
    "text": "allows them to be composed the output of",
    "start": "441440",
    "end": "443360"
  },
  {
    "text": "one function can be used as input to",
    "start": "443360",
    "end": "445240"
  },
  {
    "text": "another oddl also includes enumerated",
    "start": "445240",
    "end": "447960"
  },
  {
    "text": "constants that have been taken directly",
    "start": "447960",
    "end": "449400"
  },
  {
    "text": "from OTL that allow the user to name a",
    "start": "449400",
    "end": "451560"
  },
  {
    "text": "value instead of having to remember its",
    "start": "451560",
    "end": "453560"
  },
  {
    "text": "integer representation this is really",
    "start": "453560",
    "end": "455680"
  },
  {
    "text": "helpful for things like metric type or",
    "start": "455680",
    "end": "457120"
  },
  {
    "text": "log severity otdl also has wear Clauses",
    "start": "457120",
    "end": "460840"
  },
  {
    "text": "that allow you to Define under which",
    "start": "460840",
    "end": "462120"
  },
  {
    "text": "conditions a transformation should occur",
    "start": "462120",
    "end": "464000"
  },
  {
    "text": "and you can combine conditions using its",
    "start": "464000",
    "end": "465759"
  },
  {
    "text": "Boolean operators for cases where you",
    "start": "465759",
    "end": "467960"
  },
  {
    "text": "need to work with numeric values there's",
    "start": "467960",
    "end": "469479"
  },
  {
    "text": "a standard set of math",
    "start": "469479",
    "end": "471479"
  },
  {
    "text": "operators so when we take a look at the",
    "start": "471479",
    "end": "473440"
  },
  {
    "text": "prior landscape of overlapping or",
    "start": "473440",
    "end": "475280"
  },
  {
    "text": "missing functionality and mismatched",
    "start": "475280",
    "end": "476960"
  },
  {
    "text": "configs and processors this becomes",
    "start": "476960",
    "end": "479400"
  },
  {
    "text": "cleaned up all signals are now processed",
    "start": "479400",
    "end": "481800"
  },
  {
    "text": "the same way config formats match and",
    "start": "481800",
    "end": "483759"
  },
  {
    "text": "the user can easily express their",
    "start": "483759",
    "end": "485000"
  },
  {
    "text": "desired",
    "start": "485000",
    "end": "486759"
  },
  {
    "text": "Transformations coming back to our use",
    "start": "486759",
    "end": "488680"
  },
  {
    "text": "case let's take a look at how the data",
    "start": "488680",
    "end": "490879"
  },
  {
    "text": "that we do have can solve our issues",
    "start": "490879",
    "end": "493080"
  },
  {
    "text": "well first we see a reason in a log body",
    "start": "493080",
    "end": "494879"
  },
  {
    "text": "so if we can determine what sorts of",
    "start": "494879",
    "end": "496120"
  },
  {
    "text": "events we don't want we can filter them",
    "start": "496120",
    "end": "497720"
  },
  {
    "text": "out using uh those",
    "start": "497720",
    "end": "499720"
  },
  {
    "text": "fields we also see information regarding",
    "start": "499720",
    "end": "502039"
  },
  {
    "text": "the Pod so we can look at extracting",
    "start": "502039",
    "end": "503800"
  },
  {
    "text": "those details into attributes on the",
    "start": "503800",
    "end": "505159"
  },
  {
    "text": "otop payload our backend is going to",
    "start": "505159",
    "end": "507120"
  },
  {
    "text": "later use these attributes for coring",
    "start": "507120",
    "end": "508680"
  },
  {
    "text": "when we go to find the",
    "start": "508680",
    "end": "510280"
  },
  {
    "text": "logs when we use OTL to solve this",
    "start": "510280",
    "end": "512680"
  },
  {
    "text": "problem we find that we can fulfill our",
    "start": "512680",
    "end": "514320"
  },
  {
    "text": "requirements with only two components",
    "start": "514320",
    "end": "516599"
  },
  {
    "text": "using the filter processor we can drop",
    "start": "516599",
    "end": "518479"
  },
  {
    "text": "the data we don't want and then with the",
    "start": "518479",
    "end": "520000"
  },
  {
    "text": "data that we keep we can use the",
    "start": "520000",
    "end": "521518"
  },
  {
    "text": "transform processor to transform it the",
    "start": "521519",
    "end": "523880"
  },
  {
    "text": "log on this slide demonstrates the final",
    "start": "523880",
    "end": "525560"
  },
  {
    "text": "result that we're hoping",
    "start": "525560",
    "end": "526959"
  },
  {
    "text": "for it has metadata that shows the Pod",
    "start": "526959",
    "end": "529480"
  },
  {
    "text": "name event type and severity for the log",
    "start": "529480",
    "end": "532519"
  },
  {
    "text": "all of these will keeping the log",
    "start": "532519",
    "end": "534360"
  },
  {
    "text": "intact I'm now going to hand it over to",
    "start": "534360",
    "end": "536320"
  },
  {
    "text": "Tyler who's going to show how OTL can do",
    "start": "536320",
    "end": "538200"
  },
  {
    "text": "this",
    "start": "538200",
    "end": "541000"
  },
  {
    "text": "all right let's take a look at how OT",
    "start": "541000",
    "end": "544000"
  },
  {
    "text": "tail enables our goals we've decided",
    "start": "544000",
    "end": "546480"
  },
  {
    "text": "that we can reduce our inest volume if",
    "start": "546480",
    "end": "548399"
  },
  {
    "text": "we drop re events that have a reason",
    "start": "548399",
    "end": "550160"
  },
  {
    "text": "have completed because we've decided we",
    "start": "550160",
    "end": "551600"
  },
  {
    "text": "don't want them and we intend to use the",
    "start": "551600",
    "end": "553240"
  },
  {
    "text": "filter processor to make this",
    "start": "553240",
    "end": "555360"
  },
  {
    "text": "decision this is an OTL statement sorry",
    "start": "555360",
    "end": "558880"
  },
  {
    "text": "this is an OTL condition OTL conditions",
    "start": "558880",
    "end": "561800"
  },
  {
    "text": "work with the underlying tietry but they",
    "start": "561800",
    "end": "563959"
  },
  {
    "text": "never change it the filter processor can",
    "start": "563959",
    "end": "566640"
  },
  {
    "text": "use OTL conditions to choose which data",
    "start": "566640",
    "end": "569320"
  },
  {
    "text": "is dropped when the condition is met the",
    "start": "569320",
    "end": "571560"
  },
  {
    "text": "processor drops the data in this",
    "start": "571560",
    "end": "573880"
  },
  {
    "text": "scenario we expect the K objects",
    "start": "573880",
    "end": "575720"
  },
  {
    "text": "receiver that we mentioned earlier to be",
    "start": "575720",
    "end": "577160"
  },
  {
    "text": "emitting the K events as logs and those",
    "start": "577160",
    "end": "579600"
  },
  {
    "text": "events are nested Maps inside the body",
    "start": "579600",
    "end": "581519"
  },
  {
    "text": "of the",
    "start": "581519",
    "end": "582399"
  },
  {
    "text": "log if we see a body that is not",
    "start": "582399",
    "end": "584640"
  },
  {
    "text": "structured like we expect we should drop",
    "start": "584640",
    "end": "586560"
  },
  {
    "text": "it because it's not a kades event you",
    "start": "586560",
    "end": "589040"
  },
  {
    "text": "can see in the first example that the",
    "start": "589040",
    "end": "590399"
  },
  {
    "text": "body is a map and it contains a nested",
    "start": "590399",
    "end": "592720"
  },
  {
    "text": "map in that object key since the",
    "start": "592720",
    "end": "594800"
  },
  {
    "text": "conditions are not met the data is kept",
    "start": "594800",
    "end": "597920"
  },
  {
    "text": "you can see in the example that the body",
    "start": "597920",
    "end": "600240"
  },
  {
    "text": "is a string a string is not a map so the",
    "start": "600240",
    "end": "603360"
  },
  {
    "text": "condition is met and the data is",
    "start": "603360",
    "end": "605519"
  },
  {
    "text": "dropped now that we've ensure the body",
    "start": "605519",
    "end": "607720"
  },
  {
    "text": "looks like how we expect it to look like",
    "start": "607720",
    "end": "609600"
  },
  {
    "text": "we can start checking the values of the",
    "start": "609600",
    "end": "610959"
  },
  {
    "text": "event itself remember we want to drop",
    "start": "610959",
    "end": "613320"
  },
  {
    "text": "events that have a reason of completed",
    "start": "613320",
    "end": "615360"
  },
  {
    "text": "OTL allows nested indexing so it's",
    "start": "615360",
    "end": "617640"
  },
  {
    "text": "really easy to reach into the event and",
    "start": "617640",
    "end": "619200"
  },
  {
    "text": "grab a value and compare it to the",
    "start": "619200",
    "end": "620959"
  },
  {
    "text": "static string uh completed you can see",
    "start": "620959",
    "end": "623959"
  },
  {
    "text": "in the Bott example that we dro the",
    "start": "623959",
    "end": "625480"
  },
  {
    "text": "completed event but we keep the top",
    "start": "625480",
    "end": "628040"
  },
  {
    "text": "event so now that we've filtered out the",
    "start": "628040",
    "end": "630640"
  },
  {
    "text": "data that we don't want we can start",
    "start": "630640",
    "end": "632519"
  },
  {
    "text": "safely transforming the tel we want to",
    "start": "632519",
    "end": "634399"
  },
  {
    "text": "keep this is an OTL statement unlike",
    "start": "634399",
    "end": "638200"
  },
  {
    "text": "conditions OTL statements transform the",
    "start": "638200",
    "end": "640440"
  },
  {
    "text": "underlying",
    "start": "640440",
    "end": "641720"
  },
  {
    "text": "Telemetry by executing a single function",
    "start": "641720",
    "end": "644600"
  },
  {
    "text": "in this case a function called merge",
    "start": "644600",
    "end": "646040"
  },
  {
    "text": "Maps the target for transformation in",
    "start": "646040",
    "end": "648320"
  },
  {
    "text": "this function is the first parameter",
    "start": "648320",
    "end": "650000"
  },
  {
    "text": "cache cache is a super specific otel",
    "start": "650000",
    "end": "653399"
  },
  {
    "text": "empty map that we can use as a place to",
    "start": "653399",
    "end": "655120"
  },
  {
    "text": "store information in between statements",
    "start": "655120",
    "end": "657720"
  },
  {
    "text": "the second state uh the second parameter",
    "start": "657720",
    "end": "659639"
  },
  {
    "text": "for merge Maps is another map in this",
    "start": "659639",
    "end": "661519"
  },
  {
    "text": "case it's that nested map inside body",
    "start": "661519",
    "end": "663320"
  },
  {
    "text": "that we checked on earlier the third",
    "start": "663320",
    "end": "665880"
  },
  {
    "text": "parameter is a static string in this",
    "start": "665880",
    "end": "667760"
  },
  {
    "text": "example it's the string upsert and it",
    "start": "667760",
    "end": "669639"
  },
  {
    "text": "tells the function how to perform the",
    "start": "669639",
    "end": "671440"
  },
  {
    "text": "merge so in this statement we merge the",
    "start": "671440",
    "end": "673839"
  },
  {
    "text": "object map into the cache map for later",
    "start": "673839",
    "end": "675560"
  },
  {
    "text": "use and while this statement isn't",
    "start": "675560",
    "end": "677200"
  },
  {
    "text": "strictly necessary to achieve the goals",
    "start": "677200",
    "end": "679399"
  },
  {
    "text": "that we want with the end result it is",
    "start": "679399",
    "end": "681200"
  },
  {
    "text": "going to make the future statements we",
    "start": "681200",
    "end": "682399"
  },
  {
    "text": "look at",
    "start": "682399",
    "end": "684480"
  },
  {
    "text": "simpler when you're using OTL this will",
    "start": "684480",
    "end": "687040"
  },
  {
    "text": "be one of the most common operations you",
    "start": "687040",
    "end": "689160"
  },
  {
    "text": "form setting the set function allows you",
    "start": "689160",
    "end": "692160"
  },
  {
    "text": "to set a Telemetry field using another",
    "start": "692160",
    "end": "693839"
  },
  {
    "text": "value the target of the set function is",
    "start": "693839",
    "end": "696120"
  },
  {
    "text": "the first parameter in fact you'll see",
    "start": "696120",
    "end": "697760"
  },
  {
    "text": "that pattern often we have a standard",
    "start": "697760",
    "end": "699399"
  },
  {
    "text": "that the first parameter of a lowercase",
    "start": "699399",
    "end": "701200"
  },
  {
    "text": "function be the thing being transformed",
    "start": "701200",
    "end": "703680"
  },
  {
    "text": "so our Target is an attribute on the log",
    "start": "703680",
    "end": "706240"
  },
  {
    "text": "called reason if the attribute doesn't",
    "start": "706240",
    "end": "708560"
  },
  {
    "text": "exist the function will create it the",
    "start": "708560",
    "end": "710680"
  },
  {
    "text": "second parameter is the new value our",
    "start": "710680",
    "end": "712720"
  },
  {
    "text": "team has decided that we need this",
    "start": "712720",
    "end": "714240"
  },
  {
    "text": "attribute to be lowercase so we're first",
    "start": "714240",
    "end": "716519"
  },
  {
    "text": "going to invoke the Convert case",
    "start": "716519",
    "end": "718079"
  },
  {
    "text": "function to change that text to lower",
    "start": "718079",
    "end": "720120"
  },
  {
    "text": "case without modifying the value in the",
    "start": "720120",
    "end": "721680"
  },
  {
    "text": "cache itself the output of Convert case",
    "start": "721680",
    "end": "724160"
  },
  {
    "text": "is then passed on to use as the new",
    "start": "724160",
    "end": "726040"
  },
  {
    "text": "value in set so this statement sets the",
    "start": "726040",
    "end": "729079"
  },
  {
    "text": "reason attribute on the log with the new",
    "start": "729079",
    "end": "731240"
  },
  {
    "text": "value of the events reason and it does",
    "start": "731240",
    "end": "733360"
  },
  {
    "text": "that by retrieving the events value of",
    "start": "733360",
    "end": "735040"
  },
  {
    "text": "the events reason from the cache and",
    "start": "735040",
    "end": "737000"
  },
  {
    "text": "passing it to the Convert case converter",
    "start": "737000",
    "end": "738959"
  },
  {
    "text": "to get the lowercase version you can see",
    "start": "738959",
    "end": "741320"
  },
  {
    "text": "here in the example that we've added a",
    "start": "741320",
    "end": "742720"
  },
  {
    "text": "new attribute on the log called reason",
    "start": "742720",
    "end": "745120"
  },
  {
    "text": "with the value of back",
    "start": "745120",
    "end": "747199"
  },
  {
    "text": "off one of the great things about open",
    "start": "747199",
    "end": "749399"
  },
  {
    "text": "Telemetry is a semantic invention our",
    "start": "749399",
    "end": "751519"
  },
  {
    "text": "backends know how to take advantage of",
    "start": "751519",
    "end": "752959"
  },
  {
    "text": "these standards so we want to set them",
    "start": "752959",
    "end": "754360"
  },
  {
    "text": "whenever we can in this instance we set",
    "start": "754360",
    "end": "756800"
  },
  {
    "text": "the K's pod name semantic invention uh",
    "start": "756800",
    "end": "759440"
  },
  {
    "text": "for any event that's associated to a pod",
    "start": "759440",
    "end": "762360"
  },
  {
    "text": "the first parameter of set this time is",
    "start": "762360",
    "end": "764480"
  },
  {
    "text": "a resource attribute it's called Uh K's",
    "start": "764480",
    "end": "767279"
  },
  {
    "text": "pod name and the value is the name of",
    "start": "767279",
    "end": "769000"
  },
  {
    "text": "the Pod and we extract that from the",
    "start": "769000",
    "end": "770320"
  },
  {
    "text": "cache this is a really really powerful",
    "start": "770320",
    "end": "772399"
  },
  {
    "text": "Concept in OTL even though we're working",
    "start": "772399",
    "end": "774600"
  },
  {
    "text": "with the log directly and we're grabbing",
    "start": "774600",
    "end": "776120"
  },
  {
    "text": "values off of the log we're able to",
    "start": "776120",
    "end": "778040"
  },
  {
    "text": "reach up into the resource the log is",
    "start": "778040",
    "end": "780279"
  },
  {
    "text": "associated to and change its values",
    "start": "780279",
    "end": "782839"
  },
  {
    "text": "also now what if this event isn't",
    "start": "782839",
    "end": "785000"
  },
  {
    "text": "actually for aod if that was the case we",
    "start": "785000",
    "end": "787240"
  },
  {
    "text": "wouldn't want to execute this statement",
    "start": "787240",
    "end": "789880"
  },
  {
    "text": "so what we can do is we can add a wear",
    "start": "789880",
    "end": "791320"
  },
  {
    "text": "Clause to the statement to make sure",
    "start": "791320",
    "end": "792680"
  },
  {
    "text": "it's only executed if the event really",
    "start": "792680",
    "end": "794600"
  },
  {
    "text": "is for aod the wear Clause acts as a",
    "start": "794600",
    "end": "797279"
  },
  {
    "text": "decision maker if the condition is met",
    "start": "797279",
    "end": "799399"
  },
  {
    "text": "the statement is executed otherwise the",
    "start": "799399",
    "end": "801639"
  },
  {
    "text": "statement is",
    "start": "801639",
    "end": "803519"
  },
  {
    "text": "skipped finally we want to take",
    "start": "803519",
    "end": "805560"
  },
  {
    "text": "advantage of the Native OTL log field",
    "start": "805560",
    "end": "807519"
  },
  {
    "text": "severity number thei represents the",
    "start": "807519",
    "end": "809639"
  },
  {
    "text": "severity of a log the K events we're",
    "start": "809639",
    "end": "811880"
  },
  {
    "text": "collecting can have two types normal or",
    "start": "811880",
    "end": "813680"
  },
  {
    "text": "warning if the event's a normal event we",
    "start": "813680",
    "end": "815959"
  },
  {
    "text": "want to set the severity to info and if",
    "start": "815959",
    "end": "817680"
  },
  {
    "text": "the event is a warning event we want to",
    "start": "817680",
    "end": "819079"
  },
  {
    "text": "set the severity to warn we could take",
    "start": "819079",
    "end": "821320"
  },
  {
    "text": "advantage of conditions again that to",
    "start": "821320",
    "end": "823040"
  },
  {
    "text": "ensure that for any log only one of",
    "start": "823040",
    "end": "824839"
  },
  {
    "text": "these two statements is run and",
    "start": "824839",
    "end": "826279"
  },
  {
    "text": "therefore the log severity is only set",
    "start": "826279",
    "end": "827760"
  },
  {
    "text": "one time severity number is actually an",
    "start": "827760",
    "end": "830360"
  },
  {
    "text": "integer but hardcoding a 9 or 13 into",
    "start": "830360",
    "end": "832680"
  },
  {
    "text": "the function wouldn't be very",
    "start": "832680",
    "end": "834079"
  },
  {
    "text": "descriptive instead we can take",
    "start": "834079",
    "end": "835880"
  },
  {
    "text": "advantage of ot's built-in enums",
    "start": "835880",
    "end": "838240"
  },
  {
    "text": "severity number number info and severity",
    "start": "838240",
    "end": "839959"
  },
  {
    "text": "number warrn to represent these numbers",
    "start": "839959",
    "end": "842839"
  },
  {
    "text": "these eoms reflect the enums available",
    "start": "842839",
    "end": "844600"
  },
  {
    "text": "in OTL and keep the statements easy to",
    "start": "844600",
    "end": "847160"
  },
  {
    "text": "read and easy to",
    "start": "847160",
    "end": "849279"
  },
  {
    "text": "write with the transform processor and",
    "start": "849279",
    "end": "851399"
  },
  {
    "text": "the filter processor in place using OTL",
    "start": "851399",
    "end": "853279"
  },
  {
    "text": "we can achieve our goal the top event is",
    "start": "853279",
    "end": "855279"
  },
  {
    "text": "a backup event so we keep it and",
    "start": "855279",
    "end": "856839"
  },
  {
    "text": "transform it which started off as a",
    "start": "856839",
    "end": "858880"
  },
  {
    "text": "basic log which just the event in the",
    "start": "858880",
    "end": "861360"
  },
  {
    "text": "body of the of the log becomes a log",
    "start": "861360",
    "end": "863480"
  },
  {
    "text": "rich with data that we filled in uh",
    "start": "863480",
    "end": "866160"
  },
  {
    "text": "filled in all of its OTL Fields it has",
    "start": "866160",
    "end": "868959"
  },
  {
    "text": "K8 po event name as the semantic",
    "start": "868959",
    "end": "871399"
  },
  {
    "text": "invention on its resource attributes it",
    "start": "871399",
    "end": "873320"
  },
  {
    "text": "has the use in useful reason attribute",
    "start": "873320",
    "end": "875440"
  },
  {
    "text": "that could maybe help us visualize the",
    "start": "875440",
    "end": "876839"
  },
  {
    "text": "data later and we've set its severity",
    "start": "876839",
    "end": "878959"
  },
  {
    "text": "number which we could maybe use for",
    "start": "878959",
    "end": "880240"
  },
  {
    "text": "quering or something the second log is",
    "start": "880240",
    "end": "883120"
  },
  {
    "text": "the completed event and we've determined",
    "start": "883120",
    "end": "884880"
  },
  {
    "text": "we don't want those so it's dropped",
    "start": "884880",
    "end": "885920"
  },
  {
    "text": "during filtering we do the filtering",
    "start": "885920",
    "end": "887720"
  },
  {
    "text": "first so that we don't waste any time",
    "start": "887720",
    "end": "889160"
  },
  {
    "text": "transforming data that we intend to",
    "start": "889160",
    "end": "891199"
  },
  {
    "text": "drop so what does it actually take to",
    "start": "891199",
    "end": "893279"
  },
  {
    "text": "configure all of these statements uh it",
    "start": "893279",
    "end": "895040"
  },
  {
    "text": "turns out not much the configuration is",
    "start": "895040",
    "end": "896800"
  },
  {
    "text": "pretty minimal this config shows uh a",
    "start": "896800",
    "end": "899759"
  },
  {
    "text": "snippet of a working collector config",
    "start": "899759",
    "end": "901800"
  },
  {
    "text": "and this is just a specific filter and",
    "start": "901800",
    "end": "903759"
  },
  {
    "text": "transform processor sections for the",
    "start": "903759",
    "end": "905920"
  },
  {
    "text": "filter processor each condition gets its",
    "start": "905920",
    "end": "907680"
  },
  {
    "text": "own line and then for each log record",
    "start": "907680",
    "end": "910399"
  },
  {
    "text": "the conditions are run in order and any",
    "start": "910399",
    "end": "912800"
  },
  {
    "text": "condition that matches the log's data uh",
    "start": "912800",
    "end": "915600"
  },
  {
    "text": "means that the log is dropped and any",
    "start": "915600",
    "end": "917759"
  },
  {
    "text": "remaining conditions are skipped",
    "start": "917759",
    "end": "920040"
  },
  {
    "text": "similarly the transform processor uh",
    "start": "920040",
    "end": "922759"
  },
  {
    "text": "each statement is run in order updating",
    "start": "922759",
    "end": "925320"
  },
  {
    "text": "the log if the statement is",
    "start": "925320",
    "end": "927079"
  },
  {
    "text": "executed again we use a DSL to make sure",
    "start": "927079",
    "end": "929600"
  },
  {
    "text": "that this can stay small and Compact and",
    "start": "929600",
    "end": "932040"
  },
  {
    "text": "that our config stays",
    "start": "932040",
    "end": "934880"
  },
  {
    "text": "readable so we've been talking about one",
    "start": "934880",
    "end": "937199"
  },
  {
    "text": "really specific example through the",
    "start": "937199",
    "end": "938560"
  },
  {
    "text": "whole presentation so far how to use OTL",
    "start": "938560",
    "end": "940600"
  },
  {
    "text": "to mess with your logs but it can do way",
    "start": "940600",
    "end": "942959"
  },
  {
    "text": "way more than that OTL en enables data",
    "start": "942959",
    "end": "945680"
  },
  {
    "text": "operations like interacting with lists",
    "start": "945680",
    "end": "947959"
  },
  {
    "text": "you could transform your instrumentation",
    "start": "947959",
    "end": "949880"
  },
  {
    "text": "scope changing its attributes or its",
    "start": "949880",
    "end": "951440"
  },
  {
    "text": "name or whatever you could extract new",
    "start": "951440",
    "end": "953880"
  },
  {
    "text": "attributes from a string you could do",
    "start": "953880",
    "end": "955480"
  },
  {
    "text": "intricate time manipulations on your",
    "start": "955480",
    "end": "957120"
  },
  {
    "text": "metrics you could generate new met",
    "start": "957120",
    "end": "958600"
  },
  {
    "text": "metrics you could interact with your",
    "start": "958600",
    "end": "960680"
  },
  {
    "text": "span events change its attribute change",
    "start": "960680",
    "end": "962519"
  },
  {
    "text": "its name and so on and so forth all of",
    "start": "962519",
    "end": "965199"
  },
  {
    "text": "these data operations are more because",
    "start": "965199",
    "end": "967040"
  },
  {
    "text": "are possible because of our large",
    "start": "967040",
    "end": "968639"
  },
  {
    "text": "standard function Library listed here",
    "start": "968639",
    "end": "970519"
  },
  {
    "text": "are just some of the functions available",
    "start": "970519",
    "end": "971839"
  },
  {
    "text": "to you those functions with the",
    "start": "971839",
    "end": "973279"
  },
  {
    "text": "uppercase uh First characters are pure",
    "start": "973279",
    "end": "975480"
  },
  {
    "text": "functions they don't change the",
    "start": "975480",
    "end": "976440"
  },
  {
    "text": "underlying Telemetry like the Convert",
    "start": "976440",
    "end": "978000"
  },
  {
    "text": "case function we used",
    "start": "978000",
    "end": "979279"
  },
  {
    "text": "earlier functions like this you can do",
    "start": "979279",
    "end": "981440"
  },
  {
    "text": "things like combining two attributes",
    "start": "981440",
    "end": "982959"
  },
  {
    "text": "using the concat function you could use",
    "start": "982959",
    "end": "984600"
  },
  {
    "text": "parse Json to turn a string from the",
    "start": "984600",
    "end": "986720"
  },
  {
    "text": "body of a log or from an attribute into",
    "start": "986720",
    "end": "989279"
  },
  {
    "text": "a map for future use you could truncate",
    "start": "989279",
    "end": "991800"
  },
  {
    "text": "the length of strings you could limit",
    "start": "991800",
    "end": "993160"
  },
  {
    "text": "the number of attributes on your payload",
    "start": "993160",
    "end": "995199"
  },
  {
    "text": "you could calculate span duration using",
    "start": "995199",
    "end": "997079"
  },
  {
    "text": "otls built-in arithmetic capabilities uh",
    "start": "997079",
    "end": "1000120"
  },
  {
    "text": "hash attributes and so on and so forth",
    "start": "1000120",
    "end": "1002880"
  },
  {
    "text": "uh these aren't even all the functions",
    "start": "1002880",
    "end": "1004079"
  },
  {
    "text": "available for you to use it's only what",
    "start": "1004079",
    "end": "1005440"
  },
  {
    "text": "we could fit on this page and if you",
    "start": "1005440",
    "end": "1007759"
  },
  {
    "text": "start using OTL and you feel like",
    "start": "1007759",
    "end": "1009199"
  },
  {
    "text": "there's not a function that you need",
    "start": "1009199",
    "end": "1010720"
  },
  {
    "text": "just let us know and we can work on",
    "start": "1010720",
    "end": "1011880"
  },
  {
    "text": "integrating that into the into the",
    "start": "1011880",
    "end": "1014880"
  },
  {
    "text": "library so where can you use OTL it's",
    "start": "1014880",
    "end": "1017560"
  },
  {
    "text": "available in several processors already",
    "start": "1017560",
    "end": "1019440"
  },
  {
    "text": "with the emphasis on the transform",
    "start": "1019440",
    "end": "1020839"
  },
  {
    "text": "processor being the place that actually",
    "start": "1020839",
    "end": "1022120"
  },
  {
    "text": "does the transformation of telemetry the",
    "start": "1022120",
    "end": "1024120"
  },
  {
    "text": "filter processor and the tail sampling",
    "start": "1024120",
    "end": "1025720"
  },
  {
    "text": "processor use OTL conditions to make",
    "start": "1025720",
    "end": "1027480"
  },
  {
    "text": "decisions the filter processor we talked",
    "start": "1027480",
    "end": "1029120"
  },
  {
    "text": "about earlier is uses as a condition to",
    "start": "1029120",
    "end": "1031240"
  },
  {
    "text": "determine when to drop data and the tail",
    "start": "1031240",
    "end": "1033240"
  },
  {
    "text": "sampling processor you can use OTL",
    "start": "1033240",
    "end": "1035000"
  },
  {
    "text": "conditions to determine when to sample a",
    "start": "1035000",
    "end": "1036600"
  },
  {
    "text": "trace the routing and the count",
    "start": "1036600",
    "end": "1039360"
  },
  {
    "text": "connector can also use OTL conditions to",
    "start": "1039360",
    "end": "1041480"
  },
  {
    "text": "make decisions and in fact be on the",
    "start": "1041480",
    "end": "1043000"
  },
  {
    "text": "lookout for more components to start",
    "start": "1043000",
    "end": "1044480"
  },
  {
    "text": "using OTL conditions in this way as it's",
    "start": "1044480",
    "end": "1046720"
  },
  {
    "text": "one of the ways we hope to start",
    "start": "1046720",
    "end": "1047880"
  },
  {
    "text": "standardizing configuration between",
    "start": "1047880",
    "end": "1050200"
  },
  {
    "text": "processors if you've got a custom",
    "start": "1050200",
    "end": "1052120"
  },
  {
    "text": "component and you think that you could",
    "start": "1052120",
    "end": "1053320"
  },
  {
    "text": "take advantage of OTL to do",
    "start": "1053320",
    "end": "1054880"
  },
  {
    "text": "transformation of data or to make a",
    "start": "1054880",
    "end": "1056480"
  },
  {
    "text": "decision uh great ot2 tail is a package",
    "start": "1056480",
    "end": "1058840"
  },
  {
    "text": "it's available ready for use and it even",
    "start": "1058840",
    "end": "1061000"
  },
  {
    "text": "supports custom function should you have",
    "start": "1061000",
    "end": "1062520"
  },
  {
    "text": "a really specific",
    "start": "1062520",
    "end": "1064679"
  },
  {
    "text": "need so what's next for OTL it's been",
    "start": "1064679",
    "end": "1067480"
  },
  {
    "text": "undergoing a lot of change in the past",
    "start": "1067480",
    "end": "1069000"
  },
  {
    "text": "couple months and it's currently",
    "start": "1069000",
    "end": "1070440"
  },
  {
    "text": "considered Alpha but it is ready for",
    "start": "1070440",
    "end": "1072000"
  },
  {
    "text": "General use at this point we believe the",
    "start": "1072000",
    "end": "1074039"
  },
  {
    "text": "language has uh all the features it",
    "start": "1074039",
    "end": "1076200"
  },
  {
    "text": "needs for the future and is in a good",
    "start": "1076200",
    "end": "1077720"
  },
  {
    "text": "State and we believe most of the",
    "start": "1077720",
    "end": "1078960"
  },
  {
    "text": "breaking uh changes to the API have been",
    "start": "1078960",
    "end": "1080799"
  },
  {
    "text": "completed once we're confident that the",
    "start": "1080799",
    "end": "1082720"
  },
  {
    "text": "API is in a good place we'll promote it",
    "start": "1082720",
    "end": "1084240"
  },
  {
    "text": "to Beta the transform processor",
    "start": "1084240",
    "end": "1087039"
  },
  {
    "text": "development closely follows otls we'll",
    "start": "1087039",
    "end": "1089280"
  },
  {
    "text": "promote it to Beta once we promote OTL",
    "start": "1089280",
    "end": "1091200"
  },
  {
    "text": "to Beta but we do feel the transform",
    "start": "1091200",
    "end": "1093000"
  },
  {
    "text": "processor is ready to handle most common",
    "start": "1093000",
    "end": "1095360"
  },
  {
    "text": "Transformations if you have any feedback",
    "start": "1095360",
    "end": "1097240"
  },
  {
    "text": "or questions about anything related to",
    "start": "1097240",
    "end": "1098760"
  },
  {
    "text": "OTL uh please open G ju on GitHub it's",
    "start": "1098760",
    "end": "1101760"
  },
  {
    "text": "really really helpful for us it helps us",
    "start": "1101760",
    "end": "1103720"
  },
  {
    "text": "determine the priority of our users and",
    "start": "1103720",
    "end": "1105320"
  },
  {
    "text": "to keep our quality high once we'",
    "start": "1105320",
    "end": "1108000"
  },
  {
    "text": "promoted the transform processor to Beta",
    "start": "1108000",
    "end": "1110240"
  },
  {
    "text": "uh we'd like to start deprecating",
    "start": "1110240",
    "end": "1111440"
  },
  {
    "text": "redundant processors we have an issue",
    "start": "1111440",
    "end": "1113559"
  },
  {
    "text": "opened already to determine exactly how",
    "start": "1113559",
    "end": "1115120"
  },
  {
    "text": "we're going to approach this but the",
    "start": "1115120",
    "end": "1116919"
  },
  {
    "text": "processors we're targeting right now are",
    "start": "1116919",
    "end": "1118360"
  },
  {
    "text": "the attribute logs transform metrics",
    "start": "1118360",
    "end": "1120559"
  },
  {
    "text": "transform resource attribute and the",
    "start": "1120559",
    "end": "1122360"
  },
  {
    "text": "span processor our goals to make this",
    "start": "1122360",
    "end": "1124880"
  },
  {
    "text": "deprecation as painless as",
    "start": "1124880",
    "end": "1127440"
  },
  {
    "text": "possible if you've made it this far and",
    "start": "1127440",
    "end": "1129520"
  },
  {
    "text": "you want to know more about the things",
    "start": "1129520",
    "end": "1130960"
  },
  {
    "text": "that we talked about today uh here are",
    "start": "1130960",
    "end": "1132559"
  },
  {
    "text": "some links to the different components",
    "start": "1132559",
    "end": "1133760"
  },
  {
    "text": "that we talked about um our goal is to",
    "start": "1133760",
    "end": "1137000"
  },
  {
    "text": "always make our documentation for OT TL",
    "start": "1137000",
    "end": "1138720"
  },
  {
    "text": "better uh we want people to be easily to",
    "start": "1138720",
    "end": "1140960"
  },
  {
    "text": "learn how to use OTL how it enables",
    "start": "1140960",
    "end": "1143360"
  },
  {
    "text": "their use cases um and just like what",
    "start": "1143360",
    "end": "1145280"
  },
  {
    "text": "it's all about if you look at any of",
    "start": "1145280",
    "end": "1147039"
  },
  {
    "text": "these docs and uh you want to provide",
    "start": "1147039",
    "end": "1149039"
  },
  {
    "text": "some feedback uh please let us know in",
    "start": "1149039",
    "end": "1151039"
  },
  {
    "text": "cncf slack or in GitHub issues or",
    "start": "1151039",
    "end": "1152799"
  },
  {
    "text": "whatever like I said earlier it's really",
    "start": "1152799",
    "end": "1155000"
  },
  {
    "text": "really helpful when uh people engage",
    "start": "1155000",
    "end": "1156840"
  },
  {
    "text": "with the community thank you for",
    "start": "1156840",
    "end": "1158960"
  },
  {
    "text": "listening to us talk about the collector",
    "start": "1158960",
    "end": "1161520"
  },
  {
    "text": "and we're opening it up for questions",
    "start": "1161520",
    "end": "1164230"
  },
  {
    "text": "[Applause]",
    "start": "1164230",
    "end": "1167240"
  },
  {
    "text": "now",
    "start": "1167240",
    "end": "1170240"
  },
  {
    "text": "yes that's a great idea and I'm part of",
    "start": "1176600",
    "end": "1178880"
  },
  {
    "text": "that and I should have known to promote",
    "start": "1178880",
    "end": "1180799"
  },
  {
    "text": "it yes uh so if you like open Telemetry",
    "start": "1180799",
    "end": "1185600"
  },
  {
    "text": "or uh if this is interested to you if",
    "start": "1185600",
    "end": "1188240"
  },
  {
    "text": "you like OTL or whatever on Wednesday at",
    "start": "1188240",
    "end": "1192120"
  },
  {
    "text": "2:30 uh is contrib Fest and so if you",
    "start": "1192120",
    "end": "1194880"
  },
  {
    "text": "are a regular contributor or if you are",
    "start": "1194880",
    "end": "1197120"
  },
  {
    "text": "a new contributor and you you would like",
    "start": "1197120",
    "end": "1198600"
  },
  {
    "text": "to uh just continue to do more or if",
    "start": "1198600",
    "end": "1201000"
  },
  {
    "text": "you've never contributed and you would",
    "start": "1201000",
    "end": "1202280"
  },
  {
    "text": "like to do your first contribution you",
    "start": "1202280",
    "end": "1203919"
  },
  {
    "text": "can come to contri Fest we'll have a",
    "start": "1203919",
    "end": "1206200"
  },
  {
    "text": "bunch of curated issues in The Collector",
    "start": "1206200",
    "end": "1209000"
  },
  {
    "text": "a lot of them are OTL new functions that",
    "start": "1209000",
    "end": "1211600"
  },
  {
    "text": "you could add um come join us and make",
    "start": "1211600",
    "end": "1215080"
  },
  {
    "text": "your first contribution to open",
    "start": "1215080",
    "end": "1216400"
  },
  {
    "text": "Telemetry or make your second or your",
    "start": "1216400",
    "end": "1217960"
  },
  {
    "text": "third or whatever and just come help out",
    "start": "1217960",
    "end": "1219840"
  },
  {
    "text": "the",
    "start": "1219840",
    "end": "1221960"
  },
  {
    "text": "project I don't know how questions are",
    "start": "1223360",
    "end": "1225400"
  },
  {
    "text": "working so is it working yeah uh so it",
    "start": "1225400",
    "end": "1229679"
  },
  {
    "text": "it looks great I have one question that",
    "start": "1229679",
    "end": "1231919"
  },
  {
    "text": "is it possible in ot to create like a a",
    "start": "1231919",
    "end": "1235120"
  },
  {
    "text": "user defined function like in your",
    "start": "1235120",
    "end": "1237480"
  },
  {
    "text": "example the paing you know the warning",
    "start": "1237480",
    "end": "1239520"
  },
  {
    "text": "message is can be warning warn info debx",
    "start": "1239520",
    "end": "1241919"
  },
  {
    "text": "so and I don't want to you know like uh",
    "start": "1241919",
    "end": "1243840"
  },
  {
    "text": "Define all these lines in every",
    "start": "1243840",
    "end": "1246720"
  },
  {
    "text": "configuration so OTL allows custom",
    "start": "1246720",
    "end": "1249520"
  },
  {
    "text": "functions uh so like there's the set",
    "start": "1249520",
    "end": "1252559"
  },
  {
    "text": "function that we looked at if you wanted",
    "start": "1252559",
    "end": "1254240"
  },
  {
    "text": "set to do something really specific",
    "start": "1254240",
    "end": "1256240"
  },
  {
    "text": "instead of using our set you could",
    "start": "1256240",
    "end": "1257679"
  },
  {
    "text": "Define your your own set and then uh",
    "start": "1257679",
    "end": "1260400"
  },
  {
    "text": "your component could give that to the",
    "start": "1260400",
    "end": "1262159"
  },
  {
    "text": "package and say this is a function",
    "start": "1262159",
    "end": "1263480"
  },
  {
    "text": "available for the DSL to use um does",
    "start": "1263480",
    "end": "1266799"
  },
  {
    "text": "that answer the question yeah just a one",
    "start": "1266799",
    "end": "1269600"
  },
  {
    "text": "follow up is it so I have to Define in",
    "start": "1269600",
    "end": "1271880"
  },
  {
    "text": "uh in the go programming or Define as",
    "start": "1271880",
    "end": "1274520"
  },
  {
    "text": "you know like a set of Set uh functions",
    "start": "1274520",
    "end": "1277120"
  },
  {
    "text": "you would uh you would have to code it",
    "start": "1277120",
    "end": "1278440"
  },
  {
    "text": "up and like build it into your like",
    "start": "1278440",
    "end": "1280799"
  },
  {
    "text": "write it in go build it into your",
    "start": "1280799",
    "end": "1282320"
  },
  {
    "text": "component and then it's compiled like",
    "start": "1282320",
    "end": "1284480"
  },
  {
    "text": "with your component and OTL is like a",
    "start": "1284480",
    "end": "1286200"
  },
  {
    "text": "package great thank you very much yeah",
    "start": "1286200",
    "end": "1288320"
  },
  {
    "text": "we do not have Dynamic function Imports",
    "start": "1288320",
    "end": "1291080"
  },
  {
    "text": "yet there is an open issue about that if",
    "start": "1291080",
    "end": "1292840"
  },
  {
    "text": "someone really likes wasum like that",
    "start": "1292840",
    "end": "1295440"
  },
  {
    "text": "could be a cool way to do",
    "start": "1295440",
    "end": "1298159"
  },
  {
    "text": "it uh I'm curious about connecting like",
    "start": "1298159",
    "end": "1302080"
  },
  {
    "text": "an orphan span via transfer process I",
    "start": "1302080",
    "end": "1304760"
  },
  {
    "text": "know that doesn't work now but is this",
    "start": "1304760",
    "end": "1306840"
  },
  {
    "text": "like a feature That Could Be Imagined to",
    "start": "1306840",
    "end": "1308640"
  },
  {
    "text": "work",
    "start": "1308640",
    "end": "1310840"
  },
  {
    "text": "someday it's tough to answer that one I",
    "start": "1311240",
    "end": "1313400"
  },
  {
    "text": "think it would depend on your case if",
    "start": "1313400",
    "end": "1314600"
  },
  {
    "text": "you have the information around the the",
    "start": "1314600",
    "end": "1318039"
  },
  {
    "text": "Trace ID that you want to connect the",
    "start": "1318039",
    "end": "1319240"
  },
  {
    "text": "span to yes but I think that you would",
    "start": "1319240",
    "end": "1322559"
  },
  {
    "text": "need State around previously seen spans",
    "start": "1322559",
    "end": "1326159"
  },
  {
    "text": "within that Trace in order to do that",
    "start": "1326159",
    "end": "1327919"
  },
  {
    "text": "the transform processor is stateless so",
    "start": "1327919",
    "end": "1329600"
  },
  {
    "text": "it wouldn't support that right now but",
    "start": "1329600",
    "end": "1331679"
  },
  {
    "text": "OTL could be used in a stateful",
    "start": "1331679",
    "end": "1334919"
  },
  {
    "text": "processor in the future to support that",
    "start": "1334919",
    "end": "1336640"
  },
  {
    "text": "use case",
    "start": "1336640",
    "end": "1340240"
  },
  {
    "text": "thanks hi um do you have any explicit",
    "start": "1341080",
    "end": "1343880"
  },
  {
    "text": "design goals around things like safety",
    "start": "1343880",
    "end": "1346960"
  },
  {
    "text": "um how do I make sure",
    "start": "1346960",
    "end": "1348480"
  },
  {
    "text": "that an possibly untrusted user has",
    "start": "1348480",
    "end": "1351200"
  },
  {
    "text": "provided some OTL it's not going to blow",
    "start": "1351200",
    "end": "1353520"
  },
  {
    "text": "up your complet",
    "start": "1353520",
    "end": "1356480"
  },
  {
    "text": "collector yeah so OTL is uh like what is",
    "start": "1356880",
    "end": "1360960"
  },
  {
    "text": "available",
    "start": "1360960",
    "end": "1362279"
  },
  {
    "text": "to uh The Collector is compiled into the",
    "start": "1362279",
    "end": "1365200"
  },
  {
    "text": "collector and so you can only write the",
    "start": "1365200",
    "end": "1366720"
  },
  {
    "text": "DSL to like interact what's available so",
    "start": "1366720",
    "end": "1368960"
  },
  {
    "text": "you can't you wouldn't be able to like",
    "start": "1368960",
    "end": "1370200"
  },
  {
    "text": "inject custom code or anything like that",
    "start": "1370200",
    "end": "1372240"
  },
  {
    "text": "there's no there's no availability for",
    "start": "1372240",
    "end": "1374840"
  },
  {
    "text": "um Dynamic functions or anything like",
    "start": "1374840",
    "end": "1376480"
  },
  {
    "text": "that um",
    "start": "1376480",
    "end": "1378600"
  },
  {
    "text": "if if someone got a hold of your config",
    "start": "1378600",
    "end": "1380279"
  },
  {
    "text": "and and messed with your statements uh",
    "start": "1380279",
    "end": "1382960"
  },
  {
    "text": "it would change what the transform",
    "start": "1382960",
    "end": "1384360"
  },
  {
    "text": "processor was doing but they would have",
    "start": "1384360",
    "end": "1385919"
  },
  {
    "text": "already gotten into your system and like",
    "start": "1385919",
    "end": "1388880"
  },
  {
    "text": "it the collector's already compromised",
    "start": "1388880",
    "end": "1390919"
  },
  {
    "text": "at that point so so I'm thinking about",
    "start": "1390919",
    "end": "1393360"
  },
  {
    "text": "uh like building a system maybe I want",
    "start": "1393360",
    "end": "1395360"
  },
  {
    "text": "to build a system where I can provide a",
    "start": "1395360",
    "end": "1397360"
  },
  {
    "text": "user to to offer Dynamic OTL so they can",
    "start": "1397360",
    "end": "1401120"
  },
  {
    "text": "Define OTL runtime um is there like are",
    "start": "1401120",
    "end": "1405240"
  },
  {
    "text": "you intentionally not providing cheing",
    "start": "1405240",
    "end": "1407080"
  },
  {
    "text": "completeness to to make sure that they",
    "start": "1407080",
    "end": "1408880"
  },
  {
    "text": "can't run something forever anything",
    "start": "1408880",
    "end": "1411799"
  },
  {
    "text": "like that I think that would be accurate",
    "start": "1411799",
    "end": "1413279"
  },
  {
    "text": "right yeah um I would not call the",
    "start": "1413279",
    "end": "1415679"
  },
  {
    "text": "language train complete it's very it's",
    "start": "1415679",
    "end": "1417880"
  },
  {
    "text": "very constrained um I should mention",
    "start": "1417880",
    "end": "1419919"
  },
  {
    "text": "that",
    "start": "1419919",
    "end": "1421240"
  },
  {
    "text": "um each statement doesn't there's no",
    "start": "1421240",
    "end": "1424600"
  },
  {
    "text": "State between each statement you you can",
    "start": "1424600",
    "end": "1426720"
  },
  {
    "text": "use the cache you can put values in a",
    "start": "1426720",
    "end": "1428679"
  },
  {
    "text": "map and then refer to them later but",
    "start": "1428679",
    "end": "1430559"
  },
  {
    "text": "there's no way to set variables or",
    "start": "1430559",
    "end": "1433360"
  },
  {
    "text": "Define functions or update any kind of",
    "start": "1433360",
    "end": "1436360"
  },
  {
    "text": "like environmental context",
    "start": "1436360",
    "end": "1439880"
  },
  {
    "text": "yep hey hey how's it going great talk um",
    "start": "1442760",
    "end": "1446679"
  },
  {
    "text": "do you have any mechanisms of validating",
    "start": "1446679",
    "end": "1449120"
  },
  {
    "text": "transforms where you could sort of like",
    "start": "1449120",
    "end": "1451559"
  },
  {
    "text": "give an input and output and say okay",
    "start": "1451559",
    "end": "1453840"
  },
  {
    "text": "this is the set of transforms and this",
    "start": "1453840",
    "end": "1455200"
  },
  {
    "text": "is what I expect to happen almost like",
    "start": "1455200",
    "end": "1457480"
  },
  {
    "text": "unit testing your",
    "start": "1457480",
    "end": "1458760"
  },
  {
    "text": "transforms that is a really really good",
    "start": "1458760",
    "end": "1460919"
  },
  {
    "text": "idea and the answer is the debug",
    "start": "1460919",
    "end": "1463279"
  },
  {
    "text": "exporter right now which isn't a great",
    "start": "1463279",
    "end": "1465399"
  },
  {
    "text": "which isn't a great answer but right now",
    "start": "1465399",
    "end": "1467240"
  },
  {
    "text": "it's like run it through the pipeline",
    "start": "1467240",
    "end": "1468720"
  },
  {
    "text": "and see what the collector spits out um",
    "start": "1468720",
    "end": "1470760"
  },
  {
    "text": "it would be nice to have some more",
    "start": "1470760",
    "end": "1472679"
  },
  {
    "text": "rigorous um like validation and in like",
    "start": "1472679",
    "end": "1476720"
  },
  {
    "text": "capabilities uh in the like package",
    "start": "1476720",
    "end": "1480080"
  },
  {
    "text": "itself uh that would be nice",
    "start": "1480080",
    "end": "1483440"
  },
  {
    "text": "yeah see you",
    "start": "1483440",
    "end": "1486720"
  },
  {
    "text": "Wednesday uh so I want to make make sure",
    "start": "1487559",
    "end": "1489919"
  },
  {
    "text": "I'm not mistaken but you mentioned that",
    "start": "1489919",
    "end": "1491600"
  },
  {
    "text": "the logs transform processors was the",
    "start": "1491600",
    "end": "1493520"
  },
  {
    "text": "things that's being deprecated in favor",
    "start": "1493520",
    "end": "1495240"
  },
  {
    "text": "of",
    "start": "1495240",
    "end": "1496000"
  },
  {
    "text": "this yes so the logs transform processor",
    "start": "1496000",
    "end": "1498919"
  },
  {
    "text": "uses stanza which is another type of",
    "start": "1498919",
    "end": "1502279"
  },
  {
    "text": "transformation package in open Telemetry",
    "start": "1502279",
    "end": "1505039"
  },
  {
    "text": "um so the log transform processor right",
    "start": "1505039",
    "end": "1506720"
  },
  {
    "text": "now is in development and the main",
    "start": "1506720",
    "end": "1508840"
  },
  {
    "text": "concern around it is that you need to",
    "start": "1508840",
    "end": "1511120"
  },
  {
    "text": "translate things from P data into a",
    "start": "1511120",
    "end": "1514080"
  },
  {
    "text": "stanza specific format and then back",
    "start": "1514080",
    "end": "1515799"
  },
  {
    "text": "into P data and the inefficiencies",
    "start": "1515799",
    "end": "1518320"
  },
  {
    "text": "around that conversion are what we're",
    "start": "1518320",
    "end": "1520039"
  },
  {
    "text": "concerned about but we're trying to make",
    "start": "1520039",
    "end": "1521320"
  },
  {
    "text": "OTL like functionally equivalent so that",
    "start": "1521320",
    "end": "1524039"
  },
  {
    "text": "there's not going to be any uh loss",
    "start": "1524039",
    "end": "1525679"
  },
  {
    "text": "there yeah uh I was wondering if there",
    "start": "1525679",
    "end": "1527520"
  },
  {
    "text": "is anybody would I I don't know how",
    "start": "1527520",
    "end": "1530200"
  },
  {
    "text": "popular otel log usage is right now so",
    "start": "1530200",
    "end": "1532880"
  },
  {
    "text": "maybe not but like the the process of",
    "start": "1532880",
    "end": "1535520"
  },
  {
    "text": "like moving all of if you have a lot of",
    "start": "1535520",
    "end": "1537600"
  },
  {
    "text": "complicated like exp Transformations",
    "start": "1537600",
    "end": "1539880"
  },
  {
    "text": "that you used to do and now is being",
    "start": "1539880",
    "end": "1541399"
  },
  {
    "text": "deprecated was like was there like a",
    "start": "1541399",
    "end": "1543720"
  },
  {
    "text": "warning ahead of time and did people",
    "start": "1543720",
    "end": "1545120"
  },
  {
    "text": "know this was coming or there anybody",
    "start": "1545120",
    "end": "1546600"
  },
  {
    "text": "who's like upset by the by yeah we",
    "start": "1546600",
    "end": "1548440"
  },
  {
    "text": "haven't started it yet so like nothing's",
    "start": "1548440",
    "end": "1550039"
  },
  {
    "text": "happened okay um so this is the warning",
    "start": "1550039",
    "end": "1553240"
  },
  {
    "text": "yeah well this is this is this is a this",
    "start": "1553240",
    "end": "1555039"
  },
  {
    "text": "is a statement that like we'd like to",
    "start": "1555039",
    "end": "1556480"
  },
  {
    "text": "get to it as Austin talked about earlier",
    "start": "1556480",
    "end": "1559000"
  },
  {
    "text": "statements in 2019 may not be completed",
    "start": "1559000",
    "end": "1560960"
  },
  {
    "text": "till 2023 so like no timeline it is 2023",
    "start": "1560960",
    "end": "1564919"
  },
  {
    "text": "right uh so like this statement is being",
    "start": "1564919",
    "end": "1567760"
  },
  {
    "text": "made now maybe it'll be done in 2027",
    "start": "1567760",
    "end": "1570000"
  },
  {
    "text": "like I don't know um the the logs",
    "start": "1570000",
    "end": "1573360"
  },
  {
    "text": "transform processor is currently uh in",
    "start": "1573360",
    "end": "1575799"
  },
  {
    "text": "development it's not included in the",
    "start": "1575799",
    "end": "1577600"
  },
  {
    "text": "contrib distribution so like if you're a",
    "start": "1577600",
    "end": "1579200"
  },
  {
    "text": "user of it you you will have had to gone",
    "start": "1579200",
    "end": "1581360"
  },
  {
    "text": "out of your way to get it and like more",
    "start": "1581360",
    "end": "1583600"
  },
  {
    "text": "power to you that's great when we get to",
    "start": "1583600",
    "end": "1585520"
  },
  {
    "text": "that transform process or the logs",
    "start": "1585520",
    "end": "1587159"
  },
  {
    "text": "transform proc processor like we are",
    "start": "1587159",
    "end": "1588760"
  },
  {
    "text": "looking at ways to take like take in the",
    "start": "1588760",
    "end": "1591559"
  },
  {
    "text": "config and spit out the OTL equivalent",
    "start": "1591559",
    "end": "1594440"
  },
  {
    "text": "statement so like filter processor right",
    "start": "1594440",
    "end": "1596039"
  },
  {
    "text": "now you can do OTL statements or you",
    "start": "1596039",
    "end": "1597919"
  },
  {
    "text": "could do the old style of config we have",
    "start": "1597919",
    "end": "1600159"
  },
  {
    "text": "already written the converter of the old",
    "start": "1600159",
    "end": "1602279"
  },
  {
    "text": "style config it'll read it in and like",
    "start": "1602279",
    "end": "1605159"
  },
  {
    "text": "turn it into OTL and the next step is to",
    "start": "1605159",
    "end": "1607520"
  },
  {
    "text": "like spit out that statement and like",
    "start": "1607520",
    "end": "1608960"
  },
  {
    "text": "that'll be part of the deprecation",
    "start": "1608960",
    "end": "1610279"
  },
  {
    "text": "process",
    "start": "1610279",
    "end": "1611799"
  },
  {
    "text": "um there is also way back way back I",
    "start": "1611799",
    "end": "1615520"
  },
  {
    "text": "think like two years ago when we first",
    "start": "1615520",
    "end": "1616919"
  },
  {
    "text": "started doing OT TL work uh there was a",
    "start": "1616919",
    "end": "1619679"
  },
  {
    "text": "question of logs transform processor OTL",
    "start": "1619679",
    "end": "1621799"
  },
  {
    "text": "which one should we do and Dan uh you",
    "start": "1621799",
    "end": "1624120"
  },
  {
    "text": "can ask him more about it but he did a",
    "start": "1624120",
    "end": "1625399"
  },
  {
    "text": "huge comparison between stanza and OTL",
    "start": "1625399",
    "end": "1628080"
  },
  {
    "text": "and like would it be possible it's all",
    "start": "1628080",
    "end": "1629559"
  },
  {
    "text": "written up in a really good issue and",
    "start": "1629559",
    "end": "1631120"
  },
  {
    "text": "the answer is yes it's possible it's a",
    "start": "1631120",
    "end": "1633159"
  },
  {
    "text": "lot of work so like we're still working",
    "start": "1633159",
    "end": "1635480"
  },
  {
    "text": "towards it which is why uh nothing's",
    "start": "1635480",
    "end": "1638080"
  },
  {
    "text": "like officially marked deprecated or we",
    "start": "1638080",
    "end": "1639760"
  },
  {
    "text": "haven't done any feature Gates or",
    "start": "1639760",
    "end": "1640960"
  },
  {
    "text": "anything like that yet okay so oh I",
    "start": "1640960",
    "end": "1643399"
  },
  {
    "text": "wanted to add on to that for things that",
    "start": "1643399",
    "end": "1645080"
  },
  {
    "text": "are using exp like the filter processor",
    "start": "1645080",
    "end": "1647240"
  },
  {
    "text": "um just add on to what Tyler said like",
    "start": "1647240",
    "end": "1648880"
  },
  {
    "text": "when we convert those to OTL statements",
    "start": "1648880",
    "end": "1650880"
  },
  {
    "text": "the plan is as part of the deprecation",
    "start": "1650880",
    "end": "1652640"
  },
  {
    "text": "process the warning message that we",
    "start": "1652640",
    "end": "1654320"
  },
  {
    "text": "print out that says like hey this is",
    "start": "1654320",
    "end": "1655600"
  },
  {
    "text": "deprecated we're planning to print out",
    "start": "1655600",
    "end": "1658080"
  },
  {
    "text": "like here's the config that you should",
    "start": "1658080",
    "end": "1659960"
  },
  {
    "text": "move to like just copy paste this and",
    "start": "1659960",
    "end": "1661640"
  },
  {
    "text": "you're good to go we're trying to make",
    "start": "1661640",
    "end": "1662760"
  },
  {
    "text": "it as painless as possible so there is",
    "start": "1662760",
    "end": "1664360"
  },
  {
    "text": "like a conversion story between expert",
    "start": "1664360",
    "end": "1666840"
  },
  {
    "text": "and exactly yes there is a conversion",
    "start": "1666840",
    "end": "1668399"
  },
  {
    "text": "story for the for the filter processor's",
    "start": "1668399",
    "end": "1670440"
  },
  {
    "text": "use of EX we're getting kind of specific",
    "start": "1670440",
    "end": "1672159"
  },
  {
    "text": "and we get off the stage yeah you're",
    "start": "1672159",
    "end": "1673640"
  },
  {
    "text": "right the for the EXP for the EXP filter",
    "start": "1673640",
    "end": "1676240"
  },
  {
    "text": "processor specific fig uh maybe not",
    "start": "1676240",
    "end": "1679679"
  },
  {
    "text": "because that one is like a full language",
    "start": "1679679",
    "end": "1682760"
  },
  {
    "text": "and like converting that full language",
    "start": "1682760",
    "end": "1684200"
  },
  {
    "text": "to our full language would be really",
    "start": "1684200",
    "end": "1686000"
  },
  {
    "text": "really hard so maybe not that one but",
    "start": "1686000",
    "end": "1688159"
  },
  {
    "text": "also the EXP stuff there was like the",
    "start": "1688159",
    "end": "1691120"
  },
  {
    "text": "filter processor didn't build in too",
    "start": "1691120",
    "end": "1692559"
  },
  {
    "text": "many capabilities so if you've got like",
    "start": "1692559",
    "end": "1694399"
  },
  {
    "text": "some really complex situation like I'd",
    "start": "1694399",
    "end": "1695840"
  },
  {
    "text": "love to know more about it I'll I'll",
    "start": "1695840",
    "end": "1698159"
  },
  {
    "text": "I'll message you",
    "start": "1698159",
    "end": "1700880"
  },
  {
    "text": "yeah all right we'll pass it on",
    "start": "1700960",
    "end": "1703360"
  },
  {
    "text": "whoever's",
    "start": "1703360",
    "end": "1705840"
  },
  {
    "text": "next",
    "start": "1706440",
    "end": "1709440"
  },
  {
    "text": "[Applause]",
    "start": "1712150",
    "end": "1714799"
  }
]