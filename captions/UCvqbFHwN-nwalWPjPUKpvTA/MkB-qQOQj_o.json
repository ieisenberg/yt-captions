[
  {
    "start": "0",
    "end": "165000"
  },
  {
    "text": "hey everyone in today's session I'm",
    "start": "3840",
    "end": "5600"
  },
  {
    "text": "going to cover how we built a consistent",
    "start": "5600",
    "end": "8120"
  },
  {
    "text": "hash ring for grpc while we were",
    "start": "8120",
    "end": "10679"
  },
  {
    "text": "implementing spice",
    "start": "10679",
    "end": "12880"
  },
  {
    "text": "TB um before we jump into that I'm just",
    "start": "12880",
    "end": "15320"
  },
  {
    "text": "going to give a little bit of background",
    "start": "15320",
    "end": "16800"
  },
  {
    "text": "on who I am um and where I've been What",
    "start": "16800",
    "end": "19800"
  },
  {
    "text": "I've Done um just to build some",
    "start": "19800",
    "end": "21800"
  },
  {
    "text": "credibility um so and makes better sense",
    "start": "21800",
    "end": "24680"
  },
  {
    "text": "kind of the context under which uh we",
    "start": "24680",
    "end": "26320"
  },
  {
    "text": "went out to solve this problem and build",
    "start": "26320",
    "end": "28119"
  },
  {
    "text": "this Library um so my name is Jimmy",
    "start": "28119",
    "end": "30880"
  },
  {
    "text": "zinsky I'm the co-founder and uh one of",
    "start": "30880",
    "end": "35040"
  },
  {
    "text": "the creators of spice TB which is built",
    "start": "35040",
    "end": "37960"
  },
  {
    "text": "by a company called ODed um I'm going to",
    "start": "37960",
    "end": "40760"
  },
  {
    "text": "get into TB a little bit later",
    "start": "40760",
    "end": "43039"
  },
  {
    "text": "because it's going to be a core part of",
    "start": "43039",
    "end": "44680"
  },
  {
    "text": "the story of kind of why we built this",
    "start": "44680",
    "end": "46440"
  },
  {
    "text": "library and how it fits in um to our",
    "start": "46440",
    "end": "49120"
  },
  {
    "text": "application how it might fit into your",
    "start": "49120",
    "end": "50760"
  },
  {
    "text": "applications as well um but prior to all",
    "start": "50760",
    "end": "53359"
  },
  {
    "text": "of this I worked at a company called Red",
    "start": "53359",
    "end": "55199"
  },
  {
    "text": "Hat um by way of the coros acquisition",
    "start": "55199",
    "end": "58960"
  },
  {
    "text": "um at Red Hat I was product manager and",
    "start": "58960",
    "end": "60800"
  },
  {
    "text": "also an",
    "start": "60800",
    "end": "61719"
  },
  {
    "text": "SRE um and then uh I built basically uh",
    "start": "61719",
    "end": "66840"
  },
  {
    "text": "the largest service that was running at",
    "start": "66840",
    "end": "69119"
  },
  {
    "text": "Good Hat um while I was at coros you",
    "start": "69119",
    "end": "71600"
  },
  {
    "text": "might know that an ecosystem it's called",
    "start": "71600",
    "end": "74159"
  },
  {
    "text": "qua",
    "start": "74159",
    "end": "75119"
  },
  {
    "text": "IO um and uh",
    "start": "75119",
    "end": "79040"
  },
  {
    "text": "effectively uh I've worked as a software",
    "start": "79040",
    "end": "81560"
  },
  {
    "text": "engineer and a product manager always",
    "start": "81560",
    "end": "84640"
  },
  {
    "text": "carrying a pager always kind of working",
    "start": "84640",
    "end": "86200"
  },
  {
    "text": "on distributed systems um in ecosystem",
    "start": "86200",
    "end": "90240"
  },
  {
    "text": "the greater open source Community um I'm",
    "start": "90240",
    "end": "92159"
  },
  {
    "text": "an oci maintainer so that is the",
    "start": "92159",
    "end": "94439"
  },
  {
    "text": "standards body for containers um if",
    "start": "94439",
    "end": "96640"
  },
  {
    "text": "you're unfamiliar and then I've also",
    "start": "96640",
    "end": "98040"
  },
  {
    "text": "created a couple of the kind of cncf",
    "start": "98040",
    "end": "99920"
  },
  {
    "text": "landscape projects um notably operator",
    "start": "99920",
    "end": "103360"
  },
  {
    "text": "framework is one of the ones that we",
    "start": "103360",
    "end": "104640"
  },
  {
    "text": "started at coros and got inherited by",
    "start": "104640",
    "end": "106799"
  },
  {
    "text": "red hat and eventually incubated by cncf",
    "start": "106799",
    "end": "110200"
  },
  {
    "text": "um but I've worked on a whole bunch of",
    "start": "110200",
    "end": "111399"
  },
  {
    "text": "other things in the space too and uh",
    "start": "111399",
    "end": "113680"
  },
  {
    "text": "I've kind of been around uh since before",
    "start": "113680",
    "end": "115960"
  },
  {
    "text": "the cncf was founded um I started",
    "start": "115960",
    "end": "117799"
  },
  {
    "text": "working at choros in 2014 and cncf and",
    "start": "117799",
    "end": "120640"
  },
  {
    "text": "kubernetes kind start around 2015 so",
    "start": "120640",
    "end": "123520"
  },
  {
    "text": "been around familiar with containers",
    "start": "123520",
    "end": "125880"
  },
  {
    "text": "familiar with kind of clab native",
    "start": "125880",
    "end": "127119"
  },
  {
    "text": "ecosystems and building um things on the",
    "start": "127119",
    "end": "129720"
  },
  {
    "text": "cloud with or without kubernetes in a",
    "start": "129720",
    "end": "131599"
  },
  {
    "text": "cloud NAA fashion um up some contact",
    "start": "131599",
    "end": "134920"
  },
  {
    "text": "info here uh feel free to like come back",
    "start": "134920",
    "end": "136760"
  },
  {
    "text": "to the slide whenever um I prefer folks",
    "start": "136760",
    "end": "139599"
  },
  {
    "text": "reach out to me via email um doesn't",
    "start": "139599",
    "end": "142200"
  },
  {
    "text": "matter what the the question is uh I'm",
    "start": "142200",
    "end": "144840"
  },
  {
    "text": "willing to spend time with anyone",
    "start": "144840",
    "end": "146319"
  },
  {
    "text": "answering any questions uh T you in the",
    "start": "146319",
    "end": "148080"
  },
  {
    "text": "right place um emails best way if you",
    "start": "148080",
    "end": "150640"
  },
  {
    "text": "want to reach me for that um since",
    "start": "150640",
    "end": "152160"
  },
  {
    "text": "asynchronous but you can also find me on",
    "start": "152160",
    "end": "154160"
  },
  {
    "text": "GitHub or Twitter um but then also if",
    "start": "154160",
    "end": "156680"
  },
  {
    "text": "you want to actually like Ping me",
    "start": "156680",
    "end": "158000"
  },
  {
    "text": "synchronously and have a real-time",
    "start": "158000",
    "end": "159920"
  },
  {
    "text": "conversation you can also find me in",
    "start": "159920",
    "end": "161400"
  },
  {
    "text": "this place to be Discord uh under the",
    "start": "161400",
    "end": "163280"
  },
  {
    "text": "username jinsky",
    "start": "163280",
    "end": "165519"
  },
  {
    "start": "165000",
    "end": "493000"
  },
  {
    "text": "speaking of spice TB um what exactly is",
    "start": "165519",
    "end": "168640"
  },
  {
    "text": "spice TB it's going to be critical to",
    "start": "168640",
    "end": "170680"
  },
  {
    "text": "kind of understand the rest of this talk",
    "start": "170680",
    "end": "173120"
  },
  {
    "text": "um space TB is actually a framework for",
    "start": "173120",
    "end": "176120"
  },
  {
    "text": "kind of building secure modern",
    "start": "176120",
    "end": "177879"
  },
  {
    "text": "authorization systems um",
    "start": "177879",
    "end": "180640"
  },
  {
    "text": "so fundamentally folks they get product",
    "start": "180640",
    "end": "183120"
  },
  {
    "text": "requirements in their application",
    "start": "183120",
    "end": "184319"
  },
  {
    "text": "usually when they get um their first big",
    "start": "184319",
    "end": "186080"
  },
  {
    "text": "Enterprise customer and that",
    "start": "186080",
    "end": "187920"
  },
  {
    "text": "functionality uh usually is dictating um",
    "start": "187920",
    "end": "190840"
  },
  {
    "text": "some kind of hierarchy around",
    "start": "190840",
    "end": "192599"
  },
  {
    "text": "permissions and access to data store",
    "start": "192599",
    "end": "195040"
  },
  {
    "text": "within the system so they might require",
    "start": "195040",
    "end": "197200"
  },
  {
    "text": "that for example there's a higher level",
    "start": "197200",
    "end": "199200"
  },
  {
    "text": "concept called like an organization and",
    "start": "199200",
    "end": "201239"
  },
  {
    "text": "organizations can have teams and then uh",
    "start": "201239",
    "end": "203959"
  },
  {
    "text": "within a team there might be roles and",
    "start": "203959",
    "end": "206159"
  },
  {
    "text": "then uh users are assigned to roles um",
    "start": "206159",
    "end": "208959"
  },
  {
    "text": "this is kind of like a kind of hierarchy",
    "start": "208959",
    "end": "210760"
  },
  {
    "text": "that you'd see a lot of people call the",
    "start": "210760",
    "end": "212840"
  },
  {
    "text": "system I just described arbac um but",
    "start": "212840",
    "end": "215560"
  },
  {
    "text": "there's a lot of subtle details as to",
    "start": "215560",
    "end": "217239"
  },
  {
    "text": "how different applications um Implement",
    "start": "217239",
    "end": "220000"
  },
  {
    "text": "our back in different ways and what",
    "start": "220000",
    "end": "221319"
  },
  {
    "text": "those requirements are and because all",
    "start": "221319",
    "end": "223480"
  },
  {
    "text": "those things can vary greatly um the",
    "start": "223480",
    "end": "226959"
  },
  {
    "text": "recommendation from Security",
    "start": "226959",
    "end": "228599"
  },
  {
    "text": "Professionals is that you actually build",
    "start": "228599",
    "end": "230680"
  },
  {
    "text": "on top of a pre-existing um",
    "start": "230680",
    "end": "233360"
  },
  {
    "text": "authorization tool chain um to actually",
    "start": "233360",
    "end": "235840"
  },
  {
    "text": "build out these systems because uh if",
    "start": "235840",
    "end": "238079"
  },
  {
    "text": "you build them yourselves you're very",
    "start": "238079",
    "end": "239720"
  },
  {
    "text": "very likely to introduce security flaws",
    "start": "239720",
    "end": "242280"
  },
  {
    "text": "um or make changes that um fundamentally",
    "start": "242280",
    "end": "245159"
  },
  {
    "text": "um limit the capabilities of your",
    "start": "245159",
    "end": "247480"
  },
  {
    "text": "product and make it so you can't",
    "start": "247480",
    "end": "249040"
  },
  {
    "text": "Implement uh features that uh your",
    "start": "249040",
    "end": "251120"
  },
  {
    "text": "customers are going to require in the",
    "start": "251120",
    "end": "252400"
  },
  {
    "text": "future um ask me how I know I've",
    "start": "252400",
    "end": "255640"
  },
  {
    "text": "experien all these pain problems which",
    "start": "255640",
    "end": "257359"
  },
  {
    "text": "is why um we love to start our own",
    "start": "257359",
    "end": "259239"
  },
  {
    "text": "company off to build spice TB um so why",
    "start": "259239",
    "end": "263160"
  },
  {
    "text": "is spice TB different from your homr",
    "start": "263160",
    "end": "264720"
  },
  {
    "text": "system um so it is actually inspired by",
    "start": "264720",
    "end": "267639"
  },
  {
    "text": "the technology um built at Google called",
    "start": "267639",
    "end": "270560"
  },
  {
    "text": "Zanzibar um and this is spice TB is the",
    "start": "270560",
    "end": "273479"
  },
  {
    "text": "most mature open source implementation",
    "start": "273479",
    "end": "275160"
  },
  {
    "text": "of that um it's being used in production",
    "start": "275160",
    "end": "277479"
  },
  {
    "text": "um for a couple years now by um",
    "start": "277479",
    "end": "280240"
  },
  {
    "text": "companies large and small um so we've",
    "start": "280240",
    "end": "283440"
  },
  {
    "text": "kind of tested it in the full gamut um",
    "start": "283440",
    "end": "285840"
  },
  {
    "text": "but the real core power to it is kind of",
    "start": "285840",
    "end": "288479"
  },
  {
    "text": "all around um its design with regards to",
    "start": "288479",
    "end": "292320"
  },
  {
    "text": "uh relational uh relationship based",
    "start": "292320",
    "end": "294479"
  },
  {
    "text": "access control so reback which is not to",
    "start": "294479",
    "end": "297280"
  },
  {
    "text": "be confused with rbac is actually a kind",
    "start": "297280",
    "end": "299440"
  },
  {
    "text": "of lower level design where chain of",
    "start": "299440",
    "end": "302360"
  },
  {
    "text": "relationships defines whether or not a",
    "start": "302360",
    "end": "304639"
  },
  {
    "text": "person has access um so this actually",
    "start": "304639",
    "end": "308880"
  },
  {
    "text": "first got started um by Facebook um they",
    "start": "308880",
    "end": "312639"
  },
  {
    "text": "started protecting their social network",
    "start": "312639",
    "end": "314840"
  },
  {
    "text": "using basically graphs um because",
    "start": "314840",
    "end": "318360"
  },
  {
    "text": "Facebook's database fundamentally is a",
    "start": "318360",
    "end": "320039"
  },
  {
    "text": "graph it was a very natural fit but",
    "start": "320039",
    "end": "322199"
  },
  {
    "text": "ultimately what Google found um was that",
    "start": "322199",
    "end": "325000"
  },
  {
    "text": "even applications where the core data is",
    "start": "325000",
    "end": "328560"
  },
  {
    "text": "not a graph um it benefited from",
    "start": "328560",
    "end": "331800"
  },
  {
    "text": "modeling at least the authorization",
    "start": "331800",
    "end": "333639"
  },
  {
    "text": "system as a graph um to make that a",
    "start": "333639",
    "end": "336080"
  },
  {
    "text": "separate and more understandable",
    "start": "336080",
    "end": "338199"
  },
  {
    "text": "system and what's even uh cooler about",
    "start": "338199",
    "end": "341199"
  },
  {
    "text": "all this is that actually U because",
    "start": "341199",
    "end": "343520"
  },
  {
    "text": "you're modeling a subset of your data as",
    "start": "343520",
    "end": "345120"
  },
  {
    "text": "a graph um the the graph system actually",
    "start": "345120",
    "end": "348080"
  },
  {
    "text": "runs as a separate system entirely um so",
    "start": "348080",
    "end": "351080"
  },
  {
    "text": "that would be space Tob in this case and",
    "start": "351080",
    "end": "352639"
  },
  {
    "text": "your applications would call then into",
    "start": "352639",
    "end": "354360"
  },
  {
    "text": " TB and ask questions such as um Can",
    "start": "354360",
    "end": "357319"
  },
  {
    "text": "this user access this document um",
    "start": "357319",
    "end": "360280"
  },
  {
    "text": "that's really powerful because um now",
    "start": "360280",
    "end": "362960"
  },
  {
    "text": "you don't actually have any of that",
    "start": "362960",
    "end": "364240"
  },
  {
    "text": "logic living within your applications",
    "start": "364240",
    "end": "366360"
  },
  {
    "text": "and any application can make those",
    "start": "366360",
    "end": "368479"
  },
  {
    "text": "queries at any point in time in the life",
    "start": "368479",
    "end": "370520"
  },
  {
    "text": "cycle of handling uh requests or user",
    "start": "370520",
    "end": "373440"
  },
  {
    "text": "interactions um so that means you don't",
    "start": "373440",
    "end": "375520"
  },
  {
    "text": "have to know explicitly ahead of time um",
    "start": "375520",
    "end": "378199"
  },
  {
    "text": "what things need to be what permissions",
    "start": "378199",
    "end": "379560"
  },
  {
    "text": "need to be checked to handle our request",
    "start": "379560",
    "end": "381720"
  },
  {
    "text": "instead you can let any application",
    "start": "381720",
    "end": "383599"
  },
  {
    "text": "check um the requests as needed check",
    "start": "383599",
    "end": "386280"
  },
  {
    "text": "the permissions as needed to handle",
    "start": "386280",
    "end": "387960"
  },
  {
    "text": "request at any point in time um how the",
    "start": "387960",
    "end": "390560"
  },
  {
    "text": "system is being processed in something",
    "start": "390560",
    "end": "392120"
  },
  {
    "text": "like an microsurface",
    "start": "392120",
    "end": "394280"
  },
  {
    "text": "architecture um so I said earlier that",
    "start": "394280",
    "end": "397120"
  },
  {
    "text": "space b is a permissions database uh so",
    "start": "397120",
    "end": "399360"
  },
  {
    "text": "that means that you write a schema and",
    "start": "399360",
    "end": "401560"
  },
  {
    "text": "the schema kind of models the objects in",
    "start": "401560",
    "end": "403080"
  },
  {
    "text": "the system and the relationships across",
    "start": "403080",
    "end": "404919"
  },
  {
    "text": "them and then you're going to write data",
    "start": "404919",
    "end": "406280"
  },
  {
    "text": "into the database has that schema",
    "start": "406280",
    "end": "408319"
  },
  {
    "text": "applied and then you can query that data",
    "start": "408319",
    "end": "410039"
  },
  {
    "text": "in an efficient way to answer these",
    "start": "410039",
    "end": "411639"
  },
  {
    "text": "permission questions so on the left I've",
    "start": "411639",
    "end": "413880"
  },
  {
    "text": "got an example schema um this is",
    "start": "413880",
    "end": "416800"
  },
  {
    "text": "basically modeling a very simple uh",
    "start": "416800",
    "end": "418960"
  },
  {
    "text": "system that kind of looks like Google",
    "start": "418960",
    "end": "420680"
  },
  {
    "text": "Docs um so there's going to be documents",
    "start": "420680",
    "end": "423039"
  },
  {
    "text": "and then there's going to be kind of",
    "start": "423039",
    "end": "424360"
  },
  {
    "text": "roles that you can assign to each",
    "start": "424360",
    "end": "426240"
  },
  {
    "text": "individual document you can be a reader",
    "start": "426240",
    "end": "427639"
  },
  {
    "text": "of a document you can be a writer of a",
    "start": "427639",
    "end": "429080"
  },
  {
    "text": "document and there are permissions on",
    "start": "429080",
    "end": "430560"
  },
  {
    "text": "that document such just like can you",
    "start": "430560",
    "end": "431919"
  },
  {
    "text": "edit or can you view this document",
    "start": "431919",
    "end": "435080"
  },
  {
    "text": "um if you look at uh the very bottom",
    "start": "435080",
    "end": "437960"
  },
  {
    "text": "where we have the view permission you'll",
    "start": "437960",
    "end": "439440"
  },
  {
    "text": "see that the view permission is actually",
    "start": "439440",
    "end": "441240"
  },
  {
    "text": "defined as um being both the reader and",
    "start": "441240",
    "end": "445280"
  },
  {
    "text": "the writer um and you can actually then",
    "start": "445280",
    "end": "447680"
  },
  {
    "text": "see U on the right hand inside if",
    "start": "447680",
    "end": "450199"
  },
  {
    "text": "someone does a permissions check this is",
    "start": "450199",
    "end": "452400"
  },
  {
    "text": "using Zed which is the official command",
    "start": "452400",
    "end": "454520"
  },
  {
    "text": "line tool for spice TB um this lets you",
    "start": "454520",
    "end": "457120"
  },
  {
    "text": "query spice TB from your command line",
    "start": "457120",
    "end": "459000"
  },
  {
    "text": "and just check on data and um truly",
    "start": "459000",
    "end": "461680"
  },
  {
    "text": "understand kind of the flows through the",
    "start": "461680",
    "end": "463840"
  },
  {
    "text": "system um as well as timing information",
    "start": "463840",
    "end": "466479"
  },
  {
    "text": "um and debugging metadata so um in this",
    "start": "466479",
    "end": "470599"
  },
  {
    "text": "example we've done that check and you'll",
    "start": "470599",
    "end": "472000"
  },
  {
    "text": "see that first um evaluates to true so",
    "start": "472000",
    "end": "476159"
  },
  {
    "text": "Fred does have access um and we even",
    "start": "476159",
    "end": "479360"
  },
  {
    "text": "explain why it will show that first it",
    "start": "479360",
    "end": "481080"
  },
  {
    "text": "checked the writer um set of users and",
    "start": "481080",
    "end": "484120"
  },
  {
    "text": "it did not find Fred but then it checked",
    "start": "484120",
    "end": "486159"
  },
  {
    "text": "the reader set of users and it did find",
    "start": "486159",
    "end": "487720"
  },
  {
    "text": "Fred so Fred was granted access by means",
    "start": "487720",
    "end": "490800"
  },
  {
    "text": "of being a reader to the",
    "start": "490800",
    "end": "493400"
  },
  {
    "text": "system cool um now we have kind of a",
    "start": "493400",
    "end": "496560"
  },
  {
    "text": "basic understanding of spice DB but",
    "start": "496560",
    "end": "499319"
  },
  {
    "text": "what's really important is kind of this",
    "start": "499319",
    "end": "500960"
  },
  {
    "text": "nested Behavior there's a reason why",
    "start": "500960",
    "end": "503199"
  },
  {
    "text": "this is uh this debug information is",
    "start": "503199",
    "end": "505280"
  },
  {
    "text": "kind of being displayed as a tree um",
    "start": "505280",
    "end": "508280"
  },
  {
    "text": "that's because you can actually to break",
    "start": "508280",
    "end": "509639"
  },
  {
    "text": "down the request that uh check request",
    "start": "509639",
    "end": "512080"
  },
  {
    "text": "checking if Fred has access to first",
    "start": "512080",
    "end": "513880"
  },
  {
    "text": "stock um and you can actually do a bunch",
    "start": "513880",
    "end": "516599"
  },
  {
    "text": "of this in parallel so fundamentally how",
    "start": "516599",
    "end": "519200"
  },
  {
    "text": "space Tob works is it breaks down the",
    "start": "519200",
    "end": "520839"
  },
  {
    "text": "requests on to sub requests evalues them",
    "start": "520839",
    "end": "523240"
  },
  {
    "text": "parallel um and it wants to try to cach",
    "start": "523240",
    "end": "526120"
  },
  {
    "text": "those values as much as possible because",
    "start": "526120",
    "end": "528760"
  },
  {
    "text": "um authorization and checking",
    "start": "528760",
    "end": "530959"
  },
  {
    "text": "permissions is in the critical path",
    "start": "530959",
    "end": "532880"
  },
  {
    "text": "absolutely everything you're going to be",
    "start": "532880",
    "end": "534120"
  },
  {
    "text": "doing within your your systems um so for",
    "start": "534120",
    "end": "537320"
  },
  {
    "text": "example request comes in from your API",
    "start": "537320",
    "end": "539760"
  },
  {
    "text": "um the first thing it's going to do um",
    "start": "539760",
    "end": "541920"
  },
  {
    "text": "is check to see if the user has access",
    "start": "541920",
    "end": "544560"
  },
  {
    "text": "to be able to perform that action that",
    "start": "544560",
    "end": "546160"
  },
  {
    "text": "they're trying to perform before your",
    "start": "546160",
    "end": "548120"
  },
  {
    "text": "application does any other work so that",
    "start": "548120",
    "end": "550200"
  },
  {
    "text": "means that we're targeting in the the",
    "start": "550200",
    "end": "552079"
  },
  {
    "text": "few milliseconds for response times from",
    "start": "552079",
    "end": "554600"
  },
  {
    "text": "Spice TV um fundamentally that means",
    "start": "554600",
    "end": "557000"
  },
  {
    "text": "that almost everything needs to already",
    "start": "557000",
    "end": "558640"
  },
  {
    "text": "have been pre-computed and in Cache um",
    "start": "558640",
    "end": "561880"
  },
  {
    "text": "so we want to serve everything from",
    "start": "561880",
    "end": "563160"
  },
  {
    "text": "memory as much as possible um so uh",
    "start": "563160",
    "end": "567320"
  },
  {
    "text": "fundamentally the the solution to us",
    "start": "567320",
    "end": "569800"
  },
  {
    "text": "getting all the stuff served that",
    "start": "569800",
    "end": "571640"
  },
  {
    "text": "quickly is to have a sophisticated",
    "start": "571640",
    "end": "574240"
  },
  {
    "text": "distributed caching system so not only",
    "start": "574240",
    "end": "576480"
  },
  {
    "text": "is DB kind of this",
    "start": "576480",
    "end": "578800"
  },
  {
    "text": "recursive parallel graph uh engine it",
    "start": "578800",
    "end": "582320"
  },
  {
    "text": "also has a sophisticated Distributing",
    "start": "582320",
    "end": "584760"
  },
  {
    "text": "caching mechanism built throughout the",
    "start": "584760",
    "end": "586279"
  },
  {
    "text": "whole",
    "start": "586279",
    "end": "588279"
  },
  {
    "start": "588000",
    "end": "693000"
  },
  {
    "text": "system um if you're familiar kind of",
    "start": "588279",
    "end": "590519"
  },
  {
    "text": "with caching and a regular application",
    "start": "590519",
    "end": "592480"
  },
  {
    "text": "architecture what normally happens is",
    "start": "592480",
    "end": "594720"
  },
  {
    "text": "you have requests flowing into the",
    "start": "594720",
    "end": "596160"
  },
  {
    "text": "system um they get randomly assigned to",
    "start": "596160",
    "end": "598480"
  },
  {
    "text": "a server uh an instance in this case",
    "start": "598480",
    "end": "600680"
  },
  {
    "text": "they're the circles um each of those",
    "start": "600680",
    "end": "602440"
  },
  {
    "text": "servers have their own independent cache",
    "start": "602440",
    "end": "604160"
  },
  {
    "text": "in memory and then uh if there the value",
    "start": "604160",
    "end": "607560"
  },
  {
    "text": "that the application is looking for is",
    "start": "607560",
    "end": "608959"
  },
  {
    "text": "not in that cache it then reaches back",
    "start": "608959",
    "end": "610880"
  },
  {
    "text": "out to storage which is probably a",
    "start": "610880",
    "end": "612880"
  },
  {
    "text": "database system um to to actually",
    "start": "612880",
    "end": "615640"
  },
  {
    "text": "compute that result and then it returns",
    "start": "615640",
    "end": "617360"
  },
  {
    "text": "that probably inserts it into its cache",
    "start": "617360",
    "end": "619839"
  },
  {
    "text": "um this is pretty standard in web",
    "start": "619839",
    "end": "621640"
  },
  {
    "text": "application formal caching often storage",
    "start": "621640",
    "end": "624160"
  },
  {
    "text": "is is",
    "start": "624160",
    "end": "625320"
  },
  {
    "text": "redus um so distributed caching adds",
    "start": "625320",
    "end": "628120"
  },
  {
    "text": "these additional arrows to that whole",
    "start": "628120",
    "end": "629640"
  },
  {
    "text": "system um which is uh kind of this",
    "start": "629640",
    "end": "633040"
  },
  {
    "text": "bidirectionality between the caches in",
    "start": "633040",
    "end": "636160"
  },
  {
    "text": "the set of uh applications themselves so",
    "start": "636160",
    "end": "639440"
  },
  {
    "text": "that means that they actually are aware",
    "start": "639440",
    "end": "641399"
  },
  {
    "text": "of each other um and know what values",
    "start": "641399",
    "end": "644480"
  },
  {
    "text": "are actually in each other's cach so",
    "start": "644480",
    "end": "646880"
  },
  {
    "text": "that they don't have to reach out to",
    "start": "646880",
    "end": "648120"
  },
  {
    "text": "storage they can reach out to their",
    "start": "648120",
    "end": "649680"
  },
  {
    "text": "neighbor's cash and get that value",
    "start": "649680",
    "end": "651680"
  },
  {
    "text": "straight from memory um you might be",
    "start": "651680",
    "end": "653639"
  },
  {
    "text": "thinking hey like what's the difference",
    "start": "653639",
    "end": "655360"
  },
  {
    "text": "between hop to the storage versus a hop",
    "start": "655360",
    "end": "657279"
  },
  {
    "text": "to my neighbor to reach into the C cash",
    "start": "657279",
    "end": "659839"
  },
  {
    "text": "um while you are paying the same network",
    "start": "659839",
    "end": "661839"
  },
  {
    "text": "latency querying database um is likely",
    "start": "661839",
    "end": "664959"
  },
  {
    "text": "going to be more overhead it's probably",
    "start": "664959",
    "end": "667480"
  },
  {
    "text": "going to be doing way more computation",
    "start": "667480",
    "end": "669519"
  },
  {
    "text": "um and it's almost certainly not going",
    "start": "669519",
    "end": "671279"
  },
  {
    "text": "to just read directly from memory from",
    "start": "671279",
    "end": "673240"
  },
  {
    "text": "already pre-computed result the more",
    "start": "673240",
    "end": "675160"
  },
  {
    "text": "expensive the computation you need to do",
    "start": "675160",
    "end": "676720"
  },
  {
    "text": "on the data store um in the storage",
    "start": "676720",
    "end": "678680"
  },
  {
    "text": "system uh to get that result uh the more",
    "start": "678680",
    "end": "681480"
  },
  {
    "text": "the cash is going to be saving you from",
    "start": "681480",
    "end": "683519"
  },
  {
    "text": "from that work so it is usually worth um",
    "start": "683519",
    "end": "686279"
  },
  {
    "text": "making an extra hop to your neighbor",
    "start": "686279",
    "end": "688560"
  },
  {
    "text": "even if um you are making that that",
    "start": "688560",
    "end": "691079"
  },
  {
    "text": "Network",
    "start": "691079",
    "end": "692560"
  },
  {
    "text": "latency all right so now that we kind of",
    "start": "692560",
    "end": "695880"
  },
  {
    "start": "693000",
    "end": "850000"
  },
  {
    "text": "understand the SP to be use case um it's",
    "start": "695880",
    "end": "698680"
  },
  {
    "text": "time to dive into what a consistent",
    "start": "698680",
    "end": "701440"
  },
  {
    "text": "hashing is um but before we answer that",
    "start": "701440",
    "end": "704920"
  },
  {
    "text": "question uh we have to answer the",
    "start": "704920",
    "end": "706880"
  },
  {
    "text": "question what is consistent hashing so",
    "start": "706880",
    "end": "711639"
  },
  {
    "text": "um consistent hashing is a concept that",
    "start": "711639",
    "end": "714880"
  },
  {
    "text": "was kind of mostly researched in the 90s",
    "start": "714880",
    "end": "717639"
  },
  {
    "text": "um at the time it didn't really have a",
    "start": "717639",
    "end": "719320"
  },
  {
    "text": "name um nowadays a lot of folks are",
    "start": "719320",
    "end": "721600"
  },
  {
    "text": "familiar with this because it's so ously",
    "start": "721600",
    "end": "723360"
  },
  {
    "text": "used in distributed systems the idea is",
    "start": "723360",
    "end": "725720"
  },
  {
    "text": "that you're going to map a key um to a",
    "start": "725720",
    "end": "729040"
  },
  {
    "text": "finite set of nodes um you're can do",
    "start": "729040",
    "end": "732240"
  },
  {
    "text": "that using a hashing algorithm so if you",
    "start": "732240",
    "end": "734600"
  },
  {
    "text": "take something like three values F Bar",
    "start": "734600",
    "end": "737240"
  },
  {
    "text": "and baz and you run them through a hash",
    "start": "737240",
    "end": "738760"
  },
  {
    "text": "algorithm they're going to evaluate to a",
    "start": "738760",
    "end": "741320"
  },
  {
    "text": "number um and that number is then going",
    "start": "741320",
    "end": "744040"
  },
  {
    "text": "to map itself to a set of nodes um the",
    "start": "744040",
    "end": "747920"
  },
  {
    "text": "most simple uh hash algorithm you can",
    "start": "747920",
    "end": "750199"
  },
  {
    "text": "use as modulus um so you can say like",
    "start": "750199",
    "end": "753360"
  },
  {
    "text": "mod mod three in this case um is as the",
    "start": "753360",
    "end": "757240"
  },
  {
    "text": "example being used here and that means",
    "start": "757240",
    "end": "759199"
  },
  {
    "text": "when you go to run Fu your do mod 3 gets",
    "start": "759199",
    "end": "762279"
  },
  {
    "text": "evaluated to one every single time you",
    "start": "762279",
    "end": "764399"
  },
  {
    "text": "run Fu through that hash algorithm it",
    "start": "764399",
    "end": "767000"
  },
  {
    "text": "needs to evaluate to that same value um",
    "start": "767000",
    "end": "770160"
  },
  {
    "text": "this is going to be the core between",
    "start": "770160",
    "end": "771600"
  },
  {
    "text": "picking which nodes we're going to Route",
    "start": "771600",
    "end": "774160"
  },
  {
    "text": "um to and which nodes should hold the",
    "start": "774160",
    "end": "776199"
  },
  {
    "text": "value in memory in their cache um",
    "start": "776199",
    "end": "779639"
  },
  {
    "text": "this is kind of like the first stab at",
    "start": "779639",
    "end": "781440"
  },
  {
    "text": "the research you'll see that F and bow",
    "start": "781440",
    "end": "784000"
  },
  {
    "text": "are both getting mapped to node number",
    "start": "784000",
    "end": "786120"
  },
  {
    "text": "one and then bar is getting that to",
    "start": "786120",
    "end": "787839"
  },
  {
    "text": "number three but where this really Falls",
    "start": "787839",
    "end": "790279"
  },
  {
    "text": "over is um in a in a problem called",
    "start": "790279",
    "end": "794240"
  },
  {
    "text": "rebalancing and so what rebalancing uh",
    "start": "794240",
    "end": "797040"
  },
  {
    "text": "is meant to deal with is basically what",
    "start": "797040",
    "end": "799519"
  },
  {
    "text": "happens when one of these nodes go",
    "start": "799519",
    "end": "801120"
  },
  {
    "text": "missing so uh in this example I made it",
    "start": "801120",
    "end": "804000"
  },
  {
    "text": "so that node one goes missing but also",
    "start": "804000",
    "end": "806240"
  },
  {
    "text": "there are other events such as adding",
    "start": "806240",
    "end": "808079"
  },
  {
    "text": "more nodes to system um that would incur",
    "start": "808079",
    "end": "810920"
  },
  {
    "text": "a rebalancing um to try to fix all these",
    "start": "810920",
    "end": "813839"
  },
  {
    "text": "things the the problem here is that if",
    "start": "813839",
    "end": "816279"
  },
  {
    "text": "we remove um node one and we only have",
    "start": "816279",
    "end": "819399"
  },
  {
    "text": "node two and three we're still going to",
    "start": "819399",
    "end": "821800"
  },
  {
    "text": "get values if we do modulus 3 as our",
    "start": "821800",
    "end": "824160"
  },
  {
    "text": "hash function that map to node one Fu",
    "start": "824160",
    "end": "826399"
  },
  {
    "text": "and baz fundamentally have to go to node",
    "start": "826399",
    "end": "829720"
  },
  {
    "text": "one but node one is gone so now we've",
    "start": "829720",
    "end": "832839"
  },
  {
    "text": "effectively lost this data if we're",
    "start": "832839",
    "end": "834240"
  },
  {
    "text": "using this to store data um we won't get",
    "start": "834240",
    "end": "837160"
  },
  {
    "text": "an answer to this uh problem until",
    "start": "837160",
    "end": "840560"
  },
  {
    "text": "basically a algorithm called Rondevu um",
    "start": "840560",
    "end": "844360"
  },
  {
    "text": "and that was written a paper in 1996 uh",
    "start": "844360",
    "end": "847560"
  },
  {
    "text": "but I'm actually not so interested in",
    "start": "847560",
    "end": "848959"
  },
  {
    "text": "rendevu so much as um a paper published",
    "start": "848959",
    "end": "851759"
  },
  {
    "start": "850000",
    "end": "1121000"
  },
  {
    "text": "the following year in 97 um which is",
    "start": "851759",
    "end": "854199"
  },
  {
    "text": "where we get consistent hash Rings",
    "start": "854199",
    "end": "857399"
  },
  {
    "text": "introduced um and uh while not the first",
    "start": "857399",
    "end": "861920"
  },
  {
    "text": "solution um to this problem it has",
    "start": "861920",
    "end": "864320"
  },
  {
    "text": "become the lasting solution to this",
    "start": "864320",
    "end": "866079"
  },
  {
    "text": "problem um the idea behind a consistent",
    "start": "866079",
    "end": "868880"
  },
  {
    "text": "hash ring is actually that um you have",
    "start": "868880",
    "end": "871959"
  },
  {
    "text": "basically this array and the array wraps",
    "start": "871959",
    "end": "875079"
  },
  {
    "text": "around at the end so if you uh iterate",
    "start": "875079",
    "end": "877800"
  },
  {
    "text": "past the last value in the array you",
    "start": "877800",
    "end": "879639"
  },
  {
    "text": "arrive back at the first um the way that",
    "start": "879639",
    "end": "882399"
  },
  {
    "text": "folks like to um kind of uh visualize",
    "start": "882399",
    "end": "885759"
  },
  {
    "text": "arrays that work this way um typically",
    "start": "885759",
    "end": "888000"
  },
  {
    "text": "call them something like a ring buffer",
    "start": "888000",
    "end": "889920"
  },
  {
    "text": "um they put them as a circle kind of",
    "start": "889920",
    "end": "892399"
  },
  {
    "text": "similar to a wall clock like I've I've",
    "start": "892399",
    "end": "894120"
  },
  {
    "text": "drawn here um and then what happens is",
    "start": "894120",
    "end": "896959"
  },
  {
    "text": "we have uh nodes one two and three",
    "start": "896959",
    "end": "899279"
  },
  {
    "text": "mapped as effectively times on the clock",
    "start": "899279",
    "end": "903279"
  },
  {
    "text": "um but you'll notice there's a whole",
    "start": "903279",
    "end": "904720"
  },
  {
    "text": "bunch of these other lines here um and",
    "start": "904720",
    "end": "907600"
  },
  {
    "text": "those are all the possible values um",
    "start": "907600",
    "end": "910360"
  },
  {
    "text": "that can get hashed to um so when we we",
    "start": "910360",
    "end": "913880"
  },
  {
    "text": "run a hash on Fu rmas they get mapped to",
    "start": "913880",
    "end": "917360"
  },
  {
    "text": "one of these individual lines and not",
    "start": "917360",
    "end": "919240"
  },
  {
    "text": "actually specifically to node number one",
    "start": "919240",
    "end": "921360"
  },
  {
    "text": "node number two or node number three um",
    "start": "921360",
    "end": "924440"
  },
  {
    "text": "the idea now is that we kind of round",
    "start": "924440",
    "end": "927480"
  },
  {
    "text": "those values to the nearest node um so",
    "start": "927480",
    "end": "931360"
  },
  {
    "text": "we kind of move clockwise um and kind of",
    "start": "931360",
    "end": "934560"
  },
  {
    "text": "arrive at the at the um node that is",
    "start": "934560",
    "end": "938240"
  },
  {
    "text": "real basically um in in the ring so now",
    "start": "938240",
    "end": "942480"
  },
  {
    "text": "uh you can see that Fu and B they both",
    "start": "942480",
    "end": "945600"
  },
  {
    "text": "get mapped to node one just like in the",
    "start": "945600",
    "end": "946920"
  },
  {
    "text": "previous example and bar gets mapped to",
    "start": "946920",
    "end": "948959"
  },
  {
    "text": "node number three just like the previous",
    "start": "948959",
    "end": "950839"
  },
  {
    "text": "example but we've got this additional",
    "start": "950839",
    "end": "953199"
  },
  {
    "text": "metadata now that's data of kind of the",
    "start": "953199",
    "end": "955600"
  },
  {
    "text": "location on the",
    "start": "955600",
    "end": "957600"
  },
  {
    "text": "clock",
    "start": "957600",
    "end": "959199"
  },
  {
    "text": "so now when we get a rebalancing event",
    "start": "959199",
    "end": "961279"
  },
  {
    "text": "such as node number four being",
    "start": "961279",
    "end": "962639"
  },
  {
    "text": "introduced in between Fu and baz um you",
    "start": "962639",
    "end": "966560"
  },
  {
    "text": "see if Fu now points to node number four",
    "start": "966560",
    "end": "969360"
  },
  {
    "text": "baz still points to node number one so",
    "start": "969360",
    "end": "971600"
  },
  {
    "text": "that means we only have to",
    "start": "971600",
    "end": "973279"
  },
  {
    "text": "update um Fu from pointing uh to node",
    "start": "973279",
    "end": "977639"
  },
  {
    "text": "number one from node number one to node",
    "start": "977639",
    "end": "979839"
  },
  {
    "text": "number four um so we've kind of like",
    "start": "979839",
    "end": "981759"
  },
  {
    "text": "minimized the damage a bunch of the the",
    "start": "981759",
    "end": "984959"
  },
  {
    "text": "keys will not have to be changed at all",
    "start": "984959",
    "end": "987720"
  },
  {
    "text": "um when this this gets introduced um and",
    "start": "987720",
    "end": "990560"
  },
  {
    "text": "so we we now have this guarantee of um",
    "start": "990560",
    "end": "995279"
  },
  {
    "text": "kind of how much work C to be done when",
    "start": "995279",
    "end": "997600"
  },
  {
    "text": "a node is added or removed um now uh you",
    "start": "997600",
    "end": "1001920"
  },
  {
    "text": "may be thinking looking at this example",
    "start": "1001920",
    "end": "1003720"
  },
  {
    "text": "wow that's like a really bad",
    "start": "1003720",
    "end": "1005399"
  },
  {
    "text": "distribution um look where node number",
    "start": "1005399",
    "end": "1008480"
  },
  {
    "text": "four and node number one are really",
    "start": "1008480",
    "end": "1009680"
  },
  {
    "text": "close together how can you make",
    "start": "1009680",
    "end": "1010880"
  },
  {
    "text": "guarantees about the closeness of these",
    "start": "1010880",
    "end": "1012440"
  },
  {
    "text": "things to kind of minimize the",
    "start": "1012440",
    "end": "1015519"
  },
  {
    "text": "disruption and so what you do in",
    "start": "1015519",
    "end": "1018240"
  },
  {
    "text": "practice practice is you create what are",
    "start": "1018240",
    "end": "1019800"
  },
  {
    "text": "called virtual nodes so you would",
    "start": "1019800",
    "end": "1022199"
  },
  {
    "text": "actually um say we had of these four",
    "start": "1022199",
    "end": "1025558"
  },
  {
    "text": "nodes here what you would actually do in",
    "start": "1025559",
    "end": "1027480"
  },
  {
    "text": "practice is probably have something like",
    "start": "1027480",
    "end": "1029079"
  },
  {
    "text": "a thousand of those nodes and they",
    "start": "1029079",
    "end": "1031558"
  },
  {
    "text": "virtually exist and those virtual nodes",
    "start": "1031559",
    "end": "1033480"
  },
  {
    "text": "would then map to real physical nodes",
    "start": "1033480",
    "end": "1036760"
  },
  {
    "text": "that exist in the system um and that",
    "start": "1036760",
    "end": "1039319"
  },
  {
    "text": "kind of keeps the the balancing to uh a",
    "start": "1039319",
    "end": "1042918"
  },
  {
    "text": "minimum amount um when you need to add",
    "start": "1042919",
    "end": "1045558"
  },
  {
    "text": "or remove nodes and there is disruption",
    "start": "1045559",
    "end": "1048520"
  },
  {
    "text": "it also lets you do a really interesting",
    "start": "1048520",
    "end": "1050600"
  },
  {
    "text": "thing which is configure replication so",
    "start": "1050600",
    "end": "1053679"
  },
  {
    "text": "say um we didn't want to lose data when",
    "start": "1053679",
    "end": "1056440"
  },
  {
    "text": "one of these nodes um ceased to exist",
    "start": "1056440",
    "end": "1059039"
  },
  {
    "text": "what we could do is actually um modify",
    "start": "1059039",
    "end": "1062600"
  },
  {
    "text": "kind of how we store things in this ring",
    "start": "1062600",
    "end": "1064840"
  },
  {
    "text": "we could say that once something is",
    "start": "1064840",
    "end": "1066559"
  },
  {
    "text": "mapped for example fu is mapped to node",
    "start": "1066559",
    "end": "1068559"
  },
  {
    "text": "four we could then run another hash well",
    "start": "1068559",
    "end": "1071600"
  },
  {
    "text": "Fu combined with node for example and",
    "start": "1071600",
    "end": "1074160"
  },
  {
    "text": "that would map to yet another location",
    "start": "1074160",
    "end": "1076360"
  },
  {
    "text": "on the ring and we could store the data",
    "start": "1076360",
    "end": "1078200"
  },
  {
    "text": "there as well and that would be a",
    "start": "1078200",
    "end": "1079919"
  },
  {
    "text": "replication factor of two and then we",
    "start": "1079919",
    "end": "1082120"
  },
  {
    "text": "could also maybe if the replication",
    "start": "1082120",
    "end": "1083840"
  },
  {
    "text": "Factor was three you could hash that",
    "start": "1083840",
    "end": "1085559"
  },
  {
    "text": "again and then find yet another location",
    "start": "1085559",
    "end": "1087520"
  },
  {
    "text": "on the ring and save that data there um",
    "start": "1087520",
    "end": "1090080"
  },
  {
    "text": "and then that is a kind of configurable",
    "start": "1090080",
    "end": "1092480"
  },
  {
    "text": "metric that you can have for resiliency",
    "start": "1092480",
    "end": "1094559"
  },
  {
    "text": "for nodes coming and going out of a",
    "start": "1094559",
    "end": "1097200"
  },
  {
    "text": "system such that you're not going to",
    "start": "1097200",
    "end": "1099159"
  },
  {
    "text": "lose data when one particular node",
    "start": "1099159",
    "end": "1101720"
  },
  {
    "text": "leaves um so this is actually why um the",
    "start": "1101720",
    "end": "1105760"
  },
  {
    "text": "hash ring kind of algorithm has stuck",
    "start": "1105760",
    "end": "1107919"
  },
  {
    "text": "around for really long time it has a lot",
    "start": "1107919",
    "end": "1109640"
  },
  {
    "text": "of these properties um that are um kind",
    "start": "1109640",
    "end": "1113600"
  },
  {
    "text": "of beneficial for configuring and um",
    "start": "1113600",
    "end": "1116559"
  },
  {
    "text": "dynamically adapting to the different",
    "start": "1116559",
    "end": "1118360"
  },
  {
    "text": "requirements that folks have in",
    "start": "1118360",
    "end": "1121440"
  },
  {
    "start": "1121000",
    "end": "1185000"
  },
  {
    "text": "applications so um we have an",
    "start": "1121440",
    "end": "1124000"
  },
  {
    "text": "implementation of this um everything",
    "start": "1124000",
    "end": "1125840"
  },
  {
    "text": "that was just described with the hashing",
    "start": "1125840",
    "end": "1127240"
  },
  {
    "text": "and go that is completely agnostic to",
    "start": "1127240",
    "end": "1129679"
  },
  {
    "text": "the use case um so you can uh install",
    "start": "1129679",
    "end": "1132960"
  },
  {
    "text": "this in your go application and start",
    "start": "1132960",
    "end": "1134320"
  },
  {
    "text": "using the following",
    "start": "1134320",
    "end": "1136320"
  },
  {
    "text": "API um what makes it generic it's",
    "start": "1136320",
    "end": "1138960"
  },
  {
    "text": "actually you can plug in your own hash",
    "start": "1138960",
    "end": "1140559"
  },
  {
    "text": "function so you could literally use",
    "start": "1140559",
    "end": "1142600"
  },
  {
    "text": "modulus like I just used in the example",
    "start": "1142600",
    "end": "1144799"
  },
  {
    "text": "or you could um use uh basically um very",
    "start": "1144799",
    "end": "1148840"
  },
  {
    "text": "very fast hashing algorithms um that are",
    "start": "1148840",
    "end": "1151240"
  },
  {
    "text": "not cryptographically secure or you can",
    "start": "1151240",
    "end": "1153039"
  },
  {
    "text": "use cryptographically secure hash",
    "start": "1153039",
    "end": "1154679"
  },
  {
    "text": "algorithms that are expensive to compute",
    "start": "1154679",
    "end": "1157000"
  },
  {
    "text": "without Hardware acceleration for",
    "start": "1157000",
    "end": "1158480"
  },
  {
    "text": "example um all that's completely",
    "start": "1158480",
    "end": "1160799"
  },
  {
    "text": "configurable but we kind of have this",
    "start": "1160799",
    "end": "1162600"
  },
  {
    "text": "basic API that always stays consistent",
    "start": "1162600",
    "end": "1164400"
  },
  {
    "text": "across hash Rings um which is one of",
    "start": "1164400",
    "end": "1167159"
  },
  {
    "text": "adding and removing member",
    "start": "1167159",
    "end": "1168799"
  },
  {
    "text": "um listing the members themselves and",
    "start": "1168799",
    "end": "1170440"
  },
  {
    "text": "then also finding um kind of uh the set",
    "start": "1170440",
    "end": "1174400"
  },
  {
    "text": "of members in that list",
    "start": "1174400",
    "end": "1177080"
  },
  {
    "text": "um so uh this is totally agnostic and",
    "start": "1177080",
    "end": "1180280"
  },
  {
    "text": "can be adopted by by anyone in any use",
    "start": "1180280",
    "end": "1183200"
  },
  {
    "text": "case long as they're writing and go um",
    "start": "1183200",
    "end": "1186960"
  },
  {
    "start": "1185000",
    "end": "1520000"
  },
  {
    "text": "but the whole topic of this conversation",
    "start": "1186960",
    "end": "1189120"
  },
  {
    "text": "is actually grpc and how this all fits",
    "start": "1189120",
    "end": "1191760"
  },
  {
    "text": "into grpc so now we've got this um kind",
    "start": "1191760",
    "end": "1195159"
  },
  {
    "text": "of agnostic and neutral implementation",
    "start": "1195159",
    "end": "1197480"
  },
  {
    "text": "of the hasher Concepts how do we map",
    "start": "1197480",
    "end": "1199600"
  },
  {
    "text": "that back into grpc world so we can",
    "start": "1199600",
    "end": "1202039"
  },
  {
    "text": "actually um kind of balance grpc",
    "start": "1202039",
    "end": "1204559"
  },
  {
    "text": "requests using this hash ring",
    "start": "1204559",
    "end": "1207679"
  },
  {
    "text": "logic so um if we dig into uh Google",
    "start": "1207679",
    "end": "1212400"
  },
  {
    "text": "go.org JPC balancer and this is a go",
    "start": "1212400",
    "end": "1215679"
  },
  {
    "text": "package that's used as as the set of",
    "start": "1215679",
    "end": "1219280"
  },
  {
    "text": "kind of official goang grpc um packages",
    "start": "1219280",
    "end": "1223360"
  },
  {
    "text": "um got this interface balancer um and if",
    "start": "1223360",
    "end": "1226559"
  },
  {
    "text": "we look at the documentation uh we can",
    "start": "1226559",
    "end": "1228679"
  },
  {
    "text": "look at all the kind of methods the only",
    "start": "1228679",
    "end": "1231200"
  },
  {
    "text": "method we really care about is this uh",
    "start": "1231200",
    "end": "1233360"
  },
  {
    "text": "update client State con method that I'm",
    "start": "1233360",
    "end": "1235600"
  },
  {
    "text": "going to be showing in depth later but",
    "start": "1235600",
    "end": "1237760"
  },
  {
    "text": "um if we go through the actual the doc",
    "start": "1237760",
    "end": "1240400"
  },
  {
    "text": "comment which is at the very bottom",
    "start": "1240400",
    "end": "1242360"
  },
  {
    "text": "you'll see that says uh balancer takes",
    "start": "1242360",
    "end": "1244520"
  },
  {
    "text": "input from JPC manages subcons and",
    "start": "1244520",
    "end": "1246520"
  },
  {
    "text": "collects and Aggregates connectivity",
    "start": "1246520",
    "end": "1248400"
  },
  {
    "text": "States um but it also generates and",
    "start": "1248400",
    "end": "1250559"
  },
  {
    "text": "updates the picker used by grpc to pick",
    "start": "1250559",
    "end": "1253080"
  },
  {
    "text": "subcons for rpcs so fundamentally it",
    "start": "1253080",
    "end": "1256840"
  },
  {
    "text": "sounds like we're going to have to do a",
    "start": "1256840",
    "end": "1257799"
  },
  {
    "text": "bunch of bookkeeping that grpc expects",
    "start": "1257799",
    "end": "1259880"
  },
  {
    "text": "that's that kind of first sentence and",
    "start": "1259880",
    "end": "1261720"
  },
  {
    "text": "then um in the second sentence it says",
    "start": "1261720",
    "end": "1263720"
  },
  {
    "text": "actually this is going to be your hook",
    "start": "1263720",
    "end": "1265440"
  },
  {
    "text": "for um providing a picker implementation",
    "start": "1265440",
    "end": "1268400"
  },
  {
    "text": "which is going to pick how we're going",
    "start": "1268400",
    "end": "1269799"
  },
  {
    "text": "to map a request to a particular",
    "start": "1269799",
    "end": "1273279"
  },
  {
    "text": "connection great so let's look at what a",
    "start": "1273279",
    "end": "1275440"
  },
  {
    "text": "picker is a picker has this one method",
    "start": "1275440",
    "end": "1277600"
  },
  {
    "text": "pick um and that's the thing that's",
    "start": "1277600",
    "end": "1279559"
  },
  {
    "text": "actually going to do the mapping like we",
    "start": "1279559",
    "end": "1281200"
  },
  {
    "text": "said so fundamentally what we need to do",
    "start": "1281200",
    "end": "1283799"
  },
  {
    "text": "is Implement a picker um that is going",
    "start": "1283799",
    "end": "1286400"
  },
  {
    "text": "to pull nodes out Our member list and",
    "start": "1286400",
    "end": "1289640"
  },
  {
    "text": "select the right one from the hash ring",
    "start": "1289640",
    "end": "1291240"
  },
  {
    "text": "and then send the request to that",
    "start": "1291240",
    "end": "1292840"
  },
  {
    "text": "particular member fantastic so let's",
    "start": "1292840",
    "end": "1296360"
  },
  {
    "text": "start implementing the uh update client",
    "start": "1296360",
    "end": "1299000"
  },
  {
    "text": "constate method um we've got a ring",
    "start": "1299000",
    "end": "1301720"
  },
  {
    "text": "balancer uh implementation here and I",
    "start": "1301720",
    "end": "1304400"
  },
  {
    "text": "kind of cut out a lot of stuff I'm just",
    "start": "1304400",
    "end": "1306240"
  },
  {
    "text": "going to focus on basically implementing",
    "start": "1306240",
    "end": "1307760"
  },
  {
    "text": "this one method and I also cut out a lot",
    "start": "1307760",
    "end": "1309880"
  },
  {
    "text": "of bliler plate um things like locking",
    "start": "1309880",
    "end": "1312000"
  },
  {
    "text": "and and things that are not necessarily",
    "start": "1312000",
    "end": "1313760"
  },
  {
    "text": "tied to um the hashing logic in this um",
    "start": "1313760",
    "end": "1317720"
  },
  {
    "text": "you still have to implement a lot of the",
    "start": "1317720",
    "end": "1319720"
  },
  {
    "text": "um invariance that grpc assumes when you",
    "start": "1319720",
    "end": "1322640"
  },
  {
    "text": "hook into grpc and Implement balancer so",
    "start": "1322640",
    "end": "1325159"
  },
  {
    "text": "I don't really want to focus on on much",
    "start": "1325159",
    "end": "1326919"
  },
  {
    "text": "of that although I will cover some of it",
    "start": "1326919",
    "end": "1329960"
  },
  {
    "text": "just by happen stance um I really want",
    "start": "1329960",
    "end": "1333159"
  },
  {
    "text": "to focus just on where uh we're kind of",
    "start": "1333159",
    "end": "1335320"
  },
  {
    "text": "doing updates to our hash ring within",
    "start": "1335320",
    "end": "1337159"
  },
  {
    "text": "this implementation um because that's",
    "start": "1337159",
    "end": "1339520"
  },
  {
    "text": "the the novel and interesting part about",
    "start": "1339520",
    "end": "1341559"
  },
  {
    "text": "uh this Library so um we we get into",
    "start": "1341559",
    "end": "1345640"
  },
  {
    "text": "this method this method is going to be",
    "start": "1345640",
    "end": "1346960"
  },
  {
    "text": "called whenever there's a change the",
    "start": "1346960",
    "end": "1348400"
  },
  {
    "text": "client state so um we're going to be",
    "start": "1348400",
    "end": "1350520"
  },
  {
    "text": "handling a bunch of different conditions",
    "start": "1350520",
    "end": "1352840"
  },
  {
    "text": "uh that are going to occur to",
    "start": "1352840",
    "end": "1354279"
  },
  {
    "text": "connections um the first of all like the",
    "start": "1354279",
    "end": "1356799"
  },
  {
    "text": "first one we're ever going to check is",
    "start": "1356799",
    "end": "1358440"
  },
  {
    "text": "that the service config has changed",
    "start": "1358440",
    "end": "1360320"
  },
  {
    "text": "Fally if the config has changed um then",
    "start": "1360320",
    "end": "1362480"
  },
  {
    "text": "we probably need to start from scratch",
    "start": "1362480",
    "end": "1364880"
  },
  {
    "text": "um so in that scenario uh we have us",
    "start": "1364880",
    "end": "1367960"
  },
  {
    "text": "allocating a new hashing um because uh",
    "start": "1367960",
    "end": "1371600"
  },
  {
    "text": "we're assuming that hashing cannot fail",
    "start": "1371600",
    "end": "1373960"
  },
  {
    "text": "in this scenario um we use the must new",
    "start": "1373960",
    "end": "1376360"
  },
  {
    "text": "Constructor there allocate a new ring",
    "start": "1376360",
    "end": "1378520"
  },
  {
    "text": "and we set the config um on our our ring",
    "start": "1378520",
    "end": "1381640"
  },
  {
    "text": "balance",
    "start": "1381640",
    "end": "1382679"
  },
  {
    "text": "here um and then uh the next conditional",
    "start": "1382679",
    "end": "1386120"
  },
  {
    "text": "below that is another state that we have",
    "start": "1386120",
    "end": "1388200"
  },
  {
    "text": "to handle which is um basically uh We've",
    "start": "1388200",
    "end": "1392600"
  },
  {
    "text": "we've gotten this call but we actually",
    "start": "1392600",
    "end": "1394240"
  },
  {
    "text": "haven't um set anything up yet we",
    "start": "1394240",
    "end": "1396600"
  },
  {
    "text": "haven't gotten the service config with",
    "start": "1396600",
    "end": "1398480"
  },
  {
    "text": "any of the settings in which case this",
    "start": "1398480",
    "end": "1400320"
  },
  {
    "text": "is kind of like the default State um",
    "start": "1400320",
    "end": "1402240"
  },
  {
    "text": "like we haven't been allocated yet um",
    "start": "1402240",
    "end": "1405279"
  },
  {
    "text": "and in that scenario we're just going to",
    "start": "1405279",
    "end": "1406799"
  },
  {
    "text": "set a picker um that basically just",
    "start": "1406799",
    "end": "1409520"
  },
  {
    "text": "throws an error this is kind of the",
    "start": "1409520",
    "end": "1412240"
  },
  {
    "text": "recommended behavior from kind of the",
    "start": "1412240",
    "end": "1414279"
  },
  {
    "text": "different GPC implementations and they",
    "start": "1414279",
    "end": "1416640"
  },
  {
    "text": "actually provide this nice library for",
    "start": "1416640",
    "end": "1418240"
  },
  {
    "text": "us uh base um that's going to provide a",
    "start": "1418240",
    "end": "1420880"
  },
  {
    "text": "utility function for us this error",
    "start": "1420880",
    "end": "1423159"
  },
  {
    "text": "picker that's going to return this this",
    "start": "1423159",
    "end": "1425000"
  },
  {
    "text": "failure for us until we get to a state",
    "start": "1425000",
    "end": "1427120"
  },
  {
    "text": "where we we can be valid and we can",
    "start": "1427120",
    "end": "1429039"
  },
  {
    "text": "actually start picking good",
    "start": "1429039",
    "end": "1431600"
  },
  {
    "text": "vales um so now we're going to get into",
    "start": "1431600",
    "end": "1434440"
  },
  {
    "text": "the meat and potatoes we're actually",
    "start": "1434440",
    "end": "1435919"
  },
  {
    "text": "going to be able to start um tracking",
    "start": "1435919",
    "end": "1437880"
  },
  {
    "text": "changes to the member set um in this",
    "start": "1437880",
    "end": "1440080"
  },
  {
    "text": "case we're going to look for um folks",
    "start": "1440080",
    "end": "1443120"
  },
  {
    "text": "that are not yet added into our member",
    "start": "1443120",
    "end": "1445480"
  },
  {
    "text": "list so new connections so um what we're",
    "start": "1445480",
    "end": "1448799"
  },
  {
    "text": "actually going to do is we're going to",
    "start": "1448799",
    "end": "1449919"
  },
  {
    "text": "iterate over the the list of addresses",
    "start": "1449919",
    "end": "1452080"
  },
  {
    "text": "that we're going to get out of the",
    "start": "1452080",
    "end": "1453679"
  },
  {
    "text": "resolver",
    "start": "1453679",
    "end": "1454840"
  },
  {
    "text": "state um that came in when we got our",
    "start": "1454840",
    "end": "1457200"
  },
  {
    "text": "update and basically we're going to",
    "start": "1457200",
    "end": "1459360"
  },
  {
    "text": "check to see if this connection exists",
    "start": "1459360",
    "end": "1462400"
  },
  {
    "text": "in a set of connections that we're",
    "start": "1462400",
    "end": "1463640"
  },
  {
    "text": "maintaining ourselves um and if it's not",
    "start": "1463640",
    "end": "1466399"
  },
  {
    "text": "there then we're we're going to do kind",
    "start": "1466399",
    "end": "1469080"
  },
  {
    "text": "of some bookkeeping but fundamentally at",
    "start": "1469080",
    "end": "1470840"
  },
  {
    "text": "the very end you'll look at the bottom",
    "start": "1470840",
    "end": "1472640"
  },
  {
    "text": "it has hash room. add so we're going to",
    "start": "1472640",
    "end": "1474760"
  },
  {
    "text": "make sure that we add this new",
    "start": "1474760",
    "end": "1476240"
  },
  {
    "text": "connection um that we weren't tracking",
    "start": "1476240",
    "end": "1478120"
  },
  {
    "text": "before into our hash ring so we can",
    "start": "1478120",
    "end": "1479840"
  },
  {
    "text": "start mapping requests to",
    "start": "1479840",
    "end": "1482000"
  },
  {
    "text": "it um and then uh the next code block",
    "start": "1482000",
    "end": "1485679"
  },
  {
    "text": "below that is going to be doing the",
    "start": "1485679",
    "end": "1487240"
  },
  {
    "text": "opposite which is U removing anything um",
    "start": "1487240",
    "end": "1490720"
  },
  {
    "text": "that shouldn't be in our hashing anymore",
    "start": "1490720",
    "end": "1492600"
  },
  {
    "text": "so what we're going to do is iterate now",
    "start": "1492600",
    "end": "1494559"
  },
  {
    "text": "over our set of connections that uh we",
    "start": "1494559",
    "end": "1496880"
  },
  {
    "text": "know uh exist in our hash ring and we're",
    "start": "1496880",
    "end": "1499159"
  },
  {
    "text": "going to look them up in that that same",
    "start": "1499159",
    "end": "1500799"
  },
  {
    "text": "set that we just saw and if it's not in",
    "start": "1500799",
    "end": "1502919"
  },
  {
    "text": "that set then we need to remove it from",
    "start": "1502919",
    "end": "1504880"
  },
  {
    "text": "our hash ring um so you'll see again at",
    "start": "1504880",
    "end": "1508240"
  },
  {
    "text": "the very bottom um we're calling that",
    "start": "1508240",
    "end": "1510200"
  },
  {
    "text": "hasher and remove um there's also a",
    "start": "1510200",
    "end": "1513039"
  },
  {
    "text": "bunch of internal bookkeeping just",
    "start": "1513039",
    "end": "1514480"
  },
  {
    "text": "around uh normal logic that we have to",
    "start": "1514480",
    "end": "1516799"
  },
  {
    "text": "maintain just being a normal grpc",
    "start": "1516799",
    "end": "1520039"
  },
  {
    "start": "1520000",
    "end": "1646000"
  },
  {
    "text": "balancer but then we get to the end of",
    "start": "1520039",
    "end": "1521919"
  },
  {
    "text": "this function we get to call this uh",
    "start": "1521919",
    "end": "1523880"
  },
  {
    "text": "update State function that's going to do",
    "start": "1523880",
    "end": "1526480"
  },
  {
    "text": "basically both the heavy lifting for us",
    "start": "1526480",
    "end": "1528520"
  },
  {
    "text": "and that's where we get to actually Pro",
    "start": "1528520",
    "end": "1530200"
  },
  {
    "text": "uh provide uh the state that we just",
    "start": "1530200",
    "end": "1532000"
  },
  {
    "text": "computed but also um the Picker so the",
    "start": "1532000",
    "end": "1535279"
  },
  {
    "text": "Picker is really really important as I",
    "start": "1535279",
    "end": "1538320"
  },
  {
    "text": "said earlier the Picker is what is going",
    "start": "1538320",
    "end": "1540679"
  },
  {
    "text": "to actually map um a particular request",
    "start": "1540679",
    "end": "1545120"
  },
  {
    "text": "to one of the members of our hash ring",
    "start": "1545120",
    "end": "1547919"
  },
  {
    "text": "um I'm glad that it's so elant that it",
    "start": "1547919",
    "end": "1550640"
  },
  {
    "text": "fits very cleanly in this page a very",
    "start": "1550640",
    "end": "1552600"
  },
  {
    "text": "small function fundamentally we're kind",
    "start": "1552600",
    "end": "1554919"
  },
  {
    "text": "of uh smuggling this context key in that",
    "start": "1554919",
    "end": "1557559"
  },
  {
    "text": "is is the key for the hash ring um that",
    "start": "1557559",
    "end": "1560120"
  },
  {
    "text": "gets provided with the request context",
    "start": "1560120",
    "end": "1562240"
  },
  {
    "text": "um but then we use that um to uh find",
    "start": "1562240",
    "end": "1565360"
  },
  {
    "text": "the members in our hash ring um you'll",
    "start": "1565360",
    "end": "1568320"
  },
  {
    "text": "see that we have this value uh or this",
    "start": "1568320",
    "end": "1570600"
  },
  {
    "text": "variable called spread and uh we're",
    "start": "1570600",
    "end": "1573279"
  },
  {
    "text": "using uh spread uh not only in the call",
    "start": "1573279",
    "end": "1576720"
  },
  {
    "text": "to find n but also a little bit lower we",
    "start": "1576720",
    "end": "1578880"
  },
  {
    "text": "have this index um how we're going to",
    "start": "1578880",
    "end": "1580919"
  },
  {
    "text": "basically ultimately index into the",
    "start": "1580919",
    "end": "1582720"
  },
  {
    "text": "member list to pick the ultimate um",
    "start": "1582720",
    "end": "1585360"
  },
  {
    "text": "connection that we're going to map over",
    "start": "1585360",
    "end": "1587279"
  },
  {
    "text": "um we're going to send the request over",
    "start": "1587279",
    "end": "1589840"
  },
  {
    "text": "the uh idea here is that if you have a",
    "start": "1589840",
    "end": "1593559"
  },
  {
    "text": "replication factor that is greater than",
    "start": "1593559",
    "end": "1595760"
  },
  {
    "text": "one um that means that we can actually",
    "start": "1595760",
    "end": "1598840"
  },
  {
    "text": "load balance um basically requests",
    "start": "1598840",
    "end": "1602159"
  },
  {
    "text": "across uh those replications um so this",
    "start": "1602159",
    "end": "1606399"
  },
  {
    "text": "fundamentally means that um we're going",
    "start": "1606399",
    "end": "1608600"
  },
  {
    "text": "to pick a random node uh of the set of",
    "start": "1608600",
    "end": "1611399"
  },
  {
    "text": "replications for that have been mapped",
    "start": "1611399",
    "end": "1613640"
  },
  {
    "text": "to um and the um utility here is not",
    "start": "1613640",
    "end": "1618360"
  },
  {
    "text": "only just like spreading the load across",
    "start": "1618360",
    "end": "1620399"
  },
  {
    "text": "those but also if you have a failure if",
    "start": "1620399",
    "end": "1622200"
  },
  {
    "text": "one of these nodes disappears um you're",
    "start": "1622200",
    "end": "1624640"
  },
  {
    "text": "going to actually see less disruption",
    "start": "1624640",
    "end": "1626279"
  },
  {
    "text": "because you're not going to have been",
    "start": "1626279",
    "end": "1627200"
  },
  {
    "text": "sending all of that traffic directly to",
    "start": "1627200",
    "end": "1629240"
  },
  {
    "text": "that node you're going to actually have",
    "start": "1629240",
    "end": "1630480"
  },
  {
    "text": "been spreading that traffic a bunch a",
    "start": "1630480",
    "end": "1632919"
  },
  {
    "text": "bunch of different replications um so",
    "start": "1632919",
    "end": "1635080"
  },
  {
    "text": "now um you'll minimize the more",
    "start": "1635080",
    "end": "1637159"
  },
  {
    "text": "disruption if you're kind of spreading",
    "start": "1637159",
    "end": "1639080"
  },
  {
    "text": "across your replication",
    "start": "1639080",
    "end": "1641360"
  },
  {
    "text": "Factor um and so then that ultimately is",
    "start": "1641360",
    "end": "1644880"
  },
  {
    "text": "our picker um so that is is the core",
    "start": "1644880",
    "end": "1648200"
  },
  {
    "start": "1646000",
    "end": "1749000"
  },
  {
    "text": "logic behind um al.com or sorry",
    "start": "1648200",
    "end": "1651399"
  },
  {
    "text": "github.com",
    "start": "1651399",
    "end": "1652600"
  },
  {
    "text": "consistent our library um for",
    "start": "1652600",
    "end": "1654880"
  },
  {
    "text": "implementing all this in sh PC um there",
    "start": "1654880",
    "end": "1657279"
  },
  {
    "text": "is a lot more boiler plate but this is",
    "start": "1657279",
    "end": "1659480"
  },
  {
    "text": "this is the me and",
    "start": "1659480",
    "end": "1660840"
  },
  {
    "text": "potatoes fundamentally um that's it um",
    "start": "1660840",
    "end": "1665279"
  },
  {
    "text": "honestly to add this to your code base",
    "start": "1665279",
    "end": "1667559"
  },
  {
    "text": "it takes about uh an import of our",
    "start": "1667559",
    "end": "1670039"
  },
  {
    "text": "library it takes a registering of the",
    "start": "1670039",
    "end": "1672559"
  },
  {
    "text": "the balancer um and it takes setting",
    "start": "1672559",
    "end": "1674799"
  },
  {
    "text": "that initial service config and and",
    "start": "1674799",
    "end": "1677240"
  },
  {
    "text": "that's about it um I'd like to thank",
    "start": "1677240",
    "end": "1679760"
  },
  {
    "text": "everyone involved at offed who helped um",
    "start": "1679760",
    "end": "1682399"
  },
  {
    "text": "build this Library um but also the folks",
    "start": "1682399",
    "end": "1685519"
  },
  {
    "text": "over grpc that write all the go tooling",
    "start": "1685519",
    "end": "1688880"
  },
  {
    "text": "um I think that's also the goine team",
    "start": "1688880",
    "end": "1691960"
  },
  {
    "text": "and not just the JPC team um in addition",
    "start": "1691960",
    "end": "1694720"
  },
  {
    "text": "I'd like to thank the folks that develop",
    "start": "1694720",
    "end": "1696200"
  },
  {
    "text": "the library called Cube resolver cube",
    "start": "1696200",
    "end": "1698039"
  },
  {
    "text": "resolver is how we actually um detect",
    "start": "1698039",
    "end": "1700640"
  },
  {
    "text": "and find that umbr list um so that space",
    "start": "1700640",
    "end": "1703039"
  },
  {
    "text": "Tob can self cluster on kubernetes it",
    "start": "1703039",
    "end": "1705399"
  },
  {
    "text": "doesn't need to um have any configur",
    "start": "1705399",
    "end": "1707720"
  },
  {
    "text": "from our user um it will actually just",
    "start": "1707720",
    "end": "1709720"
  },
  {
    "text": "Auto detect nodes and start kind of",
    "start": "1709720",
    "end": "1712000"
  },
  {
    "text": "clustering itself and all the",
    "start": "1712000",
    "end": "1714159"
  },
  {
    "text": "dispatching and caching that comes for",
    "start": "1714159",
    "end": "1716320"
  },
  {
    "text": "free um if you're interested in",
    "start": "1716320",
    "end": "1718640"
  },
  {
    "text": "implementing anything like that feel",
    "start": "1718640",
    "end": "1720240"
  },
  {
    "text": "free to jump into our uh Discord the",
    "start": "1720240",
    "end": "1722720"
  },
  {
    "text": " DV Discord this is not just for",
    "start": "1722720",
    "end": "1724760"
  },
  {
    "text": "folks that are trying to solve",
    "start": "1724760",
    "end": "1725840"
  },
  {
    "text": "authorization problems but folks",
    "start": "1725840",
    "end": "1727440"
  },
  {
    "text": "interested in distributed systems or um",
    "start": "1727440",
    "end": "1729799"
  },
  {
    "text": "kind of U building uh orthogonal Tooling",
    "start": "1729799",
    "end": "1733919"
  },
  {
    "text": "in the cloud native ecosystem um also if",
    "start": "1733919",
    "end": "1737159"
  },
  {
    "text": "you're interested in kind of other",
    "start": "1737159",
    "end": "1738600"
  },
  {
    "text": "distributed systems topics I've also",
    "start": "1738600",
    "end": "1740600"
  },
  {
    "text": "given a previous webinar talking about",
    "start": "1740600",
    "end": "1742440"
  },
  {
    "text": "database consistency and consistency in",
    "start": "1742440",
    "end": "1744440"
  },
  {
    "text": "general um that you can find with this",
    "start": "1744440",
    "end": "1746519"
  },
  {
    "text": "YouTube link here thanks for listening",
    "start": "1746519",
    "end": "1751720"
  }
]