[
  {
    "start": "0",
    "end": "219000"
  },
  {
    "text": "good morning good afternoon and good evening depending on where you're watching this um",
    "start": "799",
    "end": "6799"
  },
  {
    "text": "we'd like to introduce you to the cncf uh tag storage session where",
    "start": "6799",
    "end": "13599"
  },
  {
    "text": "we're gonna cover an intro to the tag some of the projects we're working on and the landscape and technology in our",
    "start": "13599",
    "end": "21840"
  },
  {
    "text": "space my name is uh alex kirkoff i'm the ceo of storage os and i'm also a",
    "start": "21840",
    "end": "28240"
  },
  {
    "text": "co-chair of the cncf storage tag and my co-presenters are shane and",
    "start": "28240",
    "end": "34800"
  },
  {
    "text": "rafael and i'll let them introduce themselves thanks alex",
    "start": "34800",
    "end": "40079"
  },
  {
    "text": "my name is xinyang i work at vmware in the cloud study team i'm a co-chair of",
    "start": "40079",
    "end": "45680"
  },
  {
    "text": "kubernetes sixth storage also co-chair of the cncf tax forage",
    "start": "45680",
    "end": "51120"
  },
  {
    "text": "and now it's a ravioli thank you my name is rafael espasoli i",
    "start": "51120",
    "end": "57520"
  },
  {
    "text": "work at red hat as an architect for openshift i am also a",
    "start": "57520",
    "end": "62719"
  },
  {
    "text": "lead in text storage stack brilliant",
    "start": "62719",
    "end": "67760"
  },
  {
    "text": "so let's dive right in um so very quickly today we're going to",
    "start": "67760",
    "end": "73200"
  },
  {
    "text": "cover um an overview of the tag and some of the storage projects um that are being worked on in the cncf and that are",
    "start": "73200",
    "end": "80400"
  },
  {
    "text": "being reviewed by the tag um we'll also cover um some of the documents uh and",
    "start": "80400",
    "end": "85840"
  },
  {
    "text": "content that we've been working on including uh the storage landscape documents the performance and",
    "start": "85840",
    "end": "91360"
  },
  {
    "text": "benchmarking and the disaster recovery as always we're aiming to have a few minutes at the end um for for q a so",
    "start": "91360",
    "end": "99119"
  },
  {
    "text": "feel free to post questions um as we go along so very quickly um",
    "start": "99119",
    "end": "106320"
  },
  {
    "text": "the the cncf uh tags are technical advisory groups um they used to be",
    "start": "106320",
    "end": "112000"
  },
  {
    "text": "called sigs but they were renamed because of some of the confusion um with",
    "start": "112000",
    "end": "117439"
  },
  {
    "text": "with between the cncf uh six and the cumulative sigs um all of our goals uh are open um we",
    "start": "117439",
    "end": "125439"
  },
  {
    "text": "have meetings on the second and fourth wednesday of every month um so please uh you're welcome to join",
    "start": "125439",
    "end": "133040"
  },
  {
    "text": "and have a look at the at the agenda and uh and and join our mailing list and all",
    "start": "133040",
    "end": "138319"
  },
  {
    "text": "the recordings of of previous tag sessions are also online on youtube",
    "start": "138319",
    "end": "144800"
  },
  {
    "text": "um fundamentally we're a mixed bunch of of people um verging from",
    "start": "144800",
    "end": "150960"
  },
  {
    "text": "[Music] you know technologists and and business users and vendors",
    "start": "150960",
    "end": "156720"
  },
  {
    "text": "but all specializing in in storage um we have a number of coaches that that",
    "start": "156720",
    "end": "162480"
  },
  {
    "text": "manage and plan with the tag and the number of tech leads who are technical authorities in their space",
    "start": "162480",
    "end": "168239"
  },
  {
    "text": "and we work with the toc um specifically sad ali who also used to be um in the in",
    "start": "168239",
    "end": "175120"
  },
  {
    "text": "the sag and an aaron boyd who also used to be an attack before they joined the the toc",
    "start": "175120",
    "end": "181599"
  },
  {
    "text": "um fundamentally what we're here to do is to help the toc scale",
    "start": "181599",
    "end": "187200"
  },
  {
    "text": "we're we're here to provide technical expertise um and and sort of bring the",
    "start": "187200",
    "end": "192480"
  },
  {
    "text": "the storage community uh into the cncf",
    "start": "192480",
    "end": "197760"
  },
  {
    "text": "a big portion of what we do is to create documents and",
    "start": "197760",
    "end": "203280"
  },
  {
    "text": "and information which helps end users understand the cloud native storage space which is quite complex and",
    "start": "203280",
    "end": "210480"
  },
  {
    "text": "we'll talk a little bit about um some of the things we're doing there um but of of course what we're trying to",
    "start": "210480",
    "end": "216720"
  },
  {
    "text": "do here is is lots of research um and that kind of ties in then to the second thing we do which is which is",
    "start": "216720",
    "end": "222799"
  },
  {
    "start": "219000",
    "end": "219000"
  },
  {
    "text": "projects um today uh the cncf has three types of projects there are sandbox",
    "start": "222799",
    "end": "229040"
  },
  {
    "text": "incubation and graduation sandbox projects is is the starting point for for a lot of the projects",
    "start": "229040",
    "end": "236239"
  },
  {
    "text": "journey into the cncf and it allows them uh it has a low uh barrier to entry",
    "start": "236239",
    "end": "242879"
  },
  {
    "text": "and allows uh um uh projects to build a community and and",
    "start": "242879",
    "end": "248000"
  },
  {
    "text": "and start working towards their uh intellectual intellectual property policies whereas incubation projects are",
    "start": "248000",
    "end": "254720"
  },
  {
    "text": "projects which um happen after a due diligence step and those incubation projects",
    "start": "254720",
    "end": "260799"
  },
  {
    "text": "are effectively used successfully in in production and have a healthy number of committers um and",
    "start": "260799",
    "end": "268560"
  },
  {
    "text": "also a number of uh users that that uh that can vouch for for the project",
    "start": "268560",
    "end": "274960"
  },
  {
    "text": "graduation is is for projects that have gone mainstream and you know things like uh",
    "start": "274960",
    "end": "280560"
  },
  {
    "text": "kubernetes that cd for example and prometheus are are some of the big uh graduated",
    "start": "280560",
    "end": "286000"
  },
  {
    "text": "projects um and they also benefit from uh security audits and have",
    "start": "286000",
    "end": "291919"
  },
  {
    "text": "um committers from multiple organizations to ensure the longer life of the project",
    "start": "291919",
    "end": "298400"
  },
  {
    "start": "298000",
    "end": "298000"
  },
  {
    "text": "um so the tag actually is um helps the toc um with the review process",
    "start": "298400",
    "end": "305680"
  },
  {
    "text": "and we perform the due diligence for projects that are going through due diligence",
    "start": "305680",
    "end": "311520"
  },
  {
    "text": "reviews and we typically work with a sponsor from the toc",
    "start": "311520",
    "end": "317120"
  },
  {
    "text": "um who also who also typically will have you know special a specific interest in the",
    "start": "317120",
    "end": "323199"
  },
  {
    "text": "project um finally a couple of other things that we do is we provide um",
    "start": "323199",
    "end": "331280"
  },
  {
    "text": "we provide input from end users sometimes by for example running surveys and understanding end",
    "start": "331280",
    "end": "338160"
  },
  {
    "text": "user use cases um to to help prioritize what to work on next um and to also provide that",
    "start": "338160",
    "end": "345759"
  },
  {
    "text": "feedback to to projects as needed um and we and we also of course you know we talked about the the meetings and the",
    "start": "345759",
    "end": "352720"
  },
  {
    "text": "community that that um that we're trying to build which which which often has um",
    "start": "352720",
    "end": "358319"
  },
  {
    "text": "you know very interesting uh discussions about the variety of topics which then often end up becoming um documents that",
    "start": "358319",
    "end": "365680"
  },
  {
    "text": "we publish and finally of course you know we're we're trusted advisors to the to the toc",
    "start": "365680",
    "end": "372639"
  },
  {
    "text": "um but note we don't actually make decisions on projects we we provide advice and and recommendations and",
    "start": "372639",
    "end": "379120"
  },
  {
    "text": "ultimately the toc who are who are voted in make the make the final decisions um",
    "start": "379120",
    "end": "385120"
  },
  {
    "text": "for those for those projects um and with that i will hand over",
    "start": "385120",
    "end": "391440"
  },
  {
    "text": "to xing who's going to talk a little bit about some of the projects that we have in the cncf",
    "start": "391440",
    "end": "398720"
  },
  {
    "start": "398000",
    "end": "398000"
  },
  {
    "text": "thanks alex so i'm going to talk about a graduated and incubating study projects",
    "start": "398720",
    "end": "405919"
  },
  {
    "text": "juke is a graduated project zhuk is an open source cloud native",
    "start": "405919",
    "end": "410960"
  },
  {
    "text": "storage orchestrator for kubernetes ruka turns distributed storage systems",
    "start": "410960",
    "end": "416479"
  },
  {
    "text": "into self managing soft scaling and self-healing storage services rook supports multiple storage",
    "start": "416479",
    "end": "424240"
  },
  {
    "text": "solutions each with a specialized kubernetes operator to automate",
    "start": "424240",
    "end": "429360"
  },
  {
    "text": "management it has stable support for saf and offers support for cassandra and nfs",
    "start": "429360",
    "end": "437680"
  },
  {
    "text": "the next one is vitas it's also a graduated project it's a cloud native database system for",
    "start": "437680",
    "end": "445120"
  },
  {
    "text": "deploying scaling and managing large clusters of database instances",
    "start": "445120",
    "end": "451120"
  },
  {
    "text": "currently vita supports mysql packarna and mariadb databases",
    "start": "451120",
    "end": "456960"
  },
  {
    "text": "it's architected to run as effectively in a public or private cloud as it does on",
    "start": "456960",
    "end": "463039"
  },
  {
    "text": "dedicated hardware it combines and extends many important sql features",
    "start": "463039",
    "end": "469440"
  },
  {
    "text": "with the scalability of a nosql database etcd is a graduated project it's a",
    "start": "469440",
    "end": "477120"
  },
  {
    "text": "distributed key value store that provides a reliable way to store data",
    "start": "477120",
    "end": "482879"
  },
  {
    "text": "across a cluster of machines all kubernetes clusters use etcd as",
    "start": "482879",
    "end": "488639"
  },
  {
    "text": "their primary data store it handles storing and replicating data",
    "start": "488639",
    "end": "494879"
  },
  {
    "text": "for kubernetes cluster state and uses the raft consensus algorithm to",
    "start": "494879",
    "end": "500879"
  },
  {
    "text": "recover from hardware failure and network partitions thai kv is a graduated",
    "start": "500879",
    "end": "507759"
  },
  {
    "text": "project tech kv is an open source distributed transactional key value database using rust it provides",
    "start": "507759",
    "end": "515518"
  },
  {
    "text": "transactional key value apis with acid guarantees the project provides a unifying",
    "start": "515519",
    "end": "522479"
  },
  {
    "text": "distributed storage layer for cloud native applications it can also be deployed on top of",
    "start": "522479",
    "end": "528880"
  },
  {
    "text": "kubernetes with an operator dragonfly is an incubating project it's",
    "start": "528880",
    "end": "536560"
  },
  {
    "text": "also a project under sig runtime dragonfly is an open source p2p based",
    "start": "536560",
    "end": "542320"
  },
  {
    "text": "cloud native image and file distribution system it was originally created to improve the",
    "start": "542320",
    "end": "550160"
  },
  {
    "text": "user experience with application cache log image distributions",
    "start": "550160",
    "end": "555519"
  },
  {
    "text": "at very large scales for dragonfly no matter how many clients",
    "start": "555519",
    "end": "560880"
  },
  {
    "text": "start the downloading the average downloading time is almost stable",
    "start": "560880",
    "end": "566640"
  },
  {
    "text": "without performance penalties so that's all for the cncf storage",
    "start": "566640",
    "end": "572080"
  },
  {
    "text": "projects next slide please",
    "start": "572080",
    "end": "577000"
  },
  {
    "text": "so here are a few projects that are in review for incubation",
    "start": "577680",
    "end": "583279"
  },
  {
    "text": "next here is a list of other search projects",
    "start": "583279",
    "end": "588320"
  },
  {
    "text": "in cncf there are a few more sandbox projects shown here",
    "start": "588320",
    "end": "595040"
  },
  {
    "text": "so next please i'm going to talk about the cncf storage",
    "start": "595680",
    "end": "602000"
  },
  {
    "start": "599000",
    "end": "599000"
  },
  {
    "text": "landscape whitepaper in this white paper we described storage",
    "start": "602000",
    "end": "607360"
  },
  {
    "text": "system attributes different layers in a storage solution and how they affect the storage",
    "start": "607360",
    "end": "614160"
  },
  {
    "text": "attributes we talked about the definition of data access interfaces and management",
    "start": "614160",
    "end": "621120"
  },
  {
    "text": "interfaces next please",
    "start": "621120",
    "end": "625720"
  },
  {
    "text": "i apologize there i hit the wrong button thanks okay um storage systems",
    "start": "637440",
    "end": "644079"
  },
  {
    "text": "have several storage attributes availability scalability performance",
    "start": "644079",
    "end": "649920"
  },
  {
    "text": "consistency and durability availability defines the ability to",
    "start": "649920",
    "end": "655200"
  },
  {
    "text": "access the data during failure conditions scalability can be measured by the",
    "start": "655200",
    "end": "660880"
  },
  {
    "text": "ability to scale the number of clients throughput or number of operations per second",
    "start": "660880",
    "end": "666959"
  },
  {
    "text": "the capacity and the number of components performance can be measured against",
    "start": "666959",
    "end": "673680"
  },
  {
    "text": "latency the number of operations per seconds and the throughput",
    "start": "673680",
    "end": "679120"
  },
  {
    "text": "consistency refers to the ability to access newly created data or updates",
    "start": "679120",
    "end": "684880"
  },
  {
    "text": "after it has been committed a system can be either eventual consistent or strongly consistent",
    "start": "684880",
    "end": "694000"
  },
  {
    "text": "durability is affected by the data protection layers levels of redundancy the endurance of",
    "start": "694000",
    "end": "701519"
  },
  {
    "text": "the storage media and the ability to detect corruption and",
    "start": "701519",
    "end": "706880"
  },
  {
    "text": "recover the data next slide please",
    "start": "706880",
    "end": "712079"
  },
  {
    "start": "712000",
    "end": "712000"
  },
  {
    "text": "there are several storage layers that can impact the storage attributes for example rather than directly access",
    "start": "712639",
    "end": "720079"
  },
  {
    "text": "resources a hypervisor can provide access to resources which could add",
    "start": "720079",
    "end": "725839"
  },
  {
    "text": "excess overhead storage topology describes the arrangement of storage and compute",
    "start": "725839",
    "end": "732639"
  },
  {
    "text": "resources and the data link between them this includes centralized distributed",
    "start": "732639",
    "end": "738399"
  },
  {
    "text": "sharded and hyper-converged topologies storage systems uoa have data production",
    "start": "738399",
    "end": "745120"
  },
  {
    "text": "layer which adds redundancy this refers to raid erasure coding and",
    "start": "745120",
    "end": "752079"
  },
  {
    "text": "replicas search systems usually provide data services in addition to the core storage",
    "start": "752079",
    "end": "758240"
  },
  {
    "text": "functions including replication snapshots clones",
    "start": "758240",
    "end": "763279"
  },
  {
    "text": "and so on so the system ultimately persists data",
    "start": "763279",
    "end": "768320"
  },
  {
    "text": "on physical storage layer which is usually non-volatile it has impact on",
    "start": "768320",
    "end": "774079"
  },
  {
    "text": "the overall performance and long-term durability next slide please",
    "start": "774079",
    "end": "781600"
  },
  {
    "start": "781000",
    "end": "781000"
  },
  {
    "text": "in this diagram we can see that workloads consume storage through different data access interfaces",
    "start": "783040",
    "end": "790639"
  },
  {
    "text": "there are two categories of data access interfaces here we call them volumes and api",
    "start": "790639",
    "end": "796959"
  },
  {
    "text": "container orchestration system has interfaces for volumes which supports both block and file",
    "start": "796959",
    "end": "803680"
  },
  {
    "text": "systems in kubernetes there are two volume modes file system and block",
    "start": "803680",
    "end": "809920"
  },
  {
    "text": "cloud system mode allows workloads to consumer file system directly underneath it can be either file system",
    "start": "809920",
    "end": "816560"
  },
  {
    "text": "or block interface block mode allows raw block device to be",
    "start": "816560",
    "end": "821600"
  },
  {
    "text": "consumed directly by the workload on the api we have",
    "start": "821600",
    "end": "826800"
  },
  {
    "text": "object store api that stores or retrieves objects note that there is a",
    "start": "826800",
    "end": "833279"
  },
  {
    "text": "kubernetes sig storage sub project called cozy container object storage interface",
    "start": "833279",
    "end": "839839"
  },
  {
    "text": "which introduces kubernetes apis to support observation of object storage",
    "start": "839839",
    "end": "845279"
  },
  {
    "text": "operations for kubernetes workloads it also introduces cozy as a set of grpc",
    "start": "845279",
    "end": "851920"
  },
  {
    "text": "interfaces so that an object storage vendor can write a driver",
    "start": "851920",
    "end": "857360"
  },
  {
    "text": "for provisioning accessing object source it is targeting alpha in kubernetes 1.23",
    "start": "857360",
    "end": "864079"
  },
  {
    "text": "release on the api we also have key value source",
    "start": "864079",
    "end": "869839"
  },
  {
    "text": "which use an api to store retrieve values from source based on a key",
    "start": "869839",
    "end": "875760"
  },
  {
    "text": "it's typically used to store state configuration for distributed systems",
    "start": "875760",
    "end": "883279"
  },
  {
    "text": "and on the api we also have databases databases are typically accessed through",
    "start": "883680",
    "end": "889279"
  },
  {
    "text": "an api not all databases are cloud native this can be",
    "start": "889279",
    "end": "895279"
  },
  {
    "text": "typically addressed with additional tooling like the use of proxies and orchestration systems that allow",
    "start": "895279",
    "end": "902639"
  },
  {
    "text": "them to be better suited to run in a cloud native environment next please",
    "start": "902639",
    "end": "909839"
  },
  {
    "start": "909000",
    "end": "909000"
  },
  {
    "text": "now let's look at orchestration and management interfaces this diagram shows workloads consume",
    "start": "910480",
    "end": "917839"
  },
  {
    "text": "storage through data access interfaces there are two ways for solid systems to",
    "start": "917839",
    "end": "923519"
  },
  {
    "text": "interact with container orchestration systems the darker green box here",
    "start": "923519",
    "end": "929279"
  },
  {
    "text": "control plane interfaces refers to storage interface directly supported by",
    "start": "929279",
    "end": "934480"
  },
  {
    "text": "ceos including container storage interface csi docker volume driver interface and so on",
    "start": "934480",
    "end": "942240"
  },
  {
    "text": "csi has three jrpc services controller node and identity services",
    "start": "942240",
    "end": "948480"
  },
  {
    "text": "identity service provides info and capabilities of plugin controller",
    "start": "948480",
    "end": "953519"
  },
  {
    "text": "service supports functions such as create and delete volume attach and detach volume and so",
    "start": "953519",
    "end": "959279"
  },
  {
    "text": "on and node service supports functions such as mount and almond volume",
    "start": "959279",
    "end": "967120"
  },
  {
    "text": "this orange box is called framework and tools this is an",
    "start": "967120",
    "end": "972560"
  },
  {
    "text": "extension of control plane interfaces for application api including key value",
    "start": "972560",
    "end": "978720"
  },
  {
    "text": "store and databases ceos currently don't have direct interfaces for it yet",
    "start": "978720",
    "end": "985519"
  },
  {
    "text": "but some frameworks and tools have support for them for example juke supports cassandra vitus has an operator",
    "start": "985519",
    "end": "993199"
  },
  {
    "text": "to manage mysql clusters so that's all for the storage landscape",
    "start": "993199",
    "end": "998959"
  },
  {
    "text": "by paper now i will hand it over to alex to talk about the performance by",
    "start": "998959",
    "end": "1004079"
  },
  {
    "text": "paper thank you very much um so we'll spend a few minutes covering uh",
    "start": "1004079",
    "end": "1011759"
  },
  {
    "start": "1008000",
    "end": "1008000"
  },
  {
    "text": "the storage performance uh white paper which is which is effectively um a",
    "start": "1011759",
    "end": "1016959"
  },
  {
    "text": "follow-on from the landscape white paper that we had put together where we where we decided",
    "start": "1016959",
    "end": "1022000"
  },
  {
    "text": "to to uh to focus on some of the different uh attributes and the first one we",
    "start": "1022000",
    "end": "1028000"
  },
  {
    "text": "focused on was performance and the second one was was availability and disaster recovery which",
    "start": "1028000",
    "end": "1034160"
  },
  {
    "text": "which uh rafael is going to cover next in the performance white paper",
    "start": "1034160",
    "end": "1040160"
  },
  {
    "text": "um we aim to define you know all of the different concepts",
    "start": "1040160",
    "end": "1046079"
  },
  {
    "text": "that we use for for measuring performance and benchmarking and we focus primarily",
    "start": "1046079",
    "end": "1052080"
  },
  {
    "text": "on on volumes and databases you know in the full knowledge that of course there are lots of different systems to to uh",
    "start": "1052080",
    "end": "1058960"
  },
  {
    "text": "to persist information but but we um we focused on sort of two of the of the main ones",
    "start": "1058960",
    "end": "1064880"
  },
  {
    "text": "um and in this you know when we were looking at it we we we ended up defining",
    "start": "1064880",
    "end": "1071280"
  },
  {
    "text": "um a number of things to to uh educate end users on how to compare",
    "start": "1071280",
    "end": "1077840"
  },
  {
    "text": "benchmarking and performance in their environment primarily because it is such an incredibly uh complex topic",
    "start": "1077840",
    "end": "1085280"
  },
  {
    "text": "um so so we look at you know some of the basics where we where we look at um you know operations and and throughput so",
    "start": "1085280",
    "end": "1093360"
  },
  {
    "text": "things like um you know ios per second or perhaps transactions per second in a database or or perhaps you know",
    "start": "1093360",
    "end": "1100160"
  },
  {
    "text": "megabytes per second or gigabytes per second even when it comes to throughput um and a lot of those things are very",
    "start": "1100160",
    "end": "1107200"
  },
  {
    "text": "much influenced by a number of different factors so",
    "start": "1107200",
    "end": "1113520"
  },
  {
    "text": "of course when we're looking at operations um latency is probably the single",
    "start": "1113520",
    "end": "1120000"
  },
  {
    "text": "biggest factor and and low latency is is um is going to be key when it comes to",
    "start": "1120000",
    "end": "1127280"
  },
  {
    "text": "anything that involves you know thousands of operations per second or thousands of transactions",
    "start": "1127280",
    "end": "1133039"
  },
  {
    "text": "per second um but of course latency becomes less of a factor when uh you're managing",
    "start": "1133039",
    "end": "1139760"
  },
  {
    "text": "sequential workloads or or or throughput sensitive um workloads because it's it's",
    "start": "1139760",
    "end": "1145440"
  },
  {
    "text": "typically easier um to implement uh faster throughputs with higher latencies simply because the",
    "start": "1145440",
    "end": "1152240"
  },
  {
    "text": "units of work um are larger um so so you know often databases uh database",
    "start": "1152240",
    "end": "1159280"
  },
  {
    "text": "operations for example a small file system operations can be measured in in maybe 4k or or 16k",
    "start": "1159280",
    "end": "1166880"
  },
  {
    "text": "chunks but but sequential workloads like analytics might be operating in in 1 to 8k or one megabytes",
    "start": "1166880",
    "end": "1174559"
  },
  {
    "text": "chunks and so just like um she was explaining in the white paper a number of different",
    "start": "1174559",
    "end": "1181600"
  },
  {
    "text": "options come into play when it comes to the topology data protection uh data reduction and encryption",
    "start": "1181600",
    "end": "1187200"
  },
  {
    "text": "um because all of those services add overhead um you know topology whether",
    "start": "1187200",
    "end": "1192240"
  },
  {
    "text": "you're accessing data locally or you're accessing data over a storage network for example uh data protection um when",
    "start": "1192240",
    "end": "1199200"
  },
  {
    "text": "it comes to comparing the different ways that the data is protected you know whether it's",
    "start": "1199200",
    "end": "1204799"
  },
  {
    "text": "mirroring or replicas or or or some sort of raid uh or even um erasure coding for example",
    "start": "1204799",
    "end": "1211840"
  },
  {
    "text": "um data reduction like like compression and detube can also have a huge effect on compression on sorry on on your on",
    "start": "1211840",
    "end": "1219200"
  },
  {
    "text": "your performance and on the benchmarking capabilities especially if the data that your work the data set that you're",
    "start": "1219200",
    "end": "1225520"
  },
  {
    "text": "working with is is highly compressible or highly duplicable um and of course you know encryption for",
    "start": "1225520",
    "end": "1231200"
  },
  {
    "text": "security is a very common factor nowadays and and obviously adds some overheads",
    "start": "1231200",
    "end": "1236960"
  },
  {
    "text": "but um in many systems encryption is is is highly accelerated um because it's",
    "start": "1236960",
    "end": "1243600"
  },
  {
    "text": "already capable in many um frameworks now the two other things then which",
    "start": "1243600",
    "end": "1249919"
  },
  {
    "text": "which come into play is um the concurrency so things like the number of queues and the number of",
    "start": "1249919",
    "end": "1256159"
  },
  {
    "text": "clients that are used to to generate the workload um you know you have to make",
    "start": "1256159",
    "end": "1261600"
  },
  {
    "text": "sure that um when when you're looking at the performance if you don't have um artificial",
    "start": "1261600",
    "end": "1267360"
  },
  {
    "text": "bottlenecks that might be you know cpu bound or or network band and and using multiple clients and multiple backends",
    "start": "1267360",
    "end": "1273840"
  },
  {
    "text": "can help with that um and of course you know the the probably the single biggest thing that",
    "start": "1273840",
    "end": "1279600"
  },
  {
    "text": "that catches so many people out is is understanding the caching um at multiple layers and and making",
    "start": "1279600",
    "end": "1285840"
  },
  {
    "text": "sure that if you want to test the storage performance of your of your system",
    "start": "1285840",
    "end": "1292559"
  },
  {
    "text": "um that you need to to at least use a data set that's that's um that's a",
    "start": "1292559",
    "end": "1298000"
  },
  {
    "text": "number of orders of magnitude bigger than the the cache size available i i",
    "start": "1298000",
    "end": "1303120"
  },
  {
    "text": "lose track of the number of times i've seen um benchmark documents um",
    "start": "1303120",
    "end": "1308960"
  },
  {
    "text": "quoting numbers where um all all that's being quoted is effectively",
    "start": "1308960",
    "end": "1314480"
  },
  {
    "text": "the speed of the cache because because the data set isn't actually utilizing the storage system at all",
    "start": "1314480",
    "end": "1320240"
  },
  {
    "text": "um so so you know in summary the important takeaway is it's it's really useful to to use the",
    "start": "1320240",
    "end": "1327440"
  },
  {
    "text": "published results um uh for making comparisons",
    "start": "1327440",
    "end": "1332720"
  },
  {
    "text": "and therefore our recommendation is uh to be able to",
    "start": "1332720",
    "end": "1338000"
  },
  {
    "text": "understand um your tests in your own environments with",
    "start": "1338000",
    "end": "1343039"
  },
  {
    "text": "your own applications um and in the and in the document we're now looking to",
    "start": "1343039",
    "end": "1350000"
  },
  {
    "text": "provide some guidance on the uses of standardized uh tools which which",
    "start": "1350000",
    "end": "1355440"
  },
  {
    "text": "effectively would allow you to to perform your own tests uh in your in your own environment and and perhaps",
    "start": "1355440",
    "end": "1362080"
  },
  {
    "text": "compare uh different systems whether you're running you know on-prem or in the cloud or or some sort of virtual",
    "start": "1362080",
    "end": "1368799"
  },
  {
    "text": "environment or development environment that covers the performance white paper",
    "start": "1368799",
    "end": "1374159"
  },
  {
    "text": "and with that i'll hand over to rafaela who's going to cover off our disaster recovery documents which",
    "start": "1374159",
    "end": "1381200"
  },
  {
    "text": "we've been working on so hard for the last few months thank you alex",
    "start": "1381200",
    "end": "1387679"
  },
  {
    "start": "1385000",
    "end": "1385000"
  },
  {
    "text": "yeah here we present the disaster recovery white paper in this white paper we focus",
    "start": "1387679",
    "end": "1395039"
  },
  {
    "text": "on an approach to disaster recovery which we call cloud native disaster recovery",
    "start": "1395039",
    "end": "1401600"
  },
  {
    "text": "this is a this is not a new approach but it's an approach that we think",
    "start": "1401600",
    "end": "1407200"
  },
  {
    "text": "with cloud native technologies and and solutions is going",
    "start": "1407200",
    "end": "1413200"
  },
  {
    "text": "to be easier to implement and also more affordable uh that's not to say that you have to",
    "start": "1413200",
    "end": "1421039"
  },
  {
    "text": "use it it's something that but we think it's something worth considering when you design your disaster recovery",
    "start": "1421039",
    "end": "1428080"
  },
  {
    "text": "uh architecture and to define it we compare and contrast it with what we",
    "start": "1428080",
    "end": "1434480"
  },
  {
    "text": "call transition traditional disaster recovery approaches uh we we debated a lot about using this",
    "start": "1434480",
    "end": "1441679"
  },
  {
    "text": "term traditional and but just to be clear by that we mean what you normally find in in",
    "start": "1441679",
    "end": "1448559"
  },
  {
    "text": "enterprises in in the average enterprise uh or company so not what the web",
    "start": "1448559",
    "end": "1454640"
  },
  {
    "text": "scalers are using not what startups that don't have technical that",
    "start": "1454640",
    "end": "1461840"
  },
  {
    "text": "are using but on average what you can find uh and so let's let's take a look at",
    "start": "1461840",
    "end": "1466960"
  },
  {
    "text": "some of these uh dimensions that we use to define the",
    "start": "1466960",
    "end": "1472400"
  },
  {
    "text": "cloud native disaster recovery for example what is the trigger of the",
    "start": "1472400",
    "end": "1477600"
  },
  {
    "text": "disaster recovery procedure traditionally it's a human decision with cloud native we want the decision",
    "start": "1477600",
    "end": "1484240"
  },
  {
    "text": "to be autonomous so the system knows when it's experiences a disaster and",
    "start": "1484240",
    "end": "1490000"
  },
  {
    "text": "can react and then what happens when the disaster recovery procedure is triggered",
    "start": "1490000",
    "end": "1496559"
  },
  {
    "text": "what we see in traditional enterprises is mix of automation and human action okay",
    "start": "1496559",
    "end": "1502159"
  },
  {
    "text": "but the best ones maybe do more automation other do more human actions with cloud native we want everything to",
    "start": "1502159",
    "end": "1509279"
  },
  {
    "text": "be fully automated so the system sees that there is a problem and self readjust to the new situation",
    "start": "1509279",
    "end": "1516799"
  },
  {
    "text": "and then coming to the main metrics by which you mean your disaster recovery slas which are rto and rpo a recovery",
    "start": "1516799",
    "end": "1525200"
  },
  {
    "text": "time objective and recovery point objective in transitional disaster recovery we see uh rto so the time that",
    "start": "1525200",
    "end": "1532720"
  },
  {
    "text": "the system is down between minutes and hours um depending how long it takes to make",
    "start": "1532720",
    "end": "1539440"
  },
  {
    "text": "the decision and how long it takes for the disaster recovery procedure to recover in cloud native disaster recovery we",
    "start": "1539440",
    "end": "1546159"
  },
  {
    "text": "want it to be near zero uh it's going to be in the order of seconds and because the health sects",
    "start": "1546159",
    "end": "1554480"
  },
  {
    "text": "automatically need to realize what's going on and it needs they need to redirect the traffic",
    "start": "1554480",
    "end": "1559919"
  },
  {
    "text": "to the lc locations but it's going to be order of seconds and rpo which is the amount of data that",
    "start": "1559919",
    "end": "1566640"
  },
  {
    "text": "is lost because of the disaster in traditional disaster recovery can be from zero to hours depending on how you",
    "start": "1566640",
    "end": "1573840"
  },
  {
    "text": "implement your uh volume replications or your backup system",
    "start": "1573840",
    "end": "1579200"
  },
  {
    "text": "in cloud native disaster recovery we want it to be exactly zero so perfect consistency across all of the uh",
    "start": "1579200",
    "end": "1587520"
  },
  {
    "text": "disaster failure domains um and then coming more from a point of",
    "start": "1587520",
    "end": "1593120"
  },
  {
    "text": "view of the process and the process owners of more people than technology",
    "start": "1593120",
    "end": "1599120"
  },
  {
    "text": "concerns normally what we see in traditional enterprises is that the",
    "start": "1599120",
    "end": "1607120"
  },
  {
    "text": "the storage team owns the disaster recovery process and technically it's really owned by the",
    "start": "1607120",
    "end": "1612640"
  },
  {
    "text": "applications uh team which have to publish their own business continuity document but what happens in reality is",
    "start": "1612640",
    "end": "1620159"
  },
  {
    "text": "that the application teams normally turn to the storage team and ask what is your",
    "start": "1620159",
    "end": "1625279"
  },
  {
    "text": "rto what is your rpo and they adopt whatever is available from the storage team",
    "start": "1625279",
    "end": "1631679"
  },
  {
    "text": "in cloud native disaster recovery instead we think that the application team should own",
    "start": "1631679",
    "end": "1637279"
  },
  {
    "text": "um it should completely own that process and",
    "start": "1637279",
    "end": "1642640"
  },
  {
    "text": "finally um doing these experiments and building this architecture what we notice is that",
    "start": "1642640",
    "end": "1649520"
  },
  {
    "text": "from for traditional disaster recovery usually the technical capabilities that enable the disaster recovery",
    "start": "1649520",
    "end": "1655840"
  },
  {
    "text": "architectures are coming from storage so things like backups restores and volume",
    "start": "1655840",
    "end": "1662080"
  },
  {
    "text": "sinks but in cloud native disaster recovery what we need instead our capabilities",
    "start": "1662080",
    "end": "1668159"
  },
  {
    "text": "from networking so is twice communication between between regions or between the our",
    "start": "1668159",
    "end": "1674720"
  },
  {
    "text": "failure domains and a global load balancer in front of everything to direct the traffic where",
    "start": "1674720",
    "end": "1681360"
  },
  {
    "text": "to the lt locations next next slide please",
    "start": "1681360",
    "end": "1686639"
  },
  {
    "start": "1686000",
    "end": "1686000"
  },
  {
    "text": "so what can you find inside this document very quickly um you there is",
    "start": "1686720",
    "end": "1692000"
  },
  {
    "text": "this definition that we just covered and then we have some definition on concepts that are needed in the rest of",
    "start": "1692000",
    "end": "1698399"
  },
  {
    "text": "the document like failure domain h a d r we we're not going in detail on these",
    "start": "1698399",
    "end": "1703840"
  },
  {
    "text": "things it's just enough to understand the rest of the document there are books around the",
    "start": "1703840",
    "end": "1709600"
  },
  {
    "text": "about availability and disaster recovery where these uh definitions are given in",
    "start": "1709600",
    "end": "1714640"
  },
  {
    "text": "much more details then we cover the cap theorem and everything that comes with it right uh",
    "start": "1714640",
    "end": "1720799"
  },
  {
    "text": "like consistency availability network partitioning the cab theorem is the base",
    "start": "1720799",
    "end": "1726080"
  },
  {
    "text": "of uh why it's it is possible to realize",
    "start": "1726080",
    "end": "1731520"
  },
  {
    "text": "architecture like we described here with the cloud native disaster recovery",
    "start": "1731520",
    "end": "1737200"
  },
  {
    "text": "so it's something that we need to explain in this document and and understand uh",
    "start": "1737200",
    "end": "1742399"
  },
  {
    "text": "to continue to to understand why those things are possible then we define um we again",
    "start": "1742399",
    "end": "1748960"
  },
  {
    "text": "look at the stateful workloads and their anatomy similar to what we do in the",
    "start": "1748960",
    "end": "1754880"
  },
  {
    "text": "white paper in the in the storage white paper but here we we focus in on the characteristics of",
    "start": "1754880",
    "end": "1762799"
  },
  {
    "text": "the anatomy that provide availability and scalability which are the concerns for for disaster recovery",
    "start": "1762799",
    "end": "1770960"
  },
  {
    "text": "here and then we look at consensus protocols which is are the protocols and",
    "start": "1770960",
    "end": "1776640"
  },
  {
    "text": "algorithms that are needed to keep all of the instances of this distributed workload in sync",
    "start": "1776640",
    "end": "1783200"
  },
  {
    "text": "so paxos and raft for consensus",
    "start": "1783200",
    "end": "1788960"
  },
  {
    "text": "between instances that have to do the same action and then",
    "start": "1788960",
    "end": "1795120"
  },
  {
    "text": "through phase commit and three-phase commit for synchronization between instances that don't have to do the same don't have to",
    "start": "1795120",
    "end": "1801120"
  },
  {
    "text": "do the same action so they are working on different partitions or different data structures",
    "start": "1801120",
    "end": "1807200"
  },
  {
    "text": "and finally we have some reference architecture for strong consistency and",
    "start": "1807200",
    "end": "1812320"
  },
  {
    "text": "the vendor consistency [Music] so clown cloud native disaster recovery",
    "start": "1812320",
    "end": "1818559"
  },
  {
    "text": "reference architecture in the case you want to do strong consistency or eventual consistency next slide because",
    "start": "1818559",
    "end": "1826159"
  },
  {
    "start": "1825000",
    "end": "1825000"
  },
  {
    "text": "an example of the kind of research we did in this in this document these are",
    "start": "1827120",
    "end": "1834159"
  },
  {
    "text": "this is a table with a list of product these are modern storage",
    "start": "1834159",
    "end": "1840799"
  },
  {
    "text": "products or stateful workloads and these are the choices that they make",
    "start": "1840799",
    "end": "1847679"
  },
  {
    "text": "in terms of consensus protocol for keeping the replicas in sync so replicas able they",
    "start": "1847679",
    "end": "1854240"
  },
  {
    "text": "have to do the same thing so they can use rafter boxes or some derivative of it",
    "start": "1854240",
    "end": "1859519"
  },
  {
    "text": "of those two and then this the sync protocol or between the",
    "start": "1859519",
    "end": "1864880"
  },
  {
    "text": "shards or the partitions which are doing different things so in that case you use",
    "start": "1864880",
    "end": "1870559"
  },
  {
    "text": "two-phase commit or three-phase commit or some other protocol of that kind",
    "start": "1870559",
    "end": "1875600"
  },
  {
    "text": "next slide please here is just the diagrams in the document you",
    "start": "1875600",
    "end": "1882320"
  },
  {
    "start": "1877000",
    "end": "1877000"
  },
  {
    "text": "can find more explanation but just the diagrams about our reference architecture for um",
    "start": "1882320",
    "end": "1888240"
  },
  {
    "text": "strong consistency okay so here looking at the picture on the left we",
    "start": "1888240",
    "end": "1893519"
  },
  {
    "text": "have three kubernetes clusters in different uh fader domains disaster",
    "start": "1893519",
    "end": "1898799"
  },
  {
    "text": "recovery failure domain so that could be data centers or could be cloud regions right depending on your",
    "start": "1898799",
    "end": "1905760"
  },
  {
    "text": "company's definition of risk and disaster you you will have",
    "start": "1905760",
    "end": "1911760"
  },
  {
    "text": "maybe a distance that these regions or data center have to be spaced",
    "start": "1911760",
    "end": "1917760"
  },
  {
    "text": "uh or have to be far apart um so you you need to set up this kind of uh",
    "start": "1917760",
    "end": "1924080"
  },
  {
    "text": "deployment and then um you will have a global balancer in front of it uh to direct the traffic",
    "start": "1924080",
    "end": "1931919"
  },
  {
    "text": "probably a stateless front end and then our stateful workload notice that the",
    "start": "1931919",
    "end": "1937600"
  },
  {
    "text": "workload needs east-west communication capability between these clusters",
    "start": "1937600",
    "end": "1943760"
  },
  {
    "text": "so that all the instances can find each other and can execute the replica and the sink",
    "start": "1943760",
    "end": "1949519"
  },
  {
    "text": "and then at the bottom you see that they use persistent volumes provided by the platform",
    "start": "1949519",
    "end": "1955519"
  },
  {
    "text": "uh and then when um so when in this case when one region goes down",
    "start": "1955519",
    "end": "1963279"
  },
  {
    "text": "the state workload readjusts itself with the remaining replicas",
    "start": "1963279",
    "end": "1968559"
  },
  {
    "text": "and the global balancer will detect that that one region is not available anymore and",
    "start": "1968559",
    "end": "1974320"
  },
  {
    "text": "send the traffic only to the available regions and it only is you don't lose any data",
    "start": "1974320",
    "end": "1980640"
  },
  {
    "text": "so rpo is absolutely zero and their to is just the time that the global balancer takes",
    "start": "1980640",
    "end": "1987039"
  },
  {
    "text": "to to realize that one region is not available anymore the state for workloads also needs a little bit of",
    "start": "1987039",
    "end": "1993279"
  },
  {
    "text": "time to readjust itself i'm not going to go further in detail on",
    "start": "1993279",
    "end": "1999679"
  },
  {
    "text": "this let's let's look at the next slide for for time's sake and the next one is a",
    "start": "1999679",
    "end": "2005919"
  },
  {
    "text": "event a reference architecture for cloud native disaster recovery but in this case for",
    "start": "2005919",
    "end": "2011360"
  },
  {
    "text": "eventual consistency so in this case we don't need three regions we only need two",
    "start": "2011360",
    "end": "2017519"
  },
  {
    "text": "of them in in the case it's a other than that the architecture is similar but in the",
    "start": "2017519",
    "end": "2023279"
  },
  {
    "text": "case we lose a region here the the remaining region or the main data center",
    "start": "2023279",
    "end": "2029120"
  },
  {
    "text": "can keep working but there is the possibility that the two states diverge",
    "start": "2029120",
    "end": "2035039"
  },
  {
    "text": "and then when when they come back when the uh disaster is recovered they will have to",
    "start": "2035039",
    "end": "2042159"
  },
  {
    "text": "converge to an agreed state um and that's you know that's that's the",
    "start": "2042159",
    "end": "2047840"
  },
  {
    "text": "characteristic of event or consistency we go in in detail uh in more detail on",
    "start": "2047840",
    "end": "2052960"
  },
  {
    "text": "this in the document and we talk about the fact that eventual consistency does not necessarily mean eventual",
    "start": "2052960",
    "end": "2058878"
  },
  {
    "text": "correctness so the resulting reconciliation may not be uh correct from the point of view of",
    "start": "2058879",
    "end": "2066398"
  },
  {
    "text": "the application but uh you know the only thing that this this eventually consistent state of",
    "start": "2066399",
    "end": "2072240"
  },
  {
    "text": "workload will guarantee is that eventually there will be a they will share they will have a common view on",
    "start": "2072240",
    "end": "2078240"
  },
  {
    "text": "the state next slide please",
    "start": "2078240",
    "end": "2083358"
  },
  {
    "text": "that concludes thanks so much rafaela and shing um",
    "start": "2083760",
    "end": "2091760"
  },
  {
    "text": "so finally um a little notes to kind of say please join us we'd love to uh we'd",
    "start": "2091760",
    "end": "2097920"
  },
  {
    "text": "love to have you as part of our community feel free to join our meetings or and join the",
    "start": "2097920",
    "end": "2105599"
  },
  {
    "text": "mailing list and with that we will say thank you and",
    "start": "2105599",
    "end": "2110800"
  },
  {
    "text": "open the floor to q a thanks everyone",
    "start": "2110800",
    "end": "2117800"
  }
]