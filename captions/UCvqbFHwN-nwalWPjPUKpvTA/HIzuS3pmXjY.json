[
  {
    "start": "0",
    "end": "45000"
  },
  {
    "text": "welcome everybody to this live",
    "start": "0",
    "end": "2320"
  },
  {
    "text": "demonstration of cuba today i'm very",
    "start": "2320",
    "end": "4319"
  },
  {
    "text": "excited to be presenting to you this",
    "start": "4319",
    "end": "6399"
  },
  {
    "text": "session",
    "start": "6399",
    "end": "7200"
  },
  {
    "text": "because we're going to be seeing the",
    "start": "7200",
    "end": "8960"
  },
  {
    "text": "results of many months of work",
    "start": "8960",
    "end": "11280"
  },
  {
    "text": "with the community and with our users",
    "start": "11280",
    "end": "13280"
  },
  {
    "text": "into building the best multi-cluster and",
    "start": "13280",
    "end": "15280"
  },
  {
    "text": "multi-cloud support",
    "start": "15280",
    "end": "16560"
  },
  {
    "text": "that any service mesh has ever seen my",
    "start": "16560",
    "end": "19039"
  },
  {
    "text": "name is marco palladino",
    "start": "19039",
    "end": "20640"
  },
  {
    "text": "and i am the cto and co-founder of kong",
    "start": "20640",
    "end": "24080"
  },
  {
    "text": "and kong really was the organization",
    "start": "24080",
    "end": "26480"
  },
  {
    "text": "that first created kuma",
    "start": "26480",
    "end": "28400"
  },
  {
    "text": "and then decided to donate cuma to the",
    "start": "28400",
    "end": "31039"
  },
  {
    "text": "cncf foundation",
    "start": "31039",
    "end": "32640"
  },
  {
    "text": "today available as a sandbox project",
    "start": "32640",
    "end": "35280"
  },
  {
    "text": "which means that",
    "start": "35280",
    "end": "36079"
  },
  {
    "text": "kuma can be used with the same openness",
    "start": "36079",
    "end": "39280"
  },
  {
    "text": "the same neutrality the same governance",
    "start": "39280",
    "end": "41920"
  },
  {
    "text": "as",
    "start": "41920",
    "end": "42320"
  },
  {
    "text": "any other cncf project",
    "start": "42320",
    "end": "45520"
  },
  {
    "text": "when we first looked at creating a",
    "start": "45520",
    "end": "49200"
  },
  {
    "text": "service mesh integration for our",
    "start": "49200",
    "end": "51199"
  },
  {
    "text": "enterprise customers at cong",
    "start": "51199",
    "end": "53520"
  },
  {
    "text": "we didn't want to build queue we really",
    "start": "53520",
    "end": "56480"
  },
  {
    "text": "wanted to leverage existing service",
    "start": "56480",
    "end": "59120"
  },
  {
    "text": "meshes out there",
    "start": "59120",
    "end": "60559"
  },
  {
    "text": "that were available in the industry so",
    "start": "60559",
    "end": "62800"
  },
  {
    "text": "that we could package those service",
    "start": "62800",
    "end": "64640"
  },
  {
    "text": "meshes",
    "start": "64640",
    "end": "65360"
  },
  {
    "text": "into a solution that we could ship to",
    "start": "65360",
    "end": "68000"
  },
  {
    "text": "our users",
    "start": "68000",
    "end": "69360"
  },
  {
    "text": "and and none of the service meshes out",
    "start": "69360",
    "end": "72240"
  },
  {
    "text": "there worked for us and",
    "start": "72240",
    "end": "73439"
  },
  {
    "text": "let me tell you why we wanted something",
    "start": "73439",
    "end": "76560"
  },
  {
    "text": "that was easy to use that was simple to",
    "start": "76560",
    "end": "78320"
  },
  {
    "text": "deploy",
    "start": "78320",
    "end": "78960"
  },
  {
    "text": "simple to scale but for many users",
    "start": "78960",
    "end": "81280"
  },
  {
    "text": "service mesh has been a very complicated",
    "start": "81280",
    "end": "83920"
  },
  {
    "text": "technology to deploy and to use at scale",
    "start": "83920",
    "end": "86799"
  },
  {
    "text": "in production",
    "start": "86799",
    "end": "87759"
  },
  {
    "text": "we needed something that would support",
    "start": "87759",
    "end": "89920"
  },
  {
    "text": "not just kubernetes deployments but",
    "start": "89920",
    "end": "91840"
  },
  {
    "text": "could also support",
    "start": "91840",
    "end": "93040"
  },
  {
    "text": "virtual machines or support other",
    "start": "93040",
    "end": "95280"
  },
  {
    "text": "containerized environments that were not",
    "start": "95280",
    "end": "97119"
  },
  {
    "text": "kubernetes for example",
    "start": "97119",
    "end": "98560"
  },
  {
    "text": "aws fargate or ecs and um",
    "start": "98560",
    "end": "102159"
  },
  {
    "text": "and none of the service meshes out there",
    "start": "102159",
    "end": "104079"
  },
  {
    "text": "allowed us to do that",
    "start": "104079",
    "end": "105520"
  },
  {
    "text": "we needed something that would allow us",
    "start": "105520",
    "end": "107439"
  },
  {
    "text": "to support",
    "start": "107439",
    "end": "108640"
  },
  {
    "text": "multiple uh zones in a distributed",
    "start": "108640",
    "end": "112000"
  },
  {
    "text": "service mesh",
    "start": "112000",
    "end": "112799"
  },
  {
    "text": "across multiple clouds multiple clusters",
    "start": "112799",
    "end": "115680"
  },
  {
    "text": "across a hybrid of vms and kubernetes",
    "start": "115680",
    "end": "118479"
  },
  {
    "text": "and no service mesh was allowing us to",
    "start": "118479",
    "end": "121040"
  },
  {
    "text": "do that",
    "start": "121040",
    "end": "121680"
  },
  {
    "text": "so we decided to build cuba we built",
    "start": "121680",
    "end": "123759"
  },
  {
    "text": "kuma and we have donated kuma",
    "start": "123759",
    "end": "125840"
  },
  {
    "text": "making it the first based service mesh",
    "start": "125840",
    "end": "128160"
  },
  {
    "text": "to ever be donated and accepted",
    "start": "128160",
    "end": "130160"
  },
  {
    "text": "into into the foundation cuma it is",
    "start": "130160",
    "end": "133120"
  },
  {
    "text": "built on top of envoy we're strong",
    "start": "133120",
    "end": "134879"
  },
  {
    "text": "believers of envoy",
    "start": "134879",
    "end": "136080"
  },
  {
    "text": "as a networking technology for our data",
    "start": "136080",
    "end": "138959"
  },
  {
    "text": "plane proxies and because of the very",
    "start": "138959",
    "end": "141040"
  },
  {
    "text": "unique set of features that qm has built",
    "start": "141040",
    "end": "143440"
  },
  {
    "text": "over the past years we are looking at",
    "start": "143440",
    "end": "147040"
  },
  {
    "text": "an incredible growth in the community",
    "start": "147040",
    "end": "149200"
  },
  {
    "text": "when it comes to community adoption as",
    "start": "149200",
    "end": "150879"
  },
  {
    "text": "well",
    "start": "150879",
    "end": "151280"
  },
  {
    "text": "as mission critical enterprise adoption",
    "start": "151280",
    "end": "154160"
  },
  {
    "text": "in mission critical use cases",
    "start": "154160",
    "end": "156239"
  },
  {
    "text": "where kuma it is being used today to",
    "start": "156239",
    "end": "158720"
  },
  {
    "text": "support a service mesh for the entire",
    "start": "158720",
    "end": "161040"
  },
  {
    "text": "organization kuma it is",
    "start": "161040",
    "end": "164319"
  },
  {
    "text": "something that has been designed for the",
    "start": "164319",
    "end": "166640"
  },
  {
    "text": "enterprise architect",
    "start": "166640",
    "end": "168080"
  },
  {
    "text": "we want to make sure that as the",
    "start": "168080",
    "end": "169680"
  },
  {
    "text": "application teams are building more and",
    "start": "169680",
    "end": "171120"
  },
  {
    "text": "more services more and more applications",
    "start": "171120",
    "end": "173360"
  },
  {
    "text": "they do not manage the network that",
    "start": "173360",
    "end": "175120"
  },
  {
    "text": "comes as part of the infrastructure",
    "start": "175120",
    "end": "177040"
  },
  {
    "text": "and so today kuma it is being used by",
    "start": "177040",
    "end": "180239"
  },
  {
    "text": "central teams architecture teams to",
    "start": "180239",
    "end": "182840"
  },
  {
    "text": "provide under",
    "start": "182840",
    "end": "184720"
  },
  {
    "text": "the uh under the hood connectivity via a",
    "start": "184720",
    "end": "187280"
  },
  {
    "text": "service mesh",
    "start": "187280",
    "end": "188080"
  },
  {
    "text": "across any environment any cloud any",
    "start": "188080",
    "end": "191200"
  },
  {
    "text": "architecture that the application teams",
    "start": "191200",
    "end": "193280"
  },
  {
    "text": "are using for their applications",
    "start": "193280",
    "end": "195680"
  },
  {
    "start": "195000",
    "end": "247000"
  },
  {
    "text": "so qma primarily has been used for you",
    "start": "195680",
    "end": "197920"
  },
  {
    "text": "know for many different use cases but we",
    "start": "197920",
    "end": "199519"
  },
  {
    "text": "can sum them up",
    "start": "199519",
    "end": "200400"
  },
  {
    "text": "in the following ones so has been",
    "start": "200400",
    "end": "202080"
  },
  {
    "text": "used to enable",
    "start": "202080",
    "end": "203440"
  },
  {
    "text": "service connectivity across all the",
    "start": "203440",
    "end": "205200"
  },
  {
    "text": "services that we're building",
    "start": "205200",
    "end": "206560"
  },
  {
    "text": "to discover the services and make sure",
    "start": "206560",
    "end": "208400"
  },
  {
    "text": "that the traffic among them is reliable",
    "start": "208400",
    "end": "210560"
  },
  {
    "text": "it has been used for one click zero",
    "start": "210560",
    "end": "212400"
  },
  {
    "text": "trust security model enablement",
    "start": "212400",
    "end": "214319"
  },
  {
    "text": "in order to be able to create security",
    "start": "214319",
    "end": "217040"
  },
  {
    "text": "um",
    "start": "217040",
    "end": "218080"
  },
  {
    "text": "uh enhanced security across all the",
    "start": "218080",
    "end": "219920"
  },
  {
    "text": "workloads as well as being able to",
    "start": "219920",
    "end": "221280"
  },
  {
    "text": "rotate",
    "start": "221280",
    "end": "221760"
  },
  {
    "text": "the data plan proxy certificates in an",
    "start": "221760",
    "end": "223680"
  },
  {
    "text": "automated way",
    "start": "223680",
    "end": "224799"
  },
  {
    "text": "and then of course the more services we",
    "start": "224799",
    "end": "226319"
  },
  {
    "text": "have the more traffic we have",
    "start": "226319",
    "end": "228080"
  },
  {
    "text": "the bigger is the requirement for strong",
    "start": "228080",
    "end": "230159"
  },
  {
    "text": "observability",
    "start": "230159",
    "end": "231200"
  },
  {
    "text": "and so is being used today to",
    "start": "231200",
    "end": "233599"
  },
  {
    "text": "capture those traces those logs those",
    "start": "233599",
    "end": "235599"
  },
  {
    "text": "metrics",
    "start": "235599",
    "end": "236480"
  },
  {
    "text": "and and either visualize them on zipkin",
    "start": "236480",
    "end": "239120"
  },
  {
    "text": "or jager or splunk or logstash",
    "start": "239120",
    "end": "241519"
  },
  {
    "text": "or via the out of the box dashboards",
    "start": "241519",
    "end": "244720"
  },
  {
    "text": "on grafana that the project provides",
    "start": "244720",
    "end": "248080"
  },
  {
    "start": "247000",
    "end": "266000"
  },
  {
    "text": "and from a ten thousand feet standpoint",
    "start": "248080",
    "end": "250319"
  },
  {
    "text": "kuma is a control plane that implements",
    "start": "250319",
    "end": "252560"
  },
  {
    "text": "the xds api it can run on kubernetes and",
    "start": "252560",
    "end": "254879"
  },
  {
    "text": "vms it can run in a single and",
    "start": "254879",
    "end": "256560"
  },
  {
    "text": "multi-zone capacity it is built for the",
    "start": "256560",
    "end": "258639"
  },
  {
    "text": "enterprise architect that must",
    "start": "258639",
    "end": "260400"
  },
  {
    "text": "support the entire organization and",
    "start": "260400",
    "end": "262479"
  },
  {
    "text": "because it's part of cncf",
    "start": "262479",
    "end": "264080"
  },
  {
    "text": "it is a vendor neutral technology",
    "start": "264080",
    "end": "267120"
  },
  {
    "start": "266000",
    "end": "311000"
  },
  {
    "text": "kuma provides a very unique set of",
    "start": "267120",
    "end": "269120"
  },
  {
    "text": "features uh that we've built",
    "start": "269120",
    "end": "270880"
  },
  {
    "text": "because we couldn't find them elsewhere",
    "start": "270880",
    "end": "272880"
  },
  {
    "text": "and so qma supports",
    "start": "272880",
    "end": "274400"
  },
  {
    "text": "a multiple multiple virtual meshes",
    "start": "274400",
    "end": "276720"
  },
  {
    "text": "multi-tenancy",
    "start": "276720",
    "end": "278000"
  },
  {
    "text": "for each team or each application that",
    "start": "278000",
    "end": "279919"
  },
  {
    "text": "we want to support",
    "start": "279919",
    "end": "281199"
  },
  {
    "text": "in order to reduce the team coordination",
    "start": "281199",
    "end": "283199"
  },
  {
    "text": "as well as improve the",
    "start": "283199",
    "end": "284120"
  },
  {
    "text": "compartmentalization of our service",
    "start": "284120",
    "end": "285840"
  },
  {
    "text": "mentions",
    "start": "285840",
    "end": "286400"
  },
  {
    "text": "so we can deploy comma once and create",
    "start": "286400",
    "end": "288160"
  },
  {
    "text": "as many meshes as we want",
    "start": "288160",
    "end": "289440"
  },
  {
    "text": "as opposed as opposed to creating one",
    "start": "289440",
    "end": "291600"
  },
  {
    "text": "service mesh",
    "start": "291600",
    "end": "292720"
  },
  {
    "text": "per application or per team it is",
    "start": "292720",
    "end": "295759"
  },
  {
    "text": "universal it runs on kubernetes in the",
    "start": "295759",
    "end": "297759"
  },
  {
    "text": "ends it supports custom attributes that",
    "start": "297759",
    "end": "299600"
  },
  {
    "text": "we can use for our policies",
    "start": "299600",
    "end": "301280"
  },
  {
    "text": "for example to keep traffic within a",
    "start": "301280",
    "end": "303120"
  },
  {
    "text": "country and it supports the best",
    "start": "303120",
    "end": "305680"
  },
  {
    "text": "built-in multi-zone connectivity that",
    "start": "305680",
    "end": "307759"
  },
  {
    "text": "we're going to be seeing",
    "start": "307759",
    "end": "308880"
  },
  {
    "text": "seeing live in a demo today when it",
    "start": "308880",
    "end": "312000"
  },
  {
    "start": "311000",
    "end": "329000"
  },
  {
    "text": "comes to",
    "start": "312000",
    "end": "312720"
  },
  {
    "text": "service mesh in general service mesh is",
    "start": "312720",
    "end": "314880"
  },
  {
    "text": "important because it centralizes how we",
    "start": "314880",
    "end": "316720"
  },
  {
    "text": "manage connectivity which is going to be",
    "start": "316720",
    "end": "318160"
  },
  {
    "text": "one of the most important things we need",
    "start": "318160",
    "end": "319520"
  },
  {
    "text": "to manage as we get more distributed and",
    "start": "319520",
    "end": "321280"
  },
  {
    "text": "more decoupled",
    "start": "321280",
    "end": "322320"
  },
  {
    "text": "but it also makes the application things",
    "start": "322320",
    "end": "324080"
  },
  {
    "text": "more efficient because they don't have",
    "start": "324080",
    "end": "325600"
  },
  {
    "text": "to reinvent and rebuild",
    "start": "325600",
    "end": "327039"
  },
  {
    "text": "all the things that the service mesh",
    "start": "327039",
    "end": "328240"
  },
  {
    "text": "provides uh as well as it's built on top",
    "start": "328240",
    "end": "330800"
  },
  {
    "start": "329000",
    "end": "337000"
  },
  {
    "text": "of envoy and we are strong believers of",
    "start": "330800",
    "end": "332800"
  },
  {
    "text": "envoy like i said we can leverage",
    "start": "332800",
    "end": "334800"
  },
  {
    "text": "all the envoy functionality inside of",
    "start": "334800",
    "end": "337199"
  },
  {
    "start": "337000",
    "end": "347000"
  },
  {
    "text": "human",
    "start": "337199",
    "end": "338160"
  },
  {
    "text": "we can implement zero trust security in",
    "start": "338160",
    "end": "340320"
  },
  {
    "text": "one click",
    "start": "340320",
    "end": "341360"
  },
  {
    "text": "by using the mutual tls and traffic",
    "start": "341360",
    "end": "344479"
  },
  {
    "text": "permission policies that kuma offers out",
    "start": "344479",
    "end": "346400"
  },
  {
    "text": "of the box",
    "start": "346400",
    "end": "347039"
  },
  {
    "text": "as well as like i said we can integrate",
    "start": "347039",
    "end": "349520"
  },
  {
    "text": "cuma with any sorts of observability",
    "start": "349520",
    "end": "351840"
  },
  {
    "text": "tooling we may be using today",
    "start": "351840",
    "end": "353520"
  },
  {
    "text": "as well as using what cuba provides out",
    "start": "353520",
    "end": "355280"
  },
  {
    "text": "of the box",
    "start": "355280",
    "end": "357199"
  },
  {
    "start": "357000",
    "end": "382000"
  },
  {
    "text": "now of course as one of the biggest",
    "start": "357199",
    "end": "359120"
  },
  {
    "text": "reasons for using a service mesh",
    "start": "359120",
    "end": "360720"
  },
  {
    "text": "it's also to make sure we can implement",
    "start": "360720",
    "end": "362720"
  },
  {
    "text": "the blue green deployments and canary",
    "start": "362720",
    "end": "364319"
  },
  {
    "text": "releases",
    "start": "364319",
    "end": "364960"
  },
  {
    "text": "and you know traffic shifting across",
    "start": "364960",
    "end": "366960"
  },
  {
    "text": "different data centers",
    "start": "366960",
    "end": "368319"
  },
  {
    "text": "and qma can do it can do all of it with",
    "start": "368319",
    "end": "370960"
  },
  {
    "text": "the routing capabilities that it",
    "start": "370960",
    "end": "372479"
  },
  {
    "text": "provides",
    "start": "372479",
    "end": "373039"
  },
  {
    "text": "and in the demo today we're going to be",
    "start": "373039",
    "end": "375280"
  },
  {
    "text": "seeing it live across multiple clouds",
    "start": "375280",
    "end": "377440"
  },
  {
    "text": "multiple regions",
    "start": "377440",
    "end": "378639"
  },
  {
    "text": "across vms and containers simultaneously",
    "start": "378639",
    "end": "382960"
  },
  {
    "start": "382000",
    "end": "457000"
  },
  {
    "text": "when it comes to uh deploying qma there",
    "start": "382960",
    "end": "386080"
  },
  {
    "text": "is",
    "start": "386080",
    "end": "386479"
  },
  {
    "text": "two different ways we can run the",
    "start": "386479",
    "end": "388400"
  },
  {
    "text": "project we can run it in a single zone",
    "start": "388400",
    "end": "390319"
  },
  {
    "text": "or standalone mode or we can run it in a",
    "start": "390319",
    "end": "392240"
  },
  {
    "text": "multi-zone mode",
    "start": "392240",
    "end": "393440"
  },
  {
    "text": "multi-zone really it is what makes qma",
    "start": "393440",
    "end": "395440"
  },
  {
    "text": "very um",
    "start": "395440",
    "end": "396639"
  },
  {
    "text": "interesting uh in in an enterprise",
    "start": "396639",
    "end": "398960"
  },
  {
    "text": "organization",
    "start": "398960",
    "end": "399759"
  },
  {
    "text": "so when running a service mesh across",
    "start": "399759",
    "end": "402160"
  },
  {
    "text": "multiple zones multiple platforms",
    "start": "402160",
    "end": "404080"
  },
  {
    "text": "multiple clouds",
    "start": "404080",
    "end": "405120"
  },
  {
    "text": "multiple clusters there's two main",
    "start": "405120",
    "end": "407199"
  },
  {
    "text": "challenges we have to solve",
    "start": "407199",
    "end": "408639"
  },
  {
    "text": "propagating the service mesh policies",
    "start": "408639",
    "end": "410319"
  },
  {
    "text": "across each zone as well as enabling",
    "start": "410319",
    "end": "412240"
  },
  {
    "text": "cross zone connectivity",
    "start": "412240",
    "end": "414000"
  },
  {
    "text": "uh from one zone to another and kuma",
    "start": "414000",
    "end": "416880"
  },
  {
    "text": "automates both of these problems by",
    "start": "416880",
    "end": "418639"
  },
  {
    "text": "providing a global control plane",
    "start": "418639",
    "end": "420479"
  },
  {
    "text": "and remote control plane separation to",
    "start": "420479",
    "end": "422720"
  },
  {
    "text": "automatically synchronize the policies",
    "start": "422720",
    "end": "425120"
  },
  {
    "text": "uh the global control plane is the entry",
    "start": "425120",
    "end": "427520"
  },
  {
    "text": "point for setting all the service mesh",
    "start": "427520",
    "end": "429280"
  },
  {
    "text": "resources",
    "start": "429280",
    "end": "430160"
  },
  {
    "text": "and those resources will be",
    "start": "430160",
    "end": "431440"
  },
  {
    "text": "automatically propagated to the remote",
    "start": "431440",
    "end": "433440"
  },
  {
    "text": "ones",
    "start": "433440",
    "end": "434160"
  },
  {
    "text": "whereas we're going to be using the",
    "start": "434160",
    "end": "435520"
  },
  {
    "text": "built-in service discovery and the human",
    "start": "435520",
    "end": "437440"
  },
  {
    "text": "ingress that comes out of the box",
    "start": "437440",
    "end": "438880"
  },
  {
    "text": "to enable cross-zone connectivity from",
    "start": "438880",
    "end": "440800"
  },
  {
    "text": "one zone to another",
    "start": "440800",
    "end": "441919"
  },
  {
    "text": "even if one zone is vms and another zone",
    "start": "441919",
    "end": "444160"
  },
  {
    "text": "is kubernetes or one zone is in one",
    "start": "444160",
    "end": "446240"
  },
  {
    "text": "cloud one region and another zone is a",
    "start": "446240",
    "end": "448160"
  },
  {
    "text": "physical data center",
    "start": "448160",
    "end": "449680"
  },
  {
    "text": "kuma makes no assumptions as to where",
    "start": "449680",
    "end": "452240"
  },
  {
    "text": "we're running the service mesh with the",
    "start": "452240",
    "end": "453840"
  },
  {
    "text": "goal of supporting",
    "start": "453840",
    "end": "455039"
  },
  {
    "text": "every workload in the organization and",
    "start": "455039",
    "end": "457840"
  },
  {
    "start": "457000",
    "end": "471000"
  },
  {
    "text": "of course it provides a gui out of the",
    "start": "457840",
    "end": "459520"
  },
  {
    "text": "box it provides a cli out of the box an",
    "start": "459520",
    "end": "461759"
  },
  {
    "text": "api",
    "start": "461759",
    "end": "462319"
  },
  {
    "text": "out of the box and i'm very excited",
    "start": "462319",
    "end": "464639"
  },
  {
    "text": "about all the things that we're building",
    "start": "464639",
    "end": "466240"
  },
  {
    "text": "when it comes to improving how the users",
    "start": "466240",
    "end": "468639"
  },
  {
    "text": "are interacting with the service mesh",
    "start": "468639",
    "end": "472479"
  },
  {
    "text": "in cuma we deploy a service mesh and",
    "start": "472800",
    "end": "474720"
  },
  {
    "text": "then we can apply policies on top of our",
    "start": "474720",
    "end": "476560"
  },
  {
    "text": "workloads policies like traffic",
    "start": "476560",
    "end": "478000"
  },
  {
    "text": "route mutual tls permissions health",
    "start": "478000",
    "end": "479759"
  },
  {
    "text": "check circuit breakers and so on and so",
    "start": "479759",
    "end": "481440"
  },
  {
    "text": "forth",
    "start": "481440",
    "end": "482160"
  },
  {
    "start": "482000",
    "end": "518000"
  },
  {
    "text": "um as well as kuma it is being used",
    "start": "482160",
    "end": "484479"
  },
  {
    "text": "today to accelerate the transition to",
    "start": "484479",
    "end": "486560"
  },
  {
    "text": "kubernetes by",
    "start": "486560",
    "end": "488240"
  },
  {
    "text": "allowing to support simultaneously",
    "start": "488240",
    "end": "490479"
  },
  {
    "text": "virtual machine based zones with",
    "start": "490479",
    "end": "492240"
  },
  {
    "text": "kubernetes",
    "start": "492240",
    "end": "493039"
  },
  {
    "text": "zones and then determining with the",
    "start": "493039",
    "end": "494879"
  },
  {
    "text": "traffic routing rules how much traffic",
    "start": "494879",
    "end": "496879"
  },
  {
    "text": "should go to the vm based",
    "start": "496879",
    "end": "498319"
  },
  {
    "text": "version of a service as opposed to the",
    "start": "498319",
    "end": "500160"
  },
  {
    "text": "container based version of a service",
    "start": "500160",
    "end": "503280"
  },
  {
    "text": "including environments like aws",
    "start": "503280",
    "end": "506400"
  },
  {
    "text": "fargate as well as ecs which typically",
    "start": "506400",
    "end": "509680"
  },
  {
    "text": "other service meshes do not support and",
    "start": "509680",
    "end": "511599"
  },
  {
    "text": "this is a function",
    "start": "511599",
    "end": "512800"
  },
  {
    "text": "of the uni the the universality that",
    "start": "512800",
    "end": "515680"
  },
  {
    "text": "we've built",
    "start": "515680",
    "end": "516479"
  },
  {
    "text": "inside of the project and of course uh",
    "start": "516479",
    "end": "520000"
  },
  {
    "start": "518000",
    "end": "571000"
  },
  {
    "text": "it integrates",
    "start": "520000",
    "end": "521039"
  },
  {
    "text": "with existing gateway technologies uh",
    "start": "521039",
    "end": "523518"
  },
  {
    "text": "for example at the edge at the edge you",
    "start": "523519",
    "end": "525200"
  },
  {
    "text": "know service mesh is not applicable",
    "start": "525200",
    "end": "526959"
  },
  {
    "text": "if we want to enable our apis to be",
    "start": "526959",
    "end": "529760"
  },
  {
    "text": "consumed by a client",
    "start": "529760",
    "end": "531040"
  },
  {
    "text": "that we do not that's outside of the",
    "start": "531040",
    "end": "532880"
  },
  {
    "text": "organization because we cannot force a",
    "start": "532880",
    "end": "534640"
  },
  {
    "text": "cycle deployment to them",
    "start": "534640",
    "end": "536080"
  },
  {
    "text": "and we don't want their sidecar to talk",
    "start": "536080",
    "end": "537680"
  },
  {
    "text": "to our control plane and so we can",
    "start": "537680",
    "end": "539200"
  },
  {
    "text": "integrate with gateways",
    "start": "539200",
    "end": "540480"
  },
  {
    "text": "which can become the ingress and the",
    "start": "540480",
    "end": "542000"
  },
  {
    "text": "egress of the service mesh",
    "start": "542000",
    "end": "543680"
  },
  {
    "text": "and we have that native full stack",
    "start": "543680",
    "end": "545760"
  },
  {
    "text": "end-to-end integration built into the",
    "start": "545760",
    "end": "547440"
  },
  {
    "text": "product and so",
    "start": "547440",
    "end": "548399"
  },
  {
    "text": "in the product you can see gateway data",
    "start": "548399",
    "end": "550480"
  },
  {
    "text": "planes that can be assigned",
    "start": "550480",
    "end": "552240"
  },
  {
    "text": "in order to either support edge",
    "start": "552240",
    "end": "554640"
  },
  {
    "text": "requirements with an ecosystem of",
    "start": "554640",
    "end": "556160"
  },
  {
    "text": "partners or mobile apps as well as",
    "start": "556160",
    "end": "558160"
  },
  {
    "text": "inside of the organization",
    "start": "558160",
    "end": "559600"
  },
  {
    "text": "to enable different teams to talk to",
    "start": "559600",
    "end": "561200"
  },
  {
    "text": "each other via an abstraction layer",
    "start": "561200",
    "end": "563279"
  },
  {
    "text": "provided by a gateway",
    "start": "563279",
    "end": "564800"
  },
  {
    "text": "so let's not spend any more time talking",
    "start": "564800",
    "end": "566959"
  },
  {
    "text": "about all the things that kuma can do",
    "start": "566959",
    "end": "569200"
  },
  {
    "text": "let's watch them live in production",
    "start": "569200",
    "end": "573200"
  },
  {
    "text": "so i'm going to be pulling up my uh",
    "start": "573200",
    "end": "575760"
  },
  {
    "text": "infrastructure right now so i can show",
    "start": "575760",
    "end": "577360"
  },
  {
    "text": "you",
    "start": "577360",
    "end": "578080"
  },
  {
    "text": "uh what what kuma can do so first and",
    "start": "578080",
    "end": "580640"
  },
  {
    "text": "foremost i am running kuma",
    "start": "580640",
    "end": "582720"
  },
  {
    "text": "right now in a multi-zone deployment",
    "start": "582720",
    "end": "585279"
  },
  {
    "text": "that spans across",
    "start": "585279",
    "end": "586399"
  },
  {
    "text": "both ec2 and virtual machines as well as",
    "start": "586399",
    "end": "589040"
  },
  {
    "text": "kubernetes clusters on gcp on gk",
    "start": "589040",
    "end": "591920"
  },
  {
    "text": "so we're going to be seeing here that on",
    "start": "591920",
    "end": "593839"
  },
  {
    "text": "gke we have cuba east",
    "start": "593839",
    "end": "595600"
  },
  {
    "text": "kuma west these are my east and west uh",
    "start": "595600",
    "end": "598480"
  },
  {
    "text": "zones",
    "start": "598480",
    "end": "599120"
  },
  {
    "text": "on gke as well as there is a global zone",
    "start": "599120",
    "end": "601760"
  },
  {
    "text": "for our global control plane",
    "start": "601760",
    "end": "603440"
  },
  {
    "text": "and then we do also have the remote",
    "start": "603440",
    "end": "605120"
  },
  {
    "text": "control plane and the ingress being",
    "start": "605120",
    "end": "606560"
  },
  {
    "text": "deployed as a virtual machine on ec2",
    "start": "606560",
    "end": "609519"
  },
  {
    "text": "now in order to show you this demo i",
    "start": "609519",
    "end": "611760"
  },
  {
    "text": "have built a very simple application",
    "start": "611760",
    "end": "613839"
  },
  {
    "text": "that basically integrates uh shows a",
    "start": "613839",
    "end": "617200"
  },
  {
    "text": "front end that allows us to",
    "start": "617200",
    "end": "618959"
  },
  {
    "text": "increment a counter on ratings and so uh",
    "start": "618959",
    "end": "621760"
  },
  {
    "start": "621000",
    "end": "645000"
  },
  {
    "text": "i was loading",
    "start": "621760",
    "end": "622880"
  },
  {
    "text": "my applications from ec2 and um as you",
    "start": "622880",
    "end": "625839"
  },
  {
    "text": "can see",
    "start": "625839",
    "end": "626399"
  },
  {
    "text": "if i press the increment button it will",
    "start": "626399",
    "end": "628640"
  },
  {
    "text": "increment the counter",
    "start": "628640",
    "end": "630399"
  },
  {
    "text": "in in a specific zone and so this is the",
    "start": "630399",
    "end": "633120"
  },
  {
    "text": "zone",
    "start": "633120",
    "end": "633839"
  },
  {
    "text": "where redis lives and so different radis",
    "start": "633839",
    "end": "637040"
  },
  {
    "text": "instances in different zones may end up",
    "start": "637040",
    "end": "639360"
  },
  {
    "text": "having different counters depending on",
    "start": "639360",
    "end": "640959"
  },
  {
    "text": "how often",
    "start": "640959",
    "end": "641680"
  },
  {
    "text": "we increment that counter um you know i",
    "start": "641680",
    "end": "644480"
  },
  {
    "text": "can generate some traffic here if i want",
    "start": "644480",
    "end": "646560"
  },
  {
    "start": "645000",
    "end": "699000"
  },
  {
    "text": "but most importantly let's go to the",
    "start": "646560",
    "end": "648240"
  },
  {
    "text": "global control plane",
    "start": "648240",
    "end": "649600"
  },
  {
    "text": "and see uh what we have running live",
    "start": "649600",
    "end": "653200"
  },
  {
    "text": "into our mesh so first and foremost if",
    "start": "653200",
    "end": "656240"
  },
  {
    "text": "we",
    "start": "656240",
    "end": "656720"
  },
  {
    "text": "explore the namespaces that we have",
    "start": "656720",
    "end": "659440"
  },
  {
    "text": "running we see that there is akuma",
    "start": "659440",
    "end": "660640"
  },
  {
    "text": "system namespace",
    "start": "660640",
    "end": "661920"
  },
  {
    "text": "and if i look into the uh into the pods",
    "start": "661920",
    "end": "665360"
  },
  {
    "text": "of this kuma system namespace uh we see",
    "start": "665360",
    "end": "668000"
  },
  {
    "text": "that there is one common control plane",
    "start": "668000",
    "end": "670240"
  },
  {
    "text": "uh pod uh and a service really that we",
    "start": "670240",
    "end": "673440"
  },
  {
    "text": "can then access",
    "start": "673440",
    "end": "674480"
  },
  {
    "text": "so i'm going to be port forwarding the",
    "start": "674480",
    "end": "676079"
  },
  {
    "text": "kuma control plane",
    "start": "676079",
    "end": "679120"
  },
  {
    "text": "service from the qma system namespace so",
    "start": "679519",
    "end": "682480"
  },
  {
    "text": "we can access",
    "start": "682480",
    "end": "683440"
  },
  {
    "text": "it now the gui that i'm going to be",
    "start": "683440",
    "end": "685360"
  },
  {
    "text": "showing you it is built on top of the",
    "start": "685360",
    "end": "687200"
  },
  {
    "text": "same restful api that you can integrate",
    "start": "687200",
    "end": "689440"
  },
  {
    "text": "with your own automation so this is this",
    "start": "689440",
    "end": "691680"
  },
  {
    "text": "is the restful api",
    "start": "691680",
    "end": "692880"
  },
  {
    "text": "you know if i go on slash meshes i can",
    "start": "692880",
    "end": "694560"
  },
  {
    "text": "explore the meshes and",
    "start": "694560",
    "end": "696240"
  },
  {
    "text": "i can see the resources of the mesh but",
    "start": "696240",
    "end": "698640"
  },
  {
    "text": "if i go on slash gui",
    "start": "698640",
    "end": "700240"
  },
  {
    "start": "699000",
    "end": "781000"
  },
  {
    "text": "i can see the gui that's being presented",
    "start": "700240",
    "end": "702160"
  },
  {
    "text": "to me uh and it's built on top of the",
    "start": "702160",
    "end": "704160"
  },
  {
    "text": "api i just showed you",
    "start": "704160",
    "end": "705519"
  },
  {
    "text": "so this gui right now is showing us all",
    "start": "705519",
    "end": "708560"
  },
  {
    "text": "the resources that we have in the mesh",
    "start": "708560",
    "end": "710160"
  },
  {
    "text": "so we have two different zones",
    "start": "710160",
    "end": "711760"
  },
  {
    "text": "one it's on aws on virtual machines",
    "start": "711760",
    "end": "714079"
  },
  {
    "text": "another one it's on kubernetes east",
    "start": "714079",
    "end": "715839"
  },
  {
    "text": "another one it's on kubernetes west",
    "start": "715839",
    "end": "718000"
  },
  {
    "text": "and then we have a series of data planes",
    "start": "718000",
    "end": "719519"
  },
  {
    "text": "that we have running um",
    "start": "719519",
    "end": "721279"
  },
  {
    "text": "where we can see that there is a radius",
    "start": "721279",
    "end": "723120"
  },
  {
    "text": "running on aws the one that i've just",
    "start": "723120",
    "end": "725120"
  },
  {
    "text": "showed you",
    "start": "725120",
    "end": "725760"
  },
  {
    "text": "as well there is a demo app running on",
    "start": "725760",
    "end": "727120"
  },
  {
    "text": "nws on virtual machines",
    "start": "727120",
    "end": "728800"
  },
  {
    "text": "but we also have the demo app running on",
    "start": "728800",
    "end": "730560"
  },
  {
    "text": "gke east and we have",
    "start": "730560",
    "end": "732000"
  },
  {
    "text": "uh red is running on gk east and west",
    "start": "732000",
    "end": "734160"
  },
  {
    "text": "and so on",
    "start": "734160",
    "end": "735120"
  },
  {
    "text": "we also have the three ingresses that",
    "start": "735120",
    "end": "736880"
  },
  {
    "text": "allow us to enable",
    "start": "736880",
    "end": "739279"
  },
  {
    "text": "cross zone communication",
    "start": "739279",
    "end": "742399"
  },
  {
    "text": "out of the box and we have one for each",
    "start": "742399",
    "end": "744320"
  },
  {
    "text": "zone for aws",
    "start": "744320",
    "end": "745600"
  },
  {
    "text": "for gke st and for gke west you know",
    "start": "745600",
    "end": "748000"
  },
  {
    "text": "when it comes to queue",
    "start": "748000",
    "end": "748800"
  },
  {
    "text": "itself we can go on cumulative we can go",
    "start": "748800",
    "end": "750800"
  },
  {
    "text": "on slash install",
    "start": "750800",
    "end": "751920"
  },
  {
    "text": "and we can see all the different",
    "start": "751920",
    "end": "753360"
  },
  {
    "text": "installation methods that we're",
    "start": "753360",
    "end": "754560"
  },
  {
    "text": "supporting",
    "start": "754560",
    "end": "755440"
  },
  {
    "text": "uh we are about to release qmo 1.0 and",
    "start": "755440",
    "end": "758079"
  },
  {
    "text": "we're also going to be introducing",
    "start": "758079",
    "end": "759519"
  },
  {
    "text": "support for windows",
    "start": "759519",
    "end": "760800"
  },
  {
    "text": "which is now being released in an alpha",
    "start": "760800",
    "end": "762480"
  },
  {
    "text": "version in android proxy",
    "start": "762480",
    "end": "765440"
  },
  {
    "text": "all right so let's go ahead and uh and",
    "start": "765440",
    "end": "767440"
  },
  {
    "text": "start using the mesh so right now the",
    "start": "767440",
    "end": "768959"
  },
  {
    "text": "mesh is not really doing anything",
    "start": "768959",
    "end": "770800"
  },
  {
    "text": "besides having one virtual mesh called",
    "start": "770800",
    "end": "772560"
  },
  {
    "text": "the default everything is being disabled",
    "start": "772560",
    "end": "774399"
  },
  {
    "text": "there is no resources",
    "start": "774399",
    "end": "775920"
  },
  {
    "text": "uh all i have is the data planes being",
    "start": "775920",
    "end": "778160"
  },
  {
    "text": "registered to it",
    "start": "778160",
    "end": "779200"
  },
  {
    "text": "but there is nothing really going on",
    "start": "779200",
    "end": "780639"
  },
  {
    "text": "here so let's go ahead and make this",
    "start": "780639",
    "end": "782800"
  },
  {
    "start": "781000",
    "end": "1154000"
  },
  {
    "text": "service mesh a little bit more",
    "start": "782800",
    "end": "784399"
  },
  {
    "text": "interesting so let's for example enable",
    "start": "784399",
    "end": "787360"
  },
  {
    "text": "zero trust security by implementing the",
    "start": "787360",
    "end": "789920"
  },
  {
    "text": "enabling the mutual kls policy",
    "start": "789920",
    "end": "792079"
  },
  {
    "text": "when it comes to mutual teles there is",
    "start": "792079",
    "end": "793600"
  },
  {
    "text": "different certificate authorities that",
    "start": "793600",
    "end": "795360"
  },
  {
    "text": "we can choose we can choose the built-in",
    "start": "795360",
    "end": "797040"
  },
  {
    "text": "certificate authority that will",
    "start": "797040",
    "end": "798720"
  },
  {
    "text": "automatically generate a ca for us we",
    "start": "798720",
    "end": "801040"
  },
  {
    "text": "can provide our own",
    "start": "801040",
    "end": "802240"
  },
  {
    "text": "root certificate and key in order to",
    "start": "802240",
    "end": "805200"
  },
  {
    "text": "apply these resources",
    "start": "805200",
    "end": "806639"
  },
  {
    "text": "uh it is very simple uh we can use on",
    "start": "806639",
    "end": "808720"
  },
  {
    "text": "kubernetes we can use cube cattle",
    "start": "808720",
    "end": "810720"
  },
  {
    "text": "to effectively uh update our default",
    "start": "810720",
    "end": "813200"
  },
  {
    "text": "mesh",
    "start": "813200",
    "end": "813760"
  },
  {
    "text": "to enable mutual tls with a a built-in",
    "start": "813760",
    "end": "817040"
  },
  {
    "text": "backend",
    "start": "817040",
    "end": "817839"
  },
  {
    "text": "that does a certificate rotation for our",
    "start": "817839",
    "end": "820240"
  },
  {
    "text": "data plane proxies every day",
    "start": "820240",
    "end": "822079"
  },
  {
    "text": "but if you were to be running these on",
    "start": "822079",
    "end": "824240"
  },
  {
    "text": "virtual machines",
    "start": "824240",
    "end": "825440"
  },
  {
    "text": "we could use a very similar yaml",
    "start": "825440",
    "end": "827120"
  },
  {
    "text": "declarative config but instead of cube",
    "start": "827120",
    "end": "829199"
  },
  {
    "text": "cattle we would be using cumacado",
    "start": "829199",
    "end": "831440"
  },
  {
    "text": "so this is truly a universal service",
    "start": "831440",
    "end": "833920"
  },
  {
    "text": "mesh that can support",
    "start": "833920",
    "end": "835360"
  },
  {
    "text": "all kinds of environments but because",
    "start": "835360",
    "end": "837920"
  },
  {
    "text": "we're running on kubernetes",
    "start": "837920",
    "end": "839519"
  },
  {
    "text": "i'm going to be using this policy",
    "start": "839519",
    "end": "843279"
  },
  {
    "text": "to change the state of my mesh so if i",
    "start": "843279",
    "end": "845600"
  },
  {
    "text": "go back to my",
    "start": "845600",
    "end": "847279"
  },
  {
    "text": "um if i go to my editor i am going to be",
    "start": "847279",
    "end": "850880"
  },
  {
    "text": "running",
    "start": "850880",
    "end": "851600"
  },
  {
    "text": "the command that we're going to be",
    "start": "851600",
    "end": "854000"
  },
  {
    "text": "executing",
    "start": "854000",
    "end": "854959"
  },
  {
    "text": "to that we're going to be executing",
    "start": "854959",
    "end": "859120"
  },
  {
    "text": "to uh change the state of our default",
    "start": "859120",
    "end": "862240"
  },
  {
    "text": "mesh by enabling mutual tls",
    "start": "862240",
    "end": "865040"
  },
  {
    "text": "and if i do this mutual tls will be now",
    "start": "865040",
    "end": "868000"
  },
  {
    "text": "enabled for every service in this mesh",
    "start": "868000",
    "end": "870480"
  },
  {
    "text": "and by default without having",
    "start": "870480",
    "end": "873600"
  },
  {
    "text": "a traffic permission which is another",
    "start": "873600",
    "end": "876240"
  },
  {
    "text": "policy we need to add",
    "start": "876240",
    "end": "878000"
  },
  {
    "text": "without having this our traffic will",
    "start": "878000",
    "end": "880160"
  },
  {
    "text": "stop working and i'll show you this",
    "start": "880160",
    "end": "882560"
  },
  {
    "text": "so if i go here and i open a new",
    "start": "882560",
    "end": "884399"
  },
  {
    "text": "terminal and i",
    "start": "884399",
    "end": "885760"
  },
  {
    "text": "apply i apply my",
    "start": "885760",
    "end": "889839"
  },
  {
    "text": "resource on kubernetes on the global",
    "start": "889839",
    "end": "892320"
  },
  {
    "text": "control plane",
    "start": "892320",
    "end": "893279"
  },
  {
    "text": "we can see that the traffic will stop",
    "start": "893279",
    "end": "895199"
  },
  {
    "text": "working and that is because we have",
    "start": "895199",
    "end": "897120"
  },
  {
    "text": "enabled zero trust security and we must",
    "start": "897120",
    "end": "899440"
  },
  {
    "text": "have an explicit traffic permission",
    "start": "899440",
    "end": "901680"
  },
  {
    "text": "to determine what services can consume",
    "start": "901680",
    "end": "904240"
  },
  {
    "text": "other services",
    "start": "904240",
    "end": "905519"
  },
  {
    "text": "and so the traffic permission is a",
    "start": "905519",
    "end": "907360"
  },
  {
    "text": "another resource that kuma provides",
    "start": "907360",
    "end": "909440"
  },
  {
    "text": "and it allows us to determine what",
    "start": "909440",
    "end": "910959"
  },
  {
    "text": "source of traffic you can consume what",
    "start": "910959",
    "end": "912639"
  },
  {
    "text": "destination as you can see here we can",
    "start": "912639",
    "end": "914399"
  },
  {
    "text": "use",
    "start": "914399",
    "end": "915120"
  },
  {
    "text": "attributes that are being associated to",
    "start": "915120",
    "end": "918000"
  },
  {
    "text": "every workload in qma and these",
    "start": "918000",
    "end": "920000"
  },
  {
    "text": "attributes are",
    "start": "920000",
    "end": "921279"
  },
  {
    "text": "attributes that we can customize",
    "start": "921279",
    "end": "924399"
  },
  {
    "text": "some of them are also being auto",
    "start": "924399",
    "end": "925680"
  },
  {
    "text": "generated but we can find them from the",
    "start": "925680",
    "end": "927519"
  },
  {
    "text": "gui or from the cli",
    "start": "927519",
    "end": "928880"
  },
  {
    "text": "or the api and we can see them here so",
    "start": "928880",
    "end": "931519"
  },
  {
    "text": "anyways by",
    "start": "931519",
    "end": "932320"
  },
  {
    "text": "enabling uh every service to consume",
    "start": "932320",
    "end": "934880"
  },
  {
    "text": "every other service",
    "start": "934880",
    "end": "935920"
  },
  {
    "text": "we are effectively re-enabling all the",
    "start": "935920",
    "end": "938160"
  },
  {
    "text": "traffic to flow again",
    "start": "938160",
    "end": "939759"
  },
  {
    "text": "now by default whenever we re-enable",
    "start": "939759",
    "end": "943040"
  },
  {
    "text": "this traffic",
    "start": "943040",
    "end": "944720"
  },
  {
    "text": "the traffic will go and flow",
    "start": "944720",
    "end": "948160"
  },
  {
    "text": "across every zone that we support which",
    "start": "948160",
    "end": "950720"
  },
  {
    "text": "means the kubernetes zones as well as",
    "start": "950720",
    "end": "952399"
  },
  {
    "text": "the amazon zone",
    "start": "952399",
    "end": "954000"
  },
  {
    "text": "we can limit that and change that",
    "start": "954000",
    "end": "955600"
  },
  {
    "text": "behavior by using a traffic routing rule",
    "start": "955600",
    "end": "958079"
  },
  {
    "text": "but if i do this now we can see that not",
    "start": "958079",
    "end": "960560"
  },
  {
    "text": "only the traffic is being resumed",
    "start": "960560",
    "end": "962399"
  },
  {
    "text": "but the traffic is also going to be",
    "start": "962399",
    "end": "963920"
  },
  {
    "text": "flowing from one zone to another",
    "start": "963920",
    "end": "966240"
  },
  {
    "text": "what you're looking at right now it's a",
    "start": "966240",
    "end": "968480"
  },
  {
    "text": "multi-zone deployment running on",
    "start": "968480",
    "end": "970160"
  },
  {
    "text": "multiple kubernetes clusters running on",
    "start": "970160",
    "end": "972399"
  },
  {
    "text": "virtual machines on different clouds in",
    "start": "972399",
    "end": "974880"
  },
  {
    "text": "different world regions",
    "start": "974880",
    "end": "976560"
  },
  {
    "text": "with zero trust security enabled with",
    "start": "976560",
    "end": "978480"
  },
  {
    "text": "traffic permission acl enabled",
    "start": "978480",
    "end": "980320"
  },
  {
    "text": "and the traffic is flowing from one zone",
    "start": "980320",
    "end": "982480"
  },
  {
    "text": "to another",
    "start": "982480",
    "end": "983440"
  },
  {
    "text": "out of the box automatically discovered",
    "start": "983440",
    "end": "985759"
  },
  {
    "text": "automatically secured",
    "start": "985759",
    "end": "987120"
  },
  {
    "text": "of course the counter is going to be",
    "start": "987120",
    "end": "988399"
  },
  {
    "text": "different depending on what",
    "start": "988399",
    "end": "990320"
  },
  {
    "text": "radius instance in what in in you know",
    "start": "990320",
    "end": "993199"
  },
  {
    "text": "where we're hitting",
    "start": "993199",
    "end": "994399"
  },
  {
    "text": "in in the specific zone that's being",
    "start": "994399",
    "end": "996880"
  },
  {
    "text": "visualized down here",
    "start": "996880",
    "end": "998880"
  },
  {
    "text": "but now let's say that we want to change",
    "start": "998880",
    "end": "1000240"
  },
  {
    "text": "this we want to force traffic to go",
    "start": "1000240",
    "end": "1002800"
  },
  {
    "text": "to specific zones that would be very",
    "start": "1002800",
    "end": "1006240"
  },
  {
    "text": "easy to do by",
    "start": "1006240",
    "end": "1007279"
  },
  {
    "text": "using the traffic routing policy which",
    "start": "1007279",
    "end": "1009680"
  },
  {
    "text": "allows us to determine how we want the",
    "start": "1009680",
    "end": "1011360"
  },
  {
    "text": "traffic to flow",
    "start": "1011360",
    "end": "1012399"
  },
  {
    "text": "from from one zone to another and so i'm",
    "start": "1012399",
    "end": "1015120"
  },
  {
    "text": "going to be pulling up my",
    "start": "1015120",
    "end": "1017759"
  },
  {
    "text": "editor again and we can determine for",
    "start": "1017759",
    "end": "1020560"
  },
  {
    "text": "example that",
    "start": "1020560",
    "end": "1021600"
  },
  {
    "text": "we can use the attributes again so we",
    "start": "1021600",
    "end": "1023680"
  },
  {
    "text": "can say that",
    "start": "1023680",
    "end": "1024640"
  },
  {
    "text": "i want all traffic from this service",
    "start": "1024640",
    "end": "1027839"
  },
  {
    "text": "generated by this service going to this",
    "start": "1027839",
    "end": "1030400"
  },
  {
    "text": "other service so all the traffic",
    "start": "1030400",
    "end": "1032000"
  },
  {
    "text": "generated by the",
    "start": "1032000",
    "end": "1032959"
  },
  {
    "text": "demo app going to redis to go",
    "start": "1032959",
    "end": "1036079"
  },
  {
    "text": "you know all of it all of it to go to",
    "start": "1036079",
    "end": "1040000"
  },
  {
    "text": "redis in a specific zone so let's say",
    "start": "1040000",
    "end": "1042240"
  },
  {
    "text": "that we want",
    "start": "1042240",
    "end": "1043520"
  },
  {
    "text": "this zone to be oh we want all the",
    "start": "1043520",
    "end": "1046240"
  },
  {
    "text": "traffic to go to gk east",
    "start": "1046240",
    "end": "1048160"
  },
  {
    "text": "for example so we can create this",
    "start": "1048160",
    "end": "1050080"
  },
  {
    "text": "traffic routing rule we can",
    "start": "1050080",
    "end": "1053679"
  },
  {
    "text": "we can apply it on kubernetes but i'm",
    "start": "1053679",
    "end": "1056640"
  },
  {
    "text": "going to be doing this next to my app so",
    "start": "1056640",
    "end": "1058400"
  },
  {
    "text": "we can see what happens",
    "start": "1058400",
    "end": "1059840"
  },
  {
    "text": "i'm now applying like i've done before",
    "start": "1059840",
    "end": "1062400"
  },
  {
    "text": "i'm applying this resource on the global",
    "start": "1062400",
    "end": "1064160"
  },
  {
    "text": "control plane",
    "start": "1064160",
    "end": "1064960"
  },
  {
    "text": "the global control plane is now",
    "start": "1064960",
    "end": "1066400"
  },
  {
    "text": "automatically synchronizing this",
    "start": "1066400",
    "end": "1067919"
  },
  {
    "text": "resource across all the remotes",
    "start": "1067919",
    "end": "1069760"
  },
  {
    "text": "so that we can put this uh new effect",
    "start": "1069760",
    "end": "1072960"
  },
  {
    "text": "new new uh change into effect and so if",
    "start": "1072960",
    "end": "1075840"
  },
  {
    "text": "i do this",
    "start": "1075840",
    "end": "1076720"
  },
  {
    "text": "we can see how the traffic is now gonna",
    "start": "1076720",
    "end": "1078400"
  },
  {
    "text": "be forced into gk",
    "start": "1078400",
    "end": "1079919"
  },
  {
    "text": "east but let's say that i want a little",
    "start": "1079919",
    "end": "1081840"
  },
  {
    "text": "bit of amazon a little bit of gcp",
    "start": "1081840",
    "end": "1083760"
  },
  {
    "text": "that's great um i can i can go back to",
    "start": "1083760",
    "end": "1086080"
  },
  {
    "text": "my",
    "start": "1086080",
    "end": "1087200"
  },
  {
    "text": "i can go back to my configuration i can",
    "start": "1087200",
    "end": "1089440"
  },
  {
    "text": "add",
    "start": "1089440",
    "end": "1091200"
  },
  {
    "text": "another um i can split the weight uh",
    "start": "1091200",
    "end": "1095679"
  },
  {
    "text": "in the following way and uh i can say",
    "start": "1095679",
    "end": "1098240"
  },
  {
    "text": "that a little bit of traffic goes on aws",
    "start": "1098240",
    "end": "1101280"
  },
  {
    "text": "and a little bit of traffic goes on gcp",
    "start": "1101280",
    "end": "1104559"
  },
  {
    "text": "so right now we can see that",
    "start": "1104559",
    "end": "1106640"
  },
  {
    "text": "approximately half of it will go in aws",
    "start": "1106640",
    "end": "1108720"
  },
  {
    "text": "and half of it will go on gk east i can",
    "start": "1108720",
    "end": "1111679"
  },
  {
    "text": "update my resource",
    "start": "1111679",
    "end": "1113120"
  },
  {
    "text": "we can pull up our application again and",
    "start": "1113120",
    "end": "1115919"
  },
  {
    "text": "if i do this",
    "start": "1115919",
    "end": "1117440"
  },
  {
    "text": "we're going to be seeing the traffic",
    "start": "1117440",
    "end": "1119120"
  },
  {
    "text": "going a little bit on the amps a little",
    "start": "1119120",
    "end": "1120720"
  },
  {
    "text": "bit on",
    "start": "1120720",
    "end": "1121280"
  },
  {
    "text": "containers a little bit on one cloud a",
    "start": "1121280",
    "end": "1123600"
  },
  {
    "text": "little bit on another cloud",
    "start": "1123600",
    "end": "1125280"
  },
  {
    "text": "it's that easy to run a distributed",
    "start": "1125280",
    "end": "1127520"
  },
  {
    "text": "multi-cloud",
    "start": "1127520",
    "end": "1128400"
  },
  {
    "text": "multi-cluster service mesh with cuma",
    "start": "1128400",
    "end": "1132880"
  },
  {
    "text": "now um you know obviously this is a very",
    "start": "1132880",
    "end": "1135520"
  },
  {
    "text": "simple demo that demonstrates zero trial",
    "start": "1135520",
    "end": "1137280"
  },
  {
    "text": "security demonstrates our traffic",
    "start": "1137280",
    "end": "1138799"
  },
  {
    "text": "permissions but there's a lot more to it",
    "start": "1138799",
    "end": "1140720"
  },
  {
    "text": "and uh you can",
    "start": "1140720",
    "end": "1142000"
  },
  {
    "text": "explore the policies that we have here",
    "start": "1142000",
    "end": "1144080"
  },
  {
    "text": "as well as you can use any filter that",
    "start": "1144080",
    "end": "1145840"
  },
  {
    "text": "amway provides with the proxy template",
    "start": "1145840",
    "end": "1147600"
  },
  {
    "text": "policy as well as you can see the",
    "start": "1147600",
    "end": "1148960"
  },
  {
    "text": "metrics the traces",
    "start": "1148960",
    "end": "1150080"
  },
  {
    "text": "and so on and so forth",
    "start": "1150080",
    "end": "1153279"
  },
  {
    "start": "1154000",
    "end": "1215000"
  },
  {
    "text": "now this is how easy it is",
    "start": "1154160",
    "end": "1157200"
  },
  {
    "text": "to use the project as uh as one of the",
    "start": "1157200",
    "end": "1160400"
  },
  {
    "text": "most important announcements that i",
    "start": "1160400",
    "end": "1162000"
  },
  {
    "text": "would like to make",
    "start": "1162000",
    "end": "1163120"
  },
  {
    "text": "we have release we have released quinoa",
    "start": "1163120",
    "end": "1165120"
  },
  {
    "text": "1.0 which brings so much more in",
    "start": "1165120",
    "end": "1167200"
  },
  {
    "text": "performance improvements and",
    "start": "1167200",
    "end": "1168480"
  },
  {
    "text": "improvements in this multi-zone",
    "start": "1168480",
    "end": "1170240"
  },
  {
    "text": "deployment to to the project and this is",
    "start": "1170240",
    "end": "1173280"
  },
  {
    "text": "available",
    "start": "1173280",
    "end": "1174320"
  },
  {
    "text": "on the website today on you can download",
    "start": "1174320",
    "end": "1178000"
  },
  {
    "text": "and use it and push it in production",
    "start": "1178000",
    "end": "1179840"
  },
  {
    "text": "live",
    "start": "1179840",
    "end": "1180960"
  },
  {
    "text": "so we have seen today what qma is",
    "start": "1180960",
    "end": "1184880"
  },
  {
    "text": "what kuma can do why is very",
    "start": "1184880",
    "end": "1186960"
  },
  {
    "text": "different from other service meshes",
    "start": "1186960",
    "end": "1188720"
  },
  {
    "text": "how simple it is to run how distributed",
    "start": "1188720",
    "end": "1191200"
  },
  {
    "text": "it can be in a multi-zone capacity and",
    "start": "1191200",
    "end": "1193280"
  },
  {
    "text": "we've seen a live demo",
    "start": "1193280",
    "end": "1194799"
  },
  {
    "text": "of probably one of the most complex",
    "start": "1194799",
    "end": "1196240"
  },
  {
    "text": "service mesh deployments anybody could",
    "start": "1196240",
    "end": "1197840"
  },
  {
    "text": "run",
    "start": "1197840",
    "end": "1198160"
  },
  {
    "text": "multi-cloud multi-cluster hybrid vms and",
    "start": "1198160",
    "end": "1200960"
  },
  {
    "text": "containers",
    "start": "1200960",
    "end": "1202080"
  },
  {
    "text": "so thank you so much you can check out",
    "start": "1202080",
    "end": "1203760"
  },
  {
    "text": " at cum.io",
    "start": "1203760",
    "end": "1205120"
  },
  {
    "text": "install and you can chat with the",
    "start": "1205120",
    "end": "1207120"
  },
  {
    "text": "community on slack",
    "start": "1207120",
    "end": "1208720"
  },
  {
    "text": "by going on queue mode your slash",
    "start": "1208720",
    "end": "1210640"
  },
  {
    "text": "community so thank you so much and i",
    "start": "1210640",
    "end": "1212480"
  },
  {
    "text": "hope you've enjoyed",
    "start": "1212480",
    "end": "1213520"
  },
  {
    "text": "this talk",
    "start": "1213520",
    "end": "1216880"
  }
]