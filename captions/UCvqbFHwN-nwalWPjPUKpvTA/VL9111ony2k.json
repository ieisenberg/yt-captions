[
  {
    "start": "0",
    "end": "95000"
  },
  {
    "text": "uh hi good afternoon uh uh thank you for",
    "start": "799",
    "end": "4440"
  },
  {
    "text": "showing up for the last talk of this",
    "start": "4440",
    "end": "7360"
  },
  {
    "text": "cucon uh so my name isan and I'm working",
    "start": "7360",
    "end": "11559"
  },
  {
    "text": "as a software engineer from Google and",
    "start": "11559",
    "end": "14160"
  },
  {
    "text": "I'm bden I'm a software engineer at",
    "start": "14160",
    "end": "16439"
  },
  {
    "text": "Apple uh so today we're going to talk",
    "start": "16439",
    "end": "19400"
  },
  {
    "text": "about uh Unleash the Power of SCD uh the",
    "start": "19400",
    "end": "24320"
  },
  {
    "text": "potentials and constraints of an",
    "start": "24320",
    "end": "27080"
  },
  {
    "text": "extensible uh",
    "start": "27080",
    "end": "28960"
  },
  {
    "text": "ACD so the the idea of this talk is so",
    "start": "28960",
    "end": "34079"
  },
  {
    "text": "we all know that SD uses uh bbo as its",
    "start": "34079",
    "end": "37960"
  },
  {
    "text": "uh persistence uh storage but we're just",
    "start": "37960",
    "end": "41600"
  },
  {
    "text": "wondering um why and uh could it be",
    "start": "41600",
    "end": "45559"
  },
  {
    "text": "something else so uh this talk is just",
    "start": "45559",
    "end": "49280"
  },
  {
    "text": "uh entertaining this idea of maybe we",
    "start": "49280",
    "end": "52520"
  },
  {
    "text": "should make the back end ofd more",
    "start": "52520",
    "end": "55600"
  },
  {
    "text": "extensible and try something else",
    "start": "55600",
    "end": "61920"
  },
  {
    "text": "uh so in this talk we'll cover some uh",
    "start": "63680",
    "end": "67200"
  },
  {
    "text": "background knowledge and then uh",
    "start": "67200",
    "end": "70360"
  },
  {
    "text": "introduce how we uh on our side how we",
    "start": "70360",
    "end": "74560"
  },
  {
    "text": "extend the that back ACD backend and",
    "start": "74560",
    "end": "77720"
  },
  {
    "text": "then uh we'll share some results of uh",
    "start": "77720",
    "end": "82240"
  },
  {
    "text": "The Benchmark performance of three",
    "start": "82240",
    "end": "84360"
  },
  {
    "text": "backends we have tried and then uh dive",
    "start": "84360",
    "end": "87360"
  },
  {
    "text": "deep into the CPU and memoral memory",
    "start": "87360",
    "end": "91040"
  },
  {
    "text": "profiling of these three",
    "start": "91040",
    "end": "94040"
  },
  {
    "text": "backends",
    "start": "94040",
    "end": "96960"
  },
  {
    "start": "95000",
    "end": "302000"
  },
  {
    "text": "okay okay so initially we're going to go",
    "start": "96960",
    "end": "100479"
  },
  {
    "text": "through some background knowledge for",
    "start": "100479",
    "end": "102560"
  },
  {
    "text": "those people who are new to ATD or don't",
    "start": "102560",
    "end": "105759"
  },
  {
    "text": "work on the CD all their day um so",
    "start": "105759",
    "end": "108840"
  },
  {
    "text": "here's the so ETD is the uh strongly",
    "start": "108840",
    "end": "112240"
  },
  {
    "text": "consistent key value store and uh uh it",
    "start": "112240",
    "end": "116159"
  },
  {
    "text": "uses raft um to achieve that strong",
    "start": "116159",
    "end": "119240"
  },
  {
    "text": "consistency",
    "start": "119240",
    "end": "120439"
  },
  {
    "text": "so a lot of ETD architecture is around",
    "start": "120439",
    "end": "123039"
  },
  {
    "text": "draft um and uh since it's a key Value",
    "start": "123039",
    "end": "127200"
  },
  {
    "text": "Store it also has its own mvcc",
    "start": "127200",
    "end": "130399"
  },
  {
    "text": "implementation that is backed by",
    "start": "130399",
    "end": "133560"
  },
  {
    "text": "embedded uh bold DB or bolt uh",
    "start": "133560",
    "end": "138239"
  },
  {
    "text": "database uh and then also a lot of logic",
    "start": "138239",
    "end": "141400"
  },
  {
    "text": "uh in NCD is dealing with peer",
    "start": "141400",
    "end": "144000"
  },
  {
    "text": "communication uh which is also part of",
    "start": "144000",
    "end": "146319"
  },
  {
    "text": "raft so let's uh look at the",
    "start": "146319",
    "end": "150400"
  },
  {
    "text": "uh typical right flow which is on the",
    "start": "150400",
    "end": "153239"
  },
  {
    "text": "leader um so the main I'm not going to",
    "start": "153239",
    "end": "156360"
  },
  {
    "text": "go through all the uh numbers but one",
    "start": "156360",
    "end": "159239"
  },
  {
    "text": "thing I'm going to I want to really",
    "start": "159239",
    "end": "160720"
  },
  {
    "text": "focus on is to Showcase that uh there",
    "start": "160720",
    "end": "163879"
  },
  {
    "text": "are two streams of work there's that",
    "start": "163879",
    "end": "166280"
  },
  {
    "text": "number three persistence uh to",
    "start": "166280",
    "end": "168680"
  },
  {
    "text": "transaction to wall which is basically",
    "start": "168680",
    "end": "171959"
  },
  {
    "text": "uh right into right Ahad log and uh",
    "start": "171959",
    "end": "176159"
  },
  {
    "text": "that's a requirement uh uh that is",
    "start": "176159",
    "end": "179120"
  },
  {
    "text": "coming from ra",
    "start": "179120",
    "end": "180519"
  },
  {
    "text": "and then there's also uh a right to the",
    "start": "180519",
    "end": "184360"
  },
  {
    "text": "mvcc backand that uh then asynchronously",
    "start": "184360",
    "end": "188200"
  },
  {
    "text": "will write to the B bolt so MCC stands",
    "start": "188200",
    "end": "191319"
  },
  {
    "text": "for multiversion concurrency control and",
    "start": "191319",
    "end": "194200"
  },
  {
    "text": "basically it gives us history of the",
    "start": "194200",
    "end": "196680"
  },
  {
    "text": "revisions of the uh uh",
    "start": "196680",
    "end": "201719"
  },
  {
    "text": "Keys let's look at also a typical uh",
    "start": "201799",
    "end": "205200"
  },
  {
    "text": "read flow so this one is simpler uh we",
    "start": "205200",
    "end": "208120"
  },
  {
    "text": "don't need to write any of course like",
    "start": "208120",
    "end": "210159"
  },
  {
    "text": "writing this into wall but we still need",
    "start": "210159",
    "end": "212200"
  },
  {
    "text": "to um make sure that uh we are reading",
    "start": "212200",
    "end": "215760"
  },
  {
    "text": "the correct index so that's why there is",
    "start": "215760",
    "end": "218319"
  },
  {
    "text": "that get read index uh but most of the",
    "start": "218319",
    "end": "221560"
  },
  {
    "text": "work is done on the mvcc layer and uh",
    "start": "221560",
    "end": "224720"
  },
  {
    "text": "that's where we get our key",
    "start": "224720",
    "end": "227080"
  },
  {
    "text": "values um so next we're going to dive in",
    "start": "227080",
    "end": "230239"
  },
  {
    "text": "into the uh mvcc portion a little bit",
    "start": "230239",
    "end": "233560"
  },
  {
    "text": "more try to explain it",
    "start": "233560",
    "end": "236640"
  },
  {
    "text": "here uh so here is the uh data model",
    "start": "236640",
    "end": "241480"
  },
  {
    "text": "that uh um mvcc uh implementation of ETD",
    "start": "241480",
    "end": "247519"
  },
  {
    "text": "uses um ETD has its own in memory 3",
    "start": "247519",
    "end": "252360"
  },
  {
    "text": "index that basically Maps uh revisions",
    "start": "252360",
    "end": "255879"
  },
  {
    "text": "of",
    "start": "255879",
    "end": "256759"
  },
  {
    "text": "the uh of the values and key values to",
    "start": "256759",
    "end": "261280"
  },
  {
    "text": "uh uh that basically Maps the um keal to",
    "start": "261280",
    "end": "265240"
  },
  {
    "text": "revisions and uh manages like sort of",
    "start": "265240",
    "end": "268400"
  },
  {
    "text": "history of of their revisions for the",
    "start": "268400",
    "end": "270840"
  },
  {
    "text": "for the certain um key and then when we",
    "start": "270840",
    "end": "274600"
  },
  {
    "text": "go to the back end which is bold DB that",
    "start": "274600",
    "end": "277840"
  },
  {
    "text": "that part doesn't really know about uh",
    "start": "277840",
    "end": "280360"
  },
  {
    "text": "uh versions and we just store uh uh this",
    "start": "280360",
    "end": "283880"
  },
  {
    "text": "revisions uh as sort of uh key values in",
    "start": "283880",
    "end": "287560"
  },
  {
    "text": "the in the B bolt and uh this index will",
    "start": "287560",
    "end": "291080"
  },
  {
    "text": "be referenced uh uh further in the",
    "start": "291080",
    "end": "293560"
  },
  {
    "text": "presentation during some of the",
    "start": "293560",
    "end": "295320"
  },
  {
    "text": "performance uh uh",
    "start": "295320",
    "end": "297720"
  },
  {
    "text": "benchmarks um",
    "start": "297720",
    "end": "301639"
  },
  {
    "start": "302000",
    "end": "650000"
  },
  {
    "text": "okay so let's talk about why uh bolt uh",
    "start": "304000",
    "end": "308440"
  },
  {
    "text": "was chosen as the mvcc backhand for SD",
    "start": "308440",
    "end": "311840"
  },
  {
    "text": "so SD is a uh pretty old project so uh",
    "start": "311840",
    "end": "316639"
  },
  {
    "text": "the the decision to use uh bolt was made",
    "start": "316639",
    "end": "320120"
  },
  {
    "text": "back in",
    "start": "320120",
    "end": "321120"
  },
  {
    "text": "2015 and sort of some of the",
    "start": "321120",
    "end": "323400"
  },
  {
    "text": "requirements were to have the back",
    "start": "323400",
    "end": "325840"
  },
  {
    "text": "endend in go uh you know to obviously to",
    "start": "325840",
    "end": "329199"
  },
  {
    "text": "to have a viable backand uh predictable",
    "start": "329199",
    "end": "332000"
  },
  {
    "text": "performance and the non-blocking",
    "start": "332000",
    "end": "333840"
  },
  {
    "text": "snapshot uh this is for uh for the",
    "start": "333840",
    "end": "337000"
  },
  {
    "text": "situation when you need to do uh",
    "start": "337000",
    "end": "339400"
  },
  {
    "text": "snapshot of the backand when you doing",
    "start": "339400",
    "end": "342000"
  },
  {
    "text": "wres or reads and the snapshotting part",
    "start": "342000",
    "end": "344639"
  },
  {
    "text": "is is used uh uh as one of the design",
    "start": "344639",
    "end": "348199"
  },
  {
    "text": "features of LCD and then last uh we",
    "start": "348199",
    "end": "353000"
  },
  {
    "text": "wanted to store uh about like 10 million",
    "start": "353000",
    "end": "356199"
  },
  {
    "text": "uh key values of approximately 1 KOB so",
    "start": "356199",
    "end": "360039"
  },
  {
    "text": "it sort of adds up to 10 GB of data this",
    "start": "360039",
    "end": "362960"
  },
  {
    "text": "was I think mainly driven by kubernetes",
    "start": "362960",
    "end": "365639"
  },
  {
    "text": "uh requirements back in the day uh so",
    "start": "365639",
    "end": "369039"
  },
  {
    "text": "people then did some performance testing",
    "start": "369039",
    "end": "370960"
  },
  {
    "text": "of B bolt or was like compared with bitc",
    "start": "370960",
    "end": "374319"
  },
  {
    "text": "and level DB and they uh uh went with",
    "start": "374319",
    "end": "377599"
  },
  {
    "text": "the bolt and one advantage is also that",
    "start": "377599",
    "end": "381120"
  },
  {
    "text": "bolt is using B",
    "start": "381120",
    "end": "383000"
  },
  {
    "text": "trees uh uh and they are uh better for",
    "start": "383000",
    "end": "386759"
  },
  {
    "text": "random reads compared to other databases",
    "start": "386759",
    "end": "389680"
  },
  {
    "text": "that a lot of them use LSM trees",
    "start": "389680",
    "end": "393720"
  },
  {
    "text": "um",
    "start": "393720",
    "end": "395400"
  },
  {
    "text": "so let me also highlight some key",
    "start": "395400",
    "end": "398080"
  },
  {
    "text": "concepts of Bolt um so there's there's",
    "start": "398080",
    "end": "401639"
  },
  {
    "text": "maybe a little bit of a name conclusion",
    "start": "401639",
    "end": "403400"
  },
  {
    "text": "confusion because we call it bolt but",
    "start": "403400",
    "end": "405960"
  },
  {
    "text": "sometimes also referenced to as balb uh",
    "start": "405960",
    "end": "408840"
  },
  {
    "text": "so ETD maintains a fork of Bal DB which",
    "start": "408840",
    "end": "413199"
  },
  {
    "text": "we call B bolt um the original uh bold",
    "start": "413199",
    "end": "416680"
  },
  {
    "text": "DB project is archived uh so since it",
    "start": "416680",
    "end": "419759"
  },
  {
    "text": "was archived we people in the CD",
    "start": "419759",
    "end": "422000"
  },
  {
    "text": "Community fixed uh uh bugs and added uh",
    "start": "422000",
    "end": "425720"
  },
  {
    "text": "uh sort of some some new features some",
    "start": "425720",
    "end": "427440"
  },
  {
    "text": "improvements so it's actually uh",
    "start": "427440",
    "end": "430120"
  },
  {
    "text": "actively",
    "start": "430120",
    "end": "431080"
  },
  {
    "text": "developing um so what is uh bolt it's a",
    "start": "431080",
    "end": "434520"
  },
  {
    "text": "key Value Store uh it has uh transaction",
    "start": "434520",
    "end": "437479"
  },
  {
    "text": "support which is important",
    "start": "437479",
    "end": "439879"
  },
  {
    "text": "Ford and it uses b b b trees as I",
    "start": "439879",
    "end": "443639"
  },
  {
    "text": "mentioned prior and a very interesting",
    "start": "443639",
    "end": "446240"
  },
  {
    "text": "feature it's it uses memory mapped uh uh",
    "start": "446240",
    "end": "449680"
  },
  {
    "text": "um file as the um um as a key concept of",
    "start": "449680",
    "end": "454800"
  },
  {
    "text": "how bolt stores values it it was largely",
    "start": "454800",
    "end": "458319"
  },
  {
    "text": "inspired by uh lightning DB",
    "start": "458319",
    "end": "461960"
  },
  {
    "text": "lmdb",
    "start": "461960",
    "end": "463960"
  },
  {
    "text": "um so now we're going to focus on that",
    "start": "463960",
    "end": "467120"
  },
  {
    "text": "uh memory mapped file feature and the",
    "start": "467120",
    "end": "469599"
  },
  {
    "text": "actual memory usage of the B bolt so",
    "start": "469599",
    "end": "472440"
  },
  {
    "text": "nowadays uh people face uh new",
    "start": "472440",
    "end": "475599"
  },
  {
    "text": "challenges with ETD and uh kubernetes so",
    "start": "475599",
    "end": "479639"
  },
  {
    "text": "on one hand uh we have uh systems that",
    "start": "479639",
    "end": "482680"
  },
  {
    "text": "are trying to go for as as minimal",
    "start": "482680",
    "end": "485400"
  },
  {
    "text": "requirements as possible uh for example",
    "start": "485400",
    "end": "488199"
  },
  {
    "text": "Edge or uh um some systems with uh",
    "start": "488199",
    "end": "492240"
  },
  {
    "text": "special uh requirements uh embedded",
    "start": "492240",
    "end": "494639"
  },
  {
    "text": "maybe and uh a IML where people just",
    "start": "494639",
    "end": "497919"
  },
  {
    "text": "want uh uh more storage for their",
    "start": "497919",
    "end": "500400"
  },
  {
    "text": "special",
    "start": "500400",
    "end": "501560"
  },
  {
    "text": "workloads uh let's dive in a little bit",
    "start": "501560",
    "end": "504199"
  },
  {
    "text": "more here so systems with uh low uh",
    "start": "504199",
    "end": "507599"
  },
  {
    "text": "requirements so important part that we",
    "start": "507599",
    "end": "510440"
  },
  {
    "text": "can change is that uh uh fast disk uh",
    "start": "510440",
    "end": "513640"
  },
  {
    "text": "performance is required by raft because",
    "start": "513640",
    "end": "515440"
  },
  {
    "text": "we have to have sync on every right uh",
    "start": "515440",
    "end": "518279"
  },
  {
    "text": "and if you don't do that then you break",
    "start": "518279",
    "end": "520919"
  },
  {
    "text": "uh uh uh rough consistency guarantees so",
    "start": "520919",
    "end": "524720"
  },
  {
    "text": "we can't remove that but uh most of the",
    "start": "524720",
    "end": "527519"
  },
  {
    "text": "people nowadays run uh SD uh to uh so",
    "start": "527519",
    "end": "532200"
  },
  {
    "text": "backend fits in memory uh so that memory",
    "start": "532200",
    "end": "534800"
  },
  {
    "text": "mapped file is is uh is always in memory",
    "start": "534800",
    "end": "537880"
  },
  {
    "text": "you don't do any uh pay page eviction",
    "start": "537880",
    "end": "540279"
  },
  {
    "text": "and so on uh so then the question",
    "start": "540279",
    "end": "542399"
  },
  {
    "text": "becomes can we reduce the memory",
    "start": "542399",
    "end": "546040"
  },
  {
    "text": "consumption uh I want to highlight here",
    "start": "546120",
    "end": "548399"
  },
  {
    "text": "this is one of the uh recent papers that",
    "start": "548399",
    "end": "550920"
  },
  {
    "text": "was published by group in CMU and uh I",
    "start": "550920",
    "end": "554680"
  },
  {
    "text": "didn't reproduce their results but uh uh",
    "start": "554680",
    "end": "557240"
  },
  {
    "text": "it's sort of interesting that they are",
    "start": "557240",
    "end": "558959"
  },
  {
    "text": "saying that uh uh uh memory mapped uh",
    "start": "558959",
    "end": "562519"
  },
  {
    "text": "files maybe not uh that good for um uh",
    "start": "562519",
    "end": "565600"
  },
  {
    "text": "for",
    "start": "565600",
    "end": "566360"
  },
  {
    "text": "databases uh so one thing they",
    "start": "566360",
    "end": "568240"
  },
  {
    "text": "highlighted that there's it's hard to",
    "start": "568240",
    "end": "570000"
  },
  {
    "text": "achieve uh transactional safety this I",
    "start": "570000",
    "end": "572480"
  },
  {
    "text": "believe actually doesn't apply for itd",
    "start": "572480",
    "end": "574200"
  },
  {
    "text": "because we have a single writer uh",
    "start": "574200",
    "end": "577000"
  },
  {
    "text": "situation uh but the two other items uh",
    "start": "577000",
    "end": "580880"
  },
  {
    "text": "uh will potentially apply if we try to",
    "start": "580880",
    "end": "583040"
  },
  {
    "text": "go uh beyond the memory available in the",
    "start": "583040",
    "end": "586040"
  },
  {
    "text": "system which is uh having sort of slow",
    "start": "586040",
    "end": "588720"
  },
  {
    "text": "io on page faults and when you need to",
    "start": "588720",
    "end": "590880"
  },
  {
    "text": "evict and access evicted pages and then",
    "start": "590880",
    "end": "593720"
  },
  {
    "text": "they also did some testing on the uh",
    "start": "593720",
    "end": "596680"
  },
  {
    "text": "nvmes and they claimed that uh",
    "start": "596680",
    "end": "600120"
  },
  {
    "text": "uh when you use map databases memory",
    "start": "600120",
    "end": "603680"
  },
  {
    "text": "databases you might have issues with",
    "start": "603680",
    "end": "606720"
  },
  {
    "text": "throughput and this is related to uh",
    "start": "606720",
    "end": "609800"
  },
  {
    "text": "some CPU uh uh caching uh this will be",
    "start": "609800",
    "end": "613399"
  },
  {
    "text": "interesting to replicate again come",
    "start": "613399",
    "end": "615000"
  },
  {
    "text": "replicate",
    "start": "615000",
    "end": "616519"
  },
  {
    "text": "this and for uh IML systems the uh the",
    "start": "616519",
    "end": "620720"
  },
  {
    "text": "problem is the opposite so people want",
    "start": "620720",
    "end": "622880"
  },
  {
    "text": "uh uh sort of uh more uh storage and",
    "start": "622880",
    "end": "626120"
  },
  {
    "text": "like we actually can't have systems with",
    "start": "626120",
    "end": "628240"
  },
  {
    "text": "you know well like it we can but it's",
    "start": "628240",
    "end": "629760"
  },
  {
    "text": "hard to just provision systems with like",
    "start": "629760",
    "end": "631880"
  },
  {
    "text": "10 GB of memory uh and also there are",
    "start": "631880",
    "end": "636040"
  },
  {
    "text": "some other issues that we'll we'll talk",
    "start": "636040",
    "end": "638079"
  },
  {
    "text": "about during the performance test and",
    "start": "638079",
    "end": "639720"
  },
  {
    "text": "why it's difficult to uh to go higher",
    "start": "639720",
    "end": "644680"
  },
  {
    "text": "um okay",
    "start": "645920",
    "end": "649480"
  },
  {
    "start": "650000",
    "end": "997000"
  },
  {
    "text": "um uh uh so so in order to um plug in",
    "start": "651040",
    "end": "656720"
  },
  {
    "text": "back different backends for I um what we",
    "start": "656720",
    "end": "659720"
  },
  {
    "text": "have done is first we uh we made an",
    "start": "659720",
    "end": "663519"
  },
  {
    "text": "interface to extend the acity back end",
    "start": "663519",
    "end": "667320"
  },
  {
    "text": "we call",
    "start": "667320",
    "end": "669079"
  },
  {
    "text": "eity so uh this work is prototyped by",
    "start": "669079",
    "end": "672800"
  },
  {
    "text": "Han uh my colleague and uh so basically",
    "start": "672800",
    "end": "677040"
  },
  {
    "text": "we extracted uh three uh backend",
    "start": "677040",
    "end": "680440"
  },
  {
    "text": "interfaces out of the SD code base so",
    "start": "680440",
    "end": "684040"
  },
  {
    "text": "the first one is the database interface",
    "start": "684040",
    "end": "686480"
  },
  {
    "text": "and the second one is the transaction",
    "start": "686480",
    "end": "688800"
  },
  {
    "text": "interface",
    "start": "688800",
    "end": "690200"
  },
  {
    "text": "and then the lowest one is the bucket",
    "start": "690200",
    "end": "693320"
  },
  {
    "text": "interface that directly talks with the",
    "start": "693320",
    "end": "696600"
  },
  {
    "text": "uh backend",
    "start": "696600",
    "end": "699639"
  },
  {
    "text": "database so uh with this with these",
    "start": "699639",
    "end": "702839"
  },
  {
    "text": "interfaces so we implemented these",
    "start": "702839",
    "end": "705600"
  },
  {
    "text": "interfaces for uh two other uh database",
    "start": "705600",
    "end": "709800"
  },
  {
    "text": "PS so uh and then we run a bunch of",
    "start": "709800",
    "end": "713760"
  },
  {
    "text": "benchmarks to evaluate their",
    "start": "713760",
    "end": "717519"
  },
  {
    "text": "performance so the three back ends we're",
    "start": "717519",
    "end": "720200"
  },
  {
    "text": "comparing are bbo uh sqlite and Badger",
    "start": "720200",
    "end": "724519"
  },
  {
    "text": "so the setup uh we have tried is uh just",
    "start": "724519",
    "end": "727839"
  },
  {
    "text": "for one server cluster and then we run",
    "start": "727839",
    "end": "731480"
  },
  {
    "text": "the Benchmark uh we run the different",
    "start": "731480",
    "end": "734440"
  },
  {
    "text": "servers in in Docker and then with",
    "start": "734440",
    "end": "737920"
  },
  {
    "text": "different memory constraints so one is a",
    "start": "737920",
    "end": "741839"
  },
  {
    "text": "very limited uh memory four four",
    "start": "741839",
    "end": "745399"
  },
  {
    "text": "gigabytes for uh up to 10 gigabytes of",
    "start": "745399",
    "end": "748680"
  },
  {
    "text": "data and then the second one is with",
    "start": "748680",
    "end": "751279"
  },
  {
    "text": "enough memory that's uh 12 GB of memory",
    "start": "751279",
    "end": "754199"
  },
  {
    "text": "for up to 10 GB of total data and we",
    "start": "754199",
    "end": "758920"
  },
  {
    "text": "also Run The Benchmark for different key",
    "start": "758920",
    "end": "761079"
  },
  {
    "text": "value uh ratio size ratios so uh the",
    "start": "761079",
    "end": "766079"
  },
  {
    "text": "first one is uh like the key value size",
    "start": "766079",
    "end": "769360"
  },
  {
    "text": "are comparable and the second one is key",
    "start": "769360",
    "end": "772360"
  },
  {
    "text": "size is 10 one10 of value size and the",
    "start": "772360",
    "end": "775440"
  },
  {
    "text": "last one is like you have a very small",
    "start": "775440",
    "end": "777519"
  },
  {
    "text": "key size and then very big",
    "start": "777519",
    "end": "779639"
  },
  {
    "text": "uh value",
    "start": "779639",
    "end": "781440"
  },
  {
    "text": "size so uh the first slide is on about",
    "start": "781440",
    "end": "785320"
  },
  {
    "text": "the right Benchmark so we can see like",
    "start": "785320",
    "end": "789639"
  },
  {
    "text": "overall uh bbo has uh similar",
    "start": "789639",
    "end": "793480"
  },
  {
    "text": "performance as Badger and then uh sqlite",
    "start": "793480",
    "end": "798279"
  },
  {
    "text": "it's much slower in in rights so uh this",
    "start": "798279",
    "end": "802760"
  },
  {
    "text": "might be a little unexpected because we",
    "start": "802760",
    "end": "805320"
  },
  {
    "text": "would expect Badger to have better uh",
    "start": "805320",
    "end": "807440"
  },
  {
    "text": "right performance because it's a append",
    "start": "807440",
    "end": "809880"
  },
  {
    "text": "only uh",
    "start": "809880",
    "end": "812040"
  },
  {
    "text": "rights and another uh interesting thing",
    "start": "812040",
    "end": "816199"
  },
  {
    "text": "is the first the on the graph on the top",
    "start": "816199",
    "end": "820120"
  },
  {
    "text": "left uh so this is when the memory is",
    "start": "820120",
    "end": "823240"
  },
  {
    "text": "really constrained and then the special",
    "start": "823240",
    "end": "825959"
  },
  {
    "text": "thing about this graph is the key index",
    "start": "825959",
    "end": "829279"
  },
  {
    "text": "so when you write uh a total of like",
    "start": "829279",
    "end": "833320"
  },
  {
    "text": "four or five gigabyt of data into it the",
    "start": "833320",
    "end": "836120"
  },
  {
    "text": "the key index key index itself is taking",
    "start": "836120",
    "end": "840240"
  },
  {
    "text": "almost all the memories so that's why it",
    "start": "840240",
    "end": "844320"
  },
  {
    "text": "uh gets slowed down even for for all the",
    "start": "844320",
    "end": "848320"
  },
  {
    "text": "three",
    "start": "848320",
    "end": "850639"
  },
  {
    "text": "backends then uh oh okay I forgot to",
    "start": "851959",
    "end": "855160"
  },
  {
    "text": "mention that uh in all these benchmarks",
    "start": "855160",
    "end": "858880"
  },
  {
    "text": "uh we're using uh we're not uh the",
    "start": "858880",
    "end": "863199"
  },
  {
    "text": "expert of badger or sqlite so they their",
    "start": "863199",
    "end": "866440"
  },
  {
    "text": "settings might not be optimized uh so",
    "start": "866440",
    "end": "869480"
  },
  {
    "text": "this might not represent the best",
    "start": "869480",
    "end": "870959"
  },
  {
    "text": "performance of badger or uh",
    "start": "870959",
    "end": "874680"
  },
  {
    "text": "sqlite so uh the second slide is about",
    "start": "874680",
    "end": "878399"
  },
  {
    "text": "the range uh Benchmark so uh from these",
    "start": "878399",
    "end": "883519"
  },
  {
    "text": "graphs we can see that uh bolt is",
    "start": "883519",
    "end": "886920"
  },
  {
    "text": "actually the best in terms of random",
    "start": "886920",
    "end": "889440"
  },
  {
    "text": "rise and uh SQ light really slow but uh",
    "start": "889440",
    "end": "893600"
  },
  {
    "text": "Badger lies it's about 50 to 60% of the",
    "start": "893600",
    "end": "898680"
  },
  {
    "text": "performance performance the speed rate",
    "start": "898680",
    "end": "900480"
  },
  {
    "text": "speed of uh",
    "start": "900480",
    "end": "902720"
  },
  {
    "text": "bbo and again the same pattern shows up",
    "start": "902720",
    "end": "906519"
  },
  {
    "text": "in terms that when the key index is",
    "start": "906519",
    "end": "909680"
  },
  {
    "text": "consuming all the memory then everything",
    "start": "909680",
    "end": "912000"
  },
  {
    "text": "just slows",
    "start": "912000",
    "end": "914759"
  },
  {
    "text": "down and this is another important uh",
    "start": "917079",
    "end": "921279"
  },
  {
    "text": "Benchmark so uh this is when you",
    "start": "921279",
    "end": "925240"
  },
  {
    "text": "load uh a DB file direct a when you",
    "start": "925240",
    "end": "929040"
  },
  {
    "text": "start a database directly from already",
    "start": "929040",
    "end": "932720"
  },
  {
    "text": "uh existing database files how long it",
    "start": "932720",
    "end": "935680"
  },
  {
    "text": "takes for the server to boot up so uh",
    "start": "935680",
    "end": "940839"
  },
  {
    "text": "for Badger and uh sqlite uh it's pretty",
    "start": "940839",
    "end": "945519"
  },
  {
    "text": "much linear with the uh size of the DB",
    "start": "945519",
    "end": "948639"
  },
  {
    "text": "file but for one interesting to see is",
    "start": "948639",
    "end": "951839"
  },
  {
    "text": "for bbo when the memory is small once",
    "start": "951839",
    "end": "956199"
  },
  {
    "text": "that the total uh DB file size it's",
    "start": "956199",
    "end": "959720"
  },
  {
    "text": "close to the memory size it takes",
    "start": "959720",
    "end": "961839"
  },
  {
    "text": "forever to load uh the database from the",
    "start": "961839",
    "end": "965880"
  },
  {
    "text": "file and in some in a lot of cases it",
    "start": "965880",
    "end": "969279"
  },
  {
    "text": "takes hours to wait for the server to",
    "start": "969279",
    "end": "973480"
  },
  {
    "text": "start",
    "start": "973480",
    "end": "975000"
  },
  {
    "text": "up and then uh when the memory is really",
    "start": "975000",
    "end": "979959"
  },
  {
    "text": "constrained uh with like really",
    "start": "979959",
    "end": "982319"
  },
  {
    "text": "approaching the key index size then",
    "start": "982319",
    "end": "986360"
  },
  {
    "text": "everything just takes forever which is",
    "start": "986360",
    "end": "988560"
  },
  {
    "text": "the top first uh graph top left",
    "start": "988560",
    "end": "993560"
  },
  {
    "start": "997000",
    "end": "1198000"
  },
  {
    "text": "graph okay and uh so there are also",
    "start": "997199",
    "end": "1001000"
  },
  {
    "text": "several questions we we were baffled",
    "start": "1001000",
    "end": "1003839"
  },
  {
    "text": "about why why the badger is not faster",
    "start": "1003839",
    "end": "1007600"
  },
  {
    "text": "in right and and then uh where what's",
    "start": "1007600",
    "end": "1011639"
  },
  {
    "text": "the difference in terms of range speed",
    "start": "1011639",
    "end": "1013480"
  },
  {
    "text": "between Badger and bbo so where is the",
    "start": "1013480",
    "end": "1016680"
  },
  {
    "text": "gap so we look deep into the CPU and",
    "start": "1016680",
    "end": "1020319"
  },
  {
    "text": "memory profiling of these",
    "start": "1020319",
    "end": "1023520"
  },
  {
    "text": "operations so the first one is the uh",
    "start": "1023520",
    "end": "1026880"
  },
  {
    "text": "right CPU profile so you can see that",
    "start": "1026880",
    "end": "1030400"
  },
  {
    "text": "the majority uh for bbo uh so you can",
    "start": "1030400",
    "end": "1034000"
  },
  {
    "text": "see the majority of the time is spent on",
    "start": "1034000",
    "end": "1036480"
  },
  {
    "text": "ACD related operations uh rather on raft",
    "start": "1036480",
    "end": "1040720"
  },
  {
    "text": "or other system calls only 1.5% of the",
    "start": "1040720",
    "end": "1045558"
  },
  {
    "text": "time is spent directly talking to Bol",
    "start": "1045559",
    "end": "1048520"
  },
  {
    "text": "back",
    "start": "1048520",
    "end": "1050320"
  },
  {
    "text": "so and this is very similar to uh Badger",
    "start": "1050320",
    "end": "1055200"
  },
  {
    "text": "so that can explain why it's like as",
    "start": "1055200",
    "end": "1059080"
  },
  {
    "text": "long as bbo is fast enough it's very",
    "start": "1059080",
    "end": "1061520"
  },
  {
    "text": "hard it's very hard to like further",
    "start": "1061520",
    "end": "1064559"
  },
  {
    "text": "increase the right uh",
    "start": "1064559",
    "end": "1068360"
  },
  {
    "text": "speed uh yeah it's hard to uh there's",
    "start": "1068360",
    "end": "1071200"
  },
  {
    "text": "not much improvement for rights but you",
    "start": "1071200",
    "end": "1074240"
  },
  {
    "text": "can really slow it down with sqlite so",
    "start": "1074240",
    "end": "1077400"
  },
  {
    "text": "because we are for for sqlite for each",
    "start": "1077400",
    "end": "1080039"
  },
  {
    "text": "right we have to issue a new query to",
    "start": "1080039",
    "end": "1082320"
  },
  {
    "text": "the back",
    "start": "1082320",
    "end": "1084639"
  },
  {
    "text": "end and then this is the range CPU",
    "start": "1085559",
    "end": "1089440"
  },
  {
    "text": "profile so um like for bbo about a third",
    "start": "1089440",
    "end": "1094480"
  },
  {
    "text": "of the time is spent on searching for",
    "start": "1094480",
    "end": "1096559"
  },
  {
    "text": "the keys and get the",
    "start": "1096559",
    "end": "1099480"
  },
  {
    "text": "values and then for Badger uh a chunk of",
    "start": "1099480",
    "end": "1103640"
  },
  {
    "text": "the time is spent to find the key and",
    "start": "1103640",
    "end": "1106679"
  },
  {
    "text": "then another uh big chunk of time is",
    "start": "1106679",
    "end": "1109640"
  },
  {
    "text": "actually spent to get retrieved the",
    "start": "1109640",
    "end": "1112919"
  },
  {
    "text": "values uh from the value log because",
    "start": "1112919",
    "end": "1115720"
  },
  {
    "text": "value is not stored in the in the ASM",
    "start": "1115720",
    "end": "1119679"
  },
  {
    "text": "tree it's actually sted in the in the",
    "start": "1119679",
    "end": "1122880"
  },
  {
    "text": "log so uh we think that's why is uh",
    "start": "1122880",
    "end": "1126600"
  },
  {
    "text": "slower for um Badger for",
    "start": "1126600",
    "end": "1131600"
  },
  {
    "text": "read and again for uh sqlite this is",
    "start": "1132200",
    "end": "1135960"
  },
  {
    "text": "just a a very slow uh",
    "start": "1135960",
    "end": "1140720"
  },
  {
    "text": "database and then uh we also look at the",
    "start": "1141760",
    "end": "1144280"
  },
  {
    "text": "memory profile so this is the memory",
    "start": "1144280",
    "end": "1146360"
  },
  {
    "text": "profile after loading of 18 million key",
    "start": "1146360",
    "end": "1150520"
  },
  {
    "text": "values uh of database file so can see",
    "start": "1150520",
    "end": "1155320"
  },
  {
    "text": "like majority of the memory is spent on",
    "start": "1155320",
    "end": "1158679"
  },
  {
    "text": "the key index and then also uh the the",
    "start": "1158679",
    "end": "1163400"
  },
  {
    "text": "memory assigned to uh re rebuild the",
    "start": "1163400",
    "end": "1166880"
  },
  {
    "text": "index from the entire DB file so across",
    "start": "1166880",
    "end": "1171640"
  },
  {
    "text": "three different backends the memory uh",
    "start": "1171640",
    "end": "1174360"
  },
  {
    "text": "usage is pretty",
    "start": "1174360",
    "end": "1176320"
  },
  {
    "text": "similar and uh what's not reflected in",
    "start": "1176320",
    "end": "1179320"
  },
  {
    "text": "here is the m map used by bbott because",
    "start": "1179320",
    "end": "1182480"
  },
  {
    "text": "it's a system uh the the system uh like",
    "start": "1182480",
    "end": "1186240"
  },
  {
    "text": "kind of determines what it uses so uh",
    "start": "1186240",
    "end": "1189200"
  },
  {
    "text": "Goan doesn't really have any visibility",
    "start": "1189200",
    "end": "1192039"
  },
  {
    "text": "on how much uh memory is used by m",
    "start": "1192039",
    "end": "1197200"
  },
  {
    "text": "map",
    "start": "1197640",
    "end": "1199480"
  },
  {
    "start": "1198000",
    "end": "1549000"
  },
  {
    "text": "okay uh so with all these uh we have",
    "start": "1199480",
    "end": "1203039"
  },
  {
    "text": "some takeaway message uh so the first",
    "start": "1203039",
    "end": "1206400"
  },
  {
    "text": "question is is there any value in",
    "start": "1206400",
    "end": "1208559"
  },
  {
    "text": "extensible",
    "start": "1208559",
    "end": "1209840"
  },
  {
    "text": "ACD uh we think so uh we because like",
    "start": "1209840",
    "end": "1214520"
  },
  {
    "text": "right now the use cases for kubernetes",
    "start": "1214520",
    "end": "1217760"
  },
  {
    "text": "is very diverse so maybe for if you're",
    "start": "1217760",
    "end": "1221440"
  },
  {
    "text": "optimizing for Speed bbo is still the",
    "start": "1221440",
    "end": "1223720"
  },
  {
    "text": "best choice but you might have different",
    "start": "1223720",
    "end": "1227039"
  },
  {
    "text": "requirements you might",
    "start": "1227039",
    "end": "1229360"
  },
  {
    "text": "not you can maybe uh tolerate a little",
    "start": "1229360",
    "end": "1232679"
  },
  {
    "text": "performance uh lower performance but you",
    "start": "1232679",
    "end": "1236120"
  },
  {
    "text": "really care about memory size then you",
    "start": "1236120",
    "end": "1238960"
  },
  {
    "text": "might want to try some other",
    "start": "1238960",
    "end": "1240960"
  },
  {
    "text": "backends and also maybe you don't want",
    "start": "1240960",
    "end": "1244200"
  },
  {
    "text": "to M use a map for the reasons that",
    "start": "1244200",
    "end": "1246720"
  },
  {
    "text": "bakan has mentioned so uh that's also",
    "start": "1246720",
    "end": "1250600"
  },
  {
    "text": "another reason to use uh",
    "start": "1250600",
    "end": "1253320"
  },
  {
    "text": "escd and then the second question is can",
    "start": "1253320",
    "end": "1256559"
  },
  {
    "text": "we uh with ex send acdd can we scale SD",
    "start": "1256559",
    "end": "1261240"
  },
  {
    "text": "up into like the terabytes",
    "start": "1261240",
    "end": "1264159"
  },
  {
    "text": "region um the answer we think is to some",
    "start": "1264159",
    "end": "1268120"
  },
  {
    "text": "extent but there's still limits so the",
    "start": "1268120",
    "end": "1271240"
  },
  {
    "text": "first limit",
    "start": "1271240",
    "end": "1272600"
  },
  {
    "text": "is uh there's like the way sdd operates",
    "start": "1272600",
    "end": "1277080"
  },
  {
    "text": "is it needs to send the leader sends the",
    "start": "1277080",
    "end": "1280039"
  },
  {
    "text": "snapshot of the database to the follower",
    "start": "1280039",
    "end": "1282120"
  },
  {
    "text": "if a new fler join or if the the fler is",
    "start": "1282120",
    "end": "1285000"
  },
  {
    "text": "falling back falling uh behind so",
    "start": "1285000",
    "end": "1288640"
  },
  {
    "text": "there's still latency sending large uh",
    "start": "1288640",
    "end": "1291120"
  },
  {
    "text": "snapshots between members and the second",
    "start": "1291120",
    "end": "1294360"
  },
  {
    "text": "one is like as we have seen in the Pro",
    "start": "1294360",
    "end": "1297360"
  },
  {
    "text": "uh in the benchmarks that uh SD is still",
    "start": "1297360",
    "end": "1303080"
  },
  {
    "text": "using a lot of memory in in key index so",
    "start": "1303080",
    "end": "1307279"
  },
  {
    "text": "if your memory is small then that would",
    "start": "1307279",
    "end": "1310480"
  },
  {
    "text": "really slow things",
    "start": "1310480",
    "end": "1312000"
  },
  {
    "text": "down so to extend to scale up SD uh",
    "start": "1312000",
    "end": "1317559"
  },
  {
    "text": "another approach my might be uh uh",
    "start": "1317559",
    "end": "1320080"
  },
  {
    "text": "shouting by like uh for for example for",
    "start": "1320080",
    "end": "1324120"
  },
  {
    "text": "kubernetes",
    "start": "1324120",
    "end": "1326320"
  },
  {
    "text": "resources and then uh lastly uh about",
    "start": "1326320",
    "end": "1329600"
  },
  {
    "text": "the future plans for",
    "start": "1329600",
    "end": "1331320"
  },
  {
    "text": "ESD uh So currently um SD Community is",
    "start": "1331320",
    "end": "1335559"
  },
  {
    "text": "just trying to stabilize the whole code",
    "start": "1335559",
    "end": "1339039"
  },
  {
    "text": "base for ACD so we're this will not be",
    "start": "1339039",
    "end": "1342080"
  },
  {
    "text": "in priority for",
    "start": "1342080",
    "end": "1344480"
  },
  {
    "text": "SD uh to get it on to",
    "start": "1344480",
    "end": "1346960"
  },
  {
    "text": "3.6 but um if you have a really strong",
    "start": "1346960",
    "end": "1351080"
  },
  {
    "text": "use case for it then we can talk and",
    "start": "1351080",
    "end": "1354840"
  },
  {
    "text": "then maybe we can come up with a",
    "start": "1354840",
    "end": "1358159"
  },
  {
    "text": "plan y thank you so I want to reiterate",
    "start": "1358159",
    "end": "1361760"
  },
  {
    "text": "that uh uh we're looking for feedback",
    "start": "1361760",
    "end": "1364559"
  },
  {
    "text": "from the community if there's enough",
    "start": "1364559",
    "end": "1366559"
  },
  {
    "text": "diverse of representative from different",
    "start": "1366559",
    "end": "1368880"
  },
  {
    "text": "companies who will reach out to the",
    "start": "1368880",
    "end": "1370880"
  },
  {
    "text": "community and uh say that this is a",
    "start": "1370880",
    "end": "1373320"
  },
  {
    "text": "valid use case for them uh there'll",
    "start": "1373320",
    "end": "1375600"
  },
  {
    "text": "probably be uh this will probably be",
    "start": "1375600",
    "end": "1379159"
  },
  {
    "text": "bumped in the priority and we're also",
    "start": "1379159",
    "end": "1380559"
  },
  {
    "text": "looking for contributors so uh atcd",
    "start": "1380559",
    "end": "1383720"
  },
  {
    "text": "Community is uh right now um has a road",
    "start": "1383720",
    "end": "1387600"
  },
  {
    "text": "map and uh just maybe doesn't have time",
    "start": "1387600",
    "end": "1391080"
  },
  {
    "text": "to uh focus on on this and uh I think",
    "start": "1391080",
    "end": "1395080"
  },
  {
    "text": "this is pretty interesting work so if",
    "start": "1395080",
    "end": "1396840"
  },
  {
    "text": "people want to contribute and they have",
    "start": "1396840",
    "end": "1399000"
  },
  {
    "text": "the use case uh please reach out um yeah",
    "start": "1399000",
    "end": "1403440"
  },
  {
    "text": "thank you thank",
    "start": "1403440",
    "end": "1405440"
  },
  {
    "text": "[Applause]",
    "start": "1405440",
    "end": "1407440"
  },
  {
    "text": "you",
    "start": "1407440",
    "end": "1408980"
  },
  {
    "text": "[Applause]",
    "start": "1408980",
    "end": "1413360"
  },
  {
    "text": "okay any",
    "start": "1413360",
    "end": "1415840"
  },
  {
    "text": "questions does this okay um so one of",
    "start": "1423880",
    "end": "1428159"
  },
  {
    "text": "the problems that I was facing at my",
    "start": "1428159",
    "end": "1430880"
  },
  {
    "text": "earlier uh employer was that we were",
    "start": "1430880",
    "end": "1433240"
  },
  {
    "text": "trying to run multiple control planes",
    "start": "1433240",
    "end": "1435760"
  },
  {
    "text": "using the same at CD uh but but we were",
    "start": "1435760",
    "end": "1439400"
  },
  {
    "text": "worried about the Noisy Neighbor problem",
    "start": "1439400",
    "end": "1441880"
  },
  {
    "text": "because there was not it was not",
    "start": "1441880",
    "end": "1443840"
  },
  {
    "text": "possible to limit the resource usage of",
    "start": "1443840",
    "end": "1446679"
  },
  {
    "text": "a specific control plane in the that at",
    "start": "1446679",
    "end": "1449520"
  },
  {
    "text": "CD would the extensibility story help us",
    "start": "1449520",
    "end": "1453559"
  },
  {
    "text": "to make sure like you know hey this path",
    "start": "1453559",
    "end": "1456720"
  },
  {
    "text": "uh uses only that much resource and it",
    "start": "1456720",
    "end": "1459200"
  },
  {
    "text": "doesn't um make noise for the others uh",
    "start": "1459200",
    "end": "1463520"
  },
  {
    "text": "just want to get an idea like how",
    "start": "1463520",
    "end": "1464760"
  },
  {
    "text": "extensible it would be or like how",
    "start": "1464760",
    "end": "1466399"
  },
  {
    "text": "configurable that is uh so this this",
    "start": "1466399",
    "end": "1469600"
  },
  {
    "text": "effort is mainly about uh extending the",
    "start": "1469600",
    "end": "1472799"
  },
  {
    "text": "backend like make it more uh accessible",
    "start": "1472799",
    "end": "1476000"
  },
  {
    "text": "for different use cases but for",
    "start": "1476000",
    "end": "1478360"
  },
  {
    "text": "multi-tenancy use case is more about the",
    "start": "1478360",
    "end": "1481760"
  },
  {
    "text": "intake control of ACD itself so that's",
    "start": "1481760",
    "end": "1485720"
  },
  {
    "text": "not a part of this extensible AC yeah so",
    "start": "1485720",
    "end": "1489520"
  },
  {
    "text": "the answer is probably not but there is",
    "start": "1489520",
    "end": "1492720"
  },
  {
    "text": "uh effort or issues open about rate",
    "start": "1492720",
    "end": "1495440"
  },
  {
    "text": "limiting so if you uh you know",
    "start": "1495440",
    "end": "1497600"
  },
  {
    "text": "interested in that's a your use case you",
    "start": "1497600",
    "end": "1499720"
  },
  {
    "text": "should definitely comment on those",
    "start": "1499720",
    "end": "1501880"
  },
  {
    "text": "issues um",
    "start": "1501880",
    "end": "1505960"
  },
  {
    "text": "thanks okay anybody",
    "start": "1519360",
    "end": "1522640"
  },
  {
    "text": "else who's uh like in",
    "start": "1522640",
    "end": "1525320"
  },
  {
    "text": "general show me like a raise your hand",
    "start": "1525320",
    "end": "1528000"
  },
  {
    "text": "if you you interested in trying out the",
    "start": "1528000",
    "end": "1530960"
  },
  {
    "text": "etcd with a different back",
    "start": "1530960",
    "end": "1533200"
  },
  {
    "text": "end uh if it was",
    "start": "1533200",
    "end": "1536760"
  },
  {
    "text": "available okay",
    "start": "1536760",
    "end": "1538799"
  },
  {
    "text": "okay thank",
    "start": "1538799",
    "end": "1542000"
  },
  {
    "text": "you thank",
    "start": "1546640",
    "end": "1548520"
  },
  {
    "text": "you",
    "start": "1548520",
    "end": "1551520"
  }
]