[
  {
    "start": "0",
    "end": "10000"
  },
  {
    "text": "thank you everyone for coming to my",
    "start": "240",
    "end": "2790"
  },
  {
    "text": "presentation my topic today is",
    "start": "2790",
    "end": "5629"
  },
  {
    "text": "distributed workflow for micro service",
    "start": "5629",
    "end": "8069"
  },
  {
    "text": "tile application so micro service",
    "start": "8069",
    "end": "11490"
  },
  {
    "start": "10000",
    "end": "85000"
  },
  {
    "text": "architecture is adopted for breaking",
    "start": "11490",
    "end": "14429"
  },
  {
    "text": "down the big software application into",
    "start": "14429",
    "end": "17070"
  },
  {
    "text": "loose coupling service modules it",
    "start": "17070",
    "end": "20850"
  },
  {
    "text": "provides a lot of good things oh sorry",
    "start": "20850",
    "end": "25050"
  },
  {
    "text": "sorry about that",
    "start": "25050",
    "end": "26250"
  },
  {
    "text": "so the micro service architecture",
    "start": "26250",
    "end": "28080"
  },
  {
    "text": "provides a lot of good things such as",
    "start": "28080",
    "end": "30679"
  },
  {
    "text": "failure isolation scalability and it's",
    "start": "30679",
    "end": "35719"
  },
  {
    "text": "easy for the for the development but it",
    "start": "35719",
    "end": "39329"
  },
  {
    "text": "also introduced some new complexity",
    "start": "39329",
    "end": "43160"
  },
  {
    "text": "suppose you're gonna implement your",
    "start": "43160",
    "end": "46440"
  },
  {
    "text": "business logic a micro service design so",
    "start": "46440",
    "end": "50789"
  },
  {
    "text": "how you're gonna how you gonna manage",
    "start": "50789",
    "end": "54840"
  },
  {
    "text": "your message traveling across the",
    "start": "54840",
    "end": "56879"
  },
  {
    "text": "different modules and how you're gonna",
    "start": "56879",
    "end": "60440"
  },
  {
    "text": "coordinate your task execution on",
    "start": "60440",
    "end": "64619"
  },
  {
    "text": "different services and how you're gonna",
    "start": "64619",
    "end": "67350"
  },
  {
    "text": "handle your errors so to make your life",
    "start": "67350",
    "end": "71189"
  },
  {
    "text": "easier",
    "start": "71189",
    "end": "72030"
  },
  {
    "text": "I think a workflow pattern will give you",
    "start": "72030",
    "end": "75720"
  },
  {
    "text": "the capability to implement your",
    "start": "75720",
    "end": "78570"
  },
  {
    "text": "business service logic over loose",
    "start": "78570",
    "end": "82320"
  },
  {
    "text": "coupling service modules so before we",
    "start": "82320",
    "end": "87210"
  },
  {
    "start": "85000",
    "end": "128000"
  },
  {
    "text": "start I gotta say something about myself",
    "start": "87210",
    "end": "89729"
  },
  {
    "text": "my name is Ming Cheng and I former I was",
    "start": "89729",
    "end": "94200"
  },
  {
    "text": "a formers network engineer and now I",
    "start": "94200",
    "end": "96900"
  },
  {
    "text": "work as a software engineer in the",
    "start": "96900",
    "end": "99240"
  },
  {
    "text": "matter a company delivered the",
    "start": "99240",
    "end": "101869"
  },
  {
    "text": "integrated solution on Motty cloud",
    "start": "101869",
    "end": "105659"
  },
  {
    "text": "application management as well as kuben",
    "start": "105659",
    "end": "108420"
  },
  {
    "text": "Eddy based container management also",
    "start": "108420",
    "end": "111390"
  },
  {
    "text": "Yamada is a kubernetes certificate",
    "start": "111390",
    "end": "113610"
  },
  {
    "text": "service provider okay so my presentation",
    "start": "113610",
    "end": "117960"
  },
  {
    "text": "is to introduce the distributed workflow",
    "start": "117960",
    "end": "121409"
  },
  {
    "text": "pattern and its usage in micro service",
    "start": "121409",
    "end": "123570"
  },
  {
    "text": "style application using the matter OSS",
    "start": "123570",
    "end": "126509"
  },
  {
    "text": "workflow library so here's the outline",
    "start": "126509",
    "end": "130679"
  },
  {
    "start": "128000",
    "end": "155000"
  },
  {
    "text": "so first I will briefly introduce",
    "start": "130679",
    "end": "134290"
  },
  {
    "text": "what is microservice and what is or",
    "start": "134290",
    "end": "136930"
  },
  {
    "text": "workflow and what is the challenge about",
    "start": "136930",
    "end": "140410"
  },
  {
    "text": "the workflow management of micro",
    "start": "140410",
    "end": "142420"
  },
  {
    "text": "services then I will introduce you the",
    "start": "142420",
    "end": "145569"
  },
  {
    "text": "Nomura OSS workflow and try to do the",
    "start": "145569",
    "end": "148750"
  },
  {
    "text": "demo and we were also we were talking",
    "start": "148750",
    "end": "152980"
  },
  {
    "text": "about other solutions so what is micro",
    "start": "152980",
    "end": "157870"
  },
  {
    "start": "155000",
    "end": "182000"
  },
  {
    "text": "service architecture basically in micro",
    "start": "157870",
    "end": "162610"
  },
  {
    "text": "service architectures service model",
    "start": "162610",
    "end": "164680"
  },
  {
    "text": "walked independent and isolated in most",
    "start": "164680",
    "end": "168850"
  },
  {
    "text": "case we deploy those service module on",
    "start": "168850",
    "end": "171430"
  },
  {
    "text": "different containers in docker word and",
    "start": "171430",
    "end": "175090"
  },
  {
    "text": "the different service module will",
    "start": "175090",
    "end": "177190"
  },
  {
    "text": "communicate each other through let's say",
    "start": "177190",
    "end": "180489"
  },
  {
    "text": "REST API then what is workflow so what",
    "start": "180489",
    "end": "186220"
  },
  {
    "start": "182000",
    "end": "230000"
  },
  {
    "text": "flow basically is a cop is the",
    "start": "186220",
    "end": "189250"
  },
  {
    "text": "coordinator of a sequence of tasks for",
    "start": "189250",
    "end": "191920"
  },
  {
    "text": "it let's for taking an example if you",
    "start": "191920",
    "end": "195700"
  },
  {
    "text": "want to do a shopping workflow so you",
    "start": "195700",
    "end": "199209"
  },
  {
    "text": "first you gonna place placed order and",
    "start": "199209",
    "end": "201940"
  },
  {
    "text": "then you're gonna pay the order and then",
    "start": "201940",
    "end": "204640"
  },
  {
    "text": "you're gonna get your product shipped so",
    "start": "204640",
    "end": "207400"
  },
  {
    "text": "there are three tasks in this workflow",
    "start": "207400",
    "end": "209530"
  },
  {
    "text": "and each tasks are processed by",
    "start": "209530",
    "end": "212350"
  },
  {
    "text": "different service module and they are",
    "start": "212350",
    "end": "214540"
  },
  {
    "text": "sequential so we need a workflow to",
    "start": "214540",
    "end": "217630"
  },
  {
    "text": "coordinate those tasks execution and",
    "start": "217630",
    "end": "220530"
  },
  {
    "text": "this is a one LS tic web application so",
    "start": "220530",
    "end": "225250"
  },
  {
    "text": "what about you you want to scale your",
    "start": "225250",
    "end": "227049"
  },
  {
    "text": "application in a distributed environment",
    "start": "227049",
    "end": "229980"
  },
  {
    "text": "that means you have multiples",
    "start": "229980",
    "end": "232750"
  },
  {
    "text": "everything's you have multiple instance",
    "start": "232750",
    "end": "235090"
  },
  {
    "text": "for your web application accordingly you",
    "start": "235090",
    "end": "237549"
  },
  {
    "text": "have multiple instance for your workflow",
    "start": "237549",
    "end": "240299"
  },
  {
    "text": "then you will need a scheduling module",
    "start": "240299",
    "end": "243340"
  },
  {
    "text": "to coordinate those workflow instance",
    "start": "243340",
    "end": "248100"
  },
  {
    "start": "248000",
    "end": "291000"
  },
  {
    "text": "now we come to the micro services as we",
    "start": "248100",
    "end": "251889"
  },
  {
    "text": "mentioned before micro services module",
    "start": "251889",
    "end": "254139"
  },
  {
    "text": "are independent and isolated so the",
    "start": "254139",
    "end": "257709"
  },
  {
    "text": "challenges are how we're going to hold",
    "start": "257709",
    "end": "261940"
  },
  {
    "text": "an executive a synchronized over the",
    "start": "261940",
    "end": "266340"
  },
  {
    "text": "distributed in",
    "start": "266340",
    "end": "267639"
  },
  {
    "text": "across multiple services at the same",
    "start": "267639",
    "end": "270849"
  },
  {
    "text": "times we need to manage the tasks of",
    "start": "270849",
    "end": "273099"
  },
  {
    "text": "dependency and also we need to handle",
    "start": "273099",
    "end": "275439"
  },
  {
    "text": "the complex logic such as what if one of",
    "start": "275439",
    "end": "279729"
  },
  {
    "text": "the tasks is felt and you want to keep",
    "start": "279729",
    "end": "282219"
  },
  {
    "text": "going your your workflow or if the if",
    "start": "282219",
    "end": "285879"
  },
  {
    "text": "the one of the tasks fail do you want to",
    "start": "285879",
    "end": "287800"
  },
  {
    "text": "stop all the workflow kind of things and",
    "start": "287800",
    "end": "292560"
  },
  {
    "text": "namana OSS workflow solve those problems",
    "start": "292560",
    "end": "296830"
  },
  {
    "text": "it is an open source library written in",
    "start": "296830",
    "end": "300279"
  },
  {
    "text": "Java based on Apache zookeeper which is",
    "start": "300279",
    "end": "304569"
  },
  {
    "text": "a well know reliable and highly",
    "start": "304569",
    "end": "308080"
  },
  {
    "text": "available coordinator and and we also",
    "start": "308080",
    "end": "312789"
  },
  {
    "text": "use the curator as the kind to keeper",
    "start": "312789",
    "end": "315009"
  },
  {
    "text": "client it is lightweight and easy to use",
    "start": "315009",
    "end": "318810"
  },
  {
    "text": "so here needs to some a features of the",
    "start": "318810",
    "end": "323680"
  },
  {
    "start": "320000",
    "end": "365000"
  },
  {
    "text": "workflow library it is capable of manage",
    "start": "323680",
    "end": "327250"
  },
  {
    "text": "the tasks relationship",
    "start": "327250",
    "end": "328930"
  },
  {
    "text": "so the tasks relationship here mainly",
    "start": "328930",
    "end": "331330"
  },
  {
    "text": "means the tasks of dependency and it",
    "start": "331330",
    "end": "334240"
  },
  {
    "text": "could schedule tasks in the distributed",
    "start": "334240",
    "end": "336599"
  },
  {
    "text": "environment and the tasks type could be",
    "start": "336599",
    "end": "339969"
  },
  {
    "text": "customized also it gives a good support",
    "start": "339969",
    "end": "343930"
  },
  {
    "text": "for fault tolerant for example maybe you",
    "start": "343930",
    "end": "349060"
  },
  {
    "text": "maybe anything will go wrong during your",
    "start": "349060",
    "end": "351759"
  },
  {
    "text": "task execution say your service is",
    "start": "351759",
    "end": "354879"
  },
  {
    "text": "restarting or your zookeeper cluster",
    "start": "354879",
    "end": "357759"
  },
  {
    "text": "change state then the task execution",
    "start": "357759",
    "end": "361060"
  },
  {
    "text": "will be resumed there's some key",
    "start": "361060",
    "end": "366909"
  },
  {
    "start": "365000",
    "end": "433000"
  },
  {
    "text": "component in the workflow library first",
    "start": "366909",
    "end": "370659"
  },
  {
    "text": "is the workflow manager the workflow",
    "start": "370659",
    "end": "373810"
  },
  {
    "text": "manager will reduced for a specific task",
    "start": "373810",
    "end": "376479"
  },
  {
    "text": "type when the service initialized so the",
    "start": "376479",
    "end": "382479"
  },
  {
    "text": "workflow manager is responsible to",
    "start": "382479",
    "end": "384610"
  },
  {
    "text": "submit your tasks and the give",
    "start": "384610",
    "end": "386889"
  },
  {
    "text": "notification say there's a note there's",
    "start": "386889",
    "end": "390550"
  },
  {
    "text": "a new task note there and the scheduler",
    "start": "390550",
    "end": "394389"
  },
  {
    "text": "will manage the task note during the",
    "start": "394389",
    "end": "398800"
  },
  {
    "text": "task execution",
    "start": "398800",
    "end": "400490"
  },
  {
    "text": "it will ensure that most the task node",
    "start": "400490",
    "end": "405080"
  },
  {
    "text": "will be will not be executive trice",
    "start": "405080",
    "end": "408130"
  },
  {
    "text": "considering because it's a distributed",
    "start": "408130",
    "end": "410210"
  },
  {
    "text": "system right so and for the task queue",
    "start": "410210",
    "end": "413660"
  },
  {
    "text": "here is a wrapper of zookeeper note",
    "start": "413660",
    "end": "416449"
  },
  {
    "text": "where we put our tasks note in and the",
    "start": "416449",
    "end": "420169"
  },
  {
    "text": "task executor here is it's just a",
    "start": "420169",
    "end": "423590"
  },
  {
    "text": "executives read you can have multiple",
    "start": "423590",
    "end": "426259"
  },
  {
    "text": "tasks threads in a in your service",
    "start": "426259",
    "end": "428509"
  },
  {
    "text": "sorry multiple tasks executives read in",
    "start": "428509",
    "end": "430910"
  },
  {
    "text": "your service let's go deeper to take a",
    "start": "430910",
    "end": "436009"
  },
  {
    "start": "433000",
    "end": "517000"
  },
  {
    "text": "look at the task execution module so",
    "start": "436009",
    "end": "439669"
  },
  {
    "text": "when the workflow managers submits a",
    "start": "439669",
    "end": "442310"
  },
  {
    "text": "task it will create a new task note in",
    "start": "442310",
    "end": "445490"
  },
  {
    "text": "the scale in the task queue this is task",
    "start": "445490",
    "end": "448520"
  },
  {
    "text": "type specific and the executor as a",
    "start": "448520",
    "end": "453069"
  },
  {
    "text": "consumer will listen to those task queue",
    "start": "453069",
    "end": "456500"
  },
  {
    "text": "if there's a new node come in they will",
    "start": "456500",
    "end": "460039"
  },
  {
    "text": "be notified and then one of the task",
    "start": "460039",
    "end": "462740"
  },
  {
    "text": "executor say we have multiple tasks",
    "start": "462740",
    "end": "465020"
  },
  {
    "text": "executor instance right so one of the",
    "start": "465020",
    "end": "468680"
  },
  {
    "text": "executives read will pick up the tasks",
    "start": "468680",
    "end": "470810"
  },
  {
    "text": "and executor it so the scheduler here",
    "start": "470810",
    "end": "473750"
  },
  {
    "text": "will ensure that no other tasks executor",
    "start": "473750",
    "end": "478310"
  },
  {
    "text": "pick up the same task here and also the",
    "start": "478310",
    "end": "482870"
  },
  {
    "text": "scheduler here will make sure that if",
    "start": "482870",
    "end": "484699"
  },
  {
    "text": "the task has a sub task it will",
    "start": "484699",
    "end": "488590"
  },
  {
    "text": "extracted sub tasks and then executive",
    "start": "488590",
    "end": "490789"
  },
  {
    "text": "that so the whole executive model is",
    "start": "490789",
    "end": "495380"
  },
  {
    "text": "decentralized the workflow manager",
    "start": "495380",
    "end": "498639"
  },
  {
    "text": "instance and the task executor could be",
    "start": "498639",
    "end": "502940"
  },
  {
    "text": "on the same service but it's not not",
    "start": "502940",
    "end": "505340"
  },
  {
    "text": "necessary and it works well in the",
    "start": "505340",
    "end": "508460"
  },
  {
    "text": "distributed system and the task could be",
    "start": "508460",
    "end": "511849"
  },
  {
    "text": "a singer could be executive a",
    "start": "511849",
    "end": "514310"
  },
  {
    "text": "synchronized so here the diagram many",
    "start": "514310",
    "end": "521450"
  },
  {
    "text": "show how we manage the task a dependency",
    "start": "521450",
    "end": "524380"
  },
  {
    "text": "the task the task of dependency is",
    "start": "524380",
    "end": "528020"
  },
  {
    "text": "represented by a directed acyclic graph",
    "start": "528020",
    "end": "531740"
  },
  {
    "text": "so",
    "start": "531740",
    "end": "533960"
  },
  {
    "text": "the those tasks has no dependency like",
    "start": "533960",
    "end": "538160"
  },
  {
    "text": "task 1 task two and task 3 can be",
    "start": "538160",
    "end": "540980"
  },
  {
    "text": "executives concurrently but for task 4",
    "start": "540980",
    "end": "544670"
  },
  {
    "text": "and task 5 take example here should be",
    "start": "544670",
    "end": "548990"
  },
  {
    "text": "wait to the to destroy to the 1 2 3",
    "start": "548990",
    "end": "552290"
  },
  {
    "text": "finished executive that it will get",
    "start": "552290",
    "end": "554600"
  },
  {
    "text": "started so this so we can we can handle",
    "start": "554600",
    "end": "560120"
  },
  {
    "text": "the concurrent in a sequential tactics",
    "start": "560120",
    "end": "561920"
  },
  {
    "text": "you executor here here I give some",
    "start": "561920",
    "end": "568040"
  },
  {
    "text": "example code for how to beaut workflow",
    "start": "568040",
    "end": "572350"
  },
  {
    "text": "you might need a workflow manager",
    "start": "572350",
    "end": "574880"
  },
  {
    "text": "builder tribute the workflow and pass by",
    "start": "574880",
    "end": "577730"
  },
  {
    "text": "some related parameters like in which",
    "start": "577730",
    "end": "583399"
  },
  {
    "text": "namespace this namespace is its many",
    "start": "583399",
    "end": "586339"
  },
  {
    "text": "related to the zookeeper namespace so",
    "start": "586339",
    "end": "588830"
  },
  {
    "text": "the namespace to where you want to put",
    "start": "588830",
    "end": "590660"
  },
  {
    "text": "it your task in and so the auto cleaner",
    "start": "590660",
    "end": "595130"
  },
  {
    "text": "here is to say that when the tasks be",
    "start": "595130",
    "end": "599029"
  },
  {
    "text": "complete when task exaggeration be",
    "start": "599029",
    "end": "601670"
  },
  {
    "text": "completed you wanna you want to",
    "start": "601670",
    "end": "604610"
  },
  {
    "text": "automatically clean up those tasks notes",
    "start": "604610",
    "end": "606740"
  },
  {
    "text": "from your task queue so how many times",
    "start": "606740",
    "end": "610670"
  },
  {
    "text": "you want to wait after the completion",
    "start": "610670",
    "end": "612709"
  },
  {
    "text": "and how often you want to run your auto",
    "start": "612709",
    "end": "615680"
  },
  {
    "text": "cleaner you could define here also here",
    "start": "615680",
    "end": "621020"
  },
  {
    "text": "we can add in task executor",
    "start": "621020",
    "end": "623870"
  },
  {
    "text": "the task executor means means how many",
    "start": "623870",
    "end": "627370"
  },
  {
    "text": "concurrent tasks executives rather you",
    "start": "627370",
    "end": "630740"
  },
  {
    "text": "want for this task type yeah so and also",
    "start": "630740",
    "end": "639290"
  },
  {
    "start": "638000",
    "end": "665000"
  },
  {
    "text": "here is an example code for how to write",
    "start": "639290",
    "end": "642350"
  },
  {
    "text": "the executor take it simple here is I",
    "start": "642350",
    "end": "646400"
  },
  {
    "text": "just I just get a logger here to print",
    "start": "646400",
    "end": "650930"
  },
  {
    "text": "to that the task could be executive so",
    "start": "650930",
    "end": "654550"
  },
  {
    "text": "this is a one executor when you adding",
    "start": "654550",
    "end": "657829"
  },
  {
    "text": "the way adding multiple executor it will",
    "start": "657829",
    "end": "660140"
  },
  {
    "text": "exact you to task at the same time okay",
    "start": "660140",
    "end": "665810"
  },
  {
    "start": "665000",
    "end": "957000"
  },
  {
    "text": "now I'm going I'm gonna",
    "start": "665810",
    "end": "667730"
  },
  {
    "text": "some demo to see how how our workflow",
    "start": "667730",
    "end": "674449"
  },
  {
    "text": "library works in our production so this",
    "start": "674449",
    "end": "684440"
  },
  {
    "text": "is a new matter per web applications I'm",
    "start": "684440",
    "end": "688610"
  },
  {
    "text": "gonna create a new environment here use",
    "start": "688610",
    "end": "694699"
  },
  {
    "text": "a stop me or print",
    "start": "694699",
    "end": "698319"
  },
  {
    "text": "okay there's a lot of if there's a lot",
    "start": "716860",
    "end": "721120"
  },
  {
    "text": "of service here in the in this",
    "start": "721120",
    "end": "722710"
  },
  {
    "text": "application so each service is a you can",
    "start": "722710",
    "end": "725440"
  },
  {
    "text": "you can think it's the micro service so",
    "start": "725440",
    "end": "728320"
  },
  {
    "text": "why I want to demonstrate here is that I",
    "start": "728320",
    "end": "730870"
  },
  {
    "text": "want to show you how we manage the tasks",
    "start": "730870",
    "end": "733060"
  },
  {
    "text": "a dependency in our workflow if you're",
    "start": "733060",
    "end": "735760"
  },
  {
    "text": "looking to the briefing blueprint to see",
    "start": "735760",
    "end": "739150"
  },
  {
    "text": "the shop me and go to see the service",
    "start": "739150",
    "end": "745570"
  },
  {
    "text": "here you can see the dependency so for",
    "start": "745570",
    "end": "748330"
  },
  {
    "text": "cats lock it has no dependents and the",
    "start": "748330",
    "end": "751480"
  },
  {
    "text": "customer also but for deals it",
    "start": "751480",
    "end": "753790"
  },
  {
    "text": "dependents on catalog service and",
    "start": "753790",
    "end": "755710"
  },
  {
    "text": "customer service and the loyalty here is",
    "start": "755710",
    "end": "759490"
  },
  {
    "text": "also is the similar things so what I'm",
    "start": "759490",
    "end": "762220"
  },
  {
    "text": "gonna do here is try to update the image",
    "start": "762220",
    "end": "766300"
  },
  {
    "text": "of all those tasks all those service ok",
    "start": "766300",
    "end": "772150"
  },
  {
    "text": "let's say there's a there's a service",
    "start": "772150",
    "end": "774070"
  },
  {
    "text": "file here let's just remove that",
    "start": "774070",
    "end": "778890"
  },
  {
    "text": "yeah this is how my mother managed the",
    "start": "787670",
    "end": "790820"
  },
  {
    "text": "micro service so I'm gonna do a the",
    "start": "790820",
    "end": "795440"
  },
  {
    "text": "environment update to all the service",
    "start": "795440",
    "end": "797570"
  },
  {
    "text": "here I choose an image sorry I choose a",
    "start": "797570",
    "end": "805790"
  },
  {
    "text": "new image for all those service let's",
    "start": "805790",
    "end": "809510"
  },
  {
    "text": "say what happened so underneath for each",
    "start": "809510",
    "end": "817820"
  },
  {
    "text": "service the tag at the image update is",
    "start": "817820",
    "end": "822080"
  },
  {
    "text": "it is a independent task but the whole",
    "start": "822080",
    "end": "825290"
  },
  {
    "text": "workflow including all the tasks here",
    "start": "825290",
    "end": "827660"
  },
  {
    "text": "and will take care of the dependency of",
    "start": "827660",
    "end": "830150"
  },
  {
    "text": "the task for what what we have seen",
    "start": "830150",
    "end": "833180"
  },
  {
    "text": "before the catalog and the customers has",
    "start": "833180",
    "end": "836420"
  },
  {
    "text": "no dependency so those tasks will be",
    "start": "836420",
    "end": "838910"
  },
  {
    "text": "executive first and for the task like",
    "start": "838910",
    "end": "842540"
  },
  {
    "text": "deals or I think she's loyalty orders",
    "start": "842540",
    "end": "848180"
  },
  {
    "text": "are dependent on those on the tasks on",
    "start": "848180",
    "end": "850610"
  },
  {
    "text": "the previous tasks so it will be",
    "start": "850610",
    "end": "853070"
  },
  {
    "text": "executive later after those tasks after",
    "start": "853070",
    "end": "855710"
  },
  {
    "text": "the previous tasks be completed",
    "start": "855710",
    "end": "859810"
  },
  {
    "text": "yeah you can see that for those tasks",
    "start": "877830",
    "end": "882540"
  },
  {
    "text": "has no dependency it is executive",
    "start": "882540",
    "end": "885149"
  },
  {
    "text": "concurrently and for those tasks has",
    "start": "885149",
    "end": "888209"
  },
  {
    "text": "dependency we'll wait for the previous",
    "start": "888209",
    "end": "890339"
  },
  {
    "text": "tasks finished executive then it starts",
    "start": "890339",
    "end": "893490"
  },
  {
    "text": "executive",
    "start": "893490",
    "end": "896120"
  },
  {
    "text": "okay so yeah this is this is what we",
    "start": "914270",
    "end": "918170"
  },
  {
    "text": "call a workflow so basically it consists",
    "start": "918170",
    "end": "922130"
  },
  {
    "text": "of multiple tasks and tasks over",
    "start": "922130",
    "end": "926240"
  },
  {
    "text": "different microservices",
    "start": "926240",
    "end": "927830"
  },
  {
    "text": "and we just managed to do it here yeah",
    "start": "927830",
    "end": "932899"
  },
  {
    "text": "okay so this is finished let's go back",
    "start": "932899",
    "end": "937820"
  },
  {
    "text": "to the slides what I just show is how we",
    "start": "937820",
    "end": "945670"
  },
  {
    "text": "is how we use our workflow you use the",
    "start": "945670",
    "end": "950240"
  },
  {
    "text": "dimana workflow library to manage the",
    "start": "950240",
    "end": "953779"
  },
  {
    "text": "workflow in our productions of course",
    "start": "953779",
    "end": "957620"
  },
  {
    "start": "957000",
    "end": "1015000"
  },
  {
    "text": "there's other great solutions in the",
    "start": "957620",
    "end": "961670"
  },
  {
    "text": "industry such as Netflix conductor which",
    "start": "961670",
    "end": "965060"
  },
  {
    "text": "is the orchestrator but also provides a",
    "start": "965060",
    "end": "967970"
  },
  {
    "text": "feature that you can define your task",
    "start": "967970",
    "end": "970730"
  },
  {
    "text": "execution using a JSON DSL others like",
    "start": "970730",
    "end": "975709"
  },
  {
    "text": "integrating call workflows it's a cloud",
    "start": "975709",
    "end": "979240"
  },
  {
    "text": "application so you can use that in your",
    "start": "979240",
    "end": "983180"
  },
  {
    "text": "in your cloud applications across",
    "start": "983180",
    "end": "986930"
  },
  {
    "text": "multiple machines these both are great",
    "start": "986930",
    "end": "991640"
  },
  {
    "text": "solutions and great and integrations",
    "start": "991640",
    "end": "994880"
  },
  {
    "text": "solutions it's just - we start with our",
    "start": "994880",
    "end": "998620"
  },
  {
    "text": "zookeeper and the curator framework and",
    "start": "998620",
    "end": "1001329"
  },
  {
    "text": "we just want to write a library which is",
    "start": "1001329",
    "end": "1004779"
  },
  {
    "text": "light weighted and easy to use easy to",
    "start": "1004779",
    "end": "1007180"
  },
  {
    "text": "plug in so we develop our own yeah so",
    "start": "1007180",
    "end": "1013950"
  },
  {
    "text": "that's pretty much about it so thank you",
    "start": "1013950",
    "end": "1018610"
  },
  {
    "start": "1015000",
    "end": "1154000"
  },
  {
    "text": "for coming so I just wanted to see if",
    "start": "1018610",
    "end": "1021640"
  },
  {
    "text": "you guys have any questions about that",
    "start": "1021640",
    "end": "1025620"
  },
  {
    "text": "yes",
    "start": "1026640",
    "end": "1029640"
  },
  {
    "text": "well from our experience a single task",
    "start": "1036190",
    "end": "1041420"
  },
  {
    "text": "workflow always - and for what why show",
    "start": "1041420",
    "end": "1044810"
  },
  {
    "text": "before it's a like wrap the tasks wrap",
    "start": "1044810",
    "end": "1048079"
  },
  {
    "text": "tactics to task a chain like you can do",
    "start": "1048080",
    "end": "1051370"
  },
  {
    "text": "dozen of tasks in your workflow but yes",
    "start": "1051370",
    "end": "1055490"
  },
  {
    "text": "I haven't tested I mean in our current",
    "start": "1055490",
    "end": "1059240"
  },
  {
    "text": "production we haven't faced the issues",
    "start": "1059240",
    "end": "1061610"
  },
  {
    "text": "that we have hundreds of tasks there so",
    "start": "1061610",
    "end": "1065030"
  },
  {
    "text": "yeah maybe I will",
    "start": "1065030",
    "end": "1066410"
  },
  {
    "text": "we were trial at technically I think it",
    "start": "1066410",
    "end": "1070730"
  },
  {
    "text": "supports any other questions yes our",
    "start": "1070730",
    "end": "1082730"
  },
  {
    "text": "production",
    "start": "1082730",
    "end": "1083570"
  },
  {
    "text": "you mean production or workflow library",
    "start": "1083570",
    "end": "1087010"
  },
  {
    "text": "there's two different thing because our",
    "start": "1087010",
    "end": "1089120"
  },
  {
    "text": "workflow library is the open source",
    "start": "1089120",
    "end": "1090950"
  },
  {
    "text": "library there's a github link on the",
    "start": "1090950",
    "end": "1094130"
  },
  {
    "text": "slides but our production is yeah it's a",
    "start": "1094130",
    "end": "1097760"
  },
  {
    "text": "protection bill in this production yeah",
    "start": "1097760",
    "end": "1101470"
  },
  {
    "text": "I'm not so sure about that",
    "start": "1102730",
    "end": "1106520"
  },
  {
    "text": "but I think if you're using if you",
    "start": "1106520",
    "end": "1110660"
  },
  {
    "text": "already use because we use a zookeeper",
    "start": "1110660",
    "end": "1114170"
  },
  {
    "text": "and curator sometimes it's to be honest",
    "start": "1114170",
    "end": "1117350"
  },
  {
    "text": "it's a it's kind of difficult to monitor",
    "start": "1117350",
    "end": "1120290"
  },
  {
    "text": "and troubleshooting them but so if you",
    "start": "1120290",
    "end": "1123350"
  },
  {
    "text": "already have your zookeeper cluster runs",
    "start": "1123350",
    "end": "1125780"
  },
  {
    "text": "maybe you can have a try okay so by the",
    "start": "1125780",
    "end": "1135710"
  },
  {
    "text": "way our company have boosts downstairs",
    "start": "1135710",
    "end": "1140000"
  },
  {
    "text": "so if you guys have any interests or you",
    "start": "1140000",
    "end": "1142970"
  },
  {
    "text": "want to know more about a workflow",
    "start": "1142970",
    "end": "1145310"
  },
  {
    "text": "library or our production you're very",
    "start": "1145310",
    "end": "1148310"
  },
  {
    "text": "welcome to come to our booth okay thank",
    "start": "1148310",
    "end": "1152270"
  },
  {
    "text": "you",
    "start": "1152270",
    "end": "1152620"
  },
  {
    "text": "[Applause]",
    "start": "1152620",
    "end": "1156789"
  }
]