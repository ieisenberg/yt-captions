[
  {
    "text": "okay I think we're gonna get started this is uh welcome to the run times track I'm Ian Lewis Alberta the hosts",
    "start": "420",
    "end": "8010"
  },
  {
    "text": "today so the first up we have the building ka kada kubernetes Pacific hypervisor and",
    "start": "8010",
    "end": "16039"
  },
  {
    "text": "we have as speakers we have Andrea Florescu who is a software engineer at",
    "start": "16039",
    "end": "23630"
  },
  {
    "text": "Amazon who works on the firecracker VM and we have Samuel Ortiz who works on at",
    "start": "23630",
    "end": "34980"
  },
  {
    "text": "Intel on kada and rust vmn and contributes to a",
    "start": "34980",
    "end": "41250"
  },
  {
    "text": "number of open source projects like cryo or creo depending on how you pronounce it so with that I'm going to welcome",
    "start": "41250",
    "end": "50100"
  },
  {
    "text": "them to the stage good morning everyone",
    "start": "50100",
    "end": "59039"
  },
  {
    "text": "thanks for joining this wonderful session today Andrew and myself are",
    "start": "59039",
    "end": "64920"
  },
  {
    "text": "going to talk about building a kubernetes custom and specific hypervisor",
    "start": "64920",
    "end": "70979"
  },
  {
    "text": "well actually we are not going to talk about that because I need some tiny",
    "start": "70979",
    "end": "78150"
  },
  {
    "text": "modifications to the presentation and it's not working oopsie nope sorry",
    "start": "78150",
    "end": "91880"
  },
  {
    "text": "yeah I mean the surprise but yeah so",
    "start": "107460",
    "end": "117939"
  },
  {
    "text": "today we are actually going to talk about building a kubernetes specific vmm and not a hypervisor and to understand",
    "start": "117939",
    "end": "125470"
  },
  {
    "text": "why I'm saying that let's just look a bit at a typical Linux virtualization",
    "start": "125470",
    "end": "131260"
  },
  {
    "text": "stack so we have the Linux kernel and inside a Linux kernel we have KVM and",
    "start": "131260",
    "end": "137190"
  },
  {
    "text": "KVM is essentially making the Linux kernel to behave like a hypervisor but",
    "start": "137190",
    "end": "142299"
  },
  {
    "text": "we are not going to talk about this today so now what we are going to talk about is actually a layer up so we are",
    "start": "142299",
    "end": "147910"
  },
  {
    "text": "going to talk about virtual machine monitors or VMs which are going to be used for managing virtual machines and",
    "start": "147910",
    "end": "155069"
  },
  {
    "text": "with that I will let Samuel to get back to his presentation about containers",
    "start": "155069",
    "end": "160859"
  },
  {
    "text": "thanks Andrea for the correction I appreciate so yeah we're going to talk",
    "start": "160859",
    "end": "166510"
  },
  {
    "text": "about VMs can I call it a Kaiser we're",
    "start": "166510",
    "end": "171519"
  },
  {
    "text": "going to talk about VMs and containers and well it's a communities conference",
    "start": "171519",
    "end": "177459"
  },
  {
    "text": "it's all about containers in workloads and you may wonder what's the relationship between containers and vmm",
    "start": "177459",
    "end": "184780"
  },
  {
    "text": "containers and hardware virtualization and this is a strong relationship if I",
    "start": "184780",
    "end": "192250"
  },
  {
    "text": "can make the clicker work so the reason why we're talking about VM and however virtualization today is because we want",
    "start": "192250",
    "end": "198940"
  },
  {
    "text": "to have and define harder virtualization and VMs in hypervisors in general as a",
    "start": "198940",
    "end": "207100"
  },
  {
    "text": "container isolation layer as yet another container isolation layer so what I mean",
    "start": "207100",
    "end": "213880"
  },
  {
    "text": "by container isolation layer I'm going to just explain that quickly typically when you run your continued work on the",
    "start": "213880",
    "end": "219340"
  },
  {
    "text": "hosts you obviously want to isolate contain your workload",
    "start": "219340",
    "end": "225470"
  },
  {
    "text": "and prevent it from reaching other quickly other workloads and reaching the whole horses and to do that you're gonna",
    "start": "225470",
    "end": "232880"
  },
  {
    "text": "add isolation layers as many as you need as many as you want and you would",
    "start": "232880",
    "end": "238280"
  },
  {
    "text": "typically add namespaces see groups second rules to well isolate your",
    "start": "238280",
    "end": "244340"
  },
  {
    "text": "continued work from from the host you don't want you to be able to call any and every Siskel's you want to be",
    "start": "244340",
    "end": "252860"
  },
  {
    "text": "restricted on how many resources it can use through C groups and so on so those are all isolation layers and",
    "start": "252860",
    "end": "258470"
  },
  {
    "text": "what we're trying to do with hardware virtualization EMM in hypervisors we",
    "start": "258470",
    "end": "264860"
  },
  {
    "text": "just want to add yet another isolation layer to this story so we want to be mm to be another",
    "start": "264860",
    "end": "271580"
  },
  {
    "text": "isolation little layer that you can add to your continued work load depending on the need for security and the level of",
    "start": "271580",
    "end": "278930"
  },
  {
    "text": "security that you want to reach with your with your application so this is",
    "start": "278930",
    "end": "285140"
  },
  {
    "text": "this is very well aligned with the with the overall container security architecture and design which is mostly",
    "start": "285140",
    "end": "291590"
  },
  {
    "text": "about defense in depth the way you build your security story at least for your",
    "start": "291590",
    "end": "296690"
  },
  {
    "text": "continued workload is by defining how many of those layers you want to add you",
    "start": "296690",
    "end": "302300"
  },
  {
    "text": "want to be able to say I just want to be able to run my containers through namespaces and nothing else or you want",
    "start": "302300",
    "end": "309830"
  },
  {
    "text": "to add as many as you want and what we're doing is adding hardware virtualization as another isolation",
    "start": "309830",
    "end": "316280"
  },
  {
    "text": "layer and effectively making containers as secure as virtual machines okay so",
    "start": "316280",
    "end": "323030"
  },
  {
    "text": "you may think that this talk is all about how we're going to do this how we're going to add this and define this",
    "start": "323030",
    "end": "329240"
  },
  {
    "text": "as an equation layer but in reality this is already integrated this already",
    "start": "329240",
    "end": "334760"
  },
  {
    "text": "exists you can already today run your kubernetes cluster and use some vm m as",
    "start": "334760",
    "end": "342290"
  },
  {
    "text": "an isolation layer it seamlessly integrated through the work that we've been doing with with a few other people",
    "start": "342290",
    "end": "349120"
  },
  {
    "text": "through signaled and the OCR runtime specification and today you can you can",
    "start": "349120",
    "end": "355430"
  },
  {
    "text": "define a you can specify a runtime class and have you container workloads running through the VA and",
    "start": "355430",
    "end": "361780"
  },
  {
    "text": "depending on the runtime class that you define even through the OCI specification the actual run",
    "start": "361780",
    "end": "369160"
  },
  {
    "text": "specification if you if you want you can define which virtual machine you're",
    "start": "369160",
    "end": "374770"
  },
  {
    "text": "going to use how which guests colonel you're going to use which I provides are you going to use and and how you're",
    "start": "374770",
    "end": "380530"
  },
  {
    "text": "going to configure it so this is all integrated today in the in the specification that I'm in relating here",
    "start": "380530",
    "end": "388230"
  },
  {
    "text": "thanks and so there's one well known",
    "start": "398640",
    "end": "404410"
  },
  {
    "text": "implementation of those specification on how you're gonna add a VM as a isolation",
    "start": "404410",
    "end": "409720"
  },
  {
    "text": "layer and that's Kara continuous how many of you here have heard about CARICOM teams yay we made it I should",
    "start": "409720",
    "end": "416980"
  },
  {
    "text": "take a picture of this and send it to my management it's been long it's been a long road so yeah Kara container is a it's kind of",
    "start": "416980",
    "end": "423730"
  },
  {
    "text": "a canonical implementation of this of this work and the Kara container team has been working with with the",
    "start": "423730",
    "end": "429340"
  },
  {
    "text": "communities six and working group to make that happen and the way you you do",
    "start": "429340",
    "end": "435970"
  },
  {
    "text": "it today is by simply simply adding a runtime class name to your to your",
    "start": "435970",
    "end": "441280"
  },
  {
    "text": "definition so by saying I want to run karakuri I mean as my runtime class",
    "start": "441280",
    "end": "447310"
  },
  {
    "text": "you're basically going to run your continual workload inside a QM you define virtual machine so you've EMM is",
    "start": "447310",
    "end": "454330"
  },
  {
    "text": "gonna be key mu and your runtime is going to be Kara continue you can do something similar and instead of using",
    "start": "454330",
    "end": "460140"
  },
  {
    "text": "accumulative AMM you can decide okay I'm gonna use firecracker as a PMF and this is well another runtime class it's gotta",
    "start": "460140",
    "end": "467320"
  },
  {
    "text": "FC and callek contain is going to be the runtime firecracker is gonna be the VM and it's as simple as it gets",
    "start": "467320",
    "end": "473020"
  },
  {
    "text": "yes okay so you may think that it's that it's very simple and this diagram make",
    "start": "473020",
    "end": "479440"
  },
  {
    "text": "it look that it's very very simple but if you look at little deeper into the",
    "start": "479440",
    "end": "485440"
  },
  {
    "text": "architecture and how this is implemented it's it's not that simple the whole continued ecosystem",
    "start": "485440",
    "end": "491070"
  },
  {
    "text": "a lot of assumption on the fact that the container workload is actually run on the host CPU bare-metal on the host and",
    "start": "491070",
    "end": "498990"
  },
  {
    "text": "so to make that happen and the way it's implemented today is through an actual",
    "start": "498990",
    "end": "504480"
  },
  {
    "text": "virtual machine so when you use qmu as UV mm or firecracker as UV mm for for",
    "start": "504480",
    "end": "511170"
  },
  {
    "text": "cala containers you're going to be running your workload and your pod inside a full-blown virtual machine so",
    "start": "511170",
    "end": "516810"
  },
  {
    "text": "your pond is going to do part is going to run on top of the real Linux run the entire dedicated later kernel to your",
    "start": "516810",
    "end": "522960"
  },
  {
    "text": "pod there's going to be a cat eye agent running on the on the virtual machine to basically handle multiplex and manage",
    "start": "522960",
    "end": "529290"
  },
  {
    "text": "the all the commands that you get from from your runtime into into your workload so even the even the picture on",
    "start": "529290",
    "end": "535890"
  },
  {
    "text": "the right is still a simplified description of what it takes you to actually make that happen so we've been",
    "start": "535890",
    "end": "544290"
  },
  {
    "text": "talking about memes and as of today with",
    "start": "544290",
    "end": "550170"
  },
  {
    "text": "with Kara continues you can run your workloads through different VMs as I said depending on the runtime class that",
    "start": "550170",
    "end": "555660"
  },
  {
    "text": "you select you're gonna have different VMs running your workload and we support three different VMs we support key mu we",
    "start": "555660",
    "end": "562110"
  },
  {
    "text": "support nimi which is a stripped down version of kami and we also support",
    "start": "562110",
    "end": "567470"
  },
  {
    "text": "firecracker maintainer she's she can help okay so the default vml for Kara",
    "start": "568130",
    "end": "575070"
  },
  {
    "text": "container is easy I mean key Musa is a high-performance vmm it's it's very",
    "start": "575070",
    "end": "580860"
  },
  {
    "text": "stable it's also very versatile so it supports all sort of architecture is",
    "start": "580860",
    "end": "585900"
  },
  {
    "text": "suppose all sort of platforms it emulates hundreds of devices so it basically does everything and anything",
    "start": "585900",
    "end": "592230"
  },
  {
    "text": "you can think about when when basically building a virtual machine the cost for",
    "start": "592230",
    "end": "597420"
  },
  {
    "text": "this is that the QA codebase is is it's it's more than 1.5 million lines of code",
    "start": "597420",
    "end": "602990"
  },
  {
    "text": "and it's footprint is also a relatively large so you get the performance in the",
    "start": "602990",
    "end": "609060"
  },
  {
    "text": "verse of DT and obviously a larger",
    "start": "609060",
    "end": "614280"
  },
  {
    "text": "footprint on the other side of the of the VM spectrum there's firecracker",
    "start": "614280",
    "end": "619790"
  },
  {
    "text": "firecracker is much much much smaller than than GM you but it also has a much narrower focus on",
    "start": "619790",
    "end": "627180"
  },
  {
    "text": "one specific use case which is service it's designed for supporting",
    "start": "627180",
    "end": "632410"
  },
  {
    "text": "surveillance it's it's running AWS lambda I don't want to run yes it's",
    "start": "632410",
    "end": "639430"
  },
  {
    "text": "running it's running Eddie Willis lambda it's very very small so we're talking about 20 30 line thousand lines of code",
    "start": "639430",
    "end": "646150"
  },
  {
    "text": "not thousand lines of code and well it's very small and as a consequence the",
    "start": "646150",
    "end": "652600"
  },
  {
    "text": "scope of Phi cracker is also smaller than Jimmy it's so small that it cannot support all container workloads so if",
    "start": "652600",
    "end": "658960"
  },
  {
    "text": "you continue workloads needs to mount a volume which is fairly typical with kubernetes you're not going to be able",
    "start": "658960",
    "end": "664510"
  },
  {
    "text": "to do that because fire cracker doesn't support shared file system from the host if your work loss needs to assign your",
    "start": "664510",
    "end": "671890"
  },
  {
    "text": "host GPU into your container you won't be able to do that with firecracker firecracker does not support so there's",
    "start": "671890",
    "end": "679660"
  },
  {
    "text": "a few things in a continual definition that firecracker does not support but if you want to do server looks like a work",
    "start": "679660",
    "end": "686530"
  },
  {
    "text": "load then it's definitely the right approach so I think we have like this",
    "start": "686530",
    "end": "694300"
  },
  {
    "text": "big elephant in the room when we're saying we're adding hardware virtualization as yet another isolation",
    "start": "694300",
    "end": "700210"
  },
  {
    "text": "layer obviously for security reasons we want to make containers and secure as VMs but on the other hands we're adding",
    "start": "700210",
    "end": "706510"
  },
  {
    "text": "this new software component here a vmm that can be large or very large like um",
    "start": "706510",
    "end": "712720"
  },
  {
    "text": "Yui that can be very small but limited but basically we're on one hand we're adding we're saying we want to improve",
    "start": "712720",
    "end": "718360"
  },
  {
    "text": "security and the security for a story of containers and kubernetes and then on the other hand we're adding a software",
    "start": "718360",
    "end": "723970"
  },
  {
    "text": "component that's yeah can extend the sorry the the attack surface of your of",
    "start": "723970",
    "end": "730120"
  },
  {
    "text": "your container workload so what we believe is that there is a need for defining a vmm that supports all",
    "start": "730120",
    "end": "738640"
  },
  {
    "text": "continued workloads but only continuous nothing less nothing more not qmu that",
    "start": "738640",
    "end": "744220"
  },
  {
    "text": "supports basically everything and something larger than firecracker to support all container workloads so this",
    "start": "744220",
    "end": "750850"
  },
  {
    "text": "is mostly what we want to talk about today finally so",
    "start": "750850",
    "end": "757000"
  },
  {
    "text": "before going into more details about this we need to understand what it means for vmm to support all container workers",
    "start": "757000",
    "end": "763580"
  },
  {
    "text": "and we need to understand what's what a container runtime needs to do and to do",
    "start": "763580",
    "end": "770300"
  },
  {
    "text": "to do that we're going to look at specific continued runtime specifications we could look at the OSI",
    "start": "770300",
    "end": "776450"
  },
  {
    "text": "I want which is a low-level specification for continued runtime but instead we're going to focus only on the",
    "start": "776450",
    "end": "782990"
  },
  {
    "text": "communities your eye specification as a matter of fact the Sira implementation",
    "start": "782990",
    "end": "788180"
  },
  {
    "text": "for most of them end up calling an OCR runtime eventually so it makes sense to you look at only only the CRI stuff so",
    "start": "788180",
    "end": "796100"
  },
  {
    "text": "what we're going to do now is look at the CRI specification and try to map that to actual hardware virtualization",
    "start": "796100",
    "end": "803360"
  },
  {
    "text": "requirements and technology to understand what we need to implement in vmm in a cumulative specific vmn okay so",
    "start": "803360",
    "end": "811900"
  },
  {
    "text": "if you look at this hero specification there are a few interesting things one of them the very first one obviously is",
    "start": "811900",
    "end": "818240"
  },
  {
    "text": "that you're going to need to send commands into your container water you're going to be able to interact with",
    "start": "818240",
    "end": "823520"
  },
  {
    "text": "your continual inside the virtual machine it seems very obvious it seems",
    "start": "823520",
    "end": "829040"
  },
  {
    "text": "like a natural thing to do but it's it's actually not you don't want to run an SSH server inside your virtual machine",
    "start": "829040",
    "end": "834830"
  },
  {
    "text": "to do that instead you want to be able to open like a JRPG socket directly into your virtual machine and so to do that",
    "start": "834830",
    "end": "841310"
  },
  {
    "text": "you're gonna you're gonna need a implementation a virtual circuit kind of implementation you're obviously going to",
    "start": "841310",
    "end": "848420"
  },
  {
    "text": "need a container image your container water is gonna run inside your virtual machine and to do that you're gonna be",
    "start": "848420",
    "end": "854510"
  },
  {
    "text": "you're gonna have to mount the container image from your overlay implementation on the host inside the virtual machine",
    "start": "854510",
    "end": "861640"
  },
  {
    "text": "that's that's something you obviously do when you're running on bare metal just",
    "start": "861640",
    "end": "866780"
  },
  {
    "text": "mount or run your container directly from the host when you're running an inside a virtual machine it's much more",
    "start": "866780",
    "end": "872390"
  },
  {
    "text": "difficult and to do that you're going to need virtual storage obviously an obvious requirement is networking",
    "start": "872390",
    "end": "878710"
  },
  {
    "text": "CRI specifies that you you may need networking endpoints video container",
    "start": "878710",
    "end": "883790"
  },
  {
    "text": "that's fairly typical so you're gonna need virtual networking as well",
    "start": "883790",
    "end": "889230"
  },
  {
    "text": "a few other interesting requirements like the device structure inside the year the CRI specification that's says",
    "start": "889230",
    "end": "896940"
  },
  {
    "text": "well you might want to actually mount a device into your container what you're gonna be you're going to want to mount",
    "start": "896940",
    "end": "904530"
  },
  {
    "text": "your GPU to the ml type of workloads inside your your your Cuttino workloads that's very easy to do with you with a",
    "start": "904530",
    "end": "911100"
  },
  {
    "text": "bare metal container you just basically mount your or by mount your your /dev entries into your continued workload",
    "start": "911100",
    "end": "917060"
  },
  {
    "text": "with the virtual machine it's a lot more difficult you need to directly assign an",
    "start": "917060",
    "end": "922470"
  },
  {
    "text": "entire device into your your virtual machine it's involves iommu VF i/o and",
    "start": "922470",
    "end": "928170"
  },
  {
    "text": "so on so what you're going to need is direct device assignment the mound structure you want to be able to mount",
    "start": "928170",
    "end": "935190"
  },
  {
    "text": "volumes and share secrets with your continued workloads again very easy to do with a regular container with a",
    "start": "935190",
    "end": "941910"
  },
  {
    "text": "virtual machine that means you're going to have to implement the whole shared file system paravirtualized implementation for your container water",
    "start": "941910",
    "end": "948810"
  },
  {
    "text": "so you want your virtual machine to be able to share a very tiny part of your filesystem and mount it inside you",
    "start": "948810",
    "end": "954540"
  },
  {
    "text": "inside your virtual machine and finally the sheer ice pack says that you have to",
    "start": "954540",
    "end": "960240"
  },
  {
    "text": "be able to update your container resources maybe your container is going to need more CPUs or less CPUs or more",
    "start": "960240",
    "end": "967650"
  },
  {
    "text": "memory and to do that well again very easy on bare metal continues with",
    "start": "967650",
    "end": "973530"
  },
  {
    "text": "virtual machine you're gonna have to hot plug things into into the virtual machine adding a CPU means you need to",
    "start": "973530",
    "end": "979050"
  },
  {
    "text": "make your virtual machine aware that a new CPU is showing up more memory is the",
    "start": "979050",
    "end": "984150"
  },
  {
    "text": "same thing removing memory is is very difficult so you're going to need resource hot",
    "start": "984150",
    "end": "989190"
  },
  {
    "text": "plugging how does that translate into actual virtual machine and hardware virtualization software technologies for",
    "start": "989190",
    "end": "996930"
  },
  {
    "text": "the virtual circuit storage networking well essentially you're going to need para virtualized implementations and the",
    "start": "996930",
    "end": "1003500"
  },
  {
    "text": "typical way to do this in Linux is vertol or maybe the host user which is a user space implementation while not user",
    "start": "1003500",
    "end": "1011840"
  },
  {
    "text": "space but a deferred implementation over time where you have separate device simulation for direct device assignment",
    "start": "1011840",
    "end": "1017810"
  },
  {
    "text": "we're going to need a vfi implementation so VF i/o is the kernel API for",
    "start": "1017810",
    "end": "1022970"
  },
  {
    "text": "handling iommu based devices so you're gonna be able to talk to your device through iommu and from user space and",
    "start": "1022970",
    "end": "1030370"
  },
  {
    "text": "take that device and assign it to your virtual machine so that your virtual machine as a process it's gonna see",
    "start": "1030370",
    "end": "1036020"
  },
  {
    "text": "directly this device and use it directly almost as fast as bare metal usage the",
    "start": "1036020",
    "end": "1041839"
  },
  {
    "text": "share spy system requirements translate into again a para virtualized implementation right now we support nine",
    "start": "1041839",
    "end": "1047630"
  },
  {
    "text": "PFS we're going to duplicate that for Verta of s which is a new implementation and finally resource hot plugging there",
    "start": "1047630",
    "end": "1055040"
  },
  {
    "text": "are many ways to do hot plug into in you want to do memory CPU and BD multiply",
    "start": "1055040",
    "end": "1060320"
  },
  {
    "text": "and and other things and one way to do that is to go for a CPI so you can use a",
    "start": "1060320",
    "end": "1066890"
  },
  {
    "text": "CPI to do hop like or you can use PCI to do device hot plug but you won't be able",
    "start": "1066890",
    "end": "1072140"
  },
  {
    "text": "to do a CPU hot plug with PCI for example so when you go full a CPI you can do an entire hop back support for",
    "start": "1072140",
    "end": "1079520"
  },
  {
    "text": "your virtual machine and go as you probably guess implementing a full a CPI in your VM is not a small thing so",
    "start": "1079520",
    "end": "1088720"
  },
  {
    "text": "compare that those requirements to your permit or containers requirements when",
    "start": "1088720",
    "end": "1094070"
  },
  {
    "text": "you do a by mount in your with your bare metal continues you can you can have to do an entire shell file system or an",
    "start": "1094070",
    "end": "1100460"
  },
  {
    "text": "entire vf5 implementation for your virtual machines and so on so if there are people in the room that are working",
    "start": "1100460",
    "end": "1105680"
  },
  {
    "text": "on CRI specification and runtime specification please look at this and understand how difficult it is for",
    "start": "1105680",
    "end": "1112580"
  },
  {
    "text": "anything that you add the specification to support that through hardware virtualization okay so we now have a",
    "start": "1112580",
    "end": "1119750"
  },
  {
    "text": "small set of requirements for our VM m and if you look at GM you for example it supports all of this if you look at",
    "start": "1119750",
    "end": "1126170"
  },
  {
    "text": "firecracker it supports some of this not all of it and what we want to do is",
    "start": "1126170",
    "end": "1131540"
  },
  {
    "text": "build a vm m a virtualization stack that only supports this and nothing else so",
    "start": "1131540",
    "end": "1137830"
  },
  {
    "text": "where could we get those components and I think Andrea wants to talk about this yeah this is very exciting process so",
    "start": "1137830",
    "end": "1147070"
  },
  {
    "text": "yeah so all these components you can get them from rice vm m and res vm m is a",
    "start": "1147070",
    "end": "1154070"
  },
  {
    "text": "new open source project that is providing virtualization components building blocks for building",
    "start": "1154070",
    "end": "1160520"
  },
  {
    "text": "your own virtual machine monitors or hypervisors if that's your thing and to",
    "start": "1160520",
    "end": "1167900"
  },
  {
    "text": "understand better let's look a bit at why we decided to start this project oh",
    "start": "1167900",
    "end": "1174050"
  },
  {
    "text": "and by the way the virtualization components are crate which is rust packages so the whole project is rust",
    "start": "1174050",
    "end": "1181720"
  },
  {
    "text": "now so let's see why we decided to start rust be mmm and the first reason is",
    "start": "1181720",
    "end": "1188360"
  },
  {
    "text": "actually to reduce code duplication there are already two virtual machine monitors there are written in rust one",
    "start": "1188360",
    "end": "1195020"
  },
  {
    "text": "of them is cross VM which is providing isolation for application in Chrome OS and then we have fire cracker which",
    "start": "1195020",
    "end": "1201020"
  },
  {
    "text": "provides isolation for multi tenant workloads in the cloud so that will be AWS lambda and AWS party today but that",
    "start": "1201020",
    "end": "1210530"
  },
  {
    "text": "is not the only reason and that is not a reason that might be interesting for everybody here but when we are sharing",
    "start": "1210530",
    "end": "1217520"
  },
  {
    "text": "these components because they are both written in rust and they are similar in some ways we also have to provide a",
    "start": "1217520",
    "end": "1222860"
  },
  {
    "text": "clean interface in order for them to be so for these components to be easily used by multiple projects and then we",
    "start": "1222860",
    "end": "1230090"
  },
  {
    "text": "also want to focus on security and the stability and we want to provide a high",
    "start": "1230090",
    "end": "1235190"
  },
  {
    "text": "standard for these components mostly because they are going to not be only used by one project but they are going",
    "start": "1235190",
    "end": "1240740"
  },
  {
    "text": "to be used by multiple projects so you want to make sure that they are well tested and they work for every use case",
    "start": "1240740",
    "end": "1247070"
  },
  {
    "text": "out there now with these separate components that we are having it's also",
    "start": "1247070",
    "end": "1252470"
  },
  {
    "text": "it gives us benefit and that benefit is that it's much easier to do security testing in terms of fuzzing",
    "start": "1252470",
    "end": "1259190"
  },
  {
    "text": "so you now have this component that has a clean interface that you can crawl into and it's much easier to provide",
    "start": "1259190",
    "end": "1266540"
  },
  {
    "text": "fuzzing for it and having this component separate and pluggable and like lido",
    "start": "1266540",
    "end": "1273429"
  },
  {
    "text": "also gives this new benefit which is you can develop VM M's faster than before",
    "start": "1273429",
    "end": "1280190"
  },
  {
    "text": "you don't have to re-implement everything again you don't have to work on k vm wrappers you don't want to you",
    "start": "1280190",
    "end": "1286400"
  },
  {
    "text": "don't have to work on Berta you and so on because this components already exist which means that",
    "start": "1286400",
    "end": "1291530"
  },
  {
    "text": "essentially you can focus on your on the key features of your product instead of",
    "start": "1291530",
    "end": "1298310"
  },
  {
    "text": "reimplemented everything from scratch and now that we talked a bit about why",
    "start": "1298310",
    "end": "1304520"
  },
  {
    "text": "we decided to start rescue mmm let's also look a bit at the recipe mmm development process and I want to start",
    "start": "1304520",
    "end": "1311420"
  },
  {
    "text": "with the people that are already contributing to receive mmm there are a few companies that are already working",
    "start": "1311420",
    "end": "1317960"
  },
  {
    "text": "on this we also have individual contributors there are reviewing the",
    "start": "1317960",
    "end": "1323480"
  },
  {
    "text": "code and asking questions submitting ideas and so on and when we are talking",
    "start": "1323480",
    "end": "1331400"
  },
  {
    "text": "about adding these components whereas hmmm we are currently having two processes so one of them is to add",
    "start": "1331400",
    "end": "1337730"
  },
  {
    "text": "components that already exist in either firecracker or cross jam and some",
    "start": "1337730",
    "end": "1343010"
  },
  {
    "text": "examples here are like KVM wrappers the word tire implementation abstraction for a guest memory and so on then we are",
    "start": "1343010",
    "end": "1350480"
  },
  {
    "text": "also adding components from scratch and these are some components that are interesting for the container vmm and",
    "start": "1350480",
    "end": "1357320"
  },
  {
    "text": "some of them are like B host and a CPI which are component that Samuel talked",
    "start": "1357320",
    "end": "1362330"
  },
  {
    "text": "about before okay so now let's take an",
    "start": "1362330",
    "end": "1368360"
  },
  {
    "text": "example of a crate that is already that already exists in both firecracker and",
    "start": "1368360",
    "end": "1373700"
  },
  {
    "text": "cross VM and just try to understand a bit what's happening there so we have the vm memory and the basic component of",
    "start": "1373700",
    "end": "1381920"
  },
  {
    "text": "the vm memory is an abstraction of guest address and in firecracker the guest",
    "start": "1381920",
    "end": "1387020"
  },
  {
    "text": "address is represented as you size now we want to make something useful with",
    "start": "1387020",
    "end": "1393470"
  },
  {
    "text": "this guest address so we want to create a memory region and the memory region is basically an abstraction that uses a",
    "start": "1393470",
    "end": "1400580"
  },
  {
    "text": "guest address which is the start of the memory of the guest memory and then it",
    "start": "1400580",
    "end": "1406700"
  },
  {
    "text": "also has a chunk of memory an anonymous shared memory and essentially those two",
    "start": "1406700",
    "end": "1413060"
  },
  {
    "text": "represent a memory region now to get to",
    "start": "1413060",
    "end": "1418160"
  },
  {
    "text": "actually have a guest memory you will have multiple list of multiple non-overlapping memory",
    "start": "1418160",
    "end": "1424260"
  },
  {
    "text": "regions but this is very specific to how firecracker works and now we want this",
    "start": "1424260",
    "end": "1429480"
  },
  {
    "text": "great to be used by multiple project so what do we do we are converting everything to a trait and the trait is",
    "start": "1429480",
    "end": "1436320"
  },
  {
    "text": "essentially an interface in rust so instead of having the gift address as",
    "start": "1436320",
    "end": "1441900"
  },
  {
    "text": "the you size you are having a trait of guest address which which can be implemented with your size we use 64 and",
    "start": "1441900",
    "end": "1449100"
  },
  {
    "text": "so on we are also having memory regions as a trait and the guest memory has a",
    "start": "1449100",
    "end": "1455040"
  },
  {
    "text": "trait and one of the thing that you might notice is that we don't only support the nonnamous shared memory",
    "start": "1455040",
    "end": "1461520"
  },
  {
    "text": "anymore but we also support file memory back by file and this is quite",
    "start": "1461520",
    "end": "1467430"
  },
  {
    "text": "interesting because it allows us to support many other use cases like for example B host user now everybody can",
    "start": "1467430",
    "end": "1477330"
  },
  {
    "text": "submit ideas about crates that they think that they're useful for as vmm or for other projects and we have a process",
    "start": "1477330",
    "end": "1483600"
  },
  {
    "text": "around it so the first thing that you have to do is to open an issue in our community repository and in that issue",
    "start": "1483600",
    "end": "1489420"
  },
  {
    "text": "you have to pitch your idea you have to talk about how is it going to be used who is going to use it what are the",
    "start": "1489420",
    "end": "1496590"
  },
  {
    "text": "dependencies what is the design and so on and after discussions about design",
    "start": "1496590",
    "end": "1502350"
  },
  {
    "text": "and name with naming which is very hard for us we actually create an empty",
    "start": "1502350",
    "end": "1508580"
  },
  {
    "text": "repository or named crate and against this empty crate we are submitting pull",
    "start": "1508580",
    "end": "1513630"
  },
  {
    "text": "requests based on the design discussions in order to obtain freaking development",
    "start": "1513630",
    "end": "1519300"
  },
  {
    "text": "or a useful trade a crate that has functionality but now as I said these crates are going to be used by multiple",
    "start": "1519300",
    "end": "1525660"
  },
  {
    "text": "projects so obviously there is a list of requirements that you have to have before we are publishing the trades on",
    "start": "1525660",
    "end": "1532350"
  },
  {
    "text": "'pray tile the people know what Plato is can you raise your hand if you know what crates okay so crate al is basically the",
    "start": "1532350",
    "end": "1541380"
  },
  {
    "text": "main I always forget the word is the main people yes it sort of very positive",
    "start": "1541380",
    "end": "1548040"
  },
  {
    "text": "repo for for packages for us packages so we basically the place where you get get",
    "start": "1548040",
    "end": "1554070"
  },
  {
    "text": "the packages from so now let's get back to it so from a crating development",
    "start": "1554070",
    "end": "1560610"
  },
  {
    "text": "there are a few things that you have to do in order to obtain a production already crate so prey that is going to",
    "start": "1560610",
    "end": "1566730"
  },
  {
    "text": "be used like byproducts like firecracker and we really really want to replace the",
    "start": "1566730",
    "end": "1574290"
  },
  {
    "text": "importance of testing so we have continuous integration and all the crates must have continuous integration",
    "start": "1574290",
    "end": "1580800"
  },
  {
    "text": "and test and make sure that the standard the quality standard is very hot then we",
    "start": "1580800",
    "end": "1588330"
  },
  {
    "text": "are also requiring license and we are having some discussions now in to have a",
    "start": "1588330",
    "end": "1594390"
  },
  {
    "text": "dual license which will be a patchy to zero and bsd close three then another",
    "start": "1594390",
    "end": "1602940"
  },
  {
    "text": "important thing is documentation probably one of the things that I find the most important especially in a place",
    "start": "1602940",
    "end": "1610590"
  },
  {
    "text": "where you are going to use these components by David so in a place where these components are going to be used by",
    "start": "1610590",
    "end": "1617040"
  },
  {
    "text": "multiple projects multiple people that might not have worked on them specifically so we really want to have",
    "start": "1617040",
    "end": "1623670"
  },
  {
    "text": "documentation that contains like high level design how are this how is the",
    "start": "1623670",
    "end": "1629880"
  },
  {
    "text": "public interface going to be used and so on and then we reach the we file after",
    "start": "1629880",
    "end": "1635130"
  },
  {
    "text": "we did all these things we reach the my son to you which is publishing the crate on freight sire to make it available to",
    "start": "1635130",
    "end": "1641850"
  },
  {
    "text": "everybody now the current status of crates in in raspy mmm we have some",
    "start": "1641850",
    "end": "1650820"
  },
  {
    "text": "praise that are still in development so if you go on the github project you will see that there are some crates that seem",
    "start": "1650820",
    "end": "1657810"
  },
  {
    "text": "like nothing is happening there they're empty repositories that's because we are still designing them we are still",
    "start": "1657810",
    "end": "1664290"
  },
  {
    "text": "working about on the design we are still trying to merge pull request and so on",
    "start": "1664290",
    "end": "1669570"
  },
  {
    "text": "then we have a crater is in development which is the VM memory that I discussed",
    "start": "1669570",
    "end": "1674910"
  },
  {
    "text": "earlier and we currently have only two crates that are actually published on",
    "start": "1674910",
    "end": "1680190"
  },
  {
    "text": "create idle and are used in production and this ones are the Akkadian bindings and became",
    "start": "1680190",
    "end": "1685650"
  },
  {
    "text": "ukyo's which provides some pretty or an interface to interact with KVM with the",
    "start": "1685650",
    "end": "1692460"
  },
  {
    "text": "KVM api so now let's take an example of how a CRM is going to actually work in",
    "start": "1692460",
    "end": "1699540"
  },
  {
    "text": "practice and because most of the Krait are still in development we are going to take a paper example so first we are",
    "start": "1699540",
    "end": "1709110"
  },
  {
    "text": "going to start with our DMM api which is basically the bridge between the vmm the",
    "start": "1709110",
    "end": "1714390"
  },
  {
    "text": "virtual machine and the client that is going to use it and after defining the",
    "start": "1714390",
    "end": "1719880"
  },
  {
    "text": "VM a VM mmpi we can take a look at the components that there are the current",
    "start": "1719880",
    "end": "1725220"
  },
  {
    "text": "that currently exists in grozny mmm and the thing is that we don't have to take",
    "start": "1725220",
    "end": "1730290"
  },
  {
    "text": "everything because these are separate repositories separate components so the",
    "start": "1730290",
    "end": "1736890"
  },
  {
    "text": "first thing in order to create a continuous VMM is that we are going to select the components that Samuel talked",
    "start": "1736890",
    "end": "1743160"
  },
  {
    "text": "about earlier which are specific sort of to the inner use case but these",
    "start": "1743160",
    "end": "1750750"
  },
  {
    "text": "components by themselves they can't work so you can't have a vmm only with this component so you need some other things",
    "start": "1750750",
    "end": "1756540"
  },
  {
    "text": "as well and so we are going to get the TBM wrappers we are we also will need a",
    "start": "1756540",
    "end": "1762990"
  },
  {
    "text": "minimal kernel loader that is going to load our kernel image into the guest memory and we are also needing the",
    "start": "1762990",
    "end": "1770370"
  },
  {
    "text": "abstraction for the guest memory now the only thing that you have to do after all",
    "start": "1770370",
    "end": "1776640"
  },
  {
    "text": "these components are available is to write the glue code and essentially the glue code what it does is it creates the",
    "start": "1776640",
    "end": "1782730"
  },
  {
    "text": "interaction between all these components and it also interacts with the API in",
    "start": "1782730",
    "end": "1788490"
  },
  {
    "text": "order for users to be able to configure the virtual machine now when we are",
    "start": "1788490",
    "end": "1794880"
  },
  {
    "text": "looking at this serverless example things that will be changed and we don't",
    "start": "1794880",
    "end": "1801180"
  },
  {
    "text": "need so if we take the firecracker exam well we don't need a CPI we don't need Bert RFS so we are just not going to",
    "start": "1801180",
    "end": "1807180"
  },
  {
    "text": "take them so but we do need some other things so one of the most important",
    "start": "1807180",
    "end": "1812730"
  },
  {
    "text": "thing in a multi-tenant environment is also the ability to limit resources so",
    "start": "1812730",
    "end": "1819120"
  },
  {
    "text": "limit the block limit the network and so on and we are limiting these in terms of operations per second and bad way and",
    "start": "1819120",
    "end": "1826340"
  },
  {
    "text": "this whole functionality is offered in the rate limit or crate which we are",
    "start": "1826340",
    "end": "1831540"
  },
  {
    "text": "going to add to our VM m and then we are also adding cpuid which is a great that",
    "start": "1831540",
    "end": "1836940"
  },
  {
    "text": "provides a mean for specifying template",
    "start": "1836940",
    "end": "1842760"
  },
  {
    "text": "for your virtual machine so basically you're making your virtual machine look",
    "start": "1842760",
    "end": "1848010"
  },
  {
    "text": "like something else and that is because you want to provide a the same experience across multiple platforms but",
    "start": "1848010",
    "end": "1855840"
  },
  {
    "text": "the other things are sort of the same so you will have a different API but you're",
    "start": "1855840",
    "end": "1861390"
  },
  {
    "text": "still going to have tried some vm m glue code and use basically most of the most",
    "start": "1861390",
    "end": "1867179"
  },
  {
    "text": "of the components out there so now that we we gave this example let's look a bit",
    "start": "1867179",
    "end": "1874470"
  },
  {
    "text": "in the future let's see what is next for ASCII mmm we obviously have to add all",
    "start": "1874470",
    "end": "1879510"
  },
  {
    "text": "those components that I'm talking about but we are what we are also trying to do right now is to provide a hypervisor",
    "start": "1879510",
    "end": "1885809"
  },
  {
    "text": "agnostic crate because there is an interest for people to not only use kb m",
    "start": "1885809",
    "end": "1891210"
  },
  {
    "text": "as the hypervisor but others as well so one example is hyper-v so we are trying",
    "start": "1891210",
    "end": "1896760"
  },
  {
    "text": "to work towards that as well now we are also using these components we are",
    "start": "1896760",
    "end": "1903270"
  },
  {
    "text": "trying to move these components into virtual machines that are already out there one of them is firecracker and in",
    "start": "1903270",
    "end": "1909690"
  },
  {
    "text": "fact racket we are already using all the components that are published on create idle and obviously we are trying to",
    "start": "1909690",
    "end": "1916710"
  },
  {
    "text": "create new specialized virtual machine monitors and one of them that was recently announced was cloud hypervisor",
    "start": "1916710",
    "end": "1925909"
  },
  {
    "text": "by Intel and in the future we might as well see container vm m but the future",
    "start": "1926450",
    "end": "1937410"
  },
  {
    "text": "is set in stone so if you have ideas or if you think that we are going in the right direction or in the wrong",
    "start": "1937410",
    "end": "1942630"
  },
  {
    "text": "direction or if you have any suggestions you can come and decide with us like what what the future of Ravi mmm is",
    "start": "1942630",
    "end": "1948570"
  },
  {
    "text": "going to be and they can be part of recipe mmm by",
    "start": "1948570",
    "end": "1954740"
  },
  {
    "text": "subscribing to our email list we have discussions there and you can also",
    "start": "1954740",
    "end": "1960429"
  },
  {
    "text": "submit if you have an idea about a crate that is going to be useful you can",
    "start": "1960429",
    "end": "1966050"
  },
  {
    "text": "submit a issue issue request review issue review requests and people will",
    "start": "1966050",
    "end": "1973610"
  },
  {
    "text": "look at at your issue and we will provide feedback okay thanks",
    "start": "1973610",
    "end": "1980809"
  },
  {
    "text": "very quickly as a conclusion we have one minute left so what we want to say here",
    "start": "1980809",
    "end": "1986750"
  },
  {
    "text": "is that there is a need for a container and maybe community specific vmm we",
    "start": "1986750",
    "end": "1992900"
  },
  {
    "text": "think that Russ Bamm is is the right solution for this there's already some some vmm that are being implemented by",
    "start": "1992900",
    "end": "2000280"
  },
  {
    "text": "using Russ vm that go into this kind of direction and yeah we really think that",
    "start": "2000280",
    "end": "2007270"
  },
  {
    "text": "Russ barium is going to provide the building blocks for for all this so very quickly we have our github obviously",
    "start": "2007270",
    "end": "2013740"
  },
  {
    "text": "Russ vmm surprisingly so go there there's a community repo where you can",
    "start": "2013740",
    "end": "2018820"
  },
  {
    "text": "submit issue but it can follow basically what the community is doing around that project which crates we're working on",
    "start": "2018820",
    "end": "2024550"
  },
  {
    "text": "which technology we're adding to this just go there and chime in and we have because we're super hyped we have a",
    "start": "2024550",
    "end": "2030670"
  },
  {
    "text": "slack channel no IRC sorry about that but yeah there's a slide channel and you can join and ask question or or tell us",
    "start": "2030670",
    "end": "2038080"
  },
  {
    "text": "what you think about it thank you very much thank you",
    "start": "2038080",
    "end": "2042120"
  },
  {
    "text": "you",
    "start": "2044020",
    "end": "2046080"
  }
]