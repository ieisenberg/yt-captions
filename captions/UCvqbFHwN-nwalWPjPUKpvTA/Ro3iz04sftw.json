[
  {
    "text": "yes so um welcome back everyone um we just went on a quick break because",
    "start": "640",
    "end": "6799"
  },
  {
    "text": "we had to get our speakers back here but you'd agree with me that since the beginning of today's section we've had",
    "start": "6799",
    "end": "13920"
  },
  {
    "text": "really exciting topics from introductory down to the expert level and then we're",
    "start": "13920",
    "end": "20560"
  },
  {
    "text": "back to understanding the basics of",
    "start": "20560",
    "end": "25760"
  },
  {
    "text": "understanding the basics of controllers introduction to custom resources which is going to be our next section so",
    "start": "25840",
    "end": "33200"
  },
  {
    "text": "buckle up everyone as we get as pica on here so the next session is going to be focused on",
    "start": "33200",
    "end": "39920"
  },
  {
    "text": "extending kubernetes and introducing custom resources controllers and",
    "start": "39920",
    "end": "46160"
  },
  {
    "text": "operators and this is going to be taken by oladipo ajayi who is a cloud native",
    "start": "46160",
    "end": "52480"
  },
  {
    "text": "engineer currently at container solution helping with businesses",
    "start": "52480",
    "end": "58640"
  },
  {
    "text": "helping businesses with cloud native transformation from beginning to the end and everything in",
    "start": "58640",
    "end": "64400"
  },
  {
    "text": "between and it's good to have you here depot thank you very much good to be here also",
    "start": "64400",
    "end": "72159"
  },
  {
    "text": "awesome all right",
    "start": "72159",
    "end": "77200"
  },
  {
    "text": "um yeah sorry for you i think i have i'll have more time to myself",
    "start": "77200",
    "end": "82960"
  },
  {
    "text": "right since i'm starting early yes",
    "start": "82960",
    "end": "88320"
  },
  {
    "text": "yes it appears so okay yeah all right thank you very much",
    "start": "88320",
    "end": "93360"
  },
  {
    "text": "um hello everyone my name is divora um i'll be speaking on extended",
    "start": "93360",
    "end": "98799"
  },
  {
    "text": "kubernetes um introducing custom resources custom controllers operators and",
    "start": "98799",
    "end": "105439"
  },
  {
    "text": "schedulers and if there is time i'll be able to do a simple demo um while we're at it",
    "start": "105439",
    "end": "112479"
  },
  {
    "text": "um yeah so for like i said my name is dick paul i'm a",
    "start": "112479",
    "end": "118399"
  },
  {
    "text": "cloud data engineer at continuous solutions um i'm a cloud acrobats cloud engineer",
    "start": "118399",
    "end": "124640"
  },
  {
    "text": "um devops engineer and everything on adws and azure um also software engineer",
    "start": "124640",
    "end": "131760"
  },
  {
    "text": "when i can um i basically write python and golang um building for now majorly focusing on",
    "start": "131760",
    "end": "139040"
  },
  {
    "text": "building controllers and operators um yeah nice to meet you so let's let's let's let's get to let's",
    "start": "139040",
    "end": "146640"
  },
  {
    "text": "get going um so yeah what is kubernetes um i i don't want to focus so much on",
    "start": "146640",
    "end": "152800"
  },
  {
    "text": "what kubernetes is and um definition but i'm going to mention just a couple of",
    "start": "152800",
    "end": "158000"
  },
  {
    "text": "things um first off um kubernetes like we know is a content orchestration tool",
    "start": "158000",
    "end": "164000"
  },
  {
    "text": "um it helps orchestrate containers manages them and their entire life cycle",
    "start": "164000",
    "end": "169120"
  },
  {
    "text": "pretty much like that's a very simple definition of what kubernetes is um like i said the some of the features are it",
    "start": "169120",
    "end": "176080"
  },
  {
    "text": "autonomous deployments helps with auto scaling um helps with self-healing so for",
    "start": "176080",
    "end": "181599"
  },
  {
    "text": "example if your body is down it cannot be spinning up by itself and it also helps the secret management",
    "start": "181599",
    "end": "188000"
  },
  {
    "text": "and configuration management and so many things um but these are the basic things",
    "start": "188000",
    "end": "193200"
  },
  {
    "text": "humanities too um wait yeah we are missing something and what's that um",
    "start": "193200",
    "end": "200319"
  },
  {
    "text": "yeah kubernetes is highly extensible yeah that's right so you can always add",
    "start": "200319",
    "end": "206319"
  },
  {
    "text": "your new features you can add whatever you need to do and that is one of the key things that people don't talk about",
    "start": "206319",
    "end": "212239"
  },
  {
    "text": "about kubernetes is for yeah like i mentioned all of those things that i mentioned i",
    "start": "212239",
    "end": "217440"
  },
  {
    "text": "listed earlier it's really awesome but kubernetes being a very um",
    "start": "217440",
    "end": "223440"
  },
  {
    "text": "highly extensive system and what i mean is that you can add your own features and if you go to kubernetes github",
    "start": "223440",
    "end": "230400"
  },
  {
    "text": "repository because it's open source there are no there are really no uh um",
    "start": "230400",
    "end": "236000"
  },
  {
    "text": "patches right no requests to add like basic major features right so if i as a",
    "start": "236000",
    "end": "241519"
  },
  {
    "text": "company i need a particular feature right on kubernetes and is not available in the default installation i can always",
    "start": "241519",
    "end": "248159"
  },
  {
    "text": "add it myself because of this extensibility and what actually makes this happen uh what",
    "start": "248159",
    "end": "255360"
  },
  {
    "text": "makes this is i extensibility happen is because",
    "start": "255360",
    "end": "260400"
  },
  {
    "text": "the other humanities is built on apis so everything you're seeing from your board",
    "start": "260400",
    "end": "266000"
  },
  {
    "text": "to your services and everything at apis so everything is communicating with api you're communicating with kubernetes",
    "start": "266000",
    "end": "272000"
  },
  {
    "text": "through the api you're doing kubernetes communicating with yourself through the keyboard analysis api and",
    "start": "272000",
    "end": "278320"
  },
  {
    "text": "that's one of the real beauties of kubernetes that is not being spoken so much about",
    "start": "278320",
    "end": "283600"
  },
  {
    "text": "so um yeah exciting keyboarding is what does what do i mean when i say extending kubernetes um",
    "start": "283600",
    "end": "290800"
  },
  {
    "text": "majorly what it means is that i add any new functionality like i mentioned earlier um that isn't part of your default",
    "start": "290800",
    "end": "297280"
  },
  {
    "text": "kubernetes installation so if i have if i decide to install maybe kubernetes",
    "start": "297280",
    "end": "303479"
  },
  {
    "text": "1.22 for example 1.21 um there's a set of features that comes with it um",
    "start": "303479",
    "end": "310960"
  },
  {
    "text": "but then there are times when what you need what you actually need is not included in",
    "start": "310960",
    "end": "316400"
  },
  {
    "text": "this particular um in the default installation and you can also always add some things with it so yeah um that's",
    "start": "316400",
    "end": "323840"
  },
  {
    "text": "what extended kubernetes mean here um yeah several risk awarenesses can be extended like a lot of ways but for this",
    "start": "323840",
    "end": "330800"
  },
  {
    "text": "talk we'll be focused immediately on um including endpoints and adding functionality to the",
    "start": "330800",
    "end": "336720"
  },
  {
    "text": "kubernetes api um i'll explain what this means as i go on and to become clear as",
    "start": "336720",
    "end": "341759"
  },
  {
    "text": "i as i move on but majorly focusing on creating endpoints and adding functionality to the endpoint pretty",
    "start": "341759",
    "end": "348880"
  },
  {
    "text": "much very very simple so let's take it back let's take a step back and see we've already",
    "start": "348880",
    "end": "355360"
  },
  {
    "text": "defined what um pivot net is right um but then let's look at something um i'm",
    "start": "355360",
    "end": "362160"
  },
  {
    "text": "sure a couple of us will be familiar with this image so this image is the kubernetes cluster",
    "start": "362160",
    "end": "368960"
  },
  {
    "text": "and the components that make up a kubernetes cluster now what we're seeing here is we have",
    "start": "368960",
    "end": "375440"
  },
  {
    "text": "the control node or control plane which is the left-hand side everything within that blue dot headline",
    "start": "375440",
    "end": "382400"
  },
  {
    "text": "is the control plane and all of those things are things that come packaged with every kubernetes installation",
    "start": "382400",
    "end": "390080"
  },
  {
    "text": "um so we have our controller manager yeah we have our xcd sd is molecular storage",
    "start": "390080",
    "end": "398319"
  },
  {
    "text": "um that stores a key value pair of all of the resources all of these",
    "start": "398319",
    "end": "404000"
  },
  {
    "text": "resources within kubernetes so your port your services your deployment all the information that kubernetes",
    "start": "404000",
    "end": "411120"
  },
  {
    "text": "needs to know to keep states of that resource is stored in fcd and then we",
    "start": "411120",
    "end": "416720"
  },
  {
    "text": "have the scheduler the scheduler basically is what the scheduler does is it schedules",
    "start": "416720",
    "end": "422160"
  },
  {
    "text": "sports to nodes simple and then we have our cloud controller manager which is",
    "start": "422160",
    "end": "428880"
  },
  {
    "text": "majorly for cloud providers so for example we have we're looking at um aks um in",
    "start": "428880",
    "end": "435360"
  },
  {
    "text": "aws or aks in azure or gk in google they all",
    "start": "435360",
    "end": "440560"
  },
  {
    "text": "have this feature whereby it makes it easy for them to be able to connect to the baseline infrastructure so it's not",
    "start": "440560",
    "end": "447840"
  },
  {
    "text": "it's not it's not a it's not part it's not a a major part of the kubernetes cluster",
    "start": "447840",
    "end": "453360"
  },
  {
    "text": "but majorly for cloud providers people that need it like i mentioned earlier and then we have our worker nodes here",
    "start": "453360",
    "end": "459680"
  },
  {
    "text": "and those were candidates visually connects to the cluster keep ctl and keep proxy so pretty much",
    "start": "459680",
    "end": "466560"
  },
  {
    "text": "this is what you have for every default installation and this as you can see the api sits at the",
    "start": "466560",
    "end": "473440"
  },
  {
    "text": "center of everything and the division is because that is knowledge like the update of the cluster",
    "start": "473440",
    "end": "480080"
  },
  {
    "text": "itself every communication that happens within the kubernetes cluster from",
    "start": "480080",
    "end": "485120"
  },
  {
    "text": "outside the kubernetes cluster into the cluster for example as a user i'm using cube ctl um everything goes to this",
    "start": "485120",
    "end": "492560"
  },
  {
    "text": "gives um api's level and the api server itself it's what exposes the kubernetes",
    "start": "492560",
    "end": "498879"
  },
  {
    "text": "api and that we've been talking about um since i said i began the talk",
    "start": "498879",
    "end": "504160"
  },
  {
    "text": "so yes what is this what is the um kubernetes app line um yeah it's a set of http endpoint like",
    "start": "504160",
    "end": "510319"
  },
  {
    "text": "i mentioned um majorly exposed by um the api server in the control node or",
    "start": "510319",
    "end": "517360"
  },
  {
    "text": "the control plane um like i mentioned earlier and it sounds like an entry point in which users or entities can",
    "start": "517360",
    "end": "523599"
  },
  {
    "text": "retire to the cluster so users but like um device engineering cloud engineer or",
    "start": "523599",
    "end": "528800"
  },
  {
    "text": "software engineer or entities like services within the cluster or maybe",
    "start": "528800",
    "end": "534480"
  },
  {
    "text": "a a easy to instance for example just an example that needs to communicate with the cluster um all of this thing happens",
    "start": "534480",
    "end": "542000"
  },
  {
    "text": "through the api server and this api server api actually coordinates out all the resources or",
    "start": "542000",
    "end": "549360"
  },
  {
    "text": "objects that assess within the cluster um now as you can see in the diagram below you can see",
    "start": "549360",
    "end": "555600"
  },
  {
    "text": "this is very similar to the image that we had initially but then there's there is um a an attachment to the right hand",
    "start": "555600",
    "end": "563279"
  },
  {
    "text": "side and that point is more or less like showing how the http endpoints actually looks like",
    "start": "563279",
    "end": "569200"
  },
  {
    "text": "so we have some set of endpoints like the lcd metrics so things like these are like common to applications where you",
    "start": "569200",
    "end": "576080"
  },
  {
    "text": "can check the outs and then get logs and metrics from the cluster and then for",
    "start": "576080",
    "end": "582160"
  },
  {
    "text": "very specific things like for example pods oh i want to get a list of my pods now for example in my cluster the end",
    "start": "582160",
    "end": "589920"
  },
  {
    "text": "point i'll go to majorly is the api for slash api for transfection one first",
    "start": "589920",
    "end": "595040"
  },
  {
    "text": "large ports and i can use um my http verbs my get my list my creates",
    "start": "595040",
    "end": "601279"
  },
  {
    "text": "my updates on all of these and then those are the things this this majorly is very familiar with us",
    "start": "601279",
    "end": "608399"
  },
  {
    "text": "right um for especially for software engineers that are used to creating api as an endpoint",
    "start": "608399",
    "end": "614800"
  },
  {
    "text": "and all of that so this is what is going on in the background that's it's that's we are not saying like a typical",
    "start": "614800",
    "end": "621200"
  },
  {
    "text": "humanities user is not saying um so yeah here we have it so this is an",
    "start": "621200",
    "end": "626480"
  },
  {
    "text": "example of the kubernetes api now down to what we actually want to talk about today um talking about",
    "start": "626480",
    "end": "633200"
  },
  {
    "text": "resources uh very very very very um like you said there's this thing or is",
    "start": "633200",
    "end": "640320"
  },
  {
    "text": "actually true that the board is like this the it's the simplest units right within a",
    "start": "640320",
    "end": "646399"
  },
  {
    "text": "cluster within the kubernetes cluster right but that sport itself is actually",
    "start": "646399",
    "end": "651440"
  },
  {
    "text": "a resource and like i mentioned all resources in kubernetes are endpoints so when you",
    "start": "651440",
    "end": "656800"
  },
  {
    "text": "have anything about your node node resource you think about your port resource you talk about your service resource you think about your name space",
    "start": "656800",
    "end": "663519"
  },
  {
    "text": "you talk about your volume and so many other things your job your current jobs anything you can think of they are all",
    "start": "663519",
    "end": "670399"
  },
  {
    "text": "endpoints like i've mentioned and i try to i try to build them here um but now",
    "start": "670399",
    "end": "676160"
  },
  {
    "text": "that's what is there now to be looking at the right hand side of of the slide right now we would see there",
    "start": "676160",
    "end": "683519"
  },
  {
    "text": "is a point where we have a kubernetes object and something that is in the kubernetes object like i mentioned",
    "start": "683519",
    "end": "689680"
  },
  {
    "text": "everything is a is a resource it's a kubernetes resource um but not everything that is a keyboardist object",
    "start": "689680",
    "end": "696240"
  },
  {
    "text": "um and the difference majorly is objects are usually like existing entities so for example",
    "start": "696240",
    "end": "702720"
  },
  {
    "text": "i i created a resource type i already suspect which is namespace and pods",
    "start": "702720",
    "end": "707839"
  },
  {
    "text": "right and then i created a resource instance with my offer that's do qct apply and i create a board right",
    "start": "707839",
    "end": "715200"
  },
  {
    "text": "that creation of board is a resource instance but what comes out of it right",
    "start": "715200",
    "end": "720800"
  },
  {
    "text": "that pod instance that has this entire metadata and the id and everything being pesticided in lcd is the kubernetes",
    "start": "720800",
    "end": "728480"
  },
  {
    "text": "object itself so in comparison to when you do like a cuba city or api resources",
    "start": "728480",
    "end": "735839"
  },
  {
    "text": "command for example um this job what this does is it lists a set of resources for us right it's a",
    "start": "735839",
    "end": "744399"
  },
  {
    "text": "resource instance but not an object and the reason is not an object is because it's not being pest listed in the",
    "start": "744399",
    "end": "750639"
  },
  {
    "text": "xcd in the cluster so it's just doing something but it's not actually an entity that's doing something that needs",
    "start": "750639",
    "end": "757120"
  },
  {
    "text": "to be monitored or controlled um or we will go back to when we need",
    "start": "757120",
    "end": "762720"
  },
  {
    "text": "them so that's the major difference between a kubernetes object and instances resource instances that",
    "start": "762720",
    "end": "769440"
  },
  {
    "text": "are not objects um now that we have an idea what a fibonacci's resources um what do we mean",
    "start": "769440",
    "end": "776240"
  },
  {
    "text": "when we say what is a custom resource because that is what this talk is about",
    "start": "776240",
    "end": "781920"
  },
  {
    "text": "how do we extend um kubernetes to be able to create custom resources so what",
    "start": "781920",
    "end": "787120"
  },
  {
    "text": "are custom resources custom resources majorly are endpoints like we've mentioned in the kubernetes api that",
    "start": "787120",
    "end": "793120"
  },
  {
    "text": "allow the creation of custom objects like i explained initially of a particular resource type so in the",
    "start": "793120",
    "end": "799760"
  },
  {
    "text": "previous slide you saw how we created a kubernetes object a kubernetes sport",
    "start": "799760",
    "end": "804880"
  },
  {
    "text": "object right with a resource type of port so we can do the same thing for our",
    "start": "804880",
    "end": "810480"
  },
  {
    "text": "custom resources and say okay i want to create a custom resource called foo foo bar something and i wanted to be able to",
    "start": "810480",
    "end": "817839"
  },
  {
    "text": "create a kubernetes object of of night of type a full bar for example and how do we do",
    "start": "817839",
    "end": "825440"
  },
  {
    "text": "that how do we say okay do i add this fullback resource right to my endpoints",
    "start": "825440",
    "end": "831600"
  },
  {
    "text": "my kubernetes endpoints and the way we do that is we do we use a kubernetes with a custom resource definition",
    "start": "831600",
    "end": "839040"
  },
  {
    "text": "so um a custom resource definition majorly is like like a template um",
    "start": "839040",
    "end": "844959"
  },
  {
    "text": "and what that template does is it's used to add endpoints to our resource to acquiences api",
    "start": "844959",
    "end": "852240"
  },
  {
    "text": "and that's that's what it does here it adds endpoint and it has fields and metadata",
    "start": "852240",
    "end": "858079"
  },
  {
    "text": "that can be filled into that um resource endpoint",
    "start": "858079",
    "end": "863279"
  },
  {
    "text": "so for example the image that we have here we have the aml file which is the custom resource definition it creates a",
    "start": "863279",
    "end": "868560"
  },
  {
    "text": "custom resource as an endpoint that's what you have in the middle and anytime we call that endpoint you",
    "start": "868560",
    "end": "874480"
  },
  {
    "text": "can use that endpoint which is a resource now custom resource now you can use create a lot of objects a collection",
    "start": "874480",
    "end": "880240"
  },
  {
    "text": "of kubernetes api objects of that custom resource time so i'll take it again",
    "start": "880240",
    "end": "886399"
  },
  {
    "text": "uh we will i'll create a custom resource of a particular um resource type",
    "start": "886399",
    "end": "892160"
  },
  {
    "text": "let's say full bar like i said earlier through the custom resource definition now if i want to create an object of",
    "start": "892160",
    "end": "899279"
  },
  {
    "text": "that resource type i would have to query the custom resource endpoint to be able to have to be able to create that object",
    "start": "899279",
    "end": "906079"
  },
  {
    "text": "and to be able to query it list it get it delete it just the same way an api would work",
    "start": "906079",
    "end": "913279"
  },
  {
    "text": "normally um yeah so for for this for this this is what we have for custom resources",
    "start": "913279",
    "end": "920399"
  },
  {
    "text": "but then they really don't do anything custom resources are just um they are just labels or",
    "start": "920399",
    "end": "927040"
  },
  {
    "text": "let me say like string for example you know when you do maybe a you know in programming when you do a equals to um",
    "start": "927040",
    "end": "933839"
  },
  {
    "text": "quotation mark abcd that doesn't do anything it's just a placeholder right so custom resources",
    "start": "933839",
    "end": "940480"
  },
  {
    "text": "are like this so that they don't do anything um they don't have any power of their own",
    "start": "940480",
    "end": "945519"
  },
  {
    "text": "they don't they cannot think by themselves more like a caricature in",
    "start": "945519",
    "end": "950639"
  },
  {
    "text": "uh if i can use that um but what actually makes them do something like for example our",
    "start": "950639",
    "end": "956959"
  },
  {
    "text": "partner we know that our pod um objects takes an image right runs that image and",
    "start": "956959",
    "end": "963040"
  },
  {
    "text": "then exposes an a port and then an endpoint that we can access the application that is running within that",
    "start": "963040",
    "end": "969759"
  },
  {
    "text": "port right what makes that possible um and what makes that possible are",
    "start": "969759",
    "end": "975519"
  },
  {
    "text": "controllers like i mentioned before when we're looking at the things that were in the",
    "start": "975519",
    "end": "980560"
  },
  {
    "text": "control plane uh right we talked about the controller manager so the controller manager contains",
    "start": "980560",
    "end": "987519"
  },
  {
    "text": "all the logic that all the resources are using all the default resources so by default",
    "start": "987519",
    "end": "993279"
  },
  {
    "text": "resources i mean ports name space nodes demand sets deployments stateful sets",
    "start": "993279",
    "end": "999839"
  },
  {
    "text": "how are they reconciled what did they do so controllers are telling you to do that for us so controllers are like uh",
    "start": "999839",
    "end": "1006959"
  },
  {
    "text": "are control loops that track a kubernetes api type to make sure that the current state matches the desired",
    "start": "1006959",
    "end": "1013120"
  },
  {
    "text": "states so one thing i need to mention before we continue is that um kubernetes",
    "start": "1013120",
    "end": "1018160"
  },
  {
    "text": "was built on an event-driven architecture and what what that means is that um a controller kubernetes watches",
    "start": "1018160",
    "end": "1026319"
  },
  {
    "text": "for changes to a particular event and then triggers the necessary um",
    "start": "1026319",
    "end": "1032640"
  },
  {
    "text": "the necessary things that needs to do based on that event so for example if i do a create event now if i do keep ctrl",
    "start": "1032640",
    "end": "1039760"
  },
  {
    "text": "grades or could secure apply and then i pass in a file a pod file i'm passing",
    "start": "1039760",
    "end": "1045678"
  },
  {
    "text": "i'm sending an event to the kubernetes cluster it picks that up looks at my file",
    "start": "1045679",
    "end": "1051600"
  },
  {
    "text": "gets the um gets the resource kind and then passes it to the right",
    "start": "1051600",
    "end": "1056880"
  },
  {
    "text": "controller and the controller knows what to do by creating whatever it needs to do so for our quad example it",
    "start": "1056880",
    "end": "1063919"
  },
  {
    "text": "looks it says oh this is a port kind of pod resource type and what it does is it takes this this schema the name the name",
    "start": "1063919",
    "end": "1070480"
  },
  {
    "text": "space the um container image the container name the container ports for example and does",
    "start": "1070480",
    "end": "1076960"
  },
  {
    "text": "something which is and what we have is we have a container a docker container where it's running and then we can",
    "start": "1076960",
    "end": "1082320"
  },
  {
    "text": "access it with the necessary metadata that was passed in into our pods yamaha farm",
    "start": "1082320",
    "end": "1088880"
  },
  {
    "text": "so that's how it works so for controllers is what a controller is that black box you're not saying right uh when we when we do",
    "start": "1088880",
    "end": "1095840"
  },
  {
    "text": "keep city apply or keep still get or keep self-described right all of those things are part of the controller and",
    "start": "1095840",
    "end": "1102320"
  },
  {
    "text": "the control actually maintains that for us so controllers would look at our desired state so our desired state is",
    "start": "1102320",
    "end": "1108480"
  },
  {
    "text": "what we send into kubernetes and the actual state is what is actually happening within kubernetes so for",
    "start": "1108480",
    "end": "1115760"
  },
  {
    "text": "example if i send in a deployment now a deployment type and i specify i want to",
    "start": "1115760",
    "end": "1121360"
  },
  {
    "text": "have three or three instances of a particular image running right so that's my desired stage",
    "start": "1121360",
    "end": "1128960"
  },
  {
    "text": "right um by the time i send it in um it starts with zero and then it increases to one two and three and then",
    "start": "1128960",
    "end": "1136000"
  },
  {
    "text": "it stops if any of the ports is deleted or maybe it's down for whatever reason the actual",
    "start": "1136000",
    "end": "1141919"
  },
  {
    "text": "state and disaster are no longer in sync so in the controller what the controller does is it makes sure that um if it",
    "start": "1141919",
    "end": "1149360"
  },
  {
    "text": "turns the um actual speed of the of that particular resource",
    "start": "1149360",
    "end": "1154880"
  },
  {
    "text": "into the desired state so you don't continue doing that in a loop but then instead of doing a",
    "start": "1154880",
    "end": "1160640"
  },
  {
    "text": "loop and trying to make sure make sure that everything works it can overwhelm the system so that's why they",
    "start": "1160640",
    "end": "1167840"
  },
  {
    "text": "opted in for an event driven architecture remember when there is a change there's an event is sent",
    "start": "1167840",
    "end": "1175200"
  },
  {
    "text": "and then the controller can take care of whatever is happening um there",
    "start": "1175200",
    "end": "1180240"
  },
  {
    "text": "so yeah we've talked about controllers now custom controllers um which is what we want to talk about right um",
    "start": "1180240",
    "end": "1186320"
  },
  {
    "text": "for some custom resources like i mentioned are just endpoints created by custom resource definitions so they're",
    "start": "1186320",
    "end": "1191440"
  },
  {
    "text": "just like an api that kind of query object uh within them they don't do anything more than that um custom",
    "start": "1191440",
    "end": "1197760"
  },
  {
    "text": "controllers like are the logic that brings those custom resources or the object they create to life like they",
    "start": "1197760",
    "end": "1203600"
  },
  {
    "text": "become responsive that's what i mean and like i mentioned kubernetes is a declarative programming model which",
    "start": "1203600",
    "end": "1210559"
  },
  {
    "text": "means that unity takes the viral state of the objects you want to achieve that is all you do you don't care about what",
    "start": "1210559",
    "end": "1216000"
  },
  {
    "text": "is happening in the background or you know that i have declared this and i expect kubernetes to give me what i've",
    "start": "1216000",
    "end": "1222240"
  },
  {
    "text": "declared right and because kubernetes custom controllers extend the",
    "start": "1222240",
    "end": "1227520"
  },
  {
    "text": "functionality of the kubernetes api on built-in resources right so um",
    "start": "1227520",
    "end": "1233120"
  },
  {
    "text": "i have a pod now for example but i want to do more on it or i want to change the the way",
    "start": "1233120",
    "end": "1238960"
  },
  {
    "text": "pots behave the way i do that is i create a controller that handles that logic for",
    "start": "1238960",
    "end": "1244240"
  },
  {
    "text": "me right and that's what controllers do um they actually they usually they are used",
    "start": "1244240",
    "end": "1250159"
  },
  {
    "text": "typically when a use case is not covered by the built-in controller manager for a beauty resource type so very important",
    "start": "1250159",
    "end": "1256559"
  },
  {
    "text": "for us to make to notes there is that they they are used for use cases that are not covered by the built-in",
    "start": "1256559",
    "end": "1262880"
  },
  {
    "text": "controller manager in our control plane for building resource time by building resource types the things i mean are",
    "start": "1262880",
    "end": "1269120"
  },
  {
    "text": "things like pods um namespaces uh deployments and so on so like a typical",
    "start": "1269120",
    "end": "1276080"
  },
  {
    "text": "example of when you want to use a custom controller is let's say that",
    "start": "1276080",
    "end": "1281360"
  },
  {
    "text": "we have an application that uses a configmar right to maybe send some",
    "start": "1281360",
    "end": "1286559"
  },
  {
    "text": "environment variables into the containers that we are creating um so uh but then there's always the possibility",
    "start": "1286559",
    "end": "1293120"
  },
  {
    "text": "that those values can change a typical manual process would have been if i need to make an update to my",
    "start": "1293120",
    "end": "1299120"
  },
  {
    "text": "configma right i make the update to the configmap with the key and and but then what happens is that the",
    "start": "1299120",
    "end": "1305840"
  },
  {
    "text": "pods that are running on that configmap don't change because the values are being passed at runtime",
    "start": "1305840",
    "end": "1313760"
  },
  {
    "text": "now for me to be able to make sure that the ports have these the necessary things i would have to go and stop the",
    "start": "1313760",
    "end": "1320720"
  },
  {
    "text": "board and then restart it right so that's the manual process that we need to do now we can create a",
    "start": "1320720",
    "end": "1326559"
  },
  {
    "text": "controller that watches for the configmap um resource type and watches for changes the configmar values",
    "start": "1326559",
    "end": "1333760"
  },
  {
    "text": "when a controller detects a change to the value it automatically restarts the",
    "start": "1333760",
    "end": "1340159"
  },
  {
    "text": "pod force so that is one of the beauty of controllers and that's why it has",
    "start": "1340159",
    "end": "1345600"
  },
  {
    "text": "gained so much traction over the last three four years because it's actually very very um very reliable and it's very",
    "start": "1345600",
    "end": "1353440"
  },
  {
    "text": "useful for some particular use cases like this one that we mentioned so that's what",
    "start": "1353440",
    "end": "1359919"
  },
  {
    "text": "custom controllers are yeah in some way custom controllers are written by you and work with built-in",
    "start": "1359919",
    "end": "1366640"
  },
  {
    "text": "resources so deployment traffic assets and so on and um and custom resources they don't exist in",
    "start": "1366640",
    "end": "1374159"
  },
  {
    "text": "the cube controller manager so what i mean is like i mentioned the keep controller manager only contains",
    "start": "1374159",
    "end": "1379360"
  },
  {
    "text": "controllers for um default resource types right um but then",
    "start": "1379360",
    "end": "1385440"
  },
  {
    "text": "these controllers do not live in there what that means is that um and they are independent of the cycle's life cycle",
    "start": "1385440",
    "end": "1391919"
  },
  {
    "text": "what that means is that i can deploy my controller somewhere else and it's to still be watching for",
    "start": "1391919",
    "end": "1398000"
  },
  {
    "text": "changes to my kubernetes cluster so for example if i delete i if a entire",
    "start": "1398000",
    "end": "1403440"
  },
  {
    "text": "cluster goes down for example um the controller has to be running it might not just receive any event and",
    "start": "1403440",
    "end": "1409360"
  },
  {
    "text": "when you create your cluster again you continue working so it doesn't have to be deployed on your kubernetes cluster",
    "start": "1409360",
    "end": "1414799"
  },
  {
    "text": "that's what this means that what the sentence means and we can only separate it like a separate application that is",
    "start": "1414799",
    "end": "1420320"
  },
  {
    "text": "cleaving on its own yeah so operators um yeah so this is the next step to",
    "start": "1420320",
    "end": "1427760"
  },
  {
    "text": "controllers and what they do um so operators majorly abuse on top the human",
    "start": "1427760",
    "end": "1433840"
  },
  {
    "text": "abstraction um to automate the entire life cycle of the application in manages so for",
    "start": "1433840",
    "end": "1439520"
  },
  {
    "text": "example uh we have humanities resources um like i've mentioned controllers concept",
    "start": "1439520",
    "end": "1446559"
  },
  {
    "text": "for building resources like for specific key skills now um controllers are usually used for",
    "start": "1446559",
    "end": "1452559"
  },
  {
    "text": "building resources right but operators majorly focus on custom objects and custom resources so like you",
    "start": "1452559",
    "end": "1459120"
  },
  {
    "text": "mentioned we have custom resources right we've have custom objects that are",
    "start": "1459120",
    "end": "1464960"
  },
  {
    "text": "created the custom is just being created by the custom resource definition now",
    "start": "1464960",
    "end": "1470799"
  },
  {
    "text": "when we take it a step back and we say okay yes controllers create controllers control the life cycle of built-in",
    "start": "1470799",
    "end": "1477279"
  },
  {
    "text": "resources what about the uh our own native custom resource types are created and the objects we create",
    "start": "1477279",
    "end": "1483760"
  },
  {
    "text": "through those resource types but that's where operators come in so that's what they do um they",
    "start": "1483760",
    "end": "1490000"
  },
  {
    "text": "they are custom controllers right their pc machine was the same thing but they track and manage custom objects",
    "start": "1490000",
    "end": "1496799"
  },
  {
    "text": "created by custom resource definitions um operators are quite powerful in their use cases and um they also help to",
    "start": "1496799",
    "end": "1504720"
  },
  {
    "text": "automate the operations of your clinical application like more like an sra tool and a software administrator for",
    "start": "1504720",
    "end": "1510960"
  },
  {
    "text": "expanded software application like the example i gave earlier a an sr engineer will have needed to go",
    "start": "1510960",
    "end": "1517360"
  },
  {
    "text": "and stop that board and restart it right or your controller your operator will be",
    "start": "1517360",
    "end": "1522400"
  },
  {
    "text": "able to do that for you automatically without you portraying or wondering about what's going on so yeah so this is",
    "start": "1522400",
    "end": "1528640"
  },
  {
    "text": "the beauty of operators and why they are important right and why a lot of people have been getting on it um",
    "start": "1528640",
    "end": "1536000"
  },
  {
    "text": "it's it's still growing it's really very good it's a great community because it takes a lot of time to build an end to",
    "start": "1536000",
    "end": "1541600"
  },
  {
    "text": "end operator um for the major operators that we have now they're usually for major companies that are cloud native",
    "start": "1541600",
    "end": "1548000"
  },
  {
    "text": "for maybe for example databases now for let's say um postgres and the rest you probably at",
    "start": "1548000",
    "end": "1555600"
  },
  {
    "text": "once using operators because it's quite um developer um",
    "start": "1555600",
    "end": "1561360"
  },
  {
    "text": "intensive and time intensive to build and to build the entire end-to-end process but either way we can all",
    "start": "1561360",
    "end": "1567760"
  },
  {
    "text": "distribute our own mini mini operators for the things that we need to do um yeah so for the last piece here which",
    "start": "1567760",
    "end": "1575279"
  },
  {
    "text": "is the because as i mentioned um scheduling journey or basically",
    "start": "1575279",
    "end": "1580640"
  },
  {
    "text": "ensure that ports are assigned to the best possible available nodes that's what they do like they don't do",
    "start": "1580640",
    "end": "1586159"
  },
  {
    "text": "any other thing they're not complex that is this that's the definition um",
    "start": "1586159",
    "end": "1591440"
  },
  {
    "text": "yeah like i said um inbuilt there's an input scheduler called this cube scheduler which i'm those like",
    "start": "1591440",
    "end": "1598400"
  },
  {
    "text": "most of the scenarios that we would need schedulers for like most of the scenarios when schedulers for but there",
    "start": "1598400",
    "end": "1605279"
  },
  {
    "text": "are times that there are use cases whereby um the q scheduler will not be able to undo",
    "start": "1605279",
    "end": "1611760"
  },
  {
    "text": "and that's when we can we need to probably need to write our own scheduler and attach it to",
    "start": "1611760",
    "end": "1618080"
  },
  {
    "text": "our kubernetes cluster so that we can use that scheduler instead of the um default keep scheduler so a typical",
    "start": "1618080",
    "end": "1624320"
  },
  {
    "text": "example is maybe for example i have a deployment or a stateful set right and i want to i want to be able to order",
    "start": "1624320",
    "end": "1632000"
  },
  {
    "text": "outputs are deployed across multiple zones so let's assume i have a kubernetes cluster",
    "start": "1632000",
    "end": "1638399"
  },
  {
    "text": "right and i have multiple nodes let me select 10 or 15 availability zones um",
    "start": "1638399",
    "end": "1644399"
  },
  {
    "text": "across multiple places um and i have worker nodes in all of those um zones",
    "start": "1644399",
    "end": "1651760"
  },
  {
    "text": "what the scheduler guide scheduler that says okay this is the order in which i want this node these ports to be deployed to",
    "start": "1651760",
    "end": "1659039"
  },
  {
    "text": "this node so i can say oh we need to go to availabilities on a first then go to availability create the port there then",
    "start": "1659039",
    "end": "1666240"
  },
  {
    "text": "come back to b and go to e and come back to f so that is a typical example of what a custom scheduler does um",
    "start": "1666240",
    "end": "1675520"
  },
  {
    "text": "yeah so that's what it does um the use cases for this one actually not as much or as",
    "start": "1675520",
    "end": "1680720"
  },
  {
    "text": "visible as that of controllers or operators but then they can also be useful",
    "start": "1680720",
    "end": "1686799"
  },
  {
    "text": "um yeah so in in foresight on hand sides we have quantities really has become like a",
    "start": "1686799",
    "end": "1693360"
  },
  {
    "text": "major tool in eternity space right um when you say and a lot of people would say when you say kibanet is you mean",
    "start": "1693360",
    "end": "1699360"
  },
  {
    "text": "cloud native right so clarity is like it was across the cloud and kubernetes and the other way around because of its use",
    "start": "1699360",
    "end": "1706240"
  },
  {
    "text": "of you use an ability to scale workloads effectively with his wide range of use cases by its",
    "start": "1706240",
    "end": "1711919"
  },
  {
    "text": "robust api so as the adoption of kubernetes actually increases there will be scenarios humanities is not equipped",
    "start": "1711919",
    "end": "1718640"
  },
  {
    "text": "to end by default but then that's where extensibility comes into play and we can",
    "start": "1718640",
    "end": "1724240"
  },
  {
    "text": "also always extend it any way we want in whatever fashion that we want to extend",
    "start": "1724240",
    "end": "1729600"
  },
  {
    "text": "it um i'll do a quick demo on custom resources custom resource",
    "start": "1729600",
    "end": "1735760"
  },
  {
    "text": "definition and controllers basically before i go",
    "start": "1735760",
    "end": "1741679"
  },
  {
    "text": "let me share the right screen",
    "start": "1742000",
    "end": "1747080"
  },
  {
    "text": "all right so um what i'm going to do here uh i hope you can i hope it's clear",
    "start": "1754240",
    "end": "1759279"
  },
  {
    "text": "enough um what i'm going to do is i'm going to",
    "start": "1759279",
    "end": "1765600"
  },
  {
    "text": "show us our custom resource these are created through custom resource definitions",
    "start": "1765600",
    "end": "1770720"
  },
  {
    "text": "and we'll see how a controller is being used so this arm controller here is pretty much basic",
    "start": "1770720",
    "end": "1777840"
  },
  {
    "text": "and simple and what it does is it creates an nginx image without us specifying the engineer's image and so",
    "start": "1777840",
    "end": "1784880"
  },
  {
    "text": "it's just very basic it just shows our controllers actually work um now for like i mentioned there are a",
    "start": "1784880",
    "end": "1791679"
  },
  {
    "text": "lot of custom resource types that we have um in default kubernetes cluster so",
    "start": "1791679",
    "end": "1798559"
  },
  {
    "text": "let me show you a couple",
    "start": "1798559",
    "end": "1802200"
  },
  {
    "text": "so we can see a lot i know that i will be able to recognize some of the some of these things like you can see nodes you",
    "start": "1808880",
    "end": "1814559"
  },
  {
    "text": "can support cancel secret service account and so these are the default values for this default resource types",
    "start": "1814559",
    "end": "1821360"
  },
  {
    "text": "for um kubernetes in kubernetes right and now",
    "start": "1821360",
    "end": "1827600"
  },
  {
    "text": "we want to create a new resource type called nginx operator and",
    "start": "1827600",
    "end": "1833200"
  },
  {
    "text": "so let's do something real quick let's see if we can find it within our resource types at the moment",
    "start": "1833200",
    "end": "1841279"
  },
  {
    "text": "so you can see that there's nothing like that because it didn't return anything um one thing we can do like i mentioned",
    "start": "1847200",
    "end": "1853279"
  },
  {
    "text": "for a custom resource uh custom resource so what we need now is we need the custom resource definitions right",
    "start": "1853279",
    "end": "1860640"
  },
  {
    "text": "and that custom resource definition let me look for it um",
    "start": "1860640",
    "end": "1866158"
  },
  {
    "text": "yes so this is a typical example of what we would have in a custom resource definition so you can see it's a",
    "start": "1867440",
    "end": "1875039"
  },
  {
    "text": "and again customization is actually custom resource type also which is which which which but that's",
    "start": "1875039",
    "end": "1882240"
  },
  {
    "text": "what makes is really beautiful so yeah using an api in points okay or the api right so you can see it has a kind",
    "start": "1882240",
    "end": "1889120"
  },
  {
    "text": "custom resource definition it has the name so this is going to be the name of our um",
    "start": "1889120",
    "end": "1894559"
  },
  {
    "text": "custom resource type and um you can see that a couple of things that have been mentioned the group it belongs to",
    "start": "1894559",
    "end": "1901360"
  },
  {
    "text": "the plural form which is this nns operator singular form engineers operator and we are specifying that is a",
    "start": "1901360",
    "end": "1907600"
  },
  {
    "text": "namespace uh resource type there are two types of resource types there's names namespace and cluster wide so",
    "start": "1907600",
    "end": "1914559"
  },
  {
    "text": "clusterwise are operators that you don't need to specify your namespace to be able to access them",
    "start": "1914559",
    "end": "1920559"
  },
  {
    "text": "um but i bought for namespace operator you need to specify the name specific",
    "start": "1920559",
    "end": "1925600"
  },
  {
    "text": "scheme or it's been the default um namespace or the whatever default users",
    "start": "1925600",
    "end": "1930960"
  },
  {
    "text": "we specify on our humanities cluster and it shows the version and so many others",
    "start": "1930960",
    "end": "1936960"
  },
  {
    "text": "so there's a lot of things going on here so let me just mention one thing here we can see the spec and sure if you've if",
    "start": "1936960",
    "end": "1944080"
  },
  {
    "text": "you split the launch with the yeah i'm not fast commenting my friends we will be familiar with what your spec",
    "start": "1944080",
    "end": "1950480"
  },
  {
    "text": "is right so you can say spec it's action for things like a port",
    "start": "1950480",
    "end": "1956159"
  },
  {
    "text": "um which is the part of the of the nginx operator and the replica number of appearances",
    "start": "1956159",
    "end": "1962000"
  },
  {
    "text": "you want to have to in order to scale just like a deployment right so this is what it does",
    "start": "1962000",
    "end": "1968320"
  },
  {
    "text": "um a what in a what it's something to notice the status staples stop resource",
    "start": "1968320",
    "end": "1974240"
  },
  {
    "text": "it shows us so for example if i have uh if i say i want to have three replicas",
    "start": "1974240",
    "end": "1979760"
  },
  {
    "text": "for example and i only have one right it's going to be so this is the status",
    "start": "1979760",
    "end": "1985279"
  },
  {
    "text": "pretty much is where the actual script of that resource type is",
    "start": "1985279",
    "end": "1990480"
  },
  {
    "text": "recorded so if it's not aligning with the desired states then the controller will be um",
    "start": "1990480",
    "end": "1997440"
  },
  {
    "text": "activated so this is what it does as you can see we can't find anything that has to do with engineer's control like nginx",
    "start": "1997440",
    "end": "2005039"
  },
  {
    "text": "custom resource here so i'm going to add it",
    "start": "2005039",
    "end": "2009960"
  },
  {
    "text": "so i've created i've added my custom resource definition now coming back here again i can let me",
    "start": "2022559",
    "end": "2027919"
  },
  {
    "text": "do decent command again to check so as you can see now and i",
    "start": "2027919",
    "end": "2033919"
  },
  {
    "text": "have an nginx resource type here um with everything we need",
    "start": "2033919",
    "end": "2039200"
  },
  {
    "text": "now um what's the next thing we need to do so the next thing we need to do now is we create our kubernetes object right",
    "start": "2039200",
    "end": "2046000"
  },
  {
    "text": "so yeah let's let's let's go ahead and do that since we already have our custom resource type um",
    "start": "2046000",
    "end": "2053040"
  },
  {
    "text": "coming so for our engine xd no not this one uh",
    "start": "2053119",
    "end": "2058638"
  },
  {
    "text": "yeah samples so because you can see we have a kind of engine x operator with the name this i'm saying let's have two",
    "start": "2058639",
    "end": "2065679"
  },
  {
    "text": "replicas and now we put off but 80 yeah all right so let's do that um keeps it",
    "start": "2065679",
    "end": "2072000"
  },
  {
    "text": "here apply hf um config",
    "start": "2072000",
    "end": "2080240"
  },
  {
    "text": "samples operator",
    "start": "2080480",
    "end": "2084879"
  },
  {
    "text": "you want yeah this one now what happens is we've created our resource objects so let's see it",
    "start": "2085520",
    "end": "2095158"
  },
  {
    "text": "yeah yes we have our objects here and you can see it was created 15 seconds ago but",
    "start": "2102880",
    "end": "2108240"
  },
  {
    "text": "then um these are objects it's supposed to do what this object is supposed to",
    "start": "2108240",
    "end": "2113280"
  },
  {
    "text": "create supports just like deployments work so let's see if it creates a port for us or not",
    "start": "2113280",
    "end": "2119839"
  },
  {
    "text": "um",
    "start": "2119839",
    "end": "2122160"
  },
  {
    "text": "we can't see any any part being created and the reason for this is because we do not have any controller behind it that's",
    "start": "2127760",
    "end": "2134400"
  },
  {
    "text": "listening to activities of this um resource type to know what to do so like",
    "start": "2134400",
    "end": "2140160"
  },
  {
    "text": "i said it's just like a placeholder nothing happens like i'm not seeing anything nothing is going on",
    "start": "2140160",
    "end": "2145520"
  },
  {
    "text": "so if i do for example qctl describe",
    "start": "2145520",
    "end": "2150960"
  },
  {
    "text": "nginx operator",
    "start": "2151839",
    "end": "2155320"
  },
  {
    "text": "you can see at the bottom you can see there are no events coming in at the bottom so nothing is going on we",
    "start": "2162720",
    "end": "2168880"
  },
  {
    "text": "don't know what's going on um so how do we how do we how do we make sure that what we have is actually going it's",
    "start": "2168880",
    "end": "2174960"
  },
  {
    "text": "actually quite fine uh we will need to create a controller and deploy our controller so for this demo i'm just",
    "start": "2174960",
    "end": "2181119"
  },
  {
    "text": "going to run it like i said to joshua what i've said i don't need to deploy my controller on kubernetes i can just run",
    "start": "2181119",
    "end": "2186560"
  },
  {
    "text": "it as an application so um for this one we are using go right to write our",
    "start": "2186560",
    "end": "2192320"
  },
  {
    "text": "controller and this is the logic here this is very simple very basic um",
    "start": "2192320",
    "end": "2198400"
  },
  {
    "text": "just this is all you need to run it um a lot of things i won't i won't spend time to",
    "start": "2198400",
    "end": "2203920"
  },
  {
    "text": "explain what all of this is doing but um what you just need to know is that this is what we need we are making",
    "start": "2203920",
    "end": "2210880"
  },
  {
    "text": "we are making use majority of the deployment resource type to create our pods so um so there's this layer of our nginx",
    "start": "2210880",
    "end": "2218000"
  },
  {
    "text": "operator custom resource um which is built on top of the deployments resource just to be able to",
    "start": "2218000",
    "end": "2223680"
  },
  {
    "text": "create our port um now for me to run let me do this make um",
    "start": "2223680",
    "end": "2229839"
  },
  {
    "text": "i'm waiting for it to start running so it's running now it got",
    "start": "2236560",
    "end": "2242920"
  },
  {
    "text": "as you can see you know initially when we did keepsake gets bored nothing was running now we can see our engineers of",
    "start": "2248960",
    "end": "2254880"
  },
  {
    "text": "creator filterboard actually running now uh let's let's there's one more thing to show that it's actually working the way",
    "start": "2254880",
    "end": "2260960"
  },
  {
    "text": "suppose let's delete one of these ports so if i delete one of them qctl delete",
    "start": "2260960",
    "end": "2267920"
  },
  {
    "text": "board um let's just copy this and paste",
    "start": "2269280",
    "end": "2276960"
  },
  {
    "text": "it for it to return yes so that the little one of the parts",
    "start": "2282880",
    "end": "2288880"
  },
  {
    "text": "let's see what happens so what that means is that it's going to change state rights our state so if you do because",
    "start": "2288880",
    "end": "2295839"
  },
  {
    "text": "this is quite fast it will probably be done by now so won't be able to see it so it's actually running again changes",
    "start": "2295839",
    "end": "2302000"
  },
  {
    "text": "four seconds ago so if we have done something like keep ctl describe",
    "start": "2302000",
    "end": "2308640"
  },
  {
    "text": "nginx operator",
    "start": "2308640",
    "end": "2314079"
  },
  {
    "text": "um uh what's up what's the name of our",
    "start": "2314079",
    "end": "2320240"
  },
  {
    "text": "operator again",
    "start": "2320240",
    "end": "2323720"
  },
  {
    "text": "so at right now okay it's not returning any events for now but then",
    "start": "2331280",
    "end": "2336960"
  },
  {
    "text": "what we've done so far is that we can see that when we created our custom resource",
    "start": "2336960",
    "end": "2342160"
  },
  {
    "text": "right it created it's it's did our custom resource and we're able to create our objects but then",
    "start": "2342160",
    "end": "2348160"
  },
  {
    "text": "until we run the controller none of the things none of the things the messages were sent in was actually",
    "start": "2348160",
    "end": "2354480"
  },
  {
    "text": "implemented and until we did it so this is more like a typical example of a use case might",
    "start": "2354480",
    "end": "2360320"
  },
  {
    "text": "not be a very good example but then there's like a reward example of how we can use controllers in our um in daily",
    "start": "2360320",
    "end": "2368320"
  },
  {
    "text": "activities and applications so yeah back to",
    "start": "2368320",
    "end": "2374400"
  },
  {
    "text": "so yeah um so what we've covered today is just majorly being um kubernetes custom resources custom resource",
    "start": "2381040",
    "end": "2388000"
  },
  {
    "text": "definitions um custom controllers operators and custom schedulers um",
    "start": "2388000",
    "end": "2394400"
  },
  {
    "text": "yeah so that's all from me thank you very much um for having me",
    "start": "2394400",
    "end": "2400559"
  },
  {
    "text": "oh thank you so much depo ajayi for that excellent section",
    "start": "2401200",
    "end": "2406800"
  },
  {
    "text": "and that was a really informative one if you were able to follow up on the demo it you must have caught up on that as",
    "start": "2406800",
    "end": "2412720"
  },
  {
    "text": "well thank you so much section",
    "start": "2412720",
    "end": "2417720"
  }
]