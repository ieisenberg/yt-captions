[
  {
    "start": "0",
    "end": "0"
  },
  {
    "text": "my name is Leena Hall I work at",
    "start": "0",
    "end": "1770"
  },
  {
    "text": "Microsoft on Azure and today we're going",
    "start": "1770",
    "end": "4950"
  },
  {
    "text": "to be talking about data intensive",
    "start": "4950",
    "end": "7230"
  },
  {
    "text": "workloads so what are first things that",
    "start": "7230",
    "end": "10650"
  },
  {
    "text": "come to mind databases caches stream",
    "start": "10650",
    "end": "15059"
  },
  {
    "text": "processing systems any systems that work",
    "start": "15059",
    "end": "18060"
  },
  {
    "text": "with state and data another type of",
    "start": "18060",
    "end": "21869"
  },
  {
    "text": "systems that we're going to be talking",
    "start": "21869",
    "end": "23609"
  },
  {
    "text": "about today is not necessarily stateful",
    "start": "23609",
    "end": "27240"
  },
  {
    "text": "systems but those that operate in a way",
    "start": "27240",
    "end": "30689"
  },
  {
    "text": "that isn't fully covered by predefined",
    "start": "30689",
    "end": "33899"
  },
  {
    "text": "kubernetes abstractions so it can be any",
    "start": "33899",
    "end": "37950"
  },
  {
    "text": "of the popular distributed systems like",
    "start": "37950",
    "end": "40829"
  },
  {
    "text": "Cassandra or Kafka",
    "start": "40829",
    "end": "42450"
  },
  {
    "text": "they definitely need persistence word",
    "start": "42450",
    "end": "45750"
  },
  {
    "text": "can be systems like spark that operate",
    "start": "45750",
    "end": "48329"
  },
  {
    "text": "mostly in memory but still require",
    "start": "48329",
    "end": "50399"
  },
  {
    "text": "persistence for certain scenarios like",
    "start": "50399",
    "end": "53309"
  },
  {
    "text": "persisting trained machine learning",
    "start": "53309",
    "end": "55350"
  },
  {
    "text": "model or it can even be a system that",
    "start": "55350",
    "end": "58829"
  },
  {
    "text": "you have built that might need to store",
    "start": "58829",
    "end": "62460"
  },
  {
    "text": "State and manage state it might have",
    "start": "62460",
    "end": "65700"
  },
  {
    "text": "very specific lifecycle rules of",
    "start": "65700",
    "end": "68010"
  },
  {
    "text": "operation or need to provide certain",
    "start": "68010",
    "end": "70799"
  },
  {
    "text": "guarantees like consistency no data loss",
    "start": "70799",
    "end": "74130"
  },
  {
    "text": "and other similar things so just a quick",
    "start": "74130",
    "end": "78210"
  },
  {
    "text": "show hands who here feels like you have",
    "start": "78210",
    "end": "81630"
  },
  {
    "text": "more experience with data systems than",
    "start": "81630",
    "end": "84509"
  },
  {
    "text": "kubernetes okay about sixty percent I",
    "start": "84509",
    "end": "90360"
  },
  {
    "text": "think interesting so majority of",
    "start": "90360",
    "end": "94680"
  },
  {
    "start": "93000",
    "end": "93000"
  },
  {
    "text": "information on how kubernetes is used",
    "start": "94680",
    "end": "97409"
  },
  {
    "text": "today it reflects mostly stateless",
    "start": "97409",
    "end": "100920"
  },
  {
    "text": "services but in some cases however it",
    "start": "100920",
    "end": "104250"
  },
  {
    "text": "might make sense to run something more",
    "start": "104250",
    "end": "107130"
  },
  {
    "text": "complex on kubernetes and there is a big",
    "start": "107130",
    "end": "110040"
  },
  {
    "text": "difference in technical process of how",
    "start": "110040",
    "end": "112380"
  },
  {
    "text": "we run data systems and more complex",
    "start": "112380",
    "end": "116340"
  },
  {
    "text": "systems and kubernetes versus simpler",
    "start": "116340",
    "end": "119009"
  },
  {
    "text": "stateless services and I know that we",
    "start": "119009",
    "end": "122549"
  },
  {
    "text": "have a very wide range of audience here",
    "start": "122549",
    "end": "125040"
  },
  {
    "text": "I have looked at the attendee profile",
    "start": "125040",
    "end": "126780"
  },
  {
    "text": "and have seen engineers Lucian",
    "start": "126780",
    "end": "130050"
  },
  {
    "text": "architects",
    "start": "130050",
    "end": "131400"
  },
  {
    "text": "engineering managers CTOs open-source",
    "start": "131400",
    "end": "135150"
  },
  {
    "text": "project maintainer x' and others that's",
    "start": "135150",
    "end": "138420"
  },
  {
    "start": "138000",
    "end": "138000"
  },
  {
    "text": "why we will address the topic from",
    "start": "138420",
    "end": "140550"
  },
  {
    "text": "various perspectives first we're going",
    "start": "140550",
    "end": "143160"
  },
  {
    "text": "to talk about making a decision whether",
    "start": "143160",
    "end": "146010"
  },
  {
    "text": "or not kubernetes is good for your",
    "start": "146010",
    "end": "149400"
  },
  {
    "text": "systems about the whys the risks the",
    "start": "149400",
    "end": "151799"
  },
  {
    "text": "benefits and challenges then we're going",
    "start": "151799",
    "end": "155010"
  },
  {
    "text": "to cover existing solutions how to run",
    "start": "155010",
    "end": "158760"
  },
  {
    "text": "data intensive systems and kubernetes",
    "start": "158760",
    "end": "160560"
  },
  {
    "text": "correctly and finally we will talk about",
    "start": "160560",
    "end": "163709"
  },
  {
    "text": "the future what we can expect what we",
    "start": "163709",
    "end": "167099"
  },
  {
    "text": "can already start preparing for decision",
    "start": "167099",
    "end": "172260"
  },
  {
    "text": "making is always fun so if some",
    "start": "172260",
    "end": "175530"
  },
  {
    "text": "organization with similar technologies",
    "start": "175530",
    "end": "178049"
  },
  {
    "text": "is using kubernetes it doesn't always",
    "start": "178049",
    "end": "180810"
  },
  {
    "text": "mean that it will work as well for your",
    "start": "180810",
    "end": "183750"
  },
  {
    "text": "use case they might have more resources",
    "start": "183750",
    "end": "186840"
  },
  {
    "text": "or expertise their risk acceptance",
    "start": "186840",
    "end": "190739"
  },
  {
    "text": "barrier could be lower than yours they",
    "start": "190739",
    "end": "193709"
  },
  {
    "text": "also might have different goals so when",
    "start": "193709",
    "end": "197579"
  },
  {
    "text": "making a decision on whether a",
    "start": "197579",
    "end": "199319"
  },
  {
    "text": "kubernetes is or isn't a good system for",
    "start": "199319",
    "end": "202049"
  },
  {
    "text": "your use case there are quite a few",
    "start": "202049",
    "end": "205049"
  },
  {
    "text": "things to take into account what issues",
    "start": "205049",
    "end": "208139"
  },
  {
    "text": "and challenges you would like to solve",
    "start": "208139",
    "end": "210569"
  },
  {
    "text": "that you have in your current",
    "start": "210569",
    "end": "212250"
  },
  {
    "text": "environment where you are running those",
    "start": "212250",
    "end": "214530"
  },
  {
    "text": "data intensive systems which of those",
    "start": "214530",
    "end": "217440"
  },
  {
    "text": "challenges do you think kubernetes will",
    "start": "217440",
    "end": "220530"
  },
  {
    "text": "solve but then what new challenges will",
    "start": "220530",
    "end": "223530"
  },
  {
    "text": "it create that you would have to deal",
    "start": "223530",
    "end": "225780"
  },
  {
    "text": "with how much will it cost how much",
    "start": "225780",
    "end": "228690"
  },
  {
    "text": "benefits will it bring what changes will",
    "start": "228690",
    "end": "232230"
  },
  {
    "text": "need to happen in your team in your",
    "start": "232230",
    "end": "234269"
  },
  {
    "text": "project and organization for it to be",
    "start": "234269",
    "end": "236639"
  },
  {
    "text": "successful",
    "start": "236639",
    "end": "237299"
  },
  {
    "text": "and what are the benefits of choosing",
    "start": "237299",
    "end": "240480"
  },
  {
    "text": "kubernetes to run your system over going",
    "start": "240480",
    "end": "243540"
  },
  {
    "text": "with a managed service so it's good to",
    "start": "243540",
    "end": "247680"
  },
  {
    "text": "have answers to those questions before",
    "start": "247680",
    "end": "250709"
  },
  {
    "text": "making a further decision because really",
    "start": "250709",
    "end": "253169"
  },
  {
    "text": "only you can answer them so if you're",
    "start": "253169",
    "end": "258090"
  },
  {
    "text": "wondering what are some of the reasons",
    "start": "258090",
    "end": "260840"
  },
  {
    "text": "companies are choosing kubernetes",
    "start": "260840",
    "end": "263130"
  },
  {
    "text": "they're Manning",
    "start": "263130",
    "end": "264710"
  },
  {
    "text": "samples of course someone to achieve",
    "start": "264710",
    "end": "267289"
  },
  {
    "text": "better workload portability for their",
    "start": "267289",
    "end": "270199"
  },
  {
    "text": "systems or to benefit from convenience",
    "start": "270199",
    "end": "272840"
  },
  {
    "text": "and flexibility of deployment operations",
    "start": "272840",
    "end": "277030"
  },
  {
    "text": "automation for creating new resources or",
    "start": "277030",
    "end": "280699"
  },
  {
    "text": "to get more independence from various",
    "start": "280699",
    "end": "282889"
  },
  {
    "text": "vendors or various providers some",
    "start": "282889",
    "end": "286430"
  },
  {
    "text": "running to get faster startup times for",
    "start": "286430",
    "end": "288680"
  },
  {
    "text": "new resources in environments for cost",
    "start": "288680",
    "end": "291050"
  },
  {
    "text": "savings but some companies are choosing",
    "start": "291050",
    "end": "294020"
  },
  {
    "text": "kubernetes because they're already",
    "start": "294020",
    "end": "295940"
  },
  {
    "text": "running kubernetes for their existing",
    "start": "295940",
    "end": "299990"
  },
  {
    "text": "services and they want to use it for",
    "start": "299990",
    "end": "302330"
  },
  {
    "text": "more of their solutions a lot of",
    "start": "302330",
    "end": "305030"
  },
  {
    "text": "projects find extensible and open api",
    "start": "305030",
    "end": "308509"
  },
  {
    "text": "the kubernetes has very useful for",
    "start": "308509",
    "end": "311840"
  },
  {
    "text": "building solutions on top of it they",
    "start": "311840",
    "end": "315259"
  },
  {
    "text": "also prefer to trust it because of open",
    "start": "315259",
    "end": "317330"
  },
  {
    "text": "and rapidly growing ecosystem but on the",
    "start": "317330",
    "end": "321409"
  },
  {
    "text": "flip side there are of course a quite a",
    "start": "321409",
    "end": "323630"
  },
  {
    "text": "few challenges some companies by being a",
    "start": "323630",
    "end": "326360"
  },
  {
    "text": "situation where there are no available",
    "start": "326360",
    "end": "328729"
  },
  {
    "text": "solutions that satisfy their scenario",
    "start": "328729",
    "end": "331430"
  },
  {
    "text": "and if they decide to go with kubernetes",
    "start": "331430",
    "end": "334159"
  },
  {
    "text": "there would sometimes have to build",
    "start": "334159",
    "end": "336349"
  },
  {
    "text": "their solution almost from scratch",
    "start": "336349",
    "end": "337820"
  },
  {
    "text": "because there are no suitable options to",
    "start": "337820",
    "end": "341090"
  },
  {
    "text": "gain new skills to troubleshoot new",
    "start": "341090",
    "end": "343820"
  },
  {
    "text": "environments and to spend a lot of",
    "start": "343820",
    "end": "346490"
  },
  {
    "text": "resources on training and time to",
    "start": "346490",
    "end": "349400"
  },
  {
    "text": "support it there are other challenges",
    "start": "349400",
    "end": "351919"
  },
  {
    "text": "like stability and reliability of",
    "start": "351919",
    "end": "353900"
  },
  {
    "text": "existing components integrations with",
    "start": "353900",
    "end": "357139"
  },
  {
    "text": "various systems and many more but the",
    "start": "357139",
    "end": "360050"
  },
  {
    "text": "one thing that I can actually say with",
    "start": "360050",
    "end": "362210"
  },
  {
    "text": "great certainty is that if something in",
    "start": "362210",
    "end": "364669"
  },
  {
    "text": "kubernetes ecosystem was unstable or it",
    "start": "364669",
    "end": "368659"
  },
  {
    "text": "didn't exist a few months ago there is a",
    "start": "368659",
    "end": "371240"
  },
  {
    "text": "big chance that it's fixed by now it's",
    "start": "371240",
    "end": "374719"
  },
  {
    "text": "really a fast-growing ecosystem so how",
    "start": "374719",
    "end": "378830"
  },
  {
    "start": "378000",
    "end": "378000"
  },
  {
    "text": "do we determine possible risks and",
    "start": "378830",
    "end": "381110"
  },
  {
    "text": "challenges to do that we need to",
    "start": "381110",
    "end": "384289"
  },
  {
    "text": "understand what converters can and can't",
    "start": "384289",
    "end": "387139"
  },
  {
    "text": "do what it is and isn't responsible for",
    "start": "387139",
    "end": "391419"
  },
  {
    "text": "how do we determine if kubernetes can",
    "start": "391419",
    "end": "394699"
  },
  {
    "text": "satisfy our",
    "start": "394699",
    "end": "396680"
  },
  {
    "text": "guarantees that are required by our",
    "start": "396680",
    "end": "398700"
  },
  {
    "text": "system we need to learn abstractions and",
    "start": "398700",
    "end": "402390"
  },
  {
    "text": "instruments that kubernetes and its API",
    "start": "402390",
    "end": "405000"
  },
  {
    "text": "have to guarantee or implement our",
    "start": "405000",
    "end": "408900"
  },
  {
    "text": "system requirements so the big takeaway",
    "start": "408900",
    "end": "412380"
  },
  {
    "text": "here is before we can make the right",
    "start": "412380",
    "end": "416190"
  },
  {
    "text": "decision we have to get more specific",
    "start": "416190",
    "end": "419310"
  },
  {
    "text": "and take a look at details so let's do",
    "start": "419310",
    "end": "421710"
  },
  {
    "text": "that so you're all are most likely",
    "start": "421710",
    "end": "424560"
  },
  {
    "text": "familiar with at least several built in",
    "start": "424560",
    "end": "427950"
  },
  {
    "text": "kubernetes types like paws jobs",
    "start": "427950",
    "end": "430860"
  },
  {
    "text": "deployments staple sets services and",
    "start": "430860",
    "end": "433470"
  },
  {
    "text": "more those and many more our core",
    "start": "433470",
    "end": "437490"
  },
  {
    "text": "kubernetes api objects or types that we",
    "start": "437490",
    "end": "440610"
  },
  {
    "text": "can use to build our apps when new data",
    "start": "440610",
    "end": "444240"
  },
  {
    "text": "people are discovering kubernetes they",
    "start": "444240",
    "end": "446940"
  },
  {
    "text": "see stateful sets and it might seem like",
    "start": "446940",
    "end": "449880"
  },
  {
    "text": "a good solution for running their data",
    "start": "449880",
    "end": "452700"
  },
  {
    "text": "systems on kubernetes but if we look a",
    "start": "452700",
    "end": "456630"
  },
  {
    "text": "little bit closer stateful set is just",
    "start": "456630",
    "end": "459180"
  },
  {
    "text": "one of the many predefined kubernetes",
    "start": "459180",
    "end": "461520"
  },
  {
    "text": "types it supports certain predefined",
    "start": "461520",
    "end": "464670"
  },
  {
    "text": "functionality like replication stable",
    "start": "464670",
    "end": "468090"
  },
  {
    "text": "pod startup ordering predictable named",
    "start": "468090",
    "end": "471510"
  },
  {
    "text": "for pods stable links to persistent",
    "start": "471510",
    "end": "474570"
  },
  {
    "text": "storage volumes but nothing else really",
    "start": "474570",
    "end": "477380"
  },
  {
    "text": "it is great for some use cases but is it",
    "start": "477380",
    "end": "480990"
  },
  {
    "text": "really enough for all of the data",
    "start": "480990",
    "end": "483510"
  },
  {
    "text": "intensive system scenarios in other",
    "start": "483510",
    "end": "487080"
  },
  {
    "text": "words what if stateless says don't",
    "start": "487080",
    "end": "489720"
  },
  {
    "text": "really work for our scenario our",
    "start": "489720",
    "end": "493980"
  },
  {
    "text": "scenario might need more specific data",
    "start": "493980",
    "end": "495690"
  },
  {
    "text": "distribution or life cycle rules that",
    "start": "495690",
    "end": "498510"
  },
  {
    "text": "are not implemented on the level of",
    "start": "498510",
    "end": "500400"
  },
  {
    "text": "stateful sets so what if none of the",
    "start": "500400",
    "end": "504180"
  },
  {
    "text": "core kubernetes types work for our",
    "start": "504180",
    "end": "506520"
  },
  {
    "text": "scenario the reality is yes",
    "start": "506520",
    "end": "510630"
  },
  {
    "text": "built in kubernetes abstractions might",
    "start": "510630",
    "end": "512610"
  },
  {
    "text": "not be fully sufficient for running more",
    "start": "512610",
    "end": "515039"
  },
  {
    "text": "complex distributed data systems and it",
    "start": "515039",
    "end": "518130"
  },
  {
    "text": "comes down to application specific",
    "start": "518130",
    "end": "520710"
  },
  {
    "text": "things that need special care objects",
    "start": "520710",
    "end": "525030"
  },
  {
    "text": "like stateful sets are powerful but they",
    "start": "525030",
    "end": "527820"
  },
  {
    "text": "alone have no idea",
    "start": "527820",
    "end": "530050"
  },
  {
    "text": "what's different between a Kafka or",
    "start": "530050",
    "end": "532570"
  },
  {
    "text": "Cassandra cluster even if they have",
    "start": "532570",
    "end": "535090"
  },
  {
    "text": "special operations I mean common",
    "start": "535090",
    "end": "537130"
  },
  {
    "text": "operations like scaling it doesn't have",
    "start": "537130",
    "end": "540940"
  },
  {
    "text": "any knowledge if things should be",
    "start": "540940",
    "end": "542470"
  },
  {
    "text": "managed differently unless we teach",
    "start": "542470",
    "end": "545530"
  },
  {
    "text": "kubernetes how to treat our systems and",
    "start": "545530",
    "end": "548130"
  },
  {
    "text": "take pronounces specific to a stateful",
    "start": "548130",
    "end": "551170"
  },
  {
    "text": "application under consideration",
    "start": "551170",
    "end": "554220"
  },
  {
    "text": "so kubernetes simply doesn't know all of",
    "start": "554220",
    "end": "557830"
  },
  {
    "text": "the specifics of internal operation of",
    "start": "557830",
    "end": "560530"
  },
  {
    "text": "all distributed systems that we might",
    "start": "560530",
    "end": "563290"
  },
  {
    "text": "want to run on it the definition of",
    "start": "563290",
    "end": "565960"
  },
  {
    "text": "operating correctly is different for",
    "start": "565960",
    "end": "569350"
  },
  {
    "text": "many different systems the good news is",
    "start": "569350",
    "end": "572530"
  },
  {
    "text": "that we can still run many of the",
    "start": "572530",
    "end": "575350"
  },
  {
    "text": "complex systems on kerbin Ares correctly",
    "start": "575350",
    "end": "577600"
  },
  {
    "text": "because there is a way to do so with",
    "start": "577600",
    "end": "580270"
  },
  {
    "text": "customers or definitions and custom",
    "start": "580270",
    "end": "582940"
  },
  {
    "text": "controllers so let's make it more",
    "start": "582940",
    "end": "585280"
  },
  {
    "text": "concrete and look at a few examples",
    "start": "585280",
    "end": "589650"
  },
  {
    "start": "588000",
    "end": "588000"
  },
  {
    "text": "let's take cluster scaling as a first",
    "start": "590010",
    "end": "593230"
  },
  {
    "text": "example many clusters can support",
    "start": "593230",
    "end": "596230"
  },
  {
    "text": "scaling so let's think of it as if I",
    "start": "596230",
    "end": "598870"
  },
  {
    "text": "took off cluster for a second if we were",
    "start": "598870",
    "end": "601660"
  },
  {
    "text": "running it using stateful sets and",
    "start": "601660",
    "end": "603970"
  },
  {
    "text": "decide to increase number of brokers in",
    "start": "603970",
    "end": "606670"
  },
  {
    "text": "the cluster a stateful set would add a",
    "start": "606670",
    "end": "610030"
  },
  {
    "text": "new replica pod attach a new persistent",
    "start": "610030",
    "end": "612880"
  },
  {
    "text": "volume to it issued a new predictable",
    "start": "612880",
    "end": "616120"
  },
  {
    "text": "name it isn't actually enough for",
    "start": "616120",
    "end": "618970"
  },
  {
    "text": "correct operation of the kafka cluster",
    "start": "618970",
    "end": "622620"
  },
  {
    "text": "adding nodes to a kafka cluster",
    "start": "622620",
    "end": "625870"
  },
  {
    "text": "correctly it requires a few things first",
    "start": "625870",
    "end": "629860"
  },
  {
    "text": "of all manually assigning some",
    "start": "629860",
    "end": "632470"
  },
  {
    "text": "partitions to new Brokers because by",
    "start": "632470",
    "end": "635440"
  },
  {
    "text": "just by itself new pods don't",
    "start": "635440",
    "end": "638460"
  },
  {
    "text": "automatically get assigned new topic",
    "start": "638460",
    "end": "641920"
  },
  {
    "text": "partitions so we need to take care of it",
    "start": "641920",
    "end": "644200"
  },
  {
    "text": "another important thing is cluster",
    "start": "644200",
    "end": "647350"
  },
  {
    "text": "configuration new pods will not",
    "start": "647350",
    "end": "649720"
  },
  {
    "text": "automatically be updated with all",
    "start": "649720",
    "end": "651790"
  },
  {
    "text": "necessary configuration values",
    "start": "651790",
    "end": "655040"
  },
  {
    "text": "another example our cluster restarts",
    "start": "655040",
    "end": "657930"
  },
  {
    "text": "which is relevant to many systems but",
    "start": "657930",
    "end": "660750"
  },
  {
    "text": "it's very specific to each separate",
    "start": "660750",
    "end": "662850"
  },
  {
    "text": "system so for Kafka restarts need to be",
    "start": "662850",
    "end": "666720"
  },
  {
    "text": "done carefully so what is it meaning to",
    "start": "666720",
    "end": "670140"
  },
  {
    "text": "have a good restart we need to make sure",
    "start": "670140",
    "end": "672900"
  },
  {
    "text": "that there are no under replicated",
    "start": "672900",
    "end": "674850"
  },
  {
    "text": "partitions before doing this and we need",
    "start": "674850",
    "end": "676890"
  },
  {
    "text": "to make sure that the cluster is in a",
    "start": "676890",
    "end": "678420"
  },
  {
    "text": "healthy state then we can start the",
    "start": "678420",
    "end": "681000"
  },
  {
    "text": "restart operation and do it one broker",
    "start": "681000",
    "end": "683310"
  },
  {
    "text": "at a time each time making sure that the",
    "start": "683310",
    "end": "688050"
  },
  {
    "text": "the broker is caught up to the leader so",
    "start": "688050",
    "end": "692450"
  },
  {
    "text": "also a graceful shutdown of the each",
    "start": "692450",
    "end": "696210"
  },
  {
    "text": "broker is very important for this",
    "start": "696210",
    "end": "697650"
  },
  {
    "text": "operation basically these are just some",
    "start": "697650",
    "end": "702270"
  },
  {
    "text": "examples what could go wrong if we don't",
    "start": "702270",
    "end": "705360"
  },
  {
    "text": "implement it correctly and because",
    "start": "705360",
    "end": "708240"
  },
  {
    "text": "kubernetes is very extensible and open",
    "start": "708240",
    "end": "710760"
  },
  {
    "text": "we can implement new and missing",
    "start": "710760",
    "end": "713040"
  },
  {
    "text": "functionality really easily we can use",
    "start": "713040",
    "end": "716430"
  },
  {
    "text": "customers definitions and custom",
    "start": "716430",
    "end": "718680"
  },
  {
    "text": "controllers and a custom resource is an",
    "start": "718680",
    "end": "724020"
  },
  {
    "text": "extension of kubernetes api that is not",
    "start": "724020",
    "end": "726900"
  },
  {
    "text": "necessarily available on every",
    "start": "726900",
    "end": "728790"
  },
  {
    "text": "kubernetes cluster it can be added so",
    "start": "728790",
    "end": "732090"
  },
  {
    "text": "after its added users can work with",
    "start": "732090",
    "end": "734880"
  },
  {
    "text": "objects of the new resource just the",
    "start": "734880",
    "end": "737580"
  },
  {
    "text": "same way for working with built-in core",
    "start": "737580",
    "end": "740070"
  },
  {
    "text": "objects like pods so we can think of CR",
    "start": "740070",
    "end": "744150"
  },
  {
    "text": "DS as new kubernetes entities new data",
    "start": "744150",
    "end": "747720"
  },
  {
    "text": "types that we define that become a part",
    "start": "747720",
    "end": "750360"
  },
  {
    "text": "of kubernetes api but on their own",
    "start": "750360",
    "end": "754550"
  },
  {
    "text": "custom resource doesn't actually contain",
    "start": "754550",
    "end": "757350"
  },
  {
    "text": "any logic it just defines a new resource",
    "start": "757350",
    "end": "760880"
  },
  {
    "text": "but we can combine a CD with a",
    "start": "760880",
    "end": "764340"
  },
  {
    "text": "controller which allows us to declare",
    "start": "764340",
    "end": "767040"
  },
  {
    "text": "logic to say what is the desired state",
    "start": "767040",
    "end": "770400"
  },
  {
    "text": "for our resource for example we could",
    "start": "770400",
    "end": "773670"
  },
  {
    "text": "create a new CD called a Cassandra",
    "start": "773670",
    "end": "777210"
  },
  {
    "text": "cluster or a Kafka cluster or a spark",
    "start": "777210",
    "end": "779730"
  },
  {
    "text": "job or a tensorflow job and then we can",
    "start": "779730",
    "end": "782580"
  },
  {
    "text": "write a custom controller for our C Rd",
    "start": "782580",
    "end": "785340"
  },
  {
    "text": "and specify the logic that defines",
    "start": "785340",
    "end": "787980"
  },
  {
    "text": "what correct desired state means for",
    "start": "787980",
    "end": "791700"
  },
  {
    "text": "operation over a specific stateful",
    "start": "791700",
    "end": "793470"
  },
  {
    "text": "application if we take a sander for",
    "start": "793470",
    "end": "795930"
  },
  {
    "text": "example it could mean that the",
    "start": "795930",
    "end": "798030"
  },
  {
    "text": "controller won't let kubernetes restart",
    "start": "798030",
    "end": "800940"
  },
  {
    "text": "a replica pod until the replication of",
    "start": "800940",
    "end": "804180"
  },
  {
    "text": "certain data on some partition is",
    "start": "804180",
    "end": "807240"
  },
  {
    "text": "complete so just as each built-in object",
    "start": "807240",
    "end": "811860"
  },
  {
    "text": "in Copernicus has a core controller",
    "start": "811860",
    "end": "814500"
  },
  {
    "text": "behind it custom controllers enable us",
    "start": "814500",
    "end": "818640"
  },
  {
    "text": "to create new logic to manage our new",
    "start": "818640",
    "end": "820590"
  },
  {
    "text": "cds to extend and add new",
    "start": "820590",
    "end": "822630"
  },
  {
    "text": "functionalities you might have heard of",
    "start": "822630",
    "end": "826020"
  },
  {
    "text": "an operator pattern which is just a",
    "start": "826020",
    "end": "829800"
  },
  {
    "text": "combination of a customer's or",
    "start": "829800",
    "end": "831690"
  },
  {
    "text": "definition and a custom controller",
    "start": "831690",
    "end": "835400"
  },
  {
    "text": "operators are interesting because they",
    "start": "835400",
    "end": "838020"
  },
  {
    "text": "are important not only for container",
    "start": "838020",
    "end": "840360"
  },
  {
    "text": "people but they are also important for",
    "start": "840360",
    "end": "842580"
  },
  {
    "text": "Kafka engineers for Kassandra engineers",
    "start": "842580",
    "end": "845010"
  },
  {
    "text": "for SPARC engineers tensorflow engineers",
    "start": "845010",
    "end": "847980"
  },
  {
    "text": "and basically for all engineers who want",
    "start": "847980",
    "end": "852390"
  },
  {
    "text": "to benefit from running and managing",
    "start": "852390",
    "end": "854790"
  },
  {
    "text": "their distributed systems reliably",
    "start": "854790",
    "end": "857280"
  },
  {
    "text": "consistently and correctly when built in",
    "start": "857280",
    "end": "861090"
  },
  {
    "text": "kubernetes resources are not enough so",
    "start": "861090",
    "end": "865920"
  },
  {
    "start": "865000",
    "end": "865000"
  },
  {
    "text": "now that we know what an operator is we",
    "start": "865920",
    "end": "868230"
  },
  {
    "text": "can take a closer look at internal",
    "start": "868230",
    "end": "870480"
  },
  {
    "text": "aspect of it first of all it's helpful",
    "start": "870480",
    "end": "873990"
  },
  {
    "text": "to understand the notion of events in",
    "start": "873990",
    "end": "876180"
  },
  {
    "text": "kubernetes so an event is an action on",
    "start": "876180",
    "end": "879930"
  },
  {
    "text": "some resource it can be create update or",
    "start": "879930",
    "end": "883440"
  },
  {
    "text": "delete and those resource available to",
    "start": "883440",
    "end": "890930"
  },
  {
    "text": "the queue and control a worker is going",
    "start": "890930",
    "end": "895200"
  },
  {
    "text": "to block on a call to get the next item",
    "start": "895200",
    "end": "898080"
  },
  {
    "text": "from the queue so we can think of",
    "start": "898080",
    "end": "900000"
  },
  {
    "text": "controllers as brains behind our",
    "start": "900000",
    "end": "902730"
  },
  {
    "text": "resources themselves there is another",
    "start": "902730",
    "end": "905550"
  },
  {
    "text": "important aspect that is worth",
    "start": "905550",
    "end": "907890"
  },
  {
    "text": "mentioning it's called an informer an",
    "start": "907890",
    "end": "910100"
  },
  {
    "text": "informer is like a connection between",
    "start": "910100",
    "end": "912420"
  },
  {
    "text": "where those events originated from and",
    "start": "912420",
    "end": "914760"
  },
  {
    "text": "between our controller",
    "start": "914760",
    "end": "916560"
  },
  {
    "text": "so what informer does it registers event",
    "start": "916560",
    "end": "920010"
  },
  {
    "text": "handlers for these",
    "start": "920010",
    "end": "922019"
  },
  {
    "text": "three different types of events add",
    "start": "922019",
    "end": "924179"
  },
  {
    "text": "update and delete and inside event",
    "start": "924179",
    "end": "927059"
  },
  {
    "text": "handler functions of the informer we add",
    "start": "927059",
    "end": "930089"
  },
  {
    "text": "resource key to the queue to let content",
    "start": "930089",
    "end": "933149"
  },
  {
    "text": "to let controller logic handle those",
    "start": "933149",
    "end": "935939"
  },
  {
    "text": "events appropriately so let's take a",
    "start": "935939",
    "end": "940319"
  },
  {
    "text": "look at an operator in action one of the",
    "start": "940319",
    "end": "943110"
  },
  {
    "text": "existing operators that I really like is",
    "start": "943110",
    "end": "945420"
  },
  {
    "text": "a tender flow operator or TF operator",
    "start": "945420",
    "end": "948869"
  },
  {
    "text": "for short and it is part of a cube flow",
    "start": "948869",
    "end": "951959"
  },
  {
    "text": "project flow project aims to",
    "start": "951959",
    "end": "955110"
  },
  {
    "text": "provide a convenient way of running",
    "start": "955110",
    "end": "957660"
  },
  {
    "text": "tensor flow jobs on kubernetes clusters",
    "start": "957660",
    "end": "959790"
  },
  {
    "text": "and this example actually runs on Azure",
    "start": "959790",
    "end": "962670"
  },
  {
    "text": "carbonated service but you can run it",
    "start": "962670",
    "end": "964739"
  },
  {
    "text": "anywhere else if you'd like because",
    "start": "964739",
    "end": "967309"
  },
  {
    "text": "workload portability and I have already",
    "start": "967309",
    "end": "971790"
  },
  {
    "text": "installed could flow on my cluster that",
    "start": "971790",
    "end": "974850"
  },
  {
    "text": "means that the cluster is already aware",
    "start": "974850",
    "end": "977519"
  },
  {
    "text": "of the new CRD and custom controller",
    "start": "977519",
    "end": "980549"
  },
  {
    "text": "that could flow needs to run tensorflow",
    "start": "980549",
    "end": "983610"
  },
  {
    "text": "jobs so let's take a look at the example",
    "start": "983610",
    "end": "989459"
  },
  {
    "text": "the first of all we need to generate the",
    "start": "989459",
    "end": "992519"
  },
  {
    "text": "specification that looking used to",
    "start": "992519",
    "end": "996059"
  },
  {
    "text": "submit new tensorflow jobs and could",
    "start": "996059",
    "end": "998939"
  },
  {
    "text": "flow uses case on it to to do generation",
    "start": "998939",
    "end": "1002809"
  },
  {
    "text": "of that such as specifications and here",
    "start": "1002809",
    "end": "1005720"
  },
  {
    "text": "it",
    "start": "1005720",
    "end": "1006439"
  },
  {
    "text": "it gave us path to the specification",
    "start": "1006439",
    "end": "1010549"
  },
  {
    "text": "that we can look at if we copy the file",
    "start": "1010549",
    "end": "1013730"
  },
  {
    "text": "and inside this file we can see that",
    "start": "1013730",
    "end": "1017480"
  },
  {
    "text": "this is some tensorflow specific",
    "start": "1017480",
    "end": "1019670"
  },
  {
    "text": "parameters then we can you just use if",
    "start": "1019670",
    "end": "1022459"
  },
  {
    "text": "we want to run the test job and if you",
    "start": "1022459",
    "end": "1025819"
  },
  {
    "text": "notice that it has TF job kind so what",
    "start": "1025819",
    "end": "1030438"
  },
  {
    "text": "we can do now is we can start I mean",
    "start": "1030439",
    "end": "1033048"
  },
  {
    "text": "deploy this specification to the cluster",
    "start": "1033049",
    "end": "1035389"
  },
  {
    "text": "and start the job using the apply",
    "start": "1035389",
    "end": "1037909"
  },
  {
    "text": "command so after this is done I think it",
    "start": "1037909",
    "end": "1042529"
  },
  {
    "text": "would be interesting to look at the CR D",
    "start": "1042529",
    "end": "1044329"
  },
  {
    "text": "in our cluster so we can take a look at",
    "start": "1044329",
    "end": "1049070"
  },
  {
    "text": "what's here DS exists and we can even",
    "start": "1049070",
    "end": "1051110"
  },
  {
    "text": "filter them using",
    "start": "1051110",
    "end": "1053650"
  },
  {
    "text": "the prefix so I know that the CR D is",
    "start": "1053650",
    "end": "1056830"
  },
  {
    "text": "called T of jobs and we can even look at",
    "start": "1056830",
    "end": "1060340"
  },
  {
    "text": "more details of what it represents so it",
    "start": "1060340",
    "end": "1064960"
  },
  {
    "text": "has a kind TF job",
    "start": "1064960",
    "end": "1066490"
  },
  {
    "text": "it has tender flow specific parameters",
    "start": "1066490",
    "end": "1070390"
  },
  {
    "text": "and properties for example replicas can",
    "start": "1070390",
    "end": "1072669"
  },
  {
    "text": "be of different types like chief",
    "start": "1072669",
    "end": "1074770"
  },
  {
    "text": "parameter serving eval and there's a lot",
    "start": "1074770",
    "end": "1078190"
  },
  {
    "text": "more information here but now let's",
    "start": "1078190",
    "end": "1080650"
  },
  {
    "text": "actually check the status of our tender",
    "start": "1080650",
    "end": "1084370"
  },
  {
    "text": "flow job that we submitted so and we're",
    "start": "1084370",
    "end": "1087970"
  },
  {
    "text": "working with it the same way we would",
    "start": "1087970",
    "end": "1089559"
  },
  {
    "text": "work with the built-in object but behind",
    "start": "1089559",
    "end": "1092770"
  },
  {
    "text": "the scenes it uses parts because it is",
    "start": "1092770",
    "end": "1096700"
  },
  {
    "text": "implemented that way and we see that",
    "start": "1096700",
    "end": "1099640"
  },
  {
    "text": "there are two pods behind the scenes",
    "start": "1099640",
    "end": "1101309"
  },
  {
    "text": "parameter server and worker if we look",
    "start": "1101309",
    "end": "1105340"
  },
  {
    "text": "in logs behind the worker pod we will",
    "start": "1105340",
    "end": "1109059"
  },
  {
    "text": "see that our total flow job is running",
    "start": "1109059",
    "end": "1111940"
  },
  {
    "text": "and it has it is using ResNet 50 model",
    "start": "1111940",
    "end": "1117909"
  },
  {
    "text": "it is in training mode and it worked",
    "start": "1117909",
    "end": "1121120"
  },
  {
    "text": "so once the operator is running it",
    "start": "1121120",
    "end": "1125950"
  },
  {
    "text": "watches all of the new API requests",
    "start": "1125950",
    "end": "1128669"
  },
  {
    "text": "related to the TF job resources and uses",
    "start": "1128669",
    "end": "1133450"
  },
  {
    "text": "the logic defined in the T of jobs",
    "start": "1133450",
    "end": "1135429"
  },
  {
    "text": "controller to manage tensorflow jobs",
    "start": "1135429",
    "end": "1138039"
  },
  {
    "text": "based on life cycle rules so let's go a",
    "start": "1138039",
    "end": "1142779"
  },
  {
    "text": "little bit deeper behind the scenes and",
    "start": "1142779",
    "end": "1144760"
  },
  {
    "text": "find out how the TF operator actually",
    "start": "1144760",
    "end": "1148320"
  },
  {
    "text": "have job operator actually works and the",
    "start": "1148320",
    "end": "1151929"
  },
  {
    "text": "code for it is online it is really",
    "start": "1151929",
    "end": "1154330"
  },
  {
    "text": "interesting to check it out the link is",
    "start": "1154330",
    "end": "1156250"
  },
  {
    "text": "below",
    "start": "1156250",
    "end": "1157029"
  },
  {
    "text": "so github.com it could flow /tf -",
    "start": "1157029",
    "end": "1160480"
  },
  {
    "text": "operator and this is the CRD customers",
    "start": "1160480",
    "end": "1163960"
  },
  {
    "text": "or definition example you can see that",
    "start": "1163960",
    "end": "1167080"
  },
  {
    "text": "the kindest is TF jobs and on the flip",
    "start": "1167080",
    "end": "1170169"
  },
  {
    "text": "side there is also a definition of the",
    "start": "1170169",
    "end": "1173529"
  },
  {
    "text": "type called TF job which is a struct",
    "start": "1173529",
    "end": "1175659"
  },
  {
    "text": "that we're going to use when controller",
    "start": "1175659",
    "end": "1178929"
  },
  {
    "text": "is going to work with the job it has two",
    "start": "1178929",
    "end": "1182440"
  },
  {
    "text": "fields",
    "start": "1182440",
    "end": "1183880"
  },
  {
    "text": "Joe specification and job status this is",
    "start": "1183880",
    "end": "1188080"
  },
  {
    "text": "important because the controller is",
    "start": "1188080",
    "end": "1189940"
  },
  {
    "text": "going to compare those values and make",
    "start": "1189940",
    "end": "1192580"
  },
  {
    "text": "sure that the job is in the correct",
    "start": "1192580",
    "end": "1194650"
  },
  {
    "text": "status that we specified in our",
    "start": "1194650",
    "end": "1196600"
  },
  {
    "text": "specification inside the job",
    "start": "1196600",
    "end": "1200710"
  },
  {
    "text": "specification there is a map of replica",
    "start": "1200710",
    "end": "1204190"
  },
  {
    "text": "types and replica specifications because",
    "start": "1204190",
    "end": "1206830"
  },
  {
    "text": "we know that one job can have many",
    "start": "1206830",
    "end": "1208630"
  },
  {
    "text": "replicas and each replicas specification",
    "start": "1208630",
    "end": "1212380"
  },
  {
    "text": "defines well how many replicas of a",
    "start": "1212380",
    "end": "1215620"
  },
  {
    "text": "certain type there are what template is",
    "start": "1215620",
    "end": "1219220"
  },
  {
    "text": "used for replicas and if you were being",
    "start": "1219220",
    "end": "1223690"
  },
  {
    "text": "a session that you could see that the",
    "start": "1223690",
    "end": "1225100"
  },
  {
    "text": "pods pod template specification is used",
    "start": "1225100",
    "end": "1227290"
  },
  {
    "text": "here and that's why pods are being",
    "start": "1227290",
    "end": "1229900"
  },
  {
    "text": "created behind the scenes when you're",
    "start": "1229900",
    "end": "1231850"
  },
  {
    "text": "writing your own operator you can choose",
    "start": "1231850",
    "end": "1233680"
  },
  {
    "text": "your own abstraction or several if you",
    "start": "1233680",
    "end": "1235690"
  },
  {
    "text": "want to use it and also it has a restart",
    "start": "1235690",
    "end": "1238120"
  },
  {
    "text": "policy for the job as well for the",
    "start": "1238120",
    "end": "1240520"
  },
  {
    "text": "replicas and here we have additional",
    "start": "1240520",
    "end": "1243910"
  },
  {
    "text": "types to define types of replicas that",
    "start": "1243910",
    "end": "1246640"
  },
  {
    "text": "we're gonna work with restart policies",
    "start": "1246640",
    "end": "1250330"
  },
  {
    "text": "that we're operating and job status and",
    "start": "1250330",
    "end": "1255610"
  },
  {
    "text": "here is an interesting party this is an",
    "start": "1255610",
    "end": "1257860"
  },
  {
    "text": "informer and it basically watches the",
    "start": "1257860",
    "end": "1261970"
  },
  {
    "text": "events and it is like a connection",
    "start": "1261970",
    "end": "1264310"
  },
  {
    "text": "between the source where they come from",
    "start": "1264310",
    "end": "1266110"
  },
  {
    "text": "in the controller and this is the most",
    "start": "1266110",
    "end": "1269890"
  },
  {
    "text": "important part of the operator which is",
    "start": "1269890",
    "end": "1271600"
  },
  {
    "text": "the controller itself and it has a",
    "start": "1271600",
    "end": "1274570"
  },
  {
    "text": "function called reconcile T of jobs that",
    "start": "1274570",
    "end": "1278350"
  },
  {
    "text": "checks and updates replicas for each",
    "start": "1278350",
    "end": "1282190"
  },
  {
    "text": "given replica specification so in case",
    "start": "1282190",
    "end": "1286270"
  },
  {
    "text": "something goes wrong with the job or the",
    "start": "1286270",
    "end": "1289210"
  },
  {
    "text": "replica it will Riku the job or restart",
    "start": "1289210",
    "end": "1291850"
  },
  {
    "text": "the replica and make sure that the",
    "start": "1291850",
    "end": "1294550"
  },
  {
    "text": "status of our job is correct",
    "start": "1294550",
    "end": "1297780"
  },
  {
    "text": "so knowing exactly what operators are",
    "start": "1297780",
    "end": "1303330"
  },
  {
    "text": "how they work it's useful to know how to",
    "start": "1303330",
    "end": "1306370"
  },
  {
    "text": "build one if you would like to and you",
    "start": "1306370",
    "end": "1308890"
  },
  {
    "text": "can do it manually using code generators",
    "start": "1308890",
    "end": "1311620"
  },
  {
    "text": "for the client and former Lister and",
    "start": "1311620",
    "end": "1314140"
  },
  {
    "text": "writing",
    "start": "1314140",
    "end": "1314830"
  },
  {
    "text": "your own controller but you can also use",
    "start": "1314830",
    "end": "1317230"
  },
  {
    "text": "things like operator framework bike or",
    "start": "1317230",
    "end": "1320140"
  },
  {
    "text": "OS that can actually significantly",
    "start": "1320140",
    "end": "1322690"
  },
  {
    "text": "simplify the process so check that out",
    "start": "1322690",
    "end": "1325419"
  },
  {
    "text": "if you're interested",
    "start": "1325419",
    "end": "1326769"
  },
  {
    "text": "and then next a reasonable question",
    "start": "1326769",
    "end": "1329919"
  },
  {
    "text": "comes to mind now that there are",
    "start": "1329919",
    "end": "1332710"
  },
  {
    "text": "operators CR DS and custom controllers",
    "start": "1332710",
    "end": "1335580"
  },
  {
    "text": "where can we find all the operators we",
    "start": "1335580",
    "end": "1338320"
  },
  {
    "text": "need so well there are a lot of existing",
    "start": "1338320",
    "end": "1341350"
  },
  {
    "text": "operators there are open source on",
    "start": "1341350",
    "end": "1343929"
  },
  {
    "text": "github for example a Cassandra operator",
    "start": "1343929",
    "end": "1346960"
  },
  {
    "text": "from insta cluster or tensorflow",
    "start": "1346960",
    "end": "1348970"
  },
  {
    "text": "operator they are all open source and in",
    "start": "1348970",
    "end": "1351519"
  },
  {
    "text": "the list some operators are actually",
    "start": "1351519",
    "end": "1353919"
  },
  {
    "text": "closed source or in preview by various",
    "start": "1353919",
    "end": "1357250"
  },
  {
    "text": "companies for example check out",
    "start": "1357250",
    "end": "1359169"
  },
  {
    "text": "confluent operator for apache kafka and",
    "start": "1359169",
    "end": "1362250"
  },
  {
    "text": "some other operators simply don't exist",
    "start": "1362250",
    "end": "1365230"
  },
  {
    "text": "yet so remember that the CRD concept is",
    "start": "1365230",
    "end": "1369880"
  },
  {
    "text": "relatively new for other than kubernetes",
    "start": "1369880",
    "end": "1373210"
  },
  {
    "text": "people and there are a lot of people who",
    "start": "1373210",
    "end": "1376870"
  },
  {
    "text": "work in data industry that are not",
    "start": "1376870",
    "end": "1379929"
  },
  {
    "text": "familiar with go and don't know",
    "start": "1379929",
    "end": "1382320"
  },
  {
    "text": "everything about kubernetes so it takes",
    "start": "1382320",
    "end": "1385269"
  },
  {
    "text": "a bit of time to learn and start",
    "start": "1385269",
    "end": "1387519"
  },
  {
    "text": "creating widget operators so if you'd",
    "start": "1387519",
    "end": "1390850"
  },
  {
    "start": "1389000",
    "end": "1389000"
  },
  {
    "text": "like to check out more of the operators",
    "start": "1390850",
    "end": "1393190"
  },
  {
    "text": "there's a list of on github as well so",
    "start": "1393190",
    "end": "1396789"
  },
  {
    "text": "you'll have to type that link github.com",
    "start": "1396789",
    "end": "1399909"
  },
  {
    "text": "slash operator - framework slash awesome",
    "start": "1399909",
    "end": "1403419"
  },
  {
    "text": "- operators and another important note",
    "start": "1403419",
    "end": "1406960"
  },
  {
    "text": "to add there is no consistency as for",
    "start": "1406960",
    "end": "1411010"
  },
  {
    "text": "how you can use existing operators for",
    "start": "1411010",
    "end": "1415000"
  },
  {
    "text": "example some operators some operator",
    "start": "1415000",
    "end": "1417549"
  },
  {
    "text": "creators choose to use helm as a main",
    "start": "1417549",
    "end": "1420250"
  },
  {
    "text": "mechanism for end-users to work with",
    "start": "1420250",
    "end": "1423460"
  },
  {
    "text": "operator some use case on it's like you",
    "start": "1423460",
    "end": "1426370"
  },
  {
    "text": "have seen but not not to refer",
    "start": "1426370",
    "end": "1430779"
  },
  {
    "text": "tensorflow",
    "start": "1430779",
    "end": "1432090"
  },
  {
    "text": "some people build custom CL eyes so",
    "start": "1432090",
    "end": "1435850"
  },
  {
    "text": "there is no one single way everybody",
    "start": "1435850",
    "end": "1438580"
  },
  {
    "text": "uses to work with operators and by the",
    "start": "1438580",
    "end": "1442840"
  },
  {
    "text": "way even though we're looking at",
    "start": "1442840",
    "end": "1444760"
  },
  {
    "text": "operators from the lens of data and",
    "start": "1444760",
    "end": "1446889"
  },
  {
    "text": "consist",
    "start": "1446889",
    "end": "1447559"
  },
  {
    "text": "incorrectness the same applies to other",
    "start": "1447559",
    "end": "1449720"
  },
  {
    "text": "aspects of distributed systems like",
    "start": "1449720",
    "end": "1452629"
  },
  {
    "text": "managing security customer lifecycle",
    "start": "1452629",
    "end": "1455110"
  },
  {
    "text": "workflows and other important things so",
    "start": "1455110",
    "end": "1458840"
  },
  {
    "start": "1458000",
    "end": "1458000"
  },
  {
    "text": "before we talk about the future let's",
    "start": "1458840",
    "end": "1461499"
  },
  {
    "text": "let's summarize some takeaways from this",
    "start": "1461499",
    "end": "1464450"
  },
  {
    "text": "section so especially for solution",
    "start": "1464450",
    "end": "1467330"
  },
  {
    "text": "architects and engineers knowing how to",
    "start": "1467330",
    "end": "1470179"
  },
  {
    "text": "build kubernetes objects how Doulton",
    "start": "1470179",
    "end": "1473629"
  },
  {
    "text": "kubernetes objects work and how",
    "start": "1473629",
    "end": "1475789"
  },
  {
    "text": "operators work it will definitely help",
    "start": "1475789",
    "end": "1478759"
  },
  {
    "text": "make better decisions for when",
    "start": "1478759",
    "end": "1481700"
  },
  {
    "text": "kubernetes is and isn't the right tool",
    "start": "1481700",
    "end": "1484629"
  },
  {
    "text": "and will help make sure that you're",
    "start": "1484629",
    "end": "1487159"
  },
  {
    "text": "running your data systems and",
    "start": "1487159",
    "end": "1488330"
  },
  {
    "text": "communities correctly versus just",
    "start": "1488330",
    "end": "1490700"
  },
  {
    "text": "running so and this brings us to the",
    "start": "1490700",
    "end": "1493580"
  },
  {
    "text": "next point you might know everything",
    "start": "1493580",
    "end": "1496820"
  },
  {
    "text": "about CR DS and custom controllers but",
    "start": "1496820",
    "end": "1500059"
  },
  {
    "text": "if you don't know what correct operation",
    "start": "1500059",
    "end": "1502789"
  },
  {
    "text": "means for the system that you're running",
    "start": "1502789",
    "end": "1504889"
  },
  {
    "text": "then there won't be much success because",
    "start": "1504889",
    "end": "1508369"
  },
  {
    "text": "this is one of the reasons current data",
    "start": "1508369",
    "end": "1511279"
  },
  {
    "text": "systems related operators are being",
    "start": "1511279",
    "end": "1514009"
  },
  {
    "text": "developed through collaboration between",
    "start": "1514009",
    "end": "1516590"
  },
  {
    "text": "kubernetes experts and particular domain",
    "start": "1516590",
    "end": "1519980"
  },
  {
    "text": "distributed system experts so now let's",
    "start": "1519980",
    "end": "1523429"
  },
  {
    "text": "talk about the future majority of",
    "start": "1523429",
    "end": "1528200"
  },
  {
    "start": "1526000",
    "end": "1526000"
  },
  {
    "text": "operators for data are in extremely",
    "start": "1528200",
    "end": "1531139"
  },
  {
    "text": "early stage right now",
    "start": "1531139",
    "end": "1532369"
  },
  {
    "text": "but we are registered seeing big",
    "start": "1532369",
    "end": "1535100"
  },
  {
    "text": "progress and there are new operators",
    "start": "1535100",
    "end": "1537679"
  },
  {
    "text": "coming out one after another and in the",
    "start": "1537679",
    "end": "1541429"
  },
  {
    "text": "future there will be more operators that",
    "start": "1541429",
    "end": "1543320"
  },
  {
    "text": "will continue to improve be more stable",
    "start": "1543320",
    "end": "1545860"
  },
  {
    "text": "provide better functionality and as more",
    "start": "1545860",
    "end": "1549769"
  },
  {
    "text": "people start writing operators we will",
    "start": "1549769",
    "end": "1552440"
  },
  {
    "text": "see further progress on making them",
    "start": "1552440",
    "end": "1554330"
  },
  {
    "text": "easier to write and kubernetes is really",
    "start": "1554330",
    "end": "1557929"
  },
  {
    "text": "one of the most extensive all systems",
    "start": "1557929",
    "end": "1560629"
  },
  {
    "text": "for running other systems on top of it",
    "start": "1560629",
    "end": "1562899"
  },
  {
    "text": "it's also becoming really easy to add",
    "start": "1562899",
    "end": "1566269"
  },
  {
    "text": "new storage options and the quality of",
    "start": "1566269",
    "end": "1569809"
  },
  {
    "text": "performance storage options is getting",
    "start": "1569809",
    "end": "1571850"
  },
  {
    "text": "better",
    "start": "1571850",
    "end": "1572169"
  },
  {
    "text": "local volumes is one of the examples we",
    "start": "1572169",
    "end": "1576110"
  },
  {
    "text": "will see our industry become even more",
    "start": "1576110",
    "end": "1578869"
  },
  {
    "text": "focused",
    "start": "1578869",
    "end": "1580150"
  },
  {
    "text": "to work on better workload portability",
    "start": "1580150",
    "end": "1583180"
  },
  {
    "text": "for example cloud native application",
    "start": "1583180",
    "end": "1585640"
  },
  {
    "text": "bundle or C nav is one of the examples",
    "start": "1585640",
    "end": "1588730"
  },
  {
    "text": "of this work and we will observe the",
    "start": "1588730",
    "end": "1592270"
  },
  {
    "text": "continuing shift from low-level",
    "start": "1592270",
    "end": "1593640"
  },
  {
    "text": "abstractions to more focus on being",
    "start": "1593640",
    "end": "1596890"
  },
  {
    "text": "effective writing our applications so",
    "start": "1596890",
    "end": "1600130"
  },
  {
    "text": "things like meta particle and draft for",
    "start": "1600130",
    "end": "1602740"
  },
  {
    "text": "example bring our attention back to code",
    "start": "1602740",
    "end": "1605080"
  },
  {
    "text": "and Helmand Brigade help automate many",
    "start": "1605080",
    "end": "1608680"
  },
  {
    "text": "routine operations so kubernetes already",
    "start": "1608680",
    "end": "1614260"
  },
  {
    "text": "runs on any cloud on-premises it allows",
    "start": "1614260",
    "end": "1618160"
  },
  {
    "text": "us to add missing functionality and with",
    "start": "1618160",
    "end": "1621910"
  },
  {
    "text": "its powerful foundation layer it is",
    "start": "1621910",
    "end": "1624310"
  },
  {
    "text": "already on its way to becoming a",
    "start": "1624310",
    "end": "1626380"
  },
  {
    "text": "platform where we run or coordinate most",
    "start": "1626380",
    "end": "1629890"
  },
  {
    "text": "of our systems because starting with",
    "start": "1629890",
    "end": "1633100"
  },
  {
    "text": "open service broker as a gateway for",
    "start": "1633100",
    "end": "1635890"
  },
  {
    "text": "managing cloud services and resources",
    "start": "1635890",
    "end": "1638110"
  },
  {
    "text": "from kubernetes continuing with",
    "start": "1638110",
    "end": "1641140"
  },
  {
    "text": "operators as a beginning of something",
    "start": "1641140",
    "end": "1643600"
  },
  {
    "text": "that we might call managed service but",
    "start": "1643600",
    "end": "1646420"
  },
  {
    "text": "not tied to any cloud and now looking at",
    "start": "1646420",
    "end": "1649300"
  },
  {
    "text": "things like cross plane for multi cloud",
    "start": "1649300",
    "end": "1652450"
  },
  {
    "text": "control plane all this means that we'll",
    "start": "1652450",
    "end": "1655450"
  },
  {
    "text": "have more freedom to decide where and",
    "start": "1655450",
    "end": "1657850"
  },
  {
    "text": "how to run our applications without",
    "start": "1657850",
    "end": "1661060"
  },
  {
    "text": "sacrificing benefits of using",
    "start": "1661060",
    "end": "1663550"
  },
  {
    "text": "alternative systems when appropriate so",
    "start": "1663550",
    "end": "1667390"
  },
  {
    "text": "based on what you have heard and what",
    "start": "1667390",
    "end": "1670600"
  },
  {
    "text": "you have tried I would like to learn",
    "start": "1670600",
    "end": "1672790"
  },
  {
    "text": "about your experience with data",
    "start": "1672790",
    "end": "1675550"
  },
  {
    "text": "intensive systems and kubernetes with",
    "start": "1675550",
    "end": "1677740"
  },
  {
    "text": "the purpose to better understand your",
    "start": "1677740",
    "end": "1680920"
  },
  {
    "text": "goals requirements and challenges and",
    "start": "1680920",
    "end": "1683470"
  },
  {
    "text": "make it easier for others in the",
    "start": "1683470",
    "end": "1686140"
  },
  {
    "text": "industry so you can use the link here",
    "start": "1686140",
    "end": "1690210"
  },
  {
    "text": "bit dot ly slash data",
    "start": "1690210",
    "end": "1693910"
  },
  {
    "text": "- k8s to share your thoughts with me if",
    "start": "1693910",
    "end": "1697720"
  },
  {
    "text": "you would like I would appreciate that",
    "start": "1697720",
    "end": "1699750"
  },
  {
    "text": "and some resources if you're curious to",
    "start": "1699750",
    "end": "1704550"
  },
  {
    "start": "1701000",
    "end": "1701000"
  },
  {
    "text": "look at my blog if you're interested as",
    "start": "1704550",
    "end": "1707050"
  },
  {
    "text": "well there are my previous presentations",
    "start": "1707050",
    "end": "1710140"
  },
  {
    "text": "and that's me again I'm Lina Hall I work",
    "start": "1710140",
    "end": "1715420"
  },
  {
    "text": "at Microsoft if you want to reach me i",
    "start": "1715420",
    "end": "1717549"
  },
  {
    "text": "am on twitter at lean android and if you",
    "start": "1717549",
    "end": "1720910"
  },
  {
    "text": "want to talk to me I'll be around here",
    "start": "1720910",
    "end": "1723040"
  },
  {
    "text": "outside of the ballroom after the talk",
    "start": "1723040",
    "end": "1724870"
  },
  {
    "text": "and also you can come down to Azure both",
    "start": "1724870",
    "end": "1727960"
  },
  {
    "text": "in the expo hall there are a lot of my",
    "start": "1727960",
    "end": "1731170"
  },
  {
    "text": "colleagues who can talk about",
    "start": "1731170",
    "end": "1732190"
  },
  {
    "text": "interesting tools and interesting",
    "start": "1732190",
    "end": "1733990"
  },
  {
    "text": "problems and I'd love to chat with you",
    "start": "1733990",
    "end": "1736390"
  },
  {
    "text": "and I'm also on the program committee",
    "start": "1736390",
    "end": "1738549"
  },
  {
    "text": "for cough the summit Kafka summits next",
    "start": "1738549",
    "end": "1742150"
  },
  {
    "text": "year so if you would like to submit I",
    "start": "1742150",
    "end": "1744220"
  },
  {
    "text": "would really encourage you to do that ml",
    "start": "1744220",
    "end": "1748330"
  },
  {
    "text": "for all is a conference that I organized",
    "start": "1748330",
    "end": "1750580"
  },
  {
    "text": "about machine learning with a few other",
    "start": "1750580",
    "end": "1753100"
  },
  {
    "text": "people and if you're into your machine",
    "start": "1753100",
    "end": "1755679"
  },
  {
    "text": "learning you can check it out",
    "start": "1755679",
    "end": "1757150"
  },
  {
    "text": "it should be in Portland next year and",
    "start": "1757150",
    "end": "1759570"
  },
  {
    "text": "the last thing just remember that you",
    "start": "1759570",
    "end": "1763840"
  },
  {
    "text": "can do powerful things with kubernetes",
    "start": "1763840",
    "end": "1766210"
  },
  {
    "text": "and keep that in mind for your next",
    "start": "1766210",
    "end": "1768340"
  },
  {
    "text": "project",
    "start": "1768340",
    "end": "1769090"
  },
  {
    "text": "thank you",
    "start": "1769090",
    "end": "1771030"
  },
  {
    "text": "[Applause]",
    "start": "1771030",
    "end": "1775460"
  }
]