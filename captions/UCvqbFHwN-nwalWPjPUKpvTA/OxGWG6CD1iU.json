[
  {
    "text": "hello okay that sounds correct uh we're going to get started so hello everyone",
    "start": "1679",
    "end": "7399"
  },
  {
    "text": "thank you for coming um I'm Ash I'll be starting us off and as you can see I need a new picture on this slide I've",
    "start": "7399",
    "end": "14400"
  },
  {
    "text": "had a bit of a haircut since then um welcome to C manager in five levels of",
    "start": "14400",
    "end": "19880"
  },
  {
    "text": "difficulty uh today we're going to be taking you through C manager in five levels of difficulty you got me you got",
    "start": "19880",
    "end": "26560"
  },
  {
    "text": "M here and Tim we're all at Veni we're all manager maintainers uh which is good",
    "start": "26560",
    "end": "32119"
  },
  {
    "text": "because of the content matter um to start us off uh we've got the typical",
    "start": "32119",
    "end": "38719"
  },
  {
    "text": "slide where we show you a load of numbers um we like all of these numbers one of my favorite numbers on this is 1",
    "start": "38719",
    "end": "45000"
  },
  {
    "text": "million plus daily downloads uh the problem with that number is we don't actually know if it's true well we know",
    "start": "45000",
    "end": "50480"
  },
  {
    "text": "it's not true actually we know it's bigger than that we don't know how big because um our container images are",
    "start": "50480",
    "end": "56120"
  },
  {
    "text": "hosted on key. or Quay I don't know how you meant to pronounce it um and every time we try and look at the",
    "start": "56120",
    "end": "62359"
  },
  {
    "text": "analytics we actually crash the analytics page we get a 500 error so if anyone is from Red Hat and could tell us",
    "start": "62359",
    "end": "68360"
  },
  {
    "text": "how many downloads We have we'd love to know but we we I think we're the second biggest project we don't we'd love to",
    "start": "68360",
    "end": "75560"
  },
  {
    "text": "know um the other important thing on this slide obviously is that we're a cncf incubating project that's why we're",
    "start": "75560",
    "end": "80600"
  },
  {
    "text": "here today that's why you're here today I assume at least in part um we're really hoping at the moment that we're",
    "start": "80600",
    "end": "86759"
  },
  {
    "text": "going to be hitting graduated status soon obviously that's the same level that kubernetes itself is at it'll be",
    "start": "86759",
    "end": "93119"
  },
  {
    "text": "awesome to get there we're really hoping we'll get there before cubec Con in Paris next year um but yeah the security",
    "start": "93119",
    "end": "100000"
  },
  {
    "text": "audit for that is currently ongoing which is awesome and uh watch this space hope hopefully uh",
    "start": "100000",
    "end": "108040"
  },
  {
    "text": "the next time we're giving a talk will be a graduated project so here are the five levels of difficulty that we're",
    "start": "108040",
    "end": "113640"
  },
  {
    "text": "going to be talking about um I'm going to do a little bit of audience interaction not much if you think you're",
    "start": "113640",
    "end": "118920"
  },
  {
    "text": "at one of these levels uh just raise your hand and then put your hand down if uh you no longer",
    "start": "118920",
    "end": "124560"
  },
  {
    "text": "understand what we're talking about so if you've used SE manager at all um you've probably done something like Ingress and Gateway annotations if",
    "start": "124560",
    "end": "130759"
  },
  {
    "text": "you've ever issued a certificate using C manager put your hand up lots of hands",
    "start": "130759",
    "end": "136040"
  },
  {
    "text": "that's great uh have you used a certificate resource yeah private pki anyone doing",
    "start": "136040",
    "end": "143519"
  },
  {
    "text": "private pki and especially if you're using trust manager yeah few hands there um CSI",
    "start": "143519",
    "end": "150280"
  },
  {
    "text": "drivers approve a policy okay a lot less and yeah this is the real stuff this is the meat of the talk now and level five",
    "start": "150280",
    "end": "157280"
  },
  {
    "text": "has anyone bring a custom issuer or a plugin oh well there is a hand up at the",
    "start": "157280",
    "end": "163440"
  },
  {
    "text": "back that's that's awesome awesome um we'll get to all that stuff first we",
    "start": "163440",
    "end": "169680"
  },
  {
    "text": "need to make sure we're all on the same page um this is the bit we do every s manager talk where we talk a little bit about what TLS is how certificates work",
    "start": "169680",
    "end": "176879"
  },
  {
    "text": "so everyone's you know starting from the same bit I the idea is you have um some",
    "start": "176879",
    "end": "183440"
  },
  {
    "text": "application like you're a bank uh and you need a certificate to prove that you own a domain so a customer a client",
    "start": "183440",
    "end": "190879"
  },
  {
    "text": "connects to your service and you hand them a certificate that says yeah I am this bank and I this is the proof um if",
    "start": "190879",
    "end": "198760"
  },
  {
    "text": "everything goes wrong then the client will see a your connection is not private thing and they probably won't do banking with you um if everything goes",
    "start": "198760",
    "end": "205720"
  },
  {
    "text": "right hopefully they see this and it will all be working uh this means that you had well the client had some way of",
    "start": "205720",
    "end": "213680"
  },
  {
    "text": "trusting your certificate before they actually got it um they have a trust",
    "start": "213680",
    "end": "218720"
  },
  {
    "text": "store on their device which is what's on this laptop on my phone on your phone uh and they using a chain of certificates a",
    "start": "218720",
    "end": "226439"
  },
  {
    "text": "chain of cryptographic signatures if you want to be Technical and fancy um your",
    "start": "226439",
    "end": "231720"
  },
  {
    "text": "client device was able to verify that the certificate was actually issued to the bank and you trust that because you",
    "start": "231720",
    "end": "238760"
  },
  {
    "text": "trust the rout CA we say um or a certificate Authority essentially you",
    "start": "238760",
    "end": "244680"
  },
  {
    "text": "want to get certificates for your services and kubernetes and certain manager helps you do that um another",
    "start": "244680",
    "end": "251000"
  },
  {
    "text": "thing that's worth pointing out is that this isn't just one way so um we talked about a cent a bank that is running a",
    "start": "251000",
    "end": "257840"
  },
  {
    "text": "server that gives you a certificate they can also then say hey and you can give me a certificate and you can send back",
    "start": "257840",
    "end": "263800"
  },
  {
    "text": "yours so manager can do that as well and we'll learn a bit more about that as we go further on in the talk but that's",
    "start": "263800",
    "end": "269840"
  },
  {
    "text": "enough for me you've heard enough from me so I will pass over the mic to Tim thanks a lot all right so at level",
    "start": "269840",
    "end": "277600"
  },
  {
    "text": "one we will actually look at the simplest way to use sear manager and for that we will look at the main SE manager",
    "start": "277600",
    "end": "283960"
  },
  {
    "text": "use case that's namely um provisioning a certificate for your application so",
    "start": "283960",
    "end": "290639"
  },
  {
    "text": "basically what we're doing we allow your application to request a certificate through sech manager then your",
    "start": "290639",
    "end": "297360"
  },
  {
    "text": "certificate Authority will respond with a certificate and that will be provisioned by C",
    "start": "297360",
    "end": "302639"
  },
  {
    "text": "manager in a location that is accessible by the application so the simplest way to do",
    "start": "302639",
    "end": "309120"
  },
  {
    "text": "this to do this flow is by doing this for Ingress",
    "start": "309120",
    "end": "314840"
  },
  {
    "text": "resources so in this example I have an Ingress resource",
    "start": "314840",
    "end": "320600"
  },
  {
    "text": "and we are serving example.com /ar here so if we go to that URL we see that we",
    "start": "320600",
    "end": "327360"
  },
  {
    "text": "are serving this um service here that Returns the current time but you might",
    "start": "327360",
    "end": "332840"
  },
  {
    "text": "have also noticed that this is served over a non-secure connection so if we try to go to the secure variant of this",
    "start": "332840",
    "end": "341639"
  },
  {
    "text": "of this DNS um name of this endpoint we actually get an error so this is the",
    "start": "341639",
    "end": "349880"
  },
  {
    "text": "thing that Ash explained we get an error saying that this connection is not private and this is because by default",
    "start": "349880",
    "end": "357919"
  },
  {
    "text": "ingr will actually use like a self sign certificate and we haven't actually configured a proper certificate for this",
    "start": "357919",
    "end": "364520"
  },
  {
    "text": "endpoint but thanks to se man it's very easy to do this so what we will do is we will addit",
    "start": "364520",
    "end": "371639"
  },
  {
    "text": "the Ingress resource we will add an annotation that's points to a aert",
    "start": "371639",
    "end": "377919"
  },
  {
    "text": "manager issuer so in this case the lets encrypts production",
    "start": "377919",
    "end": "383960"
  },
  {
    "text": "issuer and S manager will detect that this incress exists that it has the anotation so it will know okay for this",
    "start": "385160",
    "end": "392440"
  },
  {
    "text": "Ingress I have to do something additionally we will add an TLS section in the incress resource and this TS",
    "start": "392440",
    "end": "399720"
  },
  {
    "text": "section uh specifies where it has to find its um its secret that contains the TLs",
    "start": "399720",
    "end": "407240"
  },
  {
    "text": "certificate and the private key material so normally what you would do is you would configure this and then you",
    "start": "407240",
    "end": "414880"
  },
  {
    "text": "create the secrets that contains this information however in this case of course of course this secret doesn't",
    "start": "414880",
    "end": "420280"
  },
  {
    "text": "exist because we haven't created it um but the great thing here is because we add a The annotation s manager will",
    "start": "420280",
    "end": "426720"
  },
  {
    "text": "automatically generate the secret for you so after we configure this we apply this",
    "start": "426720",
    "end": "433080"
  },
  {
    "text": "Ingress and we refresh the website we see that the um endpoint is no served",
    "start": "433080",
    "end": "439840"
  },
  {
    "text": "over a secure connection so this is actually the easiest way to use sord",
    "start": "439840",
    "end": "445120"
  },
  {
    "text": "manager um kind of a summary of This is you basically annotate your Ingress",
    "start": "445120",
    "end": "451879"
  },
  {
    "text": "behind this the screen or behind the scenes what's happening is actually that Ser manager will detect The annotation",
    "start": "451879",
    "end": "458879"
  },
  {
    "text": "it will create a certificate resource a certificate resource that points to the secret that we specified in the TLs",
    "start": "458879",
    "end": "464919"
  },
  {
    "text": "section that certificate resource then in itself will be uh reconciled by seert",
    "start": "464919",
    "end": "470240"
  },
  {
    "text": "manager Certificate request resources will be created and those Certificate request resources will be detected by",
    "start": "470240",
    "end": "477440"
  },
  {
    "text": "the issuer which then returns the sign certificate which is then placed in the certificate together with private key",
    "start": "477440",
    "end": "483879"
  },
  {
    "text": "and so that it can be used and picked up by the Ingress controller so now M will talk more about",
    "start": "483879",
    "end": "491240"
  },
  {
    "text": "the uh secret resource no the certificate resource",
    "start": "491240",
    "end": "496560"
  },
  {
    "text": "sorry thank you Tim so we have seen that the increas resource in itself if you add one",
    "start": "497120",
    "end": "504520"
  },
  {
    "text": "annotation you will get a l encrypt certificate for free but sometimes you cannot do that uh",
    "start": "504520",
    "end": "513560"
  },
  {
    "text": "sometimes the Ingress notation system won't let you do all the customization",
    "start": "513560",
    "end": "518719"
  },
  {
    "text": "you want and this is going to be level two uh level two is creating your own",
    "start": "518719",
    "end": "524120"
  },
  {
    "text": "certificates request oh and to give you an example of what I",
    "start": "524120",
    "end": "530800"
  },
  {
    "text": "mean by customizing your x59 certificates I'll be using a client certificate client certificate uh client",
    "start": "530800",
    "end": "538120"
  },
  {
    "text": "certificate example radis radis the radis server uh if you",
    "start": "538120",
    "end": "543880"
  },
  {
    "text": "install it with Helm it will require you to give a secret and the secret it is",
    "start": "543880",
    "end": "550680"
  },
  {
    "text": "expected to be a server certificate and on on the other hand on the other end uh",
    "start": "550680",
    "end": "557720"
  },
  {
    "text": "I I chose to go with a spring boot application that connects to this frus",
    "start": "557720",
    "end": "564079"
  },
  {
    "text": "database uh because it's a Java application which has a a tiny Quirk to it",
    "start": "564079",
    "end": "570839"
  },
  {
    "text": "and in this in this configuration we will have two certificates one uh radis server",
    "start": "570839",
    "end": "579680"
  },
  {
    "text": "CT and CT manager will create a secret for it and that's the secret that will",
    "start": "579680",
    "end": "584800"
  },
  {
    "text": "be load that will be used and that you will have configured in your H chart and on on the other side you have the",
    "start": "584800",
    "end": "591839"
  },
  {
    "text": "certificate clients the redis client HT uh itself creating a server uh Secret",
    "start": "591839",
    "end": "599160"
  },
  {
    "text": "loaded into the uh deployment and the spring boot",
    "start": "599160",
    "end": "605680"
  },
  {
    "text": "deployment um now to dig into why the certificate resource is interesting to",
    "start": "605959",
    "end": "612800"
  },
  {
    "text": "you I'd like you I I'd like to show a few things on the certificate resource",
    "start": "612800",
    "end": "619079"
  },
  {
    "text": "itself first we have the secret name the one the secret that uh s manager will",
    "start": "619079",
    "end": "625320"
  },
  {
    "text": "create a private key and sort it into as well as storing the sign",
    "start": "625320",
    "end": "631399"
  },
  {
    "text": "certificate in side certificate and then we have the usages uh that's also",
    "start": "631399",
    "end": "637959"
  },
  {
    "text": "something you cannot do with the inqu annotations uh so you will want to use a certificate instead for that on the left",
    "start": "637959",
    "end": "646200"
  },
  {
    "text": "side you have the server oath usage for the server side and then on the other",
    "start": "646200",
    "end": "651320"
  },
  {
    "text": "side you have the client oath and finally the small cerk I was",
    "start": "651320",
    "end": "658600"
  },
  {
    "text": "talking about about sometimes your application will need a special encoding for the for the certificate and by",
    "start": "658600",
    "end": "666800"
  },
  {
    "text": "default SE manager will store uh the sign certificate as a Pam",
    "start": "666800",
    "end": "672440"
  },
  {
    "text": "encoded uh string and here because it's a Java app",
    "start": "672440",
    "end": "678680"
  },
  {
    "text": "it needs pkcs12 and that's something you can do with uh with SE meas with the",
    "start": "678680",
    "end": "685120"
  },
  {
    "text": "certificate resource and something you cannot do with the Inc resource so",
    "start": "685120",
    "end": "692160"
  },
  {
    "text": "that's that's yeah that's the certificate resource and finally let's look a bit at the secret that was",
    "start": "692160",
    "end": "697800"
  },
  {
    "text": "created by S manager uh we have again since I was",
    "start": "697800",
    "end": "703560"
  },
  {
    "text": "talking about Java we have the key store. p12 that resulted uh because we set uh in the",
    "start": "703560",
    "end": "711079"
  },
  {
    "text": "previous slide I I I was showing something about pkcs12 and most importantly we have the",
    "start": "711079",
    "end": "719360"
  },
  {
    "text": "chain of trust the certificate chain or certificate the chain of cryptographic",
    "start": "719360",
    "end": "726480"
  },
  {
    "text": "signatures I made it um so ts. TST that's that's the thing that is served",
    "start": "726480",
    "end": "732920"
  },
  {
    "text": "by the client and by the server when authenticating and the ca.crt",
    "start": "732920",
    "end": "739399"
  },
  {
    "text": "uh the ca.crt field that I didn't highlight here which",
    "start": "739399",
    "end": "745519"
  },
  {
    "text": "is a bit special because we can't we uh recommend not to use that for",
    "start": "745519",
    "end": "752399"
  },
  {
    "text": "Distributing trust so don't you don't use the C ca.crt and you'll see how to use this properly uh in the next",
    "start": "752399",
    "end": "761680"
  },
  {
    "text": "level so to summarize in level two we learned that the certificate resource",
    "start": "761680",
    "end": "767360"
  },
  {
    "text": "gives you more C uh makes it uh possible to customize your x509",
    "start": "767360",
    "end": "773920"
  },
  {
    "text": "certificates and most uh so for example in the case of Java for having",
    "start": "773920",
    "end": "779680"
  },
  {
    "text": "uh something compatible with your application and lets you do client",
    "start": "779680",
    "end": "787560"
  },
  {
    "text": "certificates and I'm now handing over to Ash to talk about",
    "start": "787560",
    "end": "792720"
  },
  {
    "text": "trust thank you very much so we've just seen two levels which",
    "start": "792720",
    "end": "798800"
  },
  {
    "text": "tell us how we can configure what certificates we get right um you do something in your cluster uh be that an",
    "start": "798800",
    "end": "806279"
  },
  {
    "text": "annotation or you write some yaml for a certificate and you get a certificate that hopefully",
    "start": "806279",
    "end": "811519"
  },
  {
    "text": "matches what you requested as close as possible but what about if you need a bit more control over the issuance side",
    "start": "811519",
    "end": "816639"
  },
  {
    "text": "of it so we've given you examples with let's encrypt right that nothing wrong with let's encrypt at all I love it I",
    "start": "816639",
    "end": "822560"
  },
  {
    "text": "can't recommend it highly enough but it's not the right use the the the right tool for every job I'm not going to go",
    "start": "822560",
    "end": "829440"
  },
  {
    "text": "into the detail of this slide because it's quite heavy and there's a lot of stuff here but uh in summary we would",
    "start": "829440",
    "end": "835040"
  },
  {
    "text": "call let's encrypt a public issuer right that's because you already you trust it on all of your devices in this room um I",
    "start": "835040",
    "end": "841839"
  },
  {
    "text": "would assume um that's great that means it's easy to set up because your clients",
    "start": "841839",
    "end": "847440"
  },
  {
    "text": "will trust it already um but it does mean that it comes with other burdens if you like so rate limits are the big one",
    "start": "847440",
    "end": "854120"
  },
  {
    "text": "with Le encrypt um it's also a little bit more complicated to issue because you need to prove that you own the",
    "start": "854120",
    "end": "859279"
  },
  {
    "text": "domain before Le encrypt will give you aert um so what you can actually do is use private pki which is sometimes",
    "start": "859279",
    "end": "866839"
  },
  {
    "text": "called self sign inserts but certific at nerds don't like that because self sign means a different thing there um private",
    "start": "866839",
    "end": "872880"
  },
  {
    "text": "Zs uh private pki gives you complete control over everything um that means if you want to",
    "start": "872880",
    "end": "879680"
  },
  {
    "text": "add some weird thing into your certificates you totally can do that um you can add whatever domain you like so",
    "start": "879680",
    "end": "885000"
  },
  {
    "text": "if you want to make what make a certificate for example.com or google.com or whatever you can totally",
    "start": "885000",
    "end": "890360"
  },
  {
    "text": "do that maybe you shouldn't but you can um the uh there is obviously a trade-off",
    "start": "890360",
    "end": "897880"
  },
  {
    "text": "with that which is is that private pki is more that you have to do right you have to manage this CA certificate",
    "start": "897880",
    "end": "904240"
  },
  {
    "text": "you've got another one that you need to manage and I would like to highlight that rotating those certificates is",
    "start": "904240",
    "end": "909519"
  },
  {
    "text": "complicated and needs planning for it's not as trivial as just um rotating a certificate like certain manager would",
    "start": "909519",
    "end": "915399"
  },
  {
    "text": "do for you in the background rotating a route is actually quite difficult um so as a sort of summary of",
    "start": "915399",
    "end": "922759"
  },
  {
    "text": "that like we've seen how C manager can provision for you this certificate chain that you need to do TLS stuff like that",
    "start": "922759",
    "end": "929639"
  },
  {
    "text": "be that a serice certificate or a client certificate or whatever the question we're asking is well how do we trust the",
    "start": "929639",
    "end": "935480"
  },
  {
    "text": "ca certificate that issued those and uh for your devices as I've said before you",
    "start": "935480",
    "end": "940920"
  },
  {
    "text": "already trust them it's provided by your operating system or whatever but it's there um in kubernetes we think the",
    "start": "940920",
    "end": "948120"
  },
  {
    "text": "answer is trust manager so trust manager is like certain manager but for trust we're not very inventive with names so",
    "start": "948120",
    "end": "955120"
  },
  {
    "text": "trust manager essentially takes the ca certificates that you need and makes it easy to use them in kubernetes the way",
    "start": "955120",
    "end": "961839"
  },
  {
    "text": "it does that is through yaml like everything else in kubernetes um we had",
    "start": "961839",
    "end": "967000"
  },
  {
    "text": "a new resource which is we call a bundle it's actually cluster scoped um and a",
    "start": "967000",
    "end": "972240"
  },
  {
    "text": "bundle is a list of sources um which could be secrets in your cluster config",
    "start": "972240",
    "end": "978880"
  },
  {
    "text": "Maps or that default trust bundle the same one that's on your phone probably",
    "start": "978880",
    "end": "983959"
  },
  {
    "text": "um it stitches those things together and then outputs it into a config map that you can use in your cluster um or a",
    "start": "983959",
    "end": "990160"
  },
  {
    "text": "secret now as of version 0.7 which released recently um the idea then is",
    "start": "990160",
    "end": "995839"
  },
  {
    "text": "you take that output and you mount it into your pod or whatever it is that you're running uh you can then trust",
    "start": "995839",
    "end": "1002319"
  },
  {
    "text": "anything so it makes it really easy to get started with private pki um I think it's really cool I love",
    "start": "1002319",
    "end": "1009519"
  },
  {
    "text": "playing with this stuff a lot of organizations do this in production and it is incredibly powerful to have the",
    "start": "1009519",
    "end": "1015480"
  },
  {
    "text": "ability to do whatever you like with these certificates you can put a lot of useful stuff in there that you might not imagine um it's not for everyone I think",
    "start": "1015480",
    "end": "1023959"
  },
  {
    "text": "from level three onwards it's fair to say that we might be encountering stuff that not everyone will need but it is",
    "start": "1023959",
    "end": "1029120"
  },
  {
    "text": "good to have the option and we certainly provide those I'm going to pass over again in a sec but I'd like to say at",
    "start": "1029120",
    "end": "1034959"
  },
  {
    "text": "level two um my all is here today talking but Tim and I were preparing yesterday for him not to be here because",
    "start": "1034959",
    "end": "1041600"
  },
  {
    "text": "he was in bed all day ill yesterday so like shout out to my all for actually being able to do",
    "start": "1041600",
    "end": "1046760"
  },
  {
    "text": "this yeah I will I will let him bask in the glow",
    "start": "1046760",
    "end": "1053000"
  },
  {
    "text": "of that while I pass over to Tim for level four thanks a lot all right so we talked",
    "start": "1053000",
    "end": "1060520"
  },
  {
    "text": "about how to obtain a certificate using an annotated Ingress and how that",
    "start": "1060520",
    "end": "1065840"
  },
  {
    "text": "results in a certificate resource but also how we can directly create certificate resources and important to note here is",
    "start": "1065840",
    "end": "1073120"
  },
  {
    "text": "that a certificate resource is kind of tightly coupled to a secret resource where finally the result of the issuance",
    "start": "1073120",
    "end": "1080480"
  },
  {
    "text": "will um be placed so that that secret can be mounted somewhere an alternative",
    "start": "1080480",
    "end": "1085919"
  },
  {
    "text": "method that you can use to request certificates is a CSI amount so basically a volume um using the C",
    "start": "1085919",
    "end": "1094080"
  },
  {
    "text": "manager CSI drivers so if you look at your um pot yaml and the CSI volume that",
    "start": "1094080",
    "end": "1103400"
  },
  {
    "text": "we configured in here you see that what we actually do is we we find this volume",
    "start": "1103400",
    "end": "1109440"
  },
  {
    "text": "we specify that we want to use the cert manager CSI Mount and we specify a set",
    "start": "1109440",
    "end": "1114600"
  },
  {
    "text": "of volume attributes um one of those volume attributes is the issuer so that's like",
    "start": "1114600",
    "end": "1120760"
  },
  {
    "text": "a reference to the issuer like we have seen before um additional additionally",
    "start": "1120760",
    "end": "1125840"
  },
  {
    "text": "what we specify here is the DNS names that we want to see in the certificate and once we create this this bot the CSI",
    "start": "1125840",
    "end": "1134799"
  },
  {
    "text": "driver will actually provision for us a certificate at the specify the specified path that we Mount",
    "start": "1134799",
    "end": "1142320"
  },
  {
    "text": "this volume in and this certificate will have the specified DN DNS names and it",
    "start": "1142320",
    "end": "1148919"
  },
  {
    "text": "will be issued of course using this uh issue so this is a great way to obtain",
    "start": "1148919",
    "end": "1155280"
  },
  {
    "text": "certificates without using secret resources so this way it's more secure",
    "start": "1155280",
    "end": "1161000"
  },
  {
    "text": "um it is also tightly coupled to the pots resource so",
    "start": "1161000",
    "end": "1167240"
  },
  {
    "text": "basically um when you have like five different bolts they will all have five different",
    "start": "1167240",
    "end": "1173200"
  },
  {
    "text": "certificates um also the private key material does not leave the notes so",
    "start": "1173200",
    "end": "1178880"
  },
  {
    "text": "it's kept in memory in the notes and then the memory is mounted as like",
    "start": "1178880",
    "end": "1184120"
  },
  {
    "text": "temporary volume in the container so it's really more secure solution the private key material is not kept in the",
    "start": "1184120",
    "end": "1190640"
  },
  {
    "text": "cluster state but there's also kind of a disadvantage in case your your issuance",
    "start": "1190640",
    "end": "1197520"
  },
  {
    "text": "or like issuing a certificate is pretty costly for you this is probably not the method that you should use because",
    "start": "1197520",
    "end": "1205240"
  },
  {
    "text": "um this is like an Ural method so every time your BT restarts or it is scheduled",
    "start": "1205240",
    "end": "1211240"
  },
  {
    "text": "on another note you'll have to issue a new",
    "start": "1211240",
    "end": "1215480"
  },
  {
    "text": "certificate then another extension that we provide with Ser manager is a approval policy so if you look at the",
    "start": "1217240",
    "end": "1224559"
  },
  {
    "text": "issuance flow of the Certificate request resource the first step in there is actually to",
    "start": "1224559",
    "end": "1231400"
  },
  {
    "text": "make a approval decision on the Certificate request so we basically",
    "start": "1231400",
    "end": "1237520"
  },
  {
    "text": "decide whether an a created Certificate request is approved or not and we only",
    "start": "1237520",
    "end": "1243760"
  },
  {
    "text": "proceed with the issuance when we see a Certificate request is",
    "start": "1243760",
    "end": "1248840"
  },
  {
    "text": "approved by default SE manager actually comes with a approve all approver which",
    "start": "1248840",
    "end": "1254559"
  },
  {
    "text": "approves all the certificate requests um for the that Target issuer that is entry insert",
    "start": "1254559",
    "end": "1261559"
  },
  {
    "text": "manager you can disable this default approver and you can replace it for example with the approval policy add-on",
    "start": "1261559",
    "end": "1268720"
  },
  {
    "text": "that we created and this add-on is actually a more advanced um policy",
    "start": "1268720",
    "end": "1273840"
  },
  {
    "text": "system where you can specify using these Certificate request policies what certificate requests are allowed and",
    "start": "1273840",
    "end": "1280279"
  },
  {
    "text": "what certificate requests are Deni so in this example we actually say that all",
    "start": "1280279",
    "end": "1286960"
  },
  {
    "text": "certificate requests have to have a common name with a value example.com have to have DNA DNS names that match",
    "start": "1286960",
    "end": "1294760"
  },
  {
    "text": "the specified values and then we also specify the selector which basically selects what Certificate request this",
    "start": "1294760",
    "end": "1301320"
  },
  {
    "text": "pulsy applies to so there is still a bit of work here that we're doing so we are",
    "start": "1301320",
    "end": "1308880"
  },
  {
    "text": "adding support for cl we are trying to make this much more intuitive because I",
    "start": "1308880",
    "end": "1314720"
  },
  {
    "text": "think we can agree that the the uui current ly isn't super great um but",
    "start": "1314720",
    "end": "1321039"
  },
  {
    "text": "generally the idea of this approval system is that you let your application teams create certificate requests freely",
    "start": "1321039",
    "end": "1329919"
  },
  {
    "text": "and then you specify through a policy what certificate requests can actually be allowed and what Certificate request",
    "start": "1329919",
    "end": "1335279"
  },
  {
    "text": "or denied okay let's move on to the level",
    "start": "1335279",
    "end": "1341760"
  },
  {
    "text": "five it's the I guess the most difficult level but that's not the",
    "start": "1341760",
    "end": "1346960"
  },
  {
    "text": "way um level five is how to extend s",
    "start": "1346960",
    "end": "1353000"
  },
  {
    "text": "manager s uh there because we're using kubernetes uh the kubernetes API makes",
    "start": "1353000",
    "end": "1359400"
  },
  {
    "text": "it very very easy to extend to extend uh",
    "start": "1359400",
    "end": "1368480"
  },
  {
    "text": "things the first EXT extension point we have is the issuer and if you are a",
    "start": "1368480",
    "end": "1375320"
  },
  {
    "text": "company that provides certificates to you you you your users sign certificate",
    "start": "1375320",
    "end": "1380600"
  },
  {
    "text": "requests then you will probably have thought about creating your own issuer",
    "start": "1380600",
    "end": "1386200"
  },
  {
    "text": "foret manager and by the way we have created a new library called issue lib to help you",
    "start": "1386200",
    "end": "1393840"
  },
  {
    "text": "in the process of creating an issuer because historically it was very hard to",
    "start": "1393840",
    "end": "1400600"
  },
  {
    "text": "build one because you needed to know everything about kubernetes controllers",
    "start": "1400600",
    "end": "1406799"
  },
  {
    "text": "and uh the certificate requests life cycle and all that and this is all",
    "start": "1406799",
    "end": "1413559"
  },
  {
    "text": "simplified hopefully with this Library the second extension point is the dns1",
    "start": "1413559",
    "end": "1419480"
  },
  {
    "text": "solver extension if you are again a pro",
    "start": "1419480",
    "end": "1424520"
  },
  {
    "text": "uh DNS provider and you want your users to be able to uh solve dns1 challenges through SE",
    "start": "1424520",
    "end": "1433080"
  },
  {
    "text": "manager via your DNS d uh via your DNS you will want to look at this web hook",
    "start": "1433080",
    "end": "1439880"
  },
  {
    "text": "example and uh to provide your us yeah to do",
    "start": "1439880",
    "end": "1447679"
  },
  {
    "text": "that and finally the two last extension points is we talked about the approval",
    "start": "1447679",
    "end": "1453600"
  },
  {
    "text": "appro policy project previously but you go you can go way beyond that you can",
    "start": "1453600",
    "end": "1459600"
  },
  {
    "text": "build your own uh you your own approval workflow you could even approve your",
    "start": "1459600",
    "end": "1466440"
  },
  {
    "text": "certificate requests from your if you want it it is totally first class",
    "start": "1466440",
    "end": "1471600"
  },
  {
    "text": "uh it is but in that case you will need to look at the approver policy codebase",
    "start": "1471600",
    "end": "1477240"
  },
  {
    "text": "because we don't have any other example of such U an approver and finally the",
    "start": "1477240",
    "end": "1484080"
  },
  {
    "text": "CSI driver is also a place where it things can be extended there there's the",
    "start": "1484080",
    "end": "1489559"
  },
  {
    "text": "CSI lib that allows you to build your own CSI driver uh there is one example of such",
    "start": "1489559",
    "end": "1498480"
  },
  {
    "text": "a specialized CSI driver that's the CSI driver spiffy that issues specifically",
    "start": "1498480",
    "end": "1504640"
  },
  {
    "text": "spiffy identities instead of any type of",
    "start": "1504640",
    "end": "1509760"
  },
  {
    "text": "certificate so that's that's it for the extensions and level five and I'll hand",
    "start": "1509760",
    "end": "1515440"
  },
  {
    "text": "over to to has so let's uh let's finish this off I'm very aware that we've just",
    "start": "1515440",
    "end": "1522559"
  },
  {
    "text": "uh dumped quite a lot of information in that talk it is very information dense a lot of different projects we've mentioned",
    "start": "1522559",
    "end": "1528760"
  },
  {
    "text": "um fortunately you don't have to remember it all this is being recorded anyway but like aside from that anything",
    "start": "1528760",
    "end": "1535440"
  },
  {
    "text": "we've just talked about should be documented on our website cert-manager doio so I'd like to highlight that",
    "start": "1535440",
    "end": "1541559"
  },
  {
    "text": "before I go any further another thing I'd like to say is we're going to have time for questions so now is the time to start thinking of them while I wrap it",
    "start": "1541559",
    "end": "1547840"
  },
  {
    "text": "up um we'd really love if you could come along to our C manager Booth if you haven't already I recognize a lot of",
    "start": "1547840",
    "end": "1553600"
  },
  {
    "text": "faces in the crowd that have actually already been but you can come again um this this is a picture of our booth in",
    "start": "1553600",
    "end": "1559559"
  },
  {
    "text": "Detroit last year but uh our one today is actually in a much better location it's really nice uh it's really great to",
    "start": "1559559",
    "end": "1565360"
  },
  {
    "text": "have people coming along and talking to us and the fun thing here which you can actually just see in the picture is uh",
    "start": "1565360",
    "end": "1571440"
  },
  {
    "text": "we're actually printing real life certificates x509 certificates that you can take home as a souvenir um come get yours U they're",
    "start": "1571440",
    "end": "1579799"
  },
  {
    "text": "valed for 30 years so you know it should be good um we even have an actual wax",
    "start": "1579799",
    "end": "1585840"
  },
  {
    "text": "stamp of the C manager logo that you'll get on it so please do come along and get yours um it's a lot of fun we'll be",
    "start": "1585840",
    "end": "1591960"
  },
  {
    "text": "here until the end of the conference so you know come get that and ask questions about certain manager and you know talk",
    "start": "1591960",
    "end": "1597600"
  },
  {
    "text": "about stuff that's cool too but um a lot of people come for the certificates and that's okay um the other thing I would",
    "start": "1597600",
    "end": "1603840"
  },
  {
    "text": "say and I've said this to a lot of the people who've come to the booth is we have meetings um if you're based in",
    "start": "1603840",
    "end": "1609279"
  },
  {
    "text": "North America our daily stand-ups are going to be while you're asleep or at least I hope you'll be asleep because it'll be really early for you um but",
    "start": "1609279",
    "end": "1616279"
  },
  {
    "text": "every couple of weeks we have a North Amica America friendly meeting where um people can come along ask questions the",
    "start": "1616279",
    "end": "1621840"
  },
  {
    "text": "agenda is open so you can add in your thing and come talk about it uh it's a really good way to sort of move things",
    "start": "1621840",
    "end": "1628000"
  },
  {
    "text": "forward if you've raised a PR or if you've got questions or you can get started in contributing we've done a lot",
    "start": "1628000",
    "end": "1633320"
  },
  {
    "text": "of work as part of the graduating stuff um in defining different levels of how",
    "start": "1633320",
    "end": "1638440"
  },
  {
    "text": "you can get involved so we've probably got a a maintainership level for you if you want to get involved in the project",
    "start": "1638440",
    "end": "1644000"
  },
  {
    "text": "or get involved with open source and slack is always available we have a uh channel on kubernetes slack you can",
    "start": "1644000",
    "end": "1649559"
  },
  {
    "text": "always come and drop in there uh ccon asked me to add this QR",
    "start": "1649559",
    "end": "1655360"
  },
  {
    "text": "code for feedback we'd love to have your feedback um we'd also love if you could",
    "start": "1655360",
    "end": "1660880"
  },
  {
    "text": "uh stop by our colleague satcha if you're here in person um he's back there in the corner he's uh doing a survey on",
    "start": "1660880",
    "end": "1666840"
  },
  {
    "text": "kubernetes and he'd love to talk to you as well uh with all that said um we have",
    "start": "1666840",
    "end": "1673320"
  },
  {
    "text": "seven minutes for questions so if anyone has anything burning please do feel free to come to the mic and Asar now is a",
    "start": "1673320",
    "end": "1680240"
  },
  {
    "text": "great time to do it and have it immortalized forever oh we got our first",
    "start": "1680240",
    "end": "1687399"
  },
  {
    "text": "contestant sorry trying to get here quick sorry um so it meant you had the slide on adding a new issuer what",
    "start": "1689960",
    "end": "1696960"
  },
  {
    "text": "issuers come out of the box uh and how does the issuer side of this work it's it's it's interacting with a with a with",
    "start": "1696960",
    "end": "1704919"
  },
  {
    "text": "a rout CA outside of kubernetes correct yes exactly that yes so the issues that",
    "start": "1704919",
    "end": "1710600"
  },
  {
    "text": "come out of the box are Acme um Veni hash cor Vault and ailin issuer that",
    "start": "1710600",
    "end": "1716240"
  },
  {
    "text": "will sort of do private pki inside your cluster um there's tons of external",
    "start": "1716240",
    "end": "1722399"
  },
  {
    "text": "issuers too many for me to list here that have already been made um the idea is that is basically a wrapper around",
    "start": "1722399",
    "end": "1728360"
  },
  {
    "text": "any API which can sign certificate signing requests so we take the encoded request send it off to the API get back",
    "start": "1728360",
    "end": "1736159"
  },
  {
    "text": "something you usually that works pretty well as it happens um there are the big ones are like a private CA there they",
    "start": "1736159",
    "end": "1744480"
  },
  {
    "text": "have a API for this it's just a wrapper around that and so manager does the sort of Plumbing in the middle to make sure",
    "start": "1744480",
    "end": "1749840"
  },
  {
    "text": "it all works thank you thanks very much question for you about trust",
    "start": "1749840",
    "end": "1756159"
  },
  {
    "text": "manager um how do you guys handle the idiosyncrasies between the trust stores for different dros when you're actually",
    "start": "1756159",
    "end": "1761799"
  },
  {
    "text": "mounting them into the the PA is that just up to the user to deal with that or do you guys have a solution",
    "start": "1761799",
    "end": "1769720"
  },
  {
    "text": "there I passed over the mic on a trust manager question I shouldn't have done that um so we don't um we just create a",
    "start": "1769880",
    "end": "1777080"
  },
  {
    "text": "config map and you mount that wherever you like um we'd be super interested in solving that problem but it's incredibly",
    "start": "1777080",
    "end": "1783039"
  },
  {
    "text": "hard to do yeah um I believe that there's work going on Upstream there's a",
    "start": "1783039",
    "end": "1788080"
  },
  {
    "text": "new cluster trust bundle resource that will be coming out and Trust manager will support that so we'll write that new resource I believe kubernetes are",
    "start": "1788080",
    "end": "1794880"
  },
  {
    "text": "going to take a stab at this okay um but yeah we we kind of just as an open",
    "start": "1794880",
    "end": "1800000"
  },
  {
    "text": "source project with limited resources we've kind of said like writing the the config map is enough and then you'll",
    "start": "1800000",
    "end": "1805760"
  },
  {
    "text": "have to work out the rest of it because we to to answer that question generally and solve the problem generally it's",
    "start": "1805760",
    "end": "1811000"
  },
  {
    "text": "just too hard for us at the moment um Goa yeah um yeah thanks thanks very",
    "start": "1811000",
    "end": "1817840"
  },
  {
    "text": "much hello good afternoon I've been using your product for nearly three years so thanks um I wonder um I've been",
    "start": "1817840",
    "end": "1825440"
  },
  {
    "text": "using with the certificate I saw the CSI over there in the presentation um where is the secret actually going cuz like",
    "start": "1825440",
    "end": "1832640"
  },
  {
    "text": "you said you're not going to have the secret anymore right so that's the first question the second question will be do",
    "start": "1832640",
    "end": "1838840"
  },
  {
    "text": "you guys have any idea or any plans to have some sort of like integration with Azure key Vault so we could push for",
    "start": "1838840",
    "end": "1846240"
  },
  {
    "text": "example a certificate to Azure key Vault thanks so",
    "start": "1846240",
    "end": "1851640"
  },
  {
    "text": "let's maybe start with the first question um basically with a the CSI",
    "start": "1851640",
    "end": "1857240"
  },
  {
    "text": "driver so CSI lip is the library used to create the kubernetes the S manager CSI",
    "start": "1857240",
    "end": "1864279"
  },
  {
    "text": "driver and the S manager CSI driver spiffy um so what you as an N user will",
    "start": "1864279",
    "end": "1869440"
  },
  {
    "text": "use probably is CSI driver so SE manager CSI driver that's why you search in the",
    "start": "1869440",
    "end": "1875159"
  },
  {
    "text": "GitHub um basically the idea here is that there is no secret resource so what",
    "start": "1875159",
    "end": "1881720"
  },
  {
    "text": "actually happens is the CSI driver locally generates a private key um it signs the CSR with that and then that uh",
    "start": "1881720",
    "end": "1889679"
  },
  {
    "text": "CSR is put in this Certificate request resource that's like all the way on the right and that",
    "start": "1889679",
    "end": "1895600"
  },
  {
    "text": "Certificate request resource is um picked up by the issuer so the issuer",
    "start": "1895600",
    "end": "1901360"
  },
  {
    "text": "integration can be like FS vanify Acme whatever um and then a sign certificate",
    "start": "1901360",
    "end": "1909440"
  },
  {
    "text": "is created based on that so the sign certificate is then put in the status of the Certificate request resource the CSI",
    "start": "1909440",
    "end": "1915399"
  },
  {
    "text": "driver sees that and it takes that s certificate and it places um the science",
    "start": "1915399",
    "end": "1920639"
  },
  {
    "text": "certificate next to the private Kei material that it generate locally and so",
    "start": "1920639",
    "end": "1925720"
  },
  {
    "text": "now the CSI driver has this information and it mounts these things in the volume that it's um that basically the volume",
    "start": "1925720",
    "end": "1933720"
  },
  {
    "text": "is mounted at in the container in the pot gotta thanks um could you repeat",
    "start": "1933720",
    "end": "1939440"
  },
  {
    "text": "maybe your second question again like if you guys have any plans to do any Azure keall integration for",
    "start": "1939440",
    "end": "1945679"
  },
  {
    "text": "example um not sure if there's any an for",
    "start": "1945679",
    "end": "1953840"
  },
  {
    "text": "that I think no is the quick answer all right we do hear a lot of",
    "start": "1954360",
    "end": "1959880"
  },
  {
    "text": "requests for that sort of thing um it's kind of hard to do with the current architecture of CT manager um love to",
    "start": "1959880",
    "end": "1966720"
  },
  {
    "text": "chat about it more um like it's maybe a booth question if you could make it along or or one of the meetings like",
    "start": "1966720",
    "end": "1973639"
  },
  {
    "text": "it's an interesting problem space and there's a lot to explore there thank you great uh anyone else got any questions",
    "start": "1973639",
    "end": "1981000"
  },
  {
    "text": "now is your chance okay some people looked away awkwardly so that they didn't I didn't",
    "start": "1981000",
    "end": "1987360"
  },
  {
    "text": "make eye contact and make them ask a question so all is left then is for me to say um well first feedback please um",
    "start": "1987360",
    "end": "1996639"
  },
  {
    "text": "and finally thank you all for coming um it's been great thanks so",
    "start": "1996639",
    "end": "2001960"
  },
  {
    "text": "much",
    "start": "2004519",
    "end": "2007519"
  }
]