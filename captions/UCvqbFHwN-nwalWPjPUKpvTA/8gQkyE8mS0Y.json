[
  {
    "start": "0",
    "end": "46000"
  },
  {
    "text": "hello and welcome everyone",
    "start": "2720",
    "end": "4720"
  },
  {
    "text": "transaction remote trade and why you",
    "start": "4720",
    "end": "6319"
  },
  {
    "text": "should care",
    "start": "6319",
    "end": "8879"
  },
  {
    "text": "i am harukishan singh",
    "start": "9120",
    "end": "10960"
  },
  {
    "text": "i am from bhuvanesha which lies east",
    "start": "10960",
    "end": "12960"
  },
  {
    "text": "coast of india i contributed from ecs",
    "start": "12960",
    "end": "15920"
  },
  {
    "text": "and i work as a software engineer at",
    "start": "15920",
    "end": "17440"
  },
  {
    "text": "time scale",
    "start": "17440",
    "end": "18880"
  },
  {
    "text": "building and maturing prompt scale which",
    "start": "18880",
    "end": "20560"
  },
  {
    "text": "is a proncul compliant postgres based",
    "start": "20560",
    "end": "23680"
  },
  {
    "text": "remote storage for prometheus",
    "start": "23680",
    "end": "26480"
  },
  {
    "text": "let's get started",
    "start": "26480",
    "end": "28400"
  },
  {
    "text": "this presentation will cover",
    "start": "28400",
    "end": "30400"
  },
  {
    "text": "the following topics we'll start with",
    "start": "30400",
    "end": "32640"
  },
  {
    "text": "hemostory and prometheus and then",
    "start": "32640",
    "end": "34800"
  },
  {
    "text": "understand the architecture of remote",
    "start": "34800",
    "end": "36320"
  },
  {
    "text": "try today then introduce the upcoming",
    "start": "36320",
    "end": "38480"
  },
  {
    "text": "feature transactional remote right and",
    "start": "38480",
    "end": "40719"
  },
  {
    "text": "then learn about more where we can look",
    "start": "40719",
    "end": "43440"
  },
  {
    "text": "additional places for more information",
    "start": "43440",
    "end": "46480"
  },
  {
    "start": "46000",
    "end": "69000"
  },
  {
    "text": "let me begin with what remote storage is",
    "start": "46480",
    "end": "49039"
  },
  {
    "text": "in prometheus",
    "start": "49039",
    "end": "51840"
  },
  {
    "text": "prometheus allows storing data on a",
    "start": "52160",
    "end": "54079"
  },
  {
    "text": "remote database",
    "start": "54079",
    "end": "55680"
  },
  {
    "text": "the remote storage provides advanced",
    "start": "55680",
    "end": "57760"
  },
  {
    "text": "functionalities like high availability",
    "start": "57760",
    "end": "59840"
  },
  {
    "text": "multi-tenancy thereby making an",
    "start": "59840",
    "end": "62079"
  },
  {
    "text": "environment which is silent scales",
    "start": "62079",
    "end": "64960"
  },
  {
    "text": "better and offers very rare retention",
    "start": "64960",
    "end": "67040"
  },
  {
    "text": "periods",
    "start": "67040",
    "end": "69520"
  },
  {
    "start": "69000",
    "end": "198000"
  },
  {
    "text": "let's see the architecture of remote",
    "start": "70000",
    "end": "71360"
  },
  {
    "text": "rights today",
    "start": "71360",
    "end": "73840"
  },
  {
    "text": "from atscsdb consists of right ahead log",
    "start": "73840",
    "end": "77040"
  },
  {
    "text": "or wall which is basically a sequence of",
    "start": "77040",
    "end": "80640"
  },
  {
    "text": "prometheus scraped events which is",
    "start": "80640",
    "end": "83040"
  },
  {
    "text": "which is called as records or series and",
    "start": "83040",
    "end": "85759"
  },
  {
    "text": "samples",
    "start": "85759",
    "end": "87040"
  },
  {
    "text": "then head chunks and blocks",
    "start": "87040",
    "end": "90000"
  },
  {
    "text": "the tcp contains wall watcher which",
    "start": "90000",
    "end": "92880"
  },
  {
    "text": "watches the most recent segment of the",
    "start": "92880",
    "end": "95439"
  },
  {
    "text": "wall",
    "start": "95439",
    "end": "96400"
  },
  {
    "text": "and streams the upcoming records",
    "start": "96400",
    "end": "98880"
  },
  {
    "text": "regularly to the remote component of",
    "start": "98880",
    "end": "100960"
  },
  {
    "text": "prometheus",
    "start": "100960",
    "end": "102240"
  },
  {
    "text": "the remote component then shards the",
    "start": "102240",
    "end": "103759"
  },
  {
    "text": "data so that it can be sent parallelly",
    "start": "103759",
    "end": "105920"
  },
  {
    "text": "to the remote database",
    "start": "105920",
    "end": "109040"
  },
  {
    "text": "the limitations of current approach",
    "start": "110240",
    "end": "112479"
  },
  {
    "text": "on the remote storage size is that",
    "start": "112479",
    "end": "115040"
  },
  {
    "text": "non-atomic commits",
    "start": "115040",
    "end": "116640"
  },
  {
    "text": "inaccurate histogram evaluations and",
    "start": "116640",
    "end": "118799"
  },
  {
    "text": "sending metric samples and metric-based",
    "start": "118799",
    "end": "120799"
  },
  {
    "text": "data in a different request",
    "start": "120799",
    "end": "124159"
  },
  {
    "text": "let's see non-atomic commits armature",
    "start": "125759",
    "end": "127920"
  },
  {
    "text": "scrapes data from a target or an",
    "start": "127920",
    "end": "129520"
  },
  {
    "text": "exporter",
    "start": "129520",
    "end": "130720"
  },
  {
    "text": "and then saves",
    "start": "130720",
    "end": "132160"
  },
  {
    "text": "in form of atomic commits but the",
    "start": "132160",
    "end": "134640"
  },
  {
    "text": "request sent to the remote database",
    "start": "134640",
    "end": "137120"
  },
  {
    "text": "contains data which does not have any",
    "start": "137120",
    "end": "139120"
  },
  {
    "text": "sync with the commit with the atomic",
    "start": "139120",
    "end": "141200"
  },
  {
    "text": "commit which prometheus is doing for its",
    "start": "141200",
    "end": "142959"
  },
  {
    "text": "local database",
    "start": "142959",
    "end": "144560"
  },
  {
    "text": "so as soon as the demo database gets the",
    "start": "144560",
    "end": "146720"
  },
  {
    "text": "data",
    "start": "146720",
    "end": "147680"
  },
  {
    "text": "it commits it",
    "start": "147680",
    "end": "150480"
  },
  {
    "text": "understanding inaccurate histogram",
    "start": "152239",
    "end": "153920"
  },
  {
    "text": "evaluations",
    "start": "153920",
    "end": "155280"
  },
  {
    "text": "imagine you have a histogram metric with",
    "start": "155280",
    "end": "157280"
  },
  {
    "text": "four series and prometheus",
    "start": "157280",
    "end": "160239"
  },
  {
    "text": "shards them",
    "start": "160239",
    "end": "161519"
  },
  {
    "text": "to send them parallelly to the remote",
    "start": "161519",
    "end": "163040"
  },
  {
    "text": "database and say the first parallel",
    "start": "163040",
    "end": "165280"
  },
  {
    "text": "request contains of one and first in the",
    "start": "165280",
    "end": "167920"
  },
  {
    "text": "second series the next contains the",
    "start": "167920",
    "end": "169920"
  },
  {
    "text": "third and the third request contains the",
    "start": "169920",
    "end": "172239"
  },
  {
    "text": "fourth series",
    "start": "172239",
    "end": "174480"
  },
  {
    "text": "and since imagine a case where these two",
    "start": "174480",
    "end": "176640"
  },
  {
    "text": "requests are sent and the third request",
    "start": "176640",
    "end": "178560"
  },
  {
    "text": "is yet to be sent and by then",
    "start": "178560",
    "end": "181360"
  },
  {
    "text": "you are",
    "start": "181360",
    "end": "182319"
  },
  {
    "text": "executing a histogram quantile query",
    "start": "182319",
    "end": "184400"
  },
  {
    "text": "both on prometheus and on remote",
    "start": "184400",
    "end": "186239"
  },
  {
    "text": "database the accuracy can be affected",
    "start": "186239",
    "end": "189120"
  },
  {
    "text": "because the same query is the execution",
    "start": "189120",
    "end": "191519"
  },
  {
    "text": "on two different databases which and the",
    "start": "191519",
    "end": "193360"
  },
  {
    "text": "remote database does not have the third",
    "start": "193360",
    "end": "195519"
  },
  {
    "text": "request at this moment",
    "start": "195519",
    "end": "199319"
  },
  {
    "text": "introducing transaction remote right",
    "start": "199519",
    "end": "202720"
  },
  {
    "text": "main idea behind transactional remote",
    "start": "202720",
    "end": "204640"
  },
  {
    "text": "right is to modify the remote white",
    "start": "204640",
    "end": "206720"
  },
  {
    "text": "protocol to allow storage systems to",
    "start": "206720",
    "end": "208959"
  },
  {
    "text": "commit scrapes atomically",
    "start": "208959",
    "end": "213000"
  },
  {
    "text": "understanding a scrape all data which is",
    "start": "213040",
    "end": "215760"
  },
  {
    "text": "pulled at one time from a single target",
    "start": "215760",
    "end": "218640"
  },
  {
    "text": "or exporter is a scrape",
    "start": "218640",
    "end": "222000"
  },
  {
    "text": "the challenge was that",
    "start": "222640",
    "end": "224480"
  },
  {
    "text": "the current remote right system does not",
    "start": "224480",
    "end": "226480"
  },
  {
    "text": "pass down enough information so that the",
    "start": "226480",
    "end": "228720"
  },
  {
    "text": "remote system can know",
    "start": "228720",
    "end": "231040"
  },
  {
    "text": "which uh",
    "start": "231040",
    "end": "232480"
  },
  {
    "text": "which data belongs to which commits",
    "start": "232480",
    "end": "234400"
  },
  {
    "text": "atomic commits the solution to this was",
    "start": "234400",
    "end": "237840"
  },
  {
    "text": "to send all the samples of a particular",
    "start": "237840",
    "end": "240000"
  },
  {
    "text": "scrape in a single request and if the",
    "start": "240000",
    "end": "242640"
  },
  {
    "text": "particular scrape is very big",
    "start": "242640",
    "end": "244720"
  },
  {
    "text": "break them down into different requests",
    "start": "244720",
    "end": "246560"
  },
  {
    "text": "and send the start and end market",
    "start": "246560",
    "end": "250000"
  },
  {
    "text": "accordingly so that's the remote on the",
    "start": "250000",
    "end": "252000"
  },
  {
    "text": "remote storage side it can build the",
    "start": "252000",
    "end": "253760"
  },
  {
    "text": "request on its side and then commit it",
    "start": "253760",
    "end": "255920"
  },
  {
    "text": "atomically",
    "start": "255920",
    "end": "258639"
  },
  {
    "text": "the current status of the feature is in",
    "start": "260479",
    "end": "262160"
  },
  {
    "text": "review phase",
    "start": "262160",
    "end": "263520"
  },
  {
    "text": "once the concern maintainers approve",
    "start": "263520",
    "end": "265759"
  },
  {
    "text": "implementation will begin learning more",
    "start": "265759",
    "end": "268479"
  },
  {
    "start": "267000",
    "end": "298000"
  },
  {
    "text": "about transactional remote right",
    "start": "268479",
    "end": "271759"
  },
  {
    "text": "if you want to learn more about",
    "start": "271759",
    "end": "273199"
  },
  {
    "text": "transactional remote right and get more",
    "start": "273199",
    "end": "275440"
  },
  {
    "text": "details or see the discussions happening",
    "start": "275440",
    "end": "277759"
  },
  {
    "text": "for this feature you can go to this link",
    "start": "277759",
    "end": "280720"
  },
  {
    "text": "or in the prometheus dev mailing list",
    "start": "280720",
    "end": "282800"
  },
  {
    "text": "you can type this topic and get",
    "start": "282800",
    "end": "285440"
  },
  {
    "text": "the",
    "start": "285440",
    "end": "286880"
  },
  {
    "text": "and see the actual discussion",
    "start": "286880",
    "end": "290560"
  },
  {
    "text": "thank you very much",
    "start": "295759",
    "end": "299320"
  }
]