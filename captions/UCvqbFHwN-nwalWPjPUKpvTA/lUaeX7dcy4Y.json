[
  {
    "start": "0",
    "end": "138000"
  },
  {
    "text": "I think we can get started right so",
    "start": "60",
    "end": "9570"
  },
  {
    "text": "thanks to everyone for making effort I I was myself was thinking should I take",
    "start": "9570",
    "end": "16890"
  },
  {
    "text": "all the walking and come here but okay let's get started thanks to the session",
    "start": "16890",
    "end": "24990"
  },
  {
    "text": "of coop edge deep dive my name is is Sean Sean Wong I I've been working on the edge computing area for",
    "start": "24990",
    "end": "32520"
  },
  {
    "text": "the past two plus years so cube edge is",
    "start": "32520",
    "end": "38070"
  },
  {
    "text": "like many other open source project has its roots from a commercial product",
    "start": "38070",
    "end": "44129"
  },
  {
    "text": "commercial cloud service I want to give a little bit background about that to",
    "start": "44129",
    "end": "49680"
  },
  {
    "text": "help understand how we got here today so about two years ago we a group of us",
    "start": "49680",
    "end": "54989"
  },
  {
    "text": "Jason and me and others we started looking into edge computing and immediately we found it is an area of",
    "start": "54989",
    "end": "61739"
  },
  {
    "text": "great potential so that's we went all-in for it and as a result in April of 2018",
    "start": "61739",
    "end": "69600"
  },
  {
    "text": "we shipped our first cloud edge computing platform in China it's a",
    "start": "69600",
    "end": "76770"
  },
  {
    "text": "product called intelligent edge fabric or IEF so this this product has been the",
    "start": "76770",
    "end": "84030"
  },
  {
    "text": "service has been pretty successful as an evidence I want to share that in one of",
    "start": "84030",
    "end": "90960"
  },
  {
    "text": "the deal that's already being sign in under deployment now we are going to be",
    "start": "90960",
    "end": "97409"
  },
  {
    "text": "running close to a quarter million of containers on edge nodes across China in",
    "start": "97409",
    "end": "104640"
  },
  {
    "text": "the next few years so I think for a edge computing platform nowadays as a start",
    "start": "104640",
    "end": "112140"
  },
  {
    "text": "that's a pretty good result and that certainly also gave us some confidence",
    "start": "112140",
    "end": "117149"
  },
  {
    "text": "and also because of our love for open source we pushed this out end of last",
    "start": "117149",
    "end": "124829"
  },
  {
    "text": "year to CN CF I believe it's also one of the",
    "start": "124829",
    "end": "130050"
  },
  {
    "text": "first edge computing platform it's called curb edge I think I see some familiar faces here so today we'll be",
    "start": "130050",
    "end": "139530"
  },
  {
    "start": "138000",
    "end": "170000"
  },
  {
    "text": "covering some of the functionality aspects of deep dive and also look at two typical application scenarios so",
    "start": "139530",
    "end": "148290"
  },
  {
    "text": "let's get started actually one more thing I want to acknowledge today's session was supposed to be a joint",
    "start": "148290",
    "end": "154500"
  },
  {
    "text": "session between me and Kevin kevin has being our open source front guy since",
    "start": "154500",
    "end": "160380"
  },
  {
    "text": "the beginning of Quebec and unfortunately he couldn't be here today but I want to acknowledge his",
    "start": "160380",
    "end": "165560"
  },
  {
    "text": "contribution and help with putting the content together so we we've had some",
    "start": "165560",
    "end": "173610"
  },
  {
    "start": "170000",
    "end": "252000"
  },
  {
    "text": "basic ideas but the main drivers for edge computing to become mainstream these couple things",
    "start": "173610",
    "end": "180300"
  },
  {
    "text": "it's about reduced latency and in this",
    "start": "180300",
    "end": "186750"
  },
  {
    "text": "area the the major application types are first like machinery industrial machineries that needs very fast and",
    "start": "186750",
    "end": "193710"
  },
  {
    "text": "very reliable response or the other type is actually app that's getting very",
    "start": "193710",
    "end": "200430"
  },
  {
    "text": "popular nowadays as tik-tok type of things where video sharing and video processing happens a lot on edge front",
    "start": "200430",
    "end": "207840"
  },
  {
    "text": "so that was the example of that and the other type is the massive a massive",
    "start": "207840",
    "end": "213990"
  },
  {
    "text": "amount of data that even with 5g and all that future infrastructure there's no",
    "start": "213990",
    "end": "219570"
  },
  {
    "text": "reason to send this ton of non structured data to cloud to be processed in the stored so that's the data aspect",
    "start": "219570",
    "end": "227130"
  },
  {
    "text": "and the third one we actually do in our practice fund being a major consideration from a lot of customers is",
    "start": "227130",
    "end": "233730"
  },
  {
    "text": "actually privacy and security where individuals or businesses or government",
    "start": "233730",
    "end": "240030"
  },
  {
    "text": "don't want to send their store their information in public cloud or want to",
    "start": "240030",
    "end": "245700"
  },
  {
    "text": "keep their eyepiece to themselves so those those are the major application",
    "start": "245700",
    "end": "252060"
  },
  {
    "start": "252000",
    "end": "342000"
  },
  {
    "text": "areas here's a overall diagram we've touched this yesterday I want to just",
    "start": "252060",
    "end": "257310"
  },
  {
    "text": "give a quick walkthrough so we we have the background to start",
    "start": "257310",
    "end": "263280"
  },
  {
    "text": "cube edge is a kubernetes application we",
    "start": "263280",
    "end": "268290"
  },
  {
    "text": "build 100% on top of kubernetes one decision we made is to separate the",
    "start": "268290",
    "end": "274800"
  },
  {
    "text": "orchestration of kubernetes from the computing side of edge and that",
    "start": "274800",
    "end": "281460"
  },
  {
    "text": "separation gives us more flexibility flexibility later on to meet different",
    "start": "281460",
    "end": "287160"
  },
  {
    "text": "business scenarios I'll get into that later on and on the edge side two main",
    "start": "287160",
    "end": "292740"
  },
  {
    "text": "functionality one is compute that is get a container down and start running",
    "start": "292740",
    "end": "299480"
  },
  {
    "text": "there's more detail of that and the other part is about connectivity kiss",
    "start": "299480",
    "end": "306000"
  },
  {
    "text": "edge computing two major scenarios one is compute like we said video",
    "start": "306000",
    "end": "311220"
  },
  {
    "text": "transcoding and so on the other application type is IOT where sensors",
    "start": "311220",
    "end": "317419"
  },
  {
    "text": "sensors that generates magnitude higher level of data than the traditional IOT",
    "start": "317419",
    "end": "323070"
  },
  {
    "text": "is we're seeing more and more more and more of that and also there's a being",
    "start": "323070",
    "end": "330270"
  },
  {
    "text": "able to connect all these different sensors is one of the big burden in all this IOT or edge computing type of",
    "start": "330270",
    "end": "337140"
  },
  {
    "text": "development effort so we have a full flow of solution for that start from the",
    "start": "337140",
    "end": "346110"
  },
  {
    "start": "342000",
    "end": "591000"
  },
  {
    "text": "basics how we build it we have this in mind that we want to build a modulized framework that is open and expandable",
    "start": "346110",
    "end": "353010"
  },
  {
    "text": "for future scenarios and technologies so that's that applies to both our core and",
    "start": "353010",
    "end": "359580"
  },
  {
    "text": "our application model on the core side this whole app is build on top of this",
    "start": "359580",
    "end": "366510"
  },
  {
    "text": "thing called beehive R there's probably 100 different beehives this is yet another one it uses co-channel it's",
    "start": "366510",
    "end": "374190"
  },
  {
    "text": "under it's in the same github under coop",
    "start": "374190",
    "end": "379290"
  },
  {
    "text": "edge so it is a messaging framework and the basic module of that is module and",
    "start": "379290",
    "end": "386120"
  },
  {
    "text": "modules can be put into groups and any new modules or new functionalities can",
    "start": "386120",
    "end": "393060"
  },
  {
    "text": "be implemented by here into this interface you have a name group start and clean up then you will",
    "start": "393060",
    "end": "401650"
  },
  {
    "text": "be able to get onto the platform and start running and talk to others the other approach we've taken we've seeing",
    "start": "401650",
    "end": "408159"
  },
  {
    "text": "other open-source projects also start to do the same is we build all the binaries all these different modules into one",
    "start": "408159",
    "end": "414490"
  },
  {
    "text": "binary and start with one process and at the start time you could simply use a",
    "start": "414490",
    "end": "420370"
  },
  {
    "text": "config file and say based on my business scenario I want these three or five or one module running on this particular",
    "start": "420370",
    "end": "429430"
  },
  {
    "text": "node instance and that gives us the flexibility nurse of just one process in one binary and also the benefit of",
    "start": "429430",
    "end": "438270"
  },
  {
    "text": "keeping the footprint to the minimum because as we know edge computing",
    "start": "438270",
    "end": "445650"
  },
  {
    "text": "computer resource is limited even though it's already a lot bigger than before but we want to save that for the",
    "start": "445650",
    "end": "452159"
  },
  {
    "text": "critical business applications same thing applies on the application side to",
    "start": "452159",
    "end": "462370"
  },
  {
    "text": "start with you would package your logic into one container and push it down to the edge side and start up stop running",
    "start": "462370",
    "end": "468909"
  },
  {
    "text": "then then gradually you would say I want different functionalities you would have multiple containers running on the same",
    "start": "468909",
    "end": "474610"
  },
  {
    "text": "node then in areas you would have multiple nodes to support a bigger area",
    "start": "474610",
    "end": "480610"
  },
  {
    "text": "or a campus or multiple things on a long road all these different scenarios then",
    "start": "480610",
    "end": "486520"
  },
  {
    "text": "you would all start and realizing you in a micro service situation and for that",
    "start": "486520",
    "end": "491740"
  },
  {
    "text": "reason we lived one level up from just containers to services so we'll all be",
    "start": "491740",
    "end": "498879"
  },
  {
    "text": "talking about some details of edge mesh which is a module we build for service mesh you can do service discovery and",
    "start": "498879",
    "end": "507449"
  },
  {
    "text": "call service nodes in between our parts and connect",
    "start": "507449",
    "end": "513940"
  },
  {
    "text": "them either no to note or no to cloud so we'll see some of that as well there'll",
    "start": "513940",
    "end": "520390"
  },
  {
    "text": "be a couple of topics I'll be jumping through on each one of them I'll try to make them clear so this slide I want to",
    "start": "520390",
    "end": "526839"
  },
  {
    "text": "clear some air there's some discussions in for and others talking to us asking what's",
    "start": "526839",
    "end": "531880"
  },
  {
    "text": "the difference between just a couplet right I think it's pretty clear with the",
    "start": "531880",
    "end": "537520"
  },
  {
    "text": "overall architecture already I just want to emphasize that what we do here is a full fledge platform for edge computing",
    "start": "537520",
    "end": "544900"
  },
  {
    "text": "it it's overlap with couplet is actually in",
    "start": "544900",
    "end": "550870"
  },
  {
    "text": "this box in the center marked as edge D if you look at the code it is actually",
    "start": "550870",
    "end": "557740"
  },
  {
    "text": "taking the couplet code and get rid of the part we don't need and plugging our code to make it work so then on top of",
    "start": "557740",
    "end": "566770"
  },
  {
    "text": "that we build local persistency for reliability we build edge called",
    "start": "566770",
    "end": "571780"
  },
  {
    "text": "communication channel for management and application data bus we build device",
    "start": "571780",
    "end": "579820"
  },
  {
    "text": "trains and device modeling for connectivities and device management and so on so it is more than just a client",
    "start": "579820",
    "end": "590610"
  },
  {
    "text": "all right so this is the next topic I talked about separating orchestration",
    "start": "590610",
    "end": "597700"
  },
  {
    "start": "591000",
    "end": "758000"
  },
  {
    "text": "and so in in a first diagram let me jump back a couple here you see a clear line",
    "start": "597700",
    "end": "603910"
  },
  {
    "text": "where we see orchestration or the upper part which we said is in the cloud and",
    "start": "603910",
    "end": "609660"
  },
  {
    "text": "the bottom part is a jacuzzi now the reason for that we want to make",
    "start": "609660",
    "end": "615790"
  },
  {
    "text": "this clear separation of orchestration capability versus compute functionality because in a lot of scenarios we see",
    "start": "615790",
    "end": "623500"
  },
  {
    "text": "it's actually a box this small or even smaller than that that's actually running all this modern software stacks",
    "start": "623500",
    "end": "630880"
  },
  {
    "text": "so we want to have a capability to manage really large number undreds of",
    "start": "630880",
    "end": "638020"
  },
  {
    "text": "millions of such nodes in the cloud and be to save as as much resource as",
    "start": "638020",
    "end": "643840"
  },
  {
    "text": "possible so we'll talk about a couple of variations this architecture can actually support but since we separate",
    "start": "643840",
    "end": "651670"
  },
  {
    "text": "computer and orchestration some of the technical details emerges for example how to create a persistent volume",
    "start": "651670",
    "end": "658810"
  },
  {
    "text": "becomes one write in a kubernetes world all these things happens in the same data center where you make a",
    "start": "658810",
    "end": "665350"
  },
  {
    "text": "call the persistent of the PVC the claim actually is a synchronous call which the",
    "start": "665350",
    "end": "673650"
  },
  {
    "text": "external provisioner will call the local drivers and period gets the item",
    "start": "673650",
    "end": "680170"
  },
  {
    "text": "provision it will return but for our case we have to do it differently so in",
    "start": "680170",
    "end": "686980"
  },
  {
    "text": "this flow you see that starting from step 1 2 3 our typical crew Benetti",
    "start": "686980",
    "end": "692320"
  },
  {
    "text": "operations then from step 4 it's actually calling into a proxy driver we",
    "start": "692320",
    "end": "698740"
  },
  {
    "text": "provide and the function of that is to take this call Senate if you look at",
    "start": "698740",
    "end": "706240"
  },
  {
    "text": "step 5 and 6 send it to the cloud hub then push down through our build channel",
    "start": "706240",
    "end": "712290"
  },
  {
    "text": "with WebSocket all quick through that channel to the edge node and there it",
    "start": "712290",
    "end": "718420"
  },
  {
    "text": "follows down to HD HD which is the computer provision module where it calls",
    "start": "718420",
    "end": "726220"
  },
  {
    "text": "the kubernetes building volume plugging and then cost the local store party",
    "start": "726220",
    "end": "731980"
  },
  {
    "text": "driver to actually provision this storage and it goes all the way back up",
    "start": "731980",
    "end": "737230"
  },
  {
    "text": "and to step 16 or 17 that finished the full synchronous loop so similarly for",
    "start": "737230",
    "end": "746770"
  },
  {
    "text": "it delete it happens roughly the same I",
    "start": "746770",
    "end": "751810"
  },
  {
    "text": "think other than the name is the delete versus create everything is almost the same so I'll skip that so that just",
    "start": "751810",
    "end": "760000"
  },
  {
    "start": "758000",
    "end": "850000"
  },
  {
    "text": "shows the effort we have to do but once app we have that a clear separation good things can happen because we now have",
    "start": "760000",
    "end": "766180"
  },
  {
    "text": "the capability of not only running a cooperage local deployment scenario we",
    "start": "766180",
    "end": "773260"
  },
  {
    "text": "can easily put the orchestration party in the cloud and the compute miles hundreds of hundreds of miles away or we",
    "start": "773260",
    "end": "780940"
  },
  {
    "text": "could have them moved or in different scenarios I have a slide to talk about",
    "start": "780940",
    "end": "786220"
  },
  {
    "text": "that the next thing I want to talk about is edge device management I've talked",
    "start": "786220",
    "end": "791350"
  },
  {
    "text": "about the importance of it we can do full fledge device",
    "start": "791350",
    "end": "796510"
  },
  {
    "text": "connectivity modeling shadowing and sync up to kubernetes the full flow and we",
    "start": "796510",
    "end": "803860"
  },
  {
    "text": "use the equipment as kubernetes crd to do this so it's 100% compatible basically there are two object models we",
    "start": "803860",
    "end": "811240"
  },
  {
    "text": "use one is the device model which describes what two device what a device is like right once you",
    "start": "811240",
    "end": "818620"
  },
  {
    "text": "have that it's an object model you can inherit that and build a device instance and that instance is used to store the",
    "start": "818620",
    "end": "827470"
  },
  {
    "text": "each device specific information so a flow of creating a device from the cloud",
    "start": "827470",
    "end": "834070"
  },
  {
    "text": "is clear you would use the CRT create your own definition of a device speed a",
    "start": "834070",
    "end": "839320"
  },
  {
    "text": "thermometer or a camera or anything else and push that into kubernetes and that",
    "start": "839320",
    "end": "844899"
  },
  {
    "text": "will get propagated down to the edge side edge side we do a couple of things",
    "start": "844899",
    "end": "853630"
  },
  {
    "start": "850000",
    "end": "970000"
  },
  {
    "text": "we build a device tree model where we actually shadow the device itself as a",
    "start": "853630",
    "end": "859810"
  },
  {
    "text": "digital digital copy and then we build a",
    "start": "859810",
    "end": "865569"
  },
  {
    "text": "full flow of connectivity through a containerized mapper this mappers use is",
    "start": "865569",
    "end": "874089"
  },
  {
    "text": "from the bottom device up the mapper is used as connectivity module to convert",
    "start": "874089",
    "end": "881380"
  },
  {
    "text": "to connect and convert the thousands of different protocols into MQTT and you",
    "start": "881380",
    "end": "888160"
  },
  {
    "text": "could actually even do some additional logic on top of that and filtering and other things and then pass this through",
    "start": "888160",
    "end": "894880"
  },
  {
    "text": "and a MQTT broker into a event bus which is our mqtt messaging pass on the edge",
    "start": "894880",
    "end": "901839"
  },
  {
    "text": "side and this will further get into the device string be modeled there and",
    "start": "901839",
    "end": "907269"
  },
  {
    "text": "persist it there and say me information will be passed on to the cloud so that's",
    "start": "907269",
    "end": "913720"
  },
  {
    "text": "a pretty convenient way and so far we've implemented implemented a couple of them the protocol conversion plugins OPC UA",
    "start": "913720",
    "end": "922630"
  },
  {
    "text": "for industrial scenarios it's a standard there there's Bluetooth and it's Modbus",
    "start": "922630",
    "end": "927670"
  },
  {
    "text": "so and the mapper itself is in a demon Sat",
    "start": "927670",
    "end": "933030"
  },
  {
    "text": "container and we wanted to do it this way because eventually we want this to",
    "start": "933030",
    "end": "938640"
  },
  {
    "text": "be a secured and fully isolated using cotton or other containers so because",
    "start": "938640",
    "end": "944700"
  },
  {
    "text": "edge itself is already outside outside of data centers and then these device",
    "start": "944700",
    "end": "950880"
  },
  {
    "text": "connect plugging becomes another layer of security exposure so that these",
    "start": "950880",
    "end": "957780"
  },
  {
    "text": "separate secured containers eventually we'll be providing good security to all",
    "start": "957780",
    "end": "964230"
  },
  {
    "text": "these safety scene attack scenarios now",
    "start": "964230",
    "end": "970080"
  },
  {
    "start": "970000",
    "end": "1125000"
  },
  {
    "text": "I talked about device strain a device strain in our case we actually",
    "start": "970080",
    "end": "975650"
  },
  {
    "text": "referenced and borrowed the the Mozilla's web of things the definition",
    "start": "975650",
    "end": "981420"
  },
  {
    "text": "of device string it has three basic components a device is similar to what a",
    "start": "981420",
    "end": "986700"
  },
  {
    "text": "device is a device attribute which is a property bag of each attribute its value",
    "start": "986700",
    "end": "993420"
  },
  {
    "text": "and its version and so on and a device string which is also a property bag but",
    "start": "993420",
    "end": "999300"
  },
  {
    "text": "the difference is for a device strain you have to changing updatable state in",
    "start": "999300",
    "end": "1006650"
  },
  {
    "text": "an expected state and a actual state and the flow of how this works is actually",
    "start": "1006650",
    "end": "1012710"
  },
  {
    "text": "asynchronous so on the right side we have this diagram shows how a typical",
    "start": "1012710",
    "end": "1019120"
  },
  {
    "text": "operation to set the device status from the cloud happens for example if you",
    "start": "1019120",
    "end": "1025100"
  },
  {
    "text": "want to change a device from a sleep to a active state right that happens we're",
    "start": "1025100",
    "end": "1030530"
  },
  {
    "text": "setting up the status in kubernetes and that gets put down to our cloud the",
    "start": "1030530",
    "end": "1035780"
  },
  {
    "text": "device manager and device manager then send this information down to the edge side where it's get pushed into device",
    "start": "1035780",
    "end": "1043459"
  },
  {
    "text": "train that's step four and after that this operation is considered complete now we know that devices are operating",
    "start": "1043459",
    "end": "1051230"
  },
  {
    "text": "on a totally different pace some of them are always online but some of them are not frequently online they can be online",
    "start": "1051230",
    "end": "1058850"
  },
  {
    "text": "for every second minute or even days right so then happens is move to the right side you",
    "start": "1058850",
    "end": "1065540"
  },
  {
    "text": "see device connects to mapper and on step 5 mapper would goes through a",
    "start": "1065540",
    "end": "1071530"
  },
  {
    "text": "mqtt pub/sub model and try to get the new expected state change from device",
    "start": "1071530",
    "end": "1079670"
  },
  {
    "text": "string so that's step 5 to a broker 6 to the event bus and event bus pulls from the device string and",
    "start": "1079670",
    "end": "1086360"
  },
  {
    "text": "that information then comes back and the subscriber gets us information is",
    "start": "1086360",
    "end": "1091670"
  },
  {
    "text": "through mapper and by this point device knows it it's expected to be in an",
    "start": "1091670",
    "end": "1097610"
  },
  {
    "text": "active state and that's when it happens so definitely pay attention to the asynchronous nature of this operation",
    "start": "1097610",
    "end": "1105040"
  },
  {
    "text": "and similarly for a set of actual status",
    "start": "1105040",
    "end": "1112460"
  },
  {
    "text": "for example your device status has changed by itself the same routine of going through and Couty pipe and updates",
    "start": "1112460",
    "end": "1119810"
  },
  {
    "text": "the device tree and then get put up to the kubernetes edge mesh is the next",
    "start": "1119810",
    "end": "1127220"
  },
  {
    "start": "1125000",
    "end": "1165000"
  },
  {
    "text": "topic we talked about this is an implementation of service discovery on the whole service mesh front what we've",
    "start": "1127220",
    "end": "1137000"
  },
  {
    "text": "implemented is actually something that will enable you to first of all write in",
    "start": "1137000",
    "end": "1143060"
  },
  {
    "text": "ways of fully called native programming where you're talking to services in a",
    "start": "1143060",
    "end": "1149330"
  },
  {
    "text": "micro service infrastructure right a node from a pod or a application",
    "start": "1149330",
    "end": "1156350"
  },
  {
    "text": "instance from one pod could talk to a service that's distributed the rest of",
    "start": "1156350",
    "end": "1163010"
  },
  {
    "text": "the deployment so here's a flow of how",
    "start": "1163010",
    "end": "1168860"
  },
  {
    "start": "1165000",
    "end": "1280000"
  },
  {
    "text": "this works the blue side is actually the control flow basically you would config",
    "start": "1168860",
    "end": "1175460"
  },
  {
    "text": "a service a criminality of service and associated parts with that service and",
    "start": "1175460",
    "end": "1180860"
  },
  {
    "text": "that information is passed from the top into the edge node and persisted there",
    "start": "1180860",
    "end": "1186530"
  },
  {
    "text": "right with this information if in case a application wants to reach a service",
    "start": "1186530",
    "end": "1193820"
  },
  {
    "text": "like here there's a little bit confusion this HTTP slash B slash resource B refers to another service but then",
    "start": "1193820",
    "end": "1201550"
  },
  {
    "text": "there's a pot B so ignore the pot B just consider B as a service then what happens is we actually on a pot level",
    "start": "1201550",
    "end": "1208690"
  },
  {
    "text": "set up a proxy which hijacks the traffic and do a we maintain DNS service",
    "start": "1208690",
    "end": "1217720"
  },
  {
    "text": "internally of our own and that resolves al7 or l4 name namespace to a service",
    "start": "1217720",
    "end": "1226390"
  },
  {
    "text": "name and which in turn hooks up with the servicing information that's passed down to land some rotation rule on a pod and",
    "start": "1226390",
    "end": "1235890"
  },
  {
    "text": "so you can finish the logic and",
    "start": "1235890",
    "end": "1241530"
  },
  {
    "text": "similarly we don't want to limit this to edge nose-to-nose only currently the",
    "start": "1241530",
    "end": "1248350"
  },
  {
    "text": "code works for the thing for it knows within the same subset different notes but eventually we want this to be able",
    "start": "1248350",
    "end": "1255340"
  },
  {
    "text": "to be a protocol or practice that can be used for notes cross domains or notes",
    "start": "1255340",
    "end": "1261690"
  },
  {
    "text": "and cloud services the type of communication so in this case you can",
    "start": "1261690",
    "end": "1267040"
  },
  {
    "text": "see that with a router the same logic can be helped can be used to go through the edge card boundary and actually",
    "start": "1267040",
    "end": "1273730"
  },
  {
    "text": "reach a service in the cloud which is a very typical scenario we will see later on in the application okay so time wise",
    "start": "1273730",
    "end": "1284320"
  },
  {
    "start": "1280000",
    "end": "1390000"
  },
  {
    "text": "have twenty one couple minutes on application scenarios so through the",
    "start": "1284320",
    "end": "1289810"
  },
  {
    "text": "practice we talk to all the cost of different type of customers and understand their needs what we've found",
    "start": "1289810",
    "end": "1295860"
  },
  {
    "text": "customer has a lot of ideas right and it's really based on reality of what",
    "start": "1295860",
    "end": "1300940"
  },
  {
    "text": "they have and what they want to achieve the left side is very typical cubanelle implementation that you have all",
    "start": "1300940",
    "end": "1307450"
  },
  {
    "text": "constriction fully on the cloud and then you have just a very tiny boxes running specific logic at each location for",
    "start": "1307450",
    "end": "1314440"
  },
  {
    "text": "example a convenience store a campus roadside box and so on right so that",
    "start": "1314440",
    "end": "1320200"
  },
  {
    "text": "that's a typical crash scenario the other one is the one in the middle where you pretty much don't want to deal with",
    "start": "1320200",
    "end": "1327220"
  },
  {
    "text": "cloud component at all you just won't have a deployment that's local",
    "start": "1327220",
    "end": "1332620"
  },
  {
    "text": "right but kubernetes itself may be too big for it so we see some applications",
    "start": "1332620",
    "end": "1339280"
  },
  {
    "text": "such as Kayseri as kik seeing this scenario that also works but it's a completely private deployment without",
    "start": "1339280",
    "end": "1346630"
  },
  {
    "text": "utilizing the cloud power and then customer will say hey I have I have a business where there's treat structures",
    "start": "1346630",
    "end": "1354250"
  },
  {
    "text": "of organizations and headquarters and so on and how do I deal with that I think",
    "start": "1354250",
    "end": "1361020"
  },
  {
    "text": "cooperage by the way can deal with all these scenarios easily because we have",
    "start": "1361020",
    "end": "1366520"
  },
  {
    "text": "this clear separation we can just plug the computing modules to a different",
    "start": "1366520",
    "end": "1372010"
  },
  {
    "text": "orchestration engine right so we've we've seen requirements in reality for",
    "start": "1372010",
    "end": "1380500"
  },
  {
    "text": "all these scenarios so that's why we we think that the the architecture is is a",
    "start": "1380500",
    "end": "1386950"
  },
  {
    "text": "good one it's open and it's very flexible now to real application",
    "start": "1386950",
    "end": "1392860"
  },
  {
    "start": "1390000",
    "end": "1548000"
  },
  {
    "text": "scenarios I want to talk about one is a IOT scenario in this case a smart city",
    "start": "1392860",
    "end": "1398740"
  },
  {
    "text": "would this is actually a more of a traffic control type of scenario where a",
    "start": "1398740",
    "end": "1403960"
  },
  {
    "text": "couple of edge nodes will actually form a small cluster sometimes a single node",
    "start": "1403960",
    "end": "1409330"
  },
  {
    "text": "actually connects to multiple cameras a specialty camera to read the license",
    "start": "1409330",
    "end": "1414820"
  },
  {
    "text": "plate or just a car outlying of a car and there's cameras that we take video",
    "start": "1414820",
    "end": "1423220"
  },
  {
    "text": "of a road condition of traffic how many cars are there doing stats on that and then there's same maybe the same",
    "start": "1423220",
    "end": "1430630"
  },
  {
    "text": "algorithm sitting on the same stream but trying to detect if there's any illegal",
    "start": "1430630",
    "end": "1437020"
  },
  {
    "text": "crossing any other situation dangerous situations so this kind of app is getting more and more popular what you",
    "start": "1437020",
    "end": "1445900"
  },
  {
    "text": "can see here is there's a clear edge component which runs intelligent algorithm to actually carve out car",
    "start": "1445900",
    "end": "1454120"
  },
  {
    "text": "shape or picture of the car carve out to the license plate but then",
    "start": "1454120",
    "end": "1459400"
  },
  {
    "text": "send the information to cloud through a constant connection and in the cloud more",
    "start": "1459400",
    "end": "1465250"
  },
  {
    "text": "complicated logic or heavier service can be called for example you want to search a national database or some registration",
    "start": "1465250",
    "end": "1471910"
  },
  {
    "text": "about the license plate if it matches the car description if it there's",
    "start": "1471910",
    "end": "1478750"
  },
  {
    "text": "additional issues with that license plate and so on or connect to multiple",
    "start": "1478750",
    "end": "1484560"
  },
  {
    "text": "such edge nodes and find out the traffic pattern and find a congestion trends and",
    "start": "1484560",
    "end": "1490630"
  },
  {
    "text": "so on so this is a very typical of and very useful scenario it cuts down",
    "start": "1490630",
    "end": "1496410"
  },
  {
    "text": "dramatically the amount of data that needs to be sent to a central cloud and also because it's on site it's a very",
    "start": "1496410",
    "end": "1503170"
  },
  {
    "text": "fit efficient cost wise the network bandwidth is a major cost in many of the",
    "start": "1503170",
    "end": "1509950"
  },
  {
    "text": "scenarios and we see a clear pattern of edge and cloud Court coordinating and",
    "start": "1509950",
    "end": "1517060"
  },
  {
    "text": "working together we actually have a term for it called edge called synergy and",
    "start": "1517060",
    "end": "1522630"
  },
  {
    "text": "another aspect of this is even though it's behind the curtain but there's a heavy training as you all see that for",
    "start": "1522630",
    "end": "1530620"
  },
  {
    "text": "all these scenarios to actually happen on the card with the limited computer resource before you could actually",
    "start": "1530620",
    "end": "1536710"
  },
  {
    "text": "implement all these things and keep improving them so the loop is continuous",
    "start": "1536710",
    "end": "1541990"
  },
  {
    "text": "improve training feedback and improve right second scenario I talked about",
    "start": "1541990",
    "end": "1549730"
  },
  {
    "start": "1548000",
    "end": "1788000"
  },
  {
    "text": "tik-tok right we we've been we've talked",
    "start": "1549730",
    "end": "1554980"
  },
  {
    "text": "to customers in China and worked on prototype prototypes and PLC's with them it's actually popular in Asia",
    "start": "1554980",
    "end": "1563230"
  },
  {
    "text": "now getting more and more popular here as well so the challenge here is this",
    "start": "1563230",
    "end": "1568500"
  },
  {
    "text": "large data centers have unlimited computer resource but it's also it also has a network connection even though",
    "start": "1568500",
    "end": "1575230"
  },
  {
    "text": "very large already it's precious right so you don't want to spend seventy percent of that sending all this video",
    "start": "1575230",
    "end": "1582130"
  },
  {
    "text": "data and also the cost is much higher for network charge from a edge node or a",
    "start": "1582130",
    "end": "1589660"
  },
  {
    "text": "CDN site compared to a major data center so what happens is more and more",
    "start": "1589660",
    "end": "1594820"
  },
  {
    "text": "business of a video sharing type of application moves such logic onto CDN or edge sites",
    "start": "1594820",
    "end": "1603190"
  },
  {
    "text": "where you have edge network calls - that's 1/5 of or even less than the",
    "start": "1603190",
    "end": "1610090"
  },
  {
    "text": "large data centers and you have computer resources there that's very close to",
    "start": "1610090",
    "end": "1615340"
  },
  {
    "text": "where the content provider the are this there's a clear pattern here for example",
    "start": "1615340",
    "end": "1620940"
  },
  {
    "text": "metropolitan cities will have a lot more content providers and viewers then then",
    "start": "1620940",
    "end": "1627429"
  },
  {
    "text": "the rural areas right so there's a concentration so if you have more computer resources in those edge nodes",
    "start": "1627429",
    "end": "1634630"
  },
  {
    "text": "that solves the problem locally and in this case you could also add additional value-added services such as content",
    "start": "1634630",
    "end": "1641980"
  },
  {
    "text": "detection to make sure things are legit legal and at least appropriate right and",
    "start": "1641980",
    "end": "1646990"
  },
  {
    "text": "edge coupe edging in this scenarios works well because in this case one of",
    "start": "1646990",
    "end": "1653320"
  },
  {
    "text": "the benefit to coverage is there's a very strong constant connection and there is resources there so when",
    "start": "1653320",
    "end": "1660910"
  },
  {
    "text": "something happens the connection even fails those nodes can still work on its own because it's not hard to bring up a",
    "start": "1660910",
    "end": "1668200"
  },
  {
    "text": "backup orchestration engine and keep the keep the business running so I think",
    "start": "1668200",
    "end": "1676090"
  },
  {
    "text": "that's the that's that wraps up the talk we want this project to get more",
    "start": "1676090",
    "end": "1684900"
  },
  {
    "text": "participation so follow us on Twitter and scan that and there's a lot of",
    "start": "1684900",
    "end": "1690460"
  },
  {
    "text": "information you can find out only all these different channels we think this",
    "start": "1690460",
    "end": "1695679"
  },
  {
    "text": "will be an area of great interest so I have 5 7 minutes so any questions during",
    "start": "1695679",
    "end": "1703510"
  },
  {
    "text": "welcome try to answer ah so right now we can run as small as",
    "start": "1703510",
    "end": "1717860"
  },
  {
    "text": "70 megabytes to start the engine right and because right now we only support",
    "start": "1717860",
    "end": "1723320"
  },
  {
    "text": "container that's we could potentially even cut it that smaller if you just",
    "start": "1723320",
    "end": "1728840"
  },
  {
    "text": "want to run a process we have plans to run either process or VMs through the",
    "start": "1728840",
    "end": "1734480"
  },
  {
    "text": "orchestration engine so that can - to a",
    "start": "1734480",
    "end": "1739809"
  },
  {
    "text": "current day arm or Intel box even if it",
    "start": "1739809",
    "end": "1744830"
  },
  {
    "text": "looks very small normally it would have a couple gig of memory so that footprint is pretty small",
    "start": "1744830",
    "end": "1750559"
  },
  {
    "text": "already but then once you start running sorry I'll just add a little bit you have the containers and you started",
    "start": "1750559",
    "end": "1756770"
  },
  {
    "text": "collecting logs the footprint will grow a little bit but it's still much smaller and we have machine learning scenarios",
    "start": "1756770",
    "end": "1763550"
  },
  {
    "text": "were running no problem yes it's a",
    "start": "1763550",
    "end": "1774260"
  },
  {
    "text": "really really good point so customers want all the oh sorry you're asking",
    "start": "1774260",
    "end": "1780620"
  },
  {
    "text": "coordinated orchestration the meaning of that so let me go back to this this",
    "start": "1780620",
    "end": "1789050"
  },
  {
    "start": "1788000",
    "end": "1955000"
  },
  {
    "text": "slide 1 & 2 are very simple the one on the Left says I want orchestration",
    "start": "1789050",
    "end": "1795500"
  },
  {
    "text": "simply in the cloud write a scenario - I want everything all together in a private setup but customers sometimes",
    "start": "1795500",
    "end": "1802910"
  },
  {
    "text": "say hey well I have no problem provide the internet connection",
    "start": "1802910",
    "end": "1808340"
  },
  {
    "text": "but what if in cases the connection will fail right in this case kuba already",
    "start": "1808340",
    "end": "1814910"
  },
  {
    "text": "provides the capability to keep the business running continuously without",
    "start": "1814910",
    "end": "1820040"
  },
  {
    "text": "interruption because with the local data cache and everything we can bring up a container if it's crashed or restarted",
    "start": "1820040",
    "end": "1827600"
  },
  {
    "text": "anything so that's no problem but customer one more and they say well if I still want some orchestration capability",
    "start": "1827600",
    "end": "1834050"
  },
  {
    "text": "because they now I have four machines here and sometimes I need to take go to",
    "start": "1834050",
    "end": "1839270"
  },
  {
    "text": "task a little bit so I think in that's scenario there is a chance we can",
    "start": "1839270",
    "end": "1845020"
  },
  {
    "text": "because we have the separation between call hub and edge hub so on the",
    "start": "1845020",
    "end": "1850670"
  },
  {
    "text": "interface level it we only need to direct to this edge hub to another",
    "start": "1850670",
    "end": "1855740"
  },
  {
    "text": "orchestration end point certainly the more work behind that is how do you",
    "start": "1855740",
    "end": "1861380"
  },
  {
    "text": "think the data and so on so that needs to be solved I think it's a completely solvable because as you can see we have",
    "start": "1861380",
    "end": "1868670"
  },
  {
    "text": "a channel there so while the channel's open you can actually have that data down and kept it as a backup and then",
    "start": "1868670",
    "end": "1875600"
  },
  {
    "text": "when it needs to switch you can just switching yeah so because all that",
    "start": "1875600",
    "end": "1890570"
  },
  {
    "text": "happens is we we're going to run the club called edge and the called the",
    "start": "1890570",
    "end": "1895730"
  },
  {
    "text": "called core is basically a channel pipeline controller that talks to kubernetes right so this this transition",
    "start": "1895730",
    "end": "1903680"
  },
  {
    "text": "should be pretty straightforward I mean it needs some work but it can be done",
    "start": "1903680",
    "end": "1909190"
  },
  {
    "text": "feature-wise needs wiring we haven't really get to the point to actually",
    "start": "1911380",
    "end": "1917120"
  },
  {
    "text": "implement this but architecture wise is it's there",
    "start": "1917120",
    "end": "1922360"
  },
  {
    "text": "Sam I OCN I I believe we support support",
    "start": "1929150",
    "end": "1936000"
  },
  {
    "text": "the standard the CMI but ah CNI I don't know the detailed version of that so the",
    "start": "1936000",
    "end": "1942570"
  },
  {
    "text": "question is what what's the CNI version right what type that we're support yeah",
    "start": "1942570",
    "end": "1951020"
  },
  {
    "text": "I've yeah",
    "start": "1951020",
    "end": "1956309"
  },
  {
    "start": "1955000",
    "end": "2064000"
  },
  {
    "text": "I've seen people actually yesterday I went to a talk there's a guy actually use a plan oh and I personally tried it",
    "start": "1956309",
    "end": "1962760"
  },
  {
    "text": "on AWS with AWS Network support so and there's a list of supports because these",
    "start": "1962760",
    "end": "1969480"
  },
  {
    "text": "things actually is part of kubernetes so well at least the - I tried they all",
    "start": "1969480",
    "end": "1975330"
  },
  {
    "text": "work so I would assume other things shouldn't be too hard yeah but I could be wrong so send me",
    "start": "1975330",
    "end": "1980730"
  },
  {
    "text": "information if you try something and found there's a problem",
    "start": "1980730",
    "end": "1985549"
  },
  {
    "text": "yes sure sure so the question is what",
    "start": "1992589",
    "end": "2000429"
  },
  {
    "text": "kind of load balancer you use internally if you drill down the code it actually uses another component called go chassis",
    "start": "2000429",
    "end": "2009009"
  },
  {
    "text": "that's a that's also a open source project you can find out on github go",
    "start": "2009009",
    "end": "2014709"
  },
  {
    "text": "chassis implements a couple of basic round-robin and other algorithm but this",
    "start": "2014709",
    "end": "2020709"
  },
  {
    "text": "part is basically pluggable we actually have plans to integrate with SEO so that",
    "start": "2020709",
    "end": "2029289"
  },
  {
    "text": "you could actually be controlled by your steel as well go chassis go - chassis",
    "start": "2029289",
    "end": "2038169"
  },
  {
    "text": "like a car chassis yeah",
    "start": "2038169",
    "end": "2041969"
  },
  {
    "text": "[Music] yeah yeah yeah yeah I I think",
    "start": "2053639",
    "end": "2066820"
  },
  {
    "start": "2064000",
    "end": "2152000"
  },
  {
    "text": "conceptually they're there they actually do very similar things where you sort of just have a saying very close by that",
    "start": "2066820",
    "end": "2073030"
  },
  {
    "text": "actually the actual work happens hundred miles away so we're looking to that I",
    "start": "2073030",
    "end": "2078690"
  },
  {
    "text": "think it's a possibility yeah can definitely work okay the question is how",
    "start": "2078690",
    "end": "2090280"
  },
  {
    "text": "do you keep the connecting connectivity between agent cloud so eat all the",
    "start": "2090280",
    "end": "2095710"
  },
  {
    "text": "connection are issued from edge because the network situation the best you can do is start a eggs external facing",
    "start": "2095710",
    "end": "2103800"
  },
  {
    "text": "outgoing connection right so we implement a WebSocket implementation for the connectivity or",
    "start": "2103800",
    "end": "2110530"
  },
  {
    "text": "quick both are there qu IC they're all they're both bi-directional so you can",
    "start": "2110530",
    "end": "2118420"
  },
  {
    "text": "you can pass on different message types or implement different protocols on it",
    "start": "2118420",
    "end": "2124530"
  },
  {
    "text": "yeah okay",
    "start": "2133610",
    "end": "2141860"
  },
  {
    "text": "yes yes",
    "start": "2145460",
    "end": "2149900"
  },
  {
    "start": "2152000",
    "end": "2404000"
  },
  {
    "text": "you're right conceptually a node is a very powerful device yeah so as a",
    "start": "2152470",
    "end": "2158930"
  },
  {
    "text": "modeling as a concept that's a that's a hierarchy we make them separate so",
    "start": "2158930",
    "end": "2166070"
  },
  {
    "text": "people are easily and understand this and work on this concept so because",
    "start": "2166070",
    "end": "2172940"
  },
  {
    "text": "often cases what you're dealing with is a compute module connecting to a bunch of sensors those are called devices and",
    "start": "2172940",
    "end": "2179540"
  },
  {
    "text": "they will be managing the state and retrieving data and processing them to",
    "start": "2179540",
    "end": "2185090"
  },
  {
    "text": "finish the business logic so you're right it logically that a node is a device yeah",
    "start": "2185090",
    "end": "2193690"
  },
  {
    "text": "[Music] okay okay okay I forgot if I repeated",
    "start": "2209610",
    "end": "2227190"
  },
  {
    "text": "the question the question is basically asking is compute itself that edge node itself a device the answer is yes and",
    "start": "2227190",
    "end": "2233849"
  },
  {
    "text": "then this gentleman further asking what's a better way to define or module",
    "start": "2233849",
    "end": "2239609"
  },
  {
    "text": "a compute right if it's you know object model type of design you would say",
    "start": "2239609",
    "end": "2245849"
  },
  {
    "text": "everything is a device to start right then smaller device or simple devices",
    "start": "2245849",
    "end": "2251040"
  },
  {
    "text": "would just have attributes and a couple of operations and a compute device would",
    "start": "2251040",
    "end": "2257220"
  },
  {
    "text": "then expand on the on its compute nature of things I would start from there and",
    "start": "2257220",
    "end": "2268010"
  },
  {
    "text": "it is the purpose of this to really unifying everything and talking one",
    "start": "2268010",
    "end": "2275070"
  },
  {
    "text": "tonne of like object wise as a device is that the goal okay",
    "start": "2275070",
    "end": "2284660"
  },
  {
    "text": "ah gotcha gotcha so currently it works",
    "start": "2292810",
    "end": "2305410"
  },
  {
    "text": "this way that's a--that's a really good question so it's about vicinity of your computer resource versus where the",
    "start": "2305410",
    "end": "2310780"
  },
  {
    "text": "device really is right so what we do is in current setup a device will actually",
    "start": "2310780",
    "end": "2316810"
  },
  {
    "text": "have a link reference back to which compute module it belongs to right but",
    "start": "2316810",
    "end": "2322000"
  },
  {
    "text": "then there certainly comes with the question of what if this computer module dies down and you can still access a",
    "start": "2322000",
    "end": "2327820"
  },
  {
    "text": "device through the network right so currently we would be pointing that pointer to another computer node and to",
    "start": "2327820",
    "end": "2334840"
  },
  {
    "text": "reach the the balance but similar thing can be done with the load balancing to",
    "start": "2334840",
    "end": "2341890"
  },
  {
    "text": "consider some of the vicinity factors to see let me choose the one that's closest",
    "start": "2341890",
    "end": "2348370"
  },
  {
    "text": "to me instead of calling a node a couple of hops away yes preference based on yeah distance or",
    "start": "2348370",
    "end": "2355000"
  },
  {
    "text": "something yeah thank you good point",
    "start": "2355000",
    "end": "2363670"
  },
  {
    "text": "crustiness is each node as edge is edge mesh within the node answer yes it's",
    "start": "2363670",
    "end": "2369730"
  },
  {
    "text": "different from the sidecar concept so we maintain a module so all these concepts",
    "start": "2369730",
    "end": "2374950"
  },
  {
    "text": "of the whole edge point is inside a note so it's edge mesh so they actually takes",
    "start": "2374950",
    "end": "2380920"
  },
  {
    "text": "hijacks all the traffic for that node and process from there",
    "start": "2380920",
    "end": "2387480"
  },
  {
    "text": "so here coming back to this chart you",
    "start": "2392760",
    "end": "2397830"
  },
  {
    "text": "would be you you would have the concept",
    "start": "2397830",
    "end": "2406620"
  },
  {
    "start": "2404000",
    "end": "2457000"
  },
  {
    "text": "of service and a service would group these parts together they would be able to tell this service runs on this one",
    "start": "2406620",
    "end": "2413670"
  },
  {
    "text": "two three parts on these one two three nodes and once you have that information what you're doing is actually finding",
    "start": "2413670",
    "end": "2420270"
  },
  {
    "text": "what's a service that is trying to call get the three nodes get the three parts and try to find the next one or the",
    "start": "2420270",
    "end": "2426390"
  },
  {
    "text": "proper one and send that hook that up yeah that does that make sense",
    "start": "2426390",
    "end": "2433970"
  },
  {
    "text": "no even for node to node in within the same subset we will just connect them",
    "start": "2439970",
    "end": "2446220"
  },
  {
    "text": "yeah well just do the channel and connect the two you know it'll be done yeah",
    "start": "2446220",
    "end": "2453200"
  },
  {
    "start": "2457000",
    "end": "2566000"
  },
  {
    "text": "oh I was I was explaining this this is module is a framework we use cut beehive",
    "start": "2457700",
    "end": "2465470"
  },
  {
    "text": "we have our own beehive that's a go channel based communication mechanism",
    "start": "2465470",
    "end": "2471710"
  },
  {
    "text": "the basic function block on that is a module so let's say I want to build a",
    "start": "2471710",
    "end": "2477829"
  },
  {
    "text": "hedge mesh I want to build a IP lookup or something each one will be defined as",
    "start": "2477829",
    "end": "2483470"
  },
  {
    "text": "a module and that module needs to implement these four interface and then",
    "start": "2483470",
    "end": "2489410"
  },
  {
    "text": "you can you can use it across the system to talk to other modules like here once",
    "start": "2489410",
    "end": "2494750"
  },
  {
    "text": "you've done that and you you just simply say send to HD which is yet another module and this is my information to",
    "start": "2494750",
    "end": "2502069"
  },
  {
    "text": "send to",
    "start": "2502069",
    "end": "2504430"
  },
  {
    "text": "yeah",
    "start": "2513680",
    "end": "2516680"
  },
  {
    "text": "yeah",
    "start": "2527930",
    "end": "2530930"
  },
  {
    "text": "okay so the question is how do you manage device lifecycle basically I",
    "start": "2537640",
    "end": "2546829"
  },
  {
    "text": "believe correct me if I'm wrong I believe we have the capability to do",
    "start": "2546829",
    "end": "2553699"
  },
  {
    "text": "that already because the there's a couple components in here first the mqtt protocol is push and pull but",
    "start": "2553699",
    "end": "2562150"
  },
  {
    "text": "inside inside edge core we also have a",
    "start": "2562150",
    "end": "2569509"
  },
  {
    "start": "2566000",
    "end": "2722000"
  },
  {
    "text": "device controller which actually subscribes to all this different topics",
    "start": "2569509",
    "end": "2575479"
  },
  {
    "text": "and the itself also holds a list of topics so it will constantly look for",
    "start": "2575479",
    "end": "2580910"
  },
  {
    "text": "information status change in everything and facilitate the information passing",
    "start": "2580910",
    "end": "2587539"
  },
  {
    "text": "either to the cloud or to the device so is there a aspect to you you're thinking",
    "start": "2587539",
    "end": "2594739"
  },
  {
    "text": "of",
    "start": "2594739",
    "end": "2597039"
  },
  {
    "text": "okay so status change of a resource needs to be reflected right yeah I think",
    "start": "2625180",
    "end": "2632710"
  },
  {
    "text": "that's that's what we do because on the kubernetes level all these objects with",
    "start": "2632710",
    "end": "2637960"
  },
  {
    "text": "list and watch you will be able to sense any of the status change right for other objects as well so I believe you can do",
    "start": "2637960",
    "end": "2646450"
  },
  {
    "text": "that this shouldn't be a problem similar thing if a pod falls out from a service",
    "start": "2646450",
    "end": "2652420"
  },
  {
    "text": "that should be noticed as well it should be sensed and pushed down from one node",
    "start": "2652420",
    "end": "2657640"
  },
  {
    "text": "to push push to kubernetes and then push down to all the rest of the nodes do we",
    "start": "2657640",
    "end": "2666270"
  },
  {
    "text": "still have time go ahead ah yeah in this",
    "start": "2666270",
    "end": "2675069"
  },
  {
    "text": "case bottom line all functionality continues even if a module or a pod",
    "start": "2675069",
    "end": "2683440"
  },
  {
    "text": "crashes you would still be able to use the local cache and metadata and the local cache the image to bring it back",
    "start": "2683440",
    "end": "2689470"
  },
  {
    "text": "up so that's the minimum so business will keep running and eventually we",
    "start": "2689470",
    "end": "2694809"
  },
  {
    "text": "would need you to come back or we have a component called edge site which is a",
    "start": "2694809",
    "end": "2701369"
  },
  {
    "text": "orchestration engine just like Kayseri yes you can run that and that'll give you the orchestration capability",
    "start": "2701369",
    "end": "2709109"
  },
  {
    "text": "potentially okay thank you guys",
    "start": "2713460",
    "end": "2720299"
  }
]