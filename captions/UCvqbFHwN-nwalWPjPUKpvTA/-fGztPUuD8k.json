[
  {
    "text": "welcome to CubeCon super excited if this is your first talk of the day of the conference um we're happy to kick it off",
    "start": "240",
    "end": "5440"
  },
  {
    "text": "for you um my my name is Kendall Rhoden i am a product manager at Diagrid previously was at Microsoft and has have",
    "start": "5440",
    "end": "11920"
  },
  {
    "text": "been working on the open source Dabber project for about four years now hi I'm",
    "start": "11920",
    "end": "16960"
  },
  {
    "text": "Meno i'm Clative Ambassador oh could you hear me now yeah hi everyone i'm Mat",
    "start": "16960",
    "end": "23680"
  },
  {
    "text": "Benoa i'm Clative Ambassador score maintainer and customer success engineer at humanity very glad and excited to be",
    "start": "23680",
    "end": "30640"
  },
  {
    "text": "here with you today awesome so today you've come to hear about mixing the perfect cocktail a little too early to",
    "start": "30640",
    "end": "36800"
  },
  {
    "text": "actually give you one unfortunately but we'll make sure that you have a good time today and learn a lot about Dapper",
    "start": "36800",
    "end": "43360"
  },
  {
    "text": "and Score so just want to set the context a little bit about the current state of the world as I know it and as",
    "start": "43360",
    "end": "50480"
  },
  {
    "text": "probably many of you know it as well right platform and infrastructure concerns have become progressively more",
    "start": "50480",
    "end": "56320"
  },
  {
    "text": "apparent to developers and bleed into the interloop development process right additional dependencies new libraries",
    "start": "56320",
    "end": "63199"
  },
  {
    "text": "new concerns that come when you break an application across the network and when you introduce largecale development you",
    "start": "63199",
    "end": "69680"
  },
  {
    "text": "have to start to find ways to help abstract away some of the complexity that's happening at the runtime and",
    "start": "69680",
    "end": "74960"
  },
  {
    "text": "infrastructure level from your developers so this is sort of just setting the scene of of where we are",
    "start": "74960",
    "end": "80880"
  },
  {
    "text": "today so depending on what messaging infrastructure you're using what databases you're using where you're",
    "start": "80880",
    "end": "86000"
  },
  {
    "text": "deploying your applications typically that's going to end up bleeding into your developers inner loop and slowing",
    "start": "86000",
    "end": "91360"
  },
  {
    "text": "down their productivity so for today's uh for today's talk um",
    "start": "91360",
    "end": "96799"
  },
  {
    "text": "Matt and I are Can I call you can I call you that is that okay yeah yeah uh we're going to be we're going to be uh playing two different roles um and these are two",
    "start": "96799",
    "end": "103600"
  },
  {
    "text": "roles that work very much together in the in the cloud native space and on most teams uh I'll be playing the role",
    "start": "103600",
    "end": "109680"
  },
  {
    "text": "of basically an application developer and ultimately uh let's say I'm a full stack developer and I care about being",
    "start": "109680",
    "end": "115360"
  },
  {
    "text": "productive i want to be able to build innovative applications quickly and I don't really care necessarily what the",
    "start": "115360",
    "end": "121119"
  },
  {
    "text": "underlying infrastructure is that I'm using i don't want to be rewriting common patterns i don't want to be",
    "start": "121119",
    "end": "126320"
  },
  {
    "text": "implementing complex resiliency logic i don't want to be rewriting stateful processes and workflows and actors when",
    "start": "126320",
    "end": "132640"
  },
  {
    "text": "those things already exist right i want to be enabled to be able to write code that actually provides value to the",
    "start": "132640",
    "end": "138319"
  },
  {
    "text": "business in which I am in um so yeah and then we have yeah and I'm a platform",
    "start": "138319",
    "end": "144000"
  },
  {
    "text": "engineer and I have a mandate with my team to build a platform an internal developer platform for my company right",
    "start": "144000",
    "end": "151280"
  },
  {
    "text": "the goal is to collaborate with cloud engineer network engineer security engineer with observability team and the",
    "start": "151280",
    "end": "158319"
  },
  {
    "text": "goal is to make sure we have standard we are standardizing template we are standardizing governance security and we",
    "start": "158319",
    "end": "166080"
  },
  {
    "text": "are going to have more automation the goal for this is better collaboration as",
    "start": "166080",
    "end": "171599"
  },
  {
    "text": "well as enabling the developer to focus on their productivity they want to ship",
    "start": "171599",
    "end": "177360"
  },
  {
    "text": "value to the business to the end user how we could help them and avoid what we call the quitive load how we could",
    "start": "177360",
    "end": "184080"
  },
  {
    "text": "reduce the friction for them to adopt the platform to use the platform also",
    "start": "184080",
    "end": "189680"
  },
  {
    "text": "we're going to be the first people to say developer productivity 300 times so get ready for it that's what we're all",
    "start": "189680",
    "end": "195040"
  },
  {
    "text": "here for right um so yeah and yeah um as platform engineer um again we have uh we",
    "start": "195040",
    "end": "202319"
  },
  {
    "text": "were looking for and we are looking for some framework and the CNCF platform working group have uh has um uh released",
    "start": "202319",
    "end": "210959"
  },
  {
    "text": "couple of white paper and framework that you could use and the first one on the left is about what about the building",
    "start": "210959",
    "end": "217799"
  },
  {
    "text": "blocks of my plat of my platform i'm building an internal developer platform but there is already existing tools",
    "start": "217799",
    "end": "224640"
  },
  {
    "text": "security observability how they connect to each other how the team and the processes are interacting with each",
    "start": "224640",
    "end": "230720"
  },
  {
    "text": "other so with that you will also focus on now could we deliver capabilities on",
    "start": "230720",
    "end": "236159"
  },
  {
    "text": "top of that that's what you could call seeing your platform as a product as well and based on that you could also uh",
    "start": "236159",
    "end": "243680"
  },
  {
    "text": "look at uh some friction some pain point some rooms for improvement and that's",
    "start": "243680",
    "end": "249519"
  },
  {
    "text": "where the maturity model is very interesting because you could see where you fit and on what you want to focus",
    "start": "249519",
    "end": "256239"
  },
  {
    "text": "and today we want to focus on the interface interfaces is between the",
    "start": "256239",
    "end": "261919"
  },
  {
    "text": "developer and the platform right and Dapper and score um are very a good fit",
    "start": "261919",
    "end": "267120"
  },
  {
    "text": "for that and we will demonstrate that today so the question then becomes and can you all still hear me okay in the back okay",
    "start": "267120",
    "end": "274080"
  },
  {
    "text": "perfect i just wanted to make sure so Dapper and Score both have ways in which they enable developers and platform",
    "start": "274080",
    "end": "280479"
  },
  {
    "text": "teams to work together through this concept of standard interfaces so if we focus on the developer uh perspective",
    "start": "280479",
    "end": "287040"
  },
  {
    "text": "Dapper essentially provides a set of APIs and SDKs that developers can use to consume the underlying capabilities of",
    "start": "287040",
    "end": "293680"
  },
  {
    "text": "the platform in the same way developers can author score specifications to essentially um claim and or tell the the",
    "start": "293680",
    "end": "302479"
  },
  {
    "text": "platform what it needs what dependencies its application has without having to understand how that's actually going to",
    "start": "302479",
    "end": "308800"
  },
  {
    "text": "be implemented on the back end so when we bring the platform capabilities into the picture there are also interfaces",
    "start": "308800",
    "end": "315280"
  },
  {
    "text": "that these uh projects provide that are focused more on standardization at the platform level so how do how do I as a",
    "start": "315280",
    "end": "322080"
  },
  {
    "text": "platform engineer actually expose the capabilities that are then consumed by",
    "start": "322080",
    "end": "327280"
  },
  {
    "text": "um the developerf facing interfaces and that's where you get into things like Dapper components the control plane",
    "start": "327280",
    "end": "332400"
  },
  {
    "text": "things like that and the score implementations um and the these might be abstract concepts if you don't know",
    "start": "332400",
    "end": "337440"
  },
  {
    "text": "what Dapper and Score are but luckily that's what you're here for today is we're going to dive into these um primitives and explain how they all fit",
    "start": "337440",
    "end": "345000"
  },
  {
    "text": "together so who's excited we're about to get into some code we love that yay okay",
    "start": "345000",
    "end": "350080"
  },
  {
    "text": "great so um I just wanted to give a quick Dapper overview if you're new to Dapper how many of you have heard of the",
    "start": "350080",
    "end": "356320"
  },
  {
    "text": "Dapper project before okay wow love that that's great uh so Dapper is actually a",
    "start": "356320",
    "end": "362400"
  },
  {
    "text": "graduated CNCF project which is super exciting we graduated right around the time of CubeCon uh over in Utah last",
    "start": "362400",
    "end": "368800"
  },
  {
    "text": "year and ultimately what Dapper provides and how it runs is it's a sidecar model so it's traditionally deployed onto a",
    "start": "368800",
    "end": "375440"
  },
  {
    "text": "Kubernetes cluster injected into application pods and it essentially exposes a set of standard APIs that",
    "start": "375440",
    "end": "382479"
  },
  {
    "text": "developers can use to build microservices applications without having to uh concern themselves with",
    "start": "382479",
    "end": "388160"
  },
  {
    "text": "rewriting common patterns and uh and architecture styles so this can be everything from service invocation with",
    "start": "388160",
    "end": "394160"
  },
  {
    "text": "MTLS similar to a service mesh um it provides things like abstracted state management you can do publish subscribe",
    "start": "394160",
    "end": "400400"
  },
  {
    "text": "mechanisms you can build uh large scale stateful workflows using the the Dapper sidecar so that's just what I wanted to",
    "start": "400400",
    "end": "406880"
  },
  {
    "text": "call out right and and all those APIs are essentially that uh developer interface and then the underlying",
    "start": "406880",
    "end": "412319"
  },
  {
    "text": "platform teams can actually configure those APIs to reach out to various infrastructure services and so that's",
    "start": "412319",
    "end": "418560"
  },
  {
    "text": "really uh more on that platform capability layer so if let's say we're",
    "start": "418560",
    "end": "423759"
  },
  {
    "text": "standardizing on Dapper let's just talk from a developer perspective so I'm authoring my applications locally as",
    "start": "423759",
    "end": "429840"
  },
  {
    "text": "most developers do and here we can see on on the slide a large image of basically just like a basic uh Reddus",
    "start": "429840",
    "end": "436240"
  },
  {
    "text": "implementation right i'm using uh the Reddus client i'm making a call storing a key value pair and then ultimately I'm",
    "start": "436240",
    "end": "443199"
  },
  {
    "text": "going to to read that right so we can see here I'm taking a dependency on Reddus maybe not that big of a deal if",
    "start": "443199",
    "end": "448800"
  },
  {
    "text": "it's uh you know you're writing one simple project but if you think about the number of dependencies that your de developers continue to take on um on",
    "start": "448800",
    "end": "456639"
  },
  {
    "text": "explicit infrastructure services and this could also be things like libraries for resiliency and other things right as",
    "start": "456639",
    "end": "462400"
  },
  {
    "text": "you're distributing your applications more and more concerns uh you have to build your application to be fault",
    "start": "462400",
    "end": "467520"
  },
  {
    "text": "tolerant so all of this bleeds into the application code which once again for a small application might be okay but that",
    "start": "467520",
    "end": "473599"
  },
  {
    "text": "tight coupling is not always very valuable um when you're trying to standardize so let's swap that out so",
    "start": "473599",
    "end": "479280"
  },
  {
    "text": "now we're taking a look at what it looks like to use the Dapper SDK to accomplish a similar objective so here we can say",
    "start": "479280",
    "end": "485199"
  },
  {
    "text": "see there's no Reddus um there's no specific infrastructure logic we just see we're importing the Dapper client",
    "start": "485199",
    "end": "491199"
  },
  {
    "text": "and then we're ultimately saving state now the unique part of this which Matt will explain here in just a second is",
    "start": "491199",
    "end": "497120"
  },
  {
    "text": "that you can see I'm using the client to save state and I'm passing in this concept of a state store name um what",
    "start": "497120",
    "end": "502479"
  },
  {
    "text": "does that state store actually mean i as as a developer might not really care right i want to store a key value pair i",
    "start": "502479",
    "end": "508560"
  },
  {
    "text": "don't really care necessarily where that's being stored as long as I know it's secure and that's really not my job to have to worry about hopefully right",
    "start": "508560",
    "end": "514800"
  },
  {
    "text": "if we're focused on enabling developers to offload some of the security and infrastructure concerns to a lower level",
    "start": "514800",
    "end": "521200"
  },
  {
    "text": "right not the reality of today always but it's something that we're trying to accomplish right so you want to explain",
    "start": "521200",
    "end": "527519"
  },
  {
    "text": "this a little bit more and that's where you could see the very first point where",
    "start": "527519",
    "end": "532640"
  },
  {
    "text": "Dapper uh with the notion of Dapper component is helping us we want this",
    "start": "532640",
    "end": "538080"
  },
  {
    "text": "streamline seamless integration between hey I'm talking to a state store is it radius radius locally in Azure is it a",
    "start": "538080",
    "end": "545600"
  },
  {
    "text": "posgress database so here as platform engineer I have the ability to author some recipe some component and the",
    "start": "545600",
    "end": "552959"
  },
  {
    "text": "developer won't change anything on their code they just reach a state store whatever the technical implementation is",
    "start": "552959",
    "end": "559440"
  },
  {
    "text": "awesome so these components are loaded at runtime by the Dapper sidecards that are running and they can be scoped they",
    "start": "559440",
    "end": "566320"
  },
  {
    "text": "can be governed Um so there's a lot of additional capabilities that I'd love to talk to you about after the session so",
    "start": "566320",
    "end": "571920"
  },
  {
    "text": "now that the uh you know I've written my code I have my components available this is where I really get into actually",
    "start": "571920",
    "end": "577600"
  },
  {
    "text": "running the code locally right some kind of interloop development and this is going to look different for every developer um if you're a print line",
    "start": "577600",
    "end": "584000"
  },
  {
    "text": "person a debugger person we can talk about that later this is something we've been talking about this week on my team",
    "start": "584000",
    "end": "589279"
  },
  {
    "text": "uh but ultimately I'm going to do a Dapper init which is essentially going to install uh Dapper onto my local",
    "start": "589279",
    "end": "594959"
  },
  {
    "text": "machine and it's going to make use of Docker to actually give me a few control plane services which are used in order",
    "start": "594959",
    "end": "600800"
  },
  {
    "text": "to facilitate the inter loop so for example I have an actor placement that will run as a container i have auler",
    "start": "600800",
    "end": "606399"
  },
  {
    "text": "which is going to help me manage stateful workflows when I'm doing local development and then I also get a couple things out of the box i get Zipkin for",
    "start": "606399",
    "end": "612640"
  },
  {
    "text": "tracing so that I can immediately see all of the open telemetry traces being sent across my local services and I also",
    "start": "612640",
    "end": "618560"
  },
  {
    "text": "get a default Reddus instance which I can use for a default component implementation so I start publishing",
    "start": "618560",
    "end": "624160"
  },
  {
    "text": "messages it can use a default uh docker container on my machine and then ultimately once I've initialized my",
    "start": "624160",
    "end": "630160"
  },
  {
    "text": "machine I'm going to do a Dapper run what this Dapper run is going to do is essentially it's going to run all of my",
    "start": "630160",
    "end": "635600"
  },
  {
    "text": "applications locally using the application commands and the appropriate ports and it's also going to launch a",
    "start": "635600",
    "end": "641040"
  },
  {
    "text": "sidecar process which acts as the Dapper intermediary layer right so those sidecars aren't actually running",
    "start": "641040",
    "end": "646399"
  },
  {
    "text": "containerized on my local machine they're just a sidecar process awesome so now we're going to",
    "start": "646399",
    "end": "653360"
  },
  {
    "text": "get into an actual example of some Dapper code i'll be um quick and brief but hopefully it will be a good",
    "start": "653360",
    "end": "659760"
  },
  {
    "text": "explanation for you i hope the screen's not too blurry um but basically it's going to be an order process workflow",
    "start": "659760",
    "end": "665200"
  },
  {
    "text": "nothing super crazy um basically we're going to submit an order that order is going to kick off a Dapper workflow um",
    "start": "665200",
    "end": "671680"
  },
  {
    "text": "it's going to do a few things it's it's going to reserve inventory using a uh a Dapper state store API it's going to",
    "start": "671680",
    "end": "677680"
  },
  {
    "text": "essentially determine if the order is over $1,000 and if so it's going to wait for approval um which is just another",
    "start": "677680",
    "end": "683920"
  },
  {
    "text": "function of the the Dapper workflow implementation if I give approval or if it's under $1,000 we're going to process",
    "start": "683920",
    "end": "689839"
  },
  {
    "text": "payment we're going to process shipping and then ultimately depending on the outcome we're going to complete the workflow sound good sweet",
    "start": "689839",
    "end": "699000"
  },
  {
    "text": "okay I'm gonna make sure this is zoomed in pretty well perfect",
    "start": "703760",
    "end": "709680"
  },
  {
    "text": "let me close these out can everyone see my screen okay how's",
    "start": "709680",
    "end": "715680"
  },
  {
    "text": "the How's the text size perfect good okay so I am not um I'm not bold enough",
    "start": "715680",
    "end": "723440"
  },
  {
    "text": "to do a to do a Dapper initialization right here because I don't trust the Wi-Fi so I have already done Dapper init",
    "start": "723440",
    "end": "729760"
  },
  {
    "text": "on my machine uh so I just want to clarify this is exactly what I said we're going to do a Dapper init um right",
    "start": "729760",
    "end": "735519"
  },
  {
    "text": "now it's not allowing me to do that because it already exists right so if I do a Dapper uninstall it will remove all",
    "start": "735519",
    "end": "740560"
  },
  {
    "text": "those control plane components it will basically remove the runtime from my machine and then I do a Dapper init and",
    "start": "740560",
    "end": "746000"
  },
  {
    "text": "it gives me everything we mentioned so we can do a quick docker ps and let me close that out if we do a docker ps and",
    "start": "746000",
    "end": "752639"
  },
  {
    "text": "we basically just script for the the dapper containers what you'll see is exactly what I just mentioned right we",
    "start": "752639",
    "end": "758480"
  },
  {
    "text": "see that reddus instance we see the placement service we see the scheduleuler just wanted you to know that they are there and then ultimately",
    "start": "758480",
    "end": "765279"
  },
  {
    "text": "from there I'm going to do a dapper run so let me confirm yeah let's go ahead and close that out clear this",
    "start": "765279",
    "end": "771560"
  },
  {
    "text": "out so I'm going to do a dapper run and this dapper run is using the yaml",
    "start": "771560",
    "end": "776920"
  },
  {
    "text": "manifest that's in my repository and I'm very zoomed zoomed in because I want",
    "start": "776920",
    "end": "782000"
  },
  {
    "text": "y'all to be able to see but I'll just zoom out for one second this is that Dapper Yaml file I was mentioning so",
    "start": "782000",
    "end": "787519"
  },
  {
    "text": "this is going and launching that workflow that workflow is coordinating multiple calls across other services",
    "start": "787519",
    "end": "792560"
  },
  {
    "text": "it's calling to a payment service it's calling to the shipping service and ultimately now everything is up and",
    "start": "792560",
    "end": "797600"
  },
  {
    "text": "running we can see in this output the blue output is my application runtime essentially logging and then the white",
    "start": "797600",
    "end": "803600"
  },
  {
    "text": "is all of the Dapper sidecar logs letting me know that the app ID is up and running and the sidecar is ready to",
    "start": "803600",
    "end": "808800"
  },
  {
    "text": "go so before I get into a quick code tour I",
    "start": "808800",
    "end": "814000"
  },
  {
    "text": "do want to show you just like a running a running workflow so the first thing I'm going to do is I'm going to get the",
    "start": "814000",
    "end": "819839"
  },
  {
    "text": "current inventory this is using the Dapper API uh for states you can see",
    "start": "819839",
    "end": "824880"
  },
  {
    "text": "right now we have no inventory available and I just want to confirm that to you in for you in Reddus right so I told you",
    "start": "824880",
    "end": "830880"
  },
  {
    "text": "I'm using a local Reddus component it's hooked up on my local machine it's running in Docker so I haven't stored",
    "start": "830880",
    "end": "836959"
  },
  {
    "text": "any data what I'm going to do I'm going to make an API call to my application to restock inventory under the scenes this",
    "start": "836959",
    "end": "843040"
  },
  {
    "text": "is using the Dapper API to go save that key value pair and then if I refresh my",
    "start": "843040",
    "end": "848240"
  },
  {
    "text": "screen here we should see that we now have our inventory items right so like I said code doesn't have any Reddus in it",
    "start": "848240",
    "end": "854880"
  },
  {
    "text": "we're going to see that in just a second but we now have inventory that we can essentially use as part of this order",
    "start": "854880",
    "end": "860680"
  },
  {
    "text": "process so now what I'm going to do is I'm going to submit a simple order what this is going to do it's going to call a",
    "start": "860680",
    "end": "866079"
  },
  {
    "text": "controller method that controller method is essentially going to start a workflow using the Dapper workflow SDK which you'll see in just one moment and I just",
    "start": "866079",
    "end": "873360"
  },
  {
    "text": "wanted to kind of show you this so we could actually get a demonstration of the workflow running end to end so let",
    "start": "873360",
    "end": "878880"
  },
  {
    "text": "me pull back up so you see here I have a UI in this",
    "start": "878880",
    "end": "884720"
  },
  {
    "text": "service i have a notification service that's subscribing to every activity within the workflow so whenever a",
    "start": "884720",
    "end": "890079"
  },
  {
    "text": "workflow processes payment when a workflow starts so you can see here I kicked off the workflow and I subscribed",
    "start": "890079",
    "end": "895839"
  },
  {
    "text": "and received all of these messages using uh the Dapper PubSub API so now I want",
    "start": "895839",
    "end": "900959"
  },
  {
    "text": "us to walk a little bit into the code itself so everything's up and running still good to go so let me just switch",
    "start": "900959",
    "end": "906800"
  },
  {
    "text": "over here and I'm going to do a quick code tour",
    "start": "906800",
    "end": "912079"
  },
  {
    "text": "so the first thing I want us to do is take a look at the workflow code so let's close all this out create less",
    "start": "912120",
    "end": "919279"
  },
  {
    "text": "noise for you and then we're going to zoom in so you can see on line 25 here this is where I'm importing the uh",
    "start": "919279",
    "end": "925279"
  },
  {
    "text": "Dapper clients so I have my Dapper client to make pub sub calls to make service invocation calls to save state",
    "start": "925279",
    "end": "931519"
  },
  {
    "text": "and then I also import the Dapper workflow SDK what this is doing by the way when the sidecar comes up is it's",
    "start": "931519",
    "end": "937920"
  },
  {
    "text": "establishing a gRPC stream from the application to the sidecar and there's a constant gRPC stream that's sending the",
    "start": "937920",
    "end": "944720"
  },
  {
    "text": "work items to and from that uh that sidecar which is hosting the runtime so the the workflow runtime so after we",
    "start": "944720",
    "end": "952639"
  },
  {
    "text": "have um imported Dapper which is great we also have to register our workflow so",
    "start": "952639",
    "end": "957680"
  },
  {
    "text": "I'm basically going to start the workflow runtime i'm going to register my workflow and all of the activities it should have access to and then I'm going",
    "start": "957680",
    "end": "963759"
  },
  {
    "text": "to start the workflow runtime and that's what's really managing that gRPC stream and making sure that the activities that",
    "start": "963759",
    "end": "969360"
  },
  {
    "text": "need to be executing as part of this workflow are occurring so after I've done that let's",
    "start": "969360",
    "end": "974639"
  },
  {
    "text": "take a look at the actual workflow definition can you all see the screen okay is it kind of zoomed in enough where you can read it perfect uh so we",
    "start": "974639",
    "end": "981279"
  },
  {
    "text": "see we have a process uh process order workflow i'm not going to go through every step we talked about it",
    "start": "981279",
    "end": "986320"
  },
  {
    "text": "conceptually the big thing is that workflows don't actually do any computation or processing right they",
    "start": "986320",
    "end": "991600"
  },
  {
    "text": "actually out offload that to activities so the main idea of the workflow is that it creates the structure in which things",
    "start": "991600",
    "end": "998240"
  },
  {
    "text": "are executed and then ultimately the activities are actually doing the processing making external requests so",
    "start": "998240",
    "end": "1003600"
  },
  {
    "text": "on and so forth so let's just take a look at um two things i want you to look at two things so the first one is the",
    "start": "1003600",
    "end": "1009519"
  },
  {
    "text": "notify activity that's what's publishing the messages you saw on the UI and then we have the inventory activity down here",
    "start": "1009519",
    "end": "1016720"
  },
  {
    "text": "where we're basically going in and saying let's right here line 75 you can see we're",
    "start": "1016720",
    "end": "1024400"
  },
  {
    "text": "reserving inventory so we're going to look into those two activities and then we will pass it over to Matt to get into",
    "start": "1024400",
    "end": "1030959"
  },
  {
    "text": "uh score goodness so let's take a quick look at these activities so the first",
    "start": "1030959",
    "end": "1037918"
  },
  {
    "text": "activity we're going to look at is the notify activity i want you to consider has anybody implemented any kind of",
    "start": "1037919",
    "end": "1043918"
  },
  {
    "text": "message broker or message streaming perfect great fun complicated",
    "start": "1043919",
    "end": "1050640"
  },
  {
    "text": "involved yes so if you can see here yes this is a basic demo but you can see I",
    "start": "1050640",
    "end": "1055919"
  },
  {
    "text": "can use a Dapper client to publish an event dapper supports over I believe 20 25 different pub sub brokers that can",
    "start": "1055919",
    "end": "1062720"
  },
  {
    "text": "all be communicated with and configured using components um behind the scenes but the code stays the same so I just",
    "start": "1062720",
    "end": "1068240"
  },
  {
    "text": "want to publish a message and I want to use any given number of infrastructure providers dapper is going to handle that",
    "start": "1068240",
    "end": "1073600"
  },
  {
    "text": "for me on the back end all I have to do is publish a message and once again tell it what the name of the component is that I want to use um after we take a",
    "start": "1073600",
    "end": "1081440"
  },
  {
    "text": "look at this I want to actually show you here how this is working right so this",
    "start": "1081440",
    "end": "1087039"
  },
  {
    "text": "works because we set up this component so I'm saying I want you to go talk to Reddus you don't have to put it directly",
    "start": "1087039",
    "end": "1092559"
  },
  {
    "text": "in the code i'm using the component here and then we also have a subscription and what you'll notice is in Dapper there's",
    "start": "1092559",
    "end": "1099280"
  },
  {
    "text": "multiple ways to do subscriptions declarative streaming um uh code first but you can see it's referencing that",
    "start": "1099280",
    "end": "1105600"
  },
  {
    "text": "pub sub component so I'm basically saying I want to subscribe my app to the pub sub component called pub and then",
    "start": "1105600",
    "end": "1112080"
  },
  {
    "text": "last but not least we can see where that message is getting delivered to the UI so we can see hey I'm receiving the uh",
    "start": "1112080",
    "end": "1119039"
  },
  {
    "text": "the messages that are being published because I'm subscribing and I'm going to display those to to the end",
    "start": "1119039",
    "end": "1124440"
  },
  {
    "text": "user um another quick look at Dapper usage is uh basically in this case we're",
    "start": "1124440",
    "end": "1130640"
  },
  {
    "text": "making an invocation request so we're actually going out and invoking a secondary service another micros service",
    "start": "1130640",
    "end": "1136000"
  },
  {
    "text": "using Dapper you get MTLS out of the box with this you can set access control list um so it's really a powerful uh API",
    "start": "1136000",
    "end": "1143600"
  },
  {
    "text": "so you can see here we're invoking a method called inventory on the uh or excuse me on the app called inventory on",
    "start": "1143600",
    "end": "1150000"
  },
  {
    "text": "the inventory reserve endpoint and then last thing I wanted to do is just show you what that endpoint actually looks",
    "start": "1150000",
    "end": "1155919"
  },
  {
    "text": "like and you can see here we're using the state API to get state um or to save",
    "start": "1155919",
    "end": "1161360"
  },
  {
    "text": "state so once again very very much a standard API surface when you're using",
    "start": "1161360",
    "end": "1166640"
  },
  {
    "text": "Dapper across your applications so perfect now I'm going to switch back",
    "start": "1166640",
    "end": "1171919"
  },
  {
    "text": "over to these slides here i think we're doing fairly good on time so let me play",
    "start": "1171919",
    "end": "1177919"
  },
  {
    "text": "from current slide so this is great like we've seen Dapper can be very powerful it has really um powerful programming",
    "start": "1177919",
    "end": "1184880"
  },
  {
    "text": "models however there are some challenges like I did Dapper run on my local machine but how do I get this into uh",
    "start": "1184880",
    "end": "1191280"
  },
  {
    "text": "like a containerized version right how do I go deploy this into staging or production how do I actually take this",
    "start": "1191280",
    "end": "1196720"
  },
  {
    "text": "into Kubernetes right i'm not just going to go deploy my Dapper run file i need Kubernetes manifests and so this becomes",
    "start": "1196720",
    "end": "1202799"
  },
  {
    "text": "a problem that typically developers are now having to face right running local Kubernetes clusters or trying to figure",
    "start": "1202799",
    "end": "1208000"
  },
  {
    "text": "out how to hobble together dependencies in Docker Compose for testing purposes um and so that's really where uh where",
    "start": "1208000",
    "end": "1214880"
  },
  {
    "text": "I'm struggling from a development perspective is how do I now go from inner loop to the next to the next level",
    "start": "1214880",
    "end": "1220240"
  },
  {
    "text": "and I think we have an idea in my in my team so as platform engineer um uh what",
    "start": "1220240",
    "end": "1225600"
  },
  {
    "text": "we have is we have now the developer empowered to deliver value to um to the",
    "start": "1225600",
    "end": "1231200"
  },
  {
    "text": "business right now how we graduate how we promote how we deploy via CI/CD",
    "start": "1231200",
    "end": "1236960"
  },
  {
    "text": "pipeline maybe in development environment staging production so we want now to um to help the developer to",
    "start": "1236960",
    "end": "1244640"
  },
  {
    "text": "deliver value concretely at the at the business right and also we want to avoid the hey it works at my machine how it",
    "start": "1244640",
    "end": "1252240"
  },
  {
    "text": "will why why it's not working in production for example or in dev or staging so we want to collaborate closer",
    "start": "1252240",
    "end": "1258320"
  },
  {
    "text": "with uh this dapper component and this integration um and again we want to do",
    "start": "1258320",
    "end": "1263520"
  },
  {
    "text": "some uh recipes to automate more so here the goal is to say yeah you want to go",
    "start": "1263520",
    "end": "1268960"
  },
  {
    "text": "in production our platform is hosted on Kubernetes so you will need to have a docker file maybe uh then you",
    "start": "1268960",
    "end": "1276400"
  },
  {
    "text": "will have the um um the CI/CD pipeline maybe you want to do some docker command",
    "start": "1276400",
    "end": "1281520"
  },
  {
    "text": "to run the container to test the container to deploy it then you will have the maybe a compost file in order",
    "start": "1281520",
    "end": "1287360"
  },
  {
    "text": "to integrate some component and database and pubsub uh and the different component talking to each other and then",
    "start": "1287360",
    "end": "1294240"
  },
  {
    "text": "you may want to alter some Kubernetes manifest how they could provide information to in order to deploy that",
    "start": "1294240",
    "end": "1301200"
  },
  {
    "text": "in a Kubernetes uh cluster so here enters score score has two concept the",
    "start": "1301200",
    "end": "1307280"
  },
  {
    "text": "first one is the score specification that's where the developer will focus on",
    "start": "1307280",
    "end": "1312880"
  },
  {
    "text": "describing the intent to deploy their workload or their workloads right and",
    "start": "1312880",
    "end": "1318240"
  },
  {
    "text": "they will describe hey I need a dependency i need a state store please right and I will show you an example",
    "start": "1318240",
    "end": "1323760"
  },
  {
    "text": "very quickly the second aspect of score is the concrete implementation from this very um um workload specification file",
    "start": "1323760",
    "end": "1332720"
  },
  {
    "text": "which is agnostic to the platform agnostic to the environment development staging or prod now how I concretely",
    "start": "1332720",
    "end": "1338799"
  },
  {
    "text": "implement how I deploy this request um so here come the score implementations",
    "start": "1338799",
    "end": "1345200"
  },
  {
    "text": "uh some of them could be docker compose um as a target runtime kubernetes fly.io",
    "start": "1345200",
    "end": "1351760"
  },
  {
    "text": "human and others and I have also the opportunity as platform engineer to author",
    "start": "1351760",
    "end": "1358039"
  },
  {
    "text": "recipes for posgress uh SQL database radius name it is it local on",
    "start": "1358039",
    "end": "1364080"
  },
  {
    "text": "docker is it local in kubernetes is it in Azure in GCP i will be able to author",
    "start": "1364080",
    "end": "1369120"
  },
  {
    "text": "this kind of recipes and having this uh notion of standardization on the right",
    "start": "1369120",
    "end": "1374720"
  },
  {
    "text": "but also the abstraction on the left so if I'm a developer and like I said I",
    "start": "1374720",
    "end": "1380960"
  },
  {
    "text": "have this challenge i want to be able to get my workload somewhere where it has the dependencies it needs but I need to",
    "start": "1380960",
    "end": "1386080"
  },
  {
    "text": "graduate from my local development machine i don't really want to have to worry about Docker Compose i don't really want to have to worry about",
    "start": "1386080",
    "end": "1391600"
  },
  {
    "text": "Docker files i don't necessarily want to learn Kubernetes so instead what I can do is essentially author this score file",
    "start": "1391600",
    "end": "1397120"
  },
  {
    "text": "looks probably pretty familiar it looks like a Dapper YAML it looks a little bit like Kubernetes YL but it's very",
    "start": "1397120",
    "end": "1402159"
  },
  {
    "text": "succinct it's very clear in terms of what the developer needs and you can see here I'm basically asking for a resource",
    "start": "1402159",
    "end": "1408080"
  },
  {
    "text": "right i want a Dapper state store i don't really care how I get it i just want one that's what my app needs and",
    "start": "1408080",
    "end": "1413440"
  },
  {
    "text": "here again as platform engineer I will support the developer with an implementation a concrete implementation",
    "start": "1413440",
    "end": "1419760"
  },
  {
    "text": "and here we agreed that hey let's do the first implementation and use the first implementation with Docker Compose so",
    "start": "1419760",
    "end": "1426159"
  },
  {
    "text": "here it's a recipe to to inject the sidecar container the placement container all of what Dapper needs in",
    "start": "1426159",
    "end": "1433440"
  },
  {
    "text": "order to successfully run their application as developer so that's the implementation part and I mentioned the",
    "start": "1433440",
    "end": "1439760"
  },
  {
    "text": "resource provisioner how concretely I will provision radius as a container how",
    "start": "1439760",
    "end": "1444960"
  },
  {
    "text": "I will inject the component associated to that so here I won't go too much in detail but that's how you will author",
    "start": "1444960",
    "end": "1450400"
  },
  {
    "text": "your recipes as platform engineer and then the workflow is score composing it",
    "start": "1450400",
    "end": "1456159"
  },
  {
    "text": "in this case it could be score kubernetes there is another implementation and you init your current",
    "start": "1456159",
    "end": "1461840"
  },
  {
    "text": "state current local uh machine and you do score compose generate on the score",
    "start": "1461840",
    "end": "1467039"
  },
  {
    "text": "file and guess what with the targeted implementation score compose it will generate the compost file so now I could",
    "start": "1467039",
    "end": "1473919"
  },
  {
    "text": "run the third command here docker compose hub and now I have all my container built and run successfully",
    "start": "1473919",
    "end": "1480880"
  },
  {
    "text": "locally and I could test my uh application so let's do the demo here yeah I can talk to the slide well",
    "start": "1480880",
    "end": "1489559"
  },
  {
    "text": "so ultimately what we're going to show now is going to be a little bit of what I did but we're now graduating",
    "start": "1490240",
    "end": "1495679"
  },
  {
    "text": "environments so as we talked about you can swap Dapper components which is really nice um what Matt's going to show",
    "start": "1495679",
    "end": "1501200"
  },
  {
    "text": "us is how essentially without having to author any Docker Compose we can take that same application we can take those",
    "start": "1501200",
    "end": "1507279"
  },
  {
    "text": "score files and essentially run them in Docker Compose with two Reddus instances for PubSub and state and then we're",
    "start": "1507279",
    "end": "1513120"
  },
  {
    "text": "ultimately going to use those exact same um score specifications from a user perspective to run that workflow uh that",
    "start": "1513120",
    "end": "1519200"
  },
  {
    "text": "workload and workflow on Kubernetes but then we're going to swap out the components so a user is going to get",
    "start": "1519200",
    "end": "1525039"
  },
  {
    "text": "Postgress um for example in in the staging environment instead of getting a Reddus local instance but the developer",
    "start": "1525039",
    "end": "1532080"
  },
  {
    "text": "code and the developer specification doesn't change at all so Matt I'll hand it over to you wonderful so what I want",
    "start": "1532080",
    "end": "1537679"
  },
  {
    "text": "to show you here is uh very much the um the score file the first course score",
    "start": "1537679",
    "end": "1543760"
  },
  {
    "text": "file that you want maybe is with the notification workload you remember the five microservices that Kendall uh",
    "start": "1543760",
    "end": "1550400"
  },
  {
    "text": "showed you that's a score file i will be able to describe the intent of uh and",
    "start": "1550400",
    "end": "1556000"
  },
  {
    "text": "the metadata the information for my workload the port it will run on but look at this i'm also asking for",
    "start": "1556000",
    "end": "1561919"
  },
  {
    "text": "resources and the resources we could see here is for example I want to subscribe",
    "start": "1561919",
    "end": "1567360"
  },
  {
    "text": "to a pubsub right and now what I want to show you is another example with the",
    "start": "1567360",
    "end": "1572600"
  },
  {
    "text": "inventory same I'm describing the intent of deploying my workload inventory on another port and here I will have this",
    "start": "1572600",
    "end": "1580559"
  },
  {
    "text": "uh dapper state store and I ask for a state store right so that's on a",
    "start": "1580559",
    "end": "1586640"
  },
  {
    "text": "developer perspective now what I want to show you is kind of the workflow very quickly with score compose so again",
    "start": "1586640",
    "end": "1593440"
  },
  {
    "text": "please generate the compost file based on all the score file right and with the",
    "start": "1593440",
    "end": "1599200"
  },
  {
    "text": "implementation provided by the platform engineer the developer will be able to generate that seamlessly it's abstracted",
    "start": "1599200",
    "end": "1604880"
  },
  {
    "text": "but guess what now I have now a very complex compos file so here with this",
    "start": "1604880",
    "end": "1610960"
  },
  {
    "text": "core implementation core compose I'm not asking my developer at scale to write",
    "start": "1610960",
    "end": "1617919"
  },
  {
    "text": "300 of line of docker compose and know the technical detail about radius database state store component and all",
    "start": "1617919",
    "end": "1624720"
  },
  {
    "text": "the relationship between the workload so here again it's generated abstracted and",
    "start": "1624720",
    "end": "1630600"
  },
  {
    "text": "then we could do docker compose up and I have all the container running and now I",
    "start": "1630600",
    "end": "1637039"
  },
  {
    "text": "could check that I have two radius database one for the state store and one for the pupsub that's the default",
    "start": "1637039",
    "end": "1642919"
  },
  {
    "text": "setup now what I want to show you very quickly is I could open the notification",
    "start": "1642919",
    "end": "1648159"
  },
  {
    "text": "page I'm running on docker and now I'm deployed via score file and score right",
    "start": "1648159",
    "end": "1654080"
  },
  {
    "text": "here what I want is generating traffic so I'm locally all the docker are running and I'm generating traffic to",
    "start": "1654080",
    "end": "1660559"
  },
  {
    "text": "the notification and talking to two radius database right so that's the",
    "start": "1660559",
    "end": "1666000"
  },
  {
    "text": "first uh step right again as a developer I don't know the technical detail i'm",
    "start": "1666000",
    "end": "1671320"
  },
  {
    "text": "just deploying my um scarf file the second part of the demo is let's move on",
    "start": "1671320",
    "end": "1678320"
  },
  {
    "text": "in the CI/CD pipeline right i want to push to development staging and production it will go throughout a CI/CD",
    "start": "1678320",
    "end": "1686320"
  },
  {
    "text": "pipeline but here for the demo let's illustrate this so here again please",
    "start": "1686320",
    "end": "1691440"
  },
  {
    "text": "could you generate the Kubernetes manifest for me right as a developer I don't want to do that so the platform",
    "start": "1691440",
    "end": "1697279"
  },
  {
    "text": "engineer were able to provide the recipe uh using this core Kubernetes implementation and guess what again it's",
    "start": "1697279",
    "end": "1703840"
  },
  {
    "text": "generating a Kubernetes manifest file with a lot of Kubernetes resources and",
    "start": "1703840",
    "end": "1709760"
  },
  {
    "text": "here I have 600 of line again developer shouldn't take care of that and deal",
    "start": "1709760",
    "end": "1715120"
  },
  {
    "text": "with the technical detail is it secure am I injecting the right label annotation so spacing tabs all the",
    "start": "1715120",
    "end": "1722320"
  },
  {
    "text": "things don't have to worry about it exactly so now I will be able to push",
    "start": "1722320",
    "end": "1727760"
  },
  {
    "text": "and deploy this in my cluster and now I have posgress and",
    "start": "1727760",
    "end": "1734640"
  },
  {
    "text": "rabbit MQ so what we did also as an exercise here is I want to graduate radius is good for the inner loop fast",
    "start": "1734640",
    "end": "1741919"
  },
  {
    "text": "but now we want to use posgress we want to use rabbitq in production maybe with",
    "start": "1741919",
    "end": "1747520"
  },
  {
    "text": "azure with any cloud right and I put together as platform engineers the recipes behind the scene the developer",
    "start": "1747520",
    "end": "1753840"
  },
  {
    "text": "they don't change the code they don't change the docker file they don't change the score file and now guess what I have",
    "start": "1753840",
    "end": "1760720"
  },
  {
    "text": "a new application deployed right and I'm generating ing",
    "start": "1760720",
    "end": "1765880"
  },
  {
    "text": "traffic sorry about that and you could see I'm now on Kubernetes at the bottom using Postgress",
    "start": "1765880",
    "end": "1773360"
  },
  {
    "text": "for the state store Rabbit MQ for the pubsub and now it's still working so we have this seamless um deployment process",
    "start": "1773360",
    "end": "1781679"
  },
  {
    "text": "um in place now I think one thing that's important I know we're at time but one thing that's important to consider right",
    "start": "1781679",
    "end": "1787600"
  },
  {
    "text": "our goal isn't to make it where developers don't have to use their minds right like that's not the goal the goal isn't to create an abstraction that's so",
    "start": "1787600",
    "end": "1794320"
  },
  {
    "text": "blackbox that people are resistant to it right because that's a reality as well so you have to empower developers to",
    "start": "1794320",
    "end": "1799919"
  },
  {
    "text": "understand the tooling to be able to educate themselves on how to break the glass but also to not have to be",
    "start": "1799919",
    "end": "1805039"
  },
  {
    "text": "inundated with worrying about this day-to-day so hopefully that gave you a good picture of how Dapper and Score",
    "start": "1805039",
    "end": "1810559"
  },
  {
    "text": "together can create a pretty compelling experience we would love to connect with you the rest of the conference there is",
    "start": "1810559",
    "end": "1815760"
  },
  {
    "text": "a Dapper open source booth i believe SCORE also has an open source source booth so please come to see us uh please",
    "start": "1815760",
    "end": "1821520"
  },
  {
    "text": "come see us at the diagram booth as well and I believe we have a um tech booth as well perfect yeah so we would love to",
    "start": "1821520",
    "end": "1827120"
  },
  {
    "text": "connect if you have any questions we'll stick around yeah thank you for your time thanks",
    "start": "1827120",
    "end": "1833320"
  }
]