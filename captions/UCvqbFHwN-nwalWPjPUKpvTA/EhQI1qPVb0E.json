[
  {
    "text": "perfect thanks thanks for coming back from lunch um for my talk so I wanted to",
    "start": "7880",
    "end": "13320"
  },
  {
    "text": "start with this and then we'll get into some slides but what you see at the top is um our CLI showing us all the ppf",
    "start": "13320",
    "end": "20600"
  },
  {
    "text": "events and then on the bottom we have various recorders which are recording some things so on the left we're",
    "start": "20600",
    "end": "25680"
  },
  {
    "text": "recording all of the shaw 256 digest of the binaries that are running in that PO",
    "start": "25680",
    "end": "31920"
  },
  {
    "text": "on the middle we have um the applications that are making connections so you see curl is reaching out to 10",
    "start": "31920",
    "end": "40120"
  },
  {
    "text": "24406 and then we see um all the BPF programs that are being",
    "start": "40120",
    "end": "45960"
  },
  {
    "text": "loaded so we we created two a funk and a test um just for fun so I'll explain",
    "start": "45960",
    "end": "52079"
  },
  {
    "text": "this later but let's um jump in see if I find the right",
    "start": "52079",
    "end": "57640"
  },
  {
    "text": "screen there we go cool so my name is John fastan um this talk",
    "start": "57640",
    "end": "63199"
  },
  {
    "text": "is actually prepared with Natalia she's not here today um but she uh she helped do a lot of the slides and the work to",
    "start": "63199",
    "end": "68759"
  },
  {
    "text": "to get it going so let's give her some credit as well what we want to talk about is you and your security profiles",
    "start": "68759",
    "end": "76479"
  },
  {
    "text": "all right so we want to talk about how to get least privileged profiles using BPF implemented in our favorite tools",
    "start": "76479",
    "end": "84759"
  },
  {
    "text": "using BPF so the the problem statement is how do we secure this right so you",
    "start": "84759",
    "end": "90680"
  },
  {
    "text": "look at your kubernetes cluster and you have lots of stuff in it probably some subset of those boxes",
    "start": "90680",
    "end": "96680"
  },
  {
    "text": "hopefully not every one of those boxes in your cluster but maybe who knows",
    "start": "96680",
    "end": "102000"
  },
  {
    "text": "right so we have all these things and we're trying to secure them um and we have this sort of guiding",
    "start": "102000",
    "end": "107520"
  },
  {
    "text": "principle uh of least privilege right so the idea here is we want to only give",
    "start": "107520",
    "end": "112799"
  },
  {
    "text": "the Pod the Privileges it needs nothing",
    "start": "112799",
    "end": "116759"
  },
  {
    "text": "more and the question is then why is that hard so the first part of the talk here we set",
    "start": "118600",
    "end": "124360"
  },
  {
    "text": "up like why why this is difficult and then what tools we used and then finally like how we solve this problem so why is",
    "start": "124360",
    "end": "129759"
  },
  {
    "text": "it hard right well like we said you had lots of things that previous picture",
    "start": "129759",
    "end": "136200"
  },
  {
    "text": "with all the stuff um you need to somehow figure out what your behavior should be right you don't necessarily",
    "start": "136200",
    "end": "142760"
  },
  {
    "text": "know what everything's going to execute inside your pod uh you don't know every file it's going to open every network",
    "start": "142760",
    "end": "148120"
  },
  {
    "text": "connection it's going to make right so if you want to sort of create a minimal policy that has just the connections it",
    "start": "148120",
    "end": "154319"
  },
  {
    "text": "needs just the binaries it needs files it needs and so on you need to somehow learn all this stuff to start with um",
    "start": "154319",
    "end": "161440"
  },
  {
    "text": "you need some notion of identity right like what is it that is doing this is it curl is it somebody who renamed their",
    "start": "161440",
    "end": "168239"
  },
  {
    "text": "program curl and decided to use it what version of curl is it um and so on um right and so the",
    "start": "168239",
    "end": "177120"
  },
  {
    "text": "other reason is is you just have um lots of these things you might have thousands of nodes thousands of PODS right you",
    "start": "177120",
    "end": "184560"
  },
  {
    "text": "can't manually go in and read uh you know srace every application and figure",
    "start": "184560",
    "end": "189840"
  },
  {
    "text": "out what it's doing or you can't you know you you can't be expected as a security person or an Ops person to know",
    "start": "189840",
    "end": "195040"
  },
  {
    "text": "what every application in your entire cluster is doing right um and so you have lots of data",
    "start": "195040",
    "end": "201959"
  },
  {
    "text": "even about an application right if we think about all the stuff that BPF Trace can do BPF um we can trace networking we",
    "start": "201959",
    "end": "208760"
  },
  {
    "text": "can trace uh applications disc calls all this good stuff right and we saw a few few talks",
    "start": "208760",
    "end": "213879"
  },
  {
    "text": "about different types of data we can see today um but then we also have all of",
    "start": "213879",
    "end": "218920"
  },
  {
    "text": "the metadata that comes with your network so you have kubernetes labels and pods and Nam spaces as well right so you combine this all together and we",
    "start": "218920",
    "end": "225200"
  },
  {
    "text": "just have lots of data um and lots of information okay um and then the last one I want to",
    "start": "225200",
    "end": "231599"
  },
  {
    "text": "talk about is there's sort of a gap here right so your security and your opples they care about pods they care about",
    "start": "231599",
    "end": "238000"
  },
  {
    "text": "your cluster uh they probably don't care like you know I'm a colonel developer they probably don't care about the",
    "start": "238000",
    "end": "243560"
  },
  {
    "text": "cgroup ID of that binary right I might I might really be interested that there's",
    "start": "243560",
    "end": "249040"
  },
  {
    "text": "a network name space there and a mount names space and a pit Nam space and all this good stuff that Linux is doing",
    "start": "249040",
    "end": "255280"
  },
  {
    "text": "right but when you run Cube Kettle and you look at your multic clusters and your thousands of PODS do you care no",
    "start": "255280",
    "end": "261160"
  },
  {
    "text": "you care about the Pod you care about the label you care about sort of the policy at that next level up and so what we do is we need to bridge this Gap",
    "start": "261160",
    "end": "267960"
  },
  {
    "text": "right between what BPF sees which is you know an iode on a system in a container",
    "start": "267960",
    "end": "273199"
  },
  {
    "text": "and back to what the uh what you see as an operator or a security person trying to write a policy for this for this",
    "start": "273199",
    "end": "279479"
  },
  {
    "text": "system okay so that's why it's hard hopefully",
    "start": "279479",
    "end": "285320"
  },
  {
    "text": "you're convinced nobody stood up and said no that's easy yet anyways all",
    "start": "285320",
    "end": "290800"
  },
  {
    "text": "right so what's our tool well it's BPF day so the obvious choice is BPF right and why do we like BPF I think people",
    "start": "290800",
    "end": "296360"
  },
  {
    "text": "have gone into this sort of at length already but there's lots of reasons why we like B PF right it's safe right we",
    "start": "296360",
    "end": "301720"
  },
  {
    "text": "can't can't break your system easily at least um we'll load our",
    "start": "301720",
    "end": "307360"
  },
  {
    "text": "program um and we can hook anywhere in the kernel we can read the Kernel's data structures so we can let the kernel do",
    "start": "307360",
    "end": "313199"
  },
  {
    "text": "some of the work for us right we don't need to like reduplicate everything the colel is doing um and it's also quite",
    "start": "313199",
    "end": "321560"
  },
  {
    "text": "featur rich in especially if you think of a 55 kernel or 54 greater 510 I think",
    "start": "321560",
    "end": "327400"
  },
  {
    "text": "I've even seen some 515 kernels run around right you have lots of data structures you can use you can build your trees you can",
    "start": "327400",
    "end": "334680"
  },
  {
    "text": "build your hash tables you can do some looping all that good stuff right there's even locks and spin locks now",
    "start": "334680",
    "end": "341199"
  },
  {
    "text": "right um the next thing is it's transparent and atomic so the atomic is important from a security standpoint",
    "start": "341199",
    "end": "347520"
  },
  {
    "text": "right you want to make sure that when I upgrade I can do that seamlessly like I don't need to for example restart all my",
    "start": "347520",
    "end": "353720"
  },
  {
    "text": "pods or somehow get a hold of the the network edmin and tell them okay please shut down the network I'm going to Res",
    "start": "353720",
    "end": "359560"
  },
  {
    "text": "start right you don't want to have these like world changing upgrade processes and so BPF gives you that you can just",
    "start": "359560",
    "end": "366199"
  },
  {
    "text": "switch the BPF program on the Fly you can do it automically so it's either on the old program or the new program never",
    "start": "366199",
    "end": "372000"
  },
  {
    "text": "in between and definitely never without any BPF program right so there's no Gap in your security security",
    "start": "372000",
    "end": "379560"
  },
  {
    "text": "model um yep so then um if we think about",
    "start": "379680",
    "end": "386560"
  },
  {
    "text": "things that are done today right we uh when we were setting out to do this talk we looked around right there's a lot of",
    "start": "386560",
    "end": "392319"
  },
  {
    "text": "CIS call profilers out there that will do CIS call tracing and give you some security on",
    "start": "392319",
    "end": "397759"
  },
  {
    "text": "the CIS calls so you can build an allow list so open maybe imagine like open and close are allowed but uh I'm going to",
    "start": "397759",
    "end": "404720"
  },
  {
    "text": "block set in s because I know that hey this pod should never do a set in s or set uid it should never change its uid",
    "start": "404720",
    "end": "411759"
  },
  {
    "text": "right some of these sort of standard CIS call things and this has been around for quite a while SC Linux can do these kinds of things as well",
    "start": "411759",
    "end": "418400"
  },
  {
    "text": "right and this is great but the question that we wanted to",
    "start": "418400",
    "end": "424360"
  },
  {
    "text": "ask when we did this talk is like can we do better better than just system",
    "start": "424360",
    "end": "429400"
  },
  {
    "text": "calls all right and so what we did is we turned to our our favorite tool here which is tetragon um I'm the maintainer",
    "start": "430759",
    "end": "437039"
  },
  {
    "text": "for tetragon um so it was a sort of a natural pick and what does tetragon do uh I'll talk to you a bit about in more",
    "start": "437039",
    "end": "443160"
  },
  {
    "text": "detail in a couple bit slides but what it does at a high level is you run it on the Node and it attaches BPF programs to",
    "start": "443160",
    "end": "449120"
  },
  {
    "text": "all these points in your kernel to collect lots of data about your system right so you can attach to the cgroup",
    "start": "449120",
    "end": "455680"
  },
  {
    "text": "create hooks so you know when cgroups are created you can attach to the files so you when files are created or access red or right you can attach the",
    "start": "455680",
    "end": "461720"
  },
  {
    "text": "networking stack and so on and so forth right all the way down the stack it then provides you an infrastructure to to",
    "start": "461720",
    "end": "468039"
  },
  {
    "text": "build those hooks so you can apply these with a crd in your kubernetes environment and you can get the data",
    "start": "468039",
    "end": "473960"
  },
  {
    "text": "back out uh through fluent D or through a grpc tunnel if you need if you want to",
    "start": "473960",
    "end": "480520"
  },
  {
    "text": "right so it gives you that sort of infrastructure to start building tools on top of um and then here are some key points",
    "start": "480520",
    "end": "487000"
  },
  {
    "text": "I think for for tetragon like why why do we like tetragon so much um the first",
    "start": "487000",
    "end": "492120"
  },
  {
    "text": "one may sound obvious at first but it's actually quite tricky it's to be able to always know what is running on your",
    "start": "492120",
    "end": "498560"
  },
  {
    "text": "system sounds very basic right but now let's talk about what that actually",
    "start": "498560",
    "end": "504919"
  },
  {
    "text": "means it means you need to have some sort of identity and you need to have some sort of location right because it's not a single node we're talking about",
    "start": "504919",
    "end": "510159"
  },
  {
    "text": "we're talking about an entire cluster possibly multi clusters right and so what is an identity right it's not just",
    "start": "510159",
    "end": "516080"
  },
  {
    "text": "a binary name because I can rename files it's not necessarily A PID because pids change over time right it's includes all",
    "start": "516080",
    "end": "524560"
  },
  {
    "text": "the libraries that are loaded I want to know um not only did I run this binary but I ran this binary and it loaded this",
    "start": "524560",
    "end": "530519"
  },
  {
    "text": "version in op SSL is that version of open SSL vulnerable or not vulnerable does it have my patch in it for my fix",
    "start": "530519",
    "end": "537240"
  },
  {
    "text": "right is the args that the binary was run with with build ID this is something that your compilers will put in to tell",
    "start": "537240",
    "end": "542959"
  },
  {
    "text": "you kind of trace it back to where it was compiled and then we do saw 256",
    "start": "542959",
    "end": "548040"
  },
  {
    "text": "digest here um to give you kind of exactly what code is running so that'll give you an",
    "start": "548040",
    "end": "554120"
  },
  {
    "text": "identity but that's still not enough you also need this location so inside kubernetes what is a location clusters",
    "start": "554120",
    "end": "559720"
  },
  {
    "text": "nodes namespace pods containers and uh what else did I have in there time time is important right",
    "start": "559720",
    "end": "566800"
  },
  {
    "text": "you care about when this thing is actually run was it run yesterday two months ago 5 minutes ago it matters",
    "start": "566800",
    "end": "573680"
  },
  {
    "text": "right and what you get when you put these two together and you get a unique ID right now you can put that in a",
    "start": "573680",
    "end": "580399"
  },
  {
    "text": "database and you can ask queries on your database which are quite interesting you can say you know when did this this",
    "start": "580399",
    "end": "585480"
  },
  {
    "text": "thing execute what time what executed between these times on this node you know slice the data any way and create",
    "start": "585480",
    "end": "591800"
  },
  {
    "text": "sort of interesting data sets um the other reason it's hard is because the Linux kernel um when you",
    "start": "591800",
    "end": "599560"
  },
  {
    "text": "execute things it's not a straight tree like you might think right you might think oh it's just a tree but actually",
    "start": "599560",
    "end": "605279"
  },
  {
    "text": "the kernel itself can do execs it can do clones which means it can just exec over the top of its program python libraries",
    "start": "605279",
    "end": "612040"
  },
  {
    "text": "do this Java libraries do this a lot um to save space right they don't want to create another stack space they just",
    "start": "612040",
    "end": "618320"
  },
  {
    "text": "exec right over top of the old image and when you do that you lose this idea of parent child relationship that you sort",
    "start": "618320",
    "end": "623880"
  },
  {
    "text": "of as a user expect um but it's not always there in the kernel right and",
    "start": "623880",
    "end": "629279"
  },
  {
    "text": "also when things exit if a parent exit it doesn't necessarily mean that the children exit right and in fact they actually in the kernel get assigned a",
    "start": "629279",
    "end": "635120"
  },
  {
    "text": "new parent so there's all these semantics in the kernel that if you sort of naively take just the Kernel's",
    "start": "635120",
    "end": "640320"
  },
  {
    "text": "Viewpoint you lose the sort of abstraction that a user wants right you always want to know that",
    "start": "640320",
    "end": "646560"
  },
  {
    "text": "tree okay and then there's a lot of other types of execs that we can trace too",
    "start": "646560",
    "end": "652360"
  },
  {
    "text": "with tetron not just um the straight normal one where you think of you have a b binary path name and you execute it",
    "start": "652360",
    "end": "657760"
  },
  {
    "text": "but you can think of all kinds of other things like you open a file name open a file descriptor delete the binary and then run it shared memory MFD files so",
    "start": "657760",
    "end": "667200"
  },
  {
    "text": "on and so forth there's a whole list of these and if you want to play with this come find me let's chat there's probably more ways than that um I'm always happy",
    "start": "667200",
    "end": "674040"
  },
  {
    "text": "to sort of improve that the tracing of tetragon here or if we miss something let us",
    "start": "674040",
    "end": "679600"
  },
  {
    "text": "know um the next thing that's really important is we can we can hook any kernel function as long as it's a function in",
    "start": "679600",
    "end": "686519"
  },
  {
    "text": "the kernel we can hook it um this the tetron crd is generic which is great for building tools um if I want to hook I",
    "start": "686519",
    "end": "694360"
  },
  {
    "text": "think here I said some function in the kernel I can write a crd and deploy it and then all of a sudden I get this data",
    "start": "694360",
    "end": "700240"
  },
  {
    "text": "out on every node in the system you know every node in the cluster will now have this new data without having to restart",
    "start": "700240",
    "end": "706959"
  },
  {
    "text": "upgrade change my tooling so sort of new use cases come in",
    "start": "706959",
    "end": "712200"
  },
  {
    "text": "easily um the advantage of this is we almost never hook system calls for security things right so if you think of",
    "start": "712200",
    "end": "717880"
  },
  {
    "text": "a system call wire system calls good they're good cuz they're convenient and they're stable but they're not nice",
    "start": "717880",
    "end": "723200"
  },
  {
    "text": "because um if you hook the with BPF here if you look at the diagram there on the",
    "start": "723200",
    "end": "728240"
  },
  {
    "text": "right um if you hook the CIS and there's a pointer to user memory and then you read the user memory that's still user",
    "start": "728240",
    "end": "735160"
  },
  {
    "text": "memory right so it's entirely possible that the user could then change the memory okay at which point your security",
    "start": "735160",
    "end": "741839"
  },
  {
    "text": "tool is no longer reading the right set of bites it's reading some other data but actually what's even more common is",
    "start": "741839",
    "end": "747639"
  },
  {
    "text": "it'll fault right if you run this in a big cluster what you'll see is a bunch of faults happening you'll be like why am I getting faults on my system call",
    "start": "747639",
    "end": "754240"
  },
  {
    "text": "it's because before that BPF program ran the memory was paged out okay BPF will just go I don't know how to try TR I",
    "start": "754240",
    "end": "761440"
  },
  {
    "text": "don't know how to track down that memory so I'm going to fault on it okay so for security things we generally",
    "start": "761440",
    "end": "768600"
  },
  {
    "text": "try to stay inside the kernel not on the system call boundaries and if you look at stuff like SC Linux and stuff they'll try to they won't actually Trace these",
    "start": "768600",
    "end": "774880"
  },
  {
    "text": "right they'll say that's a user pointer memory I know that's not secure don't write a policy against this they'll stop you from doing",
    "start": "774880",
    "end": "782079"
  },
  {
    "text": "that um the other reason that this is interesting is because we can have virtual types right or slim types in",
    "start": "783240",
    "end": "788680"
  },
  {
    "text": "some cases what we call them what this means is like do you really care what the file descriptor of an open call is",
    "start": "788680",
    "end": "794440"
  },
  {
    "text": "probably not because it doesn't mean anything to you right if I'm in a multicluster environment and I tell the security operator it open file",
    "start": "794440",
    "end": "800600"
  },
  {
    "text": "descriptor 5 okay he has no no idea what file descriptor 5 is right um so we do a lot",
    "start": "800600",
    "end": "807680"
  },
  {
    "text": "of these virtual file um virtual types where we take the file descriptor and we put the path name in there so now in your database you have the path name",
    "start": "807680",
    "end": "814199"
  },
  {
    "text": "much more useful maybe the iode number even more useful um it's the same way with cgroup IDs it's like I can tell the",
    "start": "814199",
    "end": "820880"
  },
  {
    "text": "operator that the CI group ID was X but what they really they care about they care about the label and they care about the name space most likely um and the",
    "start": "820880",
    "end": "828680"
  },
  {
    "text": "same goes for all these other things like if you want to look at a task structure in the kernel it's you know might be bytes and bytes and bytes and",
    "start": "828680",
    "end": "834839"
  },
  {
    "text": "btes of data what do you actually want out of that task structure you don't want to just print random data you want to print the things you care about right",
    "start": "834839",
    "end": "841680"
  },
  {
    "text": "saves makes it more perform because you're not copying tons of data around but it also makes it more useful",
    "start": "841680",
    "end": "848600"
  },
  {
    "text": "okay um the other thing then we have is to directly address this like fire hose problem right if I hooked FD install",
    "start": "848600",
    "end": "855800"
  },
  {
    "text": "which is the Colonel's version of loading a file I'm going to get every file in the system and if you we've done",
    "start": "855800",
    "end": "862800"
  },
  {
    "text": "this what will happen is you will get just lots and lots of data Linux systems like to open files right that's what",
    "start": "862800",
    "end": "869000"
  },
  {
    "text": "they do um so really you need some way to scope this down you need to say uh I only want these files here's a path name",
    "start": "869000",
    "end": "876160"
  },
  {
    "text": "or a directory or I only want files that belong to this binary or you know you need to start scoping these things down",
    "start": "876160",
    "end": "882079"
  },
  {
    "text": "think of network connections do I really care about um all the network connections that my DNS server is doing",
    "start": "882079",
    "end": "887720"
  },
  {
    "text": "maybe maybe not right there's going to be a lot of DNS requests in there a lot of them are going to be duplicates you",
    "start": "887720",
    "end": "893800"
  },
  {
    "text": "know as you query the the local node local pod node so on and so forth as it goes down the line okay so what we do",
    "start": "893800",
    "end": "901120"
  },
  {
    "text": "here is we try to scope that down for you give you a bunch of um crd selectors here um we have match ARs and Peds and a",
    "start": "901120",
    "end": "907480"
  },
  {
    "text": "few other things so you can start to say like what do I care about you know from a security standpoint maybe you just",
    "start": "907480",
    "end": "912519"
  },
  {
    "text": "care about things that are privileged I want to know anybody who has capet admin tell me everything they do right these",
    "start": "912519",
    "end": "918639"
  },
  {
    "text": "types of things and then the the last thing that really I think is really interesting about tetron is it does the actions in",
    "start": "918639",
    "end": "925800"
  },
  {
    "text": "the kernel okay so it's done in line with the with the call so if you want to",
    "start": "925800",
    "end": "930839"
  },
  {
    "text": "kill a process we will kill it from the colonel side what this means is there's not a delay right you're not looking at",
    "start": "930839",
    "end": "937440"
  },
  {
    "text": "a delay from when that event gets pushed from user from the kernel to user space through some user space logic and then",
    "start": "937440",
    "end": "944160"
  },
  {
    "text": "maybe later at some point it decides okay that was a bad application I better stop it right it's likely already done",
    "start": "944160",
    "end": "949639"
  },
  {
    "text": "the thing that it was you're trying to stop right so tetragon has this ability to do it inside the kernel so we we",
    "start": "949639",
    "end": "955880"
  },
  {
    "text": "detect it it's trying to open a file that we don't like or open a network connection we don't like kill the process right",
    "start": "955880",
    "end": "962639"
  },
  {
    "text": "away okay so this gives us sort of our our tool set and let's go and start implementing",
    "start": "962639",
    "end": "968880"
  },
  {
    "text": "leas privilege using this all right I got about 10 minutes it looks",
    "start": "968880",
    "end": "976040"
  },
  {
    "text": "like um all right so what do we want to do what's our task list to do this using the tools that we have so first we need",
    "start": "976040",
    "end": "982959"
  },
  {
    "text": "a test environment so we'll build that up then we're going to collect some stuff and figure out what our pods are doing because we don't actually know",
    "start": "982959",
    "end": "988680"
  },
  {
    "text": "what they're doing um and then we're going to create a policy we'll apply that policy and then we'll see that it works okay so the first way we do this",
    "start": "988680",
    "end": "997759"
  },
  {
    "text": "is we have set of PODS and we have this grpc collector thing it's basically",
    "start": "997759",
    "end": "1002800"
  },
  {
    "text": "listening to the output of each each version of tetragon each node and um",
    "start": "1002800",
    "end": "1008440"
  },
  {
    "text": "creates a list of uh events that you that you want to watch for all right",
    "start": "1008440",
    "end": "1016199"
  },
  {
    "text": "oops sorry I'm going backwards now on you um and so I could talk to about it but I'm going to try to demo it here so",
    "start": "1016199",
    "end": "1022680"
  },
  {
    "text": "let's do it and see how it goes all right so this was what I talked",
    "start": "1022680",
    "end": "1028798"
  },
  {
    "text": "about at the beginning of the about the beginning of the talk right and so um this top thing this is um a monitor of",
    "start": "1028799",
    "end": "1036678"
  },
  {
    "text": "our uh test pod we call BPF Droid and we have this tool um maybe I",
    "start": "1036679",
    "end": "1044520"
  },
  {
    "text": "can scroll up and see the the thing for you unlikely all right um anyways we",
    "start": "1044520",
    "end": "1050679"
  },
  {
    "text": "have this tool which kind of pretty prints a slim down version of the events right like this just sort of the",
    "start": "1050679",
    "end": "1056880"
  },
  {
    "text": "relevant information the actual events are quite quite large and they have more data in them and then we have our",
    "start": "1056880",
    "end": "1062880"
  },
  {
    "text": "collectors on the bottom and so I started three collectors here and you can see this top thing is doing stuff",
    "start": "1062880",
    "end": "1068559"
  },
  {
    "text": "it's basically on a 30- second timer it runs a bunch of stuff and then on the bottom we have our collectors so the",
    "start": "1068559",
    "end": "1074640"
  },
  {
    "text": "left one like I said is the digest so this is a list of all the binaries that's running so each one of those um",
    "start": "1074640",
    "end": "1080240"
  },
  {
    "text": "digests corresponds to a a process on the top okay the middle box is a curl",
    "start": "1080240",
    "end": "1086080"
  },
  {
    "text": "looks like curl tried to reach out to something and then um the right side is in our little demo pod we try to load",
    "start": "1086080",
    "end": "1092440"
  },
  {
    "text": "some programs a function and a test okay and so the goal here is to make sure like this is all that happens and then",
    "start": "1092440",
    "end": "1099480"
  },
  {
    "text": "to make it a little more interesting what we're going to do is we're going to decide that we should never load test",
    "start": "1099480",
    "end": "1105039"
  },
  {
    "text": "functions in our production pod or at least our demo pod right okay so how do we do that we",
    "start": "1105039",
    "end": "1115679"
  },
  {
    "text": "go over here and let's talk a little bit about what I have loaded because I we said a",
    "start": "1115679",
    "end": "1121320"
  },
  {
    "text": "lot about crds but here for example is a crd for TCP connect this is monitoring",
    "start": "1121320",
    "end": "1126679"
  },
  {
    "text": "TCP sessions um right",
    "start": "1126679",
    "end": "1132440"
  },
  {
    "text": "there and what this basically says is that I want to hook it to TCP connect it's not a CIS call like we said we",
    "start": "1133120",
    "end": "1139440"
  },
  {
    "text": "don't want to try to avoid hooking CIS calls if we can and it tells us what the argument is it's a sock argument is the",
    "start": "1139440",
    "end": "1145320"
  },
  {
    "text": "index zero there's some other arguments probably in that function call but we don't care about them right we just care about this sock thing because we're",
    "start": "1145320",
    "end": "1150679"
  },
  {
    "text": "trying to figure out what it's connected to um and then we care about TCB close",
    "start": "1150679",
    "end": "1155760"
  },
  {
    "text": "and TCP send message so connect uh connect what do we have",
    "start": "1155760",
    "end": "1160960"
  },
  {
    "text": "connect send and close and I put them in the wrong order should put the clo above",
    "start": "1160960",
    "end": "1166120"
  },
  {
    "text": "the above the uh below the um and then I have a BPF collector and",
    "start": "1166120",
    "end": "1173320"
  },
  {
    "text": "these are just sort of trivial examples to show um you might expect like a production will have a whole list of",
    "start": "1173320",
    "end": "1178520"
  },
  {
    "text": "crds and they might be longer but this this hooks the BPF load so when you load a BPF program one of the things the",
    "start": "1178520",
    "end": "1184640"
  },
  {
    "text": "colonel do does is verifies that it's correct this hooks the verify call and then checks to see did it succeed did it",
    "start": "1184640",
    "end": "1192120"
  },
  {
    "text": "fail and who did it right three things you want to know and what did they try to load what was the what was the program name",
    "start": "1192120",
    "end": "1199200"
  },
  {
    "text": "pretty useful information if you want to know what's loading BPF programs on your system",
    "start": "1199200",
    "end": "1204720"
  },
  {
    "text": "okay all right so there we go and then we have this data like we said over here we have all the data from",
    "start": "1204720",
    "end": "1212320"
  },
  {
    "text": "the bottom all collected so let's try something over here I have this Droid",
    "start": "1212320",
    "end": "1217919"
  },
  {
    "text": "thing I can do clear this is just a shell into that test pod right I can run",
    "start": "1217919",
    "end": "1223240"
  },
  {
    "text": "commands it's not locked down oh I shouldn't run too many commands because they're going to get sucked into the Digest",
    "start": "1223240",
    "end": "1228720"
  },
  {
    "text": "um see look the Dig just changed um but anyway so you see I can run commands so",
    "start": "1228720",
    "end": "1233799"
  },
  {
    "text": "let's do this sorry I'll set set that down for a",
    "start": "1233799",
    "end": "1240200"
  },
  {
    "text": "second um let's go into",
    "start": "1240200",
    "end": "1245720"
  },
  {
    "text": "guard well I'll show I'll show you I'll show you what it looks like let's look",
    "start": "1245720",
    "end": "1251440"
  },
  {
    "text": "at our exact guard this is this is coming from the streaming data I actually stopped it",
    "start": "1251440",
    "end": "1257640"
  },
  {
    "text": "from stream streaming um this so it's from a slightly earlier one cuz in case I did what I just did there and ran a bunch of commands I didn't want to get",
    "start": "1257640",
    "end": "1263600"
  },
  {
    "text": "plugged into here but there's some um exact digest let's apply",
    "start": "1263600",
    "end": "1270559"
  },
  {
    "text": "it all right so now it's applied and let's go back to our pod",
    "start": "1275919",
    "end": "1280960"
  },
  {
    "text": "here's our nice little pod um my pod's now locked down it would be nice to run clear but it probably",
    "start": "1280960",
    "end": "1287279"
  },
  {
    "text": "won't work see everything is locked uh can't do much of anything",
    "start": "1287279",
    "end": "1293159"
  },
  {
    "text": "right so like maybe I want to try Inn a center nothing works all right all",
    "start": "1293159",
    "end": "1298360"
  },
  {
    "text": "killed and all synchronously right it's not like it's not like I did actually",
    "start": "1298360",
    "end": "1303960"
  },
  {
    "text": "got my inent to run it would failed",
    "start": "1303960",
    "end": "1307960"
  },
  {
    "text": "immediately and here you can see my little CLI is telling me yep that happened in a center killed he tried to",
    "start": "1309520",
    "end": "1317559"
  },
  {
    "text": "do bad things all right and if you look the background's still running right because",
    "start": "1317559",
    "end": "1323400"
  },
  {
    "text": "those are on the digest I can show you here too definitely on the digest BPF",
    "start": "1323400",
    "end": "1329159"
  },
  {
    "text": "tool is fine all right [Music]",
    "start": "1329159",
    "end": "1337410"
  },
  {
    "text": "interesting and",
    "start": "1338159",
    "end": "1341480"
  },
  {
    "text": "then so then we have a connect oop sorry then we have a connect guard as well um this",
    "start": "1346960",
    "end": "1353559"
  },
  {
    "text": "pulled in data from that middle box um I saved it from earlier so hopefully I",
    "start": "1353559",
    "end": "1358799"
  },
  {
    "text": "don't have to regenerate it and I still have the same DNS names but let's give it a try and",
    "start": "1358799",
    "end": "1364210"
  },
  {
    "text": "[Music]",
    "start": "1364210",
    "end": "1367278"
  },
  {
    "text": "see all right so it's running so we should be able to curl like we try to curl curl works by",
    "start": "1376960",
    "end": "1383600"
  },
  {
    "text": "the way because it was listed as one of the commands in the digest we can curl other things let's see what Google has to say to us",
    "start": "1383600",
    "end": "1390120"
  },
  {
    "text": "today yeah Google doesn't work because it's not in the digest sad right so",
    "start": "1390120",
    "end": "1395960"
  },
  {
    "text": "we've locked down all the connects the only connect that does work is the thing we let",
    "start": "1395960",
    "end": "1401559"
  },
  {
    "text": "work um was this EPF .io right up uh",
    "start": "1401559",
    "end": "1407480"
  },
  {
    "text": "right up here or I guess in this case we're doing an alderman base so slightly different one but same it doesn't matter the old the",
    "start": "1407480",
    "end": "1414559"
  },
  {
    "text": "old pod that we had used to do ef. um and I guess maybe that's an",
    "start": "1414559",
    "end": "1420679"
  },
  {
    "text": "interesting point is I don't actually have to know what this pod's doing because I just collected the data and applied it and then the last one and then I'll",
    "start": "1420679",
    "end": "1427960"
  },
  {
    "text": "I'll wrap it up here is we'll try to lock down the BPF tool so like if you look here I have this test function",
    "start": "1427960",
    "end": "1434480"
  },
  {
    "text": "running in my in my production pod My Demo pod here and I want to get rid of that I don't want people to load test",
    "start": "1434480",
    "end": "1440880"
  },
  {
    "text": "things in my in my pod so let's add one more",
    "start": "1440880",
    "end": "1446440"
  },
  {
    "text": "[Music]",
    "start": "1446770",
    "end": "1449839"
  },
  {
    "text": "policy and then um when it tries to run what'll happen is it'll it'll fail it'll do a Sig kill",
    "start": "1454760",
    "end": "1461120"
  },
  {
    "text": "on it um or if we get bored um in impatient person so let's do this let's",
    "start": "1461120",
    "end": "1467120"
  },
  {
    "text": "just run it directly just steal the command out of the this",
    "start": "1467120",
    "end": "1472360"
  },
  {
    "text": "thing here and apply it to the [Music]",
    "start": "1472360",
    "end": "1479779"
  },
  {
    "text": "Pod and can't even load this program anymore because I tried to load test so",
    "start": "1484600",
    "end": "1490080"
  },
  {
    "text": "I'm pretty well stuck but all my stuff that is running normally in the background keeps running",
    "start": "1490080",
    "end": "1495880"
  },
  {
    "text": "right because that's part of my uh part of my list so that's the uh that's the",
    "start": "1495880",
    "end": "1501360"
  },
  {
    "text": "quick that's the demo I'm going to skip through all these slides that explain the demo because I think we just walked through it right so",
    "start": "1501360",
    "end": "1507720"
  },
  {
    "text": "here's the same pretty printer that we just saw um and what is telling you here is just that you know this pod does this",
    "start": "1507720",
    "end": "1514559"
  },
  {
    "text": "thing where it connects to the world and we can block it uh if BPF tool tries to load something we don't expect doesn't",
    "start": "1514559",
    "end": "1520279"
  },
  {
    "text": "load curl still works though except for when it goes to somewhere we don't want to um so let's wrap up because I think",
    "start": "1520279",
    "end": "1527360"
  },
  {
    "text": "I'm on time yeah two minutes um so what this does for us is",
    "start": "1527360",
    "end": "1534080"
  },
  {
    "text": "we get a least privilege we don't have to know what the Pod is and sort of we go beyond CIS calls right we're at least",
    "start": "1534080",
    "end": "1540320"
  },
  {
    "text": "privileged as far as what's executing with this digest and like a full identity um",
    "start": "1540320",
    "end": "1547559"
  },
  {
    "text": "we uh we we sort of believe that this is usually very",
    "start": "1547559",
    "end": "1553120"
  },
  {
    "text": "hard to do right because you have to somehow collect all this data so if you don't have something like BPF but you can collect all this data pull it into",
    "start": "1553120",
    "end": "1559799"
  },
  {
    "text": "your system and then generate these policies that you push back out it's going to be really hard to do I'm not sure how else you would do this right",
    "start": "1559799",
    "end": "1566080"
  },
  {
    "text": "and I'm not sure even what tools you might use if BPF um wasn't there to help you right uh so by using this BPF we can",
    "start": "1566080",
    "end": "1573480"
  },
  {
    "text": "then add all these filters add these actions in the kernel and kind of get this least privileged thing that we want right and you saw that when I tried to",
    "start": "1573480",
    "end": "1579399"
  },
  {
    "text": "log in to that shell I can't even execute things that are no longer uh no longer available to",
    "start": "1579399",
    "end": "1585640"
  },
  {
    "text": "me so I like to with this if you want to help I would love it always looking for",
    "start": "1585640",
    "end": "1592159"
  },
  {
    "text": "people to help there's lots of things you can do um there's the GitHub page there tetron um I mean you don't",
    "start": "1592159",
    "end": "1599039"
  },
  {
    "text": "even have to be a coder you can just use the tool file bugs tell us where our documentation is not great you have a",
    "start": "1599039",
    "end": "1605679"
  },
  {
    "text": "use case that I didn't think about go ahead and file a feature request can't hurt right um the documentation is",
    "start": "1605679",
    "end": "1612600"
  },
  {
    "text": "always needs to be improved you know there's always something that we miss especially when the users of the tool are writing the documentation a lot of",
    "start": "1612600",
    "end": "1618880"
  },
  {
    "text": "times we forget things if you have a use case that you want go ahead and add it we we have a crd's examples directory",
    "start": "1618880",
    "end": "1625360"
  },
  {
    "text": "where we just keep example directories and and the the bar of Entry there we try to keep it pretty low right you have",
    "start": "1625360",
    "end": "1630840"
  },
  {
    "text": "a you have some thing you want to trace somebody sent me a an oom killer thing the other day I don't have a use for an",
    "start": "1630840",
    "end": "1636480"
  },
  {
    "text": "oom killer thing but we'll put it in there right and then it'll be with every code and we'll keep up to date and then we test them right so if you have a use",
    "start": "1636480",
    "end": "1643600"
  },
  {
    "text": "case you put it there we'll test it if somebody tries to break it will you know revert their patch nice for makes it",
    "start": "1643600",
    "end": "1650200"
  },
  {
    "text": "nice for you um if you have some use case that just doesn't work that's sort of interesting too let's have a talk um",
    "start": "1650200",
    "end": "1657880"
  },
  {
    "text": "and then the other one is like if you have feedback on the crds uis that's always interesting for me I'm coming from the kernel side right networking",
    "start": "1657880",
    "end": "1664679"
  },
  {
    "text": "side and you guys are a lot of people are coming from the kubernetes side right so I talk with the kubernetes people that's where we get a lot of this",
    "start": "1664679",
    "end": "1670720"
  },
  {
    "text": "good stuff about labels and name space and stuff but you know this room I think there's a lot of people with expertise that could be quite useful of course of",
    "start": "1670720",
    "end": "1677559"
  },
  {
    "text": "course and if you want to fix bugs more power to you so I'm not going to stop you um with",
    "start": "1677559",
    "end": "1684240"
  },
  {
    "text": "that I will stop and say thank you brilliant Round of Applause for",
    "start": "1684240",
    "end": "1690679"
  },
  {
    "text": "John I feel like I just want to mention we have a San project meeting tomorrow morning I don't know if you're going to",
    "start": "1691640",
    "end": "1697320"
  },
  {
    "text": "be there but I'll be there yes so if anybody does want to come and chat about contributing to tetron tomorrow morning",
    "start": "1697320",
    "end": "1703200"
  },
  {
    "text": "the selan project meeting would be a good opportunity um maybe Alex could come and start getting ready for talk",
    "start": "1703200",
    "end": "1709440"
  },
  {
    "text": "and while he's doing that let's see if there are some questions for John good I see a couple back",
    "start": "1709440",
    "end": "1716799"
  },
  {
    "text": "there hey this is exciting work uh I just have one question uh so you mentioned that you don't want to hook",
    "start": "1721720",
    "end": "1727919"
  },
  {
    "text": "into the system calls for good reasons but many of the functions that uh you",
    "start": "1727919",
    "end": "1734799"
  },
  {
    "text": "would like to hook into in the Cent law in line and not the available is there any guarantee that you catch things",
    "start": "1734799",
    "end": "1740840"
  },
  {
    "text": "early before anything can happen so so is like is the question that sometimes you want to hook the",
    "start": "1740840",
    "end": "1746840"
  },
  {
    "text": "kernel function but the kernel function is in line so you can actually hook it is that really the the gist yeah basically uh if there is a gap or if",
    "start": "1746840",
    "end": "1753880"
  },
  {
    "text": "there's a guarantee that there is not a gap between the assistant call and the place where you actually hooking into",
    "start": "1753880",
    "end": "1759200"
  },
  {
    "text": "yeah there's always this challenge right where perhaps it's not inlines so you have to go read the kernel code and try to figure out where it's where the hook",
    "start": "1759200",
    "end": "1765399"
  },
  {
    "text": "is and you know worst case maybe you have multiple hooks in the kernel that would be just one thing um usually I I",
    "start": "1765399",
    "end": "1772519"
  },
  {
    "text": "would argue um typically for a lot of things we want to hook kernel developers like to reuse their code so you can",
    "start": "1772519",
    "end": "1779000"
  },
  {
    "text": "usually find like in the base like FD install for example is like an open one it's like everything that opens in a",
    "start": "1779000",
    "end": "1784279"
  },
  {
    "text": "file descriptor calls that thing um same way with exec there's like a hundred different ways to exec but you know the",
    "start": "1784279",
    "end": "1790960"
  },
  {
    "text": "colonel developers don't like to write 100 different lines of code so there's like one or two function calls that exec things in the kernel so usually you can",
    "start": "1790960",
    "end": "1797080"
  },
  {
    "text": "find them it can require some digging um there are a few cases that I know about",
    "start": "1797080",
    "end": "1802760"
  },
  {
    "text": "where it's just not possible um and what we do then is we annotate the kernel so",
    "start": "1802760",
    "end": "1809919"
  },
  {
    "text": "that that function no longer gets inline and we have a hook there and um you know that's sometimes not necessarily",
    "start": "1809919",
    "end": "1815120"
  },
  {
    "text": "satisfying because it means you got to get a newer kernel but um you know that's the worst case I've only hit that case a few times and usually we can find",
    "start": "1815120",
    "end": "1820799"
  },
  {
    "text": "workarounds even if the workarounds are a little you know not not as pleasant as you'd like them to be another question",
    "start": "1820799",
    "end": "1829039"
  },
  {
    "text": "here yeah thank you I one of the points you made on the slide about you know the",
    "start": "1829039",
    "end": "1834880"
  },
  {
    "text": "benefits of ebpf from a user perspective uh you know I was cheering for you the whole slide and then because this is",
    "start": "1834880",
    "end": "1841559"
  },
  {
    "text": "it's all the stuff that I that I need to use at the end there was a line that you kind of glossed over which is about that",
    "start": "1841559",
    "end": "1848360"
  },
  {
    "text": "it can be made portable oh yeah and I'm not I'm not asking you to like give a presentation on portability here but",
    "start": "1848360",
    "end": "1854399"
  },
  {
    "text": "what I was interested in is where are the sticking points point that you see about portability from that end user",
    "start": "1854399",
    "end": "1860480"
  },
  {
    "text": "perspective like what what are the challenges to like some building",
    "start": "1860480",
    "end": "1865639"
  },
  {
    "text": "something like tetron that that you're that you could potentially start to work around right so I would say from in user",
    "start": "1865639",
    "end": "1871840"
  },
  {
    "text": "point of view from tetragon we strive to handle all that for you right so like as a user of tetragon you shouldn't have that problem that's the goal um BTF is",
    "start": "1871840",
    "end": "1879639"
  },
  {
    "text": "sort of the catchphrase that solves all your problems you'll get the function names you get the structure offsets of course the if you look at the tetragon",
    "start": "1879639",
    "end": "1886799"
  },
  {
    "text": "code you'll see is that we pivot on some kernel versions there'll be some sort of duplicate functions that say if it's a",
    "start": "1886799",
    "end": "1892720"
  },
  {
    "text": "54 kernel we're going to load this function if it's 419 we'll load this and if it's 414 we're going to load this so from the developer side there is some",
    "start": "1892720",
    "end": "1898760"
  },
  {
    "text": "pain there um but I I don't think it's that big a deal usually the code is pretty well organized and those",
    "start": "1898760",
    "end": "1904720"
  },
  {
    "text": "functions tend to be pretty small they're like you know kernel again kernel developers don't generally decide",
    "start": "1904720",
    "end": "1911279"
  },
  {
    "text": "to rewrite their guts of the operating system on day on dayto day right like if exec if exec loading is going to",
    "start": "1911279",
    "end": "1918039"
  },
  {
    "text": "change uh it's going to be once and you know we're not going to do it again for 10 years probably right the same way",
    "start": "1918039",
    "end": "1924200"
  },
  {
    "text": "with connect it's like the connect functions been there since you know 3x kernels um hasn't substantially changed",
    "start": "1924200",
    "end": "1931760"
  },
  {
    "text": "the functions Chang but the BTF handles the function so the only real problem you would have is if a function exists",
    "start": "1931760",
    "end": "1936840"
  },
  {
    "text": "that doesn't exist now or somebody completely refactors the kernel and it does happen but you know we deal with it",
    "start": "1936840",
    "end": "1943880"
  },
  {
    "text": "and try to make it transparent to tetron users that's the goal right for those users don't have that",
    "start": "1943880",
    "end": "1949720"
  },
  {
    "text": "pain",
    "start": "1953559",
    "end": "1956559"
  }
]