[
  {
    "text": "all right hi everybody welcome to our presentation uh we're going to be talking to you a little bit today about",
    "start": "400",
    "end": "5759"
  },
  {
    "text": "um breaking changes how to avoid them how to communicate them how to handle them in general uh I'm Evan Bradley i'm",
    "start": "5759",
    "end": "11599"
  },
  {
    "text": "a software engineer at Dino Trace where I primarily work on data ingest and in",
    "start": "11599",
    "end": "17199"
  },
  {
    "text": "particular I work on the open telemetry collector which is just one component of that and I'm Pablo i work at data dog um",
    "start": "17199",
    "end": "25359"
  },
  {
    "text": "mostly focus on the collector and I'm in the governance committee of the open senator project since the last election",
    "start": "25359",
    "end": "33040"
  },
  {
    "text": "all right so before we get started today I just want to quickly cover what we're going to be going over um first we're going to give you a little bit of a",
    "start": "33040",
    "end": "38800"
  },
  {
    "text": "background just kind of show some context for what sort of mindset we're in when we're thinking about these problems and a little bit of the the",
    "start": "38800",
    "end": "45280"
  },
  {
    "text": "sorts of problems that we're dealing with in particular um next we're going to go over two different ways of",
    "start": "45280",
    "end": "51520"
  },
  {
    "text": "handling uh breaking changes for two different types of essentially software deliverables um the ones that we have in",
    "start": "51520",
    "end": "57280"
  },
  {
    "text": "particular uh there's a lot of them there's a lot of other ones out there but um we're really only focused on",
    "start": "57280",
    "end": "62879"
  },
  {
    "text": "users that are using APIs in published libraries and end users for uh CLI",
    "start": "62879",
    "end": "68880"
  },
  {
    "text": "applications um and then we're going to go we're going to conclude it with kind of looking ahead some things that we",
    "start": "68880",
    "end": "74240"
  },
  {
    "text": "want to try out and we're hoping that you might have some ideas for some stuff that we could do as well um so a little",
    "start": "74240",
    "end": "80640"
  },
  {
    "text": "bit of background just to start us off um as I mentioned uh when you're",
    "start": "80640",
    "end": "85759"
  },
  {
    "text": "delivering software this can take shape in multiple forms you can have all sorts",
    "start": "85759",
    "end": "90799"
  },
  {
    "text": "of different things that uh you'd like to deliver and um depending on what it",
    "start": "90799",
    "end": "96159"
  },
  {
    "text": "is that you're delivering um you need to consider you know who is consuming it",
    "start": "96159",
    "end": "101680"
  },
  {
    "text": "how they're consuming it when you're looking at um communicating changes to them so as I mentioned earlier uh the",
    "start": "101680",
    "end": "108479"
  },
  {
    "text": "collector uh is a it's a handful of libraries and then is also a binary distribution um so we have some end",
    "start": "108479",
    "end": "115119"
  },
  {
    "text": "users of these distributions um some developers that build things into the uh",
    "start": "115119",
    "end": "120560"
  },
  {
    "text": "the resulting binary um and then uh basically like plugins stuff like that um so it's kind of outside of the core",
    "start": "120560",
    "end": "127520"
  },
  {
    "text": "but is still part of what your end users are going to be using um and then we have other projects inside of the CNCF",
    "start": "127520",
    "end": "133200"
  },
  {
    "text": "that are also consuming us so these are using our APIs in a bit of a different way um so like I said earlier we're",
    "start": "133200",
    "end": "138720"
  },
  {
    "text": "looking at API changes and then um users of a binary here um and so we're looking",
    "start": "138720",
    "end": "144319"
  },
  {
    "text": "at uh basically like you know when you're interacting on a command line you know what sorts of flags are you using",
    "start": "144319",
    "end": "149599"
  },
  {
    "text": "and what does the config file look like um so another thing that you want to do",
    "start": "149599",
    "end": "154959"
  },
  {
    "text": "so since all of us in here are uh open source developers you're probably familiar uh it can be a little tough",
    "start": "154959",
    "end": "161599"
  },
  {
    "text": "sometimes to really know who your user is um if you're shipping a SAS service you know you can collect all sorts of",
    "start": "161599",
    "end": "167920"
  },
  {
    "text": "user analytics and you can you know use your um you know contact points with customers and things like that to get a",
    "start": "167920",
    "end": "174400"
  },
  {
    "text": "good idea of who it is that's using your application um but usually when you're shipping an open source application",
    "start": "174400",
    "end": "181040"
  },
  {
    "text": "you're um you know you're delivering something the user is installing it on their machine on their own um and",
    "start": "181040",
    "end": "186800"
  },
  {
    "text": "usually these are sort the sorts of users that are a little bit more privacy focused so uh they're not always keen",
    "start": "186800",
    "end": "192800"
  },
  {
    "text": "when you're going and you're collecting a bunch of user analytics uh from their their systems so as a result of this um",
    "start": "192800",
    "end": "199840"
  },
  {
    "text": "it can make it a little challenging sometimes to figure out exactly um who it is that's using your software how",
    "start": "199840",
    "end": "206400"
  },
  {
    "text": "they're using it things like that um and there there's not an easy solution to this but in general it's just something",
    "start": "206400",
    "end": "213040"
  },
  {
    "text": "that you kind of have to consider so sometimes um you know the one way of thinking about this is you know like the",
    "start": "213040",
    "end": "218159"
  },
  {
    "text": "Linux kernel with userland maybe you just don't make breaking changes once something is shipped it's stable that's",
    "start": "218159",
    "end": "223200"
  },
  {
    "text": "it it's set in stone um you can take some extra steps kind of as you you know if you want to make things a little bit",
    "start": "223200",
    "end": "228959"
  },
  {
    "text": "more lenient to uh make uh changes less frequent or make them more gradual um",
    "start": "228959",
    "end": "236480"
  },
  {
    "text": "and if possible uh you can kind of leverage open source to uh collaborate with users we've done that a little bit",
    "start": "236480",
    "end": "242799"
  },
  {
    "text": "um you know you can reach out and if you have a community you can try and gather feedback about the the impact of change",
    "start": "242799",
    "end": "249120"
  },
  {
    "text": "um we're mostly going to be covering um Pablo and I how to communicate uh these",
    "start": "249120",
    "end": "255200"
  },
  {
    "text": "changes um just make them more explicit um try and prevent them um and hopefully",
    "start": "255200",
    "end": "261680"
  },
  {
    "text": "that will uh that will shed some light on this um so uh just to give a little",
    "start": "261680",
    "end": "267440"
  },
  {
    "text": "bit of background on what the collector exactly is for anyone who is not familiar um it's going to be the piece",
    "start": "267440",
    "end": "273600"
  },
  {
    "text": "in the middle of this diagram here so that is the binary that Pablo and I work on and it fits into the overall picture",
    "start": "273600",
    "end": "280960"
  },
  {
    "text": "of an observability system so you have data coming in about how your applications are working um in the form",
    "start": "280960",
    "end": "288080"
  },
  {
    "text": "of traces metrics or logs um or your infrastructure it's going to go through the collector so the collector is going",
    "start": "288080",
    "end": "294240"
  },
  {
    "text": "to help kind of funnel this collect it um transform it things like that and then it will end up in a database",
    "start": "294240",
    "end": "300960"
  },
  {
    "text": "somewhere where it can be queried by the user um and the thing to call out here is that we're not concerned with",
    "start": "300960",
    "end": "306400"
  },
  {
    "text": "persistence so we're not we don't need to do any database migrations nothing like that we're mostly concerned with um",
    "start": "306400",
    "end": "312479"
  },
  {
    "text": "config format um so",
    "start": "312479",
    "end": "318120"
  },
  {
    "text": "uh basically the collector is a set of libraries um at its core so we we",
    "start": "318120",
    "end": "324400"
  },
  {
    "text": "develop all these libraries it's highly modular um and then you can take these libraries and you can assemble them into",
    "start": "324400",
    "end": "329840"
  },
  {
    "text": "the binary that is run by users um this is great because we have all sorts of people consuming these in all sorts of",
    "start": "329840",
    "end": "335919"
  },
  {
    "text": "creative ways uh you can kind of nest it inside of your other agents um you can",
    "start": "335919",
    "end": "341039"
  },
  {
    "text": "use it inside of kind of helper libraries um things like that um and as",
    "start": "341039",
    "end": "346160"
  },
  {
    "text": "a part of this we've been trying to ship a collector 1.0 um so where we're starting with this is we're going to uh",
    "start": "346160",
    "end": "353199"
  },
  {
    "text": "and we are um gradually stabilizing all of the libraries that go into making the",
    "start": "353199",
    "end": "358720"
  },
  {
    "text": "collector and then once we have those all stable that will basically just as a",
    "start": "358720",
    "end": "364080"
  },
  {
    "text": "result of that net us a binary that's built with those libraries that's 1.0 so",
    "start": "364080",
    "end": "370080"
  },
  {
    "text": "um through this what we're trying to focus on is what we call fearless upgrades so this is that when you uh",
    "start": "370080",
    "end": "377919"
  },
  {
    "text": "upgrade from you know version X to X plus1 that you're not going to get any compilation errors if you're consuming",
    "start": "377919",
    "end": "383600"
  },
  {
    "text": "an API or if you're an end user you're not going to get any config errors um things like that we're not so much focused on the um the the stability of",
    "start": "383600",
    "end": "392639"
  },
  {
    "text": "the application which is important but that's I just want to call out that that's not necessarily what we're",
    "start": "392639",
    "end": "397759"
  },
  {
    "text": "specifically talking about when we're talking about stability here um so most",
    "start": "397759",
    "end": "402800"
  },
  {
    "text": "of the uh kind of solutions that we're going to discuss are going to be related to things that we've solved uh as a part",
    "start": "402800",
    "end": "409440"
  },
  {
    "text": "of this 1.0 journey so uh a few of you might be familiar with this XKCD comic uh we",
    "start": "409440",
    "end": "415280"
  },
  {
    "text": "thought it was kind of funny and related um but basically it it covers changes so no matter whenever you change software",
    "start": "415280",
    "end": "422479"
  },
  {
    "text": "um there's a what do you call it hyum's law that states that basically any observable",
    "start": "422479",
    "end": "427599"
  },
  {
    "text": "uh functionality of your software anything that can be seen by the user in some way shape or form is going to be",
    "start": "427599",
    "end": "433759"
  },
  {
    "text": "used and depended upon in some way um so the thing here though is as a uh you",
    "start": "433759",
    "end": "442000"
  },
  {
    "text": "know developer of this software you don't necessarily want um your software stuck in time you know you want to be",
    "start": "442000",
    "end": "448160"
  },
  {
    "text": "able to continually develop it and as a result of that you want to be able to define you know what's a feature and",
    "start": "448160",
    "end": "454800"
  },
  {
    "text": "what's a bug so if your software causes the user's CPU to rapidly uh heat up uh",
    "start": "454800",
    "end": "460479"
  },
  {
    "text": "you don't want users depending on that as a feature you want to say \"No that's a bug.\" Most people probably don't want that",
    "start": "460479",
    "end": "466240"
  },
  {
    "text": "um we're not going to uh give any stability guarantees around that sort of thing um a little bit more concretely um",
    "start": "466240",
    "end": "473280"
  },
  {
    "text": "what we're looking at is uh backwards compatibility and not forward compatibility so what we define a",
    "start": "473280",
    "end": "480960"
  },
  {
    "text": "breaking change as um and I think most projects will probably agree with this",
    "start": "480960",
    "end": "486960"
  },
  {
    "text": "um which is that when we make an intentional change and we change the definition of what we consider to be",
    "start": "486960",
    "end": "494000"
  },
  {
    "text": "correctly working so if um you expect a certain behavior before and we look at",
    "start": "494000",
    "end": "499680"
  },
  {
    "text": "it we say that doesn't really we we need to adjust course uh we're going to shift that we're going to publish that as a",
    "start": "499680",
    "end": "506879"
  },
  {
    "text": "breaking change that is not going to be unintentional uh if it was unintentional it's a bug um and we're either going to",
    "start": "506879",
    "end": "512399"
  },
  {
    "text": "to fix it through a bug fix or um you know address the aggression or something",
    "start": "512399",
    "end": "517839"
  },
  {
    "text": "like that uh and these are usually communicated through a variety of um",
    "start": "517839",
    "end": "522959"
  },
  {
    "text": "different formats um in our case in particular uh we use a lot of change logs um those are obviously a popular",
    "start": "522959",
    "end": "528560"
  },
  {
    "text": "way of communicating things but one kind of neat thing that we do is we will communicate different change logs for different um audiences so for whenever",
    "start": "528560",
    "end": "537040"
  },
  {
    "text": "we publish API changes those go in a separate change log so if you're just consuming our libraries you don't have",
    "start": "537040",
    "end": "542240"
  },
  {
    "text": "to go through all the features um that the you know end binary is going to have",
    "start": "542240",
    "end": "548160"
  },
  {
    "text": "uh to figure out what you need to do uh on the development end um and so while",
    "start": "548160",
    "end": "555200"
  },
  {
    "text": "we guarantee relatively few breaking changes uh just as part of our um development process once we get to a",
    "start": "555200",
    "end": "561839"
  },
  {
    "text": "stable point we say okay there will be no breaking changes we guarantee that when you um upgrade this package it",
    "start": "561839",
    "end": "568560"
  },
  {
    "text": "truly will be fearless and you don't have to uh you know anything that breaks we're going to call a bug and we're going to fix it so let's take a look at",
    "start": "568560",
    "end": "576320"
  },
  {
    "text": "how um a couple of things that we've done for particularly consumers of our API um and one caveat that I want to",
    "start": "576320",
    "end": "582080"
  },
  {
    "text": "give here is that we're using Go and um as uh at least I'm sure a few of you are",
    "start": "582080",
    "end": "587360"
  },
  {
    "text": "aware Go is a pretty spartan language uh it doesn't have a lot of features that other programming languages have and as",
    "start": "587360",
    "end": "593680"
  },
  {
    "text": "a result of that we've had to contort ourselves at times to kind of address these shortcomings or not shortcomings",
    "start": "593680",
    "end": "599839"
  },
  {
    "text": "but these uh language design uh features and so this isn't a comprehensive list",
    "start": "599839",
    "end": "606959"
  },
  {
    "text": "here but if you're using a language that offers one of these you might have a few more options available to you um",
    "start": "606959",
    "end": "612800"
  },
  {
    "text": "additionally Go does have some things that are not um kind of things that you",
    "start": "612800",
    "end": "618320"
  },
  {
    "text": "to pay attention to in other languages so we're not shipping uh like it's not a C library where you're shipping a shared",
    "start": "618320",
    "end": "624320"
  },
  {
    "text": "object file and you need to worry about AI compatibility or anything like that it's all sources and so we're uh not",
    "start": "624320",
    "end": "630720"
  },
  {
    "text": "really worried about that here um so uh one thing that we've done as we",
    "start": "630720",
    "end": "637360"
  },
  {
    "text": "um have tried to uh stabilize the collector is we've tried to break everything up into bite-sized pieces so",
    "start": "637360",
    "end": "644000"
  },
  {
    "text": "that it's um a little bit easier for um users to consume hopefully you know we",
    "start": "644000",
    "end": "650399"
  },
  {
    "text": "can separate the versions so if let's say we're uh taking a look at instantiating a an HTTP server to accept",
    "start": "650399",
    "end": "656720"
  },
  {
    "text": "data um we have a package that allows users to configure all of their HTTP servers using a common configuration",
    "start": "656720",
    "end": "662079"
  },
  {
    "text": "format um we might want to stabilize that separately then if they're setting up a gRPC server so we instead of trying",
    "start": "662079",
    "end": "668959"
  },
  {
    "text": "to ship just one big collector API module um we've broken these up into",
    "start": "668959",
    "end": "674160"
  },
  {
    "text": "smaller pit bits um this makes it so that it's easier to um you know we can",
    "start": "674160",
    "end": "680240"
  },
  {
    "text": "stabilize these one by one um in the future maybe uh we can make a v2 before we make a v2 of the rest of them um and",
    "start": "680240",
    "end": "688079"
  },
  {
    "text": "if you're developing a um application with our APIs uh it's a smaller bundle",
    "start": "688079",
    "end": "694640"
  },
  {
    "text": "size you don't have to download a huge set of code you can just download individual modules um the downside here",
    "start": "694640",
    "end": "702399"
  },
  {
    "text": "of course is that um you have to kind of sometimes worry about the the features or the the",
    "start": "702399",
    "end": "709480"
  },
  {
    "text": "versions of the modules and if we put a feature in one um it other modules might",
    "start": "709480",
    "end": "714959"
  },
  {
    "text": "depend on that we haven't really encountered any big issues with this but it's something to pay attention to um",
    "start": "714959",
    "end": "720560"
  },
  {
    "text": "additionally the increased number of modules is potentially a little bit more difficult",
    "start": "720560",
    "end": "726160"
  },
  {
    "text": "to understand by users and it's uh you know it's just more to maintain like we've had to we've mostly solved this",
    "start": "726160",
    "end": "732079"
  },
  {
    "text": "through automation but um as I'm sure you're aware if you have a huge monor repo full of a lot of modules it's going",
    "start": "732079",
    "end": "738639"
  },
  {
    "text": "to be more complicated than um you know a single module that you're just uh shipping",
    "start": "738639",
    "end": "744399"
  },
  {
    "text": "um so uh one thing that we've done um kind of trailing on this um while",
    "start": "744399",
    "end": "749920"
  },
  {
    "text": "stabilizing these modules is we've tried to identify parts that we're confident in and parts that we're not confident in",
    "start": "749920",
    "end": "755680"
  },
  {
    "text": "and split them up and we'll kind of go into why we've done this and some issues that we've seen um so basically um let's",
    "start": "755680",
    "end": "762959"
  },
  {
    "text": "say we've got a package let's say we're um I'll show the a more concrete example in a minute but let's say we're",
    "start": "762959",
    "end": "768000"
  },
  {
    "text": "introducing um something to set up an HTTP server and we have a um let's say",
    "start": "768000",
    "end": "774959"
  },
  {
    "text": "we're doing a 1.0 of that but uh in addition to our stable package inside of our module we have some unstable",
    "start": "774959",
    "end": "781040"
  },
  {
    "text": "features um we can list the you know we can just put like hey this this part is unstable don't depend on this but the",
    "start": "781040",
    "end": "787040"
  },
  {
    "text": "fact of the matter is that the module is 1.0 so if we um stabilize the whole module but just try and call out certain",
    "start": "787040",
    "end": "793120"
  },
  {
    "text": "bits users are probably inevitably going to um depend on that",
    "start": "793120",
    "end": "798279"
  },
  {
    "text": "functionality and if they want to just rely on stable functionality they're",
    "start": "798279",
    "end": "803519"
  },
  {
    "text": "going to have to be very careful to avoid anything that is unstable um and this is you know if something happens",
    "start": "803519",
    "end": "809680"
  },
  {
    "text": "let's say we upgrade from v1.1 to 1.2 um let's say we want to move around the",
    "start": "809680",
    "end": "815920"
  },
  {
    "text": "experimental bits um for example let's say we're making a new package we're renaming it you're going to have a",
    "start": "815920",
    "end": "822160"
  },
  {
    "text": "broken import now where you were trying to depend on you're you're assuming that",
    "start": "822160",
    "end": "827600"
  },
  {
    "text": "the 1.0 module was stable but in fact it",
    "start": "827600",
    "end": "832760"
  },
  {
    "text": "um was it had some unstable bits and that's going to be a little surprising for users so um what we've done as part",
    "start": "832760",
    "end": "842160"
  },
  {
    "text": "of this is uh we have prepended um the we've put the experimental functionality",
    "start": "842160",
    "end": "847680"
  },
  {
    "text": "into new modules and prepended them with an X and then these are sub 1.0 so as",
    "start": "847680",
    "end": "852800"
  },
  {
    "text": "I'll show here in a second we've got for example an HTTP package that helps you configure things related to HTTP um",
    "start": "852800",
    "end": "859440"
  },
  {
    "text": "XHTTP would be the experimental version of that it's going to be pre 1.0 um we're going to give users you know",
    "start": "859440",
    "end": "867199"
  },
  {
    "text": "plenty of notice that things might break and they might go away the whole module might go away and in fact at some point",
    "start": "867199",
    "end": "872560"
  },
  {
    "text": "it would um the idea is that if you have the HTTP module and the XHTP module gradually gradually things would move",
    "start": "872560",
    "end": "878720"
  },
  {
    "text": "from the XHTTP module into the HTTP module as we determine that they're stable and ready to be used um by users",
    "start": "878720",
    "end": "884720"
  },
  {
    "text": "who are expecting the stability um and all along we're going to be providing migration paths either when moving this",
    "start": "884720",
    "end": "891040"
  },
  {
    "text": "functionality to a stable version or just if we change things um but the goal here is that anything inside of this",
    "start": "891040",
    "end": "898000"
  },
  {
    "text": "unstable module is is not guaranteed for the time being so to show an example of",
    "start": "898000",
    "end": "903199"
  },
  {
    "text": "this let's say that we have a consuming module that has an HTTP server uh but we",
    "start": "903199",
    "end": "910560"
  },
  {
    "text": "want to put some open telemet instrumentation on that so anytime we get a request in we want to generate",
    "start": "910560",
    "end": "915680"
  },
  {
    "text": "some traces from that um but we're not so sure that um we're totally satisfied",
    "start": "915680",
    "end": "922000"
  },
  {
    "text": "with the API for this um however the rest of the package is pretty solid we're ready to go so we have what we can",
    "start": "922000",
    "end": "929279"
  },
  {
    "text": "do here is we can use the options pattern and go and we can make that stable so that needs to be you know",
    "start": "929279",
    "end": "935519"
  },
  {
    "text": "that's set in stone we're good with configuring the server and instantiating the server and in fact we're even",
    "start": "935519",
    "end": "941839"
  },
  {
    "text": "comfortable uh doing things like setting up error handlers um but if users want to opt in to using experimental",
    "start": "941839",
    "end": "949040"
  },
  {
    "text": "functionality they can explicitly grab that XHTP package and put that option in",
    "start": "949040",
    "end": "955560"
  },
  {
    "text": "um and this way users are again well aware that they're using experimental",
    "start": "955560",
    "end": "961199"
  },
  {
    "text": "functionality um and uh since it's still pulling in from the internal uh bits of",
    "start": "961199",
    "end": "968000"
  },
  {
    "text": "the HTTP package um things are not going to uh we don't have to change anything",
    "start": "968000",
    "end": "973920"
  },
  {
    "text": "from the stability point of view in the HTTP package there um one kind of final thing that",
    "start": "973920",
    "end": "980639"
  },
  {
    "text": "we've done to help um test out our API changes is we have a",
    "start": "980639",
    "end": "986199"
  },
  {
    "text": "contrib um this is a it's a large undertaking ours has over 200 components",
    "start": "986199",
    "end": "991519"
  },
  {
    "text": "uh it's almost too successful at times um and the thing here is that from the user",
    "start": "991519",
    "end": "999519"
  },
  {
    "text": "standpoint they get a little bit of free advertisement it's in a public um you know major repository any users uh who",
    "start": "999519",
    "end": "1007360"
  },
  {
    "text": "are looking for something will will go here to check it so if you're a developer uh it's some good advertisement um we also kind of offer",
    "start": "1007360",
    "end": "1014240"
  },
  {
    "text": "some uh you know free migrations in terms of APIs dependency upgrades things",
    "start": "1014240",
    "end": "1019360"
  },
  {
    "text": "like that um but it comes with some caveats you have to be willing to um put",
    "start": "1019360",
    "end": "1024400"
  },
  {
    "text": "in the work to um do it and you need somebody that is a maintainer to take a",
    "start": "1024400",
    "end": "1030160"
  },
  {
    "text": "look um at it but uh from our point of view um one thing that we have gained a",
    "start": "1030160",
    "end": "1036240"
  },
  {
    "text": "lot from is that uh any breaking change we make um we already have um let's say",
    "start": "1036240",
    "end": "1043199"
  },
  {
    "text": "you know 70% plus of the ecosystem inside of this contrib so we have a good idea of the usage patterns we know um",
    "start": "1043199",
    "end": "1051520"
  },
  {
    "text": "kind of how people are using it who's using it um and we can kind of help with that migration and in fact uh we have",
    "start": "1051520",
    "end": "1057440"
  },
  {
    "text": "whenever we make an API change we have tests that validate um whether something",
    "start": "1057440",
    "end": "1062640"
  },
  {
    "text": "will break in one of the modules in the contrib and so this kind of helps us get",
    "start": "1062640",
    "end": "1067679"
  },
  {
    "text": "ahead of uh some of the maintenance burden there um and helps uh inform us",
    "start": "1067679",
    "end": "1073280"
  },
  {
    "text": "on who we're going to break ahead of time so we talked about the API and how to",
    "start": "1073280",
    "end": "1080960"
  },
  {
    "text": "avoid chang breaking changes in that part uh now we're going to look into a few tools that you can use uh when",
    "start": "1080960",
    "end": "1088000"
  },
  {
    "text": "you're developing functionality on an end user u binary application um so the first one is a",
    "start": "1088000",
    "end": "1097120"
  },
  {
    "text": "well-known technique um you call it feed gates or um also known as uh feature",
    "start": "1097120",
    "end": "1103360"
  },
  {
    "text": "flags uh the idea is that um you would decouple the migration for a breaking",
    "start": "1103360",
    "end": "1110559"
  },
  {
    "text": "change uh from the usual upgrade of your application uh so you can do that at your own pace it's a pretty similar",
    "start": "1110559",
    "end": "1118080"
  },
  {
    "text": "concept to something like configuration but it is global and it can affect anything uh within your application and",
    "start": "1118080",
    "end": "1125679"
  },
  {
    "text": "the important bit is that uh it has different expectations regarding stability um in our case we roughly",
    "start": "1125679",
    "end": "1132400"
  },
  {
    "text": "follow the Kubernetes model and it is something that can be applied to almost any application one important bit here",
    "start": "1132400",
    "end": "1139039"
  },
  {
    "text": "is that you want to um have the values of those feature gates as soon as",
    "start": "1139039",
    "end": "1145039"
  },
  {
    "text": "possible in the application initialization so that you can change any behavior you need um and so in our",
    "start": "1145039",
    "end": "1151840"
  },
  {
    "text": "case we use CLI flex for this um these are not only useful for making changes",
    "start": "1151840",
    "end": "1157840"
  },
  {
    "text": "but you can also have one of for experiments uh or temporary solutions uh",
    "start": "1157840",
    "end": "1163919"
  },
  {
    "text": "for people so um as an example one big breaking change",
    "start": "1163919",
    "end": "1171280"
  },
  {
    "text": "that we did on the collector uh was that um the servers that were exposed by",
    "start": "1171280",
    "end": "1177840"
  },
  {
    "text": "default by many collector components uh were using the all series address and we",
    "start": "1177840",
    "end": "1184160"
  },
  {
    "text": "thought that did not um abide by the secure by default promise that open telemetry makes because it exposed the",
    "start": "1184160",
    "end": "1191760"
  },
  {
    "text": "servers potentially to network interfaces that the user didn't intend to so we wanted to change that to local",
    "start": "1191760",
    "end": "1198799"
  },
  {
    "text": "host and that of course uh was a big breaking change especially in things",
    "start": "1198799",
    "end": "1203840"
  },
  {
    "text": "like containerized applications uh local host will not uh work and and users will have to to change it",
    "start": "1203840",
    "end": "1210840"
  },
  {
    "text": "um so to do this we use the feature gate and uh so in the kubernetes module model",
    "start": "1210840",
    "end": "1217679"
  },
  {
    "text": "model um we have three stages um on the alpha stage the change was off by",
    "start": "1217679",
    "end": "1225120"
  },
  {
    "text": "default and we would made a warning if people did not change the the default endpoint um to notch users to enable the",
    "start": "1225120",
    "end": "1234080"
  },
  {
    "text": "feature gate uh then at the better stage it was enabled by default this is",
    "start": "1234080",
    "end": "1240320"
  },
  {
    "text": "probably when most people figure out that this was happening um and but users",
    "start": "1240320",
    "end": "1246400"
  },
  {
    "text": "did not have to address that breaking change in that moment uh they could disable the feature gate uh in which",
    "start": "1246400",
    "end": "1253280"
  },
  {
    "text": "case they would get a warning saying like this is going to go away at some point but um they were able to to",
    "start": "1253280",
    "end": "1259600"
  },
  {
    "text": "migrate to this new way of doing things at their own pace and finally there's a stable um stage where users cannot",
    "start": "1259600",
    "end": "1266400"
  },
  {
    "text": "disable it even if they try um this is mostly for people that were disabling it",
    "start": "1266400",
    "end": "1272159"
  },
  {
    "text": "at the beta stage and you would get some instructions to to see the",
    "start": "1272159",
    "end": "1277480"
  },
  {
    "text": "migration um we now feel that we're meeting our secure by default premise",
    "start": "1277480",
    "end": "1282559"
  },
  {
    "text": "and uh if users want to they could still specify the old series address if that's",
    "start": "1282559",
    "end": "1288240"
  },
  {
    "text": "uh the uh right choice for them um but this was a successful example of behind",
    "start": "1288240",
    "end": "1293840"
  },
  {
    "text": "the the feature gate um approach uh so a second thing that you",
    "start": "1293840",
    "end": "1300080"
  },
  {
    "text": "probably want to think about is when to use defaults on your um different",
    "start": "1300080",
    "end": "1305440"
  },
  {
    "text": "configuration flags at a high level there is a trade-off between the configuration",
    "start": "1305440",
    "end": "1311679"
  },
  {
    "text": "burden that you impose on the user and the likelihood that you're going to break them so in other words if you",
    "start": "1311679",
    "end": "1317679"
  },
  {
    "text": "force users to set a particular um to figure out the value that they need to set on a particular configuration uh",
    "start": "1317679",
    "end": "1324720"
  },
  {
    "text": "flag uh then you're not going to break them because they made that choice and you're not going to be able to to change",
    "start": "1324720",
    "end": "1330400"
  },
  {
    "text": "that uh but it is more work for them they need to explicitly think about this and uh you know figure out what value to",
    "start": "1330400",
    "end": "1337600"
  },
  {
    "text": "set um one tool that you can use here is to have multiple layers on your",
    "start": "1337600",
    "end": "1343840"
  },
  {
    "text": "application and uh set the defaults at a higher level so for example um in",
    "start": "1343840",
    "end": "1351240"
  },
  {
    "text": "the case of the collector we have a health chart that packages uh the collector and you could say not specify",
    "start": "1351240",
    "end": "1359039"
  },
  {
    "text": "a default uh at the binary level but specify it uh later at the health chart",
    "start": "1359039",
    "end": "1364840"
  },
  {
    "text": "and this is uh in particular what we did with um or I mean we did have a default",
    "start": "1364840",
    "end": "1372080"
  },
  {
    "text": "but we changed the uh value on the health chart for the server endpoint",
    "start": "1372080",
    "end": "1378000"
  },
  {
    "text": "because we could give you a better uh experience uh so instead of local host we could set the port IP and that way",
    "start": "1378000",
    "end": "1385520"
  },
  {
    "text": "you were able to get connections from from the outside world",
    "start": "1385520",
    "end": "1391320"
  },
  {
    "text": "um it on the other hand if you uh do set a default this could help users um",
    "start": "1391320",
    "end": "1398080"
  },
  {
    "text": "transition um automatically so it's not necessarily the case that you don't want",
    "start": "1398080",
    "end": "1403919"
  },
  {
    "text": "to set any defaults uh but it is uh something important to think of and you could even go all the way of not setting",
    "start": "1403919",
    "end": "1410400"
  },
  {
    "text": "any defaults and providing some sort of tool that generates the config for you",
    "start": "1410400",
    "end": "1416919"
  },
  {
    "text": "okay um so um third tool that we use not only in the collector but in general in",
    "start": "1416919",
    "end": "1423200"
  },
  {
    "text": "open telemetry is to think about stability levels in a more fine grain way that what semantic versioning does",
    "start": "1423200",
    "end": "1430159"
  },
  {
    "text": "semantic versioning is very all or nothing it either allows zero breaking",
    "start": "1430159",
    "end": "1435200"
  },
  {
    "text": "changes or anything goes if you are before v1 and uh we as a project defined",
    "start": "1435200",
    "end": "1442960"
  },
  {
    "text": "um more fine grain uh concept of stability that goes from in development",
    "start": "1442960",
    "end": "1448080"
  },
  {
    "text": "alpha beta to stable and uh this can be quite useful you will not avoid the",
    "start": "1448080",
    "end": "1454799"
  },
  {
    "text": "breaking changes but you are able to um express the level of trust that your",
    "start": "1454799",
    "end": "1460159"
  },
  {
    "text": "users uh should have on your different components and uh how",
    "start": "1460159",
    "end": "1467360"
  },
  {
    "text": "likely breaking changes are to happen and you can also use this for things like expressing how ready to be used in",
    "start": "1467360",
    "end": "1473919"
  },
  {
    "text": "production things are or how healthy the community around a particular component is so we found it pretty",
    "start": "1473919",
    "end": "1480360"
  },
  {
    "text": "useful okay um so now we're going to talk about um",
    "start": "1480360",
    "end": "1485760"
  },
  {
    "text": "ideas that we have not tried ourselves in offenstory or specifically in the collectors uh but that we have seen",
    "start": "1485760",
    "end": "1493600"
  },
  {
    "text": "being successfully used in other projects and uh we would like to try",
    "start": "1493600",
    "end": "1499039"
  },
  {
    "text": "out so the first one would be migrating between configuration schemas automatically this is a pretty common",
    "start": "1501880",
    "end": "1509120"
  },
  {
    "text": "idea um in the collector as a binary application it could look as a subcomand",
    "start": "1509120",
    "end": "1514480"
  },
  {
    "text": "that would allow you to migrate from one configuration schema to the other um the",
    "start": "1514480",
    "end": "1520240"
  },
  {
    "text": "important bit here is that you would reduce the cost of a breaking change uh which is a good strategy when it is",
    "start": "1520240",
    "end": "1527039"
  },
  {
    "text": "unavoidable so even if you're not able to avoid making the breaking change",
    "start": "1527039",
    "end": "1532080"
  },
  {
    "text": "you're able to just do the work for the user um in the case of the the open project",
    "start": "1532080",
    "end": "1540240"
  },
  {
    "text": "we have seen this with telemetry schemas in some way so we think this is a good idea to to think",
    "start": "1540240",
    "end": "1547279"
  },
  {
    "text": "about okay um so this next one comes from Rust uh it's called the SER trick",
    "start": "1548039",
    "end": "1555520"
  },
  {
    "text": "and uh it's only really used when you've got multiple major versions of a module so",
    "start": "1555520",
    "end": "1562000"
  },
  {
    "text": "we have not we're not at 1.0 0 yet so we have not seen any 2.0 um so if you look",
    "start": "1562000",
    "end": "1569120"
  },
  {
    "text": "at the diagram you can see on the right hand side there's a module called mod",
    "start": "1569120",
    "end": "1574320"
  },
  {
    "text": "and there are two major versions of it v1 and v2 there may be some some breaking changes between the two but",
    "start": "1574320",
    "end": "1580400"
  },
  {
    "text": "there's a particular type called my type that remains the same between v1 and v2",
    "start": "1580400",
    "end": "1585600"
  },
  {
    "text": "uh now in your ecosystem there's a dependency called dep that has a function that takes something of the",
    "start": "1585600",
    "end": "1591440"
  },
  {
    "text": "type my type in particular of the v2 version of of this mod and so when",
    "start": "1591440",
    "end": "1597279"
  },
  {
    "text": "you're going to use it on the top u left corner uh you can get a compile time",
    "start": "1597279",
    "end": "1602799"
  },
  {
    "text": "error even if the type is the same between the major versions um because well you're using v1 my type for your",
    "start": "1602799",
    "end": "1610000"
  },
  {
    "text": "variable that you're passing to the dependency and the dependency is expecting v2 and there is one simple way to uh fix",
    "start": "1610000",
    "end": "1618480"
  },
  {
    "text": "this and the idea would be to define the v1 type as an alias of the v2 Right and",
    "start": "1618480",
    "end": "1626960"
  },
  {
    "text": "so um while this may not this may not avoid uh some breaking changes that you",
    "start": "1626960",
    "end": "1633039"
  },
  {
    "text": "can see on your ecosystem it will u keep things working for things that stayed",
    "start": "1633039",
    "end": "1639440"
  },
  {
    "text": "the same across major versions um this is not necessarily a problem on every language but it is in go and so it is a",
    "start": "1639440",
    "end": "1648720"
  },
  {
    "text": "technique that we would want to try out uh if we ever have to release a v2",
    "start": "1648720",
    "end": "1654000"
  },
  {
    "text": "version which I'm sure we will sure",
    "start": "1654000",
    "end": "1660440"
  },
  {
    "text": "yeah I can repeat it as well I just question to understand more this trick",
    "start": "1660600",
    "end": "1665679"
  },
  {
    "text": "so you are for example thinking about releasing for example a v2 of x receiver",
    "start": "1665679",
    "end": "1670880"
  },
  {
    "text": "packages or things like that so people could still work when you do a breaking changes in X receiver for example so",
    "start": "1670880",
    "end": "1678159"
  },
  {
    "text": "that you know that's the idea or something different um",
    "start": "1678159",
    "end": "1684039"
  },
  {
    "text": "so say you have multiple I don't know let me think about an example um like",
    "start": "1684039",
    "end": "1690399"
  },
  {
    "text": "the question is the v2 mod v2 what is this mod is it an experimental package",
    "start": "1690399",
    "end": "1695840"
  },
  {
    "text": "or is it something no the idea is that it's a stable package it's a stable package where parts of the API have",
    "start": "1695840",
    "end": "1701039"
  },
  {
    "text": "changed and other parts have not okay and so the parts that have not changed are you can keep compatibility on those",
    "start": "1701039",
    "end": "1708720"
  },
  {
    "text": "parts by doing this alias trick okay thanks",
    "start": "1708720",
    "end": "1713960"
  },
  {
    "text": "um okay so then a different idea that we have seen uh in this case using the Ras",
    "start": "1713960",
    "end": "1721600"
  },
  {
    "text": "compiler is something that they call crater and it's a bit of a generalization of the contri uh",
    "start": "1721600",
    "end": "1728080"
  },
  {
    "text": "repository idea the uh thing that the Rust compiler does",
    "start": "1728080",
    "end": "1733120"
  },
  {
    "text": "is it looks at every publicly available uh crate out there every package in in",
    "start": "1733120",
    "end": "1738919"
  },
  {
    "text": "Rust and whenever there is a change in the Rust compiler um that could be",
    "start": "1738919",
    "end": "1744799"
  },
  {
    "text": "potentially breaking they check against all of them all of their tests and see",
    "start": "1744799",
    "end": "1750320"
  },
  {
    "text": "if anything breaks um we would need a gosp specific tool for doing this you",
    "start": "1750320",
    "end": "1756640"
  },
  {
    "text": "could call it greater i think that would be a great name and uh that would give you um both information of how bad a",
    "start": "1756640",
    "end": "1765440"
  },
  {
    "text": "breaking change is like how many users it is affecting it could give you um the",
    "start": "1765440",
    "end": "1771360"
  },
  {
    "text": "tools to contact those users that are um being um affected by the breaking chains",
    "start": "1771360",
    "end": "1777440"
  },
  {
    "text": "and maybe work with them to to reduce the breakage in in the ecosystem um and in general inform you when there",
    "start": "1777440",
    "end": "1784559"
  },
  {
    "text": "are u more ambiguous cases where you don't know if something is being relied",
    "start": "1784559",
    "end": "1789919"
  },
  {
    "text": "upon by by users okay and lastly one other thing",
    "start": "1789919",
    "end": "1797000"
  },
  {
    "text": "that we are trying in some way but not really using deeply is to integrate into",
    "start": "1797000",
    "end": "1804080"
  },
  {
    "text": "our CI some automated checks uh for breaking changes currently we have to be",
    "start": "1804080",
    "end": "1809279"
  },
  {
    "text": "very careful and we rely on maintainers uh carefully reviewing PRs to avoid breaking",
    "start": "1809279",
    "end": "1815240"
  },
  {
    "text": "changes um but there are automated tools out there that allow you to check for these breaking changes and avoid this",
    "start": "1815240",
    "end": "1822080"
  },
  {
    "text": "whole thing um in the case of go there's API diff which um works today but is not",
    "start": "1822080",
    "end": "1829279"
  },
  {
    "text": "been actively updated to account for um you know generics in Go for example uh",
    "start": "1829279",
    "end": "1834799"
  },
  {
    "text": "so uh we would like to see more development there and uh have something that is uh more like cargo simber text",
    "start": "1834799",
    "end": "1841840"
  },
  {
    "text": "which is uh pretty um detailed in the level of information",
    "start": "1841840",
    "end": "1846880"
  },
  {
    "text": "that it gives you about um how you might be breaking your",
    "start": "1846880",
    "end": "1852279"
  },
  {
    "text": "users okay um so that was all um our",
    "start": "1852279",
    "end": "1858159"
  },
  {
    "text": "main repository you can check it with that bit.ly the address or the QR code",
    "start": "1858159",
    "end": "1863200"
  },
  {
    "text": "uh there and if you want to reach us out uh you can do so in the auto collector",
    "start": "1863200",
    "end": "1868960"
  },
  {
    "text": "dev Slack channel on the CNC slack thanks thank you [Applause]",
    "start": "1868960",
    "end": "1880228"
  },
  {
    "text": "we'll take questions if you have any if not uh thank you for coming",
    "start": "1884720",
    "end": "1890360"
  },
  {
    "text": "can you use the microphone i'm too shy for the microphone um if you",
    "start": "1890960",
    "end": "1898720"
  },
  {
    "text": "go back to a few slides on the migration tool we actually have something like that in the in the operator so whenever",
    "start": "1898720",
    "end": "1905440"
  },
  {
    "text": "a user is migrating or changing the version of the operator from for I don't know from one 0 to 101 the operator",
    "start": "1905440",
    "end": "1913679"
  },
  {
    "text": "knows the change log and before releasing 101 for the operator we",
    "start": "1913679",
    "end": "1919919"
  },
  {
    "text": "developers maintainers of the operator go there and manually change do a migration for the end user so that's",
    "start": "1919919",
    "end": "1927039"
  },
  {
    "text": "something that exists already people can use mhm it's cool yeah yeah i guess in",
    "start": "1927039",
    "end": "1932799"
  },
  {
    "text": "the general case it has some complication regarding like different configuration sources if you pass your",
    "start": "1932799",
    "end": "1939279"
  },
  {
    "text": "configuration through HTTP you're we're not going to able be able to apply the changes so we need to think about the",
    "start": "1939279",
    "end": "1946080"
  },
  {
    "text": "the user interface for that a question about the that same thing the",
    "start": "1946080",
    "end": "1952080"
  },
  {
    "text": "config uh do you intend to record explicitly the schema version in the config file or you'll be inferring it",
    "start": "1952080",
    "end": "1958880"
  },
  {
    "text": "based on the content or something so we've talked about putting a schema",
    "start": "1958880",
    "end": "1964000"
  },
  {
    "text": "version inside of the config file kind of like what Kubernetes has um I think you would either have to do that or you'd have to pass through the command",
    "start": "1964000",
    "end": "1969679"
  },
  {
    "text": "line but I think having a schema version the config file would probably be a good way to go i don't know Pablo what's your",
    "start": "1969679",
    "end": "1975600"
  },
  {
    "text": "what's your take yeah I think that's probably unavoidable um I don't know i",
    "start": "1975600",
    "end": "1982240"
  },
  {
    "text": "would want to make this something that is pluggable and component developers",
    "start": "1982240",
    "end": "1987519"
  },
  {
    "text": "can like define their own migration path for their own uh components so maybe we",
    "start": "1987519",
    "end": "1994080"
  },
  {
    "text": "need even schema versions for the different components in the collector um but yeah I don't I don't see another way",
    "start": "1994080",
    "end": "2001519"
  },
  {
    "text": "of of going about this that is so enough to use per component it's going to like clutter the the config file a lot right",
    "start": "2001519",
    "end": "2009360"
  },
  {
    "text": "yeah yeah um yeah I mean I suppose this would not be used like this",
    "start": "2009360",
    "end": "2016880"
  },
  {
    "text": "would only be used if you release a new major version of the component or so so presumably it's not every component that",
    "start": "2016880",
    "end": "2023760"
  },
  {
    "text": "you need to specify the the schema version yeah okay thank you",
    "start": "2023760",
    "end": "2030039"
  },
  {
    "text": "hi uh I have a question like a few slides after where you have this v_sub_1 v_sub_2 with redefining the variable",
    "start": "2036960",
    "end": "2044240"
  },
  {
    "text": "yeah the next one um when you say here that in mo like in first version you define the type which",
    "start": "2044240",
    "end": "2051520"
  },
  {
    "text": "is this uh version two uh it means that you uh so how can you define in already",
    "start": "2051520",
    "end": "2059040"
  },
  {
    "text": "released package a new variable what here mean meant so you would release a",
    "start": "2059040",
    "end": "2064480"
  },
  {
    "text": "new minor version of the V1 series that depends on the V2 version and uh so you",
    "start": "2064480",
    "end": "2072560"
  },
  {
    "text": "still do releasing the like the next like the same version for V2 in order to",
    "start": "2072560",
    "end": "2077599"
  },
  {
    "text": "be able to use the V sorry for V1 in order to to to be able to use V2 correct",
    "start": "2077599",
    "end": "2084638"
  },
  {
    "text": "it sorry I did not so um like you need to release the v1 version uh with",
    "start": "2084639",
    "end": "2091280"
  },
  {
    "text": "defined v2 yeah yeah so you need to do a new release of the v1 series in order",
    "start": "2091280",
    "end": "2096480"
  },
  {
    "text": "for this to work uh okay",
    "start": "2096480",
    "end": "2102359"
  },
  {
    "text": "there's um repository out there that has examples for this uh with rust i can I",
    "start": "2102720",
    "end": "2110720"
  },
  {
    "text": "can share that uh later with anybody that is interested",
    "start": "2110720",
    "end": "2116599"
  },
  {
    "text": "all right going once going twice okay thank you everyone thank you",
    "start": "2125280",
    "end": "2131680"
  }
]