[
  {
    "text": "good morning folks uh and thanks to uh Anand and Savita for that wonderful session on uh cacd pipelines as code and",
    "start": "120",
    "end": "8639"
  },
  {
    "text": "uh and welcome to a session on uh continuous profiling with uh parka uh and in this session we'll uh take a deep",
    "start": "8639",
    "end": "14599"
  },
  {
    "text": "dive into the world of uh continuous profiling and and discover how parka uh helps initiate that uh process uh",
    "start": "14599",
    "end": "22199"
  },
  {
    "text": "easier uh but first uh let's have a look at this uh CPU uh CPU usage metrics",
    "start": "22199",
    "end": "29599"
  },
  {
    "text": "graph uh and I bet uh it triggers deju for lot of us in the in the room today like uh",
    "start": "29599",
    "end": "36120"
  },
  {
    "text": "the the random spikes uh that disrup the otherwise Cal line uh calm Baseline so",
    "start": "36120",
    "end": "42360"
  },
  {
    "text": "it usually like would have occurred once or twice in our uh a lot of times in her career so um and and whenever uh",
    "start": "42360",
    "end": "50079"
  },
  {
    "text": "something like this happens like uh theories often uh emerge within the teammates like one might attribute these",
    "start": "50079",
    "end": "56559"
  },
  {
    "text": "spikes to uh the garbage collection runs and and someone else might suggest it's",
    "start": "56559",
    "end": "61640"
  },
  {
    "text": "uh it's triggered by a problematic code code path uh in the admin uh user users",
    "start": "61640",
    "end": "67720"
  },
  {
    "text": "uh uh tasks and stuff like that and and those are theories and and and theories",
    "start": "67720",
    "end": "73439"
  },
  {
    "text": "are theories and and what we need is data so data something like this uh that",
    "start": "73439",
    "end": "79360"
  },
  {
    "text": "uh that can give um detailed idea into like uh what was really consuming the",
    "start": "79360",
    "end": "84520"
  },
  {
    "text": "CPU uh during those spikes uh and even uh to the to the details of to uh the",
    "start": "84520",
    "end": "90520"
  },
  {
    "text": "functions and the line numbers in the code uh where the resources are being spent uh and and imagine how much easier",
    "start": "90520",
    "end": "97000"
  },
  {
    "text": "it would have been uh if we had these kind of solid data to uh to back our theories in the first place uh and",
    "start": "97000",
    "end": "102840"
  },
  {
    "text": "that's the uh Power of continuous profiling uh it makes your uh performance uh debugging experience",
    "start": "102840",
    "end": "109920"
  },
  {
    "text": "smoother and and also like insightful um yeah uh so who are we like",
    "start": "109920",
    "end": "117000"
  },
  {
    "text": "I'm uh Manoj a software engineer at polar signals and and I'm an open source Enthusiast uh and I'm also a maintainer",
    "start": "117000",
    "end": "123560"
  },
  {
    "text": "of parka which we're going to uh talk a lot about today uh and I'm also a creator of uh responsi app so that's on",
    "start": "123560",
    "end": "131039"
  },
  {
    "text": "a totally different vertical from what I'm going to talk about today so it's a uh Dev tool for frontend developers",
    "start": "131039",
    "end": "137920"
  },
  {
    "text": "passed along if you have any uh friends or colleagues who are into uh frontend",
    "start": "137920",
    "end": "143160"
  },
  {
    "text": "development um yeah and that's about me",
    "start": "143160",
    "end": "148319"
  },
  {
    "text": "sua hello uh I'm sua um so I stare at all",
    "start": "148760",
    "end": "156120"
  },
  {
    "text": "the pretty icicle graphs uh Mano mils all day so that's my day job and uh I am",
    "start": "156120",
    "end": "162920"
  },
  {
    "text": "also an open- source maintainer of paraka agent and parad uh and I've been",
    "start": "162920",
    "end": "167959"
  },
  {
    "text": "working at Pol signals for 2 years now almost uh with this product and I'm very",
    "start": "167959",
    "end": "173120"
  },
  {
    "text": "excited to uh share uh what we have built uh with you all now it's over to",
    "start": "173120",
    "end": "179120"
  },
  {
    "text": "Manoj uh he'll carry on and I'll be back in a bit so uh let's jump straight into the",
    "start": "179120",
    "end": "187879"
  },
  {
    "text": "uh heart of the discussion today profiling um profiling is uh is a",
    "start": "187879",
    "end": "192920"
  },
  {
    "text": "phenomenon that's been around since uh the 60s like uh it evolved with the time",
    "start": "192920",
    "end": "198400"
  },
  {
    "text": "when uh modern programming languages were were getting uh evolved so uh and",
    "start": "198400",
    "end": "204560"
  },
  {
    "text": "and let's break it down like profiling is is all about um analyzing a program's EX execution with an emphasis on uh",
    "start": "204560",
    "end": "211799"
  },
  {
    "text": "measuring how the resources are being used by the program and by resources here it can be CPU memory or like IO or",
    "start": "211799",
    "end": "219200"
  },
  {
    "text": "whatever um and and also like uh it it gives reports uh that are very detailed",
    "start": "219200",
    "end": "225000"
  },
  {
    "text": "um up to the line number in the code that says like where uh the resources are being spent uh and and things like",
    "start": "225000",
    "end": "233480"
  },
  {
    "text": "that uh there are different approaches to profiling and and today we going to uh focus on Sample profiling",
    "start": "233480",
    "end": "240480"
  },
  {
    "text": "so uh sample profiling is an uh is an approach where we uh we observe a program's execution for fixed amount of",
    "start": "240480",
    "end": "247239"
  },
  {
    "text": "time say for some 10 seconds we observe programs execution and during those 10 seconds like uh we sample uh the",
    "start": "247239",
    "end": "254720"
  },
  {
    "text": "programs function call stack uh for every like constant interval say like",
    "start": "254720",
    "end": "259840"
  },
  {
    "text": "100 times per second so so by doing that over the course of the 10 seconds we'll have ,000 uh samples to work with and",
    "start": "259840",
    "end": "267560"
  },
  {
    "text": "that's a good enough number uh to get idea into uh what was really happening within the uh within the program um yeah",
    "start": "267560",
    "end": "276280"
  },
  {
    "text": "and and and considering the fact that uh sample profilers don't uh like continuously monitor each and every",
    "start": "276280",
    "end": "282080"
  },
  {
    "text": "change in the program uh it's very uh low in terms of the overhead and also",
    "start": "282080",
    "end": "288000"
  },
  {
    "text": "like uh making it suitable for uh for for a lot of common workload that we run in our",
    "start": "288000",
    "end": "294000"
  },
  {
    "text": "Cloud so uh so why do you want to uh profile our applications right one uh to",
    "start": "294000",
    "end": "300240"
  },
  {
    "text": "uh to make our applications faster uh say you run an e-commerce store and uh",
    "start": "300240",
    "end": "305680"
  },
  {
    "text": "and in the e-commerce world uh the the golden rule is pretty clear right like your sales numbers are directly tied to",
    "start": "305680",
    "end": "312240"
  },
  {
    "text": "how your how fast your website is so uh so the profiling comes in and helps you uh identify the bottlenecks so that um",
    "start": "312240",
    "end": "320120"
  },
  {
    "text": "you can uh address those and and like potentially uh increase your sales numbers and also and also to uh cut cost",
    "start": "320120",
    "end": "328360"
  },
  {
    "text": "on your uh infra bills um usually like applications run code where uh 30% of",
    "start": "328360",
    "end": "335520"
  },
  {
    "text": "the resources are spent on easily optimizable code which we which we don't",
    "start": "335520",
    "end": "340720"
  },
  {
    "text": "uh optimize because we don't have the Insight that uh it's being wasted so one with with continuous profiling you'll",
    "start": "340720",
    "end": "346919"
  },
  {
    "text": "get clear insights into uh which parts of the code it's do uh like wasting the resources so that you can um",
    "start": "346919",
    "end": "353759"
  },
  {
    "text": "strategically like apply uh optimizations to those and and like in turn uh uh cut your Cloud",
    "start": "353759",
    "end": "361960"
  },
  {
    "text": "bills so like we just saw profiling is uh is an incredible uh tool right but uh",
    "start": "361960",
    "end": "368160"
  },
  {
    "text": "but but traditional profiling it has its uh limitations uh it's very momentary like",
    "start": "368160",
    "end": "374000"
  },
  {
    "text": "uh whenever you run profiling you'll get the samples and and once you stop it uh",
    "start": "374000",
    "end": "379720"
  },
  {
    "text": "you're not going to know what's happening in the the application so that's uh momentary and and also it's",
    "start": "379720",
    "end": "384800"
  },
  {
    "text": "very manual um you you face an issue then you set up profilers and start collecting profiles and and stop it",
    "start": "384800",
    "end": "392440"
  },
  {
    "text": "you'll you you'll have to do the cycle again whenever you run into a performance problem again and also like",
    "start": "392440",
    "end": "398560"
  },
  {
    "text": "it's not very easy to uh get profiles from production uh you'll have to like either SSH into the instance or uh are",
    "start": "398560",
    "end": "406599"
  },
  {
    "text": "probably like port forward to a local and and and extract the profiles from your application so all these are like",
    "start": "406599",
    "end": "414039"
  },
  {
    "text": "uh both uh time consuming and also uh very error prone uh when we when we do",
    "start": "414039",
    "end": "419440"
  },
  {
    "text": "do it in our production applications and and considering uh the fact how powerful",
    "start": "419440",
    "end": "424479"
  },
  {
    "text": "profiling is and and the developer experience is uh is not so ideal so so we wanted to uh solve that problem some",
    "start": "424479",
    "end": "431400"
  },
  {
    "text": "uh somehow and um and and that's where uh The Continuous profiling uh comes",
    "start": "431400",
    "end": "436479"
  },
  {
    "text": "into picture so continuous profiling uh like the uh like the name says like uh",
    "start": "436479",
    "end": "443720"
  },
  {
    "text": "it's an act of continuously uh collecting profiles from uh from your application or a said duration of time",
    "start": "443720",
    "end": "450960"
  },
  {
    "text": "or or the lifetime of the program so that you you have a constant trail of what's happening within uh within your",
    "start": "450960",
    "end": "457639"
  },
  {
    "text": "applications uh and since uh like we already mentioned uh the the sample profiling is very low uh in terms of",
    "start": "457639",
    "end": "464120"
  },
  {
    "text": "overhead um we can uh like with any other profiling uh observability data",
    "start": "464120",
    "end": "470400"
  },
  {
    "text": "like you'll not know when you'll need the data so so it's always good to uh collect it at low head using continuous",
    "start": "470400",
    "end": "476800"
  },
  {
    "text": "Prof continu profiling so uh so how does the whole thing work right like so uh we we employ",
    "start": "476800",
    "end": "484759"
  },
  {
    "text": "the sample uh profilers to continuously uh collect profiles from from all the",
    "start": "484759",
    "end": "489960"
  },
  {
    "text": "processes that are run uh that are running in a node and and uh and we tag the data with uh with with required",
    "start": "489960",
    "end": "497479"
  },
  {
    "text": "metadata that will uh later allow us to um slice and dice the data to get uh",
    "start": "497479",
    "end": "503479"
  },
  {
    "text": "profiles from each and every workload that we uh specifically need to look into",
    "start": "503479",
    "end": "510000"
  },
  {
    "text": "um so in addition to uh solving the uh the developer experience problem of traditional profiling uh continuous",
    "start": "510000",
    "end": "516640"
  },
  {
    "text": "profiling also uh brings in uh a bunch of uh benefits on on top of that uh one",
    "start": "516640",
    "end": "522919"
  },
  {
    "text": "your your development is in uh production uh uh like even though we we",
    "start": "522919",
    "end": "527920"
  },
  {
    "text": "strive so hard to uh make our development environments like as close as uh",
    "start": "527920",
    "end": "532959"
  },
  {
    "text": "production um we we simply won't be able to uh replicate the same workload in our local uh and and and by by not doing",
    "start": "532959",
    "end": "540920"
  },
  {
    "text": "that we're going to uh uh miss out on the crucial data that we uh get from the production over overloads uh and and",
    "start": "540920",
    "end": "548519"
  },
  {
    "text": "continuous uh profiling like helps uh solve that Gap and also the data and context over",
    "start": "548519",
    "end": "556040"
  },
  {
    "text": "time right so once you emplo a continuous profiler you you'll have this profile Trail over time uh like across",
    "start": "556040",
    "end": "562320"
  },
  {
    "text": "various events like roll outs and and also like production incidents uh so that like whenever uh deployment happens",
    "start": "562320",
    "end": "569640"
  },
  {
    "text": "and and your and if your performance numbers go sou like you can uh go compare the profiles before the",
    "start": "569640",
    "end": "575360"
  },
  {
    "text": "deployment and and after the deployment and see and see exactly like uh which part of your application has degraded",
    "start": "575360",
    "end": "581600"
  },
  {
    "text": "and and see like what's wrong and and fix it immediately so that you uh you'll",
    "start": "581600",
    "end": "587279"
  },
  {
    "text": "um eliminate the regression in your performance goals um yeah so the the G",
    "start": "587279",
    "end": "592760"
  },
  {
    "text": "is like um it it's possible absolutely possible to uh profile your production",
    "start": "592760",
    "end": "598440"
  },
  {
    "text": "or CL all the time and also like we employ our uh continuous profiler in our",
    "start": "598440",
    "end": "603519"
  },
  {
    "text": "production environments and and also like our users do that all the while and and by doing so like uh in addition to",
    "start": "603519",
    "end": "610760"
  },
  {
    "text": "uh the performance insights with with the help of uh the the profile data we",
    "start": "610760",
    "end": "615959"
  },
  {
    "text": "day to-day we discover like uh even different uh insights into into our own",
    "start": "615959",
    "end": "621279"
  },
  {
    "text": "code that helps us solve bugs and and even other kind of",
    "start": "621279",
    "end": "627000"
  },
  {
    "text": "stuff so uh so how do you tap into these benefits right so parka is our uh answer",
    "start": "627120",
    "end": "632519"
  },
  {
    "text": "to that uh parka is an open source continuous profiler uh developed by uh",
    "start": "632519",
    "end": "638079"
  },
  {
    "text": "polar signals and and it easily integrates with uh cetes environments um",
    "start": "638079",
    "end": "643920"
  },
  {
    "text": "it it runs an agent to collect the profiles and the agent is deployed as a uh uh as a demon Set uh and it's also an",
    "start": "643920",
    "end": "652240"
  },
  {
    "text": "uh ebpf based uh zero instrumentation profiler so it doesn't uh need any code changes to your application you just",
    "start": "652240",
    "end": "658560"
  },
  {
    "text": "have to deploy the agent as a demon set and and it starts at Magic so it it discovers the uh processes uh each and",
    "start": "658560",
    "end": "666000"
  },
  {
    "text": "every process that runs in the node and uh and it attaches profilers to all of those and and collecting samples from",
    "start": "666000",
    "end": "671760"
  },
  {
    "text": "those and it also like um indexes the collected profiles with uh with",
    "start": "671760",
    "end": "677240"
  },
  {
    "text": "kubernetes metadata like uh label values uh so that later uh Whenever there is an",
    "start": "677240",
    "end": "682839"
  },
  {
    "text": "issue you can uh query for the exact uh key value pair that you're looking for",
    "start": "682839",
    "end": "688320"
  },
  {
    "text": "in extract the data for those uh let's have a quick look at uh",
    "start": "688320",
    "end": "693800"
  },
  {
    "text": "parcast architecture so it it has a very uh simple straightforward architecture where uh the agent the ebpf based agent",
    "start": "693800",
    "end": "700839"
  },
  {
    "text": "it it collects the profiles um a bit more on that from sua in a bit um and",
    "start": "700839",
    "end": "706560"
  },
  {
    "text": "and it sends the profiles to uh the Parker server where we um process the",
    "start": "706560",
    "end": "712040"
  },
  {
    "text": "data like do a bunch of uh uh syation and and other uh enhancements to that",
    "start": "712040",
    "end": "718440"
  },
  {
    "text": "and we save gave it to uh the profile store uh which is backed by uh a frost DB which is a custom built uh column",
    "start": "718440",
    "end": "727240"
  },
  {
    "text": "edable store uh that we specifically developed at uh polar signals again uh",
    "start": "727240",
    "end": "732839"
  },
  {
    "text": "and that in turn like stores the data into uh the object store um and the same",
    "start": "732839",
    "end": "738360"
  },
  {
    "text": "happens from the from the UI like whenever we want to query something uh it s request to the querier that uh in",
    "start": "738360",
    "end": "744839"
  },
  {
    "text": "turn uh gets the ne necessary data from the profile store and and and we render",
    "start": "744839",
    "end": "749920"
  },
  {
    "text": "cool reports on the UI okay uh let's uh take a quick look at",
    "start": "749920",
    "end": "758160"
  },
  {
    "text": "uh how um how park car like works and and how it will help us solve the uh",
    "start": "758160",
    "end": "764199"
  },
  {
    "text": "performance problems uh if if you're curious like uh you can go to demo. par.",
    "start": "764199",
    "end": "769320"
  },
  {
    "text": "Dev on your own and um and have an handson experience on on how it",
    "start": "769320",
    "end": "775600"
  },
  {
    "text": "works okay um uh this is the uh parcast uh",
    "start": "777839",
    "end": "785199"
  },
  {
    "text": "Profile Explorer uh we can like on High level we can uh um divide it into three",
    "start": "785199",
    "end": "790639"
  },
  {
    "text": "parts like the first one is the uh the the query selector where you uh like",
    "start": "790639",
    "end": "796720"
  },
  {
    "text": "apply the queries to get the specific uh data for the specific workload and",
    "start": "796720",
    "end": "804519"
  },
  {
    "text": "uh okay looks like the demo guards are not not with us today but but I still",
    "start": "806240",
    "end": "812120"
  },
  {
    "text": "have uh the local Runing I'll I'll try and pull that",
    "start": "812120",
    "end": "817639"
  },
  {
    "text": "up okay so uh we can see the metric graph uh below that um uh the the metrix",
    "start": "820040",
    "end": "827519"
  },
  {
    "text": "graph like uh right now we we seeing just one uh one metrix in the metrix graph that's because uh my local I'm",
    "start": "827519",
    "end": "834560"
  },
  {
    "text": "just processing a single process but in in your production no mod you'll you'll be able to see like uh one uh metrix",
    "start": "834560",
    "end": "843680"
  },
  {
    "text": "line for each of the process that you run so that like you can see uh up to the uh details like um what's being uh",
    "start": "843680",
    "end": "851839"
  },
  {
    "text": "consumed and and how much each process is uh uh is using the CPU and stuff like that and and below that we have the uh",
    "start": "851839",
    "end": "859680"
  },
  {
    "text": "visualization section where uh where we can um see uh See more details on uh on",
    "start": "859680",
    "end": "867560"
  },
  {
    "text": "within the application what was happening that was uh taking up the CPU so uh this is an uh this visualization",
    "start": "867560",
    "end": "874160"
  },
  {
    "text": "is called icle graph this is uh most commonly used visualization for performance data um on a high level like",
    "start": "874160",
    "end": "882839"
  },
  {
    "text": "um the the flame graph the the icicle graphs like uh the vertical space taken",
    "start": "882839",
    "end": "888680"
  },
  {
    "text": "by each of the node uh it represents how much resource it takes say for this root node uh it represents uh 100% of uh",
    "start": "888680",
    "end": "896600"
  },
  {
    "text": "resource usage and and and within that node like uh we can see uh each of the",
    "start": "896600",
    "end": "902000"
  },
  {
    "text": "stack traces and and how much resource it takes um and and things like that so",
    "start": "902000",
    "end": "907399"
  },
  {
    "text": "so this one it uh the route usually takes 100% since it like uh it combines everything within that process and",
    "start": "907399",
    "end": "914279"
  },
  {
    "text": "within that here if you see the the scrape Loop has taken uh 16% of the CPU",
    "start": "914279",
    "end": "919560"
  },
  {
    "text": "and and the serve has taken uh 11% and and the run time has taken uh 55% and so",
    "start": "919560",
    "end": "925839"
  },
  {
    "text": "on um yeah you can Al like dive deeper into specific sections here like say you",
    "start": "925839",
    "end": "931880"
  },
  {
    "text": "want to know what's uh within the scrape you can click on it and it'll expand the uh the call stack within that so that",
    "start": "931880",
    "end": "938800"
  },
  {
    "text": "you can drill deeper like go into the the io and and see uh more more details",
    "start": "938800",
    "end": "945240"
  },
  {
    "text": "on on each of those um yeah uh that's about it and and also like um uh the the",
    "start": "945240",
    "end": "953079"
  },
  {
    "text": "query section you can uh you can use the kubernetes uh uh label values to uh",
    "start": "953079",
    "end": "959440"
  },
  {
    "text": "to to query for specific workloud say we have instance and",
    "start": "959440",
    "end": "965000"
  },
  {
    "text": "uh so the this just runs in my local so doesn't have a lot of uh kues metadata",
    "start": "965000",
    "end": "971240"
  },
  {
    "text": "but but in our production or somewhere where we uh enrich the processes with metadata you can query them with uh with",
    "start": "971240",
    "end": "978240"
  },
  {
    "text": "with each and one of the uh data that that's there um yeah and another um like",
    "start": "978240",
    "end": "985519"
  },
  {
    "text": "cool thing that you can do like I was uh mentioning before compar profiles before and after the uh deployment you can ask",
    "start": "985519",
    "end": "992160"
  },
  {
    "text": "use this compare uh um feature where um you you'll have like two metric graph",
    "start": "992160",
    "end": "999000"
  },
  {
    "text": "now and and and on this like you can select two profiles one on the left and one on the right and and so that we'll",
    "start": "999000",
    "end": "1005800"
  },
  {
    "text": "we'll uh compare both and and see like how it performed so I've selected two",
    "start": "1005800",
    "end": "1011759"
  },
  {
    "text": "points here and and the visualization now shows a uh a comparison of these two",
    "start": "1011759",
    "end": "1016839"
  },
  {
    "text": "profiles a differential view of these two profiles and and the things that are green are uh are improved in the second",
    "start": "1016839",
    "end": "1023639"
  },
  {
    "text": "Point uh compared to the first one and and the red things are the ones that are degraded in performance um so say uh",
    "start": "1023639",
    "end": "1031720"
  },
  {
    "text": "like uh I I'll compare uh a point where there was a high CP utilization with",
    "start": "1031720",
    "end": "1037640"
  },
  {
    "text": "with the one uh that's with less CP",
    "start": "1037640",
    "end": "1041480"
  },
  {
    "text": "utilization so that we we'll see a lot of white uh like a lot of green here since uh the",
    "start": "1045640",
    "end": "1051799"
  },
  {
    "text": "the performance has has improved between the compared points and and if you compare a low Point here and an High",
    "start": "1051799",
    "end": "1057600"
  },
  {
    "text": "Point High Point here um we'll we'll see more data in in red since uh since the",
    "start": "1057600",
    "end": "1064440"
  },
  {
    "text": "CPU utilization on the second uh point is higher than the uh the first one um",
    "start": "1064440",
    "end": "1071919"
  },
  {
    "text": "yeah and and the other thing is uh the the targets the targets uh like in the Prometheus targets it uh it gives an",
    "start": "1071919",
    "end": "1078679"
  },
  {
    "text": "idea into what uh what the agents are uh what are the agents that are running and",
    "start": "1078679",
    "end": "1084159"
  },
  {
    "text": "uh that are sending data to the uh parka server um and talking about agents uh",
    "start": "1084159",
    "end": "1089480"
  },
  {
    "text": "I'm going to uh hand over uh to sua now to uh talk about all the magic that the",
    "start": "1089480",
    "end": "1095120"
  },
  {
    "text": "agent",
    "start": "1095120",
    "end": "1097480"
  },
  {
    "text": "does",
    "start": "1107320",
    "end": "1110320"
  },
  {
    "text": "hello um I'm back so um you saw all these pretty uh stack traces that uh",
    "start": "1130400",
    "end": "1138000"
  },
  {
    "text": "mano was just showing you and but how does all of that information come from",
    "start": "1138000",
    "end": "1144400"
  },
  {
    "text": "uh that's basically what the agent does it collects um all of this metadata you",
    "start": "1144400",
    "end": "1151880"
  },
  {
    "text": "know like uh the name of the for any binary that you're running the name of the process uh the name of the port the",
    "start": "1151880",
    "end": "1158360"
  },
  {
    "text": "name of your cluster uh process ID it it just covers all the binaries and uh it",
    "start": "1158360",
    "end": "1165600"
  },
  {
    "text": "collects information about them makes that into stack traces that's where we use uh ebpf under the hood in kernel",
    "start": "1165600",
    "end": "1173320"
  },
  {
    "text": "space then it uh compresses them into a format uh like a very uh low space uh",
    "start": "1173320",
    "end": "1182960"
  },
  {
    "text": "taking optimized format and then it sends them to the Parker server for uh",
    "start": "1182960",
    "end": "1190120"
  },
  {
    "text": "visualization so but where's the magic so it's zero instrumentation you know",
    "start": "1190120",
    "end": "1195480"
  },
  {
    "text": "you just deploy since we do this in the uh all of it's automated all you need to",
    "start": "1195480",
    "end": "1201440"
  },
  {
    "text": "do is like uh you don't have to do any scripting you just need to run the binary with one or two flags and you're",
    "start": "1201440",
    "end": "1209480"
  },
  {
    "text": "good to go more magic it's very low overhead uh we are actually doing some",
    "start": "1209480",
    "end": "1214960"
  },
  {
    "text": "very uh low-level things like reading registers at some point uh but we do",
    "start": "1214960",
    "end": "1220200"
  },
  {
    "text": "them using ebpf so um we have extremely low overhead it does not actually take",
    "start": "1220200",
    "end": "1227039"
  },
  {
    "text": "up uh CPU space and it does not affect anything else that you're running on",
    "start": "1227039",
    "end": "1232440"
  },
  {
    "text": "your machine or your clusters so it doesn't interfere at all next thing so how do we do this",
    "start": "1232440",
    "end": "1238799"
  },
  {
    "text": "target Discovery though so you just saw uh these in the uh stack traces that man",
    "start": "1238799",
    "end": "1245960"
  },
  {
    "text": "was just showing all of this information we take a binary and uh the agent has uh",
    "start": "1245960",
    "end": "1253640"
  },
  {
    "text": "discovers all these targets or the binaries and then uh it it's we sort of",
    "start": "1253640",
    "end": "1259400"
  },
  {
    "text": "get a list of targets like uh if you see at the bottom of the screen you can see the process ID you know that",
    "start": "1259400",
    "end": "1266799"
  },
  {
    "text": "39174 uh the par agent CPU and you see uh there's the the highlighted part in",
    "start": "1266799",
    "end": "1274120"
  },
  {
    "text": "green it's uh it's the name of the binary it's for vs code you know and vs code is I think somebody something that",
    "start": "1274120",
    "end": "1280520"
  },
  {
    "text": "everybody is familiar with it's a code editor um so Target Discovery in the",
    "start": "1280520",
    "end": "1287720"
  },
  {
    "text": "agent is systemwide uh if it's a binary if it's a process um it doesn't like we profile it",
    "start": "1287720",
    "end": "1295480"
  },
  {
    "text": "whether it's containerized whether it's bare metal uh we profile it and we discover all the binaries associated",
    "start": "1295480",
    "end": "1302039"
  },
  {
    "text": "with the process and this means you can see stack traces for everything that's",
    "start": "1302039",
    "end": "1308039"
  },
  {
    "text": "running on your system down to the last system call and uh so I was talking",
    "start": "1308039",
    "end": "1314480"
  },
  {
    "text": "about vs code right this is what vs code looks like under the hood uh it's intentionally um an older image from",
    "start": "1314480",
    "end": "1322520"
  },
  {
    "text": "like a few months ago when I was developing this for like uh jitted Stacks uh vscode runs uh it's an",
    "start": "1322520",
    "end": "1330039"
  },
  {
    "text": "electron app right so it runs V8 uh an engine under the hood and uh we were",
    "start": "1330039",
    "end": "1336240"
  },
  {
    "text": "just uh compiling uh and profiling just in time tax and developing support for",
    "start": "1336240",
    "end": "1341440"
  },
  {
    "text": "them and uh all of a sudden I realized that there's some wasm code also web",
    "start": "1341440",
    "end": "1346760"
  },
  {
    "text": "assembly code running down there uh and uh it's a was some wrapper and compiler",
    "start": "1346760",
    "end": "1353159"
  },
  {
    "text": "kit I think and that that was my Galaxy brain moment right I use vs code",
    "start": "1353159",
    "end": "1359360"
  },
  {
    "text": "extensively and to see what's going on underneath and to discover something cool like wasm which I wouldn't know",
    "start": "1359360",
    "end": "1365320"
  },
  {
    "text": "about otherwise um it really made an impact or it hit that you know there's",
    "start": "1365320",
    "end": "1371200"
  },
  {
    "text": "real life impact of what I'm doing that that was a very a moment for me so the",
    "start": "1371200",
    "end": "1377679"
  },
  {
    "text": "next thing is uh how do we go from this vs code to seeing all the functions in",
    "start": "1377679",
    "end": "1383559"
  },
  {
    "text": "an icicle graph so I'll not go into super detailed stuff here but uh you",
    "start": "1383559",
    "end": "1389720"
  },
  {
    "text": "have a binary any application uh I've used go binaries as an example but this extends",
    "start": "1389720",
    "end": "1396320"
  },
  {
    "text": "approximately to all Linux binaries uh binaries look a bit like this under the",
    "start": "1396320",
    "end": "1401440"
  },
  {
    "text": "surface there's executable code and uh there is uh there is other information",
    "start": "1401440",
    "end": "1408480"
  },
  {
    "text": "about uh memory addresses and functions and memory mappings and so how to read",
    "start": "1408480",
    "end": "1416200"
  },
  {
    "text": "these elf binaries they're known as elf binaries for Linux so how to read them",
    "start": "1416200",
    "end": "1421559"
  },
  {
    "text": "is the it's encoded in this format called dwarf um suffice to say that",
    "start": "1421559",
    "end": "1428679"
  },
  {
    "text": "dwarf is like uh 500 400 page format specification that I will not go into",
    "start": "1428679",
    "end": "1435880"
  },
  {
    "text": "right now but uh we got your back so what the agent does",
    "start": "1435880",
    "end": "1441279"
  },
  {
    "text": "it takes all of this um information from the binaries it uh does some very cool",
    "start": "1441279",
    "end": "1447200"
  },
  {
    "text": "things like uh reading all the information interpreting it uh reads the",
    "start": "1447200",
    "end": "1452240"
  },
  {
    "text": "registers uh and it uh changes that into this very handcrafted artisanal stack",
    "start": "1452240",
    "end": "1459720"
  },
  {
    "text": "traces we actually do build this table a lot like um sort of by hand we have to",
    "start": "1459720",
    "end": "1466399"
  },
  {
    "text": "we had to do all of the calculations on paper first and then it was done automated uh in the code so then we get",
    "start": "1466399",
    "end": "1474200"
  },
  {
    "text": "this return addresses of functions you know so we get like a call ordered uh the first function's calling this and",
    "start": "1474200",
    "end": "1480799"
  },
  {
    "text": "that's calling the second function and we get all the addresses of that function in memory um then we compress",
    "start": "1480799",
    "end": "1488159"
  },
  {
    "text": "it and we send that to the server side and then we attach all the function",
    "start": "1488159",
    "end": "1493799"
  },
  {
    "text": "names which we have also gotten from like uh the binary information information uh it just is less data uh",
    "start": "1493799",
    "end": "1501240"
  },
  {
    "text": "and more optimal to send it to the uh server side and then get the function names and uh as you can see function",
    "start": "1501240",
    "end": "1507399"
  },
  {
    "text": "names are essentially just return addresses uh in a link list so that's",
    "start": "1507399",
    "end": "1512600"
  },
  {
    "text": "how we do that uh okay but next question how often do we do this you know we want",
    "start": "1512600",
    "end": "1518440"
  },
  {
    "text": "to continuously profile right we want to see uh things happening dynamically in",
    "start": "1518440",
    "end": "1523919"
  },
  {
    "text": "real time uh because we want all the data you know we can't wait till a uh",
    "start": "1523919",
    "end": "1530080"
  },
  {
    "text": "oom kill happens and the entire system uh crashes and everything hangs uh and",
    "start": "1530080",
    "end": "1536600"
  },
  {
    "text": "uh to like find out where the bug was we want to see the bug as it's taking up space you know so that we can do",
    "start": "1536600",
    "end": "1543159"
  },
  {
    "text": "something or we want to uh like um later troubleshoot what went wrong so how",
    "start": "1543159",
    "end": "1550000"
  },
  {
    "text": "often do we profile uh the way this happens is we profile um we take samp",
    "start": "1550000",
    "end": "1558360"
  },
  {
    "text": "amples 19 times every second so 19 Hertz the ebpf program it uh it's attached as",
    "start": "1558360",
    "end": "1566039"
  },
  {
    "text": "a perf event hook um perf event hooks are basically um they event hooks in the",
    "start": "1566039",
    "end": "1573760"
  },
  {
    "text": "CPU that let us look inside what's going on in the Linux kernel and so all the CIS calls all the processes you're",
    "start": "1573760",
    "end": "1580559"
  },
  {
    "text": "calling every CPU event basically that has to do with performance um and the",
    "start": "1580559",
    "end": "1586240"
  },
  {
    "text": "ebpf agent it's attached to that and it uh it every like 19 times per uh second",
    "start": "1586240",
    "end": "1595640"
  },
  {
    "text": "it uh takes uh the samples and collects the data and it puts them into ebpf maps",
    "start": "1595640",
    "end": "1605120"
  },
  {
    "text": "and enriches the BPF Maps then from the kernel we send whatever's information",
    "start": "1605120",
    "end": "1610399"
  },
  {
    "text": "there in the BPF maps to the user space of paraka agent uh every 10 seconds so",
    "start": "1610399",
    "end": "1618600"
  },
  {
    "text": "so so basically you have data a continuous stream of data all the time",
    "start": "1618600",
    "end": "1626320"
  },
  {
    "text": "uh and it's it's very optimized it's we do it at a very low",
    "start": "1626320",
    "end": "1631840"
  },
  {
    "text": "overhead uh and there's a special reason why we use 19 things just work better",
    "start": "1631840",
    "end": "1637840"
  },
  {
    "text": "with uh prime numbers uh something it's very cool is that uh there are",
    "start": "1637840",
    "end": "1643440"
  },
  {
    "text": "interruptions and all you have CPU interrupts right in the kernel space and everything and uh they can happen at",
    "start": "1643440",
    "end": "1649679"
  },
  {
    "text": "like they they tend to happen at like timed schedule intervals so but if you have like an multiples of that so if you",
    "start": "1649679",
    "end": "1656799"
  },
  {
    "text": "have a prime number prime numbers are not multiples of anything so uh we want to minimize uh interrupts and any funky",
    "start": "1656799",
    "end": "1666279"
  },
  {
    "text": "interactions that's going on which is why we choose a prime number we prefer a prime number",
    "start": "1666279",
    "end": "1672039"
  },
  {
    "text": "so now uh overview of what we just saw the the agent uh looks at all the",
    "start": "1672039",
    "end": "1679720"
  },
  {
    "text": "processes every process running on your system every binary be it bare metal container uh and uh it takes information",
    "start": "1679720",
    "end": "1687600"
  },
  {
    "text": "from them using ebpf in kernel space uh then it compresses them into stack",
    "start": "1687600",
    "end": "1693399"
  },
  {
    "text": "traces uh sends over the stack traces to parka uh throughout this process we",
    "start": "1693399",
    "end": "1698960"
  },
  {
    "text": "attach a lot of metadata uh from like the c groups from uh your container",
    "start": "1698960",
    "end": "1704240"
  },
  {
    "text": "labels like ports which cluster which node uh and then from the compiler",
    "start": "1704240",
    "end": "1709799"
  },
  {
    "text": "runtime which language which version of uh the compiler like GCC 1.2 Z or any of",
    "start": "1709799",
    "end": "1717480"
  },
  {
    "text": "that uh and then whether it's jittered or not and then we take some more data",
    "start": "1717480",
    "end": "1723000"
  },
  {
    "text": "from like the system demon uh where is the binary located on your CPU so it",
    "start": "1723000",
    "end": "1728120"
  },
  {
    "text": "will directly show you user bin what's the name of the binary that you can that you usually use to run uh from the uh",
    "start": "1728120",
    "end": "1736519"
  },
  {
    "text": "from your terminal so so uh and on parka side it like uh we see the icle graphs",
    "start": "1736519",
    "end": "1743880"
  },
  {
    "text": "and that shows us uh what's being how much CPU things are consuming and all of",
    "start": "1743880",
    "end": "1749600"
  },
  {
    "text": "this is no code changes required you just deploy the agent and you deploy the server there's all two lines of code",
    "start": "1749600",
    "end": "1756600"
  },
  {
    "text": "just a command and uh yeah you have that so now uh what compilers and run times",
    "start": "1756600",
    "end": "1764320"
  },
  {
    "text": "do we support this is important like uh it's important to know what you can profile and what what you can't so we",
    "start": "1764320",
    "end": "1771720"
  },
  {
    "text": "have full support for all natively compiled languages like C C++ rust go",
    "start": "1771720",
    "end": "1778360"
  },
  {
    "text": "and um other languages um very recently uh few months ago we added uh support",
    "start": "1778360",
    "end": "1785480"
  },
  {
    "text": "for just in time compiled languages so with perf map or jum you can like um do",
    "start": "1785480",
    "end": "1792559"
  },
  {
    "text": "c ear langang so by ear langang you know anything that uses beam underneath you",
    "start": "1792559",
    "end": "1798480"
  },
  {
    "text": "can profile that uh there's uh Java virtual machine so anything that uses uh jvm like even Java but also like closure",
    "start": "1798480",
    "end": "1806399"
  },
  {
    "text": "maybe that you can profile that there's uh Julia that you can profile so if uh anyone's into data science and using",
    "start": "1806399",
    "end": "1812679"
  },
  {
    "text": "Julia you can uh look at what functions using how much CPU then nodejs so that's",
    "start": "1812679",
    "end": "1819320"
  },
  {
    "text": "how V uh vs code worked and uh how also like uh profiling fire fox and your",
    "start": "1819320",
    "end": "1825960"
  },
  {
    "text": "other browsers will work and um and yeah the uh the UI parka UI",
    "start": "1825960",
    "end": "1831519"
  },
  {
    "text": "just saw we profiled that with also like just in time languages and all so then",
    "start": "1831519",
    "end": "1836760"
  },
  {
    "text": "we also very recently uh my coworker kimal he um uh and my coworker jaier",
    "start": "1836760",
    "end": "1843200"
  },
  {
    "text": "they both added support for Python and Ruby so you can also support all the uh",
    "start": "1843200",
    "end": "1849200"
  },
  {
    "text": "fancy Ai workloads and all the cool exciting uh AI stuff that we are running",
    "start": "1849200",
    "end": "1854679"
  },
  {
    "text": "today um definitely check it out uh and we support uh all architectures so x86",
    "start": "1854679",
    "end": "1862480"
  },
  {
    "text": "uh arm 64 uh the agent needs Linux to run but uh and x86 is like super simple",
    "start": "1862480",
    "end": "1870720"
  },
  {
    "text": "but even on my um we use Macs actually at work for uh and it's we only have to",
    "start": "1870720",
    "end": "1879720"
  },
  {
    "text": "have a Linux VM we don't need emulation like we don't need to emulate x86 anymore so we just have the arm Hardware",
    "start": "1879720",
    "end": "1888000"
  },
  {
    "text": "uh from the mac and like just have to have a Linux virtual machine and it just works so um and we do all of this uh all",
    "start": "1888000",
    "end": "1897880"
  },
  {
    "text": "the compiled languages and everything with or without frame pointers so what we need to know about frame pointers is",
    "start": "1897880",
    "end": "1902960"
  },
  {
    "text": "there like an extra register that's um there on the hardware level but a lot of",
    "start": "1902960",
    "end": "1909360"
  },
  {
    "text": "compilers and binaries they strip that so with frame pointers it's just like",
    "start": "1909360",
    "end": "1914600"
  },
  {
    "text": "very easy but without frame pointers like can mentioned all the elf and dwarf all that information from the binaries",
    "start": "1914600",
    "end": "1921320"
  },
  {
    "text": "we have to take like a lot of actually calculate the stacks uh by hand so uh",
    "start": "1921320",
    "end": "1928880"
  },
  {
    "text": "this is not something that's very easily done with low overhead and zero instrumentation it took us like some 6",
    "start": "1928880",
    "end": "1935519"
  },
  {
    "text": "months extra uh like to develop this and initial supports fine but every compiler",
    "start": "1935519",
    "end": "1941600"
  },
  {
    "text": "has an edge case so when we say we want to fully support it we we're actually looking for an",
    "start": "1941600",
    "end": "1947600"
  },
  {
    "text": "and users and everybody in the community to try it out and tell us what are the edge cases because it's um impossible to",
    "start": "1947600",
    "end": "1954639"
  },
  {
    "text": "replicate everything in a cloud environment in uh on our machines so we",
    "start": "1954639",
    "end": "1959840"
  },
  {
    "text": "try as much as possible to you know every Edge case for every compiler and that's I think a very high goal for us",
    "start": "1959840",
    "end": "1966399"
  },
  {
    "text": "to achieve but we we have been pretty good at getting there so far and we will do so um what kernel versions We support",
    "start": "1966399",
    "end": "1975159"
  },
  {
    "text": "technically we do also supports some 4.19 and above versions I think but we",
    "start": "1975159",
    "end": "1982399"
  },
  {
    "text": "always um prefer version 5.3 plus and",
    "start": "1982399",
    "end": "1987480"
  },
  {
    "text": "even more preferable is the latest Linux versions uh so right now I think latest",
    "start": "1987480",
    "end": "1993679"
  },
  {
    "text": "Upstream is 6.3 6.4 maybe even but uh uh from like some",
    "start": "1993679",
    "end": "2002120"
  },
  {
    "text": "Linux versions like 5.2 to 6.2 the kernel itself has one or two ebpf bugs",
    "start": "2002120",
    "end": "2009240"
  },
  {
    "text": "and they have all been fixed Upstream but Upstream moves really fast and a lot of uh Cloud providers and people they",
    "start": "2009240",
    "end": "2015960"
  },
  {
    "text": "don't uh you know even me sometimes we just don't update our machines right or",
    "start": "2015960",
    "end": "2021200"
  },
  {
    "text": "the operating system and uh a lot of distributions uh they don't backport",
    "start": "2021200",
    "end": "2027399"
  },
  {
    "text": "fixes so we have workarounds on those bugs but it's like sometimes it's a bit",
    "start": "2027399",
    "end": "2032519"
  },
  {
    "text": "tricky and we want our end users to have like a very smooth experience so so um",
    "start": "2032519",
    "end": "2038240"
  },
  {
    "text": "always update your uh machines people uh and that's really all um these are links",
    "start": "2038240",
    "end": "2045279"
  },
  {
    "text": "I have added how compilers actually the edge cases how compilers affect icle",
    "start": "2045279",
    "end": "2050398"
  },
  {
    "text": "graphs so really edge cases about C++ nodejs and um um funky things that uh",
    "start": "2050399",
    "end": "2058560"
  },
  {
    "text": "some virtual managers uh VMS do so that's what the am I contained these are all blog post links uh do check it out",
    "start": "2058560",
    "end": "2066599"
  },
  {
    "text": "and and uh so this is a road map that we have for parka uh the query language you",
    "start": "2066599",
    "end": "2073000"
  },
  {
    "text": "just saw we want to extend its capabilities some more like autocomplete features and everything um more",
    "start": "2073000",
    "end": "2079480"
  },
  {
    "text": "languages you know we want to support PHP uh there's also been uh asked for",
    "start": "2079480",
    "end": "2084560"
  },
  {
    "text": "support for Pearl so we want to support PE Pearl and uh camel and like basically",
    "start": "2084560",
    "end": "2090638"
  },
  {
    "text": "every language we can uh Mojo that's like a very up and cominging language for uh Ai workloads and all",
    "start": "2090639",
    "end": "2097680"
  },
  {
    "text": "and mostly we also want to have like build a community around this we it's it's been 2 years but we're still very",
    "start": "2097680",
    "end": "2104359"
  },
  {
    "text": "new as far as open source communities go and uh we doing this for like the long",
    "start": "2104359",
    "end": "2111160"
  },
  {
    "text": "time thing and we want to make uh continuous profiling a regular part of",
    "start": "2111160",
    "end": "2116240"
  },
  {
    "text": "your observability stack so uh please join us at the Paka officers join us on",
    "start": "2116240",
    "end": "2122040"
  },
  {
    "text": "the Discord try out the product uh the tooling and uh tell us how you feel",
    "start": "2122040",
    "end": "2127599"
  },
  {
    "text": "about it and how we can make it even more easier for you and so that was my talk thank you I'm sorry I went like",
    "start": "2127599",
    "end": "2134920"
  },
  {
    "text": "maybe 5 10 No 5 minutes over time I think uh so I'm sorry for keeping you",
    "start": "2134920",
    "end": "2141400"
  },
  {
    "text": "from lunch and thanks for being very patient listeners so that was",
    "start": "2141400",
    "end": "2147160"
  },
  {
    "text": "all",
    "start": "2147160",
    "end": "2150160"
  }
]