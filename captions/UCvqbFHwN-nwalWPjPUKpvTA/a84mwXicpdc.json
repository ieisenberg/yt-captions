[
  {
    "text": "thank",
    "start": "919",
    "end": "3159"
  },
  {
    "text": "you hi everyone Welcome to our talk",
    "start": "4960",
    "end": "7759"
  },
  {
    "text": "title The Hitchhiker guide to kubernetes",
    "start": "7759",
    "end": "10200"
  },
  {
    "text": "platforms Don't Panic Just Launch where",
    "start": "10200",
    "end": "12599"
  },
  {
    "text": "we'll walk um you through how to build",
    "start": "12599",
    "end": "15639"
  },
  {
    "text": "an AI platform um as the title says you",
    "start": "15639",
    "end": "20039"
  },
  {
    "text": "will see a lot of references to the book",
    "start": "20039",
    "end": "22199"
  },
  {
    "text": "The Hitcher sky to the Galaxy but if you",
    "start": "22199",
    "end": "24880"
  },
  {
    "text": "haven't read it don't panic cuz we'll",
    "start": "24880",
    "end": "27080"
  },
  {
    "text": "make every example as clear as possible",
    "start": "27080",
    "end": "30800"
  },
  {
    "text": "so my name is Tessa Fam I'm a soft",
    "start": "30800",
    "end": "34040"
  },
  {
    "text": "engineer at Bloomberg and my name is",
    "start": "34040",
    "end": "36680"
  },
  {
    "text": "Alexa Griffith I'm also a software",
    "start": "36680",
    "end": "38719"
  },
  {
    "text": "engineer at Bloomberg we both work on",
    "start": "38719",
    "end": "40480"
  },
  {
    "text": "the inference team under Cloud native",
    "start": "40480",
    "end": "43039"
  },
  {
    "text": "compute",
    "start": "43039",
    "end": "44640"
  },
  {
    "text": "services so as Tessa mentioned in this",
    "start": "44640",
    "end": "47440"
  },
  {
    "text": "talk we're going to walk through how to",
    "start": "47440",
    "end": "48800"
  },
  {
    "text": "build an AI platform that allows both",
    "start": "48800",
    "end": "51079"
  },
  {
    "text": "you and the as the developer and the",
    "start": "51079",
    "end": "53559"
  },
  {
    "text": "users to not panic and just launch their",
    "start": "53559",
    "end": "57960"
  },
  {
    "text": "services so let's open up book to the",
    "start": "57960",
    "end": "60600"
  },
  {
    "text": "first page which you'll see six items",
    "start": "60600",
    "end": "64040"
  },
  {
    "text": "this is the set of principles that we",
    "start": "64040",
    "end": "65640"
  },
  {
    "text": "want to follow when building any kind of",
    "start": "65640",
    "end": "67640"
  },
  {
    "text": "platform whether big or small and they",
    "start": "67640",
    "end": "69840"
  },
  {
    "text": "are stability security scalability",
    "start": "69840",
    "end": "73799"
  },
  {
    "text": "observability easy onboarding and activ",
    "start": "73799",
    "end": "76400"
  },
  {
    "text": "user support together they make up a",
    "start": "76400",
    "end": "79000"
  },
  {
    "text": "towel which if you don't know is the",
    "start": "79000",
    "end": "82040"
  },
  {
    "text": "most important item an Interstellar",
    "start": "82040",
    "end": "83960"
  },
  {
    "text": "hitch haacker can carry once your",
    "start": "83960",
    "end": "86000"
  },
  {
    "text": "platform is grounded on these set of",
    "start": "86000",
    "end": "87840"
  },
  {
    "text": "principles you should be all set",
    "start": "87840",
    "end": "91920"
  },
  {
    "text": "so we're going to use uh inference",
    "start": "95079",
    "end": "97640"
  },
  {
    "text": "platform as an example for this talk so",
    "start": "97640",
    "end": "100399"
  },
  {
    "text": "how do we power our infants platform we",
    "start": "100399",
    "end": "102880"
  },
  {
    "text": "we power our infants platform with kaser",
    "start": "102880",
    "end": "105159"
  },
  {
    "text": "which is an open source project that our",
    "start": "105159",
    "end": "107479"
  },
  {
    "text": "teen lean Dan Sun co-founded and",
    "start": "107479",
    "end": "111119"
  },
  {
    "text": "basically it's a easy way to Monitor and",
    "start": "111119",
    "end": "113399"
  },
  {
    "text": "deploy long running inference Services",
    "start": "113399",
    "end": "115840"
  },
  {
    "text": "it has a lot of it kerve supports",
    "start": "115840",
    "end": "118680"
  },
  {
    "text": "various model serving run times and out",
    "start": "118680",
    "end": "120840"
  },
  {
    "text": "the box features for things like",
    "start": "120840",
    "end": "122560"
  },
  {
    "text": "security observ observability scaling",
    "start": "122560",
    "end": "125479"
  },
  {
    "text": "and more so at the bottom of the slide",
    "start": "125479",
    "end": "127560"
  },
  {
    "text": "you can see the link to learn more about",
    "start": "127560",
    "end": "129119"
  },
  {
    "text": "kerve and get",
    "start": "129119",
    "end": "132080"
  },
  {
    "text": "involved so in our control center I",
    "start": "132080",
    "end": "135120"
  },
  {
    "text": "think it's important to understand any",
    "start": "135120",
    "end": "137640"
  },
  {
    "text": "platform You're Building um the",
    "start": "137640",
    "end": "139800"
  },
  {
    "text": "components that make up that platform or",
    "start": "139800",
    "end": "141440"
  },
  {
    "text": "the requirements that they have so for",
    "start": "141440",
    "end": "144120"
  },
  {
    "text": "example in our inference control center",
    "start": "144120",
    "end": "145879"
  },
  {
    "text": "here when you consider the increasing",
    "start": "145879",
    "end": "148160"
  },
  {
    "text": "usage of llms and GPU use and inference",
    "start": "148160",
    "end": "150680"
  },
  {
    "text": "Services additionally we need to support",
    "start": "150680",
    "end": "153319"
  },
  {
    "text": "various model serving run times like",
    "start": "153319",
    "end": "155280"
  },
  {
    "text": "Triton pie torch hugging face and much",
    "start": "155280",
    "end": "157760"
  },
  {
    "text": "more uh we need to consider that there",
    "start": "157760",
    "end": "160000"
  },
  {
    "text": "is a multi-pod deployment most of the",
    "start": "160000",
    "end": "161879"
  },
  {
    "text": "time and these pods need to communicate",
    "start": "161879",
    "end": "163640"
  },
  {
    "text": "to each other so a Transformer and a",
    "start": "163640",
    "end": "165920"
  },
  {
    "text": "predictor are usually deployed together",
    "start": "165920",
    "end": "167840"
  },
  {
    "text": "maybe even an explainer and they all",
    "start": "167840",
    "end": "169239"
  },
  {
    "text": "need to communicate to give a prediction",
    "start": "169239",
    "end": "170959"
  },
  {
    "text": "result also we need to support Advanced",
    "start": "170959",
    "end": "173720"
  },
  {
    "text": "deployment strategies like Canary",
    "start": "173720",
    "end": "175480"
  },
  {
    "text": "rollouts experiments ensembles and we",
    "start": "175480",
    "end": "179000"
  },
  {
    "text": "have a complex architecture that one pod",
    "start": "179000",
    "end": "182319"
  },
  {
    "text": "serves multiple models called Model mesh",
    "start": "182319",
    "end": "184560"
  },
  {
    "text": "we also need to store our models and a",
    "start": "184560",
    "end": "186080"
  },
  {
    "text": "model registry and we should as a whole",
    "start": "186080",
    "end": "188480"
  },
  {
    "text": "just take in the the or consider the ml",
    "start": "188480",
    "end": "191760"
  },
  {
    "text": "development life cycle so we experiment",
    "start": "191760",
    "end": "194080"
  },
  {
    "text": "train validate serve and then maybe",
    "start": "194080",
    "end": "197480"
  },
  {
    "text": "repeat so what we've done is we've",
    "start": "197480",
    "end": "200640"
  },
  {
    "text": "created consistent apis across our",
    "start": "200640",
    "end": "202840"
  },
  {
    "text": "organization to give users a consistent",
    "start": "202840",
    "end": "205480"
  },
  {
    "text": "experience across the ml life cycle",
    "start": "205480",
    "end": "208439"
  },
  {
    "text": "between not only our infants platform",
    "start": "208439",
    "end": "210159"
  },
  {
    "text": "but also for things like training and",
    "start": "210159",
    "end": "211920"
  },
  {
    "text": "experimenting but today we're going to",
    "start": "211920",
    "end": "213959"
  },
  {
    "text": "focus on the three main apis for our INF",
    "start": "213959",
    "end": "216360"
  },
  {
    "text": "inference platform that we've built to",
    "start": "216360",
    "end": "218400"
  },
  {
    "text": "achieve this so first we'll talk about",
    "start": "218400",
    "end": "220280"
  },
  {
    "text": "de debugging then deployment and then",
    "start": "220280",
    "end": "224920"
  },
  {
    "text": "versioning so before we dive into the",
    "start": "225439",
    "end": "228040"
  },
  {
    "text": "apis let's address one question that you",
    "start": "228040",
    "end": "230280"
  },
  {
    "text": "might have why don't we use the",
    "start": "230280",
    "end": "232159"
  },
  {
    "text": "kubernetes API directly first of all we",
    "start": "232159",
    "end": "235000"
  },
  {
    "text": "don't want to expose kubernetes to our",
    "start": "235000",
    "end": "236680"
  },
  {
    "text": "platform users who are mainly data",
    "start": "236680",
    "end": "238720"
  },
  {
    "text": "scientists Nies is a complicated",
    "start": "238720",
    "end": "241120"
  },
  {
    "text": "technology with a huge learning curve",
    "start": "241120",
    "end": "243439"
  },
  {
    "text": "and there's a lot of info that is not",
    "start": "243439",
    "end": "245439"
  },
  {
    "text": "necessary to be exposed for example we",
    "start": "245439",
    "end": "248319"
  },
  {
    "text": "want to abstract away from cluster",
    "start": "248319",
    "end": "250280"
  },
  {
    "text": "deployment um as users don't need to",
    "start": "250280",
    "end": "252720"
  },
  {
    "text": "know which cluster their services are",
    "start": "252720",
    "end": "254239"
  },
  {
    "text": "running on aside from kubernetes we also",
    "start": "254239",
    "end": "257400"
  },
  {
    "text": "use other tools like humo grafana Etc",
    "start": "257400",
    "end": "261400"
  },
  {
    "text": "and by building apis on top of these",
    "start": "261400",
    "end": "263560"
  },
  {
    "text": "tools we offer a centralized platform",
    "start": "263560",
    "end": "266120"
  },
  {
    "text": "for all steps in the model development",
    "start": "266120",
    "end": "267960"
  },
  {
    "text": "and deployment cycle so that users can",
    "start": "267960",
    "end": "270320"
  },
  {
    "text": "find everything in one place it will",
    "start": "270320",
    "end": "273039"
  },
  {
    "text": "also be easier for us to manage",
    "start": "273039",
    "end": "275680"
  },
  {
    "text": "dependencies and keep the platform",
    "start": "275680",
    "end": "277880"
  },
  {
    "text": "consistent having our own apis will",
    "start": "277880",
    "end": "280560"
  },
  {
    "text": "allow for more control over security and",
    "start": "280560",
    "end": "283120"
  },
  {
    "text": "visibility and once user gives us what",
    "start": "283120",
    "end": "285880"
  },
  {
    "text": "they want to deploy we can manage the",
    "start": "285880",
    "end": "287960"
  },
  {
    "text": "rest from authentication authorization",
    "start": "287960",
    "end": "290560"
  },
  {
    "text": "all the way to serving and monitoring",
    "start": "290560",
    "end": "292440"
  },
  {
    "text": "the services and in the next slide",
    "start": "292440",
    "end": "294960"
  },
  {
    "text": "you'll see what can we can also offer an",
    "start": "294960",
    "end": "297840"
  },
  {
    "text": "enhanced debugging experience with links",
    "start": "297840",
    "end": "300600"
  },
  {
    "text": "to metric dashboards and also aggregated",
    "start": "300600",
    "end": "303639"
  },
  {
    "text": "service",
    "start": "303639",
    "end": "306039"
  },
  {
    "text": "statuses okay so let's talk about our",
    "start": "306160",
    "end": "308639"
  },
  {
    "text": "debugging API uh and the benefits that",
    "start": "308639",
    "end": "311479"
  },
  {
    "text": "it offers the debugging API provides",
    "start": "311479",
    "end": "314039"
  },
  {
    "text": "better usability for our users so users",
    "start": "314039",
    "end": "316759"
  },
  {
    "text": "can use our API and it's consistent and",
    "start": "316759",
    "end": "319160"
  },
  {
    "text": "both programmatically like let's say in",
    "start": "319160",
    "end": "320800"
  },
  {
    "text": "workflows and if they want to deploy in",
    "start": "320800",
    "end": "322919"
  },
  {
    "text": "the UI we also offer enhanced statuses",
    "start": "322919",
    "end": "326479"
  },
  {
    "text": "uh which we'll dig more into uh they",
    "start": "326479",
    "end": "328759"
  },
  {
    "text": "return consistent and easy to understand",
    "start": "328759",
    "end": "330680"
  },
  {
    "text": "error messages to our users we've also",
    "start": "330680",
    "end": "333080"
  },
  {
    "text": "added customized debugging links for",
    "start": "333080",
    "end": "335120"
  },
  {
    "text": "each resource to different dashboards",
    "start": "335120",
    "end": "337000"
  },
  {
    "text": "and events for better observability",
    "start": "337000",
    "end": "339840"
  },
  {
    "text": "overall the debugging API adds a level",
    "start": "339840",
    "end": "342199"
  },
  {
    "text": "of consistency to our platform and",
    "start": "342199",
    "end": "344120"
  },
  {
    "text": "generally a better user",
    "start": "344120",
    "end": "346160"
  },
  {
    "text": "experience so let's talk about um some",
    "start": "346160",
    "end": "348960"
  },
  {
    "text": "of the things we could could return from",
    "start": "348960",
    "end": "351240"
  },
  {
    "text": "my debugging API so here's some examples",
    "start": "351240",
    "end": "353560"
  },
  {
    "text": "of some endpoints in our debugging API",
    "start": "353560",
    "end": "355639"
  },
  {
    "text": "let's say we want to get pods logs",
    "start": "355639",
    "end": "357319"
  },
  {
    "text": "deployments and any abstraction resource",
    "start": "357319",
    "end": "359960"
  },
  {
    "text": "you have on top so for us we have a",
    "start": "359960",
    "end": "361800"
  },
  {
    "text": "resource called inference service that",
    "start": "361800",
    "end": "363400"
  },
  {
    "text": "has inference services that has",
    "start": "363400",
    "end": "365120"
  },
  {
    "text": "different status and information about",
    "start": "365120",
    "end": "366599"
  },
  {
    "text": "the infant service deployment as a whole",
    "start": "366599",
    "end": "368960"
  },
  {
    "text": "so next let's look at the right we have",
    "start": "368960",
    "end": "371080"
  },
  {
    "text": "an example response um so it's very",
    "start": "371080",
    "end": "373639"
  },
  {
    "text": "similar to if you know C cuddle git pods",
    "start": "373639",
    "end": "375400"
  },
  {
    "text": "the ymo output you get with some",
    "start": "375400",
    "end": "377400"
  },
  {
    "text": "additions in Red so we're going to",
    "start": "377400",
    "end": "379400"
  },
  {
    "text": "return some customized links as I",
    "start": "379400",
    "end": "381000"
  },
  {
    "text": "discussed for debugging for each",
    "start": "381000",
    "end": "383160"
  },
  {
    "text": "endpoint and a new status summary field",
    "start": "383160",
    "end": "386199"
  },
  {
    "text": "that Aggregates all the statuses into",
    "start": "386199",
    "end": "387919"
  },
  {
    "text": "one consistent output so overall um we",
    "start": "387919",
    "end": "391639"
  },
  {
    "text": "and overall for at our company for",
    "start": "391639",
    "end": "393960"
  },
  {
    "text": "example we have strict restrictions on",
    "start": "393960",
    "end": "396240"
  },
  {
    "text": "viewing production so this API removes",
    "start": "396240",
    "end": "399479"
  },
  {
    "text": "some of the steps it took to do that and",
    "start": "399479",
    "end": "401080"
  },
  {
    "text": "makes it much easier for us to securely",
    "start": "401080",
    "end": "403000"
  },
  {
    "text": "debug",
    "start": "403000",
    "end": "404120"
  },
  {
    "text": "production got it um so let's dive into",
    "start": "404120",
    "end": "408319"
  },
  {
    "text": "the work that we did to make statuses",
    "start": "408319",
    "end": "410039"
  },
  {
    "text": "clear and easier to understand so",
    "start": "410039",
    "end": "412479"
  },
  {
    "text": "firstly made statuses as consistent",
    "start": "412479",
    "end": "414840"
  },
  {
    "text": "across our UI and API because as you can",
    "start": "414840",
    "end": "417000"
  },
  {
    "text": "see at the bottom of this slide um",
    "start": "417000",
    "end": "419599"
  },
  {
    "text": "status fields and values take logic to",
    "start": "419599",
    "end": "421599"
  },
  {
    "text": "interpret are not consistent between",
    "start": "421599",
    "end": "423319"
  },
  {
    "text": "each resource some statuses have defined",
    "start": "423319",
    "end": "425759"
  },
  {
    "text": "types and for example a pod had pod pod",
    "start": "425759",
    "end": "428360"
  },
  {
    "text": "has phases so we don't want our users to",
    "start": "428360",
    "end": "430520"
  },
  {
    "text": "have to understand or interpret each of",
    "start": "430520",
    "end": "432520"
  },
  {
    "text": "these differences so we should just make",
    "start": "432520",
    "end": "434160"
  },
  {
    "text": "them consistent additionally for example",
    "start": "434160",
    "end": "436639"
  },
  {
    "text": "if a pod has or if a deployment has zero",
    "start": "436639",
    "end": "439000"
  },
  {
    "text": "replicas it could be an indication of an",
    "start": "439000",
    "end": "441080"
  },
  {
    "text": "error or it could mean that K native has",
    "start": "441080",
    "end": "443759"
  },
  {
    "text": "scaled zero due to no tra due to no",
    "start": "443759",
    "end": "446160"
  },
  {
    "text": "traffic so a user doesn't need to know",
    "start": "446160",
    "end": "448639"
  },
  {
    "text": "what a revision res sources and go check",
    "start": "448639",
    "end": "450520"
  },
  {
    "text": "that status um but it is important for",
    "start": "450520",
    "end": "453160"
  },
  {
    "text": "us to be able to show that as the status",
    "start": "453160",
    "end": "455639"
  },
  {
    "text": "message so some other tricky situations",
    "start": "455639",
    "end": "458160"
  },
  {
    "text": "and edge cases include like when a",
    "start": "458160",
    "end": "460319"
  },
  {
    "text": "deployment is technically progressing",
    "start": "460319",
    "end": "461960"
  },
  {
    "text": "but the pot is failing or a pot is",
    "start": "461960",
    "end": "463960"
  },
  {
    "text": "running and the container is failing uh",
    "start": "463960",
    "end": "466879"
  },
  {
    "text": "there's also logic that needs to be",
    "start": "466879",
    "end": "469000"
  },
  {
    "text": "added just to determine each condition",
    "start": "469000",
    "end": "471280"
  },
  {
    "text": "so if progressing and available in the",
    "start": "471280",
    "end": "472840"
  },
  {
    "text": "deployment are false uh but no replica",
    "start": "472840",
    "end": "475400"
  },
  {
    "text": "failure exists we need logic to",
    "start": "475400",
    "end": "476960"
  },
  {
    "text": "determine that the deployment is most",
    "start": "476960",
    "end": "478680"
  },
  {
    "text": "likely unhealthy",
    "start": "478680",
    "end": "480120"
  },
  {
    "text": "so in the UI imagine at the top level we",
    "start": "480120",
    "end": "482240"
  },
  {
    "text": "show a status and this status needs to",
    "start": "482240",
    "end": "484240"
  },
  {
    "text": "indicate if the user needs to click into",
    "start": "484240",
    "end": "486159"
  },
  {
    "text": "the page and debug further at a lower",
    "start": "486159",
    "end": "488120"
  },
  {
    "text": "level so deployment needs to show error",
    "start": "488120",
    "end": "490520"
  },
  {
    "text": "if the container is failing this is why",
    "start": "490520",
    "end": "492639"
  },
  {
    "text": "we need a status summary so let's take a",
    "start": "492639",
    "end": "494720"
  },
  {
    "text": "look at an example of our logic to show",
    "start": "494720",
    "end": "497000"
  },
  {
    "text": "a consistent deployment level status by",
    "start": "497000",
    "end": "499319"
  },
  {
    "text": "considering each condition and",
    "start": "499319",
    "end": "501479"
  },
  {
    "text": "resource okay so first I'm just going to",
    "start": "501479",
    "end": "503560"
  },
  {
    "text": "walk through uh quickly our Logic for",
    "start": "503560",
    "end": "506520"
  },
  {
    "text": "determining a deployment so first we're",
    "start": "506520",
    "end": "509080"
  },
  {
    "text": "going to",
    "start": "509080",
    "end": "510400"
  },
  {
    "text": "uh check the progressing condition if",
    "start": "510400",
    "end": "512680"
  },
  {
    "text": "that's true we'll label the status is",
    "start": "512680",
    "end": "515120"
  },
  {
    "text": "progressing",
    "start": "515120",
    "end": "517159"
  },
  {
    "text": "um next we're going to check available",
    "start": "517159",
    "end": "520039"
  },
  {
    "text": "again if it's the replicas are zero and",
    "start": "520039",
    "end": "522760"
  },
  {
    "text": "it might have scaled down so let's check",
    "start": "522760",
    "end": "524839"
  },
  {
    "text": "ready if ready is true and the replicas",
    "start": "524839",
    "end": "526959"
  },
  {
    "text": "are zero then we'll set the status tin",
    "start": "526959",
    "end": "529800"
  },
  {
    "text": "active however if it's false it's an",
    "start": "529800",
    "end": "532160"
  },
  {
    "text": "indication that it's unhealthy and we",
    "start": "532160",
    "end": "533680"
  },
  {
    "text": "need to return it same with container",
    "start": "533680",
    "end": "535920"
  },
  {
    "text": "healthy if that's false it's an",
    "start": "535920",
    "end": "537680"
  },
  {
    "text": "indication we're unhealthy and we need",
    "start": "537680",
    "end": "539040"
  },
  {
    "text": "to Bubble that up but let's assume that",
    "start": "539040",
    "end": "541560"
  },
  {
    "text": "we're healthy next we'll go to replica",
    "start": "541560",
    "end": "543800"
  },
  {
    "text": "failure if that's true that means we're",
    "start": "543800",
    "end": "546800"
  },
  {
    "text": "unhealthy okay so let's take it",
    "start": "546800",
    "end": "549120"
  },
  {
    "text": "everything's healthy here that's not the",
    "start": "549120",
    "end": "551000"
  },
  {
    "text": "end right we need to then consider the",
    "start": "551000",
    "end": "553320"
  },
  {
    "text": "Pod so pod phases the naming is a bit",
    "start": "553320",
    "end": "556200"
  },
  {
    "text": "different but we want to be consistent",
    "start": "556200",
    "end": "557399"
  },
  {
    "text": "and not confuse the user so we'll just",
    "start": "557399",
    "end": "559240"
  },
  {
    "text": "map those to one of our predefined",
    "start": "559240",
    "end": "562560"
  },
  {
    "text": "statuses but let's say that the pot is",
    "start": "562560",
    "end": "564760"
  },
  {
    "text": "healthy pot can be running or healthy",
    "start": "564760",
    "end": "567279"
  },
  {
    "text": "and still there could be a container",
    "start": "567279",
    "end": "568519"
  },
  {
    "text": "issue so so basically we need to check",
    "start": "568519",
    "end": "570680"
  },
  {
    "text": "if ready is true on any of these",
    "start": "570680",
    "end": "572839"
  },
  {
    "text": "conditions then we're probably good if",
    "start": "572839",
    "end": "574959"
  },
  {
    "text": "it is not it's unhealthy so let's say",
    "start": "574959",
    "end": "577120"
  },
  {
    "text": "one container is failing but everything",
    "start": "577120",
    "end": "578640"
  },
  {
    "text": "else is healthy we want to show at the",
    "start": "578640",
    "end": "580920"
  },
  {
    "text": "top level that the deployment has",
    "start": "580920",
    "end": "583200"
  },
  {
    "text": "something you need to look at so that",
    "start": "583200",
    "end": "584480"
  },
  {
    "text": "you know to click in and look at the",
    "start": "584480",
    "end": "586079"
  },
  {
    "text": "lower",
    "start": "586079",
    "end": "587480"
  },
  {
    "text": "level so not only do we want consistent",
    "start": "587480",
    "end": "590120"
  },
  {
    "text": "statuses but we also want to return an",
    "start": "590120",
    "end": "592240"
  },
  {
    "text": "easy to understand and debug message to",
    "start": "592240",
    "end": "594279"
  },
  {
    "text": "the user so they can understand and fix",
    "start": "594279",
    "end": "595800"
  },
  {
    "text": "their service service if they need to so",
    "start": "595800",
    "end": "598240"
  },
  {
    "text": "another team on our organization was",
    "start": "598240",
    "end": "599760"
  },
  {
    "text": "also working on this they did some great",
    "start": "599760",
    "end": "601480"
  },
  {
    "text": "work with flowcharts for each resource",
    "start": "601480",
    "end": "604160"
  },
  {
    "text": "um and this was like one of the smallest",
    "start": "604160",
    "end": "606320"
  },
  {
    "text": "ones I could put on there's more but I'm",
    "start": "606320",
    "end": "608279"
  },
  {
    "text": "not going to go through it just feel",
    "start": "608279",
    "end": "609680"
  },
  {
    "text": "free we'll upload the slides to look",
    "start": "609680",
    "end": "611279"
  },
  {
    "text": "afterwards and look at it but the point",
    "start": "611279",
    "end": "613720"
  },
  {
    "text": "here is that you know translating each",
    "start": "613720",
    "end": "615720"
  },
  {
    "text": "status reason and message is important",
    "start": "615720",
    "end": "617760"
  },
  {
    "text": "for a better user experience because you",
    "start": "617760",
    "end": "619680"
  },
  {
    "text": "want users to be able to take action and",
    "start": "619680",
    "end": "622120"
  },
  {
    "text": "debug their service so not only do we",
    "start": "622120",
    "end": "624040"
  },
  {
    "text": "need a clear and consistent status but",
    "start": "624040",
    "end": "626200"
  },
  {
    "text": "also we need to show the user and tell",
    "start": "626200",
    "end": "628240"
  },
  {
    "text": "the user how to fix it",
    "start": "628240",
    "end": "630760"
  },
  {
    "text": "so as an example this is part of the Pod",
    "start": "630760",
    "end": "633519"
  },
  {
    "text": "flow chart and I just show this to uh",
    "start": "633519",
    "end": "636000"
  },
  {
    "text": "say that uh this is when the pod's",
    "start": "636000",
    "end": "638040"
  },
  {
    "text": "terminated and there's some other",
    "start": "638040",
    "end": "639320"
  },
  {
    "text": "conditions there's a variety of exit",
    "start": "639320",
    "end": "642079"
  },
  {
    "text": "status codes that you can get so",
    "start": "642079",
    "end": "643959"
  },
  {
    "text": "returning to the user just exit code 125",
    "start": "643959",
    "end": "646720"
  },
  {
    "text": "it's not an amazing user experience",
    "start": "646720",
    "end": "648839"
  },
  {
    "text": "right so instead we need to understand",
    "start": "648839",
    "end": "650680"
  },
  {
    "text": "and translate these into messages that",
    "start": "650680",
    "end": "653079"
  },
  {
    "text": "are short and something easy to",
    "start": "653079",
    "end": "655079"
  },
  {
    "text": "understand for the users because the",
    "start": "655079",
    "end": "656800"
  },
  {
    "text": "problem is the reason field is not",
    "start": "656800",
    "end": "658320"
  },
  {
    "text": "always easy to under understand for the",
    "start": "658320",
    "end": "660760"
  },
  {
    "text": "users that we have um but the message",
    "start": "660760",
    "end": "663200"
  },
  {
    "text": "fill can be very long so we need some",
    "start": "663200",
    "end": "665440"
  },
  {
    "text": "kind of in between and mapping out each",
    "start": "665440",
    "end": "667880"
  },
  {
    "text": "of these can help us provide users with",
    "start": "667880",
    "end": "669760"
  },
  {
    "text": "the information that they need to take",
    "start": "669760",
    "end": "671079"
  },
  {
    "text": "action",
    "start": "671079",
    "end": "672000"
  },
  {
    "text": "on so let's just take a step back real",
    "start": "672000",
    "end": "674480"
  },
  {
    "text": "quick and look at how this would",
    "start": "674480",
    "end": "675760"
  },
  {
    "text": "actually work so let's say on the left",
    "start": "675760",
    "end": "677399"
  },
  {
    "text": "you have a UI where it's like the",
    "start": "677399",
    "end": "678880"
  },
  {
    "text": "component is the deployment level that",
    "start": "678880",
    "end": "681160"
  },
  {
    "text": "if you need to click in you can right um",
    "start": "681160",
    "end": "683800"
  },
  {
    "text": "let's say that deployment was",
    "start": "683800",
    "end": "685279"
  },
  {
    "text": "technically fine or progressing here we",
    "start": "685279",
    "end": "687959"
  },
  {
    "text": "would see a pod out but in the bottom",
    "start": "687959",
    "end": "689639"
  },
  {
    "text": "you notice that it's running right but",
    "start": "689639",
    "end": "691720"
  },
  {
    "text": "what you notice is that you need to",
    "start": "691720",
    "end": "692839"
  },
  {
    "text": "check because one of the containers is",
    "start": "692839",
    "end": "694880"
  },
  {
    "text": "actually in Crash loop back off the",
    "start": "694880",
    "end": "696639"
  },
  {
    "text": "state is waiting with a message and a",
    "start": "696639",
    "end": "698600"
  },
  {
    "text": "reason which gives us some indication",
    "start": "698600",
    "end": "700880"
  },
  {
    "text": "but additionally we need to look at the",
    "start": "700880",
    "end": "702800"
  },
  {
    "text": "last state which has exit code 128 using",
    "start": "702800",
    "end": "706120"
  },
  {
    "text": "that we can return to the user something",
    "start": "706120",
    "end": "708240"
  },
  {
    "text": "that lets them know hey you actually",
    "start": "708240",
    "end": "709680"
  },
  {
    "text": "need to look into this and fix",
    "start": "709680",
    "end": "712519"
  },
  {
    "text": "it so if a user saw this they could",
    "start": "712519",
    "end": "715120"
  },
  {
    "text": "click into components maybe and go to",
    "start": "715120",
    "end": "717440"
  },
  {
    "text": "the debug tab right so on the debug tab",
    "start": "717440",
    "end": "720399"
  },
  {
    "text": "you'll see more",
    "start": "720399",
    "end": "721639"
  },
  {
    "text": "information um and I know in this",
    "start": "721639",
    "end": "724480"
  },
  {
    "text": "example uh the the container didn't",
    "start": "724480",
    "end": "726519"
  },
  {
    "text": "start but it's a container dis start and",
    "start": "726519",
    "end": "727959"
  },
  {
    "text": "a lot of times it does and there's",
    "start": "727959",
    "end": "729160"
  },
  {
    "text": "useful error messages we also provide",
    "start": "729160",
    "end": "731480"
  },
  {
    "text": "that",
    "start": "731480",
    "end": "732920"
  },
  {
    "text": "here so again I talked about status",
    "start": "732920",
    "end": "735839"
  },
  {
    "text": "enhancements but also customized",
    "start": "735839",
    "end": "737880"
  },
  {
    "text": "debuggable links so on these links you",
    "start": "737880",
    "end": "740240"
  },
  {
    "text": "can uh have dashboards that detail at",
    "start": "740240",
    "end": "743360"
  },
  {
    "text": "every level resource utilization",
    "start": "743360",
    "end": "744880"
  },
  {
    "text": "throughput and latency uh our team has",
    "start": "744880",
    "end": "746839"
  },
  {
    "text": "worked very hard to get um a very small",
    "start": "746839",
    "end": "750600"
  },
  {
    "text": "number of really good graphs for our",
    "start": "750600",
    "end": "753120"
  },
  {
    "text": "users and we also show events at every",
    "start": "753120",
    "end": "755920"
  },
  {
    "text": "research the kubernetes events and",
    "start": "755920",
    "end": "758199"
  },
  {
    "text": "real-time pod logs and for when the pods",
    "start": "758199",
    "end": "760320"
  },
  {
    "text": "go away we also have a persistent log",
    "start": "760320",
    "end": "762079"
  },
  {
    "text": "store so this helps them observe better",
    "start": "762079",
    "end": "764880"
  },
  {
    "text": "than or observe their services better um",
    "start": "764880",
    "end": "768040"
  },
  {
    "text": "outside of the UI if",
    "start": "768040",
    "end": "770399"
  },
  {
    "text": "needed next let's move on to the",
    "start": "770399",
    "end": "772760"
  },
  {
    "text": "deployment API in order to deploy an",
    "start": "772760",
    "end": "775600"
  },
  {
    "text": "infant service you need to prepare a",
    "start": "775600",
    "end": "777560"
  },
  {
    "text": "yamu manifest to run C to apply with",
    "start": "777560",
    "end": "780199"
  },
  {
    "text": "right so let's see what this API looks",
    "start": "780199",
    "end": "782279"
  },
  {
    "text": "like in space with a yaml manifest being",
    "start": "782279",
    "end": "784920"
  },
  {
    "text": "equivalent to a spaceship that got built",
    "start": "784920",
    "end": "788760"
  },
  {
    "text": "and an infant service equal to a",
    "start": "788760",
    "end": "790440"
  },
  {
    "text": "spaceship that has been launched and is",
    "start": "790440",
    "end": "792240"
  },
  {
    "text": "now flying in space on the left hand",
    "start": "792240",
    "end": "794920"
  },
  {
    "text": "side is the Launchpad where you can",
    "start": "794920",
    "end": "796480"
  },
  {
    "text": "select which infant spaceship to launch",
    "start": "796480",
    "end": "799279"
  },
  {
    "text": "the build and configurations of this",
    "start": "799279",
    "end": "800959"
  },
  {
    "text": "ship is shown as yamu Manifest which",
    "start": "800959",
    "end": "803800"
  },
  {
    "text": "contains the name metadata labels the",
    "start": "803800",
    "end": "806480"
  },
  {
    "text": "model Etc if we'd like to enhance the",
    "start": "806480",
    "end": "809880"
  },
  {
    "text": "API further the spaceships can be",
    "start": "809880",
    "end": "812120"
  },
  {
    "text": "validated and approved beforehand to",
    "start": "812120",
    "end": "815000"
  },
  {
    "text": "make sure that we're always launching a",
    "start": "815000",
    "end": "816680"
  },
  {
    "text": "functional spacecraft at all time",
    "start": "816680",
    "end": "819560"
  },
  {
    "text": "ideally we'd want to build spaceships",
    "start": "819560",
    "end": "822320"
  },
  {
    "text": "way before not wait until we want to",
    "start": "822320",
    "end": "824519"
  },
  {
    "text": "launch one to start building it so for",
    "start": "824519",
    "end": "828079"
  },
  {
    "text": "spaceships that are not yet launched or",
    "start": "828079",
    "end": "830160"
  },
  {
    "text": "have been launched before but have now",
    "start": "830160",
    "end": "832079"
  },
  {
    "text": "returned to the station they are stored",
    "start": "832079",
    "end": "834279"
  },
  {
    "text": "in the space do database on the right",
    "start": "834279",
    "end": "836079"
  },
  {
    "text": "hand side so you can think of the space",
    "start": "836079",
    "end": "838360"
  },
  {
    "text": "do database as where the Manifest of the",
    "start": "838360",
    "end": "840800"
  },
  {
    "text": "infant services will be stored and the",
    "start": "840800",
    "end": "843040"
  },
  {
    "text": "Launchpad is where you pull up a",
    "start": "843040",
    "end": "844519"
  },
  {
    "text": "manifest and deploy it into a",
    "start": "844519",
    "end": "847079"
  },
  {
    "text": "service let's break down this API into a",
    "start": "847079",
    "end": "851440"
  },
  {
    "text": "smaller um Chron chronological steps",
    "start": "851440",
    "end": "854600"
  },
  {
    "text": "first you want to put together an infant",
    "start": "854600",
    "end": "856480"
  },
  {
    "text": "manifest of which the key ingredient is",
    "start": "856480",
    "end": "858360"
  },
  {
    "text": "the model in space this means that",
    "start": "858360",
    "end": "861199"
  },
  {
    "text": "you're building a spaceship with the ml",
    "start": "861199",
    "end": "862880"
  },
  {
    "text": "model being its engine we'll integrate",
    "start": "862880",
    "end": "865959"
  },
  {
    "text": "this API with a model registry that",
    "start": "865959",
    "end": "867920"
  },
  {
    "text": "stores different models like sklearn or",
    "start": "867920",
    "end": "870560"
  },
  {
    "text": "space",
    "start": "870560",
    "end": "871440"
  },
  {
    "text": "GPT and like any other model Registries",
    "start": "871440",
    "end": "874480"
  },
  {
    "text": "out there this one also tracks versions",
    "start": "874480",
    "end": "876560"
  },
  {
    "text": "and statuses of the models this registry",
    "start": "876560",
    "end": "879800"
  },
  {
    "text": "allows you to reuse Monitor and easily",
    "start": "879800",
    "end": "882440"
  },
  {
    "text": "pull a model into the spaceship that you",
    "start": "882440",
    "end": "884720"
  },
  {
    "text": "want to built and if you'd like to learn",
    "start": "884720",
    "end": "887360"
  },
  {
    "text": "more about how we built the internal",
    "start": "887360",
    "end": "890040"
  },
  {
    "text": "model registry at Bloomberg there will",
    "start": "890040",
    "end": "891560"
  },
  {
    "text": "be a talk tomorrow at",
    "start": "891560",
    "end": "894519"
  },
  {
    "text": "11:15 so now that you have built a",
    "start": "894560",
    "end": "897800"
  },
  {
    "text": "spaceship let's find out how they are",
    "start": "897800",
    "end": "900920"
  },
  {
    "text": "docked or where they are docked just",
    "start": "900920",
    "end": "904000"
  },
  {
    "text": "like Zod B Brock and Ford prefect Alexa",
    "start": "904000",
    "end": "907240"
  },
  {
    "text": "and I are also pretty passionate about",
    "start": "907240",
    "end": "909600"
  },
  {
    "text": "spacecraft each of us has our own Fleet",
    "start": "909600",
    "end": "912160"
  },
  {
    "text": "of spaceships with different mix and",
    "start": "912160",
    "end": "914240"
  },
  {
    "text": "models and they're all stored in the",
    "start": "914240",
    "end": "916120"
  },
  {
    "text": "space do database as you can see so how",
    "start": "916120",
    "end": "919560"
  },
  {
    "text": "can they be managed so that we don't",
    "start": "919560",
    "end": "921360"
  },
  {
    "text": "accidentally deploy each other's",
    "start": "921360",
    "end": "923360"
  },
  {
    "text": "spaceships this is the typical challenge",
    "start": "923360",
    "end": "925880"
  },
  {
    "text": "of a cloud native platform how to handle",
    "start": "925880",
    "end": "928240"
  },
  {
    "text": "multi-tenancy",
    "start": "928240",
    "end": "929639"
  },
  {
    "text": "so let's take a step back we are",
    "start": "929639",
    "end": "932040"
  },
  {
    "text": "building our platform on kubernetes so",
    "start": "932040",
    "end": "934639"
  },
  {
    "text": "why don't we use Kate's namespaces to",
    "start": "934639",
    "end": "937079"
  },
  {
    "text": "represent multiple tenants well that's a",
    "start": "937079",
    "end": "940079"
  },
  {
    "text": "neat idea but how do we connect a",
    "start": "940079",
    "end": "943279"
  },
  {
    "text": "kubernetes cluster to a",
    "start": "943279",
    "end": "945199"
  },
  {
    "text": "database this is where K comes in K is a",
    "start": "945199",
    "end": "948920"
  },
  {
    "text": "component of kubies that allows the use",
    "start": "948920",
    "end": "951839"
  },
  {
    "text": "of other external um storage",
    "start": "951839",
    "end": "954240"
  },
  {
    "text": "Alternatives mainly relational databases",
    "start": "954240",
    "end": "956920"
  },
  {
    "text": "as a replacement for ETD so now using",
    "start": "956920",
    "end": "960519"
  },
  {
    "text": "this we can section off spaceships in",
    "start": "960519",
    "end": "962440"
  },
  {
    "text": "our database based on the name spaces",
    "start": "962440",
    "end": "964519"
  },
  {
    "text": "that belong to their",
    "start": "964519",
    "end": "966399"
  },
  {
    "text": "owners utilizing Kate's namespaces we",
    "start": "966399",
    "end": "969319"
  },
  {
    "text": "can have RBS on the cluster to control",
    "start": "969319",
    "end": "972199"
  },
  {
    "text": "access and Privileges and because",
    "start": "972199",
    "end": "974519"
  },
  {
    "text": "stability is one of our um priorities we",
    "start": "974519",
    "end": "978800"
  },
  {
    "text": "can also store this set of policies",
    "start": "978800",
    "end": "981519"
  },
  {
    "text": "externally and translate them into RBX",
    "start": "981519",
    "end": "984399"
  },
  {
    "text": "and doing this if the cluster goes down",
    "start": "984399",
    "end": "986600"
  },
  {
    "text": "for any reason you can still access the",
    "start": "986600",
    "end": "988440"
  },
  {
    "text": "policies and recreate them so with this",
    "start": "988440",
    "end": "991720"
  },
  {
    "text": "design we are now able to track service",
    "start": "991720",
    "end": "993680"
  },
  {
    "text": "ownership and the ownership of space",
    "start": "993680",
    "end": "997880"
  },
  {
    "text": "Vehicles all right so now that you have",
    "start": "997880",
    "end": "1000440"
  },
  {
    "text": "built spaceships know where they're",
    "start": "1000440",
    "end": "1002079"
  },
  {
    "text": "stored and have the peace of mind that",
    "start": "1002079",
    "end": "1004279"
  },
  {
    "text": "no one can used your spaceships let's go",
    "start": "1004279",
    "end": "1006480"
  },
  {
    "text": "to the launch pad to deploy them this is",
    "start": "1006480",
    "end": "1009560"
  },
  {
    "text": "a more detailed launch pad than than",
    "start": "1009560",
    "end": "1011639"
  },
  {
    "text": "what was shown before after introducing",
    "start": "1011639",
    "end": "1014079"
  },
  {
    "text": "Kate's namespaces into our API design",
    "start": "1014079",
    "end": "1016680"
  },
  {
    "text": "we'll now need to specify the namespace",
    "start": "1016680",
    "end": "1019000"
  },
  {
    "text": "that you own and that is associated with",
    "start": "1019000",
    "end": "1021120"
  },
  {
    "text": "the spaceship that you want to launch",
    "start": "1021120",
    "end": "1023600"
  },
  {
    "text": "before launching you also want to make",
    "start": "1023600",
    "end": "1026079"
  },
  {
    "text": "sure another thing which is do you have",
    "start": "1026079",
    "end": "1028120"
  },
  {
    "text": "enough fuel to launch similarly it's",
    "start": "1028120",
    "end": "1030918"
  },
  {
    "text": "like you want to know how many CPUs and",
    "start": "1030919",
    "end": "1033038"
  },
  {
    "text": "gpus that are available to your teny",
    "start": "1033039",
    "end": "1035959"
  },
  {
    "text": "before deploying an infant service",
    "start": "1035959",
    "end": "1038240"
  },
  {
    "text": "because we all know resources are",
    "start": "1038240",
    "end": "1040640"
  },
  {
    "text": "limited and each tenant has different",
    "start": "1040640",
    "end": "1042520"
  },
  {
    "text": "resource limit since kubernetes also",
    "start": "1042520",
    "end": "1045480"
  },
  {
    "text": "allocates Resources by cluster and here",
    "start": "1045480",
    "end": "1048120"
  },
  {
    "text": "we want to try can display resource",
    "start": "1048120",
    "end": "1049960"
  },
  {
    "text": "utilization at cluster and tier level as",
    "start": "1049960",
    "end": "1052440"
  },
  {
    "text": "well which isn't visualized here but",
    "start": "1052440",
    "end": "1054720"
  },
  {
    "text": "should be included in the deployment UI",
    "start": "1054720",
    "end": "1057640"
  },
  {
    "text": "both of these measures um are important",
    "start": "1057640",
    "end": "1060200"
  },
  {
    "text": "to be exposed to the users because they",
    "start": "1060200",
    "end": "1063080"
  },
  {
    "text": "determine if the infant service",
    "start": "1063080",
    "end": "1064600"
  },
  {
    "text": "deployment will be feasible or not if",
    "start": "1064600",
    "end": "1067600"
  },
  {
    "text": "you'd like to modernize the platform",
    "start": "1067600",
    "end": "1069480"
  },
  {
    "text": "further you can choose to implement a",
    "start": "1069480",
    "end": "1071440"
  },
  {
    "text": "separate API that deals with and exposes",
    "start": "1071440",
    "end": "1074960"
  },
  {
    "text": "resource insights exclusively which",
    "start": "1074960",
    "end": "1077120"
  },
  {
    "text": "Alexa has mentioned before",
    "start": "1077120",
    "end": "1080840"
  },
  {
    "text": "now that we have deployed resources",
    "start": "1081240",
    "end": "1083520"
  },
  {
    "text": "let's handle cluster",
    "start": "1083520",
    "end": "1085559"
  },
  {
    "text": "maintenance if you've read the book you",
    "start": "1085559",
    "end": "1088200"
  },
  {
    "text": "probably remember mcgraa which is the",
    "start": "1088200",
    "end": "1091320"
  },
  {
    "text": "richest planet of all time that has been",
    "start": "1091320",
    "end": "1094280"
  },
  {
    "text": "visited by the main characters in the",
    "start": "1094280",
    "end": "1095919"
  },
  {
    "text": "book so it actually orbits two twin Suns",
    "start": "1095919",
    "end": "1100080"
  },
  {
    "text": "um suanes and RAM and using this analogy",
    "start": "1100080",
    "end": "1103720"
  },
  {
    "text": "let's find out how Disaster Recovery is",
    "start": "1103720",
    "end": "1106039"
  },
  {
    "text": "done in space with these Suns um",
    "start": "1106039",
    "end": "1109039"
  },
  {
    "text": "representing a pair of Kate's",
    "start": "1109039",
    "end": "1111559"
  },
  {
    "text": "clusters so just like you would want to",
    "start": "1111559",
    "end": "1114520"
  },
  {
    "text": "have your service up and running at all",
    "start": "1114520",
    "end": "1116480"
  },
  {
    "text": "time in the in the Target tier let's",
    "start": "1116480",
    "end": "1119159"
  },
  {
    "text": "assume that bble Brocks and S bartfast",
    "start": "1119159",
    "end": "1122039"
  },
  {
    "text": "want their spaceships so-called the",
    "start": "1122039",
    "end": "1124240"
  },
  {
    "text": "heart of gold and the Bist math",
    "start": "1124240",
    "end": "1126799"
  },
  {
    "text": "accordingly to orbit a sun at all times",
    "start": "1126799",
    "end": "1130360"
  },
  {
    "text": "and we don't know why but that's their",
    "start": "1130360",
    "end": "1132039"
  },
  {
    "text": "goal so to achieve this each of them",
    "start": "1132039",
    "end": "1135039"
  },
  {
    "text": "launched two identical spaceships one",
    "start": "1135039",
    "end": "1137280"
  },
  {
    "text": "towards each Sun",
    "start": "1137280",
    "end": "1139240"
  },
  {
    "text": "well this is smart because if one sun",
    "start": "1139240",
    "end": "1141919"
  },
  {
    "text": "gets destroyed or explode for any reason",
    "start": "1141919",
    "end": "1145200"
  },
  {
    "text": "they will still have the same spaceship",
    "start": "1145200",
    "end": "1147000"
  },
  {
    "text": "heading towards the other Sun so",
    "start": "1147000",
    "end": "1149240"
  },
  {
    "text": "unknowingly they've handled Disaster",
    "start": "1149240",
    "end": "1152240"
  },
  {
    "text": "Recovery amazing right so for our KU",
    "start": "1152240",
    "end": "1156000"
  },
  {
    "text": "platform we can do the same thing we can",
    "start": "1156000",
    "end": "1157919"
  },
  {
    "text": "translate this idea into setting up a",
    "start": "1157919",
    "end": "1160559"
  },
  {
    "text": "pair of identical Kates clusters in per",
    "start": "1160559",
    "end": "1164000"
  },
  {
    "text": "tier per each tier and always deploy",
    "start": "1164000",
    "end": "1166440"
  },
  {
    "text": "every infant service to both of them so",
    "start": "1166440",
    "end": "1169200"
  },
  {
    "text": "if one cluster goes down we'll still",
    "start": "1169200",
    "end": "1171200"
  },
  {
    "text": "have the other cluster serving traffic",
    "start": "1171200",
    "end": "1173600"
  },
  {
    "text": "with the exact same",
    "start": "1173600",
    "end": "1176440"
  },
  {
    "text": "configurations when setting up our Cloud",
    "start": "1176440",
    "end": "1178679"
  },
  {
    "text": "native infrastructure um we want to",
    "start": "1178679",
    "end": "1180960"
  },
  {
    "text": "treat our clusters as cattle and not",
    "start": "1180960",
    "end": "1183240"
  },
  {
    "text": "pets and what does that mean um that",
    "start": "1183240",
    "end": "1185559"
  },
  {
    "text": "means that they should be easily taken",
    "start": "1185559",
    "end": "1187200"
  },
  {
    "text": "down and started up without effort and",
    "start": "1187200",
    "end": "1189320"
  },
  {
    "text": "without affecting the users and in order",
    "start": "1189320",
    "end": "1192000"
  },
  {
    "text": "to accomplish this we keep a single",
    "start": "1192000",
    "end": "1193919"
  },
  {
    "text": "source of Truth externally which stores",
    "start": "1193919",
    "end": "1196600"
  },
  {
    "text": "the desired state of a cluster",
    "start": "1196600",
    "end": "1199440"
  },
  {
    "text": "um and outlining resources that should",
    "start": "1199440",
    "end": "1201440"
  },
  {
    "text": "be in it at a given time similarly in",
    "start": "1201440",
    "end": "1204480"
  },
  {
    "text": "space um we have this table um that can",
    "start": "1204480",
    "end": "1207440"
  },
  {
    "text": "be kept in space do database as well um",
    "start": "1207440",
    "end": "1209960"
  },
  {
    "text": "that records the instances of spaceships",
    "start": "1209960",
    "end": "1212360"
  },
  {
    "text": "heading towards um what sun and in what",
    "start": "1212360",
    "end": "1217840"
  },
  {
    "text": "namespace coupled with a debugging UI",
    "start": "1218480",
    "end": "1221000"
  },
  {
    "text": "that was introduced earlier adding this",
    "start": "1221000",
    "end": "1222799"
  },
  {
    "text": "deployment API to the platform will will",
    "start": "1222799",
    "end": "1225360"
  },
  {
    "text": "ensure a centralized and continuous",
    "start": "1225360",
    "end": "1227280"
  },
  {
    "text": "inferenced pipeline from creating yamu",
    "start": "1227280",
    "end": "1229640"
  },
  {
    "text": "files to deploying them into Services um",
    "start": "1229640",
    "end": "1232799"
  },
  {
    "text": "to debugging and monitoring the service",
    "start": "1232799",
    "end": "1234880"
  },
  {
    "text": "statuses having this API also allows",
    "start": "1234880",
    "end": "1237200"
  },
  {
    "text": "users to perform programmatic deployment",
    "start": "1237200",
    "end": "1239880"
  },
  {
    "text": "for example by calling the API directly",
    "start": "1239880",
    "end": "1241960"
  },
  {
    "text": "in their workflow without having uh",
    "start": "1241960",
    "end": "1244200"
  },
  {
    "text": "without having to ever touch",
    "start": "1244200",
    "end": "1246280"
  },
  {
    "text": "kutle um and as you can see throughout",
    "start": "1246280",
    "end": "1248640"
  },
  {
    "text": "the design we have Incorporated the",
    "start": "1248640",
    "end": "1251480"
  },
  {
    "text": "three um principles through managing",
    "start": "1251480",
    "end": "1254000"
  },
  {
    "text": "Access Control handling disaster",
    "start": "1254000",
    "end": "1256080"
  },
  {
    "text": "recovery and exposing resource insights",
    "start": "1256080",
    "end": "1259840"
  },
  {
    "text": "our next and final API is the versioning",
    "start": "1259840",
    "end": "1261840"
  },
  {
    "text": "API which is actually represented by the",
    "start": "1261840",
    "end": "1264400"
  },
  {
    "text": "space database it allows you to save and",
    "start": "1264400",
    "end": "1267039"
  },
  {
    "text": "store versions of your spaceships and",
    "start": "1267039",
    "end": "1268960"
  },
  {
    "text": "easily launch and revert them so",
    "start": "1268960",
    "end": "1271919"
  },
  {
    "text": "remember when we want to access your",
    "start": "1271919",
    "end": "1273480"
  },
  {
    "text": "database through a Kat's",
    "start": "1273480",
    "end": "1275159"
  },
  {
    "text": "cluster well in order to work together",
    "start": "1275159",
    "end": "1278159"
  },
  {
    "text": "for them to work together um we'll need",
    "start": "1278159",
    "end": "1280159"
  },
  {
    "text": "to create crds for the resources that we",
    "start": "1280159",
    "end": "1282640"
  },
  {
    "text": "want to store in the database and one of",
    "start": "1282640",
    "end": "1284880"
  },
  {
    "text": "which will be the Manifest and this is",
    "start": "1284880",
    "end": "1287440"
  },
  {
    "text": "what we'll have in real life we'll have",
    "start": "1287440",
    "end": "1288919"
  },
  {
    "text": "a bunch of manifest which we can use to",
    "start": "1288919",
    "end": "1291240"
  },
  {
    "text": "deploy an infant service and also revert",
    "start": "1291240",
    "end": "1293480"
  },
  {
    "text": "an infant service back to one of",
    "start": "1293480",
    "end": "1295480"
  },
  {
    "text": "them um by creating custom resources for",
    "start": "1295480",
    "end": "1298279"
  },
  {
    "text": "the Manifest and using kind to um store",
    "start": "1298279",
    "end": "1302400"
  },
  {
    "text": "them in an external database our",
    "start": "1302400",
    "end": "1304159"
  },
  {
    "text": "versioning API is completely kues native",
    "start": "1304159",
    "end": "1307600"
  },
  {
    "text": "and this gives us dry run and validation",
    "start": "1307600",
    "end": "1310200"
  },
  {
    "text": "out of the box along with the ability to",
    "start": "1310200",
    "end": "1312559"
  },
  {
    "text": "manage multiple tenants and manage um",
    "start": "1312559",
    "end": "1314799"
  },
  {
    "text": "access control as mentioned before",
    "start": "1314799",
    "end": "1317919"
  },
  {
    "text": "aining API typically enables users to",
    "start": "1317919",
    "end": "1320600"
  },
  {
    "text": "reuse manifest and perform rollbacks and",
    "start": "1320600",
    "end": "1323000"
  },
  {
    "text": "promotions of infant Services of infant",
    "start": "1323000",
    "end": "1325919"
  },
  {
    "text": "Services easily and the deployment API",
    "start": "1325919",
    "end": "1329159"
  },
  {
    "text": "and Virginia apis can work together to",
    "start": "1329159",
    "end": "1331520"
  },
  {
    "text": "create and save a deploy event whenever",
    "start": "1331520",
    "end": "1333799"
  },
  {
    "text": "user deploy revert or delete an infant",
    "start": "1333799",
    "end": "1336720"
  },
  {
    "text": "service and this will provide an audit",
    "start": "1336720",
    "end": "1339159"
  },
  {
    "text": "Trail for the deployment",
    "start": "1339159",
    "end": "1340919"
  },
  {
    "text": "history um so why do we want to",
    "start": "1340919",
    "end": "1343960"
  },
  {
    "text": "implement an internal visioning system",
    "start": "1343960",
    "end": "1345760"
  },
  {
    "text": "instead of using get offs with argocd",
    "start": "1345760",
    "end": "1348000"
  },
  {
    "text": "for example",
    "start": "1348000",
    "end": "1349320"
  },
  {
    "text": "um well first of all a Bloomberg our",
    "start": "1349320",
    "end": "1350960"
  },
  {
    "text": "source of Truth is stored in a database",
    "start": "1350960",
    "end": "1353039"
  },
  {
    "text": "for security measures um but having our",
    "start": "1353039",
    "end": "1355799"
  },
  {
    "text": "internal system also allows us to do",
    "start": "1355799",
    "end": "1358640"
  },
  {
    "text": "deployment overrides and also providing",
    "start": "1358640",
    "end": "1361039"
  },
  {
    "text": "diffs between versions um and we can",
    "start": "1361039",
    "end": "1363600"
  },
  {
    "text": "customize the features catering to our",
    "start": "1363600",
    "end": "1365279"
  },
  {
    "text": "users and it will also make it easier",
    "start": "1365279",
    "end": "1367640"
  },
  {
    "text": "for us to integrate with the UI and",
    "start": "1367640",
    "end": "1369480"
  },
  {
    "text": "streamline our user",
    "start": "1369480",
    "end": "1371640"
  },
  {
    "text": "experience and just as in space where",
    "start": "1371640",
    "end": "1374279"
  },
  {
    "text": "people would want space stations and",
    "start": "1374279",
    "end": "1375799"
  },
  {
    "text": "spaceships to follow Thea the same",
    "start": "1375799",
    "end": "1377919"
  },
  {
    "text": "galactic rues tools we want to push for",
    "start": "1377919",
    "end": "1379640"
  },
  {
    "text": "cohesive apis across um teams in our orc",
    "start": "1379640",
    "end": "1382880"
  },
  {
    "text": "because each team will support a part of",
    "start": "1382880",
    "end": "1384919"
  },
  {
    "text": "the full U model development life cycle",
    "start": "1384919",
    "end": "1388159"
  },
  {
    "text": "um and having uniform apis across the",
    "start": "1388159",
    "end": "1390559"
  },
  {
    "text": "team will also reduce duplicate efforts",
    "start": "1390559",
    "end": "1393679"
  },
  {
    "text": "and streamline um at the endtoend",
    "start": "1393679",
    "end": "1395720"
  },
  {
    "text": "experience from um training to deploying",
    "start": "1395720",
    "end": "1398720"
  },
  {
    "text": "their uh the users models apart from the",
    "start": "1398720",
    "end": "1402000"
  },
  {
    "text": "apis we also replicate the",
    "start": "1402000",
    "end": "1403799"
  },
  {
    "text": "infrastructure under underlying each",
    "start": "1403799",
    "end": "1405919"
  },
  {
    "text": "runtime um from one common stack so with",
    "start": "1405919",
    "end": "1408880"
  },
  {
    "text": "the same name spaces tiers and",
    "start": "1408880",
    "end": "1411799"
  },
  {
    "text": "clusters so in reality our API design is",
    "start": "1411799",
    "end": "1416480"
  },
  {
    "text": "mainly user driven we usually conduct",
    "start": "1416480",
    "end": "1418559"
  },
  {
    "text": "user interviews before building out new",
    "start": "1418559",
    "end": "1420240"
  },
  {
    "text": "features and collect their satisfaction",
    "start": "1420240",
    "end": "1422240"
  },
  {
    "text": "score with each aspect of the UI and ux",
    "start": "1422240",
    "end": "1424640"
  },
  {
    "text": "after the features already rolled out",
    "start": "1424640",
    "end": "1427039"
  },
  {
    "text": "according to the survey uh our alien",
    "start": "1427039",
    "end": "1429000"
  },
  {
    "text": "user thinks that the deployment process",
    "start": "1429000",
    "end": "1430760"
  },
  {
    "text": "on the interstellar launch pad is pretty",
    "start": "1430760",
    "end": "1433799"
  },
  {
    "text": "awesome so with better apis we can",
    "start": "1433799",
    "end": "1436320"
  },
  {
    "text": "decrease the support burden for our",
    "start": "1436320",
    "end": "1437960"
  },
  {
    "text": "platform team teams and at the same time",
    "start": "1437960",
    "end": "1440320"
  },
  {
    "text": "we still need to provide sufficient and",
    "start": "1440320",
    "end": "1442039"
  },
  {
    "text": "upto-date um documentation and",
    "start": "1442039",
    "end": "1444400"
  },
  {
    "text": "onboarding guide along with active",
    "start": "1444400",
    "end": "1446120"
  },
  {
    "text": "support chat to answer questions and the",
    "start": "1446120",
    "end": "1448080"
  },
  {
    "text": "buug issues live once or twice a year",
    "start": "1448080",
    "end": "1450760"
  },
  {
    "text": "we'll also hold workshops to introduce",
    "start": "1450760",
    "end": "1452480"
  },
  {
    "text": "new features and provide in-depth",
    "start": "1452480",
    "end": "1454000"
  },
  {
    "text": "training to our platform",
    "start": "1454000",
    "end": "1456320"
  },
  {
    "text": "users so looking forward we are looking",
    "start": "1456320",
    "end": "1460000"
  },
  {
    "text": "to reach level three scalability as a",
    "start": "1460000",
    "end": "1462679"
  },
  {
    "text": "product you can see the timeline of our",
    "start": "1462679",
    "end": "1464640"
  },
  {
    "text": "inference platform above it um so",
    "start": "1464640",
    "end": "1467480"
  },
  {
    "text": "basically our next challenge revolve on",
    "start": "1467480",
    "end": "1469159"
  },
  {
    "text": "scaling we also want to provide a lot of",
    "start": "1469159",
    "end": "1471399"
  },
  {
    "text": "llm support as llms are becoming",
    "start": "1471399",
    "end": "1473399"
  },
  {
    "text": "increasingly popular uh we want to make",
    "start": "1473399",
    "end": "1475960"
  },
  {
    "text": "a benchmarking API and uh and roll out",
    "start": "1475960",
    "end": "1479279"
  },
  {
    "text": "our open AI protocol support as",
    "start": "1479279",
    "end": "1482440"
  },
  {
    "text": "well so now that we've given you all the",
    "start": "1482440",
    "end": "1485200"
  },
  {
    "text": "answers to build an amazing AI platform",
    "start": "1485200",
    "end": "1487919"
  },
  {
    "text": "you can go build your own um so so long",
    "start": "1487919",
    "end": "1490200"
  },
  {
    "text": "and thanks for all the",
    "start": "1490200",
    "end": "1492740"
  },
  {
    "text": "[Applause]",
    "start": "1492740",
    "end": "1497320"
  },
  {
    "text": "fish",
    "start": "1497320",
    "end": "1500320"
  },
  {
    "text": "we have a couple minutes for Q&A if",
    "start": "1504399",
    "end": "1506200"
  },
  {
    "text": "anyone have any",
    "start": "1506200",
    "end": "1509080"
  },
  {
    "text": "questions I I think we gave all the",
    "start": "1511520",
    "end": "1513880"
  },
  {
    "text": "answers true",
    "start": "1513880",
    "end": "1517200"
  },
  {
    "text": "42 she",
    "start": "1521919",
    "end": "1525398"
  },
  {
    "text": "go",
    "start": "1527320",
    "end": "1529360"
  },
  {
    "text": "okay thank you thank",
    "start": "1529360",
    "end": "1532799"
  },
  {
    "text": "you",
    "start": "1533440",
    "end": "1536440"
  }
]