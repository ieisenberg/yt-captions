[
  {
    "text": "hello everyone",
    "start": "0",
    "end": "2159"
  },
  {
    "text": "my name is elza Matthew I'm a software",
    "start": "2159",
    "end": "5339"
  },
  {
    "text": "engineer at Intel working at the",
    "start": "5339",
    "end": "7620"
  },
  {
    "text": "intersection of cloud native",
    "start": "7620",
    "end": "9059"
  },
  {
    "text": "Technologies and packet processing",
    "start": "9059",
    "end": "10980"
  },
  {
    "text": "software libraries I've been at Intel",
    "start": "10980",
    "end": "13679"
  },
  {
    "text": "for about six years now",
    "start": "13679",
    "end": "15540"
  },
  {
    "text": "previously I've also worked on ethernet",
    "start": "15540",
    "end": "18240"
  },
  {
    "text": "networking driver software design and",
    "start": "18240",
    "end": "20640"
  },
  {
    "text": "development for various os's I would",
    "start": "20640",
    "end": "23760"
  },
  {
    "text": "also like to introduce the primary",
    "start": "23760",
    "end": "25619"
  },
  {
    "text": "author of The Talk who could not make it",
    "start": "25619",
    "end": "27539"
  },
  {
    "text": "in person but is happy to answer any",
    "start": "27539",
    "end": "29519"
  },
  {
    "text": "follow-up questions offline Manoj is a",
    "start": "29519",
    "end": "33059"
  },
  {
    "text": "software architect in data play",
    "start": "33059",
    "end": "34800"
  },
  {
    "text": "networking team in the network and Edge",
    "start": "34800",
    "end": "36780"
  },
  {
    "text": "group at Intel he is currently working",
    "start": "36780",
    "end": "39120"
  },
  {
    "text": "on building and optimizing Cloud native",
    "start": "39120",
    "end": "41520"
  },
  {
    "text": "services",
    "start": "41520",
    "end": "42660"
  },
  {
    "text": "using network data plane Technologies",
    "start": "42660",
    "end": "44940"
  },
  {
    "text": "and has over 20 years industry",
    "start": "44940",
    "end": "47160"
  },
  {
    "text": "experience in multiple technology",
    "start": "47160",
    "end": "48780"
  },
  {
    "text": "domains",
    "start": "48780",
    "end": "50700"
  },
  {
    "text": "today's talk is about the work we did",
    "start": "50700",
    "end": "53460"
  },
  {
    "text": "integrating Cloud native data plane cndp",
    "start": "53460",
    "end": "57059"
  },
  {
    "text": "which is a collection of user space",
    "start": "57059",
    "end": "59520"
  },
  {
    "text": "libraries for accelerating packet",
    "start": "59520",
    "end": "61800"
  },
  {
    "text": "processing for cloud applications with",
    "start": "61800",
    "end": "64860"
  },
  {
    "text": "omac best UPF AC best UPF is the open",
    "start": "64860",
    "end": "69420"
  },
  {
    "text": "networking foundations",
    "start": "69420",
    "end": "71340"
  },
  {
    "text": "Omak UPF project which implements a 4G",
    "start": "71340",
    "end": "74820"
  },
  {
    "text": "5G user plane function based on the 3gpp",
    "start": "74820",
    "end": "78420"
  },
  {
    "text": "control and user plane separation",
    "start": "78420",
    "end": "80700"
  },
  {
    "text": "architecture",
    "start": "80700",
    "end": "82979"
  },
  {
    "text": "we will talk about the traffic flow",
    "start": "82979",
    "end": "85560"
  },
  {
    "text": "through the UPF pipeline in a Docker",
    "start": "85560",
    "end": "87960"
  },
  {
    "text": "environment the kubernetes integration",
    "start": "87960",
    "end": "90240"
  },
  {
    "text": "with the afxdp plugins for kubernetes",
    "start": "90240",
    "end": "92759"
  },
  {
    "text": "and The Ether in a box deployment model",
    "start": "92759",
    "end": "96479"
  },
  {
    "text": "we will also describe platform",
    "start": "96479",
    "end": "98280"
  },
  {
    "text": "Technologies for gtpu packet steering",
    "start": "98280",
    "end": "100740"
  },
  {
    "text": "and how this works along with offload",
    "start": "100740",
    "end": "102960"
  },
  {
    "text": "feature in the Nic to redirect gtpu",
    "start": "102960",
    "end": "105600"
  },
  {
    "text": "packets directly to user space via afxdp",
    "start": "105600",
    "end": "109979"
  },
  {
    "text": "so the agenda for today's talk is",
    "start": "109979",
    "end": "112320"
  },
  {
    "text": "divided into three sections first will",
    "start": "112320",
    "end": "115020"
  },
  {
    "text": "be on cndp where we'll start off with",
    "start": "115020",
    "end": "118200"
  },
  {
    "text": "the motivation for cndp go into a little",
    "start": "118200",
    "end": "121020"
  },
  {
    "text": "bit of detail about what cndp is and the",
    "start": "121020",
    "end": "124020"
  },
  {
    "text": "various components that comprise it we",
    "start": "124020",
    "end": "126360"
  },
  {
    "text": "will also talk about the cndp kubernetes",
    "start": "126360",
    "end": "129300"
  },
  {
    "text": "deployment model and the afxdp plugins",
    "start": "129300",
    "end": "133200"
  },
  {
    "text": "for kubernetes",
    "start": "133200",
    "end": "135599"
  },
  {
    "text": "in the next section we will talk about",
    "start": "135599",
    "end": "138000"
  },
  {
    "text": "best omac UPF and how cndp integrates",
    "start": "138000",
    "end": "142440"
  },
  {
    "text": "with each of those projects then we will",
    "start": "142440",
    "end": "145920"
  },
  {
    "text": "move into the kubernetes integration The",
    "start": "145920",
    "end": "149340"
  },
  {
    "text": "Ether in a box integration and then wrap",
    "start": "149340",
    "end": "152400"
  },
  {
    "text": "up with a short demo",
    "start": "152400",
    "end": "155599"
  },
  {
    "text": "bring into the first section",
    "start": "156840",
    "end": "158760"
  },
  {
    "text": "cndp or Cloud native data plane",
    "start": "158760",
    "end": "162480"
  },
  {
    "text": "we've had great success with dpdk and",
    "start": "162480",
    "end": "165360"
  },
  {
    "text": "VPP so why another development kit",
    "start": "165360",
    "end": "170220"
  },
  {
    "text": "primary reasons are sometimes data",
    "start": "170220",
    "end": "172800"
  },
  {
    "text": "planes are not designed to operate in a",
    "start": "172800",
    "end": "174900"
  },
  {
    "text": "hybrid private or public Cloud",
    "start": "174900",
    "end": "176519"
  },
  {
    "text": "environment this is because of Hardware",
    "start": "176519",
    "end": "179700"
  },
  {
    "text": "requirements such as CPU memory and",
    "start": "179700",
    "end": "182819"
  },
  {
    "text": "networking interface",
    "start": "182819",
    "end": "184980"
  },
  {
    "text": "to better align with the cloud native",
    "start": "184980",
    "end": "187080"
  },
  {
    "text": "environments and principles we need a",
    "start": "187080",
    "end": "189959"
  },
  {
    "text": "data plane that doesn't have these",
    "start": "189959",
    "end": "191819"
  },
  {
    "text": "restrictions",
    "start": "191819",
    "end": "193260"
  },
  {
    "text": "that is the origin of the cndp concept",
    "start": "193260",
    "end": "196040"
  },
  {
    "text": "we took the key Concepts from dpdk to",
    "start": "196040",
    "end": "199739"
  },
  {
    "text": "achieve the performance requirements",
    "start": "199739",
    "end": "202459"
  },
  {
    "text": "cndp was created to enable Cloud native",
    "start": "202459",
    "end": "206099"
  },
  {
    "text": "developers to use afxdp and other",
    "start": "206099",
    "end": "209340"
  },
  {
    "text": "interfaces in a simple way while",
    "start": "209340",
    "end": "211800"
  },
  {
    "text": "providing better performance as compared",
    "start": "211800",
    "end": "214140"
  },
  {
    "text": "to standard Linux networking service",
    "start": "214140",
    "end": "216120"
  },
  {
    "text": "interfaces",
    "start": "216120",
    "end": "218879"
  },
  {
    "text": "cndp does not replace dpdk",
    "start": "218879",
    "end": "222360"
  },
  {
    "text": "dpdk still provides the highest",
    "start": "222360",
    "end": "224280"
  },
  {
    "text": "performance packet processing dpdk",
    "start": "224280",
    "end": "227159"
  },
  {
    "text": "implements user space drivers bypassing",
    "start": "227159",
    "end": "229799"
  },
  {
    "text": "kernel drivers and that is one of the",
    "start": "229799",
    "end": "231959"
  },
  {
    "text": "reasons why it achieves the highest",
    "start": "231959",
    "end": "234120"
  },
  {
    "text": "performance for packet processing",
    "start": "234120",
    "end": "236420"
  },
  {
    "text": "dpdk also implements a framework for",
    "start": "236420",
    "end": "240200"
  },
  {
    "text": "initializing and setting up platform",
    "start": "240200",
    "end": "242280"
  },
  {
    "text": "resources scanning PCI bus allocating",
    "start": "242280",
    "end": "245220"
  },
  {
    "text": "memory via huge Pages Etc",
    "start": "245220",
    "end": "247980"
  },
  {
    "text": "however in contrast to dpdk cndp does",
    "start": "247980",
    "end": "251580"
  },
  {
    "text": "not have custom drivers instead it",
    "start": "251580",
    "end": "254220"
  },
  {
    "text": "expects the kernel drivers to implement",
    "start": "254220",
    "end": "256639"
  },
  {
    "text": "afxdp preferably in zero copy mode",
    "start": "256639",
    "end": "260340"
  },
  {
    "text": "since there are no PCI drivers there's",
    "start": "260340",
    "end": "262680"
  },
  {
    "text": "no PCI bus scanning and we do not",
    "start": "262680",
    "end": "265199"
  },
  {
    "text": "require physically contiguous and pin",
    "start": "265199",
    "end": "267600"
  },
  {
    "text": "mapenary this simplifies deployment for",
    "start": "267600",
    "end": "271500"
  },
  {
    "text": "cloud native applications while gaining",
    "start": "271500",
    "end": "274020"
  },
  {
    "text": "the performance benefits provided by",
    "start": "274020",
    "end": "276540"
  },
  {
    "text": "afxdp",
    "start": "276540",
    "end": "278220"
  },
  {
    "text": "cndp fits the void between flexibility",
    "start": "278220",
    "end": "281759"
  },
  {
    "text": "and performance we target 10x",
    "start": "281759",
    "end": "284220"
  },
  {
    "text": "performance over Linux applications",
    "start": "284220",
    "end": "285900"
  },
  {
    "text": "using sockets and also clean integration",
    "start": "285900",
    "end": "288540"
  },
  {
    "text": "into various Cloud tool chains as a",
    "start": "288540",
    "end": "291120"
  },
  {
    "text": "requirement",
    "start": "291120",
    "end": "293100"
  },
  {
    "text": "dpdk and BPP are the best solutions for",
    "start": "293100",
    "end": "296400"
  },
  {
    "text": "Undisputed performance and cndp fits the",
    "start": "296400",
    "end": "300300"
  },
  {
    "text": "void between flexibility and performance",
    "start": "300300",
    "end": "303540"
  },
  {
    "text": "so what is cndp it is a collection of",
    "start": "303540",
    "end": "307320"
  },
  {
    "text": "user space libraries for accelerating",
    "start": "307320",
    "end": "309720"
  },
  {
    "text": "packet processing for cloud applications",
    "start": "309720",
    "end": "313680"
  },
  {
    "text": "it aims to provide better performance",
    "start": "313680",
    "end": "315540"
  },
  {
    "text": "than that of standard networking socket",
    "start": "315540",
    "end": "317400"
  },
  {
    "text": "interfaces the i o layer is primarily",
    "start": "317400",
    "end": "320400"
  },
  {
    "text": "built on afxdp this is an interface that",
    "start": "320400",
    "end": "324360"
  },
  {
    "text": "delivers packets straight to the user",
    "start": "324360",
    "end": "326699"
  },
  {
    "text": "space bypassing the kernel networking",
    "start": "326699",
    "end": "328860"
  },
  {
    "text": "stack cndp also provides ways to expose",
    "start": "328860",
    "end": "332880"
  },
  {
    "text": "metrics and Telemetry with examples to",
    "start": "332880",
    "end": "335940"
  },
  {
    "text": "deploy Network Services on kubernetes",
    "start": "335940",
    "end": "339139"
  },
  {
    "text": "cndp consumers include Cloud Network",
    "start": "339139",
    "end": "342720"
  },
  {
    "text": "function",
    "start": "342720",
    "end": "343860"
  },
  {
    "text": "developers as well as consumers",
    "start": "343860",
    "end": "346400"
  },
  {
    "text": "developers who create applications based",
    "start": "346400",
    "end": "349620"
  },
  {
    "text": "on cndp will be able",
    "start": "349620",
    "end": "352740"
  },
  {
    "text": "to",
    "start": "352740",
    "end": "353300"
  },
  {
    "text": "abstract away the low level i o that",
    "start": "353300",
    "end": "356160"
  },
  {
    "text": "cndp takes care of and focus on their",
    "start": "356160",
    "end": "359280"
  },
  {
    "text": "application",
    "start": "359280",
    "end": "361080"
  },
  {
    "text": "the consumers who consume the",
    "start": "361080",
    "end": "363060"
  },
  {
    "text": "applications developed by the CNF",
    "start": "363060",
    "end": "365100"
  },
  {
    "text": "developer can take advantage of cndp's",
    "start": "365100",
    "end": "368400"
  },
  {
    "text": "deployment models for their applications",
    "start": "368400",
    "end": "370020"
  },
  {
    "text": "using kubernetes",
    "start": "370020",
    "end": "372539"
  },
  {
    "text": "cndp follows a set of cloud native",
    "start": "372539",
    "end": "375180"
  },
  {
    "text": "principles functionality usability",
    "start": "375180",
    "end": "378800"
  },
  {
    "text": "interoperability portability performance",
    "start": "378800",
    "end": "382160"
  },
  {
    "text": "observability and security and here's",
    "start": "382160",
    "end": "385620"
  },
  {
    "text": "how",
    "start": "385620",
    "end": "387660"
  },
  {
    "text": "on functionality cndp provides a",
    "start": "387660",
    "end": "390479"
  },
  {
    "text": "framework that enables Cloud native",
    "start": "390479",
    "end": "393240"
  },
  {
    "text": "developers full control of their",
    "start": "393240",
    "end": "395340"
  },
  {
    "text": "application usability",
    "start": "395340",
    "end": "398940"
  },
  {
    "text": "cndp enables",
    "start": "399680",
    "end": "402000"
  },
  {
    "text": "the developer to create applications by",
    "start": "402000",
    "end": "405000"
  },
  {
    "text": "providing apis that abstract the",
    "start": "405000",
    "end": "407039"
  },
  {
    "text": "complexities of the underlying system",
    "start": "407039",
    "end": "409580"
  },
  {
    "text": "interoperability",
    "start": "409580",
    "end": "411419"
  },
  {
    "text": "since cndp is built on top of afxdp it's",
    "start": "411419",
    "end": "416039"
  },
  {
    "text": "possible to move the application across",
    "start": "416039",
    "end": "418680"
  },
  {
    "text": "environment from public to private to",
    "start": "418680",
    "end": "420780"
  },
  {
    "text": "hybrid Cloud wherever afxdp is supported",
    "start": "420780",
    "end": "425780"
  },
  {
    "text": "NDP provides a common API to access",
    "start": "427020",
    "end": "429840"
  },
  {
    "text": "network interfaces",
    "start": "429840",
    "end": "431940"
  },
  {
    "text": "with regards to Performance it takes",
    "start": "431940",
    "end": "434100"
  },
  {
    "text": "advantage of platform Technologies",
    "start": "434100",
    "end": "436220"
  },
  {
    "text": "wherever it is available and If there",
    "start": "436220",
    "end": "439740"
  },
  {
    "text": "are no specific Hardware Technologies",
    "start": "439740",
    "end": "442440"
  },
  {
    "text": "then you can always fall back to the",
    "start": "442440",
    "end": "445319"
  },
  {
    "text": "software when acceleration is",
    "start": "445319",
    "end": "447599"
  },
  {
    "text": "unavailable",
    "start": "447599",
    "end": "449120"
  },
  {
    "text": "observability and security is another",
    "start": "449120",
    "end": "452520"
  },
  {
    "text": "key aspect that cndp focuses on",
    "start": "452520",
    "end": "456139"
  },
  {
    "text": "metrics are exposed via Prometheus",
    "start": "456139",
    "end": "459120"
  },
  {
    "text": "Asians and security is also",
    "start": "459120",
    "end": "463020"
  },
  {
    "text": "um first class Citizen and we'll come to",
    "start": "463020",
    "end": "465419"
  },
  {
    "text": "that in the next slide this diagram",
    "start": "465419",
    "end": "467840"
  },
  {
    "text": "showcases the various components that",
    "start": "467840",
    "end": "470160"
  },
  {
    "text": "comprise the NDP you have the core",
    "start": "470160",
    "end": "472440"
  },
  {
    "text": "libraries the application libraries you",
    "start": "472440",
    "end": "475440"
  },
  {
    "text": "also have the cloud native stack which",
    "start": "475440",
    "end": "478080"
  },
  {
    "text": "is",
    "start": "478080",
    "end": "479639"
  },
  {
    "text": "uh ibv4 UDP TCP networking stack",
    "start": "479639",
    "end": "482819"
  },
  {
    "text": "designed using the cndp graph node",
    "start": "482819",
    "end": "485160"
  },
  {
    "text": "Library we also have language bindings",
    "start": "485160",
    "end": "487979"
  },
  {
    "text": "with go and rust and there are a couple",
    "start": "487979",
    "end": "490740"
  },
  {
    "text": "of ansible playbooks that you can use to",
    "start": "490740",
    "end": "493500"
  },
  {
    "text": "help with setting up your system",
    "start": "493500",
    "end": "496639"
  },
  {
    "text": "this is a diagram of the cndp and",
    "start": "496919",
    "end": "499860"
  },
  {
    "text": "kubernetes deployment model which shows",
    "start": "499860",
    "end": "502800"
  },
  {
    "text": "the integration of cndp with the AF XDP",
    "start": "502800",
    "end": "506699"
  },
  {
    "text": "plugins for kubernetes this is a device",
    "start": "506699",
    "end": "509580"
  },
  {
    "text": "plugin and cni the benefits of this",
    "start": "509580",
    "end": "512760"
  },
  {
    "text": "integration is twofold security and",
    "start": "512760",
    "end": "516120"
  },
  {
    "text": "scalability",
    "start": "516120",
    "end": "518099"
  },
  {
    "text": "Security in order to run the cndp",
    "start": "518099",
    "end": "521459"
  },
  {
    "text": "application",
    "start": "521459",
    "end": "522779"
  },
  {
    "text": "in a secure unprivileged pod there were",
    "start": "522779",
    "end": "525779"
  },
  {
    "text": "two aspects of afxdp socket creation",
    "start": "525779",
    "end": "528180"
  },
  {
    "text": "that needed to be done by the afxdp",
    "start": "528180",
    "end": "531120"
  },
  {
    "text": "device plugin and cni that is the",
    "start": "531120",
    "end": "533519"
  },
  {
    "text": "loading of the evpf program on the net",
    "start": "533519",
    "end": "536100"
  },
  {
    "text": "Dev and updating the air xsk map with",
    "start": "536100",
    "end": "539279"
  },
  {
    "text": "the file descriptor",
    "start": "539279",
    "end": "541380"
  },
  {
    "text": "scalability in addition to helping cndp",
    "start": "541380",
    "end": "544740"
  },
  {
    "text": "run in a secure unprivileged pod afxt",
    "start": "544740",
    "end": "547980"
  },
  {
    "text": "device plugins help the scalability by",
    "start": "547980",
    "end": "550860"
  },
  {
    "text": "supporting subfunctions API",
    "start": "550860",
    "end": "553080"
  },
  {
    "text": "since AFX DP socket is only associated",
    "start": "553080",
    "end": "556019"
  },
  {
    "text": "with a port and qid Tuple",
    "start": "556019",
    "end": "558660"
  },
  {
    "text": "a single net depth comprising of",
    "start": "558660",
    "end": "560640"
  },
  {
    "text": "multiple sub functions can be used by",
    "start": "560640",
    "end": "562680"
  },
  {
    "text": "multiple pods instead of moving the",
    "start": "562680",
    "end": "564839"
  },
  {
    "text": "entire interface into the pod",
    "start": "564839",
    "end": "567300"
  },
  {
    "text": "eat tool filters are programmed by the",
    "start": "567300",
    "end": "569459"
  },
  {
    "text": "cni and traffic metrics are exported by",
    "start": "569459",
    "end": "573180"
  },
  {
    "text": "the sidecar container running Prometheus",
    "start": "573180",
    "end": "577519"
  },
  {
    "text": "Switching gears now let's move on to the",
    "start": "577980",
    "end": "580200"
  },
  {
    "text": "next section where we'll talk about best",
    "start": "580200",
    "end": "583440"
  },
  {
    "text": "what is best best is a software switch",
    "start": "583440",
    "end": "586700"
  },
  {
    "text": "it's designed to be extensible and",
    "start": "586700",
    "end": "589980"
  },
  {
    "text": "highly performant",
    "start": "589980",
    "end": "591720"
  },
  {
    "text": "it is the first networking switch that",
    "start": "591720",
    "end": "593820"
  },
  {
    "text": "with software switch designed to support",
    "start": "593820",
    "end": "595620"
  },
  {
    "text": "nfv in Tradition in addition to",
    "start": "595620",
    "end": "598320"
  },
  {
    "text": "traditional virtual networking tasks",
    "start": "598320",
    "end": "600899"
  },
  {
    "text": "there are four components of best best d",
    "start": "600899",
    "end": "605580"
  },
  {
    "text": "the ports the modules and best Kettle",
    "start": "605580",
    "end": "610320"
  },
  {
    "text": "best utl is the controller for bestd and",
    "start": "610320",
    "end": "613980"
  },
  {
    "text": "it offers a command line interface",
    "start": "613980",
    "end": "616019"
  },
  {
    "text": "allowing an administrator",
    "start": "616019",
    "end": "619080"
  },
  {
    "text": "uh to configure which boards are",
    "start": "619080",
    "end": "621360"
  },
  {
    "text": "connected to which modules and so on",
    "start": "621360",
    "end": "624920"
  },
  {
    "text": "best D is the Daemon as the name",
    "start": "625019",
    "end": "627660"
  },
  {
    "text": "suggests and it's the core software",
    "start": "627660",
    "end": "629339"
  },
  {
    "text": "switch",
    "start": "629339",
    "end": "630540"
  },
  {
    "text": "ports are the interfaces where packets",
    "start": "630540",
    "end": "632880"
  },
  {
    "text": "may enter or exit best D and modules are",
    "start": "632880",
    "end": "638459"
  },
  {
    "text": "pieces of code that allow bestie to",
    "start": "638459",
    "end": "641100"
  },
  {
    "text": "inspect and modify the packets",
    "start": "641100",
    "end": "643800"
  },
  {
    "text": "for integration of cndp with Bess we",
    "start": "643800",
    "end": "647040"
  },
  {
    "text": "started with the cndp best port which",
    "start": "647040",
    "end": "649920"
  },
  {
    "text": "enables us to send and receive packets",
    "start": "649920",
    "end": "652860"
  },
  {
    "text": "to and from the networking interface",
    "start": "652860",
    "end": "654959"
  },
  {
    "text": "using afxdp we added support for this",
    "start": "654959",
    "end": "658200"
  },
  {
    "text": "along with the existing dpdk port",
    "start": "658200",
    "end": "662540"
  },
  {
    "text": "so that's about best",
    "start": "662760",
    "end": "665040"
  },
  {
    "text": "now what is omac UPF",
    "start": "665040",
    "end": "668940"
  },
  {
    "text": "omic UPF is a project under the open",
    "start": "668940",
    "end": "672060"
  },
  {
    "text": "networking Foundation which is",
    "start": "672060",
    "end": "675300"
  },
  {
    "text": "implementing a user plane function",
    "start": "675300",
    "end": "678959"
  },
  {
    "text": "it's make use makes use of the pfcp",
    "start": "678959",
    "end": "682320"
  },
  {
    "text": "protocol for the communication between",
    "start": "682320",
    "end": "685220"
  },
  {
    "text": "SMF in the case of 5G and the UPF",
    "start": "685220",
    "end": "689339"
  },
  {
    "text": "it's widely used as part of The Ether",
    "start": "689339",
    "end": "691380"
  },
  {
    "text": "platform in conjunction with the SD core",
    "start": "691380",
    "end": "694560"
  },
  {
    "text": "mobile core control plane",
    "start": "694560",
    "end": "697320"
  },
  {
    "text": "there are two parts to the UPF in Omak",
    "start": "697320",
    "end": "700740"
  },
  {
    "text": "UPF",
    "start": "700740",
    "end": "702060"
  },
  {
    "text": "that is the pfcp agent and the data path",
    "start": "702060",
    "end": "705600"
  },
  {
    "text": "the pfcp agent is a go-based",
    "start": "705600",
    "end": "708420"
  },
  {
    "text": "implementation",
    "start": "708420",
    "end": "709740"
  },
  {
    "text": "and it is used to interact with the",
    "start": "709740",
    "end": "712380"
  },
  {
    "text": "mobile control plane",
    "start": "712380",
    "end": "714540"
  },
  {
    "text": "the pfcp agent implements data path",
    "start": "714540",
    "end": "717120"
  },
  {
    "text": "plugins that translate pfcp messages to",
    "start": "717120",
    "end": "720060"
  },
  {
    "text": "data path specific configurations",
    "start": "720060",
    "end": "722700"
  },
  {
    "text": "and there are two data path plugins",
    "start": "722700",
    "end": "724740"
  },
  {
    "text": "currently in the project one is the best",
    "start": "724740",
    "end": "727320"
  },
  {
    "text": "plugin and one is the up4 plugin the one",
    "start": "727320",
    "end": "730500"
  },
  {
    "text": "that we are interested for rcndp",
    "start": "730500",
    "end": "732360"
  },
  {
    "text": "integration is the best plugin since we",
    "start": "732360",
    "end": "734940"
  },
  {
    "text": "added the cndp port to bestd we",
    "start": "734940",
    "end": "738959"
  },
  {
    "text": "integrate with the best plugin in Omak",
    "start": "738959",
    "end": "741899"
  },
  {
    "text": "UPF",
    "start": "741899",
    "end": "744440"
  },
  {
    "text": "we already talked about best",
    "start": "745200",
    "end": "747440"
  },
  {
    "text": "ub4 is an implementation leveraging the",
    "start": "747440",
    "end": "751380"
  },
  {
    "text": "P4 programmable switches to realize a",
    "start": "751380",
    "end": "754560"
  },
  {
    "text": "hardware-based data path the combination",
    "start": "754560",
    "end": "757140"
  },
  {
    "text": "of pfcp agent and up4 is referred to as",
    "start": "757140",
    "end": "759839"
  },
  {
    "text": "before you UPF while best UPF denotes",
    "start": "759839",
    "end": "763200"
  },
  {
    "text": "the combination of pfcp and the best",
    "start": "763200",
    "end": "766019"
  },
  {
    "text": "data path",
    "start": "766019",
    "end": "768560"
  },
  {
    "text": "support for new data paths can be",
    "start": "769380",
    "end": "771720"
  },
  {
    "text": "provided by implementing new plugins",
    "start": "771720",
    "end": "775939"
  },
  {
    "text": "cndp integration with best for UPF",
    "start": "776160",
    "end": "778800"
  },
  {
    "text": "provides flexibility in terms of",
    "start": "778800",
    "end": "780480"
  },
  {
    "text": "deployment and horizontal scalability",
    "start": "780480",
    "end": "784320"
  },
  {
    "text": "so now that we talked about cndp best",
    "start": "784320",
    "end": "787620"
  },
  {
    "text": "omeg UPF and how cndp integrates with",
    "start": "787620",
    "end": "790019"
  },
  {
    "text": "them let's talk about how we tested this",
    "start": "790019",
    "end": "792720"
  },
  {
    "text": "so this is how our development and test",
    "start": "792720",
    "end": "796320"
  },
  {
    "text": "setup looks like",
    "start": "796320",
    "end": "797820"
  },
  {
    "text": "we have two systems",
    "start": "797820",
    "end": "799980"
  },
  {
    "text": "system one runs the UPF Pipeline and",
    "start": "799980",
    "end": "803220"
  },
  {
    "text": "system 2 runs the traffic generator",
    "start": "803220",
    "end": "805440"
  },
  {
    "text": "the two systems are connected back to",
    "start": "805440",
    "end": "808019"
  },
  {
    "text": "back with Intel ethernet controller",
    "start": "808019",
    "end": "810200"
  },
  {
    "text": "e810c for qsfp",
    "start": "810200",
    "end": "813300"
  },
  {
    "text": "for generating traffic we are using dpdk",
    "start": "813300",
    "end": "816240"
  },
  {
    "text": "packaging with best scripts to generate",
    "start": "816240",
    "end": "818760"
  },
  {
    "text": "the GTP traffic",
    "start": "818760",
    "end": "821779"
  },
  {
    "text": "these scripts are already a part of the",
    "start": "821880",
    "end": "824579"
  },
  {
    "text": "Omak UPF repo and we were reusing that",
    "start": "824579",
    "end": "827100"
  },
  {
    "text": "it simulates both Uplink and downlink",
    "start": "827100",
    "end": "829800"
  },
  {
    "text": "data traffic from multiple ues to the",
    "start": "829800",
    "end": "832560"
  },
  {
    "text": "app server",
    "start": "832560",
    "end": "834180"
  },
  {
    "text": "in our current setup we used",
    "start": "834180",
    "end": "836760"
  },
  {
    "text": "uh Intel ethernet controller E8 and",
    "start": "836760",
    "end": "839399"
  },
  {
    "text": "civil qsfp with DDP profile that's the",
    "start": "839399",
    "end": "842519"
  },
  {
    "text": "dynamic device personalization for",
    "start": "842519",
    "end": "844320"
  },
  {
    "text": "Telecom telecommunication workloads gtpu",
    "start": "844320",
    "end": "847620"
  },
  {
    "text": "enabled we use the out of tree driver",
    "start": "847620",
    "end": "850860"
  },
  {
    "text": "and set TC filter rules on axis and core",
    "start": "850860",
    "end": "854100"
  },
  {
    "text": "networking interfaces to do gtpu RSS",
    "start": "854100",
    "end": "857279"
  },
  {
    "text": "based on the inner UE IP address in the",
    "start": "857279",
    "end": "860220"
  },
  {
    "text": "encapsulated gdpu packet",
    "start": "860220",
    "end": "862980"
  },
  {
    "text": "currently we are setting the TC filter",
    "start": "862980",
    "end": "865019"
  },
  {
    "text": "rules using a batch script",
    "start": "865019",
    "end": "868339"
  },
  {
    "text": "with the TC filter rules we use",
    "start": "868620",
    "end": "872519"
  },
  {
    "text": "application device Q is to create few",
    "start": "872519",
    "end": "874680"
  },
  {
    "text": "groups and only gtpu packets are",
    "start": "874680",
    "end": "877260"
  },
  {
    "text": "redirected to the required queues",
    "start": "877260",
    "end": "881220"
  },
  {
    "text": "the default xtp program is loaded on the",
    "start": "881220",
    "end": "884639"
  },
  {
    "text": "net Dev and afxdp sockets are attached",
    "start": "884639",
    "end": "888240"
  },
  {
    "text": "to the required queues which handles the",
    "start": "888240",
    "end": "890699"
  },
  {
    "text": "gtpu packets",
    "start": "890699",
    "end": "893660"
  },
  {
    "text": "so that is about the test system that we",
    "start": "895079",
    "end": "898260"
  },
  {
    "text": "used to test the integration out",
    "start": "898260",
    "end": "902399"
  },
  {
    "text": "now let's talk about the kubernetes",
    "start": "902399",
    "end": "904380"
  },
  {
    "text": "integration",
    "start": "904380",
    "end": "905579"
  },
  {
    "text": "so when we initially started out we used",
    "start": "905579",
    "end": "908579"
  },
  {
    "text": "the scripts Docker setup script which is",
    "start": "908579",
    "end": "911880"
  },
  {
    "text": "in the omac UPF repo and once we had",
    "start": "911880",
    "end": "915180"
  },
  {
    "text": "that working and had confidence that",
    "start": "915180",
    "end": "916980"
  },
  {
    "text": "worked we moved on to the kubernetes",
    "start": "916980",
    "end": "919260"
  },
  {
    "text": "integration aspect of it and this is how",
    "start": "919260",
    "end": "922920"
  },
  {
    "text": "we went about it",
    "start": "922920",
    "end": "924779"
  },
  {
    "text": "the omac project has a UPF deployments",
    "start": "924779",
    "end": "928440"
  },
  {
    "text": "yaml and we took that and we modified it",
    "start": "928440",
    "end": "931680"
  },
  {
    "text": "to use the local cndp plus best UPF",
    "start": "931680",
    "end": "935040"
  },
  {
    "text": "images",
    "start": "935040",
    "end": "936540"
  },
  {
    "text": "the AFX DP plugins for kubernetes that",
    "start": "936540",
    "end": "939600"
  },
  {
    "text": "we talked about in the cndp deployment",
    "start": "939600",
    "end": "941639"
  },
  {
    "text": "model diagram were also deployed with",
    "start": "941639",
    "end": "944040"
  },
  {
    "text": "the cndp best UPF application",
    "start": "944040",
    "end": "946500"
  },
  {
    "text": "the AFX DP cni was used to create the",
    "start": "946500",
    "end": "949680"
  },
  {
    "text": "network attachment definition for the",
    "start": "949680",
    "end": "952260"
  },
  {
    "text": "axis and the core networking interfaces",
    "start": "952260",
    "end": "956100"
  },
  {
    "text": "and that is about the kubernetes",
    "start": "956100",
    "end": "958199"
  },
  {
    "text": "integration aspect now I'd also like to",
    "start": "958199",
    "end": "961139"
  },
  {
    "text": "introduce ether in a box and how we",
    "start": "961139",
    "end": "963600"
  },
  {
    "text": "integrated the cndp best UPF with ether",
    "start": "963600",
    "end": "967019"
  },
  {
    "text": "in a box",
    "start": "967019",
    "end": "968519"
  },
  {
    "text": "ether is onf's 5G LG LTE connected Edge",
    "start": "968519",
    "end": "972779"
  },
  {
    "text": "platform as a service",
    "start": "972779",
    "end": "974699"
  },
  {
    "text": "it's the first open source 5G platform",
    "start": "974699",
    "end": "977279"
  },
  {
    "text": "for enabling Enterprise digital",
    "start": "977279",
    "end": "978959"
  },
  {
    "text": "transformation it provides mobile",
    "start": "978959",
    "end": "981480"
  },
  {
    "text": "connectivity and Edge cloud services for",
    "start": "981480",
    "end": "984300"
  },
  {
    "text": "distributed Enterprise networks as a",
    "start": "984300",
    "end": "986399"
  },
  {
    "text": "cloud managed offering it's an open",
    "start": "986399",
    "end": "988680"
  },
  {
    "text": "source platform optimized for multiple",
    "start": "988680",
    "end": "991320"
  },
  {
    "text": "multi-cloud deployments and simultaneous",
    "start": "991320",
    "end": "994620"
  },
  {
    "text": "support for wireless",
    "start": "994620",
    "end": "996120"
  },
  {
    "text": "connectivity over various Spectrum",
    "start": "996120",
    "end": "999060"
  },
  {
    "text": "either in a box on the other hand it",
    "start": "999060",
    "end": "1001459"
  },
  {
    "text": "provides an easy way to deploy ether's",
    "start": "1001459",
    "end": "1003920"
  },
  {
    "text": "SD core and other components and then",
    "start": "1003920",
    "end": "1006620"
  },
  {
    "text": "run basic steps to validate the",
    "start": "1006620",
    "end": "1009259"
  },
  {
    "text": "installation",
    "start": "1009259",
    "end": "1010519"
  },
  {
    "text": "so it can be set up with either a 4G or",
    "start": "1010519",
    "end": "1012980"
  },
  {
    "text": "a 5G SD core in our case we did it with",
    "start": "1012980",
    "end": "1015920"
  },
  {
    "text": "the 5G SD core and it can be done with",
    "start": "1015920",
    "end": "1019160"
  },
  {
    "text": "or without the interactive GUI for",
    "start": "1019160",
    "end": "1021980"
  },
  {
    "text": "examining and changing the configuration",
    "start": "1021980",
    "end": "1023959"
  },
  {
    "text": "known as The ROC",
    "start": "1023959",
    "end": "1026839"
  },
  {
    "text": "if the ROC is not deployed you can also",
    "start": "1026839",
    "end": "1029418"
  },
  {
    "text": "use a simple tool called Sim app to",
    "start": "1029419",
    "end": "1032298"
  },
  {
    "text": "configure the required state",
    "start": "1032299",
    "end": "1034339"
  },
  {
    "text": "assume",
    "start": "1034339",
    "end": "1036140"
  },
  {
    "text": "the values.yaml that was provided to the",
    "start": "1036140",
    "end": "1039079"
  },
  {
    "text": "helm charts from The Ether in a box repo",
    "start": "1039079",
    "end": "1041480"
  },
  {
    "text": "was modified to use the local images the",
    "start": "1041480",
    "end": "1044418"
  },
  {
    "text": "UPF mode was set to cndp and we tested",
    "start": "1044419",
    "end": "1048558"
  },
  {
    "text": "it with the 5G SD core",
    "start": "1048559",
    "end": "1051980"
  },
  {
    "text": "the G node B Sim performs the",
    "start": "1051980",
    "end": "1055220"
  },
  {
    "text": "registration plus the UE initiated pdu",
    "start": "1055220",
    "end": "1058160"
  },
  {
    "text": "session establishment and sends the user",
    "start": "1058160",
    "end": "1061039"
  },
  {
    "text": "data packets",
    "start": "1061039",
    "end": "1063700"
  },
  {
    "text": "so now we will see a demo of The Ether",
    "start": "1064100",
    "end": "1067880"
  },
  {
    "text": "in a box integration with cndp",
    "start": "1067880",
    "end": "1070700"
  },
  {
    "text": "first we are doing a make reset 5G test",
    "start": "1070700",
    "end": "1074299"
  },
  {
    "text": "so in that the helm charts get deleted",
    "start": "1074299",
    "end": "1077480"
  },
  {
    "text": "the release is uninstalled and we wait",
    "start": "1077480",
    "end": "1080299"
  },
  {
    "text": "for all the pods to terminate if you",
    "start": "1080299",
    "end": "1082520"
  },
  {
    "text": "notice we have a pod for AMF we have a",
    "start": "1082520",
    "end": "1085640"
  },
  {
    "text": "pod for SMF and upf0 and so on so our",
    "start": "1085640",
    "end": "1090380"
  },
  {
    "text": "changes are in the upf0 pod",
    "start": "1090380",
    "end": "1092900"
  },
  {
    "text": "and which has the cndp plus best UPF",
    "start": "1092900",
    "end": "1096559"
  },
  {
    "text": "image and then when we do make 5G test",
    "start": "1096559",
    "end": "1101360"
  },
  {
    "text": "the",
    "start": "1101360",
    "end": "1102919"
  },
  {
    "text": "Helm charts get downloaded and then the",
    "start": "1102919",
    "end": "1107120"
  },
  {
    "text": "simulation starts running",
    "start": "1107120",
    "end": "1110179"
  },
  {
    "text": "Helm charts are the primary method of",
    "start": "1110179",
    "end": "1112280"
  },
  {
    "text": "installing the SD core resources and",
    "start": "1112280",
    "end": "1114860"
  },
  {
    "text": "ether in a box provides a great deal of",
    "start": "1114860",
    "end": "1117380"
  },
  {
    "text": "flexibility when it comes to which Helm",
    "start": "1117380",
    "end": "1119720"
  },
  {
    "text": "chart versions you want to install there",
    "start": "1119720",
    "end": "1122000"
  },
  {
    "text": "are local definition of charts then",
    "start": "1122000",
    "end": "1124160"
  },
  {
    "text": "latest charts that you can get from the",
    "start": "1124160",
    "end": "1126740"
  },
  {
    "text": "tip of Master also specified versions of",
    "start": "1126740",
    "end": "1129740"
  },
  {
    "text": "charts for deploying a specific author",
    "start": "1129740",
    "end": "1132559"
  },
  {
    "text": "release",
    "start": "1132559",
    "end": "1134240"
  },
  {
    "text": "either in a box can be run on bare metal",
    "start": "1134240",
    "end": "1137000"
  },
  {
    "text": "machine or a VM in this case we're",
    "start": "1137000",
    "end": "1139460"
  },
  {
    "text": "running it on a bare metal and we're",
    "start": "1139460",
    "end": "1141260"
  },
  {
    "text": "using Ubuntu 1804",
    "start": "1141260",
    "end": "1144260"
  },
  {
    "text": "the data I face specified there is a",
    "start": "1144260",
    "end": "1148880"
  },
  {
    "text": "dummy networking interface and it uses",
    "start": "1148880",
    "end": "1152299"
  },
  {
    "text": "Mac VLAN networks called core and axis",
    "start": "1152299",
    "end": "1157460"
  },
  {
    "text": "and the behavior of the UPF is to",
    "start": "1157460",
    "end": "1159799"
  },
  {
    "text": "forward packets between its access to",
    "start": "1159799",
    "end": "1162020"
  },
  {
    "text": "the core interface while at the same",
    "start": "1162020",
    "end": "1164299"
  },
  {
    "text": "time removing and adding GTP",
    "start": "1164299",
    "end": "1167080"
  },
  {
    "text": "encapsulation on the axis side",
    "start": "1167080",
    "end": "1170179"
  },
  {
    "text": "Upstream packets arriving on the access",
    "start": "1170179",
    "end": "1172580"
  },
  {
    "text": "side from the UE have their GTP headers",
    "start": "1172580",
    "end": "1176480"
  },
  {
    "text": "removed and the raw IP packets are",
    "start": "1176480",
    "end": "1178580"
  },
  {
    "text": "forwarded to the core interface so now",
    "start": "1178580",
    "end": "1181940"
  },
  {
    "text": "in the simulation",
    "start": "1181940",
    "end": "1183620"
  },
  {
    "text": "the the G node B Sim is doing the",
    "start": "1183620",
    "end": "1185720"
  },
  {
    "text": "registration plus the UE initiated pdu",
    "start": "1185720",
    "end": "1188660"
  },
  {
    "text": "session establishment and it sends the",
    "start": "1188660",
    "end": "1191900"
  },
  {
    "text": "user data packets",
    "start": "1191900",
    "end": "1194179"
  },
  {
    "text": "either in a box will now print out a lot",
    "start": "1194179",
    "end": "1198140"
  },
  {
    "text": "of logs for showing what exactly is",
    "start": "1198140",
    "end": "1201020"
  },
  {
    "text": "happening at each stage of the",
    "start": "1201020",
    "end": "1203539"
  },
  {
    "text": "simulation and here we are testing it",
    "start": "1203539",
    "end": "1207380"
  },
  {
    "text": "with",
    "start": "1207380",
    "end": "1209240"
  },
  {
    "text": "five profiles and for each profile like",
    "start": "1209240",
    "end": "1212900"
  },
  {
    "text": "five packets I sent so a total or 25",
    "start": "1212900",
    "end": "1215600"
  },
  {
    "text": "packets Traverse the pipeline",
    "start": "1215600",
    "end": "1218900"
  },
  {
    "text": "and at the end of the simulation we will",
    "start": "1218900",
    "end": "1222140"
  },
  {
    "text": "see that whether the simulation passed",
    "start": "1222140",
    "end": "1224600"
  },
  {
    "text": "or failed",
    "start": "1224600",
    "end": "1227080"
  },
  {
    "text": "so now that the simulation is over we",
    "start": "1240200",
    "end": "1242960"
  },
  {
    "text": "can look at the best UPF pipeline which",
    "start": "1242960",
    "end": "1245780"
  },
  {
    "text": "ran while the simulation was happening",
    "start": "1245780",
    "end": "1247880"
  },
  {
    "text": "and that is on the next slide so this is",
    "start": "1247880",
    "end": "1251780"
  },
  {
    "text": "the best UPF Pipeline and it's graph",
    "start": "1251780",
    "end": "1254179"
  },
  {
    "text": "based and you can see the package",
    "start": "1254179",
    "end": "1255620"
  },
  {
    "text": "drivers seeing the pipeline going",
    "start": "1255620",
    "end": "1257179"
  },
  {
    "text": "through each of the nodes in the graph",
    "start": "1257179",
    "end": "1259940"
  },
  {
    "text": "and the output View mode is set to the",
    "start": "1259940",
    "end": "1263240"
  },
  {
    "text": "total packets received",
    "start": "1263240",
    "end": "1266380"
  },
  {
    "text": "so that's the demo",
    "start": "1285320",
    "end": "1287419"
  },
  {
    "text": "to summarize",
    "start": "1287419",
    "end": "1290240"
  },
  {
    "text": "cndp is a recently open source Cloud",
    "start": "1290240",
    "end": "1293840"
  },
  {
    "text": "native solution for accelerating packet",
    "start": "1293840",
    "end": "1296120"
  },
  {
    "text": "processing applications the integration",
    "start": "1296120",
    "end": "1298760"
  },
  {
    "text": "of cndp with Omak UPF highlights some of",
    "start": "1298760",
    "end": "1302780"
  },
  {
    "text": "the achievable improvements with 5G",
    "start": "1302780",
    "end": "1304880"
  },
  {
    "text": "deployments",
    "start": "1304880",
    "end": "1306740"
  },
  {
    "text": "have a slide in here which has some",
    "start": "1306740",
    "end": "1308780"
  },
  {
    "text": "useful links the links to the GitHub",
    "start": "1308780",
    "end": "1311539"
  },
  {
    "text": "repos for each of the projects mentioned",
    "start": "1311539",
    "end": "1314000"
  },
  {
    "text": "in the slide deck as well as links to",
    "start": "1314000",
    "end": "1316400"
  },
  {
    "text": "the blog posts webinars and Technology",
    "start": "1316400",
    "end": "1318740"
  },
  {
    "text": "guide",
    "start": "1318740",
    "end": "1321039"
  },
  {
    "text": "that's all I had thank you",
    "start": "1328280",
    "end": "1330760"
  },
  {
    "text": "[Applause]",
    "start": "1330760",
    "end": "1336450"
  }
]