[
  {
    "text": "so hello everyone and welcome to the uh Jager project I'm excited to be here and continue talking about Jager after the",
    "start": "40",
    "end": "8000"
  },
  {
    "text": "cubec con in Amsterdam and share you you know the project updates uh my name is Powell I am a",
    "start": "8000",
    "end": "14599"
  },
  {
    "text": "software engineer at redhead I'm Jagger maintainer as well maintainer of open Telemetry operator and graph Tempo",
    "start": "14599",
    "end": "21519"
  },
  {
    "text": "operator uh when I'm not contributing uh I like to spend my time in the mountains",
    "start": "21519",
    "end": "26800"
  },
  {
    "text": "doing some free ride skiing and uh Mountain Ling uh if you wouldd like to",
    "start": "26800",
    "end": "32000"
  },
  {
    "text": "reach out to me you can do that on the cncf slack or on Twitter and we can talk about observability or you one of these",
    "start": "32000",
    "end": "38680"
  },
  {
    "text": "font Sports as well so today I will um start with",
    "start": "38680",
    "end": "43800"
  },
  {
    "text": "introduction to DBT tracing we'll talk about why we should use tracing in the",
    "start": "43800",
    "end": "48920"
  },
  {
    "text": "first place then we will do a live Jagger demo with microservice based application where you will see you know",
    "start": "48920",
    "end": "55879"
  },
  {
    "text": "how Jager works and what kind of data you can see in the console uh we'll focus as well on the service",
    "start": "55879",
    "end": "63320"
  },
  {
    "text": "performance monitoring tab that we have iner I will explain how it works um and",
    "start": "63320",
    "end": "69720"
  },
  {
    "text": "then we have a bunch of topics related to open Telemetry uh we'll talk about how you can use open Telemetry collector",
    "start": "69720",
    "end": "76320"
  },
  {
    "text": "with the performance monitoring tab but as well how you can you know mix open Telemetry collector with Jagger",
    "start": "76320",
    "end": "82280"
  },
  {
    "text": "collector uh and ultimately talk about Jagger wi2 uh it's a new project that we have in Jagger we want to rebate Jager",
    "start": "82280",
    "end": "90680"
  },
  {
    "text": "components on top of open Telemetry collector um and then towards the end I",
    "start": "90680",
    "end": "97320"
  },
  {
    "text": "will briefly talk about the open Telemetry Auto instrumentation and how you can use it wither and L but last but",
    "start": "97320",
    "end": "104719"
  },
  {
    "text": "not least uh we'll talk about new features and road map for",
    "start": "104719",
    "end": "110399"
  },
  {
    "text": "2024 so why distributed tracing and tldr is because uh we write complicated code",
    "start": "112479",
    "end": "118680"
  },
  {
    "text": "and we use complicated at architectures right and we as industry spend a lot of",
    "start": "118680",
    "end": "124439"
  },
  {
    "text": "time thinking about how we can decouple our applications how we can split them into separate pieces that can be you",
    "start": "124439",
    "end": "131720"
  },
  {
    "text": "know created separately compiled and deployed and shipped which is great it",
    "start": "131720",
    "end": "137200"
  },
  {
    "text": "enables us to in innovate uh independently however when things go",
    "start": "137200",
    "end": "143800"
  },
  {
    "text": "slow or break uh we should have a proper tool to identify you know what is",
    "start": "143800",
    "end": "149239"
  },
  {
    "text": "causing the issue and the issue is is that these separate components or services or even",
    "start": "149239",
    "end": "156760"
  },
  {
    "text": "third party apis are um managed and operated by different",
    "start": "156760",
    "end": "162920"
  },
  {
    "text": "teams right and if you don't have a tool that can pinpoint the issue uh then we",
    "start": "162920",
    "end": "168959"
  },
  {
    "text": "don't know even who to contact right if something goes wrong so tracing besides the root Coast",
    "start": "168959",
    "end": "175920"
  },
  {
    "text": "analysis can help us to understand relationships ad dependent encies that we have in our system um and as well",
    "start": "175920",
    "end": "183319"
  },
  {
    "text": "Define very effective slas and slos",
    "start": "183319",
    "end": "189400"
  },
  {
    "text": "um before we jump into demo I would like to talk about like conceptually how we",
    "start": "189400",
    "end": "196239"
  },
  {
    "text": "can split the distributed tracing deployment in our environment uh and",
    "start": "196239",
    "end": "201280"
  },
  {
    "text": "there is three components usually uh there is the instrumentation which is all about how we capture data from our",
    "start": "201280",
    "end": "208480"
  },
  {
    "text": "applications um and it's very important to keep instrumentation separate from the data",
    "start": "208480",
    "end": "214799"
  },
  {
    "text": "collection and the backend because usually it requires code changes right",
    "start": "214799",
    "end": "221799"
  },
  {
    "text": "and if code changes are required then we need to uh you know recompile and",
    "start": "221799",
    "end": "227159"
  },
  {
    "text": "redeploy which can be very uh time consuming if we have you know maybe",
    "start": "227159",
    "end": "232280"
  },
  {
    "text": "dozens of hundreds of services uh for instrumentation we recommend users to use the open",
    "start": "232280",
    "end": "237959"
  },
  {
    "text": "Telemetry project um which you know should gives us stable apis uh that allows us to use any wender",
    "start": "237959",
    "end": "246680"
  },
  {
    "text": "of our choice right don't don't lock us into specific uh back end which is very",
    "start": "246680",
    "end": "253280"
  },
  {
    "text": "important then there is data collection and data collection is about how we gather this data from the",
    "start": "253280",
    "end": "259040"
  },
  {
    "text": "instrumentation into a collector we process it uh and by processing I mean",
    "start": "259040",
    "end": "265479"
  },
  {
    "text": "we for instance might remove some sensitive data or we might do additional data capture for instance we might be a",
    "start": "265479",
    "end": "273080"
  },
  {
    "text": "able to collect kubernetes resource attributes or we can even you know",
    "start": "273080",
    "end": "278400"
  },
  {
    "text": "extract new Telemetry data from the data that has been collected as we will see",
    "start": "278400",
    "end": "283560"
  },
  {
    "text": "uh in the demo uh and then finally there is the storage with analytics",
    "start": "283560",
    "end": "289320"
  },
  {
    "text": "functionality and visualization so Jagger falls into the data collection and storage with visualization an open",
    "start": "289320",
    "end": "296960"
  },
  {
    "text": "Telemetry into instrumentation and data collection as well so we see there is an overlap and we'll talk about know how we",
    "start": "296960",
    "end": "303960"
  },
  {
    "text": "can uh use both projects",
    "start": "303960",
    "end": "308280"
  },
  {
    "text": "simultaneously before I jump into the the demo let's first unpack these two",
    "start": "310160",
    "end": "315759"
  },
  {
    "text": "concepts that we use in tracing and first one is Trace and Trace",
    "start": "315759",
    "end": "320919"
  },
  {
    "text": "essentially um means end to end execution in our system right it it",
    "start": "320919",
    "end": "327039"
  },
  {
    "text": "models how a request went through all the services um and then there is a span",
    "start": "327039",
    "end": "333880"
  },
  {
    "text": "Which models or which which means like single unit of work essentially um you",
    "start": "333880",
    "end": "339759"
  },
  {
    "text": "can think about it as a method invocation or HTTP call or database call",
    "start": "339759",
    "end": "345639"
  },
  {
    "text": "uh and span usually has start and end which implies duration and it contains",
    "start": "345639",
    "end": "352199"
  },
  {
    "text": "contextual information that be called Texs or attributes right so these describe what the operation was actually",
    "start": "352199",
    "end": "360600"
  },
  {
    "text": "doing so when we put multiple spans together we get a trace which is like",
    "start": "360600",
    "end": "366000"
  },
  {
    "text": "three like structure that you can see on the left or you can visualize it as a",
    "start": "366000",
    "end": "372280"
  },
  {
    "text": "timeline view that you see on the right um we call it as well a gun chart uh",
    "start": "372280",
    "end": "378120"
  },
  {
    "text": "this is the visualization that most tracing tool use so with that I will jump into the",
    "start": "378120",
    "end": "384639"
  },
  {
    "text": "Jer console and what I have here is the H",
    "start": "384639",
    "end": "390160"
  },
  {
    "text": "application that comes from the yra stream you can run it as well and it's",
    "start": "390160",
    "end": "396960"
  },
  {
    "text": "very simple you can click on one of these buttons when you do that you essentially order a car ride like you",
    "start": "396960",
    "end": "404639"
  },
  {
    "text": "know Uber or taxi and so let's try let's do that and we will get a response from",
    "start": "404639",
    "end": "412319"
  },
  {
    "text": "the back end saying a driver with this license plate will arrive in 2 minutes",
    "start": "412319",
    "end": "418759"
  },
  {
    "text": "and then we get the latency measured from the browser so how do we you know how can we",
    "start": "418759",
    "end": "426800"
  },
  {
    "text": "use tracing tool to you know understand this application uh in Jager console the",
    "start": "426800",
    "end": "433720"
  },
  {
    "text": "first thing what we can do is to show the um the system architecture diagram",
    "start": "433720",
    "end": "439360"
  },
  {
    "text": "it shows us the you know the the relationships and dependencies between services so in this case there is front",
    "start": "439360",
    "end": "445479"
  },
  {
    "text": "end um there is calling customer then driver and roof and then there is a bunch of",
    "start": "445479",
    "end": "452240"
  },
  {
    "text": "databases uh we see as well there is some sort of test executor service that is calling the UI and then the front end",
    "start": "452240",
    "end": "459199"
  },
  {
    "text": "some behind the scenes I'm as well running you know some script that is calling the",
    "start": "459199",
    "end": "464520"
  },
  {
    "text": "service so this is great for the relationships but I don't understand like on this screen I cannot perform the",
    "start": "464520",
    "end": "470520"
  },
  {
    "text": "root cost analysis right I don't know what uh is the end to end execution if",
    "start": "470520",
    "end": "475720"
  },
  {
    "text": "the front end is calling customer first or driver or the root if I need to do",
    "start": "475720",
    "end": "481720"
  },
  {
    "text": "root cost analysis I need to go to search [Music]",
    "start": "481720",
    "end": "486759"
  },
  {
    "text": "and search for traces so what I get here as a search",
    "start": "486759",
    "end": "492199"
  },
  {
    "text": "result are all the kind of user actions or transactions right um I I I can see",
    "start": "492199",
    "end": "500039"
  },
  {
    "text": "which one is the slowest one which one is the fastest one what is the over latency of the",
    "start": "500039",
    "end": "506440"
  },
  {
    "text": "request and you know how many operations are there and what services were executed in",
    "start": "506440",
    "end": "514599"
  },
  {
    "text": "this transaction when I compare this latency here that we see it will differ from",
    "start": "514599",
    "end": "521599"
  },
  {
    "text": "what we see in the HR right because this one is is measured from the browser and these are these ones are",
    "start": "521599",
    "end": "528320"
  },
  {
    "text": "measured from the from the services right from the first service in my in my",
    "start": "528320",
    "end": "534080"
  },
  {
    "text": "environment which will be obviously less than what is in the browser so what I'm going to do next I'm",
    "start": "534080",
    "end": "540680"
  },
  {
    "text": "going to choose the slowest service or the slowest transaction right and I get",
    "start": "540680",
    "end": "546560"
  },
  {
    "text": "the timeline view U there's a lot of information here uh but it's very simple to to understand it um on the left I see",
    "start": "546560",
    "end": "554360"
  },
  {
    "text": "the service name and the operation name and on the right I see the line that",
    "start": "554360",
    "end": "560480"
  },
  {
    "text": "denotes the duration of the operation so for instance I see the myquel took maybe",
    "start": "560480",
    "end": "567800"
  },
  {
    "text": "took 3 57 milliseconds which is roughly half of the overall",
    "start": "567800",
    "end": "575320"
  },
  {
    "text": "latency so by looking at this I understand you know how long each operation takes uh but as well I see the",
    "start": "576160",
    "end": "582680"
  },
  {
    "text": "structure right and I see the driver is calling RIS probably to get some data",
    "start": "582680",
    "end": "590079"
  },
  {
    "text": "and I see that it's calling RIS in um in a sequence right so maybe there is a for",
    "start": "590079",
    "end": "595800"
  },
  {
    "text": "Loop that is executed against red API which might be by Design which is okay",
    "start": "595800",
    "end": "601959"
  },
  {
    "text": "but maybe it's a mistake and it's something I could optimize in my code I could use maybe B API or you know do um",
    "start": "601959",
    "end": "610440"
  },
  {
    "text": "like execute all these requests in parel uh what I see as well is this",
    "start": "610440",
    "end": "616920"
  },
  {
    "text": "exclamation mark which denotes there is some sort of issue when I click on it uh",
    "start": "616920",
    "end": "622240"
  },
  {
    "text": "I see that this operation failed because it's marked with error and I even see",
    "start": "622240",
    "end": "628480"
  },
  {
    "text": "the exception message which is ready time out so usually in the tracing system if",
    "start": "628480",
    "end": "635279"
  },
  {
    "text": "there is exception it's going to be captured in the in the",
    "start": "635279",
    "end": "640240"
  },
  {
    "text": "Spence now when I click on the first one which",
    "start": "641920",
    "end": "647600"
  },
  {
    "text": "is the span from the dispatch API I see the the Tex that will show me that this",
    "start": "647600",
    "end": "655760"
  },
  {
    "text": "is HTTP operation I see the end point the HTTP method version status code all",
    "start": "655760",
    "end": "661760"
  },
  {
    "text": "the inform important information to understand the HTTP call when I click on",
    "start": "661760",
    "end": "668440"
  },
  {
    "text": "the similar HTTP code from the road service I again see the same data and",
    "start": "668440",
    "end": "675920"
  },
  {
    "text": "this is very important because I get the consistent set of uh of",
    "start": "675920",
    "end": "681360"
  },
  {
    "text": "information uh for the same event in different languages and Frameworks for",
    "start": "681360",
    "end": "687240"
  },
  {
    "text": "so when I compare this to logging uh in logging we have no standardization right",
    "start": "687240",
    "end": "693680"
  },
  {
    "text": "so different Frameworks and different developers and different languages have",
    "start": "693680",
    "end": "698720"
  },
  {
    "text": "different conventions in logging which is not great in distributed systems that are you know usually polyglot and use",
    "start": "698720",
    "end": "706279"
  },
  {
    "text": "different Technologies um so with distribut tracing you get you know this nice",
    "start": "706279",
    "end": "712360"
  },
  {
    "text": "standardization that you always get the same data uh across your",
    "start": "712360",
    "end": "717959"
  },
  {
    "text": "environment what I see here as well is the process which you know shows me from where the",
    "start": "717959",
    "end": "724200"
  },
  {
    "text": "data was exported in this case it's kind of boring it's just a Fedora Linux machine but if this was running on",
    "start": "724200",
    "end": "730959"
  },
  {
    "text": "kubernetes I could as well see you know what is the Pod name what is the deployment name and all important",
    "start": "730959",
    "end": "736959"
  },
  {
    "text": "information to find out uh you know the source of data and then I see",
    "start": "736959",
    "end": "744320"
  },
  {
    "text": "logs uh and this is actually logs from the standard output um so you can",
    "start": "744320",
    "end": "749880"
  },
  {
    "text": "configure the instrumentation that runs in your process to send the log messages",
    "start": "749880",
    "end": "755320"
  },
  {
    "text": "to a current span which is super cool right because then the logs are not mixed U between",
    "start": "755320",
    "end": "763440"
  },
  {
    "text": "you know multiple concurrent requests that your process is handling so because I switch",
    "start": "763440",
    "end": "770600"
  },
  {
    "text": "to the logs but this is not yeah it's here",
    "start": "770600",
    "end": "776760"
  },
  {
    "text": "actually it's a different these Lo are mixed together right it's hard to understand them what but in a tracing",
    "start": "776760",
    "end": "782639"
  },
  {
    "text": "system I get them nicely attached to the to the span um and nicely parsed with",
    "start": "782639",
    "end": "789399"
  },
  {
    "text": "you know what was the time and what was the",
    "start": "789399",
    "end": "793600"
  },
  {
    "text": "message so one of the new features that we have in Jager is this um black solid",
    "start": "796120",
    "end": "801639"
  },
  {
    "text": "line which shows the um the critical path right and critical path shows us",
    "start": "801639",
    "end": "808639"
  },
  {
    "text": "the operations that are kind of the most important",
    "start": "808639",
    "end": "814720"
  },
  {
    "text": "right that contribute to the over latency of this transaction so if I need to optimize latency in this user action",
    "start": "814720",
    "end": "822680"
  },
  {
    "text": "I I should optimize only operations that are on the critical path because if I optimize something else it will not roll",
    "start": "822680",
    "end": "829320"
  },
  {
    "text": "out into the latency Improvement I can as well you know",
    "start": "829320",
    "end": "834759"
  },
  {
    "text": "collapse the operations and it's going to be um properly uh reflected in a in a",
    "start": "834759",
    "end": "841440"
  },
  {
    "text": "timeline",
    "start": "841440",
    "end": "843880"
  },
  {
    "text": "view and maybe last one thing so for instance for the database call we are",
    "start": "847040",
    "end": "853320"
  },
  {
    "text": "able to see you know the query uh statement so the timeline view is to",
    "start": "853320",
    "end": "861120"
  },
  {
    "text": "summarize is great to to perform root CA analysis and understand you know what",
    "start": "861120",
    "end": "867240"
  },
  {
    "text": "the system is actually doing uh now I will switch to the monitor",
    "start": "867240",
    "end": "873880"
  },
  {
    "text": "Tab and in the monitor tab we see metric and uh we see the latency uh error rate",
    "start": "873880",
    "end": "881600"
  },
  {
    "text": "and requist rate and what is cool we see the same set of metrics across all",
    "start": "881600",
    "end": "888240"
  },
  {
    "text": "services that export Trace data uh and on top of that these metrics",
    "start": "888240",
    "end": "894720"
  },
  {
    "text": "are as well split by the operation name right so the operation name is usually the URL pattern for HTTP request so if I",
    "start": "894720",
    "end": "903759"
  },
  {
    "text": "if I have I don't know five rest apis I will see the same set of metrics for the",
    "start": "903759",
    "end": "910120"
  },
  {
    "text": "for my a rest apis that I have in my",
    "start": "910120",
    "end": "914759"
  },
  {
    "text": "process so the way this works",
    "start": "915959",
    "end": "921279"
  },
  {
    "text": "is is with the open Telemetry collector um and it kind of brings",
    "start": "922600",
    "end": "930800"
  },
  {
    "text": "Jagger project towards more kind of traditional APM solution and it gives us",
    "start": "930800",
    "end": "936279"
  },
  {
    "text": "you know the monitoring and additional alerting capabilities alerting is not",
    "start": "936279",
    "end": "941680"
  },
  {
    "text": "part of the Jagger but you can use Prometheus or other alerting system to",
    "start": "941680",
    "end": "946720"
  },
  {
    "text": "to alert on those metrics uh so what you need how it works",
    "start": "946720",
    "end": "953240"
  },
  {
    "text": "um the trace data are exported from you know the instrumentation to the open",
    "start": "953240",
    "end": "959279"
  },
  {
    "text": "telemetric collector uh open telemetric collector then is looking at this Trace",
    "start": "959279",
    "end": "965360"
  },
  {
    "text": "data and is aggregating metric and Reporting those metrics into the",
    "start": "965360",
    "end": "970839"
  },
  {
    "text": "exporter um into Prometheus and then the agui just queries the",
    "start": "970839",
    "end": "975880"
  },
  {
    "text": "Prometheus you can as well set up the open telemetric collector to export those metrics to different metric system",
    "start": "975880",
    "end": "983120"
  },
  {
    "text": "but only prome Meuse is supported by the Yer UI uh in the in The Collector you need",
    "start": "983120",
    "end": "989800"
  },
  {
    "text": "to enable the span metric connector uh and it's very simple uh you just need to",
    "start": "989800",
    "end": "995480"
  },
  {
    "text": "put it in the connectors and then in the pipeline a connector needs to be put as",
    "start": "995480",
    "end": "1001639"
  },
  {
    "text": "uh exporter for traces in this case and as a receiver for metric because it's",
    "start": "1001639",
    "end": "1008319"
  },
  {
    "text": "kind of looking at the metric and it's exporting it's looking at the traces and it's exporting",
    "start": "1008319",
    "end": "1015680"
  },
  {
    "text": "metrics um you can as well visualize those metrics in different tools U for instance like",
    "start": "1017480",
    "end": "1023839"
  },
  {
    "text": "grafana and as well you can send them to uh to any metric system supported by the",
    "start": "1023839",
    "end": "1031240"
  },
  {
    "text": "open telemetric collector okay we saw this and then",
    "start": "1031240",
    "end": "1038120"
  },
  {
    "text": "brings us to the like how can we use open Telemetry collector with the",
    "start": "1038120",
    "end": "1044959"
  },
  {
    "text": "Jagger so the collector integrates with jger in different aspects uh so for",
    "start": "1045720",
    "end": "1052039"
  },
  {
    "text": "instance it can receive Jagger data in you know the agent protocols and as well",
    "start": "1052039",
    "end": "1058520"
  },
  {
    "text": "the the The Collector it has as well the Jager remote sampling extension and it can",
    "start": "1058520",
    "end": "1065600"
  },
  {
    "text": "send and receive Kafka messages in Jagger format so why would you use the open",
    "start": "1065600",
    "end": "1072600"
  },
  {
    "text": "telemetric collector with Jagger so you know the monitor tab might be one use",
    "start": "1072600",
    "end": "1077960"
  },
  {
    "text": "case and in addition to that the collector has a great ecosystem of additional",
    "start": "1077960",
    "end": "1083720"
  },
  {
    "text": "capability that is not in Jagger so for instance it allows you to filter data you know do pii it allows",
    "start": "1083720",
    "end": "1091640"
  },
  {
    "text": "you to drop data that you don't need um you can as well do tailb sampling um or",
    "start": "1091640",
    "end": "1099240"
  },
  {
    "text": "even smart routing so for instance um you can keep majority of traces in your",
    "start": "1099240",
    "end": "1105480"
  },
  {
    "text": "local cluster and send just a subset to your more expensive third party tracing",
    "start": "1105480",
    "end": "1113000"
  },
  {
    "text": "system or it has very popular kubernetes attribute processor that",
    "start": "1113000",
    "end": "1118679"
  },
  {
    "text": "can uh kind of automatically attach the kubernetes metadata to your Telemetry",
    "start": "1118679",
    "end": "1125360"
  },
  {
    "text": "data right so all the Pod names pod uids what is the node name and things like",
    "start": "1125360",
    "end": "1132320"
  },
  {
    "text": "that so how do you combine these two uh simply you can put the AEL collector in front of of Jager collector uh and use",
    "start": "1133200",
    "end": "1140520"
  },
  {
    "text": "the OTP to send data to Jer collector if you're using Kafka uh The",
    "start": "1140520",
    "end": "1146799"
  },
  {
    "text": "alel Collector has the Kafka exporter uh you can configure it to use the Jagger",
    "start": "1146799",
    "end": "1153320"
  },
  {
    "text": "type you know you put that will put the uh spans in Jagger format to Kafka which",
    "start": "1153320",
    "end": "1161080"
  },
  {
    "text": "can be read by the uh Jager ingestor and then the ingestor will store them to to",
    "start": "1161080",
    "end": "1167240"
  },
  {
    "text": "database okay that brings us to Jager V2 uh which",
    "start": "1167240",
    "end": "1174480"
  },
  {
    "text": "is a project that we started long time ago then it was kind of removed from the project uh and now it's there again uh",
    "start": "1174480",
    "end": "1182679"
  },
  {
    "text": "so what we want to do essentially is to rebase all Jagger components on top of",
    "start": "1182679",
    "end": "1187960"
  },
  {
    "text": "open Telemetry collector uh and essentially provides",
    "start": "1187960",
    "end": "1193000"
  },
  {
    "text": "kind of opinionated build of the open Telemetry collector uh what we want to do is to",
    "start": "1193000",
    "end": "1200039"
  },
  {
    "text": "expose the UI and query as an extension and storage layer Implement as",
    "start": "1200039",
    "end": "1207360"
  },
  {
    "text": "exporters right so there will be elastic search exporter Cassandra exporter and",
    "start": "1207360",
    "end": "1212400"
  },
  {
    "text": "inmemory exporter the code is already in place in",
    "start": "1212400",
    "end": "1217640"
  },
  {
    "text": "the main repository um we haven't released it yet uh but it's there you",
    "start": "1217640",
    "end": "1223559"
  },
  {
    "text": "can you can run it and this is the sample configuration and and the interesting",
    "start": "1223559",
    "end": "1229159"
  },
  {
    "text": "bit here is the extensions uh and there is the Jagger storage extensions with",
    "start": "1229159",
    "end": "1236480"
  },
  {
    "text": "which will encapsulate all the storage um back ends that we have so in",
    "start": "1236480",
    "end": "1242840"
  },
  {
    "text": "this case there is only in memory but there can be as well you know elastic s Cassandra you will configure the storage",
    "start": "1242840",
    "end": "1248919"
  },
  {
    "text": "in the extension and then reference it in the uh Jager query extension and in",
    "start": "1248919",
    "end": "1255200"
  },
  {
    "text": "this in the exporter so this way your storage configuration will be in a single place",
    "start": "1255200",
    "end": "1262440"
  },
  {
    "text": "and those two components will just reference it uh at the moment only the in memory",
    "start": "1262440",
    "end": "1268520"
  },
  {
    "text": "supported uh but uh yeah we are looking for for contributions and in the main repository",
    "start": "1268520",
    "end": "1276440"
  },
  {
    "text": "uh you can find issues labeled V2 so we would like to you know help us to build it uh we are happy to to ACC of any",
    "start": "1276440",
    "end": "1285720"
  },
  {
    "text": "contributions and um so this will be the future of Jagger going forward uh at",
    "start": "1286080",
    "end": "1292400"
  },
  {
    "text": "some point we will deprecate and remove the kind of the existing um Jagger",
    "start": "1292400",
    "end": "1298480"
  },
  {
    "text": "collector Jagger query and Allin one there will be just this single build um",
    "start": "1298480",
    "end": "1303880"
  },
  {
    "text": "based on the open Telemetry collector so before we the road map uh I",
    "start": "1303880",
    "end": "1310080"
  },
  {
    "text": "want to talk about the instrumentation and as you know the Jagger clients have been deprecated for",
    "start": "1310080",
    "end": "1317520"
  },
  {
    "text": "a long time we as well deprecated Jagger agent uh this",
    "start": "1317520",
    "end": "1322799"
  },
  {
    "text": "October uh and we recommend you to migrate to open Telemetry",
    "start": "1322799",
    "end": "1329400"
  },
  {
    "text": "collector uh which has the you know the Jagger receiver which opens the same port so that there is you know clear",
    "start": "1329400",
    "end": "1335840"
  },
  {
    "text": "migration path if you're using Jager sdks uh with",
    "start": "1335840",
    "end": "1342760"
  },
  {
    "text": "open tracing um you can use the open Telemetry open tracing shim and um keep",
    "start": "1342760",
    "end": "1349799"
  },
  {
    "text": "using you know the your instrumented services with open tracing API uh it has great uh support for languages even more",
    "start": "1349799",
    "end": "1356679"
  },
  {
    "text": "than we supported in Jagger uh on the configuration side the migration is as well you know very",
    "start": "1356679",
    "end": "1363279"
  },
  {
    "text": "simple straight forward because the open tracing and open Telemetry use the same",
    "start": "1363279",
    "end": "1369720"
  },
  {
    "text": "Concepts uh one thing to keep in mind is the trace propagation Jagger uses uh",
    "start": "1370080",
    "end": "1375400"
  },
  {
    "text": "Jagger protocol or Jagger format which is supported by all open Telemetry sdks",
    "start": "1375400",
    "end": "1381039"
  },
  {
    "text": "but it's something you need to enable explicitly uh and open Telemetry goes",
    "start": "1381039",
    "end": "1388520"
  },
  {
    "text": "beyond just the API and SDK right it has as well the agents or Auto instrumentation libraries which you can",
    "start": "1388520",
    "end": "1395760"
  },
  {
    "text": "which are software packages that you can just download and put into your hosts or Docker containers and they will",
    "start": "1395760",
    "end": "1402159"
  },
  {
    "text": "automatically instrument your applications without you doing any code changes right is very powerful",
    "start": "1402159",
    "end": "1408559"
  },
  {
    "text": "and very simple way how to get Telemetry data the languages or the agents are",
    "start": "1408559",
    "end": "1415559"
  },
  {
    "text": "available for some languages and not for others however the community is still",
    "start": "1415559",
    "end": "1421559"
  },
  {
    "text": "kind of evolving and for instance in go there is uh already ebpf based Auto",
    "start": "1421559",
    "end": "1428000"
  },
  {
    "text": "instrumentation so I guess over time more and more languages will have some",
    "start": "1428000",
    "end": "1433159"
  },
  {
    "text": "automatic instrumentation in the open Telemetry ecosystem",
    "start": "1433159",
    "end": "1438799"
  },
  {
    "text": "so what are the the new features that we have um we enabled by default the OTP",
    "start": "1438799",
    "end": "1446039"
  },
  {
    "text": "ingestion on the on the Jagger collector uh and as well keep in mind",
    "start": "1446039",
    "end": "1451799"
  },
  {
    "text": "that the open telemetric collector removed support for jger",
    "start": "1451799",
    "end": "1457440"
  },
  {
    "text": "exporter um so the way how you get data from otel collector to jger is just the OT",
    "start": "1457440",
    "end": "1463600"
  },
  {
    "text": "TLP we as well kind of improve the support for the span metric con conector that I've showed you before um actually",
    "start": "1463600",
    "end": "1471520"
  },
  {
    "text": "the span metrix connector used to be span metric processor and there were some breaking changes that we needed to",
    "start": "1471520",
    "end": "1477919"
  },
  {
    "text": "to resolve then we have the Jager V2 uh which is I think exciting project uh and",
    "start": "1477919",
    "end": "1485120"
  },
  {
    "text": "it can really you know bring some Innovation into Jagger then we did some improvements on",
    "start": "1485120",
    "end": "1490520"
  },
  {
    "text": "the query um so Jagger query has um multiple apis one of them is V3 that",
    "start": "1490520",
    "end": "1498520"
  },
  {
    "text": "exposes OTP we bumped it to to OTP",
    "start": "1498520",
    "end": "1503799"
  },
  {
    "text": "V1 uh you can find the definitions in the Jagger IDL repository and it exposes",
    "start": "1503799",
    "end": "1510080"
  },
  {
    "text": "the grpc and HTTP and then on the UI side we have the critical puff",
    "start": "1510080",
    "end": "1516480"
  },
  {
    "text": "visualization searching for um TX when you have this the uh the",
    "start": "1516480",
    "end": "1523799"
  },
  {
    "text": "the timeline view and as well bed on load of traces",
    "start": "1523799",
    "end": "1529679"
  },
  {
    "text": "so for the V2 um it's something we want to really focus on uh in the next year",
    "start": "1529880",
    "end": "1535840"
  },
  {
    "text": "we will you know add support for the missing storage U layers that we have",
    "start": "1535840",
    "end": "1542720"
  },
  {
    "text": "and as well for Kafka we want to as well reuse as much as possible from the open Telemetry collector so for instance the",
    "start": "1542720",
    "end": "1548919"
  },
  {
    "text": "Kafka exporter and uh receiver will just import it from the open tetri collector",
    "start": "1548919",
    "end": "1554840"
  },
  {
    "text": "contri uh at the moment our build doesn't support The Collector",
    "start": "1554840",
    "end": "1560200"
  },
  {
    "text": "Builder uh which is something we want to support we want to let users build their",
    "start": "1560200",
    "end": "1565840"
  },
  {
    "text": "own distribution of collector as well with just you know specific storage backend they want to",
    "start": "1565840",
    "end": "1572679"
  },
  {
    "text": "use um there is as well somebody working on the native click housee storage uh",
    "start": "1572679",
    "end": "1579880"
  },
  {
    "text": "exporter that will be only in the wi2 and we want to officially as well support elastic search",
    "start": "1579880",
    "end": "1586600"
  },
  {
    "text": "8 and you know once we have more capabilities in V2 once we have you know",
    "start": "1586600",
    "end": "1593039"
  },
  {
    "text": "the feature parity we will you know do officially release and deprecate the the",
    "start": "1593039",
    "end": "1599159"
  },
  {
    "text": "existing components okay this is everything what",
    "start": "1599159",
    "end": "1604799"
  },
  {
    "text": "I have prepared for today the Hy",
    "start": "1604799",
    "end": "1610760"
  },
  {
    "text": "questions are you going going to keep support for open search too in in",
    "start": "1616200",
    "end": "1622320"
  },
  {
    "text": "V2 uh so what is the support for open search yeah",
    "start": "1622320",
    "end": "1627360"
  },
  {
    "text": "um I think I was talking to Yuri the main maintainer I think it should be well supported I'm not sure what's your",
    "start": "1627360",
    "end": "1635080"
  },
  {
    "text": "experience I just want to make sure yeah it seems like it would be well supported but there's going to be some feature deviation from what I understand from",
    "start": "1635080",
    "end": "1641559"
  },
  {
    "text": "elastic search and open search yes so those are two different we want to treat them differently so so even even right now",
    "start": "1641559",
    "end": "1648679"
  },
  {
    "text": "when you run elas open search uh it's you need to enable it differently than",
    "start": "1648679",
    "end": "1654520"
  },
  {
    "text": "the elastic search yeah okay so it's so State",
    "start": "1654520",
    "end": "1660000"
  },
  {
    "text": "yeah I uh great stuff thanks very much uh I love the way you're using the open",
    "start": "1660399",
    "end": "1666840"
  },
  {
    "text": "tetric component architecture to provide the like the Tren and storage and then separately the",
    "start": "1666840",
    "end": "1672919"
  },
  {
    "text": "queries uh I wonder if so you have currently defined like the yearo",
    "start": "1672919",
    "end": "1678120"
  },
  {
    "text": "storage extension it seems like it could be maybe generalized into General Telemetry storage yeah this one to store",
    "start": "1678120",
    "end": "1686679"
  },
  {
    "text": "uh also logs and metrics and then people could build queries for those and",
    "start": "1686679",
    "end": "1692480"
  },
  {
    "text": "uis possibly yes but it's something that we don't do in jger but would it be easy",
    "start": "1692480",
    "end": "1697760"
  },
  {
    "text": "to to maybe just rename the Jer storage into Telemetry storage and allow stor it's it's all TP right so yeah so at the",
    "start": "1697760",
    "end": "1705919"
  },
  {
    "text": "moment this extension is using the storage layer from existing Jagger which",
    "start": "1705919",
    "end": "1712559"
  },
  {
    "text": "has its own format for every single exporter right so elastic sech has",
    "start": "1712559",
    "end": "1717840"
  },
  {
    "text": "different model than Cassandra and and so on I see okay thanks yeah that's",
    "start": "1717840",
    "end": "1723200"
  },
  {
    "text": "great thanks a lot hello uh thank you for your",
    "start": "1723200",
    "end": "1729559"
  },
  {
    "text": "presentation uh I have a quick question that um uh we have a bunch of uh Legacy",
    "start": "1729559",
    "end": "1736840"
  },
  {
    "text": "application that um run a really old version of java like Java 6 or Java 7",
    "start": "1736840",
    "end": "1744200"
  },
  {
    "text": "and uh uh the these application that we",
    "start": "1744200",
    "end": "1749399"
  },
  {
    "text": "give give it a a really hard time when something breaks and uh is there any way that we",
    "start": "1749399",
    "end": "1756760"
  },
  {
    "text": "can use uh Java Auto implementation to uh install the agent for the",
    "start": "1756760",
    "end": "1763320"
  },
  {
    "text": "service yes so it depends if such old Java version is supported by the Java",
    "start": "1763320",
    "end": "1769919"
  },
  {
    "text": "agent I'm not sure if it is I think the lowest version is Java 8 yes is there",
    "start": "1769919",
    "end": "1776559"
  },
  {
    "text": "any way or is there another uh alternative ways to imp",
    "start": "1776559",
    "end": "1784960"
  },
  {
    "text": "Implement tracing for the system so you could you could um implement it yourself",
    "start": "1784960",
    "end": "1793440"
  },
  {
    "text": "by reusing parts of the Java agent so the in the Java agent repository there",
    "start": "1793440",
    "end": "1799039"
  },
  {
    "text": "are instrumentations which are packaged as separate Maven modules that you could include to your application",
    "start": "1799039",
    "end": "1805600"
  },
  {
    "text": "initialize and get it tracing that way so so so let's say there is",
    "start": "1805600",
    "end": "1811240"
  },
  {
    "text": "instrumentation for serlet right so you could just pull it in as as a maven dependency initialize it in your code um",
    "start": "1811240",
    "end": "1819480"
  },
  {
    "text": "and and have tracing also uh I have to modify the uh",
    "start": "1819480",
    "end": "1824840"
  },
  {
    "text": "you will have to modify your Java agent you will have no you will have to modify your",
    "start": "1824840",
    "end": "1830760"
  },
  {
    "text": "application oh but uh yeah that's not not really an option you could maybe",
    "start": "1830760",
    "end": "1837320"
  },
  {
    "text": "build your own agent distribution with a subset of instrumentations that are only",
    "start": "1837320",
    "end": "1844039"
  },
  {
    "text": "for that specific Java version okay but it's it's like it's it's going to be a lot of work probably oh okay thanks uh",
    "start": "1844039",
    "end": "1851880"
  },
  {
    "text": "another question that uh so in uh when the the agent uh",
    "start": "1851880",
    "end": "1860320"
  },
  {
    "text": "when the tracing uh when I implement the tracing that some of the traffic that is",
    "start": "1860320",
    "end": "1866559"
  },
  {
    "text": "TCP based then the when I show it on the service map uh it does not it not show",
    "start": "1866559",
    "end": "1874799"
  },
  {
    "text": "on the service service map so is there just",
    "start": "1874799",
    "end": "1881039"
  },
  {
    "text": "uh what what kind of traffic that will show up on the service map that's a",
    "start": "1881039",
    "end": "1887799"
  },
  {
    "text": "great question so this um diagram shows you um connections I know HTTP is the",
    "start": "1887799",
    "end": "1897279"
  },
  {
    "text": "yes so it the implementation but uh like TCP based protocol is the TCP maybe but",
    "start": "1897279",
    "end": "1905679"
  },
  {
    "text": "the spend data they need to contain the service the server and client attributes",
    "start": "1905679",
    "end": "1911240"
  },
  {
    "text": "or span kinds MH to make the correct connection that this is a server and this is a client right to to kind of",
    "start": "1911240",
    "end": "1917960"
  },
  {
    "text": "figure out what is the direction of this uh of this Arrow uh and then is as well",
    "start": "1917960",
    "end": "1924399"
  },
  {
    "text": "looking at the you know HTTP attributes but as well at the messaging attributes",
    "start": "1924399",
    "end": "1929880"
  },
  {
    "text": "like you know the consumer and producer so your TCP traffic will need to have",
    "start": "1929880",
    "end": "1934960"
  },
  {
    "text": "some sort of metadata in the spans for this diagram",
    "start": "1934960",
    "end": "1940279"
  },
  {
    "text": "to work so uh if the if it does not show on",
    "start": "1940279",
    "end": "1946279"
  },
  {
    "text": "the service uh service map so what can I do to investigate or the best way maybe",
    "start": "1946279",
    "end": "1954120"
  },
  {
    "text": "is to open issue on the Jagger with the trace sample so you can maybe get the",
    "start": "1954120",
    "end": "1960360"
  },
  {
    "text": "trace and just um download it as a Json and open issue that hey I have a this",
    "start": "1960360",
    "end": "1967519"
  },
  {
    "text": "trace and it's not showing on the system architecture diagram and we can take a look at the data and see um what should",
    "start": "1967519",
    "end": "1974559"
  },
  {
    "text": "be added but you will you will need to add attach probably more attributes to your spans okay thank you very",
    "start": "1974559",
    "end": "1982919"
  },
  {
    "text": "much hey can you uh talk a little bit about uh multitenancy support that you",
    "start": "1984480",
    "end": "1990440"
  },
  {
    "text": "guys added okay so the question is multi-tenant support iner and it's a",
    "start": "1990440",
    "end": "1996799"
  },
  {
    "text": "single tenant system there is not much I mean for instance if you're using elastic search you",
    "start": "1996799",
    "end": "2002799"
  },
  {
    "text": "could um Define tency by using index prefix for different um tenants but it's",
    "start": "2002799",
    "end": "2010320"
  },
  {
    "text": "something you need to kind of set up and maintain okay I thought it was an announcement that there was some updates",
    "start": "2010320",
    "end": "2016360"
  },
  {
    "text": "or something around that there were different atems but it's yeah it's not well supported okay yeah all right",
    "start": "2016360",
    "end": "2025880"
  },
  {
    "text": "thanks uh on I'm just wondering if there's any plans for supporting Loki on",
    "start": "2027120",
    "end": "2033760"
  },
  {
    "text": "V2 Loki V2 yeah for oh sorry with version two of Jager any support for or",
    "start": "2033760",
    "end": "2041320"
  },
  {
    "text": "any plan support for using Loki for log storage so Loki is look look storage",
    "start": "2041320",
    "end": "2049079"
  },
  {
    "text": "right from grafana yeah and um it depends what you mean right do you",
    "start": "2049079",
    "end": "2056919"
  },
  {
    "text": "mean like U how to correlate Logs with traces or just store traces in the LOI",
    "start": "2056919",
    "end": "2062960"
  },
  {
    "text": "system so I'm already using Loi now M if I was to use what you've got up there that means I'm going to be storing the",
    "start": "2062960",
    "end": "2068638"
  },
  {
    "text": "logs in two places so can I consolidate down into one log storage just having logs in Loki only but still experience",
    "start": "2068639",
    "end": "2075599"
  },
  {
    "text": "the UI have you've shown us I I don't think so but grafana has the grafana",
    "start": "2075599",
    "end": "2080800"
  },
  {
    "text": "tempo project yeah which um has as well support for the Yer UI so you could",
    "start": "2080800",
    "end": "2085919"
  },
  {
    "text": "deploy grafana Tempo keep traces there use the um Yer UI with Tempo and use",
    "start": "2085919",
    "end": "2092638"
  },
  {
    "text": "locky for locks with I guess graph UI great thank you",
    "start": "2092639",
    "end": "2098879"
  },
  {
    "text": "right any more questions all right thank you very",
    "start": "2101560",
    "end": "2107630"
  },
  {
    "text": "[Applause] much",
    "start": "2107630",
    "end": "2112960"
  }
]