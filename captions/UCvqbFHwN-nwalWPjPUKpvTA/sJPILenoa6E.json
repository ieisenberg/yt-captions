[
  {
    "text": "hello and welcome to today's session",
    "start": "1740",
    "end": "4560"
  },
  {
    "text": "my name is David Flanagan and I have",
    "start": "4560",
    "end": "6779"
  },
  {
    "text": "been using the span project by fermion",
    "start": "6779",
    "end": "9780"
  },
  {
    "text": "for the last six months",
    "start": "9780",
    "end": "12540"
  },
  {
    "text": "server-side webassembly is something",
    "start": "12540",
    "end": "14040"
  },
  {
    "text": "that is very exciting to me",
    "start": "14040",
    "end": "15960"
  },
  {
    "text": "why because webassembly gives a great",
    "start": "15960",
    "end": "18600"
  },
  {
    "text": "developer experience",
    "start": "18600",
    "end": "20939"
  },
  {
    "text": "containers are fantastic in production",
    "start": "20939",
    "end": "23000"
  },
  {
    "text": "but if you don't run Linux it can be",
    "start": "23000",
    "end": "26100"
  },
  {
    "text": "rather cumbersome to work with locally",
    "start": "26100",
    "end": "28519"
  },
  {
    "text": "especially in a microservice",
    "start": "28519",
    "end": "30480"
  },
  {
    "text": "architecture",
    "start": "30480",
    "end": "33059"
  },
  {
    "text": "Ben brings a Fresh Approach using the",
    "start": "33059",
    "end": "35880"
  },
  {
    "text": "webassembly sandbox and applying just",
    "start": "35880",
    "end": "38579"
  },
  {
    "text": "enough glue to get you productive within",
    "start": "38579",
    "end": "40920"
  },
  {
    "text": "seconds",
    "start": "40920",
    "end": "42480"
  },
  {
    "text": "in today's video I'm going to show you",
    "start": "42480",
    "end": "44520"
  },
  {
    "text": "how to get started with the spin project",
    "start": "44520",
    "end": "47340"
  },
  {
    "text": "but then push it Forward how to build",
    "start": "47340",
    "end": "49680"
  },
  {
    "text": "container images and how to run them",
    "start": "49680",
    "end": "52559"
  },
  {
    "text": "side by side with your container-based",
    "start": "52559",
    "end": "54600"
  },
  {
    "text": "applications on kubernetes",
    "start": "54600",
    "end": "57300"
  },
  {
    "text": "I hope you enjoyed this video Let's Have",
    "start": "57300",
    "end": "59460"
  },
  {
    "text": "Some Fun okay",
    "start": "59460",
    "end": "60960"
  },
  {
    "text": "first thing first",
    "start": "60960",
    "end": "62699"
  },
  {
    "text": "this is the fermion website available at",
    "start": "62699",
    "end": "65880"
  },
  {
    "text": "fermion.com",
    "start": "65880",
    "end": "68520"
  },
  {
    "text": "you will find a page all about spin",
    "start": "68520",
    "end": "70979"
  },
  {
    "text": "where you can go and learn more and find",
    "start": "70979",
    "end": "73260"
  },
  {
    "text": "the documentation and even the source",
    "start": "73260",
    "end": "75119"
  },
  {
    "text": "code",
    "start": "75119",
    "end": "76080"
  },
  {
    "text": "important to note the span is open",
    "start": "76080",
    "end": "78180"
  },
  {
    "text": "source and you can find it at github.com",
    "start": "78180",
    "end": "80180"
  },
  {
    "text": "fermion spin",
    "start": "80180",
    "end": "82920"
  },
  {
    "text": "currently is on version 1.1.0",
    "start": "82920",
    "end": "87180"
  },
  {
    "text": "if you click the get and started button",
    "start": "87720",
    "end": "89340"
  },
  {
    "text": "this will give you all the instructions",
    "start": "89340",
    "end": "91080"
  },
  {
    "text": "that you need to install spend across",
    "start": "91080",
    "end": "93420"
  },
  {
    "text": "Linux Mac and windows",
    "start": "93420",
    "end": "96540"
  },
  {
    "text": "just grab the binary or copy the command",
    "start": "96540",
    "end": "99299"
  },
  {
    "text": "and execute it in your shell which will",
    "start": "99299",
    "end": "100860"
  },
  {
    "text": "get you access to the spend binary",
    "start": "100860",
    "end": "103439"
  },
  {
    "text": "that is the only prerequisite from there",
    "start": "103439",
    "end": "106680"
  },
  {
    "text": "you can do everything that you're about",
    "start": "106680",
    "end": "108180"
  },
  {
    "text": "to see me do on this video okay so now",
    "start": "108180",
    "end": "112020"
  },
  {
    "text": "we're in my terminal",
    "start": "112020",
    "end": "114060"
  },
  {
    "text": "where we have a pretty empty directory",
    "start": "114060",
    "end": "116939"
  },
  {
    "text": "structure I have a just fail that has a",
    "start": "116939",
    "end": "119220"
  },
  {
    "text": "few commands I will run through in due",
    "start": "119220",
    "end": "121079"
  },
  {
    "text": "course",
    "start": "121079",
    "end": "121860"
  },
  {
    "text": "and to have an opt directory",
    "start": "121860",
    "end": "125600"
  },
  {
    "text": "which has some kubernetes resources that",
    "start": "126360",
    "end": "128520"
  },
  {
    "text": "we will take a look at later",
    "start": "128520",
    "end": "131640"
  },
  {
    "text": "in order to get started with the spin",
    "start": "131640",
    "end": "133620"
  },
  {
    "text": "framework you can run spend new",
    "start": "133620",
    "end": "136920"
  },
  {
    "text": "this will give you the ability to select",
    "start": "136920",
    "end": "139140"
  },
  {
    "text": "a template to get started",
    "start": "139140",
    "end": "141599"
  },
  {
    "text": "webassembly really doesn't care what",
    "start": "141599",
    "end": "143879"
  },
  {
    "text": "language you rate your services in much",
    "start": "143879",
    "end": "146760"
  },
  {
    "text": "like a container",
    "start": "146760",
    "end": "148680"
  },
  {
    "text": "you can write in any language which has",
    "start": "148680",
    "end": "150900"
  },
  {
    "text": "a compilation Target of webassembly or",
    "start": "150900",
    "end": "153239"
  },
  {
    "text": "tooling to convert said code to your",
    "start": "153239",
    "end": "155760"
  },
  {
    "text": "webassembly binary",
    "start": "155760",
    "end": "157680"
  },
  {
    "text": "fortunately some of the best languages",
    "start": "157680",
    "end": "159239"
  },
  {
    "text": "out there have native support such as",
    "start": "159239",
    "end": "161519"
  },
  {
    "text": "rust",
    "start": "161519",
    "end": "162660"
  },
  {
    "text": "however there is a growing community of",
    "start": "162660",
    "end": "164519"
  },
  {
    "text": "other people helping their languages",
    "start": "164519",
    "end": "166440"
  },
  {
    "text": "become webassembly ready",
    "start": "166440",
    "end": "168599"
  },
  {
    "text": "this includes support for JavaScript and",
    "start": "168599",
    "end": "171000"
  },
  {
    "text": "typescript for PHP for Python and even",
    "start": "171000",
    "end": "173819"
  },
  {
    "text": "recently go without technical which is",
    "start": "173819",
    "end": "177420"
  },
  {
    "text": "nice",
    "start": "177420",
    "end": "178739"
  },
  {
    "text": "so for today let's start off with a rust",
    "start": "178739",
    "end": "181500"
  },
  {
    "text": "application",
    "start": "181500",
    "end": "183420"
  },
  {
    "text": "to do that I selected the HTTP Dash rust",
    "start": "183420",
    "end": "186360"
  },
  {
    "text": "starter kit this just means that we get",
    "start": "186360",
    "end": "188700"
  },
  {
    "text": "the Bare Bones that we need to do hello",
    "start": "188700",
    "end": "191159"
  },
  {
    "text": "world over HTTP with fermion Spin and",
    "start": "191159",
    "end": "194760"
  },
  {
    "text": "rust",
    "start": "194760",
    "end": "196019"
  },
  {
    "text": "and I'm just going to call this",
    "start": "196019",
    "end": "198360"
  },
  {
    "text": "hello",
    "start": "198360",
    "end": "200340"
  },
  {
    "text": "we can give this a description if we",
    "start": "200340",
    "end": "202140"
  },
  {
    "text": "want but I'm going to skip that for now",
    "start": "202140",
    "end": "203700"
  },
  {
    "text": "we can also specify an HTTP base which",
    "start": "203700",
    "end": "206400"
  },
  {
    "text": "will become more apparent and important",
    "start": "206400",
    "end": "208620"
  },
  {
    "text": "as we add new components to our span",
    "start": "208620",
    "end": "212040"
  },
  {
    "text": "application",
    "start": "212040",
    "end": "213540"
  },
  {
    "text": "right now I'm just going to accept",
    "start": "213540",
    "end": "215220"
  },
  {
    "text": "forward slash to mean hit on the",
    "start": "215220",
    "end": "217940"
  },
  {
    "text": "endpoint for our application",
    "start": "217940",
    "end": "221340"
  },
  {
    "text": "and I don't want to support wild cards",
    "start": "221340",
    "end": "223860"
  },
  {
    "text": "at least not yet so instead of doing",
    "start": "223860",
    "end": "225959"
  },
  {
    "text": "slash dot dot dot we're also just going",
    "start": "225959",
    "end": "228840"
  },
  {
    "text": "to do slash",
    "start": "228840",
    "end": "230519"
  },
  {
    "text": "now we have a new directory called hello",
    "start": "230519",
    "end": "233819"
  },
  {
    "text": "if we take a look and say hello we'll",
    "start": "233819",
    "end": "235799"
  },
  {
    "text": "have a source directory for our rust",
    "start": "235799",
    "end": "237299"
  },
  {
    "text": "code a cargo.com if you've written any",
    "start": "237299",
    "end": "240120"
  },
  {
    "text": "rust before",
    "start": "240120",
    "end": "241379"
  },
  {
    "text": "you should be pretty comfortable and",
    "start": "241379",
    "end": "242879"
  },
  {
    "text": "familiar with this Leo",
    "start": "242879",
    "end": "244860"
  },
  {
    "text": "the first thing I'm going to do because",
    "start": "244860",
    "end": "246599"
  },
  {
    "text": "I know that this is going to be a",
    "start": "246599",
    "end": "248459"
  },
  {
    "text": "multi-component spin application",
    "start": "248459",
    "end": "250739"
  },
  {
    "text": "is grab or spend.tomel and push it to",
    "start": "250739",
    "end": "253680"
  },
  {
    "text": "the top directory",
    "start": "253680",
    "end": "255299"
  },
  {
    "text": "separating it from the hollow component",
    "start": "255299",
    "end": "257340"
  },
  {
    "text": "so if we switch to vs code and open our",
    "start": "257340",
    "end": "259799"
  },
  {
    "text": "spin.tomo we just need to make a couple",
    "start": "259799",
    "end": "262740"
  },
  {
    "text": "of changes",
    "start": "262740",
    "end": "264479"
  },
  {
    "text": "all components within your spin",
    "start": "264479",
    "end": "266100"
  },
  {
    "text": "application",
    "start": "266100",
    "end": "267300"
  },
  {
    "text": "have three main sections by default",
    "start": "267300",
    "end": "269880"
  },
  {
    "text": "the component itself which says where",
    "start": "269880",
    "end": "271979"
  },
  {
    "text": "are the sources this is accessed to the",
    "start": "271979",
    "end": "274500"
  },
  {
    "text": "compelled wasm",
    "start": "274500",
    "end": "276240"
  },
  {
    "text": "because we have this under the hello",
    "start": "276240",
    "end": "278160"
  },
  {
    "text": "directory",
    "start": "278160",
    "end": "280139"
  },
  {
    "text": "we'll update the source",
    "start": "280139",
    "end": "283259"
  },
  {
    "text": "next we have a trigger this is the HTTP",
    "start": "283259",
    "end": "286320"
  },
  {
    "text": "route that we configured during the spin",
    "start": "286320",
    "end": "288300"
  },
  {
    "text": "new command",
    "start": "288300",
    "end": "290100"
  },
  {
    "text": "we don't need to modify that",
    "start": "290100",
    "end": "293040"
  },
  {
    "text": "lastly we have the build which tells it",
    "start": "293040",
    "end": "295800"
  },
  {
    "text": "to run a cargo build using rust's native",
    "start": "295800",
    "end": "298199"
  },
  {
    "text": "tool chain support to compel to Wazi",
    "start": "298199",
    "end": "300960"
  },
  {
    "text": "however we moved to spend.tomel",
    "start": "300960",
    "end": "304320"
  },
  {
    "text": "so we do have to set the worker",
    "start": "304320",
    "end": "307860"
  },
  {
    "text": "to hello",
    "start": "307860",
    "end": "310020"
  },
  {
    "text": "let's jump back to our terminal",
    "start": "310020",
    "end": "313340"
  },
  {
    "text": "and run spin build",
    "start": "313500",
    "end": "315900"
  },
  {
    "text": "and we've corrected the spend.donald",
    "start": "315900",
    "end": "317520"
  },
  {
    "text": "properly this should build a webassembly",
    "start": "317520",
    "end": "320520"
  },
  {
    "text": "binary for us to run",
    "start": "320520",
    "end": "323780"
  },
  {
    "text": "perfect",
    "start": "326699",
    "end": "328800"
  },
  {
    "text": "now we can run spin up and we'll see",
    "start": "328800",
    "end": "331139"
  },
  {
    "text": "that we have access to our HTTP hello",
    "start": "331139",
    "end": "333960"
  },
  {
    "text": "world spam component over localhost Port",
    "start": "333960",
    "end": "337380"
  },
  {
    "text": "3000",
    "start": "337380",
    "end": "339240"
  },
  {
    "text": "so let's just split this tab",
    "start": "339240",
    "end": "341520"
  },
  {
    "text": "do a curl for HTTP localhost 3000",
    "start": "341520",
    "end": "346320"
  },
  {
    "text": "where we get hello vermeon",
    "start": "346320",
    "end": "349620"
  },
  {
    "text": "so what does a rust application look",
    "start": "349620",
    "end": "353400"
  },
  {
    "text": "like",
    "start": "353400",
    "end": "355580"
  },
  {
    "text": "let's pop back to vs code open hello",
    "start": "355979",
    "end": "359000"
  },
  {
    "text": "source and web RS",
    "start": "359000",
    "end": "363199"
  },
  {
    "text": "there's a couple of years statements at",
    "start": "364440",
    "end": "366120"
  },
  {
    "text": "the top to pull in the libraries that we",
    "start": "366120",
    "end": "368039"
  },
  {
    "text": "need to make this program work",
    "start": "368039",
    "end": "370020"
  },
  {
    "text": "first anyhow result if you've written",
    "start": "370020",
    "end": "372539"
  },
  {
    "text": "rust before you're probably familiar",
    "start": "372539",
    "end": "374160"
  },
  {
    "text": "with this and if not just skip over it",
    "start": "374160",
    "end": "376380"
  },
  {
    "text": "for now is not that important",
    "start": "376380",
    "end": "379320"
  },
  {
    "text": "next we pull in the spin SDK which gives",
    "start": "379320",
    "end": "382020"
  },
  {
    "text": "us access to http types for request and",
    "start": "382020",
    "end": "384660"
  },
  {
    "text": "response as well as an HTTP component",
    "start": "384660",
    "end": "389000"
  },
  {
    "text": "we then have a function which we can",
    "start": "389039",
    "end": "390840"
  },
  {
    "text": "arbitrarily call whatever we want",
    "start": "390840",
    "end": "394020"
  },
  {
    "text": "by default it's called handle hello",
    "start": "394020",
    "end": "395819"
  },
  {
    "text": "however we could just make it hello",
    "start": "395819",
    "end": "399120"
  },
  {
    "text": "the name isn't that important because",
    "start": "399120",
    "end": "401039"
  },
  {
    "text": "it's wrapped by this procedural macro",
    "start": "401039",
    "end": "403500"
  },
  {
    "text": "called an HTTP component which will",
    "start": "403500",
    "end": "406020"
  },
  {
    "text": "handle all the glue of hooking the",
    "start": "406020",
    "end": "407520"
  },
  {
    "text": "function up to the webassembly runtime",
    "start": "407520",
    "end": "411379"
  },
  {
    "text": "we can see this function takes a request",
    "start": "412319",
    "end": "414120"
  },
  {
    "text": "and delivers a response it ships with a",
    "start": "414120",
    "end": "416940"
  },
  {
    "text": "little bit of debugging just to show you",
    "start": "416940",
    "end": "418620"
  },
  {
    "text": "that you can use your normal rust",
    "start": "418620",
    "end": "420479"
  },
  {
    "text": "printlane function if you want to",
    "start": "420479",
    "end": "422580"
  },
  {
    "text": "understand how your program flows and",
    "start": "422580",
    "end": "424620"
  },
  {
    "text": "runs",
    "start": "424620",
    "end": "426060"
  },
  {
    "text": "the only thing we need to do is return",
    "start": "426060",
    "end": "427800"
  },
  {
    "text": "an OK and pass in an HTTP response",
    "start": "427800",
    "end": "432240"
  },
  {
    "text": "you'll see here that we set the status",
    "start": "432240",
    "end": "433860"
  },
  {
    "text": "to 200",
    "start": "433860",
    "end": "435360"
  },
  {
    "text": "we're adding an arbitrary header of",
    "start": "435360",
    "end": "437220"
  },
  {
    "text": "fubar",
    "start": "437220",
    "end": "438780"
  },
  {
    "text": "and we return a body of hello vermion",
    "start": "438780",
    "end": "443340"
  },
  {
    "text": "let's change this to be hello world and",
    "start": "443340",
    "end": "446639"
  },
  {
    "text": "Save",
    "start": "446639",
    "end": "448819"
  },
  {
    "text": "now we can come back and do a spin build",
    "start": "449460",
    "end": "453000"
  },
  {
    "text": "and we get incremental build with a",
    "start": "453000",
    "end": "455099"
  },
  {
    "text": "standard rust tooling",
    "start": "455099",
    "end": "456720"
  },
  {
    "text": "that's one of The Unsung benefits of",
    "start": "456720",
    "end": "459180"
  },
  {
    "text": "working with webassembly",
    "start": "459180",
    "end": "461220"
  },
  {
    "text": "the development experience is almost as",
    "start": "461220",
    "end": "463259"
  },
  {
    "text": "good as your native tool chain if it has",
    "start": "463259",
    "end": "465539"
  },
  {
    "text": "good incremental builds",
    "start": "465539",
    "end": "467280"
  },
  {
    "text": "you pretty much sorted",
    "start": "467280",
    "end": "470160"
  },
  {
    "text": "next we run spin up and we can run our",
    "start": "470160",
    "end": "473099"
  },
  {
    "text": "curl again this time we get hello world",
    "start": "473099",
    "end": "477720"
  },
  {
    "text": "all right let's jump back to vs code",
    "start": "477720",
    "end": "481800"
  },
  {
    "text": "and make one little change let's go to",
    "start": "481800",
    "end": "484740"
  },
  {
    "text": "make our developer experience just that",
    "start": "484740",
    "end": "486599"
  },
  {
    "text": "little bit nicer",
    "start": "486599",
    "end": "488520"
  },
  {
    "text": "as you've seen when we modified the code",
    "start": "488520",
    "end": "490319"
  },
  {
    "text": "we can go to our terminal we can run",
    "start": "490319",
    "end": "492300"
  },
  {
    "text": "spin build followed by spilled up",
    "start": "492300",
    "end": "495000"
  },
  {
    "text": "and we will see the changes as we make",
    "start": "495000",
    "end": "497639"
  },
  {
    "text": "folder HTTP requests",
    "start": "497639",
    "end": "500520"
  },
  {
    "text": "no we could do that with one command",
    "start": "500520",
    "end": "503879"
  },
  {
    "text": "called spin build dash dash up which",
    "start": "503879",
    "end": "506580"
  },
  {
    "text": "will build our application and spin it",
    "start": "506580",
    "end": "508680"
  },
  {
    "text": "up",
    "start": "508680",
    "end": "509639"
  },
  {
    "text": "however we still need to go and control",
    "start": "509639",
    "end": "512520"
  },
  {
    "text": "C the old process and restart it every",
    "start": "512520",
    "end": "515760"
  },
  {
    "text": "time you modify the code",
    "start": "515760",
    "end": "517860"
  },
  {
    "text": "and there is a nicer way",
    "start": "517860",
    "end": "520560"
  },
  {
    "text": "if we open our spend.tomel and come down",
    "start": "520560",
    "end": "522899"
  },
  {
    "text": "to the component build specification",
    "start": "522899",
    "end": "525720"
  },
  {
    "text": "here we can see watch and we provide a",
    "start": "525720",
    "end": "529260"
  },
  {
    "text": "list or an array of the resources fails",
    "start": "529260",
    "end": "532260"
  },
  {
    "text": "that we should monitor for changes",
    "start": "532260",
    "end": "534720"
  },
  {
    "text": "when these fails change",
    "start": "534720",
    "end": "536760"
  },
  {
    "text": "spend will rebuild and relaunch our",
    "start": "536760",
    "end": "539580"
  },
  {
    "text": "application",
    "start": "539580",
    "end": "541800"
  },
  {
    "text": "so we have to do hello Source star star",
    "start": "541800",
    "end": "544680"
  },
  {
    "text": "star star.rs",
    "start": "544680",
    "end": "547740"
  },
  {
    "text": "yeah like that",
    "start": "547920",
    "end": "550320"
  },
  {
    "text": "this means recursively scan or hello",
    "start": "550320",
    "end": "552660"
  },
  {
    "text": "Source directory for rust files",
    "start": "552660",
    "end": "555779"
  },
  {
    "text": "we also need to do hollow cargo.tomel",
    "start": "555779",
    "end": "558360"
  },
  {
    "text": "because if something changes on a",
    "start": "558360",
    "end": "559860"
  },
  {
    "text": "cargo.com probably are dependencies",
    "start": "559860",
    "end": "562680"
  },
  {
    "text": "we'll most likely want to do a rebuild",
    "start": "562680",
    "end": "564480"
  },
  {
    "text": "too",
    "start": "564480",
    "end": "566459"
  },
  {
    "text": "so we can save that and jump back to our",
    "start": "566459",
    "end": "569040"
  },
  {
    "text": "terminal",
    "start": "569040",
    "end": "571320"
  },
  {
    "text": "and here we can now run spend watch",
    "start": "571320",
    "end": "575880"
  },
  {
    "text": "this will monitor our source code for",
    "start": "575880",
    "end": "577800"
  },
  {
    "text": "changes",
    "start": "577800",
    "end": "578940"
  },
  {
    "text": "and rebuild",
    "start": "578940",
    "end": "581160"
  },
  {
    "text": "so to see that let's do a curl for",
    "start": "581160",
    "end": "583620"
  },
  {
    "text": "localhost 3000.",
    "start": "583620",
    "end": "585899"
  },
  {
    "text": "where we see Hello World",
    "start": "585899",
    "end": "589440"
  },
  {
    "text": "this powerful pin or lebrs",
    "start": "589440",
    "end": "592620"
  },
  {
    "text": "and write hello awesome fans double",
    "start": "592620",
    "end": "595620"
  },
  {
    "text": "exclamation mark",
    "start": "595620",
    "end": "598580"
  },
  {
    "text": "and when we hit return and we redo our",
    "start": "598920",
    "end": "601260"
  },
  {
    "text": "curl we already see the update changed",
    "start": "601260",
    "end": "604920"
  },
  {
    "text": "if we try and make this change a little",
    "start": "604920",
    "end": "606600"
  },
  {
    "text": "faster we'll be able to see spend",
    "start": "606600",
    "end": "609420"
  },
  {
    "text": "recompiling our application",
    "start": "609420",
    "end": "612180"
  },
  {
    "text": "so let's revert this to hello world",
    "start": "612180",
    "end": "614279"
  },
  {
    "text": "single exclamation mark and let's save",
    "start": "614279",
    "end": "616440"
  },
  {
    "text": "and if we jump back we see the rebuild",
    "start": "616440",
    "end": "619680"
  },
  {
    "text": "and The Re-Up",
    "start": "619680",
    "end": "621420"
  },
  {
    "text": "now you've got a pretty sweet developer",
    "start": "621420",
    "end": "623880"
  },
  {
    "text": "experience for iterating and building on",
    "start": "623880",
    "end": "626220"
  },
  {
    "text": "your spend applications",
    "start": "626220",
    "end": "628440"
  },
  {
    "text": "this works really well especially when",
    "start": "628440",
    "end": "631500"
  },
  {
    "text": "you start to have multi-component or",
    "start": "631500",
    "end": "633959"
  },
  {
    "text": "microservice like spin application so",
    "start": "633959",
    "end": "636779"
  },
  {
    "text": "why not do that let's add another",
    "start": "636779",
    "end": "638760"
  },
  {
    "text": "component to our spin program",
    "start": "638760",
    "end": "641399"
  },
  {
    "text": "okay",
    "start": "641399",
    "end": "642360"
  },
  {
    "text": "so to add a new component",
    "start": "642360",
    "end": "644760"
  },
  {
    "text": "we can just run spend add next to our",
    "start": "644760",
    "end": "647459"
  },
  {
    "text": "spin.tomel",
    "start": "647459",
    "end": "649320"
  },
  {
    "text": "again we get the pecker to choose a",
    "start": "649320",
    "end": "651779"
  },
  {
    "text": "starter template that we want",
    "start": "651779",
    "end": "653579"
  },
  {
    "text": "however if you don't want to use the",
    "start": "653579",
    "end": "655560"
  },
  {
    "text": "Picker you can do this on a single",
    "start": "655560",
    "end": "657540"
  },
  {
    "text": "command let's do spend add HTTP GS",
    "start": "657540",
    "end": "662640"
  },
  {
    "text": "we're going to call this component Echo",
    "start": "662640",
    "end": "666360"
  },
  {
    "text": "I'm not going to worry about a",
    "start": "666360",
    "end": "667860"
  },
  {
    "text": "description and for the path I'm going",
    "start": "667860",
    "end": "670140"
  },
  {
    "text": "to match on slash",
    "start": "670140",
    "end": "673940"
  },
  {
    "text": "Echo",
    "start": "674279",
    "end": "676320"
  },
  {
    "text": "now when we run Double L we have our",
    "start": "676320",
    "end": "678899"
  },
  {
    "text": "Echo application right next to our hello",
    "start": "678899",
    "end": "681060"
  },
  {
    "text": "application",
    "start": "681060",
    "end": "682860"
  },
  {
    "text": "let's jump back to vs code",
    "start": "682860",
    "end": "684959"
  },
  {
    "text": "and take a look",
    "start": "684959",
    "end": "687000"
  },
  {
    "text": "here we have a source directory this",
    "start": "687000",
    "end": "688800"
  },
  {
    "text": "time whether JavaScript source code",
    "start": "688800",
    "end": "692779"
  },
  {
    "text": "we have our webpack configuration and a",
    "start": "692820",
    "end": "695040"
  },
  {
    "text": "package.json the things that we need to",
    "start": "695040",
    "end": "697920"
  },
  {
    "text": "take our JavaScript and compile it to a",
    "start": "697920",
    "end": "700500"
  },
  {
    "text": "web assembly binary",
    "start": "700500",
    "end": "703019"
  },
  {
    "text": "just leave this right now as the default",
    "start": "703019",
    "end": "705420"
  },
  {
    "text": "JavaScript code and pop open or",
    "start": "705420",
    "end": "708360"
  },
  {
    "text": "spin.tomel",
    "start": "708360",
    "end": "710640"
  },
  {
    "text": "at the bottom we have the same three",
    "start": "710640",
    "end": "712740"
  },
  {
    "text": "sections for the component configuration",
    "start": "712740",
    "end": "716100"
  },
  {
    "text": "we have the source for our echoasm",
    "start": "716100",
    "end": "719640"
  },
  {
    "text": "we have our path",
    "start": "719640",
    "end": "721500"
  },
  {
    "text": "and we have our build instructions",
    "start": "721500",
    "end": "726260"
  },
  {
    "text": "let's add our watch",
    "start": "727260",
    "end": "730279"
  },
  {
    "text": "and",
    "start": "732660",
    "end": "733800"
  },
  {
    "text": "co-pilot did pretty well to autocomplete",
    "start": "733800",
    "end": "736260"
  },
  {
    "text": "however this is Javascript and not a",
    "start": "736260",
    "end": "738779"
  },
  {
    "text": "typescript project",
    "start": "738779",
    "end": "740459"
  },
  {
    "text": "of course I could have used HTTP TS",
    "start": "740459",
    "end": "742860"
  },
  {
    "text": "instead",
    "start": "742860",
    "end": "745579"
  },
  {
    "text": "let's jump back and run spend",
    "start": "745920",
    "end": "748680"
  },
  {
    "text": "watch",
    "start": "748680",
    "end": "750060"
  },
  {
    "text": "we haven't built our JavaScript",
    "start": "750060",
    "end": "752040"
  },
  {
    "text": "application yet so it's going to do that",
    "start": "752040",
    "end": "754260"
  },
  {
    "text": "now and to do so it needs the webpack",
    "start": "754260",
    "end": "757019"
  },
  {
    "text": "CLI",
    "start": "757019",
    "end": "759620"
  },
  {
    "text": "perfect",
    "start": "768959",
    "end": "771240"
  },
  {
    "text": "Let's Run Carl on localhost 3000",
    "start": "771240",
    "end": "776579"
  },
  {
    "text": "Echo we get the hello from a JavaScript",
    "start": "776639",
    "end": "779220"
  },
  {
    "text": "SDK",
    "start": "779220",
    "end": "780480"
  },
  {
    "text": "and on the root we get the hello world",
    "start": "780480",
    "end": "784519"
  },
  {
    "text": "let's modify our index.js and say hello",
    "start": "784620",
    "end": "789720"
  },
  {
    "text": "Js",
    "start": "789720",
    "end": "790980"
  },
  {
    "text": "plasm fans",
    "start": "790980",
    "end": "792839"
  },
  {
    "text": "we pop back over to the terminal we can",
    "start": "792839",
    "end": "795540"
  },
  {
    "text": "see the rebuild and if we jump down and",
    "start": "795540",
    "end": "798420"
  },
  {
    "text": "run a curl against our Echo we get hello",
    "start": "798420",
    "end": "801420"
  },
  {
    "text": "JS fans",
    "start": "801420",
    "end": "804120"
  },
  {
    "text": "what's really special here is that spin",
    "start": "804120",
    "end": "806700"
  },
  {
    "text": "watch is monitoring all of the",
    "start": "806700",
    "end": "808380"
  },
  {
    "text": "components within our application",
    "start": "808380",
    "end": "810540"
  },
  {
    "text": "instead of this like a service oriented",
    "start": "810540",
    "end": "812700"
  },
  {
    "text": "architecture your spam application can",
    "start": "812700",
    "end": "814740"
  },
  {
    "text": "have one three a hundred or a thousand",
    "start": "814740",
    "end": "817200"
  },
  {
    "text": "different components as you make changes",
    "start": "817200",
    "end": "819660"
  },
  {
    "text": "to those components it will rebuild only",
    "start": "819660",
    "end": "821820"
  },
  {
    "text": "the parts that it needs to",
    "start": "821820",
    "end": "823740"
  },
  {
    "text": "and spend your application back together",
    "start": "823740",
    "end": "827820"
  },
  {
    "text": "this provides a really fast and",
    "start": "827820",
    "end": "829620"
  },
  {
    "text": "iterative development Loop",
    "start": "829620",
    "end": "831959"
  },
  {
    "text": "one which I don't think can be beaten in",
    "start": "831959",
    "end": "833940"
  },
  {
    "text": "a container-based environment not only",
    "start": "833940",
    "end": "836040"
  },
  {
    "text": "that it handles all of the routing for",
    "start": "836040",
    "end": "838680"
  },
  {
    "text": "us",
    "start": "838680",
    "end": "839459"
  },
  {
    "text": "we actually don't need to worry about an",
    "start": "839459",
    "end": "841440"
  },
  {
    "text": "API Gateway because each of our",
    "start": "841440",
    "end": "843360"
  },
  {
    "text": "components has a path that can be",
    "start": "843360",
    "end": "844860"
  },
  {
    "text": "configured web wildcards at any nested",
    "start": "844860",
    "end": "847920"
  },
  {
    "text": "level so let's make our Echo component",
    "start": "847920",
    "end": "850560"
  },
  {
    "text": "actually Echo",
    "start": "850560",
    "end": "852540"
  },
  {
    "text": "here we can remove this",
    "start": "852540",
    "end": "855779"
  },
  {
    "text": "and set the body to request.body",
    "start": "855779",
    "end": "859139"
  },
  {
    "text": "this just means whatever we pass in to",
    "start": "859139",
    "end": "862019"
  },
  {
    "text": "the HTTP request will be returned",
    "start": "862019",
    "end": "866279"
  },
  {
    "text": "our application should already have been",
    "start": "866279",
    "end": "868260"
  },
  {
    "text": "rebuilt meaning if we had the echo",
    "start": "868260",
    "end": "870240"
  },
  {
    "text": "endpoint we won't see a response however",
    "start": "870240",
    "end": "874320"
  },
  {
    "text": "let's do D let's say hello JS why some",
    "start": "874320",
    "end": "878339"
  },
  {
    "text": "friends",
    "start": "878339",
    "end": "880519"
  },
  {
    "text": "and bear in mind that shells don't like",
    "start": "881399",
    "end": "885019"
  },
  {
    "text": "exclamation parks and your messages",
    "start": "885019",
    "end": "887540"
  },
  {
    "text": "unless you handle the coaching",
    "start": "887540",
    "end": "889440"
  },
  {
    "text": "accordingly hello",
    "start": "889440",
    "end": "892079"
  },
  {
    "text": "JS fans",
    "start": "892079",
    "end": "894540"
  },
  {
    "text": "let's not forget the wasm",
    "start": "894540",
    "end": "896339"
  },
  {
    "text": "and the response come back",
    "start": "896339",
    "end": "899459"
  },
  {
    "text": "perfect okay that's all we're going to",
    "start": "899459",
    "end": "902399"
  },
  {
    "text": "focus on with regards to building",
    "start": "902399",
    "end": "904440"
  },
  {
    "text": "applications with spin",
    "start": "904440",
    "end": "907500"
  },
  {
    "text": "let's take a look at working with spend",
    "start": "907500",
    "end": "909660"
  },
  {
    "text": "applications and a container-based",
    "start": "909660",
    "end": "911940"
  },
  {
    "text": "context so let's start with easy mode",
    "start": "911940",
    "end": "915180"
  },
  {
    "text": "first the spin binary already has",
    "start": "915180",
    "end": "917820"
  },
  {
    "text": "everything that you need to build a oci",
    "start": "917820",
    "end": "920519"
  },
  {
    "text": "artifact and push it to an oci registry",
    "start": "920519",
    "end": "923940"
  },
  {
    "text": "you can run spend registry push",
    "start": "923940",
    "end": "927120"
  },
  {
    "text": "and set registering host",
    "start": "927120",
    "end": "930360"
  },
  {
    "text": "and image name",
    "start": "930360",
    "end": "932519"
  },
  {
    "text": "here I do ghcr",
    "start": "932519",
    "end": "934860"
  },
  {
    "text": "dot IO slash raw code slash shim first",
    "start": "934860",
    "end": "939839"
  },
  {
    "text": "wait",
    "start": "939839",
    "end": "941220"
  },
  {
    "text": "and I'll call this the latest version",
    "start": "941220",
    "end": "944519"
  },
  {
    "text": "this builds a oci registry",
    "start": "944519",
    "end": "948180"
  },
  {
    "text": "and throws it to GitHub container",
    "start": "948180",
    "end": "949980"
  },
  {
    "text": "registry for us",
    "start": "949980",
    "end": "952680"
  },
  {
    "text": "no tooling it just works we can then pop",
    "start": "952680",
    "end": "956519"
  },
  {
    "text": "open our browser to github.com Raw code",
    "start": "956519",
    "end": "960839"
  },
  {
    "text": "clicking on packages and we will see",
    "start": "960839",
    "end": "964620"
  },
  {
    "text": "that the latest version was pushed less",
    "start": "964620",
    "end": "967500"
  },
  {
    "text": "than a minute ago",
    "start": "967500",
    "end": "970019"
  },
  {
    "text": "so spend makes it incredibly easy to",
    "start": "970019",
    "end": "972360"
  },
  {
    "text": "build these oci artifacts and make them",
    "start": "972360",
    "end": "974459"
  },
  {
    "text": "available",
    "start": "974459",
    "end": "976320"
  },
  {
    "text": "via standard oci registries",
    "start": "976320",
    "end": "980699"
  },
  {
    "text": "however if you want to take things into",
    "start": "980699",
    "end": "982920"
  },
  {
    "text": "your own hand you can",
    "start": "982920",
    "end": "985920"
  },
  {
    "text": "and November last year Docker announced",
    "start": "985920",
    "end": "988440"
  },
  {
    "text": "that they would support webassembly",
    "start": "988440",
    "end": "990959"
  },
  {
    "text": "workloads on Docker desktop",
    "start": "990959",
    "end": "993899"
  },
  {
    "text": "meaning you can even just write a Docker",
    "start": "993899",
    "end": "996360"
  },
  {
    "text": "file to create your Docker image",
    "start": "996360",
    "end": "999660"
  },
  {
    "text": "so let's take a look at that so let's",
    "start": "999660",
    "end": "1001399"
  },
  {
    "text": "create a Docker file",
    "start": "1001399",
    "end": "1004779"
  },
  {
    "text": "here I have an empty Docker file and the",
    "start": "1005300",
    "end": "1007639"
  },
  {
    "text": "first thing I'm going to do is from",
    "start": "1007639",
    "end": "1009500"
  },
  {
    "text": "scratch",
    "start": "1009500",
    "end": "1011660"
  },
  {
    "text": "this will give us the ability just to",
    "start": "1011660",
    "end": "1013519"
  },
  {
    "text": "add our webassembly modules the",
    "start": "1013519",
    "end": "1015380"
  },
  {
    "text": "spin.tomel and get a special build",
    "start": "1015380",
    "end": "1018560"
  },
  {
    "text": "process",
    "start": "1018560",
    "end": "1019639"
  },
  {
    "text": "for building webassembly containers",
    "start": "1019639",
    "end": "1024160"
  },
  {
    "text": "what we want to do is copy",
    "start": "1024199",
    "end": "1027079"
  },
  {
    "text": "or spend Dot tummel",
    "start": "1027079",
    "end": "1031298"
  },
  {
    "text": "to dot or when there's no Vector",
    "start": "1032000",
    "end": "1034880"
  },
  {
    "text": "specified",
    "start": "1034880",
    "end": "1037339"
  },
  {
    "text": "next we're going to want to copy the two",
    "start": "1037339",
    "end": "1040400"
  },
  {
    "text": "was and binaries that we have inside of",
    "start": "1040400",
    "end": "1043100"
  },
  {
    "text": "our local directories",
    "start": "1043100",
    "end": "1045558"
  },
  {
    "text": "now let me point out that this is",
    "start": "1045559",
    "end": "1047000"
  },
  {
    "text": "probably not how you would build a",
    "start": "1047000",
    "end": "1048199"
  },
  {
    "text": "production image the correct way would",
    "start": "1048199",
    "end": "1050780"
  },
  {
    "text": "be to do from rust 159 as rust",
    "start": "1050780",
    "end": "1055520"
  },
  {
    "text": "Builder",
    "start": "1055520",
    "end": "1057260"
  },
  {
    "text": "get your tool chain for compiling to",
    "start": "1057260",
    "end": "1059059"
  },
  {
    "text": "webassembly oh rust up add tool chain",
    "start": "1059059",
    "end": "1062720"
  },
  {
    "text": "and so forth adding your build steps",
    "start": "1062720",
    "end": "1065299"
  },
  {
    "text": "with the spend build and then extracting",
    "start": "1065299",
    "end": "1068539"
  },
  {
    "text": "the wasm modules into your finals layer",
    "start": "1068539",
    "end": "1072500"
  },
  {
    "text": "oh we don't have time for that today so",
    "start": "1072500",
    "end": "1074780"
  },
  {
    "text": "we're just going to make it work using",
    "start": "1074780",
    "end": "1076760"
  },
  {
    "text": "spin build locally",
    "start": "1076760",
    "end": "1078559"
  },
  {
    "text": "and normally this is a bit of a full",
    "start": "1078559",
    "end": "1080120"
  },
  {
    "text": "pair but with webassembly it's not that",
    "start": "1080120",
    "end": "1082700"
  },
  {
    "text": "important because the wasm that you",
    "start": "1082700",
    "end": "1084799"
  },
  {
    "text": "build on Linux Windows Mac x86",
    "start": "1084799",
    "end": "1088100"
  },
  {
    "text": "or even arm is going to be the same",
    "start": "1088100",
    "end": "1091700"
  },
  {
    "text": "so",
    "start": "1091700",
    "end": "1093500"
  },
  {
    "text": "take advantage of that great local",
    "start": "1093500",
    "end": "1095440"
  },
  {
    "text": "developer experience with spin up and",
    "start": "1095440",
    "end": "1099500"
  },
  {
    "text": "spend build",
    "start": "1099500",
    "end": "1100880"
  },
  {
    "text": "and then just ship it in a container for",
    "start": "1100880",
    "end": "1102740"
  },
  {
    "text": "prod",
    "start": "1102740",
    "end": "1103520"
  },
  {
    "text": "next we want to go into the echo",
    "start": "1103520",
    "end": "1105080"
  },
  {
    "text": "directory",
    "start": "1105080",
    "end": "1107620"
  },
  {
    "text": "which has a Target and a wasm fail",
    "start": "1108559",
    "end": "1113500"
  },
  {
    "text": "like so",
    "start": "1117620",
    "end": "1118880"
  },
  {
    "text": "and you're going to want to replicate",
    "start": "1118880",
    "end": "1120380"
  },
  {
    "text": "this path inside the root",
    "start": "1120380",
    "end": "1124100"
  },
  {
    "text": "of the container image",
    "start": "1124100",
    "end": "1127960"
  },
  {
    "text": "why look at the spender automobile we've",
    "start": "1132380",
    "end": "1135559"
  },
  {
    "text": "already copied in",
    "start": "1135559",
    "end": "1137179"
  },
  {
    "text": "The Source fails to execute are already",
    "start": "1137179",
    "end": "1140179"
  },
  {
    "text": "specified here",
    "start": "1140179",
    "end": "1143260"
  },
  {
    "text": "meaning",
    "start": "1143720",
    "end": "1144980"
  },
  {
    "text": "we should be able",
    "start": "1144980",
    "end": "1146600"
  },
  {
    "text": "copy this",
    "start": "1146600",
    "end": "1148940"
  },
  {
    "text": "and see that it matches exactly",
    "start": "1148940",
    "end": "1152900"
  },
  {
    "text": "here",
    "start": "1152900",
    "end": "1154700"
  },
  {
    "text": "which it does",
    "start": "1154700",
    "end": "1156320"
  },
  {
    "text": "so let's just copy this for The Rush one",
    "start": "1156320",
    "end": "1160520"
  },
  {
    "text": "we want this source",
    "start": "1160520",
    "end": "1162380"
  },
  {
    "text": "from here",
    "start": "1162380",
    "end": "1163820"
  },
  {
    "text": "to here",
    "start": "1163820",
    "end": "1166160"
  },
  {
    "text": "now the last bit is going to look weird",
    "start": "1166160",
    "end": "1169220"
  },
  {
    "text": "but you do have to specify a command",
    "start": "1169220",
    "end": "1171380"
  },
  {
    "text": "we're just going to sell it to slash",
    "start": "1171380",
    "end": "1174320"
  },
  {
    "text": "the runtime will handle the rest",
    "start": "1174320",
    "end": "1177679"
  },
  {
    "text": "we can now pop over to our terminal",
    "start": "1177679",
    "end": "1180799"
  },
  {
    "text": "where we can do a Docker valid X build",
    "start": "1180799",
    "end": "1185240"
  },
  {
    "text": "here we can set the platform to YZ",
    "start": "1185240",
    "end": "1188120"
  },
  {
    "text": "wasm32",
    "start": "1188120",
    "end": "1191120"
  },
  {
    "text": "and set attack",
    "start": "1191419",
    "end": "1194200"
  },
  {
    "text": "I'll call this Rockwood Shameless way",
    "start": "1198440",
    "end": "1200539"
  },
  {
    "text": "latest",
    "start": "1200539",
    "end": "1201919"
  },
  {
    "text": "where we set the build context to the",
    "start": "1201919",
    "end": "1204260"
  },
  {
    "text": "current working directory it just means",
    "start": "1204260",
    "end": "1206299"
  },
  {
    "text": "where it can find the docker file and",
    "start": "1206299",
    "end": "1208460"
  },
  {
    "text": "any other fails that it needs",
    "start": "1208460",
    "end": "1211899"
  },
  {
    "text": "and is built",
    "start": "1212299",
    "end": "1214640"
  },
  {
    "text": "now we can do",
    "start": "1214640",
    "end": "1216260"
  },
  {
    "text": "cker container run Dash RM",
    "start": "1216260",
    "end": "1219140"
  },
  {
    "text": "we're going to expose Port 80 inside the",
    "start": "1219140",
    "end": "1221360"
  },
  {
    "text": "container to three thousand on a host",
    "start": "1221360",
    "end": "1223820"
  },
  {
    "text": "and we're going to set the run time it",
    "start": "1223820",
    "end": "1226160"
  },
  {
    "text": "could be IO",
    "start": "1226160",
    "end": "1228740"
  },
  {
    "text": "dot containerd dot spin",
    "start": "1228740",
    "end": "1231980"
  },
  {
    "text": "if they could take",
    "start": "1231980",
    "end": "1233660"
  },
  {
    "text": "and the platform to be YZ wasm32",
    "start": "1233660",
    "end": "1238220"
  },
  {
    "text": "now we can specify our container image",
    "start": "1238220",
    "end": "1242380"
  },
  {
    "text": "like so",
    "start": "1243860",
    "end": "1246460"
  },
  {
    "text": "there's no logging at the moment in our",
    "start": "1247520",
    "end": "1249679"
  },
  {
    "text": "application until we hit it on one of",
    "start": "1249679",
    "end": "1252020"
  },
  {
    "text": "our requests",
    "start": "1252020",
    "end": "1253400"
  },
  {
    "text": "so let's do a curl localhost",
    "start": "1253400",
    "end": "1257080"
  },
  {
    "text": "3000.",
    "start": "1257080",
    "end": "1258799"
  },
  {
    "text": "we can see the logging and hello world",
    "start": "1258799",
    "end": "1262640"
  },
  {
    "text": "let's change this again and provide a",
    "start": "1262640",
    "end": "1264559"
  },
  {
    "text": "body that says hello wasm",
    "start": "1264559",
    "end": "1267820"
  },
  {
    "text": "or Echo endpoint",
    "start": "1267820",
    "end": "1271460"
  },
  {
    "text": "perfect",
    "start": "1271460",
    "end": "1273440"
  },
  {
    "text": "now if that's not cool enough",
    "start": "1273440",
    "end": "1275600"
  },
  {
    "text": "it doesn't stop with just Docker build",
    "start": "1275600",
    "end": "1277520"
  },
  {
    "text": "and Docker run",
    "start": "1277520",
    "end": "1279080"
  },
  {
    "text": "with Docker compose you can also specify",
    "start": "1279080",
    "end": "1281960"
  },
  {
    "text": "the runtime and platform Flags",
    "start": "1281960",
    "end": "1284900"
  },
  {
    "text": "and run your webassembly applications",
    "start": "1284900",
    "end": "1286640"
  },
  {
    "text": "state-by-side with containers meaning",
    "start": "1286640",
    "end": "1289220"
  },
  {
    "text": "your spend applications to speak the",
    "start": "1289220",
    "end": "1290840"
  },
  {
    "text": "postgres or redis",
    "start": "1290840",
    "end": "1292640"
  },
  {
    "text": "can be orchestrated web Docker can pause",
    "start": "1292640",
    "end": "1295520"
  },
  {
    "text": "with a postgres container and a redness",
    "start": "1295520",
    "end": "1297799"
  },
  {
    "text": "container that is pretty cool",
    "start": "1297799",
    "end": "1301880"
  },
  {
    "text": "so what about kubernetes",
    "start": "1301880",
    "end": "1306220"
  },
  {
    "text": "well here I have an ALT directory with a",
    "start": "1307640",
    "end": "1311120"
  },
  {
    "text": "subsequent kubernetes directory which",
    "start": "1311120",
    "end": "1312860"
  },
  {
    "text": "contains a couple of kubernetes manifest",
    "start": "1312860",
    "end": "1315860"
  },
  {
    "text": "the first one is a standard kubernetes",
    "start": "1315860",
    "end": "1318260"
  },
  {
    "text": "deployment which I've just called run",
    "start": "1318260",
    "end": "1320480"
  },
  {
    "text": "wasm",
    "start": "1320480",
    "end": "1322159"
  },
  {
    "text": "the only thing that's really different",
    "start": "1322159",
    "end": "1323600"
  },
  {
    "text": "in this deployment from any other",
    "start": "1323600",
    "end": "1325280"
  },
  {
    "text": "deployment is that we have a runtime",
    "start": "1325280",
    "end": "1327140"
  },
  {
    "text": "class set to spin",
    "start": "1327140",
    "end": "1330200"
  },
  {
    "text": "we referenced the ocir effect that we",
    "start": "1330200",
    "end": "1332659"
  },
  {
    "text": "pushed to gscr",
    "start": "1332659",
    "end": "1335299"
  },
  {
    "text": "and if we look in the runtime classes",
    "start": "1335299",
    "end": "1337220"
  },
  {
    "text": "yaml you'll see that we've configured",
    "start": "1337220",
    "end": "1339080"
  },
  {
    "text": "the spend runtime class to use the spin",
    "start": "1339080",
    "end": "1341419"
  },
  {
    "text": "Handler",
    "start": "1341419",
    "end": "1342500"
  },
  {
    "text": "this just means that the containerdy",
    "start": "1342500",
    "end": "1344419"
  },
  {
    "text": "shim for spin will exist on each of the",
    "start": "1344419",
    "end": "1347000"
  },
  {
    "text": "nodes",
    "start": "1347000",
    "end": "1348559"
  },
  {
    "text": "that's all I need to change to my yamo",
    "start": "1348559",
    "end": "1351440"
  },
  {
    "text": "and I can click control apply Dash f",
    "start": "1351440",
    "end": "1354740"
  },
  {
    "text": "ubernetes like so",
    "start": "1354740",
    "end": "1357200"
  },
  {
    "text": "the runtime class is created the",
    "start": "1357200",
    "end": "1359600"
  },
  {
    "text": "deployment is created",
    "start": "1359600",
    "end": "1361340"
  },
  {
    "text": "and if we run get pods we'll see our",
    "start": "1361340",
    "end": "1364280"
  },
  {
    "text": "application is running with three",
    "start": "1364280",
    "end": "1366020"
  },
  {
    "text": "replicas",
    "start": "1366020",
    "end": "1367340"
  },
  {
    "text": "so let's just confirm it works",
    "start": "1367340",
    "end": "1370460"
  },
  {
    "text": "we got cube control port forward",
    "start": "1370460",
    "end": "1374679"
  },
  {
    "text": "to this part",
    "start": "1374720",
    "end": "1377140"
  },
  {
    "text": "3000 to 800.",
    "start": "1377140",
    "end": "1380780"
  },
  {
    "text": "Amanda curl",
    "start": "1380780",
    "end": "1383919"
  },
  {
    "text": "localhost",
    "start": "1384260",
    "end": "1385820"
  },
  {
    "text": "very exciting",
    "start": "1385820",
    "end": "1387559"
  },
  {
    "text": "and we get our hello back",
    "start": "1387559",
    "end": "1390500"
  },
  {
    "text": "awesome",
    "start": "1390500",
    "end": "1392179"
  },
  {
    "text": "so what's actually going on here",
    "start": "1392179",
    "end": "1395240"
  },
  {
    "text": "so when we set the runtime class spin to",
    "start": "1395240",
    "end": "1397820"
  },
  {
    "text": "use a Handler called spin it just means",
    "start": "1397820",
    "end": "1400280"
  },
  {
    "text": "that there will be a Shem on each of the",
    "start": "1400280",
    "end": "1402140"
  },
  {
    "text": "machines called that Handler name for",
    "start": "1402140",
    "end": "1405140"
  },
  {
    "text": "instance containerd Shem spin",
    "start": "1405140",
    "end": "1407960"
  },
  {
    "text": "the container of these shims are",
    "start": "1407960",
    "end": "1409460"
  },
  {
    "text": "actually provided by Deus Labs a team",
    "start": "1409460",
    "end": "1411559"
  },
  {
    "text": "within Microsoft",
    "start": "1411559",
    "end": "1413240"
  },
  {
    "text": "these shims actually support running a",
    "start": "1413240",
    "end": "1416240"
  },
  {
    "text": "number of webassembly workloads",
    "start": "1416240",
    "end": "1419059"
  },
  {
    "text": "their suspension and the Slate spider",
    "start": "1419059",
    "end": "1421340"
  },
  {
    "text": "lead engine",
    "start": "1421340",
    "end": "1423620"
  },
  {
    "text": "these allow you to run different types",
    "start": "1423620",
    "end": "1425480"
  },
  {
    "text": "of webassembled applications within",
    "start": "1425480",
    "end": "1427580"
  },
  {
    "text": "containers web container D even to",
    "start": "1427580",
    "end": "1430400"
  },
  {
    "text": "kubernetes",
    "start": "1430400",
    "end": "1432799"
  },
  {
    "text": "now you might be asking how do we get",
    "start": "1432799",
    "end": "1434480"
  },
  {
    "text": "those shims available within our",
    "start": "1434480",
    "end": "1436159"
  },
  {
    "text": "kubernetes cluster",
    "start": "1436159",
    "end": "1438020"
  },
  {
    "text": "and to do that locally with Docker",
    "start": "1438020",
    "end": "1440840"
  },
  {
    "text": "desktop you must find this article from",
    "start": "1440840",
    "end": "1443840"
  },
  {
    "text": "docker announces the docker and wasm",
    "start": "1443840",
    "end": "1446960"
  },
  {
    "text": "Technical preview too",
    "start": "1446960",
    "end": "1449480"
  },
  {
    "text": "on this article you will find a bunch of",
    "start": "1449480",
    "end": "1452600"
  },
  {
    "text": "links here to download Docker desktop",
    "start": "1452600",
    "end": "1454820"
  },
  {
    "text": "for Lanos Mac and windows",
    "start": "1454820",
    "end": "1457159"
  },
  {
    "text": "this contains everything you need to use",
    "start": "1457159",
    "end": "1459919"
  },
  {
    "text": "than your slate and spin shims",
    "start": "1459919",
    "end": "1462799"
  },
  {
    "text": "bear in mind when you open Docker",
    "start": "1462799",
    "end": "1464960"
  },
  {
    "text": "desktop it will ask you to upgrade don't",
    "start": "1464960",
    "end": "1467740"
  },
  {
    "text": "these gems are not available and any",
    "start": "1467740",
    "end": "1470179"
  },
  {
    "text": "subsequent release at the moment however",
    "start": "1470179",
    "end": "1472400"
  },
  {
    "text": "as this stabilizes and matures it should",
    "start": "1472400",
    "end": "1475340"
  },
  {
    "text": "be available by standard by default on",
    "start": "1475340",
    "end": "1478039"
  },
  {
    "text": "all Docker desktops",
    "start": "1478039",
    "end": "1480080"
  },
  {
    "text": "but what about your production",
    "start": "1480080",
    "end": "1481220"
  },
  {
    "text": "kubernetes cluster",
    "start": "1481220",
    "end": "1483140"
  },
  {
    "text": "for that there's a project called kwasm",
    "start": "1483140",
    "end": "1485840"
  },
  {
    "text": "now the offers of this project will",
    "start": "1485840",
    "end": "1487940"
  },
  {
    "text": "actually tell you this project shouldn't",
    "start": "1487940",
    "end": "1489679"
  },
  {
    "text": "need to exist however for now it does",
    "start": "1489679",
    "end": "1493400"
  },
  {
    "text": "again to run these applications you need",
    "start": "1493400",
    "end": "1497120"
  },
  {
    "text": "the shims on your nodes kwasm is an",
    "start": "1497120",
    "end": "1500360"
  },
  {
    "text": "operator which will run inside of your",
    "start": "1500360",
    "end": "1502100"
  },
  {
    "text": "kubernetes cluster",
    "start": "1502100",
    "end": "1503659"
  },
  {
    "text": "and allows you to label the nodes that",
    "start": "1503659",
    "end": "1505700"
  },
  {
    "text": "you want to make available to run",
    "start": "1505700",
    "end": "1507080"
  },
  {
    "text": "webassembly workloads even if that's a",
    "start": "1507080",
    "end": "1509480"
  },
  {
    "text": "model or maybe it's just one",
    "start": "1509480",
    "end": "1511760"
  },
  {
    "text": "it then runs a privileged application on",
    "start": "1511760",
    "end": "1514400"
  },
  {
    "text": "each of those nodes to download the",
    "start": "1514400",
    "end": "1517159"
  },
  {
    "text": "binaries make them available on a path",
    "start": "1517159",
    "end": "1519679"
  },
  {
    "text": "and then finishes",
    "start": "1519679",
    "end": "1521780"
  },
  {
    "text": "it's just that simple",
    "start": "1521780",
    "end": "1523820"
  },
  {
    "text": "of course you should keep running kiwasm",
    "start": "1523820",
    "end": "1525980"
  },
  {
    "text": "because nodes are ephemeral they will",
    "start": "1525980",
    "end": "1527659"
  },
  {
    "text": "spin up and spell down so you need to",
    "start": "1527659",
    "end": "1529700"
  },
  {
    "text": "make sure as nodes rotate and new nodes",
    "start": "1529700",
    "end": "1531679"
  },
  {
    "text": "come online that that operator continues",
    "start": "1531679",
    "end": "1534200"
  },
  {
    "text": "to make your shims available to your",
    "start": "1534200",
    "end": "1536000"
  },
  {
    "text": "containerdy runtimes",
    "start": "1536000",
    "end": "1539059"
  },
  {
    "text": "as you can see from the compatibility",
    "start": "1539059",
    "end": "1540740"
  },
  {
    "text": "chart here",
    "start": "1540740",
    "end": "1542720"
  },
  {
    "text": "this works on Azure kubernetes with",
    "start": "1542720",
    "end": "1545779"
  },
  {
    "text": "limited support for gcp and AWS but it",
    "start": "1545779",
    "end": "1549140"
  },
  {
    "text": "worked great on many Cube 2 or even kind",
    "start": "1549140",
    "end": "1552919"
  },
  {
    "text": "so if you don't want to use Docker",
    "start": "1552919",
    "end": "1554299"
  },
  {
    "text": "desktop and you want to use one of those",
    "start": "1554299",
    "end": "1555860"
  },
  {
    "text": "feel free",
    "start": "1555860",
    "end": "1557720"
  },
  {
    "text": "and there's still support for canonical",
    "start": "1557720",
    "end": "1559400"
  },
  {
    "text": "and digital relation kubernetes too",
    "start": "1559400",
    "end": "1561980"
  },
  {
    "text": "so it's a really cool project that gets",
    "start": "1561980",
    "end": "1563840"
  },
  {
    "text": "you up and running with webassembly on",
    "start": "1563840",
    "end": "1565460"
  },
  {
    "text": "kubernetes in no time at all",
    "start": "1565460",
    "end": "1568460"
  },
  {
    "text": "so that's it thanks for tuning in for",
    "start": "1568460",
    "end": "1570679"
  },
  {
    "text": "this session we've covered how to build",
    "start": "1570679",
    "end": "1573020"
  },
  {
    "text": "webassembly applications server side",
    "start": "1573020",
    "end": "1575179"
  },
  {
    "text": "webassembly applications with spin",
    "start": "1575179",
    "end": "1577460"
  },
  {
    "text": "I used a rust service and a JavaScript",
    "start": "1577460",
    "end": "1579559"
  },
  {
    "text": "service my spend.tommel composed them",
    "start": "1579559",
    "end": "1582500"
  },
  {
    "text": "both together to act as kind of a router",
    "start": "1582500",
    "end": "1585080"
  },
  {
    "text": "of course there are options to do",
    "start": "1585080",
    "end": "1586820"
  },
  {
    "text": "routing within each of the services",
    "start": "1586820",
    "end": "1588200"
  },
  {
    "text": "themselves",
    "start": "1588200",
    "end": "1589460"
  },
  {
    "text": "that's up to you",
    "start": "1589460",
    "end": "1591080"
  },
  {
    "text": "we get a great developer experience with",
    "start": "1591080",
    "end": "1593960"
  },
  {
    "text": "a Sandbox that's unparalleled and a",
    "start": "1593960",
    "end": "1596360"
  },
  {
    "text": "truly ubiquitous runtime",
    "start": "1596360",
    "end": "1598700"
  },
  {
    "text": "it works with existing container",
    "start": "1598700",
    "end": "1600320"
  },
  {
    "text": "Technologies can run in production on",
    "start": "1600320",
    "end": "1602419"
  },
  {
    "text": "kubernetes",
    "start": "1602419",
    "end": "1604279"
  },
  {
    "text": "what are you waiting for",
    "start": "1604279",
    "end": "1606320"
  },
  {
    "text": "go check out server side webassembly",
    "start": "1606320",
    "end": "1608059"
  },
  {
    "text": "with spin today",
    "start": "1608059",
    "end": "1609919"
  },
  {
    "text": "have fun",
    "start": "1609919",
    "end": "1612519"
  }
]