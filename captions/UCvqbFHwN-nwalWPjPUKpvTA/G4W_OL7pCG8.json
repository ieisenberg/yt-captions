[
  {
    "text": "we're going to start today's threat detection session and miter attack and Falco",
    "start": "1020",
    "end": "6600"
  },
  {
    "text": "so what we're going to achieve today is we're going to use Falco as our IDs or threat detection tool",
    "start": "6600",
    "end": "12540"
  },
  {
    "text": "detect the tactics techniques and procedures associated with the miter attack framework and we'll use Atomic",
    "start": "12540",
    "end": "18779"
  },
  {
    "text": "Red Team 2 to actually generate those test scenarios so to start what is Falco a lot of",
    "start": "18779",
    "end": "25380"
  },
  {
    "text": "people showing today already know what Falco is so it's a open standard for cloud native threat detection again it's",
    "start": "25380",
    "end": "31759"
  },
  {
    "text": "widely used especially in the cloud native compute Foundation ecosystem it",
    "start": "31759",
    "end": "36899"
  },
  {
    "text": "has over a hundred contributing companies over 50 million downloads these companies range from some of the",
    "start": "36899",
    "end": "42780"
  },
  {
    "text": "largest fintech organizations to software developers and other Industries so with that we'll look at what is motor",
    "start": "42780",
    "end": "50820"
  },
  {
    "text": "attack a miter attack framework or the Matrix is a way of seeing the like as I say",
    "start": "50820",
    "end": "57780"
  },
  {
    "text": "earlier the tactics and techniques across the the kill chain within your environment so things like",
    "start": "57780",
    "end": "63140"
  },
  {
    "text": "reconnaissance through initial access all the way to impact data exfiltration that kind of stuff so it's a way of",
    "start": "63140",
    "end": "69659"
  },
  {
    "text": "categorizing uh what stage is an attack happening in your environment is it early access or is it something that's",
    "start": "69659",
    "end": "76260"
  },
  {
    "text": "Data Destruction is happening later on once they've gained um persistence with your environment",
    "start": "76260",
    "end": "83220"
  },
  {
    "text": "now in order to understand we won't go through every single tactic and technique in this session what we'll do is we'll cover a few test scenarios that",
    "start": "83220",
    "end": "90119"
  },
  {
    "text": "we can generate through Atomic red and again we'll give context around those tests as we're performing them now why",
    "start": "90119",
    "end": "96119"
  },
  {
    "text": "are we using Atomic red just like Falco Atomic Red Is An Open Source solution",
    "start": "96119",
    "end": "102259"
  },
  {
    "text": "security teams can quickly use it for free it's portable it's a way to consistently reproduce the same test",
    "start": "102259",
    "end": "109079"
  },
  {
    "text": "scenarios irrespective of who's performing the test you know they're already pre-configured and what they do",
    "start": "109079",
    "end": "115259"
  },
  {
    "text": "is they are mapped to the miter attack Matrix so when you look at these T Numbers think of the tactics and",
    "start": "115259",
    "end": "121500"
  },
  {
    "text": "techniques that we see in miter attack and you can quickly map the different tactics that are being performed and see",
    "start": "121500",
    "end": "128340"
  },
  {
    "text": "if Falco is able to detect those in real time now why is Falco a good tool for this",
    "start": "128340",
    "end": "133739"
  },
  {
    "text": "kind of exercise well the first point is to use a system called architecture so what that allows us to see is anything",
    "start": "133739",
    "end": "139860"
  },
  {
    "text": "from an application anything happening from kubernetes the operating system",
    "start": "139860",
    "end": "145220"
  },
  {
    "text": "essentially it's kernel activity so we can look at process activity Network",
    "start": "145220",
    "end": "150239"
  },
  {
    "text": "read write activity file i o a bunch of different scenarios the other way of",
    "start": "150239",
    "end": "155340"
  },
  {
    "text": "looking at is it's real time so as a system call is executed we can then process that and Trigger the event in",
    "start": "155340",
    "end": "161819"
  },
  {
    "text": "real time and we'll go through all this further in context throughout the session the important thing we're going to start",
    "start": "161819",
    "end": "167640"
  },
  {
    "text": "with is the rule structure so Falco already has some rules that are",
    "start": "167640",
    "end": "172920"
  },
  {
    "text": "pre-configured but we will have to create our own uh in case of where we don't have miter attack alignment",
    "start": "172920",
    "end": "180540"
  },
  {
    "text": "um so the first thing to note is it has this arbitrary name or a real name that you give and the description is just",
    "start": "180540",
    "end": "186300"
  },
  {
    "text": "some additional context around that now the the most important part that we can look at within this rule structure is",
    "start": "186300",
    "end": "191940"
  },
  {
    "text": "the condition so with Falco rules you can Define you know like a list and a list could be",
    "start": "191940",
    "end": "198659"
  },
  {
    "text": "just items that are listed you can also create a macro and a macro is some kind",
    "start": "198659",
    "end": "203819"
  },
  {
    "text": "of other arbitrary context so you could say look for these items and these other items or these items without some other",
    "start": "203819",
    "end": "210959"
  },
  {
    "text": "context you can put that into a macro and that way we can add like deeper",
    "start": "210959",
    "end": "216540"
  },
  {
    "text": "context uh rather than just looking for a specific system call that's being",
    "start": "216540",
    "end": "221580"
  },
  {
    "text": "performed we can actually correlate a bunch of different contexts within those macros and those macros build up or",
    "start": "221580",
    "end": "227280"
  },
  {
    "text": "conditions set within the rule the output is essentially what you see in the alert so it's usually some kind of",
    "start": "227280",
    "end": "234239"
  },
  {
    "text": "string like in this case a shell will spawned in a container but then the system called fields that we're handling",
    "start": "234239",
    "end": "240140"
  },
  {
    "text": "we inject those fields you can see they've got the little uh percentage sign at the end so",
    "start": "240140",
    "end": "246420"
  },
  {
    "text": "um what we're doing here is we're populating the fields so like username or process name or container ID or",
    "start": "246420",
    "end": "251760"
  },
  {
    "text": "command line argument we put those into the populated Fields so that when those contexts from the condition set is",
    "start": "251760",
    "end": "258660"
  },
  {
    "text": "triggered and it's matching it has to be a spawn process and it's a container and it's a shell a spawn process to know",
    "start": "258660",
    "end": "265199"
  },
  {
    "text": "it's a terminal shell then we'll tell you exactly what command was performed from which container ID that kind of",
    "start": "265199",
    "end": "271740"
  },
  {
    "text": "context for the alert then you can set priorities so is the alert informational",
    "start": "271740",
    "end": "276900"
  },
  {
    "text": "is it something lower priority is it warning is it something like a critical activity that's most certainly",
    "start": "276900",
    "end": "282419"
  },
  {
    "text": "considered you know something we should be worried about and then tags are part of that kind of automation context so we",
    "start": "282419",
    "end": "288300"
  },
  {
    "text": "could say in this case is it aligned with miter execution or specific show activity",
    "start": "288300",
    "end": "295380"
  },
  {
    "text": "now I mentioned earlier about those things in the conditional set those are your lists and macros so at least as I",
    "start": "295380",
    "end": "301740"
  },
  {
    "text": "say could be a list of IP addresses it could be fully qualified domains macros",
    "start": "301740",
    "end": "307139"
  },
  {
    "text": "are also a way of just looking for additional context you can have macros embedded within macros so you can be as",
    "start": "307139",
    "end": "313080"
  },
  {
    "text": "deep within context as you want so in this case we have shell processors which is looking for anything that's a process",
    "start": "313080",
    "end": "318540"
  },
  {
    "text": "that's listed in under shell binaries and then you see that shell binaries again has the additional context of what",
    "start": "318540",
    "end": "325080"
  },
  {
    "text": "defines a shell binary exactly so with all that context known what",
    "start": "325080",
    "end": "331139"
  },
  {
    "text": "we're going to do is create some custom rules eventually and tag those now the perfect example",
    "start": "331139",
    "end": "337560"
  },
  {
    "text": "here is where we see it's tagged with minor command and control so it might be in the case of a disallowed SSH",
    "start": "337560",
    "end": "344220"
  },
  {
    "text": "connection it definitely it's a potential command and control example so a user is trying to speak to a C2 server",
    "start": "344220",
    "end": "350580"
  },
  {
    "text": "or from a C2 server to perform that SSH connection to your remote environment but also could be an example of the",
    "start": "350580",
    "end": "356880"
  },
  {
    "text": "lateral movement so it's someone's trying to move laterally into your Cloud environment and again performing an SSH attempt on that",
    "start": "356880",
    "end": "364080"
  },
  {
    "text": "so you may need to tag with different context and again you might want to also tag it which is the T number itself with",
    "start": "364080",
    "end": "370380"
  },
  {
    "text": "the tactic and sub technique associated with that now in case you're thinking we're",
    "start": "370380",
    "end": "376560"
  },
  {
    "text": "building all these arbitrary rules ourselves actually a lot of them are already baked in by default in the case",
    "start": "376560",
    "end": "382620"
  },
  {
    "text": "of system calls or system rules again this number is probably changing regularly but at the time of writing",
    "start": "382620",
    "end": "389160"
  },
  {
    "text": "this I guess there were 65 system calls uh rules and then similarly for things like kubernetes it has its own audit log",
    "start": "389160",
    "end": "395880"
  },
  {
    "text": "rules and there's about 40 out of the box rules for that so in the case of the most common scenarios there's already a",
    "start": "395880",
    "end": "401639"
  },
  {
    "text": "default rule but of course when we're trying to extend our miter coverage we can build our own custom rules to extend",
    "start": "401639",
    "end": "408360"
  },
  {
    "text": "our coverage across the scope um as I say it's not limited to just kubernetes container system call",
    "start": "408360",
    "end": "414960"
  },
  {
    "text": "activity we also can handle uh you know event sources from different uh you know",
    "start": "414960",
    "end": "421259"
  },
  {
    "text": "order logging sources so things like AWS cloudtrail as is as a source we could",
    "start": "421259",
    "end": "426900"
  },
  {
    "text": "stream those events to Falco and of course perform the alerting on it it's not limited to just cloudtrail of course",
    "start": "426900",
    "end": "434039"
  },
  {
    "text": "uh whatever application you have that generates real-time events so it's a an",
    "start": "434039",
    "end": "439800"
  },
  {
    "text": "audit logging source of course we should be able to handle those process those and Trigger alerts",
    "start": "439800",
    "end": "445860"
  },
  {
    "text": "based on it so it's an exciting tool for extending coverage not just on hosts and",
    "start": "445860",
    "end": "451380"
  },
  {
    "text": "containers but into other third-party applications that you use every day in your environment",
    "start": "451380",
    "end": "456599"
  },
  {
    "text": "the thing I'm just going to close off because I don't want this to be a slide deck I prefer this to be an interactive session is being able to view the rules",
    "start": "456599",
    "end": "463319"
  },
  {
    "text": "so what we're going to do is you can see this example we go into a web UI search for monitor related context and then",
    "start": "463319",
    "end": "470580"
  },
  {
    "text": "we'll pick the rules that are most relevant to the tids that we're trying to perform our execution tests on if we",
    "start": "470580",
    "end": "475800"
  },
  {
    "text": "can't find a relevant example then we have to know where our coverage is lacking and where we can generate new",
    "start": "475800",
    "end": "480900"
  },
  {
    "text": "scenarios so with that I'm going to go into this test environment it's the instructor",
    "start": "480900",
    "end": "487319"
  },
  {
    "text": "environment I'm just going to start by yeah clicking on the start button but one thing you just also are pointing out",
    "start": "487319",
    "end": "493620"
  },
  {
    "text": "is these instruct labs are a great way for people to just interactively go on the browser and test the scenario I",
    "start": "493620",
    "end": "499800"
  },
  {
    "text": "built myself so if you want to know like watch a video about how we do the whole test scenarios locally or even just you",
    "start": "499800",
    "end": "506940"
  },
  {
    "text": "want to start deploying Falco performing some arbitrary tests yourself this is a great place to get started",
    "start": "506940",
    "end": "513060"
  },
  {
    "text": "so with that I'm going to create a network namespace called Falco in the Falco Network namespace I want to",
    "start": "513060",
    "end": "519599"
  },
  {
    "text": "deploy Falco itself so we're using Helm for the deployment process here now you might be wondering when you see it that",
    "start": "519599",
    "end": "525540"
  },
  {
    "text": "there's a lot of feature Flags one is setting TTY set to true so essentially for real-time detection we need that",
    "start": "525540",
    "end": "531839"
  },
  {
    "text": "setting to happen um we also have some kind of run k3s examples so for uh our collector we",
    "start": "531839",
    "end": "538980"
  },
  {
    "text": "actually set specific Source rather than socket context so if I say cubectl get nodes so uh the host itself and dash o",
    "start": "538980",
    "end": "546899"
  },
  {
    "text": "wide you can actually see that the version of the node we're running has this uh version 1.21 but also it's the",
    "start": "546899",
    "end": "554040"
  },
  {
    "text": "k3s example so it's just a single node cluster it's basically any normal Ubuntu image but we are using it as k3s now if",
    "start": "554040",
    "end": "562740"
  },
  {
    "text": "we go down further through the test scenaries you can watch to check for status changes so Falco is nearly ready",
    "start": "562740",
    "end": "569580"
  },
  {
    "text": "it's one out of two ready and it's running we wait for it to be too attitude ready",
    "start": "569580",
    "end": "575100"
  },
  {
    "text": "and then we should be able to check for this uh conditional set so actually I can just run uh weight pods check for",
    "start": "575100",
    "end": "582240"
  },
  {
    "text": "condition if it tells us it's ready then it's yeah now we have conditional met so",
    "start": "582240",
    "end": "587519"
  },
  {
    "text": "it should be two out of two ready now knowing this context knowing that Falco was deployed successfully via help we",
    "start": "587519",
    "end": "594360"
  },
  {
    "text": "can perform our first test so the first thing I want to do is it's just a simple find command so we're finding in the",
    "start": "594360",
    "end": "600300"
  },
  {
    "text": "root directory um some context so some credentials going back to Falco we just need to run",
    "start": "600300",
    "end": "606240"
  },
  {
    "text": "a single line command which is fileco logs and you can see that we already triggered our first event so the alert",
    "start": "606240",
    "end": "614399"
  },
  {
    "text": "is this warning rep private keys or private activities that were found as I mentioned earlier we can go to uh this",
    "start": "614399",
    "end": "622080"
  },
  {
    "text": "web UI and you can look up something like rep and you can look at what is the context that builds up these list of",
    "start": "622080",
    "end": "628860"
  },
  {
    "text": "prep activities or we can actually just look for the rule itself that was triggered again you can go in you can",
    "start": "628860",
    "end": "636000"
  },
  {
    "text": "look in further about how the rule is built so if you want to extend on it of course we can extend our coverage even",
    "start": "636000",
    "end": "641700"
  },
  {
    "text": "in on existing rules so with that we've deteriorated a very simple test scenario we've shown how",
    "start": "641700",
    "end": "647880"
  },
  {
    "text": "we're using keepctl logs and checking for the actual Falco container for any events that are triggered and then",
    "start": "647880",
    "end": "654060"
  },
  {
    "text": "graphing for again that specific rule that we're triggering now if you weren't to use the graph of",
    "start": "654060",
    "end": "661140"
  },
  {
    "text": "course you can look at all events that are triggered or Falco but for the purpose of this lab we want to focus on",
    "start": "661140",
    "end": "666420"
  },
  {
    "text": "isolated cases associated with those specific tactics we want to perform",
    "start": "666420",
    "end": "671640"
  },
  {
    "text": "so the next thing we want to do is install Atomic red so we like with falca we create a namespace called Atomic red",
    "start": "671640",
    "end": "678240"
  },
  {
    "text": "we've made the process a little easier here so we've made the image external so now you can just create a kubernetes",
    "start": "678240",
    "end": "683880"
  },
  {
    "text": "deployment unlike using the helm process with this we just specify the hosted",
    "start": "683880",
    "end": "689040"
  },
  {
    "text": "image which is the atomic red latest and other than that everything else is pretty much standard we know there's one",
    "start": "689040",
    "end": "695880"
  },
  {
    "text": "single part is going to be created we understand that the security context in order to perform a lot of the actions",
    "start": "695880",
    "end": "701660"
  },
  {
    "text": "within the miter attack table it needs privileged permission so we set security context with privilege set to true",
    "start": "701660",
    "end": "708600"
  },
  {
    "text": "so with that we've done our deployment it should be relatively straightforward so if we say Cube CTR get pods you can",
    "start": "708600",
    "end": "714959"
  },
  {
    "text": "see that it's container creating now it's running so it's very quick that whole deployment process 29 seconds in",
    "start": "714959",
    "end": "721560"
  },
  {
    "text": "total to execute now with that once Atomic red is deployed there's nothing else left to do on this section we can",
    "start": "721560",
    "end": "727380"
  },
  {
    "text": "move to the next part of the map now once we have Atomic red and we have",
    "start": "727380",
    "end": "733140"
  },
  {
    "text": "Falco the best way to execute or show this real-time detection is to perform a",
    "start": "733140",
    "end": "738480"
  },
  {
    "text": "kind of a split screen so on one side we'll have uh we'll execute into the Container which is the atomic red pod",
    "start": "738480",
    "end": "744779"
  },
  {
    "text": "and then on the right side view we're going to do that command we saw earlier which is the cube CTR logs it's taking",
    "start": "744779",
    "end": "752399"
  },
  {
    "text": "just a few moments to load up here in the meantime like I say on the top of",
    "start": "752399",
    "end": "757740"
  },
  {
    "text": "the bar here you have this Atomic red reference in each of the tabs you can click on the reference Dock and that's a",
    "start": "757740",
    "end": "764399"
  },
  {
    "text": "great way to just check you know what is the relevant T number that we're looking at right now and how can we um interact",
    "start": "764399",
    "end": "770519"
  },
  {
    "text": "with that trigger those test scenarios so the first test scenario we're looking at here is",
    "start": "770519",
    "end": "776639"
  },
  {
    "text": "um we have t1070 now we can do two things you can",
    "start": "776639",
    "end": "782700"
  },
  {
    "text": "either go to the atomic red reference dock which will take us externally to the GitHub repo for Red Canary who",
    "start": "782700",
    "end": "789899"
  },
  {
    "text": "manage the atomic RED project and this will give us the context about what's happening here so it's an indicator of",
    "start": "789899",
    "end": "795720"
  },
  {
    "text": "removal so it's file deletion as you can see here now there's a bunch of tests so they'll tell us there's",
    "start": "795720",
    "end": "801839"
  },
  {
    "text": "deleting a single file or an entire folder in the case for Linux or Mac OS uh you like Unix type system in a case",
    "start": "801839",
    "end": "809220"
  },
  {
    "text": "of Windows systems you know you can do the same executed tasks but again it's it's it'll understand the environment",
    "start": "809220",
    "end": "814620"
  },
  {
    "text": "it's running in and perform the relevant Associated tests now the nice thing is",
    "start": "814620",
    "end": "819660"
  },
  {
    "text": "we don't have to keep jumping back to Atomic red tests the first thing we want to do is just Powershell in to so we",
    "start": "819660",
    "end": "825480"
  },
  {
    "text": "mentioned we execute and exec into the atomic red deployment so in that case if",
    "start": "825480",
    "end": "831360"
  },
  {
    "text": "I run this Powershell within the session you can see now I'm running as root Powershell if I run this import module what I'm",
    "start": "831360",
    "end": "838680"
  },
  {
    "text": "doing is importing the test scenario for the atomic red test now there's a bunch of things we can do there's a bunch of",
    "start": "838680",
    "end": "844680"
  },
  {
    "text": "different feature Flags so if you want to show the details associated with it you can use the feature flag show",
    "start": "844680",
    "end": "850680"
  },
  {
    "text": "details and that gives us some context about what is happening here so we mentioned it's all to do with file",
    "start": "850680",
    "end": "856620"
  },
  {
    "text": "deletion so as we say they're all Linux specific tests we're performing here because we're running it in a you know",
    "start": "856620",
    "end": "862680"
  },
  {
    "text": "in Ubuntu image as we mentioned in the first part of the the session so you can see they're kind of the",
    "start": "862680",
    "end": "868560"
  },
  {
    "text": "actual command is being executed so it doesn't need elevator permissions in this case the attack command can be",
    "start": "868560",
    "end": "874260"
  },
  {
    "text": "performed as a standard user and it just Echoes out this uh you can see RM for",
    "start": "874260",
    "end": "879360"
  },
  {
    "text": "remove and some other arbitrary context we don't need to look into all the specific context here but what we need",
    "start": "879360",
    "end": "885120"
  },
  {
    "text": "to know is what exactly is the test doing first of all which is Fault division so what I've done is I'm",
    "start": "885120",
    "end": "890160"
  },
  {
    "text": "looking for anything related to this bulk data that's been removed from disk because I know that out of the box there",
    "start": "890160",
    "end": "897360"
  },
  {
    "text": "should be this uh bulk file deletion see the way we by default we have a rule for",
    "start": "897360",
    "end": "903000"
  },
  {
    "text": "bulk data deletion and importantly when we look at the context associated with",
    "start": "903000",
    "end": "908339"
  },
  {
    "text": "it we can see that again does have the relevant tagging so for the relevant",
    "start": "908339",
    "end": "913639"
  },
  {
    "text": "miter attack tactics and the T number associated with it and what does it",
    "start": "913639",
    "end": "918660"
  },
  {
    "text": "apply to this process activity container and file system on the host so going back into our environment we",
    "start": "918660",
    "end": "925440"
  },
  {
    "text": "want to execute those tests so the next thing might be checking for prerequisites do you have prereqsa",
    "start": "925440",
    "end": "931560"
  },
  {
    "text": "checks done that allow for you to perform this executed test you can see here there's no specific prerequisites",
    "start": "931560",
    "end": "937019"
  },
  {
    "text": "to find or required for this case so it can actually do the deletion activity without you needing to do some",
    "start": "937019",
    "end": "943260"
  },
  {
    "text": "additional custom configuration so the last thing I'll do is I'll actually execute the test and it's as",
    "start": "943260",
    "end": "948600"
  },
  {
    "text": "simple as running invoke Atomic tests against the T number which was t1070 against the cell number",
    "start": "948600",
    "end": "956699"
  },
  {
    "text": "so I paste the test in and you see that on the right side view we're looking for cube CTL logs I'm using the dash F",
    "start": "956699",
    "end": "963839"
  },
  {
    "text": "against the file we're using the tail command at zero so it's looking for anything that's quite literally",
    "start": "963839",
    "end": "968940"
  },
  {
    "text": "happening right now in the network namespace Falco gets the container Falco and again we're doing it by",
    "start": "968940",
    "end": "975899"
  },
  {
    "text": "um label we're looking for that specific matching label so that again there's only one part in that Network namespace",
    "start": "975899",
    "end": "981420"
  },
  {
    "text": "that matches the label of name equals Falco so yeah there we go um for my",
    "start": "981420",
    "end": "987360"
  },
  {
    "text": "first test every time it's performed on the left side the second it's executed on the right side I get the real-time",
    "start": "987360",
    "end": "993600"
  },
  {
    "text": "detection so perfect we've proven first of all that Falco detects fall deletion out of",
    "start": "993600",
    "end": "999540"
  },
  {
    "text": "the box because we have the pre-configured rule there's no kind of a um you know there's not a black box in",
    "start": "999540",
    "end": "1005180"
  },
  {
    "text": "this case it's it's all very transparent but the rules that we provide and uh there there is visibility again through",
    "start": "1005180",
    "end": "1011899"
  },
  {
    "text": "this UI about what rules we've already created out of the box so there's nothing else we need to do here the rule",
    "start": "1011899",
    "end": "1017720"
  },
  {
    "text": "already exists added by the default real feed and by invoking test we see on the right side view in real time the",
    "start": "1017720",
    "end": "1023240"
  },
  {
    "text": "detections occur so we're going to move on to the next test scenario in our session so the next",
    "start": "1023240",
    "end": "1029240"
  },
  {
    "text": "one should be related to I believe it's going to be like a an escape from",
    "start": "1029240",
    "end": "1034459"
  },
  {
    "text": "container scenario so we'll go back to start and again looking at the um",
    "start": "1034459",
    "end": "1039678"
  },
  {
    "text": "the this introduction it tells us yeah breaking out of a container so advertise adversaries might want to break out of a",
    "start": "1039679",
    "end": "1046040"
  },
  {
    "text": "container as a way of gaining access to the host so this test scenario is going to be a breakout from container and we",
    "start": "1046040",
    "end": "1051620"
  },
  {
    "text": "want to be able to detect some unusual Network execution so in this case detecting like a network tool that was",
    "start": "1051620",
    "end": "1058400"
  },
  {
    "text": "launched within a container is a perfect example of how an adversary might want to move laterally out of that",
    "start": "1058400",
    "end": "1064220"
  },
  {
    "text": "environment so we start in the same place we start on the left side from the atomic red test and the right side is Falco",
    "start": "1064220",
    "end": "1070039"
  },
  {
    "text": "so knowing how we do all of these we always have to Powershell in and then we",
    "start": "1070039",
    "end": "1075620"
  },
  {
    "text": "need to import the specific test you'll see every time we import uh the relevant",
    "start": "1075620",
    "end": "1081200"
  },
  {
    "text": "test scenarios I don't know why it's not importing if I was to copy go back here paste maybe I try quitting",
    "start": "1081200",
    "end": "1088640"
  },
  {
    "text": "and pasting again okay that works fine so we import our test scenario it's best",
    "start": "1088640",
    "end": "1094160"
  },
  {
    "text": "practice to form a cleanup so you always use uh the dash clean at the end again",
    "start": "1094160",
    "end": "1099740"
  },
  {
    "text": "if you were doing this in your own environment to make sure you're not importing through other jump tests between each test scenario",
    "start": "1099740",
    "end": "1106100"
  },
  {
    "text": "so with that we can show our details again as we mentioned we want to detect",
    "start": "1106100",
    "end": "1112640"
  },
  {
    "text": "um specific Network Tools that are being used Now by checking the details view we get again the context of the commands",
    "start": "1112640",
    "end": "1118520"
  },
  {
    "text": "that are being used so if config if it was a netcat we know what tools are being used here so in our case we could",
    "start": "1118520",
    "end": "1125360"
  },
  {
    "text": "create some very simple arbitrary rule that says if I see netcat Trigger that",
    "start": "1125360",
    "end": "1130640"
  },
  {
    "text": "detection and again by checking details we know exactly what it is that we're trying to scope into our Rule now same",
    "start": "1130640",
    "end": "1137179"
  },
  {
    "text": "thing again for Network 2 we should already have this rule in our rules feed so if I just type in network 2 we should",
    "start": "1137179",
    "end": "1145820"
  },
  {
    "text": "have bunch of different scenarios actually there's launching remote file copy tools Ingress remote tools suspicious Network Tools on a host or in",
    "start": "1145820",
    "end": "1153200"
  },
  {
    "text": "the container so we're focused on the container scenario we can see what are the um the macros as I mentioned earlier if",
    "start": "1153200",
    "end": "1160880"
  },
  {
    "text": "you wanted to see what the network tool processes are we can copy that macro we",
    "start": "1160880",
    "end": "1166160"
  },
  {
    "text": "can filter again for it in our search View and by clicking into that specific macro we can see it's type macro and",
    "start": "1166160",
    "end": "1172220"
  },
  {
    "text": "that will tell us how it's built so you can see it's a process name and then the process name is looking for listed",
    "start": "1172220",
    "end": "1178700"
  },
  {
    "text": "network two binaries so we're going further down this Rabbit Hole of looking for the additional context but by",
    "start": "1178700",
    "end": "1185299"
  },
  {
    "text": "looking for Network tool binaries then we can see it's listed here for netcat NC nmap dig TCP Dom t-shirt there are a",
    "start": "1185299",
    "end": "1194299"
  },
  {
    "text": "bunch of different networking tools telnet so if we executed any of those arbitrary tests this should actually trigger Earth",
    "start": "1194299",
    "end": "1201740"
  },
  {
    "text": "detection rule because again it was looking for a listed process and the process has to match one of these",
    "start": "1201740",
    "end": "1207440"
  },
  {
    "text": "process names and again we know this is a type list so going back into our",
    "start": "1207440",
    "end": "1212780"
  },
  {
    "text": "environment we could check prerequisites but I don't think there's any prerequisite requirements here it'll",
    "start": "1212780",
    "end": "1219380"
  },
  {
    "text": "perform a test you can see it's the running escaped host technique simulation and again it already has",
    "start": "1219380",
    "end": "1225679"
  },
  {
    "text": "darker installed so there's not a whole lot of checks that we need to go for so by just running the test scenario we can",
    "start": "1225679",
    "end": "1232400"
  },
  {
    "text": "actually see again same thing one of the test scenarios that it's going to run is we saw them here there's like netcat if",
    "start": "1232400",
    "end": "1239480"
  },
  {
    "text": "config bunch of different tests are executed the best thing you can do is just have rules or release with deeper",
    "start": "1239480",
    "end": "1246620"
  },
  {
    "text": "context so by having more and more um examples of Network Tools that could",
    "start": "1246620",
    "end": "1252559"
  },
  {
    "text": "be run by an attacker as they're moving laterally now one thing I haven't talked about much other than in slide deck was",
    "start": "1252559",
    "end": "1258860"
  },
  {
    "text": "around and the um the conditions that were showing not the conditional set sorry but the output so as I mentioned",
    "start": "1258860",
    "end": "1264980"
  },
  {
    "text": "we can see that this test is definitely happening from Atomic red because we can see it's coming from the container Atomic red and with the relevant image",
    "start": "1264980",
    "end": "1272299"
  },
  {
    "text": "that we deployed earlier but also you can see for instance what command was executed so in this case it was command",
    "start": "1272299",
    "end": "1277820"
  },
  {
    "text": "was set to NECA so in case there was any confusion about exactly what command was triggered that actually gave this",
    "start": "1277820",
    "end": "1284059"
  },
  {
    "text": "detection well here was the command that was executed and in the case of more complex commands of course we see the full output from the the shell",
    "start": "1284059",
    "end": "1291919"
  },
  {
    "text": "so with that I'm happy with what we've learned from this test scenario and we should get this detection Network tool",
    "start": "1291919",
    "end": "1297980"
  },
  {
    "text": "launched so every time I run the test scenario I should get the same thing",
    "start": "1297980",
    "end": "1303500"
  },
  {
    "text": "again so if I was to yeah actually that one's kind of Frozen up but we'll move on to the next test scenario that's okay",
    "start": "1303500",
    "end": "1309740"
  },
  {
    "text": "so with that known the next one we're picking a test scenario where we don't have a falca rule this is a great way to",
    "start": "1309740",
    "end": "1316640"
  },
  {
    "text": "better understand uh the complexities or the the individual requirements for creating",
    "start": "1316640",
    "end": "1323000"
  },
  {
    "text": "your new custom Rule and again deploying the changes so I'll start by again nothing's changed",
    "start": "1323000",
    "end": "1329960"
  },
  {
    "text": "here is going into the terminal shell um we just want to uh then import the",
    "start": "1329960",
    "end": "1336919"
  },
  {
    "text": "relevant test scenarios now from here I want to test it straight",
    "start": "1336919",
    "end": "1342860"
  },
  {
    "text": "away and you'll notice on the right side I'm looking for anything that's potentially malicious python script",
    "start": "1342860",
    "end": "1349159"
  },
  {
    "text": "um the reason I'm looking for that is because it's running these python commands",
    "start": "1349159",
    "end": "1354919"
  },
  {
    "text": "so yeah nothing's coming up for python even if I remove the grep I can get",
    "start": "1354919",
    "end": "1360159"
  },
  {
    "text": "everything that's happening from Falco do you know as in maybe it's detecting something else so we can perform the",
    "start": "1360159",
    "end": "1366799"
  },
  {
    "text": "test one more time you do get other detections but they're not relevant to the context here like for instance",
    "start": "1366799",
    "end": "1372620"
  },
  {
    "text": "remember we mentioned how we're power shelling into there we're running under root so we get things like file below",
    "start": "1372620",
    "end": "1380480"
  },
  {
    "text": "Etsy or in some specific environment where it's running so we can see the RC local test that is being performed which",
    "start": "1380480",
    "end": "1386900"
  },
  {
    "text": "is the you know we said there's two scenarios here there's the RC local there's RC common or the two sonest",
    "start": "1386900",
    "end": "1392960"
  },
  {
    "text": "tests that are going to be performed so let's go see that with the details for you so if I say show details you can see",
    "start": "1392960",
    "end": "1401360"
  },
  {
    "text": "um yeah here we go so you can see in under Etsy RC local that's fine so we",
    "start": "1401360",
    "end": "1406640"
  },
  {
    "text": "did get that context we do see it's under Etsy RC local however this rule",
    "start": "1406640",
    "end": "1412580"
  },
  {
    "text": "doesn't specifically align with with what is the miter attack activity that's being performed which is",
    "start": "1412580",
    "end": "1419299"
  },
  {
    "text": "the malicious python script so although we do get detections of other anomalous uh things happening in environments and",
    "start": "1419299",
    "end": "1426080"
  },
  {
    "text": "maybe if you read through all of the commands that are being run like the T at CRC local you could probably",
    "start": "1426080",
    "end": "1431659"
  },
  {
    "text": "understand that something's happening but we want specific rules aligned with specific tactics and techniques",
    "start": "1431659",
    "end": "1438200"
  },
  {
    "text": "so with that no if we go back and add the grip for potentially messages python",
    "start": "1438200",
    "end": "1443240"
  },
  {
    "text": "script we want to create a custom real scenario so we've added some extra views here",
    "start": "1443240",
    "end": "1449659"
  },
  {
    "text": "um one way of looking at it here is if I open vim and go in Terminal 2 so I just",
    "start": "1449659",
    "end": "1454820"
  },
  {
    "text": "run VI miter rules to yaml the file is written but if I go I and we you know",
    "start": "1454820",
    "end": "1461780"
  },
  {
    "text": "insert I can paste this rule that was already pre-written paste it now you can",
    "start": "1461780",
    "end": "1467179"
  },
  {
    "text": "see this is a little bit more complex it's looking for things like the python so come if there's a process command",
    "start": "1467179",
    "end": "1472280"
  },
  {
    "text": "line executed and it contains python with the dash C we're also looking for if there's Python 3 run as opposed to",
    "start": "1472280",
    "end": "1479059"
  },
  {
    "text": "the older version of python or python 2 you know there might be yeah again the attacker or adversary might use specific",
    "start": "1479059",
    "end": "1484940"
  },
  {
    "text": "versions of python so it's good to have those examples so it contains those strings and it also has other contexts",
    "start": "1484940",
    "end": "1492500"
  },
  {
    "text": "like it contains echo or base64 is included in there somewhere or decode",
    "start": "1492500",
    "end": "1497840"
  },
  {
    "text": "and import so we're putting a bunch of different conditionals set and we're saying if these commands are executed",
    "start": "1497840",
    "end": "1504020"
  },
  {
    "text": "then we're pretty sure it's something to do with um with python but under description we're adding far more",
    "start": "1504020",
    "end": "1509240"
  },
  {
    "text": "context around what are these individual operations so things like we want to detect base64 encoded Python scripts",
    "start": "1509240",
    "end": "1515900"
  },
  {
    "text": "that are execute on command line so notice how it's a python script and you know you can say and or operator so it's",
    "start": "1515900",
    "end": "1522559"
  },
  {
    "text": "Boolean logic but if it's and it contains the base64 command line",
    "start": "1522559",
    "end": "1527900"
  },
  {
    "text": "then we know it's a v64 encoded specifically python script and then again why are we doing this well as we",
    "start": "1527900",
    "end": "1534799"
  },
  {
    "text": "found out when we read the miter attack documentation base64 can be used to encode binary data for transfer for",
    "start": "1534799",
    "end": "1540919"
  },
  {
    "text": "ASCII only command lines and the attackers can leverage this technique in various exploits to load Shell Code and",
    "start": "1540919",
    "end": "1546380"
  },
  {
    "text": "of course the outcome is to evade detection so this would be a good example of uh date exfiltration or sorry",
    "start": "1546380",
    "end": "1552559"
  },
  {
    "text": "datavation so in this case we align the tag for ta 0 0 5 for defensivation but",
    "start": "1552559",
    "end": "1559760"
  },
  {
    "text": "keep in mind the specific test we're doing was the t1037 so again there can",
    "start": "1559760",
    "end": "1564860"
  },
  {
    "text": "be overlap between obfuscation of files and information as well as defensivation with specific tests that you might be",
    "start": "1564860",
    "end": "1572059"
  },
  {
    "text": "executing so all of this as we mentioned earlier is from the same data source which system calls so with all that in mind",
    "start": "1572059",
    "end": "1578960"
  },
  {
    "text": "what I'm going to do is I'll save the file now we know the file saved because",
    "start": "1578960",
    "end": "1584120"
  },
  {
    "text": "if we go to file directory and you go under root and you see moderate rules you can see the file has now been saved",
    "start": "1584120",
    "end": "1589520"
  },
  {
    "text": "so what we want to do is we want to deploy the new change",
    "start": "1589520",
    "end": "1595100"
  },
  {
    "text": "so I'm using Helm again but unlike the previous time I used hell we're saying Helm upgrade so we're making a change uh",
    "start": "1595100",
    "end": "1602779"
  },
  {
    "text": "ignore the formatting stuff that shouldn't be a problem we're making a change again in the network namespace",
    "start": "1602779",
    "end": "1608299"
  },
  {
    "text": "Falco uh and make sure that I'm on the same version that I was using earlier which 3.3.0 I'm reusing values I had",
    "start": "1608299",
    "end": "1615320"
  },
  {
    "text": "earlier so there's no unusual change but all we're doing is we're pointing in that we're taking context from the new",
    "start": "1615320",
    "end": "1620960"
  },
  {
    "text": "file which is smarter rules.yaml which was this file so we say custom rules in",
    "start": "1620960",
    "end": "1626840"
  },
  {
    "text": "the customer rules context where we have this file called miterrux.yaml and again",
    "start": "1626840",
    "end": "1631880"
  },
  {
    "text": "I've only added one single rule here now one thing that's worth pointing out as well is that we've added a lot of output",
    "start": "1631880",
    "end": "1638480"
  },
  {
    "text": "context here so for potentially malicious python script we want to know process IDs we want to know event types",
    "start": "1638480",
    "end": "1645740"
  },
  {
    "text": "we want to know uh the image that was executing it container if that is running from as",
    "start": "1645740",
    "end": "1651860"
  },
  {
    "text": "much context as possible so we've added all of those arbitrary points into our output so that when we trigger the",
    "start": "1651860",
    "end": "1657620"
  },
  {
    "text": "section in a while uh we'll get that now I don't want to break this view because we'll be coming back to this in a second",
    "start": "1657620",
    "end": "1663740"
  },
  {
    "text": "so what we want to do is delete the part by deleting the part it will essentially",
    "start": "1663740",
    "end": "1670960"
  },
  {
    "text": "forcefully remove anything that was potentially cached to do with the previous file code deployment and then",
    "start": "1670960",
    "end": "1676940"
  },
  {
    "text": "when we get pods and check for any changes on Falco you know we'll get the cleanest version that's just to avoid",
    "start": "1676940",
    "end": "1683059"
  },
  {
    "text": "any possible mistake so you can see the status change is going to go through is first has to terminate the Pod that we",
    "start": "1683059",
    "end": "1689900"
  },
  {
    "text": "just ran the qctl delete pod command but because kubernetes and containers or",
    "start": "1689900",
    "end": "1695480"
  },
  {
    "text": "they're ephemeral they're designed to die and recreate we don't need to do anything else it should go through the terminating process and then start going",
    "start": "1695480",
    "end": "1702440"
  },
  {
    "text": "through container creating uh running one out of one or one out of two and then two out of two so you can see the",
    "start": "1702440",
    "end": "1708020"
  },
  {
    "text": "process of pending initializing then part initializing running and give it",
    "start": "1708020",
    "end": "1713240"
  },
  {
    "text": "one more second and then we see two attitude running so actual upgrades of file core are pretty pain-free you know",
    "start": "1713240",
    "end": "1719659"
  },
  {
    "text": "we just we point to a file or make the changes we run the helm upgrade command and just for make sure there's no",
    "start": "1719659",
    "end": "1726679"
  },
  {
    "text": "potential issues we do the delete pod to make sure there was nothing cached associated with that so I'm pretty",
    "start": "1726679",
    "end": "1732200"
  },
  {
    "text": "confident Falco is running at this point so we can go back to Atomic red if we notice that the command disappears it's",
    "start": "1732200",
    "end": "1738919"
  },
  {
    "text": "simple just hit up and then run the command again so we're looking for potential malicious python script and",
    "start": "1738919",
    "end": "1744080"
  },
  {
    "text": "with that if I run my test one more time um it didn't run that time and I'm",
    "start": "1744080",
    "end": "1749360"
  },
  {
    "text": "wondering is it because Falco's not two out of okay it is two out of two ready now",
    "start": "1749360",
    "end": "1754880"
  },
  {
    "text": "so if we look for that command one last time",
    "start": "1754880",
    "end": "1760640"
  },
  {
    "text": "and then I run my test which oh that was the show details so if I execute the test this time and there we go now",
    "start": "1760640",
    "end": "1768020"
  },
  {
    "text": "another thing to point out here is you might be wondering uh well we got two detections why did that happen",
    "start": "1768020",
    "end": "1773480"
  },
  {
    "text": "the reason was we look to remember anything that was base64 and we also",
    "start": "1773480",
    "end": "1778640"
  },
  {
    "text": "looked for if it was a python script now from the outputs we know clearly that the first test was looking for the test",
    "start": "1778640",
    "end": "1785179"
  },
  {
    "text": "against RC common and then the other one was RC local yeah there's two test scenaries RC common RC local so when we",
    "start": "1785179",
    "end": "1792500"
  },
  {
    "text": "look at the output we can see that the file name in this case was the first test was against RC common and then the",
    "start": "1792500",
    "end": "1799640"
  },
  {
    "text": "second file name output test was against RC local so in that case the context",
    "start": "1799640",
    "end": "1804860"
  },
  {
    "text": "matched in two different scenarios so two rules were triggered and again just make sure there's no mistake here you",
    "start": "1804860",
    "end": "1810799"
  },
  {
    "text": "run it one more time and you see that there's two more alerts that were triggered so hopefully this session was",
    "start": "1810799",
    "end": "1817279"
  },
  {
    "text": "a great way to understand how Falco's deployed how to use Falco how to use",
    "start": "1817279",
    "end": "1822860"
  },
  {
    "text": "Atomic red in a real world test scenario better understanding miter attack what the framework exists for and why and",
    "start": "1822860",
    "end": "1830000"
  },
  {
    "text": "just being able to upgrade Falco creating your own customer rules and extending coverage of the motor attack",
    "start": "1830000",
    "end": "1836539"
  },
  {
    "text": "framework and with that if there's any questions that anyone has after seeing",
    "start": "1836539",
    "end": "1841640"
  },
  {
    "text": "the session check out falco.org for more information",
    "start": "1841640",
    "end": "1846100"
  }
]