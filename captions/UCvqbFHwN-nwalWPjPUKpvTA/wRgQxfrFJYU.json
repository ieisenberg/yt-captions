[
  {
    "start": "0",
    "end": "64000"
  },
  {
    "text": "hi my name is delorean johnson oh hello and i'm nick cope",
    "start": "80",
    "end": "8320"
  },
  {
    "text": "and we will be talking about outgrowing tearborne i am a software engineer at guidewire",
    "start": "8320",
    "end": "16640"
  },
  {
    "text": "and i work on cloud infrastructure specifically in persistence type resources",
    "start": "16640",
    "end": "23680"
  },
  {
    "text": "guidewire is a platform as a service company that caters to the property and",
    "start": "23680",
    "end": "30960"
  },
  {
    "text": "casualty insurance industry and we're currently beginning our migration into cross-play",
    "start": "30960",
    "end": "38640"
  },
  {
    "text": "so speaking of cross-plane uh again i'm nick i'm a i'm a super architect uh software engineer uh working at",
    "start": "38640",
    "end": "45559"
  },
  {
    "text": "upbound.com i am on the crossband steering committee and i've been working on crossband since shortly and",
    "start": "45559",
    "end": "51199"
  },
  {
    "text": "after it was open source since the founders open sourced it about two years ago uh before working on crossplay and i did",
    "start": "51199",
    "end": "57600"
  },
  {
    "text": "a lot of work with terraform so i'm a big fan of both",
    "start": "57600",
    "end": "62320"
  },
  {
    "start": "64000",
    "end": "64000"
  },
  {
    "text": "okay so guidewire but prior to becoming a platform as a",
    "start": "64239",
    "end": "70799"
  },
  {
    "text": "service company we provided on-premise solutions to our customers our development process used to involve",
    "start": "70799",
    "end": "77600"
  },
  {
    "text": "developing complex software installations at our customers offices",
    "start": "77600",
    "end": "84400"
  },
  {
    "text": "so the cost and effort of doing so um of installing these snowflake on-site",
    "start": "84640",
    "end": "91520"
  },
  {
    "text": "um installations is not very cost-effective it doesn't scale very well and it takes",
    "start": "91520",
    "end": "98159"
  },
  {
    "text": "a long time to upgrade because the installation will take a two year it's a two year process to get",
    "start": "98159",
    "end": "104079"
  },
  {
    "text": "you know any new features in there so um we decided to make a shift towards",
    "start": "104079",
    "end": "109520"
  },
  {
    "text": "the cloud so given guidewear's long extensive history in property and casualty we were set in",
    "start": "109520",
    "end": "114880"
  },
  {
    "text": "a better position to try to unify um try to put our current customers on a platform",
    "start": "114880",
    "end": "121680"
  },
  {
    "text": "where the ecosystem can better serve our customers",
    "start": "121680",
    "end": "127040"
  },
  {
    "text": "but um to that point um we used terraform to build our platform um",
    "start": "127040",
    "end": "133440"
  },
  {
    "text": "it was it aided us in our shift by being you know basically kind of",
    "start": "133440",
    "end": "139840"
  },
  {
    "text": "you know just a good intermediate step into managing cloud resources um the",
    "start": "139840",
    "end": "147360"
  },
  {
    "text": "the implementation itself is similar to json which a lot of",
    "start": "147360",
    "end": "152800"
  },
  {
    "text": "developers are already used to and so we were able to leverage that type of",
    "start": "152800",
    "end": "158400"
  },
  {
    "text": "language to manage avs resources but um as time went by our platform is",
    "start": "158400",
    "end": "165920"
  },
  {
    "text": "you know growing and getting large and now we're maintaining you know about 73 000 lines of hcl",
    "start": "165920",
    "end": "173360"
  },
  {
    "text": "so now we're starting to um we're starting to feel some of the limitations of terraform",
    "start": "173360",
    "end": "178959"
  },
  {
    "text": "we've uh we really use the heck out of it",
    "start": "178959",
    "end": "184480"
  },
  {
    "text": "so one limitation that we've come to encounter um is that one thing i didn't",
    "start": "184480",
    "end": "191680"
  },
  {
    "text": "uh forgot to mention was the fact that our infrastructure is basically consisting",
    "start": "191680",
    "end": "198159"
  },
  {
    "text": "of three layers we have our account level configuration which is one module we have our infrastructure mob uh layer",
    "start": "198159",
    "end": "204720"
  },
  {
    "text": "which is a another module that um is built on the resources that the account level",
    "start": "204720",
    "end": "212879"
  },
  {
    "text": "module provisions and then we have our more customer facing module our tenant module that uses those",
    "start": "212879",
    "end": "220400"
  },
  {
    "text": "res those two previous layers to um provision resources that the user",
    "start": "220400",
    "end": "227519"
  },
  {
    "text": "did our customers can use to develop and customize our products",
    "start": "227519",
    "end": "235200"
  },
  {
    "start": "236000",
    "end": "236000"
  },
  {
    "text": "so having said that one limited limitation is drift so",
    "start": "236159",
    "end": "242239"
  },
  {
    "text": "um terraform defines our resources uh in a you know pretty much in a file a",
    "start": "242239",
    "end": "250480"
  },
  {
    "text": "you know you have one your terraform file and you have your terraform state so um and they're stored either",
    "start": "250480",
    "end": "256959"
  },
  {
    "text": "well the terraform state is stored in a remote um bucket",
    "start": "256959",
    "end": "263520"
  },
  {
    "text": "and the terraform um source of truth what defines our actual defines what resources we",
    "start": "263520",
    "end": "271120"
  },
  {
    "text": "need for a given module is stored in git so unfortunately there's no way for",
    "start": "271120",
    "end": "276880"
  },
  {
    "text": "these two pieces of information to be constantly and up to date with what is you know",
    "start": "276880",
    "end": "282560"
  },
  {
    "text": "actually out there so unfortunately things happen like automatter up arnold minor version upgrades or",
    "start": "282560",
    "end": "289120"
  },
  {
    "text": "somebody mistakenly goes in and into the console into the actual um",
    "start": "289120",
    "end": "294479"
  },
  {
    "text": "provider console and changes something there's no way for terraform to know until you know somebody comes along and tries",
    "start": "294479",
    "end": "300320"
  },
  {
    "text": "to introduce another change so you have to actively go in and manage and make sure and be aware when you",
    "start": "300320",
    "end": "306080"
  },
  {
    "text": "introduce a change you have to be aware of the plan and as we mentioned earlier our",
    "start": "306080",
    "end": "311280"
  },
  {
    "text": "whole infrastructure is based on three terraform modules that consist of hundreds of",
    "start": "311280",
    "end": "316720"
  },
  {
    "text": "resources and several modules so let's say you want to change a tag on one resource",
    "start": "316720",
    "end": "322320"
  },
  {
    "text": "if you were to do a terraform plan or an apply you have to be you have to take into",
    "start": "322320",
    "end": "327360"
  },
  {
    "text": "account that there might be drift and your plan you have to make sure that your plan is not um",
    "start": "327360",
    "end": "334479"
  },
  {
    "text": "either it's not basically worst case destroying another resource that you don't need to do so if your plan says hey this resource",
    "start": "334479",
    "end": "342000"
  },
  {
    "text": "is going to be destroyed or replaced because somehow this one you know",
    "start": "342000",
    "end": "348080"
  },
  {
    "text": "um field can it has an update to something that will that will basically you know it will",
    "start": "348080",
    "end": "354720"
  },
  {
    "text": "force terraform to to destroy and replace it because it doesn't match the state so anyways",
    "start": "354720",
    "end": "363120"
  },
  {
    "start": "363000",
    "end": "363000"
  },
  {
    "text": "so crossplane approaches uh managing infrastructure similarly to",
    "start": "364840",
    "end": "370800"
  },
  {
    "text": "terraform you know they both use uh declarative configuration um but a big difference",
    "start": "370800",
    "end": "376240"
  },
  {
    "text": "that crossblind has is that it is a always-on control plane so whereas the open source",
    "start": "376240",
    "end": "381919"
  },
  {
    "text": "version of terraform at least is a uh is a command line tool that's uh invoked on demand i know",
    "start": "381919",
    "end": "388639"
  },
  {
    "text": "guidewire uh uses it uh via ci cd a lot um but you know you can away that you can also invoke it from developer",
    "start": "388639",
    "end": "394160"
  },
  {
    "text": "laptops and like delorean was saying part of the problem is terraform doesn't know to go",
    "start": "394160",
    "end": "400639"
  },
  {
    "text": "check the world unless you ask it to uh whether something has changed so this can lead to surprises you know",
    "start": "400639",
    "end": "407840"
  },
  {
    "text": "you go and run terraform to go and update your caches and it's actually saying yeah i'm gonna update your caches but also i notice your databases need",
    "start": "407840",
    "end": "413440"
  },
  {
    "text": "updating as well and you weren't expecting that crossplane kind of um approaches this",
    "start": "413440",
    "end": "419440"
  },
  {
    "text": "uh by by leaning in to constant reconciliation so instead of uh",
    "start": "419440",
    "end": "425759"
  },
  {
    "text": "checking the world whenever someone tells crossfit hey um you know i want to change something",
    "start": "425759",
    "end": "431520"
  },
  {
    "text": "there's sort of two levels with crossblade first you tell you question i want to change something that crosstalk saves that as its desired state and then",
    "start": "431520",
    "end": "436880"
  },
  {
    "text": "it just sits there forever applying that desired state so you need to be a little bit brave because it takes away the kind of the",
    "start": "436880",
    "end": "442479"
  },
  {
    "text": "check that you get with terraform where terraform's like hey i'm gonna go change this here's what i would change is this okay",
    "start": "442479",
    "end": "447599"
  },
  {
    "text": "cosplay and you say hey go change this and then crossband will just always be running every 30 to 60 seconds",
    "start": "447599",
    "end": "452639"
  },
  {
    "text": "correcting uh any any problems it finds in the world so if uh for example someone goes into",
    "start": "452639",
    "end": "457919"
  },
  {
    "text": "your aws console and um uh changes a database from 20 gig to 30 gig of",
    "start": "457919",
    "end": "464160"
  },
  {
    "text": "storage cosplaying will just change it back to 20k if that's what the uh the source of truth is or if you've trusted cosplaying",
    "start": "464160",
    "end": "469840"
  },
  {
    "text": "to manage that infrastructure so it kind of forces you to uh buy into crossplay",
    "start": "469840",
    "end": "474879"
  },
  {
    "text": "you can't really fight crossfade um a nice thing about crossplane as well is that it doesn't have this big graph",
    "start": "474879",
    "end": "481199"
  },
  {
    "text": "of um of the world that the terraform computes to do sort of ordered applications and things like that",
    "start": "481199",
    "end": "487440"
  },
  {
    "text": "because crossplane is always running it can be a little bit less tightly coupled it can be eventually consistent",
    "start": "487440",
    "end": "493599"
  },
  {
    "text": "so this means if you say hey cosplay and go update this database hey it is possible to just update that database regardless of what your caches",
    "start": "493599",
    "end": "500080"
  },
  {
    "text": "are doing you just be like just update this one thing don't touch the others um b uh",
    "start": "500080",
    "end": "507360"
  },
  {
    "text": "if multiple things do need to change they can all just kind of change when they're ready sort of thing so",
    "start": "507360",
    "end": "516640"
  },
  {
    "text": "crossplane can effectively go and apply changes to your database and if that change is",
    "start": "516959",
    "end": "522959"
  },
  {
    "text": "blocked or changed to your cache or something like that um when your cache is ready cosplaying",
    "start": "522959",
    "end": "528080"
  },
  {
    "text": "just becomes ready",
    "start": "528080",
    "end": "534800"
  },
  {
    "start": "534000",
    "end": "534000"
  },
  {
    "text": "another um limitation that we have experienced is versioning so again i'm going back to",
    "start": "534800",
    "end": "541920"
  },
  {
    "text": "that to the beginning our whole infrastructure revolves around basically three",
    "start": "541920",
    "end": "548320"
  },
  {
    "text": "terraform modules so within those different modules um",
    "start": "548320",
    "end": "554399"
  },
  {
    "text": "there are hundreds of resources again several modules and they pretty much all have to be",
    "start": "554399",
    "end": "560320"
  },
  {
    "text": "within the same range of the terraform version and um aws",
    "start": "560320",
    "end": "565760"
  },
  {
    "text": "provider version in our case i guess the you know aws provider version um so if",
    "start": "565760",
    "end": "573839"
  },
  {
    "text": "again if one layer needs to basically be",
    "start": "573839",
    "end": "580399"
  },
  {
    "text": "applied they all every resource every model which is controlled by different teams",
    "start": "580399",
    "end": "586800"
  },
  {
    "text": "especially in the tenant level they you know we have to they all have to",
    "start": "586800",
    "end": "593519"
  },
  {
    "text": "basically be on the same version so there was actually a case recently where my team wanted to introduce a new",
    "start": "593519",
    "end": "600640"
  },
  {
    "text": "terraform feature it was um between uh it was a new feature in terraform 13 or 0.13",
    "start": "600640",
    "end": "607839"
  },
  {
    "text": "would allow a count on um terraform modules so because we're part",
    "start": "607839",
    "end": "614240"
  },
  {
    "text": "of a single module from the perspective of our platform",
    "start": "614240",
    "end": "619519"
  },
  {
    "text": "in order to introduce that module we had to basically go through every module talk to pretty",
    "start": "619519",
    "end": "625440"
  },
  {
    "text": "much every team that manages any resource and change their repo to get this one",
    "start": "625440",
    "end": "631200"
  },
  {
    "text": "change out there for for us so that was it was an experience i mean the bright",
    "start": "631200",
    "end": "637360"
  },
  {
    "text": "side is we got to talk to a lot of people but the downside it took a month to introduce this to our platform",
    "start": "637360",
    "end": "646800"
  },
  {
    "start": "645000",
    "end": "645000"
  },
  {
    "text": "so like like terraform crossband users providers we have a core of crossplane that um effectively has a",
    "start": "646800",
    "end": "652880"
  },
  {
    "text": "package manager that delivers providers that manages what providers are installed as well as",
    "start": "652880",
    "end": "658640"
  },
  {
    "text": "managing configuration for providers so the you know the client the",
    "start": "658640",
    "end": "664480"
  },
  {
    "text": "declarative configuration of what you want to be running uh in the world um",
    "start": "664480",
    "end": "671600"
  },
  {
    "text": "so providers are versioned in cross plane as well and honestly you can hit um some some problems with uh with",
    "start": "671600",
    "end": "677360"
  },
  {
    "text": "virgin you do need to be careful you could say for instance some providers can declare what version of uh",
    "start": "677360",
    "end": "682399"
  },
  {
    "text": "cross plane they're compatible with and it could be that you hit you want to install a new version provider sql to manage your sql databases but um",
    "start": "682399",
    "end": "689760"
  },
  {
    "text": "that needs a particular cross-plane version and uh you've got provider aws that needs a different incompatible version",
    "start": "689760",
    "end": "695360"
  },
  {
    "text": "so it's possible to have version inconsistency in cosplay 2 or your compatibilities but one thing that makes the problem a",
    "start": "695360",
    "end": "702720"
  },
  {
    "text": "lot simpler in crossplane is that because it is a service because it's a control plane that's just off",
    "start": "702720",
    "end": "708079"
  },
  {
    "text": "running somewhere that doesn't you know need to have providers installed on different people's laptops and",
    "start": "708079",
    "end": "713519"
  },
  {
    "text": "different providers configured for different you know uh modules of of uh",
    "start": "713519",
    "end": "720720"
  },
  {
    "text": "of terraform code in that example uh you have a centralized place that you can go and upgrade your terraform",
    "start": "720720",
    "end": "726959"
  },
  {
    "text": "sorry your cross plating providers so you could just go to the cross play and control plane and say okay i'd like to install provide aws",
    "start": "726959",
    "end": "733600"
  },
  {
    "text": "and as long as it doesn't make breaking api changes everyone is now just running the new version of provider aws",
    "start": "733600",
    "end": "740399"
  },
  {
    "text": "so it sort of takes some takes the problem like what version of software is running aware and boils it down to like",
    "start": "740399",
    "end": "746480"
  },
  {
    "text": "does a new version make breaking api changes and crossplane uh takes pretty seriously",
    "start": "746480",
    "end": "752240"
  },
  {
    "text": "following the kubernetes strict versioning policies uh so in kubernetes resource versions",
    "start": "752240",
    "end": "760480"
  },
  {
    "text": "everything v1 beta 1 or above has a pretty strict no breaking changes policy so theoretically in dolorean's case",
    "start": "760480",
    "end": "766959"
  },
  {
    "text": "where one team wanted a uh a new feature uh you should be able",
    "start": "766959",
    "end": "772399"
  },
  {
    "text": "to upgrade to the new version of cosplay provider aws in just one place in your cross main control plane",
    "start": "772399",
    "end": "778480"
  },
  {
    "text": "and then everyone should get access to that new feature and everyone who doesn't want to use that new feature everything should just",
    "start": "778480",
    "end": "784959"
  },
  {
    "text": "have same defaults for them that's how we sort of design our upgrade story the one",
    "start": "784959",
    "end": "790399"
  },
  {
    "text": "exception to this is our alpha apis we do have our apis that are rated v1 alpha one two three four et",
    "start": "790399",
    "end": "797839"
  },
  {
    "text": "cetera those kind of whole bets are off because we're still experimenting with the features there so we think we might actually put those behind a",
    "start": "797839",
    "end": "804079"
  },
  {
    "text": "feature flag or something soon so that you know just really shows people these are the ones that we don't provide that contract for",
    "start": "804079",
    "end": "810480"
  },
  {
    "text": "there if you want to try them but be aware that if you upgrade they might break but for everything else all of our v1",
    "start": "810480",
    "end": "816959"
  },
  {
    "text": "beta1 and our core v1 apis it's a it's a really safe upgrade path",
    "start": "816959",
    "end": "823360"
  },
  {
    "start": "825000",
    "end": "825000"
  },
  {
    "text": "okay um one uh another excuse me another access",
    "start": "825440",
    "end": "831120"
  },
  {
    "text": "control um another limitation is access control um again going back to uh",
    "start": "831120",
    "end": "837920"
  },
  {
    "text": "our you know the beginning when i said that we our infrastructure is through different modules lots of resources a lot lots of sub",
    "start": "837920",
    "end": "845760"
  },
  {
    "text": "modules in those layers we actually provision i am roles for the",
    "start": "845760",
    "end": "854240"
  },
  {
    "text": "next layer so for one layer we have for the account level layer we have the",
    "start": "854240",
    "end": "860079"
  },
  {
    "text": "we provision the admin iam roles that will be used in the",
    "start": "860079",
    "end": "865760"
  },
  {
    "text": "infrastructure layer where we provision the resources and then the next level",
    "start": "865760",
    "end": "871279"
  },
  {
    "text": "provides the imm roles for the tenant level and whatever they whatever that level",
    "start": "871279",
    "end": "876959"
  },
  {
    "text": "needs to provision whatever resources they have so it is essentially",
    "start": "876959",
    "end": "882880"
  },
  {
    "text": "i am roll food we rely heavily on aws to",
    "start": "882880",
    "end": "888079"
  },
  {
    "text": "to configure resources within our cluster terraform has no concept of access",
    "start": "888079",
    "end": "894320"
  },
  {
    "text": "control so we have to basically rely on the cloud provider to uh and cloud provider in combination with",
    "start": "894320",
    "end": "902320"
  },
  {
    "text": "you know clever naming conventions to get what we want down you know our walled garden um",
    "start": "902320",
    "end": "909440"
  },
  {
    "text": "as one of my colleagues put it for our developers so it's",
    "start": "909440",
    "end": "916480"
  },
  {
    "text": "so yeah so it kind of uh just undermines self-service",
    "start": "917680",
    "end": "922720"
  },
  {
    "text": "and it's not a lot of people so our admins have to be aware of a lot of",
    "start": "922720",
    "end": "927839"
  },
  {
    "text": "different things so if a user wants to do something they have to go back and refer to us to",
    "start": "927839",
    "end": "933680"
  },
  {
    "text": "or to ask us for access instead of having it more of a more",
    "start": "933680",
    "end": "938800"
  },
  {
    "text": "natural configuration so there's a lot of um i guess tribal knowledge amongst admins",
    "start": "938800",
    "end": "945120"
  },
  {
    "text": "a bunch of a few teams to um get this going so it's so instead of working on new features to",
    "start": "945120",
    "end": "951680"
  },
  {
    "text": "expand the platform we're having to to to worry about a lot um",
    "start": "951680",
    "end": "957600"
  },
  {
    "text": "of special configuration to accomplish access control",
    "start": "957600",
    "end": "964240"
  },
  {
    "start": "963000",
    "end": "963000"
  },
  {
    "text": "so i think the the fundamental nice thing about access control and cross plane um there's some technical details that sort of touch on but but sort of from a",
    "start": "966160",
    "end": "974320"
  },
  {
    "text": "fundamentally the nice thing is that in cross-plane access access control is framed around your",
    "start": "974320",
    "end": "979519"
  },
  {
    "text": "business's concepts not necessarily your cloud providers not aws concepts so i think i",
    "start": "979519",
    "end": "984959"
  },
  {
    "text": "touched on briefly before that you can deliver these configurations to crossblade uh and what these configurations include",
    "start": "984959",
    "end": "992079"
  },
  {
    "text": "are what we call compositions and composite resources which are effectively your own custom",
    "start": "992079",
    "end": "998399"
  },
  {
    "text": "apis so in guidewire's case instead of saying um a team has access to aws concepts like",
    "start": "998399",
    "end": "1005759"
  },
  {
    "text": "s3 buckets and maybe i think s3 bucket website policies or all the various things you can do with the bucket at that api",
    "start": "1005759",
    "end": "1011759"
  },
  {
    "text": "level um you could just come up with an opinionated guidewire abstraction that might be like you know a guidewire",
    "start": "1011759",
    "end": "1018000"
  },
  {
    "text": "storage or a guideline bucket or a guideline database it's actually made up of like multiple different things in the backend multiple different aws",
    "start": "1018000",
    "end": "1023680"
  },
  {
    "text": "things and because this is all done in the kubernetes api you can use kubernetes rbac to restrict this",
    "start": "1023680",
    "end": "1031038"
  },
  {
    "text": "so crossplane actually has user's credentials to talk to aws obviously you need to give it credentials somehow",
    "start": "1031039",
    "end": "1036959"
  },
  {
    "text": "and it can load those from coop to iam or it can like load them from irsa uh can you just give",
    "start": "1036959",
    "end": "1042798"
  },
  {
    "text": "it a config file with uh sorry a secret i should say rather with your um your aws account keys and you",
    "start": "1042799",
    "end": "1050160"
  },
  {
    "text": "can even have multiple of those providers so you can say some of these resources you know this team are gonna go use this account this team's gonna",
    "start": "1050160",
    "end": "1055679"
  },
  {
    "text": "use that account et cetera et cetera but it's kind of layered you grant cosplaying",
    "start": "1055679",
    "end": "1061360"
  },
  {
    "text": "access to act on your behalf on aws or any cloud any api that you call it",
    "start": "1061360",
    "end": "1066799"
  },
  {
    "text": "and then you use rvac to restrict what people can ask cosplay to do uh on their behalf so it allows you to",
    "start": "1066799",
    "end": "1073520"
  },
  {
    "text": "frame uh access control along the lines of sort of can this person create a guidewire",
    "start": "1073520",
    "end": "1080000"
  },
  {
    "text": "bucket in this namespace and doesn't rely on managing a ton of uh",
    "start": "1080000",
    "end": "1085360"
  },
  {
    "text": "hypergranular aws access controls behind the scenes something if you trust crossplane you can limit the rights the crossland",
    "start": "1085360",
    "end": "1091760"
  },
  {
    "text": "has if you only ever want to use do buckets you can just give cosplay access to only two buckets so you can be",
    "start": "1091760",
    "end": "1097120"
  },
  {
    "text": "as restrictive as you want but you sort of it shifts the access control",
    "start": "1097120",
    "end": "1102160"
  },
  {
    "text": "up a layer into the kubernetes api where you're modeling your business's needs not aws api",
    "start": "1102160",
    "end": "1110080"
  },
  {
    "start": "1113000",
    "end": "1113000"
  },
  {
    "text": "hey um again gonna keep recapping our uh structure so uh",
    "start": "1113360",
    "end": "1121039"
  },
  {
    "text": "basically uh our our infrastructure the layers are very well one the bottom",
    "start": "1121039",
    "end": "1128240"
  },
  {
    "text": "layer is the okay so the top layer depends on the next one and then there's",
    "start": "1128240",
    "end": "1133280"
  },
  {
    "text": "the next one depends on the bottom layer so tenant relies on the infrastructure which relies on the account level so",
    "start": "1133280",
    "end": "1140240"
  },
  {
    "text": "there is no way within terraform itself for one for the tenant level",
    "start": "1140240",
    "end": "1146799"
  },
  {
    "text": "to access what we've already provisioned for the infrastructure so",
    "start": "1146799",
    "end": "1154080"
  },
  {
    "text": "um they're just configured in isolation so even though the infrastructure level",
    "start": "1154080",
    "end": "1159600"
  },
  {
    "text": "is necessary for the tenant to sit on top of there's no way to actually access these",
    "start": "1159600",
    "end": "1165919"
  },
  {
    "text": "resources or kind of write configuration where we can dynamically",
    "start": "1165919",
    "end": "1171280"
  },
  {
    "text": "uh i guess use it to refer to that lower level so we have to",
    "start": "1171280",
    "end": "1177679"
  },
  {
    "text": "either rely on you know already knowledge that somebody knows to name this certain",
    "start": "1177679",
    "end": "1183760"
  },
  {
    "text": "resource this way like our like for example our back-end state file",
    "start": "1183760",
    "end": "1189760"
  },
  {
    "text": "or state bucket that stores our terraform state file for the tenant has been provisioned by the",
    "start": "1189760",
    "end": "1194880"
  },
  {
    "text": "infrastructure level so we already we follow a naming convention and we just hard code the whole name it'd be nice",
    "start": "1194880",
    "end": "1200559"
  },
  {
    "text": "if there's a way that somehow the layer could just discover it and we don't have to",
    "start": "1200559",
    "end": "1206080"
  },
  {
    "text": "worry about it in the configuration but um right now we have to do that",
    "start": "1206080",
    "end": "1211600"
  },
  {
    "text": "so there is ways that terraform allows you to discover resources that exist like we do um",
    "start": "1211600",
    "end": "1219600"
  },
  {
    "text": "have we do have to basically check to see if the cluster is there but",
    "start": "1219600",
    "end": "1225200"
  },
  {
    "text": "it's again it's just something that's hitting kubernetes directly or um there's uh",
    "start": "1225200",
    "end": "1233280"
  },
  {
    "text": "give the terraform does give you the ability to run a script that you know make an api call but again",
    "start": "1233280",
    "end": "1239520"
  },
  {
    "text": "you're it's still directly hitting aws but you know we provisioned",
    "start": "1239520",
    "end": "1244640"
  },
  {
    "text": "our resources via terraform there should be a way to kind of query within that within the tool",
    "start": "1244640",
    "end": "1252320"
  },
  {
    "text": "to get this get these resources",
    "start": "1252320",
    "end": "1256480"
  },
  {
    "start": "1257000",
    "end": "1257000"
  },
  {
    "text": "yes i think the advantage that the crossplane has here is is sort of the interoperability that comes from",
    "start": "1258640",
    "end": "1264240"
  },
  {
    "text": "being a control plane with a rest api so you know in terraform you could theoretically uh you know you can run terraform and",
    "start": "1264240",
    "end": "1270400"
  },
  {
    "text": "maybe write some output sort of thing but you end up having terms of rap terraform in a script sort of thing or",
    "start": "1270400",
    "end": "1275600"
  },
  {
    "text": "start using complex shared state relationships and things like that to to refer to other modules if that's",
    "start": "1275600",
    "end": "1281760"
  },
  {
    "text": "if that's even possible in your use case um whereas with crossplane um everything",
    "start": "1281760",
    "end": "1287440"
  },
  {
    "text": "is just an object and a rest api so at the cross plane layer itself we have uh we have sort of ways of",
    "start": "1287440",
    "end": "1294320"
  },
  {
    "text": "referring uh two things um so when you're composing infrastructure",
    "start": "1294320",
    "end": "1300159"
  },
  {
    "text": "together sort of thing you can you can basically uh refer to",
    "start": "1300159",
    "end": "1305200"
  },
  {
    "text": "uh you can have the infrastructure you compose can potentially like reference other bits of infrastructure and say hey you should go be in this bbc i just tell",
    "start": "1305200",
    "end": "1311760"
  },
  {
    "text": "you to go point to that vpc that's also modeled with crossplane and it'll it'll kind of figure it out we built that at the uh the managed",
    "start": "1311760",
    "end": "1318000"
  },
  {
    "text": "resource layer um we also support basically many uh maybe maybe most of",
    "start": "1318000",
    "end": "1326400"
  },
  {
    "text": "our crossplane resources um are able to write some or all of their interesting connection details to",
    "start": "1326400",
    "end": "1331919"
  },
  {
    "text": "a secret to make it extra easy to compose to consume i mean again everything's just a rest api so if",
    "start": "1331919",
    "end": "1338080"
  },
  {
    "text": "you can write like a python client of a rest api something you can pull out whatever you need to get from from crossplay",
    "start": "1338080",
    "end": "1343520"
  },
  {
    "text": "but uh if you're a pod or something like that and you want to make it like really easy to get like the connection details",
    "start": "1343520",
    "end": "1349120"
  },
  {
    "text": "for a database um either because you want to consume it from an application or because you want to like build other infrastructure on",
    "start": "1349120",
    "end": "1354240"
  },
  {
    "text": "top of it um then you could say hey we're gonna write this data to a secret and then something else you know pods can",
    "start": "1354240",
    "end": "1360240"
  },
  {
    "text": "have built-in machinery to load up environment variables config files or that kind of thing from from secrets uh one limitation that we",
    "start": "1360240",
    "end": "1367440"
  },
  {
    "text": "uh that we need to uh figure out and cross plane in the motor that's on our sort of backlog is um",
    "start": "1367440",
    "end": "1373919"
  },
  {
    "text": "crossplane uh does not yet have anything like a terraform data source so crossbow is really good at giving you",
    "start": "1373919",
    "end": "1379120"
  },
  {
    "text": "information about stuff that crossland manages but it's uh as yet doesn't have great functionality",
    "start": "1379120",
    "end": "1384880"
  },
  {
    "text": "for giving you information about um arbitrary other stuff let's say you know there's a there's a",
    "start": "1384880",
    "end": "1390480"
  },
  {
    "text": "database running over there or a cluster running over there or a vpc running over there that cross-plate is not in charge of it's not",
    "start": "1390480",
    "end": "1395760"
  },
  {
    "text": "the source of truth for its state um it's it doesn't currently have any functionality to go and grab details about that uh thing",
    "start": "1395760",
    "end": "1404480"
  },
  {
    "text": "um but there is a bit of an escape hatch here at least which again is just that um we we exist within the kubernetes api",
    "start": "1404480",
    "end": "1412880"
  },
  {
    "text": "so um while it's not the easiest thing in the world to write a kubernetes controller it is possible to write your own code",
    "start": "1412880",
    "end": "1418880"
  },
  {
    "text": "um to interact with our apis and glue this together at the moment so it's possible today with a bit of",
    "start": "1418880",
    "end": "1424480"
  },
  {
    "text": "elbow grease and code and we aim to make it just a native part of the cross-plate ecosystem soon",
    "start": "1424480",
    "end": "1432799"
  },
  {
    "start": "1434000",
    "end": "1434000"
  },
  {
    "text": "and one last limitation i know earlier i said that hcl has allowed us to",
    "start": "1435039",
    "end": "1440480"
  },
  {
    "text": "scale very quickly and um well",
    "start": "1440480",
    "end": "1445600"
  },
  {
    "text": "to allow us to get our platform implemented in a very in you know in a relatively short amount",
    "start": "1445600",
    "end": "1451120"
  },
  {
    "text": "of time while we're we're getting to we're starting to",
    "start": "1451120",
    "end": "1456559"
  },
  {
    "text": "uh get a little bit more sophisticated with how we manage and we need",
    "start": "1456559",
    "end": "1463200"
  },
  {
    "text": "and it's uh we're starting to understand that we need to work closer",
    "start": "1463200",
    "end": "1468559"
  },
  {
    "text": "with the cluster so it's just turning into another thing to maintain again",
    "start": "1468559",
    "end": "1473760"
  },
  {
    "text": "our file is in git our state is an s3 and then we also currently right now",
    "start": "1473760",
    "end": "1480080"
  },
  {
    "text": "work you know we run our cube ctl commands so would it be nice if we could just you",
    "start": "1480080",
    "end": "1486400"
  },
  {
    "text": "know kind of work a little bit more closer with the cluster have our um kubernetes resources and",
    "start": "1486400",
    "end": "1492799"
  },
  {
    "text": "be closer to kubernetes so um yeah so we can be more productive so we",
    "start": "1492799",
    "end": "1498080"
  },
  {
    "text": "don't have to worry about again you know where things are in a somewhere else",
    "start": "1498080",
    "end": "1503360"
  },
  {
    "text": "that is not you know just logging into terminal and just messing around",
    "start": "1503360",
    "end": "1508400"
  },
  {
    "text": "at that at that part just using just one one interface",
    "start": "1508400",
    "end": "1515840"
  },
  {
    "start": "1515000",
    "end": "1515000"
  },
  {
    "text": "so i think the the advantage that crossplane has here is pretty much what delorean just touched on um uh it's",
    "start": "1516799",
    "end": "1523440"
  },
  {
    "text": "tool and consistency effectively i think if you're a hypothetical organization that does not either use terraform or",
    "start": "1523440",
    "end": "1529039"
  },
  {
    "text": "kubernetes and you're thinking hey i'd like to go manage my cloud infrastructure declaratively it's probably about the same level of",
    "start": "1529039",
    "end": "1536400"
  },
  {
    "text": "maintenance and burden and learning to go using the cross plane or terraform but increasingly we're seeing that a lot",
    "start": "1536400",
    "end": "1542080"
  },
  {
    "text": "of people are just using kubernetes already you know they've already bought into kubernetes for maybe managing their apps",
    "start": "1542080",
    "end": "1547360"
  },
  {
    "text": "um you know so that developers are getting used to writing deployments for containerized",
    "start": "1547360",
    "end": "1552880"
  },
  {
    "text": "apps or using something like argo cd or just you know operating down the coop ctl layer",
    "start": "1552880",
    "end": "1558320"
  },
  {
    "text": "so if they are doing that you know people have already invested in invested in learning and maintaining",
    "start": "1558320",
    "end": "1563440"
  },
  {
    "text": "kubernetes it's a smaller shift to sort of add crossplay as a kubernetes add-on",
    "start": "1563440",
    "end": "1568880"
  },
  {
    "text": "that uses similar patterns uh basically run that off of that as a platform team",
    "start": "1568880",
    "end": "1574480"
  },
  {
    "text": "to your users that it is to learn a different dsl uh for terraform sort of thing and keep",
    "start": "1574480",
    "end": "1581440"
  },
  {
    "text": "all the tooling and plumbing running to get terraform going here ci cd system or all that kind of thing",
    "start": "1581440",
    "end": "1586880"
  },
  {
    "text": "and you know even further than just uh necessarily saying that if you know kubernetes cross plane is is",
    "start": "1586880",
    "end": "1593679"
  },
  {
    "text": "easy to pick up um we can sort of lean on the fact that again",
    "start": "1593679",
    "end": "1598720"
  },
  {
    "text": "uh at its heart kubernetes is sort of like a really good rest api so uh even if you have developers who",
    "start": "1598720",
    "end": "1606400"
  },
  {
    "text": "aren't so familiar with with kubernetes you could always position it as hey you can make these rest api calls to",
    "start": "1606400",
    "end": "1612880"
  },
  {
    "text": "manage your infrastructure you know if you're a python developer or a java developer or something like that you can say hey there's a really well documented",
    "start": "1612880",
    "end": "1618720"
  },
  {
    "text": "rest api for managing infrastructure even if you don't want to learn the intricacies of kubernetes",
    "start": "1618720",
    "end": "1624640"
  },
  {
    "text": "so i think just um again the wonders of apis goes a long way here and just tooling",
    "start": "1624640",
    "end": "1629760"
  },
  {
    "text": "consistency the fact that everyone's kind of using everyone but many people a lot of people at this conference are using kubernetes",
    "start": "1629760",
    "end": "1637039"
  },
  {
    "text": "already okay so right now um we are taking our first steps to uh",
    "start": "1638840",
    "end": "1645760"
  },
  {
    "start": "1640000",
    "end": "1640000"
  },
  {
    "text": "integrating cross plane into our ecosystem or i guess migrating on to crossline so right now we're",
    "start": "1645760",
    "end": "1653440"
  },
  {
    "text": "working with my team in particular we're working with um managing s3b of crossplay",
    "start": "1653440",
    "end": "1658559"
  },
  {
    "text": "and another one of our teams is working with ecr we're working with composing",
    "start": "1658559",
    "end": "1664960"
  },
  {
    "text": "both of these resources and crossplaying uh so uh",
    "start": "1664960",
    "end": "1672399"
  },
  {
    "text": "yeah so anyways uh we",
    "start": "1672399",
    "end": "1677360"
  },
  {
    "text": "we are hitting the ex um we are experiencing the freshness of you know this bleeding edge",
    "start": "1677440",
    "end": "1684399"
  },
  {
    "text": "technology but the cross plane community has been very responsive and very helpful",
    "start": "1684399",
    "end": "1690399"
  },
  {
    "text": "because again you know i'm tech i'm very new to you know to kubernetes into all this",
    "start": "1690399",
    "end": "1696720"
  },
  {
    "text": "stuff myself but um so maybe sometimes your questions are going to be a little bit obvious to",
    "start": "1696720",
    "end": "1702559"
  },
  {
    "text": "consider a little bit more seasoned in the technology but you know again everybody's been nice and helpful",
    "start": "1702559",
    "end": "1707600"
  },
  {
    "text": "and uh and maybe one day once you know our you know our team gets a little bit",
    "start": "1707600",
    "end": "1713440"
  },
  {
    "text": "more familiar with go and everything else we can contribute back to the community yeah i'll say that uh",
    "start": "1713440",
    "end": "1719520"
  },
  {
    "text": "speaking as a sort of a cross-plate steering committee uh person and maintainer",
    "start": "1719520",
    "end": "1725520"
  },
  {
    "text": "uh one thing i really like about um working with the folks at guidewire as part of the crossplane community is",
    "start": "1725520",
    "end": "1731679"
  },
  {
    "text": "that they really get the vision of the project and i think see a lot of the same value",
    "start": "1731679",
    "end": "1738399"
  },
  {
    "text": "that we see in the project um you know some people come to crossblade and they really they really just want um",
    "start": "1738399",
    "end": "1743919"
  },
  {
    "text": "what we think of as like the core drivers they just they just want to have raw apis modeled in kubernetes",
    "start": "1743919",
    "end": "1751039"
  },
  {
    "text": "and there's value in and of itself there that you know that's valuable by itself but um crossplane really sweats the",
    "start": "1751039",
    "end": "1757520"
  },
  {
    "text": "separation of concern we really think of crossblade as a tool to build your own apis as a platform team that",
    "start": "1757520",
    "end": "1764399"
  },
  {
    "text": "you can offer to your uh to your internal customers to the developers you support um and guidewire from the get-go who",
    "start": "1764399",
    "end": "1771360"
  },
  {
    "text": "just sort of saw that and has been looking at it that way um it's really really nice you know we",
    "start": "1771360",
    "end": "1776399"
  },
  {
    "text": "not the only folks in the in the cross playing community uh to to see that value by by",
    "start": "1776399",
    "end": "1781760"
  },
  {
    "text": "a long shot but definitely um i've been very impressed seeing like guidewise internal presentations and",
    "start": "1781760",
    "end": "1787120"
  },
  {
    "text": "things like that that really like get what where or what we're doing so it's been a lovely to work with folks at",
    "start": "1787120",
    "end": "1794159"
  },
  {
    "text": "guideway okay and uh shout out to you julian hill",
    "start": "1794159",
    "end": "1801279"
  },
  {
    "text": "and james stockton for helping us put together this presentation and thank you for watching thanks folks",
    "start": "1801279",
    "end": "1812399"
  }
]