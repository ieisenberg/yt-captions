[
  {
    "text": "the next session is going to be",
    "start": "0",
    "end": "1760"
  },
  {
    "text": "kubernetes security and governance made",
    "start": "1760",
    "end": "3760"
  },
  {
    "text": "easy using utomi",
    "start": "3760",
    "end": "5759"
  },
  {
    "text": "and uh",
    "start": "5759",
    "end": "6799"
  },
  {
    "text": "this is being hosted by um um",
    "start": "6799",
    "end": "9840"
  },
  {
    "text": "two of our friends here abhimanyo and",
    "start": "9840",
    "end": "11679"
  },
  {
    "text": "zafad zim novoda",
    "start": "11679",
    "end": "13759"
  },
  {
    "text": "so i'll give a brief introduction about",
    "start": "13759",
    "end": "15200"
  },
  {
    "text": "every monument aviva salvan is the",
    "start": "15200",
    "end": "17440"
  },
  {
    "text": "developer advocate at redcubes he's a",
    "start": "17440",
    "end": "19600"
  },
  {
    "text": "software generalist who has worked in",
    "start": "19600",
    "end": "21279"
  },
  {
    "text": "industries such as aerospace robotics",
    "start": "21279",
    "end": "23279"
  },
  {
    "text": "e-health and has landed in the cloud",
    "start": "23279",
    "end": "25039"
  },
  {
    "text": "native realm",
    "start": "25039",
    "end": "26320"
  },
  {
    "text": "his focus lies in the intersection of",
    "start": "26320",
    "end": "27920"
  },
  {
    "text": "maximizing developer productivity and",
    "start": "27920",
    "end": "29840"
  },
  {
    "text": "enhancing business values",
    "start": "29840",
    "end": "31679"
  },
  {
    "text": "he's an open source enthusiast and is",
    "start": "31679",
    "end": "33520"
  },
  {
    "text": "currently leading the developer",
    "start": "33520",
    "end": "34800"
  },
  {
    "text": "experience program of the autonomy core",
    "start": "34800",
    "end": "36960"
  },
  {
    "text": "project outside of work",
    "start": "36960",
    "end": "39280"
  },
  {
    "text": "he enjoys enduring endurance running and",
    "start": "39280",
    "end": "42840"
  },
  {
    "text": "cycling uh thanks everyone you to be",
    "start": "42840",
    "end": "45200"
  },
  {
    "text": "part of this program thanks a lot",
    "start": "45200",
    "end": "48719"
  },
  {
    "text": "yehozawa novada is an engineering",
    "start": "49200",
    "end": "51280"
  },
  {
    "text": "manager at red cubes he aims to empower",
    "start": "51280",
    "end": "54239"
  },
  {
    "text": "devops teams by listening to them and",
    "start": "54239",
    "end": "55920"
  },
  {
    "text": "providing the autonomous environment",
    "start": "55920",
    "end": "58079"
  },
  {
    "text": "that they need he specially specialized",
    "start": "58079",
    "end": "60399"
  },
  {
    "text": "in building software for different",
    "start": "60399",
    "end": "61840"
  },
  {
    "text": "engineering teams from system platforms",
    "start": "61840",
    "end": "63840"
  },
  {
    "text": "for telecom equipment to pass on top of",
    "start": "63840",
    "end": "66320"
  },
  {
    "text": "kubernetes",
    "start": "66320",
    "end": "67760"
  },
  {
    "text": "he has a strong computer network",
    "start": "67760",
    "end": "69360"
  },
  {
    "text": "background which helps him design",
    "start": "69360",
    "end": "70799"
  },
  {
    "text": "interconnected and distributed systems",
    "start": "70799",
    "end": "72560"
  },
  {
    "text": "currently he's a maintainer of the",
    "start": "72560",
    "end": "74000"
  },
  {
    "text": "atomic core project",
    "start": "74000",
    "end": "75520"
  },
  {
    "text": "great team player who loves working with",
    "start": "75520",
    "end": "77439"
  },
  {
    "text": "others after working hours you can find",
    "start": "77439",
    "end": "79360"
  },
  {
    "text": "him hiking in the mountains or biking on",
    "start": "79360",
    "end": "80960"
  },
  {
    "text": "the road",
    "start": "80960",
    "end": "82080"
  },
  {
    "text": "cool that's a great introduction isn't",
    "start": "82080",
    "end": "83840"
  },
  {
    "text": "it",
    "start": "83840",
    "end": "85200"
  },
  {
    "text": "okay about this session",
    "start": "85200",
    "end": "87920"
  },
  {
    "text": "yeah thanks thanks uh yes thanks to like",
    "start": "87920",
    "end": "91360"
  },
  {
    "text": "uh for being with us",
    "start": "91360",
    "end": "93439"
  },
  {
    "text": "and um",
    "start": "93439",
    "end": "94880"
  },
  {
    "text": "about this session autome is an open",
    "start": "94880",
    "end": "96560"
  },
  {
    "text": "source cloud diagnostic kubernetes",
    "start": "96560",
    "end": "98240"
  },
  {
    "text": "application configuration and automation",
    "start": "98240",
    "end": "100079"
  },
  {
    "text": "platform under the hood automatically",
    "start": "100079",
    "end": "102079"
  },
  {
    "text": "leverages several oss and cncf projects",
    "start": "102079",
    "end": "104560"
  },
  {
    "text": "like calico opa gatekeeper",
    "start": "104560",
    "end": "107520"
  },
  {
    "text": "istio harbor to enhance security",
    "start": "107520",
    "end": "109680"
  },
  {
    "text": "security is an ever growing concern for",
    "start": "109680",
    "end": "111600"
  },
  {
    "text": "organizations gartner predicts that 99",
    "start": "111600",
    "end": "114240"
  },
  {
    "text": "of all security incidents by 2025 will",
    "start": "114240",
    "end": "116719"
  },
  {
    "text": "be due to misconfigurations this talk",
    "start": "116719",
    "end": "119040"
  },
  {
    "text": "will demonstrate how teams can use auto",
    "start": "119040",
    "end": "121280"
  },
  {
    "text": "me to manage container and network",
    "start": "121280",
    "end": "123280"
  },
  {
    "text": "security policies with same defaults on",
    "start": "123280",
    "end": "126000"
  },
  {
    "text": "kubernetes through an intuitive web",
    "start": "126000",
    "end": "127680"
  },
  {
    "text": "interface",
    "start": "127680",
    "end": "129039"
  },
  {
    "text": "thereby avoiding the need to write any",
    "start": "129039",
    "end": "131120"
  },
  {
    "text": "amol configurations that are prone to",
    "start": "131120",
    "end": "132800"
  },
  {
    "text": "errors a recorded video demo is used to",
    "start": "132800",
    "end": "135040"
  },
  {
    "text": "showcase a couple of use cases using the",
    "start": "135040",
    "end": "137440"
  },
  {
    "text": "integrated security best practices in",
    "start": "137440",
    "end": "139200"
  },
  {
    "text": "automate to reduce the attack surfacing",
    "start": "139200",
    "end": "141599"
  },
  {
    "text": "surface when running applications on",
    "start": "141599",
    "end": "143200"
  },
  {
    "text": "kubernetes",
    "start": "143200",
    "end": "145840"
  },
  {
    "text": "cool so",
    "start": "146239",
    "end": "147840"
  },
  {
    "text": "um the session will start in a couple of",
    "start": "147840",
    "end": "149920"
  },
  {
    "text": "minutes and thanks after then abby when",
    "start": "149920",
    "end": "151680"
  },
  {
    "text": "you",
    "start": "151680",
    "end": "152720"
  },
  {
    "text": "for being around and",
    "start": "152720",
    "end": "154640"
  },
  {
    "text": "um",
    "start": "154640",
    "end": "156080"
  },
  {
    "text": "we are all excited to",
    "start": "156080",
    "end": "158879"
  },
  {
    "text": "go through this session",
    "start": "158879",
    "end": "160480"
  },
  {
    "text": "yeah it can it will go there in a couple",
    "start": "160480",
    "end": "162160"
  },
  {
    "text": "of minutes thanks",
    "start": "162160",
    "end": "164959"
  },
  {
    "text": "on kubernetes security and governance",
    "start": "169760",
    "end": "172000"
  },
  {
    "text": "made easy using autome",
    "start": "172000",
    "end": "174160"
  },
  {
    "text": "this talk will demonstrate how teams can",
    "start": "174160",
    "end": "176560"
  },
  {
    "text": "use autome or open source project to",
    "start": "176560",
    "end": "179360"
  },
  {
    "text": "enforce container and network security",
    "start": "179360",
    "end": "181680"
  },
  {
    "text": "policies with same defaults on the",
    "start": "181680",
    "end": "183840"
  },
  {
    "text": "cluster through an intuitive web",
    "start": "183840",
    "end": "186000"
  },
  {
    "text": "interface thereby avoiding the need to",
    "start": "186000",
    "end": "188560"
  },
  {
    "text": "write yaml configurations that are prone",
    "start": "188560",
    "end": "190720"
  },
  {
    "text": "to errors we will also see how",
    "start": "190720",
    "end": "193120"
  },
  {
    "text": "leveraging automation and git ops can",
    "start": "193120",
    "end": "195760"
  },
  {
    "text": "mitigate the misconfiguration errors",
    "start": "195760",
    "end": "198400"
  },
  {
    "text": "hi i'm abhimanyu selvan you can call me",
    "start": "198400",
    "end": "201120"
  },
  {
    "text": "abhi i'm the developer advocate at",
    "start": "201120",
    "end": "202879"
  },
  {
    "text": "redcubes i'm a software generalist",
    "start": "202879",
    "end": "205440"
  },
  {
    "text": "exploring the cloud native realm and my",
    "start": "205440",
    "end": "207440"
  },
  {
    "text": "interest lies in improving the developer",
    "start": "207440",
    "end": "209519"
  },
  {
    "text": "experience and productivity hi my name",
    "start": "209519",
    "end": "212720"
  },
  {
    "text": "is",
    "start": "212720",
    "end": "213680"
  },
  {
    "text": "jim novada and you can call me yejo i am",
    "start": "213680",
    "end": "216799"
  },
  {
    "text": "the engineering manager at red cubes and",
    "start": "216799",
    "end": "219280"
  },
  {
    "text": "together with my colleagues we are",
    "start": "219280",
    "end": "221120"
  },
  {
    "text": "maintaining the autumny core project",
    "start": "221120",
    "end": "223760"
  },
  {
    "text": "here is the agenda for the talk we'll",
    "start": "223760",
    "end": "226239"
  },
  {
    "text": "give you a general introduction about",
    "start": "226239",
    "end": "228000"
  },
  {
    "text": "our open source project automay and then",
    "start": "228000",
    "end": "230080"
  },
  {
    "text": "go hands-on demo demonstrating container",
    "start": "230080",
    "end": "232799"
  },
  {
    "text": "security policies egress control using",
    "start": "232799",
    "end": "235120"
  },
  {
    "text": "istio network policies and then key",
    "start": "235120",
    "end": "237840"
  },
  {
    "text": "takeaways from this talk finally how you",
    "start": "237840",
    "end": "240720"
  },
  {
    "text": "all can contribute to our open source",
    "start": "240720",
    "end": "242959"
  },
  {
    "text": "project and community",
    "start": "242959",
    "end": "246000"
  },
  {
    "text": "otomy is a self-hosted platform as a",
    "start": "246000",
    "end": "248799"
  },
  {
    "text": "service for kubernetes that aims to",
    "start": "248799",
    "end": "251280"
  },
  {
    "text": "lower the burden on operation and make",
    "start": "251280",
    "end": "254239"
  },
  {
    "text": "developers self-serving it is an open",
    "start": "254239",
    "end": "257440"
  },
  {
    "text": "source project it can be installed on",
    "start": "257440",
    "end": "259919"
  },
  {
    "text": "any kubernetes cluster automate",
    "start": "259919",
    "end": "262560"
  },
  {
    "text": "integrates more than 20 open source",
    "start": "262560",
    "end": "264960"
  },
  {
    "text": "projects and brings multi-tenant",
    "start": "264960",
    "end": "267280"
  },
  {
    "text": "experience so each devops team has its",
    "start": "267280",
    "end": "270479"
  },
  {
    "text": "own self-sufficient environment to work",
    "start": "270479",
    "end": "273120"
  },
  {
    "text": "with",
    "start": "273120",
    "end": "273919"
  },
  {
    "text": "we can enforce container security",
    "start": "273919",
    "end": "275919"
  },
  {
    "text": "policies and network policies",
    "start": "275919",
    "end": "278320"
  },
  {
    "text": "in autome without having the need to",
    "start": "278320",
    "end": "280240"
  },
  {
    "text": "write any ml configurations",
    "start": "280240",
    "end": "282800"
  },
  {
    "text": "everything through a single intuitive",
    "start": "282800",
    "end": "285440"
  },
  {
    "text": "web user interface",
    "start": "285440",
    "end": "287360"
  },
  {
    "text": "automay can be easily installed using",
    "start": "287360",
    "end": "289360"
  },
  {
    "text": "health chart but for the sake of this",
    "start": "289360",
    "end": "291440"
  },
  {
    "text": "demo we'll only focus on the security",
    "start": "291440",
    "end": "294479"
  },
  {
    "text": "and the network policy enforcement",
    "start": "294479",
    "end": "296400"
  },
  {
    "text": "aspect of autonomy welcome to the demo",
    "start": "296400",
    "end": "299040"
  },
  {
    "text": "on container security policies this demo",
    "start": "299040",
    "end": "302160"
  },
  {
    "text": "will demonstrate how easy it is to gain",
    "start": "302160",
    "end": "304320"
  },
  {
    "text": "access to the host file system by",
    "start": "304320",
    "end": "306080"
  },
  {
    "text": "deploying a rogue pod and we will also",
    "start": "306080",
    "end": "308560"
  },
  {
    "text": "showcase how simple it is as a platform",
    "start": "308560",
    "end": "311039"
  },
  {
    "text": "admin to prevent such an attack from",
    "start": "311039",
    "end": "312720"
  },
  {
    "text": "happening by enabling the security",
    "start": "312720",
    "end": "314960"
  },
  {
    "text": "policies via the automate console",
    "start": "314960",
    "end": "317280"
  },
  {
    "text": "without the need to write any ammo",
    "start": "317280",
    "end": "319440"
  },
  {
    "text": "configurations so let's go ahead and",
    "start": "319440",
    "end": "321440"
  },
  {
    "text": "deploy this robot part that has",
    "start": "321440",
    "end": "323039"
  },
  {
    "text": "privileged container running with host",
    "start": "323039",
    "end": "325680"
  },
  {
    "text": "volume mounted and the whole security",
    "start": "325680",
    "end": "327520"
  },
  {
    "text": "flag set true",
    "start": "327520",
    "end": "331240"
  },
  {
    "text": "and note that i can easily gain access",
    "start": "341520",
    "end": "343520"
  },
  {
    "text": "to the host file system and the",
    "start": "343520",
    "end": "345680"
  },
  {
    "text": "possibilities to create havoc is endless",
    "start": "345680",
    "end": "348400"
  },
  {
    "text": "we can easily prevent something like",
    "start": "348400",
    "end": "350400"
  },
  {
    "text": "this from happening by enabling the bot",
    "start": "350400",
    "end": "352479"
  },
  {
    "text": "security policies from the automate",
    "start": "352479",
    "end": "354560"
  },
  {
    "text": "console",
    "start": "354560",
    "end": "355600"
  },
  {
    "text": "let's check it out",
    "start": "355600",
    "end": "357600"
  },
  {
    "text": "so now we'll be logged into the autome",
    "start": "357600",
    "end": "359680"
  },
  {
    "text": "console as a team admin we will now",
    "start": "359680",
    "end": "362560"
  },
  {
    "text": "enable the settings for the team kcd",
    "start": "362560",
    "end": "364800"
  },
  {
    "text": "chennai what you see in the bottom is",
    "start": "364800",
    "end": "366960"
  },
  {
    "text": "the list of core applications that",
    "start": "366960",
    "end": "369199"
  },
  {
    "text": "automate comes pre-configured with by",
    "start": "369199",
    "end": "371520"
  },
  {
    "text": "default and the applications on top can",
    "start": "371520",
    "end": "373919"
  },
  {
    "text": "be easily enabled by dragging and",
    "start": "373919",
    "end": "376000"
  },
  {
    "text": "dropping them in this case",
    "start": "376000",
    "end": "378000"
  },
  {
    "text": "we want to enable the policies so let's",
    "start": "378000",
    "end": "381520"
  },
  {
    "text": "go ahead and",
    "start": "381520",
    "end": "382720"
  },
  {
    "text": "enable opa gatekeeper to enforce these",
    "start": "382720",
    "end": "385280"
  },
  {
    "text": "policies and let's see what happens",
    "start": "385280",
    "end": "387520"
  },
  {
    "text": "now see that gatekeeper is part of the",
    "start": "387520",
    "end": "389919"
  },
  {
    "text": "enabled apps",
    "start": "389919",
    "end": "391680"
  },
  {
    "text": "we need to deploy these changes but",
    "start": "391680",
    "end": "393360"
  },
  {
    "text": "before we do so let's enable some",
    "start": "393360",
    "end": "395680"
  },
  {
    "text": "settings of gatekeeper via the console",
    "start": "395680",
    "end": "399919"
  },
  {
    "text": "the automate console provides high level",
    "start": "405280",
    "end": "407199"
  },
  {
    "text": "abstraction of these spot security",
    "start": "407199",
    "end": "409120"
  },
  {
    "text": "policies that can be easily enabled from",
    "start": "409120",
    "end": "412160"
  },
  {
    "text": "the console",
    "start": "412160",
    "end": "415240"
  },
  {
    "text": "autonomy comes pre-configured with",
    "start": "432880",
    "end": "434880"
  },
  {
    "text": "projects such as kitty and drone to",
    "start": "434880",
    "end": "437039"
  },
  {
    "text": "enable automation",
    "start": "437039",
    "end": "438880"
  },
  {
    "text": "when you fill the form and click deploy",
    "start": "438880",
    "end": "441360"
  },
  {
    "text": "changes automay automatically generates",
    "start": "441360",
    "end": "443840"
  },
  {
    "text": "the configuration as code commits the",
    "start": "443840",
    "end": "446319"
  },
  {
    "text": "changes to a pre-configured automatic",
    "start": "446319",
    "end": "449120"
  },
  {
    "text": "values git repository which triggers a",
    "start": "449120",
    "end": "451360"
  },
  {
    "text": "drone pipeline that will validate the",
    "start": "451360",
    "end": "453120"
  },
  {
    "text": "changes and apply the changes to the",
    "start": "453120",
    "end": "455360"
  },
  {
    "text": "cluster automatically",
    "start": "455360",
    "end": "458638"
  },
  {
    "text": "but let's head back to the terminal and",
    "start": "460560",
    "end": "462160"
  },
  {
    "text": "see if we are able to deploy the",
    "start": "462160",
    "end": "463759"
  },
  {
    "text": "rockport",
    "start": "463759",
    "end": "465599"
  },
  {
    "text": "we can see that the admission controller",
    "start": "465599",
    "end": "467599"
  },
  {
    "text": "has denied the request to create the pod",
    "start": "467599",
    "end": "470319"
  },
  {
    "text": "with the non-compliant configuration",
    "start": "470319",
    "end": "472319"
  },
  {
    "text": "this confirms the fact that the pod",
    "start": "472319",
    "end": "474000"
  },
  {
    "text": "security policies have taken effect",
    "start": "474000",
    "end": "478840"
  },
  {
    "text": "has just shown the importance of having",
    "start": "486240",
    "end": "488639"
  },
  {
    "text": "container security policies which can",
    "start": "488639",
    "end": "491280"
  },
  {
    "text": "limit a vast majority of attacks",
    "start": "491280",
    "end": "493919"
  },
  {
    "text": "the next level of enhancing security",
    "start": "493919",
    "end": "497039"
  },
  {
    "text": "is by controlling the network traffic",
    "start": "497039",
    "end": "500479"
  },
  {
    "text": "which may play a key role in highly",
    "start": "500479",
    "end": "503039"
  },
  {
    "text": "distributed and interconnected",
    "start": "503039",
    "end": "505680"
  },
  {
    "text": "environments like ports in kubernetes",
    "start": "505680",
    "end": "508560"
  },
  {
    "text": "cluster",
    "start": "508560",
    "end": "509840"
  },
  {
    "text": "in this demo i will talk about",
    "start": "509840",
    "end": "511520"
  },
  {
    "text": "controlling network traffic from a pod",
    "start": "511520",
    "end": "514320"
  },
  {
    "text": "to the internet network",
    "start": "514320",
    "end": "516719"
  },
  {
    "text": "a very common attack is so-called remote",
    "start": "516719",
    "end": "519440"
  },
  {
    "text": "command execution which allows an",
    "start": "519440",
    "end": "521919"
  },
  {
    "text": "adversary to run an arbitrary shell",
    "start": "521919",
    "end": "524959"
  },
  {
    "text": "command it often results in leveraging a",
    "start": "524959",
    "end": "528640"
  },
  {
    "text": "curl command fetching malicious software",
    "start": "528640",
    "end": "532480"
  },
  {
    "text": "and executing it in",
    "start": "532480",
    "end": "534399"
  },
  {
    "text": "memory since package manager is",
    "start": "534399",
    "end": "536800"
  },
  {
    "text": "available the attacker installs the",
    "start": "536800",
    "end": "539200"
  },
  {
    "text": "occur binary which mimics downloading a",
    "start": "539200",
    "end": "542160"
  },
  {
    "text": "malicious software to the pot",
    "start": "542160",
    "end": "544399"
  },
  {
    "text": "then http request is performed to the",
    "start": "544399",
    "end": "547279"
  },
  {
    "text": "endpoint outside the cluster",
    "start": "547279",
    "end": "551279"
  },
  {
    "text": "let's head back to the automa console",
    "start": "555760",
    "end": "557680"
  },
  {
    "text": "and prevent any traffic going outside",
    "start": "557680",
    "end": "560399"
  },
  {
    "text": "the cluster i'm going to update the",
    "start": "560399",
    "end": "562640"
  },
  {
    "text": "theme settings of kcd chennai and enable",
    "start": "562640",
    "end": "566080"
  },
  {
    "text": "egress control feature",
    "start": "566080",
    "end": "569279"
  },
  {
    "text": "we are back to the terminal as a result",
    "start": "569279",
    "end": "572399"
  },
  {
    "text": "of enabling egress policy",
    "start": "572399",
    "end": "574959"
  },
  {
    "text": "in automi console the default estio",
    "start": "574959",
    "end": "577279"
  },
  {
    "text": "sitecar resource has been deployed by",
    "start": "577279",
    "end": "579839"
  },
  {
    "text": "autome",
    "start": "579839",
    "end": "582399"
  },
  {
    "text": "i try again downloading an application",
    "start": "587519",
    "end": "590399"
  },
  {
    "text": "from the internet",
    "start": "590399",
    "end": "593200"
  },
  {
    "text": "it's not possible anymore because istio",
    "start": "594000",
    "end": "596720"
  },
  {
    "text": "blocks traffic going outside this",
    "start": "596720",
    "end": "599200"
  },
  {
    "text": "service mesh",
    "start": "599200",
    "end": "602680"
  },
  {
    "text": "we are going to inspect the side car",
    "start": "605120",
    "end": "607279"
  },
  {
    "text": "configuration",
    "start": "607279",
    "end": "608800"
  },
  {
    "text": "so there is a default sidecar",
    "start": "608800",
    "end": "610880"
  },
  {
    "text": "configuration deployed for a team kcd",
    "start": "610880",
    "end": "613920"
  },
  {
    "text": "10i automation forces external egress",
    "start": "613920",
    "end": "617360"
  },
  {
    "text": "control",
    "start": "617360",
    "end": "618480"
  },
  {
    "text": "by a setting outbound traffic policy to",
    "start": "618480",
    "end": "621839"
  },
  {
    "text": "registry only for this particular team",
    "start": "621839",
    "end": "625519"
  },
  {
    "text": "which means",
    "start": "625519",
    "end": "626720"
  },
  {
    "text": "that the pod cannot access any endpoint",
    "start": "626720",
    "end": "629680"
  },
  {
    "text": "outside the service mesh",
    "start": "629680",
    "end": "632399"
  },
  {
    "text": "yahoo just talked about controlling the",
    "start": "632399",
    "end": "634240"
  },
  {
    "text": "external egress traffic but what about",
    "start": "634240",
    "end": "636480"
  },
  {
    "text": "the interpod communication for the sake",
    "start": "636480",
    "end": "639040"
  },
  {
    "text": "of this demo we will deploy a guestbook",
    "start": "639040",
    "end": "641360"
  },
  {
    "text": "application that consists of three micro",
    "start": "641360",
    "end": "643440"
  },
  {
    "text": "services the front end the redis leader",
    "start": "643440",
    "end": "646160"
  },
  {
    "text": "and the redis follower in the team case",
    "start": "646160",
    "end": "648480"
  },
  {
    "text": "cd chennai namespace we will also deploy",
    "start": "648480",
    "end": "651519"
  },
  {
    "text": "a snooper pod that will be able to",
    "start": "651519",
    "end": "654320"
  },
  {
    "text": "communicate with the redis service",
    "start": "654320",
    "end": "657440"
  },
  {
    "text": "this demo will be split into three parts",
    "start": "657440",
    "end": "660079"
  },
  {
    "text": "as shown in the figure",
    "start": "660079",
    "end": "661839"
  },
  {
    "text": "first we will allow all the traffic to",
    "start": "661839",
    "end": "664000"
  },
  {
    "text": "flow through so the services will be",
    "start": "664000",
    "end": "666320"
  },
  {
    "text": "talking to one another the snooper pod",
    "start": "666320",
    "end": "668320"
  },
  {
    "text": "will also be able to ping the redis",
    "start": "668320",
    "end": "670160"
  },
  {
    "text": "leader then we will log into the automay",
    "start": "670160",
    "end": "672560"
  },
  {
    "text": "console and enable the network policies",
    "start": "672560",
    "end": "675279"
  },
  {
    "text": "which by default will deny all the",
    "start": "675279",
    "end": "677440"
  },
  {
    "text": "incoming traffic and finally we",
    "start": "677440",
    "end": "680000"
  },
  {
    "text": "selectively allow the traffic to flow",
    "start": "680000",
    "end": "681839"
  },
  {
    "text": "through the microservices by",
    "start": "681839",
    "end": "683519"
  },
  {
    "text": "whitelisting the applications on the",
    "start": "683519",
    "end": "685600"
  },
  {
    "text": "autome console",
    "start": "685600",
    "end": "689000"
  },
  {
    "text": "in the terminal we deploy gas",
    "start": "689360",
    "end": "691600"
  },
  {
    "text": "application which consists of three",
    "start": "691600",
    "end": "693760"
  },
  {
    "text": "kubernetes services",
    "start": "693760",
    "end": "697120"
  },
  {
    "text": "in the atomic console we have already",
    "start": "697600",
    "end": "699839"
  },
  {
    "text": "exposed the front-end service with the",
    "start": "699839",
    "end": "702399"
  },
  {
    "text": "public url that we are going to access",
    "start": "702399",
    "end": "705839"
  },
  {
    "text": "now this is the guestbook application",
    "start": "705839",
    "end": "708399"
  },
  {
    "text": "and we will leave few entries",
    "start": "708399",
    "end": "710880"
  },
  {
    "text": "by submitting them the front-end",
    "start": "710880",
    "end": "713040"
  },
  {
    "text": "connects with ready service where the",
    "start": "713040",
    "end": "716079"
  },
  {
    "text": "data is stored",
    "start": "716079",
    "end": "719440"
  },
  {
    "text": "let's get back to the terminal",
    "start": "719440",
    "end": "722480"
  },
  {
    "text": "i'm going to deploy a snooper pod which",
    "start": "722480",
    "end": "724800"
  },
  {
    "text": "sends a ping message to the redis leader",
    "start": "724800",
    "end": "727360"
  },
  {
    "text": "service",
    "start": "727360",
    "end": "728560"
  },
  {
    "text": "communication is allowed because no",
    "start": "728560",
    "end": "730800"
  },
  {
    "text": "network policy is enforced as you can",
    "start": "730800",
    "end": "733600"
  },
  {
    "text": "see in the terminal on the bottom right",
    "start": "733600",
    "end": "736639"
  },
  {
    "text": "corner",
    "start": "736639",
    "end": "739639"
  },
  {
    "text": "we move to the second scenario where the",
    "start": "755440",
    "end": "757519"
  },
  {
    "text": "default network policy blocks all",
    "start": "757519",
    "end": "760320"
  },
  {
    "text": "incoming traffic to the port in the team",
    "start": "760320",
    "end": "762800"
  },
  {
    "text": "namespace",
    "start": "762800",
    "end": "764160"
  },
  {
    "text": "i just visit automatic console and",
    "start": "764160",
    "end": "765920"
  },
  {
    "text": "enable the network policy feature by",
    "start": "765920",
    "end": "768320"
  },
  {
    "text": "editing team kcd chennai settings",
    "start": "768320",
    "end": "773480"
  },
  {
    "text": "after enabling network policies the",
    "start": "774160",
    "end": "777279"
  },
  {
    "text": "front-end service is not able to",
    "start": "777279",
    "end": "779920"
  },
  {
    "text": "communicate with the redis service",
    "start": "779920",
    "end": "782240"
  },
  {
    "text": "anymore",
    "start": "782240",
    "end": "783920"
  },
  {
    "text": "we head back to the terminal where we",
    "start": "783920",
    "end": "786160"
  },
  {
    "text": "inspect kubernetes resources that otome",
    "start": "786160",
    "end": "788959"
  },
  {
    "text": "has deployed for us",
    "start": "788959",
    "end": "790720"
  },
  {
    "text": "there are two network policies the first",
    "start": "790720",
    "end": "793600"
  },
  {
    "text": "one blocks all incoming traffic to any",
    "start": "793600",
    "end": "797200"
  },
  {
    "text": "pod in the team kcd chennai namespace",
    "start": "797200",
    "end": "800800"
  },
  {
    "text": "the second one allows control plane",
    "start": "800800",
    "end": "803040"
  },
  {
    "text": "traffic from core services like",
    "start": "803040",
    "end": "806079"
  },
  {
    "text": "prometheus istio or k native",
    "start": "806079",
    "end": "810880"
  },
  {
    "text": "one more time i deploy the snooper pot",
    "start": "812320",
    "end": "814880"
  },
  {
    "text": "and check if it can communicate with the",
    "start": "814880",
    "end": "817279"
  },
  {
    "text": "redis leader service",
    "start": "817279",
    "end": "821160"
  },
  {
    "text": "the deny all network policy prevents",
    "start": "833519",
    "end": "836399"
  },
  {
    "text": "snooper bot communication but i need to",
    "start": "836399",
    "end": "839440"
  },
  {
    "text": "allow incoming traffic from the front",
    "start": "839440",
    "end": "842000"
  },
  {
    "text": "end to the ready service in anatomy",
    "start": "842000",
    "end": "844240"
  },
  {
    "text": "console i'm going to register two more",
    "start": "844240",
    "end": "846800"
  },
  {
    "text": "services so i can enable network",
    "start": "846800",
    "end": "849519"
  },
  {
    "text": "policies for their reports",
    "start": "849519",
    "end": "853639"
  },
  {
    "text": "next we",
    "start": "870000",
    "end": "871040"
  },
  {
    "text": "define the network policies also for the",
    "start": "871040",
    "end": "873760"
  },
  {
    "text": "redis follower again we want that the",
    "start": "873760",
    "end": "877600"
  },
  {
    "text": "front-end service is able to communicate",
    "start": "877600",
    "end": "880720"
  },
  {
    "text": "with the",
    "start": "880720",
    "end": "882079"
  },
  {
    "text": "redis follower",
    "start": "882079",
    "end": "885399"
  },
  {
    "text": "we are back at the guestbook application",
    "start": "894000",
    "end": "896480"
  },
  {
    "text": "now it's possible to add more entries",
    "start": "896480",
    "end": "898480"
  },
  {
    "text": "the communication has been restored",
    "start": "898480",
    "end": "902560"
  },
  {
    "text": "let's check network policies that otome",
    "start": "905199",
    "end": "907920"
  },
  {
    "text": "has created after registering new",
    "start": "907920",
    "end": "910639"
  },
  {
    "text": "services there are two new resources",
    "start": "910639",
    "end": "913600"
  },
  {
    "text": "that target ready spots and selectively",
    "start": "913600",
    "end": "916720"
  },
  {
    "text": "allow incoming drive with this we have",
    "start": "916720",
    "end": "919279"
  },
  {
    "text": "concluded demo about network policies",
    "start": "919279",
    "end": "924000"
  },
  {
    "text": "kubernetes is complex",
    "start": "924079",
    "end": "926399"
  },
  {
    "text": "implementing security across dynamic",
    "start": "926399",
    "end": "928720"
  },
  {
    "text": "environments of organization",
    "start": "928720",
    "end": "930720"
  },
  {
    "text": "takes a toll on the engineers enabling a",
    "start": "930720",
    "end": "933440"
  },
  {
    "text": "security driven mindset to build secure",
    "start": "933440",
    "end": "935600"
  },
  {
    "text": "applications is paramount in today's",
    "start": "935600",
    "end": "937920"
  },
  {
    "text": "world",
    "start": "937920",
    "end": "938800"
  },
  {
    "text": "as open source enthusiasts and",
    "start": "938800",
    "end": "940720"
  },
  {
    "text": "contributors we have built autome by",
    "start": "940720",
    "end": "942959"
  },
  {
    "text": "honoring several open source projects",
    "start": "942959",
    "end": "945040"
  },
  {
    "text": "and integrating them into one platform",
    "start": "945040",
    "end": "947279"
  },
  {
    "text": "autome was built ground up from a",
    "start": "947279",
    "end": "949440"
  },
  {
    "text": "developer's point of view where we have",
    "start": "949440",
    "end": "951279"
  },
  {
    "text": "abstracted away the complexity of",
    "start": "951279",
    "end": "953680"
  },
  {
    "text": "implementing security across the",
    "start": "953680",
    "end": "955680"
  },
  {
    "text": "platform by providing high-level",
    "start": "955680",
    "end": "957519"
  },
  {
    "text": "security principles that are easily",
    "start": "957519",
    "end": "959839"
  },
  {
    "text": "consumable this approach not only",
    "start": "959839",
    "end": "962160"
  },
  {
    "text": "enables organizations to build fast",
    "start": "962160",
    "end": "964800"
  },
  {
    "text": "secure environments but also enables",
    "start": "964800",
    "end": "967279"
  },
  {
    "text": "team and engineers within the",
    "start": "967279",
    "end": "969279"
  },
  {
    "text": "organization to develop a secure mindset",
    "start": "969279",
    "end": "971920"
  },
  {
    "text": "from the inception of the application",
    "start": "971920",
    "end": "973759"
  },
  {
    "text": "building process",
    "start": "973759",
    "end": "975519"
  },
  {
    "text": "the most important part of this talk",
    "start": "975519",
    "end": "978079"
  },
  {
    "text": "is the open source community",
    "start": "978079",
    "end": "980639"
  },
  {
    "text": "as mentioned earlier autumny is 100",
    "start": "980639",
    "end": "984320"
  },
  {
    "text": "open source",
    "start": "984320",
    "end": "986079"
  },
  {
    "text": "so",
    "start": "986079",
    "end": "987120"
  },
  {
    "text": "feel free to check out our repository",
    "start": "987120",
    "end": "990079"
  },
  {
    "text": "redcube",
    "start": "990079",
    "end": "991120"
  },
  {
    "text": "automecore",
    "start": "991120",
    "end": "992480"
  },
  {
    "text": "and do give us a star",
    "start": "992480",
    "end": "994639"
  },
  {
    "text": "if you enjoy it we also have",
    "start": "994639",
    "end": "997759"
  },
  {
    "text": "quick start repositories to help you",
    "start": "997759",
    "end": "1000160"
  },
  {
    "text": "quickly install autome on your",
    "start": "1000160",
    "end": "1002720"
  },
  {
    "text": "favorite cloud provider we can also run",
    "start": "1002720",
    "end": "1005360"
  },
  {
    "text": "autome on mini cube",
    "start": "1005360",
    "end": "1007759"
  },
  {
    "text": "we also have some workshops repository",
    "start": "1007759",
    "end": "1010880"
  },
  {
    "text": "where you can try out different labs and",
    "start": "1010880",
    "end": "1013600"
  },
  {
    "text": "experience the true potential of autome",
    "start": "1013600",
    "end": "1017440"
  },
  {
    "text": "for docs you can visit autome.io",
    "start": "1017440",
    "end": "1020880"
  },
  {
    "text": "and to join the community or slack",
    "start": "1020880",
    "end": "1023199"
  },
  {
    "text": "channel you can visit redcubes.com",
    "start": "1023199",
    "end": "1026240"
  },
  {
    "text": "community",
    "start": "1026240",
    "end": "1027438"
  },
  {
    "text": "and",
    "start": "1027439",
    "end": "1028480"
  },
  {
    "text": "subscribe to our events and slack",
    "start": "1028480",
    "end": "1030319"
  },
  {
    "text": "channel from there",
    "start": "1030319",
    "end": "1032000"
  },
  {
    "text": "we look forward to hearing back from you",
    "start": "1032000",
    "end": "1034240"
  },
  {
    "text": "all thank you very much",
    "start": "1034240",
    "end": "1038360"
  }
]