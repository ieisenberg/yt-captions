[
  {
    "text": "time welcome everyone it's great to have you all here you may notice there are two",
    "start": "0",
    "end": "6299"
  },
  {
    "text": "speakers on the slides up front and there's only one of me unfortunately Lee",
    "start": "6299",
    "end": "11580"
  },
  {
    "text": "win could not join us in person today don't worry she was able to pre-record all her slides she's got a great portion",
    "start": "11580",
    "end": "17460"
  },
  {
    "text": "of the presentation today and we have some of our colleagues here who can help answer questions at the end so thank you",
    "start": "17460",
    "end": "23580"
  },
  {
    "text": "everyone for putting up with this hybrid presentation but I'll get started first",
    "start": "23580",
    "end": "28680"
  },
  {
    "text": "I'm Rob Scott and I'll hand it right over to leewen to introduce herself",
    "start": "28680",
    "end": "33899"
  },
  {
    "text": "hello my name is Lee Wan Wu I am a software engineer at AWS focusing on AWS bpc",
    "start": "33899",
    "end": "42899"
  },
  {
    "text": "networking for kubernetes my first major kubernetes contribution",
    "start": "42899",
    "end": "48539"
  },
  {
    "text": "was designed and the development of AWS PC cni plugin for kubernetes networking",
    "start": "48539",
    "end": "57000"
  },
  {
    "text": "over AWS VPC I am a active member of Gateway API",
    "start": "57000",
    "end": "62820"
  },
  {
    "text": "community here I'm going to show you how we implemented Gateway API",
    "start": "62820",
    "end": "69840"
  },
  {
    "text": "on top of AWS VPC lattice I'm sorry I couldn't meet you in person",
    "start": "69840",
    "end": "77780"
  },
  {
    "text": "hopefully I will see you in person in future",
    "start": "77780",
    "end": "83240"
  },
  {
    "text": "cool uh it's so sad that Lewin couldn't be here but uh we'll have a great presentation uh she's got some great",
    "start": "83820",
    "end": "90360"
  },
  {
    "text": "content throughout this uh presentation today my name is Rob Scott I'm a software engineer at Google uh you can",
    "start": "90360",
    "end": "97140"
  },
  {
    "text": "find me all over the place uh definitely happy to connect and talk about any of these topics at any point uh",
    "start": "97140",
    "end": "105840"
  },
  {
    "text": "let's talk get right into it let's talk about the apis here now I may have skipped over at the beginning but we're",
    "start": "105840",
    "end": "111540"
  },
  {
    "text": "talking about two apis here we're talking about multi-cluster services and Gateway API so before we go any further",
    "start": "111540",
    "end": "117780"
  },
  {
    "text": "how many people have used multi-cluster services",
    "start": "117780",
    "end": "123240"
  },
  {
    "text": "okay a handful that's that's impressive actually how many people have used",
    "start": "123240",
    "end": "128340"
  },
  {
    "text": "Gateway API okay a few more that's great uh I I'm",
    "start": "128340",
    "end": "133440"
  },
  {
    "text": "very biased I'm one of the maintainers of Gateway API along with Nick Shane and some great people over there so we're",
    "start": "133440",
    "end": "141360"
  },
  {
    "text": "very interested in both Gateway API and how it could interact with multi-cluster service because these are both brand new",
    "start": "141360",
    "end": "147239"
  },
  {
    "text": "kubernetes apis that have kind of evolved together and we're talking about how they can work in parallel",
    "start": "147239",
    "end": "155040"
  },
  {
    "text": "so first there's Gateway API and there's a lot of talks at kubecon about Gateway API so I'm not going to go into lots of",
    "start": "155040",
    "end": "161099"
  },
  {
    "text": "details here but understand that a Gateway in this case when we're talking about Cloud providers which we are today",
    "start": "161099",
    "end": "167340"
  },
  {
    "text": "largely represents a cloud load balancer uh then routing would be your routing configuration so we have HP route and a",
    "start": "167340",
    "end": "174180"
  },
  {
    "text": "bunch of other protocols represented with different route types and then the service is really in this case just the",
    "start": "174180",
    "end": "179400"
  },
  {
    "text": "group of endpoints that you want to route to so in this case word we have a route for Acme store and that's doing",
    "start": "179400",
    "end": "185879"
  },
  {
    "text": "some traffic splitting between store V1 and store V2 so this is a pretty straightforward Gateway API example",
    "start": "185879",
    "end": "192959"
  },
  {
    "text": "now multi-cluster services are maybe a little bit more complicated to explain",
    "start": "192959",
    "end": "198720"
  },
  {
    "text": "so to understand multi-cluster Services you have to understand the concept of a cluster set and a cluster set is a group",
    "start": "198720",
    "end": "204720"
  },
  {
    "text": "of connected services and in this case we're going to say we have an East West and Central cluster",
    "start": "204720",
    "end": "211200"
  },
  {
    "text": "and we're going to say that we have a service in one of those clusters and we want to share it export it to the other",
    "start": "211200",
    "end": "217379"
  },
  {
    "text": "clusters so they can also access this service so what we do is we create a service export",
    "start": "217379",
    "end": "222959"
  },
  {
    "text": "and that service export is going to say to your multi-cluster service",
    "start": "222959",
    "end": "228180"
  },
  {
    "text": "implementation this service right here should be made available to all the",
    "start": "228180",
    "end": "233340"
  },
  {
    "text": "other clusters in this cluster set and what happens is you get service Imports and those other clusters automatically",
    "start": "233340",
    "end": "240000"
  },
  {
    "text": "all throughout the cluster set so that means you have a DNS name and IP address just like a service and all those other",
    "start": "240000",
    "end": "246540"
  },
  {
    "text": "clusters that you can use to access these endpoints even if they're not in your cluster",
    "start": "246540",
    "end": "252180"
  },
  {
    "text": "now that's kind of the basic example of multi-cluster services but kind of the",
    "start": "252180",
    "end": "257400"
  },
  {
    "text": "the next level is that you might have endpoints in more than one cluster that you want to kind of merge together into",
    "start": "257400",
    "end": "262680"
  },
  {
    "text": "one large kind of global multi-cluster Service and in that case there's a concept of",
    "start": "262680",
    "end": "268620"
  },
  {
    "text": "namespace name sameness and in the multi-cluster world that means that two",
    "start": "268620",
    "end": "274080"
  },
  {
    "text": "services that are in the same namespace and have the same name are going to be considered the same service so if you",
    "start": "274080",
    "end": "281460"
  },
  {
    "text": "export both of them they're going to get merged together and a service import is",
    "start": "281460",
    "end": "286860"
  },
  {
    "text": "going to reference endpoints from either cluster that's an important concept as we keep on going and start to layer",
    "start": "286860",
    "end": "292320"
  },
  {
    "text": "Gateway API on top of this so we made it this far you may be",
    "start": "292320",
    "end": "297900"
  },
  {
    "text": "wondering well how do you combine these two apis we've got multi-cluster service we've got Gateway API",
    "start": "297900",
    "end": "303780"
  },
  {
    "text": "well we spent a lot of time talking about that as you'd expect in kubernetes",
    "start": "303780",
    "end": "308880"
  },
  {
    "text": "it takes a while to nail down these standards and there's a lot of nuance here so if you're interested we write we",
    "start": "308880",
    "end": "314280"
  },
  {
    "text": "wrote a whole Gap that's a Gateway enhancement proposal about how these two apis interact and there's a lot of",
    "start": "314280",
    "end": "320759"
  },
  {
    "text": "detail here I'm going to try and give you the very high level summary which is that anywhere you can use a service in",
    "start": "320759",
    "end": "327539"
  },
  {
    "text": "in Gateway API you can use a service import so anywhere you can use a service",
    "start": "327539",
    "end": "332880"
  },
  {
    "text": "you can replace that with a multi-cluster service and that's what we're going to be",
    "start": "332880",
    "end": "337919"
  },
  {
    "text": "covering in today's talk so let's go back to that example we showed at the beginning where Gateway",
    "start": "337919",
    "end": "343740"
  },
  {
    "text": "API was doing some traffic splitting between store V1 and store V2 let's say",
    "start": "343740",
    "end": "349080"
  },
  {
    "text": "that our app developers got a little creative and said well actually my store V2 service it's going to span multiple",
    "start": "349080",
    "end": "355380"
  },
  {
    "text": "clusters now or maybe it's going to be in a different cluster what you would do is instead of just referencing a service",
    "start": "355380",
    "end": "361080"
  },
  {
    "text": "you just replace that one detail and it becomes a service import you're referencing a multi-cluster service and",
    "start": "361080",
    "end": "368340"
  },
  {
    "text": "a multi-cluster set of endpoints and one other detail you might have noticed there is that's what we call a",
    "start": "368340",
    "end": "374100"
  },
  {
    "text": "multi-cluster Gateway there's there's not much to it a multi-cluster Gateway is just a Gateway that supports",
    "start": "374100",
    "end": "379380"
  },
  {
    "text": "referencing multi-cluster services so part of the reason you might be here",
    "start": "379380",
    "end": "385860"
  },
  {
    "text": "is there's a lot of apis here and you might be curious how Cloud providers are",
    "start": "385860",
    "end": "391740"
  },
  {
    "text": "translating these apis into Cloud resources and that's what this next",
    "start": "391740",
    "end": "396840"
  },
  {
    "text": "section is going to talk about uh first I'll hand it over to leewen and she's going to talk about how they're doing it",
    "start": "396840",
    "end": "402600"
  },
  {
    "text": "for AWS VPC lattice let's talk about eks implementation yeah epi",
    "start": "402600",
    "end": "410039"
  },
  {
    "text": "through AWS gave a API controller first we introduce a new Gateway class",
    "start": "410039",
    "end": "417660"
  },
  {
    "text": "Amazon VPC lattice and AWS Gateway API controller will",
    "start": "417660",
    "end": "424139"
  },
  {
    "text": "reconcile gateways and HTTP routes on the Amazon VPC that",
    "start": "424139",
    "end": "430020"
  },
  {
    "text": "is Gateway class and create corresponding VPC lattice resources",
    "start": "430020",
    "end": "436680"
  },
  {
    "text": "accordingly tldr in kubernetes given apis is a",
    "start": "436680",
    "end": "442620"
  },
  {
    "text": "control plane where VPC lattice is a data plane",
    "start": "442620",
    "end": "447900"
  },
  {
    "text": "we have open sourced our Gateway API controller here's the GitHub link",
    "start": "447900",
    "end": "454940"
  },
  {
    "text": "uh and the QR code",
    "start": "454940",
    "end": "458960"
  },
  {
    "text": "here is a high level overview hallway Maps kubernetes Gateway API objects to",
    "start": "463080",
    "end": "470639"
  },
  {
    "text": "AWS VPC resources kubernetes Gateway API",
    "start": "470639",
    "end": "476699"
  },
  {
    "text": "object is mapped to VPC lattice service network",
    "start": "476699",
    "end": "482419"
  },
  {
    "text": "in another word it is a gateway into a VPC lattice service network",
    "start": "482419",
    "end": "489020"
  },
  {
    "text": "kubernetes HTTP route object is mapped to VPC lattice service object",
    "start": "489020",
    "end": "497280"
  },
  {
    "text": "kubernetes service object is mapped to VPC data's Target group object",
    "start": "497280",
    "end": "503940"
  },
  {
    "text": "and the kubernetes path or endpoints are mapped to VPC lattice targets",
    "start": "503940",
    "end": "513560"
  },
  {
    "text": "so what is AWS VPC lattice service VPC ladder service is a unit of",
    "start": "516899",
    "end": "526380"
  },
  {
    "text": "application running on instances serverless and kubernetes parts",
    "start": "526380",
    "end": "533040"
  },
  {
    "text": "it consists of listeners rules and Target group",
    "start": "533040",
    "end": "539220"
  },
  {
    "text": "as you see here kubernetes HTTP route is mapped to",
    "start": "539220",
    "end": "545399"
  },
  {
    "text": "lattice service and HTTP routes routing rules are mapped",
    "start": "545399",
    "end": "551940"
  },
  {
    "text": "to VPC status rules and HTTP route back and graph of kubernetes services are",
    "start": "551940",
    "end": "560100"
  },
  {
    "text": "mapped into VPC lattice Target group and kubernetes endpoints are mapped to VPC",
    "start": "560100",
    "end": "568200"
  },
  {
    "text": "lattice targets",
    "start": "568200",
    "end": "571640"
  },
  {
    "text": "so what is aw bpc that is service network",
    "start": "576120",
    "end": "581880"
  },
  {
    "text": "a VPC that is service network is a logical boundary that is used to",
    "start": "581880",
    "end": "589320"
  },
  {
    "text": "automatically Implement service Discovery and the connectivity and apply",
    "start": "589320",
    "end": "596760"
  },
  {
    "text": "common access and obserability policies to a collection of services",
    "start": "596760",
    "end": "604560"
  },
  {
    "text": "as you see here kubernetes Gateway is mapped to a service network and HTTP",
    "start": "604560",
    "end": "612360"
  },
  {
    "text": "routes which have same Gateway a mapped to the latter Services of that",
    "start": "612360",
    "end": "618779"
  },
  {
    "text": "corresponding lattice service network",
    "start": "618779",
    "end": "623480"
  },
  {
    "text": "so for multi-clusters and multiple vpcs aw bpc lattice is designed to simplify",
    "start": "627420",
    "end": "636779"
  },
  {
    "text": "it and automate service connectivity and security connect Services across vpcs",
    "start": "636779",
    "end": "644940"
  },
  {
    "text": "and their account as you see here there are four different eks clusters",
    "start": "644940",
    "end": "652760"
  },
  {
    "text": "are all connecting to a single AWS VPC lattice service network called my",
    "start": "652760",
    "end": "660540"
  },
  {
    "text": "network in another world all of them will have a Gateway object",
    "start": "660540",
    "end": "666480"
  },
  {
    "text": "my network pointing to lattice service network",
    "start": "666480",
    "end": "671640"
  },
  {
    "text": "called my network so as a service provider for",
    "start": "671640",
    "end": "679040"
  },
  {
    "text": "s1.com VPC one or eks cluster one have a HTTP",
    "start": "679040",
    "end": "686100"
  },
  {
    "text": "route defined for s1.com which has a parent arrive",
    "start": "686100",
    "end": "692220"
  },
  {
    "text": "pointing to Gateway my network similarly the service provider for",
    "start": "692220",
    "end": "699899"
  },
  {
    "text": "s2.com in vpc2 or eks cluster 2 it will have a",
    "start": "699899",
    "end": "707940"
  },
  {
    "text": "HTTP route called s2.com which has a parent ref pointing to",
    "start": "707940",
    "end": "715079"
  },
  {
    "text": "Gateway my network similar logic applies to vpc3 eks Cluster 3 and the vpc4 and",
    "start": "715079",
    "end": "724560"
  },
  {
    "text": "the eks cluster 4. add a as a service consumers",
    "start": "724560",
    "end": "732360"
  },
  {
    "text": "as you see here you have VPC one uks cluster one",
    "start": "732360",
    "end": "738140"
  },
  {
    "text": "all the way to vpc4 Cluster 4 can assume",
    "start": "738140",
    "end": "743899"
  },
  {
    "text": "consume all lattice services s1.com s2.com at three.com s4.com",
    "start": "743899",
    "end": "753140"
  },
  {
    "text": "thanks for Gateway my network",
    "start": "753140",
    "end": "758120"
  },
  {
    "text": "cool that's very cool to see VPC lattice's implementation on eks how that",
    "start": "761060",
    "end": "767100"
  },
  {
    "text": "works and just to compare we'll show how this works on gke and our interpretation",
    "start": "767100",
    "end": "773279"
  },
  {
    "text": "of multi-cluster gateways so at a high level uh there's an idea",
    "start": "773279",
    "end": "779940"
  },
  {
    "text": "that Gateway listeners in Gateway API roughly map to Cloud Concepts Google",
    "start": "779940",
    "end": "786360"
  },
  {
    "text": "Cloud concepts of a forwarding Rule and a Target proxy then again roughly HTTP",
    "start": "786360",
    "end": "793740"
  },
  {
    "text": "routes and other kinds of routes roughly map to a concept of a URL map in gcp",
    "start": "793740",
    "end": "800220"
  },
  {
    "text": "load balancing then finally every kubernetes service each Port maps to a back-end service",
    "start": "800220",
    "end": "807260"
  },
  {
    "text": "then we have this concept of a health check custom health check configuration so an extension mechanism of Gateway API",
    "start": "807260",
    "end": "814380"
  },
  {
    "text": "is that you have a health check policy and you can use that to apply health check custom health check configuration",
    "start": "814380",
    "end": "820620"
  },
  {
    "text": "and then finally maybe one of the most important details is individual endpoints are mapped to network endpoint",
    "start": "820620",
    "end": "827339"
  },
  {
    "text": "groups that similar to eks allows us to load balance directly to pods instead of",
    "start": "827339",
    "end": "834420"
  },
  {
    "text": "making that kind of second hop from a node and then to a pod so all of this roughly Maps together and you can",
    "start": "834420",
    "end": "840720"
  },
  {
    "text": "already say well this looks a little complicated well keep in mind that's just one layer of translation you kind",
    "start": "840720",
    "end": "847440"
  },
  {
    "text": "of have to map everything together so both the routes gateways you have to",
    "start": "847440",
    "end": "852480"
  },
  {
    "text": "connect everything on that side and then on the other side on gcp side everything has to be connected to so this is just a",
    "start": "852480",
    "end": "858720"
  },
  {
    "text": "lot of stuff that you don't really need to worry about but that's what that's what happening behind the scenes in our gka Gateway controller",
    "start": "858720",
    "end": "865320"
  },
  {
    "text": "now an important concept to understand will be coming back to this over and over through the demos and later on in",
    "start": "865320",
    "end": "871079"
  },
  {
    "text": "this talk is that of a config cluster and a config cluster in gke means that",
    "start": "871079",
    "end": "876240"
  },
  {
    "text": "within our cluster set or in gke the term is a fleet but a cluster set in",
    "start": "876240",
    "end": "881399"
  },
  {
    "text": "this case uh we have one cluster that's designated as the config cluster and that means all",
    "start": "881399",
    "end": "887639"
  },
  {
    "text": "your gateways HTTP routes and Etc are read from that single cluster so the GK Gateway controller lives oh",
    "start": "887639",
    "end": "896160"
  },
  {
    "text": "got out of sync with what I have here well that's cool the GK Gateway controller lives outside of your",
    "start": "896160",
    "end": "902160"
  },
  {
    "text": "clusters and that's well and good uh and inside of your clusters you have Gateway",
    "start": "902160",
    "end": "908760"
  },
  {
    "text": "configuration and in this case we have a single config cluster where your gateway controller is pointed now it caught up",
    "start": "908760",
    "end": "916019"
  },
  {
    "text": "we'll get there eventually uh hopefully we're in sync now so we have some other clusters but they",
    "start": "916019",
    "end": "923279"
  },
  {
    "text": "don't matter to the GK Gateway controller it's just looking at a single cluster and we'll come back to that in",
    "start": "923279",
    "end": "928380"
  },
  {
    "text": "just a little bit now our GK Gateway implementation supports two kinds of cloud load",
    "start": "928380",
    "end": "934079"
  },
  {
    "text": "balancers high level generalization at least one is a regional ilb and the",
    "start": "934079",
    "end": "939600"
  },
  {
    "text": "other is a global external load balancer that's what we'll be focusing on today uh that's as you'd expect resilient to a",
    "start": "939600",
    "end": "946139"
  },
  {
    "text": "zonal or Regional outage and can forward traffic to any back-end Network or region",
    "start": "946139",
    "end": "951899"
  },
  {
    "text": "uh an important concept as we're understanding the demos further on is",
    "start": "951899",
    "end": "957540"
  },
  {
    "text": "that all traffic by default is going to be routed to the closest region where there's capacity so if you have capacity",
    "start": "957540",
    "end": "964079"
  },
  {
    "text": "in a cluster that's close to you you're going to be routed there when that cluster fills up you'll spill over to",
    "start": "964079",
    "end": "969959"
  },
  {
    "text": "the next closest region or cluster now you may be asking well this is all",
    "start": "969959",
    "end": "975720"
  },
  {
    "text": "well and good but wow this is really out of sync I'm sorry",
    "start": "975720",
    "end": "980820"
  },
  {
    "text": "um you may be asking what if a cluster or region fails",
    "start": "980820",
    "end": "985920"
  },
  {
    "text": "that's especially problematic right we'll be covering lots of different failure scenarios in the demo ahead",
    "start": "985920",
    "end": "993180"
  },
  {
    "text": "and I'll just leave it that and I'll hand it back to Lee when to cover how",
    "start": "993180",
    "end": "998220"
  },
  {
    "text": "this works on VPC lattice",
    "start": "998220",
    "end": "1001899"
  },
  {
    "text": "now let me show you how a VPC looks a little bit louder it looks like",
    "start": "1003259",
    "end": "1009980"
  },
  {
    "text": "so here's the Gateway class Amazon VPC lattice",
    "start": "1009980",
    "end": "1015920"
  },
  {
    "text": "um you see we have a new controller called Gateway API controller",
    "start": "1015920",
    "end": "1022579"
  },
  {
    "text": "and I have created a Gateway object",
    "start": "1022579",
    "end": "1029558"
  },
  {
    "text": "called cubecom demo it is using Gateway Amazon bpc lattice",
    "start": "1029559",
    "end": "1036438"
  },
  {
    "text": "Gateway class",
    "start": "1036439",
    "end": "1039339"
  },
  {
    "text": "and I have also created a HTTP route",
    "start": "1042140",
    "end": "1047178"
  },
  {
    "text": "called kubecon Dash parking",
    "start": "1047179",
    "end": "1051980"
  },
  {
    "text": "um in this qcom uh demo parking HTTP object",
    "start": "1055100",
    "end": "1062720"
  },
  {
    "text": "you see here basically I have for past go to slash",
    "start": "1062720",
    "end": "1070160"
  },
  {
    "text": "rate we'll go to kuberneteservices rates and for pass slash review we'll go to",
    "start": "1070160",
    "end": "1077179"
  },
  {
    "text": "kubernetes Services review and they all using their parent graph",
    "start": "1077179",
    "end": "1084380"
  },
  {
    "text": "are all points to cubecom demo now let me show you the traffic so here",
    "start": "1084380",
    "end": "1090860"
  },
  {
    "text": "are all the parts in this cluster and this is HTTP route with the hostname parking d1cubecon demo.com",
    "start": "1090860",
    "end": "1098900"
  },
  {
    "text": "now let me extract into a kubernetes part",
    "start": "1098900",
    "end": "1104000"
  },
  {
    "text": "and as you see here when I curl parking D1 coupon demo.com",
    "start": "1104000",
    "end": "1111380"
  },
  {
    "text": "slash reviews I go to one of the review parts",
    "start": "1111380",
    "end": "1117620"
  },
  {
    "text": "so um and these parts basically is a simple Echo",
    "start": "1117620",
    "end": "1124460"
  },
  {
    "text": "server just reply is who I am the part name and give a name of the Hunter",
    "start": "1124460",
    "end": "1131419"
  },
  {
    "text": "and so now when I curl slash rate it",
    "start": "1131419",
    "end": "1136760"
  },
  {
    "text": "goes to one of the rate part as you see it matches the name of the pot",
    "start": "1136760",
    "end": "1144759"
  },
  {
    "text": "now let me show you um the blue green deployment across multiple cluster",
    "start": "1148640",
    "end": "1155320"
  },
  {
    "text": "in this case in cluster one I have a HTTP route",
    "start": "1155320",
    "end": "1161660"
  },
  {
    "text": "inventory the service owner of inventory wants to deploy a new version in class 2. here",
    "start": "1161660",
    "end": "1170360"
  },
  {
    "text": "are a few reasons one reason is the inventory service owner want to upgrade",
    "start": "1170360",
    "end": "1176780"
  },
  {
    "text": "to use new version of kubernetes for example you want to use new feature in",
    "start": "1176780",
    "end": "1181880"
  },
  {
    "text": "kubernetes 1.24 but other services in cluster 1 say",
    "start": "1181880",
    "end": "1187940"
  },
  {
    "text": "example F1 app2 they are now ready to upgrade the new kubernetes version yet",
    "start": "1187940",
    "end": "1193400"
  },
  {
    "text": "that's one of the reasons the inventory service owner I'm going to try some of my part workload in new kubernetes",
    "start": "1193400",
    "end": "1200720"
  },
  {
    "text": "service new kubernetes clusters another reason is [Music] um",
    "start": "1200720",
    "end": "1206240"
  },
  {
    "text": "the the inventory service owner want to double the workload and and as you know the custom one is",
    "start": "1206240",
    "end": "1213860"
  },
  {
    "text": "already at its full capacity for example it has reached the maximum number of parts in the cluster one so instead of",
    "start": "1213860",
    "end": "1222080"
  },
  {
    "text": "scale up and try out your scalability during the production we want to scare",
    "start": "1222080",
    "end": "1228440"
  },
  {
    "text": "out so inventory service owner wants to move the workload to double the workload",
    "start": "1228440",
    "end": "1234559"
  },
  {
    "text": "to Cluster 2. so here I want to show you how it happens",
    "start": "1234559",
    "end": "1240400"
  },
  {
    "text": "so now I'm creating a new cluster a yellow cluster",
    "start": "1240400",
    "end": "1245840"
  },
  {
    "text": "in the yellow cluster as you see here I have created a inventory version 2.",
    "start": "1245840",
    "end": "1252020"
  },
  {
    "text": "and as you see here the parts they have the address of 192 168 the private",
    "start": "1252020",
    "end": "1258620"
  },
  {
    "text": "address I just want to show you the same how we solve the overlapping IP address in the",
    "start": "1258620",
    "end": "1265880"
  },
  {
    "text": "y in the first cluster um same thing I have you know inventory",
    "start": "1265880",
    "end": "1271520"
  },
  {
    "text": "version one I have all these parts they all use the same private address 192.168",
    "start": "1271520",
    "end": "1278480"
  },
  {
    "text": "okay now let's go back to the second cluster here I create a service export",
    "start": "1278480",
    "end": "1286280"
  },
  {
    "text": "um and call inventory version two well the service export does here is as",
    "start": "1286280",
    "end": "1292520"
  },
  {
    "text": "you see here the key thing here I have a multi-cluster federation Amazon VPC that",
    "start": "1292520",
    "end": "1298340"
  },
  {
    "text": "is so all controller will look at the service export and create a Target group accordingly",
    "start": "1298340",
    "end": "1305120"
  },
  {
    "text": "now let's go back to the first cluster um I have a HTTP rocket HTTP route",
    "start": "1305120",
    "end": "1312140"
  },
  {
    "text": "inventory as you see here in the inventory here",
    "start": "1312140",
    "end": "1318260"
  },
  {
    "text": "um just want to show you um so right now as I'm start deploying",
    "start": "1318260",
    "end": "1324380"
  },
  {
    "text": "uh awaited so 90 of traffic will go to local version one and 10 will go to",
    "start": "1324380",
    "end": "1330620"
  },
  {
    "text": "service import version 2 in second cluster now let me show you the traffic",
    "start": "1330620",
    "end": "1337460"
  },
  {
    "text": "okay it's back to okay um let's go see the pass in this cluster",
    "start": "1337460",
    "end": "1343400"
  },
  {
    "text": "let's go to one of the uh part and",
    "start": "1343400",
    "end": "1349100"
  },
  {
    "text": "let's see that you go back go into the review part",
    "start": "1349100",
    "end": "1354340"
  },
  {
    "text": "um let's just curl the inventory service",
    "start": "1359419",
    "end": "1365600"
  },
  {
    "text": "you'll see here because 90 will go to version one and now let's just wanna",
    "start": "1366620",
    "end": "1372620"
  },
  {
    "text": "continuously traffic Loop here",
    "start": "1372620",
    "end": "1377140"
  },
  {
    "text": "as you see here ninety percent will go to version one and let's wait until we see",
    "start": "1379400",
    "end": "1389080"
  },
  {
    "text": "okay now we see you know some you know ten percent go to version two all right",
    "start": "1391039",
    "end": "1396740"
  },
  {
    "text": "now I'm pretty confident inventory service owner pretty confident about the",
    "start": "1396740",
    "end": "1401780"
  },
  {
    "text": "second version that just changed the percentage okay now let's change ten",
    "start": "1401780",
    "end": "1408860"
  },
  {
    "text": "percent and to version one ninety percent version two to the second cluster",
    "start": "1408860",
    "end": "1414260"
  },
  {
    "text": "that just double check and we modified this correctly",
    "start": "1414260",
    "end": "1418900"
  },
  {
    "text": "okay now let's demo god with me let's apply the change",
    "start": "1419659",
    "end": "1425539"
  },
  {
    "text": "all right we apply now um let's just confirm it's yeah it's ten",
    "start": "1425539",
    "end": "1433640"
  },
  {
    "text": "percent version one ninety percent version two now let's see the traffic shifting",
    "start": "1433640",
    "end": "1439340"
  },
  {
    "text": "um now let's see uh the new HTTP route gets populated VPC lattice data play now",
    "start": "1439340",
    "end": "1445940"
  },
  {
    "text": "you see here it's get populated ninety percent will go to version two",
    "start": "1445940",
    "end": "1452200"
  },
  {
    "text": "cool am I on I can't remember okay I think I'm back all right that was a great demo",
    "start": "1453380",
    "end": "1460220"
  },
  {
    "text": "uh let's move right back in because I know we have limited time left and I want to show how these same apis can be",
    "start": "1460220",
    "end": "1467539"
  },
  {
    "text": "used on gke so first off we're going to start with two clusters in a cluster set or GK",
    "start": "1467539",
    "end": "1474620"
  },
  {
    "text": "Fleet uh one of those clusters is going to be based in the US and the other cluster is going to be based in Europe",
    "start": "1474620",
    "end": "1480919"
  },
  {
    "text": "just right over here in the Netherlands actually and in both cases we're going to have the same config mirrored in both",
    "start": "1480919",
    "end": "1488059"
  },
  {
    "text": "clusters so we're going to have a Gateway HP route and service Import in",
    "start": "1488059",
    "end": "1493760"
  },
  {
    "text": "all clusters this may sound a little weird because remember our Gateway controller is only looking at that one",
    "start": "1493760",
    "end": "1500240"
  },
  {
    "text": "cluster at our config cluster but soon this will become important so we're",
    "start": "1500240",
    "end": "1505940"
  },
  {
    "text": "starting here and let's work on actually building this out so first up we'll go end to end here",
    "start": "1505940",
    "end": "1512000"
  },
  {
    "text": "we'll create a couple clusters I'll you know this this is pretty straightforward at this point so I'll skip over that but",
    "start": "1512000",
    "end": "1518600"
  },
  {
    "text": "then once we have the Clusters up we can go ahead and register them to our Fleet",
    "start": "1518600",
    "end": "1524480"
  },
  {
    "text": "which is just our term for a cluster set uh now that they're registered uh we can",
    "start": "1524480",
    "end": "1530779"
  },
  {
    "text": "go ahead and get Gateway class and you can say oh look at that we have some Gateway classes that we can use for our",
    "start": "1530779",
    "end": "1536419"
  },
  {
    "text": "gateways and we've got a few and the ones that end in dash MC mean they're",
    "start": "1536419",
    "end": "1542179"
  },
  {
    "text": "multi-clustered enabled but you may remember you know we have more than one cluster here there's two clusters",
    "start": "1542179",
    "end": "1549020"
  },
  {
    "text": "you probably want to see the config in both clusters so for most of the rest of this talk we'll be using a tool called",
    "start": "1549020",
    "end": "1554960"
  },
  {
    "text": "Cube cuddlemc this makes it really easy to work with multiple clusters it",
    "start": "1554960",
    "end": "1560179"
  },
  {
    "text": "basically is just a loop that applies the same Cube cuddle commands whether it's git apply whatever to multiple",
    "start": "1560179",
    "end": "1565640"
  },
  {
    "text": "clusters as you configure so if you're interested there's a link to it there so I'm just going to run the",
    "start": "1565640",
    "end": "1571460"
  },
  {
    "text": "same command again but with Cube cuddlemc and now you can see our us cluster and our EU cluster both have the",
    "start": "1571460",
    "end": "1577700"
  },
  {
    "text": "same Gateway classes available all right so we've got that set up let's",
    "start": "1577700",
    "end": "1583220"
  },
  {
    "text": "build out our store application this is a really simple application it's really just Echo server but we're calling it",
    "start": "1583220",
    "end": "1589820"
  },
  {
    "text": "store to make it interesting I guess so first off we're going to have a service in both names in both clusters a",
    "start": "1589820",
    "end": "1597440"
  },
  {
    "text": "deployment in both clusters just with two pods and then we're going to export that so it joins into this kind of",
    "start": "1597440",
    "end": "1603440"
  },
  {
    "text": "global multi-cluster Service that comprises endpoints from both clusters",
    "start": "1603440",
    "end": "1609500"
  },
  {
    "text": "so with that first we're going to apply that configuration again in both clusters using Cube cuddle MC we can see",
    "start": "1609500",
    "end": "1616279"
  },
  {
    "text": "it's applied first and US1 oh sorry and second in eu1",
    "start": "1616279",
    "end": "1624400"
  },
  {
    "text": "thank you sorry um next up we're going to get pods",
    "start": "1627140",
    "end": "1634400"
  },
  {
    "text": "and in that case we're going to see that we have two pods in each cluster these",
    "start": "1634400",
    "end": "1640159"
  },
  {
    "text": "are just Echo server pods nothing fancy here but it allows us to see when we're making a request what pod we're actually",
    "start": "1640159",
    "end": "1645260"
  },
  {
    "text": "getting it to so with that applied we can also take a look at our service import remember",
    "start": "1645260",
    "end": "1651140"
  },
  {
    "text": "service Imports give us an IP they also give us a DNS name dot clusterset.local",
    "start": "1651140",
    "end": "1656419"
  },
  {
    "text": "instead of.cluster.local and so that means even without Gateway you could make a request in either cluster and be",
    "start": "1656419",
    "end": "1662000"
  },
  {
    "text": "routed to endpoints across clusters and that would work but Gateway layers",
    "start": "1662000",
    "end": "1667400"
  },
  {
    "text": "on a lot more we're going to get there now since we're talking about Gateway layering on so much more it might be",
    "start": "1667400",
    "end": "1674779"
  },
  {
    "text": "helpful from a Gateway perspective to be able to Target some subset so maybe you just want to Target endpoints in US",
    "start": "1674779",
    "end": "1682340"
  },
  {
    "text": "clusters or EU clusters for example so we're going to Fan this out a little bit",
    "start": "1682340",
    "end": "1687620"
  },
  {
    "text": "it's going to look a little intimidating but we're going to create a regional service so just a service that's unique",
    "start": "1687620",
    "end": "1694279"
  },
  {
    "text": "to our us cluster that's just called store us it targets the same deployment the same pods but it only exists in our",
    "start": "1694279",
    "end": "1702440"
  },
  {
    "text": "us cluster or clusters and similar in the EU cluster so what that means is we",
    "start": "1702440",
    "end": "1708020"
  },
  {
    "text": "now have three different multi-cluster services that we can reference anywhere so we can reference our us pods our EU",
    "start": "1708020",
    "end": "1714440"
  },
  {
    "text": "pods or all pods all right so we're going to apply this configuration",
    "start": "1714440",
    "end": "1720919"
  },
  {
    "text": "and first up we're applying our us config our US service and our us cluster",
    "start": "1720919",
    "end": "1725960"
  },
  {
    "text": "and our EU service in our EU cluster we've made it all this way let's get",
    "start": "1725960",
    "end": "1732320"
  },
  {
    "text": "into our Gateway configuration we're going to use our L7 xlb multi-cluster",
    "start": "1732320",
    "end": "1738080"
  },
  {
    "text": "enabled Gateway class we're going to be listening on HPS and of course we're just using a pre-generated HBS TLS cert",
    "start": "1738080",
    "end": "1746960"
  },
  {
    "text": "uh next we're going to go ahead and apply that configuration and remember we've applied this in both",
    "start": "1746960",
    "end": "1754100"
  },
  {
    "text": "clusters we're mirroring things in both clusters but our Gateway controller is only looking at one of those clusters so",
    "start": "1754100",
    "end": "1760580"
  },
  {
    "text": "with that said let's take a quick look Gateway controllers only looking at our",
    "start": "1760580",
    "end": "1765620"
  },
  {
    "text": "EU cluster because that's set up to be our config cluster so when we use Cube cuddle MC again to take a look at these",
    "start": "1765620",
    "end": "1771020"
  },
  {
    "text": "gateways you're going to see something a little funny one Gateway is just completely ignored there's no address it's not programmed it's just it's just",
    "start": "1771020",
    "end": "1777620"
  },
  {
    "text": "sitting there the other Gateway has an address it's programmed it's ready to go that's by design it feels a little weird",
    "start": "1777620",
    "end": "1784820"
  },
  {
    "text": "but we'll get to why we might want to use that soon all right so next up let's talk about",
    "start": "1784820",
    "end": "1790340"
  },
  {
    "text": "our HP route and in this case we're going to send all traffic that starts with Slash EU to our EU service",
    "start": "1790340",
    "end": "1798440"
  },
  {
    "text": "all traffic that starts with Slash us to our US service and then finally anything",
    "start": "1798440",
    "end": "1803480"
  },
  {
    "text": "else to our Global store service so pods regardless of where they are",
    "start": "1803480",
    "end": "1809779"
  },
  {
    "text": "so we'll go ahead and apply this configuration and with that good to go we can keep on",
    "start": "1809779",
    "end": "1816799"
  },
  {
    "text": "moving and start making some curl requests so I just took this up to personal domain and in this case you can see",
    "start": "1816799",
    "end": "1824120"
  },
  {
    "text": "because my requests were coming from the US I got routed to us Central that was",
    "start": "1824120",
    "end": "1829159"
  },
  {
    "text": "the closest cluster to me now if I make that same request and do slash EU I'm going to get routed to a",
    "start": "1829159",
    "end": "1837080"
  },
  {
    "text": "pod right here in the Netherlands now you may be asking what happens if a",
    "start": "1837080",
    "end": "1842240"
  },
  {
    "text": "cluster fails what happens when things break that's that's why we're here how do we recover from things breaking so a",
    "start": "1842240",
    "end": "1848240"
  },
  {
    "text": "really simple way to simulate that is let's say all the pods just disappear they go unhealthy any any variation of",
    "start": "1848240",
    "end": "1853940"
  },
  {
    "text": "that in one cluster so in this case I'm going to make them all disappear in my us cluster",
    "start": "1853940",
    "end": "1859760"
  },
  {
    "text": "and start making some requests and regardless of what my request is to I'm",
    "start": "1859760",
    "end": "1864919"
  },
  {
    "text": "going to be routed to Europe because that's the only place I have healthy pods left so that's a nice kind of",
    "start": "1864919",
    "end": "1870919"
  },
  {
    "text": "automatic failover for you but what happens if we have an even more catastrophic failure what if our config",
    "start": "1870919",
    "end": "1876980"
  },
  {
    "text": "cluster goes away what if our region goes away what if something like really catastrophic happens",
    "start": "1876980",
    "end": "1882080"
  },
  {
    "text": "well I've been setting this up for a while but let's say that this config cluster",
    "start": "1882080",
    "end": "1887720"
  },
  {
    "text": "you can't reach it something went awfully wrong with it well we've been mirroring all our configuration along so",
    "start": "1887720",
    "end": "1892940"
  },
  {
    "text": "we just make one command and we say actually this this cluster is now our source of Truth everything's the same so",
    "start": "1892940",
    "end": "1899960"
  },
  {
    "text": "we'll make one little switch actually our config cluster is US1",
    "start": "1899960",
    "end": "1905419"
  },
  {
    "text": "instead of eu1 that's done and now that becomes our source of Truth so we'll keep on moving and I'm running",
    "start": "1905419",
    "end": "1912140"
  },
  {
    "text": "out of time so I'll run real quickly through this but we're just going to say regardless of where you're requesting we're just going to send endpoint",
    "start": "1912140",
    "end": "1918320"
  },
  {
    "text": "traffic to the pods that we know are healthy which are in US1 so we'll go ahead make that change and",
    "start": "1918320",
    "end": "1924799"
  },
  {
    "text": "we're making that change only in our us cluster because we're assuming that's the only one in this case that we have",
    "start": "1924799",
    "end": "1930140"
  },
  {
    "text": "access to so we make that change go ahead and make some curl requests and",
    "start": "1930140",
    "end": "1935899"
  },
  {
    "text": "whatever we're requesting including slash EU is going to get routed to the",
    "start": "1935899",
    "end": "1940940"
  },
  {
    "text": "cluster that we know is healthy at this point in time now I've got to keep running here but",
    "start": "1940940",
    "end": "1946760"
  },
  {
    "text": "there's so much more that Gateway API offers I'm really excited Gateway API is implemented by something like 20",
    "start": "1946760",
    "end": "1953059"
  },
  {
    "text": "different implementations this is the set of features a subset of features that are enabled on gke but there's so",
    "start": "1953059",
    "end": "1959659"
  },
  {
    "text": "much more available out there uh there's a link there that gives you a bit more of what's available but this is really",
    "start": "1959659",
    "end": "1966799"
  },
  {
    "text": "exciting and we're just starting there's so much more to come so I encourage",
    "start": "1966799",
    "end": "1971840"
  },
  {
    "text": "everyone to get involved these this is all based on open source apis we showed",
    "start": "1971840",
    "end": "1977480"
  },
  {
    "text": "how a couple of cloud providers are implementing these apis but there's tons of room for anyone here to help get",
    "start": "1977480",
    "end": "1984679"
  },
  {
    "text": "involved and Define the future of these apis so there's really three different things here there's Gateway API we're",
    "start": "1984679",
    "end": "1992000"
  },
  {
    "text": "hoping to get that 2ga this year in 2023 there's multi-cluster service API",
    "start": "1992000",
    "end": "1997159"
  },
  {
    "text": "there's a lot of work going on to get that to Beta this year and then gamma is",
    "start": "1997159",
    "end": "2002740"
  },
  {
    "text": "kind of the mesh initiative that Bridges a lot of these Concepts together and we're hoping to formally Define that get",
    "start": "2002740",
    "end": "2008380"
  },
  {
    "text": "that to experimental we've got I think every mesh vendor out there is involved in this so really excited to see the",
    "start": "2008380",
    "end": "2014200"
  },
  {
    "text": "convergence here so there are all kinds of ways to get involved with Gateway API we actually",
    "start": "2014200",
    "end": "2019539"
  },
  {
    "text": "have two meetings every week so we have weekly Community meetings covering everything on Mondays uh gamma meetings",
    "start": "2019539",
    "end": "2026500"
  },
  {
    "text": "that's our mesh focused thing on Tuesdays there's actually another meeting on Fridays I forgot to add we've",
    "start": "2026500",
    "end": "2031720"
  },
  {
    "text": "got a lot of things going on there's no shortage of ways to get involved if you're interested and then finally Sig",
    "start": "2031720",
    "end": "2037299"
  },
  {
    "text": "multi-cluster they meet once every two weeks and also lots of opportunities to get involved and Define the future of",
    "start": "2037299",
    "end": "2043779"
  },
  {
    "text": "these apis all right thanks so much for your time uh we've got people here who",
    "start": "2043779",
    "end": "2049358"
  },
  {
    "text": "can help answer questions both from the AWS side and also if you want to reach out to Lee win she's available on",
    "start": "2049359",
    "end": "2056320"
  },
  {
    "text": "kubernetes slack if you have questions I know we're basically at time but if you do have questions if you can line up at",
    "start": "2056320",
    "end": "2062560"
  },
  {
    "text": "the microphones ah that'd be very helpful thanks so much [Applause]",
    "start": "2062560",
    "end": "2075999"
  }
]