[
  {
    "start": "0",
    "end": "124000"
  },
  {
    "text": "hello and good afternoon I'm Sally Ross",
    "start": "0",
    "end": "2820"
  },
  {
    "text": "I work on metrics and monitoring and pod",
    "start": "2820",
    "end": "6839"
  },
  {
    "text": "auto-scaling and a whole assortment of",
    "start": "6839",
    "end": "8429"
  },
  {
    "text": "other stuff at Red Hat and I'm the sig",
    "start": "8429",
    "end": "11010"
  },
  {
    "text": "lead for sig auto-scaling",
    "start": "11010",
    "end": "12480"
  },
  {
    "text": "one of the two and a magic Patel I'm a",
    "start": "12480",
    "end": "15389"
  },
  {
    "text": "software developer at Google I work at",
    "start": "15389",
    "end": "17670"
  },
  {
    "text": "both port and note auto scaling in",
    "start": "17670",
    "end": "20850"
  },
  {
    "text": "kinetise and UK so let's get started and",
    "start": "20850",
    "end": "26580"
  },
  {
    "text": "I wanted to start this talk by telling",
    "start": "26580",
    "end": "29099"
  },
  {
    "text": "you about this cool app I load for",
    "start": "29099",
    "end": "31410"
  },
  {
    "text": "serving some data to our customers it",
    "start": "31410",
    "end": "35219"
  },
  {
    "text": "works",
    "start": "35219",
    "end": "35700"
  },
  {
    "text": "it delivers data it's pretty fast as you",
    "start": "35700",
    "end": "38100"
  },
  {
    "text": "can see by the blurry background and I",
    "start": "38100",
    "end": "40140"
  },
  {
    "text": "didn't like it and it turns out other",
    "start": "40140",
    "end": "41850"
  },
  {
    "text": "people also like it",
    "start": "41850",
    "end": "44129"
  },
  {
    "text": "so they started using it a lot and now",
    "start": "44129",
    "end": "48840"
  },
  {
    "text": "it cannot handle all the load so I guess",
    "start": "48840",
    "end": "51600"
  },
  {
    "text": "I need to scale it and I have some",
    "start": "51600",
    "end": "53610"
  },
  {
    "text": "vacation time coming up so I need to do",
    "start": "53610",
    "end": "55739"
  },
  {
    "text": "it quickly",
    "start": "55739",
    "end": "56370"
  },
  {
    "text": "sorry can you just help me here and walk",
    "start": "56370",
    "end": "59160"
  },
  {
    "text": "me to my options yeah so I mean you",
    "start": "59160",
    "end": "62070"
  },
  {
    "text": "could create more replicas of this",
    "start": "62070",
    "end": "65338"
  },
  {
    "text": "application which is great if you don't",
    "start": "65339",
    "end": "67920"
  },
  {
    "text": "have a ton of state and you can just",
    "start": "67920",
    "end": "69840"
  },
  {
    "text": "create more and they can all handle your",
    "start": "69840",
    "end": "71610"
  },
  {
    "text": "traffic you could also scale a single",
    "start": "71610",
    "end": "75060"
  },
  {
    "text": "instance of that application up make it",
    "start": "75060",
    "end": "77340"
  },
  {
    "text": "beefier give it more RAM and CPU which",
    "start": "77340",
    "end": "79290"
  },
  {
    "text": "would be great if you have a lot of",
    "start": "79290",
    "end": "80790"
  },
  {
    "text": "state and it's not easy to scale out so",
    "start": "80790",
    "end": "84840"
  },
  {
    "text": "that makes sense",
    "start": "84840",
    "end": "85619"
  },
  {
    "text": "so I think I'll go with the more",
    "start": "85619",
    "end": "86880"
  },
  {
    "text": "instances options because that could",
    "start": "86880",
    "end": "89400"
  },
  {
    "text": "require some minor D factors to my app",
    "start": "89400",
    "end": "91350"
  },
  {
    "text": "so let me just update some configs and",
    "start": "91350",
    "end": "94470"
  },
  {
    "text": "I'm good to go",
    "start": "94470",
    "end": "95670"
  },
  {
    "text": "I guess and it's done it's working now",
    "start": "95670",
    "end": "99619"
  },
  {
    "text": "everything's fine I can go for my",
    "start": "99619",
    "end": "101729"
  },
  {
    "text": "vacation except that happens but that's",
    "start": "101729",
    "end": "106200"
  },
  {
    "text": "yeah by the way there's like more people",
    "start": "106200",
    "end": "108299"
  },
  {
    "text": "using your app now yeah exactly",
    "start": "108299",
    "end": "112140"
  },
  {
    "text": "well I I got this I just update a few",
    "start": "112140",
    "end": "114780"
  },
  {
    "text": "configs and I'm good to go so that's it",
    "start": "114780",
    "end": "118409"
  },
  {
    "text": "I'm done Thanks yeah I mean I really",
    "start": "118409",
    "end": "124710"
  },
  {
    "start": "124000",
    "end": "366000"
  },
  {
    "text": "wish there was some sort of a machine",
    "start": "124710",
    "end": "126509"
  },
  {
    "text": "that could do that for me you know do",
    "start": "126509",
    "end": "128700"
  },
  {
    "text": "this repetitive step of updating config",
    "start": "128700",
    "end": "132030"
  },
  {
    "text": "to scale automatically",
    "start": "132030",
    "end": "133860"
  },
  {
    "text": "it's a really good thing you're working",
    "start": "133860",
    "end": "135000"
  },
  {
    "text": "on kubernetes then yeah we have this",
    "start": "135000",
    "end": "137100"
  },
  {
    "text": "concept of auto scaling and I mean the",
    "start": "137100",
    "end": "140190"
  },
  {
    "text": "concept is really simple it's just",
    "start": "140190",
    "end": "141450"
  },
  {
    "text": "adding all the moving resources as",
    "start": "141450",
    "end": "144210"
  },
  {
    "text": "required by your application and as you",
    "start": "144210",
    "end": "148620"
  },
  {
    "text": "may have guessed from our study before",
    "start": "148620",
    "end": "150920"
  },
  {
    "text": "we think about two kinds of auto scaling",
    "start": "150920",
    "end": "153810"
  },
  {
    "text": "so horizontal is adding more instances",
    "start": "153810",
    "end": "157230"
  },
  {
    "text": "and a solely set that works pretty well",
    "start": "157230",
    "end": "159780"
  },
  {
    "text": "for any stateless workload maybe Excel",
    "start": "159780",
    "end": "162870"
  },
  {
    "text": "Inc workload is a usual example workers",
    "start": "162870",
    "end": "166200"
  },
  {
    "text": "pulling from work you web servers things",
    "start": "166200",
    "end": "169710"
  },
  {
    "text": "like that yeah and then we have vertical",
    "start": "169710",
    "end": "172650"
  },
  {
    "text": "scaling and this is basically making",
    "start": "172650",
    "end": "176880"
  },
  {
    "text": "your instance bigger or smaller based on",
    "start": "176880",
    "end": "179640"
  },
  {
    "text": "the resource usage and this is better",
    "start": "179640",
    "end": "181709"
  },
  {
    "text": "for sort of state heavy applications",
    "start": "181709",
    "end": "184320"
  },
  {
    "text": "that we just cannot replicate easily",
    "start": "184320",
    "end": "186030"
  },
  {
    "text": "then it's like a database or hipster for",
    "start": "186030",
    "end": "189720"
  },
  {
    "text": "instance oh yeah so if you want to learn",
    "start": "189720",
    "end": "192660"
  },
  {
    "text": "more about vertical out of Skylink we",
    "start": "192660",
    "end": "194880"
  },
  {
    "text": "have a sick-out of scaling deep dive",
    "start": "194880",
    "end": "197190"
  },
  {
    "text": "tomorrow at 25 past fall and that's what",
    "start": "197190",
    "end": "200820"
  },
  {
    "text": "we're going to talk about that among",
    "start": "200820",
    "end": "202530"
  },
  {
    "text": "other things and in this presentation",
    "start": "202530",
    "end": "204780"
  },
  {
    "text": "will focus on horizontal auto scaling in",
    "start": "204780",
    "end": "207090"
  },
  {
    "text": "kubernetes and so it's going to be about",
    "start": "207090",
    "end": "211130"
  },
  {
    "text": "horizontal pod out of scale or HP a",
    "start": "211130",
    "end": "214050"
  },
  {
    "text": "photoshop and basically HP a does is it",
    "start": "214050",
    "end": "218459"
  },
  {
    "text": "changes the number of replicas based on",
    "start": "218459",
    "end": "221370"
  },
  {
    "text": "the predefined target and current load",
    "start": "221370",
    "end": "225030"
  },
  {
    "text": "and it has been available for a while",
    "start": "225030",
    "end": "229920"
  },
  {
    "text": "I think v1 was actually g8 in like 1.2",
    "start": "229920",
    "end": "232650"
  },
  {
    "text": "timeframe but it it's pretty limited it",
    "start": "232650",
    "end": "236100"
  },
  {
    "text": "only supports cpu-based",
    "start": "236100",
    "end": "238019"
  },
  {
    "text": "auto scaling which is critical but also",
    "start": "238019",
    "end": "240840"
  },
  {
    "text": "not enough many applications so we're",
    "start": "240840",
    "end": "245130"
  },
  {
    "text": "now working on v2 which supports custom",
    "start": "245130",
    "end": "247860"
  },
  {
    "text": "metrics and this is currently in beta",
    "start": "247860",
    "end": "251330"
  },
  {
    "text": "yeah so how do you use HPA as most",
    "start": "251330",
    "end": "256260"
  },
  {
    "text": "things in kubernetes it starts with a",
    "start": "256260",
    "end": "258299"
  },
  {
    "text": "YUM and here is this young Oh as much of",
    "start": "258299",
    "end": "263280"
  },
  {
    "text": "it as I managed to put on a slide but",
    "start": "263280",
    "end": "264900"
  },
  {
    "text": "it's not much longer",
    "start": "264900",
    "end": "266850"
  },
  {
    "text": "and the important things that we need to",
    "start": "266850",
    "end": "268410"
  },
  {
    "text": "define is really basically what you're",
    "start": "268410",
    "end": "270930"
  },
  {
    "text": "going to outer scale so this difference",
    "start": "270930",
    "end": "273720"
  },
  {
    "text": "to have deployment or the replication",
    "start": "273720",
    "end": "276600"
  },
  {
    "text": "controller stateful set whatever you",
    "start": "276600",
    "end": "278700"
  },
  {
    "text": "want out to scale minimum and maximum",
    "start": "278700",
    "end": "282060"
  },
  {
    "text": "number of replicas so you're asking HPA",
    "start": "282060",
    "end": "284460"
  },
  {
    "text": "to set the number of replicas based on",
    "start": "284460",
    "end": "286620"
  },
  {
    "text": "the load but please do not go below",
    "start": "286620",
    "end": "288900"
  },
  {
    "text": "minimum all over maximum so I'm gonna",
    "start": "288900",
    "end": "291780"
  },
  {
    "text": "run out of space in that shipyard oh",
    "start": "291780",
    "end": "293550"
  },
  {
    "text": "yeah and then there is the target CPU",
    "start": "293550",
    "end": "298710"
  },
  {
    "text": "utilization and that's basically how",
    "start": "298710",
    "end": "301890"
  },
  {
    "text": "much CPU want to use it's a percentage",
    "start": "301890",
    "end": "304830"
  },
  {
    "text": "of a resource request defined by the pod",
    "start": "304830",
    "end": "308340"
  },
  {
    "text": "so I would say the usual number like 60",
    "start": "308340",
    "end": "311820"
  },
  {
    "text": "to 80 probably and that's so that you",
    "start": "311820",
    "end": "314880"
  },
  {
    "text": "are actually having a well utilized",
    "start": "314880",
    "end": "317940"
  },
  {
    "text": "cluster but you also have some safety",
    "start": "317940",
    "end": "320730"
  },
  {
    "text": "margin going on that's basically how HPA",
    "start": "320730",
    "end": "325710"
  },
  {
    "text": "v1 looks like so let's see v2 and it's",
    "start": "325710",
    "end": "331290"
  },
  {
    "text": "actually pretty similar in many aspects",
    "start": "331290",
    "end": "333180"
  },
  {
    "text": "I mean all this stuff is basically the",
    "start": "333180",
    "end": "335790"
  },
  {
    "text": "same one thing that has changed is now",
    "start": "335790",
    "end": "337980"
  },
  {
    "text": "instead of just assuming it's CPU we",
    "start": "337980",
    "end": "341400"
  },
  {
    "text": "actually have an resource name in here",
    "start": "341400",
    "end": "343590"
  },
  {
    "text": "and current you could use CPU or memory",
    "start": "343590",
    "end": "347610"
  },
  {
    "text": "but this is more a matter of what",
    "start": "347610",
    "end": "349919"
  },
  {
    "text": "metrics are available then actually just",
    "start": "349919",
    "end": "352169"
  },
  {
    "text": "HP implementation and because it didn't",
    "start": "352169",
    "end": "355350"
  },
  {
    "text": "make sense to have a target CPU",
    "start": "355350",
    "end": "357060"
  },
  {
    "text": "utilization if you can have other",
    "start": "357060",
    "end": "358950"
  },
  {
    "text": "metrics that that field is renamed and",
    "start": "358950",
    "end": "361610"
  },
  {
    "text": "that's that's about the changes here",
    "start": "361610",
    "end": "365330"
  },
  {
    "text": "yeah so now let's try this thinking",
    "start": "365330",
    "end": "367710"
  },
  {
    "text": "practice so I basically have oh yes",
    "start": "367710",
    "end": "374880"
  },
  {
    "text": "that's a good idea",
    "start": "374880",
    "end": "376710"
  },
  {
    "text": "how do I do that is that better hmm you",
    "start": "376710",
    "end": "381930"
  },
  {
    "text": "guys can all see that well",
    "start": "381930",
    "end": "384979"
  },
  {
    "text": "I'll take the CCS and I hope our network",
    "start": "386110",
    "end": "389620"
  },
  {
    "text": "is working as expected",
    "start": "389620",
    "end": "391750"
  },
  {
    "text": "oh yes I have it so I have a crustless",
    "start": "391750",
    "end": "394690"
  },
  {
    "text": "setup where I have a sample cellular",
    "start": "394690",
    "end": "396669"
  },
  {
    "text": "application it's not doing anything much",
    "start": "396669",
    "end": "400330"
  },
  {
    "text": "I can actually call it and it will print",
    "start": "400330",
    "end": "405069"
  },
  {
    "text": "okay after doing some CPU burning",
    "start": "405069",
    "end": "407409"
  },
  {
    "text": "calculation and I have some pots already",
    "start": "407409",
    "end": "409569"
  },
  {
    "text": "heating it so there is some load on this",
    "start": "409569",
    "end": "411879"
  },
  {
    "text": "thing",
    "start": "411879",
    "end": "413199"
  },
  {
    "text": "so let's fly to outer scale it this is",
    "start": "413199",
    "end": "417490"
  },
  {
    "text": "basically the yarn for the HPA as I said",
    "start": "417490",
    "end": "419650"
  },
  {
    "text": "it's not much larger than autoshow and",
    "start": "419650",
    "end": "422190"
  },
  {
    "text": "I've just created it and now we can see",
    "start": "422190",
    "end": "429210"
  },
  {
    "text": "how it works so the deployment started",
    "start": "429210",
    "end": "432729"
  },
  {
    "text": "with one applica which may be actually",
    "start": "432729",
    "end": "434979"
  },
  {
    "text": "pointed more explicitly it actually has",
    "start": "434979",
    "end": "436870"
  },
  {
    "text": "already been scaled up by each page of",
    "start": "436870",
    "end": "438580"
  },
  {
    "text": "the replicas based on the load so this",
    "start": "438580",
    "end": "441310"
  },
  {
    "text": "is the actual load it's 168 percent we",
    "start": "441310",
    "end": "444099"
  },
  {
    "text": "wanted 60 so three replicas would be a",
    "start": "444099",
    "end": "446560"
  },
  {
    "text": "pretty good approximation and that's",
    "start": "446560",
    "end": "449680"
  },
  {
    "text": "done as far as this part of the demo",
    "start": "449680",
    "end": "452800"
  },
  {
    "text": "goes let's quickly go to what just",
    "start": "452800",
    "end": "458080"
  },
  {
    "start": "456000",
    "end": "636000"
  },
  {
    "text": "happened and how does HPA work so",
    "start": "458080",
    "end": "462069"
  },
  {
    "text": "basically we have a built-in HBA",
    "start": "462069",
    "end": "463960"
  },
  {
    "text": "controllers in kubernetes and it",
    "start": "463960",
    "end": "466419"
  },
  {
    "text": "monitors all HPA objects that you may",
    "start": "466419",
    "end": "469900"
  },
  {
    "text": "have created and for each of them",
    "start": "469900",
    "end": "472000"
  },
  {
    "text": "basically in a loop for each of them",
    "start": "472000",
    "end": "474190"
  },
  {
    "text": "runs a simple bit of logic just get the",
    "start": "474190",
    "end": "476680"
  },
  {
    "text": "matrix use the matrix and the predefined",
    "start": "476680",
    "end": "479529"
  },
  {
    "text": "target to calculate the what would be",
    "start": "479529",
    "end": "481930"
  },
  {
    "text": "the appropriate number of replicas and",
    "start": "481930",
    "end": "483940"
  },
  {
    "text": "if the actual number of replicas is",
    "start": "483940",
    "end": "486159"
  },
  {
    "text": "different than what it calculated just",
    "start": "486159",
    "end": "488169"
  },
  {
    "text": "update the number of replicas so it",
    "start": "488169",
    "end": "490750"
  },
  {
    "text": "matches the calculated value and that",
    "start": "490750",
    "end": "493810"
  },
  {
    "text": "obviously leaves out the part of how is",
    "start": "493810",
    "end": "496360"
  },
  {
    "text": "this desired number of replicas",
    "start": "496360",
    "end": "497949"
  },
  {
    "text": "calculated and it's really simple I mean",
    "start": "497949",
    "end": "500770"
  },
  {
    "text": "it looks kind of like math but if you",
    "start": "500770",
    "end": "503680"
  },
  {
    "text": "actually think about it all we do is we",
    "start": "503680",
    "end": "506319"
  },
  {
    "text": "just sum up the utilization of",
    "start": "506319",
    "end": "508270"
  },
  {
    "text": "everything to get the total utilization",
    "start": "508270",
    "end": "510520"
  },
  {
    "text": "we divide that by target we get a number",
    "start": "510520",
    "end": "513010"
  },
  {
    "text": "of replicas there is no thresholds no",
    "start": "513010",
    "end": "515948"
  },
  {
    "text": "something special it's basically just",
    "start": "515949",
    "end": "518409"
  },
  {
    "text": "that we do that every",
    "start": "518409",
    "end": "519640"
  },
  {
    "text": "50 seconds by default and just apply the",
    "start": "519640",
    "end": "522340"
  },
  {
    "text": "result and there is just a bit of",
    "start": "522340",
    "end": "524950"
  },
  {
    "text": "heuristics for dealing with starting a",
    "start": "524950",
    "end": "526780"
  },
  {
    "text": "boss so for instance if say you had a",
    "start": "526780",
    "end": "529660"
  },
  {
    "text": "target of 50% you were using a hundred",
    "start": "529660",
    "end": "531670"
  },
  {
    "text": "percent one hundred over fifty is a",
    "start": "531670",
    "end": "533680"
  },
  {
    "text": "factor of 2.0 and if you have two",
    "start": "533680",
    "end": "536710"
  },
  {
    "text": "replicas currently two times two is four",
    "start": "536710",
    "end": "539290"
  },
  {
    "text": "so you get four replicas as a target",
    "start": "539290",
    "end": "541290"
  },
  {
    "text": "right but we have malla metrics and I",
    "start": "541290",
    "end": "544240"
  },
  {
    "text": "think we put all sort of promise people",
    "start": "544240",
    "end": "545740"
  },
  {
    "text": "custom ethics so it did didn't we I was",
    "start": "545740",
    "end": "548620"
  },
  {
    "text": "gonna end the presentation here I hope",
    "start": "548620",
    "end": "550630"
  },
  {
    "text": "that would be little AZ of us it would",
    "start": "550630",
    "end": "552970"
  },
  {
    "text": "be thankfully we're only a little bit",
    "start": "552970",
    "end": "555340"
  },
  {
    "text": "lazy alright so so you might have",
    "start": "555340",
    "end": "559570"
  },
  {
    "text": "noticed that before when the new form",
    "start": "559570",
    "end": "564370"
  },
  {
    "text": "was introduced that this is actually the",
    "start": "564370",
    "end": "566710"
  },
  {
    "text": "metrics field is actually now a list and",
    "start": "566710",
    "end": "569410"
  },
  {
    "text": "what that means is we can actually have",
    "start": "569410",
    "end": "571150"
  },
  {
    "text": "multiple metrics entries and each metric",
    "start": "571150",
    "end": "573220"
  },
  {
    "text": "entry can have a different type or this",
    "start": "573220",
    "end": "575110"
  },
  {
    "text": "the same type in some cases and the",
    "start": "575110",
    "end": "577720"
  },
  {
    "text": "horizontal pod auto control the",
    "start": "577720",
    "end": "579280"
  },
  {
    "text": "autoscaler controller will calculate the",
    "start": "579280",
    "end": "581920"
  },
  {
    "text": "target replicas count for each and then",
    "start": "581920",
    "end": "583870"
  },
  {
    "text": "choose the highest one so here you can",
    "start": "583870",
    "end": "585850"
  },
  {
    "text": "see we actually have two metrics we have",
    "start": "585850",
    "end": "588250"
  },
  {
    "text": "the resource metric that we had before",
    "start": "588250",
    "end": "590140"
  },
  {
    "text": "so CPU and we have a new type this type",
    "start": "590140",
    "end": "593020"
  },
  {
    "text": "is called pods now pods acts very",
    "start": "593020",
    "end": "596710"
  },
  {
    "text": "similar to the resource metric type so",
    "start": "596710",
    "end": "598720"
  },
  {
    "text": "we're looking at metrics describing each",
    "start": "598720",
    "end": "601150"
  },
  {
    "text": "of the pods in the target of our",
    "start": "601150",
    "end": "603340"
  },
  {
    "text": "horizontal pot autoscaler so all the",
    "start": "603340",
    "end": "605050"
  },
  {
    "text": "pods in our deployment for instance and",
    "start": "605050",
    "end": "606640"
  },
  {
    "text": "so what we do is we go and we get this",
    "start": "606640",
    "end": "608950"
  },
  {
    "text": "custom metric we're gonna say it's like",
    "start": "608950",
    "end": "611110"
  },
  {
    "text": "HTTP requests per second here and we",
    "start": "611110",
    "end": "614470"
  },
  {
    "text": "fetched that value for each of the pods",
    "start": "614470",
    "end": "616690"
  },
  {
    "text": "currently in our deployment and then we",
    "start": "616690",
    "end": "620830"
  },
  {
    "text": "average that value up and we compare it",
    "start": "620830",
    "end": "623500"
  },
  {
    "text": "to the target average value that we want",
    "start": "623500",
    "end": "625720"
  },
  {
    "text": "so here we say one request per second",
    "start": "625720",
    "end": "628560"
  },
  {
    "text": "and then we compute our ratio like we",
    "start": "628560",
    "end": "631360"
  },
  {
    "text": "discussed before and use that as a",
    "start": "631360",
    "end": "632680"
  },
  {
    "text": "multiplier so let's give that a try yeah",
    "start": "632680",
    "end": "638910"
  },
  {
    "start": "636000",
    "end": "1022000"
  },
  {
    "text": "so I'm just going to patch our existing",
    "start": "638910",
    "end": "642910"
  },
  {
    "text": "HPA object and add this pods metric to",
    "start": "642910",
    "end": "645760"
  },
  {
    "text": "it and now we can just watch the result",
    "start": "645760",
    "end": "651450"
  },
  {
    "text": "yeah I mean it's a while to they have",
    "start": "651660",
    "end": "654210"
  },
  {
    "text": "domestic side hmm should be going a",
    "start": "654210",
    "end": "657660"
  },
  {
    "text": "little faster maybe something's wrong",
    "start": "657660",
    "end": "659540"
  },
  {
    "text": "yeah I mean that looks kind of",
    "start": "659540",
    "end": "661860"
  },
  {
    "text": "suspicious let's try to maybe see if we",
    "start": "661860",
    "end": "666420"
  },
  {
    "text": "can figure it out yeah",
    "start": "666420",
    "end": "668190"
  },
  {
    "text": "oh no I see we have a problem let's uh",
    "start": "668190",
    "end": "671040"
  },
  {
    "text": "let's go over how we figured this out",
    "start": "671040",
    "end": "672600"
  },
  {
    "text": "yeah so if you're familiar with",
    "start": "672600",
    "end": "676320"
  },
  {
    "text": "kubernetes objects and the underlying",
    "start": "676320",
    "end": "678930"
  },
  {
    "text": "structure of them you'll know that when",
    "start": "678930",
    "end": "682260"
  },
  {
    "text": "you want to see what the current state",
    "start": "682260",
    "end": "683610"
  },
  {
    "text": "of an object is you look at the status",
    "start": "683610",
    "end": "685200"
  },
  {
    "text": "just like when you want to specify what",
    "start": "685200",
    "end": "686790"
  },
  {
    "text": "the state should be you look at the spec",
    "start": "686790",
    "end": "688410"
  },
  {
    "text": "so let's take a look at the status for a",
    "start": "688410",
    "end": "690870"
  },
  {
    "text": "horizontal pot autoscaler object so we",
    "start": "690870",
    "end": "694350"
  },
  {
    "text": "have pretty much what you'd expect here",
    "start": "694350",
    "end": "695940"
  },
  {
    "text": "we have our desired and current replica",
    "start": "695940",
    "end": "698490"
  },
  {
    "text": "count look from the last time we",
    "start": "698490",
    "end": "699840"
  },
  {
    "text": "calculated them so at our regular",
    "start": "699840",
    "end": "701490"
  },
  {
    "text": "interval we can look at our current and",
    "start": "701490",
    "end": "705200"
  },
  {
    "text": "average utilization so like that's the",
    "start": "705200",
    "end": "708000"
  },
  {
    "text": "percentage we discussed before and we",
    "start": "708000",
    "end": "709530"
  },
  {
    "text": "can look at our current average value",
    "start": "709530",
    "end": "711390"
  },
  {
    "text": "which is the raw value that it's using",
    "start": "711390",
    "end": "714180"
  },
  {
    "text": "to calculate that utilization but what",
    "start": "714180",
    "end": "716340"
  },
  {
    "text": "we really care about here is conditions",
    "start": "716340",
    "end": "718160"
  },
  {
    "text": "conditions are a way of saying like what",
    "start": "718160",
    "end": "722130"
  },
  {
    "text": "the current state of the horizontal pot",
    "start": "722130",
    "end": "725070"
  },
  {
    "text": "autoscaler is and whether or not",
    "start": "725070",
    "end": "726870"
  },
  {
    "text": "something is blocking it from working so",
    "start": "726870",
    "end": "729630"
  },
  {
    "text": "if we take a look at the conditions we",
    "start": "729630",
    "end": "730890"
  },
  {
    "text": "have here we have two so if you two",
    "start": "730890",
    "end": "734340"
  },
  {
    "text": "conditions so the first one is telling",
    "start": "734340",
    "end": "737100"
  },
  {
    "text": "us part where partially Coba static here",
    "start": "737100",
    "end": "739470"
  },
  {
    "text": "we were successfully able to fetch the",
    "start": "739470",
    "end": "742470"
  },
  {
    "text": "scale of the target we're trying to",
    "start": "742470",
    "end": "744390"
  },
  {
    "text": "scale but then we got to trying to",
    "start": "744390",
    "end": "746970"
  },
  {
    "text": "actually fetch the metrics and we failed",
    "start": "746970",
    "end": "749340"
  },
  {
    "text": "we see status false and the reason which",
    "start": "749340",
    "end": "752190"
  },
  {
    "text": "is the reason for robots is failed get",
    "start": "752190",
    "end": "753930"
  },
  {
    "text": "pods metric and if we look at the",
    "start": "753930",
    "end": "755370"
  },
  {
    "text": "message we can actually look at the",
    "start": "755370",
    "end": "756720"
  },
  {
    "text": "message in the real case yeah and we'll",
    "start": "756720",
    "end": "759390"
  },
  {
    "text": "see we say the API server is currently",
    "start": "759390",
    "end": "761970"
  },
  {
    "text": "unable to handle the requests to get",
    "start": "761970",
    "end": "764250"
  },
  {
    "text": "pods custom metrics can say oh so that",
    "start": "764250",
    "end": "769100"
  },
  {
    "text": "means we are missing something we are",
    "start": "769100",
    "end": "772260"
  },
  {
    "text": "missing something to serve our custom",
    "start": "772260",
    "end": "773700"
  },
  {
    "text": "metrics API so for for CPU in memory we",
    "start": "773700",
    "end": "776970"
  },
  {
    "text": "can get them from something called the",
    "start": "776970",
    "end": "778170"
  },
  {
    "text": "resource metrics API that's served by",
    "start": "778170",
    "end": "779940"
  },
  {
    "text": "metric server and that's installed by",
    "start": "779940",
    "end": "783060"
  },
  {
    "text": "default so you get it out of the",
    "start": "783060",
    "end": "784769"
  },
  {
    "text": "books but custom ethics we actually need",
    "start": "784769",
    "end": "788699"
  },
  {
    "text": "something guys yes so we need an adapter",
    "start": "788699",
    "end": "791189"
  },
  {
    "text": "so this is a special API server that",
    "start": "791189",
    "end": "794399"
  },
  {
    "text": "kind of acts as a front in front of your",
    "start": "794399",
    "end": "797040"
  },
  {
    "text": "monitoring solution so it sits there and",
    "start": "797040",
    "end": "799769"
  },
  {
    "text": "it takes an API that kubernetes",
    "start": "799769",
    "end": "801689"
  },
  {
    "text": "understands and it turns that into",
    "start": "801689",
    "end": "804149"
  },
  {
    "text": "requests your monitoring back-end",
    "start": "804149",
    "end": "806429"
  },
  {
    "text": "queries to Prometheus request to",
    "start": "806429",
    "end": "810149"
  },
  {
    "text": "stackdriver",
    "start": "810149",
    "end": "811019"
  },
  {
    "text": "what have you and then it takes those",
    "start": "811019",
    "end": "813119"
  },
  {
    "text": "responses and transforms them back into",
    "start": "813119",
    "end": "815189"
  },
  {
    "text": "objects that kubernetes understands so",
    "start": "815189",
    "end": "818189"
  },
  {
    "text": "there's currently two open-source",
    "start": "818189",
    "end": "820619"
  },
  {
    "text": "solutions out there there's one for",
    "start": "820619",
    "end": "823379"
  },
  {
    "text": "Prometheus so the whole thing is",
    "start": "823379",
    "end": "824670"
  },
  {
    "text": "open-source and there's also one for",
    "start": "824670",
    "end": "826499"
  },
  {
    "text": "stack driver that sits in front of the",
    "start": "826499",
    "end": "829019"
  },
  {
    "text": "Google cloud platform monitoring",
    "start": "829019",
    "end": "831209"
  },
  {
    "text": "solution and there's actually a third on",
    "start": "831209",
    "end": "833939"
  },
  {
    "text": "the way from cystic all right so you",
    "start": "833939",
    "end": "838470"
  },
  {
    "text": "actually need to explicitly install this",
    "start": "838470",
    "end": "841439"
  },
  {
    "text": "adapter for yourself",
    "start": "841439",
    "end": "842549"
  },
  {
    "text": "so let's basically do that just that",
    "start": "842549",
    "end": "845369"
  },
  {
    "text": "right now so we'll be showing you the",
    "start": "845369",
    "end": "847920"
  },
  {
    "text": "Prometheus adapter today yes you think",
    "start": "847920",
    "end": "850619"
  },
  {
    "text": "for me - cymatics and it actually takes",
    "start": "850619",
    "end": "852720"
  },
  {
    "text": "a few seconds to load and I wanted to",
    "start": "852720",
    "end": "855410"
  },
  {
    "text": "use the time to maybe go to one more or",
    "start": "855410",
    "end": "859139"
  },
  {
    "text": "maybe two common misconceptions that I",
    "start": "859139",
    "end": "861660"
  },
  {
    "text": "have seen people struggle with so the",
    "start": "861660",
    "end": "865350"
  },
  {
    "text": "custom ethics actually have to come out",
    "start": "865350",
    "end": "867360"
  },
  {
    "text": "of somewhere so in this case we're using",
    "start": "867360",
    "end": "869279"
  },
  {
    "text": "HTTP requests it's not something built",
    "start": "869279",
    "end": "871679"
  },
  {
    "text": "in my simple server just has an endpoint",
    "start": "871679",
    "end": "874610"
  },
  {
    "text": "that exposes this matrix I'm hitting",
    "start": "874610",
    "end": "878189"
  },
  {
    "text": "different replicas - load balancer which",
    "start": "878189",
    "end": "880709"
  },
  {
    "text": "is why I get different numbers but yeah",
    "start": "880709",
    "end": "885299"
  },
  {
    "text": "basically that's what we need and it",
    "start": "885299",
    "end": "887669"
  },
  {
    "text": "should have started by now so let's see",
    "start": "887669",
    "end": "891809"
  },
  {
    "text": "it and we have the result and another",
    "start": "891809",
    "end": "893790"
  },
  {
    "text": "thing that people find confusing is this",
    "start": "893790",
    "end": "896040"
  },
  {
    "text": "so this is basically the desired value",
    "start": "896040",
    "end": "898529"
  },
  {
    "text": "same as with CPU this is the desired",
    "start": "898529",
    "end": "900209"
  },
  {
    "text": "value we actually set it to one query",
    "start": "900209",
    "end": "902309"
  },
  {
    "text": "per second and this is the measured",
    "start": "902309",
    "end": "905160"
  },
  {
    "text": "value which seems to be like over a",
    "start": "905160",
    "end": "907499"
  },
  {
    "text": "thousand but this M here says it's melee",
    "start": "907499",
    "end": "911339"
  },
  {
    "text": "units so basically it's a kubernetes way",
    "start": "911339",
    "end": "914939"
  },
  {
    "text": "of representing fractions any fraction",
    "start": "914939",
    "end": "918750"
  },
  {
    "text": "we'll be written as like it will be",
    "start": "918750",
    "end": "922050"
  },
  {
    "text": "given in millions so this is actually",
    "start": "922050",
    "end": "923760"
  },
  {
    "text": "just one like this is almost one",
    "start": "923760",
    "end": "926880"
  },
  {
    "text": "basically and this is because while we",
    "start": "926880",
    "end": "929340"
  },
  {
    "text": "were talking",
    "start": "929340",
    "end": "929910"
  },
  {
    "text": "HP already scaled up from six from three",
    "start": "929910",
    "end": "933030"
  },
  {
    "text": "to six replicas and as you can see it",
    "start": "933030",
    "end": "935340"
  },
  {
    "text": "managed to match both targets pretty",
    "start": "935340",
    "end": "937350"
  },
  {
    "text": "well so it's basically doing its job so",
    "start": "937350",
    "end": "939840"
  },
  {
    "text": "for those of you who are familiar with",
    "start": "939840",
    "end": "942150"
  },
  {
    "text": "the difference between floating point",
    "start": "942150",
    "end": "944070"
  },
  {
    "text": "and fixed point this is kind of a fixed",
    "start": "944070",
    "end": "946080"
  },
  {
    "text": "point representation so we go out to",
    "start": "946080",
    "end": "948210"
  },
  {
    "text": "milling units when we need it and when",
    "start": "948210",
    "end": "950700"
  },
  {
    "text": "we don't need it if it's one on the nose",
    "start": "950700",
    "end": "952260"
  },
  {
    "text": "kubernetes will just not display the",
    "start": "952260",
    "end": "954330"
  },
  {
    "text": "extra zeros and will just collapse to a",
    "start": "954330",
    "end": "956430"
  },
  {
    "text": "single unit right so this this would be",
    "start": "956430",
    "end": "961140"
  },
  {
    "text": "basically you know the bottom attics but",
    "start": "961140",
    "end": "963120"
  },
  {
    "text": "we have some more stuff right yeah we",
    "start": "963120",
    "end": "967500"
  },
  {
    "text": "already found it so one of the",
    "start": "967500",
    "end": "969960"
  },
  {
    "text": "interesting things we can do here is we",
    "start": "969960",
    "end": "972120"
  },
  {
    "text": "don't actually need to scale on a metric",
    "start": "972120",
    "end": "974640"
  },
  {
    "text": "describing the pods in your target",
    "start": "974640",
    "end": "978540"
  },
  {
    "text": "deployment so for instance you might",
    "start": "978540",
    "end": "981480"
  },
  {
    "text": "have be measuring some sort of latency",
    "start": "981480",
    "end": "983850"
  },
  {
    "text": "on a load balancer that's measuring like",
    "start": "983850",
    "end": "986730"
  },
  {
    "text": "on a per service basis instead of on a",
    "start": "986730",
    "end": "990540"
  },
  {
    "text": "per pod basis and so for that we use the",
    "start": "990540",
    "end": "993810"
  },
  {
    "text": "object metric type now the object metric",
    "start": "993810",
    "end": "996060"
  },
  {
    "text": "type looks kind of similar we specify a",
    "start": "996060",
    "end": "999510"
  },
  {
    "text": "metric name like we did before but we",
    "start": "999510",
    "end": "1001760"
  },
  {
    "text": "also specify a target and so this is the",
    "start": "1001760",
    "end": "1004430"
  },
  {
    "text": "object that's being described by the",
    "start": "1004430",
    "end": "1006530"
  },
  {
    "text": "metric so we say for instance here we're",
    "start": "1006530",
    "end": "1010640"
  },
  {
    "text": "measuring request latency on the sample",
    "start": "1010640",
    "end": "1012890"
  },
  {
    "text": "server service and we set a target value",
    "start": "1012890",
    "end": "1015560"
  },
  {
    "text": "it's not an average because we're only",
    "start": "1015560",
    "end": "1017300"
  },
  {
    "text": "describing one object here so let's",
    "start": "1017300",
    "end": "1021860"
  },
  {
    "text": "let's try that out",
    "start": "1021860",
    "end": "1024579"
  },
  {
    "text": "so let's patch the HPA one small and",
    "start": "1025390",
    "end": "1029480"
  },
  {
    "text": "basically add the object definition that",
    "start": "1029480",
    "end": "1034610"
  },
  {
    "text": "could be faster so while that's going",
    "start": "1034610",
    "end": "1038209"
  },
  {
    "text": "through we have a little fake load",
    "start": "1038209",
    "end": "1039920"
  },
  {
    "text": "balancer I wrote and it's just measuring",
    "start": "1039920",
    "end": "1042770"
  },
  {
    "text": "latency on HTTP requests and one of the",
    "start": "1042770",
    "end": "1046188"
  },
  {
    "text": "neat things is with this particular",
    "start": "1046189",
    "end": "1048500"
  },
  {
    "text": "setup note that we've been describing",
    "start": "1048500",
    "end": "1050480"
  },
  {
    "text": "metrics as describing a particular",
    "start": "1050480",
    "end": "1052550"
  },
  {
    "text": "object and not coming from a particular",
    "start": "1052550",
    "end": "1054140"
  },
  {
    "text": "object so we can have this load balancer",
    "start": "1054140",
    "end": "1056570"
  },
  {
    "text": "that is exposing metrics about a",
    "start": "1056570",
    "end": "1058940"
  },
  {
    "text": "particular object and that comes down to",
    "start": "1058940",
    "end": "1060950"
  },
  {
    "text": "how things are stored in your monitoring",
    "start": "1060950",
    "end": "1063200"
  },
  {
    "text": "pipeline right so when we describe our",
    "start": "1063200",
    "end": "1066950"
  },
  {
    "text": "HPA right now we can actually see the",
    "start": "1066950",
    "end": "1068570"
  },
  {
    "text": "value and target for each metric and I",
    "start": "1068570",
    "end": "1071000"
  },
  {
    "text": "said the the target for the latency",
    "start": "1071000",
    "end": "1075890"
  },
  {
    "text": "unrealistically low which is something",
    "start": "1075890",
    "end": "1078650"
  },
  {
    "text": "that you should maybe watchful because",
    "start": "1078650",
    "end": "1081130"
  },
  {
    "text": "basically my seller is way slower than",
    "start": "1081130",
    "end": "1083750"
  },
  {
    "text": "that and however many replicas we add",
    "start": "1083750",
    "end": "1086960"
  },
  {
    "text": "will actually not go down to ten",
    "start": "1086960",
    "end": "1089000"
  },
  {
    "text": "milliseconds so we'll end up reaching",
    "start": "1089000",
    "end": "1091040"
  },
  {
    "text": "maximum at some point so I'd like to",
    "start": "1091040",
    "end": "1093350"
  },
  {
    "text": "point out the HPA will actually tell you",
    "start": "1093350",
    "end": "1095510"
  },
  {
    "text": "this we can see we have a third status",
    "start": "1095510",
    "end": "1097460"
  },
  {
    "text": "condition over here and that's called",
    "start": "1097460",
    "end": "1098780"
  },
  {
    "text": "scaling limited and the scaling limited",
    "start": "1098780",
    "end": "1100820"
  },
  {
    "text": "status condition triggers normally it's",
    "start": "1100820",
    "end": "1103250"
  },
  {
    "text": "false and if it's false it's",
    "start": "1103250",
    "end": "1104630"
  },
  {
    "text": "everything's copasetic if it's true it's",
    "start": "1104630",
    "end": "1107480"
  },
  {
    "text": "an indication that you're either running",
    "start": "1107480",
    "end": "1110090"
  },
  {
    "text": "up against the limits or you're on your",
    "start": "1110090",
    "end": "1113630"
  },
  {
    "text": "on your HPA or you're in a back off",
    "start": "1113630",
    "end": "1115970"
  },
  {
    "text": "period so if you hit this and you get",
    "start": "1115970",
    "end": "1119750"
  },
  {
    "text": "like something like too many replicas",
    "start": "1119750",
    "end": "1121370"
  },
  {
    "text": "that might be a good indication that",
    "start": "1121370",
    "end": "1123440"
  },
  {
    "text": "perhaps you should consider adjusting",
    "start": "1123440",
    "end": "1126080"
  },
  {
    "text": "your targets or maybe you just actually",
    "start": "1126080",
    "end": "1128180"
  },
  {
    "text": "have that much load and you need to",
    "start": "1128180",
    "end": "1130280"
  },
  {
    "text": "consider increasing the limits on your",
    "start": "1130280",
    "end": "1131930"
  },
  {
    "text": "horizontal pot autoscaler right so I",
    "start": "1131930",
    "end": "1135890"
  },
  {
    "start": "1135000",
    "end": "1332000"
  },
  {
    "text": "think that's it for the demo but we have",
    "start": "1135890",
    "end": "1137840"
  },
  {
    "text": "one more type of matrix all right so so",
    "start": "1137840",
    "end": "1142430"
  },
  {
    "text": "we recently added this new type of",
    "start": "1142430",
    "end": "1144050"
  },
  {
    "text": "metrics these are called external",
    "start": "1144050",
    "end": "1145760"
  },
  {
    "text": "metrics and these are useful when you",
    "start": "1145760",
    "end": "1148370"
  },
  {
    "text": "have metrics that don't describe an",
    "start": "1148370",
    "end": "1150320"
  },
  {
    "text": "object in your kubernetes setup so this",
    "start": "1150320",
    "end": "1154190"
  },
  {
    "text": "often happens if you are running on a",
    "start": "1154190",
    "end": "1156440"
  },
  {
    "text": "cloud provider and you have integration",
    "start": "1156440",
    "end": "1159680"
  },
  {
    "text": "from your cloud providers monitoring",
    "start": "1159680",
    "end": "1161240"
  },
  {
    "text": "system so for instance you're running on",
    "start": "1161240",
    "end": "1162890"
  },
  {
    "text": "stackdriver and maybe you have a pub",
    "start": "1162890",
    "end": "1164750"
  },
  {
    "text": "sub-q and you have some application on",
    "start": "1164750",
    "end": "1166460"
  },
  {
    "text": "kubernetes that's consuming messages",
    "start": "1166460",
    "end": "1168290"
  },
  {
    "text": "from the pub sub-q and you want to scale",
    "start": "1168290",
    "end": "1170540"
  },
  {
    "text": "on you know how quickly items are being",
    "start": "1170540",
    "end": "1173270"
  },
  {
    "text": "taken out of the pub sub-q and how much",
    "start": "1173270",
    "end": "1175280"
  },
  {
    "text": "backlog there is for instance well that",
    "start": "1175280",
    "end": "1177680"
  },
  {
    "text": "pub sub-q isn't necessarily associated",
    "start": "1177680",
    "end": "1180110"
  },
  {
    "text": "directly in the monitoring pipeline with",
    "start": "1180110",
    "end": "1183200"
  },
  {
    "text": "the kubernetes object so you'd use an",
    "start": "1183200",
    "end": "1185810"
  },
  {
    "text": "external",
    "start": "1185810",
    "end": "1186410"
  },
  {
    "text": "metric and so we have a metric name and",
    "start": "1186410",
    "end": "1189290"
  },
  {
    "text": "we have a label selector and so this is",
    "start": "1189290",
    "end": "1191360"
  },
  {
    "text": "just similar to a standard kubernetes",
    "start": "1191360",
    "end": "1193370"
  },
  {
    "text": "label selector you know you all know and",
    "start": "1193370",
    "end": "1195620"
  },
  {
    "text": "love them hopefully and that gets",
    "start": "1195620",
    "end": "1198680"
  },
  {
    "text": "translated into a query to the",
    "start": "1198680",
    "end": "1200090"
  },
  {
    "text": "monitoring pipeline to select this",
    "start": "1200090",
    "end": "1201620"
  },
  {
    "text": "metric right and it's currently",
    "start": "1201620",
    "end": "1205280"
  },
  {
    "text": "supported in I mean it's only in 1.10",
    "start": "1205280",
    "end": "1208310"
  },
  {
    "text": "and it's only supported for stag driver",
    "start": "1208310",
    "end": "1210500"
  },
  {
    "text": "right now which is why we're not showing",
    "start": "1210500",
    "end": "1212570"
  },
  {
    "text": "it but it works there and I hope it will",
    "start": "1212570",
    "end": "1215300"
  },
  {
    "text": "soon work on climate use as well and",
    "start": "1215300",
    "end": "1218390"
  },
  {
    "text": "notice that unlike object metrics we",
    "start": "1218390",
    "end": "1220880"
  },
  {
    "text": "actually have two options right here for",
    "start": "1220880",
    "end": "1223310"
  },
  {
    "text": "the way we specify our value and that's",
    "start": "1223310",
    "end": "1225530"
  },
  {
    "text": "something I'll talk about in a moment",
    "start": "1225530",
    "end": "1226820"
  },
  {
    "text": "but we can see we have target average",
    "start": "1226820",
    "end": "1228320"
  },
  {
    "text": "value and the way that works under the",
    "start": "1228320",
    "end": "1230750"
  },
  {
    "text": "hood is that we just divide the metric",
    "start": "1230750",
    "end": "1233690"
  },
  {
    "text": "by the number of pods so that we you can",
    "start": "1233690",
    "end": "1236180"
  },
  {
    "text": "set a value on a per pod basis even",
    "start": "1236180",
    "end": "1238940"
  },
  {
    "text": "though the metric isn't necessarily",
    "start": "1238940",
    "end": "1240290"
  },
  {
    "text": "describing the number of plots directly",
    "start": "1240290",
    "end": "1242360"
  },
  {
    "text": "I like QPS as an example here because if",
    "start": "1242360",
    "end": "1246380"
  },
  {
    "text": "you have a load balancer that's",
    "start": "1246380",
    "end": "1248060"
  },
  {
    "text": "measuring QPS it's much more convenient",
    "start": "1248060",
    "end": "1250670"
  },
  {
    "text": "to say I want 200 QPS per port than to",
    "start": "1250670",
    "end": "1253970"
  },
  {
    "text": "try to come up with desired value for",
    "start": "1253970",
    "end": "1256400"
  },
  {
    "text": "that metric right so I think the last",
    "start": "1256400",
    "end": "1261170"
  },
  {
    "text": "thing we have is basically our plans for",
    "start": "1261170",
    "end": "1263480"
  },
  {
    "text": "future so one of the things like I just",
    "start": "1263480",
    "end": "1265940"
  },
  {
    "text": "mentioned the only thing external metric",
    "start": "1265940",
    "end": "1268460"
  },
  {
    "text": "has that little advantage there a couple",
    "start": "1268460",
    "end": "1270860"
  },
  {
    "text": "of advantages the label selector and the",
    "start": "1270860",
    "end": "1274150"
  },
  {
    "text": "target average value and so we're gonna",
    "start": "1274150",
    "end": "1276440"
  },
  {
    "text": "be bringing those two object metrics so",
    "start": "1276440",
    "end": "1278090"
  },
  {
    "text": "you're gonna be able to drill down",
    "start": "1278090",
    "end": "1279830"
  },
  {
    "text": "further into a particular series so if",
    "start": "1279830",
    "end": "1283370"
  },
  {
    "text": "you have say like already have a metric",
    "start": "1283370",
    "end": "1286790"
  },
  {
    "text": "broken up by HTTP requests on your",
    "start": "1286790",
    "end": "1291580"
  },
  {
    "text": "request latency and you actually just",
    "start": "1291580",
    "end": "1293840"
  },
  {
    "text": "want to scale on get requests or you",
    "start": "1293840",
    "end": "1296630"
  },
  {
    "text": "want to scale and get request latency",
    "start": "1296630",
    "end": "1297830"
  },
  {
    "text": "different than post request latency",
    "start": "1297830",
    "end": "1299330"
  },
  {
    "text": "because I know maybe you have some",
    "start": "1299330",
    "end": "1301700"
  },
  {
    "text": "different constraints on those two",
    "start": "1301700",
    "end": "1303080"
  },
  {
    "text": "currently you can't really do that",
    "start": "1303080",
    "end": "1304670"
  },
  {
    "text": "easily but we're gonna be adding the",
    "start": "1304670",
    "end": "1306560"
  },
  {
    "text": "label selector in so you can say you",
    "start": "1306560",
    "end": "1308450"
  },
  {
    "text": "know method equals get as an additional",
    "start": "1308450",
    "end": "1310790"
  },
  {
    "text": "constraint on which metric you select",
    "start": "1310790",
    "end": "1312340"
  },
  {
    "text": "and we're also adding target average",
    "start": "1312340",
    "end": "1314810"
  },
  {
    "text": "value to object metrics so that you have",
    "start": "1314810",
    "end": "1317540"
  },
  {
    "text": "a couple more options on how you",
    "start": "1317540",
    "end": "1319360"
  },
  {
    "text": "got your metrics depending on how your",
    "start": "1319360",
    "end": "1322330"
  },
  {
    "text": "targets need to be structured and we're",
    "start": "1322330",
    "end": "1325150"
  },
  {
    "text": "also considering a little bit of a",
    "start": "1325150",
    "end": "1326410"
  },
  {
    "text": "cleanup to help unify some of the",
    "start": "1326410",
    "end": "1328240"
  },
  {
    "text": "metrics targets together and I think",
    "start": "1328240",
    "end": "1332799"
  },
  {
    "start": "1332000",
    "end": "1772000"
  },
  {
    "text": "that's it thank you do you have any",
    "start": "1332799",
    "end": "1334210"
  },
  {
    "text": "questions",
    "start": "1334210",
    "end": "1336140"
  },
  {
    "text": "[Applause]",
    "start": "1336140",
    "end": "1345400"
  },
  {
    "text": "so if you are curious to try to learn if",
    "start": "1345400",
    "end": "1350150"
  },
  {
    "text": "you want to learn more information about",
    "start": "1350150",
    "end": "1351350"
  },
  {
    "text": "this if you're curious and you want to",
    "start": "1351350",
    "end": "1353270"
  },
  {
    "text": "reproduce the demo the demo code is",
    "start": "1353270",
    "end": "1356660"
  },
  {
    "text": "available at repo up there you can also",
    "start": "1356660",
    "end": "1360590"
  },
  {
    "text": "take a look at the official horizontal",
    "start": "1360590",
    "end": "1362720"
  },
  {
    "text": "plot autoscaler documentation for more",
    "start": "1362720",
    "end": "1364520"
  },
  {
    "text": "information on consuming this as a user",
    "start": "1364520",
    "end": "1366610"
  },
  {
    "text": "and if you want to stand up your own",
    "start": "1366610",
    "end": "1369530"
  },
  {
    "text": "Prometheus adapter in front of your",
    "start": "1369530",
    "end": "1371840"
  },
  {
    "text": "Prometheus instance the repository is",
    "start": "1371840",
    "end": "1374900"
  },
  {
    "text": "there alright so back to the questions",
    "start": "1374900",
    "end": "1377420"
  },
  {
    "text": "I've seen a handle then thank you for",
    "start": "1377420",
    "end": "1385400"
  },
  {
    "text": "the demo do you plan on doing a I would",
    "start": "1385400",
    "end": "1388370"
  },
  {
    "text": "call it a short circuit so you don't",
    "start": "1388370",
    "end": "1390770"
  },
  {
    "text": "need an external monitoring system but",
    "start": "1390770",
    "end": "1392480"
  },
  {
    "text": "you can get a pop pop base a simple",
    "start": "1392480",
    "end": "1395390"
  },
  {
    "text": "metric that you can scale on or react to",
    "start": "1395390",
    "end": "1397790"
  },
  {
    "text": "if a single pot reports some arbitrary",
    "start": "1397790",
    "end": "1400820"
  },
  {
    "text": "value do you want to take this one so we",
    "start": "1400820",
    "end": "1407150"
  },
  {
    "text": "had that a similar model once upon a",
    "start": "1407150",
    "end": "1409010"
  },
  {
    "text": "time metrics were exposed by C advisor",
    "start": "1409010",
    "end": "1412100"
  },
  {
    "text": "and then went up through heap stir and",
    "start": "1412100",
    "end": "1414410"
  },
  {
    "text": "it turned out not to work very well and",
    "start": "1414410",
    "end": "1417920"
  },
  {
    "text": "it also turned out that a lot of people",
    "start": "1417920",
    "end": "1420559"
  },
  {
    "text": "actually already had a monitoring system",
    "start": "1420559",
    "end": "1423200"
  },
  {
    "text": "in place and they really didn't like the",
    "start": "1423200",
    "end": "1424970"
  },
  {
    "text": "idea of having 2 monitoring systems or",
    "start": "1424970",
    "end": "1427880"
  },
  {
    "text": "having to like shuffle data between them",
    "start": "1427880",
    "end": "1430700"
  },
  {
    "text": "and so we found we decided that the",
    "start": "1430700",
    "end": "1435140"
  },
  {
    "text": "easiest architecture was just to say",
    "start": "1435140",
    "end": "1437090"
  },
  {
    "text": "alright you can use use whatever",
    "start": "1437090",
    "end": "1438950"
  },
  {
    "text": "monitoring system you have because",
    "start": "1438950",
    "end": "1441530"
  },
  {
    "text": "kubernetes is not necessarily itself",
    "start": "1441530",
    "end": "1443840"
  },
  {
    "text": "about collecting those metrics so use",
    "start": "1443840",
    "end": "1446120"
  },
  {
    "text": "the tool that's you know really good at",
    "start": "1446120",
    "end": "1448309"
  },
  {
    "text": "collecting metrics and transforming",
    "start": "1448309",
    "end": "1450470"
  },
  {
    "text": "metrics of your choice and then just",
    "start": "1450470",
    "end": "1452900"
  },
  {
    "text": "make allow it teach it to speak this",
    "start": "1452900",
    "end": "1454820"
  },
  {
    "text": "standard kubernetes api in the form of",
    "start": "1454820",
    "end": "1456740"
  },
  {
    "text": "an adapter which is a really long-winded",
    "start": "1456740",
    "end": "1459080"
  },
  {
    "text": "say of way of saying no we're not gonna",
    "start": "1459080",
    "end": "1461090"
  },
  {
    "text": "have that certification",
    "start": "1461090",
    "end": "1463779"
  },
  {
    "text": "what metrics are you using like which",
    "start": "1467960",
    "end": "1471090"
  },
  {
    "text": "are not not for the custom metrics I",
    "start": "1471090",
    "end": "1474750"
  },
  {
    "text": "think queue length like pending messages",
    "start": "1474750",
    "end": "1477720"
  },
  {
    "text": "in message queue systems about 30",
    "start": "1477720",
    "end": "1479580"
  },
  {
    "text": "popular choice yeah we get a lot of",
    "start": "1479580",
    "end": "1482060"
  },
  {
    "text": "requests for like how do i scale on work",
    "start": "1482060",
    "end": "1484920"
  },
  {
    "text": "queue numbers fueling queue ingestion",
    "start": "1484920",
    "end": "1490100"
  },
  {
    "text": "egress ratio stuff like that we also get",
    "start": "1490100",
    "end": "1493770"
  },
  {
    "text": "you know a lot of how do i scale on my",
    "start": "1493770",
    "end": "1495750"
  },
  {
    "text": "HTTP requests like we've been getting",
    "start": "1495750",
    "end": "1498000"
  },
  {
    "text": "that question since basically horizontal",
    "start": "1498000",
    "end": "1500250"
  },
  {
    "text": "pot autoscaler appeared so those are the",
    "start": "1500250",
    "end": "1503400"
  },
  {
    "text": "two big ones but you know I've seen a",
    "start": "1503400",
    "end": "1507000"
  },
  {
    "text": "smattering of other small ones too I",
    "start": "1507000",
    "end": "1510800"
  },
  {
    "text": "have a question about the like scale up",
    "start": "1512240",
    "end": "1515280"
  },
  {
    "text": "and scale down time out so I believe",
    "start": "1515280",
    "end": "1517620"
  },
  {
    "text": "it's only like you can do it at one",
    "start": "1517620",
    "end": "1519900"
  },
  {
    "text": "place for the controller manager you can",
    "start": "1519900",
    "end": "1521850"
  },
  {
    "text": "only oh can you do it / application and",
    "start": "1521850",
    "end": "1524880"
  },
  {
    "text": "essentially so so to clarify for those",
    "start": "1524880",
    "end": "1528660"
  },
  {
    "text": "of you who don't know there's currently",
    "start": "1528660",
    "end": "1530460"
  },
  {
    "text": "a back off period in the horizontal pod",
    "start": "1530460",
    "end": "1532860"
  },
  {
    "text": "autoscaler that we've had for a while",
    "start": "1532860",
    "end": "1534450"
  },
  {
    "text": "now to work around some concerns about",
    "start": "1534450",
    "end": "1538110"
  },
  {
    "text": "thrashing and that is currently only",
    "start": "1538110",
    "end": "1541230"
  },
  {
    "text": "configurable on like a global basis",
    "start": "1541230",
    "end": "1544350"
  },
  {
    "text": "across your kubernetes deployment and",
    "start": "1544350",
    "end": "1547590"
  },
  {
    "text": "the question was whether or not we could",
    "start": "1547590",
    "end": "1549330"
  },
  {
    "text": "do that on a per horizontal pod",
    "start": "1549330",
    "end": "1551340"
  },
  {
    "text": "autoscaler basis so that's been a common",
    "start": "1551340",
    "end": "1553770"
  },
  {
    "text": "request and we will probably get around",
    "start": "1553770",
    "end": "1558240"
  },
  {
    "text": "to doing to to addressing that",
    "start": "1558240",
    "end": "1561000"
  },
  {
    "text": "eventually one of the things that we've",
    "start": "1561000",
    "end": "1563460"
  },
  {
    "text": "wanted to do for a while now is to make",
    "start": "1563460",
    "end": "1566010"
  },
  {
    "text": "the algorithm more a little bit more",
    "start": "1566010",
    "end": "1568590"
  },
  {
    "text": "intelligent so that we didn't actually",
    "start": "1568590",
    "end": "1570360"
  },
  {
    "text": "have to have a back off period at all",
    "start": "1570360",
    "end": "1572600"
  },
  {
    "text": "because the back off period is a little",
    "start": "1572600",
    "end": "1574860"
  },
  {
    "text": "bit of a hack so you may see we made",
    "start": "1574860",
    "end": "1578370"
  },
  {
    "text": "experiment around with controls on that",
    "start": "1578370",
    "end": "1580560"
  },
  {
    "text": "in the short term but our long term goal",
    "start": "1580560",
    "end": "1583830"
  },
  {
    "text": "is just to remove those entirely and",
    "start": "1583830",
    "end": "1585720"
  },
  {
    "text": "make them make them unnecessary",
    "start": "1585720",
    "end": "1589940"
  },
  {
    "text": "have you thought about using a pit",
    "start": "1596020",
    "end": "1598070"
  },
  {
    "text": "controller for auto-scaling I have",
    "start": "1598070",
    "end": "1605960"
  },
  {
    "text": "pondered it on a rainy day on occasion",
    "start": "1605960",
    "end": "1607940"
  },
  {
    "text": "yes haha which is a humorous way of",
    "start": "1607940",
    "end": "1611870"
  },
  {
    "text": "saying that I haven't gotten around to",
    "start": "1611870",
    "end": "1613490"
  },
  {
    "text": "actually writing the code out and",
    "start": "1613490",
    "end": "1616220"
  },
  {
    "text": "figuring out whether the you know how",
    "start": "1616220",
    "end": "1619010"
  },
  {
    "text": "much added complexity that would add to",
    "start": "1619010",
    "end": "1621289"
  },
  {
    "text": "our to our setup and and the actual",
    "start": "1621289",
    "end": "1624230"
  },
  {
    "text": "mechanics but I would love to either do",
    "start": "1624230",
    "end": "1627140"
  },
  {
    "text": "that myself at some point or see someone",
    "start": "1627140",
    "end": "1629990"
  },
  {
    "text": "doing a proof of concepts if you are a",
    "start": "1629990",
    "end": "1632270"
  },
  {
    "text": "fan of control systems and would like to",
    "start": "1632270",
    "end": "1634279"
  },
  {
    "text": "write me a pit controller horizontal pod",
    "start": "1634279",
    "end": "1636230"
  },
  {
    "text": "autoscaler I will be eternally grateful",
    "start": "1636230",
    "end": "1639520"
  },
  {
    "text": "but but I would like to get around to",
    "start": "1639520",
    "end": "1642230"
  },
  {
    "text": "trying it out at some point eventually",
    "start": "1642230",
    "end": "1645820"
  },
  {
    "text": "hey if I had multiple external systems",
    "start": "1655260",
    "end": "1659160"
  },
  {
    "text": "that I wanted to query like you know you",
    "start": "1659160",
    "end": "1662220"
  },
  {
    "text": "know cystic data dog catch point and and",
    "start": "1662220",
    "end": "1665460"
  },
  {
    "text": "they were all feeding various bits of",
    "start": "1665460",
    "end": "1667559"
  },
  {
    "text": "information that I wanted this scale on",
    "start": "1667559",
    "end": "1669860"
  },
  {
    "text": "would I be able to do that with with",
    "start": "1669860",
    "end": "1672840"
  },
  {
    "text": "this current set up or what I need to",
    "start": "1672840",
    "end": "1674280"
  },
  {
    "text": "provide basically a single system that",
    "start": "1674280",
    "end": "1678000"
  },
  {
    "text": "kind of consolidates all of them and",
    "start": "1678000",
    "end": "1679650"
  },
  {
    "text": "feeds that back at the kubernetes you",
    "start": "1679650",
    "end": "1681630"
  },
  {
    "text": "basically need some sort of a reverse",
    "start": "1681630",
    "end": "1683340"
  },
  {
    "text": "proxy adapter which is basically a",
    "start": "1683340",
    "end": "1685440"
  },
  {
    "text": "single system from now so we have this",
    "start": "1685440",
    "end": "1689429"
  },
  {
    "text": "request before and basically external",
    "start": "1689429",
    "end": "1693299"
  },
  {
    "text": "Mattox we've just added in 1.10 but this",
    "start": "1693299",
    "end": "1695490"
  },
  {
    "text": "is something we are going to consider in",
    "start": "1695490",
    "end": "1697710"
  },
  {
    "text": "the future depending on how much how",
    "start": "1697710",
    "end": "1700890"
  },
  {
    "text": "many people want it today so for a",
    "start": "1700890",
    "end": "1702900"
  },
  {
    "text": "little bit more detail on like why",
    "start": "1702900",
    "end": "1704549"
  },
  {
    "text": "that's not doable currently like without",
    "start": "1704549",
    "end": "1707580"
  },
  {
    "text": "a little bit of extra work so the API is",
    "start": "1707580",
    "end": "1710070"
  },
  {
    "text": "that we use both the resource metrics",
    "start": "1710070",
    "end": "1712260"
  },
  {
    "text": "API which provides CPU and memory and",
    "start": "1712260",
    "end": "1714419"
  },
  {
    "text": "the custom metrics a API are actually",
    "start": "1714419",
    "end": "1716900"
  },
  {
    "text": "presented as standard kubernetes api so",
    "start": "1716900",
    "end": "1719820"
  },
  {
    "text": "they appear on the api server you can",
    "start": "1719820",
    "end": "1722640"
  },
  {
    "text": "use clients to get them you can test",
    "start": "1722640",
    "end": "1724950"
  },
  {
    "text": "them out with Carol you know / API slash",
    "start": "1724950",
    "end": "1726870"
  },
  {
    "text": "custom metrics gates IO and so there's",
    "start": "1726870",
    "end": "1731610"
  },
  {
    "text": "only one instance of each of those under",
    "start": "1731610",
    "end": "1735090"
  },
  {
    "text": "the standard kubernetes model so you'd",
    "start": "1735090",
    "end": "1738360"
  },
  {
    "text": "have to have basically a dispatcher",
    "start": "1738360",
    "end": "1741179"
  },
  {
    "text": "the dispatcher probably wouldn't be too",
    "start": "1741179",
    "end": "1743460"
  },
  {
    "text": "hard to write but you'd have to have one",
    "start": "1743460",
    "end": "1747990"
  },
  {
    "text": "and that would be the thing that",
    "start": "1747990",
    "end": "1749610"
  },
  {
    "text": "actually provided the API to kubernetes",
    "start": "1749610",
    "end": "1751770"
  },
  {
    "text": "and then other things could just sit",
    "start": "1751770",
    "end": "1753660"
  },
  {
    "text": "around there and somehow be discovered",
    "start": "1753660",
    "end": "1755580"
  },
  {
    "text": "by the dispatcher",
    "start": "1755580",
    "end": "1758269"
  },
  {
    "text": "any other questions okay",
    "start": "1761250",
    "end": "1765180"
  },
  {
    "text": "I think with a good thank you thank you",
    "start": "1766660",
    "end": "1770260"
  },
  {
    "text": "very much for coming",
    "start": "1770260",
    "end": "1772980"
  }
]