[
  {
    "start": "0",
    "end": "24000"
  },
  {
    "text": "so good morning thank you very much for coming my name is David I'm software engineer",
    "start": "299",
    "end": "7379"
  },
  {
    "text": "I'm visiting Shanghai from Sydney where I work for VMware I'm the tech lead on a",
    "start": "7379",
    "end": "14880"
  },
  {
    "text": "product called contour it's a kubernetes ingress controller that uses lifts envoy or proxy as our",
    "start": "14880",
    "end": "22590"
  },
  {
    "text": "data so the part of kubernetes that I spend all my time on is in this ingress",
    "start": "22590",
    "end": "31170"
  },
  {
    "start": "24000",
    "end": "83000"
  },
  {
    "text": "area but perhaps perhaps you don't perhaps you don't live and breathe the",
    "start": "31170",
    "end": "37230"
  },
  {
    "text": "ingress as much as I do so um I want to go over a little bit about what an ingress controller does ingress",
    "start": "37230",
    "end": "43829"
  },
  {
    "text": "controllers are responsible for bringing traffic from the outside world down to your voice this means HTTP TLS load",
    "start": "43829",
    "end": "53370"
  },
  {
    "text": "balancers reverse proxies all of that good stuff at layer seven and just to be",
    "start": "53370",
    "end": "60629"
  },
  {
    "text": "clear even though we do use envoy as our data plane we are not a service mesh so",
    "start": "60629",
    "end": "66030"
  },
  {
    "text": "it's a common misconception that's an old news envoy you must be a service wish no envoy can do many many many",
    "start": "66030",
    "end": "72780"
  },
  {
    "text": "things we use it the way we configure it is as a load balancer so we're focused",
    "start": "72780",
    "end": "79320"
  },
  {
    "text": "exclusively on bringing remote traffic into your cluster and that's quite a",
    "start": "79320",
    "end": "84930"
  },
  {
    "start": "83000",
    "end": "120000"
  },
  {
    "text": "broad topic so the way that I've approached this design space is to say a",
    "start": "84930",
    "end": "91400"
  },
  {
    "text": "good ingress controller should be able to take care of 90% of the reasons that",
    "start": "91400",
    "end": "97140"
  },
  {
    "text": "maybe previously in previous lives and previous automations you would have had",
    "start": "97140",
    "end": "102720"
  },
  {
    "text": "to use nginx or Apache or squid there's some kind of sidecar or it's middleware",
    "start": "102720",
    "end": "109560"
  },
  {
    "text": "or something leaning the request flow to augment your application either as",
    "start": "109560",
    "end": "116240"
  },
  {
    "text": "middleware or as kind of glue to bring it all together so we're never going to",
    "start": "116240",
    "end": "122430"
  },
  {
    "start": "120000",
    "end": "137000"
  },
  {
    "text": "get to a hundred percent a hundred percent use case is impossible it's too specialized but I reckon there's a there",
    "start": "122430",
    "end": "129450"
  },
  {
    "text": "is a point about 90% where we can deliver through the ingress of a lot of functionality the big one is",
    "start": "129450",
    "end": "139150"
  },
  {
    "start": "137000",
    "end": "211000"
  },
  {
    "text": "traffic consolidation so if you haven't used ingress before you just using service objects with type load balancer",
    "start": "139150",
    "end": "146530"
  },
  {
    "text": "you probably know that generally if you're inside of cloud environments you declare a service type load balancer",
    "start": "146530",
    "end": "152890"
  },
  {
    "text": "your cloud provider will going to spin up an external load balancer in public IP we plumb that down to your cost track",
    "start": "152890",
    "end": "159909"
  },
  {
    "text": "me this obviously has a monetary cost and of course every new component you",
    "start": "159909",
    "end": "165430"
  },
  {
    "text": "add to your application is a maintenance cost it's another moving part they also",
    "start": "165430",
    "end": "171250"
  },
  {
    "text": "consume public eye piece where I live in a panic IP before I peas are not another",
    "start": "171250",
    "end": "179260"
  },
  {
    "text": "very scarce and perhaps more more",
    "start": "179260",
    "end": "184480"
  },
  {
    "text": "relevant for the audience here is that your security team may not be totally",
    "start": "184480",
    "end": "190150"
  },
  {
    "text": "okay with you having tens or perhaps hundreds of random public IP bringing",
    "start": "190150",
    "end": "195519"
  },
  {
    "text": "traffic into your kubernetes cluster may really want all that traffic to hairpin through one place the bacon analyzed",
    "start": "195519",
    "end": "202180"
  },
  {
    "text": "they can apply DRS policies all that good stuff on top of and so this is one thing that ingress controls do they",
    "start": "202180",
    "end": "208569"
  },
  {
    "text": "bring all the traffic for a single happening the second one is TLS",
    "start": "208569",
    "end": "213790"
  },
  {
    "start": "211000",
    "end": "263000"
  },
  {
    "text": "management we're halfway to through 2019 you need to be talking about how to",
    "start": "213790",
    "end": "220479"
  },
  {
    "text": "present your applications behind TLS behind edge to the penis now the good",
    "start": "220479",
    "end": "226389"
  },
  {
    "text": "news is on kubernetes side we have projects like cert manager and let's encrypt we're going to do that work of",
    "start": "226389",
    "end": "232419"
  },
  {
    "text": "getting a valid public certificate renewing it's keeping it alive that kind of 90 day rolling in dough an",
    "start": "232419",
    "end": "240129"
  },
  {
    "text": "ingress control that does the other half it's going to make sure that you can present that certificate on port 4/3 so",
    "start": "240129",
    "end": "246909"
  },
  {
    "text": "you can secure your application by HTTPS so there really shouldn't be any reason",
    "start": "246909",
    "end": "252459"
  },
  {
    "text": "why in 2019 you can't have a secure application there no structural",
    "start": "252459",
    "end": "257650"
  },
  {
    "text": "limitations to doing this anymore this is certainly something making arrests and trials hopefully",
    "start": "257650",
    "end": "263700"
  },
  {
    "start": "263000",
    "end": "311000"
  },
  {
    "text": "the third thing that I think our big part of the ingress patrol promise is this notion of abstract configuration",
    "start": "264030",
    "end": "271260"
  },
  {
    "text": "now probably given your backgrounds you used every kind of load balancer from f5",
    "start": "271260",
    "end": "277060"
  },
  {
    "text": "through to engine X through the EHA proxy through the Apache and squids all",
    "start": "277060",
    "end": "282160"
  },
  {
    "text": "who have different configurations to do the same thing to deploy the same application and you can rewrite the",
    "start": "282160",
    "end": "288190"
  },
  {
    "text": "configuration in whatever language they are users so ingress provides us a way",
    "start": "288190",
    "end": "293920"
  },
  {
    "text": "of having an abstract way you're describing the properties of a web application the different routes have a",
    "start": "293920",
    "end": "300220"
  },
  {
    "text": "match which services they go to in an abstract way ingress controller takes care of the",
    "start": "300220",
    "end": "305710"
  },
  {
    "text": "specific configuration for the specific data plane that you're using the last",
    "start": "305710",
    "end": "313120"
  },
  {
    "start": "311000",
    "end": "359000"
  },
  {
    "text": "one is half face traffic so going back to the first the first point if you're",
    "start": "313120",
    "end": "318220"
  },
  {
    "text": "using a service IP with a bustah you get TCP at layer 3 down to your pods now",
    "start": "318220",
    "end": "326080"
  },
  {
    "text": "HTTP HTTPS just T simply you have to take care of running a web server to do",
    "start": "326080",
    "end": "332740"
  },
  {
    "text": "that handshake to their TLS handshake to to do pathways wrapping all of that",
    "start": "332740",
    "end": "340600"
  },
  {
    "text": "stuff you have to do that in your application this is definitely something that an egress controller should take care of as well as looking about your",
    "start": "340600",
    "end": "347440"
  },
  {
    "text": "abstract configuration so that you can build if you describe the way that your web",
    "start": "347440",
    "end": "353050"
  },
  {
    "text": "application works to kubernetes rather than encapsulating in your application",
    "start": "353050",
    "end": "359610"
  },
  {
    "start": "359000",
    "end": "384000"
  },
  {
    "text": "so with that background what is gone to it contour is an ingress controller we",
    "start": "360570",
    "end": "367300"
  },
  {
    "text": "built we're now part of vmware and contour exists to do these things on to",
    "start": "367300",
    "end": "375550"
  },
  {
    "text": "do these things on this slide exists",
    "start": "375550",
    "end": "380580"
  },
  {
    "start": "384000",
    "end": "402000"
  },
  {
    "text": "so with that background I want to talk about some of the larger issues with in",
    "start": "387210",
    "end": "392490"
  },
  {
    "text": "graceful folds not specifically one that I work on but the one that all of us implement is work on dealing with the",
    "start": "392490",
    "end": "399330"
  },
  {
    "text": "kubernetes in this object so I think my",
    "start": "399330",
    "end": "404370"
  },
  {
    "start": "402000",
    "end": "436000"
  },
  {
    "text": "biggest complaint with the kun a z/os object is that the specification for it",
    "start": "404370",
    "end": "411919"
  },
  {
    "text": "it's just a bunch of text comments in the API documentation there being higher",
    "start": "411919",
    "end": "417419"
  },
  {
    "text": "specification port we have to go on use in the API missionary types it's in the comments on those parts so Jason is not",
    "start": "417419",
    "end": "426690"
  },
  {
    "text": "a specification Jason's barely a schema and it's not sufficient to describe how",
    "start": "426690",
    "end": "433199"
  },
  {
    "text": "to implement this with this specification you need to make this",
    "start": "433199",
    "end": "438419"
  },
  {
    "start": "436000",
    "end": "508000"
  },
  {
    "text": "concrete this is literally the specification that influences like myself have to work from now this is",
    "start": "438419",
    "end": "445949"
  },
  {
    "text": "perfectly fine if you are communicating with the API server like you're you know",
    "start": "445949",
    "end": "451020"
  },
  {
    "text": "sending a message to the API server or using their kind of curl command line this is perfectly fine but as an",
    "start": "451020",
    "end": "458039"
  },
  {
    "text": "implementer someone who's building tools from top of this API we never let need a",
    "start": "458039",
    "end": "463830"
  },
  {
    "text": "level of formality in this specification but is simply not present what I think",
    "start": "463830",
    "end": "471060"
  },
  {
    "text": "that we need is something akin to level of detail of an internet style RFC",
    "start": "471060",
    "end": "476780"
  },
  {
    "text": "because as we'll see as we go through this presentation there are a lot of ambiguities in the specification because",
    "start": "476780",
    "end": "483690"
  },
  {
    "text": "there are ambiguities that breaks the promise of the of the ingress object",
    "start": "483690",
    "end": "489840"
  },
  {
    "text": "because it's ambiguous you can't abstract a figuration is it's ambiguous different ingress controllers",
    "start": "489840",
    "end": "497159"
  },
  {
    "text": "implement features in different ways and it breaks inside your nobility",
    "start": "497159",
    "end": "501949"
  },
  {
    "text": "so to take an example let's talk about the default backing this is what the",
    "start": "503389",
    "end": "510710"
  },
  {
    "start": "508000",
    "end": "614000"
  },
  {
    "text": "specification says for the ingress default package it's a default back-end",
    "start": "510710",
    "end": "516229"
  },
  {
    "text": "capable of servicing requests that don't match anymore this is the sum total of",
    "start": "516229",
    "end": "521659"
  },
  {
    "text": "the specification for the default pattern so what we have is a situation",
    "start": "521659",
    "end": "527450"
  },
  {
    "text": "where each ingress document can have the notion of a default place to route traffic if it doesn't match anything",
    "start": "527450",
    "end": "533779"
  },
  {
    "text": "else rest requests that don't match any rule go to the default back engine it",
    "start": "533779",
    "end": "540200"
  },
  {
    "text": "seems pretty straightforward if you're coming for a programming point of view like if you have but the problem with",
    "start": "540200",
    "end": "551660"
  },
  {
    "text": "this is that it only makes sense if there's ever only one ingress document that's not the case something else it's",
    "start": "551660",
    "end": "570649"
  },
  {
    "text": "something akin to a default place that any traffic that comes to your cluster",
    "start": "570649",
    "end": "575690"
  },
  {
    "text": "for any virtual host could potentially go for and if it wasn't complicated",
    "start": "575690",
    "end": "582440"
  },
  {
    "text": "enough you can mention the default back-end in every ingress document so",
    "start": "582440",
    "end": "588560"
  },
  {
    "text": "which one takes precedence and it's these kind of ambiguities which are left",
    "start": "588560",
    "end": "595160"
  },
  {
    "text": "to the interpretation of the implementer people like me the nginx ingress controller traffic ambassador everyone",
    "start": "595160",
    "end": "601339"
  },
  {
    "text": "if Norton yep the spec we can we have to use a lot of our imagination because you",
    "start": "601339",
    "end": "607850"
  },
  {
    "text": "saw the specification is very very thin here doesn't tell us what to do",
    "start": "607850",
    "end": "614829"
  },
  {
    "start": "614000",
    "end": "652000"
  },
  {
    "text": "the default back-end conflates the notion of a virtual host like Microsoft",
    "start": "615070",
    "end": "621560"
  },
  {
    "text": "comm which is the host header the traffic will arrive with with the backend that's going to serve it on and",
    "start": "621560",
    "end": "630010"
  },
  {
    "text": "that doesn't make a lot of sense because for some some cases you might want the default role to be send that send",
    "start": "630010",
    "end": "637250"
  },
  {
    "text": "301 redirect to my main website so you come so you don't want to have dub dub dub in your url but if requests come on",
    "start": "637250",
    "end": "644780"
  },
  {
    "text": "that you want to redirect them there's no way to do that in the ingre spec there's no way to do that we with the",
    "start": "644780",
    "end": "649850"
  },
  {
    "text": "default back-end gets kind of weirder",
    "start": "649850",
    "end": "656350"
  },
  {
    "start": "652000",
    "end": "710000"
  },
  {
    "text": "each rule has a host key but that host key is optional so does that mean that",
    "start": "656350",
    "end": "664190"
  },
  {
    "text": "this rule matches the traffic arriving on any virtual host it's kind of weird",
    "start": "664190",
    "end": "669800"
  },
  {
    "text": "you are ingress ceases to be about these",
    "start": "669800",
    "end": "676730"
  },
  {
    "text": "are the routes within a virtual host and becomes these are just the pool of",
    "start": "676730",
    "end": "681890"
  },
  {
    "text": "routes and as I said the default back-end can be present in multiple",
    "start": "681890",
    "end": "688520"
  },
  {
    "text": "ingress objects as well as this very loosely specified they are a global",
    "start": "688520",
    "end": "693800"
  },
  {
    "text": "default back-end which is completely not defined in the specification it exists",
    "start": "693800",
    "end": "699290"
  },
  {
    "text": "only in the man page for kuku so the question of if the default is",
    "start": "699290",
    "end": "705140"
  },
  {
    "text": "specified multiple times which one takes precedence so speaking of namespaces the",
    "start": "705140",
    "end": "717290"
  },
  {
    "start": "710000",
    "end": "826000"
  },
  {
    "text": "ingress spec defines mit's of virtual hosts to be to span more than one",
    "start": "717290",
    "end": "723589"
  },
  {
    "text": "ingress object in fact this is very very common this means at the definition of a",
    "start": "723589",
    "end": "729710"
  },
  {
    "text": "virtual host the routes for my example.com can span multiple namespaces",
    "start": "729710",
    "end": "739810"
  },
  {
    "text": "you can see the argument for why it works like this ingress objects can only",
    "start": "740080",
    "end": "745490"
  },
  {
    "text": "refer to the services in the namespace they're here so if you want to combine and build an application out of services",
    "start": "745490",
    "end": "752330"
  },
  {
    "text": "from team a and Team B and team C put them all on routes within the same virtual host you need to have an ingress",
    "start": "752330",
    "end": "760490"
  },
  {
    "text": "object in each of those namespaces sharing the same virtual host so if they're all brought together it seems",
    "start": "760490",
    "end": "768230"
  },
  {
    "text": "pretty logical like if you had the finance department in one in one group",
    "start": "768230",
    "end": "773360"
  },
  {
    "text": "in one namespace in the ads department in another namespace that they all collaborate to the same website you",
    "start": "773360",
    "end": "780530"
  },
  {
    "text": "would have an ingress document in the same website across all of them minguk's controls stitch them together",
    "start": "780530",
    "end": "787840"
  },
  {
    "text": "however this means that if someone has our back mission to write an ingress",
    "start": "789400",
    "end": "795950"
  },
  {
    "text": "object anywhere in your cluster they can add a route onto any virtual host",
    "start": "795950",
    "end": "801710"
  },
  {
    "text": "service by that cluster there is no way to namespace to use our back to say you",
    "start": "801710",
    "end": "808340"
  },
  {
    "text": "can only write ingress objects for virtual host a but not vote not be so",
    "start": "808340",
    "end": "815810"
  },
  {
    "text": "somebody anyone in your cluster with the Commission to write an ingress report can add a route to your virtual host",
    "start": "815810",
    "end": "822470"
  },
  {
    "text": "even though they never have permission to write into your namespace just a case",
    "start": "822470",
    "end": "829310"
  },
  {
    "start": "826000",
    "end": "876000"
  },
  {
    "text": "you're thinking hey this sounds like a terrible security hole maybe I'd like to not do that you cannot because in a",
    "start": "829310",
    "end": "838580"
  },
  {
    "text": "perfect example of Hiram's law which is the idea that programs will evolve for",
    "start": "838580",
    "end": "844850"
  },
  {
    "text": "any observable behavior projects like cert manager will lie on this ability",
    "start": "844850",
    "end": "850240"
  },
  {
    "text": "the way that certain managers answers the HTTP wonder challenge is it at edits",
    "start": "850240",
    "end": "856550"
  },
  {
    "text": "its ingress recorded its namespace to project slash dot well-known into your",
    "start": "856550",
    "end": "862760"
  },
  {
    "text": "ingress this is how the product works we can't we can't disable this feature",
    "start": "862760",
    "end": "868820"
  },
  {
    "text": "unless you want to unless you want to disable helpers like like certain nature",
    "start": "868820",
    "end": "876340"
  },
  {
    "start": "876000",
    "end": "902000"
  },
  {
    "text": "what this boils down to is that ingress is very difficult to use in a shared",
    "start": "877810",
    "end": "883010"
  },
  {
    "text": "cluster there are no safeguards to prevent anybody that has the permission to add or edit ingress records from",
    "start": "883010",
    "end": "890320"
  },
  {
    "text": "accidentally or perhaps maliciously depending on what kind of cluster you're running messing up somebody else's",
    "start": "890320",
    "end": "898070"
  },
  {
    "text": "ingress this is just not possible",
    "start": "898070",
    "end": "903010"
  },
  {
    "start": "902000",
    "end": "932000"
  },
  {
    "text": "let's talk about a few other problems before we get to the associates talk about a few other problems um and this",
    "start": "903880",
    "end": "910220"
  },
  {
    "text": "is more focusing on a modern web application patterns Cuban IT services",
    "start": "910220",
    "end": "915830"
  },
  {
    "text": "are mapped onto HTTP routes via an ingress document however the ingress",
    "start": "915830",
    "end": "921950"
  },
  {
    "text": "spec only lets us only commits us to have one service program so slash prefix",
    "start": "921950",
    "end": "928940"
  },
  {
    "text": "goes to that service and only to that service now a service can match multiple",
    "start": "928940",
    "end": "936290"
  },
  {
    "start": "932000",
    "end": "988000"
  },
  {
    "text": "pods we can do that if they all have the same label so we can meet the endpoint",
    "start": "936290",
    "end": "941330"
  },
  {
    "text": "control of all all pods share the same label who mix them together into the same endpoint but it's going to be",
    "start": "941330",
    "end": "947780"
  },
  {
    "text": "basically a way to a waited waited assignment yeah five from five from",
    "start": "947780",
    "end": "954440"
  },
  {
    "text": "deployment a and five from deployment B you get roughly 50/50 so if you wanted",
    "start": "954440",
    "end": "960110"
  },
  {
    "text": "to do something like a canary deployment you wanted to send one percent of your traffic to the new version of your",
    "start": "960110",
    "end": "965660"
  },
  {
    "text": "application just one percent to make this work in this scheme you would have to have 99 pods of the old version in",
    "start": "965660",
    "end": "972650"
  },
  {
    "text": "one part of the new version that's",
    "start": "972650",
    "end": "978290"
  },
  {
    "text": "that's pretty unrealistic so even doing simpler patterns like canary deployments",
    "start": "978290",
    "end": "984500"
  },
  {
    "text": "and Bluegreen deployments are very difficult with the recipe anybody else",
    "start": "984500",
    "end": "990980"
  },
  {
    "start": "988000",
    "end": "999000"
  },
  {
    "text": "who's worked with ingress knows that most of the configuration for ingress object is not actually in the Yama",
    "start": "990980",
    "end": "997760"
  },
  {
    "text": "he'd seen annotations this has led to because of the limitations in the",
    "start": "997760",
    "end": "1003910"
  },
  {
    "text": "ingress object because there are so few fields we have to put everything in annotations I common things like do you",
    "start": "1003910",
    "end": "1013540"
  },
  {
    "start": "1009000",
    "end": "1159000"
  },
  {
    "text": "do you allow port 80 or do you put a 301 upgrade in an annotation request",
    "start": "1013540",
    "end": "1019060"
  },
  {
    "text": "timeouts retry parameters all these things must go into annotations",
    "start": "1019060",
    "end": "1025230"
  },
  {
    "text": "and if that isn't bad enough because the configuration for a virtual host spans",
    "start": "1026139",
    "end": "1032870"
  },
  {
    "text": "multiple ingress documents and annotations are only present on a single us document there are a lot of questions",
    "start": "1032870",
    "end": "1039470"
  },
  {
    "text": "about how does that annotation apply for",
    "start": "1039470",
    "end": "1044720"
  },
  {
    "text": "example 301 upgrade settings requests timeouts retry parameters if you wanted",
    "start": "1044720",
    "end": "1051200"
  },
  {
    "text": "to have some routes have a long retry cram about and some have a short logically you would put the routes with",
    "start": "1051200",
    "end": "1057110"
  },
  {
    "text": "the short retry parameter into one ingress document with short timeouts you create a second ingress document from",
    "start": "1057110",
    "end": "1063350"
  },
  {
    "text": "the same virtual host for the routes with the longer timeout so arguably the",
    "start": "1063350",
    "end": "1068809"
  },
  {
    "text": "annotations apply to the things mentioned in that document not to the virtual hosts but this argument breaks",
    "start": "1068809",
    "end": "1076820"
  },
  {
    "text": "down when we talk about properties that apply to the virtual host itself like",
    "start": "1076820",
    "end": "1083360"
  },
  {
    "text": "for example what is the minimum TLS version that this website will accept say your company has a policy you only",
    "start": "1083360",
    "end": "1089929"
  },
  {
    "text": "accept TLS 1.1 or higher so that means so how are we supposed to interpret this",
    "start": "1089929",
    "end": "1098360"
  },
  {
    "text": "annotation if you split your hosts across several documents and they have",
    "start": "1098360",
    "end": "1105440"
  },
  {
    "text": "different values to the TLS moon Protocol version that means that you've committed to doing a different TLS",
    "start": "1105440",
    "end": "1112970"
  },
  {
    "text": "handshake based on the path of the request which you don't know at that point because you haven't completed the",
    "start": "1112970",
    "end": "1119419"
  },
  {
    "text": "TLS handshake so it seems that some",
    "start": "1119419",
    "end": "1124909"
  },
  {
    "text": "annotations apply on the ingress and some apply globally or to the virtual host but if that were true then that",
    "start": "1124909",
    "end": "1131960"
  },
  {
    "text": "means I could change the TLS version of your website by standing up an ingress",
    "start": "1131960",
    "end": "1137690"
  },
  {
    "text": "mentioning your website's virtual host with my own annotation either",
    "start": "1137690",
    "end": "1143389"
  },
  {
    "text": "conflicting with it upgrading it downgrading it this is a problem that",
    "start": "1143389",
    "end": "1148639"
  },
  {
    "text": "has no solutions it's it's not it's not soluble because the specification",
    "start": "1148639",
    "end": "1154490"
  },
  {
    "text": "ingress came from didn't consider how does it work",
    "start": "1154490",
    "end": "1159070"
  },
  {
    "start": "1159000",
    "end": "1184000"
  },
  {
    "text": "okay so this is a good time for me to pause to say that while I have a bunch of gripes about arrests they come from",
    "start": "1160620",
    "end": "1168430"
  },
  {
    "text": "my position as an implementer somebody who has to answer all these questions in code like I can't I can't defer the",
    "start": "1168430",
    "end": "1175750"
  },
  {
    "text": "documentation I can't ring song for support I have to answer all of these questions because this is software it",
    "start": "1175750",
    "end": "1181720"
  },
  {
    "text": "must know absolutely any time but I don't want you to come away from this",
    "start": "1181720",
    "end": "1186760"
  },
  {
    "start": "1184000",
    "end": "1208000"
  },
  {
    "text": "talk and saying well this guy whom I say Australia said ingress is no good we can't use it ingress isn't broken it's",
    "start": "1186760",
    "end": "1195330"
  },
  {
    "text": "just a little bit limited and if you're not hitting those limitations in your",
    "start": "1195330",
    "end": "1200650"
  },
  {
    "text": "scenarios in your clusters they're far from it being me to tell you doing something wrong but if you are",
    "start": "1200650",
    "end": "1210520"
  },
  {
    "start": "1208000",
    "end": "1233000"
  },
  {
    "text": "experiencing these problems like you've you've been through some of these discussions you've had these questions let me tell you about what we're doing",
    "start": "1210520",
    "end": "1216790"
  },
  {
    "text": "in Toronto about a year ago what we're",
    "start": "1216790",
    "end": "1222340"
  },
  {
    "text": "still called FTO we started a joint development agreement with Yahoo Japan to build a large load balancing solution",
    "start": "1222340",
    "end": "1229360"
  },
  {
    "text": "for them using a kubernetes cluster effectively like in the clients now",
    "start": "1229360",
    "end": "1234850"
  },
  {
    "start": "1233000",
    "end": "1259000"
  },
  {
    "text": "Yahoo Japan had experienced almost all of these problems not through malicious",
    "start": "1234850",
    "end": "1240550"
  },
  {
    "text": "malicious intent but just accidentally messing up other people's routes by fat fingering and copy pasting things in",
    "start": "1240550",
    "end": "1247840"
  },
  {
    "text": "error they had experienced all the problems in trying to use ingress in a multi-tenant solution so we went away we",
    "start": "1247840",
    "end": "1254980"
  },
  {
    "text": "came up with a different design in the CID for the ingress route now the first",
    "start": "1254980",
    "end": "1262000"
  },
  {
    "text": "thing that we changed was that each ingress wrap document refers to one",
    "start": "1262000",
    "end": "1267280"
  },
  {
    "text": "hostname in one person only there is exactly in your cluster there is exactly only one document that describes the",
    "start": "1267280",
    "end": "1275320"
  },
  {
    "text": "properties of the host here spec virtual",
    "start": "1275320",
    "end": "1281800"
  },
  {
    "text": "host the name of the virtual host blog heavier calm and because now we can",
    "start": "1281800",
    "end": "1289030"
  },
  {
    "text": "define one place to talk about virtual hosts things not routes we can put the tls parameters in there we can",
    "start": "1289030",
    "end": "1296019"
  },
  {
    "text": "put other information about the virtual host not about its routes and there's one place that they go for reasons that",
    "start": "1296019",
    "end": "1304690"
  },
  {
    "start": "1303000",
    "end": "1336000"
  },
  {
    "text": "I'll explain in a little bit we call this a route ingress route doc use because because as we'll see they are at",
    "start": "1304690",
    "end": "1312940"
  },
  {
    "text": "the root the root of the tree and so anytime you see a speck with a virtual host this is a this is the route of a",
    "start": "1312940",
    "end": "1321789"
  },
  {
    "text": "configuration for a virtual host now because we're no longer limited to the",
    "start": "1321789",
    "end": "1328179"
  },
  {
    "text": "schema the kubernetes gives us an ingress object we have a place to put all that configuration with previously",
    "start": "1328179",
    "end": "1334149"
  },
  {
    "text": "stuffed into annotations for example the",
    "start": "1334149",
    "end": "1339549"
  },
  {
    "start": "1336000",
    "end": "1364000"
  },
  {
    "text": "route a service on that route we can control things like the load balancing",
    "start": "1339549",
    "end": "1344919"
  },
  {
    "text": "strategy so matching route the blogs one",
    "start": "1344919",
    "end": "1351399"
  },
  {
    "text": "back in services for the blog service and the strategy we're going to use to load balance across the different the",
    "start": "1351399",
    "end": "1358720"
  },
  {
    "text": "different pods that make up that service is waited waited least requests one of",
    "start": "1358720",
    "end": "1366429"
  },
  {
    "start": "1364000",
    "end": "1501000"
  },
  {
    "text": "the other reasons we chose envoy is it has very very good configuration reload support you there is no kind of process",
    "start": "1366429",
    "end": "1374529"
  },
  {
    "text": "stopping being restarted delays like reloading the process we stream",
    "start": "1374529",
    "end": "1380080"
  },
  {
    "text": "configuration changes to envoy straightaway and they're applied straightaway this means that we can do things like long-running WebSockets",
    "start": "1380080",
    "end": "1386529"
  },
  {
    "text": "without dropping connections and so if you want to enable WebSockets it's not",
    "start": "1386529",
    "end": "1392139"
  },
  {
    "text": "an annotation it's just a thing simply there now in general when there is a",
    "start": "1392139",
    "end": "1399580"
  },
  {
    "text": "feature that should be available for all users we generally like to turn it on very beau so for example you will not",
    "start": "1399580",
    "end": "1405909"
  },
  {
    "text": "find a configuration for compression because we just turn that on for everybody I can't think of a reason why",
    "start": "1405909",
    "end": "1411580"
  },
  {
    "text": "you would not want to improve your latency and save bandwidth by compressing the results but for",
    "start": "1411580",
    "end": "1418419"
  },
  {
    "text": "WebSockets it's a little bit more complicated because if we allowed any route to be upgraded attend",
    "start": "1418419",
    "end": "1424750"
  },
  {
    "text": "that allows a malicious attacker to send a WebSocket upgrade when the applications and expecting it so in some",
    "start": "1424750",
    "end": "1431890"
  },
  {
    "text": "specific cases you have to opt-in for these features but as you see it's very",
    "start": "1431890",
    "end": "1437320"
  },
  {
    "text": "straightforward it's right there in the Emma another common feature which is",
    "start": "1437320",
    "end": "1443050"
  },
  {
    "text": "very commonly stuffed into annotations our timeouts and retries so in this",
    "start": "1443050",
    "end": "1450520"
  },
  {
    "text": "example we have both a timeout policy which is one second in the start to the",
    "start": "1450520",
    "end": "1457390"
  },
  {
    "text": "end of the request you might want to short you might want them all but you certainly usually want to have some kind",
    "start": "1457390",
    "end": "1463540"
  },
  {
    "text": "of time out so that connections don't stay open indefinitely and depending on",
    "start": "1463540",
    "end": "1468760"
  },
  {
    "text": "the stability of your application or the way it deals with overloads you might want to have retry you might want to say",
    "start": "1468760",
    "end": "1475600"
  },
  {
    "text": "try three times giving each try 150 milliseconds so again you see we can",
    "start": "1475600",
    "end": "1482920"
  },
  {
    "text": "just put these right there in the amyl without having to have any confusing annotations the companyís ingress",
    "start": "1482920",
    "end": "1491440"
  },
  {
    "text": "document limits routes to a single back in service but because we define our own",
    "start": "1491440",
    "end": "1497500"
  },
  {
    "text": "cid we can change the rules in this example we have two services so",
    "start": "1497500",
    "end": "1508480"
  },
  {
    "start": "1501000",
    "end": "1534000"
  },
  {
    "text": "it's going to be roughly roughly equal weighting between those so rather than",
    "start": "1508480",
    "end": "1514440"
  },
  {
    "text": "creating a service paying two pods with matching labels so they were all merged",
    "start": "1514440",
    "end": "1519850"
  },
  {
    "text": "into the same service we can now talk specifically about two different",
    "start": "1519850",
    "end": "1525010"
  },
  {
    "text": "services that are served that serve traffic the slash why would you want to",
    "start": "1525010",
    "end": "1532060"
  },
  {
    "text": "do this why is this important well the main reason you wanted to have more than one back-end used to do things like a",
    "start": "1532060",
    "end": "1539170"
  },
  {
    "start": "1534000",
    "end": "1543000"
  },
  {
    "text": "canary deploy or blue-green deployments so in this example this is a totally",
    "start": "1539170",
    "end": "1546310"
  },
  {
    "start": "1543000",
    "end": "1594000"
  },
  {
    "text": "made-up product that he had some mail service now 90% of the traffic he's",
    "start": "1546310",
    "end": "1552730"
  },
  {
    "text": "going to version 1.3 dot 1 10% of the traffic is going to version 2",
    "start": "1552730",
    "end": "1558150"
  },
  {
    "text": "so this is how you could do a blue and green style deployment maybe you started 1% you go to 10%",
    "start": "1558150",
    "end": "1564340"
  },
  {
    "text": "you got a 50% and so over time the amount of traffic being served by the old version now traffic moves to the",
    "start": "1564340",
    "end": "1572170"
  },
  {
    "text": "amount of traffic served by the new version as you gain confidence that things working out and you can change",
    "start": "1572170",
    "end": "1578650"
  },
  {
    "text": "these numbers on the fly you just edit this documents who control edit unless changes are applied immediately",
    "start": "1578650",
    "end": "1584620"
  },
  {
    "text": "there's no restarting there's no reloading process there's no drop connections while the configuration is",
    "start": "1584620",
    "end": "1590320"
  },
  {
    "text": "reloaded this happens in real time so",
    "start": "1590320",
    "end": "1597640"
  },
  {
    "start": "1594000",
    "end": "1629000"
  },
  {
    "text": "there are two things to go one is delegation Dell is delegation is our answer to helping multi tenants",
    "start": "1597640",
    "end": "1604110"
  },
  {
    "text": "clusters stay manageable all the ingress route documents you've seen so far and",
    "start": "1604110",
    "end": "1610480"
  },
  {
    "text": "what we call routes and that is because they're at the root of a tree of delegation and to explain why delegation",
    "start": "1610480",
    "end": "1619240"
  },
  {
    "text": "I think is important we'll have another example so again this is a totally",
    "start": "1619240",
    "end": "1627460"
  },
  {
    "text": "made-up company and so you are the",
    "start": "1627460",
    "end": "1632830"
  },
  {
    "text": "kubernetes administrator these are the problems you've been asked to solve you want to delegate control the finance",
    "start": "1632830",
    "end": "1639370"
  },
  {
    "text": "route / finance to the Google Finance developers who are working there over in",
    "start": "1639370",
    "end": "1645070"
  },
  {
    "text": "there in the Google Finance namespace so any traffic for finance and below should be going to the applications in the",
    "start": "1645070",
    "end": "1651190"
  },
  {
    "text": "Google Finance namespace importantly this Google Finance team shouldn't be",
    "start": "1651190",
    "end": "1659260"
  },
  {
    "start": "1653000",
    "end": "1671000"
  },
  {
    "text": "able to alter the configuration for any of the other properties on this website if you do touch ads touch search touch",
    "start": "1659260",
    "end": "1665770"
  },
  {
    "text": "the homepage they should only be able to work in their little area called slash finance and most importantly none of the",
    "start": "1665770",
    "end": "1675760"
  },
  {
    "start": "1671000",
    "end": "1687000"
  },
  {
    "text": "teams working on contributing parts of this application should actually have",
    "start": "1675760",
    "end": "1681460"
  },
  {
    "text": "access to things like the TLS secret for serving w-w-whoa",
    "start": "1681460",
    "end": "1687930"
  },
  {
    "start": "1687000",
    "end": "1733000"
  },
  {
    "text": "so how would you do this with the the kubernetes ingress object itself you",
    "start": "1688960",
    "end": "1696170"
  },
  {
    "text": "could certainly split your routes across very various namespaces you could put the slash Finance match over an ingress",
    "start": "1696170",
    "end": "1701960"
  },
  {
    "text": "document to the Google Finance namespace but as I've laid out today you it is",
    "start": "1701960",
    "end": "1710840"
  },
  {
    "text": "difficult to do that securely it is difficult to do that knowing that you have probably up down this configuration",
    "start": "1710840",
    "end": "1716270"
  },
  {
    "text": "is difficult to know that you have made sure that nobody else can overwrite or",
    "start": "1716270",
    "end": "1721430"
  },
  {
    "text": "add routes you have to control the people who can use this plastic very closely even though you've gone to that",
    "start": "1721430",
    "end": "1728090"
  },
  {
    "text": "you've deployed our backing put people in places so here's how we would do it",
    "start": "1728090",
    "end": "1736310"
  },
  {
    "start": "1733000",
    "end": "1754000"
  },
  {
    "text": "with our ingress wrap document we can",
    "start": "1736310",
    "end": "1741530"
  },
  {
    "text": "see this as a rodent has a virtual host Anza it's in the Google Chrome namespace there's the secret in there so it's it",
    "start": "1741530",
    "end": "1748670"
  },
  {
    "text": "lives in the Google calm namespace unless you have permission to read that namespace you can't read that secret and",
    "start": "1748670",
    "end": "1754510"
  },
  {
    "start": "1754000",
    "end": "1784000"
  },
  {
    "text": "now down here we have the standard matches that you've seen previously we",
    "start": "1754510",
    "end": "1760550"
  },
  {
    "text": "have this new stanza rather length service you say delegate and you can think of delegation at this level kind",
    "start": "1760550",
    "end": "1768230"
  },
  {
    "text": "of like file include we're saying okay go and include the search document in",
    "start": "1768230",
    "end": "1774830"
  },
  {
    "text": "Google search namespace and go and include the Finance document in the Google Finance namespace so you can",
    "start": "1774830",
    "end": "1782510"
  },
  {
    "text": "think about it like inclusion here's the the finance document to finance the",
    "start": "1782510",
    "end": "1789290"
  },
  {
    "start": "1784000",
    "end": "1796000"
  },
  {
    "text": "Google Finance namespace and it has information about new servicing slash finance it doesn't have a virtual host",
    "start": "1789290",
    "end": "1799070"
  },
  {
    "start": "1796000",
    "end": "1813000"
  },
  {
    "text": "stanza this doesn't mention anything about the host it applies to it is what",
    "start": "1799070",
    "end": "1806120"
  },
  {
    "text": "we call um it's not a roof it's a child resource it can this configuration can only be referenced by somebody else so",
    "start": "1806120",
    "end": "1815030"
  },
  {
    "text": "you can write whatever documents you want but unless there's a reference to it from another",
    "start": "1815030",
    "end": "1822100"
  },
  {
    "text": "it's meaningless that configuration is not connected to anything so one of the ways you could think about it is the way",
    "start": "1822100",
    "end": "1827290"
  },
  {
    "start": "1824000",
    "end": "1844000"
  },
  {
    "text": "that Delhi that DNS works we delegate part of your namespace to a different name server that gives you as the person",
    "start": "1827290",
    "end": "1834670"
  },
  {
    "text": "that controls the top-level domain the ability to say I bless them with having",
    "start": "1834670",
    "end": "1840040"
  },
  {
    "text": "the configuration I delegate to them the configuration in the final piece of this",
    "start": "1840040",
    "end": "1847660"
  },
  {
    "start": "1844000",
    "end": "1898000"
  },
  {
    "text": "multi-tenant puzzle is the ability to restrict where we will look for these root namespaces as an opt-in feature you",
    "start": "1847660",
    "end": "1856540"
  },
  {
    "text": "can say to contour on startup only look in these specific namespaces for brute",
    "start": "1856540",
    "end": "1861820"
  },
  {
    "text": "ingress documents so we'll only start building this tree based from the documents that you permit obviously they",
    "start": "1861820",
    "end": "1869770"
  },
  {
    "text": "would be in some administrators namespaces the administrator just like the Google example would set up the",
    "start": "1869770",
    "end": "1876100"
  },
  {
    "text": "configuration for Google com they would control difficut and they would delegate the actual routes like the the routes",
    "start": "1876100",
    "end": "1883900"
  },
  {
    "text": "for the application to different application teams in different namespaces but this is how we can use",
    "start": "1883900",
    "end": "1890740"
  },
  {
    "text": "our back to securely create a way to use ingress in a multi-tenant cluster so",
    "start": "1890740",
    "end": "1900450"
  },
  {
    "start": "1898000",
    "end": "2145000"
  },
  {
    "text": "that's all I have to show you today you can come check us out at github become",
    "start": "1900450",
    "end": "1906730"
  },
  {
    "text": "pepto contour if you find us at hash pond contour on the kubernetes slack and of course you can email me anytime you",
    "start": "1906730",
    "end": "1913000"
  },
  {
    "text": "like or send me an issue on github yeah",
    "start": "1913000",
    "end": "1919090"
  },
  {
    "text": "we have a lot more information on there including documentation about the",
    "start": "1919090",
    "end": "1924810"
  },
  {
    "text": "English rat CID how it works all the different options and many more than I've shown you and I think I have maybe",
    "start": "1924810",
    "end": "1931510"
  },
  {
    "text": "two three minutes for questions so if there are any questions just put your hand up I'll keep the microphone out but",
    "start": "1931510",
    "end": "1937210"
  },
  {
    "text": "you get my point okay thanks for elimination",
    "start": "1937210",
    "end": "1946990"
  },
  {
    "text": "so as you mentioned because of the limitation of the corporate inquests hourly so different",
    "start": "1946990",
    "end": "1956600"
  },
  {
    "text": "of a source budget are using different approach annotation so I mean what do",
    "start": "1956600",
    "end": "1967910"
  },
  {
    "text": "you think is the right way going forward for the cover us I want to watch if you contribute this",
    "start": "1967910",
    "end": "1975290"
  },
  {
    "text": "to the upstream but I kind of need you",
    "start": "1975290",
    "end": "1982490"
  },
  {
    "text": "to ask this question so this question comes in two forms --is are we going to",
    "start": "1982490",
    "end": "1987890"
  },
  {
    "text": "contribute upstream or if you watch the saw the videos from coop con about a",
    "start": "1987890",
    "end": "1994160"
  },
  {
    "text": "month ago what about the ingress v2 that Bowie and Googlers announced the answer",
    "start": "1994160",
    "end": "1999950"
  },
  {
    "text": "is somewhere in the middle we have",
    "start": "1999950",
    "end": "2005640"
  },
  {
    "text": "customers who need this service right now so we have built this for our customers they're using it we you can",
    "start": "2005640",
    "end": "2012120"
  },
  {
    "text": "come to VMware and ask for support on this this is a fully supported product",
    "start": "2012120",
    "end": "2017670"
  },
  {
    "text": "we but as you say each at the moment each of the ingress controls is doing",
    "start": "2017670",
    "end": "2023830"
  },
  {
    "text": "something different that's terrible for the community you'll really like some consolidation however I have I think",
    "start": "2023830",
    "end": "2031540"
  },
  {
    "text": "those discussions of consolidation is still quite early the ingress v2 stuff",
    "start": "2031540",
    "end": "2036610"
  },
  {
    "text": "that Google talked about a month ago I still haven't seen a capful but I think the easiest way is that we're on cig",
    "start": "2036610",
    "end": "2042400"
  },
  {
    "text": "network we were really looking to contribute when the discussion starts we are really ready like if you're watching",
    "start": "2042400",
    "end": "2047890"
  },
  {
    "text": "this video please come and talk to us we've really run that's all we have time for one question and this gentleman here",
    "start": "2047890",
    "end": "2054790"
  },
  {
    "text": "then we've got then we gotta get out of here thank you my question is what's the",
    "start": "2054790",
    "end": "2060760"
  },
  {
    "text": "distinct is volunteer to compare with other new grass controller said she of",
    "start": "2060760",
    "end": "2065800"
  },
  {
    "text": "King in Jukes and the comb and some others okay so how do we compare to",
    "start": "2065800",
    "end": "2071500"
  },
  {
    "text": "other ingress controllers I'm almost all the ingress controllers differ by their choice of what they used to their data",
    "start": "2071500",
    "end": "2077350"
  },
  {
    "text": "plan so we use envoy nginx obviously glb uses the gck uses the GOP low balance",
    "start": "2077350",
    "end": "2084930"
  },
  {
    "text": "in terms of white why would you choose if you want to interested in English art stuff why would you choose envoy over a",
    "start": "2087850",
    "end": "2095120"
  },
  {
    "text": "different one of those I would say that the reason it's not perhaps for performance so any of those things I think almost any ingress controller can",
    "start": "2095120",
    "end": "2101780"
  },
  {
    "text": "saturate and network these days that's not hard the benefit that we have is",
    "start": "2101780",
    "end": "2107260"
  },
  {
    "text": "envoy has a very good reconfiguration APR Ustream configuration by G RPC it's",
    "start": "2107260",
    "end": "2112790"
  },
  {
    "text": "not writing a file and then reloading the process we can stream configuration very very quickly so we can make those changes effectively",
    "start": "2112790",
    "end": "2121030"
  },
  {
    "text": "and that certainly from my my history as an operator trying to debug us problems",
    "start": "2121030",
    "end": "2126320"
  },
  {
    "text": "is a huge benefit when you know that if the configuration isn't working how you",
    "start": "2126320",
    "end": "2132470"
  },
  {
    "text": "thought it is because you made a mistake not you didn't wait long enough okay",
    "start": "2132470",
    "end": "2137480"
  },
  {
    "text": "so I I'm out of time thank you so much thank you for that thanks speaker for your patience thank you very much",
    "start": "2137480",
    "end": "2144790"
  }
]