[
  {
    "start": "0",
    "end": "17000"
  },
  {
    "text": "hello and welcome to this kubecon talk",
    "start": "80",
    "end": "2399"
  },
  {
    "text": "where we will discuss",
    "start": "2399",
    "end": "3280"
  },
  {
    "text": "our experiences at databricks",
    "start": "3280",
    "end": "4880"
  },
  {
    "text": "integrating our platform with azure",
    "start": "4880",
    "end": "6720"
  },
  {
    "text": "private link over ipv6",
    "start": "6720",
    "end": "8720"
  },
  {
    "text": "i'm mike wiederhold and i'm an",
    "start": "8720",
    "end": "10320"
  },
  {
    "text": "engineering manager at databricks",
    "start": "10320",
    "end": "12000"
  },
  {
    "text": "and i'm presenting with meishing li who",
    "start": "12000",
    "end": "14160"
  },
  {
    "text": "is a senior software engineer who led",
    "start": "14160",
    "end": "15920"
  },
  {
    "text": "the private link integration",
    "start": "15920",
    "end": "18320"
  },
  {
    "start": "17000",
    "end": "40000"
  },
  {
    "text": "during this talk i will give an overview",
    "start": "18320",
    "end": "20320"
  },
  {
    "text": "of the databricks architecture at a high",
    "start": "20320",
    "end": "21840"
  },
  {
    "text": "level",
    "start": "21840",
    "end": "22320"
  },
  {
    "text": "and talk about what private link is and",
    "start": "22320",
    "end": "24320"
  },
  {
    "text": "why it's important to customers running",
    "start": "24320",
    "end": "25840"
  },
  {
    "text": "production systems",
    "start": "25840",
    "end": "26880"
  },
  {
    "text": "in cloud environments after that mei",
    "start": "26880",
    "end": "29760"
  },
  {
    "text": "shing will discuss",
    "start": "29760",
    "end": "30880"
  },
  {
    "text": "some of the challenges we faced when",
    "start": "30880",
    "end": "32480"
  },
  {
    "text": "integrating private link",
    "start": "32480",
    "end": "34079"
  },
  {
    "text": "how we eventually did our integration",
    "start": "34079",
    "end": "36000"
  },
  {
    "text": "and then show a demo of how customers",
    "start": "36000",
    "end": "37840"
  },
  {
    "text": "can access data bricks over privately",
    "start": "37840",
    "end": "41120"
  },
  {
    "start": "40000",
    "end": "126000"
  },
  {
    "text": "before we dive into the databricks",
    "start": "41120",
    "end": "42640"
  },
  {
    "text": "architecture i first want to talk a",
    "start": "42640",
    "end": "44399"
  },
  {
    "text": "little bit about databricks",
    "start": "44399",
    "end": "45840"
  },
  {
    "text": "and the platform we offer to customers",
    "start": "45840",
    "end": "48399"
  },
  {
    "text": "maybe you've heard about databricks and",
    "start": "48399",
    "end": "50160"
  },
  {
    "text": "know a little bit about what we do",
    "start": "50160",
    "end": "51920"
  },
  {
    "text": "but if you haven't then you've probably",
    "start": "51920",
    "end": "53680"
  },
  {
    "text": "at least heard of apache spark",
    "start": "53680",
    "end": "55680"
  },
  {
    "text": "apache spark is a general purpose",
    "start": "55680",
    "end": "57440"
  },
  {
    "text": "analytics engine that was created by the",
    "start": "57440",
    "end": "59359"
  },
  {
    "text": "founders of databricks",
    "start": "59359",
    "end": "60800"
  },
  {
    "text": "and it's used for all kinds of",
    "start": "60800",
    "end": "62239"
  },
  {
    "text": "large-scale analytics jobs ranging from",
    "start": "62239",
    "end": "64239"
  },
  {
    "text": "bi workloads to machine learning",
    "start": "64239",
    "end": "66560"
  },
  {
    "text": "while apache spark by itself is a great",
    "start": "66560",
    "end": "68799"
  },
  {
    "text": "product",
    "start": "68799",
    "end": "69680"
  },
  {
    "text": "yet like all other distributed analytics",
    "start": "69680",
    "end": "71840"
  },
  {
    "text": "engines can be time consuming to manage",
    "start": "71840",
    "end": "73840"
  },
  {
    "text": "when you have large clusters",
    "start": "73840",
    "end": "76000"
  },
  {
    "text": "there are also a lot of different types",
    "start": "76000",
    "end": "77520"
  },
  {
    "text": "of software you need to manage outside",
    "start": "77520",
    "end": "79360"
  },
  {
    "text": "your analytics engine",
    "start": "79360",
    "end": "80479"
  },
  {
    "text": "like notebooking software experiment",
    "start": "80479",
    "end": "82640"
  },
  {
    "text": "tracking software if you're doing",
    "start": "82640",
    "end": "83920"
  },
  {
    "text": "machine learning",
    "start": "83920",
    "end": "84960"
  },
  {
    "text": "and so on databricks realized this early",
    "start": "84960",
    "end": "87520"
  },
  {
    "text": "on",
    "start": "87520",
    "end": "88000"
  },
  {
    "text": "and built a software as a service",
    "start": "88000",
    "end": "89439"
  },
  {
    "text": "platform that runs in the cloud",
    "start": "89439",
    "end": "91520"
  },
  {
    "text": "to manage all this complexity for you",
    "start": "91520",
    "end": "93840"
  },
  {
    "text": "this means that your data scientists can",
    "start": "93840",
    "end": "95680"
  },
  {
    "text": "focus on what they're good at which is",
    "start": "95680",
    "end": "97280"
  },
  {
    "text": "writing analytics jobs",
    "start": "97280",
    "end": "98799"
  },
  {
    "text": "and not on maintaining infrastructure",
    "start": "98799",
    "end": "100560"
  },
  {
    "text": "which is not in their area of expertise",
    "start": "100560",
    "end": "103520"
  },
  {
    "text": "since databricks was founded in 2013 the",
    "start": "103520",
    "end": "106159"
  },
  {
    "text": "platform has grown exponentially",
    "start": "106159",
    "end": "108240"
  },
  {
    "text": "and is used by many fortune 500",
    "start": "108240",
    "end": "110000"
  },
  {
    "text": "companies for mission critical",
    "start": "110000",
    "end": "111280"
  },
  {
    "text": "applications",
    "start": "111280",
    "end": "112640"
  },
  {
    "text": "as use of this platform has grown so is",
    "start": "112640",
    "end": "115119"
  },
  {
    "text": "databricks",
    "start": "115119",
    "end": "116079"
  },
  {
    "text": "today we have over 6 000 customers more",
    "start": "116079",
    "end": "118320"
  },
  {
    "text": "than 1500 employees",
    "start": "118320",
    "end": "120079"
  },
  {
    "text": "over 300 of which are engineers and we",
    "start": "120079",
    "end": "122320"
  },
  {
    "text": "have 350 million in annual recurring",
    "start": "122320",
    "end": "124640"
  },
  {
    "text": "revenue",
    "start": "124640",
    "end": "126320"
  },
  {
    "start": "126000",
    "end": "173000"
  },
  {
    "text": "so why is databricks so popular uh as i",
    "start": "126320",
    "end": "128720"
  },
  {
    "text": "just mentioned",
    "start": "128720",
    "end": "129520"
  },
  {
    "text": "we provide unified analytics platform",
    "start": "129520",
    "end": "131680"
  },
  {
    "text": "that allows customers to be able to",
    "start": "131680",
    "end": "133200"
  },
  {
    "text": "easily write",
    "start": "133200",
    "end": "133840"
  },
  {
    "text": "analytics jobs to get value out of their",
    "start": "133840",
    "end": "135760"
  },
  {
    "text": "data while the company originally",
    "start": "135760",
    "end": "138000"
  },
  {
    "text": "started out as a company built around",
    "start": "138000",
    "end": "139760"
  },
  {
    "text": "apache spark",
    "start": "139760",
    "end": "141120"
  },
  {
    "text": "we have since started incorporating",
    "start": "141120",
    "end": "142800"
  },
  {
    "text": "other types of analytics engines",
    "start": "142800",
    "end": "144400"
  },
  {
    "text": "into our product like tensorflow so you",
    "start": "144400",
    "end": "146959"
  },
  {
    "text": "have a choice of analytics engines to",
    "start": "146959",
    "end": "148720"
  },
  {
    "text": "run jobs on",
    "start": "148720",
    "end": "149920"
  },
  {
    "text": "our platform is also multi-cloud and",
    "start": "149920",
    "end": "151920"
  },
  {
    "text": "runs in aws and azure",
    "start": "151920",
    "end": "154239"
  },
  {
    "text": "we provide built-in notebooking and",
    "start": "154239",
    "end": "156000"
  },
  {
    "text": "reporting and allow customers to easily",
    "start": "156000",
    "end": "158480"
  },
  {
    "text": "spin up",
    "start": "158480",
    "end": "159280"
  },
  {
    "text": "and spin down spark clusters in a cost",
    "start": "159280",
    "end": "161440"
  },
  {
    "text": "effective way",
    "start": "161440",
    "end": "162640"
  },
  {
    "text": "this allows data scientists data",
    "start": "162640",
    "end": "164480"
  },
  {
    "text": "engineers and business users to focus",
    "start": "164480",
    "end": "166720"
  },
  {
    "text": "entirely on the things they're good at",
    "start": "166720",
    "end": "168959"
  },
  {
    "text": "and not have to worry about the details",
    "start": "168959",
    "end": "170560"
  },
  {
    "text": "of the underlying platform",
    "start": "170560",
    "end": "172959"
  },
  {
    "text": "so how do we build this platform well",
    "start": "172959",
    "end": "175360"
  },
  {
    "start": "173000",
    "end": "242000"
  },
  {
    "text": "databricks consists",
    "start": "175360",
    "end": "176400"
  },
  {
    "text": "of both a control plane and a data plane",
    "start": "176400",
    "end": "179120"
  },
  {
    "text": "the control plane is where customers log",
    "start": "179120",
    "end": "180959"
  },
  {
    "text": "into data bricks",
    "start": "180959",
    "end": "182000"
  },
  {
    "text": "and it allows customers to manage users",
    "start": "182000",
    "end": "184640"
  },
  {
    "text": "manage spark clusters",
    "start": "184640",
    "end": "186000"
  },
  {
    "text": "create notebooks set up jobs to run",
    "start": "186000",
    "end": "188400"
  },
  {
    "text": "periodically",
    "start": "188400",
    "end": "189519"
  },
  {
    "text": "and so on the databricks the data plane",
    "start": "189519",
    "end": "193040"
  },
  {
    "text": "is where the spark clusters run and you",
    "start": "193040",
    "end": "195680"
  },
  {
    "text": "may have noticed in the diagram",
    "start": "195680",
    "end": "197200"
  },
  {
    "text": "that there is one control plane and a",
    "start": "197200",
    "end": "199440"
  },
  {
    "text": "lot of data points",
    "start": "199440",
    "end": "200720"
  },
  {
    "text": "there's a reason for this and it's",
    "start": "200720",
    "end": "202319"
  },
  {
    "text": "because databricks uses what's known as",
    "start": "202319",
    "end": "204159"
  },
  {
    "text": "the ndpc model",
    "start": "204159",
    "end": "206000"
  },
  {
    "text": "this means that the control plane runs",
    "start": "206000",
    "end": "208000"
  },
  {
    "text": "in the databricks cloud account",
    "start": "208000",
    "end": "209440"
  },
  {
    "text": "but the data plane runs in customers",
    "start": "209440",
    "end": "211440"
  },
  {
    "text": "cloud account",
    "start": "211440",
    "end": "212799"
  },
  {
    "text": "the advantage of building your system",
    "start": "212799",
    "end": "214159"
  },
  {
    "text": "this way is that a customer's",
    "start": "214159",
    "end": "216080"
  },
  {
    "text": "data never needs to leave their account",
    "start": "216080",
    "end": "218319"
  },
  {
    "text": "this is particularly important for",
    "start": "218319",
    "end": "219840"
  },
  {
    "text": "security sensitive customers",
    "start": "219840",
    "end": "222159"
  },
  {
    "text": "our control plane is built on top of",
    "start": "222159",
    "end": "223599"
  },
  {
    "text": "kubernetes and we leverage a variety of",
    "start": "223599",
    "end": "225760"
  },
  {
    "text": "different open source projects",
    "start": "225760",
    "end": "227360"
  },
  {
    "text": "such as envoy mlflow koalas",
    "start": "227360",
    "end": "230480"
  },
  {
    "text": "nginx console redis",
    "start": "230480",
    "end": "233519"
  },
  {
    "text": "mlflow prometheus core dns",
    "start": "233519",
    "end": "236720"
  },
  {
    "text": "jaeger and so on we also write our",
    "start": "236720",
    "end": "239519"
  },
  {
    "text": "services",
    "start": "239519",
    "end": "240159"
  },
  {
    "text": "in scala and python databricks also",
    "start": "240159",
    "end": "243599"
  },
  {
    "start": "242000",
    "end": "257000"
  },
  {
    "text": "doesn't just operate a single control",
    "start": "243599",
    "end": "245360"
  },
  {
    "text": "plane",
    "start": "245360",
    "end": "245760"
  },
  {
    "text": "we operate many control planes all",
    "start": "245760",
    "end": "247360"
  },
  {
    "text": "around the world and across multiple",
    "start": "247360",
    "end": "249120"
  },
  {
    "text": "clouds",
    "start": "249120",
    "end": "250159"
  },
  {
    "text": "in fact we operate over 2000 kubernetes",
    "start": "250159",
    "end": "252720"
  },
  {
    "text": "clusters worldwide",
    "start": "252720",
    "end": "254000"
  },
  {
    "text": "which are accessed by over a hundred",
    "start": "254000",
    "end": "255840"
  },
  {
    "text": "thousand users",
    "start": "255840",
    "end": "258000"
  },
  {
    "start": "257000",
    "end": "273000"
  },
  {
    "text": "these control planes manage hundreds of",
    "start": "258000",
    "end": "259759"
  },
  {
    "text": "thousands of spark clusters every day",
    "start": "259759",
    "end": "261680"
  },
  {
    "text": "and launch millions of vms to execute",
    "start": "261680",
    "end": "263919"
  },
  {
    "text": "customer submitted spark jobs",
    "start": "263919",
    "end": "265919"
  },
  {
    "text": "these spark jobs process exabytes of",
    "start": "265919",
    "end": "267919"
  },
  {
    "text": "data in order to produce reports",
    "start": "267919",
    "end": "269919"
  },
  {
    "text": "and other business insights that are",
    "start": "269919",
    "end": "271280"
  },
  {
    "text": "used by customers",
    "start": "271280",
    "end": "274240"
  },
  {
    "start": "273000",
    "end": "317000"
  },
  {
    "text": "all right so let's talk a little bit",
    "start": "274320",
    "end": "275520"
  },
  {
    "text": "about private link uh what is private",
    "start": "275520",
    "end": "277520"
  },
  {
    "text": "link and why did we integrate with it",
    "start": "277520",
    "end": "279680"
  },
  {
    "text": "well it turns out that even though",
    "start": "279680",
    "end": "281680"
  },
  {
    "text": "customer data never leaves the",
    "start": "281680",
    "end": "283040"
  },
  {
    "text": "customer's cloud account due to our nvpc",
    "start": "283040",
    "end": "285199"
  },
  {
    "text": "model",
    "start": "285199",
    "end": "285919"
  },
  {
    "text": "some security sensitive customers are",
    "start": "285919",
    "end": "287759"
  },
  {
    "text": "still concerned about the results of",
    "start": "287759",
    "end": "289360"
  },
  {
    "text": "their jobs or other potentially",
    "start": "289360",
    "end": "291040"
  },
  {
    "text": "sensitive information stored in a",
    "start": "291040",
    "end": "292560"
  },
  {
    "text": "platform",
    "start": "292560",
    "end": "293520"
  },
  {
    "text": "being sent over the public internet even",
    "start": "293520",
    "end": "295919"
  },
  {
    "text": "if all of it",
    "start": "295919",
    "end": "296639"
  },
  {
    "text": "is encrypted during transit they want to",
    "start": "296639",
    "end": "299600"
  },
  {
    "text": "be able to guarantee",
    "start": "299600",
    "end": "300720"
  },
  {
    "text": "that communication to databricks never",
    "start": "300720",
    "end": "302800"
  },
  {
    "text": "occurs over the public internet",
    "start": "302800",
    "end": "304560"
  },
  {
    "text": "and also want to limit access so their",
    "start": "304560",
    "end": "306639"
  },
  {
    "text": "databricks accounts",
    "start": "306639",
    "end": "307680"
  },
  {
    "text": "are only accessible through specific",
    "start": "307680",
    "end": "309520"
  },
  {
    "text": "endpoints in their cloud network",
    "start": "309520",
    "end": "311840"
  },
  {
    "text": "in order to provide this level of",
    "start": "311840",
    "end": "313199"
  },
  {
    "text": "security all major cloud providers offer",
    "start": "313199",
    "end": "315680"
  },
  {
    "text": "a service called private link",
    "start": "315680",
    "end": "318479"
  },
  {
    "text": "at a high level private link has two",
    "start": "318479",
    "end": "320240"
  },
  {
    "text": "components to it",
    "start": "320240",
    "end": "321680"
  },
  {
    "text": "a private link service and a private",
    "start": "321680",
    "end": "323520"
  },
  {
    "text": "link endpoint",
    "start": "323520",
    "end": "324720"
  },
  {
    "text": "private link service is configured as",
    "start": "324720",
    "end": "326320"
  },
  {
    "text": "part of the load balancer that allows",
    "start": "326320",
    "end": "328080"
  },
  {
    "text": "traffic into your vnet",
    "start": "328080",
    "end": "329600"
  },
  {
    "text": "and ultimately to your application",
    "start": "329600",
    "end": "331840"
  },
  {
    "text": "private link endpoint",
    "start": "331840",
    "end": "333199"
  },
  {
    "text": "is in databrick's case set up in the",
    "start": "333199",
    "end": "335680"
  },
  {
    "text": "customer's account",
    "start": "335680",
    "end": "336880"
  },
  {
    "text": "and provides an ip address and dns name",
    "start": "336880",
    "end": "339680"
  },
  {
    "text": "that can only be routed to",
    "start": "339680",
    "end": "341120"
  },
  {
    "text": "from inside the customer's cloud network",
    "start": "341120",
    "end": "343680"
  },
  {
    "text": "as part of the private link endpoint",
    "start": "343680",
    "end": "345039"
  },
  {
    "text": "setup",
    "start": "345039",
    "end": "345600"
  },
  {
    "text": "you specify a private link service that",
    "start": "345600",
    "end": "347440"
  },
  {
    "text": "the endpoint sends traffic to",
    "start": "347440",
    "end": "349520"
  },
  {
    "text": "traffic between the private link",
    "start": "349520",
    "end": "350800"
  },
  {
    "text": "endpoint and private link service always",
    "start": "350800",
    "end": "352720"
  },
  {
    "text": "goes over",
    "start": "352720",
    "end": "353440"
  },
  {
    "text": "cloud providers private internet giving",
    "start": "353440",
    "end": "355600"
  },
  {
    "text": "customers a more secure way to access",
    "start": "355600",
    "end": "357680"
  },
  {
    "text": "their cloud resource",
    "start": "357680",
    "end": "358800"
  },
  {
    "text": "without any communication ever leaving",
    "start": "358800",
    "end": "361520"
  },
  {
    "text": "their",
    "start": "361520",
    "end": "361919"
  },
  {
    "text": "cloud accounts alright",
    "start": "361919",
    "end": "364960"
  },
  {
    "text": "so that's a brief uh overview of private",
    "start": "364960",
    "end": "367120"
  },
  {
    "text": "link um",
    "start": "367120",
    "end": "368160"
  },
  {
    "text": "and uh i'll hand the presentation off",
    "start": "368160",
    "end": "370400"
  },
  {
    "text": "now to mei shing",
    "start": "370400",
    "end": "371600"
  },
  {
    "text": "uh he'll talk about the challenges we",
    "start": "371600",
    "end": "373199"
  },
  {
    "text": "faced at databricks integrating private",
    "start": "373199",
    "end": "375039"
  },
  {
    "text": "link",
    "start": "375039",
    "end": "375759"
  },
  {
    "text": "and how we solved those challenges we'll",
    "start": "375759",
    "end": "378000"
  },
  {
    "text": "conclude the talk with the demo",
    "start": "378000",
    "end": "379520"
  },
  {
    "text": "showing a databricks workspace being",
    "start": "379520",
    "end": "381199"
  },
  {
    "text": "accessed over privately",
    "start": "381199",
    "end": "384319"
  },
  {
    "start": "384000",
    "end": "447000"
  },
  {
    "text": "thank you michael hello everyone my name",
    "start": "385600",
    "end": "388720"
  },
  {
    "text": "is meijin",
    "start": "388720",
    "end": "389840"
  },
  {
    "text": "and next i will share our journey to",
    "start": "389840",
    "end": "392800"
  },
  {
    "text": "integrate with azure",
    "start": "392800",
    "end": "394000"
  },
  {
    "text": "private link as you can see in the",
    "start": "394000",
    "end": "397120"
  },
  {
    "text": "diagram",
    "start": "397120",
    "end": "397919"
  },
  {
    "text": "uh one if you want to use azure private",
    "start": "397919",
    "end": "400720"
  },
  {
    "text": "link you",
    "start": "400720",
    "end": "401360"
  },
  {
    "text": "need to first provision one",
    "start": "401360",
    "end": "404560"
  },
  {
    "text": "private endpoint within your virtual",
    "start": "404560",
    "end": "406560"
  },
  {
    "text": "network then connect",
    "start": "406560",
    "end": "408160"
  },
  {
    "text": "the private endpoint to the private link",
    "start": "408160",
    "end": "410479"
  },
  {
    "text": "service inside the service provider's",
    "start": "410479",
    "end": "412800"
  },
  {
    "text": "virtual network",
    "start": "412800",
    "end": "414000"
  },
  {
    "text": "in this case our databricks virtual",
    "start": "414000",
    "end": "416160"
  },
  {
    "text": "network",
    "start": "416160",
    "end": "417039"
  },
  {
    "text": "and then you can send your traffic to",
    "start": "417039",
    "end": "419120"
  },
  {
    "text": "this private",
    "start": "419120",
    "end": "420160"
  },
  {
    "text": "endpoint inside of inet which is a",
    "start": "420160",
    "end": "423840"
  },
  {
    "text": "local kind of ipv4 address and azure",
    "start": "423840",
    "end": "427039"
  },
  {
    "text": "private link",
    "start": "427039",
    "end": "428000"
  },
  {
    "text": "will take care of the traffic routing",
    "start": "428000",
    "end": "430160"
  },
  {
    "text": "using",
    "start": "430160",
    "end": "431039"
  },
  {
    "text": "azure networking instead of the public",
    "start": "431039",
    "end": "435120"
  },
  {
    "text": "internet and send the traffic to the",
    "start": "435120",
    "end": "437280"
  },
  {
    "text": "private link service",
    "start": "437280",
    "end": "438560"
  },
  {
    "text": "or inside the databricks uh net",
    "start": "438560",
    "end": "441919"
  },
  {
    "text": "that's how the traffic is more secure",
    "start": "441919",
    "end": "445039"
  },
  {
    "text": "and",
    "start": "445039",
    "end": "445440"
  },
  {
    "text": "more private so at databricks we have",
    "start": "445440",
    "end": "449599"
  },
  {
    "start": "447000",
    "end": "492000"
  },
  {
    "text": "several",
    "start": "449599",
    "end": "450080"
  },
  {
    "text": "use cases to integrate with azure",
    "start": "450080",
    "end": "452960"
  },
  {
    "text": "private link",
    "start": "452960",
    "end": "453680"
  },
  {
    "text": "to benefit our customers the first use",
    "start": "453680",
    "end": "456479"
  },
  {
    "text": "case which will focus",
    "start": "456479",
    "end": "458160"
  },
  {
    "text": "mostly in this talk is the user to",
    "start": "458160",
    "end": "461280"
  },
  {
    "text": "web application traffic so user can set",
    "start": "461280",
    "end": "465120"
  },
  {
    "text": "up",
    "start": "465120",
    "end": "465599"
  },
  {
    "text": "a private link endpoint inside their",
    "start": "465599",
    "end": "468080"
  },
  {
    "text": "virtual network",
    "start": "468080",
    "end": "469440"
  },
  {
    "text": "and uh through private link they can",
    "start": "469440",
    "end": "471919"
  },
  {
    "text": "talk to the databricks control plan",
    "start": "471919",
    "end": "474400"
  },
  {
    "text": "web application yeah they can use the",
    "start": "474400",
    "end": "476639"
  },
  {
    "text": "notebook there to launch",
    "start": "476639",
    "end": "478319"
  },
  {
    "text": "clusters do all the data science work",
    "start": "478319",
    "end": "481280"
  },
  {
    "text": "now there are other use cases",
    "start": "481280",
    "end": "483039"
  },
  {
    "text": "like uh databricks control plan to",
    "start": "483039",
    "end": "485680"
  },
  {
    "text": "databricks like",
    "start": "485680",
    "end": "486720"
  },
  {
    "text": "a data plan communication can also be",
    "start": "486720",
    "end": "489680"
  },
  {
    "text": "secured",
    "start": "489680",
    "end": "490879"
  },
  {
    "text": "through the private link feature",
    "start": "490879",
    "end": "494400"
  },
  {
    "start": "492000",
    "end": "698000"
  },
  {
    "text": "so what is the challenge on the",
    "start": "494400",
    "end": "497199"
  },
  {
    "text": "infrastructure side to integrate with",
    "start": "497199",
    "end": "499440"
  },
  {
    "text": "private link um so first of all",
    "start": "499440",
    "end": "504000"
  },
  {
    "text": "databricks is a first party service on",
    "start": "504000",
    "end": "506160"
  },
  {
    "text": "azure uh what does that mean",
    "start": "506160",
    "end": "508240"
  },
  {
    "text": "so actually it's called azure databricks",
    "start": "508240",
    "end": "511039"
  },
  {
    "text": "so",
    "start": "511039",
    "end": "511360"
  },
  {
    "text": "it's appeared as a native servicing",
    "start": "511360",
    "end": "513839"
  },
  {
    "text": "azure",
    "start": "513839",
    "end": "514719"
  },
  {
    "text": "and so creating a databricks workspace",
    "start": "514719",
    "end": "517518"
  },
  {
    "text": "is",
    "start": "517519",
    "end": "518240"
  },
  {
    "text": "as easy as creating um other resources",
    "start": "518240",
    "end": "521760"
  },
  {
    "text": "for example virtual machines and a",
    "start": "521760",
    "end": "523680"
  },
  {
    "text": "database",
    "start": "523680",
    "end": "524320"
  },
  {
    "text": "being azure you just need to go through",
    "start": "524320",
    "end": "526640"
  },
  {
    "text": "several clicks then you can",
    "start": "526640",
    "end": "528720"
  },
  {
    "text": "create a database bricks workspace to",
    "start": "528720",
    "end": "531839"
  },
  {
    "text": "work on",
    "start": "531839",
    "end": "532959"
  },
  {
    "text": "um so from azure site they provided two",
    "start": "532959",
    "end": "536640"
  },
  {
    "text": "types of private link support models",
    "start": "536640",
    "end": "538880"
  },
  {
    "text": "first there is the",
    "start": "538880",
    "end": "540240"
  },
  {
    "text": "third party offering which is available",
    "start": "540240",
    "end": "542800"
  },
  {
    "text": "to all the azure customers",
    "start": "542800",
    "end": "545279"
  },
  {
    "text": "and it's purely on ipv4",
    "start": "545279",
    "end": "549760"
  },
  {
    "text": "so um the second uh",
    "start": "549760",
    "end": "553040"
  },
  {
    "text": "the second type of support model is",
    "start": "553040",
    "end": "555120"
  },
  {
    "text": "called the past version of",
    "start": "555120",
    "end": "557120"
  },
  {
    "text": "private link it definitely provides",
    "start": "557120",
    "end": "559680"
  },
  {
    "text": "deeper integration with other azure",
    "start": "559680",
    "end": "561839"
  },
  {
    "text": "services",
    "start": "561839",
    "end": "563120"
  },
  {
    "text": "so all the other like first third-party",
    "start": "563120",
    "end": "566240"
  },
  {
    "text": "service on azure they all use",
    "start": "566240",
    "end": "568320"
  },
  {
    "text": "past version of private link so even",
    "start": "568320",
    "end": "571839"
  },
  {
    "text": "though it",
    "start": "571839",
    "end": "572320"
  },
  {
    "text": "appears to the customer as a router over",
    "start": "572320",
    "end": "575040"
  },
  {
    "text": "ipv4",
    "start": "575040",
    "end": "576160"
  },
  {
    "text": "like shown in the previous diagram um",
    "start": "576160",
    "end": "579040"
  },
  {
    "text": "you connect that to your",
    "start": "579040",
    "end": "580320"
  },
  {
    "text": "um to the private link and the points",
    "start": "580320",
    "end": "584240"
  },
  {
    "text": "in your v-net which is a local ipv4",
    "start": "584240",
    "end": "586800"
  },
  {
    "text": "address",
    "start": "586800",
    "end": "587519"
  },
  {
    "text": "but actually the traffic routed by azure",
    "start": "587519",
    "end": "589839"
  },
  {
    "text": "networking is",
    "start": "589839",
    "end": "591680"
  },
  {
    "text": "carried over ipv6 between these two",
    "start": "591680",
    "end": "594399"
  },
  {
    "text": "v-nets",
    "start": "594399",
    "end": "595360"
  },
  {
    "text": "and that's the past version of private",
    "start": "595360",
    "end": "597760"
  },
  {
    "text": "link",
    "start": "597760",
    "end": "598800"
  },
  {
    "text": "as a first body service on azure we have",
    "start": "598800",
    "end": "601519"
  },
  {
    "text": "to use the path version of",
    "start": "601519",
    "end": "603440"
  },
  {
    "text": "private link um so",
    "start": "603440",
    "end": "606560"
  },
  {
    "text": "the challenge for us is basically",
    "start": "606560",
    "end": "609760"
  },
  {
    "text": "there's a requirement you have to accept",
    "start": "609760",
    "end": "612399"
  },
  {
    "text": "ipv6 traffic on",
    "start": "612399",
    "end": "614160"
  },
  {
    "text": "the control plan on to make the",
    "start": "614160",
    "end": "618240"
  },
  {
    "text": "private link traffic work so from azure",
    "start": "618240",
    "end": "621120"
  },
  {
    "text": "site",
    "start": "621120",
    "end": "621600"
  },
  {
    "text": "they do have a lot of ipv6 support on",
    "start": "621600",
    "end": "625360"
  },
  {
    "text": "most of their resources in terms of",
    "start": "625360",
    "end": "628399"
  },
  {
    "text": "v-net virtual network or subnet load",
    "start": "628399",
    "end": "631440"
  },
  {
    "text": "balancer",
    "start": "631440",
    "end": "632560"
  },
  {
    "text": "uh vmss which is virtual machine skill",
    "start": "632560",
    "end": "635200"
  },
  {
    "text": "set",
    "start": "635200",
    "end": "636240"
  },
  {
    "text": "these resource all support dual stack",
    "start": "636240",
    "end": "638480"
  },
  {
    "text": "like you can assign both ipv4 and the",
    "start": "638480",
    "end": "641040"
  },
  {
    "text": "ipv6 to this resource",
    "start": "641040",
    "end": "643040"
  },
  {
    "text": "at the same time so the challenge for us",
    "start": "643040",
    "end": "646880"
  },
  {
    "text": "is really",
    "start": "646880",
    "end": "647680"
  },
  {
    "text": "um our control plan service as uh shown",
    "start": "647680",
    "end": "650560"
  },
  {
    "text": "before right we're completely running on",
    "start": "650560",
    "end": "652480"
  },
  {
    "text": "top of kubernetes",
    "start": "652480",
    "end": "654000"
  },
  {
    "text": "which is purely ipv4 at this point",
    "start": "654000",
    "end": "657360"
  },
  {
    "text": "also um the private link traffic coming",
    "start": "657360",
    "end": "661120"
  },
  {
    "text": "in as",
    "start": "661120",
    "end": "661680"
  },
  {
    "text": "ipv6 traffic so we have to accept",
    "start": "661680",
    "end": "664959"
  },
  {
    "text": "ipv6 traffic um to our kubernetes",
    "start": "664959",
    "end": "669279"
  },
  {
    "text": "services there are two high-level",
    "start": "669279",
    "end": "672079"
  },
  {
    "text": "options to solve this problem the first",
    "start": "672079",
    "end": "674240"
  },
  {
    "text": "is",
    "start": "674240",
    "end": "674720"
  },
  {
    "text": "the proxy solution we can convert the",
    "start": "674720",
    "end": "677279"
  },
  {
    "text": "ipv6 to",
    "start": "677279",
    "end": "678640"
  },
  {
    "text": "ipv4 traffic outside of kubernetes and",
    "start": "678640",
    "end": "681839"
  },
  {
    "text": "then just",
    "start": "681839",
    "end": "682480"
  },
  {
    "text": "talk ipv4 to the kubernetes services",
    "start": "682480",
    "end": "685760"
  },
  {
    "text": "and the other option is just a support",
    "start": "685760",
    "end": "688160"
  },
  {
    "text": "ipv6",
    "start": "688160",
    "end": "689200"
  },
  {
    "text": "natively in kubernetes so the ipv6",
    "start": "689200",
    "end": "692399"
  },
  {
    "text": "private link",
    "start": "692399",
    "end": "693120"
  },
  {
    "text": "traffic can directly hit a service",
    "start": "693120",
    "end": "696079"
  },
  {
    "text": "running on kubernetes",
    "start": "696079",
    "end": "698480"
  },
  {
    "start": "698000",
    "end": "791000"
  },
  {
    "text": "um yeah so a little bit",
    "start": "698480",
    "end": "702079"
  },
  {
    "text": "about the background of uh running",
    "start": "702079",
    "end": "704800"
  },
  {
    "text": "kubernetes at databricks",
    "start": "704800",
    "end": "706640"
  },
  {
    "text": "so um at databricks uh we run all the",
    "start": "706640",
    "end": "710000"
  },
  {
    "text": "control plane surveys on kubernetes but",
    "start": "710000",
    "end": "712000"
  },
  {
    "text": "we are not",
    "start": "712000",
    "end": "712639"
  },
  {
    "text": "using the manager kubernetes service for",
    "start": "712639",
    "end": "714959"
  },
  {
    "text": "example aks",
    "start": "714959",
    "end": "716560"
  },
  {
    "text": "on mainly because databricks is",
    "start": "716560",
    "end": "718800"
  },
  {
    "text": "multi-cloud",
    "start": "718800",
    "end": "719839"
  },
  {
    "text": "yeah we want to be consistent across our",
    "start": "719839",
    "end": "722560"
  },
  {
    "text": "different cloud providers",
    "start": "722560",
    "end": "724240"
  },
  {
    "text": "so we make our own like virtual machine",
    "start": "724240",
    "end": "727279"
  },
  {
    "text": "images",
    "start": "727279",
    "end": "728000"
  },
  {
    "text": "and we make sure these vms can",
    "start": "728000",
    "end": "731360"
  },
  {
    "text": "bootstrap into kubernetes clusters and",
    "start": "731360",
    "end": "734399"
  },
  {
    "text": "we have a lot more control over that we",
    "start": "734399",
    "end": "737440"
  },
  {
    "text": "can make sure",
    "start": "737440",
    "end": "738160"
  },
  {
    "text": "it has the same like a kernel os version",
    "start": "738160",
    "end": "741279"
  },
  {
    "text": "kubernetes version",
    "start": "741279",
    "end": "742880"
  },
  {
    "text": "and it's easier to support our own",
    "start": "742880",
    "end": "746000"
  },
  {
    "text": "services",
    "start": "746000",
    "end": "747600"
  },
  {
    "text": "in terms of the configuration we totally",
    "start": "747600",
    "end": "750959"
  },
  {
    "text": "disable the ipv6",
    "start": "750959",
    "end": "752720"
  },
  {
    "text": "from the kernel level because we don't",
    "start": "752720",
    "end": "754480"
  },
  {
    "text": "need that before",
    "start": "754480",
    "end": "756079"
  },
  {
    "text": "supporting private link and the cli",
    "start": "756079",
    "end": "758720"
  },
  {
    "text": "plugin we're using flanno",
    "start": "758720",
    "end": "760720"
  },
  {
    "text": "uh the container runtime is darker the",
    "start": "760720",
    "end": "763360"
  },
  {
    "text": "version we're running is uh um",
    "start": "763360",
    "end": "765600"
  },
  {
    "text": "kubernetes version one run is a v1016",
    "start": "765600",
    "end": "769680"
  },
  {
    "text": "uh the load balancer in azure is a",
    "start": "769680",
    "end": "771600"
  },
  {
    "text": "little bit different from",
    "start": "771600",
    "end": "773279"
  },
  {
    "text": "like a low balancer settings in aws or",
    "start": "773279",
    "end": "776800"
  },
  {
    "text": "tcp",
    "start": "776800",
    "end": "778000"
  },
  {
    "text": "so basically azure there's one",
    "start": "778000",
    "end": "781440"
  },
  {
    "text": "single load balancer and all the",
    "start": "781440",
    "end": "783680"
  },
  {
    "text": "kubernetes",
    "start": "783680",
    "end": "784720"
  },
  {
    "text": "load balancer service is added as like a",
    "start": "784720",
    "end": "787600"
  },
  {
    "text": "load balancer rules on the same load",
    "start": "787600",
    "end": "789680"
  },
  {
    "text": "balancer",
    "start": "789680",
    "end": "792160"
  },
  {
    "start": "791000",
    "end": "932000"
  },
  {
    "text": "so we first explored the first option",
    "start": "792240",
    "end": "795519"
  },
  {
    "text": "like a proxy solution outside kubernetes",
    "start": "795519",
    "end": "799600"
  },
  {
    "text": "cluster this solution is also used by",
    "start": "799600",
    "end": "802800"
  },
  {
    "text": "some other like",
    "start": "802800",
    "end": "803680"
  },
  {
    "text": "azure internal service so",
    "start": "803680",
    "end": "806880"
  },
  {
    "text": "the basic idea is a simple",
    "start": "806880",
    "end": "810639"
  },
  {
    "text": "within the same v-net we can provision",
    "start": "810639",
    "end": "813680"
  },
  {
    "text": "a dedicated load balancer which accepted",
    "start": "813680",
    "end": "816959"
  },
  {
    "text": "the ipv6 private link traffic",
    "start": "816959",
    "end": "820160"
  },
  {
    "text": "this loaded balancer can send traffic to",
    "start": "820160",
    "end": "822639"
  },
  {
    "text": "a back-end",
    "start": "822639",
    "end": "823440"
  },
  {
    "text": "like a vmss virtual machine",
    "start": "823440",
    "end": "826720"
  },
  {
    "text": "a skill set then we can run the private",
    "start": "826720",
    "end": "830000"
  },
  {
    "text": "link proxy",
    "start": "830000",
    "end": "831120"
  },
  {
    "text": "on this vmss",
    "start": "831120",
    "end": "834160"
  },
  {
    "text": "which will terminate the ipv6 traffic",
    "start": "834160",
    "end": "837519"
  },
  {
    "text": "proxy to ipv4 then again talking to the",
    "start": "837519",
    "end": "841199"
  },
  {
    "text": "kubernetes cluster",
    "start": "841199",
    "end": "842880"
  },
  {
    "text": "uh so the kubernetes cluster load",
    "start": "842880",
    "end": "844959"
  },
  {
    "text": "balance also serving the uh public",
    "start": "844959",
    "end": "847199"
  },
  {
    "text": "traffic which is ipv4 from the rest of",
    "start": "847199",
    "end": "850800"
  },
  {
    "text": "the users",
    "start": "850800",
    "end": "852240"
  },
  {
    "text": "um so this seems to be a",
    "start": "852240",
    "end": "856079"
  },
  {
    "text": "straightforward solution but there are a",
    "start": "856079",
    "end": "858880"
  },
  {
    "text": "lot of challenges",
    "start": "858880",
    "end": "859920"
  },
  {
    "text": "actually um the first question is uh how",
    "start": "859920",
    "end": "862399"
  },
  {
    "text": "can we",
    "start": "862399",
    "end": "863040"
  },
  {
    "text": "deploy this uh proxy um",
    "start": "863040",
    "end": "866079"
  },
  {
    "text": "do we deliver it as a virtual machine",
    "start": "866079",
    "end": "868800"
  },
  {
    "text": "image",
    "start": "868800",
    "end": "869279"
  },
  {
    "text": "because it's wrong on top of a virtual",
    "start": "869279",
    "end": "871360"
  },
  {
    "text": "machine skill set",
    "start": "871360",
    "end": "872639"
  },
  {
    "text": "yeah do we deliver as a virtual machine",
    "start": "872639",
    "end": "874800"
  },
  {
    "text": "image or container image",
    "start": "874800",
    "end": "876880"
  },
  {
    "text": "it is completely outside kubernetes",
    "start": "876880",
    "end": "879120"
  },
  {
    "text": "right so",
    "start": "879120",
    "end": "880639"
  },
  {
    "text": "how do we actually deploy it we cannot",
    "start": "880639",
    "end": "883600"
  },
  {
    "text": "use",
    "start": "883600",
    "end": "884160"
  },
  {
    "text": "like a kubocity or commands maybe we can",
    "start": "884160",
    "end": "887360"
  },
  {
    "text": "run some docker commands if",
    "start": "887360",
    "end": "889040"
  },
  {
    "text": "we run as a container or maybe we just",
    "start": "889040",
    "end": "891519"
  },
  {
    "text": "deployed a virtual machine",
    "start": "891519",
    "end": "893360"
  },
  {
    "text": "using the virtual machine image but we",
    "start": "893360",
    "end": "895680"
  },
  {
    "text": "don't have this support model right it",
    "start": "895680",
    "end": "897600"
  },
  {
    "text": "will be a completely new kind of",
    "start": "897600",
    "end": "900959"
  },
  {
    "text": "service um we support",
    "start": "900959",
    "end": "904959"
  },
  {
    "text": "and the other question is how um how we",
    "start": "904959",
    "end": "908160"
  },
  {
    "text": "monitor this service right the metrics",
    "start": "908160",
    "end": "910720"
  },
  {
    "text": "logins and",
    "start": "910720",
    "end": "912480"
  },
  {
    "text": "these kind of stuff we only have native",
    "start": "912480",
    "end": "915120"
  },
  {
    "text": "support from communities",
    "start": "915120",
    "end": "917600"
  },
  {
    "text": "we don't have such a use case like",
    "start": "917600",
    "end": "921440"
  },
  {
    "text": "a virtual machine skills outside the",
    "start": "921440",
    "end": "923760"
  },
  {
    "text": "communities then",
    "start": "923760",
    "end": "924880"
  },
  {
    "text": "provide metrics and loggings so these",
    "start": "924880",
    "end": "927440"
  },
  {
    "text": "are the",
    "start": "927440",
    "end": "928320"
  },
  {
    "text": "problems to use this proxy solution",
    "start": "928320",
    "end": "933120"
  },
  {
    "start": "932000",
    "end": "1047000"
  },
  {
    "text": "and then because of that we also explore",
    "start": "933120",
    "end": "936480"
  },
  {
    "text": "the second option",
    "start": "936480",
    "end": "938000"
  },
  {
    "text": "which is to support kubernetes uh",
    "start": "938000",
    "end": "940720"
  },
  {
    "text": "natively with",
    "start": "940720",
    "end": "941720"
  },
  {
    "text": "ipv6 so um",
    "start": "941720",
    "end": "945040"
  },
  {
    "text": "because we still need to serve ipv4",
    "start": "945040",
    "end": "947600"
  },
  {
    "text": "traffic",
    "start": "947600",
    "end": "948160"
  },
  {
    "text": "for the public like access which are not",
    "start": "948160",
    "end": "951680"
  },
  {
    "text": "through private link so we have to use",
    "start": "951680",
    "end": "954320"
  },
  {
    "text": "the",
    "start": "954320",
    "end": "954880"
  },
  {
    "text": "dual stack feature in kubernetes if we",
    "start": "954880",
    "end": "958240"
  },
  {
    "text": "choose to",
    "start": "958240",
    "end": "959199"
  },
  {
    "text": "have native ipv6 support",
    "start": "959199",
    "end": "962560"
  },
  {
    "text": "if we use that feature dual stack on the",
    "start": "962560",
    "end": "965680"
  },
  {
    "text": "load balance level we",
    "start": "965680",
    "end": "967360"
  },
  {
    "text": "can accept that both ipv6 and v4",
    "start": "967360",
    "end": "970720"
  },
  {
    "text": "the overall architecture looks",
    "start": "970720",
    "end": "973759"
  },
  {
    "text": "like a simpler which is good",
    "start": "973759",
    "end": "976800"
  },
  {
    "text": "um however it this option has its own",
    "start": "976800",
    "end": "979839"
  },
  {
    "text": "challenges",
    "start": "979839",
    "end": "980959"
  },
  {
    "text": "the first um the first item is like",
    "start": "980959",
    "end": "984240"
  },
  {
    "text": "the stability concern on the version",
    "start": "984240",
    "end": "987199"
  },
  {
    "text": "we're running on 1.16",
    "start": "987199",
    "end": "989680"
  },
  {
    "text": "kubernetes uh the eurostat feature is",
    "start": "989680",
    "end": "992880"
  },
  {
    "text": "just an alpha feature",
    "start": "992880",
    "end": "994639"
  },
  {
    "text": "um so dual stack is uh targeting",
    "start": "994639",
    "end": "997839"
  },
  {
    "text": "uh to be beta in 1.20",
    "start": "997839",
    "end": "1001680"
  },
  {
    "text": "um so it's not a good idea to run",
    "start": "1001680",
    "end": "1005199"
  },
  {
    "text": "one up to enable a alpha feature",
    "start": "1005199",
    "end": "1008240"
  },
  {
    "text": "in the production workload on second",
    "start": "1008240",
    "end": "1011519"
  },
  {
    "text": "item is like this option seems to be",
    "start": "1011519",
    "end": "1015199"
  },
  {
    "text": "an overkill because we only need",
    "start": "1015199",
    "end": "1018639"
  },
  {
    "text": "uh ipv6 support at the front end",
    "start": "1018639",
    "end": "1022160"
  },
  {
    "text": "maybe several services and um like",
    "start": "1022160",
    "end": "1025600"
  },
  {
    "text": "ports will require ipv6 support but most",
    "start": "1025600",
    "end": "1029438"
  },
  {
    "text": "of our kubernetes workload will not",
    "start": "1029439",
    "end": "1031678"
  },
  {
    "text": "require ipv6",
    "start": "1031679",
    "end": "1034319"
  },
  {
    "text": "and at last it could be a huge",
    "start": "1034319",
    "end": "1036480"
  },
  {
    "text": "engineering effort right",
    "start": "1036480",
    "end": "1038480"
  },
  {
    "text": "um about prototyping and testing to make",
    "start": "1038480",
    "end": "1041438"
  },
  {
    "text": "sure everything works",
    "start": "1041439",
    "end": "1042720"
  },
  {
    "text": "if we enable the dual stack feature in",
    "start": "1042720",
    "end": "1045520"
  },
  {
    "text": "kubernetes",
    "start": "1045520",
    "end": "1046959"
  },
  {
    "text": "yeah but we do uh we did uh some",
    "start": "1046959",
    "end": "1050400"
  },
  {
    "start": "1047000",
    "end": "1200000"
  },
  {
    "text": "investigation on like surrounding the",
    "start": "1050400",
    "end": "1052480"
  },
  {
    "text": "dual stack on communities",
    "start": "1052480",
    "end": "1054320"
  },
  {
    "text": "yeah first of all um don't confuse with",
    "start": "1054320",
    "end": "1057200"
  },
  {
    "text": "like",
    "start": "1057200",
    "end": "1057520"
  },
  {
    "text": "ipv6 single stack feature in kubernetes",
    "start": "1057520",
    "end": "1060880"
  },
  {
    "text": "uh which already entered the rfr in 1.9",
    "start": "1060880",
    "end": "1064640"
  },
  {
    "text": "and",
    "start": "1064640",
    "end": "1065120"
  },
  {
    "text": "move the two beta in 1.18",
    "start": "1065120",
    "end": "1068480"
  },
  {
    "text": "yeah so the dual stack is different from",
    "start": "1068480",
    "end": "1070880"
  },
  {
    "text": "the a single stack",
    "start": "1070880",
    "end": "1072240"
  },
  {
    "text": "feature and the uh the dual stack",
    "start": "1072240",
    "end": "1074960"
  },
  {
    "text": "feature",
    "start": "1074960",
    "end": "1075840"
  },
  {
    "text": "started as alpha in 1.16",
    "start": "1075840",
    "end": "1079760"
  },
  {
    "text": "but when we talking to the contributors",
    "start": "1079760",
    "end": "1082400"
  },
  {
    "text": "it seems like",
    "start": "1082400",
    "end": "1083520"
  },
  {
    "text": "this feature is mostly stable right now",
    "start": "1083520",
    "end": "1086640"
  },
  {
    "text": "the reason it's not promoted to the beta",
    "start": "1086640",
    "end": "1091120"
  },
  {
    "text": "is mostly due to some pending discussion",
    "start": "1091120",
    "end": "1093440"
  },
  {
    "text": "on the service apis",
    "start": "1093440",
    "end": "1095200"
  },
  {
    "text": "actually that will not affect our use",
    "start": "1095200",
    "end": "1097520"
  },
  {
    "text": "case for the dual stack",
    "start": "1097520",
    "end": "1099760"
  },
  {
    "text": "yeah and once you enable the dual stack",
    "start": "1099760",
    "end": "1102559"
  },
  {
    "text": "uh it will assign both",
    "start": "1102559",
    "end": "1104320"
  },
  {
    "text": "ipv4 and the v6 ip2",
    "start": "1104320",
    "end": "1107520"
  },
  {
    "text": "literally every parts running kubernetes",
    "start": "1107520",
    "end": "1110960"
  },
  {
    "text": "but for the service level uh you need to",
    "start": "1110960",
    "end": "1113360"
  },
  {
    "text": "have separate service",
    "start": "1113360",
    "end": "1115120"
  },
  {
    "text": "um for like a one for ipv4 and the one",
    "start": "1115120",
    "end": "1119200"
  },
  {
    "text": "dedicated service for ipv6 um",
    "start": "1119200",
    "end": "1122960"
  },
  {
    "text": "yeah to run the dual stack there's also",
    "start": "1122960",
    "end": "1125440"
  },
  {
    "text": "some networking prerequisites",
    "start": "1125440",
    "end": "1127919"
  },
  {
    "text": "um so first of all um the kubernetes",
    "start": "1127919",
    "end": "1131600"
  },
  {
    "text": "node the host level you must have the",
    "start": "1131600",
    "end": "1134000"
  },
  {
    "text": "dual stack support",
    "start": "1134000",
    "end": "1136160"
  },
  {
    "text": "yeah this is not surprising and azure",
    "start": "1136160",
    "end": "1139360"
  },
  {
    "text": "vmss",
    "start": "1139360",
    "end": "1140640"
  },
  {
    "text": "already support this they can have dual",
    "start": "1140640",
    "end": "1142880"
  },
  {
    "text": "stack support",
    "start": "1142880",
    "end": "1144640"
  },
  {
    "text": "second because every port will have both",
    "start": "1144640",
    "end": "1148559"
  },
  {
    "text": "ipv4 and ipv6 address",
    "start": "1148559",
    "end": "1151679"
  },
  {
    "text": "so the container networking interface",
    "start": "1151679",
    "end": "1155039"
  },
  {
    "text": "you choose the cmi",
    "start": "1155039",
    "end": "1156320"
  },
  {
    "text": "must support the dual stack as well as",
    "start": "1156320",
    "end": "1159440"
  },
  {
    "text": "we are using",
    "start": "1159440",
    "end": "1160160"
  },
  {
    "text": "flannel actually flannel will not",
    "start": "1160160",
    "end": "1162160"
  },
  {
    "text": "support a dual stack feature",
    "start": "1162160",
    "end": "1164559"
  },
  {
    "text": "and the like",
    "start": "1164559",
    "end": "1167600"
  },
  {
    "text": "known cli plugins can",
    "start": "1167600",
    "end": "1170960"
  },
  {
    "text": "better support the dual stack feature",
    "start": "1170960",
    "end": "1173679"
  },
  {
    "text": "kubernetes and",
    "start": "1173679",
    "end": "1174880"
  },
  {
    "text": "calico but least um",
    "start": "1174880",
    "end": "1178240"
  },
  {
    "text": "case it's case by case uh on different",
    "start": "1178240",
    "end": "1180720"
  },
  {
    "text": "cloud providers",
    "start": "1180720",
    "end": "1182000"
  },
  {
    "text": "it's not guaranteed to work like on",
    "start": "1182000",
    "end": "1184240"
  },
  {
    "text": "multi-cloud",
    "start": "1184240",
    "end": "1186160"
  },
  {
    "text": "so after we explore this dual stack uh",
    "start": "1186160",
    "end": "1189360"
  },
  {
    "text": "possibility on kubernetes",
    "start": "1189360",
    "end": "1191760"
  },
  {
    "text": "actually we go back to the proxy",
    "start": "1191760",
    "end": "1193919"
  },
  {
    "text": "solution",
    "start": "1193919",
    "end": "1194880"
  },
  {
    "text": "looks like a proxy solution is a better",
    "start": "1194880",
    "end": "1197760"
  },
  {
    "text": "option",
    "start": "1197760",
    "end": "1198880"
  },
  {
    "text": "in the short term then we try to revisit",
    "start": "1198880",
    "end": "1201360"
  },
  {
    "start": "1200000",
    "end": "1289000"
  },
  {
    "text": "our proxy solution",
    "start": "1201360",
    "end": "1203919"
  },
  {
    "text": "yeah can we combine the above two",
    "start": "1203919",
    "end": "1207600"
  },
  {
    "text": "options together uh whether it's",
    "start": "1207600",
    "end": "1210320"
  },
  {
    "text": "possible to move the proxy into the",
    "start": "1210320",
    "end": "1212559"
  },
  {
    "text": "kubernetes",
    "start": "1212559",
    "end": "1214000"
  },
  {
    "text": "then um if we do that we will definitely",
    "start": "1214000",
    "end": "1216960"
  },
  {
    "text": "get",
    "start": "1216960",
    "end": "1217360"
  },
  {
    "text": "the deployment and the monitoring tunnel",
    "start": "1217360",
    "end": "1220080"
  },
  {
    "text": "for free",
    "start": "1220080",
    "end": "1220960"
  },
  {
    "text": "yeah we know how to deploy kubernetes",
    "start": "1220960",
    "end": "1223120"
  },
  {
    "text": "workload and we have",
    "start": "1223120",
    "end": "1224480"
  },
  {
    "text": "native like metrics logging in the",
    "start": "1224480",
    "end": "1226880"
  },
  {
    "text": "kubernetes",
    "start": "1226880",
    "end": "1228640"
  },
  {
    "text": "um yeah so on the load balancer level it",
    "start": "1228640",
    "end": "1231440"
  },
  {
    "text": "does support",
    "start": "1231440",
    "end": "1232240"
  },
  {
    "text": "dual stack so basically even if we use",
    "start": "1232240",
    "end": "1235760"
  },
  {
    "text": "one load balancer it can support both",
    "start": "1235760",
    "end": "1238720"
  },
  {
    "text": "ipv4 and",
    "start": "1238720",
    "end": "1239679"
  },
  {
    "text": "v6 traffic so we can combine them into",
    "start": "1239679",
    "end": "1242320"
  },
  {
    "text": "one",
    "start": "1242320",
    "end": "1243280"
  },
  {
    "text": "the virtual machine skill set it also",
    "start": "1243280",
    "end": "1245520"
  },
  {
    "text": "supports dual stack",
    "start": "1245520",
    "end": "1247280"
  },
  {
    "text": "actually only the flannel on the",
    "start": "1247280",
    "end": "1249200"
  },
  {
    "text": "kubernetes",
    "start": "1249200",
    "end": "1250480"
  },
  {
    "text": "cli network is not supporting the dual",
    "start": "1250480",
    "end": "1252720"
  },
  {
    "text": "stack",
    "start": "1252720",
    "end": "1253919"
  },
  {
    "text": "so is it possible to deploy the proxy as",
    "start": "1253919",
    "end": "1257360"
  },
  {
    "text": "like a ports on kubernetes but give the",
    "start": "1257360",
    "end": "1260640"
  },
  {
    "text": "virtual machine um",
    "start": "1260640",
    "end": "1262400"
  },
  {
    "text": "level networking to the parts",
    "start": "1262400",
    "end": "1265520"
  },
  {
    "text": "uh yeah there are definitely some",
    "start": "1265520",
    "end": "1267600"
  },
  {
    "text": "features called uh use",
    "start": "1267600",
    "end": "1268880"
  },
  {
    "text": "host network uh where to work for the",
    "start": "1268880",
    "end": "1271520"
  },
  {
    "text": "dual stack",
    "start": "1271520",
    "end": "1272720"
  },
  {
    "text": "yeah that's uh on the third option we're",
    "start": "1272720",
    "end": "1275280"
  },
  {
    "text": "trying to explore we don't know whether",
    "start": "1275280",
    "end": "1277039"
  },
  {
    "text": "it works or not",
    "start": "1277039",
    "end": "1278240"
  },
  {
    "text": "um then we prototype it and uh um",
    "start": "1278240",
    "end": "1282080"
  },
  {
    "text": "and luckily it works pretty well",
    "start": "1282080",
    "end": "1285120"
  },
  {
    "text": "and so here comes to our solution",
    "start": "1285120",
    "end": "1289360"
  },
  {
    "start": "1289000",
    "end": "1418000"
  },
  {
    "text": "yeah basically and to make it uh what",
    "start": "1289360",
    "end": "1291840"
  },
  {
    "text": "came to end right so",
    "start": "1291840",
    "end": "1293760"
  },
  {
    "text": "we first need to make sure ipv6 is",
    "start": "1293760",
    "end": "1296720"
  },
  {
    "text": "populated everywhere",
    "start": "1296720",
    "end": "1298320"
  },
  {
    "text": "on this azure uh cloud provider",
    "start": "1298320",
    "end": "1301520"
  },
  {
    "text": "infrastructure so first provisioning",
    "start": "1301520",
    "end": "1303919"
  },
  {
    "text": "ipv6",
    "start": "1303919",
    "end": "1304880"
  },
  {
    "text": "on the vnet subnet and load balancer",
    "start": "1304880",
    "end": "1308080"
  },
  {
    "text": "added ipv6 ip and then create a",
    "start": "1308080",
    "end": "1311679"
  },
  {
    "text": "virtual machine skill set we create",
    "start": "1311679",
    "end": "1314960"
  },
  {
    "text": "with a special image that we enable the",
    "start": "1314960",
    "end": "1317919"
  },
  {
    "text": "ipv6 in this",
    "start": "1317919",
    "end": "1319280"
  },
  {
    "text": "virtual machine image then it can have",
    "start": "1319280",
    "end": "1321679"
  },
  {
    "text": "the dual stack",
    "start": "1321679",
    "end": "1323360"
  },
  {
    "text": "which can be later on used by the proxy",
    "start": "1323360",
    "end": "1326559"
  },
  {
    "text": "parts running on top",
    "start": "1326559",
    "end": "1328320"
  },
  {
    "text": "uh yeah to provision the vmss with",
    "start": "1328320",
    "end": "1331440"
  },
  {
    "text": "with durastack if you use azure",
    "start": "1331440",
    "end": "1335039"
  },
  {
    "text": "provider 2.0 with terraform you can use",
    "start": "1335039",
    "end": "1337600"
  },
  {
    "text": "the terraform resource",
    "start": "1337600",
    "end": "1339200"
  },
  {
    "text": "otherwise you can always use adcli to",
    "start": "1339200",
    "end": "1342159"
  },
  {
    "text": "attach a",
    "start": "1342159",
    "end": "1343039"
  },
  {
    "text": "ipv6 interface to the vmss",
    "start": "1343039",
    "end": "1348080"
  },
  {
    "text": "yeah then we set a load balancer to only",
    "start": "1348080",
    "end": "1351200"
  },
  {
    "text": "load balance",
    "start": "1351200",
    "end": "1351919"
  },
  {
    "text": "traffic to these vmss which enabled",
    "start": "1351919",
    "end": "1355840"
  },
  {
    "text": "ipv6 so once the traffic hit heated",
    "start": "1355840",
    "end": "1359280"
  },
  {
    "text": "ipv6 ip on the load balancer it's only",
    "start": "1359280",
    "end": "1361919"
  },
  {
    "text": "go to this vmss",
    "start": "1361919",
    "end": "1363760"
  },
  {
    "text": "and inside the kubernetes we also have a",
    "start": "1363760",
    "end": "1366320"
  },
  {
    "text": "dedicated order pool for these",
    "start": "1366320",
    "end": "1367840"
  },
  {
    "text": "vmss so that only the proxy workload",
    "start": "1367840",
    "end": "1371600"
  },
  {
    "text": "will come will um running on this node",
    "start": "1371600",
    "end": "1375039"
  },
  {
    "text": "pool",
    "start": "1375039",
    "end": "1375360"
  },
  {
    "text": "not interfering with other kubernetes um",
    "start": "1375360",
    "end": "1378400"
  },
  {
    "text": "workloads um yeah so",
    "start": "1378400",
    "end": "1382559"
  },
  {
    "text": "then we deployed the private link proxy",
    "start": "1382559",
    "end": "1385039"
  },
  {
    "text": "which is a",
    "start": "1385039",
    "end": "1386159"
  },
  {
    "text": "v6 to v4 proxy as a general kubernetes",
    "start": "1386159",
    "end": "1389440"
  },
  {
    "text": "deployment",
    "start": "1389440",
    "end": "1390080"
  },
  {
    "text": "to that uh dedicated node pool um",
    "start": "1390080",
    "end": "1393200"
  },
  {
    "text": "yeah we set it to use the host",
    "start": "1393200",
    "end": "1394799"
  },
  {
    "text": "networking um",
    "start": "1394799",
    "end": "1396640"
  },
  {
    "text": "yet it actually yeah get both like uh",
    "start": "1396640",
    "end": "1399600"
  },
  {
    "text": "ipv4 and v6 interface",
    "start": "1399600",
    "end": "1402960"
  },
  {
    "text": "and the proxy is just a nginx proxy",
    "start": "1402960",
    "end": "1406240"
  },
  {
    "text": "lesson on the portfolio so if you use",
    "start": "1406240",
    "end": "1409679"
  },
  {
    "text": "host networking and enable the pod",
    "start": "1409679",
    "end": "1412000"
  },
  {
    "text": "security policy yeah just",
    "start": "1412000",
    "end": "1413679"
  },
  {
    "text": "make sure you specify the policy to",
    "start": "1413679",
    "end": "1416240"
  },
  {
    "text": "allow the parts to use",
    "start": "1416240",
    "end": "1417600"
  },
  {
    "text": "host network um then make sure the load",
    "start": "1417600",
    "end": "1421360"
  },
  {
    "text": "balancer rules",
    "start": "1421360",
    "end": "1422480"
  },
  {
    "text": "are correctly configured to send the",
    "start": "1422480",
    "end": "1425120"
  },
  {
    "text": "traffic to",
    "start": "1425120",
    "end": "1425840"
  },
  {
    "text": "this proxy port and also make sure",
    "start": "1425840",
    "end": "1429360"
  },
  {
    "text": "you do the proper white listing on the",
    "start": "1429360",
    "end": "1431520"
  },
  {
    "text": "private link",
    "start": "1431520",
    "end": "1432480"
  },
  {
    "text": "on traffic so that um",
    "start": "1432480",
    "end": "1435520"
  },
  {
    "text": "before a v6 trafficker can come into",
    "start": "1435520",
    "end": "1439200"
  },
  {
    "text": "your kubernetes and then yeah the proxy",
    "start": "1439200",
    "end": "1442880"
  },
  {
    "text": "works um so we got a lot of benefit from",
    "start": "1442880",
    "end": "1446320"
  },
  {
    "text": "this",
    "start": "1446320",
    "end": "1446799"
  },
  {
    "text": "solution so first of all it's",
    "start": "1446799",
    "end": "1449200"
  },
  {
    "text": "straightforward easy to troubleshoot",
    "start": "1449200",
    "end": "1452640"
  },
  {
    "text": "then it's the department is managed by",
    "start": "1452640",
    "end": "1454960"
  },
  {
    "text": "kubernetes",
    "start": "1454960",
    "end": "1455840"
  },
  {
    "text": "it's very easy if we want to update the",
    "start": "1455840",
    "end": "1458240"
  },
  {
    "text": "proxy",
    "start": "1458240",
    "end": "1459840"
  },
  {
    "text": "and uh it's it's deployed as a stateless",
    "start": "1459840",
    "end": "1463520"
  },
  {
    "text": "uh deployment",
    "start": "1463520",
    "end": "1464720"
  },
  {
    "text": "so as the traffic load increase uh it's",
    "start": "1464720",
    "end": "1467200"
  },
  {
    "text": "very easy to scale up",
    "start": "1467200",
    "end": "1468559"
  },
  {
    "text": "uh just increase the upcoming replica",
    "start": "1468559",
    "end": "1470960"
  },
  {
    "text": "okay no more traffic",
    "start": "1470960",
    "end": "1472799"
  },
  {
    "text": "and next item is like uh uh we",
    "start": "1472799",
    "end": "1476400"
  },
  {
    "text": "definitely get the kubernetes native",
    "start": "1476400",
    "end": "1478960"
  },
  {
    "text": "monitoring analogy",
    "start": "1478960",
    "end": "1480559"
  },
  {
    "text": "uh yeah at last this solution will also",
    "start": "1480559",
    "end": "1483279"
  },
  {
    "text": "work for",
    "start": "1483279",
    "end": "1483840"
  },
  {
    "text": "other use case for example our data plan",
    "start": "1483840",
    "end": "1486400"
  },
  {
    "text": "to contribute",
    "start": "1486400",
    "end": "1487520"
  },
  {
    "text": "on traffic using parameter links",
    "start": "1487520",
    "end": "1490880"
  },
  {
    "start": "1490000",
    "end": "1517000"
  },
  {
    "text": "uh yeah this is some screenshot as a",
    "start": "1490880",
    "end": "1493440"
  },
  {
    "text": "demo",
    "start": "1493440",
    "end": "1494000"
  },
  {
    "text": "um so we provisioned this private link",
    "start": "1494000",
    "end": "1497440"
  },
  {
    "text": "node pool inside the kubernetes cluster",
    "start": "1497440",
    "end": "1500080"
  },
  {
    "text": "which is a special vmss",
    "start": "1500080",
    "end": "1502400"
  },
  {
    "text": "except like a both v4 and v6 traffic",
    "start": "1502400",
    "end": "1506000"
  },
  {
    "text": "so when you deploy the proxy port yeah",
    "start": "1506000",
    "end": "1508799"
  },
  {
    "text": "just make sure",
    "start": "1508799",
    "end": "1510159"
  },
  {
    "text": "uh have the host networking and make",
    "start": "1510159",
    "end": "1512240"
  },
  {
    "text": "sure it's scheduled on this",
    "start": "1512240",
    "end": "1515520"
  },
  {
    "text": "private link another pool um if we look",
    "start": "1515520",
    "end": "1519279"
  },
  {
    "start": "1517000",
    "end": "1544000"
  },
  {
    "text": "at",
    "start": "1519279",
    "end": "1519919"
  },
  {
    "text": "the network on the port level we",
    "start": "1519919",
    "end": "1522960"
  },
  {
    "text": "exact into the port you can see both",
    "start": "1522960",
    "end": "1525520"
  },
  {
    "text": "ipv4 and",
    "start": "1525520",
    "end": "1526640"
  },
  {
    "text": "v6 ip yeah on on the virtual machine and",
    "start": "1526640",
    "end": "1530320"
  },
  {
    "text": "the port level it's uh completely uh",
    "start": "1530320",
    "end": "1532400"
  },
  {
    "text": "private ip",
    "start": "1532400",
    "end": "1533679"
  },
  {
    "text": "and uh our public ig is only available",
    "start": "1533679",
    "end": "1536080"
  },
  {
    "text": "on the",
    "start": "1536080",
    "end": "1536720"
  },
  {
    "text": "azure load balancer level uh so it's the",
    "start": "1536720",
    "end": "1539520"
  },
  {
    "text": "same like a",
    "start": "1539520",
    "end": "1540720"
  },
  {
    "text": "network interface if you look on the",
    "start": "1540720",
    "end": "1542960"
  },
  {
    "text": "host",
    "start": "1542960",
    "end": "1544159"
  },
  {
    "start": "1544000",
    "end": "1555000"
  },
  {
    "text": "vm um so on the azure",
    "start": "1544159",
    "end": "1547360"
  },
  {
    "text": "loader balancer side if we look at the",
    "start": "1547360",
    "end": "1549679"
  },
  {
    "text": "ip yeah we're providing",
    "start": "1549679",
    "end": "1551440"
  },
  {
    "text": "a ipv6 for this purpose and",
    "start": "1551440",
    "end": "1556880"
  },
  {
    "start": "1555000",
    "end": "1582000"
  },
  {
    "text": "then it works when we set up the private",
    "start": "1556880",
    "end": "1559440"
  },
  {
    "text": "link uh",
    "start": "1559440",
    "end": "1560159"
  },
  {
    "text": "if you you are using your user like a",
    "start": "1560159",
    "end": "1563200"
  },
  {
    "text": "v-net",
    "start": "1563200",
    "end": "1564159"
  },
  {
    "text": "uh you look for this um url",
    "start": "1564159",
    "end": "1567279"
  },
  {
    "text": "um it will return you a local ip address",
    "start": "1567279",
    "end": "1570960"
  },
  {
    "text": "you just need to connect it to this",
    "start": "1570960",
    "end": "1572720"
  },
  {
    "text": "local ip address",
    "start": "1572720",
    "end": "1574240"
  },
  {
    "text": "actually it will show the uh azure data",
    "start": "1574240",
    "end": "1576720"
  },
  {
    "text": "breaks workspace",
    "start": "1576720",
    "end": "1577919"
  },
  {
    "text": "and yeah since your traffic is routed",
    "start": "1577919",
    "end": "1580720"
  },
  {
    "text": "through the private link",
    "start": "1580720",
    "end": "1582880"
  },
  {
    "start": "1582000",
    "end": "1666000"
  },
  {
    "text": "yeah to recap yeah not necessarily to",
    "start": "1582880",
    "end": "1586640"
  },
  {
    "text": "integrate with",
    "start": "1586640",
    "end": "1587760"
  },
  {
    "text": "azure private link but if you need need",
    "start": "1587760",
    "end": "1590480"
  },
  {
    "text": "any like uh",
    "start": "1590480",
    "end": "1591600"
  },
  {
    "text": "ipv6 traffic support in your like ipv4",
    "start": "1591600",
    "end": "1594960"
  },
  {
    "text": "kubernetes",
    "start": "1594960",
    "end": "1596320"
  },
  {
    "text": "uh yeah then you can you can use this",
    "start": "1596320",
    "end": "1599520"
  },
  {
    "text": "approach",
    "start": "1599520",
    "end": "1600400"
  },
  {
    "text": "basically you enable the dual stack",
    "start": "1600400",
    "end": "1602799"
  },
  {
    "text": "always ipv6",
    "start": "1602799",
    "end": "1604000"
  },
  {
    "text": "everywhere on the cloud provider infra",
    "start": "1604000",
    "end": "1606480"
  },
  {
    "text": "level right then you can set up with a",
    "start": "1606480",
    "end": "1609600"
  },
  {
    "text": "v62 v4 proxy you can just deploy it as",
    "start": "1609600",
    "end": "1613279"
  },
  {
    "text": "regular kubernetes deployments yeah just",
    "start": "1613279",
    "end": "1615919"
  },
  {
    "text": "that you use the host networking then",
    "start": "1615919",
    "end": "1618000"
  },
  {
    "text": "you can",
    "start": "1618000",
    "end": "1619279"
  },
  {
    "text": "receive the ipv6 traffic now you can",
    "start": "1619279",
    "end": "1621760"
  },
  {
    "text": "proxy to v4 and then",
    "start": "1621760",
    "end": "1624080"
  },
  {
    "text": "the router will work all the way to your",
    "start": "1624080",
    "end": "1627200"
  },
  {
    "text": "kubernetes",
    "start": "1627200",
    "end": "1628480"
  },
  {
    "text": "yeah this is a um i think a good way to",
    "start": "1628480",
    "end": "1631919"
  },
  {
    "text": "support",
    "start": "1631919",
    "end": "1632480"
  },
  {
    "text": "ipv6 traffic um with ipv4",
    "start": "1632480",
    "end": "1636720"
  },
  {
    "text": "on kubernetes if you don't want to use",
    "start": "1636720",
    "end": "1639039"
  },
  {
    "text": "the dual stack feature",
    "start": "1639039",
    "end": "1641120"
  },
  {
    "text": "yet um so yeah we delivered",
    "start": "1641120",
    "end": "1644480"
  },
  {
    "text": "this azure databricks uh private link is",
    "start": "1644480",
    "end": "1647360"
  },
  {
    "text": "in private preview now",
    "start": "1647360",
    "end": "1649440"
  },
  {
    "text": "and it's also available in azure.com",
    "start": "1649440",
    "end": "1653039"
  },
  {
    "text": "this concludes our cubicon talk",
    "start": "1653039",
    "end": "1655679"
  },
  {
    "text": "hopefully it's useful to you",
    "start": "1655679",
    "end": "1657840"
  },
  {
    "text": "thank you very much for joining our talk",
    "start": "1657840",
    "end": "1661120"
  },
  {
    "text": "feel free to ask questions",
    "start": "1661120",
    "end": "1664159"
  },
  {
    "text": "thank you",
    "start": "1664159",
    "end": "1668000"
  }
]