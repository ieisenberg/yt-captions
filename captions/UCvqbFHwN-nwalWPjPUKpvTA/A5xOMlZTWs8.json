[
  {
    "text": "hey everyone so my name is awl",
    "start": "0",
    "end": "2720"
  },
  {
    "text": "and i'm here to talk about polyglot",
    "start": "2720",
    "end": "4160"
  },
  {
    "text": "webassembly or exploring composition",
    "start": "4160",
    "end": "6640"
  },
  {
    "text": "through the component model",
    "start": "6640",
    "end": "8639"
  },
  {
    "text": "so polyglot is a very overloaded word",
    "start": "8639",
    "end": "10880"
  },
  {
    "text": "like runtimes and other words that we",
    "start": "10880",
    "end": "12960"
  },
  {
    "text": "use in computer systems so i'm going to",
    "start": "12960",
    "end": "14719"
  },
  {
    "text": "define what i mean by a polyglot later",
    "start": "14719",
    "end": "17039"
  },
  {
    "text": "on so we can have a common base to work",
    "start": "17039",
    "end": "19279"
  },
  {
    "text": "on but first i'm going to introduce more",
    "start": "19279",
    "end": "21439"
  },
  {
    "text": "a bit of myself so i work at shopify um",
    "start": "21439",
    "end": "24880"
  },
  {
    "text": "mainly on the shopify vm and wasn't",
    "start": "24880",
    "end": "27359"
  },
  {
    "text": "foundations team",
    "start": "27359",
    "end": "29119"
  },
  {
    "text": "so at shopify we are building a",
    "start": "29119",
    "end": "31039"
  },
  {
    "text": "composable and scalable webassembly",
    "start": "31039",
    "end": "33120"
  },
  {
    "text": "platform for customizations that's",
    "start": "33120",
    "end": "34880"
  },
  {
    "text": "basically user defined functions",
    "start": "34880",
    "end": "37680"
  },
  {
    "text": "and on the wason foundation side we work",
    "start": "37680",
    "end": "39840"
  },
  {
    "text": "mostly on open source and we've been",
    "start": "39840",
    "end": "42160"
  },
  {
    "text": "lately doing some work helping the biker",
    "start": "42160",
    "end": "44559"
  },
  {
    "text": "alliance folks move forward some of the",
    "start": "44559",
    "end": "46719"
  },
  {
    "text": "tooling around the component model",
    "start": "46719",
    "end": "48160"
  },
  {
    "text": "because that's crucial to shopify's use",
    "start": "48160",
    "end": "50000"
  },
  {
    "text": "case",
    "start": "50000",
    "end": "50800"
  },
  {
    "text": "um",
    "start": "50800",
    "end": "51920"
  },
  {
    "text": "also we have done some um experiments",
    "start": "51920",
    "end": "55039"
  },
  {
    "text": "with bringing um",
    "start": "55039",
    "end": "56640"
  },
  {
    "text": "dynamic languages to webassembly and the",
    "start": "56640",
    "end": "58800"
  },
  {
    "text": "main example of that is is javi which is",
    "start": "58800",
    "end": "60879"
  },
  {
    "text": "um our javascript webassembly toolchain",
    "start": "60879",
    "end": "64239"
  },
  {
    "text": "and the idea is it's very basic we",
    "start": "64239",
    "end": "67119"
  },
  {
    "text": "compile something like quickjs into",
    "start": "67119",
    "end": "70560"
  },
  {
    "text": "wasm three two wassi and then",
    "start": "70560",
    "end": "72960"
  },
  {
    "text": "we execute your javascript code um so",
    "start": "72960",
    "end": "76799"
  },
  {
    "text": "we've also been experimenting with other",
    "start": "76799",
    "end": "78400"
  },
  {
    "text": "runtimes like",
    "start": "78400",
    "end": "79840"
  },
  {
    "text": "spidermonkey which is mozilla's",
    "start": "79840",
    "end": "82400"
  },
  {
    "text": "javascript engine",
    "start": "82400",
    "end": "83840"
  },
  {
    "text": "and even though this is heavier and a",
    "start": "83840",
    "end": "86240"
  },
  {
    "text": "bit more complex we think that there is",
    "start": "86240",
    "end": "87840"
  },
  {
    "text": "an opportunity here to have faster",
    "start": "87840",
    "end": "89680"
  },
  {
    "text": "javascript on top of webassembly",
    "start": "89680",
    "end": "92240"
  },
  {
    "text": "so",
    "start": "92240",
    "end": "92960"
  },
  {
    "text": "we don't have a specific results yet but",
    "start": "92960",
    "end": "94799"
  },
  {
    "text": "we've been working on something really",
    "start": "94799",
    "end": "97040"
  },
  {
    "text": "exciting and i'm probably going to do a",
    "start": "97040",
    "end": "98880"
  },
  {
    "text": "different talk once we have uh more",
    "start": "98880",
    "end": "100720"
  },
  {
    "text": "information here",
    "start": "100720",
    "end": "102479"
  },
  {
    "text": "so now on to the definition of polyglot",
    "start": "102479",
    "end": "104880"
  },
  {
    "text": "this is not a definition that's mine",
    "start": "104880",
    "end": "106880"
  },
  {
    "text": "it's more like a wrangling of things on",
    "start": "106880",
    "end": "108640"
  },
  {
    "text": "the internet until something made sense",
    "start": "108640",
    "end": "111520"
  },
  {
    "text": "but what i mean by this is multiple",
    "start": "111520",
    "end": "114000"
  },
  {
    "text": "programs written in different",
    "start": "114000",
    "end": "115280"
  },
  {
    "text": "programming languages communicating",
    "start": "115280",
    "end": "117200"
  },
  {
    "text": "seamlessly between each other",
    "start": "117200",
    "end": "119600"
  },
  {
    "text": "this picture might",
    "start": "119600",
    "end": "121119"
  },
  {
    "text": "be more of what i'm looking for so you",
    "start": "121119",
    "end": "123680"
  },
  {
    "text": "have something written in rust and you",
    "start": "123680",
    "end": "125840"
  },
  {
    "text": "can easily communicate that program with",
    "start": "125840",
    "end": "129039"
  },
  {
    "text": "something written on javascript on",
    "start": "129039",
    "end": "130640"
  },
  {
    "text": "webassembly and then the same thing with",
    "start": "130640",
    "end": "132480"
  },
  {
    "text": "another ros program",
    "start": "132480",
    "end": "134080"
  },
  {
    "text": "so even though design this id is not new",
    "start": "134080",
    "end": "137440"
  },
  {
    "text": "i think it's a very powerful one and",
    "start": "137440",
    "end": "139680"
  },
  {
    "text": "other runtimes have explored to this",
    "start": "139680",
    "end": "141840"
  },
  {
    "text": "idea",
    "start": "141840",
    "end": "142800"
  },
  {
    "text": "the main example that i have for this is",
    "start": "142800",
    "end": "144239"
  },
  {
    "text": "gravel vm so growl is oracle's",
    "start": "144239",
    "end": "147680"
  },
  {
    "text": "vm which is built on top of the",
    "start": "147680",
    "end": "150239"
  },
  {
    "text": "on top of the jvm and uses a framework",
    "start": "150239",
    "end": "152640"
  },
  {
    "text": "called truffle to optimize your programs",
    "start": "152640",
    "end": "155120"
  },
  {
    "text": "and the idea is that you can have",
    "start": "155120",
    "end": "156560"
  },
  {
    "text": "multiple implementations of your",
    "start": "156560",
    "end": "158959"
  },
  {
    "text": "programs like for example ruby has a",
    "start": "158959",
    "end": "161599"
  },
  {
    "text": "truffle has truffle ruby and then you",
    "start": "161599",
    "end": "163519"
  },
  {
    "text": "can run all those programs on top of the",
    "start": "163519",
    "end": "165680"
  },
  {
    "text": "growl vm and then they can communicate",
    "start": "165680",
    "end": "167760"
  },
  {
    "text": "between each other so their political",
    "start": "167760",
    "end": "169200"
  },
  {
    "text": "characteristic",
    "start": "169200",
    "end": "170400"
  },
  {
    "text": "is defined as leverage",
    "start": "170400",
    "end": "172879"
  },
  {
    "text": "the",
    "start": "172879",
    "end": "173680"
  },
  {
    "text": "best features and libraries of popular",
    "start": "173680",
    "end": "175440"
  },
  {
    "text": "programming languages in single apps",
    "start": "175440",
    "end": "177040"
  },
  {
    "text": "with no overhead",
    "start": "177040",
    "end": "179519"
  },
  {
    "text": "so that's for the definition of polyglot",
    "start": "179519",
    "end": "182000"
  },
  {
    "text": "now in order to understand why this talk",
    "start": "182000",
    "end": "184560"
  },
  {
    "text": "even exists it's important to give some",
    "start": "184560",
    "end": "187280"
  },
  {
    "text": "context on how we use shopify at uh",
    "start": "187280",
    "end": "189760"
  },
  {
    "text": "webassembly at shopify",
    "start": "189760",
    "end": "191599"
  },
  {
    "text": "and the best definition for that is this",
    "start": "191599",
    "end": "194720"
  },
  {
    "text": "slide so we use webassembly for",
    "start": "194720",
    "end": "196959"
  },
  {
    "text": "synchronous execution of untrusted code",
    "start": "196959",
    "end": "199440"
  },
  {
    "text": "in performance sensitive context so",
    "start": "199440",
    "end": "201840"
  },
  {
    "text": "there are a couple of things that we can",
    "start": "201840",
    "end": "203120"
  },
  {
    "text": "extract from this definition the first",
    "start": "203120",
    "end": "205200"
  },
  {
    "text": "one is synchronous execution we don't",
    "start": "205200",
    "end": "206959"
  },
  {
    "text": "allow any side effects",
    "start": "206959",
    "end": "208720"
  },
  {
    "text": "in our webassembly execution so that",
    "start": "208720",
    "end": "210799"
  },
  {
    "text": "means no http",
    "start": "210799",
    "end": "212480"
  },
  {
    "text": "no async nothing that's just pure",
    "start": "212480",
    "end": "215040"
  },
  {
    "text": "execution and the second",
    "start": "215040",
    "end": "217519"
  },
  {
    "text": "important",
    "start": "217519",
    "end": "219599"
  },
  {
    "text": "concept here is",
    "start": "219599",
    "end": "221120"
  },
  {
    "text": "in performance sensitive context so you",
    "start": "221120",
    "end": "222959"
  },
  {
    "text": "can think of this in a context where",
    "start": "222959",
    "end": "225200"
  },
  {
    "text": "delays are not allowed or they should be",
    "start": "225200",
    "end": "227760"
  },
  {
    "text": "minimized so a performance sensitive",
    "start": "227760",
    "end": "230080"
  },
  {
    "text": "context or a good example of that is a",
    "start": "230080",
    "end": "233360"
  },
  {
    "text": "checkout process if you want to run some",
    "start": "233360",
    "end": "235120"
  },
  {
    "text": "customization",
    "start": "235120",
    "end": "236799"
  },
  {
    "text": "of some piece of code that a user",
    "start": "236799",
    "end": "238799"
  },
  {
    "text": "submitted to your platform you want to",
    "start": "238799",
    "end": "240720"
  },
  {
    "text": "make sure that it's fast and reliable",
    "start": "240720",
    "end": "243360"
  },
  {
    "text": "because if not that can have some",
    "start": "243360",
    "end": "244799"
  },
  {
    "text": "consequences",
    "start": "244799",
    "end": "246159"
  },
  {
    "text": "on on you know on the conversion",
    "start": "246159",
    "end": "249040"
  },
  {
    "text": "for any specific merchant",
    "start": "249040",
    "end": "251680"
  },
  {
    "text": "now i don't want to make this talk",
    "start": "251680",
    "end": "254000"
  },
  {
    "text": "shopify specific so i've extracted two",
    "start": "254000",
    "end": "256239"
  },
  {
    "text": "main characteristics that i think are",
    "start": "256239",
    "end": "257840"
  },
  {
    "text": "important for this document to make",
    "start": "257840",
    "end": "259680"
  },
  {
    "text": "sense and the first one is that we're",
    "start": "259680",
    "end": "261519"
  },
  {
    "text": "talking about platforms that have tight",
    "start": "261519",
    "end": "263520"
  },
  {
    "text": "execution limits",
    "start": "263520",
    "end": "265040"
  },
  {
    "text": "you can think of five milliseconds at",
    "start": "265040",
    "end": "266960"
  },
  {
    "text": "max if a user submits a function to your",
    "start": "266960",
    "end": "269600"
  },
  {
    "text": "platform that takes longer than this is",
    "start": "269600",
    "end": "271360"
  },
  {
    "text": "going to get interrupted",
    "start": "271360",
    "end": "273040"
  },
  {
    "text": "so basically uh your platform won't be",
    "start": "273040",
    "end": "275680"
  },
  {
    "text": "functional for what the user is trying",
    "start": "275680",
    "end": "277120"
  },
  {
    "text": "to do",
    "start": "277120",
    "end": "278400"
  },
  {
    "text": "and then the second important",
    "start": "278400",
    "end": "280000"
  },
  {
    "text": "characteristic here is we want the",
    "start": "280000",
    "end": "281919"
  },
  {
    "text": "smallest binary size possible so we've",
    "start": "281919",
    "end": "283840"
  },
  {
    "text": "been working with sizes of around 256",
    "start": "283840",
    "end": "286080"
  },
  {
    "text": "kilobytes per binary if someone submits",
    "start": "286080",
    "end": "288880"
  },
  {
    "text": "something bigger than this it won't be",
    "start": "288880",
    "end": "290400"
  },
  {
    "text": "able to we won't be able to to accept",
    "start": "290400",
    "end": "292880"
  },
  {
    "text": "that as a valid program",
    "start": "292880",
    "end": "294960"
  },
  {
    "text": "so some of you might ask okay why is",
    "start": "294960",
    "end": "297520"
  },
  {
    "text": "this size",
    "start": "297520",
    "end": "298960"
  },
  {
    "text": "constraint so important and the answer",
    "start": "298960",
    "end": "301039"
  },
  {
    "text": "to that is that we want to have highly",
    "start": "301039",
    "end": "303120"
  },
  {
    "text": "available modules right and the bigger",
    "start": "303120",
    "end": "305759"
  },
  {
    "text": "they are the harder it is to store them",
    "start": "305759",
    "end": "308160"
  },
  {
    "text": "to cache them to transfer them over the",
    "start": "308160",
    "end": "309919"
  },
  {
    "text": "network",
    "start": "309919",
    "end": "311039"
  },
  {
    "text": "and so the the the smaller they are the",
    "start": "311039",
    "end": "313919"
  },
  {
    "text": "better",
    "start": "313919",
    "end": "315199"
  },
  {
    "text": "with these ideas in mind um it it seems",
    "start": "315199",
    "end": "317440"
  },
  {
    "text": "like the traditional approach of",
    "start": "317440",
    "end": "318720"
  },
  {
    "text": "statically linking a single program and",
    "start": "318720",
    "end": "320880"
  },
  {
    "text": "running that in your runtime might not",
    "start": "320880",
    "end": "323120"
  },
  {
    "text": "be as scalable as we might expect",
    "start": "323120",
    "end": "327120"
  },
  {
    "text": "so it seems like what we want instead is",
    "start": "327120",
    "end": "329759"
  },
  {
    "text": "submitting a single",
    "start": "329759",
    "end": "332400"
  },
  {
    "text": "binary that requests some functionality",
    "start": "332400",
    "end": "335039"
  },
  {
    "text": "and that functionality is provided to",
    "start": "335039",
    "end": "336639"
  },
  {
    "text": "you at runtime",
    "start": "336639",
    "end": "338639"
  },
  {
    "text": "basically dynamic linking that",
    "start": "338639",
    "end": "340000"
  },
  {
    "text": "functionality so you can think of this",
    "start": "340000",
    "end": "341759"
  },
  {
    "text": "as having a set of modules that act as a",
    "start": "341759",
    "end": "344800"
  },
  {
    "text": "standard libraries",
    "start": "344800",
    "end": "346880"
  },
  {
    "text": "at the webassembly layer and then any",
    "start": "346880",
    "end": "348639"
  },
  {
    "text": "web assembly program that requests this",
    "start": "348639",
    "end": "350639"
  },
  {
    "text": "functionality is going to have access to",
    "start": "350639",
    "end": "353360"
  },
  {
    "text": "it so you can think of this",
    "start": "353360",
    "end": "355840"
  },
  {
    "text": "the perfect mental model for this would",
    "start": "355840",
    "end": "357199"
  },
  {
    "text": "be like",
    "start": "357199",
    "end": "358479"
  },
  {
    "text": "when you request something from the",
    "start": "358479",
    "end": "360080"
  },
  {
    "text": "operating system you expect it to be",
    "start": "360080",
    "end": "362400"
  },
  {
    "text": "there because the operating system can",
    "start": "362400",
    "end": "363919"
  },
  {
    "text": "be seen as a platform",
    "start": "363919",
    "end": "366960"
  },
  {
    "text": "for for running programs too",
    "start": "366960",
    "end": "370240"
  },
  {
    "text": "so here is where um concepts from the",
    "start": "370240",
    "end": "373280"
  },
  {
    "text": "component model start making sense to us",
    "start": "373280",
    "end": "375680"
  },
  {
    "text": "uh",
    "start": "375680",
    "end": "376720"
  },
  {
    "text": "for for our use case if you have",
    "start": "376720",
    "end": "378400"
  },
  {
    "text": "questions about the component model",
    "start": "378400",
    "end": "379600"
  },
  {
    "text": "don't ask me as look",
    "start": "379600",
    "end": "381600"
  },
  {
    "text": "so",
    "start": "381600",
    "end": "382560"
  },
  {
    "text": "yeah you might be able to answer better",
    "start": "382560",
    "end": "384800"
  },
  {
    "text": "but i i want to highlight three main",
    "start": "384800",
    "end": "386800"
  },
  {
    "text": "pillars of the component mode that are",
    "start": "386800",
    "end": "389199"
  },
  {
    "text": "crucial to enable this composition of",
    "start": "389199",
    "end": "391600"
  },
  {
    "text": "programs and they are module linking the",
    "start": "391600",
    "end": "393919"
  },
  {
    "text": "canonical api and interface types so i'm",
    "start": "393919",
    "end": "396319"
  },
  {
    "text": "going to start with module linking",
    "start": "396319",
    "end": "398160"
  },
  {
    "text": "um and",
    "start": "398160",
    "end": "399680"
  },
  {
    "text": "the idea here is that you can link",
    "start": "399680",
    "end": "401199"
  },
  {
    "text": "modules at runtime without having to",
    "start": "401199",
    "end": "403520"
  },
  {
    "text": "write blue code on your host",
    "start": "403520",
    "end": "406000"
  },
  {
    "text": "so your api your runtime needs to",
    "start": "406000",
    "end": "408319"
  },
  {
    "text": "provide a native api uh to allow you to",
    "start": "408319",
    "end": "411120"
  },
  {
    "text": "do this and then we have interface types",
    "start": "411120",
    "end": "413919"
  },
  {
    "text": "um",
    "start": "413919",
    "end": "415360"
  },
  {
    "text": "which are types that describe high level",
    "start": "415360",
    "end": "417360"
  },
  {
    "text": "values so as as some of you might know",
    "start": "417360",
    "end": "420319"
  },
  {
    "text": "webassembly right now only supports low",
    "start": "420319",
    "end": "422240"
  },
  {
    "text": "level values that are basically in",
    "start": "422240",
    "end": "424240"
  },
  {
    "text": "floats",
    "start": "424240",
    "end": "425440"
  },
  {
    "text": "and so with this proposal we can have",
    "start": "425440",
    "end": "427199"
  },
  {
    "text": "access to high level values like a",
    "start": "427199",
    "end": "428880"
  },
  {
    "text": "string",
    "start": "428880",
    "end": "430639"
  },
  {
    "text": "and then we have the canonical api which",
    "start": "430639",
    "end": "432240"
  },
  {
    "text": "is pretty important to what we're doing",
    "start": "432240",
    "end": "433840"
  },
  {
    "text": "because it describes a relationship",
    "start": "433840",
    "end": "435440"
  },
  {
    "text": "between a high level value and a core",
    "start": "435440",
    "end": "437280"
  },
  {
    "text": "web assembly value so how do i go from",
    "start": "437280",
    "end": "439759"
  },
  {
    "text": "um",
    "start": "439759",
    "end": "440720"
  },
  {
    "text": "an n 32 to an s to a string or",
    "start": "440720",
    "end": "444560"
  },
  {
    "text": "you know or the other way around so",
    "start": "444560",
    "end": "447039"
  },
  {
    "text": "that's important now i don't want to get",
    "start": "447039",
    "end": "449199"
  },
  {
    "text": "too theoretical here um",
    "start": "449199",
    "end": "451599"
  },
  {
    "text": "but i want to do touching to a practical",
    "start": "451599",
    "end": "453520"
  },
  {
    "text": "use case",
    "start": "453520",
    "end": "454960"
  },
  {
    "text": "so let's assume that the user-defined",
    "start": "454960",
    "end": "457440"
  },
  {
    "text": "functions that you're accepting in your",
    "start": "457440",
    "end": "458720"
  },
  {
    "text": "platform need access to a date",
    "start": "458720",
    "end": "460240"
  },
  {
    "text": "formatting library right your users need",
    "start": "460240",
    "end": "462479"
  },
  {
    "text": "for some reason to format some some",
    "start": "462479",
    "end": "464400"
  },
  {
    "text": "dates",
    "start": "464400",
    "end": "465840"
  },
  {
    "text": "so i've i've created this repository",
    "start": "465840",
    "end": "467759"
  },
  {
    "text": "which you can visit where i have all the",
    "start": "467759",
    "end": "469440"
  },
  {
    "text": "code for this for this presentation",
    "start": "469440",
    "end": "472400"
  },
  {
    "text": "and first i want to visit the static",
    "start": "472400",
    "end": "474720"
  },
  {
    "text": "linking approach so how you would do",
    "start": "474720",
    "end": "476160"
  },
  {
    "text": "this if you wanted to create a single",
    "start": "476160",
    "end": "478560"
  },
  {
    "text": "program that is going to run and is",
    "start": "478560",
    "end": "480479"
  },
  {
    "text": "going to format some some dates right so",
    "start": "480479",
    "end": "483520"
  },
  {
    "text": "the main thing that you would do for",
    "start": "483520",
    "end": "485039"
  },
  {
    "text": "example is have a project that looks",
    "start": "485039",
    "end": "486800"
  },
  {
    "text": "like this um you will have an index.js",
    "start": "486800",
    "end": "490160"
  },
  {
    "text": "and then you would have a package.json",
    "start": "490160",
    "end": "492879"
  },
  {
    "text": "that would look like this",
    "start": "492879",
    "end": "494319"
  },
  {
    "text": "and potentially you would import",
    "start": "494319",
    "end": "496639"
  },
  {
    "text": "a date formatting library from",
    "start": "496639",
    "end": "498960"
  },
  {
    "text": "from your you know the npm echo system",
    "start": "498960",
    "end": "501440"
  },
  {
    "text": "so this",
    "start": "501440",
    "end": "502479"
  },
  {
    "text": "this date formatting library is going to",
    "start": "502479",
    "end": "504240"
  },
  {
    "text": "take two to two strings and give you a",
    "start": "504240",
    "end": "507759"
  },
  {
    "text": "formatted string in in human form",
    "start": "507759",
    "end": "510400"
  },
  {
    "text": "depending on you know the length of",
    "start": "510400",
    "end": "512800"
  },
  {
    "text": "those dates um",
    "start": "512800",
    "end": "514560"
  },
  {
    "text": "and in your build process you're going",
    "start": "514560",
    "end": "516080"
  },
  {
    "text": "to use a tool like javi for example pass",
    "start": "516080",
    "end": "518399"
  },
  {
    "text": "it in your javascript and then get a",
    "start": "518399",
    "end": "521360"
  },
  {
    "text": "final webassembly module and your code",
    "start": "521360",
    "end": "523680"
  },
  {
    "text": "probably is going to look something like",
    "start": "523680",
    "end": "525360"
  },
  {
    "text": "this um when you",
    "start": "525360",
    "end": "528560"
  },
  {
    "text": "run npm run build you're going to invoke",
    "start": "528560",
    "end": "531360"
  },
  {
    "text": "webpack or whatever build to you use and",
    "start": "531360",
    "end": "534399"
  },
  {
    "text": "execute javi to get your final web",
    "start": "534399",
    "end": "536160"
  },
  {
    "text": "assembly",
    "start": "536160",
    "end": "537839"
  },
  {
    "text": "now i have an entry in my make file in",
    "start": "537839",
    "end": "539600"
  },
  {
    "text": "that project that executes that and i",
    "start": "539600",
    "end": "541839"
  },
  {
    "text": "want to execute that here so",
    "start": "541839",
    "end": "545600"
  },
  {
    "text": "just one second",
    "start": "546160",
    "end": "549839"
  },
  {
    "text": "so i have my terminal hope",
    "start": "554240",
    "end": "557279"
  },
  {
    "text": "it's big enough",
    "start": "557279",
    "end": "558640"
  },
  {
    "text": "so if i if i",
    "start": "558640",
    "end": "561519"
  },
  {
    "text": "execute",
    "start": "561519",
    "end": "563839"
  },
  {
    "text": "make",
    "start": "566160",
    "end": "568560"
  },
  {
    "text": "make a standalone that's going to invoke",
    "start": "570080",
    "end": "571680"
  },
  {
    "text": "quantum time and then we get",
    "start": "571680",
    "end": "573440"
  },
  {
    "text": "about one year right which is what what",
    "start": "573440",
    "end": "575440"
  },
  {
    "text": "we were expecting",
    "start": "575440",
    "end": "578240"
  },
  {
    "text": "now that's the easy use case now let's",
    "start": "587440",
    "end": "589839"
  },
  {
    "text": "go to the dynamic linking approach the",
    "start": "589839",
    "end": "591839"
  },
  {
    "text": "first thing that we want to do since the",
    "start": "591839",
    "end": "593360"
  },
  {
    "text": "date formatting functionality is what's",
    "start": "593360",
    "end": "595040"
  },
  {
    "text": "common",
    "start": "595040",
    "end": "597200"
  },
  {
    "text": "for all the user defined functions is",
    "start": "597200",
    "end": "598880"
  },
  {
    "text": "factor out the common functionality",
    "start": "598880",
    "end": "600399"
  },
  {
    "text": "right",
    "start": "600399",
    "end": "601600"
  },
  {
    "text": "and that basically means",
    "start": "601600",
    "end": "604079"
  },
  {
    "text": "that we are going to have um some",
    "start": "604079",
    "end": "606079"
  },
  {
    "text": "javascript that is going to request that",
    "start": "606079",
    "end": "608160"
  },
  {
    "text": "date functionality and we want to um",
    "start": "608160",
    "end": "611920"
  },
  {
    "text": "link it against a performant date",
    "start": "611920",
    "end": "614720"
  },
  {
    "text": "library which is going to be written in",
    "start": "614720",
    "end": "616160"
  },
  {
    "text": "rust so we create a crate that is going",
    "start": "616160",
    "end": "618240"
  },
  {
    "text": "to look like this",
    "start": "618240",
    "end": "619760"
  },
  {
    "text": "and then we have our code to do that the",
    "start": "619760",
    "end": "622640"
  },
  {
    "text": "important part here is the top level",
    "start": "622640",
    "end": "624640"
  },
  {
    "text": "part so we are using",
    "start": "624640",
    "end": "626240"
  },
  {
    "text": "here i'm using a tool called with banjon",
    "start": "626240",
    "end": "628079"
  },
  {
    "text": "which is a binding generator for",
    "start": "628079",
    "end": "629920"
  },
  {
    "text": "interface types this basically takes in",
    "start": "629920",
    "end": "632399"
  },
  {
    "text": "an interface definition and creates the",
    "start": "632399",
    "end": "635040"
  },
  {
    "text": "the code that you need",
    "start": "635040",
    "end": "636640"
  },
  {
    "text": "to go from high level types to low level",
    "start": "636640",
    "end": "638560"
  },
  {
    "text": "types and then from low level types to",
    "start": "638560",
    "end": "640079"
  },
  {
    "text": "high level types so that process is",
    "start": "640079",
    "end": "641600"
  },
  {
    "text": "called lifting and lowering",
    "start": "641600",
    "end": "643600"
  },
  {
    "text": "um and that file looks like this right",
    "start": "643600",
    "end": "646399"
  },
  {
    "text": "and then rust",
    "start": "646399",
    "end": "648160"
  },
  {
    "text": "the with binding tool for rust expects",
    "start": "648160",
    "end": "650320"
  },
  {
    "text": "us to fulfill",
    "start": "650320",
    "end": "651839"
  },
  {
    "text": "this contract by implementing a trait",
    "start": "651839",
    "end": "654480"
  },
  {
    "text": "and the trade implementation basically",
    "start": "654480",
    "end": "656480"
  },
  {
    "text": "looks like this right you get two dates",
    "start": "656480",
    "end": "658480"
  },
  {
    "text": "and you pull in",
    "start": "658480",
    "end": "659760"
  },
  {
    "text": "chrono and chrono humanize which are",
    "start": "659760",
    "end": "662320"
  },
  {
    "text": "rust libraries which will be the",
    "start": "662320",
    "end": "663839"
  },
  {
    "text": "equivalent for javascript dependency and",
    "start": "663839",
    "end": "666000"
  },
  {
    "text": "then you execute that on top when we",
    "start": "666000",
    "end": "668160"
  },
  {
    "text": "compile this to wasm 3 to washi we get",
    "start": "668160",
    "end": "672320"
  },
  {
    "text": "the following export so we export a",
    "start": "672320",
    "end": "674560"
  },
  {
    "text": "function called format",
    "start": "674560",
    "end": "676240"
  },
  {
    "text": "um that is going to be you know is in",
    "start": "676240",
    "end": "678560"
  },
  {
    "text": "low level type is going to receive four",
    "start": "678560",
    "end": "680160"
  },
  {
    "text": "params which represent two strings and",
    "start": "680160",
    "end": "682480"
  },
  {
    "text": "then gives us a another pointer",
    "start": "682480",
    "end": "685680"
  },
  {
    "text": "so up until now we have extracted the",
    "start": "685680",
    "end": "687519"
  },
  {
    "text": "common functionality that we want to",
    "start": "687519",
    "end": "688880"
  },
  {
    "text": "link at runtime now we need to implement",
    "start": "688880",
    "end": "690959"
  },
  {
    "text": "the consumer module for us to implement",
    "start": "690959",
    "end": "693040"
  },
  {
    "text": "the consumer module in javascript we",
    "start": "693040",
    "end": "695040"
  },
  {
    "text": "need to create bindings",
    "start": "695040",
    "end": "697920"
  },
  {
    "text": "for our javascript runtime in this case",
    "start": "697920",
    "end": "699920"
  },
  {
    "text": "i'm using qjs so the idea is that i'm",
    "start": "699920",
    "end": "702880"
  },
  {
    "text": "going to let the javascript runtime",
    "start": "702880",
    "end": "705279"
  },
  {
    "text": "quickjs know that at some point in the",
    "start": "705279",
    "end": "707680"
  },
  {
    "text": "future this functionality is going to be",
    "start": "707680",
    "end": "709519"
  },
  {
    "text": "present",
    "start": "709519",
    "end": "711150"
  },
  {
    "text": "[Music]",
    "start": "711150",
    "end": "712480"
  },
  {
    "text": "and",
    "start": "712480",
    "end": "713360"
  },
  {
    "text": "the usage is going to be like this i'm",
    "start": "713360",
    "end": "715519"
  },
  {
    "text": "going to have in the global",
    "start": "715519",
    "end": "717760"
  },
  {
    "text": "access to",
    "start": "717760",
    "end": "718959"
  },
  {
    "text": "an object called date and to a key that",
    "start": "718959",
    "end": "721519"
  },
  {
    "text": "is going to be called format that is",
    "start": "721519",
    "end": "723120"
  },
  {
    "text": "going to represent a function and then",
    "start": "723120",
    "end": "725120"
  },
  {
    "text": "in the last line",
    "start": "725120",
    "end": "726560"
  },
  {
    "text": "i'm going to call",
    "start": "726560",
    "end": "728320"
  },
  {
    "text": "format difference and i'm going to pass",
    "start": "728320",
    "end": "730000"
  },
  {
    "text": "two strings keep in mind that these two",
    "start": "730000",
    "end": "732079"
  },
  {
    "text": "strings are high-level javascript values",
    "start": "732079",
    "end": "734480"
  },
  {
    "text": "that we are going to need later on uh so",
    "start": "734480",
    "end": "737920"
  },
  {
    "text": "that's the important part and",
    "start": "737920",
    "end": "740560"
  },
  {
    "text": "the way this is done in pjs or in java's",
    "start": "740560",
    "end": "742480"
  },
  {
    "text": "codebase is just creating a callback",
    "start": "742480",
    "end": "745040"
  },
  {
    "text": "that is going to",
    "start": "745040",
    "end": "746880"
  },
  {
    "text": "you know be a function that is going to",
    "start": "746880",
    "end": "749120"
  },
  {
    "text": "look like this in terms of rust but the",
    "start": "749120",
    "end": "751040"
  },
  {
    "text": "important part here is how this is",
    "start": "751040",
    "end": "752880"
  },
  {
    "text": "implemented so the important part here",
    "start": "752880",
    "end": "755519"
  },
  {
    "text": "is the extern block that we have at the",
    "start": "755519",
    "end": "757120"
  },
  {
    "text": "top that it's instructing that we are",
    "start": "757120",
    "end": "759839"
  },
  {
    "text": "expecting this functionality to be",
    "start": "759839",
    "end": "761600"
  },
  {
    "text": "available",
    "start": "761600",
    "end": "762800"
  },
  {
    "text": "somewhere in the future",
    "start": "762800",
    "end": "764720"
  },
  {
    "text": "this functionality though is represented",
    "start": "764720",
    "end": "766800"
  },
  {
    "text": "in low-level web assembly types",
    "start": "766800",
    "end": "769110"
  },
  {
    "text": "[Music]",
    "start": "769110",
    "end": "770399"
  },
  {
    "text": "so",
    "start": "770399",
    "end": "771760"
  },
  {
    "text": "in this callback we get access to two",
    "start": "771760",
    "end": "773680"
  },
  {
    "text": "java",
    "start": "773680",
    "end": "774720"
  },
  {
    "text": "javascript strings that we want to lower",
    "start": "774720",
    "end": "776639"
  },
  {
    "text": "into pointers to pass in",
    "start": "776639",
    "end": "778959"
  },
  {
    "text": "to the function that is defined in that",
    "start": "778959",
    "end": "780480"
  },
  {
    "text": "extern c block",
    "start": "780480",
    "end": "782720"
  },
  {
    "text": "once we",
    "start": "782720",
    "end": "784320"
  },
  {
    "text": "convert those two values those two",
    "start": "784320",
    "end": "786480"
  },
  {
    "text": "javascript strings into pointers in the",
    "start": "786480",
    "end": "788480"
  },
  {
    "text": "process that's called lowering we can",
    "start": "788480",
    "end": "790240"
  },
  {
    "text": "call that that um",
    "start": "790240",
    "end": "792399"
  },
  {
    "text": "that function one thing to notice though",
    "start": "792399",
    "end": "794639"
  },
  {
    "text": "is that we have uh five",
    "start": "794639",
    "end": "796959"
  },
  {
    "text": "um params here because",
    "start": "796959",
    "end": "800800"
  },
  {
    "text": "in the last param",
    "start": "800800",
    "end": "802240"
  },
  {
    "text": "it's something that we call the return",
    "start": "802240",
    "end": "803600"
  },
  {
    "text": "pointer area in which we're going to",
    "start": "803600",
    "end": "804959"
  },
  {
    "text": "encode what that function is returning",
    "start": "804959",
    "end": "807279"
  },
  {
    "text": "basically the length of um up up until",
    "start": "807279",
    "end": "810800"
  },
  {
    "text": "where we can read memory and the pointer",
    "start": "810800",
    "end": "813200"
  },
  {
    "text": "um so this is",
    "start": "813200",
    "end": "815360"
  },
  {
    "text": "i think this has been standardizing the",
    "start": "815360",
    "end": "816800"
  },
  {
    "text": "canonical api",
    "start": "816800",
    "end": "818800"
  },
  {
    "text": "and",
    "start": "818800",
    "end": "819839"
  },
  {
    "text": "then the last part that we do here is",
    "start": "819839",
    "end": "821519"
  },
  {
    "text": "basically from that return area pointer",
    "start": "821519",
    "end": "823680"
  },
  {
    "text": "we",
    "start": "823680",
    "end": "824480"
  },
  {
    "text": "read",
    "start": "824480",
    "end": "825440"
  },
  {
    "text": "that specific memory and then we create",
    "start": "825440",
    "end": "827440"
  },
  {
    "text": "a javascript string so this is the",
    "start": "827440",
    "end": "829519"
  },
  {
    "text": "process that's called lifting",
    "start": "829519",
    "end": "831600"
  },
  {
    "text": "so we return this string to the user and",
    "start": "831600",
    "end": "833680"
  },
  {
    "text": "then we can have access to that",
    "start": "833680",
    "end": "835360"
  },
  {
    "text": "functionality",
    "start": "835360",
    "end": "837199"
  },
  {
    "text": "when we compile this to webassembly we",
    "start": "837199",
    "end": "838880"
  },
  {
    "text": "can see that we have an import that's",
    "start": "838880",
    "end": "840880"
  },
  {
    "text": "called date",
    "start": "840880",
    "end": "842560"
  },
  {
    "text": "has a key format and has a function of",
    "start": "842560",
    "end": "844880"
  },
  {
    "text": "of the type that",
    "start": "844880",
    "end": "846639"
  },
  {
    "text": "we defined earlier with",
    "start": "846639",
    "end": "848800"
  },
  {
    "text": "the five parameters",
    "start": "848800",
    "end": "851279"
  },
  {
    "text": "now we have the consumer module and we",
    "start": "851279",
    "end": "853279"
  },
  {
    "text": "have the",
    "start": "853279",
    "end": "854320"
  },
  {
    "text": "producer module or the api",
    "start": "854320",
    "end": "856639"
  },
  {
    "text": "and one export looks like this and the",
    "start": "856639",
    "end": "859040"
  },
  {
    "text": "other import",
    "start": "859040",
    "end": "860160"
  },
  {
    "text": "looks like the following we can see that",
    "start": "860160",
    "end": "862639"
  },
  {
    "text": "these signatures don't necessarily match",
    "start": "862639",
    "end": "864720"
  },
  {
    "text": "and here is where we need to introduce",
    "start": "864720",
    "end": "866320"
  },
  {
    "text": "something else like adapting the",
    "start": "866320",
    "end": "868160"
  },
  {
    "text": "functions between the two modules to be",
    "start": "868160",
    "end": "870720"
  },
  {
    "text": "for them to to communicate uh",
    "start": "870720",
    "end": "873120"
  },
  {
    "text": "effectively and here is where we started",
    "start": "873120",
    "end": "875120"
  },
  {
    "text": "using uh a tool called wasm link um and",
    "start": "875120",
    "end": "879040"
  },
  {
    "text": "radu who was here uh has written a blog",
    "start": "879040",
    "end": "882079"
  },
  {
    "text": "post so if you don't know how this works",
    "start": "882079",
    "end": "884079"
  },
  {
    "text": "you can",
    "start": "884079",
    "end": "885040"
  },
  {
    "text": "read the blog there and it might give",
    "start": "885040",
    "end": "886720"
  },
  {
    "text": "you",
    "start": "886720",
    "end": "887600"
  },
  {
    "text": "more insight so the idea behind wasom",
    "start": "887600",
    "end": "889760"
  },
  {
    "text": "link is that you give wasom link a",
    "start": "889760",
    "end": "891839"
  },
  {
    "text": "consumer module like our javascript",
    "start": "891839",
    "end": "894000"
  },
  {
    "text": "module",
    "start": "894000",
    "end": "895440"
  },
  {
    "text": "a set of interface types and then",
    "start": "895440",
    "end": "897760"
  },
  {
    "text": "another implementation of the date of",
    "start": "897760",
    "end": "900320"
  },
  {
    "text": "the module that is exporting the",
    "start": "900320",
    "end": "902160"
  },
  {
    "text": "functionality that you want and then it",
    "start": "902160",
    "end": "904240"
  },
  {
    "text": "creates a statically linked module that",
    "start": "904240",
    "end": "906399"
  },
  {
    "text": "contains all that functionality and both",
    "start": "906399",
    "end": "908639"
  },
  {
    "text": "modules communicating together",
    "start": "908639",
    "end": "911040"
  },
  {
    "text": "that i had to modify a wasm link because",
    "start": "911040",
    "end": "914160"
  },
  {
    "text": "if i kept it",
    "start": "914160",
    "end": "915839"
  },
  {
    "text": "the way it was it was counterintuitive",
    "start": "915839",
    "end": "918079"
  },
  {
    "text": "to the size benefits that we can get by",
    "start": "918079",
    "end": "920399"
  },
  {
    "text": "dynamic linking at runtime so in my",
    "start": "920399",
    "end": "922959"
  },
  {
    "text": "modification um you give wasm link a",
    "start": "922959",
    "end": "926000"
  },
  {
    "text": "consumer module and just",
    "start": "926000",
    "end": "928320"
  },
  {
    "text": "the interface types definitions of the",
    "start": "928320",
    "end": "930320"
  },
  {
    "text": "modules that you want to consume",
    "start": "930320",
    "end": "932639"
  },
  {
    "text": "this gives us a final module that is",
    "start": "932639",
    "end": "935120"
  },
  {
    "text": "thinner and it's smaller and you know it",
    "start": "935120",
    "end": "937680"
  },
  {
    "text": "doesn't require the code of all the",
    "start": "937680",
    "end": "940560"
  },
  {
    "text": "other modules that",
    "start": "940560",
    "end": "941920"
  },
  {
    "text": "this module is trying to communicate",
    "start": "941920",
    "end": "943360"
  },
  {
    "text": "with so the way i invoke this is just",
    "start": "943360",
    "end": "945519"
  },
  {
    "text": "wasmlink i give it the consumer module",
    "start": "945519",
    "end": "948160"
  },
  {
    "text": "and then",
    "start": "948160",
    "end": "949360"
  },
  {
    "text": "i get",
    "start": "949360",
    "end": "950880"
  },
  {
    "text": "you know the",
    "start": "950880",
    "end": "952240"
  },
  {
    "text": "the result is",
    "start": "952240",
    "end": "953680"
  },
  {
    "text": "a module that looks like this so at the",
    "start": "953680",
    "end": "955279"
  },
  {
    "text": "top we have a type of an instance which",
    "start": "955279",
    "end": "958480"
  },
  {
    "text": "is a concept introduced by",
    "start": "958480",
    "end": "960880"
  },
  {
    "text": "the",
    "start": "960880",
    "end": "962079"
  },
  {
    "text": "i'm not sure to say deprecated but",
    "start": "962079",
    "end": "964560"
  },
  {
    "text": "module linking proposal and then the",
    "start": "964560",
    "end": "967040"
  },
  {
    "text": "important part is the last line in which",
    "start": "967040",
    "end": "968800"
  },
  {
    "text": "we import a date as an instance as it",
    "start": "968800",
    "end": "971600"
  },
  {
    "text": "was defined above and then that instance",
    "start": "971600",
    "end": "973759"
  },
  {
    "text": "is required to export the format",
    "start": "973759",
    "end": "976000"
  },
  {
    "text": "functionality and some other functions",
    "start": "976000",
    "end": "978399"
  },
  {
    "text": "to be able to allocate in free memory",
    "start": "978399",
    "end": "980480"
  },
  {
    "text": "from from this module",
    "start": "980480",
    "end": "983040"
  },
  {
    "text": "so yeah this is what i was explaining",
    "start": "983040",
    "end": "984959"
  },
  {
    "text": "before",
    "start": "984959",
    "end": "985920"
  },
  {
    "text": "and well we have the two pieces now",
    "start": "985920",
    "end": "989440"
  },
  {
    "text": "we have the",
    "start": "989440",
    "end": "991040"
  },
  {
    "text": "consumer module and the producer one and",
    "start": "991040",
    "end": "993279"
  },
  {
    "text": "we have adapted the modules between",
    "start": "993279",
    "end": "995680"
  },
  {
    "text": "the calls between those two modules",
    "start": "995680",
    "end": "997759"
  },
  {
    "text": "how do we",
    "start": "997759",
    "end": "999040"
  },
  {
    "text": "do this in the host well",
    "start": "999040",
    "end": "1001199"
  },
  {
    "text": "uh here i have a wrapper around wasn't",
    "start": "1001199",
    "end": "1003360"
  },
  {
    "text": "time",
    "start": "1003360",
    "end": "1004240"
  },
  {
    "text": "which",
    "start": "1004240",
    "end": "1005360"
  },
  {
    "text": "i'm",
    "start": "1005360",
    "end": "1006240"
  },
  {
    "text": "you know i created sort of like a std",
    "start": "1006240",
    "end": "1009519"
  },
  {
    "text": "api and we should load the date",
    "start": "1009519",
    "end": "1011199"
  },
  {
    "text": "functionality that we want we",
    "start": "1011199",
    "end": "1012560"
  },
  {
    "text": "instantiate that standard library piece",
    "start": "1012560",
    "end": "1015360"
  },
  {
    "text": "and then we create a guest module from",
    "start": "1015360",
    "end": "1016880"
  },
  {
    "text": "the one that was given to us from the",
    "start": "1016880",
    "end": "1018320"
  },
  {
    "text": "command line",
    "start": "1018320",
    "end": "1019519"
  },
  {
    "text": "and then we create an instance and grab",
    "start": "1019519",
    "end": "1021040"
  },
  {
    "text": "the start function and we execute that",
    "start": "1021040",
    "end": "1022720"
  },
  {
    "text": "so the important part here is the",
    "start": "1022720",
    "end": "1024240"
  },
  {
    "text": "instantiate std part which basically",
    "start": "1024240",
    "end": "1027120"
  },
  {
    "text": "looks like this so was some time up",
    "start": "1027120",
    "end": "1028880"
  },
  {
    "text": "until",
    "start": "1028880",
    "end": "1031120"
  },
  {
    "text": "version",
    "start": "1031120",
    "end": "1032160"
  },
  {
    "text": "dot 35.3 provided a way to instantiate a",
    "start": "1032160",
    "end": "1035839"
  },
  {
    "text": "module and then registering that",
    "start": "1035839",
    "end": "1038720"
  },
  {
    "text": "instance as an instance that will be",
    "start": "1038720",
    "end": "1040798"
  },
  {
    "text": "resolved if someone else asked for it",
    "start": "1040799",
    "end": "1043600"
  },
  {
    "text": "so in our case",
    "start": "1043600",
    "end": "1045199"
  },
  {
    "text": "if our javascript module asks for an",
    "start": "1045199",
    "end": "1047120"
  },
  {
    "text": "instance that we registered was sometime",
    "start": "1047120",
    "end": "1049760"
  },
  {
    "text": "will be able to resolve that",
    "start": "1049760",
    "end": "1051679"
  },
  {
    "text": "so i have again in my make file",
    "start": "1051679",
    "end": "1054880"
  },
  {
    "text": "a shared",
    "start": "1054880",
    "end": "1056080"
  },
  {
    "text": "implementation which is going to run our",
    "start": "1056080",
    "end": "1058160"
  },
  {
    "text": "host crate and pass in the dynamic",
    "start": "1058160",
    "end": "1060400"
  },
  {
    "text": "loading webassembly module",
    "start": "1060400",
    "end": "1062160"
  },
  {
    "text": "so let's take a look at that",
    "start": "1062160",
    "end": "1066679"
  },
  {
    "text": "to be able to run that",
    "start": "1073440",
    "end": "1075200"
  },
  {
    "text": "it's going to take some time to compile",
    "start": "1075200",
    "end": "1079480"
  },
  {
    "text": "and then we get the the same",
    "start": "1082240",
    "end": "1083600"
  },
  {
    "text": "functionality that we had",
    "start": "1083600",
    "end": "1085360"
  },
  {
    "text": "with javascript",
    "start": "1085360",
    "end": "1088600"
  },
  {
    "text": "all right so let's go to some statistics",
    "start": "1096559",
    "end": "1098880"
  },
  {
    "text": "in the static version we have um a",
    "start": "1098880",
    "end": "1101520"
  },
  {
    "text": "binary size of 2.2 megabytes let's keep",
    "start": "1101520",
    "end": "1104000"
  },
  {
    "text": "in mind that we are embedding a",
    "start": "1104000",
    "end": "1105039"
  },
  {
    "text": "javascript engine and we have a",
    "start": "1105039",
    "end": "1106799"
  },
  {
    "text": "performance of around 323 microseconds",
    "start": "1106799",
    "end": "1110720"
  },
  {
    "text": "now in the dynamic approach we have a",
    "start": "1110720",
    "end": "1114320"
  },
  {
    "text": "size of 900 kilobytes and a performance",
    "start": "1114320",
    "end": "1117039"
  },
  {
    "text": "of 106",
    "start": "1117039",
    "end": "1118720"
  },
  {
    "text": "160 microseconds so this means that in",
    "start": "1118720",
    "end": "1122240"
  },
  {
    "text": "general we have saved fifty percent uh",
    "start": "1122240",
    "end": "1124799"
  },
  {
    "text": "in both size",
    "start": "1124799",
    "end": "1126400"
  },
  {
    "text": "and performance by going through uh that",
    "start": "1126400",
    "end": "1129280"
  },
  {
    "text": "dynamic link approach",
    "start": "1129280",
    "end": "1131440"
  },
  {
    "text": "so",
    "start": "1131440",
    "end": "1133039"
  },
  {
    "text": "just to do a recap we have done uh we",
    "start": "1133039",
    "end": "1135280"
  },
  {
    "text": "have gotten gains in performance and in",
    "start": "1135280",
    "end": "1137039"
  },
  {
    "text": "code size and we have also",
    "start": "1137039",
    "end": "1140320"
  },
  {
    "text": "enabled composability at the runtime",
    "start": "1140320",
    "end": "1142080"
  },
  {
    "text": "layer",
    "start": "1142080",
    "end": "1142960"
  },
  {
    "text": "right and the other advantage of this",
    "start": "1142960",
    "end": "1144799"
  },
  {
    "text": "approach is that everything is wasn't",
    "start": "1144799",
    "end": "1146240"
  },
  {
    "text": "based",
    "start": "1146240",
    "end": "1147360"
  },
  {
    "text": "if you have a platform in which you have",
    "start": "1147360",
    "end": "1149039"
  },
  {
    "text": "the developers submitting um you know",
    "start": "1149039",
    "end": "1152320"
  },
  {
    "text": "third-party developers who meet",
    "start": "1152320",
    "end": "1153679"
  },
  {
    "text": "user-defined functions and then",
    "start": "1153679",
    "end": "1155440"
  },
  {
    "text": "first-party developers enabling those",
    "start": "1155440",
    "end": "1157120"
  },
  {
    "text": "apis you certainly want uh to have that",
    "start": "1157120",
    "end": "1160240"
  },
  {
    "text": "functionality sandboxed because you",
    "start": "1160240",
    "end": "1162400"
  },
  {
    "text": "could do some of this in the host too",
    "start": "1162400",
    "end": "1165520"
  },
  {
    "text": "but you're getting out of the sandbox at",
    "start": "1165520",
    "end": "1167440"
  },
  {
    "text": "that point",
    "start": "1167440",
    "end": "1168640"
  },
  {
    "text": "now",
    "start": "1168640",
    "end": "1169440"
  },
  {
    "text": "let's see some of the cons that we have",
    "start": "1169440",
    "end": "1171360"
  },
  {
    "text": "seen so far so the first one is the bug",
    "start": "1171360",
    "end": "1173039"
  },
  {
    "text": "ability when you have a composition um",
    "start": "1173039",
    "end": "1176000"
  },
  {
    "text": "and we are and when you are dealing with",
    "start": "1176000",
    "end": "1177760"
  },
  {
    "text": "uh multiple binaries compiled by",
    "start": "1177760",
    "end": "1180400"
  },
  {
    "text": "different tool chains",
    "start": "1180400",
    "end": "1182080"
  },
  {
    "text": "the debuggability story is not fully",
    "start": "1182080",
    "end": "1184559"
  },
  {
    "text": "sorted out so that has been a challenge",
    "start": "1184559",
    "end": "1186720"
  },
  {
    "text": "for us and then the other uh piece is",
    "start": "1186720",
    "end": "1189760"
  },
  {
    "text": "memory consumption so the approach that",
    "start": "1189760",
    "end": "1192080"
  },
  {
    "text": "i've shown here is something um that's",
    "start": "1192080",
    "end": "1194960"
  },
  {
    "text": "called the shared nothing approach in",
    "start": "1194960",
    "end": "1196640"
  },
  {
    "text": "which in which each module uh keeps",
    "start": "1196640",
    "end": "1199440"
  },
  {
    "text": "access to its own memory and so if you",
    "start": "1199440",
    "end": "1202000"
  },
  {
    "text": "have multiple of this you would have uh",
    "start": "1202000",
    "end": "1204159"
  },
  {
    "text": "this like in this in this graph for",
    "start": "1204159",
    "end": "1206480"
  },
  {
    "text": "example here in this diagram we have",
    "start": "1206480",
    "end": "1208000"
  },
  {
    "text": "eight modules you would have at least",
    "start": "1208000",
    "end": "1210159"
  },
  {
    "text": "eight linear memories so that means that",
    "start": "1210159",
    "end": "1212159"
  },
  {
    "text": "your memory consumption can go up",
    "start": "1212159",
    "end": "1213679"
  },
  {
    "text": "depending on how you architect this",
    "start": "1213679",
    "end": "1216480"
  },
  {
    "text": "um",
    "start": "1216480",
    "end": "1217600"
  },
  {
    "text": "yeah so that's everything that i have i",
    "start": "1217600",
    "end": "1219360"
  },
  {
    "text": "would say that this is highly",
    "start": "1219360",
    "end": "1221280"
  },
  {
    "text": "experimental all the tools are changing",
    "start": "1221280",
    "end": "1223520"
  },
  {
    "text": "uh but this has been something that has",
    "start": "1223520",
    "end": "1225360"
  },
  {
    "text": "proven to be very useful for our use",
    "start": "1225360",
    "end": "1227039"
  },
  {
    "text": "case in which we want to keep",
    "start": "1227039",
    "end": "1228480"
  },
  {
    "text": "performance under control and also",
    "start": "1228480",
    "end": "1231120"
  },
  {
    "text": "module size under control so",
    "start": "1231120",
    "end": "1233200"
  },
  {
    "text": "this is my github and twitter handle in",
    "start": "1233200",
    "end": "1235039"
  },
  {
    "text": "case you want to reach out or take a",
    "start": "1235039",
    "end": "1236640"
  },
  {
    "text": "look at any of the code that i've shown",
    "start": "1236640",
    "end": "1238080"
  },
  {
    "text": "here thanks",
    "start": "1238080",
    "end": "1239900"
  },
  {
    "text": "[Applause]",
    "start": "1239900",
    "end": "1246319"
  }
]