[
  {
    "text": "this is pathetic my name is PR we are leading sig instrumentation one of those",
    "start": "0",
    "end": "7890"
  },
  {
    "text": "kubernetes seeks responsible for monitoring logging events and you know",
    "start": "7890",
    "end": "16198"
  },
  {
    "text": "those kind of stuff this is deep dive so we'll take a look in depth of what we",
    "start": "16199",
    "end": "24390"
  },
  {
    "text": "are doing here if something is not it's something like if you don't understand",
    "start": "24390",
    "end": "30060"
  },
  {
    "text": "something just feel free to ask question because you know this might be this",
    "start": "30060",
    "end": "36630"
  },
  {
    "text": "presentation requires some other knowledge here yeah so I didn't expect this so if there if there are any",
    "start": "36630",
    "end": "42629"
  },
  {
    "text": "questions just feel free to ask right away this is not super super formal there's questions the other mode will",
    "start": "42629",
    "end": "48989"
  },
  {
    "text": "hopefully be able to answer them so they",
    "start": "48989",
    "end": "57390"
  },
  {
    "text": "start with a quick quick recap from the instrumentation intro that was on Wednesday I believe that there will be a",
    "start": "57390",
    "end": "64710"
  },
  {
    "text": "video from this on ETO Pascual but we covered the cube CTL table keeps ETL",
    "start": "64710",
    "end": "70920"
  },
  {
    "text": "logs keeps ETL get events and committee was format are yes so cube CTL table is",
    "start": "70920",
    "end": "77220"
  },
  {
    "text": "a tool that allows you to it's a kubernetes building tool that allows you",
    "start": "77220",
    "end": "82229"
  },
  {
    "text": "to show this research of your containers running in a kubernetes so it's by",
    "start": "82229",
    "end": "88439"
  },
  {
    "text": "default in kubernetes the system you can think about this like about this top unique unique style command cube city",
    "start": "88439",
    "end": "97020"
  },
  {
    "text": "locks again is building in kubernetes it shows you the recent locks from your",
    "start": "97020",
    "end": "103470"
  },
  {
    "text": "container by region I mean I agree Stanton megabytes of locks or this is",
    "start": "103470",
    "end": "109259"
  },
  {
    "text": "the default and you can configure this to a different value but the assumption",
    "start": "109259",
    "end": "114810"
  },
  {
    "text": "is that there is no historical locks just the recent ones keep CTR gate",
    "start": "114810",
    "end": "121200"
  },
  {
    "text": "events again evens are those lightweight messages in a kubernetes they are",
    "start": "121200",
    "end": "127350"
  },
  {
    "text": "explaining that something happening in the system like for example pod was scheduled on and you can see those events using keep",
    "start": "127350",
    "end": "135670"
  },
  {
    "text": "CTL get events again this gives you only you know as there is a huge load on",
    "start": "135670",
    "end": "142959"
  },
  {
    "text": "event like if you have a big cluster that can there there is going on a lot of stuff so there is a lot of event",
    "start": "142959",
    "end": "150849"
  },
  {
    "text": "generated for such cluster so cute keeps it'll get even shows you only the recent",
    "start": "150849",
    "end": "156730"
  },
  {
    "text": "the most recent set of events the devil is one hour in order to have history you",
    "start": "156730",
    "end": "164920"
  },
  {
    "text": "need to arrive down somewhere else we also covered parameters format so one thing when talking about Prometheus even",
    "start": "164920",
    "end": "171700"
  },
  {
    "text": "think about parts of this parameter you think one is the full stack monitoring",
    "start": "171700",
    "end": "180220"
  },
  {
    "text": "solution full stack open source solution that is under sin CF that Fredrik is one",
    "start": "180220",
    "end": "187150"
  },
  {
    "text": "of the maintainer so this is one piece another piece with this more Universal",
    "start": "187150",
    "end": "193540"
  },
  {
    "text": "is Prometheus matrix format it's based",
    "start": "193540",
    "end": "198549"
  },
  {
    "text": "like it's inspired by Google internal",
    "start": "198549",
    "end": "203730"
  },
  {
    "text": "metric format and it's basically it's becoming or it is the factor the",
    "start": "203730",
    "end": "210910"
  },
  {
    "text": "standard of exposing matrix in the world even if you are not relying on the primitive stock itself you want to",
    "start": "210910",
    "end": "217419"
  },
  {
    "text": "expose your matrix in primitives forward all kubernetes system components exposed",
    "start": "217419",
    "end": "223660"
  },
  {
    "text": "matrix in this format as well so you can easily integrate this format with other providers I know that at least a few",
    "start": "223660",
    "end": "231760"
  },
  {
    "text": "other monitoring solution can scribe matrix in a parameters format the results of work around standardizing",
    "start": "231760",
    "end": "240030"
  },
  {
    "text": "defining a standard monitoring format this work is open metric open matrix",
    "start": "240030",
    "end": "249780"
  },
  {
    "text": "effort so it seems that all okay so it",
    "start": "249780",
    "end": "256000"
  },
  {
    "text": "seems that many monitoring providers monitoring companies will will agree at",
    "start": "256000",
    "end": "263050"
  },
  {
    "text": "some point that this is a standard and and from adduced format is a base for this standard so this is what we did",
    "start": "263050",
    "end": "269500"
  },
  {
    "text": "during the last meeting now I would like to show our heat actual overview",
    "start": "269500",
    "end": "275590"
  },
  {
    "text": "kubernetes architecture monitoring in kubernetes architectural overview so",
    "start": "275590",
    "end": "283420"
  },
  {
    "text": "here is the picture so in kubernetes you'll have this core matrix pipeline",
    "start": "283420",
    "end": "290310"
  },
  {
    "text": "which consists of matrix API the API kubernetes quality API that is available",
    "start": "290310",
    "end": "297880"
  },
  {
    "text": "in kubernetes api server that basically allows you to consume matrix there is",
    "start": "297880",
    "end": "304840"
  },
  {
    "text": "metric server the default implementation of this API it's not a part of",
    "start": "304840",
    "end": "311380"
  },
  {
    "text": "kubernetes api server give you many",
    "start": "311380",
    "end": "316390"
  },
  {
    "text": "reasons including security one we don't want to scrape from a master point of",
    "start": "316390",
    "end": "322720"
  },
  {
    "text": "view we don't want to scrape notes for like there is this pattern that from master machine we should not",
    "start": "322720",
    "end": "330509"
  },
  {
    "text": "create like initiate a connection to notes and metric server what metric",
    "start": "331080",
    "end": "338940"
  },
  {
    "text": "server does we'll see later in the presentation but it basically periodically scrapes all kubernetes",
    "start": "338940",
    "end": "344700"
  },
  {
    "text": "nodes for metrics about the containers running on those nodes so this is this",
    "start": "344700",
    "end": "351030"
  },
  {
    "text": "is coming for as a part of kubernetes by default here the consumer so there is",
    "start": "351030",
    "end": "357570"
  },
  {
    "text": "keep CTL top horizontal pod outer scalar and scheduler like this is not yet fully",
    "start": "357570",
    "end": "363480"
  },
  {
    "text": "implemented there are some works around using resource usage metrics in order to",
    "start": "363480",
    "end": "369480"
  },
  {
    "text": "make better scheduling decisions in addition to this you need some",
    "start": "369480",
    "end": "374940"
  },
  {
    "text": "third-party monitoring solution it's basically up to the third-party",
    "start": "374940",
    "end": "381690"
  },
  {
    "text": "monitoring vendor how to actually integrate with kubernetes but there is a",
    "start": "381690",
    "end": "387960"
  },
  {
    "text": "way to consume data from this very party monitoring solution this is custom",
    "start": "387960",
    "end": "393300"
  },
  {
    "text": "metrics API that custom metrics API is defined defined as a part of kubernetes",
    "start": "393300",
    "end": "402770"
  },
  {
    "text": "but there is no default implementation for this every single monitoring vendor",
    "start": "402770",
    "end": "408660"
  },
  {
    "text": "monitoring provider should have their own implementation of this custom",
    "start": "408660",
    "end": "413970"
  },
  {
    "text": "anticipate of course if if they want to be integrated with kubernetes for now horizontal product scalar uses metrics",
    "start": "413970",
    "end": "421380"
  },
  {
    "text": "from custom metrics API to scale pods based on other metrics than just",
    "start": "421380",
    "end": "427620"
  },
  {
    "text": "research metric so this can be for example average request latency",
    "start": "427620",
    "end": "433280"
  },
  {
    "text": "automating the numbers of requests or length of your pops up cure or maybe",
    "start": "433280",
    "end": "440040"
  },
  {
    "text": "even something more sophisticated so this is more or less the overview of",
    "start": "440040",
    "end": "446190"
  },
  {
    "text": "architecture and questions so far go for",
    "start": "446190",
    "end": "453150"
  },
  {
    "text": "custom metrics yes theoretically yes",
    "start": "453150",
    "end": "462110"
  },
  {
    "text": "[Music]",
    "start": "462110",
    "end": "465249"
  },
  {
    "text": "so let's take a look what's going on a note so on a note on every single so",
    "start": "476470",
    "end": "483040"
  },
  {
    "text": "here the pots running on a note actually containers on every single know there is",
    "start": "483040",
    "end": "488410"
  },
  {
    "text": "cubelet instance dining there there is a see adviser piece of C adviser that is",
    "start": "488410",
    "end": "495520"
  },
  {
    "text": "compiled into couplet see advisor is a Google tool Google open source tool to",
    "start": "495520",
    "end": "502180"
  },
  {
    "text": "basically monitor your containers it was",
    "start": "502180",
    "end": "507640"
  },
  {
    "text": "even created before kubernetes project so it's compiled into cubelet cubelet",
    "start": "507640",
    "end": "515169"
  },
  {
    "text": "exposes those metrics through some other api so this is this is a kubernetes api",
    "start": "515169",
    "end": "521620"
  },
  {
    "text": "to gather those metrics from cubelet and there is of course some parties like it",
    "start": "521620",
    "end": "530320"
  },
  {
    "text": "can be monitoring sir you can be metric server it can be third-party monitoring solution that scribes some other api for",
    "start": "530320",
    "end": "537640"
  },
  {
    "text": "those metrics api's so busy there are free free matrix it lighted api one is",
    "start": "537640",
    "end": "546850"
  },
  {
    "text": "matrix API the one that is that metric server implement so this is basically",
    "start": "546850",
    "end": "552850"
  },
  {
    "text": "basic resource usage matrix so like CPU memory disk usage from the latest point",
    "start": "552850",
    "end": "561010"
  },
  {
    "text": "in time so there is no history no application level matrix no",
    "start": "561010",
    "end": "566110"
  },
  {
    "text": "sophisticated system level matrix just resources this is there another box so",
    "start": "566110",
    "end": "572320"
  },
  {
    "text": "there is custom matrix API custom matrix API allows you to gather matrix from",
    "start": "572320",
    "end": "578950"
  },
  {
    "text": "third-party monitoring solutions the assumption with custom matrix API that the matrix is attached to a kubernetes",
    "start": "578950",
    "end": "585520"
  },
  {
    "text": "object so you can have a matrix that is related to kubernetes deployment that can be related to covariance namespace",
    "start": "585520",
    "end": "591700"
  },
  {
    "text": "Cobras node pod anything that you imagine but the assumption is that this is this is metric related like attached",
    "start": "591700",
    "end": "599110"
  },
  {
    "text": "to kubernetes kubernetes object and if you got want to go outside of kubernetes world this",
    "start": "599110",
    "end": "605650"
  },
  {
    "text": "means that you need a matrix that is not related to any kubernetes object like",
    "start": "605650",
    "end": "611949"
  },
  {
    "text": "for example you have some external system and you want to use those metrics",
    "start": "611949",
    "end": "619449"
  },
  {
    "text": "in order to scale your workloads in kubernetes or you want them in an in different way there is external matrix",
    "start": "619449",
    "end": "626470"
  },
  {
    "text": "API oops there is this external matrix API basically this could be just custom",
    "start": "626470",
    "end": "636339"
  },
  {
    "text": "matrix API but due to security reasons those are separated because in in case",
    "start": "636339",
    "end": "643630"
  },
  {
    "text": "of external matrix API you are leaving this safe kubernetes world and I know",
    "start": "643630",
    "end": "648759"
  },
  {
    "text": "you know reaching something as outside of the outside of the kubernetes so",
    "start": "648759",
    "end": "654690"
  },
  {
    "text": "matrix API that is a default implementation for custom metal API for",
    "start": "654690",
    "end": "660160"
  },
  {
    "text": "external matrix API you need a specific divider provider specific implementation",
    "start": "660160",
    "end": "666959"
  },
  {
    "text": "magic server metric server intervals so basically metric server is registering kubernetes api server through this",
    "start": "666959",
    "end": "674730"
  },
  {
    "text": "aggregate aggregated api server aggregated api so this is an effort that",
    "start": "674730",
    "end": "680949"
  },
  {
    "text": "allows you disaggregated api is an effort that allows you to basically register your custom API server in",
    "start": "680949",
    "end": "689410"
  },
  {
    "text": "kubernetes api server and you will you will basically be able to read the",
    "start": "689410",
    "end": "697449"
  },
  {
    "text": "objects in exactly the same way that you can reach kubernetes objects yeah symmetric server is registered in",
    "start": "697449",
    "end": "704230"
  },
  {
    "text": "kubernetes api server so that you can get metrics in the same way like you can get just spots yeah and as I mentioned",
    "start": "704230",
    "end": "711569"
  },
  {
    "text": "metric server periodically scrapes nodes for those metrics so what's going on in",
    "start": "711569",
    "end": "718810"
  },
  {
    "text": "the metric server symmetric server periodic list and get periodically",
    "start": "718810",
    "end": "726399"
  },
  {
    "text": "scrape summary API endpoints on every single cubelet",
    "start": "726399",
    "end": "733529"
  },
  {
    "text": "then perform some aggregation it enrich those and reach those metrics with",
    "start": "733529",
    "end": "741430"
  },
  {
    "text": "data the metadata comes from API server so there is what on the API server and",
    "start": "741430",
    "end": "750810"
  },
  {
    "text": "we send everything like there is a single request for all containers",
    "start": "750810",
    "end": "759040"
  },
  {
    "text": "running on a particular node so it's not that we are asking for every single",
    "start": "759040",
    "end": "764670"
  },
  {
    "text": "container but for a batch of containers for a batch of matrix about the containers running on a particular node",
    "start": "764670",
    "end": "771130"
  },
  {
    "text": "this is due to performance reasons and thanks to this matrix server scales",
    "start": "771130",
    "end": "776440"
  },
  {
    "text": "pretty well within a read like it uses something between 3 and 4 megabytes of",
    "start": "776440",
    "end": "782770"
  },
  {
    "text": "memory per monitored node and if you specify large enough memory request it",
    "start": "782770",
    "end": "790600"
  },
  {
    "text": "is disguised to 5,000 nodes so in order to you know monitor 5,000 nodes you need",
    "start": "790600",
    "end": "798279"
  },
  {
    "text": "to just specify memory request to 20 gigabytes but that's not that much for",
    "start": "798279",
    "end": "805330"
  },
  {
    "text": "the 5 doesn't not cluster yes so what's going on in what is the flow of data in",
    "start": "805330",
    "end": "811420"
  },
  {
    "text": "matrix server so here are sources so here are note there is source manager",
    "start": "811420",
    "end": "817450"
  },
  {
    "text": "that basically initiate scraping matrix",
    "start": "817450",
    "end": "824290"
  },
  {
    "text": "from every single source and make sure that in in case of time were timeout",
    "start": "824290",
    "end": "830950"
  },
  {
    "text": "we are not basically stacked but rather we are just moving forward then there",
    "start": "830950",
    "end": "838810"
  },
  {
    "text": "are processors that are enriching the scribe matrix with metadata like you",
    "start": "838810",
    "end": "844990"
  },
  {
    "text": "know those labels node name some others",
    "start": "844990",
    "end": "851440"
  },
  {
    "text": "it also aggregates some matrix so for example in order to aggregates no matrix",
    "start": "851440",
    "end": "858220"
  },
  {
    "text": "about note we need to aggregate matrix from all pods running on this particular",
    "start": "858220",
    "end": "863589"
  },
  {
    "text": "node then the data are starting in memory storage and can be reachable from",
    "start": "863589",
    "end": "869529"
  },
  {
    "text": "matrix API this is pretty common architecture for",
    "start": "869529",
    "end": "875020"
  },
  {
    "text": "many monitoring systems custom matrix",
    "start": "875020",
    "end": "880540"
  },
  {
    "text": "API adapters studies a few of them as for now there is one for Prometheus",
    "start": "880540",
    "end": "885550"
  },
  {
    "text": "there is one for stackdriver during this conference I learned that there is also a data dog specific saying one know that",
    "start": "885550",
    "end": "891550"
  },
  {
    "text": "whether there is one there is also",
    "start": "891550",
    "end": "897490"
  },
  {
    "text": "cystic one okay okay so you know this",
    "start": "897490",
    "end": "909040"
  },
  {
    "text": "API was introduced quartet or two ago so there a there is already a few of such",
    "start": "909040",
    "end": "915580"
  },
  {
    "text": "adapters the mother coming yes question",
    "start": "915580",
    "end": "920190"
  },
  {
    "text": "yes yes so this is custom matrix API adopted yes",
    "start": "923760",
    "end": "933750"
  },
  {
    "text": "the current state of the system my aggregated data I mean aggregated across time no historical data just the current",
    "start": "945810",
    "end": "953470"
  },
  {
    "text": "state of the system yeah excuse me it's by default one minute you",
    "start": "953470",
    "end": "967570"
  },
  {
    "text": "are getting the average CPU average memory use it from the last 1 minute but",
    "start": "967570",
    "end": "978690"
  },
  {
    "text": "this is normal monitoring problem right that's it's a count for CPU you get CPU time spent by",
    "start": "978690",
    "end": "987070"
  },
  {
    "text": "a container and then you can do a rate over time and you know the amount of CPU",
    "start": "987070",
    "end": "992829"
  },
  {
    "text": "time that something had used well for memory you only get the current current",
    "start": "992829",
    "end": "999700"
  },
  {
    "text": "status",
    "start": "999700",
    "end": "1002180"
  },
  {
    "text": "yeah so however if you like don't use",
    "start": "1034839",
    "end": "1042290"
  },
  {
    "text": "this for monitoring purposes use this for what it's it was built for for like",
    "start": "1042290",
    "end": "1047630"
  },
  {
    "text": "coop CTL top and for some hph purposes but if you actually want to monitor",
    "start": "1047630",
    "end": "1053510"
  },
  {
    "text": "something this doesn't store any data right so it always just has the latest sample in memory so when you want to do",
    "start": "1053510",
    "end": "1060050"
  },
  {
    "text": "that use an external monitoring system that actually stores historical data like stackdriver or prometheus or",
    "start": "1060050",
    "end": "1066470"
  },
  {
    "text": "whatever insert your favorite monitoring solution yeah so coming back to this monitoring your detector this is the",
    "start": "1066470",
    "end": "1072740"
  },
  {
    "text": "disk automatics pipeline that is mostly for kubernetes system components to",
    "start": "1072740",
    "end": "1079360"
  },
  {
    "text": "operate and you need more this is not",
    "start": "1079360",
    "end": "1084410"
  },
  {
    "text": "provided by kubernetes you just need to install your you know some kind of",
    "start": "1084410",
    "end": "1090380"
  },
  {
    "text": "extension some additional monitoring solution in order to have history for",
    "start": "1090380",
    "end": "1095810"
  },
  {
    "text": "example yes",
    "start": "1095810",
    "end": "1098440"
  },
  {
    "text": "yes Ollie and I have actually been talking about exactly that",
    "start": "1124600",
    "end": "1131350"
  },
  {
    "text": "because you're right like prometheus if you're using Prometheus or any other monitoring system it already collects",
    "start": "1174270",
    "end": "1181450"
  },
  {
    "text": "this data right the metric server is about being able to provide a consistent experience to every single kubernetes",
    "start": "1181450",
    "end": "1188620"
  },
  {
    "text": "cluster out there but it is still an interface the resource metrics API so",
    "start": "1188620",
    "end": "1194320"
  },
  {
    "text": "totally any monitoring system that has this data can implement it so even as",
    "start": "1194320",
    "end": "1200650"
  },
  {
    "text": "for now you can that there is nothing that blocks you from you know replacing metric server with your custom",
    "start": "1200650",
    "end": "1206950"
  },
  {
    "text": "implementation of this similarly like you can replace scheduler with your custom implementation you can replace",
    "start": "1206950",
    "end": "1212200"
  },
  {
    "text": "control of another basically any single kubernetes components maybe except some API server",
    "start": "1212200",
    "end": "1218590"
  },
  {
    "text": "and cubelet can be replaced by something custom yes the question is whether you want to do this and four metric server I",
    "start": "1218590",
    "end": "1226590"
  },
  {
    "text": "don't see motivation to do this because metric server as long as it's a part of",
    "start": "1226590",
    "end": "1233470"
  },
  {
    "text": "the default kubernetes distribution warrant is you that the metrics that it",
    "start": "1233470",
    "end": "1239590"
  },
  {
    "text": "expose are exactly the same as cubelet collects as basically cubelet uses",
    "start": "1239590",
    "end": "1247720"
  },
  {
    "text": "internally to perform for example eviction operations so you have this consistency across multiple components",
    "start": "1247720",
    "end": "1254080"
  },
  {
    "text": "so if you see using clips ETL top that you are reaching the resource limit of",
    "start": "1254080",
    "end": "1261280"
  },
  {
    "text": "your pod you can expect that cubelet will basically soon cubelet can evict",
    "start": "1261280",
    "end": "1270820"
  },
  {
    "text": "this particular pot yes and if you replace this by something custom it there is no guarantee that it will",
    "start": "1270820",
    "end": "1277540"
  },
  {
    "text": "collect exactly the same data in exactly the same intervals similarly for horizontal patata scalar you have the",
    "start": "1277540",
    "end": "1284290"
  },
  {
    "text": "same problem [Music] yes yes as for now download it it should",
    "start": "1284290",
    "end": "1299390"
  },
  {
    "text": "it should a short work work just fine",
    "start": "1299390",
    "end": "1303580"
  },
  {
    "text": "yeah I yeah I don't know I I guess we may be disagree on this but I think I",
    "start": "1307419",
    "end": "1313730"
  },
  {
    "text": "think I I what I think of the metric server is like the canonical implementation that definitely gives you the correct implementation",
    "start": "1313730",
    "end": "1320390"
  },
  {
    "text": "whereas anything else is like yes like the metric server is what we as sig instrumentation definitely definitely",
    "start": "1320390",
    "end": "1326360"
  },
  {
    "text": "make sure that it works correctly with the vendor implementation we like we can",
    "start": "1326360",
    "end": "1331549"
  },
  {
    "text": "oversee any everything that was the problem with peeps are in the first place right",
    "start": "1331549",
    "end": "1337210"
  },
  {
    "text": "so that's that's definitely something that fits more in the custom metrics",
    "start": "1355130",
    "end": "1360710"
  },
  {
    "text": "solutions as like a piece of metrics",
    "start": "1360710",
    "end": "1366150"
  },
  {
    "text": "that are collected by some other system I don't think we can we can ever build something like the metric server for for",
    "start": "1366150",
    "end": "1373140"
  },
  {
    "text": "something like that",
    "start": "1373140",
    "end": "1375710"
  },
  {
    "text": "I would yeah I would say that is your",
    "start": "1412390",
    "end": "1418630"
  },
  {
    "text": "falls into source of data for third-party monitoring solution definitely as far as I know it's",
    "start": "1418630",
    "end": "1424230"
  },
  {
    "text": "integrated with a number of solutions are you are you interested in like doing",
    "start": "1424230",
    "end": "1430950"
  },
  {
    "text": "auto scaling based on that or just monitoring yeah so so yeah so SEO is",
    "start": "1430950",
    "end": "1462760"
  },
  {
    "text": "definitely something that just produces metrics right so it's absolutely something that some monitoring system",
    "start": "1462760",
    "end": "1467920"
  },
  {
    "text": "consumes itself doesn't exactly right",
    "start": "1467920",
    "end": "1477690"
  },
  {
    "text": "yeah but I actually like envoy does that internally mostly okay let's move",
    "start": "1477690",
    "end": "1485980"
  },
  {
    "text": "forward yeah this is a great discussion",
    "start": "1485980",
    "end": "1490290"
  },
  {
    "text": "the internals of metric server adapter hip-stir hip-stir",
    "start": "1494340",
    "end": "1501070"
  },
  {
    "text": "was integrated with a number of solutions there is a few of them here there is 1515 some like around 15",
    "start": "1501070",
    "end": "1509890"
  },
  {
    "text": "integrations of various monitoring solutions in hipster hipster also have a few api's that are non versioned",
    "start": "1509890",
    "end": "1518530"
  },
  {
    "text": "there are not kubernetes quality just some IPS for someone implementing hipster just hipster grew organically so",
    "start": "1518530",
    "end": "1525550"
  },
  {
    "text": "there are some problems with hipster one is that it's hard to maintain another one is that those api's are not the",
    "start": "1525550",
    "end": "1532450"
  },
  {
    "text": "kubernetes quality api they are not they don't have well specification and so on",
    "start": "1532450",
    "end": "1538350"
  },
  {
    "text": "so basically the solutions for this is to is to duplicate hipster and this is",
    "start": "1538350",
    "end": "1544120"
  },
  {
    "text": "something that we are doing right now the first piece this this piece should",
    "start": "1544120",
    "end": "1551810"
  },
  {
    "text": "be replaced by something provider-specific this piece will be replaced by like is",
    "start": "1551810",
    "end": "1559460"
  },
  {
    "text": "already replaced by matrix alpha yes there is matrix API did this well-defined",
    "start": "1559460",
    "end": "1564530"
  },
  {
    "text": "API and there is matrix server which is an implementation of this as you may know basically the first version of",
    "start": "1564530",
    "end": "1571010"
  },
  {
    "text": "matrix server was basically a trimmed-down hipster yes because it does more or less the same work underneath",
    "start": "1571010",
    "end": "1578090"
  },
  {
    "text": "but it doesn't require it's not integrated with third party solutions",
    "start": "1578090",
    "end": "1584240"
  },
  {
    "text": "that is less api exposed and so hopefully it will be easier to maintain",
    "start": "1584240",
    "end": "1589600"
  },
  {
    "text": "any questions on this yeah sure",
    "start": "1589600",
    "end": "1594309"
  },
  {
    "text": "I'm aware of this problem also like this is also the reason why like we talked",
    "start": "1633420",
    "end": "1639580"
  },
  {
    "text": "about duplicating hipster during contributors a mint in 2016 so it was",
    "start": "1639580",
    "end": "1647350"
  },
  {
    "text": "year and a half ago so there are some ideas around a stuff in concrete you know there was but we let you I folks",
    "start": "1647350",
    "end": "1654430"
  },
  {
    "text": "know that this is the problem and they haven't done anything so far so now we",
    "start": "1654430",
    "end": "1659770"
  },
  {
    "text": "need to be let's say mad aggressive in this area and feel their official deprecation policy in the meantime we",
    "start": "1659770",
    "end": "1667090"
  },
  {
    "text": "migrated HPI migrated keep steel top Toto matrix API basically yeah the",
    "start": "1667090",
    "end": "1672460"
  },
  {
    "text": "important the important part for us was that everything that is critical for",
    "start": "1672460",
    "end": "1678130"
  },
  {
    "text": "kubernetes cluster to actually work to be migrated like hipster has a number of",
    "start": "1678130",
    "end": "1684550"
  },
  {
    "text": "sinks right so someone uses some of that for sure so there there's no way to make",
    "start": "1684550",
    "end": "1691960"
  },
  {
    "text": "everyone happy in this so at someone we just need to move forward and deprecated this and make some solutions switch",
    "start": "1691960",
    "end": "1700360"
  },
  {
    "text": "faster than they naturally would have it's just at the same time you know this is this is open source",
    "start": "1700360",
    "end": "1707290"
  },
  {
    "text": "the code is dead so it's not that this will just disappear we'll just stop you",
    "start": "1707290",
    "end": "1712300"
  },
  {
    "text": "know think fixing mod issues with this you know this is not okay",
    "start": "1712300",
    "end": "1722850"
  },
  {
    "text": "I don't know how much time we have left pretty few like not a lot so I'll try to",
    "start": "1725200",
    "end": "1731890"
  },
  {
    "text": "make this quick so about a year and a half ago actually almost two years ago coop state matrix",
    "start": "1731890",
    "end": "1737080"
  },
  {
    "text": "was created by some gods I don't know if I pronounce his name correctly hopefully",
    "start": "1737080",
    "end": "1743340"
  },
  {
    "text": "and at that point I was talking I didn't know about cube",
    "start": "1743340",
    "end": "1751210"
  },
  {
    "text": "State metrics and I was talking to Matias from SoundCloud because crib set",
    "start": "1751210",
    "end": "1756970"
  },
  {
    "text": "metrics was already like a component that had Prometheus tile metrics but",
    "start": "1756970",
    "end": "1763120"
  },
  {
    "text": "actually neither Matias nor I were know knew about cube State metrics and Matias and I we were at the SoundCloud office",
    "start": "1763120",
    "end": "1769690"
  },
  {
    "text": "and we're like what what's missing you're a really advanced and knowledgeable kubernetes user what's",
    "start": "1769690",
    "end": "1777010"
  },
  {
    "text": "missing and he said what was kind of weird is that they have all these really",
    "start": "1777010",
    "end": "1782260"
  },
  {
    "text": "nice metrics but I keep using coop",
    "start": "1782260",
    "end": "1788230"
  },
  {
    "text": "detail to like do production stuff and see if stuff actually works correctly",
    "start": "1788230",
    "end": "1793360"
  },
  {
    "text": "and it doesn't make a whole lot of sense because we want to automate these things right we want to write alerting rules",
    "start": "1793360",
    "end": "1798820"
  },
  {
    "text": "for this be able to dashboard these things so we want to have an actual metric source for cluster state and",
    "start": "1798820",
    "end": "1806050"
  },
  {
    "text": "there wasn't really a part in kubernetes where we could say the API server should expose cluster state or the scheduler",
    "start": "1806050",
    "end": "1813130"
  },
  {
    "text": "shirt the controller from an assertion that the point of metrics especially in prometheus world is that we expose white",
    "start": "1813130",
    "end": "1820750"
  },
  {
    "text": "box metrics so something about the component itself and for none of those",
    "start": "1820750",
    "end": "1826510"
  },
  {
    "text": "cluster state really fits because it's that looks at kubernetes as a whole not as a specific component so then we both",
    "start": "1826510",
    "end": "1835600"
  },
  {
    "text": "did some research and we we did find coop site metrics which had like two metrics at this point which for when he",
    "start": "1835600",
    "end": "1843550"
  },
  {
    "text": "when when Sam actually built this work awesome for him he had like a node metric and the deployment metric that's",
    "start": "1843550",
    "end": "1850330"
  },
  {
    "text": "exactly what he wanted alert on and it landed in like the kubernetes organization because he was like one of",
    "start": "1850330",
    "end": "1856420"
  },
  {
    "text": "the really early on contributing people and so he just created a repo and when",
    "start": "1856420",
    "end": "1864010"
  },
  {
    "text": "we found is it has had for like half a year already hadn't had any any commits",
    "start": "1864010",
    "end": "1870310"
  },
  {
    "text": "so I think these are this were maybe one of the I think these were the two",
    "start": "1870310",
    "end": "1876090"
  },
  {
    "text": "metrics that he had at this point and we were like cool this is exactly what we want to do",
    "start": "1876090",
    "end": "1881950"
  },
  {
    "text": "we have like here we have replicas that we are expecting from this deployment",
    "start": "1881950",
    "end": "1888880"
  },
  {
    "text": "and how many we actually have and that's something that's in condition we can",
    "start": "1888880",
    "end": "1894220"
  },
  {
    "text": "alert on right so that's really cool so yeah two metrics untouched for half a",
    "start": "1894220",
    "end": "1900700"
  },
  {
    "text": "year we're like we are sick instrumentation we need to we need to use this we need to pick this up so",
    "start": "1900700",
    "end": "1907140"
  },
  {
    "text": "that's exactly what we did and now fast fast forward to about seven eight months",
    "start": "1907140",
    "end": "1916420"
  },
  {
    "text": "ago in August of last year we were discussing how we can move",
    "start": "1916420",
    "end": "1923350"
  },
  {
    "text": "forward to GA cube set metrics so we had a bunch of discussions with folks from",
    "start": "1923350",
    "end": "1929950"
  },
  {
    "text": "Google and basically we said we need to go through all the metrics that we have",
    "start": "1929950",
    "end": "1935200"
  },
  {
    "text": "because at this point we had added a ton of them we were at around a hundred metrics at this point and basically protrader just",
    "start": "1935200",
    "end": "1945010"
  },
  {
    "text": "said we need to run a load test in order to be able to GA this so we did and that",
    "start": "1945010",
    "end": "1950860"
  },
  {
    "text": "actually turned out to scale super well apparently I heard this conference it doesn't anymore but we're running new",
    "start": "1950860",
    "end": "1958860"
  },
  {
    "text": "scalability tests for the latest version and figure out what's wrong so yeah but at this point it did and so",
    "start": "1958860",
    "end": "1966100"
  },
  {
    "text": "we decided to GI it yeah so now fast",
    "start": "1966100",
    "end": "1972580"
  },
  {
    "text": "forward to today we have around five",
    "start": "1972580",
    "end": "1977920"
  },
  {
    "text": "hundred thirty-one commits that this was like a week ago I took off these statistics we have a hundred forty-five",
    "start": "1977920",
    "end": "1984070"
  },
  {
    "text": "metrics and seventy two contributors I think it's pretty cool so yeah nice but",
    "start": "1984070",
    "end": "1989950"
  },
  {
    "text": "let's let's actually look at how this this thing worked so when we picked it up from from Sam the way this worked is",
    "start": "1989950",
    "end": "1996910"
  },
  {
    "text": "that we had this cache and this is pretty pretty normal pretty normal component when you look at Corinna Lee's",
    "start": "1996910",
    "end": "2003180"
  },
  {
    "text": "architecture there's these things called informers and you have like a cache that's automatically populated by the",
    "start": "2003180",
    "end": "2009270"
  },
  {
    "text": "kubernetes api you do a watch and you do a list and a watch and then you get all the events basically and you can",
    "start": "2009270",
    "end": "2015820"
  },
  {
    "text": "you keep the cash up-to-date that way basically and then at this point in time every 10 seconds the code would go ahead",
    "start": "2015820",
    "end": "2023830"
  },
  {
    "text": "and sink every 10 seconds all of this data from like deployments and stateful",
    "start": "2023830",
    "end": "2030520"
  },
  {
    "text": "sets and whatever objects we were watching into the Prometheus metrics registry because community cube state",
    "start": "2030520",
    "end": "2037090"
  },
  {
    "text": "metrics is about exposing them in Prometheus format and then whenever",
    "start": "2037090",
    "end": "2042490"
  },
  {
    "text": "Prometheus came along it just built the metrics output from the metrics so I just you and that's fine",
    "start": "2042490",
    "end": "2048970"
  },
  {
    "text": "well actually this is not fine because what what what we did here is that we",
    "start": "2048970",
    "end": "2056560"
  },
  {
    "text": "created all these metrics with these deployments or whatever the object name",
    "start": "2056560",
    "end": "2061570"
  },
  {
    "text": "is and we set the value and the problem with this is that over time even when",
    "start": "2061570",
    "end": "2066730"
  },
  {
    "text": "these objects disappear here and the cash properly cleans them up they",
    "start": "2066730",
    "end": "2071830"
  },
  {
    "text": "actually are still in the metrics registry and there is no real way to clean this up properly",
    "start": "2071830",
    "end": "2078190"
  },
  {
    "text": "today there is but anyways this architecture was not the correct one for",
    "start": "2078190",
    "end": "2083440"
  },
  {
    "text": "the problem at hand so we removed this and instead",
    "start": "2083440",
    "end": "2088500"
  },
  {
    "text": "whenever Prometheus comes and scrapes all these metrics from the site metrics",
    "start": "2088500",
    "end": "2095770"
  },
  {
    "text": "it doesn't it actually builds these metrics on demand so it then goes",
    "start": "2095770",
    "end": "2101140"
  },
  {
    "text": "through all the objects in cash and then builds builds the metric output and then",
    "start": "2101140",
    "end": "2106420"
  },
  {
    "text": "we don't have this problem anymore that there are stale metrics that about objects that actually don't exist",
    "start": "2106420",
    "end": "2112510"
  },
  {
    "text": "anymore so that's cool except that if",
    "start": "2112510",
    "end": "2118510"
  },
  {
    "text": "you paid attention we're actually now that we have kubernetes clusters with",
    "start": "2118510",
    "end": "2124330"
  },
  {
    "text": "like 5,000 nodes guarantee this actually can the cache itself can become pretty large but",
    "start": "2124330",
    "end": "2131070"
  },
  {
    "text": "that's pretty well optimized at this point at least from kubernetes point of",
    "start": "2131070",
    "end": "2136240"
  },
  {
    "text": "view we can probably can optimize a whole lot more but every time Prometheus",
    "start": "2136240",
    "end": "2141490"
  },
  {
    "text": "scrapes this information we built this a giant Prometheus output and at least",
    "start": "2141490",
    "end": "2148600"
  },
  {
    "text": "double the memory usage and it's also pretty heavy on on CPU to do this so this is",
    "start": "2148600",
    "end": "2155740"
  },
  {
    "text": "the current architecture and we have some some ideas on how to improve this",
    "start": "2155740",
    "end": "2161970"
  },
  {
    "text": "and basically the I've been bouncing some ideas with some people and I think this is sort of what pretty much",
    "start": "2161970",
    "end": "2168339"
  },
  {
    "text": "everyone agrees on basically we're just gonna take the cash part out of this",
    "start": "2168339",
    "end": "2173740"
  },
  {
    "text": "equation because the metric output we for sure need to build right that's that's a whole point of this project but",
    "start": "2173740",
    "end": "2180609"
  },
  {
    "text": "we are basically swapping out the storage for of the cache to be the",
    "start": "2180609",
    "end": "2186339"
  },
  {
    "text": "metrics registry directly and this has a couple of nice properties which is that",
    "start": "2186339",
    "end": "2191500"
  },
  {
    "text": "we don't build all the Prometheus objects every time we scrape but the metrics registry just basically prints",
    "start": "2191500",
    "end": "2198400"
  },
  {
    "text": "to an i/o object and and be done with it so hopefully this will hopefully solve",
    "start": "2198400",
    "end": "2203710"
  },
  {
    "text": "the scalability issues we have right now if not we'll have to see what what up",
    "start": "2203710",
    "end": "2209140"
  },
  {
    "text": "what else there is and yeah if that doesn't work out entirely there's an additional optimization that we can do",
    "start": "2209140",
    "end": "2216580"
  },
  {
    "text": "here because at the point of building these metrics we actually only need a very small subset of all of these",
    "start": "2216580",
    "end": "2224040"
  },
  {
    "text": "objects because only a small number of things in criminales objects can",
    "start": "2224040",
    "end": "2229839"
  },
  {
    "text": "actually be translate it into metrics right a metric is a number and something like an image or something like that",
    "start": "2229839",
    "end": "2236530"
  },
  {
    "text": "it's not something that's very helpful to be a metric but a replica is so we",
    "start": "2236530",
    "end": "2243760"
  },
  {
    "text": "could partially just parse all of these things when we receive them from the API server and that should also reduce the",
    "start": "2243760",
    "end": "2250240"
  },
  {
    "text": "footprint of the data we need to hold in the first place so yeah that's pretty much it for cube state metrics but I do",
    "start": "2250240",
    "end": "2257500"
  },
  {
    "text": "think we have run out of time yeah at the time so just show pattern tree can",
    "start": "2257500",
    "end": "2264490"
  },
  {
    "text": "we have two more minutes okay cool thank you so this is high level logging",
    "start": "2264490",
    "end": "2272070"
  },
  {
    "text": "architecture overview so here is keeps ETL blocks NetFlow master machine",
    "start": "2272070",
    "end": "2279480"
  },
  {
    "text": "queries for logs",
    "start": "2279480",
    "end": "2283859"
  },
  {
    "text": "from cubelet docker and that's it so how",
    "start": "2284769",
    "end": "2292130"
  },
  {
    "text": "does it work in details so if a container locks to STD STD out this logs",
    "start": "2292130",
    "end": "2300019"
  },
  {
    "text": "this lock is written to a file the there",
    "start": "2300019",
    "end": "2305479"
  },
  {
    "text": "is some workaround renaming those files but I think the current studies that",
    "start": "2305479",
    "end": "2312349"
  },
  {
    "text": "there is this container ID in the path so that you can figure out which",
    "start": "2312349",
    "end": "2318049"
  },
  {
    "text": "particular container this file is from and when you query this this goes",
    "start": "2318049",
    "end": "2324680"
  },
  {
    "text": "through cubelet to this particular file and if you want to have third-party",
    "start": "2324680",
    "end": "2331099"
  },
  {
    "text": "logging solutions integrated you just need to read you just need to deploy",
    "start": "2331099",
    "end": "2338329"
  },
  {
    "text": "logging agent to a note and read and",
    "start": "2338329",
    "end": "2343759"
  },
  {
    "text": "configure logging nitin in the way that it reads those metrics from files yeah this model as this thank you",
    "start": "2343759",
    "end": "2352119"
  },
  {
    "text": "I know I work on this I don't know which",
    "start": "2369440",
    "end": "2386030"
  },
  {
    "text": "particular at the park you are talking about ah so this case ah this sounds like a",
    "start": "2386030",
    "end": "2400250"
  },
  {
    "text": "serious back then",
    "start": "2400250",
    "end": "2403420"
  },
  {
    "text": "yeah yeah so just if you open this bug then just reopen it",
    "start": "2439740",
    "end": "2445660"
  },
  {
    "text": "if not then then comment on it and make sure if not already to comment",
    "start": "2445660",
    "end": "2451780"
  },
  {
    "text": "kubernetes slash sick instrumentation on it and like we're all up in that teams",
    "start": "2451780",
    "end": "2457600"
  },
  {
    "text": "and then we can make sure that that this is resolved obviously this shouldn't be the case go ahead so maybe we can do",
    "start": "2457600",
    "end": "2465670"
  },
  {
    "text": "some questions offline so thank you",
    "start": "2465670",
    "end": "2470220"
  }
]