[
  {
    "text": "since 2022 Google engineers in",
    "start": "80",
    "end": "3120"
  },
  {
    "text": "collaboration with the OSS community",
    "start": "3120",
    "end": "5440"
  },
  {
    "text": "have been building Q cloudnative queuing",
    "start": "5440",
    "end": "8400"
  },
  {
    "text": "system for AI",
    "start": "8400",
    "end": "10280"
  },
  {
    "text": "workloads my name is Patrick Bunda i'm",
    "start": "10280",
    "end": "13280"
  },
  {
    "text": "one of the Google engineers working on",
    "start": "13280",
    "end": "15200"
  },
  {
    "text": "that and let me tell you a little bit",
    "start": "15200",
    "end": "17119"
  },
  {
    "text": "about this very cool piece of",
    "start": "17119",
    "end": "19800"
  },
  {
    "text": "software imagine you wanted to enter the",
    "start": "19800",
    "end": "22480"
  },
  {
    "text": "place accidentally called Kubernetes",
    "start": "22480",
    "end": "25119"
  },
  {
    "text": "cluster there's a line of people and a",
    "start": "25119",
    "end": "27840"
  },
  {
    "text": "bouncer decides who can enter and who",
    "start": "27840",
    "end": "30400"
  },
  {
    "text": "has to wait q acts like this bouncer",
    "start": "30400",
    "end": "34320"
  },
  {
    "text": "deciding which job or pot can enter the",
    "start": "34320",
    "end": "37120"
  },
  {
    "text": "cluster and obviously as the name",
    "start": "37120",
    "end": "39600"
  },
  {
    "text": "suggests it also cues",
    "start": "39600",
    "end": "41960"
  },
  {
    "text": "them q works with various job types such",
    "start": "41960",
    "end": "45680"
  },
  {
    "text": "as bot job Qflow job ray job pods and",
    "start": "45680",
    "end": "49840"
  },
  {
    "text": "more it abstracts them with an umbrella",
    "start": "49840",
    "end": "52960"
  },
  {
    "text": "CRD called",
    "start": "52960",
    "end": "54920"
  },
  {
    "text": "workload let's circle back to the line",
    "start": "54920",
    "end": "57760"
  },
  {
    "text": "often when people wait in line they can",
    "start": "57760",
    "end": "59840"
  },
  {
    "text": "tell how many people are in front of",
    "start": "59840",
    "end": "61520"
  },
  {
    "text": "them unfortunately with Q and workloads",
    "start": "61520",
    "end": "64559"
  },
  {
    "text": "it wasn't that easy and we have to give",
    "start": "64559",
    "end": "66799"
  },
  {
    "text": "it a thought on how to expose that",
    "start": "66799",
    "end": "68479"
  },
  {
    "text": "information to a",
    "start": "68479",
    "end": "70760"
  },
  {
    "text": "user one of the first idea that can come",
    "start": "70760",
    "end": "73680"
  },
  {
    "text": "to mind is to extend the workload object",
    "start": "73680",
    "end": "76000"
  },
  {
    "text": "with its position simply every time",
    "start": "76000",
    "end": "79200"
  },
  {
    "text": "something changes in the queue for",
    "start": "79200",
    "end": "80799"
  },
  {
    "text": "example workloads gets admitted we would",
    "start": "80799",
    "end": "83439"
  },
  {
    "text": "update the",
    "start": "83439",
    "end": "84920"
  },
  {
    "text": "positions while it may work on a small",
    "start": "84920",
    "end": "87360"
  },
  {
    "text": "scale could this work on a large scale",
    "start": "87360",
    "end": "89600"
  },
  {
    "text": "let's say tens of thousands of workloads",
    "start": "89600",
    "end": "92400"
  },
  {
    "text": "could the API server or etc handle so",
    "start": "92400",
    "end": "95759"
  },
  {
    "text": "many",
    "start": "95759",
    "end": "96600"
  },
  {
    "text": "updates well the short answer is not",
    "start": "96600",
    "end": "99920"
  },
  {
    "text": "really at some point the API server",
    "start": "99920",
    "end": "102720"
  },
  {
    "text": "would struggle to keep up with the pace",
    "start": "102720",
    "end": "106079"
  },
  {
    "text": "so we need to come up with something",
    "start": "106079",
    "end": "108520"
  },
  {
    "text": "different maybe maybe we could have a",
    "start": "108520",
    "end": "111840"
  },
  {
    "text": "completely separate CRD that stores the",
    "start": "111840",
    "end": "114079"
  },
  {
    "text": "order of the queue it's almost as if our",
    "start": "114079",
    "end": "117360"
  },
  {
    "text": "bouncer had a list with the order of the",
    "start": "117360",
    "end": "120759"
  },
  {
    "text": "guests this way on every change we would",
    "start": "120759",
    "end": "123920"
  },
  {
    "text": "only need to update a single object in",
    "start": "123920",
    "end": "126000"
  },
  {
    "text": "etc mark it on the list and it's done",
    "start": "126000",
    "end": "128879"
  },
  {
    "text": "sounds lovely be because we only have to",
    "start": "128879",
    "end": "131840"
  },
  {
    "text": "update a single object and we don't have",
    "start": "131840",
    "end": "134160"
  },
  {
    "text": "to worry about QPS but could this work",
    "start": "134160",
    "end": "138640"
  },
  {
    "text": "well certainly but there is only so much",
    "start": "138640",
    "end": "141840"
  },
  {
    "text": "we can store in a single etc object it",
    "start": "141840",
    "end": "144720"
  },
  {
    "text": "has a size limit so we wouldn't be able",
    "start": "144720",
    "end": "147040"
  },
  {
    "text": "to fit all the guests",
    "start": "147040",
    "end": "148920"
  },
  {
    "text": "here okay let's take a step back and",
    "start": "148920",
    "end": "152720"
  },
  {
    "text": "think about how CRDs work when a user",
    "start": "152720",
    "end": "155920"
  },
  {
    "text": "want to make any action they create a",
    "start": "155920",
    "end": "158879"
  },
  {
    "text": "request that goes to the API server and",
    "start": "158879",
    "end": "161519"
  },
  {
    "text": "then to",
    "start": "161519",
    "end": "162760"
  },
  {
    "text": "etc however besides CRDs there's also",
    "start": "162760",
    "end": "166239"
  },
  {
    "text": "another way of extending the Kubernetes",
    "start": "166239",
    "end": "168760"
  },
  {
    "text": "API called Kubernetes API aggregation",
    "start": "168760",
    "end": "172400"
  },
  {
    "text": "layer it comes in very handy when we",
    "start": "172400",
    "end": "175200"
  },
  {
    "text": "need to deal with a lot of changes and",
    "start": "175200",
    "end": "177680"
  },
  {
    "text": "etc may not be the most suitable storage",
    "start": "177680",
    "end": "180480"
  },
  {
    "text": "for that with app aggregation layer we",
    "start": "180480",
    "end": "183440"
  },
  {
    "text": "can replace the etc with different",
    "start": "183440",
    "end": "186760"
  },
  {
    "text": "storage it may be a banana it may be a",
    "start": "186760",
    "end": "190319"
  },
  {
    "text": "washing machine if it implements the",
    "start": "190319",
    "end": "192239"
  },
  {
    "text": "proper interface then why not or like in",
    "start": "192239",
    "end": "195920"
  },
  {
    "text": "our case it may be Q we know the order",
    "start": "195920",
    "end": "198560"
  },
  {
    "text": "of workloads in Q so why not use that",
    "start": "198560",
    "end": "201400"
  },
  {
    "text": "information this is what we did and",
    "start": "201400",
    "end": "203840"
  },
  {
    "text": "indeed it solved our puzzle what happens",
    "start": "203840",
    "end": "207040"
  },
  {
    "text": "underneath is Q stores all the workloads",
    "start": "207040",
    "end": "209440"
  },
  {
    "text": "in heap structure it doesn't assign",
    "start": "209440",
    "end": "211680"
  },
  {
    "text": "particular position for every workload",
    "start": "211680",
    "end": "213840"
  },
  {
    "text": "but we always know what's the head of",
    "start": "213840",
    "end": "216239"
  },
  {
    "text": "the heap so we know who's first then Q",
    "start": "216239",
    "end": "219680"
  },
  {
    "text": "take takes a snapshot of this heap so",
    "start": "219680",
    "end": "222560"
  },
  {
    "text": "it's not only a bouncer but also",
    "start": "222560",
    "end": "224640"
  },
  {
    "text": "paparazzi as it seems it converts the",
    "start": "224640",
    "end": "227200"
  },
  {
    "text": "snapshot into a list of workloads with",
    "start": "227200",
    "end": "229360"
  },
  {
    "text": "appropriate positions assigned last",
    "start": "229360",
    "end": "232239"
  },
  {
    "text": "important thing is that we want to be",
    "start": "232239",
    "end": "234159"
  },
  {
    "text": "really lazy about it q doesn't do that",
    "start": "234159",
    "end": "237200"
  },
  {
    "text": "unless user asks about it that way we",
    "start": "237200",
    "end": "240720"
  },
  {
    "text": "can ensure it's highly",
    "start": "240720",
    "end": "242680"
  },
  {
    "text": "performant let's now compare these two",
    "start": "242680",
    "end": "244879"
  },
  {
    "text": "ways of extending Kubernetes API crd",
    "start": "244879",
    "end": "248319"
  },
  {
    "text": "store the state of G object in etc hence",
    "start": "248319",
    "end": "251680"
  },
  {
    "text": "they are very easy to set up but also it",
    "start": "251680",
    "end": "254959"
  },
  {
    "text": "they come with some limitation and maybe",
    "start": "254959",
    "end": "257120"
  },
  {
    "text": "not as performant in our cases like uh",
    "start": "257120",
    "end": "260720"
  },
  {
    "text": "like ours they are used extensively",
    "start": "260720",
    "end": "263199"
  },
  {
    "text": "across the whole Kubernetes ecosystem",
    "start": "263199",
    "end": "265600"
  },
  {
    "text": "service monitor job set network policy",
    "start": "265600",
    "end": "268960"
  },
  {
    "text": "just to name a few aggregation layer on",
    "start": "268960",
    "end": "271840"
  },
  {
    "text": "the other hand use its own storage",
    "start": "271840",
    "end": "273840"
  },
  {
    "text": "solution because of that it comes with a",
    "start": "273840",
    "end": "276400"
  },
  {
    "text": "bigger overhead as it's harder to set up",
    "start": "276400",
    "end": "278960"
  },
  {
    "text": "and requires some addinational coding",
    "start": "278960",
    "end": "281840"
  },
  {
    "text": "however in cases like ours or for",
    "start": "281840",
    "end": "284240"
  },
  {
    "text": "example when you need to periodically",
    "start": "284240",
    "end": "286240"
  },
  {
    "text": "collect metrics it can be much more",
    "start": "286240",
    "end": "288320"
  },
  {
    "text": "performant",
    "start": "288320",
    "end": "289919"
  },
  {
    "text": "it's also less popular than CRDs and it",
    "start": "289919",
    "end": "292560"
  },
  {
    "text": "might be harder to fight somebody with a",
    "start": "292560",
    "end": "294639"
  },
  {
    "text": "similar issues like yours as almost",
    "start": "294639",
    "end": "297199"
  },
  {
    "text": "always choosing the right tool is an act",
    "start": "297199",
    "end": "299600"
  },
  {
    "text": "of balance in this case it's a balance",
    "start": "299600",
    "end": "301919"
  },
  {
    "text": "between performance and ease of use in Q",
    "start": "301919",
    "end": "305280"
  },
  {
    "text": "we want to use both of those best of",
    "start": "305280",
    "end": "308000"
  },
  {
    "text": "those both words so we so the vast",
    "start": "308000",
    "end": "310960"
  },
  {
    "text": "majority of our logic relies on CRDs but",
    "start": "310960",
    "end": "314400"
  },
  {
    "text": "when it comes to positioning workloads",
    "start": "314400",
    "end": "316320"
  },
  {
    "text": "we leverage AP aggregation layer",
    "start": "316320",
    "end": "319280"
  },
  {
    "text": "choose your tooling wisely and thank you",
    "start": "319280",
    "end": "321440"
  },
  {
    "text": "for having me",
    "start": "321440",
    "end": "324870"
  },
  {
    "text": "[Applause]",
    "start": "324870",
    "end": "329410"
  }
]