[
  {
    "start": "0",
    "end": "25000"
  },
  {
    "text": "okay so let's get started and just let people trickle in I am Daniella I work currently at a",
    "start": "719",
    "end": "6509"
  },
  {
    "text": "distributed tracing startup in San Francisco California called lights up and I'm here today to talk to you you",
    "start": "6509",
    "end": "14670"
  },
  {
    "text": "all about Chase aggregates before we get into trace aggregates I wanted to give",
    "start": "14670",
    "end": "20220"
  },
  {
    "text": "everybody an overview let me grab my pointer here a quick overview of the",
    "start": "20220",
    "end": "27359"
  },
  {
    "start": "25000",
    "end": "25000"
  },
  {
    "text": "types of data primitives that we work with in observability we like to call these the three data pipes of",
    "start": "27359",
    "end": "32850"
  },
  {
    "text": "observability this is a term that our CEO bunge Siegelman came up with recently you might have heard about the",
    "start": "32850",
    "end": "39750"
  },
  {
    "text": "three pillars of observability which is a little bit different because we think about them as data pipes that carry raw",
    "start": "39750",
    "end": "46559"
  },
  {
    "text": "data to developers to software they're just raw data without processing without",
    "start": "46559",
    "end": "51780"
  },
  {
    "text": "further analysis you cannot get useful insights into your system and I put a",
    "start": "51780",
    "end": "56820"
  },
  {
    "text": "picture of him up here so that you can ask me questions afterwards but mainly I",
    "start": "56820",
    "end": "62280"
  },
  {
    "text": "got a lot of ideas he helped me a ton with this talk so it's more of an attribute back to him to his credit and",
    "start": "62280",
    "end": "68280"
  },
  {
    "text": "also I think he might be around here afterwards somewhere so if you don't disagree with me go yell at him all",
    "start": "68280",
    "end": "75600"
  },
  {
    "text": "right so a very quick overview just so we're all on the same page I'm gonna move very quickly through this overview",
    "start": "75600",
    "end": "80970"
  },
  {
    "text": "since I think most of you know the value of distributed tracing I think that's well understood now on the left you",
    "start": "80970",
    "end": "87119"
  },
  {
    "text": "basically have a monolithic service as more and more modern-day architecture moves towards a micro microservices",
    "start": "87119",
    "end": "93270"
  },
  {
    "text": "architecture you basically need to follow the end-to-end transaction the",
    "start": "93270",
    "end": "98430"
  },
  {
    "text": "end-to-end trace which is basically highlighted in red up there in both cases now in the second case in a micro",
    "start": "98430",
    "end": "106350"
  },
  {
    "text": "services architecture tracing is the only way you can get a coherent picture",
    "start": "106350",
    "end": "111450"
  },
  {
    "text": "at the from the perspective of a request this used to be easy when everything was in one instance or one pod using metrics",
    "start": "111450",
    "end": "118649"
  },
  {
    "text": "or Logs with microservices a trace is really the best way to understand how your requests are going through the",
    "start": "118649",
    "end": "126210"
  },
  {
    "text": "system okay so what does a trace look like again very simple I think most of",
    "start": "126210",
    "end": "132060"
  },
  {
    "start": "128000",
    "end": "128000"
  },
  {
    "text": "you probably have seen other zatia of this we have typically some kind of a client a web framework that",
    "start": "132060",
    "end": "137939"
  },
  {
    "text": "makes RPC calls to a back-end server an API server and that API server intern is",
    "start": "137939",
    "end": "144090"
  },
  {
    "text": "you get deeper and deeper into the stack this is a very well instrumented trace in this case you see you know a blue a",
    "start": "144090",
    "end": "150329"
  },
  {
    "text": "red RPC agreeing RPC a bunch of gray RPCs maybe an external service a third party vendor and basically as you move",
    "start": "150329",
    "end": "158760"
  },
  {
    "text": "from left to right we're seeing a progression in time now with this progression each single work unit so",
    "start": "158760",
    "end": "166859"
  },
  {
    "text": "each line each block in tracing terminology that's called a span it's a",
    "start": "166859",
    "end": "171870"
  },
  {
    "text": "very context rich set of data primitives that we can then use later to form all",
    "start": "171870",
    "end": "177780"
  },
  {
    "text": "kinds of interesting analysis which is covered in today's presentation ok so that's just one trace though and then",
    "start": "177780",
    "end": "184349"
  },
  {
    "text": "really if you squint your eyes a little bit this is sort of the shape of many traces you see you know kind of a",
    "start": "184349",
    "end": "189900"
  },
  {
    "text": "waterfall eview a bunch of different spans and then you look at another one kind of similar a little bit different",
    "start": "189900",
    "end": "197159"
  },
  {
    "text": "but the same transaction and then another one and then another one and another one now the problem here is how",
    "start": "197159",
    "end": "204479"
  },
  {
    "text": "many do you look at how do you know that your trace is representative the key here is we cannot feasibly capture a",
    "start": "204479",
    "end": "211379"
  },
  {
    "text": "hundred percent of all transactions that's just not cost effective right you for a typical distributed system",
    "start": "211379",
    "end": "217620"
  },
  {
    "text": "probably handling at least thousands of transactions per second so sampling is inevitable with sampling the problem you",
    "start": "217620",
    "end": "224819"
  },
  {
    "text": "have is that you don't know whether or not you're looking at a trace that represents the total population and if",
    "start": "224819",
    "end": "230609"
  },
  {
    "text": "you're not careful about it it might lead you down the wrong path to optimize",
    "start": "230609",
    "end": "236129"
  },
  {
    "text": "the wrong thing so sort of leads to leads us to a very difficult problem as",
    "start": "236129",
    "end": "242310"
  },
  {
    "text": "humans we can't process large amounts of data easily so it's like you know you open 10 tabs each with a trace and then",
    "start": "242310",
    "end": "249840"
  },
  {
    "text": "you look at maybe 10 of them and you try to deduce ok what is the what is the 10",
    "start": "249840",
    "end": "254939"
  },
  {
    "text": "represent but really what we want to look at is the aggregate analysis over thousands of traces right at least",
    "start": "254939",
    "end": "261329"
  },
  {
    "start": "257000",
    "end": "257000"
  },
  {
    "text": "thousands of traces you can probably do tons of thousands we're gonna with just a number that's not so humanly",
    "start": "261329",
    "end": "269660"
  },
  {
    "text": "possible the process in a short amount of time is like hundreds of thousands of traces here so today there's there's",
    "start": "269660",
    "end": "275630"
  },
  {
    "text": "about three topics I want to cover with the types of analysis and the types of insight you can draw from looking at a",
    "start": "275630",
    "end": "282080"
  },
  {
    "text": "gratuitous Asst for many many traces but I'm gonna focus a lot of my time at the",
    "start": "282080",
    "end": "287960"
  },
  {
    "text": "end including my live demo on a critical path analysis which ultimately leads to the root cause of performance analysis",
    "start": "287960",
    "end": "296150"
  },
  {
    "text": "and performance regression investigation okay so let's start with something",
    "start": "296150",
    "end": "303320"
  },
  {
    "text": "simple like correlations so this is a symptom of something going wrong",
    "start": "303320",
    "end": "308750"
  },
  {
    "text": "maybe you got paged maybe you deployed something just staring at your metrics dashboard this is a real dashboard I",
    "start": "308750",
    "end": "315050"
  },
  {
    "text": "just took a screenshot of our internal dashboard clearly there's something wrong here something is out of whack there's a",
    "start": "315050",
    "end": "321410"
  },
  {
    "text": "little bump we don't know what happened that's around 12 o'clock on a Monday so",
    "start": "321410",
    "end": "327620"
  },
  {
    "text": "this is where the investigation starts this is your symptom ultimately it a bit of a spoiler here this is this was a",
    "start": "327620",
    "end": "334340"
  },
  {
    "text": "root cause right we found the magic graph if you segment this particular metric by customer you see that one",
    "start": "334340",
    "end": "341180"
  },
  {
    "text": "single customers inadvertently in this case needling one of our servers basically rendering the Box unusable",
    "start": "341180",
    "end": "347720"
  },
  {
    "text": "it's very not responsive but in the metrics dashboard that's not clear we know something is wrong we don't know",
    "start": "347720",
    "end": "353900"
  },
  {
    "text": "which one to start investigating because they all look very similar they all lead to the same problem so how long does it",
    "start": "353900",
    "end": "361490"
  },
  {
    "text": "take to get from your symptom to the root cause in this case it took too long",
    "start": "361490",
    "end": "366590"
  },
  {
    "text": "I don't remember the exact number at least an hour I think it took at least an hour the problem is to get to this",
    "start": "366590",
    "end": "372770"
  },
  {
    "text": "graph you need to know what two segments lie right there's a lot of tag values",
    "start": "372770",
    "end": "379789"
  },
  {
    "text": "that you associate with your metrics and knowing that this was the magic value you had to segment by was the first",
    "start": "379789",
    "end": "386300"
  },
  {
    "text": "problem there's a second problem a much harder one which is that with low",
    "start": "386300",
    "end": "391820"
  },
  {
    "text": "cardinality in this case some kind of a very fake case that I I made with just a select set of customer",
    "start": "391820",
    "end": "398800"
  },
  {
    "text": "there's what maybe five lines on here that's just not realistic for most of your business and services you're going",
    "start": "398800",
    "end": "405250"
  },
  {
    "start": "403000",
    "end": "403000"
  },
  {
    "text": "to be serving at least hundreds if not thousands of customers and it starts to look like this it's very very difficult",
    "start": "405250",
    "end": "411580"
  },
  {
    "text": "for the human brain to process and to find the anomaly in a graph like this",
    "start": "411580",
    "end": "416590"
  },
  {
    "text": "and this is assuming you know what to segment by and the tooling that you're",
    "start": "416590",
    "end": "421600"
  },
  {
    "text": "using allows you to segment by something that has so many distinct values in the thousands and most of the case this is",
    "start": "421600",
    "end": "429970"
  },
  {
    "text": "really a problem it's it's just not cost-effective most of the cases not even feasible the tools that we use a",
    "start": "429970",
    "end": "436480"
  },
  {
    "text": "lot of metrics products literally cannot support cannot visualize thousands and",
    "start": "436480",
    "end": "442120"
  },
  {
    "text": "ten thousands of lines on a graph like this so cardinality is really your your",
    "start": "442120",
    "end": "447970"
  },
  {
    "text": "fatal flaw with using metrics for for root causing a problem like this so what",
    "start": "447970",
    "end": "454180"
  },
  {
    "text": "can you do instead you can slice the data a slightly different way and really",
    "start": "454180",
    "end": "459430"
  },
  {
    "text": "solve the cardinality problem using aggregate traces so this is a latency histogram for those of you familiar with",
    "start": "459430",
    "end": "465610"
  },
  {
    "text": "histograms you probably know what this really means but on the x-axis you basically have these latency buckets one",
    "start": "465610",
    "end": "472900"
  },
  {
    "text": "they each bucket represents a range of latency so the one I'm pointing at here is between five hundred and fifty",
    "start": "472900",
    "end": "479710"
  },
  {
    "text": "milliseconds and 600 milliseconds and when you have on the y-axis is the number of traces I put in the number of",
    "start": "479710",
    "end": "485920"
  },
  {
    "text": "requests here you can think of it as number of spans number of traces doesn't matter the number of units of work that",
    "start": "485920",
    "end": "492490"
  },
  {
    "text": "was done in your system that fell in this latency bucket so you're basically your fast operations over here and",
    "start": "492490",
    "end": "499510"
  },
  {
    "text": "you're really slow operations are all over here this is just a simple count right okay so then I drew a line",
    "start": "499510",
    "end": "505720"
  },
  {
    "text": "approximately your p99 is here so these these three bars fall within the slowest",
    "start": "505720",
    "end": "513190"
  },
  {
    "text": "one percent of all of your requests for your system now notice that a basically",
    "start": "513190",
    "end": "518919"
  },
  {
    "text": "segmented might take data into two I have the slowest 1% and now I have the rest",
    "start": "518920",
    "end": "523930"
  },
  {
    "text": "99% what can we do here at this point we can actually run statistical analysis and try to find defining characteristics",
    "start": "523930",
    "end": "532089"
  },
  {
    "text": "of the top ones top 1% slowest requests what stands out about this top 1% versus",
    "start": "532089",
    "end": "538240"
  },
  {
    "text": "the rest and you're basically doing this ad hoc right you're looking at all of your data you're saying well what's",
    "start": "538240",
    "end": "543790"
  },
  {
    "text": "causing my tail latency is to be slow and in this case again it's a pretty",
    "start": "543790",
    "end": "549250"
  },
  {
    "text": "artificial example in this case you have a particular customer in the previous case you have to segment by customer ID",
    "start": "549250",
    "end": "555310"
  },
  {
    "text": "in this case your what you basically have is a the defining characteristic is",
    "start": "555310",
    "end": "560350"
  },
  {
    "text": "a certain tag value that says customer ID equals the food bar and those requests fall largely so they make a",
    "start": "560350",
    "end": "568750"
  },
  {
    "text": "large part of your top 1% of requests not all of it you have some over here so it's not a perfect correlation but",
    "start": "568750",
    "end": "574660"
  },
  {
    "text": "that's not what we're looking for we're just looking for the first hint towards where you should go with your",
    "start": "574660",
    "end": "579940"
  },
  {
    "text": "investigation remember what you started with is basically nothing you know something is wrong you got paged or you",
    "start": "579940",
    "end": "586029"
  },
  {
    "text": "saw something's wrong with your metrics dashboard you come into a view like this and you just want the system to run",
    "start": "586029",
    "end": "591940"
  },
  {
    "text": "these analysis and suggest to you the characteristics that's abnormal the characteristics that point at something",
    "start": "591940",
    "end": "598600"
  },
  {
    "text": "that might be wrong ok how does this actually apply in a real life scenario so here is a more real-life example one",
    "start": "598600",
    "end": "608980"
  },
  {
    "start": "601000",
    "end": "601000"
  },
  {
    "text": "faulty network card on some random rack and some random data center right you don't hit it very often but once in a",
    "start": "608980",
    "end": "615820"
  },
  {
    "text": "while a request reaches that box and it's just completely non-responsive and that causes your tail latency in this",
    "start": "615820",
    "end": "623020"
  },
  {
    "text": "case I actually changed it to P 99.9 so this allows you to really explain what's",
    "start": "623020",
    "end": "628720"
  },
  {
    "text": "happening with your tailing season the point 1 percent of your slowest requests",
    "start": "628720",
    "end": "634510"
  },
  {
    "text": "again I've segmented here this is another latency histogram I've segmented here right at the P 99.9 mark so we're",
    "start": "634510",
    "end": "642310"
  },
  {
    "text": "basically looking for defining characteristics of that top 0.1% and",
    "start": "642310",
    "end": "647320"
  },
  {
    "text": "I've overlaid here again in black and circled here and as you can see there's actually a strong",
    "start": "647320",
    "end": "653310"
  },
  {
    "text": "correlation this is what we call a correlation coefficient it's sort of the mathematical representation of how",
    "start": "653310",
    "end": "659940"
  },
  {
    "text": "strong of a correlation and because almost everything falls inside this bucket we have a very strong correlation",
    "start": "659940",
    "end": "666420"
  },
  {
    "text": "the best a perfect correlation would be one with a single server with a unique",
    "start": "666420",
    "end": "672060"
  },
  {
    "text": "server ID in u.s. and this is this is just really difficult I mean imagine having this on a metrics",
    "start": "672060",
    "end": "678720"
  },
  {
    "text": "dashboard you first of all you have to know that this is the server ID you wanted to segment by and secondly how",
    "start": "678720",
    "end": "684420"
  },
  {
    "text": "many servers are running I think easily tens of thousands of servers in any of your of distributed systems imagine",
    "start": "684420",
    "end": "690779"
  },
  {
    "text": "looking at a dashboard with tens of thousands of lines and picking out the top one percent that's slightly above",
    "start": "690779",
    "end": "696540"
  },
  {
    "text": "the rest or you know timing out whenever these requests so these are rare occasions that rear occurrences so",
    "start": "696540",
    "end": "703860"
  },
  {
    "text": "catching this on a metrics dashboard is not very easy and with analyzing",
    "start": "703860",
    "end": "709470"
  },
  {
    "text": "thousands and thousands of traces it's actually a lot easier because it pops out because you have the end-to-end",
    "start": "709470",
    "end": "715440"
  },
  {
    "text": "latency the end to end transaction representation okay so this is sort of",
    "start": "715440",
    "end": "721589"
  },
  {
    "text": "where I want to focus a lot of my energy on so this is a different type of analysis on critical path by looking at",
    "start": "721589",
    "end": "727950"
  },
  {
    "text": "many many traces so we're back to this single trace view and another one and another one this is a bit of a theme",
    "start": "727950",
    "end": "734820"
  },
  {
    "text": "today looking at many many traces so again if you look at it from a 30,000 foot view the commonality that you will",
    "start": "734820",
    "end": "741390"
  },
  {
    "text": "notice here is that you have this red bar I've highlighted it to have it",
    "start": "741390",
    "end": "746399"
  },
  {
    "text": "really pop that seems to be the longest in all three of these and it's probably",
    "start": "746399",
    "end": "751440"
  },
  {
    "text": "the case if you look at more but you can you can let the computer do the work you can look at thousands of them and let",
    "start": "751440",
    "end": "757200"
  },
  {
    "text": "the computer tell you what your aggregate critical path is and a critical path is basically the single",
    "start": "757200",
    "end": "763589"
  },
  {
    "text": "operation sometimes they're multiple but let's stick with a simple example of a single operation that basically",
    "start": "763589",
    "end": "768810"
  },
  {
    "text": "contributes that makes up the duration of your entire transaction meaning that if you shrink if you're able to optimize",
    "start": "768810",
    "end": "775260"
  },
  {
    "text": "that transaction that operation if you're able to shrink the the length of the red bar you're in",
    "start": "775260",
    "end": "781060"
  },
  {
    "text": "our transaction becomes faster so this is really where you want to focus a lot of your energy and engineering resources",
    "start": "781060",
    "end": "786910"
  },
  {
    "text": "to optimize and that's where the aggregate critical path is and by looking at thousands of traces the",
    "start": "786910",
    "end": "793180"
  },
  {
    "text": "system can just automatically tell you here's your critical path and remember these spans might belong to different",
    "start": "793180",
    "end": "798460"
  },
  {
    "text": "services so up here might be a service that you own and you end up making a",
    "start": "798460",
    "end": "803650"
  },
  {
    "text": "bunch of RPC calls and this might be a few hops away some team that you don't even talk to and that's what's impacting",
    "start": "803650",
    "end": "809230"
  },
  {
    "text": "your service I'll go more into this in the demo later okay so once you have your critical path the",
    "start": "809230",
    "end": "816010"
  },
  {
    "start": "812000",
    "end": "812000"
  },
  {
    "text": "system tells you you need to explain it all right you need to explain why it's a",
    "start": "816010",
    "end": "821020"
  },
  {
    "text": "critical path why it's really slow and that's actually the hard part most of the time I think we generally have an",
    "start": "821020",
    "end": "828220"
  },
  {
    "text": "idea where the critical path is actually so that's not the most valuable thing that the system can tell you the system",
    "start": "828220",
    "end": "833680"
  },
  {
    "text": "can tell you where the critical path is the harder question that requires often time human intervention to figure out is",
    "start": "833680",
    "end": "840490"
  },
  {
    "text": "why rarely do we know why the critical path is a critical path sometimes it's",
    "start": "840490",
    "end": "846790"
  },
  {
    "text": "sometimes it's easy sometimes you know that there's a network halt or database call that you simply cannot optimize further a lot of the time there is",
    "start": "846790",
    "end": "854350"
  },
  {
    "text": "resource contention and there's a bold statement here that I'm basically making",
    "start": "854350",
    "end": "860800"
  },
  {
    "text": "in order to make my my demo and my example work is that and I think I think",
    "start": "860800",
    "end": "867250"
  },
  {
    "text": "it's true for most of the time is that nearly all latency issues remember we're focused on studying latency in this",
    "start": "867250",
    "end": "873610"
  },
  {
    "text": "performance investigation nearly all latency issues are due to some sort of contention in this example I'm gonna go",
    "start": "873610",
    "end": "881440"
  },
  {
    "text": "into it very soon it's about resource contention contending for a common resource a mutex a lock basically",
    "start": "881440",
    "end": "887910"
  },
  {
    "text": "sometimes it's contending for machine resources CPU network sometimes is",
    "start": "887910",
    "end": "893140"
  },
  {
    "text": "contending for you know maybe a cache maybe a database query but nearly all",
    "start": "893140",
    "end": "898240"
  },
  {
    "text": "latency issues boils down to resource contention different processes different",
    "start": "898240",
    "end": "903550"
  },
  {
    "text": "threads wanting access to the same thing oops",
    "start": "903550",
    "end": "909960"
  },
  {
    "text": "so back to the example I'm basically putting in a very specific example here",
    "start": "909960",
    "end": "915390"
  },
  {
    "text": "already previewed it a little earlier a mutex acquire operation so what this is",
    "start": "915390",
    "end": "921570"
  },
  {
    "text": "is an operation representing how much time this process this transaction had",
    "start": "921570",
    "end": "927210"
  },
  {
    "text": "to wait for a mutex to become available and it's capturing it here as a critical path so generally I would say in a",
    "start": "927210",
    "end": "934800"
  },
  {
    "text": "typical investigation without aggregate analysis you can find a trace like this",
    "start": "934800",
    "end": "939990"
  },
  {
    "text": "and you're kind of at a dead end here I mean you know that it there's a contention on the lock you understand",
    "start": "939990",
    "end": "946350"
  },
  {
    "text": "maybe where it is in the code maybe you have to go back to the code and try to understand how to break the lock of how",
    "start": "946350",
    "end": "952500"
  },
  {
    "text": "to you know basically optimize it further I would say this is a dead end and generally without aggregate trace",
    "start": "952500",
    "end": "959250"
  },
  {
    "text": "analysis this is where you stop but with contention resource contention alice is",
    "start": "959250",
    "end": "964800"
  },
  {
    "start": "962000",
    "end": "962000"
  },
  {
    "text": "what you really want to understand is what the jam is why it's so contended for and sometimes because many",
    "start": "964800",
    "end": "971190"
  },
  {
    "text": "developers contribute to the same code sometimes you lose sight of this it's not always easy to understand why a lock",
    "start": "971190",
    "end": "977400"
  },
  {
    "text": "is so it takes so long to acquire a lock after you've developed on the complicated program for a little while",
    "start": "977400",
    "end": "982890"
  },
  {
    "text": "so really here maybe a car back here you know we've all been in a situation and",
    "start": "982890",
    "end": "988800"
  },
  {
    "text": "you want to know what's holding up all that traffic what what's what's wrong with this and what's missing in a",
    "start": "988800",
    "end": "994440"
  },
  {
    "text": "distributed monitoring environment is a view like this it's a bird's-eye view a holistic view of what is happening to",
    "start": "994440",
    "end": "1001310"
  },
  {
    "text": "that contending resource we can make educated guesses and often people do when they reach that dead end I was",
    "start": "1001310",
    "end": "1007400"
  },
  {
    "text": "talking about maybe it's you know in this case maybe it's an accident it's a construction in the lock case you can if",
    "start": "1007400",
    "end": "1013670"
  },
  {
    "text": "you have knowledge of the code you can make guesses but they're after all still guesses we need data to to prove to",
    "start": "1013670",
    "end": "1021290"
  },
  {
    "text": "ourselves that our theories are correct and in this case thankfully there is a solution I'm gonna stay on theme here",
    "start": "1021290",
    "end": "1028220"
  },
  {
    "text": "trace aggregates right trace aggregate analysis to get to explaining why the",
    "start": "1028220",
    "end": "1033500"
  },
  {
    "text": "resources being contended for this is an important slide it's basically the whole",
    "start": "1033500",
    "end": "1038900"
  },
  {
    "text": "idea around what opening in the live demo that I'm gonna show in a few minutes is remember I have",
    "start": "1038900",
    "end": "1044449"
  },
  {
    "text": "thousands of these of these traces and for each of those chases I've used some",
    "start": "1044449",
    "end": "1050000"
  },
  {
    "text": "statistical analysis to find the critical path that critical path in my",
    "start": "1050000",
    "end": "1055100"
  },
  {
    "text": "case is mutex acquire time spent waiting for that lock all I need",
    "start": "1055100",
    "end": "1060500"
  },
  {
    "text": "during instrumentation when I'm acquiring that lock is to assign a unique ID to that lock it just as a tag",
    "start": "1060500",
    "end": "1067940"
  },
  {
    "text": "value so you're taking remember spans or contacts rich information that you can take arbitrarily with any number of",
    "start": "1067940",
    "end": "1074360"
  },
  {
    "text": "characteristics so in this case I have a unique ID associated with that critical path and I have many many traces so",
    "start": "1074360",
    "end": "1082280"
  },
  {
    "text": "these are all the critical paths from all the other traces and what you can do is you can actually do a back trace",
    "start": "1082280",
    "end": "1088100"
  },
  {
    "text": "because you have the entire transaction you can figure out who the parent color is so what is the process what is the",
    "start": "1088100",
    "end": "1096050"
  },
  {
    "text": "operation what is the function in code that's trying to acquire this lock and",
    "start": "1096050",
    "end": "1101390"
  },
  {
    "text": "how long did they spend waiting for it and maybe how long did they spend holding onto the lock so if you look at",
    "start": "1101390",
    "end": "1108350"
  },
  {
    "text": "let's say thousands of these you're starting to basically get a group an aggregate analysis of what's contending",
    "start": "1108350",
    "end": "1115730"
  },
  {
    "text": "for this you're focusing your energy on alum analyzing the resource that's been contended for and in this case before I",
    "start": "1115730",
    "end": "1122990"
  },
  {
    "start": "1122000",
    "end": "1122000"
  },
  {
    "text": "go into the demo I want to walk through quickly some terminology that I'm gonna",
    "start": "1122990",
    "end": "1129260"
  },
  {
    "text": "be using as a part of the demo it's kind of made-up but just for the for the purpose of this talk we have a very",
    "start": "1129260",
    "end": "1135200"
  },
  {
    "text": "simple concept of the waiters so you know a few threads they're trying to acquire the lock maybe there's a queue",
    "start": "1135200",
    "end": "1140960"
  },
  {
    "text": "so they're in queue waiting for this lock and this is the time spent this is",
    "start": "1140960",
    "end": "1146000"
  },
  {
    "text": "what shows up as that critical path in your trace the red critical path as waiters and maybe at some point thread",
    "start": "1146000",
    "end": "1152870"
  },
  {
    "text": "one eventually gets the lock hold on to it for some period of time does some work releases it and then passes it to",
    "start": "1152870",
    "end": "1160250"
  },
  {
    "text": "threat to who's the next one in queue for this lock and these are what we call holders so at any given time if you're",
    "start": "1160250",
    "end": "1167270"
  },
  {
    "text": "interested in your critical path you want to understand who's waiting for this who has held it in the past and/or who",
    "start": "1167270",
    "end": "1174320"
  },
  {
    "text": "is currently holding it and how long did they hold it for and before going into",
    "start": "1174320",
    "end": "1180740"
  },
  {
    "start": "1179000",
    "end": "1179000"
  },
  {
    "text": "the demo I want to show you an architecture of what I'm demoing so you have context for the different",
    "start": "1180740",
    "end": "1186320"
  },
  {
    "text": "operations that are happening so this is my donut as a service architecture have",
    "start": "1186320",
    "end": "1192260"
  },
  {
    "text": "this really awesome bakery where I'm selling Donuts and I have an API order",
    "start": "1192260",
    "end": "1197510"
  },
  {
    "text": "service so what's happening in the demo is I have basically have a bunch of robotic a bunch of background orders",
    "start": "1197510",
    "end": "1203620"
  },
  {
    "text": "that's ordering Donuts non-stop in the meantime they make a payment for the",
    "start": "1203620",
    "end": "1209180"
  },
  {
    "text": "donut and they come to the fryer service to fry the dough and the fryer service has a giant mutex on it you grab the",
    "start": "1209180",
    "end": "1216290"
  },
  {
    "text": "mutex you fry the donut then you release the mutex and this is done serially one by one after that it needs to be topped",
    "start": "1216290",
    "end": "1222980"
  },
  {
    "text": "the topping needs to be added there's three different types of donuts we have sprinkles chocolate and cinnamon",
    "start": "1222980",
    "end": "1229070"
  },
  {
    "text": "and in this case before you're able to apply the topping you also have to grab",
    "start": "1229070",
    "end": "1234140"
  },
  {
    "text": "the topper lock though different lock a second lock you apply the topping and then you release the lock to let the",
    "start": "1234140",
    "end": "1239780"
  },
  {
    "text": "next donut through so this is the this is the demo architecture we're going to be working with I'm gonna come over here",
    "start": "1239780",
    "end": "1245900"
  },
  {
    "text": "and start on that demo so this is just a",
    "start": "1245900",
    "end": "1252770"
  },
  {
    "text": "program I'm running to start sending data to my demo maximize this alright",
    "start": "1252770",
    "end": "1261680"
  },
  {
    "text": "it's a little tiny here so let me zoom in that's a bit better okay so I have",
    "start": "1261680",
    "end": "1269210"
  },
  {
    "text": "these traces it looks very similar to the ones I've shown before except that",
    "start": "1269210",
    "end": "1274820"
  },
  {
    "text": "now it's with somewhat real data at least the data that I'm generating so you have this background order and you",
    "start": "1274820",
    "end": "1280460"
  },
  {
    "text": "can see I can add a tag here for what topping it is so this one is a cinnamon and it makes a request to process a",
    "start": "1280460",
    "end": "1287360"
  },
  {
    "text": "payment then it fries this is a fryer operation and here you can see that it",
    "start": "1287360",
    "end": "1294350"
  },
  {
    "text": "eventually waits on the fryer lock if I click on this span you can see that I've tagged this with a fire lock remember",
    "start": "1294350",
    "end": "1300560"
  },
  {
    "text": "that the key to resource contention analysis is that unique ID which is fire lock in this case",
    "start": "1300560",
    "end": "1305570"
  },
  {
    "text": "and then it held on to it for some period of time and eventually passed it",
    "start": "1305570",
    "end": "1311150"
  },
  {
    "text": "off to the topper it's very similarly has to sprinkle the topping on so if you if I click on this",
    "start": "1311150",
    "end": "1316730"
  },
  {
    "text": "lock you can see now it's a different lock it's the same operation mutex acquire but now two different lock is",
    "start": "1316730",
    "end": "1322430"
  },
  {
    "text": "the topper lock and we'll see this show up in the analysis later and I have a few of these opened just in this example",
    "start": "1322430",
    "end": "1328310"
  },
  {
    "text": "so this one is a chocolate one and this one is sprinkles so you know if we're",
    "start": "1328310",
    "end": "1334970"
  },
  {
    "text": "just processing this visually it's very different to really see the differences I mean there's there's definitely some",
    "start": "1334970",
    "end": "1340580"
  },
  {
    "text": "duration differences but really how many do you look at before you make a conclusion about what's happening so the",
    "start": "1340580",
    "end": "1346070"
  },
  {
    "text": "point is to use aggregate analysis so let me just go to my local running",
    "start": "1346070",
    "end": "1353230"
  },
  {
    "text": "instance here give it a minute like Wi-Fi through okay and then I want to be",
    "start": "1353230",
    "end": "1360350"
  },
  {
    "text": "looking at my donut web server service so I run a query for that and and here",
    "start": "1360350",
    "end": "1365600"
  },
  {
    "text": "at the top you can see the latency histogram concept that I was talking about earlier where you can see where",
    "start": "1365600",
    "end": "1371450"
  },
  {
    "text": "your p95 is actually you can even run this on like a smaller set of data sorry",
    "start": "1371450",
    "end": "1377540"
  },
  {
    "text": "my computer is pretty slow there's the p99",
    "start": "1377540",
    "end": "1382870"
  },
  {
    "text": "and what we can actually look at is a diagram this is it looks very similar to",
    "start": "1382870",
    "end": "1389330"
  },
  {
    "text": "the one in my slides where you have the donut server and that's making requests to the fryer and a payment service and a",
    "start": "1389330",
    "end": "1398390"
  },
  {
    "text": "topper in in that order in payment fryer and then topper order the interesting",
    "start": "1398390",
    "end": "1404930"
  },
  {
    "text": "thing here is that it's already highlighting the two services of slowing me down so the Halos the yellow halos",
    "start": "1404930",
    "end": "1410990"
  },
  {
    "text": "it's already telling me that that's what I should be looking at the payment took no time which we you know we could see",
    "start": "1410990",
    "end": "1416300"
  },
  {
    "text": "that though and then in the trace it's a very small amount of payment time spent okay let's go back to this view and",
    "start": "1416300",
    "end": "1426430"
  },
  {
    "text": "basically what the correlation remember the correlation I was talking about in terms of looking at many traces is that",
    "start": "1426430",
    "end": "1432770"
  },
  {
    "text": "you can already see it telling me that there is a critical pack here for donut top her operation mutex",
    "start": "1432770",
    "end": "1439960"
  },
  {
    "text": "acquire so it's it's look at all these traces all the ones that's showing the histogram and it knows what operation is",
    "start": "1439960",
    "end": "1446530"
  },
  {
    "text": "holding up what is my critical path which is straighter earlier so what we really want to see is a mutex view so I",
    "start": "1446530",
    "end": "1453039"
  },
  {
    "text": "click on this tab ok so here's what we got we have on the top the sprinkle lock",
    "start": "1453039",
    "end": "1461140"
  },
  {
    "text": "and then there's two graphs there's a waiter graph remember the waiter how long the process is spent waiting and we",
    "start": "1461140",
    "end": "1468460"
  },
  {
    "text": "have a holder graph because there's how long the process he spent waiting I'm sorry holding on to the lock and",
    "start": "1468460",
    "end": "1473860"
  },
  {
    "text": "then on the bottom the same thing waiter and holder except for the fryer lock so I think let's I think I have enough time",
    "start": "1473860",
    "end": "1480400"
  },
  {
    "text": "to go through the the sprinkle case so in this case the legend might not be",
    "start": "1480400",
    "end": "1485409"
  },
  {
    "text": "clear to those sitting in the back but basically we have chocolate cinnamon and sprinkle so in this case if you look at",
    "start": "1485409",
    "end": "1492190"
  },
  {
    "text": "the waiting time on average this is divided by weighted by the number of",
    "start": "1492190",
    "end": "1497380"
  },
  {
    "text": "threads or the number of instances in a number of orders on average they have the same waiting time in total though",
    "start": "1497380",
    "end": "1503950"
  },
  {
    "text": "the with what is this one the cinnamon the cinnamon Dona spends a lot more time",
    "start": "1503950",
    "end": "1509710"
  },
  {
    "text": "waiting and this actually makes a lot of sense because I artificially added a lot",
    "start": "1509710",
    "end": "1514960"
  },
  {
    "text": "more cinnamon orders so in total its spending more time the system is many more time waiting on for don't for",
    "start": "1514960",
    "end": "1522280"
  },
  {
    "text": "cinnamon doughnut orders just because there's more orders so nothing too surprising here but here it's kind of",
    "start": "1522280",
    "end": "1528520"
  },
  {
    "text": "interesting here you can see that in terms of cinnamon versus sprinkles on",
    "start": "1528520",
    "end": "1533950"
  },
  {
    "text": "average they hold the lock for about the same amount of time but for chocolate",
    "start": "1533950",
    "end": "1539590"
  },
  {
    "text": "and again this is an artificial demo so I actually inserted a slightly longer delay for chocolate to hold on to the",
    "start": "1539590",
    "end": "1546789"
  },
  {
    "text": "lock and a really shows up in this analysis and it doesn't show up as obvious when you're looking at a single trace but when you when you flip it",
    "start": "1546789",
    "end": "1553570"
  },
  {
    "text": "around and do analysis on this resource the amount of total time system time spent holding on to a lock for a donut",
    "start": "1553570",
    "end": "1561039"
  },
  {
    "text": "or for a chocolate donut order is way more than the other two despite cinnamon being sort of the the",
    "start": "1561039",
    "end": "1567429"
  },
  {
    "text": "biggest order in terms of count so let's go back and",
    "start": "1567429",
    "end": "1572730"
  },
  {
    "text": "review basically what's happening here so you basically have cinnamon maybe this is your largest customer sending",
    "start": "1572730",
    "end": "1579040"
  },
  {
    "text": "the most data to you spending a lot of time waiting on chocolate orders and these might be orthogonal right you can",
    "start": "1579040",
    "end": "1585850"
  },
  {
    "text": "totally split out the lock and this is a very simple conclusion you can draw by just looking at the analysis for about",
    "start": "1585850",
    "end": "1592450"
  },
  {
    "text": "you know 30 seconds and you can say okay let me split up a lock and have chocolate and cinnamon acquire separate",
    "start": "1592450",
    "end": "1598420"
  },
  {
    "text": "locks so that cinnamon is not impacted by how long chocolate spends topping even though they're you know they're",
    "start": "1598420",
    "end": "1604090"
  },
  {
    "text": "basically different orders okay so I need to wrap up my talk I was making",
    "start": "1604090",
    "end": "1610240"
  },
  {
    "start": "1605000",
    "end": "1605000"
  },
  {
    "text": "this slide and I've gotten a really good advice in the past about how I should",
    "start": "1610240",
    "end": "1616110"
  },
  {
    "text": "schedule my my talk and I had that slide at the beginning where you should always tell your audience what you're gonna be",
    "start": "1616110",
    "end": "1622240"
  },
  {
    "text": "talking about and then the advice I got was that you should always remind your audience the things that you talked",
    "start": "1622240",
    "end": "1628330"
  },
  {
    "text": "about on the talk so I was in the middle of making this slide it's very simple as its gonna copy over you know the correlation stuff and then I said you",
    "start": "1628330",
    "end": "1635170"
  },
  {
    "text": "know it's a at the end of a very long day you're gonna fly home you're not gonna remember any of this so my request",
    "start": "1635170",
    "end": "1641590"
  },
  {
    "text": "to you is I'm not taking that advice but all I'm doing is please remember Trace",
    "start": "1641590",
    "end": "1647140"
  },
  {
    "text": "aggregates as the keywords it's in the title of my talk it's the theme of my talk the next time anybody talks to you",
    "start": "1647140",
    "end": "1653710"
  },
  {
    "text": "about distributed tracing remember to ask them about what insight you can draw by looking at trace aggregates you know",
    "start": "1653710",
    "end": "1660310"
  },
  {
    "text": "if you're evaluating products if you're just exploring tracing think about that getting to that single trace is not the",
    "start": "1660310",
    "end": "1665980"
  },
  {
    "text": "end of the journey that's just the beginning the end is really trying to think about creative ways novel",
    "start": "1665980",
    "end": "1671590"
  },
  {
    "text": "applications of trace aggregate analysis and the last thing in order to get",
    "start": "1671590",
    "end": "1678520"
  },
  {
    "text": "insights from aggregates you need a lot of and a lot of traces I've talked about this thousands of traces at least and in",
    "start": "1678520",
    "end": "1684370"
  },
  {
    "text": "order to get that and not feel locked into a certain vendor a certain product for your traces to be portable",
    "start": "1684370",
    "end": "1691540"
  },
  {
    "text": "there was a very exciting merger yesterday announced for open telemetry which is the next new version the next",
    "start": "1691540",
    "end": "1697870"
  },
  {
    "text": "major new version for open tracing and census so if you're thinking about distributed tracing now get started with",
    "start": "1697870",
    "end": "1704360"
  },
  {
    "text": "one of them get started with open tracing and it's backwards compatible whenever open too much telemetry comes",
    "start": "1704360",
    "end": "1710240"
  },
  {
    "text": "out and open telemetry enables you to basically have built-in telemetry features in your cloud native",
    "start": "1710240",
    "end": "1716270"
  },
  {
    "text": "application and that's the end I think I have enough time for a few questions",
    "start": "1716270",
    "end": "1722790"
  },
  {
    "text": "[Applause] [Music]",
    "start": "1722790",
    "end": "1726349"
  },
  {
    "text": "[Applause] questions hi in this case it seems you",
    "start": "1729780",
    "end": "1740200"
  },
  {
    "text": "can only after the fact it's kind of when things are slow you cannot need",
    "start": "1740200",
    "end": "1745570"
  },
  {
    "text": "information for things that you have been tracing for and since even your",
    "start": "1745570",
    "end": "1750850"
  },
  {
    "text": "code if you are not been tracing for mutex then you would not know why you spend your time yeah and acquiring that",
    "start": "1750850",
    "end": "1758230"
  },
  {
    "text": "mutex is just a part of a cold isn't it or it seems to me that actually you you",
    "start": "1758230",
    "end": "1765279"
  },
  {
    "text": "are to use your knowledge of hey most of the time it's trying to acquire mutex",
    "start": "1765279",
    "end": "1770739"
  },
  {
    "text": "where things go wrong and then from now on I'm going to always trace how long",
    "start": "1770739",
    "end": "1775989"
  },
  {
    "text": "I'm waiting and how long yeah you're talking about how I get that span yes",
    "start": "1775989",
    "end": "1782470"
  },
  {
    "text": "because if you start from scratch you have no idea now this time starting from tracing I have no idea where my application maybe",
    "start": "1782470",
    "end": "1789249"
  },
  {
    "text": "all applications in general spending time I don't know what to trace right I",
    "start": "1789249",
    "end": "1794590"
  },
  {
    "text": "mean I think I think instrumentation is sort of a separate talk altogether but",
    "start": "1794590",
    "end": "1800139"
  },
  {
    "text": "in this case we basically use a integrated chased block so whenever you",
    "start": "1800139",
    "end": "1807009"
  },
  {
    "text": "acquire a trace it's a it's a third party library and it's very easy I in",
    "start": "1807009",
    "end": "1812230"
  },
  {
    "text": "this case I wrote it myself whenever a acquire a trace I start a span and whenever I get that get the mutex I end",
    "start": "1812230",
    "end": "1819489"
  },
  {
    "text": "this ban so that I have contacts I mean this is the thing about tracing is that the primitive is context rich and the",
    "start": "1819489",
    "end": "1825999"
  },
  {
    "text": "point is that as developers we need to get used to adding contacts to your spans which with four metrics and logs",
    "start": "1825999",
    "end": "1832960"
  },
  {
    "text": "it's a little bit different you know metrics typically is you have a key and you have a value and that's it for for",
    "start": "1832960",
    "end": "1838899"
  },
  {
    "text": "tracing I think adding as much contacts at developing tab development time into",
    "start": "1838899",
    "end": "1845049"
  },
  {
    "text": "your traces can never hurt you right because there is no limit on cardinality so you might as well add all the tags",
    "start": "1845049",
    "end": "1850989"
  },
  {
    "text": "you can think of and this is what we internally do as well at light stuff is we put a lot of rich information",
    "start": "1850989",
    "end": "1857250"
  },
  {
    "text": "traces also especially karate Hugo loads of libraries anything that you use may",
    "start": "1857250",
    "end": "1864390"
  },
  {
    "text": "already have inbuilt organizing if you pass the context objects they will just",
    "start": "1864390",
    "end": "1869820"
  },
  {
    "text": "automatically do it hey thanks for the",
    "start": "1869820",
    "end": "1875610"
  },
  {
    "text": "talk my question is when looking at the trace aggregates right we had that particular",
    "start": "1875610",
    "end": "1882510"
  },
  {
    "text": "operation that that particular span standout um do you have a way to",
    "start": "1882510",
    "end": "1889140"
  },
  {
    "text": "aggregate for the similar span happening",
    "start": "1889140",
    "end": "1895049"
  },
  {
    "text": "a lot of time so let let's assume for instance the services multiplexing calls",
    "start": "1895049",
    "end": "1901500"
  },
  {
    "text": "and would make a lot of calls to another service so instead of like having one",
    "start": "1901500",
    "end": "1908909"
  },
  {
    "text": "time one call to topping we would across the production of a donut top like 27",
    "start": "1908909",
    "end": "1916559"
  },
  {
    "text": "times though they would be represented separate spans but in in a total time",
    "start": "1916559",
    "end": "1924690"
  },
  {
    "text": "taken in in the whole process they would aggregate to the to a lot of time isn't",
    "start": "1924690",
    "end": "1930480"
  },
  {
    "text": "it do trace aggregates have any capacity to depict that where this cooperation",
    "start": "1930480",
    "end": "1936750"
  },
  {
    "text": "that is kind of sliced up into multiple pieces kind of comes together yeah so",
    "start": "1936750",
    "end": "1942960"
  },
  {
    "text": "for the purposes of my demo I didn't demonstrate that I kind of the total time is kind of like total CPU time if",
    "start": "1942960",
    "end": "1949470"
  },
  {
    "text": "you will it's not total wall clock time you could though slice it up you could put a restriction also on the time that",
    "start": "1949470",
    "end": "1956549"
  },
  {
    "text": "you're studying the lock for such that you're only looking at the lock that's literally spending time waiting",
    "start": "1956549",
    "end": "1962789"
  },
  {
    "text": "for other locks because they're they're contending for this same resource so in",
    "start": "1962789",
    "end": "1967919"
  },
  {
    "text": "this case it's just a matter of changing the view of your analysis such that",
    "start": "1967919",
    "end": "1974039"
  },
  {
    "text": "you're aggregating like parallel tasks and you're not counting that as like a ballooning you know wall clock time but",
    "start": "1974039",
    "end": "1980669"
  },
  {
    "text": "it is you know it is still CPU time even if it's being processed in parallel in",
    "start": "1980669",
    "end": "1986909"
  },
  {
    "text": "process yeah of course in your example",
    "start": "1986909",
    "end": "1995820"
  },
  {
    "text": "beats at the end like it was one specific server which was slowing down so it was amount tunneled of several",
    "start": "1995820",
    "end": "2002899"
  },
  {
    "text": "bits was one tag you were looking at what if you have like thousands of different like different different",
    "start": "2002899",
    "end": "2008539"
  },
  {
    "text": "inputs and that's combination of five ten different tag which is actually the culprits how do you manage to actually",
    "start": "2008539",
    "end": "2014840"
  },
  {
    "text": "find the right combination which is slowing down the wall system yeah I think I think there's maybe two",
    "start": "2014840",
    "end": "2021830"
  },
  {
    "text": "questions two-part question and I'll answer the first one which is you know the different values which is you know",
    "start": "2021830",
    "end": "2029269"
  },
  {
    "text": "if there's thousands and thousands of servers and you were diligent about instrumentation and you have the unique",
    "start": "2029269",
    "end": "2034519"
  },
  {
    "text": "values the system is very fast at picking up the one that's wrong and I think your real question is what happens",
    "start": "2034519",
    "end": "2040820"
  },
  {
    "text": "when there's a combination of tags that's really the problem not just a single one but maybe this server",
    "start": "2040820",
    "end": "2047530"
  },
  {
    "text": "combined with this time or this server combined with this customer and that's",
    "start": "2047530",
    "end": "2053388"
  },
  {
    "text": "sort of a different that's actually called multi multivariate correlation",
    "start": "2053389",
    "end": "2059750"
  },
  {
    "text": "which I didn't show in this case that we can do that as well it's just I think requires more processing time and",
    "start": "2059750",
    "end": "2065658"
  },
  {
    "text": "statistical analysis you basically then have to look for combinations of things that's causing issues and of course it",
    "start": "2065659",
    "end": "2072079"
  },
  {
    "text": "can't do infinite combinations and that would take a really long time so there's optimizations associated with which",
    "start": "2072079",
    "end": "2078169"
  },
  {
    "text": "variables make sense to be combined together but that's a that's a really enhanced level of analysis that this can",
    "start": "2078169",
    "end": "2085819"
  },
  {
    "text": "definitely support as well we have time for one more question if there is any",
    "start": "2085819",
    "end": "2094990"
  },
  {
    "text": "okay so thank you very much again thanks very much everybody",
    "start": "2094990",
    "end": "2099970"
  }
]