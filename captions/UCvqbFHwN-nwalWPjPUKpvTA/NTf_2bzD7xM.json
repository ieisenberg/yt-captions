[
  {
    "start": "0",
    "end": "58000"
  },
  {
    "text": "let's talk about how Netflix makes grpc",
    "start": "520",
    "end": "2399"
  },
  {
    "text": "easy to serve consumer and",
    "start": "2399",
    "end": "4319"
  },
  {
    "text": "operate so I'm Benjamin fedorka my",
    "start": "4319",
    "end": "6720"
  },
  {
    "text": "pronouncer heem and I work on the Java",
    "start": "6720",
    "end": "8400"
  },
  {
    "text": "platform at Netflix my team specializes",
    "start": "8400",
    "end": "10639"
  },
  {
    "text": "in the experience for RPC oriented apis",
    "start": "10639",
    "end": "13480"
  },
  {
    "text": "so we deliver consistence experience for",
    "start": "13480",
    "end": "15559"
  },
  {
    "text": "pointto Point communication and jvm",
    "start": "15559",
    "end": "17480"
  },
  {
    "text": "applications and we do this by providing",
    "start": "17480",
    "end": "19359"
  },
  {
    "text": "a variety of RPC Frameworks to our",
    "start": "19359",
    "end": "21039"
  },
  {
    "text": "Engineers today we're going to talk",
    "start": "21039",
    "end": "22720"
  },
  {
    "text": "about Netflix JPC Java this is our",
    "start": "22720",
    "end": "24840"
  },
  {
    "text": "client server framework for grpc we also",
    "start": "24840",
    "end": "27359"
  },
  {
    "text": "have a variety of what we call our HTP",
    "start": "27359",
    "end": "29960"
  },
  {
    "text": "frks for just doing restful is traffic",
    "start": "29960",
    "end": "32480"
  },
  {
    "text": "you might be familiar with some of our",
    "start": "32480",
    "end": "33640"
  },
  {
    "text": "OSS libraries uh Netflix concurrency and",
    "start": "33640",
    "end": "35800"
  },
  {
    "text": "Netflix districts and then my team also",
    "start": "35800",
    "end": "37800"
  },
  {
    "text": "owns all the application framework",
    "start": "37800",
    "end": "39719"
  },
  {
    "text": "Integrations for these Frameworks now I",
    "start": "39719",
    "end": "41920"
  },
  {
    "text": "see people already taking pictures of",
    "start": "41920",
    "end": "43160"
  },
  {
    "text": "the slides go for that I also have",
    "start": "43160",
    "end": "45280"
  },
  {
    "text": "already uploaded them toed so you can",
    "start": "45280",
    "end": "47160"
  },
  {
    "text": "get those there um and I'm going to",
    "start": "47160",
    "end": "49079"
  },
  {
    "text": "reference a couple other talks here and",
    "start": "49079",
    "end": "50600"
  },
  {
    "text": "I'll have a link SL at the end uh that",
    "start": "50600",
    "end": "52840"
  },
  {
    "text": "you can take a picture of then or again",
    "start": "52840",
    "end": "54640"
  },
  {
    "text": "grab it off of skedge and just get all",
    "start": "54640",
    "end": "56600"
  },
  {
    "text": "the SES",
    "start": "56600",
    "end": "58280"
  },
  {
    "start": "58000",
    "end": "116000"
  },
  {
    "text": "there all right Netflix jrpc Java is our",
    "start": "58280",
    "end": "61600"
  },
  {
    "text": "most highly featured and complex RPC",
    "start": "61600",
    "end": "63440"
  },
  {
    "text": "framework we have over 600 applications",
    "start": "63440",
    "end": "66640"
  },
  {
    "text": "uh serving 1300 services and we have",
    "start": "66640",
    "end": "68880"
  },
  {
    "text": "1500 applications with JC clients so",
    "start": "68880",
    "end": "71240"
  },
  {
    "text": "it's critical that all these",
    "start": "71240",
    "end": "72200"
  },
  {
    "text": "Integrations are easy we call making",
    "start": "72200",
    "end": "74119"
  },
  {
    "text": "things easy our paved road we approach",
    "start": "74119",
    "end": "76759"
  },
  {
    "text": "this from five different angles first",
    "start": "76759",
    "end": "78799"
  },
  {
    "text": "tooling how do engineers send ad hoc",
    "start": "78799",
    "end": "80560"
  },
  {
    "text": "requests and actually author their",
    "start": "80560",
    "end": "81720"
  },
  {
    "text": "protos that's what we have to do to get",
    "start": "81720",
    "end": "83040"
  },
  {
    "text": "started security how do we establish and",
    "start": "83040",
    "end": "85640"
  },
  {
    "text": "enforce RPC integrity and access",
    "start": "85640",
    "end": "87720"
  },
  {
    "text": "controls resilience how do we sure that",
    "start": "87720",
    "end": "90200"
  },
  {
    "text": "RPC succeed or degrade gracefully waser",
    "start": "90200",
    "end": "93000"
  },
  {
    "text": "ability how do we understand the",
    "start": "93000",
    "end": "94320"
  },
  {
    "text": "behavior of the system and finally",
    "start": "94320",
    "end": "96159"
  },
  {
    "text": "ergonomics how do we make all of this",
    "start": "96159",
    "end": "98320"
  },
  {
    "text": "and other common RPC activities easy",
    "start": "98320",
    "end": "101759"
  },
  {
    "text": "throughout the presentation I'm going to",
    "start": "101759",
    "end": "103040"
  },
  {
    "text": "show a few code samples uh this is going",
    "start": "103040",
    "end": "104920"
  },
  {
    "text": "to be from a spring boot Netflix",
    "start": "104920",
    "end": "106240"
  },
  {
    "text": "application spring Netflix is our paid",
    "start": "106240",
    "end": "108280"
  },
  {
    "text": "framework for Java backend servers uh to",
    "start": "108280",
    "end": "110520"
  },
  {
    "text": "learn more uh I recommend the recent",
    "start": "110520",
    "end": "112040"
  },
  {
    "text": "presentation how Netflix really uses",
    "start": "112040",
    "end": "113759"
  },
  {
    "text": "Java today by Paul",
    "start": "113759",
    "end": "116399"
  },
  {
    "start": "116000",
    "end": "172000"
  },
  {
    "text": "Baker before we even get to serving grpc",
    "start": "116399",
    "end": "119479"
  },
  {
    "text": "we need Proto specification in stubs",
    "start": "119479",
    "end": "121960"
  },
  {
    "text": "when a Java project is initialized",
    "start": "121960",
    "end": "123280"
  },
  {
    "text": "through a project generator and grpc as",
    "start": "123280",
    "end": "125079"
  },
  {
    "text": "a requested feature we include a Proto",
    "start": "125079",
    "end": "127039"
  },
  {
    "text": "definition module and a client module",
    "start": "127039",
    "end": "129119"
  },
  {
    "text": "these modules include Gradle plugins",
    "start": "129119",
    "end": "130879"
  },
  {
    "text": "which orchestrate the OSS Proto Gradle",
    "start": "130879",
    "end": "132760"
  },
  {
    "text": "plugin for sub generation include",
    "start": "132760",
    "end": "134640"
  },
  {
    "text": "additional prot plugins for adding",
    "start": "134640",
    "end": "136200"
  },
  {
    "text": "ergonomic accessories as an example we",
    "start": "136200",
    "end": "138959"
  },
  {
    "text": "will generate Java optional uh for all",
    "start": "138959",
    "end": "141840"
  },
  {
    "text": "the optional fields in your Proto 3 spec",
    "start": "141840",
    "end": "144160"
  },
  {
    "text": "um generate clients with bundled",
    "start": "144160",
    "end": "146440"
  },
  {
    "text": "configuration and language injection",
    "start": "146440",
    "end": "148120"
  },
  {
    "text": "bindings and finally we have on breaking",
    "start": "148120",
    "end": "150319"
  },
  {
    "text": "changes in protol lock so here we have a",
    "start": "150319",
    "end": "152959"
  },
  {
    "text": "code sample uh this is a Hello World RPC",
    "start": "152959",
    "end": "155920"
  },
  {
    "text": "we generate into all the services help",
    "start": "155920",
    "end": "158040"
  },
  {
    "text": "our engineers get started to see where",
    "start": "158040",
    "end": "159560"
  },
  {
    "text": "they should be adding code uh and we",
    "start": "159560",
    "end": "161280"
  },
  {
    "text": "have a couple Proto options here uh",
    "start": "161280",
    "end": "163120"
  },
  {
    "text": "where you can see we've got API",
    "start": "163120",
    "end": "164640"
  },
  {
    "text": "documentation built into the protos",
    "start": "164640",
    "end": "166159"
  },
  {
    "text": "speec finally if I was going to remove",
    "start": "166159",
    "end": "168480"
  },
  {
    "text": "that RPC uh we get a nice error off of",
    "start": "168480",
    "end": "170760"
  },
  {
    "text": "protol",
    "start": "170760",
    "end": "172879"
  },
  {
    "start": "172000",
    "end": "233000"
  },
  {
    "text": "block clients ship with all the",
    "start": "172879",
    "end": "174959"
  },
  {
    "text": "necessary configuration to connect and",
    "start": "174959",
    "end": "176560"
  },
  {
    "text": "configure the supported features if",
    "start": "176560",
    "end": "178840"
  },
  {
    "text": "necessary these are overridable by our",
    "start": "178840",
    "end": "180519"
  },
  {
    "text": "Dynamic configuration service clients",
    "start": "180519",
    "end": "182480"
  },
  {
    "text": "are using a configuration aware manage",
    "start": "182480",
    "end": "184440"
  },
  {
    "text": "channel uh which will rebuild the",
    "start": "184440",
    "end": "186239"
  },
  {
    "text": "interceptors and the underlying",
    "start": "186239",
    "end": "187599"
  },
  {
    "text": "transports uh then we can automically",
    "start": "187599",
    "end": "189599"
  },
  {
    "text": "swap them in for new rpcs this means",
    "start": "189599",
    "end": "191760"
  },
  {
    "text": "that we can reconfigure your RPC without",
    "start": "191760",
    "end": "194400"
  },
  {
    "text": "interrupting any of the call",
    "start": "194400",
    "end": "196080"
  },
  {
    "text": "Flow we generate Java clients by default",
    "start": "196080",
    "end": "198879"
  },
  {
    "text": "uh but we also have pave support for",
    "start": "198879",
    "end": "200319"
  },
  {
    "text": "Python and no. JS clients though they",
    "start": "200319",
    "end": "202200"
  },
  {
    "text": "have a reduced feature set finally we uh",
    "start": "202200",
    "end": "205159"
  },
  {
    "text": "will generate a server module that's",
    "start": "205159",
    "end": "206680"
  },
  {
    "text": "going to be a spring boot Netflix",
    "start": "206680",
    "end": "207840"
  },
  {
    "text": "application it'll be completely wired up",
    "start": "207840",
    "end": "209720"
  },
  {
    "text": "to server stubs with examples for how to",
    "start": "209720",
    "end": "211599"
  },
  {
    "text": "test your application at the end of the",
    "start": "211599",
    "end": "213720"
  },
  {
    "text": "initialization process Engineers have a",
    "start": "213720",
    "end": "215319"
  },
  {
    "text": "grpc server running and test with",
    "start": "215319",
    "end": "217239"
  },
  {
    "text": "example service endpoint and publish",
    "start": "217239",
    "end": "219080"
  },
  {
    "text": "clients ready for consumption",
    "start": "219080",
    "end": "221040"
  },
  {
    "text": "anecdotally about once a month I run a",
    "start": "221040",
    "end": "223200"
  },
  {
    "text": "lab for new engineers at Netflix uh we",
    "start": "223200",
    "end": "225920"
  },
  {
    "text": "have them start from zero and then",
    "start": "225920",
    "end": "228040"
  },
  {
    "text": "deploy to multiple regions in prod uh in",
    "start": "228040",
    "end": "231080"
  },
  {
    "text": "90 minutes or",
    "start": "231080",
    "end": "233400"
  },
  {
    "start": "233000",
    "end": "284000"
  },
  {
    "text": "less another key deployment or",
    "start": "233400",
    "end": "235560"
  },
  {
    "text": "development activity is sending ad hoc",
    "start": "235560",
    "end": "237400"
  },
  {
    "text": "requests uh as we saw before we we have",
    "start": "237400",
    "end": "239959"
  },
  {
    "text": "these Proto three options for API",
    "start": "239959",
    "end": "241480"
  },
  {
    "text": "documentation so we can annotate our",
    "start": "241480",
    "end": "243280"
  },
  {
    "text": "rpcs our messages our enom and then we",
    "start": "243280",
    "end": "246920"
  },
  {
    "text": "can now serve this documentation",
    "start": "246920",
    "end": "248720"
  },
  {
    "text": "generically via the existing service",
    "start": "248720",
    "end": "250319"
  },
  {
    "text": "reflection",
    "start": "250319",
    "end": "251400"
  },
  {
    "text": "interface with that we can uh use common",
    "start": "251400",
    "end": "254159"
  },
  {
    "text": "tools to display this documentation and",
    "start": "254159",
    "end": "256079"
  },
  {
    "text": "as an example uh we have grp Pearl here",
    "start": "256079",
    "end": "259560"
  },
  {
    "text": "at the bottom from full story uh and",
    "start": "259560",
    "end": "261720"
  },
  {
    "text": "that just works out of the box uh it",
    "start": "261720",
    "end": "263800"
  },
  {
    "text": "will show all the prot options so it's a",
    "start": "263800",
    "end": "265240"
  },
  {
    "text": "really good fit there and then we've",
    "start": "265240",
    "end": "266680"
  },
  {
    "text": "also uh extended grpc UI to include this",
    "start": "266680",
    "end": "270400"
  },
  {
    "text": "Proto",
    "start": "270400",
    "end": "271680"
  },
  {
    "text": "information finally uh we do also",
    "start": "271680",
    "end": "274600"
  },
  {
    "text": "translate all the Proto and Doc into an",
    "start": "274600",
    "end": "276479"
  },
  {
    "text": "open API spec and this allows Engineers",
    "start": "276479",
    "end": "278680"
  },
  {
    "text": "to have a single interface uh for grpc",
    "start": "278680",
    "end": "281680"
  },
  {
    "text": "and restful",
    "start": "281680",
    "end": "284240"
  },
  {
    "start": "284000",
    "end": "328000"
  },
  {
    "text": "apis our security features are pretty",
    "start": "284600",
    "end": "286600"
  },
  {
    "text": "boring just like they should be our",
    "start": "286600",
    "end": "288680"
  },
  {
    "text": "developers and servers are issued",
    "start": "288680",
    "end": "290039"
  },
  {
    "text": "certificates signed by our internal CA",
    "start": "290039",
    "end": "291880"
  },
  {
    "text": "uh this establishes their identity we",
    "start": "291880",
    "end": "293919"
  },
  {
    "text": "use these certificates uh to then build",
    "start": "293919",
    "end": "295720"
  },
  {
    "text": "Mutual TLS connections for our first",
    "start": "295720",
    "end": "297440"
  },
  {
    "text": "level of security we also propag end to",
    "start": "297440",
    "end": "300039"
  },
  {
    "text": "end identity information so we can",
    "start": "300039",
    "end": "301800"
  },
  {
    "text": "authenticate calls um between both the",
    "start": "301800",
    "end": "304320"
  },
  {
    "text": "immediate caller of the RPC and the",
    "start": "304320",
    "end": "306240"
  },
  {
    "text": "initiator of the call chain our",
    "start": "306240",
    "end": "308440"
  },
  {
    "text": "Engineers don't need to worry about",
    "start": "308440",
    "end": "309440"
  },
  {
    "text": "setting up this SL context they don't",
    "start": "309440",
    "end": "311120"
  },
  {
    "text": "need to worry about propagating",
    "start": "311120",
    "end": "312199"
  },
  {
    "text": "identities uh and they don't need to",
    "start": "312199",
    "end": "313680"
  },
  {
    "text": "worry about integrating with",
    "start": "313680",
    "end": "314919"
  },
  {
    "text": "authentication or authorization",
    "start": "314919",
    "end": "316199"
  },
  {
    "text": "infrastructure all this is handled by",
    "start": "316199",
    "end": "318080"
  },
  {
    "text": "our RPC framework and our application",
    "start": "318080",
    "end": "319600"
  },
  {
    "text": "framework all an engineer needs to do if",
    "start": "319600",
    "end": "321680"
  },
  {
    "text": "they want to add security to method is",
    "start": "321680",
    "end": "323600"
  },
  {
    "text": "add a annotation to it it'll be",
    "start": "323600",
    "end": "325600"
  },
  {
    "text": "automatically",
    "start": "325600",
    "end": "328000"
  },
  {
    "start": "328000",
    "end": "608000"
  },
  {
    "text": "enforced resiliency is probably our",
    "start": "328479",
    "end": "330919"
  },
  {
    "text": "largest investment uh and it doesn't",
    "start": "330919",
    "end": "332759"
  },
  {
    "text": "lend itself to good pictures uh so I've",
    "start": "332759",
    "end": "334479"
  },
  {
    "text": "just included a couple diagrams I use",
    "start": "334479",
    "end": "335880"
  },
  {
    "text": "for training new team members we start",
    "start": "335880",
    "end": "338680"
  },
  {
    "text": "with name resolution uh we're using",
    "start": "338680",
    "end": "340680"
  },
  {
    "text": "Eureka as our preferred name resolver uh",
    "start": "340680",
    "end": "343120"
  },
  {
    "text": "this is our open source project uh We've",
    "start": "343120",
    "end": "345960"
  },
  {
    "text": "extended it with a really small adapter",
    "start": "345960",
    "end": "348319"
  },
  {
    "text": "uh to bring it over as a grpc name",
    "start": "348319",
    "end": "350199"
  },
  {
    "text": "resolver um we also support DNS uh",
    "start": "350199",
    "end": "353960"
  },
  {
    "text": "Eureka doesn't cover all of our use",
    "start": "353960",
    "end": "355600"
  },
  {
    "text": "cases as an example if we need to uh do",
    "start": "355600",
    "end": "358400"
  },
  {
    "text": "some special call routing uh to a",
    "start": "358400",
    "end": "360160"
  },
  {
    "text": "different region or different",
    "start": "360160",
    "end": "361080"
  },
  {
    "text": "environment uh then we will often fall",
    "start": "361080",
    "end": "362960"
  },
  {
    "text": "back for DNS for that name resolution",
    "start": "362960",
    "end": "365000"
  },
  {
    "text": "has also been extended uh with support",
    "start": "365000",
    "end": "367520"
  },
  {
    "text": "for our canaries this allows us to do ab",
    "start": "367520",
    "end": "370120"
  },
  {
    "text": "tests uh this is how we validate changes",
    "start": "370120",
    "end": "372960"
  },
  {
    "text": "so",
    "start": "372960",
    "end": "374199"
  },
  {
    "text": "easily uh once we're done with uh name",
    "start": "374199",
    "end": "376599"
  },
  {
    "text": "resolution it's time for load balancing",
    "start": "376599",
    "end": "378520"
  },
  {
    "text": "our uh default is twiice of two we're",
    "start": "378520",
    "end": "380720"
  },
  {
    "text": "doing all the load balancing uh within",
    "start": "380720",
    "end": "382919"
  },
  {
    "text": "the client itself we're not using very",
    "start": "382919",
    "end": "384840"
  },
  {
    "text": "many interm load balancers um this is",
    "start": "384840",
    "end": "387639"
  },
  {
    "text": "completely configurable for special",
    "start": "387639",
    "end": "389039"
  },
  {
    "text": "needs uh so we can handle uh subsetting",
    "start": "389039",
    "end": "391680"
  },
  {
    "text": "we can handle additional tweaks that",
    "start": "391680",
    "end": "393560"
  },
  {
    "text": "choice the two algorithm we can also",
    "start": "393560",
    "end": "395280"
  },
  {
    "text": "swap in different algorithms uh some",
    "start": "395280",
    "end": "397360"
  },
  {
    "text": "customers prefer to run with uh round",
    "start": "397360",
    "end": "399319"
  },
  {
    "text": "robin or load balancers with more sticky",
    "start": "399319",
    "end": "402199"
  },
  {
    "text": "capabilities um and this goes as far as",
    "start": "402199",
    "end": "404720"
  },
  {
    "text": "they can actually inject custom load",
    "start": "404720",
    "end": "406160"
  },
  {
    "text": "balancer implementations using the",
    "start": "406160",
    "end": "408000"
  },
  {
    "text": "application",
    "start": "408000",
    "end": "409240"
  },
  {
    "text": "framework we run concurrency limiters",
    "start": "409240",
    "end": "411599"
  },
  {
    "text": "both on our clients and servers uh this",
    "start": "411599",
    "end": "413720"
  },
  {
    "text": "is using our OSS Netflix concurrency",
    "start": "413720",
    "end": "415560"
  },
  {
    "text": "limits library on the client side uh we",
    "start": "415560",
    "end": "418400"
  },
  {
    "text": "primarily run fix cmets uh and this is",
    "start": "418400",
    "end": "420720"
  },
  {
    "text": "serving primarily as a latency based",
    "start": "420720",
    "end": "423440"
  },
  {
    "text": "circuit breaker if your Downstream",
    "start": "423440",
    "end": "424960"
  },
  {
    "text": "server goes latent uh your concurrency",
    "start": "424960",
    "end": "427160"
  },
  {
    "text": "is going into Spike uh and we can start",
    "start": "427160",
    "end": "428919"
  },
  {
    "text": "short circuiting all those calls it also",
    "start": "428919",
    "end": "430919"
  },
  {
    "text": "helps protect us uh from Engineers who",
    "start": "430919",
    "end": "433520"
  },
  {
    "text": "might inadvertently spend off a few",
    "start": "433520",
    "end": "435479"
  },
  {
    "text": "th000 uh async requests uh without any",
    "start": "435479",
    "end": "438319"
  },
  {
    "text": "other fing on it the concurrence L is",
    "start": "438319",
    "end": "440240"
  },
  {
    "text": "going to throttle that really quickly uh",
    "start": "440240",
    "end": "442440"
  },
  {
    "text": "and help us uh control that traffic on",
    "start": "442440",
    "end": "445000"
  },
  {
    "text": "the server side uh we run concurrence",
    "start": "445000",
    "end": "446879"
  },
  {
    "text": "members to help protect us from uh th in",
    "start": "446879",
    "end": "449039"
  },
  {
    "text": "Cur the clients uh and ensure that we",
    "start": "449039",
    "end": "450800"
  },
  {
    "text": "keep a base level traffic flowing server",
    "start": "450800",
    "end": "453160"
  },
  {
    "text": "side we're using our gradient 2",
    "start": "453160",
    "end": "454919"
  },
  {
    "text": "algorithm uh and AMD uh for other",
    "start": "454919",
    "end": "458400"
  },
  {
    "text": "special cases uh these are both adaptive",
    "start": "458400",
    "end": "460400"
  },
  {
    "text": "limiters so they can learn uh the",
    "start": "460400",
    "end": "463039"
  },
  {
    "text": "maximum concurrency of the server within",
    "start": "463039",
    "end": "464680"
  },
  {
    "text": "a few",
    "start": "464680",
    "end": "466639"
  },
  {
    "text": "parameters uh we have deadlines",
    "start": "466639",
    "end": "468759"
  },
  {
    "text": "obviously OSS grpc has uh full deadline",
    "start": "468759",
    "end": "471400"
  },
  {
    "text": "support in the context um we've extended",
    "start": "471400",
    "end": "473960"
  },
  {
    "text": "this in a couple ways uh one this is",
    "start": "473960",
    "end": "476039"
  },
  {
    "text": "completely configurable uh on our",
    "start": "476039",
    "end": "477960"
  },
  {
    "text": "clients and servers uh so uh our",
    "start": "477960",
    "end": "481400"
  },
  {
    "text": "Engineers specify the default deadline",
    "start": "481400",
    "end": "483879"
  },
  {
    "text": "for an application for their service and",
    "start": "483879",
    "end": "486319"
  },
  {
    "text": "for their rpcn point we're going to take",
    "start": "486319",
    "end": "488199"
  },
  {
    "text": "the smallest deadline of those and we're",
    "start": "488199",
    "end": "489800"
  },
  {
    "text": "going to apply that the other thing",
    "start": "489800",
    "end": "491599"
  },
  {
    "text": "we've extended is we've actually uh",
    "start": "491599",
    "end": "493639"
  },
  {
    "text": "propagating deadlines through other IPC",
    "start": "493639",
    "end": "496039"
  },
  {
    "text": "Frameworks uh so a deadline can uh start",
    "start": "496039",
    "end": "499080"
  },
  {
    "text": "at a grpc server and then flow through",
    "start": "499080",
    "end": "501319"
  },
  {
    "text": "Netflix web client maybe we're going to",
    "start": "501319",
    "end": "502520"
  },
  {
    "text": "make a graphic call um and all that call",
    "start": "502520",
    "end": "505520"
  },
  {
    "text": "Will execute with that same",
    "start": "505520",
    "end": "507159"
  },
  {
    "text": "deadline we have hedging and retries uh",
    "start": "507159",
    "end": "509520"
  },
  {
    "text": "we've had them for quite a while so",
    "start": "509520",
    "end": "511080"
  },
  {
    "text": "we're not using the OSS implementations",
    "start": "511080",
    "end": "513120"
  },
  {
    "text": "uh we actually have implemented them uh",
    "start": "513120",
    "end": "515320"
  },
  {
    "text": "via Interceptor chain again this is",
    "start": "515320",
    "end": "517320"
  },
  {
    "text": "configurable per service and per RPC um",
    "start": "517320",
    "end": "520479"
  },
  {
    "text": "good examples of when you might want to",
    "start": "520479",
    "end": "521800"
  },
  {
    "text": "use retries and not hedging or hedging",
    "start": "521800",
    "end": "523599"
  },
  {
    "text": "and not retries is uh if you're running",
    "start": "523599",
    "end": "525760"
  },
  {
    "text": "bat traffic or not uh hedging is really",
    "start": "525760",
    "end": "527760"
  },
  {
    "text": "good if you need to ensure particular",
    "start": "527760",
    "end": "529600"
  },
  {
    "text": "call latency bat traffic isn't going to",
    "start": "529600",
    "end": "531720"
  },
  {
    "text": "need",
    "start": "531720",
    "end": "532720"
  },
  {
    "text": "it if everything's failed and we",
    "start": "532720",
    "end": "535320"
  },
  {
    "text": "actually get a failure back on the wire",
    "start": "535320",
    "end": "537000"
  },
  {
    "text": "uh we support fallbacks uh and really",
    "start": "537000",
    "end": "538959"
  },
  {
    "text": "easy easy way our service owners ship uh",
    "start": "538959",
    "end": "542399"
  },
  {
    "text": "default stackle configured responses",
    "start": "542399",
    "end": "544399"
  },
  {
    "text": "actually right in the protos speec uh",
    "start": "544399",
    "end": "546680"
  },
  {
    "text": "and then we can uh construct those and",
    "start": "546680",
    "end": "548680"
  },
  {
    "text": "the client and return it to the API or",
    "start": "548680",
    "end": "550640"
  },
  {
    "text": "to the application it's often easier for",
    "start": "550640",
    "end": "552760"
  },
  {
    "text": "applications to uh receive a fully",
    "start": "552760",
    "end": "556000"
  },
  {
    "text": "formed answer that is a degraded",
    "start": "556000",
    "end": "558040"
  },
  {
    "text": "experience than is for them to be uh",
    "start": "558040",
    "end": "559800"
  },
  {
    "text": "directly handling the",
    "start": "559800",
    "end": "561079"
  },
  {
    "text": "errors uh sometimes that St response",
    "start": "561079",
    "end": "563440"
  },
  {
    "text": "isn't sufficient uh so we also support",
    "start": "563440",
    "end": "565240"
  },
  {
    "text": "Dynamic fallbacks our Engineers can just",
    "start": "565240",
    "end": "567760"
  },
  {
    "text": "Implement an interface and we'll load",
    "start": "567760",
    "end": "569880"
  },
  {
    "text": "that in through the application",
    "start": "569880",
    "end": "570800"
  },
  {
    "text": "framework wired up return it through the",
    "start": "570800",
    "end": "574240"
  },
  {
    "text": "stubs with all these failures uh we're",
    "start": "574240",
    "end": "577360"
  },
  {
    "text": "pretty good at uh handling outages and",
    "start": "577360",
    "end": "579959"
  },
  {
    "text": "maybe bumps um however we did learn that",
    "start": "579959",
    "end": "583360"
  },
  {
    "text": "we can't wait for an outage to occur uh",
    "start": "583360",
    "end": "585440"
  },
  {
    "text": "to see how the system is going to",
    "start": "585440",
    "end": "586640"
  },
  {
    "text": "perform uh so what we do is we perform",
    "start": "586640",
    "end": "588760"
  },
  {
    "text": "what we call failure injection testing",
    "start": "588760",
    "end": "590839"
  },
  {
    "text": "uh we can actually uh annotate an RPC to",
    "start": "590839",
    "end": "594040"
  },
  {
    "text": "cause failures at any point in the C",
    "start": "594040",
    "end": "595720"
  },
  {
    "text": "chain uh so we can inject latency or",
    "start": "595720",
    "end": "598240"
  },
  {
    "text": "failed responses",
    "start": "598240",
    "end": "599920"
  },
  {
    "text": "and if you want to learn more about this",
    "start": "599920",
    "end": "601360"
  },
  {
    "text": "I recommend the AWS reinvent talk",
    "start": "601360",
    "end": "604440"
  },
  {
    "text": "building confidence through chaos",
    "start": "604440",
    "end": "605680"
  },
  {
    "text": "engineering on",
    "start": "605680",
    "end": "608640"
  },
  {
    "start": "608000",
    "end": "791000"
  },
  {
    "text": "AWS observability I was really excited",
    "start": "608760",
    "end": "611160"
  },
  {
    "text": "to see uh that talk about observability",
    "start": "611160",
    "end": "613680"
  },
  {
    "text": "during this morning's Keynotes we're",
    "start": "613680",
    "end": "615240"
  },
  {
    "text": "doing a lot of the same stuff uh we",
    "start": "615240",
    "end": "617360"
  },
  {
    "text": "track metrics for every call from both",
    "start": "617360",
    "end": "618959"
  },
  {
    "text": "the client and the server this gives us",
    "start": "618959",
    "end": "620440"
  },
  {
    "text": "really important visibility on how calls",
    "start": "620440",
    "end": "621920"
  },
  {
    "text": "are impacted and how they might be",
    "start": "621920",
    "end": "623480"
  },
  {
    "text": "experienced differently on different",
    "start": "623480",
    "end": "624880"
  },
  {
    "text": "sides of the network uh at OSS level uh",
    "start": "624880",
    "end": "628200"
  },
  {
    "text": "we're using our spectator API uh and the",
    "start": "628200",
    "end": "631480"
  },
  {
    "text": "specification in there for what we call",
    "start": "631480",
    "end": "632920"
  },
  {
    "text": "our common IPC metrics so we're tracking",
    "start": "632920",
    "end": "635000"
  },
  {
    "text": "per attempt call latency in Flight",
    "start": "635000",
    "end": "636800"
  },
  {
    "text": "counters and message sizes both incoming",
    "start": "636800",
    "end": "638639"
  },
  {
    "text": "and outgoing our OSS concurrency limits",
    "start": "638639",
    "end": "641600"
  },
  {
    "text": "also have uh metrics this helps us",
    "start": "641600",
    "end": "644279"
  },
  {
    "text": "understand when the concurrency limiters",
    "start": "644279",
    "end": "645440"
  },
  {
    "text": "are engaged and more importantly uh what",
    "start": "645440",
    "end": "647880"
  },
  {
    "text": "the state is for our adaptive limiters",
    "start": "647880",
    "end": "649839"
  },
  {
    "text": "this helps us understand why we learned",
    "start": "649839",
    "end": "651560"
  },
  {
    "text": "a particular",
    "start": "651560",
    "end": "652680"
  },
  {
    "text": "limit uh not an OSS but also helpful to",
    "start": "652680",
    "end": "655440"
  },
  {
    "text": "us uh we're tracking deadlines uh",
    "start": "655440",
    "end": "657639"
  },
  {
    "text": "remaining for incoming and outgoing col",
    "start": "657639",
    "end": "659440"
  },
  {
    "text": "this helps us understand if a call",
    "start": "659440",
    "end": "661560"
  },
  {
    "text": "arrived on the box and maybe there",
    "start": "661560",
    "end": "663279"
  },
  {
    "text": "wasn't enough time to answer it we also",
    "start": "663279",
    "end": "665560"
  },
  {
    "text": "do analysis on this so we can identify",
    "start": "665560",
    "end": "667800"
  },
  {
    "text": "if a service is running with any",
    "start": "667800",
    "end": "669240"
  },
  {
    "text": "appropriate",
    "start": "669240",
    "end": "670920"
  },
  {
    "text": "deadlines um with all these retries we",
    "start": "670920",
    "end": "673639"
  },
  {
    "text": "track uh what we call top level call",
    "start": "673639",
    "end": "675360"
  },
  {
    "text": "metrics these are more API oriented than",
    "start": "675360",
    "end": "677560"
  },
  {
    "text": "rpcc oriented uh so we're actually",
    "start": "677560",
    "end": "679560"
  },
  {
    "text": "tracking at the stub level how the",
    "start": "679560",
    "end": "681440"
  },
  {
    "text": "application is experiencing uh the uh",
    "start": "681440",
    "end": "684639"
  },
  {
    "text": "rpcs finally uh We've instrumented our",
    "start": "684639",
    "end": "687480"
  },
  {
    "text": "load balancers and name resolvers to",
    "start": "687480",
    "end": "689160"
  },
  {
    "text": "give us more information on subchannel",
    "start": "689160",
    "end": "690760"
  },
  {
    "text": "States uh this is pretty handy when a uh",
    "start": "690760",
    "end": "693959"
  },
  {
    "text": "lot of connections start failing we can",
    "start": "693959",
    "end": "695360"
  },
  {
    "text": "actually check to see did we have a",
    "start": "695360",
    "end": "697200"
  },
  {
    "text": "spake and subchannel failures without",
    "start": "697200",
    "end": "698920"
  },
  {
    "text": "needing to actually log onto the box and",
    "start": "698920",
    "end": "700480"
  },
  {
    "text": "see anything so again all this is",
    "start": "700480",
    "end": "702800"
  },
  {
    "text": "integrated with our OSS spectator",
    "start": "702800",
    "end": "705000"
  },
  {
    "text": "library and using Atlas for our metrix",
    "start": "705000",
    "end": "707600"
  },
  {
    "text": "database tracing is all OSS uh was",
    "start": "707600",
    "end": "710399"
  },
  {
    "text": "previously internal uh We've since",
    "start": "710399",
    "end": "712000"
  },
  {
    "text": "migrated to openzip can and brave um",
    "start": "712000",
    "end": "714800"
  },
  {
    "text": "tracing is expensive uh so we sample out",
    "start": "714800",
    "end": "716800"
  },
  {
    "text": "the edge but we do get this nice",
    "start": "716800",
    "end": "718360"
  },
  {
    "text": "distributed Trac tring uh graphs if you",
    "start": "718360",
    "end": "722160"
  },
  {
    "text": "want to learn more about tracing uh",
    "start": "722160",
    "end": "723760"
  },
  {
    "text": "there's the talk Ed or the tech blog",
    "start": "723760",
    "end": "726160"
  },
  {
    "text": "post Edgar solving Mysteries faster",
    "start": "726160",
    "end": "727920"
  },
  {
    "text": "desability again I'll share a link with",
    "start": "727920",
    "end": "729800"
  },
  {
    "text": "that at the end of the",
    "start": "729800",
    "end": "731600"
  },
  {
    "text": "presentation our logging implementation",
    "start": "731600",
    "end": "733720"
  },
  {
    "text": "is pretty straightforward uh as far as",
    "start": "733720",
    "end": "736160"
  },
  {
    "text": "uh we uh emit logs on uh what access",
    "start": "736160",
    "end": "739560"
  },
  {
    "text": "logs so you can you know get aache style",
    "start": "739560",
    "end": "742079"
  },
  {
    "text": "log for latency and results um that's",
    "start": "742079",
    "end": "745160"
  },
  {
    "text": "you know we don't want to do that on",
    "start": "745160",
    "end": "746560"
  },
  {
    "text": "every single RPC for higher RPS services",
    "start": "746560",
    "end": "749199"
  },
  {
    "text": "uh but that is available uh we also have",
    "start": "749199",
    "end": "751440"
  },
  {
    "text": "ND MDC integration uh so when you're",
    "start": "751440",
    "end": "753920"
  },
  {
    "text": "getting logs in your uh loging framework",
    "start": "753920",
    "end": "756320"
  },
  {
    "text": "uh we can actually tell you what RPC was",
    "start": "756320",
    "end": "758079"
  },
  {
    "text": "being called which generated every log",
    "start": "758079",
    "end": "759959"
  },
  {
    "text": "message the more interesting part is we",
    "start": "759959",
    "end": "762360"
  },
  {
    "text": "have uh some automated error analysis uh",
    "start": "762360",
    "end": "764560"
  },
  {
    "text": "so you can enable this when you're",
    "start": "764560",
    "end": "766120"
  },
  {
    "text": "getting uh errors back across the wire",
    "start": "766120",
    "end": "769079"
  },
  {
    "text": "uh one you really handle you one is you",
    "start": "769079",
    "end": "770880"
  },
  {
    "text": "get a deadline exceeded uh so you are",
    "start": "770880",
    "end": "773000"
  },
  {
    "text": "internal Watchdog timer's gone off uh",
    "start": "773000",
    "end": "774839"
  },
  {
    "text": "we're going to gather some additional",
    "start": "774839",
    "end": "776000"
  },
  {
    "text": "information and we're going to uh",
    "start": "776000",
    "end": "778279"
  },
  {
    "text": "annotate the failure with this so we can",
    "start": "778279",
    "end": "781399"
  },
  {
    "text": "understand where did that deadline come",
    "start": "781399",
    "end": "782680"
  },
  {
    "text": "from was there actually enough time to",
    "start": "782680",
    "end": "784040"
  },
  {
    "text": "service the call we have several of",
    "start": "784040",
    "end": "785800"
  },
  {
    "text": "these failure rule sets uh it just helps",
    "start": "785800",
    "end": "787440"
  },
  {
    "text": "our Engineers quickly understand uh",
    "start": "787440",
    "end": "789440"
  },
  {
    "text": "what's going on within the",
    "start": "789440",
    "end": "792000"
  },
  {
    "start": "791000",
    "end": "853000"
  },
  {
    "text": "system we bu a large number of other",
    "start": "792000",
    "end": "794959"
  },
  {
    "text": "common activities into what we call",
    "start": "794959",
    "end": "796320"
  },
  {
    "text": "ergonomics um anything that's done",
    "start": "796320",
    "end": "798839"
  },
  {
    "text": "frequently for an RPC we want to bring",
    "start": "798839",
    "end": "800760"
  },
  {
    "text": "that into the framework to make it easy",
    "start": "800760",
    "end": "802800"
  },
  {
    "text": "caching our number one ergonomic feature",
    "start": "802800",
    "end": "804800"
  },
  {
    "text": "over half our production calls are",
    "start": "804800",
    "end": "806160"
  },
  {
    "text": "served from a cache owned by our RPC",
    "start": "806160",
    "end": "808160"
  },
  {
    "text": "framework",
    "start": "808160",
    "end": "809279"
  },
  {
    "text": "cach configuration so cach ability Keys",
    "start": "809279",
    "end": "812040"
  },
  {
    "text": "eviction rules are all stored in proto",
    "start": "812040",
    "end": "813760"
  },
  {
    "text": "options uh Advanced needs are covered by",
    "start": "813760",
    "end": "816120"
  },
  {
    "text": "allowing clients to inject custom code",
    "start": "816120",
    "end": "818120"
  },
  {
    "text": "so they could maybe programmatically",
    "start": "818120",
    "end": "819920"
  },
  {
    "text": "determine if the call should be cached",
    "start": "819920",
    "end": "821199"
  },
  {
    "text": "or not on the server side cach calls are",
    "start": "821199",
    "end": "823560"
  },
  {
    "text": "intercepted and never reach the server",
    "start": "823560",
    "end": "825160"
  },
  {
    "text": "Subs on the client side the calls never",
    "start": "825160",
    "end": "827600"
  },
  {
    "text": "reach the network we support distributed",
    "start": "827600",
    "end": "829880"
  },
  {
    "text": "caching through our OSS EV cache uh we",
    "start": "829880",
    "end": "832480"
  },
  {
    "text": "also have on Heap and off Heap caching",
    "start": "832480",
    "end": "834800"
  },
  {
    "text": "uh for staying on box and kind of neat",
    "start": "834800",
    "end": "836920"
  },
  {
    "text": "one is we have a cache that runs RS per",
    "start": "836920",
    "end": "839199"
  },
  {
    "text": "incoming RPC uh so if a engineer is",
    "start": "839199",
    "end": "842240"
  },
  {
    "text": "written maybe a naive data fetcher uh",
    "start": "842240",
    "end": "844519"
  },
  {
    "text": "and it's uh repeatedly making the same",
    "start": "844519",
    "end": "846720"
  },
  {
    "text": "call you know maybe Fanning out traffic",
    "start": "846720",
    "end": "848639"
  },
  {
    "text": "uh we can actually catch that call and",
    "start": "848639",
    "end": "850199"
  },
  {
    "text": "return from the cache instead of hitting",
    "start": "850199",
    "end": "851440"
  },
  {
    "text": "the wire multiple",
    "start": "851440",
    "end": "853920"
  },
  {
    "start": "853000",
    "end": "924000"
  },
  {
    "text": "times from an application framework",
    "start": "853920",
    "end": "856079"
  },
  {
    "text": "level uh we've got quite a few",
    "start": "856079",
    "end": "858079"
  },
  {
    "text": "Integrations as I mentioned almost",
    "start": "858079",
    "end": "859880"
  },
  {
    "text": "everything we manage in the JPC",
    "start": "859880",
    "end": "861040"
  },
  {
    "text": "framework we allow our Engineers to",
    "start": "861040",
    "end": "862759"
  },
  {
    "text": "extend um something I want to show off",
    "start": "862759",
    "end": "864839"
  },
  {
    "text": "here this is a smoke test this is an",
    "start": "864839",
    "end": "866600"
  },
  {
    "text": "online test for making sure that the",
    "start": "866600",
    "end": "867839"
  },
  {
    "text": "client you're shipping is actually able",
    "start": "867839",
    "end": "869399"
  },
  {
    "text": "to talk to the server you're also",
    "start": "869399",
    "end": "870720"
  },
  {
    "text": "shipping uh and it demonstrates how our",
    "start": "870720",
    "end": "873399"
  },
  {
    "text": "uh Engineers actually bring in stubs uh",
    "start": "873399",
    "end": "875560"
  },
  {
    "text": "they don't need to call the manage",
    "start": "875560",
    "end": "876560"
  },
  {
    "text": "Channel Builder they don't need to uh",
    "start": "876560",
    "end": "878560"
  },
  {
    "text": "add all these interceptors they don't",
    "start": "878560",
    "end": "879959"
  },
  {
    "text": "need to set up all these features all",
    "start": "879959",
    "end": "881639"
  },
  {
    "text": "they need to do is just annotate their",
    "start": "881639",
    "end": "883480"
  },
  {
    "text": "stub uh and we'll wire it in for them",
    "start": "883480",
    "end": "886079"
  },
  {
    "text": "because our uh clients ship all the",
    "start": "886079",
    "end": "888440"
  },
  {
    "text": "configuration they need to run our",
    "start": "888440",
    "end": "890199"
  },
  {
    "text": "customers rarely need to actually",
    "start": "890199",
    "end": "892079"
  },
  {
    "text": "override anything so they just need",
    "start": "892079",
    "end": "893800"
  },
  {
    "text": "these two lines and then they're going",
    "start": "893800",
    "end": "895000"
  },
  {
    "text": "to get the fully featured",
    "start": "895000",
    "end": "897000"
  },
  {
    "text": "client again these are plain GPC STS",
    "start": "897000",
    "end": "899800"
  },
  {
    "text": "that's intentional uh because if you",
    "start": "899800",
    "end": "901480"
  },
  {
    "text": "want a different uh API maybe if you're",
    "start": "901480",
    "end": "904240"
  },
  {
    "text": "going to abtract the RPC layer just",
    "start": "904240",
    "end": "906079"
  },
  {
    "text": "inject the St into the other API client",
    "start": "906079",
    "end": "908160"
  },
  {
    "text": "and you provide this better",
    "start": "908160",
    "end": "909560"
  },
  {
    "text": "experience the other uh application",
    "start": "909560",
    "end": "911800"
  },
  {
    "text": "framework integration we provide is",
    "start": "911800",
    "end": "913959"
  },
  {
    "text": "we've added spring admin actuators that",
    "start": "913959",
    "end": "915680"
  },
  {
    "text": "give us a live view of that GC framework",
    "start": "915680",
    "end": "917680"
  },
  {
    "text": "on every instance uh this helps us",
    "start": "917680",
    "end": "919480"
  },
  {
    "text": "identify misconfigured components or uh",
    "start": "919480",
    "end": "922199"
  },
  {
    "text": "particular bad",
    "start": "922199",
    "end": "923560"
  },
  {
    "text": "node there's way too many other",
    "start": "923560",
    "end": "925920"
  },
  {
    "text": "ergonomic features to go into any detail",
    "start": "925920",
    "end": "928120"
  },
  {
    "text": "we take jarta validators and map them",
    "start": "928120",
    "end": "930120"
  },
  {
    "text": "over to bad request trailers we catch",
    "start": "930120",
    "end": "932000"
  },
  {
    "text": "exceptions thrown from the server and",
    "start": "932000",
    "end": "933279"
  },
  {
    "text": "map them to detailed status codes",
    "start": "933279",
    "end": "934639"
  },
  {
    "text": "instead of just getting an",
    "start": "934639",
    "end": "936120"
  },
  {
    "text": "internal we provide batching uh at the",
    "start": "936120",
    "end": "938880"
  },
  {
    "text": "client layer we expose all the nety",
    "start": "938880",
    "end": "941079"
  },
  {
    "text": "client and server tunables as a dynamic",
    "start": "941079",
    "end": "942839"
  },
  {
    "text": "configuration again we can change your",
    "start": "942839",
    "end": "944680"
  },
  {
    "text": "your max allowed header size without",
    "start": "944680",
    "end": "946319"
  },
  {
    "text": "impacting call flows um and we support",
    "start": "946319",
    "end": "948440"
  },
  {
    "text": "the JPC Json transcoder uh from Envoy",
    "start": "948440",
    "end": "950920"
  },
  {
    "text": "for clients who lack JPC",
    "start": "950920",
    "end": "953240"
  },
  {
    "text": "support so with all this done what's",
    "start": "953240",
    "end": "956639"
  },
  {
    "start": "956000",
    "end": "997000"
  },
  {
    "text": "next first uh we're going to work on",
    "start": "956639",
    "end": "959079"
  },
  {
    "text": "service mesh uh all of this has been",
    "start": "959079",
    "end": "960920"
  },
  {
    "text": "implemented in Java but I mentioned that",
    "start": "960920",
    "end": "962560"
  },
  {
    "text": "we also have clients using Python and",
    "start": "962560",
    "end": "964880"
  },
  {
    "text": "OJs uh so we're we're looking to do is",
    "start": "964880",
    "end": "967120"
  },
  {
    "text": "we're going to shift many of these",
    "start": "967120",
    "end": "968160"
  },
  {
    "text": "features into a cyare proxy to uh reduce",
    "start": "968160",
    "end": "971480"
  },
  {
    "text": "duplication and improve our polygod",
    "start": "971480",
    "end": "972959"
  },
  {
    "text": "experience uh we don't have enough",
    "start": "972959",
    "end": "974680"
  },
  {
    "text": "language platform teams to CH pave every",
    "start": "974680",
    "end": "976680"
  },
  {
    "text": "single language that our Engineers want",
    "start": "976680",
    "end": "978120"
  },
  {
    "text": "to use and we want to enable them to",
    "start": "978120",
    "end": "980120"
  },
  {
    "text": "have uh you know resilient",
    "start": "980120",
    "end": "982480"
  },
  {
    "text": "rpcs we're also looking to invest",
    "start": "982480",
    "end": "984360"
  },
  {
    "text": "further in API and schema management",
    "start": "984360",
    "end": "986160"
  },
  {
    "text": "we've gained a lot of experience",
    "start": "986160",
    "end": "987319"
  },
  {
    "text": "recently uh with graph Federation and we",
    "start": "987319",
    "end": "989360"
  },
  {
    "text": "want to bring all these ones back to the",
    "start": "989360",
    "end": "990759"
  },
  {
    "text": "RPC space so that's how Netflix makes",
    "start": "990759",
    "end": "994079"
  },
  {
    "text": "grpc easy to serve consumer and",
    "start": "994079",
    "end": "996800"
  },
  {
    "text": "operate and I'll put this slide up uh",
    "start": "996800",
    "end": "999120"
  },
  {
    "start": "997000",
    "end": "1086000"
  },
  {
    "text": "these are the talks I mentioned uh and I",
    "start": "999120",
    "end": "1002040"
  },
  {
    "text": "will hold for questions until people",
    "start": "1002040",
    "end": "1003480"
  },
  {
    "text": "want to go for",
    "start": "1003480",
    "end": "1005959"
  },
  {
    "text": "lunch",
    "start": "1017480",
    "end": "1019720"
  },
  {
    "text": "hey uh thanks for your talk an from dat",
    "start": "1019720",
    "end": "1022040"
  },
  {
    "text": "data dog here I'm actually that's a lot",
    "start": "1022040",
    "end": "1024918"
  },
  {
    "text": "of features like how how big is the team",
    "start": "1024919",
    "end": "1028280"
  },
  {
    "text": "that maintains all of that can you give",
    "start": "1028280",
    "end": "1030640"
  },
  {
    "text": "us an idea of how much effort went into",
    "start": "1030640",
    "end": "1032959"
  },
  {
    "text": "developing all these things yeah so the",
    "start": "1032959",
    "end": "1035880"
  },
  {
    "text": "Java uh IPC team um is currently three",
    "start": "1035880",
    "end": "1039959"
  },
  {
    "text": "Engineers uh and I'll just say this with",
    "start": "1039959",
    "end": "1042000"
  },
  {
    "text": "the we and two open",
    "start": "1042000",
    "end": "1045199"
  },
  {
    "text": "headcut and where does the head need to",
    "start": "1047000",
    "end": "1049240"
  },
  {
    "text": "be located want to",
    "start": "1049240",
    "end": "1051360"
  },
  {
    "text": "ask uh I would recommend checking our",
    "start": "1051360",
    "end": "1053799"
  },
  {
    "text": "job site uh for but are they local",
    "start": "1053799",
    "end": "1056480"
  },
  {
    "text": "Engineers or do you also hire remote",
    "start": "1056480",
    "end": "1058240"
  },
  {
    "text": "Engineers so I am not local to the",
    "start": "1058240",
    "end": "1060720"
  },
  {
    "text": "barria I flew in Michigan uh another one",
    "start": "1060720",
    "end": "1062760"
  },
  {
    "text": "of my team members is uh in Arizona we",
    "start": "1062760",
    "end": "1065360"
  },
  {
    "text": "do have uh one engineer here uh there in",
    "start": "1065360",
    "end": "1068480"
  },
  {
    "text": "the Las Cato's office uh as far as",
    "start": "1068480",
    "end": "1070720"
  },
  {
    "text": "hiring remotely for the open head count",
    "start": "1070720",
    "end": "1072520"
  },
  {
    "text": "I recommend checking the posting on the",
    "start": "1072520",
    "end": "1074000"
  },
  {
    "text": "job",
    "start": "1074000",
    "end": "1076240"
  },
  {
    "text": "site",
    "start": "1077400",
    "end": "1080120"
  },
  {
    "text": "in one of your slides you talked about",
    "start": "1080120",
    "end": "1081799"
  },
  {
    "text": "batching but I didn't really understand",
    "start": "1081799",
    "end": "1084960"
  },
  {
    "text": "what you do",
    "start": "1084960",
    "end": "1086120"
  },
  {
    "start": "1086000",
    "end": "1212000"
  },
  {
    "text": "and yeah um so uh some clients because",
    "start": "1086120",
    "end": "1090760"
  },
  {
    "text": "they've got so many rpcs uh what we do",
    "start": "1090760",
    "end": "1093640"
  },
  {
    "text": "is uh they might be iterating over a",
    "start": "1093640",
    "end": "1096000"
  },
  {
    "text": "list making multiple calls to a stub um",
    "start": "1096000",
    "end": "1098320"
  },
  {
    "text": "and we will actually capture the calls",
    "start": "1098320",
    "end": "1099960"
  },
  {
    "text": "to the stub and then we will build a",
    "start": "1099960",
    "end": "1102039"
  },
  {
    "text": "batch request out of it so we'll",
    "start": "1102039",
    "end": "1103240"
  },
  {
    "text": "actually translate uh to a different RPC",
    "start": "1103240",
    "end": "1105280"
  },
  {
    "text": "call that allows um multiple um fetches",
    "start": "1105280",
    "end": "1108760"
  },
  {
    "text": "uh and then we'll send that off and then",
    "start": "1108760",
    "end": "1109799"
  },
  {
    "text": "we'll break it back into multiple",
    "start": "1109799",
    "end": "1111600"
  },
  {
    "text": "responses at the sub layer oh that",
    "start": "1111600",
    "end": "1113240"
  },
  {
    "text": "happens transparently so the developer",
    "start": "1113240",
    "end": "1115000"
  },
  {
    "text": "doesn't even know about this it takes",
    "start": "1115000",
    "end": "1117760"
  },
  {
    "text": "some configuration from the uh client",
    "start": "1117760",
    "end": "1119919"
  },
  {
    "text": "because you have to uh write the logic",
    "start": "1119919",
    "end": "1122080"
  },
  {
    "text": "for how you should batch and translate",
    "start": "1122080",
    "end": "1123600"
  },
  {
    "text": "the requests um but once that is done it",
    "start": "1123600",
    "end": "1126320"
  },
  {
    "text": "gets shipped off to all of your all your",
    "start": "1126320",
    "end": "1128600"
  },
  {
    "text": "clients inside your uh jar uh and that",
    "start": "1128600",
    "end": "1130960"
  },
  {
    "text": "way the CL customers of the service",
    "start": "1130960",
    "end": "1132480"
  },
  {
    "text": "don't actually have to worry about it",
    "start": "1132480",
    "end": "1134840"
  },
  {
    "text": "wow I have one another question you also",
    "start": "1134840",
    "end": "1137480"
  },
  {
    "text": "talked about fallback so you can provide",
    "start": "1137480",
    "end": "1139679"
  },
  {
    "text": "a default answer if there was a",
    "start": "1139679",
    "end": "1141280"
  },
  {
    "text": "connection failure yes did I get it",
    "start": "1141280",
    "end": "1143120"
  },
  {
    "text": "right so in your Proto file you can",
    "start": "1143120",
    "end": "1144880"
  },
  {
    "text": "specify a default answer yes how do you",
    "start": "1144880",
    "end": "1148039"
  },
  {
    "text": "Plum it or how do you implement it it's",
    "start": "1148039",
    "end": "1150120"
  },
  {
    "text": "a Proto option um so we can read it off",
    "start": "1150120",
    "end": "1152720"
  },
  {
    "text": "the RPC um and then our code knows to go",
    "start": "1152720",
    "end": "1155640"
  },
  {
    "text": "take that Proto option uh we uh so the",
    "start": "1155640",
    "end": "1159039"
  },
  {
    "text": "engineers going put it in there as in",
    "start": "1159039",
    "end": "1160600"
  },
  {
    "text": "the Json format and then we will build",
    "start": "1160600",
    "end": "1162039"
  },
  {
    "text": "that back into the message construct it",
    "start": "1162039",
    "end": "1163720"
  },
  {
    "text": "and return it from the Cent stub uh they",
    "start": "1163720",
    "end": "1165840"
  },
  {
    "text": "can also uh inject code to do a a onbox",
    "start": "1165840",
    "end": "1169240"
  },
  {
    "text": "calculation of what response could be",
    "start": "1169240",
    "end": "1170480"
  },
  {
    "text": "for",
    "start": "1170480",
    "end": "1171840"
  },
  {
    "text": "fallback okay and you said in many cases",
    "start": "1171840",
    "end": "1174400"
  },
  {
    "text": "instead of getting an error getting the",
    "start": "1174400",
    "end": "1175840"
  },
  {
    "text": "default answer is a better option we",
    "start": "1175840",
    "end": "1178520"
  },
  {
    "text": "found this for some of our uh some of",
    "start": "1178520",
    "end": "1180559"
  },
  {
    "text": "our apis because this allows the calling",
    "start": "1180559",
    "end": "1183559"
  },
  {
    "text": "application to inter interact directly",
    "start": "1183559",
    "end": "1185320"
  },
  {
    "text": "with the stub um because they can assume",
    "start": "1185320",
    "end": "1187159"
  },
  {
    "text": "that they're going to get some new sort",
    "start": "1187159",
    "end": "1188520"
  },
  {
    "text": "of response back from the",
    "start": "1188520",
    "end": "1190960"
  },
  {
    "text": "stub so it avoids having to wrap all the",
    "start": "1190960",
    "end": "1193360"
  },
  {
    "text": "subs in TR catch to get the status",
    "start": "1193360",
    "end": "1194919"
  },
  {
    "text": "exceptions",
    "start": "1194919",
    "end": "1197240"
  },
  {
    "text": "okay",
    "start": "1197240",
    "end": "1200240"
  },
  {
    "text": "on the uh developer tooling slide uh one",
    "start": "1200679",
    "end": "1204400"
  },
  {
    "text": "of them you kind of had something side",
    "start": "1204400",
    "end": "1205880"
  },
  {
    "text": "by side on the left hand side there was",
    "start": "1205880",
    "end": "1207720"
  },
  {
    "text": "something that looked like",
    "start": "1207720",
    "end": "1209159"
  },
  {
    "text": "yaml what was that uh before",
    "start": "1209159",
    "end": "1212919"
  },
  {
    "start": "1212000",
    "end": "1351000"
  },
  {
    "text": "this oh yeah I think this one what are",
    "start": "1212919",
    "end": "1215280"
  },
  {
    "text": "we looking at on the left here so this",
    "start": "1215280",
    "end": "1217600"
  },
  {
    "text": "is the actual um example of",
    "start": "1217600",
    "end": "1219880"
  },
  {
    "text": "configuration that our client Shi so",
    "start": "1219880",
    "end": "1221960"
  },
  {
    "text": "when you write your grpc service uh you",
    "start": "1221960",
    "end": "1224679"
  },
  {
    "text": "can figure uh how your client should",
    "start": "1224679",
    "end": "1227320"
  },
  {
    "text": "operate with CML file and then that gets",
    "start": "1227320",
    "end": "1229919"
  },
  {
    "text": "rolled into your client jar that gets",
    "start": "1229919",
    "end": "1231600"
  },
  {
    "text": "distributed out to all the applications",
    "start": "1231600",
    "end": "1233919"
  },
  {
    "text": "so is that something Netflix specific or",
    "start": "1233919",
    "end": "1237120"
  },
  {
    "text": "yeah it's currently Netflix specific um",
    "start": "1237120",
    "end": "1239360"
  },
  {
    "text": "so what we do is uh we monitor this",
    "start": "1239360",
    "end": "1242640"
  },
  {
    "text": "configuration um this is statically",
    "start": "1242640",
    "end": "1244919"
  },
  {
    "text": "configured when you're putting in the",
    "start": "1244919",
    "end": "1246320"
  },
  {
    "text": "jar booat it's also wired into the",
    "start": "1246320",
    "end": "1247520"
  },
  {
    "text": "dynamic configuration system so we",
    "start": "1247520",
    "end": "1249280"
  },
  {
    "text": "monitor that configuration for changes",
    "start": "1249280",
    "end": "1251159"
  },
  {
    "text": "and then we rebuild any necessary",
    "start": "1251159",
    "end": "1252919"
  },
  {
    "text": "interceptors or channels uh to support",
    "start": "1252919",
    "end": "1255320"
  },
  {
    "text": "those changes okay followup question um",
    "start": "1255320",
    "end": "1258840"
  },
  {
    "text": "talk to us a little bit about like the",
    "start": "1258840",
    "end": "1260720"
  },
  {
    "text": "time dimension of all these things so",
    "start": "1260720",
    "end": "1263400"
  },
  {
    "text": "you have this you have what' you say",
    "start": "1263400",
    "end": "1265280"
  },
  {
    "text": "1500 services or something uh I assume",
    "start": "1265280",
    "end": "1268960"
  },
  {
    "text": "people don't get them right the first",
    "start": "1268960",
    "end": "1270320"
  },
  {
    "text": "time right like people need to change",
    "start": "1270320",
    "end": "1272400"
  },
  {
    "text": "stuff over time uh what's versioning",
    "start": "1272400",
    "end": "1275640"
  },
  {
    "text": "look like for you is is all this in one",
    "start": "1275640",
    "end": "1277960"
  },
  {
    "text": "repo and you're just like you know we",
    "start": "1277960",
    "end": "1280400"
  },
  {
    "text": "got to change everything every time we",
    "start": "1280400",
    "end": "1282159"
  },
  {
    "text": "change like a Proto buff or something H",
    "start": "1282159",
    "end": "1284880"
  },
  {
    "text": "how are you handling that do you do you",
    "start": "1284880",
    "end": "1286480"
  },
  {
    "text": "hold to like the we always make",
    "start": "1286480",
    "end": "1288320"
  },
  {
    "text": "backwards compatible changes there's a",
    "start": "1288320",
    "end": "1290679"
  },
  {
    "text": " ton of if statements in our code",
    "start": "1290679",
    "end": "1293159"
  },
  {
    "text": "about is this here is that here is that",
    "start": "1293159",
    "end": "1295360"
  },
  {
    "text": "here um yeah talk a little bit about the",
    "start": "1295360",
    "end": "1297919"
  },
  {
    "text": "time Dimension so on The Wire um the",
    "start": "1297919",
    "end": "1301320"
  },
  {
    "text": "Proto format is extremely compatible",
    "start": "1301320",
    "end": "1303480"
  },
  {
    "text": "forwards and backwards um and we use",
    "start": "1303480",
    "end": "1305279"
  },
  {
    "text": "protol loock to help our Engineers not",
    "start": "1305279",
    "end": "1307080"
  },
  {
    "text": "make braking changes on the wire from a",
    "start": "1307080",
    "end": "1308640"
  },
  {
    "text": "serialization standpoint what you call",
    "start": "1308640",
    "end": "1310279"
  },
  {
    "text": "it protol loock yeah we use protol loock",
    "start": "1310279",
    "end": "1312679"
  },
  {
    "text": "it's a grle plugin okay um well I think",
    "start": "1312679",
    "end": "1316480"
  },
  {
    "text": "it's it's a binary that's wi into great",
    "start": "1316480",
    "end": "1318880"
  },
  {
    "text": "Plum um but we use that to help our",
    "start": "1318880",
    "end": "1320640"
  },
  {
    "text": "Engineers avoid making breaking changes",
    "start": "1320640",
    "end": "1322000"
  },
  {
    "text": "on the wire as far as compatibility um",
    "start": "1322000",
    "end": "1325159"
  },
  {
    "text": "just within the RPC level so maybe uh",
    "start": "1325159",
    "end": "1327360"
  },
  {
    "text": "the behavior of RBC has changed uh this",
    "start": "1327360",
    "end": "1329799"
  },
  {
    "text": "is handled by our Canary tooling uh just",
    "start": "1329799",
    "end": "1332000"
  },
  {
    "text": "to help our Engineers for not breaking",
    "start": "1332000",
    "end": "1334039"
  },
  {
    "text": "anything we do gradual roll outs if",
    "start": "1334039",
    "end": "1335600"
  },
  {
    "text": "there's any spiking errors we'll",
    "start": "1335600",
    "end": "1336960"
  },
  {
    "text": "automatically roll them back so do you",
    "start": "1336960",
    "end": "1339559"
  },
  {
    "text": "have anything like a like a protoc",
    "start": "1339559",
    "end": "1341720"
  },
  {
    "text": "plugin that would say hey you're going",
    "start": "1341720",
    "end": "1344360"
  },
  {
    "text": "to change this and actually this is",
    "start": "1344360",
    "end": "1346120"
  },
  {
    "text": "going to break in production like we we",
    "start": "1346120",
    "end": "1348679"
  },
  {
    "text": "you know we can tell this service that",
    "start": "1348679",
    "end": "1350279"
  },
  {
    "text": "this version is deployed that's going to",
    "start": "1350279",
    "end": "1352559"
  },
  {
    "start": "1351000",
    "end": "1552000"
  },
  {
    "text": "break you can't roll that out or do you",
    "start": "1352559",
    "end": "1354480"
  },
  {
    "text": "do everything statically so that so",
    "start": "1354480",
    "end": "1358039"
  },
  {
    "text": "that's what protol loot gives us so if",
    "start": "1358039",
    "end": "1359440"
  },
  {
    "text": "you were to make a breaking change in",
    "start": "1359440",
    "end": "1360880"
  },
  {
    "text": "your Proto um then it's going to",
    "start": "1360880",
    "end": "1363159"
  },
  {
    "text": "generate eror for you at bu time",
    "start": "1363159",
    "end": "1365799"
  },
  {
    "text": "okay do you have all of this sitting in",
    "start": "1365799",
    "end": "1368200"
  },
  {
    "text": "like one repo or many repos we are not",
    "start": "1368200",
    "end": "1370760"
  },
  {
    "text": "using monor repos we have mostly every",
    "start": "1370760",
    "end": "1372960"
  },
  {
    "text": "application sits in its own repository",
    "start": "1372960",
    "end": "1374760"
  },
  {
    "text": "so your repository is going to have your",
    "start": "1374760",
    "end": "1376760"
  },
  {
    "text": "Proto definition your server",
    "start": "1376760",
    "end": "1379039"
  },
  {
    "text": "implementation uh and then the modules",
    "start": "1379039",
    "end": "1381039"
  },
  {
    "text": "for your uh uh client and stubs and",
    "start": "1381039",
    "end": "1383760"
  },
  {
    "text": "those are just generated off of the",
    "start": "1383760",
    "end": "1385559"
  },
  {
    "text": "protos okay thank",
    "start": "1385559",
    "end": "1389039"
  },
  {
    "text": "you um hey I had a quick question",
    "start": "1390440",
    "end": "1395399"
  },
  {
    "text": "um hey Zach your mic stopped working",
    "start": "1397640",
    "end": "1401279"
  },
  {
    "text": "good you do",
    "start": "1401279",
    "end": "1403640"
  },
  {
    "text": "press um so you have a pretty rich",
    "start": "1403640",
    "end": "1406120"
  },
  {
    "text": "feature set here um I'm just wondering",
    "start": "1406120",
    "end": "1408039"
  },
  {
    "text": "technically how does this all Plum into",
    "start": "1408039",
    "end": "1409760"
  },
  {
    "text": "the grpc system um is it a wrapper is it",
    "start": "1409760",
    "end": "1412880"
  },
  {
    "text": "a component within the system um like",
    "start": "1412880",
    "end": "1415039"
  },
  {
    "text": "high from a high level how do you plum",
    "start": "1415039",
    "end": "1416520"
  },
  {
    "text": "in a lot of these features yeah so um a",
    "start": "1416520",
    "end": "1420400"
  },
  {
    "text": "lot of these are implemented as either",
    "start": "1420400",
    "end": "1422240"
  },
  {
    "text": "interceptors or modifications to the",
    "start": "1422240",
    "end": "1423960"
  },
  {
    "text": "channel Builder um what we have is we",
    "start": "1423960",
    "end": "1427400"
  },
  {
    "text": "have a what we call a channel feature or",
    "start": "1427400",
    "end": "1429520"
  },
  {
    "text": "a service feature um and that's how we",
    "start": "1429520",
    "end": "1431919"
  },
  {
    "text": "control ordering of all these components",
    "start": "1431919",
    "end": "1434000"
  },
  {
    "text": "so at application startup we'll discover",
    "start": "1434000",
    "end": "1436000"
  },
  {
    "text": "all the channel features and service",
    "start": "1436000",
    "end": "1437559"
  },
  {
    "text": "features",
    "start": "1437559",
    "end": "1438600"
  },
  {
    "text": "uh that are on the class path and then",
    "start": "1438600",
    "end": "1440679"
  },
  {
    "text": "we will use a visitor pattern to",
    "start": "1440679",
    "end": "1442039"
  },
  {
    "text": "basically build up what the",
    "start": "1442039",
    "end": "1443000"
  },
  {
    "text": "comprehensive state of your uh pineer",
    "start": "1443000",
    "end": "1445600"
  },
  {
    "text": "server will look like so it's going to",
    "start": "1445600",
    "end": "1446799"
  },
  {
    "text": "be a stack of interceptors and then",
    "start": "1446799",
    "end": "1448360"
  },
  {
    "text": "either a nety Channel or nety server",
    "start": "1448360",
    "end": "1450120"
  },
  {
    "text": "underneath it um all that's uh wired in",
    "start": "1450120",
    "end": "1452799"
  },
  {
    "text": "through our application Frameworks uh so",
    "start": "1452799",
    "end": "1454760"
  },
  {
    "text": "we've got juice adapters for our Legacy",
    "start": "1454760",
    "end": "1457400"
  },
  {
    "text": "framework uh and then our new Frameworks",
    "start": "1457400",
    "end": "1459240"
  },
  {
    "text": "are all using spring",
    "start": "1459240",
    "end": "1462120"
  },
  {
    "text": "boot",
    "start": "1462159",
    "end": "1463880"
  },
  {
    "text": "cover yeah we have a question over here",
    "start": "1463880",
    "end": "1467679"
  },
  {
    "text": "uh I have couple of questions and I'm",
    "start": "1467679",
    "end": "1470360"
  },
  {
    "text": "seeing a lot of new terms here it's",
    "start": "1470360",
    "end": "1473039"
  },
  {
    "text": "really new terms like hedging fall back",
    "start": "1473039",
    "end": "1476039"
  },
  {
    "text": "um failure injection testing can you",
    "start": "1476039",
    "end": "1478240"
  },
  {
    "text": "talk about this failure injection",
    "start": "1478240",
    "end": "1479640"
  },
  {
    "text": "testing is it on the live environment or",
    "start": "1479640",
    "end": "1482360"
  },
  {
    "text": "is it something yes uh like like it",
    "start": "1482360",
    "end": "1485559"
  },
  {
    "text": "happens something and it's uh we",
    "start": "1485559",
    "end": "1487720"
  },
  {
    "text": "retrying it in the production",
    "start": "1487720",
    "end": "1489200"
  },
  {
    "text": "environment yes uh we are um",
    "start": "1489200",
    "end": "1493520"
  },
  {
    "text": "very we do a lot of testing in PR um so",
    "start": "1493520",
    "end": "1497640"
  },
  {
    "text": "uh if you're going to go and you're G to",
    "start": "1497640",
    "end": "1499240"
  },
  {
    "text": "watch maybe one piece um it's possible",
    "start": "1499240",
    "end": "1502840"
  },
  {
    "text": "that your request will get for",
    "start": "1502840",
    "end": "1504440"
  },
  {
    "text": "being part of a failure injection test",
    "start": "1504440",
    "end": "1506520"
  },
  {
    "text": "um and we will annotate your request",
    "start": "1506520",
    "end": "1508279"
  },
  {
    "text": "that says uh this service needs to fail",
    "start": "1508279",
    "end": "1510360"
  },
  {
    "text": "on the call chain um and then we can",
    "start": "1510360",
    "end": "1512960"
  },
  {
    "text": "then monitor if you actually",
    "start": "1512960",
    "end": "1514440"
  },
  {
    "text": "successfully were able to watch your",
    "start": "1514440",
    "end": "1516080"
  },
  {
    "text": "show hopefully you're aware um if the",
    "start": "1516080",
    "end": "1518640"
  },
  {
    "text": "resiliency features were working uh",
    "start": "1518640",
    "end": "1520320"
  },
  {
    "text": "through that section how do you manage",
    "start": "1520320",
    "end": "1522440"
  },
  {
    "text": "the data is like use the same data what",
    "start": "1522440",
    "end": "1525480"
  },
  {
    "text": "you have got it in the request or is it",
    "start": "1525480",
    "end": "1528320"
  },
  {
    "text": "something that you your synthetic data",
    "start": "1528320",
    "end": "1530679"
  },
  {
    "text": "is in applied and retested it uh we're",
    "start": "1530679",
    "end": "1534640"
  },
  {
    "text": "tracking the failure injection rules and",
    "start": "1534640",
    "end": "1537200"
  },
  {
    "text": "uh headers which get propagated",
    "start": "1537200",
    "end": "1538559"
  },
  {
    "text": "throughout the C chain oh okay",
    "start": "1538559",
    "end": "1542600"
  },
  {
    "text": "interesting this the second point is",
    "start": "1542600",
    "end": "1544640"
  },
  {
    "text": "like um you said two lines of code in",
    "start": "1544640",
    "end": "1548279"
  },
  {
    "text": "the um in your actual service itself and",
    "start": "1548279",
    "end": "1553559"
  },
  {
    "text": "you said you can you run those on each",
    "start": "1553559",
    "end": "1557919"
  },
  {
    "text": "um region or how do you how do you do",
    "start": "1557919",
    "end": "1560480"
  },
  {
    "text": "that I mean it's like a before deploying",
    "start": "1560480",
    "end": "1562399"
  },
  {
    "text": "it you run these test",
    "start": "1562399",
    "end": "1565039"
  },
  {
    "text": "before so uh part of your system testing",
    "start": "1565039",
    "end": "1568080"
  },
  {
    "text": "is going to confirm that your actual",
    "start": "1568080",
    "end": "1570480"
  },
  {
    "text": "drpc client wired up through your actual",
    "start": "1570480",
    "end": "1572399"
  },
  {
    "text": "NY configuration PX to the server so I",
    "start": "1572399",
    "end": "1574679"
  },
  {
    "text": "think you're talking about this slide",
    "start": "1574679",
    "end": "1575919"
  },
  {
    "text": "this slide yes y so this is a online",
    "start": "1575919",
    "end": "1579000"
  },
  {
    "text": "test uh that's using a local NY client",
    "start": "1579000",
    "end": "1582080"
  },
  {
    "text": "server pair uh to confirm that again uh",
    "start": "1582080",
    "end": "1585320"
  },
  {
    "text": "you might have uh change security rules",
    "start": "1585320",
    "end": "1587360"
  },
  {
    "text": "or like that and this is what's",
    "start": "1587360",
    "end": "1588679"
  },
  {
    "text": "confirming that you're going to work but",
    "start": "1588679",
    "end": "1590720"
  },
  {
    "text": "um it's only implemented in Java not in",
    "start": "1590720",
    "end": "1593399"
  },
  {
    "text": "any other languages there are test",
    "start": "1593399",
    "end": "1596039"
  },
  {
    "text": "structures for the other languages um",
    "start": "1596039",
    "end": "1598000"
  },
  {
    "text": "Java's received most of our investment",
    "start": "1598000",
    "end": "1599399"
  },
  {
    "text": "so far uh and I focus on Java so it's",
    "start": "1599399",
    "end": "1601919"
  },
  {
    "text": "hard for me to go into too many details",
    "start": "1601919",
    "end": "1603880"
  },
  {
    "text": "but we do have um grpc clients uh for",
    "start": "1603880",
    "end": "1606520"
  },
  {
    "text": "both Python and node uh we don't run",
    "start": "1606520",
    "end": "1608399"
  },
  {
    "text": "grpc servers in those languages yeah one",
    "start": "1608399",
    "end": "1611320"
  },
  {
    "text": "last questions so you saw I mean I've",
    "start": "1611320",
    "end": "1613159"
  },
  {
    "text": "seen that slide saying that streaming",
    "start": "1613159",
    "end": "1615320"
  },
  {
    "text": "right so you have streaming options is",
    "start": "1615320",
    "end": "1617720"
  },
  {
    "text": "also in Java site do you have any uh",
    "start": "1617720",
    "end": "1620600"
  },
  {
    "text": "like in Java client uh being a streaming",
    "start": "1620600",
    "end": "1625039"
  },
  {
    "text": "Receiver right it's a receiver now how",
    "start": "1625039",
    "end": "1627120"
  },
  {
    "text": "do you use it in like different engines",
    "start": "1627120",
    "end": "1629200"
  },
  {
    "text": "like Apache beam or um or data flow",
    "start": "1629200",
    "end": "1633960"
  },
  {
    "text": "engine so how do you make a call to a",
    "start": "1633960",
    "end": "1636640"
  },
  {
    "text": "your streaming servers do you have any",
    "start": "1636640",
    "end": "1640440"
  },
  {
    "text": "um a simple framework to make these uh",
    "start": "1640440",
    "end": "1643399"
  },
  {
    "text": "connections and receive lot of uh",
    "start": "1643399",
    "end": "1645440"
  },
  {
    "text": "request and post request we have a",
    "start": "1645440",
    "end": "1648080"
  },
  {
    "text": "internal data streaming framework I'm",
    "start": "1648080",
    "end": "1649840"
  },
  {
    "text": "not sure if we released any on OSS that",
    "start": "1649840",
    "end": "1652600"
  },
  {
    "text": "provides a tight integration with",
    "start": "1652600",
    "end": "1655120"
  },
  {
    "text": "grpc okay but it just fires up against",
    "start": "1655120",
    "end": "1657960"
  },
  {
    "text": "the uh observers and listeners uh it's a",
    "start": "1657960",
    "end": "1660760"
  },
  {
    "text": "struggle going on with how to do to in",
    "start": "1660760",
    "end": "1662960"
  },
  {
    "text": "using the appache beam so I thought you",
    "start": "1662960",
    "end": "1666559"
  },
  {
    "text": "you might have some Frameworks built in",
    "start": "1666559",
    "end": "1668799"
  },
  {
    "text": "already nothing specifically comes to",
    "start": "1668799",
    "end": "1670840"
  },
  {
    "text": "mind",
    "start": "1670840",
    "end": "1673200"
  }
]