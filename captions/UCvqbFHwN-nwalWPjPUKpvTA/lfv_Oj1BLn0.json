[
  {
    "text": "my name is Misha Eimov and I'm a staff",
    "start": "80",
    "end": "3200"
  },
  {
    "text": "software engineer at Google and I'm",
    "start": "3200",
    "end": "5600"
  },
  {
    "text": "going to talk about Orca and how we are",
    "start": "5600",
    "end": "8000"
  },
  {
    "text": "going to use it for the load balancer",
    "start": "8000",
    "end": "9760"
  },
  {
    "text": "going forward uh first a little bit of",
    "start": "9760",
    "end": "12960"
  },
  {
    "text": "the uh background or refresher on the",
    "start": "12960",
    "end": "15440"
  },
  {
    "text": "load balancing options in envoy there",
    "start": "15440",
    "end": "18320"
  },
  {
    "text": "are different load balancing policies",
    "start": "18320",
    "end": "20080"
  },
  {
    "text": "and envoy provides an extensibility for",
    "start": "20080",
    "end": "22720"
  },
  {
    "text": "that and one of the load balancing",
    "start": "22720",
    "end": "25199"
  },
  {
    "text": "policies is round robin load balancing",
    "start": "25199",
    "end": "28000"
  },
  {
    "text": "policy by default uh it selects",
    "start": "28000",
    "end": "31199"
  },
  {
    "text": "endpoints consecutively but you can",
    "start": "31199",
    "end": "33920"
  },
  {
    "text": "specify individual endpoint weights and",
    "start": "33920",
    "end": "37040"
  },
  {
    "text": "make one endpoint selected more",
    "start": "37040",
    "end": "39120"
  },
  {
    "text": "frequently than others",
    "start": "39120",
    "end": "41440"
  },
  {
    "text": "uh for for that purpose it uses not the",
    "start": "41440",
    "end": "44000"
  },
  {
    "text": "standard roundrobing but uh something",
    "start": "44000",
    "end": "46960"
  },
  {
    "text": "that's called",
    "start": "46960",
    "end": "48200"
  },
  {
    "text": "EDFuler which is popular scheduling",
    "start": "48200",
    "end": "50960"
  },
  {
    "text": "algorithm used by different operating",
    "start": "50960",
    "end": "52960"
  },
  {
    "text": "systems and so",
    "start": "52960",
    "end": "54440"
  },
  {
    "text": "on uh in standard envoy uh this uh round",
    "start": "54440",
    "end": "59440"
  },
  {
    "text": "robbing load balancing policy receives",
    "start": "59440",
    "end": "62000"
  },
  {
    "text": "host weights uh from XDS server where it",
    "start": "62000",
    "end": "65760"
  },
  {
    "text": "uses standard metrics like CPU",
    "start": "65760",
    "end": "68000"
  },
  {
    "text": "utilization and request rates uh to",
    "start": "68000",
    "end": "70720"
  },
  {
    "text": "calculate weights and those uh endpoint",
    "start": "70720",
    "end": "73840"
  },
  {
    "text": "weight updates they come fairly",
    "start": "73840",
    "end": "75840"
  },
  {
    "text": "infrequently on a scale of maybe 10",
    "start": "75840",
    "end": "78159"
  },
  {
    "text": "seconds or so on uh also in a new",
    "start": "78159",
    "end": "82080"
  },
  {
    "text": "workflow sometimes it's useful to load",
    "start": "82080",
    "end": "85119"
  },
  {
    "text": "balance not based on standard metrics",
    "start": "85119",
    "end": "87200"
  },
  {
    "text": "like CPU utilization uh but on something",
    "start": "87200",
    "end": "90320"
  },
  {
    "text": "more application specific maybe it's a",
    "start": "90320",
    "end": "92320"
  },
  {
    "text": "GPU utilization or memory utilization or",
    "start": "92320",
    "end": "96159"
  },
  {
    "text": "something else that uh is specific to",
    "start": "96159",
    "end": "98479"
  },
  {
    "text": "your system uh but still uh use request",
    "start": "98479",
    "end": "102079"
  },
  {
    "text": "per second and errors per second uh as",
    "start": "102079",
    "end": "104640"
  },
  {
    "text": "the uh input for the weight calculation",
    "start": "104640",
    "end": "108240"
  },
  {
    "text": "so some use cases for this is uh to run",
    "start": "108240",
    "end": "111840"
  },
  {
    "text": "workflows in uh heterogeneous",
    "start": "111840",
    "end": "114479"
  },
  {
    "text": "environments where like different",
    "start": "114479",
    "end": "116000"
  },
  {
    "text": "systems have different capabilities and",
    "start": "116000",
    "end": "119280"
  },
  {
    "text": "maximize computing uh fleet efficiency",
    "start": "119280",
    "end": "121840"
  },
  {
    "text": "that way and",
    "start": "121840",
    "end": "124520"
  },
  {
    "text": "also one of the issues with the XDS",
    "start": "124520",
    "end": "127600"
  },
  {
    "text": "provided load balancing is infrequency",
    "start": "127600",
    "end": "130000"
  },
  {
    "text": "of updates if we want to get a more",
    "start": "130000",
    "end": "132720"
  },
  {
    "text": "frequent updates we want to calculate",
    "start": "132720",
    "end": "134640"
  },
  {
    "text": "weights on the client side on the envoy",
    "start": "134640",
    "end": "137319"
  },
  {
    "text": "side and uh for this uh there was a",
    "start": "137319",
    "end": "141760"
  },
  {
    "text": "proposal created back in 2019 which was",
    "start": "141760",
    "end": "145599"
  },
  {
    "text": "called open request cost aggregation",
    "start": "145599",
    "end": "148319"
  },
  {
    "text": "which proposes a way for endpoints to",
    "start": "148319",
    "end": "151040"
  },
  {
    "text": "report their own load for for use uh by",
    "start": "151040",
    "end": "154080"
  },
  {
    "text": "the load balancer and uh this uh",
    "start": "154080",
    "end": "157760"
  },
  {
    "text": "standard was first supported by gRPC",
    "start": "157760",
    "end": "161040"
  },
  {
    "text": "since 2022 and last year we added",
    "start": "161040",
    "end": "164000"
  },
  {
    "text": "support uh to envoy which is currently",
    "start": "164000",
    "end": "166879"
  },
  {
    "text": "in alpha but we are expecting to bring",
    "start": "166879",
    "end": "169280"
  },
  {
    "text": "it to stable this",
    "start": "169280",
    "end": "171480"
  },
  {
    "text": "year uh how does this work uh first of",
    "start": "171480",
    "end": "175120"
  },
  {
    "text": "all uh at the heart of everything is",
    "start": "175120",
    "end": "177440"
  },
  {
    "text": "Orca load report protobuff which",
    "start": "177440",
    "end": "180319"
  },
  {
    "text": "includes utilization metrics such as",
    "start": "180319",
    "end": "182560"
  },
  {
    "text": "like application utilization CPU memory",
    "start": "182560",
    "end": "185360"
  },
  {
    "text": "and so on request metrics number of",
    "start": "185360",
    "end": "188239"
  },
  {
    "text": "requests per second that endpoint",
    "start": "188239",
    "end": "190159"
  },
  {
    "text": "receives and uh errors per second that",
    "start": "190159",
    "end": "193200"
  },
  {
    "text": "it gets and",
    "start": "193200",
    "end": "195159"
  },
  {
    "text": "also collections of u different metrics",
    "start": "195159",
    "end": "199040"
  },
  {
    "text": "that application can choose whatever for",
    "start": "199040",
    "end": "202159"
  },
  {
    "text": "your specific",
    "start": "202159",
    "end": "205000"
  },
  {
    "text": "workflow so the first way first of all",
    "start": "205000",
    "end": "208879"
  },
  {
    "text": "these metrics are reported as part of",
    "start": "208879",
    "end": "211040"
  },
  {
    "text": "the response they could be reported as",
    "start": "211040",
    "end": "213920"
  },
  {
    "text": "uh response headers or response trailers",
    "start": "213920",
    "end": "217280"
  },
  {
    "text": "interestingly gRPC that first",
    "start": "217280",
    "end": "219440"
  },
  {
    "text": "implemented it uses HTTP2 so it has",
    "start": "219440",
    "end": "222319"
  },
  {
    "text": "access to trailers and it makes sense to",
    "start": "222319",
    "end": "225840"
  },
  {
    "text": "report the load at the end of the",
    "start": "225840",
    "end": "227480"
  },
  {
    "text": "response however Envoy in general",
    "start": "227480",
    "end": "230879"
  },
  {
    "text": "supports HTTP1 which doesn't have",
    "start": "230879",
    "end": "232959"
  },
  {
    "text": "trailers so uh we had to add support for",
    "start": "232959",
    "end": "235680"
  },
  {
    "text": "both headers and trailers",
    "start": "235680",
    "end": "238640"
  },
  {
    "text": "so the first header that was implemented",
    "start": "238640",
    "end": "240640"
  },
  {
    "text": "by JRPC is this endpoint load report bin",
    "start": "240640",
    "end": "244720"
  },
  {
    "text": "which is",
    "start": "244720",
    "end": "245720"
  },
  {
    "text": "basically serialized proto encoded as",
    "start": "245720",
    "end": "248640"
  },
  {
    "text": "base 64 and it is also supported in",
    "start": "248640",
    "end": "252040"
  },
  {
    "text": "envoy but it also not very human",
    "start": "252040",
    "end": "254959"
  },
  {
    "text": "friendly and human readable so we added",
    "start": "254959",
    "end": "258160"
  },
  {
    "text": "another header which is endpoint load",
    "start": "258160",
    "end": "260600"
  },
  {
    "text": "report without binary and it supports",
    "start": "260600",
    "end": "264000"
  },
  {
    "text": "three different formats one is adjacent",
    "start": "264000",
    "end": "266240"
  },
  {
    "text": "serialized pro to another just like name",
    "start": "266240",
    "end": "268960"
  },
  {
    "text": "value pairs and third is the binary",
    "start": "268960",
    "end": "271680"
  },
  {
    "text": "format similar to gRPC and this is",
    "start": "271680",
    "end": "274800"
  },
  {
    "text": "currently supported by envoy but there",
    "start": "274800",
    "end": "276800"
  },
  {
    "text": "is a plan to support this uh format by",
    "start": "276800",
    "end": "279919"
  },
  {
    "text": "gRPC as well",
    "start": "279919",
    "end": "282560"
  },
  {
    "text": "uh so how is this",
    "start": "282560",
    "end": "284680"
  },
  {
    "text": "implemented at the heart of it all are",
    "start": "284680",
    "end": "287199"
  },
  {
    "text": "changes in router filter uh which look",
    "start": "287199",
    "end": "290160"
  },
  {
    "text": "for uh HTTP response headers and",
    "start": "290160",
    "end": "293479"
  },
  {
    "text": "trailers And if uh lo orca support is",
    "start": "293479",
    "end": "297520"
  },
  {
    "text": "enabled on the cluster via uh load",
    "start": "297520",
    "end": "301360"
  },
  {
    "text": "reporting uh metric names or the load",
    "start": "301360",
    "end": "304800"
  },
  {
    "text": "balancing policy that can consume load",
    "start": "304800",
    "end": "307199"
  },
  {
    "text": "reports then those headers or trailers",
    "start": "307199",
    "end": "310160"
  },
  {
    "text": "are parsed out and passed to either",
    "start": "310160",
    "end": "314240"
  },
  {
    "text": "reporting server or to the load",
    "start": "314240",
    "end": "316080"
  },
  {
    "text": "balancing",
    "start": "316080",
    "end": "318199"
  },
  {
    "text": "policy uh so",
    "start": "318199",
    "end": "321160"
  },
  {
    "text": "for in in order to take advantage of",
    "start": "321160",
    "end": "323759"
  },
  {
    "text": "those metrics we created a new load",
    "start": "323759",
    "end": "325680"
  },
  {
    "text": "balancing policy which aptly named",
    "start": "325680",
    "end": "328320"
  },
  {
    "text": "client side weighted round robin and uh",
    "start": "328320",
    "end": "331680"
  },
  {
    "text": "it is a thread aware load balancer that",
    "start": "331680",
    "end": "334160"
  },
  {
    "text": "is uh based on many things that JRPC has",
    "start": "334160",
    "end": "338680"
  },
  {
    "text": "uh created it uses roundroin load",
    "start": "338680",
    "end": "342479"
  },
  {
    "text": "balancer inside of it as a worker load",
    "start": "342479",
    "end": "345320"
  },
  {
    "text": "balancers and basically it calculates",
    "start": "345320",
    "end": "348000"
  },
  {
    "text": "weights on uh every response when it",
    "start": "348000",
    "end": "350960"
  },
  {
    "text": "gets the report but it only updates",
    "start": "350960",
    "end": "353919"
  },
  {
    "text": "weights for the load balancers once in a",
    "start": "353919",
    "end": "356560"
  },
  {
    "text": "while so to to avoid rushing because and",
    "start": "356560",
    "end": "358960"
  },
  {
    "text": "because it needs to rebuild the DFuler",
    "start": "358960",
    "end": "362160"
  },
  {
    "text": "when weights are",
    "start": "362160",
    "end": "365080"
  },
  {
    "text": "updated uh how is it configured uh for",
    "start": "365080",
    "end": "368800"
  },
  {
    "text": "configuration we added couple of",
    "start": "368800",
    "end": "370479"
  },
  {
    "text": "extensions to XDS API one is uh LRS",
    "start": "370479",
    "end": "374960"
  },
  {
    "text": "report endp point metric names uh those",
    "start": "374960",
    "end": "378639"
  },
  {
    "text": "this is the list of metrics that uh",
    "start": "378639",
    "end": "380880"
  },
  {
    "text": "envoy will report to LRS server so LRS",
    "start": "380880",
    "end": "384400"
  },
  {
    "text": "server is aware of it and could do like",
    "start": "384400",
    "end": "386800"
  },
  {
    "text": "higher level load balancing decisions",
    "start": "386800",
    "end": "388880"
  },
  {
    "text": "based on those custom metrics and",
    "start": "388880",
    "end": "391600"
  },
  {
    "text": "another is a client side weighted",
    "start": "391600",
    "end": "394160"
  },
  {
    "text": "roundro and load balancing policy which",
    "start": "394160",
    "end": "396800"
  },
  {
    "text": "has some configurations for uh like",
    "start": "396800",
    "end": "399039"
  },
  {
    "text": "update periods and how long to use",
    "start": "399039",
    "end": "401840"
  },
  {
    "text": "metrics for as well as like uh how to",
    "start": "401840",
    "end": "405039"
  },
  {
    "text": "penalize errors and what metrics to use",
    "start": "405039",
    "end": "408319"
  },
  {
    "text": "uh to compute custom",
    "start": "408319",
    "end": "411080"
  },
  {
    "text": "utilization and uh so as I've said uh",
    "start": "411080",
    "end": "415520"
  },
  {
    "text": "this is currently in alpha so our",
    "start": "415520",
    "end": "418400"
  },
  {
    "text": "initial results uh confirmed that uh It",
    "start": "418400",
    "end": "421199"
  },
  {
    "text": "improves endpoint",
    "start": "421199",
    "end": "422840"
  },
  {
    "text": "utilization and it also improves QPS and",
    "start": "422840",
    "end": "426560"
  },
  {
    "text": "heterogeneous environments uh but not",
    "start": "426560",
    "end": "429680"
  },
  {
    "text": "everything is great uh so like one of",
    "start": "429680",
    "end": "432160"
  },
  {
    "text": "the limitations of this load balancing",
    "start": "432160",
    "end": "434199"
  },
  {
    "text": "policy it only supports uh metrics that",
    "start": "434199",
    "end": "437599"
  },
  {
    "text": "are utilization based like like from 0",
    "start": "437599",
    "end": "440800"
  },
  {
    "text": "to one it doesn't for example support",
    "start": "440800",
    "end": "443120"
  },
  {
    "text": "metrics like",
    "start": "443120",
    "end": "444599"
  },
  {
    "text": "cost for for cost metrics we need to",
    "start": "444599",
    "end": "447199"
  },
  {
    "text": "create a different load balancing policy",
    "start": "447199",
    "end": "449440"
  },
  {
    "text": "but we are planning to uh use the same",
    "start": "449440",
    "end": "451680"
  },
  {
    "text": "mechanism of reporting uh those metrics",
    "start": "451680",
    "end": "455120"
  },
  {
    "text": "uh to to the uh unway uh one of the",
    "start": "455120",
    "end": "459599"
  },
  {
    "text": "links is a nice video from gRPC team",
    "start": "459599",
    "end": "463520"
  },
  {
    "text": "which explains how EDSuler works and uh",
    "start": "463520",
    "end": "467199"
  },
  {
    "text": "how to work with that uh I would like to",
    "start": "467199",
    "end": "471520"
  },
  {
    "text": "shout out to a bunch of people who made",
    "start": "471520",
    "end": "473840"
  },
  {
    "text": "this happen like from Harvey who created",
    "start": "473840",
    "end": "476800"
  },
  {
    "text": "initial proposal to uh people from GRPC",
    "start": "476800",
    "end": "480879"
  },
  {
    "text": "team uh who shepherd uh the XDS",
    "start": "480879",
    "end": "485720"
  },
  {
    "text": "interoperability and uh senior",
    "start": "485720",
    "end": "488240"
  },
  {
    "text": "mainteners who reviewed the code and",
    "start": "488240",
    "end": "490560"
  },
  {
    "text": "suggested uh how to make it",
    "start": "490560",
    "end": "493800"
  },
  {
    "text": "happen and I think that's it if you have",
    "start": "493800",
    "end": "497039"
  },
  {
    "text": "any questions",
    "start": "497039",
    "end": "498790"
  },
  {
    "text": "[Applause]",
    "start": "498790",
    "end": "503520"
  },
  {
    "text": "do we go",
    "start": "503520",
    "end": "507319"
  },
  {
    "text": "thank you",
    "start": "508960",
    "end": "510240"
  },
  {
    "text": "uh so I know pre-quall is uh another",
    "start": "510240",
    "end": "513680"
  },
  {
    "text": "load balancing algorithm that came out",
    "start": "513680",
    "end": "514880"
  },
  {
    "text": "of Google and kind of you know has some",
    "start": "514880",
    "end": "517440"
  },
  {
    "text": "similarities to like waiter Robin and",
    "start": "517440",
    "end": "519440"
  },
  {
    "text": "this like have y'all looked at adding",
    "start": "519440",
    "end": "521039"
  },
  {
    "text": "like pre-quall support uh for you",
    "start": "521039",
    "end": "523919"
  },
  {
    "text": "kicking off like or uh requests for like",
    "start": "523919",
    "end": "526160"
  },
  {
    "text": "the load reports from uh destinations",
    "start": "526160",
    "end": "528880"
  },
  {
    "text": "and feeding that back into envoy as like",
    "start": "528880",
    "end": "530640"
  },
  {
    "text": "another load balancing option",
    "start": "530640",
    "end": "532839"
  },
  {
    "text": "prequel yeah p E Q U L P R E QL uh we",
    "start": "532839",
    "end": "538959"
  },
  {
    "text": "did not",
    "start": "538959",
    "end": "540880"
  },
  {
    "text": "uh one of the uh things that we are",
    "start": "540880",
    "end": "543680"
  },
  {
    "text": "looking for in the future is uh",
    "start": "543680",
    "end": "545760"
  },
  {
    "text": "something like probing load balancer to",
    "start": "545760",
    "end": "548720"
  },
  {
    "text": "basically uh issue uh like request in in",
    "start": "548720",
    "end": "552320"
  },
  {
    "text": "advance to probe whether load the",
    "start": "552320",
    "end": "555200"
  },
  {
    "text": "current utilization of the load balancer",
    "start": "555200",
    "end": "557279"
  },
  {
    "text": "because the problem with uh this",
    "start": "557279",
    "end": "559600"
  },
  {
    "text": "mechanism is that it's retroactive and",
    "start": "559600",
    "end": "562240"
  },
  {
    "text": "if anway didn't talk to the particular",
    "start": "562240",
    "end": "564560"
  },
  {
    "text": "endpoint it wouldn't have the",
    "start": "564560",
    "end": "566160"
  },
  {
    "text": "information about",
    "start": "566160",
    "end": "567920"
  },
  {
    "text": "So for some workflows uh it is",
    "start": "567920",
    "end": "571120"
  },
  {
    "text": "beneficial to actually proactively ask",
    "start": "571120",
    "end": "573760"
  },
  {
    "text": "endpoint about its current load and then",
    "start": "573760",
    "end": "576320"
  },
  {
    "text": "use that for the decisions",
    "start": "576320",
    "end": "579040"
  },
  {
    "text": "okay thank you",
    "start": "579040",
    "end": "582600"
  },
  {
    "text": "anybody else",
    "start": "583040",
    "end": "586600"
  },
  {
    "text": "cool thank you very much all right",
    "start": "587200",
    "end": "591880"
  }
]