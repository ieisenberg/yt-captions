[
  {
    "start": "0",
    "end": "33000"
  },
  {
    "text": "hello I'm Damien and today I'm going to talk about layer seven load balancing a",
    "start": "60",
    "end": "7109"
  },
  {
    "text": "few words about me I wrote my first line of C 20 years ago 23 years ago even I",
    "start": "7109",
    "end": "13429"
  },
  {
    "text": "worked on many mg devices I am an own contributor I've worked at Intel on the",
    "start": "13429",
    "end": "21270"
  },
  {
    "text": "kernel Linux kernel I spent four years doing graphics driver so if you're running Linux there's a good chance you",
    "start": "21270",
    "end": "27660"
  },
  {
    "text": "have some of my code and I'm sorry so let's talk about load balancing first",
    "start": "27660",
    "end": "37730"
  },
  {
    "start": "33000",
    "end": "33000"
  },
  {
    "text": "the ways the stuck is going to be about where do we need layer seven advancing",
    "start": "37730",
    "end": "43440"
  },
  {
    "text": "especially let's we'll break down the different parts of what compose what",
    "start": "43440",
    "end": "49680"
  },
  {
    "text": "composite is load balancing we'll look at different architecture how to",
    "start": "49680",
    "end": "55230"
  },
  {
    "text": "implement that within your cluster and I have to say in the context of this talk the advancing is not about ingress it's",
    "start": "55230",
    "end": "61500"
  },
  {
    "text": "about the traffic within your cluster we have a look at a fairly recent algorithm",
    "start": "61500",
    "end": "68340"
  },
  {
    "text": "from 2016 called question hashing with bounded loads and then how hard this can",
    "start": "68340",
    "end": "75570"
  },
  {
    "text": "really be right it's like we'd have a small demo of a bit of code about implementing all of this so first things",
    "start": "75570",
    "end": "84600"
  },
  {
    "start": "82000",
    "end": "82000"
  },
  {
    "text": "first I'm sure everyone is blessed that but where is a community service on",
    "start": "84600",
    "end": "90180"
  },
  {
    "text": "Covanta size and endpoints let's say you have a macro service in your cluster and",
    "start": "90180",
    "end": "95579"
  },
  {
    "text": "you decide that four parts would be will be fine for the macro service that it will be able to handle the load you you",
    "start": "95579",
    "end": "101820"
  },
  {
    "text": "can just revert it the service object in kubernetes abstracts those four pods",
    "start": "101820",
    "end": "108060"
  },
  {
    "text": "into something front-facing you can cope it has a VIP virtual IP address and you",
    "start": "108060",
    "end": "115320"
  },
  {
    "text": "connected as VIP and by the magic of Dannette you end up in one of the parts that you've been defining of course I'm",
    "start": "115320",
    "end": "124890"
  },
  {
    "text": "sure everyone knows what that is but it it's destination nothing you'll be rewriting the IP",
    "start": "124890",
    "end": "130500"
  },
  {
    "text": "header to rewriting the VIP your being connected to to one of the IP and port",
    "start": "130500",
    "end": "137350"
  },
  {
    "text": "of the endpoint demo it's a bit soon to make to do a demo but we'll try so I",
    "start": "137350",
    "end": "145210"
  },
  {
    "text": "have I have a few pods running that's",
    "start": "145210",
    "end": "153550"
  },
  {
    "text": "the full post you had on the right that's the service abstracting those",
    "start": "153550",
    "end": "161380"
  },
  {
    "text": "pods and I'm going to run a hundred requests to that service VIP out of with",
    "start": "161380",
    "end": "171190"
  },
  {
    "text": "20 requests a second so that's going so you get some answers from the service",
    "start": "171190",
    "end": "177100"
  },
  {
    "text": "that's great and now we're going to look I've instrumented the pot to tell me how many requests they've been handling so",
    "start": "177100",
    "end": "184090"
  },
  {
    "text": "we look at that and there's maybe a bit of a surprise is the whole hundred",
    "start": "184090",
    "end": "190870"
  },
  {
    "text": "requests ended up in a single pod so what really happened here so yeah just",
    "start": "190870",
    "end": "198280"
  },
  {
    "start": "198000",
    "end": "198000"
  },
  {
    "text": "in case the demo didn't work what really happened here is there was a bit of a trick I told the client during the",
    "start": "198280",
    "end": "206739"
  },
  {
    "text": "request to only do requests with 113 with one thread if you want and also the",
    "start": "206739",
    "end": "215950"
  },
  {
    "text": "request rate was low enough that the service had time to answer between the next requests so what really happened is",
    "start": "215950",
    "end": "223810"
  },
  {
    "text": "we only had one connection between the client and the service VIP and because",
    "start": "223810",
    "end": "232120"
  },
  {
    "text": "HTTP clients gp1 clients do connection pooling and they use keepalive to not",
    "start": "232120",
    "end": "239470"
  },
  {
    "text": "have to reconnect every time then we really had one connection for the Hollander request and the way D networks",
    "start": "239470",
    "end": "247239"
  },
  {
    "text": "it only looks at the first packet of a connection to decide which endpoint they",
    "start": "247239",
    "end": "254260"
  },
  {
    "text": "they're going to rewrite the VIP arrest - that means the Hollander requests were",
    "start": "254260",
    "end": "259870"
  },
  {
    "text": "sent to using the same connection and all ended up in the same endpoint",
    "start": "259870",
    "end": "264950"
  },
  {
    "text": "and okay in http/1 when you do that yeah if your request rates is high",
    "start": "264950",
    "end": "272850"
  },
  {
    "text": "enough the client library will actually have to create new connections to send a",
    "start": "272850",
    "end": "277950"
  },
  {
    "text": "request because the connection will be already used and so you'll get some",
    "start": "277950",
    "end": "283919"
  },
  {
    "text": "rebalancing promise with HTTP - and",
    "start": "283919",
    "end": "289730"
  },
  {
    "text": "request multiplexing you'd really need a single connection to send request with a",
    "start": "289730",
    "end": "296160"
  },
  {
    "text": "high GPS request per second so if you",
    "start": "296160",
    "end": "301979"
  },
  {
    "text": "only have one connection then you will have the problem of ending up on the same endpoint all the time let's step",
    "start": "301979",
    "end": "308250"
  },
  {
    "text": "back a bit and try to summarize what we want for load balancing well first point",
    "start": "308250",
    "end": "315090"
  },
  {
    "start": "312000",
    "end": "312000"
  },
  {
    "text": "really yes we want to distribute the load hopefully fairly fairly among endpoints the next thing we want is",
    "start": "315090",
    "end": "322979"
  },
  {
    "text": "affinity that's a bit more advanced and the idea is that several requests from",
    "start": "322979",
    "end": "329940"
  },
  {
    "text": "the same client can end up on the same end point and you can use that for",
    "start": "329940",
    "end": "335910"
  },
  {
    "text": "optimizations we in a very Jarek term you may want to keep some state between",
    "start": "335910",
    "end": "342840"
  },
  {
    "text": "two requests to be able to reuse it it could be caching it could be some internet results it doesn't really",
    "start": "342840",
    "end": "348660"
  },
  {
    "text": "matter but what you want is to send the requests from the same client to the",
    "start": "348660",
    "end": "354330"
  },
  {
    "text": "same endpoint the qulity is another very interesting property of thread balancing",
    "start": "354330",
    "end": "360830"
  },
  {
    "text": "two examples here if your part you want",
    "start": "360830",
    "end": "366479"
  },
  {
    "text": "to connect to if the service you want to connect to has a pod running on the same node you",
    "start": "366479",
    "end": "372330"
  },
  {
    "text": "probably want to connect to that node to that pod on the same node rather than trying to go on a different record or",
    "start": "372330",
    "end": "379820"
  },
  {
    "text": "available user or data center so there's some kind of cache hierarchy",
    "start": "379820",
    "end": "385410"
  },
  {
    "text": "very similar to cache hierarchies where you you want to connect to the closest part whatever the closest means okay",
    "start": "385410",
    "end": "393390"
  },
  {
    "text": "that's that's about performance but there's also cost issue to that if you have a request funding available available available to",
    "start": "393390",
    "end": "400200"
  },
  {
    "text": "zone the traffic between AZ's is costly so when you connect to a macro service",
    "start": "400200",
    "end": "408120"
  },
  {
    "text": "you'd rather the pull of the micro service to be in the same easy or that it has to cross the boundary and pay for",
    "start": "408120",
    "end": "413640"
  },
  {
    "text": "further traffic and the next thing is this thing is sick braking and this this",
    "start": "413640",
    "end": "420150"
  },
  {
    "text": "has to do with everything with unhealthy",
    "start": "420150",
    "end": "426120"
  },
  {
    "text": "parts that can happen from time to time and when you do have an alpha pod you",
    "start": "426120",
    "end": "432030"
  },
  {
    "text": "want to remove the pot from the pool of endpoints you you can reach for that service right the kubernetes provides",
    "start": "432030",
    "end": "439260"
  },
  {
    "text": "some circuit breakings passive circuit braking by with a la Venus and readiness",
    "start": "439260",
    "end": "444690"
  },
  {
    "text": "probes if communities detects your pod is unhealthy it will remove it from the",
    "start": "444690",
    "end": "450030"
  },
  {
    "text": "service endpoints the list of service endpoints now let's have a look at the",
    "start": "450030",
    "end": "457680"
  },
  {
    "text": "perspective of l4s use layer 4 versus layer 7 and 4 is all about connections",
    "start": "457680",
    "end": "463110"
  },
  {
    "text": "have we seen elf for infinity is not very useful if you think about it the",
    "start": "463110",
    "end": "468720"
  },
  {
    "text": "only thing at the l4 layer you can do for affinity is to look at the source and destination IP and ports and try to",
    "start": "468720",
    "end": "474930"
  },
  {
    "text": "make some decision based on that but in especially in the context of macro statuses talking into your cluster",
    "start": "474930",
    "end": "480000"
  },
  {
    "text": "those information doesn't really give you anything on the other hand as layer",
    "start": "480000",
    "end": "487200"
  },
  {
    "text": "7 is all about requests and that allows you very very fine Granero T on things you can do",
    "start": "487200",
    "end": "493200"
  },
  {
    "text": "first thing is actually can do a better load distribution imagine a client doing one request a second and the other",
    "start": "493200",
    "end": "499500"
  },
  {
    "text": "client doing 50 requests a second if you they don't they so have two connections right each clients as one connection if",
    "start": "499500",
    "end": "506370"
  },
  {
    "text": "you do that a layer 4 you end up with one pod being 50 times more loaded than the other pod if you do that the request",
    "start": "506370",
    "end": "513060"
  },
  {
    "text": "level you can actually spread the 51 requests across many parts affinity now",
    "start": "513060",
    "end": "519900"
  },
  {
    "text": "can use a lot more information because you're passing the higher level protocol you can use",
    "start": "519900",
    "end": "527570"
  },
  {
    "text": "HTTP header you can use a URL part of the URL to be the key to be the identifier that",
    "start": "527570",
    "end": "535170"
  },
  {
    "text": "is going to route that request to the same endpoint and then that enables you",
    "start": "535170",
    "end": "541319"
  },
  {
    "text": "to have a more fine-grained sacred breaking for instance you can look at",
    "start": "541319",
    "end": "547379"
  },
  {
    "text": "the request responses and if you see that one endpoint is only giving 500",
    "start": "547379",
    "end": "552839"
  },
  {
    "text": "errors back you may want to remove that endpoint from the set of n points of the service let it cool cool off a bit and",
    "start": "552839",
    "end": "560100"
  },
  {
    "text": "maybe try again later but even really want that endpoint to to return errors forever everyone okay",
    "start": "560100",
    "end": "567569"
  },
  {
    "start": "566000",
    "end": "566000"
  },
  {
    "text": "let's let's illustrate the diversity that layer seven load balancing enables",
    "start": "567569",
    "end": "575040"
  },
  {
    "text": "you the columns here are the different load balancing versions you can find the",
    "start": "575040",
    "end": "581370"
  },
  {
    "text": "wild the rows are various components proxies and at the end oh well the",
    "start": "581370",
    "end": "587730"
  },
  {
    "text": "service mesh resists you and a client library with gokit the first two columns",
    "start": "587730",
    "end": "593579"
  },
  {
    "text": "are not very smart but they they do the job you have to imagine a request coming",
    "start": "593579",
    "end": "600870"
  },
  {
    "text": "into the system and you have to be you have to choose one of the endpoints you can choose that endpoint at random or in",
    "start": "600870",
    "end": "607740"
  },
  {
    "text": "run ribbon fashion and I will already answer some that we already provide some benefits for instance the one request",
    "start": "607740",
    "end": "615300"
  },
  {
    "text": "versus 50 requests a second for each of those requests you can just pick one one and point at random and I will spread",
    "start": "615300",
    "end": "621240"
  },
  {
    "text": "the load so that's really something the next two columns or a bit smarter and",
    "start": "621240",
    "end": "627529"
  },
  {
    "text": "for that they need a bit more state for endpoint in this case let's let's see",
    "start": "627529",
    "end": "634709"
  },
  {
    "text": "we're going to add the notion of load and the load is the number of requests",
    "start": "634709",
    "end": "640889"
  },
  {
    "text": "currently being handled by an end point so if the load is 12 that means the endpoint is currently handling five",
    "start": "640889",
    "end": "647220"
  },
  {
    "text": "requests what you can do then is you can look at the list of endpoints and pick",
    "start": "647220",
    "end": "654029"
  },
  {
    "text": "up the one with the fewer requests and give the new request arriving to this endpoint so you have bit something bits",
    "start": "654029",
    "end": "660480"
  },
  {
    "text": "most much smarter than random you actually have more information you have the number of",
    "start": "660480",
    "end": "666540"
  },
  {
    "text": "requests days handling so that's the way I called full scan list loaded you you look at the full list of endpoints and",
    "start": "666540",
    "end": "672870"
  },
  {
    "text": "you pick the listed it on there's a very interesting result that is actually very very broad and applies to more than load",
    "start": "672870",
    "end": "679890"
  },
  {
    "text": "balancing if you instead of looking at the whole list of endpoints if you just pick two endpoints at random and choose",
    "start": "679890",
    "end": "687930"
  },
  {
    "text": "the one with the fewest requests it's nearly as nearly as good as the full scan actually it's a constant like the",
    "start": "687930",
    "end": "694890"
  },
  {
    "text": "Big O notation it's just so constant as bad if you want to so it's quite optimal to do that in terms of time being time",
    "start": "694890",
    "end": "701760"
  },
  {
    "text": "spent doing the real advancing and the last two columns are algorithms that",
    "start": "701760",
    "end": "707250"
  },
  {
    "text": "have to do with affinity and I'll talk about them a bit later so let's have",
    "start": "707250",
    "end": "713400"
  },
  {
    "text": "architecture boxes here everyone loves those let's try to answer the question",
    "start": "713400",
    "end": "719370"
  },
  {
    "start": "715000",
    "end": "715000"
  },
  {
    "text": "where the layer 7 load balancing happens in your cluster this should be looking",
    "start": "719370",
    "end": "725400"
  },
  {
    "text": "quite familiar now this is basically is to envoy service meshes as they define",
    "start": "725400",
    "end": "730620"
  },
  {
    "text": "it you have workload and you have two workloads inb I've drawn a pod of the of",
    "start": "730620",
    "end": "740460"
  },
  {
    "text": "those two workloads or even pods what you do is you for each pod you insert a",
    "start": "740460",
    "end": "747180"
  },
  {
    "text": "proxy container and because your application container and that proxy",
    "start": "747180",
    "end": "752280"
  },
  {
    "text": "container share the same network name space you can transparently rewrite all the traffic through the proxy with for",
    "start": "752280",
    "end": "758910"
  },
  {
    "text": "instance IP tables rules and what happens next is that the proxy the the",
    "start": "758910",
    "end": "765660"
  },
  {
    "text": "load balancing is happening within the proxy and the proxy will connect to with",
    "start": "765660",
    "end": "770940"
  },
  {
    "text": "forward the request to another proxy somewhere else and then arrived to the",
    "start": "770940",
    "end": "775950"
  },
  {
    "text": "destination pod and at the bottom you have the control plane which is this",
    "start": "775950",
    "end": "781350"
  },
  {
    "text": "magical thing that will actually go and parameter all the proxies depending on",
    "start": "781350",
    "end": "786480"
  },
  {
    "text": "what you want to do and this is quite general of course and wendie's to do lot",
    "start": "786480",
    "end": "792120"
  },
  {
    "text": "more than those balancing the whole traffic measurement suite",
    "start": "792120",
    "end": "798440"
  },
  {
    "text": "so this approach is quite nice it's language agnostic because it's a",
    "start": "799360",
    "end": "804860"
  },
  {
    "text": "different process you can do you don't have to do you can write your application in whatever way it works the",
    "start": "804860",
    "end": "812149"
  },
  {
    "text": "clients are very simple they don't have to know anything about advancing anything about traffic management you will just work that's quite a nice",
    "start": "812149",
    "end": "818089"
  },
  {
    "text": "property but you have the proxy in the database all your all your traffic is",
    "start": "818089",
    "end": "825350"
  },
  {
    "text": "going through the proxy it has a bit of latency overhead and a lot of a bit of",
    "start": "825350",
    "end": "831050"
  },
  {
    "text": "CPU usage as well there's one rule here you have to benchmark things for",
    "start": "831050",
    "end": "836749"
  },
  {
    "text": "yourself and see if that's acceptable and chances are it is the next way you",
    "start": "836749",
    "end": "846319"
  },
  {
    "start": "843000",
    "end": "843000"
  },
  {
    "text": "can do this the been saying is have pretty much the opposite everything in",
    "start": "846319",
    "end": "851779"
  },
  {
    "text": "the client so the client becomes quite heavy they they can directly connect to",
    "start": "851779",
    "end": "857749"
  },
  {
    "text": "the community's API server to get the list of endpoints and they have all the logics within themselves to choose the",
    "start": "857749",
    "end": "864860"
  },
  {
    "text": "endpoint using one of the many algorithms we just saw and I give you quite some nice control let's see well",
    "start": "864860",
    "end": "874779"
  },
  {
    "text": "there are some drawback that means because it's within the client that you need this library for every language you",
    "start": "874779",
    "end": "880730"
  },
  {
    "text": "use in your application which can be a problem but there's no extra hope in the data path the regular plant it's itself",
    "start": "880730",
    "end": "887869"
  },
  {
    "text": "doing all the things and that surprised to pay to have full control of what you",
    "start": "887869",
    "end": "893869"
  },
  {
    "text": "doing if you look if you remember that table not every solution had all the",
    "start": "893869",
    "end": "898999"
  },
  {
    "text": "algorithms so if you want something very precise then maybe you can't reach it to be the current solution if you do",
    "start": "898999",
    "end": "905209"
  },
  {
    "text": "something in the client then you do exactly what you want and there's interesting middle-ground behaviour I",
    "start": "905209",
    "end": "912709"
  },
  {
    "start": "908000",
    "end": "908000"
  },
  {
    "text": "actually discovered preparing this talk which is the leucocyte load-balancing",
    "start": "912709",
    "end": "917990"
  },
  {
    "text": "it's middle ground as in you extract away all all the logic to do load",
    "start": "917990",
    "end": "924470"
  },
  {
    "text": "balancing in a lot dranzer service that's the top most box so though your client go and get an",
    "start": "924470",
    "end": "934760"
  },
  {
    "text": "ask this service what endpoint can I use please and that the advancing link is all there but a",
    "start": "934760",
    "end": "941330"
  },
  {
    "text": "client itself will do the request so that gives you some abstraction so we don't have to do to write ten libraries",
    "start": "941330",
    "end": "947860"
  },
  {
    "text": "and remove the the proxy from the data path that's kind of an interesting one I",
    "start": "947860",
    "end": "954340"
  },
  {
    "text": "haven't seen many many solutions with that but it's something I want to",
    "start": "954340",
    "end": "960320"
  },
  {
    "text": "explore for sure okay let's talk about a bit about affinity and constant hashing",
    "start": "960320",
    "end": "968270"
  },
  {
    "text": "with body loads which wasn't the abstract at least so this is the hovering guessing people are starting to",
    "start": "968270",
    "end": "975290"
  },
  {
    "text": "be familiar with that constant hashing is quite prevalent in this rigid services it's everywhere",
    "start": "975290",
    "end": "980870"
  },
  {
    "text": "but let's let's let's go through step by step let's say you have a hash function",
    "start": "980870",
    "end": "986980"
  },
  {
    "text": "xxx hash for instance x-axis right so this good one this 32 bit search",
    "start": "986980",
    "end": "992810"
  },
  {
    "text": "function and you can represent those the whole Brittles of the hash on the circle",
    "start": "992810",
    "end": "998480"
  },
  {
    "text": "at the top you have 0 and you go clockwise to the power 30 with 2 power 32 minus 1 well you can do with that",
    "start": "998480",
    "end": "1006070"
  },
  {
    "text": "well you have the if you remember you have those 4 endpoints they're",
    "start": "1006070",
    "end": "1011620"
  },
  {
    "text": "identified by an IP address and a port probably you can hash these strings and",
    "start": "1011620",
    "end": "1017410"
  },
  {
    "text": "the result of the hash ends up somewhere in that rat-ass ring so that's why I did here and they all in the ring now we",
    "start": "1017410",
    "end": "1025689"
  },
  {
    "text": "still want to answer the problem what happens when a request arrived in the system where should it go which endpoint sheet select so a",
    "start": "1025690",
    "end": "1032560"
  },
  {
    "text": "requester eyes you inspect it to grab a",
    "start": "1032560",
    "end": "1037930"
  },
  {
    "text": "key that you want to do you affinity with so if it's a if you want to route",
    "start": "1037930",
    "end": "1043150"
  },
  {
    "text": "all the clients requests to the same endpoint you maybe have a HTTP header doing that and because you have that key",
    "start": "1043150",
    "end": "1051340"
  },
  {
    "text": "that cares a value and you put it somewhere in the in the ring and the way",
    "start": "1051340",
    "end": "1057580"
  },
  {
    "text": "it works the way you can select and point there's going to handle that a",
    "start": "1057580",
    "end": "1063100"
  },
  {
    "text": "request is just to go clockwise on the hash ring and choose the end point a is",
    "start": "1063100",
    "end": "1068260"
  },
  {
    "text": "right next to it but that's that's not",
    "start": "1068260",
    "end": "1073900"
  },
  {
    "text": "really load balancing and for the very simple reason if you have a client doing the 50 request with the same key and",
    "start": "1073900",
    "end": "1079780"
  },
  {
    "text": "acclaim doing one request for the same key you have 50 requests and either ending up in the blue one and maybe the",
    "start": "1079780",
    "end": "1085600"
  },
  {
    "text": "one request and ended up in a yellow one which is not real burn thing is it so in",
    "start": "1085600",
    "end": "1091600"
  },
  {
    "start": "1091000",
    "end": "1091000"
  },
  {
    "text": "arrives custom sashings with bandit loads and the idea around it is to try",
    "start": "1091600",
    "end": "1098710"
  },
  {
    "text": "to avoid and point getting smashed by hotspot it by by by a client or a",
    "start": "1098710",
    "end": "1106530"
  },
  {
    "text": "special key if you want and the way to define that or the way they define it is",
    "start": "1106530",
    "end": "1112420"
  },
  {
    "text": "to have an invariant saying no endpoint can be more loaded than a factor of the",
    "start": "1112420",
    "end": "1119860"
  },
  {
    "text": "average maybe that's not entirely clear but we will try to clear it up so you",
    "start": "1119860",
    "end": "1129250"
  },
  {
    "text": "have to augment your ash ring with theta and this this this time it's the load",
    "start": "1129250",
    "end": "1134260"
  },
  {
    "text": "for each end point you keep the load that's Nadia we already seen so for instance here the green one has 23",
    "start": "1134260",
    "end": "1140530"
  },
  {
    "text": "requests at the moment there your requests arise being hashed and up",
    "start": "1140530",
    "end": "1146980"
  },
  {
    "text": "somewhere in the hash ring and then you have your question can this endpoint handle the request and the way you",
    "start": "1146980",
    "end": "1153010"
  },
  {
    "text": "answer it is okay I have 100 requests in my system which means the average load",
    "start": "1153010",
    "end": "1160060"
  },
  {
    "text": "of each end point is a hundred fifty by 425 and my invariant is I don't want any",
    "start": "1160060",
    "end": "1167860"
  },
  {
    "text": "endpoint to have more load than 25 times my constant that constant I chose here",
    "start": "1167860",
    "end": "1173740"
  },
  {
    "text": "1.2 when the 2000 T 5 is 30 so I don't",
    "start": "1173740",
    "end": "1180220"
  },
  {
    "text": "want any endpoint of more than 30 load when the request arrives it should be handled by the blue one but if the blue",
    "start": "1180220",
    "end": "1187300"
  },
  {
    "text": "one handles it that means you have 30 requests + 131 requests and we just said no we don't want that",
    "start": "1187300",
    "end": "1193390"
  },
  {
    "text": "so you just pick the next one on the ring and you get well the purple one",
    "start": "1193390",
    "end": "1201320"
  },
  {
    "text": "will handle the request if you can imagine here that you have a mix between",
    "start": "1201320",
    "end": "1206980"
  },
  {
    "text": "affinity you try to stick your sessions if you want or you use us to the same",
    "start": "1206980",
    "end": "1212150"
  },
  {
    "text": "endpoint but if the endpoint is too loaded then you go to the next one and I",
    "start": "1212150",
    "end": "1218570"
  },
  {
    "start": "1218000",
    "end": "1218000"
  },
  {
    "text": "have this maybe that's better explain with this kind of affinity scale that if I've imagined you have described between",
    "start": "1218570",
    "end": "1228950"
  },
  {
    "text": "no affinity and persistence obviously random and run rabinin and power of two choice list loaded or no",
    "start": "1228950",
    "end": "1236570"
  },
  {
    "text": "affinity they didn't even look at the data this level on the other end of the spectrum you have constant hashing which",
    "start": "1236570",
    "end": "1243170"
  },
  {
    "text": "is person just by shorting where you always end up in the same end point well accepted the end points is being removed",
    "start": "1243170",
    "end": "1249740"
  },
  {
    "text": "from the heart ring but that's a common case in the middle you have question - Envy bound alert and because you have",
    "start": "1249740",
    "end": "1255380"
  },
  {
    "text": "this factor you can act on you if as a",
    "start": "1255380",
    "end": "1262220"
  },
  {
    "text": "sig tensed to add a constant tends toward infinity you allow the system to",
    "start": "1262220",
    "end": "1267820"
  },
  {
    "text": "do you allow one endpoint you have a lot more load than the average so as a",
    "start": "1267820",
    "end": "1274130"
  },
  {
    "text": "singer to infinity it looks very very much like constant hashing but on the",
    "start": "1274130",
    "end": "1280340"
  },
  {
    "text": "other end of the spectrum if seed tends to were one then you end up with random so that's a interesting factor you can",
    "start": "1280340",
    "end": "1287360"
  },
  {
    "text": "use to tune your little balancing",
    "start": "1287360",
    "end": "1292540"
  },
  {
    "text": "alright and very very briefly I want to touch about locality and there's this a",
    "start": "1295330",
    "end": "1300740"
  },
  {
    "start": "1297000",
    "end": "1297000"
  },
  {
    "text": "very interesting expressive abstraction there which is the nth subset of",
    "start": "1300740",
    "end": "1307700"
  },
  {
    "text": "endpoints a service we said is a set of n points but what if we could define",
    "start": "1307700",
    "end": "1314390"
  },
  {
    "text": "subsets of that for instance if you have a Z's in your cluster you can subset",
    "start": "1314390",
    "end": "1320930"
  },
  {
    "text": "your endpoints by by easy so in this case you have foreign points and to a Z that's how it is",
    "start": "1320930",
    "end": "1327120"
  },
  {
    "text": "and that allows you to on the client-side when you actually do the request to select the subset of pots",
    "start": "1327120",
    "end": "1334920"
  },
  {
    "text": "you're interested in if you're in the green AZ you want you want to you want",
    "start": "1334920",
    "end": "1340530"
  },
  {
    "text": "to connect to the green pods of course and you can load balance between those two if you want to and you can think",
    "start": "1340530",
    "end": "1346710"
  },
  {
    "text": "about a lot of strategies to fall back if if if the green AZ isn't isn't available for instance or to either to",
    "start": "1346710",
    "end": "1353550"
  },
  {
    "text": "load it alright so how hard can this really be and I mean so I've played a",
    "start": "1353550",
    "end": "1362070"
  },
  {
    "text": "bit with a client-side libraries on github and the way I tested it is by",
    "start": "1362070",
    "end": "1368429"
  },
  {
    "text": "writing a small reverse proxy and I'm sure everyone knows why the reverse proxies but in any case that's nothing",
    "start": "1368429",
    "end": "1376620"
  },
  {
    "text": "in the middle you can make client requests to it and we just forward it to one of the",
    "start": "1376620",
    "end": "1382110"
  },
  {
    "text": "endpoints as a extracted the constant",
    "start": "1382110",
    "end": "1388679"
  },
  {
    "start": "1385000",
    "end": "1385000"
  },
  {
    "text": "hashing and Doni loads with the small interface the first and the first method is really to tell the ring waste the",
    "start": "1388679",
    "end": "1395309"
  },
  {
    "text": "next what is the set of endpoints we talking about and the second two are in the two last beacon request and a",
    "start": "1395309",
    "end": "1401460"
  },
  {
    "text": "request or Sentinel calls you can put before making a request and after making",
    "start": "1401460",
    "end": "1406860"
  },
  {
    "text": "a request basically you want to make a request you ask the load-balancing",
    "start": "1406860",
    "end": "1412440"
  },
  {
    "text": "corazon where is the end point i can actually have at the end you release",
    "start": "1412440",
    "end": "1417809"
  },
  {
    "text": "this endpoint and that that's used to handle to to tweak the load for each",
    "start": "1417809",
    "end": "1424050"
  },
  {
    "text": "endpoint of course now the service discovery part is just a sip is just a",
    "start": "1424050",
    "end": "1431550"
  },
  {
    "text": "commence API call you watch the endpoint object you receive events when the",
    "start": "1431550",
    "end": "1438330"
  },
  {
    "text": "endpoint objects changes first and if you scale down or up your service this will change the set of end points",
    "start": "1438330",
    "end": "1444090"
  },
  {
    "text": "so and based on those events you can update the ring with the set of n points",
    "start": "1444090",
    "end": "1452940"
  },
  {
    "text": "that you currently have and then the reverse proxy proper is",
    "start": "1452940",
    "end": "1458299"
  },
  {
    "start": "1455000",
    "end": "1455000"
  },
  {
    "text": "based on the ghost and a library as proxy and you can see that first he looks at a header that contains the key",
    "start": "1458299",
    "end": "1468009"
  },
  {
    "text": "there is the base of your question hashing it gets the endpoint for that",
    "start": "1468009",
    "end": "1473210"
  },
  {
    "text": "key it reader redirects the request to the right hand point at the end called",
    "start": "1473210",
    "end": "1480109"
  },
  {
    "text": "and request to to decrease the load bit",
    "start": "1480109",
    "end": "1485719"
  },
  {
    "start": "1484000",
    "end": "1484000"
  },
  {
    "text": "about circuit breaking I haven't really done much on in this prototype it just",
    "start": "1485719",
    "end": "1492289"
  },
  {
    "text": "relies on the default active communities communities circle breaking come if your",
    "start": "1492289",
    "end": "1498859"
  },
  {
    "text": "pot is not is not answering the liveness probe committees we restarted and of",
    "start": "1498859",
    "end": "1506869"
  },
  {
    "text": "course it could be enhanced as a tuile with the various secret braking algorithms you can you can find around",
    "start": "1506869",
    "end": "1511909"
  },
  {
    "text": "there's there are many yeah we can definitely talk about this if all right",
    "start": "1511909",
    "end": "1519200"
  },
  {
    "text": "demo so yes no where am I so I have",
    "start": "1519200",
    "end": "1533960"
  },
  {
    "text": "written small clients its energy to debrief as well that does I can actually",
    "start": "1533960",
    "end": "1540679"
  },
  {
    "text": "get that better way does it he has to go routines and each code in is sending a",
    "start": "1540679",
    "end": "1548299"
  },
  {
    "text": "100 requests with a with two different and each go routine uses a different affinity key the physic is are called",
    "start": "1548299",
    "end": "1555469"
  },
  {
    "text": "mark and Sophie why not so that's it and it's a bit have a bit",
    "start": "1555469",
    "end": "1564320"
  },
  {
    "text": "of yeah",
    "start": "1564320",
    "end": "1572080"
  },
  {
    "text": "so I the just instrument II the proxy to give me stats about this but it's a bit",
    "start": "1574479",
    "end": "1583070"
  },
  {
    "text": "awkward to get will still do it okay so",
    "start": "1583070",
    "end": "1593419"
  },
  {
    "text": "what you see here is a bit of tip back messages because to to have the the ring",
    "start": "1593419",
    "end": "1598820"
  },
  {
    "text": "add at the end points and then you have some stats about where the mark and",
    "start": "1598820",
    "end": "1603919"
  },
  {
    "text": "Sophie key is ended up you so mark the first line is mark ended up in the in",
    "start": "1603919",
    "end": "1611299"
  },
  {
    "text": "this endpoint 17 times so you can see that you have some kind of strong",
    "start": "1611299",
    "end": "1616579"
  },
  {
    "text": "affinity in at least one of the end points for for Marcus for the mark is the second one and the rest is pretty",
    "start": "1616579",
    "end": "1623149"
  },
  {
    "text": "bit among the other end points so you get both and I think the constant here",
    "start": "1623149",
    "end": "1629719"
  },
  {
    "text": "was 125 so you you get you get some behavior that looks like it's right",
    "start": "1629719",
    "end": "1637179"
  },
  {
    "text": "takeaways so Levin's are levels higher",
    "start": "1637179",
    "end": "1642799"
  },
  {
    "start": "1638000",
    "end": "1638000"
  },
  {
    "text": "levels layer seven the balancing is a necessity going forward I don't think clusters can get away with",
    "start": "1642799",
    "end": "1650299"
  },
  {
    "text": "that now applications really need that in many different levels actually it",
    "start": "1650299",
    "end": "1655789"
  },
  {
    "text": "turns out that making a clan library is is fairly straightforward especially if you use the cube the communities API",
    "start": "1655789",
    "end": "1663649"
  },
  {
    "text": "directly and that's actually a practical solution of pragmatic even solution that",
    "start": "1663649",
    "end": "1670129"
  },
  {
    "text": "works today and you can do exactly what you want there I've mentioned using the copy graciously Green CPI is library is",
    "start": "1670129",
    "end": "1678229"
  },
  {
    "text": "actually quite powerful and you're using your assertion engine as as the base of for free logic something I noticed",
    "start": "1678229",
    "end": "1686209"
  },
  {
    "text": "that's maybe interesting is you have a lot of primitives to the placement in",
    "start": "1686209",
    "end": "1692359"
  },
  {
    "text": "kubernetes you can for instance you can say I want two pods on on this node oh not more than one proton or two pod on",
    "start": "1692359",
    "end": "1699379"
  },
  {
    "text": "this node using the various affinity primitives but that's used for the scheduling part",
    "start": "1699379",
    "end": "1706080"
  },
  {
    "text": "of it but for the service part of it you have no usage of that which",
    "start": "1706080",
    "end": "1711630"
  },
  {
    "text": "something that's definitely could be improved there's something a bit weird about the service ip's like all of these",
    "start": "1711630",
    "end": "1717930"
  },
  {
    "text": "completely bypasses a service IP and that's not very that's not a nice feeling to bypass part of the platform",
    "start": "1717930",
    "end": "1725450"
  },
  {
    "text": "and you have solutions that are that or building other abstractions we see are",
    "start": "1725450",
    "end": "1732600"
  },
  {
    "text": "these for instance the question is how much of this can be folded back into cavaties itself to maybe try to limit",
    "start": "1732600",
    "end": "1739980"
  },
  {
    "text": "the fragmentation around around this kind of problematic it's priced on the",
    "start": "1739980",
    "end": "1745640"
  },
  {
    "text": "endpoint subset which is kind of interesting and expressive object we",
    "start": "1745640",
    "end": "1752280"
  },
  {
    "text": "people may want to add to the platform itself the Democrat is here it's",
    "start": "1752280",
    "end": "1759140"
  },
  {
    "start": "1755000",
    "end": "1755000"
  },
  {
    "text": "absolutely and definitely prototype code do not put that into production it will not work",
    "start": "1759140",
    "end": "1766340"
  },
  {
    "text": "that said I have promised my co-workers that I'm going to solve that for our own",
    "start": "1766350",
    "end": "1771510"
  },
  {
    "text": "clusters so I will have something at some point will be open source if anyone",
    "start": "1771510",
    "end": "1777270"
  },
  {
    "text": "is interested I will announce it somewhere in on our blog or something",
    "start": "1777270",
    "end": "1785330"
  },
  {
    "text": "I've a bunch of references here the topic is actually very very deep and interesting if you're interested please",
    "start": "1785330",
    "end": "1792990"
  },
  {
    "start": "1786000",
    "end": "1786000"
  },
  {
    "text": "feel free to to look at any of those they're pretty good",
    "start": "1792990",
    "end": "1797720"
  },
  {
    "text": "[Applause]",
    "start": "1800200",
    "end": "1807130"
  },
  {
    "text": "any questions I see their microphone",
    "start": "1807130",
    "end": "1820580"
  },
  {
    "text": "somewhere yep yep right",
    "start": "1820580",
    "end": "1836408"
  },
  {
    "text": "sorry you can you speak of it actually doesn't good to hear thank you",
    "start": "1856269",
    "end": "1863559"
  },
  {
    "text": "where are you yeah sorry",
    "start": "1868029",
    "end": "1874600"
  },
  {
    "text": "so first of all thank you so much for the speech that's exactly a problem that we're facing right now my question is",
    "start": "1876549",
    "end": "1883940"
  },
  {
    "text": "around scaling so in a scenario where load balancing with affinity you have a",
    "start": "1883940",
    "end": "1889730"
  },
  {
    "text": "number of endpoints in the ring and then you scale the ring the affinity will change right so have",
    "start": "1889730",
    "end": "1896629"
  },
  {
    "text": "you do you have any suggestion about how to preserve this affinity in case it's a",
    "start": "1896629",
    "end": "1902690"
  },
  {
    "text": "very dynamic environment where the number of endpoints can go up and down so I think that a very general comment",
    "start": "1902690",
    "end": "1909259"
  },
  {
    "text": "is you don't want to only rely on affinity as in the state you build",
    "start": "1909259",
    "end": "1914269"
  },
  {
    "text": "inside your your your endpoint has to be rebuildable so if if your endpoint goes",
    "start": "1914269",
    "end": "1921950"
  },
  {
    "text": "away you can rebuild that state in another endpoint that's a very general",
    "start": "1921950",
    "end": "1927950"
  },
  {
    "text": "you know comment about how you want to organize your state's inside a very highly dynamic environment so that's",
    "start": "1927950",
    "end": "1936109"
  },
  {
    "text": "that's really the answer I have if you if you can it be it's you can rebuild your state if you can't let's say you've",
    "start": "1936109",
    "end": "1946159"
  },
  {
    "text": "a service for instance if you imagine a",
    "start": "1946159",
    "end": "1952279"
  },
  {
    "text": "service that is actually gdb call watch",
    "start": "1952279",
    "end": "1957440"
  },
  {
    "text": "yeah you know you have core files anyway you have gdb to explore your",
    "start": "1957440",
    "end": "1962570"
  },
  {
    "text": "qualified the service well just Weather Service would do it with 4kg DB instance",
    "start": "1962570",
    "end": "1967820"
  },
  {
    "text": "download the co file loading to gdb and you give you say a prompt in this kind",
    "start": "1967820",
    "end": "1973669"
  },
  {
    "text": "of environment the context is massive right the context is is forking gdb and",
    "start": "1973669",
    "end": "1980379"
  },
  {
    "text": "loading and if the end point goes away the whole session goes away and you can't rebuild",
    "start": "1980379",
    "end": "1986199"
  },
  {
    "text": "it because you're GTB in that case well there's no good solution really you can rebuild it the state as",
    "start": "1986199",
    "end": "1991749"
  },
  {
    "text": "well that's fine but you probably want to have the user to tell the user something bad happened and your you know",
    "start": "1991749",
    "end": "1997299"
  },
  {
    "text": "your restarting the session so that's it really thank you so much I'll be happy",
    "start": "1997299",
    "end": "2002969"
  },
  {
    "text": "to follow up with more questions later about this sure and I have another one that is not strictly related it's about",
    "start": "2002969",
    "end": "2010199"
  },
  {
    "text": "using TLS inside a cluster mm-hmm so in the case where the connection between service a and service B goes over TLS",
    "start": "2010199",
    "end": "2017879"
  },
  {
    "text": "obviously other inspection is impossible so you cannot use the mechanism for",
    "start": "2017879",
    "end": "2023639"
  },
  {
    "text": "affinity I mean such as turnaround that you can still use the gate parameters",
    "start": "2023639",
    "end": "2030269"
  },
  {
    "text": "from maybe okay Thanks",
    "start": "2030269",
    "end": "2035779"
  },
  {
    "text": "any more questions so for from the",
    "start": "2036829",
    "end": "2044819"
  },
  {
    "text": "examples you've feels like you refer mostly to HTTP yes you plan to support",
    "start": "2044819",
    "end": "2049819"
  },
  {
    "text": "pluggable interfaces to handle different protocol protocols so the data from",
    "start": "2049819",
    "end": "2055349"
  },
  {
    "text": "binary protocols because there is not only HTTP to be balanced the g-o-p see",
    "start": "2055349",
    "end": "2063470"
  },
  {
    "text": "well I guess I see HTTP but your PC yes that would be feasible for the rest is",
    "start": "2063470",
    "end": "2069148"
  },
  {
    "text": "quite Jarek it's quite generic question isn't it but you can really you can apply the same mechanism but that's an",
    "start": "2069149",
    "end": "2075809"
  },
  {
    "text": "interesting well I had really no concrete plans on that now why not yeah",
    "start": "2075809",
    "end": "2082408"
  },
  {
    "text": "it sounds possible",
    "start": "2082409",
    "end": "2084950"
  },
  {
    "text": "so I think yeah first of all thanks for interest in token presentation and I",
    "start": "2096390",
    "end": "2103540"
  },
  {
    "text": "think what previous question was really about and what other people might be",
    "start": "2103540",
    "end": "2108790"
  },
  {
    "text": "wondering office is it kind of a project you are just starting with this approach",
    "start": "2108790",
    "end": "2115540"
  },
  {
    "text": "or any other products exist or maybe planned by some companies or walks",
    "start": "2115540",
    "end": "2122500"
  },
  {
    "text": "explaining for that horse so first of all it's not a lot of code but you",
    "start": "2122500",
    "end": "2128230"
  },
  {
    "text": "always benefit from having a project that is used by more than web companies and mature over time etc there are some",
    "start": "2128230",
    "end": "2136320"
  },
  {
    "text": "macro services libraries and talking about go especially they implement some",
    "start": "2136320",
    "end": "2141730"
  },
  {
    "text": "of the limb balancing is a City go Kate go kid has random and run ribbon so this",
    "start": "2141730",
    "end": "2149500"
  },
  {
    "text": "could be part of go kid there's no but I have no yes it's a",
    "start": "2149500",
    "end": "2154810"
  },
  {
    "text": "project I'm starting and I have no concrete plans at this point if people",
    "start": "2154810",
    "end": "2159880"
  },
  {
    "text": "are interested I'm absolutely interested into in sharing a bit of that code and",
    "start": "2159880",
    "end": "2166050"
  },
  {
    "text": "interpreting you know having something mature I think there's another question",
    "start": "2166050",
    "end": "2174520"
  },
  {
    "text": "here thank you please rise after that or do you want to",
    "start": "2174520",
    "end": "2186509"
  },
  {
    "text": "answer that question first initial okay here it okay I'll continue probably you",
    "start": "2186509",
    "end": "2196589"
  },
  {
    "text": "are saying that you found a middle approach which might work when you yeah",
    "start": "2196589",
    "end": "2201839"
  },
  {
    "text": "when you ask for endpoints and you said you didn't find some products but yeah when you have console or etcd which is",
    "start": "2201839",
    "end": "2209670"
  },
  {
    "text": "like discovery mechanisms are they in that data path I think they are doing exactly that if maybe I'm mistaken but",
    "start": "2209670",
    "end": "2216089"
  },
  {
    "text": "hey we also say when you have console or it gives you actually in points and I",
    "start": "2216089",
    "end": "2222059"
  },
  {
    "text": "saw I'm not sure but I think console doesn't stay in the data path between your client and and the service I'm not",
    "start": "2222059",
    "end": "2232890"
  },
  {
    "text": "sure if it's just a load balancing part like you will do a service discovery part but yeah the one of the objective",
    "start": "2232890",
    "end": "2238859"
  },
  {
    "text": "is to move the code the load balancing code occurred that decides which one point to use into that service so you",
    "start": "2238859",
    "end": "2246269"
  },
  {
    "text": "basically put the constant hashing into that service okay I think I think we're done for this case from questions that",
    "start": "2246269",
    "end": "2252239"
  },
  {
    "text": "thank you",
    "start": "2252239",
    "end": "2254930"
  }
]