[
  {
    "start": "0",
    "end": "80000"
  },
  {
    "text": "hello everyone thank you very much for",
    "start": "719",
    "end": "2399"
  },
  {
    "text": "joining this presentation",
    "start": "2399",
    "end": "3679"
  },
  {
    "text": "hope you'll find it useful my name is",
    "start": "3679",
    "end": "5520"
  },
  {
    "text": "roslan i work as data architect at bolt",
    "start": "5520",
    "end": "8240"
  },
  {
    "text": "and today i will tell you our experience",
    "start": "8240",
    "end": "10559"
  },
  {
    "text": "migrating",
    "start": "10559",
    "end": "11360"
  },
  {
    "text": "unicorn size company from batch to real",
    "start": "11360",
    "end": "14000"
  },
  {
    "text": "time stream processing",
    "start": "14000",
    "end": "16880"
  },
  {
    "text": "i guess most of you are fairly familiar",
    "start": "16880",
    "end": "18720"
  },
  {
    "text": "with bolt we are",
    "start": "18720",
    "end": "19920"
  },
  {
    "text": "leading micro mobility and",
    "start": "19920",
    "end": "21359"
  },
  {
    "text": "transportation platform in europe and",
    "start": "21359",
    "end": "23439"
  },
  {
    "text": "africa",
    "start": "23439",
    "end": "24960"
  },
  {
    "text": "this slide shows the volume of money",
    "start": "24960",
    "end": "27439"
  },
  {
    "text": "raised by different players in the",
    "start": "27439",
    "end": "29199"
  },
  {
    "text": "market",
    "start": "29199",
    "end": "30240"
  },
  {
    "text": "it can be a bit outdated but it conveys",
    "start": "30240",
    "end": "32880"
  },
  {
    "text": "very important meaning",
    "start": "32880",
    "end": "34160"
  },
  {
    "text": "it basically shows how important for the",
    "start": "34160",
    "end": "36880"
  },
  {
    "text": "success",
    "start": "36880",
    "end": "37920"
  },
  {
    "text": "is to be efficient in today's business",
    "start": "37920",
    "end": "42480"
  },
  {
    "text": "these are the topics we will cover in",
    "start": "43120",
    "end": "44640"
  },
  {
    "text": "our presentation today we will start",
    "start": "44640",
    "end": "46800"
  },
  {
    "text": "with",
    "start": "46800",
    "end": "47440"
  },
  {
    "text": "understanding which requirements users",
    "start": "47440",
    "end": "50719"
  },
  {
    "text": "have",
    "start": "50719",
    "end": "51199"
  },
  {
    "text": "towards data nowadays then we will talk",
    "start": "51199",
    "end": "54719"
  },
  {
    "text": "about",
    "start": "54719",
    "end": "55199"
  },
  {
    "text": "why would companies want to adopt stream",
    "start": "55199",
    "end": "57680"
  },
  {
    "text": "processing and migrate away from batch",
    "start": "57680",
    "end": "59920"
  },
  {
    "text": "towards stream then we will",
    "start": "59920",
    "end": "63039"
  },
  {
    "text": "discuss where to get the events",
    "start": "63039",
    "end": "66159"
  },
  {
    "text": "to process with stream processing then",
    "start": "66159",
    "end": "68720"
  },
  {
    "text": "we will discuss the actual internals",
    "start": "68720",
    "end": "70880"
  },
  {
    "text": "of the stream processing and we will",
    "start": "70880",
    "end": "72720"
  },
  {
    "text": "wrap it up with discussing which",
    "start": "72720",
    "end": "74400"
  },
  {
    "text": "problems",
    "start": "74400",
    "end": "75119"
  },
  {
    "text": "we have experienced along our way and",
    "start": "75119",
    "end": "77680"
  },
  {
    "text": "which lessons we have learned",
    "start": "77680",
    "end": "80560"
  },
  {
    "start": "80000",
    "end": "183000"
  },
  {
    "text": "so let's start with understanding what",
    "start": "80560",
    "end": "83119"
  },
  {
    "text": "kind of requirements",
    "start": "83119",
    "end": "84479"
  },
  {
    "text": "users have towards the data",
    "start": "84479",
    "end": "88400"
  },
  {
    "text": "data can originate in many different",
    "start": "88400",
    "end": "90320"
  },
  {
    "text": "sources those can be",
    "start": "90320",
    "end": "92159"
  },
  {
    "text": "backend microservices front-end",
    "start": "92159",
    "end": "94560"
  },
  {
    "text": "microservices",
    "start": "94560",
    "end": "96000"
  },
  {
    "text": "databases be it sql database or nosql",
    "start": "96000",
    "end": "100079"
  },
  {
    "text": "database some files it can be even be",
    "start": "100079",
    "end": "103600"
  },
  {
    "text": "user input after all but first and",
    "start": "103600",
    "end": "106560"
  },
  {
    "text": "foremost requirements",
    "start": "106560",
    "end": "108000"
  },
  {
    "text": "which users have towards data is that",
    "start": "108000",
    "end": "110799"
  },
  {
    "text": "data has to be consistent across",
    "start": "110799",
    "end": "112960"
  },
  {
    "text": "different systems and services users",
    "start": "112960",
    "end": "115600"
  },
  {
    "text": "will not tolerate if they see",
    "start": "115600",
    "end": "117360"
  },
  {
    "text": "one number in one place and another",
    "start": "117360",
    "end": "119920"
  },
  {
    "text": "number",
    "start": "119920",
    "end": "120399"
  },
  {
    "text": "somewhere else second requirement",
    "start": "120399",
    "end": "123439"
  },
  {
    "text": "is that users don't actually care where",
    "start": "123439",
    "end": "126000"
  },
  {
    "text": "this data has originated from",
    "start": "126000",
    "end": "128239"
  },
  {
    "text": "be it structured source or database",
    "start": "128239",
    "end": "132080"
  },
  {
    "text": "or unstructured they want to have easy",
    "start": "132080",
    "end": "135280"
  },
  {
    "text": "way to query the data and to get",
    "start": "135280",
    "end": "138480"
  },
  {
    "text": "they want to have easy way to get to all",
    "start": "138480",
    "end": "140800"
  },
  {
    "text": "of its fields and all of its values",
    "start": "140800",
    "end": "144560"
  },
  {
    "text": "all of us live in the era of big data",
    "start": "144560",
    "end": "148000"
  },
  {
    "text": "meaning that volumes of the data we have",
    "start": "148000",
    "end": "150000"
  },
  {
    "text": "to process and store and handle",
    "start": "150000",
    "end": "152319"
  },
  {
    "text": "only grows over the time but",
    "start": "152319",
    "end": "155440"
  },
  {
    "text": "users don't actually care about that",
    "start": "155440",
    "end": "157280"
  },
  {
    "text": "they want to have access to both",
    "start": "157280",
    "end": "159440"
  },
  {
    "text": "current data or the fresh data and all",
    "start": "159440",
    "end": "162800"
  },
  {
    "text": "the historical data",
    "start": "162800",
    "end": "165519"
  },
  {
    "text": "and last but not the least is actually",
    "start": "165519",
    "end": "167840"
  },
  {
    "text": "the speed of data delivery",
    "start": "167840",
    "end": "169760"
  },
  {
    "text": "users usually don't want to wait for the",
    "start": "169760",
    "end": "172879"
  },
  {
    "text": "data to get",
    "start": "172879",
    "end": "174640"
  },
  {
    "text": "to propagate through the systems or to",
    "start": "174640",
    "end": "176480"
  },
  {
    "text": "get delivered to the",
    "start": "176480",
    "end": "177760"
  },
  {
    "text": "final system they want to have access to",
    "start": "177760",
    "end": "180159"
  },
  {
    "text": "it the fastest the better",
    "start": "180159",
    "end": "184400"
  },
  {
    "start": "183000",
    "end": "323000"
  },
  {
    "text": "now that we know which requirements",
    "start": "184400",
    "end": "186080"
  },
  {
    "text": "people have towards the data",
    "start": "186080",
    "end": "187760"
  },
  {
    "text": "let's discuss why would any company want",
    "start": "187760",
    "end": "190159"
  },
  {
    "text": "to actually",
    "start": "190159",
    "end": "190800"
  },
  {
    "text": "adopt the stream processing and remember",
    "start": "190800",
    "end": "194000"
  },
  {
    "text": "we have talked briefly about",
    "start": "194000",
    "end": "196080"
  },
  {
    "text": "the importance of being efficient in",
    "start": "196080",
    "end": "198239"
  },
  {
    "text": "today's business",
    "start": "198239",
    "end": "199200"
  },
  {
    "text": "and that's exactly the point of this",
    "start": "199200",
    "end": "201599"
  },
  {
    "text": "slide",
    "start": "201599",
    "end": "203440"
  },
  {
    "text": "com any company would prefer to adopt",
    "start": "203440",
    "end": "207040"
  },
  {
    "text": "stream processing because it actually",
    "start": "207040",
    "end": "208959"
  },
  {
    "text": "puts data in to the motion",
    "start": "208959",
    "end": "212000"
  },
  {
    "text": "it allows data to flow throughout the",
    "start": "212000",
    "end": "213920"
  },
  {
    "text": "systems and",
    "start": "213920",
    "end": "215280"
  },
  {
    "text": "it means that company can develop",
    "start": "215280",
    "end": "218720"
  },
  {
    "text": "so-called",
    "start": "218720",
    "end": "219360"
  },
  {
    "text": "reactive microservices",
    "start": "219360",
    "end": "222959"
  },
  {
    "text": "those are the services which actually um",
    "start": "225040",
    "end": "227840"
  },
  {
    "text": "react",
    "start": "227840",
    "end": "228400"
  },
  {
    "text": "or respond to some kind of change in",
    "start": "228400",
    "end": "231440"
  },
  {
    "text": "some state or to some kind of event",
    "start": "231440",
    "end": "233760"
  },
  {
    "text": "imagine",
    "start": "233760",
    "end": "234480"
  },
  {
    "text": "you are buying something on amazon when",
    "start": "234480",
    "end": "236159"
  },
  {
    "text": "you click this",
    "start": "236159",
    "end": "237760"
  },
  {
    "text": "buy button many actions have to happen",
    "start": "237760",
    "end": "241280"
  },
  {
    "text": "like invoice has to be generated and",
    "start": "241280",
    "end": "243360"
  },
  {
    "text": "sent to your email",
    "start": "243360",
    "end": "244799"
  },
  {
    "text": "the inventory on the warehouse has to be",
    "start": "244799",
    "end": "248000"
  },
  {
    "text": "reserved",
    "start": "248000",
    "end": "249280"
  },
  {
    "text": "the shipment or delivery process has to",
    "start": "249280",
    "end": "251439"
  },
  {
    "text": "get initiated",
    "start": "251439",
    "end": "252879"
  },
  {
    "text": "and all of those events are triggered by",
    "start": "252879",
    "end": "255360"
  },
  {
    "text": "one simple click",
    "start": "255360",
    "end": "257199"
  },
  {
    "text": "and adopting the stream processing",
    "start": "257199",
    "end": "259840"
  },
  {
    "text": "actually",
    "start": "259840",
    "end": "260400"
  },
  {
    "text": "allows to do it and it also allows you",
    "start": "260400",
    "end": "262400"
  },
  {
    "text": "to detect all those changes in real time",
    "start": "262400",
    "end": "265040"
  },
  {
    "text": "allowing you to make real time decisions",
    "start": "265040",
    "end": "268000"
  },
  {
    "text": "on top of your",
    "start": "268000",
    "end": "268960"
  },
  {
    "text": "data it also allows you",
    "start": "268960",
    "end": "273440"
  },
  {
    "text": "i guess most of you are fairly familiar",
    "start": "273440",
    "end": "275199"
  },
  {
    "text": "with the concept of etl",
    "start": "275199",
    "end": "277120"
  },
  {
    "text": "when you basically process big volumes",
    "start": "277120",
    "end": "281040"
  },
  {
    "text": "of data in a",
    "start": "281040",
    "end": "282320"
  },
  {
    "text": "batch mode and stream processing allows",
    "start": "282320",
    "end": "286080"
  },
  {
    "text": "you",
    "start": "286080",
    "end": "286479"
  },
  {
    "text": "to spread the load of those etls",
    "start": "286479",
    "end": "289840"
  },
  {
    "text": "throughout the some throughout some time",
    "start": "289840",
    "end": "292080"
  },
  {
    "text": "period like",
    "start": "292080",
    "end": "292880"
  },
  {
    "text": "day or week for example basically it",
    "start": "292880",
    "end": "295120"
  },
  {
    "text": "means that you don't have to",
    "start": "295120",
    "end": "296800"
  },
  {
    "text": "run the heavy etl job once a day or once",
    "start": "296800",
    "end": "299440"
  },
  {
    "text": "a week to process all the data for the",
    "start": "299440",
    "end": "301440"
  },
  {
    "text": "past period",
    "start": "301440",
    "end": "303199"
  },
  {
    "text": "and you can actually incrementally",
    "start": "303199",
    "end": "307520"
  },
  {
    "text": "process every single new piece of data",
    "start": "307600",
    "end": "310479"
  },
  {
    "text": "throughout the day or throughout the",
    "start": "310479",
    "end": "312160"
  },
  {
    "text": "week in real time",
    "start": "312160",
    "end": "313680"
  },
  {
    "text": "and adoption stream processing actually",
    "start": "313680",
    "end": "316000"
  },
  {
    "text": "allows you to build",
    "start": "316000",
    "end": "317199"
  },
  {
    "text": "the services and architectures which are",
    "start": "317199",
    "end": "320000"
  },
  {
    "text": "much",
    "start": "320000",
    "end": "320479"
  },
  {
    "text": "more scalable so now that we know",
    "start": "320479",
    "end": "324479"
  },
  {
    "start": "323000",
    "end": "629000"
  },
  {
    "text": "why actually would you want to adopt the",
    "start": "324479",
    "end": "327199"
  },
  {
    "text": "stream processing",
    "start": "327199",
    "end": "328720"
  },
  {
    "text": "or events in motion",
    "start": "328720",
    "end": "332240"
  },
  {
    "text": "let's talk about where actually can you",
    "start": "332240",
    "end": "334720"
  },
  {
    "text": "get those events from",
    "start": "334720",
    "end": "337120"
  },
  {
    "text": "we all live in the era of microservices",
    "start": "337120",
    "end": "340639"
  },
  {
    "text": "and they have plenty of",
    "start": "340639",
    "end": "343759"
  },
  {
    "text": "different benefits like for example",
    "start": "343759",
    "end": "346639"
  },
  {
    "text": "easiness of deploy",
    "start": "346639",
    "end": "348400"
  },
  {
    "text": "or maybe being decoupled one from",
    "start": "348400",
    "end": "351039"
  },
  {
    "text": "another",
    "start": "351039",
    "end": "352880"
  },
  {
    "text": "but they also come at some cost",
    "start": "352880",
    "end": "357120"
  },
  {
    "text": "and usually that's how it looks in your",
    "start": "357120",
    "end": "361520"
  },
  {
    "text": "production environment and want it or",
    "start": "361520",
    "end": "364720"
  },
  {
    "text": "not",
    "start": "364720",
    "end": "365280"
  },
  {
    "text": "at some point you end up in a zoo where",
    "start": "365280",
    "end": "367280"
  },
  {
    "text": "you have different plenty of micro",
    "start": "367280",
    "end": "368720"
  },
  {
    "text": "services",
    "start": "368720",
    "end": "369600"
  },
  {
    "text": "talking to each other and",
    "start": "369600",
    "end": "372800"
  },
  {
    "text": "good luck deriving some minion from this",
    "start": "372800",
    "end": "375759"
  },
  {
    "text": "house",
    "start": "375759",
    "end": "378080"
  },
  {
    "text": "but one of the important features",
    "start": "378080",
    "end": "380639"
  },
  {
    "text": "feature of the microservices is that",
    "start": "380639",
    "end": "382319"
  },
  {
    "text": "they don't actually leave",
    "start": "382319",
    "end": "383360"
  },
  {
    "text": "isolated from each other and they need",
    "start": "383360",
    "end": "385759"
  },
  {
    "text": "to communicate or talk to each other",
    "start": "385759",
    "end": "388479"
  },
  {
    "text": "to basically signal to other services",
    "start": "388479",
    "end": "392080"
  },
  {
    "text": "that something has",
    "start": "392080",
    "end": "393120"
  },
  {
    "text": "actually happened and believe it or not",
    "start": "393120",
    "end": "396479"
  },
  {
    "text": "but",
    "start": "396479",
    "end": "397280"
  },
  {
    "text": "it may sound easy but it's actually one",
    "start": "397280",
    "end": "399840"
  },
  {
    "text": "of the hardest problems",
    "start": "399840",
    "end": "401039"
  },
  {
    "text": "in modern software engineering",
    "start": "401039",
    "end": "404400"
  },
  {
    "text": "because you can never actually",
    "start": "404400",
    "end": "408080"
  },
  {
    "text": "be sure that some communication between",
    "start": "408080",
    "end": "410479"
  },
  {
    "text": "the services",
    "start": "410479",
    "end": "411280"
  },
  {
    "text": "has happened because services can fail",
    "start": "411280",
    "end": "413759"
  },
  {
    "text": "or maybe",
    "start": "413759",
    "end": "414560"
  },
  {
    "text": "event or the communication this the",
    "start": "414560",
    "end": "417120"
  },
  {
    "text": "request",
    "start": "417120",
    "end": "417840"
  },
  {
    "text": "can get lost and you will never know",
    "start": "417840",
    "end": "420960"
  },
  {
    "text": "about that",
    "start": "420960",
    "end": "423599"
  },
  {
    "text": "unfortunately right now there is no",
    "start": "423599",
    "end": "426240"
  },
  {
    "text": "engineer friendly or easy way",
    "start": "426240",
    "end": "428479"
  },
  {
    "text": "to guarantee that some communication",
    "start": "428479",
    "end": "430800"
  },
  {
    "text": "between the services has happened",
    "start": "430800",
    "end": "432479"
  },
  {
    "text": "and those of you who have worked with",
    "start": "432479",
    "end": "434800"
  },
  {
    "text": "similar setups",
    "start": "434800",
    "end": "436160"
  },
  {
    "text": "they know that usually people solve it",
    "start": "436160",
    "end": "438479"
  },
  {
    "text": "with some kind of distributed",
    "start": "438479",
    "end": "439759"
  },
  {
    "text": "transactions",
    "start": "439759",
    "end": "440880"
  },
  {
    "text": "or state machines and they also know how",
    "start": "440880",
    "end": "443759"
  },
  {
    "text": "painful",
    "start": "443759",
    "end": "444479"
  },
  {
    "text": "it is and when we at bolt",
    "start": "444479",
    "end": "448479"
  },
  {
    "text": "thought about all right how would we",
    "start": "448479",
    "end": "450160"
  },
  {
    "text": "tackle this this problem",
    "start": "450160",
    "end": "452319"
  },
  {
    "text": "how can we migrate towards stream",
    "start": "452319",
    "end": "454639"
  },
  {
    "text": "processing where do we get events from",
    "start": "454639",
    "end": "456720"
  },
  {
    "text": "we started thinking from the other",
    "start": "456720",
    "end": "458240"
  },
  {
    "text": "direction we use",
    "start": "458240",
    "end": "460160"
  },
  {
    "text": "mysql as our relational database for all",
    "start": "460160",
    "end": "464319"
  },
  {
    "text": "our microservices",
    "start": "464319",
    "end": "466080"
  },
  {
    "text": "and those of you who know who have",
    "start": "466080",
    "end": "469199"
  },
  {
    "text": "worked with databases they might know",
    "start": "469199",
    "end": "471120"
  },
  {
    "text": "that",
    "start": "471120",
    "end": "472080"
  },
  {
    "text": "most of the modern databases they have",
    "start": "472080",
    "end": "474479"
  },
  {
    "text": "the so-called",
    "start": "474479",
    "end": "475520"
  },
  {
    "text": "commit log under the hood basically it",
    "start": "475520",
    "end": "478639"
  },
  {
    "text": "is the log of all the changes",
    "start": "478639",
    "end": "480240"
  },
  {
    "text": "which database has applied it is used as",
    "start": "480240",
    "end": "483120"
  },
  {
    "text": "an",
    "start": "483120",
    "end": "483360"
  },
  {
    "text": "internal tool for the database to",
    "start": "483360",
    "end": "486479"
  },
  {
    "text": "guarantee data consistency",
    "start": "486479",
    "end": "488800"
  },
  {
    "text": "and not many people know that actually",
    "start": "488800",
    "end": "491120"
  },
  {
    "text": "this log it can be read",
    "start": "491120",
    "end": "492800"
  },
  {
    "text": "by other applications and that's exactly",
    "start": "492800",
    "end": "495280"
  },
  {
    "text": "the way which we decided to go at bolt",
    "start": "495280",
    "end": "497680"
  },
  {
    "text": "but now comes the question all right if",
    "start": "497680",
    "end": "500800"
  },
  {
    "text": "we read this log",
    "start": "500800",
    "end": "502479"
  },
  {
    "text": "the data which we extract from it well",
    "start": "502479",
    "end": "504960"
  },
  {
    "text": "it has to be stored somewhere right",
    "start": "504960",
    "end": "506720"
  },
  {
    "text": "so that later on it can be processed by",
    "start": "506720",
    "end": "509280"
  },
  {
    "text": "someone else",
    "start": "509280",
    "end": "510240"
  },
  {
    "text": "or maybe uh even better it can it should",
    "start": "510240",
    "end": "513360"
  },
  {
    "text": "be processed",
    "start": "513360",
    "end": "514320"
  },
  {
    "text": "it should be able to be processed by",
    "start": "514320",
    "end": "516560"
  },
  {
    "text": "many different consumers",
    "start": "516560",
    "end": "518640"
  },
  {
    "text": "one of the crucial requirements which we",
    "start": "518640",
    "end": "521039"
  },
  {
    "text": "have agreed on",
    "start": "521039",
    "end": "521919"
  },
  {
    "text": "when we started developing this whole",
    "start": "521919",
    "end": "524159"
  },
  {
    "text": "pipeline was that",
    "start": "524159",
    "end": "525440"
  },
  {
    "text": "well it has to be scalable because",
    "start": "525440",
    "end": "527760"
  },
  {
    "text": "company grows year over year we launch",
    "start": "527760",
    "end": "529760"
  },
  {
    "text": "new cities new countries",
    "start": "529760",
    "end": "531519"
  },
  {
    "text": "we provide rides to more and more",
    "start": "531519",
    "end": "535040"
  },
  {
    "text": "customers and all of us agreed that",
    "start": "535040",
    "end": "538800"
  },
  {
    "text": "it has to be scalable but any time when",
    "start": "538800",
    "end": "541600"
  },
  {
    "text": "someone says",
    "start": "541600",
    "end": "542640"
  },
  {
    "text": "to me anything about scalability",
    "start": "542640",
    "end": "545760"
  },
  {
    "text": "there is one piece of software one",
    "start": "545760",
    "end": "547920"
  },
  {
    "text": "system which",
    "start": "547920",
    "end": "548959"
  },
  {
    "text": "comes to my mind straight away and",
    "start": "548959",
    "end": "551040"
  },
  {
    "text": "that's apache kafka",
    "start": "551040",
    "end": "552800"
  },
  {
    "text": "for those of you who might who might not",
    "start": "552800",
    "end": "554800"
  },
  {
    "text": "be familiar with apache kafka",
    "start": "554800",
    "end": "557040"
  },
  {
    "text": "it is the messaging system which was",
    "start": "557040",
    "end": "559920"
  },
  {
    "text": "developed at linkedin",
    "start": "559920",
    "end": "561440"
  },
  {
    "text": "and later on it was open sourced",
    "start": "561440",
    "end": "565040"
  },
  {
    "text": "it provides plenty of beautiful",
    "start": "565040",
    "end": "568240"
  },
  {
    "text": "guarantees to the engineers and its",
    "start": "568240",
    "end": "570000"
  },
  {
    "text": "users",
    "start": "570000",
    "end": "570959"
  },
  {
    "text": "but most importantly it has really high",
    "start": "570959",
    "end": "574000"
  },
  {
    "text": "events throughput and it is horizontally",
    "start": "574000",
    "end": "577120"
  },
  {
    "text": "scalable",
    "start": "577120",
    "end": "578640"
  },
  {
    "text": "one of my favorite",
    "start": "578640",
    "end": "581760"
  },
  {
    "text": "features which apache kafka provides is",
    "start": "586560",
    "end": "588959"
  },
  {
    "text": "actually",
    "start": "588959",
    "end": "589920"
  },
  {
    "text": "write once read many semantics it means",
    "start": "589920",
    "end": "592000"
  },
  {
    "text": "that you can send",
    "start": "592000",
    "end": "593440"
  },
  {
    "text": "or write one event to it which can be",
    "start": "593440",
    "end": "596720"
  },
  {
    "text": "processed by number of independent",
    "start": "596720",
    "end": "599360"
  },
  {
    "text": "consumers",
    "start": "599360",
    "end": "600320"
  },
  {
    "text": "at their own pace at different points in",
    "start": "600320",
    "end": "602640"
  },
  {
    "text": "time in the future",
    "start": "602640",
    "end": "604240"
  },
  {
    "text": "there is no need to duplicate this same",
    "start": "604240",
    "end": "606160"
  },
  {
    "text": "event so that it can be processed by",
    "start": "606160",
    "end": "608160"
  },
  {
    "text": "many consumers",
    "start": "608160",
    "end": "609040"
  },
  {
    "text": "you can write it once and then process",
    "start": "609040",
    "end": "612320"
  },
  {
    "text": "it",
    "start": "612320",
    "end": "612560"
  },
  {
    "text": "as many times as you want so",
    "start": "612560",
    "end": "616640"
  },
  {
    "text": "now that we understand from where can we",
    "start": "616640",
    "end": "619760"
  },
  {
    "text": "get",
    "start": "619760",
    "end": "620320"
  },
  {
    "text": "can we get those events from and that we",
    "start": "620320",
    "end": "624000"
  },
  {
    "text": "persist them to apache kafka now comes",
    "start": "624000",
    "end": "626880"
  },
  {
    "text": "the part of",
    "start": "626880",
    "end": "628000"
  },
  {
    "text": "stream processing let's deep dive into",
    "start": "628000",
    "end": "631279"
  },
  {
    "start": "629000",
    "end": "940000"
  },
  {
    "text": "it",
    "start": "631279",
    "end": "632320"
  },
  {
    "text": "right now on the market there are plenty",
    "start": "632320",
    "end": "633760"
  },
  {
    "text": "of different frameworks and libraries",
    "start": "633760",
    "end": "635760"
  },
  {
    "text": "which are actually doing stream",
    "start": "635760",
    "end": "638000"
  },
  {
    "text": "processing",
    "start": "638000",
    "end": "638959"
  },
  {
    "text": "so it's up to you to decide whichever",
    "start": "638959",
    "end": "641519"
  },
  {
    "text": "one of those you would like to",
    "start": "641519",
    "end": "642959"
  },
  {
    "text": "to use but before maybe",
    "start": "642959",
    "end": "646720"
  },
  {
    "text": "discussing them let's uh define what",
    "start": "646720",
    "end": "649760"
  },
  {
    "text": "actually a stream",
    "start": "649760",
    "end": "650720"
  },
  {
    "text": "is and stream has two important",
    "start": "650720",
    "end": "653839"
  },
  {
    "text": "characteristics first of all it is",
    "start": "653839",
    "end": "656079"
  },
  {
    "text": "unbounded flow of data it basically",
    "start": "656079",
    "end": "658800"
  },
  {
    "text": "means that",
    "start": "658800",
    "end": "659600"
  },
  {
    "text": "you are getting the events right now you",
    "start": "659600",
    "end": "662480"
  },
  {
    "text": "will get them in the future and",
    "start": "662480",
    "end": "663920"
  },
  {
    "text": "there will be no end to that you cannot",
    "start": "663920",
    "end": "666160"
  },
  {
    "text": "say that at some point",
    "start": "666160",
    "end": "667519"
  },
  {
    "text": "they will stop it is unbounded you will",
    "start": "667519",
    "end": "670399"
  },
  {
    "text": "simply",
    "start": "670399",
    "end": "671040"
  },
  {
    "text": "keep getting them continuously and",
    "start": "671040",
    "end": "673360"
  },
  {
    "text": "second important characteristic",
    "start": "673360",
    "end": "674880"
  },
  {
    "text": "is that it is happening in real time",
    "start": "674880",
    "end": "678160"
  },
  {
    "text": "you don't have to do it once an hour",
    "start": "678160",
    "end": "681440"
  },
  {
    "text": "once a day once a week",
    "start": "681440",
    "end": "683120"
  },
  {
    "text": "it is happening at any given point in",
    "start": "683120",
    "end": "686839"
  },
  {
    "text": "time",
    "start": "686839",
    "end": "688959"
  },
  {
    "text": "there are two types of stream whenever",
    "start": "688959",
    "end": "691279"
  },
  {
    "text": "we are talking about",
    "start": "691279",
    "end": "692800"
  },
  {
    "text": "the uh the stream processing as a",
    "start": "692800",
    "end": "695120"
  },
  {
    "text": "framework",
    "start": "695120",
    "end": "695839"
  },
  {
    "text": "there are two types of stream processors",
    "start": "695839",
    "end": "697839"
  },
  {
    "text": "which you have to very clearly",
    "start": "697839",
    "end": "699519"
  },
  {
    "text": "differentiate between first one are so",
    "start": "699519",
    "end": "701920"
  },
  {
    "text": "called stateless processors",
    "start": "701920",
    "end": "703600"
  },
  {
    "text": "and they process every single event",
    "start": "703600",
    "end": "706399"
  },
  {
    "text": "independently of",
    "start": "706399",
    "end": "707519"
  },
  {
    "text": "all the previous events they don't have",
    "start": "707519",
    "end": "709760"
  },
  {
    "text": "any history whatsoever",
    "start": "709760",
    "end": "712880"
  },
  {
    "text": "examples of such stream processors can",
    "start": "712880",
    "end": "715519"
  },
  {
    "text": "be for example some",
    "start": "715519",
    "end": "717120"
  },
  {
    "text": "transformations or maybe extracting some",
    "start": "717120",
    "end": "719440"
  },
  {
    "text": "field from event",
    "start": "719440",
    "end": "720639"
  },
  {
    "text": "or maybe repacking the event into",
    "start": "720639",
    "end": "722720"
  },
  {
    "text": "different form",
    "start": "722720",
    "end": "723920"
  },
  {
    "text": "something which you can do for every",
    "start": "723920",
    "end": "727200"
  },
  {
    "text": "event separately and second one",
    "start": "727200",
    "end": "729040"
  },
  {
    "text": "is so-called stateful stream processors",
    "start": "729040",
    "end": "731519"
  },
  {
    "text": "and",
    "start": "731519",
    "end": "733760"
  },
  {
    "text": "they whenever they process any new event",
    "start": "733760",
    "end": "736639"
  },
  {
    "text": "they also",
    "start": "736639",
    "end": "737519"
  },
  {
    "text": "keep all the history of previous events",
    "start": "737519",
    "end": "739519"
  },
  {
    "text": "which they have processed",
    "start": "739519",
    "end": "740959"
  },
  {
    "text": "examples here can be for example",
    "start": "740959",
    "end": "742639"
  },
  {
    "text": "calculating some aggregations",
    "start": "742639",
    "end": "745440"
  },
  {
    "text": "or maybe",
    "start": "745440",
    "end": "748160"
  },
  {
    "text": "doing some filtering based on the",
    "start": "749760",
    "end": "752000"
  },
  {
    "text": "previous history",
    "start": "752000",
    "end": "754399"
  },
  {
    "text": "and so on like i said there are many",
    "start": "754399",
    "end": "758000"
  },
  {
    "text": "different stream processing frameworks",
    "start": "758000",
    "end": "761200"
  },
  {
    "text": "on the market",
    "start": "761200",
    "end": "762320"
  },
  {
    "text": "but there are two which i would like to",
    "start": "762320",
    "end": "766399"
  },
  {
    "text": "specifically highlight in this",
    "start": "766399",
    "end": "768160"
  },
  {
    "text": "presentation",
    "start": "768160",
    "end": "769519"
  },
  {
    "text": "because they are native to the kafka",
    "start": "769519",
    "end": "771920"
  },
  {
    "text": "ecosystem and first one",
    "start": "771920",
    "end": "773360"
  },
  {
    "text": "is called k-sql",
    "start": "773360",
    "end": "776399"
  },
  {
    "text": "it allows you to do the stream",
    "start": "776399",
    "end": "778079"
  },
  {
    "text": "processing in a syntaxes which is very",
    "start": "778079",
    "end": "780560"
  },
  {
    "text": "very",
    "start": "780560",
    "end": "781040"
  },
  {
    "text": "sql-like which is very familiar to the",
    "start": "781040",
    "end": "783760"
  },
  {
    "text": "engineers",
    "start": "783760",
    "end": "785760"
  },
  {
    "text": "with such an easy sql like statement you",
    "start": "785760",
    "end": "788240"
  },
  {
    "text": "can actually define",
    "start": "788240",
    "end": "791040"
  },
  {
    "text": "which events from which topic you want",
    "start": "791040",
    "end": "794320"
  },
  {
    "text": "to process",
    "start": "794320",
    "end": "797040"
  },
  {
    "text": "which fields you want to extract from",
    "start": "797600",
    "end": "799839"
  },
  {
    "text": "them and to",
    "start": "799839",
    "end": "800880"
  },
  {
    "text": "which destination topic you want to",
    "start": "800880",
    "end": "802480"
  },
  {
    "text": "persist them",
    "start": "802480",
    "end": "804240"
  },
  {
    "text": "second one k sql is a good tool for",
    "start": "804240",
    "end": "808160"
  },
  {
    "text": "let's call them lightweight stream",
    "start": "808160",
    "end": "811120"
  },
  {
    "text": "processing",
    "start": "811120",
    "end": "811920"
  },
  {
    "text": "but sometimes you would want you might",
    "start": "811920",
    "end": "813839"
  },
  {
    "text": "want to do the um",
    "start": "813839",
    "end": "815680"
  },
  {
    "text": "uh some very sophisticated",
    "start": "815680",
    "end": "819040"
  },
  {
    "text": "uh logic it might be for example",
    "start": "819040",
    "end": "822079"
  },
  {
    "text": "um something related to your business",
    "start": "822079",
    "end": "824320"
  },
  {
    "text": "logic when you need to i don't know do",
    "start": "824320",
    "end": "825839"
  },
  {
    "text": "some kind of very specific",
    "start": "825839",
    "end": "828560"
  },
  {
    "text": "aggregations or transformations and so",
    "start": "828560",
    "end": "831519"
  },
  {
    "text": "on",
    "start": "831519",
    "end": "832000"
  },
  {
    "text": "and in this case kafka system provides",
    "start": "832000",
    "end": "834959"
  },
  {
    "text": "you",
    "start": "834959",
    "end": "835279"
  },
  {
    "text": "with the kafka streams library it allows",
    "start": "835279",
    "end": "837920"
  },
  {
    "text": "you to define the stream processing",
    "start": "837920",
    "end": "839839"
  },
  {
    "text": "tasks",
    "start": "839839",
    "end": "841360"
  },
  {
    "text": "as a java applications so whatever you",
    "start": "841360",
    "end": "844800"
  },
  {
    "text": "can express",
    "start": "844800",
    "end": "845600"
  },
  {
    "text": "in your java code you can do with your",
    "start": "845600",
    "end": "848560"
  },
  {
    "text": "stream processing",
    "start": "848560",
    "end": "850720"
  },
  {
    "text": "very good news is that both of the",
    "start": "850720",
    "end": "852720"
  },
  {
    "text": "frameworks",
    "start": "852720",
    "end": "853839"
  },
  {
    "text": "are can be actually extended if you need",
    "start": "853839",
    "end": "857440"
  },
  {
    "text": "to",
    "start": "857440",
    "end": "857760"
  },
  {
    "text": "implement something which is very very",
    "start": "857760",
    "end": "859199"
  },
  {
    "text": "much tailored towards your",
    "start": "859199",
    "end": "860880"
  },
  {
    "text": "business you can write the so-called",
    "start": "860880",
    "end": "863680"
  },
  {
    "text": "user-defined functions",
    "start": "863680",
    "end": "865440"
  },
  {
    "text": "basically you define the",
    "start": "865440",
    "end": "868639"
  },
  {
    "text": "java function and it can be whatever",
    "start": "868639",
    "end": "872160"
  },
  {
    "text": "like aggregation or it can do some",
    "start": "872160",
    "end": "874320"
  },
  {
    "text": "business logic",
    "start": "874320",
    "end": "875440"
  },
  {
    "text": "and then you can call this function boss",
    "start": "875440",
    "end": "878880"
  },
  {
    "text": "from the k sql like any sql function",
    "start": "878880",
    "end": "881920"
  },
  {
    "text": "here",
    "start": "881920",
    "end": "882800"
  },
  {
    "text": "or from your kafka streams application",
    "start": "882800",
    "end": "886399"
  },
  {
    "text": "and it can be everything it can",
    "start": "886399",
    "end": "889440"
  },
  {
    "text": "like it's already said be something very",
    "start": "889440",
    "end": "891600"
  },
  {
    "text": "much related towards your business logic",
    "start": "891600",
    "end": "894000"
  },
  {
    "text": "or it can also be some kind of fancy",
    "start": "894000",
    "end": "897279"
  },
  {
    "text": "machine learning",
    "start": "897279",
    "end": "898000"
  },
  {
    "text": "and stuff and it can be used for fraud",
    "start": "898000",
    "end": "900720"
  },
  {
    "text": "prevention for anomaly detection",
    "start": "900720",
    "end": "903120"
  },
  {
    "text": "anything so",
    "start": "903120",
    "end": "906160"
  },
  {
    "text": "that's the setup which we have adopted",
    "start": "906160",
    "end": "909199"
  },
  {
    "text": "at bolt",
    "start": "909199",
    "end": "910480"
  },
  {
    "text": "we ingest data from all the source",
    "start": "910480",
    "end": "912880"
  },
  {
    "text": "databases",
    "start": "912880",
    "end": "913600"
  },
  {
    "text": "we persist them into the kafka brokers",
    "start": "913600",
    "end": "916160"
  },
  {
    "text": "we do the stream processing with the",
    "start": "916160",
    "end": "917839"
  },
  {
    "text": "libraries i have mentioned",
    "start": "917839",
    "end": "920560"
  },
  {
    "text": "and also persist the results to kafka",
    "start": "920560",
    "end": "922800"
  },
  {
    "text": "and then",
    "start": "922800",
    "end": "923760"
  },
  {
    "text": "those results are consumed by number of",
    "start": "923760",
    "end": "926079"
  },
  {
    "text": "different consumers",
    "start": "926079",
    "end": "927360"
  },
  {
    "text": "we store some events to our data lake we",
    "start": "927360",
    "end": "930560"
  },
  {
    "text": "also",
    "start": "930560",
    "end": "931040"
  },
  {
    "text": "allow backend micro services to consume",
    "start": "931040",
    "end": "933519"
  },
  {
    "text": "those events",
    "start": "933519",
    "end": "934880"
  },
  {
    "text": "and do the business logic and decision",
    "start": "934880",
    "end": "938000"
  },
  {
    "text": "making on top of them",
    "start": "938000",
    "end": "941120"
  },
  {
    "start": "940000",
    "end": "1170000"
  },
  {
    "text": "which problems have encountered during",
    "start": "941120",
    "end": "943759"
  },
  {
    "text": "our",
    "start": "943759",
    "end": "944160"
  },
  {
    "text": "throughout our way when i started this",
    "start": "944160",
    "end": "947839"
  },
  {
    "text": "whole project",
    "start": "947839",
    "end": "948800"
  },
  {
    "text": "at that point there was no single",
    "start": "948800",
    "end": "952800"
  },
  {
    "text": "managed kafka offering on the market",
    "start": "952800",
    "end": "956480"
  },
  {
    "text": "as of now there are already few of them",
    "start": "956480",
    "end": "958480"
  },
  {
    "text": "available but there was no at that time",
    "start": "958480",
    "end": "961040"
  },
  {
    "text": "and if in case you are",
    "start": "961040",
    "end": "964880"
  },
  {
    "text": "planning to adopt kafka i actually would",
    "start": "964880",
    "end": "967920"
  },
  {
    "text": "advise you to go with",
    "start": "967920",
    "end": "969360"
  },
  {
    "text": "managed cloud offering because managing",
    "start": "969360",
    "end": "972560"
  },
  {
    "text": "setting up and managing kafka clusters",
    "start": "972560",
    "end": "976079"
  },
  {
    "text": "is not the easiest task believe me",
    "start": "976079",
    "end": "980079"
  },
  {
    "text": "that was it's not actually a problem but",
    "start": "981199",
    "end": "983920"
  },
  {
    "text": "that was like",
    "start": "983920",
    "end": "985519"
  },
  {
    "text": "one uh relatively big challenge and",
    "start": "985519",
    "end": "988720"
  },
  {
    "text": "obstacle we",
    "start": "988720",
    "end": "989519"
  },
  {
    "text": "which we had to overcome",
    "start": "989519",
    "end": "992639"
  },
  {
    "text": "second problem is actually",
    "start": "992639",
    "end": "996320"
  },
  {
    "text": "whenever you're working with stream",
    "start": "996320",
    "end": "997680"
  },
  {
    "text": "processing you can be getting",
    "start": "997680",
    "end": "999519"
  },
  {
    "text": "hundreds of thousands events per second",
    "start": "999519",
    "end": "1002079"
  },
  {
    "text": "and if someone comes to you and says",
    "start": "1002079",
    "end": "1003839"
  },
  {
    "text": "like hey",
    "start": "1003839",
    "end": "1004880"
  },
  {
    "text": "you know this number is not actually",
    "start": "1004880",
    "end": "1006480"
  },
  {
    "text": "correct good luck debugging it",
    "start": "1006480",
    "end": "1008959"
  },
  {
    "text": "because it's really really hard to find",
    "start": "1008959",
    "end": "1012560"
  },
  {
    "text": "where actually this error is happening",
    "start": "1012560",
    "end": "1016160"
  },
  {
    "text": "next issue is that unfortunately",
    "start": "1016160",
    "end": "1020079"
  },
  {
    "text": "but currently most of the stream",
    "start": "1020079",
    "end": "1022000"
  },
  {
    "text": "processing frameworks",
    "start": "1022000",
    "end": "1023680"
  },
  {
    "text": "they are jvm oriented mostly",
    "start": "1023680",
    "end": "1028959"
  },
  {
    "text": "so want it or not but you would need to",
    "start": "1028959",
    "end": "1030959"
  },
  {
    "text": "use either java",
    "start": "1030959",
    "end": "1032400"
  },
  {
    "text": "scala or some other jvm friendly",
    "start": "1032400",
    "end": "1036839"
  },
  {
    "text": "language",
    "start": "1036839",
    "end": "1038880"
  },
  {
    "text": "next issue which you have to understand",
    "start": "1038880",
    "end": "1042079"
  },
  {
    "text": "is that",
    "start": "1042079",
    "end": "1044400"
  },
  {
    "text": "let's say one of the big advantages of",
    "start": "1046000",
    "end": "1048480"
  },
  {
    "text": "kafka",
    "start": "1048480",
    "end": "1049280"
  },
  {
    "text": "is that it actually also keeps the",
    "start": "1049280",
    "end": "1051440"
  },
  {
    "text": "history of the events",
    "start": "1051440",
    "end": "1052880"
  },
  {
    "text": "it is configurable you can set it up to",
    "start": "1052880",
    "end": "1054640"
  },
  {
    "text": "one day one week or months",
    "start": "1054640",
    "end": "1056320"
  },
  {
    "text": "one year whatever and it actually allows",
    "start": "1056320",
    "end": "1059120"
  },
  {
    "text": "you to",
    "start": "1059120",
    "end": "1059679"
  },
  {
    "text": "replace some data from the past let's",
    "start": "1059679",
    "end": "1061600"
  },
  {
    "text": "say you have released some new logic",
    "start": "1061600",
    "end": "1064080"
  },
  {
    "text": "and later on a few days after that you",
    "start": "1064080",
    "end": "1066400"
  },
  {
    "text": "have realized that",
    "start": "1066400",
    "end": "1067520"
  },
  {
    "text": "there was a mistake there but",
    "start": "1067520",
    "end": "1070799"
  },
  {
    "text": "and now you can replay this um",
    "start": "1070799",
    "end": "1074160"
  },
  {
    "text": "history replay those events and correct",
    "start": "1074160",
    "end": "1077760"
  },
  {
    "text": "your uh make some adjustments towards",
    "start": "1077760",
    "end": "1080880"
  },
  {
    "text": "your business logic",
    "start": "1080880",
    "end": "1082160"
  },
  {
    "text": "but you should never think that you have",
    "start": "1082160",
    "end": "1084160"
  },
  {
    "text": "to replay only some specific piece of",
    "start": "1084160",
    "end": "1086160"
  },
  {
    "text": "data",
    "start": "1086160",
    "end": "1086880"
  },
  {
    "text": "because like i said stream is unbounded",
    "start": "1086880",
    "end": "1089840"
  },
  {
    "text": "flow of data so you should",
    "start": "1089840",
    "end": "1091520"
  },
  {
    "text": "always think of it in the following way",
    "start": "1091520",
    "end": "1094000"
  },
  {
    "text": "you should",
    "start": "1094000",
    "end": "1094880"
  },
  {
    "text": "that you start processing data from some",
    "start": "1094880",
    "end": "1097120"
  },
  {
    "text": "point",
    "start": "1097120",
    "end": "1097919"
  },
  {
    "text": "and you keep doing that afterwards",
    "start": "1097919",
    "end": "1102159"
  },
  {
    "text": "and other problems which we have seen",
    "start": "1102480",
    "end": "1104160"
  },
  {
    "text": "along the way are the um",
    "start": "1104160",
    "end": "1106320"
  },
  {
    "text": "let's say for example data deduplication",
    "start": "1106320",
    "end": "1110000"
  },
  {
    "text": "network is not reliable different",
    "start": "1110000",
    "end": "1112160"
  },
  {
    "text": "services can fail",
    "start": "1112160",
    "end": "1113840"
  },
  {
    "text": "and eventually it would lead to",
    "start": "1113840",
    "end": "1116880"
  },
  {
    "text": "duplicating some of the events",
    "start": "1116880",
    "end": "1118799"
  },
  {
    "text": "and so it is important so your consumers",
    "start": "1118799",
    "end": "1121840"
  },
  {
    "text": "are prepared for that",
    "start": "1121840",
    "end": "1124799"
  },
  {
    "text": "next one is types in compatibility",
    "start": "1124799",
    "end": "1128080"
  },
  {
    "text": "whenever you integrate many different",
    "start": "1128080",
    "end": "1130240"
  },
  {
    "text": "systems",
    "start": "1130240",
    "end": "1131760"
  },
  {
    "text": "and make them talk to each other you",
    "start": "1131760",
    "end": "1133600"
  },
  {
    "text": "have to be very very careful",
    "start": "1133600",
    "end": "1135600"
  },
  {
    "text": "so that they process all the data and",
    "start": "1135600",
    "end": "1138080"
  },
  {
    "text": "types",
    "start": "1138080",
    "end": "1138640"
  },
  {
    "text": "the same way and last but not the least",
    "start": "1138640",
    "end": "1141919"
  },
  {
    "text": "like i said if",
    "start": "1141919",
    "end": "1143039"
  },
  {
    "text": "you want to start sourcing the events",
    "start": "1143039",
    "end": "1145440"
  },
  {
    "text": "from your databases",
    "start": "1145440",
    "end": "1146799"
  },
  {
    "text": "you should also think about how do you",
    "start": "1146799",
    "end": "1149120"
  },
  {
    "text": "handle database schema migrations like",
    "start": "1149120",
    "end": "1151440"
  },
  {
    "text": "for example",
    "start": "1151440",
    "end": "1153039"
  },
  {
    "text": "adding some fields to the table or maybe",
    "start": "1153039",
    "end": "1155200"
  },
  {
    "text": "changing the type or creating new tables",
    "start": "1155200",
    "end": "1159279"
  },
  {
    "text": "that's all i wanted to talk about today",
    "start": "1160480",
    "end": "1163120"
  },
  {
    "text": "thank you very much for your attention",
    "start": "1163120",
    "end": "1165520"
  },
  {
    "text": "if you have any questions feel free to",
    "start": "1165520",
    "end": "1167280"
  },
  {
    "text": "reach me out thank you",
    "start": "1167280",
    "end": "1172400"
  }
]