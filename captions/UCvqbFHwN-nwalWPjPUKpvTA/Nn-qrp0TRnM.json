[
  {
    "start": "0",
    "end": "146000"
  },
  {
    "text": "welcome to the sig network deep dive",
    "start": "160",
    "end": "3040"
  },
  {
    "text": "this has been a collaborative set of",
    "start": "3040",
    "end": "4720"
  },
  {
    "text": "slides from the members of the",
    "start": "4720",
    "end": "6240"
  },
  {
    "text": "kubernetes sig network community",
    "start": "6240",
    "end": "8480"
  },
  {
    "text": "including myself franz j ricardo",
    "start": "8480",
    "end": "12160"
  },
  {
    "text": "rob emmanuel",
    "start": "12160",
    "end": "15200"
  },
  {
    "text": "so what is the area that is covered by",
    "start": "15200",
    "end": "17119"
  },
  {
    "text": "sig network",
    "start": "17119",
    "end": "18640"
  },
  {
    "text": "well it touches on all of the networking",
    "start": "18640",
    "end": "22000"
  },
  {
    "text": "aspects of the kubernetes ecosystem",
    "start": "22000",
    "end": "24960"
  },
  {
    "text": "this includes pod networking within in",
    "start": "24960",
    "end": "27840"
  },
  {
    "text": "between nodes",
    "start": "27840",
    "end": "29519"
  },
  {
    "text": "including interfaces such as cni and",
    "start": "29519",
    "end": "31920"
  },
  {
    "text": "ipam",
    "start": "31920",
    "end": "33200"
  },
  {
    "text": "cluster networking in and out",
    "start": "33200",
    "end": "36399"
  },
  {
    "text": "of the cluster network service",
    "start": "36399",
    "end": "39120"
  },
  {
    "text": "abstractions",
    "start": "39120",
    "end": "40160"
  },
  {
    "text": "such as load balancing of l4 l7 and",
    "start": "40160",
    "end": "44079"
  },
  {
    "text": "service discovery",
    "start": "44079",
    "end": "45280"
  },
  {
    "text": "so using systems such as dns",
    "start": "45280",
    "end": "48879"
  },
  {
    "text": "network policies i.e security and access",
    "start": "48879",
    "end": "52160"
  },
  {
    "text": "control",
    "start": "52160",
    "end": "53199"
  },
  {
    "text": "basically how you secure your pods and",
    "start": "53199",
    "end": "55280"
  },
  {
    "text": "workloads",
    "start": "55280",
    "end": "56800"
  },
  {
    "text": "and of course the apis associated with",
    "start": "56800",
    "end": "59520"
  },
  {
    "text": "these functions",
    "start": "59520",
    "end": "60719"
  },
  {
    "text": "and these apis include pod node",
    "start": "60719",
    "end": "64080"
  },
  {
    "text": "endpoint endpoint slice service ingress",
    "start": "64080",
    "end": "66720"
  },
  {
    "text": "gateway and network policy",
    "start": "66720",
    "end": "69760"
  },
  {
    "text": "for those of you who are interested we",
    "start": "69760",
    "end": "71360"
  },
  {
    "text": "have a well-attended zoom meeting",
    "start": "71360",
    "end": "73280"
  },
  {
    "text": "every other thursday and a busy slack",
    "start": "73280",
    "end": "76159"
  },
  {
    "text": "channel",
    "start": "76159",
    "end": "77040"
  },
  {
    "text": "and don't worry we will put this",
    "start": "77040",
    "end": "78720"
  },
  {
    "text": "information back up at the end",
    "start": "78720",
    "end": "80560"
  },
  {
    "text": "of this presentation as we only have a",
    "start": "80560",
    "end": "83280"
  },
  {
    "text": "35-minute slot",
    "start": "83280",
    "end": "84880"
  },
  {
    "text": "and there are many excellent intro",
    "start": "84880",
    "end": "86240"
  },
  {
    "text": "videos here are some previous intros and",
    "start": "86240",
    "end": "89119"
  },
  {
    "text": "deep dives the links shown here",
    "start": "89119",
    "end": "91840"
  },
  {
    "text": "we would like to take our 20 minutes to",
    "start": "91840",
    "end": "93759"
  },
  {
    "text": "give an update about exciting things",
    "start": "93759",
    "end": "95439"
  },
  {
    "text": "that have been happening in the sig",
    "start": "95439",
    "end": "97840"
  },
  {
    "text": "things that have landed things that the",
    "start": "97840",
    "end": "100159"
  },
  {
    "text": "sig is actively working on",
    "start": "100159",
    "end": "102479"
  },
  {
    "text": "and future directions okay",
    "start": "102479",
    "end": "105680"
  },
  {
    "text": "so what has been happening in the sig",
    "start": "105680",
    "end": "108720"
  },
  {
    "text": "there are many smaller improvements",
    "start": "108720",
    "end": "110159"
  },
  {
    "text": "features that people have requested",
    "start": "110159",
    "end": "112240"
  },
  {
    "text": "and apis have gone ga that have been",
    "start": "112240",
    "end": "114000"
  },
  {
    "text": "covered in detail before",
    "start": "114000",
    "end": "115360"
  },
  {
    "text": "such as endpoint slice and also there",
    "start": "115360",
    "end": "117759"
  },
  {
    "text": "are a couple of big items",
    "start": "117759",
    "end": "119920"
  },
  {
    "text": "dual stack which is support for ipv4 in",
    "start": "119920",
    "end": "122799"
  },
  {
    "text": "ipv6",
    "start": "122799",
    "end": "124159"
  },
  {
    "text": "gateway api which is the next iteration",
    "start": "124159",
    "end": "126479"
  },
  {
    "text": "of l4 l7 service",
    "start": "126479",
    "end": "128000"
  },
  {
    "text": "apis rethinking how to support",
    "start": "128000",
    "end": "131440"
  },
  {
    "text": "network topology in network routing",
    "start": "131440",
    "end": "134800"
  },
  {
    "text": "and finally network policy working group",
    "start": "134800",
    "end": "138000"
  },
  {
    "text": "which has already landed some features",
    "start": "138000",
    "end": "140879"
  },
  {
    "text": "and",
    "start": "140879",
    "end": "141280"
  },
  {
    "text": "are looking as well at a potential",
    "start": "141280",
    "end": "143680"
  },
  {
    "text": "version two",
    "start": "143680",
    "end": "144560"
  },
  {
    "text": "of the api let's talk about some of the",
    "start": "144560",
    "end": "147680"
  },
  {
    "text": "improvements to kubernetes networking",
    "start": "147680",
    "end": "149599"
  },
  {
    "text": "that have landed",
    "start": "149599",
    "end": "151280"
  },
  {
    "text": "first we have loosened the restriction",
    "start": "151280",
    "end": "153440"
  },
  {
    "text": "that a service type load balancer",
    "start": "153440",
    "end": "155519"
  },
  {
    "text": "can only support a single protocol this",
    "start": "155519",
    "end": "158319"
  },
  {
    "text": "is the multi-protocol services cap",
    "start": "158319",
    "end": "160879"
  },
  {
    "text": "and the link is there in the slide",
    "start": "160879",
    "end": "163200"
  },
  {
    "text": "basically",
    "start": "163200",
    "end": "164239"
  },
  {
    "text": "before this improvement you could only",
    "start": "164239",
    "end": "167040"
  },
  {
    "text": "have",
    "start": "167040",
    "end": "167440"
  },
  {
    "text": "a single protocol service as part of",
    "start": "167440",
    "end": "170560"
  },
  {
    "text": "your load balancer definition",
    "start": "170560",
    "end": "172480"
  },
  {
    "text": "with the new changes you can actually",
    "start": "172480",
    "end": "174800"
  },
  {
    "text": "have",
    "start": "174800",
    "end": "175519"
  },
  {
    "text": "multiple protocols supported as part of",
    "start": "175519",
    "end": "178800"
  },
  {
    "text": "your load balancer service",
    "start": "178800",
    "end": "180480"
  },
  {
    "text": "for example in this case you see a mixed",
    "start": "180480",
    "end": "182560"
  },
  {
    "text": "protocol service",
    "start": "182560",
    "end": "184080"
  },
  {
    "text": "that actually uses both udp and tcp",
    "start": "184080",
    "end": "188239"
  },
  {
    "text": "as part of the load balancer service it",
    "start": "188239",
    "end": "190720"
  },
  {
    "text": "is the case that since this is new",
    "start": "190720",
    "end": "192800"
  },
  {
    "text": "support actually depends on your",
    "start": "192800",
    "end": "194480"
  },
  {
    "text": "particular cloud provider",
    "start": "194480",
    "end": "196159"
  },
  {
    "text": "so please check the port status on your",
    "start": "196159",
    "end": "199040"
  },
  {
    "text": "service object",
    "start": "199040",
    "end": "200239"
  },
  {
    "text": "and if your cloud provider currently",
    "start": "200239",
    "end": "201840"
  },
  {
    "text": "does not support",
    "start": "201840",
    "end": "203840"
  },
  {
    "text": "having multiple protocols as a load",
    "start": "203840",
    "end": "205760"
  },
  {
    "text": "balancer service you will see this error",
    "start": "205760",
    "end": "208080"
  },
  {
    "text": "low bouncer mix protocol not supported",
    "start": "208080",
    "end": "211760"
  },
  {
    "text": "the next improvement that has been added",
    "start": "211760",
    "end": "213360"
  },
  {
    "text": "to kubernetes networking",
    "start": "213360",
    "end": "215040"
  },
  {
    "text": "is a way to disable different types of",
    "start": "215040",
    "end": "217920"
  },
  {
    "text": "lb ports",
    "start": "217920",
    "end": "219519"
  },
  {
    "text": "we have had feedback from users that",
    "start": "219519",
    "end": "224080"
  },
  {
    "text": "for certain cloud providers a low",
    "start": "224080",
    "end": "226239"
  },
  {
    "text": "bouncer service actually does not need a",
    "start": "226239",
    "end": "228640"
  },
  {
    "text": "node port",
    "start": "228640",
    "end": "229599"
  },
  {
    "text": "in order to function and the",
    "start": "229599",
    "end": "232799"
  },
  {
    "text": "need for node ports has actually caused",
    "start": "232799",
    "end": "235360"
  },
  {
    "text": "issues where",
    "start": "235360",
    "end": "236720"
  },
  {
    "text": "node ports have been allocated and have",
    "start": "236720",
    "end": "239200"
  },
  {
    "text": "been completely used",
    "start": "239200",
    "end": "240959"
  },
  {
    "text": "but actually they're not really part of",
    "start": "240959",
    "end": "243439"
  },
  {
    "text": "the functional load balancer",
    "start": "243439",
    "end": "245760"
  },
  {
    "text": "this restricts the number of load",
    "start": "245760",
    "end": "248319"
  },
  {
    "text": "balancer services that a user can use",
    "start": "248319",
    "end": "250720"
  },
  {
    "text": "with disable lb ports",
    "start": "250720",
    "end": "254239"
  },
  {
    "text": "we can set a flag on",
    "start": "254239",
    "end": "257440"
  },
  {
    "text": "allocate load balancer node ports and if",
    "start": "257440",
    "end": "259919"
  },
  {
    "text": "this is set to false",
    "start": "259919",
    "end": "261519"
  },
  {
    "text": "then creation of a load bouncer service",
    "start": "261519",
    "end": "264080"
  },
  {
    "text": "actually does not",
    "start": "264080",
    "end": "265360"
  },
  {
    "text": "also allocate a node port load balancer",
    "start": "265360",
    "end": "268560"
  },
  {
    "text": "and pod lifecycle has also seen",
    "start": "268560",
    "end": "270160"
  },
  {
    "text": "improvements in this past year",
    "start": "270160",
    "end": "271680"
  },
  {
    "text": "it has always been the case that for a",
    "start": "271680",
    "end": "273600"
  },
  {
    "text": "service with external traffic policy",
    "start": "273600",
    "end": "275759"
  },
  {
    "text": "equals local",
    "start": "275759",
    "end": "276960"
  },
  {
    "text": "when the pods in the service on a",
    "start": "276960",
    "end": "278479"
  },
  {
    "text": "specific node have been terminated",
    "start": "278479",
    "end": "280400"
  },
  {
    "text": "there may be a period in time when the",
    "start": "280400",
    "end": "282320"
  },
  {
    "text": "external lb health check has not been",
    "start": "282320",
    "end": "284560"
  },
  {
    "text": "updated",
    "start": "284560",
    "end": "285360"
  },
  {
    "text": "which causes traffic to be black hole",
    "start": "285360",
    "end": "287040"
  },
  {
    "text": "during this time interval the pod may",
    "start": "287040",
    "end": "288880"
  },
  {
    "text": "still be gracefully shutting down",
    "start": "288880",
    "end": "290479"
  },
  {
    "text": "but will not receive traffic we can see",
    "start": "290479",
    "end": "292800"
  },
  {
    "text": "this illustrated in the diagram",
    "start": "292800",
    "end": "295040"
  },
  {
    "text": "below where the pods are terminated the",
    "start": "295040",
    "end": "298160"
  },
  {
    "text": "yellow lightning bolt but in that",
    "start": "298160",
    "end": "300000"
  },
  {
    "text": "interim time between the termination",
    "start": "300000",
    "end": "303120"
  },
  {
    "text": "and the health check there is potential",
    "start": "303120",
    "end": "305759"
  },
  {
    "text": "for a black hole",
    "start": "305759",
    "end": "306800"
  },
  {
    "text": "by tracking terminating endpoints in a",
    "start": "306800",
    "end": "308960"
  },
  {
    "text": "separate state in an endpoint slice",
    "start": "308960",
    "end": "311039"
  },
  {
    "text": "we are able to model pods in the",
    "start": "311039",
    "end": "312880"
  },
  {
    "text": "graceful shutdown state",
    "start": "312880",
    "end": "315199"
  },
  {
    "text": "while in this state the traffic steering",
    "start": "315199",
    "end": "317120"
  },
  {
    "text": "behavior of external traffic policy",
    "start": "317120",
    "end": "319280"
  },
  {
    "text": "local",
    "start": "319280",
    "end": "319840"
  },
  {
    "text": "q proxy is somewhat changed first",
    "start": "319840",
    "end": "322400"
  },
  {
    "text": "traffic will be sent to ready",
    "start": "322400",
    "end": "324160"
  },
  {
    "text": "and terminating pods if no ready pods",
    "start": "324160",
    "end": "327280"
  },
  {
    "text": "exist then the traffic will be sent to",
    "start": "327280",
    "end": "329120"
  },
  {
    "text": "not ready",
    "start": "329120",
    "end": "330080"
  },
  {
    "text": "and terminating pods in essence we try",
    "start": "330080",
    "end": "332639"
  },
  {
    "text": "to deliver traffic",
    "start": "332639",
    "end": "333680"
  },
  {
    "text": "as much as possible to endpoints that",
    "start": "333680",
    "end": "335440"
  },
  {
    "text": "exist as opposed to black holing the",
    "start": "335440",
    "end": "337440"
  },
  {
    "text": "traffic prematurely",
    "start": "337440",
    "end": "339600"
  },
  {
    "text": "and now manuel will tell us about",
    "start": "339600",
    "end": "341280"
  },
  {
    "text": "endpoint slice another big addition the",
    "start": "341280",
    "end": "343680"
  },
  {
    "text": "sig network has been working on",
    "start": "343680",
    "end": "345600"
  },
  {
    "text": "is graduating endpoint slices to general",
    "start": "345600",
    "end": "348400"
  },
  {
    "text": "availability in kubernetes 121.",
    "start": "348400",
    "end": "351840"
  },
  {
    "text": "slices were introduced as a beta feature",
    "start": "351840",
    "end": "353919"
  },
  {
    "text": "to kubernetes and 117",
    "start": "353919",
    "end": "356080"
  },
  {
    "text": "and they offer a more simple way to",
    "start": "356080",
    "end": "357919"
  },
  {
    "text": "track network ends points within",
    "start": "357919",
    "end": "359520"
  },
  {
    "text": "kubernetes at scale",
    "start": "359520",
    "end": "361199"
  },
  {
    "text": "previously the endpoint object hold all",
    "start": "361199",
    "end": "364560"
  },
  {
    "text": "endpoints of the pots correlating to the",
    "start": "364560",
    "end": "367039"
  },
  {
    "text": "given surface object",
    "start": "367039",
    "end": "368639"
  },
  {
    "text": "and therefore could grow quite big in",
    "start": "368639",
    "end": "371120"
  },
  {
    "text": "case of",
    "start": "371120",
    "end": "371840"
  },
  {
    "text": "lots of pots with endpoint slices those",
    "start": "371840",
    "end": "374720"
  },
  {
    "text": "gigantic",
    "start": "374720",
    "end": "375680"
  },
  {
    "text": "endpoint resources would be splitted",
    "start": "375680",
    "end": "378240"
  },
  {
    "text": "into",
    "start": "378240",
    "end": "378720"
  },
  {
    "text": "more granular endpoint slices where the",
    "start": "378720",
    "end": "381360"
  },
  {
    "text": "endpoint slices",
    "start": "381360",
    "end": "382400"
  },
  {
    "text": "only hold the subpart of addresses",
    "start": "382400",
    "end": "385600"
  },
  {
    "text": "for the pots if noah pot changes its",
    "start": "385600",
    "end": "389039"
  },
  {
    "text": "endpoint",
    "start": "389039",
    "end": "389840"
  },
  {
    "text": "only this endpoint slices needs to",
    "start": "389840",
    "end": "391840"
  },
  {
    "text": "update as well",
    "start": "391840",
    "end": "392960"
  },
  {
    "text": "resulting in way less and way less",
    "start": "392960",
    "end": "395600"
  },
  {
    "text": "consumption of for example memory and",
    "start": "395600",
    "end": "397280"
  },
  {
    "text": "network",
    "start": "397280",
    "end": "398000"
  },
  {
    "text": "big endpoint object previously caused",
    "start": "398000",
    "end": "400479"
  },
  {
    "text": "issues in different",
    "start": "400479",
    "end": "401919"
  },
  {
    "text": "in different kubernetes parts such as",
    "start": "401919",
    "end": "405199"
  },
  {
    "text": "the api or",
    "start": "405199",
    "end": "406240"
  },
  {
    "text": "etcd as it was just grown so big and",
    "start": "406240",
    "end": "409520"
  },
  {
    "text": "therefore scaling was difficult",
    "start": "409520",
    "end": "411680"
  },
  {
    "text": "with this new feature this becomes",
    "start": "411680",
    "end": "413440"
  },
  {
    "text": "finally easy again endpoint slices",
    "start": "413440",
    "end": "415520"
  },
  {
    "text": "support",
    "start": "415520",
    "end": "416280"
  },
  {
    "text": "ipv4 ipv6 and fqdns",
    "start": "416280",
    "end": "420560"
  },
  {
    "text": "finally there is an important security",
    "start": "420560",
    "end": "422560"
  },
  {
    "text": "related update around the service",
    "start": "422560",
    "end": "424800"
  },
  {
    "text": "external ips feature use of the service",
    "start": "424800",
    "end": "427520"
  },
  {
    "text": "external ips feature",
    "start": "427520",
    "end": "429120"
  },
  {
    "text": "allows users to specify an ip directly",
    "start": "429120",
    "end": "432160"
  },
  {
    "text": "as a way to integrate with manually",
    "start": "432160",
    "end": "433840"
  },
  {
    "text": "configured external load balancers",
    "start": "433840",
    "end": "436080"
  },
  {
    "text": "unfortunately it is impossible for",
    "start": "436080",
    "end": "438080"
  },
  {
    "text": "kubernetes to determine whether or not",
    "start": "438080",
    "end": "440240"
  },
  {
    "text": "the ip specified actually belongs to the",
    "start": "440240",
    "end": "442639"
  },
  {
    "text": "user",
    "start": "442639",
    "end": "443440"
  },
  {
    "text": "or is an internet ip that they might be",
    "start": "443440",
    "end": "445680"
  },
  {
    "text": "spoofing",
    "start": "445680",
    "end": "446720"
  },
  {
    "text": "this can cause unwanted traffic capture",
    "start": "446720",
    "end": "449199"
  },
  {
    "text": "in the cluster",
    "start": "449199",
    "end": "450080"
  },
  {
    "text": "as external ips are a ga feature that",
    "start": "450080",
    "end": "453280"
  },
  {
    "text": "is in use the recommendation from sig",
    "start": "453280",
    "end": "455599"
  },
  {
    "text": "network is to disable this feature",
    "start": "455599",
    "end": "457440"
  },
  {
    "text": "by default using an admission controller",
    "start": "457440",
    "end": "460000"
  },
  {
    "text": "those who continue to use the feature",
    "start": "460000",
    "end": "461599"
  },
  {
    "text": "should think about how they will defend",
    "start": "461599",
    "end": "463120"
  },
  {
    "start": "463000",
    "end": "610000"
  },
  {
    "text": "against this attack vector",
    "start": "463120",
    "end": "465440"
  },
  {
    "text": "let's now cover some of the big changes",
    "start": "465440",
    "end": "467919"
  },
  {
    "text": "that have been going on in sig network",
    "start": "467919",
    "end": "470720"
  },
  {
    "text": "first exciting news is that dual stack",
    "start": "470720",
    "end": "472800"
  },
  {
    "text": "support is progressing to beta",
    "start": "472800",
    "end": "475120"
  },
  {
    "text": "so what is dual stack support dual stack",
    "start": "475120",
    "end": "477599"
  },
  {
    "text": "allows all kubernetes networking",
    "start": "477599",
    "end": "479280"
  },
  {
    "text": "components",
    "start": "479280",
    "end": "480080"
  },
  {
    "text": "that is pods services and nodes to have",
    "start": "480080",
    "end": "482560"
  },
  {
    "text": "both ipv4 and ipv6 addresses at the same",
    "start": "482560",
    "end": "485759"
  },
  {
    "text": "time",
    "start": "485759",
    "end": "486560"
  },
  {
    "text": "also as part of the dual stack effort is",
    "start": "486560",
    "end": "488560"
  },
  {
    "text": "the ability for clusters to migrate from",
    "start": "488560",
    "end": "490879"
  },
  {
    "text": "single stack support",
    "start": "490879",
    "end": "492400"
  },
  {
    "text": "to being dual stack enabled as you can",
    "start": "492400",
    "end": "495520"
  },
  {
    "text": "imagine",
    "start": "495520",
    "end": "496080"
  },
  {
    "text": "with all seamless migrations there needs",
    "start": "496080",
    "end": "498160"
  },
  {
    "text": "to be careful design to make the smooth",
    "start": "498160",
    "end": "500000"
  },
  {
    "text": "for the user",
    "start": "500000",
    "end": "501599"
  },
  {
    "text": "we expect that services in a dual stack",
    "start": "501599",
    "end": "503840"
  },
  {
    "text": "cluster will operate in single stack or",
    "start": "503840",
    "end": "506160"
  },
  {
    "text": "both",
    "start": "506160",
    "end": "507199"
  },
  {
    "text": "services from a migraine cluster will",
    "start": "507199",
    "end": "509280"
  },
  {
    "text": "have previous semantics preserved",
    "start": "509280",
    "end": "513200"
  },
  {
    "text": "details on the dual stack implementation",
    "start": "513200",
    "end": "516399"
  },
  {
    "text": "it basically requires kubernetes 120 or",
    "start": "516399",
    "end": "519279"
  },
  {
    "text": "higher",
    "start": "519279",
    "end": "520159"
  },
  {
    "text": "and the implementation behavior has",
    "start": "520159",
    "end": "522080"
  },
  {
    "text": "changed from previous alpha semantics",
    "start": "522080",
    "end": "525120"
  },
  {
    "text": "you will need to enable dual stack using",
    "start": "525120",
    "end": "527760"
  },
  {
    "text": "ipv6",
    "start": "527760",
    "end": "529040"
  },
  {
    "text": "dual stack equals true feature gate ipv4",
    "start": "529040",
    "end": "532480"
  },
  {
    "text": "ipv6 ranges will of course need to be",
    "start": "532480",
    "end": "535120"
  },
  {
    "text": "specified at cluster creation time",
    "start": "535120",
    "end": "538320"
  },
  {
    "text": "note that when converting from a single",
    "start": "538320",
    "end": "540000"
  },
  {
    "text": "stack to a dual stack cluster",
    "start": "540000",
    "end": "542640"
  },
  {
    "text": "all of the existing services will",
    "start": "542640",
    "end": "544240"
  },
  {
    "text": "automatically inherit",
    "start": "544240",
    "end": "546080"
  },
  {
    "text": "single stack with ipv4 this preserves",
    "start": "546080",
    "end": "549200"
  },
  {
    "text": "the semantics of the current",
    "start": "549200",
    "end": "551040"
  },
  {
    "text": "services to enable ipv6",
    "start": "551040",
    "end": "554399"
  },
  {
    "text": "on an existing service you will need to",
    "start": "554399",
    "end": "556880"
  },
  {
    "text": "recreate your service",
    "start": "556880",
    "end": "558240"
  },
  {
    "text": "in dual stack mode",
    "start": "558240",
    "end": "561360"
  },
  {
    "text": "this slide shows a summary of the",
    "start": "561519",
    "end": "563519"
  },
  {
    "text": "changes you will see",
    "start": "563519",
    "end": "564560"
  },
  {
    "text": "in the kubernetes api services will have",
    "start": "564560",
    "end": "567680"
  },
  {
    "text": "a new field",
    "start": "567680",
    "end": "568920"
  },
  {
    "text": "ipfamilypolicy this allows you to",
    "start": "568920",
    "end": "571519"
  },
  {
    "text": "determine what kind of dual stack",
    "start": "571519",
    "end": "573279"
  },
  {
    "text": "service you want",
    "start": "573279",
    "end": "574560"
  },
  {
    "text": "independent of how the cluster is",
    "start": "574560",
    "end": "576480"
  },
  {
    "text": "configured",
    "start": "576480",
    "end": "577760"
  },
  {
    "text": "single stack means that you are",
    "start": "577760",
    "end": "579279"
  },
  {
    "text": "explicitly requesting a particular stack",
    "start": "579279",
    "end": "582000"
  },
  {
    "text": "and also you have to set ip families to",
    "start": "582000",
    "end": "584080"
  },
  {
    "text": "choose which stack is to be used",
    "start": "584080",
    "end": "586560"
  },
  {
    "text": "prefer means that you would like to be",
    "start": "586560",
    "end": "588640"
  },
  {
    "text": "dual stack",
    "start": "588640",
    "end": "590000"
  },
  {
    "text": "prefer means that you would like to be",
    "start": "590000",
    "end": "591519"
  },
  {
    "text": "dual stack if it is available",
    "start": "591519",
    "end": "593279"
  },
  {
    "text": "and the system will choose for you",
    "start": "593279",
    "end": "595200"
  },
  {
    "text": "require means that dual stack must be",
    "start": "595200",
    "end": "597440"
  },
  {
    "text": "enabled",
    "start": "597440",
    "end": "598320"
  },
  {
    "text": "along with the policy is a list of",
    "start": "598320",
    "end": "599839"
  },
  {
    "text": "preferences order does matter",
    "start": "599839",
    "end": "601519"
  },
  {
    "text": "when looking at ip families the other",
    "start": "601519",
    "end": "603680"
  },
  {
    "text": "resources such as pod and node",
    "start": "603680",
    "end": "605680"
  },
  {
    "text": "have their ip related fields pluralized",
    "start": "605680",
    "end": "607920"
  },
  {
    "text": "in a straightforward manner",
    "start": "607920",
    "end": "611120"
  },
  {
    "start": "610000",
    "end": "776000"
  },
  {
    "text": "gateway api is another major effort in",
    "start": "611600",
    "end": "614160"
  },
  {
    "text": "the sig",
    "start": "614160",
    "end": "616079"
  },
  {
    "text": "the goal of the gateway api is to create",
    "start": "616079",
    "end": "618640"
  },
  {
    "text": "a modern set of apis for deploying l4",
    "start": "618640",
    "end": "621200"
  },
  {
    "text": "and l7 routing in kubernetes",
    "start": "621200",
    "end": "624240"
  },
  {
    "text": "the design aims to be generic expressive",
    "start": "624240",
    "end": "627600"
  },
  {
    "text": "extensible and role oriented",
    "start": "627600",
    "end": "630880"
  },
  {
    "text": "we have seen the trend for kubernetes",
    "start": "630880",
    "end": "632480"
  },
  {
    "text": "user personas to shift from",
    "start": "632480",
    "end": "634320"
  },
  {
    "text": "empowered single developers towards a",
    "start": "634320",
    "end": "636720"
  },
  {
    "text": "more role-oriented model where many",
    "start": "636720",
    "end": "638800"
  },
  {
    "text": "different teams may collaborate together",
    "start": "638800",
    "end": "640640"
  },
  {
    "text": "to deploy",
    "start": "640640",
    "end": "641360"
  },
  {
    "text": "an application some common roles that we",
    "start": "641360",
    "end": "644079"
  },
  {
    "text": "are thinking about",
    "start": "644079",
    "end": "645120"
  },
  {
    "text": "include the infrastructure provider who",
    "start": "645120",
    "end": "647760"
  },
  {
    "text": "manages the underlying infrastructure of",
    "start": "647760",
    "end": "649680"
  },
  {
    "text": "the cluster",
    "start": "649680",
    "end": "651040"
  },
  {
    "text": "cluster operators who deal with cluster",
    "start": "651040",
    "end": "652880"
  },
  {
    "text": "global configuration",
    "start": "652880",
    "end": "654640"
  },
  {
    "text": "and application developers who deploy",
    "start": "654640",
    "end": "656560"
  },
  {
    "text": "their apps and workloads",
    "start": "656560",
    "end": "660000"
  },
  {
    "text": "the gateway api has three main goals at",
    "start": "660000",
    "end": "662880"
  },
  {
    "text": "the high level",
    "start": "662880",
    "end": "664640"
  },
  {
    "text": "one better model personas and roles like",
    "start": "664640",
    "end": "667279"
  },
  {
    "text": "we described",
    "start": "667279",
    "end": "668399"
  },
  {
    "text": "previously support modern load balancing",
    "start": "668399",
    "end": "671920"
  },
  {
    "text": "features with",
    "start": "671920",
    "end": "672839"
  },
  {
    "text": "predictability maybe not perfect",
    "start": "672839",
    "end": "674720"
  },
  {
    "text": "portability but at least predictable",
    "start": "674720",
    "end": "676480"
  },
  {
    "text": "portability",
    "start": "676480",
    "end": "678320"
  },
  {
    "text": "three create standard mechanisms for",
    "start": "678320",
    "end": "680480"
  },
  {
    "text": "extension growth",
    "start": "680480",
    "end": "682000"
  },
  {
    "text": "implementation and vendor-specific",
    "start": "682000",
    "end": "683760"
  },
  {
    "text": "behaviors",
    "start": "683760",
    "end": "685279"
  },
  {
    "text": "you will see that to accomplish these",
    "start": "685279",
    "end": "686720"
  },
  {
    "text": "things we are focusing on",
    "start": "686720",
    "end": "688720"
  },
  {
    "text": "creating a scalable resource model that",
    "start": "688720",
    "end": "690720"
  },
  {
    "text": "can work well with our back",
    "start": "690720",
    "end": "692720"
  },
  {
    "text": "creating a notion of levels of support",
    "start": "692720",
    "end": "694399"
  },
  {
    "text": "and conformance akin to conformance",
    "start": "694399",
    "end": "696160"
  },
  {
    "text": "profiles in kubernetes",
    "start": "696160",
    "end": "698079"
  },
  {
    "text": "and creating a flexible resource model",
    "start": "698079",
    "end": "699760"
  },
  {
    "text": "that allows for some degree",
    "start": "699760",
    "end": "701360"
  },
  {
    "text": "of polymorphism when dealing with",
    "start": "701360",
    "end": "703040"
  },
  {
    "text": "resource relationships",
    "start": "703040",
    "end": "705440"
  },
  {
    "text": "this slide shows a sketch of how the api",
    "start": "705440",
    "end": "707760"
  },
  {
    "text": "objects relate",
    "start": "707760",
    "end": "708640"
  },
  {
    "text": "in the gateway api the infrastructure",
    "start": "708640",
    "end": "711120"
  },
  {
    "text": "provider will deal with creating gateway",
    "start": "711120",
    "end": "712959"
  },
  {
    "text": "class resources that determine what kind",
    "start": "712959",
    "end": "714959"
  },
  {
    "text": "of gateways will be possible to",
    "start": "714959",
    "end": "716399"
  },
  {
    "text": "provision in a given cluster",
    "start": "716399",
    "end": "718880"
  },
  {
    "text": "the cluster operator and or application",
    "start": "718880",
    "end": "721040"
  },
  {
    "text": "developer",
    "start": "721040",
    "end": "722000"
  },
  {
    "text": "will create gateway objects that",
    "start": "722000",
    "end": "723519"
  },
  {
    "text": "represent specific instances",
    "start": "723519",
    "end": "725360"
  },
  {
    "text": "of load balancers and the ways that",
    "start": "725360",
    "end": "727040"
  },
  {
    "text": "users can access these services",
    "start": "727040",
    "end": "729360"
  },
  {
    "text": "finally application developers will",
    "start": "729360",
    "end": "731279"
  },
  {
    "text": "write routes that model their",
    "start": "731279",
    "end": "732480"
  },
  {
    "text": "applications",
    "start": "732480",
    "end": "733680"
  },
  {
    "text": "note that routes are not limited to hdp",
    "start": "733680",
    "end": "735839"
  },
  {
    "text": "and l7 but can also be l4",
    "start": "735839",
    "end": "738480"
  },
  {
    "text": "in fact the type of the route object is",
    "start": "738480",
    "end": "740079"
  },
  {
    "text": "protocol specific",
    "start": "740079",
    "end": "741519"
  },
  {
    "text": "and this allows for a lot of room for",
    "start": "741519",
    "end": "744000"
  },
  {
    "text": "extension to custom protocol types",
    "start": "744000",
    "end": "747440"
  },
  {
    "text": "so we're really excited to announce that",
    "start": "747440",
    "end": "749279"
  },
  {
    "text": "the v1 alpha 1 version has been cut",
    "start": "749279",
    "end": "752000"
  },
  {
    "text": "and now there are at least six different",
    "start": "752000",
    "end": "754800"
  },
  {
    "text": "implementations in the works",
    "start": "754800",
    "end": "757279"
  },
  {
    "text": "please visit the website for more",
    "start": "757279",
    "end": "758720"
  },
  {
    "text": "details v1 alpha 1",
    "start": "758720",
    "end": "761120"
  },
  {
    "text": "includes features such as l4 and l7 load",
    "start": "761120",
    "end": "763920"
  },
  {
    "text": "balancing",
    "start": "763920",
    "end": "764880"
  },
  {
    "text": "advanced tls configuration beyond what",
    "start": "764880",
    "end": "767040"
  },
  {
    "text": "is currently possible with ingress",
    "start": "767040",
    "end": "769360"
  },
  {
    "text": "traffic splitting traffic mirroring",
    "start": "769360",
    "end": "771040"
  },
  {
    "text": "header-based routing and modification",
    "start": "771040",
    "end": "773200"
  },
  {
    "text": "and a lot more is in progress",
    "start": "773200",
    "end": "776800"
  },
  {
    "start": "776000",
    "end": "891000"
  },
  {
    "text": "support for awareness of network",
    "start": "777440",
    "end": "779440"
  },
  {
    "text": "topology is another area where the sig",
    "start": "779440",
    "end": "781839"
  },
  {
    "text": "is focusing its efforts",
    "start": "781839",
    "end": "784800"
  },
  {
    "text": "in kubernetes 121 we deprecated",
    "start": "784800",
    "end": "788160"
  },
  {
    "text": "the old alpha topology implementation",
    "start": "788160",
    "end": "792079"
  },
  {
    "text": "after a lot of discussion it turns out",
    "start": "792079",
    "end": "793920"
  },
  {
    "text": "that the approach",
    "start": "793920",
    "end": "795279"
  },
  {
    "text": "taken was likely too inflexible and much",
    "start": "795279",
    "end": "798560"
  },
  {
    "text": "too prescriptive for the long-term",
    "start": "798560",
    "end": "800079"
  },
  {
    "text": "evolution of kubernetes",
    "start": "800079",
    "end": "802240"
  },
  {
    "text": "we have now instead moved towards a",
    "start": "802240",
    "end": "804639"
  },
  {
    "text": "simpler approach",
    "start": "804639",
    "end": "806639"
  },
  {
    "text": "first we handled the special case of a",
    "start": "806639",
    "end": "809360"
  },
  {
    "text": "node local daemon set",
    "start": "809360",
    "end": "811279"
  },
  {
    "text": "as a special case rather than bundling",
    "start": "811279",
    "end": "813760"
  },
  {
    "text": "it with the generic topology notion",
    "start": "813760",
    "end": "816320"
  },
  {
    "text": "and this is internal traffic policy",
    "start": "816320",
    "end": "819760"
  },
  {
    "text": "second for topology aware network",
    "start": "819760",
    "end": "823120"
  },
  {
    "text": "routing",
    "start": "823120",
    "end": "823600"
  },
  {
    "text": "we use endpoint slice and a controller",
    "start": "823600",
    "end": "826079"
  },
  {
    "text": "to manage the algorithm",
    "start": "826079",
    "end": "828000"
  },
  {
    "text": "this makes the policy more decoupled in",
    "start": "828000",
    "end": "830240"
  },
  {
    "text": "the system",
    "start": "830240",
    "end": "831519"
  },
  {
    "text": "for the alpha we have a controller that",
    "start": "831519",
    "end": "833680"
  },
  {
    "text": "allocates endpoints proportionally with",
    "start": "833680",
    "end": "835680"
  },
  {
    "text": "hints",
    "start": "835680",
    "end": "836480"
  },
  {
    "text": "that q proxy can consume each service",
    "start": "836480",
    "end": "839920"
  },
  {
    "text": "can now opt into this algorithm using",
    "start": "839920",
    "end": "842079"
  },
  {
    "text": "the annotation",
    "start": "842079",
    "end": "844120"
  },
  {
    "text": "service.kubernetes.io topology aware",
    "start": "844120",
    "end": "847120"
  },
  {
    "text": "hints",
    "start": "847120",
    "end": "849519"
  },
  {
    "text": "this slide gives an example of what",
    "start": "849920",
    "end": "851839"
  },
  {
    "text": "happens when using the topology hints",
    "start": "851839",
    "end": "855440"
  },
  {
    "text": "given three zones with an equivalent",
    "start": "855440",
    "end": "857680"
  },
  {
    "text": "amount of",
    "start": "857680",
    "end": "858560"
  },
  {
    "text": "node capacity pod endpoints should be",
    "start": "858560",
    "end": "861760"
  },
  {
    "text": "distributed evenly among them",
    "start": "861760",
    "end": "864240"
  },
  {
    "text": "in this example zone a has one more",
    "start": "864240",
    "end": "866560"
  },
  {
    "text": "endpoint than it needs",
    "start": "866560",
    "end": "868079"
  },
  {
    "text": "and so that extra endpoint is then",
    "start": "868079",
    "end": "870000"
  },
  {
    "text": "allocated to zone c",
    "start": "870000",
    "end": "872560"
  },
  {
    "text": "the original behavior of q proxy without",
    "start": "872560",
    "end": "875360"
  },
  {
    "text": "topology aware routing",
    "start": "875360",
    "end": "877040"
  },
  {
    "text": "is to only use the hint for all zones",
    "start": "877040",
    "end": "880320"
  },
  {
    "text": "which is described in this original",
    "start": "880320",
    "end": "882959"
  },
  {
    "text": "section of the diagram",
    "start": "882959",
    "end": "884480"
  },
  {
    "text": "whereas the smarter zone aware cube",
    "start": "884480",
    "end": "886160"
  },
  {
    "text": "proxy will use the zonal hints and",
    "start": "886160",
    "end": "887920"
  },
  {
    "text": "distribute",
    "start": "887920",
    "end": "888959"
  },
  {
    "text": "traffic accordingly",
    "start": "888959",
    "end": "892079"
  },
  {
    "start": "891000",
    "end": "1040000"
  },
  {
    "text": "network policy is another area that the",
    "start": "892079",
    "end": "894399"
  },
  {
    "text": "sig is working on of the most voted",
    "start": "894399",
    "end": "898720"
  },
  {
    "text": "requests",
    "start": "898720",
    "end": "899440"
  },
  {
    "text": "has been of a port range api similar to",
    "start": "899440",
    "end": "902480"
  },
  {
    "text": "what many cni providers already have",
    "start": "902480",
    "end": "904959"
  },
  {
    "text": "to this effect we've added this the",
    "start": "904959",
    "end": "906560"
  },
  {
    "text": "kubernetes api now",
    "start": "906560",
    "end": "908240"
  },
  {
    "text": "you can test it out by adding an end",
    "start": "908240",
    "end": "910240"
  },
  {
    "text": "port field to your network policy",
    "start": "910240",
    "end": "912000"
  },
  {
    "text": "definition also we have worked with the",
    "start": "912000",
    "end": "914959"
  },
  {
    "text": "api machinery team to put out default",
    "start": "914959",
    "end": "917199"
  },
  {
    "text": "labels on all namespaces",
    "start": "917199",
    "end": "919519"
  },
  {
    "text": "this is a common thing that we have",
    "start": "919519",
    "end": "921279"
  },
  {
    "text": "heard which is how to select a namespace",
    "start": "921279",
    "end": "923680"
  },
  {
    "text": "when i don't",
    "start": "923680",
    "end": "924639"
  },
  {
    "text": "have the rbac permissions to set labels",
    "start": "924639",
    "end": "928079"
  },
  {
    "text": "thanks to our friends in api machinery",
    "start": "928079",
    "end": "930000"
  },
  {
    "text": "for collaborating on this",
    "start": "930000",
    "end": "933040"
  },
  {
    "text": "the sig has been collaborating on",
    "start": "933040",
    "end": "935040"
  },
  {
    "text": "cluster network policy",
    "start": "935040",
    "end": "936560"
  },
  {
    "text": "implementations this will allow",
    "start": "936560",
    "end": "938800"
  },
  {
    "text": "administrators to help define",
    "start": "938800",
    "end": "940560"
  },
  {
    "text": "defaults that apply across multiple",
    "start": "940560",
    "end": "942399"
  },
  {
    "text": "namespaces",
    "start": "942399",
    "end": "943680"
  },
  {
    "text": "this work is very early days but the",
    "start": "943680",
    "end": "946560"
  },
  {
    "text": "kept is now available and we would love",
    "start": "946560",
    "end": "948399"
  },
  {
    "text": "for anyone in the security or",
    "start": "948399",
    "end": "949759"
  },
  {
    "text": "administrative space to leave some",
    "start": "949759",
    "end": "951519"
  },
  {
    "text": "feedback",
    "start": "951519",
    "end": "952959"
  },
  {
    "text": "also we've worked with sig testing to",
    "start": "952959",
    "end": "955040"
  },
  {
    "text": "make sure that the network policy api is",
    "start": "955040",
    "end": "957199"
  },
  {
    "text": "exercised on all relevant cnis that",
    "start": "957199",
    "end": "959519"
  },
  {
    "text": "support network policies",
    "start": "959519",
    "end": "962480"
  },
  {
    "text": "these are the early days for the cap to",
    "start": "962480",
    "end": "965120"
  },
  {
    "text": "define",
    "start": "965120",
    "end": "965839"
  },
  {
    "text": "cluster network policies once this kept",
    "start": "965839",
    "end": "968560"
  },
  {
    "text": "merges different cni's",
    "start": "968560",
    "end": "970399"
  },
  {
    "text": "with up to now bespoke network policy",
    "start": "970399",
    "end": "972959"
  },
  {
    "text": "apis will be able to converge",
    "start": "972959",
    "end": "975120"
  },
  {
    "text": "on a coming upstream cluster network",
    "start": "975120",
    "end": "977759"
  },
  {
    "text": "policy covers",
    "start": "977759",
    "end": "978800"
  },
  {
    "text": "the use cases of being able to enable",
    "start": "978800",
    "end": "981920"
  },
  {
    "text": "cluster admins the ability to enforce",
    "start": "981920",
    "end": "984800"
  },
  {
    "text": "secure by default policies on cluster",
    "start": "984800",
    "end": "987360"
  },
  {
    "text": "tenants",
    "start": "987360",
    "end": "988320"
  },
  {
    "text": "and hopefully the design is a happy",
    "start": "988320",
    "end": "990000"
  },
  {
    "text": "medium between needed functionality",
    "start": "990000",
    "end": "991759"
  },
  {
    "text": "without adding too much complexity",
    "start": "991759",
    "end": "994160"
  },
  {
    "text": "and expressiveness the network policy",
    "start": "994160",
    "end": "997519"
  },
  {
    "text": "group has also started discussing",
    "start": "997519",
    "end": "999759"
  },
  {
    "text": "what would it take to create a v2 api",
    "start": "999759",
    "end": "1002720"
  },
  {
    "text": "which covers some issues such as",
    "start": "1002720",
    "end": "1004800"
  },
  {
    "text": "no more defaults and then extensibility",
    "start": "1004800",
    "end": "1007199"
  },
  {
    "text": "to other selectors",
    "start": "1007199",
    "end": "1010079"
  },
  {
    "text": "one interesting thing that has been done",
    "start": "1010079",
    "end": "1011920"
  },
  {
    "text": "in network policy is that of conformance",
    "start": "1011920",
    "end": "1014959"
  },
  {
    "text": "we now have a suite of table tests for",
    "start": "1014959",
    "end": "1017120"
  },
  {
    "text": "network policies",
    "start": "1017120",
    "end": "1018079"
  },
  {
    "text": "that now can be used to test cni",
    "start": "1018079",
    "end": "1019920"
  },
  {
    "text": "providers as well",
    "start": "1019920",
    "end": "1021440"
  },
  {
    "text": "as well as learn about how different",
    "start": "1021440",
    "end": "1022959"
  },
  {
    "text": "network policies affect pods in a",
    "start": "1022959",
    "end": "1024640"
  },
  {
    "text": "cluster",
    "start": "1024640",
    "end": "1026400"
  },
  {
    "text": "other work in the community is evolving",
    "start": "1026400",
    "end": "1028000"
  },
  {
    "text": "to generate perhaps hundreds of",
    "start": "1028000",
    "end": "1029678"
  },
  {
    "text": "different network policies automatically",
    "start": "1029679",
    "end": "1032319"
  },
  {
    "text": "we have also begun testing network",
    "start": "1032319",
    "end": "1034000"
  },
  {
    "text": "policies on windows nodes as well",
    "start": "1034000",
    "end": "1035918"
  },
  {
    "text": "and have confirmed that our existing",
    "start": "1035919",
    "end": "1037438"
  },
  {
    "text": "tests are windows compatible",
    "start": "1037439",
    "end": "1041120"
  },
  {
    "start": "1040000",
    "end": "1111000"
  },
  {
    "text": "i would like to finally mention some hot",
    "start": "1041760",
    "end": "1044640"
  },
  {
    "text": "off the presses efforts in the sig",
    "start": "1044640",
    "end": "1047839"
  },
  {
    "text": "the sig has started to take a closer",
    "start": "1047839",
    "end": "1049440"
  },
  {
    "text": "look at key proxy maintenance",
    "start": "1049440",
    "end": "1052559"
  },
  {
    "text": "q proxy is a complicated component and",
    "start": "1052559",
    "end": "1054559"
  },
  {
    "text": "has many different implementations and",
    "start": "1054559",
    "end": "1056320"
  },
  {
    "text": "backends",
    "start": "1056320",
    "end": "1057200"
  },
  {
    "text": "some of the principles that we are",
    "start": "1057200",
    "end": "1058480"
  },
  {
    "text": "looking at is how do we make q proxy",
    "start": "1058480",
    "end": "1060960"
  },
  {
    "text": "better for users",
    "start": "1060960",
    "end": "1062320"
  },
  {
    "text": "which includes eliminating corner cases",
    "start": "1062320",
    "end": "1064240"
  },
  {
    "text": "and bugs",
    "start": "1064240",
    "end": "1066400"
  },
  {
    "text": "looking at different ways of factoring",
    "start": "1066400",
    "end": "1068880"
  },
  {
    "text": "the component",
    "start": "1068880",
    "end": "1069840"
  },
  {
    "text": "and having a new architecture which we",
    "start": "1069840",
    "end": "1072720"
  },
  {
    "text": "call q proxy next-gen to speed q proxy",
    "start": "1072720",
    "end": "1075440"
  },
  {
    "text": "improvements",
    "start": "1075440",
    "end": "1077120"
  },
  {
    "text": "and finally as part of this new",
    "start": "1077120",
    "end": "1078640"
  },
  {
    "text": "architecture make q proxy easier to",
    "start": "1078640",
    "end": "1080799"
  },
  {
    "text": "maintain",
    "start": "1080799",
    "end": "1081919"
  },
  {
    "text": "so have an organized maintenance of the",
    "start": "1081919",
    "end": "1084559"
  },
  {
    "text": "component",
    "start": "1084559",
    "end": "1085600"
  },
  {
    "text": "and also to look at the q proxy next",
    "start": "1085600",
    "end": "1087679"
  },
  {
    "text": "generation architecture",
    "start": "1087679",
    "end": "1089440"
  },
  {
    "text": "sort of as a natural roadmap",
    "start": "1089440",
    "end": "1094000"
  },
  {
    "text": "that concludes our sig network deep dive",
    "start": "1094000",
    "end": "1097360"
  },
  {
    "text": "update i hope you learned about what has",
    "start": "1097360",
    "end": "1100480"
  },
  {
    "text": "been going on in the sig in the past",
    "start": "1100480",
    "end": "1102320"
  },
  {
    "text": "year and have some",
    "start": "1102320",
    "end": "1104000"
  },
  {
    "text": "understanding of where the sig is going",
    "start": "1104000",
    "end": "1106720"
  },
  {
    "text": "in the future thank you",
    "start": "1106720",
    "end": "1108640"
  },
  {
    "text": "now it's time for questions",
    "start": "1108640",
    "end": "1112960"
  }
]