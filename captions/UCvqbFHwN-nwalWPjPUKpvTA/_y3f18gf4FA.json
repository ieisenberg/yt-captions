[
  {
    "text": "my name is Angel and today I'm here with my teammate Raphael to talk to you about",
    "start": "4799",
    "end": "10200"
  },
  {
    "text": "how to create Easter filters with any programming language",
    "start": "10200",
    "end": "15559"
  },
  {
    "text": "before starting let me introduce the team we are working on we both are part",
    "start": "15780",
    "end": "21180"
  },
  {
    "text": "of wasan labs which is a small thing inside of the VMware Office of the CTO we focus on creating and contributing uh",
    "start": "21180",
    "end": "28500"
  },
  {
    "text": "to projects that showcase the possibilities of webassembly we also create different tools and other",
    "start": "28500",
    "end": "34980"
  },
  {
    "text": "projects to increase the adoption of Developers for this technology that we are really",
    "start": "34980",
    "end": "41160"
  },
  {
    "text": "excited for apart from that we also create 13 experiments we will We love to",
    "start": "41160",
    "end": "46800"
  },
  {
    "text": "do that and today we want to to show you one of the experiments that we recently did",
    "start": "46800",
    "end": "53718"
  },
  {
    "text": "one thing that I think everyone of us that work with services and infrastructure knows that proxies are",
    "start": "54480",
    "end": "62039"
  },
  {
    "text": "everywhere proxies are a critical piece of an infrastructure we can talk about proxies",
    "start": "62039",
    "end": "68939"
  },
  {
    "text": "even in single node deployments where we have a reverse proxy that redirects the traffic to our services we can think of",
    "start": "68939",
    "end": "75960"
  },
  {
    "text": "big clusters with more than 100 nodes and a lot of different proxies collaborating together to serve the",
    "start": "75960",
    "end": "82740"
  },
  {
    "text": "traffic redirect things and provide the actual content that all users want to",
    "start": "82740",
    "end": "87840"
  },
  {
    "text": "see there are a lot of different ones we have voy nginx traffic there are",
    "start": "87840",
    "end": "94680"
  },
  {
    "text": "different types so today we are going to focus on Envoy and specifically about",
    "start": "94680",
    "end": "100799"
  },
  {
    "text": "Easter installation that are based on Envoy if we look how a regular deployment",
    "start": "100799",
    "end": "107640"
  },
  {
    "text": "looks these days we have a lot of different applications",
    "start": "107640",
    "end": "112680"
  },
  {
    "text": "that actually share some common resources or the same box we can say it could be multiple nodes but they are",
    "start": "112680",
    "end": "119159"
  },
  {
    "text": "part of the same infrastructure then we want to expose them outside so",
    "start": "119159",
    "end": "124560"
  },
  {
    "text": "we create gateways and everything so users can access to them and in some cases we need more advanced connection",
    "start": "124560",
    "end": "132300"
  },
  {
    "text": "between the different uh resources and the different services and we include",
    "start": "132300",
    "end": "137480"
  },
  {
    "text": "proxies across all the different services so they can connect together and they can perform other Advanced",
    "start": "137480",
    "end": "143879"
  },
  {
    "text": "actions this is not something that it's easy to manage and to deploy fortunately we have",
    "start": "143879",
    "end": "150840"
  },
  {
    "text": "projects like istio that allows you to easily deploy all these different proxies without any hustle just put them",
    "start": "150840",
    "end": "158580"
  },
  {
    "text": "where they should be and connect the services as we need",
    "start": "158580",
    "end": "163819"
  },
  {
    "text": "so now let's talk a little bit more about how we can extend all those small",
    "start": "164099",
    "end": "169260"
  },
  {
    "text": "proxies all those small dots that we have in our infrastructure",
    "start": "169260",
    "end": "174900"
  },
  {
    "text": "when talking about extending a proxy what we are talking is about adding custom behaviors that it's tailored to",
    "start": "174900",
    "end": "182459"
  },
  {
    "text": "some specific use cases it could be something that everyone implements on",
    "start": "182459",
    "end": "187680"
  },
  {
    "text": "services like observability traceability and this kind of filters sorry of custom",
    "start": "187680",
    "end": "194220"
  },
  {
    "text": "behaviors or it could be something that is more specific to everyone",
    "start": "194220",
    "end": "199379"
  },
  {
    "text": "um every infrastructure every infrastructure or every company for example you may need to have something",
    "start": "199379",
    "end": "205019"
  },
  {
    "text": "that reports traffic to a centralized service for lateral analysis it could be",
    "start": "205019",
    "end": "210540"
  },
  {
    "text": "something that blocks a specific request there are different behaviors everyone needs to implement something specific",
    "start": "210540",
    "end": "216360"
  },
  {
    "text": "and this is why it it is important but why is it useful to do this kind of",
    "start": "216360",
    "end": "222720"
  },
  {
    "text": "extension at a proxy level and not our for example inside the services",
    "start": "222720",
    "end": "229140"
  },
  {
    "text": "if we look the same picture that we had before one thing that I didn't say is that we",
    "start": "229140",
    "end": "235799"
  },
  {
    "text": "have eight services in this example but every service is different it could be a",
    "start": "235799",
    "end": "242220"
  },
  {
    "text": "ruby application node.js application Gold service JavaScript there are many",
    "start": "242220",
    "end": "247319"
  },
  {
    "text": "different Services all together in the same infrastructure talking and providing uh content to users or to",
    "start": "247319",
    "end": "254819"
  },
  {
    "text": "other services if we have to ask every team behind every different service to implement a",
    "start": "254819",
    "end": "262320"
  },
  {
    "text": "13 custom Behavior it takes time and it's not only that but it's not easy to",
    "start": "262320",
    "end": "267660"
  },
  {
    "text": "keep that up to date you need to ask the team to implement one specific or no block some specific requests on Ruby you",
    "start": "267660",
    "end": "275160"
  },
  {
    "text": "need to provide maybe on SDK that everyone can import so they don't need to do that",
    "start": "275160",
    "end": "280320"
  },
  {
    "text": "but in the end it's a complex process but if we just",
    "start": "280320",
    "end": "285479"
  },
  {
    "text": "focus on those small dots proxies are all the same at all and all of them are",
    "start": "285479",
    "end": "291960"
  },
  {
    "text": "managed by istio so it seems they are really good spot for placing third time",
    "start": "291960",
    "end": "297680"
  },
  {
    "text": "behaviors that can be actually reused by any service because you do that just",
    "start": "297680",
    "end": "303540"
  },
  {
    "text": "before they receive the traffic and this is why we think this is really really useful",
    "start": "303540",
    "end": "309979"
  },
  {
    "text": "so now we have the Y but let's think about the how how we can extend proxies",
    "start": "310020",
    "end": "317340"
  },
  {
    "text": "different proxies offers you different mechanisms to extend them so if we talk",
    "start": "317340",
    "end": "323340"
  },
  {
    "text": "about uh specifically about Envoy for example it could be that it provides an",
    "start": "323340",
    "end": "328560"
  },
  {
    "text": "API but if we talk about about a different service like nginx for example it provides you a different way",
    "start": "328560",
    "end": "335460"
  },
  {
    "text": "when we talk about extending a proxy we usually refer to two different types of extensions we have models which allows",
    "start": "335460",
    "end": "343560"
  },
  {
    "text": "you to actually access the internals of the proxy so you can go into the the API",
    "start": "343560",
    "end": "350160"
  },
  {
    "text": "in the internal API of the proxy you can do much more advancing like providing",
    "start": "350160",
    "end": "356340"
  },
  {
    "text": "new languages into the into the proxy doing specifically anything that the proxy can do however this is it provides",
    "start": "356340",
    "end": "363840"
  },
  {
    "text": "you more power but it's more difficult to implement then we talk about filters filters are",
    "start": "363840",
    "end": "370259"
  },
  {
    "text": "much more easy way to extend the proxies because they are just a source code or a",
    "start": "370259",
    "end": "376020"
  },
  {
    "text": "process that runs between the requests and the responses so filters take requests",
    "start": "376020",
    "end": "382440"
  },
  {
    "text": "process them continues with the response receive that information and then goes back to the",
    "start": "382440",
    "end": "388500"
  },
  {
    "text": "user this is more models are pretty common in every proxy um usually you have different ways to",
    "start": "388500",
    "end": "395160"
  },
  {
    "text": "create them those are the small ones",
    "start": "395160",
    "end": "401160"
  },
  {
    "text": "so focusing on filters if we talk about Envoy the way or the classic way to",
    "start": "401160",
    "end": "406620"
  },
  {
    "text": "create those small filters are with the C plus plus API",
    "start": "406620",
    "end": "411960"
  },
  {
    "text": "if we go into that direction it requires you certain things the first thing is that you need to know C plus plus which",
    "start": "411960",
    "end": "418380"
  },
  {
    "text": "is something that at least I'm not very familiar with so it's not easy to implement those",
    "start": "418380",
    "end": "423840"
  },
  {
    "text": "them those are compile filters you need to actually compile the filters then",
    "start": "423840",
    "end": "429240"
  },
  {
    "text": "compile and void with that filter and then distribute a custom version of a boy so it means that now your team needs",
    "start": "429240",
    "end": "436020"
  },
  {
    "text": "to maintain that and boy just for one filter that you created Envoy comes with a lot of the four",
    "start": "436020",
    "end": "442440"
  },
  {
    "text": "filters that's true and all of them are amazing to be honest but when you want to create that this is",
    "start": "442440",
    "end": "448199"
  },
  {
    "text": "the kind of path that you should go another option is lower filters which are also available because you can",
    "start": "448199",
    "end": "453660"
  },
  {
    "text": "enable a model that actually allows you to create Lua filters but that also requires you to know Lua",
    "start": "453660",
    "end": "461520"
  },
  {
    "text": "but today I want to present you an alternative way to extending boy so",
    "start": "461520",
    "end": "466740"
  },
  {
    "text": "imagine that there is a way in which you can take different languages languages that you even know and you can create",
    "start": "466740",
    "end": "473240"
  },
  {
    "text": "filters that then will be loaded by Amboy you don't need to recompile anything you don't need to do any extra",
    "start": "473240",
    "end": "480120"
  },
  {
    "text": "step just get those models and then run them as filters inside the envoy and",
    "start": "480120",
    "end": "486419"
  },
  {
    "text": "this is where webassembly enters the SIM so with webassembly you can compile",
    "start": "486419",
    "end": "492840"
  },
  {
    "text": "those filters into a way that can be load by invoy and then you can Implement those custom behaviors directly in a",
    "start": "492840",
    "end": "499620"
  },
  {
    "text": "more let's say easier way than actually calling them in C plus plus and then introducing them via compilation and to",
    "start": "499620",
    "end": "506280"
  },
  {
    "text": "talk about that my teammate profile is going to show you about webassembly and proxy awesome",
    "start": "506280",
    "end": "512219"
  },
  {
    "text": "thank you Angel so first of all what is webassembly a bit more into the details and how these",
    "start": "512219",
    "end": "520320"
  },
  {
    "text": "two pieces can fit together so the first thing is that we if we",
    "start": "520320",
    "end": "525899"
  },
  {
    "text": "think about the several programming languages we write for example rust C or",
    "start": "525899",
    "end": "531240"
  },
  {
    "text": "Sig there are other pyramid languages such as go as well that can be compiled to webassembly and so instead of",
    "start": "531240",
    "end": "538080"
  },
  {
    "text": "compiling our program to x86 for example or to Art 64. we can compile that to",
    "start": "538080",
    "end": "545040"
  },
  {
    "text": "webassembly so the binary that we get is a specific file that is",
    "start": "545040",
    "end": "550260"
  },
  {
    "text": "um Standalone and so this this file can be",
    "start": "550260",
    "end": "555660"
  },
  {
    "text": "reused across different environments and so it's not only that this is Standalone it's also safe because it runs in a",
    "start": "555660",
    "end": "562260"
  },
  {
    "text": "sandbox and the idea behind webassembly is that since it is a",
    "start": "562260",
    "end": "567330"
  },
  {
    "text": "[Music] an environment in which it it doesn't have access to the extent world because",
    "start": "567330",
    "end": "572760"
  },
  {
    "text": "it's running inside the sandbox it can only get that much so it there is no system interface such as the Lipsy for",
    "start": "572760",
    "end": "579839"
  },
  {
    "text": "example when you can access the extent world you can do ciscals things like that you cannot do that from webassembly",
    "start": "579839",
    "end": "585899"
  },
  {
    "text": "you you only have the module that is on your on your what you were compiled with and you",
    "start": "585899",
    "end": "591240"
  },
  {
    "text": "cannot get out and get salary of it also the memory is completely isolated from the outer environment and so we have this binary so it's",
    "start": "591240",
    "end": "598860"
  },
  {
    "text": "running on a Sandbox it's safe and it's also uh Universal so we can run that anywhere and we have this single binary",
    "start": "598860",
    "end": "606060"
  },
  {
    "text": "but we need something in order to run that and that is the virtual machine so we need a webassembly virtual machine",
    "start": "606060",
    "end": "611339"
  },
  {
    "text": "that will interpret this webassembly and we'll run that on our machine and so if",
    "start": "611339",
    "end": "616980"
  },
  {
    "text": "we think about that uh we see that from JavaScript we have uh browsers that",
    "start": "616980",
    "end": "622080"
  },
  {
    "text": "already implemented JavaScript itself and then from there they were extended",
    "start": "622080",
    "end": "627540"
  },
  {
    "text": "to also run webassembly and so from there we went into the service with node and so we have JavaScript and also",
    "start": "627540",
    "end": "635160"
  },
  {
    "text": "webassembly running over there but it's even more than that because there are other runtimes that now are very",
    "start": "635160",
    "end": "641220"
  },
  {
    "text": "specialized in only running webassembly they don't run JavaScript they just run",
    "start": "641220",
    "end": "646380"
  },
  {
    "text": "web assembly and they are super optimized to run our code and so we have this this file uh that is",
    "start": "646380",
    "end": "652800"
  },
  {
    "text": "Standalone and then we run that instead of faberto machine but how we do how do",
    "start": "652800",
    "end": "657959"
  },
  {
    "text": "we put all the puzzle together and the answer is that Envoy is able to start a",
    "start": "657959",
    "end": "663899"
  },
  {
    "text": "awesome virtual machine a web assembly virtual machine and so we see that our requests are coming they are getting",
    "start": "663899",
    "end": "669839"
  },
  {
    "text": "into the virtual machine and they are getting back out but what is the answer here what is the piece that is missing",
    "start": "669839",
    "end": "675899"
  },
  {
    "text": "and the answer is proxy wasn't and this is what we are talking about today so perfect wasn't was presented in February",
    "start": "675899",
    "end": "683100"
  },
  {
    "text": "2020 uh by a joint effort by solo IO Google and the istio community",
    "start": "683100",
    "end": "689640"
  },
  {
    "text": "and so proxy Watson is actually multiple things so it's an API in the in that it",
    "start": "689640",
    "end": "695700"
  },
  {
    "text": "specifies what is the interface that the guests so the web assembly guests can",
    "start": "695700",
    "end": "701220"
  },
  {
    "text": "talk to what are the functions that they can call or is the functions that the host can call inside of the web assembly",
    "start": "701220",
    "end": "708720"
  },
  {
    "text": "um sandbox and it's also another thing so this is ABI then we have sdks for the different",
    "start": "708720",
    "end": "716279"
  },
  {
    "text": "languages so right now if you want to write a filter and this will be on the guest side you you implement your",
    "start": "716279",
    "end": "723420"
  },
  {
    "text": "program using this SDK and then you are able to buy your filter and in this case there are sdks for rust for C plus plus",
    "start": "723420",
    "end": "730620"
  },
  {
    "text": "and also there is another one for go uh provided by by the t-trade labs team and",
    "start": "730620",
    "end": "736860"
  },
  {
    "text": "also that is on the guest part then the other part is the host implementation of it so there is a reference",
    "start": "736860",
    "end": "742200"
  },
  {
    "text": "implementation as well uh that is on C plus and so this is the part that Envoy uses in order to run webassembly and",
    "start": "742200",
    "end": "749760"
  },
  {
    "text": "start the webassembly virtual machine and then run the web assembly inside of it",
    "start": "749760",
    "end": "755160"
  },
  {
    "text": "okay so you can create your your first filter we are going to see just a very simple example on how that can be done",
    "start": "755160",
    "end": "761820"
  },
  {
    "text": "but you see that there are lots of different languages Rusty plus plastic assembly script go recently Go the",
    "start": "761820",
    "end": "768540"
  },
  {
    "text": "official compiler is able to build to webassembly directly without the need of any JavaScript we also have tiny go",
    "start": "768540",
    "end": "774660"
  },
  {
    "text": "before that so we were able to compile go uh inside uh to compile that to webassembly",
    "start": "774660",
    "end": "780600"
  },
  {
    "text": "and in this case what we're going to do is to show some of the work that we have been doing regarding this but we're",
    "start": "780600",
    "end": "787079"
  },
  {
    "text": "going to run it inside the envoy um because um it's just for for the sake of showing",
    "start": "787079",
    "end": "792600"
  },
  {
    "text": "how we can extend the proxy itself with webassembly and you can see that everything that is",
    "start": "792600",
    "end": "798480"
  },
  {
    "text": "beneath this proxy wasn't in this case so if we take for example the rust code it's very simple there is there is more",
    "start": "798480",
    "end": "805380"
  },
  {
    "text": "code of course here but the important the important takeaway is just this right so in this case we have",
    "start": "805380",
    "end": "811800"
  },
  {
    "text": "a function as that is defined by the SDK and in the end by the by the API and so",
    "start": "811800",
    "end": "817680"
  },
  {
    "text": "it's on HTTP response headers so asan was saying before this is sitting in the",
    "start": "817680",
    "end": "823019"
  },
  {
    "text": "middle so it gets the requests and it is also able to intercept the answer from",
    "start": "823019",
    "end": "828120"
  },
  {
    "text": "it and adapt it somehow and in this case we are intercepting the response headers of the request and we're able in this",
    "start": "828120",
    "end": "834360"
  },
  {
    "text": "case to add a new header to it and so this is this will be kind of a first filter but we have seen that all the",
    "start": "834360",
    "end": "841740"
  },
  {
    "text": "programs that we have been talking about on the other pyramid languages have been compiled so what about interpreted",
    "start": "841740",
    "end": "847320"
  },
  {
    "text": "languages and in this case and this is what our experiment has been about and it has been explicitly for this talk uh",
    "start": "847320",
    "end": "853380"
  },
  {
    "text": "we have JavaScript and we have PHP um also we have we have uh python could",
    "start": "853380",
    "end": "858899"
  },
  {
    "text": "be added as well but the the examples that we are going to show today is exactly about JavaScript and PHP",
    "start": "858899",
    "end": "865260"
  },
  {
    "text": "and so this this module that we have on webassembly can be run on any other",
    "start": "865260",
    "end": "871320"
  },
  {
    "text": "platform that supports webassembly not only the envoy proxy this is kind of a",
    "start": "871320",
    "end": "876360"
  },
  {
    "text": "different environment in which where you run the webassembly binary because you need to adapt to the API of of proxy",
    "start": "876360",
    "end": "883440"
  },
  {
    "text": "Watson and so let me show you an example of BHP and",
    "start": "883440",
    "end": "889920"
  },
  {
    "text": "then actually is going to take the JavaScript part and let's see I need to change to mirror one second",
    "start": "889920",
    "end": "898579"
  },
  {
    "text": "okay before we get into the demo so you you have the the repository proxy wasn't spec where you can see like all the",
    "start": "909420",
    "end": "916380"
  },
  {
    "text": "specifications on what are the things that you can do with uh with this in your in your in the guest part and also",
    "start": "916380",
    "end": "921660"
  },
  {
    "text": "on the host part uh so if you are interested have a look at that um it's personal Western spec and the repo so",
    "start": "921660",
    "end": "927540"
  },
  {
    "text": "you can have a look at that and so in this case as part of our work we parted the PHP interpreter uh to",
    "start": "927540",
    "end": "934260"
  },
  {
    "text": "webassembly and so it is able to you are able to put The Interpreter and run that with a webassembly runtime such as",
    "start": "934260",
    "end": "942060"
  },
  {
    "text": "wasn't time and so what we did here uh was that you have Envoy and you are able",
    "start": "942060",
    "end": "947220"
  },
  {
    "text": "to provide a PHP script that you can run and then you load the PHP uh binary here",
    "start": "947220",
    "end": "953160"
  },
  {
    "text": "on the local file name configuration part of envoy I already did the startup",
    "start": "953160",
    "end": "958740"
  },
  {
    "text": "because it takes a little white a little while to start as I said this is just this is an experiment done for done for",
    "start": "958740",
    "end": "964560"
  },
  {
    "text": "this talk so it's not optimized at all uh this is something that we would love to do so if there is interest I would",
    "start": "964560",
    "end": "970199"
  },
  {
    "text": "love to to know more um so as you can see here we have first of all an echo on it so this is the",
    "start": "970199",
    "end": "977760"
  },
  {
    "text": "script that is being executed and it's if you see on the left hand side on the bottom we have the logs that are coming",
    "start": "977760",
    "end": "983160"
  },
  {
    "text": "out of it and so this this happens and this is able this can be done because there is a system interface in reality",
    "start": "983160",
    "end": "989399"
  },
  {
    "text": "that is able to Echo and to basically write to a standard output and so you can see that so on every",
    "start": "989399",
    "end": "996420"
  },
  {
    "text": "request I get a new standard output being written and we also get the header uh being set by PHP",
    "start": "996420",
    "end": "1003980"
  },
  {
    "text": "so adding a new thing here would be as simple as that so you just save that you",
    "start": "1003980",
    "end": "1009079"
  },
  {
    "text": "could call for example to the time function and then I can just run that since it it takes a little while to",
    "start": "1009079",
    "end": "1015980"
  },
  {
    "text": "start let's look more a bit into the details so we did the work to Port PHP",
    "start": "1015980",
    "end": "1021440"
  },
  {
    "text": "um to webassembly and so part of the things that are missing if you try to",
    "start": "1021440",
    "end": "1026480"
  },
  {
    "text": "just run a data memboy with the proxy awesome host part is not going to work",
    "start": "1026480",
    "end": "1031520"
  },
  {
    "text": "because there are some imports that are missing from the system interface and here there are things that we had to",
    "start": "1031520",
    "end": "1036918"
  },
  {
    "text": "implement on the whole side of proxywassem in order for this to work and the the the",
    "start": "1036919",
    "end": "1043040"
  },
  {
    "text": "the PHP interpreter to be started by webassembly this is something that we",
    "start": "1043040",
    "end": "1048500"
  },
  {
    "text": "can't with the community if there is interest in doing something like this um but yeah we can we can get the",
    "start": "1048500",
    "end": "1053540"
  },
  {
    "text": "overall in there so this is one of the things that we have to do and then the other one was on",
    "start": "1053540",
    "end": "1059179"
  },
  {
    "text": "PHP itself because as you saw we are reading the PHP code from the Amboy",
    "start": "1059179",
    "end": "1064280"
  },
  {
    "text": "configuration and this is something that proxy was an allows you to do so you can configure the proxy the the proxy",
    "start": "1064280",
    "end": "1069559"
  },
  {
    "text": "configuration and then you read that and then you load that so when we start and I'm going to go through the C code but",
    "start": "1069559",
    "end": "1075980"
  },
  {
    "text": "here you have the main on the bottom when we start the the when we start the module",
    "start": "1075980",
    "end": "1081919"
  },
  {
    "text": "um we basically start the PHP virtual machine and then on every request here on response headers we are going to",
    "start": "1081919",
    "end": "1087679"
  },
  {
    "text": "start the the no we're going to call to the already initialized PHP Virtual",
    "start": "1087679",
    "end": "1093559"
  },
  {
    "text": "Machine by saying just read this script and interpret it and so this is",
    "start": "1093559",
    "end": "1098660"
  },
  {
    "text": "basically what this does and here the minus error option of PHP is basically I'm going to provide you this script via",
    "start": "1098660",
    "end": "1105440"
  },
  {
    "text": "the standard input and then you just read that and this is what is what is going on we just can do do this call on every",
    "start": "1105440",
    "end": "1112640"
  },
  {
    "text": "request that we get of course this only works for proxian response headers as I said uh this is just done for this",
    "start": "1112640",
    "end": "1119419"
  },
  {
    "text": "purpose of this talk but this could be extended to support the whole proxy was some specification and so if we go back",
    "start": "1119419",
    "end": "1126919"
  },
  {
    "text": "uh to the to the to the change script we see now that I",
    "start": "1126919",
    "end": "1133039"
  },
  {
    "text": "added the time here is awesome header at and now we get that properly written over there and this is actually calling",
    "start": "1133039",
    "end": "1139940"
  },
  {
    "text": "to the time function of PHP um so yeah that's that's it so now uh",
    "start": "1139940",
    "end": "1145580"
  },
  {
    "text": "Angel is going to talk about the JavaScript part okay okay",
    "start": "1145580",
    "end": "1152480"
  },
  {
    "text": "I think now it's okay now you can hear me okay so so yeah so uh the same thing that we had",
    "start": "1152480",
    "end": "1159860"
  },
  {
    "text": "to do for for phps as Raphael showed it's it's all the steps that we usually need to do when we want to run",
    "start": "1159860",
    "end": "1166220"
  },
  {
    "text": "interpreted languages into the web assembly so first you need of course an interpreter that can run that code and",
    "start": "1166220",
    "end": "1173179"
  },
  {
    "text": "then we need to build that bridge between The Interpreter between the web assembly host let's say and then the",
    "start": "1173179",
    "end": "1179600"
  },
  {
    "text": "code that it's running inside The Interpreter because you want to write JavaScript you want to write PHP you",
    "start": "1179600",
    "end": "1185179"
  },
  {
    "text": "don't want to deal with the c code that we showed and you don't want to uh to deal with this Rascal that I'm going to",
    "start": "1185179",
    "end": "1191480"
  },
  {
    "text": "show you now so as we were focusing on next on this experiment in the case of",
    "start": "1191480",
    "end": "1196640"
  },
  {
    "text": "PHP we were working directly on the C side for making it work with JavaScript we took a slightly different approach",
    "start": "1196640",
    "end": "1203419"
  },
  {
    "text": "instead of having to do it from scratch in The Interpreter directly",
    "start": "1203419",
    "end": "1208640"
  },
  {
    "text": "we took advantage of other projects that are already in the webassemble ecosystem to create this uh this was a model that",
    "start": "1208640",
    "end": "1216500"
  },
  {
    "text": "can actually reproduce the proxy was an API and run JavaScript code for that we",
    "start": "1216500",
    "end": "1222140"
  },
  {
    "text": "use the proxy wasam SDK for rust directly and then we use the Quicken",
    "start": "1222140",
    "end": "1227620"
  },
  {
    "text": "quickjs sorry uh Bindings that the Shopify team created for a different",
    "start": "1227620",
    "end": "1233059"
  },
  {
    "text": "project so quick JS is a super small JavaScript interpreter I think it's as",
    "start": "1233059",
    "end": "1238100"
  },
  {
    "text": "far as I remember is uh I I think 500 lines of C code or something like that",
    "start": "1238100",
    "end": "1243740"
  },
  {
    "text": "so it's pretty small so it suits really well this kind of use cases as they are",
    "start": "1243740",
    "end": "1248960"
  },
  {
    "text": "small models and they are really fast to to run here we have the initial configuration",
    "start": "1248960",
    "end": "1255380"
  },
  {
    "text": "that we didn't show before all this is done at the rust level just because we",
    "start": "1255380",
    "end": "1260480"
  },
  {
    "text": "want to configure the filter and pass the source code via configuration",
    "start": "1260480",
    "end": "1266020"
  },
  {
    "text": "then we create the HTTP context which basically allows you to connect to the HTTP HTTP level as Rafa showed before to",
    "start": "1266179",
    "end": "1274940"
  },
  {
    "text": "get the headers and that information and then we start the virtual machine the quick JS virtual machine that will run",
    "start": "1274940",
    "end": "1280580"
  },
  {
    "text": "the final code if we move to the final quick uh quick yes uh bindings here at",
    "start": "1280580",
    "end": "1288260"
  },
  {
    "text": "one point is where we connect those words we have the host calls which are",
    "start": "1288260",
    "end": "1293840"
  },
  {
    "text": "this ones for the proxy was an SDK that allows you for example to get a value from the headers",
    "start": "1293840",
    "end": "1300260"
  },
  {
    "text": "and then we move that and configure a new function inside the JavaScript interpreter that can Define the header",
    "start": "1300260",
    "end": "1307640"
  },
  {
    "text": "specifically but this is not something that actually look like a proxy awesome",
    "start": "1307640",
    "end": "1312679"
  },
  {
    "text": "filter because you have to actually call this method and this is not something that you could do with other proxy sdks",
    "start": "1312679",
    "end": "1319400"
  },
  {
    "text": "so let's build an actual API in JavaScript that looks like proxy wasn't",
    "start": "1319400",
    "end": "1325460"
  },
  {
    "text": "so here we have these Bindings that actually gets this Imports that we",
    "start": "1325460",
    "end": "1330679"
  },
  {
    "text": "Define it for this specific experiment and then we create JavaScript classes",
    "start": "1330679",
    "end": "1335780"
  },
  {
    "text": "that actually Maps exactly what proxy was and expect so you can call the",
    "start": "1335780",
    "end": "1341480"
  },
  {
    "text": "similar super similar to how other sdks work if we now see the void configuration",
    "start": "1341480",
    "end": "1348200"
  },
  {
    "text": "it's pretty similar to the one that that Raphael showed because for every webassembly model is always the same you",
    "start": "1348200",
    "end": "1354740"
  },
  {
    "text": "define an HTTP filter you put that its type awesome then you provide the file",
    "start": "1354740",
    "end": "1360140"
  },
  {
    "text": "name in this case quick JS filter and then you provide via configuration the actual JavaScript code which which as",
    "start": "1360140",
    "end": "1368000"
  },
  {
    "text": "you can see is just a class that extends the HTTP context that we Define and then we subscribe to the on HTTP respond",
    "start": "1368000",
    "end": "1374240"
  },
  {
    "text": "header and provide that information here we have an Embry proxy running with",
    "start": "1374240",
    "end": "1382340"
  },
  {
    "text": "that specific model and then if we go here B",
    "start": "1382340",
    "end": "1388240"
  },
  {
    "text": "[Music] I think it's 80 okay",
    "start": "1388240",
    "end": "1394539"
  },
  {
    "text": "we get that header so we successfully configure and created a Envoy filter",
    "start": "1395000",
    "end": "1400760"
  },
  {
    "text": "using JavaScript and even PHP so now let's go back to to the",
    "start": "1400760",
    "end": "1407000"
  },
  {
    "text": "presentation so let me extend because I don't know",
    "start": "1407000",
    "end": "1414700"
  },
  {
    "text": "okay this place",
    "start": "1418460",
    "end": "1424899"
  },
  {
    "text": "okay we are back",
    "start": "1427159",
    "end": "1430600"
  },
  {
    "text": "okay so yeah this is the experiment that we wanted to show you as as we said the or our goal was to try and try to",
    "start": "1434900",
    "end": "1442400"
  },
  {
    "text": "demonstrate that this is actually possible make it may makes more sense for some use cases but something that",
    "start": "1442400",
    "end": "1448940"
  },
  {
    "text": "that we actually got any time we talk about webassembly is that people want to run the same languages that they are",
    "start": "1448940",
    "end": "1455240"
  },
  {
    "text": "used to because one of the barriers of using webassembly is that the best languages that now targets webassembly",
    "start": "1455240",
    "end": "1462140"
  },
  {
    "text": "are things like trust C plus plus that not all people are used to work with",
    "start": "1462140",
    "end": "1467299"
  },
  {
    "text": "actually I had to learn that one year ago so I know I know that process so one thing that you may think is that",
    "start": "1467299",
    "end": "1474620"
  },
  {
    "text": "now that we have these models how we can configure all our infrastructure to",
    "start": "1474620",
    "end": "1480260"
  },
  {
    "text": "ensure that all those filters are run properly and this is where istio enters the SIM",
    "start": "1480260",
    "end": "1487700"
  },
  {
    "text": "so when I was trying that invoice was super simple as I showed you with the with the",
    "start": "1487700",
    "end": "1493340"
  },
  {
    "text": "configuration but now when we enter into the kubernetes thing and we have not one",
    "start": "1493340",
    "end": "1498860"
  },
  {
    "text": "proxy but we have 30 40 50 proxies then maybe creating those filters could be",
    "start": "1498860",
    "end": "1504440"
  },
  {
    "text": "difficult the good thing is that istio already provides you a way to extend uh the the",
    "start": "1504440",
    "end": "1512000"
  },
  {
    "text": "different proxies with uh was some filters you can configure them directly",
    "start": "1512000",
    "end": "1517159"
  },
  {
    "text": "with the HML configuration Point them to the specific place that the the field",
    "start": "1517159",
    "end": "1523340"
  },
  {
    "text": "the proxies come find the model which could be an oci um Regular resource or an HTTP endpoint",
    "start": "1523340",
    "end": "1531320"
  },
  {
    "text": "you can push your models to your default register that you have in infrastructure and then you will be able to pull them",
    "start": "1531320",
    "end": "1537440"
  },
  {
    "text": "and configure that in the in the different proxies the good thing",
    "start": "1537440",
    "end": "1542779"
  },
  {
    "text": "is that this prox is worse but they can be composed you can configure multiple ones not only one and you can give them",
    "start": "1542779",
    "end": "1550279"
  },
  {
    "text": "much specific selectors so you can select what are the applications that are going to have a specific filter or a",
    "start": "1550279",
    "end": "1557179"
  },
  {
    "text": "group of filters and this is how it works you configure it in the gml you drop that configuration apply it to your",
    "start": "1557179",
    "end": "1563299"
  },
  {
    "text": "communities cluster and suddenly all the different proxies that matches the specific uh select selectors they are",
    "start": "1563299",
    "end": "1570559"
  },
  {
    "text": "going to get their filter and they're going to start serve the traffic this is how it looks like so we have a",
    "start": "1570559",
    "end": "1577220"
  },
  {
    "text": "custom kubernetes resource which is an extension for istio then the kindness was unplugging we configure the metadata",
    "start": "1577220",
    "end": "1584240"
  },
  {
    "text": "we set the selectors we put the URL the configuration and that's all all the",
    "start": "1584240",
    "end": "1589760"
  },
  {
    "text": "different proxies that matches it will get that information here's a quote that we used to say like",
    "start": "1589760",
    "end": "1595940"
  },
  {
    "text": "bullet requires a filter to be pressed in the file system and is use a Wither that makes that happen",
    "start": "1595940",
    "end": "1602600"
  },
  {
    "text": "and before finishing I would love to talk a bit more about one of the properties that I really love from from",
    "start": "1602600",
    "end": "1610700"
  },
  {
    "text": "this specific project for proxy was an I'm from webassembly in general and it's about portability",
    "start": "1610700",
    "end": "1617240"
  },
  {
    "text": "so three weeks ago we went to a different conference in Barcelona in Spain which was the wasang io and there",
    "start": "1617240",
    "end": "1624080"
  },
  {
    "text": "we attended a a talk in which the Kong team presented the proxy wasn't",
    "start": "1624080",
    "end": "1630679"
  },
  {
    "text": "um yeah the implementation of proxy wasn't in nginx and in the com platform",
    "start": "1630679",
    "end": "1636020"
  },
  {
    "text": "since we were already experimenting with this we quickly contacted them and we started to talk about this they got",
    "start": "1636020",
    "end": "1641539"
  },
  {
    "text": "excited about having different languages for filtering and it's good to talk to",
    "start": "1641539",
    "end": "1646820"
  },
  {
    "text": "them because they mentioned that this is something that some customers already asked them like hey is there any way we",
    "start": "1646820",
    "end": "1652340"
  },
  {
    "text": "can use other languages not the one that you are mentioning So Kong announced a new project called",
    "start": "1652340",
    "end": "1659059"
  },
  {
    "text": "wasang X some months ago that actually does does it it adds the proxy was some filters in nginx and for extension in",
    "start": "1659059",
    "end": "1665840"
  },
  {
    "text": "the Kong platform um the great thing about this is that once we had the for example the",
    "start": "1665840",
    "end": "1672260"
  },
  {
    "text": "JavaScript filter with the webassembly model we only had to send that specific",
    "start": "1672260",
    "end": "1677299"
  },
  {
    "text": "model to them we didn't care about recompiling we didn't think about architecture we didn't think about",
    "start": "1677299",
    "end": "1682520"
  },
  {
    "text": "anything just the same exact model Works in Kong in boy hanging anything that",
    "start": "1682520",
    "end": "1688700"
  },
  {
    "text": "implements a proxy was an interface and this is something that it's general for webassembly but for this gate it was",
    "start": "1688700",
    "end": "1694039"
  },
  {
    "text": "really nice to see and yeah that's all that we wanted to",
    "start": "1694039",
    "end": "1700279"
  },
  {
    "text": "show to you today so yeah thank you very much for attending this session we hope you like it um we recommend you to come to our blog",
    "start": "1700279",
    "end": "1707179"
  },
  {
    "text": "because we have more experiments like this and more projects thank you",
    "start": "1707179",
    "end": "1712600"
  },
  {
    "text": "did you have any questions yeah we have some time so feel free",
    "start": "1721340",
    "end": "1727120"
  },
  {
    "text": "it's worth it",
    "start": "1730520",
    "end": "1733059"
  },
  {
    "text": "oh yeah I don't know",
    "start": "1736520",
    "end": "1744220"
  },
  {
    "text": "approach okay I think now it's ready the microphone so yeah I mean okay okay so the question is uh",
    "start": "1750860",
    "end": "1759200"
  },
  {
    "text": "could you share some insights uh about uh memory footprint uh CPU Fortune",
    "start": "1759200",
    "end": "1765140"
  },
  {
    "text": "comparing to approach with let's say C plus plus so",
    "start": "1765140",
    "end": "1770840"
  },
  {
    "text": "within a still did the comparison with the C plus plus native filtering but we compared the different Watson models",
    "start": "1770840",
    "end": "1777380"
  },
  {
    "text": "from the different languages because it's different for example to have the rust filter which is kind of compiled",
    "start": "1777380",
    "end": "1783799"
  },
  {
    "text": "natively to webassembly than this middle step with The Interpreter compile and then the source code so the memory",
    "start": "1783799",
    "end": "1789980"
  },
  {
    "text": "footprint really depends on the web assembly model because webassembly needs to put some old information inside the linear",
    "start": "1789980",
    "end": "1796820"
  },
  {
    "text": "memory and that will be the actual memory that it's only for that sandbox but it depends on how on the size of",
    "start": "1796820",
    "end": "1804679"
  },
  {
    "text": "that model so for the JavaScript model it's I think a few megabytes not much more than that",
    "start": "1804679",
    "end": "1810860"
  },
  {
    "text": "and the CPO consumption is really really low for the case of of PHP since The Interpreter is bigger it needs to load",
    "start": "1810860",
    "end": "1817820"
  },
  {
    "text": "more code to for example encode more um all the functions provided by the",
    "start": "1817820",
    "end": "1823340"
  },
  {
    "text": "language and everything it will the footprint will be much much bigger the good thing is that when this happens",
    "start": "1823340",
    "end": "1831080"
  },
  {
    "text": "the envoy proxy initialized first the webassembly model so it's it's not like every request requires you to initialize",
    "start": "1831080",
    "end": "1837919"
  },
  {
    "text": "the model it says that you are calling the functions so once the initialization is completed as Raphael showed before",
    "start": "1837919",
    "end": "1843860"
  },
  {
    "text": "that it takes some time for PHP the footprint is already done there I'm replying questions just a matter of",
    "start": "1843860",
    "end": "1849980"
  },
  {
    "text": "sending and replying to that information we did the test between rust JavaScript and PHP and the time is mostly the same",
    "start": "1849980",
    "end": "1858980"
  },
  {
    "text": "so they don't change at all welcome thank you hi yeah that now is it working",
    "start": "1858980",
    "end": "1867260"
  },
  {
    "text": "good I have a similar question though uh more more on like not only on the",
    "start": "1867260",
    "end": "1873200"
  },
  {
    "text": "footprint but uh on the the stress test like on throughput or anything like have",
    "start": "1873200",
    "end": "1878299"
  },
  {
    "text": "you tested uh how much RAM can you allocate for the for the like uh the",
    "start": "1878299",
    "end": "1883580"
  },
  {
    "text": "wasm VM like it's see like if there's any limits to or if it gets like uh",
    "start": "1883580",
    "end": "1888919"
  },
  {
    "text": "bottlenecks at some point or if if the if you're using too much CPU then there",
    "start": "1888919",
    "end": "1894740"
  },
  {
    "text": "wasn't filters start to get like uh less uh throughput or like does it does that",
    "start": "1894740",
    "end": "1900799"
  },
  {
    "text": "anything happen at all",
    "start": "1900799",
    "end": "1903760"
  },
  {
    "text": "so uh we haven't done any measures because it has been like just the experiment for this talk and showing",
    "start": "1909820",
    "end": "1916279"
  },
  {
    "text": "that it's possible for people to reuse the software or the language that they already know uh but I think it's",
    "start": "1916279",
    "end": "1921440"
  },
  {
    "text": "interesting and I think it's something that we should do at some point in order to compare the different options that",
    "start": "1921440",
    "end": "1926840"
  },
  {
    "text": "are there but I don't know if you want to add something more yeah yeah okay okay",
    "start": "1926840",
    "end": "1932960"
  },
  {
    "text": "okay I think yeah I think here so yeah just to add that that it's true that it's something that from the web",
    "start": "1932960",
    "end": "1938899"
  },
  {
    "text": "assembly let's say ecosystem is a still work in progress so as you mentioned this is a question that we did not only",
    "start": "1938899",
    "end": "1944480"
  },
  {
    "text": "for proxy wasn't but for running in general webassembly workloads that currently there is no there is no way in",
    "start": "1944480",
    "end": "1951679"
  },
  {
    "text": "the runtimes for limiting memory or CPU it just goes up to the to the to the",
    "start": "1951679",
    "end": "1957200"
  },
  {
    "text": "requirement for that specific model for Envoy I didn't check the the",
    "start": "1957200",
    "end": "1962360"
  },
  {
    "text": "specific proxy was on C plus plus specification so I don't know if they have a specific throttling or anything",
    "start": "1962360",
    "end": "1968120"
  },
  {
    "text": "like that but yeah that's something that that if if at any time we put Javascript",
    "start": "1968120",
    "end": "1973580"
  },
  {
    "text": "or PHP filter we must do before to understand really how it affects the performance",
    "start": "1973580",
    "end": "1979640"
  },
  {
    "text": "cool in terms of difference uh I don't know but there is a way also to say like fill or gas uh to to the web assembly",
    "start": "1979640",
    "end": "1986360"
  },
  {
    "text": "runtime so it's also possible that you have an endless loop or something like that you're able to either kill that or or rebate or reduce the field that it's",
    "start": "1986360",
    "end": "1994039"
  },
  {
    "text": "able to to do in order to keep running so that will be killed oh all right working again right uh yeah",
    "start": "1994039",
    "end": "2002200"
  },
  {
    "text": "cool uh my and the second question uh is like have you ever had to to take",
    "start": "2002200",
    "end": "2010539"
  },
  {
    "text": "care like of States inside those uh wasn't filters as in like uh not only on",
    "start": "2010539",
    "end": "2015580"
  },
  {
    "text": "state that you that you maintained as a like a counter for a rate limit but actually like to download state from",
    "start": "2015580",
    "end": "2021100"
  },
  {
    "text": "somewhere else uh and something that like a config map just wouldn't be able to work yeah so um there is there is on",
    "start": "2021100",
    "end": "2029380"
  },
  {
    "text": "this on this aspect there is an API to actually perform HTTP requests outbound it should be request and there is there",
    "start": "2029380",
    "end": "2035740"
  },
  {
    "text": "is a there is a whole bunch of things that you can do uh in order to get a state from the outside world let's say",
    "start": "2035740",
    "end": "2041140"
  },
  {
    "text": "so this is the thing that it's also but as we were saying since it is unbox you need to specify what kinds of things you",
    "start": "2041140",
    "end": "2047019"
  },
  {
    "text": "are allowed to do within the sandbox uh but there there are kind of functions that allow you to do this kind of thing so you can make HTTP requests but",
    "start": "2047019",
    "end": "2053740"
  },
  {
    "text": "because the person wasn't a specification allows you to do so yeah my uh Mike like it also has",
    "start": "2053740",
    "end": "2060460"
  },
  {
    "text": "relation to like how often does your VM get restarted or anything like that because uh if you want if you want to",
    "start": "2060460",
    "end": "2066339"
  },
  {
    "text": "download like a gigabyte of State just to keep it in your in your awesome VM and then suddenly like every every uh",
    "start": "2066339",
    "end": "2072940"
  },
  {
    "text": "every like few seconds your plugin gets restarted uh you you may face uh",
    "start": "2072940",
    "end": "2078638"
  },
  {
    "text": "problems with like downloading so much stuff if it gets reloaded every like at just every like config map change or",
    "start": "2078639",
    "end": "2084878"
  },
  {
    "text": "anything like that then so maybe it gets better but like every like if suddenly like every time you you receive less",
    "start": "2084879",
    "end": "2092378"
  },
  {
    "text": "requests it like shuts down your VM and then spins it at back up it could face",
    "start": "2092379",
    "end": "2097540"
  },
  {
    "text": "problems right yeah I mean totally if it's something that that constantly I think it only",
    "start": "2097540",
    "end": "2103599"
  },
  {
    "text": "reloads at the time that you actually gets an error inside the VM so it traps there run and restart the virtual",
    "start": "2103599",
    "end": "2109420"
  },
  {
    "text": "matching so as long as the proxies is live is alive it will keep up yeah we",
    "start": "2109420",
    "end": "2114880"
  },
  {
    "text": "need to stop it's finished so we can continue the conversation thank you thank you very much everyone",
    "start": "2114880",
    "end": "2121140"
  }
]