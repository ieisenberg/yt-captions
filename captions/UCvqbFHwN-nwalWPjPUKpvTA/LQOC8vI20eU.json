[
  {
    "start": "0",
    "end": "31000"
  },
  {
    "text": "hello everyone welcome to our little talk um so obviously as you've seen from the",
    "start": "240",
    "end": "5440"
  },
  {
    "text": "title here we're going to talk about something pretty exciting uh which is um consuming mac os",
    "start": "5440",
    "end": "11040"
  },
  {
    "text": "compute inside of kubernetes um so this is something that we're super excited to talk about so today um you'll be hearing",
    "start": "11040",
    "end": "18160"
  },
  {
    "text": "both from myself and for my co-host madri and so we're respectively you know working at the companies that you see up",
    "start": "18160",
    "end": "24240"
  },
  {
    "text": "here and so a little bit about myself and flair to kick things off",
    "start": "24240",
    "end": "31760"
  },
  {
    "start": "31000",
    "end": "110000"
  },
  {
    "text": "so yeah a little bit about flare so you have to forgive me for looking up at the screen there's no mirroring here so um",
    "start": "31760",
    "end": "38079"
  },
  {
    "text": "yeah a little bit about flair we're part of bazel's experts program which is a community program organized by google",
    "start": "38079",
    "end": "44719"
  },
  {
    "text": "um to sort of connect uh you know folks in the bazel ecosystem with expert help",
    "start": "44719",
    "end": "49840"
  },
  {
    "text": "um so uh you know we do a lot of bazel consultancy uh working with a lot of large organizations um another thing",
    "start": "49840",
    "end": "56800"
  },
  {
    "text": "that we do is we actually offer um some value-added services uh in sort of",
    "start": "56800",
    "end": "62160"
  },
  {
    "text": "a sas or infrastructure as a service model to folks using bazel to build and test applications at scale so we'll dive",
    "start": "62160",
    "end": "68080"
  },
  {
    "text": "in a little bit into bazel i won't go too deep i don't want to bore you too much but um suffice it to say bazel is a",
    "start": "68080",
    "end": "73600"
  },
  {
    "text": "is a great build tool um that you know connects to you know remote clusters to do distributed builds um and that's you",
    "start": "73600",
    "end": "80479"
  },
  {
    "text": "know sort of the focus of my company flair and so you know one of the challenges here is we build these big distributed",
    "start": "80479",
    "end": "87040"
  },
  {
    "text": "systems to do distributed builds we also have to deal with um sort of unifying lots of different compute types so you",
    "start": "87040",
    "end": "93520"
  },
  {
    "text": "know for example mac os when we're doing ios builds so there's a lot of underlying complexity",
    "start": "93520",
    "end": "98560"
  },
  {
    "text": "here to the product that we're building and so we're of course thrilled to have partnered up with a loadle to help us",
    "start": "98560",
    "end": "104159"
  },
  {
    "text": "with some of the underlying infrastructure stuff so we can really focus on building out our product",
    "start": "104159",
    "end": "110078"
  },
  {
    "start": "110000",
    "end": "191000"
  },
  {
    "text": "and so with that madre do you want to introduce yourself i'm madri i'm founder of ilotal makers",
    "start": "111040",
    "end": "117439"
  },
  {
    "text": "of nodeless kubernetes the vision for nodeless communities is we have transitioned from treating applications",
    "start": "117439",
    "end": "124560"
  },
  {
    "text": "as pets to treating applications as cattle the vision for nodeless is to do the same for compute so not to have",
    "start": "124560",
    "end": "130879"
  },
  {
    "text": "pre-provisioned always on compute that's hand curated but compute that comes up and disappears according to application",
    "start": "130879",
    "end": "137440"
  },
  {
    "text": "life cycle so it falls in it works in two levels the first level is at a single cluster",
    "start": "137440",
    "end": "143360"
  },
  {
    "text": "where you just have a kubernetes control plane that is deployed and no compute that is",
    "start": "143360",
    "end": "149120"
  },
  {
    "text": "pre-provisioned at all the right size compute for the part comes up when the port starts so if an ios build is",
    "start": "149120",
    "end": "155440"
  },
  {
    "text": "scheduled a mac one metal instance comes up and if you want an arm compute shape for your app and arm",
    "start": "155440",
    "end": "161200"
  },
  {
    "text": "compute comes up and it could be in the shape of an on-demand spot or fargate launch type on aws and similarly for",
    "start": "161200",
    "end": "167519"
  },
  {
    "text": "other cloud providers as well and it also works in commoditizing workload clusters in a federation of",
    "start": "167519",
    "end": "174480"
  },
  {
    "text": "workload clusters so you can have policy driven application scheduling across multiple",
    "start": "174480",
    "end": "180000"
  },
  {
    "text": "workload clusters so you're not treating individual workload clusters as pets so having said that i'll hand it over back",
    "start": "180000",
    "end": "186480"
  },
  {
    "text": "to zach to uh go more about the problem statement great thanks",
    "start": "186480",
    "end": "192560"
  },
  {
    "start": "191000",
    "end": "310000"
  },
  {
    "text": "um so yeah a quick tl dr on bazel and distributed builds um so like i said you know bazel is google's open source build",
    "start": "192560",
    "end": "199920"
  },
  {
    "text": "system um some of you may be aware of it i assume uh it was used briefly i think in the kubernetes project uh although i",
    "start": "199920",
    "end": "206720"
  },
  {
    "text": "think they hit the eject button on that at some point recently so this build system is universal",
    "start": "206720",
    "end": "212400"
  },
  {
    "text": "extensible and fast um if the parameters are right and that's where flare comes in",
    "start": "212400",
    "end": "217599"
  },
  {
    "text": "something that is a little lesser known about bazel is it has great ios support and broad adoption through the mobile",
    "start": "217599",
    "end": "223680"
  },
  {
    "text": "native foundation and there's a lot of great work in the community to sort of make bazel",
    "start": "223680",
    "end": "228799"
  },
  {
    "text": "you know sort of the de facto for building large ios apps at scale these days and so another feature that i already",
    "start": "228799",
    "end": "234080"
  },
  {
    "text": "touched on is that bazel has what we call remote build execution which references a set of apis that are baked",
    "start": "234080",
    "end": "239840"
  },
  {
    "text": "into bazel to allow basically the bazel client running on a local machine to work as a scheduler and",
    "start": "239840",
    "end": "246000"
  },
  {
    "text": "schedule actions across a big distributed worker farm and that's again that's what flair is working on so",
    "start": "246000",
    "end": "252799"
  },
  {
    "text": "yeah actions executed by the bazel client might run either locally again and this is a ci agent or",
    "start": "252799",
    "end": "258880"
  },
  {
    "text": "a local developer's macbook for example um or these actions might actually run remotely and this would be where bazel",
    "start": "258880",
    "end": "266160"
  },
  {
    "text": "is sending those actions into the cloud to execute them and then most importantly maybe",
    "start": "266160",
    "end": "271199"
  },
  {
    "text": "some actions are just not executed at all because cache results are heavily reused so um",
    "start": "271199",
    "end": "277120"
  },
  {
    "text": "like i said this requires a server implementing a few of the remote api protocols um and that's what we offer",
    "start": "277120",
    "end": "283360"
  },
  {
    "text": "and one really important anecdote here is that these macro actions really need to be running on apple hardware so",
    "start": "283360",
    "end": "289680"
  },
  {
    "text": "it might be tempting to to try to run these actions on some linux hosts and there's some some emulation and things",
    "start": "289680",
    "end": "295440"
  },
  {
    "text": "that folks are looking into but um really long story short these actions are meant to be run on apple hardware",
    "start": "295440",
    "end": "301440"
  },
  {
    "text": "from a licensing perspective if nothing else so that's that's really important for us um and so that's sort of the",
    "start": "301440",
    "end": "306960"
  },
  {
    "text": "centerpiece of of course the talk today um so",
    "start": "306960",
    "end": "312240"
  },
  {
    "start": "310000",
    "end": "370000"
  },
  {
    "text": "you know we we launched this company you know just a few years ago so right around uh the time that these uh new aws",
    "start": "312240",
    "end": "319280"
  },
  {
    "text": "mac one metal instances were coming out um so of course you know we're super excited to see this um you know",
    "start": "319280",
    "end": "324639"
  },
  {
    "text": "especially when we look at folks building ios apps at scale this means potentially you know no more big messy closets jammed full of mac minis um you",
    "start": "324639",
    "end": "332639"
  },
  {
    "text": "know there's there's fast provisioning now um you know in theory without limits just aws resource quotas",
    "start": "332639",
    "end": "339440"
  },
  {
    "text": "and so this is great because of course provisioning new mac minis can take quite a while if you have to set these up in your own data",
    "start": "339440",
    "end": "345440"
  },
  {
    "text": "center of course aws is well known for auto scaling we have that in scare quotes",
    "start": "345440",
    "end": "351440"
  },
  {
    "text": "here because that's up for debate uh but in theory this is this is a feature that's that's provided",
    "start": "351440",
    "end": "357840"
  },
  {
    "text": "um and then of course you know standardizing the devsecops on aws is awesome rather than dealing with of",
    "start": "357840",
    "end": "363840"
  },
  {
    "text": "course any other infrastructure providers or bringing your own hardware",
    "start": "363840",
    "end": "369600"
  },
  {
    "start": "370000",
    "end": "490000"
  },
  {
    "text": "um so yeah so like i said these instances are great we're super excited to have launched our company requiring",
    "start": "370720",
    "end": "376960"
  },
  {
    "text": "mac compute right when these were available but there's unfortunately still a few shortcomings that we had to sort of",
    "start": "376960",
    "end": "382240"
  },
  {
    "text": "overcome especially in the earlier days here so you know i think the first is the",
    "start": "382240",
    "end": "387520"
  },
  {
    "text": "pricing model right now even with committed use discounts the pricing as can you can see clearly",
    "start": "387520",
    "end": "394479"
  },
  {
    "text": "here uh is a bit extravagant um you know when you're when you're dealing with you know a large number of nodes especially",
    "start": "394479",
    "end": "400960"
  },
  {
    "text": "um so this is of course one of the biggest sticking points that a lot of people have when it comes to adopting these mac minis",
    "start": "400960",
    "end": "407600"
  },
  {
    "text": "they're expensive another issue is that there is actually some hard limitations on auto scaling",
    "start": "407600",
    "end": "415120"
  },
  {
    "text": "so one of these is of course the 24 hour minimum allocation so if you kind of squint at that really",
    "start": "415120",
    "end": "420800"
  },
  {
    "text": "what this is saying well that's not really auto scaling at all right um so you know when we turn on a machine we're",
    "start": "420800",
    "end": "427199"
  },
  {
    "text": "stuck billing in 24 hour increments so we don't want to turn on 10 machines just to turn nine of them back off and",
    "start": "427199",
    "end": "432479"
  },
  {
    "text": "still be billed for the 24 hour period so as a result what we see is these instances are often underutilized after",
    "start": "432479",
    "end": "438880"
  },
  {
    "text": "we scale them up you might hang them around for another 23 hours after turning them on one of the biggest issues right now that",
    "start": "438880",
    "end": "445199"
  },
  {
    "text": "we see using sort of out of the box tooling is just that the existing auto scalers are really they're",
    "start": "445199",
    "end": "450240"
  },
  {
    "text": "meant for linux and they're just not a good fit for the shape of the mac compute",
    "start": "450240",
    "end": "455680"
  },
  {
    "text": "oh i guess i should explain the graphic here so this is actually a production",
    "start": "456319",
    "end": "463199"
  },
  {
    "text": "screen grab of course uh from a an instance running as a ci worker a mac os",
    "start": "463199",
    "end": "468560"
  },
  {
    "text": "uh metal instance running ci job so we can see here of course the jobs are coming in we're spiking up",
    "start": "468560",
    "end": "474160"
  },
  {
    "text": "close to 90 100 cpu but unfortunately there's just these big areas of the graph that are totally underutilized uh",
    "start": "474160",
    "end": "480800"
  },
  {
    "text": "which is of course one of the big challenges that we would like to address because we don't want to just you know be burning cpu cycles kind of like they",
    "start": "480800",
    "end": "486800"
  },
  {
    "text": "mentioned in the keynote um so um yeah so with these mac and one metal",
    "start": "486800",
    "end": "492960"
  },
  {
    "start": "490000",
    "end": "610000"
  },
  {
    "text": "instances of course um management became a whole lot easier but it's still not easy um some of some of the issues folks",
    "start": "492960",
    "end": "499520"
  },
  {
    "text": "working with these instances will have already run into is that of course even the smallest changes to the ami might take hours to bake and deploy and roll",
    "start": "499520",
    "end": "506400"
  },
  {
    "text": "out to all of your machines also again configuring the auto scaling uh for example for ci and remote build",
    "start": "506400",
    "end": "512800"
  },
  {
    "text": "workers that we're working with is still fairly complex even with you know aws primitives that we have in",
    "start": "512800",
    "end": "518719"
  },
  {
    "text": "terraform it still uh can be a bit of a challenge um obviously we've got this big terraform template we need to get",
    "start": "518719",
    "end": "524399"
  },
  {
    "text": "all that stuff just right set up all the auto scaling groups all that still not super straightforward um",
    "start": "524399",
    "end": "530640"
  },
  {
    "text": "so to sort of recap on some of the problems that we've seen at our company while adopting",
    "start": "530640",
    "end": "537200"
  },
  {
    "text": "you know the mac compute is really one configuration management while it's easier it's still a challenge two uh",
    "start": "537200",
    "end": "543680"
  },
  {
    "text": "auto scaled instances are underutilized and they're also expensive and then three you know what about bazel um",
    "start": "543680",
    "end": "550320"
  },
  {
    "text": "so some solutions that we've come across here uh working this space would be so for as far as the configuration and",
    "start": "550320",
    "end": "556080"
  },
  {
    "text": "management um well you know why don't we just go ahead and use kubernetes kubernetes in cloud native best practice",
    "start": "556080",
    "end": "561839"
  },
  {
    "text": "practices to manage these uh aws max and so of course that's where a loadless solution comes in",
    "start": "561839",
    "end": "568240"
  },
  {
    "text": "and then secondly you know auto scaled instances are expensive well uh one of the one of the hacks that we have here",
    "start": "568240",
    "end": "574240"
  },
  {
    "text": "is actually utilizing the the same workers both as the ci runners so the ci",
    "start": "574240",
    "end": "579680"
  },
  {
    "text": "agents that might be hooked up to a ci solution as well as executing the bazel remote actions and so that way the under",
    "start": "579680",
    "end": "586320"
  },
  {
    "text": "utilized cpus can now be you know joined in and work as part of the remote build farm when they're not",
    "start": "586320",
    "end": "591600"
  },
  {
    "text": "actively running ci jobs um and then yeah what about bazel well now that we've got this sort of unified",
    "start": "591600",
    "end": "597680"
  },
  {
    "text": "compute we don't have to have a separate pool of of workers running over here for our bazel agents then another one for ci",
    "start": "597680",
    "end": "603600"
  },
  {
    "text": "agents it all just runs on the same infrastructure all managed under kubernetes um",
    "start": "603600",
    "end": "608800"
  },
  {
    "text": "yeah so um yeah so kind of a quick a quick look at how you know the solution sort of evolved for us so of course if you're if",
    "start": "608800",
    "end": "615200"
  },
  {
    "start": "610000",
    "end": "668000"
  },
  {
    "text": "you're working on doing ios builds you should probably have a ci system so of course we stop start up here with that",
    "start": "615200",
    "end": "620800"
  },
  {
    "text": "as sort of a bare minimum you know running ci cd on mac one metal instances is really awesome",
    "start": "620800",
    "end": "627360"
  },
  {
    "text": "these instances are fast they're a little a little costly but they're great and then sort of moving moving up a tier",
    "start": "627360",
    "end": "634240"
  },
  {
    "text": "um you know of course we see using kubernetes to manage these ci cd workers uh on top of that aws mac one metal",
    "start": "634240",
    "end": "641120"
  },
  {
    "text": "that's that's pretty great and then you know for us of course total galaxy brain would be uh kubernetes",
    "start": "641120",
    "end": "646560"
  },
  {
    "text": "managed ci cd workers uh sort of is running in conjunction with those bazel",
    "start": "646560",
    "end": "651600"
  },
  {
    "text": "remote agents so here of course at the bottom we've kind of got a quick look at the whole stack where we're running again the ci agents",
    "start": "651600",
    "end": "658640"
  },
  {
    "text": "the remote build execution workers um all of that on these great new mac instances all managed by kubernetes and",
    "start": "658640",
    "end": "665600"
  },
  {
    "text": "that's where we are today um and so with that i'll go ahead and hand over to madrid to talk about some",
    "start": "665600",
    "end": "671360"
  },
  {
    "start": "668000",
    "end": "1062000"
  },
  {
    "text": "of the benefits of using the solution thanks zach um so when zach and others wanted to consume mac one metals on aws",
    "start": "671360",
    "end": "678959"
  },
  {
    "text": "uh we wanted to do an objective evaluation of hey do we really need kubernetes here um we are all here for",
    "start": "678959",
    "end": "685279"
  },
  {
    "text": "kubecon so we are all we all love kubernetes but for an end user we wanted to do a thorough evaluation as is this",
    "start": "685279",
    "end": "691839"
  },
  {
    "text": "really required is communities really required for managing these mac one metal instances or is manual management",
    "start": "691839",
    "end": "698560"
  },
  {
    "text": "good enough so we did benchmarking along four dimensions the first one is graceful termination of both the build",
    "start": "698560",
    "end": "705839"
  },
  {
    "text": "agent as well as the compute node the second one is build agent configuration and ongoing operations and the third one",
    "start": "705839",
    "end": "713279"
  },
  {
    "text": "is auto scaling of both the build agent as well as the underlying compute and the fourth axis is how do you reclaim uh",
    "start": "713279",
    "end": "721120"
  },
  {
    "text": "bad nodes which happen to be a more frequent scenario on for mac when metal",
    "start": "721120",
    "end": "726639"
  },
  {
    "text": "instances has compared to arm nodes or any other gpu devices or any other kinds of compute so let's go",
    "start": "726639",
    "end": "733600"
  },
  {
    "text": "into the details of each of these um let's start with graceful termination so",
    "start": "733600",
    "end": "739120"
  },
  {
    "text": "for build agent if you want to gracefully terminate it if you're if you're managing your map on metal nodes",
    "start": "739120",
    "end": "744880"
  },
  {
    "text": "manually you would have to configure ec2 life cycle hooks and you have to maintain these life cycle hooks and you",
    "start": "744880",
    "end": "751200"
  },
  {
    "text": "have to constantly monitor and edit these life cycle hooks which is huge amount of overhead for operation teams",
    "start": "751200",
    "end": "758000"
  },
  {
    "text": "whereas with kubernetes we all know that if you are running a build agent as a kubernetes pod even if you get a",
    "start": "758000",
    "end": "764880"
  },
  {
    "text": "termination notification the workload that's running inside the pod will will complete before the part",
    "start": "764880",
    "end": "771279"
  },
  {
    "text": "is gracefully terminated so you get that out of the box with in a kubernetes managed system and let's move on to",
    "start": "771279",
    "end": "778079"
  },
  {
    "text": "graceful termination of the nodes themselves again if you are managing your mach 1 metal computes manually you",
    "start": "778079",
    "end": "784480"
  },
  {
    "text": "would have to create configure manage and update your ec2 lifecycle hooks",
    "start": "784480",
    "end": "789680"
  },
  {
    "text": "and it's tightly coupled to your build agent whereas with kubernetes you you're able to cordon off the node and you can",
    "start": "789680",
    "end": "796800"
  },
  {
    "text": "drain the node and you can you can gracefully terminate the node so you get a lot of these graceful",
    "start": "796800",
    "end": "802320"
  },
  {
    "text": "termination requirements for both the workload build agent as well as the",
    "start": "802320",
    "end": "807600"
  },
  {
    "text": "underlying compute node out of the box if you use a kubernetes based",
    "start": "807600",
    "end": "812839"
  },
  {
    "text": "system uh next let's talk about build agent config so build agents uh would need certain kind of config information",
    "start": "812839",
    "end": "820000"
  },
  {
    "text": "for where your log files are located and stuff like that so if you're man if you're manually managing your uh build",
    "start": "820000",
    "end": "827199"
  },
  {
    "text": "agent on a mac one metal you would have to bake this config information into the ami at creation time and during ongoing",
    "start": "827199",
    "end": "835199"
  },
  {
    "text": "operations if you have to update the config you will have to provision a brand new node and update the config on",
    "start": "835199",
    "end": "841279"
  },
  {
    "text": "that node and uh and create a new ami out of it and then you have to churn all",
    "start": "841279",
    "end": "846639"
  },
  {
    "text": "of your existing nodes with the new ami which is huge amount of overhead for operations team",
    "start": "846639",
    "end": "852639"
  },
  {
    "text": "with respect to if you're managing it using kubernetes you are automatically able to do it",
    "start": "852639",
    "end": "859199"
  },
  {
    "text": "using kubernetes so you get much more ease of operations for the config",
    "start": "859199",
    "end": "864399"
  },
  {
    "text": "management because you can use config maps and secrets to pass in the config information so you simply have to update",
    "start": "864399",
    "end": "871360"
  },
  {
    "text": "your config map and secret and roll out a new deployment for your build agent so",
    "start": "871360",
    "end": "877680"
  },
  {
    "text": "it's it's a super easy operational simplicity associated with the build agent config management",
    "start": "877680",
    "end": "885800"
  },
  {
    "text": "the third dimension is auto scaling so we wanted to also evaluate how auto scaling of the build agent pods can can",
    "start": "885839",
    "end": "894000"
  },
  {
    "text": "work in a in a manually managed macro metal scenario and how auto scaling of",
    "start": "894000",
    "end": "899920"
  },
  {
    "text": "the underlying compute would work in a manually managed versus kubernetes managed scenario",
    "start": "899920",
    "end": "905440"
  },
  {
    "text": "let's look at auto scaling of the build agent first so if you want to configure auto scaling of",
    "start": "905440",
    "end": "911199"
  },
  {
    "text": "the build agents where you would want to scale up the build agents based on pending jobs in your build queue and scale them down",
    "start": "911199",
    "end": "917920"
  },
  {
    "text": "based on reduction in in pending jobs or during nights or weekends when your",
    "start": "917920",
    "end": "923519"
  },
  {
    "text": "build workload is going to be minimal you have to create auto scaling groups and you'll have to expose the metrics",
    "start": "923519",
    "end": "929839"
  },
  {
    "text": "from the build agents uh through cloud watch and you'll have to configure your uh xposed metrics through cloud was",
    "start": "929839",
    "end": "936959"
  },
  {
    "text": "through a lambda function or something and plug it into your auto scaling group so it's it's quite a bit of operational",
    "start": "936959",
    "end": "942959"
  },
  {
    "text": "overhead involved in in setting up all of these plumbing um networking in place",
    "start": "942959",
    "end": "948560"
  },
  {
    "text": "whereas with kubernetes uh you can have and you can have an hpa that is configured to scale your uh your build",
    "start": "948560",
    "end": "956160"
  },
  {
    "text": "agent parts up and down based on your uh based on your build workload so you already have the",
    "start": "956160",
    "end": "962240"
  },
  {
    "text": "the infrastructure in place you simply have to create a brand new hba um and let's look at auto scaling of mach 1",
    "start": "962240",
    "end": "969600"
  },
  {
    "text": "metal instances again it's tightly coupled in the manual scenario to the build agent so you'll have one-to-one",
    "start": "969600",
    "end": "976399"
  },
  {
    "text": "correspondence between build agent and macro and metal if you're manually managing them whereas with kubernetes",
    "start": "976399",
    "end": "982399"
  },
  {
    "text": "and nodeless kubernetes in particular the auto scaling comes out of box because based on pending jobs in your",
    "start": "982399",
    "end": "988800"
  },
  {
    "text": "kubernetes cluster needless kubernetes cluster will spin up new nodes and scale down new nodes and it is cost aware and",
    "start": "988800",
    "end": "996079"
  },
  {
    "text": "it's aware of the 24 hour billing cycle of the underlying compute so you you're able to get auto scaling out of the box",
    "start": "996079",
    "end": "1002240"
  },
  {
    "text": "as well the last dimension is bad instances we",
    "start": "1002240",
    "end": "1008720"
  },
  {
    "text": "have noticed anecdotally in most of our customer deployments that mac one metals",
    "start": "1008720",
    "end": "1014720"
  },
  {
    "text": "have non-trivial amount of bad notes in the in the available fleet that is made available by the cloud provider um one",
    "start": "1014720",
    "end": "1022000"
  },
  {
    "text": "such anecdote is in september of 2021 we know we noticed up to 10 percent of their north spun up weren't really",
    "start": "1022000",
    "end": "1028400"
  },
  {
    "text": "functional and uh if you if you were using manually if you were managing your",
    "start": "1028400",
    "end": "1033438"
  },
  {
    "text": "mach 1 metal instances manually you would someone had have would have to notice that hey my bill provided",
    "start": "1033439",
    "end": "1039839"
  },
  {
    "text": "my my bill failed and have to triage the failed build and then figure out that oh the node is not really it was never",
    "start": "1039839",
    "end": "1046798"
  },
  {
    "text": "really able to come up on this uh on this failed node whereas with kubernetes we all know that if a node is unhealthy",
    "start": "1046799",
    "end": "1054240"
  },
  {
    "text": "kubernetes control plane will never schedule the pod onto an unhealthy node so it's taken care of automatically",
    "start": "1054240",
    "end": "1062400"
  },
  {
    "start": "1062000",
    "end": "1190000"
  },
  {
    "text": "so having evaluated manually managed kubernetes manually managed versus kubernetes we decided to uh build the",
    "start": "1063360",
    "end": "1070480"
  },
  {
    "text": "following stack for managing uh mac1 metal instances four build workloads",
    "start": "1070480",
    "end": "1075919"
  },
  {
    "text": "orchestrated by a ci orchestrator using the kubernetes-based framework so at the top we have bill scalar which",
    "start": "1075919",
    "end": "1083200"
  },
  {
    "text": "is an hpa so bill scalar what it does is it looks at pending bills in your build",
    "start": "1083200",
    "end": "1089440"
  },
  {
    "text": "queue and it also looks at what percentage of your build agents are busy",
    "start": "1089440",
    "end": "1095840"
  },
  {
    "text": "and looking at the metrics collected from the build agents it will scale up number of build agent parts up and down",
    "start": "1095840",
    "end": "1103360"
  },
  {
    "text": "based on pending jobs in the build queue so if there are if there is an unexpected spike or if",
    "start": "1103360",
    "end": "1109120"
  },
  {
    "text": "there's a spike in the number of build jobs that have been provisioned it will uh increase the number of replicas for",
    "start": "1109120",
    "end": "1114960"
  },
  {
    "text": "the build agent parts up and it'll scale down the build agent part count down if",
    "start": "1114960",
    "end": "1120240"
  },
  {
    "text": "if not that many build agents are busy and going down one level the next level",
    "start": "1120240",
    "end": "1125840"
  },
  {
    "text": "is no less kubernetes no less kubernetes takes care of auto scaling the underlying compute based on pending",
    "start": "1125840",
    "end": "1132880"
  },
  {
    "text": "pending parts in the control plane so if there is an there is a spike in the",
    "start": "1132880",
    "end": "1138320"
  },
  {
    "text": "pending parts based on what hpa has uh advised kubernetes control plane no less",
    "start": "1138320",
    "end": "1144720"
  },
  {
    "text": "kubernetes will auto scale the mach 1 metal nodes up if there is an increase in the number of",
    "start": "1144720",
    "end": "1150400"
  },
  {
    "text": "pending build jobs and the third level is kubernetes control plane itself which gives us a lot of the graceful",
    "start": "1150400",
    "end": "1157360"
  },
  {
    "text": "termination and uh bad node management and monitoring and all of those nice",
    "start": "1157360",
    "end": "1163120"
  },
  {
    "text": "kubernetes goodness out of the box and at the fourth level is the mach 1 metal",
    "start": "1163120",
    "end": "1168480"
  },
  {
    "text": "node itself so mach 1 metal node when it's running in the nodeless kubernetes mode it is",
    "start": "1168480",
    "end": "1174320"
  },
  {
    "text": "going to run a cubelet stack so it's going to run a cubelet and a cri for mach 1 metal and that cri is going to",
    "start": "1174320",
    "end": "1181039"
  },
  {
    "text": "run your build agent pod and the build agent part is going to run both your build agent as well as the flare build",
    "start": "1181039",
    "end": "1187760"
  },
  {
    "text": "executor now let's look at each of these four",
    "start": "1187760",
    "end": "1193360"
  },
  {
    "start": "1190000",
    "end": "1363000"
  },
  {
    "text": "layers in action so let's start at the hpa build scalar build scalar is an open",
    "start": "1193360",
    "end": "1198799"
  },
  {
    "text": "source project from ilotal the links are provided at the end of this and in the final slide",
    "start": "1198799",
    "end": "1204960"
  },
  {
    "text": "so here you see that the running job count is listed in red so you see that",
    "start": "1204960",
    "end": "1211200"
  },
  {
    "text": "the running job count and the total agent count are tracking pretty",
    "start": "1211200",
    "end": "1216960"
  },
  {
    "text": "synchronously which means that bill scalar is is spinning up new agents",
    "start": "1216960",
    "end": "1222159"
  },
  {
    "text": "creating new agent agent parts based on pending jobs in the build queue so if there are there is a spike in the number",
    "start": "1222159",
    "end": "1228799"
  },
  {
    "text": "of bills being submitted new build agents are being created pretty much in",
    "start": "1228799",
    "end": "1233919"
  },
  {
    "text": "sync so you don't see any any amount of lag between the build agent parts and the pending",
    "start": "1233919",
    "end": "1241360"
  },
  {
    "text": "bills in the build queue the second layer is uh nodeless kubernetes where we are going to look at",
    "start": "1241360",
    "end": "1249600"
  },
  {
    "text": "so it provisions just in time compute when a part starts up and it terminates the compute when the part terminates and",
    "start": "1249600",
    "end": "1256640"
  },
  {
    "text": "the stack is comprised of of the compute order scalar that auto scales mach 1 metal compute and the",
    "start": "1256640",
    "end": "1264799"
  },
  {
    "text": "on the node you have um cubelet plus the cri that is max specific and this is of",
    "start": "1264799",
    "end": "1271600"
  },
  {
    "text": "course there's a free tier where you can provision and manage up to two mac one metal instances the entire kubernetes",
    "start": "1271600",
    "end": "1278000"
  },
  {
    "text": "stack for free so now let's look at nodeless kubernetes",
    "start": "1278000",
    "end": "1284400"
  },
  {
    "text": "hey luna in action so what we have here is a screenshot of a production",
    "start": "1284400",
    "end": "1289600"
  },
  {
    "text": "um no less kubernetes and managed macro and metal environment and you see that the the cost the price of macrometals is",
    "start": "1289600",
    "end": "1297200"
  },
  {
    "text": "trending up and down based on time of day day of week and uh",
    "start": "1297200",
    "end": "1302320"
  },
  {
    "text": "and day of year as well so let's try to super impose what we saw with the hpa",
    "start": "1302320",
    "end": "1309440"
  },
  {
    "text": "with the pending build jobs and pending uh pending build parts versus the cost and",
    "start": "1309440",
    "end": "1317039"
  },
  {
    "text": "you see that when there are more bills you're paying more and when there are less bills you're paying less so the",
    "start": "1317039",
    "end": "1323679"
  },
  {
    "text": "the lulls in the bills right here correspond to the low amount of cost",
    "start": "1323679",
    "end": "1328880"
  },
  {
    "text": "that is being that is being spent on your mark on metal so the uh nodeless",
    "start": "1328880",
    "end": "1334159"
  },
  {
    "text": "kubernetes component is smart enough to understand that your mac one metals are charged at a 24 hour cadence so it it",
    "start": "1334159",
    "end": "1342000"
  },
  {
    "text": "does predict that okay i've finished my build i just provisioned my my mark on metal but a lot of pending jobs so i'm",
    "start": "1342000",
    "end": "1349280"
  },
  {
    "text": "going to keep this mac one metal instance on and to schedule future builds so it doesn't churn the mac on",
    "start": "1349280",
    "end": "1354960"
  },
  {
    "text": "metals as often as it would churn on an arm based vm or an intel-based vm",
    "start": "1354960",
    "end": "1362720"
  },
  {
    "start": "1363000",
    "end": "1723000"
  },
  {
    "text": "so now look let's look at the entire thing in action so we're going to start with looking at build",
    "start": "1364159",
    "end": "1371600"
  },
  {
    "text": "scalar and nodeless less kubernetes no less kubernetes in action first and then",
    "start": "1371600",
    "end": "1376799"
  },
  {
    "text": "zach is going to talk about flare components and the build a flare build agent and how you're optimally utilizing",
    "start": "1376799",
    "end": "1382640"
  },
  {
    "text": "the compute that you provisioned for the mac",
    "start": "1382640",
    "end": "1387240"
  },
  {
    "text": "thanks zack so in the top window we are going to execute the operations in this um in",
    "start": "1388400",
    "end": "1393679"
  },
  {
    "text": "this architecture the bottom left window is where we are going to watch the nodes in the system the bottom right window we",
    "start": "1393679",
    "end": "1400320"
  },
  {
    "text": "are going to watch the parts in the system so we currently have the um",
    "start": "1400320",
    "end": "1405919"
  },
  {
    "text": "we currently have one mach 1 metal that is running in our environment and we",
    "start": "1405919",
    "end": "1411760"
  },
  {
    "text": "have the mac auto scaler which is nodeless kubernetes component that's the hpa that is scheduled that's configured",
    "start": "1411760",
    "end": "1418480"
  },
  {
    "text": "in the environment so if we look at the hpa the hpa say has a target of 90 and the",
    "start": "1418480",
    "end": "1427360"
  },
  {
    "text": "min number of parts is one max number of parts is three and we want to have uh",
    "start": "1427360",
    "end": "1432480"
  },
  {
    "text": "the current replicas is one what is what that means is that we want the hpa to scale from one pod to three parts",
    "start": "1432480",
    "end": "1440080"
  },
  {
    "text": "currently it is at one spot one part and we want we want it to perform a scale-up",
    "start": "1440080",
    "end": "1446400"
  },
  {
    "text": "operation if the mean utilization of the build agents is at 90 percent so if the",
    "start": "1446400",
    "end": "1452720"
  },
  {
    "text": "mean utilization of the build agents across two build pods or three billboard parts if it if it hits 90",
    "start": "1452720",
    "end": "1460559"
  },
  {
    "text": "that's when we want to perform the scale-up operation so let's go ahead and schedule a build um",
    "start": "1460559",
    "end": "1468480"
  },
  {
    "text": "if we kick off a build what we what we would want to see is that the hpa should",
    "start": "1468480",
    "end": "1473840"
  },
  {
    "text": "realize that okay a new build came into the build queue and we want to scale the",
    "start": "1473840",
    "end": "1479360"
  },
  {
    "text": "number of of the of the build parts from one to two",
    "start": "1479360",
    "end": "1484480"
  },
  {
    "text": "because the average utilization of the current build agent should hit should go",
    "start": "1484480",
    "end": "1490400"
  },
  {
    "text": "above 90. um so we should let's look at the new pod being scheduled and if you",
    "start": "1490400",
    "end": "1496559"
  },
  {
    "text": "look at the bottom right window the pod is in pending state because it doesn't have a machine metal compute to run on",
    "start": "1496559",
    "end": "1503679"
  },
  {
    "text": "so here is when nodeless kubernetes kicks in and it sees that oh there is a pending pod in the kubernetes",
    "start": "1503679",
    "end": "1509360"
  },
  {
    "text": "environment and there are no compute nodes available so it will go and schedule a create a brand new mac one",
    "start": "1509360",
    "end": "1516000"
  },
  {
    "text": "metal instance and that microphone metal instance you see in the bottom left window it's ready um and that's where",
    "start": "1516000",
    "end": "1523120"
  },
  {
    "text": "the uh the part is scheduled zach cool so so here's a quick look at um",
    "start": "1523120",
    "end": "1530559"
  },
  {
    "text": "uh of course some of the the metadata coming out of bazel um and so here we're taking a look at of course at the ci",
    "start": "1530559",
    "end": "1536080"
  },
  {
    "text": "output here and so i'll just explain a little bit more about what's going on under the hood so what we see actually happened here was",
    "start": "1536080",
    "end": "1541919"
  },
  {
    "text": "the uh the build ran in the ci environment but it actually you can see there if you look closely 11 actions",
    "start": "1541919",
    "end": "1547600"
  },
  {
    "text": "were executed remotely so we had a lot of cache hits because this was a pre-built uh",
    "start": "1547600",
    "end": "1552720"
  },
  {
    "text": "example here but we can see that we actually had a lot of uh well 11 actions were executed remotely and so this is a build of bazel",
    "start": "1552720",
    "end": "1559520"
  },
  {
    "text": "itself the open source project against one of our environments um and so we went ahead and clicked a link there to",
    "start": "1559520",
    "end": "1565120"
  },
  {
    "text": "link off into some of our um our ui that's actually gonna allow us to see a little bit more deeper into what's going on behind the scenes and that",
    "start": "1565120",
    "end": "1571360"
  },
  {
    "text": "bazel build so we can see a bunch of metadata about the build there the build logs um some some information about the",
    "start": "1571360",
    "end": "1577679"
  },
  {
    "text": "cache hits uh and all that stuff so this is powered by an api built into bazel to",
    "start": "1577679",
    "end": "1582799"
  },
  {
    "text": "expose that data to us here so that was an example of like a success case this is an example of when there's some",
    "start": "1582799",
    "end": "1588960"
  },
  {
    "text": "failures in bazel um so again in the ci system uh we've hooked into some some",
    "start": "1588960",
    "end": "1594000"
  },
  {
    "text": "life cycle events in bazel we've extracted and actually parsed some of the errors that were",
    "start": "1594000",
    "end": "1599039"
  },
  {
    "text": "dumped out during this build bubbled those up right in front of the user so in this case this failed because we",
    "start": "1599039",
    "end": "1604400"
  },
  {
    "text": "tried to execute a mac os build of bazel without any mac os workers available at all so of course the build failed",
    "start": "1604400",
    "end": "1611039"
  },
  {
    "text": "and so again clicking that link here um we go back in we see the you know the build details here in our platform um",
    "start": "1611039",
    "end": "1617440"
  },
  {
    "text": "and we actually see that we extracted this error so we'll we'll take a dive in there to kind of look at some of the the information there that we are gathering",
    "start": "1617440",
    "end": "1624320"
  },
  {
    "text": "about errors so when errors occur in the system we're actually like i said we're extracting",
    "start": "1624320",
    "end": "1629840"
  },
  {
    "text": "those with a proprietary algorithm and we while the stack trace doesn't look great this is the stack trace that was dumped",
    "start": "1629840",
    "end": "1636080"
  },
  {
    "text": "out of bazel and so we're actually kind of cataloging this error and so we can see you know the last time that this uh this error",
    "start": "1636080",
    "end": "1642880"
  },
  {
    "text": "was encountered in the system so it's sort of like you could think of it like sentry but for build time errors rather than",
    "start": "1642880",
    "end": "1648720"
  },
  {
    "text": "runtime so yeah so that's pretty much uh you know a quick snapshot of what the ui is able to",
    "start": "1648720",
    "end": "1654320"
  },
  {
    "text": "do and some of the metadata coming out of bazel so i'll hand it back over to madri i guess to talk a little bit more",
    "start": "1654320",
    "end": "1659600"
  },
  {
    "text": "about uh what's going on here yep so you see that um",
    "start": "1659600",
    "end": "1664799"
  },
  {
    "text": "you see the bill once the bill finished on the bottom right window the build kite the build",
    "start": "1664799",
    "end": "1670240"
  },
  {
    "text": "agent is terminating but you might wonder hey why is the compute node not being terminated the",
    "start": "1670240",
    "end": "1677200"
  },
  {
    "text": "compute node the mac one metal instance that's provisioned in the bottom left window it's still in ready state so",
    "start": "1677200",
    "end": "1682880"
  },
  {
    "text": "notice communities is smart enough to know that this compute node mach 1 metal that was provisioned",
    "start": "1682880",
    "end": "1689039"
  },
  {
    "text": "is going to cost you a dollar an hour for 24 hours irrespective of whether",
    "start": "1689039",
    "end": "1694640"
  },
  {
    "text": "your terminal going to terminate it now or 23 hours later so based on the pending parts in the um in the",
    "start": "1694640",
    "end": "1701679"
  },
  {
    "text": "environment and the past trends it does try to keep them at the mac one metal on",
    "start": "1701679",
    "end": "1706960"
  },
  {
    "text": "for a little longer if it predicts that another new build job is going to come in and instead of provisioning a third",
    "start": "1706960",
    "end": "1714159"
  },
  {
    "text": "mach 1 metal it's going to reuse this existing mach 1 metal",
    "start": "1714159",
    "end": "1721240"
  },
  {
    "start": "1723000",
    "end": "2083000"
  },
  {
    "text": "so we we had to extend the monitor instead of mirroring so that's why we're kind of like trying to figure out what's",
    "start": "1728720",
    "end": "1735039"
  },
  {
    "text": "going on by looking at the screen and not looking at our monitors",
    "start": "1735039",
    "end": "1739840"
  },
  {
    "text": "any questions about the whole hpa and mac one metal management while we figure",
    "start": "1743679",
    "end": "1749360"
  },
  {
    "text": "this out",
    "start": "1749360",
    "end": "1752600"
  },
  {
    "text": "so we are working on supporting m1 instance types that have been coming to",
    "start": "1757600",
    "end": "1762720"
  },
  {
    "text": "market so that is a work in progress currently we do want to add that support",
    "start": "1762720",
    "end": "1767840"
  },
  {
    "text": "uh pretty quickly in the environment so that should be coming out pretty soon as well",
    "start": "1767840",
    "end": "1772880"
  },
  {
    "text": "so the whole idea of nodeless kubernetes is is you as the end user of communities platform shouldn't worry about what are",
    "start": "1772880",
    "end": "1779520"
  },
  {
    "text": "the new newer better kinds of compute shapes coming into market",
    "start": "1779520",
    "end": "1784640"
  },
  {
    "text": "it's kind of like this yep um zach you want to talk about what's up in bazel environment in flint",
    "start": "1784960",
    "end": "1791440"
  },
  {
    "text": "yeah yeah sure yeah so on of course on the future road map you know we've got some items we want to",
    "start": "1791440",
    "end": "1796559"
  },
  {
    "text": "get to at some point so of course one of those would be some basal specific optimizations for our use case um so one",
    "start": "1796559",
    "end": "1802159"
  },
  {
    "text": "of the things that we want to do is maybe find a way to intelligently share some of the the bazel agent outputs",
    "start": "1802159",
    "end": "1807360"
  },
  {
    "text": "directly with the ci job and sort of short-circuit some of the round-trip network calls um that would make maybe a",
    "start": "1807360",
    "end": "1813200"
  },
  {
    "text": "potential impact there um of course the other big item that we're really excited about is that a little open sourced the",
    "start": "1813200",
    "end": "1820320"
  },
  {
    "text": "build scare scalar framework itself so that's that's of course super awesome so of course there's a link here we'll",
    "start": "1820320",
    "end": "1826000"
  },
  {
    "text": "share the slides definitely check it out um and then you know some other stuff of course uh you know the upcoming m1",
    "start": "1826000",
    "end": "1832320"
  },
  {
    "text": "support we're super excited about that from a bazel perspective of course uh these m1 chips are really really great",
    "start": "1832320",
    "end": "1838559"
  },
  {
    "text": "for for basal builds things are quite a lot faster um there's of course underlying complications there but we're",
    "start": "1838559",
    "end": "1844000"
  },
  {
    "text": "glad that we've got a loadle here to help us through some of those issues um so i think that's really it as far as a",
    "start": "1844000",
    "end": "1850000"
  },
  {
    "text": "future roadmap from our end um is there anything you want to add yeah that's about it uh so bill scalar it it is",
    "start": "1850000",
    "end": "1856480"
  },
  {
    "text": "designed in such a way that you can it can pull in external metrics from any ci orchestrator so it currently it supports",
    "start": "1856480",
    "end": "1863360"
  },
  {
    "text": "build kite circle ci flair build but it can be extended to any ci any ci metrics provider so it's it's",
    "start": "1863360",
    "end": "1870480"
  },
  {
    "text": "basically getting in the metrics from the ci agent and and converting it into metrics that can",
    "start": "1870480",
    "end": "1877440"
  },
  {
    "text": "be in injected by the hpa cool",
    "start": "1877440",
    "end": "1882799"
  },
  {
    "text": "um yeah so a few references of course you can find more of our product info out there on the web on our website um",
    "start": "1882799",
    "end": "1889600"
  },
  {
    "text": "and then madre you know run us through some of the links here yep yeah that's about it uh so there's a",
    "start": "1889600",
    "end": "1895120"
  },
  {
    "text": "free tier for mac one metal nodeless kubernetes like i mentioned earlier you can run it for up to two nodes so bill",
    "start": "1895120",
    "end": "1902399"
  },
  {
    "text": "scalar is open source which is the hpa that is open sourced and the free tier",
    "start": "1902399",
    "end": "1907840"
  },
  {
    "text": "for the mac one metal compute is open source so uh the the only thing that's",
    "start": "1907840",
    "end": "1912960"
  },
  {
    "text": "not a free tier is is free obviously and the only thing that's not",
    "start": "1912960",
    "end": "1918320"
  },
  {
    "text": "not open sourced yet is the mac auto scaler component and that is tbd",
    "start": "1918320",
    "end": "1925679"
  },
  {
    "text": "uh cool yeah of course reach out to us uh with any questions um you know we got our emails here and then i know there's",
    "start": "1926240",
    "end": "1932080"
  },
  {
    "text": "some online folks i don't know if there was meant to be like an online q a at all i don't know if anyone's monitoring that",
    "start": "1932080",
    "end": "1939270"
  },
  {
    "text": "[Music] but yeah i guess that's pretty much it obviously for our talk i think come find",
    "start": "1939270",
    "end": "1944720"
  },
  {
    "text": "us after we can chat do we have time for a quick q a here yep go ahead i imagine this system is primarily for",
    "start": "1944720",
    "end": "1951360"
  },
  {
    "text": "building software [Music]",
    "start": "1951360",
    "end": "1956399"
  },
  {
    "text": "oh yeah go to the mic please yeah the folks online your questions so",
    "start": "1956399",
    "end": "1961679"
  },
  {
    "text": "i think the question is this is primarily for osx os os",
    "start": "1961679",
    "end": "1966960"
  },
  {
    "text": "x builds is that right yeah yeah and the follow-up question is then in my",
    "start": "1966960",
    "end": "1972000"
  },
  {
    "text": "use case i've already built my osix software but i just want to test the configuration",
    "start": "1972000",
    "end": "1978159"
  },
  {
    "text": "and so my use case is like to install and reinstall and reinstall the same software does this system allow that",
    "start": "1978159",
    "end": "1985600"
  },
  {
    "text": "to keep reinstalling the software that i have on the mac hardware yeah that's a really good question so",
    "start": "1985600",
    "end": "1992559"
  },
  {
    "text": "this system is basically an application of kubernetes and nodeless kubernetes for",
    "start": "1992559",
    "end": "1997840"
  },
  {
    "text": "four builds so the way one of the slides that we had in the past talks about the build config",
    "start": "1997840",
    "end": "2005200"
  },
  {
    "text": "so this one would be",
    "start": "2005200",
    "end": "2008398"
  },
  {
    "text": "so you see the build agent config where you want to be able to",
    "start": "2013600",
    "end": "2018799"
  },
  {
    "text": "to inject different build agent config in data into your current port that would",
    "start": "2018799",
    "end": "2025120"
  },
  {
    "text": "become much much more easier by using this system than doing it manually because with kubernetes you're going to",
    "start": "2025120",
    "end": "2032080"
  },
  {
    "text": "be passing in all the config data as config maps or secrets stuff like that",
    "start": "2032080",
    "end": "2037279"
  },
  {
    "text": "so you'll be able to inject varying configurations dynamically at runtime so i can use the osx hardware for anything",
    "start": "2037279",
    "end": "2044159"
  },
  {
    "text": "i want to yes exactly sure any other questions",
    "start": "2044159",
    "end": "2051520"
  },
  {
    "text": "yeah that's a really good question so the question is what cri are we using so this is a cri that we built at elotal",
    "start": "2056079",
    "end": "2063040"
  },
  {
    "text": "for mac one metal so it's a cri that basically takes in the sierra is basically image",
    "start": "2063040",
    "end": "2069599"
  },
  {
    "text": "service and container service implementations right so that talked to the cubelet uh agent so the cri that we",
    "start": "2069599",
    "end": "2076960"
  },
  {
    "text": "built is a custom cri for mac for mac one metal that's part of the the closed source one",
    "start": "2076960",
    "end": "2083520"
  },
  {
    "start": "2083000",
    "end": "2239000"
  },
  {
    "text": "open source uh strategy tbd",
    "start": "2083520",
    "end": "2088200"
  },
  {
    "text": "any other questions yes so um are there any plans from your end to",
    "start": "2088639",
    "end": "2093839"
  },
  {
    "text": "support like physical kubernetes notes that are running on local hardware or hardware in the data",
    "start": "2093839",
    "end": "2099760"
  },
  {
    "text": "center because like if if i have a continuous base load that will be much much cheaper than any",
    "start": "2099760",
    "end": "2107119"
  },
  {
    "text": "uh aws instance yeah yeah so the the the nodeless community stack which is comprised of",
    "start": "2107119",
    "end": "2114079"
  },
  {
    "text": "the cri on the cubelet node and the autoscaler are both applicable to",
    "start": "2114079",
    "end": "2120160"
  },
  {
    "text": "on-prem so they the stack would work as is on an on-prem uh data center",
    "start": "2120160",
    "end": "2125760"
  },
  {
    "text": "yeah one one additional comment i would have on that is so from a bazel perspective of course it's important for us to allow folks that have big existing",
    "start": "2125760",
    "end": "2132160"
  },
  {
    "text": "fleets of macs to bring that um hardware to our solution so that's definitely some functionality that's sort of core",
    "start": "2132160",
    "end": "2138160"
  },
  {
    "text": "to our offering and that's i think one of the original reasons we reached out to a loadable is because we were looking for a way to have sort of hybrid cloud",
    "start": "2138160",
    "end": "2143520"
  },
  {
    "text": "setup support out of the box",
    "start": "2143520",
    "end": "2146800"
  },
  {
    "text": "do you have a mice for edward smack",
    "start": "2155359",
    "end": "2160400"
  },
  {
    "text": "with pre-built environment for this yes yeah yeah yeah yeah so the nice thing",
    "start": "2160400",
    "end": "2165599"
  },
  {
    "text": "about kubernetes in general and no less in particular is that",
    "start": "2165599",
    "end": "2171680"
  },
  {
    "text": "since we can define hey i want xcode was version abc and these other build packages or any other dependency",
    "start": "2171680",
    "end": "2177680"
  },
  {
    "text": "packages there are pre-built amis already available so if you if you mention the the",
    "start": "2177680",
    "end": "2183599"
  },
  {
    "text": "dependencies that you that are needed for your pod for running the workload in the pod manifest the right ami is picked",
    "start": "2183599",
    "end": "2190800"
  },
  {
    "text": "at runtime uh based on that information so is it managed by a flare",
    "start": "2190800",
    "end": "2196880"
  },
  {
    "text": "system or or yeah so that's a good question so if you're if you're if the ami is being used for",
    "start": "2196880",
    "end": "2204160"
  },
  {
    "text": "flare build plus build other kind of build agents then it's managed by flare flare and us",
    "start": "2204160",
    "end": "2211280"
  },
  {
    "text": "if you're using it for non-flare build related uh use cases then it would be",
    "start": "2211280",
    "end": "2216960"
  },
  {
    "text": "managed by us so it's basically an ami that's already in our fleet and we white list your",
    "start": "2216960",
    "end": "2222960"
  },
  {
    "text": "your aws account to consume it okay thanks sure any other questions",
    "start": "2222960",
    "end": "2230720"
  },
  {
    "text": "awesome thanks so much for joining our talk zach and i are super happy to share",
    "start": "2231760",
    "end": "2237200"
  },
  {
    "text": "thanks a lot everyone",
    "start": "2237200",
    "end": "2240680"
  }
]