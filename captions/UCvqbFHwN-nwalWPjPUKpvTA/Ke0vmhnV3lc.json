[
  {
    "start": "0",
    "end": "29000"
  },
  {
    "text": "all right we're gonna go ahead and get started here sorry for the late start we",
    "start": "0",
    "end": "5520"
  },
  {
    "text": "got a bit of a late transition going here but let's get going then alright so",
    "start": "5520",
    "end": "12090"
  },
  {
    "text": "I'm going to talk about adding a new storage provider to rook and what that looks like and some of the implications",
    "start": "12090",
    "end": "18600"
  },
  {
    "text": "of that my name is Jared watts I am a rook senior maintainer and I'm also one",
    "start": "18600",
    "end": "24810"
  },
  {
    "text": "of the founding engineers at upbound so we are going to jump in here now this is",
    "start": "24810",
    "end": "30510"
  },
  {
    "start": "29000",
    "end": "29000"
  },
  {
    "text": "a I think this is the very last session of the very last day of this conference so it's always a good to see anybody who",
    "start": "30510",
    "end": "37290"
  },
  {
    "text": "sticks around for that I saw one of my really good a guy that I used to work with the last job I really liked him and",
    "start": "37290",
    "end": "44070"
  },
  {
    "text": "I thought he really liked me but I told him that I was presenting at 4:30 today he's like I'll catch on YouTube so you",
    "start": "44070",
    "end": "50370"
  },
  {
    "text": "guys are here I know who my real friends are now all right so I spoken about rook",
    "start": "50370",
    "end": "55980"
  },
  {
    "text": "already this week as did the introduction to the rook project a couple days ago and Travis Neilson one",
    "start": "55980",
    "end": "63059"
  },
  {
    "text": "of the other maintainer zone the rook project spoke about rook earlier this earlier today and we had a little",
    "start": "63059",
    "end": "68549"
  },
  {
    "text": "session at the CN CF s meet the maintainer z-- booth earlier today too so there's been a whole lot of rook and",
    "start": "68549",
    "end": "75000"
  },
  {
    "text": "you you know I'm sure a lot of you have already heard about it but we're just going to do a little bit of level setting here so we're all on the same",
    "start": "75000",
    "end": "80909"
  },
  {
    "text": "page so what is rook so Brooke is a cloud native storage Orchestrator and what that means is that",
    "start": "80909",
    "end": "87630"
  },
  {
    "text": "we've taken kubernetes we've extended it with some custom types custom controllers and those are specifically",
    "start": "87630",
    "end": "95009"
  },
  {
    "text": "geared towards storage and how to manage storage so it's there's some automation software logic around deploying",
    "start": "95009",
    "end": "101670"
  },
  {
    "text": "bootstrapping configuring scaling migrating disaster recovery all sorts of stuff force complicated distributed",
    "start": "101670",
    "end": "108329"
  },
  {
    "text": "storage systems bringing them into kubernetes and helping them run well there so rick is also it's got a",
    "start": "108329",
    "end": "115049"
  },
  {
    "text": "framework now for adding or integrating other storage solutions into kubernetes",
    "start": "115049",
    "end": "120600"
  },
  {
    "text": "as well and that's going to really be the focus of this talk today and what that looks like and the rook project",
    "start": "120600",
    "end": "126570"
  },
  {
    "text": "that's open source the Apache 2.0 license and it is hosted donated it to",
    "start": "126570",
    "end": "131640"
  },
  {
    "text": "the cloud native computing found a we did that the beginning of this year so that was January and at the sandbox",
    "start": "131640",
    "end": "137980"
  },
  {
    "text": "level and just back in I think it was September or August we were graduated to",
    "start": "137980",
    "end": "144010"
  },
  {
    "text": "the incubation level all right so let's talk about some of the challenges running storage so really what you've",
    "start": "144010",
    "end": "151930"
  },
  {
    "start": "146000",
    "end": "146000"
  },
  {
    "text": "seen for a while with kubernetes there's this reliance on external storage or storage solutions or systems that are",
    "start": "151930",
    "end": "158380"
  },
  {
    "text": "outside of your cluster so that requires that those those systems are you know",
    "start": "158380",
    "end": "163780"
  },
  {
    "text": "created managed accessible there's a burden associated with those right somebody's got to do that for you and",
    "start": "163780",
    "end": "170830"
  },
  {
    "text": "then you could also take a take advantage of cloud provider managed services you know like if you need block",
    "start": "170830",
    "end": "176290"
  },
  {
    "text": "storage you can use Amazon's EBS or Google persistent disk and those services are great they come with a you",
    "start": "176290",
    "end": "182500"
  },
  {
    "text": "know an SLA they come with a full team that's managing it for you so they're good but if you take some of those",
    "start": "182500",
    "end": "188020"
  },
  {
    "text": "services they have you know you can get yourself into a situation with that dependency on that service and making it",
    "start": "188020",
    "end": "194620"
  },
  {
    "text": "difficult to move somewhere else and you get stuck with that vendor to spender lock in another problem is with storage",
    "start": "194620",
    "end": "200530"
  },
  {
    "text": "is day two right there was a whole talk on this that I it was a panel that I moderated on Monday at the cloud native",
    "start": "200530",
    "end": "206680"
  },
  {
    "text": "storage day where you know day one is cool you get your storage all set up it's running everything looks like it's",
    "start": "206680",
    "end": "212140"
  },
  {
    "text": "working good but then you've got day 2 3 4 in you know where all sorts of",
    "start": "212140",
    "end": "217150"
  },
  {
    "text": "disaster can happen so somebody's got to manage your storage for you so let's talk about a couple of solutions for",
    "start": "217150",
    "end": "222820"
  },
  {
    "start": "221000",
    "end": "221000"
  },
  {
    "text": "those one of them is that you know kubernetes pretty good at managing the lifecycle of complicated cost software",
    "start": "222820",
    "end": "230470"
  },
  {
    "text": "solutions so maybe we can bring our storage systems inside of kubernetes and harness that power of kubernetes to",
    "start": "230470",
    "end": "236920"
  },
  {
    "text": "manage some of these components for us so with you know some smarts an automation that we can put into software",
    "start": "236920",
    "end": "243280"
  },
  {
    "text": "maybe we can do some of that operations day to operation stuff for you that deployment burden for you let's let's",
    "start": "243280",
    "end": "248769"
  },
  {
    "text": "offer to do it that's a lot easier another thing to deal with that vendor locking problem we're talking about is",
    "start": "248769",
    "end": "253989"
  },
  {
    "text": "you know maybe we should create some portable abstractions for all of our storage needs not just block and file",
    "start": "253989",
    "end": "260100"
  },
  {
    "text": "and so let's talk about why that specifically is important so the power",
    "start": "260100",
    "end": "265390"
  },
  {
    "start": "261000",
    "end": "261000"
  },
  {
    "text": "of portability for me that comes down to the power of choice actually so if you take your application and you can it's truly",
    "start": "265390",
    "end": "272610"
  },
  {
    "text": "portable that all of its dependencies all of the you know resource requirements everything that that",
    "start": "272610",
    "end": "277860"
  },
  {
    "text": "application needs to run if you can take those and run them anywhere then mute now you have choice right you can choose",
    "start": "277860",
    "end": "283710"
  },
  {
    "text": "to run in one cloud provider because it's the cheapest cost or you can choose to run in another cloud provider or",
    "start": "283710",
    "end": "288900"
  },
  {
    "text": "on-premises because of other things like feature geographic presence availability",
    "start": "288900",
    "end": "294510"
  },
  {
    "text": "durability compliance all sorts of stuff but the point is you can have a choice and so what does it look like to start",
    "start": "294510",
    "end": "301410"
  },
  {
    "text": "taking our data wherever kubernetes goes so kubernetes you know you say you know",
    "start": "301410",
    "end": "307169"
  },
  {
    "text": "portability a lot of people think so far as kubernetes is done a great job with that which absolutely has but that's for",
    "start": "307169",
    "end": "313050"
  },
  {
    "text": "pods and volumes right so you can abstract an application to a pod and it's in containers that are gonna run in",
    "start": "313050",
    "end": "318360"
  },
  {
    "text": "a pod and its data needs for a volume those are very good abstractions they go along a long way but there's some things",
    "start": "318360",
    "end": "326070"
  },
  {
    "text": "that your application might need to use they don't fit into those categories what about you know message queues or",
    "start": "326070",
    "end": "332400"
  },
  {
    "text": "our object storage databases data pipelines all sorts of other things that we don't have good abstractions for",
    "start": "332400",
    "end": "339090"
  },
  {
    "text": "right now and that makes our applications very difficult to be portable you can't just take a",
    "start": "339090",
    "end": "344280"
  },
  {
    "text": "dependency on some of Amazon services and then just move to Google very easily that's it's you know you're kind of you",
    "start": "344280",
    "end": "350340"
  },
  {
    "text": "have that bit of that gravity there so there's also a new project a new open source project that is just over a week",
    "start": "350340",
    "end": "357000"
  },
  {
    "text": "old now we open sourced it last week so it's still very new and it's called crossplane and together with crossplane",
    "start": "357000",
    "end": "363360"
  },
  {
    "text": "working together with rook we can start solving some of these problems about having portable applications that can",
    "start": "363360",
    "end": "369090"
  },
  {
    "text": "run anywhere in the cloud and also on premises as well and that's going to be the demo we're gonna look at later on",
    "start": "369090",
    "end": "374370"
  },
  {
    "text": "today all right so let's talk about a few of the foundational knowledge that",
    "start": "374370",
    "end": "379860"
  },
  {
    "start": "375000",
    "end": "375000"
  },
  {
    "text": "we need to start talking about how do you add a storage provider to rook and what does that look like so we talked to",
    "start": "379860",
    "end": "386099"
  },
  {
    "text": "this in a couple of other talks and people are starting to see RDS becoming a pretty common expression now so we",
    "start": "386099",
    "end": "391680"
  },
  {
    "text": "won't spend too much time on it but basically with the custom resource definition you can teach kubernetes",
    "start": "391680",
    "end": "397260"
  },
  {
    "text": "about new types you can declare your own custom types and they become first-class citizens and the Cabrini's",
    "start": "397260",
    "end": "403949"
  },
  {
    "text": "experience too so just like pods and config maps and secrets and such your",
    "start": "403949",
    "end": "410300"
  },
  {
    "text": "arbitrary custom types can start being displayed and used and manipulated within the kubernetes api and cube",
    "start": "410300",
    "end": "417360"
  },
  {
    "text": "control just like any other of the first-class or built-in objects excuse me and now operators as well so operators",
    "start": "417360",
    "end": "425069"
  },
  {
    "start": "422000",
    "end": "422000"
  },
  {
    "text": "are a very useful software pattern that we found and we're starting to see those",
    "start": "425069",
    "end": "430470"
  },
  {
    "text": "pop up all over the place to manage complicated software solutions so the",
    "start": "430470",
    "end": "436259"
  },
  {
    "text": "first time I heard about this pattern I think was from core OS a couple years ago I think that they had a blog post",
    "start": "436259",
    "end": "441599"
  },
  {
    "text": "that really defined what this operator pattern is and so you know wouldn't",
    "start": "441599",
    "end": "447750"
  },
  {
    "text": "allows you to do is it allows you a user to define their desired state of what you want the application to do and then",
    "start": "447750",
    "end": "454259"
  },
  {
    "text": "the operator looks at that desired state and takes care of everything else for you so it does that in three steps one",
    "start": "454259",
    "end": "459780"
  },
  {
    "text": "of them is its first got to know what this system is doing and actually you know in reality it's got observe the system see what's there analyze what the",
    "start": "459780",
    "end": "466469"
  },
  {
    "text": "difference between what the user is asked for their desired state and what the actual system is doing make a",
    "start": "466469",
    "end": "472530"
  },
  {
    "text": "comparison there and figure out what to do what to act what operations to perform to drive that system towards",
    "start": "472530",
    "end": "478650"
  },
  {
    "text": "what the users a desired state actually is so there's a couple different ways to write operators what Brooke is currently",
    "start": "478650",
    "end": "486029"
  },
  {
    "start": "480000",
    "end": "480000"
  },
  {
    "text": "doing in the rook project we actually have our own ROC operator kit and this was written you know I think a couple",
    "start": "486029",
    "end": "492750"
  },
  {
    "text": "years ago almost it was you know a first first attempt at providing a framework",
    "start": "492750",
    "end": "498060"
  },
  {
    "text": "to make it easier to write these operators it's uh you know custom software to manage other software inside",
    "start": "498060",
    "end": "503819"
  },
  {
    "text": "of kubernetes and so that allows you to you know register your custom resources get skin events about when when a user",
    "start": "503819",
    "end": "511380"
  },
  {
    "text": "creates one or deletes one or updates one and start running code in response to that but there's there's been other",
    "start": "511380",
    "end": "517800"
  },
  {
    "text": "projects that have come out that are also solving this problem and one of them is the operator SDK that came out",
    "start": "517800",
    "end": "523589"
  },
  {
    "text": "of core OS and in queue builder is one that we've been using as well but these",
    "start": "523589",
    "end": "529050"
  },
  {
    "text": "take that idea a little bit further and provide a lot of generated code for you and basically we make takes the job as a developer of",
    "start": "529050",
    "end": "535589"
  },
  {
    "text": "writing an operator and takes away some of that manual work and makes it easier for you to write reliable operators to",
    "start": "535589",
    "end": "541410"
  },
  {
    "text": "manage other software systems so we'll see a little bit of examples from a couple of those actually okay so back to",
    "start": "541410",
    "end": "547890"
  },
  {
    "start": "546000",
    "end": "546000"
  },
  {
    "text": "rook so as we said before you can think of rook as a framework for managing you",
    "start": "547890",
    "end": "553920"
  },
  {
    "text": "know other storage systems and deploying them contributing configuring them bootstrapping and lot sort of stuff",
    "start": "553920",
    "end": "559800"
  },
  {
    "text": "and making that job easier so this framework here that allows a storage",
    "start": "559800",
    "end": "564839"
  },
  {
    "text": "systems to do that there's a couple of a couple different facets or areas that it enables to make that job easier so one",
    "start": "564839",
    "end": "571140"
  },
  {
    "text": "of them is that it provides a storage resource and normalization so what that means is that it provides a common",
    "start": "571140",
    "end": "576480"
  },
  {
    "text": "language a common way to describe how or what storage resources in your cluster",
    "start": "576480",
    "end": "582810"
  },
  {
    "text": "should be included in the storage system like for example this node and not that node nodes with this label selectors you",
    "start": "582810",
    "end": "590790"
  },
  {
    "text": "know specific devices you know SDA on node 4 whatever it may be it provides a common way to describe that and then",
    "start": "590790",
    "end": "597480"
  },
  {
    "text": "create a storage fabric out of those and it's kind of like we were talking about with the operator frameworks it does all",
    "start": "597480",
    "end": "604350"
  },
  {
    "text": "the patterns and plumbing to get an operator up and running start talking to the Kerber natives a API server and",
    "start": "604350",
    "end": "610380"
  },
  {
    "text": "perform its duties and start focusing then on how to manage the specifics and business logic of this you know specific",
    "start": "610380",
    "end": "617130"
  },
  {
    "text": "storage systems and you know policies and specs and logic reusable stuff that kind of helps and makes it easier for",
    "start": "617130",
    "end": "623400"
  },
  {
    "text": "storage systems to do their job and make sure that their storage is performing well inside of kubernetes and we also",
    "start": "623400",
    "end": "629520"
  },
  {
    "text": "have you know in the brook project integration pipeline that will you know test all your your storage systems and",
    "start": "629520",
    "end": "635880"
  },
  {
    "text": "the code on a whole matrix of kubernetes deployments and cloud providers and such so it makes you know it makes the job of",
    "start": "635880",
    "end": "642720"
  },
  {
    "text": "if you want to bring your storage into kubernetes that makes you know gives you a whole bunch of different features and functionality to make that easier for",
    "start": "642720",
    "end": "648810"
  },
  {
    "text": "you so we started with just staff at the beginning of the project and then we added on cockroach DB and min IO in the",
    "start": "648810",
    "end": "656100"
  },
  {
    "text": "Copenhagen Cuba and time frame I understood I started measuring when things happen both in software projects",
    "start": "656100",
    "end": "662310"
  },
  {
    "text": "and in my life by when certain Cube cons were so they're kind of milestones that you can think I don't know what release that was from rook but I know what Q con",
    "start": "662310",
    "end": "668640"
  },
  {
    "text": "it was and then we've also in the the release that we just did last week so I",
    "start": "668640",
    "end": "673800"
  },
  {
    "text": "know that one that was 0.94 cubed on Seattle and we added in FS Cassandra and",
    "start": "673800",
    "end": "679410"
  },
  {
    "text": "next sent to edge of s2 and so the interesting thing that I really wanted to call out here is that this is a",
    "start": "679410",
    "end": "685020"
  },
  {
    "start": "682000",
    "end": "682000"
  },
  {
    "text": "community driven project you know the first couple of storage systems we serve",
    "start": "685020",
    "end": "690120"
  },
  {
    "text": "were supporting is you know specialist F that was done by the core contributors of the Brooke project but with this",
    "start": "690120",
    "end": "695820"
  },
  {
    "text": "framework now we've enabled a whole bunch of new contributors to start adding more storage into rook and into",
    "start": "695820",
    "end": "702240"
  },
  {
    "text": "kubernetes there you know as well the storage seems themselves the ones that are the experts on those storage systems",
    "start": "702240",
    "end": "708450"
  },
  {
    "text": "and know how to run them best we've enabled them to start writing some of this code to bring them into kubernetes",
    "start": "708450",
    "end": "713940"
  },
  {
    "text": "so I wanted to call specifically Yanis Sark Odyssey is he works at arc though and he lives in Greece and he just did",
    "start": "713940",
    "end": "721260"
  },
  {
    "text": "that he did single-handedly the Cassandra Apache Cassandra operator and the amount of functionality that he put",
    "start": "721260",
    "end": "726960"
  },
  {
    "text": "into that before it even got into master branch was impeccable so that guy is amazing he did a great job",
    "start": "726960",
    "end": "732840"
  },
  {
    "text": "Rohan Gupta did he was a google Summer of Code mentee for us so through that",
    "start": "732840",
    "end": "738990"
  },
  {
    "text": "project there he got to work on enabling a network file system storage and rook",
    "start": "738990",
    "end": "744180"
  },
  {
    "text": "and then the hold Nick sent a team you know there have been enabled to the wreck Brook framework to bring in their edge FS you know filesystem project",
    "start": "744180",
    "end": "751710"
  },
  {
    "text": "where storage solution alright so let's start looking at a little bit of code here and then we're gonna get into a demo and I will not go over time I",
    "start": "751710",
    "end": "758400"
  },
  {
    "start": "752000",
    "end": "752000"
  },
  {
    "text": "promise you so you can get out of here and go to your holiday parties or whatever you need to do so okay so this",
    "start": "758400",
    "end": "764730"
  },
  {
    "text": "right here is a custom resource definition this is what tells kubernetes that you have a new type is a type that",
    "start": "764730",
    "end": "771120"
  },
  {
    "text": "represents object storage and Mineo and it gives it the name and some of this metadata that you can then that's",
    "start": "771120",
    "end": "777780"
  },
  {
    "text": "necessary to start manipulating it and showing up and cube control and all sorts of stuff so the API server will",
    "start": "777780",
    "end": "783150"
  },
  {
    "text": "know what am in IO object store is after you create this custom resource definition now this is an example of",
    "start": "783150",
    "end": "789420"
  },
  {
    "start": "788000",
    "end": "788000"
  },
  {
    "text": "creating an instance of that object storage type that we just declared so",
    "start": "789420",
    "end": "794610"
  },
  {
    "text": "this is a very contrived or very simple example where we're basically saying this is please give me an object",
    "start": "794610",
    "end": "800850"
  },
  {
    "text": "store created by manao and give me you know spread it across four nodes so very",
    "start": "800850",
    "end": "806670"
  },
  {
    "text": "simple but this is a way to you you can use cube control the native kubernetes experience the communities API to start",
    "start": "806670",
    "end": "813240"
  },
  {
    "text": "creating new types of storage inside your cluster so this sort of what the experience looks like you know we did a",
    "start": "813240",
    "end": "819420"
  },
  {
    "start": "816000",
    "end": "816000"
  },
  {
    "text": "cube control create on that object store MO and then we can say you know give me",
    "start": "819420",
    "end": "824610"
  },
  {
    "text": "the CR DS and these are the types of the API server nodes but it knows what Mineo is you know we can create the actual",
    "start": "824610",
    "end": "830579"
  },
  {
    "text": "instance of that object store and do a cube control get and we can see that objects store come back so the API server knows exactly what it is that",
    "start": "830579",
    "end": "837329"
  },
  {
    "text": "means that our operators will be able to see that somebody has asked for a new instance of manao object storage and it",
    "start": "837329",
    "end": "844529"
  },
  {
    "text": "can start working on it so let's take a little bit of more of a look on what the",
    "start": "844529",
    "end": "849810"
  },
  {
    "start": "845000",
    "end": "845000"
  },
  {
    "text": "what's the more like complicated specs look like and we looked at a very contrived example at first but so right",
    "start": "849810",
    "end": "855540"
  },
  {
    "text": "here this is how you start declaring a little bit more configuration about your storage system what's the important",
    "start": "855540",
    "end": "860579"
  },
  {
    "text": "things that you that the operator would need to know in order to make that storage system the way that you want it",
    "start": "860579",
    "end": "866009"
  },
  {
    "text": "to happen so we can see here in the red box there that all those things that are certain",
    "start": "866009",
    "end": "872339"
  },
  {
    "text": "circled the square all those things that are squared are are the configuration",
    "start": "872339",
    "end": "878939"
  },
  {
    "text": "properties that come from that common rook framework so you know the manao team didn't have to write any of that",
    "start": "878939",
    "end": "884399"
  },
  {
    "text": "logic or spec or information configuration stuff that just comes out of the Brooke framework so all they",
    "start": "884399",
    "end": "889829"
  },
  {
    "text": "needed to do was add the part at the bottom about the access keys for accessing the s3 protocol buckets that",
    "start": "889829",
    "end": "895620"
  },
  {
    "text": "manao object storage creates and that's all that they really had to add there so",
    "start": "895620",
    "end": "901620"
  },
  {
    "text": "the manao operator so for each one of the storage systems in rook you have to you'll write your own operator for it as",
    "start": "901620",
    "end": "906990"
  },
  {
    "text": "well that knows you know we'll be looking for events of when the user has decided to create an instance of your",
    "start": "906990",
    "end": "913560"
  },
  {
    "text": "type of storage and then it will start doing that work to turn that request from the user into an actual functioning",
    "start": "913560",
    "end": "919889"
  },
  {
    "text": "storage system it's really what we're seeing here is that we're just wrapping this in our deployment and we are running we're telling it to run the rook",
    "start": "919889",
    "end": "926699"
  },
  {
    "text": "manao operator so that's not too much complicated in here but the point is that you'll be running a specific",
    "start": "926699",
    "end": "933000"
  },
  {
    "text": "operator for your specific type of storage and building that can be",
    "start": "933000",
    "end": "939060"
  },
  {
    "start": "937000",
    "end": "937000"
  },
  {
    "text": "pretty easy because you can normally what ends up happening is it will take the upstream container image for your",
    "start": "939060",
    "end": "945360"
  },
  {
    "text": "storage for that storage system so from upstream video and we're just gonna slap the real binary in there and then that",
    "start": "945360",
    "end": "951480"
  },
  {
    "text": "turns it into basically a container image that is you know an operator they can start working on the storage system",
    "start": "951480",
    "end": "957560"
  },
  {
    "text": "this one's a pretty optimized system because it's based the base image is Alpine Linux so it's tends to be really",
    "start": "957560",
    "end": "963180"
  },
  {
    "text": "small when you just throw in the the rook you know statically compiled go binary so it ends up being pretty slim okay so",
    "start": "963180",
    "end": "972150"
  },
  {
    "start": "970000",
    "end": "970000"
  },
  {
    "text": "we saw any animal with you know that you can specify or declare that you want a",
    "start": "972150",
    "end": "977550"
  },
  {
    "text": "mini Oh object storage with these this this and this configuration properties so that's got to be backed up and you",
    "start": "977550",
    "end": "982710"
  },
  {
    "text": "know if you're gonna do anything programmatic you know you have to back it up with some code somewhere right so",
    "start": "982710",
    "end": "987960"
  },
  {
    "text": "this is what the going code looks like for the defines what an a mini object",
    "start": "987960",
    "end": "993990"
  },
  {
    "text": "storage type IRS's custom resource looks like and so we see here once again that all these types are that are in the",
    "start": "993990",
    "end": "1001190"
  },
  {
    "text": "square there are coming from the common rook framework this is how I want to or I want the ability to specify what",
    "start": "1001190",
    "end": "1007730"
  },
  {
    "text": "storage to include I want the ability to specify what resources should be limited and constrained such as CPU and memory I",
    "start": "1007730",
    "end": "1014480"
  },
  {
    "text": "want to be able to specify some networking configuration how should it use the network and the cluster that",
    "start": "1014480",
    "end": "1020480"
  },
  {
    "text": "it's being deployed to and then outside of that square we have their little credentials configuration that's",
    "start": "1020480",
    "end": "1026480"
  },
  {
    "text": "specific to manao it's not necessarily a common thing across all storage providers that gets added in there so",
    "start": "1026480",
    "end": "1032390"
  },
  {
    "text": "the user configure could configure that as well all right so the operator the mini operators got to start doing",
    "start": "1032390",
    "end": "1038360"
  },
  {
    "start": "1035000",
    "end": "1035000"
  },
  {
    "text": "something useful so what it needs to do is it's got to set up a watcher for",
    "start": "1038360",
    "end": "1043910"
  },
  {
    "text": "getting that will get us events for ads and updates and deletes when a user wants to manipulate the Mineo object",
    "start": "1043910",
    "end": "1050870"
  },
  {
    "text": "storage system so this you know will set up some event handlers that go through",
    "start": "1050870",
    "end": "1055940"
  },
  {
    "text": "the Brooks rook's operator kit and what they do is there'll listen you know subscribe to events on the kubernetes",
    "start": "1055940",
    "end": "1062210"
  },
  {
    "text": "api server and do that in a smart way with you know informers and Asha's and and some of those more",
    "start": "1062210",
    "end": "1069020"
  },
  {
    "text": "advanced concepts that allow that basically prevent the kubernetes api server from getting overwhelmed with a",
    "start": "1069020",
    "end": "1075710"
  },
  {
    "text": "bunch of gifts you know if we were to sit there and say hey do you have any changes if you have any changes you have any changes over and over again that",
    "start": "1075710",
    "end": "1081230"
  },
  {
    "text": "would be you know a dumb use of resources of the kubernetes api server so this is does this an intelligent way",
    "start": "1081230",
    "end": "1087320"
  },
  {
    "text": "where it'll get a Vince it's more of a push model of when you know somebody's created a object storage CRD with the",
    "start": "1087320",
    "end": "1095570"
  },
  {
    "text": "kubernetes api server will just get an event this kind of gets into a little bit more of those details there of you",
    "start": "1095570",
    "end": "1102200"
  },
  {
    "text": "know using an informer underneath an informer in a cache that you know does in a smart way a getting information",
    "start": "1102200",
    "end": "1109880"
  },
  {
    "text": "from the api server without excessively pulling doing a bunch of gits all right",
    "start": "1109880",
    "end": "1116450"
  },
  {
    "start": "1115000",
    "end": "1115000"
  },
  {
    "text": "and then we're gonna near the end of this video example so you know for your operator to handle your storage system",
    "start": "1116450",
    "end": "1122920"
  },
  {
    "text": "you've got to write a couple of handlers here like on add-on update on delete and",
    "start": "1122920",
    "end": "1128120"
  },
  {
    "text": "so this is here focus is on when the Mineo operator sees that the user has asked you to add video object storage to",
    "start": "1128120",
    "end": "1135410"
  },
  {
    "text": "your cluster it will go through programmatically some of the steps to make that happen so it will create a",
    "start": "1135410",
    "end": "1141320"
  },
  {
    "text": "headless service which is you know a great service object it'll create a stateful set to backup the the object",
    "start": "1141320",
    "end": "1149510"
  },
  {
    "text": "storage that many o is going to span across the multiple nodes that it cares about and it's going to create a service",
    "start": "1149510",
    "end": "1154580"
  },
  {
    "text": "object that people that clients will be able to connect to so this is all done programmatically using the kubernetes",
    "start": "1154580",
    "end": "1159860"
  },
  {
    "text": "api and the client go library and then",
    "start": "1159860",
    "end": "1164870"
  },
  {
    "text": "similarly we don't have any body of code in here but on an update we get the old object and the new objects we can do a",
    "start": "1164870",
    "end": "1169880"
  },
  {
    "text": "diff and see what changes the operators got to do to make that the users request to actually be a reality and reflect it",
    "start": "1169880",
    "end": "1177200"
  },
  {
    "text": "in the cluster all right so now some new stuff here that nobody has seen before I finished these slides in the code and",
    "start": "1177200",
    "end": "1184310"
  },
  {
    "start": "1178000",
    "end": "1178000"
  },
  {
    "text": "the demo I'm about to give somewhere sometime after midnight last night so it wasn't finished yesterday it was",
    "start": "1184310",
    "end": "1189560"
  },
  {
    "text": "actually finished today so this is brand new but let's talk about dynamic provisioning so demet dynamic",
    "start": "1189560",
    "end": "1195530"
  },
  {
    "text": "provisioning I think it was first introduced in kubernetes and I think it was one maybe but that really changed the game",
    "start": "1195530",
    "end": "1201700"
  },
  {
    "text": "for house storage is created and consumed inside kubernetes by",
    "start": "1201700",
    "end": "1207370"
  },
  {
    "text": "applications so before static provisioning what you had to do is you had administrator would",
    "start": "1207370",
    "end": "1212500"
  },
  {
    "text": "have to create manually create persistent volumes and I'd like kind of registered them in a big pool and so",
    "start": "1212500",
    "end": "1217600"
  },
  {
    "text": "when an application or a pod needed storage it would pull one from that pool when all those persistent volumes that",
    "start": "1217600",
    "end": "1223390"
  },
  {
    "text": "the demand that the user had manually created when there when you run out well you're out of volumes and you can't you",
    "start": "1223390",
    "end": "1229930"
  },
  {
    "text": "got to go crow manually create more it involves the administrator right and so they came up with this abstraction this",
    "start": "1229930",
    "end": "1235810"
  },
  {
    "text": "concept of storage classes and persistent clean volumes and so now I'm going to pause it here that that pattern",
    "start": "1235810",
    "end": "1242680"
  },
  {
    "text": "is incredibly useful for other types of storage as well not just volumes so this can be generalized to abstract types of",
    "start": "1242680",
    "end": "1250330"
  },
  {
    "text": "resources so we have here in the cross plane projects what we call resource classes and resource claims very similar",
    "start": "1250330",
    "end": "1256930"
  },
  {
    "text": "to storage classes and persistent volume claims but this is now something you can use to all sorts of tight types of",
    "start": "1256930",
    "end": "1262270"
  },
  {
    "text": "resources databases message queues you know buckets all sorts of stuff so a resource classes of blueprint that the",
    "start": "1262270",
    "end": "1268900"
  },
  {
    "text": "admin creates that kind of specifies how storage should be created in an environment and that the the specific",
    "start": "1268900",
    "end": "1275560"
  },
  {
    "text": "details about it you know all sorts of you know environments details and",
    "start": "1275560",
    "end": "1281080"
  },
  {
    "text": "specifics a resource claim though that's the developer it's kind of an abstraction of the developer gets to",
    "start": "1281080",
    "end": "1287590"
  },
  {
    "text": "specify a general need for storage there's give me a database please that's all it's kind of say very simple the administrator has taken care of the",
    "start": "1287590",
    "end": "1294010"
  },
  {
    "text": "concerns for you and this the details for you and this creates a separation of concerns that promotes reusability",
    "start": "1294010",
    "end": "1300730"
  },
  {
    "text": "reduces complexity because the developer all they gotta do is worry about their application they don't have to worry about the specifics of what environment",
    "start": "1300730",
    "end": "1307420"
  },
  {
    "text": "they'll be running in you know with dynamic provisioning when the storage is needed it's created the administrator",
    "start": "1307420",
    "end": "1313720"
  },
  {
    "text": "doesn't have to manually create create that for you ahead of time no pre allocation and so this gets back to",
    "start": "1313720",
    "end": "1319060"
  },
  {
    "text": "portability that we're talking about if you can write an app that you don't have to care about the details of how the its",
    "start": "1319060",
    "end": "1325000"
  },
  {
    "text": "resources are going to be provided to you at runtime you can write that up in one way right at once run it anywhere this is true portability",
    "start": "1325000",
    "end": "1332860"
  },
  {
    "text": "I'm gonna get started on the demo actually I think so we can kick that off and maybe we'll come back to these thighs all right so this is my cheat",
    "start": "1332860",
    "end": "1341410"
  },
  {
    "text": "sheet here this is not necessarily meant to be seen and I'm gonna kick this off cut and to tell you what I'm doing because this one runs a little bit",
    "start": "1341410",
    "end": "1348160"
  },
  {
    "text": "because this is doing some cloud operations okay okay so let's take a",
    "start": "1348160",
    "end": "1355000"
  },
  {
    "text": "look here at some of these concepts I was talking about so this year what we're looking at is a workload this is this is just a general example this is",
    "start": "1355000",
    "end": "1361540"
  },
  {
    "text": "not a specific application but it's conceptual so what we're looking at here is a workload that's going to run in the",
    "start": "1361540",
    "end": "1369490"
  },
  {
    "text": "cloud in a workload that's going to run locally on-premises now they look really similar right there's they're basically",
    "start": "1369490",
    "end": "1376510"
  },
  {
    "text": "line for line the exact same of specifying a resource of Postgres I need",
    "start": "1376510",
    "end": "1383260"
  },
  {
    "text": "Postgres just give me Postgres please and then inside the app being able to extract out that connection information",
    "start": "1383260",
    "end": "1390309"
  },
  {
    "text": "from the Postgres instance they're about like the user the end points made Oh",
    "start": "1390309",
    "end": "1397540"
  },
  {
    "text": "deleted some things have been supposed to but yeah so getting the you know the end point connection information user information password information but",
    "start": "1397540",
    "end": "1402940"
  },
  {
    "text": "basically the point is here that your applications written in one way and it's going to be able to run in any of the cloud providers Amazon Google as your",
    "start": "1402940",
    "end": "1409390"
  },
  {
    "text": "digital ocean whatever and it also run on premises with rook 2 if we look at",
    "start": "1409390",
    "end": "1415030"
  },
  {
    "text": "the resource claim that I was talking about this is it's it's they're the same there they're saying a general need for",
    "start": "1415030",
    "end": "1421660"
  },
  {
    "text": "a Postgres database and a specific resource class to use the one on the",
    "start": "1421660",
    "end": "1426940"
  },
  {
    "text": "left the one that we want to go to the cloud is using a resource class that's called cloud Postgres and the one on the",
    "start": "1426940",
    "end": "1432429"
  },
  {
    "text": "right that's going to use rook is is called local Postgres these are all the same the user the application author",
    "start": "1432429",
    "end": "1438070"
  },
  {
    "text": "doesn't have to know the details about where this Postgres is going to come from now here now this is what the",
    "start": "1438070",
    "end": "1445480"
  },
  {
    "text": "administrator deals with these resource classes very similar to storage classes for volumes now this is where the",
    "start": "1445480",
    "end": "1451450"
  },
  {
    "text": "details become apparent and this is the separation of concerns we're talking about where the administrator has to care about this but the application",
    "start": "1451450",
    "end": "1457780"
  },
  {
    "text": "author the developer does not so on the Left we we're going to this is specifying for this Postgres instance",
    "start": "1457780",
    "end": "1464950"
  },
  {
    "text": "they're the started for for Kress request i'm going to create that with cloud sequel in Google Google's",
    "start": "1464950",
    "end": "1472750"
  },
  {
    "text": "cloud provider and here's some specific details about it I want you to use SSDs 10 gigs each and dispense the tier of",
    "start": "1472750",
    "end": "1479830"
  },
  {
    "text": "machine to use some of those specific parameters fit on the right side here we have a resource class for Postgres",
    "start": "1479830",
    "end": "1486280"
  },
  {
    "text": "inside of a rook cluster locally and so what this is doing tying it back to the",
    "start": "1486280",
    "end": "1491410"
  },
  {
    "text": "rook storage providers is this is saying locally inside rook I want you to use cockroach DB when I say I want a",
    "start": "1491410",
    "end": "1498100"
  },
  {
    "text": "Postgres instance do it with cockroach and use rook to dynamically provision me",
    "start": "1498100",
    "end": "1503920"
  },
  {
    "text": "a cockroach DB closed clustered that will serve as Postgres so our workload our application it's all it said was",
    "start": "1503920",
    "end": "1510190"
  },
  {
    "text": "give me Postgres that could be cockroach DB locally on premises with rook or that",
    "start": "1510190",
    "end": "1515770"
  },
  {
    "text": "could be cloud sequel in Google or it could be Amazon RDS or it could be Asher's Postgres server as well doesn't",
    "start": "1515770",
    "end": "1521860"
  },
  {
    "text": "matter application doesn't care okay so hopefully I gave cloud sequel enough",
    "start": "1521860",
    "end": "1529510"
  },
  {
    "text": "time to get get going so we created cloud sequel let's look at actually at",
    "start": "1529510",
    "end": "1534730"
  },
  {
    "text": "some of the details of what I did so when I first did here and this is some ugly said I recognize that but this was",
    "start": "1534730",
    "end": "1541810"
  },
  {
    "text": "injecting my credentials my Google service account credentials from a secret or sorry from a file into a",
    "start": "1541810",
    "end": "1548500"
  },
  {
    "text": "secret so that when it comes time to provision that cloud sequel database",
    "start": "1548500",
    "end": "1553600"
  },
  {
    "text": "using crossplane it will have the print you know my credentials to perform that operation with my account and then we",
    "start": "1553600",
    "end": "1560500"
  },
  {
    "text": "created that resource class that we had there that says when somebody wants a Postgres instance you use this",
    "start": "1560500",
    "end": "1566140"
  },
  {
    "text": "information to creating with cloud sequel in google and that resource claimed that was saying okay this is",
    "start": "1566140",
    "end": "1571600"
  },
  {
    "text": "what a Postgres database which which specific class to use in a cloud",
    "start": "1571600",
    "end": "1577240"
  },
  {
    "text": "environment all right so that should be running and let's do the same thing here",
    "start": "1577240",
    "end": "1583000"
  },
  {
    "text": "for for cockroach for local so right now",
    "start": "1583000",
    "end": "1592990"
  },
  {
    "text": "I just created the operator the cockroach DB operator this is rooks you know it was written in rook using the",
    "start": "1592990",
    "end": "1598360"
  },
  {
    "text": "rook storage provider framework and it should be running now so I'm gonna say create the resource class that",
    "start": "1598360",
    "end": "1605110"
  },
  {
    "text": "we says to use cockroach instead of any other particular specific flavor of of Postgres and now that those",
    "start": "1605110",
    "end": "1613450"
  },
  {
    "text": "are things that you would do as an administrator as an admin of the cluster you'd be creating the operator and you'd",
    "start": "1613450",
    "end": "1619120"
  },
  {
    "text": "be creating the resource class and now as a user I be creating that resource claim that is you know the exact same on",
    "start": "1619120",
    "end": "1629890"
  },
  {
    "text": "both sides of you know using a resource class for the clouds supposed to Postgres and a resource class for local",
    "start": "1629890",
    "end": "1636850"
  },
  {
    "text": "Postgres all right so all those hopefully should be running now so let's go ahead and take a look at what they",
    "start": "1636850",
    "end": "1642550"
  },
  {
    "text": "look like the wrong one status it's",
    "start": "1642550",
    "end": "1648220"
  },
  {
    "text": "clear some space on the screen awesome so they're all done so in this command",
    "start": "1648220",
    "end": "1654190"
  },
  {
    "text": "we're basically saying please give me Q control give me the the resource claims",
    "start": "1654190",
    "end": "1660580"
  },
  {
    "text": "for the general need for Postgres database and we can see here that that general cloud Postgres database exists",
    "start": "1660580",
    "end": "1668680"
  },
  {
    "text": "it's running version 9.6 and then the local Postgres database is also running here and now note they're bound that's",
    "start": "1668680",
    "end": "1676090"
  },
  {
    "text": "the same concept that you see with persistent volumes and persistent volume claims so what are they bound to they're",
    "start": "1676090",
    "end": "1682360"
  },
  {
    "text": "bound to the the resource sorry the sorry the resources that were",
    "start": "1682360",
    "end": "1689860"
  },
  {
    "text": "dynamically provisioned from these resource claims these resource classes so we see here this one is a cloud",
    "start": "1689860",
    "end": "1695830"
  },
  {
    "text": "sequel instance that's running at Google and this one is a cockroach instance that's running locally on our using rook",
    "start": "1695830",
    "end": "1702820"
  },
  {
    "text": "on our local cluster so let's see if",
    "start": "1702820",
    "end": "1708180"
  },
  {
    "text": "cool so this is in the Google Cloud console and we could see here that",
    "start": "1708180",
    "end": "1714430"
  },
  {
    "text": "that's database was dynamically provisioned and created inside of you know the Google",
    "start": "1714430",
    "end": "1719980"
  },
  {
    "text": "cloud platform on demand force as well and let's take a look see at the at the",
    "start": "1719980",
    "end": "1729940"
  },
  {
    "text": "cockroach instance that's running to so you should see I think three different it's pods running for cockroach yeah",
    "start": "1729940",
    "end": "1735340"
  },
  {
    "text": "exactly so in our local cluster we've got a cockroach cluster made up of three nodes or three replicas all right",
    "start": "1735340",
    "end": "1742539"
  },
  {
    "text": "so stop back to the slides and talk about why this matters all right so as",
    "start": "1742539",
    "end": "1755500"
  },
  {
    "start": "1755000",
    "end": "1755000"
  },
  {
    "text": "we as we were talking about here that you know rook is a cloud native storage Orchestrator and it has a framework to",
    "start": "1755500",
    "end": "1760870"
  },
  {
    "text": "allow new types of storage to come inside kubernetes you know running that storage inside of kubernetes is can be a",
    "start": "1760870",
    "end": "1767169"
  },
  {
    "text": "great idea with operators to make them reliable and do day2 operations and provide storage right next to your",
    "start": "1767169",
    "end": "1773769"
  },
  {
    "text": "applications that need to consume that storage and then your the thing that's really new here is this concept of",
    "start": "1773769",
    "end": "1780220"
  },
  {
    "text": "dynamically provisioning on-the-fly new types of storage like databases and message queues etc in a very abstract",
    "start": "1780220",
    "end": "1787389"
  },
  {
    "text": "and portable way so that send you know that integration between the Brooke project here the local the new types of",
    "start": "1787389",
    "end": "1794110"
  },
  {
    "text": "storage that rook's providing and that are the new crossplane project it allows you basically to run your applications",
    "start": "1794110",
    "end": "1800679"
  },
  {
    "text": "anywhere and not have to change them at all okay then you know that ability",
    "start": "1800679",
    "end": "1807850"
  },
  {
    "text": "there it gives us portability right the power of choice so you can start choosing where you want to run your applications based on cost or features",
    "start": "1807850",
    "end": "1814330"
  },
  {
    "text": "or you know geographic region compliance all that sort of stuff and that's we've",
    "start": "1814330",
    "end": "1819970"
  },
  {
    "text": "not been able to do that before so that's something that is brand-new that I think is you know kubernetes did a",
    "start": "1819970",
    "end": "1825669"
  },
  {
    "text": "great job starting with with pods and volumes but we're taking it further now with all sorts of different types of",
    "start": "1825669",
    "end": "1831549"
  },
  {
    "text": "storage with crossplane and rook so if you want to get involved in the projects you know Brooke that IO and cross-play",
    "start": "1831549",
    "end": "1837340"
  },
  {
    "text": "know you can go to those websites and you know github they're open source projects we're always accepting new",
    "start": "1837340",
    "end": "1842409"
  },
  {
    "text": "contributors I think the rook project has over 100 contributors now so we're really happy about that but we want to",
    "start": "1842409",
    "end": "1848380"
  },
  {
    "text": "keep it going slack same thing and Twitter also talked to us all all bats and I think we have",
    "start": "1848380",
    "end": "1855970"
  },
  {
    "text": "maybe a minute or two for questions but basically that's it thank you very much guys I appreciate it",
    "start": "1855970",
    "end": "1862080"
  },
  {
    "text": "now that we have two minutes or sodas for anybody has a question yes yeah so",
    "start": "1864480",
    "end": "1882340"
  },
  {
    "text": "the question was about the integration test and the test Suites of a test",
    "start": "1882340",
    "end": "1887470"
  },
  {
    "text": "framework for new storage providers so yeah when you know we have that set of integration tests you're running on a",
    "start": "1887470",
    "end": "1893920"
  },
  {
    "text": "drink in the public Jenkins server and when a every pull request or every",
    "start": "1893920",
    "end": "1899470"
  },
  {
    "text": "commit to master or the release branches when in response that the Jenkins server will start up in it will start",
    "start": "1899470",
    "end": "1907390"
  },
  {
    "text": "provisioning kubernetes instances so it'll do like a one diet you have a put Travis's as a another maintainer here I",
    "start": "1907390",
    "end": "1912940"
  },
  {
    "text": "think he has a pull request to remove 1.8 and 1.9 but they could right now it's kubernetes 1.8 went at 9 all the",
    "start": "1912940",
    "end": "1918070"
  },
  {
    "text": "way through 1.13 and on Amazon and Google Cloud as well so it'll spin those",
    "start": "1918070",
    "end": "1923980"
  },
  {
    "text": "up for you and then it'll run that full suite of integration tests for all the storage providers on those kubernetes",
    "start": "1923980",
    "end": "1930610"
  },
  {
    "text": "clusters that it had brought up specifically for those tests so you can start doing things like you know create",
    "start": "1930610",
    "end": "1936550"
  },
  {
    "text": "your an instance of your operator for your you know your new storage type that you that you've defined and then start",
    "start": "1936550",
    "end": "1943240"
  },
  {
    "text": "creating a you know a custom resource for that operator so that your operator that we Brooke has deployed out to that",
    "start": "1943240",
    "end": "1949540"
  },
  {
    "text": "this kubernetes clusters and different versions that we deployed you know and run that for you and then create your",
    "start": "1949540",
    "end": "1955450"
  },
  {
    "text": "storage from the available resources in those criminales clusters and then you can write some test cases like you know",
    "start": "1955450",
    "end": "1962050"
  },
  {
    "text": "can I find the endpoint and connect to it and create a file or delete a file and start doing some of those test cases",
    "start": "1962050",
    "end": "1967780"
  },
  {
    "text": "that are specific to your type of storage but that framework for bringing up kubernetes installing your operator",
    "start": "1967780",
    "end": "1973150"
  },
  {
    "text": "your specific type of storage and getting it ready for you to start poking with tests is all common stuff yeah so",
    "start": "1973150",
    "end": "1981160"
  },
  {
    "text": "that is all the time we have so thanks guys have a great rest of the week [Applause]",
    "start": "1981160",
    "end": "1988380"
  }
]