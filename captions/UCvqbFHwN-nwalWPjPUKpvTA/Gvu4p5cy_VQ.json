[
  {
    "text": "anyway if you haven't figured out by now I am Kevin and uh I run most of the open",
    "start": "399",
    "end": "6160"
  },
  {
    "text": "source grpc team uh been on the team for two and a half years and been at Google",
    "start": "6160",
    "end": "11719"
  },
  {
    "text": "uh for 11 and a half years so a long time so we got a bunch of co-presenters they're going to come in and uh",
    "start": "11719",
    "end": "17760"
  },
  {
    "text": "Entertain You just like me so uh before we kind of jump in I wanted to tell you",
    "start": "17760",
    "end": "23920"
  },
  {
    "text": "um a little bit about the success we've seen with grpc and then we'll we'll jump into the technical content",
    "start": "23920",
    "end": "30480"
  },
  {
    "text": "and I'm super excited and I have all of you to thank for that all of our many users you can see we've got uh every",
    "start": "30480",
    "end": "37120"
  },
  {
    "text": "week 6.9 million downloads of the the the maven artifact in Java uh from Maven",
    "start": "37120",
    "end": "43559"
  },
  {
    "text": "Central uh in Python 2.4 million weekly downloads these are",
    "start": "43559",
    "end": "48760"
  },
  {
    "text": "really really big numbers and then U you know for node and mpm 11 million weekly",
    "start": "48760",
    "end": "53800"
  },
  {
    "text": "downloads and so this is a really impressive Trend and if you know one of",
    "start": "53800",
    "end": "58920"
  },
  {
    "text": "the things you know how are we trending over time and so these are a bunch of the languages um over time you just see",
    "start": "58920",
    "end": "66400"
  },
  {
    "text": "that that straight line growth uh linear growth over time and so we're super",
    "start": "66400",
    "end": "71439"
  },
  {
    "text": "super happy about that um we've had a bunch of you know uh both uh pull",
    "start": "71439",
    "end": "78159"
  },
  {
    "text": "requests from within the team and then also a bunch of external pull requests and so you know definitely we would love",
    "start": "78159",
    "end": "83240"
  },
  {
    "text": "to work with you on any of the future development if you want to help us out along the",
    "start": "83240",
    "end": "88360"
  },
  {
    "text": "way uh one of the the things um that we heard from all of you um at various",
    "start": "88360",
    "end": "95119"
  },
  {
    "text": "cubec cons and this started first back in Detroit uh about two years ago at the",
    "start": "95119",
    "end": "100439"
  },
  {
    "text": "cubon North America uh we ran a grpc conf as a as a co-located event and then",
    "start": "100439",
    "end": "105960"
  },
  {
    "text": "also did maintainer talk and some other stuff there and one of the feedback that we got was that from a documentation",
    "start": "105960",
    "end": "114360"
  },
  {
    "text": "perspective grpc was one of the hardest open- Source libraries um to use news",
    "start": "114360",
    "end": "120640"
  },
  {
    "text": "people found it confusing things were limited you a lot of times it was very very challenging to figure out how to do",
    "start": "120640",
    "end": "127399"
  },
  {
    "text": "things right and so the team you know went and did a bunch of amazing work um",
    "start": "127399",
    "end": "134000"
  },
  {
    "text": "you can see here just this year uh we added two six new guides for things that",
    "start": "134000",
    "end": "139040"
  },
  {
    "text": "didn't have any documentation whatsoever um I saw some a message from Peres two",
    "start": "139040",
    "end": "144920"
  },
  {
    "text": "days ago about another big section that uh he added so that's something that we're really focused on definitely let",
    "start": "144920",
    "end": "151879"
  },
  {
    "text": "us know if you're struggling with something uh another trending thing that we've started to do is to look at video",
    "start": "151879",
    "end": "158519"
  },
  {
    "text": "content we know you're like me you don't like to read I don't like to read either and so we're trying to get that short",
    "start": "158519",
    "end": "165440"
  },
  {
    "text": "form really focusing in on fairly polished at least polished from an engineer's perspective videos five",
    "start": "165440",
    "end": "173280"
  },
  {
    "text": "minutes roughly kind of teach you a concept quickly get in get out let you learn the basics and see if you want to",
    "start": "173280",
    "end": "179040"
  },
  {
    "text": "read more um we've also built a bunch of new examples that we didn't have um in the",
    "start": "179040",
    "end": "185000"
  },
  {
    "text": "past and just this year we added three new ones but last year there was just a ton more and so that's been something",
    "start": "185000",
    "end": "190959"
  },
  {
    "text": "that we're trying to keep on top of with all of our new development uh another cool thing that",
    "start": "190959",
    "end": "196879"
  },
  {
    "text": "we're working on right now um is is rust so adding support for rust um in grpc so",
    "start": "196879",
    "end": "205760"
  },
  {
    "text": "we've had rust um from tonic for a very very long time but it was not part of",
    "start": "205760",
    "end": "210879"
  },
  {
    "text": "the the cncf um project and so what we're doing now uh we're working with Lucio super",
    "start": "210879",
    "end": "217760"
  },
  {
    "text": "closely um rolling him in you know a bunch of the work that he's done um",
    "start": "217760",
    "end": "222879"
  },
  {
    "text": "under the cncf umbrella making it a core part of the supported um part of grpc so",
    "start": "222879",
    "end": "229200"
  },
  {
    "text": "it's been a really great partnership um working with him so we are in the super early stages of that and so if you're",
    "start": "229200",
    "end": "236480"
  },
  {
    "text": "interested in Rust and you want to help us make this integration amazing um",
    "start": "236480",
    "end": "243480"
  },
  {
    "text": "there's a bitly link uh bitly grpc Rush dest please let us know you're",
    "start": "243480",
    "end": "249480"
  },
  {
    "text": "interested um you know we're looking for folks we can get early feedback from uh give some early builds to uh give them",
    "start": "249480",
    "end": "256959"
  },
  {
    "text": "Early Access and just sort of you know act as a partner to us and the",
    "start": "256959",
    "end": "263040"
  },
  {
    "text": "team lastly um there's two more things I want to talk about uh I said lastly",
    "start": "263040",
    "end": "269720"
  },
  {
    "text": "means I didn't know my slides anyway um one of the things that we did really recently is created a a mailing list",
    "start": "269720",
    "end": "278199"
  },
  {
    "text": "that's just about super important topics and so um we do have a mailing list grpc",
    "start": "278199",
    "end": "284759"
  },
  {
    "text": "IO but the gpci is you know us announcing there's all kinds of stuff people are asking questions and so for",
    "start": "284759",
    "end": "291400"
  },
  {
    "text": "you it's a great place go out there tell us about your app ask some kind of question but the problem we have is the",
    "start": "291400",
    "end": "298280"
  },
  {
    "text": "signal to noise ratios really hot you know there's a lot of noise not a lot of signal um for for someone and we wanted",
    "start": "298280",
    "end": "305199"
  },
  {
    "text": "to make a place where we hope that all of our users will listen to every single message so if we have an outage or we",
    "start": "305199",
    "end": "311360"
  },
  {
    "text": "need to let you know that like do not use this build if you are update immediately or roll back or whatever it",
    "start": "311360",
    "end": "317120"
  },
  {
    "text": "is that's what this is all about and plus the most important thing telling you about grpc conf that's also going to",
    "start": "317120",
    "end": "322520"
  },
  {
    "text": "be there so um you know definitely subscribe to this mailing list this is something that went out in the last",
    "start": "322520",
    "end": "328199"
  },
  {
    "text": "couple months uh and so I think this went out uh either in October or November and so I'm going to guess no",
    "start": "328199",
    "end": "334360"
  },
  {
    "text": "one in the room is subscribed right I'm not either but um I probably write most of the messages that that go out here um",
    "start": "334360",
    "end": "342280"
  },
  {
    "text": "cool so last slide just wanted to let folks know that we are very very",
    "start": "342280",
    "end": "348000"
  },
  {
    "text": "interested in doing graduation for grpc and so uh Richard's driving a bunch of",
    "start": "348000",
    "end": "353840"
  },
  {
    "text": "those efforts he's going to submit a poll request um for the graduation really soon next year here and I hope",
    "start": "353840",
    "end": "361199"
  },
  {
    "text": "all of you will go in to the pull request and you know give us a little",
    "start": "361199",
    "end": "366759"
  },
  {
    "text": "love there add some comments how great this would be put a little pressure on cncf to do the right thing and uh and",
    "start": "366759",
    "end": "372599"
  },
  {
    "text": "make that happen right um so I am looking forward to that we did make you know we have a bunch of changes coming",
    "start": "372599",
    "end": "378639"
  },
  {
    "text": "but they're all for the good we had some really sort of loosely written governance before that there was a bunch",
    "start": "378639",
    "end": "384680"
  },
  {
    "text": "of areas of improvement we've been working with the CNF on getting ideas on how to improve that and did that and so",
    "start": "384680",
    "end": "391160"
  },
  {
    "text": "um with that I am going to hand it off to pesh and he's going to start with some of the basics of grpc thanks",
    "start": "391160",
    "end": "398759"
  },
  {
    "text": "[Applause] everyone uh hello everyone uh I'm pesh",
    "start": "399000",
    "end": "405919"
  },
  {
    "text": "dshit I work at Google in the grpc team and I'm the maintainer for grpc go first",
    "start": "405919",
    "end": "412440"
  },
  {
    "text": "of all uh grpc is a Cutting Edge open source high performance remote procedure",
    "start": "412440",
    "end": "418080"
  },
  {
    "text": "call framework uh it's blazing fast super easy to use incredibly efficient",
    "start": "418080",
    "end": "423479"
  },
  {
    "text": "and has become a go-to standard in the industry uh but in simpler terms think",
    "start": "423479",
    "end": "428879"
  },
  {
    "text": "of it as the superflight service for your data it's what gets those bits and",
    "start": "428879",
    "end": "434360"
  },
  {
    "text": "bites zipping across the Internet connecting your services and applications in smooth and reliable",
    "start": "434360",
    "end": "442039"
  },
  {
    "text": "way JPC uh is applicable to wide array of use cases it enables communication",
    "start": "442039",
    "end": "449280"
  },
  {
    "text": "between between a wide array of devices from mobile phones and web browsers to desktops to various backend platforms",
    "start": "449280",
    "end": "457479"
  },
  {
    "text": "this versatility makes it the perfect choice for building microservices and distributed applications across your",
    "start": "457479",
    "end": "464479"
  },
  {
    "text": "organizations whether on Prem or on in the cloud JPC is popular because it's",
    "start": "464479",
    "end": "471800"
  },
  {
    "text": "suitable for different things in addition to being available for wide",
    "start": "471800",
    "end": "476960"
  },
  {
    "text": "range of programming languages and platforms gpc's performance is industry",
    "start": "476960",
    "end": "482360"
  },
  {
    "text": "leading many components are designed to be pluggable making integration with",
    "start": "482360",
    "end": "488280"
  },
  {
    "text": "your personal text tag flexible and efficient it has Rich features around",
    "start": "488280",
    "end": "493599"
  },
  {
    "text": "traffic management security as well as custom tailored features for service mesh just to name a few examples let's",
    "start": "493599",
    "end": "501360"
  },
  {
    "text": "expand more on this gpc's popularity stands on a few",
    "start": "501360",
    "end": "506639"
  },
  {
    "text": "fundamental design decisions the first is protuff JPC uses protuff for data",
    "start": "506639",
    "end": "513200"
  },
  {
    "text": "serialization and deserialization protuff is an open-",
    "start": "513200",
    "end": "519200"
  },
  {
    "text": "Source language agnostic framework all grpc language implementations use a",
    "start": "519200",
    "end": "525480"
  },
  {
    "text": "protocol buffer compiler plugin to generate code enabling them to talk to each other across a variety of platforms",
    "start": "525480",
    "end": "533160"
  },
  {
    "text": "protoc us is a binary encoding enabling efficient passing and reducing the bite",
    "start": "533160",
    "end": "538440"
  },
  {
    "text": "size on The Wire which is the key this is a key contributor to jpc's competitive performance to the other",
    "start": "538440",
    "end": "545480"
  },
  {
    "text": "messaging systems with protobuf grpc features extensive language and platform",
    "start": "545480",
    "end": "551680"
  },
  {
    "text": "support and we are excited to share as uh Kevin mentioned that rust support is",
    "start": "551680",
    "end": "557480"
  },
  {
    "text": "also on the way uh grpc is built on",
    "start": "557480",
    "end": "565959"
  },
  {
    "text": "http2 uh this makes it compatible with many load balance and proxies http2",
    "start": "565959",
    "end": "571600"
  },
  {
    "text": "reduces the number of TCP connections which and includes header compression",
    "start": "571600",
    "end": "576760"
  },
  {
    "text": "this these aspects contribute to gpc's high performance reducing latency and",
    "start": "576760",
    "end": "581800"
  },
  {
    "text": "making better use of resources jumping into the concepts that",
    "start": "581800",
    "end": "587640"
  },
  {
    "text": "makes up grpc we have the channel a channel you can think of is an",
    "start": "587640",
    "end": "593000"
  },
  {
    "text": "abstraction over the endpoint you can send messages to or receive messages from",
    "start": "593000",
    "end": "599680"
  },
  {
    "text": "channels are the first object you will create in order to use grpc again code",
    "start": "599680",
    "end": "605160"
  },
  {
    "text": "labs are highly recommended for you to get some quick practical experience while channels are an",
    "start": "605160",
    "end": "612079"
  },
  {
    "text": "abstraction subchannels are the real connection to your backin during its life cycle grpc opens these subchannels",
    "start": "612079",
    "end": "620399"
  },
  {
    "text": "and dynamically selects them to Multiplex rpcs over the channel the grpc",
    "start": "620399",
    "end": "626440"
  },
  {
    "text": "runtime reports Channel status and determines when it's necessary to tear down uh the subchannel and to return",
    "start": "626440",
    "end": "634480"
  },
  {
    "text": "resources uh and now I'll hand over to",
    "start": "634480",
    "end": "639160"
  },
  {
    "text": "shti thank you PES um I am shti from the grpc team at Google and I am one of the",
    "start": "639920",
    "end": "645920"
  },
  {
    "text": "maintainers for grpc python so with uh punes explaining the Core Concepts let's",
    "start": "645920",
    "end": "652480"
  },
  {
    "text": "now look at the life of an RPC so grpc is very simple to use the application",
    "start": "652480",
    "end": "658560"
  },
  {
    "text": "just needs to use a channel to create a stub to send requests um stubs are",
    "start": "658560",
    "end": "664240"
  },
  {
    "text": "nothing but a layer of generated code so they create a call via the grpc runtime",
    "start": "664240",
    "end": "669519"
  },
  {
    "text": "which further creates a stream at the transport layer so in grpc uh when I say an RPC",
    "start": "669519",
    "end": "676920"
  },
  {
    "text": "call or stream all of them mean the same fundamental communication mechanism but",
    "start": "676920",
    "end": "682040"
  },
  {
    "text": "they're just referred to by different names in different stages of the life cycle so next uh we said uh yeah we said",
    "start": "682040",
    "end": "691880"
  },
  {
    "text": "about the transport layer now the transport speaks in terms of IP addresses whereas the application will",
    "start": "691880",
    "end": "698320"
  },
  {
    "text": "provide the host name when creating a channel so the first step that JPC will do is uh name resolution and name",
    "start": "698320",
    "end": "706519"
  },
  {
    "text": "resolution is often thought to be the same as DNS but however DNS is usually",
    "start": "706519",
    "end": "712440"
  },
  {
    "text": "augmented with extensions or like completely replaced to enable name resolution so what it fundament means is",
    "start": "712440",
    "end": "720279"
  },
  {
    "text": "service Discovery and JPC supports customizing the name resolution by",
    "start": "720279",
    "end": "725600"
  },
  {
    "text": "supplying your own name resolver implementations so name resolver would",
    "start": "725600",
    "end": "733160"
  },
  {
    "text": "return something called a service config to the next element next component which is the load balancer and the service",
    "start": "733160",
    "end": "739480"
  },
  {
    "text": "config is a blob of data that tells the grpc runtime exactly how to initiate",
    "start": "739480",
    "end": "745519"
  },
  {
    "text": "connections and balance the requests between them so the load balancer uh manages subchannels",
    "start": "745519",
    "end": "752800"
  },
  {
    "text": "connection statuses and also Distributing requests among the multiple backend servers so using the service",
    "start": "752800",
    "end": "759360"
  },
  {
    "text": "config the loading load balancing code understands where and how to Road the traffic like uh which load balancing",
    "start": "759360",
    "end": "766720"
  },
  {
    "text": "algorithm to use and other things like whether or not to actively perform health checks on the backends and just",
    "start": "766720",
    "end": "773800"
  },
  {
    "text": "like we saw with name resolvers load balancer implementations are also pluggable meaning that they can uh you",
    "start": "773800",
    "end": "780440"
  },
  {
    "text": "can provide your custom um load balancing algorithms and some of the built-in ones we support are pick first",
    "start": "780440",
    "end": "787600"
  },
  {
    "text": "round robin waited round robin and Lease request um yeah now let's uh now that",
    "start": "787600",
    "end": "794680"
  },
  {
    "text": "things start to be set in motion the load balancing code starts up by establishing a TCP connection to all the",
    "start": "794680",
    "end": "801399"
  },
  {
    "text": "backends returned by the service config I mean by the name resolver and when rpcs are active it's the load balancing",
    "start": "801399",
    "end": "808639"
  },
  {
    "text": "codes job to monitor the connection statuses of each subchannel and if needed to tear down the unhealthy ones",
    "start": "808639",
    "end": "815680"
  },
  {
    "text": "so load balancing essentially divides the grpc runtime into a control plane",
    "start": "815680",
    "end": "820720"
  },
  {
    "text": "and a data plane a grpc channel will maintain a cast picker which does per",
    "start": "820720",
    "end": "826079"
  },
  {
    "text": "RPC routing in the data plane path while the load balancer creates and swaps the",
    "start": "826079",
    "end": "831920"
  },
  {
    "text": "Picker in Flight uh in the control plane this ensures that the grpc services can",
    "start": "831920",
    "end": "837639"
  },
  {
    "text": "scale effectively and performant next now that the connection",
    "start": "837639",
    "end": "843000"
  },
  {
    "text": "is established grpc can send the request data using the protu serialization",
    "start": "843000",
    "end": "848360"
  },
  {
    "text": "format and the data is framed using the http2 protocol now the request reaches the",
    "start": "848360",
    "end": "855600"
  },
  {
    "text": "server side and the service side is nothing but a mirror of the client side the server transport receives the",
    "start": "855600",
    "end": "862519"
  },
  {
    "text": "request it notifies the application and the application will send a response on the stub um and finally the grpc runtime on",
    "start": "862519",
    "end": "870880"
  },
  {
    "text": "the service side will communicate back to the client there are four types of calls that we support in grpc which is",
    "start": "870880",
    "end": "878759"
  },
  {
    "text": "classified by the number of request and response messages uh single request single response ones are what we call",
    "start": "878759",
    "end": "884920"
  },
  {
    "text": "unary or multiple response multiple uh requests is byy connect byy streaming",
    "start": "884920",
    "end": "890720"
  },
  {
    "text": "and we have like one side uh streaming and one side single responses which is the client and server side streamings",
    "start": "890720",
    "end": "898040"
  },
  {
    "text": "and you can choose the one one that best suits your business logic needs now let me hand over to Richard for the bonus",
    "start": "898040",
    "end": "906959"
  },
  {
    "text": "tips all right thank you sheni uh so I'm Richard Belleville I'm another maintainer on grpc specifically for",
    "start": "906959",
    "end": "913320"
  },
  {
    "text": "python but I have my hands in a lot of other areas within grpc uh so a few more Concepts to uh cover important grpc life",
    "start": "913320",
    "end": "921120"
  },
  {
    "text": "cycle events uh at the channel or the service layer uh interceptors are useful tools that are independent of the",
    "start": "921120",
    "end": "927680"
  },
  {
    "text": "methods but apply to all or most rpcs so interceptors are powerful",
    "start": "927680",
    "end": "934000"
  },
  {
    "text": "middleware components in the GPC framework that allow you to intercept and modify grpc calls before or after",
    "start": "934000",
    "end": "941360"
  },
  {
    "text": "they reach their intended destination they can be installed on both clients and servers and as you can see here",
    "start": "941360",
    "end": "947040"
  },
  {
    "text": "during the lifetime of an RPC there are certain interception points where grpc will invoke the Interceptor chain",
    "start": "947040",
    "end": "954079"
  },
  {
    "text": "interceptors provide a clean way to address crosscutting concerns like logging Authentication authorization",
    "start": "954079",
    "end": "960360"
  },
  {
    "text": "monitoring error building and more in your GOP services without duplicating all of that logic within your main",
    "start": "960360",
    "end": "966800"
  },
  {
    "text": "application logic so you might find that some of the functionality you want like a few of the ones I mentioned before are",
    "start": "966800",
    "end": "973279"
  },
  {
    "text": "already available as an Interceptor in The Wider grpc ecosystem and you can just go ahead and plug those into your",
    "start": "973279",
    "end": "978839"
  },
  {
    "text": "clients and servers so deadlines or timeouts are used when clients want to limit the",
    "start": "978839",
    "end": "985079"
  },
  {
    "text": "amount of time that they're willing to wait on a response from a server so ultimately the metaphor with grpc is",
    "start": "985079",
    "end": "990199"
  },
  {
    "text": "that you're making a function call but that function might execute on a separate machine we often think that you",
    "start": "990199",
    "end": "995720"
  },
  {
    "text": "know your CPU one part of it isn't going to stop responding but another server might somebody might smash it with a",
    "start": "995720",
    "end": "1001800"
  },
  {
    "text": "hammer something like that and so we need to set timeouts on our rpcs so",
    "start": "1001800",
    "end": "1006880"
  },
  {
    "text": "after you set uh a timeout and uh it actually times out the client will receive a deadline exceeded status code",
    "start": "1006880",
    "end": "1013720"
  },
  {
    "text": "when that limit is reached so this safeguards against rpcs taking an indefinite amount of time",
    "start": "1013720",
    "end": "1020839"
  },
  {
    "text": "so while deadlines passively terminate rpcs the grpc API also supports active",
    "start": "1021040",
    "end": "1026959"
  },
  {
    "text": "termination so if a grpc client is no longer interested in the result of an RPC call it can cancel to signal to the",
    "start": "1026959",
    "end": "1033240"
  },
  {
    "text": "server that it no longer needs the response and hopefully the server will be a good citizen and like stop taking",
    "start": "1033240",
    "end": "1038438"
  },
  {
    "text": "up CPU Cycles on the server side because nobody's going to want that response so the cancellation signal will propagate",
    "start": "1038439",
    "end": "1044000"
  },
  {
    "text": "to the server via the hp2 transport layer and the server will notify the application clean up",
    "start": "1044000",
    "end": "1051039"
  },
  {
    "text": "resources then by uh reattempting failed operations applications can overcome temporary issues like Network or server",
    "start": "1051039",
    "end": "1058000"
  },
  {
    "text": "glitches uh retries are completely transparent to the user so they shouldn't be able to notice that they're happening Beyond an increase in latency",
    "start": "1058000",
    "end": "1065520"
  },
  {
    "text": "uh and with growing observability support retry information has now become visible which is great so let's dive",
    "start": "1065520",
    "end": "1071640"
  },
  {
    "text": "into how retries actually work within grpc so first to opt into retries users",
    "start": "1071640",
    "end": "1077200"
  },
  {
    "text": "specify a retry policy and their service when constructing their Channel things like Max attempt count and back off back",
    "start": "1077200",
    "end": "1084000"
  },
  {
    "text": "off policy are configurable like this um retry attempt count and delay metrics are also exported via open Telemetry so",
    "start": "1084000",
    "end": "1090600"
  },
  {
    "text": "you can keep track of any issues that might pop up in your system but are being masked by",
    "start": "1090600",
    "end": "1096559"
  },
  {
    "text": "retries so rpcs can terminate with an error for several different reasons such as serers side errors uh client side",
    "start": "1096559",
    "end": "1103320"
  },
  {
    "text": "cancellation or network errors a couple of which I just mentioned um but in general the client and the server will",
    "start": "1103320",
    "end": "1108880"
  },
  {
    "text": "agree on an RPC status but if there's a communication problem or a client side cancellation it's possible that the",
    "start": "1108880",
    "end": "1115120"
  },
  {
    "text": "server will view the RPC as successful but the client will observe an error um",
    "start": "1115120",
    "end": "1120240"
  },
  {
    "text": "but channels themselves also need to be taken care of uh so channels should be kept around",
    "start": "1120240",
    "end": "1127120"
  },
  {
    "text": "uh for as long as possible and reused but when you're finished using one you should call the shutdown method on it",
    "start": "1127120",
    "end": "1134000"
  },
  {
    "text": "this will let inflight rpcs continue but will not allow new rpcs to begin on the channel or to initiate a forceful",
    "start": "1134000",
    "end": "1140760"
  },
  {
    "text": "shutdown where even existing rpcs are canceled you can call shutdown now or a similar method depending on which",
    "start": "1140760",
    "end": "1146400"
  },
  {
    "text": "language you're using so to summarize we've talked about the structure of the grpc library and",
    "start": "1146400",
    "end": "1153120"
  },
  {
    "text": "touched a bit on the name resolver and the load balancing component we went through the life cycle of an RPC within grpc the RPC is sent on a channel using",
    "start": "1153120",
    "end": "1160760"
  },
  {
    "text": "a generated stub it's optionally processed by asyn by interceptors um",
    "start": "1160760",
    "end": "1165840"
  },
  {
    "text": "then asynchronously the control plane does name resolution and load balancing prepares a picker that contains a",
    "start": "1165840",
    "end": "1171320"
  },
  {
    "text": "subchannel rpcs will buffer and wait a bit for initial connections while subsequent rpcs will be much",
    "start": "1171320",
    "end": "1177640"
  },
  {
    "text": "faster the RPC might be canceled any time if a deadline is exceeded and the user may also actively cancel the RPC",
    "start": "1177640",
    "end": "1184280"
  },
  {
    "text": "but most likely the RPC in the channel will be successfully terminated so due to its flexibility and",
    "start": "1184280",
    "end": "1190760"
  },
  {
    "text": "efficiency grpc is wildly popular it's used in a mind-boggling array of applications from kubernetes to",
    "start": "1190760",
    "end": "1196799"
  },
  {
    "text": "cloud-based e-commerce to highwa speed limited management to space simulators it's really hard to imagine an",
    "start": "1196799",
    "end": "1202720"
  },
  {
    "text": "application where grpc wouldn't be a good fit especially in a kubernetes based",
    "start": "1202720",
    "end": "1208640"
  },
  {
    "text": "application all right moving on to what is new in grpc um the kubernetes Gateway API",
    "start": "1209039",
    "end": "1215480"
  },
  {
    "text": "recently released the grpc route resource in GA earlier this year it supported in gcp and several other Cloud",
    "start": "1215480",
    "end": "1223120"
  },
  {
    "text": "providers uh this powerful feature allows you to easily Define sophisticated routing rules for GPC",
    "start": "1223120",
    "end": "1229120"
  },
  {
    "text": "Services enabling precise control over how requests are directed to different backend services with JPC route you can",
    "start": "1229120",
    "end": "1235919"
  },
  {
    "text": "leverage criteria such as host names GPC service methods headers and more to match incoming requests and then to",
    "start": "1235919",
    "end": "1242320"
  },
  {
    "text": "Route them accordingly uh this fine Graden control enables Advanced traffic management strategies like Canary",
    "start": "1242320",
    "end": "1248640"
  },
  {
    "text": "deployments AB testing and traffic splitting for grpc services so the introduction of grpc Route simplifies",
    "start": "1248640",
    "end": "1255159"
  },
  {
    "text": "GPC deployments and enhances the overall manageability of G GPC traffic within kubernetes",
    "start": "1255159",
    "end": "1260960"
  },
  {
    "text": "environment this year GPC also expanded observability support to open Telemetry which you've probably been hearing about",
    "start": "1260960",
    "end": "1266919"
  },
  {
    "text": "a lot about in this conference um with open telary metrics you can quickly troubleshoot problems a couple of which",
    "start": "1266919",
    "end": "1273039"
  },
  {
    "text": "I just mentioned earlier and improve the reliability of your grpc applications starting with release 1.61 you can",
    "start": "1273039",
    "end": "1279720"
  },
  {
    "text": "access these metrics to help you analyze RPC latency QPS error rate and payload",
    "start": "1279720",
    "end": "1284760"
  },
  {
    "text": "sizes and we're adding more metrics and extending support to other languages also the open Telemetry tracing design",
    "start": "1284760",
    "end": "1291039"
  },
  {
    "text": "is complete and the implementation is in progress so stay tuned for more updates on",
    "start": "1291039",
    "end": "1296640"
  },
  {
    "text": "that another cool feature that launched recently is dual stack backend support",
    "start": "1296640",
    "end": "1301799"
  },
  {
    "text": "JPY clients currently support both ipv4 and IPv6 however most languages did not",
    "start": "1301799",
    "end": "1307080"
  },
  {
    "text": "have support for individual backends that have both an ipv4 and IPv6 address",
    "start": "1307080",
    "end": "1312559"
  },
  {
    "text": "with this new launch the name resolver and lb policy apis again which we just discussed earlier support multip",
    "start": "1312559",
    "end": "1318840"
  },
  {
    "text": "addresses per endpoint and happy the Happy eyeballs algorithm is used to minimize the time to determine the right",
    "start": "1318840",
    "end": "1324760"
  },
  {
    "text": "address so you can find out more details on dual stack support at the short link here in the bottom",
    "start": "1324760",
    "end": "1331640"
  },
  {
    "text": "right uh another cool feature that I'd like to mention is protuff editions you can think of protuff editions as sort of",
    "start": "1331760",
    "end": "1337799"
  },
  {
    "text": "a versioning system for protuff features instead of having separate syntaxes like proto2 and Proto 3 with fixed sets of",
    "start": "1337799",
    "end": "1345360"
  },
  {
    "text": "rules protu editions provide snapshots of protu features with customizable settings so this approach ensures",
    "start": "1345360",
    "end": "1352240"
  },
  {
    "text": "forward compatibility allowing allowing code written in older editions to work with newer ones by unifying features and",
    "start": "1352240",
    "end": "1359919"
  },
  {
    "text": "enabling incremental updates protuff editions make it easier for developers to keep your code up to date and",
    "start": "1359919",
    "end": "1365279"
  },
  {
    "text": "maintain flexibility in their projects uh so protuff editions 2023 is the first edition and it essentially combines the",
    "start": "1365279",
    "end": "1372159"
  },
  {
    "text": "features of Proto 2 and Proto 3 and it's supported in many languages there are a few code changes that you'll need to",
    "start": "1372159",
    "end": "1378600"
  },
  {
    "text": "make in order to adopt pru editions and you can find more details at the public documentation link right there um we're",
    "start": "1378600",
    "end": "1384960"
  },
  {
    "text": "also working on a CLI tool called Proto tiller to help with migrating files messages and Fields to new values for",
    "start": "1384960",
    "end": "1391200"
  },
  {
    "text": "each feature that will be introduced so where is the jrpc project",
    "start": "1391200",
    "end": "1396600"
  },
  {
    "text": "heading next here are a few key areas that we're investing in going forward uh a few months ago we announced our",
    "start": "1396600",
    "end": "1403120"
  },
  {
    "text": "expansion of GPC language support to rust we'll be collaborating closely with the tonic team to achieve feature parody",
    "start": "1403120",
    "end": "1409840"
  },
  {
    "text": "in this native rust implementation uh Doug a grpc maintainer and Lucho the tonic repo owner gave an in-depth talk",
    "start": "1409840",
    "end": "1416760"
  },
  {
    "text": "on this at grpc conf 2024 and if you're interested in that check out a recording of that talk on YouTube in addition to",
    "start": "1416760",
    "end": "1423720"
  },
  {
    "text": "expanding language support we're also looking forward to the future of AI assisted development tools this was",
    "start": "1423720",
    "end": "1429480"
  },
  {
    "text": "demoed during the keynote again at gccom 2024 and is also available on YouTube if you want to take a look at that so we'll",
    "start": "1429480",
    "end": "1435480"
  },
  {
    "text": "be exploring this exciting space more over the coming months and years and another area we'd like to invest in",
    "start": "1435480",
    "end": "1441799"
  },
  {
    "text": "further is protuff management this was another area with some interesting new developments demoed at grpc conf so this",
    "start": "1441799",
    "end": "1447840"
  },
  {
    "text": "is you know we're really plugging the next grpc conf if you want to come see that um so if you're interested in",
    "start": "1447840",
    "end": "1453440"
  },
  {
    "text": "developing uh improving your developer workflow with protuff and grpc check out that recording on YouTube and last but",
    "start": "1453440",
    "end": "1460240"
  },
  {
    "text": "not least we want to empower every grpc developer to reach their full potential potential so we'll continue to create",
    "start": "1460240",
    "end": "1466679"
  },
  {
    "text": "more documentation example code and tutorial videos to help you succeed we'd love to hear your insights and",
    "start": "1466679",
    "end": "1472480"
  },
  {
    "text": "experiences at our in-person and virtual community meetups so consider joining us as a grpc project contributor to help",
    "start": "1472480",
    "end": "1478559"
  },
  {
    "text": "shape the future of this amazing technology so that was a whirlwind tour of grpc so we'll hope you'll all dig",
    "start": "1478559",
    "end": "1485159"
  },
  {
    "text": "some more into the project there are a bunch of ways to do that you know we've got our website YouTube channel we have",
    "start": "1485159",
    "end": "1490679"
  },
  {
    "text": "the virtual meetups um you can meet with the grpc maintainer over a video call if you'd like we have two different mailing",
    "start": "1490679",
    "end": "1497159"
  },
  {
    "text": "lists uh one new that Kevin just ured earlier and you can follow us on a um so",
    "start": "1497159",
    "end": "1503080"
  },
  {
    "text": "again I'd like to plug that there will be uh grpc con India in 2025 probably in",
    "start": "1503080",
    "end": "1508240"
  },
  {
    "text": "Bangalore so stay tuned to the mailing list to get more details on that so with that we'll move to",
    "start": "1508240",
    "end": "1515399"
  },
  {
    "text": "questions we got a m",
    "start": "1521120",
    "end": "1525600"
  },
  {
    "text": "questions I think I saw a",
    "start": "1528840",
    "end": "1532440"
  },
  {
    "text": "hand yeah hi do you have any performance test tool available for grpc as a client",
    "start": "1534480",
    "end": "1541000"
  },
  {
    "text": "we do we have uh continuously running benchmarks across various languages with different configurations um if you just",
    "start": "1541000",
    "end": "1547919"
  },
  {
    "text": "Google uh grpc benchmarking you should find our our publicly available dashboard there a tool that we can use",
    "start": "1547919",
    "end": "1554640"
  },
  {
    "text": "for our testing performance test tool yeah uh oh you want to Benchmark your own grpc Services um there are several",
    "start": "1554640",
    "end": "1562120"
  },
  {
    "text": "Community solutions for that um and I i' give you the same recommendation I know that there are at least three different",
    "start": "1562120",
    "end": "1568039"
  },
  {
    "text": "ones out there I can't name them off the top of my head but they are out there sure",
    "start": "1568039",
    "end": "1573919"
  },
  {
    "text": "thanks yeah hello so uh I believe you guys might be familiar with buff like",
    "start": "1575760",
    "end": "1582559"
  },
  {
    "text": "for maintaining grpc packages so like maybe in distant future would protuff",
    "start": "1582559",
    "end": "1589159"
  },
  {
    "text": "itself support uh like package management for grpc stuff like inbuilt",
    "start": "1589159",
    "end": "1595840"
  },
  {
    "text": "in the protuff itself um so protuff management in general is something that we've been exploring that was one of our",
    "start": "1595840",
    "end": "1601919"
  },
  {
    "text": "our blocks back here on the future um and so absolutely there are plenty of areas that we're exploring within",
    "start": "1601919",
    "end": "1607960"
  },
  {
    "text": "protuff management including uh package management yeah thanks we'll have",
    "start": "1607960",
    "end": "1613120"
  },
  {
    "text": "exciting announcements question",
    "start": "1613120",
    "end": "1619120"
  },
  {
    "text": "uh hi this question is around authentication mechanisms for GPC while there is SSL and token based",
    "start": "1619600",
    "end": "1626200"
  },
  {
    "text": "authentication like are there any plans to have native Kos authentication for grpc channels can you say that again",
    "start": "1626200",
    "end": "1633440"
  },
  {
    "text": "native what Kos keros um I I'm not aware of plans specifically to work on uh",
    "start": "1633440",
    "end": "1639200"
  },
  {
    "text": "keros but I do believe that our plug-in mechanisms are sufficiently broad that like I would I would bet that there",
    "start": "1639200",
    "end": "1646320"
  },
  {
    "text": "already is a care baros implementation out there maybe not necessarily in your target language but in Java I almost",
    "start": "1646320",
    "end": "1651880"
  },
  {
    "text": "guarantee you that there is a care brough implementation yeah we do have a custom version as well we just wanted to",
    "start": "1651880",
    "end": "1657440"
  },
  {
    "text": "know if there's like a native Cur Bros authentication mechanism somewhere down in the pipeline so not within our",
    "start": "1657440",
    "end": "1664200"
  },
  {
    "text": "library but I'd absolutely encourage you to to open source it y sure",
    "start": "1664200",
    "end": "1669640"
  },
  {
    "text": "thanks oh uh is there a canonical way of",
    "start": "1669640",
    "end": "1674880"
  },
  {
    "text": "routing between grpc services on the same host or same domain without a wild",
    "start": "1674880",
    "end": "1680679"
  },
  {
    "text": "card without a say that last thing so so I don't have a wild card domain I have the same host uh but I have multiple",
    "start": "1680679",
    "end": "1686880"
  },
  {
    "text": "grpc Services I want to route between them so is there a canonical way of doing that are you talking about with TLS enabled or what is the wild card for",
    "start": "1686880",
    "end": "1694720"
  },
  {
    "text": "uh the TLs is terminated already so let's talk more in in the hall I",
    "start": "1694720",
    "end": "1700200"
  },
  {
    "text": "think we might need some some back and forth I'm not quite sure with the yeah",
    "start": "1700200",
    "end": "1705440"
  },
  {
    "text": "anybody hey so the T elmary and all like all these features are we are these op",
    "start": "1705880",
    "end": "1712240"
  },
  {
    "text": "in or are they part of the core they are opt in and I believe in every language",
    "start": "1712240",
    "end": "1717799"
  },
  {
    "text": "they're actually a separate package that you have to pull in in order to opt in and there's also a function that you'll have to call in order to initiate the",
    "start": "1717799",
    "end": "1724440"
  },
  {
    "text": "open Telemetry metric exporting process yeah got it also like the uh load",
    "start": "1724440",
    "end": "1730600"
  },
  {
    "text": "balancing policies and all all those things is there a control plane that we",
    "start": "1730600",
    "end": "1736360"
  },
  {
    "text": "can use or does it have to be client uh you know like the client app specifying",
    "start": "1736360",
    "end": "1741760"
  },
  {
    "text": "all of these so you can control it on the client side and that's like if you don't want to set up any infrastructure",
    "start": "1741760",
    "end": "1747360"
  },
  {
    "text": "use it that way we have this thing called proxy service mesh right so any uh control plane that speaks XDS",
    "start": "1747360",
    "end": "1753720"
  },
  {
    "text": "including SPO including Google CSM they can send this configuration directly down to the client and you basically get",
    "start": "1753720",
    "end": "1760480"
  },
  {
    "text": "the experience of an Envoy based service MH except without any of the side",
    "start": "1760480",
    "end": "1765519"
  },
  {
    "text": "cars oh so I can actually replace like remove the envoy uh",
    "start": "1765519",
    "end": "1772039"
  },
  {
    "text": "absolutely you can remove the envoy and you'll get basically all the benefit uh and you know less CPU cost lower latency",
    "start": "1772039",
    "end": "1779640"
  },
  {
    "text": "lower memory usage so yeah a question and and Richard",
    "start": "1779640",
    "end": "1785080"
  },
  {
    "text": "mentioned uh CSM that's cloud service mesh which is a new service mesh uh",
    "start": "1785080",
    "end": "1790440"
  },
  {
    "text": "architecture that we have at Google that we've uh announced in the last in the last year and so there's a big uh big",
    "start": "1790440",
    "end": "1796720"
  },
  {
    "text": "launch for grpc support there uh coming out sort of this",
    "start": "1796720",
    "end": "1802640"
  },
  {
    "text": "week Al yep uh it supports all that sto does and",
    "start": "1806200",
    "end": "1812880"
  },
  {
    "text": "more yeah yeah here I am so question hello so",
    "start": "1813519",
    "end": "1820799"
  },
  {
    "text": "do grpc support this Dynamic subchannel creation for all the kubernetes based workloads without the help of an",
    "start": "1820799",
    "end": "1827240"
  },
  {
    "text": "external proxy uh yeah it works without an external proxy um so the way that you do that is",
    "start": "1827240",
    "end": "1834519"
  },
  {
    "text": "dependent sort of on your setup you can either use um a name resolver plugin that um speaks directly to the",
    "start": "1834519",
    "end": "1840799"
  },
  {
    "text": "kubernetes API server this exists in a couple of different languages certainly um Java and go or you could use service",
    "start": "1840799",
    "end": "1847039"
  },
  {
    "text": "match like I just mentioned that will work in any language um and that's going to give you all of your endpoints dynamically spin up sub channels to each",
    "start": "1847039",
    "end": "1853080"
  },
  {
    "text": "of them and then you can uh truly load balance at the level of http2 streams that is RP",
    "start": "1853080",
    "end": "1858600"
  },
  {
    "text": "instead of at the level of TCP connections that doesn't load balance as well um if you look back at my talk from",
    "start": "1858600",
    "end": "1863799"
  },
  {
    "text": "ccon Paris I like talk about that in detail you can find that on YouTube thank",
    "start": "1863799",
    "end": "1869760"
  },
  {
    "text": "you coming to",
    "start": "1870600",
    "end": "1874039"
  },
  {
    "text": "you hi uh is there a way we can uh find out end to endend latency regarding like",
    "start": "1879880",
    "end": "1885799"
  },
  {
    "text": "whenever a client to server communication happen happens like an end latency from client to server and back",
    "start": "1885799",
    "end": "1892000"
  },
  {
    "text": "to client absolutely so that's one of the things that one of the most basic things that open toet Tre metrics will",
    "start": "1892000",
    "end": "1897320"
  },
  {
    "text": "export for you you can collect that across your entire fleet and then look at you know averages over time things",
    "start": "1897320",
    "end": "1902679"
  },
  {
    "text": "like that got it another question real quick on on the open Telemetry stuff you",
    "start": "1902679",
    "end": "1908279"
  },
  {
    "text": "kind of get that for zero lines of code so basically because we're a framework we do that for you across all your",
    "start": "1908279",
    "end": "1913919"
  },
  {
    "text": "endpoints and services and also just one last thing there is a talk about open Telemetry",
    "start": "1913919",
    "end": "1919880"
  },
  {
    "text": "tomorrow so do join there because that that is where we'll talk about uh tomorrow what time is",
    "start": "1919880",
    "end": "1928440"
  },
  {
    "text": "it what uh it's at 2:45 tomorrow and tell",
    "start": "1930320",
    "end": "1935519"
  },
  {
    "text": "them5 tomorrow yeah it's open Telemetry tracing so we'll talk about how to capture latency and the request life",
    "start": "1935519",
    "end": "1942720"
  },
  {
    "text": "cycle and what happens at each step so we'll see all of you there and your friends right",
    "start": "1942720",
    "end": "1948399"
  },
  {
    "text": "right uh another question that I had was uh regarding the end to end testing if I",
    "start": "1948399",
    "end": "1953440"
  },
  {
    "text": "want to do an uh write an end to end test suit uh can I do that as well with",
    "start": "1953440",
    "end": "1961279"
  },
  {
    "text": "grpc absolutely uh so you can run an endtoend endtoend test Suite completely",
    "start": "1961279",
    "end": "1967200"
  },
  {
    "text": "locally just running over Local Host shouldn't be any barriers to it um we have a very strong end end test suite",
    "start": "1967200",
    "end": "1973240"
  },
  {
    "text": "for all of our languages and our goal is all of them should run under 10 seconds and you should be able to run 10,000",
    "start": "1973240",
    "end": "1978600"
  },
  {
    "text": "instances of them at the same time and so in general with using with with grpc your end to end tests get easier not",
    "start": "1978600",
    "end": "1985279"
  },
  {
    "text": "harder any more question all right thank you everybody",
    "start": "1985279",
    "end": "1992480"
  },
  {
    "text": "hope we'll see you at other talks and at jcon India 2025",
    "start": "1992480",
    "end": "1998158"
  }
]