[
  {
    "text": "hey everyone and uh thanks a lot for joining me in this session today uh I'm nanin I'm a software",
    "start": "359",
    "end": "6640"
  },
  {
    "text": "engineer on the Azure kubernetes service team at Microsoft um I'm currently working on the itdo add-on for AKs um",
    "start": "6640",
    "end": "14240"
  },
  {
    "text": "previously I was on the container Upstream team uh working on the open service mesh project uh so I I have",
    "start": "14240",
    "end": "20880"
  },
  {
    "text": "experience working uh both on managed and uh Open Source service meshes and uh",
    "start": "20880",
    "end": "26240"
  },
  {
    "text": "one of my focuses more recently uh working on manage itso has been uh deciding which features do we want to",
    "start": "26240",
    "end": "33280"
  },
  {
    "text": "incorporate into our add-on and which features do we want to disallow and how",
    "start": "33280",
    "end": "38960"
  },
  {
    "text": "to go about doing so so in this presentation I wanted to share some of those lessons to help you untangle your",
    "start": "38960",
    "end": "46039"
  },
  {
    "text": "service mesh with feature Gates so first I'm going to touch on the",
    "start": "46039",
    "end": "51320"
  },
  {
    "text": "general problem of service mesh complexity and why users often end up with what I would call a tangled service",
    "start": "51320",
    "end": "58039"
  },
  {
    "text": "mesh and then I'm going to to explain how to use quote unquote feature Gates",
    "start": "58039",
    "end": "63320"
  },
  {
    "text": "uh to help solve this problem then um I'm going to discuss some helpful criteria uh to help you decide what",
    "start": "63320",
    "end": "70560"
  },
  {
    "text": "kinds of features or configurations to allow or disallow in your environments",
    "start": "70560",
    "end": "75880"
  },
  {
    "text": "and um finally I'll conclude by reiterating some of the general takeaways uh from all this and um",
    "start": "75880",
    "end": "82240"
  },
  {
    "text": "highlight some recent developments to watch out for so over the past few years um",
    "start": "82240",
    "end": "89040"
  },
  {
    "text": "service meshes have a mass a wide array of features and configuration options um",
    "start": "89040",
    "end": "95439"
  },
  {
    "text": "of course a lot of this has to do with the fact that they are built on top of the envoy proxy with the sidecar model",
    "start": "95439",
    "end": "102439"
  },
  {
    "text": "and Envoy is very powerful um and it has a lot of advanced capabilities that operators want to leverage um obviously",
    "start": "102439",
    "end": "111079"
  },
  {
    "text": "the exceptions here are Linker D which has its own rust based proxy um and uh",
    "start": "111079",
    "end": "117880"
  },
  {
    "text": "as you may have heard if you attended the battle cars discussion on Tuesday we also have ebpf and side car free service",
    "start": "117880",
    "end": "125520"
  },
  {
    "text": "meshes um although uh not all the sidecar lless models are production ready just yet like it's Deo",
    "start": "125520",
    "end": "133200"
  },
  {
    "text": "ambient and not only can there be so much to configure but there are often multiple ways of configuring a service",
    "start": "133200",
    "end": "139200"
  },
  {
    "text": "mesh uh we have installation values we have annotations crds and so on um so",
    "start": "139200",
    "end": "145440"
  },
  {
    "text": "this example on the top right there is how you define the mesh wide configuration for console service mesh",
    "start": "145440",
    "end": "151959"
  },
  {
    "text": "um and below that is an example of how you would uh configure the linkerd proxy with resource annotations and for a",
    "start": "151959",
    "end": "159080"
  },
  {
    "text": "service mesh like itdo a lot of these configuration Pathways uh can be overlapping and um I'm going to be",
    "start": "159080",
    "end": "165400"
  },
  {
    "text": "giving a few examples of those later in the presentation so admittedly there are a",
    "start": "165400",
    "end": "171959"
  },
  {
    "text": "there are clear upsides to having a lot of features um applications on distributed platforms like kubernetes uh",
    "start": "171959",
    "end": "180319"
  },
  {
    "text": "have varying and inherently complex networking and security needs so service",
    "start": "180319",
    "end": "185360"
  },
  {
    "text": "mesh functionality inevitably it needs to at least needs to be somewhat Broad in order to meet those needs um and",
    "start": "185360",
    "end": "192760"
  },
  {
    "text": "actually uh Christian Posta had a great talk about this for ioon um earlier this year it's called Uh",
    "start": "192760",
    "end": "200040"
  },
  {
    "text": "debunking the io as complex meme um highly recommend giving that a watch at some point if you get a",
    "start": "200040",
    "end": "206319"
  },
  {
    "text": "chance and also having a lot of configuration talk gives us flexibility in tailoring the",
    "start": "206319",
    "end": "212599"
  },
  {
    "text": "behavior of the mesh to our environment um for instance we might want some settings to apply on a global level for",
    "start": "212599",
    "end": "218760"
  },
  {
    "text": "the mesh uh others to apply for particular name spaces and other policies to Target individual",
    "start": "218760",
    "end": "226480"
  },
  {
    "text": "workloads but needless to say uh there are some major downsides to having a broad feature Set uh service mesh has",
    "start": "226480",
    "end": "233799"
  },
  {
    "text": "gotten a reputation for being very complex uh despite some important and ongoing efforts in the community to to",
    "start": "233799",
    "end": "239840"
  },
  {
    "text": "simplify operations and there's a steep learning curve to learn all the crds and apis and all of the fine-tuning options",
    "start": "239840",
    "end": "247640"
  },
  {
    "text": "and while having an expansive feature set helps in terms of being appealing to a wide array of users each organization",
    "start": "247640",
    "end": "254159"
  },
  {
    "text": "typically just needs a subset of service mesh features not all of them and because of this complexity and",
    "start": "254159",
    "end": "261519"
  },
  {
    "text": "having multiple sources of Truth uh users can end up with what I would call a tangled service mesh uh where there",
    "start": "261519",
    "end": "267680"
  },
  {
    "text": "are traffic and security misconfiguration and mismatches and you need to spend",
    "start": "267680",
    "end": "272720"
  },
  {
    "text": "hours and hours debugging um the backend developers could have introduced uh",
    "start": "272720",
    "end": "277840"
  },
  {
    "text": "experimental or Alpha features into production without the uh knowledge or against the wishes of the platform",
    "start": "277840",
    "end": "284840"
  },
  {
    "text": "administrators uh resource utilization could be blowing up without a clear reason as to why and earlier uh I",
    "start": "284840",
    "end": "292280"
  },
  {
    "text": "mentioned being able to configure settings on a mesh wide or namespace or a workload level but in some cases the",
    "start": "292280",
    "end": "298759"
  },
  {
    "text": "admins I wouldn't necessarily want developers to be able to override certain mesh wide settings in that",
    "start": "298759",
    "end": "304759"
  },
  {
    "text": "manner and due to situations like that uh we can end up with bottlenecks between the uh platform engineers and",
    "start": "304759",
    "end": "311240"
  },
  {
    "text": "the service owners so the solution to this problem",
    "start": "311240",
    "end": "316280"
  },
  {
    "text": "is to uh quote unquote feature gate our service mesh um I'll unpack what I mean by this and why I'm using quotes here so",
    "start": "316280",
    "end": "324800"
  },
  {
    "text": "uh typically feature Gates or toggles are uh typically viewed as onof switches",
    "start": "324800",
    "end": "330199"
  },
  {
    "text": "to uh control the uh to enable or disable the execution of certain code",
    "start": "330199",
    "end": "335360"
  },
  {
    "text": "paths um kubernetes itself uses feature Flags uh in this manner for several",
    "start": "335360",
    "end": "340960"
  },
  {
    "text": "features though there is an ongoing proposal by Tim Hawkin to modify this",
    "start": "340960",
    "end": "346720"
  },
  {
    "text": "process itdo also provides ways of enabling or disabling features through",
    "start": "346720",
    "end": "352160"
  },
  {
    "text": "uh installation values or environment variables for the control plane uh for example up here I have the uh",
    "start": "352160",
    "end": "359039"
  },
  {
    "text": "environment variable to enable its Doo to consume Gateway API crds that are",
    "start": "359039",
    "end": "365199"
  },
  {
    "text": "currently in Alpha and um there is the encapsulated code statement that the Flag",
    "start": "365199",
    "end": "371000"
  },
  {
    "text": "controls um likewise for osm open service mesh we used installation values",
    "start": "371000",
    "end": "376960"
  },
  {
    "text": "and the osm mesh config to provide a way to disable or enable certain",
    "start": "376960",
    "end": "383080"
  },
  {
    "text": "features um however these kinds of toggles aren't necessarily enough uh for",
    "start": "383080",
    "end": "388120"
  },
  {
    "text": "one thing um they're usually just tied to a feature stage in the life cycle like whether it's alpha or beta um but",
    "start": "388120",
    "end": "395520"
  },
  {
    "text": "as I'll explain later we might have some other criteria Beyond feature status itself um that may entail disallowing",
    "start": "395520",
    "end": "402479"
  },
  {
    "text": "certain features or configurations in production um also it's not always",
    "start": "402479",
    "end": "408039"
  },
  {
    "text": "reliable or practical for the project itself uh to use feature Flags in this manner um for example uh just based on",
    "start": "408039",
    "end": "415800"
  },
  {
    "text": "what I understand from the itdo maintainers um uh feature flagging in itdo has been",
    "start": "415800",
    "end": "422319"
  },
  {
    "text": "more ad hoc and not necessarily uh consistently implemented across apis um it's also worth noting that if a",
    "start": "422319",
    "end": "429879"
  },
  {
    "text": "particular feature touches across multiple layers of the code stack um it could be very difficult to track and",
    "start": "429879",
    "end": "436000"
  },
  {
    "text": "control the execution of all these code Pathways and that's especially true for something like service mesh where uh",
    "start": "436000",
    "end": "442319"
  },
  {
    "text": "certain features can be very expansive and complex in scope and as I was highlighting earlier",
    "start": "442319",
    "end": "448599"
  },
  {
    "text": "um it's not just feature set but also uh configurability that can be an issue in",
    "start": "448599",
    "end": "454160"
  },
  {
    "text": "terms of service mesh complexity so to fully untangle our service mesh we need to broaden our",
    "start": "454160",
    "end": "461039"
  },
  {
    "text": "implementation of uh feature gating to include some other types of techniques and restrictions um for instance",
    "start": "461039",
    "end": "467720"
  },
  {
    "text": "limiting configurability and reverting configuration drift um an admin may also",
    "start": "467720",
    "end": "473120"
  },
  {
    "text": "want to hide some of the error prone configurations uh from the developers or",
    "start": "473120",
    "end": "478440"
  },
  {
    "text": "disallow certain custom resources uh annotations or fields in the API specs",
    "start": "478440",
    "end": "484479"
  },
  {
    "text": "um and in order to put these guard rails in place and ensure that they're not being bypassed we're also going to be",
    "start": "484479",
    "end": "490680"
  },
  {
    "text": "delving into the realm of runtime policy enforcement um which allows us to be fine grained in the validations we're",
    "start": "490680",
    "end": "498199"
  },
  {
    "text": "defining so typically these uh restrictions and policies would be put in place uh by the mesh administrators",
    "start": "498199",
    "end": "506080"
  },
  {
    "text": "um on a platform engineering team or depending on your organization you might call it an Ops or an infer team uh in",
    "start": "506080",
    "end": "513159"
  },
  {
    "text": "terms of why an admin would want to go about doing this there are a few reasons uh one key motivation could be to",
    "start": "513159",
    "end": "519719"
  },
  {
    "text": "simplify operational complexity and make it easier for the backend developers to onboard Services onto the mesh um and by",
    "start": "519719",
    "end": "527760"
  },
  {
    "text": "decluttering the environment of uh unwanted features and configurations and",
    "start": "527760",
    "end": "533320"
  },
  {
    "text": "limiting it to what's absolutely necessary you limit the possibilities of misconfiguration um an admin may also",
    "start": "533320",
    "end": "540440"
  },
  {
    "text": "want to use admission controllers or policy enforcement engines to ensure um",
    "start": "540440",
    "end": "545839"
  },
  {
    "text": "that the desired meshwi settings and constraints are not being circumvented and are reinforc administrative control",
    "start": "545839",
    "end": "552880"
  },
  {
    "text": "and uh finally as I'll explain later uh some of these validations can be tailored towards mitigating resource",
    "start": "552880",
    "end": "561000"
  },
  {
    "text": "consumption so there are several items that mesh operators have in their toolkit for implementing these kinds of",
    "start": "561000",
    "end": "566880"
  },
  {
    "text": "features and configuration Gates um I'm going to be going through these techniques individually and provide some",
    "start": "566880",
    "end": "573079"
  },
  {
    "text": "examples feel free to check out my GitHub repository there that I've linked on the slide Footers um to check out",
    "start": "573079",
    "end": "580079"
  },
  {
    "text": "some of these examples or um download the slides and click on some of the hyperlinks um I'm going to be using Ito",
    "start": "580079",
    "end": "587399"
  },
  {
    "text": "by the way but I've also included some guides and Integrations for linkerd for all the potential linkerd users in the",
    "start": "587399",
    "end": "595000"
  },
  {
    "text": "audience so let's start off talking about admission controllers um just a brief overview of how this works in",
    "start": "595000",
    "end": "600880"
  },
  {
    "text": "kubernetes when you create a resource manifest it gets subjected to certain mutations and validations uh before",
    "start": "600880",
    "end": "607600"
  },
  {
    "text": "being persisted to etcd so the idea here is to use a validating web hook to uh",
    "start": "607600",
    "end": "613279"
  },
  {
    "text": "verify service mesh customer resources one great solution we can",
    "start": "613279",
    "end": "618480"
  },
  {
    "text": "leverage to perform these validations is gatekeeper um which is an admission controller for kubernetes that enforces",
    "start": "618480",
    "end": "625160"
  },
  {
    "text": "policies through the open policy agent um so the example I'm going to be giving",
    "start": "625160",
    "end": "630399"
  },
  {
    "text": "uh use gatekeeper constraints written in Rego uh however um you could try using",
    "start": "630399",
    "end": "635880"
  },
  {
    "text": "other controllers like kerno or um if you're feeling adventurous U maybe try writing some policies um in common",
    "start": "635880",
    "end": "643079"
  },
  {
    "text": "expression language with kubernetes 1.28 so for those of you who maybe",
    "start": "643079",
    "end": "648880"
  },
  {
    "text": "aren't familiar with gatekeeper uh the constraint template is used to define the policy violation and uh the",
    "start": "648880",
    "end": "655639"
  },
  {
    "text": "constraint tells gatekeeper which resources the template policies should be applied",
    "start": "655639",
    "end": "661560"
  },
  {
    "text": "to so one example of a custom resource we would want to subject to these validations is the itdo perer",
    "start": "661560",
    "end": "667839"
  },
  {
    "text": "authentication so the peer authentication resource I have up here uh deployed in the ddio system rout",
    "start": "667839",
    "end": "674079"
  },
  {
    "text": "namespace enforces that workloads across the mesh only communicate through mtls",
    "start": "674079",
    "end": "679920"
  },
  {
    "text": "and uh this is typically good practice after having onboarded all of your applications to the mesh to enforce that",
    "start": "679920",
    "end": "686600"
  },
  {
    "text": "there are no longer accepting PL Tech trffic however it is possible to bypass",
    "start": "686600",
    "end": "693320"
  },
  {
    "text": "this Global strict mtls setting on a namespace or a workload level um if you take a look at the policy precedence",
    "start": "693320",
    "end": "699560"
  },
  {
    "text": "statement here a namespace peer authentication uh takes precedence over the mesh wide setting and a peer",
    "start": "699560",
    "end": "706200"
  },
  {
    "text": "authentication with a workload selector would take precedence over both the name space and global",
    "start": "706200",
    "end": "712560"
  },
  {
    "text": "settings so a policy we could write in our gatekeeper constraint template is to deny peer authentications that could",
    "start": "712560",
    "end": "718680"
  },
  {
    "text": "disable aable Global mtls so um the allowed modes in this policy here are",
    "start": "718680",
    "end": "723959"
  },
  {
    "text": "strict and unset if a peer authentication tries setting the mode to disabled um it will be blocked by",
    "start": "723959",
    "end": "731399"
  },
  {
    "text": "gatekeeper another potential thing a platform administrator may want to watch out for uh is overriding the global",
    "start": "731399",
    "end": "737680"
  },
  {
    "text": "configuration of the proxy so one way of configuring the proxy in itdo is through",
    "start": "737680",
    "end": "743040"
  },
  {
    "text": "the itdo mesh config and um usually because the mesh config handles the global settings of the mesh it would",
    "start": "743040",
    "end": "749959"
  },
  {
    "text": "typically be handled by um the cluster or platform administrator but as you",
    "start": "749959",
    "end": "755480"
  },
  {
    "text": "could see in this bottom snippet we could also apply a resource level annotation to our pods to customize the",
    "start": "755480",
    "end": "762000"
  },
  {
    "text": "proxy settings for that workload and on top of that we have the proxy config custom resource um and the",
    "start": "762000",
    "end": "769399"
  },
  {
    "text": "way that the policy precedent statement works here is that the uh proxy config custom resource takes precedence over",
    "start": "769399",
    "end": "775720"
  },
  {
    "text": "The annotation and uh both The annotation and the custom resource would take precedence over the mesh",
    "start": "775720",
    "end": "782480"
  },
  {
    "text": "config so if an administrator wanted to ensure that the meshwi proxy settings weren't being bypassed they could",
    "start": "782480",
    "end": "788600"
  },
  {
    "text": "potentially write the following gatekeeper policies um on the top there we are blocking pods that attempt to use",
    "start": "788600",
    "end": "795040"
  },
  {
    "text": "the proxy config annotation and the template at the bottom there denies the proxy config",
    "start": "795040",
    "end": "800880"
  },
  {
    "text": "custom resource altogether so what we've effectively done here is we've limited our proxy",
    "start": "800880",
    "end": "808040"
  },
  {
    "text": "configuration to one source of Truth and thereby eliminated the possibility that",
    "start": "808040",
    "end": "813120"
  },
  {
    "text": "it could be bypassed in this manner uh however just keep in mind that this is just one potential operational pattern",
    "start": "813120",
    "end": "819600"
  },
  {
    "text": "um in some environments um you might need the flexibility to configure the proxy on a namespace or a workload",
    "start": "819600",
    "end": "827800"
  },
  {
    "text": "level um on top of these examples uh some other admission control policies that we could write could be to uh",
    "start": "828360",
    "end": "834880"
  },
  {
    "text": "enforce that sidecar injection takes place uh for instance by dis allowing pods uh that attempt to bypass sidecar",
    "start": "834880",
    "end": "842079"
  },
  {
    "text": "injection with the sidecar inject label um also when a developers are exposing",
    "start": "842079",
    "end": "847880"
  },
  {
    "text": "Services through gateways or setting routing rules for workloads in the mesh um it's always good practice to be",
    "start": "847880",
    "end": "854240"
  },
  {
    "text": "explicit in defining the hosts um so a validation an admin could add could be",
    "start": "854240",
    "end": "859639"
  },
  {
    "text": "to disallow overly permissive uh configurations that attempt to use wild cards and as I'll unpack a bit more",
    "start": "859639",
    "end": "866720"
  },
  {
    "text": "later we can also block experimental alpha or deprecated custom",
    "start": "866720",
    "end": "873240"
  },
  {
    "text": "resources I would also point out that we could take a shift left approach and do some of these validations at the CI",
    "start": "873240",
    "end": "879079"
  },
  {
    "text": "level um for instance in our cicd workflow uh we can use a CLI tool called",
    "start": "879079",
    "end": "884639"
  },
  {
    "text": "Gator which is specifically designed to verify resources using a gatekeeper",
    "start": "884639",
    "end": "889800"
  },
  {
    "text": "constraints and templates um there's also contest which is another Rego based",
    "start": "889800",
    "end": "895440"
  },
  {
    "text": "CI linter so the advantage of these tools is that we could use the same um",
    "start": "895440",
    "end": "900880"
  },
  {
    "text": "policies that we've defined for gatekeeper to validate our custom resources before they're deployed onto",
    "start": "900880",
    "end": "907000"
  },
  {
    "text": "kubernetes and then we have gatekeeper in kubernetes as a last line of",
    "start": "907000",
    "end": "913240"
  },
  {
    "text": "defense the next approach to feature gating and configuration gating that I wanted to discuss is to make API",
    "start": "918480",
    "end": "925360"
  },
  {
    "text": "abstractions on top of the service mesh apis so I like this example here uh with",
    "start": "925360",
    "end": "930800"
  },
  {
    "text": "taping up a TV remote for maybe a family member who's been struggling to use it um but by making an API abstraction um I",
    "start": "930800",
    "end": "940319"
  },
  {
    "text": "would say a platform engineer is essentially doing the same thing for the backend service owners uh they are",
    "start": "940319",
    "end": "945440"
  },
  {
    "text": "masking all of the irrelevant configuration options and only exposing what is absolutely necessary um for",
    "start": "945440",
    "end": "953120"
  },
  {
    "text": "their specific use cases so uh the service owners would just work through a higher level API and then there would be",
    "start": "953120",
    "end": "960199"
  },
  {
    "text": "some cicd workflow or some um automated process to convert these to service mesh",
    "start": "960199",
    "end": "966199"
  },
  {
    "text": "customer resources um so even though this isn't necessarily an explicit mechanism for uh",
    "start": "966199",
    "end": "972399"
  },
  {
    "text": "blocking features or uh you know using feature Flags to disable the execution of code paths um the idea is essentially",
    "start": "972399",
    "end": "980519"
  },
  {
    "text": "the same uh the service owners are blocked from uh using anything except",
    "start": "980519",
    "end": "986560"
  },
  {
    "text": "the specific set of features and configuration toggles that have been exposed and permitted for",
    "start": "986560",
    "end": "993480"
  },
  {
    "text": "them for instance here's what Salesforce does for their abstraction layer um they",
    "start": "993480",
    "end": "999240"
  },
  {
    "text": "deploy itdo resources as Helm charts and all the developers need to worry about is just specifying the values. yaml so",
    "start": "999240",
    "end": "1006600"
  },
  {
    "text": "we see how the complex authorization policy custom resource and itdo just got",
    "start": "1006600",
    "end": "1012000"
  },
  {
    "text": "greatly simplified to a narrow subset of fields another example example I found",
    "start": "1012000",
    "end": "1019079"
  },
  {
    "text": "pretty cool was based on an itoon talk from earlier this year so in actually",
    "start": "1019079",
    "end": "1024600"
  },
  {
    "text": "uses a declarative UI to configure weighted traffic routing so um the",
    "start": "1024600",
    "end": "1030038"
  },
  {
    "text": "developers would just use this internal development platform um and then they would specify the traffic shifting",
    "start": "1030039",
    "end": "1036079"
  },
  {
    "text": "weights and then the platform would create the corresponding virtual service with these",
    "start": "1036079",
    "end": "1042480"
  },
  {
    "text": "weights the next approach I wanted to highlight is to use giops so so Frameworks like flux and Argo are very",
    "start": "1043760",
    "end": "1050600"
  },
  {
    "text": "popular now amongst platform Engineers to automate installation and upgrades of infrastructure on kubernetes but when we",
    "start": "1050600",
    "end": "1058000"
  },
  {
    "text": "deploy our service mesh components and the custom resources through giops uh we can Define the configuration of our mesh",
    "start": "1058000",
    "end": "1064880"
  },
  {
    "text": "declaratively as well and um this is what is known as configuration as code",
    "start": "1064880",
    "end": "1070080"
  },
  {
    "text": "so the benefit of this approach is that it allows us to um effectively configuration gate uh the fields and",
    "start": "1070080",
    "end": "1077679"
  },
  {
    "text": "values that we have defined declaratively um because the gitops controller is continuously monitoring",
    "start": "1077679",
    "end": "1083720"
  },
  {
    "text": "the desired configuration of the service mesh it prevents configuration drift by reconciling undesired changes to these",
    "start": "1083720",
    "end": "1092679"
  },
  {
    "text": "resources so in this example here um I have an Argo CD manifest that's installing the io control plane through",
    "start": "1092760",
    "end": "1099520"
  },
  {
    "text": "a Helm chart um notice here in the bottom few lines um I'm also specifying",
    "start": "1099520",
    "end": "1105159"
  },
  {
    "text": "the desired state of the io mesh config by providing these values in the Argo deployment directly so when Argo pulls",
    "start": "1105159",
    "end": "1112600"
  },
  {
    "text": "the Ito Helm chart it will pass in these values directly to the itdo mesh config upon",
    "start": "1112600",
    "end": "1119240"
  },
  {
    "text": "installation so now Argo can monitor changes to the mesh config values that",
    "start": "1119240",
    "end": "1124360"
  },
  {
    "text": "we have defined in the previous step and point out whether the current state has deviated from the desired State um you",
    "start": "1124360",
    "end": "1131919"
  },
  {
    "text": "can see the actual State on the left and the desired State on the right so for instance perhaps another mesh admin was",
    "start": "1131919",
    "end": "1138520"
  },
  {
    "text": "experimenting with some Fields uh and they forgot to set it back or maybe they were trying to mitigate envoy's resource",
    "start": "1138520",
    "end": "1144640"
  },
  {
    "text": "consumption but they didn't realize that setting the concurrency to zero causes Envoy to use up all of the CPU cores as",
    "start": "1144640",
    "end": "1151960"
  },
  {
    "text": "opposed to setting it to unset um but thankfully tracking uh configuration options through good Ops",
    "start": "1151960",
    "end": "1158840"
  },
  {
    "text": "as such uh helps us narrow down errors like this and reconcile them back to our desired",
    "start": "1158840",
    "end": "1166080"
  },
  {
    "text": "State the last option we have at our disposal is uh ro-based Access Control in kubernetes obviously this is less",
    "start": "1166400",
    "end": "1173480"
  },
  {
    "text": "fine grained uh than some of the other feature gating mechanisms um and policy enforcements that we've covered however",
    "start": "1173480",
    "end": "1180240"
  },
  {
    "text": "it is generally considered good practice to restrict access um to the control plane and IO um uh system IO Ingress and",
    "start": "1180240",
    "end": "1189720"
  },
  {
    "text": "IO egress namespaces to the mesh admins or experts and we may also want to do",
    "start": "1189720",
    "end": "1195159"
  },
  {
    "text": "this for specific features and custom resources as well as",
    "start": "1195159",
    "end": "1200320"
  },
  {
    "text": "well so now that we've looked into some techniques for uh gating service mesh",
    "start": "1200799",
    "end": "1205919"
  },
  {
    "text": "features and configurations let's explore some potential criteria to help you establish uh what kinds of features",
    "start": "1205919",
    "end": "1212760"
  },
  {
    "text": "you want to allow or disallow in your environments um obviously some of these criteria could be overlapping and some",
    "start": "1212760",
    "end": "1219760"
  },
  {
    "text": "functionalities can touch on several of these areas so i' would say the first thing to",
    "start": "1219760",
    "end": "1226200"
  },
  {
    "text": "evaluate is the operational complexity of said feature um how easy is it for you as an admin to understand and how",
    "start": "1226200",
    "end": "1233039"
  },
  {
    "text": "complex would it be for the development teams to use uh is there enough documentation or support being offered",
    "start": "1233039",
    "end": "1238799"
  },
  {
    "text": "by the community and the project maintainers um and are there multiple ways of configuring it if so as I",
    "start": "1238799",
    "end": "1245720"
  },
  {
    "text": "touched on earlier with the case of the proxy configuration um it's much more intuitive if you could simplify this",
    "start": "1245720",
    "end": "1251240"
  },
  {
    "text": "down to one source of Truth so one example of a feature that's widely regarded regarded as comp complex",
    "start": "1251240",
    "end": "1258960"
  },
  {
    "text": "is it Doo's Envoy filter um because Envoy filters allow us to directly modify the envoy configuration uh they",
    "start": "1258960",
    "end": "1266360"
  },
  {
    "text": "can be very convoluted and difficult to use and if misconfigured they can uh",
    "start": "1266360",
    "end": "1271480"
  },
  {
    "text": "break traffic across the entire mesh um and as I'll touch on in a bit uh the",
    "start": "1271480",
    "end": "1276559"
  },
  {
    "text": "feature status of envoy filter is Alpha which may be another cause of concern um",
    "start": "1276559",
    "end": "1282440"
  },
  {
    "text": "however uh this hasn't necessarily stopped operators from using Envoy filters quite extensively uh whether the",
    "start": "1282440",
    "end": "1288679"
  },
  {
    "text": "use case is uh rate limiting um injecting custom leis scripts uh",
    "start": "1288679",
    "end": "1294200"
  },
  {
    "text": "extending Envoy with web assembly and so on so uh one potential solution here",
    "start": "1294200",
    "end": "1300760"
  },
  {
    "text": "would be for an admin to allow Envoy filters in a more limited capacity uh for instance if you only need it for",
    "start": "1300760",
    "end": "1307279"
  },
  {
    "text": "Global or local rate limiting you could have an admission controller policy that only allows for Envoy filters of that",
    "start": "1307279",
    "end": "1313880"
  },
  {
    "text": "specific type um on top of that we can have an API obr extration layer on top",
    "start": "1313880",
    "end": "1319279"
  },
  {
    "text": "of the rate limiting Envoy filters for the service owners or perhaps we just restrict the use of envoy filters uh to",
    "start": "1319279",
    "end": "1326039"
  },
  {
    "text": "mesh admins and experts Al together using rbac or admission",
    "start": "1326039",
    "end": "1331360"
  },
  {
    "text": "control um in this example I have a gatekeeper constraint that rejects Envoy",
    "start": "1331360",
    "end": "1336679"
  },
  {
    "text": "filters that are not of the rate limiting type um you could see that in the filter type variable there that I've",
    "start": "1336679",
    "end": "1344640"
  },
  {
    "text": "outlined and on top of that I've created an example here of what an abstraction layer with Helm could look like um don't",
    "start": "1344640",
    "end": "1352360"
  },
  {
    "text": "worry about the individual values there per se uh the point is that I've just simplified the rate limiting Envoy",
    "start": "1352360",
    "end": "1357520"
  },
  {
    "text": "filter to a simple values. yaml uh limited to just what the developers would need and um because of the way",
    "start": "1357520",
    "end": "1364159"
  },
  {
    "text": "I've set up the helm charts and hardcoded the type in the manifests rendering the templates will only",
    "start": "1364159",
    "end": "1369960"
  },
  {
    "text": "produce a rate limiting Envoy filters so the developers don't really have any control over what type of envoy filter",
    "start": "1369960",
    "end": "1377600"
  },
  {
    "text": "gets created created or any other fields in the envoy filter spec that have not been exposed to them and by the way",
    "start": "1377600",
    "end": "1384799"
  },
  {
    "text": "though Helm Works uh for this specific example uh if you need something more complex uh you'll probably need to write",
    "start": "1384799",
    "end": "1391200"
  },
  {
    "text": "your own crds for uh the envoy filter um and here uh I've linked to an example of",
    "start": "1391200",
    "end": "1397200"
  },
  {
    "text": "a crd that uh gopay has built on top of the rate limiting Envoy filter so again",
    "start": "1397200",
    "end": "1403480"
  },
  {
    "text": "feel free to download the slides and check that out later another important thing uh to consider",
    "start": "1403480",
    "end": "1410679"
  },
  {
    "text": "when establishing your feature Gates is the status of the feature so uh many organizations often have requirements",
    "start": "1410679",
    "end": "1418159"
  },
  {
    "text": "that um only beta or stable level features or uh probably just even stable",
    "start": "1418159",
    "end": "1425679"
  },
  {
    "text": "uh can only be used in production so it's good practice to disallow features",
    "start": "1425679",
    "end": "1431039"
  },
  {
    "text": "or apis uh that haven't reached that stage in the feature life cycle just yet",
    "start": "1431039",
    "end": "1436320"
  },
  {
    "text": "um so for example uh customizable Telemetry production through the Telemetry API in IO is still",
    "start": "1436320",
    "end": "1443440"
  },
  {
    "text": "currently in Alpha so um until that feature has reached a status of beta or",
    "start": "1443440",
    "end": "1449120"
  },
  {
    "text": "stable um you may want to block use of the Telemetry API and opt for",
    "start": "1449120",
    "end": "1455000"
  },
  {
    "text": "configuring uh Telemetry through the itdoes config",
    "start": "1455000",
    "end": "1460279"
  },
  {
    "text": "instead it's also crucial to factor in the risk level and the impact on the overall security of the mesh because",
    "start": "1460440",
    "end": "1467240"
  },
  {
    "text": "security like uh mtls and zero trust are such core reasons of why organizations",
    "start": "1467240",
    "end": "1473320"
  },
  {
    "text": "adopt service mesh in the first place uh the resources uh and apis that govern",
    "start": "1473320",
    "end": "1479039"
  },
  {
    "text": "security should be handled carefully so we've already touched on the peer authentication and Mt and mtls but um",
    "start": "1479039",
    "end": "1486760"
  },
  {
    "text": "there are some other itdo resources here that pertain to security um so to prevent policy",
    "start": "1486760",
    "end": "1492760"
  },
  {
    "text": "misconfigurations and mismatches it would definitely be worthwhile to add some fine graen validations for these",
    "start": "1492760",
    "end": "1499240"
  },
  {
    "text": "resources specifically um hide some of the configuration using an abstraction or delegate their configuration to the",
    "start": "1499240",
    "end": "1505960"
  },
  {
    "text": "admins or experts altogether different features and",
    "start": "1505960",
    "end": "1511240"
  },
  {
    "text": "configuration options uh also have important implications uh for resource consumption um before I was highlighting",
    "start": "1511240",
    "end": "1518559"
  },
  {
    "text": "how misconfigured the concurrency field uh can cause Envoy to use more CPU cores than intended so another way of",
    "start": "1518559",
    "end": "1525240"
  },
  {
    "text": "preventing a misconfiguration like that in addition to tracking those values uh through gitops could be establishing an",
    "start": "1525240",
    "end": "1531840"
  },
  {
    "text": "upper and lower Bound for those fields in our validating web hook um another helpful policy enforcement would be to",
    "start": "1531840",
    "end": "1538960"
  },
  {
    "text": "ensure the existence of a sidecar Resource as such in the itdo system names space uh the sidecar custom",
    "start": "1538960",
    "end": "1545640"
  },
  {
    "text": "resource in itdo can be used to limit the scope of the um of the envoy config",
    "start": "1545640",
    "end": "1552600"
  },
  {
    "text": "uh for instance the one here says that every proxy in the mesh should only be aware",
    "start": "1552600",
    "end": "1558399"
  },
  {
    "text": "of other workloads in the same Nam space or Theo system Nam space um as opposed to the default",
    "start": "1558399",
    "end": "1564600"
  },
  {
    "text": "Behavior where Ito pushes information about every service in the cluster to Envoy so uh limiting the scope of the",
    "start": "1564600",
    "end": "1571640"
  },
  {
    "text": "proxy through the side car has been shown to significantly mitigate the memory consumption of",
    "start": "1571640",
    "end": "1577039"
  },
  {
    "text": "envoy and um after ensuring the existence of a meshwi side car resource",
    "start": "1577039",
    "end": "1582880"
  },
  {
    "text": "uh we can define a policy like such that ensures that it's not overridden on a name space or a workload level so the",
    "start": "1582880",
    "end": "1590039"
  },
  {
    "text": "policy I have here verifies that no sidecar resource can bypass the mesh",
    "start": "1590039",
    "end": "1595440"
  },
  {
    "text": "white constraint by using a wild card for the egis",
    "start": "1595440",
    "end": "1600960"
  },
  {
    "text": "hosts um we've also seen some cases we're using wasm based filters in Envoy",
    "start": "1601720",
    "end": "1606840"
  },
  {
    "text": "uh because of the way that Envoy spins up AVM for the wasm module in each",
    "start": "1606840",
    "end": "1612080"
  },
  {
    "text": "worker thread can also cause resource utilization to spike um with osm for",
    "start": "1612080",
    "end": "1617360"
  },
  {
    "text": "instance uh we saw that when users had permissive traffic policy enabled meaning that um",
    "start": "1617360",
    "end": "1623520"
  },
  {
    "text": "osm would populate the envoy config with all of the services in the mesh and had wasm based Telemetry enabled on top of",
    "start": "1623520",
    "end": "1630600"
  },
  {
    "text": "that uh their data plane resource utilization would sometimes spiral out of control so a good policy enforcment",
    "start": "1630600",
    "end": "1637640"
  },
  {
    "text": "mechanism there could be for an admin to prevent both of those features from being enabled at the same",
    "start": "1637640",
    "end": "1643520"
  },
  {
    "text": "time um it's also worth noting that wasm based Telemetry and plugins in IO are",
    "start": "1643520",
    "end": "1649320"
  },
  {
    "text": "experimental or Alpha so um that's another reason why they should be used",
    "start": "1649320",
    "end": "1654440"
  },
  {
    "text": "judiciously or restrictively and uh once again we",
    "start": "1654440",
    "end": "1659880"
  },
  {
    "text": "return to the problem of annotations so if the operators uh configure a global setting for resource quotas uh for all",
    "start": "1659880",
    "end": "1666440"
  },
  {
    "text": "the proxies in the mesh they can be bypassed by using the sidecar annotations on pods so uh the admin",
    "start": "1666440",
    "end": "1673200"
  },
  {
    "text": "could Define gatekeeper constraints as demonstrated up here uh in order to deny",
    "start": "1673200",
    "end": "1678440"
  },
  {
    "text": "pods or deployments that attempt to use the proxy CPU or proxy memory",
    "start": "1678440",
    "end": "1683840"
  },
  {
    "text": "annotations so the constraint on the left uh defines the uh disallowed annotations and the constraint template",
    "start": "1683840",
    "end": "1690840"
  },
  {
    "text": "on the right uh defines the uh violation for those",
    "start": "1690840",
    "end": "1696960"
  },
  {
    "text": "annotations and finally uh the most important thing to consider when defining your allow list is your",
    "start": "1698640",
    "end": "1705080"
  },
  {
    "text": "organization's specific needs and use cases and reflecting on why you adopted a",
    "start": "1705080",
    "end": "1710320"
  },
  {
    "text": "service mesh in the first place and what is the minimum set of features and capabilities needed to accomplish those",
    "start": "1710320",
    "end": "1717039"
  },
  {
    "text": "aims and the key to success here is iterative adoption so let's say you were using itdo um maybe just start off using",
    "start": "1717039",
    "end": "1725320"
  },
  {
    "text": "uh virtual services and destination rules exposing the minimum number of fields to the service owners just to get",
    "start": "1725320",
    "end": "1731679"
  },
  {
    "text": "basic traffic and mtls going and after a certain point as you onboard more Serv",
    "start": "1731679",
    "end": "1737360"
  },
  {
    "text": "Services onto the mesh you've built enough confidence with the starter kit and your use cases evolve and become",
    "start": "1737360",
    "end": "1743440"
  },
  {
    "text": "more complex uh then you can start expanding your allow list to more features and um exposing more fields in",
    "start": "1743440",
    "end": "1750559"
  },
  {
    "text": "those apis so just to summarize uh what we've",
    "start": "1750559",
    "end": "1756279"
  },
  {
    "text": "covered in the session uh we first saw some techniques you could use to restrict the feature set and",
    "start": "1756279",
    "end": "1761679"
  },
  {
    "text": "configurability of your service mesh um and here's an example of what",
    "start": "1761679",
    "end": "1766919"
  },
  {
    "text": "this could potentially look like end to end with all these methods put together so um you have your application",
    "start": "1766919",
    "end": "1772840"
  },
  {
    "text": "development team working on an abstraction layer over itdo custom resources cicd workflow to uh convert",
    "start": "1772840",
    "end": "1781320"
  },
  {
    "text": "these to itdo custom resources then they're validated by the CI lters uh pull request gets merged then um Argo",
    "start": "1781320",
    "end": "1790200"
  },
  {
    "text": "will pull the new applications and that you manifest into kubernetes and um we also have gatekeeper deployed alongside",
    "start": "1790200",
    "end": "1796559"
  },
  {
    "text": "its Doo to um enforce the various policy constraints and gating mechanisms that",
    "start": "1796559",
    "end": "1802720"
  },
  {
    "text": "we've looked at throughout the presentation and uh again Argo is not only pulling the Manifest and the helm",
    "start": "1802720",
    "end": "1809480"
  },
  {
    "text": "charts but um it's also monitoring configuration drift and reverting",
    "start": "1809480",
    "end": "1814840"
  },
  {
    "text": "undesired configurations back to the desired state that um we've defined in",
    "start": "1814840",
    "end": "1819919"
  },
  {
    "text": "git and the platform Engineers here uh would be responsible for creating the abstraction layer and the cicd workflows",
    "start": "1819919",
    "end": "1827760"
  },
  {
    "text": "and um they would also be managing the infrastructure on kubernetes and the corresponding policies and",
    "start": "1827760",
    "end": "1833000"
  },
  {
    "text": "configurations for ddio and gatekeeper again um this particular",
    "start": "1833000",
    "end": "1838559"
  },
  {
    "text": "operational pattern is just based off of my setup that I was exploring um you don't necessarily have to use Helm",
    "start": "1838559",
    "end": "1844720"
  },
  {
    "text": "charts or any of the other specific Frameworks that I'm using um but it's just a rough guideline actually Mitch",
    "start": "1844720",
    "end": "1851120"
  },
  {
    "text": "coners over here actually has some great uh some great demos with IO flux Flagger",
    "start": "1851120",
    "end": "1856720"
  },
  {
    "text": "and Argo including with ambient mesh so uh definitely check out those as",
    "start": "1856720",
    "end": "1863519"
  },
  {
    "text": "well and then we touched on some criteria such as complexity uh feature status security and risk level resource",
    "start": "1863519",
    "end": "1871360"
  },
  {
    "text": "consumption and organizational requirements um to help you build your allow list for your desired subset of",
    "start": "1871360",
    "end": "1878519"
  },
  {
    "text": "service mes features and configurations admittedly um one major",
    "start": "1878519",
    "end": "1884760"
  },
  {
    "text": "motivation of this process is mitigating operational complexity but um there is",
    "start": "1884760",
    "end": "1890240"
  },
  {
    "text": "still going to be complexity involved in this feature gating process the mesh admins still need to do their homework",
    "start": "1890240",
    "end": "1897600"
  },
  {
    "text": "understand all the various apis all the fine-tuning options and then evaluate them against the criteria that I was",
    "start": "1897600",
    "end": "1903720"
  },
  {
    "text": "mentioning um and on top of that um we're introducing new tools like",
    "start": "1903720",
    "end": "1909600"
  },
  {
    "text": "gatekeeper Argo and flux um which have their own crds and languages to",
    "start": "1909600",
    "end": "1916159"
  },
  {
    "text": "learn however um I would argue that the benefits of going through this process",
    "start": "1916159",
    "end": "1921279"
  },
  {
    "text": "and putting time and thought into it um is certainly would outweigh the drawbacks uh at the end of the day your",
    "start": "1921279",
    "end": "1928159"
  },
  {
    "text": "organization ends up with an untangled a decluttered service mesh environment and",
    "start": "1928159",
    "end": "1933519"
  },
  {
    "text": "your service mesh is easier to operate less error prone and as a result we have",
    "start": "1933519",
    "end": "1938880"
  },
  {
    "text": "better Harmony between the platform engineers and the developers um this is because we have a declarative framework",
    "start": "1938880",
    "end": "1945039"
  },
  {
    "text": "in place to enforce what kind of features and configurations we want to",
    "start": "1945039",
    "end": "1950360"
  },
  {
    "text": "allow or disallow in our production environments and most importantly this",
    "start": "1950360",
    "end": "1955440"
  },
  {
    "text": "allow list has been tailored specifically for your organization's specific set of",
    "start": "1955440",
    "end": "1961639"
  },
  {
    "text": "requirements finally um I wanted to touch on some relevant developments in the ecosystem uh specifically from the",
    "start": "1961639",
    "end": "1967720"
  },
  {
    "text": "io Community to keep an eye out for uh one of the key things I think is worth highlighting here is the ongoing work",
    "start": "1967720",
    "end": "1973919"
  },
  {
    "text": "being done to improve the feature graduation process in its do So currently uh there are a lot of",
    "start": "1973919",
    "end": "1979480"
  },
  {
    "text": "features um that have been kind of lingering in an alpha status um but the community has been prioritizing testing",
    "start": "1979480",
    "end": "1985760"
  },
  {
    "text": "and enhancing them uh to help them Reach a graduated status faster so as more",
    "start": "1985760",
    "end": "1990919"
  },
  {
    "text": "features are brought out of the alpha purgatory and into beta or stable um you",
    "start": "1990919",
    "end": "1996480"
  },
  {
    "text": "can incorporate them into your production environments with more confidence and there's also a general",
    "start": "1996480",
    "end": "2002240"
  },
  {
    "text": "consensus in the io Community now that um in most cases it is preferable to",
    "start": "2002240",
    "end": "2007679"
  },
  {
    "text": "break uh complex apis like Envoy filter down into smaller first class crds and",
    "start": "2007679",
    "end": "2014200"
  },
  {
    "text": "um in general to minimize overlap across apis and narrow down the set of",
    "start": "2014200",
    "end": "2020159"
  },
  {
    "text": "functionalities and fine-tuning options to one source of Truth uh so with improvements like this",
    "start": "2020159",
    "end": "2026559"
  },
  {
    "text": "uh the process of configuring and navigating itdo will be much more intuitive down the road and uh this will",
    "start": "2026559",
    "end": "2033760"
  },
  {
    "text": "be even more true with the evolution of IO ambient mesh uh due to the due to the",
    "start": "2033760",
    "end": "2039000"
  },
  {
    "text": "separation of the layer 4 and layer 7 components and policy enforcements and",
    "start": "2039000",
    "end": "2045240"
  },
  {
    "text": "configuration um as well as the fact that your mesh is just going to have fewer moving Parts in",
    "start": "2045240",
    "end": "2051359"
  },
  {
    "text": "general and if anyone wants to download the slides and look into some of these examples later um I have them linked",
    "start": "2051480",
    "end": "2057440"
  },
  {
    "text": "here I also gave a similar talk about this for itoon earlier this year so feel",
    "start": "2057440",
    "end": "2062720"
  },
  {
    "text": "free to check that out as well so uh that is it for this",
    "start": "2062720",
    "end": "2067919"
  },
  {
    "text": "presentation uh thank you so much everyone for coming um I hope you found it valuable and can take something away",
    "start": "2067919",
    "end": "2074000"
  },
  {
    "text": "from it uh please scan the QR code to provide feedback uh feel free to reach out on LinkedIn uh happy to talk",
    "start": "2074000",
    "end": "2081320"
  },
  {
    "text": "anything service mesh or get Ops kubernetes discuss some service mess operational patterns um there's my",
    "start": "2081320",
    "end": "2088919"
  },
  {
    "text": "GitHub repository in LinkedIn so uh yeah thanks again and please enjoy the last few hours of",
    "start": "2088919",
    "end": "2095878"
  },
  {
    "text": "cucon [Applause]",
    "start": "2095879",
    "end": "2103859"
  },
  {
    "text": "and um I'll be hanging around for a bit if anyone wants to ask us any questions sure at a question um so one",
    "start": "2106480",
    "end": "2115520"
  },
  {
    "text": "of the things that I was thinking to myself as you're giving the presentation is there's a lot of places where you can",
    "start": "2115520",
    "end": "2121320"
  },
  {
    "text": "Define things and there's a lot of opportunities for misconfigurations to happen across just even your platform",
    "start": "2121320",
    "end": "2128280"
  },
  {
    "text": "team saying like well if we're defining it in if we're defining the rules in three different",
    "start": "2128280",
    "end": "2134560"
  },
  {
    "text": "places um to catch it in CI to catch it in production do you have any",
    "start": "2134560",
    "end": "2141119"
  },
  {
    "text": "recommendations on how you might think about like an abstraction layer above that to say like these are the rules",
    "start": "2141119",
    "end": "2147359"
  },
  {
    "text": "that we want to enforce and making sure that they're applied in the right places",
    "start": "2147359",
    "end": "2152480"
  },
  {
    "text": "or has that not been something that anyone has thought through",
    "start": "2152480",
    "end": "2157880"
  },
  {
    "text": "uh so uh if I understood your question it was how to um do some of these",
    "start": "2157880",
    "end": "2164280"
  },
  {
    "text": "validations even earlier like through the abstraction or internal development platform yeah I mean uh I guess you",
    "start": "2164280",
    "end": "2171000"
  },
  {
    "text": "could add some um I mean depending on how you build your abstraction layer and",
    "start": "2171000",
    "end": "2176400"
  },
  {
    "text": "how um like the platform itself is set up I think the example I was giving with",
    "start": "2176400",
    "end": "2182359"
  },
  {
    "text": "uh into it um because they have like a declarative like you and like a web app",
    "start": "2182359",
    "end": "2188000"
  },
  {
    "text": "I think in that case it would probably be easier to bake some of the validations into the um abstraction",
    "start": "2188000",
    "end": "2194560"
  },
  {
    "text": "platform itself um I think yeah with the examples with Helm and the other",
    "start": "2194560",
    "end": "2200400"
  },
  {
    "text": "examples I was giving um yeah I think the abstraction itself uh probably",
    "start": "2200400",
    "end": "2206160"
  },
  {
    "text": "wouldn't be able to block or disallow you'd probably need to do that at the CI",
    "start": "2206160",
    "end": "2211359"
  },
  {
    "text": "level",
    "start": "2215680",
    "end": "2218680"
  },
  {
    "text": "thanks nuran John this was great uh you you you sort of had two categories of things that we talked about one was sort",
    "start": "2222200",
    "end": "2227680"
  },
  {
    "text": "of templating and providing just limited levers for an app to pull in terms of configuring their ISO and the other was",
    "start": "2227680",
    "end": "2234800"
  },
  {
    "text": "actually like rejecting config that violates your rules sort of administrative or policy based are those",
    "start": "2234800",
    "end": "2241400"
  },
  {
    "text": "things that we should be either or like choosing whether you use templating or policy or is it sort of a both and thing",
    "start": "2241400",
    "end": "2247520"
  },
  {
    "text": "for that you would recommend um I think I mean my own",
    "start": "2247520",
    "end": "2254160"
  },
  {
    "text": "opinion um again it's harder for me to say because like I'm not like an organization actually like using its own",
    "start": "2254160",
    "end": "2260960"
  },
  {
    "text": "production I'm like like more of like a developer but if I had to make a recommendation it would be it's better",
    "start": "2260960",
    "end": "2266839"
  },
  {
    "text": "to have multiple layers of Defense so like you have your abstraction layer um and then you have your policy templates",
    "start": "2266839",
    "end": "2274640"
  },
  {
    "text": "um like on top of that as kind of like a last line of defense but um I think uh",
    "start": "2274640",
    "end": "2282920"
  },
  {
    "text": "again like it's it is like a lot of work to to do all of them so um like you're",
    "start": "2282920",
    "end": "2288240"
  },
  {
    "text": "using IO which is complex enough and then you have your gatekeeper which is another layer of complexity and then you",
    "start": "2288240",
    "end": "2293319"
  },
  {
    "text": "have to develop your API abstractions which is a third layer so um I mean",
    "start": "2293319",
    "end": "2299599"
  },
  {
    "text": "depending on um like this the the organization and um the specific like",
    "start": "2299599",
    "end": "2306040"
  },
  {
    "text": "needs and requirements of the platform engineering team I think um but yeah I",
    "start": "2306040",
    "end": "2311960"
  },
  {
    "text": "would recommend like uh doing as many validations as you can beforehand thank",
    "start": "2311960",
    "end": "2319960"
  },
  {
    "text": "you cool um with that I'm just gonna turn off my mic but I'll be",
    "start": "2324920",
    "end": "2331280"
  },
  {
    "text": "hanging around for more questions",
    "start": "2331280",
    "end": "2336960"
  }
]