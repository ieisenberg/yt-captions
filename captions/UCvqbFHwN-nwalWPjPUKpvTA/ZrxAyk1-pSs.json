[
  {
    "text": "hello welcome it's after lunch so I know it's",
    "start": "9840",
    "end": "15179"
  },
  {
    "text": "a tiring time for people you've got to stay awake for all these talks and I suppose just for the avoidance of",
    "start": "15179",
    "end": "21779"
  },
  {
    "text": "doubt this shirt does not mean I've lost a bet it means that I'm winning one",
    "start": "21779",
    "end": "28140"
  },
  {
    "text": "so I'm happy but Natalie and I are here today to talk not about awesome violent pink bullet",
    "start": "28140",
    "end": "36120"
  },
  {
    "text": "shirts but about Bill packs and in particular customizing the build process around",
    "start": "36120",
    "end": "42180"
  },
  {
    "text": "build packs um what we want to do is introduce a couple of features that some of which you may",
    "start": "42180",
    "end": "48480"
  },
  {
    "text": "know some of which are very very very new in order to customize the build packs build process",
    "start": "48480",
    "end": "55320"
  },
  {
    "text": "so what I'm going to do first is go into a really short demo and then we'll go",
    "start": "55320",
    "end": "60960"
  },
  {
    "text": "into kind of an overview of the rest of the talk and we'll dig into dive deeper into each of those features",
    "start": "60960",
    "end": "69740"
  },
  {
    "text": "so the question always I try and ask myself the question is what what problem are we solving",
    "start": "69780",
    "end": "75420"
  },
  {
    "text": "and the problem that bill packs are trying to solve is given my application source code how do I get an oci image at",
    "start": "75420",
    "end": "82920"
  },
  {
    "text": "The Far Side that's it given my application source code how do I generate an oci image AKA",
    "start": "82920",
    "end": "88619"
  },
  {
    "text": "a Docker image something that you can deploy on top of kubernetes something that you can do a Docker run with or a",
    "start": "88619",
    "end": "94619"
  },
  {
    "text": "podman run or whatever your runtime at chosen runtime environment is now how many people here have used our",
    "start": "94619",
    "end": "102540"
  },
  {
    "text": "pack tool before to generate an image can I see some hands in the air oh wow it's roughly about half the audience",
    "start": "102540",
    "end": "108180"
  },
  {
    "text": "fantastic that's more than we expected we must be doing some good work",
    "start": "108180",
    "end": "113280"
  },
  {
    "text": "fantastic so I've got a quick example here of using pack",
    "start": "113280",
    "end": "118979"
  },
  {
    "text": "to build an image now the typical user experience with the PAC command line",
    "start": "118979",
    "end": "125100"
  },
  {
    "text": "tool is simply pack build and then your image name I've explicitly here decided to put in",
    "start": "125100",
    "end": "131400"
  },
  {
    "text": "the dash dash Builder to show that we're using the paquetto Builder in this particular instance now we'll talk a bit",
    "start": "131400",
    "end": "138720"
  },
  {
    "text": "more about Builders and the entire build packs ecosystem in a bit but it suffices",
    "start": "138720",
    "end": "144180"
  },
  {
    "text": "to say at the moment that there are multiple providers for for of Builders buildpack's project is a vendor neutral",
    "start": "144180",
    "end": "150540"
  },
  {
    "text": "cncf project there are providers from Google Heroku VMware",
    "start": "150540",
    "end": "156260"
  },
  {
    "text": "and other people that I've probably forgotten already which is good but whatever Builder",
    "start": "156260",
    "end": "163200"
  },
  {
    "text": "you're using the output image will have the following the similar characteristics the output image is",
    "start": "163200",
    "end": "168480"
  },
  {
    "text": "going to be small it's going to be as small as is possible given and perking",
    "start": "168480",
    "end": "173519"
  },
  {
    "text": "only your application's dependencies um the output of an image is going to",
    "start": "173519",
    "end": "179340"
  },
  {
    "text": "have a full software bill of materials we know about the build process because we're controlling the build process and",
    "start": "179340",
    "end": "185819"
  },
  {
    "text": "because we control the build process we can tell you what version of the go compiler was used to build your go",
    "start": "185819",
    "end": "191220"
  },
  {
    "text": "application for example so the s-bomb is pretty complete interestingly that we have byte for byte",
    "start": "191220",
    "end": "198659"
  },
  {
    "text": "reproducibility on images so that if you build an image and then if you don't change your application's",
    "start": "198659",
    "end": "205560"
  },
  {
    "text": "dependencies and if you rebuild that image you will get byte for byte reproducibility on that image now that's",
    "start": "205560",
    "end": "212580"
  },
  {
    "text": "particularly interesting for you know experimental workflows whether they be in science or whether they be in um in",
    "start": "212580",
    "end": "219480"
  },
  {
    "text": "data science or in um other kind of regulated Industries",
    "start": "219480",
    "end": "226140"
  },
  {
    "text": "and the buy for a bite reproducibility allows us to deploy some fairly Advanced caching strategies so if you build an",
    "start": "226140",
    "end": "234540"
  },
  {
    "text": "image layer only that has your application dependencies and if your application dependencies don't change",
    "start": "234540",
    "end": "239700"
  },
  {
    "text": "well then we can reuse that layer when you rebuild your application so your application source code might change but",
    "start": "239700",
    "end": "246239"
  },
  {
    "text": "that layer doesn't necessarily mean to need to change oh I'm going slow sorry we don't use",
    "start": "246239",
    "end": "253439"
  },
  {
    "text": "root when we're building which is very important uh Natalie will come on to that a bit later it's particularly",
    "start": "253439",
    "end": "259500"
  },
  {
    "text": "important if you're the person providing the build form for your application developers that's me hi",
    "start": "259500",
    "end": "265139"
  },
  {
    "text": "um and I don't want to give people root on all my boxes and then luckily we'll talk a little bit about rebasable images",
    "start": "265139",
    "end": "272520"
  },
  {
    "text": "but what we've done here in this demo is built a multi-language application the",
    "start": "272520",
    "end": "278280"
  },
  {
    "text": "application here has a go back end and a react front end and type in typescript",
    "start": "278280",
    "end": "284580"
  },
  {
    "text": "um what's been produced in the image is an image with two entry points and you can spin up each of those entry points",
    "start": "284580",
    "end": "290580"
  },
  {
    "text": "we can spin up the default entry point which runs the back end and we can spin up the uh the entry point called Web",
    "start": "290580",
    "end": "297960"
  },
  {
    "text": "which spins up the front end for this application and you can see a screenshot of it in the bottom right now that image",
    "start": "297960",
    "end": "304440"
  },
  {
    "text": "the buildbox.io image I'll come on to in a little bit in a few slides time but you can see they're amazing hello world",
    "start": "304440",
    "end": "310919"
  },
  {
    "text": "that is returned as a payload from the backend service so what we have done is we have built reasonably quickly just",
    "start": "310919",
    "end": "317759"
  },
  {
    "text": "pack build example and multi-language application from a mono repo",
    "start": "317759",
    "end": "325800"
  },
  {
    "text": "and just a little bit of word on what goes into that build and then what comes out of that build what goes into that",
    "start": "325800",
    "end": "331740"
  },
  {
    "text": "build is your application source code and you saw me explicitly use a dash dash Builder what is a builder well a",
    "start": "331740",
    "end": "339120"
  },
  {
    "text": "builder is again just an oci image it's an easy way for us to distribute collections of build packs",
    "start": "339120",
    "end": "346500"
  },
  {
    "text": "in addition to the collection of build packs that's distributed on the Builder it will have a build image that's the",
    "start": "346500",
    "end": "353880"
  },
  {
    "text": "image of the build packs actually run in run on whilst they do their their work",
    "start": "353880",
    "end": "359460"
  },
  {
    "text": "and the Builder will generally contains a pointer to a run image which lives generally on a registry and that's Run",
    "start": "359460",
    "end": "366900"
  },
  {
    "text": "images the Run image that's used as the base layer in your output application image",
    "start": "366900",
    "end": "373340"
  },
  {
    "text": "as I said if we start and have a look at the build output what you'll see is that at the base layer is the Run image the",
    "start": "375900",
    "end": "382680"
  },
  {
    "text": "Run image that's pointed to by the Builder what you'll see now is I've got to build up this image in terms of layers it's",
    "start": "382680",
    "end": "389400"
  },
  {
    "text": "very much a Kim if you've if you've not used Pac before it's very much akin to a multi-stage Docker build but we would",
    "start": "389400",
    "end": "396060"
  },
  {
    "text": "argue that there are more controls and guardrails or in in in build packs than in something like a multi-stage Docker",
    "start": "396060",
    "end": "402360"
  },
  {
    "text": "build um and what you can see here is the different layers that are being added to",
    "start": "402360",
    "end": "407639"
  },
  {
    "text": "my application image um the node.js build pack in particular will contribute a node engine the node",
    "start": "407639",
    "end": "414000"
  },
  {
    "text": "runtime to the output image and the node.js build pack will also contribute just the set of node modules",
    "start": "414000",
    "end": "420900"
  },
  {
    "text": "that my application uses to that output image slightly by contrast",
    "start": "420900",
    "end": "428220"
  },
  {
    "text": "what we could see with the go build pack is that it contributes the output binary",
    "start": "428220",
    "end": "433380"
  },
  {
    "text": "the backend binary to my output image but the supporting build packs that actually provide the go to the go",
    "start": "433380",
    "end": "439500"
  },
  {
    "text": "compiler and a mechanism for downloading the the vendored modules they're not part of the output image they will run",
    "start": "439500",
    "end": "446580"
  },
  {
    "text": "on the build image but they don't have to be part of the output image and this allows us to keep that output image as",
    "start": "446580",
    "end": "452280"
  },
  {
    "text": "small as possible and distribute things that only are necessary at runtime",
    "start": "452280",
    "end": "458099"
  },
  {
    "text": "if you've used built before you would expect nice goodness that we we claim you get",
    "start": "458099",
    "end": "463440"
  },
  {
    "text": "yourself a software bill of materials that as I said is pretty complete uh we'll ship your application source code",
    "start": "463440",
    "end": "469500"
  },
  {
    "text": "on top of that and we'll put the entry points in your image",
    "start": "469500",
    "end": "475919"
  },
  {
    "text": "oh and one more thing I did mention cashing I'm not going to go into in any kind of detail but the buy for bite",
    "start": "475919",
    "end": "482639"
  },
  {
    "text": "reproducibility on these layers does mean that we can cache most of those layers so that when you rebuild as I",
    "start": "482639",
    "end": "489300"
  },
  {
    "text": "said and if any of these layers haven't changed so you're using the same node engine for example then we just",
    "start": "489300",
    "end": "495960"
  },
  {
    "text": "choose that layer from the registry and we don't have to rebuild it so there's a lot of efficiencies built in there",
    "start": "495960",
    "end": "503280"
  },
  {
    "text": "so that's a quick demo and hopefully at this stage you're going to agree with me that pack build is a nice neat",
    "start": "503280",
    "end": "510419"
  },
  {
    "text": "straightforward way of taking your application source code and turning it into an output image now there may be people in this audience",
    "start": "510419",
    "end": "517080"
  },
  {
    "text": "that are thinking my build process isn't that straightforward I need to customize one or two things",
    "start": "517080",
    "end": "523919"
  },
  {
    "text": "here and that's what we're going to talk about for the rest of the talk five kind of ways of customizing the build packs",
    "start": "523919",
    "end": "530220"
  },
  {
    "text": "build pretty much an increasing order of complexity so we'll first talk about environment variables we'll then talk",
    "start": "530220",
    "end": "536700"
  },
  {
    "text": "about remixing the existing build packs we'll talk about something that we call inline build packs that's where my",
    "start": "536700",
    "end": "543480"
  },
  {
    "text": "little logo example is going to come back in again uh we'll then talk about a new feature that was released when",
    "start": "543480",
    "end": "551519"
  },
  {
    "text": "yesterday yes this is hot off the press folks a new feature that was released",
    "start": "551519",
    "end": "556800"
  },
  {
    "text": "yesterday called dockerfile extensions and then we will point you to some documentation about writing your own",
    "start": "556800",
    "end": "564000"
  },
  {
    "text": "build pack right my image contains a go back end and a",
    "start": "564000",
    "end": "570120"
  },
  {
    "text": "react front end can we customize the Go version that we used in that image",
    "start": "570120",
    "end": "577940"
  },
  {
    "text": "oh this used to work for another Irish guy if I say can we you can if can we",
    "start": "578100",
    "end": "585140"
  },
  {
    "text": "if I say can we customize the Go version you say what",
    "start": "585140",
    "end": "590459"
  },
  {
    "text": "yes yes we can right great Irish guy came before me Mr",
    "start": "590459",
    "end": "596459"
  },
  {
    "text": "Obama and he popularized this so if I say can we customize the node.js the the",
    "start": "596459",
    "end": "601740"
  },
  {
    "text": "Go version using the image the answer is yes we can and can we customize the",
    "start": "601740",
    "end": "608220"
  },
  {
    "text": "node.js version also used in the output image the answer is fantastic thank you very much and how do",
    "start": "608220",
    "end": "615240"
  },
  {
    "text": "we filmize these things well I'm using the picado Builder what I'm going to do is",
    "start": "615240",
    "end": "621300"
  },
  {
    "text": "use my pack tool again just to inspect their Builder and it's going to print out for me all the build packs used in",
    "start": "621300",
    "end": "627600"
  },
  {
    "text": "that Builder and I'm going to jump to the documentation that they're um that the paquero folk have already",
    "start": "627600",
    "end": "633600"
  },
  {
    "text": "written for us and you can see that their documentation tells you precisely what environmental variables are",
    "start": "633600",
    "end": "639899"
  },
  {
    "text": "available to customize things at build time there is a BP underscore go",
    "start": "639899",
    "end": "645779"
  },
  {
    "text": "underscore version environment variable that I can pass either on the command line",
    "start": "645779",
    "end": "650880"
  },
  {
    "text": "or you can see that in the bottom right hand corner I can put it into a project.tumble file in my source code",
    "start": "650880",
    "end": "656940"
  },
  {
    "text": "and then I can then point that To Go version 1.20.3 which I think is the latest goal",
    "start": "656940",
    "end": "662700"
  },
  {
    "text": "version if I wanted to for today now I'm using something slightly more advanced from the paquero folk",
    "start": "662700",
    "end": "669120"
  },
  {
    "text": "I'm using their BP underscore keep underscore files environment variable I went to the documentation I read it",
    "start": "669120",
    "end": "676140"
  },
  {
    "text": "turns out that usually the go build pack reads the go Source it compiles the",
    "start": "676140",
    "end": "681240"
  },
  {
    "text": "binary and then it doesn't put the go Source put code on the output image because that just doesn't make sense in goland",
    "start": "681240",
    "end": "687360"
  },
  {
    "text": "but if I'm building a polyglot image where I've got go source code and typescript source code I will not I will",
    "start": "687360",
    "end": "694260"
  },
  {
    "text": "want to keep all those files on the output image and this customization by",
    "start": "694260",
    "end": "699660"
  },
  {
    "text": "reading their documentation I can use the BP underscore keep underscore files environment variable",
    "start": "699660",
    "end": "705600"
  },
  {
    "text": "and keep all that lovely typescript on my output image",
    "start": "705600",
    "end": "710660"
  },
  {
    "text": "variables aren't just for application Developers they are for platform operators as well",
    "start": "712680",
    "end": "717959"
  },
  {
    "text": "now you're a platform operator if you're the person who maintains your CI",
    "start": "717959",
    "end": "723060"
  },
  {
    "text": "pipelines that use pack or maybe that's a GitHub action or maybe that's a Jenkins pipeline of some stage",
    "start": "723060",
    "end": "729839"
  },
  {
    "text": "or you're a platform operator if you use the kubernetes operator kpac to monitor",
    "start": "729839",
    "end": "736680"
  },
  {
    "text": "git repositories and produce images anytime changes are in in the git repositories",
    "start": "736680",
    "end": "741720"
  },
  {
    "text": "as a platform operator I can choose to either default end users",
    "start": "741720",
    "end": "747600"
  },
  {
    "text": "application developers to specific versions of these environment variables and I can also choose to override end",
    "start": "747600",
    "end": "754019"
  },
  {
    "text": "users environment variables and that makes it easy for me to customize support and even enforce corporate",
    "start": "754019",
    "end": "760380"
  },
  {
    "text": "standards so if we say that we only support python 310 and python 311 well I",
    "start": "760380",
    "end": "766620"
  },
  {
    "text": "can default to python 310 and allow the an end user to choose python 311.",
    "start": "766620",
    "end": "773060"
  },
  {
    "text": "second thing we can do in terms of order complexity is to start talking about",
    "start": "773899",
    "end": "779839"
  },
  {
    "text": "remixing the build order again I'm using a builder from piketto project and the piccato project has",
    "start": "779839",
    "end": "786240"
  },
  {
    "text": "amazingly wide support for a lot of language stacks it's got support from Ruby python PHP",
    "start": "786240",
    "end": "793620"
  },
  {
    "text": "but by default their Builder builds either a ruby application or a python",
    "start": "793620",
    "end": "798959"
  },
  {
    "text": "application or a Java application and in my polyglot land I want to build a go",
    "start": "798959",
    "end": "805139"
  },
  {
    "text": "and typescript application at the same time terrible example English is not a",
    "start": "805139",
    "end": "810240"
  },
  {
    "text": "good example when you want to use or an exclusive or an and in the same sentence but hey and what do you build a project that is",
    "start": "810240",
    "end": "816360"
  },
  {
    "text": "both a go project and a typescript project so what I'm going to do",
    "start": "816360",
    "end": "821700"
  },
  {
    "text": "is well the question is uh",
    "start": "821700",
    "end": "827279"
  },
  {
    "text": "yeah I suppose can we remix the build order of the build packs and the answer is",
    "start": "827279",
    "end": "833880"
  },
  {
    "text": "ah thank you glad effort didn't forget that one and it is another feature of",
    "start": "833880",
    "end": "839279"
  },
  {
    "text": "this project.tumble file that I have here on the left hand side what I'm doing here is picking out two build",
    "start": "839279",
    "end": "844800"
  },
  {
    "text": "packs particularly and saying that I want to build my project using only the node.js build pack and only the go build",
    "start": "844800",
    "end": "851279"
  },
  {
    "text": "pack and use them please both at the same time rather than using them exclusively",
    "start": "851279",
    "end": "857959"
  },
  {
    "text": "um yeah and this functionality reuses a lot of this allows us to reuse an awful lot",
    "start": "858660",
    "end": "863940"
  },
  {
    "text": "of pre-existing functionality without actually going out and rewriting source code or even going as far as writing a",
    "start": "863940",
    "end": "870540"
  },
  {
    "text": "build pack then a third way of extending the build packs",
    "start": "870540",
    "end": "876060"
  },
  {
    "text": "build process and here we're more talking about it something that I know Natalie will talk about later something like more like an escape hatch",
    "start": "876060",
    "end": "883260"
  },
  {
    "text": "sometimes and just sometimes you really just need to run a shell script",
    "start": "883260",
    "end": "890040"
  },
  {
    "text": "I know it's not pretty people and I know we don't want to admit to it but can I use Curl to download an image",
    "start": "890040",
    "end": "898800"
  },
  {
    "text": "or a picture at build time and put it on the application image yes we can I can use Curl if curl exists",
    "start": "898800",
    "end": "907440"
  },
  {
    "text": "on the build image I can use Curl to take the bill Pack's logo from buildpacks.io and output it into",
    "start": "907440",
    "end": "914480"
  },
  {
    "text": "logo.svg on the application image and that's quite cool I've actually here in",
    "start": "914480",
    "end": "919860"
  },
  {
    "text": "the kind of last five or six lines there written a small build pack in shell",
    "start": "919860",
    "end": "924899"
  },
  {
    "text": "script it's a restricted Bill pack so we tend to call it an inline build pack but it's a script that runs as the build",
    "start": "924899",
    "end": "931320"
  },
  {
    "text": "pack called example slash logo that does bring us on to the more",
    "start": "931320",
    "end": "937620"
  },
  {
    "text": "complex ways of doing things and that is where I have to hand over to people who know more than I do so Natalie please",
    "start": "937620",
    "end": "946220"
  },
  {
    "text": "great hello um okay so we did say",
    "start": "946800",
    "end": "952800"
  },
  {
    "text": "at the beginning of this talk that bill Pax take your source code and turn them into oci images without the use of",
    "start": "952800",
    "end": "960360"
  },
  {
    "text": "Docker files so you might be wondering at this stage what we mean by Docker file extensions and how they fit into a",
    "start": "960360",
    "end": "967199"
  },
  {
    "text": "build packs build so to understand the need for this",
    "start": "967199",
    "end": "972360"
  },
  {
    "text": "escape hatch we have to talk a little bit about the CNB specification right we mentioned that build packs are a spec",
    "start": "972360",
    "end": "979160"
  },
  {
    "text": "anyone can write a build pack but those build packs are expected to conform to certain limitations right among them",
    "start": "979160",
    "end": "986940"
  },
  {
    "text": "build packs run rootless they're Limited in what they can do right and this is by Design This is the",
    "start": "986940",
    "end": "994079"
  },
  {
    "text": "value of cloud native build packs is that you're putting constraints around your build process and you know not",
    "start": "994079",
    "end": "999600"
  },
  {
    "text": "allowing anything to happen but only the things that you've allowed right",
    "start": "999600",
    "end": "1005180"
  },
  {
    "text": "but sometimes you just need to do something custom on a per application basis so it might be downloading an",
    "start": "1005180",
    "end": "1012500"
  },
  {
    "text": "image from the Internet or it might be installing an operating system package that's not",
    "start": "1012500",
    "end": "1018259"
  },
  {
    "text": "there on the base image right and in that case a build pack is really too",
    "start": "1018259",
    "end": "1023300"
  },
  {
    "text": "Limited right so we need something else and I have to ask you can we use Docker",
    "start": "1023300",
    "end": "1030620"
  },
  {
    "text": "files to extend our build or runtime based images [Music]",
    "start": "1030620",
    "end": "1036918"
  },
  {
    "text": "as of really really as of yesterday so let's talk about how we used to solve",
    "start": "1036919",
    "end": "1044120"
  },
  {
    "text": "this problem right here we have a base a base image it could be our build time",
    "start": "1044120",
    "end": "1049880"
  },
  {
    "text": "base image or our runtime base image the strategy is kind of the same and we need",
    "start": "1049880",
    "end": "1056660"
  },
  {
    "text": "a custom package for one of our applications right so we just add it we just install it ahead of time to the",
    "start": "1056660",
    "end": "1064039"
  },
  {
    "text": "Builder but as you can imagine the number of packages that you've added to your your",
    "start": "1064039",
    "end": "1070760"
  },
  {
    "text": "base image can be quite large right and each package may only be needed by one application right this is not",
    "start": "1070760",
    "end": "1078140"
  },
  {
    "text": "the ideal right so the new way that we've allowed",
    "start": "1078140",
    "end": "1084320"
  },
  {
    "text": "is you start with your base image you can keep it very lean right",
    "start": "1084320",
    "end": "1089780"
  },
  {
    "text": "and then at build time we detect what additional actions might be required",
    "start": "1089780",
    "end": "1095720"
  },
  {
    "text": "right and we generate a Docker file that then is applied to the build or the",
    "start": "1095720",
    "end": "1101000"
  },
  {
    "text": "runtime base image in order to extend that image before the build packs run",
    "start": "1101000",
    "end": "1107440"
  },
  {
    "text": "so then after this whole process happens you get the build pack provided layers the s-bomb and all of the things that",
    "start": "1107660",
    "end": "1113960"
  },
  {
    "text": "you come to expect from your build so how it works",
    "start": "1113960",
    "end": "1119780"
  },
  {
    "text": "um just to take a step back right a build pack all it is is a piece of software",
    "start": "1119780",
    "end": "1125179"
  },
  {
    "text": "right it reads your application directory it determines what actions",
    "start": "1125179",
    "end": "1131120"
  },
  {
    "text": "might be needed in order to build that application and it contributes dependency layers",
    "start": "1131120",
    "end": "1136220"
  },
  {
    "text": "right we've introduced sort of an analogous concept called an image extension that does something very",
    "start": "1136220",
    "end": "1143120"
  },
  {
    "text": "similar it reads your application directory it determines what actions might need to be taken in a Docker file",
    "start": "1143120",
    "end": "1150200"
  },
  {
    "text": "and generates that Docker file for application as part of the build process",
    "start": "1150200",
    "end": "1156640"
  },
  {
    "text": "so these are just examples of Docker files that might be output right on the left here we have a build.docker file",
    "start": "1157340",
    "end": "1164539"
  },
  {
    "text": "which as you might expect is going to be applied to our build time base image and",
    "start": "1164539",
    "end": "1169580"
  },
  {
    "text": "all it does is install curl right and we have a run.docker file that will be used to extend the runtime",
    "start": "1169580",
    "end": "1176480"
  },
  {
    "text": "base image and it does the same thing the run.docker file is is a little bit",
    "start": "1176480",
    "end": "1183919"
  },
  {
    "text": "special right in the case of a build Docker file we really don't want to change",
    "start": "1183919",
    "end": "1189380"
  },
  {
    "text": "the the build time base because that has the build packs that we've already detected that we need right so we have",
    "start": "1189380",
    "end": "1195799"
  },
  {
    "text": "this ARG base image from base image which basically just means I don't care",
    "start": "1195799",
    "end": "1201559"
  },
  {
    "text": "what Builder what build base image I'm starting from just do this stuff on top of that",
    "start": "1201559",
    "end": "1207380"
  },
  {
    "text": "right but in the case of a wrong Docker file we can actually use that from statement to switch to an entirely",
    "start": "1207380",
    "end": "1214460"
  },
  {
    "text": "different base image right and this is actually quite powerful because you could imagine having sort of a fleet of Run images",
    "start": "1214460",
    "end": "1222740"
  },
  {
    "text": "that are available each one might be targeted to a particular language family and so you can keep those run images",
    "start": "1222740",
    "end": "1229220"
  },
  {
    "text": "again very lean with only the dependencies that are needed",
    "start": "1229220",
    "end": "1234399"
  },
  {
    "text": "so to kind of explain how this all fits together we need to go into a little bit",
    "start": "1235820",
    "end": "1241220"
  },
  {
    "text": "more detail about what actually happens during a build packs build and I want to",
    "start": "1241220",
    "end": "1246500"
  },
  {
    "text": "emphasize at this point that not every user or even most users of",
    "start": "1246500",
    "end": "1251600"
  },
  {
    "text": "build packs need to understand the process at this level of detail right we want to keep the app developer",
    "start": "1251600",
    "end": "1257600"
  },
  {
    "text": "experience as simple as pack build my app right but as an operator you might",
    "start": "1257600",
    "end": "1264020"
  },
  {
    "text": "need to know a little bit more detail so this is how we use Docker files as part of a CNB build we start with our",
    "start": "1264020",
    "end": "1271640"
  },
  {
    "text": "application Source directory we put it through a process called detect where",
    "start": "1271640",
    "end": "1277580"
  },
  {
    "text": "each of the build packs and the extensions get a chance to look at the source code and determine if they're",
    "start": "1277580",
    "end": "1282679"
  },
  {
    "text": "actually needed during the build right and then we also generate any Docker",
    "start": "1282679",
    "end": "1287900"
  },
  {
    "text": "files that might be necessary as part of that step then we branch in our flow right we",
    "start": "1287900",
    "end": "1295760"
  },
  {
    "text": "apply the build Docker files to the build time base image and then we run the build packs right so",
    "start": "1295760",
    "end": "1302539"
  },
  {
    "text": "at this point the build pack that needs to use Curl is going to find curl installed",
    "start": "1302539",
    "end": "1308659"
  },
  {
    "text": "at the same time we apply any of the Run Docker files to the runtime base image",
    "start": "1308659",
    "end": "1314900"
  },
  {
    "text": "and we take the output extended run image and that becomes the base of our",
    "start": "1314900",
    "end": "1320960"
  },
  {
    "text": "final application image so you can see it comes together with this extended run image and the dependency layers that the",
    "start": "1320960",
    "end": "1326539"
  },
  {
    "text": "build packs provided to make the final image",
    "start": "1326539",
    "end": "1331539"
  },
  {
    "text": "so um at this point as an app developer you might be thinking about all the things",
    "start": "1333320",
    "end": "1340039"
  },
  {
    "text": "that you can do with a Docker file right and you could even imagine providing a",
    "start": "1340039",
    "end": "1345440"
  },
  {
    "text": "Docker file at the root of your Source directory with all kinds of things that you want to add to your application as",
    "start": "1345440",
    "end": "1351620"
  },
  {
    "text": "part of the build process right as a platform operator",
    "start": "1351620",
    "end": "1356780"
  },
  {
    "text": "you might be a little worried about enabling something like that right you can you could write an extension that",
    "start": "1356780",
    "end": "1363320"
  },
  {
    "text": "does that but more likely you're going to want to have some additional control",
    "start": "1363320",
    "end": "1369500"
  },
  {
    "text": "over what actually gets installed as part of this process so we've given an example here of an",
    "start": "1369500",
    "end": "1376100"
  },
  {
    "text": "extension right it's just a shell script right and build packs could also be as",
    "start": "1376100",
    "end": "1381620"
  },
  {
    "text": "simple as a shell um it's given an output directory where it's expected to write files and here it",
    "start": "1381620",
    "end": "1389539"
  },
  {
    "text": "just writes out that run.docker file that does the curl install so this is a",
    "start": "1389539",
    "end": "1394940"
  },
  {
    "text": "really simple example but you can imagine um something more complicated right you",
    "start": "1394940",
    "end": "1400580"
  },
  {
    "text": "have a list of approved packages ones that are vetted and trusted by your organization and you you know detect",
    "start": "1400580",
    "end": "1407780"
  },
  {
    "text": "whether the application requests any of those and only install the ones that you've already pre-approved so you still",
    "start": "1407780",
    "end": "1414320"
  },
  {
    "text": "as a platform operator you still retain total control over what goes into your build",
    "start": "1414320",
    "end": "1421299"
  },
  {
    "text": "so let's go back to our example of the pack build and all of the nice things",
    "start": "1423559",
    "end": "1428780"
  },
  {
    "text": "that we say come along with using build packs right the small output image the",
    "start": "1428780",
    "end": "1434900"
  },
  {
    "text": "s-bomb reproducible build but some of the things might not be available if you're using",
    "start": "1434900",
    "end": "1441740"
  },
  {
    "text": "Docker files right in particular some of us may be familiar with the limitations of caching with Docker files",
    "start": "1441740",
    "end": "1448960"
  },
  {
    "text": "the rootless build right like that's that's gone out the window and then if",
    "start": "1448960",
    "end": "1454520"
  },
  {
    "text": "you're familiar with the rebasable feature of build packs that's something that may not be available anymore right",
    "start": "1454520",
    "end": "1460480"
  },
  {
    "text": "dockerfile provided layers might not be safe to rebase so we do view this feature as something",
    "start": "1460480",
    "end": "1468440"
  },
  {
    "text": "to be used you know carefully right it's an escape hatch but it's something that",
    "start": "1468440",
    "end": "1473840"
  },
  {
    "text": "we hope will help people kind of surmount the barrier of those first",
    "start": "1473840",
    "end": "1480020"
  },
  {
    "text": "builds and could even be used as a way to iteratively improve your build process",
    "start": "1480020",
    "end": "1487000"
  },
  {
    "text": "so finally I think you already know the answer to this but can you write your own build pack",
    "start": "1489200",
    "end": "1496539"
  },
  {
    "text": "yes you can right so again CNB the project we provide the specification and",
    "start": "1496640",
    "end": "1502580"
  },
  {
    "text": "the tooling but we look to our community to provide the build packs and there's some really great providers which we'll",
    "start": "1502580",
    "end": "1509000"
  },
  {
    "text": "talk about in the next slide but yes you can write your own build pack and you can develop it in any language it can be",
    "start": "1509000",
    "end": "1515720"
  },
  {
    "text": "as simple as the shell script that we saw on the previous slide or we recommend writing in go we're go",
    "start": "1515720",
    "end": "1523460"
  },
  {
    "text": "developers and there's some great tooling that you can take advantage of uh we do have a build pack author guide",
    "start": "1523460",
    "end": "1530360"
  },
  {
    "text": "and previous talks that go into much more detail about what is a build pack expected to do how does it communicate",
    "start": "1530360",
    "end": "1537020"
  },
  {
    "text": "with the CNB tooling um and and we recommend that you check those out or come ask us because we're",
    "start": "1537020",
    "end": "1543679"
  },
  {
    "text": "always happy to talk about how build Packs work so finally just to summarize what we saw",
    "start": "1543679",
    "end": "1550340"
  },
  {
    "text": "today Aiden gave us a wonderful demo of pack build a multi-language mono repo so you can",
    "start": "1550340",
    "end": "1557419"
  },
  {
    "text": "really see how powerful build packs are and the nice features that they offer but at the same time to customize your",
    "start": "1557419",
    "end": "1564860"
  },
  {
    "text": "build you can go from something as simple as providing an environment variable or remixing the build order to",
    "start": "1564860",
    "end": "1572659"
  },
  {
    "text": "writing your own very small simple inline build pack to the more complex",
    "start": "1572659",
    "end": "1577880"
  },
  {
    "text": "Docker file extensions and writing your own build pack",
    "start": "1577880",
    "end": "1583120"
  },
  {
    "text": "so again just to talk about the ecosystem there are a number of companies and organizations providing",
    "start": "1584539",
    "end": "1591700"
  },
  {
    "text": "platforms build packs or both and you could be one of them we are an",
    "start": "1591700",
    "end": "1599059"
  },
  {
    "text": "open source project we love to talk to contributors we love to hear from users and hear your feedback we are in the",
    "start": "1599059",
    "end": "1606559"
  },
  {
    "text": "project Pavilion we have this lovely swag here so please come by and talk to",
    "start": "1606559",
    "end": "1612020"
  },
  {
    "text": "us and thank you [Applause]",
    "start": "1612020",
    "end": "1621020"
  },
  {
    "text": "fantastic so we have kind of five minutes for questions if there are any questions in the audience",
    "start": "1621020",
    "end": "1627260"
  },
  {
    "text": "gentlemen there in the blue oh fantastic",
    "start": "1627260",
    "end": "1633039"
  },
  {
    "text": "oops all right so my question is mainly",
    "start": "1633380",
    "end": "1638840"
  },
  {
    "text": "because my experience with Java native growl image buildbacks",
    "start": "1638840",
    "end": "1644360"
  },
  {
    "text": "um is it normal that a build pack downloads over gigabytes of compilers and and",
    "start": "1644360",
    "end": "1651440"
  },
  {
    "text": "libraries and everything every time you build an image depends",
    "start": "1651440",
    "end": "1658299"
  },
  {
    "text": "um it really does depend um I mean I don't have a huge amount of",
    "start": "1658400",
    "end": "1663860"
  },
  {
    "text": "experience with the piquetto Java build packs but I do know that they will have",
    "start": "1663860",
    "end": "1670400"
  },
  {
    "text": "um they'll point to a jvm which they'll need to pull down and extract then",
    "start": "1670400",
    "end": "1675440"
  },
  {
    "text": "they'll resolve your if you're using something like Maven they'll resign resolve your Maven dependencies and",
    "start": "1675440",
    "end": "1680600"
  },
  {
    "text": "resolving Maven dependencies isn't yeah I mean it's just a maven problem it can take a lot of time to resolve now having",
    "start": "1680600",
    "end": "1688460"
  },
  {
    "text": "said that depending on how you're doing your caching then the layers can be",
    "start": "1688460",
    "end": "1693620"
  },
  {
    "text": "cached for the subsequent builds and by default Pac should cache those",
    "start": "1693620",
    "end": "1698840"
  },
  {
    "text": "layers for subsequent builds if it's got enough space so the subsequent builds should be cheap",
    "start": "1698840",
    "end": "1705200"
  },
  {
    "text": "but it's the same with any kind of process when you're building a container if I was building a Java container on a",
    "start": "1705200",
    "end": "1712820"
  },
  {
    "text": "Rel base image I'd have to pull down the the jdk RPM and install that and",
    "start": "1712820",
    "end": "1719240"
  },
  {
    "text": "I mean the the jdk runtime is just the size that it is similar to the fact that",
    "start": "1719240",
    "end": "1724760"
  },
  {
    "text": "my node.js simple example that node.js1 times about 250 Megs which is a huge",
    "start": "1724760",
    "end": "1730520"
  },
  {
    "text": "amount right and it's then only cached after a successful build of the complete thing",
    "start": "1730520",
    "end": "1736220"
  },
  {
    "text": "or also the subsequent steps please somebody who knows answer yes we",
    "start": "1736220",
    "end": "1743000"
  },
  {
    "text": "we write the cache after we export the image so if your build fails that's that's too bad but",
    "start": "1743000",
    "end": "1750440"
  },
  {
    "text": "um we do offer I mean depending on the platform that you're using like the pack tool for example offers support for",
    "start": "1750440",
    "end": "1756380"
  },
  {
    "text": "arbitrary volume mounts so you can mount in a local cache but we kind of put red",
    "start": "1756380",
    "end": "1761539"
  },
  {
    "text": "flags around that to say you know really be sure you know what you're doing here because",
    "start": "1761539",
    "end": "1767679"
  },
  {
    "text": "can introduce problems the interesting thing about Java in particular is that the spring boot tooling itself uses a",
    "start": "1767840",
    "end": "1774740"
  },
  {
    "text": "core component of build packs the life cycle to produce an image so you don't actually even have to go as far as",
    "start": "1774740",
    "end": "1780799"
  },
  {
    "text": "running our pack tool the spring boot tooling hat uses lifecycle the core component build packs internally just",
    "start": "1780799",
    "end": "1787580"
  },
  {
    "text": "spit out an output image so if you're using spring you can take that router right yeah",
    "start": "1787580",
    "end": "1793700"
  },
  {
    "text": "thank you cool um I see a question there um on the end of that row it was",
    "start": "1793700",
    "end": "1799580"
  },
  {
    "text": "gentleman the president sorry I can thanks regarding the docker file extension I'm just unsure how do I feed",
    "start": "1799580",
    "end": "1807020"
  },
  {
    "text": "that Docker file into the build process so is build.docker file a set name or how does that work",
    "start": "1807020",
    "end": "1813940"
  },
  {
    "text": "yeah so the docker file uh it's the responsibility of the extension which you can think of as a kind of like a",
    "start": "1815899",
    "end": "1822740"
  },
  {
    "text": "build pack it's the responsibility of that component to put it where the CNB life cycle expects to find it so you can",
    "start": "1822740",
    "end": "1830899"
  },
  {
    "text": "write an extension that says I'm just going to look in the application Source directory and if I see a build.docker",
    "start": "1830899",
    "end": "1836779"
  },
  {
    "text": "file there copy it to the output directory right but we have that the extension as that intermediary entity to",
    "start": "1836779",
    "end": "1845779"
  },
  {
    "text": "kind of inspect the docker file and make sure that you're only doing things that you approve of in that step",
    "start": "1845779",
    "end": "1853159"
  },
  {
    "text": "okay thank you cool uh Nancy gentleman here in the Reds",
    "start": "1853159",
    "end": "1859520"
  },
  {
    "text": "I think is hello I have a more general question I'm",
    "start": "1859520",
    "end": "1866899"
  },
  {
    "text": "pretty new to build packs and I was wondering where should I um",
    "start": "1866899",
    "end": "1873440"
  },
  {
    "text": "put buildbacks as a tool and what is",
    "start": "1873440",
    "end": "1878659"
  },
  {
    "text": "buildbacks are responsible for I mean we are designing a CHD Pipeline and we are",
    "start": "1878659",
    "end": "1885320"
  },
  {
    "text": "migrating to a new stack and I was wondering if if buildbacks is",
    "start": "1885320",
    "end": "1890779"
  },
  {
    "text": "a tool I can customize to add some additional actions actions besides a",
    "start": "1890779",
    "end": "1899480"
  },
  {
    "text": "building let's say running tests static code analysis or should I treat it just",
    "start": "1899480",
    "end": "1907779"
  },
  {
    "text": "as a a narrow responsibility block and just",
    "start": "1907779",
    "end": "1914179"
  },
  {
    "text": "put you know testing static code analysis all the other stuff as well so",
    "start": "1914179",
    "end": "1919279"
  },
  {
    "text": "if you could clear it up now it's a really good question um and it's come up a bunch of times",
    "start": "1919279",
    "end": "1924380"
  },
  {
    "text": "what exactly is the responsibility of pack build or um in its narrowest conception we take",
    "start": "1924380",
    "end": "1932059"
  },
  {
    "text": "your application source code we turn it into an image what you do with that image is up to you afterwards you can",
    "start": "1932059",
    "end": "1938299"
  },
  {
    "text": "then use that image maybe to run tests as part of a subsequent CI pipeline step or you can go ahead and deploy that",
    "start": "1938299",
    "end": "1944720"
  },
  {
    "text": "image if you want to now the questions come up so often that there is a",
    "start": "1944720",
    "end": "1949820"
  },
  {
    "text": "proposal now that we kind of delineate execution environments and make the bill",
    "start": "1949820",
    "end": "1956000"
  },
  {
    "text": "packs process a bit more amenable to building a test focused image and then a",
    "start": "1956000",
    "end": "1961640"
  },
  {
    "text": "subsequent production focused image so it's something that we have had requests for and that we're working on okay so I",
    "start": "1961640",
    "end": "1969020"
  },
  {
    "text": "understand this is just a dedicated stage of building and that's it and if I",
    "start": "1969020",
    "end": "1974600"
  },
  {
    "text": "want to do something before uh build packs or after it's uh just being bit",
    "start": "1974600",
    "end": "1980419"
  },
  {
    "text": "elsewhere right if I go back to what Natalie said earlier the kind of key Point here is we want to build images",
    "start": "1980419",
    "end": "1987200"
  },
  {
    "text": "from our application source code what I often don't want is to give tens",
    "start": "1987200",
    "end": "1993620"
  },
  {
    "text": "or hundreds of developer teams control over that process because they just have too much else to",
    "start": "1993620",
    "end": "1999440"
  },
  {
    "text": "worry about and when there's a a need to update a python runtime or when there's",
    "start": "1999440",
    "end": "2004659"
  },
  {
    "text": "a need to update a base image they often don't have the the capacity to deal with that so if I can take a lot of that",
    "start": "2004659",
    "end": "2011260"
  },
  {
    "text": "policy and pull its more centrally into a builder with some environment",
    "start": "2011260",
    "end": "2016899"
  },
  {
    "text": "variables preset in it then if I run that pack tool as part of a CI process",
    "start": "2016899",
    "end": "2022779"
  },
  {
    "text": "I'm going to be able to control the output images for those Dev teams and let them as Natalie was saying focus on",
    "start": "2022779",
    "end": "2029200"
  },
  {
    "text": "actual development rather than maybe more of the devops that they're less comfortable with",
    "start": "2029200",
    "end": "2034600"
  },
  {
    "text": "right thanks for getting this up",
    "start": "2034600",
    "end": "2038640"
  },
  {
    "text": "so um you said for default um build kit build packs are rootless",
    "start": "2045640",
    "end": "2053618"
  },
  {
    "text": "does this mean that I can also run it inside a container like if I have for",
    "start": "2053619",
    "end": "2059320"
  },
  {
    "text": "example a gitlab kubernetes runner is this possible",
    "start": "2059320",
    "end": "2064480"
  },
  {
    "text": "yeah I mean one of the constraints again I'm taking Natalie's words right from",
    "start": "2064480",
    "end": "2070000"
  },
  {
    "text": "her mouth yep uh Bill pecks are a component of the",
    "start": "2070000",
    "end": "2076720"
  },
  {
    "text": "auto devops feature of gitlab so uh we know they work in that environment",
    "start": "2076720",
    "end": "2083200"
  },
  {
    "text": "but you've got to answer your question you know build packs run rootless and that enables uh them to run in a variety",
    "start": "2083200",
    "end": "2091060"
  },
  {
    "text": "of environments that require that okay but when I now think",
    "start": "2091060",
    "end": "2096398"
  },
  {
    "text": "of any extension with a Docker file then I would lose this feature do you have plans to maybe integrate something like",
    "start": "2096399",
    "end": "2103660"
  },
  {
    "text": "carnico so that I'm still able to build it with a Docker file in a container",
    "start": "2103660",
    "end": "2110440"
  },
  {
    "text": "environment yes I I probably should have mentioned that when I went over the flow but um we",
    "start": "2110440",
    "end": "2116980"
  },
  {
    "text": "actually used kaniko to apply the docker files to the build time and the runtime base image so that under the hood that's",
    "start": "2116980",
    "end": "2122920"
  },
  {
    "text": "how we generate the docker file layers um we only say you know requires root if",
    "start": "2122920",
    "end": "2128920"
  },
  {
    "text": "the commands you're running actually require root",
    "start": "2128920",
    "end": "2133500"
  },
  {
    "text": "thank you I think we probably have time for one more question but again if people want to go into more",
    "start": "2134140",
    "end": "2140560"
  },
  {
    "text": "detail we have the booth so come on over and",
    "start": "2140560",
    "end": "2145079"
  },
  {
    "text": "approach you build images with a Docker file and so on was intersection can we",
    "start": "2149820",
    "end": "2155740"
  },
  {
    "text": "use build packs inside baseball it's any kind of integration there",
    "start": "2155740",
    "end": "2161859"
  },
  {
    "text": "I am not personally aware of any integration with bazel it wouldn't",
    "start": "2161859",
    "end": "2168820"
  },
  {
    "text": "Google use build packs in GCR and in Google Cloud run um so I know they provide a builder and",
    "start": "2168820",
    "end": "2176560"
  },
  {
    "text": "they provide build packs um I I don't know much about bazel I'm sorry thank you",
    "start": "2176560",
    "end": "2183960"
  },
  {
    "text": "cool um I think we've run out of time our friend at the back is furiously waving",
    "start": "2184540",
    "end": "2190000"
  },
  {
    "text": "at us and I don't want to get manhandled off a stage by somebody so um thank you",
    "start": "2190000",
    "end": "2195040"
  },
  {
    "text": "very much um our boots from The Pavilion",
    "start": "2195040",
    "end": "2199020"
  }
]