[
  {
    "text": "so uh the talk is about resuming pots after sport instance shutdown down the",
    "start": "199",
    "end": "5640"
  },
  {
    "text": "with the cheeky title of the party must go on um so who am I I'm muaf I'm an",
    "start": "5640",
    "end": "12599"
  },
  {
    "text": "engineer at QA wolf and a Meritus maintainer at crossplane which is a cncf project and I've been involved in cncf",
    "start": "12599",
    "end": "19760"
  },
  {
    "text": "commit since about like 2019 um so I work at quolf what what is",
    "start": "19760",
    "end": "26560"
  },
  {
    "text": "quolf quolf has a platform that runs all these QA tests browser tests and a group",
    "start": "26560",
    "end": "34399"
  },
  {
    "text": "of Engineers in-house QA Engineers that writes and maintains those tests together we make up the qaol team where",
    "start": "34399",
    "end": "44079"
  },
  {
    "text": "we can provide you High coverage with zero effort effectively company comes to",
    "start": "44079",
    "end": "49840"
  },
  {
    "text": "qu evolve hey we want our web apps to be tested and we write the test we maintain",
    "start": "49840",
    "end": "55000"
  },
  {
    "text": "them we schedule them uh we just tell you about the bugs um",
    "start": "55000",
    "end": "60879"
  },
  {
    "text": "and it's the high velocity and that gives you like you know confidence to to",
    "start": "60879",
    "end": "66119"
  },
  {
    "text": "ship much more frequently so this is an example um",
    "start": "66119",
    "end": "72759"
  },
  {
    "text": "playground uh on the left you see that we use like playright test usual browser",
    "start": "72759",
    "end": "78759"
  },
  {
    "text": "test code and on the right you're you're seeing the logs and the the browser page",
    "start": "78759",
    "end": "84159"
  },
  {
    "text": "um so in order to do that at our scale we are running over 2 million test",
    "start": "84159",
    "end": "90560"
  },
  {
    "text": "every month uh that means hundreds of nodes um so in order to in order for",
    "start": "90560",
    "end": "97320"
  },
  {
    "text": "this to be affordable we're using spot instances in Google Cloud which gives",
    "start": "97320",
    "end": "103280"
  },
  {
    "text": "you like you know about 40 to 60% cost reduction um but the main thing with",
    "start": "103280",
    "end": "109799"
  },
  {
    "text": "spot instances is that they fail randomly they just restart and like you know Google like gcp tells you like pick",
    "start": "109799",
    "end": "117320"
  },
  {
    "text": "up and go in 30 seconds effectively so because of that up to 5% of our runs",
    "start": "117320",
    "end": "124439"
  },
  {
    "text": "uh failed because of these uh shutdowns um and 5% is a a noticeable",
    "start": "124439",
    "end": "131640"
  },
  {
    "text": "especially because it doesn't use customers so almost every customer gets the 5% and especially the long running",
    "start": "131640",
    "end": "137680"
  },
  {
    "text": "jobs are more exposed uh to these failures so there are like you know",
    "start": "137680",
    "end": "144160"
  },
  {
    "text": "there were couple options about how to overcome this one is well do not use",
    "start": "144160",
    "end": "149360"
  },
  {
    "text": "support instance which was not a fully an option but which is something we partly did by",
    "start": "149360",
    "end": "154840"
  },
  {
    "text": "retrying on standard nodes so if a test fails for the first time uh then in the",
    "start": "154840",
    "end": "160840"
  },
  {
    "text": "second try we're scheduling it to a standard Noe so that that customer uh sees less symptoms of uh of that",
    "start": "160840",
    "end": "169239"
  },
  {
    "text": "failure and the second option was um well let's run the test in VMS using",
    "start": "169239",
    "end": "174920"
  },
  {
    "text": "like firecracker for example so that we're still in kubernetes but use a micro VM which has snapshot and like",
    "start": "174920",
    "end": "181760"
  },
  {
    "text": "know restore capabilities however that required nested virtualization to be enabled or",
    "start": "181760",
    "end": "188280"
  },
  {
    "text": "the cluster nodes to be bare metals and neither of them are available in GK and quolf is fully on gcp using GK",
    "start": "188280",
    "end": "197360"
  },
  {
    "text": "clusters um and in addition like that would introduce some friction with using the cutter containers so like you know",
    "start": "197360",
    "end": "204080"
  },
  {
    "text": "you would get away from like standard Upstream kubernetes stuff which which may uh increase the bug surface so the",
    "start": "204080",
    "end": "212280"
  },
  {
    "text": "third option was using a tool called checkpoint restoring user space cre to",
    "start": "212280",
    "end": "218000"
  },
  {
    "text": "migrate the process tree not the whole VM but the process tree that we care",
    "start": "218000",
    "end": "223720"
  },
  {
    "text": "about um and cre is is is not like a new project it's it's it's mature and like",
    "start": "223720",
    "end": "229879"
  },
  {
    "text": "you know I think it's over like know 10 years and it's got like a lot of Linux Canal changes in to make it work um so",
    "start": "229879",
    "end": "239040"
  },
  {
    "text": "with cre there's also some effort already going on in kuber Upstream kubernetes that is focused on Forensic",
    "start": "239040",
    "end": "246360"
  },
  {
    "text": "analysis you if you look up you you're going to see like some blog post where",
    "start": "246360",
    "end": "251480"
  },
  {
    "text": "you can use a cubet alpha API to take a checkpoint off a container and then",
    "start": "251480",
    "end": "258079"
  },
  {
    "text": "inspect it for like you know forensic analysis um but it doesn't support",
    "start": "258079",
    "end": "263400"
  },
  {
    "text": "restore yet um so one option was that which is what we went for initially uh",
    "start": "263400",
    "end": "270360"
  },
  {
    "text": "and the second is in container execution of creu when the node shutdown is received and that that doesn't use any",
    "start": "270360",
    "end": "277680"
  },
  {
    "text": "of like culate API it just does everything inside a container which requires elevat",
    "start": "277680",
    "end": "283720"
  },
  {
    "text": "privileges um so to explain that let's let's look into how cre",
    "start": "283720",
    "end": "288919"
  },
  {
    "text": "Works um yeah in a minute so the first",
    "start": "288919",
    "end": "294120"
  },
  {
    "text": "option that we went with cre supporting Upstream kubernetes um so we started on that path and right",
    "start": "294120",
    "end": "302240"
  },
  {
    "text": "now the support is uh run C at low slay on the right you you can see what what",
    "start": "302240",
    "end": "307880"
  },
  {
    "text": "it takes to start a container in kubernetes runy can take a checkpoint and restore today using",
    "start": "307880",
    "end": "314320"
  },
  {
    "text": "creu um and container D and cryo also can call that RPC of runy to take that",
    "start": "314320",
    "end": "321199"
  },
  {
    "text": "checkpoint andore as well and cuet in even if in Alpha support taking that",
    "start": "321199",
    "end": "327960"
  },
  {
    "text": "checkpoint but it doesn't have have an endpoint to restore it yet so the main",
    "start": "327960",
    "end": "333479"
  },
  {
    "text": "reason that this has had become blocker for us was that container D did not have",
    "start": "333479",
    "end": "340600"
  },
  {
    "text": "the support for cuet API wiring up uh and GK uses container D um we start we",
    "start": "340600",
    "end": "349000"
  },
  {
    "text": "looked into like setting up a cryo cluster separately uh but that just like you know meant a lot of like effort to",
    "start": "349000",
    "end": "356360"
  },
  {
    "text": "maintain that on scale with 2 Millions plus uh test however supporting container D was",
    "start": "356360",
    "end": "362759"
  },
  {
    "text": "merged two weeks ago of course it's going to take time like to be released in container D and then uh be part of uh",
    "start": "362759",
    "end": "370919"
  },
  {
    "text": "gke but yeah that's kind of like you know uh one layer uh handled as",
    "start": "370919",
    "end": "376720"
  },
  {
    "text": "well and the next uh thing was the storage medium support so when you take",
    "start": "376720",
    "end": "382880"
  },
  {
    "text": "a checkpoint for forensic analysis it writes that to the host path of the node",
    "start": "382880",
    "end": "388440"
  },
  {
    "text": "which also doesn't work for because we are losing the node right where we want another node so we have to like you know",
    "start": "388440",
    "end": "395120"
  },
  {
    "text": "copy manually ideally we would like it to be like you know to be written to persistent volume or a bucket mounted as",
    "start": "395120",
    "end": "402199"
  },
  {
    "text": "volume um an API server doesn't know anything about checkpoint earning store",
    "start": "402199",
    "end": "407880"
  },
  {
    "text": "so there's some like you know progress here uh being made but it did not like",
    "start": "407880",
    "end": "413199"
  },
  {
    "text": "you know work for us uh without like you know heavy lifting of like you know and",
    "start": "413199",
    "end": "418840"
  },
  {
    "text": "diverging from GK and you can follow the progress with uh in cap",
    "start": "418840",
    "end": "426000"
  },
  {
    "text": "2008 so we went with effectively it started as PC and then like you know",
    "start": "426000",
    "end": "431080"
  },
  {
    "text": "turned into a real thing the second option in container execution uh which requires elevated",
    "start": "431080",
    "end": "437080"
  },
  {
    "text": "privileges so in order to understand how this works or why it needs elevated privileges we",
    "start": "437080",
    "end": "443280"
  },
  {
    "text": "need to understand how cre works so what Creo does it first infects the process",
    "start": "443280",
    "end": "449960"
  },
  {
    "text": "it effectively uses pet trays and freezes the process this is very similar to in IDs where you put a break break",
    "start": "449960",
    "end": "457080"
  },
  {
    "text": "point and it stops the process U so it does that by using pet tray and because it needs to inject",
    "start": "457080",
    "end": "464680"
  },
  {
    "text": "parasite code that that's why it requires like more capabilities like close to root capabilities to do",
    "start": "464680",
    "end": "471000"
  },
  {
    "text": "that and then that parasite code dumps um all the memory file descriptor open",
    "start": "471000",
    "end": "477879"
  },
  {
    "text": "connections a lot of things uh surrounding the process not everything but lot quite a few of things that that",
    "start": "477879",
    "end": "485360"
  },
  {
    "text": "are required to restore the process and that may include sensitive data as well",
    "start": "485360",
    "end": "490759"
  },
  {
    "text": "for example if you have a secret mounted in your process reading it that is going to be included in the memory so it's uh",
    "start": "490759",
    "end": "497759"
  },
  {
    "text": "it's quite a uh sensitive data and then in restore uh by the way this is like at",
    "start": "497759",
    "end": "503759"
  },
  {
    "text": "a very high level there are lots of details that I'm skipping over but just to give you an idea of like you know",
    "start": "503759",
    "end": "509120"
  },
  {
    "text": "what is doing um and during restore It prepares uh it lows like you know all",
    "start": "509120",
    "end": "514399"
  },
  {
    "text": "these files and pre prepares the environment and it creates name spaces which we will get to um to be able to",
    "start": "514399",
    "end": "522039"
  },
  {
    "text": "recover the same processes with the same PS and then it creates the processes uh",
    "start": "522039",
    "end": "527839"
  },
  {
    "text": "one by one the tree and Maps them to those memory and then uh takes itself",
    "start": "527839",
    "end": "533279"
  },
  {
    "text": "out from the from the process so it's a quite a heavy lifting that it does uh um",
    "start": "533279",
    "end": "539959"
  },
  {
    "text": "and it required like you know some of like Linux kernel changes which are all in in Linux 6 uh this that's what we",
    "start": "539959",
    "end": "547040"
  },
  {
    "text": "we're using but that's kind of like you know the general idea of how cre",
    "start": "547040",
    "end": "554240"
  },
  {
    "text": "Works um so this is like you know another a a more complex example we we",
    "start": "554240",
    "end": "561279"
  },
  {
    "text": "we saw like you know what happens in a single process and that's a process three which is usually the case with",
    "start": "561279",
    "end": "566880"
  },
  {
    "text": "like you know most of the workloads um so the thing with cre is that it takes",
    "start": "566880",
    "end": "572440"
  },
  {
    "text": "care of a lot of things but there needs to be a point where it stops like you",
    "start": "572440",
    "end": "578079"
  },
  {
    "text": "know doing things for you because they become so like you know process specific for example P10 here it has a log file",
    "start": "578079",
    "end": "585839"
  },
  {
    "text": "open right um so when you take checkpoint of this three and you restore",
    "start": "585839",
    "end": "591480"
  },
  {
    "text": "it and that log file doesn't exist it fails because it has an open file",
    "start": "591480",
    "end": "596760"
  },
  {
    "text": "descriptor um and it's the process because it's frozen exactly at the same place it doesn't know whether file",
    "start": "596760",
    "end": "602959"
  },
  {
    "text": "existed or it doesn't have the knowledge to recreate it unless it has like specific logic inside of",
    "start": "602959",
    "end": "609839"
  },
  {
    "text": "it but at the same time creu doesn't take copy of that log file because it",
    "start": "609839",
    "end": "615600"
  },
  {
    "text": "just doesn't know about it or even if it did it could be like you know made available by the user it could be like",
    "start": "615600",
    "end": "621000"
  },
  {
    "text": "10 gig of file that are that is part of the like volume that are already that is",
    "start": "621000",
    "end": "626440"
  },
  {
    "text": "already in place so it just like you know doesn't know whether it's the generated f file it's a file that are like system file for example a library",
    "start": "626440",
    "end": "633440"
  },
  {
    "text": "file that is open by the process because it's such a low level it just doesn't have those uh details so when you",
    "start": "633440",
    "end": "640760"
  },
  {
    "text": "restore a process you need to make sure these surrounding uh resources are in",
    "start": "640760",
    "end": "646560"
  },
  {
    "text": "place like for example log file you have to copy that um or create another empty",
    "start": "646560",
    "end": "652399"
  },
  {
    "text": "file so that it continues from there and for example in the second one you cpid 12 is a graphical user interface",
    "start": "652399",
    "end": "660360"
  },
  {
    "text": "that uh talks to X11 which is a socket Linux socket that it sends the graphic",
    "start": "660360",
    "end": "667160"
  },
  {
    "text": "so with sockets for example every socket has like two end and both ends must be",
    "start": "667160",
    "end": "673200"
  },
  {
    "text": "in place for restoration to work because like you know remember the process doesn't know that we're taking the",
    "start": "673200",
    "end": "678760"
  },
  {
    "text": "checkpoint so it expects exactly the same exactly the same",
    "start": "678760",
    "end": "684360"
  },
  {
    "text": "state so and also the open TCP connections so to make this all like know more concrete let's let's do like a",
    "start": "684360",
    "end": "691200"
  },
  {
    "text": "simple small demo of creu uh in a Linux",
    "start": "691200",
    "end": "696839"
  },
  {
    "text": "environment and it's completely Linux so again you can't really do it in in in mecos at all so this is a uh Linux BM",
    "start": "697959",
    "end": "704519"
  },
  {
    "text": "that I have here so so here in this like first demo we",
    "start": "704519",
    "end": "712160"
  },
  {
    "text": "have a counter it just counts like one by one and then prints it P as well the",
    "start": "712160",
    "end": "719240"
  },
  {
    "text": "checkpoint folder is empty um so let's start this",
    "start": "719240",
    "end": "727320"
  },
  {
    "text": "process okay so every second it PR like you know 1 2 3 4 it has a p of 51",
    "start": "727320",
    "end": "734040"
  },
  {
    "text": "399 so I'm going to another tab I am going to dump this",
    "start": "734040",
    "end": "741880"
  },
  {
    "text": "process I need to know it's p ID I need to give this DJ which I will",
    "start": "741880",
    "end": "748959"
  },
  {
    "text": "get to in a second and then the directory to save all those image",
    "start": "748959",
    "end": "754720"
  },
  {
    "text": "files well it it needs pseudo permissions uh root",
    "start": "754720",
    "end": "762360"
  },
  {
    "text": "permissions okay it's done so count is a 35 and it",
    "start": "762360",
    "end": "767519"
  },
  {
    "text": "kills the process there's an option to leave it running but by default after uh",
    "start": "767519",
    "end": "773279"
  },
  {
    "text": "dumping it it kills it so if we look at here checkpoint",
    "start": "773279",
    "end": "779920"
  },
  {
    "text": "folder is populated with all these files about the process uh cre also comes with a tool",
    "start": "779920",
    "end": "786519"
  },
  {
    "text": "called cck that lets you inspect uh the",
    "start": "786519",
    "end": "791800"
  },
  {
    "text": "checkpoint for example um let's actually clear x. PS so these are the processes",
    "start": "791800",
    "end": "801240"
  },
  {
    "text": "included in the checkpoint and let's look at for example file descriptors that are open as you",
    "start": "801240",
    "end": "807800"
  },
  {
    "text": "can see there is the zero one two which are STD in STD out and stdr they're all",
    "start": "807800",
    "end": "812880"
  },
  {
    "text": "bound to TTY so this is the um checkpoint that we",
    "start": "812880",
    "end": "818839"
  },
  {
    "text": "have on thisk so we are going to restore",
    "start": "818839",
    "end": "824880"
  },
  {
    "text": "it when when restoring I don't need to give the P ID because it's in the",
    "start": "825800",
    "end": "831920"
  },
  {
    "text": "checkpoint restore also need to give the",
    "start": "833959",
    "end": "840519"
  },
  {
    "text": "J well yeah so it continues from the exact",
    "start": "840519",
    "end": "846600"
  },
  {
    "text": "same spot where it left here we left it at 35 and here we're continuing from",
    "start": "846600",
    "end": "853519"
  },
  {
    "text": "36 so this is like you know very simple Loop of like you know how cre works and",
    "start": "853519",
    "end": "859240"
  },
  {
    "text": "what it provides you which is quite nice",
    "start": "859240",
    "end": "865720"
  },
  {
    "text": "um so but we're not like you know know that was an example in a Linux VM in a",
    "start": "865720",
    "end": "872519"
  },
  {
    "text": "terminal but we're not running our jobs in a terminal it needs to be inside a container and that was the option that",
    "start": "872519",
    "end": "878440"
  },
  {
    "text": "we want with so our first goal is going to be running creu in container and",
    "start": "878440",
    "end": "884920"
  },
  {
    "text": "we're just going to go over like you know the problems that we faced when we tried to do that so the first problem is",
    "start": "884920",
    "end": "891519"
  },
  {
    "text": "the PID collusion problem when you start a process in a container it takes up the P id1 right",
    "start": "891519",
    "end": "899560"
  },
  {
    "text": "um and it may spawn like P2 and other processes and when you trigger cre dump",
    "start": "899560",
    "end": "906639"
  },
  {
    "text": "it takes the checkpoint of this processor and P has to stay the same so",
    "start": "906639",
    "end": "914519"
  },
  {
    "text": "when you restore K would start with pi has to start with P1 so P1 is taken so",
    "start": "914519",
    "end": "920880"
  },
  {
    "text": "it's not able to restore that in fact K rejects taking P1 uh process dump of",
    "start": "920880",
    "end": "927680"
  },
  {
    "text": "p1s as as far as I remember if you don't override it so there's this problem",
    "start": "927680",
    "end": "932800"
  },
  {
    "text": "which you can overcome by for example spining up some processes empty processes so that the first process",
    "start": "932800",
    "end": "939440"
  },
  {
    "text": "takes a like P5 and then when you restore it's available which is like you know",
    "start": "939440",
    "end": "945759"
  },
  {
    "text": "somewhat what we're going to do um so the next problem is that this",
    "start": "945759",
    "end": "952480"
  },
  {
    "text": "is um somewhat of a lesser known fact is that so you saw we had defile the",
    "start": "952480",
    "end": "959120"
  },
  {
    "text": "scriptors open for STD in out and error they they were all bound to TTY that's",
    "start": "959120",
    "end": "964839"
  },
  {
    "text": "what happens like when you run a process in in a terminal but when you run it in a container using runy it actually binds",
    "start": "964839",
    "end": "973399"
  },
  {
    "text": "them to STD into Devol and STD out and add two pipes this pipe is effectively",
    "start": "973399",
    "end": "980040"
  },
  {
    "text": "the vertical line that we use in terminal very similar to that but every pipe has a unique ID when it's assigned",
    "start": "980040",
    "end": "987079"
  },
  {
    "text": "so you take the checkpoint Point process says okay I'm writing like STD out and stdr to 287 and",
    "start": "987079",
    "end": "995240"
  },
  {
    "text": "458 but when you restore those pipes either need to be in place which like no",
    "start": "995240",
    "end": "1001079"
  },
  {
    "text": "IDs are randomly assigned and there needs to be like other end of the pair that listens to that ID but when you",
    "start": "1001079",
    "end": "1009000"
  },
  {
    "text": "start another container it starts with another pipe ID that is assigned by its",
    "start": "1009000",
    "end": "1014120"
  },
  {
    "text": "own on its own this is like you know I'm glossing over some of the like you know of the details here but these are like",
    "start": "1014120",
    "end": "1021000"
  },
  {
    "text": "you know the two like you know initially blocking problems for example in this case um if you restore a",
    "start": "1021000",
    "end": "1029558"
  },
  {
    "text": "process that doesn't write anything to STD out or stdr then that's fine it's",
    "start": "1029559",
    "end": "1035038"
  },
  {
    "text": "it's it's it runs well so to orchestrate that and like you know to to like bump the p and like you",
    "start": "1035039",
    "end": "1043640"
  },
  {
    "text": "know make sure the pipes are in place we we wrote an open source command wrapper that or Cas running cre it effectively",
    "start": "1043640",
    "end": "1050600"
  },
  {
    "text": "like prevents the environment for um taking the checkpoint and also during",
    "start": "1050600",
    "end": "1055640"
  },
  {
    "text": "restore it it it gives us room to like you know uh do all these preparations uh",
    "start": "1055640",
    "end": "1062000"
  },
  {
    "text": "to make sure it works inside a container for example the PID collusion",
    "start": "1062000",
    "end": "1067840"
  },
  {
    "text": "problem what it does is Creek start as P1 and it pushes the PID counter to a",
    "start": "1067840",
    "end": "1074400"
  },
  {
    "text": "very high number so that the process it starts starts like in a very high",
    "start": "1074400",
    "end": "1079520"
  },
  {
    "text": "PID uh there are like you know other ways to do this uh but like you know this has this",
    "start": "1079520",
    "end": "1086679"
  },
  {
    "text": "has been like you know uh working for the use cases so far um but what H what",
    "start": "1086679",
    "end": "1092320"
  },
  {
    "text": "happens is that the process that you give it starts with 90001 and you start creu this PID is not",
    "start": "1092320",
    "end": "1098880"
  },
  {
    "text": "really relevant and then when the stores cek scans the checkpoint folder if it",
    "start": "1098880",
    "end": "1104039"
  },
  {
    "text": "sees a checkpoint image it starts cre you",
    "start": "1104039",
    "end": "1109280"
  },
  {
    "text": "and then when cre restores obviously those like no high numbers are",
    "start": "1109280",
    "end": "1114760"
  },
  {
    "text": "available there might be some other processes along with cek uh that are run",
    "start": "1114760",
    "end": "1120200"
  },
  {
    "text": "because CRI doesn't require you to start with P1 so that's like you know you need to have the room in between for example",
    "start": "1120200",
    "end": "1126240"
  },
  {
    "text": "you can start like other logging processes or other stuff uh but you",
    "start": "1126240",
    "end": "1131640"
  },
  {
    "text": "shouldn't start like know 9,000 processes or you shouldn't start them after",
    "start": "1131640",
    "end": "1136799"
  },
  {
    "text": "Craig uh so that the pi of the restores uh process are not",
    "start": "1136799",
    "end": "1142840"
  },
  {
    "text": "taken and the TT and container so we said like these pipes have an ID and",
    "start": "1142840",
    "end": "1149520"
  },
  {
    "text": "like you know the other end must be listening um what criek does is that",
    "start": "1149520",
    "end": "1155280"
  },
  {
    "text": "when it takes the checkpoint and this is the same mechanism that run C do for its support Upstream support um for",
    "start": "1155280",
    "end": "1163520"
  },
  {
    "text": "restoring processes it takes note of those pipes in in a separate file in the",
    "start": "1163520",
    "end": "1168840"
  },
  {
    "text": "checkpoint directory um so that like it knows that",
    "start": "1168840",
    "end": "1174720"
  },
  {
    "text": "when it restores 287 and 458 should be bound to fd1 and two of",
    "start": "1174720",
    "end": "1182679"
  },
  {
    "text": "Creo so Creo has this uh inherit FD option inherit FD flag that you give a",
    "start": "1182679",
    "end": "1190400"
  },
  {
    "text": "file Des open file descriptor to cre and creu can tell the process hey this file",
    "start": "1190400",
    "end": "1195919"
  },
  {
    "text": "you have open you should write to this one so process still thinks that it rise to that file but it ends up in this in",
    "start": "1195919",
    "end": "1203120"
  },
  {
    "text": "those F open file descriptors so Creek orchestrates that like you know by",
    "start": "1203120",
    "end": "1208760"
  },
  {
    "text": "taking note of this pipe number and then like during restore it tells cre to make it inherit those uh fds instead of the",
    "start": "1208760",
    "end": "1217200"
  },
  {
    "text": "pipes and then it just forwards the stdr SDR to to run C so it all happens in the",
    "start": "1217200",
    "end": "1225520"
  },
  {
    "text": "container cool so these are these were like you know two like initial blockers to get it running on a container the the",
    "start": "1226440",
    "end": "1232679"
  },
  {
    "text": "simple uh counter so let's let's see that in",
    "start": "1232679",
    "end": "1237600"
  },
  {
    "text": "action um",
    "start": "1238200",
    "end": "1241880"
  },
  {
    "text": "well Z",
    "start": "1243760",
    "end": "1247159"
  },
  {
    "text": "one so uh we're building a theer file cre needs to be available installing cig",
    "start": "1249640",
    "end": "1256280"
  },
  {
    "text": "and copying the criek config which is is which has just like know image directory SL",
    "start": "1256280",
    "end": "1262480"
  },
  {
    "text": "checkpoint and then we're running the counter uh by giving it like arguments",
    "start": "1262480",
    "end": "1268440"
  },
  {
    "text": "by giving it as argument to create run so I built this image because I I'm",
    "start": "1268440",
    "end": "1274960"
  },
  {
    "text": "afraid of the Wi-Fi here so",
    "start": "1274960",
    "end": "1280480"
  },
  {
    "text": "uh we are going to run this so This privileged flag is is needed to write to",
    "start": "1280480",
    "end": "1285799"
  },
  {
    "text": "NS last pit and we're mounting the checkpoint folder um so let's see Ducker",
    "start": "1285799",
    "end": "1296760"
  },
  {
    "text": "logs um well actually we're in the wrong uh",
    "start": "1301200",
    "end": "1307480"
  },
  {
    "text": "directory okay okay empty",
    "start": "1308080",
    "end": "1313679"
  },
  {
    "text": "checkpoint so Ducker run this",
    "start": "1313679",
    "end": "1320919"
  },
  {
    "text": "spot logs z a okay so it started the",
    "start": "1321240",
    "end": "1326880"
  },
  {
    "text": "command with p0001 it it counts similarly and then it also set up a SE term Handler to take",
    "start": "1326880",
    "end": "1333600"
  },
  {
    "text": "the checkpoint so that you don't have to exact and like you know take the checkpoint this is the same mechanism we",
    "start": "1333600",
    "end": "1338640"
  },
  {
    "text": "use in the kubernetes but that we're we're going to see that kubernetes sends the SE term signal and you have like 15",
    "start": "1338640",
    "end": "1345200"
  },
  {
    "text": "15 seconds to shut down so what we we going to do is effectively stop it just like we would",
    "start": "1345200",
    "end": "1352039"
  },
  {
    "text": "expect from from kubernetes ster stop 0",
    "start": "1352039",
    "end": "1357600"
  },
  {
    "text": "A1 and receed the SE term checkpoint taken in 47",
    "start": "1358559",
    "end": "1363799"
  },
  {
    "text": "milliseconds so if you look at checkpoint folder now we see this",
    "start": "1363799",
    "end": "1369760"
  },
  {
    "text": "configuration y uh well yeah we need to own",
    "start": "1369760",
    "end": "1374880"
  },
  {
    "text": "that because it was taken from by root in the",
    "start": "1377440",
    "end": "1382760"
  },
  {
    "text": "container okay so you see this like you know we have the Unix file the scripted Trio first one is Devol sdn and the pipe",
    "start": "1386919",
    "end": "1394760"
  },
  {
    "text": "numbers um similarly if we go to checkpoint",
    "start": "1394760",
    "end": "1401760"
  },
  {
    "text": "create X FD you see these are the pipes uh that",
    "start": "1402520",
    "end": "1410200"
  },
  {
    "text": "are set by by ronc and we are going to overwrite them with uh with file descriptors of of Creo",
    "start": "1410200",
    "end": "1419039"
  },
  {
    "text": "so the checkpoint is in place so we're going to run the same um D run command",
    "start": "1419039",
    "end": "1425880"
  },
  {
    "text": "that we did and CRI is going to see that this directory has some checkpoint files so",
    "start": "1425880",
    "end": "1431960"
  },
  {
    "text": "we don't have to run cre restore it's going to run it for us and once it see that that it it will",
    "start": "1431960",
    "end": "1439159"
  },
  {
    "text": "try to restore",
    "start": "1439159",
    "end": "1442279"
  },
  {
    "text": "it oh we R it in the wrong uh",
    "start": "1445600",
    "end": "1450480"
  },
  {
    "text": "directory okay it it bounded the wrong directory so we need to run it here so",
    "start": "1460279",
    "end": "1465600"
  },
  {
    "text": "that the PWD is is correct PWD",
    "start": "1465600",
    "end": "1472000"
  },
  {
    "text": "here okay it found the checkpoint and it continues from exactly the same count uh",
    "start": "1476600",
    "end": "1484520"
  },
  {
    "text": "that it left earlier cool so we we're like you know",
    "start": "1484520",
    "end": "1491880"
  },
  {
    "text": "moving one by one up the layer first we did it in the terminal and now we did it in the",
    "start": "1491880",
    "end": "1497320"
  },
  {
    "text": "container and the the third one is like you know we were running in kubernetes and we're",
    "start": "1497320",
    "end": "1503279"
  },
  {
    "text": "running much more complex processes QA test that includes like browser and a whole thing so when you look at this",
    "start": "1503279",
    "end": "1510360"
  },
  {
    "text": "screen in order to make this work there's a pod running that includes a VNC server webify that converts that TCP",
    "start": "1510360",
    "end": "1519039"
  },
  {
    "text": "traffic to websocket nodejs play ride and the browser so it's quite the complex process three and there's lots",
    "start": "1519039",
    "end": "1526640"
  },
  {
    "text": "of like external resources that need to to be handled so some of the problems that we",
    "start": "1526640",
    "end": "1533000"
  },
  {
    "text": "ran into and we're going to uh we're going we will be going over is like you know runtime files into resources and",
    "start": "1533000",
    "end": "1540600"
  },
  {
    "text": "then like you know we're going to get to a point where we do the demo that it restores all of the all of those",
    "start": "1540600",
    "end": "1546880"
  },
  {
    "text": "processes so the first one is runtime files so as we said the restored process",
    "start": "1546880",
    "end": "1553799"
  },
  {
    "text": "doesn't have the knowledge that it's being restored so it expects the file to be in place that it had open and with",
    "start": "1553799",
    "end": "1561640"
  },
  {
    "text": "Ducker images we're bringing the all the files uh as part of the image but there are also runtime files that are",
    "start": "1561640",
    "end": "1568360"
  },
  {
    "text": "generated during like you know execution of the process for example webkit browser that we're going to see uh",
    "start": "1568360",
    "end": "1575559"
  },
  {
    "text": "creates root cache folder uh in run time and because it doesn't know it it's",
    "start": "1575559",
    "end": "1580799"
  },
  {
    "text": "being restored it effectively expects them and uh when it doesn't see them it",
    "start": "1580799",
    "end": "1586240"
  },
  {
    "text": "fails so what cek does is to copy those files to extra files so",
    "start": "1586240",
    "end": "1592200"
  },
  {
    "text": "this is the one of the problems that actually wouldn't happen in the ongoing",
    "start": "1592200",
    "end": "1597559"
  },
  {
    "text": "Upstream efforts because runc knows about those files because when you start a container it there's like image layers",
    "start": "1597559",
    "end": "1604360"
  },
  {
    "text": "and on top you have the writable layer that ransy is aware of so it can just take copy of the whole writable layer",
    "start": "1604360",
    "end": "1611320"
  },
  {
    "text": "and zip it but in our case we don't know because we're running in the container we don't even know it's it's an overlay",
    "start": "1611320",
    "end": "1617799"
  },
  {
    "text": "FS so we just have like user has to let us know where we have to inspect the",
    "start": "1617799",
    "end": "1622919"
  },
  {
    "text": "checkpoint for the paths but right now what we have is like you know user actually tells us which paths that we",
    "start": "1622919",
    "end": "1629919"
  },
  {
    "text": "want be available uh when we restore and there are like you know some",
    "start": "1629919",
    "end": "1635559"
  },
  {
    "text": "entry resources uh like sockets um that this is like a small uh annoyance that",
    "start": "1635559",
    "end": "1644760"
  },
  {
    "text": "we like you have to make sure all the folders uh till that socket is available",
    "start": "1644760",
    "end": "1651200"
  },
  {
    "text": "which also create like you know uh takes care of but this is also another one that you like that you try to restore",
    "start": "1651200",
    "end": "1657919"
  },
  {
    "text": "your process see the error and like you add these app specific uh workarounds as",
    "start": "1657919",
    "end": "1665200"
  },
  {
    "text": "configurations and the third one in the list was cgroup V2 files so in cgroup V2",
    "start": "1665720",
    "end": "1671559"
  },
  {
    "text": "in kubernetes at least in gke uh so some processes one to know",
    "start": "1671559",
    "end": "1678679"
  },
  {
    "text": "like current memory usage and how like what's the max so that they can optimize like like browsers and that has Dynamic",
    "start": "1678679",
    "end": "1686159"
  },
  {
    "text": "path of like that includes puu ID container ID which is going to change because we're starting another container",
    "start": "1686159",
    "end": "1693080"
  },
  {
    "text": "so what criek does is that it effectively second inspects the the",
    "start": "1693080",
    "end": "1699039"
  },
  {
    "text": "checkpoint second for this path calculates the New Path and then tell it to overwrite those paths inherit the",
    "start": "1699039",
    "end": "1705880"
  },
  {
    "text": "open file descriptor effectively uh so that it thinks that it's it's is still writing the same file but it actually",
    "start": "1705880",
    "end": "1711840"
  },
  {
    "text": "ends up in the wrong in the in the right path and the last one is um this is kind",
    "start": "1711840",
    "end": "1720120"
  },
  {
    "text": "of like a funny one so there's an event type called I notify in Linux that",
    "start": "1720120",
    "end": "1726120"
  },
  {
    "text": "processes can set up for a file so that they can get event when that file changes like time zone for example for",
    "start": "1726120",
    "end": "1733320"
  },
  {
    "text": "this specific browser um but overlay FS doesn't actually support it out of the",
    "start": "1733320",
    "end": "1739399"
  },
  {
    "text": "band so when you run these process in container you never get an event um but cre when it restores it it",
    "start": "1739399",
    "end": "1747039"
  },
  {
    "text": "it it's it tries to make sure that those I notifi handles are in place and that fails because overl FS doesn't support",
    "start": "1747039",
    "end": "1753559"
  },
  {
    "text": "them at this by default unless you configure them so this is effective like a small hack that we had to put in place",
    "start": "1753559",
    "end": "1761240"
  },
  {
    "text": "that we effectively delete that I notify before taking the checkpoint uh so that like you know of",
    "start": "1761240",
    "end": "1768240"
  },
  {
    "text": "course that requires the application to be able to handle this so there are like you know a couple",
    "start": "1768240",
    "end": "1773360"
  },
  {
    "text": "of other ones one was like a small bug inquery which is uh resolved in that PR",
    "start": "1773360",
    "end": "1779840"
  },
  {
    "text": "um and the last one which we uh we didn't really solve but just uh worked",
    "start": "1779840",
    "end": "1786519"
  },
  {
    "text": "around is that Port IPS change so you so creu is able to lock the network",
    "start": "1786519",
    "end": "1792600"
  },
  {
    "text": "connection and continue from where it was before without even dropping the connection but that that requires Port",
    "start": "1792600",
    "end": "1799320"
  },
  {
    "text": "IP uh uh the both ends of the TCP connection to have the same IP when you",
    "start": "1799320",
    "end": "1804559"
  },
  {
    "text": "restore as well which is not possible with pods because when you create a new pod it assigns a new pod IP so our app",
    "start": "1804559",
    "end": "1812399"
  },
  {
    "text": "had to be able to like you know handle the retri and reconnects when when the connection drops cool so let's see all that in",
    "start": "1812399",
    "end": "1819960"
  },
  {
    "text": "action and like you know with a real uh Port",
    "start": "1819960",
    "end": "1825240"
  },
  {
    "text": "playground um so this is an example test in our",
    "start": "1825320",
    "end": "1832440"
  },
  {
    "text": "platform um so same time",
    "start": "1832440",
    "end": "1838559"
  },
  {
    "text": "let's Okay so keep CTL get P so this is our playground system",
    "start": "1842399",
    "end": "1851398"
  },
  {
    "text": "um turn it is slow as usual okay so when I click on workflow",
    "start": "1851720",
    "end": "1858559"
  },
  {
    "text": "is going to create a new pod",
    "start": "1858559",
    "end": "1863840"
  },
  {
    "text": "okay keep CTL",
    "start": "1863840",
    "end": "1868720"
  },
  {
    "text": "logs this is in a real GK cluster uh not in a kind cluster um so I don't have to",
    "start": "1872480",
    "end": "1878639"
  },
  {
    "text": "switch to Ubuntu or anything um so the process is started bunch of processes",
    "start": "1878639",
    "end": "1884760"
  },
  {
    "text": "and you see that uh we're seeing this web page come up so I'm going to just like and stop",
    "start": "1884760",
    "end": "1891440"
  },
  {
    "text": "this execution and change the state here to",
    "start": "1891440",
    "end": "1897320"
  },
  {
    "text": "visit kubernetes",
    "start": "1897320",
    "end": "1901000"
  },
  {
    "text": "website okay so",
    "start": "1910679",
    "end": "1916840"
  },
  {
    "text": "um we have this uh pod it has a volume",
    "start": "1916840",
    "end": "1922200"
  },
  {
    "text": "mounted to it as persistent volume which which will have the checkpoint uh dump",
    "start": "1922200",
    "end": "1927639"
  },
  {
    "text": "tool so what I'm going to do is I am going to delete the",
    "start": "1927639",
    "end": "1933638"
  },
  {
    "text": "Pod going to delete the Pod and let's see in the logs received s term check",
    "start": "1935679",
    "end": "1941720"
  },
  {
    "text": "taking checkpoint and it took the checkpoint in and half second here connection dropped waiting so our",
    "start": "1941720",
    "end": "1948600"
  },
  {
    "text": "controller creates immediately a new pod with the same volume so when criek sees",
    "start": "1948600",
    "end": "1954480"
  },
  {
    "text": "that it's going to hopefully restore uh run cre",
    "start": "1954480",
    "end": "1961360"
  },
  {
    "text": "restore so let's see yeah so this is like an enable for uh debugging the cre",
    "start": "1963360",
    "end": "1969120"
  },
  {
    "text": "restore command that we we end up using which has like a bunch of uh the works",
    "start": "1969120",
    "end": "1974880"
  },
  {
    "text": "that we had well the demo gods are not with us",
    "start": "1974880",
    "end": "1983799"
  },
  {
    "text": "today let's",
    "start": "1986679",
    "end": "1989919"
  },
  {
    "text": "see",
    "start": "2006760",
    "end": "2009760"
  },
  {
    "text": "I think it's because the",
    "start": "2013480",
    "end": "2016760"
  },
  {
    "text": "internet yeah yeah I we're running out of time but um it actually",
    "start": "2026679",
    "end": "2032360"
  },
  {
    "text": "[Laughter] works",
    "start": "2032360",
    "end": "2039720"
  },
  {
    "text": "um thank [Applause]",
    "start": "2040080",
    "end": "2046320"
  },
  {
    "text": "you but yeah um that's kind of like you know that's been our journey to to get",
    "start": "2046320",
    "end": "2051520"
  },
  {
    "text": "it up and running um in in our GK setup um so there's another small tool",
    "start": "2051520",
    "end": "2057599"
  },
  {
    "text": "included called not State server which is uh what kek asked like you know hey",
    "start": "2057599",
    "end": "2062919"
  },
  {
    "text": "is this not shutting down like you know should I take the checkpoint or not uh otherwise we would end up like taking",
    "start": "2062919",
    "end": "2068960"
  },
  {
    "text": "checkpoint even if user aborts it um and the future plan is like our general role is we would like to",
    "start": "2068960",
    "end": "2075679"
  },
  {
    "text": "converge on the Upstream efforts as closely as possible that will reduce duplicated efforts and also as you can",
    "start": "2075679",
    "end": "2082040"
  },
  {
    "text": "see not all of them but some of the problems can be solved with like you know having doing all these things",
    "start": "2082040",
    "end": "2088398"
  },
  {
    "text": "outside the container much better um and we want to have more automation to",
    "start": "2088399",
    "end": "2094440"
  },
  {
    "text": "figure out app specific Works Chrome specifically is our next Target which is the browser that we that that is used",
    "start": "2094440",
    "end": "2101320"
  },
  {
    "text": "most in our tests making Creek more configurable for other use case as well",
    "start": "2101320",
    "end": "2106560"
  },
  {
    "text": "for example we have some works for X11 that may be some like a veil or gnome things that we need to do um and the",
    "start": "2106560",
    "end": "2113800"
  },
  {
    "text": "live migration without droing connection so that's actually possible with some cnis that you can assign the same port",
    "start": "2113800",
    "end": "2120400"
  },
  {
    "text": "IP to the uh new pod but we're using GK and that relies on celium so we're",
    "start": "2120400",
    "end": "2127280"
  },
  {
    "text": "looking for like you know for that c feature to land to see in that case it would be just like you know that vncb",
    "start": "2127280",
    "end": "2133480"
  },
  {
    "text": "would freeze for 10 seconds and then continue from where it was before and I would like to shout out to",
    "start": "2133480",
    "end": "2140680"
  },
  {
    "text": "creu maintainers they were they have been really really helpful uh to to get us unblocked they they were really good",
    "start": "2140680",
    "end": "2147400"
  },
  {
    "text": "people let's give them a clap for the awesome tool that they [Music]",
    "start": "2147400",
    "end": "2154510"
  },
  {
    "text": "did and yeah that's that's all I uh had to",
    "start": "2156640",
    "end": "2161800"
  },
  {
    "text": "say today um if you have any questions and you can leave feedback on this QR",
    "start": "2161800",
    "end": "2166839"
  },
  {
    "text": "code but thank you for attending",
    "start": "2166839",
    "end": "2171040"
  }
]